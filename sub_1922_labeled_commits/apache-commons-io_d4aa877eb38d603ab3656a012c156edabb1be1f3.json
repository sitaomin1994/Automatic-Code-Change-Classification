{"application": "apache-commons-io", "csha": "d4aa877eb38d603ab3656a012c156edabb1be1f3", "files": [{"DirectoryWalker_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 6", "operations": ["INS NullLiteral to ConstructorInvocation at 0", "INS PrefixExpression: - to ConstructorInvocation at 1", "INS TagElement to Javadoc at 0", "INS Block to MethodDeclaration at 3", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS TextElement: Construct an instance with no filtering and unlimited <i>depth</i>. to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS Modifier: protected to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SimpleName: DirectoryWalker to MethodDeclaration at 2", "INS ConstructorInvocation to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS Modifier: protected to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS TextElement: This implementation always returns <code>false</code>. to TagElement at 2", "INS TagElement: @return to Javadoc at 1", "INS TextElement: <p> to TagElement at 1", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS BooleanLiteral: false to ReturnStatement at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: isCancelled to MethodDeclaration at 3", "INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS Block to MethodDeclaration at 4", "INS TextElement:  true if the operation has been cancelled to TagElement: @return at 0", "INS TextElement: Indicates whether the operation has been cancelled or not. to TagElement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS SimpleName: file to TagElement: @param at 0", "INS TextElement: This implementation returns true, accepting the cancellation. to TagElement at 17", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS Modifier: protected to MethodDeclaration at 1", "INS TextElement: return file.isDirectory(); to TagElement at 8", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS TextElement:  true to accept the cancellation, false to reject it to TagElement: @return at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TextElement: protected boolean handleCancelled(File file, int depth, Collection results) { to TagElement at 7", "INS SimpleName: handleCancelled to MethodDeclaration at 3", "INS TextElement: <p> to TagElement at 13", "INS TextElement: Overridable callback method invoked when the operation is cancelled. to TagElement at 0", "INS TextElement:   the collection of result objects, may be updated to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 3", "INS TextElement: <p> to TagElement at 1", "INS SimpleName: depth to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 7", "INS SimpleType: File to SingleVariableDeclaration at 0", "INS SimpleName: results to SingleVariableDeclaration at 1", "INS TextElement: accepted or rejected. This could be useful if you need to finish processing to TagElement at 3", "INS Javadoc to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TextElement: For example, this only accepts the cancel when the current directory is complete: to TagElement at 5", "INS SimpleName: File to SimpleType: File at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS TextElement: <pre> to TagElement at 6", "INS TextElement:   the current directory level (starting directory = 0) to TagElement: @param at 1", "INS ReturnStatement to Block at 0", "INS TextElement: If you return true, then the whole operation is cancelled and no more event to TagElement at 11", "INS SimpleName: file to SingleVariableDeclaration at 1", "INS TextElement: If you return false, then normal processing will continue until the next time to TagElement at 14", "INS TagElement: @return to Javadoc at 4", "INS TextElement: </pre> to TagElement at 10", "INS TextElement: <p> to TagElement at 16", "INS SimpleName: depth to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 2", "INS TextElement: methods will be called. to TagElement at 12", "INS BooleanLiteral: true to ReturnStatement at 0", "INS TextElement: the <code>isCancelled()</code> method returns false. to TagElement at 15", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS TextElement: This method returns a boolean to indicate if the cancellation is being to TagElement at 2", "INS TextElement: all the files in a directory before accepting the cancellation request. to TagElement at 4", "INS TextElement: } to TagElement at 9", "INS SimpleName: results to TagElement: @param at 0", "INS SimpleType: Collection to SingleVariableDeclaration at 0", "INS TagElement: @param to Javadoc at 1", "INS TextElement:   the file about to be processed which may be a file or a directory to TagElement: @param at 1"]}, {"root": "UPDATE from void to boolean", "operations": ["UPD PrimitiveType: void from void to boolean", "UPD PrimitiveType: void from void to boolean"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: depth to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS TextElement: <h3>Cancellation</h3> to TagElement at 59", "operations": ["INS TextElement: <h3>Cancellation</h3> to TagElement at 59"]}, {"root": "INS TextElement: The DirectoryWalker contains some of the logic required for cancel processing. to TagElement at 60", "operations": ["INS TextElement: The DirectoryWalker contains some of the logic required for cancel processing. to TagElement at 60"]}, {"root": "INS TextElement: Subclasses must complete the implementation. to TagElement at 61", "operations": ["INS TextElement: Subclasses must complete the implementation. to TagElement at 61"]}, {"root": "INS TextElement: This is for performance and to ensure you think about the multihreaded implications. to TagElement at 62", "operations": ["INS TextElement: This is for performance and to ensure you think about the multihreaded implications. to TagElement at 62"]}, {"root": "INS TextElement: <p> to TagElement at 63", "operations": ["INS TextElement: <p> to TagElement at 63"]}, {"root": "INS TextElement: Before any processing occurs on each file or directory the to TagElement at 64", "operations": ["INS TextElement: Before any processing occurs on each file or directory the to TagElement at 64"]}, {"root": "INS TextElement: <code>isCancelled()</code> method is called. If it returns <code>true</code> to TagElement at 65", "operations": ["INS TextElement: <code>isCancelled()</code> method is called. If it returns <code>true</code> to TagElement at 65"]}, {"root": "INS TextElement: then <code>handleCancelled()<code> is called. This method can decide whether to TagElement at 66", "operations": ["INS TextElement: then <code>handleCancelled()<code> is called. This method can decide whether to TagElement at 66"]}, {"root": "INS TextElement: to accept or ignore the cancellation. If it accepts it then all further to TagElement at 67", "operations": ["INS TextElement: to accept or ignore the cancellation. If it accepts it then all further to TagElement at 67"]}, {"root": "INS TextElement: processing is skipped and the operation returns. If it rejects it then to TagElement at 68", "operations": ["INS TextElement: processing is skipped and the operation returns. If it rejects it then to TagElement at 68"]}, {"root": "INS TextElement: processing continues on as before. This is useful if a group of files has to TagElement at 69", "operations": ["INS TextElement: processing continues on as before. This is useful if a group of files has to TagElement at 69"]}, {"root": "INS TextElement: meaning and cancellation cannot occur in the middle of the group. to TagElement at 70", "operations": ["INS TextElement: meaning and cancellation cannot occur in the middle of the group. to TagElement at 70"]}, {"root": "INS TextElement: <p> to TagElement at 71", "operations": ["INS TextElement: <p> to TagElement at 71"]}, {"root": "INS TextElement: The default implementation of <code>isCancelled()</code> always to TagElement at 72", "operations": ["INS TextElement: The default implementation of <code>isCancelled()</code> always to TagElement at 72"]}, {"root": "INS TextElement: returns <code>false</code> and it is down to the implementation to TagElement at 73", "operations": ["INS TextElement: returns <code>false</code> and it is down to the implementation to TagElement at 73"]}, {"root": "INS TextElement: to fully implement the <code>isCancelled()</code> behaviour. to TagElement at 74", "operations": ["INS TextElement: to fully implement the <code>isCancelled()</code> behaviour. to TagElement at 74"]}, {"root": "INS TextElement: <p> to TagElement at 75", "operations": ["INS TextElement: <p> to TagElement at 75"]}, {"root": "INS TextElement: The following example uses the to TagElement at 76", "operations": ["INS TextElement: The following example uses the to TagElement at 76"]}, {"root": "INS TextElement: <a href=\"http://java.sun.com/docs/books/jls/second_edition/html/classes.doc.html#36930\"> to TagElement at 77", "operations": ["INS TextElement: <a href=\"http://java.sun.com/docs/books/jls/second_edition/html/classes.doc.html#36930\"> to TagElement at 77"]}, {"root": "INS TextElement: volatile</a> keyword to (hopefully) ensure it will work properly in to TagElement at 78", "operations": ["INS TextElement: volatile</a> keyword to (hopefully) ensure it will work properly in to TagElement at 78"]}, {"root": "INS TextElement: a multi-threaded environment. to TagElement at 79", "operations": ["INS TextElement: a multi-threaded environment. to TagElement at 79"]}, {"root": "INS TextElement: <pre> to TagElement at 80", "operations": ["INS TextElement: <pre> to TagElement at 80"]}, {"root": "INS TextElement: public class FooDirectoryWalker extends DirectoryWalker { to TagElement at 81", "operations": ["INS TextElement: public class FooDirectoryWalker extends DirectoryWalker { to TagElement at 81"]}, {"root": "INS TextElement: private volatile boolean cancelled = false; to TagElement at 82", "operations": ["INS TextElement: private volatile boolean cancelled = false; to TagElement at 82"]}, {"root": "INS TextElement: public void cancel() { to TagElement at 83", "operations": ["INS TextElement: public void cancel() { to TagElement at 83"]}, {"root": "INS TextElement: cancelled = true; to TagElement at 84", "operations": ["INS TextElement: cancelled = true; to TagElement at 84"]}, {"root": "INS TextElement: } to TagElement at 85", "operations": ["INS TextElement: } to TagElement at 85"]}, {"root": "INS TextElement: public boolean isCancelled() { to TagElement at 86", "operations": ["INS TextElement: public boolean isCancelled() { to TagElement at 86"]}, {"root": "INS TextElement: return cancelled; to TagElement at 87", "operations": ["INS TextElement: return cancelled; to TagElement at 87"]}, {"root": "INS TextElement: } to TagElement at 88", "operations": ["INS TextElement: } to TagElement at 88"]}, {"root": "INS TextElement: protected boolean handleCancelled(File file, int depth, Collection results) { to TagElement at 89", "operations": ["INS TextElement: protected boolean handleCancelled(File file, int depth, Collection results) { to TagElement at 89"]}, {"root": "INS TextElement: // implement any cancel processing here to TagElement at 90", "operations": ["INS TextElement: // implement any cancel processing here to TagElement at 90"]}, {"root": "INS TextElement: return true;  // accept cancellation to TagElement at 91", "operations": ["INS TextElement: return true;  // accept cancellation to TagElement at 91"]}, {"root": "INS TextElement: } to TagElement at 92", "operations": ["INS TextElement: } to TagElement at 92"]}, {"root": "INS TextElement: } to TagElement at 93", "operations": ["INS TextElement: } to TagElement at 93"]}, {"root": "INS TextElement: </pre> to TagElement at 94", "operations": ["INS TextElement: </pre> to TagElement at 94"]}, {"root": "INS TagElement: @return to Javadoc at 3", "operations": ["INS TagElement: @return to Javadoc at 3", "INS TextElement:  true if completed, false if cancelled to TagElement: @return at 0"]}, {"root": "INS TagElement: @throws to Javadoc at 4", "operations": ["INS TagElement: @throws to Javadoc at 4", "INS TextElement:  if the start directory is null to TagElement: @throws at 1", "INS SimpleName: NullPointerException to TagElement: @throws at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS BooleanLiteral: false to ReturnStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 1", "INS BooleanLiteral: false to InfixExpression: == at 1", "INS ReturnStatement to Block at 0"]}, {"root": "INS ReturnStatement to Block at 4", "operations": ["INS BooleanLiteral: true to ReturnStatement at 0", "INS ReturnStatement to Block at 4"]}, {"root": "INS TagElement: @return to Javadoc at 4", "operations": ["INS TextElement:  false if cancelled to TagElement: @return at 0", "INS TagElement: @return to Javadoc at 4"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS InfixExpression: && to IfStatement at 0", "INS SimpleName: isCancelled to MethodInvocation at 0", "INS SimpleName: depth to MethodInvocation at 2", "INS SimpleName: results to MethodInvocation at 3", "INS IfStatement to Block at 0", "INS SimpleName: handleCancelled to MethodInvocation at 0", "INS SimpleName: directory to MethodInvocation at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS MethodInvocation to InfixExpression: && at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to InfixExpression: && at 0", "INS ReturnStatement to Block at 0"]}, {"root": "INS ReturnStatement to Block at 2", "operations": ["INS ReturnStatement to Block at 2", "INS BooleanLiteral: true to ReturnStatement at 0"]}, {"root": "INS TagElement: @param to Javadoc at 2", "operations": ["INS SimpleName: depth to TagElement: @param at 0", "INS TextElement:   the current directory level (starting directory = 0) to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 2"]}, {"root": "UPDATE from   the directory to start from to   the directory to start from, not null", "operations": ["UPD TextElement:   the directory to start from from   the directory to start from to   the directory to start from, not null"]}, {"root": "UPDATE from   the directory to examine to   the directory to examine, not null", "operations": ["UPD TextElement:   the directory to examine from   the directory to examine to   the directory to examine, not null"]}, {"root": "MOVE from InfixExpression: ==", "operations": ["MOV MethodInvocation to InfixExpression: == at 0"]}, {"root": "INS Block to ForStatement at 3", "operations": ["INS Block to ForStatement at 3", "INS IfStatement to Block at 0", "INS Block to IfStatement at 2"]}, {"root": "INS SimpleName: childDepth to MethodInvocation at 2", "operations": ["INS SimpleName: childDepth to MethodInvocation at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS BooleanLiteral: false to ReturnStatement at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS InfixExpression: == to IfStatement at 0", "INS ReturnStatement to Block at 0", "INS BooleanLiteral: false to InfixExpression: == at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS MethodInvocation to InfixExpression: && at 0", "INS MethodInvocation to InfixExpression: && at 1", "INS SimpleName: isCancelled to MethodInvocation at 0", "INS SimpleName: results to MethodInvocation at 3", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: handleCancelled to MethodInvocation at 0", "INS SimpleName: childDepth to MethodInvocation at 2", "INS SimpleName: i to ArrayAccess at 1", "INS SimpleName: files to ArrayAccess at 0", "INS ArrayAccess to MethodInvocation at 1"]}, {"root": "MOVE from InfixExpression: ==", "operations": ["MOV MethodInvocation to InfixExpression: == at 0"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS BooleanLiteral: false to ReturnStatement at 0", "INS ReturnStatement to Block at 0"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"DirectoryWalker_diff": {"operations": ["Insert MethodDeclaration(142) into TypeDeclaration: class(659) at 6", "Insert MethodDeclaration(609) into TypeDeclaration: class(659) at 17", "Insert MethodDeclaration(658) into TypeDeclaration: class(659) at 18", "Insert Javadoc(134) into MethodDeclaration(142) at 0", "Insert Modifier: protected(135) into MethodDeclaration(142) at 1", "Insert SimpleName: DirectoryWalker(136) into MethodDeclaration(142) at 2", "Insert Block(141) into MethodDeclaration(142) at 3", "Update PrimitiveType: void(146) to boolean", "Update PrimitiveType: void(186) to boolean", "Insert SingleVariableDeclaration(542) into MethodDeclaration(548) at 5", "Insert Javadoc(602) into MethodDeclaration(609) at 0", "Insert Modifier: protected(603) into MethodDeclaration(609) at 1", "Insert PrimitiveType: boolean(604) into MethodDeclaration(609) at 2", "Insert SimpleName: isCancelled(605) into MethodDeclaration(609) at 3", "Insert Block(608) into MethodDeclaration(609) at 4", "Insert Javadoc(640) into MethodDeclaration(658) at 0", "Insert Modifier: protected(641) into MethodDeclaration(658) at 1", "Insert PrimitiveType: boolean(642) into MethodDeclaration(658) at 2", "Insert SimpleName: handleCancelled(643) into MethodDeclaration(658) at 3", "Insert SingleVariableDeclaration(647) into MethodDeclaration(658) at 4", "Insert SingleVariableDeclaration(650) into MethodDeclaration(658) at 5", "Insert SingleVariableDeclaration(654) into MethodDeclaration(658) at 6", "Insert Block(657) into MethodDeclaration(658) at 7", "Insert TextElement: <h3>Cancellation</h3>(68) into TagElement(104) at 59", "Insert TextElement: The DirectoryWalker contains some of the logic required for cancel processing.(69) into TagElement(104) at 60", "Insert TextElement: Subclasses must complete the implementation.(70) into TagElement(104) at 61", "Insert TextElement: This is for performance and to ensure you think about the multihreaded implications.(71) into TagElement(104) at 62", "Insert TextElement: <p>(72) into TagElement(104) at 63", "Insert TextElement: Before any processing occurs on each file or directory the(73) into TagElement(104) at 64", "Insert TextElement: <code>isCancelled()</code> method is called. If it returns <code>true</code>(74) into TagElement(104) at 65", "Insert TextElement: then <code>handleCancelled()<code> is called. This method can decide whether(75) into TagElement(104) at 66", "Insert TextElement: to accept or ignore the cancellation. If it accepts it then all further(76) into TagElement(104) at 67", "Insert TextElement: processing is skipped and the operation returns. If it rejects it then(77) into TagElement(104) at 68", "Insert TextElement: processing continues on as before. This is useful if a group of files has(78) into TagElement(104) at 69", "Insert TextElement: meaning and cancellation cannot occur in the middle of the group.(79) into TagElement(104) at 70", "Insert TextElement: <p>(80) into TagElement(104) at 71", "Insert TextElement: The default implementation of <code>isCancelled()</code> always(81) into TagElement(104) at 72", "Insert TextElement: returns <code>false</code> and it is down to the implementation(82) into TagElement(104) at 73", "Insert TextElement: to fully implement the <code>isCancelled()</code> behaviour.(83) into TagElement(104) at 74", "Insert TextElement: <p>(84) into TagElement(104) at 75", "Insert TextElement: The following example uses the(85) into TagElement(104) at 76", "Insert TextElement: <a href=\"http://java.sun.com/docs/books/jls/second_edition/html/classes.doc.html#36930\">(86) into TagElement(104) at 77", "Insert TextElement: volatile</a> keyword to (hopefully) ensure it will work properly in(87) into TagElement(104) at 78", "Insert TextElement: a multi-threaded environment.(88) into TagElement(104) at 79", "Insert TextElement: <pre>(89) into TagElement(104) at 80", "Insert TextElement: public class FooDirectoryWalker extends DirectoryWalker {(90) into TagElement(104) at 81", "Insert TextElement: private volatile boolean cancelled = false;(91) into TagElement(104) at 82", "Insert TextElement: public void cancel() {(92) into TagElement(104) at 83", "Insert TextElement: cancelled = true;(93) into TagElement(104) at 84", "Insert TextElement: }(94) into TagElement(104) at 85", "Insert TextElement: public boolean isCancelled() {(95) into TagElement(104) at 86", "Insert TextElement: return cancelled;(96) into TagElement(104) at 87", "Insert TextElement: }(97) into TagElement(104) at 88", "Insert TextElement: protected boolean handleCancelled(File file, int depth, Collection results) {(98) into TagElement(104) at 89", "Insert TextElement: // implement any cancel processing here(99) into TagElement(104) at 90", "Insert TextElement: return true;  // accept cancellation(100) into TagElement(104) at 91", "Insert TextElement: }(101) into TagElement(104) at 92", "Insert TextElement: }(102) into TagElement(104) at 93", "Insert TextElement: </pre>(103) into TagElement(104) at 94", "Insert TagElement(133) into Javadoc(134) at 0", "Insert ConstructorInvocation(140) into Block(141) at 0", "Insert TagElement: @return(192) into Javadoc(196) at 3", "Insert TagElement: @throws(195) into Javadoc(196) at 4", "Insert IfStatement(223) into Block(230) at 1", "Insert ReturnStatement(229) into Block(230) at 3", "Insert TagElement: @return(244) into Javadoc(245) at 4", "Insert IfStatement(271) into Block(395) at 0", "Insert ReturnStatement(394) into Block(395) at 2", "Insert TagElement: @param(528) into Javadoc(532) at 2", "Insert PrimitiveType: int(540) into SingleVariableDeclaration(542) at 0", "Insert SimpleName: depth(541) into SingleVariableDeclaration(542) at 1", "Insert TagElement(599) into Javadoc(602) at 0", "Insert TagElement: @return(601) into Javadoc(602) at 1", "Insert ReturnStatement(607) into Block(608) at 0", "Insert TagElement(628) into Javadoc(640) at 0", "Insert TagElement: @param(631) into Javadoc(640) at 1", "Insert TagElement: @param(634) into Javadoc(640) at 2", "Insert TagElement: @param(637) into Javadoc(640) at 3", "Insert TagElement: @return(639) into Javadoc(640) at 4", "Insert SimpleType: File(645) into SingleVariableDeclaration(647) at 0", "Insert SimpleName: file(646) into SingleVariableDeclaration(647) at 1", "Insert PrimitiveType: int(648) into SingleVariableDeclaration(650) at 0", "Insert SimpleName: depth(649) into SingleVariableDeclaration(650) at 1", "Insert SimpleType: Collection(652) into SingleVariableDeclaration(654) at 0", "Insert SimpleName: results(653) into SingleVariableDeclaration(654) at 1", "Insert ReturnStatement(656) into Block(657) at 0", "Insert TextElement: Construct an instance with no filtering and unlimited <i>depth</i>.(132) into TagElement(133) at 0", "Insert NullLiteral(137) into ConstructorInvocation(140) at 0", "Insert PrefixExpression: -(139) into ConstructorInvocation(140) at 1", "Update TextElement:   the directory to start from(139) to   the directory to start from, not null", "Insert TextElement:  true if completed, false if cancelled(191) into TagElement: @return(192) at 0", "Insert SimpleName: NullPointerException(193) into TagElement: @throws(195) at 0", "Insert TextElement:  if the start directory is null(194) into TagElement: @throws(195) at 1", "Insert InfixExpression: ==(219) into IfStatement(223) at 0", "Insert Block(222) into IfStatement(223) at 1", "Insert BooleanLiteral: true(228) into ReturnStatement(229) at 0", "Update TextElement:   the directory to examine(176) to   the directory to examine, not null", "Insert TextElement:  false if cancelled(243) into TagElement: @return(244) at 0", "Insert InfixExpression: &&(267) into IfStatement(271) at 0", "Insert Block(270) into IfStatement(271) at 1", "Insert BooleanLiteral: true(393) into ReturnStatement(394) at 0", "Insert SimpleName: depth(526) into TagElement: @param(528) at 0", "Insert TextElement:   the current directory level (starting directory = 0)(527) into TagElement: @param(528) at 1", "Insert TextElement: Indicates whether the operation has been cancelled or not.(596) into TagElement(599) at 0", "Insert TextElement: <p>(597) into TagElement(599) at 1", "Insert TextElement: This implementation always returns <code>false</code>.(598) into TagElement(599) at 2", "Insert TextElement:  true if the operation has been cancelled(600) into TagElement: @return(601) at 0", "Insert BooleanLiteral: false(606) into ReturnStatement(607) at 0", "Insert TextElement: Overridable callback method invoked when the operation is cancelled.(610) into TagElement(628) at 0", "Insert TextElement: <p>(611) into TagElement(628) at 1", "Insert TextElement: This method returns a boolean to indicate if the cancellation is being(612) into TagElement(628) at 2", "Insert TextElement: accepted or rejected. This could be useful if you need to finish processing(613) into TagElement(628) at 3", "Insert TextElement: all the files in a directory before accepting the cancellation request.(614) into TagElement(628) at 4", "Insert TextElement: For example, this only accepts the cancel when the current directory is complete:(615) into TagElement(628) at 5", "Insert TextElement: <pre>(616) into TagElement(628) at 6", "Insert TextElement: protected boolean handleCancelled(File file, int depth, Collection results) {(617) into TagElement(628) at 7", "Insert TextElement: return file.isDirectory();(618) into TagElement(628) at 8", "Insert TextElement: }(619) into TagElement(628) at 9", "Insert TextElement: </pre>(620) into TagElement(628) at 10", "Insert TextElement: If you return true, then the whole operation is cancelled and no more event(621) into TagElement(628) at 11", "Insert TextElement: methods will be called.(622) into TagElement(628) at 12", "Insert TextElement: <p>(623) into TagElement(628) at 13", "Insert TextElement: If you return false, then normal processing will continue until the next time(624) into TagElement(628) at 14", "Insert TextElement: the <code>isCancelled()</code> method returns false.(625) into TagElement(628) at 15", "Insert TextElement: <p>(626) into TagElement(628) at 16", "Insert TextElement: This implementation returns true, accepting the cancellation.(627) into TagElement(628) at 17", "Insert SimpleName: file(629) into TagElement: @param(631) at 0", "Insert TextElement:   the file about to be processed which may be a file or a directory(630) into TagElement: @param(631) at 1", "Insert SimpleName: depth(632) into TagElement: @param(634) at 0", "Insert TextElement:   the current directory level (starting directory = 0)(633) into TagElement: @param(634) at 1", "Insert SimpleName: results(635) into TagElement: @param(637) at 0", "Insert TextElement:   the collection of result objects, may be updated(636) into TagElement: @param(637) at 1", "Insert TextElement:  true to accept the cancellation, false to reject it(638) into TagElement: @return(639) at 0", "Insert SimpleName: File(644) into SimpleType: File(645) at 0", "Insert SimpleName: Collection(651) into SimpleType: Collection(652) at 0", "Insert BooleanLiteral: true(655) into ReturnStatement(656) at 0", "Insert NumberLiteral: 1(138) into PrefixExpression: -(139) at 0", "Move MethodInvocation(165) into InfixExpression: ==(219) at 0", "Insert BooleanLiteral: false(218) into InfixExpression: ==(219) at 1", "Insert ReturnStatement(221) into Block(222) at 0", "Insert MethodInvocation(261) into InfixExpression: &&(267) at 0", "Insert MethodInvocation(266) into InfixExpression: &&(267) at 1", "Insert ReturnStatement(269) into Block(270) at 0", "Insert BooleanLiteral: false(220) into ReturnStatement(221) at 0", "Insert SimpleName: isCancelled(260) into MethodInvocation(261) at 0", "Insert SimpleName: handleCancelled(262) into MethodInvocation(266) at 0", "Insert SimpleName: directory(263) into MethodInvocation(266) at 1", "Insert SimpleName: depth(264) into MethodInvocation(266) at 2", "Insert SimpleName: results(265) into MethodInvocation(266) at 3", "Insert BooleanLiteral: false(268) into ReturnStatement(269) at 0", "Insert Block(379) into ForStatement(380) at 3", "Insert SimpleName: childDepth(321) into MethodInvocation(323) at 2", "Insert IfStatement(378) into Block(379) at 0", "Move MethodInvocation(266) into IfStatement(378) at 0", "Move Block(275) into IfStatement(378) at 1", "Insert Block(377) into IfStatement(378) at 2", "Insert IfStatement(353) into Block(354) at 0", "Move IfStatement(285) into Block(377) at 0", "Move ExpressionStatement(283) into Block(377) at 1", "Insert InfixExpression: ==(349) into IfStatement(353) at 0", "Insert Block(352) into IfStatement(353) at 1", "Insert InfixExpression: &&(364) into IfStatement(368) at 0", "Move MethodInvocation(273) into InfixExpression: ==(349) at 0", "Insert BooleanLiteral: false(348) into InfixExpression: ==(349) at 1", "Insert ReturnStatement(351) into Block(352) at 0", "Insert MethodInvocation(356) into InfixExpression: &&(364) at 0", "Insert MethodInvocation(363) into InfixExpression: &&(364) at 1", "Insert ReturnStatement(366) into Block(367) at 0", "Insert BooleanLiteral: false(350) into ReturnStatement(351) at 0", "Insert SimpleName: isCancelled(355) into MethodInvocation(356) at 0", "Insert SimpleName: handleCancelled(357) into MethodInvocation(363) at 0", "Insert ArrayAccess(360) into MethodInvocation(363) at 1", "Insert SimpleName: childDepth(361) into MethodInvocation(363) at 2", "Insert SimpleName: results(362) into MethodInvocation(363) at 3", "Insert BooleanLiteral: false(365) into ReturnStatement(366) at 0", "Insert SimpleName: files(358) into ArrayAccess(360) at 0", "Insert SimpleName: i(359) into ArrayAccess(360) at 1", "Delete ExpressionStatement(166)", "Delete ExpressionStatement(274)", "Delete Block(286)"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}