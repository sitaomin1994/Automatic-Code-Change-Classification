{"application": "google-closure-templates", "csha": "926bb1b8d60b7b9fcef4c5f761ce052a90260f05", "files": [{"ConditionalBranches_cluster": {"actions": [{"root": "UPDATE from Removes optional tags from all branches.  to Removes optional tags from all branches. This method should only be called for removing the", "operations": ["UPD TextElement: Removes optional tags from all branches.  from Removes optional tags from all branches.  to Removes optional tags from all branches. This method should only be called for removing the"]}, {"root": "INS TextElement: optional open tags from the top of the open tag stack. to TagElement at 1", "operations": ["INS TextElement: optional open tags from the top of the open tag stack. to TagElement at 1"]}, {"root": "INS Block to EnhancedForStatement at 2", "operations": ["INS Block to EnhancedForStatement at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleName: HtmlTagEntry to MethodInvocation at 0", "operations": ["INS SimpleName: HtmlTagEntry to MethodInvocation at 0"]}, {"root": "UPDATE from peekFirst to popOptionalTags", "operations": ["UPD SimpleName: peekFirst from peekFirst to popOptionalTags"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: deque", "DEL Assignment: =", "DEL SimpleName: branch", "DEL SimpleName: entry", "DEL MethodInvocation", "DEL SimpleName: pollFirst", "DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL InfixExpression: &&", "DEL InfixExpression: !=", "DEL SimpleType: HtmlTagEntry", "DEL Block", "DEL VariableDeclarationFragment", "DEL WhileStatement", "DEL SimpleName: entry", "DEL NullLiteral", "DEL SimpleName: entry", "DEL Block", "DEL SimpleName: isDefinitelyOptional", "DEL SimpleName: HtmlTagEntry", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: entry"]}]}}, {"ConditionalBranches_diff": {"operations": ["Update TextElement: Removes optional tags from all branches. (471) to Removes optional tags from all branches. This method should only be called for removing the", "Insert TextElement: optional open tags from the top of the open tag stack.(472) into TagElement(473) at 1", "Insert Block(489) into EnhancedForStatement(490) at 2", "Move ExpressionStatement(505) into Block(489) at 0", "Move MethodInvocation(488) into ExpressionStatement(488) at 0", "Move MethodInvocation(486) into MethodInvocation(487) at 2", "Insert SimpleName: HtmlTagEntry(482) into MethodInvocation(487) at 0", "Update SimpleName: peekFirst(487) to popOptionalTags", "Delete SimpleName: entry(498)", "Delete SimpleName: branch(499)", "Delete SimpleName: deque(500)", "Delete MethodInvocation(501)", "Delete SimpleName: pollFirst(502)", "Delete MethodInvocation(503)", "Delete Assignment: =(504)", "Delete SimpleName: HtmlTagEntry(481)", "Delete SimpleType: HtmlTagEntry(482)", "Delete SimpleName: entry(483)", "Delete VariableDeclarationFragment(489)", "Delete VariableDeclarationStatement(490)", "Delete SimpleName: entry(491)", "Delete NullLiteral(492)", "Delete InfixExpression: !=(493)", "Delete SimpleName: entry(494)", "Delete SimpleName: isDefinitelyOptional(495)", "Delete MethodInvocation(496)", "Delete InfixExpression: &&(497)", "Delete Block(506)", "Delete WhileStatement(507)", "Delete Block(508)"]}}, {"HtmlTagEntry_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS SimpleName: entry to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS TextElement: deque. to TagElement at 1", "INS ExpressionStatement to Block at 0", "INS PrefixExpression: ! to WhileStatement at 0", "INS SimpleName: entry to MethodInvocation at 0", "INS SimpleName: peekFirst to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: entry to MethodInvocation at 0", "INS SimpleName: ArrayDeque to SimpleType: ArrayDeque at 0", "INS SimpleType: HtmlTagEntry to MethodDeclaration at 2", "INS Javadoc to MethodDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: HtmlTagEntry to SimpleType: HtmlTagEntry at 0", "INS SimpleName: entry to Assignment: = at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: entry to VariableDeclarationFragment at 0", "INS SimpleName: getBranches to MethodInvocation at 1", "INS NullLiteral to VariableDeclarationFragment at 1", "INS Modifier: static to MethodDeclaration at 1", "INS SimpleName: deque to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: entry to ReturnStatement at 0", "INS SimpleName: pollFirst to MethodInvocation at 1", "INS SimpleName: entry to MethodInvocation at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: HtmlTagEntry to SimpleType: HtmlTagEntry at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS Block to WhileStatement at 1", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: popOptionalTags to MethodInvocation at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: HtmlTagEntry to SimpleType: HtmlTagEntry at 0", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS SimpleName: deque to MethodInvocation at 0", "INS SimpleName: pollFirst to MethodInvocation at 1", "INS ContinueStatement to Block at 1", "INS SimpleName: getBranches to MethodInvocation at 1", "INS SimpleName: deque to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS VariableDeclarationStatement to Block at 0", "INS TextElement: A helper method that recursively pops optional start tags from a stack. Returns the top of the to TagElement at 0", "INS ContinueStatement to Block at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: hasTagName to MethodInvocation at 1", "INS WhileStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS BreakStatement to Block at 2", "INS TagElement to Javadoc at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS ReturnStatement to Block at 2", "INS ExpressionStatement to Block at 0", "INS ParameterizedType: ArrayDeque<HtmlTagEntry> to SingleVariableDeclaration at 0", "INS SimpleName: deque to MethodInvocation at 0", "INS SimpleName: deque to SingleVariableDeclaration at 1", "INS SimpleType: ArrayDeque to ParameterizedType: ArrayDeque<HtmlTagEntry> at 0", "INS SimpleType: HtmlTagEntry to ParameterizedType: ArrayDeque<HtmlTagEntry> at 1", "INS IfStatement to Block at 1", "INS SimpleName: isDefinitelyOptional to MethodInvocation at 1", "INS SimpleName: popOptionalTags to MethodDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS SimpleType: HtmlTagEntry to VariableDeclarationStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "INS SimpleName: popOptionalTags to MethodInvocation at 0", "operations": ["INS SimpleName: popOptionalTags to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS SimpleName: popOptionalTags to MethodInvocation at 0", "operations": ["INS SimpleName: popOptionalTags to MethodInvocation at 0"]}, {"root": "DEL SimpleName: peekFirst", "operations": ["DEL SimpleName: peekFirst"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: isEmpty", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: isEmpty", "DEL MethodInvocation", "DEL SimpleName: openStack", "DEL MethodInvocation", "DEL MethodInvocation", "DEL WhileStatement", "DEL Block", "DEL PrefixExpression: !", "DEL IfStatement", "DEL SimpleName: isDefinitelyOptional", "DEL ContinueStatement", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: popOptionalTags", "DEL SimpleName: getBranches", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: openStack", "DEL SimpleName: pollFirst", "DEL Block", "DEL SimpleName: hasTagName", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: openTag", "DEL SimpleName: openTag", "DEL SimpleName: pollFirst", "DEL ContinueStatement", "DEL Block", "DEL SimpleName: getBranches", "DEL BreakStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: openTag", "DEL PrefixExpression: !", "DEL MethodInvocation", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: openTag", "DEL SimpleName: openStack"]}, {"root": "DEL SimpleName: peekFirst", "operations": ["DEL SimpleName: peekFirst"]}, {"root": "DEL WhileStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: openTag", "DEL SimpleName: openTag", "DEL SimpleName: isDefinitelyOptional", "DEL SimpleName: hasEmptyBranches", "DEL InfixExpression: !=", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: openStack", "DEL InfixExpression: ||", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ParenthesizedExpression", "DEL NullLiteral", "DEL WhileStatement", "DEL MethodInvocation", "DEL InfixExpression: &&", "DEL SimpleName: openTag", "DEL SimpleName: openTag", "DEL SimpleName: peekFirst", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: pollFirst", "DEL SimpleName: openStack"]}]}}, {"HtmlTagEntry_diff": {"operations": ["Insert MethodDeclaration(521) into TypeDeclaration: class(1379) at 21", "Insert Javadoc(453) into MethodDeclaration(521) at 0", "Insert Modifier: static(454) into MethodDeclaration(521) at 1", "Insert SimpleType: HtmlTagEntry(456) into MethodDeclaration(521) at 2", "Insert SimpleName: popOptionalTags(457) into MethodDeclaration(521) at 3", "Insert SingleVariableDeclaration(464) into MethodDeclaration(521) at 4", "Insert Block(520) into MethodDeclaration(521) at 5", "Insert TagElement(452) into Javadoc(453) at 0", "Insert SimpleName: HtmlTagEntry(455) into SimpleType: HtmlTagEntry(456) at 0", "Insert ParameterizedType: ArrayDeque<HtmlTagEntry>(462) into SingleVariableDeclaration(464) at 0", "Insert SimpleName: deque(463) into SingleVariableDeclaration(464) at 1", "Insert VariableDeclarationStatement(470) into Block(520) at 0", "Insert WhileStatement(517) into Block(520) at 1", "Insert ReturnStatement(519) into Block(520) at 2", "Insert TextElement: A helper method that recursively pops optional start tags from a stack. Returns the top of the(450) into TagElement(452) at 0", "Insert TextElement: deque.(451) into TagElement(452) at 1", "Insert SimpleType: ArrayDeque(459) into ParameterizedType: ArrayDeque<HtmlTagEntry>(462) at 0", "Insert SimpleType: HtmlTagEntry(461) into ParameterizedType: ArrayDeque<HtmlTagEntry>(462) at 1", "Insert SimpleType: HtmlTagEntry(466) into VariableDeclarationStatement(470) at 0", "Insert VariableDeclarationFragment(469) into VariableDeclarationStatement(470) at 1", "Insert PrefixExpression: !(474) into WhileStatement(517) at 0", "Insert Block(516) into WhileStatement(517) at 1", "Insert SimpleName: entry(518) into ReturnStatement(519) at 0", "Insert SimpleName: ArrayDeque(458) into SimpleType: ArrayDeque(459) at 0", "Insert SimpleName: HtmlTagEntry(460) into SimpleType: HtmlTagEntry(461) at 0", "Insert SimpleName: HtmlTagEntry(465) into SimpleType: HtmlTagEntry(466) at 0", "Insert SimpleName: entry(467) into VariableDeclarationFragment(469) at 0", "Insert NullLiteral(468) into VariableDeclarationFragment(469) at 1", "Insert MethodInvocation(473) into PrefixExpression: !(474) at 0", "Insert ExpressionStatement(480) into Block(516) at 0", "Insert IfStatement(514) into Block(516) at 1", "Insert BreakStatement(515) into Block(516) at 2", "Insert Block(424) into IfStatement(425) at 1", "Insert SimpleName: deque(471) into MethodInvocation(473) at 0", "Insert SimpleName: isEmpty(472) into MethodInvocation(473) at 1", "Insert Assignment: =(479) into ExpressionStatement(480) at 0", "Insert MethodInvocation(483) into IfStatement(514) at 0", "Insert Block(489) into IfStatement(514) at 1", "Insert IfStatement(513) into IfStatement(514) at 2", "Insert SimpleName: popOptionalTags(560) into MethodInvocation(562) at 0", "Move ExpressionStatement(427) into Block(424) at 0", "Insert SimpleName: entry(475) into Assignment: =(479) at 0", "Insert MethodInvocation(478) into Assignment: =(479) at 1", "Insert SimpleName: entry(481) into MethodInvocation(483) at 0", "Insert SimpleName: isDefinitelyOptional(482) into MethodInvocation(483) at 1", "Insert ExpressionStatement(487) into Block(489) at 0", "Insert ContinueStatement(488) into Block(489) at 1", "Insert PrefixExpression: !(493) into IfStatement(513) at 0", "Insert Block(512) into IfStatement(513) at 1", "Insert SimpleName: deque(476) into MethodInvocation(478) at 0", "Insert SimpleName: peekFirst(477) into MethodInvocation(478) at 1", "Insert MethodInvocation(486) into ExpressionStatement(487) at 0", "Insert MethodInvocation(492) into PrefixExpression: !(493) at 0", "Insert ExpressionStatement(499) into Block(512) at 0", "Insert IfStatement(511) into Block(512) at 1", "Insert SimpleName: deque(484) into MethodInvocation(486) at 0", "Insert SimpleName: pollFirst(485) into MethodInvocation(486) at 1", "Insert SimpleName: entry(490) into MethodInvocation(492) at 0", "Insert SimpleName: hasTagName(491) into MethodInvocation(492) at 1", "Insert MethodInvocation(498) into ExpressionStatement(499) at 0", "Insert MethodInvocation(504) into IfStatement(511) at 0", "Insert Block(510) into IfStatement(511) at 1", "Insert SimpleName: popOptionalTags(419) into MethodInvocation(421) at 0", "Insert MethodInvocation(496) into MethodInvocation(498) at 0", "Insert SimpleName: popOptionalTags(497) into MethodInvocation(498) at 1", "Insert MethodInvocation(502) into MethodInvocation(504) at 0", "Insert SimpleName: isEmpty(503) into MethodInvocation(504) at 1", "Insert ExpressionStatement(508) into Block(510) at 0", "Insert ContinueStatement(509) into Block(510) at 1", "Insert SimpleName: entry(494) into MethodInvocation(496) at 0", "Insert SimpleName: getBranches(495) into MethodInvocation(496) at 1", "Insert SimpleName: entry(500) into MethodInvocation(502) at 0", "Insert SimpleName: getBranches(501) into MethodInvocation(502) at 1", "Insert MethodInvocation(507) into ExpressionStatement(508) at 0", "Insert SimpleName: deque(505) into MethodInvocation(507) at 0", "Insert SimpleName: pollFirst(506) into MethodInvocation(507) at 1", "Delete SimpleName: peekFirst(424)", "Delete SimpleName: openStack(418)", "Delete SimpleName: isEmpty(419)", "Delete MethodInvocation(420)", "Delete PrefixExpression: !(421)", "Delete SimpleName: openTag(428)", "Delete SimpleName: isDefinitelyOptional(429)", "Delete MethodInvocation(430)", "Delete SimpleName: openStack(431)", "Delete SimpleName: pollFirst(432)", "Delete MethodInvocation(433)", "Delete ExpressionStatement(434)", "Delete ContinueStatement(435)", "Delete Block(436)", "Delete SimpleName: openTag(437)", "Delete SimpleName: hasTagName(438)", "Delete MethodInvocation(439)", "Delete PrefixExpression: !(440)", "Delete SimpleName: openTag(441)", "Delete SimpleName: getBranches(442)", "Delete MethodInvocation(443)", "Delete SimpleName: popOptionalTags(444)", "Delete MethodInvocation(445)", "Delete ExpressionStatement(446)", "Delete SimpleName: openTag(447)", "Delete SimpleName: getBranches(448)", "Delete MethodInvocation(449)", "Delete SimpleName: isEmpty(450)", "Delete MethodInvocation(451)", "Delete SimpleName: openStack(452)", "Delete SimpleName: pollFirst(453)", "Delete MethodInvocation(454)", "Delete ExpressionStatement(455)", "Delete ContinueStatement(456)", "Delete Block(457)", "Delete IfStatement(458)", "Delete Block(459)", "Delete IfStatement(460)", "Delete IfStatement(461)", "Delete BreakStatement(462)", "Delete Block(463)", "Delete WhileStatement(464)", "Delete Block(465)", "Delete SimpleName: peekFirst(530)", "Delete SimpleName: openTag(534)", "Delete NullLiteral(535)", "Delete InfixExpression: !=(536)", "Delete SimpleName: openTag(537)", "Delete SimpleName: isDefinitelyOptional(538)", "Delete MethodInvocation(539)", "Delete SimpleName: openTag(540)", "Delete SimpleName: hasEmptyBranches(541)", "Delete MethodInvocation(542)", "Delete InfixExpression: ||(543)", "Delete ParenthesizedExpression(544)", "Delete InfixExpression: &&(545)", "Delete SimpleName: openTag(546)", "Delete SimpleName: openStack(547)", "Delete SimpleName: peekFirst(548)", "Delete MethodInvocation(549)", "Delete Assignment: =(550)", "Delete ExpressionStatement(551)", "Delete SimpleName: openStack(552)", "Delete SimpleName: pollFirst(553)", "Delete MethodInvocation(554)", "Delete ExpressionStatement(555)", "Delete Block(556)", "Delete WhileStatement(557)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}