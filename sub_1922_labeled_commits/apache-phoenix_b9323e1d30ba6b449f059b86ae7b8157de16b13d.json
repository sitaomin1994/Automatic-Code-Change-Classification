{"application": "apache-phoenix", "csha": "b9323e1d30ba6b449f059b86ae7b8157de16b13d", "files": [{"UpsertCompiler_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 80", "operations": ["INS ImportDeclaration to CompilationUnit at 80", "INS QualifiedName: org.apache.phoenix.schema.types.PSmallint to ImportDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 14", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 14", "INS SimpleName: numSplColumns to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from private to public", "operations": ["UPD Modifier: private from private to public"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 11", "operations": ["INS SimpleName: prefixSysColValues to SingleVariableDeclaration at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 11"]}, {"root": "INS ForStatement to Block at 3", "operations": ["INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to ForStatement at 3", "INS ForStatement to Block at 3", "INS SimpleName: pkValues to ArrayAccess at 0", "INS PostfixExpression: ++ to ForStatement at 2", "INS InfixExpression: < to ForStatement at 1", "INS SimpleName: numSplColumns to InfixExpression: < at 1", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS ArrayAccess to Assignment: = at 0", "INS SimpleName: i to ArrayAccess at 1", "INS SimpleName: i to InfixExpression: < at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 6", "operations": ["INS ConditionalExpression to ParenthesizedExpression at 0", "INS SimpleName: tableRef to MethodInvocation at 0", "INS SimpleName: getTable to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS NumberLiteral: 1 to ConditionalExpression at 1", "INS InfixExpression: != to ConditionalExpression at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS NumberLiteral: 0 to ConditionalExpression at 2", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ConditionalExpression at 0", "INS SimpleName: getViewIndexId to MethodInvocation at 1", "INS NumberLiteral: 1 to ConditionalExpression at 1", "INS NumberLiteral: 0 to ConditionalExpression at 2", "INS ParenthesizedExpression to InfixExpression: + at 1", "INS ConditionalExpression to ParenthesizedExpression at 0", "INS SimpleName: isMultiTenant to MethodInvocation at 1", "INS SimpleName: numSplColumns to VariableDeclarationFragment at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 6", "INS SimpleName: getTable to MethodInvocation at 1", "INS ParenthesizedExpression to InfixExpression: + at 0", "INS SimpleName: tableRef to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 8", "operations": ["INS Block to IfStatement at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS InfixExpression: < to ForStatement at 1", "INS MethodInvocation to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS NullLiteral to InfixExpression: != at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS SimpleName: getTable to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: tableRef to MethodInvocation at 0", "INS Block to ForStatement at 3", "INS IfStatement to Block at 8", "INS MethodInvocation to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ArrayAccess to Assignment: += at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getTable to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: toBytes to MethodInvocation at 1", "INS PostfixExpression: ++ to ForStatement at 2", "INS SimpleName: k to VariableDeclarationFragment at 0", "INS ConditionalExpression to ParenthesizedExpression at 0", "INS InfixExpression: != to ConditionalExpression at 0", "INS SimpleName: k to ArrayAccess at 1", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS PostfixExpression: ++ to ArrayAccess at 1", "INS SimpleName: getBytes to MethodInvocation at 1", "INS SimpleName: values to ArrayAccess at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getTable to MethodInvocation at 1", "INS SimpleName: tableRef to MethodInvocation at 0", "INS SimpleName: getViewIndexId to MethodInvocation at 1", "INS SimpleName: isMultiTenant to MethodInvocation at 1", "INS SimpleName: connection to MethodInvocation at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS Block to IfStatement at 1", "INS SimpleName: tableRef to MethodInvocation at 0", "INS QualifiedName: PSmallint.INSTANCE to MethodInvocation at 0", "INS ParenthesizedExpression to InfixExpression: + at 1", "INS ArrayAccess to Assignment: = at 0", "INS InfixExpression: + to ParenthesizedExpression at 0", "INS ParenthesizedExpression to Assignment: += at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS IfStatement to Block at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: i to InfixExpression: + at 0", "INS NumberLiteral: 1 to ConditionalExpression at 1", "INS MethodInvocation to Assignment: = at 1", "INS PostfixExpression: ++ to ArrayAccess at 1", "INS SimpleName: getTenantId to MethodInvocation at 1", "INS SimpleName: tableRef to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS IfStatement to Block at 2", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: getBucketNum to MethodInvocation at 1", "INS SimpleName: pkSlotIndexes to ArrayAccess at 0", "INS SimpleName: k to PostfixExpression: ++ at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: values to ArrayAccess at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: getViewIndexId to MethodInvocation at 1", "INS ForStatement to Block at 3", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS ArrayAccess to Assignment: = at 0", "INS NumberLiteral: 0 to ConditionalExpression at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getTable to MethodInvocation at 1", "INS QualifiedName: pkSlotIndexes.length to InfixExpression: < at 1", "INS SimpleName: prefixSysColValues to IfStatement at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS Assignment: += to ExpressionStatement at 0", "INS SimpleName: k to InfixExpression: < at 0"]}, {"root": "MOVE from ForStatement", "operations": ["MOV VariableDeclarationExpression to ForStatement at 0"]}, {"root": "INS VariableDeclarationExpression to ForStatement at 0", "operations": ["INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: numSplColumns to VariableDeclarationFragment at 1", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS SimpleName: j to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 2", "INS VariableDeclarationExpression to ForStatement at 0"]}, {"root": "INS PostfixExpression: ++ to ForStatement at 2", "operations": ["INS SimpleName: j to PostfixExpression: ++ at 0", "INS PostfixExpression: ++ to ForStatement at 2"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: byte[][] to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from i to j", "operations": ["UPD SimpleName: i from i to j", "UPD SimpleName: i from i to j", "UPD SimpleName: i from i to j"]}, {"root": "MOVE from ArrayCreation", "operations": ["MOV ArrayType: byte[][] to ArrayCreation at 0"]}, {"root": "INS InfixExpression: + to ArrayCreation at 1", "operations": ["INS QualifiedName: columnIndexes.length to InfixExpression: + at 0", "INS InfixExpression: + to ArrayCreation at 1", "INS SimpleName: numSplColumns to InfixExpression: + at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV ArrayAccess to Assignment: = at 1"]}, {"root": "INS ArrayAccess to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: j to ArrayAccess at 1", "INS SimpleName: values to ArrayAccess at 0", "INS ArrayAccess to VariableDeclarationFragment at 1"]}, {"root": "INS BooleanLiteral: false to MethodInvocation at 8", "operations": ["INS BooleanLiteral: false to MethodInvocation at 8"]}, {"root": "INS PostfixExpression: ++ to ForStatement at 2", "operations": ["INS SimpleName: j to PostfixExpression: ++ at 0", "INS PostfixExpression: ++ to ForStatement at 2"]}, {"root": "INS VariableDeclarationFragment to VariableDeclarationExpression at 2", "operations": ["INS SimpleName: j to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 2", "INS SimpleName: numSplColumns to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: numSplColumns to MethodInvocation at 11", "operations": ["INS SimpleName: numSplColumns to MethodInvocation at 11"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 11", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 11"]}, {"root": "INS BooleanLiteral: false to MethodInvocation at 8", "operations": ["INS BooleanLiteral: false to MethodInvocation at 8"]}, {"root": "DEL QualifiedName: columnIndexes.length", "operations": ["DEL QualifiedName: columnIndexes.length"]}]}}, {"UpsertCompiler_diff": {"operations": ["Insert ImportDeclaration(161) into CompilationUnit(5917) at 80", "Insert QualifiedName: org.apache.phoenix.schema.types.PSmallint(160) into ImportDeclaration(161) at 0", "Insert SingleVariableDeclaration(243) into MethodDeclaration(572) at 14", "Update Modifier: private(543) to public", "Insert SingleVariableDeclaration(609) into MethodDeclaration(1168) at 11", "Insert PrimitiveType: int(241) into SingleVariableDeclaration(243) at 0", "Insert SimpleName: numSplColumns(242) into SingleVariableDeclaration(243) at 1", "Insert ForStatement(315) into Block(571) at 3", "Insert PrimitiveType: boolean(607) into SingleVariableDeclaration(609) at 0", "Insert SimpleName: prefixSysColValues(608) into SingleVariableDeclaration(609) at 1", "Insert VariableDeclarationStatement(689) into Block(1167) at 6", "Insert IfStatement(784) into Block(1167) at 8", "Move VariableDeclarationExpression(311) into ForStatement(315) at 0", "Insert InfixExpression: <(303) into ForStatement(315) at 1", "Insert PostfixExpression: ++(305) into ForStatement(315) at 2", "Insert Block(314) into ForStatement(315) at 3", "Insert VariableDeclarationExpression(339) into ForStatement(450) at 0", "Insert PostfixExpression: ++(344) into ForStatement(450) at 2", "Insert PrimitiveType: int(665) into VariableDeclarationStatement(689) at 0", "Insert VariableDeclarationFragment(688) into VariableDeclarationStatement(689) at 1", "Move ArrayType: byte[][](640) into VariableDeclarationStatement(704) at 0", "Insert SimpleName: prefixSysColValues(705) into IfStatement(784) at 0", "Insert Block(783) into IfStatement(784) at 1", "Insert SimpleName: i(301) into InfixExpression: <(303) at 0", "Insert SimpleName: numSplColumns(302) into InfixExpression: <(303) at 1", "Insert SimpleName: i(304) into PostfixExpression: ++(305) at 0", "Insert ExpressionStatement(313) into Block(314) at 0", "Insert PrimitiveType: int(332) into VariableDeclarationExpression(339) at 0", "Insert VariableDeclarationFragment(335) into VariableDeclarationExpression(339) at 1", "Insert VariableDeclarationFragment(338) into VariableDeclarationExpression(339) at 2", "Update SimpleName: i(312) to j", "Insert SimpleName: j(343) into PostfixExpression: ++(344) at 0", "Insert SimpleName: numSplColumns(666) into VariableDeclarationFragment(688) at 0", "Insert InfixExpression: +(687) into VariableDeclarationFragment(688) at 1", "Insert VariableDeclarationStatement(710) into Block(783) at 0", "Insert IfStatement(728) into Block(783) at 1", "Insert IfStatement(751) into Block(783) at 2", "Insert ForStatement(782) into Block(783) at 3", "Insert Assignment: =(312) into ExpressionStatement(313) at 0", "Insert SimpleName: i(333) into VariableDeclarationFragment(335) at 0", "Insert NumberLiteral: 0(334) into VariableDeclarationFragment(335) at 1", "Insert SimpleName: j(336) into VariableDeclarationFragment(338) at 0", "Insert SimpleName: numSplColumns(337) into VariableDeclarationFragment(338) at 1", "Insert ParenthesizedExpression(675) into InfixExpression: +(687) at 0", "Insert ParenthesizedExpression(686) into InfixExpression: +(687) at 1", "Move ArrayType: byte[][](635) into ArrayCreation(702) at 0", "Insert InfixExpression: +(701) into ArrayCreation(702) at 1", "Insert PrimitiveType: int(706) into VariableDeclarationStatement(710) at 0", "Insert VariableDeclarationFragment(709) into VariableDeclarationStatement(710) at 1", "Insert MethodInvocation(715) into IfStatement(728) at 0", "Insert Block(727) into IfStatement(728) at 1", "Insert InfixExpression: !=(735) into IfStatement(751) at 0", "Insert Block(750) into IfStatement(751) at 1", "Insert VariableDeclarationExpression(756) into ForStatement(782) at 0", "Insert InfixExpression: <(759) into ForStatement(782) at 1", "Insert PostfixExpression: ++(761) into ForStatement(782) at 2", "Insert Block(781) into ForStatement(782) at 3", "Insert ArrayAccess(308) into Assignment: =(312) at 0", "Move ArrayAccess(323) into Assignment: =(312) at 1", "Insert ArrayAccess(353) into VariableDeclarationFragment(354) at 1", "Insert ConditionalExpression(674) into ParenthesizedExpression(675) at 0", "Insert ConditionalExpression(685) into ParenthesizedExpression(686) at 0", "Insert QualifiedName: columnIndexes.length(699) into InfixExpression: +(701) at 0", "Insert SimpleName: numSplColumns(700) into InfixExpression: +(701) at 1", "Insert SimpleName: i(707) into VariableDeclarationFragment(709) at 0", "Insert NumberLiteral: 0(708) into VariableDeclarationFragment(709) at 1", "Insert MethodInvocation(713) into MethodInvocation(715) at 0", "Insert SimpleName: isMultiTenant(714) into MethodInvocation(715) at 1", "Insert ExpressionStatement(726) into Block(727) at 0", "Insert MethodInvocation(733) into InfixExpression: !=(735) at 0", "Insert NullLiteral(734) into InfixExpression: !=(735) at 1", "Insert ExpressionStatement(749) into Block(750) at 0", "Insert PrimitiveType: int(752) into VariableDeclarationExpression(756) at 0", "Insert VariableDeclarationFragment(755) into VariableDeclarationExpression(756) at 1", "Insert SimpleName: k(757) into InfixExpression: <(759) at 0", "Insert QualifiedName: pkSlotIndexes.length(758) into InfixExpression: <(759) at 1", "Insert SimpleName: k(760) into PostfixExpression: ++(761) at 0", "Insert ExpressionStatement(780) into Block(781) at 0", "Insert BooleanLiteral: false(1302) into MethodInvocation(1303) at 8", "Insert SimpleName: pkValues(306) into ArrayAccess(308) at 0", "Insert SimpleName: i(307) into ArrayAccess(308) at 1", "Insert SimpleName: values(351) into ArrayAccess(353) at 0", "Insert SimpleName: j(352) into ArrayAccess(353) at 1", "Insert MethodInvocation(671) into ConditionalExpression(674) at 0", "Insert NumberLiteral: 1(672) into ConditionalExpression(674) at 1", "Insert NumberLiteral: 0(673) into ConditionalExpression(674) at 2", "Insert InfixExpression: !=(682) into ConditionalExpression(685) at 0", "Insert NumberLiteral: 1(683) into ConditionalExpression(685) at 1", "Insert NumberLiteral: 0(684) into ConditionalExpression(685) at 2", "Insert SimpleName: tableRef(711) into MethodInvocation(713) at 0", "Insert SimpleName: getTable(712) into MethodInvocation(713) at 1", "Insert Assignment: =(725) into ExpressionStatement(726) at 0", "Insert MethodInvocation(731) into MethodInvocation(733) at 0", "Insert SimpleName: getViewIndexId(732) into MethodInvocation(733) at 1", "Insert Assignment: =(748) into ExpressionStatement(749) at 0", "Insert SimpleName: k(753) into VariableDeclarationFragment(755) at 0", "Insert NumberLiteral: 0(754) into VariableDeclarationFragment(755) at 1", "Insert Assignment: +=(779) into ExpressionStatement(780) at 0", "Insert PostfixExpression: ++(909) into ForStatement(1093) at 2", "Insert MethodInvocation(669) into MethodInvocation(671) at 0", "Insert SimpleName: isMultiTenant(670) into MethodInvocation(671) at 1", "Insert MethodInvocation(680) into InfixExpression: !=(682) at 0", "Insert NullLiteral(681) into InfixExpression: !=(682) at 1", "Insert ArrayAccess(719) into Assignment: =(725) at 0", "Insert MethodInvocation(724) into Assignment: =(725) at 1", "Insert SimpleName: tableRef(729) into MethodInvocation(731) at 0", "Insert SimpleName: getTable(730) into MethodInvocation(731) at 1", "Insert ArrayAccess(739) into Assignment: =(748) at 0", "Insert MethodInvocation(747) into Assignment: =(748) at 1", "Insert ArrayAccess(764) into Assignment: +=(779) at 0", "Insert ParenthesizedExpression(778) into Assignment: +=(779) at 1", "Insert VariableDeclarationFragment(903) into VariableDeclarationExpression(904) at 2", "Update SimpleName: i(762) to j", "Insert SimpleName: j(908) into PostfixExpression: ++(909) at 0", "Insert SimpleName: numSplColumns(1105) into MethodInvocation(1106) at 11", "Insert SimpleName: tableRef(667) into MethodInvocation(669) at 0", "Insert SimpleName: getTable(668) into MethodInvocation(669) at 1", "Insert MethodInvocation(678) into MethodInvocation(680) at 0", "Insert SimpleName: getViewIndexId(679) into MethodInvocation(680) at 1", "Insert SimpleName: values(716) into ArrayAccess(719) at 0", "Insert PostfixExpression: ++(718) into ArrayAccess(719) at 1", "Insert MethodInvocation(722) into MethodInvocation(724) at 0", "Insert SimpleName: getBytes(723) into MethodInvocation(724) at 1", "Insert SimpleName: values(736) into ArrayAccess(739) at 0", "Insert PostfixExpression: ++(738) into ArrayAccess(739) at 1", "Insert QualifiedName: PSmallint.INSTANCE(740) into MethodInvocation(747) at 0", "Insert SimpleName: toBytes(741) into MethodInvocation(747) at 1", "Insert MethodInvocation(746) into MethodInvocation(747) at 2", "Insert SimpleName: pkSlotIndexes(762) into ArrayAccess(764) at 0", "Insert SimpleName: k(763) into ArrayAccess(764) at 1", "Insert InfixExpression: +(777) into ParenthesizedExpression(778) at 0", "Insert SimpleName: j(901) into VariableDeclarationFragment(903) at 0", "Insert SimpleName: numSplColumns(902) into VariableDeclarationFragment(903) at 1", "Insert NumberLiteral: 0(5207) into MethodInvocation(5208) at 11", "Insert SimpleName: tableRef(676) into MethodInvocation(678) at 0", "Insert SimpleName: getTable(677) into MethodInvocation(678) at 1", "Insert SimpleName: i(717) into PostfixExpression: ++(718) at 0", "Insert SimpleName: connection(720) into MethodInvocation(722) at 0", "Insert SimpleName: getTenantId(721) into MethodInvocation(722) at 1", "Insert SimpleName: i(737) into PostfixExpression: ++(738) at 0", "Insert MethodInvocation(744) into MethodInvocation(746) at 0", "Insert SimpleName: getViewIndexId(745) into MethodInvocation(746) at 1", "Insert SimpleName: i(765) into InfixExpression: +(777) at 0", "Insert ParenthesizedExpression(776) into InfixExpression: +(777) at 1", "Insert SimpleName: tableRef(742) into MethodInvocation(744) at 0", "Insert SimpleName: getTable(743) into MethodInvocation(744) at 1", "Insert ConditionalExpression(775) into ParenthesizedExpression(776) at 0", "Update SimpleName: i(939) to j", "Insert InfixExpression: !=(772) into ConditionalExpression(775) at 0", "Insert NumberLiteral: 1(773) into ConditionalExpression(775) at 1", "Insert NumberLiteral: 0(774) into ConditionalExpression(775) at 2", "Insert MethodInvocation(770) into InfixExpression: !=(772) at 0", "Insert NullLiteral(771) into InfixExpression: !=(772) at 1", "Insert BooleanLiteral: false(3918) into MethodInvocation(3919) at 8", "Insert MethodInvocation(768) into MethodInvocation(770) at 0", "Insert SimpleName: getBucketNum(769) into MethodInvocation(770) at 1", "Insert SimpleName: tableRef(766) into MethodInvocation(768) at 0", "Insert SimpleName: getTable(767) into MethodInvocation(768) at 1", "Delete QualifiedName: columnIndexes.length(641)"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}