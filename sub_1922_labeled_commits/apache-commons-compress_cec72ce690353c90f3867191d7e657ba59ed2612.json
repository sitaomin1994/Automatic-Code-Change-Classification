{"application": "apache-commons-compress", "csha": "cec72ce690353c90f3867191d7e657ba59ed2612", "files": [{"FallbackZipEncoding_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.compress.archivers.zip", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.nio.ByteBuffer", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL ClassInstanceCreation", "DEL Dimension", "DEL Modifier: final", "DEL IfStatement", "DEL SimpleName: charsetName", "DEL SimpleName: Simple8BitZipEnoding", "DEL Modifier: public", "DEL MarkerAnnotation", "DEL InfixExpression: ==", "DEL SimpleName: charsetName", "DEL Block", "DEL SimpleName: ByteBuffer", "DEL SimpleName: Override", "DEL SingleVariableDeclaration", "DEL Modifier: final", "DEL TagElement: @code", "DEL MethodInvocation", "DEL TextElement: marks leading to unreadable ZIP entries on some operating", "DEL SingleVariableDeclaration", "DEL SimpleName: ZipEncoding", "DEL SimpleName: data", "DEL SimpleName: String", "DEL MethodRef", "DEL ReturnStatement", "DEL SimpleType: java.lang.String", "DEL TextElement:  null", "DEL SimpleName: wrap", "DEL Modifier: final", "DEL QualifiedName: org.apache.commons.compress.archivers.zip.ZipEncoding", "DEL FieldAccess", "DEL TagElement: @see", "DEL NullLiteral", "DEL Modifier: final", "DEL ThisExpression", "DEL ArrayType: byte[]", "DEL MethodRefParameter", "DEL TextElement:  The name of the charset or ", "DEL PrimitiveType: byte", "DEL TextElement:  nor ", "DEL SimpleName: IOException", "DEL BooleanLiteral: true", "DEL MethodInvocation", "DEL SimpleName: charsetName", "DEL Assignment: =", "DEL ReturnStatement", "DEL Modifier: private", "DEL MarkerAnnotation", "DEL SimpleType: IOException", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: encode", "DEL MethodDeclaration", "DEL SimpleName: String", "DEL TextElement: <p>The methods of this class are reentrant.</p>", "DEL QualifiedName: java.lang.String", "DEL TextElement: available.</p>", "DEL QualifiedName: org.apache.commons.compress.archivers.zip.ZipEncoding", "DEL Block", "DEL SimpleName: decode", "DEL SimpleType: String", "DEL TagElement", "DEL SimpleType: String", "DEL SimpleName: ByteBuffer", "DEL TextElement: <p>This implementation is not suitable for encodings other than", "DEL SimpleName: canEncode", "DEL TextElement:  for", "DEL PrimitiveType: byte", "DEL SimpleName: String", "DEL Modifier: final", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL ReturnStatement", "DEL ClassInstanceCreation", "DEL FieldAccess", "DEL Javadoc", "DEL Javadoc", "DEL TagElement: @see", "DEL MethodRef", "DEL SimpleType: java.lang.String", "DEL QualifiedName: java.lang.String", "DEL SimpleName: data", "DEL SimpleName: data", "DEL SimpleName: FallbackZipEncoding", "DEL PrimitiveType: boolean", "DEL SimpleName: charsetName", "DEL TextElement: <p>Furthermore this implementation is unable to tell whether a", "DEL ThisExpression", "DEL SimpleName: FallbackZipEncoding", "DEL SimpleName: String", "DEL SimpleType: String", "DEL TagElement: @link", "DEL SimpleName: FallbackZipEncoding", "DEL MethodRef", "DEL SimpleName: String", "DEL SimpleName: name", "DEL ReturnStatement", "DEL FieldAccess", "DEL TextElement: A fallback ZipEncoding, which uses a java.io means to encode names.", "DEL Javadoc", "DEL TextElement:  is", "DEL Javadoc", "DEL Modifier: public", "DEL SimpleType: String", "DEL MethodRefParameter", "DEL ThisExpression", "DEL Modifier: public", "DEL SimpleName: wrap", "DEL FieldAccess", "DEL TagElement: @Immutable", "DEL FieldAccess", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL MarkerAnnotation", "DEL NullLiteral", "DEL SimpleType: IOException", "DEL SimpleType: String", "DEL SimpleName: charsetName", "DEL TagElement: @param", "DEL InfixExpression: ==", "DEL MethodDeclaration", "DEL SimpleName: charsetName", "DEL TextElement: the platform's default character set.", "DEL Block", "DEL SimpleName: charsetName", "DEL SimpleName: decode", "DEL TextElement: Construct a fallback zip encoding, which uses the given charset.", "DEL TextElement: given name can be safely encoded or not.</p>", "DEL Modifier: public", "DEL Javadoc", "DEL SimpleName: charsetName", "DEL FieldAccess", "DEL TextElement: systems.</p>", "DEL TextElement: Construct a fallback zip encoding, which uses the platform's", "DEL TagElement: @link", "DEL TextElement: UTF-8, because java.io encodes unmappable character as question", "DEL Block", "DEL SimpleType: ZipEncoding", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: name", "DEL TextElement: default charset.", "DEL TextElement: neither ", "DEL Block", "DEL NullLiteral", "DEL SimpleName: ByteBuffer", "DEL SimpleName: getBytes", "DEL ThisExpression", "DEL TextElement: <p>This implementation acts as a last resort implementation, when", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL Assignment: =", "DEL SimpleName: canEncode", "DEL ExpressionStatement", "DEL ThisExpression", "DEL SimpleName: String", "DEL ArrayType: byte[]", "DEL SimpleName: name", "DEL TagElement: @see", "DEL TagElement", "DEL Block", "DEL FieldDeclaration", "DEL SimpleName: encode", "DEL Modifier: public", "DEL QualifiedName: org.apache.commons.compress.archivers.zip.ZipEncoding", "DEL SimpleName: charsetName", "DEL SimpleName: NioZipEncoding", "DEL MethodInvocation", "DEL MethodRefParameter", "DEL Dimension", "DEL SimpleName: charsetName", "DEL SimpleName: getBytes", "DEL SimpleName: name", "DEL SingleVariableDeclaration", "DEL SimpleName: IOException", "DEL Javadoc", "DEL TypeDeclaration: class", "DEL ThisExpression", "DEL SimpleName: Override", "DEL SingleVariableDeclaration", "DEL SimpleType: ByteBuffer", "DEL SimpleType: String", "DEL TagElement", "DEL Block"]}]}}, {"FallbackZipEncoding_diff": {"operations": ["Delete QualifiedName: org.apache.commons.compress.archivers.zip(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.nio.ByteBuffer(4)", "Delete ImportDeclaration(5)", "Delete TextElement: A fallback ZipEncoding, which uses a java.io means to encode names.(6)", "Delete TextElement: <p>This implementation is not suitable for encodings other than(7)", "Delete TextElement: UTF-8, because java.io encodes unmappable character as question(8)", "Delete TextElement: marks leading to unreadable ZIP entries on some operating(9)", "Delete TextElement: systems.</p>(10)", "Delete TextElement: <p>Furthermore this implementation is unable to tell whether a(11)", "Delete TextElement: given name can be safely encoded or not.</p>(12)", "Delete TextElement: <p>This implementation acts as a last resort implementation, when(13)", "Delete TextElement: neither (14)", "Delete SimpleName: Simple8BitZipEnoding(15)", "Delete TagElement: @link(16)", "Delete TextElement:  nor (17)", "Delete SimpleName: NioZipEncoding(18)", "Delete TagElement: @link(19)", "Delete TextElement:  is(20)", "Delete TextElement: available.</p>(21)", "Delete TextElement: <p>The methods of this class are reentrant.</p>(22)", "Delete TagElement(23)", "Delete TagElement: @Immutable(24)", "Delete Javadoc(25)", "Delete SimpleName: FallbackZipEncoding(26)", "Delete SimpleName: ZipEncoding(27)", "Delete SimpleType: ZipEncoding(28)", "Delete Modifier: private(29)", "Delete Modifier: final(30)", "Delete SimpleName: String(31)", "Delete SimpleType: String(32)", "Delete SimpleName: charsetName(33)", "Delete VariableDeclarationFragment(34)", "Delete FieldDeclaration(35)", "Delete TextElement: Construct a fallback zip encoding, which uses the platform's(36)", "Delete TextElement: default charset.(37)", "Delete TagElement(38)", "Delete Javadoc(39)", "Delete Modifier: public(40)", "Delete SimpleName: FallbackZipEncoding(41)", "Delete ThisExpression(42)", "Delete SimpleName: charsetName(43)", "Delete FieldAccess(44)", "Delete NullLiteral(45)", "Delete Assignment: =(46)", "Delete ExpressionStatement(47)", "Delete Block(48)", "Delete MethodDeclaration(49)", "Delete TextElement: Construct a fallback zip encoding, which uses the given charset.(50)", "Delete TagElement(51)", "Delete SimpleName: charsetName(52)", "Delete TextElement:  The name of the charset or (53)", "Delete TextElement:  null(54)", "Delete TagElement: @code(55)", "Delete TextElement:  for(56)", "Delete TextElement: the platform's default character set.(57)", "Delete TagElement: @param(58)", "Delete Javadoc(59)", "Delete Modifier: public(60)", "Delete SimpleName: FallbackZipEncoding(61)", "Delete Modifier: final(62)", "Delete SimpleName: String(63)", "Delete SimpleType: String(64)", "Delete SimpleName: charsetName(65)", "Delete SingleVariableDeclaration(66)", "Delete ThisExpression(67)", "Delete SimpleName: charsetName(68)", "Delete FieldAccess(69)", "Delete SimpleName: charsetName(70)", "Delete Assignment: =(71)", "Delete ExpressionStatement(72)", "Delete Block(73)", "Delete MethodDeclaration(74)", "Delete QualifiedName: org.apache.commons.compress.archivers.zip.ZipEncoding(75)", "Delete SimpleName: canEncode(76)", "Delete QualifiedName: java.lang.String(77)", "Delete SimpleType: java.lang.String(78)", "Delete MethodRefParameter(79)", "Delete MethodRef(80)", "Delete TagElement: @see(81)", "Delete Javadoc(82)", "Delete SimpleName: Override(83)", "Delete MarkerAnnotation(84)", "Delete Modifier: public(85)", "Delete PrimitiveType: boolean(86)", "Delete SimpleName: canEncode(87)", "Delete Modifier: final(88)", "Delete SimpleName: String(89)", "Delete SimpleType: String(90)", "Delete SimpleName: name(91)", "Delete SingleVariableDeclaration(92)", "Delete BooleanLiteral: true(93)", "Delete ReturnStatement(94)", "Delete Block(95)", "Delete MethodDeclaration(96)", "Delete QualifiedName: org.apache.commons.compress.archivers.zip.ZipEncoding(97)", "Delete SimpleName: encode(98)", "Delete QualifiedName: java.lang.String(99)", "Delete SimpleType: java.lang.String(100)", "Delete MethodRefParameter(101)", "Delete MethodRef(102)", "Delete TagElement: @see(103)", "Delete Javadoc(104)", "Delete SimpleName: Override(105)", "Delete MarkerAnnotation(106)", "Delete Modifier: public(107)", "Delete SimpleName: ByteBuffer(108)", "Delete SimpleType: ByteBuffer(109)", "Delete SimpleName: encode(110)", "Delete Modifier: final(111)", "Delete SimpleName: String(112)", "Delete SimpleType: String(113)", "Delete SimpleName: name(114)", "Delete SingleVariableDeclaration(115)", "Delete SimpleName: IOException(116)", "Delete SimpleType: IOException(117)", "Delete ThisExpression(118)", "Delete SimpleName: charsetName(119)", "Delete FieldAccess(120)", "Delete NullLiteral(121)", "Delete InfixExpression: ==(122)", "Delete SimpleName: ByteBuffer(123)", "Delete SimpleName: wrap(124)", "Delete SimpleName: name(125)", "Delete SimpleName: getBytes(126)", "Delete MethodInvocation(127)", "Delete MethodInvocation(128)", "Delete ReturnStatement(129)", "Delete Block(130)", "Delete IfStatement(131)", "Delete SimpleName: ByteBuffer(132)", "Delete SimpleName: wrap(133)", "Delete SimpleName: name(134)", "Delete SimpleName: getBytes(135)", "Delete ThisExpression(136)", "Delete SimpleName: charsetName(137)", "Delete FieldAccess(138)", "Delete MethodInvocation(139)", "Delete MethodInvocation(140)", "Delete ReturnStatement(141)", "Delete Block(142)", "Delete MethodDeclaration(143)", "Delete QualifiedName: org.apache.commons.compress.archivers.zip.ZipEncoding(144)", "Delete SimpleName: decode(145)", "Delete PrimitiveType: byte(146)", "Delete Dimension(147)", "Delete ArrayType: byte[](148)", "Delete MethodRefParameter(149)", "Delete MethodRef(150)", "Delete TagElement: @see(151)", "Delete Javadoc(152)", "Delete SimpleName: Override(153)", "Delete MarkerAnnotation(154)", "Delete Modifier: public(155)", "Delete SimpleName: String(156)", "Delete SimpleType: String(157)", "Delete SimpleName: decode(158)", "Delete Modifier: final(159)", "Delete PrimitiveType: byte(160)", "Delete Dimension(161)", "Delete ArrayType: byte[](162)", "Delete SimpleName: data(163)", "Delete SingleVariableDeclaration(164)", "Delete SimpleName: IOException(165)", "Delete SimpleType: IOException(166)", "Delete ThisExpression(167)", "Delete SimpleName: charsetName(168)", "Delete FieldAccess(169)", "Delete NullLiteral(170)", "Delete InfixExpression: ==(171)", "Delete SimpleName: String(172)", "Delete SimpleType: String(173)", "Delete SimpleName: data(174)", "Delete ClassInstanceCreation(175)", "Delete ReturnStatement(176)", "Delete Block(177)", "Delete IfStatement(178)", "Delete SimpleName: String(179)", "Delete SimpleType: String(180)", "Delete SimpleName: data(181)", "Delete ThisExpression(182)", "Delete SimpleName: charsetName(183)", "Delete FieldAccess(184)", "Delete ClassInstanceCreation(185)", "Delete ReturnStatement(186)", "Delete Block(187)", "Delete MethodDeclaration(188)", "Delete TypeDeclaration: class(189)"]}}, {"Simple8BitZipEncoding_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.compress.archivers.zip", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.nio.ByteBuffer", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.ArrayList", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Collections"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.List", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL IfStatement", "DEL VariableDeclarationFragment", "DEL TagElement: @return", "DEL IfStatement", "DEL InfixExpression: >", "DEL Block", "DEL Javadoc", "DEL SimpleName: out", "DEL NumberLiteral: 1", "DEL NumberLiteral: 128", "DEL SimpleName: b", "DEL SimpleType: Simple8BitChar", "DEL PrimitiveType: boolean", "DEL WhileStatement", "DEL VariableDeclarationExpression", "DEL SimpleName: Simple8BitChar", "DEL SimpleName: i", "DEL NullLiteral", "DEL SingleVariableDeclaration", "DEL SimpleName: ByteBuffer", "DEL VariableDeclarationFragment", "DEL TextElement: Pushes the encoded form of the given character to the given byte buffer.", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: code", "DEL MethodInvocation", "DEL SimpleName: length", "DEL MarkerAnnotation", "DEL CastExpression", "DEL ReturnStatement", "DEL TextElement: <li>All byte codes from 0x80 to 0xff are mapped to a unique unicode", "DEL VariableDeclarationExpression", "DEL IfStatement", "DEL ExpressionStatement", "DEL PrefixExpression: ++", "DEL SimpleName: canEncodeChar", "DEL SimpleName: ArrayList", "DEL NumberLiteral: 2", "DEL ArrayAccess", "DEL TagElement: @see", "DEL TagElement: @see", "DEL PrefixExpression: ++", "DEL FieldAccess", "DEL PrimitiveType: char", "DEL SimpleName: List", "DEL SimpleName: put", "DEL SimpleType: Simple8BitChar", "DEL VariableDeclarationFragment", "DEL SimpleType: String", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL InfixExpression: ==", "DEL SimpleName: i", "DEL SimpleName: get", "DEL SingleVariableDeclaration", "DEL SimpleName: i", "DEL TextElement: byte buffer. ", "DEL TagElement", "DEL TagElement: @return", "DEL InfixExpression: <", "DEL TextElement: <p>The methods of this class are reentrant.</p>", "DEL MethodRefParameter", "DEL SimpleName: toHexString", "DEL ExpressionStatement", "DEL NumberLiteral: 0xff", "DEL SimpleName: ByteBuffer", "DEL SimpleName: r", "DEL Assignment: =", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ReturnStatement", "DEL FieldDeclaration", "DEL SimpleName: temp", "DEL SimpleName: i1", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL PrimitiveType: byte", "DEL SimpleName: pushEncodedChar", "DEL SimpleName: decode", "DEL TagElement: @param", "DEL Modifier: final", "DEL ThisExpression", "DEL Javadoc", "DEL SimpleName: limit", "DEL InfixExpression: ==", "DEL Block", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL TagElement: @param", "DEL InfixExpression: +", "DEL SimpleName: name", "DEL NumberLiteral: 128", "DEL MethodInvocation", "DEL TextElement:  A unicode character in the range from 0x0080 to 0x7f00", "DEL VariableDeclarationFragment", "DEL InfixExpression: /", "DEL SingleVariableDeclaration", "DEL SimpleName: Simple8BitChar", "DEL SimpleName: m", "DEL TextElement:  Whether the given unicode character is covered by this encoding.", "DEL SimpleName: out", "DEL MethodInvocation", "DEL TextElement:  null", "DEL BooleanLiteral: true", "DEL SimpleName: m", "DEL QualifiedName: a.unicode", "DEL SimpleName: Object", "DEL Block", "DEL SimpleName: Simple8BitChar", "DEL VariableDeclarationStatement", "DEL ReturnStatement", "DEL ReturnStatement", "DEL Dimension", "DEL Block", "DEL ArrayType: byte[]", "DEL SimpleType: Simple8BitChar", "DEL Assignment: =", "DEL InfixExpression: &", "DEL TextElement: byte values 0x00 to 0x7f.</li>", "DEL SimpleType: ArrayList", "DEL ThisExpression", "DEL TextElement:  value is returned, if this character is not", "DEL Modifier: final", "DEL SimpleName: out", "DEL InfixExpression: +", "DEL Assignment: =", "DEL SimpleName: i", "DEL SimpleType: ByteBuffer", "DEL ThisExpression", "DEL CastExpression", "DEL ReturnStatement", "DEL ArrayType: char[]", "DEL MethodRefParameter", "DEL Modifier: private", "DEL InfixExpression: <", "DEL NullLiteral", "DEL TagElement: @code", "DEL SimpleName: name", "DEL NumberLiteral: 0", "DEL PrimitiveType: char", "DEL SimpleName: encodeHighChar", "DEL SimpleName: r", "DEL PrimitiveType: char", "DEL Dimension", "DEL SimpleName: decodeByte", "DEL MethodRef", "DEL SimpleName: put", "DEL InfixExpression: +", "DEL SimpleName: c", "DEL MethodDeclaration", "DEL SimpleName: unicode", "DEL TypeDeclaration: class", "DEL SimpleName: List", "DEL SimpleName: i", "DEL Block", "DEL ThisExpression", "DEL SimpleName: c", "DEL SimpleName: data", "DEL SingleVariableDeclaration", "DEL TextElement:  Whether the given unicode character is covered by this encoding.", "DEL ClassInstanceCreation", "DEL TextElement:  The character to encode.", "DEL PrimitiveType: int", "DEL TextElement:  The associated character value.", "DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: <", "DEL FieldAccess", "DEL InfixExpression: +", "DEL SimpleType: Simple8BitChar", "DEL Assignment: =", "DEL MethodDeclaration", "DEL IfStatement", "DEL FieldAccess", "DEL MarkerAnnotation", "DEL QualifiedName: data.length", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: Simple8BitChar", "DEL Block", "DEL ExpressionStatement", "DEL Block", "DEL QualifiedName: org.apache.commons.compress.archivers.zip.ZipEncoding", "DEL SimpleName: String", "DEL NumberLiteral: 0", "DEL TextElement: implementation, Cp437 and Cp850.</p>", "DEL SimpleName: unicode", "DEL NumberLiteral: 0xffff", "DEL ForStatement", "DEL ArrayCreation", "DEL TypeDeclaration: class", "DEL SimpleName: name", "DEL PrimitiveType: char", "DEL TagElement: @Immutable", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Javadoc", "DEL MethodInvocation", "DEL SimpleName: length", "DEL SimpleName: highChars", "DEL MethodInvocation", "DEL SimpleName: size", "DEL InfixExpression: <", "DEL TextElement: A character entity, which is put to the reverse mapping table", "DEL PrimitiveType: int", "DEL Modifier: final", "DEL SimpleName: c", "DEL SimpleType: String", "DEL SimpleName: c", "DEL VariableDeclarationFragment", "DEL TextElement: 128 chars.", "DEL MarkerAnnotation", "DEL Block", "DEL SimpleName: out", "DEL SimpleName: pushEncodedChar", "DEL FieldAccess", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL StringLiteral: \"0x\"", "DEL PrefixExpression: !", "DEL FieldAccess", "DEL Block", "DEL Dimension", "DEL SimpleName: reverseMapping", "DEL QualifiedName: other.code", "DEL SingleVariableDeclaration", "DEL SimpleName: Override", "DEL SimpleName: i", "DEL TagElement: @param", "DEL SimpleName: c", "DEL SimpleName: appendSurrogate", "DEL ThisExpression", "DEL PrimitiveType: char", "DEL SimpleName: i", "DEL SimpleType: List", "DEL IfStatement", "DEL TextElement: unicode characters with a character code greater than 127.", "DEL InfixExpression: &&", "DEL SimpleName: Comparable", "DEL ReturnStatement", "DEL SimpleName: code", "DEL TextElement: omissions of java-1.4's ", "DEL SimpleName: i", "DEL Modifier: public", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleName: temp", "DEL SimpleName: name", "DEL ThisExpression", "DEL Dimension", "DEL InfixExpression: >=", "DEL InstanceofExpression", "DEL ThisExpression", "DEL IfStatement", "DEL SimpleName: decodeByte", "DEL SimpleName: c", "DEL SimpleName: growBuffer", "DEL ReturnStatement", "DEL TextElement:  is returned, nothing is pushed to the", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: r", "DEL FieldDeclaration", "DEL PrimitiveType: char", "DEL SimpleName: ret", "DEL Javadoc", "DEL SimpleName: i", "DEL SimpleName: code", "DEL TagElement: @link", "DEL TagElement: @return", "DEL SimpleName: IOException", "DEL MethodRefParameter", "DEL SimpleName: Simple8BitChar", "DEL TagElement", "DEL IfStatement", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL SimpleName: ByteBuffer", "DEL SimpleType: Simple8BitChar", "DEL PrimitiveType: int", "DEL ReturnStatement", "DEL TextElement: If ", "DEL Modifier: private", "DEL VariableDeclarationStatement", "DEL ParameterizedType: List<Simple8BitChar>", "DEL PrefixExpression: ++", "DEL SimpleName: highChars", "DEL Modifier: final", "DEL VariableDeclarationStatement", "DEL TextElement: The characters for byte values of 128 to 255 stored as an array of", "DEL ParameterizedType: ArrayList<>", "DEL SimpleName: name", "DEL Dimension", "DEL SimpleName: o", "DEL SimpleName: code", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL InfixExpression: >=", "DEL MethodInvocation", "DEL SimpleName: out", "DEL FieldAccess", "DEL NumberLiteral: 2", "DEL SimpleName: temp", "DEL Javadoc", "DEL InfixExpression: &", "DEL SimpleType: Simple8BitChar", "DEL VariableDeclarationStatement", "DEL TextElement:  Charset", "DEL SimpleName: a", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL TextElement: character in the range 0x0080 to 0x7fff. (No support for", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL SimpleName: Integer", "DEL SimpleName: Override", "DEL SimpleName: c", "DEL TextElement:  A Simple8BitChar, if this character is covered by this encoding.", "DEL SimpleName: highChars", "DEL SimpleName: highChars", "DEL QualifiedName: java.nio.charset.Charset", "DEL ReturnStatement", "DEL SimpleName: o", "DEL SimpleName: i", "DEL TextElement: A ", "DEL Block", "DEL NumberLiteral: 127", "DEL Block", "DEL SimpleName: unicode", "DEL SimpleName: c", "DEL SimpleName: Simple8BitZipEncoding", "DEL PrimitiveType: int", "DEL ThisExpression", "DEL ThisExpression", "DEL SimpleName: decode", "DEL NumberLiteral: 0", "DEL InfixExpression: -", "DEL SimpleType: java.lang.String", "DEL SingleVariableDeclaration", "DEL SimpleName: highChar", "DEL Modifier: final", "DEL Dimension", "DEL SimpleName: i0", "DEL SimpleName: Override", "DEL MethodRef", "DEL MethodDeclaration", "DEL SimpleName: i1", "DEL SimpleName: encode", "DEL SimpleName: Simple8BitChar", "DEL PrimitiveType: char", "DEL TagElement: @see", "DEL SimpleName: out", "DEL IfStatement", "DEL TextElement: covered by this encoding.", "DEL SingleVariableDeclaration", "DEL SimpleName: Collections", "DEL InfixExpression: <", "DEL PrimitiveType: byte", "DEL SimpleName: charAt", "DEL SimpleName: canEncode", "DEL SimpleName: Simple8BitChar", "DEL MethodInvocation", "DEL SimpleName: unicode", "DEL ReturnStatement", "DEL Javadoc", "DEL PrefixExpression: ++", "DEL SimpleName: Simple8BitChar", "DEL Modifier: final", "DEL ExpressionStatement", "DEL Modifier: final", "DEL SimpleName: c", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: unicode", "DEL PrimitiveType: char", "DEL QualifiedName: other.unicode", "DEL Javadoc", "DEL VariableDeclarationExpression", "DEL Block", "DEL SimpleName: i", "DEL TextElement: <ul>", "DEL TagElement", "DEL TextElement:  The character to encode.", "DEL InfixExpression: ==", "DEL PrimitiveType: byte", "DEL NumberLiteral: 1", "DEL SimpleName: data", "DEL SimpleName: c", "DEL SimpleName: r", "DEL SimpleName: reverseMapping", "DEL SimpleName: b", "DEL VariableDeclarationFragment", "DEL SimpleName: position", "DEL TextElement: </ul>", "DEL ThisExpression", "DEL ThisExpression", "DEL SimpleName: Simple8BitChar", "DEL SimpleName: temp", "DEL InfixExpression: +", "DEL MarkerAnnotation", "DEL SimpleType: Simple8BitChar", "DEL SingleVariableDeclaration", "DEL SimpleName: reverseMapping", "DEL NumberLiteral: 128", "DEL TextElement: UTF-16 surrogates)", "DEL TagElement: @param", "DEL SimpleName: ZipEncodingHelper", "DEL PrimitiveType: char", "DEL QualifiedName: m.unicode", "DEL TextElement: of a simple encoding.", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL Modifier: final", "DEL SimpleName: r", "DEL NumberLiteral: 0", "DEL IfStatement", "DEL IfStatement", "DEL Block", "DEL Block", "DEL MarkerAnnotation", "DEL SimpleName: reverseMapping", "DEL ArrayType: char[]", "DEL SimpleName: c", "DEL SimpleType: String", "DEL ParameterizedType: List<Simple8BitChar>", "DEL Modifier: final", "DEL InfixExpression: &&", "DEL SimpleName: out", "DEL VariableDeclarationFragment", "DEL SimpleName: Integer", "DEL Javadoc", "DEL PrimitiveType: int", "DEL Block", "DEL Modifier: final", "DEL ReturnStatement", "DEL SimpleType: Simple8BitChar", "DEL MethodRef", "DEL SimpleName: allocate", "DEL Block", "DEL SimpleName: r", "DEL Modifier: final", "DEL SimpleName: out", "DEL QualifiedName: m.unicode", "DEL ExpressionStatement", "DEL TextElement: A list of ", "DEL Block", "DEL SimpleName: unicode", "DEL NullLiteral", "DEL FieldAccess", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL SimpleName: highChars", "DEL SimpleName: encodeHighChar", "DEL SimpleName: b", "DEL QualifiedName: java.lang.String", "DEL Modifier: final", "DEL SimpleType: Comparable", "DEL VariableDeclarationStatement", "DEL PrimitiveType: byte", "DEL MethodInvocation", "DEL SimpleName: b", "DEL ThisExpression", "DEL SimpleName: ZipEncoding", "DEL Block", "DEL SimpleName: c", "DEL NumberLiteral: 6", "DEL SimpleName: i", "DEL SimpleName: get", "DEL SimpleName: ZipEncodingHelper", "DEL Modifier: public", "DEL Block", "DEL EnhancedForStatement", "DEL SimpleName: name", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL SimpleName: i1", "DEL Modifier: final", "DEL SimpleName: compareTo", "DEL SimpleType: Simple8BitChar", "DEL SimpleName: other", "DEL BooleanLiteral: true", "DEL ArrayAccess", "DEL SimpleName: length", "DEL MethodInvocation", "DEL BooleanLiteral: false", "DEL SimpleName: i", "DEL MethodDeclaration", "DEL PrimitiveType: char", "DEL SimpleType: java.lang.String", "DEL Modifier: final", "DEL TagElement", "DEL ReturnStatement", "DEL QualifiedName: r.code", "DEL Assignment: =", "DEL SimpleName: String", "DEL TextElement: set, which mets the following restrictions:", "DEL SimpleName: remaining", "DEL Modifier: final", "DEL SimpleName: highChars", "DEL MethodInvocation", "DEL SimpleName: charAt", "DEL SimpleType: Simple8BitChar", "DEL SimpleName: toHexString", "DEL SimpleType: Simple8BitChar", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL TagElement", "DEL QualifiedName: org.apache.commons.compress.archivers.zip.ZipEncoding", "DEL QualifiedName: java.lang.String", "DEL PrefixExpression: !", "DEL SimpleName: out", "DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL MethodInvocation", "DEL ThisExpression", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL BooleanLiteral: true", "DEL Modifier: public", "DEL PrimitiveType: boolean", "DEL SimpleName: length", "DEL Modifier: public", "DEL Modifier: final", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: sort", "DEL VariableDeclarationStatement", "DEL SimpleName: Collections", "DEL SimpleName: c", "DEL SimpleName: canEncodeChar", "DEL Modifier: final", "DEL ReturnStatement", "DEL SimpleType: Simple8BitChar", "DEL SimpleName: i1", "DEL PrimitiveType: boolean", "DEL SimpleName: Override", "DEL SimpleName: code", "DEL Modifier: final", "DEL SimpleName: c", "DEL PrimitiveType: byte", "DEL SimpleName: out", "DEL ClassInstanceCreation", "DEL NumberLiteral: 6", "DEL ParenthesizedExpression", "DEL StringLiteral: \"->0x\"", "DEL NumberLiteral: 0", "DEL SimpleName: code", "DEL SimpleName: i0", "DEL SimpleName: clone", "DEL SimpleName: position", "DEL InfixExpression: >=", "DEL Modifier: public", "DEL PrimitiveType: int", "DEL ArrayType: char[]", "DEL SimpleType: String", "DEL InfixExpression: >=", "DEL ParameterizedType: Comparable<Simple8BitChar>", "DEL SimpleName: i0", "DEL FieldAccess", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: c", "DEL Modifier: final", "DEL ReturnStatement", "DEL BooleanLiteral: false", "DEL ThisExpression", "DEL TextElement:  objects sorted by the unicode", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL Modifier: public", "DEL TagElement: @param", "DEL FieldAccess", "DEL SimpleName: toString", "DEL SimpleName: length", "DEL ExpressionStatement", "DEL BooleanLiteral: false", "DEL Block", "DEL VariableDeclarationStatement", "DEL MarkerAnnotation", "DEL Modifier: public", "DEL QualifiedName: r.unicode", "DEL SimpleName: name", "DEL VariableDeclarationFragment", "DEL SimpleName: bb", "DEL ReturnStatement", "DEL PrimitiveType: char", "DEL Assignment: =", "DEL Modifier: static", "DEL SimpleName: add", "DEL Block", "DEL SimpleName: c", "DEL MethodInvocation", "DEL ThisExpression", "DEL Block", "DEL TagElement: @param", "DEL Modifier: final", "DEL ArrayAccess", "DEL SimpleName: reverseMapping", "DEL Assignment: =", "DEL SimpleName: Simple8BitChar", "DEL SimpleName: ByteBuffer", "DEL ExpressionStatement", "DEL NullLiteral", "DEL MethodInvocation", "DEL SimpleName: equals", "DEL QualifiedName: data.length", "DEL VariableDeclarationFragment", "DEL SimpleType: Simple8BitChar", "DEL SimpleName: code", "DEL Modifier: public", "DEL SimpleName: code", "DEL InfixExpression: <", "DEL Modifier: public", "DEL SimpleName: i0", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL MarkerAnnotation", "DEL PrimitiveType: byte", "DEL SimpleName: ret", "DEL ForStatement", "DEL PrimitiveType: char", "DEL InfixExpression: !=", "DEL SimpleName: i0", "DEL FieldAccess", "DEL SimpleName: canEncode", "DEL SimpleType: ByteBuffer", "DEL SimpleName: size", "DEL Modifier: final", "DEL VariableDeclarationStatement", "DEL SimpleName: unmodifiableList", "DEL ForStatement", "DEL TextElement:  The byte to decode.", "DEL Block", "DEL SimpleName: Override", "DEL Modifier: final", "DEL SimpleName: encode", "DEL IfStatement", "DEL Block", "DEL PrimitiveType: char", "DEL SimpleName: bb", "DEL TagElement: @code", "DEL ClassInstanceCreation", "DEL SimpleName: rewind", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL TextElement: <p>These restrictions most notably apply to the most prominent", "DEL PrimitiveType: int", "DEL InfixExpression: -", "DEL SimpleType: List", "DEL InfixExpression: +", "DEL BooleanLiteral: true", "DEL PrimitiveType: char", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: c", "DEL SimpleName: bb", "DEL SimpleName: b", "DEL SimpleName: i", "DEL SimpleName: hashCode", "DEL ThisExpression", "DEL ExpressionStatement", "DEL TextElement: stored as an array of 128 chars.", "DEL SimpleName: c", "DEL SimpleName: Simple8BitChar", "DEL PrimitiveType: boolean", "DEL Block", "DEL SimpleName: i", "DEL Javadoc", "DEL PrimitiveType: byte", "DEL ReturnStatement", "DEL Javadoc", "DEL FieldAccess", "DEL SimpleName: Simple8BitChar", "DEL SimpleName: Simple8BitChar", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL Modifier: final", "DEL InfixExpression: /", "DEL Modifier: public", "DEL TextElement:  The characters for byte values of 128 to 255", "DEL Block", "DEL TextElement: field.  This list is used to binary search reverse mapping of", "DEL SimpleName: bb", "DEL InfixExpression: !=", "DEL ExpressionStatement", "DEL ThisExpression", "DEL SimpleName: Simple8BitChar", "DEL QualifiedName: org.apache.commons.compress.archivers.zip.ZipEncoding", "DEL SimpleName: c", "DEL SimpleName: name", "DEL SimpleType: ByteBuffer", "DEL InfixExpression: &&", "DEL MethodInvocation", "DEL SimpleName: reverseMapping", "DEL SimpleName: encodeHighChar", "DEL MethodInvocation", "DEL CastExpression", "DEL SimpleName: i0", "DEL NumberLiteral: 6", "DEL FieldAccess", "DEL Javadoc", "DEL SimpleName: i0", "DEL SimpleName: Override", "DEL Modifier: final", "DEL SimpleType: ZipEncoding", "DEL FieldAccess", "DEL Block", "DEL SimpleName: Simple8BitChar", "DEL Modifier: private", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL TagElement: @return", "DEL InfixExpression: <", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL ArrayType: byte[]", "DEL ReturnStatement", "DEL PrimitiveType: int", "DEL Modifier: private", "DEL TextElement:  false", "DEL SimpleName: highChar", "DEL SimpleName: out", "DEL SimpleName: unicode", "DEL TextElement: <li>Characters 0x0000 to 0x007f are encoded as the corresponding", "DEL Block", "DEL SimpleType: Object", "DEL Modifier: final", "DEL SimpleName: highChars", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL SimpleType: IOException", "DEL Modifier: final", "DEL VariableDeclarationStatement", "DEL TextElement: Return the character code for a given encoded byte.", "DEL SimpleName: Override", "DEL Block", "DEL SimpleName: String", "DEL TagElement", "DEL FieldDeclaration", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL TextElement:  The byte buffer to write to.", "DEL ArrayType: char[]", "DEL SimpleName: unicode", "DEL SimpleName: c", "DEL SimpleName: c", "DEL TextElement: This ZipEncoding implementation implements a simple 8bit character", "DEL SimpleName: Simple8BitChar", "DEL TagElement: @link", "DEL SimpleName: ret", "DEL Javadoc", "DEL InfixExpression: ==", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL SimpleName: highChars", "DEL SimpleName: String", "DEL SimpleName: o", "DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL MethodInvocation", "DEL SimpleName: Simple8BitZipEncoding"]}]}}, {"Simple8BitZipEncoding_diff": {"operations": ["Delete QualifiedName: org.apache.commons.compress.archivers.zip(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.nio.ByteBuffer(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.util.ArrayList(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: java.util.Collections(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: java.util.List(10)", "Delete ImportDeclaration(11)", "Delete TextElement: This ZipEncoding implementation implements a simple 8bit character(12)", "Delete TextElement: set, which mets the following restrictions:(13)", "Delete TextElement: <ul>(14)", "Delete TextElement: <li>Characters 0x0000 to 0x007f are encoded as the corresponding(15)", "Delete TextElement: byte values 0x00 to 0x7f.</li>(16)", "Delete TextElement: <li>All byte codes from 0x80 to 0xff are mapped to a unique unicode(17)", "Delete TextElement: character in the range 0x0080 to 0x7fff. (No support for(18)", "Delete TextElement: UTF-16 surrogates)(19)", "Delete TextElement: </ul>(20)", "Delete TextElement: <p>These restrictions most notably apply to the most prominent(21)", "Delete TextElement: omissions of java-1.4's (22)", "Delete QualifiedName: java.nio.charset.Charset(23)", "Delete TextElement:  Charset(24)", "Delete TagElement: @link(25)", "Delete TextElement: implementation, Cp437 and Cp850.</p>(26)", "Delete TextElement: <p>The methods of this class are reentrant.</p>(27)", "Delete TagElement(28)", "Delete TagElement: @Immutable(29)", "Delete Javadoc(30)", "Delete SimpleName: Simple8BitZipEncoding(31)", "Delete SimpleName: ZipEncoding(32)", "Delete SimpleType: ZipEncoding(33)", "Delete TextElement: A character entity, which is put to the reverse mapping table(34)", "Delete TextElement: of a simple encoding.(35)", "Delete TagElement(36)", "Delete Javadoc(37)", "Delete Modifier: private(38)", "Delete Modifier: static(39)", "Delete Modifier: final(40)", "Delete SimpleName: Simple8BitChar(41)", "Delete SimpleName: Comparable(42)", "Delete SimpleType: Comparable(43)", "Delete SimpleName: Simple8BitChar(44)", "Delete SimpleType: Simple8BitChar(45)", "Delete ParameterizedType: Comparable<Simple8BitChar>(46)", "Delete Modifier: public(47)", "Delete Modifier: final(48)", "Delete PrimitiveType: char(49)", "Delete SimpleName: unicode(50)", "Delete VariableDeclarationFragment(51)", "Delete FieldDeclaration(52)", "Delete Modifier: public(53)", "Delete Modifier: final(54)", "Delete PrimitiveType: byte(55)", "Delete SimpleName: code(56)", "Delete VariableDeclarationFragment(57)", "Delete FieldDeclaration(58)", "Delete SimpleName: Simple8BitChar(59)", "Delete Modifier: final(60)", "Delete PrimitiveType: byte(61)", "Delete SimpleName: code(62)", "Delete SingleVariableDeclaration(63)", "Delete Modifier: final(64)", "Delete PrimitiveType: char(65)", "Delete SimpleName: unicode(66)", "Delete SingleVariableDeclaration(67)", "Delete ThisExpression(68)", "Delete SimpleName: code(69)", "Delete FieldAccess(70)", "Delete SimpleName: code(71)", "Delete Assignment: =(72)", "Delete ExpressionStatement(73)", "Delete ThisExpression(74)", "Delete SimpleName: unicode(75)", "Delete FieldAccess(76)", "Delete SimpleName: unicode(77)", "Delete Assignment: =(78)", "Delete ExpressionStatement(79)", "Delete Block(80)", "Delete MethodDeclaration(81)", "Delete SimpleName: Override(82)", "Delete MarkerAnnotation(83)", "Delete Modifier: public(84)", "Delete PrimitiveType: int(85)", "Delete SimpleName: compareTo(86)", "Delete Modifier: final(87)", "Delete SimpleName: Simple8BitChar(88)", "Delete SimpleType: Simple8BitChar(89)", "Delete SimpleName: a(90)", "Delete SingleVariableDeclaration(91)", "Delete ThisExpression(92)", "Delete SimpleName: unicode(93)", "Delete FieldAccess(94)", "Delete QualifiedName: a.unicode(95)", "Delete InfixExpression: -(96)", "Delete ReturnStatement(97)", "Delete Block(98)", "Delete MethodDeclaration(99)", "Delete SimpleName: Override(100)", "Delete MarkerAnnotation(101)", "Delete Modifier: public(102)", "Delete SimpleName: String(103)", "Delete SimpleType: String(104)", "Delete SimpleName: toString(105)", "Delete StringLiteral: \"0x\"(106)", "Delete SimpleName: Integer(107)", "Delete SimpleName: toHexString(108)", "Delete NumberLiteral: 0xffff(109)", "Delete SimpleName: unicode(110)", "Delete InfixExpression: &(111)", "Delete MethodInvocation(112)", "Delete StringLiteral: \"->0x\"(113)", "Delete SimpleName: Integer(114)", "Delete SimpleName: toHexString(115)", "Delete NumberLiteral: 0xff(116)", "Delete SimpleName: code(117)", "Delete InfixExpression: &(118)", "Delete MethodInvocation(119)", "Delete InfixExpression: +(120)", "Delete ReturnStatement(121)", "Delete Block(122)", "Delete MethodDeclaration(123)", "Delete SimpleName: Override(124)", "Delete MarkerAnnotation(125)", "Delete Modifier: public(126)", "Delete PrimitiveType: boolean(127)", "Delete SimpleName: equals(128)", "Delete Modifier: final(129)", "Delete SimpleName: Object(130)", "Delete SimpleType: Object(131)", "Delete SimpleName: o(132)", "Delete SingleVariableDeclaration(133)", "Delete SimpleName: o(134)", "Delete SimpleName: Simple8BitChar(135)", "Delete SimpleType: Simple8BitChar(136)", "Delete InstanceofExpression(137)", "Delete Modifier: final(138)", "Delete SimpleName: Simple8BitChar(139)", "Delete SimpleType: Simple8BitChar(140)", "Delete SimpleName: other(141)", "Delete SimpleName: Simple8BitChar(142)", "Delete SimpleType: Simple8BitChar(143)", "Delete SimpleName: o(144)", "Delete CastExpression(145)", "Delete VariableDeclarationFragment(146)", "Delete VariableDeclarationStatement(147)", "Delete SimpleName: unicode(148)", "Delete QualifiedName: other.unicode(149)", "Delete InfixExpression: ==(150)", "Delete SimpleName: code(151)", "Delete QualifiedName: other.code(152)", "Delete InfixExpression: ==(153)", "Delete InfixExpression: &&(154)", "Delete ReturnStatement(155)", "Delete Block(156)", "Delete IfStatement(157)", "Delete BooleanLiteral: false(158)", "Delete ReturnStatement(159)", "Delete Block(160)", "Delete MethodDeclaration(161)", "Delete SimpleName: Override(162)", "Delete MarkerAnnotation(163)", "Delete Modifier: public(164)", "Delete PrimitiveType: int(165)", "Delete SimpleName: hashCode(166)", "Delete SimpleName: unicode(167)", "Delete ReturnStatement(168)", "Delete Block(169)", "Delete MethodDeclaration(170)", "Delete TypeDeclaration: class(171)", "Delete TextElement: The characters for byte values of 128 to 255 stored as an array of(172)", "Delete TextElement: 128 chars.(173)", "Delete TagElement(174)", "Delete Javadoc(175)", "Delete Modifier: private(176)", "Delete Modifier: final(177)", "Delete PrimitiveType: char(178)", "Delete Dimension(179)", "Delete ArrayType: char[](180)", "Delete SimpleName: highChars(181)", "Delete VariableDeclarationFragment(182)", "Delete FieldDeclaration(183)", "Delete TextElement: A list of (184)", "Delete SimpleName: Simple8BitChar(185)", "Delete TagElement: @link(186)", "Delete TextElement:  objects sorted by the unicode(187)", "Delete TextElement: field.  This list is used to binary search reverse mapping of(188)", "Delete TextElement: unicode characters with a character code greater than 127.(189)", "Delete TagElement(190)", "Delete Javadoc(191)", "Delete Modifier: private(192)", "Delete Modifier: final(193)", "Delete SimpleName: List(194)", "Delete SimpleType: List(195)", "Delete SimpleName: Simple8BitChar(196)", "Delete SimpleType: Simple8BitChar(197)", "Delete ParameterizedType: List<Simple8BitChar>(198)", "Delete SimpleName: reverseMapping(199)", "Delete VariableDeclarationFragment(200)", "Delete FieldDeclaration(201)", "Delete SimpleName: highChars(202)", "Delete TextElement:  The characters for byte values of 128 to 255(203)", "Delete TextElement: stored as an array of 128 chars.(204)", "Delete TagElement: @param(205)", "Delete Javadoc(206)", "Delete Modifier: public(207)", "Delete SimpleName: Simple8BitZipEncoding(208)", "Delete Modifier: final(209)", "Delete PrimitiveType: char(210)", "Delete Dimension(211)", "Delete ArrayType: char[](212)", "Delete SimpleName: highChars(213)", "Delete SingleVariableDeclaration(214)", "Delete ThisExpression(215)", "Delete SimpleName: highChars(216)", "Delete FieldAccess(217)", "Delete SimpleName: highChars(218)", "Delete SimpleName: clone(219)", "Delete MethodInvocation(220)", "Delete Assignment: =(221)", "Delete ExpressionStatement(222)", "Delete Modifier: final(223)", "Delete SimpleName: List(224)", "Delete SimpleType: List(225)", "Delete SimpleName: Simple8BitChar(226)", "Delete SimpleType: Simple8BitChar(227)", "Delete ParameterizedType: List<Simple8BitChar>(228)", "Delete SimpleName: temp(229)", "Delete SimpleName: ArrayList(230)", "Delete SimpleType: ArrayList(231)", "Delete ParameterizedType: ArrayList<>(232)", "Delete ThisExpression(233)", "Delete SimpleName: highChars(234)", "Delete FieldAccess(235)", "Delete SimpleName: length(236)", "Delete FieldAccess(237)", "Delete ClassInstanceCreation(238)", "Delete VariableDeclarationFragment(239)", "Delete VariableDeclarationStatement(240)", "Delete PrimitiveType: byte(241)", "Delete SimpleName: code(242)", "Delete NumberLiteral: 127(243)", "Delete VariableDeclarationFragment(244)", "Delete VariableDeclarationStatement(245)", "Delete Modifier: final(246)", "Delete PrimitiveType: char(247)", "Delete SimpleName: highChar(248)", "Delete SingleVariableDeclaration(249)", "Delete ThisExpression(250)", "Delete SimpleName: highChars(251)", "Delete FieldAccess(252)", "Delete SimpleName: temp(253)", "Delete SimpleName: add(254)", "Delete SimpleName: Simple8BitChar(255)", "Delete SimpleType: Simple8BitChar(256)", "Delete SimpleName: code(257)", "Delete PrefixExpression: ++(258)", "Delete SimpleName: highChar(259)", "Delete ClassInstanceCreation(260)", "Delete MethodInvocation(261)", "Delete ExpressionStatement(262)", "Delete Block(263)", "Delete EnhancedForStatement(264)", "Delete SimpleName: Collections(265)", "Delete SimpleName: sort(266)", "Delete SimpleName: temp(267)", "Delete MethodInvocation(268)", "Delete ExpressionStatement(269)", "Delete ThisExpression(270)", "Delete SimpleName: reverseMapping(271)", "Delete FieldAccess(272)", "Delete SimpleName: Collections(273)", "Delete SimpleName: unmodifiableList(274)", "Delete SimpleName: temp(275)", "Delete MethodInvocation(276)", "Delete Assignment: =(277)", "Delete ExpressionStatement(278)", "Delete Block(279)", "Delete MethodDeclaration(280)", "Delete TextElement: Return the character code for a given encoded byte.(281)", "Delete TagElement(282)", "Delete SimpleName: b(283)", "Delete TextElement:  The byte to decode.(284)", "Delete TagElement: @param(285)", "Delete TextElement:  The associated character value.(286)", "Delete TagElement: @return(287)", "Delete Javadoc(288)", "Delete Modifier: public(289)", "Delete PrimitiveType: char(290)", "Delete SimpleName: decodeByte(291)", "Delete Modifier: final(292)", "Delete PrimitiveType: byte(293)", "Delete SimpleName: b(294)", "Delete SingleVariableDeclaration(295)", "Delete SimpleName: b(296)", "Delete NumberLiteral: 0(297)", "Delete InfixExpression: >=(298)", "Delete PrimitiveType: char(299)", "Delete SimpleName: b(300)", "Delete CastExpression(301)", "Delete ReturnStatement(302)", "Delete Block(303)", "Delete IfStatement(304)", "Delete ThisExpression(305)", "Delete SimpleName: highChars(306)", "Delete FieldAccess(307)", "Delete NumberLiteral: 128(308)", "Delete SimpleName: b(309)", "Delete InfixExpression: +(310)", "Delete ArrayAccess(311)", "Delete ReturnStatement(312)", "Delete Block(313)", "Delete MethodDeclaration(314)", "Delete SimpleName: c(315)", "Delete TextElement:  The character to encode.(316)", "Delete TagElement: @param(317)", "Delete TextElement:  Whether the given unicode character is covered by this encoding.(318)", "Delete TagElement: @return(319)", "Delete Javadoc(320)", "Delete Modifier: public(321)", "Delete PrimitiveType: boolean(322)", "Delete SimpleName: canEncodeChar(323)", "Delete Modifier: final(324)", "Delete PrimitiveType: char(325)", "Delete SimpleName: c(326)", "Delete SingleVariableDeclaration(327)", "Delete SimpleName: c(328)", "Delete NumberLiteral: 0(329)", "Delete InfixExpression: >=(330)", "Delete SimpleName: c(331)", "Delete NumberLiteral: 128(332)", "Delete InfixExpression: <(333)", "Delete InfixExpression: &&(334)", "Delete BooleanLiteral: true(335)", "Delete ReturnStatement(336)", "Delete Block(337)", "Delete IfStatement(338)", "Delete Modifier: final(339)", "Delete SimpleName: Simple8BitChar(340)", "Delete SimpleType: Simple8BitChar(341)", "Delete SimpleName: r(342)", "Delete ThisExpression(343)", "Delete SimpleName: encodeHighChar(344)", "Delete SimpleName: c(345)", "Delete MethodInvocation(346)", "Delete VariableDeclarationFragment(347)", "Delete VariableDeclarationStatement(348)", "Delete SimpleName: r(349)", "Delete NullLiteral(350)", "Delete InfixExpression: !=(351)", "Delete ReturnStatement(352)", "Delete Block(353)", "Delete MethodDeclaration(354)", "Delete TextElement: Pushes the encoded form of the given character to the given byte buffer.(355)", "Delete TagElement(356)", "Delete SimpleName: bb(357)", "Delete TextElement:  The byte buffer to write to.(358)", "Delete TagElement: @param(359)", "Delete SimpleName: c(360)", "Delete TextElement:  The character to encode.(361)", "Delete TagElement: @param(362)", "Delete TextElement:  Whether the given unicode character is covered by this encoding.(363)", "Delete TextElement: If (364)", "Delete TextElement:  false(365)", "Delete TagElement: @code(366)", "Delete TextElement:  is returned, nothing is pushed to the(367)", "Delete TextElement: byte buffer. (368)", "Delete TagElement: @return(369)", "Delete Javadoc(370)", "Delete Modifier: public(371)", "Delete PrimitiveType: boolean(372)", "Delete SimpleName: pushEncodedChar(373)", "Delete Modifier: final(374)", "Delete SimpleName: ByteBuffer(375)", "Delete SimpleType: ByteBuffer(376)", "Delete SimpleName: bb(377)", "Delete SingleVariableDeclaration(378)", "Delete Modifier: final(379)", "Delete PrimitiveType: char(380)", "Delete SimpleName: c(381)", "Delete SingleVariableDeclaration(382)", "Delete SimpleName: c(383)", "Delete NumberLiteral: 0(384)", "Delete InfixExpression: >=(385)", "Delete SimpleName: c(386)", "Delete NumberLiteral: 128(387)", "Delete InfixExpression: <(388)", "Delete InfixExpression: &&(389)", "Delete SimpleName: bb(390)", "Delete SimpleName: put(391)", "Delete PrimitiveType: byte(392)", "Delete SimpleName: c(393)", "Delete CastExpression(394)", "Delete MethodInvocation(395)", "Delete ExpressionStatement(396)", "Delete BooleanLiteral: true(397)", "Delete ReturnStatement(398)", "Delete Block(399)", "Delete IfStatement(400)", "Delete Modifier: final(401)", "Delete SimpleName: Simple8BitChar(402)", "Delete SimpleType: Simple8BitChar(403)", "Delete SimpleName: r(404)", "Delete ThisExpression(405)", "Delete SimpleName: encodeHighChar(406)", "Delete SimpleName: c(407)", "Delete MethodInvocation(408)", "Delete VariableDeclarationFragment(409)", "Delete VariableDeclarationStatement(410)", "Delete SimpleName: r(411)", "Delete NullLiteral(412)", "Delete InfixExpression: ==(413)", "Delete BooleanLiteral: false(414)", "Delete ReturnStatement(415)", "Delete Block(416)", "Delete IfStatement(417)", "Delete SimpleName: bb(418)", "Delete SimpleName: put(419)", "Delete QualifiedName: r.code(420)", "Delete MethodInvocation(421)", "Delete ExpressionStatement(422)", "Delete BooleanLiteral: true(423)", "Delete ReturnStatement(424)", "Delete Block(425)", "Delete MethodDeclaration(426)", "Delete SimpleName: c(427)", "Delete TextElement:  A unicode character in the range from 0x0080 to 0x7f00(428)", "Delete TagElement: @param(429)", "Delete TextElement:  A Simple8BitChar, if this character is covered by this encoding.(430)", "Delete TextElement: A (431)", "Delete TextElement:  null(432)", "Delete TagElement: @code(433)", "Delete TextElement:  value is returned, if this character is not(434)", "Delete TextElement: covered by this encoding.(435)", "Delete TagElement: @return(436)", "Delete Javadoc(437)", "Delete Modifier: private(438)", "Delete SimpleName: Simple8BitChar(439)", "Delete SimpleType: Simple8BitChar(440)", "Delete SimpleName: encodeHighChar(441)", "Delete Modifier: final(442)", "Delete PrimitiveType: char(443)", "Delete SimpleName: c(444)", "Delete SingleVariableDeclaration(445)", "Delete PrimitiveType: int(446)", "Delete SimpleName: i0(447)", "Delete NumberLiteral: 0(448)", "Delete VariableDeclarationFragment(449)", "Delete VariableDeclarationStatement(450)", "Delete PrimitiveType: int(451)", "Delete SimpleName: i1(452)", "Delete ThisExpression(453)", "Delete SimpleName: reverseMapping(454)", "Delete FieldAccess(455)", "Delete SimpleName: size(456)", "Delete MethodInvocation(457)", "Delete VariableDeclarationFragment(458)", "Delete VariableDeclarationStatement(459)", "Delete SimpleName: i1(460)", "Delete SimpleName: i0(461)", "Delete InfixExpression: >(462)", "Delete Modifier: final(463)", "Delete PrimitiveType: int(464)", "Delete SimpleName: i(465)", "Delete SimpleName: i0(466)", "Delete SimpleName: i1(467)", "Delete SimpleName: i0(468)", "Delete InfixExpression: -(469)", "Delete ParenthesizedExpression(470)", "Delete NumberLiteral: 2(471)", "Delete InfixExpression: /(472)", "Delete InfixExpression: +(473)", "Delete VariableDeclarationFragment(474)", "Delete VariableDeclarationStatement(475)", "Delete Modifier: final(476)", "Delete SimpleName: Simple8BitChar(477)", "Delete SimpleType: Simple8BitChar(478)", "Delete SimpleName: m(479)", "Delete ThisExpression(480)", "Delete SimpleName: reverseMapping(481)", "Delete FieldAccess(482)", "Delete SimpleName: get(483)", "Delete SimpleName: i(484)", "Delete MethodInvocation(485)", "Delete VariableDeclarationFragment(486)", "Delete VariableDeclarationStatement(487)", "Delete QualifiedName: m.unicode(488)", "Delete SimpleName: c(489)", "Delete InfixExpression: ==(490)", "Delete SimpleName: m(491)", "Delete ReturnStatement(492)", "Delete Block(493)", "Delete IfStatement(494)", "Delete QualifiedName: m.unicode(495)", "Delete SimpleName: c(496)", "Delete InfixExpression: <(497)", "Delete SimpleName: i0(498)", "Delete SimpleName: i(499)", "Delete NumberLiteral: 1(500)", "Delete InfixExpression: +(501)", "Delete Assignment: =(502)", "Delete ExpressionStatement(503)", "Delete Block(504)", "Delete SimpleName: i1(505)", "Delete SimpleName: i(506)", "Delete Assignment: =(507)", "Delete ExpressionStatement(508)", "Delete Block(509)", "Delete IfStatement(510)", "Delete Block(511)", "Delete WhileStatement(512)", "Delete SimpleName: i0(513)", "Delete ThisExpression(514)", "Delete SimpleName: reverseMapping(515)", "Delete FieldAccess(516)", "Delete SimpleName: size(517)", "Delete MethodInvocation(518)", "Delete InfixExpression: >=(519)", "Delete NullLiteral(520)", "Delete ReturnStatement(521)", "Delete Block(522)", "Delete IfStatement(523)", "Delete Modifier: final(524)", "Delete SimpleName: Simple8BitChar(525)", "Delete SimpleType: Simple8BitChar(526)", "Delete SimpleName: r(527)", "Delete ThisExpression(528)", "Delete SimpleName: reverseMapping(529)", "Delete FieldAccess(530)", "Delete SimpleName: get(531)", "Delete SimpleName: i0(532)", "Delete MethodInvocation(533)", "Delete VariableDeclarationFragment(534)", "Delete VariableDeclarationStatement(535)", "Delete QualifiedName: r.unicode(536)", "Delete SimpleName: c(537)", "Delete InfixExpression: !=(538)", "Delete NullLiteral(539)", "Delete ReturnStatement(540)", "Delete Block(541)", "Delete IfStatement(542)", "Delete SimpleName: r(543)", "Delete ReturnStatement(544)", "Delete Block(545)", "Delete MethodDeclaration(546)", "Delete QualifiedName: org.apache.commons.compress.archivers.zip.ZipEncoding(547)", "Delete SimpleName: canEncode(548)", "Delete QualifiedName: java.lang.String(549)", "Delete SimpleType: java.lang.String(550)", "Delete MethodRefParameter(551)", "Delete MethodRef(552)", "Delete TagElement: @see(553)", "Delete Javadoc(554)", "Delete SimpleName: Override(555)", "Delete MarkerAnnotation(556)", "Delete Modifier: public(557)", "Delete PrimitiveType: boolean(558)", "Delete SimpleName: canEncode(559)", "Delete Modifier: final(560)", "Delete SimpleName: String(561)", "Delete SimpleType: String(562)", "Delete SimpleName: name(563)", "Delete SingleVariableDeclaration(564)", "Delete PrimitiveType: int(565)", "Delete SimpleName: i(566)", "Delete NumberLiteral: 0(567)", "Delete VariableDeclarationFragment(568)", "Delete VariableDeclarationExpression(569)", "Delete SimpleName: i(570)", "Delete SimpleName: name(571)", "Delete SimpleName: length(572)", "Delete MethodInvocation(573)", "Delete InfixExpression: <(574)", "Delete SimpleName: i(575)", "Delete PrefixExpression: ++(576)", "Delete Modifier: final(577)", "Delete PrimitiveType: char(578)", "Delete SimpleName: c(579)", "Delete SimpleName: name(580)", "Delete SimpleName: charAt(581)", "Delete SimpleName: i(582)", "Delete MethodInvocation(583)", "Delete VariableDeclarationFragment(584)", "Delete VariableDeclarationStatement(585)", "Delete ThisExpression(586)", "Delete SimpleName: canEncodeChar(587)", "Delete SimpleName: c(588)", "Delete MethodInvocation(589)", "Delete PrefixExpression: !(590)", "Delete BooleanLiteral: false(591)", "Delete ReturnStatement(592)", "Delete Block(593)", "Delete IfStatement(594)", "Delete Block(595)", "Delete ForStatement(596)", "Delete BooleanLiteral: true(597)", "Delete ReturnStatement(598)", "Delete Block(599)", "Delete MethodDeclaration(600)", "Delete QualifiedName: org.apache.commons.compress.archivers.zip.ZipEncoding(601)", "Delete SimpleName: encode(602)", "Delete QualifiedName: java.lang.String(603)", "Delete SimpleType: java.lang.String(604)", "Delete MethodRefParameter(605)", "Delete MethodRef(606)", "Delete TagElement: @see(607)", "Delete Javadoc(608)", "Delete SimpleName: Override(609)", "Delete MarkerAnnotation(610)", "Delete Modifier: public(611)", "Delete SimpleName: ByteBuffer(612)", "Delete SimpleType: ByteBuffer(613)", "Delete SimpleName: encode(614)", "Delete Modifier: final(615)", "Delete SimpleName: String(616)", "Delete SimpleType: String(617)", "Delete SimpleName: name(618)", "Delete SingleVariableDeclaration(619)", "Delete SimpleName: ByteBuffer(620)", "Delete SimpleType: ByteBuffer(621)", "Delete SimpleName: out(622)", "Delete SimpleName: ByteBuffer(623)", "Delete SimpleName: allocate(624)", "Delete SimpleName: name(625)", "Delete SimpleName: length(626)", "Delete MethodInvocation(627)", "Delete NumberLiteral: 6(628)", "Delete SimpleName: name(629)", "Delete SimpleName: length(630)", "Delete MethodInvocation(631)", "Delete NumberLiteral: 1(632)", "Delete InfixExpression: +(633)", "Delete ParenthesizedExpression(634)", "Delete NumberLiteral: 2(635)", "Delete InfixExpression: /(636)", "Delete InfixExpression: +(637)", "Delete MethodInvocation(638)", "Delete VariableDeclarationFragment(639)", "Delete VariableDeclarationStatement(640)", "Delete PrimitiveType: int(641)", "Delete SimpleName: i(642)", "Delete NumberLiteral: 0(643)", "Delete VariableDeclarationFragment(644)", "Delete VariableDeclarationExpression(645)", "Delete SimpleName: i(646)", "Delete SimpleName: name(647)", "Delete SimpleName: length(648)", "Delete MethodInvocation(649)", "Delete InfixExpression: <(650)", "Delete SimpleName: i(651)", "Delete PrefixExpression: ++(652)", "Delete Modifier: final(653)", "Delete PrimitiveType: char(654)", "Delete SimpleName: c(655)", "Delete SimpleName: name(656)", "Delete SimpleName: charAt(657)", "Delete SimpleName: i(658)", "Delete MethodInvocation(659)", "Delete VariableDeclarationFragment(660)", "Delete VariableDeclarationStatement(661)", "Delete SimpleName: out(662)", "Delete SimpleName: remaining(663)", "Delete MethodInvocation(664)", "Delete NumberLiteral: 6(665)", "Delete InfixExpression: <(666)", "Delete SimpleName: out(667)", "Delete SimpleName: ZipEncodingHelper(668)", "Delete SimpleName: growBuffer(669)", "Delete SimpleName: out(670)", "Delete SimpleName: out(671)", "Delete SimpleName: position(672)", "Delete MethodInvocation(673)", "Delete NumberLiteral: 6(674)", "Delete InfixExpression: +(675)", "Delete MethodInvocation(676)", "Delete Assignment: =(677)", "Delete ExpressionStatement(678)", "Delete Block(679)", "Delete IfStatement(680)", "Delete ThisExpression(681)", "Delete SimpleName: pushEncodedChar(682)", "Delete SimpleName: out(683)", "Delete SimpleName: c(684)", "Delete MethodInvocation(685)", "Delete PrefixExpression: !(686)", "Delete SimpleName: ZipEncodingHelper(687)", "Delete SimpleName: appendSurrogate(688)", "Delete SimpleName: out(689)", "Delete SimpleName: c(690)", "Delete MethodInvocation(691)", "Delete ExpressionStatement(692)", "Delete Block(693)", "Delete IfStatement(694)", "Delete Block(695)", "Delete ForStatement(696)", "Delete SimpleName: out(697)", "Delete SimpleName: limit(698)", "Delete SimpleName: out(699)", "Delete SimpleName: position(700)", "Delete MethodInvocation(701)", "Delete MethodInvocation(702)", "Delete ExpressionStatement(703)", "Delete SimpleName: out(704)", "Delete SimpleName: rewind(705)", "Delete MethodInvocation(706)", "Delete ExpressionStatement(707)", "Delete SimpleName: out(708)", "Delete ReturnStatement(709)", "Delete Block(710)", "Delete MethodDeclaration(711)", "Delete QualifiedName: org.apache.commons.compress.archivers.zip.ZipEncoding(712)", "Delete SimpleName: decode(713)", "Delete PrimitiveType: byte(714)", "Delete Dimension(715)", "Delete ArrayType: byte[](716)", "Delete MethodRefParameter(717)", "Delete MethodRef(718)", "Delete TagElement: @see(719)", "Delete Javadoc(720)", "Delete SimpleName: Override(721)", "Delete MarkerAnnotation(722)", "Delete Modifier: public(723)", "Delete SimpleName: String(724)", "Delete SimpleType: String(725)", "Delete SimpleName: decode(726)", "Delete Modifier: final(727)", "Delete PrimitiveType: byte(728)", "Delete Dimension(729)", "Delete ArrayType: byte[](730)", "Delete SimpleName: data(731)", "Delete SingleVariableDeclaration(732)", "Delete SimpleName: IOException(733)", "Delete SimpleType: IOException(734)", "Delete Modifier: final(735)", "Delete PrimitiveType: char(736)", "Delete Dimension(737)", "Delete ArrayType: char[](738)", "Delete SimpleName: ret(739)", "Delete PrimitiveType: char(740)", "Delete Dimension(741)", "Delete ArrayType: char[](742)", "Delete QualifiedName: data.length(743)", "Delete ArrayCreation(744)", "Delete VariableDeclarationFragment(745)", "Delete VariableDeclarationStatement(746)", "Delete PrimitiveType: int(747)", "Delete SimpleName: i(748)", "Delete NumberLiteral: 0(749)", "Delete VariableDeclarationFragment(750)", "Delete VariableDeclarationExpression(751)", "Delete SimpleName: i(752)", "Delete QualifiedName: data.length(753)", "Delete InfixExpression: <(754)", "Delete SimpleName: i(755)", "Delete PrefixExpression: ++(756)", "Delete SimpleName: ret(757)", "Delete SimpleName: i(758)", "Delete ArrayAccess(759)", "Delete ThisExpression(760)", "Delete SimpleName: decodeByte(761)", "Delete SimpleName: data(762)", "Delete SimpleName: i(763)", "Delete ArrayAccess(764)", "Delete MethodInvocation(765)", "Delete Assignment: =(766)", "Delete ExpressionStatement(767)", "Delete Block(768)", "Delete ForStatement(769)", "Delete SimpleName: String(770)", "Delete SimpleType: String(771)", "Delete SimpleName: ret(772)", "Delete ClassInstanceCreation(773)", "Delete ReturnStatement(774)", "Delete Block(775)", "Delete MethodDeclaration(776)", "Delete TypeDeclaration: class(777)"]}}], "commit_stats": [{"total_files": 5, "deleted_files": 2, "testing": "True", "maintenance": "True", "build": "False"}]}