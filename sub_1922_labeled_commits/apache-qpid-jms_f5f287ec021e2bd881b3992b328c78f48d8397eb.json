{"application": "apache-qpid-jms", "csha": "f5f287ec021e2bd881b3992b328c78f48d8397eb", "files": [{"AbstractMechanism_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: verifyCompletion to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS Block to MethodDeclaration at 4"]}]}}, {"AbstractMechanism_diff": {"operations": ["Insert MethodDeclaration(43) into TypeDeclaration: class(147) at 8", "Insert MarkerAnnotation(38) into MethodDeclaration(43) at 0", "Insert Modifier: public(39) into MethodDeclaration(43) at 1", "Insert PrimitiveType: void(40) into MethodDeclaration(43) at 2", "Insert SimpleName: verifyCompletion(41) into MethodDeclaration(43) at 3", "Insert Block(42) into MethodDeclaration(43) at 4", "Insert SimpleName: Override(37) into MarkerAnnotation(38) at 0"]}}, {"CramMD5Mechanism_cluster": {"actions": [{"root": "UPDATE from _sentResponse to sentResponse", "operations": ["UPD SimpleName: _sentResponse from _sentResponse to sentResponse", "UPD SimpleName: _sentResponse from _sentResponse to sentResponse", "UPD SimpleName: _sentResponse from _sentResponse to sentResponse"]}]}}, {"CramMD5Mechanism_diff": {"operations": ["Update SimpleName: _sentResponse(44) to sentResponse", "Update SimpleName: _sentResponse(93) to sentResponse", "Update SimpleName: _sentResponse(198) to sentResponse"]}}, {"Mechanism_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 9", "operations": ["INS PrimitiveType: void to MethodDeclaration at 1", "INS TextElement: Verifies that the SASL exchange has completed successfully. This is to TagElement at 0", "INS SimpleName: verifyCompletion to MethodDeclaration at 2", "INS TagElement: @throws to Javadoc at 1", "INS TagElement to Javadoc at 0", "INS SimpleType: SaslException to MethodDeclaration at 3", "INS SimpleName: SaslException to SimpleType: SaslException at 0", "INS TextElement:  if the outcome of the SASL exchange is not valid for this Mechanism to TagElement: @throws at 1", "INS TextElement: that are held by this Mechanism. to TagElement at 3", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: SaslException to TagElement: @throws at 0", "INS TextElement: an opportunity for the mechanism to ensure that all mandatory to TagElement at 1", "INS MethodDeclaration to TypeDeclaration: interface at 9", "INS TextElement: steps have been completed successfully and to cleanup and resources to TagElement at 2"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TextElement: provided. to TagElement at 1", "INS TagElement: @return to Javadoc at 4", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: localPrincipal to TagElement: @param at 0", "INS SimpleName: password to TagElement: @param at 0", "INS TextElement: The password given to the client for authentication. to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 3", "INS TextElement: The user name given to the client for authentication. to TagElement: @param at 1", "INS TextElement:  if this Mechanism is able to validate using the given credentials. to TagElement: @return at 0", "INS TagElement: @param to Javadoc at 1", "INS TagElement to Javadoc at 0", "INS TextElement: Allows the mechanism to determine if it can be used given the authentication to TagElement at 0", "INS TextElement: The local Principal configured for the client for authentication. to TagElement: @param at 1", "INS SimpleName: username to TagElement: @param at 0"]}]}}, {"Mechanism_diff": {"operations": ["Insert MethodDeclaration(139) into TypeDeclaration: interface(216) at 9", "Insert Javadoc(134) into MethodDeclaration(139) at 0", "Insert PrimitiveType: void(135) into MethodDeclaration(139) at 1", "Insert SimpleName: verifyCompletion(136) into MethodDeclaration(139) at 2", "Insert SimpleType: SaslException(138) into MethodDeclaration(139) at 3", "Insert Javadoc(200) into MethodDeclaration(215) at 0", "Insert TagElement(130) into Javadoc(134) at 0", "Insert TagElement: @throws(133) into Javadoc(134) at 1", "Insert SimpleName: SaslException(137) into SimpleType: SaslException(138) at 0", "Insert TagElement(188) into Javadoc(200) at 0", "Insert TagElement: @param(191) into Javadoc(200) at 1", "Insert TagElement: @param(194) into Javadoc(200) at 2", "Insert TagElement: @param(197) into Javadoc(200) at 3", "Insert TagElement: @return(199) into Javadoc(200) at 4", "Insert TextElement: Verifies that the SASL exchange has completed successfully. This is(126) into TagElement(130) at 0", "Insert TextElement: an opportunity for the mechanism to ensure that all mandatory(127) into TagElement(130) at 1", "Insert TextElement: steps have been completed successfully and to cleanup and resources(128) into TagElement(130) at 2", "Insert TextElement: that are held by this Mechanism.(129) into TagElement(130) at 3", "Insert SimpleName: SaslException(131) into TagElement: @throws(133) at 0", "Insert TextElement:  if the outcome of the SASL exchange is not valid for this Mechanism(132) into TagElement: @throws(133) at 1", "Insert TextElement: Allows the mechanism to determine if it can be used given the authentication(186) into TagElement(188) at 0", "Insert TextElement: provided.(187) into TagElement(188) at 1", "Insert SimpleName: username(189) into TagElement: @param(191) at 0", "Insert TextElement: The user name given to the client for authentication.(190) into TagElement: @param(191) at 1", "Insert SimpleName: password(192) into TagElement: @param(194) at 0", "Insert TextElement: The password given to the client for authentication.(193) into TagElement: @param(194) at 1", "Insert SimpleName: localPrincipal(195) into TagElement: @param(197) at 0", "Insert TextElement: The local Principal configured for the client for authentication.(196) into TagElement: @param(197) at 1", "Insert TextElement:  if this Mechanism is able to validate using the given credentials.(198) into TagElement: @return(199) at 0"]}}, {"AmqpProvider_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: authenticator to MethodInvocation at 0", "INS SimpleName: tryAuthenticate to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "UPDATE from authenticate to isComplete", "operations": ["UPD SimpleName: authenticate from authenticate to isComplete"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: authenticator to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: signalCompletion to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: authenticator to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: signalCompletion to MethodInvocation at 1"]}]}}, {"AmqpProvider_diff": {"operations": ["Insert ExpressionStatement(3241) into Block(3278) at 0", "Insert MethodInvocation(3240) into ExpressionStatement(3241) at 0", "Insert SimpleName: authenticator(3238) into MethodInvocation(3240) at 0", "Insert SimpleName: tryAuthenticate(3239) into MethodInvocation(3240) at 1", "Update SimpleName: authenticate(3239) to isComplete", "Insert ExpressionStatement(3264) into Block(3265) at 2", "Insert ExpressionStatement(3269) into Block(3274) at 0", "Insert MethodInvocation(3263) into ExpressionStatement(3264) at 0", "Insert MethodInvocation(3268) into ExpressionStatement(3269) at 0", "Insert SimpleName: authenticator(3261) into MethodInvocation(3263) at 0", "Insert SimpleName: signalCompletion(3262) into MethodInvocation(3263) at 1", "Insert SimpleName: authenticator(3266) into MethodInvocation(3268) at 0", "Insert SimpleName: signalCompletion(3267) into MethodInvocation(3268) at 1"]}}, {"AmqpSaslAuthenticator_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 8", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: failureCause to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS Block to MethodDeclaration at 4", "INS SimpleName: failureCause to InfixExpression: == at 0", "INS Block to IfStatement at 2", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: complete to IfStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS IfStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS InfixExpression: == to ReturnStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS ExpressionStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: authenticationRequest to MethodInvocation at 0", "INS SimpleName: failureCause to InfixExpression: != at 0", "INS SimpleName: signalCompletion to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS Block to IfStatement at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: failureCause to MethodInvocation at 2", "INS SimpleName: onFailure to MethodInvocation at 1", "INS Block to MethodDeclaration at 3", "INS Block to IfStatement at 2", "INS IfStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 16", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: recordFailure to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS Block to MethodDeclaration at 3", "INS CatchClause to TryStatement at 1", "INS SimpleName: error to MethodInvocation at 2", "INS TryStatement to Block at 0", "INS Block to CatchClause at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS Block to IfStatement at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 3", "INS IfStatement to Block at 0", "INS NullLiteral to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: recordFailure to MethodInvocation at 0", "INS StringLiteral: \"Client failed to authenticate\" to MethodInvocation at 1", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: handleSaslFail to MethodDeclaration at 2", "INS NullLiteral to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: recordFailure to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 17"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS Block to CatchClause at 1", "INS SimpleName: Throwable to SimpleType: Throwable at 0", "INS CatchClause to TryStatement at 1", "INS Modifier: private to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS ExpressionStatement to Block at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: complete to Assignment: = at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS SimpleType: Throwable to SingleVariableDeclaration at 0", "INS Block to TryStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS SimpleName: handleSaslCompletion to MethodDeclaration at 2", "INS TryStatement to Block at 0", "INS SimpleName: error to SingleVariableDeclaration at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV SimpleType: JMSSecurityException to FieldDeclaration at 1"]}, {"root": "UPDATE from boolean to void", "operations": ["UPD PrimitiveType: boolean from boolean to void"]}, {"root": "UPDATE from authenticate to tryAuthenticate", "operations": ["UPD SimpleName: authenticate from authenticate to tryAuthenticate"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IllegalStateException to MethodDeclaration at 3", "MOV Modifier: public to MethodDeclaration at 0", "MOV PrimitiveType: boolean to MethodDeclaration at 1", "MOV SimpleName: wasSuccessful to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: handleSaslStep to MethodDeclaration at 2", "MOV Modifier: private to MethodDeclaration at 0", "MOV PrimitiveType: void to MethodDeclaration at 1"]}, {"root": "UPDATE from handleSaslFail to recordFailure", "operations": ["UPD SimpleName: handleSaslFail from handleSaslFail to recordFailure", "UPD SimpleName: jmsse from jmsse to recordFailure", "UPD SimpleName: authenticationRequest from authenticationRequest to recordFailure"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: message to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleType: Throwable to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: cause to SingleVariableDeclaration at 1", "INS SimpleName: Throwable to SimpleType: Throwable at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: failureCause to Assignment: = at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: cause to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: failureCause to MethodInvocation at 0", "INS SimpleName: initCause to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ExpressionStatement to Block at 3", "INS SimpleName: complete to Assignment: = at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0"]}, {"root": "UPDATE from JMSSecurityException to String", "operations": ["UPD SimpleName: JMSSecurityException from JMSSecurityException to String"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: JMSSecurityException to SimpleType: String at 0"]}, {"root": "INS InstanceofExpression to IfStatement at 0", "operations": ["INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: cause to InstanceofExpression at 0", "INS InstanceofExpression to IfStatement at 0", "INS SimpleType: Exception to InstanceofExpression at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ThrowStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV ClassInstanceCreation to Assignment: = at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS CastExpression to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleType: Exception to CastExpression at 0", "INS SimpleName: failureCause to MethodInvocation at 0", "INS SimpleName: setLinkedException to MethodInvocation at 1", "INS SimpleName: cause to CastExpression at 1"]}, {"root": "INS ExpressionStatement to SwitchStatement at 11", "operations": ["INS ExpressionStatement to SwitchStatement at 11", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: handleSaslCompletion to MethodInvocation at 0"]}, {"root": "INS BreakStatement to SwitchStatement at 12", "operations": ["INS BreakStatement to SwitchStatement at 12"]}, {"root": "INS SimpleType: Throwable to SingleVariableDeclaration at 0", "operations": ["INS SimpleName: Throwable to SimpleType: Throwable at 0", "INS SimpleType: Throwable to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: error to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: error to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from SaslException to Throwable", "operations": ["UPD SimpleType: SaslException from SaslException to Throwable", "UPD SimpleType: SaslException from SaslException to Throwable", "UPD SimpleName: SaslException from SaslException to Throwable", "UPD SimpleName: SaslException from SaslException to Throwable"]}, {"root": "UPDATE from se to error", "operations": ["UPD SimpleName: se from se to error", "UPD SimpleName: jmsse from jmsse to error", "UPD SimpleName: se from se to error", "UPD SimpleName: se from se to error", "UPD SimpleName: initCause from initCause to error", "UPD SimpleName: result from result to error", "UPD SimpleName: se from se to error"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: recordFailure to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS SimpleName: message to ClassInstanceCreation at 1", "operations": ["INS SimpleName: message to ClassInstanceCreation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 1"]}, {"root": "UPDATE from jmsse to mechanism", "operations": ["UPD SimpleName: jmsse from jmsse to mechanism"]}, {"root": "UPDATE from setLinkedException to verifyCompletion", "operations": ["UPD SimpleName: setLinkedException from setLinkedException to verifyCompletion"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: error to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: jmsse to MethodInvocation at 2"]}, {"root": "INS InfixExpression: + to MethodInvocation at 1", "operations": ["INS MethodInvocation to InfixExpression: + at 1", "INS StringLiteral: \"Exception while processing SASL exchange completion: \" to InfixExpression: + at 0", "INS InfixExpression: + to MethodInvocation at 1"]}, {"root": "INS SimpleName: error to MethodInvocation at 2", "operations": ["INS SimpleName: error to MethodInvocation at 2"]}, {"root": "UPDATE from onFailure to getMessage", "operations": ["UPD SimpleName: onFailure from onFailure to getMessage", "UPD SimpleName: se from se to getMessage"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: onFailure to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS NullLiteral to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"Could not find a suitable SASL mechanism for the remote peer using the available credentials.\" to MethodInvocation at 1", "INS SimpleName: recordFailure to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV MethodInvocation to InfixExpression: + at 1", "MOV StringLiteral: \"Exception while processing SASL init: \" to InfixExpression: + at 0"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV StringLiteral: \"Exception while processing SASL step: \" to InfixExpression: + at 0", "MOV MethodInvocation to InfixExpression: + at 1"]}, {"root": "UPDATE from JMSSecurityException to Exception", "operations": ["UPD SimpleName: JMSSecurityException from JMSSecurityException to Exception"]}, {"root": "MOVE from SimpleType: Exception", "operations": ["MOV SimpleName: JMSSecurityException to SimpleType: Exception at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: initCause to MethodInvocation at 0", "MOV SimpleName: se to MethodInvocation at 1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: javax.security.sasl.SaslException"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TextElement:  true if the authentication process completed.", "DEL TagElement: @return"]}, {"root": "DEL SimpleName: result", "operations": ["DEL SimpleName: result"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: isComplete", "DEL SimpleName: complete", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: authenticationRequest"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: complete", "DEL ReturnStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: PN_SASL_IDLE", "DEL SimpleName: PN_SASL_STEP", "DEL ReturnStatement", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SwitchStatement", "DEL SwitchCase", "DEL BooleanLiteral: true", "DEL BooleanLiteral: false", "DEL BreakStatement", "DEL MethodDeclaration", "DEL SimpleName: PN_SASL_PASS", "DEL SimpleName: sasl", "DEL SwitchCase", "DEL SimpleName: getState", "DEL SimpleName: PN_SASL_FAIL", "DEL SwitchCase", "DEL Block", "DEL BreakStatement", "DEL SwitchCase", "DEL SwitchCase", "DEL SwitchCase", "DEL SimpleName: PN_SASL_CONF"]}, {"root": "DEL SimpleType: JMSSecurityException", "operations": ["DEL SimpleName: JMSSecurityException", "DEL SimpleType: JMSSecurityException"]}, {"root": "DEL ThrowStatement", "operations": ["DEL StringLiteral: \"Could not find a suitable SASL mechanism for the remote peer using the available credentials.\"", "DEL ClassInstanceCreation", "DEL SimpleType: JMSSecurityException", "DEL ThrowStatement", "DEL SimpleName: JMSSecurityException"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: JMSSecurityException", "DEL SimpleType: JMSSecurityException", "DEL SimpleType: JMSSecurityException", "DEL InfixExpression: +", "DEL VariableDeclarationFragment", "DEL SimpleName: jmsse", "DEL SimpleName: JMSSecurityException", "DEL ClassInstanceCreation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: setLinkedException", "DEL SimpleName: se", "DEL ExpressionStatement", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: se", "DEL SimpleName: initCause", "DEL SimpleName: jmsse", "DEL MethodInvocation"]}, {"root": "DEL ThrowStatement", "operations": ["DEL SimpleName: jmsse", "DEL ThrowStatement"]}, {"root": "DEL SimpleName: se", "operations": ["DEL SimpleName: se"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL VariableDeclarationStatement", "DEL TryStatement", "DEL Block", "DEL ThrowStatement", "DEL MethodDeclaration", "DEL SimpleName: jmsse", "DEL VariableDeclarationFragment", "DEL CatchClause", "DEL SimpleName: jmsse", "DEL SimpleType: JMSSecurityException", "DEL SimpleName: JMSSecurityException", "DEL SimpleType: JMSSecurityException", "DEL SimpleType: JMSSecurityException", "DEL ClassInstanceCreation", "DEL InfixExpression: +", "DEL Block", "DEL SimpleName: JMSSecurityException", "DEL SimpleName: JMSSecurityException"]}, {"root": "DEL SimpleType: JMSSecurityException", "operations": ["DEL SimpleType: JMSSecurityException"]}, {"root": "DEL StringLiteral: \"Client failed to authenticate\"", "operations": ["DEL StringLiteral: \"Client failed to authenticate\""]}, {"root": "DEL ThrowStatement", "operations": ["DEL ThrowStatement", "DEL SimpleType: JMSSecurityException", "DEL ClassInstanceCreation"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL ThrowStatement"]}]}}, {"AmqpSaslAuthenticator_diff": {"operations": ["Insert FieldDeclaration(61) into TypeDeclaration: class(469) at 8", "Insert MethodDeclaration(197) into TypeDeclaration: class(469) at 12", "Insert MethodDeclaration(217) into TypeDeclaration: class(469) at 13", "Insert MethodDeclaration(370) into TypeDeclaration: class(469) at 15", "Insert MethodDeclaration(395) into TypeDeclaration: class(469) at 16", "Insert MethodDeclaration(425) into TypeDeclaration: class(469) at 17", "Insert Modifier: private(56) into FieldDeclaration(61) at 0", "Move SimpleType: JMSSecurityException(154) into FieldDeclaration(61) at 1", "Insert VariableDeclarationFragment(60) into FieldDeclaration(61) at 2", "Update PrimitiveType: boolean(120) to void", "Update SimpleName: authenticate(121) to tryAuthenticate", "Move Modifier: public(182) into MethodDeclaration(197) at 0", "Move PrimitiveType: boolean(183) into MethodDeclaration(197) at 1", "Move SimpleName: wasSuccessful(184) into MethodDeclaration(197) at 2", "Move SimpleType: IllegalStateException(186) into MethodDeclaration(197) at 3", "Insert Block(196) into MethodDeclaration(197) at 4", "Insert Modifier: public(198) into MethodDeclaration(217) at 0", "Insert PrimitiveType: void(199) into MethodDeclaration(217) at 1", "Insert SimpleName: signalCompletion(200) into MethodDeclaration(217) at 2", "Insert Block(216) into MethodDeclaration(217) at 3", "Move Modifier: private(320) into MethodDeclaration(370) at 0", "Move PrimitiveType: void(321) into MethodDeclaration(370) at 1", "Move SimpleName: handleSaslStep(322) into MethodDeclaration(370) at 2", "Insert Block(369) into MethodDeclaration(370) at 3", "Insert Modifier: private(371) into MethodDeclaration(395) at 0", "Insert PrimitiveType: void(372) into MethodDeclaration(395) at 1", "Insert SimpleName: handleSaslFail(373) into MethodDeclaration(395) at 2", "Insert Block(394) into MethodDeclaration(395) at 3", "Insert Modifier: private(396) into MethodDeclaration(425) at 0", "Insert PrimitiveType: void(397) into MethodDeclaration(425) at 1", "Insert SimpleName: handleSaslCompletion(398) into MethodDeclaration(425) at 2", "Insert Block(424) into MethodDeclaration(425) at 3", "Update SimpleName: handleSaslFail(406) to recordFailure", "Insert SingleVariableDeclaration(432) into MethodDeclaration(468) at 3", "Insert SingleVariableDeclaration(436) into MethodDeclaration(468) at 4", "Insert SimpleName: failureCause(59) into VariableDeclarationFragment(60) at 0", "Insert IfStatement(195) into Block(196) at 0", "Insert IfStatement(215) into Block(216) at 0", "Insert TryStatement(368) into Block(369) at 0", "Insert IfStatement(393) into Block(394) at 0", "Insert TryStatement(423) into Block(424) at 0", "Insert SimpleType: String(430) into SingleVariableDeclaration(432) at 0", "Insert SimpleName: message(431) into SingleVariableDeclaration(432) at 1", "Insert SimpleType: Throwable(434) into SingleVariableDeclaration(436) at 0", "Insert SimpleName: cause(435) into SingleVariableDeclaration(436) at 1", "Insert ExpressionStatement(443) into Block(467) at 0", "Insert ExpressionStatement(462) into Block(467) at 2", "Insert ExpressionStatement(466) into Block(467) at 3", "Insert SimpleName: complete(183) into IfStatement(195) at 0", "Insert Block(188) into IfStatement(195) at 1", "Insert Block(194) into IfStatement(195) at 2", "Insert InfixExpression: !=(203) into IfStatement(215) at 0", "Insert Block(209) into IfStatement(215) at 1", "Insert Block(214) into IfStatement(215) at 2", "Move Block(369) into TryStatement(368) at 0", "Insert CatchClause(367) into TryStatement(368) at 1", "Move InfixExpression: !=(411) into IfStatement(393) at 0", "Insert Block(386) into IfStatement(393) at 1", "Insert Block(392) into IfStatement(393) at 2", "Insert Block(407) into TryStatement(423) at 0", "Insert CatchClause(422) into TryStatement(423) at 1", "Update SimpleName: JMSSecurityException(407) to String", "Move SimpleName: JMSSecurityException(407) into SimpleType: String(430) at 0", "Insert SimpleName: Throwable(433) into SimpleType: Throwable(434) at 0", "Insert Assignment: =(442) into ExpressionStatement(443) at 0", "Insert InstanceofExpression(447) into IfStatement(457) at 0", "Insert MethodInvocation(461) into ExpressionStatement(462) at 0", "Insert Assignment: =(465) into ExpressionStatement(466) at 0", "Insert ReturnStatement(187) into Block(188) at 0", "Move ThrowStatement(212) into Block(194) at 0", "Insert SimpleName: failureCause(201) into InfixExpression: !=(203) at 0", "Insert NullLiteral(202) into InfixExpression: !=(203) at 1", "Insert ExpressionStatement(208) into Block(209) at 0", "Move ExpressionStatement(148) into Block(214) at 0", "Move SingleVariableDeclaration(373) into CatchClause(367) at 0", "Insert Block(366) into CatchClause(367) at 1", "Insert ExpressionStatement(385) into Block(386) at 0", "Insert ExpressionStatement(391) into Block(392) at 0", "Move ExpressionStatement(391) into Block(407) at 0", "Insert ExpressionStatement(406) into Block(407) at 1", "Insert SingleVariableDeclaration(411) into CatchClause(422) at 0", "Insert Block(421) into CatchClause(422) at 1", "Insert SimpleName: failureCause(437) into Assignment: =(442) at 0", "Move ClassInstanceCreation(425) into Assignment: =(442) at 1", "Insert SimpleName: cause(444) into InstanceofExpression(447) at 0", "Insert SimpleType: Exception(446) into InstanceofExpression(447) at 1", "Insert ExpressionStatement(455) into Block(456) at 0", "Insert SimpleName: failureCause(458) into MethodInvocation(461) at 0", "Insert SimpleName: initCause(459) into MethodInvocation(461) at 1", "Insert SimpleName: cause(460) into MethodInvocation(461) at 2", "Insert SimpleName: complete(463) into Assignment: =(465) at 0", "Insert BooleanLiteral: true(464) into Assignment: =(465) at 1", "Insert ExpressionStatement(149) into SwitchStatement(153) at 11", "Insert BreakStatement(150) into SwitchStatement(153) at 12", "Insert SimpleType: Throwable(156) into SingleVariableDeclaration(158) at 0", "Insert SimpleName: error(157) into SingleVariableDeclaration(158) at 1", "Insert InfixExpression: ==(186) into ReturnStatement(187) at 0", "Insert MethodInvocation(207) into ExpressionStatement(208) at 0", "Update SimpleType: SaslException(287) to Throwable", "Update SimpleName: se(288) to error", "Insert ExpressionStatement(299) into Block(300) at 0", "Update SimpleType: SaslException(371) to Throwable", "Update SimpleName: se(372) to error", "Insert ExpressionStatement(365) into Block(366) at 0", "Insert MethodInvocation(384) into ExpressionStatement(385) at 0", "Insert MethodInvocation(390) into ExpressionStatement(391) at 0", "Insert Assignment: =(405) into ExpressionStatement(406) at 0", "Insert SimpleType: Throwable(409) into SingleVariableDeclaration(411) at 0", "Insert SimpleName: error(410) into SingleVariableDeclaration(411) at 1", "Move ExpressionStatement(396) into Block(421) at 0", "Insert SimpleName: message(440) into ClassInstanceCreation(441) at 1", "Insert SimpleName: Exception(445) into SimpleType: Exception(446) at 0", "Insert MethodInvocation(454) into ExpressionStatement(455) at 0", "Insert MethodInvocation(148) into ExpressionStatement(149) at 0", "Insert SimpleName: Throwable(155) into SimpleType: Throwable(156) at 0", "Insert SimpleName: failureCause(184) into InfixExpression: ==(186) at 0", "Insert NullLiteral(185) into InfixExpression: ==(186) at 1", "Insert SimpleName: authenticationRequest(204) into MethodInvocation(207) at 0", "Insert SimpleName: onFailure(205) into MethodInvocation(207) at 1", "Insert SimpleName: failureCause(206) into MethodInvocation(207) at 2", "Update SimpleName: SaslException(286) to Throwable", "Insert MethodInvocation(298) into ExpressionStatement(299) at 0", "Update SimpleName: SaslException(370) to Throwable", "Insert MethodInvocation(364) into ExpressionStatement(365) at 0", "Insert SimpleName: recordFailure(377) into MethodInvocation(384) at 0", "Move InfixExpression: +(418) into MethodInvocation(384) at 1", "Insert NullLiteral(383) into MethodInvocation(384) at 2", "Insert SimpleName: recordFailure(387) into MethodInvocation(390) at 0", "Insert StringLiteral: \"Client failed to authenticate\"(388) into MethodInvocation(390) at 1", "Insert NullLiteral(389) into MethodInvocation(390) at 2", "Update SimpleName: jmsse(387) to mechanism", "Update SimpleName: setLinkedException(388) to verifyCompletion", "Insert SimpleName: complete(403) into Assignment: =(405) at 0", "Insert BooleanLiteral: true(404) into Assignment: =(405) at 1", "Insert SimpleName: Throwable(408) into SimpleType: Throwable(409) at 0", "Insert SimpleName: failureCause(448) into MethodInvocation(454) at 0", "Insert SimpleName: setLinkedException(449) into MethodInvocation(454) at 1", "Insert CastExpression(453) into MethodInvocation(454) at 2", "Insert SimpleName: handleSaslCompletion(147) into MethodInvocation(148) at 0", "Update SimpleName: authenticationRequest(157) to recordFailure", "Insert MethodInvocation(162) into MethodInvocation(164) at 1", "Update SimpleName: result(159) to error", "Insert SimpleName: recordFailure(291) into MethodInvocation(298) at 0", "Insert InfixExpression: +(296) into MethodInvocation(298) at 1", "Update SimpleName: jmsse(303) to error", "Move SimpleName: jmsse(303) into MethodInvocation(298) at 2", "Insert SimpleName: recordFailure(357) into MethodInvocation(364) at 0", "Insert InfixExpression: +(362) into MethodInvocation(364) at 1", "Insert SimpleName: error(363) into MethodInvocation(364) at 2", "Update SimpleName: jmsse(392) to recordFailure", "Insert InfixExpression: +(417) into MethodInvocation(419) at 1", "Insert SimpleName: error(418) into MethodInvocation(419) at 2", "Insert SimpleType: Exception(451) into CastExpression(453) at 0", "Insert SimpleName: cause(452) into CastExpression(453) at 1", "Insert SimpleName: error(160) into MethodInvocation(162) at 0", "Update SimpleName: onFailure(158) to getMessage", "Move SimpleName: onFailure(158) into MethodInvocation(162) at 1", "Insert ExpressionStatement(281) into Block(282) at 0", "Move StringLiteral: \"Exception while processing SASL init: \"(295) into InfixExpression: +(296) at 0", "Move MethodInvocation(298) into InfixExpression: +(296) at 1", "Move StringLiteral: \"Exception while processing SASL step: \"(379) into InfixExpression: +(362) at 0", "Move MethodInvocation(382) into InfixExpression: +(362) at 1", "Insert StringLiteral: \"Exception while processing SASL exchange completion: \"(413) into InfixExpression: +(417) at 0", "Insert MethodInvocation(416) into InfixExpression: +(417) at 1", "Update SimpleName: JMSSecurityException(412) to Exception", "Move SimpleName: JMSSecurityException(412) into SimpleType: Exception(451) at 0", "Insert MethodInvocation(280) into ExpressionStatement(281) at 0", "Update SimpleName: se(296) to error", "Update SimpleName: se(380) to error", "Update SimpleName: initCause(393) to error", "Move SimpleName: initCause(393) into MethodInvocation(416) at 0", "Update SimpleName: se(394) to getMessage", "Move SimpleName: se(394) into MethodInvocation(416) at 1", "Insert SimpleName: recordFailure(277) into MethodInvocation(280) at 0", "Insert StringLiteral: \"Could not find a suitable SASL mechanism for the remote peer using the available credentials.\"(278) into MethodInvocation(280) at 1", "Insert NullLiteral(279) into MethodInvocation(280) at 2", "Delete QualifiedName: javax.security.sasl.SaslException(6)", "Delete ImportDeclaration(7)", "Delete TextElement:  true if the authentication process completed.(116)", "Delete TagElement: @return(117)", "Delete SimpleName: result(155)", "Delete SimpleName: complete(165)", "Delete SimpleName: authenticationRequest(166)", "Delete SimpleName: isComplete(167)", "Delete MethodInvocation(168)", "Delete Assignment: =(169)", "Delete ExpressionStatement(170)", "Delete SimpleName: complete(171)", "Delete ReturnStatement(172)", "Delete SimpleName: sasl(187)", "Delete SimpleName: getState(188)", "Delete MethodInvocation(189)", "Delete SimpleName: PN_SASL_CONF(190)", "Delete SwitchCase(191)", "Delete SimpleName: PN_SASL_IDLE(192)", "Delete SwitchCase(193)", "Delete SimpleName: PN_SASL_STEP(194)", "Delete SwitchCase(195)", "Delete BreakStatement(196)", "Delete SimpleName: PN_SASL_FAIL(197)", "Delete SwitchCase(198)", "Delete BooleanLiteral: false(199)", "Delete ReturnStatement(200)", "Delete SimpleName: PN_SASL_PASS(201)", "Delete SwitchCase(202)", "Delete BooleanLiteral: true(203)", "Delete ReturnStatement(204)", "Delete SwitchCase(205)", "Delete BreakStatement(206)", "Delete SwitchStatement(207)", "Delete Block(213)", "Delete MethodDeclaration(214)", "Delete SimpleName: JMSSecurityException(218)", "Delete SimpleType: JMSSecurityException(219)", "Delete SimpleName: JMSSecurityException(276)", "Delete SimpleType: JMSSecurityException(277)", "Delete StringLiteral: \"Could not find a suitable SASL mechanism for the remote peer using the available credentials.\"(278)", "Delete ClassInstanceCreation(279)", "Delete ThrowStatement(280)", "Delete SimpleName: JMSSecurityException(290)", "Delete SimpleType: JMSSecurityException(291)", "Delete SimpleName: jmsse(292)", "Delete SimpleName: JMSSecurityException(293)", "Delete SimpleType: JMSSecurityException(294)", "Delete InfixExpression: +(299)", "Delete ClassInstanceCreation(300)", "Delete VariableDeclarationFragment(301)", "Delete VariableDeclarationStatement(302)", "Delete SimpleName: setLinkedException(304)", "Delete SimpleName: se(305)", "Delete MethodInvocation(306)", "Delete ExpressionStatement(307)", "Delete SimpleName: jmsse(308)", "Delete SimpleName: initCause(309)", "Delete SimpleName: se(310)", "Delete MethodInvocation(311)", "Delete ExpressionStatement(312)", "Delete SimpleName: jmsse(313)", "Delete ThrowStatement(314)", "Delete SimpleName: se(389)", "Delete SimpleName: JMSSecurityException(323)", "Delete SimpleType: JMSSecurityException(324)", "Delete SimpleName: JMSSecurityException(374)", "Delete SimpleType: JMSSecurityException(375)", "Delete SimpleName: jmsse(376)", "Delete SimpleName: JMSSecurityException(377)", "Delete SimpleType: JMSSecurityException(378)", "Delete InfixExpression: +(383)", "Delete ClassInstanceCreation(384)", "Delete VariableDeclarationFragment(385)", "Delete VariableDeclarationStatement(386)", "Delete SimpleName: jmsse(397)", "Delete ThrowStatement(398)", "Delete Block(399)", "Delete CatchClause(400)", "Delete TryStatement(401)", "Delete Block(402)", "Delete MethodDeclaration(403)", "Delete SimpleType: JMSSecurityException(408)", "Delete StringLiteral: \"Client failed to authenticate\"(424)", "Delete SimpleType: JMSSecurityException(413)", "Delete ClassInstanceCreation(419)", "Delete ThrowStatement(420)", "Delete ThrowStatement(426)", "Delete Block(427)"]}}], "commit_stats": [{"total_files": 6, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}