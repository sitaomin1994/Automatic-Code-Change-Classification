{"application": "apache-nutch", "csha": "86bf476a763c35b50248a9a864eade0394bd9201", "files": [{"CommonGrams_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: phrase to InfixExpression: + at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"Optimizing \" to InfixExpression: + at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: trace to MethodInvocation at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: field to InfixExpression: + at 3", "INS StringLiteral: \" for \" to InfixExpression: + at 2", "INS Block to IfStatement at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS ContinueStatement to Block at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS ContinueStatement to Block at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "DEL ContinueStatement", "operations": ["DEL ContinueStatement"]}, {"root": "DEL ContinueStatement", "operations": ["DEL ContinueStatement"]}]}}, {"CommonGrams_diff": {"operations": ["Insert IfStatement(836) into Block(966) at 0", "Insert MethodInvocation(825) into IfStatement(836) at 0", "Insert Block(835) into IfStatement(836) at 1", "Insert SimpleName: LOG(823) into MethodInvocation(825) at 0", "Insert SimpleName: isTraceEnabled(824) into MethodInvocation(825) at 1", "Insert ExpressionStatement(834) into Block(835) at 0", "Insert MethodInvocation(833) into ExpressionStatement(834) at 0", "Insert SimpleName: LOG(826) into MethodInvocation(833) at 0", "Insert SimpleName: trace(827) into MethodInvocation(833) at 1", "Insert InfixExpression: +(832) into MethodInvocation(833) at 2", "Insert Block(594) into IfStatement(595) at 1", "Insert Block(626) into IfStatement(627) at 1", "Insert StringLiteral: \"Optimizing \"(828) into InfixExpression: +(832) at 0", "Insert SimpleName: phrase(829) into InfixExpression: +(832) at 1", "Insert StringLiteral: \" for \"(830) into InfixExpression: +(832) at 2", "Insert SimpleName: field(831) into InfixExpression: +(832) at 3", "Insert IfStatement(592) into Block(594) at 0", "Insert ContinueStatement(593) into Block(594) at 1", "Insert IfStatement(624) into Block(626) at 0", "Insert ContinueStatement(625) into Block(626) at 1", "Insert MethodInvocation(583) into IfStatement(592) at 0", "Move Block(589) into IfStatement(592) at 1", "Insert MethodInvocation(615) into IfStatement(624) at 0", "Move Block(616) into IfStatement(624) at 1", "Insert SimpleName: LOG(581) into MethodInvocation(583) at 0", "Insert SimpleName: isWarnEnabled(582) into MethodInvocation(583) at 1", "Insert SimpleName: LOG(613) into MethodInvocation(615) at 0", "Insert SimpleName: isWarnEnabled(614) into MethodInvocation(615) at 1", "Delete ContinueStatement(588)", "Delete ContinueStatement(615)"]}}, {"OnlineClustererFactory_cluster": {"actions": [{"root": "INS IfStatement to Block at 2", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 2", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"OnlineClustererFactory_diff": {"operations": ["Insert IfStatement(188) into Block(189) at 2", "Insert IfStatement(222) into Block(232) at 0", "Insert MethodInvocation(178) into IfStatement(188) at 0", "Insert Block(187) into IfStatement(188) at 1", "Insert MethodInvocation(209) into IfStatement(222) at 0", "Insert Block(221) into IfStatement(222) at 1", "Insert IfStatement(166) into Block(174) at 0", "Insert SimpleName: LOG(176) into MethodInvocation(178) at 0", "Insert SimpleName: isWarnEnabled(177) into MethodInvocation(178) at 1", "Move ExpressionStatement(178) into Block(187) at 0", "Insert SimpleName: LOG(207) into MethodInvocation(209) at 0", "Insert SimpleName: isInfoEnabled(208) into MethodInvocation(209) at 1", "Move ExpressionStatement(207) into Block(221) at 0", "Insert MethodInvocation(157) into IfStatement(166) at 0", "Insert Block(165) into IfStatement(166) at 1", "Insert SimpleName: LOG(155) into MethodInvocation(157) at 0", "Insert SimpleName: isInfoEnabled(156) into MethodInvocation(157) at 1", "Move ExpressionStatement(161) into Block(165) at 0"]}}, {"Crawl_cluster": {"actions": [{"root": "INS IfStatement to Block at 12", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 12", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 30", "operations": ["INS IfStatement to Block at 30", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 3", "MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 2", "MOV IfStatement to Block at 4", "MOV ExpressionStatement to Block at 0"]}]}}, {"Crawl_diff": {"operations": ["Insert IfStatement(340) into Block(549) at 12", "Insert IfStatement(548) into Block(549) at 25", "Insert MethodInvocation(299) into IfStatement(340) at 0", "Insert Block(339) into IfStatement(340) at 1", "Insert MethodInvocation(539) into IfStatement(548) at 0", "Insert Block(547) into IfStatement(548) at 1", "Insert SimpleName: LOG(297) into MethodInvocation(299) at 0", "Insert SimpleName: isInfoEnabled(298) into MethodInvocation(299) at 1", "Move ExpressionStatement(303) into Block(339) at 0", "Move ExpressionStatement(310) into Block(339) at 1", "Move ExpressionStatement(317) into Block(339) at 2", "Move ExpressionStatement(324) into Block(339) at 3", "Move IfStatement(335) into Block(339) at 4", "Insert SimpleName: LOG(537) into MethodInvocation(539) at 0", "Insert SimpleName: isInfoEnabled(538) into MethodInvocation(539) at 1", "Move ExpressionStatement(538) into Block(547) at 0"]}}, {"CrawlDb_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 7", "operations": ["INS IfStatement to Block at 7", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 11", "operations": ["INS IfStatement to Block at 11", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 0"]}]}}, {"CrawlDb_diff": {"operations": ["Insert IfStatement(105) into Block(166) at 0", "Insert IfStatement(144) into Block(166) at 4", "Insert IfStatement(165) into Block(166) at 7", "Insert MethodInvocation(84) into IfStatement(105) at 0", "Insert Block(104) into IfStatement(105) at 1", "Insert MethodInvocation(137) into IfStatement(144) at 0", "Insert Block(143) into IfStatement(144) at 1", "Insert MethodInvocation(158) into IfStatement(165) at 0", "Insert Block(164) into IfStatement(165) at 1", "Insert SimpleName: LOG(82) into MethodInvocation(84) at 0", "Insert SimpleName: isInfoEnabled(83) into MethodInvocation(84) at 1", "Move ExpressionStatement(86) into Block(104) at 0", "Move ExpressionStatement(93) into Block(104) at 1", "Move ExpressionStatement(100) into Block(104) at 2", "Insert SimpleName: LOG(135) into MethodInvocation(137) at 0", "Insert SimpleName: isInfoEnabled(136) into MethodInvocation(137) at 1", "Move ExpressionStatement(134) into Block(143) at 0", "Insert SimpleName: LOG(156) into MethodInvocation(158) at 0", "Insert SimpleName: isInfoEnabled(157) into MethodInvocation(158) at 1", "Move ExpressionStatement(150) into Block(164) at 0"]}}, {"CrawlDbMerger_cluster": {"actions": [{"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"CrawlDbMerger_diff": {"operations": ["Insert Block(187) into CatchClause(188) at 1", "Insert IfStatement(186) into Block(187) at 0", "Insert MethodInvocation(175) into IfStatement(186) at 0", "Move Block(182) into IfStatement(186) at 1", "Insert SimpleName: LOG(173) into MethodInvocation(175) at 0", "Insert SimpleName: isDebugEnabled(174) into MethodInvocation(175) at 1"]}}, {"CrawlDbReader_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 23", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 23", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 28", "operations": ["INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 28"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 15", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 15", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 18", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 18", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 36", "operations": ["INS IfStatement to Block at 36", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1", "MOV WhileStatement to Block at 2", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}]}}, {"CrawlDbReader_diff": {"operations": ["Insert IfStatement(943) into Block(1398) at 0", "Insert IfStatement(1382) into Block(1398) at 22", "Insert IfStatement(1397) into Block(1398) at 24", "Insert IfStatement(1546) into Block(1643) at 0", "Insert IfStatement(1642) into Block(1643) at 13", "Insert IfStatement(1689) into Block(1941) at 0", "Insert IfStatement(1827) into Block(1941) at 16", "Insert IfStatement(1940) into Block(1941) at 33", "Insert MethodInvocation(934) into IfStatement(943) at 0", "Insert Block(942) into IfStatement(943) at 1", "Insert MethodInvocation(1206) into IfStatement(1382) at 0", "Insert Block(1381) into IfStatement(1382) at 1", "Insert MethodInvocation(1390) into IfStatement(1397) at 0", "Insert Block(1396) into IfStatement(1397) at 1", "Insert MethodInvocation(1532) into IfStatement(1546) at 0", "Insert Block(1545) into IfStatement(1546) at 1", "Insert MethodInvocation(1635) into IfStatement(1642) at 0", "Insert Block(1641) into IfStatement(1642) at 1", "Insert MethodInvocation(1670) into IfStatement(1689) at 0", "Insert Block(1688) into IfStatement(1689) at 1", "Insert MethodInvocation(1820) into IfStatement(1827) at 0", "Insert Block(1826) into IfStatement(1827) at 1", "Insert MethodInvocation(1933) into IfStatement(1940) at 0", "Insert Block(1939) into IfStatement(1940) at 1", "Insert SimpleName: LOG(932) into MethodInvocation(934) at 0", "Insert SimpleName: isInfoEnabled(933) into MethodInvocation(934) at 1", "Move ExpressionStatement(938) into Block(942) at 0", "Insert SimpleName: LOG(1204) into MethodInvocation(1206) at 0", "Insert SimpleName: isInfoEnabled(1205) into MethodInvocation(1206) at 1", "Move ExpressionStatement(1205) into Block(1381) at 0", "Move VariableDeclarationStatement(1215) into Block(1381) at 1", "Move WhileStatement(1372) into Block(1381) at 2", "Insert SimpleName: LOG(1388) into MethodInvocation(1390) at 0", "Insert SimpleName: isInfoEnabled(1389) into MethodInvocation(1390) at 1", "Move ExpressionStatement(1382) into Block(1396) at 0", "Insert SimpleName: LOG(1530) into MethodInvocation(1532) at 0", "Insert SimpleName: isInfoEnabled(1531) into MethodInvocation(1532) at 1", "Move ExpressionStatement(1519) into Block(1545) at 0", "Move ExpressionStatement(1526) into Block(1545) at 1", "Insert SimpleName: LOG(1633) into MethodInvocation(1635) at 0", "Insert SimpleName: isInfoEnabled(1634) into MethodInvocation(1635) at 1", "Move ExpressionStatement(1617) into Block(1641) at 0", "Insert SimpleName: LOG(1668) into MethodInvocation(1670) at 0", "Insert SimpleName: isInfoEnabled(1669) into MethodInvocation(1670) at 1", "Move ExpressionStatement(1652) into Block(1688) at 0", "Move ExpressionStatement(1659) into Block(1688) at 1", "Insert SimpleName: LOG(1818) into MethodInvocation(1820) at 0", "Insert SimpleName: isInfoEnabled(1819) into MethodInvocation(1820) at 1", "Move ExpressionStatement(1792) into Block(1826) at 0", "Insert SimpleName: LOG(1931) into MethodInvocation(1933) at 0", "Insert SimpleName: isInfoEnabled(1932) into MethodInvocation(1933) at 1", "Move ExpressionStatement(1900) into Block(1939) at 0"]}}, {"CrawlDbReducer_cluster": {"actions": [{"root": "INS IfStatement to SwitchStatement at 15", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to SwitchStatement at 15"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"CrawlDbReducer_diff": {"operations": ["Insert IfStatement(406) into SwitchStatement(471) at 15", "Insert MethodInvocation(397) into IfStatement(406) at 0", "Insert Block(405) into IfStatement(406) at 1", "Insert Block(501) into CatchClause(502) at 1", "Insert SimpleName: LOG(395) into MethodInvocation(397) at 0", "Insert SimpleName: isWarnEnabled(396) into MethodInvocation(397) at 1", "Move ExpressionStatement(396) into Block(405) at 0", "Insert IfStatement(500) into Block(501) at 0", "Insert MethodInvocation(489) into IfStatement(500) at 0", "Move Block(486) into IfStatement(500) at 1", "Insert SimpleName: LOG(487) into MethodInvocation(489) at 0", "Insert SimpleName: isWarnEnabled(488) into MethodInvocation(489) at 1", "Insert IfStatement(358) into Block(364) at 0", "Insert MethodInvocation(345) into IfStatement(358) at 0", "Insert Block(357) into IfStatement(358) at 1", "Insert SimpleName: LOG(343) into MethodInvocation(345) at 0", "Insert SimpleName: isWarnEnabled(344) into MethodInvocation(345) at 1", "Move ExpressionStatement(353) into Block(357) at 0"]}}, {"Generator_cluster": {"actions": [{"root": "INS IfStatement to Block at 3", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 3", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 24", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 24", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 43", "operations": ["INS IfStatement to Block at 43", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS ParenthesizedExpression to InfixExpression: && at 0", "INS MethodInvocation to ParenthesizedExpression at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS InfixExpression: && to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from ParenthesizedExpression", "operations": ["MOV InfixExpression: != to ParenthesizedExpression at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS Block to CatchClause at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: && to IfStatement at 0", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to ParenthesizedExpression at 0", "INS ParenthesizedExpression to InfixExpression: && at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV InfixExpression: == to ParenthesizedExpression at 0"]}]}}, {"Generator_diff": {"operations": ["Insert IfStatement(1134) into Block(1399) at 3", "Insert IfStatement(1267) into Block(1399) at 21", "Insert IfStatement(1396) into Block(1399) at 39", "Insert MethodInvocation(1115) into IfStatement(1134) at 0", "Insert Block(1133) into IfStatement(1134) at 1", "Insert MethodInvocation(1260) into IfStatement(1267) at 0", "Insert Block(1266) into IfStatement(1267) at 1", "Insert MethodInvocation(1389) into IfStatement(1396) at 0", "Insert Block(1395) into IfStatement(1396) at 1", "Insert InfixExpression: &&(1602) into IfStatement(1611) at 0", "Insert Block(1610) into IfStatement(1611) at 1", "Insert SimpleName: LOG(1113) into MethodInvocation(1115) at 0", "Insert SimpleName: isInfoEnabled(1114) into MethodInvocation(1115) at 1", "Move ExpressionStatement(1090) into Block(1133) at 0", "Move ExpressionStatement(1097) into Block(1133) at 1", "Move ExpressionStatement(1102) into Block(1133) at 2", "Insert SimpleName: LOG(1258) into MethodInvocation(1260) at 0", "Insert SimpleName: isInfoEnabled(1259) into MethodInvocation(1260) at 1", "Move ExpressionStatement(1230) into Block(1266) at 0", "Insert SimpleName: LOG(1387) into MethodInvocation(1389) at 0", "Insert SimpleName: isInfoEnabled(1388) into MethodInvocation(1389) at 1", "Move ExpressionStatement(1354) into Block(1395) at 0", "Insert ParenthesizedExpression(1597) into InfixExpression: &&(1602) at 0", "Insert ParenthesizedExpression(1601) into InfixExpression: &&(1602) at 1", "Move ExpressionStatement(1561) into Block(1610) at 0", "Insert Block(366) into CatchClause(367) at 1", "Insert Block(428) into CatchClause(429) at 1", "Insert MethodInvocation(1596) into ParenthesizedExpression(1597) at 0", "Move InfixExpression: !=(1554) into ParenthesizedExpression(1601) at 0", "Insert IfStatement(365) into Block(366) at 0", "Insert IfStatement(427) into Block(428) at 0", "Insert SimpleName: LOG(1594) into MethodInvocation(1596) at 0", "Insert SimpleName: isInfoEnabled(1595) into MethodInvocation(1596) at 1", "Insert MethodInvocation(351) into IfStatement(365) at 0", "Move Block(361) into IfStatement(365) at 1", "Insert MethodInvocation(416) into IfStatement(427) at 0", "Move Block(418) into IfStatement(427) at 1", "Insert SimpleName: LOG(349) into MethodInvocation(351) at 0", "Insert SimpleName: isWarnEnabled(350) into MethodInvocation(351) at 1", "Insert SimpleName: LOG(414) into MethodInvocation(416) at 0", "Insert SimpleName: isWarnEnabled(415) into MethodInvocation(416) at 1", "Insert Block(692) into IfStatement(693) at 1", "Insert IfStatement(691) into Block(692) at 0", "Insert IfStatement(596) into Block(621) at 0", "Insert MethodInvocation(678) into IfStatement(691) at 0", "Move Block(665) into IfStatement(691) at 1", "Insert MethodInvocation(586) into IfStatement(596) at 0", "Insert Block(595) into IfStatement(596) at 1", "Insert InfixExpression: &&(610) into IfStatement(619) at 0", "Insert Block(618) into IfStatement(619) at 1", "Insert SimpleName: LOG(676) into MethodInvocation(678) at 0", "Insert SimpleName: isInfoEnabled(677) into MethodInvocation(678) at 1", "Insert SimpleName: LOG(584) into MethodInvocation(586) at 0", "Insert SimpleName: isDebugEnabled(585) into MethodInvocation(586) at 1", "Move ExpressionStatement(581) into Block(595) at 0", "Insert ParenthesizedExpression(605) into InfixExpression: &&(610) at 0", "Insert ParenthesizedExpression(609) into InfixExpression: &&(610) at 1", "Move ExpressionStatement(596) into Block(618) at 0", "Move InfixExpression: ==(589) into ParenthesizedExpression(605) at 0", "Insert MethodInvocation(608) into ParenthesizedExpression(609) at 0", "Insert SimpleName: LOG(606) into MethodInvocation(608) at 0", "Insert SimpleName: isWarnEnabled(607) into MethodInvocation(608) at 1"]}}, {"Injector_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS IfStatement to Block at 5", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 17", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS IfStatement to Block at 17"]}, {"root": "INS IfStatement to Block at 25", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 25", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"Injector_diff": {"operations": ["Insert IfStatement(417) into Block(584) at 0", "Insert IfStatement(452) into Block(584) at 2", "Insert IfStatement(529) into Block(584) at 13", "Insert IfStatement(583) into Block(584) at 20", "Insert MethodInvocation(396) into IfStatement(417) at 0", "Insert Block(416) into IfStatement(417) at 1", "Insert MethodInvocation(445) into IfStatement(452) at 0", "Insert Block(451) into IfStatement(452) at 1", "Insert MethodInvocation(522) into IfStatement(529) at 0", "Insert Block(528) into IfStatement(529) at 1", "Insert MethodInvocation(576) into IfStatement(583) at 0", "Insert Block(582) into IfStatement(583) at 1", "Insert SimpleName: LOG(394) into MethodInvocation(396) at 0", "Insert SimpleName: isInfoEnabled(395) into MethodInvocation(396) at 1", "Move ExpressionStatement(388) into Block(416) at 0", "Move ExpressionStatement(395) into Block(416) at 1", "Move ExpressionStatement(402) into Block(416) at 2", "Insert SimpleName: LOG(443) into MethodInvocation(445) at 0", "Insert SimpleName: isInfoEnabled(444) into MethodInvocation(445) at 1", "Move ExpressionStatement(432) into Block(451) at 0", "Insert SimpleName: LOG(520) into MethodInvocation(522) at 0", "Insert SimpleName: isInfoEnabled(521) into MethodInvocation(522) at 1", "Move ExpressionStatement(504) into Block(528) at 0", "Insert SimpleName: LOG(574) into MethodInvocation(576) at 0", "Insert SimpleName: isInfoEnabled(575) into MethodInvocation(576) at 1", "Move ExpressionStatement(553) into Block(582) at 0", "Insert IfStatement(233) into Block(238) at 0", "Insert MethodInvocation(222) into IfStatement(233) at 0", "Insert Block(232) into IfStatement(233) at 1", "Insert SimpleName: LOG(220) into MethodInvocation(222) at 0", "Insert SimpleName: isWarnEnabled(221) into MethodInvocation(222) at 1", "Move ExpressionStatement(228) into Block(232) at 0", "Insert IfStatement(291) into Block(297) at 0", "Insert MethodInvocation(277) into IfStatement(291) at 0", "Insert Block(290) into IfStatement(291) at 1", "Insert SimpleName: LOG(275) into MethodInvocation(277) at 0", "Insert SimpleName: isWarnEnabled(276) into MethodInvocation(277) at 1", "Move ExpressionStatement(281) into Block(290) at 0"]}}, {"LinkDb_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 9", "operations": ["INS IfStatement to Block at 9", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS Block to CatchClause at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"LinkDb_diff": {"operations": ["Insert IfStatement(814) into Block(953) at 0", "Insert IfStatement(952) into Block(953) at 7", "Insert MethodInvocation(800) into IfStatement(814) at 0", "Insert Block(813) into IfStatement(814) at 1", "Insert MethodInvocation(945) into IfStatement(952) at 0", "Insert Block(951) into IfStatement(952) at 1", "Insert SimpleName: LOG(798) into MethodInvocation(800) at 0", "Insert SimpleName: isInfoEnabled(799) into MethodInvocation(800) at 1", "Move ExpressionStatement(792) into Block(813) at 0", "Move ExpressionStatement(799) into Block(813) at 1", "Insert IfStatement(849) into Block(861) at 0", "Insert IfStatement(893) into Block(935) at 0", "Insert SimpleName: LOG(943) into MethodInvocation(945) at 0", "Insert SimpleName: isInfoEnabled(944) into MethodInvocation(945) at 1", "Move ExpressionStatement(922) into Block(951) at 0", "Insert MethodInvocation(838) into IfStatement(849) at 0", "Insert Block(848) into IfStatement(849) at 1", "Insert MethodInvocation(884) into IfStatement(893) at 0", "Insert Block(892) into IfStatement(893) at 1", "Insert SimpleName: LOG(836) into MethodInvocation(838) at 0", "Insert SimpleName: isInfoEnabled(837) into MethodInvocation(838) at 1", "Move ExpressionStatement(829) into Block(848) at 0", "Insert SimpleName: LOG(882) into MethodInvocation(884) at 0", "Insert SimpleName: isInfoEnabled(883) into MethodInvocation(884) at 1", "Move ExpressionStatement(868) into Block(892) at 0", "Insert Block(201) into CatchClause(202) at 1", "Insert IfStatement(200) into Block(201) at 0", "Insert MethodInvocation(189) into IfStatement(200) at 0", "Move Block(196) into IfStatement(200) at 1", "Insert SimpleName: LOG(187) into MethodInvocation(189) at 0", "Insert SimpleName: isDebugEnabled(188) into MethodInvocation(189) at 1", "Insert Block(309) into CatchClause(310) at 1", "Insert IfStatement(308) into Block(309) at 0", "Insert MethodInvocation(297) into IfStatement(308) at 0", "Move Block(299) into IfStatement(308) at 1", "Insert SimpleName: LOG(295) into MethodInvocation(297) at 0", "Insert SimpleName: isDebugEnabled(296) into MethodInvocation(297) at 1"]}}, {"LinkDbReader_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}]}}, {"LinkDbReader_diff": {"operations": ["Insert IfStatement(272) into Block(359) at 0", "Insert MethodInvocation(258) into IfStatement(272) at 0", "Insert Block(271) into IfStatement(272) at 1", "Insert SimpleName: LOG(256) into MethodInvocation(258) at 0", "Insert SimpleName: isInfoEnabled(257) into MethodInvocation(258) at 1", "Move ExpressionStatement(260) into Block(271) at 0", "Move ExpressionStatement(267) into Block(271) at 1"]}}, {"MapWritable_cluster": {"actions": [{"root": "INS Block to CatchClause at 1", "operations": ["INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to CatchClause at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "UPDATE from \"MapWritable: unable to load internal map entry\" to \"Unable to load internal map entry\"", "operations": ["UPD StringLiteral: \"MapWritable: unable to load internal map entry\" from \"MapWritable: unable to load internal map entry\" to \"Unable to load internal map entry\""]}, {"root": "UPDATE from \"MapWritable: unable to load meta data entry, ignoring.. : \" to \"Unable to load meta data entry, ignoring.. : \"", "operations": ["UPD StringLiteral: \"MapWritable: unable to load meta data entry, ignoring.. : \" from \"MapWritable: unable to load meta data entry, ignoring.. : \" to \"Unable to load meta data entry, ignoring.. : \""]}]}}, {"MapWritable_diff": {"operations": ["Insert Block(1163) into CatchClause(1164) at 1", "Insert Block(1244) into CatchClause(1245) at 1", "Insert IfStatement(1159) into Block(1163) at 0", "Move ExpressionStatement(1157) into Block(1163) at 1", "Insert IfStatement(1240) into Block(1244) at 0", "Move ExpressionStatement(1233) into Block(1244) at 1", "Insert MethodInvocation(1148) into IfStatement(1159) at 0", "Move Block(1158) into IfStatement(1159) at 1", "Insert MethodInvocation(1229) into IfStatement(1240) at 0", "Move Block(1234) into IfStatement(1240) at 1", "Insert SimpleName: LOG(1146) into MethodInvocation(1148) at 0", "Insert SimpleName: isWarnEnabled(1147) into MethodInvocation(1148) at 1", "Insert SimpleName: LOG(1227) into MethodInvocation(1229) at 0", "Insert SimpleName: isWarnEnabled(1228) into MethodInvocation(1229) at 1", "Update StringLiteral: \"MapWritable: unable to load internal map entry\"(1148) to \"Unable to load internal map entry\"", "Update StringLiteral: \"MapWritable: unable to load meta data entry, ignoring.. : \"(1224) to \"Unable to load meta data entry, ignoring.. : \""]}}, {"SignatureFactory_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"SignatureFactory_diff": {"operations": ["Insert IfStatement(99) into Block(129) at 0", "Insert MethodInvocation(90) into IfStatement(99) at 0", "Insert Block(98) into IfStatement(99) at 1", "Insert SimpleName: LOG(88) into MethodInvocation(90) at 0", "Insert SimpleName: isInfoEnabled(89) into MethodInvocation(90) at 1", "Move ExpressionStatement(94) into Block(98) at 0"]}}, {"Fetcher_cluster": {"actions": [{"root": "INS IfStatement to Block at 5", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 5", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 19", "operations": ["INS IfStatement to Block at 19", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to CatchClause at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS Block to CatchClause at 1", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to SwitchStatement at 27", "operations": ["INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to SwitchStatement at 27"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to IfStatement at 2"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS IfStatement to Block at 3", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS IfStatement to IfStatement at 2", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 3", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}]}}, {"Fetcher_diff": {"operations": ["Insert IfStatement(1542) into Block(1626) at 5", "Insert IfStatement(1659) into Block(1780) at 0", "Insert IfStatement(1779) into Block(1780) at 17", "Insert IfStatement(932) into Block(940) at 0", "Insert MethodInvocation(1533) into IfStatement(1542) at 0", "Insert Block(1541) into IfStatement(1542) at 1", "Insert MethodInvocation(1645) into IfStatement(1659) at 0", "Insert Block(1658) into IfStatement(1659) at 1", "Insert MethodInvocation(1772) into IfStatement(1779) at 0", "Insert Block(1778) into IfStatement(1779) at 1", "Insert MethodInvocation(921) into IfStatement(932) at 0", "Insert Block(931) into IfStatement(932) at 1", "Insert SimpleName: LOG(1531) into MethodInvocation(1533) at 0", "Insert SimpleName: isInfoEnabled(1532) into MethodInvocation(1533) at 1", "Move ExpressionStatement(1464) into Block(1541) at 0", "Insert SimpleName: LOG(1643) into MethodInvocation(1645) at 0", "Insert SimpleName: isInfoEnabled(1644) into MethodInvocation(1645) at 1", "Move ExpressionStatement(1564) into Block(1658) at 0", "Move ExpressionStatement(1571) into Block(1658) at 1", "Insert SimpleName: LOG(1770) into MethodInvocation(1772) at 0", "Insert SimpleName: isInfoEnabled(1771) into MethodInvocation(1772) at 1", "Move ExpressionStatement(1686) into Block(1778) at 0", "Insert Block(895) into CatchClause(896) at 1", "Insert SimpleName: LOG(919) into MethodInvocation(921) at 0", "Insert SimpleName: isInfoEnabled(920) into MethodInvocation(921) at 1", "Move ExpressionStatement(879) into Block(931) at 0", "Insert Block(1055) into CatchClause(1056) at 1", "Insert Block(1275) into CatchClause(1276) at 1", "Insert IfStatement(894) into Block(895) at 0", "Insert IfStatement(1054) into Block(1055) at 0", "Insert IfStatement(1274) into Block(1275) at 0", "Insert MethodInvocation(875) into IfStatement(894) at 0", "Move Block(847) into IfStatement(894) at 1", "Insert MethodInvocation(1034) into IfStatement(1054) at 0", "Move Block(997) into IfStatement(1054) at 1", "Insert IfStatement(1123) into Block(1132) at 0", "Insert Block(1221) into CatchClause(1222) at 1", "Insert MethodInvocation(1255) into IfStatement(1274) at 0", "Move Block(1202) into IfStatement(1274) at 1", "Insert Block(1617) into IfStatement(1618) at 1", "Insert SimpleName: LOG(873) into MethodInvocation(875) at 0", "Insert SimpleName: isFatalEnabled(874) into MethodInvocation(875) at 1", "Insert SimpleName: LOG(1032) into MethodInvocation(1034) at 0", "Insert SimpleName: isWarnEnabled(1033) into MethodInvocation(1034) at 1", "Insert MethodInvocation(1112) into IfStatement(1123) at 0", "Insert Block(1122) into IfStatement(1123) at 1", "Insert IfStatement(1220) into Block(1221) at 0", "Insert SimpleName: LOG(1253) into MethodInvocation(1255) at 0", "Insert SimpleName: isFatalEnabled(1254) into MethodInvocation(1255) at 1", "Insert IfStatement(1615) into Block(1617) at 0", "Insert ReturnStatement(1616) into Block(1617) at 1", "Insert IfStatement(465) into Block(844) at 0", "Insert SimpleName: LOG(1110) into MethodInvocation(1112) at 0", "Insert SimpleName: isWarnEnabled(1111) into MethodInvocation(1112) at 1", "Move ExpressionStatement(1060) into Block(1122) at 0", "Insert MethodInvocation(1200) into IfStatement(1220) at 0", "Move Block(1153) into IfStatement(1220) at 1", "Insert MethodInvocation(1605) into IfStatement(1615) at 0", "Move Block(1534) into IfStatement(1615) at 1", "Insert IfStatement(426) into Block(428) at 0", "Insert MethodInvocation(456) into IfStatement(465) at 0", "Insert Block(464) into IfStatement(465) at 1", "Insert SimpleName: LOG(1198) into MethodInvocation(1200) at 0", "Insert SimpleName: isWarnEnabled(1199) into MethodInvocation(1200) at 1", "Insert SimpleName: LOG(1603) into MethodInvocation(1605) at 0", "Insert SimpleName: isWarnEnabled(1604) into MethodInvocation(1605) at 1", "Insert MethodInvocation(407) into IfStatement(426) at 0", "Insert Block(425) into IfStatement(426) at 1", "Insert SimpleName: LOG(454) into MethodInvocation(456) at 0", "Insert SimpleName: isInfoEnabled(455) into MethodInvocation(456) at 1", "Move ExpressionStatement(455) into Block(464) at 0", "Insert IfStatement(486) into Block(836) at 0", "Insert SimpleName: LOG(405) into MethodInvocation(407) at 0", "Insert SimpleName: isFatalEnabled(406) into MethodInvocation(407) at 1", "Move ExpressionStatement(412) into Block(425) at 0", "Move ExpressionStatement(421) into Block(425) at 1", "Insert MethodInvocation(477) into IfStatement(486) at 0", "Insert Block(485) into IfStatement(486) at 1", "Insert IfStatement(801) into SwitchStatement(809) at 27", "Insert SimpleName: LOG(475) into MethodInvocation(477) at 0", "Insert SimpleName: isDebugEnabled(476) into MethodInvocation(477) at 1", "Move ExpressionStatement(475) into Block(485) at 0", "Insert IfStatement(738) into IfStatement(739) at 2", "Insert MethodInvocation(790) into IfStatement(801) at 0", "Insert Block(800) into IfStatement(801) at 1", "Insert IfStatement(826) into Block(834) at 0", "Insert IfStatement(719) into Block(720) at 3", "Insert MethodInvocation(723) into IfStatement(738) at 0", "Move Block(705) into IfStatement(738) at 1", "Insert SimpleName: LOG(788) into MethodInvocation(790) at 0", "Insert SimpleName: isWarnEnabled(789) into MethodInvocation(790) at 1", "Move ExpressionStatement(763) into Block(800) at 0", "Insert MethodInvocation(817) into IfStatement(826) at 0", "Insert Block(825) into IfStatement(826) at 1", "Insert IfStatement(650) into IfStatement(651) at 2", "Insert MethodInvocation(710) into IfStatement(719) at 0", "Insert Block(718) into IfStatement(719) at 1", "Insert SimpleName: LOG(721) into MethodInvocation(723) at 0", "Insert SimpleName: isDebugEnabled(722) into MethodInvocation(723) at 1", "Insert SimpleName: LOG(815) into MethodInvocation(817) at 0", "Insert SimpleName: isInfoEnabled(816) into MethodInvocation(817) at 1", "Move ExpressionStatement(783) into Block(825) at 0", "Insert IfStatement(631) into Block(632) at 3", "Insert MethodInvocation(635) into IfStatement(650) at 0", "Move Block(626) into IfStatement(650) at 1", "Insert SimpleName: LOG(708) into MethodInvocation(710) at 0", "Insert SimpleName: isDebugEnabled(709) into MethodInvocation(710) at 1", "Move ExpressionStatement(690) into Block(718) at 0", "Insert MethodInvocation(622) into IfStatement(631) at 0", "Insert Block(630) into IfStatement(631) at 1", "Insert SimpleName: LOG(633) into MethodInvocation(635) at 0", "Insert SimpleName: isDebugEnabled(634) into MethodInvocation(635) at 1", "Insert SimpleName: LOG(620) into MethodInvocation(622) at 0", "Insert SimpleName: isDebugEnabled(621) into MethodInvocation(622) at 1", "Move ExpressionStatement(611) into Block(630) at 0", "Delete ReturnStatement(1533)"]}}, {"DeleteDuplicates_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 31", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 31", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"DeleteDuplicates_diff": {"operations": ["Insert IfStatement(1167) into Block(1413) at 0", "Insert IfStatement(1412) into Block(1413) at 30", "Insert MethodInvocation(1160) into IfStatement(1167) at 0", "Insert Block(1166) into IfStatement(1167) at 1", "Insert MethodInvocation(1405) into IfStatement(1412) at 0", "Insert Block(1411) into IfStatement(1412) at 1", "Insert SimpleName: LOG(1158) into MethodInvocation(1160) at 0", "Insert SimpleName: isInfoEnabled(1159) into MethodInvocation(1160) at 1", "Move ExpressionStatement(1162) into Block(1166) at 0", "Insert IfStatement(1220) into Block(1228) at 0", "Insert SimpleName: LOG(1403) into MethodInvocation(1405) at 0", "Insert SimpleName: isInfoEnabled(1404) into MethodInvocation(1405) at 1", "Move ExpressionStatement(1397) into Block(1411) at 0", "Insert MethodInvocation(1209) into IfStatement(1220) at 0", "Insert Block(1219) into IfStatement(1220) at 1", "Insert SimpleName: LOG(1207) into MethodInvocation(1209) at 0", "Insert SimpleName: isInfoEnabled(1208) into MethodInvocation(1209) at 1", "Move ExpressionStatement(1210) into Block(1219) at 0"]}}, {"IndexMerger_cluster": {"actions": [{"root": "INS IfStatement to Block at 10", "operations": ["INS IfStatement to Block at 10", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 18", "operations": ["INS IfStatement to Block at 18", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"IndexMerger_diff": {"operations": ["Insert IfStatement(478) into Block(560) at 10", "Insert IfStatement(554) into Block(560) at 17", "Insert MethodInvocation(469) into IfStatement(478) at 0", "Insert Block(477) into IfStatement(478) at 1", "Insert MethodInvocation(547) into IfStatement(554) at 0", "Insert Block(553) into IfStatement(554) at 1", "Insert IfStatement(224) into Block(241) at 0", "Insert SimpleName: LOG(467) into MethodInvocation(469) at 0", "Insert SimpleName: isInfoEnabled(468) into MethodInvocation(469) at 1", "Move ExpressionStatement(468) into Block(477) at 0", "Insert SimpleName: LOG(545) into MethodInvocation(547) at 0", "Insert SimpleName: isInfoEnabled(546) into MethodInvocation(547) at 1", "Move ExpressionStatement(539) into Block(553) at 0", "Insert MethodInvocation(213) into IfStatement(224) at 0", "Insert Block(223) into IfStatement(224) at 1", "Insert SimpleName: LOG(211) into MethodInvocation(213) at 0", "Insert SimpleName: isInfoEnabled(212) into MethodInvocation(213) at 1", "Move ExpressionStatement(219) into Block(223) at 0"]}}, {"Indexer_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 17", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 17"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS ReturnStatement to Block at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to CatchClause at 1", "INS IfStatement to Block at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS ReturnStatement to Block at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to CatchClause at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to IfStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}]}}, {"Indexer_diff": {"operations": ["Insert IfStatement(1014) into Block(1178) at 0", "Insert IfStatement(1177) into Block(1178) at 15", "Insert MethodInvocation(1000) into IfStatement(1014) at 0", "Insert Block(1013) into IfStatement(1014) at 1", "Insert MethodInvocation(1170) into IfStatement(1177) at 0", "Insert Block(1176) into IfStatement(1177) at 1", "Insert Block(896) into CatchClause(897) at 1", "Insert Block(942) into CatchClause(943) at 1", "Insert SimpleName: LOG(998) into MethodInvocation(1000) at 0", "Insert SimpleName: isInfoEnabled(999) into MethodInvocation(1000) at 1", "Move ExpressionStatement(978) into Block(1013) at 0", "Move ExpressionStatement(985) into Block(1013) at 1", "Insert IfStatement(1055) into Block(1089) at 0", "Insert SimpleName: LOG(1168) into MethodInvocation(1170) at 0", "Insert SimpleName: isInfoEnabled(1169) into MethodInvocation(1170) at 1", "Move ExpressionStatement(1138) into Block(1176) at 0", "Insert IfStatement(894) into Block(896) at 0", "Insert ReturnStatement(895) into Block(896) at 1", "Insert IfStatement(940) into Block(942) at 0", "Insert ReturnStatement(941) into Block(942) at 1", "Insert MethodInvocation(1044) into IfStatement(1055) at 0", "Insert Block(1054) into IfStatement(1055) at 1", "Insert MethodInvocation(883) into IfStatement(894) at 0", "Move Block(877) into IfStatement(894) at 1", "Insert MethodInvocation(929) into IfStatement(940) at 0", "Move Block(918) into IfStatement(940) at 1", "Insert SimpleName: LOG(1042) into MethodInvocation(1044) at 0", "Insert SimpleName: isInfoEnabled(1043) into MethodInvocation(1044) at 1", "Move ExpressionStatement(1021) into Block(1054) at 0", "Insert SimpleName: LOG(881) into MethodInvocation(883) at 0", "Insert SimpleName: isWarnEnabled(882) into MethodInvocation(883) at 1", "Insert SimpleName: LOG(927) into MethodInvocation(929) at 0", "Insert SimpleName: isWarnEnabled(928) into MethodInvocation(929) at 1", "Insert IfStatement(430) into Block(437) at 2", "Insert IfStatement(781) into IfStatement(782) at 2", "Insert MethodInvocation(407) into IfStatement(430) at 0", "Insert Block(429) into IfStatement(430) at 1", "Insert MethodInvocation(770) into IfStatement(781) at 0", "Move Block(767) into IfStatement(781) at 1", "Insert SimpleName: LOG(405) into MethodInvocation(407) at 0", "Insert SimpleName: isInfoEnabled(406) into MethodInvocation(407) at 1", "Move ExpressionStatement(425) into Block(429) at 0", "Insert IfStatement(506) into Block(530) at 1", "Insert SimpleName: LOG(768) into MethodInvocation(770) at 0", "Insert SimpleName: isWarnEnabled(769) into MethodInvocation(770) at 1", "Insert MethodInvocation(499) into IfStatement(506) at 0", "Insert Block(505) into IfStatement(506) at 1", "Insert SimpleName: LOG(497) into MethodInvocation(499) at 0", "Insert SimpleName: isInfoEnabled(498) into MethodInvocation(499) at 1", "Move ExpressionStatement(496) into Block(505) at 0", "Delete ReturnStatement(876)", "Delete ReturnStatement(917)"]}}, {"IndexingFilters_cluster": {"actions": [{"root": "INS IfStatement to Block at 2", "operations": ["INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 2", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"IndexingFilters_diff": {"operations": ["Insert IfStatement(178) into Block(200) at 2", "Insert MethodInvocation(165) into IfStatement(178) at 0", "Insert Block(177) into IfStatement(178) at 1", "Insert SimpleName: LOG(163) into MethodInvocation(165) at 0", "Insert SimpleName: isInfoEnabled(164) into MethodInvocation(165) at 1", "Move ExpressionStatement(173) into Block(177) at 0"]}}, {"RegexUrlNormalizer_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to CatchClause at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: && to IfStatement at 0", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS ParenthesizedExpression to InfixExpression: && at 0", "INS MethodInvocation to ParenthesizedExpression at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from ParenthesizedExpression", "operations": ["MOV PrefixExpression: ! to ParenthesizedExpression at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS ParenthesizedExpression to InfixExpression: && at 0", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to ParenthesizedExpression at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS ParenthesizedExpression to InfixExpression: && at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from ParenthesizedExpression", "operations": ["MOV PrefixExpression: ! to ParenthesizedExpression at 0", "MOV ExpressionStatement to Block at 0"]}]}}, {"RegexUrlNormalizer_diff": {"operations": ["Insert IfStatement(250) into Block(511) at 0", "Insert Block(530) into CatchClause(531) at 1", "Insert MethodInvocation(241) into IfStatement(250) at 0", "Insert Block(249) into IfStatement(250) at 1", "Insert InfixExpression: &&(284) into IfStatement(291) at 0", "Insert Block(290) into IfStatement(291) at 1", "Insert IfStatement(529) into Block(530) at 0", "Insert SimpleName: LOG(239) into MethodInvocation(241) at 0", "Insert SimpleName: isInfoEnabled(240) into MethodInvocation(241) at 1", "Move ExpressionStatement(245) into Block(249) at 0", "Insert ParenthesizedExpression(279) into InfixExpression: &&(284) at 0", "Insert ParenthesizedExpression(283) into InfixExpression: &&(284) at 1", "Move ExpressionStatement(278) into Block(290) at 0", "Insert MethodInvocation(518) into IfStatement(529) at 0", "Move Block(506) into IfStatement(529) at 1", "Move PrefixExpression: !(273) into ParenthesizedExpression(279) at 0", "Insert MethodInvocation(282) into ParenthesizedExpression(283) at 0", "Insert InfixExpression: &&(350) into IfStatement(357) at 0", "Insert Block(356) into IfStatement(357) at 1", "Insert SimpleName: LOG(516) into MethodInvocation(518) at 0", "Insert SimpleName: isFatalEnabled(517) into MethodInvocation(518) at 1", "Insert SimpleName: LOG(280) into MethodInvocation(282) at 0", "Insert SimpleName: isFatalEnabled(281) into MethodInvocation(282) at 1", "Insert ParenthesizedExpression(345) into InfixExpression: &&(350) at 0", "Insert ParenthesizedExpression(349) into InfixExpression: &&(350) at 1", "Move ExpressionStatement(337) into Block(356) at 0", "Move PrefixExpression: !(332) into ParenthesizedExpression(345) at 0", "Insert MethodInvocation(348) into ParenthesizedExpression(349) at 0", "Insert SimpleName: LOG(346) into MethodInvocation(348) at 0", "Insert SimpleName: isWarnEnabled(347) into MethodInvocation(348) at 1"]}}, {"UrlNormalizerFactory_cluster": {"actions": [{"root": "INS IfStatement to Block at 1", "operations": ["INS IfStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"UrlNormalizerFactory_diff": {"operations": ["Insert IfStatement(113) into Block(151) at 1", "Insert MethodInvocation(104) into IfStatement(113) at 0", "Insert Block(112) into IfStatement(113) at 1", "Insert SimpleName: LOG(102) into MethodInvocation(104) at 0", "Insert SimpleName: isInfoEnabled(103) into MethodInvocation(104) at 1", "Move ExpressionStatement(108) into Block(112) at 0"]}}, {"OntologyFactory_cluster": {"actions": [{"root": "INS IfStatement to Block at 2", "operations": ["INS IfStatement to Block at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"OntologyFactory_diff": {"operations": ["Insert IfStatement(166) into Block(167) at 2", "Insert IfStatement(199) into Block(209) at 0", "Insert MethodInvocation(156) into IfStatement(166) at 0", "Insert Block(165) into IfStatement(166) at 1", "Insert MethodInvocation(186) into IfStatement(199) at 0", "Insert Block(198) into IfStatement(199) at 1", "Insert IfStatement(144) into Block(152) at 0", "Insert SimpleName: LOG(154) into MethodInvocation(156) at 0", "Insert SimpleName: isWarnEnabled(155) into MethodInvocation(156) at 1", "Move ExpressionStatement(156) into Block(165) at 0", "Insert SimpleName: LOG(184) into MethodInvocation(186) at 0", "Insert SimpleName: isInfoEnabled(185) into MethodInvocation(186) at 1", "Move ExpressionStatement(184) into Block(198) at 0", "Insert MethodInvocation(135) into IfStatement(144) at 0", "Insert Block(143) into IfStatement(144) at 1", "Insert SimpleName: LOG(133) into MethodInvocation(135) at 0", "Insert SimpleName: isInfoEnabled(134) into MethodInvocation(135) at 1", "Move ExpressionStatement(139) into Block(143) at 0"]}}, {"OutlinkExtractor_cluster": {"actions": [{"root": "INS Block to CatchClause at 1", "operations": ["INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: isErrorEnabled to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS BreakStatement to Block at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "DEL BreakStatement", "operations": ["DEL BreakStatement"]}]}}, {"OutlinkExtractor_diff": {"operations": [" *      href=\"http://wiki.java.net/bin/view/Javapedia/RegularExpressions\">Comparison", " *      of different regexp-Implementations </a>(44) to TextElement:  <a", " *      href=\"http://wiki.java.net/bin/view/Javapedia/RegularExpressions\">Comparison", " *      of different regexp-Implementations </a>(44)", "   *      href=\"http://www.truerwords.net/articles/ut/urlactivation.html\">http://www.truerwords.net/articles/ut/urlactivation.html", "   *      </a>(73) to TextElement:  <a", "   *      href=\"http://www.truerwords.net/articles/ut/urlactivation.html\">http://www.truerwords.net/articles/ut/urlactivation.html", "   *      </a>(73)", " *      </a>(46) to TextElement:  <a href=\"http://regex.info/java.html\">Overview about Java Regexp APIs", " *      </a>(46)", "Insert Block(286) into CatchClause(287) at 1", "Insert IfStatement(285) into Block(286) at 0", "Insert MethodInvocation(277) into IfStatement(285) at 0", "Move Block(276) into IfStatement(285) at 1", "Insert Block(243) into IfStatement(244) at 1", "Insert SimpleName: LOG(275) into MethodInvocation(277) at 0", "Insert SimpleName: isErrorEnabled(276) into MethodInvocation(277) at 1", "Insert IfStatement(241) into Block(243) at 0", "Insert BreakStatement(242) into Block(243) at 1", "Insert MethodInvocation(234) into IfStatement(241) at 0", "Move Block(238) into IfStatement(241) at 1", "Insert SimpleName: LOG(232) into MethodInvocation(234) at 0", "Insert SimpleName: isWarnEnabled(233) into MethodInvocation(234) at 1", "Delete BreakStatement(237)"]}}, {"ParseOutputFormat_cluster": {"actions": [{"root": "INS Block to CatchClause at 1", "operations": ["INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS ContinueStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to CatchClause at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "DEL ContinueStatement", "operations": ["DEL ContinueStatement"]}]}}, {"ParseOutputFormat_diff": {"operations": ["Insert Block(538) into CatchClause(539) at 1", "Insert IfStatement(536) into Block(538) at 0", "Insert ContinueStatement(537) into Block(538) at 1", "Insert MethodInvocation(521) into IfStatement(536) at 0", "Move Block(533) into IfStatement(536) at 1", "Insert SimpleName: LOG(519) into MethodInvocation(521) at 0", "Insert SimpleName: isWarnEnabled(520) into MethodInvocation(521) at 1", "Delete ContinueStatement(532)"]}}, {"ParsePluginsReader_cluster": {"actions": [{"root": "INS Block to IfStatement at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to CatchClause at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS IfStatement to IfStatement at 2", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"ParsePluginsReader_diff": {"operations": ["Insert Block(775) into IfStatement(776) at 1", "Insert Block(792) into IfStatement(793) at 1", "Insert Block(274) into CatchClause(275) at 1", "Insert IfStatement(772) into Block(775) at 0", "Move ReturnStatement(755) into Block(775) at 1", "Insert IfStatement(791) into Block(792) at 0", "Insert IfStatement(271) into Block(274) at 0", "Move ReturnStatement(263) into Block(274) at 1", "Insert IfStatement(494) into IfStatement(495) at 2", "Insert MethodInvocation(765) into IfStatement(772) at 0", "Move Block(756) into IfStatement(772) at 1", "Insert MethodInvocation(784) into IfStatement(791) at 0", "Move Block(768) into IfStatement(791) at 1", "Insert Block(209) into CatchClause(210) at 1", "Insert MethodInvocation(258) into IfStatement(271) at 0", "Move Block(264) into IfStatement(271) at 1", "Insert MethodInvocation(484) into IfStatement(494) at 0", "Move Block(480) into IfStatement(494) at 1", "Insert SimpleName: LOG(763) into MethodInvocation(765) at 0", "Insert SimpleName: isWarnEnabled(764) into MethodInvocation(765) at 1", "Insert SimpleName: LOG(782) into MethodInvocation(784) at 0", "Insert SimpleName: isWarnEnabled(783) into MethodInvocation(784) at 1", "Insert IfStatement(879) into Block(895) at 3", "Insert IfStatement(206) into Block(209) at 0", "Move ReturnStatement(203) into Block(209) at 1", "Insert SimpleName: LOG(256) into MethodInvocation(258) at 0", "Insert SimpleName: isWarnEnabled(257) into MethodInvocation(258) at 1", "Insert SimpleName: LOG(482) into MethodInvocation(484) at 0", "Insert SimpleName: isWarnEnabled(483) into MethodInvocation(484) at 1", "Insert MethodInvocation(868) into IfStatement(879) at 0", "Insert Block(878) into IfStatement(879) at 1", "Insert MethodInvocation(192) into IfStatement(206) at 0", "Move Block(204) into IfStatement(206) at 1", "Insert SimpleName: LOG(866) into MethodInvocation(868) at 0", "Insert SimpleName: isTraceEnabled(867) into MethodInvocation(868) at 1", "Move ExpressionStatement(850) into Block(878) at 0", "Insert SimpleName: LOG(190) into MethodInvocation(192) at 0", "Insert SimpleName: isWarnEnabled(191) into MethodInvocation(192) at 1"]}}, {"ParseSegment_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 16", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 16", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to IfStatement at 2", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS ReturnStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to CatchClause at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}]}}, {"ParseSegment_diff": {"operations": ["Insert IfStatement(353) into Block(456) at 0", "Insert IfStatement(455) into Block(456) at 14", "Insert IfStatement(290) into IfStatement(291) at 2", "Insert MethodInvocation(339) into IfStatement(353) at 0", "Insert Block(352) into IfStatement(353) at 1", "Insert MethodInvocation(448) into IfStatement(455) at 0", "Insert Block(454) into IfStatement(455) at 1", "Insert MethodInvocation(277) into IfStatement(290) at 0", "Move Block(281) into IfStatement(290) at 1", "Insert SimpleName: LOG(337) into MethodInvocation(339) at 0", "Insert SimpleName: isInfoEnabled(338) into MethodInvocation(339) at 1", "Move ExpressionStatement(332) into Block(352) at 0", "Move ExpressionStatement(339) into Block(352) at 1", "Insert SimpleName: LOG(446) into MethodInvocation(448) at 0", "Insert SimpleName: isInfoEnabled(447) into MethodInvocation(448) at 1", "Move ExpressionStatement(436) into Block(454) at 0", "Insert SimpleName: LOG(275) into MethodInvocation(277) at 0", "Insert SimpleName: isWarnEnabled(276) into MethodInvocation(277) at 1", "Insert Block(257) into CatchClause(258) at 1", "Insert IfStatement(255) into Block(257) at 0", "Insert ReturnStatement(256) into Block(257) at 1", "Insert MethodInvocation(234) into IfStatement(255) at 0", "Move Block(252) into IfStatement(255) at 1", "Insert SimpleName: LOG(232) into MethodInvocation(234) at 0", "Insert SimpleName: isWarnEnabled(233) into MethodInvocation(234) at 1", "Delete ReturnStatement(251)"]}}, {"ParserChecker_cluster": {"actions": [{"root": "INS IfStatement to Block at 7", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS IfStatement to Block at 7", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 15", "operations": ["INS IfStatement to Block at 15", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}]}}, {"ParserChecker_diff": {"operations": ["Insert IfStatement(194) into Block(334) at 7", "Insert IfStatement(287) into Block(334) at 14", "Insert MethodInvocation(185) into IfStatement(194) at 0", "Insert Block(193) into IfStatement(194) at 1", "Insert MethodInvocation(271) into IfStatement(287) at 0", "Insert Block(286) into IfStatement(287) at 1", "Insert SimpleName: LOG(183) into MethodInvocation(185) at 0", "Insert SimpleName: isInfoEnabled(184) into MethodInvocation(185) at 1", "Move ExpressionStatement(189) into Block(193) at 0", "Insert SimpleName: LOG(269) into MethodInvocation(271) at 0", "Insert SimpleName: isInfoEnabled(270) into MethodInvocation(271) at 1", "Move ExpressionStatement(270) into Block(286) at 0", "Move ExpressionStatement(277) into Block(286) at 1"]}}, {"ParserFactory_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS IfStatement to Block at 1", "INS Block to IfStatement at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}]}}, {"ParserFactory_diff": {"operations": ["Insert IfStatement(669) into Block(674) at 0", "Insert Block(1016) into IfStatement(1030) at 1", "Insert IfStatement(1029) into IfStatement(1030) at 2", "Insert Block(407) into CatchClause(408) at 1", "Insert MethodInvocation(657) into IfStatement(669) at 0", "Insert Block(668) into IfStatement(669) at 1", "Insert IfStatement(1015) into Block(1016) at 0", "Insert MethodInvocation(1019) into IfStatement(1029) at 0", "Move Block(1000) into IfStatement(1029) at 1", "Insert IfStatement(406) into Block(407) at 0", "Insert IfStatement(604) into Block(613) at 0", "Insert SimpleName: LOG(655) into MethodInvocation(657) at 0", "Insert SimpleName: isDebugEnabled(656) into MethodInvocation(657) at 1", "Move ExpressionStatement(654) into Block(668) at 0", "Insert MethodInvocation(1001) into IfStatement(1015) at 0", "Move Block(991) into IfStatement(1015) at 1", "Insert SimpleName: LOG(1017) into MethodInvocation(1019) at 0", "Insert SimpleName: isDebugEnabled(1018) into MethodInvocation(1019) at 1", "Insert MethodInvocation(381) into IfStatement(406) at 0", "Move Block(402) into IfStatement(406) at 1", "Insert MethodInvocation(587) into IfStatement(604) at 0", "Insert Block(603) into IfStatement(604) at 1", "Insert IfStatement(937) into Block(938) at 1", "Insert SimpleName: LOG(999) into MethodInvocation(1001) at 0", "Insert SimpleName: isInfoEnabled(1000) into MethodInvocation(1001) at 1", "Insert SimpleName: LOG(379) into MethodInvocation(381) at 0", "Insert SimpleName: isWarnEnabled(380) into MethodInvocation(381) at 1", "Insert SimpleName: LOG(585) into MethodInvocation(587) at 0", "Insert SimpleName: isWarnEnabled(586) into MethodInvocation(587) at 1", "Move ExpressionStatement(594) into Block(603) at 0", "Insert MethodInvocation(905) into IfStatement(937) at 0", "Insert Block(936) into IfStatement(937) at 1", "Insert SimpleName: LOG(903) into MethodInvocation(905) at 0", "Insert SimpleName: isWarnEnabled(904) into MethodInvocation(905) at 1", "Move IfStatement(917) into Block(936) at 0"]}}, {"PluginDescriptor_cluster": {"actions": [{"root": "INS Block to CatchClause at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to CatchClause at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"PluginDescriptor_diff": {"operations": ["Insert Block(793) into CatchClause(794) at 1", "Insert IfStatement(792) into Block(793) at 0", "Insert MethodInvocation(779) into IfStatement(792) at 0", "Move Block(788) into IfStatement(792) at 1", "Insert SimpleName: LOG(777) into MethodInvocation(779) at 0", "Insert SimpleName: isDebugEnabled(778) into MethodInvocation(779) at 1"]}}, {"PluginManifestParser_cluster": {"actions": [{"root": "INS IfStatement to Block at 8", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS IfStatement to Block at 8", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 3", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS ContinueStatement to Block at 0", "INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS Block to CatchClause at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to CatchClause at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to CatchClause at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS IfStatement to Block at 5", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "DEL ContinueStatement", "operations": ["DEL ContinueStatement"]}]}}, {"PluginManifestParser_diff": {"operations": ["Insert IfStatement(731) into Block(754) at 8", "Insert MethodInvocation(714) into IfStatement(731) at 0", "Insert Block(730) into IfStatement(731) at 1", "Insert IfStatement(183) into Block(337) at 3", "Insert SimpleName: LOG(712) into MethodInvocation(714) at 0", "Insert SimpleName: isDebugEnabled(713) into MethodInvocation(714) at 1", "Move ExpressionStatement(685) into Block(730) at 0", "Insert Block(168) into IfStatement(169) at 1", "Insert MethodInvocation(172) into IfStatement(183) at 0", "Insert Block(182) into IfStatement(183) at 1", "Insert ContinueStatement(167) into Block(168) at 0", "Insert SimpleName: LOG(170) into MethodInvocation(172) at 0", "Insert SimpleName: isInfoEnabled(171) into MethodInvocation(172) at 1", "Move ExpressionStatement(177) into Block(182) at 0", "Insert Block(420) into IfStatement(444) at 1", "Insert IfStatement(417) into Block(420) at 0", "Move ReturnStatement(383) into Block(420) at 1", "Insert Block(442) into IfStatement(443) at 1", "Insert MethodInvocation(408) into IfStatement(417) at 0", "Move Block(384) into IfStatement(417) at 1", "Insert IfStatement(439) into Block(442) at 0", "Move ReturnStatement(400) into Block(442) at 1", "Insert SimpleName: LOG(406) into MethodInvocation(408) at 0", "Insert SimpleName: isWarnEnabled(407) into MethodInvocation(408) at 1", "Insert MethodInvocation(430) into IfStatement(439) at 0", "Move Block(401) into IfStatement(439) at 1", "Insert IfStatement(242) into Block(259) at 0", "Insert Block(276) into CatchClause(277) at 1", "Insert Block(294) into CatchClause(295) at 1", "Insert Block(312) into CatchClause(313) at 1", "Insert Block(330) into CatchClause(331) at 1", "Insert SimpleName: LOG(428) into MethodInvocation(430) at 0", "Insert SimpleName: isWarnEnabled(429) into MethodInvocation(430) at 1", "Insert IfStatement(1233) into Block(1309) at 5", "Insert MethodInvocation(233) into IfStatement(242) at 0", "Insert Block(241) into IfStatement(242) at 1", "Insert IfStatement(275) into Block(276) at 0", "Insert IfStatement(293) into Block(294) at 0", "Insert IfStatement(311) into Block(312) at 0", "Insert IfStatement(329) into Block(330) at 0", "Insert MethodInvocation(1222) into IfStatement(1233) at 0", "Insert Block(1232) into IfStatement(1233) at 1", "Insert SimpleName: LOG(231) into MethodInvocation(233) at 0", "Insert SimpleName: isDebugEnabled(232) into MethodInvocation(233) at 1", "Move ExpressionStatement(231) into Block(241) at 0", "Insert MethodInvocation(266) into IfStatement(275) at 0", "Move Block(273) into IfStatement(275) at 1", "Insert MethodInvocation(284) into IfStatement(293) at 0", "Move Block(286) into IfStatement(293) at 1", "Insert MethodInvocation(302) into IfStatement(311) at 0", "Move Block(299) into IfStatement(311) at 1", "Insert MethodInvocation(320) into IfStatement(329) at 0", "Move Block(260) into IfStatement(329) at 1", "Insert SimpleName: LOG(1220) into MethodInvocation(1222) at 0", "Insert SimpleName: isDebugEnabled(1221) into MethodInvocation(1222) at 1", "Move ExpressionStatement(1182) into Block(1232) at 0", "Insert SimpleName: LOG(264) into MethodInvocation(266) at 0", "Insert SimpleName: isWarnEnabled(265) into MethodInvocation(266) at 1", "Insert SimpleName: LOG(282) into MethodInvocation(284) at 0", "Insert SimpleName: isWarnEnabled(283) into MethodInvocation(284) at 1", "Insert SimpleName: LOG(300) into MethodInvocation(302) at 0", "Insert SimpleName: isWarnEnabled(301) into MethodInvocation(302) at 1", "Insert SimpleName: LOG(318) into MethodInvocation(320) at 0", "Insert SimpleName: isWarnEnabled(319) into MethodInvocation(320) at 1", "Delete ContinueStatement(167)"]}}, {"PluginRepository_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS IfStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS ContinueStatement to Block at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS ContinueStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 2", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "DEL ContinueStatement", "operations": ["DEL ContinueStatement"]}, {"root": "DEL ContinueStatement", "operations": ["DEL ContinueStatement"]}]}}, {"PluginRepository_diff": {"operations": ["Insert IfStatement(1195) into Block(1334) at 0", "Insert PrefixExpression: !(1192) into IfStatement(1195) at 0", "Insert Block(1194) into IfStatement(1195) at 1", "Insert MethodInvocation(1191) into PrefixExpression: !(1192) at 0", "Insert ReturnStatement(1193) into Block(1194) at 0", "Insert IfStatement(242) into Block(250) at 0", "Insert SimpleName: LOG(1189) into MethodInvocation(1191) at 0", "Insert SimpleName: isInfoEnabled(1190) into MethodInvocation(1191) at 1", "Insert Block(1436) into IfStatement(1437) at 1", "Insert Block(1457) into IfStatement(1458) at 1", "Insert MethodInvocation(233) into IfStatement(242) at 0", "Insert Block(241) into IfStatement(242) at 1", "Insert IfStatement(389) into Block(396) at 2", "Insert Block(803) into CatchClause(804) at 1", "Insert Block(821) into CatchClause(822) at 1", "Insert IfStatement(1434) into Block(1436) at 0", "Insert ContinueStatement(1435) into Block(1436) at 1", "Insert IfStatement(1455) into Block(1457) at 0", "Insert ContinueStatement(1456) into Block(1457) at 1", "Insert SimpleName: LOG(231) into MethodInvocation(233) at 0", "Insert SimpleName: isFatalEnabled(232) into MethodInvocation(233) at 1", "Move ExpressionStatement(237) into Block(241) at 0", "Insert MethodInvocation(380) into IfStatement(389) at 0", "Insert Block(388) into IfStatement(389) at 1", "Insert IfStatement(802) into Block(803) at 0", "Insert IfStatement(820) into Block(821) at 0", "Insert MethodInvocation(1425) into IfStatement(1434) at 0", "Move Block(1404) into IfStatement(1434) at 1", "Insert MethodInvocation(1446) into IfStatement(1455) at 0", "Move Block(1420) into IfStatement(1455) at 1", "Insert SimpleName: LOG(378) into MethodInvocation(380) at 0", "Insert SimpleName: isDebugEnabled(379) into MethodInvocation(380) at 1", "Move ExpressionStatement(379) into Block(388) at 0", "Insert MethodInvocation(793) into IfStatement(802) at 0", "Move Block(788) into IfStatement(802) at 1", "Insert MethodInvocation(811) into IfStatement(820) at 0", "Move Block(801) into IfStatement(820) at 1", "Insert SimpleName: LOG(1423) into MethodInvocation(1425) at 0", "Insert SimpleName: isDebugEnabled(1424) into MethodInvocation(1425) at 1", "Insert SimpleName: LOG(1444) into MethodInvocation(1446) at 0", "Insert SimpleName: isDebugEnabled(1445) into MethodInvocation(1446) at 1", "Insert SimpleName: LOG(791) into MethodInvocation(793) at 0", "Insert SimpleName: isWarnEnabled(792) into MethodInvocation(793) at 1", "Insert SimpleName: LOG(809) into MethodInvocation(811) at 0", "Insert SimpleName: isWarnEnabled(810) into MethodInvocation(811) at 1", "Delete ContinueStatement(1403)", "Delete ContinueStatement(1419)"]}}, {"DistributedSearch_cluster": {"actions": [{"root": "INS IfStatement to Block at 7", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 7", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS ContinueStatement to Block at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "INS Block to TryStatement at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to TryStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS IfStatement to Block at 2", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "DEL ContinueStatement", "operations": ["DEL ContinueStatement"]}]}}, {"DistributedSearch_diff": {"operations": ["Insert IfStatement(804) into Block(805) at 7", "Insert MethodInvocation(792) into IfStatement(804) at 0", "Insert Block(803) into IfStatement(804) at 1", "Insert SimpleName: LOG(790) into MethodInvocation(792) at 0", "Insert SimpleName: isInfoEnabled(791) into MethodInvocation(792) at 1", "Move ExpressionStatement(784) into Block(803) at 0", "Insert Block(717) into IfStatement(718) at 1", "Insert Block(1837) into TryStatement(1863) at 0", "Insert IfStatement(715) into Block(717) at 0", "Insert ContinueStatement(716) into Block(717) at 1", "Insert IfStatement(744) into Block(753) at 0", "Insert Block(1821) into CatchClause(1822) at 1", "Insert IfStatement(1833) into Block(1837) at 0", "Move ExpressionStatement(1806) into Block(1837) at 1", "Insert MethodInvocation(706) into IfStatement(715) at 0", "Move Block(707) into IfStatement(715) at 1", "Insert MethodInvocation(731) into IfStatement(744) at 0", "Insert Block(743) into IfStatement(744) at 1", "Insert IfStatement(1820) into Block(1821) at 0", "Insert MethodInvocation(1826) into IfStatement(1833) at 0", "Move Block(1807) into IfStatement(1833) at 1", "Insert IfStatement(1851) into Block(1861) at 0", "Insert SimpleName: LOG(704) into MethodInvocation(706) at 0", "Insert SimpleName: isWarnEnabled(705) into MethodInvocation(706) at 1", "Insert SimpleName: LOG(729) into MethodInvocation(731) at 0", "Insert SimpleName: isTraceEnabled(730) into MethodInvocation(731) at 1", "Move ExpressionStatement(729) into Block(743) at 0", "Insert MethodInvocation(1813) into IfStatement(1820) at 0", "Move Block(1796) into IfStatement(1820) at 1", "Insert SimpleName: LOG(1824) into MethodInvocation(1826) at 0", "Insert SimpleName: isInfoEnabled(1825) into MethodInvocation(1826) at 1", "Insert MethodInvocation(1844) into IfStatement(1851) at 0", "Insert Block(1850) into IfStatement(1851) at 1", "Insert SimpleName: LOG(1811) into MethodInvocation(1813) at 0", "Insert SimpleName: isInfoEnabled(1812) into MethodInvocation(1813) at 1", "Insert SimpleName: LOG(1842) into MethodInvocation(1844) at 0", "Insert SimpleName: isWarnEnabled(1843) into MethodInvocation(1844) at 1", "Move ExpressionStatement(1816) into Block(1850) at 0", "Insert IfStatement(404) into Block(405) at 2", "Insert MethodInvocation(393) into IfStatement(404) at 0", "Insert Block(403) into IfStatement(404) at 1", "Insert SimpleName: LOG(391) into MethodInvocation(393) at 0", "Insert SimpleName: isInfoEnabled(392) into MethodInvocation(393) at 1", "Move ExpressionStatement(399) into Block(403) at 0", "Delete ContinueStatement(706)"]}}, {"NutchBean_cluster": {"actions": [{"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 10", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 10", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS IfStatement to Block at 3", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 3", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS IfStatement to Block at 6", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}]}}, {"NutchBean_diff": {"operations": ["Insert IfStatement(521) into Block(596) at 2", "Insert IfStatement(582) into Block(596) at 9", "Insert IfStatement(939) into Block(1270) at 3", "Insert MethodInvocation(512) into IfStatement(521) at 0", "Insert Block(520) into IfStatement(521) at 1", "Insert MethodInvocation(573) into IfStatement(582) at 0", "Insert Block(581) into IfStatement(582) at 1", "Insert MethodInvocation(929) into IfStatement(939) at 0", "Insert Block(938) into IfStatement(939) at 1", "Insert IfStatement(177) into Block(191) at 0", "Insert IfStatement(296) into Block(305) at 0", "Insert IfStatement(376) into Block(387) at 0", "Insert IfStatement(399) into Block(508) at 0", "Insert SimpleName: LOG(510) into MethodInvocation(512) at 0", "Insert SimpleName: isInfoEnabled(511) into MethodInvocation(512) at 1", "Move ExpressionStatement(496) into Block(520) at 0", "Insert SimpleName: LOG(571) into MethodInvocation(573) at 0", "Insert SimpleName: isInfoEnabled(572) into MethodInvocation(573) at 1", "Move ExpressionStatement(552) into Block(581) at 0", "Insert SimpleName: LOG(927) into MethodInvocation(929) at 0", "Insert SimpleName: isInfoEnabled(928) into MethodInvocation(929) at 1", "Move ExpressionStatement(904) into Block(938) at 0", "Insert MethodInvocation(170) into IfStatement(177) at 0", "Insert Block(176) into IfStatement(177) at 1", "Insert MethodInvocation(287) into IfStatement(296) at 0", "Insert Block(295) into IfStatement(296) at 1", "Insert MethodInvocation(367) into IfStatement(376) at 0", "Insert Block(375) into IfStatement(376) at 1", "Insert MethodInvocation(390) into IfStatement(399) at 0", "Insert Block(398) into IfStatement(399) at 1", "Insert SimpleName: LOG(168) into MethodInvocation(170) at 0", "Insert SimpleName: isInfoEnabled(169) into MethodInvocation(170) at 1", "Move ExpressionStatement(172) into Block(176) at 0", "Insert SimpleName: LOG(285) into MethodInvocation(287) at 0", "Insert SimpleName: isInfoEnabled(286) into MethodInvocation(287) at 1", "Move ExpressionStatement(286) into Block(295) at 0", "Insert SimpleName: LOG(365) into MethodInvocation(367) at 0", "Insert SimpleName: isInfoEnabled(366) into MethodInvocation(367) at 1", "Move ExpressionStatement(361) into Block(375) at 0", "Insert SimpleName: LOG(388) into MethodInvocation(390) at 0", "Insert SimpleName: isInfoEnabled(389) into MethodInvocation(390) at 1", "Move ExpressionStatement(379) into Block(398) at 0", "Insert IfStatement(1079) into Block(1112) at 3", "Insert IfStatement(1105) into Block(1112) at 5", "Insert MethodInvocation(1068) into IfStatement(1079) at 0", "Insert Block(1078) into IfStatement(1079) at 1", "Insert MethodInvocation(1093) into IfStatement(1105) at 0", "Insert Block(1104) into IfStatement(1105) at 1", "Insert SimpleName: LOG(1066) into MethodInvocation(1068) at 0", "Insert SimpleName: isInfoEnabled(1067) into MethodInvocation(1068) at 1", "Move ExpressionStatement(1039) into Block(1078) at 0", "Insert SimpleName: LOG(1091) into MethodInvocation(1093) at 0", "Insert SimpleName: isInfoEnabled(1092) into MethodInvocation(1093) at 1", "Move ExpressionStatement(1060) into Block(1104) at 0"]}}, {"OpenSearchServlet_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS QualifiedName: NutchBean.LOG to MethodInvocation at 0", "INS IfStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 22", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS QualifiedName: NutchBean.LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 22"]}, {"root": "INS IfStatement to Block at 27", "operations": ["INS IfStatement to Block at 27", "INS QualifiedName: NutchBean.LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS QualifiedName: NutchBean.LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"OpenSearchServlet_diff": {"operations": ["Insert IfStatement(197) into Block(1131) at 0", "Insert IfStatement(468) into Block(1131) at 21", "Insert IfStatement(533) into Block(1131) at 24", "Insert MethodInvocation(186) into IfStatement(197) at 0", "Insert Block(196) into IfStatement(197) at 1", "Insert MethodInvocation(452) into IfStatement(468) at 0", "Insert Block(467) into IfStatement(468) at 1", "Insert MethodInvocation(522) into IfStatement(533) at 0", "Insert Block(532) into IfStatement(533) at 1", "Insert QualifiedName: NutchBean.LOG(184) into MethodInvocation(186) at 0", "Insert SimpleName: isInfoEnabled(185) into MethodInvocation(186) at 1", "Move ExpressionStatement(192) into Block(196) at 0", "Insert QualifiedName: NutchBean.LOG(450) into MethodInvocation(452) at 0", "Insert SimpleName: isInfoEnabled(451) into MethodInvocation(452) at 1", "Move ExpressionStatement(451) into Block(467) at 0", "Move ExpressionStatement(458) into Block(467) at 1", "Insert QualifiedName: NutchBean.LOG(520) into MethodInvocation(522) at 0", "Insert SimpleName: isInfoEnabled(521) into MethodInvocation(522) at 1", "Move ExpressionStatement(513) into Block(532) at 0", "Insert IfStatement(503) into Block(517) at 0", "Insert MethodInvocation(495) into IfStatement(503) at 0", "Insert Block(502) into IfStatement(503) at 1", "Insert QualifiedName: NutchBean.LOG(493) into MethodInvocation(495) at 0", "Insert SimpleName: isWarnEnabled(494) into MethodInvocation(495) at 1", "Move ExpressionStatement(488) into Block(502) at 0"]}}, {"QueryFilters_cluster": {"actions": [{"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1", "INS ContinueStatement to Block at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "DEL ContinueStatement", "operations": ["DEL ContinueStatement"]}]}}, {"QueryFilters_diff": {"operations": ["Insert Block(266) into IfStatement(267) at 1", "Insert IfStatement(264) into Block(266) at 0", "Insert ContinueStatement(265) into Block(266) at 1", "Insert MethodInvocation(252) into IfStatement(264) at 0", "Move Block(261) into IfStatement(264) at 1", "Insert SimpleName: LOG(250) into MethodInvocation(252) at 0", "Insert SimpleName: isWarnEnabled(251) into MethodInvocation(252) at 1", "Delete ContinueStatement(260)"]}}, {"SummarizerFactory_cluster": {"actions": [{"root": "INS IfStatement to Block at 2", "operations": ["INS IfStatement to Block at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS Block to CatchClause at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"SummarizerFactory_diff": {"operations": ["Insert IfStatement(112) into Block(113) at 2", "Insert Block(130) into CatchClause(131) at 1", "Insert MethodInvocation(99) into IfStatement(112) at 0", "Insert Block(111) into IfStatement(112) at 1", "Insert IfStatement(129) into Block(130) at 0", "Insert SimpleName: LOG(97) into MethodInvocation(99) at 0", "Insert SimpleName: isInfoEnabled(98) into MethodInvocation(99) at 1", "Move ExpressionStatement(107) into Block(111) at 0", "Insert MethodInvocation(120) into IfStatement(129) at 0", "Move Block(120) into IfStatement(129) at 1", "Insert SimpleName: LOG(118) into MethodInvocation(120) at 0", "Insert SimpleName: isWarnEnabled(119) into MethodInvocation(120) at 1"]}}, {"SegmentMerger_cluster": {"actions": [{"root": "INS IfStatement to Block at 1", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 23", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 23", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS ParenthesizedExpression to InfixExpression: && at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS InfixExpression: && to IfStatement at 0", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS MethodInvocation to ParenthesizedExpression at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV InfixExpression: > to ParenthesizedExpression at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS Block to CatchClause at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from \"SegmentMerger: input dir \" to \"Input dir \"", "operations": ["UPD StringLiteral: \"SegmentMerger: input dir \" from \"SegmentMerger: input dir \" to \"Input dir \""]}]}}, {"SegmentMerger_diff": {"operations": ["Insert IfStatement(2624) into Block(3170) at 1", "Insert IfStatement(2960) into Block(3170) at 22", "Insert InfixExpression: &&(1577) into IfStatement(1587) at 0", "Insert Block(1586) into IfStatement(1587) at 1", "Insert MethodInvocation(2611) into IfStatement(2624) at 0", "Insert Block(2623) into IfStatement(2624) at 1", "Insert MethodInvocation(2949) into IfStatement(2960) at 0", "Insert Block(2959) into IfStatement(2960) at 1", "Insert ParenthesizedExpression(1572) into InfixExpression: &&(1577) at 0", "Insert ParenthesizedExpression(1576) into InfixExpression: &&(1577) at 1", "Move ExpressionStatement(1579) into Block(1586) at 0", "Insert SimpleName: LOG(2609) into MethodInvocation(2611) at 0", "Insert SimpleName: isInfoEnabled(2610) into MethodInvocation(2611) at 1", "Move ExpressionStatement(2626) into Block(2623) at 0", "Insert IfStatement(2756) into Block(2883) at 1", "Insert SimpleName: LOG(2947) into MethodInvocation(2949) at 0", "Insert SimpleName: isInfoEnabled(2948) into MethodInvocation(2949) at 1", "Move ExpressionStatement(2928) into Block(2959) at 0", "Move InfixExpression: >(1571) into ParenthesizedExpression(1572) at 0", "Insert MethodInvocation(1575) into ParenthesizedExpression(1576) at 0", "Insert MethodInvocation(2745) into IfStatement(2756) at 0", "Insert Block(2755) into IfStatement(2756) at 1", "Insert SimpleName: LOG(1573) into MethodInvocation(1575) at 0", "Insert SimpleName: isInfoEnabled(1574) into MethodInvocation(1575) at 1", "Insert Block(1683) into CatchClause(1684) at 1", "Insert IfStatement(2733) into Block(2741) at 0", "Insert SimpleName: LOG(2743) into MethodInvocation(2745) at 0", "Insert SimpleName: isInfoEnabled(2744) into MethodInvocation(2745) at 1", "Move ExpressionStatement(2729) into Block(2755) at 0", "Insert IfStatement(1682) into Block(1683) at 0", "Insert MethodInvocation(2721) into IfStatement(2733) at 0", "Insert Block(2732) into IfStatement(2733) at 1", "Insert MethodInvocation(1669) into IfStatement(1682) at 0", "Move Block(1671) into IfStatement(1682) at 1", "Insert SimpleName: LOG(2719) into MethodInvocation(2721) at 0", "Insert SimpleName: isWarnEnabled(2720) into MethodInvocation(2721) at 1", "Move ExpressionStatement(2711) into Block(2732) at 0", "Insert SimpleName: LOG(1667) into MethodInvocation(1669) at 0", "Insert SimpleName: isWarnEnabled(1668) into MethodInvocation(1669) at 1", "Update StringLiteral: \"SegmentMerger: input dir \"(2704) to \"Input dir \""]}}, {"SegmentReader_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 28", "operations": ["INS IfStatement to Block at 28", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS ParenthesizedExpression to InfixExpression: && at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to ParenthesizedExpression at 0", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS InfixExpression: && to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from ParenthesizedExpression", "operations": ["MOV InfixExpression: > to ParenthesizedExpression at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to IfStatement at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"SegmentReader_diff": {"operations": ["Insert IfStatement(794) into Block(1104) at 0", "Insert IfStatement(1103) into Block(1104) at 27", "Insert IfStatement(1268) into Block(1742) at 0", "Insert MethodInvocation(785) into IfStatement(794) at 0", "Insert Block(793) into IfStatement(794) at 1", "Insert MethodInvocation(1096) into IfStatement(1103) at 0", "Insert Block(1102) into IfStatement(1103) at 1", "Insert MethodInvocation(1258) into IfStatement(1268) at 0", "Insert Block(1267) into IfStatement(1268) at 1", "Insert SimpleName: LOG(783) into MethodInvocation(785) at 0", "Insert SimpleName: isInfoEnabled(784) into MethodInvocation(785) at 1", "Move ExpressionStatement(785) into Block(793) at 0", "Insert SimpleName: LOG(1094) into MethodInvocation(1096) at 0", "Insert SimpleName: isInfoEnabled(1095) into MethodInvocation(1096) at 1", "Move ExpressionStatement(1084) into Block(1102) at 0", "Insert SimpleName: LOG(1256) into MethodInvocation(1258) at 0", "Insert SimpleName: isInfoEnabled(1257) into MethodInvocation(1258) at 1", "Move ExpressionStatement(1244) into Block(1267) at 0", "Insert InfixExpression: &&(1650) into IfStatement(1660) at 0", "Insert Block(1659) into IfStatement(1660) at 1", "Insert ParenthesizedExpression(1645) into InfixExpression: &&(1650) at 0", "Insert ParenthesizedExpression(1649) into InfixExpression: &&(1650) at 1", "Move ExpressionStatement(1628) into Block(1659) at 0", "Move InfixExpression: >(1620) into ParenthesizedExpression(1645) at 0", "Insert MethodInvocation(1648) into ParenthesizedExpression(1649) at 0", "Insert IfStatement(750) into IfStatement(751) at 2", "Insert SimpleName: LOG(1646) into MethodInvocation(1648) at 0", "Insert SimpleName: isDebugEnabled(1647) into MethodInvocation(1648) at 1", "Insert MethodInvocation(739) into IfStatement(750) at 0", "Move Block(746) into IfStatement(750) at 1", "Insert SimpleName: LOG(737) into MethodInvocation(739) at 0", "Insert SimpleName: isWarnEnabled(738) into MethodInvocation(739) at 1", "Insert Block(1075) into CatchClause(1076) at 1", "Insert IfStatement(1074) into Block(1075) at 0", "Insert MethodInvocation(1052) into IfStatement(1074) at 0", "Move Block(1061) into IfStatement(1074) at 1", "Insert SimpleName: LOG(1050) into MethodInvocation(1052) at 0", "Insert SimpleName: isWarnEnabled(1051) into MethodInvocation(1052) at 1"]}}, {"Cached_cluster": {"actions": [{"root": "INS IfStatement to Block at 1", "operations": ["INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS QualifiedName: bean.LOG to MethodInvocation at 0", "INS IfStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"Cached_diff": {"operations": ["Insert IfStatement(130) into Block(225) at 1", "Insert MethodInvocation(119) into IfStatement(130) at 0", "Insert Block(129) into IfStatement(130) at 1", "Insert QualifiedName: bean.LOG(117) into MethodInvocation(119) at 0", "Insert SimpleName: isInfoEnabled(118) into MethodInvocation(119) at 1", "Move ExpressionStatement(125) into Block(129) at 0"]}}, {"DmozParser_cluster": {"actions": [{"root": "INS Block to MethodDeclaration at 4", "operations": ["INS IfStatement to Block at 0", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS Block to MethodDeclaration at 5", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 6", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS IfStatement to Block at 5", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from getFatalStream to getWarnStream", "operations": ["UPD SimpleName: getFatalStream from getFatalStream to getWarnStream"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"DmozParser_diff": {"operations": ["Insert Block(705) into MethodDeclaration(706) at 4", "Insert Block(726) into MethodDeclaration(727) at 4", "Insert Block(782) into MethodDeclaration(783) at 5", "Insert Block(833) into MethodDeclaration(834) at 5", "Insert Block(871) into MethodDeclaration(872) at 5", "Insert IfStatement(962) into Block(1037) at 6", "Insert IfStatement(704) into Block(705) at 0", "Insert IfStatement(725) into Block(726) at 0", "Insert IfStatement(781) into Block(782) at 0", "Insert IfStatement(832) into Block(833) at 0", "Insert IfStatement(870) into Block(871) at 0", "Insert MethodInvocation(953) into IfStatement(962) at 0", "Insert Block(961) into IfStatement(962) at 1", "Insert MethodInvocation(697) into IfStatement(704) at 0", "Move Block(695) into IfStatement(704) at 1", "Insert MethodInvocation(715) into IfStatement(725) at 0", "Move Block(711) into IfStatement(725) at 1", "Insert MethodInvocation(758) into IfStatement(781) at 0", "Move Block(762) into IfStatement(781) at 1", "Insert MethodInvocation(796) into IfStatement(832) at 0", "Move Block(808) into IfStatement(832) at 1", "Insert MethodInvocation(847) into IfStatement(870) at 0", "Insert Block(869) into IfStatement(870) at 1", "Insert SimpleName: LOG(951) into MethodInvocation(953) at 0", "Insert SimpleName: isInfoEnabled(952) into MethodInvocation(953) at 1", "Move ExpressionStatement(927) into Block(961) at 0", "Insert SimpleName: LOG(695) into MethodInvocation(697) at 0", "Insert SimpleName: isInfoEnabled(696) into MethodInvocation(697) at 1", "Insert SimpleName: LOG(713) into MethodInvocation(715) at 0", "Insert SimpleName: isInfoEnabled(714) into MethodInvocation(715) at 1", "Insert SimpleName: LOG(756) into MethodInvocation(758) at 0", "Insert SimpleName: isFatalEnabled(757) into MethodInvocation(758) at 1", "Insert SimpleName: LOG(794) into MethodInvocation(796) at 0", "Insert SimpleName: isFatalEnabled(795) into MethodInvocation(796) at 1", "Insert SimpleName: LOG(845) into MethodInvocation(847) at 0", "Insert SimpleName: isWarnEnabled(846) into MethodInvocation(847) at 1", "Move ExpressionStatement(832) into Block(869) at 0", "Move ExpressionStatement(840) into Block(869) at 1", "Insert IfStatement(1023) into Block(1029) at 0", "Insert IfStatement(1121) into Block(1127) at 0", "Insert MethodInvocation(1006) into IfStatement(1023) at 0", "Insert Block(1022) into IfStatement(1023) at 1", "Insert MethodInvocation(1104) into IfStatement(1121) at 0", "Insert Block(1120) into IfStatement(1121) at 1", "Insert IfStatement(1414) into Block(1422) at 5", "Insert IfStatement(625) into Block(663) at 0", "Insert SimpleName: LOG(1004) into MethodInvocation(1006) at 0", "Insert SimpleName: isFatalEnabled(1005) into MethodInvocation(1006) at 1", "Move ExpressionStatement(975) into Block(1022) at 0", "Move ExpressionStatement(983) into Block(1022) at 1", "Insert SimpleName: LOG(1102) into MethodInvocation(1104) at 0", "Insert SimpleName: isFatalEnabled(1103) into MethodInvocation(1104) at 1", "Move ExpressionStatement(1068) into Block(1120) at 0", "Move ExpressionStatement(1076) into Block(1120) at 1", "Insert MethodInvocation(1405) into IfStatement(1414) at 0", "Insert Block(1413) into IfStatement(1414) at 1", "Insert MethodInvocation(618) into IfStatement(625) at 0", "Insert Block(624) into IfStatement(625) at 1", "Update SimpleName: getFatalStream(836) to getWarnStream", "Insert SimpleName: LOG(1403) into MethodInvocation(1405) at 0", "Insert SimpleName: isInfoEnabled(1404) into MethodInvocation(1405) at 1", "Move ExpressionStatement(1364) into Block(1413) at 0", "Insert SimpleName: LOG(616) into MethodInvocation(618) at 0", "Insert SimpleName: isInfoEnabled(617) into MethodInvocation(618) at 1", "Move ExpressionStatement(620) into Block(624) at 0", "Delete Block(841)"]}}, {"PruneIndexTool_cluster": {"actions": [{"root": "INS IfStatement to Block at 8", "operations": ["INS IfStatement to Block at 8", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 2", "INS IfStatement to Block at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 1", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 2"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS ReturnStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS IfStatement to Block at 5", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 9", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 9", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS Block to CatchClause at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS ReturnStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to CatchClause at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to CatchClause at 1", "INS IfStatement to Block at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: isFatalEnabled to MethodInvocation at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS ContinueStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 1", "INS ReturnStatement to Block at 2"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS ContinueStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to CatchClause at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS IfStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS Block to CatchClause at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to CatchClause at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "INS Block to IfStatement at 2", "operations": ["INS Block to IfStatement at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS ReturnStatement to Block at 2", "INS IfStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS ContinueStatement to Block at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "DEL ContinueStatement", "operations": ["DEL ContinueStatement"]}, {"root": "DEL ContinueStatement", "operations": ["DEL ContinueStatement"]}, {"root": "DEL ContinueStatement", "operations": ["DEL ContinueStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}]}}, {"PruneIndexTool_diff": {"operations": ["Insert IfStatement(1005) into Block(1013) at 8", "Insert MethodInvocation(990) into IfStatement(1005) at 0", "Insert Block(1004) into IfStatement(1005) at 1", "Insert Block(1414) into IfStatement(1415) at 1", "Insert Block(1447) into IfStatement(1448) at 1", "Insert Block(1934) into IfStatement(1935) at 1", "Insert SimpleName: LOG(988) into MethodInvocation(990) at 0", "Insert SimpleName: isInfoEnabled(989) into MethodInvocation(990) at 1", "Move ExpressionStatement(975) into Block(1004) at 0", "Insert IfStatement(1126) into Block(1331) at 0", "Insert IfStatement(1198) into Block(1331) at 4", "Insert IfStatement(1330) into Block(1331) at 7", "Insert Block(1380) into CatchClause(1381) at 1", "Move ExpressionStatement(1337) into Block(1414) at 0", "Insert IfStatement(1412) into Block(1414) at 1", "Insert ReturnStatement(1413) into Block(1414) at 2", "Move ExpressionStatement(1363) into Block(1447) at 0", "Insert IfStatement(1445) into Block(1447) at 1", "Insert ReturnStatement(1446) into Block(1447) at 2", "Insert IfStatement(1932) into Block(1934) at 0", "Insert ReturnStatement(1933) into Block(1934) at 1", "Insert Block(1962) into CatchClause(1963) at 1", "Insert Block(2002) into CatchClause(2003) at 1", "Insert Block(483) into CatchClause(484) at 1", "Insert MethodInvocation(1112) into IfStatement(1126) at 0", "Insert Block(1125) into IfStatement(1126) at 1", "Insert Block(1181) into IfStatement(1182) at 1", "Insert MethodInvocation(1185) into IfStatement(1198) at 0", "Insert Block(1197) into IfStatement(1198) at 1", "Insert MethodInvocation(1319) into IfStatement(1330) at 0", "Insert Block(1329) into IfStatement(1330) at 1", "Insert IfStatement(1379) into Block(1380) at 0", "Insert MethodInvocation(1405) into IfStatement(1412) at 0", "Move Block(1344) into IfStatement(1412) at 1", "Insert MethodInvocation(1436) into IfStatement(1445) at 0", "Move Block(1372) into IfStatement(1445) at 1", "Insert Block(1517) into IfStatement(1518) at 1", "Insert Block(1583) into IfStatement(1584) at 1", "Insert MethodInvocation(1923) into IfStatement(1932) at 0", "Move Block(1839) into IfStatement(1932) at 1", "Insert IfStatement(1960) into Block(1962) at 0", "Insert ReturnStatement(1961) into Block(1962) at 1", "Insert IfStatement(2000) into Block(2002) at 0", "Insert ReturnStatement(2001) into Block(2002) at 1", "Insert IfStatement(482) into Block(483) at 0", "Insert SimpleName: LOG(1110) into MethodInvocation(1112) at 0", "Insert SimpleName: isInfoEnabled(1111) into MethodInvocation(1112) at 1", "Move ExpressionStatement(1091) into Block(1125) at 0", "Insert Block(1160) into CatchClause(1161) at 1", "Insert IfStatement(1179) into Block(1181) at 0", "Insert ContinueStatement(1180) into Block(1181) at 1", "Insert SimpleName: LOG(1183) into MethodInvocation(1185) at 0", "Insert SimpleName: isInfoEnabled(1184) into MethodInvocation(1185) at 1", "Move ExpressionStatement(1148) into Block(1197) at 0", "Insert SimpleName: LOG(1317) into MethodInvocation(1319) at 0", "Insert SimpleName: isInfoEnabled(1318) into MethodInvocation(1319) at 1", "Move ExpressionStatement(1270) into Block(1329) at 0", "Insert MethodInvocation(1367) into IfStatement(1379) at 0", "Move Block(1315) into IfStatement(1379) at 1", "Insert SimpleName: LOG(1403) into MethodInvocation(1405) at 0", "Insert SimpleName: isFatalEnabled(1404) into MethodInvocation(1405) at 1", "Insert SimpleName: LOG(1434) into MethodInvocation(1436) at 0", "Insert SimpleName: isFatalEnabled(1435) into MethodInvocation(1436) at 1", "Move ExpressionStatement(1428) into Block(1517) at 0", "Insert IfStatement(1515) into Block(1517) at 1", "Insert ReturnStatement(1516) into Block(1517) at 2", "Move ExpressionStatement(1488) into Block(1583) at 0", "Insert IfStatement(1581) into Block(1583) at 1", "Insert ReturnStatement(1582) into Block(1583) at 2", "Insert SimpleName: LOG(1921) into MethodInvocation(1923) at 0", "Insert SimpleName: isFatalEnabled(1922) into MethodInvocation(1923) at 1", "Insert MethodInvocation(1949) into IfStatement(1960) at 0", "Move Block(1862) into IfStatement(1960) at 1", "Insert MethodInvocation(1989) into IfStatement(2000) at 0", "Move Block(1897) into IfStatement(2000) at 1", "Insert MethodInvocation(471) into IfStatement(482) at 0", "Move Block(478) into IfStatement(482) at 1", "Insert IfStatement(1158) into Block(1160) at 0", "Insert ContinueStatement(1159) into Block(1160) at 1", "Insert MethodInvocation(1170) into IfStatement(1179) at 0", "Move Block(1136) into IfStatement(1179) at 1", "Insert SimpleName: LOG(1365) into MethodInvocation(1367) at 0", "Insert SimpleName: isWarnEnabled(1366) into MethodInvocation(1367) at 1", "Insert MethodInvocation(1506) into IfStatement(1515) at 0", "Move Block(1437) into IfStatement(1515) at 1", "Insert MethodInvocation(1571) into IfStatement(1581) at 0", "Move Block(1498) into IfStatement(1581) at 1", "Insert SimpleName: LOG(1947) into MethodInvocation(1949) at 0", "Insert SimpleName: isFatalEnabled(1948) into MethodInvocation(1949) at 1", "Insert SimpleName: LOG(1987) into MethodInvocation(1989) at 0", "Insert SimpleName: isFatalEnabled(1988) into MethodInvocation(1989) at 1", "Insert SimpleName: LOG(469) into MethodInvocation(471) at 0", "Insert SimpleName: isWarnEnabled(470) into MethodInvocation(471) at 1", "Insert IfStatement(805) into Block(806) at 1", "Insert Block(942) into CatchClause(943) at 1", "Insert MethodInvocation(1146) into IfStatement(1158) at 0", "Move Block(1120) into IfStatement(1158) at 1", "Insert SimpleName: LOG(1168) into MethodInvocation(1170) at 0", "Insert SimpleName: isInfoEnabled(1169) into MethodInvocation(1170) at 1", "Insert Block(1306) into CatchClause(1307) at 1", "Insert SimpleName: LOG(1504) into MethodInvocation(1506) at 0", "Insert SimpleName: isFatalEnabled(1505) into MethodInvocation(1506) at 1", "Insert SimpleName: LOG(1569) into MethodInvocation(1571) at 0", "Insert SimpleName: isFatalEnabled(1570) into MethodInvocation(1571) at 1", "Insert MethodInvocation(796) into IfStatement(805) at 0", "Insert Block(804) into IfStatement(805) at 1", "Insert IfStatement(941) into Block(942) at 0", "Insert SimpleName: LOG(1144) into MethodInvocation(1146) at 0", "Insert SimpleName: isWarnEnabled(1145) into MethodInvocation(1146) at 1", "Insert IfStatement(1305) into Block(1306) at 0", "Insert Block(1728) into IfStatement(1729) at 2", "Insert SimpleName: LOG(794) into MethodInvocation(796) at 0", "Insert SimpleName: isDebugEnabled(795) into MethodInvocation(796) at 1", "Move ExpressionStatement(795) into Block(804) at 0", "Insert MethodInvocation(928) into IfStatement(941) at 0", "Move Block(917) into IfStatement(941) at 1", "Insert MethodInvocation(1295) into IfStatement(1305) at 0", "Move Block(1251) into IfStatement(1305) at 1", "Move ExpressionStatement(1627) into Block(1728) at 0", "Insert IfStatement(1726) into Block(1728) at 1", "Insert ReturnStatement(1727) into Block(1728) at 2", "Insert Block(879) into IfStatement(880) at 1", "Insert SimpleName: LOG(926) into MethodInvocation(928) at 0", "Insert SimpleName: isWarnEnabled(927) into MethodInvocation(928) at 1", "Insert SimpleName: LOG(1293) into MethodInvocation(1295) at 0", "Insert SimpleName: isWarnEnabled(1294) into MethodInvocation(1295) at 1", "Insert MethodInvocation(1715) into IfStatement(1726) at 0", "Move Block(1638) into IfStatement(1726) at 1", "Insert IfStatement(877) into Block(879) at 0", "Insert ContinueStatement(878) into Block(879) at 1", "Insert IfStatement(899) into Block(900) at 1", "Insert SimpleName: LOG(1713) into MethodInvocation(1715) at 0", "Insert SimpleName: isFatalEnabled(1714) into MethodInvocation(1715) at 1", "Insert MethodInvocation(864) into IfStatement(877) at 0", "Move Block(864) into IfStatement(877) at 1", "Insert MethodInvocation(890) into IfStatement(899) at 0", "Insert Block(898) into IfStatement(899) at 1", "Insert SimpleName: LOG(862) into MethodInvocation(864) at 0", "Insert SimpleName: isWarnEnabled(863) into MethodInvocation(864) at 1", "Insert SimpleName: LOG(888) into MethodInvocation(890) at 0", "Insert SimpleName: isDebugEnabled(889) into MethodInvocation(890) at 1", "Move ExpressionStatement(879) into Block(898) at 0", "Delete ContinueStatement(863)", "Delete ContinueStatement(1119)", "Delete ContinueStatement(1135)", "Delete ReturnStatement(1343)", "Delete ReturnStatement(1371)", "Delete ReturnStatement(1436)", "Delete ReturnStatement(1497)", "Delete ReturnStatement(1637)", "Delete ReturnStatement(1838)", "Delete ReturnStatement(1861)", "Delete ReturnStatement(1896)"]}}, {"CCDeleteUnlicensedTool_cluster": {"actions": [{"root": "INS IfStatement to Block at 11", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 11", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"CCDeleteUnlicensedTool_diff": {"operations": ["Insert IfStatement(393) into Block(398) at 11", "Insert MethodInvocation(382) into IfStatement(393) at 0", "Insert Block(392) into IfStatement(393) at 1", "Insert SimpleName: LOG(380) into MethodInvocation(382) at 0", "Insert SimpleName: isInfoEnabled(381) into MethodInvocation(382) at 1", "Move ExpressionStatement(388) into Block(392) at 0"]}}, {"CCIndexingFilter_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS Block to CatchClause at 1", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"CCIndexingFilter_diff": {"operations": ["Insert IfStatement(149) into Block(162) at 0", "Insert Block(290) into CatchClause(291) at 1", "Insert MethodInvocation(136) into IfStatement(149) at 0", "Insert Block(148) into IfStatement(149) at 1", "Insert IfStatement(289) into Block(290) at 0", "Insert SimpleName: LOG(134) into MethodInvocation(136) at 0", "Insert SimpleName: isInfoEnabled(135) into MethodInvocation(136) at 1", "Move ExpressionStatement(144) into Block(148) at 0", "Insert MethodInvocation(278) into IfStatement(289) at 0", "Move Block(280) into IfStatement(289) at 1", "Insert SimpleName: LOG(276) into MethodInvocation(278) at 0", "Insert SimpleName: isWarnEnabled(277) into MethodInvocation(278) at 1"]}}, {"CCParseFilter_cluster": {"actions": [{"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS ReturnStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS ReturnStatement to Block at 1", "INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}]}}, {"CCParseFilter_diff": {"operations": ["Insert Block(655) into IfStatement(656) at 1", "Insert IfStatement(235) into Block(248) at 0", "Insert IfStatement(266) into Block(273) at 0", "Insert Block(624) into CatchClause(625) at 1", "Insert IfStatement(653) into Block(655) at 0", "Insert ReturnStatement(654) into Block(655) at 1", "Insert MethodInvocation(222) into IfStatement(235) at 0", "Insert Block(234) into IfStatement(235) at 1", "Insert MethodInvocation(255) into IfStatement(266) at 0", "Insert Block(265) into IfStatement(266) at 1", "Insert IfStatement(622) into Block(624) at 0", "Insert ReturnStatement(623) into Block(624) at 1", "Insert MethodInvocation(644) into IfStatement(653) at 0", "Move Block(635) into IfStatement(653) at 1", "Insert SimpleName: LOG(220) into MethodInvocation(222) at 0", "Insert SimpleName: isInfoEnabled(221) into MethodInvocation(222) at 1", "Move ExpressionStatement(230) into Block(234) at 0", "Insert SimpleName: LOG(253) into MethodInvocation(255) at 0", "Insert SimpleName: isInfoEnabled(254) into MethodInvocation(255) at 1", "Move ExpressionStatement(256) into Block(265) at 0", "Insert MethodInvocation(611) into IfStatement(622) at 0", "Move Block(609) into IfStatement(622) at 1", "Insert SimpleName: LOG(642) into MethodInvocation(644) at 0", "Insert SimpleName: isWarnEnabled(643) into MethodInvocation(644) at 1", "Insert SimpleName: LOG(609) into MethodInvocation(611) at 0", "Insert SimpleName: isWarnEnabled(610) into MethodInvocation(611) at 1", "Delete ReturnStatement(608)", "Delete ReturnStatement(634)"]}}, {"CollectionManager_cluster": {"actions": [{"root": "INS IfStatement to Block at 3", "operations": ["INS IfStatement to Block at 3", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS IfStatement to IfStatement at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to CatchClause at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 1", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"CollectionManager_diff": {"operations": ["Insert IfStatement(555) into Block(558) at 3", "Insert IfStatement(284) into IfStatement(285) at 2", "Insert MethodInvocation(546) into IfStatement(555) at 0", "Insert Block(554) into IfStatement(555) at 1", "Insert IfStatement(121) into Block(154) at 0", "Insert Block(179) into CatchClause(180) at 1", "Insert IfStatement(226) into Block(274) at 1", "Insert MethodInvocation(277) into IfStatement(284) at 0", "Move Block(265) into IfStatement(284) at 1", "Insert SimpleName: LOG(544) into MethodInvocation(546) at 0", "Insert SimpleName: isTraceEnabled(545) into MethodInvocation(546) at 1", "Move ExpressionStatement(526) into Block(554) at 0", "Insert MethodInvocation(114) into IfStatement(121) at 0", "Insert Block(120) into IfStatement(121) at 1", "Insert IfStatement(178) into Block(179) at 0", "Insert MethodInvocation(214) into IfStatement(226) at 0", "Insert Block(225) into IfStatement(226) at 1", "Insert SimpleName: LOG(275) into MethodInvocation(277) at 0", "Insert SimpleName: isInfoEnabled(276) into MethodInvocation(277) at 1", "Insert SimpleName: LOG(112) into MethodInvocation(114) at 0", "Insert SimpleName: isInfoEnabled(113) into MethodInvocation(114) at 1", "Move ExpressionStatement(116) into Block(120) at 0", "Insert MethodInvocation(161) into IfStatement(178) at 0", "Move Block(169) into IfStatement(178) at 1", "Insert SimpleName: LOG(212) into MethodInvocation(214) at 0", "Insert SimpleName: isInfoEnabled(213) into MethodInvocation(214) at 1", "Move ExpressionStatement(211) into Block(225) at 0", "Insert IfStatement(327) into Block(341) at 0", "Insert SimpleName: LOG(159) into MethodInvocation(161) at 0", "Insert SimpleName: isWarnEnabled(160) into MethodInvocation(161) at 1", "Insert MethodInvocation(320) into IfStatement(327) at 0", "Insert Block(326) into IfStatement(327) at 1", "Insert SimpleName: LOG(318) into MethodInvocation(320) at 0", "Insert SimpleName: isInfoEnabled(319) into MethodInvocation(320) at 1", "Move ExpressionStatement(303) into Block(326) at 0"]}}, {"Clusterer_cluster": {"actions": [{"root": "INS IfStatement to Block at 3", "operations": ["INS IfStatement to Block at 3", "INS Block to IfStatement at 1", "INS SimpleName: logger to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS Block to CatchClause at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: logger to MethodInvocation at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: logger to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: logger to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"Clusterer_diff": {"operations": ["Insert IfStatement(694) into Block(698) at 3", "Insert MethodInvocation(675) into IfStatement(694) at 0", "Insert Block(693) into IfStatement(694) at 1", "Insert SimpleName: logger(673) into MethodInvocation(675) at 0", "Insert SimpleName: isInfoEnabled(674) into MethodInvocation(675) at 1", "Move ExpressionStatement(664) into Block(693) at 0", "Move ExpressionStatement(674) into Block(693) at 1", "Insert Block(347) into CatchClause(348) at 1", "Insert Block(309) into IfStatement(328) at 1", "Insert IfStatement(346) into Block(347) at 0", "Insert IfStatement(308) into Block(309) at 0", "Insert IfStatement(326) into Block(327) at 1", "Insert MethodInvocation(336) into IfStatement(346) at 0", "Move Block(332) into IfStatement(346) at 1", "Insert MethodInvocation(299) into IfStatement(308) at 0", "Move Block(304) into IfStatement(308) at 1", "Insert MethodInvocation(317) into IfStatement(326) at 0", "Insert Block(325) into IfStatement(326) at 1", "Insert SimpleName: logger(334) into MethodInvocation(336) at 0", "Insert SimpleName: isWarnEnabled(335) into MethodInvocation(336) at 1", "Insert SimpleName: logger(297) into MethodInvocation(299) at 0", "Insert SimpleName: isWarnEnabled(298) into MethodInvocation(299) at 1", "Insert SimpleName: logger(315) into MethodInvocation(317) at 0", "Insert SimpleName: isDebugEnabled(316) into MethodInvocation(317) at 1", "Move ExpressionStatement(316) into Block(325) at 0"]}}, {"BasicIndexingFilter_cluster": {"actions": [{"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"BasicIndexingFilter_diff": {"operations": ["Insert Block(254) into CatchClause(255) at 1", "Insert IfStatement(253) into Block(254) at 0", "Insert MethodInvocation(242) into IfStatement(253) at 0", "Move Block(249) into IfStatement(253) at 1", "Insert SimpleName: LOG(240) into MethodInvocation(242) at 0", "Insert SimpleName: isWarnEnabled(241) into MethodInvocation(242) at 1"]}}, {"MoreIndexingFilter_cluster": {"actions": [{"root": "INS Block to CatchClause at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS Block to CatchClause at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"MoreIndexingFilter_diff": {"operations": ["Insert Block(396) into CatchClause(397) at 1", "Insert IfStatement(517) into Block(522) at 0", "Insert IfStatement(395) into Block(396) at 0", "Insert MethodInvocation(506) into IfStatement(517) at 0", "Insert Block(516) into IfStatement(517) at 1", "Insert MethodInvocation(385) into IfStatement(395) at 0", "Move Block(391) into IfStatement(395) at 1", "Insert SimpleName: LOG(504) into MethodInvocation(506) at 0", "Insert SimpleName: isWarnEnabled(505) into MethodInvocation(506) at 1", "Move ExpressionStatement(507) into Block(516) at 0", "Insert SimpleName: LOG(383) into MethodInvocation(385) at 0", "Insert SimpleName: isWarnEnabled(384) into MethodInvocation(385) at 1"]}}, {"HTMLLanguageParser_cluster": {"actions": [{"root": "INS Block to CatchClause at 1", "operations": ["INS Block to CatchClause at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"HTMLLanguageParser_diff": {"operations": ["Insert Block(186) into CatchClause(187) at 1", "Insert IfStatement(185) into Block(186) at 0", "Insert MethodInvocation(176) into IfStatement(185) at 0", "Move Block(181) into IfStatement(185) at 1", "Insert SimpleName: LOG(174) into MethodInvocation(176) at 0", "Insert SimpleName: isFatalEnabled(175) into MethodInvocation(176) at 1"]}}, {"LanguageIdentifier_cluster": {"actions": [{"root": "INS IfStatement to Block at 2", "operations": ["INS IfStatement to Block at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 9", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS IfStatement to Block at 9"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS Block to CatchClause at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to CatchClause at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"LanguageIdentifier_diff": {"operations": [" *      Language Codes</a>(76) to TextElement:  <a href=\"http://www.w3.org/WAI/ER/IG/ert/iso639.htm\">ISO 639", " *      Language Codes</a>(76)", "Insert IfStatement(318) into Block(605) at 2", "Insert IfStatement(595) into Block(605) at 8", "Insert Block(622) into CatchClause(623) at 1", "Insert MethodInvocation(286) into IfStatement(318) at 0", "Insert Block(317) into IfStatement(318) at 1", "Insert MethodInvocation(586) into IfStatement(595) at 0", "Insert Block(594) into IfStatement(595) at 1", "Insert IfStatement(621) into Block(622) at 0", "Insert SimpleName: LOG(284) into MethodInvocation(286) at 0", "Insert SimpleName: isInfoEnabled(285) into MethodInvocation(286) at 1", "Move ExpressionStatement(313) into Block(317) at 0", "Insert SimpleName: LOG(584) into MethodInvocation(586) at 0", "Insert SimpleName: isInfoEnabled(585) into MethodInvocation(586) at 1", "Move ExpressionStatement(580) into Block(594) at 0", "Insert MethodInvocation(612) into IfStatement(621) at 0", "Move Block(602) into IfStatement(621) at 1", "Insert SimpleName: LOG(610) into MethodInvocation(612) at 0", "Insert SimpleName: isFatalEnabled(611) into MethodInvocation(612) at 1", "Insert Block(503) into CatchClause(504) at 1", "Insert IfStatement(502) into Block(503) at 0", "Insert MethodInvocation(493) into IfStatement(502) at 0", "Move Block(493) into IfStatement(502) at 1", "Insert SimpleName: LOG(491) into MethodInvocation(493) at 0", "Insert SimpleName: isFatalEnabled(492) into MethodInvocation(493) at 1"]}}, {"NGramProfile_cluster": {"actions": [{"root": "INS Block to CatchClause at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to CatchClause at 1", "INS IfStatement to Block at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS Block to CatchClause at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"NGramProfile_diff": {"operations": ["Insert Block(1021) into CatchClause(1022) at 1", "Insert Block(1921) into CatchClause(1922) at 1", "Insert IfStatement(1020) into Block(1021) at 0", "Insert IfStatement(1920) into Block(1921) at 0", "Insert MethodInvocation(1011) into IfStatement(1020) at 0", "Move Block(1016) into IfStatement(1020) at 1", "Insert MethodInvocation(1911) into IfStatement(1920) at 0", "Move Block(1911) into IfStatement(1920) at 1", "Insert SimpleName: LOG(1009) into MethodInvocation(1011) at 0", "Insert SimpleName: isFatalEnabled(1010) into MethodInvocation(1011) at 1", "Insert SimpleName: LOG(1909) into MethodInvocation(1911) at 0", "Insert SimpleName: isFatalEnabled(1910) into MethodInvocation(1911) at 1"]}}, {"RegexURLFilterBase_cluster": {"actions": [{"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS IfStatement to Block at 5", "INS Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"RegexURLFilterBase_diff": {"operations": ["Insert Block(292) into IfStatement(328) at 1", "Insert IfStatement(291) into Block(292) at 0", "Insert IfStatement(469) into Block(484) at 5", "Insert MethodInvocation(282) into IfStatement(291) at 0", "Move Block(287) into IfStatement(291) at 1", "Insert MethodInvocation(459) into IfStatement(469) at 0", "Insert Block(468) into IfStatement(469) at 1", "Insert SimpleName: LOG(280) into MethodInvocation(282) at 0", "Insert SimpleName: isFatalEnabled(281) into MethodInvocation(282) at 1", "Insert SimpleName: LOG(457) into MethodInvocation(459) at 0", "Insert SimpleName: isTraceEnabled(458) into MethodInvocation(459) at 1", "Move ExpressionStatement(454) into Block(468) at 0", "Insert IfStatement(315) into Block(324) at 0", "Insert MethodInvocation(306) into IfStatement(315) at 0", "Insert Block(314) into IfStatement(315) at 1", "Insert SimpleName: LOG(304) into MethodInvocation(306) at 0", "Insert SimpleName: isFatalEnabled(305) into MethodInvocation(306) at 1", "Move ExpressionStatement(305) into Block(314) at 0"]}}, {"OntologyImpl_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.apache.nutch.util.LogUtil to ImportDeclaration at 0"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 5", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from e to LOG", "operations": ["UPD SimpleName: e from e to LOG", "UPD SimpleName: toString from toString to LOG"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getStackTrace to MethodInvocation at 1", "MOV SimpleName: e to MethodInvocation at 0"]}, {"root": "UPDATE from getStackTrace to isFatalEnabled", "operations": ["UPD SimpleName: getStackTrace from getStackTrace to isFatalEnabled"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "UPDATE from LOG to e", "operations": ["UPD SimpleName: LOG from LOG to e"]}, {"root": "UPDATE from fatal to printStackTrace", "operations": ["UPD SimpleName: fatal from fatal to printStackTrace"]}, {"root": "INS SimpleName: LogUtil to MethodInvocation at 0", "operations": ["INS SimpleName: LogUtil to MethodInvocation at 0"]}, {"root": "INS SimpleName: getFatalStream to MethodInvocation at 1", "operations": ["INS SimpleName: getFatalStream to MethodInvocation at 1"]}, {"root": "DEL ArrayAccess", "operations": ["DEL SimpleName: traces", "DEL ArrayAccess", "DEL SimpleName: i"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: traces", "DEL Dimension", "DEL VariableDeclarationStatement", "DEL SimpleType: StackTraceElement", "DEL SimpleName: StackTraceElement", "DEL MethodInvocation", "DEL ArrayType: StackTraceElement[]", "DEL VariableDeclarationFragment"]}, {"root": "DEL ForStatement", "operations": ["DEL SimpleName: i", "DEL NumberLiteral: 0", "DEL Block", "DEL QualifiedName: traces.length", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL PostfixExpression: ++", "DEL VariableDeclarationExpression", "DEL PrimitiveType: int", "DEL InfixExpression: <", "DEL ForStatement", "DEL SimpleName: i"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}]}}, {"OntologyImpl_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(1553) at 3", "Insert QualifiedName: org.apache.nutch.util.LogUtil(18) into ImportDeclaration(19) at 0", "Insert IfStatement(1459) into Block(1550) at 5", "Insert Block(1440) into IfStatement(1441) at 1", "Insert MethodInvocation(1452) into IfStatement(1459) at 0", "Insert Block(1458) into IfStatement(1459) at 1", "Insert IfStatement(155) into Block(166) at 0", "Insert IfStatement(273) into Block(283) at 0", "Insert IfStatement(1438) into Block(1440) at 0", "Insert ReturnStatement(1439) into Block(1440) at 1", "Insert SimpleName: LOG(1450) into MethodInvocation(1452) at 0", "Insert SimpleName: isInfoEnabled(1451) into MethodInvocation(1452) at 1", "Move ExpressionStatement(1455) into Block(1458) at 0", "Insert MethodInvocation(148) into IfStatement(155) at 0", "Insert Block(154) into IfStatement(155) at 1", "Insert MethodInvocation(264) into IfStatement(273) at 0", "Insert Block(272) into IfStatement(273) at 1", "Insert IfStatement(314) into Block(315) at 0", "Insert MethodInvocation(1431) into IfStatement(1438) at 0", "Move Block(1441) into IfStatement(1438) at 1", "Insert SimpleName: LOG(146) into MethodInvocation(148) at 0", "Insert SimpleName: isInfoEnabled(147) into MethodInvocation(148) at 1", "Move ExpressionStatement(148) into Block(154) at 0", "Insert SimpleName: LOG(262) into MethodInvocation(264) at 0", "Insert SimpleName: isInfoEnabled(263) into MethodInvocation(264) at 1", "Move ExpressionStatement(261) into Block(272) at 0", "Insert MethodInvocation(290) into IfStatement(314) at 0", "Insert Block(313) into IfStatement(314) at 1", "Insert SimpleName: LOG(1429) into MethodInvocation(1431) at 0", "Insert SimpleName: isFatalEnabled(1430) into MethodInvocation(1431) at 1", "Update SimpleName: e(295) to LOG", "Move SimpleName: e(295) into MethodInvocation(290) at 0", "Update SimpleName: getStackTrace(296) to isFatalEnabled", "Move SimpleName: getStackTrace(296) into MethodInvocation(290) at 1", "Move ExpressionStatement(282) into Block(313) at 0", "Move ExpressionStatement(289) into Block(313) at 1", "Move ExpressionStatement(318) into Block(313) at 2", "Update SimpleName: LOG(310) to e", "Update SimpleName: fatal(311) to printStackTrace", "Insert SimpleName: LogUtil(307) into MethodInvocation(310) at 0", "Insert SimpleName: getFatalStream(308) into MethodInvocation(310) at 1", "Update SimpleName: toString(315) to LOG", "Delete SimpleName: traces(312)", "Delete SimpleName: i(313)", "Delete ArrayAccess(314)", "Delete SimpleName: StackTraceElement(290)", "Delete SimpleType: StackTraceElement(291)", "Delete Dimension(292)", "Delete ArrayType: StackTraceElement[](293)", "Delete SimpleName: traces(294)", "Delete MethodInvocation(297)", "Delete VariableDeclarationFragment(298)", "Delete VariableDeclarationStatement(299)", "Delete PrimitiveType: int(300)", "Delete SimpleName: i(301)", "Delete NumberLiteral: 0(302)", "Delete VariableDeclarationFragment(303)", "Delete VariableDeclarationExpression(304)", "Delete SimpleName: i(305)", "Delete QualifiedName: traces.length(306)", "Delete InfixExpression: <(307)", "Delete SimpleName: i(308)", "Delete PostfixExpression: ++(309)", "Delete Block(319)", "Delete ForStatement(320)", "Delete ReturnStatement(1440)"]}}, {"HtmlParser_cluster": {"actions": [{"root": "INS IfStatement to Block at 10", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 10", "INS SimpleName: isTraceEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 8", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 8", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 6"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS IfStatement to Block at 2", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 6", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS IfStatement to Block at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 3", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 1", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS Block to IfStatement at 1", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"HtmlParser_diff": {"operations": ["Insert IfStatement(601) into Block(823) at 10", "Insert MethodInvocation(588) into IfStatement(601) at 0", "Insert Block(600) into IfStatement(601) at 1", "Insert IfStatement(502) into Block(509) at 8", "Insert SimpleName: LOG(586) into MethodInvocation(588) at 0", "Insert SimpleName: isTraceEnabled(587) into MethodInvocation(588) at 1", "Move ExpressionStatement(576) into Block(600) at 0", "Insert IfStatement(623) into Block(665) at 1", "Insert IfStatement(650) into Block(665) at 5", "Insert IfStatement(697) into Block(745) at 2", "Insert IfStatement(744) into Block(745) at 5", "Insert MethodInvocation(495) into IfStatement(502) at 0", "Insert Block(501) into IfStatement(502) at 1", "Insert MethodInvocation(616) into IfStatement(623) at 0", "Insert Block(622) into IfStatement(623) at 1", "Insert MethodInvocation(643) into IfStatement(650) at 0", "Insert Block(649) into IfStatement(650) at 1", "Insert MethodInvocation(690) into IfStatement(697) at 0", "Insert Block(696) into IfStatement(697) at 1", "Insert MethodInvocation(731) into IfStatement(744) at 0", "Insert Block(743) into IfStatement(744) at 1", "Insert IfStatement(485) into Block(486) at 2", "Insert SimpleName: LOG(493) into MethodInvocation(495) at 0", "Insert SimpleName: isTraceEnabled(494) into MethodInvocation(495) at 1", "Move ExpressionStatement(482) into Block(501) at 0", "Insert SimpleName: LOG(614) into MethodInvocation(616) at 0", "Insert SimpleName: isTraceEnabled(615) into MethodInvocation(616) at 1", "Move ExpressionStatement(593) into Block(622) at 0", "Insert SimpleName: LOG(641) into MethodInvocation(643) at 0", "Insert SimpleName: isTraceEnabled(642) into MethodInvocation(643) at 1", "Move ExpressionStatement(615) into Block(649) at 0", "Insert SimpleName: LOG(688) into MethodInvocation(690) at 0", "Insert SimpleName: isTraceEnabled(689) into MethodInvocation(690) at 1", "Move ExpressionStatement(657) into Block(696) at 0", "Insert SimpleName: LOG(729) into MethodInvocation(731) at 0", "Insert SimpleName: isTraceEnabled(730) into MethodInvocation(731) at 1", "Move ExpressionStatement(699) into Block(743) at 0", "Insert IfStatement(1057) into Block(1063) at 3", "Insert MethodInvocation(475) into IfStatement(485) at 0", "Insert Block(484) into IfStatement(485) at 1", "Insert MethodInvocation(1043) into IfStatement(1057) at 0", "Insert Block(1056) into IfStatement(1057) at 1", "Insert IfStatement(396) into Block(397) at 1", "Insert SimpleName: LOG(473) into MethodInvocation(475) at 0", "Insert SimpleName: isTraceEnabled(474) into MethodInvocation(475) at 1", "Move ExpressionStatement(470) into Block(484) at 0", "Insert SimpleName: LOG(1041) into MethodInvocation(1043) at 0", "Insert SimpleName: isInfoEnabled(1042) into MethodInvocation(1043) at 1", "Move ExpressionStatement(1007) into Block(1056) at 0", "Insert MethodInvocation(386) into IfStatement(396) at 0", "Insert Block(395) into IfStatement(396) at 1", "Insert SimpleName: LOG(384) into MethodInvocation(386) at 0", "Insert SimpleName: isTraceEnabled(385) into MethodInvocation(386) at 1", "Move ExpressionStatement(391) into Block(395) at 0", "Insert IfStatement(453) into Block(454) at 1", "Insert MethodInvocation(443) into IfStatement(453) at 0", "Insert Block(452) into IfStatement(453) at 1", "Insert SimpleName: LOG(441) into MethodInvocation(443) at 0", "Insert SimpleName: isTraceEnabled(442) into MethodInvocation(443) at 1", "Move ExpressionStatement(443) into Block(452) at 0"]}}, {"JSParseFilter_cluster": {"actions": [{"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isErrorEnabled to MethodInvocation at 1", "INS Block to CatchClause at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isErrorEnabled to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 6", "INS Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"JSParseFilter_diff": {"operations": ["Insert Block(847) into CatchClause(848) at 1", "Insert Block(1033) into CatchClause(1034) at 1", "Insert IfStatement(846) into Block(847) at 0", "Insert IfStatement(1032) into Block(1033) at 0", "Insert MethodInvocation(838) into IfStatement(846) at 0", "Move Block(842) into IfStatement(846) at 1", "Insert IfStatement(1003) into Block(1015) at 6", "Insert MethodInvocation(1024) into IfStatement(1032) at 0", "Move Block(1018) into IfStatement(1032) at 1", "Insert SimpleName: LOG(836) into MethodInvocation(838) at 0", "Insert SimpleName: isErrorEnabled(837) into MethodInvocation(838) at 1", "Insert MethodInvocation(993) into IfStatement(1003) at 0", "Insert Block(1002) into IfStatement(1003) at 1", "Insert SimpleName: LOG(1022) into MethodInvocation(1024) at 0", "Insert SimpleName: isErrorEnabled(1023) into MethodInvocation(1024) at 1", "Insert SimpleName: LOG(991) into MethodInvocation(993) at 0", "Insert SimpleName: isTraceEnabled(992) into MethodInvocation(993) at 1", "Move ExpressionStatement(993) into Block(1002) at 0"]}}, {"ContentReaderListener_cluster": {"actions": [{"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS ReturnStatement to Block at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isErrorEnabled to MethodInvocation at 1", "INS Block to CatchClause at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS BreakStatement to Block at 1", "INS IfStatement to Block at 0", "INS Block to CatchClause at 1", "INS SimpleName: isErrorEnabled to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS Block to IfStatement at 3", "operations": ["INS Block to IfStatement at 3"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS ContinueStatement to Block at 2", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS BreakStatement to Block at 1", "operations": ["INS BreakStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isErrorEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isErrorEnabled to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS BreakStatement to Block at 1", "INS IfStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL ContinueStatement", "operations": ["DEL ContinueStatement"]}, {"root": "DEL BreakStatement", "operations": ["DEL BreakStatement"]}, {"root": "DEL BreakStatement", "operations": ["DEL BreakStatement"]}, {"root": "DEL BreakStatement", "operations": ["DEL BreakStatement"]}]}}, {"ContentReaderListener_diff": {"operations": ["Insert Block(145) into IfStatement(146) at 1", "Insert IfStatement(143) into Block(145) at 0", "Insert ReturnStatement(144) into Block(145) at 1", "Insert Block(474) into CatchClause(475) at 1", "Insert MethodInvocation(132) into IfStatement(143) at 0", "Move Block(140) into IfStatement(143) at 1", "Insert Block(311) into IfStatement(457) at 1", "Insert IfStatement(473) into Block(474) at 0", "Insert SimpleName: LOG(130) into MethodInvocation(132) at 0", "Insert SimpleName: isWarnEnabled(131) into MethodInvocation(132) at 1", "Insert IfStatement(310) into Block(311) at 0", "Insert MethodInvocation(465) into IfStatement(473) at 0", "Move Block(459) into IfStatement(473) at 1", "Insert Block(935) into CatchClause(936) at 1", "Insert MethodInvocation(303) into IfStatement(310) at 0", "Move Block(301) into IfStatement(310) at 1", "Insert SimpleName: LOG(463) into MethodInvocation(465) at 0", "Insert SimpleName: isErrorEnabled(464) into MethodInvocation(465) at 1", "Insert IfStatement(933) into Block(935) at 0", "Insert BreakStatement(934) into Block(935) at 1", "Insert SimpleName: LOG(301) into MethodInvocation(303) at 0", "Insert SimpleName: isInfoEnabled(302) into MethodInvocation(303) at 1", "Insert MethodInvocation(925) into IfStatement(933) at 0", "Move Block(900) into IfStatement(933) at 1", "Insert Block(1286) into IfStatement(1287) at 2", "Insert Block(609) into IfStatement(610) at 1", "Insert Block(678) into IfStatement(914) at 1", "Insert SimpleName: LOG(923) into MethodInvocation(925) at 0", "Insert SimpleName: isErrorEnabled(924) into MethodInvocation(925) at 1", "Insert IfStatement(1283) into Block(1285) at 0", "Insert BreakStatement(1284) into Block(1285) at 1", "Insert IfStatement(604) into Block(609) at 0", "Move ExpressionStatement(587) into Block(609) at 1", "Insert ContinueStatement(608) into Block(609) at 2", "Insert IfStatement(677) into Block(678) at 0", "Insert MethodInvocation(1276) into IfStatement(1283) at 0", "Move Block(1235) into IfStatement(1283) at 1", "Insert MethodInvocation(597) into IfStatement(604) at 0", "Move Block(589) into IfStatement(604) at 1", "Insert MethodInvocation(663) into IfStatement(677) at 0", "Move Block(653) into IfStatement(677) at 1", "Insert IfStatement(1121) into Block(1133) at 0", "Insert IfStatement(1132) into Block(1133) at 1", "Insert SimpleName: LOG(1274) into MethodInvocation(1276) at 0", "Insert SimpleName: isTraceEnabled(1275) into MethodInvocation(1276) at 1", "Insert SimpleName: LOG(595) into MethodInvocation(597) at 0", "Insert SimpleName: isTraceEnabled(596) into MethodInvocation(597) at 1", "Insert SimpleName: LOG(661) into MethodInvocation(663) at 0", "Insert SimpleName: isDebugEnabled(662) into MethodInvocation(663) at 1", "Insert MethodInvocation(1112) into IfStatement(1121) at 0", "Insert Block(1120) into IfStatement(1121) at 1", "Insert MethodInvocation(1124) into IfStatement(1132) at 0", "Insert Block(1131) into IfStatement(1132) at 1", "Insert SimpleName: LOG(1110) into MethodInvocation(1112) at 0", "Insert SimpleName: isTraceEnabled(1111) into MethodInvocation(1112) at 1", "Move ExpressionStatement(1081) into Block(1120) at 0", "Insert SimpleName: LOG(1122) into MethodInvocation(1124) at 0", "Insert SimpleName: isErrorEnabled(1123) into MethodInvocation(1124) at 1", "Move ExpressionStatement(1087) into Block(1131) at 0", "Insert Block(908) into CatchClause(909) at 1", "Insert IfStatement(906) into Block(908) at 0", "Insert BreakStatement(907) into Block(908) at 1", "Insert MethodInvocation(898) into IfStatement(906) at 0", "Move Block(878) into IfStatement(906) at 1", "Insert SimpleName: LOG(896) into MethodInvocation(898) at 0", "Insert SimpleName: isErrorEnabled(897) into MethodInvocation(898) at 1", "Delete ReturnStatement(139)", "Delete ContinueStatement(588)", "Delete BreakStatement(877)", "Delete BreakStatement(899)", "Delete BreakStatement(1234)"]}}, {"PPTExtractor_cluster": {"actions": [{"root": "INS IfStatement to IfStatement at 2", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"PPTExtractor_diff": {"operations": ["Insert IfStatement(113) into IfStatement(114) at 2", "Insert MethodInvocation(102) into IfStatement(113) at 0", "Move Block(109) into IfStatement(113) at 1", "Insert SimpleName: LOG(100) into MethodInvocation(102) at 0", "Insert SimpleName: isWarnEnabled(101) into MethodInvocation(102) at 1"]}}, {"PdfParser_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}]}}, {"PdfParser_diff": {"operations": ["Insert IfStatement(359) into Block(372) at 0", "Insert MethodInvocation(340) into IfStatement(359) at 0", "Insert Block(358) into IfStatement(359) at 1", "Insert SimpleName: LOG(338) into MethodInvocation(340) at 0", "Insert SimpleName: isWarnEnabled(339) into MethodInvocation(340) at 1", "Move ExpressionStatement(346) into Block(358) at 0", "Move ExpressionStatement(354) into Block(358) at 1"]}}, {"RSSParser_cluster": {"actions": [{"root": "INS IfStatement to Block at 6", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 6"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to IfStatement at 2"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from info to warn", "operations": ["UPD SimpleName: info from info to warn", "UPD SimpleName: info from info to warn", "UPD SimpleName: trace from trace to warn"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS ContinueStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to CatchClause at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS SimpleName: warn to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"Attempting to continue processing outlinks\" to MethodInvocation at 2"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS StringLiteral: \"Attempting to continue processing outlinks\" to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: warn to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from \"nutch:parse-rss:RSSParser Exception: MalformedURL: \" to \"MalformedURL: \"", "operations": ["UPD StringLiteral: \"nutch:parse-rss:RSSParser Exception: MalformedURL: \" from \"nutch:parse-rss:RSSParser Exception: MalformedURL: \" to \"MalformedURL: \"", "UPD StringLiteral: \"nutch:parse-rss:RSSParser Exception: MalformedURL: \" from \"nutch:parse-rss:RSSParser Exception: MalformedURL: \" to \"MalformedURL: \""]}, {"root": "DEL StringLiteral: \": Attempting to continue processing outlinks\"", "operations": ["DEL StringLiteral: \": Attempting to continue processing outlinks\""]}, {"root": "DEL ContinueStatement", "operations": ["DEL ContinueStatement"]}, {"root": "DEL StringLiteral: \": Attempting to continue processing outlinks\"", "operations": ["DEL StringLiteral: \": Attempting to continue processing outlinks\""]}]}}, {"RSSParser_diff": {"operations": ["Insert IfStatement(570) into Block(602) at 6", "Insert IfStatement(533) into IfStatement(534) at 2", "Insert MethodInvocation(560) into IfStatement(570) at 0", "Insert Block(569) into IfStatement(570) at 1", "Insert IfStatement(522) into Block(523) at 1", "Insert MethodInvocation(526) into IfStatement(533) at 0", "Move Block(501) into IfStatement(533) at 1", "Insert SimpleName: LOG(558) into MethodInvocation(560) at 0", "Insert SimpleName: isTraceEnabled(559) into MethodInvocation(560) at 1", "Move ExpressionStatement(533) into Block(569) at 0", "Insert IfStatement(198) into Block(211) at 0", "Insert MethodInvocation(506) into IfStatement(522) at 0", "Insert Block(521) into IfStatement(522) at 1", "Insert SimpleName: LOG(524) into MethodInvocation(526) at 0", "Insert SimpleName: isTraceEnabled(525) into MethodInvocation(526) at 1", "Insert MethodInvocation(179) into IfStatement(198) at 0", "Insert Block(197) into IfStatement(198) at 1", "Insert SimpleName: LOG(504) into MethodInvocation(506) at 0", "Insert SimpleName: isTraceEnabled(505) into MethodInvocation(506) at 1", "Move ExpressionStatement(487) into Block(521) at 0", "Move ExpressionStatement(494) into Block(521) at 1", "Insert SimpleName: LOG(177) into MethodInvocation(179) at 0", "Insert SimpleName: isWarnEnabled(178) into MethodInvocation(179) at 1", "Move ExpressionStatement(184) into Block(197) at 0", "Move ExpressionStatement(193) into Block(197) at 1", "Update SimpleName: trace(186) to warn", "Insert Block(360) into CatchClause(361) at 1", "Insert IfStatement(358) into Block(360) at 0", "Insert ContinueStatement(359) into Block(360) at 1", "Insert MethodInvocation(334) into IfStatement(358) at 0", "Move Block(346) into IfStatement(358) at 1", "Insert SimpleName: LOG(332) into MethodInvocation(334) at 0", "Insert SimpleName: isWarnEnabled(333) into MethodInvocation(334) at 1", "Insert ExpressionStatement(348) into Block(357) at 1", "Insert IfStatement(493) into Block(495) at 0", "Insert MethodInvocation(347) into ExpressionStatement(348) at 0", "Insert MethodInvocation(471) into IfStatement(493) at 0", "Insert Block(492) into IfStatement(493) at 1", "Update SimpleName: info(328) to warn", "Insert SimpleName: LOG(344) into MethodInvocation(347) at 0", "Insert SimpleName: warn(345) into MethodInvocation(347) at 1", "Insert StringLiteral: \"Attempting to continue processing outlinks\"(346) into MethodInvocation(347) at 2", "Insert SimpleName: LOG(469) into MethodInvocation(471) at 0", "Insert SimpleName: isWarnEnabled(470) into MethodInvocation(471) at 1", "Move ExpressionStatement(462) into Block(492) at 0", "Insert ExpressionStatement(483) into Block(492) at 1", "Move ExpressionStatement(470) into Block(492) at 2", "Update StringLiteral: \"nutch:parse-rss:RSSParser Exception: MalformedURL: \"(329) to \"MalformedURL: \"", "Insert MethodInvocation(482) into ExpressionStatement(483) at 0", "Update SimpleName: info(456) to warn", "Insert SimpleName: LOG(479) into MethodInvocation(482) at 0", "Insert SimpleName: warn(480) into MethodInvocation(482) at 1", "Insert StringLiteral: \"Attempting to continue processing outlinks\"(481) into MethodInvocation(482) at 2", "Update StringLiteral: \"nutch:parse-rss:RSSParser Exception: MalformedURL: \"(457) to \"MalformedURL: \"", "Delete StringLiteral: \": Attempting to continue processing outlinks\"(333)", "Delete ContinueStatement(345)", "Delete StringLiteral: \": Attempting to continue processing outlinks\"(459)"]}}, {"ZipParser_cluster": {"actions": [{"root": "INS IfStatement to Block at 11", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS IfStatement to Block at 11", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS IfStatement to Block at 2", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"ZipParser_diff": {"operations": ["Insert IfStatement(321) into Block(328) at 11", "Insert MethodInvocation(314) into IfStatement(321) at 0", "Insert Block(320) into IfStatement(321) at 1", "Insert IfStatement(160) into Block(235) at 2", "Insert SimpleName: LOG(312) into MethodInvocation(314) at 0", "Insert SimpleName: isTraceEnabled(313) into MethodInvocation(314) at 1", "Move ExpressionStatement(311) into Block(320) at 0", "Insert MethodInvocation(151) into IfStatement(160) at 0", "Insert Block(159) into IfStatement(160) at 1", "Insert SimpleName: LOG(149) into MethodInvocation(151) at 0", "Insert SimpleName: isDebugEnabled(150) into MethodInvocation(151) at 1", "Move ExpressionStatement(155) into Block(159) at 0"]}}, {"ZipTextExtractor_cluster": {"actions": [{"root": "INS Block to CatchClause at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS Block to CatchClause at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"ZipTextExtractor_diff": {"operations": ["Insert Block(418) into CatchClause(419) at 1", "Insert IfStatement(417) into Block(418) at 0", "Insert MethodInvocation(404) into IfStatement(417) at 0", "Move Block(413) into IfStatement(417) at 1", "Insert SimpleName: LOG(402) into MethodInvocation(404) at 0", "Insert SimpleName: isInfoEnabled(403) into MethodInvocation(404) at 1"]}}, {"FileResponse_cluster": {"actions": [{"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS QualifiedName: File.LOG to MethodInvocation at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS QualifiedName: File.LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"FileResponse_diff": {"operations": ["Insert Block(255) into IfStatement(256) at 1", "Insert Block(512) into IfStatement(513) at 1", "Insert IfStatement(254) into Block(255) at 0", "Insert IfStatement(511) into Block(512) at 0", "Insert MethodInvocation(245) into IfStatement(254) at 0", "Move Block(250) into IfStatement(254) at 1", "Insert MethodInvocation(500) into IfStatement(511) at 0", "Insert Block(510) into IfStatement(511) at 1", "Insert QualifiedName: File.LOG(243) into MethodInvocation(245) at 0", "Insert SimpleName: isWarnEnabled(244) into MethodInvocation(245) at 1", "Insert QualifiedName: File.LOG(498) into MethodInvocation(500) at 0", "Insert SimpleName: isWarnEnabled(499) into MethodInvocation(500) at 1", "Move ExpressionStatement(501) into Block(510) at 0"]}}, {"FtpResponse_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: org.apache.nutch.util.LogUtil to ImportDeclaration at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS Block to IfStatement at 1"]}, {"root": "INS CatchClause to TryStatement at 3", "operations": ["INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0", "INS CatchClause to TryStatement at 3", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 2"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 2", "operations": ["INS MethodInvocation to ParenthesizedExpression at 0", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS ParenthesizedExpression to InfixExpression: && at 0", "INS InfixExpression: && to IfStatement at 0", "INS QualifiedName: ftp.followTalk to ParenthesizedExpression at 0", "INS Block to IfStatement at 2", "INS IfStatement to Block at 0", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS QualifiedName: ftp.LOG to MethodInvocation at 0", "INS IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: && to IfStatement at 0", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS MethodInvocation to ParenthesizedExpression at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS ParenthesizedExpression to InfixExpression: && at 0", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS QualifiedName: ftp.followTalk to ParenthesizedExpression at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: && to IfStatement at 0", "INS ParenthesizedExpression to InfixExpression: && at 0", "INS MethodInvocation to ParenthesizedExpression at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS QualifiedName: ftp.followTalk to ParenthesizedExpression at 0", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS ParenthesizedExpression to InfixExpression: && at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS MethodInvocation to ParenthesizedExpression at 0", "INS ParenthesizedExpression to InfixExpression: && at 0", "INS InfixExpression: && to IfStatement at 0", "INS QualifiedName: ftp.followTalk to ParenthesizedExpression at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS ParenthesizedExpression to InfixExpression: && at 0", "INS MethodInvocation to ParenthesizedExpression at 0", "INS QualifiedName: ftp.followTalk to ParenthesizedExpression at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS InfixExpression: && to IfStatement at 0", "INS ParenthesizedExpression to InfixExpression: && at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS ParenthesizedExpression to InfixExpression: && at 0", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS InfixExpression: && to IfStatement at 0", "INS QualifiedName: ftp.followTalk to ParenthesizedExpression at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS MethodInvocation to ParenthesizedExpression at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: && to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to ParenthesizedExpression at 0", "INS ParenthesizedExpression to InfixExpression: && at 0", "INS QualifiedName: ftp.followTalk to ParenthesizedExpression at 0", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS ParenthesizedExpression to InfixExpression: && at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS ParenthesizedExpression to InfixExpression: && at 1", "INS ParenthesizedExpression to InfixExpression: && at 0", "INS MethodInvocation to ParenthesizedExpression at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS QualifiedName: ftp.followTalk to ParenthesizedExpression at 0", "INS InfixExpression: && to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: && to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS MethodInvocation to ParenthesizedExpression at 0", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS QualifiedName: ftp.followTalk to ParenthesizedExpression at 0", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS ParenthesizedExpression to InfixExpression: && at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS QualifiedName: ftp.followTalk to ParenthesizedExpression at 0", "INS ParenthesizedExpression to InfixExpression: && at 0", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS MethodInvocation to ParenthesizedExpression at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS IfStatement to Block at 2", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS QualifiedName: ftp.followTalk to ParenthesizedExpression at 0", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to ParenthesizedExpression at 0", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS ParenthesizedExpression to InfixExpression: && at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1"]}, {"root": "UPDATE from warn to e", "operations": ["UPD SimpleName: warn from warn to e"]}, {"root": "INS SimpleName: printStackTrace to MethodInvocation at 2", "operations": ["INS SimpleName: printStackTrace to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: LogUtil to MethodInvocation at 0", "INS QualifiedName: ftp.LOG to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS QualifiedName: Ftp.LOG to MethodInvocation at 0", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "UPDATE from toString to getWarnStream", "operations": ["UPD SimpleName: toString from toString to getWarnStream"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: toString to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "DEL QualifiedName: ftp.followTalk", "operations": ["DEL QualifiedName: ftp.followTalk"]}, {"root": "DEL QualifiedName: ftp.followTalk", "operations": ["DEL QualifiedName: ftp.followTalk"]}, {"root": "DEL QualifiedName: ftp.followTalk", "operations": ["DEL QualifiedName: ftp.followTalk"]}, {"root": "DEL QualifiedName: ftp.followTalk", "operations": ["DEL QualifiedName: ftp.followTalk"]}, {"root": "DEL QualifiedName: ftp.followTalk", "operations": ["DEL QualifiedName: ftp.followTalk"]}, {"root": "DEL IfStatement", "operations": ["DEL QualifiedName: ftp.followTalk", "DEL IfStatement"]}, {"root": "DEL QualifiedName: ftp.followTalk", "operations": ["DEL QualifiedName: ftp.followTalk"]}, {"root": "DEL QualifiedName: ftp.followTalk", "operations": ["DEL QualifiedName: ftp.followTalk"]}, {"root": "DEL QualifiedName: ftp.LOG", "operations": ["DEL QualifiedName: ftp.LOG"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL SimpleName: stes", "DEL SimpleName: i", "DEL StringLiteral: \"   \"", "DEL InfixExpression: +", "DEL ArrayAccess", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: StackTraceElement", "DEL SimpleName: stes", "DEL MethodInvocation", "DEL SimpleName: getStackTrace", "DEL SimpleName: e", "DEL VariableDeclarationStatement", "DEL SimpleName: StackTraceElement", "DEL VariableDeclarationFragment", "DEL Dimension"]}, {"root": "DEL ForStatement", "operations": ["DEL NumberLiteral: 0", "DEL ForStatement", "DEL VariableDeclarationExpression", "DEL InfixExpression: <", "DEL SimpleName: i", "DEL QualifiedName: stes.length", "DEL SimpleName: i", "DEL SimpleName: i", "DEL PostfixExpression: ++", "DEL Block", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int"]}, {"root": "DEL QualifiedName: ftp.followTalk", "operations": ["DEL QualifiedName: ftp.followTalk"]}, {"root": "DEL QualifiedName: ftp.followTalk", "operations": ["DEL QualifiedName: ftp.followTalk"]}, {"root": "DEL QualifiedName: ftp.followTalk", "operations": ["DEL QualifiedName: ftp.followTalk"]}, {"root": "DEL CatchClause", "operations": ["DEL CatchClause", "DEL Block"]}]}}, {"FtpResponse_diff": {"operations": ["Insert ImportDeclaration(33) into CompilationUnit(1519) at 10", "Insert QualifiedName: org.apache.nutch.util.LogUtil(32) into ImportDeclaration(33) at 0", "Insert Block(249) into IfStatement(250) at 1", "Insert CatchClause(1130) into TryStatement(1131) at 3", "Move CatchClause(1021) into TryStatement(1346) at 2", "Insert IfStatement(248) into Block(249) at 0", "Move SingleVariableDeclaration(1184) into CatchClause(1130) at 0", "Insert Block(1129) into CatchClause(1130) at 1", "Insert MethodInvocation(239) into IfStatement(248) at 0", "Insert Block(247) into IfStatement(248) at 1", "Insert Block(280) into IfStatement(294) at 1", "Insert Block(711) into IfStatement(712) at 2", "Insert IfStatement(831) into Block(855) at 0", "Insert IfStatement(1122) into Block(1129) at 0", "Move ExpressionStatement(1198) into Block(1129) at 1", "Insert IfStatement(1313) into Block(1320) at 0", "Insert IfStatement(1337) into Block(1344) at 0", "Insert QualifiedName: Ftp.LOG(237) into MethodInvocation(239) at 0", "Insert SimpleName: isWarnEnabled(238) into MethodInvocation(239) at 1", "Move ExpressionStatement(241) into Block(247) at 0", "Insert IfStatement(279) into Block(280) at 0", "Insert IfStatement(326) into Block(331) at 0", "Insert IfStatement(710) into Block(711) at 0", "Insert MethodInvocation(814) into IfStatement(831) at 0", "Insert Block(830) into IfStatement(831) at 1", "Insert InfixExpression: &&(838) into IfStatement(845) at 0", "Insert Block(844) into IfStatement(845) at 1", "Insert InfixExpression: &&(974) into IfStatement(983) at 0", "Insert Block(982) into IfStatement(983) at 1", "Insert MethodInvocation(1112) into IfStatement(1122) at 0", "Insert Block(1121) into IfStatement(1122) at 1", "Insert InfixExpression: &&(1234) into IfStatement(1243) at 0", "Insert Block(1242) into IfStatement(1243) at 1", "Insert MethodInvocation(1303) into IfStatement(1313) at 0", "Insert Block(1312) into IfStatement(1313) at 1", "Insert MethodInvocation(1328) into IfStatement(1337) at 0", "Insert Block(1336) into IfStatement(1337) at 1", "Insert MethodInvocation(270) into IfStatement(279) at 0", "Move Block(267) into IfStatement(279) at 1", "Insert MethodInvocation(319) into IfStatement(326) at 0", "Insert Block(325) into IfStatement(326) at 1", "Insert InfixExpression: &&(342) into IfStatement(349) at 0", "Insert Block(348) into IfStatement(349) at 1", "Insert InfixExpression: &&(434) into IfStatement(443) at 0", "Insert Block(442) into IfStatement(443) at 1", "Insert InfixExpression: &&(491) into IfStatement(500) at 0", "Insert Block(499) into IfStatement(500) at 1", "Insert InfixExpression: &&(572) into IfStatement(581) at 0", "Insert Block(580) into IfStatement(581) at 1", "Insert InfixExpression: &&(703) into IfStatement(710) at 0", "Move Block(621) into IfStatement(710) at 1", "Insert InfixExpression: &&(760) into IfStatement(772) at 0", "Insert Block(771) into IfStatement(772) at 1", "Insert InfixExpression: &&(787) into IfStatement(796) at 0", "Insert Block(795) into IfStatement(796) at 1", "Insert QualifiedName: ftp.LOG(812) into MethodInvocation(814) at 0", "Insert SimpleName: isWarnEnabled(813) into MethodInvocation(814) at 1", "Move ExpressionStatement(714) into Block(830) at 0", "Move ExpressionStatement(744) into Block(830) at 1", "Insert ParenthesizedExpression(833) into InfixExpression: &&(838) at 0", "Insert ParenthesizedExpression(837) into InfixExpression: &&(838) at 1", "Move ExpressionStatement(752) into Block(844) at 0", "Insert ParenthesizedExpression(969) into InfixExpression: &&(974) at 0", "Insert ParenthesizedExpression(973) into InfixExpression: &&(974) at 1", "Move ExpressionStatement(883) into Block(982) at 0", "Insert IfStatement(1002) into Block(1010) at 0", "Insert QualifiedName: Ftp.LOG(1110) into MethodInvocation(1112) at 0", "Insert SimpleName: isWarnEnabled(1111) into MethodInvocation(1112) at 1", "Move ExpressionStatement(1192) into Block(1121) at 0", "Insert ParenthesizedExpression(1229) into InfixExpression: &&(1234) at 0", "Insert ParenthesizedExpression(1233) into InfixExpression: &&(1234) at 1", "Move ExpressionStatement(1126) into Block(1242) at 0", "Insert QualifiedName: Ftp.LOG(1301) into MethodInvocation(1303) at 0", "Insert SimpleName: isWarnEnabled(1302) into MethodInvocation(1303) at 1", "Move ExpressionStatement(1013) into Block(1312) at 0", "Insert QualifiedName: Ftp.LOG(1326) into MethodInvocation(1328) at 0", "Insert SimpleName: isWarnEnabled(1327) into MethodInvocation(1328) at 1", "Move ExpressionStatement(1211) into Block(1336) at 0", "Insert QualifiedName: Ftp.LOG(268) into MethodInvocation(270) at 0", "Insert SimpleName: isInfoEnabled(269) into MethodInvocation(270) at 1", "Insert QualifiedName: Ftp.LOG(317) into MethodInvocation(319) at 0", "Insert SimpleName: isInfoEnabled(318) into MethodInvocation(319) at 1", "Move ExpressionStatement(308) into Block(325) at 0", "Insert ParenthesizedExpression(337) into InfixExpression: &&(342) at 0", "Insert ParenthesizedExpression(341) into InfixExpression: &&(342) at 1", "Move ExpressionStatement(323) into Block(348) at 0", "Insert ParenthesizedExpression(429) into InfixExpression: &&(434) at 0", "Insert ParenthesizedExpression(433) into InfixExpression: &&(434) at 1", "Move ExpressionStatement(403) into Block(442) at 0", "Insert IfStatement(475) into Block(483) at 1", "Insert ParenthesizedExpression(486) into InfixExpression: &&(491) at 0", "Insert ParenthesizedExpression(490) into InfixExpression: &&(491) at 1", "Move ExpressionStatement(448) into Block(499) at 0", "Insert IfStatement(522) into Block(530) at 1", "Insert IfStatement(556) into Block(564) at 2", "Insert ParenthesizedExpression(567) into InfixExpression: &&(572) at 0", "Insert ParenthesizedExpression(571) into InfixExpression: &&(572) at 1", "Move ExpressionStatement(512) into Block(580) at 0", "Insert ParenthesizedExpression(698) into InfixExpression: &&(703) at 0", "Insert ParenthesizedExpression(702) into InfixExpression: &&(703) at 1", "Move ExpressionStatement(619) into Block(709) at 0", "Insert ParenthesizedExpression(755) into InfixExpression: &&(760) at 0", "Insert ParenthesizedExpression(759) into InfixExpression: &&(760) at 1", "Move ExpressionStatement(674) into Block(771) at 0", "Insert ParenthesizedExpression(782) into InfixExpression: &&(787) at 0", "Insert ParenthesizedExpression(786) into InfixExpression: &&(787) at 1", "Move ExpressionStatement(691) into Block(795) at 0", "Insert QualifiedName: ftp.followTalk(832) into ParenthesizedExpression(833) at 0", "Insert MethodInvocation(836) into ParenthesizedExpression(837) at 0", "Insert QualifiedName: ftp.followTalk(968) into ParenthesizedExpression(969) at 0", "Insert MethodInvocation(972) into ParenthesizedExpression(973) at 0", "Insert MethodInvocation(993) into IfStatement(1002) at 0", "Insert Block(1001) into IfStatement(1002) at 1", "Insert QualifiedName: ftp.followTalk(1228) into ParenthesizedExpression(1229) at 0", "Insert MethodInvocation(1232) into ParenthesizedExpression(1233) at 0", "Insert QualifiedName: ftp.followTalk(336) into ParenthesizedExpression(337) at 0", "Insert MethodInvocation(340) into ParenthesizedExpression(341) at 0", "Insert InfixExpression: &&(400) into IfStatement(411) at 0", "Insert Block(410) into IfStatement(411) at 1", "Insert QualifiedName: ftp.followTalk(428) into ParenthesizedExpression(429) at 0", "Insert MethodInvocation(432) into ParenthesizedExpression(433) at 0", "Insert MethodInvocation(462) into IfStatement(475) at 0", "Insert Block(474) into IfStatement(475) at 1", "Insert QualifiedName: ftp.followTalk(485) into ParenthesizedExpression(486) at 0", "Insert MethodInvocation(489) into ParenthesizedExpression(490) at 0", "Insert MethodInvocation(513) into IfStatement(522) at 0", "Insert Block(521) into IfStatement(522) at 1", "Insert MethodInvocation(547) into IfStatement(556) at 0", "Insert Block(555) into IfStatement(556) at 1", "Insert QualifiedName: ftp.followTalk(566) into ParenthesizedExpression(567) at 0", "Insert MethodInvocation(570) into ParenthesizedExpression(571) at 0", "Insert IfStatement(631) into Block(636) at 0", "Insert IfStatement(655) into Block(660) at 0", "Insert QualifiedName: ftp.followTalk(697) into ParenthesizedExpression(698) at 0", "Insert MethodInvocation(701) into ParenthesizedExpression(702) at 0", "Insert QualifiedName: ftp.followTalk(754) into ParenthesizedExpression(755) at 0", "Insert MethodInvocation(758) into ParenthesizedExpression(759) at 0", "Insert QualifiedName: ftp.followTalk(781) into ParenthesizedExpression(782) at 0", "Insert MethodInvocation(785) into ParenthesizedExpression(786) at 0", "Update SimpleName: warn(735) to e", "Insert SimpleName: printStackTrace(823) into MethodInvocation(828) at 1", "Insert MethodInvocation(827) into MethodInvocation(828) at 2", "Insert QualifiedName: Ftp.LOG(834) into MethodInvocation(836) at 0", "Insert SimpleName: isInfoEnabled(835) into MethodInvocation(836) at 1", "Insert QualifiedName: Ftp.LOG(970) into MethodInvocation(972) at 0", "Insert SimpleName: isInfoEnabled(971) into MethodInvocation(972) at 1", "Insert QualifiedName: Ftp.LOG(991) into MethodInvocation(993) at 0", "Insert SimpleName: isWarnEnabled(992) into MethodInvocation(993) at 1", "Move ExpressionStatement(898) into Block(1001) at 0", "Insert QualifiedName: Ftp.LOG(1230) into MethodInvocation(1232) at 0", "Insert SimpleName: isInfoEnabled(1231) into MethodInvocation(1232) at 1", "Insert QualifiedName: Ftp.LOG(338) into MethodInvocation(340) at 0", "Insert SimpleName: isInfoEnabled(339) into MethodInvocation(340) at 1", "Insert ParenthesizedExpression(395) into InfixExpression: &&(400) at 0", "Insert ParenthesizedExpression(399) into InfixExpression: &&(400) at 1", "Move ExpressionStatement(378) into Block(410) at 0", "Insert QualifiedName: Ftp.LOG(430) into MethodInvocation(432) at 0", "Insert SimpleName: isInfoEnabled(431) into MethodInvocation(432) at 1", "Insert QualifiedName: Ftp.LOG(460) into MethodInvocation(462) at 0", "Insert SimpleName: isWarnEnabled(461) into MethodInvocation(462) at 1", "Move ExpressionStatement(431) into Block(474) at 0", "Insert QualifiedName: Ftp.LOG(487) into MethodInvocation(489) at 0", "Insert SimpleName: isInfoEnabled(488) into MethodInvocation(489) at 1", "Insert QualifiedName: Ftp.LOG(511) into MethodInvocation(513) at 0", "Insert SimpleName: isWarnEnabled(512) into MethodInvocation(513) at 1", "Move ExpressionStatement(466) into Block(521) at 0", "Insert QualifiedName: Ftp.LOG(545) into MethodInvocation(547) at 0", "Insert SimpleName: isWarnEnabled(546) into MethodInvocation(547) at 1", "Move ExpressionStatement(495) into Block(555) at 0", "Insert QualifiedName: Ftp.LOG(568) into MethodInvocation(570) at 0", "Insert SimpleName: isInfoEnabled(569) into MethodInvocation(570) at 1", "Insert MethodInvocation(620) into IfStatement(631) at 0", "Insert Block(630) into IfStatement(631) at 1", "Insert MethodInvocation(644) into IfStatement(655) at 0", "Insert Block(654) into IfStatement(655) at 1", "Insert IfStatement(676) into Block(692) at 0", "Insert QualifiedName: Ftp.LOG(699) into MethodInvocation(701) at 0", "Insert SimpleName: isInfoEnabled(700) into MethodInvocation(701) at 1", "Insert QualifiedName: Ftp.LOG(756) into MethodInvocation(758) at 0", "Insert SimpleName: isInfoEnabled(757) into MethodInvocation(758) at 1", "Insert QualifiedName: Ftp.LOG(783) into MethodInvocation(785) at 0", "Insert SimpleName: isInfoEnabled(784) into MethodInvocation(785) at 1", "Insert SimpleName: LogUtil(824) into MethodInvocation(827) at 0", "Update SimpleName: toString(740) to getWarnStream", "Move SimpleName: toString(740) into MethodInvocation(827) at 1", "Insert QualifiedName: ftp.LOG(826) into MethodInvocation(827) at 2", "Insert QualifiedName: ftp.followTalk(394) into ParenthesizedExpression(395) at 0", "Insert MethodInvocation(398) into ParenthesizedExpression(399) at 0", "Insert QualifiedName: Ftp.LOG(618) into MethodInvocation(620) at 0", "Insert SimpleName: isWarnEnabled(619) into MethodInvocation(620) at 1", "Move ExpressionStatement(558) into Block(630) at 0", "Insert QualifiedName: Ftp.LOG(642) into MethodInvocation(644) at 0", "Insert SimpleName: isWarnEnabled(643) into MethodInvocation(644) at 1", "Move ExpressionStatement(577) into Block(654) at 0", "Insert MethodInvocation(667) into IfStatement(676) at 0", "Insert Block(675) into IfStatement(676) at 1", "Insert QualifiedName: Ftp.LOG(396) into MethodInvocation(398) at 0", "Insert SimpleName: isInfoEnabled(397) into MethodInvocation(398) at 1", "Insert QualifiedName: Ftp.LOG(665) into MethodInvocation(667) at 0", "Insert SimpleName: isWarnEnabled(666) into MethodInvocation(667) at 1", "Move ExpressionStatement(593) into Block(675) at 0", "Delete QualifiedName: ftp.followTalk(318)", "Delete QualifiedName: ftp.followTalk(369)", "Delete QualifiedName: ftp.followTalk(396)", "Delete QualifiedName: ftp.followTalk(441)", "Delete QualifiedName: ftp.followTalk(505)", "Delete QualifiedName: ftp.followTalk(614)", "Delete IfStatement(620)", "Delete QualifiedName: ftp.followTalk(664)", "Delete QualifiedName: ftp.followTalk(684)", "Delete QualifiedName: ftp.LOG(734)", "Delete StringLiteral: \"   \"(736)", "Delete SimpleName: stes(737)", "Delete SimpleName: i(738)", "Delete ArrayAccess(739)", "Delete MethodInvocation(741)", "Delete InfixExpression: +(742)", "Delete SimpleName: StackTraceElement(715)", "Delete SimpleType: StackTraceElement(716)", "Delete SimpleName: stes(717)", "Delete Dimension(718)", "Delete SimpleName: e(719)", "Delete SimpleName: getStackTrace(720)", "Delete MethodInvocation(721)", "Delete VariableDeclarationFragment(722)", "Delete VariableDeclarationStatement(723)", "Delete PrimitiveType: int(724)", "Delete SimpleName: i(725)", "Delete NumberLiteral: 0(726)", "Delete VariableDeclarationFragment(727)", "Delete VariableDeclarationExpression(728)", "Delete SimpleName: i(729)", "Delete QualifiedName: stes.length(730)", "Delete InfixExpression: <(731)", "Delete SimpleName: i(732)", "Delete PostfixExpression: ++(733)", "Delete Block(745)", "Delete ForStatement(746)", "Delete QualifiedName: ftp.followTalk(747)", "Delete QualifiedName: ftp.followTalk(876)", "Delete QualifiedName: ftp.followTalk(1119)", "Delete Block(1199)", "Delete CatchClause(1200)"]}}, {"PrintCommandListener_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS ReturnStatement to Block at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: __logger to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: __logger to MethodInvocation at 0", "INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: __logger to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to CatchClause at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"PrintCommandListener_diff": {"operations": ["Insert IfStatement(134) into Block(171) at 0", "Insert PrefixExpression: !(131) into IfStatement(134) at 0", "Insert Block(133) into IfStatement(134) at 1", "Insert Block(81) into CatchClause(82) at 1", "Insert Block(114) into CatchClause(115) at 1", "Insert MethodInvocation(130) into PrefixExpression: !(131) at 0", "Insert ReturnStatement(132) into Block(133) at 0", "Insert IfStatement(80) into Block(81) at 0", "Insert IfStatement(113) into Block(114) at 0", "Insert SimpleName: __logger(128) into MethodInvocation(130) at 0", "Insert SimpleName: isInfoEnabled(129) into MethodInvocation(130) at 1", "Insert MethodInvocation(71) into IfStatement(80) at 0", "Move Block(76) into IfStatement(80) at 1", "Insert MethodInvocation(104) into IfStatement(113) at 0", "Move Block(104) into IfStatement(113) at 1", "Insert SimpleName: __logger(69) into MethodInvocation(71) at 0", "Insert SimpleName: isInfoEnabled(70) into MethodInvocation(71) at 1", "Insert SimpleName: __logger(102) into MethodInvocation(104) at 0", "Insert SimpleName: isInfoEnabled(103) into MethodInvocation(104) at 1"]}}, {"HttpResponse_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS QualifiedName: Http.LOG to MethodInvocation at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS QualifiedName: Http.LOG to MethodInvocation at 0", "INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"HttpResponse_diff": {"operations": ["Insert IfStatement(799) into Block(970) at 0", "Insert Block(396) into IfStatement(413) at 1", "Insert MethodInvocation(792) into IfStatement(799) at 0", "Insert Block(798) into IfStatement(799) at 1", "Insert IfStatement(395) into Block(396) at 0", "Insert QualifiedName: Http.LOG(790) into MethodInvocation(792) at 0", "Insert SimpleName: isTraceEnabled(791) into MethodInvocation(792) at 1", "Move ExpressionStatement(789) into Block(798) at 0", "Insert MethodInvocation(388) into IfStatement(395) at 0", "Move Block(391) into IfStatement(395) at 1", "Insert QualifiedName: Http.LOG(386) into MethodInvocation(388) at 0", "Insert SimpleName: isFatalEnabled(387) into MethodInvocation(388) at 1"]}}, {"DummySSLProtocolSocketFactory_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: isErrorEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"DummySSLProtocolSocketFactory_diff": {"operations": ["Insert IfStatement(113) into Block(121) at 0", "Insert MethodInvocation(103) into IfStatement(113) at 0", "Insert Block(112) into IfStatement(113) at 1", "Insert SimpleName: LOG(101) into MethodInvocation(103) at 0", "Insert SimpleName: isErrorEnabled(102) into MethodInvocation(103) at 1", "Move ExpressionStatement(108) into Block(112) at 0"]}}, {"Http_cluster": {"actions": [{"root": "INS IfStatement to Block at 18", "operations": ["INS IfStatement to Block at 18", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS IfStatement to Block at 2", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"Http_diff": {"operations": ["Insert IfStatement(463) into Block(464) at 18", "Insert MethodInvocation(456) into IfStatement(463) at 0", "Insert Block(462) into IfStatement(463) at 1", "Insert IfStatement(451) into Block(452) at 2", "Insert SimpleName: LOG(454) into MethodInvocation(456) at 0", "Insert SimpleName: isInfoEnabled(455) into MethodInvocation(456) at 1", "Move ExpressionStatement(453) into Block(462) at 0", "Insert MethodInvocation(442) into IfStatement(451) at 0", "Insert Block(450) into IfStatement(451) at 1", "Insert SimpleName: LOG(440) into MethodInvocation(442) at 0", "Insert SimpleName: isInfoEnabled(441) into MethodInvocation(442) at 1", "Move ExpressionStatement(446) into Block(450) at 0"]}}, {"HttpAuthenticationFactory_cluster": {"actions": [{"root": "INS Block to IfStatement at 1", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS IfStatement to Block at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"HttpAuthenticationFactory_diff": {"operations": ["Insert Block(227) into IfStatement(228) at 1", "Insert IfStatement(224) into Block(227) at 0", "Move ReturnStatement(221) into Block(227) at 1", "Insert IfStatement(282) into Block(297) at 2", "Insert MethodInvocation(217) into IfStatement(224) at 0", "Move Block(222) into IfStatement(224) at 1", "Insert MethodInvocation(273) into IfStatement(282) at 0", "Insert Block(281) into IfStatement(282) at 1", "Insert SimpleName: LOG(215) into MethodInvocation(217) at 0", "Insert SimpleName: isTraceEnabled(216) into MethodInvocation(217) at 1", "Insert SimpleName: LOG(271) into MethodInvocation(273) at 0", "Insert SimpleName: isTraceEnabled(272) into MethodInvocation(273) at 1", "Move ExpressionStatement(272) into Block(281) at 0"]}}, {"HttpBasicAuthentication_cluster": {"actions": [{"root": "INS IfStatement to Block at 7", "operations": ["INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS IfStatement to Block at 7", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 13", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 13"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS Block to CatchClause at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"HttpBasicAuthentication_diff": {"operations": ["Insert IfStatement(191) into Block(256) at 5", "Insert IfStatement(255) into Block(256) at 10", "Insert MethodInvocation(168) into IfStatement(191) at 0", "Insert Block(190) into IfStatement(191) at 1", "Insert MethodInvocation(246) into IfStatement(255) at 0", "Insert Block(254) into IfStatement(255) at 1", "Insert SimpleName: LOG(166) into MethodInvocation(168) at 0", "Insert SimpleName: isTraceEnabled(167) into MethodInvocation(168) at 1", "Move ExpressionStatement(138) into Block(190) at 0", "Move ExpressionStatement(165) into Block(190) at 1", "Move ExpressionStatement(186) into Block(190) at 2", "Insert SimpleName: LOG(244) into MethodInvocation(246) at 0", "Insert SimpleName: isTraceEnabled(245) into MethodInvocation(246) at 1", "Move ExpressionStatement(245) into Block(254) at 0", "Insert Block(416) into CatchClause(417) at 1", "Insert IfStatement(415) into Block(416) at 0", "Insert MethodInvocation(406) into IfStatement(415) at 0", "Move Block(401) into IfStatement(415) at 1", "Insert SimpleName: LOG(404) into MethodInvocation(406) at 0", "Insert SimpleName: isTraceEnabled(405) into MethodInvocation(406) at 1"]}}, {"PrefixURLFilter_cluster": {"actions": [{"root": "INS Block to IfStatement at 3", "operations": ["INS Block to IfStatement at 3"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"PrefixURLFilter_diff": {"operations": ["Insert Block(407) into IfStatement(408) at 2", "Insert IfStatement(405) into Block(406) at 0", "Insert MethodInvocation(394) into IfStatement(405) at 0", "Move Block(401) into IfStatement(405) at 1", "Insert SimpleName: LOG(392) into MethodInvocation(394) at 0", "Insert SimpleName: isInfoEnabled(393) into MethodInvocation(394) at 1", "Insert IfStatement(473) into Block(482) at 0", "Insert MethodInvocation(464) into IfStatement(473) at 0", "Insert Block(472) into IfStatement(473) at 1", "Insert SimpleName: LOG(462) into MethodInvocation(464) at 0", "Insert SimpleName: isFatalEnabled(463) into MethodInvocation(464) at 1", "Move ExpressionStatement(463) into Block(472) at 0"]}}, {"SuffixURLFilter_cluster": {"actions": [{"root": "INS Block to IfStatement at 3", "operations": ["INS Block to IfStatement at 3"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: isFatalEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"SuffixURLFilter_diff": {"operations": ["Insert Block(674) into IfStatement(675) at 2", "Insert IfStatement(267) into Block(289) at 0", "Insert IfStatement(672) into Block(673) at 0", "Insert MethodInvocation(260) into IfStatement(267) at 0", "Insert Block(266) into IfStatement(267) at 1", "Insert MethodInvocation(661) into IfStatement(672) at 0", "Move Block(663) into IfStatement(672) at 1", "Insert IfStatement(722) into Block(731) at 0", "Insert SimpleName: LOG(258) into MethodInvocation(260) at 0", "Insert SimpleName: isWarnEnabled(259) into MethodInvocation(260) at 1", "Move ExpressionStatement(262) into Block(266) at 0", "Insert SimpleName: LOG(659) into MethodInvocation(661) at 0", "Insert SimpleName: isInfoEnabled(660) into MethodInvocation(661) at 1", "Insert MethodInvocation(713) into IfStatement(722) at 0", "Insert Block(721) into IfStatement(722) at 1", "Insert SimpleName: LOG(711) into MethodInvocation(713) at 0", "Insert SimpleName: isFatalEnabled(712) into MethodInvocation(713) at 1", "Move ExpressionStatement(707) into Block(721) at 0"]}}, {"HttpBase_cluster": {"actions": [{"root": "INS Block to MethodDeclaration at 3", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: logger to MethodInvocation at 0", "INS Block to MethodDeclaration at 3", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS SimpleName: LOGGER to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOGGER to MethodInvocation at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: logger to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS Block to CatchClause at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS SimpleName: logger to MethodInvocation at 0", "INS IfStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: logger to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}]}}, {"HttpBase_diff": {"operations": ["Insert Block(1579) into MethodDeclaration(1580) at 3", "Insert IfStatement(1578) into Block(1579) at 0", "Insert IfStatement(1606) into Block(1646) at 0", "Insert Block(1360) into IfStatement(1361) at 1", "Insert MethodInvocation(1527) into IfStatement(1578) at 0", "Move Block(1553) into IfStatement(1578) at 1", "Insert MethodInvocation(1599) into IfStatement(1606) at 0", "Insert Block(1605) into IfStatement(1606) at 1", "Insert IfStatement(1359) into Block(1360) at 0", "Insert SimpleName: logger(1525) into MethodInvocation(1527) at 0", "Insert SimpleName: isInfoEnabled(1526) into MethodInvocation(1527) at 1", "Insert SimpleName: LOGGER(1597) into MethodInvocation(1599) at 0", "Insert SimpleName: isTraceEnabled(1598) into MethodInvocation(1599) at 1", "Move ExpressionStatement(1575) into Block(1605) at 0", "Insert MethodInvocation(1352) into IfStatement(1359) at 0", "Insert Block(1358) into IfStatement(1359) at 1", "Insert Block(558) into CatchClause(559) at 1", "Insert SimpleName: LOGGER(1350) into MethodInvocation(1352) at 0", "Insert SimpleName: isFatalEnabled(1351) into MethodInvocation(1352) at 1", "Move ExpressionStatement(1339) into Block(1358) at 0", "Insert IfStatement(557) into Block(558) at 0", "Insert MethodInvocation(546) into IfStatement(557) at 0", "Move Block(553) into IfStatement(557) at 1", "Insert SimpleName: logger(544) into MethodInvocation(546) at 0", "Insert SimpleName: isTraceEnabled(545) into MethodInvocation(546) at 1", "Insert IfStatement(776) into Block(787) at 0", "Insert MethodInvocation(767) into IfStatement(776) at 0", "Insert Block(775) into IfStatement(776) at 1", "Insert IfStatement(800) into Block(813) at 0", "Insert SimpleName: logger(765) into MethodInvocation(767) at 0", "Insert SimpleName: isTraceEnabled(766) into MethodInvocation(767) at 1", "Move ExpressionStatement(766) into Block(775) at 0", "Insert MethodInvocation(793) into IfStatement(800) at 0", "Insert Block(799) into IfStatement(800) at 1", "Insert SimpleName: logger(791) into MethodInvocation(793) at 0", "Insert SimpleName: isTraceEnabled(792) into MethodInvocation(793) at 1", "Move ExpressionStatement(785) into Block(799) at 0"]}}, {"RobotRulesParser_cluster": {"actions": [{"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: isFatalEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isFatalEnabled to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS Block to CatchClause at 1", "operations": ["INS Block to CatchClause at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"RobotRulesParser_diff": {"operations": ["Insert IfStatement(591) into Block(592) at 1", "Insert IfStatement(1267) into Block(1352) at 0", "Insert MethodInvocation(584) into IfStatement(591) at 0", "Insert Block(590) into IfStatement(591) at 1", "Insert IfStatement(623) into Block(624) at 1", "Insert MethodInvocation(1258) into IfStatement(1267) at 0", "Insert Block(1266) into IfStatement(1267) at 1", "Insert SimpleName: LOG(582) into MethodInvocation(584) at 0", "Insert SimpleName: isFatalEnabled(583) into MethodInvocation(584) at 1", "Move ExpressionStatement(586) into Block(590) at 0", "Insert MethodInvocation(613) into IfStatement(623) at 0", "Insert Block(622) into IfStatement(623) at 1", "Insert SimpleName: LOG(1256) into MethodInvocation(1258) at 0", "Insert SimpleName: isTraceEnabled(1257) into MethodInvocation(1258) at 1", "Move ExpressionStatement(1247) into Block(1266) at 0", "Insert SimpleName: LOG(611) into MethodInvocation(613) at 0", "Insert SimpleName: isFatalEnabled(612) into MethodInvocation(613) at 1", "Move ExpressionStatement(613) into Block(622) at 0", "Insert IfStatement(1338) into Block(1343) at 0", "Insert MethodInvocation(1325) into IfStatement(1338) at 0", "Insert Block(1337) into IfStatement(1338) at 1", "Insert Block(1060) into CatchClause(1061) at 1", "Insert SimpleName: LOG(1323) into MethodInvocation(1325) at 0", "Insert SimpleName: isInfoEnabled(1324) into MethodInvocation(1325) at 1", "Move ExpressionStatement(1313) into Block(1337) at 0", "Insert IfStatement(1059) into Block(1060) at 0", "Insert MethodInvocation(1050) into IfStatement(1059) at 0", "Move Block(1045) into IfStatement(1059) at 1", "Insert SimpleName: LOG(1048) into MethodInvocation(1050) at 0", "Insert SimpleName: isWarnEnabled(1049) into MethodInvocation(1050) at 1"]}}], "commit_stats": [{"total_files": 76, "deleted_files": 0, "testing": "False", "maintenance": "True", "build": "False"}]}