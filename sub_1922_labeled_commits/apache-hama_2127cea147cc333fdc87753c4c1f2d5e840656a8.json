{"application": "apache-hama", "csha": "2127cea147cc333fdc87753c4c1f2d5e840656a8", "files": [{"ExampleDriver_cluster": {"actions": [{"root": "UPDATE from \"multfiles\" to \"similarity\"", "operations": ["UPD StringLiteral: \"multfiles\" from \"multfiles\" to \"similarity\""]}, {"root": "UPDATE from \"file matrices multiplication.\" to \"Cosine Similarity Matrix.\"", "operations": ["UPD StringLiteral: \"file matrices multiplication.\" from \"file matrices multiplication.\" to \"Cosine Similarity Matrix.\""]}, {"root": "UPDATE from FileMatrixBlockMult to CosineSimilarityMatrix", "operations": ["UPD SimpleType: FileMatrixBlockMult from FileMatrixBlockMult to CosineSimilarityMatrix", "UPD SimpleName: FileMatrixBlockMult from FileMatrixBlockMult to CosineSimilarityMatrix"]}]}}, {"ExampleDriver_diff": {"operations": ["Update StringLiteral: \"multfiles\"(69) to \"similarity\"", "Update StringLiteral: \"file matrices multiplication.\"(73) to \"Cosine Similarity Matrix.\"", "Update SimpleType: FileMatrixBlockMult(71) to CosineSimilarityMatrix", "Update SimpleName: FileMatrixBlockMult(70) to CosineSimilarityMatrix"]}}, {"FileMatrixBlockMult_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL PackageDeclaration", "DEL TextElement: limitations under the License.", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: Copyright 2007 The Apache Software Foundation", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: See the License for the specific language governing permissions and", "DEL Javadoc", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TagElement", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL QualifiedName: org.apache.hama.examples", "DEL TextElement: Unless required by applicable law or agreed to in writing, software"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.commons.logging.Log"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.logging.LogFactory", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.fs.Path"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.HColumnDescriptor", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.HTableDescriptor", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.client.HBaseAdmin", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.DoubleWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.IntWritable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.MapWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapred.FileInputFormat", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapred.JobClient", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.mapred.JobConf"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapred.OutputCollector", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.mapred.Reporter"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapred.SequenceFileInputFormat", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.Constants", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.HamaConfiguration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.io.BlockID"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.io.BlockWritable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.mapred.CollectBlocksMap", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.mapred.CollectBlocksMapReduceBase"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.matrix.DenseMatrix"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.matrix.DenseVector"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.matrix.algebra.BlockMultiplyMap"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.matrix.algebra.BlockMultiplyReduce"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hama.util.JobManager"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hama.util.RandomVariable", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL InfixExpression: +", "DEL VariableDeclarationFragment", "DEL SimpleName: subVector", "DEL SimpleName: ROWS", "DEL SimpleType: HColumnDescriptor", "DEL VariableDeclarationStatement", "DEL SimpleType: String", "DEL SimpleType: IntWritable", "DEL SimpleType: HTableDescriptor", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL ExpressionStatement", "DEL SimpleName: LOG", "DEL SimpleName: println", "DEL SimpleName: MyMapper", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL SimpleName: row", "DEL VariableDeclarationFragment", "DEL SimpleType: HBaseAdmin", "DEL MethodInvocation", "DEL SimpleName: result", "DEL SimpleName: value", "DEL Modifier: final", "DEL SimpleName: COLUMNS", "DEL TagElement: @param", "DEL SimpleName: a", "DEL InfixExpression: <=", "DEL SimpleName: admin", "DEL SimpleType: DenseMatrix", "DEL SimpleName: b", "DEL SimpleName: startColumn", "DEL Modifier: static", "DEL SimpleName: Path", "DEL SimpleName: conf", "DEL ArrayType: String[]", "DEL SimpleType: DenseMatrix", "DEL QualifiedName: System.out", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL SimpleName: key", "DEL SimpleName: startColumn", "DEL SimpleType: BlockID", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: ARGS", "DEL SimpleName: DenseVector", "DEL ExpressionStatement", "DEL SimpleName: MapWritable", "DEL SimpleName: mColumns", "DEL SimpleName: a", "DEL SimpleName: RandomVariable", "DEL SimpleName: endColumn", "DEL PrimitiveType: int", "DEL SimpleName: initJob", "DEL VariableDeclarationFragment", "DEL SimpleName: IOException", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL ReturnStatement", "DEL Block", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL Modifier: static", "DEL Block", "DEL SimpleType: DenseMatrix", "DEL SimpleName: HamaConfiguration", "DEL SimpleName: Path", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL ParameterizedType: CollectBlocksMap<IntWritable,MapWritable>", "DEL Assignment: =", "DEL MethodDeclaration", "DEL InfixExpression: -", "DEL BooleanLiteral: true", "DEL SimpleName: jobConf", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL SimpleName: Integer", "DEL StringLiteral: \"result: \"", "DEL SimpleName: result", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: Override", "DEL SimpleName: getRows", "DEL SimpleName: mColumns", "DEL TagElement: @param", "DEL Assignment: =", "DEL SimpleName: desc", "DEL MethodInvocation", "DEL SimpleName: i", "DEL SimpleType: CollectBlocksMap", "DEL SimpleName: conf", "DEL Modifier: private", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleName: COLUMNS", "DEL SimpleName: desc", "DEL SimpleName: randMatrixPath", "DEL SimpleName: Path", "DEL SimpleName: endColumn", "DEL SimpleName: HColumnDescriptor", "DEL BooleanLiteral: false", "DEL SimpleName: result", "DEL SimpleName: desc", "DEL SimpleName: JobManager", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleName: collectionTable", "DEL SimpleType: Path", "DEL SimpleName: mColumns", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: getPath", "DEL SimpleName: collect", "DEL SimpleName: path", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL Dimension", "DEL SimpleName: result", "DEL SimpleName: blkRow", "DEL ForStatement", "DEL SimpleType: MyMapper", "DEL MethodInvocation", "DEL SimpleName: i", "DEL SimpleName: JobConf", "DEL SingleVariableDeclaration", "DEL SimpleName: value", "DEL SimpleType: Path", "DEL SimpleName: HTableDescriptor", "DEL SimpleName: b", "DEL ClassInstanceCreation", "DEL SimpleName: collectBlocksFromFile", "DEL SimpleType: BlockID", "DEL InfixExpression: <", "DEL Block", "DEL SimpleType: DenseVector", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Integer", "DEL SimpleName: res", "DEL SimpleName: addFamily", "DEL SimpleName: getEntries", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleType: HBaseAdmin", "DEL SimpleName: ARGS", "DEL SimpleName: JobConf", "DEL PrimitiveType: void", "DEL TypeDeclaration: class", "DEL PostfixExpression: ++", "DEL SimpleName: COLUMNS", "DEL SimpleType: SequenceFileInputFormat", "DEL SimpleName: jobConf", "DEL TagElement: @return", "DEL SimpleName: jobConf", "DEL SimpleName: initJob", "DEL SimpleName: jobConf", "DEL SimpleType: Path", "DEL NumberLiteral: 1", "DEL SimpleName: a", "DEL SimpleName: get", "DEL PrimitiveType: void", "DEL InfixExpression: +", "DEL VariableDeclarationStatement", "DEL FieldAccess", "DEL SimpleName: parseInt", "DEL InfixExpression: *", "DEL SimpleName: ROWS", "DEL ClassInstanceCreation", "DEL SimpleName: path", "DEL NumberLiteral: 3", "DEL TextElement:  the path of matrix B", "DEL SimpleName: Reporter", "DEL Modifier: public", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: result", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleType: String", "DEL SimpleName: BlockWritable", "DEL ExpressionStatement", "DEL SimpleName: MapWritable", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL VariableDeclarationExpression", "DEL SimpleName: get", "DEL SimpleName: parseInt", "DEL SimpleName: BLOCKSIZE", "DEL SimpleType: FileMatrixBlockMult", "DEL SimpleName: FileMatrixBlockMult", "DEL SimpleName: JobClient", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL TextElement:  the result C", "DEL Block", "DEL SimpleName: SequenceFileInputFormat", "DEL TypeLiteral", "DEL InfixExpression: <", "DEL SimpleName: output", "DEL VariableDeclarationFragment", "DEL SimpleName: value", "DEL SimpleName: collectBlocksFromFile", "DEL TypeLiteral", "DEL SimpleName: i", "DEL SimpleName: initJob", "DEL ClassInstanceCreation", "DEL SimpleName: collectionTable", "DEL SimpleName: IntWritable", "DEL SimpleName: set", "DEL SimpleName: get", "DEL InfixExpression: -", "DEL SimpleName: jobConf", "DEL SimpleName: b", "DEL SimpleName: a", "DEL SimpleType: HamaConfiguration", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL SimpleName: ARGS", "DEL SimpleName: DenseMatrix", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: b", "DEL SimpleName: DenseMatrix", "DEL SimpleName: getColumns", "DEL SimpleName: endColumn", "DEL FieldDeclaration", "DEL SimpleName: matMult", "DEL SimpleName: main", "DEL SimpleName: collectionTable", "DEL ExpressionStatement", "DEL SimpleName: ARGS", "DEL SimpleName: mBlockRowSize", "DEL SimpleName: get", "DEL SimpleName: reporter", "DEL SimpleName: BlockMultiplyReduce", "DEL SimpleName: i1", "DEL SimpleName: map", "DEL SimpleName: jobConf", "DEL SimpleName: Path", "DEL MethodInvocation", "DEL ParenthesizedExpression", "DEL SimpleName: row", "DEL TextElement: Collect blocks from sequence file,", "DEL QualifiedName: Constants.BLOCK", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL ThisExpression", "DEL VariableDeclarationFragment", "DEL TagElement", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL SimpleName: a", "DEL ClassInstanceCreation", "DEL SimpleName: blkRow", "DEL SimpleName: mBlockColSize", "DEL FieldDeclaration", "DEL SimpleName: mBlockColSize", "DEL SimpleName: matMult", "DEL ClassInstanceCreation", "DEL StringLiteral: \"multfiles [-m maps] [-r reduces] <seqfile1> <seqfile1> <blocks> <rows> <columns>\"", "DEL SimpleName: MapWritable", "DEL SimpleName: res", "DEL Modifier: private", "DEL SimpleName: Integer", "DEL VariableDeclarationStatement", "DEL SimpleName: result", "DEL PrimitiveType: int", "DEL SimpleType: BlockID", "DEL SimpleName: BLOCKSIZE", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleType: JobConf", "DEL SimpleName: collectionTable", "DEL SimpleName: getPath", "DEL SimpleType: MapWritable", "DEL SimpleName: i0", "DEL SimpleType: IntWritable", "DEL NumberLiteral: 1", "DEL Modifier: public", "DEL SimpleName: BlockMultiplyReduce", "DEL SimpleName: String", "DEL Javadoc", "DEL Modifier: static", "DEL ExpressionStatement", "DEL StringLiteral: \"Blocking MR job\"", "DEL SingleVariableDeclaration", "DEL SimpleType: BlockWritable", "DEL MethodDeclaration", "DEL SimpleType: BlockMultiplyMap", "DEL SimpleName: BlockID", "DEL QualifiedName: System.out", "DEL Assignment: =", "DEL CastExpression", "DEL SimpleName: conf", "DEL SimpleName: conf", "DEL StringLiteral: \"collect_\"", "DEL SimpleName: BlockMultiplyMap", "DEL MethodInvocation", "DEL SimpleName: setJobName", "DEL MethodDeclaration", "DEL SimpleName: collectBlocksFromFile", "DEL SimpleName: b", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL SimpleName: collectionTable", "DEL InfixExpression: /", "DEL SimpleName: COLUMNS", "DEL SimpleName: setMapperClass", "DEL Block", "DEL PrimitiveType: void", "DEL ExpressionStatement", "DEL SimpleName: HamaConfiguration", "DEL SimpleType: Path", "DEL SimpleName: jobConf", "DEL MethodInvocation", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: get", "DEL SimpleName: conf", "DEL DoStatement", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleType: DenseVector", "DEL PostfixExpression: ++", "DEL PrimitiveType: int", "DEL SimpleName: System", "DEL PrefixExpression: -", "DEL SimpleName: jobConf", "DEL ClassInstanceCreation", "DEL SimpleName: OutputCollector", "DEL QualifiedName: args.length", "DEL SimpleName: String", "DEL SimpleType: String", "DEL FieldDeclaration", "DEL SimpleType: IntWritable", "DEL SimpleName: value", "DEL VariableDeclarationStatement", "DEL SimpleName: res", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: FileMatrixBlockMult", "DEL SimpleName: i", "DEL SingleVariableDeclaration", "DEL MarkerAnnotation", "DEL SimpleName: BLOCKSIZE", "DEL TypeLiteral", "DEL Modifier: static", "DEL SimpleName: CollectBlocksMapReduceBase", "DEL SimpleName: println", "DEL TypeLiteral", "DEL InfixExpression: +", "DEL InfixExpression: -", "DEL SimpleName: DenseMatrix", "DEL VariableDeclarationFragment", "DEL SimpleName: result", "DEL SimpleType: MapWritable", "DEL VariableDeclarationStatement", "DEL SimpleName: MapWritable", "DEL SimpleName: setRow", "DEL MethodInvocation", "DEL SimpleName: args", "DEL SimpleName: IntWritable", "DEL SimpleName: output", "DEL SingleVariableDeclaration", "DEL SimpleName: addInputPath", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL SimpleName: jobConf", "DEL SimpleName: collectionTable", "DEL SimpleName: endColumn", "DEL SimpleType: HTableDescriptor", "DEL NumberLiteral: 4", "DEL SimpleName: endColumn", "DEL SimpleType: Log", "DEL ExpressionStatement", "DEL SimpleName: JobConf", "DEL VariableDeclarationFragment", "DEL SimpleType: OutputCollector", "DEL SimpleName: getName", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: res", "DEL MethodInvocation", "DEL SimpleName: ARGS", "DEL SimpleName: Path", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SimpleName: toBytes", "DEL SimpleName: BlockID", "DEL Modifier: private", "DEL TypeDeclaration: class", "DEL ExpressionStatement", "DEL Modifier: static", "DEL Block", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: HTableDescriptor", "DEL ExpressionStatement", "DEL SimpleName: result", "DEL SimpleType: MapWritable", "DEL SimpleName: path", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL SimpleType: AbstractExample", "DEL IfStatement", "DEL ClassInstanceCreation", "DEL SimpleType: IOException", "DEL FieldDeclaration", "DEL SimpleType: BlockMultiplyReduce", "DEL MethodInvocation", "DEL SimpleName: MapWritable", "DEL ThisExpression", "DEL SimpleName: HamaConfiguration", "DEL SimpleName: CollectBlocksMap", "DEL TypeLiteral", "DEL ExpressionStatement", "DEL SimpleName: args", "DEL InfixExpression: >=", "DEL NumberLiteral: 1", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleType: IOException", "DEL SimpleType: CollectBlocksMapReduceBase", "DEL SimpleName: jobConf", "DEL SimpleName: Path", "DEL MethodInvocation", "DEL SimpleName: BlockID", "DEL SimpleName: parseArgs", "DEL MethodInvocation", "DEL SimpleType: MapWritable", "DEL MethodInvocation", "DEL SimpleName: i", "DEL VariableDeclarationStatement", "DEL SimpleName: ROWS", "DEL SimpleName: jobConf", "DEL SingleVariableDeclaration", "DEL SimpleName: get", "DEL Modifier: private", "DEL SimpleName: setJobName", "DEL SimpleName: getLog", "DEL SimpleName: Path", "DEL SimpleName: DoubleWritable", "DEL SimpleName: key", "DEL SimpleType: Path", "DEL Modifier: static", "DEL ExpressionStatement", "DEL SimpleName: IntWritable", "DEL Assignment: =", "DEL FieldDeclaration", "DEL ExpressionStatement", "DEL SimpleName: HBaseAdmin", "DEL SimpleName: i", "DEL PrimitiveType: int", "DEL ClassInstanceCreation", "DEL SimpleName: conf", "DEL Assignment: =", "DEL MethodInvocation", "DEL ParameterizedType: OutputCollector<BlockID,MapWritable>", "DEL SimpleName: i", "DEL MethodInvocation", "DEL SimpleName: Log", "DEL SimpleName: endColumn", "DEL MethodDeclaration", "DEL PrimitiveType: boolean", "DEL StringLiteral: \" by \"", "DEL TypeLiteral", "DEL SimpleType: Reporter", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL SimpleName: ROWS", "DEL MethodInvocation", "DEL SimpleName: b", "DEL SimpleName: createTable", "DEL Modifier: static", "DEL SimpleType: DenseMatrix", "DEL Block", "DEL SimpleName: i1", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL SimpleName: MyMapper", "DEL TypeLiteral", "DEL VariableDeclarationFragment", "DEL SimpleName: LogFactory", "DEL SimpleType: HamaConfiguration", "DEL SimpleType: Path", "DEL SimpleName: i0", "DEL SimpleName: startColumn", "DEL SimpleName: key", "DEL SimpleName: runJob", "DEL SimpleType: JobConf", "DEL TagElement: @throws", "DEL SimpleName: value", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleType: HamaConfiguration", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: execute", "DEL SimpleType: DoubleWritable", "DEL MethodInvocation", "DEL SimpleName: startColumn", "DEL NumberLiteral: 5", "DEL SimpleName: DenseMatrix", "DEL SimpleName: DenseVector", "DEL SimpleName: collectionTable", "DEL SimpleName: setInputFormat", "DEL SimpleName: exit", "DEL SimpleName: FileInputFormat", "DEL SimpleName: MyMapper", "DEL SimpleType: JobConf", "DEL MethodInvocation", "DEL SimpleName: parseInt", "DEL SimpleName: BlockMultiplyMap", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleType: MapWritable", "DEL SimpleType: Path", "DEL MethodInvocation", "DEL StringLiteral: \"multiplication MR job : \"", "DEL ExpressionStatement", "DEL Modifier: private", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL SimpleName: JobConf", "DEL NumberLiteral: 0", "DEL TextElement:  the path of matrix A", "DEL SimpleName: subVector", "DEL SimpleName: admin", "DEL ExpressionStatement", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL SimpleType: JobConf", "DEL NumberLiteral: 2", "DEL SimpleName: i", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: AbstractExample", "DEL NumberLiteral: 1", "DEL ExpressionStatement", "DEL SimpleName: jobConf", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL SimpleName: b", "DEL SimpleType: IOException", "DEL ExpressionStatement", "DEL Modifier: static", "DEL SimpleName: HBaseAdmin", "DEL SimpleName: Bytes", "DEL SimpleType: IOException", "DEL VariableDeclarationStatement"]}]}}, {"FileMatrixBlockMult_diff": {"operations": ["Delete TextElement: Copyright 2007 The Apache Software Foundation(0)", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(1)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(2)", "Delete TextElement: distributed with this work for additional information(3)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(4)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(5)", "Delete TextElement: \"License\"); you may not use this file except in compliance(6)", "Delete TextElement: with the License.  You may obtain a copy of the License at(7)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(8)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(9)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(10)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(11)", "Delete TextElement: See the License for the specific language governing permissions and(12)", "Delete TextElement: limitations under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.hama.examples(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.IOException(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.commons.logging.Log(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.commons.logging.LogFactory(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.hadoop.fs.Path(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.hadoop.hbase.HColumnDescriptor(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: org.apache.hadoop.hbase.HTableDescriptor(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.hadoop.hbase.client.HBaseAdmin(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.hadoop.io.DoubleWritable(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.hadoop.io.IntWritable(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.hadoop.io.MapWritable(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.hadoop.mapred.FileInputFormat(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.apache.hadoop.mapred.JobClient(42)", "Delete ImportDeclaration(43)", "Delete QualifiedName: org.apache.hadoop.mapred.JobConf(44)", "Delete ImportDeclaration(45)", "Delete QualifiedName: org.apache.hadoop.mapred.OutputCollector(46)", "Delete ImportDeclaration(47)", "Delete QualifiedName: org.apache.hadoop.mapred.Reporter(48)", "Delete ImportDeclaration(49)", "Delete QualifiedName: org.apache.hadoop.mapred.SequenceFileInputFormat(50)", "Delete ImportDeclaration(51)", "Delete QualifiedName: org.apache.hama.Constants(52)", "Delete ImportDeclaration(53)", "Delete QualifiedName: org.apache.hama.HamaConfiguration(54)", "Delete ImportDeclaration(55)", "Delete QualifiedName: org.apache.hama.io.BlockID(56)", "Delete ImportDeclaration(57)", "Delete QualifiedName: org.apache.hama.io.BlockWritable(58)", "Delete ImportDeclaration(59)", "Delete QualifiedName: org.apache.hama.mapred.CollectBlocksMap(60)", "Delete ImportDeclaration(61)", "Delete QualifiedName: org.apache.hama.mapred.CollectBlocksMapReduceBase(62)", "Delete ImportDeclaration(63)", "Delete QualifiedName: org.apache.hama.matrix.DenseMatrix(64)", "Delete ImportDeclaration(65)", "Delete QualifiedName: org.apache.hama.matrix.DenseVector(66)", "Delete ImportDeclaration(67)", "Delete QualifiedName: org.apache.hama.matrix.algebra.BlockMultiplyMap(68)", "Delete ImportDeclaration(69)", "Delete QualifiedName: org.apache.hama.matrix.algebra.BlockMultiplyReduce(70)", "Delete ImportDeclaration(71)", "Delete QualifiedName: org.apache.hama.util.JobManager(72)", "Delete ImportDeclaration(73)", "Delete QualifiedName: org.apache.hama.util.RandomVariable(74)", "Delete ImportDeclaration(75)", "Delete Modifier: public(76)", "Delete SimpleName: FileMatrixBlockMult(77)", "Delete SimpleName: AbstractExample(78)", "Delete SimpleType: AbstractExample(79)", "Delete Modifier: final(80)", "Delete Modifier: static(81)", "Delete SimpleName: Log(82)", "Delete SimpleType: Log(83)", "Delete SimpleName: LOG(84)", "Delete SimpleName: LogFactory(85)", "Delete SimpleName: getLog(86)", "Delete SimpleName: FileMatrixBlockMult(87)", "Delete SimpleType: FileMatrixBlockMult(88)", "Delete TypeLiteral(89)", "Delete SimpleName: getName(90)", "Delete MethodInvocation(91)", "Delete MethodInvocation(92)", "Delete VariableDeclarationFragment(93)", "Delete FieldDeclaration(94)", "Delete Modifier: private(95)", "Delete Modifier: static(96)", "Delete PrimitiveType: int(97)", "Delete SimpleName: BLOCKSIZE(98)", "Delete VariableDeclarationFragment(99)", "Delete FieldDeclaration(100)", "Delete Modifier: private(101)", "Delete Modifier: static(102)", "Delete PrimitiveType: int(103)", "Delete SimpleName: ROWS(104)", "Delete VariableDeclarationFragment(105)", "Delete FieldDeclaration(106)", "Delete Modifier: private(107)", "Delete Modifier: static(108)", "Delete PrimitiveType: int(109)", "Delete SimpleName: COLUMNS(110)", "Delete VariableDeclarationFragment(111)", "Delete FieldDeclaration(112)", "Delete TextElement: Collect blocks from sequence file,(113)", "Delete TagElement(114)", "Delete Javadoc(115)", "Delete Modifier: public(116)", "Delete Modifier: static(117)", "Delete SimpleName: MyMapper(118)", "Delete SimpleName: CollectBlocksMapReduceBase(119)", "Delete SimpleType: CollectBlocksMapReduceBase(120)", "Delete SimpleName: CollectBlocksMap(121)", "Delete SimpleType: CollectBlocksMap(122)", "Delete SimpleName: IntWritable(123)", "Delete SimpleType: IntWritable(124)", "Delete SimpleName: MapWritable(125)", "Delete SimpleType: MapWritable(126)", "Delete ParameterizedType: CollectBlocksMap<IntWritable,MapWritable>(127)", "Delete Modifier: private(128)", "Delete SimpleName: MapWritable(129)", "Delete SimpleType: MapWritable(130)", "Delete SimpleName: value(131)", "Delete VariableDeclarationFragment(132)", "Delete FieldDeclaration(133)", "Delete SimpleName: Override(134)", "Delete MarkerAnnotation(135)", "Delete Modifier: public(136)", "Delete PrimitiveType: void(137)", "Delete SimpleName: map(138)", "Delete SimpleName: IntWritable(139)", "Delete SimpleType: IntWritable(140)", "Delete SimpleName: key(141)", "Delete SingleVariableDeclaration(142)", "Delete SimpleName: MapWritable(143)", "Delete SimpleType: MapWritable(144)", "Delete SimpleName: value(145)", "Delete SingleVariableDeclaration(146)", "Delete SimpleName: OutputCollector(147)", "Delete SimpleType: OutputCollector(148)", "Delete SimpleName: BlockID(149)", "Delete SimpleType: BlockID(150)", "Delete SimpleName: MapWritable(151)", "Delete SimpleType: MapWritable(152)", "Delete ParameterizedType: OutputCollector<BlockID,MapWritable>(153)", "Delete SimpleName: output(154)", "Delete SingleVariableDeclaration(155)", "Delete SimpleName: Reporter(156)", "Delete SimpleType: Reporter(157)", "Delete SimpleName: reporter(158)", "Delete SingleVariableDeclaration(159)", "Delete SimpleName: IOException(160)", "Delete SimpleType: IOException(161)", "Delete PrimitiveType: int(162)", "Delete SimpleName: startColumn(163)", "Delete VariableDeclarationFragment(164)", "Delete SimpleName: endColumn(165)", "Delete VariableDeclarationFragment(166)", "Delete SimpleName: blkRow(167)", "Delete SimpleName: key(168)", "Delete SimpleName: get(169)", "Delete MethodInvocation(170)", "Delete SimpleName: mBlockRowSize(171)", "Delete InfixExpression: /(172)", "Delete VariableDeclarationFragment(173)", "Delete SimpleName: i(174)", "Delete NumberLiteral: 0(175)", "Delete VariableDeclarationFragment(176)", "Delete VariableDeclarationStatement(177)", "Delete ThisExpression(178)", "Delete SimpleName: value(179)", "Delete FieldAccess(180)", "Delete SimpleName: value(181)", "Delete Assignment: =(182)", "Delete ExpressionStatement(183)", "Delete SimpleName: startColumn(184)", "Delete SimpleName: i(185)", "Delete SimpleName: mBlockColSize(186)", "Delete InfixExpression: *(187)", "Delete Assignment: =(188)", "Delete ExpressionStatement(189)", "Delete SimpleName: endColumn(190)", "Delete SimpleName: startColumn(191)", "Delete SimpleName: mBlockColSize(192)", "Delete InfixExpression: +(193)", "Delete NumberLiteral: 1(194)", "Delete InfixExpression: -(195)", "Delete Assignment: =(196)", "Delete ExpressionStatement(197)", "Delete SimpleName: endColumn(198)", "Delete SimpleName: mColumns(199)", "Delete InfixExpression: >=(200)", "Delete SimpleName: endColumn(201)", "Delete SimpleName: mColumns(202)", "Delete NumberLiteral: 1(203)", "Delete InfixExpression: -(204)", "Delete Assignment: =(205)", "Delete ExpressionStatement(206)", "Delete IfStatement(207)", "Delete SimpleName: output(208)", "Delete SimpleName: collect(209)", "Delete SimpleName: BlockID(210)", "Delete SimpleType: BlockID(211)", "Delete SimpleName: blkRow(212)", "Delete SimpleName: i(213)", "Delete ClassInstanceCreation(214)", "Delete SimpleName: subVector(215)", "Delete SimpleName: key(216)", "Delete SimpleName: get(217)", "Delete MethodInvocation(218)", "Delete SimpleName: startColumn(219)", "Delete SimpleName: endColumn(220)", "Delete MethodInvocation(221)", "Delete MethodInvocation(222)", "Delete ExpressionStatement(223)", "Delete SimpleName: i(224)", "Delete PostfixExpression: ++(225)", "Delete ExpressionStatement(226)", "Delete Block(227)", "Delete SimpleName: endColumn(228)", "Delete SimpleName: mColumns(229)", "Delete NumberLiteral: 1(230)", "Delete InfixExpression: -(231)", "Delete ParenthesizedExpression(232)", "Delete InfixExpression: <(233)", "Delete DoStatement(234)", "Delete Block(235)", "Delete MethodDeclaration(236)", "Delete Modifier: private(237)", "Delete SimpleName: MapWritable(238)", "Delete SimpleType: MapWritable(239)", "Delete SimpleName: subVector(240)", "Delete PrimitiveType: int(241)", "Delete SimpleName: row(242)", "Delete SingleVariableDeclaration(243)", "Delete PrimitiveType: int(244)", "Delete SimpleName: i0(245)", "Delete SingleVariableDeclaration(246)", "Delete PrimitiveType: int(247)", "Delete SimpleName: i1(248)", "Delete SingleVariableDeclaration(249)", "Delete SimpleName: DenseVector(250)", "Delete SimpleType: DenseVector(251)", "Delete SimpleName: res(252)", "Delete SimpleName: DenseVector(253)", "Delete SimpleType: DenseVector(254)", "Delete ClassInstanceCreation(255)", "Delete VariableDeclarationFragment(256)", "Delete VariableDeclarationStatement(257)", "Delete SimpleName: res(258)", "Delete SimpleName: setRow(259)", "Delete SimpleName: row(260)", "Delete MethodInvocation(261)", "Delete ExpressionStatement(262)", "Delete PrimitiveType: int(263)", "Delete SimpleName: i(264)", "Delete SimpleName: i0(265)", "Delete VariableDeclarationFragment(266)", "Delete VariableDeclarationExpression(267)", "Delete SimpleName: i(268)", "Delete SimpleName: i1(269)", "Delete InfixExpression: <=(270)", "Delete SimpleName: i(271)", "Delete PostfixExpression: ++(272)", "Delete SimpleName: res(273)", "Delete SimpleName: set(274)", "Delete SimpleName: i(275)", "Delete SimpleName: DoubleWritable(276)", "Delete SimpleType: DoubleWritable(277)", "Delete ThisExpression(278)", "Delete SimpleName: value(279)", "Delete FieldAccess(280)", "Delete SimpleName: get(281)", "Delete SimpleName: IntWritable(282)", "Delete SimpleType: IntWritable(283)", "Delete SimpleName: i(284)", "Delete ClassInstanceCreation(285)", "Delete MethodInvocation(286)", "Delete CastExpression(287)", "Delete ParenthesizedExpression(288)", "Delete SimpleName: get(289)", "Delete MethodInvocation(290)", "Delete MethodInvocation(291)", "Delete ExpressionStatement(292)", "Delete Block(293)", "Delete ForStatement(294)", "Delete SimpleName: res(295)", "Delete SimpleName: getEntries(296)", "Delete MethodInvocation(297)", "Delete ReturnStatement(298)", "Delete Block(299)", "Delete MethodDeclaration(300)", "Delete TypeDeclaration: class(301)", "Delete SimpleName: a(302)", "Delete TextElement:  the path of matrix A(303)", "Delete TagElement: @param(304)", "Delete SimpleName: b(305)", "Delete TextElement:  the path of matrix B(306)", "Delete TagElement: @param(307)", "Delete TextElement:  the result C(308)", "Delete TagElement: @return(309)", "Delete SimpleName: IOException(310)", "Delete TagElement: @throws(311)", "Delete Javadoc(312)", "Delete Modifier: private(313)", "Delete Modifier: static(314)", "Delete SimpleName: DenseMatrix(315)", "Delete SimpleType: DenseMatrix(316)", "Delete SimpleName: matMult(317)", "Delete SimpleName: Path(318)", "Delete SimpleType: Path(319)", "Delete SimpleName: a(320)", "Delete SingleVariableDeclaration(321)", "Delete SimpleName: Path(322)", "Delete SimpleType: Path(323)", "Delete SimpleName: b(324)", "Delete SingleVariableDeclaration(325)", "Delete SimpleName: IOException(326)", "Delete SimpleType: IOException(327)", "Delete SimpleName: HamaConfiguration(328)", "Delete SimpleType: HamaConfiguration(329)", "Delete SimpleName: conf(330)", "Delete SimpleName: HamaConfiguration(331)", "Delete SimpleType: HamaConfiguration(332)", "Delete ClassInstanceCreation(333)", "Delete VariableDeclarationFragment(334)", "Delete VariableDeclarationStatement(335)", "Delete SimpleName: HBaseAdmin(336)", "Delete SimpleType: HBaseAdmin(337)", "Delete SimpleName: admin(338)", "Delete SimpleName: HBaseAdmin(339)", "Delete SimpleType: HBaseAdmin(340)", "Delete SimpleName: conf(341)", "Delete ClassInstanceCreation(342)", "Delete VariableDeclarationFragment(343)", "Delete VariableDeclarationStatement(344)", "Delete SimpleName: String(345)", "Delete SimpleType: String(346)", "Delete SimpleName: collectionTable(347)", "Delete StringLiteral: \"collect_\"(348)", "Delete SimpleName: RandomVariable(349)", "Delete SimpleName: randMatrixPath(350)", "Delete MethodInvocation(351)", "Delete InfixExpression: +(352)", "Delete VariableDeclarationFragment(353)", "Delete VariableDeclarationStatement(354)", "Delete SimpleName: HTableDescriptor(355)", "Delete SimpleType: HTableDescriptor(356)", "Delete SimpleName: desc(357)", "Delete SimpleName: HTableDescriptor(358)", "Delete SimpleType: HTableDescriptor(359)", "Delete SimpleName: collectionTable(360)", "Delete ClassInstanceCreation(361)", "Delete VariableDeclarationFragment(362)", "Delete VariableDeclarationStatement(363)", "Delete SimpleName: desc(364)", "Delete SimpleName: addFamily(365)", "Delete SimpleName: HColumnDescriptor(366)", "Delete SimpleType: HColumnDescriptor(367)", "Delete SimpleName: Bytes(368)", "Delete SimpleName: toBytes(369)", "Delete QualifiedName: Constants.BLOCK(370)", "Delete MethodInvocation(371)", "Delete ClassInstanceCreation(372)", "Delete MethodInvocation(373)", "Delete ExpressionStatement(374)", "Delete SimpleName: admin(375)", "Delete SimpleName: createTable(376)", "Delete SimpleName: desc(377)", "Delete MethodInvocation(378)", "Delete ExpressionStatement(379)", "Delete SimpleName: collectBlocksFromFile(380)", "Delete SimpleName: a(381)", "Delete BooleanLiteral: true(382)", "Delete SimpleName: collectionTable(383)", "Delete SimpleName: conf(384)", "Delete MethodInvocation(385)", "Delete ExpressionStatement(386)", "Delete SimpleName: collectBlocksFromFile(387)", "Delete SimpleName: b(388)", "Delete BooleanLiteral: false(389)", "Delete SimpleName: collectionTable(390)", "Delete SimpleName: conf(391)", "Delete MethodInvocation(392)", "Delete ExpressionStatement(393)", "Delete SimpleName: DenseMatrix(394)", "Delete SimpleType: DenseMatrix(395)", "Delete SimpleName: result(396)", "Delete SimpleName: DenseMatrix(397)", "Delete SimpleType: DenseMatrix(398)", "Delete SimpleName: conf(399)", "Delete SimpleName: ROWS(400)", "Delete SimpleName: COLUMNS(401)", "Delete ClassInstanceCreation(402)", "Delete VariableDeclarationFragment(403)", "Delete VariableDeclarationStatement(404)", "Delete SimpleName: JobConf(405)", "Delete SimpleType: JobConf(406)", "Delete SimpleName: jobConf(407)", "Delete SimpleName: JobConf(408)", "Delete SimpleType: JobConf(409)", "Delete SimpleName: conf(410)", "Delete ClassInstanceCreation(411)", "Delete VariableDeclarationFragment(412)", "Delete VariableDeclarationStatement(413)", "Delete SimpleName: jobConf(414)", "Delete SimpleName: setJobName(415)", "Delete StringLiteral: \"multiplication MR job : \"(416)", "Delete SimpleName: result(417)", "Delete SimpleName: getPath(418)", "Delete MethodInvocation(419)", "Delete InfixExpression: +(420)", "Delete MethodInvocation(421)", "Delete ExpressionStatement(422)", "Delete SimpleName: BlockMultiplyMap(423)", "Delete SimpleName: initJob(424)", "Delete SimpleName: collectionTable(425)", "Delete SimpleName: BlockMultiplyMap(426)", "Delete SimpleType: BlockMultiplyMap(427)", "Delete TypeLiteral(428)", "Delete SimpleName: BlockID(429)", "Delete SimpleType: BlockID(430)", "Delete TypeLiteral(431)", "Delete SimpleName: BlockWritable(432)", "Delete SimpleType: BlockWritable(433)", "Delete TypeLiteral(434)", "Delete SimpleName: jobConf(435)", "Delete MethodInvocation(436)", "Delete ExpressionStatement(437)", "Delete SimpleName: BlockMultiplyReduce(438)", "Delete SimpleName: initJob(439)", "Delete SimpleName: result(440)", "Delete SimpleName: getPath(441)", "Delete MethodInvocation(442)", "Delete SimpleName: BlockMultiplyReduce(443)", "Delete SimpleType: BlockMultiplyReduce(444)", "Delete TypeLiteral(445)", "Delete SimpleName: jobConf(446)", "Delete MethodInvocation(447)", "Delete ExpressionStatement(448)", "Delete SimpleName: JobManager(449)", "Delete SimpleName: execute(450)", "Delete SimpleName: jobConf(451)", "Delete SimpleName: result(452)", "Delete MethodInvocation(453)", "Delete ExpressionStatement(454)", "Delete SimpleName: result(455)", "Delete ReturnStatement(456)", "Delete Block(457)", "Delete MethodDeclaration(458)", "Delete Modifier: public(459)", "Delete Modifier: static(460)", "Delete PrimitiveType: void(461)", "Delete SimpleName: main(462)", "Delete SimpleName: String(463)", "Delete SimpleType: String(464)", "Delete Dimension(465)", "Delete ArrayType: String[](466)", "Delete SimpleName: args(467)", "Delete SingleVariableDeclaration(468)", "Delete SimpleName: IOException(469)", "Delete SimpleType: IOException(470)", "Delete QualifiedName: args.length(471)", "Delete NumberLiteral: 5(472)", "Delete InfixExpression: <(473)", "Delete QualifiedName: System.out(474)", "Delete SimpleName: println(475)", "Delete StringLiteral: \"multfiles [-m maps] [-r reduces] <seqfile1> <seqfile1> <blocks> <rows> <columns>\"(476)", "Delete MethodInvocation(477)", "Delete ExpressionStatement(478)", "Delete SimpleName: System(479)", "Delete SimpleName: exit(480)", "Delete NumberLiteral: 1(481)", "Delete PrefixExpression: -(482)", "Delete MethodInvocation(483)", "Delete ExpressionStatement(484)", "Delete Block(485)", "Delete SimpleName: parseArgs(486)", "Delete SimpleName: args(487)", "Delete MethodInvocation(488)", "Delete ExpressionStatement(489)", "Delete Block(490)", "Delete IfStatement(491)", "Delete SimpleName: Path(492)", "Delete SimpleType: Path(493)", "Delete SimpleName: a(494)", "Delete SimpleName: Path(495)", "Delete SimpleType: Path(496)", "Delete SimpleName: ARGS(497)", "Delete SimpleName: get(498)", "Delete NumberLiteral: 0(499)", "Delete MethodInvocation(500)", "Delete ClassInstanceCreation(501)", "Delete VariableDeclarationFragment(502)", "Delete VariableDeclarationStatement(503)", "Delete SimpleName: Path(504)", "Delete SimpleType: Path(505)", "Delete SimpleName: b(506)", "Delete SimpleName: Path(507)", "Delete SimpleType: Path(508)", "Delete SimpleName: ARGS(509)", "Delete SimpleName: get(510)", "Delete NumberLiteral: 1(511)", "Delete MethodInvocation(512)", "Delete ClassInstanceCreation(513)", "Delete VariableDeclarationFragment(514)", "Delete VariableDeclarationStatement(515)", "Delete SimpleName: BLOCKSIZE(516)", "Delete SimpleName: Integer(517)", "Delete SimpleName: parseInt(518)", "Delete SimpleName: ARGS(519)", "Delete SimpleName: get(520)", "Delete NumberLiteral: 2(521)", "Delete MethodInvocation(522)", "Delete MethodInvocation(523)", "Delete Assignment: =(524)", "Delete ExpressionStatement(525)", "Delete SimpleName: ROWS(526)", "Delete SimpleName: Integer(527)", "Delete SimpleName: parseInt(528)", "Delete SimpleName: ARGS(529)", "Delete SimpleName: get(530)", "Delete NumberLiteral: 3(531)", "Delete MethodInvocation(532)", "Delete MethodInvocation(533)", "Delete Assignment: =(534)", "Delete ExpressionStatement(535)", "Delete SimpleName: COLUMNS(536)", "Delete SimpleName: Integer(537)", "Delete SimpleName: parseInt(538)", "Delete SimpleName: ARGS(539)", "Delete SimpleName: get(540)", "Delete NumberLiteral: 4(541)", "Delete MethodInvocation(542)", "Delete MethodInvocation(543)", "Delete Assignment: =(544)", "Delete ExpressionStatement(545)", "Delete SimpleName: DenseMatrix(546)", "Delete SimpleType: DenseMatrix(547)", "Delete SimpleName: result(548)", "Delete SimpleName: matMult(549)", "Delete SimpleName: a(550)", "Delete SimpleName: b(551)", "Delete MethodInvocation(552)", "Delete VariableDeclarationFragment(553)", "Delete VariableDeclarationStatement(554)", "Delete QualifiedName: System.out(555)", "Delete SimpleName: println(556)", "Delete StringLiteral: \"result: \"(557)", "Delete SimpleName: result(558)", "Delete SimpleName: getRows(559)", "Delete MethodInvocation(560)", "Delete StringLiteral: \" by \"(561)", "Delete SimpleName: result(562)", "Delete SimpleName: getColumns(563)", "Delete MethodInvocation(564)", "Delete InfixExpression: +(565)", "Delete MethodInvocation(566)", "Delete ExpressionStatement(567)", "Delete Block(568)", "Delete MethodDeclaration(569)", "Delete Modifier: private(570)", "Delete Modifier: static(571)", "Delete PrimitiveType: void(572)", "Delete SimpleName: collectBlocksFromFile(573)", "Delete SimpleName: Path(574)", "Delete SimpleType: Path(575)", "Delete SimpleName: path(576)", "Delete SingleVariableDeclaration(577)", "Delete PrimitiveType: boolean(578)", "Delete SimpleName: b(579)", "Delete SingleVariableDeclaration(580)", "Delete SimpleName: String(581)", "Delete SimpleType: String(582)", "Delete SimpleName: collectionTable(583)", "Delete SingleVariableDeclaration(584)", "Delete SimpleName: HamaConfiguration(585)", "Delete SimpleType: HamaConfiguration(586)", "Delete SimpleName: conf(587)", "Delete SingleVariableDeclaration(588)", "Delete SimpleName: IOException(589)", "Delete SimpleType: IOException(590)", "Delete SimpleName: JobConf(591)", "Delete SimpleType: JobConf(592)", "Delete SimpleName: jobConf(593)", "Delete SimpleName: JobConf(594)", "Delete SimpleType: JobConf(595)", "Delete SimpleName: conf(596)", "Delete ClassInstanceCreation(597)", "Delete VariableDeclarationFragment(598)", "Delete VariableDeclarationStatement(599)", "Delete SimpleName: jobConf(600)", "Delete SimpleName: setJobName(601)", "Delete StringLiteral: \"Blocking MR job\"(602)", "Delete SimpleName: path(603)", "Delete InfixExpression: +(604)", "Delete MethodInvocation(605)", "Delete ExpressionStatement(606)", "Delete SimpleName: jobConf(607)", "Delete SimpleName: setMapperClass(608)", "Delete SimpleName: MyMapper(609)", "Delete SimpleType: MyMapper(610)", "Delete TypeLiteral(611)", "Delete MethodInvocation(612)", "Delete ExpressionStatement(613)", "Delete SimpleName: jobConf(614)", "Delete SimpleName: setInputFormat(615)", "Delete SimpleName: SequenceFileInputFormat(616)", "Delete SimpleType: SequenceFileInputFormat(617)", "Delete TypeLiteral(618)", "Delete MethodInvocation(619)", "Delete ExpressionStatement(620)", "Delete SimpleName: FileInputFormat(621)", "Delete SimpleName: addInputPath(622)", "Delete SimpleName: jobConf(623)", "Delete SimpleName: path(624)", "Delete MethodInvocation(625)", "Delete ExpressionStatement(626)", "Delete SimpleName: MyMapper(627)", "Delete SimpleName: initJob(628)", "Delete SimpleName: collectionTable(629)", "Delete SimpleName: b(630)", "Delete SimpleName: BLOCKSIZE(631)", "Delete SimpleName: ROWS(632)", "Delete SimpleName: COLUMNS(633)", "Delete SimpleName: jobConf(634)", "Delete MethodInvocation(635)", "Delete ExpressionStatement(636)", "Delete SimpleName: JobClient(637)", "Delete SimpleName: runJob(638)", "Delete SimpleName: jobConf(639)", "Delete MethodInvocation(640)", "Delete ExpressionStatement(641)", "Delete Block(642)", "Delete MethodDeclaration(643)", "Delete TypeDeclaration: class(644)"]}}, {"AbstractMatrix_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: org.apache.hadoop.conf.Configurable to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: org.apache.hadoop.conf.Configuration to ImportDeclaration at 0"]}, {"root": "INS SimpleType: Configurable to TypeDeclaration: class at 4", "operations": ["INS SimpleType: Configurable to TypeDeclaration: class at 4", "INS SimpleName: Configurable to SimpleType: Configurable at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleName: alpha to VariableDeclarationFragment at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: conf to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: Configuration to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS Block to MethodDeclaration at 4", "INS SimpleType: Configuration to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: getConf to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: conf to ReturnStatement at 0"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV Modifier: private to FieldDeclaration at 0", "MOV Modifier: static to FieldDeclaration at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV SimpleType: Double to FieldDeclaration at 2"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "UPDATE from setAlpha to setConf", "operations": ["UPD SimpleName: setAlpha from setAlpha to setConf"]}, {"root": "INS VariableDeclarationStatement to Block at 9", "operations": ["INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: Float to ClassInstanceCreation at 0", "INS SimpleType: Float to VariableDeclarationStatement at 0", "INS SimpleName: Float to SimpleType: Float at 0", "INS SimpleName: Float to SimpleType: Float at 0", "INS SimpleName: f to VariableDeclarationFragment at 0", "INS SimpleName: alpha to ClassInstanceCreation at 1", "INS VariableDeclarationStatement to Block at 9", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from List to Configuration", "operations": ["UPD SimpleName: List from List to Configuration", "UPD SimpleName: Double from Double to Configuration"]}, {"root": "MOVE from SimpleType: Configuration", "operations": ["MOV SimpleName: List to SimpleType: Configuration at 0"]}, {"root": "MOVE from SimpleType: Configuration", "operations": ["MOV SimpleName: Double to SimpleType: Configuration at 0"]}, {"root": "INS SimpleType: Configuration to SingleVariableDeclaration at 0", "operations": ["INS SimpleName: Configuration to SimpleType: Configuration at 0", "INS SimpleType: Configuration to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: conf to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: conf to SingleVariableDeclaration at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: conf to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: conf to Assignment: = at 1", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: f to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: Float to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS StringLiteral: \"set.alpha\" to MethodInvocation at 2", "INS NumberLiteral: 1 to MethodInvocation at 3", "INS SimpleName: Float to SimpleType: Float at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV Assignment: = to ExpressionStatement at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getConfiguration to MethodInvocation at 1"]}, {"root": "UPDATE from setAlpha to setFloat", "operations": ["UPD SimpleName: setAlpha from setAlpha to setFloat"]}, {"root": "INS StringLiteral: \"set.alpha\" to MethodInvocation at 3", "operations": ["INS StringLiteral: \"set.alpha\" to MethodInvocation at 3"]}, {"root": "UPDATE from alpha to f", "operations": ["UPD SimpleName: alpha from alpha to f"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: f to MethodInvocation at 0", "INS SimpleName: doubleValue to MethodInvocation at 1"]}, {"root": "UPDATE from ScanMapper to job", "operations": ["UPD SimpleName: ScanMapper from ScanMapper to job"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: ScanMapper to MethodInvocation at 0"]}, {"root": "UPDATE from alpha to conf", "operations": ["UPD SimpleName: alpha from alpha to conf"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: size to MethodInvocation at 1", "MOV SimpleName: alpha to MethodInvocation at 0"]}, {"root": "UPDATE from size to getFloat", "operations": ["UPD SimpleName: size from size to getFloat"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: equals to MethodInvocation at 1", "INS NumberLiteral: 1 to ClassInstanceCreation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: alpha to MethodInvocation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Double to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: alpha to InfixExpression: * at 1", "operations": ["INS SimpleName: alpha to InfixExpression: * at 1"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL ParameterizedType: List<Double>", "DEL FieldDeclaration", "DEL SimpleType: Double", "DEL SimpleType: ArrayList", "DEL SimpleName: ArrayList", "DEL ParameterizedType: ArrayList<Double>", "DEL SimpleName: alpha", "DEL ClassInstanceCreation", "DEL SimpleType: List", "DEL VariableDeclarationFragment"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL InfixExpression: ==", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SimpleName: size"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: get", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SimpleName: alpha"]}, {"root": "DEL Modifier: static", "operations": ["DEL Modifier: static"]}, {"root": "DEL PrimitiveType: double", "operations": ["DEL PrimitiveType: double"]}, {"root": "DEL SimpleName: a", "operations": ["DEL SimpleName: a"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL ParameterizedType: ArrayList<Double>", "DEL SimpleName: ArrayList", "DEL SimpleType: ArrayList"]}, {"root": "DEL IfStatement", "operations": ["DEL ExpressionStatement", "DEL IfStatement", "DEL NumberLiteral: 0", "DEL InfixExpression: >", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: alpha", "DEL ExpressionStatement", "DEL SimpleName: a", "DEL MethodInvocation", "DEL SimpleName: add"]}]}}, {"AbstractMatrix_diff": {"operations": ["Insert ImportDeclaration(29) into CompilationUnit(2756) at 6", "Insert ImportDeclaration(31) into CompilationUnit(2756) at 7", "Insert QualifiedName: org.apache.hadoop.conf.Configurable(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: org.apache.hadoop.conf.Configuration(30) into ImportDeclaration(31) at 0", "Insert SimpleType: Configurable(1662) into TypeDeclaration: class(1901) at 4", "Insert FieldDeclaration(1670) into TypeDeclaration: class(1901) at 5", "Insert FieldDeclaration(1677) into TypeDeclaration: class(1901) at 6", "Insert MethodDeclaration(1867) into TypeDeclaration: class(1901) at 8", "Insert SimpleName: Configurable(1661) into SimpleType: Configurable(1662) at 0", "Move Modifier: private(1657) into FieldDeclaration(1670) at 0", "Move Modifier: static(1658) into FieldDeclaration(1670) at 1", "Move SimpleType: Double(1668) into FieldDeclaration(1670) at 2", "Insert VariableDeclarationFragment(1669) into FieldDeclaration(1670) at 3", "Insert Modifier: private(1671) into FieldDeclaration(1677) at 0", "Insert SimpleType: Configuration(1673) into FieldDeclaration(1677) at 1", "Insert VariableDeclarationFragment(1676) into FieldDeclaration(1677) at 2", "Insert MarkerAnnotation(1859) into MethodDeclaration(1867) at 0", "Insert Modifier: public(1860) into MethodDeclaration(1867) at 1", "Insert SimpleType: Configuration(1862) into MethodDeclaration(1867) at 2", "Insert SimpleName: getConf(1863) into MethodDeclaration(1867) at 3", "Insert Block(1866) into MethodDeclaration(1867) at 4", "Insert MarkerAnnotation(1869) into MethodDeclaration(1900) at 0", "Update SimpleName: setAlpha(1857) to setConf", "Insert VariableDeclarationStatement(2157) into Block(2224) at 9", "Insert SimpleName: alpha(1667) into VariableDeclarationFragment(1669) at 0", "Insert NullLiteral(1668) into VariableDeclarationFragment(1669) at 1", "Update SimpleName: List(1659) to Configuration", "Move SimpleName: List(1659) into SimpleType: Configuration(1673) at 0", "Insert SimpleName: conf(1674) into VariableDeclarationFragment(1676) at 0", "Insert NullLiteral(1675) into VariableDeclarationFragment(1676) at 1", "Insert SimpleName: Override(1858) into MarkerAnnotation(1859) at 0", "Update SimpleName: Double(1661) to Configuration", "Move SimpleName: Double(1661) into SimpleType: Configuration(1862) at 0", "Insert ReturnStatement(1865) into Block(1866) at 0", "Insert SimpleName: Override(1868) into MarkerAnnotation(1869) at 0", "Insert SimpleType: Configuration(1874) into SingleVariableDeclaration(1876) at 0", "Insert SimpleName: conf(1875) into SingleVariableDeclaration(1876) at 1", "Insert ExpressionStatement(1882) into Block(1899) at 0", "Insert VariableDeclarationStatement(1892) into Block(1899) at 1", "Insert ExpressionStatement(1898) into Block(1899) at 2", "Insert SimpleType: Float(2150) into VariableDeclarationStatement(2157) at 0", "Insert VariableDeclarationFragment(2156) into VariableDeclarationStatement(2157) at 1", "Insert SimpleName: conf(1864) into ReturnStatement(1865) at 0", "Insert SimpleName: Configuration(1873) into SimpleType: Configuration(1874) at 0", "Insert Assignment: =(1881) into ExpressionStatement(1882) at 0", "Insert SimpleType: Float(1884) into VariableDeclarationStatement(1892) at 0", "Insert VariableDeclarationFragment(1891) into VariableDeclarationStatement(1892) at 1", "Move Assignment: =(1873) into ExpressionStatement(1898) at 0", "Insert SimpleName: Float(2149) into SimpleType: Float(2150) at 0", "Insert SimpleName: f(2151) into VariableDeclarationFragment(2156) at 0", "Insert ClassInstanceCreation(2155) into VariableDeclarationFragment(2156) at 1", "Insert MethodInvocation(2160) into MethodInvocation(2164) at 0", "Update SimpleName: setAlpha(2132) to setFloat", "Insert StringLiteral: \"set.alpha\"(2162) into MethodInvocation(2164) at 2", "Update SimpleName: alpha(2133) to f", "Insert FieldAccess(1879) into Assignment: =(1881) at 0", "Insert SimpleName: conf(1880) into Assignment: =(1881) at 1", "Insert SimpleName: Float(1883) into SimpleType: Float(1884) at 0", "Insert SimpleName: f(1885) into VariableDeclarationFragment(1891) at 0", "Insert MethodInvocation(1890) into VariableDeclarationFragment(1891) at 1", "Insert MethodInvocation(1896) into Assignment: =(1897) at 1", "Insert SimpleType: Float(2153) into ClassInstanceCreation(2155) at 0", "Insert SimpleName: alpha(2154) into ClassInstanceCreation(2155) at 1", "Update SimpleName: ScanMapper(2131) to job", "Move SimpleName: ScanMapper(2131) into MethodInvocation(2160) at 0", "Insert SimpleName: getConfiguration(2159) into MethodInvocation(2160) at 1", "Insert ThisExpression(1877) into FieldAccess(1879) at 0", "Insert SimpleName: conf(1878) into FieldAccess(1879) at 1", "Update SimpleName: alpha(1861) to conf", "Move SimpleName: alpha(1861) into MethodInvocation(1890) at 0", "Update SimpleName: size(1862) to getFloat", "Move SimpleName: size(1862) into MethodInvocation(1890) at 1", "Insert StringLiteral: \"set.alpha\"(1888) into MethodInvocation(1890) at 2", "Insert NumberLiteral: 1(1889) into MethodInvocation(1890) at 3", "Insert SimpleName: f(1894) into MethodInvocation(1896) at 0", "Insert SimpleName: doubleValue(1895) into MethodInvocation(1896) at 1", "Insert SimpleName: Float(2152) into SimpleType: Float(2153) at 0", "Insert MethodInvocation(1798) into IfStatement(1845) at 0", "Move SimpleName: alpha(1787) into MethodInvocation(1798) at 0", "Insert SimpleName: equals(1793) into MethodInvocation(1798) at 1", "Insert ClassInstanceCreation(1797) into MethodInvocation(1798) at 2", "Move SimpleType: Double(1870) into ClassInstanceCreation(1797) at 0", "Insert NumberLiteral: 1(1796) into ClassInstanceCreation(1797) at 1", "Insert SimpleName: alpha(1829) into InfixExpression: *(1830) at 1", "Delete SimpleType: List(1660)", "Delete SimpleType: Double(1662)", "Delete ParameterizedType: List<Double>(1663)", "Delete SimpleName: alpha(1664)", "Delete SimpleName: ArrayList(1665)", "Delete SimpleType: ArrayList(1666)", "Delete ParameterizedType: ArrayList<Double>(1669)", "Delete ClassInstanceCreation(1670)", "Delete VariableDeclarationFragment(1671)", "Delete FieldDeclaration(1672)", "Delete SimpleName: size(1788)", "Delete MethodInvocation(1789)", "Delete NumberLiteral: 0(1790)", "Delete InfixExpression: ==(1791)", "Delete SimpleName: alpha(1822)", "Delete SimpleName: get(1823)", "Delete NumberLiteral: 0(1824)", "Delete MethodInvocation(1825)", "Delete Modifier: static(1855)", "Delete PrimitiveType: double(1858)", "Delete SimpleName: a(1859)", "Delete SimpleName: ArrayList(1867)", "Delete SimpleType: ArrayList(1868)", "Delete ParameterizedType: ArrayList<Double>(1871)", "Delete ClassInstanceCreation(1872)", "Delete MethodInvocation(1863)", "Delete NumberLiteral: 0(1864)", "Delete InfixExpression: >(1865)", "Delete ExpressionStatement(1874)", "Delete IfStatement(1875)", "Delete SimpleName: alpha(1876)", "Delete SimpleName: add(1877)", "Delete SimpleName: a(1878)", "Delete MethodInvocation(1879)", "Delete ExpressionStatement(1880)"]}}], "commit_stats": [{"total_files": 5, "deleted_files": 1, "testing": "True", "maintenance": "False", "build": "False"}]}