{"application": "google-closure-compiler", "csha": "2403a087688d849cdf92adf01d8fbb9060436fba", "files": [{"Compiler_cluster": {"actions": [{"root": "INS Block to MethodDeclaration at 4", "operations": ["INS Block to MethodDeclaration at 4"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "DEL Block", "operations": ["DEL ReturnStatement", "DEL Block", "DEL SimpleName: dropForwardDeclarations", "DEL MethodInvocation", "DEL SimpleName: options", "DEL Block", "DEL IfStatement"]}]}}, {"Compiler_diff": {"operations": ["Insert Block(4554) into MethodDeclaration(4555) at 4", "Move ExpressionStatement(4559) into Block(4554) at 0", "Delete SimpleName: options(4549)", "Delete SimpleName: dropForwardDeclarations(4550)", "Delete MethodInvocation(4551)", "Delete ReturnStatement(4552)", "Delete Block(4553)", "Delete IfStatement(4554)", "Delete Block(4560)"]}}, {"CompilerOptions_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL InfixExpression: &&", "DEL QualifiedName: IncrementalCheckMode.CHECK_IJS", "DEL SimpleName: dropForwardDeclarations", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL Modifier: public", "DEL PrimitiveType: boolean", "DEL SimpleName: useNewTypeInference", "DEL Block", "DEL InfixExpression: ==", "DEL SimpleName: incrementalCheckMode"]}]}}, {"CompilerOptions_diff": {"operations": ["Delete Modifier: public(384)", "Delete PrimitiveType: boolean(385)", "Delete SimpleName: dropForwardDeclarations(386)", "Delete SimpleName: incrementalCheckMode(387)", "Delete QualifiedName: IncrementalCheckMode.CHECK_IJS(388)", "Delete InfixExpression: ==(389)", "Delete SimpleName: useNewTypeInference(390)", "Delete InfixExpression: &&(391)", "Delete ReturnStatement(392)", "Delete Block(393)", "Delete MethodDeclaration(394)"]}}, {"GlobalTypeInfo_cluster": {"actions": [{"root": "INS MethodInvocation to ClassInstanceCreation at 5", "operations": ["INS SimpleName: getOptions to MethodInvocation at 1", "INS SimpleName: inIncrementalCheckMode to MethodInvocation at 1", "INS SimpleName: compiler to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 5", "INS MethodInvocation to MethodInvocation at 0"]}]}}, {"GlobalTypeInfo_diff": {"operations": ["Insert MethodInvocation(319) into ClassInstanceCreation(320) at 5", "Insert MethodInvocation(317) into MethodInvocation(319) at 0", "Insert SimpleName: inIncrementalCheckMode(318) into MethodInvocation(319) at 1", "Insert SimpleName: compiler(315) into MethodInvocation(317) at 0", "Insert SimpleName: getOptions(316) into MethodInvocation(317) at 1"]}}, {"NewTypeInference_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 56", "operations": ["INS StringLiteral: \"Cannot use unresolved type {0}. Please include the type definition in your application.\" to MethodInvocation at 3", "INS SimpleName: CANNOT_USE_UNRESOLVED_TYPE to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 56", "INS SimpleName: warning to MethodInvocation at 1", "INS SimpleType: DiagnosticType to FieldDeclaration at 2", "INS Modifier: static to FieldDeclaration at 0", "INS SimpleName: DiagnosticType to SimpleType: DiagnosticType at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS StringLiteral: \"JSC_CANNOT_USE_UNRESOLVED_TYPE\" to MethodInvocation at 2", "INS SimpleName: DiagnosticType to MethodInvocation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 85", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS PrimitiveType: boolean to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: warnForUnresolvedTypes to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 85", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS ExpressionStatement to Block at 15", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: compiler to MethodInvocation at 0", "INS SimpleName: inIncrementalCheckMode to MethodInvocation at 1", "INS ExpressionStatement to Block at 15", "INS MethodInvocation to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: warnForUnresolvedTypes to FieldAccess at 1", "INS SimpleName: getOptions to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS QualifiedName: resultPair.type to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: resultType to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleType: JSType to VariableDeclarationStatement at 0", "INS SimpleName: JSType to SimpleType: JSType at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS ExpressionStatement to Block at 4", "INS SimpleName: resultType to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS SimpleName: warnings to MethodInvocation at 0", "INS SimpleName: JSError to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: CANNOT_USE_UNRESOLVED_TYPE to MethodInvocation at 3", "INS SimpleName: isUnresolved to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: resultType to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: resultType to MethodInvocation at 0", "INS SimpleName: make to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to IfStatement at 0", "INS QualifiedName: resultPair.type to Assignment: = at 0", "INS IfStatement to Block at 5", "INS FieldAccess to IfStatement at 0", "INS SimpleName: warnForUnresolvedTypes to FieldAccess at 1", "INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: expr to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: UNKNOWN to Assignment: = at 1", "INS SimpleName: add to MethodInvocation at 1"]}, {"root": "INS SimpleName: CANNOT_USE_UNRESOLVED_TYPE to ClassInstanceCreation at 5", "operations": ["INS SimpleName: CANNOT_USE_UNRESOLVED_TYPE to ClassInstanceCreation at 5"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: expr to MethodInvocation at 1", "MOV SimpleName: mayWarnAboutUnknownType to MethodInvocation at 0"]}, {"root": "INS SimpleName: resultType to MethodInvocation at 2", "operations": ["INS SimpleName: resultType to MethodInvocation at 2"]}, {"root": "INS SimpleName: resultType to MethodInvocation at 8", "operations": ["INS SimpleName: resultType to MethodInvocation at 8"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL QualifiedName: resultPair.type", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL QualifiedName: resultPair.type", "operations": ["DEL QualifiedName: resultPair.type"]}, {"root": "DEL QualifiedName: resultPair.type", "operations": ["DEL QualifiedName: resultPair.type"]}]}}, {"NewTypeInference_diff": {"operations": ["Insert FieldDeclaration(780) into TypeDeclaration: class(22135) at 56", "Insert FieldDeclaration(1122) into TypeDeclaration: class(22135) at 85", "Insert Modifier: static(769) into FieldDeclaration(780) at 0", "Insert Modifier: final(770) into FieldDeclaration(780) at 1", "Insert SimpleType: DiagnosticType(772) into FieldDeclaration(780) at 2", "Insert VariableDeclarationFragment(779) into FieldDeclaration(780) at 3", "Insert Modifier: private(1117) into FieldDeclaration(1122) at 0", "Insert Modifier: final(1118) into FieldDeclaration(1122) at 1", "Insert PrimitiveType: boolean(1119) into FieldDeclaration(1122) at 2", "Insert VariableDeclarationFragment(1121) into FieldDeclaration(1122) at 3", "Insert SimpleName: DiagnosticType(771) into SimpleType: DiagnosticType(772) at 0", "Insert SimpleName: CANNOT_USE_UNRESOLVED_TYPE(773) into VariableDeclarationFragment(779) at 0", "Insert MethodInvocation(778) into VariableDeclarationFragment(779) at 1", "Insert SimpleName: warnForUnresolvedTypes(1120) into VariableDeclarationFragment(1121) at 0", "Insert ExpressionStatement(1424) into Block(1425) at 15", "Insert VariableDeclarationStatement(6328) into Block(6385) at 3", "Insert ExpressionStatement(6333) into Block(6385) at 4", "Insert IfStatement(6359) into Block(6385) at 5", "Insert SimpleName: DiagnosticType(774) into MethodInvocation(778) at 0", "Insert SimpleName: warning(775) into MethodInvocation(778) at 1", "Insert StringLiteral: \"JSC_CANNOT_USE_UNRESOLVED_TYPE\"(776) into MethodInvocation(778) at 2", "Insert StringLiteral: \"Cannot use unresolved type {0}. Please include the type definition in your application.\"(777) into MethodInvocation(778) at 3", "Insert SimpleName: CANNOT_USE_UNRESOLVED_TYPE(837) into ClassInstanceCreation(848) at 5", "Insert Assignment: =(1423) into ExpressionStatement(1424) at 0", "Insert SimpleType: JSType(6324) into VariableDeclarationStatement(6328) at 0", "Insert VariableDeclarationFragment(6327) into VariableDeclarationStatement(6328) at 1", "Insert MethodInvocation(6332) into ExpressionStatement(6333) at 0", "Insert MethodInvocation(6336) into IfStatement(6359) at 0", "Insert Block(6358) into IfStatement(6359) at 1", "Insert FieldAccess(1417) into Assignment: =(1423) at 0", "Insert MethodInvocation(1422) into Assignment: =(1423) at 1", "Insert SimpleName: JSType(6323) into SimpleType: JSType(6324) at 0", "Insert SimpleName: resultType(6325) into VariableDeclarationFragment(6327) at 0", "Insert QualifiedName: resultPair.type(6326) into VariableDeclarationFragment(6327) at 1", "Move SimpleName: mayWarnAboutUnknownType(6294) into MethodInvocation(6332) at 0", "Move SimpleName: expr(6295) into MethodInvocation(6332) at 1", "Insert SimpleName: resultType(6331) into MethodInvocation(6332) at 2", "Insert SimpleName: resultType(6334) into MethodInvocation(6336) at 0", "Insert SimpleName: isUnresolved(6335) into MethodInvocation(6336) at 1", "Insert IfStatement(6353) into Block(6358) at 0", "Insert ExpressionStatement(6357) into Block(6358) at 1", "Insert SimpleName: resultType(6362) into MethodInvocation(6363) at 2", "Insert ThisExpression(1415) into FieldAccess(1417) at 0", "Insert SimpleName: warnForUnresolvedTypes(1416) into FieldAccess(1417) at 1", "Insert MethodInvocation(1420) into MethodInvocation(1422) at 0", "Insert SimpleName: inIncrementalCheckMode(1421) into MethodInvocation(1422) at 1", "Insert FieldAccess(6339) into IfStatement(6353) at 0", "Insert Block(6352) into IfStatement(6353) at 1", "Insert Assignment: =(6356) into ExpressionStatement(6357) at 0", "Insert SimpleName: compiler(1418) into MethodInvocation(1420) at 0", "Insert SimpleName: getOptions(1419) into MethodInvocation(1420) at 1", "Insert ThisExpression(6337) into FieldAccess(6339) at 0", "Insert SimpleName: warnForUnresolvedTypes(6338) into FieldAccess(6339) at 1", "Insert ExpressionStatement(6351) into Block(6352) at 0", "Insert QualifiedName: resultPair.type(6354) into Assignment: =(6356) at 0", "Insert SimpleName: UNKNOWN(6355) into Assignment: =(6356) at 1", "Insert SimpleName: resultType(6378) into MethodInvocation(6379) at 8", "Insert MethodInvocation(6350) into ExpressionStatement(6351) at 0", "Insert SimpleName: warnings(6340) into MethodInvocation(6350) at 0", "Insert SimpleName: add(6341) into MethodInvocation(6350) at 1", "Insert MethodInvocation(6349) into MethodInvocation(6350) at 2", "Insert SimpleName: JSError(6342) into MethodInvocation(6349) at 0", "Insert SimpleName: make(6343) into MethodInvocation(6349) at 1", "Insert SimpleName: expr(6344) into MethodInvocation(6349) at 2", "Insert SimpleName: CANNOT_USE_UNRESOLVED_TYPE(6345) into MethodInvocation(6349) at 3", "Insert MethodInvocation(6348) into MethodInvocation(6349) at 4", "Insert SimpleName: resultType(6346) into MethodInvocation(6348) at 0", "Insert SimpleName: toString(6347) into MethodInvocation(6348) at 1", "Delete QualifiedName: resultPair.type(6296)", "Delete MethodInvocation(6297)", "Delete ExpressionStatement(6298)", "Delete QualifiedName: resultPair.type(6301)", "Delete QualifiedName: resultPair.type(6317)"]}}, {"JSType_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 20", "operations": ["INS SimpleName: UNRESOLVED_MASK to VariableDeclarationFragment at 0", "INS PrimitiveType: int to FieldDeclaration at 4", "INS TextElement: To avoid flowing this type around and having to change all type operations to recognize it, to TagElement at 2", "INS NumberLiteral: 0x6fffffff to VariableDeclarationFragment at 1", "INS Modifier: final to FieldDeclaration at 3", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS TextElement: nor a supertype of any other type. In effect, if you try to use it, you get a warning. to TagElement at 1", "INS TagElement to Javadoc at 0", "INS TextElement: The unresolved type is useful for per-library type checking. This type is neither a subtype to TagElement at 0", "INS Modifier: static to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 20", "INS Javadoc to FieldDeclaration at 0", "INS Modifier: private to FieldDeclaration at 1", "INS TextElement: if an expression evaluates to this type, we warn and return ? instead. to TagElement at 3"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 5"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV SwitchCase to SwitchStatement at 21"]}, {"root": "INS ExpressionStatement to Block at 14", "operations": ["INS SimpleName: types to MethodInvocation at 0", "INS ExpressionStatement to Block at 14", "INS StringLiteral: \"UNRESOLVED\" to MethodInvocation at 2", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: UNRESOLVED_MASK to ClassInstanceCreation at 2", "INS SimpleName: MaskType to SimpleType: MaskType at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: MaskType to ClassInstanceCreation at 0", "INS SimpleName: commonTypes to ClassInstanceCreation at 1"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS MethodInvocation to InfixExpression: || at 1", "INS MethodInvocation to InfixExpression: || at 0", "INS ReturnStatement to Block at 0", "INS IfStatement to Block at 3", "INS SimpleName: isUnresolved to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: rhs to MethodInvocation at 0", "INS SimpleName: lhs to MethodInvocation at 0", "INS SimpleName: isUnresolved to MethodInvocation at 1", "INS QualifiedName: commonTypes.UNRESOLVED to ReturnStatement at 0", "INS InfixExpression: || to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isUnresolved to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: other to MethodInvocation at 0"]}, {"root": "INS ReturnStatement to SwitchStatement at 22", "operations": ["INS ReturnStatement to SwitchStatement at 22", "INS QualifiedName: commonTypes.UNRESOLVED to ReturnStatement at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 43", "operations": ["INS SwitchCase to SwitchStatement at 43"]}, {"root": "INS InfixExpression: || to IfStatement at 0", "operations": ["INS SimpleName: isUnresolved to MethodInvocation at 0", "INS InfixExpression: || to IfStatement at 0", "INS MethodInvocation to InfixExpression: || at 1"]}, {"root": "INS ReturnStatement to SwitchStatement at 8", "operations": ["INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: append to MethodInvocation at 1", "INS ReturnStatement to SwitchStatement at 8", "INS MethodInvocation to ReturnStatement at 0", "INS StringLiteral: \"unresolved\" to MethodInvocation at 2"]}, {"root": "INS SwitchCase to SwitchStatement at 9", "operations": ["INS SwitchCase to SwitchStatement at 9"]}, {"root": "INS InfixExpression: == to ReturnStatement at 0", "operations": ["INS MethodInvocation to InfixExpression: == at 0", "INS SimpleName: getMask to MethodInvocation at 0", "INS InfixExpression: == to ReturnStatement at 0", "INS SimpleName: UNRESOLVED_MASK to InfixExpression: == at 1"]}, {"root": "INS SimpleName: UNRESOLVED_MASK to SwitchCase at 0", "operations": ["INS SimpleName: UNRESOLVED_MASK to SwitchCase at 0"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV MethodInvocation to InfixExpression: || at 0"]}, {"root": "INS SimpleName: UNRESOLVED_MASK to SwitchCase at 0", "operations": ["INS SimpleName: UNRESOLVED_MASK to SwitchCase at 0"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV BooleanLiteral: false to ReturnStatement at 0"]}]}}, {"JSType_diff": {"operations": ["Insert FieldDeclaration(203) into TypeDeclaration: class(10537) at 20", "Insert Javadoc(195) into FieldDeclaration(203) at 0", "Insert Modifier: private(196) into FieldDeclaration(203) at 1", "Insert Modifier: static(197) into FieldDeclaration(203) at 2", "Insert Modifier: final(198) into FieldDeclaration(203) at 3", "Insert PrimitiveType: int(199) into FieldDeclaration(203) at 4", "Insert VariableDeclarationFragment(202) into FieldDeclaration(203) at 5", "Move IfStatement(2328) into Block(2537) at 5", "Insert TagElement(194) into Javadoc(195) at 0", "Insert SimpleName: UNRESOLVED_MASK(200) into VariableDeclarationFragment(202) at 0", "Insert NumberLiteral: 0x6fffffff(201) into VariableDeclarationFragment(202) at 1", "Move SwitchCase(622) into SwitchStatement(647) at 21", "Insert ExpressionStatement(1042) into Block(1129) at 14", "Insert IfStatement(2356) into Block(2537) at 3", "Insert IfStatement(5027) into Block(5164) at 1", "Insert TextElement: The unresolved type is useful for per-library type checking. This type is neither a subtype(190) into TagElement(194) at 0", "Insert TextElement: nor a supertype of any other type. In effect, if you try to use it, you get a warning.(191) into TagElement(194) at 1", "Insert TextElement: To avoid flowing this type around and having to change all type operations to recognize it,(192) into TagElement(194) at 2", "Insert TextElement: if an expression evaluates to this type, we warn and return ? instead.(193) into TagElement(194) at 3", "Insert ReturnStatement(599) into SwitchStatement(647) at 22", "Insert SwitchCase(640) into SwitchStatement(647) at 43", "Insert MethodInvocation(1041) into ExpressionStatement(1042) at 0", "Insert InfixExpression: ||(2352) into IfStatement(2356) at 0", "Insert Block(2355) into IfStatement(2356) at 1", "Insert MethodInvocation(5023) into IfStatement(5027) at 0", "Insert Block(5026) into IfStatement(5027) at 1", "Insert InfixExpression: ||(5405) into IfStatement(5409) at 0", "Insert ReturnStatement(6786) into SwitchStatement(7148) at 8", "Insert SwitchCase(6787) into SwitchStatement(7148) at 9", "Insert InfixExpression: ==(7305) into ReturnStatement(7306) at 0", "Insert SimpleName: UNRESOLVED_MASK(596) into SwitchCase(597) at 0", "Insert QualifiedName: commonTypes.UNRESOLVED(598) into ReturnStatement(599) at 0", "Insert SimpleName: types(1033) into MethodInvocation(1041) at 0", "Insert SimpleName: put(1034) into MethodInvocation(1041) at 1", "Insert StringLiteral: \"UNRESOLVED\"(1035) into MethodInvocation(1041) at 2", "Insert ClassInstanceCreation(1040) into MethodInvocation(1041) at 3", "Insert MethodInvocation(2348) into InfixExpression: ||(2352) at 0", "Insert MethodInvocation(2351) into InfixExpression: ||(2352) at 1", "Insert ReturnStatement(2354) into Block(2355) at 0", "Insert SimpleName: other(5021) into MethodInvocation(5023) at 0", "Insert SimpleName: isUnresolved(5022) into MethodInvocation(5023) at 1", "Insert ReturnStatement(5025) into Block(5026) at 0", "Move MethodInvocation(5356) into InfixExpression: ||(5405) at 0", "Insert MethodInvocation(5404) into InfixExpression: ||(5405) at 1", "Insert SimpleName: UNRESOLVED_MASK(6780) into SwitchCase(6781) at 0", "Insert MethodInvocation(6785) into ReturnStatement(6786) at 0", "Insert MethodInvocation(7303) into InfixExpression: ==(7305) at 0", "Insert SimpleName: UNRESOLVED_MASK(7304) into InfixExpression: ==(7305) at 1", "Insert SimpleType: MaskType(1037) into ClassInstanceCreation(1040) at 0", "Insert SimpleName: commonTypes(1038) into ClassInstanceCreation(1040) at 1", "Insert SimpleName: UNRESOLVED_MASK(1039) into ClassInstanceCreation(1040) at 2", "Insert SimpleName: lhs(2346) into MethodInvocation(2348) at 0", "Insert SimpleName: isUnresolved(2347) into MethodInvocation(2348) at 1", "Insert SimpleName: rhs(2349) into MethodInvocation(2351) at 0", "Insert SimpleName: isUnresolved(2350) into MethodInvocation(2351) at 1", "Insert QualifiedName: commonTypes.UNRESOLVED(2353) into ReturnStatement(2354) at 0", "Move BooleanLiteral: false(7246) into ReturnStatement(5025) at 0", "Insert SimpleName: isUnresolved(5403) into MethodInvocation(5404) at 0", "Insert SimpleName: builder(6782) into MethodInvocation(6785) at 0", "Insert SimpleName: append(6783) into MethodInvocation(6785) at 1", "Insert StringLiteral: \"unresolved\"(6784) into MethodInvocation(6785) at 2", "Insert SimpleName: getMask(7302) into MethodInvocation(7303) at 0", "Insert SimpleName: MaskType(1036) into SimpleType: MaskType(1037) at 0"]}}, {"JSTypeCreatorFromJSDoc_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 36", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS PrimitiveType: boolean to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: createUnresolvedTypes to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 36"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: createUnresolvedTypes to SingleVariableDeclaration at 1"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS ExpressionStatement to Block at 6", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: createUnresolvedTypes to Assignment: = at 1", "INS SimpleName: createUnresolvedTypes to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS ConditionalExpression to ReturnStatement at 0", "operations": ["INS FieldAccess to ConditionalExpression at 0", "INS FieldAccess to ConditionalExpression at 1", "INS SimpleName: commonTypes to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to FieldAccess at 0", "INS ThisExpression to FieldAccess at 0", "INS ConditionalExpression to ReturnStatement at 0", "INS SimpleName: UNRESOLVED to FieldAccess at 1", "INS SimpleName: createUnresolvedTypes to FieldAccess at 1"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV FieldAccess to ConditionalExpression at 2"]}]}}, {"JSTypeCreatorFromJSDoc_diff": {"operations": ["Insert FieldDeclaration(480) into TypeDeclaration: class(4820) at 36", "Insert Modifier: private(475) into FieldDeclaration(480) at 0", "Insert Modifier: final(476) into FieldDeclaration(480) at 1", "Insert PrimitiveType: boolean(477) into FieldDeclaration(480) at 2", "Insert VariableDeclarationFragment(479) into FieldDeclaration(480) at 3", "Insert SingleVariableDeclaration(506) into MethodDeclaration(555) at 6", "Insert SimpleName: createUnresolvedTypes(478) into VariableDeclarationFragment(479) at 0", "Insert PrimitiveType: boolean(504) into SingleVariableDeclaration(506) at 0", "Insert SimpleName: createUnresolvedTypes(505) into SingleVariableDeclaration(506) at 1", "Insert ExpressionStatement(553) into Block(554) at 6", "Insert Assignment: =(552) into ExpressionStatement(553) at 0", "Insert ConditionalExpression(1656) into ReturnStatement(1657) at 0", "Insert FieldAccess(550) into Assignment: =(552) at 0", "Insert SimpleName: createUnresolvedTypes(551) into Assignment: =(552) at 1", "Insert FieldAccess(1645) into ConditionalExpression(1656) at 0", "Insert FieldAccess(1650) into ConditionalExpression(1656) at 1", "Move FieldAccess(1632) into ConditionalExpression(1656) at 2", "Insert ThisExpression(548) into FieldAccess(550) at 0", "Insert SimpleName: createUnresolvedTypes(549) into FieldAccess(550) at 1", "Insert ThisExpression(1643) into FieldAccess(1645) at 0", "Insert SimpleName: createUnresolvedTypes(1644) into FieldAccess(1645) at 1", "Insert FieldAccess(1648) into FieldAccess(1650) at 0", "Insert SimpleName: UNRESOLVED(1649) into FieldAccess(1650) at 1", "Insert ThisExpression(1646) into FieldAccess(1648) at 0", "Insert SimpleName: commonTypes(1647) into FieldAccess(1648) at 1"]}}, {"JSTypes_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 19", "operations": ["INS Modifier: public to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS StringLiteral: \"ConstantField\" to SingleMemberAnnotation at 1", "INS SimpleName: UNRESOLVED to VariableDeclarationFragment at 0", "INS SimpleType: JSType to FieldDeclaration at 3", "INS SimpleName: JSType to SimpleType: JSType at 0", "INS Modifier: final to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 19", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to FieldDeclaration at 0"]}, {"root": "INS ExpressionStatement to Block at 14", "operations": ["INS SimpleName: types to MethodInvocation at 0", "INS SimpleName: UNRESOLVED to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 14", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: checkNotNull to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS StringLiteral: \"UNRESOLVED\" to MethodInvocation at 2"]}]}}, {"JSTypes_diff": {"operations": ["Insert FieldDeclaration(195) into TypeDeclaration: class(2534) at 19", "Insert SingleMemberAnnotation(188) into FieldDeclaration(195) at 0", "Insert Modifier: public(189) into FieldDeclaration(195) at 1", "Insert Modifier: final(190) into FieldDeclaration(195) at 2", "Insert SimpleType: JSType(192) into FieldDeclaration(195) at 3", "Insert VariableDeclarationFragment(194) into FieldDeclaration(195) at 4", "Insert SimpleName: SuppressWarnings(186) into SingleMemberAnnotation(188) at 0", "Insert StringLiteral: \"ConstantField\"(187) into SingleMemberAnnotation(188) at 1", "Insert SimpleName: JSType(191) into SimpleType: JSType(192) at 0", "Insert SimpleName: UNRESOLVED(193) into VariableDeclarationFragment(194) at 0", "Insert ExpressionStatement(695) into Block(1116) at 14", "Insert Assignment: =(694) into ExpressionStatement(695) at 0", "Insert FieldAccess(687) into Assignment: =(694) at 0", "Insert MethodInvocation(693) into Assignment: =(694) at 1", "Insert ThisExpression(685) into FieldAccess(687) at 0", "Insert SimpleName: UNRESOLVED(686) into FieldAccess(687) at 1", "Insert SimpleName: checkNotNull(688) into MethodInvocation(693) at 0", "Insert MethodInvocation(692) into MethodInvocation(693) at 1", "Insert SimpleName: types(689) into MethodInvocation(692) at 0", "Insert SimpleName: get(690) into MethodInvocation(692) at 1", "Insert StringLiteral: \"UNRESOLVED\"(691) into MethodInvocation(692) at 2"]}}], "commit_stats": [{"total_files": 10, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}