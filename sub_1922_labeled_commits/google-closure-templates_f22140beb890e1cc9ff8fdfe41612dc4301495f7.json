{"application": "google-closure-templates", "csha": "f22140beb890e1cc9ff8fdfe41612dc4301495f7", "files": [{"RequireStrictAutoescaping_cluster": {"actions": [{"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 6"]}, {"root": "DEL Block", "operations": ["DEL MethodInvocation", "DEL SimpleName: getNamespaceDeclaration", "DEL ExpressionStatement", "DEL SimpleName: node", "DEL SimpleName: errorReporter", "DEL InfixExpression: !=", "DEL SimpleName: report", "DEL SimpleName: getNamespaceDeclaration", "DEL QualifiedName: AutoescapeMode.STRICT", "DEL Block", "DEL SimpleName: error", "DEL MethodInvocation", "DEL SimpleName: getDefaultAutoescapeMode", "DEL MethodInvocation", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: getAutoescapeModeLocation", "DEL MethodInvocation", "DEL SimpleName: node", "DEL Block"]}]}}, {"RequireStrictAutoescaping_diff": {"operations": ["Move Block(86) into MethodDeclaration(69) at 6", "Delete SimpleName: node(44)", "Delete SimpleName: getNamespaceDeclaration(45)", "Delete MethodInvocation(46)", "Delete SimpleName: getDefaultAutoescapeMode(47)", "Delete MethodInvocation(48)", "Delete QualifiedName: AutoescapeMode.STRICT(49)", "Delete InfixExpression: !=(50)", "Delete SimpleName: errorReporter(51)", "Delete SimpleName: report(52)", "Delete SimpleName: node(53)", "Delete SimpleName: getNamespaceDeclaration(54)", "Delete MethodInvocation(55)", "Delete SimpleName: getAutoescapeModeLocation(56)", "Delete MethodInvocation(57)", "Delete SimpleName: error(58)", "Delete MethodInvocation(59)", "Delete ExpressionStatement(60)", "Delete Block(61)", "Delete IfStatement(87)", "Delete Block(88)"]}}, {"AssertStrictAutoescapingVisitor_cluster": {"actions": [{"root": "INS Block to MethodDeclaration at 5", "operations": ["INS Block to MethodDeclaration at 5"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.template.soy.soytree.NamespaceDeclaration", "DEL ImportDeclaration"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: getDefaultAutoescapeMode", "DEL SimpleName: NamespaceDeclaration", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: errorReporter", "DEL SimpleName: node", "DEL Block", "DEL QualifiedName: AutoescapeMode.STRICT", "DEL VariableDeclarationFragment", "DEL SimpleName: namespaceDeclaration", "DEL SimpleName: report", "DEL MethodInvocation", "DEL SimpleName: INVALID_AUTOESCAPING", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: namespaceDeclaration", "DEL SimpleName: getNamespaceDeclaration", "DEL SimpleType: NamespaceDeclaration", "DEL SimpleName: getAutoescapeModeLocation", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL Block", "DEL SimpleName: namespaceDeclaration", "DEL ExpressionStatement"]}]}}, {"AssertStrictAutoescapingVisitor_diff": {"operations": ["Insert Block(109) into MethodDeclaration(110) at 5", "Move ExpressionStatement(134) into Block(109) at 0", "Delete QualifiedName: com.google.template.soy.soytree.NamespaceDeclaration(12)", "Delete ImportDeclaration(13)", "Delete SimpleName: NamespaceDeclaration(107)", "Delete SimpleType: NamespaceDeclaration(108)", "Delete SimpleName: namespaceDeclaration(109)", "Delete SimpleName: node(110)", "Delete SimpleName: getNamespaceDeclaration(111)", "Delete MethodInvocation(112)", "Delete VariableDeclarationFragment(113)", "Delete VariableDeclarationStatement(114)", "Delete SimpleName: namespaceDeclaration(115)", "Delete SimpleName: getDefaultAutoescapeMode(116)", "Delete MethodInvocation(117)", "Delete QualifiedName: AutoescapeMode.STRICT(118)", "Delete InfixExpression: !=(119)", "Delete SimpleName: errorReporter(120)", "Delete SimpleName: report(121)", "Delete SimpleName: namespaceDeclaration(122)", "Delete SimpleName: getAutoescapeModeLocation(123)", "Delete MethodInvocation(124)", "Delete SimpleName: INVALID_AUTOESCAPING(125)", "Delete MethodInvocation(126)", "Delete ExpressionStatement(127)", "Delete ReturnStatement(128)", "Delete Block(129)", "Delete IfStatement(130)", "Delete Block(135)"]}}, {"CommandTagAttribute_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 14", "operations": ["INS SimpleType: SoyErrorKind to FieldDeclaration at 2", "INS SimpleName: SoyErrorKind to SimpleType: SoyErrorKind at 0", "INS StringLiteral: \"''autoescape'' can only be set on individual templates.\" to MethodInvocation at 2", "INS SimpleName: NAMESPACE_AUTOESCAPE_ATTRIBUTE to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: of to MethodInvocation at 1", "INS FieldDeclaration to TypeDeclaration: class at 14", "INS Modifier: static to FieldDeclaration at 0", "INS SimpleName: SoyErrorKind to MethodInvocation at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 15", "operations": ["INS StringLiteral: \"''autoescape=\\\"strict\\\"'' is the default, no need to set it.\" to MethodInvocation at 2", "INS Modifier: static to FieldDeclaration at 0", "INS SimpleType: SoyErrorKind to FieldDeclaration at 2", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: SoyErrorKind to SimpleType: SoyErrorKind at 0", "INS SimpleName: AUTOESCAPE_STRICT to VariableDeclarationFragment at 0", "INS SimpleName: SoyErrorKind to MethodInvocation at 0", "INS SimpleName: of to MethodInvocation at 1", "INS FieldDeclaration to TypeDeclaration: class at 15", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: errorReporter to MethodInvocation at 0", "INS IfStatement to Block at 2", "INS SimpleName: mode to InfixExpression: == at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: report to MethodInvocation at 1", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: valueLocation to MethodInvocation at 2", "INS SimpleName: AUTOESCAPE_STRICT to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS QualifiedName: AutoescapeMode.STRICT to InfixExpression: == at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "UPDATE from copyOf to of", "operations": ["UPD SimpleName: copyOf from copyOf to of"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS QualifiedName: AutoescapeMode.CONTEXTUAL to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS QualifiedName: AutoescapeMode.NONCONTEXTUAL to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "UPDATE from AutoescapeMode to getAttributeValue", "operations": ["UPD SimpleName: AutoescapeMode from AutoescapeMode to getAttributeValue", "UPD SimpleName: getAttributeValues from getAttributeValues to getAttributeValue"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: AutoescapeMode to MethodInvocation at 1", "MOV SimpleName: getAttributeValues to MethodInvocation at 1"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement"]}]}}, {"CommandTagAttribute_diff": {"operations": ["Insert FieldDeclaration(180) into TypeDeclaration: class(1076) at 14", "Insert FieldDeclaration(191) into TypeDeclaration: class(1076) at 15", "Insert Modifier: static(170) into FieldDeclaration(180) at 0", "Insert Modifier: final(171) into FieldDeclaration(180) at 1", "Insert SimpleType: SoyErrorKind(173) into FieldDeclaration(180) at 2", "Insert VariableDeclarationFragment(179) into FieldDeclaration(180) at 3", "Insert Modifier: static(181) into FieldDeclaration(191) at 0", "Insert Modifier: final(182) into FieldDeclaration(191) at 1", "Insert SimpleType: SoyErrorKind(184) into FieldDeclaration(191) at 2", "Insert VariableDeclarationFragment(190) into FieldDeclaration(191) at 3", "Insert SimpleName: SoyErrorKind(172) into SimpleType: SoyErrorKind(173) at 0", "Insert SimpleName: NAMESPACE_AUTOESCAPE_ATTRIBUTE(174) into VariableDeclarationFragment(179) at 0", "Insert MethodInvocation(178) into VariableDeclarationFragment(179) at 1", "Insert SimpleName: SoyErrorKind(183) into SimpleType: SoyErrorKind(184) at 0", "Insert SimpleName: AUTOESCAPE_STRICT(185) into VariableDeclarationFragment(190) at 0", "Insert MethodInvocation(189) into VariableDeclarationFragment(190) at 1", "Insert IfStatement(830) into Block(833) at 2", "Insert SimpleName: SoyErrorKind(175) into MethodInvocation(178) at 0", "Insert SimpleName: of(176) into MethodInvocation(178) at 1", "Insert StringLiteral: \"''autoescape'' can only be set on individual templates.\"(177) into MethodInvocation(178) at 2", "Insert SimpleName: SoyErrorKind(186) into MethodInvocation(189) at 0", "Insert SimpleName: of(187) into MethodInvocation(189) at 1", "Insert StringLiteral: \"''autoescape=\\\"strict\\\"'' is the default, no need to set it.\"(188) into MethodInvocation(189) at 2", "Insert InfixExpression: ==(795) into IfStatement(830) at 0", "Insert Block(802) into IfStatement(830) at 1", "Insert IfStatement(829) into IfStatement(830) at 2", "Insert SimpleName: mode(793) into InfixExpression: ==(795) at 0", "Insert QualifiedName: AutoescapeMode.STRICT(794) into InfixExpression: ==(795) at 1", "Insert ExpressionStatement(801) into Block(802) at 0", "Move InfixExpression: ==(773) into IfStatement(829) at 0", "Move Block(793) into IfStatement(829) at 1", "Insert MethodInvocation(800) into ExpressionStatement(801) at 0", "Insert SimpleName: errorReporter(796) into MethodInvocation(800) at 0", "Insert SimpleName: report(797) into MethodInvocation(800) at 1", "Insert SimpleName: valueLocation(798) into MethodInvocation(800) at 2", "Insert SimpleName: AUTOESCAPE_STRICT(799) into MethodInvocation(800) at 3", "Update SimpleName: copyOf(786) to of", "Insert MethodInvocation(821) into MethodInvocation(825) at 2", "Insert MethodInvocation(824) into MethodInvocation(825) at 3", "Insert QualifiedName: AutoescapeMode.CONTEXTUAL(819) into MethodInvocation(821) at 0", "Update SimpleName: AutoescapeMode(787) to getAttributeValue", "Move SimpleName: AutoescapeMode(787) into MethodInvocation(821) at 1", "Insert QualifiedName: AutoescapeMode.NONCONTEXTUAL(822) into MethodInvocation(824) at 0", "Update SimpleName: getAttributeValues(788) to getAttributeValue", "Move SimpleName: getAttributeValues(788) into MethodInvocation(824) at 1", "Delete MethodInvocation(789)", "Delete IfStatement(794)"]}}, {"NamespaceDeclaration_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 7"]}, {"root": "UPDATE from com.google.template.soy.base.SourceLocation to com.google.template.soy.error.SoyErrorKind", "operations": ["UPD QualifiedName: com.google.template.soy.base.SourceLocation from com.google.template.soy.base.SourceLocation to com.google.template.soy.error.SoyErrorKind"]}, {"root": "INS VariableDeclarationStatement to SwitchStatement at 2", "operations": ["INS SimpleName: AutoescapeMode to MethodInvocation at 0", "INS SimpleName: mode to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationStatement to SwitchStatement at 2", "INS SimpleName: forAttributeValue to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to SwitchStatement at 3", "operations": ["INS SimpleName: SoyErrorKind to SimpleType: SoyErrorKind at 0", "INS QualifiedName: CommandTagAttribute.AUTOESCAPE_STRICT to ConditionalExpression at 1", "INS SimpleName: mode to InfixExpression: == at 0", "INS SimpleType: SoyErrorKind to VariableDeclarationStatement at 0", "INS QualifiedName: AutoescapeMode.STRICT to InfixExpression: == at 1", "INS SimpleName: error to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to SwitchStatement at 3", "INS InfixExpression: == to ConditionalExpression at 0", "INS QualifiedName: CommandTagAttribute.NAMESPACE_AUTOESCAPE_ATTRIBUTE to ConditionalExpression at 2"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AutoescapeMode to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: report to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: errorReporter to MethodInvocation at 0", "INS SimpleName: getName to MethodInvocation at 1", "INS SimpleName: error to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from getValueLocation to location", "operations": ["UPD SimpleName: getValueLocation from getValueLocation to location"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: attr to MethodInvocation at 0", "MOV SimpleName: getValueLocation to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: valueAsAutoescapeMode to MethodInvocation at 1", "MOV SimpleName: attr to MethodInvocation at 0"]}, {"root": "UPDATE from valueAsAutoescapeMode to getValue", "operations": ["UPD SimpleName: valueAsAutoescapeMode from valueAsAutoescapeMode to getValue"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.base.Preconditions.checkState"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: final", "DEL SimpleName: AutoescapeMode", "DEL SimpleName: DEFAULT_FILE_WIDE_DEFAULT_AUTOESCAPE_MODE", "DEL Javadoc", "DEL QualifiedName: AutoescapeMode.STRICT", "DEL VariableDeclarationFragment", "DEL TextElement: The default autoescape mode if none is specified in the command text. ", "DEL Modifier: static", "DEL FieldDeclaration", "DEL SimpleType: AutoescapeMode", "DEL Modifier: private", "DEL TagElement"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL MarkerAnnotation", "DEL Modifier: final", "DEL Modifier: private", "DEL SimpleName: autoescapeMode", "DEL VariableDeclarationFragment", "DEL SimpleName: Nullable", "DEL SimpleName: AutoescapeMode", "DEL FieldDeclaration", "DEL SimpleType: AutoescapeMode"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: SourceLocation", "DEL SimpleName: Nullable", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: autoescapeModeLocation", "DEL Modifier: private", "DEL SimpleType: SourceLocation", "DEL Modifier: final", "DEL MarkerAnnotation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: autoescapeMode"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleType: SourceLocation", "DEL SimpleName: autoescapeModeLocation", "DEL SimpleName: SourceLocation", "DEL NullLiteral"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: autoescapeMode", "DEL SimpleName: errorReporter", "DEL ExpressionStatement"]}, {"root": "DEL Assignment: =", "operations": ["DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: autoescapeModeLocation"]}, {"root": "DEL StringLiteral: \"autoescape\"", "operations": ["DEL StringLiteral: \"autoescape\""]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL SimpleName: autoescapeMode", "DEL FieldAccess", "DEL ExpressionStatement", "DEL SimpleName: autoescapeMode", "DEL ThisExpression"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL ThisExpression", "DEL SimpleName: autoescapeModeLocation", "DEL FieldAccess", "DEL SimpleName: autoescapeModeLocation", "DEL Assignment: ="]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: autoescapeMode", "DEL Block", "DEL ReturnStatement", "DEL SimpleType: AutoescapeMode", "DEL SimpleName: DEFAULT_FILE_WIDE_DEFAULT_AUTOESCAPE_MODE", "DEL MethodDeclaration", "DEL ConditionalExpression", "DEL SimpleName: getDefaultAutoescapeMode", "DEL SimpleName: AutoescapeMode", "DEL SimpleName: autoescapeMode", "DEL InfixExpression: ==", "DEL NullLiteral", "DEL Modifier: public"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TextElement: Returns the location of ", "DEL StringLiteral: \"there is no autoescape attribute\"", "DEL TagElement: @code", "DEL SimpleName: checkState", "DEL TagElement", "DEL SimpleName: getAutoescapeModeLocation", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleType: SourceLocation", "DEL NullLiteral", "DEL SimpleName: autoescapeModeLocation", "DEL TagElement: @throws", "DEL SimpleName: IllegalStateException", "DEL SimpleName: autoescapeModeLocation", "DEL TextElement:  autoescape", "DEL Modifier: public", "DEL MethodInvocation", "DEL Javadoc", "DEL TextElement:  attribute.", "DEL ReturnStatement", "DEL InfixExpression: !=", "DEL TextElement:  if there is no autoescape attribute.", "DEL Block", "DEL SimpleName: SourceLocation"]}]}}, {"NamespaceDeclaration_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(284) at 7", "Update QualifiedName: com.google.template.soy.base.SourceLocation(8) to com.google.template.soy.error.SoyErrorKind", "Insert VariableDeclarationStatement(113) into SwitchStatement(191) at 2", "Insert VariableDeclarationStatement(124) into SwitchStatement(191) at 3", "Move SimpleType: AutoescapeMode(107) into VariableDeclarationStatement(113) at 0", "Insert VariableDeclarationFragment(112) into VariableDeclarationStatement(113) at 1", "Insert SimpleType: SoyErrorKind(115) into VariableDeclarationStatement(124) at 0", "Insert VariableDeclarationFragment(123) into VariableDeclarationStatement(124) at 1", "Insert MethodInvocation(133) into ExpressionStatement(134) at 0", "Insert SimpleName: mode(105) into VariableDeclarationFragment(112) at 0", "Insert MethodInvocation(111) into VariableDeclarationFragment(112) at 1", "Insert SimpleName: SoyErrorKind(114) into SimpleType: SoyErrorKind(115) at 0", "Insert SimpleName: error(116) into VariableDeclarationFragment(123) at 0", "Insert ConditionalExpression(122) into VariableDeclarationFragment(123) at 1", "Insert SimpleName: errorReporter(125) into MethodInvocation(133) at 0", "Insert SimpleName: report(126) into MethodInvocation(133) at 1", "Insert MethodInvocation(131) into MethodInvocation(133) at 2", "Insert SimpleName: error(132) into MethodInvocation(133) at 3", "Insert SimpleName: AutoescapeMode(106) into MethodInvocation(111) at 0", "Insert SimpleName: forAttributeValue(107) into MethodInvocation(111) at 1", "Insert MethodInvocation(110) into MethodInvocation(111) at 2", "Insert InfixExpression: ==(119) into ConditionalExpression(122) at 0", "Insert QualifiedName: CommandTagAttribute.AUTOESCAPE_STRICT(120) into ConditionalExpression(122) at 1", "Insert QualifiedName: CommandTagAttribute.NAMESPACE_AUTOESCAPE_ATTRIBUTE(121) into ConditionalExpression(122) at 2", "Insert MethodInvocation(129) into MethodInvocation(131) at 0", "Update SimpleName: getValueLocation(156) to location", "Move SimpleName: getValueLocation(156) into MethodInvocation(131) at 1", "Move SimpleName: attr(148) into MethodInvocation(110) at 0", "Update SimpleName: valueAsAutoescapeMode(149) to getValue", "Move SimpleName: valueAsAutoescapeMode(149) into MethodInvocation(110) at 1", "Insert SimpleName: mode(117) into InfixExpression: ==(119) at 0", "Insert QualifiedName: AutoescapeMode.STRICT(118) into InfixExpression: ==(119) at 1", "Move SimpleName: attr(155) into MethodInvocation(129) at 0", "Insert SimpleName: getName(128) into MethodInvocation(129) at 1", "Delete QualifiedName: com.google.common.base.Preconditions.checkState(2)", "Delete ImportDeclaration(3)", "Delete TextElement: The default autoescape mode if none is specified in the command text. (26)", "Delete TagElement(27)", "Delete Javadoc(28)", "Delete Modifier: private(29)", "Delete Modifier: static(30)", "Delete Modifier: final(31)", "Delete SimpleName: AutoescapeMode(32)", "Delete SimpleType: AutoescapeMode(33)", "Delete SimpleName: DEFAULT_FILE_WIDE_DEFAULT_AUTOESCAPE_MODE(34)", "Delete QualifiedName: AutoescapeMode.STRICT(35)", "Delete VariableDeclarationFragment(36)", "Delete FieldDeclaration(37)", "Delete SimpleName: Nullable(45)", "Delete MarkerAnnotation(46)", "Delete Modifier: private(47)", "Delete Modifier: final(48)", "Delete SimpleName: AutoescapeMode(49)", "Delete SimpleType: AutoescapeMode(50)", "Delete SimpleName: autoescapeMode(51)", "Delete VariableDeclarationFragment(52)", "Delete FieldDeclaration(53)", "Delete SimpleName: Nullable(54)", "Delete MarkerAnnotation(55)", "Delete Modifier: private(56)", "Delete Modifier: final(57)", "Delete SimpleName: SourceLocation(58)", "Delete SimpleType: SourceLocation(59)", "Delete SimpleName: autoescapeModeLocation(60)", "Delete VariableDeclarationFragment(61)", "Delete FieldDeclaration(62)", "Delete SimpleName: autoescapeMode(108)", "Delete NullLiteral(109)", "Delete VariableDeclarationFragment(110)", "Delete VariableDeclarationStatement(111)", "Delete SimpleName: SourceLocation(112)", "Delete SimpleType: SourceLocation(113)", "Delete SimpleName: autoescapeModeLocation(114)", "Delete NullLiteral(115)", "Delete VariableDeclarationFragment(116)", "Delete VariableDeclarationStatement(117)", "Delete SimpleName: autoescapeMode(147)", "Delete SimpleName: errorReporter(150)", "Delete MethodInvocation(151)", "Delete Assignment: =(152)", "Delete ExpressionStatement(153)", "Delete SimpleName: autoescapeModeLocation(154)", "Delete MethodInvocation(157)", "Delete Assignment: =(158)", "Delete StringLiteral: \"autoescape\"(210)", "Delete ThisExpression(226)", "Delete SimpleName: autoescapeMode(227)", "Delete FieldAccess(228)", "Delete SimpleName: autoescapeMode(229)", "Delete Assignment: =(230)", "Delete ExpressionStatement(231)", "Delete ThisExpression(232)", "Delete SimpleName: autoescapeModeLocation(233)", "Delete FieldAccess(234)", "Delete SimpleName: autoescapeModeLocation(235)", "Delete Assignment: =(236)", "Delete ExpressionStatement(237)", "Delete Modifier: public(261)", "Delete SimpleName: AutoescapeMode(262)", "Delete SimpleType: AutoescapeMode(263)", "Delete SimpleName: getDefaultAutoescapeMode(264)", "Delete SimpleName: autoescapeMode(265)", "Delete NullLiteral(266)", "Delete InfixExpression: ==(267)", "Delete SimpleName: DEFAULT_FILE_WIDE_DEFAULT_AUTOESCAPE_MODE(268)", "Delete SimpleName: autoescapeMode(269)", "Delete ConditionalExpression(270)", "Delete ReturnStatement(271)", "Delete Block(272)", "Delete MethodDeclaration(273)", "Delete TextElement: Returns the location of (274)", "Delete TextElement:  autoescape(275)", "Delete TagElement: @code(276)", "Delete TextElement:  attribute.(277)", "Delete TagElement(278)", "Delete SimpleName: IllegalStateException(279)", "Delete TextElement:  if there is no autoescape attribute.(280)", "Delete TagElement: @throws(281)", "Delete Javadoc(282)", "Delete Modifier: public(283)", "Delete SimpleName: SourceLocation(284)", "Delete SimpleType: SourceLocation(285)", "Delete SimpleName: getAutoescapeModeLocation(286)", "Delete SimpleName: checkState(287)", "Delete SimpleName: autoescapeModeLocation(288)", "Delete NullLiteral(289)", "Delete InfixExpression: !=(290)", "Delete StringLiteral: \"there is no autoescape attribute\"(291)", "Delete MethodInvocation(292)", "Delete ExpressionStatement(293)", "Delete SimpleName: autoescapeModeLocation(294)", "Delete ReturnStatement(295)", "Delete Block(296)", "Delete MethodDeclaration(297)"]}}, {"TemplateNode_cluster": {"actions": [{"root": "INS QualifiedName: AutoescapeMode.STRICT to ConstructorInvocation at 2", "operations": ["INS QualifiedName: AutoescapeMode.STRICT to ConstructorInvocation at 2"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: namespaceDeclaration", "DEL SimpleName: getDefaultAutoescapeMode", "DEL MethodInvocation"]}]}}, {"TemplateNode_diff": {"operations": ["Insert QualifiedName: AutoescapeMode.STRICT(245) into ConstructorInvocation(255) at 2", "Delete SimpleName: namespaceDeclaration(245)", "Delete SimpleName: getDefaultAutoescapeMode(246)", "Delete MethodInvocation(247)"]}}], "commit_stats": [{"total_files": 9, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}