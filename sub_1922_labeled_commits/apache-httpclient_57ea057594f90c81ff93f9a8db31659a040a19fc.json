{"application": "apache-httpclient", "csha": "57ea057594f90c81ff93f9a8db31659a040a19fc", "files": [{"DefaultClientConnectionOperator_cluster": {"actions": [{"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 6"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS StringLiteral: \"DNS resolver may not be null\" to ClassInstanceCreation at 1", "INS SimpleType: IllegalArgumentException to ClassInstanceCreation at 0", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: == to IfStatement at 0", "INS IfStatement to Block at 1", "INS Block to IfStatement at 1", "INS ThrowStatement to Block at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: IllegalArgumentException to SimpleType: IllegalArgumentException at 0", "INS SimpleName: dnsResolver to InfixExpression: == at 0"]}, {"root": "INS TagElement to Javadoc at 0", "operations": ["INS TagElement to Javadoc at 0"]}, {"root": "INS TagElement: @see to Javadoc at 5", "operations": ["INS SimpleName: DnsResolver to TagElement: @link at 0", "INS TagElement: @see to Javadoc at 5", "INS TagElement: @link to TagElement: @see at 1"]}, {"root": "INS TagElement: @see to Javadoc at 6", "operations": ["INS TagElement: @see to Javadoc at 6", "INS TagElement: @link to TagElement: @see at 1", "INS SimpleName: SystemDefaultDnsResolver to TagElement: @link at 0"]}, {"root": "MOVE from TagElement", "operations": ["MOV TextElement: Resolves the given host name to an array of corresponding IP addresses, based on the to TagElement at 0", "MOV TextElement: configured name service on the system. to TagElement at 1", "MOV TextElement: it first. If the host is not configured, the default OS DNS-lookup to TagElement: @see at 0", "MOV TextElement: mechanism is used. to TagElement: @see at 0", "MOV TextElement: If a custom DNS resolver is provided, the given host will be searched in to TagElement at 2"]}, {"root": "UPDATE from configured name service on the system. to configured name service on the provided DNS resolver. If one wasn't provided, the system", "operations": ["UPD TextElement: configured name service on the system. from configured name service on the system. to configured name service on the provided DNS resolver. If one wasn't provided, the system"]}, {"root": "UPDATE from If a custom DNS resolver is provided, the given host will be searched in to configuration is used.", "operations": ["UPD TextElement: If a custom DNS resolver is provided, the given host will be searched in from If a custom DNS resolver is provided, the given host will be searched in to configuration is used."]}, {"root": "UPDATE from mechanism is used. to  ", "operations": ["UPD TextElement: mechanism is used. from mechanism is used. to  ", "UPD TextElement: it first. If the host is not configured, the default OS DNS-lookup from it first. If the host is not configured, the default OS DNS-lookup to  "]}, {"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS SimpleName: SystemDefaultDnsResolver to SimpleType: SystemDefaultDnsResolver at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: SystemDefaultDnsResolver to ClassInstanceCreation at 0"]}, {"root": "UPDATE from \"Scheme registry amy not be null\" to \"Scheme registry may not be null\"", "operations": ["UPD StringLiteral: \"Scheme registry amy not be null\" from \"Scheme registry amy not be null\" to \"Scheme registry may not be null\""]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL TagElement", "operations": ["DEL TagElement"]}, {"root": "DEL Block", "operations": ["DEL ReturnStatement", "DEL NullLiteral", "DEL MethodInvocation", "DEL SimpleName: InetAddress", "DEL Block", "DEL SimpleName: host", "DEL Block", "DEL IfStatement", "DEL InfixExpression: !=", "DEL SimpleName: dnsResolver", "DEL SimpleName: getAllByName"]}]}}, {"DefaultClientConnectionOperator_diff": {"operations": ["Move Block(834) into MethodDeclaration(850) at 6", "Insert IfStatement(254) into Block(267) at 1", "Insert TagElement(811) into Javadoc(830) at 0", "Insert TagElement: @see(823) into Javadoc(830) at 4", "Insert TagElement: @see(827) into Javadoc(830) at 5", "Insert InfixExpression: ==(247) into IfStatement(254) at 0", "Insert Block(253) into IfStatement(254) at 1", "Move TextElement: Resolves the given host name to an array of corresponding IP addresses, based on the(796) into TagElement(811) at 0", "Update TextElement: configured name service on the system.(797) to configured name service on the provided DNS resolver. If one wasn't provided, the system", "Move TextElement: configured name service on the system.(797) into TagElement(811) at 1", "Update TextElement: If a custom DNS resolver is provided, the given host will be searched in(798) to configuration is used.", "Move TextElement: If a custom DNS resolver is provided, the given host will be searched in(798) into TagElement(811) at 2", "Update TextElement: it first. If the host is not configured, the default OS DNS-lookup(799) to  ", "Move TextElement: it first. If the host is not configured, the default OS DNS-lookup(799) into TagElement: @see(823) at 0", "Insert TagElement: @link(822) into TagElement: @see(823) at 1", "Update TextElement: mechanism is used.(800) to  ", "Move TextElement: mechanism is used.(800) into TagElement: @see(827) at 0", "Insert TagElement: @link(826) into TagElement: @see(827) at 1", "Insert ClassInstanceCreation(208) into Assignment: =(209) at 1", "Insert SimpleName: dnsResolver(245) into InfixExpression: ==(247) at 0", "Insert NullLiteral(246) into InfixExpression: ==(247) at 1", "Insert ThrowStatement(252) into Block(253) at 0", "Insert SimpleName: DnsResolver(821) into TagElement: @link(822) at 0", "Insert SimpleName: SystemDefaultDnsResolver(825) into TagElement: @link(826) at 0", "Insert SimpleType: SystemDefaultDnsResolver(207) into ClassInstanceCreation(208) at 0", "Insert ClassInstanceCreation(251) into ThrowStatement(252) at 0", "Insert SimpleName: SystemDefaultDnsResolver(206) into SimpleType: SystemDefaultDnsResolver(207) at 0", "Update StringLiteral: \"Scheme registry amy not be null\"(238) to \"Scheme registry may not be null\"", "Insert SimpleType: IllegalArgumentException(249) into ClassInstanceCreation(251) at 0", "Insert StringLiteral: \"DNS resolver may not be null\"(250) into ClassInstanceCreation(251) at 1", "Insert SimpleName: IllegalArgumentException(248) into SimpleType: IllegalArgumentException(249) at 0", "Delete NullLiteral(206)", "Delete TagElement(801)", "Delete SimpleName: dnsResolver(826)", "Delete NullLiteral(827)", "Delete InfixExpression: !=(828)", "Delete SimpleName: InetAddress(835)", "Delete SimpleName: getAllByName(836)", "Delete SimpleName: host(837)", "Delete MethodInvocation(838)", "Delete ReturnStatement(839)", "Delete Block(840)", "Delete IfStatement(841)", "Delete Block(842)"]}}, {"PoolingClientConnectionManager_cluster": {"actions": [{"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: SystemDefaultDnsResolver to ClassInstanceCreation at 0", "INS SimpleName: SystemDefaultDnsResolver to SimpleType: SystemDefaultDnsResolver at 0"]}, {"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: SystemDefaultDnsResolver to ClassInstanceCreation at 0", "INS SimpleName: SystemDefaultDnsResolver to SimpleType: SystemDefaultDnsResolver at 0"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL SimpleName: dnsResolver", "operations": ["DEL SimpleName: dnsResolver"]}]}}, {"PoolingClientConnectionManager_diff": {"operations": ["Insert ClassInstanceCreation(200) into Assignment: =(201) at 1", "Insert ClassInstanceCreation(271) into Assignment: =(272) at 1", "Insert SimpleType: SystemDefaultDnsResolver(199) into ClassInstanceCreation(200) at 0", "Insert SimpleType: SystemDefaultDnsResolver(270) into ClassInstanceCreation(271) at 0", "Insert SimpleName: SystemDefaultDnsResolver(198) into SimpleType: SystemDefaultDnsResolver(199) at 0", "Insert SimpleName: SystemDefaultDnsResolver(269) into SimpleType: SystemDefaultDnsResolver(270) at 0", "Delete NullLiteral(198)", "Delete SimpleName: dnsResolver(267)"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}