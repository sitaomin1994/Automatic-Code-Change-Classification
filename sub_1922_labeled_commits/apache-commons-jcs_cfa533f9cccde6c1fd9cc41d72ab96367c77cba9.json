{"application": "apache-commons-jcs", "csha": "cfa533f9cccde6c1fd9cc41d72ab96367c77cba9", "files": [{"AbstractRemoteAuxiliaryCache_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 4", "MOV ImportDeclaration to CompilationUnit at 5", "MOV ImportDeclaration to CompilationUnit at 9", "MOV ImportDeclaration to CompilationUnit at 10", "MOV ImportDeclaration to CompilationUnit at 8", "MOV ImportDeclaration to CompilationUnit at 2", "MOV ImportDeclaration to CompilationUnit at 7", "MOV ImportDeclaration to CompilationUnit at 3", "MOV ImportDeclaration to CompilationUnit at 6", "MOV ImportDeclaration to CompilationUnit at 1", "MOV ImportDeclaration to CompilationUnit at 11"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleType: V to ParameterizedType: ICacheServiceNonLocal<K,V> at 2", "INS SimpleType: K to ParameterizedType: ICacheServiceNonLocal<K,V> at 1", "INS SimpleType: ICacheServiceNonLocal to ParameterizedType: ICacheServiceNonLocal<K,V> at 0", "INS SimpleName: V to SimpleType: V at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: prevRemote to VariableDeclarationFragment at 0", "INS SimpleName: ICacheServiceNonLocal to SimpleType: ICacheServiceNonLocal at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: K to SimpleType: K at 0", "INS ParameterizedType: ICacheServiceNonLocal<K,V> to VariableDeclarationStatement at 0"]}, {"root": "INS InstanceofExpression to IfStatement at 0", "operations": ["INS InstanceofExpression to IfStatement at 0", "INS SimpleName: prevRemote to InstanceofExpression at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from InstanceofExpression", "operations": ["MOV SimpleType: ZombieCacheServiceNonLocal to InstanceofExpression at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InstanceofExpression to IfStatement at 0"]}, {"root": "INS SimpleName: prevRemote to CastExpression at 1", "operations": ["INS SimpleName: prevRemote to CastExpression at 1"]}, {"root": "DEL InfixExpression: &&", "operations": ["DEL InfixExpression: !=", "DEL InfixExpression: &&", "DEL SimpleName: retVal", "DEL NullLiteral"]}, {"root": "DEL SimpleType: java.rmi.RemoteException", "operations": ["DEL QualifiedName: java.rmi.RemoteException", "DEL SimpleType: java.rmi.RemoteException"]}, {"root": "DEL InfixExpression: &&", "operations": ["DEL SimpleName: getRemoteCacheService", "DEL MethodInvocation", "DEL SimpleName: getRemoteCacheService", "DEL InfixExpression: &&", "DEL InstanceofExpression", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL NullLiteral"]}]}}, {"AbstractRemoteAuxiliaryCache_diff": {"operations": ["Move ImportDeclaration(45) into CompilationUnit(1926) at 1", "Move ImportDeclaration(47) into CompilationUnit(1926) at 2", "Move ImportDeclaration(49) into CompilationUnit(1926) at 3", "Move ImportDeclaration(51) into CompilationUnit(1926) at 4", "Move ImportDeclaration(53) into CompilationUnit(1926) at 5", "Move ImportDeclaration(55) into CompilationUnit(1926) at 6", "Move ImportDeclaration(57) into CompilationUnit(1926) at 7", "Move ImportDeclaration(59) into CompilationUnit(1926) at 8", "Move ImportDeclaration(61) into CompilationUnit(1926) at 9", "Move ImportDeclaration(63) into CompilationUnit(1926) at 10", "Move ImportDeclaration(65) into CompilationUnit(1926) at 11", "Insert VariableDeclarationStatement(1706) into Block(1768) at 1", "Insert ParameterizedType: ICacheServiceNonLocal<K,V>(1701) into VariableDeclarationStatement(1706) at 0", "Insert VariableDeclarationFragment(1705) into VariableDeclarationStatement(1706) at 1", "Insert InstanceofExpression(1710) into IfStatement(1767) at 0", "Insert SimpleType: ICacheServiceNonLocal(1696) into ParameterizedType: ICacheServiceNonLocal<K,V>(1701) at 0", "Insert SimpleType: K(1698) into ParameterizedType: ICacheServiceNonLocal<K,V>(1701) at 1", "Insert SimpleType: V(1700) into ParameterizedType: ICacheServiceNonLocal<K,V>(1701) at 2", "Insert SimpleName: prevRemote(1702) into VariableDeclarationFragment(1705) at 0", "Move MethodInvocation(1727) into VariableDeclarationFragment(1705) at 1", "Insert SimpleName: prevRemote(1707) into InstanceofExpression(1710) at 0", "Move SimpleType: ZombieCacheServiceNonLocal(1708) into InstanceofExpression(1710) at 1", "Move InstanceofExpression(455) into IfStatement(480) at 0", "Insert SimpleName: ICacheServiceNonLocal(1695) into SimpleType: ICacheServiceNonLocal(1696) at 0", "Insert SimpleName: K(1697) into SimpleType: K(1698) at 0", "Insert SimpleName: V(1699) into SimpleType: V(1700) at 0", "Insert SimpleName: prevRemote(1726) into CastExpression(1727) at 1", "Delete SimpleName: retVal(449)", "Delete NullLiteral(450)", "Delete InfixExpression: !=(451)", "Delete InfixExpression: &&(456)", "Delete QualifiedName: java.rmi.RemoteException(1273)", "Delete SimpleType: java.rmi.RemoteException(1274)", "Delete SimpleName: getRemoteCacheService(1701)", "Delete MethodInvocation(1702)", "Delete NullLiteral(1703)", "Delete InfixExpression: !=(1704)", "Delete SimpleName: getRemoteCacheService(1705)", "Delete MethodInvocation(1706)", "Delete InstanceofExpression(1709)", "Delete InfixExpression: &&(1710)"]}}, {"AbstractRemoteCacheListener_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 2", "MOV ImportDeclaration to CompilationUnit at 3", "MOV ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS MethodInvocation to InfixExpression: + at 1", "operations": ["INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: irca to MethodInvocation at 0", "MOV SimpleName: getRemoteHost to MethodInvocation at 1"]}, {"root": "UPDATE from getRemoteHost to getRemoteLocation", "operations": ["UPD SimpleName: getRemoteHost from getRemoteHost to getRemoteLocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: getRemotePort", "DEL StringLiteral: \"\\n RemotePort = \"", "DEL SimpleName: buf", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL SimpleName: irca", "DEL MethodInvocation", "DEL SimpleName: append"]}]}}, {"AbstractRemoteCacheListener_diff": {"operations": ["Move ImportDeclaration(33) into CompilationUnit(801) at 1", "Move ImportDeclaration(35) into CompilationUnit(801) at 2", "Move ImportDeclaration(37) into CompilationUnit(801) at 3", "Insert MethodInvocation(783) into InfixExpression: +(784) at 1", "Insert MethodInvocation(781) into MethodInvocation(783) at 0", "Insert SimpleName: toString(782) into MethodInvocation(783) at 1", "Move SimpleName: irca(779) into MethodInvocation(781) at 0", "Update SimpleName: getRemoteHost(780) to getRemoteLocation", "Move SimpleName: getRemoteHost(780) into MethodInvocation(781) at 1", "Delete MethodInvocation(781)", "Delete SimpleName: buf(785)", "Delete SimpleName: append(786)", "Delete StringLiteral: \"\\n RemotePort = \"(787)", "Delete SimpleName: irca(788)", "Delete SimpleName: getRemotePort(789)", "Delete MethodInvocation(790)", "Delete InfixExpression: +(791)", "Delete MethodInvocation(792)", "Delete ExpressionStatement(793)"]}}, {"CommonRemoteCacheAttributes_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 37", "operations": ["INS NullLiteral to InfixExpression: != at 1", "INS Block to IfStatement at 1", "INS FieldAccess to InfixExpression: != at 0", "INS IfStatement to Block at 2", "INS MethodDeclaration to TypeDeclaration: class at 37", "INS InfixExpression: != to IfStatement at 0", "INS Block to MethodDeclaration at 5"]}, {"root": "UPDATE from String to RemoteLocation", "operations": ["UPD SimpleName: String from String to RemoteLocation", "UPD SimpleType: String from String to RemoteLocation", "UPD SimpleName: String from String to RemoteLocation"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 3", "operations": ["INS PrimitiveType: void to MethodDeclaration at 3"]}, {"root": "INS SimpleName: setRemoteLocation to MethodDeclaration at 4", "operations": ["INS SimpleName: setRemoteLocation to MethodDeclaration at 4"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: RemoteLocation to SingleVariableDeclaration at 0", "INS SimpleName: location to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from setRemoteHost to setRemoteLocation", "operations": ["UPD SimpleName: setRemoteHost from setRemoteHost to setRemoteLocation"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: port to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "INS SimpleType: RemoteLocation to MethodDeclaration at 3", "operations": ["INS SimpleName: RemoteLocation to SimpleType: RemoteLocation at 0", "INS SimpleType: RemoteLocation to MethodDeclaration at 3"]}, {"root": "UPDATE from getRemotePort to getRemoteLocation", "operations": ["UPD SimpleName: getRemotePort from getRemotePort to getRemoteLocation"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: String to MethodDeclaration at 3", "MOV Javadoc to MethodDeclaration at 0", "MOV MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 2", "MOV SimpleName: setRemotePort to MethodDeclaration at 4"]}, {"root": "UPDATE from setRemotePort to toString", "operations": ["UPD SimpleName: setRemotePort from setRemotePort to toString"]}, {"root": "UPDATE from remoteHost to location", "operations": ["UPD SimpleName: remoteHost from remoteHost to location", "UPD SimpleName: remotePort from remotePort to location", "UPD SimpleName: remoteHost from remoteHost to location", "UPD SimpleName: remoteHost from remoteHost to location", "UPD SimpleName: remotePort from remotePort to location", "UPD SimpleName: remoteHost from remoteHost to location", "UPD SimpleName: remotePort from remotePort to location"]}, {"root": "UPDATE from @return to @param", "operations": ["UPD TagElement: @return from @return to @param"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: location to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0"]}, {"root": "INS TagElement: @param to Javadoc at 2", "operations": ["INS SimpleName: port to TagElement: @param at 0", "INS TextElement:  The new remotePort value to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 2"]}, {"root": "UPDATE from s to host", "operations": ["UPD SimpleName: s from s to host", "UPD SimpleName: s from s to host"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3", "MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 6", "MOV ExpressionStatement to Block at 5", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1", "MOV ReturnStatement to Block at 7", "MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 4"]}, {"root": "UPDATE from server host  to server host and port ", "operations": ["UPD TextElement: server host  from server host  to server host and port "]}, {"root": "UPDATE from Sets the remoteHost attribute of the RemoteCacheAttributes object. to Sets the location attribute of the RemoteCacheAttributes object.", "operations": ["UPD TextElement: Sets the remoteHost attribute of the RemoteCacheAttributes object. from Sets the remoteHost attribute of the RemoteCacheAttributes object. to Sets the location attribute of the RemoteCacheAttributes object.", "UPD TextElement: Gets the remoteHost attribute of the RemoteCacheAttributes object. from Gets the remoteHost attribute of the RemoteCacheAttributes object. to Sets the location attribute of the RemoteCacheAttributes object."]}, {"root": "INS SimpleName: location to TagElement: @return at 0", "operations": ["INS SimpleName: location to TagElement: @return at 0"]}, {"root": "UPDATE from  The remoteHost value to  The new location value", "operations": ["UPD TextElement:  The remoteHost value from  The remoteHost value to  The new location value"]}, {"root": "MOVE from SimpleType: RemoteLocation", "operations": ["MOV SimpleName: String to SimpleType: RemoteLocation at 0"]}, {"root": "UPDATE from Gets the remotePort attribute of the RemoteCacheAttributes object. to Gets the location attribute of the RemoteCacheAttributes object.", "operations": ["UPD TextElement: Gets the remotePort attribute of the RemoteCacheAttributes object. from Gets the remotePort attribute of the RemoteCacheAttributes object. to Gets the location attribute of the RemoteCacheAttributes object."]}, {"root": "UPDATE from  The remotePort value to  The remote location value", "operations": ["UPD TextElement:  The remotePort value from  The remotePort value to  The remote location value"]}, {"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS SimpleType: RemoteLocation to ClassInstanceCreation at 0", "INS SimpleName: RemoteLocation to SimpleType: RemoteLocation at 0", "INS SimpleName: host to ClassInstanceCreation at 1", "INS SimpleName: port to ClassInstanceCreation at 2", "INS ClassInstanceCreation to Assignment: = at 1"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV SimpleName: remoteHost to FieldAccess at 1", "MOV ThisExpression to FieldAccess at 0"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV ThisExpression to FieldAccess at 0", "MOV SimpleName: remotePort to FieldAccess at 1"]}, {"root": "INS MethodInvocation to InfixExpression: + at 1", "operations": ["INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: getCacheName to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to InfixExpression: + at 1", "operations": ["INS SimpleName: getHost to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: + at 1", "INS FieldAccess to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to InfixExpression: + at 1", "operations": ["INS SimpleName: getPort to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: + at 1", "INS FieldAccess to MethodInvocation at 0"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV ThisExpression to FieldAccess at 0", "MOV SimpleName: remoteHost to FieldAccess at 1"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV SimpleName: remotePort to FieldAccess at 1", "MOV ThisExpression to FieldAccess at 0"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: remotePort", "DEL Javadoc", "DEL PrimitiveType: int", "DEL TextElement: server port ", "DEL TagElement", "DEL FieldDeclaration", "DEL Modifier: private", "DEL VariableDeclarationFragment"]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleType: String"]}, {"root": "DEL SimpleName: getRemoteHost", "operations": ["DEL SimpleName: getRemoteHost"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL FieldAccess"]}, {"root": "DEL SimpleName: s", "operations": ["DEL SimpleName: s"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TextElement: <p>", "DEL SingleVariableDeclaration", "DEL FieldAccess", "DEL Block", "DEL PrimitiveType: int", "DEL SimpleName: p", "DEL MethodDeclaration", "DEL TagElement: @param", "DEL TextElement:  The new remotePort value", "DEL SimpleName: Override", "DEL SimpleName: p", "DEL Assignment: =", "DEL TagElement", "DEL Javadoc", "DEL PrimitiveType: void", "DEL TextElement: Sets the remotePort attribute of the RemoteCacheAttributes object.", "DEL MarkerAnnotation", "DEL SimpleName: p", "DEL ExpressionStatement"]}, {"root": "DEL FieldAccess", "operations": ["DEL FieldAccess"]}, {"root": "DEL FieldAccess", "operations": ["DEL FieldAccess"]}, {"root": "DEL SuperMethodInvocation", "operations": ["DEL SimpleName: getCacheName", "DEL SuperMethodInvocation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: toString"]}]}}, {"CommonRemoteCacheAttributes_diff": {"operations": ["Insert MethodDeclaration(649) into TypeDeclaration: class(650) at 35", "Update SimpleType: String(48) to RemoteLocation", "Insert PrimitiveType: void(299) into MethodDeclaration(312) at 3", "Insert SimpleName: setRemoteLocation(300) into MethodDeclaration(312) at 4", "Insert SingleVariableDeclaration(304) into MethodDeclaration(312) at 5", "Update SimpleName: setRemoteHost(326) to setRemoteLocation", "Insert SingleVariableDeclaration(334) into MethodDeclaration(346) at 6", "Insert SimpleType: RemoteLocation(357) into MethodDeclaration(364) at 3", "Update SimpleName: getRemotePort(349) to getRemoteLocation", "Move Javadoc(572) into MethodDeclaration(649) at 0", "Move MarkerAnnotation(574) into MethodDeclaration(649) at 1", "Move Modifier: public(365) into MethodDeclaration(649) at 2", "Move SimpleType: String(577) into MethodDeclaration(649) at 3", "Update SimpleName: setRemotePort(367) to toString", "Move SimpleName: setRemotePort(367) into MethodDeclaration(649) at 4", "Insert Block(648) into MethodDeclaration(649) at 5", "Update SimpleName: String(47) to RemoteLocation", "Update SimpleName: remoteHost(49) to location", "Update TagElement: @return(301) to @param", "Insert SimpleType: RemoteLocation(302) into SingleVariableDeclaration(304) at 0", "Insert SimpleName: location(303) into SingleVariableDeclaration(304) at 1", "Insert ExpressionStatement(310) into Block(311) at 0", "Insert TagElement: @param(321) into Javadoc(322) at 2", "Update SimpleName: s(329) to host", "Insert PrimitiveType: int(332) into SingleVariableDeclaration(334) at 0", "Insert SimpleName: port(333) into SingleVariableDeclaration(334) at 1", "Insert SimpleName: RemoteLocation(356) into SimpleType: RemoteLocation(357) at 0", "Move VariableDeclarationStatement(586) into Block(648) at 0", "Move ExpressionStatement(591) into Block(648) at 1", "Insert IfStatement(608) into Block(648) at 2", "Move ExpressionStatement(620) into Block(648) at 3", "Move ExpressionStatement(628) into Block(648) at 4", "Move ExpressionStatement(638) into Block(648) at 5", "Move ExpressionStatement(646) into Block(648) at 6", "Move ReturnStatement(650) into Block(648) at 7", "Update TextElement: server host (43) to server host and port ", "Update TextElement: Gets the remoteHost attribute of the RemoteCacheAttributes object.(297) to Sets the location attribute of the RemoteCacheAttributes object.", "Insert SimpleName: location(292) into TagElement: @param(294) at 0", "Update TextElement:  The remoteHost value(300) to  The new location value", "Update SimpleName: String(306) to RemoteLocation", "Move SimpleName: String(306) into SimpleType: RemoteLocation(302) at 0", "Insert Assignment: =(309) into ExpressionStatement(310) at 0", "Update TextElement: Sets the remoteHost attribute of the RemoteCacheAttributes object.(315) to Sets the location attribute of the RemoteCacheAttributes object.", "Update SimpleName: s(318) to host", "Insert SimpleName: port(319) into TagElement: @param(321) at 0", "Insert TextElement:  The new remotePort value(320) into TagElement: @param(321) at 1", "Update TextElement: Gets the remotePort attribute of the RemoteCacheAttributes object.(339) to Gets the location attribute of the RemoteCacheAttributes object.", "Update TextElement:  The remotePort value(342) to  The remote location value", "Insert InfixExpression: !=(582) into IfStatement(608) at 0", "Insert Block(607) into IfStatement(608) at 1", "Insert FieldAccess(307) into Assignment: =(309) at 0", "Insert SimpleName: location(308) into Assignment: =(309) at 1", "Insert ClassInstanceCreation(342) into Assignment: =(343) at 1", "Update SimpleName: remotePort(351) to location", "Insert FieldAccess(580) into InfixExpression: !=(582) at 0", "Insert NullLiteral(581) into InfixExpression: !=(582) at 1", "Move ExpressionStatement(601) into Block(607) at 0", "Move ExpressionStatement(611) into Block(607) at 1", "Move ThisExpression(309) into FieldAccess(307) at 0", "Update SimpleName: remoteHost(310) to location", "Move SimpleName: remoteHost(310) into FieldAccess(307) at 1", "Update SimpleName: remoteHost(332) to location", "Insert SimpleType: RemoteLocation(339) into ClassInstanceCreation(342) at 0", "Insert SimpleName: host(340) into ClassInstanceCreation(342) at 1", "Insert SimpleName: port(341) into ClassInstanceCreation(342) at 2", "Move ThisExpression(371) into FieldAccess(580) at 0", "Update SimpleName: remotePort(372) to location", "Move SimpleName: remotePort(372) into FieldAccess(580) at 1", "Insert MethodInvocation(613) into InfixExpression: +(615) at 1", "Insert SimpleName: RemoteLocation(338) into SimpleType: RemoteLocation(339) at 0", "Insert SimpleName: getCacheName(612) into MethodInvocation(613) at 0", "Insert MethodInvocation(590) into InfixExpression: +(592) at 1", "Insert MethodInvocation(602) into InfixExpression: +(604) at 1", "Insert FieldAccess(588) into MethodInvocation(590) at 0", "Insert SimpleName: getHost(589) into MethodInvocation(590) at 1", "Insert FieldAccess(600) into MethodInvocation(602) at 0", "Insert SimpleName: getPort(601) into MethodInvocation(602) at 1", "Move ThisExpression(595) into FieldAccess(588) at 0", "Update SimpleName: remoteHost(596) to location", "Move SimpleName: remoteHost(596) into FieldAccess(588) at 1", "Move ThisExpression(605) into FieldAccess(600) at 0", "Update SimpleName: remotePort(606) to location", "Move SimpleName: remotePort(606) into FieldAccess(600) at 1", "Delete TextElement: server port (52)", "Delete TagElement(53)", "Delete Javadoc(54)", "Delete Modifier: private(55)", "Delete PrimitiveType: int(56)", "Delete SimpleName: remotePort(57)", "Delete VariableDeclarationFragment(58)", "Delete FieldDeclaration(59)", "Delete SimpleType: String(307)", "Delete SimpleName: getRemoteHost(308)", "Delete FieldAccess(311)", "Delete ReturnStatement(312)", "Delete SimpleName: s(334)", "Delete PrimitiveType: int(348)", "Delete TextElement: Sets the remotePort attribute of the RemoteCacheAttributes object.(356)", "Delete TextElement: <p>(357)", "Delete TagElement(358)", "Delete SimpleName: p(359)", "Delete TextElement:  The new remotePort value(360)", "Delete TagElement: @param(361)", "Delete Javadoc(362)", "Delete SimpleName: Override(363)", "Delete MarkerAnnotation(364)", "Delete PrimitiveType: void(366)", "Delete PrimitiveType: int(368)", "Delete SimpleName: p(369)", "Delete SingleVariableDeclaration(370)", "Delete FieldAccess(373)", "Delete SimpleName: p(374)", "Delete Assignment: =(375)", "Delete ExpressionStatement(376)", "Delete Block(377)", "Delete MethodDeclaration(378)", "Delete FieldAccess(597)", "Delete FieldAccess(607)", "Delete SimpleName: getCacheName(615)", "Delete SuperMethodInvocation(616)", "Delete Modifier: public(575)", "Delete SimpleName: toString(578)", "Delete Block(651)", "Delete MethodDeclaration(652)"]}}, {"RemoteCache_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 1", "MOV ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS TextElement: for error notifications  to TagElement at 0", "INS Modifier: private to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS TagElement to Javadoc at 0", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS Javadoc to FieldDeclaration at 0", "INS SimpleType: RemoteCacheMonitor to FieldDeclaration at 2", "INS SimpleName: RemoteCacheMonitor to SimpleType: RemoteCacheMonitor at 0", "INS SimpleName: monitor to VariableDeclarationFragment at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleType: RemoteCacheMonitor to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: RemoteCacheMonitor to SimpleType: RemoteCacheMonitor at 0", "INS SimpleName: monitor to SingleVariableDeclaration at 1"]}, {"root": "INS TagElement: @param to Javadoc at 4", "operations": ["INS TextElement:  the cache monitor to TagElement: @param at 1", "INS SimpleName: monitor to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 4"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ThisExpression to FieldAccess at 0", "INS ExpressionStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: monitor to Assignment: = at 1", "INS SimpleName: monitor to FieldAccess at 1"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS InfixExpression: != to IfStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: ipAddress to Assignment: = at 0", "INS IfStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to Assignment: = at 1", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: toString to MethodInvocation at 1"]}, {"root": "INS TextElement:  the cache configuration to TagElement: @param at 1", "operations": ["INS TextElement:  the cache configuration to TagElement: @param at 1"]}, {"root": "INS TextElement:  the remote cache server handle to TagElement: @param at 1", "operations": ["INS TextElement:  the remote cache server handle to TagElement: @param at 1"]}, {"root": "INS TextElement:  a listener to TagElement: @param at 1", "operations": ["INS TextElement:  a listener to TagElement: @param at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: RemoteCacheNoWaitFacade<K,V> to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from RemoteCacheMonitor to monitor", "operations": ["UPD SimpleName: RemoteCacheMonitor from RemoteCacheMonitor to monitor"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: RemoteCacheMonitor to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: ex to ClassInstanceCreation at 1", "operations": ["INS SimpleName: ex to ClassInstanceCreation at 1"]}, {"root": "INS StringLiteral: \"(null)\" to VariableDeclarationFragment at 1", "operations": ["INS StringLiteral: \"(null)\" to VariableDeclarationFragment at 1"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV MethodInvocation to InfixExpression: != at 0", "MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getFacades to MethodInvocation at 1", "MOV SimpleName: RemoteCacheFactory to MethodInvocation at 0"]}, {"root": "UPDATE from getFacades to getFacade", "operations": ["UPD SimpleName: getFacades from getFacades to getFacade"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from getRemoteHost to getRemoteLocation", "operations": ["UPD SimpleName: getRemoteHost from getRemoteHost to getRemoteLocation", "UPD SimpleName: getRemotePort from getRemotePort to getRemoteLocation"]}, {"root": "UPDATE from \"Initiating failover, rcnf = \" to \"Initiating failover, rcnwf = \"", "operations": ["UPD StringLiteral: \"Initiating failover, rcnf = \" from \"Initiating failover, rcnf = \" to \"Initiating failover, rcnwf = \""]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getInstance"]}, {"root": "DEL SingleMemberAnnotation", "operations": ["DEL StringLiteral: \"unchecked\"", "DEL SimpleName: SuppressWarnings", "DEL SingleMemberAnnotation"]}, {"root": "DEL ParameterizedType: RemoteCacheNoWaitFacade<K,V>", "operations": ["DEL SimpleType: V", "DEL SimpleType: K", "DEL SimpleType: RemoteCacheNoWaitFacade", "DEL ParameterizedType: RemoteCacheNoWaitFacade<K,V>", "DEL SimpleName: K", "DEL SimpleName: V", "DEL SimpleName: RemoteCacheNoWaitFacade"]}, {"root": "DEL CastExpression", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL CastExpression", "DEL SimpleName: get"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getMessage", "DEL SimpleName: ex", "DEL MethodInvocation"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL InfixExpression: +", "DEL StringLiteral: \":\""]}]}}, {"RemoteCache_diff": {"operations": ["Move ImportDeclaration(25) into CompilationUnit(472) at 1", "Move ImportDeclaration(27) into CompilationUnit(472) at 2", "Insert FieldDeclaration(72) into TypeDeclaration: class(471) at 7", "Insert Javadoc(66) into FieldDeclaration(72) at 0", "Insert Modifier: private(67) into FieldDeclaration(72) at 1", "Insert SimpleType: RemoteCacheMonitor(69) into FieldDeclaration(72) at 2", "Insert VariableDeclarationFragment(71) into FieldDeclaration(72) at 3", "Insert SingleVariableDeclaration(119) into MethodDeclaration(139) at 6", "Insert TagElement(65) into Javadoc(66) at 0", "Insert SimpleName: RemoteCacheMonitor(68) into SimpleType: RemoteCacheMonitor(69) at 0", "Insert SimpleName: monitor(70) into VariableDeclarationFragment(71) at 0", "Insert TagElement: @param(90) into Javadoc(91) at 4", "Insert SimpleType: RemoteCacheMonitor(117) into SingleVariableDeclaration(119) at 0", "Insert SimpleName: monitor(118) into SingleVariableDeclaration(119) at 1", "Insert ExpressionStatement(129) into Block(138) at 1", "Insert IfStatement(466) into Block(469) at 1", "Insert TextElement: for error notifications (64) into TagElement(65) at 0", "Insert TextElement:  the cache configuration(80) into TagElement: @param(81) at 1", "Insert TextElement:  the remote cache server handle(83) into TagElement: @param(84) at 1", "Insert TextElement:  a listener(86) into TagElement: @param(87) at 1", "Insert SimpleName: monitor(88) into TagElement: @param(90) at 0", "Insert TextElement:  the cache monitor(89) into TagElement: @param(90) at 1", "Insert SimpleName: RemoteCacheMonitor(116) into SimpleType: RemoteCacheMonitor(117) at 0", "Insert Assignment: =(128) into ExpressionStatement(129) at 0", "Move ParameterizedType: RemoteCacheNoWaitFacade<K,V>(311) into VariableDeclarationStatement(333) at 0", "Insert InfixExpression: !=(454) into IfStatement(466) at 0", "Insert Block(465) into IfStatement(466) at 1", "Insert FieldAccess(126) into Assignment: =(128) at 0", "Insert SimpleName: monitor(127) into Assignment: =(128) at 1", "Update SimpleName: RemoteCacheMonitor(288) to monitor", "Move SimpleName: RemoteCacheMonitor(288) into MethodInvocation(315) at 0", "Insert MethodInvocation(331) into VariableDeclarationFragment(332) at 1", "Insert SimpleName: ex(387) into ClassInstanceCreation(388) at 1", "Insert StringLiteral: \"(null)\"(445) into VariableDeclarationFragment(446) at 1", "Move MethodInvocation(447) into InfixExpression: !=(454) at 0", "Insert NullLiteral(453) into InfixExpression: !=(454) at 1", "Insert ExpressionStatement(464) into Block(465) at 0", "Insert ThisExpression(124) into FieldAccess(126) at 0", "Insert SimpleName: monitor(125) into FieldAccess(126) at 1", "Move SimpleName: RemoteCacheFactory(312) into MethodInvocation(331) at 0", "Update SimpleName: getFacades(313) to getFacade", "Move SimpleName: getFacades(313) into MethodInvocation(331) at 1", "Move MethodInvocation(319) into MethodInvocation(331) at 2", "Update SimpleName: getRemotePort(446) to getRemoteLocation", "Insert Assignment: =(463) into ExpressionStatement(464) at 0", "Insert SimpleName: ipAddress(455) into Assignment: =(463) at 0", "Insert MethodInvocation(462) into Assignment: =(463) at 1", "Update StringLiteral: \"Initiating failover, rcnf = \"(329) to \"Initiating failover, rcnwf = \"", "Move MethodInvocation(441) into MethodInvocation(462) at 0", "Insert SimpleName: toString(461) into MethodInvocation(462) at 1", "Update SimpleName: getRemoteHost(440) to getRemoteLocation", "Delete SimpleName: getInstance(289)", "Delete MethodInvocation(290)", "Delete SimpleName: SuppressWarnings(294)", "Delete StringLiteral: \"unchecked\"(295)", "Delete SingleMemberAnnotation(296)", "Delete SimpleName: RemoteCacheNoWaitFacade(297)", "Delete SimpleType: RemoteCacheNoWaitFacade(298)", "Delete SimpleName: K(299)", "Delete SimpleType: K(300)", "Delete SimpleName: V(301)", "Delete SimpleType: V(302)", "Delete ParameterizedType: RemoteCacheNoWaitFacade<K,V>(303)", "Delete MethodInvocation(314)", "Delete SimpleName: get(315)", "Delete MethodInvocation(320)", "Delete CastExpression(321)", "Delete SimpleName: ex(377)", "Delete SimpleName: getMessage(378)", "Delete MethodInvocation(379)", "Delete StringLiteral: \":\"(442)", "Delete InfixExpression: +(448)"]}}, {"RemoteCacheAttributes_cluster": {"actions": [{"root": "UPDATE from String[] to RemoteLocation[]", "operations": ["UPD ArrayType: String[] from String[] to RemoteLocation[]", "UPD ArrayType: String[] from String[] to RemoteLocation[]", "UPD ArrayType: String[] from String[] to RemoteLocation[]"]}, {"root": "UPDATE from String to RemoteLocation", "operations": ["UPD SimpleType: String from String to RemoteLocation", "UPD SimpleName: String from String to RemoteLocation", "UPD SimpleName: String from String to RemoteLocation", "UPD SimpleType: String from String to RemoteLocation", "UPD SimpleType: String from String to RemoteLocation", "UPD SimpleName: String from String to RemoteLocation"]}]}}, {"RemoteCacheAttributes_diff": {"operations": ["Update ArrayType: String[](62) to RemoteLocation[]", "Update ArrayType: String[](163) to RemoteLocation[]", "Update SimpleType: String(60) to RemoteLocation", "Update SimpleType: String(161) to RemoteLocation", "Update ArrayType: String[](186) to RemoteLocation[]", "Update SimpleName: String(59) to RemoteLocation", "Update SimpleName: String(160) to RemoteLocation", "Update SimpleType: String(184) to RemoteLocation", "Update SimpleName: String(183) to RemoteLocation"]}}, {"RemoteCacheFactory_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.rmi.registry.Registry to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: java.util.concurrent.ConcurrentMap to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: java.util.concurrent.locks.Lock to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: java.util.concurrent.locks.ReentrantLock to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS ImportDeclaration to CompilationUnit at 11", "INS QualifiedName: org.apache.commons.jcs.auxiliary.remote.behavior.IRemoteCacheAttributes to ImportDeclaration at 0"]}, {"root": "UPDATE from java.util.HashMap to java.util.concurrent.ConcurrentHashMap", "operations": ["UPD QualifiedName: java.util.HashMap from java.util.HashMap to java.util.concurrent.ConcurrentHashMap"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 4", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS SimpleName: facades to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Javadoc to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleName: monitor to VariableDeclarationFragment at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: RemoteCacheMonitor to SimpleType: RemoteCacheMonitor at 0", "INS TextElement: Monitor thread  to TagElement at 0", "INS Modifier: static to FieldDeclaration at 2", "INS SimpleType: RemoteCacheMonitor to FieldDeclaration at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS Modifier: private to FieldDeclaration at 1", "INS TagElement to Javadoc at 0", "INS Javadoc to FieldDeclaration at 0", "INS TextElement: Contains mappings of RemoteLocation instance to RemoteCacheManager instance.  to TagElement at 0", "INS Modifier: static to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 6"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS Modifier: private to FieldDeclaration at 1", "INS TextElement: Lock for initialization of manager instances  to TagElement at 0", "INS SimpleName: Lock to SimpleType: Lock at 0", "INS Javadoc to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 2", "INS SimpleName: managerLock to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS TagElement to Javadoc at 0", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS SimpleType: Lock to FieldDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS TextElement: <p> to TagElement at 1", "INS Block to TryStatement at 1", "INS Modifier: static to MethodDeclaration at 2", "INS SimpleName: ins to InfixExpression: == at 0", "INS Block to TryStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS ExpressionStatement to Block at 0", "INS TextElement: <p> to TagElement at 6", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: loc to MethodInvocation at 2", "INS SimpleName: ins to MethodInvocation at 3", "INS TagElement: @param to Javadoc at 4", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Javadoc to MethodDeclaration at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleType: IRemoteCacheAttributes to SingleVariableDeclaration at 0", "INS SimpleType: ICacheEventLogger to SingleVariableDeclaration at 0", "INS TextElement: If the connection cannot be established, zombie objects will be used for future recovery to TagElement at 4", "INS QualifiedName: Registry.REGISTRY_PORT to MethodInvocation at 3", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: cacheMgr to TagElement: @param at 0", "INS SimpleName: cacheEventLogger to TagElement: @param at 0", "INS TryStatement to Block at 1", "INS Block to IfStatement at 1", "INS StringLiteral: \"\" to MethodInvocation at 2", "INS NullLiteral to InfixExpression: == at 1", "INS TextElement:  The instance value to TagElement: @return at 0", "INS SimpleName: cattr to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: get to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: managerLock to MethodInvocation at 0", "INS NullLiteral to InfixExpression: == at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: cattr to MethodInvocation at 0", "INS SimpleName: RemoteCacheManager to SimpleType: RemoteCacheManager at 0", "INS SimpleName: cacheMgr to ClassInstanceCreation at 2", "INS SimpleName: getManager to MethodDeclaration at 4", "INS TextElement: Returns an instance of RemoteCacheManager for the given connection parameters. to TagElement at 0", "INS SimpleType: RemoteLocation to VariableDeclarationStatement at 0", "INS TagElement: @return to Javadoc at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS TextElement: purposes. to TagElement at 5", "INS SimpleName: ICacheEventLogger to SimpleType: ICacheEventLogger at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: monitor to MethodInvocation at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: loc to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 2", "INS TextElement: Host and Port uniquely identify a manager instance. to TagElement at 2", "INS SimpleName: ICompositeCacheManager to SimpleType: ICompositeCacheManager at 0", "INS SimpleName: addManager to MethodInvocation at 1", "INS SimpleName: cacheMgr to SingleVariableDeclaration at 1", "INS SimpleName: managers to MethodInvocation at 0", "INS SimpleName: monitor to ClassInstanceCreation at 3", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: IRemoteCacheAttributes to SimpleType: IRemoteCacheAttributes at 0", "INS SimpleName: cattr to MethodInvocation at 0", "INS SimpleName: elementSerializer to ClassInstanceCreation at 5", "INS SimpleName: RemoteCacheManager to SimpleType: RemoteCacheManager at 0", "INS SimpleName: lock to MethodInvocation at 1", "INS SimpleName: managers to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleType: RemoteCacheManager to MethodDeclaration at 3", "INS SimpleName: getRemoteLocation to MethodInvocation at 1", "INS SimpleName: cattr to SingleVariableDeclaration at 1", "INS SimpleName: ins to Assignment: = at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: cacheEventLogger to SingleVariableDeclaration at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ins to Assignment: = at 0", "INS SimpleName: elementSerializer to SingleVariableDeclaration at 1", "INS IfStatement to Block at 1", "INS SimpleName: setRemoteLocation to MethodInvocation at 1", "INS InfixExpression: == to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: managerLock to MethodInvocation at 0", "INS SimpleName: ins to MethodInvocation at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS ExpressionStatement to Block at 0", "INS SimpleName: unlock to MethodInvocation at 1", "INS TagElement: @param to Javadoc at 3", "INS IfStatement to Block at 0", "INS SimpleName: managers to MethodInvocation at 0", "INS IfStatement to Block at 3", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: cacheEventLogger to ClassInstanceCreation at 4", "INS SimpleName: cattr to TagElement: @param at 0", "INS SimpleName: ins to InfixExpression: == at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: RemoteLocation to SimpleType: RemoteLocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: ICompositeCacheManager to SingleVariableDeclaration at 0", "INS SimpleName: IElementSerializer to SimpleType: IElementSerializer at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS TagElement to Javadoc at 0", "INS Block to MethodDeclaration at 9", "INS ReturnStatement to Block at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: elementSerializer to TagElement: @param at 0", "INS SimpleName: cattr to ClassInstanceCreation at 1", "INS SimpleName: RemoteCacheManager to SimpleType: RemoteCacheManager at 0", "INS SimpleType: IElementSerializer to SingleVariableDeclaration at 0", "INS SimpleName: getRemoteLocation to MethodInvocation at 1", "INS SimpleName: loc to MethodInvocation at 2", "INS SimpleName: ins to ReturnStatement at 0", "INS SimpleType: RemoteCacheManager to ClassInstanceCreation at 0", "INS SimpleName: ins to VariableDeclarationFragment at 0", "INS SimpleName: loc to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 1", "INS TextElement: <p> to TagElement at 3", "INS SimpleType: RemoteCacheManager to VariableDeclarationStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: facades to Assignment: = at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: ReentrantLock to SimpleType: ReentrantLock at 0", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: RemoteCacheManager to SimpleType: RemoteCacheManager at 0", "INS ExpressionStatement to Block at 1", "INS SimpleType: RemoteLocation to ParameterizedType: ConcurrentHashMap<RemoteLocation,RemoteCacheManager> at 1", "INS ExpressionStatement to Block at 2", "INS ExpressionStatement to Block at 3", "INS SimpleType: ConcurrentHashMap to ParameterizedType: ConcurrentHashMap<RemoteLocation,RemoteCacheManager> at 0", "INS SimpleType: ReentrantLock to ClassInstanceCreation at 0", "INS SimpleName: initialize to MethodRef at 1", "INS SimpleName: managerLock to Assignment: = at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SuperMethodInvocation to ExpressionStatement at 0", "INS ParameterizedType: ConcurrentHashMap<RemoteLocation,RemoteCacheManager> to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 5", "INS SimpleName: setDaemon to MethodInvocation at 1", "INS PrimitiveType: void to MethodDeclaration at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: initialize to MethodDeclaration at 4", "INS ExpressionStatement to Block at 4", "INS ClassInstanceCreation to Assignment: = at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: RemoteCacheMonitor to SimpleType: RemoteCacheMonitor at 0", "INS Block to MethodDeclaration at 5", "INS QualifiedName: org.apache.commons.jcs.auxiliary.AbstractAuxiliaryCacheFactory to MethodRef at 0", "INS SimpleName: RemoteLocation to SimpleType: RemoteLocation at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: managers to Assignment: = at 0", "INS TagElement: @see to Javadoc at 0", "INS SimpleName: monitor to Assignment: = at 0", "INS SimpleName: ConcurrentHashMap to SimpleType: ConcurrentHashMap at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleType: RemoteCacheMonitor to ClassInstanceCreation at 0", "INS SimpleName: initialize to SuperMethodInvocation at 0", "INS SimpleName: monitor to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodRef to TagElement: @see at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS BooleanLiteral: true to MethodInvocation at 2", "INS SimpleType: RemoteCacheManager to ParameterizedType: ConcurrentHashMap<RemoteLocation,RemoteCacheManager> at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleName: RemoteCacheManager to SimpleType: RemoteCacheManager at 0", "INS NumberLiteral: 5000 to MethodInvocation at 2", "INS SimpleName: monitor to Assignment: = at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: manager to MethodInvocation at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: clear to MethodInvocation at 1", "INS QualifiedName: org.apache.commons.jcs.auxiliary.AbstractAuxiliaryCacheFactory to MethodRef at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS Block to IfStatement at 1", "INS SimpleName: InterruptedException to SimpleType: InterruptedException at 0", "INS SimpleName: notifyShutdown to MethodInvocation at 1", "INS SuperMethodInvocation to ExpressionStatement at 0", "INS SimpleName: monitor to MethodInvocation at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: managers to MethodInvocation at 0", "INS SimpleName: dispose to MethodRef at 1", "INS CatchClause to TryStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: monitor to InfixExpression: != at 0", "INS PrimitiveType: void to MethodDeclaration at 3", "INS TryStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: managers to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS EnhancedForStatement to Block at 0", "INS SimpleName: dispose to MethodDeclaration at 4", "INS ExpressionStatement to Block at 2", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleType: InterruptedException to SingleVariableDeclaration at 0", "INS NullLiteral to InfixExpression: != at 1", "INS IfStatement to Block at 2", "INS Block to TryStatement at 0", "INS NullLiteral to Assignment: = at 1", "INS SimpleName: monitor to MethodInvocation at 0", "INS SimpleType: RemoteCacheManager to SingleVariableDeclaration at 0", "INS SimpleName: values to MethodInvocation at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS TagElement: @see to Javadoc at 0", "INS SimpleName: release to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: manager to SingleVariableDeclaration at 1", "INS MethodRef to TagElement: @see at 0", "INS Block to EnhancedForStatement at 2", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: join to MethodInvocation at 1", "INS SimpleName: dispose to SuperMethodInvocation at 0"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV Modifier: private to FieldDeclaration at 1", "MOV Modifier: final to FieldDeclaration at 1", "MOV Modifier: static to FieldDeclaration at 2", "MOV Javadoc to FieldDeclaration at 0", "MOV VariableDeclarationFragment to FieldDeclaration at 4", "MOV ParameterizedType: HashMap<String,RemoteCacheNoWaitFacade<?,?>> to FieldDeclaration at 3"]}, {"root": "UPDATE from HashMap<String,RemoteCacheNoWaitFacade<?,?>> to ConcurrentMap<String,RemoteCacheNoWaitFacade<?,?>>", "operations": ["UPD ParameterizedType: HashMap<String,RemoteCacheNoWaitFacade<?,?>> from HashMap<String,RemoteCacheNoWaitFacade<?,?>> to ConcurrentMap<String,RemoteCacheNoWaitFacade<?,?>>"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV ParameterizedType: HashMap<String,RemoteCacheNoWaitFacade<?,?>> to FieldDeclaration at 3"]}, {"root": "UPDATE from final to private", "operations": ["UPD Modifier: final from final to private"]}, {"root": "UPDATE from HashMap<String,RemoteCacheNoWaitFacade<?,?>> to ConcurrentMap<RemoteLocation,RemoteCacheManager>", "operations": ["UPD ParameterizedType: HashMap<String,RemoteCacheNoWaitFacade<?,?>> from HashMap<String,RemoteCacheNoWaitFacade<?,?>> to ConcurrentMap<RemoteLocation,RemoteCacheManager>"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 1", "operations": ["INS SingleMemberAnnotation to MethodDeclaration at 1", "INS StringLiteral: \"unchecked\" to SingleMemberAnnotation at 1", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0"]}, {"root": "INS TypeParameter to MethodDeclaration at 4", "operations": ["INS SimpleName: K to TypeParameter at 0", "INS TypeParameter to MethodDeclaration at 4"]}, {"root": "INS TypeParameter to MethodDeclaration at 5", "operations": ["INS SimpleName: V to TypeParameter at 0", "INS TypeParameter to MethodDeclaration at 5"]}, {"root": "INS ParameterizedType: RemoteCacheNoWaitFacade<K,V> to MethodDeclaration at 6", "operations": ["INS SimpleName: K to SimpleType: K at 0", "INS SimpleType: RemoteCacheNoWaitFacade to ParameterizedType: RemoteCacheNoWaitFacade<K,V> at 0", "INS SimpleType: K to ParameterizedType: RemoteCacheNoWaitFacade<K,V> at 1", "INS SimpleName: RemoteCacheNoWaitFacade to SimpleType: RemoteCacheNoWaitFacade at 0", "INS ParameterizedType: RemoteCacheNoWaitFacade<K,V> to MethodDeclaration at 6", "INS SimpleType: V to ParameterizedType: RemoteCacheNoWaitFacade<K,V> at 2", "INS SimpleName: V to SimpleType: V at 0"]}, {"root": "UPDATE from getFacades to getFacade", "operations": ["UPD SimpleName: getFacades from getFacades to getFacade"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 9", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 9", "INS SimpleName: cacheName to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from HashMap to ConcurrentMap", "operations": ["UPD SimpleType: HashMap from HashMap to ConcurrentMap", "UPD SimpleType: HashMap from HashMap to ConcurrentMap", "UPD SimpleName: HashMap from HashMap to ConcurrentMap", "UPD SimpleName: HashMap from HashMap to ConcurrentMap"]}, {"root": "UPDATE from String to RemoteLocation", "operations": ["UPD SimpleName: String from String to RemoteLocation", "UPD SimpleName: String from String to RemoteLocation", "UPD SimpleType: String from String to RemoteLocation", "UPD SimpleName: server from server to RemoteLocation", "UPD SimpleName: failovers from failovers to RemoteLocation", "UPD SimpleType: String from String to RemoteLocation", "UPD SimpleType: String from String to RemoteLocation", "UPD SimpleName: String from String to RemoteLocation"]}, {"root": "UPDATE from RemoteCacheNoWaitFacade to RemoteCacheManager", "operations": ["UPD SimpleType: RemoteCacheNoWaitFacade from RemoteCacheNoWaitFacade to RemoteCacheManager", "UPD SimpleName: RemoteCacheNoWaitFacade from RemoteCacheNoWaitFacade to RemoteCacheManager"]}, {"root": "MOVE from ParameterizedType: HashMap<String,RemoteCacheNoWaitFacade<?,?>>", "operations": ["MOV SimpleType: RemoteCacheNoWaitFacade to ParameterizedType: HashMap<String,RemoteCacheNoWaitFacade<?,?>> at 2"]}, {"root": "UPDATE from facades to managers", "operations": ["UPD SimpleName: facades from facades to managers"]}, {"root": "INS SwitchStatement to Block at 2", "operations": ["INS SwitchStatement to Block at 2", "INS VariableDeclarationStatement to SwitchStatement at 2", "INS SwitchCase to SwitchStatement at 1", "INS ExpressionStatement to SwitchStatement at 7", "INS IfStatement to SwitchStatement at 4", "INS BreakStatement to SwitchStatement at 12", "INS SwitchCase to SwitchStatement at 9", "INS BreakStatement to SwitchStatement at 8", "INS WhileStatement to SwitchStatement at 11", "INS SimpleName: CLUSTER to SwitchCase at 0", "INS SimpleName: LOCAL to SwitchCase at 0"]}, {"root": "INS TagElement: @param to Javadoc at 1", "operations": ["INS SimpleName: cacheName to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 1", "INS TextElement:  the name of the  cache facade to TagElement: @param at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV MethodInvocation to SwitchStatement at 0"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV VariableDeclarationStatement to SwitchStatement at 5", "MOV VariableDeclarationStatement to SwitchStatement at 3", "MOV IfStatement to SwitchStatement at 6"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV VariableDeclarationStatement to SwitchStatement at 10"]}, {"root": "UPDATE from  Returns the facades. to  Returns the facade for the given name.", "operations": ["UPD TextElement:  Returns the facades. from  Returns the facades. to  Returns the facade for the given name."]}, {"root": "INS CastExpression to ReturnStatement at 0", "operations": ["INS ParameterizedType: RemoteCacheNoWaitFacade<K,V> to CastExpression at 0", "INS SimpleType: K to ParameterizedType: RemoteCacheNoWaitFacade<K,V> at 1", "INS CastExpression to ReturnStatement at 0", "INS SimpleType: RemoteCacheNoWaitFacade to ParameterizedType: RemoteCacheNoWaitFacade<K,V> at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: K to SimpleType: K at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: RemoteCacheNoWaitFacade to SimpleType: RemoteCacheNoWaitFacade at 0", "INS SimpleName: cacheName to MethodInvocation at 2", "INS SimpleName: facades to MethodInvocation at 0", "INS SimpleName: V to SimpleType: V at 0", "INS SimpleType: V to ParameterizedType: RemoteCacheNoWaitFacade<K,V> at 2"]}, {"root": "UPDATE from ArrayList<String> to ArrayList<RemoteLocation>", "operations": ["UPD ParameterizedType: ArrayList<String> from ArrayList<String> to ArrayList<RemoteLocation>", "UPD ParameterizedType: ArrayList<String> from ArrayList<String> to ArrayList<RemoteLocation>"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: ArrayList<String> to VariableDeclarationStatement at 0", "MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from WhileStatement", "operations": ["MOV MethodInvocation to WhileStatement at 0", "MOV Block to WhileStatement at 1"]}, {"root": "UPDATE from getFacades to facades", "operations": ["UPD SimpleName: getFacades from getFacades to facades"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getFacades to MethodInvocation at 0"]}, {"root": "MOVE from ParameterizedType: ArrayList<String>", "operations": ["MOV SimpleType: ArrayList to ParameterizedType: ArrayList<String> at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: RemoteLocation to SimpleType: RemoteLocation at 0", "INS SimpleType: RemoteLocation to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: location to VariableDeclarationFragment at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS IfStatement to Block at 2", "INS Block to IfStatement at 1", "INS SimpleName: location to InfixExpression: != at 0", "INS InfixExpression: != to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "UPDATE from HashMap<String,RemoteCacheNoWaitFacade<?,?>> to ConcurrentHashMap<String,RemoteCacheNoWaitFacade<?,?>>", "operations": ["UPD ParameterizedType: HashMap<String,RemoteCacheNoWaitFacade<?,?>> from HashMap<String,RemoteCacheNoWaitFacade<?,?>> to ConcurrentHashMap<String,RemoteCacheNoWaitFacade<?,?>>"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ParameterizedType: HashMap<String,RemoteCacheNoWaitFacade<?,?>> to ClassInstanceCreation at 0"]}, {"root": "UPDATE from getRemoteHost to getRemoteLocation", "operations": ["UPD SimpleName: getRemoteHost from getRemoteHost to getRemoteLocation", "UPD SimpleName: getRemoteHost from getRemoteHost to getRemoteLocation"]}, {"root": "UPDATE from HashMap to ConcurrentHashMap", "operations": ["UPD SimpleType: HashMap from HashMap to ConcurrentHashMap", "UPD SimpleName: HashMap from HashMap to ConcurrentHashMap"]}, {"root": "MOVE from ParameterizedType: ArrayList<String>", "operations": ["MOV SimpleType: ArrayList to ParameterizedType: ArrayList<String> at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS VariableDeclarationStatement to Block at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: location to VariableDeclarationFragment at 0", "INS SimpleType: RemoteLocation to VariableDeclarationStatement at 0", "INS SimpleName: RemoteLocation to SimpleType: RemoteLocation at 0"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS IfStatement to Block at 3", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: location to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS Block to IfStatement at 1"]}, {"root": "UPDATE from String[] to RemoteLocation[]", "operations": ["UPD ArrayType: String[] from String[] to RemoteLocation[]"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4", "MOV ExpressionStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 3", "MOV ExpressionStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getRemoteHost to MethodInvocation at 1", "MOV SimpleName: rca to MethodInvocation at 0"]}, {"root": "UPDATE from RemoteCacheManager to getManager", "operations": ["UPD SimpleName: RemoteCacheManager from RemoteCacheManager to getManager", "UPD SimpleName: RemoteCacheManager from RemoteCacheManager to getManager", "UPD SimpleName: RemoteCacheManager from RemoteCacheManager to getManager"]}, {"root": "INS SimpleType: RemoteLocation to ArrayType: String[] at 0", "operations": ["INS SimpleName: RemoteLocation to SimpleType: RemoteLocation at 0", "INS SimpleType: RemoteLocation to ArrayType: String[] at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: server to MethodInvocation at 0", "MOV SimpleName: substring to MethodInvocation at 1"]}, {"root": "UPDATE from substring to parseServerAndPort", "operations": ["UPD SimpleName: substring from substring to parseServerAndPort", "UPD SimpleName: add from add to parseServerAndPort"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: server to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from setRemotePort to setRemoteLocation", "operations": ["UPD SimpleName: setRemotePort from setRemotePort to setRemoteLocation"]}, {"root": "UPDATE from Integer to location", "operations": ["UPD SimpleName: Integer from Integer to location", "UPD SimpleName: server from server to location"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Integer to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: add to MethodInvocation at 1", "MOV SimpleName: server to MethodInvocation at 2", "MOV SimpleName: failovers to MethodInvocation at 0"]}, {"root": "UPDATE from RemoteUtils to failovers", "operations": ["UPD SimpleName: RemoteUtils from RemoteUtils to failovers"]}, {"root": "UPDATE from parseServerAndPort to add", "operations": ["UPD SimpleName: parseServerAndPort from parseServerAndPort to add"]}, {"root": "DEL ParameterizedType: RemoteCacheNoWaitFacade<?,?>", "operations": ["DEL WildcardType: ?", "DEL WildcardType: ?", "DEL ParameterizedType: RemoteCacheNoWaitFacade<?,?>"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL MethodInvocation", "DEL InfixExpression: +", "DEL SimpleName: getRemotePort", "DEL MethodInvocation", "DEL SimpleName: rca", "DEL StringLiteral: \":\""]}, {"root": "DEL SimpleName: getInstance", "operations": ["DEL SimpleName: getInstance"]}, {"root": "DEL SimpleName: rca", "operations": ["DEL SimpleName: rca"]}, {"root": "DEL SimpleName: getInstance", "operations": ["DEL SimpleName: getInstance"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: server", "DEL SimpleName: substring", "DEL SimpleName: server", "DEL SimpleName: indexOf", "DEL MethodInvocation", "DEL StringLiteral: \":\"", "DEL SimpleName: parseInt", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: getInstance", "operations": ["DEL SimpleName: getInstance"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: setRemoteHost", "DEL SimpleName: indexOf", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: rca", "DEL MethodInvocation", "DEL StringLiteral: \":\"", "DEL NumberLiteral: 0", "DEL ExpressionStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL QualifiedName: RemoteType.LOCAL", "DEL Block", "DEL WhileStatement", "DEL InfixExpression: ==", "DEL QualifiedName: RemoteType.CLUSTER", "DEL MethodInvocation", "DEL SimpleName: getRemoteType", "DEL IfStatement", "DEL SimpleName: rca", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL IfStatement", "DEL InfixExpression: ==", "DEL Block"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL SimpleName: facades", "operations": ["DEL SimpleName: facades"]}]}}, {"RemoteCacheFactory_diff": {"operations": ["Move ImportDeclaration(5) into CompilationUnit(802) at 4", "Insert ImportDeclaration(3) into CompilationUnit(802) at 1", "Insert ImportDeclaration(11) into CompilationUnit(802) at 5", "Insert ImportDeclaration(13) into CompilationUnit(802) at 6", "Insert ImportDeclaration(15) into CompilationUnit(802) at 7", "Insert ImportDeclaration(23) into CompilationUnit(802) at 11", "Insert QualifiedName: java.rmi.registry.Registry(2) into ImportDeclaration(3) at 0", "Update QualifiedName: java.util.HashMap(4) to java.util.concurrent.ConcurrentHashMap", "Insert QualifiedName: java.util.concurrent.ConcurrentMap(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: java.util.concurrent.locks.Lock(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: java.util.concurrent.locks.ReentrantLock(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: org.apache.commons.jcs.auxiliary.remote.behavior.IRemoteCacheAttributes(22) into ImportDeclaration(23) at 0", "Insert FieldDeclaration(61) into TypeDeclaration: class(801) at 4", "Insert FieldDeclaration(71) into TypeDeclaration: class(801) at 5", "Insert FieldDeclaration(86) into TypeDeclaration: class(801) at 6", "Insert FieldDeclaration(96) into TypeDeclaration: class(801) at 7", "Insert MethodDeclaration(685) into TypeDeclaration: class(801) at 10", "Insert MethodDeclaration(742) into TypeDeclaration: class(801) at 11", "Insert MethodDeclaration(800) into TypeDeclaration: class(801) at 12", "Move Javadoc(36) into FieldDeclaration(61) at 0", "Move Modifier: private(37) into FieldDeclaration(61) at 1", "Move Modifier: static(38) into FieldDeclaration(61) at 2", "Update ParameterizedType: HashMap<String,RemoteCacheNoWaitFacade<?,?>>(60) to ConcurrentMap<String,RemoteCacheNoWaitFacade<?,?>>", "Move ParameterizedType: HashMap<String,RemoteCacheNoWaitFacade<?,?>>(60) into FieldDeclaration(61) at 3", "Insert VariableDeclarationFragment(60) into FieldDeclaration(61) at 4", "Insert Javadoc(64) into FieldDeclaration(71) at 0", "Update Modifier: final(39) to private", "Move Modifier: final(39) into FieldDeclaration(71) at 1", "Insert Modifier: static(66) into FieldDeclaration(71) at 2", "Insert SimpleType: RemoteCacheMonitor(68) into FieldDeclaration(71) at 3", "Insert VariableDeclarationFragment(70) into FieldDeclaration(71) at 4", "Insert Javadoc(74) into FieldDeclaration(86) at 0", "Insert Modifier: private(75) into FieldDeclaration(86) at 1", "Insert Modifier: static(76) into FieldDeclaration(86) at 2", "Update ParameterizedType: HashMap<String,RemoteCacheNoWaitFacade<?,?>>(49) to ConcurrentMap<RemoteLocation,RemoteCacheManager>", "Move ParameterizedType: HashMap<String,RemoteCacheNoWaitFacade<?,?>>(49) into FieldDeclaration(86) at 3", "Move VariableDeclarationFragment(62) into FieldDeclaration(86) at 4", "Insert Javadoc(89) into FieldDeclaration(96) at 0", "Insert Modifier: private(90) into FieldDeclaration(96) at 1", "Insert Modifier: static(91) into FieldDeclaration(96) at 2", "Insert SimpleType: Lock(93) into FieldDeclaration(96) at 3", "Insert VariableDeclarationFragment(95) into FieldDeclaration(96) at 4", "Insert SingleMemberAnnotation(528) into MethodDeclaration(561) at 1", "Insert TypeParameter(532) into MethodDeclaration(561) at 4", "Insert TypeParameter(534) into MethodDeclaration(561) at 5", "Insert ParameterizedType: RemoteCacheNoWaitFacade<K,V>(541) into MethodDeclaration(561) at 6", "Update SimpleName: getFacades(516) to getFacade", "Insert SingleVariableDeclaration(546) into MethodDeclaration(561) at 8", "Insert Javadoc(580) into MethodDeclaration(685) at 0", "Insert Modifier: public(581) into MethodDeclaration(685) at 1", "Insert Modifier: static(582) into MethodDeclaration(685) at 2", "Insert SimpleType: RemoteCacheManager(584) into MethodDeclaration(685) at 3", "Insert SimpleName: getManager(585) into MethodDeclaration(685) at 4", "Insert SingleVariableDeclaration(589) into MethodDeclaration(685) at 5", "Insert SingleVariableDeclaration(593) into MethodDeclaration(685) at 6", "Insert SingleVariableDeclaration(597) into MethodDeclaration(685) at 7", "Insert SingleVariableDeclaration(601) into MethodDeclaration(685) at 8", "Insert Block(684) into MethodDeclaration(685) at 9", "Insert Javadoc(690) into MethodDeclaration(742) at 0", "Insert MarkerAnnotation(692) into MethodDeclaration(742) at 1", "Insert Modifier: public(693) into MethodDeclaration(742) at 2", "Insert PrimitiveType: void(694) into MethodDeclaration(742) at 3", "Insert SimpleName: initialize(695) into MethodDeclaration(742) at 4", "Insert Block(741) into MethodDeclaration(742) at 5", "Insert Javadoc(747) into MethodDeclaration(800) at 0", "Insert MarkerAnnotation(749) into MethodDeclaration(800) at 1", "Insert Modifier: public(750) into MethodDeclaration(800) at 2", "Insert PrimitiveType: void(751) into MethodDeclaration(800) at 3", "Insert SimpleName: dispose(752) into MethodDeclaration(800) at 4", "Insert Block(799) into MethodDeclaration(800) at 5", "Update SimpleType: HashMap(52) to ConcurrentMap", "Insert SimpleName: facades(59) into VariableDeclarationFragment(60) at 0", "Insert TagElement(63) into Javadoc(64) at 0", "Insert SimpleName: RemoteCacheMonitor(67) into SimpleType: RemoteCacheMonitor(68) at 0", "Insert SimpleName: monitor(69) into VariableDeclarationFragment(70) at 0", "Insert TagElement(73) into Javadoc(74) at 0", "Update SimpleType: HashMap(41) to ConcurrentMap", "Update SimpleType: String(43) to RemoteLocation", "Update SimpleType: RemoteCacheNoWaitFacade(45) to RemoteCacheManager", "Move SimpleType: RemoteCacheNoWaitFacade(45) into ParameterizedType: ConcurrentMap<RemoteLocation,RemoteCacheManager>(83) at 2", "Update SimpleName: facades(50) to managers", "Insert TagElement(88) into Javadoc(89) at 0", "Insert SimpleName: Lock(92) into SimpleType: Lock(93) at 0", "Insert SimpleName: managerLock(94) into VariableDeclarationFragment(95) at 0", "Insert SwitchStatement(458) into Block(516) at 2", "Insert TagElement: @param(522) into Javadoc(525) at 1", "Insert SimpleName: SuppressWarnings(526) into SingleMemberAnnotation(528) at 0", "Insert StringLiteral: \"unchecked\"(527) into SingleMemberAnnotation(528) at 1", "Insert SimpleName: K(531) into TypeParameter(532) at 0", "Insert SimpleName: V(533) into TypeParameter(534) at 0", "Insert SimpleType: RemoteCacheNoWaitFacade(536) into ParameterizedType: RemoteCacheNoWaitFacade<K,V>(541) at 0", "Insert SimpleType: K(538) into ParameterizedType: RemoteCacheNoWaitFacade<K,V>(541) at 1", "Insert SimpleType: V(540) into ParameterizedType: RemoteCacheNoWaitFacade<K,V>(541) at 2", "Move SimpleType: String(330) into SingleVariableDeclaration(546) at 0", "Insert SimpleName: cacheName(545) into SingleVariableDeclaration(546) at 1", "Insert TagElement(569) into Javadoc(580) at 0", "Insert TagElement: @param(571) into Javadoc(580) at 1", "Insert TagElement: @param(573) into Javadoc(580) at 2", "Insert TagElement: @param(575) into Javadoc(580) at 3", "Insert TagElement: @param(577) into Javadoc(580) at 4", "Insert TagElement: @return(579) into Javadoc(580) at 5", "Insert SimpleName: RemoteCacheManager(583) into SimpleType: RemoteCacheManager(584) at 0", "Insert SimpleType: IRemoteCacheAttributes(587) into SingleVariableDeclaration(589) at 0", "Insert SimpleName: cattr(588) into SingleVariableDeclaration(589) at 1", "Insert SimpleType: ICompositeCacheManager(591) into SingleVariableDeclaration(593) at 0", "Insert SimpleName: cacheMgr(592) into SingleVariableDeclaration(593) at 1", "Insert SimpleType: ICacheEventLogger(595) into SingleVariableDeclaration(597) at 0", "Insert SimpleName: cacheEventLogger(596) into SingleVariableDeclaration(597) at 1", "Insert SimpleType: IElementSerializer(599) into SingleVariableDeclaration(601) at 0", "Insert SimpleName: elementSerializer(600) into SingleVariableDeclaration(601) at 1", "Insert IfStatement(614) into Block(684) at 0", "Insert VariableDeclarationStatement(622) into Block(684) at 1", "Insert VariableDeclarationStatement(631) into Block(684) at 2", "Insert IfStatement(681) into Block(684) at 3", "Insert ReturnStatement(683) into Block(684) at 4", "Insert TagElement: @see(689) into Javadoc(690) at 0", "Insert SimpleName: Override(691) into MarkerAnnotation(692) at 0", "Insert ExpressionStatement(698) into Block(741) at 0", "Insert ExpressionStatement(712) into Block(741) at 1", "Insert ExpressionStatement(723) into Block(741) at 2", "Insert ExpressionStatement(729) into Block(741) at 3", "Insert ExpressionStatement(735) into Block(741) at 4", "Insert ExpressionStatement(740) into Block(741) at 5", "Insert TagElement: @see(746) into Javadoc(747) at 0", "Insert SimpleName: Override(748) into MarkerAnnotation(749) at 0", "Insert EnhancedForStatement(765) into Block(799) at 0", "Insert ExpressionStatement(769) into Block(799) at 1", "Insert IfStatement(795) into Block(799) at 2", "Insert ExpressionStatement(798) into Block(799) at 3", "Update SimpleName: HashMap(51) to ConcurrentMap", "Insert TextElement: Monitor thread (62) into TagElement(63) at 0", "Insert TextElement: Contains mappings of RemoteLocation instance to RemoteCacheManager instance. (72) into TagElement(73) at 0", "Update SimpleName: HashMap(40) to ConcurrentMap", "Update SimpleName: String(42) to RemoteLocation", "Update SimpleName: RemoteCacheNoWaitFacade(44) to RemoteCacheManager", "Insert TextElement: Lock for initialization of manager instances (87) into TagElement(88) at 0", "Move MethodInvocation(148) into SwitchStatement(458) at 0", "Insert SwitchCase(183) into SwitchStatement(458) at 1", "Insert VariableDeclarationStatement(197) into SwitchStatement(458) at 2", "Move VariableDeclarationStatement(169) into SwitchStatement(458) at 3", "Insert IfStatement(250) into SwitchStatement(458) at 4", "Move VariableDeclarationStatement(231) into SwitchStatement(458) at 5", "Move IfStatement(324) into SwitchStatement(458) at 6", "Insert ExpressionStatement(371) into SwitchStatement(458) at 7", "Insert BreakStatement(372) into SwitchStatement(458) at 8", "Insert SwitchCase(374) into SwitchStatement(458) at 9", "Move VariableDeclarationStatement(355) into SwitchStatement(458) at 10", "Insert WhileStatement(456) into SwitchStatement(458) at 11", "Insert BreakStatement(457) into SwitchStatement(458) at 12", "Insert SimpleName: cacheName(520) into TagElement: @param(522) at 0", "Insert TextElement:  the name of the  cache facade(521) into TagElement: @param(522) at 1", "Update TextElement:  Returns the facades.(501) to  Returns the facade for the given name.", "Insert SimpleName: RemoteCacheNoWaitFacade(535) into SimpleType: RemoteCacheNoWaitFacade(536) at 0", "Insert SimpleName: K(537) into SimpleType: K(538) at 0", "Insert SimpleName: V(539) into SimpleType: V(540) at 0", "Insert CastExpression(558) into ReturnStatement(559) at 0", "Insert TextElement: Returns an instance of RemoteCacheManager for the given connection parameters.(562) into TagElement(569) at 0", "Insert TextElement: <p>(563) into TagElement(569) at 1", "Insert TextElement: Host and Port uniquely identify a manager instance.(564) into TagElement(569) at 2", "Insert TextElement: <p>(565) into TagElement(569) at 3", "Insert TextElement: If the connection cannot be established, zombie objects will be used for future recovery(566) into TagElement(569) at 4", "Insert TextElement: purposes.(567) into TagElement(569) at 5", "Insert TextElement: <p>(568) into TagElement(569) at 6", "Insert SimpleName: cattr(570) into TagElement: @param(571) at 0", "Insert SimpleName: cacheMgr(572) into TagElement: @param(573) at 0", "Insert SimpleName: cacheEventLogger(574) into TagElement: @param(575) at 0", "Insert SimpleName: elementSerializer(576) into TagElement: @param(577) at 0", "Insert TextElement:  The instance value(578) into TagElement: @return(579) at 0", "Insert SimpleName: IRemoteCacheAttributes(586) into SimpleType: IRemoteCacheAttributes(587) at 0", "Insert SimpleName: ICompositeCacheManager(590) into SimpleType: ICompositeCacheManager(591) at 0", "Insert SimpleName: ICacheEventLogger(594) into SimpleType: ICacheEventLogger(595) at 0", "Insert SimpleName: IElementSerializer(598) into SimpleType: IElementSerializer(599) at 0", "Insert InfixExpression: ==(606) into IfStatement(614) at 0", "Insert Block(613) into IfStatement(614) at 1", "Insert SimpleType: RemoteLocation(616) into VariableDeclarationStatement(622) at 0", "Insert VariableDeclarationFragment(621) into VariableDeclarationStatement(622) at 1", "Insert SimpleType: RemoteCacheManager(624) into VariableDeclarationStatement(631) at 0", "Insert VariableDeclarationFragment(630) into VariableDeclarationStatement(631) at 1", "Insert InfixExpression: ==(634) into IfStatement(681) at 0", "Insert Block(680) into IfStatement(681) at 1", "Insert SimpleName: ins(682) into ReturnStatement(683) at 0", "Insert MethodRef(688) into TagElement: @see(689) at 0", "Insert SuperMethodInvocation(697) into ExpressionStatement(698) at 0", "Insert Assignment: =(711) into ExpressionStatement(712) at 0", "Insert Assignment: =(722) into ExpressionStatement(723) at 0", "Insert Assignment: =(728) into ExpressionStatement(729) at 0", "Insert Assignment: =(734) into ExpressionStatement(735) at 0", "Insert MethodInvocation(739) into ExpressionStatement(740) at 0", "Insert MethodRef(745) into TagElement: @see(746) at 0", "Insert SingleVariableDeclaration(756) into EnhancedForStatement(765) at 0", "Insert MethodInvocation(759) into EnhancedForStatement(765) at 1", "Insert Block(764) into EnhancedForStatement(765) at 2", "Insert MethodInvocation(768) into ExpressionStatement(769) at 0", "Insert InfixExpression: !=(772) into IfStatement(795) at 0", "Insert Block(794) into IfStatement(795) at 1", "Insert SuperMethodInvocation(797) into ExpressionStatement(798) at 0", "Insert SimpleName: LOCAL(182) into SwitchCase(183) at 0", "Update ParameterizedType: ArrayList<String>(155) to ArrayList<RemoteLocation>", "Move ParameterizedType: ArrayList<String>(155) into VariableDeclarationStatement(197) at 0", "Move VariableDeclarationFragment(163) into VariableDeclarationStatement(197) at 1", "Move InfixExpression: !=(174) into IfStatement(250) at 0", "Move Block(222) into IfStatement(250) at 1", "Move MethodInvocation(336) into ExpressionStatement(371) at 0", "Insert SimpleName: CLUSTER(373) into SwitchCase(374) at 0", "Move MethodInvocation(358) into WhileStatement(456) at 0", "Move Block(434) into WhileStatement(456) at 1", "Update SimpleName: getFacades(486) to facades", "Move SimpleName: getFacades(486) into MethodInvocation(512) at 0", "Insert ParameterizedType: RemoteCacheNoWaitFacade<K,V>(553) into CastExpression(558) at 0", "Insert MethodInvocation(557) into CastExpression(558) at 1", "Insert MethodInvocation(604) into InfixExpression: ==(606) at 0", "Insert NullLiteral(605) into InfixExpression: ==(606) at 1", "Insert ExpressionStatement(612) into Block(613) at 0", "Insert SimpleName: RemoteLocation(615) into SimpleType: RemoteLocation(616) at 0", "Insert SimpleName: loc(617) into VariableDeclarationFragment(621) at 0", "Insert MethodInvocation(620) into VariableDeclarationFragment(621) at 1", "Insert SimpleName: RemoteCacheManager(623) into SimpleType: RemoteCacheManager(624) at 0", "Insert SimpleName: ins(625) into VariableDeclarationFragment(630) at 0", "Insert MethodInvocation(629) into VariableDeclarationFragment(630) at 1", "Insert SimpleName: ins(632) into InfixExpression: ==(634) at 0", "Insert NullLiteral(633) into InfixExpression: ==(634) at 1", "Insert ExpressionStatement(638) into Block(680) at 0", "Insert TryStatement(679) into Block(680) at 1", "Insert QualifiedName: org.apache.commons.jcs.auxiliary.AbstractAuxiliaryCacheFactory(686) into MethodRef(688) at 0", "Insert SimpleName: initialize(687) into MethodRef(688) at 1", "Insert SimpleName: initialize(696) into SuperMethodInvocation(697) at 0", "Insert SimpleName: facades(699) into Assignment: =(711) at 0", "Insert ClassInstanceCreation(710) into Assignment: =(711) at 1", "Insert SimpleName: managers(713) into Assignment: =(722) at 0", "Insert ClassInstanceCreation(721) into Assignment: =(722) at 1", "Insert SimpleName: managerLock(724) into Assignment: =(728) at 0", "Insert ClassInstanceCreation(727) into Assignment: =(728) at 1", "Insert SimpleName: monitor(730) into Assignment: =(734) at 0", "Insert ClassInstanceCreation(733) into Assignment: =(734) at 1", "Insert SimpleName: monitor(736) into MethodInvocation(739) at 0", "Insert SimpleName: setDaemon(737) into MethodInvocation(739) at 1", "Insert BooleanLiteral: true(738) into MethodInvocation(739) at 2", "Insert QualifiedName: org.apache.commons.jcs.auxiliary.AbstractAuxiliaryCacheFactory(743) into MethodRef(745) at 0", "Insert SimpleName: dispose(744) into MethodRef(745) at 1", "Insert SimpleType: RemoteCacheManager(754) into SingleVariableDeclaration(756) at 0", "Insert SimpleName: manager(755) into SingleVariableDeclaration(756) at 1", "Insert SimpleName: managers(757) into MethodInvocation(759) at 0", "Insert SimpleName: values(758) into MethodInvocation(759) at 1", "Insert ExpressionStatement(763) into Block(764) at 0", "Insert SimpleName: managers(766) into MethodInvocation(768) at 0", "Insert SimpleName: clear(767) into MethodInvocation(768) at 1", "Insert SimpleName: monitor(770) into InfixExpression: !=(772) at 0", "Insert NullLiteral(771) into InfixExpression: !=(772) at 1", "Insert ExpressionStatement(776) into Block(794) at 0", "Insert TryStatement(789) into Block(794) at 1", "Insert ExpressionStatement(793) into Block(794) at 2", "Insert SimpleName: dispose(796) into SuperMethodInvocation(797) at 0", "Move SimpleType: ArrayList(158) into ParameterizedType: ArrayList<RemoteLocation>(188) at 0", "Update SimpleType: String(154) to RemoteLocation", "Insert VariableDeclarationStatement(409) into Block(455) at 1", "Insert IfStatement(454) into Block(455) at 2", "Insert SimpleType: RemoteCacheNoWaitFacade(548) into ParameterizedType: RemoteCacheNoWaitFacade<K,V>(553) at 0", "Insert SimpleType: K(550) into ParameterizedType: RemoteCacheNoWaitFacade<K,V>(553) at 1", "Insert SimpleType: V(552) into ParameterizedType: RemoteCacheNoWaitFacade<K,V>(553) at 2", "Insert SimpleName: facades(554) into MethodInvocation(557) at 0", "Insert SimpleName: get(555) into MethodInvocation(557) at 1", "Insert SimpleName: cacheName(556) into MethodInvocation(557) at 2", "Insert SimpleName: cattr(602) into MethodInvocation(604) at 0", "Insert SimpleName: getRemoteLocation(603) into MethodInvocation(604) at 1", "Insert MethodInvocation(611) into ExpressionStatement(612) at 0", "Insert SimpleName: cattr(618) into MethodInvocation(620) at 0", "Insert SimpleName: getRemoteLocation(619) into MethodInvocation(620) at 1", "Insert SimpleName: managers(626) into MethodInvocation(629) at 0", "Insert SimpleName: get(627) into MethodInvocation(629) at 1", "Insert SimpleName: loc(628) into MethodInvocation(629) at 2", "Insert MethodInvocation(637) into ExpressionStatement(638) at 0", "Insert Block(673) into TryStatement(679) at 0", "Insert Block(678) into TryStatement(679) at 1", "Update ParameterizedType: HashMap<String,RemoteCacheNoWaitFacade<?,?>>(515) to ConcurrentHashMap<String,RemoteCacheNoWaitFacade<?,?>>", "Move ParameterizedType: HashMap<String,RemoteCacheNoWaitFacade<?,?>>(515) into ClassInstanceCreation(710) at 0", "Insert ParameterizedType: ConcurrentHashMap<RemoteLocation,RemoteCacheManager>(720) into ClassInstanceCreation(721) at 0", "Insert SimpleType: ReentrantLock(726) into ClassInstanceCreation(727) at 0", "Insert SimpleType: RemoteCacheMonitor(732) into ClassInstanceCreation(733) at 0", "Insert SimpleName: RemoteCacheManager(753) into SimpleType: RemoteCacheManager(754) at 0", "Insert MethodInvocation(762) into ExpressionStatement(763) at 0", "Insert MethodInvocation(775) into ExpressionStatement(776) at 0", "Insert Block(782) into TryStatement(789) at 0", "Insert CatchClause(788) into TryStatement(789) at 1", "Insert Assignment: =(792) into ExpressionStatement(793) at 0", "Update SimpleName: String(153) to RemoteLocation", "Update ParameterizedType: ArrayList<String>(161) to ArrayList<RemoteLocation>", "Update SimpleName: getRemoteHost(171) to getRemoteLocation", "Insert SimpleType: RemoteLocation(402) into VariableDeclarationStatement(409) at 0", "Insert VariableDeclarationFragment(408) into VariableDeclarationStatement(409) at 1", "Insert InfixExpression: !=(412) into IfStatement(454) at 0", "Insert Block(453) into IfStatement(454) at 1", "Insert SimpleName: RemoteCacheNoWaitFacade(547) into SimpleType: RemoteCacheNoWaitFacade(548) at 0", "Insert SimpleName: K(549) into SimpleType: K(550) at 0", "Insert SimpleName: V(551) into SimpleType: V(552) at 0", "Insert SimpleName: cattr(607) into MethodInvocation(611) at 0", "Insert SimpleName: setRemoteLocation(608) into MethodInvocation(611) at 1", "Insert StringLiteral: \"\"(609) into MethodInvocation(611) at 2", "Insert QualifiedName: Registry.REGISTRY_PORT(610) into MethodInvocation(611) at 3", "Insert SimpleName: managerLock(635) into MethodInvocation(637) at 0", "Insert SimpleName: lock(636) into MethodInvocation(637) at 1", "Insert ExpressionStatement(645) into Block(673) at 0", "Insert IfStatement(672) into Block(673) at 1", "Insert ExpressionStatement(677) into Block(678) at 0", "Update SimpleType: HashMap(507) to ConcurrentHashMap", "Insert SimpleType: ConcurrentHashMap(715) into ParameterizedType: ConcurrentHashMap<RemoteLocation,RemoteCacheManager>(720) at 0", "Insert SimpleType: RemoteLocation(717) into ParameterizedType: ConcurrentHashMap<RemoteLocation,RemoteCacheManager>(720) at 1", "Insert SimpleType: RemoteCacheManager(719) into ParameterizedType: ConcurrentHashMap<RemoteLocation,RemoteCacheManager>(720) at 2", "Insert SimpleName: ReentrantLock(725) into SimpleType: ReentrantLock(726) at 0", "Insert SimpleName: RemoteCacheMonitor(731) into SimpleType: RemoteCacheMonitor(732) at 0", "Insert SimpleName: manager(760) into MethodInvocation(762) at 0", "Insert SimpleName: release(761) into MethodInvocation(762) at 1", "Insert SimpleName: monitor(773) into MethodInvocation(775) at 0", "Insert SimpleName: notifyShutdown(774) into MethodInvocation(775) at 1", "Insert ExpressionStatement(781) into Block(782) at 0", "Insert SingleVariableDeclaration(786) into CatchClause(788) at 0", "Insert Block(787) into CatchClause(788) at 1", "Insert SimpleName: monitor(790) into Assignment: =(792) at 0", "Insert NullLiteral(791) into Assignment: =(792) at 1", "Move SimpleType: ArrayList(152) into ParameterizedType: ArrayList<RemoteLocation>(194) at 0", "Update SimpleType: String(160) to RemoteLocation", "Insert MethodInvocation(216) into MethodInvocation(217) at 2", "Insert VariableDeclarationStatement(299) into Block(355) at 2", "Insert IfStatement(354) into Block(355) at 3", "Update ArrayType: String[](332) to RemoteLocation[]", "Insert SimpleName: RemoteLocation(401) into SimpleType: RemoteLocation(402) at 0", "Insert SimpleName: location(403) into VariableDeclarationFragment(408) at 0", "Insert MethodInvocation(407) into VariableDeclarationFragment(408) at 1", "Insert SimpleName: location(410) into InfixExpression: !=(412) at 0", "Insert NullLiteral(411) into InfixExpression: !=(412) at 1", "Move ExpressionStatement(397) into Block(453) at 0", "Move VariableDeclarationStatement(409) into Block(453) at 1", "Move ExpressionStatement(414) into Block(453) at 2", "Move VariableDeclarationStatement(428) into Block(453) at 3", "Move ExpressionStatement(433) into Block(453) at 4", "Insert Assignment: =(644) into ExpressionStatement(645) at 0", "Insert InfixExpression: ==(648) into IfStatement(672) at 0", "Insert Block(671) into IfStatement(672) at 1", "Insert MethodInvocation(676) into ExpressionStatement(677) at 0", "Update SimpleName: HashMap(506) to ConcurrentHashMap", "Insert SimpleName: ConcurrentHashMap(714) into SimpleType: ConcurrentHashMap(715) at 0", "Insert SimpleName: RemoteLocation(716) into SimpleType: RemoteLocation(717) at 0", "Insert SimpleName: RemoteCacheManager(718) into SimpleType: RemoteCacheManager(719) at 0", "Insert MethodInvocation(780) into ExpressionStatement(781) at 0", "Insert SimpleType: InterruptedException(784) into SingleVariableDeclaration(786) at 0", "Insert SimpleName: e(785) into SingleVariableDeclaration(786) at 1", "Update SimpleName: String(159) to RemoteLocation", "Move SimpleName: rca(181) into MethodInvocation(216) at 0", "Update SimpleName: getRemoteHost(182) to getRemoteLocation", "Move SimpleName: getRemoteHost(182) into MethodInvocation(216) at 1", "Update SimpleName: RemoteCacheManager(194) to getManager", "Insert SimpleType: RemoteLocation(292) into VariableDeclarationStatement(299) at 0", "Insert VariableDeclarationFragment(298) into VariableDeclarationStatement(299) at 1", "Insert InfixExpression: !=(302) into IfStatement(354) at 0", "Insert Block(353) into IfStatement(354) at 1", "Insert SimpleType: RemoteLocation(364) into ArrayType: RemoteLocation[](366) at 0", "Update SimpleName: server(372) to RemoteLocation", "Move SimpleName: server(372) into MethodInvocation(407) at 0", "Update SimpleName: substring(373) to parseServerAndPort", "Move SimpleName: substring(373) into MethodInvocation(407) at 1", "Move SimpleName: server(375) into MethodInvocation(407) at 2", "Insert SimpleName: ins(639) into Assignment: =(644) at 0", "Insert MethodInvocation(643) into Assignment: =(644) at 1", "Insert SimpleName: ins(646) into InfixExpression: ==(648) at 0", "Insert NullLiteral(647) into InfixExpression: ==(648) at 1", "Insert ExpressionStatement(659) into Block(671) at 0", "Insert ExpressionStatement(665) into Block(671) at 1", "Insert ExpressionStatement(670) into Block(671) at 2", "Insert SimpleName: managerLock(674) into MethodInvocation(676) at 0", "Insert SimpleName: unlock(675) into MethodInvocation(676) at 1", "Insert SimpleName: monitor(777) into MethodInvocation(780) at 0", "Insert SimpleName: join(778) into MethodInvocation(780) at 1", "Insert NumberLiteral: 5000(779) into MethodInvocation(780) at 2", "Insert SimpleName: InterruptedException(783) into SimpleType: InterruptedException(784) at 0", "Insert SimpleName: RemoteLocation(291) into SimpleType: RemoteLocation(292) at 0", "Insert SimpleName: location(293) into VariableDeclarationFragment(298) at 0", "Insert MethodInvocation(297) into VariableDeclarationFragment(298) at 1", "Insert SimpleName: location(300) into InfixExpression: !=(302) at 0", "Insert NullLiteral(301) into InfixExpression: !=(302) at 1", "Move ExpressionStatement(274) into Block(353) at 0", "Move VariableDeclarationStatement(286) into Block(353) at 1", "Move IfStatement(320) into Block(353) at 2", "Insert SimpleName: RemoteLocation(363) into SimpleType: RemoteLocation(364) at 0", "Update SimpleName: setRemotePort(383) to setRemoteLocation", "Update SimpleName: Integer(384) to location", "Move SimpleName: Integer(384) into MethodInvocation(416) at 2", "Insert SimpleName: managers(640) into MethodInvocation(643) at 0", "Insert SimpleName: get(641) into MethodInvocation(643) at 1", "Insert SimpleName: loc(642) into MethodInvocation(643) at 2", "Insert Assignment: =(658) into ExpressionStatement(659) at 0", "Insert MethodInvocation(664) into ExpressionStatement(665) at 0", "Insert MethodInvocation(669) into ExpressionStatement(670) at 0", "Update SimpleName: failovers(264) to RemoteLocation", "Move SimpleName: failovers(264) into MethodInvocation(297) at 0", "Update SimpleName: add(265) to parseServerAndPort", "Move SimpleName: add(265) into MethodInvocation(297) at 1", "Move SimpleName: server(266) into MethodInvocation(297) at 2", "Update SimpleName: RemoteCacheManager(401) to getManager", "Insert SimpleName: ins(649) into Assignment: =(658) at 0", "Insert ClassInstanceCreation(657) into Assignment: =(658) at 1", "Insert SimpleName: managers(660) into MethodInvocation(664) at 0", "Insert SimpleName: put(661) into MethodInvocation(664) at 1", "Insert SimpleName: loc(662) into MethodInvocation(664) at 2", "Insert SimpleName: ins(663) into MethodInvocation(664) at 3", "Insert SimpleName: monitor(666) into MethodInvocation(669) at 0", "Insert SimpleName: addManager(667) into MethodInvocation(669) at 1", "Insert SimpleName: ins(668) into MethodInvocation(669) at 2", "Update SimpleName: RemoteUtils(269) to failovers", "Update SimpleName: parseServerAndPort(270) to add", "Update SimpleName: server(271) to location", "Insert SimpleType: RemoteCacheManager(651) into ClassInstanceCreation(657) at 0", "Insert SimpleName: cattr(652) into ClassInstanceCreation(657) at 1", "Insert SimpleName: cacheMgr(653) into ClassInstanceCreation(657) at 2", "Insert SimpleName: monitor(654) into ClassInstanceCreation(657) at 3", "Insert SimpleName: cacheEventLogger(655) into ClassInstanceCreation(657) at 4", "Insert SimpleName: elementSerializer(656) into ClassInstanceCreation(657) at 5", "Update SimpleName: RemoteCacheManager(278) to getManager", "Insert SimpleName: RemoteCacheManager(650) into SimpleType: RemoteCacheManager(651) at 0", "Delete WildcardType: ?(46)", "Delete WildcardType: ?(47)", "Delete ParameterizedType: RemoteCacheNoWaitFacade<?,?>(48)", "Delete ClassInstanceCreation(61)", "Delete FieldDeclaration(63)", "Delete MethodInvocation(183)", "Delete StringLiteral: \":\"(184)", "Delete SimpleName: rca(185)", "Delete SimpleName: getRemotePort(186)", "Delete MethodInvocation(187)", "Delete InfixExpression: +(188)", "Delete SimpleName: getInstance(195)", "Delete SimpleName: rca(272)", "Delete SimpleName: getInstance(279)", "Delete MethodInvocation(267)", "Delete ExpressionStatement(268)", "Delete SimpleName: parseInt(385)", "Delete SimpleName: server(386)", "Delete SimpleName: substring(387)", "Delete SimpleName: server(388)", "Delete SimpleName: indexOf(389)", "Delete StringLiteral: \":\"(390)", "Delete MethodInvocation(391)", "Delete NumberLiteral: 1(392)", "Delete InfixExpression: +(393)", "Delete MethodInvocation(394)", "Delete MethodInvocation(395)", "Delete SimpleName: getInstance(402)", "Delete SimpleName: rca(370)", "Delete SimpleName: setRemoteHost(371)", "Delete NumberLiteral: 0(374)", "Delete SimpleName: indexOf(376)", "Delete StringLiteral: \":\"(377)", "Delete MethodInvocation(378)", "Delete MethodInvocation(379)", "Delete MethodInvocation(380)", "Delete ExpressionStatement(381)", "Delete QualifiedName: RemoteType.LOCAL(149)", "Delete InfixExpression: ==(150)", "Delete VariableDeclarationStatement(164)", "Delete IfStatement(223)", "Delete ExpressionStatement(337)", "Delete Block(338)", "Delete SimpleName: rca(339)", "Delete SimpleName: getRemoteType(340)", "Delete MethodInvocation(341)", "Delete QualifiedName: RemoteType.CLUSTER(342)", "Delete InfixExpression: ==(343)", "Delete WhileStatement(435)", "Delete Block(436)", "Delete IfStatement(437)", "Delete IfStatement(438)", "Delete MethodInvocation(487)", "Delete SimpleName: facades(517)"]}}, {"RemoteCacheFailoverRunner_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 2"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 15"]}, {"root": "UPDATE from org.apache.commons.jcs.engine.logging.behavior.ICacheEventLogger to org.apache.commons.jcs.auxiliary.AbstractAuxiliaryCacheMonitor", "operations": ["UPD QualifiedName: org.apache.commons.jcs.engine.logging.behavior.ICacheEventLogger from org.apache.commons.jcs.engine.logging.behavior.ICacheEventLogger to org.apache.commons.jcs.auxiliary.AbstractAuxiliaryCacheMonitor"]}, {"root": "INS SimpleType: AbstractAuxiliaryCacheMonitor to TypeDeclaration: class at 5", "operations": ["INS SimpleType: AbstractAuxiliaryCacheMonitor to TypeDeclaration: class at 5"]}, {"root": "UPDATE from ICacheEventLogger to AbstractAuxiliaryCacheMonitor", "operations": ["UPD SimpleName: ICacheEventLogger from ICacheEventLogger to AbstractAuxiliaryCacheMonitor"]}, {"root": "MOVE from SimpleType: AbstractAuxiliaryCacheMonitor", "operations": ["MOV SimpleName: ICacheEventLogger to SimpleType: AbstractAuxiliaryCacheMonitor at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "UPDATE from public to protected", "operations": ["UPD Modifier: public from public to protected", "UPD Modifier: private from private to protected"]}, {"root": "UPDATE from notifyError to dispose", "operations": ["UPD SimpleName: notifyError from notifyError to dispose"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS Block to MethodDeclaration at 5"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "UPDATE from bad to doWork", "operations": ["UPD SimpleName: bad from bad to doWork"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS Block to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 5"]}, {"root": "INS SuperConstructorInvocation to Block at 0", "operations": ["INS SuperConstructorInvocation to Block at 0", "INS StringLiteral: \"JCS-RemoteCacheFailoverRunner\" to SuperConstructorInvocation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS Dimension to ArrayType: RemoteLocation[] at 1", "INS SimpleName: RemoteLocation to SimpleType: RemoteLocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: RemoteLocation to ArrayType: RemoteLocation[] at 0", "INS ArrayType: RemoteLocation[] to VariableDeclarationStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1", "MOV ReturnStatement to Block at 9", "MOV IfStatement to Block at 2"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: setIdlePeriod to MethodInvocation at 0", "INS NumberLiteral: 20000L to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from error recovery process. to Clean up all resources before shutdown", "operations": ["UPD TextElement: error recovery process. from error recovery process. to Clean up all resources before shutdown"]}, {"root": "UPDATE from Sets the \"alright\" flag to false in a critical section. This flag to do actual work", "operations": ["UPD TextElement: Sets the \"alright\" flag to false in a critical section. This flag from Sets the \"alright\" flag to false in a critical section. This flag to do actual work"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from String to RemoteLocation", "operations": ["UPD SimpleName: String from String to RemoteLocation", "UPD SimpleType: String from String to RemoteLocation", "UPD SimpleType: String from String to RemoteLocation", "UPD SimpleName: String from String to RemoteLocation", "UPD SimpleName: String from String to RemoteLocation", "UPD SimpleName: String from String to RemoteLocation", "UPD SimpleName: String from String to RemoteLocation", "UPD SimpleType: String from String to RemoteLocation", "UPD SimpleType: String from String to RemoteLocation", "UPD SimpleType: String from String to RemoteLocation"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: RemoteCacheManager to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from RemoteUtils to rca", "operations": ["UPD SimpleName: RemoteUtils from RemoteUtils to rca", "UPD SimpleName: RemoteUtils from RemoteUtils to rca"]}, {"root": "UPDATE from parseServerAndPort to setRemoteLocation", "operations": ["UPD SimpleName: parseServerAndPort from parseServerAndPort to setRemoteLocation", "UPD SimpleName: parseServerAndPort from parseServerAndPort to setRemoteLocation", "UPD SimpleName: parseServerAndPort from parseServerAndPort to setRemoteLocation"]}, {"root": "INS MethodInvocation to PrefixExpression: ! at 0", "operations": ["INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: allright to MethodInvocation at 0"]}, {"root": "UPDATE from RemoteCacheManager to RemoteCacheFactory", "operations": ["UPD SimpleName: RemoteCacheManager from RemoteCacheManager to RemoteCacheFactory", "UPD SimpleName: RemoteCacheManager from RemoteCacheManager to RemoteCacheFactory", "UPD SimpleName: RemoteCacheManager from RemoteCacheManager to RemoteCacheFactory"]}, {"root": "UPDATE from getInstance to getManager", "operations": ["UPD SimpleName: getInstance from getInstance to getManager", "UPD SimpleName: getInstance from getInstance to getManager", "UPD SimpleName: getInstance from getInstance to getManager"]}, {"root": "INS MethodInvocation to MethodInvocation at 4", "operations": ["INS SimpleName: facade to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 4"]}, {"root": "INS MethodInvocation to MethodInvocation at 5", "operations": ["INS SimpleName: facade to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 5"]}, {"root": "INS MethodInvocation to PrefixExpression: ! at 0", "operations": ["INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: allright to MethodInvocation at 0"]}, {"root": "UPDATE from cacheEventLogger to getCacheEventLogger", "operations": ["UPD SimpleName: cacheEventLogger from cacheEventLogger to getCacheEventLogger", "UPD SimpleName: cacheEventLogger from cacheEventLogger to getCacheEventLogger", "UPD SimpleName: cacheEventLogger from cacheEventLogger to getCacheEventLogger"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: cacheEventLogger to MethodInvocation at 1", "MOV SimpleName: elementSerializer to MethodInvocation at 1"]}, {"root": "UPDATE from elementSerializer to getElementSerializer", "operations": ["UPD SimpleName: elementSerializer from elementSerializer to getElementSerializer", "UPD SimpleName: elementSerializer from elementSerializer to getElementSerializer", "UPD SimpleName: elementSerializer from elementSerializer to getElementSerializer"]}, {"root": "UPDATE from String[] to RemoteLocation[]", "operations": ["UPD ArrayType: String[] from String[] to RemoteLocation[]"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "INS MethodInvocation to PrefixExpression: ! at 0", "operations": ["INS SimpleName: allright to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "UPDATE from \"ALRIGHT is true \" to \"ALLRIGHT is true \"", "operations": ["UPD StringLiteral: \"ALRIGHT is true \" from \"ALRIGHT is true \" to \"ALLRIGHT is true \""]}, {"root": "UPDATE from \"stating at failover i = \" to \"starting at failover i = \"", "operations": ["UPD StringLiteral: \"stating at failover i = \" from \"stating at failover i = \" to \"starting at failover i = \""]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3", "MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 5", "MOV IfStatement to Block at 6", "MOV IfStatement to Block at 4"]}, {"root": "INS MethodInvocation to MethodInvocation at 4", "operations": ["INS SimpleName: facade to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 4"]}, {"root": "INS MethodInvocation to MethodInvocation at 5", "operations": ["INS MethodInvocation to MethodInvocation at 5", "INS SimpleName: facade to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS BooleanLiteral: true to MethodInvocation at 2", "INS SimpleName: allright to MethodInvocation at 0", "INS SimpleName: set to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "UPDATE from bad to allright", "operations": ["UPD SimpleName: bad from bad to allright"]}, {"root": "INS SimpleName: compareAndSet to MethodInvocation at 1", "operations": ["INS SimpleName: compareAndSet to MethodInvocation at 1"]}, {"root": "INS BooleanLiteral: true to MethodInvocation at 2", "operations": ["INS BooleanLiteral: true to MethodInvocation at 2"]}, {"root": "INS BooleanLiteral: false to MethodInvocation at 3", "operations": ["INS BooleanLiteral: false to MethodInvocation at 3"]}, {"root": "UPDATE from remoteHost to location", "operations": ["UPD SimpleName: remoteHost from remoteHost to location", "UPD SimpleName: remoteHost from remoteHost to location", "UPD SimpleName: remoteHost from remoteHost to location"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: RemoteCacheManager to VariableDeclarationStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: cacheEventLogger to MethodInvocation at 1", "MOV SimpleName: elementSerializer to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1"]}, {"root": "INS ClassInstanceCreation to ConditionalExpression at 1", "operations": ["INS ClassInstanceCreation to ConditionalExpression at 1", "INS SimpleType: RemoteLocation to ClassInstanceCreation at 0", "INS NumberLiteral: 0 to ClassInstanceCreation at 2", "INS SimpleName: RemoteLocation to SimpleType: RemoteLocation at 0", "INS StringLiteral: \"null\" to ClassInstanceCreation at 1"]}, {"root": "UPDATE from RemoteUtils to rcaOld", "operations": ["UPD SimpleName: RemoteUtils from RemoteUtils to rcaOld"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: > to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "UPDATE from getRemoteHost to getRemoteLocation", "operations": ["UPD SimpleName: getRemoteHost from getRemoteHost to getRemoteLocation", "UPD SimpleName: getRemoteHost from getRemoteHost to getRemoteLocation"]}, {"root": "INS MethodInvocation to MethodInvocation at 4", "operations": ["INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: facade to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 5", "operations": ["INS SimpleName: facade to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 5"]}, {"root": "UPDATE from \"setting ALRIGHT to true\" to \"setting ALLRIGHT to true\"", "operations": ["UPD StringLiteral: \"setting ALRIGHT to true\" from \"setting ALRIGHT to true\" to \"setting ALLRIGHT to true\""]}, {"root": "UPDATE from \"FAILED to connect, as expected, to primary\" to \"FAILED to connect, as expected, to primary \"", "operations": ["UPD StringLiteral: \"FAILED to connect, as expected, to primary\" from \"FAILED to connect, as expected, to primary\" to \"FAILED to connect, as expected, to primary \""]}, {"root": "UPDATE from \"FAILED to connect to failover [\" to \"FAILED to connect to failover \"", "operations": ["UPD StringLiteral: \"FAILED to connect to failover [\" from \"FAILED to connect to failover [\" to \"FAILED to connect to failover \""]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: elementSerializer to MethodInvocation at 1", "MOV SimpleName: cacheEventLogger to MethodInvocation at 1"]}, {"root": "UPDATE from info to debug", "operations": ["UPD SimpleName: info from info to debug"]}, {"root": "INS StringLiteral: \"No need to connect to failover, the primary server is back up.\" to MethodInvocation at 2", "operations": ["INS StringLiteral: \"No need to connect to failover, the primary server is back up.\" to MethodInvocation at 2"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.commons.jcs.engine.behavior.IElementSerializer"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.logging.Log", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.logging.LogFactory", "DEL ImportDeclaration"]}, {"root": "DEL SimpleType: Runnable", "operations": ["DEL SimpleName: Runnable", "DEL SimpleType: Runnable"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: RemoteCacheFailoverRunner", "DEL Modifier: private", "DEL SimpleName: LogFactory", "DEL SimpleType: RemoteCacheFailoverRunner", "DEL VariableDeclarationFragment", "DEL Modifier: static", "DEL SimpleName: getLog", "DEL TypeLiteral", "DEL SimpleType: Log", "DEL Javadoc", "DEL TagElement", "DEL SimpleName: Log", "DEL FieldDeclaration", "DEL Modifier: final", "DEL TextElement: The logger ", "DEL SimpleName: log", "DEL MethodInvocation"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL InfixExpression: *", "DEL Javadoc", "DEL NumberLiteral: 20", "DEL Modifier: static", "DEL TextElement: How long to wait between reconnect attempts. ", "DEL SimpleName: idlePeriod", "DEL FieldDeclaration", "DEL Modifier: private", "DEL PrimitiveType: long", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 1000", "DEL TagElement"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL PrimitiveType: boolean", "DEL SimpleName: alright", "DEL TextElement: Have we reconnected. ", "DEL TagElement", "DEL Javadoc", "DEL BooleanLiteral: true"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: final", "DEL SimpleType: ICacheEventLogger", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL FieldDeclaration", "DEL TagElement", "DEL SimpleName: cacheEventLogger", "DEL TextElement: The event logger. ", "DEL Javadoc"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Javadoc", "DEL Modifier: private", "DEL SimpleType: IElementSerializer", "DEL TextElement: The serializer. ", "DEL VariableDeclarationFragment", "DEL TagElement", "DEL SimpleName: elementSerializer", "DEL Modifier: final", "DEL SimpleName: IElementSerializer", "DEL FieldDeclaration"]}, {"root": "DEL TagElement: @param", "operations": ["DEL SimpleName: cacheEventLogger", "DEL TagElement: @param"]}, {"root": "DEL TagElement: @param", "operations": ["DEL TagElement: @param", "DEL SimpleName: elementSerializer"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: cacheEventLogger", "DEL SimpleType: ICacheEventLogger", "DEL SimpleName: ICacheEventLogger", "DEL SingleVariableDeclaration"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: IElementSerializer", "DEL SimpleName: elementSerializer", "DEL SimpleType: IElementSerializer"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL FieldAccess", "DEL SimpleName: cacheEventLogger", "DEL SimpleName: cacheEventLogger", "DEL Assignment: =", "DEL ExpressionStatement", "DEL ThisExpression"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: elementSerializer", "DEL Assignment: =", "DEL SimpleName: elementSerializer", "DEL FieldAccess", "DEL ThisExpression"]}, {"root": "DEL TextElement: Notifies the cache monitor that an error occurred, and kicks off the", "operations": ["DEL TextElement: Notifies the cache monitor that an error occurred, and kicks off the"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL Block", "DEL SimpleName: bad", "DEL ExpressionStatement", "DEL SimpleName: notify", "DEL ExpressionStatement", "DEL SynchronizedStatement", "DEL ThisExpression", "DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL TextElement: indicates whether or not we are connected to any server at all. If we are", "operations": ["DEL TextElement: indicates whether or not we are connected to any server at all. If we are"]}, {"root": "DEL TextElement: connected to a secondary server, then alright will be true, but we will", "operations": ["DEL TextElement: connected to a secondary server, then alright will be true, but we will"]}, {"root": "DEL TextElement: continue to try to restore the connection with the primary server.", "operations": ["DEL TextElement: continue to try to restore the connection with the primary server."]}, {"root": "DEL TextElement: <p>", "operations": ["DEL TextElement: <p>"]}, {"root": "DEL TextElement: The primary server is the first server defines in the FailoverServers", "operations": ["DEL TextElement: The primary server is the first server defines in the FailoverServers"]}, {"root": "DEL TextElement: list.", "operations": ["DEL TextElement: list."]}, {"root": "DEL Block", "operations": ["DEL ExpressionStatement", "DEL Assignment: =", "DEL BooleanLiteral: false", "DEL SimpleName: alright", "DEL Block", "DEL SynchronizedStatement", "DEL Block", "DEL SimpleName: alright", "DEL IfStatement", "DEL ThisExpression", "DEL Block"]}, {"root": "DEL SimpleName: alright", "operations": ["DEL SimpleName: alright"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: log", "DEL SimpleName: isInfoEnabled"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL IfStatement"]}, {"root": "DEL SimpleName: alright", "operations": ["DEL SimpleName: alright"]}, {"root": "DEL SimpleName: rca", "operations": ["DEL SimpleName: rca"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: String", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: message", "DEL StringLiteral: \"No need to connect to failover, the primary server is back up.\"", "DEL SimpleName: String"]}, {"root": "DEL SimpleName: message", "operations": ["DEL SimpleName: message"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL Block"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: alright", "DEL BooleanLiteral: true", "DEL Assignment: ="]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: log", "DEL MethodInvocation", "DEL SimpleName: isInfoEnabled"]}, {"root": "DEL StringLiteral: \"] port = [\"", "operations": ["DEL StringLiteral: \"] port = [\""]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getRemotePort", "DEL MethodInvocation", "DEL SimpleName: rca"]}, {"root": "DEL Block", "operations": ["DEL SynchronizedStatement", "DEL Block", "DEL ThisExpression", "DEL Block"]}, {"root": "DEL StringLiteral: \"null\"", "operations": ["DEL StringLiteral: \"null\""]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: getRemotePort", "DEL NumberLiteral: 0", "DEL SimpleName: rca", "DEL PrimitiveType: int", "DEL SimpleName: rca", "DEL SimpleName: remotePort", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL ParenthesizedExpression", "DEL InfixExpression: ==", "DEL ConditionalExpression"]}, {"root": "DEL StringLiteral: \":\"", "operations": ["DEL StringLiteral: \":\""]}, {"root": "DEL SimpleName: remotePort", "operations": ["DEL SimpleName: remotePort"]}, {"root": "DEL StringLiteral: \":\"", "operations": ["DEL StringLiteral: \":\""]}, {"root": "DEL SimpleName: remotePort", "operations": ["DEL SimpleName: remotePort"]}, {"root": "DEL StringLiteral: \"]\"", "operations": ["DEL StringLiteral: \"]\""]}, {"root": "DEL SimpleName: alright", "operations": ["DEL SimpleName: alright"]}, {"root": "DEL SimpleName: rca", "operations": ["DEL SimpleName: rca"]}, {"root": "DEL SimpleName: rcaOld", "operations": ["DEL SimpleName: rcaOld"]}, {"root": "DEL Block", "operations": ["DEL TryStatement", "DEL ArrayType: String[]", "DEL SimpleName: log", "DEL SimpleName: String", "DEL SimpleName: error", "DEL Dimension", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: ex", "DEL SimpleType: String", "DEL CatchClause", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: ex", "DEL SimpleType: NumberFormatException", "DEL Block", "DEL SimpleName: NumberFormatException"]}]}}, {"RemoteCacheFailoverRunner_diff": {"operations": ["Move ImportDeclaration(13) into CompilationUnit(993) at 2", "Move MethodDeclaration(1126) into TypeDeclaration: class(992) at 15", "Update QualifiedName: org.apache.commons.jcs.engine.logging.behavior.ICacheEventLogger(12) to org.apache.commons.jcs.auxiliary.AbstractAuxiliaryCacheMonitor", "Insert SimpleType: AbstractAuxiliaryCacheMonitor(37) into TypeDeclaration: class(992) at 5", "Update SimpleName: ICacheEventLogger(112) to AbstractAuxiliaryCacheMonitor", "Move SimpleName: ICacheEventLogger(112) into SimpleType: AbstractAuxiliaryCacheMonitor(37) at 0", "Insert MarkerAnnotation(111) into MethodDeclaration(116) at 1", "Update Modifier: public(193) to protected", "Update SimpleName: notifyError(195) to dispose", "Insert Block(115) into MethodDeclaration(116) at 5", "Insert MarkerAnnotation(121) into MethodDeclaration(126) at 1", "Update Modifier: private(1112) to protected", "Update SimpleName: bad(1114) to doWork", "Insert Block(125) into MethodDeclaration(126) at 5", "Move Block(1086) into MethodDeclaration(991) at 5", "Insert SuperConstructorInvocation(88) into Block(105) at 0", "Insert SimpleName: Override(110) into MarkerAnnotation(111) at 0", "Insert SimpleName: Override(120) into MarkerAnnotation(121) at 0", "Insert VariableDeclarationStatement(663) into Block(990) at 0", "Move VariableDeclarationStatement(775) into Block(990) at 1", "Move IfStatement(788) into Block(990) at 2", "Move ReturnStatement(1100) into Block(990) at 9", "Insert StringLiteral: \"JCS-RemoteCacheFailoverRunner\"(87) into SuperConstructorInvocation(88) at 0", "Insert MethodInvocation(103) into ExpressionStatement(104) at 0", "Update TextElement: error recovery process.(190) to Clean up all resources before shutdown", "Update TextElement: Sets the \"alright\" flag to false in a critical section. This flag(1103) to do actual work", "Insert ArrayType: RemoteLocation[](655) into VariableDeclarationStatement(663) at 0", "Move VariableDeclarationFragment(766) into VariableDeclarationStatement(663) at 1", "Update SimpleType: String(769) to RemoteLocation", "Move SimpleType: RemoteCacheManager(912) into VariableDeclarationStatement(718) at 0", "Insert SimpleName: setIdlePeriod(101) into MethodInvocation(103) at 0", "Insert NumberLiteral: 20000L(102) into MethodInvocation(103) at 1", "Insert SimpleType: RemoteLocation(653) into ArrayType: RemoteLocation[](655) at 0", "Insert Dimension(654) into ArrayType: RemoteLocation[](655) at 1", "Update SimpleName: String(768) to RemoteLocation", "Update SimpleName: RemoteUtils(802) to rca", "Update SimpleName: parseServerAndPort(803) to setRemoteLocation", "Insert MethodInvocation(630) into PrefixExpression: !(631) at 0", "Insert SimpleName: RemoteLocation(652) into SimpleType: RemoteLocation(653) at 0", "Update SimpleName: RemoteCacheManager(811) to RemoteCacheFactory", "Update SimpleName: getInstance(812) to getManager", "Insert MethodInvocation(712) into MethodInvocation(716) at 4", "Insert MethodInvocation(715) into MethodInvocation(716) at 5", "Insert MethodInvocation(216) into PrefixExpression: !(217) at 0", "Insert SimpleName: allright(628) into MethodInvocation(630) at 0", "Insert SimpleName: get(629) into MethodInvocation(630) at 1", "Insert SimpleName: facade(710) into MethodInvocation(712) at 0", "Update SimpleName: cacheEventLogger(815) to getCacheEventLogger", "Move SimpleName: cacheEventLogger(815) into MethodInvocation(712) at 1", "Insert SimpleName: facade(713) into MethodInvocation(715) at 0", "Update SimpleName: elementSerializer(816) to getElementSerializer", "Move SimpleName: elementSerializer(816) into MethodInvocation(715) at 1", "Insert SimpleName: allright(214) into MethodInvocation(216) at 0", "Insert SimpleName: get(215) into MethodInvocation(216) at 1", "Update ArrayType: String[](299) to RemoteLocation[]", "Move IfStatement(331) into IfStatement(251) at 2", "Update SimpleType: String(297) to RemoteLocation", "Move InfixExpression: ==(320) into IfStatement(250) at 0", "Update SimpleName: String(296) to RemoteLocation", "Insert MethodInvocation(292) into PrefixExpression: !(293) at 0", "Update SimpleType: String(379) to RemoteLocation", "Insert SimpleName: allright(290) into MethodInvocation(292) at 0", "Insert SimpleName: get(291) into MethodInvocation(292) at 1", "Update SimpleName: String(378) to RemoteLocation", "Update StringLiteral: \"ALRIGHT is true \"(645) to \"ALLRIGHT is true \"", "Update StringLiteral: \"stating at failover i = \"(363) to \"starting at failover i = \"", "Insert Block(475) into IfStatement(476) at 1", "Update SimpleType: String(867) to RemoteLocation", "Update SimpleName: RemoteUtils(417) to rca", "Update SimpleName: parseServerAndPort(418) to setRemoteLocation", "Move ExpressionStatement(474) into Block(475) at 0", "Move ExpressionStatement(483) into Block(475) at 1", "Move ExpressionStatement(497) into Block(475) at 2", "Move ExpressionStatement(504) into Block(475) at 3", "Move IfStatement(544) into Block(475) at 4", "Move ExpressionStatement(548) into Block(475) at 5", "Move IfStatement(567) into Block(475) at 6", "Update SimpleType: String(581) to RemoteLocation", "Update SimpleName: String(866) to RemoteLocation", "Update SimpleName: RemoteCacheManager(426) to RemoteCacheFactory", "Update SimpleName: getInstance(427) to getManager", "Insert MethodInvocation(350) into MethodInvocation(354) at 4", "Insert MethodInvocation(353) into MethodInvocation(354) at 5", "Insert MethodInvocation(458) into ExpressionStatement(459) at 0", "Move MethodInvocation(527) into IfStatement(474) at 0", "Update SimpleName: bad(577) to allright", "Insert SimpleName: compareAndSet(483) into MethodInvocation(486) at 1", "Insert BooleanLiteral: true(484) into MethodInvocation(486) at 2", "Insert BooleanLiteral: false(485) into MethodInvocation(486) at 3", "Update SimpleName: String(580) to RemoteLocation", "Update SimpleName: remoteHost(582) to location", "Move SimpleType: RemoteCacheManager(809) into VariableDeclarationStatement(824) at 0", "Insert SimpleName: facade(348) into MethodInvocation(350) at 0", "Update SimpleName: cacheEventLogger(430) to getCacheEventLogger", "Move SimpleName: cacheEventLogger(430) into MethodInvocation(350) at 1", "Insert SimpleName: facade(351) into MethodInvocation(353) at 0", "Update SimpleName: elementSerializer(431) to getElementSerializer", "Move SimpleName: elementSerializer(431) into MethodInvocation(353) at 1", "Move IfStatement(540) into Block(453) at 1", "Insert SimpleName: allright(455) into MethodInvocation(458) at 0", "Insert SimpleName: set(456) into MethodInvocation(458) at 1", "Insert BooleanLiteral: true(457) into MethodInvocation(458) at 2", "Insert ClassInstanceCreation(499) into ConditionalExpression(503) at 1", "Update SimpleName: RemoteUtils(905) to rcaOld", "Update SimpleName: parseServerAndPort(906) to setRemoteLocation", "Move InfixExpression: >(516) into IfStatement(452) at 0", "Move Block(524) into IfStatement(452) at 1", "Insert SimpleType: RemoteLocation(496) into ClassInstanceCreation(499) at 0", "Insert StringLiteral: \"null\"(497) into ClassInstanceCreation(499) at 1", "Insert NumberLiteral: 0(498) into ClassInstanceCreation(499) at 2", "Update SimpleName: getRemoteHost(589) to getRemoteLocation", "Update SimpleName: RemoteCacheManager(914) to RemoteCacheFactory", "Update SimpleName: getInstance(915) to getManager", "Insert MethodInvocation(818) into MethodInvocation(822) at 4", "Insert MethodInvocation(821) into MethodInvocation(822) at 5", "Update StringLiteral: \"setting ALRIGHT to true\"(511) to \"setting ALLRIGHT to true\"", "Insert SimpleName: RemoteLocation(495) into SimpleType: RemoteLocation(496) at 0", "Update StringLiteral: \"FAILED to connect, as expected, to primary\"(612) to \"FAILED to connect, as expected, to primary \"", "Update SimpleName: remoteHost(613) to location", "Update StringLiteral: \"FAILED to connect to failover [\"(623) to \"FAILED to connect to failover \"", "Update SimpleName: remoteHost(624) to location", "Insert SimpleName: facade(816) into MethodInvocation(818) at 0", "Update SimpleName: cacheEventLogger(918) to getCacheEventLogger", "Move SimpleName: cacheEventLogger(918) into MethodInvocation(818) at 1", "Insert SimpleName: facade(819) into MethodInvocation(821) at 0", "Update SimpleName: elementSerializer(919) to getElementSerializer", "Move SimpleName: elementSerializer(919) into MethodInvocation(821) at 1", "Update SimpleName: info(535) to debug", "Insert StringLiteral: \"No need to connect to failover, the primary server is back up.\"(448) into MethodInvocation(449) at 2", "Update SimpleName: getRemoteHost(556) to getRemoteLocation", "Delete QualifiedName: org.apache.commons.jcs.engine.behavior.IElementSerializer(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.commons.logging.Log(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.apache.commons.logging.LogFactory(16)", "Delete ImportDeclaration(17)", "Delete SimpleName: Runnable(42)", "Delete SimpleType: Runnable(43)", "Delete TextElement: The logger (44)", "Delete TagElement(45)", "Delete Javadoc(46)", "Delete Modifier: private(47)", "Delete Modifier: static(48)", "Delete Modifier: final(49)", "Delete SimpleName: Log(50)", "Delete SimpleType: Log(51)", "Delete SimpleName: log(52)", "Delete SimpleName: LogFactory(53)", "Delete SimpleName: getLog(54)", "Delete SimpleName: RemoteCacheFailoverRunner(55)", "Delete SimpleType: RemoteCacheFailoverRunner(56)", "Delete TypeLiteral(57)", "Delete MethodInvocation(58)", "Delete VariableDeclarationFragment(59)", "Delete FieldDeclaration(60)", "Delete TextElement: How long to wait between reconnect attempts. (76)", "Delete TagElement(77)", "Delete Javadoc(78)", "Delete Modifier: private(79)", "Delete Modifier: static(80)", "Delete PrimitiveType: long(81)", "Delete SimpleName: idlePeriod(82)", "Delete NumberLiteral: 20(83)", "Delete NumberLiteral: 1000(84)", "Delete InfixExpression: *(85)", "Delete VariableDeclarationFragment(86)", "Delete FieldDeclaration(87)", "Delete TextElement: Have we reconnected. (88)", "Delete TagElement(89)", "Delete Javadoc(90)", "Delete Modifier: private(91)", "Delete PrimitiveType: boolean(92)", "Delete SimpleName: alright(93)", "Delete BooleanLiteral: true(94)", "Delete VariableDeclarationFragment(95)", "Delete FieldDeclaration(96)", "Delete TextElement: The event logger. (107)", "Delete TagElement(108)", "Delete Javadoc(109)", "Delete Modifier: private(110)", "Delete Modifier: final(111)", "Delete SimpleType: ICacheEventLogger(113)", "Delete SimpleName: cacheEventLogger(114)", "Delete VariableDeclarationFragment(115)", "Delete FieldDeclaration(116)", "Delete TextElement: The serializer. (117)", "Delete TagElement(118)", "Delete Javadoc(119)", "Delete Modifier: private(120)", "Delete Modifier: final(121)", "Delete SimpleName: IElementSerializer(122)", "Delete SimpleType: IElementSerializer(123)", "Delete SimpleName: elementSerializer(124)", "Delete VariableDeclarationFragment(125)", "Delete FieldDeclaration(126)", "Delete SimpleName: cacheEventLogger(135)", "Delete TagElement: @param(136)", "Delete SimpleName: elementSerializer(137)", "Delete TagElement: @param(138)", "Delete SimpleName: ICacheEventLogger(155)", "Delete SimpleType: ICacheEventLogger(156)", "Delete SimpleName: cacheEventLogger(157)", "Delete SingleVariableDeclaration(158)", "Delete SimpleName: IElementSerializer(159)", "Delete SimpleType: IElementSerializer(160)", "Delete SimpleName: elementSerializer(161)", "Delete SingleVariableDeclaration(162)", "Delete ThisExpression(175)", "Delete SimpleName: cacheEventLogger(176)", "Delete FieldAccess(177)", "Delete SimpleName: cacheEventLogger(178)", "Delete Assignment: =(179)", "Delete ExpressionStatement(180)", "Delete ThisExpression(181)", "Delete SimpleName: elementSerializer(182)", "Delete FieldAccess(183)", "Delete SimpleName: elementSerializer(184)", "Delete Assignment: =(185)", "Delete TextElement: Notifies the cache monitor that an error occurred, and kicks off the(189)", "Delete SimpleName: bad(196)", "Delete MethodInvocation(197)", "Delete ExpressionStatement(198)", "Delete ThisExpression(199)", "Delete SimpleName: notify(200)", "Delete MethodInvocation(201)", "Delete ExpressionStatement(202)", "Delete Block(203)", "Delete SynchronizedStatement(204)", "Delete Block(205)", "Delete TextElement: indicates whether or not we are connected to any server at all. If we are(1104)", "Delete TextElement: connected to a secondary server, then alright will be true, but we will(1105)", "Delete TextElement: continue to try to restore the connection with the primary server.(1106)", "Delete TextElement: <p>(1107)", "Delete TextElement: The primary server is the first server defines in the FailoverServers(1108)", "Delete TextElement: list.(1109)", "Delete SimpleName: alright(1115)", "Delete ThisExpression(1116)", "Delete SimpleName: alright(1117)", "Delete BooleanLiteral: false(1118)", "Delete Assignment: =(1119)", "Delete ExpressionStatement(1120)", "Delete Block(1121)", "Delete SynchronizedStatement(1122)", "Delete Block(1123)", "Delete IfStatement(1124)", "Delete Block(1125)", "Delete SimpleName: alright(294)", "Delete SimpleName: log(321)", "Delete SimpleName: isInfoEnabled(322)", "Delete MethodInvocation(323)", "Delete Block(332)", "Delete IfStatement(333)", "Delete SimpleName: alright(373)", "Delete SimpleName: rca(420)", "Delete SimpleName: String(528)", "Delete SimpleType: String(529)", "Delete SimpleName: message(530)", "Delete StringLiteral: \"No need to connect to failover, the primary server is back up.\"(531)", "Delete VariableDeclarationFragment(532)", "Delete VariableDeclarationStatement(533)", "Delete SimpleName: message(536)", "Delete Block(541)", "Delete IfStatement(542)", "Delete SimpleName: alright(545)", "Delete BooleanLiteral: true(546)", "Delete Assignment: =(547)", "Delete SimpleName: log(549)", "Delete SimpleName: isInfoEnabled(550)", "Delete MethodInvocation(551)", "Delete StringLiteral: \"] port = [\"(558)", "Delete SimpleName: rca(559)", "Delete SimpleName: getRemotePort(560)", "Delete MethodInvocation(561)", "Delete ThisExpression(505)", "Delete Block(568)", "Delete SynchronizedStatement(569)", "Delete Block(570)", "Delete StringLiteral: \"null\"(587)", "Delete PrimitiveType: int(594)", "Delete SimpleName: remotePort(595)", "Delete SimpleName: rca(596)", "Delete NullLiteral(597)", "Delete InfixExpression: ==(598)", "Delete ParenthesizedExpression(599)", "Delete NumberLiteral: 0(600)", "Delete SimpleName: rca(601)", "Delete SimpleName: getRemotePort(602)", "Delete MethodInvocation(603)", "Delete ConditionalExpression(604)", "Delete VariableDeclarationFragment(605)", "Delete VariableDeclarationStatement(606)", "Delete StringLiteral: \":\"(614)", "Delete SimpleName: remotePort(615)", "Delete StringLiteral: \":\"(625)", "Delete SimpleName: remotePort(626)", "Delete StringLiteral: \"]\"(627)", "Delete SimpleName: alright(734)", "Delete SimpleName: rca(805)", "Delete SimpleName: rcaOld(908)", "Delete SimpleName: String(756)", "Delete SimpleType: String(757)", "Delete Dimension(758)", "Delete ArrayType: String[](759)", "Delete VariableDeclarationStatement(767)", "Delete SimpleName: NumberFormatException(1087)", "Delete SimpleType: NumberFormatException(1088)", "Delete SimpleName: ex(1089)", "Delete SingleVariableDeclaration(1090)", "Delete SimpleName: log(1091)", "Delete SimpleName: error(1092)", "Delete SimpleName: ex(1093)", "Delete MethodInvocation(1094)", "Delete ExpressionStatement(1095)", "Delete Block(1096)", "Delete CatchClause(1097)", "Delete TryStatement(1098)", "Delete Block(1101)"]}}, {"RemoteCacheListener_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 2", "MOV ImportDeclaration to CompilationUnit at 1", "MOV ImportDeclaration to CompilationUnit at 3"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.jcs.auxiliary.remote.behavior.IRemoteCacheListener", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.Serializable", "DEL ImportDeclaration"]}, {"root": "DEL SimpleType: Serializable", "operations": ["DEL SimpleName: Serializable", "DEL SimpleType: Serializable"]}, {"root": "DEL ParameterizedType: IRemoteCacheListener<K,V>", "operations": ["DEL ParameterizedType: IRemoteCacheListener<K,V>", "DEL SimpleName: K", "DEL SimpleType: IRemoteCacheListener", "DEL SimpleName: V", "DEL SimpleType: K", "DEL SimpleType: V", "DEL SimpleName: IRemoteCacheListener"]}]}}, {"RemoteCacheListener_diff": {"operations": ["Move ImportDeclaration(15) into CompilationUnit(231) at 1", "Move ImportDeclaration(19) into CompilationUnit(231) at 2", "Move ImportDeclaration(21) into CompilationUnit(231) at 3", "Delete QualifiedName: org.apache.commons.jcs.auxiliary.remote.behavior.IRemoteCacheListener(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: java.io.Serializable(16)", "Delete ImportDeclaration(17)", "Delete SimpleName: Serializable(44)", "Delete SimpleType: Serializable(45)", "Delete SimpleName: IRemoteCacheListener(46)", "Delete SimpleType: IRemoteCacheListener(47)", "Delete SimpleName: K(48)", "Delete SimpleType: K(49)", "Delete SimpleName: V(50)", "Delete SimpleType: V(51)", "Delete ParameterizedType: IRemoteCacheListener<K,V>(52)"]}}, {"RemoteCacheManager_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 3", "MOV ImportDeclaration to CompilationUnit at 1", "MOV ImportDeclaration to CompilationUnit at 4", "MOV ImportDeclaration to CompilationUnit at 2", "MOV ImportDeclaration to CompilationUnit at 5"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 21", "MOV FieldDeclaration to TypeDeclaration: class at 18", "MOV MethodDeclaration to TypeDeclaration: class at 27", "MOV FieldDeclaration to TypeDeclaration: class at 9"]}, {"root": "UPDATE from java.rmi.registry.Registry to java.util.concurrent.ConcurrentHashMap", "operations": ["UPD QualifiedName: java.rmi.registry.Registry from java.rmi.registry.Registry to java.util.concurrent.ConcurrentHashMap"]}, {"root": "UPDATE from java.util.HashMap to java.util.concurrent.ConcurrentMap", "operations": ["UPD QualifiedName: java.util.HashMap from java.util.HashMap to java.util.concurrent.ConcurrentMap"]}, {"root": "UPDATE from java.util.Map to java.util.concurrent.locks.ReentrantLock", "operations": ["UPD QualifiedName: java.util.Map from java.util.Map to java.util.concurrent.locks.ReentrantLock"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 18", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 18"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 7"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 23", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 23"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: removeRemoteCacheListener to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS Block to MethodDeclaration at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 32", "operations": ["INS TryStatement to Block at 1", "INS SimpleName: lock to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 32", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to TryStatement at 0", "INS SimpleName: cacheLock to MethodInvocation at 0", "INS Block to TryStatement at 1"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 35"]}, {"root": "UPDATE from HashMap<String,RemoteCacheNoWait<?,?>> to ConcurrentMap<String,RemoteCacheNoWait<?,?>>", "operations": ["UPD ParameterizedType: HashMap<String,RemoteCacheNoWait<?,?>> from HashMap<String,RemoteCacheNoWait<?,?>> to ConcurrentMap<String,RemoteCacheNoWait<?,?>>"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV ParameterizedType: HashMap<String,RemoteCacheNoWait<?,?>> to FieldDeclaration at 2"]}, {"root": "UPDATE from static to private", "operations": ["UPD Modifier: static from static to private", "UPD Modifier: public from public to private"]}, {"root": "INS SimpleType: ReentrantLock to FieldDeclaration at 2", "operations": ["INS SimpleType: ReentrantLock to FieldDeclaration at 2"]}, {"root": "UPDATE from static to final", "operations": ["UPD Modifier: static from static to final"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV Javadoc to FieldDeclaration at 0", "MOV Modifier: private to FieldDeclaration at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV Modifier: final to FieldDeclaration at 2", "MOV VariableDeclarationFragment to FieldDeclaration at 4"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV SimpleType: String to FieldDeclaration at 3"]}, {"root": "UPDATE from private to protected", "operations": ["UPD Modifier: private from private to protected"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4"]}, {"root": "INS TypeParameter to MethodDeclaration at 2", "operations": ["INS SimpleName: K to TypeParameter at 0", "INS TypeParameter to MethodDeclaration at 2"]}, {"root": "INS TypeParameter to MethodDeclaration at 3", "operations": ["INS SimpleName: V to TypeParameter at 0", "INS TypeParameter to MethodDeclaration at 3"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 4", "operations": ["INS PrimitiveType: void to MethodDeclaration at 4"]}, {"root": "INS SimpleName: removeRemoteCacheListener to MethodDeclaration at 5", "operations": ["INS SimpleName: removeRemoteCacheListener to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: cacheName to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleType: K to ParameterizedType: IRemoteCacheListener<K,V> at 1", "INS SimpleName: V to SimpleType: V at 0", "INS SimpleType: IRemoteCacheListener to ParameterizedType: IRemoteCacheListener<K,V> at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: K to SimpleType: K at 0", "INS SimpleType: V to ParameterizedType: IRemoteCacheListener<K,V> at 2", "INS ParameterizedType: IRemoteCacheListener<K,V> to SingleVariableDeclaration at 0", "INS SimpleName: listener to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleType: IOException to MethodDeclaration at 8", "operations": ["INS SimpleType: IOException to MethodDeclaration at 8", "INS SimpleName: IOException to SimpleType: IOException at 0"]}, {"root": "INS Block to MethodDeclaration at 9", "operations": ["INS Block to MethodDeclaration at 9"]}, {"root": "INS Block to MethodDeclaration at 9", "operations": ["INS Block to MethodDeclaration at 9"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: removeRemoteCacheListener to MethodDeclaration at 3", "MOV PrimitiveType: void to MethodDeclaration at 2", "MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV Modifier: public to MethodDeclaration at 1", "MOV SimpleType: IOException to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 6", "MOV InfixExpression: != to IfStatement at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 5", "MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "UPDATE from removeRemoteCacheListener to removeListenerFromCache", "operations": ["UPD SimpleName: removeRemoteCacheListener from removeRemoteCacheListener to removeListenerFromCache", "UPD SimpleName: removeRemoteCacheListener from removeRemoteCacheListener to removeListenerFromCache", "UPD SimpleName: removeCacheListener from removeCacheListener to removeListenerFromCache"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS ParameterizedType: RemoteCacheNoWait<?,?> to SingleVariableDeclaration at 0", "INS SimpleName: cache to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS SimpleType: IOException to MethodDeclaration at 4", "operations": ["INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleType: IOException to MethodDeclaration at 4"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: cache to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS ExpressionStatement to Block at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: removeRemoteCacheListener to MethodInvocation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleMemberAnnotation to MethodDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 8", "operations": ["INS Block to MethodDeclaration at 8", "INS SimpleName: getCacheName to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS SimpleType: V to ParameterizedType: RemoteCacheNoWait<K,V> at 2", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: V to SimpleType: V at 0", "INS SimpleType: K to ParameterizedType: RemoteCacheNoWait<K,V> at 1", "INS MethodInvocation to CastExpression at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: RemoteCacheNoWait to SimpleType: RemoteCacheNoWait at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS ParameterizedType: RemoteCacheNoWait<K,V> to CastExpression at 0", "INS SimpleName: remoteCacheNoWait to VariableDeclarationFragment at 0", "INS SimpleName: cattr to MethodInvocation at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: caches to MethodInvocation at 0", "INS SimpleName: remoteCacheNoWait to InfixExpression: == at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: K to SimpleType: K at 0", "INS SimpleType: RemoteCacheNoWait to ParameterizedType: RemoteCacheNoWait<K,V> at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS SimpleName: freeCache to MethodDeclaration at 3", "operations": ["INS SimpleName: freeCache to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS WildcardType: ? to ParameterizedType: RemoteCacheNoWait<?,?> at 2", "INS SimpleType: RemoteCacheNoWait to ParameterizedType: RemoteCacheNoWait<?,?> at 0", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to MethodDeclaration at 6", "INS SimpleName: remove to MethodInvocation at 1", "INS SimpleName: name to MethodInvocation at 2", "INS SimpleName: c to VariableDeclarationFragment at 0", "INS ParameterizedType: RemoteCacheNoWait<?,?> to VariableDeclarationStatement at 0", "INS WildcardType: ? to ParameterizedType: RemoteCacheNoWait<?,?> at 1", "INS SimpleName: caches to MethodInvocation at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: cache to SingleVariableDeclaration at 1", "INS ParameterizedType: RemoteCacheNoWait<?,?> to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS SimpleType: IOException to MethodDeclaration at 5", "operations": ["INS SimpleType: IOException to MethodDeclaration at 5", "INS SimpleName: IOException to SimpleType: IOException at 0"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS IfStatement to Block at 0", "INS IfStatement to Block at 0", "INS SimpleName: cache to InfixExpression: != at 0", "INS Block to MethodDeclaration at 6", "INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV PrimitiveType: void to MethodDeclaration at 2", "MOV Javadoc to MethodDeclaration at 0", "MOV SimpleName: release to MethodDeclaration at 3", "MOV Modifier: public to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: String to MethodDeclaration at 3"]}, {"root": "UPDATE from equals to getRegistryURL", "operations": ["UPD SimpleName: equals from equals to getRegistryURL"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS Block to MethodDeclaration at 6"]}, {"root": "UPDATE from HashMap to ConcurrentMap", "operations": ["UPD SimpleName: HashMap from HashMap to ConcurrentMap", "UPD SimpleType: HashMap from HashMap to ConcurrentMap"]}, {"root": "UPDATE from RemoteCacheManager to ReentrantLock", "operations": ["UPD SimpleName: RemoteCacheManager from RemoteCacheManager to ReentrantLock", "UPD SimpleName: RemoteCacheManager from RemoteCacheManager to ReentrantLock"]}, {"root": "MOVE from SimpleType: ReentrantLock", "operations": ["MOV SimpleName: RemoteCacheManager to SimpleType: ReentrantLock at 0"]}, {"root": "UPDATE from instances to cacheLock", "operations": ["UPD SimpleName: instances from instances to cacheLock"]}, {"root": "UPDATE from host to registry", "operations": ["UPD SimpleName: host from host to registry", "UPD SimpleName: service from service to registry"]}, {"root": "UPDATE from String to IRemoteCacheAttributes", "operations": ["UPD SimpleType: String from String to IRemoteCacheAttributes", "UPD SimpleName: String from String to IRemoteCacheAttributes"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleName: cattr to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from String to RemoteCacheMonitor", "operations": ["UPD SimpleName: String from String to RemoteCacheMonitor", "UPD SimpleType: String from String to RemoteCacheMonitor"]}, {"root": "UPDATE from service to monitor", "operations": ["UPD SimpleName: service from service to monitor", "UPD SimpleName: port from port to monitor", "UPD SimpleName: port from port to monitor", "UPD SimpleName: RemoteCacheMonitor from RemoteCacheMonitor to monitor", "UPD SimpleName: cacheMgr from cacheMgr to monitor"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 6", "INS MethodInvocation to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "UPDATE from @return to @param", "operations": ["UPD TagElement: @return from @return to @param"]}, {"root": "INS TagElement: @param to Javadoc at 2", "operations": ["INS TagElement: @param to Javadoc at 2", "INS SimpleName: listener to TagElement: @param at 0", "INS TextElement:  the listener to de-register to TagElement: @param at 1"]}, {"root": "INS TagElement: @throws to Javadoc at 3", "operations": ["INS SimpleName: IOException to TagElement: @throws at 0", "INS TagElement: @throws to Javadoc at 3"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV IfStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2"]}, {"root": "UPDATE from @param to @throws", "operations": ["UPD TagElement: @param from @param to @throws"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from @param to ", "operations": ["UPD TagElement: @param from @param to "]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "UPDATE from Map<String,RemoteCacheNoWait<?,?>> to ConcurrentHashMap<String,RemoteCacheNoWait<?,?>>", "operations": ["UPD ParameterizedType: Map<String,RemoteCacheNoWait<?,?>> from Map<String,RemoteCacheNoWait<?,?>> to ConcurrentHashMap<String,RemoteCacheNoWait<?,?>>"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ParameterizedType: Map<String,RemoteCacheNoWait<?,?>> to ClassInstanceCreation at 0"]}, {"root": "UPDATE from Contains mappings of Location instance to RemoteCacheManager instance.  to Lock for initialization of caches ", "operations": ["UPD TextElement: Contains mappings of Location instance to RemoteCacheManager instance.  from Contains mappings of Location instance to RemoteCacheManager instance.  to Lock for initialization of caches "]}, {"root": "INS SimpleType: ReentrantLock to ClassInstanceCreation at 0", "operations": ["INS SimpleType: ReentrantLock to ClassInstanceCreation at 0"]}, {"root": "UPDATE from Monitors connections.  to For error notification ", "operations": ["UPD TextElement: Monitors connections.  from Monitors connections.  to For error notification "]}, {"root": "UPDATE from Not so useful. How many getCaches over releases were called.  to The service found through lookup ", "operations": ["UPD TextElement: Not so useful. How many getCaches over releases were called.  from Not so useful. How many getCaches over releases were called.  to The service found through lookup "]}, {"root": "UPDATE from host to cattr", "operations": ["UPD SimpleName: host from host to cattr", "UPD SimpleName: host from host to cattr", "UPD SimpleName: host from host to cattr"]}, {"root": "INS TextElement:  cache attributes to TagElement: @param at 1", "operations": ["INS TextElement:  cache attributes to TagElement: @param at 1"]}, {"root": "UPDATE from port to cacheMgr", "operations": ["UPD SimpleName: port from port to cacheMgr"]}, {"root": "INS TextElement:  the cache hub to TagElement: @param at 1", "operations": ["INS TextElement:  the cache hub to TagElement: @param at 1"]}, {"root": "INS TextElement:  the cache monitor thread for error notifications to TagElement: @param at 1", "operations": ["INS TextElement:  the cache monitor thread for error notifications to TagElement: @param at 1"]}, {"root": "UPDATE from Gets the defaultCattr attribute of the RemoteCacheManager object. to Removes a listener. When the primary recovers the failover must deregister itself for a", "operations": ["UPD TextElement: Gets the defaultCattr attribute of the RemoteCacheManager object. from Gets the defaultCattr attribute of the RemoteCacheManager object. to Removes a listener. When the primary recovers the failover must deregister itself for a"]}, {"root": "INS TextElement: region. The failover runner will call this method to de-register. We do not want to deregister to TagElement at 1", "operations": ["INS TextElement: region. The failover runner will call this method to de-register. We do not want to deregister to TagElement at 1"]}, {"root": "INS TextElement: all listeners to a remote server, in case a failover is a primary of another region. Having to TagElement at 2", "operations": ["INS TextElement: all listeners to a remote server, in case a failover is a primary of another region. Having to TagElement at 2"]}, {"root": "INS TextElement: one regions failover act as another servers primary is not currently supported. to TagElement at 3", "operations": ["INS TextElement: one regions failover act as another servers primary is not currently supported. to TagElement at 3"]}, {"root": "INS SimpleName: cacheName to TagElement: @return at 0", "operations": ["INS SimpleName: cacheName to TagElement: @return at 0"]}, {"root": "UPDATE from  The defaultCattr value to  the name of the cache", "operations": ["UPD TextElement:  The defaultCattr value from  The defaultCattr value to  the name of the cache"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: removeListenerFromCache to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: cache to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0"]}, {"root": "UPDATE from ICache to RemoteCacheNoWait", "operations": ["UPD SimpleName: ICache from ICache to RemoteCacheNoWait", "UPD SimpleName: RemoteCacheManager from RemoteCacheManager to RemoteCacheNoWait", "UPD SimpleType: IRemoteCacheClient from IRemoteCacheClient to RemoteCacheNoWait", "UPD SimpleName: IRemoteCacheClient from IRemoteCacheClient to RemoteCacheNoWait", "UPD SimpleType: ICache from ICache to RemoteCacheNoWait"]}, {"root": "MOVE from ParameterizedType: RemoteCacheNoWait<?,?>", "operations": ["MOV WildcardType: ? to ParameterizedType: RemoteCacheNoWait<?,?> at 2", "MOV SimpleType: IRemoteCacheClient to ParameterizedType: RemoteCacheNoWait<?,?> at 0", "MOV WildcardType: ? to ParameterizedType: RemoteCacheNoWait<?,?> at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: RemoteCacheNoWait<K,V> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "UPDATE from Releases. to Releases the cache.", "operations": ["UPD TextElement: Releases. from Releases. to Releases the cache.", "UPD TextElement: Returns an instance of RemoteCacheManager for the given connection parameters. from Returns an instance of RemoteCacheManager for the given connection parameters. to Releases the cache."]}, {"root": "UPDATE from cattr to name", "operations": ["UPD SimpleName: cattr from cattr to name"]}, {"root": "INS TextElement:  the name of the cache to TagElement: @param at 1", "operations": ["INS TextElement:  the name of the cache to TagElement: @param at 1"]}, {"root": "UPDATE from cacheMgr to IOException", "operations": ["UPD SimpleName: cacheMgr from cacheMgr to IOException"]}, {"root": "UPDATE from name to cache", "operations": ["UPD SimpleName: name from name to cache", "UPD SimpleName: caches from caches to cache", "UPD SimpleName: name from name to cache", "UPD SimpleName: c from c to cache", "UPD SimpleName: cattr from cattr to cache"]}, {"root": "INS TextElement:  the cache instance to TagElement: @param at 1", "operations": ["INS TextElement:  the cache instance to TagElement: @param at 1"]}, {"root": "MOVE from ParameterizedType: RemoteCacheNoWait<?,?>", "operations": ["MOV WildcardType: ? to ParameterizedType: RemoteCacheNoWait<?,?> at 2", "MOV SimpleType: ICache to ParameterizedType: RemoteCacheNoWait<?,?> at 0", "MOV WildcardType: ? to ParameterizedType: RemoteCacheNoWait<?,?> at 1"]}, {"root": "INS ThisExpression to SynchronizedStatement at 0", "operations": ["INS ThisExpression to SynchronizedStatement at 0"]}, {"root": "INS TextElement: Get the registry RMI URL to TagElement: @param at 0", "operations": ["INS TextElement: Get the registry RMI URL to TagElement: @param at 0"]}, {"root": "UPDATE from  true if the host and port are equal to  the registry URL", "operations": ["UPD TextElement:  true if the host and port are equal from  true if the host and port are equal to  the registry URL"]}, {"root": "INS SimpleName: registry to ReturnStatement at 0", "operations": ["INS SimpleName: registry to ReturnStatement at 0"]}, {"root": "UPDATE from Map to ConcurrentHashMap", "operations": ["UPD SimpleType: Map from Map to ConcurrentHashMap", "UPD SimpleName: Map from Map to ConcurrentHashMap"]}, {"root": "MOVE from SimpleType: ReentrantLock", "operations": ["MOV SimpleName: RemoteCacheManager to SimpleType: ReentrantLock at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from IRemoteCacheAttributes to IRemoteCacheListener", "operations": ["UPD SimpleName: IRemoteCacheAttributes from IRemoteCacheAttributes to IRemoteCacheListener"]}, {"root": "MOVE from SimpleType: IRemoteCacheListener", "operations": ["MOV SimpleName: IRemoteCacheAttributes to SimpleType: IRemoteCacheListener at 0"]}, {"root": "UPDATE from removeCacheListener to removeRemoteCacheListener", "operations": ["UPD SimpleName: removeCacheListener from removeCacheListener to removeRemoteCacheListener"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0"]}, {"root": "UPDATE from getListener to listener", "operations": ["UPD SimpleName: getListener from getListener to listener"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getListener to MethodInvocation at 2", "MOV SimpleName: rc to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: cacheLock to MethodInvocation at 0", "INS SimpleName: lock to MethodInvocation at 1"]}, {"root": "INS TryStatement to Block at 1", "operations": ["INS TryStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: unlock to MethodInvocation at 1", "INS Block to TryStatement at 1", "INS SimpleName: cacheLock to MethodInvocation at 0"]}, {"root": "UPDATE from instances to freeCache", "operations": ["UPD SimpleName: instances from instances to freeCache"]}, {"root": "UPDATE from loc to c", "operations": ["UPD SimpleName: loc from loc to c"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV EnhancedForStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from host to remoteCacheAttributes", "operations": ["UPD SimpleName: host from host to remoteCacheAttributes"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: service to MethodInvocation at 1", "MOV SimpleName: getNamingURL to MethodInvocation at 1", "MOV SimpleName: port to MethodInvocation at 1", "MOV SimpleName: RemoteUtils to MethodInvocation at 0", "MOV SimpleName: host to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "UPDATE from rc to getCacheName", "operations": ["UPD SimpleName: rc from rc to getCacheName", "UPD SimpleName: get from get to getCacheName"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0"]}, {"root": "MOVE from SimpleType: RemoteCacheNoWait", "operations": ["MOV SimpleName: RemoteCacheManager to SimpleType: RemoteCacheNoWait at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to EnhancedForStatement at 2", "operations": ["INS Block to EnhancedForStatement at 2"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: unlock to MethodInvocation at 1", "INS SimpleName: cacheLock to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from port to getRemoteLocation", "operations": ["UPD SimpleName: port from port to getRemoteLocation"]}, {"root": "UPDATE from service to getRemoteServiceName", "operations": ["UPD SimpleName: service from service to getRemoteServiceName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: cattr to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV TryStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: RemoteCacheMonitor to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to InfixExpression: + at 1", "operations": ["INS SimpleName: cache to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: getCacheName to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS StringLiteral: \"]\" to InfixExpression: + at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: log to MethodInvocation at 0", "INS StringLiteral: \"freeCache [\" to InfixExpression: + at 0", "INS SimpleName: info to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: + at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV CastExpression to Assignment: = at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 1", "MOV SimpleName: caches to MethodInvocation at 0"]}, {"root": "INS SimpleName: c to MethodInvocation at 1", "operations": ["INS SimpleName: c to MethodInvocation at 1"]}, {"root": "INS SimpleName: monitor to ClassInstanceCreation at 4", "operations": ["INS SimpleName: monitor to ClassInstanceCreation at 4"]}, {"root": "INS InfixExpression: + to MethodInvocation at 2", "operations": ["INS InfixExpression: + to MethodInvocation at 2", "INS StringLiteral: \"Problem releasing \" to InfixExpression: + at 0"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV MethodInvocation to InfixExpression: + at 1"]}, {"root": "UPDATE from \"IOException. Problem adding listener. Message: \" to \"Problem adding listener. Message: \"", "operations": ["UPD StringLiteral: \"IOException. Problem adding listener. Message: \" from \"IOException. Problem adding listener. Message: \" to \"Problem adding listener. Message: \""]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.jcs.engine.behavior.ICache", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.jcs.engine.behavior.IShutdownObserver", "DEL ImportDeclaration"]}, {"root": "DEL SimpleType: IShutdownObserver", "operations": ["DEL SimpleType: IShutdownObserver", "DEL SimpleName: IShutdownObserver"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL SimpleName: clients", "DEL FieldDeclaration"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL ParameterizedType: Map<Location,RemoteCacheManager>", "operations": ["DEL SimpleType: Map", "DEL SimpleName: Map", "DEL SimpleName: Location", "DEL SimpleType: RemoteCacheManager", "DEL SimpleType: Location", "DEL ParameterizedType: Map<Location,RemoteCacheManager>"]}, {"root": "DEL ParameterizedType: HashMap<Location,RemoteCacheManager>", "operations": ["DEL ParameterizedType: HashMap<Location,RemoteCacheManager>", "DEL SimpleType: Location", "DEL SimpleName: HashMap", "DEL SimpleType: RemoteCacheManager", "DEL SimpleType: HashMap", "DEL SimpleName: Location"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL SimpleName: String", "DEL TagElement", "DEL TextElement: The remote host ", "DEL SimpleType: String", "DEL Javadoc"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL Javadoc", "DEL SimpleName: port", "DEL TextElement: The remote port ", "DEL TagElement", "DEL PrimitiveType: int"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL TextElement: The service name ", "DEL TagElement", "DEL FieldDeclaration", "DEL Javadoc", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL SimpleName: service"]}, {"root": "DEL TagElement: @param", "operations": ["DEL TagElement: @param", "DEL SimpleName: service"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: port", "DEL PrimitiveType: int"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: service", "DEL Assignment: ="]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: cacheMgr", "DEL ExpressionStatement", "DEL ThisExpression", "DEL SimpleName: registerShutdownObserver", "DEL FieldAccess", "DEL MethodInvocation", "DEL ThisExpression"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: registry", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: String"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getInstance", "DEL MethodInvocation"]}, {"root": "DEL SynchronizedStatement", "operations": ["DEL SimpleName: caches", "DEL SynchronizedStatement", "DEL Block"]}, {"root": "DEL SimpleType: IRemoteCacheAttributes", "operations": ["DEL SimpleType: IRemoteCacheAttributes"]}, {"root": "DEL SimpleName: getDefaultCattr", "operations": ["DEL SimpleName: getDefaultCattr"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL ReturnStatement"]}, {"root": "DEL SimpleName: remoteWatch", "operations": ["DEL SimpleName: remoteWatch"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL SimpleName: caches", "DEL SynchronizedStatement", "DEL Block"]}, {"root": "DEL IfStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: debug", "DEL SimpleName: log", "DEL ExpressionStatement", "DEL StringLiteral: \"], deregistering listener.\"", "DEL IfStatement", "DEL StringLiteral: \"Found cache for[ \"", "DEL InfixExpression: +", "DEL Block"]}, {"root": "DEL SimpleName: remoteWatch", "operations": ["DEL SimpleName: remoteWatch"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getCacheName"]}, {"root": "DEL SimpleName: listener", "operations": ["DEL SimpleName: listener"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SynchronizedStatement", "DEL SimpleName: caches", "DEL MethodDeclaration", "DEL Block", "DEL Block"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: isDebugEnabled", "DEL MethodInvocation", "DEL SimpleName: log"]}, {"root": "DEL SimpleName: cacheName", "operations": ["DEL SimpleName: cacheName"]}, {"root": "DEL Block", "operations": ["DEL SimpleType: IRemoteCacheListener", "DEL VariableDeclarationFragment", "DEL Block", "DEL MethodInvocation", "DEL SynchronizedStatement", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: getRemoteCache", "DEL SimpleName: IRemoteCacheListener", "DEL SimpleName: cache", "DEL WildcardType: ?", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: rc", "DEL WildcardType: ?", "DEL ParameterizedType: IRemoteCacheListener<?,?>", "DEL Block", "DEL SimpleName: caches", "DEL SimpleName: listener", "DEL IfStatement", "DEL ParameterizedType: IRemoteCacheClient<?,?>"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: RemoteCacheNoWait", "DEL SimpleType: V", "DEL SingleMemberAnnotation", "DEL SimpleType: K", "DEL VariableDeclarationFragment", "DEL SimpleType: RemoteCacheNoWait", "DEL SimpleName: V", "DEL VariableDeclarationStatement", "DEL SimpleName: SuppressWarnings", "DEL SimpleName: K", "DEL StringLiteral: \"unchecked\"", "DEL SimpleName: remoteCacheNoWait2", "DEL ParameterizedType: RemoteCacheNoWait<K,V>"]}, {"root": "DEL SimpleName: remoteCacheNoWait2", "operations": ["DEL SimpleName: remoteCacheNoWait2"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: remoteCacheNoWait"]}, {"root": "DEL SynchronizedStatement", "operations": ["DEL SynchronizedStatement", "DEL SimpleName: caches"]}, {"root": "DEL TextElement: Host and Port uniquely identify a manager instance.", "operations": ["DEL TextElement: Host and Port uniquely identify a manager instance."]}, {"root": "DEL TextElement: <p>", "operations": ["DEL TextElement: <p>"]}, {"root": "DEL TextElement: Also starts up the monitoring daemon, if not already started.", "operations": ["DEL TextElement: Also starts up the monitoring daemon, if not already started."]}, {"root": "DEL TextElement: <p>", "operations": ["DEL TextElement: <p>"]}, {"root": "DEL TextElement: If the connection cannot be established, zombie objects will be used for future recovery", "operations": ["DEL TextElement: If the connection cannot be established, zombie objects will be used for future recovery"]}, {"root": "DEL TextElement: purposes.", "operations": ["DEL TextElement: purposes."]}, {"root": "DEL TextElement: <p>", "operations": ["DEL TextElement: <p>"]}, {"root": "DEL TagElement: @param", "operations": ["DEL SimpleName: cacheEventLogger", "DEL TagElement: @param"]}, {"root": "DEL TagElement: @param", "operations": ["DEL SimpleName: elementSerializer", "DEL TagElement: @param"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return", "DEL TextElement:  The instance value"]}, {"root": "DEL SimpleName: put", "operations": ["DEL SimpleName: put"]}, {"root": "DEL SimpleName: ins", "operations": ["DEL SimpleName: ins"]}, {"root": "DEL Modifier: static", "operations": ["DEL Modifier: static"]}, {"root": "DEL SimpleType: RemoteCacheManager", "operations": ["DEL SimpleType: RemoteCacheManager", "DEL SimpleName: RemoteCacheManager"]}, {"root": "DEL SimpleName: getInstance", "operations": ["DEL SimpleName: getInstance"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: ICompositeCacheManager", "DEL SingleVariableDeclaration", "DEL SimpleName: cacheMgr", "DEL SimpleName: ICompositeCacheManager"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: cacheEventLogger", "DEL SimpleType: ICacheEventLogger", "DEL SimpleName: ICacheEventLogger", "DEL SingleVariableDeclaration"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: elementSerializer", "DEL SimpleType: IElementSerializer", "DEL SimpleName: IElementSerializer", "DEL SingleVariableDeclaration"]}, {"root": "DEL Block", "operations": ["DEL ExpressionStatement", "DEL SimpleName: ins", "DEL SimpleName: port", "DEL VariableDeclarationFragment", "DEL IfStatement", "DEL SimpleName: port", "DEL ExpressionStatement", "DEL SimpleName: Thread", "DEL SimpleName: getRemotePort", "DEL MethodInvocation", "DEL QualifiedName: ins.clients", "DEL SimpleName: host", "DEL NullLiteral", "DEL SimpleName: getInstance", "DEL VariableDeclarationFragment", "DEL SimpleName: service", "DEL SimpleName: get", "DEL SimpleName: port", "DEL InfixExpression: <", "DEL SimpleName: monitor", "DEL NullLiteral", "DEL QualifiedName: ins.remoteCacheAttributes", "DEL Assignment: =", "DEL BooleanLiteral: true", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL SimpleName: ins", "DEL PrimitiveType: int", "DEL Block", "DEL SimpleName: cattr", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL SimpleName: String", "DEL Assignment: =", "DEL SimpleType: String", "DEL SimpleName: t", "DEL SimpleName: ins", "DEL ExpressionStatement", "DEL SimpleName: Location", "DEL ClassInstanceCreation", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleName: port", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: Thread", "DEL SimpleName: monitor", "DEL PostfixExpression: ++", "DEL SimpleName: setDaemon", "DEL StringLiteral: \"\"", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL NullLiteral", "DEL SimpleName: start", "DEL SimpleName: cattr", "DEL QualifiedName: Registry.REGISTRY_PORT", "DEL VariableDeclarationStatement", "DEL SimpleName: RemoteCacheMonitor", "DEL NullLiteral", "DEL NumberLiteral: 1024", "DEL SimpleName: elementSerializer", "DEL SimpleName: Location", "DEL SimpleName: instances", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL IfStatement", "DEL ExpressionStatement", "DEL SimpleName: String", "DEL ExpressionStatement", "DEL SimpleType: Location", "DEL SimpleName: t", "DEL SimpleName: instances", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL SimpleName: cacheEventLogger", "DEL Assignment: =", "DEL Assignment: =", "DEL SimpleType: RemoteCacheManager", "DEL InfixExpression: ==", "DEL VariableDeclarationStatement", "DEL SimpleType: Thread", "DEL SimpleName: cacheMgr", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleType: RemoteCacheManager", "DEL SimpleName: port", "DEL SimpleName: loc", "DEL NullLiteral", "DEL SimpleName: monitor", "DEL VariableDeclarationStatement", "DEL SimpleName: host", "DEL SimpleName: RemoteCacheManager", "DEL IfStatement", "DEL ExpressionStatement", "DEL Block", "DEL Assignment: =", "DEL SimpleName: t", "DEL VariableDeclarationFragment", "DEL SimpleName: cattr", "DEL SimpleType: String", "DEL VariableDeclarationStatement", "DEL Block", "DEL IfStatement", "DEL Block", "DEL InfixExpression: !=", "DEL SynchronizedStatement", "DEL SimpleName: getRemoteHost", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: ins", "DEL SimpleName: loc", "DEL SimpleName: host", "DEL ReturnStatement", "DEL SimpleName: host", "DEL SimpleName: service", "DEL SimpleName: monitor", "DEL SimpleName: ins", "DEL Block", "DEL SimpleType: Thread", "DEL SimpleType: Location", "DEL SimpleName: host", "DEL IfStatement", "DEL VariableDeclarationStatement"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: c", "DEL SimpleName: name", "DEL Assignment: =", "DEL MethodInvocation"]}, {"root": "DEL ThisExpression", "operations": ["DEL ThisExpression"]}, {"root": "DEL Block", "operations": ["DEL NullLiteral", "DEL SimpleName: log", "DEL InfixExpression: !=", "DEL SimpleName: c", "DEL StringLiteral: \"]\"", "DEL SimpleName: info", "DEL SimpleName: name", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL ParameterizedType: ICache<?,?>", "DEL SynchronizedStatement", "DEL SimpleName: c", "DEL Block", "DEL ExpressionStatement", "DEL IfStatement", "DEL StringLiteral: \"freeCache [\"", "DEL IfStatement", "DEL SimpleName: caches", "DEL InfixExpression: +", "DEL Block", "DEL Block", "DEL Block"]}, {"root": "DEL StringLiteral: \"Problem in release.\"", "operations": ["DEL StringLiteral: \"Problem in release.\""]}, {"root": "DEL Block", "operations": ["DEL IfStatement", "DEL SimpleName: c", "DEL Block", "DEL NullLiteral", "DEL InfixExpression: !=", "DEL Block"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: host", "DEL SimpleName: host", "DEL FieldAccess", "DEL ThisExpression", "DEL Assignment: ="]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL MethodDeclaration", "DEL SimpleName: clients", "DEL Block", "DEL Block", "DEL SynchronizedStatement", "DEL NumberLiteral: 0", "DEL SimpleName: caches", "DEL IfStatement", "DEL PrefixExpression: --", "DEL ReturnStatement", "DEL InfixExpression: !="]}, {"root": "DEL SimpleName: caches", "operations": ["DEL SimpleName: caches"]}, {"root": "DEL SimpleName: obj", "operations": ["DEL SimpleName: obj"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL MarkerAnnotation", "DEL SimpleName: Override"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL InfixExpression: &&", "operations": ["DEL InfixExpression: &&", "DEL QualifiedName: l.port", "DEL QualifiedName: l.host", "DEL InfixExpression: ==", "DEL NullLiteral", "DEL InfixExpression: ==", "DEL SimpleName: port"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: Object", "DEL SimpleType: Object", "DEL SimpleName: obj"]}, {"root": "DEL Block", "operations": ["DEL QualifiedName: l.port", "DEL QualifiedName: l.host", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL CastExpression", "DEL SimpleName: Location", "DEL ThisExpression", "DEL SimpleName: obj", "DEL Block", "DEL SimpleName: host", "DEL IfStatement", "DEL SimpleName: obj", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL InstanceofExpression", "DEL SimpleType: Location", "DEL IfStatement", "DEL ThisExpression", "DEL BooleanLiteral: true", "DEL SimpleName: host", "DEL BooleanLiteral: false", "DEL ParenthesizedExpression", "DEL SimpleName: obj", "DEL ReturnStatement", "DEL NullLiteral", "DEL ReturnStatement", "DEL NullLiteral", "DEL InfixExpression: ||", "DEL Block", "DEL Block", "DEL SimpleName: Location", "DEL Block", "DEL FieldAccess", "DEL InfixExpression: &&", "DEL VariableDeclarationFragment", "DEL SimpleName: l", "DEL SimpleType: Location", "DEL SimpleType: Location", "DEL InfixExpression: ==", "DEL InfixExpression: ==", "DEL SimpleName: Location", "DEL SimpleName: obj", "DEL InfixExpression: ==", "DEL SimpleName: equals", "DEL SimpleName: port", "DEL ReturnStatement", "DEL InfixExpression: =="]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Block", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL TextElement:  int", "DEL ReturnStatement", "DEL SimpleName: hashCode", "DEL TagElement", "DEL SimpleName: String", "DEL SimpleName: Location", "DEL SimpleName: host", "DEL PrimitiveType: int", "DEL FieldDeclaration", "DEL SimpleName: port", "DEL Javadoc", "DEL PrimitiveType: int", "DEL Javadoc", "DEL FieldAccess", "DEL Modifier: public", "DEL SimpleName: host", "DEL Modifier: final", "DEL TagElement", "DEL Modifier: public", "DEL SimpleName: port", "DEL SimpleName: hashCode", "DEL TextElement: Description of the Field ", "DEL TagElement", "DEL ThisExpression", "DEL SimpleName: host", "DEL TagElement: @param", "DEL ExpressionStatement", "DEL TypeDeclaration: class", "DEL VariableDeclarationFragment", "DEL TextElement: Location of the RMI registry.", "DEL SimpleName: port", "DEL SimpleName: Override", "DEL Modifier: static", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SimpleName: host", "DEL TagElement: @return", "DEL NullLiteral", "DEL TextElement: <p>", "DEL SimpleName: port", "DEL InfixExpression: ^", "DEL TagElement: @param", "DEL MarkerAnnotation", "DEL SimpleName: port", "DEL Javadoc", "DEL TagElement", "DEL MethodDeclaration", "DEL SimpleName: port", "DEL TextElement: Constructor for the Location object", "DEL Block", "DEL Javadoc", "DEL Modifier: final", "DEL MethodDeclaration", "DEL Modifier: final", "DEL SimpleName: host", "DEL TextElement: Description of the Field ", "DEL SingleVariableDeclaration", "DEL SimpleName: port", "DEL Javadoc", "DEL Modifier: public", "DEL ConditionalExpression", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL InfixExpression: ==", "DEL Modifier: private", "DEL SimpleType: String", "DEL FieldDeclaration", "DEL SimpleName: Location"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.jcs.engine.behavior.IShutdownObserver", "DEL SimpleName: Override", "DEL MethodDeclaration", "DEL MarkerAnnotation", "DEL SimpleName: isInfoEnabled", "DEL TagElement: @see", "DEL Javadoc", "DEL Block", "DEL SimpleName: shutdown", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: log", "DEL SimpleName: info", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL SimpleName: release", "DEL StringLiteral: \"Observed shutdown request.\"", "DEL MethodRef", "DEL IfStatement", "DEL SimpleName: shutdown", "DEL Modifier: public", "DEL Block", "DEL SimpleName: log", "DEL TextElement: <p>", "DEL TagElement", "DEL TextElement: Shutdown callback from composite cache manager."]}]}}, {"RemoteCacheManager_diff": {"operations": ["Move ImportDeclaration(33) into CompilationUnit(1322) at 1", "Move ImportDeclaration(35) into CompilationUnit(1322) at 2", "Move ImportDeclaration(37) into CompilationUnit(1322) at 3", "Move ImportDeclaration(39) into CompilationUnit(1322) at 4", "Move ImportDeclaration(41) into CompilationUnit(1322) at 5", "Move FieldDeclaration(93) into TypeDeclaration: class(1321) at 9", "Move FieldDeclaration(103) into TypeDeclaration: class(1321) at 18", "Move MethodDeclaration(464) into TypeDeclaration: class(1321) at 21", "Move MethodDeclaration(964) into TypeDeclaration: class(1321) at 27", "Update QualifiedName: java.rmi.registry.Registry(36) to java.util.concurrent.ConcurrentHashMap", "Update QualifiedName: java.util.HashMap(38) to java.util.concurrent.ConcurrentMap", "Update QualifiedName: java.util.Map(40) to java.util.concurrent.locks.ReentrantLock", "Insert FieldDeclaration(185) into TypeDeclaration: class(1321) at 13", "Move SingleVariableDeclaration(257) into MethodDeclaration(393) at 7", "Insert MethodDeclaration(629) into TypeDeclaration: class(1321) at 18", "Insert MethodDeclaration(669) into TypeDeclaration: class(1321) at 19", "Insert MethodDeclaration(1197) into TypeDeclaration: class(1321) at 26", "Move MethodDeclaration(1599) into TypeDeclaration: class(1321) at 35", "Update ParameterizedType: HashMap<String,RemoteCacheNoWait<?,?>>(136) to ConcurrentMap<String,RemoteCacheNoWait<?,?>>", "Move ParameterizedType: HashMap<String,RemoteCacheNoWait<?,?>>(136) into FieldDeclaration(92) at 2", "Update Modifier: static(74) to private", "Insert SimpleType: ReentrantLock(98) into FieldDeclaration(104) at 2", "Update Modifier: static(98) to final", "Move Javadoc(106) into FieldDeclaration(185) at 0", "Move Modifier: private(107) into FieldDeclaration(185) at 1", "Move Modifier: final(143) into FieldDeclaration(185) at 2", "Move SimpleType: String(1486) into FieldDeclaration(185) at 3", "Move VariableDeclarationFragment(147) into FieldDeclaration(185) at 4", "Update Modifier: private(245) to protected", "Move SingleVariableDeclaration(817) into MethodDeclaration(393) at 3", "Move ExpressionStatement(281) into Block(392) at 4", "Insert TypeParameter(493) into MethodDeclaration(520) at 2", "Insert TypeParameter(495) into MethodDeclaration(520) at 3", "Insert PrimitiveType: void(496) into MethodDeclaration(520) at 4", "Insert SimpleName: removeRemoteCacheListener(497) into MethodDeclaration(520) at 5", "Insert SingleVariableDeclaration(501) into MethodDeclaration(520) at 6", "Insert SingleVariableDeclaration(510) into MethodDeclaration(520) at 7", "Insert SimpleType: IOException(512) into MethodDeclaration(520) at 8", "Insert Block(519) into MethodDeclaration(520) at 9", "Insert Block(563) into MethodDeclaration(564) at 9", "Move Javadoc(605) into MethodDeclaration(629) at 0", "Move Modifier: public(606) into MethodDeclaration(629) at 1", "Move PrimitiveType: void(607) into MethodDeclaration(629) at 2", "Move SimpleName: removeRemoteCacheListener(608) into MethodDeclaration(629) at 3", "Move SingleVariableDeclaration(612) into MethodDeclaration(629) at 4", "Move SimpleType: IOException(614) into MethodDeclaration(629) at 5", "Move Block(702) into MethodDeclaration(629) at 6", "Move Javadoc(715) into MethodDeclaration(669) at 0", "Insert Modifier: public(638) into MethodDeclaration(669) at 1", "Insert PrimitiveType: void(639) into MethodDeclaration(669) at 2", "Insert SimpleName: removeRemoteCacheListener(640) into MethodDeclaration(669) at 3", "Move SingleVariableDeclaration(722) into MethodDeclaration(669) at 4", "Move SimpleType: IOException(724) into MethodDeclaration(669) at 5", "Insert Block(668) into MethodDeclaration(669) at 6", "Update Modifier: public(716) to private", "Update SimpleName: removeRemoteCacheListener(718) to removeListenerFromCache", "Insert SingleVariableDeclaration(679) into MethodDeclaration(727) at 3", "Insert SimpleType: IOException(681) into MethodDeclaration(727) at 4", "Insert Block(726) into MethodDeclaration(727) at 5", "Move SingleMemberAnnotation(1156) into MethodDeclaration(1009) at 1", "Insert Block(1008) into MethodDeclaration(1009) at 8", "Insert PrimitiveType: void(1020) into MethodDeclaration(1045) at 2", "Insert SimpleName: freeCache(1021) into MethodDeclaration(1045) at 3", "Move SingleVariableDeclaration(1248) into MethodDeclaration(1045) at 4", "Move SimpleType: IOException(1250) into MethodDeclaration(1045) at 5", "Insert Block(1044) into MethodDeclaration(1045) at 6", "Insert SingleVariableDeclaration(1064) into MethodDeclaration(1096) at 4", "Insert SimpleType: IOException(1066) into MethodDeclaration(1096) at 5", "Insert Block(1095) into MethodDeclaration(1096) at 6", "Move Javadoc(1349) into MethodDeclaration(1197) at 0", "Move Modifier: public(1350) into MethodDeclaration(1197) at 1", "Move PrimitiveType: void(1351) into MethodDeclaration(1197) at 2", "Move SimpleName: release(1352) into MethodDeclaration(1197) at 3", "Insert Block(1196) into MethodDeclaration(1197) at 4", "Move SimpleType: String(162) into MethodDeclaration(1281) at 3", "Update SimpleName: equals(1539) to getRegistryURL", "Insert Block(1280) into MethodDeclaration(1281) at 4", "Update SimpleType: HashMap(128) to ConcurrentMap", "Update SimpleName: RemoteCacheManager(80) to ReentrantLock", "Move SimpleName: RemoteCacheManager(80) into SimpleType: ReentrantLock(98) at 0", "Update SimpleName: instances(83) to cacheLock", "Update SimpleName: host(146) to registry", "Update SimpleType: String(248) to IRemoteCacheAttributes", "Move SimpleType: String(248) into SingleVariableDeclaration(210) at 0", "Update SimpleName: host(249) to cattr", "Move SimpleName: host(249) into SingleVariableDeclaration(210) at 1", "Update SimpleType: String(255) to RemoteCacheMonitor", "Update SimpleName: service(256) to monitor", "Insert ExpressionStatement(270) into Block(392) at 5", "Update TagElement: @return(453) to @param", "Insert TagElement: @param(487) into Javadoc(490) at 2", "Insert TagElement: @throws(489) into Javadoc(490) at 3", "Insert SimpleName: K(492) into TypeParameter(493) at 0", "Insert SimpleName: V(494) into TypeParameter(495) at 0", "Insert SimpleType: String(499) into SingleVariableDeclaration(501) at 0", "Insert SimpleName: cacheName(500) into SingleVariableDeclaration(501) at 1", "Insert ParameterizedType: IRemoteCacheListener<K,V>(508) into SingleVariableDeclaration(510) at 0", "Insert SimpleName: listener(509) into SingleVariableDeclaration(510) at 1", "Insert SimpleName: IOException(511) into SimpleType: IOException(512) at 0", "Move ExpressionStatement(781) into Block(519) at 0", "Move ExpressionStatement(593) into Block(563) at 0", "Move VariableDeclarationStatement(629) into Block(628) at 0", "Move VariableDeclarationStatement(737) into Block(668) at 0", "Move IfStatement(703) into Block(668) at 1", "Insert ParameterizedType: RemoteCacheNoWait<?,?>(677) into SingleVariableDeclaration(679) at 0", "Insert SimpleName: cache(678) into SingleVariableDeclaration(679) at 1", "Insert SimpleName: IOException(680) into SimpleType: IOException(681) at 0", "Move VariableDeclarationStatement(643) into Block(726) at 0", "Move IfStatement(764) into Block(726) at 1", "Move VariableDeclarationStatement(669) into Block(726) at 2", "Insert ExpressionStatement(725) into Block(726) at 3", "Insert VariableDeclarationStatement(830) into Block(1008) at 0", "Insert IfStatement(1005) into Block(1008) at 1", "Move ReturnStatement(1231) into Block(1008) at 2", "Update TagElement: @param(801) to @throws", "Insert VariableDeclarationStatement(1039) into Block(1044) at 0", "Move ExpressionStatement(919) into Block(1044) at 1", "Insert ParameterizedType: RemoteCacheNoWait<?,?>(1062) into SingleVariableDeclaration(1064) at 0", "Insert SimpleName: cache(1063) into SingleVariableDeclaration(1064) at 1", "Insert SimpleName: IOException(1065) into SimpleType: IOException(1066) at 0", "Insert IfStatement(1094) into Block(1095) at 0", "Insert ExpressionStatement(1154) into Block(1196) at 0", "Insert TryStatement(1195) into Block(1196) at 1", "Update TagElement: @param(1531) to ", "Move ReturnStatement(1586) into Block(1280) at 0", "Update SimpleName: HashMap(127) to ConcurrentMap", "Update ParameterizedType: Map<String,RemoteCacheNoWait<?,?>>(125) to ConcurrentHashMap<String,RemoteCacheNoWait<?,?>>", "Move ParameterizedType: Map<String,RemoteCacheNoWait<?,?>>(125) into ClassInstanceCreation(90) at 0", "Update TextElement: Contains mappings of Location instance to RemoteCacheManager instance. (71) to Lock for initialization of caches ", "Insert SimpleType: ReentrantLock(101) into ClassInstanceCreation(102) at 0", "Update TextElement: Monitors connections. (94) to For error notification ", "Update TextElement: Not so useful. How many getCaches over releases were called. (104) to The service found through lookup ", "Update SimpleName: host(232) to cattr", "Insert TextElement:  cache attributes(192) into TagElement: @param(193) at 1", "Update SimpleName: port(234) to cacheMgr", "Insert TextElement:  the cache hub(195) into TagElement: @param(196) at 1", "Update SimpleName: cacheMgr(238) to monitor", "Insert TextElement:  the cache monitor thread for error notifications(198) into TagElement: @param(199) at 1", "Update SimpleName: String(247) to IRemoteCacheAttributes", "Update SimpleName: String(254) to RemoteCacheMonitor", "Insert Assignment: =(269) into ExpressionStatement(270) at 0", "Update TextElement: Gets the defaultCattr attribute of the RemoteCacheManager object.(449) to Removes a listener. When the primary recovers the failover must deregister itself for a", "Insert TextElement: region. The failover runner will call this method to de-register. We do not want to deregister(477) into TagElement(481) at 1", "Insert TextElement: all listeners to a remote server, in case a failover is a primary of another region. Having(478) into TagElement(481) at 2", "Insert TextElement: one regions failover act as another servers primary is not currently supported.(479) into TagElement(481) at 3", "Insert SimpleName: cacheName(482) into TagElement: @param(484) at 0", "Update TextElement:  The defaultCattr value(452) to  the name of the cache", "Insert SimpleName: listener(485) into TagElement: @param(487) at 0", "Insert TextElement:  the listener to de-register(486) into TagElement: @param(487) at 1", "Insert SimpleName: IOException(488) into TagElement: @throws(489) at 0", "Insert SimpleName: String(498) into SimpleType: String(499) at 0", "Insert SimpleType: IRemoteCacheListener(503) into ParameterizedType: IRemoteCacheListener<K,V>(508) at 0", "Insert SimpleType: K(505) into ParameterizedType: IRemoteCacheListener<K,V>(508) at 1", "Insert SimpleType: V(507) into ParameterizedType: IRemoteCacheListener<K,V>(508) at 2", "Move InfixExpression: !=(632) into IfStatement(627) at 0", "Insert Block(603) into IfStatement(627) at 1", "Move InfixExpression: !=(740) into IfStatement(667) at 0", "Update SimpleType: IRemoteCacheClient(742) to RemoteCacheNoWait", "Move SimpleType: IRemoteCacheClient(742) into ParameterizedType: RemoteCacheNoWait<?,?>(677) at 0", "Move WildcardType: ?(743) into ParameterizedType: RemoteCacheNoWait<?,?>(677) at 1", "Move WildcardType: ?(744) into ParameterizedType: RemoteCacheNoWait<?,?>(677) at 2", "Move MethodInvocation(646) into IfStatement(707) at 0", "Insert MethodInvocation(724) into ExpressionStatement(725) at 0", "Move ParameterizedType: RemoteCacheNoWait<K,V>(1047) into VariableDeclarationStatement(830) at 0", "Insert VariableDeclarationFragment(829) into VariableDeclarationStatement(830) at 1", "Insert InfixExpression: ==(833) into IfStatement(1005) at 0", "Move Block(1232) into IfStatement(1005) at 1", "Update TextElement: Returns an instance of RemoteCacheManager for the given connection parameters.(788) to Releases the cache.", "Update SimpleName: cattr(798) to name", "Insert TextElement:  the name of the cache(1014) into TagElement: @param(1015) at 1", "Update SimpleName: cacheMgr(800) to IOException", "Insert ParameterizedType: RemoteCacheNoWait<?,?>(1032) into VariableDeclarationStatement(1039) at 0", "Insert VariableDeclarationFragment(1038) into VariableDeclarationStatement(1039) at 1", "Update TextElement: Releases.(1234) to Releases the cache.", "Update SimpleName: name(1237) to cache", "Insert TextElement:  the cache instance(1050) into TagElement: @param(1051) at 1", "Update SimpleType: ICache(1265) to RemoteCacheNoWait", "Move SimpleType: ICache(1265) into ParameterizedType: RemoteCacheNoWait<?,?>(1062) at 0", "Move WildcardType: ?(1266) into ParameterizedType: RemoteCacheNoWait<?,?>(1062) at 1", "Move WildcardType: ?(1267) into ParameterizedType: RemoteCacheNoWait<?,?>(1062) at 2", "Insert InfixExpression: !=(1069) into IfStatement(1094) at 0", "Insert Block(1093) into IfStatement(1094) at 1", "Insert MethodInvocation(1153) into ExpressionStatement(1154) at 0", "Insert Block(1189) into TryStatement(1195) at 0", "Insert Block(1194) into TryStatement(1195) at 1", "Insert ThisExpression(1234) into SynchronizedStatement(1266) at 0", "Insert TextElement: Get the registry RMI URL(1269) into TagElement(1270) at 0", "Update TextElement:  true if the host and port are equal(1532) to  the registry URL", "Insert SimpleName: registry(1278) into ReturnStatement(1279) at 0", "Update SimpleType: Map(117) to ConcurrentHashMap", "Update SimpleName: RemoteCacheManager(88) to ReentrantLock", "Move SimpleName: RemoteCacheManager(88) into SimpleType: ReentrantLock(101) at 0", "Move FieldAccess(461) into Assignment: =(231) at 0", "Update SimpleName: host(273) to cattr", "Update SimpleName: port(279) to monitor", "Move FieldAccess(284) into Assignment: =(269) at 0", "Insert MethodInvocation(268) into Assignment: =(269) at 1", "Move ExpressionStatement(530) into Block(459) at 1", "Update SimpleName: IRemoteCacheAttributes(456) to IRemoteCacheListener", "Move SimpleName: IRemoteCacheAttributes(456) into SimpleType: IRemoteCacheListener(503) at 0", "Insert SimpleName: K(504) into SimpleType: K(505) at 0", "Insert SimpleName: V(506) into SimpleType: V(507) at 0", "Update SimpleName: removeCacheListener(587) to removeRemoteCacheListener", "Insert ExpressionStatement(602) into Block(603) at 0", "Insert IfStatement(625) into Block(626) at 0", "Update SimpleName: IRemoteCacheClient(741) to RemoteCacheNoWait", "Insert SimpleName: removeRemoteCacheListener(719) into MethodInvocation(724) at 0", "Insert MethodInvocation(722) into MethodInvocation(724) at 1", "Update SimpleName: getListener(772) to listener", "Move SimpleName: getListener(772) into MethodInvocation(724) at 2", "Insert SimpleName: remoteCacheNoWait(814) into VariableDeclarationFragment(829) at 0", "Insert CastExpression(828) into VariableDeclarationFragment(829) at 1", "Insert SimpleName: remoteCacheNoWait(831) into InfixExpression: ==(833) at 0", "Insert NullLiteral(832) into InfixExpression: ==(833) at 1", "Insert ExpressionStatement(837) into Block(1004) at 0", "Insert TryStatement(1003) into Block(1004) at 1", "Insert SimpleType: RemoteCacheNoWait(1029) into ParameterizedType: RemoteCacheNoWait<?,?>(1032) at 0", "Insert WildcardType: ?(1030) into ParameterizedType: RemoteCacheNoWait<?,?>(1032) at 1", "Insert WildcardType: ?(1031) into ParameterizedType: RemoteCacheNoWait<?,?>(1032) at 2", "Insert SimpleName: c(1033) into VariableDeclarationFragment(1038) at 0", "Insert MethodInvocation(1037) into VariableDeclarationFragment(1038) at 1", "Update SimpleName: instances(914) to freeCache", "Update SimpleName: loc(916) to c", "Update SimpleName: ICache(1264) to RemoteCacheNoWait", "Insert SimpleName: cache(1067) into InfixExpression: !=(1069) at 0", "Insert NullLiteral(1068) into InfixExpression: !=(1069) at 1", "Insert IfStatement(1084) into Block(1093) at 0", "Move ExpressionStatement(1290) into Block(1093) at 1", "Move ExpressionStatement(1294) into Block(1093) at 2", "Insert SimpleName: cacheLock(1151) into MethodInvocation(1153) at 0", "Insert SimpleName: lock(1152) into MethodInvocation(1153) at 1", "Move EnhancedForStatement(1397) into Block(1189) at 0", "Move ExpressionStatement(1521) into Block(1194) at 0", "Update SimpleName: Map(116) to ConcurrentHashMap", "Update SimpleName: port(277) to monitor", "Update SimpleName: service(283) to registry", "Move SimpleName: RemoteUtils(316) into MethodInvocation(268) at 0", "Move SimpleName: getNamingURL(317) into MethodInvocation(268) at 1", "Insert MethodInvocation(264) into MethodInvocation(268) at 2", "Move MethodInvocation(850) into MethodInvocation(268) at 3", "Move SimpleName: cattr(650) into MethodInvocation(559) at 0", "Move SimpleName: getCacheName(651) into MethodInvocation(559) at 1", "Insert MethodInvocation(601) into ExpressionStatement(602) at 0", "Move MethodInvocation(681) into IfStatement(625) at 0", "Move Block(687) into IfStatement(625) at 1", "Move IfStatement(699) into IfStatement(625) at 2", "Insert SimpleName: cache(720) into MethodInvocation(722) at 0", "Update SimpleName: rc(771) to getCacheName", "Move SimpleName: rc(771) into MethodInvocation(722) at 1", "Insert ParameterizedType: RemoteCacheNoWait<K,V>(821) into CastExpression(828) at 0", "Insert MethodInvocation(827) into CastExpression(828) at 1", "Insert MethodInvocation(836) into ExpressionStatement(837) at 0", "Move Block(1228) into TryStatement(1003) at 0", "Insert Block(1002) into TryStatement(1003) at 1", "Update SimpleName: RemoteCacheManager(899) to RemoteCacheNoWait", "Move SimpleName: RemoteCacheManager(899) into SimpleType: RemoteCacheNoWait(1029) at 0", "Insert SimpleName: caches(1034) into MethodInvocation(1037) at 0", "Insert SimpleName: remove(1035) into MethodInvocation(1037) at 1", "Insert SimpleName: name(1036) into MethodInvocation(1037) at 2", "Move MethodInvocation(1253) into IfStatement(1084) at 0", "Insert Block(1083) into IfStatement(1084) at 1", "Insert Block(1187) into EnhancedForStatement(1188) at 2", "Insert MethodInvocation(1192) into ExpressionStatement(1193) at 0", "Update SimpleName: host(318) to cattr", "Move SimpleName: host(318) into MethodInvocation(264) at 0", "Update SimpleName: port(319) to getRemoteLocation", "Move SimpleName: port(319) into MethodInvocation(264) at 1", "Insert SimpleName: removeListenerFromCache(599) into MethodInvocation(601) at 0", "Insert SimpleName: cache(600) into MethodInvocation(601) at 1", "Update SimpleName: removeCacheListener(671) to removeListenerFromCache", "Update SimpleName: cattr(672) to cache", "Move SimpleName: cattr(672) into MethodInvocation(664) at 2", "Insert SimpleType: RemoteCacheNoWait(816) into ParameterizedType: RemoteCacheNoWait<K,V>(821) at 0", "Insert SimpleType: K(818) into ParameterizedType: RemoteCacheNoWait<K,V>(821) at 1", "Insert SimpleType: V(820) into ParameterizedType: RemoteCacheNoWait<K,V>(821) at 2", "Insert SimpleName: caches(822) into MethodInvocation(827) at 0", "Insert SimpleName: get(823) into MethodInvocation(827) at 1", "Insert MethodInvocation(826) into MethodInvocation(827) at 2", "Insert SimpleName: cacheLock(834) into MethodInvocation(836) at 0", "Insert SimpleName: lock(835) into MethodInvocation(836) at 1", "Insert ExpressionStatement(1001) into Block(1002) at 0", "Move ExpressionStatement(1280) into Block(1083) at 0", "Update SimpleName: removeRemoteCacheListener(1287) to removeListenerFromCache", "Update SimpleName: name(1288) to cache", "Update SimpleName: c(1291) to cache", "Move TryStatement(1393) into Block(1187) at 0", "Insert SimpleName: cacheLock(1190) into MethodInvocation(1192) at 0", "Insert SimpleName: unlock(1191) into MethodInvocation(1192) at 1", "Update SimpleName: RemoteCacheMonitor(438) to monitor", "Move SimpleName: RemoteCacheMonitor(438) into MethodInvocation(387) at 0", "Insert MethodInvocation(701) into InfixExpression: +(703) at 1", "Insert SimpleName: RemoteCacheNoWait(815) into SimpleType: RemoteCacheNoWait(816) at 0", "Insert SimpleName: K(817) into SimpleType: K(818) at 0", "Insert SimpleName: V(819) into SimpleType: V(820) at 0", "Insert SimpleName: cattr(824) into MethodInvocation(826) at 0", "Insert SimpleName: getCacheName(825) into MethodInvocation(826) at 1", "Insert MethodInvocation(1000) into ExpressionStatement(1001) at 0", "Insert MethodInvocation(1081) into ExpressionStatement(1082) at 0", "Insert SimpleName: cache(699) into MethodInvocation(701) at 0", "Insert SimpleName: getCacheName(700) into MethodInvocation(701) at 1", "Move CastExpression(1077) into Assignment: =(853) at 1", "Insert SimpleName: cacheLock(998) into MethodInvocation(1000) at 0", "Insert SimpleName: unlock(999) into MethodInvocation(1000) at 1", "Insert SimpleName: log(1073) into MethodInvocation(1081) at 0", "Insert SimpleName: info(1074) into MethodInvocation(1081) at 1", "Insert InfixExpression: +(1080) into MethodInvocation(1081) at 2", "Insert StringLiteral: \"freeCache [\"(1075) into InfixExpression: +(1080) at 0", "Insert MethodInvocation(1078) into InfixExpression: +(1080) at 1", "Insert StringLiteral: \"]\"(1079) into InfixExpression: +(1080) at 2", "Update SimpleName: caches(1275) to cache", "Move SimpleName: caches(1275) into MethodInvocation(1078) at 0", "Update SimpleName: get(1276) to getCacheName", "Move SimpleName: get(1276) into MethodInvocation(1078) at 1", "Insert SimpleName: c(1166) into MethodInvocation(1167) at 1", "Insert SimpleName: monitor(951) into ClassInstanceCreation(952) at 4", "Insert InfixExpression: +(1180) into MethodInvocation(1182) at 2", "Insert StringLiteral: \"Problem releasing \"(1176) into InfixExpression: +(1180) at 0", "Move MethodInvocation(1377) into InfixExpression: +(1180) at 1", "Update StringLiteral: \"IOException. Problem adding listener. Message: \"(1123) to \"Problem adding listener. Message: \"", "Delete QualifiedName: org.apache.commons.jcs.engine.behavior.ICache(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.apache.commons.jcs.engine.behavior.IShutdownObserver(24)", "Delete ImportDeclaration(25)", "Delete SimpleName: IShutdownObserver(52)", "Delete SimpleType: IShutdownObserver(53)", "Delete PrimitiveType: int(108)", "Delete SimpleName: clients(109)", "Delete VariableDeclarationFragment(110)", "Delete FieldDeclaration(111)", "Delete Modifier: final(75)", "Delete SimpleName: Map(76)", "Delete SimpleType: Map(77)", "Delete SimpleName: Location(78)", "Delete SimpleType: Location(79)", "Delete SimpleType: RemoteCacheManager(81)", "Delete ParameterizedType: Map<Location,RemoteCacheManager>(82)", "Delete SimpleName: HashMap(84)", "Delete SimpleType: HashMap(85)", "Delete SimpleName: Location(86)", "Delete SimpleType: Location(87)", "Delete SimpleType: RemoteCacheManager(89)", "Delete ParameterizedType: HashMap<Location,RemoteCacheManager>(90)", "Delete TextElement: The remote host (140)", "Delete TagElement(141)", "Delete Javadoc(142)", "Delete SimpleName: String(144)", "Delete SimpleType: String(145)", "Delete FieldDeclaration(148)", "Delete TextElement: The remote port (149)", "Delete TagElement(150)", "Delete Javadoc(151)", "Delete Modifier: final(152)", "Delete PrimitiveType: int(153)", "Delete SimpleName: port(154)", "Delete VariableDeclarationFragment(155)", "Delete FieldDeclaration(156)", "Delete TextElement: The service name (157)", "Delete TagElement(158)", "Delete Javadoc(159)", "Delete Modifier: final(160)", "Delete SimpleName: service(163)", "Delete VariableDeclarationFragment(164)", "Delete FieldDeclaration(165)", "Delete SimpleName: service(236)", "Delete TagElement: @param(237)", "Delete PrimitiveType: int(251)", "Delete SimpleName: port(252)", "Delete SingleVariableDeclaration(253)", "Delete SimpleName: service(285)", "Delete Assignment: =(286)", "Delete ExpressionStatement(287)", "Delete ThisExpression(306)", "Delete SimpleName: cacheMgr(307)", "Delete FieldAccess(308)", "Delete SimpleName: registerShutdownObserver(309)", "Delete ThisExpression(310)", "Delete MethodInvocation(311)", "Delete ExpressionStatement(312)", "Delete SimpleName: String(313)", "Delete SimpleType: String(314)", "Delete SimpleName: registry(315)", "Delete MethodInvocation(321)", "Delete VariableDeclarationFragment(322)", "Delete VariableDeclarationStatement(323)", "Delete SimpleName: getInstance(439)", "Delete MethodInvocation(440)", "Delete SimpleName: caches(522)", "Delete Block(531)", "Delete SynchronizedStatement(532)", "Delete SimpleType: IRemoteCacheAttributes(457)", "Delete SimpleName: getDefaultCattr(458)", "Delete ReturnStatement(462)", "Delete Block(463)", "Delete SimpleName: remoteWatch(586)", "Delete SimpleName: caches(585)", "Delete Block(594)", "Delete SynchronizedStatement(595)", "Delete Block(596)", "Delete SimpleName: log(647)", "Delete SimpleName: debug(648)", "Delete StringLiteral: \"Found cache for[ \"(649)", "Delete StringLiteral: \"], deregistering listener.\"(653)", "Delete InfixExpression: +(654)", "Delete MethodInvocation(655)", "Delete ExpressionStatement(656)", "Delete Block(657)", "Delete IfStatement(658)", "Delete SimpleName: remoteWatch(670)", "Delete SimpleName: getCacheName(673)", "Delete MethodInvocation(674)", "Delete SimpleName: listener(675)", "Delete SimpleName: caches(615)", "Delete Block(704)", "Delete SynchronizedStatement(705)", "Delete Block(706)", "Delete MethodDeclaration(707)", "Delete SimpleName: log(752)", "Delete SimpleName: isDebugEnabled(753)", "Delete MethodInvocation(754)", "Delete SimpleName: cacheName(758)", "Delete SimpleName: caches(725)", "Delete ParameterizedType: IRemoteCacheClient<?,?>(745)", "Delete SimpleName: rc(746)", "Delete SimpleName: cache(747)", "Delete SimpleName: getRemoteCache(748)", "Delete MethodInvocation(749)", "Delete VariableDeclarationFragment(750)", "Delete VariableDeclarationStatement(751)", "Delete SimpleName: IRemoteCacheListener(765)", "Delete SimpleType: IRemoteCacheListener(766)", "Delete WildcardType: ?(767)", "Delete WildcardType: ?(768)", "Delete ParameterizedType: IRemoteCacheListener<?,?>(769)", "Delete SimpleName: listener(770)", "Delete MethodInvocation(773)", "Delete VariableDeclarationFragment(774)", "Delete VariableDeclarationStatement(775)", "Delete Block(782)", "Delete IfStatement(783)", "Delete Block(784)", "Delete SynchronizedStatement(785)", "Delete Block(786)", "Delete SimpleName: SuppressWarnings(1053)", "Delete StringLiteral: \"unchecked\"(1054)", "Delete SingleMemberAnnotation(1055)", "Delete SimpleName: RemoteCacheNoWait(1056)", "Delete SimpleType: RemoteCacheNoWait(1057)", "Delete SimpleName: K(1058)", "Delete SimpleType: K(1059)", "Delete SimpleName: V(1060)", "Delete SimpleType: V(1061)", "Delete ParameterizedType: RemoteCacheNoWait<K,V>(1062)", "Delete SimpleName: remoteCacheNoWait2(1063)", "Delete VariableDeclarationFragment(1078)", "Delete VariableDeclarationStatement(1079)", "Delete SimpleName: remoteCacheNoWait2(1081)", "Delete SimpleName: remoteCacheNoWait(1048)", "Delete NullLiteral(1049)", "Delete VariableDeclarationFragment(1050)", "Delete VariableDeclarationStatement(1051)", "Delete SimpleName: caches(1052)", "Delete SynchronizedStatement(1229)", "Delete TextElement: Host and Port uniquely identify a manager instance.(790)", "Delete TextElement: <p>(791)", "Delete TextElement: Also starts up the monitoring daemon, if not already started.(792)", "Delete TextElement: <p>(793)", "Delete TextElement: If the connection cannot be established, zombie objects will be used for future recovery(794)", "Delete TextElement: purposes.(795)", "Delete TextElement: <p>(796)", "Delete SimpleName: cacheEventLogger(802)", "Delete TagElement: @param(803)", "Delete SimpleName: elementSerializer(804)", "Delete TagElement: @param(805)", "Delete TextElement:  The instance value(806)", "Delete TagElement: @return(807)", "Delete SimpleName: put(915)", "Delete SimpleName: ins(917)", "Delete Modifier: static(810)", "Delete SimpleName: RemoteCacheManager(811)", "Delete SimpleType: RemoteCacheManager(812)", "Delete SimpleName: getInstance(813)", "Delete SimpleName: ICompositeCacheManager(818)", "Delete SimpleType: ICompositeCacheManager(819)", "Delete SimpleName: cacheMgr(820)", "Delete SingleVariableDeclaration(821)", "Delete SimpleName: ICacheEventLogger(822)", "Delete SimpleType: ICacheEventLogger(823)", "Delete SimpleName: cacheEventLogger(824)", "Delete SingleVariableDeclaration(825)", "Delete SimpleName: IElementSerializer(826)", "Delete SimpleType: IElementSerializer(827)", "Delete SimpleName: elementSerializer(828)", "Delete SingleVariableDeclaration(829)", "Delete SimpleName: String(830)", "Delete SimpleType: String(831)", "Delete SimpleName: host(832)", "Delete SimpleName: cattr(833)", "Delete SimpleName: getRemoteHost(834)", "Delete MethodInvocation(835)", "Delete VariableDeclarationFragment(836)", "Delete VariableDeclarationStatement(837)", "Delete PrimitiveType: int(838)", "Delete SimpleName: port(839)", "Delete SimpleName: cattr(840)", "Delete SimpleName: getRemotePort(841)", "Delete MethodInvocation(842)", "Delete VariableDeclarationFragment(843)", "Delete VariableDeclarationStatement(844)", "Delete SimpleName: String(845)", "Delete SimpleType: String(846)", "Delete SimpleName: service(847)", "Delete VariableDeclarationFragment(851)", "Delete VariableDeclarationStatement(852)", "Delete SimpleName: host(853)", "Delete NullLiteral(854)", "Delete InfixExpression: ==(855)", "Delete SimpleName: host(856)", "Delete StringLiteral: \"\"(857)", "Delete Assignment: =(858)", "Delete ExpressionStatement(859)", "Delete Block(860)", "Delete IfStatement(861)", "Delete SimpleName: port(862)", "Delete NumberLiteral: 1024(863)", "Delete InfixExpression: <(864)", "Delete SimpleName: port(865)", "Delete QualifiedName: Registry.REGISTRY_PORT(866)", "Delete Assignment: =(867)", "Delete ExpressionStatement(868)", "Delete Block(869)", "Delete IfStatement(870)", "Delete SimpleName: Location(871)", "Delete SimpleType: Location(872)", "Delete SimpleName: loc(873)", "Delete SimpleName: Location(874)", "Delete SimpleType: Location(875)", "Delete SimpleName: host(876)", "Delete SimpleName: port(877)", "Delete ClassInstanceCreation(878)", "Delete VariableDeclarationFragment(879)", "Delete VariableDeclarationStatement(880)", "Delete SimpleName: RemoteCacheManager(881)", "Delete SimpleType: RemoteCacheManager(882)", "Delete SimpleName: ins(883)", "Delete NullLiteral(884)", "Delete VariableDeclarationFragment(885)", "Delete VariableDeclarationStatement(886)", "Delete SimpleName: instances(887)", "Delete SimpleName: ins(888)", "Delete SimpleName: instances(889)", "Delete SimpleName: get(890)", "Delete SimpleName: loc(891)", "Delete MethodInvocation(892)", "Delete Assignment: =(893)", "Delete ExpressionStatement(894)", "Delete SimpleName: ins(895)", "Delete NullLiteral(896)", "Delete InfixExpression: ==(897)", "Delete SimpleName: ins(898)", "Delete SimpleType: RemoteCacheManager(900)", "Delete SimpleName: host(901)", "Delete SimpleName: port(902)", "Delete SimpleName: service(903)", "Delete SimpleName: cacheMgr(904)", "Delete SimpleName: cacheEventLogger(905)", "Delete SimpleName: elementSerializer(906)", "Delete ClassInstanceCreation(907)", "Delete Assignment: =(908)", "Delete ExpressionStatement(909)", "Delete QualifiedName: ins.remoteCacheAttributes(910)", "Delete SimpleName: cattr(911)", "Delete Assignment: =(912)", "Delete ExpressionStatement(913)", "Delete Block(920)", "Delete IfStatement(921)", "Delete Block(922)", "Delete SynchronizedStatement(923)", "Delete QualifiedName: ins.clients(924)", "Delete PostfixExpression: ++(925)", "Delete ExpressionStatement(926)", "Delete SimpleName: monitor(927)", "Delete NullLiteral(928)", "Delete InfixExpression: ==(929)", "Delete SimpleName: monitor(930)", "Delete SimpleName: RemoteCacheMonitor(931)", "Delete SimpleName: getInstance(932)", "Delete MethodInvocation(933)", "Delete Assignment: =(934)", "Delete ExpressionStatement(935)", "Delete SimpleName: monitor(936)", "Delete NullLiteral(937)", "Delete InfixExpression: !=(938)", "Delete SimpleName: Thread(939)", "Delete SimpleType: Thread(940)", "Delete SimpleName: t(941)", "Delete SimpleName: Thread(942)", "Delete SimpleType: Thread(943)", "Delete SimpleName: monitor(944)", "Delete ClassInstanceCreation(945)", "Delete VariableDeclarationFragment(946)", "Delete VariableDeclarationStatement(947)", "Delete SimpleName: t(948)", "Delete SimpleName: setDaemon(949)", "Delete BooleanLiteral: true(950)", "Delete MethodInvocation(951)", "Delete ExpressionStatement(952)", "Delete SimpleName: t(953)", "Delete SimpleName: start(954)", "Delete MethodInvocation(955)", "Delete ExpressionStatement(956)", "Delete Block(957)", "Delete IfStatement(958)", "Delete Block(959)", "Delete IfStatement(960)", "Delete SimpleName: ins(961)", "Delete ReturnStatement(962)", "Delete Block(963)", "Delete SimpleName: c(1274)", "Delete SimpleName: name(1277)", "Delete MethodInvocation(1278)", "Delete Assignment: =(1279)", "Delete ThisExpression(1286)", "Delete SimpleName: log(1254)", "Delete SimpleName: info(1255)", "Delete StringLiteral: \"freeCache [\"(1256)", "Delete SimpleName: name(1257)", "Delete StringLiteral: \"]\"(1258)", "Delete InfixExpression: +(1259)", "Delete MethodInvocation(1260)", "Delete ExpressionStatement(1261)", "Delete Block(1262)", "Delete IfStatement(1263)", "Delete ParameterizedType: ICache<?,?>(1268)", "Delete SimpleName: c(1269)", "Delete NullLiteral(1270)", "Delete VariableDeclarationFragment(1271)", "Delete VariableDeclarationStatement(1272)", "Delete SimpleName: caches(1273)", "Delete Block(1281)", "Delete SynchronizedStatement(1282)", "Delete SimpleName: c(1283)", "Delete NullLiteral(1284)", "Delete InfixExpression: !=(1285)", "Delete Block(1295)", "Delete IfStatement(1296)", "Delete Block(1297)", "Delete StringLiteral: \"Problem in release.\"(1387)", "Delete SimpleName: c(1371)", "Delete NullLiteral(1372)", "Delete InfixExpression: !=(1373)", "Delete Block(1394)", "Delete IfStatement(1395)", "Delete Block(1396)", "Delete ThisExpression(1516)", "Delete SimpleName: host(1517)", "Delete FieldAccess(1518)", "Delete SimpleName: host(1519)", "Delete Assignment: =(1520)", "Delete SimpleName: clients(1353)", "Delete PrefixExpression: --(1354)", "Delete NumberLiteral: 0(1355)", "Delete InfixExpression: !=(1356)", "Delete ReturnStatement(1357)", "Delete Block(1358)", "Delete IfStatement(1359)", "Delete SimpleName: caches(1360)", "Delete Block(1398)", "Delete SynchronizedStatement(1399)", "Delete Block(1400)", "Delete MethodDeclaration(1401)", "Delete SimpleName: caches(1438)", "Delete SimpleName: obj(1530)", "Delete SimpleName: Override(1535)", "Delete MarkerAnnotation(1536)", "Delete PrimitiveType: boolean(1538)", "Delete QualifiedName: l.host(1579)", "Delete NullLiteral(1580)", "Delete InfixExpression: ==(1581)", "Delete SimpleName: port(1582)", "Delete QualifiedName: l.port(1583)", "Delete InfixExpression: ==(1584)", "Delete InfixExpression: &&(1585)", "Delete SimpleName: Object(1540)", "Delete SimpleType: Object(1541)", "Delete SimpleName: obj(1542)", "Delete SingleVariableDeclaration(1543)", "Delete SimpleName: obj(1544)", "Delete ThisExpression(1545)", "Delete InfixExpression: ==(1546)", "Delete BooleanLiteral: true(1547)", "Delete ReturnStatement(1548)", "Delete Block(1549)", "Delete IfStatement(1550)", "Delete SimpleName: obj(1551)", "Delete NullLiteral(1552)", "Delete InfixExpression: ==(1553)", "Delete SimpleName: obj(1554)", "Delete SimpleName: Location(1555)", "Delete SimpleType: Location(1556)", "Delete InstanceofExpression(1557)", "Delete ParenthesizedExpression(1558)", "Delete PrefixExpression: !(1559)", "Delete InfixExpression: ||(1560)", "Delete BooleanLiteral: false(1561)", "Delete ReturnStatement(1562)", "Delete Block(1563)", "Delete IfStatement(1564)", "Delete SimpleName: Location(1565)", "Delete SimpleType: Location(1566)", "Delete SimpleName: l(1567)", "Delete SimpleName: Location(1568)", "Delete SimpleType: Location(1569)", "Delete SimpleName: obj(1570)", "Delete CastExpression(1571)", "Delete VariableDeclarationFragment(1572)", "Delete VariableDeclarationStatement(1573)", "Delete ThisExpression(1574)", "Delete SimpleName: host(1575)", "Delete FieldAccess(1576)", "Delete NullLiteral(1577)", "Delete InfixExpression: ==(1578)", "Delete Block(1587)", "Delete IfStatement(1588)", "Delete SimpleName: host(1589)", "Delete SimpleName: equals(1590)", "Delete QualifiedName: l.host(1591)", "Delete MethodInvocation(1592)", "Delete SimpleName: port(1593)", "Delete QualifiedName: l.port(1594)", "Delete InfixExpression: ==(1595)", "Delete InfixExpression: &&(1596)", "Delete ReturnStatement(1597)", "Delete Block(1598)", "Delete TextElement: Location of the RMI registry.(1473)", "Delete TagElement(1474)", "Delete Javadoc(1475)", "Delete Modifier: private(1476)", "Delete Modifier: static(1477)", "Delete Modifier: final(1478)", "Delete SimpleName: Location(1479)", "Delete TextElement: Description of the Field (1480)", "Delete TagElement(1481)", "Delete Javadoc(1482)", "Delete Modifier: public(1483)", "Delete Modifier: final(1484)", "Delete SimpleName: host(1487)", "Delete VariableDeclarationFragment(1488)", "Delete FieldDeclaration(1489)", "Delete TextElement: Description of the Field (1490)", "Delete TagElement(1491)", "Delete Javadoc(1492)", "Delete Modifier: public(1493)", "Delete Modifier: final(1494)", "Delete PrimitiveType: int(1495)", "Delete SimpleName: port(1496)", "Delete VariableDeclarationFragment(1497)", "Delete FieldDeclaration(1498)", "Delete TextElement: Constructor for the Location object(1499)", "Delete TextElement: <p>(1500)", "Delete TagElement(1501)", "Delete SimpleName: host(1502)", "Delete TagElement: @param(1503)", "Delete SimpleName: port(1504)", "Delete TagElement: @param(1505)", "Delete Javadoc(1506)", "Delete Modifier: public(1507)", "Delete SimpleName: Location(1508)", "Delete SimpleName: String(1509)", "Delete SimpleType: String(1510)", "Delete SimpleName: host(1511)", "Delete SingleVariableDeclaration(1512)", "Delete PrimitiveType: int(1513)", "Delete SimpleName: port(1514)", "Delete SingleVariableDeclaration(1515)", "Delete ThisExpression(1522)", "Delete SimpleName: port(1523)", "Delete FieldAccess(1524)", "Delete SimpleName: port(1525)", "Delete Assignment: =(1526)", "Delete ExpressionStatement(1527)", "Delete Block(1528)", "Delete MethodDeclaration(1529)", "Delete TextElement:  int(1600)", "Delete TagElement: @return(1601)", "Delete Javadoc(1602)", "Delete SimpleName: Override(1603)", "Delete MarkerAnnotation(1604)", "Delete Modifier: public(1605)", "Delete PrimitiveType: int(1606)", "Delete SimpleName: hashCode(1607)", "Delete SimpleName: host(1608)", "Delete NullLiteral(1609)", "Delete InfixExpression: ==(1610)", "Delete SimpleName: port(1611)", "Delete SimpleName: host(1612)", "Delete SimpleName: hashCode(1613)", "Delete MethodInvocation(1614)", "Delete SimpleName: port(1615)", "Delete InfixExpression: ^(1616)", "Delete ConditionalExpression(1617)", "Delete ReturnStatement(1618)", "Delete Block(1619)", "Delete MethodDeclaration(1620)", "Delete TypeDeclaration: class(1621)", "Delete TextElement: Shutdown callback from composite cache manager.(1622)", "Delete TextElement: <p>(1623)", "Delete TagElement(1624)", "Delete QualifiedName: org.apache.commons.jcs.engine.behavior.IShutdownObserver(1625)", "Delete SimpleName: shutdown(1626)", "Delete MethodRef(1627)", "Delete TagElement: @see(1628)", "Delete Javadoc(1629)", "Delete SimpleName: Override(1630)", "Delete MarkerAnnotation(1631)", "Delete Modifier: public(1632)", "Delete PrimitiveType: void(1633)", "Delete SimpleName: shutdown(1634)", "Delete SimpleName: log(1635)", "Delete SimpleName: isInfoEnabled(1636)", "Delete MethodInvocation(1637)", "Delete SimpleName: log(1638)", "Delete SimpleName: info(1639)", "Delete StringLiteral: \"Observed shutdown request.\"(1640)", "Delete MethodInvocation(1641)", "Delete ExpressionStatement(1642)", "Delete Block(1643)", "Delete IfStatement(1644)", "Delete SimpleName: release(1645)", "Delete MethodInvocation(1646)", "Delete ExpressionStatement(1647)", "Delete Block(1648)", "Delete MethodDeclaration(1649)"]}}, {"RemoteCacheMonitor_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 4"]}, {"root": "UPDATE from org.apache.commons.logging.Log to java.util.concurrent.ConcurrentHashMap", "operations": ["UPD QualifiedName: org.apache.commons.logging.Log from org.apache.commons.logging.Log to java.util.concurrent.ConcurrentHashMap"]}, {"root": "UPDATE from org.apache.commons.logging.LogFactory to org.apache.commons.jcs.auxiliary.AbstractAuxiliaryCacheMonitor", "operations": ["UPD QualifiedName: org.apache.commons.logging.LogFactory from org.apache.commons.logging.LogFactory to org.apache.commons.jcs.auxiliary.AbstractAuxiliaryCacheMonitor"]}, {"root": "UPDATE from Runnable to AbstractAuxiliaryCacheMonitor", "operations": ["UPD SimpleName: Runnable from Runnable to AbstractAuxiliaryCacheMonitor", "UPD SimpleType: Runnable from Runnable to AbstractAuxiliaryCacheMonitor"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 5", "operations": ["INS ExpressionStatement to Block at 1", "INS SimpleName: ConcurrentHashMap to SimpleType: ConcurrentHashMap at 0", "INS SuperConstructorInvocation to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS FieldAccess to Assignment: = at 0", "INS SimpleType: RemoteCacheManager to ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager> at 2", "INS NumberLiteral: 30000L to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: managers to FieldAccess at 1", "INS SimpleType: String to ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager> at 1", "INS Modifier: public to MethodDeclaration at 1", "INS ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager> to ClassInstanceCreation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: RemoteCacheMonitor to MethodDeclaration at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 3", "INS ClassInstanceCreation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS StringLiteral: \"JCS-RemoteCacheMonitor\" to SuperConstructorInvocation at 0", "INS SimpleName: setIdlePeriod to MethodInvocation at 0", "INS SimpleType: ConcurrentHashMap to ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager> at 0", "INS SimpleName: RemoteCacheManager to SimpleType: RemoteCacheManager at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 6", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: getRegistryURL to MethodInvocation at 1", "INS FieldAccess to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: manager to MethodInvocation at 3", "INS Block to MethodDeclaration at 5", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SimpleName: manager to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: managers to FieldAccess at 1", "INS SimpleName: put to MethodInvocation at 1"]}, {"root": "INS ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager> to FieldDeclaration at 2", "operations": ["INS SimpleType: RemoteCacheManager to ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager> at 2", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager> to FieldDeclaration at 2", "INS SimpleType: String to ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager> at 1", "INS SimpleType: ConcurrentHashMap to ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager> at 0"]}, {"root": "INS VariableDeclarationFragment to FieldDeclaration at 3", "operations": ["INS SimpleName: managers to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV Javadoc to MethodDeclaration at 0", "MOV PrimitiveType: void to MethodDeclaration at 2", "MOV Modifier: public to MethodDeclaration at 1", "MOV SimpleName: setIdlePeriod to MethodDeclaration at 3"]}, {"root": "UPDATE from setIdlePeriod to addManager", "operations": ["UPD SimpleName: setIdlePeriod from setIdlePeriod to addManager"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "UPDATE from notifyError to dispose", "operations": ["UPD SimpleName: notifyError from notifyError to dispose"]}, {"root": "INS SimpleName: doWork to MethodDeclaration at 4", "operations": ["INS SimpleName: doWork to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 5", "MOV SingleVariableDeclaration to EnhancedForStatement at 0"]}, {"root": "INS TextElement: error. to TagElement at 2", "operations": ["INS TextElement: error. to TagElement at 2"]}, {"root": "UPDATE from error. TODO consider moving this into an active monitoring mode. Upon the notification of a to TODO consider moving this into an active monitoring mode. Upon the notification of a", "operations": ["UPD TextElement: error. TODO consider moving this into an active monitoring mode. Upon the notification of a from error. TODO consider moving this into an active monitoring mode. Upon the notification of a to TODO consider moving this into an active monitoring mode. Upon the notification of a"]}, {"root": "INS SimpleType: RemoteCacheManager to SingleVariableDeclaration at 0", "operations": ["INS SimpleName: RemoteCacheManager to SimpleType: RemoteCacheManager at 0", "INS SimpleType: RemoteCacheManager to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: manager to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: manager to SingleVariableDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1"]}, {"root": "INS EnhancedForStatement to Block at 0", "operations": ["INS EnhancedForStatement to Block at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: managers to MethodInvocation at 0"]}, {"root": "UPDATE from The logger  to Map of managers to monitor", "operations": ["UPD TextElement: The logger  from The logger  to Map of managers to monitor"]}, {"root": "UPDATE from Log to ConcurrentHashMap", "operations": ["UPD SimpleName: Log from Log to ConcurrentHashMap"]}, {"root": "MOVE from SimpleType: ConcurrentHashMap", "operations": ["MOV SimpleName: Log to SimpleType: ConcurrentHashMap at 0"]}, {"root": "UPDATE from RemoteCacheMonitor to RemoteCacheManager", "operations": ["UPD SimpleName: RemoteCacheMonitor from RemoteCacheMonitor to RemoteCacheManager"]}, {"root": "MOVE from SimpleType: RemoteCacheManager", "operations": ["MOV SimpleName: RemoteCacheMonitor to SimpleType: RemoteCacheManager at 0"]}, {"root": "UPDATE from Configures the idle period between repairs. to Add a manager to be monitored", "operations": ["UPD TextElement: Configures the idle period between repairs. from Configures the idle period between repairs. to Add a manager to be monitored"]}, {"root": "UPDATE from idlePeriod to manager", "operations": ["UPD SimpleName: idlePeriod from idlePeriod to manager"]}, {"root": "UPDATE from  The new idlePeriod value to  the remote cache manager", "operations": ["UPD TextElement:  The new idlePeriod value from  The new idlePeriod value to  the remote cache manager"]}, {"root": "UPDATE from Notifies the cache monitor that an error occurred, and kicks off the error recovery process. to Clean up all resources before shutdown", "operations": ["UPD TextElement: Notifies the cache monitor that an error occurred, and kicks off the error recovery process. from Notifies the cache monitor that an error occurred, and kicks off the error recovery process. to Clean up all resources before shutdown"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV Block to EnhancedForStatement at 2"]}, {"root": "INS MethodInvocation to InfixExpression: == at 0", "operations": ["INS SimpleName: getState to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: == at 0", "INS ThisExpression to MethodInvocation at 0"]}, {"root": "INS QualifiedName: Thread.State.NEW to InfixExpression: == at 1", "operations": ["INS QualifiedName: Thread.State.NEW to InfixExpression: == at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ThisExpression to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: start to MethodInvocation at 1"]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS ThisExpression to FieldAccess at 0", "INS SimpleName: managers to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0"]}, {"root": "UPDATE from debug to clear", "operations": ["UPD SimpleName: debug from debug to clear"]}, {"root": "UPDATE from ex to values", "operations": ["UPD SimpleName: ex from ex to values"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: ex to MethodInvocation at 1"]}, {"root": "UPDATE from bad to allright", "operations": ["UPD SimpleName: bad from bad to allright"]}, {"root": "INS SimpleName: set to MethodInvocation at 1", "operations": ["INS SimpleName: set to MethodInvocation at 1"]}, {"root": "INS BooleanLiteral: false to MethodInvocation at 2", "operations": ["INS BooleanLiteral: false to MethodInvocation at 2"]}, {"root": "DEL Modifier: static", "operations": ["DEL Modifier: static"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL SimpleType: Log", "operations": ["DEL SimpleType: Log"]}, {"root": "DEL VariableDeclarationFragment", "operations": ["DEL MethodInvocation", "DEL SimpleName: LogFactory", "DEL SimpleName: log", "DEL SimpleName: getLog", "DEL SimpleType: RemoteCacheMonitor", "DEL TypeLiteral", "DEL VariableDeclarationFragment"]}, {"root": "DEL TextElement: <p>", "operations": ["DEL TextElement: <p>"]}, {"root": "DEL PrimitiveType: long", "operations": ["DEL PrimitiveType: long"]}, {"root": "DEL SimpleName: idlePeriod", "operations": ["DEL SimpleName: idlePeriod"]}, {"root": "DEL SimpleName: instance", "operations": ["DEL SimpleName: instance"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: instance", "DEL SimpleType: RemoteCacheMonitor", "DEL Assignment: =", "DEL ReturnStatement", "DEL ClassInstanceCreation", "DEL SimpleName: RemoteCacheMonitor"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL Javadoc", "DEL FieldDeclaration", "DEL TagElement", "DEL SimpleName: instance", "DEL SimpleName: RemoteCacheMonitor", "DEL SimpleType: RemoteCacheMonitor", "DEL Modifier: static", "DEL TextElement: The remote cache that we are monitoring "]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Javadoc", "DEL Modifier: static", "DEL NumberLiteral: 30", "DEL TextElement: Time between checks ", "DEL PrimitiveType: long", "DEL NumberLiteral: 1000", "DEL FieldDeclaration", "DEL Modifier: private", "DEL SimpleName: idlePeriod", "DEL TagElement", "DEL VariableDeclarationFragment", "DEL InfixExpression: *"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL TagElement", "DEL TextElement: Must make sure RemoteCacheMonitor is started before any remote error can be detected!", "DEL Javadoc", "DEL FieldDeclaration", "DEL PrimitiveType: boolean", "DEL SimpleName: alright", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL BooleanLiteral: true"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL PrimitiveType: int", "DEL Modifier: static", "DEL TextElement: Time driven mode ", "DEL SimpleName: TIME", "DEL FieldDeclaration", "DEL TagElement", "DEL NumberLiteral: 0", "DEL Modifier: final", "DEL Javadoc", "DEL VariableDeclarationFragment"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL TagElement", "DEL NumberLiteral: 1", "DEL FieldDeclaration", "DEL Modifier: static", "DEL PrimitiveType: int", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL TextElement: Error driven mode -- only check on health if there is an error ", "DEL Javadoc", "DEL SimpleName: ERROR"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL TextElement: The mode to use ", "DEL PrimitiveType: int", "DEL SimpleName: ERROR", "DEL VariableDeclarationFragment", "DEL Modifier: static", "DEL SimpleName: mode", "DEL FieldDeclaration", "DEL TagElement", "DEL Javadoc"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: static", "DEL SimpleName: idlePeriod", "DEL QualifiedName: RemoteCacheMonitor.idlePeriod", "DEL QualifiedName: RemoteCacheMonitor.idlePeriod", "DEL IfStatement", "DEL Block", "DEL Assignment: =", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: idlePeriod", "DEL InfixExpression: >", "DEL MethodDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: RemoteCacheMonitor", "DEL SuperConstructorInvocation", "DEL MethodDeclaration", "DEL Modifier: private", "DEL Block"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TextElement: Returns the singleton instance.", "DEL ReturnStatement", "DEL TagElement", "DEL SimpleName: getInstance", "DEL SimpleName: RemoteCacheMonitor", "DEL Javadoc", "DEL TextElement:  The instance value", "DEL SimpleName: RemoteCacheMonitor", "DEL Block", "DEL SimpleType: RemoteCacheMonitor", "DEL TypeLiteral", "DEL Block", "DEL SimpleName: instance", "DEL Modifier: static", "DEL TextElement: <p>", "DEL MethodDeclaration", "DEL SynchronizedStatement", "DEL TagElement: @return", "DEL SimpleType: RemoteCacheMonitor"]}, {"root": "DEL SimpleName: log", "operations": ["DEL SimpleName: log"]}, {"root": "DEL StringLiteral: \"Notified of an error.\"", "operations": ["DEL StringLiteral: \"Notified of an error.\""]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: bad", "DEL MethodInvocation"]}, {"root": "DEL SynchronizedStatement", "operations": ["DEL SynchronizedStatement", "DEL Block", "DEL ExpressionStatement", "DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: notify"]}, {"root": "DEL TryStatement", "operations": ["DEL TryStatement", "DEL SimpleName: ex", "DEL SimpleName: bad", "DEL SimpleName: mgr", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: Exception", "DEL SimpleType: Exception", "DEL SimpleName: log", "DEL CatchClause", "DEL SingleVariableDeclaration", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL StringLiteral: \"Problem fixing caches for manager.\"", "DEL MethodInvocation", "DEL SimpleName: error"]}, {"root": "DEL SimpleName: run", "operations": ["DEL SimpleName: run"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL ExpressionStatement", "DEL SimpleName: InterruptedException", "DEL SingleVariableDeclaration", "DEL SimpleName: sleep", "DEL SimpleName: debug", "DEL TryStatement", "DEL TryStatement", "DEL SynchronizedStatement", "DEL MethodInvocation", "DEL QualifiedName: RemoteCacheManager.instances", "DEL IfStatement", "DEL SimpleName: log", "DEL ExpressionStatement", "DEL StringLiteral: \"Monitoring daemon started\"", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleName: debug", "DEL Block", "DEL SimpleName: values", "DEL SimpleType: InterruptedException", "DEL ExpressionStatement", "DEL SimpleName: isDebugEnabled", "DEL Block", "DEL ExpressionStatement", "DEL DoStatement", "DEL ThisExpression", "DEL Block", "DEL SimpleName: idlePeriod", "DEL MethodInvocation", "DEL SimpleName: InterruptedException", "DEL MethodInvocation", "DEL BooleanLiteral: true", "DEL SimpleName: ERROR", "DEL ExpressionStatement", "DEL Block", "DEL CatchClause", "DEL InfixExpression: ==", "DEL SimpleName: log", "DEL SimpleName: ignore", "DEL IfStatement", "DEL Block", "DEL MethodInvocation", "DEL Block", "DEL Block", "DEL IfStatement", "DEL Block", "DEL SimpleName: mode", "DEL BooleanLiteral: true", "DEL SimpleName: Thread", "DEL SimpleType: InterruptedException", "DEL EnhancedForStatement", "DEL SimpleName: wait", "DEL Block", "DEL SimpleName: ex", "DEL SimpleName: alright", "DEL SimpleName: log", "DEL SynchronizedStatement", "DEL SingleVariableDeclaration", "DEL ThisExpression", "DEL Block", "DEL SimpleName: isDebugEnabled", "DEL SimpleName: debug", "DEL CatchClause", "DEL MethodInvocation", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: log", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: idlePeriod", "DEL StringLiteral: \"TIME DRIVEN MODE: cache monitor sleeping for \"", "DEL Block", "DEL SimpleName: alright", "DEL StringLiteral: \"FAILURE DRIVEN MODE: cache monitor waiting for error\"", "DEL Assignment: =", "DEL SimpleName: log", "DEL ExpressionStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Javadoc", "DEL TextElement: Sets the \"aright\" flag to false in a critical section. ", "DEL SimpleName: bad", "DEL PrimitiveType: void", "DEL MethodDeclaration", "DEL SimpleName: alright", "DEL BooleanLiteral: false", "DEL Block", "DEL Assignment: =", "DEL ExpressionStatement", "DEL Modifier: private", "DEL Modifier: synchronized", "DEL TagElement"]}]}}, {"RemoteCacheMonitor_diff": {"operations": ["Move ImportDeclaration(3) into CompilationUnit(177) at 4", "Update QualifiedName: org.apache.commons.logging.Log(4) to java.util.concurrent.ConcurrentHashMap", "Update QualifiedName: org.apache.commons.logging.LogFactory(6) to org.apache.commons.jcs.auxiliary.AbstractAuxiliaryCacheMonitor", "Update SimpleType: Runnable(19) to AbstractAuxiliaryCacheMonitor", "Insert MethodDeclaration(60) into TypeDeclaration: class(176) at 5", "Insert MethodDeclaration(96) into TypeDeclaration: class(176) at 6", "Update SimpleName: Runnable(18) to AbstractAuxiliaryCacheMonitor", "Insert ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager>(31) into FieldDeclaration(34) at 2", "Insert VariableDeclarationFragment(33) into FieldDeclaration(34) at 3", "Move Javadoc(124) into MethodDeclaration(60) at 0", "Insert Modifier: public(38) into MethodDeclaration(60) at 1", "Insert SimpleName: RemoteCacheMonitor(39) into MethodDeclaration(60) at 2", "Insert Block(59) into MethodDeclaration(60) at 3", "Move Javadoc(103) into MethodDeclaration(96) at 0", "Move Modifier: public(104) into MethodDeclaration(96) at 1", "Move PrimitiveType: void(106) into MethodDeclaration(96) at 2", "Update SimpleName: setIdlePeriod(107) to addManager", "Move SimpleName: setIdlePeriod(107) into MethodDeclaration(96) at 3", "Move SingleVariableDeclaration(110) into MethodDeclaration(96) at 4", "Insert Block(95) into MethodDeclaration(96) at 5", "Insert MarkerAnnotation(101) into MethodDeclaration(112) at 1", "Update SimpleName: notifyError(165) to dispose", "Insert SimpleName: doWork(120) into MethodDeclaration(175) at 4", "Move Block(328) into MethodDeclaration(175) at 5", "Insert TextElement: error.(10) into TagElement(15) at 2", "Update TextElement: error. TODO consider moving this into an active monitoring mode. Upon the notification of a(10) to TODO consider moving this into an active monitoring mode. Upon the notification of a", "Insert SimpleType: ConcurrentHashMap(26) into ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager>(31) at 0", "Insert SimpleType: String(28) into ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager>(31) at 1", "Insert SimpleType: RemoteCacheManager(30) into ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager>(31) at 2", "Insert SimpleName: managers(32) into VariableDeclarationFragment(33) at 0", "Insert SuperConstructorInvocation(41) into Block(59) at 0", "Insert ExpressionStatement(54) into Block(59) at 1", "Insert ExpressionStatement(58) into Block(59) at 2", "Insert SimpleType: RemoteCacheManager(71) into SingleVariableDeclaration(73) at 0", "Insert SimpleName: manager(72) into SingleVariableDeclaration(73) at 1", "Insert ExpressionStatement(83) into Block(95) at 0", "Move IfStatement(153) into Block(95) at 1", "Insert SimpleName: Override(100) into MarkerAnnotation(101) at 0", "Insert EnhancedForStatement(173) into Block(174) at 0", "Update TextElement: The logger (20) to Map of managers to monitor", "Update SimpleName: Log(26) to ConcurrentHashMap", "Move SimpleName: Log(26) into SimpleType: ConcurrentHashMap(26) at 0", "Insert SimpleName: String(27) into SimpleType: String(28) at 0", "Update SimpleName: RemoteCacheMonitor(31) to RemoteCacheManager", "Move SimpleName: RemoteCacheMonitor(31) into SimpleType: RemoteCacheManager(30) at 0", "Insert StringLiteral: \"JCS-RemoteCacheMonitor\"(40) into SuperConstructorInvocation(41) at 0", "Insert Assignment: =(53) into ExpressionStatement(54) at 0", "Insert MethodInvocation(57) into ExpressionStatement(58) at 0", "Update TextElement: Configures the idle period between repairs.(97) to Add a manager to be monitored", "Update SimpleName: idlePeriod(100) to manager", "Update TextElement:  The new idlePeriod value(101) to  the remote cache manager", "Insert SimpleName: RemoteCacheManager(70) into SimpleType: RemoteCacheManager(71) at 0", "Insert MethodInvocation(82) into ExpressionStatement(83) at 0", "Update TextElement: Notifies the cache monitor that an error occurred, and kicks off the error recovery process.(160) to Clean up all resources before shutdown", "Move SingleVariableDeclaration(263) into EnhancedForStatement(173) at 0", "Insert MethodInvocation(127) into EnhancedForStatement(173) at 1", "Move Block(309) into EnhancedForStatement(173) at 2", "Insert FieldAccess(44) into Assignment: =(53) at 0", "Insert ClassInstanceCreation(52) into Assignment: =(53) at 1", "Insert SimpleName: setIdlePeriod(55) into MethodInvocation(57) at 0", "Insert NumberLiteral: 30000L(56) into MethodInvocation(57) at 1", "Insert FieldAccess(76) into MethodInvocation(82) at 0", "Insert SimpleName: put(77) into MethodInvocation(82) at 1", "Insert MethodInvocation(80) into MethodInvocation(82) at 2", "Insert SimpleName: manager(81) into MethodInvocation(82) at 3", "Insert MethodInvocation(86) into InfixExpression: ==(88) at 0", "Insert QualifiedName: Thread.State.NEW(87) into InfixExpression: ==(88) at 1", "Insert ExpressionStatement(92) into Block(93) at 0", "Insert FieldAccess(107) into MethodInvocation(109) at 0", "Update SimpleName: debug(167) to clear", "Insert SimpleName: managers(125) into MethodInvocation(127) at 0", "Update SimpleName: ex(322) to values", "Move SimpleName: ex(322) into MethodInvocation(127) at 1", "Insert ThisExpression(42) into FieldAccess(44) at 0", "Insert SimpleName: managers(43) into FieldAccess(44) at 1", "Insert ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager>(51) into ClassInstanceCreation(52) at 0", "Insert ThisExpression(74) into FieldAccess(76) at 0", "Insert SimpleName: managers(75) into FieldAccess(76) at 1", "Insert SimpleName: manager(78) into MethodInvocation(80) at 0", "Insert SimpleName: getRegistryURL(79) into MethodInvocation(80) at 1", "Insert ThisExpression(84) into MethodInvocation(86) at 0", "Insert SimpleName: getState(85) into MethodInvocation(86) at 1", "Insert MethodInvocation(91) into ExpressionStatement(92) at 0", "Insert ThisExpression(105) into FieldAccess(107) at 0", "Insert SimpleName: managers(106) into FieldAccess(107) at 1", "Insert SimpleType: ConcurrentHashMap(46) into ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager>(51) at 0", "Insert SimpleType: String(48) into ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager>(51) at 1", "Insert SimpleType: RemoteCacheManager(50) into ParameterizedType: ConcurrentHashMap<String,RemoteCacheManager>(51) at 2", "Insert ThisExpression(89) into MethodInvocation(91) at 0", "Insert SimpleName: start(90) into MethodInvocation(91) at 1", "Insert SimpleName: ConcurrentHashMap(45) into SimpleType: ConcurrentHashMap(46) at 0", "Insert SimpleName: String(47) into SimpleType: String(48) at 0", "Insert SimpleName: RemoteCacheManager(49) into SimpleType: RemoteCacheManager(50) at 0", "Update SimpleName: bad(299) to allright", "Insert SimpleName: set(161) into MethodInvocation(163) at 1", "Insert BooleanLiteral: false(162) into MethodInvocation(163) at 2", "Delete Modifier: static(24)", "Delete Modifier: final(25)", "Delete SimpleType: Log(27)", "Delete SimpleName: log(28)", "Delete SimpleName: LogFactory(29)", "Delete SimpleName: getLog(30)", "Delete SimpleType: RemoteCacheMonitor(32)", "Delete TypeLiteral(33)", "Delete MethodInvocation(34)", "Delete VariableDeclarationFragment(35)", "Delete TextElement: <p>(98)", "Delete PrimitiveType: long(108)", "Delete SimpleName: idlePeriod(109)", "Delete SimpleName: instance(143)", "Delete NullLiteral(144)", "Delete SimpleName: instance(146)", "Delete SimpleName: RemoteCacheMonitor(147)", "Delete SimpleType: RemoteCacheMonitor(148)", "Delete ClassInstanceCreation(149)", "Delete Assignment: =(150)", "Delete ReturnStatement(151)", "Delete TextElement: The remote cache that we are monitoring (37)", "Delete TagElement(38)", "Delete Javadoc(39)", "Delete Modifier: private(40)", "Delete Modifier: static(41)", "Delete SimpleName: RemoteCacheMonitor(42)", "Delete SimpleType: RemoteCacheMonitor(43)", "Delete SimpleName: instance(44)", "Delete VariableDeclarationFragment(45)", "Delete FieldDeclaration(46)", "Delete TextElement: Time between checks (47)", "Delete TagElement(48)", "Delete Javadoc(49)", "Delete Modifier: private(50)", "Delete Modifier: static(51)", "Delete PrimitiveType: long(52)", "Delete SimpleName: idlePeriod(53)", "Delete NumberLiteral: 30(54)", "Delete NumberLiteral: 1000(55)", "Delete InfixExpression: *(56)", "Delete VariableDeclarationFragment(57)", "Delete FieldDeclaration(58)", "Delete TextElement: Must make sure RemoteCacheMonitor is started before any remote error can be detected!(59)", "Delete TagElement(60)", "Delete Javadoc(61)", "Delete Modifier: private(62)", "Delete PrimitiveType: boolean(63)", "Delete SimpleName: alright(64)", "Delete BooleanLiteral: true(65)", "Delete VariableDeclarationFragment(66)", "Delete FieldDeclaration(67)", "Delete TextElement: Time driven mode (68)", "Delete TagElement(69)", "Delete Javadoc(70)", "Delete Modifier: static(71)", "Delete Modifier: final(72)", "Delete PrimitiveType: int(73)", "Delete SimpleName: TIME(74)", "Delete NumberLiteral: 0(75)", "Delete VariableDeclarationFragment(76)", "Delete FieldDeclaration(77)", "Delete TextElement: Error driven mode -- only check on health if there is an error (78)", "Delete TagElement(79)", "Delete Javadoc(80)", "Delete Modifier: static(81)", "Delete Modifier: final(82)", "Delete PrimitiveType: int(83)", "Delete SimpleName: ERROR(84)", "Delete NumberLiteral: 1(85)", "Delete VariableDeclarationFragment(86)", "Delete FieldDeclaration(87)", "Delete TextElement: The mode to use (88)", "Delete TagElement(89)", "Delete Javadoc(90)", "Delete Modifier: static(91)", "Delete PrimitiveType: int(92)", "Delete SimpleName: mode(93)", "Delete SimpleName: ERROR(94)", "Delete VariableDeclarationFragment(95)", "Delete FieldDeclaration(96)", "Delete Modifier: static(105)", "Delete SimpleName: idlePeriod(111)", "Delete QualifiedName: RemoteCacheMonitor.idlePeriod(112)", "Delete InfixExpression: >(113)", "Delete QualifiedName: RemoteCacheMonitor.idlePeriod(114)", "Delete SimpleName: idlePeriod(115)", "Delete Assignment: =(116)", "Delete ExpressionStatement(117)", "Delete Block(118)", "Delete IfStatement(119)", "Delete Block(120)", "Delete MethodDeclaration(121)", "Delete Modifier: private(125)", "Delete SimpleName: RemoteCacheMonitor(126)", "Delete SuperConstructorInvocation(127)", "Delete Block(128)", "Delete MethodDeclaration(129)", "Delete TextElement: Returns the singleton instance.(130)", "Delete TextElement: <p>(131)", "Delete TagElement(132)", "Delete TextElement:  The instance value(133)", "Delete TagElement: @return(134)", "Delete Javadoc(135)", "Delete Modifier: static(136)", "Delete SimpleName: RemoteCacheMonitor(137)", "Delete SimpleType: RemoteCacheMonitor(138)", "Delete SimpleName: getInstance(139)", "Delete SimpleName: RemoteCacheMonitor(140)", "Delete SimpleType: RemoteCacheMonitor(141)", "Delete TypeLiteral(142)", "Delete Block(154)", "Delete SynchronizedStatement(155)", "Delete SimpleName: instance(156)", "Delete ReturnStatement(157)", "Delete Block(158)", "Delete MethodDeclaration(159)", "Delete SimpleName: log(166)", "Delete StringLiteral: \"Notified of an error.\"(168)", "Delete SimpleName: bad(171)", "Delete MethodInvocation(172)", "Delete ExpressionStatement(173)", "Delete ThisExpression(174)", "Delete SimpleName: notify(175)", "Delete MethodInvocation(176)", "Delete ExpressionStatement(177)", "Delete Block(178)", "Delete SynchronizedStatement(179)", "Delete SimpleName: Exception(310)", "Delete SimpleType: Exception(311)", "Delete SimpleName: ex(312)", "Delete SingleVariableDeclaration(313)", "Delete SimpleName: bad(314)", "Delete MethodInvocation(315)", "Delete ExpressionStatement(316)", "Delete SimpleName: log(317)", "Delete SimpleName: error(318)", "Delete StringLiteral: \"Problem fixing caches for manager.\"(319)", "Delete SimpleName: mgr(320)", "Delete InfixExpression: +(321)", "Delete MethodInvocation(323)", "Delete ExpressionStatement(324)", "Delete Block(325)", "Delete CatchClause(326)", "Delete TryStatement(327)", "Delete SimpleName: run(189)", "Delete SimpleName: log(190)", "Delete SimpleName: debug(191)", "Delete StringLiteral: \"Monitoring daemon started\"(192)", "Delete MethodInvocation(193)", "Delete ExpressionStatement(194)", "Delete SimpleName: mode(195)", "Delete SimpleName: ERROR(196)", "Delete InfixExpression: ==(197)", "Delete ThisExpression(198)", "Delete SimpleName: alright(199)", "Delete SimpleName: log(200)", "Delete SimpleName: isDebugEnabled(201)", "Delete MethodInvocation(202)", "Delete SimpleName: log(203)", "Delete SimpleName: debug(204)", "Delete StringLiteral: \"FAILURE DRIVEN MODE: cache monitor waiting for error\"(205)", "Delete MethodInvocation(206)", "Delete ExpressionStatement(207)", "Delete Block(208)", "Delete IfStatement(209)", "Delete SimpleName: wait(210)", "Delete MethodInvocation(211)", "Delete ExpressionStatement(212)", "Delete Block(213)", "Delete SimpleName: InterruptedException(214)", "Delete SimpleType: InterruptedException(215)", "Delete SimpleName: ignore(216)", "Delete SingleVariableDeclaration(217)", "Delete Block(218)", "Delete CatchClause(219)", "Delete TryStatement(220)", "Delete Block(221)", "Delete IfStatement(222)", "Delete Block(223)", "Delete SynchronizedStatement(224)", "Delete Block(225)", "Delete SimpleName: log(226)", "Delete SimpleName: isDebugEnabled(227)", "Delete MethodInvocation(228)", "Delete SimpleName: log(229)", "Delete SimpleName: debug(230)", "Delete StringLiteral: \"TIME DRIVEN MODE: cache monitor sleeping for \"(231)", "Delete SimpleName: idlePeriod(232)", "Delete InfixExpression: +(233)", "Delete MethodInvocation(234)", "Delete ExpressionStatement(235)", "Delete Block(236)", "Delete IfStatement(237)", "Delete Block(238)", "Delete IfStatement(239)", "Delete SimpleName: Thread(240)", "Delete SimpleName: sleep(241)", "Delete SimpleName: idlePeriod(242)", "Delete MethodInvocation(243)", "Delete ExpressionStatement(244)", "Delete Block(245)", "Delete SimpleName: InterruptedException(246)", "Delete SimpleType: InterruptedException(247)", "Delete SimpleName: ex(248)", "Delete SingleVariableDeclaration(249)", "Delete Block(250)", "Delete CatchClause(251)", "Delete TryStatement(252)", "Delete ThisExpression(253)", "Delete SimpleName: alright(254)", "Delete BooleanLiteral: true(255)", "Delete Assignment: =(256)", "Delete ExpressionStatement(257)", "Delete Block(258)", "Delete SynchronizedStatement(259)", "Delete QualifiedName: RemoteCacheManager.instances(264)", "Delete SimpleName: values(265)", "Delete MethodInvocation(266)", "Delete EnhancedForStatement(329)", "Delete Block(330)", "Delete BooleanLiteral: true(331)", "Delete DoStatement(332)", "Delete Block(333)", "Delete TextElement: Sets the \"aright\" flag to false in a critical section. (335)", "Delete TagElement(336)", "Delete Javadoc(337)", "Delete Modifier: private(338)", "Delete Modifier: synchronized(339)", "Delete PrimitiveType: void(340)", "Delete SimpleName: bad(341)", "Delete SimpleName: alright(342)", "Delete BooleanLiteral: false(343)", "Delete Assignment: =(344)", "Delete ExpressionStatement(345)", "Delete Block(346)", "Delete MethodDeclaration(347)"]}}, {"RemoteCacheNoWait_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 6", "MOV ImportDeclaration to CompilationUnit at 4", "MOV ImportDeclaration to CompilationUnit at 1", "MOV ImportDeclaration to CompilationUnit at 5", "MOV ImportDeclaration to CompilationUnit at 2", "MOV ImportDeclaration to CompilationUnit at 3", "MOV ImportDeclaration to CompilationUnit at 7"]}]}}, {"RemoteCacheNoWait_diff": {"operations": ["Move ImportDeclaration(33) into CompilationUnit(1263) at 1", "Move ImportDeclaration(35) into CompilationUnit(1263) at 2", "Move ImportDeclaration(37) into CompilationUnit(1263) at 3", "Move ImportDeclaration(39) into CompilationUnit(1263) at 4", "Move ImportDeclaration(41) into CompilationUnit(1263) at 5", "Move ImportDeclaration(43) into CompilationUnit(1263) at 6", "Move ImportDeclaration(45) into CompilationUnit(1263) at 7"]}}, {"RemoteCacheNoWaitFacade_cluster": {"actions": [{"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 5"]}, {"root": "UPDATE from info to debug", "operations": ["UPD SimpleName: info from info to debug"]}, {"root": "UPDATE from t to runner", "operations": ["UPD SimpleName: t from t to runner", "UPD SimpleName: t from t to runner"]}, {"root": "DEL SuperMethodInvocation", "operations": ["DEL SimpleName: getCacheEventLogger", "DEL SuperMethodInvocation"]}, {"root": "DEL SuperMethodInvocation", "operations": ["DEL SimpleName: getElementSerializer", "DEL SuperMethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleType: Thread", "DEL SimpleName: t", "DEL SimpleName: runner", "DEL SimpleName: Thread", "DEL SimpleType: Thread", "DEL SimpleName: Thread", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement"]}]}}, {"RemoteCacheNoWaitFacade_diff": {"operations": ["Move ExpressionStatement(173) into Block(197) at 5", "Update SimpleName: info(124) to debug", "Update SimpleName: t(183) to runner", "Update SimpleName: t(188) to runner", "Delete SimpleName: getCacheEventLogger(163)", "Delete SuperMethodInvocation(164)", "Delete SimpleName: getElementSerializer(165)", "Delete SuperMethodInvocation(166)", "Delete SimpleName: Thread(174)", "Delete SimpleType: Thread(175)", "Delete SimpleName: t(176)", "Delete SimpleName: Thread(177)", "Delete SimpleType: Thread(178)", "Delete SimpleName: runner(179)", "Delete ClassInstanceCreation(180)", "Delete VariableDeclarationFragment(181)", "Delete VariableDeclarationStatement(182)"]}}, {"RemoteCacheRestore_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 1", "MOV ImportDeclaration to CompilationUnit at 3", "MOV ImportDeclaration to CompilationUnit at 2"]}, {"root": "UPDATE from RemoteUtils to remoteCacheManager", "operations": ["UPD SimpleName: RemoteUtils from RemoteUtils to remoteCacheManager", "UPD SimpleName: RemoteUtils from RemoteUtils to remoteCacheManager"]}, {"root": "UPDATE from getNamingURL to getRegistryURL", "operations": ["UPD SimpleName: getNamingURL from getNamingURL to getRegistryURL", "UPD SimpleName: getNamingURL from getNamingURL to getRegistryURL"]}, {"root": "INS SimpleName: e to MethodInvocation at 3", "operations": ["INS SimpleName: e to MethodInvocation at 3"]}, {"root": "INS SimpleName: e to MethodInvocation at 3", "operations": ["INS SimpleName: e to MethodInvocation at 3"]}, {"root": "UPDATE from \"host=\" to \"Registry=\"", "operations": ["UPD StringLiteral: \"host=\" from \"host=\" to \"Registry=\"", "UPD StringLiteral: \"host=\" from \"host=\" to \"Registry=\""]}, {"root": "INS SimpleName: registry to InfixExpression: + at 1", "operations": ["INS SimpleName: registry to InfixExpression: + at 1"]}, {"root": "INS SimpleName: registry to InfixExpression: + at 1", "operations": ["INS SimpleName: registry to InfixExpression: + at 1"]}, {"root": "DEL QualifiedName: remoteCacheManager.host", "operations": ["DEL QualifiedName: remoteCacheManager.host"]}, {"root": "DEL QualifiedName: remoteCacheManager.port", "operations": ["DEL QualifiedName: remoteCacheManager.port"]}, {"root": "DEL QualifiedName: remoteCacheManager.service", "operations": ["DEL QualifiedName: remoteCacheManager.service"]}, {"root": "DEL QualifiedName: remoteCacheManager.host", "operations": ["DEL QualifiedName: remoteCacheManager.host"]}, {"root": "DEL StringLiteral: \"; port\"", "operations": ["DEL StringLiteral: \"; port\""]}, {"root": "DEL QualifiedName: remoteCacheManager.port", "operations": ["DEL QualifiedName: remoteCacheManager.port"]}, {"root": "DEL StringLiteral: \"; service=\"", "operations": ["DEL StringLiteral: \"; service=\""]}, {"root": "DEL QualifiedName: remoteCacheManager.service", "operations": ["DEL QualifiedName: remoteCacheManager.service"]}, {"root": "DEL QualifiedName: remoteCacheManager.host", "operations": ["DEL QualifiedName: remoteCacheManager.host"]}, {"root": "DEL StringLiteral: \"; port\"", "operations": ["DEL StringLiteral: \"; port\""]}, {"root": "DEL QualifiedName: remoteCacheManager.port", "operations": ["DEL QualifiedName: remoteCacheManager.port"]}, {"root": "DEL StringLiteral: \"; service=\"", "operations": ["DEL StringLiteral: \"; service=\""]}, {"root": "DEL QualifiedName: remoteCacheManager.service", "operations": ["DEL QualifiedName: remoteCacheManager.service"]}, {"root": "DEL QualifiedName: remoteCacheManager.host", "operations": ["DEL QualifiedName: remoteCacheManager.host"]}, {"root": "DEL QualifiedName: remoteCacheManager.port", "operations": ["DEL QualifiedName: remoteCacheManager.port"]}, {"root": "DEL QualifiedName: remoteCacheManager.service", "operations": ["DEL QualifiedName: remoteCacheManager.service"]}]}}, {"RemoteCacheRestore_diff": {"operations": ["Move ImportDeclaration(13) into CompilationUnit(257) at 1", "Move ImportDeclaration(15) into CompilationUnit(257) at 2", "Move ImportDeclaration(17) into CompilationUnit(257) at 3", "Update SimpleName: RemoteUtils(119) to remoteCacheManager", "Update SimpleName: getNamingURL(120) to getRegistryURL", "Insert SimpleName: e(166) into MethodInvocation(167) at 3", "Insert SimpleName: e(184) into MethodInvocation(185) at 3", "Update StringLiteral: \"host=\"(166) to \"Registry=\"", "Insert SimpleName: registry(164) into InfixExpression: +(165) at 1", "Update StringLiteral: \"host=\"(187) to \"Registry=\"", "Insert SimpleName: registry(182) into InfixExpression: +(183) at 1", "Update SimpleName: RemoteUtils(242) to remoteCacheManager", "Update SimpleName: getNamingURL(243) to getRegistryURL", "Delete QualifiedName: remoteCacheManager.host(121)", "Delete QualifiedName: remoteCacheManager.port(122)", "Delete QualifiedName: remoteCacheManager.service(123)", "Delete QualifiedName: remoteCacheManager.host(167)", "Delete StringLiteral: \"; port\"(168)", "Delete QualifiedName: remoteCacheManager.port(169)", "Delete StringLiteral: \"; service=\"(170)", "Delete QualifiedName: remoteCacheManager.service(171)", "Delete QualifiedName: remoteCacheManager.host(188)", "Delete StringLiteral: \"; port\"(189)", "Delete QualifiedName: remoteCacheManager.port(190)", "Delete StringLiteral: \"; service=\"(191)", "Delete QualifiedName: remoteCacheManager.service(192)", "Delete QualifiedName: remoteCacheManager.host(244)", "Delete QualifiedName: remoteCacheManager.port(245)", "Delete QualifiedName: remoteCacheManager.service(246)"]}}], "commit_stats": [{"total_files": 15, "deleted_files": 0, "testing": "False", "maintenance": "True", "build": "False"}]}