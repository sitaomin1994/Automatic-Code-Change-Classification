{"application": "apache-phoenix", "csha": "53f7d3ce880f79b18a5a728be13f965e84c52e56", "files": [{"ServerCacheClient_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.client.coprocessor.Batch to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 21"]}, {"root": "INS ImportDeclaration to CompilationUnit at 23", "operations": ["INS ImportDeclaration to CompilationUnit at 23", "INS QualifiedName: org.apache.hadoop.hbase.ipc.BlockingRpcCallback to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 24", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.ipc.ServerRpcController to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 24"]}, {"root": "INS ImportDeclaration to CompilationUnit at 27", "operations": ["INS QualifiedName: com.google.protobuf.ByteString to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 27"]}, {"root": "INS ImportDeclaration to CompilationUnit at 28", "operations": ["INS ImportDeclaration to CompilationUnit at 28", "INS QualifiedName: com.google.protobuf.HBaseZeroCopyByteString to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 32", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.ClearCacheRequest to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 32"]}, {"root": "INS ImportDeclaration to CompilationUnit at 33", "operations": ["INS ImportDeclaration to CompilationUnit at 33", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.ClearCacheResponse to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 34", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataService to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 34"]}, {"root": "INS ImportDeclaration to CompilationUnit at 35", "operations": ["INS ImportDeclaration to CompilationUnit at 35", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCacheFactoryProtos to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 36", "operations": ["INS ImportDeclaration to CompilationUnit at 36", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 37", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.AddServerCacheRequest to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 37"]}, {"root": "INS ImportDeclaration to CompilationUnit at 38", "operations": ["INS ImportDeclaration to CompilationUnit at 38", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.AddServerCacheResponse to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 39", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.RemoveServerCacheRequest to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 39"]}, {"root": "INS ImportDeclaration to CompilationUnit at 40", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.RemoveServerCacheResponse to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 40"]}, {"root": "INS ImportDeclaration to CompilationUnit at 41", "operations": ["INS ImportDeclaration to CompilationUnit at 41", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.ServerCachingService to ImportDeclaration at 0"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: builder to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: RemoveServerCacheResponse to SimpleType: RemoveServerCacheResponse at 0", "INS QualifiedName: RemoveServerCacheRequest.Builder to SimpleType: RemoveServerCacheRequest.Builder at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: controller to MethodInvocation at 0", "INS MethodInvocation to ThrowStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: call to MethodDeclaration at 3", "INS SimpleName: key to MethodInvocation at 3", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<RemoveServerCacheResponse> at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: build to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: HBaseZeroCopyByteString to MethodInvocation at 0", "INS SimpleName: setTenantId to MethodInvocation at 1", "INS SimpleName: instance to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ReturnStatement to Block at 7", "INS VariableDeclarationStatement to Block at 1", "INS QualifiedName: Batch.Call to SimpleType: Batch.Call at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS SimpleName: rpcCallback to VariableDeclarationFragment at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS SimpleName: instance to SingleVariableDeclaration at 1", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<RemoveServerCacheResponse> at 0", "INS Block to IfStatement at 1", "INS SimpleName: get to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 5", "INS SimpleName: RemoveServerCacheResponse to SimpleType: RemoveServerCacheResponse at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: ServerRpcController to ClassInstanceCreation at 0", "INS SimpleType: ServerCachingService to TypeLiteral at 0", "INS SimpleType: RemoveServerCacheResponse to ParameterizedType: BlockingRpcCallback<RemoveServerCacheResponse> at 1", "INS SimpleName: wrap to MethodInvocation at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS SimpleName: RemoveServerCacheResponse to SimpleType: RemoveServerCacheResponse at 0", "INS SimpleName: controller to MethodInvocation at 0", "INS SimpleType: Batch.Call to ParameterizedType: Batch.Call<ServerCachingService,RemoveServerCacheResponse> at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS IfStatement to Block at 6", "INS SimpleName: RemoveServerCacheResponse to SimpleType: RemoveServerCacheResponse at 0", "INS SimpleType: IOException to MethodDeclaration at 5", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ParameterizedType: BlockingRpcCallback<RemoveServerCacheResponse> to ClassInstanceCreation at 0", "INS SimpleName: rpcCallback to MethodInvocation at 4", "INS SimpleType: ServerCachingService to SingleVariableDeclaration at 0", "INS SimpleType: ServerRpcController to VariableDeclarationStatement at 0", "INS SimpleType: RemoveServerCacheRequest.Builder to VariableDeclarationStatement at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: coprocessorService to MethodInvocation at 1", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleType: RemoveServerCacheResponse to ParameterizedType: BlockingRpcCallback<RemoveServerCacheResponse> at 1", "INS TypeLiteral to MethodInvocation at 2", "INS ParameterizedType: Batch.Call<ServerCachingService,RemoveServerCacheResponse> to ClassInstanceCreation at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: iterateOverTable to MethodInvocation at 0", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS ExpressionStatement to Block at 5", "INS Block to MethodDeclaration at 6", "INS MethodInvocation to ReturnStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: RemoveServerCacheRequest to MethodInvocation at 0", "INS SimpleName: key to MethodInvocation at 4", "INS IfStatement to Block at 3", "INS SimpleName: rpcCallback to MethodInvocation at 0", "INS SimpleName: removeServerCache to MethodInvocation at 1", "INS SimpleType: ServerCachingService to ParameterizedType: Batch.Call<ServerCachingService,RemoveServerCacheResponse> at 1", "INS SimpleType: RemoveServerCacheResponse to ParameterizedType: Batch.Call<ServerCachingService,RemoveServerCacheResponse> at 2", "INS SimpleType: RemoveServerCacheResponse to MethodDeclaration at 2", "INS SimpleName: ServerCachingService to SimpleType: ServerCachingService at 0", "INS ThrowStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ParameterizedType: BlockingRpcCallback<RemoveServerCacheResponse> to VariableDeclarationStatement at 0", "INS SimpleName: controller to MethodInvocation at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: controller to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from ServerCachingProtocol to ServerCachingService", "operations": ["UPD SimpleType: ServerCachingProtocol from ServerCachingProtocol to ServerCachingService", "UPD SimpleName: ServerCachingProtocol from ServerCachingProtocol to ServerCachingService", "UPD SimpleName: ServerCachingProtocol from ServerCachingProtocol to ServerCachingService", "UPD SimpleName: ServerCachingProtocol from ServerCachingProtocol to ServerCachingService"]}, {"root": "MOVE from SimpleType: ServerCachingService", "operations": ["MOV SimpleName: ServerCachingProtocol to SimpleType: ServerCachingService at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS ParameterizedType: Map<byte[],AddServerCacheResponse> to VariableDeclarationStatement at 1", "INS SimpleType: Map to ParameterizedType: Map<byte[],AddServerCacheResponse> at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS Dimension to ArrayType: byte[] at 1", "INS VariableDeclarationStatement to Block at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS SimpleType: AddServerCacheResponse to ParameterizedType: Map<byte[],AddServerCacheResponse> at 2", "INS ArrayType: byte[] to ParameterizedType: Map<byte[],AddServerCacheResponse> at 1"]}, {"root": "INS TryStatement to Block at 1", "operations": ["INS SimpleName: AddServerCacheResponse to SimpleType: AddServerCacheResponse at 0", "INS VariableDeclarationStatement to Block at 2", "INS MethodInvocation to Assignment: = at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: call to MethodDeclaration at 3", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: ServerRpcController to ClassInstanceCreation at 0", "INS IfStatement to Block at 10", "INS SimpleName: ServerCachingService to SimpleType: ServerCachingService at 0", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: svrCacheFactoryBuider to VariableDeclarationFragment at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS MethodInvocation to ThrowStatement at 0", "INS SimpleName: controller to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to TryStatement at 0", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: addServerCache to MethodInvocation at 1", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: svrCacheFactoryBuider to MethodInvocation at 0", "INS SimpleType: Exception to ClassInstanceCreation at 0", "INS SimpleType: IOException to MethodDeclaration at 5", "INS SimpleName: HBaseZeroCopyByteString to MethodInvocation at 0", "INS ParameterizedType: Batch.Call<ServerCachingService,AddServerCacheResponse> to ClassInstanceCreation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: key to MethodInvocation at 4", "INS SimpleType: ServerCacheFactoryProtos.ServerCacheFactory.Builder to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: t to SingleVariableDeclaration at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: instance to SingleVariableDeclaration at 1", "INS SimpleType: Batch.Call to ParameterizedType: Batch.Call<ServerCachingService,AddServerCacheResponse> at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ParameterizedType: BlockingRpcCallback<AddServerCacheResponse> to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 9", "INS SimpleName: wrap to MethodInvocation at 1", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: setClassName to MethodInvocation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to MethodInvocation at 3", "INS ReturnStatement to Block at 11", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: AddServerCacheRequest.Builder to SimpleType: AddServerCacheRequest.Builder at 0", "INS SimpleName: controller to MethodInvocation at 2", "INS QualifiedName: ServerCacheFactoryProtos.ServerCacheFactory to MethodInvocation at 0", "INS ThrowStatement to Block at 0", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<AddServerCacheResponse> at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: AddServerCacheResponse to SimpleType: AddServerCacheResponse at 0", "INS ClassInstanceCreation to MethodInvocation at 5", "INS SimpleType: ServerCachingService to SingleVariableDeclaration at 0", "INS SimpleName: svrCacheFactoryBuider to MethodInvocation at 0", "INS TryStatement to Block at 1", "INS Block to CatchClause at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: org.apache.phoenix.protobuf.ProtobufUtil to MethodInvocation at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: AddServerCacheResponse to SimpleType: AddServerCacheResponse at 0", "INS ExpressionStatement to Block at 5", "INS SimpleName: getClass to MethodInvocation at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS ParameterizedType: BlockingRpcCallback<AddServerCacheResponse> to ClassInstanceCreation at 0", "INS SimpleType: AddServerCacheResponse to ParameterizedType: BlockingRpcCallback<AddServerCacheResponse> at 1", "INS SimpleName: wrap to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 6", "INS SimpleType: AddServerCacheRequest.Builder to VariableDeclarationStatement at 0", "INS SimpleName: ServerCachingService to SimpleType: ServerCachingService at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: controller to VariableDeclarationFragment at 0", "INS SimpleName: rpcCallback to VariableDeclarationFragment at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS ExpressionStatement to Block at 8", "INS Block to IfStatement at 1", "INS SimpleName: setCacheId to MethodInvocation at 1", "INS SimpleName: rpcCallback to MethodInvocation at 0", "INS SimpleName: controller to MethodInvocation at 0", "INS SimpleType: AddServerCacheResponse to MethodDeclaration at 2", "INS SimpleName: rpcCallback to MethodInvocation at 4", "INS MethodInvocation to MethodInvocation at 2", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS QualifiedName: ServerCacheFactoryProtos.ServerCacheFactory.Builder to SimpleType: ServerCacheFactoryProtos.ServerCacheFactory.Builder at 0", "INS SimpleName: setCacheFactory to MethodInvocation at 1", "INS SimpleType: AddServerCacheResponse to ParameterizedType: Batch.Call<ServerCachingService,AddServerCacheResponse> at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: t to ClassInstanceCreation at 1", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 2", "INS IfStatement to Block at 3", "INS SimpleName: results to Assignment: = at 0", "INS SimpleName: setCachePtr to MethodInvocation at 1", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS SimpleName: AddServerCacheRequest to MethodInvocation at 0", "INS SimpleType: Throwable to SingleVariableDeclaration at 0", "INS SimpleName: Throwable to SimpleType: Throwable at 0", "INS ExpressionStatement to Block at 7", "INS SimpleName: getName to MethodInvocation at 1", "INS SimpleName: instance to MethodInvocation at 0", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleType: ServerCachingService to ParameterizedType: Batch.Call<ServerCachingService,AddServerCacheResponse> at 1", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: HBaseZeroCopyByteString to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS QualifiedName: Batch.Call to SimpleType: Batch.Call at 0", "INS Block to IfStatement at 1", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<AddServerCacheResponse> at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 4", "INS SimpleName: setTenantId to MethodInvocation at 1", "INS SimpleType: ServerRpcController to VariableDeclarationStatement at 0", "INS SimpleType: AddServerCacheResponse to ParameterizedType: BlockingRpcCallback<AddServerCacheResponse> at 1", "INS SimpleName: get to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: AddServerCacheResponse to SimpleType: AddServerCacheResponse at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: toProto to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS IfStatement to Block at 2", "INS InfixExpression: != to InfixExpression: && at 0", "INS ReturnStatement to Block at 0", "INS NumberLiteral: 1 to InfixExpression: == at 1", "INS MethodInvocation to ReturnStatement at 0", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: results to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: results to MethodInvocation at 0", "INS SimpleName: values to MethodInvocation at 1", "INS SimpleName: getReturn to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS InfixExpression: == to InfixExpression: && at 1", "INS MethodInvocation to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: == at 0", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: iterator to MethodInvocation at 1", "INS SimpleName: results to MethodInvocation at 0"]}, {"root": "INS ReturnStatement to Block at 3", "operations": ["INS ReturnStatement to Block at 3", "INS BooleanLiteral: false to ReturnStatement at 0"]}, {"root": "MOVE from SimpleType: ServerCachingService", "operations": ["MOV SimpleName: ServerCachingProtocol to SimpleType: ServerCachingService at 0"]}, {"root": "UPDATE from == to !=", "operations": ["UPD InfixExpression: == from == to !=", "UPD InfixExpression: == from == to !="]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV InfixExpression: == to IfStatement at 0"]}, {"root": "UPDATE from protocol to builder", "operations": ["UPD SimpleName: protocol from protocol to builder"]}, {"root": "UPDATE from removeServerCache to setCacheId", "operations": ["UPD SimpleName: removeServerCache from removeServerCache to setCacheId"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: HBaseZeroCopyByteString to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: wrap to MethodInvocation at 1"]}, {"root": "UPDATE from protocol to results", "operations": ["UPD SimpleName: protocol from protocol to results"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: protocol to VariableDeclarationFragment at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: cacheId to MethodInvocation at 2"]}, {"root": "UPDATE from ServerCachingProtocol to AddServerCacheResponse", "operations": ["UPD SimpleName: ServerCachingProtocol from ServerCachingProtocol to AddServerCacheResponse"]}, {"root": "MOVE from SimpleType: AddServerCacheResponse", "operations": ["MOV SimpleName: ServerCachingProtocol to SimpleType: AddServerCacheResponse at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: coprocessorProxy to MethodInvocation at 1", "MOV SimpleName: htable to MethodInvocation at 0", "MOV TypeLiteral to MethodInvocation at 2", "MOV SimpleName: key to MethodInvocation at 3"]}, {"root": "UPDATE from coprocessorProxy to coprocessorService", "operations": ["UPD SimpleName: coprocessorProxy from coprocessorProxy to coprocessorService"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: cacheFactory to MethodInvocation at 0", "MOV SimpleName: cacheId to MethodInvocation at 2", "MOV SimpleName: cachePtr to MethodInvocation at 2"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleType: ServerCachingProtocol", "DEL MethodInvocation", "DEL VariableDeclarationStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: addServerCache", "DEL ConditionalExpression", "DEL ReturnStatement", "DEL SimpleName: protocol"]}, {"root": "DEL ConditionalExpression", "operations": ["DEL NullLiteral", "DEL ConditionalExpression"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL TypeLiteral", "DEL SimpleName: protocol", "DEL SimpleName: coprocessorProxy", "DEL SimpleType: ServerCachingProtocol", "DEL SimpleName: key", "DEL VariableDeclarationFragment", "DEL SimpleType: ServerCachingProtocol", "DEL MethodInvocation", "DEL SimpleName: iterateOverTable", "DEL VariableDeclarationStatement"]}]}}, {"ServerCacheClient_diff": {"operations": ["Insert ImportDeclaration(43) into CompilationUnit(1319) at 21", "Insert ImportDeclaration(47) into CompilationUnit(1319) at 23", "Insert ImportDeclaration(49) into CompilationUnit(1319) at 24", "Insert ImportDeclaration(55) into CompilationUnit(1319) at 27", "Insert ImportDeclaration(57) into CompilationUnit(1319) at 28", "Insert ImportDeclaration(65) into CompilationUnit(1319) at 32", "Insert ImportDeclaration(67) into CompilationUnit(1319) at 33", "Insert ImportDeclaration(69) into CompilationUnit(1319) at 34", "Insert ImportDeclaration(71) into CompilationUnit(1319) at 35", "Insert ImportDeclaration(73) into CompilationUnit(1319) at 36", "Insert ImportDeclaration(75) into CompilationUnit(1319) at 37", "Insert ImportDeclaration(77) into CompilationUnit(1319) at 38", "Insert ImportDeclaration(79) into CompilationUnit(1319) at 39", "Insert ImportDeclaration(81) into CompilationUnit(1319) at 40", "Insert ImportDeclaration(83) into CompilationUnit(1319) at 41", "Insert QualifiedName: org.apache.hadoop.hbase.client.coprocessor.Batch(42) into ImportDeclaration(43) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.ipc.BlockingRpcCallback(46) into ImportDeclaration(47) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.ipc.ServerRpcController(48) into ImportDeclaration(49) at 0", "Insert QualifiedName: com.google.protobuf.ByteString(54) into ImportDeclaration(55) at 0", "Insert QualifiedName: com.google.protobuf.HBaseZeroCopyByteString(56) into ImportDeclaration(57) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.ClearCacheRequest(64) into ImportDeclaration(65) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.ClearCacheResponse(66) into ImportDeclaration(67) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataService(68) into ImportDeclaration(69) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCacheFactoryProtos(70) into ImportDeclaration(71) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos(72) into ImportDeclaration(73) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.AddServerCacheRequest(74) into ImportDeclaration(75) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.AddServerCacheResponse(76) into ImportDeclaration(77) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.RemoveServerCacheRequest(78) into ImportDeclaration(79) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.RemoveServerCacheResponse(80) into ImportDeclaration(81) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.ServerCachingService(82) into ImportDeclaration(83) at 0", "Insert Modifier: final(1000) into SingleVariableDeclaration(1005) at 0", "Insert ExpressionStatement(1222) into Block(1228) at 1", "Insert MethodInvocation(1221) into ExpressionStatement(1222) at 0", "Insert SimpleName: iterateOverTable(1110) into MethodInvocation(1221) at 0", "Insert SimpleName: coprocessorService(1111) into MethodInvocation(1221) at 1", "Insert TypeLiteral(1114) into MethodInvocation(1221) at 2", "Insert SimpleName: key(1115) into MethodInvocation(1221) at 3", "Insert SimpleName: key(1116) into MethodInvocation(1221) at 4", "Insert ClassInstanceCreation(1220) into MethodInvocation(1221) at 5", "Insert SimpleType: ServerCachingService(1113) into TypeLiteral(1114) at 0", "Insert ParameterizedType: Batch.Call<ServerCachingService,RemoveServerCacheResponse>(1123) into ClassInstanceCreation(1220) at 0", "Insert AnonymousClassDeclaration(1219) into ClassInstanceCreation(1220) at 1", "Update SimpleName: ServerCachingProtocol(915) to ServerCachingService", "Move SimpleName: ServerCachingProtocol(915) into SimpleType: ServerCachingService(1113) at 0", "Insert SimpleType: Batch.Call(1118) into ParameterizedType: Batch.Call<ServerCachingService,RemoveServerCacheResponse>(1123) at 0", "Insert SimpleType: ServerCachingService(1120) into ParameterizedType: Batch.Call<ServerCachingService,RemoveServerCacheResponse>(1123) at 1", "Insert SimpleType: RemoveServerCacheResponse(1122) into ParameterizedType: Batch.Call<ServerCachingService,RemoveServerCacheResponse>(1123) at 2", "Insert MethodDeclaration(1218) into AnonymousClassDeclaration(1219) at 0", "Insert QualifiedName: Batch.Call(1117) into SimpleType: Batch.Call(1118) at 0", "Insert SimpleName: ServerCachingService(1119) into SimpleType: ServerCachingService(1120) at 0", "Insert SimpleName: RemoveServerCacheResponse(1121) into SimpleType: RemoveServerCacheResponse(1122) at 0", "Insert MarkerAnnotation(1125) into MethodDeclaration(1218) at 0", "Insert Modifier: public(1126) into MethodDeclaration(1218) at 1", "Insert SimpleType: RemoveServerCacheResponse(1128) into MethodDeclaration(1218) at 2", "Insert SimpleName: call(1129) into MethodDeclaration(1218) at 3", "Insert SingleVariableDeclaration(1133) into MethodDeclaration(1218) at 4", "Insert SimpleType: IOException(1135) into MethodDeclaration(1218) at 5", "Insert Block(1217) into MethodDeclaration(1218) at 6", "Insert SimpleName: Override(1124) into MarkerAnnotation(1125) at 0", "Insert SimpleName: RemoveServerCacheResponse(1127) into SimpleType: RemoveServerCacheResponse(1128) at 0", "Insert SimpleType: ServerCachingService(1131) into SingleVariableDeclaration(1133) at 0", "Insert SimpleName: instance(1132) into SingleVariableDeclaration(1133) at 1", "Insert SimpleName: IOException(1134) into SimpleType: IOException(1135) at 0", "Insert VariableDeclarationStatement(1143) into Block(1217) at 0", "Insert VariableDeclarationStatement(1157) into Block(1217) at 1", "Insert VariableDeclarationStatement(1165) into Block(1217) at 2", "Insert IfStatement(1184) into Block(1217) at 3", "Move ExpressionStatement(943) into Block(1217) at 4", "Insert ExpressionStatement(1201) into Block(1217) at 5", "Insert IfStatement(1212) into Block(1217) at 6", "Insert ReturnStatement(1216) into Block(1217) at 7", "Insert VariableDeclarationStatement(588) into Block(772) at 0", "Insert TryStatement(748) into Block(772) at 1", "Insert IfStatement(769) into Block(772) at 2", "Insert ReturnStatement(771) into Block(772) at 3", "Update SimpleName: ServerCachingProtocol(920) to ServerCachingService", "Move SimpleName: ServerCachingProtocol(920) into SimpleType: ServerCachingService(1131) at 0", "Insert SimpleType: ServerRpcController(1137) into VariableDeclarationStatement(1143) at 0", "Insert VariableDeclarationFragment(1142) into VariableDeclarationStatement(1143) at 1", "Insert ParameterizedType: BlockingRpcCallback<RemoveServerCacheResponse>(1148) into VariableDeclarationStatement(1157) at 0", "Insert VariableDeclarationFragment(1156) into VariableDeclarationStatement(1157) at 1", "Insert SimpleType: RemoveServerCacheRequest.Builder(1159) into VariableDeclarationStatement(1165) at 0", "Insert VariableDeclarationFragment(1164) into VariableDeclarationStatement(1165) at 1", "Update InfixExpression: ==(933) to !=", "Move InfixExpression: ==(933) into IfStatement(1184) at 0", "Insert Block(1183) into IfStatement(1184) at 1", "Insert MethodInvocation(1200) into ExpressionStatement(1201) at 0", "Insert InfixExpression: !=(1206) into IfStatement(1212) at 0", "Insert Block(1211) into IfStatement(1212) at 1", "Insert MethodInvocation(1215) into ReturnStatement(1216) at 0", "Insert Modifier: final(577) into VariableDeclarationStatement(588) at 0", "Insert ParameterizedType: Map<byte[],AddServerCacheResponse>(585) into VariableDeclarationStatement(588) at 1", "Insert VariableDeclarationFragment(587) into VariableDeclarationStatement(588) at 2", "Insert Block(736) into TryStatement(748) at 0", "Insert CatchClause(747) into TryStatement(748) at 1", "Insert InfixExpression: &&(757) into IfStatement(769) at 0", "Insert Block(768) into IfStatement(769) at 1", "Insert BooleanLiteral: false(770) into ReturnStatement(771) at 0", "Insert SimpleName: ServerRpcController(1136) into SimpleType: ServerRpcController(1137) at 0", "Insert SimpleName: controller(1138) into VariableDeclarationFragment(1142) at 0", "Insert ClassInstanceCreation(1141) into VariableDeclarationFragment(1142) at 1", "Insert SimpleType: BlockingRpcCallback(1145) into ParameterizedType: BlockingRpcCallback<RemoveServerCacheResponse>(1148) at 0", "Insert SimpleType: RemoveServerCacheResponse(1147) into ParameterizedType: BlockingRpcCallback<RemoveServerCacheResponse>(1148) at 1", "Insert SimpleName: rpcCallback(1149) into VariableDeclarationFragment(1156) at 0", "Insert ClassInstanceCreation(1155) into VariableDeclarationFragment(1156) at 1", "Insert QualifiedName: RemoveServerCacheRequest.Builder(1158) into SimpleType: RemoveServerCacheRequest.Builder(1159) at 0", "Insert SimpleName: builder(1160) into VariableDeclarationFragment(1164) at 0", "Insert MethodInvocation(1163) into VariableDeclarationFragment(1164) at 1", "Insert ExpressionStatement(1182) into Block(1183) at 0", "Update SimpleName: protocol(927) to builder", "Update SimpleName: removeServerCache(928) to setCacheId", "Insert MethodInvocation(1190) into MethodInvocation(1191) at 2", "Insert SimpleName: instance(1193) into MethodInvocation(1200) at 0", "Insert SimpleName: removeServerCache(1194) into MethodInvocation(1200) at 1", "Insert SimpleName: controller(1195) into MethodInvocation(1200) at 2", "Insert MethodInvocation(1198) into MethodInvocation(1200) at 3", "Insert SimpleName: rpcCallback(1199) into MethodInvocation(1200) at 4", "Insert MethodInvocation(1204) into InfixExpression: !=(1206) at 0", "Insert NullLiteral(1205) into InfixExpression: !=(1206) at 1", "Insert ThrowStatement(1210) into Block(1211) at 0", "Insert SimpleName: rpcCallback(1213) into MethodInvocation(1215) at 0", "Insert SimpleName: get(1214) into MethodInvocation(1215) at 1", "Insert SimpleType: Map(579) into ParameterizedType: Map<byte[],AddServerCacheResponse>(585) at 0", "Insert ArrayType: byte[](582) into ParameterizedType: Map<byte[],AddServerCacheResponse>(585) at 1", "Insert SimpleType: AddServerCacheResponse(584) into ParameterizedType: Map<byte[],AddServerCacheResponse>(585) at 2", "Update SimpleName: protocol(549) to results", "Move SimpleName: protocol(549) into VariableDeclarationFragment(587) at 0", "Insert ExpressionStatement(735) into Block(736) at 0", "Insert SingleVariableDeclaration(740) into CatchClause(747) at 0", "Insert Block(746) into CatchClause(747) at 1", "Insert InfixExpression: !=(751) into InfixExpression: &&(757) at 0", "Insert InfixExpression: ==(756) into InfixExpression: &&(757) at 1", "Insert ReturnStatement(767) into Block(768) at 0", "Insert SimpleType: ServerRpcController(1140) into ClassInstanceCreation(1141) at 0", "Insert SimpleName: BlockingRpcCallback(1144) into SimpleType: BlockingRpcCallback(1145) at 0", "Insert SimpleName: RemoveServerCacheResponse(1146) into SimpleType: RemoveServerCacheResponse(1147) at 0", "Insert ParameterizedType: BlockingRpcCallback<RemoveServerCacheResponse>(1154) into ClassInstanceCreation(1155) at 0", "Insert SimpleName: RemoveServerCacheRequest(1161) into MethodInvocation(1163) at 0", "Insert SimpleName: newBuilder(1162) into MethodInvocation(1163) at 1", "Insert MethodInvocation(1181) into ExpressionStatement(1182) at 0", "Insert SimpleName: HBaseZeroCopyByteString(1187) into MethodInvocation(1190) at 0", "Insert SimpleName: wrap(1188) into MethodInvocation(1190) at 1", "Move SimpleName: cacheId(941) into MethodInvocation(1190) at 2", "Insert SimpleName: builder(1196) into MethodInvocation(1198) at 0", "Insert SimpleName: build(1197) into MethodInvocation(1198) at 1", "Insert SimpleName: controller(1202) into MethodInvocation(1204) at 0", "Insert SimpleName: getFailedOn(1203) into MethodInvocation(1204) at 1", "Insert MethodInvocation(1209) into ThrowStatement(1210) at 0", "Insert SimpleName: Map(578) into SimpleType: Map(579) at 0", "Insert PrimitiveType: byte(580) into ArrayType: byte[](582) at 0", "Insert Dimension(581) into ArrayType: byte[](582) at 1", "Update SimpleName: ServerCachingProtocol(547) to AddServerCacheResponse", "Move SimpleName: ServerCachingProtocol(547) into SimpleType: AddServerCacheResponse(584) at 0", "Insert Assignment: =(734) into ExpressionStatement(735) at 0", "Insert SimpleType: Throwable(738) into SingleVariableDeclaration(740) at 0", "Insert SimpleName: t(739) into SingleVariableDeclaration(740) at 1", "Insert ThrowStatement(745) into Block(746) at 0", "Insert SimpleName: results(749) into InfixExpression: !=(751) at 0", "Insert NullLiteral(750) into InfixExpression: !=(751) at 1", "Insert MethodInvocation(754) into InfixExpression: ==(756) at 0", "Insert NumberLiteral: 1(755) into InfixExpression: ==(756) at 1", "Insert MethodInvocation(766) into ReturnStatement(767) at 0", "Insert SimpleName: ServerRpcController(1139) into SimpleType: ServerRpcController(1140) at 0", "Insert SimpleType: BlockingRpcCallback(1151) into ParameterizedType: BlockingRpcCallback<RemoveServerCacheResponse>(1154) at 0", "Insert SimpleType: RemoveServerCacheResponse(1153) into ParameterizedType: BlockingRpcCallback<RemoveServerCacheResponse>(1154) at 1", "Insert SimpleName: builder(1171) into MethodInvocation(1181) at 0", "Insert SimpleName: setTenantId(1172) into MethodInvocation(1181) at 1", "Insert MethodInvocation(1180) into MethodInvocation(1181) at 2", "Insert SimpleName: controller(1207) into MethodInvocation(1209) at 0", "Insert SimpleName: getFailedOn(1208) into MethodInvocation(1209) at 1", "Insert SimpleName: results(589) into Assignment: =(734) at 0", "Insert MethodInvocation(733) into Assignment: =(734) at 1", "Insert SimpleName: Throwable(737) into SimpleType: Throwable(738) at 0", "Insert ClassInstanceCreation(744) into ThrowStatement(745) at 0", "Insert SimpleName: results(752) into MethodInvocation(754) at 0", "Insert SimpleName: size(753) into MethodInvocation(754) at 1", "Insert MethodInvocation(764) into MethodInvocation(766) at 0", "Insert SimpleName: getReturn(765) into MethodInvocation(766) at 1", "Insert SimpleName: BlockingRpcCallback(1150) into SimpleType: BlockingRpcCallback(1151) at 0", "Insert SimpleName: RemoveServerCacheResponse(1152) into SimpleType: RemoveServerCacheResponse(1153) at 0", "Insert SimpleName: HBaseZeroCopyByteString(1173) into MethodInvocation(1180) at 0", "Insert SimpleName: wrap(1174) into MethodInvocation(1180) at 1", "Move MethodInvocation(939) into MethodInvocation(1180) at 2", "Move SimpleName: htable(550) into MethodInvocation(733) at 0", "Update SimpleName: coprocessorProxy(551) to coprocessorService", "Move SimpleName: coprocessorProxy(551) into MethodInvocation(733) at 1", "Move TypeLiteral(554) into MethodInvocation(733) at 2", "Move SimpleName: key(555) into MethodInvocation(733) at 3", "Insert SimpleName: key(596) into MethodInvocation(733) at 4", "Insert ClassInstanceCreation(732) into MethodInvocation(733) at 5", "Insert SimpleType: Exception(742) into ClassInstanceCreation(744) at 0", "Insert SimpleName: t(743) into ClassInstanceCreation(744) at 1", "Insert MethodInvocation(762) into MethodInvocation(764) at 0", "Insert SimpleName: next(763) into MethodInvocation(764) at 1", "Update SimpleType: ServerCachingProtocol(553) to ServerCachingService", "Insert ParameterizedType: Batch.Call<ServerCachingService,AddServerCacheResponse>(603) into ClassInstanceCreation(732) at 0", "Insert AnonymousClassDeclaration(731) into ClassInstanceCreation(732) at 1", "Insert SimpleName: Exception(741) into SimpleType: Exception(742) at 0", "Insert MethodInvocation(760) into MethodInvocation(762) at 0", "Insert SimpleName: iterator(761) into MethodInvocation(762) at 1", "Update SimpleName: ServerCachingProtocol(552) to ServerCachingService", "Insert SimpleType: Batch.Call(598) into ParameterizedType: Batch.Call<ServerCachingService,AddServerCacheResponse>(603) at 0", "Insert SimpleType: ServerCachingService(600) into ParameterizedType: Batch.Call<ServerCachingService,AddServerCacheResponse>(603) at 1", "Insert SimpleType: AddServerCacheResponse(602) into ParameterizedType: Batch.Call<ServerCachingService,AddServerCacheResponse>(603) at 2", "Insert MethodDeclaration(730) into AnonymousClassDeclaration(731) at 0", "Insert SimpleName: results(758) into MethodInvocation(760) at 0", "Insert SimpleName: values(759) into MethodInvocation(760) at 1", "Insert QualifiedName: Batch.Call(597) into SimpleType: Batch.Call(598) at 0", "Insert SimpleName: ServerCachingService(599) into SimpleType: ServerCachingService(600) at 0", "Insert SimpleName: AddServerCacheResponse(601) into SimpleType: AddServerCacheResponse(602) at 0", "Insert MarkerAnnotation(605) into MethodDeclaration(730) at 0", "Insert Modifier: public(606) into MethodDeclaration(730) at 1", "Insert SimpleType: AddServerCacheResponse(608) into MethodDeclaration(730) at 2", "Insert SimpleName: call(609) into MethodDeclaration(730) at 3", "Insert SingleVariableDeclaration(613) into MethodDeclaration(730) at 4", "Insert SimpleType: IOException(615) into MethodDeclaration(730) at 5", "Insert Block(729) into MethodDeclaration(730) at 6", "Insert SimpleName: Override(604) into MarkerAnnotation(605) at 0", "Insert SimpleName: AddServerCacheResponse(607) into SimpleType: AddServerCacheResponse(608) at 0", "Insert SimpleType: ServerCachingService(611) into SingleVariableDeclaration(613) at 0", "Insert SimpleName: instance(612) into SingleVariableDeclaration(613) at 1", "Insert SimpleName: IOException(614) into SimpleType: IOException(615) at 0", "Insert VariableDeclarationStatement(623) into Block(729) at 0", "Insert VariableDeclarationStatement(637) into Block(729) at 1", "Insert VariableDeclarationStatement(645) into Block(729) at 2", "Insert IfStatement(664) into Block(729) at 3", "Insert ExpressionStatement(672) into Block(729) at 4", "Insert ExpressionStatement(680) into Block(729) at 5", "Insert VariableDeclarationStatement(688) into Block(729) at 6", "Insert ExpressionStatement(697) into Block(729) at 7", "Insert ExpressionStatement(704) into Block(729) at 8", "Insert ExpressionStatement(713) into Block(729) at 9", "Insert IfStatement(724) into Block(729) at 10", "Insert ReturnStatement(728) into Block(729) at 11", "Insert SimpleName: ServerCachingService(610) into SimpleType: ServerCachingService(611) at 0", "Insert SimpleType: ServerRpcController(617) into VariableDeclarationStatement(623) at 0", "Insert VariableDeclarationFragment(622) into VariableDeclarationStatement(623) at 1", "Insert ParameterizedType: BlockingRpcCallback<AddServerCacheResponse>(628) into VariableDeclarationStatement(637) at 0", "Insert VariableDeclarationFragment(636) into VariableDeclarationStatement(637) at 1", "Insert SimpleType: AddServerCacheRequest.Builder(639) into VariableDeclarationStatement(645) at 0", "Insert VariableDeclarationFragment(644) into VariableDeclarationStatement(645) at 1", "Update InfixExpression: ==(565) to !=", "Move InfixExpression: ==(565) into IfStatement(664) at 0", "Insert Block(663) into IfStatement(664) at 1", "Insert MethodInvocation(671) into ExpressionStatement(672) at 0", "Insert MethodInvocation(679) into ExpressionStatement(680) at 0", "Insert SimpleType: ServerCacheFactoryProtos.ServerCacheFactory.Builder(682) into VariableDeclarationStatement(688) at 0", "Insert VariableDeclarationFragment(687) into VariableDeclarationStatement(688) at 1", "Insert MethodInvocation(696) into ExpressionStatement(697) at 0", "Insert MethodInvocation(703) into ExpressionStatement(704) at 0", "Insert MethodInvocation(712) into ExpressionStatement(713) at 0", "Insert InfixExpression: !=(718) into IfStatement(724) at 0", "Insert Block(723) into IfStatement(724) at 1", "Insert MethodInvocation(727) into ReturnStatement(728) at 0", "Insert SimpleName: ServerRpcController(616) into SimpleType: ServerRpcController(617) at 0", "Insert SimpleName: controller(618) into VariableDeclarationFragment(622) at 0", "Insert ClassInstanceCreation(621) into VariableDeclarationFragment(622) at 1", "Insert SimpleType: BlockingRpcCallback(625) into ParameterizedType: BlockingRpcCallback<AddServerCacheResponse>(628) at 0", "Insert SimpleType: AddServerCacheResponse(627) into ParameterizedType: BlockingRpcCallback<AddServerCacheResponse>(628) at 1", "Insert SimpleName: rpcCallback(629) into VariableDeclarationFragment(636) at 0", "Insert ClassInstanceCreation(635) into VariableDeclarationFragment(636) at 1", "Insert QualifiedName: AddServerCacheRequest.Builder(638) into SimpleType: AddServerCacheRequest.Builder(639) at 0", "Insert SimpleName: builder(640) into VariableDeclarationFragment(644) at 0", "Insert MethodInvocation(643) into VariableDeclarationFragment(644) at 1", "Insert ExpressionStatement(662) into Block(663) at 0", "Insert SimpleName: builder(665) into MethodInvocation(671) at 0", "Insert SimpleName: setCacheId(666) into MethodInvocation(671) at 1", "Insert MethodInvocation(670) into MethodInvocation(671) at 2", "Insert SimpleName: builder(673) into MethodInvocation(679) at 0", "Insert SimpleName: setCachePtr(674) into MethodInvocation(679) at 1", "Insert MethodInvocation(678) into MethodInvocation(679) at 2", "Insert QualifiedName: ServerCacheFactoryProtos.ServerCacheFactory.Builder(681) into SimpleType: ServerCacheFactoryProtos.ServerCacheFactory.Builder(682) at 0", "Insert SimpleName: svrCacheFactoryBuider(683) into VariableDeclarationFragment(687) at 0", "Insert MethodInvocation(686) into VariableDeclarationFragment(687) at 1", "Insert SimpleName: svrCacheFactoryBuider(689) into MethodInvocation(696) at 0", "Insert SimpleName: setClassName(690) into MethodInvocation(696) at 1", "Insert MethodInvocation(695) into MethodInvocation(696) at 2", "Insert SimpleName: builder(698) into MethodInvocation(703) at 0", "Insert SimpleName: setCacheFactory(699) into MethodInvocation(703) at 1", "Insert MethodInvocation(702) into MethodInvocation(703) at 2", "Insert SimpleName: instance(705) into MethodInvocation(712) at 0", "Insert SimpleName: addServerCache(706) into MethodInvocation(712) at 1", "Insert SimpleName: controller(707) into MethodInvocation(712) at 2", "Insert MethodInvocation(710) into MethodInvocation(712) at 3", "Insert SimpleName: rpcCallback(711) into MethodInvocation(712) at 4", "Insert MethodInvocation(716) into InfixExpression: !=(718) at 0", "Insert NullLiteral(717) into InfixExpression: !=(718) at 1", "Insert ThrowStatement(722) into Block(723) at 0", "Insert SimpleName: rpcCallback(725) into MethodInvocation(727) at 0", "Insert SimpleName: get(726) into MethodInvocation(727) at 1", "Insert SimpleType: ServerRpcController(620) into ClassInstanceCreation(621) at 0", "Insert SimpleName: BlockingRpcCallback(624) into SimpleType: BlockingRpcCallback(625) at 0", "Insert SimpleName: AddServerCacheResponse(626) into SimpleType: AddServerCacheResponse(627) at 0", "Insert ParameterizedType: BlockingRpcCallback<AddServerCacheResponse>(634) into ClassInstanceCreation(635) at 0", "Insert SimpleName: AddServerCacheRequest(641) into MethodInvocation(643) at 0", "Insert SimpleName: newBuilder(642) into MethodInvocation(643) at 1", "Insert MethodInvocation(661) into ExpressionStatement(662) at 0", "Insert SimpleName: HBaseZeroCopyByteString(667) into MethodInvocation(670) at 0", "Insert SimpleName: wrap(668) into MethodInvocation(670) at 1", "Move SimpleName: cacheId(573) into MethodInvocation(670) at 2", "Insert QualifiedName: org.apache.phoenix.protobuf.ProtobufUtil(675) into MethodInvocation(678) at 0", "Insert SimpleName: toProto(676) into MethodInvocation(678) at 1", "Move SimpleName: cachePtr(574) into MethodInvocation(678) at 2", "Insert QualifiedName: ServerCacheFactoryProtos.ServerCacheFactory(684) into MethodInvocation(686) at 0", "Insert SimpleName: newBuilder(685) into MethodInvocation(686) at 1", "Insert MethodInvocation(693) into MethodInvocation(695) at 0", "Insert SimpleName: getName(694) into MethodInvocation(695) at 1", "Insert SimpleName: svrCacheFactoryBuider(700) into MethodInvocation(702) at 0", "Insert SimpleName: build(701) into MethodInvocation(702) at 1", "Insert SimpleName: builder(708) into MethodInvocation(710) at 0", "Insert SimpleName: build(709) into MethodInvocation(710) at 1", "Insert SimpleName: controller(714) into MethodInvocation(716) at 0", "Insert SimpleName: getFailedOn(715) into MethodInvocation(716) at 1", "Insert MethodInvocation(721) into ThrowStatement(722) at 0", "Insert SimpleName: ServerRpcController(619) into SimpleType: ServerRpcController(620) at 0", "Insert SimpleType: BlockingRpcCallback(631) into ParameterizedType: BlockingRpcCallback<AddServerCacheResponse>(634) at 0", "Insert SimpleType: AddServerCacheResponse(633) into ParameterizedType: BlockingRpcCallback<AddServerCacheResponse>(634) at 1", "Insert SimpleName: builder(651) into MethodInvocation(661) at 0", "Insert SimpleName: setTenantId(652) into MethodInvocation(661) at 1", "Insert MethodInvocation(660) into MethodInvocation(661) at 2", "Move SimpleName: cacheFactory(575) into MethodInvocation(693) at 0", "Insert SimpleName: getClass(692) into MethodInvocation(693) at 1", "Insert SimpleName: controller(719) into MethodInvocation(721) at 0", "Insert SimpleName: getFailedOn(720) into MethodInvocation(721) at 1", "Insert SimpleName: BlockingRpcCallback(630) into SimpleType: BlockingRpcCallback(631) at 0", "Insert SimpleName: AddServerCacheResponse(632) into SimpleType: AddServerCacheResponse(633) at 0", "Insert SimpleName: HBaseZeroCopyByteString(653) into MethodInvocation(660) at 0", "Insert SimpleName: wrap(654) into MethodInvocation(660) at 1", "Move MethodInvocation(571) into MethodInvocation(660) at 2", "Delete SimpleType: ServerCachingProtocol(548)", "Delete MethodInvocation(556)", "Delete VariableDeclarationFragment(557)", "Delete VariableDeclarationStatement(558)", "Delete SimpleName: protocol(559)", "Delete SimpleName: addServerCache(560)", "Delete NullLiteral(566)", "Delete ConditionalExpression(572)", "Delete MethodInvocation(576)", "Delete ReturnStatement(577)", "Delete NullLiteral(934)", "Delete ConditionalExpression(940)", "Delete SimpleType: ServerCachingProtocol(916)", "Delete SimpleName: protocol(917)", "Delete SimpleName: iterateOverTable(918)", "Delete SimpleName: coprocessorProxy(919)", "Delete SimpleType: ServerCachingProtocol(921)", "Delete TypeLiteral(922)", "Delete SimpleName: key(923)", "Delete MethodInvocation(924)", "Delete VariableDeclarationFragment(925)", "Delete VariableDeclarationStatement(926)"]}}, {"ClientKeyValue_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.io.ByteArrayOutputStream to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 32", "MOV MethodDeclaration to TypeDeclaration: class at 35", "MOV MethodDeclaration to TypeDeclaration: class at 33", "MOV MethodDeclaration to TypeDeclaration: class at 37", "MOV MethodDeclaration to TypeDeclaration: class at 51", "MOV MethodDeclaration to TypeDeclaration: class at 39"]}, {"root": "UPDATE from java.io.DataInput to java.io.DataOutputStream", "operations": ["UPD QualifiedName: java.io.DataInput from java.io.DataInput to java.io.DataOutputStream"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 11", "INS Modifier: private to FieldDeclaration at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: bytes to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 71", "operations": ["INS SimpleName: out to MethodInvocation at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: close to MethodInvocation at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS FieldAccess to InfixExpression: != at 0", "INS SimpleName: bytes to FieldAccess at 1", "INS SimpleName: getBuffer to MethodDeclaration at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to TryStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS IfStatement to Block at 0", "INS SimpleName: out to Assignment: = at 0", "INS MethodDeclaration to TypeDeclaration: class at 71", "INS SimpleName: byteStream to VariableDeclarationFragment at 0", "INS SimpleName: out to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 1", "INS TryStatement to Block at 2", "INS ExpressionStatement to Block at 1", "INS IfStatement to Block at 0", "INS SimpleName: byteStream to ClassInstanceCreation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to IfStatement at 0", "INS CatchClause to TryStatement at 1", "INS ThisExpression to FieldAccess at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: bytes to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS TryStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: bytes to FieldAccess at 1", "INS SimpleName: out to VariableDeclarationFragment at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: byteStream to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0", "INS MethodInvocation to Assignment: = at 1", "INS VariableDeclarationStatement to Block at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: out to InfixExpression: != at 0", "INS SimpleType: ByteArrayOutputStream to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to TryStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: toByteArray to MethodInvocation at 1", "INS SimpleType: DataOutputStream to VariableDeclarationStatement at 0", "INS SimpleName: ioe to SingleVariableDeclaration at 1", "INS ReturnStatement to IfStatement at 1", "INS NullLiteral to Assignment: = at 1", "INS FieldAccess to ReturnStatement at 0", "INS Block to TryStatement at 1", "INS SimpleName: write to MethodInvocation at 0", "INS Block to MethodDeclaration at 4"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV ArrayType: byte[] to FieldDeclaration at 1"]}, {"root": "INS ArrayType: byte[] to MethodDeclaration at 2", "operations": ["INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Dimension to ArrayType: byte[] at 1", "INS ArrayType: byte[] to MethodDeclaration at 2"]}, {"root": "UPDATE from getTotalColumnLength to getValueArray", "operations": ["UPD SimpleName: getTotalColumnLength from getTotalColumnLength to getValueArray"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS ArrayType: byte[] to MethodDeclaration at 3", "operations": ["INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS ArrayType: byte[] to MethodDeclaration at 3", "INS Dimension to ArrayType: byte[] at 1"]}, {"root": "UPDATE from getTotalColumnLength to getRowArray", "operations": ["UPD SimpleName: getTotalColumnLength from getTotalColumnLength to getRowArray", "UPD SimpleName: getLength from getLength to getRowArray"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS ArrayType: byte[] to MethodDeclaration at 3", "operations": ["INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS ArrayType: byte[] to MethodDeclaration at 3", "INS Dimension to ArrayType: byte[] at 1"]}, {"root": "UPDATE from matchingRow to getFamilyArray", "operations": ["UPD SimpleName: matchingRow from matchingRow to getFamilyArray", "UPD SimpleName: getBuffer from getBuffer to getFamilyArray"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS ArrayType: byte[] to MethodDeclaration at 2", "operations": ["INS Dimension to ArrayType: byte[] at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS ArrayType: byte[] to MethodDeclaration at 2"]}, {"root": "INS SimpleName: getQualifierArray to MethodDeclaration at 3", "operations": ["INS SimpleName: getQualifierArray to MethodDeclaration at 3"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS Block to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from boolean to byte", "operations": ["UPD PrimitiveType: boolean from boolean to byte"]}, {"root": "UPDATE from nonNullRowAndColumn to getTypeByte", "operations": ["UPD SimpleName: nonNullRowAndColumn from nonNullRowAndColumn to getTypeByte"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "UPDATE from isEmptyColumn to matchingRow", "operations": ["UPD SimpleName: isEmptyColumn from isEmptyColumn to matchingRow"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ArrayType: byte[] to MethodDeclaration at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: value to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV MethodInvocation to ReturnStatement at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: type to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: matchingRow to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: other to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1"]}, {"root": "UPDATE from getFamilyLength to get", "operations": ["UPD SimpleName: getFamilyLength from getFamilyLength to get", "UPD SimpleName: getLength from getLength to get", "UPD SimpleName: getLength from getLength to get", "UPD SimpleName: getLength from getLength to get"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getFamilyLength to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getLength to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getLength to MethodInvocation at 1"]}, {"root": "UPDATE from getLength to getCode", "operations": ["UPD SimpleName: getLength from getLength to getCode"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getLength to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from CatchClause", "operations": ["MOV Block to CatchClause at 1"]}, {"root": "UPDATE from getBuffer to getQualifierArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getQualifierArray"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getLength to MethodInvocation at 1"]}, {"root": "INS ThisExpression to MethodInvocation at 0", "operations": ["INS ThisExpression to MethodInvocation at 0"]}, {"root": "UPDATE from getMemstoreTS to getMvccVersion", "operations": ["UPD SimpleName: getMemstoreTS from getMemstoreTS to getMvccVersion"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: IOException to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from UnsupportedOperationException to ByteArrayOutputStream", "operations": ["UPD SimpleName: UnsupportedOperationException from UnsupportedOperationException to ByteArrayOutputStream", "UPD SimpleType: UnsupportedOperationException from UnsupportedOperationException to ByteArrayOutputStream", "UPD SimpleName: DataInput from DataInput to ByteArrayOutputStream"]}, {"root": "MOVE from SimpleType: ByteArrayOutputStream", "operations": ["MOV SimpleName: DataInput to SimpleType: ByteArrayOutputStream at 0"]}, {"root": "UPDATE from DataInput to DataOutputStream", "operations": ["UPD SimpleName: DataInput from DataInput to DataOutputStream", "UPD SimpleName: UnsupportedOperationException from UnsupportedOperationException to DataOutputStream", "UPD SimpleType: UnsupportedOperationException from UnsupportedOperationException to DataOutputStream"]}, {"root": "MOVE from SimpleType: DataOutputStream", "operations": ["MOV SimpleName: DataInput to SimpleType: DataOutputStream at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0"]}, {"root": "INS FieldAccess to ReturnStatement at 0", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to ReturnStatement at 0", "INS SimpleName: bytes to FieldAccess at 1"]}, {"root": "UPDATE from \" should not be used for server-side operations\" to \" can not being serialized to a single backing buffer. Due to \"", "operations": ["UPD StringLiteral: \" should not be used for server-side operations\" from \" should not be used for server-side operations\" to \" can not being serialized to a single backing buffer. Due to \""]}, {"root": "INS SimpleName: ioe to InfixExpression: + at 2", "operations": ["INS SimpleName: ioe to InfixExpression: + at 2"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL PrimitiveType: int", "DEL MarkerAnnotation", "DEL SimpleName: getQualifierLength", "DEL SimpleName: flength", "DEL SimpleName: Override", "DEL Modifier: public", "DEL Block", "DEL SimpleName: getQualifierLength", "DEL PrimitiveType: int", "DEL SimpleName: rlength", "DEL ReturnStatement", "DEL ThisExpression", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL MethodInvocation"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: rlength", "DEL PrimitiveType: int", "DEL SingleVariableDeclaration"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL PrimitiveType: int", "DEL SingleVariableDeclaration", "DEL SimpleName: foffset"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL MethodInvocation", "DEL SimpleName: getQualifierLength", "DEL ThisExpression", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL ThisExpression"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL SimpleName: family", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleName: getLength", "DEL MethodInvocation", "DEL SimpleName: qualifier"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: other", "DEL SimpleName: matchingRow", "DEL MethodInvocation", "DEL SimpleName: getBuffer"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: family", "DEL QualifiedName: column.length", "DEL SimpleName: getLength", "DEL MethodInvocation", "DEL SimpleName: matchingQualifier", "DEL MethodInvocation", "DEL SimpleName: column", "DEL MethodInvocation", "DEL SimpleName: family", "DEL InfixExpression: -"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL SimpleName: matchingColumnNoDelimiter", "operations": ["DEL SimpleName: matchingColumnNoDelimiter"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: column", "DEL SingleVariableDeclaration"]}, {"root": "DEL Block", "operations": ["DEL BooleanLiteral: false", "DEL SimpleName: matchingFamily", "DEL IfStatement", "DEL ReturnStatement", "DEL SimpleName: column", "DEL Block", "DEL MethodInvocation", "DEL Block", "DEL NumberLiteral: 0"]}, {"root": "DEL InfixExpression: &&", "operations": ["DEL ParenthesizedExpression", "DEL SimpleName: isEmptyColumn", "DEL InfixExpression: >", "DEL InfixExpression: &&", "DEL NullLiteral", "DEL MethodInvocation", "DEL InfixExpression: &&", "DEL NumberLiteral: 0", "DEL PrefixExpression: !", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL SimpleName: row"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL MarkerAnnotation", "DEL SimpleName: Override"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL SimpleName: Override", "DEL MarkerAnnotation"]}, {"root": "DEL InfixExpression: &&", "operations": ["DEL NumberLiteral: 0", "DEL NullLiteral", "DEL InfixExpression: &&", "DEL InfixExpression: !=", "DEL SimpleName: qualifier", "DEL InfixExpression: >", "DEL FieldAccess", "DEL MethodInvocation", "DEL ThisExpression"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL MarkerAnnotation", "DEL SimpleName: Override"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL PrimitiveType: void", "DEL SimpleType: ClientKeyValue", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: in", "DEL SimpleName: IOException", "DEL TypeLiteral", "DEL Block", "DEL PrimitiveType: int", "DEL ClassInstanceCreation", "DEL MarkerAnnotation", "DEL SimpleType: DataInput", "DEL SingleVariableDeclaration", "DEL SimpleType: IOException", "DEL SimpleName: getSimpleName", "DEL MethodDeclaration", "DEL SimpleName: readFields", "DEL SimpleName: Override", "DEL ThrowStatement", "DEL SimpleName: ClientKeyValue", "DEL SimpleName: length", "DEL InfixExpression: +", "DEL StringLiteral: \" should not be used for server-side operations\""]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL InfixExpression: +", "DEL ThrowStatement", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleType: DataInput", "DEL SimpleName: getSimpleName", "DEL SimpleName: readFields", "DEL PrimitiveType: void", "DEL SimpleName: in", "DEL TypeLiteral", "DEL MethodDeclaration", "DEL SimpleType: ClientKeyValue", "DEL MarkerAnnotation", "DEL ClassInstanceCreation", "DEL SimpleName: ClientKeyValue", "DEL SimpleName: Override", "DEL MethodInvocation", "DEL StringLiteral: \" should not be used for server-side operations\""]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL PrimitiveType: int", "DEL SimpleName: getFamilyOffset", "DEL ReturnStatement", "DEL PrimitiveType: int", "DEL SimpleName: rlength", "DEL NumberLiteral: 0", "DEL MarkerAnnotation", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: Override", "DEL MethodDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL SimpleName: getQualifierOffset", "DEL PrimitiveType: int", "DEL MethodDeclaration", "DEL PrimitiveType: int", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: foffset"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL PrimitiveType: int", "DEL SingleVariableDeclaration", "DEL NumberLiteral: 0", "DEL Modifier: public", "DEL SimpleName: Override", "DEL PrimitiveType: int", "DEL ReturnStatement", "DEL Block", "DEL MarkerAnnotation", "DEL MethodDeclaration", "DEL SimpleName: keylength", "DEL SimpleName: getTimestampOffset"]}, {"root": "DEL NumberLiteral: 0", "operations": ["DEL NumberLiteral: 0"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: Override", "DEL SimpleName: SplitKeyValue", "DEL SimpleName: split", "DEL MarkerAnnotation", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleType: SplitKeyValue"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MarkerAnnotation", "DEL Modifier: public", "DEL ThrowStatement", "DEL MethodInvocation", "DEL SimpleType: ClientKeyValue", "DEL Block", "DEL SimpleType: UnsupportedOperationException", "DEL ClassInstanceCreation", "DEL TypeLiteral", "DEL SimpleName: Override", "DEL SimpleName: getBuffer", "DEL StringLiteral: \" does not support a single backing buffer.\"", "DEL SimpleName: UnsupportedOperationException", "DEL SimpleName: ClientKeyValue", "DEL MethodDeclaration", "DEL SimpleName: getSimpleName", "DEL InfixExpression: +"]}]}}, {"ClientKeyValue_diff": {"operations": ["Move ImportDeclaration(18) into CompilationUnit(1939) at 3", "Insert ImportDeclaration(18) into CompilationUnit(1939) at 1", "Move MethodDeclaration(577) into TypeDeclaration: class(1938) at 32", "Move MethodDeclaration(592) into TypeDeclaration: class(1938) at 33", "Move MethodDeclaration(1057) into TypeDeclaration: class(1938) at 35", "Move MethodDeclaration(1094) into TypeDeclaration: class(1938) at 37", "Move MethodDeclaration(1120) into TypeDeclaration: class(1938) at 51", "Move MethodDeclaration(1144) into TypeDeclaration: class(1938) at 39", "Insert QualifiedName: java.io.ByteArrayOutputStream(17) into ImportDeclaration(18) at 0", "Update QualifiedName: java.io.DataInput(17) to java.io.DataOutputStream", "Insert FieldDeclaration(129) into TypeDeclaration: class(1938) at 11", "Insert MethodDeclaration(1937) into TypeDeclaration: class(1938) at 65", "Insert Modifier: private(122) into FieldDeclaration(129) at 0", "Move ArrayType: byte[](1065) into FieldDeclaration(129) at 1", "Insert VariableDeclarationFragment(128) into FieldDeclaration(129) at 2", "Insert ArrayType: byte[](568) into MethodDeclaration(577) at 2", "Update SimpleName: getTotalColumnLength(561) to getValueArray", "Move MarkerAnnotation(1122) into MethodDeclaration(605) at 0", "Insert ArrayType: byte[](596) into MethodDeclaration(605) at 2", "Update SimpleName: getTotalColumnLength(582) to getRowArray", "Move MarkerAnnotation(1059) into MethodDeclaration(642) at 0", "Insert ArrayType: byte[](633) into MethodDeclaration(642) at 2", "Update SimpleName: matchingRow(1039) to getFamilyArray", "Move MarkerAnnotation(579) into MethodDeclaration(670) at 0", "Insert ArrayType: byte[](661) into MethodDeclaration(670) at 2", "Insert SimpleName: getQualifierArray(662) into MethodDeclaration(670) at 3", "Insert Block(669) into MethodDeclaration(670) at 4", "Move MarkerAnnotation(704) into MethodDeclaration(696) at 0", "Update PrimitiveType: boolean(1124) to byte", "Update SimpleName: nonNullRowAndColumn(1125) to getTypeByte", "Move MarkerAnnotation(1036) into MethodDeclaration(1083) at 0", "Update SimpleName: isEmptyColumn(1149) to matchingRow", "Move SingleVariableDeclaration(1043) into MethodDeclaration(1083) at 5", "Move MarkerAnnotation(1855) into MethodDeclaration(1937) at 0", "Move Modifier: public(1784) into MethodDeclaration(1937) at 1", "Move ArrayType: byte[](2018) into MethodDeclaration(1937) at 2", "Insert SimpleName: getBuffer(1856) into MethodDeclaration(1937) at 3", "Insert Block(1936) into MethodDeclaration(1937) at 4", "Insert SimpleName: bytes(126) into VariableDeclarationFragment(128) at 0", "Insert NullLiteral(127) into VariableDeclarationFragment(128) at 1", "Insert PrimitiveType: byte(566) into ArrayType: byte[](568) at 0", "Insert Dimension(567) into ArrayType: byte[](568) at 1", "Insert PrimitiveType: byte(594) into ArrayType: byte[](596) at 0", "Insert Dimension(595) into ArrayType: byte[](596) at 1", "Insert PrimitiveType: byte(631) into ArrayType: byte[](633) at 0", "Insert Dimension(632) into ArrayType: byte[](633) at 1", "Insert PrimitiveType: byte(659) into ArrayType: byte[](661) at 0", "Insert Dimension(660) into ArrayType: byte[](661) at 1", "Move ReturnStatement(1088) into Block(669) at 0", "Insert IfStatement(1866) into Block(1936) at 0", "Insert TryStatement(1935) into Block(1936) at 1", "Insert MethodInvocation(574) into ReturnStatement(575) at 0", "Insert MethodInvocation(602) into ReturnStatement(603) at 0", "Move MethodInvocation(1075) into ReturnStatement(640) at 0", "Insert MethodInvocation(667) into ReturnStatement(668) at 0", "Insert MethodInvocation(693) into ReturnStatement(694) at 0", "Insert MethodInvocation(1080) into ReturnStatement(1081) at 0", "Insert InfixExpression: !=(1861) into IfStatement(1866) at 0", "Insert ReturnStatement(1865) into IfStatement(1866) at 1", "Insert Block(1916) into TryStatement(1935) at 0", "Insert CatchClause(1934) into TryStatement(1935) at 1", "Insert FieldAccess(572) into MethodInvocation(574) at 0", "Update SimpleName: getFamilyLength(569) to get", "Move SimpleName: getFamilyLength(569) into MethodInvocation(574) at 1", "Move FieldAccess(1128) into MethodInvocation(602) at 0", "Update SimpleName: getLength(584) to get", "Move SimpleName: getLength(584) into MethodInvocation(602) at 1", "Update SimpleName: getLength(1074) to get", "Move FieldAccess(1152) into MethodInvocation(667) at 0", "Update SimpleName: getLength(1080) to get", "Move SimpleName: getLength(1080) into MethodInvocation(667) at 1", "Insert FieldAccess(691) into MethodInvocation(693) at 0", "Update SimpleName: getLength(1132) to getCode", "Move SimpleName: getLength(1132) into MethodInvocation(693) at 1", "Insert SimpleName: matchingRow(1070) into MethodInvocation(1080) at 0", "Insert MethodInvocation(1073) into MethodInvocation(1080) at 1", "Move MethodInvocation(1050) into MethodInvocation(1080) at 2", "Move MethodInvocation(1053) into MethodInvocation(1080) at 3", "Insert FieldAccess(1859) into InfixExpression: !=(1861) at 0", "Insert NullLiteral(1860) into InfixExpression: !=(1861) at 1", "Insert FieldAccess(1864) into ReturnStatement(1865) at 0", "Insert VariableDeclarationStatement(1874) into Block(1916) at 0", "Insert VariableDeclarationStatement(1883) into Block(1916) at 1", "Insert TryStatement(1915) into Block(1916) at 2", "Insert SingleVariableDeclaration(1920) into CatchClause(1934) at 0", "Move Block(2011) into CatchClause(1934) at 1", "Insert ThisExpression(570) into FieldAccess(572) at 0", "Insert SimpleName: value(571) into FieldAccess(572) at 1", "Insert ThisExpression(689) into FieldAccess(691) at 0", "Insert SimpleName: type(690) into FieldAccess(691) at 1", "Update SimpleName: getBuffer(790) to getFamilyArray", "Update SimpleName: getBuffer(961) to getQualifierArray", "Insert SimpleName: other(1071) into MethodInvocation(1073) at 0", "Update SimpleName: getLength(1158) to getRowArray", "Move SimpleName: getLength(1158) into MethodInvocation(1073) at 1", "Insert ThisExpression(1362) into MethodInvocation(1364) at 0", "Update SimpleName: getMemstoreTS(1420) to getMvccVersion", "Insert ThisExpression(1857) into FieldAccess(1859) at 0", "Insert SimpleName: bytes(1858) into FieldAccess(1859) at 1", "Insert ThisExpression(1862) into FieldAccess(1864) at 0", "Insert SimpleName: bytes(1863) into FieldAccess(1864) at 1", "Insert SimpleType: ByteArrayOutputStream(1868) into VariableDeclarationStatement(1874) at 0", "Insert VariableDeclarationFragment(1873) into VariableDeclarationStatement(1874) at 1", "Insert SimpleType: DataOutputStream(1876) into VariableDeclarationStatement(1883) at 0", "Insert VariableDeclarationFragment(1882) into VariableDeclarationStatement(1883) at 1", "Insert Block(1900) into TryStatement(1915) at 0", "Insert Block(1914) into TryStatement(1915) at 1", "Move SimpleType: IOException(1819) into SingleVariableDeclaration(1920) at 0", "Insert SimpleName: ioe(1919) into SingleVariableDeclaration(1920) at 1", "Update SimpleName: DataInput(1790) to ByteArrayOutputStream", "Move SimpleName: DataInput(1790) into SimpleType: ByteArrayOutputStream(1868) at 0", "Insert SimpleName: byteStream(1869) into VariableDeclarationFragment(1873) at 0", "Insert ClassInstanceCreation(1872) into VariableDeclarationFragment(1873) at 1", "Update SimpleName: DataInput(1814) to DataOutputStream", "Move SimpleName: DataInput(1814) into SimpleType: DataOutputStream(1876) at 0", "Insert SimpleName: out(1877) into VariableDeclarationFragment(1882) at 0", "Insert ClassInstanceCreation(1881) into VariableDeclarationFragment(1882) at 1", "Insert ExpressionStatement(1887) into Block(1900) at 0", "Insert ExpressionStatement(1895) into Block(1900) at 1", "Move ReturnStatement(1863) into Block(1900) at 2", "Insert IfStatement(1913) into Block(1914) at 0", "Update SimpleType: UnsupportedOperationException(1797) to ByteArrayOutputStream", "Move SimpleType: UnsupportedOperationException(1797) into ClassInstanceCreation(1872) at 0", "Update SimpleType: UnsupportedOperationException(1821) to DataOutputStream", "Move SimpleType: UnsupportedOperationException(1821) into ClassInstanceCreation(1881) at 0", "Insert SimpleName: byteStream(1880) into ClassInstanceCreation(1881) at 1", "Insert MethodInvocation(1886) into ExpressionStatement(1887) at 0", "Insert Assignment: =(1894) into ExpressionStatement(1895) at 0", "Insert FieldAccess(1898) into ReturnStatement(1899) at 0", "Insert InfixExpression: !=(1903) into IfStatement(1913) at 0", "Insert Block(1912) into IfStatement(1913) at 1", "Update SimpleName: UnsupportedOperationException(1796) to ByteArrayOutputStream", "Update SimpleName: UnsupportedOperationException(1820) to DataOutputStream", "Insert SimpleName: write(1884) into MethodInvocation(1886) at 0", "Insert SimpleName: out(1885) into MethodInvocation(1886) at 1", "Insert FieldAccess(1890) into Assignment: =(1894) at 0", "Insert MethodInvocation(1893) into Assignment: =(1894) at 1", "Insert ThisExpression(1896) into FieldAccess(1898) at 0", "Insert SimpleName: bytes(1897) into FieldAccess(1898) at 1", "Insert SimpleName: out(1901) into InfixExpression: !=(1903) at 0", "Insert NullLiteral(1902) into InfixExpression: !=(1903) at 1", "Insert ExpressionStatement(1907) into Block(1912) at 0", "Insert ExpressionStatement(1911) into Block(1912) at 1", "Update StringLiteral: \" should not be used for server-side operations\"(2007) to \" can not being serialized to a single backing buffer. Due to \"", "Insert SimpleName: ioe(1929) into InfixExpression: +(1930) at 2", "Insert ThisExpression(1888) into FieldAccess(1890) at 0", "Insert SimpleName: bytes(1889) into FieldAccess(1890) at 1", "Insert SimpleName: byteStream(1891) into MethodInvocation(1893) at 0", "Insert SimpleName: toByteArray(1892) into MethodInvocation(1893) at 1", "Insert MethodInvocation(1906) into ExpressionStatement(1907) at 0", "Insert Assignment: =(1910) into ExpressionStatement(1911) at 0", "Insert SimpleName: out(1904) into MethodInvocation(1906) at 0", "Insert SimpleName: close(1905) into MethodInvocation(1906) at 1", "Insert SimpleName: out(1908) into Assignment: =(1910) at 0", "Insert NullLiteral(1909) into Assignment: =(1910) at 1", "Delete SimpleName: Override(540)", "Delete MarkerAnnotation(541)", "Delete Modifier: public(542)", "Delete PrimitiveType: int(543)", "Delete SimpleName: getQualifierLength(544)", "Delete PrimitiveType: int(545)", "Delete SimpleName: rlength(546)", "Delete SingleVariableDeclaration(547)", "Delete PrimitiveType: int(548)", "Delete SimpleName: flength(549)", "Delete SingleVariableDeclaration(550)", "Delete ThisExpression(551)", "Delete SimpleName: getQualifierLength(552)", "Delete MethodInvocation(553)", "Delete ReturnStatement(554)", "Delete Block(555)", "Delete MethodDeclaration(556)", "Delete PrimitiveType: int(560)", "Delete PrimitiveType: int(562)", "Delete SimpleName: rlength(563)", "Delete SingleVariableDeclaration(564)", "Delete PrimitiveType: int(565)", "Delete SimpleName: foffset(566)", "Delete SingleVariableDeclaration(567)", "Delete ThisExpression(568)", "Delete MethodInvocation(570)", "Delete ThisExpression(571)", "Delete SimpleName: getQualifierLength(572)", "Delete MethodInvocation(573)", "Delete InfixExpression: +(574)", "Delete PrimitiveType: int(581)", "Delete SimpleName: qualifier(583)", "Delete MethodInvocation(585)", "Delete SimpleName: family(586)", "Delete SimpleName: getLength(587)", "Delete MethodInvocation(588)", "Delete InfixExpression: +(589)", "Delete PrimitiveType: boolean(1038)", "Delete SimpleName: matchingRow(1044)", "Delete SimpleName: other(1045)", "Delete SimpleName: getBuffer(1046)", "Delete MethodInvocation(1047)", "Delete MethodInvocation(1054)", "Delete SimpleName: matchingQualifier(1077)", "Delete SimpleName: column(1078)", "Delete SimpleName: family(1079)", "Delete MethodInvocation(1081)", "Delete QualifiedName: column.length(1082)", "Delete SimpleName: family(1083)", "Delete SimpleName: getLength(1084)", "Delete MethodInvocation(1085)", "Delete InfixExpression: -(1086)", "Delete MethodInvocation(1087)", "Delete PrimitiveType: boolean(1061)", "Delete SimpleName: matchingColumnNoDelimiter(1062)", "Delete SimpleName: column(1066)", "Delete SingleVariableDeclaration(1067)", "Delete SimpleName: matchingFamily(1068)", "Delete SimpleName: column(1069)", "Delete NumberLiteral: 0(1070)", "Delete MethodInvocation(1076)", "Delete Block(1089)", "Delete IfStatement(1090)", "Delete BooleanLiteral: false(1091)", "Delete ReturnStatement(1092)", "Delete Block(1093)", "Delete NullLiteral(1129)", "Delete InfixExpression: !=(1130)", "Delete SimpleName: row(1131)", "Delete MethodInvocation(1133)", "Delete NumberLiteral: 0(1134)", "Delete InfixExpression: >(1135)", "Delete InfixExpression: &&(1136)", "Delete ParenthesizedExpression(1137)", "Delete SimpleName: isEmptyColumn(1138)", "Delete MethodInvocation(1139)", "Delete PrefixExpression: !(1140)", "Delete InfixExpression: &&(1141)", "Delete SimpleName: Override(748)", "Delete MarkerAnnotation(749)", "Delete SimpleName: Override(1145)", "Delete MarkerAnnotation(1146)", "Delete NullLiteral(1153)", "Delete InfixExpression: !=(1154)", "Delete ThisExpression(1155)", "Delete SimpleName: qualifier(1156)", "Delete FieldAccess(1157)", "Delete MethodInvocation(1159)", "Delete NumberLiteral: 0(1160)", "Delete InfixExpression: >(1161)", "Delete InfixExpression: &&(1162)", "Delete SimpleName: Override(1166)", "Delete MarkerAnnotation(1167)", "Delete SimpleName: Override(1782)", "Delete MarkerAnnotation(1783)", "Delete PrimitiveType: void(1785)", "Delete SimpleName: readFields(1786)", "Delete PrimitiveType: int(1787)", "Delete SimpleName: length(1788)", "Delete SingleVariableDeclaration(1789)", "Delete SimpleType: DataInput(1791)", "Delete SimpleName: in(1792)", "Delete SingleVariableDeclaration(1793)", "Delete SimpleName: IOException(1794)", "Delete SimpleType: IOException(1795)", "Delete SimpleName: ClientKeyValue(1798)", "Delete SimpleType: ClientKeyValue(1799)", "Delete TypeLiteral(1800)", "Delete SimpleName: getSimpleName(1801)", "Delete MethodInvocation(1802)", "Delete StringLiteral: \" should not be used for server-side operations\"(1803)", "Delete InfixExpression: +(1804)", "Delete ClassInstanceCreation(1805)", "Delete ThrowStatement(1806)", "Delete Block(1807)", "Delete MethodDeclaration(1808)", "Delete SimpleName: Override(1809)", "Delete MarkerAnnotation(1810)", "Delete Modifier: public(1811)", "Delete PrimitiveType: void(1812)", "Delete SimpleName: readFields(1813)", "Delete SimpleType: DataInput(1815)", "Delete SimpleName: in(1816)", "Delete SingleVariableDeclaration(1817)", "Delete SimpleName: ClientKeyValue(1822)", "Delete SimpleType: ClientKeyValue(1823)", "Delete TypeLiteral(1824)", "Delete SimpleName: getSimpleName(1825)", "Delete MethodInvocation(1826)", "Delete StringLiteral: \" should not be used for server-side operations\"(1827)", "Delete InfixExpression: +(1828)", "Delete ClassInstanceCreation(1829)", "Delete ThrowStatement(1830)", "Delete Block(1831)", "Delete MethodDeclaration(1832)", "Delete SimpleName: Override(1842)", "Delete MarkerAnnotation(1843)", "Delete Modifier: public(1844)", "Delete PrimitiveType: int(1845)", "Delete SimpleName: getFamilyOffset(1846)", "Delete PrimitiveType: int(1847)", "Delete SimpleName: rlength(1848)", "Delete SingleVariableDeclaration(1849)", "Delete NumberLiteral: 0(1850)", "Delete ReturnStatement(1851)", "Delete Block(1852)", "Delete MethodDeclaration(1853)", "Delete Modifier: public(1856)", "Delete PrimitiveType: int(1857)", "Delete SimpleName: getQualifierOffset(1858)", "Delete PrimitiveType: int(1859)", "Delete SimpleName: foffset(1860)", "Delete SingleVariableDeclaration(1861)", "Delete Block(1864)", "Delete MethodDeclaration(1865)", "Delete SimpleName: Override(1875)", "Delete MarkerAnnotation(1876)", "Delete Modifier: public(1877)", "Delete PrimitiveType: int(1878)", "Delete SimpleName: getTimestampOffset(1879)", "Delete PrimitiveType: int(1880)", "Delete SimpleName: keylength(1881)", "Delete SingleVariableDeclaration(1882)", "Delete NumberLiteral: 0(1883)", "Delete ReturnStatement(1884)", "Delete Block(1885)", "Delete MethodDeclaration(1886)", "Delete NumberLiteral: 0(1862)", "Delete SimpleName: Override(1994)", "Delete MarkerAnnotation(1995)", "Delete Modifier: public(1996)", "Delete SimpleName: SplitKeyValue(1997)", "Delete SimpleType: SplitKeyValue(1998)", "Delete SimpleName: split(1999)", "Delete MethodDeclaration(2012)", "Delete SimpleName: Override(2013)", "Delete MarkerAnnotation(2014)", "Delete Modifier: public(2015)", "Delete SimpleName: getBuffer(2019)", "Delete SimpleName: UnsupportedOperationException(2020)", "Delete SimpleType: UnsupportedOperationException(2021)", "Delete SimpleName: ClientKeyValue(2022)", "Delete SimpleType: ClientKeyValue(2023)", "Delete TypeLiteral(2024)", "Delete SimpleName: getSimpleName(2025)", "Delete MethodInvocation(2026)", "Delete StringLiteral: \" does not support a single backing buffer.\"(2027)", "Delete InfixExpression: +(2028)", "Delete ClassInstanceCreation(2029)", "Delete ThrowStatement(2030)", "Delete Block(2031)", "Delete MethodDeclaration(2032)"]}}, {"DeleteCompiler_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 9"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell"]}, {"root": "UPDATE from getBuffer to getValueArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getValueArray"]}]}}, {"DeleteCompiler_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(1652) at 9", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(18) into ImportDeclaration(19) at 0", "Update SimpleType: KeyValue(1541) to Cell", "Update SimpleName: KeyValue(1540) to Cell", "Update SimpleName: getBuffer(1555) to getValueArray"]}}, {"UpsertCompiler_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell"]}, {"root": "UPDATE from getBuffer to getValueArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getValueArray"]}]}}, {"UpsertCompiler_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(4083) at 10", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(20) into ImportDeclaration(21) at 0", "Update SimpleType: KeyValue(2743) to Cell", "Update SimpleName: KeyValue(2742) to Cell", "Update SimpleName: getBuffer(2757) to getValueArray"]}}, {"BaseRegionScanner_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 6", "MOV Block to MethodDeclaration at 7", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 6", "MOV Block to MethodDeclaration at 7"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 7", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "UPDATE from List to Cell", "operations": ["UPD SimpleName: List from List to Cell", "UPD SimpleType: List from List to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "MOVE from ParameterizedType: List<KeyValue>", "operations": ["MOV SimpleType: List to ParameterizedType: List<KeyValue> at 0"]}, {"root": "MOVE from ParameterizedType: List<KeyValue>", "operations": ["MOV SimpleType: List to ParameterizedType: List<KeyValue> at 0"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: metric", "DEL SingleVariableDeclaration", "DEL SimpleName: String", "DEL SimpleType: String"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: String", "DEL SimpleType: String", "DEL SimpleName: metric"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL PrimitiveType: boolean", "DEL SimpleName: result", "DEL ParameterizedType: List<KeyValue>", "DEL PrimitiveType: int", "DEL SimpleName: limit", "DEL SingleVariableDeclaration", "DEL SimpleType: KeyValue", "DEL SingleVariableDeclaration", "DEL SimpleName: next", "DEL MethodDeclaration", "DEL SimpleName: KeyValue"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: metric", "DEL SingleVariableDeclaration"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: result", "DEL Block", "DEL SimpleName: next", "DEL SimpleName: metric", "DEL ReturnStatement", "DEL MethodInvocation"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL MarkerAnnotation", "DEL SimpleName: Override"]}, {"root": "DEL SimpleType: KeyValue", "operations": ["DEL SimpleType: KeyValue", "DEL SimpleName: KeyValue"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: String", "DEL SimpleName: metric", "DEL SimpleType: String", "DEL SingleVariableDeclaration"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleType: IOException", "DEL SimpleName: IOException"]}, {"root": "DEL SimpleName: metric", "operations": ["DEL SimpleName: metric"]}]}}, {"BaseRegionScanner_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(144) at 3", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(6) into ImportDeclaration(7) at 0", "Move SimpleType: IOException(93) into MethodDeclaration(70) at 6", "Move Block(98) into MethodDeclaration(70) at 7", "Move MarkerAnnotation(78) into MethodDeclaration(118) at 0", "Move SimpleType: IOException(70) into MethodDeclaration(118) at 6", "Move Block(75) into MethodDeclaration(118) at 7", "Move MarkerAnnotation(129) into MethodDeclaration(142) at 0", "Move SimpleType: IOException(145) into MethodDeclaration(142) at 7", "Update ParameterizedType: List<KeyValue>(35) to List<Cell>", "Update ParameterizedType: List<KeyValue>(59) to List<Cell>", "Update ParameterizedType: List<KeyValue>(137) to List<Cell>", "Update ParameterizedType: List<KeyValue>(162) to List<Cell>", "Update SimpleType: KeyValue(34) to Cell", "Update SimpleType: KeyValue(58) to Cell", "Move SimpleType: List(83) into ParameterizedType: List<Cell>(108) at 0", "Update SimpleType: KeyValue(136) to Cell", "Move SimpleType: List(134) into ParameterizedType: List<Cell>(128) at 0", "Update SimpleType: List(159) to Cell", "Update SimpleName: KeyValue(33) to Cell", "Update SimpleName: KeyValue(57) to Cell", "Update SimpleName: KeyValue(135) to Cell", "Update SimpleName: List(158) to Cell", "Delete SimpleName: String(38)", "Delete SimpleType: String(39)", "Delete SimpleName: metric(40)", "Delete SingleVariableDeclaration(41)", "Delete SimpleName: String(65)", "Delete SimpleType: String(66)", "Delete SimpleName: metric(67)", "Delete SingleVariableDeclaration(68)", "Delete Modifier: public(79)", "Delete PrimitiveType: boolean(80)", "Delete SimpleName: next(81)", "Delete SimpleName: KeyValue(84)", "Delete SimpleType: KeyValue(85)", "Delete ParameterizedType: List<KeyValue>(86)", "Delete SimpleName: result(87)", "Delete SingleVariableDeclaration(88)", "Delete PrimitiveType: int(89)", "Delete SimpleName: limit(90)", "Delete SingleVariableDeclaration(91)", "Delete MethodDeclaration(99)", "Delete SimpleName: String(140)", "Delete SimpleType: String(141)", "Delete SimpleName: metric(142)", "Delete SingleVariableDeclaration(143)", "Delete SimpleName: next(146)", "Delete SimpleName: result(147)", "Delete SimpleName: metric(148)", "Delete MethodInvocation(149)", "Delete ReturnStatement(150)", "Delete Block(151)", "Delete SimpleName: Override(153)", "Delete MarkerAnnotation(154)", "Delete SimpleName: KeyValue(160)", "Delete SimpleType: KeyValue(161)", "Delete SimpleName: String(168)", "Delete SimpleType: String(169)", "Delete SimpleName: metric(170)", "Delete SingleVariableDeclaration(171)", "Delete SimpleName: IOException(172)", "Delete SimpleType: IOException(173)", "Delete SimpleName: metric(177)"]}}, {"GroupedAggregateRegionObserver_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 18"]}, {"root": "INS ImportDeclaration to CompilationUnit at 44", "operations": ["INS QualifiedName: org.apache.phoenix.memory.GlobalMemoryManager to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 44"]}, {"root": "INS MethodDeclaration to AnonymousClassDeclaration at 4", "operations": ["INS SimpleName: getMaxResultSize to MethodInvocation at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: s to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS PrimitiveType: long to MethodDeclaration at 2", "INS SimpleName: getMaxResultSize to MethodDeclaration at 3", "INS MethodInvocation to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to AnonymousClassDeclaration at 4", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getMaxResultSize to MethodDeclaration at 3", "INS MethodDeclaration to AnonymousClassDeclaration at 4", "INS PrimitiveType: long to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: getMaxResultSize to MethodInvocation at 1", "INS SimpleName: s to MethodInvocation at 0"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "UPDATE from ArrayList<KeyValue> to ArrayList<Cell>", "operations": ["UPD ParameterizedType: ArrayList<KeyValue> from ArrayList<KeyValue> to ArrayList<Cell>", "UPD ParameterizedType: ArrayList<KeyValue> from ArrayList<KeyValue> to ArrayList<Cell>"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: MultiVersionConsistencyControl", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getMvccReadPoint", "DEL SimpleName: s", "DEL SimpleName: setThreadReadPoint"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: s", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getMvccReadPoint", "DEL SimpleName: MultiVersionConsistencyControl", "DEL SimpleName: setThreadReadPoint"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}]}}, {"GroupedAggregateRegionObserver_diff": {"operations": ["Insert ImportDeclaration(37) into CompilationUnit(1850) at 18", "Insert ImportDeclaration(89) into CompilationUnit(1850) at 44", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(36) into ImportDeclaration(37) at 0", "Insert QualifiedName: org.apache.phoenix.memory.GlobalMemoryManager(88) into ImportDeclaration(89) at 0", "Insert MethodDeclaration(1843) into AnonymousClassDeclaration(1844) at 4", "Insert MethodDeclaration(1113) into AnonymousClassDeclaration(1114) at 4", "Insert MarkerAnnotation(1834) into MethodDeclaration(1843) at 0", "Insert Modifier: public(1835) into MethodDeclaration(1843) at 1", "Insert PrimitiveType: long(1836) into MethodDeclaration(1843) at 2", "Insert SimpleName: getMaxResultSize(1837) into MethodDeclaration(1843) at 3", "Insert Block(1842) into MethodDeclaration(1843) at 4", "Insert MarkerAnnotation(1104) into MethodDeclaration(1113) at 0", "Insert Modifier: public(1105) into MethodDeclaration(1113) at 1", "Insert PrimitiveType: long(1106) into MethodDeclaration(1113) at 2", "Insert SimpleName: getMaxResultSize(1107) into MethodDeclaration(1113) at 3", "Insert Block(1112) into MethodDeclaration(1113) at 4", "Update ParameterizedType: List<KeyValue>(1571) to List<Cell>", "Insert SimpleName: Override(1833) into MarkerAnnotation(1834) at 0", "Insert ReturnStatement(1841) into Block(1842) at 0", "Update ParameterizedType: List<KeyValue>(1067) to List<Cell>", "Insert SimpleName: Override(1103) into MarkerAnnotation(1104) at 0", "Insert ReturnStatement(1111) into Block(1112) at 0", "Update SimpleType: KeyValue(1570) to Cell", "Insert MethodInvocation(1840) into ReturnStatement(1841) at 0", "Update SimpleType: KeyValue(1066) to Cell", "Insert MethodInvocation(1110) into ReturnStatement(1111) at 0", "Update ParameterizedType: List<KeyValue>(1379) to List<Cell>", "Update SimpleName: KeyValue(1569) to Cell", "Insert SimpleName: s(1838) into MethodInvocation(1840) at 0", "Insert SimpleName: getMaxResultSize(1839) into MethodInvocation(1840) at 1", "Update SimpleName: KeyValue(1065) to Cell", "Insert SimpleName: s(1108) into MethodInvocation(1110) at 0", "Insert SimpleName: getMaxResultSize(1109) into MethodInvocation(1110) at 1", "Update SimpleType: KeyValue(1378) to Cell", "Update SimpleName: KeyValue(1377) to Cell", "Update ParameterizedType: ArrayList<KeyValue>(1385) to ArrayList<Cell>", "Update SimpleType: KeyValue(1384) to Cell", "Update ParameterizedType: List<KeyValue>(1634) to List<Cell>", "Update SimpleName: KeyValue(1383) to Cell", "Update SimpleType: KeyValue(1633) to Cell", "Update SimpleName: KeyValue(1632) to Cell", "Update ParameterizedType: ArrayList<KeyValue>(1640) to ArrayList<Cell>", "Update SimpleType: KeyValue(1639) to Cell", "Update SimpleName: KeyValue(1638) to Cell", "Delete SimpleName: MultiVersionConsistencyControl(1364)", "Delete SimpleName: setThreadReadPoint(1365)", "Delete SimpleName: s(1366)", "Delete SimpleName: getMvccReadPoint(1367)", "Delete MethodInvocation(1368)", "Delete MethodInvocation(1369)", "Delete ExpressionStatement(1370)", "Delete NullLiteral(1393)", "Delete SimpleName: MultiVersionConsistencyControl(1619)", "Delete SimpleName: setThreadReadPoint(1620)", "Delete SimpleName: s(1621)", "Delete SimpleName: getMvccReadPoint(1622)", "Delete MethodInvocation(1623)", "Delete MethodInvocation(1624)", "Delete ExpressionStatement(1625)", "Delete NullLiteral(1648)"]}}, {"HashJoinRegionScanner_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 8", "MOV ImportDeclaration to CompilationUnit at 10"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 26"]}, {"root": "UPDATE from org.apache.hadoop.hbase.KeyValue to org.apache.hadoop.hbase.Cell", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.KeyValue from org.apache.hadoop.hbase.KeyValue to org.apache.hadoop.hbase.Cell"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 6"]}, {"root": "UPDATE from boolean to long", "operations": ["UPD PrimitiveType: boolean from boolean to long"]}, {"root": "INS SimpleName: getMaxResultSize to MethodDeclaration at 3", "operations": ["INS SimpleName: getMaxResultSize to MethodDeclaration at 3"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS Block to MethodDeclaration at 4", "INS MethodInvocation to ReturnStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: scanner to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: List from List to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: List from List to Cell"]}, {"root": "MOVE from ParameterizedType: List<KeyValue>", "operations": ["MOV SimpleType: List to ParameterizedType: List<KeyValue> at 0"]}, {"root": "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "operations": ["INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: result to MethodInvocation at 2", "INS SimpleName: create to MethodInvocation at 1", "INS SimpleName: Result to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "UPDATE from result to getMaxResultSize", "operations": ["UPD SimpleName: result from result to getMaxResultSize"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: result to MethodInvocation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ResultTuple to ClassInstanceCreation at 0"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: Result", "DEL SimpleType: Result", "DEL SimpleName: result", "DEL ClassInstanceCreation"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: String", "DEL SimpleName: metric", "DEL SimpleType: String"]}, {"root": "DEL SimpleName: metric", "operations": ["DEL SimpleName: metric"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleType: String", "DEL SimpleName: metric", "DEL SimpleName: String"]}, {"root": "DEL SimpleName: metric", "operations": ["DEL SimpleName: metric"]}, {"root": "DEL SimpleType: KeyValue", "operations": ["DEL SimpleName: KeyValue", "DEL SimpleType: KeyValue"]}, {"root": "DEL SimpleName: next", "operations": ["DEL SimpleName: next"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: KeyValue", "DEL SingleVariableDeclaration", "DEL SimpleType: KeyValue", "DEL SimpleName: result", "DEL ParameterizedType: List<KeyValue>"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: metric", "DEL SimpleName: String", "DEL SimpleType: String", "DEL SingleVariableDeclaration"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: hasMore", "DEL SimpleName: result", "DEL ReturnStatement", "DEL WhileStatement", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: result", "DEL SimpleName: clear", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: nextInQueue", "DEL SimpleName: shouldAdvance", "DEL SimpleName: result", "DEL SimpleName: metric", "DEL ExpressionStatement", "DEL SimpleName: next", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: scanner", "DEL SimpleName: processResults", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Assignment: =", "DEL BooleanLiteral: false"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ParameterizedType: List<KeyValue>", "DEL SimpleName: next", "DEL Assignment: =", "DEL MethodDeclaration", "DEL SimpleName: result", "DEL SimpleType: String", "DEL SimpleName: nextInQueue", "DEL SingleVariableDeclaration", "DEL SimpleName: KeyValue", "DEL BooleanLiteral: true", "DEL SimpleName: limit", "DEL SimpleName: shouldAdvance", "DEL WhileStatement", "DEL SimpleName: List", "DEL SimpleName: next", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: KeyValue", "DEL SimpleName: result", "DEL SimpleName: result", "DEL MethodInvocation", "DEL SimpleName: limit", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleType: IOException", "DEL PrimitiveType: int", "DEL SimpleName: IOException", "DEL SimpleName: clear", "DEL SimpleName: result", "DEL SimpleType: List", "DEL SimpleName: Override", "DEL SimpleName: metric", "DEL MarkerAnnotation", "DEL Modifier: public", "DEL MethodInvocation", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: scanner", "DEL SimpleName: metric", "DEL SimpleName: processResults", "DEL SimpleName: hasMore", "DEL ExpressionStatement", "DEL SimpleName: result", "DEL SingleVariableDeclaration", "DEL PrimitiveType: boolean", "DEL SimpleName: String"]}]}}, {"HashJoinRegionScanner_diff": {"operations": ["Move ImportDeclaration(13) into CompilationUnit(1159) at 8", "Move ImportDeclaration(27) into CompilationUnit(1159) at 10", "Move MethodDeclaration(1153) into TypeDeclaration: class(1158) at 26", "Update QualifiedName: org.apache.hadoop.hbase.KeyValue(14) to org.apache.hadoop.hbase.Cell", "Move SimpleType: IOException(1008) into MethodDeclaration(944) at 4", "Move SimpleType: IOException(1126) into MethodDeclaration(984) at 5", "Move SimpleType: IOException(960) into MethodDeclaration(1028) at 6", "Update PrimitiveType: boolean(1112) to long", "Insert SimpleName: getMaxResultSize(1149) into MethodDeclaration(1157) at 3", "Insert Block(1156) into MethodDeclaration(1157) at 4", "Update ParameterizedType: List<KeyValue>(381) to List<Cell>", "Update ParameterizedType: List<KeyValue>(857) to List<Cell>", "Update ParameterizedType: List<KeyValue>(952) to List<Cell>", "Update ParameterizedType: List<KeyValue>(997) to List<Cell>", "Update ParameterizedType: List<KeyValue>(1078) to List<Cell>", "Update ParameterizedType: List<KeyValue>(1163) to List<Cell>", "Insert ReturnStatement(1155) into Block(1156) at 0", "Update SimpleType: KeyValue(380) to Cell", "Update SimpleType: KeyValue(856) to Cell", "Update SimpleType: KeyValue(951) to Cell", "Update SimpleType: KeyValue(996) to Cell", "Update SimpleType: KeyValue(1077) to Cell", "Move SimpleType: List(1115) into ParameterizedType: List<Cell>(1110) at 0", "Update SimpleType: List(1160) to Cell", "Insert MethodInvocation(1154) into ReturnStatement(1155) at 0", "Update SimpleName: KeyValue(379) to Cell", "Insert ClassInstanceCreation(403) into VariableDeclarationFragment(404) at 1", "Update SimpleName: KeyValue(855) to Cell", "Update SimpleName: KeyValue(950) to Cell", "Update SimpleName: KeyValue(995) to Cell", "Update SimpleName: KeyValue(1076) to Cell", "Update SimpleName: List(1159) to Cell", "Insert FieldAccess(1152) into MethodInvocation(1154) at 0", "Update SimpleName: result(1132) to getMaxResultSize", "Move SimpleName: result(1132) into MethodInvocation(1154) at 1", "Move SimpleType: ResultTuple(398) into ClassInstanceCreation(403) at 0", "Insert MethodInvocation(402) into ClassInstanceCreation(403) at 1", "Insert ThisExpression(1150) into FieldAccess(1152) at 0", "Insert SimpleName: scanner(1151) into FieldAccess(1152) at 1", "Insert SimpleName: Result(399) into MethodInvocation(402) at 0", "Insert SimpleName: create(400) into MethodInvocation(402) at 1", "Insert SimpleName: result(401) into MethodInvocation(402) at 2", "Delete SimpleName: Result(399)", "Delete SimpleType: Result(400)", "Delete SimpleName: result(401)", "Delete ClassInstanceCreation(402)", "Delete ClassInstanceCreation(403)", "Delete SimpleName: String(955)", "Delete SimpleType: String(956)", "Delete SimpleName: metric(957)", "Delete SingleVariableDeclaration(958)", "Delete SimpleName: metric(967)", "Delete SimpleName: String(1003)", "Delete SimpleType: String(1004)", "Delete SimpleName: metric(1005)", "Delete SingleVariableDeclaration(1006)", "Delete SimpleName: metric(1016)", "Delete SimpleName: KeyValue(1161)", "Delete SimpleType: KeyValue(1162)", "Delete SimpleName: next(1113)", "Delete SimpleName: KeyValue(1116)", "Delete SimpleType: KeyValue(1117)", "Delete ParameterizedType: List<KeyValue>(1118)", "Delete SimpleName: result(1119)", "Delete SingleVariableDeclaration(1120)", "Delete SimpleName: String(1121)", "Delete SimpleType: String(1122)", "Delete SimpleName: metric(1123)", "Delete SingleVariableDeclaration(1124)", "Delete SimpleName: shouldAdvance(1127)", "Delete MethodInvocation(1128)", "Delete SimpleName: hasMore(1129)", "Delete SimpleName: scanner(1130)", "Delete SimpleName: next(1131)", "Delete SimpleName: metric(1133)", "Delete MethodInvocation(1134)", "Delete Assignment: =(1135)", "Delete ExpressionStatement(1136)", "Delete SimpleName: processResults(1137)", "Delete SimpleName: result(1138)", "Delete BooleanLiteral: false(1139)", "Delete MethodInvocation(1140)", "Delete ExpressionStatement(1141)", "Delete SimpleName: result(1142)", "Delete SimpleName: clear(1143)", "Delete MethodInvocation(1144)", "Delete ExpressionStatement(1145)", "Delete Block(1146)", "Delete WhileStatement(1147)", "Delete SimpleName: nextInQueue(1148)", "Delete SimpleName: result(1149)", "Delete MethodInvocation(1150)", "Delete ReturnStatement(1151)", "Delete Block(1152)", "Delete SimpleName: Override(1198)", "Delete MarkerAnnotation(1199)", "Delete Modifier: public(1200)", "Delete PrimitiveType: boolean(1201)", "Delete SimpleName: next(1202)", "Delete SimpleName: List(1203)", "Delete SimpleType: List(1204)", "Delete SimpleName: KeyValue(1205)", "Delete SimpleType: KeyValue(1206)", "Delete ParameterizedType: List<KeyValue>(1207)", "Delete SimpleName: result(1208)", "Delete SingleVariableDeclaration(1209)", "Delete PrimitiveType: int(1210)", "Delete SimpleName: limit(1211)", "Delete SingleVariableDeclaration(1212)", "Delete SimpleName: String(1213)", "Delete SimpleType: String(1214)", "Delete SimpleName: metric(1215)", "Delete SingleVariableDeclaration(1216)", "Delete SimpleName: IOException(1217)", "Delete SimpleType: IOException(1218)", "Delete SimpleName: shouldAdvance(1219)", "Delete MethodInvocation(1220)", "Delete SimpleName: hasMore(1221)", "Delete SimpleName: scanner(1222)", "Delete SimpleName: next(1223)", "Delete SimpleName: result(1224)", "Delete SimpleName: limit(1225)", "Delete SimpleName: metric(1226)", "Delete MethodInvocation(1227)", "Delete Assignment: =(1228)", "Delete ExpressionStatement(1229)", "Delete SimpleName: processResults(1230)", "Delete SimpleName: result(1231)", "Delete BooleanLiteral: true(1232)", "Delete MethodInvocation(1233)", "Delete ExpressionStatement(1234)", "Delete SimpleName: result(1235)", "Delete SimpleName: clear(1236)", "Delete MethodInvocation(1237)", "Delete ExpressionStatement(1238)", "Delete Block(1239)", "Delete WhileStatement(1240)", "Delete SimpleName: nextInQueue(1241)", "Delete SimpleName: result(1242)", "Delete MethodInvocation(1243)", "Delete ReturnStatement(1244)", "Delete Block(1245)", "Delete MethodDeclaration(1246)"]}}, {"MetaDataEndpointImpl_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 43", "MOV ImportDeclaration to CompilationUnit at 45"]}, {"root": "INS ImportDeclaration to CompilationUnit at 41", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 41"]}, {"root": "INS ImportDeclaration to CompilationUnit at 42", "operations": ["INS ImportDeclaration to CompilationUnit at 42", "INS QualifiedName: org.apache.hadoop.hbase.Coprocessor to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 52", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.coprocessor.CoprocessorException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 52"]}, {"root": "INS ImportDeclaration to CompilationUnit at 63", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.regionserver.HRegion.RowLock to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 63"]}, {"root": "INS ImportDeclaration to CompilationUnit at 68", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 68"]}, {"root": "INS ImportDeclaration to CompilationUnit at 69", "operations": ["INS ImportDeclaration to CompilationUnit at 69", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.AddColumnRequest to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 70", "operations": ["INS ImportDeclaration to CompilationUnit at 70", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.ClearCacheRequest to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 71", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.ClearCacheResponse to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 71"]}, {"root": "INS ImportDeclaration to CompilationUnit at 72", "operations": ["INS ImportDeclaration to CompilationUnit at 72", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.CreateTableRequest to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 73", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.DropColumnRequest to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 73"]}, {"root": "INS ImportDeclaration to CompilationUnit at 74", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.DropTableRequest to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 74"]}, {"root": "INS ImportDeclaration to CompilationUnit at 75", "operations": ["INS ImportDeclaration to CompilationUnit at 75", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.GetTableRequest to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 76", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.GetVersionRequest to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 76"]}, {"root": "INS ImportDeclaration to CompilationUnit at 77", "operations": ["INS ImportDeclaration to CompilationUnit at 77", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.GetVersionResponse to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 78", "operations": ["INS ImportDeclaration to CompilationUnit at 78", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataResponse to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 79", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.UpdateIndexStateRequest to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 79"]}, {"root": "INS ImportDeclaration to CompilationUnit at 81", "operations": ["INS ImportDeclaration to CompilationUnit at 81", "INS QualifiedName: org.apache.phoenix.protobuf.ProtobufUtil to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 109", "operations": ["INS ImportDeclaration to CompilationUnit at 109", "INS QualifiedName: com.google.protobuf.RpcCallback to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 110", "operations": ["INS ImportDeclaration to CompilationUnit at 110", "INS QualifiedName: com.google.protobuf.RpcController to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 111", "operations": ["INS ImportDeclaration to CompilationUnit at 111", "INS QualifiedName: com.google.protobuf.Service to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV SimpleType: BaseEndpointCoprocessor to TypeDeclaration: class at 5", "MOV MethodDeclaration to TypeDeclaration: class at 55", "MOV MethodDeclaration to TypeDeclaration: class at 53"]}, {"root": "UPDATE from java.io.DataInput to org.apache.hadoop.hbase.CoprocessorEnvironment", "operations": ["UPD QualifiedName: java.io.DataInput from java.io.DataInput to org.apache.hadoop.hbase.CoprocessorEnvironment"]}, {"root": "UPDATE from java.io.DataOutput to org.apache.hadoop.hbase.KeyValue.Type", "operations": ["UPD QualifiedName: java.io.DataOutput from java.io.DataOutput to org.apache.hadoop.hbase.KeyValue.Type"]}, {"root": "UPDATE from org.apache.hadoop.hbase.coprocessor.BaseEndpointCoprocessor to org.apache.hadoop.hbase.coprocessor.CoprocessorService", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.coprocessor.BaseEndpointCoprocessor from org.apache.hadoop.hbase.coprocessor.BaseEndpointCoprocessor to org.apache.hadoop.hbase.coprocessor.CoprocessorService"]}, {"root": "INS SimpleType: CoprocessorService to TypeDeclaration: class at 4", "operations": ["INS SimpleName: CoprocessorService to SimpleType: CoprocessorService at 0", "INS SimpleType: CoprocessorService to TypeDeclaration: class at 4"]}, {"root": "UPDATE from BaseEndpointCoprocessor to Coprocessor", "operations": ["UPD SimpleName: BaseEndpointCoprocessor from BaseEndpointCoprocessor to Coprocessor", "UPD SimpleType: BaseEndpointCoprocessor from BaseEndpointCoprocessor to Coprocessor"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 54", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: env to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 54"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 57", "operations": ["INS Block to MethodDeclaration at 6", "INS SimpleName: env to SingleVariableDeclaration at 1", "INS SimpleName: stop to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 57", "INS SimpleType: CoprocessorEnvironment to SingleVariableDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: CoprocessorEnvironment to SimpleType: CoprocessorEnvironment at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 58", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 58", "INS ThisExpression to ReturnStatement at 0", "INS SimpleType: Service to MethodDeclaration at 2", "INS SimpleName: getService to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS SimpleName: Service to SimpleType: Service at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 59", "operations": ["INS SimpleName: doGetTable to MethodInvocation at 0", "INS SimpleName: key to MethodInvocation at 1", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS SimpleName: request to MethodInvocation at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: request to MethodInvocation at 0", "INS SimpleName: RpcCallback to SimpleType: RpcCallback at 0", "INS SimpleName: toByteArray to MethodInvocation at 1", "INS SimpleType: MetaDataResponse.Builder to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: run to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: RpcController to SimpleType: RpcController at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: Throwable to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: setReturnCode to MethodInvocation at 1", "INS SimpleName: ProtobufUtil to MethodInvocation at 0", "INS SimpleName: result to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getClientTimestamp to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS SimpleName: logger to MethodInvocation at 0", "INS SimpleName: getSchemaName to MethodInvocation at 1", "INS SimpleName: SchemaUtil to MethodInvocation at 0", "INS SimpleName: tableTimeStamp to VariableDeclarationFragment at 0", "INS SimpleName: getTableTimestamp to MethodInvocation at 1", "INS SimpleName: tableName to MethodInvocation at 3", "INS Block to TryStatement at 0", "INS SimpleName: t to SingleVariableDeclaration at 1", "INS SimpleName: PTableImpl to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: getTableName to MethodInvocation at 1", "INS SimpleType: GetTableRequest to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleType: RpcCallback to ParameterizedType: RpcCallback<MetaDataResponse> at 0", "INS ExpressionStatement to Block at 0", "INS SimpleType: MetaDataResponse to ParameterizedType: RpcCallback<MetaDataResponse> at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: run to MethodInvocation at 1", "INS StringLiteral: \"getTable failed\" to MethodInvocation at 2", "INS SimpleName: error to MethodInvocation at 1", "INS SimpleName: setControllerException to MethodInvocation at 1", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Dimension to ArrayType: byte[] at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ExpressionStatement to Block at 7", "INS QualifiedName: MetaDataProtos.MutationCode.TABLE_NOT_FOUND to MethodInvocation at 2", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: request to MethodInvocation at 0", "INS ReturnStatement to Block at 10", "INS SimpleName: controller to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: result to InfixExpression: != at 0", "INS SimpleName: schemaName to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS IfStatement to Block at 8", "INS Block to IfStatement at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: setMutationTime to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 59", "INS SimpleName: schemaName to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Throwable to SimpleType: Throwable at 0", "INS SimpleName: t to MethodInvocation at 3", "INS SimpleName: tenantId to VariableDeclarationFragment at 0", "INS SimpleName: GetTableRequest to SimpleType: GetTableRequest at 0", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: request to SingleVariableDeclaration at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: build to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: setMutationTime to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: createIOException to MethodInvocation at 1", "INS SimpleName: getTable to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 7", "INS SimpleName: controller to SingleVariableDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: table to VariableDeclarationFragment at 0", "INS SimpleName: ServerUtil to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS TryStatement to Block at 6", "INS SimpleName: setReturnCode to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: done to SingleVariableDeclaration at 1", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: getTenantId to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: currentTime to MethodInvocation at 2", "INS SimpleName: toProto to MethodInvocation at 1", "INS SimpleType: RpcController to SingleVariableDeclaration at 0", "INS SimpleName: done to MethodInvocation at 0", "INS ParameterizedType: RpcCallback<MetaDataResponse> to SingleVariableDeclaration at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: getTableName to MethodInvocation at 1", "INS SimpleName: MetaDataMutationResult to MethodInvocation at 0", "INS ReturnStatement to Block at 3", "INS SimpleName: table to MethodInvocation at 2", "INS SimpleName: toProto to MethodInvocation at 1", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: build to MethodInvocation at 1", "INS CatchClause to TryStatement at 1", "INS SimpleName: setTable to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: request to MethodInvocation at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS IfStatement to Block at 5", "INS SimpleName: done to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: toByteArray to MethodInvocation at 1", "INS SimpleName: toByteArray to MethodInvocation at 1", "INS QualifiedName: MetaDataProtos.MutationCode.TABLE_ALREADY_EXISTS to MethodInvocation at 2", "INS SimpleName: run to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: done to MethodInvocation at 0", "INS SimpleName: currentTime to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: MetaDataResponse to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: t to MethodInvocation at 3", "INS ExpressionStatement to Block at 9", "INS ReturnStatement to Block at 1", "INS VariableDeclarationStatement to Block at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS ExpressionStatement to Block at 6", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to CatchClause at 1", "INS QualifiedName: MetaDataResponse.Builder to SimpleType: MetaDataResponse.Builder at 0", "INS IfStatement to Block at 2", "INS SimpleName: tableName to VariableDeclarationFragment at 0", "INS SimpleName: request to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 69", "operations": ["INS SimpleName: controller to SingleVariableDeclaration at 1", "INS SimpleName: request to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 69", "INS SimpleType: RpcController to SingleVariableDeclaration at 0", "INS SimpleName: RpcController to SimpleType: RpcController at 0", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleType: CreateTableRequest to SingleVariableDeclaration at 0", "INS SimpleName: CreateTableRequest to SimpleType: CreateTableRequest at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 75", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NullLiteral to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: ProtobufUtil to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 4", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: MetaDataResponse to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 75", "INS SimpleType: MetaDataResponse to ParameterizedType: RpcCallback<MetaDataResponse> at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS TryStatement to Block at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS QualifiedName: MetaDataResponse.Builder to SimpleType: MetaDataResponse.Builder at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: run to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS Block to TryStatement at 0", "INS ArrayAccess to Assignment: = at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS ReturnStatement to Block at 3", "INS Block to MethodDeclaration at 7", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: tableName to Assignment: = at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: build to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: tableName to VariableDeclarationFragment at 0", "INS Block to IfStatement at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS SimpleName: getMutations to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 4", "INS IfStatement to Block at 5", "INS SimpleName: setReturnCode to MethodInvocation at 1", "INS SimpleName: setMutationTime to MethodInvocation at 1", "INS ParameterizedType: RpcCallback<MetaDataResponse> to SingleVariableDeclaration at 0", "INS ArrayAccess to Assignment: = at 1", "INS SimpleName: tableType to VariableDeclarationFragment at 0", "INS SimpleName: done to SingleVariableDeclaration at 1", "INS SimpleName: getTableType to MethodInvocation at 1", "INS SimpleType: MetaDataResponse.Builder to VariableDeclarationStatement at 0", "INS QualifiedName: MetaDataProtos.MutationCode.UNALLOWED_TABLE_MUTATION to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: RpcCallback to SimpleType: RpcCallback at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: schemaName to Assignment: = at 0", "INS SimpleName: schemaName to VariableDeclarationFragment at 0", "INS SimpleType: RpcCallback to ParameterizedType: RpcCallback<MetaDataResponse> at 0", "INS SimpleName: request to MethodInvocation at 0", "INS SimpleName: tableMetadata to VariableDeclarationFragment at 0", "INS SimpleName: done to MethodInvocation at 0", "INS SimpleName: request to MethodInvocation at 2", "INS ParameterizedType: List<Mutation> to VariableDeclarationStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 82", "operations": ["INS Block to MethodDeclaration at 7", "INS ParameterizedType: RpcCallback<ClearCacheResponse> to SingleVariableDeclaration at 0", "INS SimpleName: clearCache to MethodDeclaration at 3", "INS SimpleName: done to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS MethodDeclaration to TypeDeclaration: class at 82", "INS SimpleType: RpcCallback to ParameterizedType: RpcCallback<ClearCacheResponse> at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleType: ClearCacheResponse to ParameterizedType: RpcCallback<ClearCacheResponse> at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 83", "operations": ["INS SimpleName: setVersion to MethodInvocation at 1", "INS Block to MethodDeclaration at 7", "INS ParameterizedType: RpcCallback<GetVersionResponse> to SingleVariableDeclaration at 0", "INS SimpleName: getVersion to MethodDeclaration at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: GetVersionResponse to SimpleType: GetVersionResponse at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 83", "INS ExpressionStatement to Block at 3", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: run to MethodInvocation at 1", "INS SimpleName: done to MethodInvocation at 0", "INS SimpleName: version to MethodInvocation at 2", "INS SimpleName: done to SingleVariableDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: RpcController to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: GetVersionResponse to ParameterizedType: RpcCallback<GetVersionResponse> at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: controller to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: RpcCallback to ParameterizedType: RpcCallback<GetVersionResponse> at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: RpcCallback to SimpleType: RpcCallback at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleType: RegionCoprocessorEnvironment to FieldDeclaration at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS SimpleName: env to TagElement: @param at 0", "INS SimpleName: IOException to TagElement: @throws at 0", "INS TagElement: @code to TagElement: @throws at 2", "INS TagElement: @link to TagElement at 1", "INS TextElement: on a table region, so always expects this to be an instance of to TagElement at 4", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @param to Javadoc at 1", "INS TextElement:  RegionCoprocessorEnvironment to TagElement: @code at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @throws to Javadoc at 2", "INS TextElement: coprocessor is loaded. Since this is a coprocessor endpoint, it always expects to be loaded to TagElement at 3", "INS SimpleName: RegionCoprocessorEnvironment to TagElement: @link at 0", "INS TextElement: Stores a reference to the coprocessor environment provided by the to TagElement at 0", "INS TextElement: . to TagElement at 6", "INS TextElement:  if the provided environment is not an instance of to TagElement: @throws at 1", "INS TextElement:  the environment provided by the coprocessor host to TagElement: @param at 1", "INS TagElement: @link to TagElement at 5", "INS TextElement:  from the region where this to TagElement at 2", "INS QualifiedName: org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost to TagElement: @link at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 4", "operations": ["INS PrimitiveType: void to MethodDeclaration at 4"]}, {"root": "INS SimpleName: start to MethodDeclaration at 5", "operations": ["INS SimpleName: start to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleType: CoprocessorEnvironment to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: env to SingleVariableDeclaration at 1", "INS SimpleName: CoprocessorEnvironment to SimpleType: CoprocessorEnvironment at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 7", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS Block to MethodDeclaration at 8", "operations": ["INS CastExpression to Assignment: = at 1", "INS SimpleName: env to InstanceofExpression at 0", "INS SimpleName: CoprocessorException to SimpleType: CoprocessorException at 0", "INS Block to MethodDeclaration at 8", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: env to CastExpression at 1", "INS IfStatement to Block at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS InstanceofExpression to IfStatement at 0", "INS SimpleType: CoprocessorException to ClassInstanceCreation at 0", "INS Block to IfStatement at 2", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"Must be loaded on a table region!\" to ClassInstanceCreation at 1", "INS SimpleName: env to FieldAccess at 1", "INS ThrowStatement to Block at 0", "INS Block to IfStatement at 1", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Block to MethodDeclaration at 7", "MOV SimpleType: IOException to MethodDeclaration at 5", "MOV SimpleName: createTable to MethodDeclaration at 3", "MOV Modifier: public to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV Modifier: public to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: releaseLocks to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV Modifier: static to MethodDeclaration at 1", "MOV PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "UPDATE from static to public", "operations": ["UPD Modifier: static from static to public"]}, {"root": "UPDATE from releaseLocks to dropTable", "operations": ["UPD SimpleName: releaseLocks from releaseLocks to dropTable"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: controller to SingleVariableDeclaration at 1", "INS SimpleType: RpcController to SingleVariableDeclaration at 0", "INS SimpleName: RpcController to SimpleType: RpcController at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleName: AddColumnRequest to SimpleType: AddColumnRequest at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleType: AddColumnRequest to SingleVariableDeclaration at 0", "INS SimpleName: request to SingleVariableDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 8", "operations": ["INS SimpleName: setControllerException to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS Block to MethodDeclaration at 8", "INS SimpleName: controller to MethodInvocation at 2", "INS SimpleName: ioe to MethodInvocation at 3", "INS TryStatement to Block at 0", "INS CatchClause to TryStatement at 1", "INS Block to CatchClause at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ioe to SingleVariableDeclaration at 1", "INS SimpleName: ProtobufUtil to MethodInvocation at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: controller to SingleVariableDeclaration at 1", "INS SimpleType: RpcController to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: RpcController to SimpleType: RpcController at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleName: request to SingleVariableDeclaration at 1", "INS SimpleType: DropColumnRequest to SingleVariableDeclaration at 0", "INS SimpleName: DropColumnRequest to SimpleType: DropColumnRequest at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS SimpleType: MetaDataResponse to ParameterizedType: RpcCallback<MetaDataResponse> at 1", "INS SimpleName: RpcCallback to SimpleType: RpcCallback at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: done to SingleVariableDeclaration at 1", "INS ParameterizedType: RpcCallback<MetaDataResponse> to SingleVariableDeclaration at 0", "INS SimpleType: RpcCallback to ParameterizedType: RpcCallback<MetaDataResponse> at 0"]}, {"root": "INS Block to MethodDeclaration at 8", "operations": ["INS SimpleName: ioe to MethodInvocation at 3", "INS TryStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ParameterizedType: List<Mutation> to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS Block to CatchClause at 1", "INS Block to MethodDeclaration at 8", "INS SimpleName: tableMetaData to VariableDeclarationFragment at 0", "INS SimpleName: ioe to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: ProtobufUtil to MethodInvocation at 0", "INS SimpleName: setControllerException to MethodInvocation at 1", "INS CatchClause to TryStatement at 1", "INS SimpleName: controller to MethodInvocation at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleType: IOException to SingleVariableDeclaration at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS SimpleName: updateIndexState to MethodDeclaration at 3", "operations": ["INS SimpleName: updateIndexState to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: controller to SingleVariableDeclaration at 1", "INS SimpleType: RpcController to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: UpdateIndexStateRequest to SingleVariableDeclaration at 0", "INS SimpleName: request to SingleVariableDeclaration at 1", "INS SimpleName: UpdateIndexStateRequest to SimpleType: UpdateIndexStateRequest at 0"]}, {"root": "INS Block to MethodDeclaration at 9", "operations": ["INS Block to MethodDeclaration at 9", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: MetaDataResponse.Builder to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS SimpleName: MetaDataResponse to MethodInvocation at 0", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS QualifiedName: MetaDataResponse.Builder to SimpleType: MetaDataResponse.Builder at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 4", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 3"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "UPDATE from KeyValue[] to Cell[]", "operations": ["UPD ArrayType: KeyValue[] from KeyValue[] to Cell[]", "UPD ArrayType: KeyValue[] from KeyValue[] to Cell[]", "UPD ArrayType: KeyValue[] from KeyValue[] to Cell[]", "UPD ArrayType: KeyValue[] from KeyValue[] to Cell[]", "UPD ArrayType: KeyValue[] from KeyValue[] to Cell[]"]}, {"root": "UPDATE from List<Mutation> to RpcCallback<MetaDataResponse>", "operations": ["UPD ParameterizedType: List<Mutation> from List<Mutation> to RpcCallback<MetaDataResponse>", "UPD ParameterizedType: List<Mutation> from List<Mutation> to RpcCallback<MetaDataResponse>", "UPD ParameterizedType: List<Mutation> from List<Mutation> to RpcCallback<MetaDataResponse>"]}, {"root": "UPDATE from tableMetadata to done", "operations": ["UPD SimpleName: tableMetadata from tableMetadata to done", "UPD SimpleName: tableMetadata from tableMetadata to done", "UPD SimpleName: tableMetaData from tableMetaData to done"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: MetaDataResponse to MethodInvocation at 0", "INS QualifiedName: MetaDataResponse.Builder to SimpleType: MetaDataResponse.Builder at 0", "INS SimpleType: MetaDataResponse.Builder to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: newBuilder to MethodInvocation at 1"]}, {"root": "UPDATE from List<Integer> to List<RowLock>", "operations": ["UPD ParameterizedType: List<Integer> from List<Integer> to List<RowLock>", "UPD ParameterizedType: List<Integer> from List<Integer> to List<RowLock>", "UPD ParameterizedType: List<Integer> from List<Integer> to List<RowLock>", "UPD ParameterizedType: List<Integer> from List<Integer> to List<RowLock>", "UPD ParameterizedType: List<Integer> from List<Integer> to List<RowLock>", "UPD ParameterizedType: List<Integer> from List<Integer> to List<RowLock>", "UPD ParameterizedType: List<Integer> from List<Integer> to List<RowLock>", "UPD ParameterizedType: List<Integer> from List<Integer> to List<RowLock>"]}, {"root": "UPDATE from lids to locks", "operations": ["UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks", "UPD SimpleName: lids from lids to locks"]}, {"root": "INS SimpleType: RpcController to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: RpcController to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from lids to controller", "operations": ["UPD SimpleName: lids from lids to controller"]}, {"root": "UPDATE from Integer to DropTableRequest", "operations": ["UPD SimpleType: Integer from Integer to DropTableRequest", "UPD SimpleName: Integer from Integer to DropTableRequest"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: Integer to SingleVariableDeclaration at 0", "MOV SimpleName: lid to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from t to request", "operations": ["UPD SimpleName: t from t to request", "UPD SimpleName: lid from lid to request"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 1", "MOV ExpressionStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 6"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS SimpleType: ImmutableBytesPtr to ParameterizedType: Map<ImmutableBytesPtr,PTable> at 1", "INS SimpleName: PTable to SimpleType: PTable at 0", "INS SimpleName: ImmutableBytesPtr to SimpleType: ImmutableBytesPtr at 0", "INS SimpleType: Map to ParameterizedType: Map<ImmutableBytesPtr,PTable> at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleType: PTable to ParameterizedType: Map<ImmutableBytesPtr,PTable> at 2", "INS ParameterizedType: Map<ImmutableBytesPtr,PTable> to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleType: RpcController to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: RpcController to SingleVariableDeclaration at 0", "INS SimpleName: RpcController to SimpleType: RpcController at 0"]}, {"root": "INS SimpleName: controller to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: controller to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleType: ClearCacheRequest to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: ClearCacheRequest to SingleVariableDeclaration at 0", "INS SimpleName: ClearCacheRequest to SimpleType: ClearCacheRequest at 0"]}, {"root": "INS SimpleName: request to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: request to SingleVariableDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from Throwable to GetVersionRequest", "operations": ["UPD SimpleName: Throwable from Throwable to GetVersionRequest", "UPD SimpleType: Throwable from Throwable to GetVersionRequest"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleName: t to SingleVariableDeclaration at 1", "MOV SimpleType: Throwable to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1", "MOV ExpressionStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 3", "MOV TryStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: byte[] to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Map<ImmutableBytesPtr,PTable> to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from Integer to RowLock", "operations": ["UPD SimpleName: Integer from Integer to RowLock", "UPD SimpleType: Integer from Integer to RowLock", "UPD SimpleType: List from List to RowLock", "UPD SimpleName: List from List to RowLock", "UPD SimpleName: Integer from Integer to RowLock", "UPD SimpleType: Integer from Integer to RowLock", "UPD SimpleType: Integer from Integer to RowLock", "UPD SimpleName: Integer from Integer to RowLock", "UPD SimpleName: Integer from Integer to RowLock", "UPD SimpleType: Integer from Integer to RowLock", "UPD SimpleName: Integer from Integer to RowLock", "UPD SimpleType: Integer from Integer to RowLock", "UPD SimpleName: Integer from Integer to RowLock", "UPD SimpleType: Integer from Integer to RowLock", "UPD SimpleName: Integer from Integer to RowLock", "UPD SimpleType: Integer from Integer to RowLock", "UPD SimpleName: Integer from Integer to RowLock", "UPD SimpleType: Integer from Integer to RowLock"]}, {"root": "INS ParameterizedType: Map<ImmutableBytesPtr,PTable> to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: ImmutableBytesPtr to ParameterizedType: Map<ImmutableBytesPtr,PTable> at 1", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: PTable to SimpleType: PTable at 0", "INS SimpleType: PTable to ParameterizedType: Map<ImmutableBytesPtr,PTable> at 2", "INS SimpleName: ImmutableBytesPtr to SimpleType: ImmutableBytesPtr at 0", "INS ParameterizedType: Map<ImmutableBytesPtr,PTable> to VariableDeclarationStatement at 0", "INS SimpleType: Map to ParameterizedType: Map<ImmutableBytesPtr,PTable> at 0"]}, {"root": "UPDATE from Integer to List", "operations": ["UPD SimpleType: Integer from Integer to List", "UPD SimpleType: Integer from Integer to List", "UPD SimpleName: KeyValue from KeyValue to List", "UPD SimpleName: Integer from Integer to List", "UPD SimpleName: Integer from Integer to List", "UPD SimpleType: KeyValue from KeyValue to List", "UPD SimpleName: RegionCoprocessorEnvironment from RegionCoprocessorEnvironment to List", "UPD SimpleName: KeyValue from KeyValue to List", "UPD SimpleType: KeyValue from KeyValue to List"]}, {"root": "INS SimpleType: Cell to ParameterizedType: List<KeyValue> at 2", "operations": ["INS SimpleName: Cell to SimpleType: Cell at 0", "INS SimpleType: Cell to ParameterizedType: List<KeyValue> at 2"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: List from List to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: List from List to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "operations": ["INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Dimension to ArrayType: byte[] at 1", "INS ArrayType: byte[] to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from List to RpcCallback", "operations": ["UPD SimpleType: List from List to RpcCallback", "UPD SimpleName: List from List to RpcCallback", "UPD SimpleType: List from List to RpcCallback", "UPD SimpleType: List from List to RpcCallback", "UPD SimpleName: List from List to RpcCallback", "UPD SimpleName: IOException from IOException to RpcCallback", "UPD SimpleName: List from List to RpcCallback"]}, {"root": "UPDATE from MetaDataMutationResult to MetaDataResponse", "operations": ["UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleName: Mutation from Mutation to MetaDataResponse", "UPD SimpleName: Mutation from Mutation to MetaDataResponse", "UPD SimpleType: Mutation from Mutation to MetaDataResponse", "UPD SimpleType: Mutation from Mutation to MetaDataResponse", "UPD SimpleType: Mutation from Mutation to MetaDataResponse", "UPD SimpleName: Mutation from Mutation to MetaDataResponse"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from ParameterizedType: List<Integer>", "operations": ["MOV SimpleType: List to ParameterizedType: List<Integer> at 0"]}, {"root": "UPDATE from MetaDataMutationResult to RpcController", "operations": ["UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to RpcController", "UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to RpcController", "UPD SimpleName: Integer from Integer to RpcController"]}, {"root": "MOVE from SimpleType: RpcController", "operations": ["MOV SimpleName: Integer to SimpleType: RpcController at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: byte[] to VariableDeclarationStatement at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1"]}, {"root": "INS SimpleType: RowLock to ParameterizedType: List<Integer> at 1", "operations": ["INS SimpleName: RowLock to SimpleType: RowLock at 0", "INS SimpleType: RowLock to ParameterizedType: List<Integer> at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Map<ImmutableBytesPtr,PTable> to VariableDeclarationStatement at 0", "MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: MetaDataMutationResult to VariableDeclarationStatement at 0", "MOV Block to TryStatement at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0", "MOV SimpleType: MetaDataMutationResult to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Map<ImmutableBytesPtr,PTable> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from SimpleType: RpcController", "operations": ["MOV SimpleName: MetaDataMutationResult to SimpleType: RpcController at 0"]}, {"root": "INS SimpleType: GetVersionResponse.Builder to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: GetVersionResponse.Builder to VariableDeclarationStatement at 0", "INS QualifiedName: GetVersionResponse.Builder to SimpleType: GetVersionResponse.Builder at 0"]}, {"root": "MOVE from SimpleType: RpcController", "operations": ["MOV SimpleName: MetaDataMutationResult to SimpleType: RpcController at 0"]}, {"root": "MOVE from InstanceofExpression", "operations": ["MOV SimpleType: RegionCoprocessorEnvironment to InstanceofExpression at 1"]}, {"root": "MOVE from SimpleType: MetaDataResponse", "operations": ["MOV SimpleName: MetaDataMutationResult to SimpleType: MetaDataResponse at 0"]}, {"root": "UPDATE from lid to rowLock", "operations": ["UPD SimpleName: lid from lid to rowLock", "UPD SimpleName: lid from lid to rowLock", "UPD SimpleName: lid from lid to rowLock", "UPD SimpleName: lid from lid to rowLock", "UPD SimpleName: lid from lid to rowLock", "UPD SimpleName: region from region to rowLock", "UPD SimpleName: lid from lid to rowLock", "UPD SimpleName: region from region to rowLock", "UPD SimpleName: lid from lid to rowLock"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleType: Cell to VariableDeclarationStatement at 0", "INS SimpleName: Cell to SimpleType: Cell at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "INS NullLiteral to VariableDeclarationFragment at 1", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "INS NullLiteral to VariableDeclarationFragment at 1", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 2", "MOV ExpressionStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ExpressionStatement to Block at 3", "INS ArrayAccess to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: schemaName to Assignment: = at 0", "INS SimpleName: rowKeyMetaData to ArrayAccess at 0", "INS QualifiedName: PhoenixDatabaseMetaData.SCHEMA_NAME_INDEX to ArrayAccess at 1"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS QualifiedName: PhoenixDatabaseMetaData.TABLE_NAME_INDEX to ArrayAccess at 1", "INS ExpressionStatement to Block at 4", "INS SimpleName: tableName to Assignment: = at 0", "INS SimpleName: rowKeyMetaData to ArrayAccess at 0", "INS ArrayAccess to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 8", "MOV VariableDeclarationStatement to Block at 12", "MOV VariableDeclarationStatement to Block at 7", "MOV VariableDeclarationStatement to Block at 9", "MOV IfStatement to Block at 13", "MOV VariableDeclarationStatement to Block at 14", "MOV VariableDeclarationStatement to Block at 10", "MOV TryStatement to Block at 15", "MOV VariableDeclarationStatement to Block at 11"]}, {"root": "MOVE from ParameterizedType: List<KeyValue>", "operations": ["MOV SimpleType: List to ParameterizedType: List<KeyValue> at 0"]}, {"root": "INS SimpleType: RowLock to ParameterizedType: List<Integer> at 2", "operations": ["INS SimpleName: RowLock to SimpleType: RowLock at 0", "INS SimpleType: RowLock to ParameterizedType: List<Integer> at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleType: Mutation to ParameterizedType: List<Mutation> at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: ProtobufUtil to MethodInvocation at 0", "INS ParameterizedType: List<Mutation> to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: tableMetaData to VariableDeclarationFragment at 0", "INS SimpleName: request to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS SimpleName: getMutations to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: result to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: run to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: MetaDataMutationResult to MethodInvocation at 0", "INS IfStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: toProto to MethodInvocation at 1", "INS SimpleName: result to InfixExpression: != at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: result to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: done to MethodInvocation at 0"]}, {"root": "MOVE from ParameterizedType: List<Mutation>", "operations": ["MOV SimpleType: List to ParameterizedType: List<Mutation> at 0", "MOV SimpleType: Mutation to ParameterizedType: List<Mutation> at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: ProtobufUtil to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: tableMetaData to Assignment: = at 0", "INS SimpleName: request to MethodInvocation at 2", "INS SimpleName: getMutations to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS VariableDeclarationStatement to Block at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: result to VariableDeclarationFragment at 0"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS SimpleName: toProto to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: done to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: run to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: result to MethodInvocation at 2", "INS SimpleName: MetaDataMutationResult to MethodInvocation at 0", "INS SimpleName: result to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS IfStatement to Block at 4"]}, {"root": "MOVE from SimpleType: RpcCallback", "operations": ["MOV SimpleName: IOException to SimpleType: RpcCallback at 0"]}, {"root": "UPDATE from RegionCoprocessorEnvironment to ClearCacheResponse", "operations": ["UPD SimpleName: RegionCoprocessorEnvironment from RegionCoprocessorEnvironment to ClearCacheResponse"]}, {"root": "MOVE from SimpleType: ClearCacheResponse", "operations": ["MOV SimpleName: RegionCoprocessorEnvironment to SimpleType: ClearCacheResponse at 0"]}, {"root": "UPDATE from table to metaDataCache", "operations": ["UPD SimpleName: table from table to metaDataCache"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getMetaDataCache to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 2", "INS SimpleName: env to FieldAccess at 1"]}, {"root": "UPDATE from getEnvironment to builder", "operations": ["UPD SimpleName: getEnvironment from getEnvironment to builder", "UPD SimpleName: EnvironmentEdgeManager from EnvironmentEdgeManager to builder", "UPD SimpleName: metaDataCache from metaDataCache to builder", "UPD SimpleName: EnvironmentEdgeManager from EnvironmentEdgeManager to builder"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS NullLiteral to VariableDeclarationFragment at 1", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "INS NullLiteral to VariableDeclarationFragment at 1", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS ExpressionStatement to Block at 4", "INS SimpleName: rowKeyMetaData to ArrayAccess at 0", "INS SimpleName: schemaName to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ArrayAccess to Assignment: = at 1", "INS QualifiedName: PhoenixDatabaseMetaData.SCHEMA_NAME_INDEX to ArrayAccess at 1"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS SimpleName: tableName to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 5", "INS SimpleName: rowKeyMetaData to ArrayAccess at 0", "INS QualifiedName: PhoenixDatabaseMetaData.TABLE_NAME_INDEX to ArrayAccess at 1", "INS ArrayAccess to Assignment: = at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: PTable to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0"]}, {"root": "UPDATE from getLock to getRowLock", "operations": ["UPD SimpleName: getLock from getLock to getRowLock", "UPD SimpleName: getLock from getLock to getRowLock", "UPD SimpleName: getLock from getLock to getRowLock"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from getBuffer to getRowArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getRowArray", "UPD SimpleName: rowKey from rowKey to getRowArray", "UPD SimpleName: getBuffer from getBuffer to getRowArray", "UPD SimpleName: getBuffer from getBuffer to getRowArray"]}, {"root": "INS InfixExpression: == to IfStatement at 0", "operations": ["INS QualifiedName: Type.Delete to MethodInvocation at 0", "INS InfixExpression: == to IfStatement at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS MethodInvocation to InfixExpression: == at 1", "INS SimpleName: getCode to MethodInvocation at 1"]}, {"root": "INS ParameterizedType: List<Mutation> to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS SimpleType: Mutation to ParameterizedType: List<Mutation> at 1", "INS ParameterizedType: List<Mutation> to VariableDeclarationStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: error to MethodInvocation at 1", "INS SimpleName: t to MethodInvocation at 3", "INS SimpleName: logger to MethodInvocation at 0", "INS StringLiteral: \"createTable failed\" to MethodInvocation at 2", "INS ExpressionStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: error to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: logger to MethodInvocation at 0", "INS StringLiteral: \"dropTable failed\" to MethodInvocation at 2", "INS SimpleName: t to MethodInvocation at 3"]}, {"root": "UPDATE from RegionCoprocessorEnvironment to Map", "operations": ["UPD SimpleName: RegionCoprocessorEnvironment from RegionCoprocessorEnvironment to Map"]}, {"root": "MOVE from SimpleType: Map", "operations": ["MOV SimpleName: RegionCoprocessorEnvironment to SimpleType: Map at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Delete to VariableDeclarationStatement at 1", "MOV SingleMemberAnnotation to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SingleMemberAnnotation to VariableDeclarationStatement at 0", "MOV SimpleType: Delete to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: delete to VariableDeclarationFragment at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: IOException to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from GlobalCache to GetVersionResponse", "operations": ["UPD SimpleName: GlobalCache from GlobalCache to GetVersionResponse"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: GlobalCache to MethodInvocation at 0", "MOV SimpleName: getInstance to MethodInvocation at 1"]}, {"root": "UPDATE from getInstance to newBuilder", "operations": ["UPD SimpleName: getInstance from getInstance to newBuilder"]}, {"root": "INS ParameterizedType: List<Mutation> to VariableDeclarationStatement at 0", "operations": ["INS ParameterizedType: List<Mutation> to VariableDeclarationStatement at 0", "INS SimpleType: List to ParameterizedType: List<Mutation> at 0", "INS SimpleType: Mutation to ParameterizedType: List<Mutation> at 1", "INS SimpleName: Mutation to SimpleType: Mutation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: t to MethodInvocation at 3", "INS StringLiteral: \"updateIndexState failed\" to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: logger to MethodInvocation at 0", "INS SimpleName: error to MethodInvocation at 1"]}, {"root": "INS FieldAccess to MethodInvocation at 2", "operations": ["INS SimpleName: env to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 2", "INS ThisExpression to FieldAccess at 0"]}, {"root": "UPDATE from releaseRowLock to release", "operations": ["UPD SimpleName: releaseRowLock from releaseRowLock to release", "UPD SimpleName: releaseRowLock from releaseRowLock to release"]}, {"root": "INS FieldAccess to MethodInvocation at 2", "operations": ["INS FieldAccess to MethodInvocation at 2", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: env to FieldAccess at 1"]}, {"root": "UPDATE from getBuffer to getValueArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray"]}, {"root": "INS FieldAccess to MethodInvocation at 2", "operations": ["INS FieldAccess to MethodInvocation at 2", "INS SimpleName: env to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "MOVE from ParameterizedType: List<Mutation>", "operations": ["MOV SimpleType: List to ParameterizedType: List<Mutation> at 0"]}, {"root": "UPDATE from env to tableMetadata", "operations": ["UPD SimpleName: env from env to tableMetadata", "UPD SimpleName: env from env to tableMetadata"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: toProto to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: run to MethodInvocation at 1", "INS SimpleName: done to MethodInvocation at 0", "INS SimpleName: result to MethodInvocation at 2", "INS SimpleName: MetaDataMutationResult to MethodInvocation at 0"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS ReturnStatement to Block at 1"]}, {"root": "MOVE from ParameterizedType: List<Integer>", "operations": ["MOV SimpleType: List to ParameterizedType: List<Integer> at 0"]}, {"root": "INS ExpressionStatement to Block at 13", "operations": ["INS SimpleName: builder to MethodInvocation at 0", "INS QualifiedName: MetaDataProtos.MutationCode.TABLE_NOT_FOUND to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setReturnCode to MethodInvocation at 1", "INS ExpressionStatement to Block at 13"]}, {"root": "INS ExpressionStatement to Block at 14", "operations": ["INS SimpleName: setMutationTime to MethodInvocation at 1", "INS ExpressionStatement to Block at 14", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: currentTimeStamp to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 15", "operations": ["INS ExpressionStatement to Block at 15", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: run to MethodInvocation at 1", "INS SimpleName: done to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS ReturnStatement to Block at 16", "operations": ["INS ReturnStatement to Block at 16"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: controller to MethodInvocation at 2", "INS SimpleName: ProtobufUtil to MethodInvocation at 0", "INS SimpleName: setControllerException to MethodInvocation at 1"]}, {"root": "INS SimpleType: Cell to ParameterizedType: List<KeyValue> at 1", "operations": ["INS SimpleType: Cell to ParameterizedType: List<KeyValue> at 1", "INS SimpleName: Cell to SimpleType: Cell at 0"]}, {"root": "MOVE from ParameterizedType: List<Mutation>", "operations": ["MOV SimpleType: List to ParameterizedType: List<Mutation> at 0"]}, {"root": "MOVE from ParameterizedType: List<Mutation>", "operations": ["MOV SimpleType: Mutation to ParameterizedType: List<Mutation> at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: MetaDataMutationResult to MethodInvocation at 0", "INS SimpleName: result to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: run to MethodInvocation at 1", "INS SimpleName: toProto to MethodInvocation at 1", "INS SimpleName: done to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS ReturnStatement to Block at 1"]}, {"root": "MOVE from ParameterizedType: List<Integer>", "operations": ["MOV SimpleType: List to ParameterizedType: List<Integer> at 0"]}, {"root": "INS ExpressionStatement to Block at 10", "operations": ["INS ExpressionStatement to Block at 10", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: run to MethodInvocation at 1", "INS SimpleName: MetaDataMutationResult to MethodInvocation at 0", "INS SimpleName: result to MethodInvocation at 2", "INS SimpleName: toProto to MethodInvocation at 1", "INS SimpleName: done to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS ReturnStatement to Block at 11", "operations": ["INS ReturnStatement to Block at 11"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: controller to MethodInvocation at 2", "INS SimpleName: ProtobufUtil to MethodInvocation at 0", "INS SimpleName: setControllerException to MethodInvocation at 1"]}, {"root": "INS FieldAccess to MethodInvocation at 2", "operations": ["INS SimpleName: env to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 2", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS SimpleName: Delete to SimpleType: Delete at 0", "operations": ["INS SimpleName: Delete to SimpleType: Delete at 0"]}, {"root": "MOVE from ParameterizedType: List<Mutation>", "operations": ["MOV SimpleType: List to ParameterizedType: List<Mutation> at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from SimpleType: IOException", "operations": ["MOV SimpleName: IOException to SimpleType: IOException at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from doGetTable to GlobalCache", "operations": ["UPD SimpleName: doGetTable from doGetTable to GlobalCache"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: doGetTable to MethodInvocation at 0", "MOV SimpleName: key to MethodInvocation at 1"]}, {"root": "UPDATE from key to getInstance", "operations": ["UPD SimpleName: key from key to getInstance"]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS SimpleName: env to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: MetaDataMutationResult to MethodInvocation at 0", "INS SimpleName: toProto to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: run to MethodInvocation at 1", "INS SimpleName: result to MethodInvocation at 2", "INS SimpleName: done to MethodInvocation at 0"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS ReturnStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 12", "operations": ["INS ExpressionStatement to Block at 12", "INS QualifiedName: MetaDataProtos.MutationCode.TABLE_ALREADY_EXISTS to MethodInvocation at 2", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: setReturnCode to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 13", "operations": ["INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: currentTime to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setMutationTime to MethodInvocation at 1", "INS ExpressionStatement to Block at 13"]}, {"root": "INS ExpressionStatement to Block at 14", "operations": ["INS SimpleName: build to MethodInvocation at 1", "INS ExpressionStatement to Block at 14", "INS SimpleName: run to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: done to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS ReturnStatement to Block at 15", "operations": ["INS ReturnStatement to Block at 15"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setControllerException to MethodInvocation at 1", "INS SimpleName: controller to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: ProtobufUtil to MethodInvocation at 0"]}, {"root": "MOVE from CastExpression", "operations": ["MOV SimpleType: RegionCoprocessorEnvironment to CastExpression at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS SimpleName: kv to MethodInvocation at 0", "INS SimpleName: getQualifierOffset to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 4", "MOV MethodInvocation to MethodInvocation at 9"]}, {"root": "INS MethodInvocation to MethodInvocation at 8", "operations": ["INS SimpleName: getQualifierOffset to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 8", "INS SimpleName: searchKv to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 5", "MOV MethodInvocation to MethodInvocation at 8", "MOV MethodInvocation to MethodInvocation at 9", "MOV MethodInvocation to MethodInvocation at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: isDelete to MethodInvocation at 1", "MOV SimpleName: kv to MethodInvocation at 0"]}, {"root": "UPDATE from isDelete to getTypeByte", "operations": ["UPD SimpleName: isDelete from isDelete to getTypeByte"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Map<ImmutableBytesPtr,PTable> to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleName: ProtobufUtil to MethodInvocation at 0", "operations": ["INS SimpleName: ProtobufUtil to MethodInvocation at 0"]}, {"root": "UPDATE from getEnvironment to getMutations", "operations": ["UPD SimpleName: getEnvironment from getEnvironment to getMutations", "UPD SimpleName: getEnvironment from getEnvironment to getMutations"]}, {"root": "INS SimpleName: request to MethodInvocation at 2", "operations": ["INS SimpleName: request to MethodInvocation at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Map<ImmutableBytesPtr,PTable> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from ArrayAccess", "operations": ["MOV QualifiedName: PhoenixDatabaseMetaData.SCHEMA_NAME_INDEX to ArrayAccess at 1", "MOV SimpleName: rowKeyMetaData to ArrayAccess at 0"]}, {"root": "MOVE from ArrayAccess", "operations": ["MOV SimpleName: rowKeyMetaData to ArrayAccess at 0", "MOV QualifiedName: PhoenixDatabaseMetaData.TABLE_NAME_INDEX to ArrayAccess at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: kv to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: kv to MethodInvocation at 0", "INS SimpleName: getRowOffset to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getRowLength to MethodInvocation at 1", "INS SimpleName: kv to MethodInvocation at 0"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 4", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 4"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Delete to ClassInstanceCreation at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS SimpleName: kv to MethodInvocation at 0", "INS SimpleName: getRowArray to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 2", "operations": ["INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: getRowOffset to MethodInvocation at 1", "INS SimpleName: kv to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 3", "operations": ["INS SimpleName: kv to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 3", "INS SimpleName: getRowLength to MethodInvocation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Delete to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleName: indexKey to ClassInstanceCreation at 1", "MOV SimpleName: clientTimeStamp to ClassInstanceCreation at 2", "MOV SimpleType: Delete to ClassInstanceCreation at 0"]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: env to FieldAccess at 1"]}, {"root": "MOVE from SimpleType: List", "operations": ["MOV SimpleName: RegionCoprocessorEnvironment to SimpleType: List at 0"]}, {"root": "INS SimpleName: ProtobufUtil to MethodInvocation at 0", "operations": ["INS SimpleName: ProtobufUtil to MethodInvocation at 0"]}, {"root": "INS SimpleName: request to MethodInvocation at 2", "operations": ["INS SimpleName: request to MethodInvocation at 2"]}, {"root": "UPDATE from getBuffer to getQualifierArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getQualifierArray", "UPD SimpleName: getQualifierOffset from getQualifierOffset to getQualifierArray", "UPD SimpleName: getBuffer from getBuffer to getQualifierArray", "UPD SimpleName: getBuffer from getBuffer to getQualifierArray", "UPD SimpleName: getQualifierOffset from getQualifierOffset to getQualifierArray"]}, {"root": "MOVE from ParameterizedType: Map<ImmutableBytesPtr,PTable>", "operations": ["MOV SimpleType: Map to ParameterizedType: Map<ImmutableBytesPtr,PTable> at 0"]}, {"root": "UPDATE from releaseLocks to region", "operations": ["UPD SimpleName: releaseLocks from releaseLocks to region", "UPD SimpleName: releaseLocks from releaseLocks to region", "UPD SimpleName: releaseLocks from releaseLocks to region"]}, {"root": "UPDATE from region to releaseRowLocks", "operations": ["UPD SimpleName: region from region to releaseRowLocks", "UPD SimpleName: region from region to releaseRowLocks", "UPD SimpleName: region from region to releaseRowLocks"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: throwIOException to MethodInvocation at 1", "MOV SimpleName: ServerUtil to MethodInvocation at 0", "MOV SimpleName: t to MethodInvocation at 3", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from throwIOException to createIOException", "operations": ["UPD SimpleName: throwIOException from throwIOException to createIOException", "UPD SimpleName: throwIOException from throwIOException to createIOException", "UPD SimpleName: throwIOException from throwIOException to createIOException"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: result to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: toProto to MethodInvocation at 1", "INS SimpleName: run to MethodInvocation at 1", "INS SimpleName: done to MethodInvocation at 0", "INS SimpleName: MetaDataMutationResult to MethodInvocation at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS ReturnStatement to Block at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: throwIOException to MethodInvocation at 1", "MOV SimpleName: t to MethodInvocation at 3", "MOV SimpleName: ServerUtil to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: rowKey to MethodInvocation at 1"]}, {"root": "MOVE from SimpleType: Delete", "operations": ["MOV SimpleName: Delete to SimpleType: Delete at 0"]}, {"root": "MOVE from ParameterizedType: Map<ImmutableBytesPtr,PTable>", "operations": ["MOV SimpleType: ImmutableBytesPtr to ParameterizedType: Map<ImmutableBytesPtr,PTable> at 1"]}, {"root": "UPDATE from getFamilyMap to getFamilyCellMap", "operations": ["UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setReturnCode to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS QualifiedName: MetaDataProtos.MutationCode.TABLE_NOT_FOUND to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: done to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: run to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 2", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: build to MethodInvocation at 1"]}, {"root": "INS ReturnStatement to Block at 3", "operations": ["INS ReturnStatement to Block at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: t to MethodInvocation at 3", "MOV SimpleName: ServerUtil to MethodInvocation at 0", "MOV SimpleName: throwIOException to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from SimpleType: ImmutableBytesPtr", "operations": ["MOV SimpleName: ImmutableBytesPtr to SimpleType: ImmutableBytesPtr at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getEnvironment to MethodInvocation at 0"]}, {"root": "MOVE from SimpleType: Map", "operations": ["MOV SimpleName: Map to SimpleType: Map at 0"]}, {"root": "MOVE from SimpleType: PTable", "operations": ["MOV SimpleName: PTable to SimpleType: PTable at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Map<ImmutableBytesPtr,PTable> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from ArrayAccess", "operations": ["MOV MethodInvocation to ArrayAccess at 1"]}, {"root": "INS FieldAccess to MethodInvocation at 2", "operations": ["INS SimpleName: env to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 2", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: MetaDataProtos.MutationCode.PARENT_TABLE_NOT_FOUND to MethodInvocation at 2", "INS SimpleName: setReturnCode to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: setMutationTime to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: PTableImpl to MethodInvocation at 0", "INS SimpleName: parentTable to MethodInvocation at 2", "INS SimpleName: toProto to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: builder to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setTable to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: done to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: run to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS SimpleName: build to MethodInvocation at 1"]}, {"root": "INS ReturnStatement to Block at 4", "operations": ["INS ReturnStatement to Block at 4"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setReturnCode to MethodInvocation at 1", "INS QualifiedName: MetaDataProtos.MutationCode.CONCURRENT_TABLE_MUTATION to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: setMutationTime to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: PTableImpl to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: setTable to MethodInvocation at 1", "INS SimpleName: parentTable to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: toProto to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: build to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 3", "INS SimpleName: done to MethodInvocation at 0", "INS SimpleName: run to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "INS ReturnStatement to Block at 4", "operations": ["INS ReturnStatement to Block at 4"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: setReturnCode to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS QualifiedName: MetaDataProtos.MutationCode.NEWER_TABLE_FOUND to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS SimpleName: setMutationTime to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: setTable to MethodInvocation at 1", "INS SimpleName: toProto to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: PTableImpl to MethodInvocation at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: table to MethodInvocation at 2", "INS ExpressionStatement to Block at 2"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: done to MethodInvocation at 0", "INS SimpleName: run to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: builder to MethodInvocation at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: build to MethodInvocation at 1"]}, {"root": "INS ReturnStatement to Block at 4", "operations": ["INS ReturnStatement to Block at 4"]}, {"root": "INS FieldAccess to MethodInvocation at 2", "operations": ["INS ThisExpression to FieldAccess at 0", "INS SimpleName: env to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 2"]}, {"root": "INS FieldAccess to MethodInvocation at 2", "operations": ["INS FieldAccess to MethodInvocation at 2", "INS SimpleName: env to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS FieldAccess to MethodInvocation at 2", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 2", "INS SimpleName: env to FieldAccess at 1"]}, {"root": "UPDATE from raw to rawCells", "operations": ["UPD SimpleName: raw from raw to rawCells", "UPD SimpleName: raw from raw to rawCells"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: EnvironmentEdgeManager to MethodInvocation at 0", "MOV SimpleName: currentTimeMillis to MethodInvocation at 1"]}, {"root": "UPDATE from currentTimeMillis to setMutationTime", "operations": ["UPD SimpleName: currentTimeMillis from currentTimeMillis to setMutationTime", "UPD SimpleName: currentTimeMillis from currentTimeMillis to setMutationTime"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: setReturnCode to MethodInvocation at 1", "INS QualifiedName: MetaDataProtos.MutationCode.UNALLOWED_TABLE_MUTATION to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: run to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: done to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ReturnStatement to Block at 3", "operations": ["INS ReturnStatement to Block at 3"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: setReturnCode to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS QualifiedName: MetaDataProtos.MutationCode.UNALLOWED_TABLE_MUTATION to MethodInvocation at 2", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: builder to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setMutationTime to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: run to MethodInvocation at 1", "INS SimpleName: done to MethodInvocation at 0", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2"]}, {"root": "INS ReturnStatement to Block at 3", "operations": ["INS ReturnStatement to Block at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: setReturnCode to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS QualifiedName: MetaDataProtos.MutationCode.TABLE_ALREADY_EXISTS to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: setMutationTime to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: PTableImpl to MethodInvocation at 0", "INS SimpleName: toProto to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: setTable to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: table to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: done to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: run to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: build to MethodInvocation at 1"]}, {"root": "INS ReturnStatement to Block at 4", "operations": ["INS ReturnStatement to Block at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: EnvironmentEdgeManager to MethodInvocation at 0", "MOV SimpleName: currentTimeMillis to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS FieldAccess to MethodInvocation at 2", "operations": ["INS FieldAccess to MethodInvocation at 2", "INS SimpleName: env to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "MOVE from ArrayAccess", "operations": ["MOV MethodInvocation to ArrayAccess at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: currentTimeMillis to MethodInvocation at 1", "MOV SimpleName: EnvironmentEdgeManager to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 2"]}, {"root": "UPDATE from columnToDelete to table", "operations": ["UPD SimpleName: columnToDelete from columnToDelete to table", "UPD SimpleName: columnToDelete from columnToDelete to table"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 2"]}, {"root": "INS SimpleName: EnvironmentEdgeManager to MethodInvocation at 0", "operations": ["INS SimpleName: EnvironmentEdgeManager to MethodInvocation at 0"]}, {"root": "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "operations": ["INS SimpleName: currentTimeMillis to MethodInvocation at 1"]}, {"root": "INS SimpleName: EnvironmentEdgeManager to MethodInvocation at 0", "operations": ["INS SimpleName: EnvironmentEdgeManager to MethodInvocation at 0"]}, {"root": "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "operations": ["INS SimpleName: currentTimeMillis to MethodInvocation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Delete to ClassInstanceCreation at 0"]}, {"root": "DEL SimpleName: getEnvironment", "operations": ["DEL SimpleName: getEnvironment"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: getEnvironment", "DEL ReturnStatement", "DEL SuperMethodInvocation", "DEL CastExpression", "DEL Block"]}, {"root": "DEL MethodInvocation", "operations": ["DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: getEnvironment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL SimpleType: RegionCoprocessorEnvironment", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: env", "DEL SimpleName: RegionCoprocessorEnvironment", "DEL SimpleName: getEnvironment"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL BooleanLiteral: true", "operations": ["DEL BooleanLiteral: true"]}, {"root": "DEL SimpleName: lid", "operations": ["DEL SimpleName: lid"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: lid", "DEL InfixExpression: !=", "DEL IfStatement", "DEL NullLiteral", "DEL ExpressionStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getEnvironment", "DEL MethodInvocation", "DEL ThisExpression"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: KeyValue", "DEL SimpleName: KeyValue", "DEL VariableDeclarationStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getBuffer", "DEL SimpleName: kv"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getBuffer", "DEL SimpleName: searchKv", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getEnvironment", "DEL MethodInvocation", "DEL ThisExpression"]}, {"root": "DEL MethodInvocation", "operations": ["DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: getEnvironment"]}, {"root": "DEL ArrayAccess", "operations": ["DEL SimpleName: rowKeyMetaData", "DEL ArrayAccess", "DEL QualifiedName: PhoenixDatabaseMetaData.SCHEMA_NAME_INDEX"]}, {"root": "DEL ArrayAccess", "operations": ["DEL ArrayAccess", "DEL SimpleName: rowKeyMetaData", "DEL QualifiedName: PhoenixDatabaseMetaData.TABLE_NAME_INDEX"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: result"]}, {"root": "DEL NumberLiteral: 5", "operations": ["DEL NumberLiteral: 5"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ClassInstanceCreation", "DEL ReturnStatement", "DEL SimpleName: parentTable", "DEL SimpleName: MetaDataMutationResult", "DEL SimpleType: MetaDataMutationResult", "DEL QualifiedName: MutationCode.PARENT_TABLE_NOT_FOUND"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleType: MetaDataMutationResult", "DEL ReturnStatement", "DEL QualifiedName: MutationCode.CONCURRENT_TABLE_MUTATION", "DEL SimpleName: parentTable", "DEL ClassInstanceCreation", "DEL SimpleName: MetaDataMutationResult"]}, {"root": "DEL ReturnStatement", "operations": ["DEL QualifiedName: MutationCode.TABLE_ALREADY_EXISTS", "DEL SimpleName: table", "DEL ClassInstanceCreation", "DEL SimpleType: MetaDataMutationResult", "DEL ReturnStatement", "DEL SimpleName: MetaDataMutationResult"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: MetaDataMutationResult", "DEL SimpleName: table", "DEL QualifiedName: MutationCode.NEWER_TABLE_FOUND", "DEL ReturnStatement", "DEL SimpleName: MetaDataMutationResult"]}, {"root": "DEL MethodInvocation", "operations": ["DEL ThisExpression", "DEL SimpleName: getEnvironment", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: MetaDataMutationResult", "DEL SimpleType: MetaDataMutationResult", "DEL ClassInstanceCreation", "DEL ReturnStatement", "DEL SimpleName: currentTimeStamp", "DEL QualifiedName: MutationCode.TABLE_NOT_FOUND", "DEL NullLiteral"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL NullLiteral"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleType: MetaDataMutationResult"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: HRegion", "DEL SimpleName: HRegion", "DEL SimpleName: region", "DEL SingleVariableDeclaration"]}, {"root": "DEL SimpleType: Integer", "operations": ["DEL SimpleType: Integer", "DEL SimpleName: Integer"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL BooleanLiteral: true", "operations": ["DEL BooleanLiteral: true"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL Block", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL Modifier: private", "DEL EnhancedForStatement", "DEL SimpleName: lids", "DEL SimpleName: region", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: lid", "DEL SimpleName: releaseRowLock"]}, {"root": "DEL ParameterizedType: List<Integer>", "operations": ["DEL ParameterizedType: List<Integer>", "DEL SimpleType: Integer"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: result"]}, {"root": "DEL NumberLiteral: 5", "operations": ["DEL NumberLiteral: 5"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: result"]}, {"root": "DEL MethodInvocation", "operations": ["DEL ThisExpression", "DEL SimpleName: getEnvironment", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: result"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL NullLiteral"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TryStatement", "DEL PrimitiveType: byte", "DEL Block", "DEL SimpleType: MetaDataMutationResult", "DEL Block", "DEL SimpleName: List", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: tableType", "DEL NullLiteral", "DEL VariableDeclarationStatement", "DEL SingleVariableDeclaration", "DEL ParameterizedType: List<Mutation>", "DEL PrimitiveType: byte", "DEL MethodDeclaration", "DEL SimpleName: MetaDataMutationResult", "DEL VariableDeclarationFragment", "DEL SimpleName: RegionCoprocessorEnvironment", "DEL SimpleName: tableMetadata", "DEL ArrayType: byte[]", "DEL SimpleName: tableName", "DEL VariableDeclarationFragment", "DEL QualifiedName: MutationCode.UNALLOWED_TABLE_MUTATION", "DEL Dimension", "DEL SimpleName: dropTable", "DEL Dimension", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleType: RegionCoprocessorEnvironment", "DEL IfStatement", "DEL ArrayType: byte[]", "DEL SimpleType: List", "DEL VariableDeclarationFragment", "DEL ArrayAccess", "DEL SimpleType: MetaDataMutationResult", "DEL VariableDeclarationStatement", "DEL SimpleName: MetaDataMutationResult", "DEL ArrayAccess", "DEL Modifier: public", "DEL SimpleName: schemaName", "DEL SingleVariableDeclaration", "DEL SimpleName: env"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: RegionCoprocessorEnvironment", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: getEnvironment", "DEL VariableDeclarationFragment", "DEL SimpleName: env"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getEnvironment", "DEL ThisExpression"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement"]}, {"root": "DEL SimpleType: KeyValue", "operations": ["DEL SimpleType: KeyValue", "DEL SimpleName: KeyValue"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: rowKey", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL SimpleName: kv", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: getRow", "DEL SimpleName: rowKey"]}, {"root": "DEL SimpleName: rowKey", "operations": ["DEL SimpleName: rowKey"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL VariableDeclarationFragment", "operations": ["DEL ClassInstanceCreation", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL SimpleName: delete"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: RegionCoprocessorEnvironment", "DEL SimpleName: getEnvironment", "DEL MethodInvocation", "DEL SimpleName: RegionCoprocessorEnvironment", "DEL SimpleName: env", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement"]}, {"root": "DEL NumberLiteral: 5", "operations": ["DEL NumberLiteral: 5"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getEnvironment", "DEL ThisExpression", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleType: IOException"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL SimpleName: table", "operations": ["DEL SimpleName: table"]}, {"root": "DEL SimpleName: table", "operations": ["DEL SimpleName: table"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL ParameterizedType: List<Mutation>", "DEL SimpleName: tableMetaData"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleType: IOException"]}, {"root": "DEL ArrayType: byte[]", "operations": ["DEL Dimension", "DEL PrimitiveType: byte", "DEL ArrayType: byte[]"]}, {"root": "DEL SimpleName: tableName", "operations": ["DEL SimpleName: tableName"]}, {"root": "DEL PrimitiveType: long", "operations": ["DEL PrimitiveType: long"]}, {"root": "DEL SimpleName: tableTimeStamp", "operations": ["DEL SimpleName: tableTimeStamp"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: clientTimeStamp", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: getMetaDataCache", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getEnvironment"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getEnvironment", "DEL ThisExpression", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: env", "operations": ["DEL SimpleName: env"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL NullLiteral", "DEL SimpleName: SchemaUtil", "DEL PrimitiveType: byte", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL Block", "DEL ReturnStatement", "DEL ArrayType: byte[]", "DEL ConditionalExpression", "DEL SimpleName: clientTimeStamp", "DEL SimpleType: MetaDataMutationResult", "DEL SimpleType: MetaDataMutationResult", "DEL ReturnStatement", "DEL SimpleName: getTable", "DEL SimpleName: currentTime", "DEL SimpleName: t", "DEL SingleVariableDeclaration", "DEL PrimitiveType: byte", "DEL SimpleType: IOException", "DEL Dimension", "DEL MethodInvocation", "DEL SimpleType: MetaDataMutationResult", "DEL SimpleName: result", "DEL SimpleName: MetaDataMutationResult", "DEL VariableDeclarationStatement", "DEL SimpleName: table", "DEL QualifiedName: MutationCode.TABLE_NOT_FOUND", "DEL SimpleName: tenantId", "DEL SimpleName: tableName", "DEL QualifiedName: MutationCode.TABLE_ALREADY_EXISTS", "DEL SimpleName: result", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: schemaName", "DEL SimpleName: schemaName", "DEL Block", "DEL CatchClause", "DEL InfixExpression: !=", "DEL ClassInstanceCreation", "DEL SimpleName: currentTime", "DEL ReturnStatement", "DEL IfStatement", "DEL SimpleName: getEnvironment", "DEL NullLiteral", "DEL SimpleName: MetaDataMutationResult", "DEL SimpleName: env", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: throwIOException", "DEL SimpleName: ServerUtil", "DEL IfStatement", "DEL SimpleName: getTableName", "DEL SimpleType: RegionCoprocessorEnvironment", "DEL Block", "DEL TryStatement", "DEL Dimension", "DEL VariableDeclarationFragment", "DEL PrimitiveType: long", "DEL NullLiteral", "DEL Block", "DEL SingleVariableDeclaration", "DEL ArrayType: byte[]", "DEL ReturnStatement", "DEL SingleVariableDeclaration", "DEL MethodInvocation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL Modifier: public", "DEL Block", "DEL SimpleName: clearCache", "DEL PrimitiveType: void"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: getVersion", "DEL SimpleName: RegionCoprocessorEnvironment", "DEL SimpleName: getEnvironment", "DEL SimpleName: env", "DEL Modifier: public", "DEL MethodDeclaration", "DEL SimpleType: RegionCoprocessorEnvironment", "DEL SimpleName: version", "DEL ReturnStatement", "DEL PrimitiveType: long"]}, {"root": "DEL SimpleType: MetaDataMutationResult", "operations": ["DEL SimpleType: MetaDataMutationResult"]}, {"root": "DEL SimpleName: updateIndexState", "operations": ["DEL SimpleName: updateIndexState"]}, {"root": "DEL ArrayAccess", "operations": ["DEL QualifiedName: PhoenixDatabaseMetaData.SCHEMA_NAME_INDEX", "DEL ArrayAccess", "DEL SimpleName: rowKeyMetaData"]}, {"root": "DEL ArrayAccess", "operations": ["DEL SimpleName: rowKeyMetaData", "DEL ArrayAccess", "DEL QualifiedName: PhoenixDatabaseMetaData.TABLE_NAME_INDEX"]}, {"root": "DEL SimpleType: RegionCoprocessorEnvironment", "operations": ["DEL SimpleType: RegionCoprocessorEnvironment"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: result"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL BooleanLiteral: true", "operations": ["DEL BooleanLiteral: true"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: MetaDataMutationResult", "DEL QualifiedName: MutationCode.TABLE_NOT_FOUND", "DEL ReturnStatement", "DEL NullLiteral", "DEL SimpleType: MetaDataMutationResult"]}, {"root": "DEL ReturnStatement", "operations": ["DEL NullLiteral", "DEL ClassInstanceCreation", "DEL QualifiedName: MutationCode.UNALLOWED_TABLE_MUTATION", "DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL QualifiedName: MutationCode.UNALLOWED_TABLE_MUTATION", "DEL ClassInstanceCreation", "DEL NullLiteral", "DEL ReturnStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL ThisExpression", "DEL SimpleName: getEnvironment"]}, {"root": "DEL ReturnStatement", "operations": ["DEL QualifiedName: MutationCode.TABLE_ALREADY_EXISTS", "DEL SimpleName: MetaDataMutationResult", "DEL SimpleName: currentTime", "DEL ClassInstanceCreation", "DEL SimpleType: MetaDataMutationResult", "DEL ReturnStatement", "DEL NullLiteral"]}, {"root": "DEL SimpleName: lid", "operations": ["DEL SimpleName: lid"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL NullLiteral", "DEL ReturnStatement"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL ThrowStatement", "DEL PrimitiveType: void", "DEL Modifier: public", "DEL MethodDeclaration", "DEL SimpleType: DataInput", "DEL Block", "DEL SimpleName: UnsupportedOperationException", "DEL ClassInstanceCreation", "DEL SimpleName: arg0", "DEL SimpleType: UnsupportedOperationException", "DEL SimpleName: readFields", "DEL SimpleName: DataInput"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL PrimitiveType: void", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: IOException", "DEL Block", "DEL SimpleName: DataOutput", "DEL SimpleType: DataOutput", "DEL SimpleName: write", "DEL SimpleName: arg0", "DEL SimpleType: UnsupportedOperationException", "DEL SimpleName: UnsupportedOperationException", "DEL ThrowStatement", "DEL Modifier: public", "DEL SimpleType: IOException"]}]}}, {"MetaDataEndpointImpl_diff": {"operations": ["Move ImportDeclaration(67) into CompilationUnit(7497) at 43", "Move ImportDeclaration(69) into CompilationUnit(7497) at 45", "Insert ImportDeclaration(83) into CompilationUnit(7497) at 41", "Insert ImportDeclaration(85) into CompilationUnit(7497) at 42", "Insert ImportDeclaration(105) into CompilationUnit(7497) at 52", "Insert ImportDeclaration(127) into CompilationUnit(7497) at 63", "Insert ImportDeclaration(137) into CompilationUnit(7497) at 68", "Insert ImportDeclaration(139) into CompilationUnit(7497) at 69", "Insert ImportDeclaration(141) into CompilationUnit(7497) at 70", "Insert ImportDeclaration(143) into CompilationUnit(7497) at 71", "Insert ImportDeclaration(145) into CompilationUnit(7497) at 72", "Insert ImportDeclaration(147) into CompilationUnit(7497) at 73", "Insert ImportDeclaration(149) into CompilationUnit(7497) at 74", "Insert ImportDeclaration(151) into CompilationUnit(7497) at 75", "Insert ImportDeclaration(153) into CompilationUnit(7497) at 76", "Insert ImportDeclaration(155) into CompilationUnit(7497) at 77", "Insert ImportDeclaration(157) into CompilationUnit(7497) at 78", "Insert ImportDeclaration(159) into CompilationUnit(7497) at 79", "Insert ImportDeclaration(163) into CompilationUnit(7497) at 81", "Insert ImportDeclaration(219) into CompilationUnit(7497) at 109", "Insert ImportDeclaration(221) into CompilationUnit(7497) at 110", "Insert ImportDeclaration(223) into CompilationUnit(7497) at 111", "Move SimpleType: BaseEndpointCoprocessor(200) into TypeDeclaration: class(7496) at 5", "Move MethodDeclaration(5963) into TypeDeclaration: class(7496) at 53", "Move MethodDeclaration(6282) into TypeDeclaration: class(7496) at 55", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(82) into ImportDeclaration(83) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.Coprocessor(84) into ImportDeclaration(85) at 0", "Update QualifiedName: java.io.DataInput(66) to org.apache.hadoop.hbase.CoprocessorEnvironment", "Update QualifiedName: java.io.DataOutput(68) to org.apache.hadoop.hbase.KeyValue.Type", "Insert QualifiedName: org.apache.hadoop.hbase.coprocessor.CoprocessorException(104) into ImportDeclaration(105) at 0", "Update QualifiedName: org.apache.hadoop.hbase.coprocessor.BaseEndpointCoprocessor(100) to org.apache.hadoop.hbase.coprocessor.CoprocessorService", "Insert QualifiedName: org.apache.hadoop.hbase.regionserver.HRegion.RowLock(126) into ImportDeclaration(127) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos(136) into ImportDeclaration(137) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.AddColumnRequest(138) into ImportDeclaration(139) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.ClearCacheRequest(140) into ImportDeclaration(141) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.ClearCacheResponse(142) into ImportDeclaration(143) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.CreateTableRequest(144) into ImportDeclaration(145) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.DropColumnRequest(146) into ImportDeclaration(147) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.DropTableRequest(148) into ImportDeclaration(149) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.GetTableRequest(150) into ImportDeclaration(151) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.GetVersionRequest(152) into ImportDeclaration(153) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.GetVersionResponse(154) into ImportDeclaration(155) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataResponse(156) into ImportDeclaration(157) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.UpdateIndexStateRequest(158) into ImportDeclaration(159) at 0", "Insert QualifiedName: org.apache.phoenix.protobuf.ProtobufUtil(162) into ImportDeclaration(163) at 0", "Insert QualifiedName: com.google.protobuf.RpcCallback(218) into ImportDeclaration(219) at 0", "Insert QualifiedName: com.google.protobuf.RpcController(220) into ImportDeclaration(221) at 0", "Insert QualifiedName: com.google.protobuf.Service(222) into ImportDeclaration(223) at 0", "Insert SimpleType: CoprocessorService(242) into TypeDeclaration: class(7496) at 4", "Update SimpleType: BaseEndpointCoprocessor(200) to Coprocessor", "Insert FieldDeclaration(986) into TypeDeclaration: class(7496) at 54", "Insert MethodDeclaration(1123) into TypeDeclaration: class(7496) at 57", "Insert MethodDeclaration(1133) into TypeDeclaration: class(7496) at 58", "Insert MethodDeclaration(1348) into TypeDeclaration: class(7496) at 59", "Insert MethodDeclaration(3995) into TypeDeclaration: class(7496) at 69", "Insert MethodDeclaration(4681) into TypeDeclaration: class(7496) at 73", "Insert MethodDeclaration(6754) into TypeDeclaration: class(7496) at 79", "Insert MethodDeclaration(6823) into TypeDeclaration: class(7496) at 80", "Insert SimpleName: CoprocessorService(241) into SimpleType: CoprocessorService(242) at 0", "Update SimpleName: BaseEndpointCoprocessor(199) to Coprocessor", "Insert Modifier: private(981) into FieldDeclaration(986) at 0", "Move SimpleType: RegionCoprocessorEnvironment(943) into FieldDeclaration(986) at 1", "Insert VariableDeclarationFragment(985) into FieldDeclaration(986) at 2", "Insert Javadoc(1076) into MethodDeclaration(1110) at 0", "Move MarkerAnnotation(6960) into MethodDeclaration(1110) at 1", "Insert PrimitiveType: void(1080) into MethodDeclaration(1110) at 3", "Insert SimpleName: start(1081) into MethodDeclaration(1110) at 4", "Insert SingleVariableDeclaration(1085) into MethodDeclaration(1110) at 5", "Move SimpleType: IOException(3612) into MethodDeclaration(1110) at 7", "Insert Block(1109) into MethodDeclaration(1110) at 7", "Move MarkerAnnotation(940) into MethodDeclaration(1123) at 0", "Move Modifier: public(2892) into MethodDeclaration(1123) at 1", "Insert PrimitiveType: void(1114) into MethodDeclaration(1123) at 2", "Insert SimpleName: stop(1115) into MethodDeclaration(1123) at 3", "Insert SingleVariableDeclaration(1119) into MethodDeclaration(1123) at 4", "Move SimpleType: IOException(2904) into MethodDeclaration(1123) at 5", "Insert Block(1122) into MethodDeclaration(1123) at 6", "Move MarkerAnnotation(6313) into MethodDeclaration(1133) at 0", "Insert Modifier: public(1126) into MethodDeclaration(1133) at 1", "Insert SimpleType: Service(1128) into MethodDeclaration(1133) at 2", "Insert SimpleName: getService(1129) into MethodDeclaration(1133) at 3", "Insert Block(1132) into MethodDeclaration(1133) at 4", "Move MarkerAnnotation(5965) into MethodDeclaration(1348) at 0", "Insert Modifier: public(1136) into MethodDeclaration(1348) at 1", "Insert PrimitiveType: void(1137) into MethodDeclaration(1348) at 2", "Insert SimpleName: getTable(1138) into MethodDeclaration(1348) at 3", "Insert SingleVariableDeclaration(1142) into MethodDeclaration(1348) at 4", "Insert SingleVariableDeclaration(1146) into MethodDeclaration(1348) at 5", "Insert SingleVariableDeclaration(1153) into MethodDeclaration(1348) at 6", "Insert Block(1347) into MethodDeclaration(1348) at 7", "Move MarkerAnnotation(2891) into MethodDeclaration(3995) at 0", "Insert Modifier: public(3461) into MethodDeclaration(3995) at 1", "Insert PrimitiveType: void(3462) into MethodDeclaration(3995) at 2", "Move SimpleName: createTable(2895) into MethodDeclaration(3995) at 3", "Insert SingleVariableDeclaration(3467) into MethodDeclaration(3995) at 4", "Insert SingleVariableDeclaration(3471) into MethodDeclaration(3995) at 5", "Move SingleVariableDeclaration(2902) into MethodDeclaration(3995) at 6", "Move Block(3298) into MethodDeclaration(3995) at 7", "Move SingleVariableDeclaration(3362) into MethodDeclaration(4048) at 4", "Move MarkerAnnotation(3595) into MethodDeclaration(4681) at 0", "Update Modifier: static(3356) to public", "Move Modifier: static(3356) into MethodDeclaration(4681) at 1", "Move PrimitiveType: void(3357) into MethodDeclaration(4681) at 2", "Update SimpleName: releaseLocks(3358) to dropTable", "Move SimpleName: releaseLocks(3358) into MethodDeclaration(4681) at 3", "Move SingleVariableDeclaration(3369) into MethodDeclaration(4681) at 4", "Insert SingleVariableDeclaration(4271) into MethodDeclaration(4681) at 5", "Insert SingleVariableDeclaration(4278) into MethodDeclaration(4681) at 6", "Insert Block(4680) into MethodDeclaration(4681) at 7", "Insert PrimitiveType: void(5881) into MethodDeclaration(6194) at 2", "Insert SingleVariableDeclaration(5886) into MethodDeclaration(6194) at 4", "Insert SingleVariableDeclaration(5890) into MethodDeclaration(6194) at 5", "Insert Block(6193) into MethodDeclaration(6194) at 7", "Insert PrimitiveType: void(6198) into MethodDeclaration(6710) at 2", "Insert SingleVariableDeclaration(6203) into MethodDeclaration(6710) at 4", "Insert SingleVariableDeclaration(6207) into MethodDeclaration(6710) at 5", "Insert SingleVariableDeclaration(6214) into MethodDeclaration(6710) at 6", "Insert Block(6709) into MethodDeclaration(6710) at 7", "Move MarkerAnnotation(6284) into MethodDeclaration(6754) at 0", "Move Modifier: public(5966) into MethodDeclaration(6754) at 1", "Insert PrimitiveType: void(6714) into MethodDeclaration(6754) at 2", "Insert SimpleName: clearCache(6715) into MethodDeclaration(6754) at 3", "Move SingleVariableDeclaration(5984) into MethodDeclaration(6754) at 4", "Move SingleVariableDeclaration(5987) into MethodDeclaration(6754) at 5", "Insert SingleVariableDeclaration(6730) into MethodDeclaration(6754) at 6", "Insert Block(6753) into MethodDeclaration(6754) at 7", "Move MarkerAnnotation(6943) into MethodDeclaration(6823) at 0", "Insert Modifier: public(6757) into MethodDeclaration(6823) at 1", "Insert PrimitiveType: void(6758) into MethodDeclaration(6823) at 2", "Insert SimpleName: getVersion(6759) into MethodDeclaration(6823) at 3", "Insert SingleVariableDeclaration(6763) into MethodDeclaration(6823) at 4", "Insert SingleVariableDeclaration(6767) into MethodDeclaration(6823) at 5", "Insert SingleVariableDeclaration(6774) into MethodDeclaration(6823) at 6", "Insert Block(6822) into MethodDeclaration(6823) at 7", "Insert PrimitiveType: void(6827) into MethodDeclaration(7388) at 2", "Insert SimpleName: updateIndexState(6828) into MethodDeclaration(7388) at 3", "Insert SingleVariableDeclaration(6832) into MethodDeclaration(7388) at 4", "Insert SingleVariableDeclaration(6836) into MethodDeclaration(7388) at 5", "Insert Block(7387) into MethodDeclaration(7388) at 7", "Insert SimpleName: env(984) into VariableDeclarationFragment(985) at 0", "Insert TagElement(1067) into Javadoc(1076) at 0", "Insert TagElement: @param(1070) into Javadoc(1076) at 1", "Insert TagElement: @throws(1075) into Javadoc(1076) at 2", "Insert SimpleType: CoprocessorEnvironment(1083) into SingleVariableDeclaration(1085) at 0", "Insert SimpleName: env(1084) into SingleVariableDeclaration(1085) at 1", "Insert IfStatement(1108) into Block(1109) at 0", "Insert SimpleType: CoprocessorEnvironment(1117) into SingleVariableDeclaration(1119) at 0", "Insert SimpleName: env(1118) into SingleVariableDeclaration(1119) at 1", "Insert SimpleName: Service(1127) into SimpleType: Service(1128) at 0", "Insert ReturnStatement(1131) into Block(1132) at 0", "Insert SimpleType: RpcController(1140) into SingleVariableDeclaration(1142) at 0", "Insert SimpleName: controller(1141) into SingleVariableDeclaration(1142) at 1", "Insert SimpleType: GetTableRequest(1144) into SingleVariableDeclaration(1146) at 0", "Insert SimpleName: request(1145) into SingleVariableDeclaration(1146) at 1", "Insert ParameterizedType: RpcCallback<MetaDataResponse>(1151) into SingleVariableDeclaration(1153) at 0", "Insert SimpleName: done(1152) into SingleVariableDeclaration(1153) at 1", "Insert VariableDeclarationStatement(1161) into Block(1347) at 0", "Insert VariableDeclarationStatement(1172) into Block(1347) at 1", "Insert VariableDeclarationStatement(1183) into Block(1347) at 2", "Insert VariableDeclarationStatement(1194) into Block(1347) at 3", "Move VariableDeclarationStatement(6004) into Block(1347) at 4", "Insert VariableDeclarationStatement(1213) into Block(1347) at 5", "Insert TryStatement(1346) into Block(1347) at 6", "Update ParameterizedType: List<KeyValue>(1274) to List<Cell>", "Update ArrayType: KeyValue[](1288) to Cell[]", "Insert SimpleType: RpcController(3465) into SingleVariableDeclaration(3467) at 0", "Insert SimpleName: controller(3466) into SingleVariableDeclaration(3467) at 1", "Insert SimpleType: CreateTableRequest(3469) into SingleVariableDeclaration(3471) at 0", "Insert SimpleName: request(3470) into SingleVariableDeclaration(3471) at 1", "Update ParameterizedType: List<Mutation>(2900) to RpcCallback<MetaDataResponse>", "Update SimpleName: tableMetadata(2901) to done", "Insert VariableDeclarationStatement(3486) into Block(3994) at 0", "Update ParameterizedType: List<Integer>(3317) to List<RowLock>", "Update SimpleName: lids(3318) to locks", "Insert SimpleType: RpcController(4265) into SingleVariableDeclaration(4267) at 0", "Update SimpleName: lids(3368) to controller", "Update SimpleType: Integer(3371) to DropTableRequest", "Move SimpleType: Integer(3371) into SingleVariableDeclaration(4271) at 0", "Update SimpleName: lid(3372) to request", "Move SimpleName: lid(3372) into SingleVariableDeclaration(4271) at 1", "Insert ParameterizedType: RpcCallback<MetaDataResponse>(4276) into SingleVariableDeclaration(4278) at 0", "Insert SimpleName: done(4277) into SingleVariableDeclaration(4278) at 1", "Insert VariableDeclarationStatement(4286) into Block(4680) at 0", "Move VariableDeclarationStatement(3625) into Block(4680) at 1", "Insert VariableDeclarationStatement(4307) into Block(4680) at 2", "Insert VariableDeclarationStatement(4314) into Block(4680) at 3", "Insert VariableDeclarationStatement(4321) into Block(4680) at 4", "Insert TryStatement(4679) into Block(4680) at 5", "Update ParameterizedType: List<Integer>(3994) to List<RowLock>", "Update SimpleName: lids(3995) to locks", "Insert VariableDeclarationStatement(4785) into Block(5253) at 3", "Insert SimpleType: RpcController(5884) into SingleVariableDeclaration(5886) at 0", "Insert SimpleName: controller(5885) into SingleVariableDeclaration(5886) at 1", "Insert SimpleType: AddColumnRequest(5888) into SingleVariableDeclaration(5890) at 0", "Insert SimpleName: request(5889) into SingleVariableDeclaration(5890) at 1", "Update ParameterizedType: List<Mutation>(5166) to RpcCallback<MetaDataResponse>", "Update SimpleName: tableMetaData(5167) to done", "Insert TryStatement(6192) into Block(6193) at 0", "Insert SimpleType: RpcController(6201) into SingleVariableDeclaration(6203) at 0", "Insert SimpleName: controller(6202) into SingleVariableDeclaration(6203) at 1", "Insert SimpleType: DropColumnRequest(6205) into SingleVariableDeclaration(6207) at 0", "Insert SimpleName: request(6206) into SingleVariableDeclaration(6207) at 1", "Insert ParameterizedType: RpcCallback<MetaDataResponse>(6212) into SingleVariableDeclaration(6214) at 0", "Insert SimpleName: done(6213) into SingleVariableDeclaration(6214) at 1", "Insert VariableDeclarationStatement(6223) into Block(6709) at 0", "Insert TryStatement(6708) into Block(6709) at 1", "Insert SimpleType: RpcController(6717) into SingleVariableDeclaration(6719) at 0", "Insert SimpleName: controller(6718) into SingleVariableDeclaration(6719) at 1", "Insert SimpleType: ClearCacheRequest(6721) into SingleVariableDeclaration(6723) at 0", "Insert SimpleName: request(6722) into SingleVariableDeclaration(6723) at 1", "Insert ParameterizedType: RpcCallback<ClearCacheResponse>(6728) into SingleVariableDeclaration(6730) at 0", "Insert SimpleName: done(6729) into SingleVariableDeclaration(6730) at 1", "Move VariableDeclarationStatement(6051) into Block(6753) at 0", "Move ExpressionStatement(6309) into Block(6753) at 1", "Insert SimpleType: RpcController(6761) into SingleVariableDeclaration(6763) at 0", "Insert SimpleName: controller(6762) into SingleVariableDeclaration(6763) at 1", "Update SimpleType: Throwable(6080) to GetVersionRequest", "Move SimpleType: Throwable(6080) into SingleVariableDeclaration(6767) at 0", "Update SimpleName: t(6081) to request", "Move SimpleName: t(6081) into SingleVariableDeclaration(6767) at 1", "Insert ParameterizedType: RpcCallback<GetVersionResponse>(6772) into SingleVariableDeclaration(6774) at 0", "Insert SimpleName: done(6773) into SingleVariableDeclaration(6774) at 1", "Move VariableDeclarationStatement(6305) into Block(6822) at 0", "Move VariableDeclarationStatement(6328) into Block(6822) at 1", "Move ExpressionStatement(6348) into Block(6822) at 2", "Insert ExpressionStatement(6814) into Block(6822) at 3", "Insert ExpressionStatement(6821) into Block(6822) at 4", "Insert SimpleType: RpcController(6830) into SingleVariableDeclaration(6832) at 0", "Insert SimpleName: controller(6831) into SingleVariableDeclaration(6832) at 1", "Insert SimpleType: UpdateIndexStateRequest(6834) into SingleVariableDeclaration(6836) at 0", "Insert SimpleName: request(6835) into SingleVariableDeclaration(6836) at 1", "Update ParameterizedType: List<Mutation>(6363) to RpcCallback<MetaDataResponse>", "Update SimpleName: tableMetadata(6364) to done", "Insert VariableDeclarationStatement(6851) into Block(7387) at 0", "Move VariableDeclarationStatement(6404) into Block(7387) at 1", "Move VariableDeclarationStatement(6413) into Block(7387) at 2", "Move TryStatement(6833) into Block(7387) at 3", "Insert TextElement: Stores a reference to the coprocessor environment provided by the(1058) into TagElement(1067) at 0", "Insert TagElement: @link(1060) into TagElement(1067) at 1", "Insert TextElement:  from the region where this(1061) into TagElement(1067) at 2", "Insert TextElement: coprocessor is loaded. Since this is a coprocessor endpoint, it always expects to be loaded(1062) into TagElement(1067) at 3", "Insert TextElement: on a table region, so always expects this to be an instance of(1063) into TagElement(1067) at 4", "Insert TagElement: @link(1065) into TagElement(1067) at 5", "Insert TextElement: .(1066) into TagElement(1067) at 6", "Insert SimpleName: env(1068) into TagElement: @param(1070) at 0", "Insert TextElement:  the environment provided by the coprocessor host(1069) into TagElement: @param(1070) at 1", "Insert SimpleName: IOException(1071) into TagElement: @throws(1075) at 0", "Insert TextElement:  if the provided environment is not an instance of(1072) into TagElement: @throws(1075) at 1", "Insert TagElement: @code(1074) into TagElement: @throws(1075) at 2", "Insert SimpleName: CoprocessorEnvironment(1082) into SimpleType: CoprocessorEnvironment(1083) at 0", "Insert InstanceofExpression(1091) into IfStatement(1108) at 0", "Insert Block(1101) into IfStatement(1108) at 1", "Insert Block(1107) into IfStatement(1108) at 2", "Insert SimpleName: CoprocessorEnvironment(1116) into SimpleType: CoprocessorEnvironment(1117) at 0", "Insert ThisExpression(1130) into ReturnStatement(1131) at 0", "Insert SimpleName: RpcController(1139) into SimpleType: RpcController(1140) at 0", "Insert SimpleName: GetTableRequest(1143) into SimpleType: GetTableRequest(1144) at 0", "Insert SimpleType: RpcCallback(1148) into ParameterizedType: RpcCallback<MetaDataResponse>(1151) at 0", "Insert SimpleType: MetaDataResponse(1150) into ParameterizedType: RpcCallback<MetaDataResponse>(1151) at 1", "Insert SimpleType: MetaDataResponse.Builder(1155) into VariableDeclarationStatement(1161) at 0", "Insert VariableDeclarationFragment(1160) into VariableDeclarationStatement(1161) at 1", "Insert ArrayType: byte[](1164) into VariableDeclarationStatement(1172) at 0", "Insert VariableDeclarationFragment(1171) into VariableDeclarationStatement(1172) at 1", "Insert ArrayType: byte[](1175) into VariableDeclarationStatement(1183) at 0", "Insert VariableDeclarationFragment(1182) into VariableDeclarationStatement(1183) at 1", "Move ArrayType: byte[](1745) into VariableDeclarationStatement(1194) at 0", "Insert VariableDeclarationFragment(1193) into VariableDeclarationStatement(1194) at 1", "Insert PrimitiveType: long(1207) into VariableDeclarationStatement(1213) at 0", "Insert VariableDeclarationFragment(1212) into VariableDeclarationStatement(1213) at 1", "Insert Block(1319) into TryStatement(1346) at 0", "Insert CatchClause(1345) into TryStatement(1346) at 1", "Move ParameterizedType: Map<ImmutableBytesPtr,PTable>(1002) into VariableDeclarationStatement(1391) at 0", "Update SimpleType: Integer(6188) to RowLock", "Insert ParameterizedType: Map<ImmutableBytesPtr,PTable>(1567) into VariableDeclarationStatement(1578) at 0", "Update SimpleType: KeyValue(1273) to List", "Insert SimpleType: Cell(1838) into ParameterizedType: List<Cell>(1839) at 1", "Update SimpleType: KeyValue(1286) to Cell", "Update SimpleType: KeyValue(1425) to Cell", "Update SimpleType: KeyValue(1455) to Cell", "Update SimpleType: KeyValue(1485) to Cell", "Update SimpleType: KeyValue(1509) to Cell", "Update SimpleType: KeyValue(1535) to Cell", "Update SimpleType: KeyValue(1575) to Cell", "Update SimpleType: KeyValue(1608) to Cell", "Update ParameterizedType: List<KeyValue>(1685) to List<Cell>", "Update ArrayType: KeyValue[](1707) to Cell[]", "Update ArrayType: KeyValue[](1722) to Cell[]", "Update SimpleType: KeyValue(1735) to Cell", "Insert ArrayType: byte[](2310) into VariableDeclarationStatement(2316) at 0", "Update SimpleType: KeyValue(1999) to Cell", "Update SimpleType: KeyValue(2022) to Cell", "Update SimpleType: KeyValue(2046) to Cell", "Update SimpleType: KeyValue(2070) to Cell", "Update SimpleType: KeyValue(2099) to Cell", "Update SimpleType: KeyValue(2132) to Cell", "Update SimpleType: KeyValue(2161) to Cell", "Update SimpleType: KeyValue(2189) to Cell", "Update SimpleType: KeyValue(2221) to Cell", "Update SimpleType: KeyValue(2250) to Cell", "Update SimpleType: KeyValue(2283) to Cell", "Update SimpleType: KeyValue(2315) to Cell", "Update SimpleType: KeyValue(2347) to Cell", "Update ParameterizedType: List<KeyValue>(2672) to List<Cell>", "Insert SimpleName: RpcController(3464) into SimpleType: RpcController(3465) at 0", "Insert SimpleName: CreateTableRequest(3468) into SimpleType: CreateTableRequest(3469) at 0", "Update SimpleType: List(2897) to RpcCallback", "Update SimpleType: Mutation(2899) to MetaDataResponse", "Insert SimpleType: MetaDataResponse.Builder(3480) into VariableDeclarationStatement(3486) at 0", "Insert VariableDeclarationFragment(3485) into VariableDeclarationStatement(3486) at 1", "Move VariableDeclarationStatement(3020) into Block(3966) at 0", "Move SimpleType: List(3991) into ParameterizedType: List<RowLock>(4013) at 0", "Update SimpleType: List(3314) to RowLock", "Update SimpleType: Integer(3323) to RowLock", "Update SimpleName: Integer(3365) to RpcController", "Move SimpleName: Integer(3365) into SimpleType: RpcController(4265) at 0", "Update SimpleName: Integer(3370) to DropTableRequest", "Insert SimpleType: RpcCallback(4273) into ParameterizedType: RpcCallback<MetaDataResponse>(4276) at 0", "Insert SimpleType: MetaDataResponse(4275) into ParameterizedType: RpcCallback<MetaDataResponse>(4276) at 1", "Insert SimpleType: MetaDataResponse.Builder(4280) into VariableDeclarationStatement(4286) at 0", "Insert VariableDeclarationFragment(4285) into VariableDeclarationStatement(4286) at 1", "Move SimpleType: String(3608) into VariableDeclarationStatement(4307) at 0", "Insert VariableDeclarationFragment(4306) into VariableDeclarationStatement(4307) at 1", "Insert ArrayType: byte[](4310) into VariableDeclarationStatement(4314) at 0", "Insert VariableDeclarationFragment(4313) into VariableDeclarationStatement(4314) at 1", "Move ArrayType: byte[](4317) into VariableDeclarationStatement(4321) at 0", "Insert VariableDeclarationFragment(4320) into VariableDeclarationStatement(4321) at 1", "Insert Block(4652) into TryStatement(4679) at 0", "Move CatchClause(3944) into TryStatement(4679) at 1", "Update SimpleType: Integer(3993) to List", "Insert SimpleType: RowLock(4727) into ParameterizedType: List<RowLock>(4728) at 1", "Insert ParameterizedType: Map<ImmutableBytesPtr,PTable>(4774) into VariableDeclarationStatement(4785) at 0", "Move VariableDeclarationFragment(4057) into VariableDeclarationStatement(4785) at 1", "Update ParameterizedType: List<KeyValue>(4178) to List<Cell>", "Update SimpleType: KeyValue(4205) to Cell", "Update ParameterizedType: List<Integer>(4563) to List<RowLock>", "Update SimpleName: lids(4564) to locks", "Insert SimpleName: RpcController(5883) into SimpleType: RpcController(5884) at 0", "Insert SimpleName: AddColumnRequest(5887) into SimpleType: AddColumnRequest(5888) at 0", "Update SimpleType: List(5163) to RpcCallback", "Update SimpleType: Mutation(5165) to MetaDataResponse", "Move Block(5423) into TryStatement(6192) at 0", "Insert CatchClause(6191) into TryStatement(6192) at 1", "Insert SimpleName: RpcController(6200) into SimpleType: RpcController(6201) at 0", "Insert SimpleName: DropColumnRequest(6204) into SimpleType: DropColumnRequest(6205) at 0", "Insert SimpleType: RpcCallback(6209) into ParameterizedType: RpcCallback<MetaDataResponse>(6212) at 0", "Insert SimpleType: MetaDataResponse(6211) into ParameterizedType: RpcCallback<MetaDataResponse>(6212) at 1", "Insert ParameterizedType: List<Mutation>(6219) into VariableDeclarationStatement(6223) at 0", "Insert VariableDeclarationFragment(6222) into VariableDeclarationStatement(6223) at 1", "Move Block(5891) into TryStatement(6708) at 0", "Insert CatchClause(6707) into TryStatement(6708) at 1", "Insert SimpleName: RpcController(6716) into SimpleType: RpcController(6717) at 0", "Insert SimpleName: ClearCacheRequest(6720) into SimpleType: ClearCacheRequest(6721) at 0", "Insert SimpleType: RpcCallback(6725) into ParameterizedType: RpcCallback<ClearCacheResponse>(6728) at 0", "Insert SimpleType: ClearCacheResponse(6727) into ParameterizedType: RpcCallback<ClearCacheResponse>(6728) at 1", "Move ParameterizedType: Map<ImmutableBytesPtr,PTable>(6772) into VariableDeclarationStatement(6748) at 0", "Update SimpleName: MetaDataMutationResult(6064) to RpcController", "Move SimpleName: MetaDataMutationResult(6064) into SimpleType: RpcController(6761) at 0", "Update SimpleName: Throwable(6079) to GetVersionRequest", "Insert SimpleType: RpcCallback(6769) into ParameterizedType: RpcCallback<GetVersionResponse>(6772) at 0", "Insert SimpleType: GetVersionResponse(6771) into ParameterizedType: RpcCallback<GetVersionResponse>(6772) at 1", "Insert SimpleType: GetVersionResponse.Builder(6776) into VariableDeclarationStatement(6782) at 0", "Insert MethodInvocation(6813) into ExpressionStatement(6814) at 0", "Insert MethodInvocation(6820) into ExpressionStatement(6821) at 0", "Update SimpleName: MetaDataMutationResult(6356) to RpcController", "Move SimpleName: MetaDataMutationResult(6356) into SimpleType: RpcController(6830) at 0", "Insert SimpleName: UpdateIndexStateRequest(6833) into SimpleType: UpdateIndexStateRequest(6834) at 0", "Update SimpleType: List(6360) to RpcCallback", "Update SimpleType: Mutation(6362) to MetaDataResponse", "Insert SimpleType: MetaDataResponse.Builder(6845) into VariableDeclarationStatement(6851) at 0", "Insert VariableDeclarationFragment(6850) into VariableDeclarationStatement(6851) at 1", "Insert QualifiedName: org.apache.hadoop.hbase.regionserver.RegionCoprocessorHost(1059) into TagElement: @link(1060) at 0", "Insert SimpleName: RegionCoprocessorEnvironment(1064) into TagElement: @link(1065) at 0", "Insert TextElement:  RegionCoprocessorEnvironment(1073) into TagElement: @code(1074) at 0", "Insert SimpleName: env(1088) into InstanceofExpression(1091) at 0", "Move SimpleType: RegionCoprocessorEnvironment(3015) into InstanceofExpression(1091) at 1", "Insert ExpressionStatement(1100) into Block(1101) at 0", "Insert ThrowStatement(1106) into Block(1107) at 0", "Insert SimpleName: RpcCallback(1147) into SimpleType: RpcCallback(1148) at 0", "Update SimpleName: MetaDataMutationResult(2893) to MetaDataResponse", "Move SimpleName: MetaDataMutationResult(2893) into SimpleType: MetaDataResponse(1150) at 0", "Insert QualifiedName: MetaDataResponse.Builder(1154) into SimpleType: MetaDataResponse.Builder(1155) at 0", "Insert SimpleName: builder(1156) into VariableDeclarationFragment(1160) at 0", "Insert MethodInvocation(1159) into VariableDeclarationFragment(1160) at 1", "Insert PrimitiveType: byte(1162) into ArrayType: byte[](1164) at 0", "Insert Dimension(1163) into ArrayType: byte[](1164) at 1", "Insert SimpleName: tenantId(1165) into VariableDeclarationFragment(1171) at 0", "Insert MethodInvocation(1170) into VariableDeclarationFragment(1171) at 1", "Insert PrimitiveType: byte(1173) into ArrayType: byte[](1175) at 0", "Insert Dimension(1174) into ArrayType: byte[](1175) at 1", "Insert SimpleName: schemaName(1176) into VariableDeclarationFragment(1182) at 0", "Insert MethodInvocation(1181) into VariableDeclarationFragment(1182) at 1", "Insert SimpleName: tableName(1187) into VariableDeclarationFragment(1193) at 0", "Insert MethodInvocation(1192) into VariableDeclarationFragment(1193) at 1", "Insert SimpleName: tableTimeStamp(1208) into VariableDeclarationFragment(1212) at 0", "Insert MethodInvocation(1211) into VariableDeclarationFragment(1212) at 1", "Move VariableDeclarationStatement(6019) into Block(1319) at 0", "Move VariableDeclarationStatement(6028) into Block(1319) at 1", "Insert IfStatement(1244) into Block(1319) at 2", "Move VariableDeclarationStatement(6042) into Block(1319) at 3", "Insert VariableDeclarationStatement(1262) into Block(1319) at 4", "Insert IfStatement(1285) into Block(1319) at 5", "Insert ExpressionStatement(1290) into Block(1319) at 6", "Insert ExpressionStatement(1295) into Block(1319) at 7", "Insert IfStatement(1310) into Block(1319) at 8", "Insert ExpressionStatement(1317) into Block(1319) at 9", "Insert ReturnStatement(1318) into Block(1319) at 10", "Insert SingleVariableDeclaration(1323) into CatchClause(1345) at 0", "Insert Block(1344) into CatchClause(1345) at 1", "Update SimpleName: Integer(6187) to RowLock", "Update SimpleName: lid(6189) to rowLock", "Update SimpleName: lid(6198) to rowLock", "Insert ExpressionStatement(1513) into Block(1514) at 0", "Insert SimpleType: Map(1562) into ParameterizedType: Map<ImmutableBytesPtr,PTable>(1567) at 0", "Insert SimpleType: ImmutableBytesPtr(1564) into ParameterizedType: Map<ImmutableBytesPtr,PTable>(1567) at 1", "Insert SimpleType: PTable(1566) into ParameterizedType: Map<ImmutableBytesPtr,PTable>(1567) at 2", "Update SimpleName: KeyValue(1272) to List", "Insert SimpleName: Cell(1837) into SimpleType: Cell(1838) at 0", "Update SimpleName: KeyValue(1285) to Cell", "Insert VariableDeclarationStatement(1892) into Block(1958) at 0", "Update SimpleName: KeyValue(1424) to Cell", "Update SimpleName: KeyValue(1454) to Cell", "Update SimpleName: KeyValue(1484) to Cell", "Update SimpleName: KeyValue(1508) to Cell", "Update SimpleName: KeyValue(1534) to Cell", "Update SimpleName: KeyValue(1574) to Cell", "Update SimpleName: KeyValue(1607) to Cell", "Update SimpleType: KeyValue(1684) to Cell", "Update SimpleType: KeyValue(1705) to Cell", "Update SimpleType: KeyValue(1720) to Cell", "Update SimpleName: KeyValue(1734) to Cell", "Insert PrimitiveType: byte(2308) into ArrayType: byte[](2310) at 0", "Insert Dimension(2309) into ArrayType: byte[](2310) at 1", "Move VariableDeclarationStatement(1327) into Block(2537) at 0", "Update SimpleName: KeyValue(1998) to Cell", "Update SimpleName: KeyValue(2021) to Cell", "Update SimpleName: KeyValue(2045) to Cell", "Update SimpleName: KeyValue(2069) to Cell", "Update SimpleName: KeyValue(2098) to Cell", "Update SimpleName: KeyValue(2131) to Cell", "Update SimpleName: KeyValue(2160) to Cell", "Update SimpleName: KeyValue(2188) to Cell", "Update SimpleName: KeyValue(2220) to Cell", "Update SimpleName: KeyValue(2249) to Cell", "Update SimpleName: KeyValue(2282) to Cell", "Update SimpleName: KeyValue(2314) to Cell", "Update SimpleName: KeyValue(2346) to Cell", "Update SimpleType: KeyValue(2671) to Cell", "Update SimpleName: List(2896) to RpcCallback", "Update SimpleName: Mutation(2898) to MetaDataResponse", "Insert QualifiedName: MetaDataResponse.Builder(3479) into SimpleType: MetaDataResponse.Builder(3480) at 0", "Insert SimpleName: builder(3481) into VariableDeclarationFragment(3485) at 0", "Insert MethodInvocation(3484) into VariableDeclarationFragment(3485) at 1", "Insert NullLiteral(3504) into VariableDeclarationFragment(3505) at 1", "Insert NullLiteral(3511) into VariableDeclarationFragment(3512) at 1", "Move ExpressionStatement(2923) into Block(3966) at 1", "Move VariableDeclarationStatement(2932) into Block(3966) at 2", "Insert ExpressionStatement(3546) into Block(3966) at 3", "Insert ExpressionStatement(3552) into Block(3966) at 4", "Update SimpleName: List(3313) to RowLock", "Update SimpleName: Integer(3322) to RowLock", "Update SimpleName: lid(3324) to rowLock", "Update SimpleName: lid(3333) to rowLock", "Update SimpleName: lids(3348) to locks", "Update SimpleName: lid(3350) to rowLock", "Insert SimpleName: RpcCallback(4272) into SimpleType: RpcCallback(4273) at 0", "Insert SimpleName: MetaDataResponse(4274) into SimpleType: MetaDataResponse(4275) at 0", "Insert QualifiedName: MetaDataResponse.Builder(4279) into SimpleType: MetaDataResponse.Builder(4280) at 0", "Insert SimpleName: builder(4281) into VariableDeclarationFragment(4285) at 0", "Insert MethodInvocation(4284) into VariableDeclarationFragment(4285) at 1", "Insert SimpleName: tableType(4302) into VariableDeclarationFragment(4306) at 0", "Insert MethodInvocation(4305) into VariableDeclarationFragment(4306) at 1", "Insert PrimitiveType: byte(4308) into ArrayType: byte[](4310) at 0", "Insert Dimension(4309) into ArrayType: byte[](4310) at 1", "Insert SimpleName: schemaName(4311) into VariableDeclarationFragment(4313) at 0", "Insert NullLiteral(4312) into VariableDeclarationFragment(4313) at 1", "Insert SimpleName: tableName(4318) into VariableDeclarationFragment(4320) at 0", "Insert NullLiteral(4319) into VariableDeclarationFragment(4320) at 1", "Insert VariableDeclarationStatement(4333) into Block(4652) at 0", "Move ExpressionStatement(3631) into Block(4652) at 1", "Move VariableDeclarationStatement(3640) into Block(4652) at 2", "Insert ExpressionStatement(4354) into Block(4652) at 3", "Insert ExpressionStatement(4360) into Block(4652) at 4", "Insert IfStatement(4388) into Block(4652) at 5", "Move VariableDeclarationStatement(3687) into Block(4652) at 6", "Move VariableDeclarationStatement(3697) into Block(4652) at 7", "Move VariableDeclarationStatement(3709) into Block(4652) at 8", "Move VariableDeclarationStatement(3721) into Block(4652) at 9", "Move VariableDeclarationStatement(3738) into Block(4652) at 10", "Move VariableDeclarationStatement(3753) into Block(4652) at 11", "Move VariableDeclarationStatement(3762) into Block(4652) at 12", "Move IfStatement(3769) into Block(4652) at 13", "Move VariableDeclarationStatement(3781) into Block(4652) at 14", "Move TryStatement(3925) into Block(4652) at 15", "Update SimpleName: Integer(3992) to List", "Insert SimpleName: RowLock(4726) into SimpleType: RowLock(4727) at 0", "Insert SimpleType: Map(4769) into ParameterizedType: Map<ImmutableBytesPtr,PTable>(4774) at 0", "Insert SimpleType: ImmutableBytesPtr(4771) into ParameterizedType: Map<ImmutableBytesPtr,PTable>(4774) at 1", "Insert SimpleType: PTable(4773) into ParameterizedType: Map<ImmutableBytesPtr,PTable>(4774) at 2", "Move SimpleType: List(3046) into ParameterizedType: List<Cell>(4905) at 0", "Update SimpleType: List(4175) to Cell", "Update SimpleName: KeyValue(4204) to Cell", "Update SimpleType: Integer(4562) to List", "Insert SimpleType: RowLock(5292) into ParameterizedType: List<RowLock>(5293) at 1", "Update SimpleName: List(5162) to RpcCallback", "Update SimpleName: Mutation(5164) to MetaDataResponse", "Insert VariableDeclarationStatement(5909) into Block(6179) at 0", "Insert VariableDeclarationStatement(6165) into Block(6179) at 1", "Insert IfStatement(6178) into Block(6179) at 2", "Insert SingleVariableDeclaration(6183) into CatchClause(6191) at 0", "Insert Block(6190) into CatchClause(6191) at 1", "Insert SimpleName: RpcCallback(6208) into SimpleType: RpcCallback(6209) at 0", "Insert SimpleName: MetaDataResponse(6210) into SimpleType: MetaDataResponse(6211) at 0", "Move SimpleType: List(5432) into ParameterizedType: List<Mutation>(6219) at 0", "Move SimpleType: Mutation(5434) into ParameterizedType: List<Mutation>(6219) at 1", "Insert SimpleName: tableMetaData(6220) into VariableDeclarationFragment(6222) at 0", "Insert NullLiteral(6221) into VariableDeclarationFragment(6222) at 1", "Insert ExpressionStatement(6230) into Block(6695) at 0", "Insert VariableDeclarationStatement(6681) into Block(6695) at 3", "Insert IfStatement(6694) into Block(6695) at 4", "Insert SingleVariableDeclaration(6699) into CatchClause(6707) at 0", "Insert Block(6706) into CatchClause(6707) at 1", "Update SimpleName: IOException(5991) to RpcCallback", "Move SimpleName: IOException(5991) into SimpleType: RpcCallback(6725) at 0", "Update SimpleName: RegionCoprocessorEnvironment(6005) to ClearCacheResponse", "Move SimpleName: RegionCoprocessorEnvironment(6005) into SimpleType: ClearCacheResponse(6727) at 0", "Update SimpleName: table(6045) to metaDataCache", "Insert MethodInvocation(6746) into VariableDeclarationFragment(6747) at 1", "Insert SimpleName: RpcCallback(6768) into SimpleType: RpcCallback(6769) at 0", "Insert SimpleName: GetVersionResponse(6770) into SimpleType: GetVersionResponse(6771) at 0", "Insert QualifiedName: GetVersionResponse.Builder(6775) into SimpleType: GetVersionResponse.Builder(6776) at 0", "Update SimpleName: metaDataCache(6295) to builder", "Insert MethodInvocation(6780) into VariableDeclarationFragment(6781) at 1", "Insert SimpleName: builder(6810) into MethodInvocation(6813) at 0", "Insert SimpleName: setVersion(6811) into MethodInvocation(6813) at 1", "Insert SimpleName: version(6812) into MethodInvocation(6813) at 2", "Insert SimpleName: done(6815) into MethodInvocation(6820) at 0", "Insert SimpleName: run(6816) into MethodInvocation(6820) at 1", "Insert MethodInvocation(6819) into MethodInvocation(6820) at 2", "Update SimpleName: List(6359) to RpcCallback", "Update SimpleName: Mutation(6361) to MetaDataResponse", "Insert QualifiedName: MetaDataResponse.Builder(6844) into SimpleType: MetaDataResponse.Builder(6845) at 0", "Insert SimpleName: builder(6846) into VariableDeclarationFragment(6850) at 0", "Insert MethodInvocation(6849) into VariableDeclarationFragment(6850) at 1", "Insert NullLiteral(6856) into VariableDeclarationFragment(6857) at 1", "Insert NullLiteral(6863) into VariableDeclarationFragment(6864) at 1", "Move VariableDeclarationStatement(6380) into Block(7359) at 0", "Move ExpressionStatement(6386) into Block(7359) at 2", "Move VariableDeclarationStatement(6395) into Block(7359) at 3", "Insert ExpressionStatement(6911) into Block(7359) at 4", "Insert ExpressionStatement(6917) into Block(7359) at 5", "Insert Assignment: =(1099) into ExpressionStatement(1100) at 0", "Insert ClassInstanceCreation(1105) into ThrowStatement(1106) at 0", "Insert SimpleName: MetaDataResponse(1157) into MethodInvocation(1159) at 0", "Insert SimpleName: newBuilder(1158) into MethodInvocation(1159) at 1", "Insert MethodInvocation(1168) into MethodInvocation(1170) at 0", "Insert SimpleName: toByteArray(1169) into MethodInvocation(1170) at 1", "Insert MethodInvocation(1179) into MethodInvocation(1181) at 0", "Insert SimpleName: toByteArray(1180) into MethodInvocation(1181) at 1", "Insert MethodInvocation(1190) into MethodInvocation(1192) at 0", "Insert SimpleName: toByteArray(1191) into MethodInvocation(1192) at 1", "Insert SimpleName: request(1209) into MethodInvocation(1211) at 0", "Insert SimpleName: getTableTimestamp(1210) into MethodInvocation(1211) at 1", "Insert InfixExpression: !=(1233) into IfStatement(1244) at 0", "Insert Block(1243) into IfStatement(1244) at 1", "Move SimpleType: PTable(6044) into VariableDeclarationStatement(1262) at 0", "Insert VariableDeclarationFragment(1261) into VariableDeclarationStatement(1262) at 1", "Move InfixExpression: ==(6054) into IfStatement(1285) at 0", "Insert Block(1284) into IfStatement(1285) at 1", "Insert MethodInvocation(1289) into ExpressionStatement(1290) at 0", "Insert MethodInvocation(1294) into ExpressionStatement(1295) at 0", "Move InfixExpression: !=(6072) into IfStatement(1310) at 0", "Insert Block(1309) into IfStatement(1310) at 1", "Insert MethodInvocation(1316) into ExpressionStatement(1317) at 0", "Insert SimpleType: Throwable(1321) into SingleVariableDeclaration(1323) at 0", "Insert SimpleName: t(1322) into SingleVariableDeclaration(1323) at 1", "Insert ExpressionStatement(1329) into Block(1344) at 0", "Insert ExpressionStatement(1343) into Block(1344) at 1", "Update SimpleName: getLock(6191) to getRowLock", "Move MethodInvocation(6276) into ExpressionStatement(1513) at 0", "Insert SimpleName: Map(1561) into SimpleType: Map(1562) at 0", "Insert SimpleName: ImmutableBytesPtr(1563) into SimpleType: ImmutableBytesPtr(1564) at 0", "Insert SimpleName: PTable(1565) into SimpleType: PTable(1566) at 0", "Insert SimpleType: Cell(1885) into VariableDeclarationStatement(1892) at 0", "Move VariableDeclarationFragment(1895) into VariableDeclarationStatement(1892) at 1", "Update SimpleType: KeyValue(1329) to Cell", "Update SimpleName: KeyValue(1683) to Cell", "Update SimpleName: KeyValue(1704) to Cell", "Update ArrayType: KeyValue[](1712) to Cell[]", "Update SimpleName: KeyValue(1719) to Cell", "Update ArrayType: KeyValue[](1727) to Cell[]", "Update SimpleName: getBuffer(1748) to getRowArray", "Update SimpleType: KeyValue(1320) to Cell", "Update SimpleType: KeyValue(1898) to Cell", "Update SimpleType: KeyValue(2431) to Cell", "Update SimpleName: KeyValue(2670) to Cell", "Update SimpleType: KeyValue(2676) to Cell", "Update SimpleType: KeyValue(2700) to Cell", "Insert InfixExpression: ==(3279) into IfStatement(3317) at 0", "Insert SimpleName: MetaDataResponse(3482) into MethodInvocation(3484) at 0", "Insert SimpleName: newBuilder(3483) into MethodInvocation(3484) at 1", "Insert ParameterizedType: List<Mutation>(3518) into VariableDeclarationStatement(3525) at 0", "Insert Assignment: =(3545) into ExpressionStatement(3546) at 0", "Insert Assignment: =(3551) into ExpressionStatement(3552) at 0", "Update ParameterizedType: List<Integer>(3049) to List<RowLock>", "Insert ExpressionStatement(3976) into Block(3991) at 0", "Update SimpleName: getLock(3326) to getRowLock", "Update ParameterizedType: List<KeyValue>(3568) to List<Cell>", "Insert SimpleName: MetaDataResponse(4282) into MethodInvocation(4284) at 0", "Insert SimpleName: newBuilder(4283) into MethodInvocation(4284) at 1", "Insert SimpleName: request(4303) into MethodInvocation(4305) at 0", "Insert SimpleName: getTableType(4304) into MethodInvocation(4305) at 1", "Insert ParameterizedType: List<Mutation>(4326) into VariableDeclarationStatement(4333) at 0", "Insert VariableDeclarationFragment(4332) into VariableDeclarationStatement(4333) at 1", "Insert Assignment: =(4353) into ExpressionStatement(4354) at 0", "Insert Assignment: =(4359) into ExpressionStatement(4360) at 0", "Move MethodInvocation(3664) into IfStatement(4388) at 0", "Insert Block(4387) into IfStatement(4388) at 1", "Update ParameterizedType: List<Integer>(3774) to List<RowLock>", "Insert ExpressionStatement(4662) into Block(4677) at 0", "Update SimpleName: RegionCoprocessorEnvironment(4017) to Map", "Move SimpleName: RegionCoprocessorEnvironment(4017) into SimpleType: Map(4769) at 0", "Insert SimpleName: ImmutableBytesPtr(4770) into SimpleType: ImmutableBytesPtr(4771) at 0", "Insert SimpleName: PTable(4772) into SimpleType: PTable(4773) at 0", "Update SimpleName: List(4174) to Cell", "Update SimpleType: KeyValue(4322) to Cell", "Move SingleMemberAnnotation(4457) into VariableDeclarationStatement(5147) at 0", "Move SimpleType: Delete(4459) into VariableDeclarationStatement(5147) at 1", "Move SingleMemberAnnotation(4405) into VariableDeclarationStatement(5198) at 0", "Move SimpleType: Delete(4407) into VariableDeclarationStatement(5198) at 1", "Insert VariableDeclarationFragment(5197) into VariableDeclarationStatement(5198) at 2", "Update SimpleName: Integer(4561) to List", "Insert SimpleName: RowLock(5291) into SimpleType: RowLock(5292) at 0", "Update ParameterizedType: List<Integer>(4682) to List<RowLock>", "Insert ParameterizedType: List<Mutation>(5902) into VariableDeclarationStatement(5909) at 0", "Insert VariableDeclarationFragment(5908) into VariableDeclarationStatement(5909) at 1", "Move SimpleType: MetaDataMutationResult(5160) into VariableDeclarationStatement(6165) at 0", "Insert VariableDeclarationFragment(6164) into VariableDeclarationStatement(6165) at 1", "Insert InfixExpression: !=(6168) into IfStatement(6178) at 0", "Insert Block(6177) into IfStatement(6178) at 1", "Move SimpleType: IOException(6367) into SingleVariableDeclaration(6183) at 0", "Insert SimpleName: ioe(6182) into SingleVariableDeclaration(6183) at 1", "Insert ExpressionStatement(6189) into Block(6190) at 0", "Insert Assignment: =(6229) into ExpressionStatement(6230) at 0", "Move SimpleType: MetaDataMutationResult(5429) into VariableDeclarationStatement(6681) at 0", "Insert VariableDeclarationFragment(6680) into VariableDeclarationStatement(6681) at 1", "Insert InfixExpression: !=(6684) into IfStatement(6694) at 0", "Insert Block(6693) into IfStatement(6694) at 1", "Move SimpleType: IOException(6952) into SingleVariableDeclaration(6699) at 0", "Insert SimpleName: ioe(6698) into SingleVariableDeclaration(6699) at 1", "Insert ExpressionStatement(6705) into Block(6706) at 0", "Insert MethodInvocation(6744) into MethodInvocation(6746) at 0", "Insert SimpleName: getMetaDataCache(6745) into MethodInvocation(6746) at 1", "Update SimpleName: GlobalCache(6296) to GetVersionResponse", "Move SimpleName: GlobalCache(6296) into MethodInvocation(6780) at 0", "Update SimpleName: getInstance(6297) to newBuilder", "Move SimpleName: getInstance(6297) into MethodInvocation(6780) at 1", "Insert SimpleName: builder(6817) into MethodInvocation(6819) at 0", "Insert SimpleName: build(6818) into MethodInvocation(6819) at 1", "Insert SimpleName: MetaDataResponse(6847) into MethodInvocation(6849) at 0", "Insert SimpleName: newBuilder(6848) into MethodInvocation(6849) at 1", "Insert ParameterizedType: List<Mutation>(6883) into VariableDeclarationStatement(6890) at 0", "Insert Assignment: =(6910) into ExpressionStatement(6911) at 0", "Insert Assignment: =(6916) into ExpressionStatement(6917) at 0", "Update ParameterizedType: List<KeyValue>(6478) to List<Cell>", "Update SimpleType: KeyValue(6492) to Cell", "Update SimpleType: Integer(6516) to RowLock", "Insert ExpressionStatement(7369) into Block(7384) at 0", "Insert FieldAccess(1094) into Assignment: =(1099) at 0", "Insert CastExpression(1098) into Assignment: =(1099) at 1", "Insert SimpleType: CoprocessorException(1103) into ClassInstanceCreation(1105) at 0", "Insert StringLiteral: \"Must be loaded on a table region!\"(1104) into ClassInstanceCreation(1105) at 1", "Insert SimpleName: request(1166) into MethodInvocation(1168) at 0", "Insert SimpleName: getTenantId(1167) into MethodInvocation(1168) at 1", "Insert SimpleName: request(1177) into MethodInvocation(1179) at 0", "Insert SimpleName: getSchemaName(1178) into MethodInvocation(1179) at 1", "Insert SimpleName: request(1188) into MethodInvocation(1190) at 0", "Insert SimpleName: getTableName(1189) into MethodInvocation(1190) at 1", "Insert SimpleName: result(1231) into InfixExpression: !=(1233) at 0", "Insert NullLiteral(1232) into InfixExpression: !=(1233) at 1", "Insert ExpressionStatement(1241) into Block(1243) at 0", "Insert ReturnStatement(1242) into Block(1243) at 1", "Insert SimpleName: table(1254) into VariableDeclarationFragment(1261) at 0", "Insert MethodInvocation(1260) into VariableDeclarationFragment(1261) at 1", "Insert ExpressionStatement(1270) into Block(1284) at 0", "Insert ExpressionStatement(1275) into Block(1284) at 1", "Insert ExpressionStatement(1282) into Block(1284) at 2", "Insert ReturnStatement(1283) into Block(1284) at 3", "Insert SimpleName: builder(1286) into MethodInvocation(1289) at 0", "Insert SimpleName: setReturnCode(1287) into MethodInvocation(1289) at 1", "Insert QualifiedName: MetaDataProtos.MutationCode.TABLE_ALREADY_EXISTS(1288) into MethodInvocation(1289) at 2", "Insert SimpleName: builder(1291) into MethodInvocation(1294) at 0", "Insert SimpleName: setMutationTime(1292) into MethodInvocation(1294) at 1", "Insert SimpleName: currentTime(1293) into MethodInvocation(1294) at 2", "Insert ExpressionStatement(1308) into Block(1309) at 0", "Insert SimpleName: done(1311) into MethodInvocation(1316) at 0", "Insert SimpleName: run(1312) into MethodInvocation(1316) at 1", "Insert MethodInvocation(1315) into MethodInvocation(1316) at 2", "Insert SimpleName: Throwable(1320) into SimpleType: Throwable(1321) at 0", "Insert MethodInvocation(1328) into ExpressionStatement(1329) at 0", "Insert MethodInvocation(1342) into ExpressionStatement(1343) at 0", "Insert FieldAccess(1386) into MethodInvocation(1387) at 2", "Update SimpleName: region(6273) to rowLock", "Update SimpleName: releaseRowLock(6274) to release", "Insert FieldAccess(1573) into MethodInvocation(1574) at 2", "Insert SimpleName: Cell(1884) into SimpleType: Cell(1885) at 0", "Update SimpleName: KeyValue(1328) to Cell", "Update SimpleName: getBuffer(1499) to getValueArray", "Update SimpleType: KeyValue(1710) to Cell", "Update SimpleType: KeyValue(1725) to Cell", "Update SimpleName: KeyValue(1319) to Cell", "Update SimpleName: KeyValue(1897) to Cell", "Update SimpleName: getBuffer(2036) to getValueArray", "Update SimpleName: getBuffer(2060) to getValueArray", "Update SimpleName: KeyValue(2430) to Cell", "Update SimpleName: KeyValue(2675) to Cell", "Update SimpleName: KeyValue(2699) to Cell", "Insert MethodInvocation(3275) into InfixExpression: ==(3279) at 0", "Insert MethodInvocation(3278) into InfixExpression: ==(3279) at 1", "Insert FieldAccess(3402) into MethodInvocation(3403) at 2", "Move SimpleType: List(3565) into ParameterizedType: List<Mutation>(3518) at 0", "Insert SimpleType: Mutation(3517) into ParameterizedType: List<Mutation>(3518) at 1", "Update SimpleName: env(3016) to tableMetadata", "Insert SimpleName: schemaName(3541) into Assignment: =(3545) at 0", "Insert ArrayAccess(3544) into Assignment: =(3545) at 1", "Insert SimpleName: tableName(3547) into Assignment: =(3551) at 0", "Insert ArrayAccess(3550) into Assignment: =(3551) at 1", "Insert ExpressionStatement(3643) into Block(3645) at 0", "Insert ReturnStatement(3644) into Block(3645) at 1", "Move SimpleType: List(3771) into ParameterizedType: List<RowLock>(3651) at 0", "Update SimpleType: Integer(3048) to RowLock", "Update SimpleName: lids(3050) to locks", "Insert ExpressionStatement(3944) into Block(3958) at 13", "Insert ExpressionStatement(3949) into Block(3958) at 14", "Insert ExpressionStatement(3956) into Block(3958) at 15", "Insert ReturnStatement(3957) into Block(3958) at 16", "Insert MethodInvocation(3975) into ExpressionStatement(3976) at 0", "Insert MethodInvocation(3989) into ExpressionStatement(3990) at 0", "Update SimpleType: KeyValue(3567) to List", "Insert SimpleType: Cell(4232) into ParameterizedType: List<Cell>(4233) at 1", "Move SimpleType: List(3364) into ParameterizedType: List<Mutation>(4326) at 0", "Move SimpleType: Mutation(3603) into ParameterizedType: List<Mutation>(4326) at 1", "Insert SimpleName: tableMetadata(4327) into VariableDeclarationFragment(4332) at 0", "Insert MethodInvocation(4331) into VariableDeclarationFragment(4332) at 1", "Insert SimpleName: schemaName(4349) into Assignment: =(4353) at 0", "Insert ArrayAccess(4352) into Assignment: =(4353) at 1", "Insert SimpleName: tableName(4355) into Assignment: =(4359) at 0", "Insert ArrayAccess(4358) into Assignment: =(4359) at 1", "Insert ExpressionStatement(4371) into Block(4387) at 0", "Insert ExpressionStatement(4378) into Block(4387) at 1", "Insert ExpressionStatement(4385) into Block(4387) at 2", "Insert ReturnStatement(4386) into Block(4387) at 3", "Insert ExpressionStatement(4479) into Block(4481) at 0", "Insert ReturnStatement(4480) into Block(4481) at 1", "Move SimpleType: List(4560) into ParameterizedType: List<RowLock>(4487) at 0", "Update SimpleType: Integer(3773) to RowLock", "Update SimpleName: lids(3775) to locks", "Insert ExpressionStatement(4642) into Block(4644) at 10", "Insert ReturnStatement(4643) into Block(4644) at 11", "Insert MethodInvocation(4661) into ExpressionStatement(4662) at 0", "Insert MethodInvocation(4675) into ExpressionStatement(4676) at 0", "Insert FieldAccess(4780) into MethodInvocation(4781) at 2", "Update SimpleName: KeyValue(4321) to Cell", "Insert SimpleName: Delete(5130) into SimpleType: Delete(5131) at 0", "Insert SimpleName: delete(5191) into VariableDeclarationFragment(5197) at 0", "Insert ClassInstanceCreation(5196) into VariableDeclarationFragment(5197) at 1", "Update SimpleName: lids(4477) to locks", "Update SimpleType: Integer(4681) to RowLock", "Update SimpleName: lids(4683) to locks", "Move SimpleType: List(1271) into ParameterizedType: List<Mutation>(5902) at 0", "Insert SimpleType: Mutation(5901) into ParameterizedType: List<Mutation>(5902) at 1", "Insert SimpleName: tableMetaData(5903) into VariableDeclarationFragment(5908) at 0", "Insert MethodInvocation(5907) into VariableDeclarationFragment(5908) at 1", "Insert SimpleName: result(5912) into VariableDeclarationFragment(6164) at 0", "Move MethodInvocation(5421) into VariableDeclarationFragment(6164) at 1", "Insert SimpleName: result(6166) into InfixExpression: !=(6168) at 0", "Insert NullLiteral(6167) into InfixExpression: !=(6168) at 1", "Insert ExpressionStatement(6176) into Block(6177) at 0", "Move SimpleName: IOException(5169) into SimpleType: IOException(6181) at 0", "Insert MethodInvocation(6188) into ExpressionStatement(6189) at 0", "Insert SimpleName: tableMetaData(6224) into Assignment: =(6229) at 0", "Insert MethodInvocation(6228) into Assignment: =(6229) at 1", "Insert SimpleName: result(6255) into VariableDeclarationFragment(6680) at 0", "Move MethodInvocation(5889) into VariableDeclarationFragment(6680) at 1", "Insert SimpleName: result(6682) into InfixExpression: !=(6684) at 0", "Insert NullLiteral(6683) into InfixExpression: !=(6684) at 1", "Insert ExpressionStatement(6692) into Block(6693) at 0", "Move SimpleName: IOException(5438) into SimpleType: IOException(6697) at 0", "Insert MethodInvocation(6704) into ExpressionStatement(6705) at 0", "Update SimpleName: doGetTable(6046) to GlobalCache", "Move SimpleName: doGetTable(6046) into MethodInvocation(6744) at 0", "Update SimpleName: key(6047) to getInstance", "Move SimpleName: key(6047) into MethodInvocation(6744) at 1", "Insert FieldAccess(6743) into MethodInvocation(6744) at 2", "Insert FieldAccess(6789) into MethodInvocation(6791) at 0", "Insert SimpleType: List(6880) into ParameterizedType: List<Mutation>(6883) at 0", "Insert SimpleType: Mutation(6882) into ParameterizedType: List<Mutation>(6883) at 1", "Update SimpleName: env(6416) to tableMetadata", "Insert SimpleName: schemaName(6906) into Assignment: =(6910) at 0", "Insert ArrayAccess(6909) into Assignment: =(6910) at 1", "Insert SimpleName: tableName(6912) into Assignment: =(6916) at 0", "Insert ArrayAccess(6915) into Assignment: =(6916) at 1", "Insert ExpressionStatement(6957) into Block(6959) at 0", "Insert ReturnStatement(6958) into Block(6959) at 1", "Update SimpleType: KeyValue(6477) to Cell", "Update SimpleName: KeyValue(6491) to Cell", "Update SimpleName: Integer(6515) to RowLock", "Update SimpleName: lid(6517) to rowLock", "Update SimpleName: lid(6526) to rowLock", "Insert ExpressionStatement(7338) into Block(7352) at 12", "Insert ExpressionStatement(7343) into Block(7352) at 13", "Insert ExpressionStatement(7350) into Block(7352) at 14", "Insert ReturnStatement(7351) into Block(7352) at 15", "Insert MethodInvocation(7368) into ExpressionStatement(7369) at 0", "Insert MethodInvocation(7382) into ExpressionStatement(7383) at 0", "Insert ThisExpression(1092) into FieldAccess(1094) at 0", "Insert SimpleName: env(1093) into FieldAccess(1094) at 1", "Move SimpleType: RegionCoprocessorEnvironment(946) into CastExpression(1098) at 0", "Insert SimpleName: env(1097) into CastExpression(1098) at 1", "Insert SimpleName: CoprocessorException(1102) into SimpleType: CoprocessorException(1103) at 0", "Insert MethodInvocation(1240) into ExpressionStatement(1241) at 0", "Insert SimpleName: doGetTable(1255) into MethodInvocation(1260) at 0", "Insert SimpleName: key(1256) into MethodInvocation(1260) at 1", "Insert MethodInvocation(1259) into MethodInvocation(1260) at 2", "Insert MethodInvocation(1269) into ExpressionStatement(1270) at 0", "Insert MethodInvocation(1274) into ExpressionStatement(1275) at 0", "Insert MethodInvocation(1281) into ExpressionStatement(1282) at 0", "Insert MethodInvocation(1307) into ExpressionStatement(1308) at 0", "Insert SimpleName: builder(1313) into MethodInvocation(1315) at 0", "Insert SimpleName: build(1314) into MethodInvocation(1315) at 1", "Insert SimpleName: logger(1324) into MethodInvocation(1328) at 0", "Insert SimpleName: error(1325) into MethodInvocation(1328) at 1", "Insert StringLiteral: \"getTable failed\"(1326) into MethodInvocation(1328) at 2", "Insert SimpleName: t(1327) into MethodInvocation(1328) at 3", "Insert SimpleName: ProtobufUtil(1330) into MethodInvocation(1342) at 0", "Insert SimpleName: setControllerException(1331) into MethodInvocation(1342) at 1", "Insert SimpleName: controller(1332) into MethodInvocation(1342) at 2", "Insert MethodInvocation(1341) into MethodInvocation(1342) at 3", "Insert ThisExpression(1384) into FieldAccess(1386) at 0", "Insert SimpleName: env(1385) into FieldAccess(1386) at 1", "Insert ThisExpression(1571) into FieldAccess(1573) at 0", "Insert SimpleName: env(1572) into FieldAccess(1573) at 1", "Insert MethodInvocation(1911) into MethodInvocation(1924) at 3", "Move MethodInvocation(1918) into MethodInvocation(1924) at 4", "Insert MethodInvocation(1920) into MethodInvocation(1924) at 6", "Move MethodInvocation(1927) into MethodInvocation(1924) at 9", "Update SimpleName: getBuffer(1444) to getValueArray", "Update SimpleName: getBuffer(1474) to getValueArray", "Update SimpleName: getBuffer(1523) to getValueArray", "Update SimpleName: getBuffer(1552) to getValueArray", "Update SimpleName: getBuffer(1627) to getValueArray", "Update SimpleName: KeyValue(1709) to Cell", "Update SimpleName: KeyValue(1724) to Cell", "Move MethodInvocation(1346) into MethodInvocation(2493) at 4", "Move MethodInvocation(1349) into MethodInvocation(2493) at 5", "Move MethodInvocation(1355) into MethodInvocation(2493) at 8", "Move MethodInvocation(1358) into MethodInvocation(2493) at 9", "Update SimpleName: getBuffer(2012) to getValueArray", "Update SimpleName: getBuffer(2085) to getValueArray", "Update SimpleName: getBuffer(2147) to getValueArray", "Update SimpleName: getBuffer(2236) to getValueArray", "Move SimpleName: kv(2708) into MethodInvocation(3275) at 0", "Update SimpleName: isDelete(2709) to getTypeByte", "Move SimpleName: isDelete(2709) into MethodInvocation(3275) at 1", "Insert QualifiedName: Type.Delete(3276) into MethodInvocation(3278) at 0", "Insert SimpleName: getCode(3277) into MethodInvocation(3278) at 1", "Insert ThisExpression(3400) into FieldAccess(3402) at 0", "Insert SimpleName: env(3401) into FieldAccess(3402) at 1", "Insert SimpleName: Mutation(3516) into SimpleType: Mutation(3517) at 0", "Insert SimpleName: ProtobufUtil(3520) into MethodInvocation(3523) at 0", "Update SimpleName: getEnvironment(3017) to getMutations", "Insert SimpleName: request(3522) into MethodInvocation(3523) at 2", "Insert SimpleName: rowKeyMetaData(3542) into ArrayAccess(3544) at 0", "Insert QualifiedName: PhoenixDatabaseMetaData.SCHEMA_NAME_INDEX(3543) into ArrayAccess(3544) at 1", "Insert SimpleName: rowKeyMetaData(3548) into ArrayAccess(3550) at 0", "Insert QualifiedName: PhoenixDatabaseMetaData.TABLE_NAME_INDEX(3549) into ArrayAccess(3550) at 1", "Insert MethodInvocation(3642) into ExpressionStatement(3643) at 0", "Update SimpleName: Integer(3047) to RowLock", "Move InfixExpression: !=(3790) into IfStatement(3682) at 0", "Move ParameterizedType: Map<ImmutableBytesPtr,PTable>(3851) into VariableDeclarationStatement(3916) at 0", "Insert MethodInvocation(3943) into ExpressionStatement(3944) at 0", "Insert MethodInvocation(3948) into ExpressionStatement(3949) at 0", "Insert MethodInvocation(3955) into ExpressionStatement(3956) at 0", "Insert SimpleName: logger(3971) into MethodInvocation(3975) at 0", "Insert SimpleName: error(3972) into MethodInvocation(3975) at 1", "Insert StringLiteral: \"createTable failed\"(3973) into MethodInvocation(3975) at 2", "Insert SimpleName: t(3974) into MethodInvocation(3975) at 3", "Insert SimpleName: ProtobufUtil(3977) into MethodInvocation(3989) at 0", "Insert SimpleName: setControllerException(3978) into MethodInvocation(3989) at 1", "Insert SimpleName: controller(3979) into MethodInvocation(3989) at 2", "Insert MethodInvocation(3988) into MethodInvocation(3989) at 3", "Update SimpleName: KeyValue(3566) to List", "Insert SimpleName: Cell(4231) into SimpleType: Cell(4232) at 0", "Insert SimpleName: ProtobufUtil(4328) into MethodInvocation(4331) at 0", "Insert SimpleName: getMutations(4329) into MethodInvocation(4331) at 1", "Insert SimpleName: request(4330) into MethodInvocation(4331) at 2", "Move SimpleName: rowKeyMetaData(3645) into ArrayAccess(4352) at 0", "Move QualifiedName: PhoenixDatabaseMetaData.SCHEMA_NAME_INDEX(3646) into ArrayAccess(4352) at 1", "Move SimpleName: rowKeyMetaData(3654) into ArrayAccess(4358) at 0", "Move QualifiedName: PhoenixDatabaseMetaData.TABLE_NAME_INDEX(3655) into ArrayAccess(4358) at 1", "Insert MethodInvocation(4370) into ExpressionStatement(4371) at 0", "Insert MethodInvocation(4377) into ExpressionStatement(4378) at 0", "Insert MethodInvocation(4384) into ExpressionStatement(4385) at 0", "Insert MethodInvocation(4478) into ExpressionStatement(4479) at 0", "Update SimpleName: Integer(3772) to RowLock", "Move InfixExpression: !=(3073) into IfStatement(4510) at 0", "Move ParameterizedType: Map<ImmutableBytesPtr,PTable>(4047) into VariableDeclarationStatement(4581) at 0", "Insert MethodInvocation(4641) into ExpressionStatement(4642) at 0", "Insert SimpleName: logger(4657) into MethodInvocation(4661) at 0", "Insert SimpleName: error(4658) into MethodInvocation(4661) at 1", "Insert StringLiteral: \"dropTable failed\"(4659) into MethodInvocation(4661) at 2", "Insert SimpleName: t(4660) into MethodInvocation(4661) at 3", "Insert SimpleName: ProtobufUtil(4663) into MethodInvocation(4675) at 0", "Insert SimpleName: setControllerException(4664) into MethodInvocation(4675) at 1", "Insert SimpleName: controller(4665) into MethodInvocation(4675) at 2", "Insert MethodInvocation(4674) into MethodInvocation(4675) at 3", "Insert ThisExpression(4778) into FieldAccess(4780) at 0", "Insert SimpleName: env(4779) into FieldAccess(4780) at 1", "Update SimpleName: getBuffer(4230) to getValueArray", "Insert MethodInvocation(5056) into MethodInvocation(5065) at 1", "Insert MethodInvocation(5059) into MethodInvocation(5065) at 2", "Insert MethodInvocation(5062) into MethodInvocation(5065) at 3", "Insert NumberLiteral: 0(5063) into MethodInvocation(5065) at 4", "Move SimpleType: Delete(5761) into ClassInstanceCreation(5145) at 0", "Insert MethodInvocation(5137) into ClassInstanceCreation(5145) at 1", "Insert MethodInvocation(5140) into ClassInstanceCreation(5145) at 2", "Insert MethodInvocation(5143) into ClassInstanceCreation(5145) at 3", "Move SimpleType: Delete(5734) into ClassInstanceCreation(5196) at 0", "Move SimpleName: indexKey(4463) into ClassInstanceCreation(5196) at 1", "Move SimpleName: clientTimeStamp(4464) into ClassInstanceCreation(5196) at 2", "Update SimpleName: lids(4491) to locks", "Update SimpleName: Integer(4680) to RowLock", "Move ParameterizedType: Map<ImmutableBytesPtr,PTable>(6131) into VariableDeclarationStatement(5463) at 0", "Insert SimpleName: Mutation(5900) into SimpleType: Mutation(5901) at 0", "Insert SimpleName: ProtobufUtil(5904) into MethodInvocation(5907) at 0", "Insert SimpleName: getMutations(5905) into MethodInvocation(5907) at 1", "Insert SimpleName: request(5906) into MethodInvocation(5907) at 2", "Insert MethodInvocation(6175) into ExpressionStatement(6176) at 0", "Insert SimpleName: ProtobufUtil(6184) into MethodInvocation(6188) at 0", "Insert SimpleName: setControllerException(6185) into MethodInvocation(6188) at 1", "Insert SimpleName: controller(6186) into MethodInvocation(6188) at 2", "Insert SimpleName: ioe(6187) into MethodInvocation(6188) at 3", "Insert SimpleName: ProtobufUtil(6225) into MethodInvocation(6228) at 0", "Insert SimpleName: getMutations(6226) into MethodInvocation(6228) at 1", "Insert SimpleName: request(6227) into MethodInvocation(6228) at 2", "Insert MethodInvocation(6691) into ExpressionStatement(6692) at 0", "Insert SimpleName: ProtobufUtil(6700) into MethodInvocation(6704) at 0", "Insert SimpleName: setControllerException(6701) into MethodInvocation(6704) at 1", "Insert SimpleName: controller(6702) into MethodInvocation(6704) at 2", "Insert SimpleName: ioe(6703) into MethodInvocation(6704) at 3", "Insert ThisExpression(6741) into FieldAccess(6743) at 0", "Insert SimpleName: env(6742) into FieldAccess(6743) at 1", "Insert ThisExpression(6787) into FieldAccess(6789) at 0", "Insert SimpleName: env(6788) into FieldAccess(6789) at 1", "Insert FieldAccess(6803) into MethodInvocation(6805) at 0", "Update SimpleName: RegionCoprocessorEnvironment(6414) to List", "Move SimpleName: RegionCoprocessorEnvironment(6414) into SimpleType: List(6880) at 0", "Insert SimpleName: Mutation(6881) into SimpleType: Mutation(6882) at 0", "Insert SimpleName: ProtobufUtil(6885) into MethodInvocation(6888) at 0", "Update SimpleName: getEnvironment(6417) to getMutations", "Insert SimpleName: request(6887) into MethodInvocation(6888) at 2", "Insert SimpleName: rowKeyMetaData(6907) into ArrayAccess(6909) at 0", "Insert QualifiedName: PhoenixDatabaseMetaData.SCHEMA_NAME_INDEX(6908) into ArrayAccess(6909) at 1", "Insert SimpleName: rowKeyMetaData(6913) into ArrayAccess(6915) at 0", "Insert QualifiedName: PhoenixDatabaseMetaData.TABLE_NAME_INDEX(6914) into ArrayAccess(6915) at 1", "Insert MethodInvocation(6956) into ExpressionStatement(6957) at 0", "Update SimpleName: KeyValue(6476) to Cell", "Update SimpleName: getLock(6519) to getRowLock", "Update SimpleType: KeyValue(6590) to Cell", "Insert MethodInvocation(7337) into ExpressionStatement(7338) at 0", "Insert MethodInvocation(7342) into ExpressionStatement(7343) at 0", "Insert MethodInvocation(7349) into ExpressionStatement(7350) at 0", "Insert SimpleName: logger(7364) into MethodInvocation(7368) at 0", "Insert SimpleName: error(7365) into MethodInvocation(7368) at 1", "Insert StringLiteral: \"updateIndexState failed\"(7366) into MethodInvocation(7368) at 2", "Insert SimpleName: t(7367) into MethodInvocation(7368) at 3", "Insert SimpleName: ProtobufUtil(7370) into MethodInvocation(7382) at 0", "Insert SimpleName: setControllerException(7371) into MethodInvocation(7382) at 1", "Insert SimpleName: controller(7372) into MethodInvocation(7382) at 2", "Insert MethodInvocation(7381) into MethodInvocation(7382) at 3", "Insert SimpleName: done(1234) into MethodInvocation(1240) at 0", "Insert SimpleName: run(1235) into MethodInvocation(1240) at 1", "Insert MethodInvocation(1239) into MethodInvocation(1240) at 2", "Insert SimpleName: request(1257) into MethodInvocation(1259) at 0", "Insert SimpleName: getClientTimestamp(1258) into MethodInvocation(1259) at 1", "Insert SimpleName: builder(1266) into MethodInvocation(1269) at 0", "Insert SimpleName: setReturnCode(1267) into MethodInvocation(1269) at 1", "Insert QualifiedName: MetaDataProtos.MutationCode.TABLE_NOT_FOUND(1268) into MethodInvocation(1269) at 2", "Insert SimpleName: builder(1271) into MethodInvocation(1274) at 0", "Insert SimpleName: setMutationTime(1272) into MethodInvocation(1274) at 1", "Insert SimpleName: currentTime(1273) into MethodInvocation(1274) at 2", "Insert SimpleName: done(1276) into MethodInvocation(1281) at 0", "Insert SimpleName: run(1277) into MethodInvocation(1281) at 1", "Insert MethodInvocation(1280) into MethodInvocation(1281) at 2", "Insert SimpleName: builder(1301) into MethodInvocation(1307) at 0", "Insert SimpleName: setTable(1302) into MethodInvocation(1307) at 1", "Insert MethodInvocation(1306) into MethodInvocation(1307) at 2", "Insert SimpleName: ServerUtil(1333) into MethodInvocation(1341) at 0", "Insert SimpleName: createIOException(1334) into MethodInvocation(1341) at 1", "Insert MethodInvocation(1339) into MethodInvocation(1341) at 2", "Insert SimpleName: t(1340) into MethodInvocation(1341) at 3", "Update SimpleName: getBuffer(1342) to getQualifierArray", "Insert SimpleName: kv(1909) into MethodInvocation(1911) at 0", "Insert SimpleName: getQualifierOffset(1910) into MethodInvocation(1911) at 1", "Update SimpleName: getBuffer(1351) to getQualifierArray", "Insert SimpleName: searchKv(1918) into MethodInvocation(1920) at 0", "Insert SimpleName: getQualifierOffset(1919) into MethodInvocation(1920) at 1", "Update SimpleName: getBuffer(1596) to getValueArray", "Update SimpleName: getQualifierOffset(1914) to getQualifierArray", "Update SimpleName: getQualifierOffset(1923) to getQualifierArray", "Update SimpleName: getBuffer(2119) to getValueArray", "Update SimpleName: getBuffer(2178) to getValueArray", "Update SimpleName: getBuffer(2207) to getValueArray", "Update SimpleName: getBuffer(2268) to getValueArray", "Update SimpleName: getBuffer(2301) to getValueArray", "Update SimpleName: getBuffer(2333) to getValueArray", "Update SimpleName: getBuffer(2364) to getValueArray", "Update SimpleName: getBuffer(2451) to getRowArray", "Update SimpleName: getBuffer(2481) to getRowArray", "Move SimpleType: PTable(3227) into ParameterizedType: Map<ImmutableBytesPtr,PTable>(3286) at 2", "Insert SimpleName: done(3636) into MethodInvocation(3642) at 0", "Insert SimpleName: run(3637) into MethodInvocation(3642) at 1", "Insert MethodInvocation(3641) into MethodInvocation(3642) at 2", "Update SimpleName: lids(3068) to locks", "Insert SimpleName: builder(3940) into MethodInvocation(3943) at 0", "Insert SimpleName: setReturnCode(3941) into MethodInvocation(3943) at 1", "Insert QualifiedName: MetaDataProtos.MutationCode.TABLE_NOT_FOUND(3942) into MethodInvocation(3943) at 2", "Insert SimpleName: builder(3945) into MethodInvocation(3948) at 0", "Insert SimpleName: setMutationTime(3946) into MethodInvocation(3948) at 1", "Insert SimpleName: currentTimeStamp(3947) into MethodInvocation(3948) at 2", "Insert SimpleName: done(3950) into MethodInvocation(3955) at 0", "Insert SimpleName: run(3951) into MethodInvocation(3955) at 1", "Insert MethodInvocation(3954) into MethodInvocation(3955) at 2", "Update SimpleName: releaseLocks(3271) to region", "Update SimpleName: region(3272) to releaseRowLocks", "Update SimpleName: lids(3273) to locks", "Move SimpleName: ServerUtil(3283) into MethodInvocation(3988) at 0", "Update SimpleName: throwIOException(3284) to createIOException", "Move SimpleName: throwIOException(3284) into MethodInvocation(3988) at 1", "Move MethodInvocation(3289) into MethodInvocation(3988) at 2", "Move SimpleName: t(3290) into MethodInvocation(3988) at 3", "Insert SimpleName: builder(4367) into MethodInvocation(4370) at 0", "Insert SimpleName: setReturnCode(4368) into MethodInvocation(4370) at 1", "Insert QualifiedName: MetaDataProtos.MutationCode.UNALLOWED_TABLE_MUTATION(4369) into MethodInvocation(4370) at 2", "Insert SimpleName: builder(4372) into MethodInvocation(4377) at 0", "Insert SimpleName: setMutationTime(4373) into MethodInvocation(4377) at 1", "Move MethodInvocation(3126) into MethodInvocation(4377) at 2", "Insert SimpleName: done(4379) into MethodInvocation(4384) at 0", "Insert SimpleName: run(4380) into MethodInvocation(4384) at 1", "Insert MethodInvocation(4383) into MethodInvocation(4384) at 2", "Insert SimpleName: done(4472) into MethodInvocation(4478) at 0", "Insert SimpleName: run(4473) into MethodInvocation(4478) at 1", "Insert MethodInvocation(4477) into MethodInvocation(4478) at 2", "Update SimpleName: lids(3785) to locks", "Insert ExpressionStatement(4560) into Block(4562) at 0", "Insert ReturnStatement(4561) into Block(4562) at 1", "Insert SimpleName: done(4635) into MethodInvocation(4641) at 0", "Insert SimpleName: run(4636) into MethodInvocation(4641) at 1", "Insert MethodInvocation(4640) into MethodInvocation(4641) at 2", "Update SimpleName: releaseLocks(3919) to region", "Update SimpleName: region(3920) to releaseRowLocks", "Update SimpleName: lids(3921) to locks", "Move SimpleName: ServerUtil(3931) into MethodInvocation(4674) at 0", "Update SimpleName: throwIOException(3932) to createIOException", "Move SimpleName: throwIOException(3932) into MethodInvocation(4674) at 1", "Move MethodInvocation(3937) into MethodInvocation(4674) at 2", "Move SimpleName: t(3938) into MethodInvocation(4674) at 3", "Insert SimpleName: kv(5054) into MethodInvocation(5056) at 0", "Update SimpleName: rowKey(4339) to getRowArray", "Move SimpleName: rowKey(4339) into MethodInvocation(5056) at 1", "Insert SimpleName: kv(5057) into MethodInvocation(5059) at 0", "Insert SimpleName: getRowOffset(5058) into MethodInvocation(5059) at 1", "Insert SimpleName: kv(5060) into MethodInvocation(5062) at 0", "Insert SimpleName: getRowLength(5061) into MethodInvocation(5062) at 1", "Insert SimpleName: kv(5135) into MethodInvocation(5137) at 0", "Insert SimpleName: getRowArray(5136) into MethodInvocation(5137) at 1", "Insert SimpleName: kv(5138) into MethodInvocation(5140) at 0", "Insert SimpleName: getRowOffset(5139) into MethodInvocation(5140) at 1", "Insert SimpleName: kv(5141) into MethodInvocation(5143) at 0", "Insert SimpleName: getRowLength(5142) into MethodInvocation(5143) at 1", "Move SimpleName: Delete(4458) into SimpleType: Delete(5193) at 0", "Update SimpleName: lids(4693) to locks", "Move SimpleType: ImmutableBytesPtr(4727) into ParameterizedType: Map<ImmutableBytesPtr,PTable>(5452) at 1", "Move SimpleType: PTable(4729) into ParameterizedType: Map<ImmutableBytesPtr,PTable>(5452) at 2", "Update SimpleName: releaseLocks(5127) to region", "Update SimpleName: region(5128) to releaseRowLocks", "Update SimpleName: lids(5129) to locks", "Insert SimpleName: done(6169) into MethodInvocation(6175) at 0", "Insert SimpleName: run(6170) into MethodInvocation(6175) at 1", "Insert MethodInvocation(6174) into MethodInvocation(6175) at 2", "Insert SimpleName: done(6685) into MethodInvocation(6691) at 0", "Insert SimpleName: run(6686) into MethodInvocation(6691) at 1", "Insert MethodInvocation(6690) into MethodInvocation(6691) at 2", "Insert ThisExpression(6801) into FieldAccess(6803) at 0", "Insert SimpleName: env(6802) into FieldAccess(6803) at 1", "Insert SimpleName: done(6950) into MethodInvocation(6956) at 0", "Insert SimpleName: run(6951) into MethodInvocation(6956) at 1", "Insert MethodInvocation(6955) into MethodInvocation(6956) at 2", "Update SimpleName: getFamilyMap(6484) to getFamilyCellMap", "Insert ExpressionStatement(7084) into Block(7100) at 0", "Insert ExpressionStatement(7091) into Block(7100) at 1", "Insert ExpressionStatement(7098) into Block(7100) at 2", "Insert ReturnStatement(7099) into Block(7100) at 3", "Update SimpleName: KeyValue(6589) to Cell", "Insert SimpleName: builder(7334) into MethodInvocation(7337) at 0", "Insert SimpleName: setReturnCode(7335) into MethodInvocation(7337) at 1", "Insert QualifiedName: MetaDataProtos.MutationCode.TABLE_ALREADY_EXISTS(7336) into MethodInvocation(7337) at 2", "Insert SimpleName: builder(7339) into MethodInvocation(7342) at 0", "Insert SimpleName: setMutationTime(7340) into MethodInvocation(7342) at 1", "Insert SimpleName: currentTime(7341) into MethodInvocation(7342) at 2", "Insert SimpleName: done(7344) into MethodInvocation(7349) at 0", "Insert SimpleName: run(7345) into MethodInvocation(7349) at 1", "Insert MethodInvocation(7348) into MethodInvocation(7349) at 2", "Update SimpleName: region(6807) to rowLock", "Update SimpleName: releaseRowLock(6808) to release", "Move SimpleName: ServerUtil(6819) into MethodInvocation(7381) at 0", "Update SimpleName: throwIOException(6820) to createIOException", "Move SimpleName: throwIOException(6820) into MethodInvocation(7381) at 1", "Move MethodInvocation(6825) into MethodInvocation(7381) at 2", "Move SimpleName: t(6826) into MethodInvocation(7381) at 3", "Insert SimpleName: MetaDataMutationResult(1236) into MethodInvocation(1239) at 0", "Insert SimpleName: toProto(1237) into MethodInvocation(1239) at 1", "Insert SimpleName: result(1238) into MethodInvocation(1239) at 2", "Insert SimpleName: builder(1278) into MethodInvocation(1280) at 0", "Insert SimpleName: build(1279) into MethodInvocation(1280) at 1", "Insert SimpleName: PTableImpl(1303) into MethodInvocation(1306) at 0", "Insert SimpleName: toProto(1304) into MethodInvocation(1306) at 1", "Insert SimpleName: table(1305) into MethodInvocation(1306) at 2", "Insert SimpleName: SchemaUtil(1335) into MethodInvocation(1339) at 0", "Insert SimpleName: getTableName(1336) into MethodInvocation(1339) at 1", "Insert SimpleName: schemaName(1337) into MethodInvocation(1339) at 2", "Insert SimpleName: tableName(1338) into MethodInvocation(1339) at 3", "Move SimpleName: ImmutableBytesPtr(3224) into SimpleType: ImmutableBytesPtr(3283) at 0", "Insert SimpleName: MetaDataMutationResult(3638) into MethodInvocation(3641) at 0", "Insert SimpleName: toProto(3639) into MethodInvocation(3641) at 1", "Insert SimpleName: result(3640) into MethodInvocation(3641) at 2", "Insert SimpleName: builder(3952) into MethodInvocation(3954) at 0", "Insert SimpleName: build(3953) into MethodInvocation(3954) at 1", "Update SimpleName: getEnvironment(3742) to builder", "Move SimpleName: getEnvironment(3742) into MethodInvocation(4383) at 0", "Insert SimpleName: build(4382) into MethodInvocation(4383) at 1", "Insert SimpleName: MetaDataMutationResult(4474) into MethodInvocation(4477) at 0", "Insert SimpleName: toProto(4475) into MethodInvocation(4477) at 1", "Insert SimpleName: result(4476) into MethodInvocation(4477) at 2", "Update SimpleName: lids(3825) to locks", "Insert MethodInvocation(4559) into ExpressionStatement(4560) at 0", "Insert SimpleName: MetaDataMutationResult(4637) into MethodInvocation(4640) at 0", "Insert SimpleName: toProto(4638) into MethodInvocation(4640) at 1", "Insert SimpleName: result(4639) into MethodInvocation(4640) at 2", "Move SimpleName: PTable(6129) into SimpleType: PTable(5451) at 0", "Update SimpleName: lids(5017) to locks", "Insert SimpleName: MetaDataMutationResult(6171) into MethodInvocation(6174) at 0", "Insert SimpleName: toProto(6172) into MethodInvocation(6174) at 1", "Insert SimpleName: result(6173) into MethodInvocation(6174) at 2", "Insert SimpleName: MetaDataMutationResult(6687) into MethodInvocation(6690) at 0", "Insert SimpleName: toProto(6688) into MethodInvocation(6690) at 1", "Insert SimpleName: result(6689) into MethodInvocation(6690) at 2", "Insert SimpleName: MetaDataMutationResult(6952) into MethodInvocation(6955) at 0", "Insert SimpleName: toProto(6953) into MethodInvocation(6955) at 1", "Insert SimpleName: result(6954) into MethodInvocation(6955) at 2", "Update SimpleName: getBuffer(6506) to getValueArray", "Insert MethodInvocation(7083) into ExpressionStatement(7084) at 0", "Insert MethodInvocation(7090) into ExpressionStatement(7091) at 0", "Insert MethodInvocation(7097) into ExpressionStatement(7098) at 0", "Move ParameterizedType: Map<ImmutableBytesPtr,PTable>(6294) into VariableDeclarationStatement(7318) at 0", "Insert SimpleName: builder(7346) into MethodInvocation(7348) at 0", "Insert SimpleName: build(7347) into MethodInvocation(7348) at 1", "Move MethodInvocation(2548) into ArrayAccess(3079) at 1", "Insert FieldAccess(3292) into MethodInvocation(3293) at 2", "Update SimpleName: lids(3077) to locks", "Insert ExpressionStatement(3726) into Block(3750) at 0", "Insert ExpressionStatement(3733) into Block(3750) at 1", "Insert ExpressionStatement(3741) into Block(3750) at 2", "Insert ExpressionStatement(3748) into Block(3750) at 3", "Insert ReturnStatement(3749) into Block(3750) at 4", "Insert ExpressionStatement(3764) into Block(3788) at 0", "Insert ExpressionStatement(3771) into Block(3788) at 1", "Insert ExpressionStatement(3779) into Block(3788) at 2", "Insert ExpressionStatement(3786) into Block(3788) at 3", "Insert ReturnStatement(3787) into Block(3788) at 4", "Insert ExpressionStatement(3860) into Block(3884) at 0", "Insert ExpressionStatement(3867) into Block(3884) at 1", "Insert ExpressionStatement(3875) into Block(3884) at 2", "Insert ExpressionStatement(3882) into Block(3884) at 3", "Insert ReturnStatement(3883) into Block(3884) at 4", "Insert FieldAccess(3911) into MethodInvocation(3912) at 2", "Update SimpleName: lids(3794) to locks", "Insert SimpleName: done(4553) into MethodInvocation(4559) at 0", "Insert SimpleName: run(4554) into MethodInvocation(4559) at 1", "Insert MethodInvocation(4558) into MethodInvocation(4559) at 2", "Insert FieldAccess(4576) into MethodInvocation(4577) at 2", "Update SimpleName: getBuffer(4366) to getQualifierArray", "Update SimpleName: getBuffer(4384) to getValueArray", "Insert FieldAccess(5458) into MethodInvocation(5459) at 2", "Update SimpleName: raw(6572) to rawCells", "Insert SimpleName: builder(7080) into MethodInvocation(7083) at 0", "Insert SimpleName: setReturnCode(7081) into MethodInvocation(7083) at 1", "Insert QualifiedName: MetaDataProtos.MutationCode.TABLE_NOT_FOUND(7082) into MethodInvocation(7083) at 2", "Update SimpleName: EnvironmentEdgeManager(6581) to builder", "Move SimpleName: EnvironmentEdgeManager(6581) into MethodInvocation(7090) at 0", "Update SimpleName: currentTimeMillis(6582) to setMutationTime", "Move SimpleName: currentTimeMillis(6582) into MethodInvocation(7090) at 1", "Move MethodInvocation(5843) into MethodInvocation(7090) at 2", "Insert SimpleName: done(7092) into MethodInvocation(7097) at 0", "Insert SimpleName: run(7093) into MethodInvocation(7097) at 1", "Insert MethodInvocation(7096) into MethodInvocation(7097) at 2", "Update SimpleName: raw(6593) to rawCells", "Insert ExpressionStatement(7137) into Block(7153) at 0", "Insert ExpressionStatement(7144) into Block(7153) at 1", "Insert ExpressionStatement(7151) into Block(7153) at 2", "Insert ReturnStatement(7152) into Block(7153) at 3", "Update SimpleName: getBuffer(2509) to getValueArray", "Insert ThisExpression(3290) into FieldAccess(3292) at 0", "Insert SimpleName: env(3291) into FieldAccess(3292) at 1", "Insert MethodInvocation(3725) into ExpressionStatement(3726) at 0", "Insert MethodInvocation(3732) into ExpressionStatement(3733) at 0", "Insert MethodInvocation(3740) into ExpressionStatement(3741) at 0", "Insert MethodInvocation(3747) into ExpressionStatement(3748) at 0", "Insert MethodInvocation(3763) into ExpressionStatement(3764) at 0", "Insert MethodInvocation(3770) into ExpressionStatement(3771) at 0", "Insert MethodInvocation(3778) into ExpressionStatement(3779) at 0", "Insert MethodInvocation(3785) into ExpressionStatement(3786) at 0", "Insert MethodInvocation(3859) into ExpressionStatement(3860) at 0", "Insert MethodInvocation(3866) into ExpressionStatement(3867) at 0", "Insert MethodInvocation(3874) into ExpressionStatement(3875) at 0", "Insert MethodInvocation(3881) into ExpressionStatement(3882) at 0", "Insert ThisExpression(3909) into FieldAccess(3911) at 0", "Insert SimpleName: env(3910) into FieldAccess(3911) at 1", "Insert SimpleName: MetaDataMutationResult(4555) into MethodInvocation(4558) at 0", "Insert SimpleName: toProto(4556) into MethodInvocation(4558) at 1", "Insert SimpleName: result(4557) into MethodInvocation(4558) at 2", "Insert ThisExpression(4574) into FieldAccess(4576) at 0", "Insert SimpleName: env(4575) into FieldAccess(4576) at 1", "Insert ThisExpression(5456) into FieldAccess(5458) at 0", "Insert SimpleName: env(5457) into FieldAccess(5458) at 1", "Update ParameterizedType: List<Integer>(5213) to List<RowLock>", "Update SimpleName: lids(5214) to locks", "Update ParameterizedType: List<Integer>(5507) to List<RowLock>", "Update SimpleName: lids(5508) to locks", "Insert SimpleName: builder(7094) into MethodInvocation(7096) at 0", "Insert SimpleName: build(7095) into MethodInvocation(7096) at 1", "Update SimpleName: getBuffer(6605) to getValueArray", "Insert MethodInvocation(7136) into ExpressionStatement(7137) at 0", "Insert MethodInvocation(7143) into ExpressionStatement(7144) at 0", "Insert MethodInvocation(7150) into ExpressionStatement(7151) at 0", "Insert ExpressionStatement(7170) into Block(7186) at 0", "Insert ExpressionStatement(7177) into Block(7186) at 1", "Insert ExpressionStatement(7184) into Block(7186) at 2", "Insert ReturnStatement(7185) into Block(7186) at 3", "Insert SimpleName: builder(3722) into MethodInvocation(3725) at 0", "Insert SimpleName: setReturnCode(3723) into MethodInvocation(3725) at 1", "Insert QualifiedName: MetaDataProtos.MutationCode.PARENT_TABLE_NOT_FOUND(3724) into MethodInvocation(3725) at 2", "Insert SimpleName: builder(3727) into MethodInvocation(3732) at 0", "Insert SimpleName: setMutationTime(3728) into MethodInvocation(3732) at 1", "Move MethodInvocation(3670) into MethodInvocation(3732) at 2", "Insert SimpleName: builder(3734) into MethodInvocation(3740) at 0", "Insert SimpleName: setTable(3735) into MethodInvocation(3740) at 1", "Insert MethodInvocation(3739) into MethodInvocation(3740) at 2", "Insert SimpleName: done(3742) into MethodInvocation(3747) at 0", "Insert SimpleName: run(3743) into MethodInvocation(3747) at 1", "Insert MethodInvocation(3746) into MethodInvocation(3747) at 2", "Insert SimpleName: builder(3760) into MethodInvocation(3763) at 0", "Insert SimpleName: setReturnCode(3761) into MethodInvocation(3763) at 1", "Insert QualifiedName: MetaDataProtos.MutationCode.CONCURRENT_TABLE_MUTATION(3762) into MethodInvocation(3763) at 2", "Insert SimpleName: builder(3765) into MethodInvocation(3770) at 0", "Insert SimpleName: setMutationTime(3766) into MethodInvocation(3770) at 1", "Move MethodInvocation(3203) into MethodInvocation(3770) at 2", "Insert SimpleName: builder(3772) into MethodInvocation(3778) at 0", "Insert SimpleName: setTable(3773) into MethodInvocation(3778) at 1", "Insert MethodInvocation(3777) into MethodInvocation(3778) at 2", "Insert SimpleName: done(3780) into MethodInvocation(3785) at 0", "Insert SimpleName: run(3781) into MethodInvocation(3785) at 1", "Insert MethodInvocation(3784) into MethodInvocation(3785) at 2", "Insert ExpressionStatement(3829) into Block(3853) at 0", "Insert ExpressionStatement(3836) into Block(3853) at 1", "Insert ExpressionStatement(3844) into Block(3853) at 2", "Insert ExpressionStatement(3851) into Block(3853) at 3", "Insert ReturnStatement(3852) into Block(3853) at 4", "Insert SimpleName: builder(3856) into MethodInvocation(3859) at 0", "Insert SimpleName: setReturnCode(3857) into MethodInvocation(3859) at 1", "Insert QualifiedName: MetaDataProtos.MutationCode.NEWER_TABLE_FOUND(3858) into MethodInvocation(3859) at 2", "Insert SimpleName: builder(3861) into MethodInvocation(3866) at 0", "Insert SimpleName: setMutationTime(3862) into MethodInvocation(3866) at 1", "Move MethodInvocation(3145) into MethodInvocation(3866) at 2", "Insert SimpleName: builder(3868) into MethodInvocation(3874) at 0", "Insert SimpleName: setTable(3869) into MethodInvocation(3874) at 1", "Insert MethodInvocation(3873) into MethodInvocation(3874) at 2", "Insert SimpleName: done(3876) into MethodInvocation(3881) at 0", "Insert SimpleName: run(3877) into MethodInvocation(3881) at 1", "Insert MethodInvocation(3880) into MethodInvocation(3881) at 2", "Update SimpleType: Integer(5212) to RowLock", "Update SimpleType: Integer(5506) to RowLock", "Insert SimpleName: builder(7133) into MethodInvocation(7136) at 0", "Insert SimpleName: setReturnCode(7134) into MethodInvocation(7136) at 1", "Insert QualifiedName: MetaDataProtos.MutationCode.UNALLOWED_TABLE_MUTATION(7135) into MethodInvocation(7136) at 2", "Update SimpleName: EnvironmentEdgeManager(6623) to builder", "Move SimpleName: EnvironmentEdgeManager(6623) into MethodInvocation(7143) at 0", "Update SimpleName: currentTimeMillis(6624) to setMutationTime", "Move SimpleName: currentTimeMillis(6624) into MethodInvocation(7143) at 1", "Move MethodInvocation(5827) into MethodInvocation(7143) at 2", "Insert SimpleName: done(7145) into MethodInvocation(7150) at 0", "Insert SimpleName: run(7146) into MethodInvocation(7150) at 1", "Insert MethodInvocation(7149) into MethodInvocation(7150) at 2", "Insert MethodInvocation(7169) into ExpressionStatement(7170) at 0", "Insert MethodInvocation(7176) into ExpressionStatement(7177) at 0", "Insert MethodInvocation(7183) into ExpressionStatement(7184) at 0", "Insert FieldAccess(7313) into MethodInvocation(7314) at 2", "Move MethodInvocation(2513) into ArrayAccess(3114) at 1", "Insert SimpleName: PTableImpl(3736) into MethodInvocation(3739) at 0", "Insert SimpleName: toProto(3737) into MethodInvocation(3739) at 1", "Insert SimpleName: parentTable(3738) into MethodInvocation(3739) at 2", "Insert SimpleName: builder(3744) into MethodInvocation(3746) at 0", "Insert SimpleName: build(3745) into MethodInvocation(3746) at 1", "Insert SimpleName: PTableImpl(3774) into MethodInvocation(3777) at 0", "Insert SimpleName: toProto(3775) into MethodInvocation(3777) at 1", "Insert SimpleName: parentTable(3776) into MethodInvocation(3777) at 2", "Insert SimpleName: builder(3782) into MethodInvocation(3784) at 0", "Insert SimpleName: build(3783) into MethodInvocation(3784) at 1", "Insert MethodInvocation(3828) into ExpressionStatement(3829) at 0", "Insert MethodInvocation(3835) into ExpressionStatement(3836) at 0", "Insert MethodInvocation(3843) into ExpressionStatement(3844) at 0", "Insert MethodInvocation(3850) into ExpressionStatement(3851) at 0", "Insert SimpleName: PTableImpl(3870) into MethodInvocation(3873) at 0", "Insert SimpleName: toProto(3871) into MethodInvocation(3873) at 1", "Insert SimpleName: table(3872) into MethodInvocation(3873) at 2", "Insert SimpleName: builder(3878) into MethodInvocation(3880) at 0", "Insert SimpleName: build(3879) into MethodInvocation(3880) at 1", "Update SimpleName: Integer(5211) to RowLock", "Update SimpleName: Integer(5505) to RowLock", "Insert SimpleName: builder(7147) into MethodInvocation(7149) at 0", "Insert SimpleName: build(7148) into MethodInvocation(7149) at 1", "Insert SimpleName: builder(7166) into MethodInvocation(7169) at 0", "Insert SimpleName: setReturnCode(7167) into MethodInvocation(7169) at 1", "Insert QualifiedName: MetaDataProtos.MutationCode.UNALLOWED_TABLE_MUTATION(7168) into MethodInvocation(7169) at 2", "Insert SimpleName: builder(7171) into MethodInvocation(7176) at 0", "Insert SimpleName: setMutationTime(7172) into MethodInvocation(7176) at 1", "Insert MethodInvocation(7175) into MethodInvocation(7176) at 2", "Insert SimpleName: done(7178) into MethodInvocation(7183) at 0", "Insert SimpleName: run(7179) into MethodInvocation(7183) at 1", "Insert MethodInvocation(7182) into MethodInvocation(7183) at 2", "Insert ThisExpression(7311) into FieldAccess(7313) at 0", "Insert SimpleName: env(7312) into FieldAccess(7313) at 1", "Update SimpleName: getBuffer(2544) to getValueArray", "Insert SimpleName: builder(3825) into MethodInvocation(3828) at 0", "Insert SimpleName: setReturnCode(3826) into MethodInvocation(3828) at 1", "Insert QualifiedName: MetaDataProtos.MutationCode.TABLE_ALREADY_EXISTS(3827) into MethodInvocation(3828) at 2", "Insert SimpleName: builder(3830) into MethodInvocation(3835) at 0", "Insert SimpleName: setMutationTime(3831) into MethodInvocation(3835) at 1", "Move MethodInvocation(3191) into MethodInvocation(3835) at 2", "Insert SimpleName: builder(3837) into MethodInvocation(3843) at 0", "Insert SimpleName: setTable(3838) into MethodInvocation(3843) at 1", "Insert MethodInvocation(3842) into MethodInvocation(3843) at 2", "Insert SimpleName: done(3845) into MethodInvocation(3850) at 0", "Insert SimpleName: run(3846) into MethodInvocation(3850) at 1", "Insert MethodInvocation(3849) into MethodInvocation(3850) at 2", "Move SimpleName: EnvironmentEdgeManager(6645) into MethodInvocation(7175) at 0", "Move SimpleName: currentTimeMillis(6646) into MethodInvocation(7175) at 1", "Insert SimpleName: builder(7180) into MethodInvocation(7182) at 0", "Insert SimpleName: build(7181) into MethodInvocation(7182) at 1", "Insert SimpleName: PTableImpl(3839) into MethodInvocation(3842) at 0", "Insert SimpleName: toProto(3840) into MethodInvocation(3842) at 1", "Insert SimpleName: table(3841) into MethodInvocation(3842) at 2", "Insert SimpleName: builder(3847) into MethodInvocation(3849) at 0", "Insert SimpleName: build(3848) into MethodInvocation(3849) at 1", "Move VariableDeclarationStatement(5611) into Block(6609) at 0", "Move MethodInvocation(6625) into ClassInstanceCreation(6621) at 2", "Update SimpleName: columnToDelete(5829) to table", "Move MethodInvocation(6647) into ClassInstanceCreation(6636) at 2", "Update SimpleName: columnToDelete(5845) to table", "Move SimpleName: MetaDataMutationResult(6620) into SimpleType: MetaDataMutationResult(6615) at 0", "Insert SimpleName: EnvironmentEdgeManager(6617) into MethodInvocation(6619) at 0", "Insert SimpleName: currentTimeMillis(6618) into MethodInvocation(6619) at 1", "Insert SimpleName: EnvironmentEdgeManager(6632) into MethodInvocation(6634) at 0", "Insert SimpleName: currentTimeMillis(6633) into MethodInvocation(6634) at 1", "Update SimpleName: lids(5728) to locks", "Update SimpleName: lids(5786) to locks", "Move SimpleType: Delete(4462) into ClassInstanceCreation(6531) at 0", "Move SimpleType: Delete(4410) into ClassInstanceCreation(6557) at 0", "Delete SimpleName: getEnvironment(944)", "Delete SimpleName: getEnvironment(947)", "Delete SuperMethodInvocation(948)", "Delete CastExpression(949)", "Delete ReturnStatement(950)", "Delete Block(951)", "Delete ThisExpression(6135)", "Delete SimpleName: getEnvironment(6136)", "Delete MethodInvocation(6137)", "Delete SimpleName: RegionCoprocessorEnvironment(6172)", "Delete SimpleType: RegionCoprocessorEnvironment(6173)", "Delete SimpleName: env(6174)", "Delete SimpleName: getEnvironment(6175)", "Delete MethodInvocation(6176)", "Delete VariableDeclarationFragment(6177)", "Delete VariableDeclarationStatement(6178)", "Delete NullLiteral(6192)", "Delete BooleanLiteral: true(6194)", "Delete SimpleName: lid(6275)", "Delete SimpleName: lid(6270)", "Delete NullLiteral(6271)", "Delete InfixExpression: !=(6272)", "Delete ExpressionStatement(6277)", "Delete IfStatement(6278)", "Delete ThisExpression(1006)", "Delete SimpleName: getEnvironment(1007)", "Delete MethodInvocation(1008)", "Delete SimpleName: KeyValue(1888)", "Delete SimpleType: KeyValue(1889)", "Delete VariableDeclarationStatement(1896)", "Delete SimpleName: kv(1910)", "Delete SimpleName: getBuffer(1911)", "Delete MethodInvocation(1912)", "Delete SimpleName: searchKv(1919)", "Delete SimpleName: getBuffer(1920)", "Delete MethodInvocation(1921)", "Delete MethodInvocation(2710)", "Delete ThisExpression(2721)", "Delete SimpleName: getEnvironment(2722)", "Delete MethodInvocation(2723)", "Delete ThisExpression(2831)", "Delete SimpleName: getEnvironment(2832)", "Delete MethodInvocation(2833)", "Delete SimpleName: rowKeyMetaData(2937)", "Delete QualifiedName: PhoenixDatabaseMetaData.SCHEMA_NAME_INDEX(2938)", "Delete ArrayAccess(2939)", "Delete SimpleName: rowKeyMetaData(2946)", "Delete QualifiedName: PhoenixDatabaseMetaData.TABLE_NAME_INDEX(2947)", "Delete ArrayAccess(2948)", "Delete SimpleName: result(3041)", "Delete ReturnStatement(3042)", "Delete NumberLiteral: 5(3053)", "Delete SimpleName: MetaDataMutationResult(3121)", "Delete SimpleType: MetaDataMutationResult(3122)", "Delete QualifiedName: MutationCode.PARENT_TABLE_NOT_FOUND(3123)", "Delete SimpleName: parentTable(3127)", "Delete ClassInstanceCreation(3128)", "Delete ReturnStatement(3129)", "Delete SimpleName: MetaDataMutationResult(3140)", "Delete SimpleType: MetaDataMutationResult(3141)", "Delete QualifiedName: MutationCode.CONCURRENT_TABLE_MUTATION(3142)", "Delete SimpleName: parentTable(3146)", "Delete ClassInstanceCreation(3147)", "Delete ReturnStatement(3148)", "Delete SimpleName: MetaDataMutationResult(3186)", "Delete SimpleType: MetaDataMutationResult(3187)", "Delete QualifiedName: MutationCode.TABLE_ALREADY_EXISTS(3188)", "Delete SimpleName: table(3192)", "Delete ClassInstanceCreation(3193)", "Delete ReturnStatement(3194)", "Delete SimpleName: MetaDataMutationResult(3198)", "Delete SimpleType: MetaDataMutationResult(3199)", "Delete QualifiedName: MutationCode.NEWER_TABLE_FOUND(3200)", "Delete SimpleName: table(3204)", "Delete ClassInstanceCreation(3205)", "Delete ReturnStatement(3206)", "Delete ThisExpression(3232)", "Delete SimpleName: getEnvironment(3233)", "Delete MethodInvocation(3234)", "Delete SimpleName: MetaDataMutationResult(3263)", "Delete SimpleType: MetaDataMutationResult(3264)", "Delete QualifiedName: MutationCode.TABLE_NOT_FOUND(3265)", "Delete SimpleName: currentTimeStamp(3266)", "Delete NullLiteral(3267)", "Delete ClassInstanceCreation(3268)", "Delete ReturnStatement(3269)", "Delete MethodInvocation(3291)", "Delete NullLiteral(3293)", "Delete ReturnStatement(3294)", "Delete SimpleType: MetaDataMutationResult(2894)", "Delete MethodDeclaration(3299)", "Delete SimpleName: HRegion(3304)", "Delete SimpleType: HRegion(3305)", "Delete SimpleName: region(3306)", "Delete SingleVariableDeclaration(3307)", "Delete SimpleName: Integer(3315)", "Delete SimpleType: Integer(3316)", "Delete NullLiteral(3327)", "Delete BooleanLiteral: true(3329)", "Delete Modifier: private(3355)", "Delete SingleVariableDeclaration(3373)", "Delete SimpleName: lids(3374)", "Delete SimpleName: region(3375)", "Delete SimpleName: releaseRowLock(3376)", "Delete SimpleName: lid(3377)", "Delete MethodInvocation(3378)", "Delete ExpressionStatement(3379)", "Delete Block(3380)", "Delete EnhancedForStatement(3381)", "Delete Block(3382)", "Delete MethodDeclaration(3383)", "Delete SimpleType: Integer(3366)", "Delete ParameterizedType: List<Integer>(3367)", "Delete SimpleName: result(3766)", "Delete ReturnStatement(3767)", "Delete NumberLiteral: 5(3778)", "Delete SimpleName: result(3841)", "Delete ReturnStatement(3842)", "Delete ThisExpression(3855)", "Delete SimpleName: getEnvironment(3856)", "Delete MethodInvocation(3857)", "Delete SimpleName: result(3916)", "Delete ReturnStatement(3917)", "Delete MethodInvocation(3939)", "Delete NullLiteral(3941)", "Delete ReturnStatement(3942)", "Delete Modifier: public(3596)", "Delete SimpleName: MetaDataMutationResult(3597)", "Delete SimpleType: MetaDataMutationResult(3598)", "Delete SimpleName: dropTable(3599)", "Delete SimpleName: List(3600)", "Delete SimpleType: List(3601)", "Delete ParameterizedType: List<Mutation>(3604)", "Delete SimpleName: tableMetadata(3605)", "Delete SingleVariableDeclaration(3606)", "Delete SimpleName: tableType(3609)", "Delete SingleVariableDeclaration(3610)", "Delete PrimitiveType: byte(3641)", "Delete Dimension(3642)", "Delete ArrayType: byte[](3643)", "Delete SimpleName: schemaName(3644)", "Delete ArrayAccess(3647)", "Delete VariableDeclarationFragment(3648)", "Delete VariableDeclarationStatement(3649)", "Delete PrimitiveType: byte(3650)", "Delete Dimension(3651)", "Delete ArrayType: byte[](3652)", "Delete SimpleName: tableName(3653)", "Delete ArrayAccess(3656)", "Delete VariableDeclarationFragment(3657)", "Delete VariableDeclarationStatement(3658)", "Delete SimpleName: MetaDataMutationResult(3665)", "Delete SimpleType: MetaDataMutationResult(3666)", "Delete QualifiedName: MutationCode.UNALLOWED_TABLE_MUTATION(3667)", "Delete NullLiteral(3671)", "Delete ClassInstanceCreation(3672)", "Delete ReturnStatement(3673)", "Delete Block(3674)", "Delete IfStatement(3675)", "Delete SimpleName: RegionCoprocessorEnvironment(3739)", "Delete SimpleType: RegionCoprocessorEnvironment(3740)", "Delete SimpleName: env(3741)", "Delete MethodInvocation(3743)", "Delete VariableDeclarationFragment(3744)", "Delete VariableDeclarationStatement(3745)", "Delete Block(3926)", "Delete TryStatement(3945)", "Delete Block(3946)", "Delete MethodDeclaration(3947)", "Delete SimpleType: RegionCoprocessorEnvironment(4018)", "Delete SimpleName: env(4019)", "Delete SimpleName: getEnvironment(4020)", "Delete MethodInvocation(4021)", "Delete VariableDeclarationFragment(4022)", "Delete VariableDeclarationStatement(4023)", "Delete ThisExpression(4051)", "Delete SimpleName: getEnvironment(4052)", "Delete MethodInvocation(4053)", "Delete VariableDeclarationStatement(4058)", "Delete SimpleName: KeyValue(4176)", "Delete SimpleType: KeyValue(4177)", "Delete SimpleName: rowKey(4318)", "Delete VariableDeclarationFragment(4319)", "Delete VariableDeclarationStatement(4320)", "Delete SimpleName: rowKey(4330)", "Delete SimpleName: kv(4331)", "Delete SimpleName: getRow(4332)", "Delete MethodInvocation(4333)", "Delete Assignment: =(4334)", "Delete ExpressionStatement(4335)", "Delete SimpleName: rowKey(4411)", "Delete NullLiteral(4413)", "Delete SimpleName: delete(4460)", "Delete NullLiteral(4465)", "Delete ClassInstanceCreation(4466)", "Delete VariableDeclarationFragment(4467)", "Delete SimpleName: RegionCoprocessorEnvironment(4635)", "Delete SimpleType: RegionCoprocessorEnvironment(4636)", "Delete SimpleName: env(4637)", "Delete SimpleName: getEnvironment(4638)", "Delete MethodInvocation(4639)", "Delete VariableDeclarationFragment(4640)", "Delete VariableDeclarationStatement(4641)", "Delete NumberLiteral: 5(4686)", "Delete ThisExpression(4734)", "Delete SimpleName: getEnvironment(4735)", "Delete MethodInvocation(4736)", "Delete ReturnStatement(5422)", "Delete SimpleType: IOException(5170)", "Delete NullLiteral(5737)", "Delete NullLiteral(5764)", "Delete SimpleName: table(5828)", "Delete SimpleName: table(5844)", "Delete ReturnStatement(5890)", "Delete ParameterizedType: List<Mutation>(5435)", "Delete SimpleName: tableMetaData(5436)", "Delete SingleVariableDeclaration(5437)", "Delete SimpleType: IOException(5439)", "Delete PrimitiveType: byte(5980)", "Delete Dimension(5981)", "Delete ArrayType: byte[](5982)", "Delete SimpleName: tableName(5983)", "Delete PrimitiveType: long(5985)", "Delete SimpleName: tableTimeStamp(5986)", "Delete SimpleName: clientTimeStamp(6048)", "Delete MethodInvocation(6049)", "Delete ThisExpression(6298)", "Delete SimpleName: getEnvironment(6299)", "Delete MethodInvocation(6300)", "Delete MethodInvocation(6301)", "Delete SimpleName: getMetaDataCache(6302)", "Delete MethodInvocation(6303)", "Delete ThisExpression(6321)", "Delete SimpleName: getEnvironment(6322)", "Delete MethodInvocation(6323)", "Delete SimpleName: env(6342)", "Delete SimpleName: MetaDataMutationResult(5967)", "Delete SimpleType: MetaDataMutationResult(5968)", "Delete SimpleName: getTable(5969)", "Delete PrimitiveType: byte(5970)", "Delete Dimension(5971)", "Delete ArrayType: byte[](5972)", "Delete SimpleName: tenantId(5973)", "Delete SingleVariableDeclaration(5974)", "Delete PrimitiveType: byte(5975)", "Delete Dimension(5976)", "Delete ArrayType: byte[](5977)", "Delete SimpleName: schemaName(5978)", "Delete SingleVariableDeclaration(5979)", "Delete PrimitiveType: long(5988)", "Delete SimpleName: clientTimeStamp(5989)", "Delete SingleVariableDeclaration(5990)", "Delete SimpleType: IOException(5992)", "Delete SimpleType: RegionCoprocessorEnvironment(6006)", "Delete SimpleName: env(6007)", "Delete SimpleName: getEnvironment(6008)", "Delete MethodInvocation(6009)", "Delete VariableDeclarationFragment(6010)", "Delete VariableDeclarationStatement(6011)", "Delete SimpleName: result(6029)", "Delete NullLiteral(6030)", "Delete InfixExpression: !=(6031)", "Delete SimpleName: result(6032)", "Delete ReturnStatement(6033)", "Delete Block(6034)", "Delete IfStatement(6035)", "Delete SimpleName: MetaDataMutationResult(6055)", "Delete SimpleType: MetaDataMutationResult(6056)", "Delete QualifiedName: MutationCode.TABLE_NOT_FOUND(6057)", "Delete SimpleName: currentTime(6058)", "Delete NullLiteral(6059)", "Delete ClassInstanceCreation(6060)", "Delete ReturnStatement(6061)", "Delete Block(6062)", "Delete IfStatement(6063)", "Delete SimpleType: MetaDataMutationResult(6065)", "Delete QualifiedName: MutationCode.TABLE_ALREADY_EXISTS(6066)", "Delete SimpleName: currentTime(6067)", "Delete SimpleName: table(6073)", "Delete NullLiteral(6074)", "Delete ConditionalExpression(6075)", "Delete ClassInstanceCreation(6076)", "Delete ReturnStatement(6077)", "Delete Block(6078)", "Delete SingleVariableDeclaration(6082)", "Delete SimpleName: ServerUtil(6083)", "Delete SimpleName: throwIOException(6084)", "Delete SimpleName: SchemaUtil(6085)", "Delete SimpleName: getTableName(6086)", "Delete SimpleName: schemaName(6087)", "Delete SimpleName: tableName(6088)", "Delete MethodInvocation(6089)", "Delete SimpleName: t(6090)", "Delete MethodInvocation(6091)", "Delete ExpressionStatement(6092)", "Delete NullLiteral(6093)", "Delete ReturnStatement(6094)", "Delete Block(6095)", "Delete CatchClause(6096)", "Delete TryStatement(6097)", "Delete Block(6098)", "Delete MethodDeclaration(6099)", "Delete Modifier: public(6285)", "Delete PrimitiveType: void(6286)", "Delete SimpleName: clearCache(6287)", "Delete Block(6310)", "Delete MethodDeclaration(6311)", "Delete Modifier: public(6314)", "Delete PrimitiveType: long(6315)", "Delete SimpleName: getVersion(6316)", "Delete SimpleName: RegionCoprocessorEnvironment(6329)", "Delete SimpleType: RegionCoprocessorEnvironment(6330)", "Delete SimpleName: env(6331)", "Delete SimpleName: getEnvironment(6332)", "Delete MethodInvocation(6333)", "Delete VariableDeclarationFragment(6334)", "Delete VariableDeclarationStatement(6335)", "Delete SimpleName: version(6349)", "Delete ReturnStatement(6350)", "Delete Block(6351)", "Delete MethodDeclaration(6352)", "Delete SimpleType: MetaDataMutationResult(6357)", "Delete SimpleName: updateIndexState(6358)", "Delete SimpleName: rowKeyMetaData(6400)", "Delete QualifiedName: PhoenixDatabaseMetaData.SCHEMA_NAME_INDEX(6401)", "Delete ArrayAccess(6402)", "Delete SimpleName: rowKeyMetaData(6409)", "Delete QualifiedName: PhoenixDatabaseMetaData.TABLE_NAME_INDEX(6410)", "Delete ArrayAccess(6411)", "Delete SimpleType: RegionCoprocessorEnvironment(6415)", "Delete SimpleName: result(6453)", "Delete ReturnStatement(6454)", "Delete NullLiteral(6520)", "Delete BooleanLiteral: true(6522)", "Delete SimpleName: MetaDataMutationResult(6578)", "Delete SimpleType: MetaDataMutationResult(6579)", "Delete QualifiedName: MutationCode.TABLE_NOT_FOUND(6580)", "Delete MethodInvocation(6583)", "Delete NullLiteral(6584)", "Delete ClassInstanceCreation(6585)", "Delete ReturnStatement(6586)", "Delete QualifiedName: MutationCode.UNALLOWED_TABLE_MUTATION(6622)", "Delete NullLiteral(6626)", "Delete ClassInstanceCreation(6627)", "Delete ReturnStatement(6628)", "Delete QualifiedName: MutationCode.UNALLOWED_TABLE_MUTATION(6644)", "Delete NullLiteral(6648)", "Delete ClassInstanceCreation(6649)", "Delete ReturnStatement(6650)", "Delete ThisExpression(6776)", "Delete SimpleName: getEnvironment(6777)", "Delete MethodInvocation(6778)", "Delete SimpleName: MetaDataMutationResult(6799)", "Delete SimpleType: MetaDataMutationResult(6800)", "Delete QualifiedName: MutationCode.TABLE_ALREADY_EXISTS(6801)", "Delete SimpleName: currentTime(6802)", "Delete NullLiteral(6803)", "Delete ClassInstanceCreation(6804)", "Delete ReturnStatement(6805)", "Delete SimpleName: lid(6809)", "Delete MethodInvocation(6827)", "Delete NullLiteral(6829)", "Delete ReturnStatement(6830)", "Delete Block(6834)", "Delete Modifier: public(6944)", "Delete PrimitiveType: void(6945)", "Delete SimpleName: readFields(6946)", "Delete SimpleName: DataInput(6947)", "Delete SimpleType: DataInput(6948)", "Delete SimpleName: arg0(6949)", "Delete SingleVariableDeclaration(6950)", "Delete SimpleName: UnsupportedOperationException(6953)", "Delete SimpleType: UnsupportedOperationException(6954)", "Delete ClassInstanceCreation(6955)", "Delete ThrowStatement(6956)", "Delete Block(6957)", "Delete MethodDeclaration(6958)", "Delete Modifier: public(6961)", "Delete PrimitiveType: void(6962)", "Delete SimpleName: write(6963)", "Delete SimpleName: DataOutput(6964)", "Delete SimpleType: DataOutput(6965)", "Delete SimpleName: arg0(6966)", "Delete SingleVariableDeclaration(6967)", "Delete SimpleName: IOException(6968)", "Delete SimpleType: IOException(6969)", "Delete SimpleName: UnsupportedOperationException(6970)", "Delete SimpleType: UnsupportedOperationException(6971)", "Delete ClassInstanceCreation(6972)", "Delete ThrowStatement(6973)", "Delete Block(6974)", "Delete MethodDeclaration(6975)"]}}, {"MetaDataProtocol_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 17", "MOV ImportDeclaration to CompilationUnit at 17", "MOV ImportDeclaration to CompilationUnit at 15"]}, {"root": "UPDATE from interface to class", "operations": ["UPD TypeDeclaration: interface from interface to class"]}, {"root": "UPDATE from org.apache.hadoop.hbase.client.Mutation to org.apache.phoenix.coprocessor.generated.MetaDataProtos", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.client.Mutation from org.apache.hadoop.hbase.client.Mutation to org.apache.phoenix.coprocessor.generated.MetaDataProtos"]}, {"root": "UPDATE from org.apache.hadoop.hbase.ipc.CoprocessorProtocol to org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataResponse", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.ipc.CoprocessorProtocol from org.apache.hadoop.hbase.ipc.CoprocessorProtocol to org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataResponse"]}, {"root": "UPDATE from org.apache.hadoop.hbase.util.Bytes to org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataService", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.util.Bytes from org.apache.hadoop.hbase.util.Bytes to org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataService"]}, {"root": "UPDATE from org.apache.hadoop.io.Writable to com.google.protobuf.ByteString", "operations": ["UPD QualifiedName: org.apache.hadoop.io.Writable from org.apache.hadoop.io.Writable to com.google.protobuf.ByteString"]}, {"root": "UPDATE from org.apache.hadoop.io.WritableUtils to com.google.protobuf.HBaseZeroCopyByteString", "operations": ["UPD QualifiedName: org.apache.hadoop.io.WritableUtils from org.apache.hadoop.io.WritableUtils to com.google.protobuf.HBaseZeroCopyByteString"]}, {"root": "INS Modifier: abstract to TypeDeclaration: interface at 2", "operations": ["INS Modifier: abstract to TypeDeclaration: interface at 2"]}, {"root": "UPDATE from CoprocessorProtocol to MetaDataService", "operations": ["UPD SimpleType: CoprocessorProtocol from CoprocessorProtocol to MetaDataService", "UPD SimpleName: CoprocessorProtocol from CoprocessorProtocol to MetaDataService"]}, {"root": "INS Modifier: static to MethodDeclaration at 2", "operations": ["INS Modifier: static to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: MetaDataMutationResult to MethodDeclaration at 3"]}, {"root": "UPDATE from readFields to constructFromProto", "operations": ["UPD SimpleName: readFields from readFields to constructFromProto"]}, {"root": "INS Block to MethodDeclaration at 7", "operations": ["INS IfStatement to Block at 3", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: hasColumnName to MethodInvocation at 1", "INS Block to MethodDeclaration at 7", "INS SimpleName: result to ReturnStatement at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to Assignment: = at 1", "INS IfStatement to Block at 4", "INS VariableDeclarationStatement to Block at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: tableName to SingleVariableDeclaration at 1", "INS InfixExpression: > to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: toByteArray to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS Block to IfStatement at 1", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleType: ByteString to SingleVariableDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: ByteString to SimpleType: ByteString at 0", "INS MethodInvocation to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: getColumnName to MethodInvocation at 1", "INS IfStatement to Block at 7", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: proto to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: > at 0", "INS QualifiedName: result.columnName to Assignment: = at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS QualifiedName: result.tableNamesToDelete to MethodInvocation at 0", "INS IfStatement to Block at 6", "INS MethodInvocation to IfStatement at 0", "INS EnhancedForStatement to Block at 1", "INS SimpleName: getTablesToDeleteList to MethodInvocation at 1", "INS ReturnStatement to Block at 8", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: proto to MethodInvocation at 0"]}, {"root": "INS Modifier: static to MethodDeclaration at 2", "operations": ["INS Modifier: static to MethodDeclaration at 2"]}, {"root": "INS SimpleType: MetaDataResponse to MethodDeclaration at 3", "operations": ["INS SimpleType: MetaDataResponse to MethodDeclaration at 3"]}, {"root": "INS SimpleName: toProto to MethodDeclaration at 4", "operations": ["INS SimpleName: toProto to MethodDeclaration at 4"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: result to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from DataInput to MetaDataResponse", "operations": ["UPD SimpleType: DataInput from DataInput to MetaDataResponse", "UPD SimpleName: DataOutput from DataOutput to MetaDataResponse", "UPD SimpleName: DataInput from DataInput to MetaDataResponse"]}, {"root": "UPDATE from input to proto", "operations": ["UPD SimpleName: input from input to proto", "UPD SimpleName: Bytes from Bytes to proto", "UPD SimpleName: Bytes from Bytes to proto", "UPD SimpleName: readBoolean from readBoolean to proto", "UPD SimpleName: tableNamesToDelete from tableNamesToDelete to proto", "UPD SimpleName: WritableUtils from WritableUtils to proto", "UPD SimpleName: input from input to proto", "UPD SimpleName: input from input to proto", "UPD SimpleName: input from input to proto"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 5"]}, {"root": "MOVE from SimpleType: MetaDataResponse", "operations": ["MOV SimpleName: DataOutput to SimpleType: MetaDataResponse at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: MetaDataMutationResult to SingleVariableDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS QualifiedName: MetaDataProtos.MetaDataResponse to MethodInvocation at 0", "INS SimpleType: MetaDataProtos.MetaDataResponse.Builder to VariableDeclarationStatement at 0", "INS QualifiedName: MetaDataProtos.MetaDataResponse.Builder to SimpleType: MetaDataProtos.MetaDataResponse.Builder at 0", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: getColumnName to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getFamilyName to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS IfStatement to Block at 5", "INS ExpressionStatement to Block at 1", "INS SimpleName: result to InfixExpression: != at 0", "INS SimpleName: getMutationTime to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 1", "INS Block to IfStatement at 1", "INS Block to IfStatement at 1", "INS IfStatement to Block at 4", "INS SimpleName: result to MethodInvocation at 0", "INS InfixExpression: != to IfStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: result to MethodInvocation at 0"]}, {"root": "INS ReturnStatement to Block at 2", "operations": ["INS ReturnStatement to Block at 2", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: MetaDataMutationResult to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS QualifiedName: result.returnCode to Assignment: = at 0", "operations": ["INS QualifiedName: result.returnCode to Assignment: = at 0"]}, {"root": "INS QualifiedName: result.mutationTime to Assignment: = at 0", "operations": ["INS QualifiedName: result.mutationTime to Assignment: = at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: input to MethodInvocation at 0", "MOV SimpleName: readBoolean to MethodInvocation at 1"]}, {"root": "UPDATE from readBoolean to hasTable", "operations": ["UPD SimpleName: readBoolean from readBoolean to hasTable"]}, {"root": "MOVE from InfixExpression: >", "operations": ["MOV NumberLiteral: 0 to InfixExpression: > at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS QualifiedName: result.columnName to Assignment: = at 0", "operations": ["INS QualifiedName: result.columnName to Assignment: = at 0"]}, {"root": "INS QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY to Assignment: = at 1", "operations": ["INS QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY to Assignment: = at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: readByteArray to MethodInvocation at 1", "MOV SimpleName: Bytes to MethodInvocation at 0"]}, {"root": "UPDATE from readByteArray to hasFamilyName", "operations": ["UPD SimpleName: readByteArray from readByteArray to hasFamilyName"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 3", "MOV IfStatement to Block at 2", "MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from Bytes to builder", "operations": ["UPD SimpleName: Bytes from Bytes to builder", "UPD SimpleName: WritableUtils from WritableUtils to builder", "UPD SimpleName: output from output to builder", "UPD SimpleName: tableNamesToDelete from tableNamesToDelete to builder", "UPD SimpleName: output from output to builder"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 0", "MOV SimpleName: writeBoolean to MethodInvocation at 1"]}, {"root": "UPDATE from writeBoolean to build", "operations": ["UPD SimpleName: writeBoolean from writeBoolean to build"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: MetaDataMutationResult to ClassInstanceCreation at 0"]}, {"root": "UPDATE from readLong to getMutationTime", "operations": ["UPD SimpleName: readLong from readLong to getMutationTime"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS QualifiedName: result.table to Assignment: = at 0", "INS SimpleName: PTableImpl to MethodInvocation at 0", "INS SimpleName: getTable to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Bytes to MethodInvocation at 0", "MOV SimpleName: input to MethodInvocation at 1"]}, {"root": "UPDATE from input to getTablesToDeleteCount", "operations": ["UPD SimpleName: input from input to getTablesToDeleteCount", "UPD SimpleName: input from input to getTablesToDeleteCount"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS QualifiedName: result.familyName to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1", "INS QualifiedName: result.tableNamesToDelete to EnhancedForStatement at 1", "INS Block to EnhancedForStatement at 2", "INS EnhancedForStatement to Block at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from input to ordinal", "operations": ["UPD SimpleName: input from input to ordinal"]}, {"root": "INS QualifiedName: result.wasUpdated to Assignment: = at 0", "operations": ["INS QualifiedName: result.wasUpdated to Assignment: = at 0"]}, {"root": "INS BooleanLiteral: true to Assignment: = at 1", "operations": ["INS BooleanLiteral: true to Assignment: = at 1"]}, {"root": "INS QualifiedName: result.tableNamesToDelete to Assignment: = at 0", "operations": ["INS QualifiedName: result.tableNamesToDelete to Assignment: = at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: readBoolean to MethodInvocation at 0"]}, {"root": "UPDATE from writeVInt to setReturnCode", "operations": ["UPD SimpleName: writeVInt from writeVInt to setReturnCode"]}, {"root": "INS ArrayAccess to MethodInvocation at 2", "operations": ["INS SimpleName: result to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ArrayAccess at 1", "INS QualifiedName: MetaDataProtos.MutationCode to MethodInvocation at 0", "INS MethodInvocation to ArrayAccess at 0", "INS ArrayAccess to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 0", "MOV SimpleName: mutationTime to MethodInvocation at 1"]}, {"root": "UPDATE from mutationTime to setMutationTime", "operations": ["UPD SimpleName: mutationTime from mutationTime to setMutationTime"]}, {"root": "INS QualifiedName: result.table to InfixExpression: != at 0", "operations": ["INS QualifiedName: result.table to InfixExpression: != at 0"]}, {"root": "INS MethodInvocation to InfixExpression: != at 0", "operations": ["INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: result to MethodInvocation at 0", "INS SimpleName: getTableNamesToDelete to MethodInvocation at 1"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: WritableUtils to MethodInvocation at 0", "MOV SimpleName: readVInt to MethodInvocation at 1"]}, {"root": "UPDATE from readVInt to getReturnCode", "operations": ["UPD SimpleName: readVInt from readVInt to getReturnCode"]}, {"root": "UPDATE from readFields to createFromProto", "operations": ["UPD SimpleName: readFields from readFields to createFromProto"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: readFields to MethodInvocation at 1", "MOV SimpleName: input to MethodInvocation at 0"]}, {"root": "UPDATE from Bytes to Lists", "operations": ["UPD SimpleName: Bytes from Bytes to Lists"]}, {"root": "UPDATE from readByteArray to newArrayListWithExpectedSize", "operations": ["UPD SimpleName: readByteArray from readByteArray to newArrayListWithExpectedSize"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: proto to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from tableName to toByteArray", "operations": ["UPD SimpleName: tableName from tableName to toByteArray", "UPD SimpleName: readInt from readInt to toByteArray"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: add to MethodInvocation at 1", "MOV SimpleName: tableNamesToDelete to MethodInvocation at 0", "MOV SimpleName: tableName to MethodInvocation at 1"]}, {"root": "UPDATE from output to result", "operations": ["UPD SimpleName: output from output to result", "UPD SimpleName: output from output to result", "UPD SimpleName: tableNamesToDelete from tableNamesToDelete to result"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 0"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV SingleVariableDeclaration to EnhancedForStatement at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: setFamilyName to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: input to MethodInvocation at 1"]}, {"root": "UPDATE from add to getFamilyName", "operations": ["UPD SimpleName: add from add to getFamilyName", "UPD SimpleName: tableName from tableName to getFamilyName"]}, {"root": "UPDATE from output to values", "operations": ["UPD SimpleName: output from output to values"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: ordinal to MethodInvocation at 1", "MOV SimpleName: returnCode to MethodInvocation at 1"]}, {"root": "INS SimpleName: builder to MethodInvocation at 0", "operations": ["INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "UPDATE from table to setTable", "operations": ["UPD SimpleName: table from table to setTable"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS QualifiedName: result.table to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: tableNamesToDelete to MethodInvocation at 0", "MOV SimpleName: size to MethodInvocation at 1"]}, {"root": "UPDATE from size to setColumnName", "operations": ["UPD SimpleName: size from size to setColumnName"]}, {"root": "UPDATE from input to tableName", "operations": ["UPD SimpleName: input from input to tableName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: input to MethodInvocation at 0", "MOV SimpleName: readInt to MethodInvocation at 1"]}, {"root": "UPDATE from returnCode to getMutationCode", "operations": ["UPD SimpleName: returnCode from returnCode to getMutationCode"]}, {"root": "UPDATE from write to PTableImpl", "operations": ["UPD SimpleName: write from write to PTableImpl"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 1", "MOV SimpleName: write to MethodInvocation at 0"]}, {"root": "UPDATE from output to toProto", "operations": ["UPD SimpleName: output from output to toProto"]}, {"root": "UPDATE from output to HBaseZeroCopyByteString", "operations": ["UPD SimpleName: output from output to HBaseZeroCopyByteString", "UPD SimpleName: Bytes from Bytes to HBaseZeroCopyByteString", "UPD SimpleName: output from output to HBaseZeroCopyByteString"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: writeInt to MethodInvocation at 1", "MOV SimpleName: output to MethodInvocation at 0"]}, {"root": "UPDATE from writeByteArray to wrap", "operations": ["UPD SimpleName: writeByteArray from writeByteArray to wrap", "UPD SimpleName: writeInt from writeInt to wrap"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Bytes to MethodInvocation at 0", "MOV SimpleName: tableName to MethodInvocation at 1", "MOV SimpleName: output to MethodInvocation at 0", "MOV SimpleName: writeByteArray to MethodInvocation at 1"]}, {"root": "UPDATE from writeByteArray to addTablesToDelete", "operations": ["UPD SimpleName: writeByteArray from writeByteArray to addTablesToDelete"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: tableName to MethodInvocation at 2", "INS SimpleName: wrap to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from size to getColumnName", "operations": ["UPD SimpleName: size from size to getColumnName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.DataInput", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.DataOutput", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL SimpleType: Writable", "operations": ["DEL SimpleName: Writable", "DEL SimpleType: Writable"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL SimpleName: Override", "DEL MarkerAnnotation"]}, {"root": "DEL PrimitiveType: void", "operations": ["DEL PrimitiveType: void"]}, {"root": "DEL FieldAccess", "operations": ["DEL FieldAccess", "DEL ThisExpression", "DEL SimpleName: returnCode"]}, {"root": "DEL FieldAccess", "operations": ["DEL SimpleName: mutationTime", "DEL FieldAccess", "DEL ThisExpression"]}, {"root": "DEL FieldAccess", "operations": ["DEL ThisExpression", "DEL FieldAccess", "DEL SimpleName: table"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: PTableImpl", "DEL SimpleType: PTableImpl", "DEL ClassInstanceCreation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL ThisExpression", "DEL SimpleName: table", "DEL FieldAccess", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: familyName", "operations": ["DEL SimpleName: familyName"]}, {"root": "DEL SimpleName: tableNamesToDelete", "operations": ["DEL SimpleName: tableNamesToDelete"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: count", "DEL MethodInvocation", "DEL SimpleName: newArrayListWithExpectedSize", "DEL SimpleName: Lists"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleName: IOException", "DEL SimpleType: IOException"]}, {"root": "DEL Block", "operations": ["DEL Dimension", "DEL PrimitiveType: int", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: count", "DEL VariableDeclarationFragment", "DEL SimpleName: input", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL VariableDeclarationExpression", "DEL SimpleName: readByteArray", "DEL Assignment: =", "DEL SimpleName: i", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL PostfixExpression: ++", "DEL SimpleName: hasTablesToDelete", "DEL Block", "DEL SimpleName: wasUpdated", "DEL Block", "DEL SimpleName: wasUpdated", "DEL SimpleName: i", "DEL NumberLiteral: 0", "DEL InfixExpression: >", "DEL SimpleName: count", "DEL QualifiedName: columnName.length", "DEL Block", "DEL ExpressionStatement", "DEL PrimitiveType: int", "DEL ArrayType: byte[]", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL ForStatement", "DEL SimpleName: columnName", "DEL SimpleName: hasTablesToDelete", "DEL SimpleName: tableName", "DEL PrimitiveType: boolean", "DEL PrimitiveType: byte", "DEL Assignment: =", "DEL IfStatement", "DEL Block", "DEL InfixExpression: <", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL SimpleName: input", "DEL IfStatement", "DEL SimpleName: i", "DEL MethodInvocation"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL SimpleName: Override", "DEL MarkerAnnotation"]}, {"root": "DEL PrimitiveType: void", "operations": ["DEL PrimitiveType: void"]}, {"root": "DEL SimpleName: write", "operations": ["DEL SimpleName: write"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: DataOutput", "DEL SimpleName: output", "DEL SingleVariableDeclaration"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleType: IOException", "DEL SimpleName: IOException"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL SimpleName: table", "operations": ["DEL SimpleName: table"]}, {"root": "DEL SimpleName: columnName", "operations": ["DEL SimpleName: columnName"]}, {"root": "DEL ConditionalExpression", "operations": ["DEL QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY", "DEL NullLiteral", "DEL InfixExpression: ==", "DEL SimpleName: familyName", "DEL SimpleName: familyName", "DEL ConditionalExpression"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: writeLong", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL NullLiteral", "DEL InfixExpression: !=", "DEL SimpleName: table", "DEL SimpleName: writeBoolean", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: output", "DEL InfixExpression: ==", "DEL SimpleName: Bytes", "DEL SimpleName: writeByteArray", "DEL SimpleName: columnName", "DEL ConditionalExpression", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY", "DEL SimpleName: columnName", "DEL NullLiteral"]}, {"root": "DEL IfStatement", "operations": ["DEL MethodInvocation", "DEL IfStatement", "DEL InfixExpression: !=", "DEL SimpleName: tableNamesToDelete", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL Block", "DEL BooleanLiteral: false", "DEL ExpressionStatement", "DEL SimpleName: writeBoolean", "DEL InfixExpression: &&", "DEL BooleanLiteral: true", "DEL SimpleName: tableNamesToDelete", "DEL Block", "DEL Block", "DEL InfixExpression: >", "DEL EnhancedForStatement", "DEL MethodInvocation", "DEL SimpleName: output", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TextElement: is returned.", "DEL SimpleName: clientTimestamp", "DEL ArrayType: byte[]", "DEL Dimension", "DEL PrimitiveType: long", "DEL SimpleName: getTable", "DEL PrimitiveType: byte", "DEL TagElement: @param", "DEL SingleVariableDeclaration", "DEL ArrayType: byte[]", "DEL SimpleName: IOException", "DEL SimpleName: tableTimestamp", "DEL SimpleName: schemaName", "DEL TextElement: The the latest Phoenix table at or before the given clientTimestamp. If the", "DEL TagElement: @param", "DEL TagElement", "DEL TagElement: @throws", "DEL Dimension", "DEL SimpleType: IOException", "DEL SingleVariableDeclaration", "DEL SimpleName: schemaName", "DEL TextElement: client already has the latest (based on the tableTimestamp), then no table", "DEL SimpleName: IOException", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL SimpleName: tenantId", "DEL TagElement: @return", "DEL SimpleName: tableName", "DEL SimpleName: clientTimestamp", "DEL TagElement: @param", "DEL PrimitiveType: long", "DEL SingleVariableDeclaration", "DEL TextElement:  MetaDataMutationResult", "DEL SimpleName: tenantId", "DEL Dimension", "DEL Javadoc", "DEL ArrayType: byte[]", "DEL SimpleName: tableName", "DEL SimpleName: tableTimestamp", "DEL TagElement: @param", "DEL TagElement: @param", "DEL PrimitiveType: byte", "DEL PrimitiveType: byte"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: tableMetadata", "DEL SimpleName: createTable", "DEL SimpleType: Mutation", "DEL SimpleName: IOException", "DEL TagElement: @param", "DEL SimpleName: tableMetadata", "DEL ParameterizedType: List<Mutation>", "DEL SimpleName: Mutation", "DEL TagElement: @return", "DEL SimpleType: IOException", "DEL MethodDeclaration", "DEL TagElement: @throws", "DEL SimpleType: List", "DEL TextElement: Create a new Phoenix table", "DEL SimpleName: List", "DEL TagElement", "DEL TextElement:  MetaDataMutationResult", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL SimpleName: IOException"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: tableType", "DEL TagElement: @return", "DEL SimpleName: tableType", "DEL SimpleType: IOException", "DEL SimpleName: tableMetadata", "DEL SimpleName: List", "DEL SimpleName: dropTable", "DEL ParameterizedType: List<Mutation>", "DEL SimpleName: IOException", "DEL TagElement: @param", "DEL SimpleName: Mutation", "DEL Javadoc", "DEL TextElement: Drop an existing Phoenix table", "DEL SimpleName: tableMetadata", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL SingleVariableDeclaration", "DEL SimpleName: String", "DEL TagElement: @throws", "DEL TextElement:  MetaDataMutationResult", "DEL SimpleName: IOException", "DEL SimpleType: Mutation", "DEL TagElement", "DEL SimpleType: List", "DEL MethodDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: addColumn", "DEL SimpleName: tableMetadata", "DEL TextElement:  MetaDataMutationResult", "DEL TagElement: @return", "DEL SimpleType: List", "DEL SimpleType: IOException", "DEL SimpleName: IOException", "DEL SimpleType: MetaDataMutationResult", "DEL TagElement", "DEL ParameterizedType: List<Mutation>", "DEL SimpleName: tableMetadata", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: MetaDataMutationResult", "DEL SimpleName: Mutation", "DEL TagElement: @throws", "DEL SimpleType: Mutation", "DEL SimpleName: List", "DEL SimpleName: IOException", "DEL TagElement: @param", "DEL Javadoc", "DEL TextElement: Add a column to an existing Phoenix table"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: List", "DEL TagElement", "DEL SimpleType: Mutation", "DEL SimpleName: tableMetadata", "DEL SimpleName: Mutation", "DEL TagElement: @return", "DEL TagElement: @throws", "DEL Javadoc", "DEL MethodDeclaration", "DEL SimpleType: MetaDataMutationResult", "DEL TextElement:  MetaDataMutationResult", "DEL SimpleName: IOException", "DEL SimpleType: List", "DEL SimpleName: tableMetadata", "DEL SimpleName: IOException", "DEL TextElement: Drop a column from an existing Phoenix table", "DEL SimpleName: MetaDataMutationResult", "DEL TagElement: @param", "DEL SingleVariableDeclaration", "DEL SimpleType: IOException", "DEL SimpleName: dropColumn", "DEL ParameterizedType: List<Mutation>"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: Mutation", "DEL SingleVariableDeclaration", "DEL SimpleName: Mutation", "DEL SimpleName: List", "DEL SimpleType: IOException", "DEL SimpleName: tableMetadata", "DEL SimpleType: List", "DEL SimpleName: updateIndexState", "DEL ParameterizedType: List<Mutation>", "DEL MethodDeclaration", "DEL SimpleName: IOException"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL PrimitiveType: void", "DEL TextElement: Clears the server-side cache of table meta data. Used between test runs to", "DEL Javadoc", "DEL TagElement", "DEL SimpleName: clearCache", "DEL MethodDeclaration", "DEL TextElement: ensure no side effects."]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TextElement: to a cluster to ensure that the client and server jars are compatible.", "DEL TextElement: Get the version of the server-side HBase and phoenix.jar. Used when initially connecting", "DEL PrimitiveType: long", "DEL MethodDeclaration", "DEL SimpleName: getVersion", "DEL Javadoc", "DEL TagElement"]}]}}, {"MetaDataProtocol_diff": {"operations": ["Move ImportDeclaration(19) into CompilationUnit(624) at 17", "Move ImportDeclaration(21) into CompilationUnit(624) at 17", "Move ImportDeclaration(23) into CompilationUnit(624) at 15", "Update TypeDeclaration: interface(801) to class", "Update QualifiedName: org.apache.hadoop.hbase.client.Mutation(12) to org.apache.phoenix.coprocessor.generated.MetaDataProtos", "Update QualifiedName: org.apache.hadoop.hbase.ipc.CoprocessorProtocol(14) to org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataResponse", "Update QualifiedName: org.apache.hadoop.hbase.util.Bytes(16) to org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataService", "Update QualifiedName: org.apache.hadoop.io.Writable(18) to com.google.protobuf.ByteString", "Update QualifiedName: org.apache.hadoop.io.WritableUtils(20) to com.google.protobuf.HBaseZeroCopyByteString", "Insert Modifier: abstract(47) into TypeDeclaration: class(623) at 2", "Update SimpleType: CoprocessorProtocol(55) to MetaDataService", "Update SimpleName: CoprocessorProtocol(54) to MetaDataService", "Insert Modifier: static(386) into MethodDeclaration(503) at 1", "Move SimpleType: MetaDataMutationResult(690) into MethodDeclaration(503) at 3", "Update SimpleName: readFields(396) to constructFromProto", "Insert Block(502) into MethodDeclaration(503) at 5", "Insert Modifier: static(505) into MethodDeclaration(621) at 1", "Insert SimpleType: MetaDataResponse(507) into MethodDeclaration(621) at 2", "Insert SimpleName: toProto(508) into MethodDeclaration(621) at 3", "Insert SingleVariableDeclaration(512) into MethodDeclaration(621) at 4", "Update SimpleType: DataInput(398) to MetaDataResponse", "Update SimpleName: input(399) to proto", "Insert VariableDeclarationStatement(401) into Block(502) at 0", "Move ExpressionStatement(415) into Block(502) at 1", "Move ExpressionStatement(423) into Block(502) at 2", "Insert IfStatement(437) into Block(502) at 3", "Insert IfStatement(469) into Block(502) at 4", "Move ExpressionStatement(488) into Block(502) at 5", "Insert IfStatement(486) into Block(502) at 6", "Insert IfStatement(499) into Block(502) at 7", "Insert ReturnStatement(501) into Block(502) at 8", "Update SimpleName: DataOutput(525) to MetaDataResponse", "Move SimpleName: DataOutput(525) into SimpleType: MetaDataResponse(507) at 0", "Move SimpleType: MetaDataMutationResult(775) into SingleVariableDeclaration(512) at 0", "Insert SimpleName: result(511) into SingleVariableDeclaration(512) at 1", "Insert VariableDeclarationStatement(520) into Block(620) at 0", "Insert IfStatement(615) into Block(620) at 1", "Insert ReturnStatement(619) into Block(620) at 2", "Update SimpleName: DataInput(397) to MetaDataResponse", "Move SimpleType: MetaDataMutationResult(714) into VariableDeclarationStatement(401) at 0", "Insert VariableDeclarationFragment(400) into VariableDeclarationStatement(401) at 1", "Insert MethodInvocation(422) into IfStatement(437) at 0", "Move Block(446) into IfStatement(437) at 1", "Insert InfixExpression: >(442) into IfStatement(469) at 0", "Insert Block(468) into IfStatement(469) at 1", "Insert MethodInvocation(476) into IfStatement(486) at 0", "Insert Block(485) into IfStatement(486) at 1", "Insert MethodInvocation(489) into IfStatement(499) at 0", "Insert Block(498) into IfStatement(499) at 1", "Insert SimpleName: result(500) into ReturnStatement(501) at 0", "Insert SimpleType: MetaDataProtos.MetaDataResponse.Builder(514) into VariableDeclarationStatement(520) at 0", "Insert VariableDeclarationFragment(519) into VariableDeclarationStatement(520) at 1", "Insert InfixExpression: !=(523) into IfStatement(615) at 0", "Insert Block(614) into IfStatement(615) at 1", "Insert MethodInvocation(618) into ReturnStatement(619) at 0", "Insert SimpleName: result(396) into VariableDeclarationFragment(400) at 0", "Insert ClassInstanceCreation(399) into VariableDeclarationFragment(400) at 1", "Insert QualifiedName: result.returnCode(402) into Assignment: =(412) at 0", "Insert QualifiedName: result.mutationTime(414) into Assignment: =(418) at 0", "Update SimpleName: input(425) to proto", "Move SimpleName: input(425) into MethodInvocation(422) at 0", "Update SimpleName: readBoolean(426) to hasTable", "Move SimpleName: readBoolean(426) into MethodInvocation(422) at 1", "Insert MethodInvocation(440) into InfixExpression: >(442) at 0", "Move NumberLiteral: 0(456) into InfixExpression: >(442) at 1", "Move ExpressionStatement(464) into Block(468) at 0", "Insert EnhancedForStatement(467) into Block(468) at 1", "Insert QualifiedName: result.columnName(470) into Assignment: =(472) at 0", "Insert QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY(471) into Assignment: =(472) at 1", "Insert SimpleName: proto(474) into MethodInvocation(476) at 0", "Insert SimpleName: hasColumnName(475) into MethodInvocation(476) at 1", "Insert ExpressionStatement(484) into Block(485) at 0", "Update SimpleName: Bytes(503) to proto", "Move SimpleName: Bytes(503) into MethodInvocation(489) at 0", "Update SimpleName: readByteArray(504) to hasFamilyName", "Move SimpleName: readByteArray(504) into MethodInvocation(489) at 1", "Move ExpressionStatement(513) into Block(498) at 0", "Insert QualifiedName: MetaDataProtos.MetaDataResponse.Builder(513) into SimpleType: MetaDataProtos.MetaDataResponse.Builder(514) at 0", "Insert SimpleName: builder(515) into VariableDeclarationFragment(519) at 0", "Insert MethodInvocation(518) into VariableDeclarationFragment(519) at 1", "Insert SimpleName: result(521) into InfixExpression: !=(523) at 0", "Insert NullLiteral(522) into InfixExpression: !=(523) at 1", "Move ExpressionStatement(538) into Block(614) at 0", "Insert ExpressionStatement(543) into Block(614) at 1", "Move IfStatement(560) into Block(614) at 2", "Move IfStatement(587) into Block(614) at 3", "Insert IfStatement(596) into Block(614) at 4", "Insert IfStatement(613) into Block(614) at 5", "Update SimpleName: output(624) to builder", "Move SimpleName: output(624) into MethodInvocation(618) at 0", "Update SimpleName: writeBoolean(625) to build", "Move SimpleName: writeBoolean(625) into MethodInvocation(618) at 1", "Move SimpleType: MetaDataMutationResult(654) into ClassInstanceCreation(399) at 0", "Update SimpleName: input(419) to proto", "Update SimpleName: readLong(420) to getMutationTime", "Insert Assignment: =(434) into ExpressionStatement(435) at 0", "Update SimpleName: Bytes(449) to proto", "Move SimpleName: Bytes(449) into MethodInvocation(440) at 0", "Update SimpleName: input(451) to getTablesToDeleteCount", "Move SimpleName: input(451) into MethodInvocation(440) at 1", "Insert SingleVariableDeclaration(455) into EnhancedForStatement(467) at 0", "Insert MethodInvocation(458) into EnhancedForStatement(467) at 1", "Insert Block(466) into EnhancedForStatement(467) at 2", "Insert Assignment: =(483) into ExpressionStatement(484) at 0", "Insert Assignment: =(496) into ExpressionStatement(497) at 0", "Insert QualifiedName: MetaDataProtos.MetaDataResponse(516) into MethodInvocation(518) at 0", "Insert SimpleName: newBuilder(517) into MethodInvocation(518) at 1", "Insert MethodInvocation(542) into ExpressionStatement(543) at 0", "Insert Block(578) into IfStatement(579) at 1", "Insert InfixExpression: !=(584) into IfStatement(596) at 0", "Insert Block(595) into IfStatement(596) at 1", "Insert InfixExpression: !=(601) into IfStatement(613) at 0", "Insert Block(612) into IfStatement(613) at 1", "Insert MethodInvocation(408) into MethodInvocation(410) at 0", "Update SimpleName: input(411) to ordinal", "Insert QualifiedName: result.wasUpdated(423) into Assignment: =(425) at 0", "Insert BooleanLiteral: true(424) into Assignment: =(425) at 1", "Insert QualifiedName: result.table(427) into Assignment: =(434) at 0", "Insert MethodInvocation(433) into Assignment: =(434) at 1", "Insert QualifiedName: result.tableNamesToDelete(443) into Assignment: =(450) at 0", "Insert SimpleType: ByteString(453) into SingleVariableDeclaration(455) at 0", "Insert SimpleName: tableName(454) into SingleVariableDeclaration(455) at 1", "Update SimpleName: readBoolean(470) to proto", "Move SimpleName: readBoolean(470) into MethodInvocation(458) at 0", "Insert SimpleName: getTablesToDeleteList(457) into MethodInvocation(458) at 1", "Insert ExpressionStatement(465) into Block(466) at 0", "Insert QualifiedName: result.columnName(477) into Assignment: =(483) at 0", "Insert MethodInvocation(482) into Assignment: =(483) at 1", "Insert QualifiedName: result.familyName(490) into Assignment: =(496) at 0", "Insert MethodInvocation(495) into Assignment: =(496) at 1", "Update SimpleName: WritableUtils(531) to builder", "Update SimpleName: writeVInt(532) to setReturnCode", "Insert ArrayAccess(534) into MethodInvocation(535) at 2", "Update SimpleName: output(539) to builder", "Move SimpleName: output(539) into MethodInvocation(542) at 0", "Update SimpleName: mutationTime(541) to setMutationTime", "Move SimpleName: mutationTime(541) into MethodInvocation(542) at 1", "Insert MethodInvocation(541) into MethodInvocation(542) at 2", "Insert QualifiedName: result.table(544) into InfixExpression: !=(546) at 0", "Insert MethodInvocation(559) into InfixExpression: !=(561) at 0", "Insert EnhancedForStatement(577) into Block(578) at 0", "Insert MethodInvocation(582) into InfixExpression: !=(584) at 0", "Move NullLiteral(589) into InfixExpression: !=(584) at 1", "Insert ExpressionStatement(594) into Block(595) at 0", "Insert MethodInvocation(599) into InfixExpression: !=(601) at 0", "Insert NullLiteral(600) into InfixExpression: !=(601) at 1", "Move ExpressionStatement(620) into Block(612) at 0", "Update SimpleName: WritableUtils(409) to proto", "Move SimpleName: WritableUtils(409) into MethodInvocation(408) at 0", "Update SimpleName: readVInt(410) to getReturnCode", "Move SimpleName: readVInt(410) into MethodInvocation(408) at 1", "Insert SimpleName: PTableImpl(428) into MethodInvocation(433) at 0", "Update SimpleName: readFields(442) to createFromProto", "Move SimpleName: readFields(442) into MethodInvocation(433) at 1", "Insert MethodInvocation(432) into MethodInvocation(433) at 2", "Update SimpleName: Bytes(459) to Lists", "Update SimpleName: readByteArray(460) to newArrayListWithExpectedSize", "Insert MethodInvocation(448) into MethodInvocation(449) at 2", "Insert SimpleName: ByteString(452) into SimpleType: ByteString(453) at 0", "Insert MethodInvocation(464) into ExpressionStatement(465) at 0", "Insert MethodInvocation(480) into MethodInvocation(482) at 0", "Insert SimpleName: toByteArray(481) into MethodInvocation(482) at 1", "Insert MethodInvocation(493) into MethodInvocation(495) at 0", "Update SimpleName: tableName(511) to toByteArray", "Move SimpleName: tableName(511) into MethodInvocation(495) at 1", "Insert MethodInvocation(528) into ArrayAccess(534) at 0", "Insert MethodInvocation(533) into ArrayAccess(534) at 1", "Update SimpleName: output(544) to result", "Move SimpleName: output(544) into MethodInvocation(541) at 0", "Insert SimpleName: getMutationTime(540) into MethodInvocation(541) at 1", "Insert SimpleName: result(557) into MethodInvocation(559) at 0", "Insert SimpleName: getTableNamesToDelete(558) into MethodInvocation(559) at 1", "Move SingleVariableDeclaration(613) into EnhancedForStatement(577) at 0", "Insert QualifiedName: result.tableNamesToDelete(567) into EnhancedForStatement(577) at 1", "Insert Block(576) into EnhancedForStatement(577) at 2", "Insert SimpleName: result(580) into MethodInvocation(582) at 0", "Insert SimpleName: getColumnName(581) into MethodInvocation(582) at 1", "Insert MethodInvocation(593) into ExpressionStatement(594) at 0", "Insert SimpleName: result(597) into MethodInvocation(599) at 0", "Insert SimpleName: getFamilyName(598) into MethodInvocation(599) at 1", "Insert MethodInvocation(610) into ExpressionStatement(611) at 0", "Update SimpleName: input(443) to proto", "Move SimpleName: input(443) into MethodInvocation(432) at 0", "Insert SimpleName: getTable(431) into MethodInvocation(432) at 1", "Insert SimpleName: proto(446) into MethodInvocation(448) at 0", "Update SimpleName: input(461) to getTablesToDeleteCount", "Move SimpleName: input(461) into MethodInvocation(448) at 1", "Insert QualifiedName: result.tableNamesToDelete(459) into MethodInvocation(464) at 0", "Insert SimpleName: add(460) into MethodInvocation(464) at 1", "Insert MethodInvocation(463) into MethodInvocation(464) at 2", "Insert SimpleName: proto(478) into MethodInvocation(480) at 0", "Insert SimpleName: getColumnName(479) into MethodInvocation(480) at 1", "Update SimpleName: tableNamesToDelete(509) to proto", "Move SimpleName: tableNamesToDelete(509) into MethodInvocation(493) at 0", "Update SimpleName: add(510) to getFamilyName", "Move SimpleName: add(510) into MethodInvocation(493) at 1", "Insert QualifiedName: MetaDataProtos.MutationCode(526) into MethodInvocation(528) at 0", "Update SimpleName: output(533) to values", "Move SimpleName: output(533) into MethodInvocation(528) at 1", "Insert MethodInvocation(531) into MethodInvocation(533) at 0", "Move SimpleName: ordinal(535) into MethodInvocation(533) at 1", "Insert SimpleName: builder(547) into MethodInvocation(553) at 0", "Update SimpleName: table(554) to setTable", "Insert MethodInvocation(552) into MethodInvocation(553) at 2", "Move ExpressionStatement(585) into Block(576) at 0", "Update SimpleName: tableNamesToDelete(591) to builder", "Move SimpleName: tableNamesToDelete(591) into MethodInvocation(593) at 0", "Update SimpleName: size(592) to setColumnName", "Move SimpleName: size(592) into MethodInvocation(593) at 1", "Insert MethodInvocation(592) into MethodInvocation(593) at 2", "Insert SimpleName: builder(602) into MethodInvocation(610) at 0", "Insert SimpleName: setFamilyName(603) into MethodInvocation(610) at 1", "Insert MethodInvocation(609) into MethodInvocation(610) at 2", "Update SimpleName: input(477) to tableName", "Move SimpleName: input(477) into MethodInvocation(463) at 0", "Update SimpleName: readInt(478) to toByteArray", "Move SimpleName: readInt(478) into MethodInvocation(463) at 1", "Insert SimpleName: result(529) into MethodInvocation(531) at 0", "Update SimpleName: returnCode(534) to getMutationCode", "Move SimpleName: returnCode(534) into MethodInvocation(531) at 1", "Update SimpleName: write(555) to PTableImpl", "Move SimpleName: write(555) into MethodInvocation(552) at 0", "Update SimpleName: output(556) to toProto", "Move SimpleName: output(556) into MethodInvocation(552) at 1", "Insert QualifiedName: result.table(551) into MethodInvocation(552) at 2", "Update SimpleName: output(602) to HBaseZeroCopyByteString", "Move SimpleName: output(602) into MethodInvocation(592) at 0", "Update SimpleName: writeInt(603) to wrap", "Move SimpleName: writeInt(603) into MethodInvocation(592) at 1", "Move MethodInvocation(606) into MethodInvocation(592) at 2", "Update SimpleName: Bytes(615) to HBaseZeroCopyByteString", "Move SimpleName: Bytes(615) into MethodInvocation(609) at 0", "Update SimpleName: writeByteArray(616) to wrap", "Move SimpleName: writeByteArray(616) into MethodInvocation(609) at 1", "Insert MethodInvocation(608) into MethodInvocation(609) at 2", "Update SimpleName: Bytes(575) to builder", "Update SimpleName: writeByteArray(576) to addTablesToDelete", "Insert MethodInvocation(573) into MethodInvocation(574) at 2", "Update SimpleName: tableNamesToDelete(604) to result", "Update SimpleName: size(605) to getColumnName", "Update SimpleName: output(617) to result", "Move SimpleName: output(617) into MethodInvocation(608) at 0", "Update SimpleName: tableName(618) to getFamilyName", "Move SimpleName: tableName(618) into MethodInvocation(608) at 1", "Update SimpleName: output(577) to HBaseZeroCopyByteString", "Move SimpleName: output(577) into MethodInvocation(573) at 0", "Insert SimpleName: wrap(571) into MethodInvocation(573) at 1", "Insert SimpleName: tableName(572) into MethodInvocation(573) at 2", "Delete QualifiedName: java.io.DataInput(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.io.DataOutput(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.io.IOException(6)", "Delete ImportDeclaration(7)", "Delete SimpleName: Writable(145)", "Delete SimpleType: Writable(146)", "Delete SimpleName: Override(392)", "Delete MarkerAnnotation(393)", "Delete PrimitiveType: void(395)", "Delete ThisExpression(403)", "Delete SimpleName: returnCode(404)", "Delete FieldAccess(405)", "Delete ThisExpression(416)", "Delete SimpleName: mutationTime(417)", "Delete FieldAccess(418)", "Delete ThisExpression(431)", "Delete SimpleName: table(432)", "Delete FieldAccess(433)", "Delete SimpleName: PTableImpl(434)", "Delete SimpleType: PTableImpl(435)", "Delete ClassInstanceCreation(436)", "Delete ThisExpression(439)", "Delete SimpleName: table(440)", "Delete FieldAccess(441)", "Delete MethodInvocation(444)", "Delete SimpleName: familyName(458)", "Delete SimpleName: tableNamesToDelete(482)", "Delete SimpleName: Lists(483)", "Delete SimpleName: newArrayListWithExpectedSize(484)", "Delete SimpleName: count(485)", "Delete MethodInvocation(486)", "Delete MethodInvocation(512)", "Delete SimpleName: IOException(401)", "Delete SimpleType: IOException(402)", "Delete SimpleName: wasUpdated(424)", "Delete MethodInvocation(427)", "Delete Assignment: =(428)", "Delete ExpressionStatement(429)", "Delete SimpleName: wasUpdated(430)", "Delete IfStatement(447)", "Delete SimpleName: columnName(448)", "Delete SimpleName: readByteArray(450)", "Delete MethodInvocation(452)", "Delete Assignment: =(453)", "Delete ExpressionStatement(454)", "Delete QualifiedName: columnName.length(455)", "Delete InfixExpression: >(457)", "Delete Block(465)", "Delete IfStatement(466)", "Delete PrimitiveType: boolean(467)", "Delete SimpleName: hasTablesToDelete(468)", "Delete SimpleName: input(469)", "Delete MethodInvocation(471)", "Delete VariableDeclarationFragment(472)", "Delete VariableDeclarationStatement(473)", "Delete SimpleName: hasTablesToDelete(474)", "Delete PrimitiveType: int(475)", "Delete SimpleName: count(476)", "Delete MethodInvocation(479)", "Delete VariableDeclarationFragment(480)", "Delete VariableDeclarationStatement(481)", "Delete PrimitiveType: int(489)", "Delete SimpleName: i(490)", "Delete NumberLiteral: 0(491)", "Delete VariableDeclarationFragment(492)", "Delete VariableDeclarationExpression(493)", "Delete SimpleName: i(494)", "Delete SimpleName: count(495)", "Delete InfixExpression: <(496)", "Delete SimpleName: i(497)", "Delete PostfixExpression: ++(498)", "Delete PrimitiveType: byte(499)", "Delete Dimension(500)", "Delete ArrayType: byte[](501)", "Delete SimpleName: tableName(502)", "Delete SimpleName: input(505)", "Delete MethodInvocation(506)", "Delete VariableDeclarationFragment(507)", "Delete VariableDeclarationStatement(508)", "Delete Block(514)", "Delete ForStatement(515)", "Delete Block(516)", "Delete IfStatement(517)", "Delete Block(518)", "Delete SimpleName: Override(520)", "Delete MarkerAnnotation(521)", "Delete PrimitiveType: void(523)", "Delete SimpleName: write(524)", "Delete SimpleType: DataOutput(526)", "Delete SimpleName: output(527)", "Delete SingleVariableDeclaration(528)", "Delete SimpleName: IOException(529)", "Delete SimpleType: IOException(530)", "Delete MethodInvocation(536)", "Delete SimpleName: table(551)", "Delete SimpleName: columnName(572)", "Delete SimpleName: familyName(578)", "Delete NullLiteral(579)", "Delete InfixExpression: ==(580)", "Delete QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY(581)", "Delete SimpleName: familyName(582)", "Delete ConditionalExpression(583)", "Delete Block(586)", "Delete MethodInvocation(619)", "Delete SimpleName: writeLong(540)", "Delete MethodInvocation(542)", "Delete ExpressionStatement(543)", "Delete SimpleName: writeBoolean(545)", "Delete SimpleName: table(546)", "Delete NullLiteral(547)", "Delete InfixExpression: !=(548)", "Delete MethodInvocation(549)", "Delete ExpressionStatement(550)", "Delete SimpleName: Bytes(561)", "Delete SimpleName: writeByteArray(562)", "Delete SimpleName: output(563)", "Delete SimpleName: columnName(564)", "Delete NullLiteral(565)", "Delete InfixExpression: ==(566)", "Delete QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY(567)", "Delete SimpleName: columnName(568)", "Delete ConditionalExpression(569)", "Delete MethodInvocation(570)", "Delete ExpressionStatement(571)", "Delete SimpleName: tableNamesToDelete(588)", "Delete InfixExpression: !=(590)", "Delete MethodInvocation(593)", "Delete NumberLiteral: 0(594)", "Delete InfixExpression: >(595)", "Delete InfixExpression: &&(596)", "Delete SimpleName: output(597)", "Delete SimpleName: writeBoolean(598)", "Delete BooleanLiteral: true(599)", "Delete MethodInvocation(600)", "Delete ExpressionStatement(601)", "Delete MethodInvocation(607)", "Delete ExpressionStatement(608)", "Delete SimpleName: tableNamesToDelete(614)", "Delete Block(621)", "Delete EnhancedForStatement(622)", "Delete Block(623)", "Delete BooleanLiteral: false(626)", "Delete MethodInvocation(627)", "Delete ExpressionStatement(628)", "Delete Block(629)", "Delete IfStatement(630)", "Delete TextElement: The the latest Phoenix table at or before the given clientTimestamp. If the(634)", "Delete TextElement: client already has the latest (based on the tableTimestamp), then no table(635)", "Delete TextElement: is returned.(636)", "Delete TagElement(637)", "Delete SimpleName: tenantId(638)", "Delete TagElement: @param(639)", "Delete SimpleName: schemaName(640)", "Delete TagElement: @param(641)", "Delete SimpleName: tableName(642)", "Delete TagElement: @param(643)", "Delete SimpleName: tableTimestamp(644)", "Delete TagElement: @param(645)", "Delete SimpleName: clientTimestamp(646)", "Delete TagElement: @param(647)", "Delete TextElement:  MetaDataMutationResult(648)", "Delete TagElement: @return(649)", "Delete SimpleName: IOException(650)", "Delete TagElement: @throws(651)", "Delete Javadoc(652)", "Delete SimpleName: getTable(655)", "Delete PrimitiveType: byte(656)", "Delete Dimension(657)", "Delete ArrayType: byte[](658)", "Delete SimpleName: tenantId(659)", "Delete SingleVariableDeclaration(660)", "Delete PrimitiveType: byte(661)", "Delete Dimension(662)", "Delete ArrayType: byte[](663)", "Delete SimpleName: schemaName(664)", "Delete SingleVariableDeclaration(665)", "Delete PrimitiveType: byte(666)", "Delete Dimension(667)", "Delete ArrayType: byte[](668)", "Delete SimpleName: tableName(669)", "Delete SingleVariableDeclaration(670)", "Delete PrimitiveType: long(671)", "Delete SimpleName: tableTimestamp(672)", "Delete SingleVariableDeclaration(673)", "Delete PrimitiveType: long(674)", "Delete SimpleName: clientTimestamp(675)", "Delete SingleVariableDeclaration(676)", "Delete SimpleName: IOException(677)", "Delete SimpleType: IOException(678)", "Delete MethodDeclaration(679)", "Delete TextElement: Create a new Phoenix table(680)", "Delete TagElement(681)", "Delete SimpleName: tableMetadata(682)", "Delete TagElement: @param(683)", "Delete TextElement:  MetaDataMutationResult(684)", "Delete TagElement: @return(685)", "Delete SimpleName: IOException(686)", "Delete TagElement: @throws(687)", "Delete Javadoc(688)", "Delete SimpleName: createTable(691)", "Delete SimpleName: List(692)", "Delete SimpleType: List(693)", "Delete SimpleName: Mutation(694)", "Delete SimpleType: Mutation(695)", "Delete ParameterizedType: List<Mutation>(696)", "Delete SimpleName: tableMetadata(697)", "Delete SingleVariableDeclaration(698)", "Delete SimpleName: IOException(699)", "Delete SimpleType: IOException(700)", "Delete MethodDeclaration(701)", "Delete TextElement: Drop an existing Phoenix table(702)", "Delete TagElement(703)", "Delete SimpleName: tableMetadata(704)", "Delete TagElement: @param(705)", "Delete SimpleName: tableType(706)", "Delete TagElement: @param(707)", "Delete TextElement:  MetaDataMutationResult(708)", "Delete TagElement: @return(709)", "Delete SimpleName: IOException(710)", "Delete TagElement: @throws(711)", "Delete Javadoc(712)", "Delete SimpleName: dropTable(715)", "Delete SimpleName: List(716)", "Delete SimpleType: List(717)", "Delete SimpleName: Mutation(718)", "Delete SimpleType: Mutation(719)", "Delete ParameterizedType: List<Mutation>(720)", "Delete SimpleName: tableMetadata(721)", "Delete SingleVariableDeclaration(722)", "Delete SimpleName: String(723)", "Delete SimpleType: String(724)", "Delete SimpleName: tableType(725)", "Delete SingleVariableDeclaration(726)", "Delete SimpleName: IOException(727)", "Delete SimpleType: IOException(728)", "Delete MethodDeclaration(729)", "Delete TextElement: Add a column to an existing Phoenix table(730)", "Delete TagElement(731)", "Delete SimpleName: tableMetadata(732)", "Delete TagElement: @param(733)", "Delete TextElement:  MetaDataMutationResult(734)", "Delete TagElement: @return(735)", "Delete SimpleName: IOException(736)", "Delete TagElement: @throws(737)", "Delete Javadoc(738)", "Delete SimpleName: MetaDataMutationResult(739)", "Delete SimpleType: MetaDataMutationResult(740)", "Delete SimpleName: addColumn(741)", "Delete SimpleName: List(742)", "Delete SimpleType: List(743)", "Delete SimpleName: Mutation(744)", "Delete SimpleType: Mutation(745)", "Delete ParameterizedType: List<Mutation>(746)", "Delete SimpleName: tableMetadata(747)", "Delete SingleVariableDeclaration(748)", "Delete SimpleName: IOException(749)", "Delete SimpleType: IOException(750)", "Delete MethodDeclaration(751)", "Delete TextElement: Drop a column from an existing Phoenix table(752)", "Delete TagElement(753)", "Delete SimpleName: tableMetadata(754)", "Delete TagElement: @param(755)", "Delete TextElement:  MetaDataMutationResult(756)", "Delete TagElement: @return(757)", "Delete SimpleName: IOException(758)", "Delete TagElement: @throws(759)", "Delete Javadoc(760)", "Delete SimpleName: MetaDataMutationResult(761)", "Delete SimpleType: MetaDataMutationResult(762)", "Delete SimpleName: dropColumn(763)", "Delete SimpleName: List(764)", "Delete SimpleType: List(765)", "Delete SimpleName: Mutation(766)", "Delete SimpleType: Mutation(767)", "Delete ParameterizedType: List<Mutation>(768)", "Delete SimpleName: tableMetadata(769)", "Delete SingleVariableDeclaration(770)", "Delete SimpleName: IOException(771)", "Delete SimpleType: IOException(772)", "Delete MethodDeclaration(773)", "Delete SimpleName: updateIndexState(776)", "Delete SimpleName: List(777)", "Delete SimpleType: List(778)", "Delete SimpleName: Mutation(779)", "Delete SimpleType: Mutation(780)", "Delete ParameterizedType: List<Mutation>(781)", "Delete SimpleName: tableMetadata(782)", "Delete SingleVariableDeclaration(783)", "Delete SimpleName: IOException(784)", "Delete SimpleType: IOException(785)", "Delete MethodDeclaration(786)", "Delete TextElement: Clears the server-side cache of table meta data. Used between test runs to(787)", "Delete TextElement: ensure no side effects.(788)", "Delete TagElement(789)", "Delete Javadoc(790)", "Delete PrimitiveType: void(791)", "Delete SimpleName: clearCache(792)", "Delete MethodDeclaration(793)", "Delete TextElement: Get the version of the server-side HBase and phoenix.jar. Used when initially connecting(794)", "Delete TextElement: to a cluster to ensure that the client and server jars are compatible.(795)", "Delete TagElement(796)", "Delete Javadoc(797)", "Delete PrimitiveType: long(798)", "Delete SimpleName: getVersion(799)", "Delete MethodDeclaration(800)"]}}, {"ScanRegionObserver_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0"]}, {"root": "MOVE from AnonymousClassDeclaration", "operations": ["MOV MethodDeclaration to AnonymousClassDeclaration at 9"]}, {"root": "INS MethodDeclaration to AnonymousClassDeclaration at 5", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: getMaxResultSize to MethodInvocation at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 5", "INS SimpleName: getMaxResultSize to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: s to MethodInvocation at 0", "INS PrimitiveType: long to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 5", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV SimpleType: IOException to MethodDeclaration at 4"]}, {"root": "UPDATE from next to nextRaw", "operations": ["UPD SimpleName: next from next to nextRaw", "UPD SimpleName: next from next to nextRaw"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from boolean to long", "operations": ["UPD PrimitiveType: boolean from boolean to long"]}, {"root": "INS SimpleName: getMaxResultSize to MethodDeclaration at 3", "operations": ["INS SimpleName: getMaxResultSize to MethodDeclaration at 3"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS Block to MethodDeclaration at 4"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: List from List to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: List from List to Cell"]}, {"root": "MOVE from ParameterizedType: List<KeyValue>", "operations": ["MOV SimpleType: List to ParameterizedType: List<KeyValue> at 0"]}, {"root": "UPDATE from result to getMaxResultSize", "operations": ["UPD SimpleName: result from result to getMaxResultSize"]}, {"root": "UPDATE from metric to limit", "operations": ["UPD SimpleName: metric from metric to limit"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL MethodInvocation", "DEL Block", "DEL Block", "DEL SimpleType: KeyValue", "DEL MethodInvocation", "DEL SimpleName: KeyValue", "DEL ReturnStatement", "DEL SimpleName: metric", "DEL SimpleName: results", "DEL SimpleName: t", "DEL SimpleType: Throwable", "DEL MethodInvocation", "DEL SimpleName: c", "DEL Block", "DEL SimpleName: getRegion", "DEL ParameterizedType: List<KeyValue>", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: t", "DEL Modifier: public", "DEL SimpleName: next", "DEL SimpleName: s", "DEL TryStatement", "DEL SimpleType: String", "DEL SimpleName: metric", "DEL SimpleName: throwIOException", "DEL ReturnStatement", "DEL SimpleName: results", "DEL MethodInvocation", "DEL SimpleName: getRegionNameAsString", "DEL SimpleName: ServerUtil", "DEL SimpleName: next", "DEL SimpleName: getEnvironment", "DEL SimpleName: String", "DEL CatchClause", "DEL ExpressionStatement", "DEL SimpleName: Throwable", "DEL SingleVariableDeclaration", "DEL PrimitiveType: boolean", "DEL SingleVariableDeclaration", "DEL BooleanLiteral: false"]}, {"root": "DEL SimpleType: KeyValue", "operations": ["DEL SimpleType: KeyValue", "DEL SimpleName: KeyValue"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: String", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL SimpleName: metric"]}, {"root": "DEL SimpleName: limit", "operations": ["DEL SimpleName: limit"]}, {"root": "DEL SimpleName: metric", "operations": ["DEL SimpleName: metric"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: String", "DEL SimpleName: metric", "DEL SimpleType: String"]}, {"root": "DEL SimpleName: nextRaw", "operations": ["DEL SimpleName: nextRaw"]}, {"root": "DEL SimpleName: limit", "operations": ["DEL SimpleName: limit"]}, {"root": "DEL SimpleName: metric", "operations": ["DEL SimpleName: metric"]}, {"root": "DEL SimpleName: nextRaw", "operations": ["DEL SimpleName: nextRaw"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: KeyValue", "DEL SimpleType: List", "DEL SimpleName: KeyValue", "DEL SimpleName: List", "DEL ParameterizedType: List<KeyValue>", "DEL SimpleName: result", "DEL SingleVariableDeclaration"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: limit", "DEL PrimitiveType: int"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: metric", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL SimpleName: String"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleType: IOException", "DEL SimpleName: IOException"]}, {"root": "DEL Block", "operations": ["DEL CatchClause", "DEL SimpleName: getRegionNameAsString", "DEL SimpleName: c", "DEL Block", "DEL SimpleName: t", "DEL SimpleName: t", "DEL SingleVariableDeclaration", "DEL SimpleName: getRegion", "DEL SimpleName: getEnvironment", "DEL MethodInvocation", "DEL MethodInvocation", "DEL BooleanLiteral: false", "DEL SimpleType: Throwable", "DEL ExpressionStatement", "DEL SimpleName: Throwable", "DEL SimpleName: ServerUtil", "DEL TryStatement", "DEL Block", "DEL Block", "DEL ReturnStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: throwIOException"]}]}}, {"ScanRegionObserver_diff": {"operations": ["Insert ImportDeclaration(15) into CompilationUnit(1087) at 7", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(14) into ImportDeclaration(15) at 0", "Move MethodDeclaration(998) into AnonymousClassDeclaration(1081) at 9", "Insert MethodDeclaration(791) into AnonymousClassDeclaration(792) at 5", "Move MarkerAnnotation(853) into MethodDeclaration(791) at 0", "Insert Modifier: public(783) into MethodDeclaration(791) at 1", "Insert PrimitiveType: long(784) into MethodDeclaration(791) at 2", "Insert SimpleName: getMaxResultSize(785) into MethodDeclaration(791) at 3", "Insert Block(790) into MethodDeclaration(791) at 4", "Move SimpleType: IOException(967) into MethodDeclaration(949) at 4", "Update SimpleName: next(951) to nextRaw", "Move SimpleType: IOException(869) into MethodDeclaration(1022) at 5", "Move MarkerAnnotation(1114) into MethodDeclaration(1069) at 0", "Move SingleVariableDeclaration(961) into MethodDeclaration(1069) at 6", "Move MarkerAnnotation(1066) into MethodDeclaration(1080) at 0", "Update PrimitiveType: boolean(1116) to long", "Insert SimpleName: getMaxResultSize(1074) into MethodDeclaration(1080) at 3", "Insert Block(1079) into MethodDeclaration(1080) at 4", "Update ParameterizedType: List<KeyValue>(696) to List<Cell>", "Insert ReturnStatement(789) into Block(790) at 0", "Update ParameterizedType: List<KeyValue>(818) to List<Cell>", "Update ParameterizedType: List<KeyValue>(909) to List<Cell>", "Update ParameterizedType: List<KeyValue>(956) to List<Cell>", "Update ParameterizedType: List<KeyValue>(1074) to List<Cell>", "Move ReturnStatement(1140) into Block(1079) at 0", "Update SimpleType: KeyValue(695) to Cell", "Insert MethodInvocation(788) into ReturnStatement(789) at 0", "Update SimpleType: KeyValue(817) to Cell", "Move SimpleType: List(858) into ParameterizedType: List<Cell>(874) at 0", "Update SimpleType: List(906) to Cell", "Update SimpleType: KeyValue(955) to Cell", "Update SimpleType: KeyValue(1073) to Cell", "Update SimpleName: KeyValue(694) to Cell", "Insert SimpleName: s(786) into MethodInvocation(788) at 0", "Insert SimpleName: getMaxResultSize(787) into MethodInvocation(788) at 1", "Update SimpleName: KeyValue(816) to Cell", "Update SimpleName: List(905) to Cell", "Update SimpleName: KeyValue(954) to Cell", "Update SimpleName: KeyValue(1072) to Cell", "Update SimpleName: result(1136) to getMaxResultSize", "Update SimpleName: next(969) to nextRaw", "Update SimpleName: metric(1086) to limit", "Delete Modifier: public(854)", "Delete PrimitiveType: boolean(855)", "Delete SimpleName: next(856)", "Delete SimpleName: KeyValue(859)", "Delete SimpleType: KeyValue(860)", "Delete ParameterizedType: List<KeyValue>(861)", "Delete SimpleName: results(862)", "Delete SingleVariableDeclaration(863)", "Delete SimpleName: String(864)", "Delete SimpleType: String(865)", "Delete SimpleName: metric(866)", "Delete SingleVariableDeclaration(867)", "Delete SimpleName: s(870)", "Delete SimpleName: next(871)", "Delete SimpleName: results(872)", "Delete SimpleName: metric(873)", "Delete MethodInvocation(874)", "Delete ReturnStatement(875)", "Delete Block(876)", "Delete SimpleName: Throwable(877)", "Delete SimpleType: Throwable(878)", "Delete SimpleName: t(879)", "Delete SingleVariableDeclaration(880)", "Delete SimpleName: ServerUtil(881)", "Delete SimpleName: throwIOException(882)", "Delete SimpleName: c(883)", "Delete SimpleName: getEnvironment(884)", "Delete MethodInvocation(885)", "Delete SimpleName: getRegion(886)", "Delete MethodInvocation(887)", "Delete SimpleName: getRegionNameAsString(888)", "Delete MethodInvocation(889)", "Delete SimpleName: t(890)", "Delete MethodInvocation(891)", "Delete ExpressionStatement(892)", "Delete BooleanLiteral: false(893)", "Delete ReturnStatement(894)", "Delete Block(895)", "Delete CatchClause(896)", "Delete TryStatement(897)", "Delete Block(898)", "Delete MethodDeclaration(899)", "Delete SimpleName: KeyValue(907)", "Delete SimpleType: KeyValue(908)", "Delete SimpleName: String(962)", "Delete SimpleType: String(963)", "Delete SimpleName: metric(964)", "Delete SingleVariableDeclaration(965)", "Delete SimpleName: limit(971)", "Delete SimpleName: metric(972)", "Delete SimpleName: String(1077)", "Delete SimpleType: String(1078)", "Delete SimpleName: metric(1079)", "Delete SingleVariableDeclaration(1080)", "Delete SimpleName: nextRaw(1135)", "Delete SimpleName: limit(1137)", "Delete SimpleName: metric(1138)", "Delete SimpleName: nextRaw(1117)", "Delete SimpleName: List(1118)", "Delete SimpleType: List(1119)", "Delete SimpleName: KeyValue(1120)", "Delete SimpleType: KeyValue(1121)", "Delete ParameterizedType: List<KeyValue>(1122)", "Delete SimpleName: result(1123)", "Delete SingleVariableDeclaration(1124)", "Delete PrimitiveType: int(1125)", "Delete SimpleName: limit(1126)", "Delete SingleVariableDeclaration(1127)", "Delete SimpleName: String(1128)", "Delete SimpleType: String(1129)", "Delete SimpleName: metric(1130)", "Delete SingleVariableDeclaration(1131)", "Delete SimpleName: IOException(1132)", "Delete SimpleType: IOException(1133)", "Delete Block(1141)", "Delete SimpleName: Throwable(1142)", "Delete SimpleType: Throwable(1143)", "Delete SimpleName: t(1144)", "Delete SingleVariableDeclaration(1145)", "Delete SimpleName: ServerUtil(1146)", "Delete SimpleName: throwIOException(1147)", "Delete SimpleName: c(1148)", "Delete SimpleName: getEnvironment(1149)", "Delete MethodInvocation(1150)", "Delete SimpleName: getRegion(1151)", "Delete MethodInvocation(1152)", "Delete SimpleName: getRegionNameAsString(1153)", "Delete MethodInvocation(1154)", "Delete SimpleName: t(1155)", "Delete MethodInvocation(1156)", "Delete ExpressionStatement(1157)", "Delete BooleanLiteral: false(1158)", "Delete ReturnStatement(1159)", "Delete Block(1160)", "Delete CatchClause(1161)", "Delete TryStatement(1162)", "Delete Block(1163)"]}}, {"SequenceRegionObserver_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS ImportDeclaration to CompilationUnit at 21", "INS QualifiedName: org.apache.hadoop.hbase.regionserver.HRegion.RowLock to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 33", "operations": ["INS ImportDeclaration to CompilationUnit at 33", "INS QualifiedName: com.google.common.collect.Lists to ImportDeclaration at 0"]}, {"root": "UPDATE from java.util.NavigableMap to org.apache.hadoop.hbase.Cell", "operations": ["UPD QualifiedName: java.util.NavigableMap from java.util.NavigableMap to org.apache.hadoop.hbase.Cell"]}, {"root": "UPDATE from org.apache.hadoop.hbase.util.Pair to org.apache.hadoop.hbase.CellUtil", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.util.Pair from org.apache.hadoop.hbase.util.Pair to org.apache.hadoop.hbase.CellUtil"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS ExpressionStatement to Block at 2", "INS SimpleName: key to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: region to SingleVariableDeclaration at 1", "INS SimpleName: region to MethodInvocation at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: HRegion to SimpleType: HRegion at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS NullLiteral to InfixExpression: == at 1", "INS Block to MethodDeclaration at 8", "INS ParameterizedType: List<RowLock> to SingleVariableDeclaration at 0", "INS SimpleName: locks to SingleVariableDeclaration at 1", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: rowLock to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 1", "INS SimpleName: Bytes to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS Modifier: static to MethodDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: getRowLock to MethodInvocation at 1", "INS SimpleType: IOException to ClassInstanceCreation at 0", "INS StringLiteral: \"Failed to acquire lock on \" to InfixExpression: + at 0", "INS SimpleName: RowLock to SimpleType: RowLock at 0", "INS SimpleName: key to MethodInvocation at 2", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleType: IOException to MethodDeclaration at 7", "INS SimpleName: rowLock to InfixExpression: == at 0", "INS SimpleType: List to ParameterizedType: List<RowLock> at 0", "INS SimpleName: add to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: RowLock to VariableDeclarationStatement at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: RowLock to SimpleType: RowLock at 0", "INS SimpleName: locks to MethodInvocation at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: acquireLock to MethodDeclaration at 3", "INS SimpleType: RowLock to ParameterizedType: List<RowLock> at 1", "INS SimpleType: HRegion to SingleVariableDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: toStringBinary to MethodInvocation at 1", "INS SimpleName: rowLock to MethodInvocation at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "UPDATE from cq to key", "operations": ["UPD SimpleName: cq from cq to key"]}, {"root": "INS VariableDeclarationStatement to Block at 5", "operations": ["INS ParameterizedType: List<RowLock> to VariableDeclarationStatement at 0", "INS SimpleName: RowLock to SimpleType: RowLock at 0", "INS VariableDeclarationStatement to Block at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Lists to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: RowLock to ParameterizedType: List<RowLock> at 1", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS SimpleType: List to ParameterizedType: List<RowLock> at 0"]}, {"root": "INS TryStatement to Block at 8", "operations": ["INS TryStatement to Block at 8", "INS Block to TryStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: locks to MethodInvocation at 3", "INS SimpleName: acquireLock to MethodInvocation at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 15", "operations": ["INS VariableDeclarationStatement to Block at 15", "INS SimpleType: List to ParameterizedType: List<RowLock> at 0", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS SimpleType: RowLock to ParameterizedType: List<RowLock> at 1", "INS SimpleName: RowLock to SimpleType: RowLock at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Lists to MethodInvocation at 0", "INS ParameterizedType: List<RowLock> to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS TryStatement to Block at 17", "operations": ["INS SimpleName: locks to MethodInvocation at 3", "INS TryStatement to Block at 17", "INS Block to TryStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: acquireLock to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: Result to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: create to MethodInvocation at 1"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 2", "MOV CatchClause to TryStatement at 1"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: Long from Long to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: Long from Long to Cell"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1", "MOV Block to TryStatement at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from lid to locks", "operations": ["UPD SimpleName: lid from lid to locks", "UPD SimpleName: lid from lid to locks", "UPD SimpleName: lid from lid to locks", "UPD SimpleName: lid from lid to locks"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: lid to VariableDeclarationFragment at 0"]}, {"root": "MOVE from Block", "operations": ["MOV TryStatement to Block at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: lid to VariableDeclarationFragment at 0"]}, {"root": "MOVE from Block", "operations": ["MOV TryStatement to Block at 1"]}, {"root": "INS CastExpression to MethodInvocation at 2", "operations": ["INS SimpleName: Cell to SimpleType: Cell at 0", "INS CastExpression to MethodInvocation at 2", "INS SimpleType: Cell to CastExpression at 0"]}, {"root": "UPDATE from Integer to List", "operations": ["UPD SimpleName: Integer from Integer to List", "UPD SimpleName: NavigableMap from NavigableMap to List", "UPD SimpleType: NavigableMap from NavigableMap to List", "UPD SimpleName: Integer from Integer to List"]}, {"root": "MOVE from SimpleType: List", "operations": ["MOV SimpleName: Integer to SimpleType: List at 0"]}, {"root": "MOVE from SimpleType: List", "operations": ["MOV SimpleName: Integer to SimpleType: List at 0"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: row to MethodInvocation at 2", "MOV SimpleName: region to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: region to MethodInvocation at 1", "MOV SimpleName: row to MethodInvocation at 2"]}, {"root": "UPDATE from Pair[] to Mutation[]", "operations": ["UPD ArrayType: Pair[] from Pair[] to Mutation[]", "UPD ArrayType: Pair<Mutation,Integer>[] from Pair<Mutation,Integer>[] to Mutation[]", "UPD ArrayType: Pair<Mutation,Integer>[] from Pair<Mutation,Integer>[] to Mutation[]", "UPD ArrayType: Pair[] from Pair[] to Mutation[]"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: byte[] to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: byte[] to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: Result to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: create to MethodInvocation at 1"]}, {"root": "UPDATE from Map.Entry<byte[],NavigableMap<byte[],Long>> to Map.Entry<byte[],List<Cell>>", "operations": ["UPD ParameterizedType: Map.Entry<byte[],NavigableMap<byte[],Long>> from Map.Entry<byte[],NavigableMap<byte[],Long>> to Map.Entry<byte[],List<Cell>>"]}, {"root": "MOVE from ArrayType: Pair<Mutation,Integer>[]", "operations": ["MOV SimpleType: Mutation to ArrayType: Pair<Mutation,Integer>[] at 0"]}, {"root": "UPDATE from releaseRowLock to releaseRowLocks", "operations": ["UPD SimpleName: releaseRowLock from releaseRowLock to releaseRowLocks", "UPD SimpleName: releaseRowLock from releaseRowLock to releaseRowLocks"]}, {"root": "MOVE from ArrayType: Pair<Mutation,Integer>[]", "operations": ["MOV SimpleType: Mutation to ArrayType: Pair<Mutation,Integer>[] at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: NavigableMap<byte[],Long> from NavigableMap<byte[],Long> to List<Cell>"]}, {"root": "UPDATE from getFamilyMap to getFamilyCellMap", "operations": ["UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap", "UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap", "UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap", "UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap", "UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap", "UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap", "UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap"]}, {"root": "INS SingleVariableDeclaration to EnhancedForStatement at 0", "operations": ["INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleType: Cell to SingleVariableDeclaration at 0", "INS SimpleName: Cell to SimpleType: Cell at 0", "INS SimpleName: cq to SingleVariableDeclaration at 1"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV MethodInvocation to EnhancedForStatement at 1"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 3", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 3"]}, {"root": "INS QualifiedName: row.length to MethodInvocation at 4", "operations": ["INS QualifiedName: row.length to MethodInvocation at 4"]}, {"root": "INS MethodInvocation to MethodInvocation at 6", "operations": ["INS MethodInvocation to MethodInvocation at 6", "INS SimpleName: currentValueKV to MethodInvocation at 0", "INS SimpleName: getFamilyOffset to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 7", "operations": ["INS SimpleName: currentValueKV to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 7", "INS SimpleName: getFamilyLength to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 9", "operations": ["INS SimpleName: currentValueKV to MethodInvocation at 0", "INS SimpleName: getQualifierOffset to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 9"]}, {"root": "INS MethodInvocation to MethodInvocation at 10", "operations": ["INS SimpleName: currentValueKV to MethodInvocation at 0", "INS SimpleName: getQualifierLength to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 10"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 13", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 13"]}, {"root": "INS QualifiedName: valueBuffer.length to MethodInvocation at 14", "operations": ["INS QualifiedName: valueBuffer.length to MethodInvocation at 14"]}, {"root": "INS ArrayInitializer to ArrayCreation at 1", "operations": ["INS SimpleName: put to ArrayInitializer at 0", "INS ArrayInitializer to ArrayCreation at 1"]}, {"root": "UPDATE from keyValue to CellUtil", "operations": ["UPD SimpleName: keyValue from keyValue to CellUtil", "UPD SimpleName: keyValue from keyValue to CellUtil"]}, {"root": "UPDATE from getFamily to cloneFamily", "operations": ["UPD SimpleName: getFamily from getFamily to cloneFamily"]}, {"root": "INS SimpleName: keyValue to MethodInvocation at 2", "operations": ["INS SimpleName: keyValue to MethodInvocation at 2"]}, {"root": "UPDATE from getQualifier to cloneQualifier", "operations": ["UPD SimpleName: getQualifier from getQualifier to cloneQualifier"]}, {"root": "INS SimpleName: keyValue to MethodInvocation at 2", "operations": ["INS SimpleName: keyValue to MethodInvocation at 2"]}, {"root": "INS ArrayInitializer to ArrayCreation at 1", "operations": ["INS ArrayInitializer to ArrayCreation at 1", "INS SimpleName: m to ArrayInitializer at 0"]}, {"root": "INS CastExpression to MethodInvocation at 2", "operations": ["INS SimpleType: Cell to CastExpression at 0", "INS CastExpression to MethodInvocation at 2", "INS SimpleName: Cell to SimpleType: Cell at 0"]}, {"root": "UPDATE from getBuffer to getValueArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray"]}, {"root": "UPDATE from getFamily to getFamilyArray", "operations": ["UPD SimpleName: getFamily from getFamily to getFamilyArray"]}, {"root": "UPDATE from getQualifier to getQualifierArray", "operations": ["UPD SimpleName: getQualifier from getQualifier to getQualifierArray"]}, {"root": "MOVE from ArrayType: Pair[]", "operations": ["MOV SimpleType: Mutation to ArrayType: Pair[] at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: Result to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: create to MethodInvocation at 1"]}, {"root": "MOVE from ArrayType: Pair[]", "operations": ["MOV SimpleType: Mutation to ArrayType: Pair[] at 0"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS SimpleName: CellUtil to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: cloneQualifier to MethodInvocation at 1"]}, {"root": "INS CastExpression to MethodInvocation at 2", "operations": ["INS SimpleType: Cell to CastExpression at 0", "INS CastExpression to MethodInvocation at 2", "INS SimpleName: Cell to SimpleType: Cell at 0"]}, {"root": "INS SimpleType: Cell to SingleVariableDeclaration at 0", "operations": ["INS SimpleName: Cell to SimpleType: Cell at 0", "INS SimpleType: Cell to SingleVariableDeclaration at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: cq to MethodInvocation at 2"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1"]}, {"root": "INS ParenthesizedExpression to MethodInvocation at 0", "operations": ["INS ParenthesizedExpression to MethodInvocation at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: kv to CastExpression at 1"]}, {"root": "MOVE from CastExpression", "operations": ["MOV SimpleType: KeyValue to CastExpression at 0"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: Result", "DEL SimpleName: Result"]}, {"root": "DEL ArrayType: byte[]", "operations": ["DEL ArrayType: byte[]", "DEL PrimitiveType: byte", "DEL Dimension"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: keySet", "DEL MethodInvocation"]}, {"root": "DEL SingleMemberAnnotation", "operations": ["DEL StringLiteral: \"unchecked\"", "DEL SingleMemberAnnotation", "DEL SimpleName: SuppressWarnings"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL SimpleName: Integer", "DEL SimpleName: Pair", "DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleType: Integer", "DEL SimpleType: Pair"]}, {"root": "DEL SimpleType: Pair", "operations": ["DEL SimpleType: Pair", "DEL SimpleName: Pair"]}, {"root": "DEL NumberLiteral: 1", "operations": ["DEL NumberLiteral: 1"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: lid", "DEL SimpleName: Integer", "DEL Assignment: =", "DEL SimpleType: Integer", "DEL SimpleName: put", "DEL ClassInstanceCreation", "DEL ParameterizedType: Pair<Mutation,Integer>", "DEL ExpressionStatement", "DEL SimpleName: mutations", "DEL ArrayAccess", "DEL SimpleName: Pair", "DEL SimpleType: Pair", "DEL NumberLiteral: 0"]}, {"root": "DEL TryStatement", "operations": ["DEL SimpleType: Integer", "DEL SimpleName: getLock", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Block", "DEL VariableDeclarationStatement", "DEL TryStatement", "DEL BooleanLiteral: true", "DEL NullLiteral"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: Result", "DEL SimpleName: Result"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL SimpleName: kv", "operations": ["DEL SimpleName: kv"]}, {"root": "DEL SingleMemberAnnotation", "operations": ["DEL StringLiteral: \"unchecked\"", "DEL SimpleName: SuppressWarnings", "DEL SingleMemberAnnotation"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL SimpleType: Integer", "DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleName: Integer", "DEL SimpleName: Pair", "DEL SimpleType: Pair"]}, {"root": "DEL SimpleType: Pair", "operations": ["DEL SimpleType: Pair", "DEL SimpleName: Pair"]}, {"root": "DEL NumberLiteral: 1", "operations": ["DEL NumberLiteral: 1"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL NumberLiteral: 0", "DEL ArrayAccess", "DEL SimpleType: Pair", "DEL SimpleName: Pair", "DEL SimpleName: m", "DEL SimpleName: Integer", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleType: Integer", "DEL SimpleName: lid", "DEL ParameterizedType: Pair<Mutation,Integer>", "DEL Assignment: =", "DEL SimpleName: mutations"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: Result", "DEL SimpleName: Result", "DEL ClassInstanceCreation"]}, {"root": "DEL TryStatement", "operations": ["DEL BooleanLiteral: true", "DEL VariableDeclarationFragment", "DEL Block", "DEL NullLiteral", "DEL TryStatement", "DEL SimpleName: getLock", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleType: Integer"]}]}}, {"SequenceRegionObserver_diff": {"operations": ["Move ImportDeclaration(45) into CompilationUnit(1245) at 6", "Insert ImportDeclaration(43) into CompilationUnit(1245) at 21", "Insert ImportDeclaration(67) into CompilationUnit(1245) at 33", "Update QualifiedName: java.util.NavigableMap(10) to org.apache.hadoop.hbase.Cell", "Update QualifiedName: org.apache.hadoop.hbase.util.Pair(44) to org.apache.hadoop.hbase.CellUtil", "Insert QualifiedName: org.apache.hadoop.hbase.regionserver.HRegion.RowLock(42) into ImportDeclaration(43) at 0", "Insert QualifiedName: com.google.common.collect.Lists(66) into ImportDeclaration(67) at 0", "Insert MethodDeclaration(246) into TypeDeclaration: class(1244) at 10", "Insert Modifier: private(194) into MethodDeclaration(246) at 0", "Insert Modifier: static(195) into MethodDeclaration(246) at 1", "Insert PrimitiveType: void(196) into MethodDeclaration(246) at 2", "Insert SimpleName: acquireLock(197) into MethodDeclaration(246) at 3", "Insert SingleVariableDeclaration(201) into MethodDeclaration(246) at 4", "Move SingleVariableDeclaration(355) into MethodDeclaration(246) at 5", "Insert SingleVariableDeclaration(213) into MethodDeclaration(246) at 6", "Insert SimpleType: IOException(215) into MethodDeclaration(246) at 7", "Insert Block(245) into MethodDeclaration(246) at 8", "Insert SimpleType: HRegion(199) into SingleVariableDeclaration(201) at 0", "Insert SimpleName: region(200) into SingleVariableDeclaration(201) at 1", "Update SimpleName: cq(354) to key", "Insert ParameterizedType: List<RowLock>(211) into SingleVariableDeclaration(213) at 0", "Insert SimpleName: locks(212) into SingleVariableDeclaration(213) at 1", "Insert SimpleName: IOException(214) into SimpleType: IOException(215) at 0", "Insert VariableDeclarationStatement(224) into Block(245) at 0", "Insert IfStatement(239) into Block(245) at 1", "Insert ExpressionStatement(244) into Block(245) at 2", "Insert VariableDeclarationStatement(321) into Block(670) at 5", "Insert TryStatement(669) into Block(670) at 8", "Insert VariableDeclarationStatement(899) into Block(1242) at 15", "Insert TryStatement(1241) into Block(1242) at 17", "Insert MethodInvocation(190) into ReturnStatement(191) at 0", "Insert SimpleName: HRegion(198) into SimpleType: HRegion(199) at 0", "Insert SimpleType: List(208) into ParameterizedType: List<RowLock>(211) at 0", "Insert SimpleType: RowLock(210) into ParameterizedType: List<RowLock>(211) at 1", "Insert SimpleType: RowLock(217) into VariableDeclarationStatement(224) at 0", "Insert VariableDeclarationFragment(223) into VariableDeclarationStatement(224) at 1", "Insert InfixExpression: ==(227) into IfStatement(239) at 0", "Insert Block(238) into IfStatement(239) at 1", "Insert MethodInvocation(243) into ExpressionStatement(244) at 0", "Insert ParameterizedType: List<RowLock>(315) into VariableDeclarationStatement(321) at 0", "Insert VariableDeclarationFragment(320) into VariableDeclarationStatement(321) at 1", "Insert Block(644) into TryStatement(669) at 0", "Move CatchClause(606) into TryStatement(669) at 1", "Move Block(611) into TryStatement(669) at 2", "Update SimpleType: KeyValue(674) to Cell", "Insert ParameterizedType: List<RowLock>(893) into VariableDeclarationStatement(899) at 0", "Insert VariableDeclarationFragment(898) into VariableDeclarationStatement(899) at 1", "Insert Block(1216) into TryStatement(1241) at 0", "Move CatchClause(1183) into TryStatement(1241) at 1", "Move Block(1188) into TryStatement(1241) at 2", "Insert SimpleName: Result(174) into MethodInvocation(190) at 0", "Insert SimpleName: create(175) into MethodInvocation(190) at 1", "Move MethodInvocation(182) into MethodInvocation(190) at 2", "Insert SimpleName: List(207) into SimpleType: List(208) at 0", "Insert SimpleName: RowLock(209) into SimpleType: RowLock(210) at 0", "Insert SimpleName: RowLock(216) into SimpleType: RowLock(217) at 0", "Insert SimpleName: rowLock(218) into VariableDeclarationFragment(223) at 0", "Insert MethodInvocation(222) into VariableDeclarationFragment(223) at 1", "Insert SimpleName: rowLock(225) into InfixExpression: ==(227) at 0", "Insert NullLiteral(226) into InfixExpression: ==(227) at 1", "Insert ThrowStatement(237) into Block(238) at 0", "Insert SimpleName: locks(240) into MethodInvocation(243) at 0", "Insert SimpleName: add(241) into MethodInvocation(243) at 1", "Insert SimpleName: rowLock(242) into MethodInvocation(243) at 2", "Insert SimpleType: List(312) into ParameterizedType: List<RowLock>(315) at 0", "Insert SimpleType: RowLock(314) into ParameterizedType: List<RowLock>(315) at 1", "Update SimpleName: lid(265) to locks", "Move SimpleName: lid(265) into VariableDeclarationFragment(320) at 0", "Insert MethodInvocation(319) into VariableDeclarationFragment(320) at 1", "Insert ExpressionStatement(339) into Block(644) at 0", "Move TryStatement(586) into Block(644) at 1", "Update SimpleName: KeyValue(673) to Cell", "Insert SimpleType: List(890) into ParameterizedType: List<RowLock>(893) at 0", "Insert SimpleType: RowLock(892) into ParameterizedType: List<RowLock>(893) at 1", "Update SimpleName: lid(838) to locks", "Move SimpleName: lid(838) into VariableDeclarationFragment(898) at 0", "Insert MethodInvocation(897) into VariableDeclarationFragment(898) at 1", "Insert ExpressionStatement(909) into Block(1216) at 0", "Move TryStatement(1163) into Block(1216) at 1", "Insert CastExpression(188) into MethodInvocation(189) at 2", "Insert SimpleName: region(219) into MethodInvocation(222) at 0", "Insert SimpleName: getRowLock(220) into MethodInvocation(222) at 1", "Insert SimpleName: key(221) into MethodInvocation(222) at 2", "Insert ClassInstanceCreation(236) into ThrowStatement(237) at 0", "Update SimpleName: Integer(263) to List", "Move SimpleName: Integer(263) into SimpleType: List(312) at 0", "Insert SimpleName: RowLock(313) into SimpleType: RowLock(314) at 0", "Insert SimpleName: Lists(317) into MethodInvocation(319) at 0", "Insert SimpleName: newArrayList(318) into MethodInvocation(319) at 1", "Insert MethodInvocation(338) into ExpressionStatement(339) at 0", "Update SimpleName: Integer(836) to List", "Move SimpleName: Integer(836) into SimpleType: List(890) at 0", "Insert SimpleName: RowLock(891) into SimpleType: RowLock(892) at 0", "Insert SimpleName: Lists(895) into MethodInvocation(897) at 0", "Insert SimpleName: newArrayList(896) into MethodInvocation(897) at 1", "Insert MethodInvocation(908) into ExpressionStatement(909) at 0", "Insert SimpleType: Cell(179) into CastExpression(188) at 0", "Move MethodInvocation(181) into CastExpression(188) at 1", "Insert SimpleType: IOException(229) into ClassInstanceCreation(236) at 0", "Insert InfixExpression: +(235) into ClassInstanceCreation(236) at 1", "Insert SimpleName: acquireLock(334) into MethodInvocation(338) at 0", "Move SimpleName: region(266) into MethodInvocation(338) at 1", "Move SimpleName: row(269) into MethodInvocation(338) at 2", "Insert SimpleName: locks(337) into MethodInvocation(338) at 3", "Insert SimpleName: acquireLock(904) into MethodInvocation(908) at 0", "Move SimpleName: region(839) into MethodInvocation(908) at 1", "Move SimpleName: row(842) into MethodInvocation(908) at 2", "Insert SimpleName: locks(907) into MethodInvocation(908) at 3", "Insert SimpleName: Cell(178) into SimpleType: Cell(179) at 0", "Insert SimpleName: IOException(228) into SimpleType: IOException(229) at 0", "Insert StringLiteral: \"Failed to acquire lock on \"(230) into InfixExpression: +(235) at 0", "Insert MethodInvocation(234) into InfixExpression: +(235) at 1", "Update ArrayType: Pair<Mutation,Integer>[](543) to Mutation[]", "Move ArrayType: byte[](858) into VariableDeclarationStatement(919) at 0", "Move ArrayType: byte[](849) into VariableDeclarationStatement(929) at 0", "Update ArrayType: Pair<Mutation,Integer>[](1103) to Mutation[]", "Insert MethodInvocation(1206) into ReturnStatement(1207) at 0", "Insert SimpleName: Bytes(231) into MethodInvocation(234) at 0", "Insert SimpleName: toStringBinary(232) into MethodInvocation(234) at 1", "Insert SimpleName: key(233) into MethodInvocation(234) at 2", "Update ParameterizedType: Map.Entry<byte[],NavigableMap<byte[],Long>>(334) to Map.Entry<byte[],List<Cell>>", "Move SimpleType: Mutation(559) into ArrayType: Mutation[](614) at 0", "Update SimpleName: releaseRowLock(581) to releaseRowLocks", "Update SimpleName: lid(582) to locks", "Move SimpleType: Mutation(1119) into ArrayType: Mutation[](1166) at 0", "Insert SimpleName: Result(1190) into MethodInvocation(1206) at 0", "Insert SimpleName: create(1191) into MethodInvocation(1206) at 1", "Move MethodInvocation(1153) into MethodInvocation(1206) at 2", "Update SimpleName: releaseRowLock(1158) to releaseRowLocks", "Update SimpleName: lid(1159) to locks", "Update ParameterizedType: NavigableMap<byte[],Long>(333) to List<Cell>", "Update SimpleName: getFamilyMap(338) to getFamilyCellMap", "Insert SingleVariableDeclaration(417) into EnhancedForStatement(431) at 0", "Move MethodInvocation(358) into EnhancedForStatement(431) at 1", "Insert NumberLiteral: 0(577) into MethodInvocation(603) at 3", "Insert QualifiedName: row.length(578) into MethodInvocation(603) at 4", "Insert MethodInvocation(584) into MethodInvocation(603) at 6", "Insert MethodInvocation(587) into MethodInvocation(603) at 7", "Insert MethodInvocation(593) into MethodInvocation(603) at 9", "Insert MethodInvocation(596) into MethodInvocation(603) at 10", "Insert NumberLiteral: 0(601) into MethodInvocation(603) at 13", "Insert QualifiedName: valueBuffer.length(602) into MethodInvocation(603) at 14", "Update ArrayType: Pair[](548) to Mutation[]", "Insert ArrayInitializer(621) into ArrayCreation(622) at 1", "Update SimpleName: keyValue(851) to CellUtil", "Update SimpleName: getFamily(852) to cloneFamily", "Insert SimpleName: keyValue(916) into MethodInvocation(917) at 2", "Update SimpleName: keyValue(860) to CellUtil", "Update SimpleName: getQualifier(861) to cloneQualifier", "Insert SimpleName: keyValue(926) into MethodInvocation(927) at 2", "Update ArrayType: Pair[](1108) to Mutation[]", "Insert ArrayInitializer(1173) into ArrayCreation(1174) at 1", "Insert CastExpression(1204) into MethodInvocation(1205) at 2", "Update SimpleType: NavigableMap(327) to List", "Update SimpleType: Long(332) to Cell", "Insert SimpleType: Cell(415) into SingleVariableDeclaration(417) at 0", "Insert SimpleName: cq(416) into SingleVariableDeclaration(417) at 1", "Update SimpleName: getBuffer(427) to getValueArray", "Update SimpleName: getBuffer(443) to getValueArray", "Update SimpleName: getBuffer(459) to getValueArray", "Update SimpleName: getFamily(515) to getFamilyArray", "Insert SimpleName: currentValueKV(582) into MethodInvocation(584) at 0", "Insert SimpleName: getFamilyOffset(583) into MethodInvocation(584) at 1", "Insert SimpleName: currentValueKV(585) into MethodInvocation(587) at 0", "Insert SimpleName: getFamilyLength(586) into MethodInvocation(587) at 1", "Update SimpleName: getQualifier(518) to getQualifierArray", "Insert SimpleName: currentValueKV(591) into MethodInvocation(593) at 0", "Insert SimpleName: getQualifierOffset(592) into MethodInvocation(593) at 1", "Insert SimpleName: currentValueKV(594) into MethodInvocation(596) at 0", "Insert SimpleName: getQualifierLength(595) into MethodInvocation(596) at 1", "Move SimpleType: Mutation(538) into ArrayType: Mutation[](619) at 0", "Insert SimpleName: put(620) into ArrayInitializer(621) at 0", "Update SimpleName: getFamilyMap(677) to getFamilyCellMap", "Insert MethodInvocation(1073) into ReturnStatement(1074) at 0", "Update SimpleName: getFamilyMap(1020) to getFamilyCellMap", "Update SimpleName: getFamilyMap(1024) to getFamilyCellMap", "Update SimpleName: getFamilyMap(1052) to getFamilyCellMap", "Update SimpleName: getFamilyMap(1056) to getFamilyCellMap", "Update ParameterizedType: List<KeyValue>(1068) to List<Cell>", "Move SimpleType: Mutation(1098) into ArrayType: Mutation[](1171) at 0", "Insert SimpleName: m(1172) into ArrayInitializer(1173) at 0", "Insert SimpleType: Cell(1195) into CastExpression(1204) at 0", "Move MethodInvocation(1152) into CastExpression(1204) at 1", "Update SimpleName: NavigableMap(326) to List", "Update SimpleName: Long(331) to Cell", "Insert SimpleName: Cell(414) into SimpleType: Cell(415) at 0", "Update SimpleName: getBuffer(972) to getValueArray", "Insert SimpleName: Result(1055) into MethodInvocation(1073) at 0", "Insert SimpleName: create(1056) into MethodInvocation(1073) at 1", "Move MethodInvocation(1004) into MethodInvocation(1073) at 2", "Update SimpleType: KeyValue(1067) to Cell", "Update SimpleName: getFamilyMap(1072) to getFamilyCellMap", "Insert SimpleName: Cell(1194) into SimpleType: Cell(1195) at 0", "Insert MethodInvocation(427) into MethodInvocation(428) at 3", "Insert CastExpression(1071) into MethodInvocation(1072) at 2", "Update SimpleName: KeyValue(1066) to Cell", "Insert SimpleType: Cell(1144) into SingleVariableDeclaration(1146) at 0", "Insert SimpleName: CellUtil(424) into MethodInvocation(427) at 0", "Insert SimpleName: cloneQualifier(425) into MethodInvocation(427) at 1", "Move SimpleName: cq(364) into MethodInvocation(427) at 2", "Insert SimpleType: Cell(1060) into CastExpression(1071) at 0", "Move MethodInvocation(1003) into CastExpression(1071) at 1", "Insert SimpleName: Cell(1143) into SimpleType: Cell(1144) at 0", "Insert SimpleName: Cell(1059) into SimpleType: Cell(1060) at 0", "Insert ParenthesizedExpression(1152) into MethodInvocation(1155) at 0", "Insert CastExpression(1151) into ParenthesizedExpression(1152) at 0", "Move SimpleType: KeyValue(1077) into CastExpression(1151) at 0", "Insert SimpleName: kv(1150) into CastExpression(1151) at 1", "Delete SimpleName: Result(170)", "Delete SimpleType: Result(171)", "Delete ClassInstanceCreation(183)", "Delete PrimitiveType: byte(328)", "Delete Dimension(329)", "Delete ArrayType: byte[](330)", "Delete SimpleName: keySet(359)", "Delete MethodInvocation(360)", "Delete SimpleName: SuppressWarnings(532)", "Delete StringLiteral: \"unchecked\"(533)", "Delete SingleMemberAnnotation(534)", "Delete SimpleName: Pair(535)", "Delete SimpleType: Pair(536)", "Delete SimpleName: Integer(539)", "Delete SimpleType: Integer(540)", "Delete ParameterizedType: Pair<Mutation,Integer>(541)", "Delete SimpleName: Pair(545)", "Delete SimpleType: Pair(546)", "Delete NumberLiteral: 1(549)", "Delete SimpleName: mutations(553)", "Delete NumberLiteral: 0(554)", "Delete ArrayAccess(555)", "Delete SimpleName: Pair(556)", "Delete SimpleType: Pair(557)", "Delete SimpleName: Integer(560)", "Delete SimpleType: Integer(561)", "Delete ParameterizedType: Pair<Mutation,Integer>(562)", "Delete SimpleName: put(563)", "Delete SimpleName: lid(564)", "Delete ClassInstanceCreation(565)", "Delete Assignment: =(566)", "Delete ExpressionStatement(567)", "Delete SimpleType: Integer(264)", "Delete SimpleName: getLock(267)", "Delete NullLiteral(268)", "Delete BooleanLiteral: true(270)", "Delete MethodInvocation(271)", "Delete VariableDeclarationFragment(272)", "Delete VariableDeclarationStatement(273)", "Delete Block(587)", "Delete TryStatement(612)", "Delete SimpleName: Result(990)", "Delete SimpleType: Result(991)", "Delete ClassInstanceCreation(1005)", "Delete NullLiteral(1036)", "Delete SimpleName: kv(1081)", "Delete SimpleName: SuppressWarnings(1092)", "Delete StringLiteral: \"unchecked\"(1093)", "Delete SingleMemberAnnotation(1094)", "Delete SimpleName: Pair(1095)", "Delete SimpleType: Pair(1096)", "Delete SimpleName: Integer(1099)", "Delete SimpleType: Integer(1100)", "Delete ParameterizedType: Pair<Mutation,Integer>(1101)", "Delete SimpleName: Pair(1105)", "Delete SimpleType: Pair(1106)", "Delete NumberLiteral: 1(1109)", "Delete SimpleName: mutations(1113)", "Delete NumberLiteral: 0(1114)", "Delete ArrayAccess(1115)", "Delete SimpleName: Pair(1116)", "Delete SimpleType: Pair(1117)", "Delete SimpleName: Integer(1120)", "Delete SimpleType: Integer(1121)", "Delete ParameterizedType: Pair<Mutation,Integer>(1122)", "Delete SimpleName: m(1123)", "Delete SimpleName: lid(1124)", "Delete ClassInstanceCreation(1125)", "Delete Assignment: =(1126)", "Delete ExpressionStatement(1127)", "Delete SimpleName: Result(1141)", "Delete SimpleType: Result(1142)", "Delete ClassInstanceCreation(1154)", "Delete SimpleType: Integer(837)", "Delete SimpleName: getLock(840)", "Delete NullLiteral(841)", "Delete BooleanLiteral: true(843)", "Delete MethodInvocation(844)", "Delete VariableDeclarationFragment(845)", "Delete VariableDeclarationStatement(846)", "Delete Block(1164)", "Delete TryStatement(1189)"]}}, {"ServerCachingEndpointImpl_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.io.IOException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.apache.hadoop.hbase.Coprocessor to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.hadoop.hbase.CoprocessorEnvironment to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.coprocessor.CoprocessorException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS ImportDeclaration to CompilationUnit at 12", "INS QualifiedName: org.apache.phoenix.coprocessor.ServerCachingProtocol.ServerCacheFactory to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.AddServerCacheRequest to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.AddServerCacheResponse to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 14"]}, {"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.RemoveServerCacheRequest to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 15"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.RemoveServerCacheResponse to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 16"]}, {"root": "INS ImportDeclaration to CompilationUnit at 17", "operations": ["INS ImportDeclaration to CompilationUnit at 17", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.ServerCachingService to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS QualifiedName: org.apache.phoenix.protobuf.ProtobufUtil to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 18"]}, {"root": "INS ImportDeclaration to CompilationUnit at 19", "operations": ["INS QualifiedName: com.google.protobuf.RpcCallback to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 19"]}, {"root": "INS ImportDeclaration to CompilationUnit at 20", "operations": ["INS QualifiedName: com.google.protobuf.RpcController to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 20"]}, {"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS QualifiedName: com.google.protobuf.Service to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 21"]}, {"root": "UPDATE from org.apache.hadoop.hbase.coprocessor.BaseEndpointCoprocessor to org.apache.hadoop.hbase.coprocessor.CoprocessorService", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.coprocessor.BaseEndpointCoprocessor from org.apache.hadoop.hbase.coprocessor.BaseEndpointCoprocessor to org.apache.hadoop.hbase.coprocessor.CoprocessorService"]}, {"root": "INS SimpleType: ServerCachingService to TypeDeclaration: class at 3", "operations": ["INS SimpleType: ServerCachingService to TypeDeclaration: class at 3", "INS SimpleName: ServerCachingService to SimpleType: ServerCachingService at 0"]}, {"root": "UPDATE from BaseEndpointCoprocessor to CoprocessorService", "operations": ["UPD SimpleName: BaseEndpointCoprocessor from BaseEndpointCoprocessor to CoprocessorService", "UPD SimpleType: BaseEndpointCoprocessor from BaseEndpointCoprocessor to CoprocessorService"]}, {"root": "UPDATE from ServerCachingProtocol to Coprocessor", "operations": ["UPD SimpleName: ServerCachingProtocol from ServerCachingProtocol to Coprocessor", "UPD SimpleType: ServerCachingProtocol from ServerCachingProtocol to Coprocessor"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS SimpleName: env to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleName: CoprocessorEnvironment to SimpleType: CoprocessorEnvironment at 0", "INS Block to IfStatement at 2", "INS IfStatement to Block at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleType: IOException to MethodDeclaration at 5", "INS ExpressionStatement to Block at 0", "INS ThisExpression to FieldAccess at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: start to MethodDeclaration at 3", "INS SimpleType: RegionCoprocessorEnvironment to InstanceofExpression at 1", "INS SimpleName: env to CastExpression at 1", "INS StringLiteral: \"Must be loaded on a table region!\" to ClassInstanceCreation at 1", "INS SimpleName: env to InstanceofExpression at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: CoprocessorEnvironment to SingleVariableDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS FieldAccess to Assignment: = at 0", "INS CastExpression to Assignment: = at 1", "INS InstanceofExpression to IfStatement at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: RegionCoprocessorEnvironment to SimpleType: RegionCoprocessorEnvironment at 0", "INS SimpleName: env to FieldAccess at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: CoprocessorException to ClassInstanceCreation at 0", "INS SimpleName: env to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 6", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: CoprocessorException to SimpleType: CoprocessorException at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS Block to IfStatement at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: stop to MethodDeclaration at 3", "INS SimpleName: CoprocessorEnvironment to SimpleType: CoprocessorEnvironment at 0", "INS SimpleType: CoprocessorEnvironment to SingleVariableDeclaration at 0", "INS SimpleName: arg0 to SingleVariableDeclaration at 1", "INS SimpleType: IOException to MethodDeclaration at 5", "INS Block to MethodDeclaration at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS ReturnStatement to Block at 0", "INS SimpleType: Service to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS ThisExpression to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Service to SimpleType: Service at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: getService to MethodDeclaration at 3"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV SimpleType: RegionCoprocessorEnvironment to FieldDeclaration at 1"]}, {"root": "UPDATE from boolean to void", "operations": ["UPD PrimitiveType: boolean from boolean to void", "UPD PrimitiveType: boolean from boolean to void"]}, {"root": "INS Block to MethodDeclaration at 7", "operations": ["INS SimpleName: toByteArray to MethodInvocation at 1", "INS SimpleName: setControllerException to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS CatchClause to TryStatement at 1", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleType: ServerCacheFactory to ParameterizedType: Class<ServerCacheFactory> at 1", "INS NullLiteral to VariableDeclarationFragment at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: request to MethodInvocation at 0", "INS QualifiedName: org.apache.phoenix.protobuf.ProtobufUtil to MethodInvocation at 0", "INS ExpressionStatement to Block at 8", "INS SimpleName: serverCacheFactoryClass to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: responseBuilder to VariableDeclarationFragment at 0", "INS SimpleType: Class to ParameterizedType: Class<ServerCacheFactory> at 0", "INS SimpleName: getTenantId to MethodInvocation at 1", "INS SimpleName: setReturn to MethodInvocation at 1", "INS SimpleName: AddServerCacheResponse to SimpleType: AddServerCacheResponse at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: forName to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: result to MethodInvocation at 2", "INS SimpleName: toImmutableBytesWritable to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 3", "INS Block to CatchClause at 1", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: tenantId to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Throwable to SingleVariableDeclaration at 0", "INS SimpleName: getCachePtr to MethodInvocation at 1", "INS QualifiedName: AddServerCacheResponse.Builder to SimpleType: AddServerCacheResponse.Builder at 0", "INS SimpleType: AddServerCacheResponse to VariableDeclarationStatement at 0", "INS SimpleName: cachePtr to VariableDeclarationFragment at 0", "INS SimpleName: cacheFactory to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: responseBuilder to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 7", "INS SimpleName: request to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: AddServerCacheResponse to MethodInvocation at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: done to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 7", "INS SimpleType: AddServerCacheResponse.Builder to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: request to MethodInvocation at 0", "INS SimpleName: getClassName to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: responseBuilder to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS SimpleName: ServerCacheFactory to SimpleType: ServerCacheFactory at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: e to ClassInstanceCreation at 1", "INS SimpleName: Class to MethodInvocation at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleType: IOException to ClassInstanceCreation at 0", "INS SimpleName: controller to MethodInvocation at 2", "INS SimpleName: ServerCacheFactory to SimpleType: ServerCacheFactory at 0", "INS SimpleType: ServerCacheFactory to ParameterizedType: Class<ServerCacheFactory> at 1", "INS ParameterizedType: Class<ServerCacheFactory> to CastExpression at 0", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS ParameterizedType: Class<ServerCacheFactory> to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: Throwable to SimpleType: Throwable at 0", "INS SimpleName: run to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS IfStatement to Block at 1", "INS SimpleName: newInstance to MethodInvocation at 1", "INS SimpleName: hasTenantId to MethodInvocation at 1", "INS SimpleName: ProtobufUtil to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: Class to SimpleType: Class at 0", "INS SimpleName: request to MethodInvocation at 0", "INS BooleanLiteral: true to MethodInvocation at 2", "INS SimpleType: Class to ParameterizedType: Class<ServerCacheFactory> at 0", "INS ExpressionStatement to Block at 6", "INS Block to TryStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: getCacheFactory to MethodInvocation at 1", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: Class to SimpleType: Class at 0", "INS SimpleName: serverCacheFactoryClass to MethodInvocation at 0", "INS TryStatement to Block at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: tenantId to Assignment: = at 0", "INS SingleMemberAnnotation to VariableDeclarationStatement at 0", "INS StringLiteral: \"unchecked\" to SingleMemberAnnotation at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS ParameterizedType: RpcCallback<RemoveServerCacheResponse> to SingleVariableDeclaration at 0", "INS SimpleType: RpcCallback to ParameterizedType: RpcCallback<RemoveServerCacheResponse> at 0", "INS SimpleType: RemoveServerCacheResponse to ParameterizedType: RpcCallback<RemoveServerCacheResponse> at 1", "INS SimpleName: RpcCallback to SimpleType: RpcCallback at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: RemoveServerCacheResponse to SimpleType: RemoveServerCacheResponse at 0", "INS SimpleName: done to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleType: RpcController to SingleVariableDeclaration at 0", "operations": ["INS SimpleName: RpcController to SimpleType: RpcController at 0", "INS SimpleType: RpcController to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: controller to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: controller to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleType: AddServerCacheRequest to SingleVariableDeclaration at 0", "operations": ["INS SimpleName: AddServerCacheRequest to SimpleType: AddServerCacheRequest at 0", "INS SimpleType: AddServerCacheRequest to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: request to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: request to SingleVariableDeclaration at 1"]}, {"root": "INS ParameterizedType: RpcCallback<AddServerCacheResponse> to SingleVariableDeclaration at 0", "operations": ["INS SimpleName: RpcCallback to SimpleType: RpcCallback at 0", "INS ParameterizedType: RpcCallback<AddServerCacheResponse> to SingleVariableDeclaration at 0", "INS SimpleName: AddServerCacheResponse to SimpleType: AddServerCacheResponse at 0", "INS SimpleType: RpcCallback to ParameterizedType: RpcCallback<AddServerCacheResponse> at 0", "INS SimpleType: AddServerCacheResponse to ParameterizedType: RpcCallback<AddServerCacheResponse> at 1"]}, {"root": "INS SimpleName: done to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: done to SingleVariableDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 2", "MOV ExpressionStatement to Block at 2"]}, {"root": "INS SimpleType: RpcController to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: RpcController to SingleVariableDeclaration at 0", "INS SimpleName: RpcController to SimpleType: RpcController at 0"]}, {"root": "INS SimpleName: controller to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: controller to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleType: RemoveServerCacheRequest to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: RemoveServerCacheRequest to SingleVariableDeclaration at 0", "INS SimpleName: RemoveServerCacheRequest to SimpleType: RemoveServerCacheRequest at 0"]}, {"root": "INS SimpleName: request to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: request to SingleVariableDeclaration at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleName: tenantId to VariableDeclarationFragment at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: getTenantId to MethodInvocation at 1", "INS ClassInstanceCreation to Assignment: = at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: request to MethodInvocation at 0", "INS SimpleType: ImmutableBytesPtr to ClassInstanceCreation at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: toByteArray to MethodInvocation at 1", "INS SimpleName: ImmutableBytesPtr to SimpleType: ImmutableBytesPtr at 0", "INS SimpleName: tenantId to Assignment: = at 0", "INS IfStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: request to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: hasTenantId to MethodInvocation at 1"]}, {"root": "INS TryStatement to Block at 3", "operations": ["INS SimpleName: setControllerException to MethodInvocation at 1", "INS TryStatement to Block at 3", "INS SimpleType: IOException to ClassInstanceCreation at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS Block to TryStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleName: e to ClassInstanceCreation at 1", "INS SimpleName: controller to MethodInvocation at 2", "INS Block to CatchClause at 1", "INS CatchClause to TryStatement at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: ProtobufUtil to MethodInvocation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS QualifiedName: RemoveServerCacheResponse.Builder to SimpleType: RemoveServerCacheResponse.Builder at 0", "INS SimpleName: responseBuilder to VariableDeclarationFragment at 0", "INS SimpleName: RemoveServerCacheResponse to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: RemoveServerCacheResponse.Builder to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: newBuilder to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS SimpleName: setReturn to MethodInvocation at 1", "INS BooleanLiteral: true to MethodInvocation at 2", "INS SimpleName: responseBuilder to MethodInvocation at 0", "INS ExpressionStatement to Block at 5", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 6", "operations": ["INS SimpleType: RemoveServerCacheResponse to VariableDeclarationStatement at 0", "INS SimpleName: responseBuilder to MethodInvocation at 0", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 6", "INS SimpleName: build to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: RemoveServerCacheResponse to SimpleType: RemoveServerCacheResponse at 0"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 7", "INS SimpleName: result to MethodInvocation at 2", "INS SimpleName: run to MethodInvocation at 1", "INS SimpleName: done to MethodInvocation at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: ImmutableBytesPtr to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: TenantCache to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: ImmutableBytesWritable to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: ImmutableBytesPtr to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: TenantCache to VariableDeclarationStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS FieldAccess to MethodInvocation at 2", "operations": ["INS FieldAccess to MethodInvocation at 2", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: env to FieldAccess at 1"]}, {"root": "INS SimpleName: tenantId to MethodInvocation at 3", "operations": ["INS SimpleName: tenantId to MethodInvocation at 3"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: ServerCacheFactory to VariableDeclarationStatement at 0"]}, {"root": "INS FieldAccess to MethodInvocation at 2", "operations": ["INS FieldAccess to MethodInvocation at 2", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: env to FieldAccess at 1"]}, {"root": "INS SimpleName: tenantId to MethodInvocation at 3", "operations": ["INS SimpleName: tenantId to MethodInvocation at 3"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: SQLException to SingleVariableDeclaration at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ImmutableBytesPtr to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ImmutableBytesPtr to ClassInstanceCreation at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS SimpleName: request to MethodInvocation at 0", "INS SimpleName: toByteArray to MethodInvocation at 1", "INS SimpleName: getCacheId to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "INS SimpleType: ImmutableBytesPtr to ClassInstanceCreation at 0", "operations": ["INS SimpleType: ImmutableBytesPtr to ClassInstanceCreation at 0", "INS SimpleName: ImmutableBytesPtr to SimpleType: ImmutableBytesPtr at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: request to MethodInvocation at 0", "INS SimpleName: getCacheId to MethodInvocation at 1", "INS SimpleName: toByteArray to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from CastExpression", "operations": ["MOV SimpleType: RegionCoprocessorEnvironment to CastExpression at 0"]}, {"root": "DEL ArrayType: byte[]", "operations": ["DEL PrimitiveType: byte", "DEL ArrayType: byte[]", "DEL Dimension"]}, {"root": "DEL SimpleName: tenantId", "operations": ["DEL SimpleName: tenantId"]}, {"root": "DEL ArrayType: byte[]", "operations": ["DEL ArrayType: byte[]", "DEL Dimension", "DEL PrimitiveType: byte"]}, {"root": "DEL SimpleName: cacheId", "operations": ["DEL SimpleName: cacheId"]}, {"root": "DEL SimpleName: cachePtr", "operations": ["DEL SimpleName: cachePtr"]}, {"root": "DEL CastExpression", "operations": ["DEL ThisExpression", "DEL CastExpression", "DEL MethodInvocation", "DEL SimpleName: getEnvironment"]}, {"root": "DEL ConditionalExpression", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: tenantId", "DEL NullLiteral", "DEL NullLiteral", "DEL SimpleName: tenantId", "DEL InfixExpression: ==", "DEL ConditionalExpression"]}, {"root": "DEL SimpleName: cacheId", "operations": ["DEL SimpleName: cacheId"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: cacheFactory", "DEL SingleVariableDeclaration"]}, {"root": "DEL SimpleType: SQLException", "operations": ["DEL SimpleName: SQLException", "DEL SimpleType: SQLException"]}, {"root": "DEL Block", "operations": ["DEL BooleanLiteral: true", "DEL ReturnStatement", "DEL Block"]}, {"root": "DEL ArrayType: byte[]", "operations": ["DEL Dimension", "DEL PrimitiveType: byte", "DEL ArrayType: byte[]"]}, {"root": "DEL SimpleName: tenantId", "operations": ["DEL SimpleName: tenantId"]}, {"root": "DEL ArrayType: byte[]", "operations": ["DEL Dimension", "DEL ArrayType: byte[]", "DEL PrimitiveType: byte"]}, {"root": "DEL SimpleName: cacheId", "operations": ["DEL SimpleName: cacheId"]}, {"root": "DEL CastExpression", "operations": ["DEL ThisExpression", "DEL SimpleName: getEnvironment", "DEL CastExpression", "DEL MethodInvocation"]}, {"root": "DEL ConditionalExpression", "operations": ["DEL SimpleName: tenantId", "DEL SimpleName: tenantId", "DEL InfixExpression: ==", "DEL NullLiteral", "DEL ClassInstanceCreation", "DEL ConditionalExpression", "DEL NullLiteral"]}, {"root": "DEL SimpleName: cacheId", "operations": ["DEL SimpleName: cacheId"]}, {"root": "DEL ReturnStatement", "operations": ["DEL BooleanLiteral: true", "DEL ReturnStatement"]}]}}, {"ServerCachingEndpointImpl_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(391) at 6", "Insert ImportDeclaration(3) into CompilationUnit(391) at 1", "Insert ImportDeclaration(7) into CompilationUnit(391) at 3", "Insert ImportDeclaration(9) into CompilationUnit(391) at 4", "Insert ImportDeclaration(11) into CompilationUnit(391) at 5", "Insert ImportDeclaration(25) into CompilationUnit(391) at 12", "Insert ImportDeclaration(27) into CompilationUnit(391) at 13", "Insert ImportDeclaration(29) into CompilationUnit(391) at 14", "Insert ImportDeclaration(31) into CompilationUnit(391) at 15", "Insert ImportDeclaration(33) into CompilationUnit(391) at 16", "Insert ImportDeclaration(35) into CompilationUnit(391) at 17", "Insert ImportDeclaration(37) into CompilationUnit(391) at 18", "Insert ImportDeclaration(39) into CompilationUnit(391) at 19", "Insert ImportDeclaration(41) into CompilationUnit(391) at 20", "Insert ImportDeclaration(43) into CompilationUnit(391) at 21", "Insert QualifiedName: java.io.IOException(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.Coprocessor(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.CoprocessorEnvironment(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.coprocessor.CoprocessorException(10) into ImportDeclaration(11) at 0", "Update QualifiedName: org.apache.hadoop.hbase.coprocessor.BaseEndpointCoprocessor(4) to org.apache.hadoop.hbase.coprocessor.CoprocessorService", "Insert QualifiedName: org.apache.phoenix.coprocessor.ServerCachingProtocol.ServerCacheFactory(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.AddServerCacheRequest(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.AddServerCacheResponse(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.RemoveServerCacheRequest(30) into ImportDeclaration(31) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.RemoveServerCacheResponse(32) into ImportDeclaration(33) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.ServerCachingProtos.ServerCachingService(34) into ImportDeclaration(35) at 0", "Insert QualifiedName: org.apache.phoenix.protobuf.ProtobufUtil(36) into ImportDeclaration(37) at 0", "Insert QualifiedName: com.google.protobuf.RpcCallback(38) into ImportDeclaration(39) at 0", "Insert QualifiedName: com.google.protobuf.RpcController(40) into ImportDeclaration(41) at 0", "Insert QualifiedName: com.google.protobuf.Service(42) into ImportDeclaration(43) at 0", "Insert SimpleType: ServerCachingService(54) into TypeDeclaration: class(390) at 3", "Update SimpleType: BaseEndpointCoprocessor(26) to CoprocessorService", "Update SimpleType: ServerCachingProtocol(28) to Coprocessor", "Insert FieldDeclaration(64) into TypeDeclaration: class(390) at 6", "Insert MethodDeclaration(366) into TypeDeclaration: class(390) at 9", "Insert MethodDeclaration(379) into TypeDeclaration: class(390) at 10", "Insert MethodDeclaration(389) into TypeDeclaration: class(390) at 11", "Insert SimpleName: ServerCachingService(53) into SimpleType: ServerCachingService(54) at 0", "Update SimpleName: BaseEndpointCoprocessor(25) to CoprocessorService", "Update SimpleName: ServerCachingProtocol(27) to Coprocessor", "Insert Modifier: private(59) into FieldDeclaration(64) at 0", "Move SimpleType: RegionCoprocessorEnvironment(60) into FieldDeclaration(64) at 1", "Insert VariableDeclarationFragment(63) into FieldDeclaration(64) at 2", "Update PrimitiveType: boolean(32) to void", "Insert Block(220) into MethodDeclaration(221) at 7", "Update PrimitiveType: boolean(94) to void", "Insert SingleVariableDeclaration(241) into MethodDeclaration(332) at 6", "Insert MarkerAnnotation(334) into MethodDeclaration(366) at 0", "Insert Modifier: public(335) into MethodDeclaration(366) at 1", "Insert PrimitiveType: void(336) into MethodDeclaration(366) at 2", "Insert SimpleName: start(337) into MethodDeclaration(366) at 3", "Insert SingleVariableDeclaration(341) into MethodDeclaration(366) at 4", "Insert SimpleType: IOException(343) into MethodDeclaration(366) at 5", "Insert Block(365) into MethodDeclaration(366) at 6", "Insert MarkerAnnotation(368) into MethodDeclaration(379) at 0", "Insert Modifier: public(369) into MethodDeclaration(379) at 1", "Insert PrimitiveType: void(370) into MethodDeclaration(379) at 2", "Insert SimpleName: stop(371) into MethodDeclaration(379) at 3", "Insert SingleVariableDeclaration(375) into MethodDeclaration(379) at 4", "Insert SimpleType: IOException(377) into MethodDeclaration(379) at 5", "Insert Block(378) into MethodDeclaration(379) at 6", "Insert MarkerAnnotation(381) into MethodDeclaration(389) at 0", "Insert Modifier: public(382) into MethodDeclaration(389) at 1", "Insert SimpleType: Service(384) into MethodDeclaration(389) at 2", "Insert SimpleName: getService(385) into MethodDeclaration(389) at 3", "Insert Block(388) into MethodDeclaration(389) at 4", "Insert SimpleName: env(62) into VariableDeclarationFragment(63) at 0", "Insert SimpleType: RpcController(71) into SingleVariableDeclaration(73) at 0", "Insert SimpleName: controller(72) into SingleVariableDeclaration(73) at 1", "Insert SimpleType: AddServerCacheRequest(75) into SingleVariableDeclaration(77) at 0", "Insert SimpleName: request(76) into SingleVariableDeclaration(77) at 1", "Insert ParameterizedType: RpcCallback<AddServerCacheResponse>(82) into SingleVariableDeclaration(84) at 0", "Insert SimpleName: done(83) into SingleVariableDeclaration(84) at 1", "Insert VariableDeclarationStatement(90) into Block(220) at 0", "Insert IfStatement(106) into Block(220) at 1", "Move VariableDeclarationStatement(76) into Block(220) at 2", "Insert VariableDeclarationStatement(129) into Block(220) at 3", "Insert TryStatement(193) into Block(220) at 4", "Insert VariableDeclarationStatement(201) into Block(220) at 5", "Insert ExpressionStatement(206) into Block(220) at 6", "Insert VariableDeclarationStatement(214) into Block(220) at 7", "Insert ExpressionStatement(219) into Block(220) at 8", "Insert SimpleType: RpcController(228) into SingleVariableDeclaration(230) at 0", "Insert SimpleName: controller(229) into SingleVariableDeclaration(230) at 1", "Insert SimpleType: RemoveServerCacheRequest(232) into SingleVariableDeclaration(234) at 0", "Insert SimpleName: request(233) into SingleVariableDeclaration(234) at 1", "Insert ParameterizedType: RpcCallback<RemoveServerCacheResponse>(239) into SingleVariableDeclaration(241) at 0", "Insert SimpleName: done(240) into SingleVariableDeclaration(241) at 1", "Insert VariableDeclarationStatement(247) into Block(331) at 0", "Insert IfStatement(263) into Block(331) at 1", "Insert TryStatement(304) into Block(331) at 3", "Insert VariableDeclarationStatement(312) into Block(331) at 4", "Insert ExpressionStatement(317) into Block(331) at 5", "Insert VariableDeclarationStatement(325) into Block(331) at 6", "Insert ExpressionStatement(330) into Block(331) at 7", "Insert SimpleName: Override(333) into MarkerAnnotation(334) at 0", "Insert SimpleType: CoprocessorEnvironment(339) into SingleVariableDeclaration(341) at 0", "Insert SimpleName: env(340) into SingleVariableDeclaration(341) at 1", "Insert SimpleName: IOException(342) into SimpleType: IOException(343) at 0", "Insert IfStatement(364) into Block(365) at 0", "Insert SimpleName: Override(367) into MarkerAnnotation(368) at 0", "Insert SimpleType: CoprocessorEnvironment(373) into SingleVariableDeclaration(375) at 0", "Insert SimpleName: arg0(374) into SingleVariableDeclaration(375) at 1", "Insert SimpleName: IOException(376) into SimpleType: IOException(377) at 0", "Insert SimpleName: Override(380) into MarkerAnnotation(381) at 0", "Insert SimpleName: Service(383) into SimpleType: Service(384) at 0", "Insert ReturnStatement(387) into Block(388) at 0", "Insert SimpleName: RpcController(70) into SimpleType: RpcController(71) at 0", "Insert SimpleName: AddServerCacheRequest(74) into SimpleType: AddServerCacheRequest(75) at 0", "Insert SimpleType: RpcCallback(79) into ParameterizedType: RpcCallback<AddServerCacheResponse>(82) at 0", "Insert SimpleType: AddServerCacheResponse(81) into ParameterizedType: RpcCallback<AddServerCacheResponse>(82) at 1", "Move SimpleType: ImmutableBytesPtr(80) into VariableDeclarationStatement(90) at 0", "Insert VariableDeclarationFragment(89) into VariableDeclarationStatement(90) at 1", "Insert MethodInvocation(93) into IfStatement(106) at 0", "Insert Block(105) into IfStatement(106) at 1", "Move SimpleType: TenantCache(109) into VariableDeclarationStatement(118) at 0", "Move SimpleType: ImmutableBytesWritable(45) into VariableDeclarationStatement(129) at 0", "Insert VariableDeclarationFragment(128) into VariableDeclarationStatement(129) at 1", "Insert Block(177) into TryStatement(193) at 0", "Insert CatchClause(192) into TryStatement(193) at 1", "Insert SimpleType: AddServerCacheResponse.Builder(195) into VariableDeclarationStatement(201) at 0", "Insert VariableDeclarationFragment(200) into VariableDeclarationStatement(201) at 1", "Insert MethodInvocation(205) into ExpressionStatement(206) at 0", "Insert SimpleType: AddServerCacheResponse(208) into VariableDeclarationStatement(214) at 0", "Insert VariableDeclarationFragment(213) into VariableDeclarationStatement(214) at 1", "Insert MethodInvocation(218) into ExpressionStatement(219) at 0", "Insert SimpleName: RpcController(227) into SimpleType: RpcController(228) at 0", "Insert SimpleName: RemoveServerCacheRequest(231) into SimpleType: RemoveServerCacheRequest(232) at 0", "Insert SimpleType: RpcCallback(236) into ParameterizedType: RpcCallback<RemoveServerCacheResponse>(239) at 0", "Insert SimpleType: RemoveServerCacheResponse(238) into ParameterizedType: RpcCallback<RemoveServerCacheResponse>(239) at 1", "Move SimpleType: ImmutableBytesPtr(124) into VariableDeclarationStatement(247) at 0", "Insert VariableDeclarationFragment(246) into VariableDeclarationStatement(247) at 1", "Insert MethodInvocation(250) into IfStatement(263) at 0", "Insert Block(262) into IfStatement(263) at 1", "Move SimpleType: TenantCache(55) into VariableDeclarationStatement(275) at 0", "Insert Block(288) into TryStatement(304) at 0", "Insert CatchClause(303) into TryStatement(304) at 1", "Insert SimpleType: RemoveServerCacheResponse.Builder(306) into VariableDeclarationStatement(312) at 0", "Insert VariableDeclarationFragment(311) into VariableDeclarationStatement(312) at 1", "Insert MethodInvocation(316) into ExpressionStatement(317) at 0", "Insert SimpleType: RemoveServerCacheResponse(319) into VariableDeclarationStatement(325) at 0", "Insert VariableDeclarationFragment(324) into VariableDeclarationStatement(325) at 1", "Insert MethodInvocation(329) into ExpressionStatement(330) at 0", "Insert SimpleName: CoprocessorEnvironment(338) into SimpleType: CoprocessorEnvironment(339) at 0", "Insert InstanceofExpression(347) into IfStatement(364) at 0", "Insert Block(357) into IfStatement(364) at 1", "Insert Block(363) into IfStatement(364) at 2", "Insert SimpleName: CoprocessorEnvironment(372) into SimpleType: CoprocessorEnvironment(373) at 0", "Insert ThisExpression(386) into ReturnStatement(387) at 0", "Insert SimpleName: RpcCallback(78) into SimpleType: RpcCallback(79) at 0", "Insert SimpleName: AddServerCacheResponse(80) into SimpleType: AddServerCacheResponse(81) at 0", "Insert SimpleName: tenantId(87) into VariableDeclarationFragment(89) at 0", "Insert NullLiteral(88) into VariableDeclarationFragment(89) at 1", "Insert SimpleName: request(91) into MethodInvocation(93) at 0", "Insert SimpleName: hasTenantId(92) into MethodInvocation(93) at 1", "Insert ExpressionStatement(104) into Block(105) at 0", "Insert SimpleName: cachePtr(121) into VariableDeclarationFragment(128) at 0", "Insert MethodInvocation(127) into VariableDeclarationFragment(128) at 1", "Insert VariableDeclarationStatement(154) into Block(177) at 0", "Insert VariableDeclarationStatement(162) into Block(177) at 1", "Move ExpressionStatement(86) into Block(177) at 2", "Insert SingleVariableDeclaration(181) into CatchClause(192) at 0", "Insert Block(191) into CatchClause(192) at 1", "Insert QualifiedName: AddServerCacheResponse.Builder(194) into SimpleType: AddServerCacheResponse.Builder(195) at 0", "Insert SimpleName: responseBuilder(196) into VariableDeclarationFragment(200) at 0", "Insert MethodInvocation(199) into VariableDeclarationFragment(200) at 1", "Insert SimpleName: responseBuilder(202) into MethodInvocation(205) at 0", "Insert SimpleName: setReturn(203) into MethodInvocation(205) at 1", "Insert BooleanLiteral: true(204) into MethodInvocation(205) at 2", "Insert SimpleName: AddServerCacheResponse(207) into SimpleType: AddServerCacheResponse(208) at 0", "Insert SimpleName: result(209) into VariableDeclarationFragment(213) at 0", "Insert MethodInvocation(212) into VariableDeclarationFragment(213) at 1", "Insert SimpleName: done(215) into MethodInvocation(218) at 0", "Insert SimpleName: run(216) into MethodInvocation(218) at 1", "Insert SimpleName: result(217) into MethodInvocation(218) at 2", "Insert SimpleName: RpcCallback(235) into SimpleType: RpcCallback(236) at 0", "Insert SimpleName: RemoveServerCacheResponse(237) into SimpleType: RemoveServerCacheResponse(238) at 0", "Insert SimpleName: tenantId(244) into VariableDeclarationFragment(246) at 0", "Insert NullLiteral(245) into VariableDeclarationFragment(246) at 1", "Insert SimpleName: request(248) into MethodInvocation(250) at 0", "Insert SimpleName: hasTenantId(249) into MethodInvocation(250) at 1", "Insert ExpressionStatement(261) into Block(262) at 0", "Move ExpressionStatement(138) into Block(288) at 0", "Insert SingleVariableDeclaration(292) into CatchClause(303) at 0", "Insert Block(302) into CatchClause(303) at 1", "Insert QualifiedName: RemoveServerCacheResponse.Builder(305) into SimpleType: RemoveServerCacheResponse.Builder(306) at 0", "Insert SimpleName: responseBuilder(307) into VariableDeclarationFragment(311) at 0", "Insert MethodInvocation(310) into VariableDeclarationFragment(311) at 1", "Insert SimpleName: responseBuilder(313) into MethodInvocation(316) at 0", "Insert SimpleName: setReturn(314) into MethodInvocation(316) at 1", "Insert BooleanLiteral: true(315) into MethodInvocation(316) at 2", "Insert SimpleName: RemoveServerCacheResponse(318) into SimpleType: RemoveServerCacheResponse(319) at 0", "Insert SimpleName: result(320) into VariableDeclarationFragment(324) at 0", "Insert MethodInvocation(323) into VariableDeclarationFragment(324) at 1", "Insert SimpleName: done(326) into MethodInvocation(329) at 0", "Insert SimpleName: run(327) into MethodInvocation(329) at 1", "Insert SimpleName: result(328) into MethodInvocation(329) at 2", "Insert SimpleName: env(344) into InstanceofExpression(347) at 0", "Insert SimpleType: RegionCoprocessorEnvironment(346) into InstanceofExpression(347) at 1", "Insert ExpressionStatement(356) into Block(357) at 0", "Insert ThrowStatement(362) into Block(363) at 0", "Insert Assignment: =(103) into ExpressionStatement(104) at 0", "Insert FieldAccess(114) into MethodInvocation(116) at 2", "Insert SimpleName: tenantId(115) into MethodInvocation(116) at 3", "Insert QualifiedName: org.apache.phoenix.protobuf.ProtobufUtil(122) into MethodInvocation(127) at 0", "Insert SimpleName: toImmutableBytesWritable(123) into MethodInvocation(127) at 1", "Insert MethodInvocation(126) into MethodInvocation(127) at 2", "Insert SingleMemberAnnotation(132) into VariableDeclarationStatement(154) at 0", "Insert ParameterizedType: Class<ServerCacheFactory>(137) into VariableDeclarationStatement(154) at 1", "Insert VariableDeclarationFragment(153) into VariableDeclarationStatement(154) at 2", "Move SimpleType: ServerCacheFactory(49) into VariableDeclarationStatement(162) at 0", "Insert VariableDeclarationFragment(161) into VariableDeclarationStatement(162) at 1", "Insert SimpleType: Throwable(179) into SingleVariableDeclaration(181) at 0", "Insert SimpleName: e(180) into SingleVariableDeclaration(181) at 1", "Insert ExpressionStatement(190) into Block(191) at 0", "Insert SimpleName: AddServerCacheResponse(197) into MethodInvocation(199) at 0", "Insert SimpleName: newBuilder(198) into MethodInvocation(199) at 1", "Insert SimpleName: responseBuilder(210) into MethodInvocation(212) at 0", "Insert SimpleName: build(211) into MethodInvocation(212) at 1", "Insert Assignment: =(260) into ExpressionStatement(261) at 0", "Insert FieldAccess(271) into MethodInvocation(273) at 2", "Insert SimpleName: tenantId(272) into MethodInvocation(273) at 3", "Move SimpleType: SQLException(107) into SingleVariableDeclaration(292) at 0", "Insert SimpleName: e(291) into SingleVariableDeclaration(292) at 1", "Insert ExpressionStatement(301) into Block(302) at 0", "Insert SimpleName: RemoveServerCacheResponse(308) into MethodInvocation(310) at 0", "Insert SimpleName: newBuilder(309) into MethodInvocation(310) at 1", "Insert SimpleName: responseBuilder(321) into MethodInvocation(323) at 0", "Insert SimpleName: build(322) into MethodInvocation(323) at 1", "Insert SimpleName: RegionCoprocessorEnvironment(345) into SimpleType: RegionCoprocessorEnvironment(346) at 0", "Insert Assignment: =(355) into ExpressionStatement(356) at 0", "Insert ClassInstanceCreation(361) into ThrowStatement(362) at 0", "Insert SimpleName: tenantId(94) into Assignment: =(103) at 0", "Insert ClassInstanceCreation(102) into Assignment: =(103) at 1", "Insert ThisExpression(112) into FieldAccess(114) at 0", "Insert SimpleName: env(113) into FieldAccess(114) at 1", "Insert SimpleName: request(124) into MethodInvocation(126) at 0", "Insert SimpleName: getCachePtr(125) into MethodInvocation(126) at 1", "Insert SimpleName: SuppressWarnings(130) into SingleMemberAnnotation(132) at 0", "Insert StringLiteral: \"unchecked\"(131) into SingleMemberAnnotation(132) at 1", "Insert SimpleType: Class(134) into ParameterizedType: Class<ServerCacheFactory>(137) at 0", "Insert SimpleType: ServerCacheFactory(136) into ParameterizedType: Class<ServerCacheFactory>(137) at 1", "Insert SimpleName: serverCacheFactoryClass(138) into VariableDeclarationFragment(153) at 0", "Insert CastExpression(152) into VariableDeclarationFragment(153) at 1", "Insert SimpleName: cacheFactory(157) into VariableDeclarationFragment(161) at 0", "Insert MethodInvocation(160) into VariableDeclarationFragment(161) at 1", "Insert SimpleName: Throwable(178) into SimpleType: Throwable(179) at 0", "Insert MethodInvocation(189) into ExpressionStatement(190) at 0", "Insert SimpleName: tenantId(251) into Assignment: =(260) at 0", "Insert ClassInstanceCreation(259) into Assignment: =(260) at 1", "Insert ThisExpression(269) into FieldAccess(271) at 0", "Insert SimpleName: env(270) into FieldAccess(271) at 1", "Insert MethodInvocation(300) into ExpressionStatement(301) at 0", "Insert FieldAccess(350) into Assignment: =(355) at 0", "Insert CastExpression(354) into Assignment: =(355) at 1", "Insert SimpleType: CoprocessorException(359) into ClassInstanceCreation(361) at 0", "Insert StringLiteral: \"Must be loaded on a table region!\"(360) into ClassInstanceCreation(361) at 1", "Move SimpleType: ImmutableBytesPtr(70) into ClassInstanceCreation(102) at 0", "Insert MethodInvocation(101) into ClassInstanceCreation(102) at 1", "Insert SimpleName: Class(133) into SimpleType: Class(134) at 0", "Insert SimpleName: ServerCacheFactory(135) into SimpleType: ServerCacheFactory(136) at 0", "Insert ParameterizedType: Class<ServerCacheFactory>(143) into CastExpression(152) at 0", "Insert MethodInvocation(151) into CastExpression(152) at 1", "Insert SimpleName: serverCacheFactoryClass(158) into MethodInvocation(160) at 0", "Insert SimpleName: newInstance(159) into MethodInvocation(160) at 1", "Move SimpleType: ImmutableBytesPtr(134) into ClassInstanceCreation(172) at 0", "Insert MethodInvocation(171) into ClassInstanceCreation(172) at 1", "Insert SimpleName: ProtobufUtil(182) into MethodInvocation(189) at 0", "Insert SimpleName: setControllerException(183) into MethodInvocation(189) at 1", "Insert SimpleName: controller(184) into MethodInvocation(189) at 2", "Insert ClassInstanceCreation(188) into MethodInvocation(189) at 3", "Insert SimpleType: ImmutableBytesPtr(253) into ClassInstanceCreation(259) at 0", "Insert MethodInvocation(258) into ClassInstanceCreation(259) at 1", "Insert SimpleType: ImmutableBytesPtr(279) into ClassInstanceCreation(285) at 0", "Insert MethodInvocation(284) into ClassInstanceCreation(285) at 1", "Insert SimpleName: ProtobufUtil(293) into MethodInvocation(300) at 0", "Insert SimpleName: setControllerException(294) into MethodInvocation(300) at 1", "Insert SimpleName: controller(295) into MethodInvocation(300) at 2", "Insert ClassInstanceCreation(299) into MethodInvocation(300) at 3", "Insert ThisExpression(348) into FieldAccess(350) at 0", "Insert SimpleName: env(349) into FieldAccess(350) at 1", "Move SimpleType: RegionCoprocessorEnvironment(114) into CastExpression(354) at 0", "Insert SimpleName: env(353) into CastExpression(354) at 1", "Insert SimpleName: CoprocessorException(358) into SimpleType: CoprocessorException(359) at 0", "Insert MethodInvocation(99) into MethodInvocation(101) at 0", "Insert SimpleName: toByteArray(100) into MethodInvocation(101) at 1", "Insert SimpleType: Class(140) into ParameterizedType: Class<ServerCacheFactory>(143) at 0", "Insert SimpleType: ServerCacheFactory(142) into ParameterizedType: Class<ServerCacheFactory>(143) at 1", "Insert SimpleName: Class(144) into MethodInvocation(151) at 0", "Insert SimpleName: forName(145) into MethodInvocation(151) at 1", "Insert MethodInvocation(150) into MethodInvocation(151) at 2", "Insert MethodInvocation(169) into MethodInvocation(171) at 0", "Insert SimpleName: toByteArray(170) into MethodInvocation(171) at 1", "Insert SimpleType: IOException(186) into ClassInstanceCreation(188) at 0", "Insert SimpleName: e(187) into ClassInstanceCreation(188) at 1", "Insert SimpleName: ImmutableBytesPtr(252) into SimpleType: ImmutableBytesPtr(253) at 0", "Insert MethodInvocation(256) into MethodInvocation(258) at 0", "Insert SimpleName: toByteArray(257) into MethodInvocation(258) at 1", "Insert SimpleName: ImmutableBytesPtr(278) into SimpleType: ImmutableBytesPtr(279) at 0", "Insert MethodInvocation(282) into MethodInvocation(284) at 0", "Insert SimpleName: toByteArray(283) into MethodInvocation(284) at 1", "Insert SimpleType: IOException(297) into ClassInstanceCreation(299) at 0", "Insert SimpleName: e(298) into ClassInstanceCreation(299) at 1", "Insert SimpleName: request(97) into MethodInvocation(99) at 0", "Insert SimpleName: getTenantId(98) into MethodInvocation(99) at 1", "Insert SimpleName: Class(139) into SimpleType: Class(140) at 0", "Insert SimpleName: ServerCacheFactory(141) into SimpleType: ServerCacheFactory(142) at 0", "Insert MethodInvocation(148) into MethodInvocation(150) at 0", "Insert SimpleName: getClassName(149) into MethodInvocation(150) at 1", "Insert SimpleName: request(167) into MethodInvocation(169) at 0", "Insert SimpleName: getCacheId(168) into MethodInvocation(169) at 1", "Insert SimpleName: IOException(185) into SimpleType: IOException(186) at 0", "Insert SimpleName: request(254) into MethodInvocation(256) at 0", "Insert SimpleName: getTenantId(255) into MethodInvocation(256) at 1", "Insert SimpleName: request(280) into MethodInvocation(282) at 0", "Insert SimpleName: getCacheId(281) into MethodInvocation(282) at 1", "Insert SimpleName: IOException(296) into SimpleType: IOException(297) at 0", "Insert SimpleName: request(146) into MethodInvocation(148) at 0", "Insert SimpleName: getCacheFactory(147) into MethodInvocation(148) at 1", "Delete PrimitiveType: byte(34)", "Delete Dimension(35)", "Delete ArrayType: byte[](36)", "Delete SimpleName: tenantId(37)", "Delete PrimitiveType: byte(39)", "Delete Dimension(40)", "Delete ArrayType: byte[](41)", "Delete SimpleName: cacheId(42)", "Delete SimpleName: cachePtr(46)", "Delete ThisExpression(61)", "Delete SimpleName: getEnvironment(62)", "Delete MethodInvocation(63)", "Delete CastExpression(64)", "Delete SimpleName: tenantId(65)", "Delete NullLiteral(66)", "Delete InfixExpression: ==(67)", "Delete NullLiteral(68)", "Delete SimpleName: tenantId(71)", "Delete ClassInstanceCreation(72)", "Delete ConditionalExpression(73)", "Delete SimpleName: cacheId(81)", "Delete SimpleName: cacheFactory(50)", "Delete SingleVariableDeclaration(51)", "Delete SimpleName: SQLException(52)", "Delete SimpleType: SQLException(53)", "Delete BooleanLiteral: true(87)", "Delete ReturnStatement(88)", "Delete Block(89)", "Delete PrimitiveType: byte(96)", "Delete Dimension(97)", "Delete ArrayType: byte[](98)", "Delete SimpleName: tenantId(99)", "Delete PrimitiveType: byte(101)", "Delete Dimension(102)", "Delete ArrayType: byte[](103)", "Delete SimpleName: cacheId(104)", "Delete ThisExpression(115)", "Delete SimpleName: getEnvironment(116)", "Delete MethodInvocation(117)", "Delete CastExpression(118)", "Delete SimpleName: tenantId(119)", "Delete NullLiteral(120)", "Delete InfixExpression: ==(121)", "Delete NullLiteral(122)", "Delete SimpleName: tenantId(125)", "Delete ClassInstanceCreation(126)", "Delete ConditionalExpression(127)", "Delete SimpleName: cacheId(135)", "Delete BooleanLiteral: true(139)", "Delete ReturnStatement(140)"]}}, {"ServerCachingProtocol_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.ipc.CoprocessorProtocol", "DEL ImportDeclaration"]}, {"root": "DEL SimpleType: CoprocessorProtocol", "operations": ["DEL SimpleName: CoprocessorProtocol", "DEL SimpleType: CoprocessorProtocol"]}]}}, {"ServerCachingProtocol_diff": {"operations": ["Delete QualifiedName: org.apache.hadoop.hbase.ipc.CoprocessorProtocol(8)", "Delete ImportDeclaration(9)", "Delete SimpleName: CoprocessorProtocol(24)", "Delete SimpleType: CoprocessorProtocol(25)"]}}, {"UngroupedAggregateRegionObserver_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 37", "MOV ImportDeclaration to CompilationUnit at 16"]}, {"root": "UPDATE from org.apache.hadoop.hbase.regionserver.MultiVersionConsistencyControl to org.apache.hadoop.hbase.Cell", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.regionserver.MultiVersionConsistencyControl from org.apache.hadoop.hbase.regionserver.MultiVersionConsistencyControl to org.apache.hadoop.hbase.Cell"]}, {"root": "UPDATE from org.apache.hadoop.hbase.util.Pair to org.apache.phoenix.coprocessor.generated.PTableProtos", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.util.Pair from org.apache.hadoop.hbase.util.Pair to org.apache.phoenix.coprocessor.generated.PTableProtos"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to MethodDeclaration at 5", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from List<Pair<Mutation,Integer>> to List<Mutation>", "operations": ["UPD ParameterizedType: List<Pair<Mutation,Integer>> from List<Pair<Mutation,Integer>> to List<Mutation>", "UPD ParameterizedType: List<Pair<Mutation,Integer>> from List<Pair<Mutation,Integer>> to List<Mutation>"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "MOVE from ParameterizedType: List<Pair<Mutation,Integer>>", "operations": ["MOV SimpleType: Mutation to ParameterizedType: List<Pair<Mutation,Integer>> at 1"]}, {"root": "UPDATE from Pair[] to Mutation[]", "operations": ["UPD ArrayType: Pair[] from Pair[] to Mutation[]", "UPD ArrayType: Pair<Mutation,Integer>[] from Pair<Mutation,Integer>[] to Mutation[]"]}, {"root": "UPDATE from DataOutputStream to PTableProtos.PTable", "operations": ["UPD SimpleType: DataOutputStream from DataOutputStream to PTableProtos.PTable", "UPD SimpleType: DataInputStream from DataInputStream to PTableProtos.PTable"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: DataOutputStream to VariableDeclarationStatement at 0"]}, {"root": "MOVE from ArrayType: Pair<Mutation,Integer>[]", "operations": ["MOV SimpleType: Mutation to ArrayType: Pair<Mutation,Integer>[] at 0"]}, {"root": "MOVE from ParameterizedType: List<Pair<Mutation,Integer>>", "operations": ["MOV SimpleType: Mutation to ParameterizedType: List<Pair<Mutation,Integer>> at 1"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS ReturnStatement to Block at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: PTableImpl to MethodInvocation at 0", "INS SimpleName: ptableProto to MethodInvocation at 2"]}, {"root": "INS QualifiedName: PTableProtos.PTable to SimpleType: DataOutputStream at 0", "operations": ["INS QualifiedName: PTableProtos.PTable to SimpleType: DataOutputStream at 0"]}, {"root": "UPDATE from stream to ptableProto", "operations": ["UPD SimpleName: stream from stream to ptableProto", "UPD SimpleName: input from input to ptableProto", "UPD SimpleName: output from output to ptableProto"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: output to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from projectedTable to PTableImpl", "operations": ["UPD SimpleName: projectedTable from projectedTable to PTableImpl"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: projectedTable to MethodInvocation at 0", "MOV SimpleName: write to MethodInvocation at 1", "MOV SimpleName: output to MethodInvocation at 2"]}, {"root": "UPDATE from write to toProto", "operations": ["UPD SimpleName: write from write to toProto"]}, {"root": "UPDATE from output to projectedTable", "operations": ["UPD SimpleName: output from output to projectedTable"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: Mutation to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: m to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: m to SingleVariableDeclaration at 1"]}, {"root": "MOVE from ArrayType: Pair[]", "operations": ["MOV SimpleType: Mutation to ArrayType: Pair[] at 0"]}, {"root": "INS MethodDeclaration to AnonymousClassDeclaration at 5", "operations": ["INS ReturnStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: scan to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: getMaxResultSize to MethodInvocation at 1", "INS PrimitiveType: long to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: getMaxResultSize to MethodDeclaration at 3", "INS MethodInvocation to ReturnStatement at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 5"]}, {"root": "INS QualifiedName: PTableProtos.PTable to SimpleType: DataInputStream at 0", "operations": ["INS QualifiedName: PTableProtos.PTable to SimpleType: DataInputStream at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS QualifiedName: PTableProtos.PTable to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: parseFrom to MethodInvocation at 1", "INS SimpleName: b to MethodInvocation at 2"]}, {"root": "UPDATE from readFields to createFromProto", "operations": ["UPD SimpleName: readFields from readFields to createFromProto"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: readFields to MethodInvocation at 1"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "UPDATE from pair to m", "operations": ["UPD SimpleName: pair from pair to m"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: pair to MethodInvocation at 0"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "UPDATE from ArrayList<KeyValue> to ArrayList<Cell>", "operations": ["UPD ParameterizedType: ArrayList<KeyValue> from ArrayList<KeyValue> to ArrayList<Cell>"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: results to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleType: Cell to VariableDeclarationStatement at 1", "INS SimpleName: Cell to SimpleType: Cell at 0", "INS SimpleName: firstKV to VariableDeclarationFragment at 0", "INS NumberLiteral: 0 to MethodInvocation at 2"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SingleMemberAnnotation to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleName: delete to MethodInvocation at 2", "operations": ["INS SimpleName: delete to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: firstKV to MethodInvocation at 0", "INS SimpleName: getRowArray to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 2", "operations": ["INS SimpleName: getRowOffset to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: firstKV to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 3", "operations": ["INS SimpleName: getRowLength to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 3", "INS SimpleName: firstKV to MethodInvocation at 0"]}, {"root": "INS SimpleName: mutation to MethodInvocation at 2", "operations": ["INS SimpleName: mutation to MethodInvocation at 2"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Delete to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Put to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleName: delete to MethodInvocation at 2", "operations": ["INS SimpleName: delete to MethodInvocation at 2"]}, {"root": "INS SimpleName: put to MethodInvocation at 2", "operations": ["INS SimpleName: put to MethodInvocation at 2"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Delete to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getRowOffset to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 2", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: results to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Put to ClassInstanceCreation at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 2", "operations": ["INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: getRowOffset to MethodInvocation at 1", "INS SimpleName: kv to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 3", "operations": ["INS SimpleName: getRowLength to MethodInvocation at 1", "INS SimpleName: kv to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 3"]}, {"root": "UPDATE from getRow to getRowArray", "operations": ["UPD SimpleName: getRow from getRow to getRowArray", "UPD SimpleName: getRow from getRow to getRowArray"]}, {"root": "UPDATE from getRow to getRowLength", "operations": ["UPD SimpleName: getRow from getRow to getRowLength"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL SimpleName: Integer", "DEL SimpleName: Pair", "DEL SimpleType: Integer", "DEL SimpleType: Pair", "DEL ParameterizedType: Pair<Mutation,Integer>"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleType: Integer", "DEL SimpleType: Pair", "DEL SimpleName: Integer", "DEL SimpleName: Pair"]}, {"root": "DEL SimpleName: pair", "operations": ["DEL SimpleName: pair"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getFirst"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL SimpleName: Integer", "DEL SimpleName: Pair", "DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleType: Integer", "DEL SimpleType: Pair"]}, {"root": "DEL SimpleType: Pair", "operations": ["DEL SimpleName: Pair", "DEL SimpleType: Pair"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleType: Integer", "DEL SimpleName: Pair", "DEL SimpleType: Pair", "DEL SimpleName: Integer"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: MultiVersionConsistencyControl", "DEL SimpleName: innerScanner", "DEL SimpleName: setThreadReadPoint", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: getMvccReadPoint"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: Integer", "DEL ClassInstanceCreation", "DEL SimpleType: Pair", "DEL ParameterizedType: Pair<Mutation,Integer>", "DEL NullLiteral", "DEL SimpleName: Pair", "DEL SimpleName: delete", "DEL SimpleName: Integer"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: Pair", "DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleName: mutation", "DEL SimpleName: Integer", "DEL SimpleType: Mutation", "DEL SimpleType: Integer", "DEL SimpleName: Mutation", "DEL ClassInstanceCreation", "DEL NullLiteral", "DEL SimpleType: Pair"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL NullLiteral", "DEL SimpleName: Pair", "DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleName: Mutation", "DEL SimpleName: Integer", "DEL SimpleType: Mutation", "DEL SimpleName: delete", "DEL SimpleType: Pair", "DEL SimpleType: Integer", "DEL ClassInstanceCreation"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL NullLiteral", "DEL SimpleName: Mutation", "DEL SimpleName: Pair", "DEL SimpleType: Mutation", "DEL SimpleType: Integer", "DEL ClassInstanceCreation", "DEL SimpleName: Integer", "DEL SimpleType: Pair", "DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleName: put"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: ByteArrayInputStream", "DEL VariableDeclarationStatement", "DEL SimpleName: stream", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: ByteArrayInputStream", "DEL SimpleName: ByteArrayInputStream", "DEL SimpleType: ByteArrayInputStream", "DEL SimpleName: b"]}, {"root": "DEL SimpleName: DataInputStream", "operations": ["DEL SimpleName: DataInputStream"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: stream", "DEL SimpleType: DataInputStream", "DEL SimpleName: DataInputStream", "DEL ClassInstanceCreation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: PTableImpl", "DEL SimpleName: table", "DEL SimpleType: PTable", "DEL SimpleName: PTable", "DEL SimpleType: PTableImpl", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: table", "DEL SimpleName: input", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: table"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL SimpleName: stream", "DEL Block", "DEL ClassInstanceCreation", "DEL SimpleName: e", "DEL SimpleName: IOException", "DEL CatchClause", "DEL SimpleName: close", "DEL ThrowStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: e", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: RuntimeException", "DEL TryStatement", "DEL ExpressionStatement", "DEL SimpleType: IOException", "DEL SimpleName: RuntimeException"]}, {"root": "DEL SimpleName: DataOutputStream", "operations": ["DEL SimpleName: DataOutputStream"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: e", "DEL SimpleType: RuntimeException", "DEL SimpleName: RuntimeException", "DEL SimpleType: ByteArrayOutputStream", "DEL SimpleName: e", "DEL SimpleName: ByteArrayOutputStream", "DEL SimpleName: DataOutputStream", "DEL ClassInstanceCreation", "DEL ThrowStatement", "DEL SimpleName: stream", "DEL Block", "DEL Block", "DEL MethodInvocation", "DEL SimpleType: RuntimeException", "DEL ClassInstanceCreation", "DEL SimpleType: ByteArrayOutputStream", "DEL SingleVariableDeclaration", "DEL CatchClause", "DEL VariableDeclarationStatement", "DEL SimpleName: e", "DEL VariableDeclarationFragment", "DEL SimpleName: RuntimeException", "DEL SimpleType: IOException", "DEL SimpleName: IOException", "DEL CatchClause", "DEL TryStatement", "DEL SimpleName: close", "DEL Block", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL Block", "DEL VariableDeclarationStatement", "DEL Block", "DEL Block", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL SimpleName: IOException", "DEL SimpleName: ByteArrayOutputStream", "DEL SimpleType: IOException", "DEL SingleVariableDeclaration", "DEL SimpleName: stream", "DEL SimpleType: DataOutputStream", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL TryStatement", "DEL SimpleName: stream", "DEL ThrowStatement", "DEL VariableDeclarationFragment"]}]}}, {"UngroupedAggregateRegionObserver_diff": {"operations": ["Move ImportDeclaration(55) into CompilationUnit(1751) at 16", "Move ImportDeclaration(61) into CompilationUnit(1751) at 37", "Update QualifiedName: org.apache.hadoop.hbase.regionserver.MultiVersionConsistencyControl(54) to org.apache.hadoop.hbase.Cell", "Update QualifiedName: org.apache.hadoop.hbase.util.Pair(60) to org.apache.phoenix.coprocessor.generated.PTableProtos", "Insert Block(1634) into MethodDeclaration(1635) at 5", "Update ParameterizedType: List<Pair<Mutation,Integer>>(257) to List<Mutation>", "Insert VariableDeclarationStatement(1629) into Block(1634) at 0", "Move ReturnStatement(1709) into Block(1634) at 1", "Move SimpleType: Mutation(253) into ParameterizedType: List<Mutation>(252) at 1", "Update ArrayType: Pair<Mutation,Integer>[](303) to Mutation[]", "Update ParameterizedType: List<Pair<Mutation,Integer>>(648) to List<Mutation>", "Update SimpleType: DataOutputStream(1693) to PTableProtos.PTable", "Move SimpleType: DataOutputStream(1693) into VariableDeclarationStatement(1629) at 0", "Insert VariableDeclarationFragment(1628) into VariableDeclarationStatement(1629) at 1", "Move SimpleType: Mutation(821) into ArrayType: Mutation[](286) at 0", "Move SimpleType: Mutation(644) into ParameterizedType: List<Mutation>(626) at 1", "Insert ReturnStatement(1466) into Block(1467) at 1", "Insert QualifiedName: PTableProtos.PTable(1621) into SimpleType: PTableProtos.PTable(1622) at 0", "Update SimpleName: output(1694) to ptableProto", "Move SimpleName: output(1694) into VariableDeclarationFragment(1628) at 0", "Insert MethodInvocation(1627) into VariableDeclarationFragment(1628) at 1", "Update SimpleName: stream(1706) to ptableProto", "Update ArrayType: Pair[](308) to Mutation[]", "Update SimpleType: DataInputStream(1489) to PTableProtos.PTable", "Insert MethodInvocation(1465) into ReturnStatement(1466) at 0", "Update SimpleName: projectedTable(1701) to PTableImpl", "Move SimpleName: projectedTable(1701) into MethodInvocation(1627) at 0", "Update SimpleName: write(1702) to toProto", "Move SimpleName: write(1702) into MethodInvocation(1627) at 1", "Update SimpleName: output(1703) to projectedTable", "Move SimpleName: output(1703) into MethodInvocation(1627) at 2", "Move SimpleType: Mutation(273) into SingleVariableDeclaration(268) at 0", "Insert SimpleName: m(267) into SingleVariableDeclaration(268) at 1", "Move SimpleType: Mutation(298) into ArrayType: Mutation[](291) at 0", "Insert MethodDeclaration(1434) into AnonymousClassDeclaration(1435) at 5", "Insert QualifiedName: PTableProtos.PTable(1453) into SimpleType: PTableProtos.PTable(1454) at 0", "Update SimpleName: input(1490) to ptableProto", "Insert MethodInvocation(1459) into VariableDeclarationFragment(1460) at 1", "Insert SimpleName: PTableImpl(1462) into MethodInvocation(1465) at 0", "Update SimpleName: readFields(1506) to createFromProto", "Move SimpleName: readFields(1506) into MethodInvocation(1465) at 1", "Insert SimpleName: ptableProto(1464) into MethodInvocation(1465) at 2", "Update ParameterizedType: List<KeyValue>(766) to List<Cell>", "Insert MarkerAnnotation(1425) into MethodDeclaration(1434) at 0", "Insert Modifier: public(1426) into MethodDeclaration(1434) at 1", "Insert PrimitiveType: long(1427) into MethodDeclaration(1434) at 2", "Insert SimpleName: getMaxResultSize(1428) into MethodDeclaration(1434) at 3", "Insert Block(1433) into MethodDeclaration(1434) at 4", "Insert QualifiedName: PTableProtos.PTable(1456) into MethodInvocation(1459) at 0", "Insert SimpleName: parseFrom(1457) into MethodInvocation(1459) at 1", "Insert SimpleName: b(1458) into MethodInvocation(1459) at 2", "Update SimpleName: pair(280) to m", "Move SimpleName: pair(280) into MethodInvocation(274) at 0", "Update SimpleType: KeyValue(765) to Cell", "Update ParameterizedType: List<KeyValue>(1439) to List<Cell>", "Insert SimpleName: Override(1424) into MarkerAnnotation(1425) at 0", "Insert ReturnStatement(1432) into Block(1433) at 0", "Update SimpleName: KeyValue(764) to Cell", "Update ParameterizedType: ArrayList<KeyValue>(772) to ArrayList<Cell>", "Update SimpleType: KeyValue(1438) to Cell", "Insert MethodInvocation(1431) into ReturnStatement(1432) at 0", "Update SimpleType: KeyValue(771) to Cell", "Update SimpleName: KeyValue(1437) to Cell", "Insert SimpleName: scan(1429) into MethodInvocation(1431) at 0", "Insert SimpleName: getMaxResultSize(1430) into MethodInvocation(1431) at 1", "Update SimpleName: KeyValue(770) to Cell", "Insert VariableDeclarationStatement(778) into Block(802) at 0", "Move SingleMemberAnnotation(799) into VariableDeclarationStatement(778) at 0", "Insert SimpleType: Cell(771) into VariableDeclarationStatement(778) at 1", "Insert VariableDeclarationFragment(777) into VariableDeclarationStatement(778) at 2", "Insert SimpleName: Cell(770) into SimpleType: Cell(771) at 0", "Insert SimpleName: firstKV(772) into VariableDeclarationFragment(777) at 0", "Insert MethodInvocation(776) into VariableDeclarationFragment(777) at 1", "Insert SimpleName: delete(799) into MethodInvocation(800) at 2", "Update SimpleType: KeyValue(1180) to Cell", "Insert SimpleName: results(773) into MethodInvocation(776) at 0", "Insert SimpleName: get(774) into MethodInvocation(776) at 1", "Insert NumberLiteral: 0(775) into MethodInvocation(776) at 2", "Insert MethodInvocation(786) into ClassInstanceCreation(794) at 1", "Insert MethodInvocation(789) into ClassInstanceCreation(794) at 2", "Insert MethodInvocation(792) into ClassInstanceCreation(794) at 3", "Update SimpleName: KeyValue(1179) to Cell", "Insert SimpleName: firstKV(784) into MethodInvocation(786) at 0", "Insert SimpleName: getRowArray(785) into MethodInvocation(786) at 1", "Insert SimpleName: firstKV(787) into MethodInvocation(789) at 0", "Insert SimpleName: getRowOffset(788) into MethodInvocation(789) at 1", "Insert SimpleName: firstKV(790) into MethodInvocation(792) at 0", "Insert SimpleName: getRowLength(791) into MethodInvocation(792) at 1", "Insert SimpleName: mutation(1060) into MethodInvocation(1061) at 2", "Move SimpleType: Delete(1125) into VariableDeclarationStatement(1109) at 0", "Move SimpleType: Put(1200) into VariableDeclarationStatement(1178) at 0", "Insert SimpleName: delete(1119) into MethodInvocation(1120) at 2", "Insert SimpleName: put(1189) into MethodInvocation(1190) at 2", "Move SimpleType: Delete(1122) into ClassInstanceCreation(1107) at 0", "Move MethodInvocation(810) into ClassInstanceCreation(1107) at 1", "Insert MethodInvocation(1100) into ClassInstanceCreation(1107) at 2", "Move SimpleType: Put(1197) into ClassInstanceCreation(1176) at 0", "Insert MethodInvocation(1172) into ClassInstanceCreation(1176) at 2", "Insert MethodInvocation(1175) into ClassInstanceCreation(1176) at 3", "Update SimpleName: getRow(809) to getRowArray", "Insert MethodInvocation(1098) into MethodInvocation(1100) at 0", "Insert SimpleName: getRowOffset(1099) into MethodInvocation(1100) at 1", "Update SimpleName: getRow(1130) to getRowLength", "Update SimpleName: getRow(1202) to getRowArray", "Insert SimpleName: kv(1170) into MethodInvocation(1172) at 0", "Insert SimpleName: getRowOffset(1171) into MethodInvocation(1172) at 1", "Insert SimpleName: kv(1173) into MethodInvocation(1175) at 0", "Insert SimpleName: getRowLength(1174) into MethodInvocation(1175) at 1", "Insert SimpleName: results(1095) into MethodInvocation(1098) at 0", "Insert SimpleName: get(1096) into MethodInvocation(1098) at 1", "Insert NumberLiteral: 0(1097) into MethodInvocation(1098) at 2", "Delete SimpleName: Pair(250)", "Delete SimpleType: Pair(251)", "Delete SimpleName: Integer(254)", "Delete SimpleType: Integer(255)", "Delete ParameterizedType: Pair<Mutation,Integer>(256)", "Delete SimpleName: Pair(270)", "Delete SimpleType: Pair(271)", "Delete SimpleName: Integer(274)", "Delete SimpleType: Integer(275)", "Delete ParameterizedType: Pair<Mutation,Integer>(276)", "Delete SimpleName: pair(277)", "Delete SimpleName: getFirst(281)", "Delete MethodInvocation(282)", "Delete SimpleName: Pair(295)", "Delete SimpleType: Pair(296)", "Delete SimpleName: Integer(299)", "Delete SimpleType: Integer(300)", "Delete ParameterizedType: Pair<Mutation,Integer>(301)", "Delete SimpleName: Pair(305)", "Delete SimpleType: Pair(306)", "Delete SimpleName: Pair(641)", "Delete SimpleType: Pair(642)", "Delete SimpleName: Integer(645)", "Delete SimpleType: Integer(646)", "Delete ParameterizedType: Pair<Mutation,Integer>(647)", "Delete SimpleName: MultiVersionConsistencyControl(751)", "Delete SimpleName: setThreadReadPoint(752)", "Delete SimpleName: innerScanner(753)", "Delete SimpleName: getMvccReadPoint(754)", "Delete MethodInvocation(755)", "Delete MethodInvocation(756)", "Delete ExpressionStatement(757)", "Delete NullLiteral(780)", "Delete NullLiteral(812)", "Delete SimpleName: Pair(818)", "Delete SimpleType: Pair(819)", "Delete SimpleName: Integer(822)", "Delete SimpleType: Integer(823)", "Delete ParameterizedType: Pair<Mutation,Integer>(824)", "Delete SimpleName: delete(825)", "Delete NullLiteral(826)", "Delete ClassInstanceCreation(827)", "Delete SimpleName: Pair(1088)", "Delete SimpleType: Pair(1089)", "Delete SimpleName: Mutation(1090)", "Delete SimpleType: Mutation(1091)", "Delete SimpleName: Integer(1092)", "Delete SimpleType: Integer(1093)", "Delete ParameterizedType: Pair<Mutation,Integer>(1094)", "Delete SimpleName: mutation(1095)", "Delete NullLiteral(1096)", "Delete ClassInstanceCreation(1097)", "Delete SimpleName: Pair(1144)", "Delete SimpleType: Pair(1145)", "Delete SimpleName: Mutation(1146)", "Delete SimpleType: Mutation(1147)", "Delete SimpleName: Integer(1148)", "Delete SimpleType: Integer(1149)", "Delete ParameterizedType: Pair<Mutation,Integer>(1150)", "Delete SimpleName: delete(1151)", "Delete NullLiteral(1152)", "Delete ClassInstanceCreation(1153)", "Delete SimpleName: Pair(1217)", "Delete SimpleType: Pair(1218)", "Delete SimpleName: Mutation(1219)", "Delete SimpleType: Mutation(1220)", "Delete SimpleName: Integer(1221)", "Delete SimpleType: Integer(1222)", "Delete ParameterizedType: Pair<Mutation,Integer>(1223)", "Delete SimpleName: put(1224)", "Delete NullLiteral(1225)", "Delete ClassInstanceCreation(1226)", "Delete SimpleName: ByteArrayInputStream(1479)", "Delete SimpleType: ByteArrayInputStream(1480)", "Delete SimpleName: stream(1481)", "Delete SimpleName: ByteArrayInputStream(1482)", "Delete SimpleType: ByteArrayInputStream(1483)", "Delete SimpleName: b(1484)", "Delete ClassInstanceCreation(1485)", "Delete VariableDeclarationFragment(1486)", "Delete VariableDeclarationStatement(1487)", "Delete SimpleName: DataInputStream(1488)", "Delete SimpleName: DataInputStream(1491)", "Delete SimpleType: DataInputStream(1492)", "Delete SimpleName: stream(1493)", "Delete ClassInstanceCreation(1494)", "Delete SimpleName: PTable(1497)", "Delete SimpleType: PTable(1498)", "Delete SimpleName: table(1499)", "Delete SimpleName: PTableImpl(1500)", "Delete SimpleType: PTableImpl(1501)", "Delete ClassInstanceCreation(1502)", "Delete VariableDeclarationFragment(1503)", "Delete VariableDeclarationStatement(1504)", "Delete SimpleName: table(1505)", "Delete SimpleName: input(1507)", "Delete MethodInvocation(1508)", "Delete ExpressionStatement(1509)", "Delete SimpleName: table(1510)", "Delete ReturnStatement(1511)", "Delete SimpleName: stream(1524)", "Delete SimpleName: close(1525)", "Delete MethodInvocation(1526)", "Delete ExpressionStatement(1527)", "Delete Block(1528)", "Delete SimpleName: IOException(1529)", "Delete SimpleType: IOException(1530)", "Delete SimpleName: e(1531)", "Delete SingleVariableDeclaration(1532)", "Delete SimpleName: RuntimeException(1533)", "Delete SimpleType: RuntimeException(1534)", "Delete SimpleName: e(1535)", "Delete ClassInstanceCreation(1536)", "Delete ThrowStatement(1537)", "Delete Block(1538)", "Delete CatchClause(1539)", "Delete TryStatement(1540)", "Delete Block(1541)", "Delete SimpleName: DataOutputStream(1692)", "Delete SimpleName: ByteArrayOutputStream(1684)", "Delete SimpleType: ByteArrayOutputStream(1685)", "Delete SimpleName: stream(1686)", "Delete SimpleName: ByteArrayOutputStream(1687)", "Delete SimpleType: ByteArrayOutputStream(1688)", "Delete ClassInstanceCreation(1689)", "Delete VariableDeclarationFragment(1690)", "Delete VariableDeclarationStatement(1691)", "Delete SimpleName: DataOutputStream(1695)", "Delete SimpleType: DataOutputStream(1696)", "Delete SimpleName: stream(1697)", "Delete ClassInstanceCreation(1698)", "Delete VariableDeclarationFragment(1699)", "Delete VariableDeclarationStatement(1700)", "Delete MethodInvocation(1704)", "Delete ExpressionStatement(1705)", "Delete Block(1710)", "Delete SimpleName: IOException(1711)", "Delete SimpleType: IOException(1712)", "Delete SimpleName: e(1713)", "Delete SingleVariableDeclaration(1714)", "Delete SimpleName: RuntimeException(1715)", "Delete SimpleType: RuntimeException(1716)", "Delete SimpleName: e(1717)", "Delete ClassInstanceCreation(1718)", "Delete ThrowStatement(1719)", "Delete Block(1720)", "Delete CatchClause(1721)", "Delete SimpleName: stream(1722)", "Delete SimpleName: close(1723)", "Delete MethodInvocation(1724)", "Delete ExpressionStatement(1725)", "Delete Block(1726)", "Delete SimpleName: IOException(1727)", "Delete SimpleType: IOException(1728)", "Delete SimpleName: e(1729)", "Delete SingleVariableDeclaration(1730)", "Delete SimpleName: RuntimeException(1731)", "Delete SimpleType: RuntimeException(1732)", "Delete SimpleName: e(1733)", "Delete ClassInstanceCreation(1734)", "Delete ThrowStatement(1735)", "Delete Block(1736)", "Delete CatchClause(1737)", "Delete TryStatement(1738)", "Delete Block(1739)", "Delete TryStatement(1740)", "Delete Block(1741)"]}}, {"MutationState_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.CellUtil to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "UPDATE from getFamilyMap to getFamilyCellMap", "operations": ["UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap", "UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap"]}, {"root": "UPDATE from Entry<byte[],List<KeyValue>> to Entry<byte[],List<Cell>>", "operations": ["UPD ParameterizedType: Entry<byte[],List<KeyValue>> from Entry<byte[],List<KeyValue>> to Entry<byte[],List<Cell>>"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "INS MethodInvocation to Assignment: += at 1", "operations": ["INS SimpleName: estimatedSizeOf to MethodInvocation at 1", "INS MethodInvocation to Assignment: += at 1", "INS SimpleName: CellUtil to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: kv to MethodInvocation at 2"]}, {"root": "DEL FieldAccess", "operations": ["DEL SimpleName: getBuffer", "DEL MethodInvocation", "DEL SimpleName: length", "DEL FieldAccess"]}]}}, {"MutationState_diff": {"operations": ["Insert ImportDeclaration(15) into CompilationUnit(2285) at 7", "Insert ImportDeclaration(17) into CompilationUnit(2285) at 8", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.CellUtil(16) into ImportDeclaration(17) at 0", "Update SimpleName: getFamilyMap(1554) to getFamilyCellMap", "Update ParameterizedType: Entry<byte[],List<KeyValue>>(1568) to Entry<byte[],List<Cell>>", "Update ParameterizedType: List<KeyValue>(1567) to List<Cell>", "Update SimpleName: getFamilyMap(1572) to getFamilyCellMap", "Update SimpleType: KeyValue(1566) to Cell", "Update SimpleName: KeyValue(1565) to Cell", "Update SimpleType: KeyValue(1582) to Cell", "Update SimpleName: KeyValue(1581) to Cell", "Insert MethodInvocation(1596) into Assignment: +=(1597) at 1", "Insert SimpleName: CellUtil(1593) into MethodInvocation(1596) at 0", "Insert SimpleName: estimatedSizeOf(1594) into MethodInvocation(1596) at 1", "Move SimpleName: kv(1589) into MethodInvocation(1596) at 2", "Delete SimpleName: getBuffer(1590)", "Delete MethodInvocation(1591)", "Delete SimpleName: length(1592)", "Delete FieldAccess(1593)"]}}, {"KeyValueColumnExpression_cluster": {"actions": []}}, {"KeyValueColumnExpression_diff": {"operations": []}}, {"BooleanExpressionFilter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.util.Writables to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: org.apache.hadoop.io.Writable to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS SimpleType: Writable to TypeDeclaration: class at 5", "operations": ["INS SimpleType: Writable to TypeDeclaration: class at 5", "INS SimpleName: Writable to SimpleType: Writable at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS SimpleName: getBytes to MethodInvocation at 1", "INS ArrayType: byte[] to MethodDeclaration at 2", "INS SimpleName: toByteArray to MethodDeclaration at 3", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleType: IOException to MethodDeclaration at 4", "INS ThisExpression to MethodInvocation at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS ReturnStatement to Block at 0", "INS Dimension to ArrayType: byte[] at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: Writables to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}]}}, {"BooleanExpressionFilter_diff": {"operations": ["Insert ImportDeclaration(13) into CompilationUnit(356) at 6", "Insert ImportDeclaration(15) into CompilationUnit(356) at 7", "Insert QualifiedName: org.apache.hadoop.hbase.util.Writables(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: org.apache.hadoop.io.Writable(14) into ImportDeclaration(15) at 0", "Insert SimpleType: Writable(39) into TypeDeclaration: class(355) at 5", "Insert MethodDeclaration(343) into TypeDeclaration: class(355) at 19", "Insert SimpleName: Writable(38) into SimpleType: Writable(39) at 0", "Insert MarkerAnnotation(329) into MethodDeclaration(343) at 0", "Insert Modifier: public(330) into MethodDeclaration(343) at 1", "Insert ArrayType: byte[](333) into MethodDeclaration(343) at 2", "Insert SimpleName: toByteArray(334) into MethodDeclaration(343) at 3", "Insert SimpleType: IOException(336) into MethodDeclaration(343) at 4", "Insert Block(342) into MethodDeclaration(343) at 5", "Insert SimpleName: Override(328) into MarkerAnnotation(329) at 0", "Insert PrimitiveType: byte(331) into ArrayType: byte[](333) at 0", "Insert Dimension(332) into ArrayType: byte[](333) at 1", "Insert SimpleName: IOException(335) into SimpleType: IOException(336) at 0", "Insert ReturnStatement(341) into Block(342) at 0", "Insert MethodInvocation(340) into ReturnStatement(341) at 0", "Insert SimpleName: Writables(337) into MethodInvocation(340) at 0", "Insert SimpleName: getBytes(338) into MethodInvocation(340) at 1", "Insert ThisExpression(339) into MethodInvocation(340) at 2"]}}, {"MultiCFCQKeyValueComparisonFilter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.io.IOException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.apache.hadoop.hbase.exceptions.DeserializationException to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.util.Writables to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS Modifier: static to MethodDeclaration at 1", "INS Block to CatchClause at 1", "INS MethodInvocation to CastExpression at 1", "INS SimpleType: MultiCFCQKeyValueComparisonFilter to CastExpression at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleType: DeserializationException to MethodDeclaration at 5", "INS TryStatement to Block at 0", "INS Block to TryStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: getWritable to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: e to ClassInstanceCreation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: MultiCFCQKeyValueComparisonFilter to SimpleType: MultiCFCQKeyValueComparisonFilter at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleType: MultiCFCQKeyValueComparisonFilter to MethodDeclaration at 2", "INS SimpleName: parseFrom to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS SimpleName: MultiCFCQKeyValueComparisonFilter to SimpleType: MultiCFCQKeyValueComparisonFilter at 0", "INS SimpleName: DeserializationException to SimpleType: DeserializationException at 0", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: Writables to MethodInvocation at 0", "INS SimpleType: MultiCFCQKeyValueComparisonFilter to ClassInstanceCreation at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: pbBytes to SingleVariableDeclaration at 2", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS SimpleName: pbBytes to MethodInvocation at 2", "INS CatchClause to TryStatement at 1", "INS Block to MethodDeclaration at 6", "INS ClassInstanceCreation to MethodInvocation at 3", "INS ArrayType: byte[] to SingleVariableDeclaration at 1", "INS CastExpression to ReturnStatement at 0", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS SimpleName: MultiCFCQKeyValueComparisonFilter to SimpleType: MultiCFCQKeyValueComparisonFilter at 0", "INS SimpleType: DeserializationException to ClassInstanceCreation at 0", "INS SimpleName: DeserializationException to SimpleType: DeserializationException at 0"]}]}}, {"MultiCFCQKeyValueComparisonFilter_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(563) at 1", "Insert ImportDeclaration(7) into CompilationUnit(563) at 3", "Insert ImportDeclaration(11) into CompilationUnit(563) at 5", "Insert QualifiedName: java.io.IOException(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.exceptions.DeserializationException(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.util.Writables(10) into ImportDeclaration(11) at 0", "Insert MethodDeclaration(561) into TypeDeclaration: class(562) at 13", "Insert Modifier: public(523) into MethodDeclaration(561) at 0", "Insert Modifier: static(524) into MethodDeclaration(561) at 1", "Insert SimpleType: MultiCFCQKeyValueComparisonFilter(526) into MethodDeclaration(561) at 2", "Insert SimpleName: parseFrom(527) into MethodDeclaration(561) at 3", "Insert SingleVariableDeclaration(533) into MethodDeclaration(561) at 4", "Insert SimpleType: DeserializationException(535) into MethodDeclaration(561) at 5", "Insert Block(560) into MethodDeclaration(561) at 6", "Insert SimpleName: MultiCFCQKeyValueComparisonFilter(525) into SimpleType: MultiCFCQKeyValueComparisonFilter(526) at 0", "Insert Modifier: final(528) into SingleVariableDeclaration(533) at 0", "Insert ArrayType: byte[](531) into SingleVariableDeclaration(533) at 1", "Insert SimpleName: pbBytes(532) into SingleVariableDeclaration(533) at 2", "Insert SimpleName: DeserializationException(534) into SimpleType: DeserializationException(535) at 0", "Insert TryStatement(559) into Block(560) at 0", "Insert PrimitiveType: byte(529) into ArrayType: byte[](531) at 0", "Insert Dimension(530) into ArrayType: byte[](531) at 1", "Insert Block(547) into TryStatement(559) at 0", "Insert CatchClause(558) into TryStatement(559) at 1", "Insert ReturnStatement(546) into Block(547) at 0", "Insert SingleVariableDeclaration(551) into CatchClause(558) at 0", "Insert Block(557) into CatchClause(558) at 1", "Insert CastExpression(545) into ReturnStatement(546) at 0", "Insert SimpleType: IOException(549) into SingleVariableDeclaration(551) at 0", "Insert SimpleName: e(550) into SingleVariableDeclaration(551) at 1", "Insert ThrowStatement(556) into Block(557) at 0", "Insert SimpleType: MultiCFCQKeyValueComparisonFilter(537) into CastExpression(545) at 0", "Insert MethodInvocation(544) into CastExpression(545) at 1", "Insert SimpleName: IOException(548) into SimpleType: IOException(549) at 0", "Insert ClassInstanceCreation(555) into ThrowStatement(556) at 0", "Insert SimpleName: MultiCFCQKeyValueComparisonFilter(536) into SimpleType: MultiCFCQKeyValueComparisonFilter(537) at 0", "Insert SimpleName: Writables(538) into MethodInvocation(544) at 0", "Insert SimpleName: getWritable(539) into MethodInvocation(544) at 1", "Insert SimpleName: pbBytes(540) into MethodInvocation(544) at 2", "Insert ClassInstanceCreation(543) into MethodInvocation(544) at 3", "Insert SimpleType: DeserializationException(553) into ClassInstanceCreation(555) at 0", "Insert SimpleName: e(554) into ClassInstanceCreation(555) at 1", "Insert SimpleType: MultiCFCQKeyValueComparisonFilter(542) into ClassInstanceCreation(543) at 0", "Insert SimpleName: DeserializationException(552) into SimpleType: DeserializationException(553) at 0", "Insert SimpleName: MultiCFCQKeyValueComparisonFilter(541) into SimpleType: MultiCFCQKeyValueComparisonFilter(542) at 0"]}}, {"MultiCQKeyValueComparisonFilter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.io.IOException to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: org.apache.hadoop.hbase.exceptions.DeserializationException to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.hadoop.hbase.util.Writables to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS TryStatement to Block at 0", "INS SimpleName: pbBytes to MethodInvocation at 2", "INS MethodInvocation to CastExpression at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: MultiCQKeyValueComparisonFilter to SimpleType: MultiCQKeyValueComparisonFilter at 0", "INS Block to MethodDeclaration at 6", "INS Block to CatchClause at 1", "INS ThrowStatement to Block at 0", "INS SimpleType: MultiCQKeyValueComparisonFilter to ClassInstanceCreation at 0", "INS SimpleType: MultiCQKeyValueComparisonFilter to CastExpression at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 0", "INS Block to TryStatement at 0", "INS SimpleName: MultiCQKeyValueComparisonFilter to SimpleType: MultiCQKeyValueComparisonFilter at 0", "INS SimpleName: DeserializationException to SimpleType: DeserializationException at 0", "INS ReturnStatement to Block at 0", "INS CastExpression to ReturnStatement at 0", "INS CatchClause to TryStatement at 1", "INS ArrayType: byte[] to SingleVariableDeclaration at 1", "INS SimpleName: pbBytes to SingleVariableDeclaration at 2", "INS SimpleType: DeserializationException to ClassInstanceCreation at 0", "INS SimpleName: parseFrom to MethodDeclaration at 3", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: getWritable to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: Writables to MethodInvocation at 0", "INS SimpleName: e to ClassInstanceCreation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: DeserializationException to SimpleType: DeserializationException at 0", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS SimpleName: MultiCQKeyValueComparisonFilter to SimpleType: MultiCQKeyValueComparisonFilter at 0", "INS Modifier: static to MethodDeclaration at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleType: DeserializationException to MethodDeclaration at 5", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleType: MultiCQKeyValueComparisonFilter to MethodDeclaration at 2"]}]}}, {"MultiCQKeyValueComparisonFilter_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(228) at 1", "Insert ImportDeclaration(5) into CompilationUnit(228) at 2", "Insert ImportDeclaration(9) into CompilationUnit(228) at 4", "Insert QualifiedName: java.io.IOException(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.exceptions.DeserializationException(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.util.Writables(8) into ImportDeclaration(9) at 0", "Insert MethodDeclaration(226) into TypeDeclaration: class(227) at 11", "Insert Modifier: public(188) into MethodDeclaration(226) at 0", "Insert Modifier: static(189) into MethodDeclaration(226) at 1", "Insert SimpleType: MultiCQKeyValueComparisonFilter(191) into MethodDeclaration(226) at 2", "Insert SimpleName: parseFrom(192) into MethodDeclaration(226) at 3", "Insert SingleVariableDeclaration(198) into MethodDeclaration(226) at 4", "Insert SimpleType: DeserializationException(200) into MethodDeclaration(226) at 5", "Insert Block(225) into MethodDeclaration(226) at 6", "Insert SimpleName: MultiCQKeyValueComparisonFilter(190) into SimpleType: MultiCQKeyValueComparisonFilter(191) at 0", "Insert Modifier: final(193) into SingleVariableDeclaration(198) at 0", "Insert ArrayType: byte[](196) into SingleVariableDeclaration(198) at 1", "Insert SimpleName: pbBytes(197) into SingleVariableDeclaration(198) at 2", "Insert SimpleName: DeserializationException(199) into SimpleType: DeserializationException(200) at 0", "Insert TryStatement(224) into Block(225) at 0", "Insert PrimitiveType: byte(194) into ArrayType: byte[](196) at 0", "Insert Dimension(195) into ArrayType: byte[](196) at 1", "Insert Block(212) into TryStatement(224) at 0", "Insert CatchClause(223) into TryStatement(224) at 1", "Insert ReturnStatement(211) into Block(212) at 0", "Insert SingleVariableDeclaration(216) into CatchClause(223) at 0", "Insert Block(222) into CatchClause(223) at 1", "Insert CastExpression(210) into ReturnStatement(211) at 0", "Insert SimpleType: IOException(214) into SingleVariableDeclaration(216) at 0", "Insert SimpleName: e(215) into SingleVariableDeclaration(216) at 1", "Insert ThrowStatement(221) into Block(222) at 0", "Insert SimpleType: MultiCQKeyValueComparisonFilter(202) into CastExpression(210) at 0", "Insert MethodInvocation(209) into CastExpression(210) at 1", "Insert SimpleName: IOException(213) into SimpleType: IOException(214) at 0", "Insert ClassInstanceCreation(220) into ThrowStatement(221) at 0", "Insert SimpleName: MultiCQKeyValueComparisonFilter(201) into SimpleType: MultiCQKeyValueComparisonFilter(202) at 0", "Insert SimpleName: Writables(203) into MethodInvocation(209) at 0", "Insert SimpleName: getWritable(204) into MethodInvocation(209) at 1", "Insert SimpleName: pbBytes(205) into MethodInvocation(209) at 2", "Insert ClassInstanceCreation(208) into MethodInvocation(209) at 3", "Insert SimpleType: DeserializationException(218) into ClassInstanceCreation(220) at 0", "Insert SimpleName: e(219) into ClassInstanceCreation(220) at 1", "Insert SimpleType: MultiCQKeyValueComparisonFilter(207) into ClassInstanceCreation(208) at 0", "Insert SimpleName: DeserializationException(217) into SimpleType: DeserializationException(218) at 0", "Insert SimpleName: MultiCQKeyValueComparisonFilter(206) into SimpleType: MultiCQKeyValueComparisonFilter(207) at 0"]}}, {"MultiKeyValueComparisonFilter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: org.apache.hadoop.hbase.KeyValueUtil to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.exceptions.DeserializationException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS ImportDeclaration to CompilationUnit at 11", "INS QualifiedName: org.apache.hadoop.hbase.util.Writables to ImportDeclaration at 0"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: ensureKeyValue to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: KeyValueUtil to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: keyValue to MethodInvocation at 2"]}]}}, {"MultiKeyValueComparisonFilter_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(831) at 5", "Insert ImportDeclaration(15) into CompilationUnit(831) at 7", "Insert ImportDeclaration(17) into CompilationUnit(831) at 8", "Insert ImportDeclaration(23) into CompilationUnit(831) at 11", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.KeyValueUtil(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.exceptions.DeserializationException(16) into ImportDeclaration(17) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.util.Writables(22) into ImportDeclaration(23) at 0", "Update SimpleType: KeyValue(659) to Cell", "Update SimpleName: KeyValue(658) to Cell", "Insert MethodInvocation(698) into MethodInvocation(699) at 2", "Insert SimpleName: KeyValueUtil(695) into MethodInvocation(698) at 0", "Insert SimpleName: ensureKeyValue(696) into MethodInvocation(698) at 1", "Move SimpleName: keyValue(687) into MethodInvocation(698) at 2"]}}, {"RowKeyComparisonFilter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.exceptions.DeserializationException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS ImportDeclaration to CompilationUnit at 9", "INS QualifiedName: org.apache.hadoop.hbase.util.Writables to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS SimpleName: DeserializationException to SimpleType: DeserializationException at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleType: DeserializationException to ClassInstanceCreation at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: e to ClassInstanceCreation at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: RowKeyComparisonFilter to SimpleType: RowKeyComparisonFilter at 0", "INS CatchClause to TryStatement at 1", "INS Block to CatchClause at 1", "INS SimpleName: pbBytes to MethodInvocation at 2", "INS SimpleType: DeserializationException to MethodDeclaration at 5", "INS TryStatement to Block at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS CastExpression to ReturnStatement at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: RowKeyComparisonFilter to SimpleType: RowKeyComparisonFilter at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS SimpleName: parseFrom to MethodDeclaration at 3", "INS SimpleType: RowKeyComparisonFilter to MethodDeclaration at 2", "INS ArrayType: byte[] to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 6", "INS SimpleName: RowKeyComparisonFilter to SimpleType: RowKeyComparisonFilter at 0", "INS Dimension to ArrayType: byte[] at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ThrowStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: Writables to MethodInvocation at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS SimpleType: RowKeyComparisonFilter to CastExpression at 0", "INS Modifier: static to MethodDeclaration at 1", "INS Block to TryStatement at 0", "INS SimpleType: RowKeyComparisonFilter to ClassInstanceCreation at 0", "INS SimpleName: pbBytes to SingleVariableDeclaration at 2", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS SimpleName: DeserializationException to SimpleType: DeserializationException at 0", "INS SimpleName: getWritable to MethodInvocation at 1"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell"]}, {"root": "UPDATE from getBuffer to getRowArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getRowArray"]}]}}, {"RowKeyComparisonFilter_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(505) at 4", "Insert ImportDeclaration(13) into CompilationUnit(505) at 6", "Insert ImportDeclaration(19) into CompilationUnit(505) at 9", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.exceptions.DeserializationException(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.util.Writables(18) into ImportDeclaration(19) at 0", "Insert MethodDeclaration(503) into TypeDeclaration: class(504) at 18", "Insert Modifier: public(465) into MethodDeclaration(503) at 0", "Insert Modifier: static(466) into MethodDeclaration(503) at 1", "Insert SimpleType: RowKeyComparisonFilter(468) into MethodDeclaration(503) at 2", "Insert SimpleName: parseFrom(469) into MethodDeclaration(503) at 3", "Insert SingleVariableDeclaration(475) into MethodDeclaration(503) at 4", "Insert SimpleType: DeserializationException(477) into MethodDeclaration(503) at 5", "Insert Block(502) into MethodDeclaration(503) at 6", "Update SimpleType: KeyValue(133) to Cell", "Insert SimpleName: RowKeyComparisonFilter(467) into SimpleType: RowKeyComparisonFilter(468) at 0", "Insert Modifier: final(470) into SingleVariableDeclaration(475) at 0", "Insert ArrayType: byte[](473) into SingleVariableDeclaration(475) at 1", "Insert SimpleName: pbBytes(474) into SingleVariableDeclaration(475) at 2", "Insert SimpleName: DeserializationException(476) into SimpleType: DeserializationException(477) at 0", "Insert TryStatement(501) into Block(502) at 0", "Update SimpleName: KeyValue(132) to Cell", "Insert PrimitiveType: byte(471) into ArrayType: byte[](473) at 0", "Insert Dimension(472) into ArrayType: byte[](473) at 1", "Insert Block(489) into TryStatement(501) at 0", "Insert CatchClause(500) into TryStatement(501) at 1", "Insert ReturnStatement(488) into Block(489) at 0", "Insert SingleVariableDeclaration(493) into CatchClause(500) at 0", "Insert Block(499) into CatchClause(500) at 1", "Insert CastExpression(487) into ReturnStatement(488) at 0", "Insert SimpleType: IOException(491) into SingleVariableDeclaration(493) at 0", "Insert SimpleName: e(492) into SingleVariableDeclaration(493) at 1", "Insert ThrowStatement(498) into Block(499) at 0", "Insert SimpleType: RowKeyComparisonFilter(479) into CastExpression(487) at 0", "Insert MethodInvocation(486) into CastExpression(487) at 1", "Insert SimpleName: IOException(490) into SimpleType: IOException(491) at 0", "Insert ClassInstanceCreation(497) into ThrowStatement(498) at 0", "Update SimpleName: getBuffer(140) to getRowArray", "Insert SimpleName: RowKeyComparisonFilter(478) into SimpleType: RowKeyComparisonFilter(479) at 0", "Insert SimpleName: Writables(480) into MethodInvocation(486) at 0", "Insert SimpleName: getWritable(481) into MethodInvocation(486) at 1", "Insert SimpleName: pbBytes(482) into MethodInvocation(486) at 2", "Insert ClassInstanceCreation(485) into MethodInvocation(486) at 3", "Insert SimpleType: DeserializationException(495) into ClassInstanceCreation(497) at 0", "Insert SimpleName: e(496) into ClassInstanceCreation(497) at 1", "Insert SimpleType: RowKeyComparisonFilter(484) into ClassInstanceCreation(485) at 0", "Insert SimpleName: DeserializationException(494) into SimpleType: DeserializationException(495) at 0", "Insert SimpleName: RowKeyComparisonFilter(483) into SimpleType: RowKeyComparisonFilter(484) at 0"]}}, {"SingleCFCQKeyValueComparisonFilter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.io.IOException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: org.apache.hadoop.hbase.exceptions.DeserializationException to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.hadoop.hbase.util.Writables to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 6", "INS Modifier: public to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS ArrayType: byte[] to SingleVariableDeclaration at 1", "INS Block to TryStatement at 0", "INS SimpleName: e to ClassInstanceCreation at 1", "INS SimpleName: Writables to MethodInvocation at 0", "INS SimpleName: SingleCFCQKeyValueComparisonFilter to SimpleType: SingleCFCQKeyValueComparisonFilter at 0", "INS SimpleName: SingleCFCQKeyValueComparisonFilter to SimpleType: SingleCFCQKeyValueComparisonFilter at 0", "INS Modifier: static to MethodDeclaration at 1", "INS MethodInvocation to CastExpression at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleType: DeserializationException to ClassInstanceCreation at 0", "INS CastExpression to ReturnStatement at 0", "INS SimpleName: SingleCFCQKeyValueComparisonFilter to SimpleType: SingleCFCQKeyValueComparisonFilter at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS SimpleName: getWritable to MethodInvocation at 1", "INS SimpleName: DeserializationException to SimpleType: DeserializationException at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS SimpleType: SingleCFCQKeyValueComparisonFilter to CastExpression at 0", "INS SimpleName: pbBytes to SingleVariableDeclaration at 2", "INS TryStatement to Block at 0", "INS SimpleType: SingleCFCQKeyValueComparisonFilter to MethodDeclaration at 2", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: parseFrom to MethodDeclaration at 3", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS Block to CatchClause at 1", "INS ThrowStatement to Block at 0", "INS SimpleType: DeserializationException to MethodDeclaration at 5", "INS CatchClause to TryStatement at 1", "INS SimpleName: pbBytes to MethodInvocation at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleType: SingleCFCQKeyValueComparisonFilter to ClassInstanceCreation at 0", "INS SimpleName: DeserializationException to SimpleType: DeserializationException at 0"]}]}}, {"SingleCFCQKeyValueComparisonFilter_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(136) at 1", "Insert ImportDeclaration(5) into CompilationUnit(136) at 2", "Insert ImportDeclaration(9) into CompilationUnit(136) at 4", "Insert QualifiedName: java.io.IOException(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.exceptions.DeserializationException(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.util.Writables(8) into ImportDeclaration(9) at 0", "Insert MethodDeclaration(134) into TypeDeclaration: class(135) at 7", "Insert Modifier: public(96) into MethodDeclaration(134) at 0", "Insert Modifier: static(97) into MethodDeclaration(134) at 1", "Insert SimpleType: SingleCFCQKeyValueComparisonFilter(99) into MethodDeclaration(134) at 2", "Insert SimpleName: parseFrom(100) into MethodDeclaration(134) at 3", "Insert SingleVariableDeclaration(106) into MethodDeclaration(134) at 4", "Insert SimpleType: DeserializationException(108) into MethodDeclaration(134) at 5", "Insert Block(133) into MethodDeclaration(134) at 6", "Insert SimpleName: SingleCFCQKeyValueComparisonFilter(98) into SimpleType: SingleCFCQKeyValueComparisonFilter(99) at 0", "Insert Modifier: final(101) into SingleVariableDeclaration(106) at 0", "Insert ArrayType: byte[](104) into SingleVariableDeclaration(106) at 1", "Insert SimpleName: pbBytes(105) into SingleVariableDeclaration(106) at 2", "Insert SimpleName: DeserializationException(107) into SimpleType: DeserializationException(108) at 0", "Insert TryStatement(132) into Block(133) at 0", "Insert PrimitiveType: byte(102) into ArrayType: byte[](104) at 0", "Insert Dimension(103) into ArrayType: byte[](104) at 1", "Insert Block(120) into TryStatement(132) at 0", "Insert CatchClause(131) into TryStatement(132) at 1", "Insert ReturnStatement(119) into Block(120) at 0", "Insert SingleVariableDeclaration(124) into CatchClause(131) at 0", "Insert Block(130) into CatchClause(131) at 1", "Insert CastExpression(118) into ReturnStatement(119) at 0", "Insert SimpleType: IOException(122) into SingleVariableDeclaration(124) at 0", "Insert SimpleName: e(123) into SingleVariableDeclaration(124) at 1", "Insert ThrowStatement(129) into Block(130) at 0", "Insert SimpleType: SingleCFCQKeyValueComparisonFilter(110) into CastExpression(118) at 0", "Insert MethodInvocation(117) into CastExpression(118) at 1", "Insert SimpleName: IOException(121) into SimpleType: IOException(122) at 0", "Insert ClassInstanceCreation(128) into ThrowStatement(129) at 0", "Insert SimpleName: SingleCFCQKeyValueComparisonFilter(109) into SimpleType: SingleCFCQKeyValueComparisonFilter(110) at 0", "Insert SimpleName: Writables(111) into MethodInvocation(117) at 0", "Insert SimpleName: getWritable(112) into MethodInvocation(117) at 1", "Insert SimpleName: pbBytes(113) into MethodInvocation(117) at 2", "Insert ClassInstanceCreation(116) into MethodInvocation(117) at 3", "Insert SimpleType: DeserializationException(126) into ClassInstanceCreation(128) at 0", "Insert SimpleName: e(127) into ClassInstanceCreation(128) at 1", "Insert SimpleType: SingleCFCQKeyValueComparisonFilter(115) into ClassInstanceCreation(116) at 0", "Insert SimpleName: DeserializationException(125) into SimpleType: DeserializationException(126) at 0", "Insert SimpleName: SingleCFCQKeyValueComparisonFilter(114) into SimpleType: SingleCFCQKeyValueComparisonFilter(115) at 0"]}}, {"SingleCQKeyValueComparisonFilter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.io.IOException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: org.apache.hadoop.hbase.exceptions.DeserializationException to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.hadoop.hbase.util.Writables to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS SimpleType: DeserializationException to MethodDeclaration at 5", "INS CastExpression to ReturnStatement at 0", "INS ArrayType: byte[] to SingleVariableDeclaration at 1", "INS SimpleName: getWritable to MethodInvocation at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: SingleCQKeyValueComparisonFilter to SimpleType: SingleCQKeyValueComparisonFilter at 0", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: SingleCQKeyValueComparisonFilter to SimpleType: SingleCQKeyValueComparisonFilter at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS Modifier: static to MethodDeclaration at 1", "INS Block to TryStatement at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS TryStatement to Block at 0", "INS SimpleName: parseFrom to MethodDeclaration at 3", "INS Block to CatchClause at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS CatchClause to TryStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: SingleCQKeyValueComparisonFilter to CastExpression at 0", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS SimpleName: pbBytes to SingleVariableDeclaration at 2", "INS ReturnStatement to Block at 0", "INS SimpleType: SingleCQKeyValueComparisonFilter to ClassInstanceCreation at 0", "INS SimpleName: DeserializationException to SimpleType: DeserializationException at 0", "INS SimpleName: Writables to MethodInvocation at 0", "INS Block to MethodDeclaration at 6", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: DeserializationException to SimpleType: DeserializationException at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: e to ClassInstanceCreation at 1", "INS SimpleName: SingleCQKeyValueComparisonFilter to SimpleType: SingleCQKeyValueComparisonFilter at 0", "INS SimpleType: SingleCQKeyValueComparisonFilter to MethodDeclaration at 2", "INS SimpleType: DeserializationException to ClassInstanceCreation at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: pbBytes to MethodInvocation at 2"]}]}}, {"SingleCQKeyValueComparisonFilter_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(117) at 1", "Insert ImportDeclaration(5) into CompilationUnit(117) at 2", "Insert ImportDeclaration(9) into CompilationUnit(117) at 4", "Insert QualifiedName: java.io.IOException(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.exceptions.DeserializationException(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.util.Writables(8) into ImportDeclaration(9) at 0", "Insert MethodDeclaration(115) into TypeDeclaration: class(116) at 7", "Insert Modifier: public(77) into MethodDeclaration(115) at 0", "Insert Modifier: static(78) into MethodDeclaration(115) at 1", "Insert SimpleType: SingleCQKeyValueComparisonFilter(80) into MethodDeclaration(115) at 2", "Insert SimpleName: parseFrom(81) into MethodDeclaration(115) at 3", "Insert SingleVariableDeclaration(87) into MethodDeclaration(115) at 4", "Insert SimpleType: DeserializationException(89) into MethodDeclaration(115) at 5", "Insert Block(114) into MethodDeclaration(115) at 6", "Insert SimpleName: SingleCQKeyValueComparisonFilter(79) into SimpleType: SingleCQKeyValueComparisonFilter(80) at 0", "Insert Modifier: final(82) into SingleVariableDeclaration(87) at 0", "Insert ArrayType: byte[](85) into SingleVariableDeclaration(87) at 1", "Insert SimpleName: pbBytes(86) into SingleVariableDeclaration(87) at 2", "Insert SimpleName: DeserializationException(88) into SimpleType: DeserializationException(89) at 0", "Insert TryStatement(113) into Block(114) at 0", "Insert PrimitiveType: byte(83) into ArrayType: byte[](85) at 0", "Insert Dimension(84) into ArrayType: byte[](85) at 1", "Insert Block(101) into TryStatement(113) at 0", "Insert CatchClause(112) into TryStatement(113) at 1", "Insert ReturnStatement(100) into Block(101) at 0", "Insert SingleVariableDeclaration(105) into CatchClause(112) at 0", "Insert Block(111) into CatchClause(112) at 1", "Insert CastExpression(99) into ReturnStatement(100) at 0", "Insert SimpleType: IOException(103) into SingleVariableDeclaration(105) at 0", "Insert SimpleName: e(104) into SingleVariableDeclaration(105) at 1", "Insert ThrowStatement(110) into Block(111) at 0", "Insert SimpleType: SingleCQKeyValueComparisonFilter(91) into CastExpression(99) at 0", "Insert MethodInvocation(98) into CastExpression(99) at 1", "Insert SimpleName: IOException(102) into SimpleType: IOException(103) at 0", "Insert ClassInstanceCreation(109) into ThrowStatement(110) at 0", "Insert SimpleName: SingleCQKeyValueComparisonFilter(90) into SimpleType: SingleCQKeyValueComparisonFilter(91) at 0", "Insert SimpleName: Writables(92) into MethodInvocation(98) at 0", "Insert SimpleName: getWritable(93) into MethodInvocation(98) at 1", "Insert SimpleName: pbBytes(94) into MethodInvocation(98) at 2", "Insert ClassInstanceCreation(97) into MethodInvocation(98) at 3", "Insert SimpleType: DeserializationException(107) into ClassInstanceCreation(109) at 0", "Insert SimpleName: e(108) into ClassInstanceCreation(109) at 1", "Insert SimpleType: SingleCQKeyValueComparisonFilter(96) into ClassInstanceCreation(97) at 0", "Insert SimpleName: DeserializationException(106) into SimpleType: DeserializationException(107) at 0", "Insert SimpleName: SingleCQKeyValueComparisonFilter(95) into SimpleType: SingleCQKeyValueComparisonFilter(96) at 0"]}}, {"SingleKeyValueComparisonFilter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.hadoop.hbase.CellUtil to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.hadoop.hbase.KeyValueUtil to ImportDeclaration at 0"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: KeyValueUtil to MethodInvocation at 0", "INS SimpleName: ensureKeyValue to MethodInvocation at 1"]}, {"root": "UPDATE from getBuffer to getValueArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getValueArray"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: keyValue to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: KeyValueUtil to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: ensureKeyValue to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: keyValue to MethodInvocation at 2"]}]}}, {"SingleKeyValueComparisonFilter_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(360) at 3", "Insert ImportDeclaration(9) into CompilationUnit(360) at 4", "Insert ImportDeclaration(13) into CompilationUnit(360) at 6", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.CellUtil(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.KeyValueUtil(12) into ImportDeclaration(13) at 0", "Update SimpleType: KeyValue(175) to Cell", "Update SimpleName: KeyValue(174) to Cell", "Insert MethodInvocation(242) into MethodInvocation(243) at 2", "Update SimpleName: getBuffer(197) to getValueArray", "Insert SimpleName: KeyValueUtil(239) into MethodInvocation(242) at 0", "Insert SimpleName: ensureKeyValue(240) into MethodInvocation(242) at 1", "Move SimpleName: keyValue(230) into MethodInvocation(242) at 2", "Insert MethodInvocation(230) into MethodInvocation(231) at 2", "Insert SimpleName: KeyValueUtil(227) into MethodInvocation(230) at 0", "Insert SimpleName: ensureKeyValue(228) into MethodInvocation(230) at 1", "Move SimpleName: keyValue(221) into MethodInvocation(230) at 2"]}}, {"SkipScanFilter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: org.apache.hadoop.hbase.exceptions.DeserializationException to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.util.Writables to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 14"]}, {"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS QualifiedName: org.apache.hadoop.io.Writable to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 15"]}, {"root": "INS SimpleType: Writable to TypeDeclaration: class at 4", "operations": ["INS SimpleName: Writable to SimpleType: Writable at 0", "INS SimpleType: Writable to TypeDeclaration: class at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 37", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS ThisExpression to MethodInvocation at 2", "INS SimpleName: getBytes to MethodInvocation at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Writables to MethodInvocation at 0", "INS SimpleType: IOException to MethodDeclaration at 4", "INS Block to MethodDeclaration at 5", "INS ArrayType: byte[] to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 37", "INS SimpleName: toByteArray to MethodDeclaration at 3", "INS Dimension to ArrayType: byte[] at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 38", "operations": ["INS SimpleName: pbBytes to MethodInvocation at 2", "INS SimpleName: SkipScanFilter to SimpleType: SkipScanFilter at 0", "INS SimpleType: DeserializationException to MethodDeclaration at 5", "INS SimpleName: pbBytes to SingleVariableDeclaration at 2", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: parseFrom to MethodDeclaration at 3", "INS SimpleName: Writables to MethodInvocation at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS SimpleName: DeserializationException to SimpleType: DeserializationException at 0", "INS SimpleName: SkipScanFilter to SimpleType: SkipScanFilter at 0", "INS Block to MethodDeclaration at 6", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: SkipScanFilter to CastExpression at 0", "INS SimpleName: DeserializationException to SimpleType: DeserializationException at 0", "INS Block to TryStatement at 0", "INS TryStatement to Block at 0", "INS Block to CatchClause at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ClassInstanceCreation to ThrowStatement at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: e to ClassInstanceCreation at 1", "INS MethodInvocation to CastExpression at 1", "INS MethodDeclaration to TypeDeclaration: class at 38", "INS Modifier: public to MethodDeclaration at 0", "INS ThrowStatement to Block at 0", "INS ClassInstanceCreation to MethodInvocation at 3", "INS CastExpression to ReturnStatement at 0", "INS SimpleName: getWritable to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS SimpleType: DeserializationException to ClassInstanceCreation at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS Modifier: static to MethodDeclaration at 1", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS SimpleType: SkipScanFilter to MethodDeclaration at 2", "INS SimpleType: SkipScanFilter to ClassInstanceCreation at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS ArrayType: byte[] to SingleVariableDeclaration at 1", "INS SimpleName: SkipScanFilter to SimpleType: SkipScanFilter at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "UPDATE from getBuffer to getRowArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getRowArray"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL MarkerAnnotation", "DEL SimpleName: Override"]}]}}, {"SkipScanFilter_diff": {"operations": ["Insert ImportDeclaration(13) into CompilationUnit(2120) at 6", "Insert ImportDeclaration(21) into CompilationUnit(2120) at 10", "Insert ImportDeclaration(29) into CompilationUnit(2120) at 14", "Insert ImportDeclaration(31) into CompilationUnit(2120) at 15", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.exceptions.DeserializationException(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.util.Writables(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: org.apache.hadoop.io.Writable(30) into ImportDeclaration(31) at 0", "Insert SimpleType: Writable(67) into TypeDeclaration: class(2119) at 4", "Insert MethodDeclaration(1923) into TypeDeclaration: class(2119) at 37", "Insert MethodDeclaration(1962) into TypeDeclaration: class(2119) at 38", "Insert SimpleName: Writable(66) into SimpleType: Writable(67) at 0", "Move MarkerAnnotation(1849) into MethodDeclaration(1923) at 0", "Insert Modifier: public(1910) into MethodDeclaration(1923) at 1", "Insert ArrayType: byte[](1913) into MethodDeclaration(1923) at 2", "Insert SimpleName: toByteArray(1914) into MethodDeclaration(1923) at 3", "Insert SimpleType: IOException(1916) into MethodDeclaration(1923) at 4", "Insert Block(1922) into MethodDeclaration(1923) at 5", "Insert Modifier: public(1924) into MethodDeclaration(1962) at 0", "Insert Modifier: static(1925) into MethodDeclaration(1962) at 1", "Insert SimpleType: SkipScanFilter(1927) into MethodDeclaration(1962) at 2", "Insert SimpleName: parseFrom(1928) into MethodDeclaration(1962) at 3", "Insert SingleVariableDeclaration(1934) into MethodDeclaration(1962) at 4", "Insert SimpleType: DeserializationException(1936) into MethodDeclaration(1962) at 5", "Insert Block(1961) into MethodDeclaration(1962) at 6", "Update SimpleType: KeyValue(286) to Cell", "Insert PrimitiveType: byte(1911) into ArrayType: byte[](1913) at 0", "Insert Dimension(1912) into ArrayType: byte[](1913) at 1", "Insert SimpleName: IOException(1915) into SimpleType: IOException(1916) at 0", "Insert ReturnStatement(1921) into Block(1922) at 0", "Insert SimpleName: SkipScanFilter(1926) into SimpleType: SkipScanFilter(1927) at 0", "Insert Modifier: final(1929) into SingleVariableDeclaration(1934) at 0", "Insert ArrayType: byte[](1932) into SingleVariableDeclaration(1934) at 1", "Insert SimpleName: pbBytes(1933) into SingleVariableDeclaration(1934) at 2", "Insert SimpleName: DeserializationException(1935) into SimpleType: DeserializationException(1936) at 0", "Insert TryStatement(1960) into Block(1961) at 0", "Update SimpleName: KeyValue(285) to Cell", "Insert MethodInvocation(1920) into ReturnStatement(1921) at 0", "Insert PrimitiveType: byte(1930) into ArrayType: byte[](1932) at 0", "Insert Dimension(1931) into ArrayType: byte[](1932) at 1", "Insert Block(1948) into TryStatement(1960) at 0", "Insert CatchClause(1959) into TryStatement(1960) at 1", "Insert SimpleName: Writables(1917) into MethodInvocation(1920) at 0", "Insert SimpleName: getBytes(1918) into MethodInvocation(1920) at 1", "Insert ThisExpression(1919) into MethodInvocation(1920) at 2", "Insert ReturnStatement(1947) into Block(1948) at 0", "Insert SingleVariableDeclaration(1952) into CatchClause(1959) at 0", "Insert Block(1958) into CatchClause(1959) at 1", "Update SimpleName: getBuffer(291) to getRowArray", "Insert CastExpression(1946) into ReturnStatement(1947) at 0", "Insert SimpleType: IOException(1950) into SingleVariableDeclaration(1952) at 0", "Insert SimpleName: e(1951) into SingleVariableDeclaration(1952) at 1", "Insert ThrowStatement(1957) into Block(1958) at 0", "Insert SimpleType: SkipScanFilter(1938) into CastExpression(1946) at 0", "Insert MethodInvocation(1945) into CastExpression(1946) at 1", "Insert SimpleName: IOException(1949) into SimpleType: IOException(1950) at 0", "Insert ClassInstanceCreation(1956) into ThrowStatement(1957) at 0", "Insert SimpleName: SkipScanFilter(1937) into SimpleType: SkipScanFilter(1938) at 0", "Insert SimpleName: Writables(1939) into MethodInvocation(1945) at 0", "Insert SimpleName: getWritable(1940) into MethodInvocation(1945) at 1", "Insert SimpleName: pbBytes(1941) into MethodInvocation(1945) at 2", "Insert ClassInstanceCreation(1944) into MethodInvocation(1945) at 3", "Insert SimpleType: DeserializationException(1954) into ClassInstanceCreation(1956) at 0", "Insert SimpleName: e(1955) into ClassInstanceCreation(1956) at 1", "Insert SimpleType: SkipScanFilter(1943) into ClassInstanceCreation(1944) at 0", "Insert SimpleName: DeserializationException(1953) into SimpleType: DeserializationException(1954) at 0", "Insert SimpleName: SkipScanFilter(1942) into SimpleType: SkipScanFilter(1943) at 0", "Delete SimpleName: Override(1728)", "Delete MarkerAnnotation(1729)"]}}, {"IndexMaintainer_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 48", "MOV ImportDeclaration to CompilationUnit at 48", "MOV ImportDeclaration to CompilationUnit at 48", "MOV ImportDeclaration to CompilationUnit at 48", "MOV ImportDeclaration to CompilationUnit at 48", "MOV ImportDeclaration to CompilationUnit at 18", "MOV ImportDeclaration to CompilationUnit at 19", "MOV ImportDeclaration to CompilationUnit at 20"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: org.apache.hadoop.hbase.CellUtil to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS ImportDeclaration to CompilationUnit at 18", "INS QualifiedName: org.apache.hadoop.hbase.client.Durability to ImportDeclaration at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Delete to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from setWriteToWAL to setDurability", "operations": ["UPD SimpleName: setWriteToWAL from setWriteToWAL to setDurability", "UPD SimpleName: setWriteToWAL from setWriteToWAL to setDurability", "UPD SimpleName: setWriteToWAL from setWriteToWAL to setDurability", "UPD SimpleName: setWriteToWAL from setWriteToWAL to setDurability"]}, {"root": "INS ConditionalExpression to MethodInvocation at 2", "operations": ["INS QualifiedName: Durability.USE_DEFAULT to ConditionalExpression at 1", "INS ConditionalExpression to MethodInvocation at 2", "INS QualifiedName: Durability.SKIP_WAL to ConditionalExpression at 2"]}, {"root": "INS ConditionalExpression to MethodInvocation at 2", "operations": ["INS ConditionalExpression to MethodInvocation at 2", "INS QualifiedName: Durability.SKIP_WAL to ConditionalExpression at 2", "INS QualifiedName: Durability.USE_DEFAULT to ConditionalExpression at 1"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV PrefixExpression: ! to ConditionalExpression at 0"]}, {"root": "UPDATE from getType to getTypeByte", "operations": ["UPD SimpleName: getType from getType to getTypeByte", "UPD SimpleName: getType from getType to getTypeByte"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Delete to ClassInstanceCreation at 0"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV PrefixExpression: ! to ConditionalExpression at 0"]}, {"root": "UPDATE from kv to CellUtil", "operations": ["UPD SimpleName: kv from kv to CellUtil", "UPD SimpleName: kv from kv to CellUtil"]}, {"root": "UPDATE from getFamily to cloneFamily", "operations": ["UPD SimpleName: getFamily from getFamily to cloneFamily"]}, {"root": "INS SimpleName: kv to MethodInvocation at 2", "operations": ["INS SimpleName: kv to MethodInvocation at 2"]}, {"root": "UPDATE from getQualifier to cloneQualifier", "operations": ["UPD SimpleName: getQualifier from getQualifier to cloneQualifier"]}, {"root": "INS SimpleName: kv to MethodInvocation at 2", "operations": ["INS SimpleName: kv to MethodInvocation at 2"]}, {"root": "INS ConditionalExpression to MethodInvocation at 2", "operations": ["INS QualifiedName: Durability.USE_DEFAULT to ConditionalExpression at 1", "INS ConditionalExpression to MethodInvocation at 2", "INS QualifiedName: Durability.SKIP_WAL to ConditionalExpression at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS SimpleName: getFamilyOffset to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: kv to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 4", "operations": ["INS SimpleName: getFamilyLength to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: kv to MethodInvocation at 0"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 6", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 6"]}, {"root": "INS QualifiedName: dataEmptyKeyValueCF.length to MethodInvocation at 7", "operations": ["INS QualifiedName: dataEmptyKeyValueCF.length to MethodInvocation at 7"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV PrefixExpression: ! to ConditionalExpression at 0"]}, {"root": "UPDATE from getFamily to getFamilyArray", "operations": ["UPD SimpleName: getFamily from getFamily to getFamilyArray"]}, {"root": "UPDATE from getBuffer to getValueArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getValueArray"]}, {"root": "INS ConditionalExpression to MethodInvocation at 2", "operations": ["INS QualifiedName: Durability.SKIP_WAL to ConditionalExpression at 2", "INS ConditionalExpression to MethodInvocation at 2", "INS QualifiedName: Durability.USE_DEFAULT to ConditionalExpression at 1"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV PrefixExpression: ! to ConditionalExpression at 0"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}]}}, {"IndexMaintainer_diff": {"operations": ["Move ImportDeclaration(45) into CompilationUnit(3965) at 48", "Move ImportDeclaration(47) into CompilationUnit(3965) at 48", "Move ImportDeclaration(49) into CompilationUnit(3965) at 48", "Move ImportDeclaration(51) into CompilationUnit(3965) at 48", "Move ImportDeclaration(53) into CompilationUnit(3965) at 48", "Move ImportDeclaration(55) into CompilationUnit(3965) at 18", "Move ImportDeclaration(57) into CompilationUnit(3965) at 19", "Move ImportDeclaration(59) into CompilationUnit(3965) at 20", "Insert ImportDeclaration(29) into CompilationUnit(3965) at 14", "Insert ImportDeclaration(37) into CompilationUnit(3965) at 18", "Insert QualifiedName: org.apache.hadoop.hbase.CellUtil(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.client.Durability(36) into ImportDeclaration(37) at 0", "Move SimpleType: Delete(2257) into VariableDeclarationStatement(2282) at 0", "Update SimpleName: setWriteToWAL(1831) to setDurability", "Insert ConditionalExpression(1840) into MethodInvocation(1841) at 2", "Update SimpleName: setWriteToWAL(2265) to setDurability", "Insert ConditionalExpression(2289) into MethodInvocation(2290) at 2", "Move PrefixExpression: !(1833) into ConditionalExpression(1840) at 0", "Insert QualifiedName: Durability.USE_DEFAULT(1838) into ConditionalExpression(1840) at 1", "Insert QualifiedName: Durability.SKIP_WAL(1839) into ConditionalExpression(1840) at 2", "Update SimpleName: getType(2009) to getTypeByte", "Move SimpleType: Delete(2254) into ClassInstanceCreation(2280) at 0", "Move PrefixExpression: !(2267) into ConditionalExpression(2289) at 0", "Insert QualifiedName: Durability.USE_DEFAULT(2287) into ConditionalExpression(2289) at 1", "Insert QualifiedName: Durability.SKIP_WAL(2288) into ConditionalExpression(2289) at 2", "Update SimpleName: getType(2286) to getTypeByte", "Update SimpleName: kv(2096) to CellUtil", "Update SimpleName: getFamily(2097) to cloneFamily", "Insert SimpleName: kv(2116) into MethodInvocation(2117) at 2", "Update SimpleName: kv(2099) to CellUtil", "Update SimpleName: getQualifier(2100) to cloneQualifier", "Insert SimpleName: kv(2120) into MethodInvocation(2121) at 2", "Update SimpleName: setWriteToWAL(1905) to setDurability", "Insert ConditionalExpression(1917) into MethodInvocation(1918) at 2", "Insert MethodInvocation(2037) into MethodInvocation(2044) at 3", "Insert MethodInvocation(2040) into MethodInvocation(2044) at 4", "Insert NumberLiteral: 0(2042) into MethodInvocation(2044) at 6", "Insert QualifiedName: dataEmptyKeyValueCF.length(2043) into MethodInvocation(2044) at 7", "Move PrefixExpression: !(1907) into ConditionalExpression(1917) at 0", "Insert QualifiedName: Durability.USE_DEFAULT(1915) into ConditionalExpression(1917) at 1", "Insert QualifiedName: Durability.SKIP_WAL(1916) into ConditionalExpression(1917) at 2", "Update SimpleName: getFamily(2023) to getFamilyArray", "Insert SimpleName: kv(2035) into MethodInvocation(2037) at 0", "Insert SimpleName: getFamilyOffset(2036) into MethodInvocation(2037) at 1", "Insert SimpleName: kv(2038) into MethodInvocation(2040) at 0", "Insert SimpleName: getFamilyLength(2039) into MethodInvocation(2040) at 1", "Update SimpleName: getBuffer(2149) to getValueArray", "Update SimpleName: setWriteToWAL(2321) to setDurability", "Insert ConditionalExpression(2348) into MethodInvocation(2349) at 2", "Move PrefixExpression: !(2323) into ConditionalExpression(2348) at 0", "Insert QualifiedName: Durability.USE_DEFAULT(2346) into ConditionalExpression(2348) at 1", "Insert QualifiedName: Durability.SKIP_WAL(2347) into ConditionalExpression(2348) at 2", "Delete NullLiteral(2260)"]}}, {"PhoenixIndexBuilder_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "UPDATE from MiniBatchOperationInProgress<Pair<Mutation,Integer>> to MiniBatchOperationInProgress<Mutation>", "operations": ["UPD ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> from MiniBatchOperationInProgress<Pair<Mutation,Integer>> to MiniBatchOperationInProgress<Mutation>"]}, {"root": "MOVE from ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>", "operations": ["MOV SimpleType: Mutation to ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleType: Pair", "DEL SimpleName: Integer", "DEL SimpleName: Pair", "DEL SimpleType: Integer"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getFirst"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: setThreadReadPoint", "DEL SimpleName: MultiVersionConsistencyControl", "DEL MethodInvocation", "DEL SimpleName: getMvccReadPoint", "DEL MethodInvocation", "DEL SimpleName: scanner"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}]}}, {"PhoenixIndexBuilder_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(267) at 5", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(10) into ImportDeclaration(11) at 0", "Update ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>(61) to MiniBatchOperationInProgress<Mutation>", "Move SimpleType: Mutation(57) into ParameterizedType: MiniBatchOperationInProgress<Mutation>(58) at 1", "Move MethodInvocation(112) into VariableDeclarationFragment(110) at 1", "Update ParameterizedType: List<KeyValue>(212) to List<Cell>", "Update SimpleType: KeyValue(211) to Cell", "Update SimpleName: KeyValue(210) to Cell", "Delete SimpleName: Pair(54)", "Delete SimpleType: Pair(55)", "Delete SimpleName: Integer(58)", "Delete SimpleType: Integer(59)", "Delete ParameterizedType: Pair<Mutation,Integer>(60)", "Delete SimpleName: getFirst(113)", "Delete MethodInvocation(114)", "Delete SimpleName: MultiVersionConsistencyControl(193)", "Delete SimpleName: setThreadReadPoint(194)", "Delete SimpleName: scanner(195)", "Delete SimpleName: getMvccReadPoint(196)", "Delete MethodInvocation(197)", "Delete MethodInvocation(198)", "Delete ExpressionStatement(199)", "Delete NullLiteral(223)"]}}, {"PhoenixIndexFailurePolicy_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: java.util.Map to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: org.apache.hadoop.hbase.TableName to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.client.coprocessor.Batch to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 14"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS ImportDeclaration to CompilationUnit at 16", "INS QualifiedName: org.apache.hadoop.hbase.ipc.BlockingRpcCallback to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 17", "operations": ["INS ImportDeclaration to CompilationUnit at 17", "INS QualifiedName: org.apache.hadoop.hbase.ipc.ServerRpcController to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS ImportDeclaration to CompilationUnit at 18", "INS QualifiedName: org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutationProto to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 25", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.DropColumnRequest to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 25"]}, {"root": "INS ImportDeclaration to CompilationUnit at 26", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataResponse to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 26"]}, {"root": "INS ImportDeclaration to CompilationUnit at 27", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataService to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 27"]}, {"root": "INS ImportDeclaration to CompilationUnit at 28", "operations": ["INS ImportDeclaration to CompilationUnit at 28", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.UpdateIndexStateRequest to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 30", "operations": ["INS ImportDeclaration to CompilationUnit at 30", "INS QualifiedName: org.apache.phoenix.protobuf.ProtobufUtil to ImportDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 7"]}, {"root": "INS IfStatement to Block at 7", "operations": ["INS SimpleName: IOException to SimpleType: IOException at 0", "INS ThrowStatement to Block at 0", "INS Block to IfStatement at 1", "INS StringLiteral: \"Didn't get expected result size\" to ClassInstanceCreation at 1", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS SimpleType: IOException to ClassInstanceCreation at 0", "INS SimpleName: results to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS IfStatement to Block at 7"]}, {"root": "INS VariableDeclarationStatement to Block at 8", "operations": ["INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: iterator to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 8", "INS SimpleName: tmpResponse to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: results to MethodInvocation at 0", "INS SimpleType: MetaDataResponse to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: values to MethodInvocation at 1"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS ParameterizedType: Map<byte[],MetaDataResponse> to VariableDeclarationStatement at 1", "operations": ["INS SimpleType: MetaDataResponse to ParameterizedType: Map<byte[],MetaDataResponse> at 2", "INS SimpleName: Map to SimpleType: Map at 0", "INS ArrayType: byte[] to ParameterizedType: Map<byte[],MetaDataResponse> at 1", "INS ParameterizedType: Map<byte[],MetaDataResponse> to VariableDeclarationStatement at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleType: Map to ParameterizedType: Map<byte[],MetaDataResponse> at 0"]}, {"root": "UPDATE from mdProxy to results", "operations": ["UPD SimpleName: mdProxy from mdProxy to results"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: valueOf to MethodInvocation at 1", "INS SimpleName: TableName to MethodInvocation at 0"]}, {"root": "UPDATE from MetaDataProtocol to MetaDataResponse", "operations": ["UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataResponse"]}, {"root": "MOVE from SimpleType: MetaDataResponse", "operations": ["MOV SimpleName: MetaDataProtocol to SimpleType: MetaDataResponse at 0"]}, {"root": "UPDATE from coprocessorProxy to coprocessorService", "operations": ["UPD SimpleName: coprocessorProxy from coprocessorProxy to coprocessorService"]}, {"root": "INS SimpleName: indexTableKey to MethodInvocation at 4", "operations": ["INS SimpleName: indexTableKey to MethodInvocation at 4"]}, {"root": "INS ClassInstanceCreation to MethodInvocation at 5", "operations": ["INS ParameterizedType: Batch.Call<MetaDataService,MetaDataResponse> to ClassInstanceCreation at 0", "INS ParameterizedType: BlockingRpcCallback<MetaDataResponse> to ClassInstanceCreation at 0", "INS SimpleName: tableMetadata to EnhancedForStatement at 1", "INS EnhancedForStatement to Block at 3", "INS ReturnStatement to Block at 6", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 0", "INS QualifiedName: UpdateIndexStateRequest.Builder to SimpleType: UpdateIndexStateRequest.Builder at 0", "INS MethodInvocation to ReturnStatement at 0", "INS ExpressionStatement to Block at 4", "INS ExpressionStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ClassInstanceCreation to MethodInvocation at 5", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS QualifiedName: Batch.Call to SimpleType: Batch.Call at 0", "INS SimpleName: m to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: UpdateIndexStateRequest to MethodInvocation at 0", "INS SimpleName: controller to MethodInvocation at 0", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS SimpleName: toProto to MethodInvocation at 1", "INS SimpleName: MetaDataService to SimpleType: MetaDataService at 0", "INS SimpleName: rpcCallback to MethodInvocation at 0", "INS SimpleType: MutationProto to VariableDeclarationStatement at 0", "INS SimpleName: MutationProto to SimpleType: MutationProto at 0", "INS SimpleName: rpcCallback to MethodInvocation at 4", "INS SimpleName: instance to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: MetaDataService to ParameterizedType: Batch.Call<MetaDataService,MetaDataResponse> at 1", "INS SimpleName: controller to VariableDeclarationFragment at 0", "INS SimpleName: rpcCallback to VariableDeclarationFragment at 0", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS SimpleType: MetaDataService to SingleVariableDeclaration at 0", "INS SimpleType: Batch.Call to ParameterizedType: Batch.Call<MetaDataService,MetaDataResponse> at 0", "INS SimpleType: MetaDataResponse to MethodDeclaration at 2", "INS SimpleType: IOException to MethodDeclaration at 5", "INS Block to MethodDeclaration at 6", "INS Block to IfStatement at 1", "INS SimpleName: call to MethodDeclaration at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: addTableMetadataMutations to MethodInvocation at 1", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 0", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS SimpleName: m to SingleVariableDeclaration at 1", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS SimpleName: ProtobufUtil to MethodInvocation at 0", "INS SimpleName: mp to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: MetaDataResponse to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 1", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: controller to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS ThrowStatement to Block at 0", "INS SimpleType: MetaDataResponse to ParameterizedType: Batch.Call<MetaDataService,MetaDataResponse> at 2", "INS VariableDeclarationStatement to Block at 2", "INS SimpleType: UpdateIndexStateRequest.Builder to VariableDeclarationStatement at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleType: ServerRpcController to ClassInstanceCreation at 0", "INS SimpleName: updateIndexState to MethodInvocation at 1", "INS SimpleType: Mutation to SingleVariableDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: MetaDataService to SimpleType: MetaDataService at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: mp to VariableDeclarationFragment at 0", "INS SimpleName: instance to SingleVariableDeclaration at 1", "INS IfStatement to Block at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: controller to MethodInvocation at 2", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodInvocation to ThrowStatement at 0", "INS SimpleType: MetaDataResponse to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 1", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS InfixExpression: != to IfStatement at 0", "INS ParameterizedType: BlockingRpcCallback<MetaDataResponse> to VariableDeclarationStatement at 0", "INS SimpleType: ServerRpcController to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: toByteString to MethodInvocation at 1", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS Block to EnhancedForStatement at 2", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: build to MethodInvocation at 1"]}, {"root": "UPDATE from mdProxy to MetaDataMutationResult", "operations": ["UPD SimpleName: mdProxy from mdProxy to MetaDataMutationResult"]}, {"root": "UPDATE from updateIndexState to constructFromProto", "operations": ["UPD SimpleName: updateIndexState from updateIndexState to constructFromProto"]}, {"root": "UPDATE from tableMetadata to tmpResponse", "operations": ["UPD SimpleName: tableMetadata from tableMetadata to tmpResponse"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV QualifiedName: PhoenixDatabaseMetaData.TYPE_TABLE_NAME_BYTES to MethodInvocation at 2"]}, {"root": "UPDATE from MetaDataProtocol to MetaDataService", "operations": ["UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService"]}, {"root": "DEL SimpleType: MetaDataProtocol", "operations": ["DEL SimpleType: MetaDataProtocol"]}]}}, {"PhoenixIndexFailurePolicy_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(480) at 4", "Insert ImportDeclaration(21) into CompilationUnit(480) at 10", "Insert ImportDeclaration(29) into CompilationUnit(480) at 14", "Insert ImportDeclaration(33) into CompilationUnit(480) at 16", "Insert ImportDeclaration(35) into CompilationUnit(480) at 17", "Insert ImportDeclaration(37) into CompilationUnit(480) at 18", "Insert ImportDeclaration(51) into CompilationUnit(480) at 25", "Insert ImportDeclaration(53) into CompilationUnit(480) at 26", "Insert ImportDeclaration(55) into CompilationUnit(480) at 27", "Insert ImportDeclaration(57) into CompilationUnit(480) at 28", "Insert ImportDeclaration(61) into CompilationUnit(480) at 30", "Insert QualifiedName: java.util.Map(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.TableName(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.client.coprocessor.Batch(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.ipc.BlockingRpcCallback(32) into ImportDeclaration(33) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.ipc.ServerRpcController(34) into ImportDeclaration(35) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutationProto(36) into ImportDeclaration(37) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.DropColumnRequest(50) into ImportDeclaration(51) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataResponse(52) into ImportDeclaration(53) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataService(54) into ImportDeclaration(55) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.UpdateIndexStateRequest(56) into ImportDeclaration(57) at 0", "Insert QualifiedName: org.apache.phoenix.protobuf.ProtobufUtil(60) into ImportDeclaration(61) at 0", "Move VariableDeclarationStatement(201) into Block(440) at 7", "Insert IfStatement(377) into Block(440) at 7", "Insert VariableDeclarationStatement(389) into Block(440) at 8", "Insert Modifier: final(233) into VariableDeclarationStatement(247) at 0", "Insert Modifier: final(248) into VariableDeclarationStatement(367) at 0", "Insert ParameterizedType: Map<byte[],MetaDataResponse>(256) into VariableDeclarationStatement(367) at 1", "Insert MethodInvocation(370) into IfStatement(377) at 0", "Insert Block(376) into IfStatement(377) at 1", "Insert SimpleType: MetaDataResponse(379) into VariableDeclarationStatement(389) at 0", "Insert VariableDeclarationFragment(388) into VariableDeclarationStatement(389) at 1", "Insert SimpleType: Map(250) into ParameterizedType: Map<byte[],MetaDataResponse>(256) at 0", "Insert ArrayType: byte[](253) into ParameterizedType: Map<byte[],MetaDataResponse>(256) at 1", "Insert SimpleType: MetaDataResponse(255) into ParameterizedType: Map<byte[],MetaDataResponse>(256) at 2", "Update SimpleName: mdProxy(192) to results", "Insert SimpleName: results(368) into MethodInvocation(370) at 0", "Insert SimpleName: isEmpty(369) into MethodInvocation(370) at 1", "Insert ThrowStatement(375) into Block(376) at 0", "Insert SimpleName: MetaDataResponse(378) into SimpleType: MetaDataResponse(379) at 0", "Insert SimpleName: tmpResponse(380) into VariableDeclarationFragment(388) at 0", "Insert MethodInvocation(387) into VariableDeclarationFragment(388) at 1", "Insert MethodInvocation(211) into MethodInvocation(212) at 2", "Insert SimpleName: Map(249) into SimpleType: Map(250) at 0", "Insert PrimitiveType: byte(251) into ArrayType: byte[](253) at 0", "Insert Dimension(252) into ArrayType: byte[](253) at 1", "Update SimpleName: MetaDataProtocol(190) to MetaDataResponse", "Move SimpleName: MetaDataProtocol(190) into SimpleType: MetaDataResponse(255) at 0", "Update SimpleName: coprocessorProxy(194) to coprocessorService", "Insert SimpleName: indexTableKey(264) into MethodInvocation(365) at 4", "Insert ClassInstanceCreation(364) into MethodInvocation(365) at 5", "Insert ClassInstanceCreation(374) into ThrowStatement(375) at 0", "Insert MethodInvocation(385) into MethodInvocation(387) at 0", "Insert SimpleName: next(386) into MethodInvocation(387) at 1", "Update SimpleName: mdProxy(237) to MetaDataMutationResult", "Update SimpleName: updateIndexState(238) to constructFromProto", "Update SimpleName: tableMetadata(239) to tmpResponse", "Insert SimpleName: TableName(208) into MethodInvocation(211) at 0", "Insert SimpleName: valueOf(209) into MethodInvocation(211) at 1", "Move QualifiedName: PhoenixDatabaseMetaData.TYPE_TABLE_NAME_BYTES(186) into MethodInvocation(211) at 2", "Update SimpleType: MetaDataProtocol(196) to MetaDataService", "Insert ParameterizedType: Batch.Call<MetaDataService,MetaDataResponse>(271) into ClassInstanceCreation(364) at 0", "Insert AnonymousClassDeclaration(363) into ClassInstanceCreation(364) at 1", "Insert SimpleType: IOException(372) into ClassInstanceCreation(374) at 0", "Insert StringLiteral: \"Didn't get expected result size\"(373) into ClassInstanceCreation(374) at 1", "Insert MethodInvocation(383) into MethodInvocation(385) at 0", "Insert SimpleName: iterator(384) into MethodInvocation(385) at 1", "Update SimpleName: MetaDataProtocol(195) to MetaDataService", "Insert SimpleType: Batch.Call(266) into ParameterizedType: Batch.Call<MetaDataService,MetaDataResponse>(271) at 0", "Insert SimpleType: MetaDataService(268) into ParameterizedType: Batch.Call<MetaDataService,MetaDataResponse>(271) at 1", "Insert SimpleType: MetaDataResponse(270) into ParameterizedType: Batch.Call<MetaDataService,MetaDataResponse>(271) at 2", "Insert MethodDeclaration(362) into AnonymousClassDeclaration(363) at 0", "Insert SimpleName: IOException(371) into SimpleType: IOException(372) at 0", "Insert SimpleName: results(381) into MethodInvocation(383) at 0", "Insert SimpleName: values(382) into MethodInvocation(383) at 1", "Insert QualifiedName: Batch.Call(265) into SimpleType: Batch.Call(266) at 0", "Insert SimpleName: MetaDataService(267) into SimpleType: MetaDataService(268) at 0", "Insert SimpleName: MetaDataResponse(269) into SimpleType: MetaDataResponse(270) at 0", "Insert MarkerAnnotation(273) into MethodDeclaration(362) at 0", "Insert Modifier: public(274) into MethodDeclaration(362) at 1", "Insert SimpleType: MetaDataResponse(276) into MethodDeclaration(362) at 2", "Insert SimpleName: call(277) into MethodDeclaration(362) at 3", "Insert SingleVariableDeclaration(281) into MethodDeclaration(362) at 4", "Insert SimpleType: IOException(283) into MethodDeclaration(362) at 5", "Insert Block(361) into MethodDeclaration(362) at 6", "Insert SimpleName: Override(272) into MarkerAnnotation(273) at 0", "Insert SimpleName: MetaDataResponse(275) into SimpleType: MetaDataResponse(276) at 0", "Insert SimpleType: MetaDataService(279) into SingleVariableDeclaration(281) at 0", "Insert SimpleName: instance(280) into SingleVariableDeclaration(281) at 1", "Insert SimpleName: IOException(282) into SimpleType: IOException(283) at 0", "Insert VariableDeclarationStatement(291) into Block(361) at 0", "Insert VariableDeclarationStatement(305) into Block(361) at 1", "Insert VariableDeclarationStatement(313) into Block(361) at 2", "Insert EnhancedForStatement(336) into Block(361) at 3", "Insert ExpressionStatement(345) into Block(361) at 4", "Insert IfStatement(356) into Block(361) at 5", "Insert ReturnStatement(360) into Block(361) at 6", "Insert SimpleName: MetaDataService(278) into SimpleType: MetaDataService(279) at 0", "Insert SimpleType: ServerRpcController(285) into VariableDeclarationStatement(291) at 0", "Insert VariableDeclarationFragment(290) into VariableDeclarationStatement(291) at 1", "Insert ParameterizedType: BlockingRpcCallback<MetaDataResponse>(296) into VariableDeclarationStatement(305) at 0", "Insert VariableDeclarationFragment(304) into VariableDeclarationStatement(305) at 1", "Insert SimpleType: UpdateIndexStateRequest.Builder(307) into VariableDeclarationStatement(313) at 0", "Insert VariableDeclarationFragment(312) into VariableDeclarationStatement(313) at 1", "Insert SingleVariableDeclaration(317) into EnhancedForStatement(336) at 0", "Insert SimpleName: tableMetadata(318) into EnhancedForStatement(336) at 1", "Insert Block(335) into EnhancedForStatement(336) at 2", "Insert MethodInvocation(344) into ExpressionStatement(345) at 0", "Insert InfixExpression: !=(350) into IfStatement(356) at 0", "Insert Block(355) into IfStatement(356) at 1", "Insert MethodInvocation(359) into ReturnStatement(360) at 0", "Insert SimpleName: ServerRpcController(284) into SimpleType: ServerRpcController(285) at 0", "Insert SimpleName: controller(286) into VariableDeclarationFragment(290) at 0", "Insert ClassInstanceCreation(289) into VariableDeclarationFragment(290) at 1", "Insert SimpleType: BlockingRpcCallback(293) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(296) at 0", "Insert SimpleType: MetaDataResponse(295) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(296) at 1", "Insert SimpleName: rpcCallback(297) into VariableDeclarationFragment(304) at 0", "Insert ClassInstanceCreation(303) into VariableDeclarationFragment(304) at 1", "Insert QualifiedName: UpdateIndexStateRequest.Builder(306) into SimpleType: UpdateIndexStateRequest.Builder(307) at 0", "Insert SimpleName: builder(308) into VariableDeclarationFragment(312) at 0", "Insert MethodInvocation(311) into VariableDeclarationFragment(312) at 1", "Insert SimpleType: Mutation(315) into SingleVariableDeclaration(317) at 0", "Insert SimpleName: m(316) into SingleVariableDeclaration(317) at 1", "Insert VariableDeclarationStatement(327) into Block(335) at 0", "Insert ExpressionStatement(334) into Block(335) at 1", "Insert SimpleName: instance(337) into MethodInvocation(344) at 0", "Insert SimpleName: updateIndexState(338) into MethodInvocation(344) at 1", "Insert SimpleName: controller(339) into MethodInvocation(344) at 2", "Insert MethodInvocation(342) into MethodInvocation(344) at 3", "Insert SimpleName: rpcCallback(343) into MethodInvocation(344) at 4", "Insert MethodInvocation(348) into InfixExpression: !=(350) at 0", "Insert NullLiteral(349) into InfixExpression: !=(350) at 1", "Insert ThrowStatement(354) into Block(355) at 0", "Insert SimpleName: rpcCallback(357) into MethodInvocation(359) at 0", "Insert SimpleName: get(358) into MethodInvocation(359) at 1", "Insert SimpleType: ServerRpcController(288) into ClassInstanceCreation(289) at 0", "Insert SimpleName: BlockingRpcCallback(292) into SimpleType: BlockingRpcCallback(293) at 0", "Insert SimpleName: MetaDataResponse(294) into SimpleType: MetaDataResponse(295) at 0", "Insert ParameterizedType: BlockingRpcCallback<MetaDataResponse>(302) into ClassInstanceCreation(303) at 0", "Insert SimpleName: UpdateIndexStateRequest(309) into MethodInvocation(311) at 0", "Insert SimpleName: newBuilder(310) into MethodInvocation(311) at 1", "Insert SimpleName: Mutation(314) into SimpleType: Mutation(315) at 0", "Insert SimpleType: MutationProto(320) into VariableDeclarationStatement(327) at 0", "Insert VariableDeclarationFragment(326) into VariableDeclarationStatement(327) at 1", "Insert MethodInvocation(333) into ExpressionStatement(334) at 0", "Insert SimpleName: builder(340) into MethodInvocation(342) at 0", "Insert SimpleName: build(341) into MethodInvocation(342) at 1", "Insert SimpleName: controller(346) into MethodInvocation(348) at 0", "Insert SimpleName: getFailedOn(347) into MethodInvocation(348) at 1", "Insert MethodInvocation(353) into ThrowStatement(354) at 0", "Insert SimpleName: ServerRpcController(287) into SimpleType: ServerRpcController(288) at 0", "Insert SimpleType: BlockingRpcCallback(299) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(302) at 0", "Insert SimpleType: MetaDataResponse(301) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(302) at 1", "Insert SimpleName: MutationProto(319) into SimpleType: MutationProto(320) at 0", "Insert SimpleName: mp(321) into VariableDeclarationFragment(326) at 0", "Insert MethodInvocation(325) into VariableDeclarationFragment(326) at 1", "Insert SimpleName: builder(328) into MethodInvocation(333) at 0", "Insert SimpleName: addTableMetadataMutations(329) into MethodInvocation(333) at 1", "Insert MethodInvocation(332) into MethodInvocation(333) at 2", "Insert SimpleName: controller(351) into MethodInvocation(353) at 0", "Insert SimpleName: getFailedOn(352) into MethodInvocation(353) at 1", "Insert SimpleName: BlockingRpcCallback(298) into SimpleType: BlockingRpcCallback(299) at 0", "Insert SimpleName: MetaDataResponse(300) into SimpleType: MetaDataResponse(301) at 0", "Insert SimpleName: ProtobufUtil(322) into MethodInvocation(325) at 0", "Insert SimpleName: toProto(323) into MethodInvocation(325) at 1", "Insert SimpleName: m(324) into MethodInvocation(325) at 2", "Insert SimpleName: mp(330) into MethodInvocation(332) at 0", "Insert SimpleName: toByteString(331) into MethodInvocation(332) at 1", "Delete SimpleType: MetaDataProtocol(191)"]}}, {"MappedByteBufferSortedQueue_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS ImportDeclaration to CompilationUnit at 21", "INS QualifiedName: org.apache.phoenix.util.ResultUtil to ImportDeclaration at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 2", "MOV SimpleType: Result to VariableDeclarationStatement at 0"]}, {"root": "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "operations": ["INS SimpleName: toResult to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS SimpleName: ResultUtil to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: kvs to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS QualifiedName: org.apache.hadoop.hbase.KeyValueUtil to MethodInvocation at 0", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.KeyValueUtil to MethodInvocation at 0"]}, {"root": "UPDATE from kvs to ensureKeyValue", "operations": ["UPD SimpleName: kvs from kvs to ensureKeyValue"]}, {"root": "DEL SimpleName: add", "operations": ["DEL SimpleName: add"]}, {"root": "DEL SimpleType: Result", "operations": ["DEL SimpleName: Result", "DEL SimpleType: Result"]}, {"root": "DEL VariableDeclarationFragment", "operations": ["DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: result"]}]}}, {"MappedByteBufferSortedQueue_diff": {"operations": ["Insert ImportDeclaration(43) into CompilationUnit(1548) at 21", "Insert QualifiedName: org.apache.phoenix.util.ResultUtil(42) into ImportDeclaration(43) at 0", "Move SimpleType: Result(1319) into VariableDeclarationStatement(1331) at 0", "Insert VariableDeclarationFragment(1330) into VariableDeclarationStatement(1331) at 1", "Insert SimpleName: result(1322) into VariableDeclarationFragment(1330) at 0", "Insert MethodInvocation(1329) into VariableDeclarationFragment(1330) at 1", "Insert MethodInvocation(827) into ExpressionStatement(828) at 0", "Insert SimpleName: ResultUtil(1323) into MethodInvocation(1329) at 0", "Insert SimpleName: toResult(1324) into MethodInvocation(1329) at 1", "Move ClassInstanceCreation(1323) into MethodInvocation(1329) at 2", "Insert SimpleName: kvs(818) into MethodInvocation(827) at 0", "Insert SimpleName: add(819) into MethodInvocation(827) at 1", "Move MethodInvocation(822) into MethodInvocation(827) at 2", "Insert QualifiedName: org.apache.hadoop.hbase.KeyValueUtil(820) into MethodInvocation(826) at 0", "Update SimpleName: kvs(816) to ensureKeyValue", "Delete SimpleName: add(817)", "Delete SimpleName: Result(1315)", "Delete SimpleType: Result(1316)", "Delete SimpleName: result(1317)", "Delete ClassInstanceCreation(1324)", "Delete VariableDeclarationFragment(1325)"]}}, {"RegionScannerResultIterator_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "UPDATE from ArrayList<KeyValue> to ArrayList<Cell>", "operations": ["UPD ParameterizedType: ArrayList<KeyValue> from ArrayList<KeyValue> to ArrayList<Cell>"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: setThreadReadPoint", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: scanner", "DEL ExpressionStatement", "DEL SimpleName: getMvccReadPoint", "DEL SimpleName: MultiVersionConsistencyControl"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}]}}, {"RegionScannerResultIterator_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(120) at 5", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(10) into ImportDeclaration(11) at 0", "Update ParameterizedType: List<KeyValue>(66) to List<Cell>", "Update SimpleType: KeyValue(65) to Cell", "Update SimpleName: KeyValue(64) to Cell", "Update ParameterizedType: ArrayList<KeyValue>(72) to ArrayList<Cell>", "Update SimpleType: KeyValue(71) to Cell", "Update SimpleName: KeyValue(70) to Cell", "Delete SimpleName: MultiVersionConsistencyControl(45)", "Delete SimpleName: setThreadReadPoint(46)", "Delete SimpleName: scanner(47)", "Delete SimpleName: getMvccReadPoint(48)", "Delete MethodInvocation(49)", "Delete MethodInvocation(50)", "Delete ExpressionStatement(51)", "Delete NullLiteral(81)"]}}, {"SpoolingResultIterator_cluster": {"actions": [{"root": "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: ResultUtil to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: value to MethodInvocation at 2", "INS SimpleName: toResult to MethodInvocation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ResultTuple to ClassInstanceCreation at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: toResult to MethodInvocation at 1", "INS SimpleName: ResultUtil to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 2"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: value", "DEL SimpleType: Result", "DEL SimpleName: Result", "DEL ClassInstanceCreation"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: Result", "DEL SimpleName: Result"]}]}}, {"SpoolingResultIterator_diff": {"operations": ["Insert ClassInstanceCreation(573) into VariableDeclarationFragment(574) at 1", "Move SimpleType: ResultTuple(568) into ClassInstanceCreation(573) at 0", "Insert MethodInvocation(572) into ClassInstanceCreation(573) at 1", "Insert MethodInvocation(912) into ClassInstanceCreation(913) at 1", "Insert SimpleName: ResultUtil(569) into MethodInvocation(572) at 0", "Insert SimpleName: toResult(570) into MethodInvocation(572) at 1", "Insert SimpleName: value(571) into MethodInvocation(572) at 2", "Insert SimpleName: ResultUtil(904) into MethodInvocation(912) at 0", "Insert SimpleName: toResult(905) into MethodInvocation(912) at 1", "Move ClassInstanceCreation(911) into MethodInvocation(912) at 2", "Delete SimpleName: Result(569)", "Delete SimpleType: Result(570)", "Delete SimpleName: value(571)", "Delete ClassInstanceCreation(572)", "Delete ClassInstanceCreation(573)", "Delete SimpleName: Result(904)", "Delete SimpleType: Result(905)", "Delete ClassInstanceCreation(912)"]}}, {"JobManager_cluster": {"actions": [{"root": "INS Block to MethodDeclaration at 4", "operations": ["INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS Block to IfStatement at 2", "INS ThisExpression to FieldAccess at 0", "INS ThisExpression to Assignment: = at 1", "INS FieldAccess to Assignment: = at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: r to InstanceofExpression at 0", "INS InstanceofExpression to IfStatement at 0", "INS SimpleName: jobId to FieldAccess at 1"]}, {"root": "INS SimpleType: Runnable to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: Runnable to SingleVariableDeclaration at 0", "INS SimpleName: Runnable to SimpleType: Runnable at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV SuperConstructorInvocation to Block at 0"]}, {"root": "MOVE from InstanceofExpression", "operations": ["MOV SimpleType: JobRunnable to InstanceofExpression at 1"]}, {"root": "INS ParenthesizedExpression to MethodInvocation at 0", "operations": ["INS ParenthesizedExpression to MethodInvocation at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: r to CastExpression at 1"]}, {"root": "INS SimpleName: runnable to ClassInstanceCreation at 1", "operations": ["INS SimpleName: runnable to ClassInstanceCreation at 1"]}, {"root": "MOVE from CastExpression", "operations": ["MOV SimpleType: JobRunnable to CastExpression at 0"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleName: runnable", "DEL CastExpression"]}, {"root": "DEL SimpleName: r", "operations": ["DEL SimpleName: r"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"JobManager_diff": {"operations": ["Insert Block(290) into MethodDeclaration(291) at 4", "Insert SimpleType: Runnable(255) into SingleVariableDeclaration(257) at 0", "Move SuperConstructorInvocation(267) into Block(290) at 0", "Insert IfStatement(289) into Block(290) at 1", "Insert SimpleName: Runnable(254) into SimpleType: Runnable(255) at 0", "Insert InstanceofExpression(268) into IfStatement(289) at 0", "Insert Block(281) into IfStatement(289) at 1", "Insert Block(288) into IfStatement(289) at 2", "Insert SimpleName: r(265) into InstanceofExpression(268) at 0", "Move SimpleType: JobRunnable(209) into InstanceofExpression(268) at 1", "Move ExpressionStatement(275) into Block(281) at 0", "Insert ExpressionStatement(287) into Block(288) at 0", "Insert Assignment: =(286) into ExpressionStatement(287) at 0", "Insert FieldAccess(284) into Assignment: =(286) at 0", "Insert ThisExpression(285) into Assignment: =(286) at 1", "Insert ParenthesizedExpression(276) into MethodInvocation(278) at 0", "Insert ThisExpression(282) into FieldAccess(284) at 0", "Insert SimpleName: jobId(283) into FieldAccess(284) at 1", "Insert CastExpression(275) into ParenthesizedExpression(276) at 0", "Insert SimpleName: runnable(208) into ClassInstanceCreation(210) at 1", "Move SimpleType: JobRunnable(258) into CastExpression(275) at 0", "Insert SimpleName: r(274) into CastExpression(275) at 1", "Delete SimpleName: runnable(210)", "Delete CastExpression(211)", "Delete SimpleName: r(271)", "Delete Block(276)"]}}, {"HashCacheFactory_cluster": {"actions": [{"root": "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: toResult to MethodInvocation at 1", "INS SimpleName: value to MethodInvocation at 2", "INS MethodInvocation to ClassInstanceCreation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: ResultUtil to MethodInvocation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ResultTuple to ClassInstanceCreation at 0"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: value", "DEL ClassInstanceCreation", "DEL SimpleName: Result", "DEL SimpleType: Result", "DEL ClassInstanceCreation"]}]}}, {"HashCacheFactory_diff": {"operations": ["Insert ClassInstanceCreation(404) into VariableDeclarationFragment(405) at 1", "Move SimpleType: ResultTuple(399) into ClassInstanceCreation(404) at 0", "Insert MethodInvocation(403) into ClassInstanceCreation(404) at 1", "Insert SimpleName: ResultUtil(400) into MethodInvocation(403) at 0", "Insert SimpleName: toResult(401) into MethodInvocation(403) at 1", "Insert SimpleName: value(402) into MethodInvocation(403) at 2", "Delete SimpleName: Result(400)", "Delete SimpleType: Result(401)", "Delete SimpleName: value(402)", "Delete ClassInstanceCreation(403)", "Delete ClassInstanceCreation(404)"]}}, {"ScanProjector_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell"]}, {"root": "UPDATE from getBuffer to getRowArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getRowArray"]}]}}, {"ScanProjector_diff": {"operations": ["Insert ImportDeclaration(15) into CompilationUnit(1114) at 7", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(14) into ImportDeclaration(15) at 0", "Update SimpleType: KeyValue(827) to Cell", "Update SimpleName: KeyValue(826) to Cell", "Update SimpleName: getBuffer(838) to getRowArray"]}}, {"QueryOptimizer_cluster": {"actions": [{"root": "INS TextElement:  QueryPlan to TagElement: @return at 0", "operations": ["INS TextElement:  QueryPlan to TagElement: @return at 0"]}]}}, {"QueryOptimizer_diff": {"operations": ["Insert TextElement:  QueryPlan(911) into TagElement: @return(912) at 0"]}}, {"ConnectionQueryServicesImpl_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 25"]}, {"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.TableName to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 21"]}, {"root": "INS ImportDeclaration to CompilationUnit at 34", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.ipc.BlockingRpcCallback to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 34"]}, {"root": "INS ImportDeclaration to CompilationUnit at 35", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.ipc.ServerRpcController to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 35"]}, {"root": "INS ImportDeclaration to CompilationUnit at 36", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutationProto to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 36"]}, {"root": "INS ImportDeclaration to CompilationUnit at 53", "operations": ["INS ImportDeclaration to CompilationUnit at 53", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 54", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.AddColumnRequest to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 54"]}, {"root": "INS ImportDeclaration to CompilationUnit at 55", "operations": ["INS ImportDeclaration to CompilationUnit at 55", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.ClearCacheRequest to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 56", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.ClearCacheResponse to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 56"]}, {"root": "INS ImportDeclaration to CompilationUnit at 57", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.CreateTableRequest to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 57"]}, {"root": "INS ImportDeclaration to CompilationUnit at 58", "operations": ["INS ImportDeclaration to CompilationUnit at 58", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.DropColumnRequest to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 59", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.DropTableRequest to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 59"]}, {"root": "INS ImportDeclaration to CompilationUnit at 60", "operations": ["INS ImportDeclaration to CompilationUnit at 60", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.GetTableRequest to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 61", "operations": ["INS ImportDeclaration to CompilationUnit at 61", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.GetVersionRequest to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 62", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.GetVersionResponse to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 62"]}, {"root": "INS ImportDeclaration to CompilationUnit at 63", "operations": ["INS ImportDeclaration to CompilationUnit at 63", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataResponse to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 64", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataService to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 64"]}, {"root": "INS ImportDeclaration to CompilationUnit at 65", "operations": ["INS QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.UpdateIndexStateRequest to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 65"]}, {"root": "INS ImportDeclaration to CompilationUnit at 75", "operations": ["INS QualifiedName: org.apache.phoenix.protobuf.ProtobufUtil to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 75"]}, {"root": "INS ImportDeclaration to CompilationUnit at 100", "operations": ["INS ImportDeclaration to CompilationUnit at 100", "INS QualifiedName: com.google.protobuf.HBaseZeroCopyByteString to ImportDeclaration at 0"]}, {"root": "UPDATE from org.apache.hadoop.hbase.ZooKeeperConnectionException to org.apache.hadoop.hbase.client.HConnectionManager", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.ZooKeeperConnectionException from org.apache.hadoop.hbase.ZooKeeperConnectionException to org.apache.hadoop.hbase.client.HConnectionManager"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: MetaDataMutationResult to MethodDeclaration at 2", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleType: IOException to MethodDeclaration at 5"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS SimpleName: get to MethodInvocation at 1", "INS QualifiedName: HConstants.HBASE_MASTER_LOGCLEANER_PLUGINS to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: == at 0", "INS StringLiteral: \"org.apache.hadoop.hbase.master.cleaner.TimeToLiveLogCleaner\" to MethodInvocation at 3", "INS ThisExpression to FieldAccess at 0", "INS QualifiedName: HConstants.HBASE_MASTER_LOGCLEANER_PLUGINS to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: config to FieldAccess at 1", "INS SimpleName: config to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 0", "INS NullLiteral to InfixExpression: == at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: set to MethodInvocation at 1", "INS IfStatement to Block at 5"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS BooleanLiteral: false to MethodInvocation at 3", "INS SimpleName: config to FieldAccess at 1", "INS QualifiedName: HConstants.REPLICATION_ENABLE_KEY to MethodInvocation at 2", "INS ExpressionStatement to Block at 6", "INS SimpleName: setBoolean to MethodInvocation at 1", "INS FieldAccess to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from Batch.Call<MetaDataProtocol,MetaDataMutationResult> to Batch.Call<MetaDataService,MetaDataResponse>", "operations": ["UPD ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult> from Batch.Call<MetaDataProtocol,MetaDataMutationResult> to Batch.Call<MetaDataService,MetaDataResponse>", "UPD ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult> from Batch.Call<MetaDataProtocol,MetaDataMutationResult> to Batch.Call<MetaDataService,MetaDataResponse>", "UPD ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult> from Batch.Call<MetaDataProtocol,MetaDataMutationResult> to Batch.Call<MetaDataService,MetaDataResponse>", "UPD ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult> from Batch.Call<MetaDataProtocol,MetaDataMutationResult> to Batch.Call<MetaDataService,MetaDataResponse>", "UPD ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult> from Batch.Call<MetaDataProtocol,MetaDataMutationResult> to Batch.Call<MetaDataService,MetaDataResponse>", "UPD ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult> from Batch.Call<MetaDataProtocol,MetaDataMutationResult> to Batch.Call<MetaDataService,MetaDataResponse>", "UPD ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult> from Batch.Call<MetaDataProtocol,MetaDataMutationResult> to Batch.Call<MetaDataService,MetaDataResponse>"]}, {"root": "MOVE from Block", "operations": ["MOV TryStatement to Block at 0", "MOV IfStatement to Block at 1"]}, {"root": "UPDATE from MetaDataProtocol to MetaDataService", "operations": ["UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleName: MetaDataProtocol from MetaDataProtocol to MetaDataService", "UPD SimpleType: MetaDataProtocol from MetaDataProtocol to MetaDataService"]}, {"root": "UPDATE from MetaDataMutationResult to MetaDataResponse", "operations": ["UPD SimpleType: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleType: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleType: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleType: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleType: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleType: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleType: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleType: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleType: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleType: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleType: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleType: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleType: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleType: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse", "UPD SimpleName: MetaDataMutationResult from MetaDataMutationResult to MetaDataResponse"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: MetaDataMutationResult to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: MetaDataMutationResult to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: valueOf to MethodInvocation at 1", "INS SimpleName: TableName to MethodInvocation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 5", "operations": ["INS SimpleName: getTable to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: HTableInterface to SimpleType: HTableInterface at 0", "INS ThisExpression to MethodInvocation at 0", "INS SimpleType: HTableInterface to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: ht to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS QualifiedName: PhoenixDatabaseMetaData.TYPE_TABLE_NAME_BYTES to MethodInvocation at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 6", "operations": ["INS SimpleName: builder to VariableDeclarationFragment at 0", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<GetVersionResponse> at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: controller to VariableDeclarationFragment at 0", "INS NullLiteral to MethodInvocation at 3", "INS ThrowStatement to Block at 0", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS QualifiedName: GetVersionRequest.Builder to SimpleType: GetVersionRequest.Builder at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: controller to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS SimpleName: controller to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS SimpleName: rpcCallback to VariableDeclarationFragment at 0", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS ClassInstanceCreation to MethodInvocation at 5", "INS ReturnStatement to Block at 5", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS ParameterizedType: BlockingRpcCallback<GetVersionResponse> to VariableDeclarationStatement at 0", "INS ParameterizedType: BlockingRpcCallback<GetVersionResponse> to ClassInstanceCreation at 0", "INS IfStatement to Block at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to MethodDeclaration at 6", "INS MethodInvocation to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: rpcCallback to MethodInvocation at 0", "INS NullLiteral to MethodInvocation at 4", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getVersion to MethodInvocation at 1", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to ThrowStatement at 0", "INS SimpleType: GetVersionRequest.Builder to VariableDeclarationStatement at 0", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS SimpleType: GetVersionResponse to ParameterizedType: BlockingRpcCallback<GetVersionResponse> at 1", "INS SimpleName: GetVersionRequest to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS VariableDeclarationStatement to Block at 6", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: ServerRpcController to VariableDeclarationStatement at 0", "INS SimpleType: ServerRpcController to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: tableName to MethodInvocation at 2"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: TreeMap<byte[],Long> to VariableDeclarationStatement at 1", "MOV Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from TreeMap<byte[],Long> to Map<byte[],Long>", "operations": ["UPD ParameterizedType: TreeMap<byte[],Long> from TreeMap<byte[],Long> to Map<byte[],Long>"]}, {"root": "UPDATE from ZooKeeperConnectionException to IOException", "operations": ["UPD SimpleType: ZooKeeperConnectionException from ZooKeeperConnectionException to IOException", "UPD SimpleName: ZooKeeperConnectionException from ZooKeeperConnectionException to IOException"]}, {"root": "UPDATE from e to ioe", "operations": ["UPD SimpleName: e from e to ioe", "UPD SimpleName: e from e to ioe"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS SimpleName: TableName to MethodInvocation at 0", "INS SimpleName: tableName to MethodInvocation at 2", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: valueOf to MethodInvocation at 1"]}, {"root": "UPDATE from TreeMap to Map", "operations": ["UPD SimpleType: TreeMap from TreeMap to Map", "UPD SimpleName: TreeMap from TreeMap to Map"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: call to MethodDeclaration at 3", "MOV Modifier: public to MethodDeclaration at 1", "MOV SimpleType: Long to ParameterizedType: TreeMap<byte[],Long> at 2", "MOV SimpleType: IOException to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: results to VariableDeclarationFragment at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: retried to IfStatement at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS VariableDeclarationStatement to Block at 3"]}, {"root": "MOVE from ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult>", "operations": ["MOV SimpleType: Batch.Call to ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult> at 0"]}, {"root": "UPDATE from connection to ht", "operations": ["UPD SimpleName: connection from connection to ht", "UPD SimpleName: connection from connection to ht"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV TypeLiteral to MethodInvocation at 2", "MOV SimpleName: processExecs to MethodInvocation at 1", "MOV SimpleName: connection to MethodInvocation at 0"]}, {"root": "UPDATE from coprocessorExec to coprocessorService", "operations": ["UPD SimpleName: coprocessorExec from coprocessorExec to coprocessorService", "UPD SimpleName: processExecs from processExecs to coprocessorService", "UPD SimpleName: processExecs from processExecs to coprocessorService"]}, {"root": "INS SimpleType: HTableInterface to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: HTableInterface to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV Modifier: final to VariableDeclarationStatement at 0", "MOV ParameterizedType: Map<byte[],MetaDataMutationResult> to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from Map<byte[],MetaDataMutationResult> to Map<byte[],MetaDataResponse>", "operations": ["UPD ParameterizedType: Map<byte[],MetaDataMutationResult> from Map<byte[],MetaDataMutationResult> to Map<byte[],MetaDataResponse>"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: constructFromProto to MethodInvocation at 1", "INS SimpleName: MetaDataMutationResult to MethodInvocation at 0", "INS SimpleName: result to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult>", "operations": ["MOV SimpleType: Batch.Call to ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult> at 0"]}, {"root": "MOVE from ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult>", "operations": ["MOV SimpleType: Batch.Call to ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult> at 0"]}, {"root": "UPDATE from getHConnectionFactory to HConnectionManager", "operations": ["UPD SimpleName: getHConnectionFactory from getHConnectionFactory to HConnectionManager"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getHConnectionFactory to MethodInvocation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleType: IOException to MethodDeclaration at 6"]}, {"root": "UPDATE from Batch.Call<MetaDataProtocol,Long> to Batch.Call<MetaDataService,Long>", "operations": ["UPD ParameterizedType: Batch.Call<MetaDataProtocol,Long> from Batch.Call<MetaDataProtocol,Long> to Batch.Call<MetaDataService,Long>"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ParameterizedType: Batch.Call<MetaDataProtocol,Long> to ClassInstanceCreation at 0"]}, {"root": "UPDATE from List to HTableInterface", "operations": ["UPD SimpleName: List from List to HTableInterface"]}, {"root": "MOVE from SimpleType: HTableInterface", "operations": ["MOV SimpleName: List to SimpleType: HTableInterface at 0"]}, {"root": "INS SimpleName: ht to VariableDeclarationFragment at 0", "operations": ["INS SimpleName: ht to VariableDeclarationFragment at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS QualifiedName: PhoenixDatabaseMetaData.TYPE_TABLE_NAME_BYTES to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ThisExpression to MethodInvocation at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: results to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from MutationCode.TABLE_NOT_IN_REGION to MetaDataProtos.MutationCode.TABLE_NOT_IN_REGION", "operations": ["UPD QualifiedName: MutationCode.TABLE_NOT_IN_REGION from MutationCode.TABLE_NOT_IN_REGION to MetaDataProtos.MutationCode.TABLE_NOT_IN_REGION"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS SimpleName: controller to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS VariableDeclarationStatement to Block at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: ServerRpcController to VariableDeclarationStatement at 0", "INS SimpleType: ServerRpcController to ClassInstanceCreation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 0", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS ParameterizedType: BlockingRpcCallback<MetaDataResponse> to VariableDeclarationStatement at 0", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS SimpleType: MetaDataResponse to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 0", "INS SimpleName: rpcCallback to VariableDeclarationFragment at 0", "INS SimpleType: MetaDataResponse to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 1", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS ParameterizedType: BlockingRpcCallback<MetaDataResponse> to ClassInstanceCreation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: builder to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: GetTableRequest.Builder to SimpleType: GetTableRequest.Builder at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 2", "INS SimpleType: GetTableRequest.Builder to VariableDeclarationStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: setTenantId to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: HBaseZeroCopyByteString to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: wrap to MethodInvocation at 1", "INS ExpressionStatement to Block at 3"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: wrap to MethodInvocation at 1", "INS SimpleName: HBaseZeroCopyByteString to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: setSchemaName to MethodInvocation at 1", "INS ExpressionStatement to Block at 4"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: wrap to MethodInvocation at 1", "INS ExpressionStatement to Block at 5", "INS SimpleName: setTableName to MethodInvocation at 1", "INS SimpleName: HBaseZeroCopyByteString to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS SimpleName: setTableTimestamp to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS ExpressionStatement to Block at 6"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS SimpleName: builder to MethodInvocation at 0", "INS ExpressionStatement to Block at 7", "INS SimpleName: setClientTimestamp to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 8", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS ExpressionStatement to Block at 8", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: controller to MethodInvocation at 2", "INS SimpleName: getTable to MethodInvocation at 1", "INS SimpleName: instance to MethodInvocation at 0", "INS SimpleName: rpcCallback to MethodInvocation at 4", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 9", "operations": ["INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to ThrowStatement at 0", "INS SimpleName: controller to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: controller to MethodInvocation at 0", "INS IfStatement to Block at 9", "INS ThrowStatement to Block at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: getFailedOn to MethodInvocation at 1"]}, {"root": "INS ReturnStatement to Block at 10", "operations": ["INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 10", "INS SimpleName: rpcCallback to MethodInvocation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 5", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS SimpleType: MetaDataResponse to MethodDeclaration at 2", "operations": ["INS SimpleType: MetaDataResponse to MethodDeclaration at 2", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS ReturnStatement to Block at 6", "INS SimpleType: DropColumnRequest.Builder to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS SimpleName: m to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: tableMetaData to EnhancedForStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to MethodDeclaration at 6", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS Block to IfStatement at 1", "INS SimpleName: controller to VariableDeclarationFragment at 0", "INS SimpleType: MetaDataResponse to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 1", "INS SimpleName: m to SingleVariableDeclaration at 1", "INS SimpleType: ServerRpcController to VariableDeclarationStatement at 0", "INS ParameterizedType: BlockingRpcCallback<MetaDataResponse> to ClassInstanceCreation at 0", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS SimpleName: toProto to MethodInvocation at 1", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: DropColumnRequest to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: addTableMetadataMutations to MethodInvocation at 1", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS ParameterizedType: BlockingRpcCallback<MetaDataResponse> to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: controller to MethodInvocation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 4", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS EnhancedForStatement to Block at 3", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleType: ServerRpcController to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: rpcCallback to MethodInvocation at 0", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: rpcCallback to MethodInvocation at 4", "INS SimpleType: MutationProto to VariableDeclarationStatement at 0", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 0", "INS SimpleName: rpcCallback to VariableDeclarationFragment at 0", "INS SimpleType: MetaDataResponse to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 1", "INS SimpleType: Mutation to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: ProtobufUtil to MethodInvocation at 0", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS SimpleName: MutationProto to SimpleType: MutationProto at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: mp to MethodInvocation at 0", "INS MethodInvocation to ThrowStatement at 0", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS IfStatement to Block at 5", "INS SimpleName: controller to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS SimpleName: toByteString to MethodInvocation at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS Block to EnhancedForStatement at 2", "INS QualifiedName: DropColumnRequest.Builder to SimpleType: DropColumnRequest.Builder at 0", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: mp to VariableDeclarationFragment at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: newBuilder to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: ServerRpcController to VariableDeclarationStatement at 0", "INS SimpleType: ServerRpcController to ClassInstanceCreation at 0", "INS SimpleName: controller to VariableDeclarationFragment at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleType: MetaDataResponse to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 1", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 0", "INS SimpleType: MetaDataResponse to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: rpcCallback to VariableDeclarationFragment at 0", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS ParameterizedType: BlockingRpcCallback<MetaDataResponse> to ClassInstanceCreation at 0", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 0", "INS VariableDeclarationStatement to Block at 1", "INS ParameterizedType: BlockingRpcCallback<MetaDataResponse> to VariableDeclarationStatement at 0", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleType: UpdateIndexStateRequest.Builder to VariableDeclarationStatement at 0", "INS QualifiedName: UpdateIndexStateRequest.Builder to SimpleType: UpdateIndexStateRequest.Builder at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: UpdateIndexStateRequest to MethodInvocation at 0", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: builder to VariableDeclarationFragment at 0"]}, {"root": "INS EnhancedForStatement to Block at 3", "operations": ["INS SimpleName: ProtobufUtil to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: m to MethodInvocation at 2", "INS SimpleType: Mutation to SingleVariableDeclaration at 0", "INS SimpleName: mp to VariableDeclarationFragment at 0", "INS SimpleName: tableMetaData to EnhancedForStatement at 1", "INS EnhancedForStatement to Block at 3", "INS SimpleName: addTableMetadataMutations to MethodInvocation at 1", "INS SimpleName: mp to MethodInvocation at 0", "INS SimpleName: MutationProto to SimpleType: MutationProto at 0", "INS SimpleName: toProto to MethodInvocation at 1", "INS SimpleName: m to SingleVariableDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: toByteString to MethodInvocation at 1", "INS Block to EnhancedForStatement at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS SimpleType: MutationProto to VariableDeclarationStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS SimpleName: build to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: rpcCallback to MethodInvocation at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS Block to IfStatement at 1", "INS MethodInvocation to ThrowStatement at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS SimpleName: controller to MethodInvocation at 0", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS IfStatement to Block at 5", "INS MethodInvocation to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: controller to MethodInvocation at 0"]}, {"root": "INS ReturnStatement to Block at 6", "operations": ["INS ReturnStatement to Block at 6", "INS SimpleName: rpcCallback to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: get to MethodInvocation at 1"]}, {"root": "UPDATE from getStartKey to getTable", "operations": ["UPD SimpleName: getStartKey from getStartKey to getTable"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getStartKey to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: callable to MethodInvocation at 5", "MOV SimpleName: processExecs to MethodInvocation at 1", "MOV TypeLiteral to MethodInvocation at 2", "MOV SimpleName: regionKeys to MethodInvocation at 3", "MOV SimpleName: connection to MethodInvocation at 0"]}, {"root": "UPDATE from regionKeys to tableKey", "operations": ["UPD SimpleName: regionKeys from regionKeys to tableKey", "UPD SimpleName: getDelegate from getDelegate to tableKey"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getDelegate to MethodInvocation at 4"]}, {"root": "UPDATE from getMutationCode to getReturnCode", "operations": ["UPD SimpleName: getMutationCode from getMutationCode to getReturnCode"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: ServerRpcController to ClassInstanceCreation at 0", "INS SimpleName: controller to VariableDeclarationFragment at 0", "INS SimpleType: ServerRpcController to VariableDeclarationStatement at 0", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleType: MetaDataResponse to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 1", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS SimpleType: MetaDataResponse to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 1", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ParameterizedType: BlockingRpcCallback<MetaDataResponse> to VariableDeclarationStatement at 0", "INS ParameterizedType: BlockingRpcCallback<MetaDataResponse> to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: rpcCallback to VariableDeclarationFragment at 0", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 0", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleType: CreateTableRequest.Builder to VariableDeclarationStatement at 0", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: CreateTableRequest.Builder to SimpleType: CreateTableRequest.Builder at 0", "INS SimpleName: CreateTableRequest to MethodInvocation at 0"]}, {"root": "INS EnhancedForStatement to Block at 3", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleName: m to SingleVariableDeclaration at 1", "INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS SimpleName: toByteString to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: ProtobufUtil to MethodInvocation at 0", "INS SimpleName: tableMetaData to EnhancedForStatement at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: toProto to MethodInvocation at 1", "INS SimpleName: addTableMetadataMutations to MethodInvocation at 1", "INS SimpleName: mp to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: MutationProto to VariableDeclarationStatement at 0", "INS SimpleName: m to MethodInvocation at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleType: Mutation to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: mp to MethodInvocation at 0", "INS EnhancedForStatement to Block at 3", "INS SimpleName: MutationProto to SimpleType: MutationProto at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: build to MethodInvocation at 1", "INS ExpressionStatement to Block at 4", "INS SimpleName: rpcCallback to MethodInvocation at 4", "INS SimpleName: builder to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS ThrowStatement to Block at 0", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS IfStatement to Block at 5", "INS MethodInvocation to ThrowStatement at 0", "INS SimpleName: controller to MethodInvocation at 0", "INS SimpleName: controller to MethodInvocation at 0", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS InfixExpression: != to IfStatement at 0"]}, {"root": "INS ReturnStatement to Block at 6", "operations": ["INS ReturnStatement to Block at 6", "INS SimpleName: rpcCallback to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleType: ServerRpcController to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: controller to VariableDeclarationFragment at 0", "INS SimpleType: ServerRpcController to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: rpcCallback to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS ParameterizedType: BlockingRpcCallback<MetaDataResponse> to ClassInstanceCreation at 0", "INS SimpleType: MetaDataResponse to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 1", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 0", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 0", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS ParameterizedType: BlockingRpcCallback<MetaDataResponse> to VariableDeclarationStatement at 0", "INS SimpleType: MetaDataResponse to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: newBuilder to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: DropTableRequest to MethodInvocation at 0", "INS SimpleType: DropTableRequest.Builder to VariableDeclarationStatement at 0", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 2", "INS QualifiedName: DropTableRequest.Builder to SimpleType: DropTableRequest.Builder at 0"]}, {"root": "INS EnhancedForStatement to Block at 3", "operations": ["INS SimpleName: toByteString to MethodInvocation at 1", "INS SimpleName: m to SingleVariableDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: MutationProto to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: m to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Mutation to SingleVariableDeclaration at 0", "INS SimpleName: mp to VariableDeclarationFragment at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: addTableMetadataMutations to MethodInvocation at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: tableMetaData to EnhancedForStatement at 1", "INS SimpleName: mp to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: toProto to MethodInvocation at 1", "INS EnhancedForStatement to Block at 3", "INS ExpressionStatement to Block at 1", "INS SimpleName: MutationProto to SimpleType: MutationProto at 0", "INS SimpleName: ProtobufUtil to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setTableType to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS ExpressionStatement to Block at 4"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS SimpleName: rpcCallback to MethodInvocation at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS ExpressionStatement to Block at 5", "INS SimpleName: build to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS MethodInvocation to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS MethodInvocation to ThrowStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: controller to MethodInvocation at 0", "INS InfixExpression: != to IfStatement at 0", "INS IfStatement to Block at 6", "INS SimpleName: controller to MethodInvocation at 0"]}, {"root": "INS ReturnStatement to Block at 7", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: get to MethodInvocation at 1", "INS ReturnStatement to Block at 7", "INS SimpleName: rpcCallback to MethodInvocation at 0"]}, {"root": "INS SimpleName: IOException to SimpleType: IOException at 0", "operations": ["INS SimpleName: IOException to SimpleType: IOException at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS SimpleType: ServerRpcController to ClassInstanceCreation at 0", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS SimpleName: controller to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: ServerRpcController to VariableDeclarationStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 0", "INS ParameterizedType: BlockingRpcCallback<MetaDataResponse> to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: rpcCallback to VariableDeclarationFragment at 0", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 0", "INS SimpleType: MetaDataResponse to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 1", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS SimpleName: MetaDataResponse to SimpleType: MetaDataResponse at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS SimpleType: MetaDataResponse to ParameterizedType: BlockingRpcCallback<MetaDataResponse> at 1", "INS ParameterizedType: BlockingRpcCallback<MetaDataResponse> to ClassInstanceCreation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS QualifiedName: AddColumnRequest.Builder to SimpleType: AddColumnRequest.Builder at 0", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: AddColumnRequest to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: AddColumnRequest.Builder to VariableDeclarationStatement at 0"]}, {"root": "INS EnhancedForStatement to Block at 3", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: mp to MethodInvocation at 0", "INS SimpleName: ProtobufUtil to MethodInvocation at 0", "INS SimpleName: toByteString to MethodInvocation at 1", "INS SimpleType: MutationProto to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Mutation to SimpleType: Mutation at 0", "INS SimpleName: MutationProto to SimpleType: MutationProto at 0", "INS EnhancedForStatement to Block at 3", "INS SimpleName: m to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: mp to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: toProto to MethodInvocation at 1", "INS SimpleName: m to MethodInvocation at 2", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: tableMetaData to EnhancedForStatement at 1", "INS SimpleType: Mutation to SingleVariableDeclaration at 0", "INS SimpleName: addTableMetadataMutations to MethodInvocation at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS Block to EnhancedForStatement at 2", "INS VariableDeclarationStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: rpcCallback to MethodInvocation at 4"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS IfStatement to Block at 5", "INS ThrowStatement to Block at 0", "INS MethodInvocation to ThrowStatement at 0", "INS SimpleName: controller to MethodInvocation at 0", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS SimpleName: controller to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: getFailedOn to MethodInvocation at 1"]}, {"root": "INS ReturnStatement to Block at 6", "operations": ["INS SimpleName: rpcCallback to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS ReturnStatement to Block at 6", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "UPDATE from Batch.Call<MetaDataProtocol,Void> to Batch.Call<MetaDataService,ClearCacheResponse>", "operations": ["UPD ParameterizedType: Batch.Call<MetaDataProtocol,Void> from Batch.Call<MetaDataProtocol,Void> to Batch.Call<MetaDataService,ClearCacheResponse>"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Long to MethodDeclaration at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: relocateRegion to MethodInvocation at 1", "MOV SimpleName: connection to MethodInvocation at 0", "MOV SimpleName: tableKey to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: connection to MethodInvocation at 1", "MOV QualifiedName: PhoenixDatabaseMetaData.TYPE_TABLE_NAME_BYTES to MethodInvocation at 2", "MOV SimpleName: tableKey to MethodInvocation at 3"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: result to MethodInvocation at 2", "INS SimpleName: MetaDataMutationResult to MethodInvocation at 0", "INS SimpleName: constructFromProto to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: tableBytes to MethodInvocation at 2", "MOV SimpleName: getTable to MethodInvocation at 0", "MOV SimpleName: schemaBytes to MethodInvocation at 2", "MOV SimpleName: clientTimestamp to MethodInvocation at 2", "MOV SimpleName: tableTimestamp to MethodInvocation at 2", "MOV SimpleName: nonNullTenantId to MethodInvocation at 2"]}, {"root": "MOVE from ParameterizedType: Batch.Call<MetaDataProtocol,Void>", "operations": ["MOV SimpleType: Batch.Call to ParameterizedType: Batch.Call<MetaDataProtocol,Void> at 0"]}, {"root": "UPDATE from Void to ClearCacheResponse", "operations": ["UPD SimpleType: Void from Void to ClearCacheResponse", "UPD SimpleType: Void from Void to ClearCacheResponse", "UPD SimpleName: Void from Void to ClearCacheResponse", "UPD SimpleName: Void from Void to ClearCacheResponse"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: updateIndexState to MethodInvocation at 1", "MOV SimpleName: instance to MethodInvocation at 0", "MOV SimpleName: tableMetaData to MethodInvocation at 2"]}, {"root": "UPDATE from tableMetaData to controller", "operations": ["UPD SimpleName: tableMetaData from tableMetaData to controller", "UPD SimpleName: tableMetaData from tableMetaData to controller", "UPD SimpleName: tableMetaData from tableMetaData to controller", "UPD SimpleName: tableMetaData from tableMetaData to controller", "UPD SimpleName: region from region to controller", "UPD SimpleName: tableMetaData from tableMetaData to controller"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: valueOf to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: TableName to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "UPDATE from tableKey to TableName", "operations": ["UPD SimpleName: tableKey from tableKey to TableName"]}, {"root": "UPDATE from connection to valueOf", "operations": ["UPD SimpleName: connection from connection to valueOf"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: createTable to MethodInvocation at 1", "MOV SimpleName: instance to MethodInvocation at 0", "MOV SimpleName: tableMetaData to MethodInvocation at 2"]}, {"root": "UPDATE from getTable to GetTableRequest", "operations": ["UPD SimpleName: getTable from getTable to GetTableRequest"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: dropTable to MethodInvocation at 1", "MOV SimpleName: tableMetaData to MethodInvocation at 2", "MOV SimpleName: instance to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: instance to MethodInvocation at 0", "MOV SimpleName: tableMetaData to MethodInvocation at 2", "MOV SimpleName: addColumn to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: tableMetaData to MethodInvocation at 2", "MOV SimpleName: instance to MethodInvocation at 0", "MOV SimpleName: dropColumn to MethodInvocation at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 5", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: tableName to MethodInvocation at 2"]}, {"root": "UPDATE from IOException to Mutation", "operations": ["UPD SimpleName: IOException from IOException to Mutation"]}, {"root": "MOVE from SimpleType: Mutation", "operations": ["MOV SimpleName: IOException to SimpleType: Mutation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: controller to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0", "INS SimpleType: ServerRpcController to VariableDeclarationStatement at 0", "INS SimpleType: ServerRpcController to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: ServerRpcController to SimpleType: ServerRpcController at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS ParameterizedType: BlockingRpcCallback<ClearCacheResponse> to VariableDeclarationStatement at 0", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: ClearCacheResponse to ParameterizedType: BlockingRpcCallback<ClearCacheResponse> at 1", "INS SimpleName: ClearCacheResponse to SimpleType: ClearCacheResponse at 0", "INS SimpleName: ClearCacheResponse to SimpleType: ClearCacheResponse at 0", "INS ParameterizedType: BlockingRpcCallback<ClearCacheResponse> to ClassInstanceCreation at 0", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<ClearCacheResponse> at 0", "INS SimpleName: rpcCallback to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: ClearCacheResponse to ParameterizedType: BlockingRpcCallback<ClearCacheResponse> at 1", "INS SimpleType: BlockingRpcCallback to ParameterizedType: BlockingRpcCallback<ClearCacheResponse> at 0", "INS SimpleName: BlockingRpcCallback to SimpleType: BlockingRpcCallback at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS VariableDeclarationStatement to Block at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS QualifiedName: ClearCacheRequest.Builder to SimpleType: ClearCacheRequest.Builder at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: ClearCacheRequest to MethodInvocation at 0", "INS SimpleType: ClearCacheRequest.Builder to VariableDeclarationStatement at 0", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS SimpleName: newBuilder to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS InfixExpression: != to IfStatement at 0", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS IfStatement to Block at 4", "INS Block to IfStatement at 1", "INS SimpleName: getFailedOn to MethodInvocation at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: controller to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: controller to MethodInvocation at 0", "INS MethodInvocation to ThrowStatement at 0"]}, {"root": "INS ReturnStatement to Block at 5", "operations": ["INS ReturnStatement to Block at 5", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: rpcCallback to MethodInvocation at 0"]}, {"root": "UPDATE from Batch.Callback to BlockingRpcCallback", "operations": ["UPD SimpleType: Batch.Callback from Batch.Callback to BlockingRpcCallback"]}, {"root": "MOVE from ParameterizedType: BlockingRpcCallback<GetVersionResponse>", "operations": ["MOV SimpleType: Batch.Callback to ParameterizedType: BlockingRpcCallback<GetVersionResponse> at 0", "MOV SimpleType: Long to ParameterizedType: BlockingRpcCallback<GetVersionResponse> at 1"]}, {"root": "UPDATE from Long to GetVersionResponse", "operations": ["UPD SimpleName: Long from Long to GetVersionResponse", "UPD SimpleName: Long from Long to GetVersionResponse", "UPD SimpleType: Long from Long to GetVersionResponse"]}, {"root": "UPDATE from results to instance", "operations": ["UPD SimpleName: results from results to instance"]}, {"root": "UPDATE from put to getVersion", "operations": ["UPD SimpleName: put from put to getVersion"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS SimpleName: build to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "INS SimpleName: rpcCallback to MethodInvocation at 4", "operations": ["INS SimpleName: rpcCallback to MethodInvocation at 4"]}, {"root": "INS SimpleName: BlockingRpcCallback to SimpleType: Batch.Callback at 0", "operations": ["INS SimpleName: BlockingRpcCallback to SimpleType: Batch.Callback at 0"]}, {"root": "UPDATE from value to builder", "operations": ["UPD SimpleName: value from value to builder"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: value to MethodInvocation at 0"]}, {"root": "INS SimpleName: controller to MethodInvocation at 2", "operations": ["INS SimpleName: controller to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "INS SimpleName: rpcCallback to MethodInvocation at 4", "operations": ["INS SimpleName: rpcCallback to MethodInvocation at 4"]}, {"root": "MOVE from SimpleType: GetVersionResponse", "operations": ["MOV SimpleName: Long to SimpleType: GetVersionResponse at 0"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL SimpleName: tableName", "operations": ["DEL SimpleName: tableName"]}, {"root": "DEL QualifiedName: Batch.Callback", "operations": ["DEL QualifiedName: Batch.Callback"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: newTreeMap", "DEL QualifiedName: Bytes.BYTES_COMPARATOR", "DEL MethodInvocation", "DEL SimpleName: Maps", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL ArrayType: byte[]", "DEL QualifiedName: PhoenixDatabaseMetaData.TYPE_TABLE_NAME_BYTES", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: getDelegate", "DEL SimpleName: regionKeys", "DEL ArrayType: byte[]", "DEL SimpleName: getExecutor", "DEL ParameterizedType: Batch.Callback<Long>", "DEL SimpleType: Long", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: row", "DEL MethodDeclaration", "DEL SimpleName: region", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL PrimitiveType: byte", "DEL Block", "DEL AnonymousClassDeclaration", "DEL PrimitiveType: void", "DEL ExpressionStatement", "DEL AnonymousClassDeclaration", "DEL SimpleName: getVersion", "DEL PrimitiveType: byte", "DEL Dimension", "DEL SimpleName: value", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL MarkerAnnotation", "DEL Block", "DEL SimpleName: update", "DEL SimpleName: Override", "DEL Dimension", "DEL SimpleName: instance", "DEL ThisExpression", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL ConditionalExpression", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: HRegionLocation", "DEL QualifiedName: PhoenixDatabaseMetaData.TYPE_TABLE_NAME_BYTES", "DEL SimpleName: retried", "DEL SimpleName: regionLocation", "DEL SimpleName: locateRegion", "DEL SimpleName: HRegionLocation"]}, {"root": "DEL ParameterizedType: List<byte[]>", "operations": ["DEL ArrayType: byte[]", "DEL SimpleType: List", "DEL ParameterizedType: List<byte[]>", "DEL PrimitiveType: byte", "DEL Dimension"]}, {"root": "DEL SimpleName: regionKeys", "operations": ["DEL SimpleName: regionKeys"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: singletonList", "DEL MethodInvocation", "DEL SimpleName: Collections", "DEL SimpleName: regionLocation", "DEL SimpleName: getRegionInfo", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: newHashMapWithExpectedSize", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 1", "DEL SimpleName: Maps", "DEL VariableDeclarationFragment"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: results", "DEL MarkerAnnotation", "DEL AnonymousClassDeclaration", "DEL ParameterizedType: Batch.Callback<MetaDataMutationResult>", "DEL Modifier: public", "DEL SimpleName: value", "DEL SimpleName: put", "DEL MethodDeclaration", "DEL PrimitiveType: void", "DEL Block", "DEL SimpleName: MetaDataMutationResult", "DEL QualifiedName: PhoenixDatabaseMetaData.TYPE_TABLE_NAME_BYTES", "DEL SimpleName: region", "DEL SimpleType: MetaDataMutationResult", "DEL SimpleName: MetaDataMutationResult", "DEL SimpleName: getExecutor", "DEL SimpleName: update", "DEL PrimitiveType: byte", "DEL SingleVariableDeclaration", "DEL Dimension", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: value", "DEL Dimension", "DEL ArrayType: byte[]", "DEL SimpleName: row", "DEL ExpressionStatement", "DEL SimpleName: region", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleType: MetaDataMutationResult", "DEL ArrayType: byte[]", "DEL ThisExpression", "DEL SimpleType: Batch.Callback", "DEL ClassInstanceCreation", "DEL QualifiedName: Batch.Callback", "DEL SimpleName: Override", "DEL PrimitiveType: byte", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: result", "operations": ["DEL SimpleName: result"]}, {"root": "DEL SimpleName: result", "operations": ["DEL SimpleName: result"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: instance", "DEL ReturnStatement", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL ReturnStatement"]}, {"root": "DEL SimpleType: MetaDataMutationResult", "operations": ["DEL SimpleType: MetaDataMutationResult", "DEL SimpleName: MetaDataMutationResult"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL MethodInvocation", "DEL ReturnStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: HBaseFactoryProvider", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL NullLiteral"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL ReturnStatement"]}]}}, {"ConnectionQueryServicesImpl_diff": {"operations": ["Move ImportDeclaration(43) into CompilationUnit(6852) at 25", "Insert ImportDeclaration(43) into CompilationUnit(6852) at 21", "Insert ImportDeclaration(69) into CompilationUnit(6852) at 34", "Insert ImportDeclaration(71) into CompilationUnit(6852) at 35", "Insert ImportDeclaration(73) into CompilationUnit(6852) at 36", "Insert ImportDeclaration(107) into CompilationUnit(6852) at 53", "Insert ImportDeclaration(109) into CompilationUnit(6852) at 54", "Insert ImportDeclaration(111) into CompilationUnit(6852) at 55", "Insert ImportDeclaration(113) into CompilationUnit(6852) at 56", "Insert ImportDeclaration(115) into CompilationUnit(6852) at 57", "Insert ImportDeclaration(117) into CompilationUnit(6852) at 58", "Insert ImportDeclaration(119) into CompilationUnit(6852) at 59", "Insert ImportDeclaration(121) into CompilationUnit(6852) at 60", "Insert ImportDeclaration(123) into CompilationUnit(6852) at 61", "Insert ImportDeclaration(125) into CompilationUnit(6852) at 62", "Insert ImportDeclaration(127) into CompilationUnit(6852) at 63", "Insert ImportDeclaration(129) into CompilationUnit(6852) at 64", "Insert ImportDeclaration(131) into CompilationUnit(6852) at 65", "Insert ImportDeclaration(151) into CompilationUnit(6852) at 75", "Insert ImportDeclaration(201) into CompilationUnit(6852) at 100", "Insert QualifiedName: org.apache.hadoop.hbase.TableName(42) into ImportDeclaration(43) at 0", "Update QualifiedName: org.apache.hadoop.hbase.ZooKeeperConnectionException(42) to org.apache.hadoop.hbase.client.HConnectionManager", "Insert QualifiedName: org.apache.hadoop.hbase.ipc.BlockingRpcCallback(68) into ImportDeclaration(69) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.ipc.ServerRpcController(70) into ImportDeclaration(71) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutationProto(72) into ImportDeclaration(73) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos(106) into ImportDeclaration(107) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.AddColumnRequest(108) into ImportDeclaration(109) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.ClearCacheRequest(110) into ImportDeclaration(111) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.ClearCacheResponse(112) into ImportDeclaration(113) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.CreateTableRequest(114) into ImportDeclaration(115) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.DropColumnRequest(116) into ImportDeclaration(117) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.DropTableRequest(118) into ImportDeclaration(119) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.GetTableRequest(120) into ImportDeclaration(121) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.GetVersionRequest(122) into ImportDeclaration(123) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.GetVersionResponse(124) into ImportDeclaration(125) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataResponse(126) into ImportDeclaration(127) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.MetaDataService(128) into ImportDeclaration(129) at 0", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.MetaDataProtos.UpdateIndexStateRequest(130) into ImportDeclaration(131) at 0", "Insert QualifiedName: org.apache.phoenix.protobuf.ProtobufUtil(150) into ImportDeclaration(151) at 0", "Insert QualifiedName: com.google.protobuf.HBaseZeroCopyByteString(200) into ImportDeclaration(201) at 0", "Move SimpleType: MetaDataMutationResult(4216) into MethodDeclaration(4643) at 2", "Insert IfStatement(443) into Block(529) at 5", "Insert ExpressionStatement(451) into Block(529) at 6", "Update ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult>(3123) to Batch.Call<MetaDataService,MetaDataResponse>", "Move TryStatement(434) into Block(4938) at 0", "Move IfStatement(450) into Block(4938) at 1", "Insert InfixExpression: ==(433) into IfStatement(443) at 0", "Insert Block(442) into IfStatement(443) at 1", "Insert MethodInvocation(450) into ExpressionStatement(451) at 0", "Update SimpleType: MetaDataProtocol(3120) to MetaDataService", "Update SimpleType: MetaDataMutationResult(3122) to MetaDataResponse", "Move SimpleType: MetaDataMutationResult(4201) into VariableDeclarationStatement(4400) at 0", "Move SimpleType: MetaDataMutationResult(4078) into VariableDeclarationStatement(4595) at 0", "Insert MethodInvocation(431) into InfixExpression: ==(433) at 0", "Insert NullLiteral(432) into InfixExpression: ==(433) at 1", "Insert ExpressionStatement(441) into Block(442) at 0", "Insert FieldAccess(446) into MethodInvocation(450) at 0", "Insert SimpleName: setBoolean(447) into MethodInvocation(450) at 1", "Insert QualifiedName: HConstants.REPLICATION_ENABLE_KEY(448) into MethodInvocation(450) at 2", "Insert BooleanLiteral: false(449) into MethodInvocation(450) at 3", "Insert MethodInvocation(830) into MethodInvocation(831) at 2", "Insert VariableDeclarationStatement(2908) into Block(3087) at 5", "Insert VariableDeclarationStatement(3007) into Block(3087) at 6", "Update SimpleName: MetaDataProtocol(3119) to MetaDataService", "Update SimpleName: MetaDataMutationResult(3121) to MetaDataResponse", "Insert FieldAccess(428) into MethodInvocation(431) at 0", "Insert SimpleName: get(429) into MethodInvocation(431) at 1", "Insert QualifiedName: HConstants.HBASE_MASTER_LOGCLEANER_PLUGINS(430) into MethodInvocation(431) at 2", "Insert MethodInvocation(440) into ExpressionStatement(441) at 0", "Insert ThisExpression(444) into FieldAccess(446) at 0", "Insert SimpleName: config(445) into FieldAccess(446) at 1", "Insert SimpleName: TableName(827) into MethodInvocation(830) at 0", "Insert SimpleName: valueOf(828) into MethodInvocation(830) at 1", "Move SimpleName: tableName(813) into MethodInvocation(830) at 2", "Insert SimpleType: HTableInterface(2901) into VariableDeclarationStatement(2908) at 0", "Insert VariableDeclarationFragment(2907) into VariableDeclarationStatement(2908) at 1", "Move Modifier: final(2877) into VariableDeclarationStatement(3007) at 0", "Update ParameterizedType: TreeMap<byte[],Long>(2885) to Map<byte[],Long>", "Move ParameterizedType: TreeMap<byte[],Long>(2885) into VariableDeclarationStatement(3007) at 1", "Insert VariableDeclarationFragment(3006) into VariableDeclarationStatement(3007) at 2", "Update ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult>(3569) to Batch.Call<MetaDataService,MetaDataResponse>", "Update SimpleType: ZooKeeperConnectionException(417) to IOException", "Update SimpleName: e(418) to ioe", "Update ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult>(4814) to Batch.Call<MetaDataService,MetaDataResponse>", "Insert ThisExpression(426) into FieldAccess(428) at 0", "Insert SimpleName: config(427) into FieldAccess(428) at 1", "Insert FieldAccess(436) into MethodInvocation(440) at 0", "Insert SimpleName: set(437) into MethodInvocation(440) at 1", "Insert QualifiedName: HConstants.HBASE_MASTER_LOGCLEANER_PLUGINS(438) into MethodInvocation(440) at 2", "Insert StringLiteral: \"org.apache.hadoop.hbase.master.cleaner.TimeToLiveLogCleaner\"(439) into MethodInvocation(440) at 3", "Insert MethodInvocation(1679) into ClassInstanceCreation(1680) at 1", "Insert SimpleName: HTableInterface(2900) into SimpleType: HTableInterface(2901) at 0", "Insert SimpleName: ht(2902) into VariableDeclarationFragment(2907) at 0", "Insert MethodInvocation(2906) into VariableDeclarationFragment(2907) at 1", "Update SimpleType: TreeMap(2879) to Map", "Move SimpleType: Long(2916) into ParameterizedType: Map<byte[],Long>(2917) at 2", "Move SimpleName: results(2886) into VariableDeclarationFragment(3006) at 0", "Insert MethodInvocation(3005) into VariableDeclarationFragment(3006) at 1", "Insert IfStatement(3185) into Block(3259) at 0", "Insert VariableDeclarationStatement(3215) into Block(3259) at 2", "Update ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult>(3474) to Batch.Call<MetaDataService,MetaDataResponse>", "Update SimpleType: MetaDataProtocol(3566) to MetaDataService", "Update SimpleType: MetaDataMutationResult(3568) to MetaDataResponse", "Update ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult>(3700) to Batch.Call<MetaDataService,MetaDataResponse>", "Update ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult>(4088) to Batch.Call<MetaDataService,MetaDataResponse>", "Update ParameterizedType: Batch.Call<MetaDataProtocol,MetaDataMutationResult>(4211) to Batch.Call<MetaDataService,MetaDataResponse>", "Update SimpleName: ZooKeeperConnectionException(416) to IOException", "Move SimpleType: Batch.Call(4083) into ParameterizedType: Batch.Call<MetaDataService,MetaDataResponse>(5269) at 0", "Update SimpleType: MetaDataProtocol(4811) to MetaDataService", "Update SimpleType: MetaDataMutationResult(4813) to MetaDataResponse", "Insert ThisExpression(434) into FieldAccess(436) at 0", "Insert SimpleName: config(435) into FieldAccess(436) at 1", "Insert SimpleName: TableName(1676) into MethodInvocation(1679) at 0", "Insert SimpleName: valueOf(1677) into MethodInvocation(1679) at 1", "Insert SimpleName: tableName(1678) into MethodInvocation(1679) at 2", "Insert ThisExpression(2903) into MethodInvocation(2906) at 0", "Insert SimpleName: getTable(2904) into MethodInvocation(2906) at 1", "Insert QualifiedName: PhoenixDatabaseMetaData.TYPE_TABLE_NAME_BYTES(2905) into MethodInvocation(2906) at 2", "Update SimpleName: TreeMap(2878) to Map", "Update SimpleName: connection(2893) to ht", "Move SimpleName: connection(2893) into MethodInvocation(3005) at 0", "Update SimpleName: processExecs(2894) to coprocessorService", "Move SimpleName: processExecs(2894) into MethodInvocation(3005) at 1", "Move TypeLiteral(2897) into MethodInvocation(3005) at 2", "Insert NullLiteral(2924) into MethodInvocation(3005) at 3", "Insert NullLiteral(2925) into MethodInvocation(3005) at 4", "Insert ClassInstanceCreation(3004) into MethodInvocation(3005) at 5", "Insert SimpleName: retried(3174) into IfStatement(3185) at 0", "Insert Block(3184) into IfStatement(3185) at 1", "Insert SimpleType: HTableInterface(3187) into VariableDeclarationStatement(3194) at 0", "Move Modifier: final(3168) into VariableDeclarationStatement(3215) at 0", "Update ParameterizedType: Map<byte[],MetaDataMutationResult>(3176) to Map<byte[],MetaDataResponse>", "Move ParameterizedType: Map<byte[],MetaDataMutationResult>(3176) into VariableDeclarationStatement(3215) at 1", "Insert VariableDeclarationFragment(3214) into VariableDeclarationStatement(3215) at 2", "Update SimpleType: MetaDataMutationResult(3241) to MetaDataResponse", "Insert MethodInvocation(3257) into ReturnStatement(3258) at 0", "Update SimpleType: MetaDataProtocol(3471) to MetaDataService", "Update SimpleType: MetaDataMutationResult(3473) to MetaDataResponse", "Update SimpleName: MetaDataProtocol(3565) to MetaDataService", "Update SimpleName: MetaDataMutationResult(3567) to MetaDataResponse", "Update SimpleType: MetaDataMutationResult(3574) to MetaDataResponse", "Update SimpleType: MetaDataProtocol(3697) to MetaDataService", "Update SimpleType: MetaDataMutationResult(3699) to MetaDataResponse", "Move SimpleType: Batch.Call(4206) into ParameterizedType: Batch.Call<MetaDataService,MetaDataResponse>(4304) at 0", "Update SimpleType: MetaDataProtocol(4085) to MetaDataService", "Update SimpleType: MetaDataMutationResult(4087) to MetaDataResponse", "Move SimpleType: Batch.Call(4602) into ParameterizedType: Batch.Call<MetaDataService,MetaDataResponse>(4499) at 0", "Update SimpleType: MetaDataProtocol(4208) to MetaDataService", "Update SimpleType: MetaDataMutationResult(4210) to MetaDataResponse", "Update SimpleName: getHConnectionFactory(406) to HConnectionManager", "Move SimpleName: getHConnectionFactory(406) into MethodInvocation(4788) at 0", "Update SimpleName: MetaDataProtocol(4810) to MetaDataService", "Update SimpleName: MetaDataMutationResult(4812) to MetaDataResponse", "Move MarkerAnnotation(4090) into MethodDeclaration(5360) at 0", "Update SimpleType: MetaDataMutationResult(4819) to MetaDataResponse", "Move SimpleType: IOException(4100) into MethodDeclaration(5360) at 6", "Update SimpleType: MetaDataProtocol(2896) to MetaDataService", "Update ParameterizedType: Batch.Call<MetaDataProtocol,Long>(2911) to Batch.Call<MetaDataService,Long>", "Move ParameterizedType: Batch.Call<MetaDataProtocol,Long>(2911) into ClassInstanceCreation(3004) at 0", "Insert AnonymousClassDeclaration(3003) into ClassInstanceCreation(3004) at 1", "Insert ExpressionStatement(3183) into Block(3184) at 0", "Update SimpleName: List(3151) to HTableInterface", "Move SimpleName: List(3151) into SimpleType: HTableInterface(3187) at 0", "Insert SimpleName: ht(3188) into VariableDeclarationFragment(3193) at 0", "Insert MethodInvocation(3192) into VariableDeclarationFragment(3193) at 1", "Update SimpleType: MetaDataMutationResult(3175) to MetaDataResponse", "Move SimpleName: results(3177) into VariableDeclarationFragment(3214) at 0", "Insert MethodInvocation(3213) into VariableDeclarationFragment(3214) at 1", "Update SimpleName: MetaDataMutationResult(3240) to MetaDataResponse", "Update QualifiedName: MutationCode.TABLE_NOT_IN_REGION(3255) to MetaDataProtos.MutationCode.TABLE_NOT_IN_REGION", "Insert SimpleName: MetaDataMutationResult(3254) into MethodInvocation(3257) at 0", "Insert SimpleName: constructFromProto(3255) into MethodInvocation(3257) at 1", "Insert SimpleName: result(3256) into MethodInvocation(3257) at 2", "Update SimpleName: MetaDataProtocol(3470) to MetaDataService", "Update SimpleName: MetaDataMutationResult(3472) to MetaDataResponse", "Update SimpleType: MetaDataMutationResult(3479) to MetaDataResponse", "Update SimpleName: MetaDataMutationResult(3573) to MetaDataResponse", "Update SimpleType: MetaDataProtocol(3577) to MetaDataService", "Insert VariableDeclarationStatement(3650) into Block(3731) at 0", "Insert VariableDeclarationStatement(3664) into Block(3731) at 1", "Insert VariableDeclarationStatement(3672) into Block(3731) at 2", "Insert ExpressionStatement(3680) into Block(3731) at 3", "Insert ExpressionStatement(3688) into Block(3731) at 4", "Insert ExpressionStatement(3696) into Block(3731) at 5", "Insert ExpressionStatement(3701) into Block(3731) at 6", "Insert ExpressionStatement(3706) into Block(3731) at 7", "Insert ExpressionStatement(3715) into Block(3731) at 8", "Insert IfStatement(3726) into Block(3731) at 9", "Insert ReturnStatement(3730) into Block(3731) at 10", "Update SimpleName: MetaDataProtocol(3696) to MetaDataService", "Update SimpleName: MetaDataMutationResult(3698) to MetaDataResponse", "Update SimpleType: MetaDataMutationResult(3705) to MetaDataResponse", "Update SimpleName: MetaDataProtocol(4084) to MetaDataService", "Update SimpleName: MetaDataMutationResult(4086) to MetaDataResponse", "Move MarkerAnnotation(4213) into MethodDeclaration(4395) at 0", "Update SimpleType: MetaDataMutationResult(4093) to MetaDataResponse", "Move SimpleType: IOException(4223) into MethodDeclaration(4395) at 5", "Update SimpleName: MetaDataProtocol(4207) to MetaDataService", "Update SimpleName: MetaDataMutationResult(4209) to MetaDataResponse", "Move MarkerAnnotation(4609) into MethodDeclaration(4590) at 0", "Insert SimpleType: MetaDataResponse(4504) into MethodDeclaration(4590) at 2", "Move SimpleType: IOException(4619) into MethodDeclaration(4590) at 5", "Insert Block(4589) into MethodDeclaration(4590) at 6", "Update SimpleName: coprocessorExec(4595) to coprocessorService", "Update SimpleName: MetaDataMutationResult(4818) to MetaDataResponse", "Update SimpleType: MetaDataProtocol(4822) to MetaDataService", "Insert VariableDeclarationStatement(5289) into Block(5359) at 0", "Insert VariableDeclarationStatement(5303) into Block(5359) at 1", "Insert VariableDeclarationStatement(5311) into Block(5359) at 2", "Insert EnhancedForStatement(5334) into Block(5359) at 3", "Insert ExpressionStatement(5343) into Block(5359) at 4", "Insert IfStatement(5354) into Block(5359) at 5", "Insert ReturnStatement(5358) into Block(5359) at 6", "Update SimpleName: MetaDataProtocol(2895) to MetaDataService", "Update SimpleType: MetaDataProtocol(2908) to MetaDataService", "Insert MethodDeclaration(3002) into AnonymousClassDeclaration(3003) at 0", "Insert MethodInvocation(3182) into ExpressionStatement(3183) at 0", "Insert ThisExpression(3189) into MethodInvocation(3192) at 0", "Update SimpleName: getStartKey(3163) to getTable", "Move SimpleName: getStartKey(3163) into MethodInvocation(3192) at 1", "Insert QualifiedName: PhoenixDatabaseMetaData.TYPE_TABLE_NAME_BYTES(3191) into MethodInvocation(3192) at 2", "Update SimpleName: MetaDataMutationResult(3174) to MetaDataResponse", "Update SimpleName: connection(3184) to ht", "Move SimpleName: connection(3184) into MethodInvocation(3213) at 0", "Update SimpleName: processExecs(3185) to coprocessorService", "Move SimpleName: processExecs(3185) into MethodInvocation(3213) at 1", "Move TypeLiteral(3188) into MethodInvocation(3213) at 2", "Update SimpleName: regionKeys(3189) to tableKey", "Move SimpleName: regionKeys(3189) into MethodInvocation(3213) at 3", "Update SimpleName: getDelegate(3192) to tableKey", "Move SimpleName: getDelegate(3192) into MethodInvocation(3213) at 4", "Move SimpleName: callable(3196) into MethodInvocation(3213) at 5", "Update SimpleName: getMutationCode(3253) to getReturnCode", "Update SimpleName: MetaDataMutationResult(3478) to MetaDataResponse", "Update SimpleType: MetaDataProtocol(3482) to MetaDataService", "Insert VariableDeclarationStatement(3483) into Block(3553) at 0", "Insert VariableDeclarationStatement(3497) into Block(3553) at 1", "Insert VariableDeclarationStatement(3505) into Block(3553) at 2", "Insert EnhancedForStatement(3528) into Block(3553) at 3", "Insert ExpressionStatement(3537) into Block(3553) at 4", "Insert IfStatement(3548) into Block(3553) at 5", "Insert ReturnStatement(3552) into Block(3553) at 6", "Update SimpleName: MetaDataProtocol(3576) to MetaDataService", "Insert SimpleType: ServerRpcController(3644) into VariableDeclarationStatement(3650) at 0", "Insert VariableDeclarationFragment(3649) into VariableDeclarationStatement(3650) at 1", "Insert ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3655) into VariableDeclarationStatement(3664) at 0", "Insert VariableDeclarationFragment(3663) into VariableDeclarationStatement(3664) at 1", "Insert SimpleType: GetTableRequest.Builder(3666) into VariableDeclarationStatement(3672) at 0", "Insert VariableDeclarationFragment(3671) into VariableDeclarationStatement(3672) at 1", "Insert MethodInvocation(3679) into ExpressionStatement(3680) at 0", "Insert MethodInvocation(3687) into ExpressionStatement(3688) at 0", "Insert MethodInvocation(3695) into ExpressionStatement(3696) at 0", "Insert MethodInvocation(3700) into ExpressionStatement(3701) at 0", "Insert MethodInvocation(3705) into ExpressionStatement(3706) at 0", "Insert MethodInvocation(3714) into ExpressionStatement(3715) at 0", "Insert InfixExpression: !=(3720) into IfStatement(3726) at 0", "Insert Block(3725) into IfStatement(3726) at 1", "Insert MethodInvocation(3729) into ReturnStatement(3730) at 0", "Update SimpleName: MetaDataMutationResult(3704) to MetaDataResponse", "Update SimpleType: MetaDataProtocol(3708) to MetaDataService", "Insert VariableDeclarationStatement(3860) into Block(3937) at 0", "Insert VariableDeclarationStatement(3874) into Block(3937) at 1", "Insert VariableDeclarationStatement(3882) into Block(3937) at 2", "Insert EnhancedForStatement(3905) into Block(3937) at 3", "Insert ExpressionStatement(3912) into Block(3937) at 4", "Insert ExpressionStatement(3921) into Block(3937) at 5", "Insert IfStatement(3932) into Block(3937) at 6", "Insert ReturnStatement(3936) into Block(3937) at 7", "Update SimpleName: MetaDataMutationResult(4092) to MetaDataResponse", "Update SimpleType: MetaDataProtocol(4096) to MetaDataService", "Insert SimpleName: IOException(4315) into SimpleType: IOException(4316) at 0", "Insert VariableDeclarationStatement(4324) into Block(4394) at 0", "Insert VariableDeclarationStatement(4338) into Block(4394) at 1", "Insert VariableDeclarationStatement(4346) into Block(4394) at 2", "Insert EnhancedForStatement(4369) into Block(4394) at 3", "Insert ExpressionStatement(4378) into Block(4394) at 4", "Insert IfStatement(4389) into Block(4394) at 5", "Insert ReturnStatement(4393) into Block(4394) at 6", "Insert SimpleName: MetaDataResponse(4503) into SimpleType: MetaDataResponse(4504) at 0", "Update SimpleType: MetaDataProtocol(4219) to MetaDataService", "Insert VariableDeclarationStatement(4519) into Block(4589) at 0", "Insert VariableDeclarationStatement(4533) into Block(4589) at 1", "Insert VariableDeclarationStatement(4541) into Block(4589) at 2", "Insert EnhancedForStatement(4564) into Block(4589) at 3", "Insert ExpressionStatement(4573) into Block(4589) at 4", "Insert IfStatement(4584) into Block(4589) at 5", "Insert ReturnStatement(4588) into Block(4589) at 6", "Update SimpleName: e(425) to ioe", "Update SimpleType: MetaDataProtocol(4597) to MetaDataService", "Update ParameterizedType: Batch.Call<MetaDataProtocol,Void>(4607) to Batch.Call<MetaDataService,ClearCacheResponse>", "Update SimpleName: MetaDataProtocol(4821) to MetaDataService", "Insert SimpleType: ServerRpcController(5283) into VariableDeclarationStatement(5289) at 0", "Insert VariableDeclarationFragment(5288) into VariableDeclarationStatement(5289) at 1", "Insert ParameterizedType: BlockingRpcCallback<MetaDataResponse>(5294) into VariableDeclarationStatement(5303) at 0", "Insert VariableDeclarationFragment(5302) into VariableDeclarationStatement(5303) at 1", "Insert SimpleType: UpdateIndexStateRequest.Builder(5305) into VariableDeclarationStatement(5311) at 0", "Insert VariableDeclarationFragment(5310) into VariableDeclarationStatement(5311) at 1", "Insert SingleVariableDeclaration(5315) into EnhancedForStatement(5334) at 0", "Insert SimpleName: tableMetaData(5316) into EnhancedForStatement(5334) at 1", "Insert Block(5333) into EnhancedForStatement(5334) at 2", "Insert MethodInvocation(5342) into ExpressionStatement(5343) at 0", "Insert InfixExpression: !=(5348) into IfStatement(5354) at 0", "Insert Block(5353) into IfStatement(5354) at 1", "Insert MethodInvocation(5357) into ReturnStatement(5358) at 0", "Update SimpleName: MetaDataProtocol(2907) to MetaDataService", "Move MarkerAnnotation(2938) into MethodDeclaration(3002) at 0", "Move Modifier: public(2914) into MethodDeclaration(3002) at 1", "Move SimpleType: Long(2884) into MethodDeclaration(3002) at 2", "Move SimpleName: call(2917) into MethodDeclaration(3002) at 3", "Move SingleVariableDeclaration(2921) into MethodDeclaration(3002) at 4", "Move SimpleType: IOException(2923) into MethodDeclaration(3002) at 5", "Insert Block(3001) into MethodDeclaration(3002) at 6", "Move SimpleName: connection(3138) into MethodInvocation(3182) at 0", "Move SimpleName: relocateRegion(3139) into MethodInvocation(3182) at 1", "Insert MethodInvocation(3180) into MethodInvocation(3182) at 2", "Move SimpleName: tableKey(3146) into MethodInvocation(3182) at 3", "Update SimpleType: MetaDataProtocol(3187) to MetaDataService", "Insert MethodInvocation(3244) into ReturnStatement(3245) at 0", "Update SimpleName: MetaDataProtocol(3481) to MetaDataService", "Insert SimpleType: ServerRpcController(3477) into VariableDeclarationStatement(3483) at 0", "Insert VariableDeclarationFragment(3482) into VariableDeclarationStatement(3483) at 1", "Insert ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3488) into VariableDeclarationStatement(3497) at 0", "Insert VariableDeclarationFragment(3496) into VariableDeclarationStatement(3497) at 1", "Insert SimpleType: CreateTableRequest.Builder(3499) into VariableDeclarationStatement(3505) at 0", "Insert VariableDeclarationFragment(3504) into VariableDeclarationStatement(3505) at 1", "Insert SingleVariableDeclaration(3509) into EnhancedForStatement(3528) at 0", "Insert SimpleName: tableMetaData(3510) into EnhancedForStatement(3528) at 1", "Insert Block(3527) into EnhancedForStatement(3528) at 2", "Insert MethodInvocation(3536) into ExpressionStatement(3537) at 0", "Insert InfixExpression: !=(3542) into IfStatement(3548) at 0", "Insert Block(3547) into IfStatement(3548) at 1", "Insert MethodInvocation(3551) into ReturnStatement(3552) at 0", "Insert SimpleName: ServerRpcController(3643) into SimpleType: ServerRpcController(3644) at 0", "Insert SimpleName: controller(3645) into VariableDeclarationFragment(3649) at 0", "Insert ClassInstanceCreation(3648) into VariableDeclarationFragment(3649) at 1", "Insert SimpleType: BlockingRpcCallback(3652) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3655) at 0", "Insert SimpleType: MetaDataResponse(3654) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3655) at 1", "Insert SimpleName: rpcCallback(3656) into VariableDeclarationFragment(3663) at 0", "Insert ClassInstanceCreation(3662) into VariableDeclarationFragment(3663) at 1", "Insert QualifiedName: GetTableRequest.Builder(3665) into SimpleType: GetTableRequest.Builder(3666) at 0", "Insert SimpleName: builder(3667) into VariableDeclarationFragment(3671) at 0", "Insert MethodInvocation(3670) into VariableDeclarationFragment(3671) at 1", "Insert SimpleName: builder(3673) into MethodInvocation(3679) at 0", "Insert SimpleName: setTenantId(3674) into MethodInvocation(3679) at 1", "Insert MethodInvocation(3678) into MethodInvocation(3679) at 2", "Insert SimpleName: builder(3681) into MethodInvocation(3687) at 0", "Insert SimpleName: setSchemaName(3682) into MethodInvocation(3687) at 1", "Insert MethodInvocation(3686) into MethodInvocation(3687) at 2", "Insert SimpleName: builder(3689) into MethodInvocation(3695) at 0", "Insert SimpleName: setTableName(3690) into MethodInvocation(3695) at 1", "Insert MethodInvocation(3694) into MethodInvocation(3695) at 2", "Insert SimpleName: builder(3697) into MethodInvocation(3700) at 0", "Insert SimpleName: setTableTimestamp(3698) into MethodInvocation(3700) at 1", "Move SimpleName: tableTimestamp(3587) into MethodInvocation(3700) at 2", "Insert SimpleName: builder(3702) into MethodInvocation(3705) at 0", "Insert SimpleName: setClientTimestamp(3703) into MethodInvocation(3705) at 1", "Move SimpleName: clientTimestamp(3588) into MethodInvocation(3705) at 2", "Insert SimpleName: instance(3707) into MethodInvocation(3714) at 0", "Insert SimpleName: getTable(3708) into MethodInvocation(3714) at 1", "Insert SimpleName: controller(3709) into MethodInvocation(3714) at 2", "Insert MethodInvocation(3712) into MethodInvocation(3714) at 3", "Insert SimpleName: rpcCallback(3713) into MethodInvocation(3714) at 4", "Insert MethodInvocation(3718) into InfixExpression: !=(3720) at 0", "Insert NullLiteral(3719) into InfixExpression: !=(3720) at 1", "Insert ThrowStatement(3724) into Block(3725) at 0", "Insert SimpleName: rpcCallback(3727) into MethodInvocation(3729) at 0", "Insert SimpleName: get(3728) into MethodInvocation(3729) at 1", "Update SimpleName: MetaDataProtocol(3707) to MetaDataService", "Insert SimpleType: ServerRpcController(3854) into VariableDeclarationStatement(3860) at 0", "Insert VariableDeclarationFragment(3859) into VariableDeclarationStatement(3860) at 1", "Insert ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3865) into VariableDeclarationStatement(3874) at 0", "Insert VariableDeclarationFragment(3873) into VariableDeclarationStatement(3874) at 1", "Insert SimpleType: DropTableRequest.Builder(3876) into VariableDeclarationStatement(3882) at 0", "Insert VariableDeclarationFragment(3881) into VariableDeclarationStatement(3882) at 1", "Insert SingleVariableDeclaration(3886) into EnhancedForStatement(3905) at 0", "Insert SimpleName: tableMetaData(3887) into EnhancedForStatement(3905) at 1", "Insert Block(3904) into EnhancedForStatement(3905) at 2", "Insert MethodInvocation(3911) into ExpressionStatement(3912) at 0", "Insert MethodInvocation(3920) into ExpressionStatement(3921) at 0", "Insert InfixExpression: !=(3926) into IfStatement(3932) at 0", "Insert Block(3931) into IfStatement(3932) at 1", "Insert MethodInvocation(3935) into ReturnStatement(3936) at 0", "Update SimpleName: MetaDataProtocol(4095) to MetaDataService", "Insert SimpleType: ServerRpcController(4318) into VariableDeclarationStatement(4324) at 0", "Insert VariableDeclarationFragment(4323) into VariableDeclarationStatement(4324) at 1", "Insert ParameterizedType: BlockingRpcCallback<MetaDataResponse>(4329) into VariableDeclarationStatement(4338) at 0", "Insert VariableDeclarationFragment(4337) into VariableDeclarationStatement(4338) at 1", "Insert SimpleType: AddColumnRequest.Builder(4340) into VariableDeclarationStatement(4346) at 0", "Insert VariableDeclarationFragment(4345) into VariableDeclarationStatement(4346) at 1", "Insert SingleVariableDeclaration(4350) into EnhancedForStatement(4369) at 0", "Insert SimpleName: tableMetaData(4351) into EnhancedForStatement(4369) at 1", "Insert Block(4368) into EnhancedForStatement(4369) at 2", "Insert MethodInvocation(4377) into ExpressionStatement(4378) at 0", "Insert InfixExpression: !=(4383) into IfStatement(4389) at 0", "Insert Block(4388) into IfStatement(4389) at 1", "Insert MethodInvocation(4392) into ReturnStatement(4393) at 0", "Update SimpleName: MetaDataProtocol(4218) to MetaDataService", "Insert SimpleType: ServerRpcController(4513) into VariableDeclarationStatement(4519) at 0", "Insert VariableDeclarationFragment(4518) into VariableDeclarationStatement(4519) at 1", "Insert ParameterizedType: BlockingRpcCallback<MetaDataResponse>(4524) into VariableDeclarationStatement(4533) at 0", "Insert VariableDeclarationFragment(4532) into VariableDeclarationStatement(4533) at 1", "Insert SimpleType: DropColumnRequest.Builder(4535) into VariableDeclarationStatement(4541) at 0", "Insert VariableDeclarationFragment(4540) into VariableDeclarationStatement(4541) at 1", "Insert SingleVariableDeclaration(4545) into EnhancedForStatement(4564) at 0", "Insert SimpleName: tableMetaData(4546) into EnhancedForStatement(4564) at 1", "Insert Block(4563) into EnhancedForStatement(4564) at 2", "Insert MethodInvocation(4572) into ExpressionStatement(4573) at 0", "Insert InfixExpression: !=(4578) into IfStatement(4584) at 0", "Insert Block(4583) into IfStatement(4584) at 1", "Insert MethodInvocation(4587) into ReturnStatement(4588) at 0", "Update SimpleName: MetaDataProtocol(4596) to MetaDataService", "Move SimpleType: Batch.Call(4809) into ParameterizedType: Batch.Call<MetaDataService,ClearCacheResponse>(5014) at 0", "Update SimpleType: MetaDataProtocol(4604) to MetaDataService", "Update SimpleType: Void(4606) to ClearCacheResponse", "Insert SimpleName: ServerRpcController(5282) into SimpleType: ServerRpcController(5283) at 0", "Insert SimpleName: controller(5284) into VariableDeclarationFragment(5288) at 0", "Insert ClassInstanceCreation(5287) into VariableDeclarationFragment(5288) at 1", "Insert SimpleType: BlockingRpcCallback(5291) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(5294) at 0", "Insert SimpleType: MetaDataResponse(5293) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(5294) at 1", "Insert SimpleName: rpcCallback(5295) into VariableDeclarationFragment(5302) at 0", "Insert ClassInstanceCreation(5301) into VariableDeclarationFragment(5302) at 1", "Insert QualifiedName: UpdateIndexStateRequest.Builder(5304) into SimpleType: UpdateIndexStateRequest.Builder(5305) at 0", "Insert SimpleName: builder(5306) into VariableDeclarationFragment(5310) at 0", "Insert MethodInvocation(5309) into VariableDeclarationFragment(5310) at 1", "Insert SimpleType: Mutation(5313) into SingleVariableDeclaration(5315) at 0", "Insert SimpleName: m(5314) into SingleVariableDeclaration(5315) at 1", "Insert VariableDeclarationStatement(5325) into Block(5333) at 0", "Insert ExpressionStatement(5332) into Block(5333) at 1", "Move SimpleName: instance(4827) into MethodInvocation(5342) at 0", "Move SimpleName: updateIndexState(4828) into MethodInvocation(5342) at 1", "Update SimpleName: tableMetaData(4829) to controller", "Move SimpleName: tableMetaData(4829) into MethodInvocation(5342) at 2", "Insert MethodInvocation(5340) into MethodInvocation(5342) at 3", "Insert SimpleName: rpcCallback(5341) into MethodInvocation(5342) at 4", "Insert MethodInvocation(5346) into InfixExpression: !=(5348) at 0", "Insert NullLiteral(5347) into InfixExpression: !=(5348) at 1", "Insert ThrowStatement(5352) into Block(5353) at 0", "Insert SimpleName: rpcCallback(5355) into MethodInvocation(5357) at 0", "Insert SimpleName: get(5356) into MethodInvocation(5357) at 1", "Insert MethodInvocation(891) into MethodInvocation(894) at 2", "Update SimpleType: MetaDataProtocol(2919) to MetaDataService", "Insert VariableDeclarationStatement(2952) into Block(3001) at 0", "Insert VariableDeclarationStatement(2966) into Block(3001) at 1", "Insert VariableDeclarationStatement(2974) into Block(3001) at 2", "Move ExpressionStatement(2961) into Block(3001) at 3", "Insert IfStatement(2994) into Block(3001) at 4", "Insert ReturnStatement(3000) into Block(3001) at 5", "Update SimpleName: tableKey(3141) to TableName", "Move SimpleName: tableKey(3141) into MethodInvocation(3180) at 0", "Update SimpleName: connection(3143) to valueOf", "Move SimpleName: connection(3143) into MethodInvocation(3180) at 1", "Move QualifiedName: PhoenixDatabaseMetaData.TYPE_TABLE_NAME_BYTES(3145) into MethodInvocation(3180) at 2", "Update SimpleName: MetaDataProtocol(3186) to MetaDataService", "Insert SimpleName: MetaDataMutationResult(3241) into MethodInvocation(3244) at 0", "Insert SimpleName: constructFromProto(3242) into MethodInvocation(3244) at 1", "Insert SimpleName: result(3243) into MethodInvocation(3244) at 2", "Insert SimpleName: ServerRpcController(3476) into SimpleType: ServerRpcController(3477) at 0", "Insert SimpleName: controller(3478) into VariableDeclarationFragment(3482) at 0", "Insert ClassInstanceCreation(3481) into VariableDeclarationFragment(3482) at 1", "Insert SimpleType: BlockingRpcCallback(3485) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3488) at 0", "Insert SimpleType: MetaDataResponse(3487) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3488) at 1", "Insert SimpleName: rpcCallback(3489) into VariableDeclarationFragment(3496) at 0", "Insert ClassInstanceCreation(3495) into VariableDeclarationFragment(3496) at 1", "Insert QualifiedName: CreateTableRequest.Builder(3498) into SimpleType: CreateTableRequest.Builder(3499) at 0", "Insert SimpleName: builder(3500) into VariableDeclarationFragment(3504) at 0", "Insert MethodInvocation(3503) into VariableDeclarationFragment(3504) at 1", "Insert SimpleType: Mutation(3507) into SingleVariableDeclaration(3509) at 0", "Insert SimpleName: m(3508) into SingleVariableDeclaration(3509) at 1", "Insert VariableDeclarationStatement(3519) into Block(3527) at 0", "Insert ExpressionStatement(3526) into Block(3527) at 1", "Move SimpleName: instance(3487) into MethodInvocation(3536) at 0", "Move SimpleName: createTable(3488) into MethodInvocation(3536) at 1", "Update SimpleName: tableMetaData(3489) to controller", "Move SimpleName: tableMetaData(3489) into MethodInvocation(3536) at 2", "Insert MethodInvocation(3534) into MethodInvocation(3536) at 3", "Insert SimpleName: rpcCallback(3535) into MethodInvocation(3536) at 4", "Insert MethodInvocation(3540) into InfixExpression: !=(3542) at 0", "Insert NullLiteral(3541) into InfixExpression: !=(3542) at 1", "Insert ThrowStatement(3546) into Block(3547) at 0", "Insert SimpleName: rpcCallback(3549) into MethodInvocation(3551) at 0", "Insert SimpleName: get(3550) into MethodInvocation(3551) at 1", "Insert SimpleType: ServerRpcController(3647) into ClassInstanceCreation(3648) at 0", "Insert SimpleName: BlockingRpcCallback(3651) into SimpleType: BlockingRpcCallback(3652) at 0", "Insert SimpleName: MetaDataResponse(3653) into SimpleType: MetaDataResponse(3654) at 0", "Insert ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3661) into ClassInstanceCreation(3662) at 0", "Update SimpleName: getTable(3583) to GetTableRequest", "Move SimpleName: getTable(3583) into MethodInvocation(3670) at 0", "Insert SimpleName: newBuilder(3669) into MethodInvocation(3670) at 1", "Insert SimpleName: HBaseZeroCopyByteString(3675) into MethodInvocation(3678) at 0", "Insert SimpleName: wrap(3676) into MethodInvocation(3678) at 1", "Move SimpleName: nonNullTenantId(3584) into MethodInvocation(3678) at 2", "Insert SimpleName: HBaseZeroCopyByteString(3683) into MethodInvocation(3686) at 0", "Insert SimpleName: wrap(3684) into MethodInvocation(3686) at 1", "Move SimpleName: schemaBytes(3585) into MethodInvocation(3686) at 2", "Insert SimpleName: HBaseZeroCopyByteString(3691) into MethodInvocation(3694) at 0", "Insert SimpleName: wrap(3692) into MethodInvocation(3694) at 1", "Move SimpleName: tableBytes(3586) into MethodInvocation(3694) at 2", "Insert SimpleName: builder(3710) into MethodInvocation(3712) at 0", "Insert SimpleName: build(3711) into MethodInvocation(3712) at 1", "Insert SimpleName: controller(3716) into MethodInvocation(3718) at 0", "Insert SimpleName: getFailedOn(3717) into MethodInvocation(3718) at 1", "Insert MethodInvocation(3723) into ThrowStatement(3724) at 0", "Insert SimpleName: ServerRpcController(3853) into SimpleType: ServerRpcController(3854) at 0", "Insert SimpleName: controller(3855) into VariableDeclarationFragment(3859) at 0", "Insert ClassInstanceCreation(3858) into VariableDeclarationFragment(3859) at 1", "Insert SimpleType: BlockingRpcCallback(3862) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3865) at 0", "Insert SimpleType: MetaDataResponse(3864) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3865) at 1", "Insert SimpleName: rpcCallback(3866) into VariableDeclarationFragment(3873) at 0", "Insert ClassInstanceCreation(3872) into VariableDeclarationFragment(3873) at 1", "Insert QualifiedName: DropTableRequest.Builder(3875) into SimpleType: DropTableRequest.Builder(3876) at 0", "Insert SimpleName: builder(3877) into VariableDeclarationFragment(3881) at 0", "Insert MethodInvocation(3880) into VariableDeclarationFragment(3881) at 1", "Insert SimpleType: Mutation(3884) into SingleVariableDeclaration(3886) at 0", "Insert SimpleName: m(3885) into SingleVariableDeclaration(3886) at 1", "Insert VariableDeclarationStatement(3896) into Block(3904) at 0", "Insert ExpressionStatement(3903) into Block(3904) at 1", "Insert SimpleName: builder(3906) into MethodInvocation(3911) at 0", "Insert SimpleName: setTableType(3907) into MethodInvocation(3911) at 1", "Move MethodInvocation(3718) into MethodInvocation(3911) at 2", "Move SimpleName: instance(3713) into MethodInvocation(3920) at 0", "Move SimpleName: dropTable(3714) into MethodInvocation(3920) at 1", "Update SimpleName: tableMetaData(3715) to controller", "Move SimpleName: tableMetaData(3715) into MethodInvocation(3920) at 2", "Insert MethodInvocation(3918) into MethodInvocation(3920) at 3", "Insert SimpleName: rpcCallback(3919) into MethodInvocation(3920) at 4", "Insert MethodInvocation(3924) into InfixExpression: !=(3926) at 0", "Insert NullLiteral(3925) into InfixExpression: !=(3926) at 1", "Insert ThrowStatement(3930) into Block(3931) at 0", "Insert SimpleName: rpcCallback(3933) into MethodInvocation(3935) at 0", "Insert SimpleName: get(3934) into MethodInvocation(3935) at 1", "Insert SimpleName: ServerRpcController(4317) into SimpleType: ServerRpcController(4318) at 0", "Insert SimpleName: controller(4319) into VariableDeclarationFragment(4323) at 0", "Insert ClassInstanceCreation(4322) into VariableDeclarationFragment(4323) at 1", "Insert SimpleType: BlockingRpcCallback(4326) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(4329) at 0", "Insert SimpleType: MetaDataResponse(4328) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(4329) at 1", "Insert SimpleName: rpcCallback(4330) into VariableDeclarationFragment(4337) at 0", "Insert ClassInstanceCreation(4336) into VariableDeclarationFragment(4337) at 1", "Insert QualifiedName: AddColumnRequest.Builder(4339) into SimpleType: AddColumnRequest.Builder(4340) at 0", "Insert SimpleName: builder(4341) into VariableDeclarationFragment(4345) at 0", "Insert MethodInvocation(4344) into VariableDeclarationFragment(4345) at 1", "Insert SimpleType: Mutation(4348) into SingleVariableDeclaration(4350) at 0", "Insert SimpleName: m(4349) into SingleVariableDeclaration(4350) at 1", "Insert VariableDeclarationStatement(4360) into Block(4368) at 0", "Insert ExpressionStatement(4367) into Block(4368) at 1", "Move SimpleName: instance(4101) into MethodInvocation(4377) at 0", "Move SimpleName: addColumn(4102) into MethodInvocation(4377) at 1", "Update SimpleName: tableMetaData(4103) to controller", "Move SimpleName: tableMetaData(4103) into MethodInvocation(4377) at 2", "Insert MethodInvocation(4375) into MethodInvocation(4377) at 3", "Insert SimpleName: rpcCallback(4376) into MethodInvocation(4377) at 4", "Insert MethodInvocation(4381) into InfixExpression: !=(4383) at 0", "Insert NullLiteral(4382) into InfixExpression: !=(4383) at 1", "Insert ThrowStatement(4387) into Block(4388) at 0", "Insert SimpleName: rpcCallback(4390) into MethodInvocation(4392) at 0", "Insert SimpleName: get(4391) into MethodInvocation(4392) at 1", "Insert SimpleName: ServerRpcController(4512) into SimpleType: ServerRpcController(4513) at 0", "Insert SimpleName: controller(4514) into VariableDeclarationFragment(4518) at 0", "Insert ClassInstanceCreation(4517) into VariableDeclarationFragment(4518) at 1", "Insert SimpleType: BlockingRpcCallback(4521) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(4524) at 0", "Insert SimpleType: MetaDataResponse(4523) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(4524) at 1", "Insert SimpleName: rpcCallback(4525) into VariableDeclarationFragment(4532) at 0", "Insert ClassInstanceCreation(4531) into VariableDeclarationFragment(4532) at 1", "Insert QualifiedName: DropColumnRequest.Builder(4534) into SimpleType: DropColumnRequest.Builder(4535) at 0", "Insert SimpleName: builder(4536) into VariableDeclarationFragment(4540) at 0", "Insert MethodInvocation(4539) into VariableDeclarationFragment(4540) at 1", "Insert SimpleType: Mutation(4543) into SingleVariableDeclaration(4545) at 0", "Insert SimpleName: m(4544) into SingleVariableDeclaration(4545) at 1", "Insert VariableDeclarationStatement(4555) into Block(4563) at 0", "Insert ExpressionStatement(4562) into Block(4563) at 1", "Move SimpleName: instance(4224) into MethodInvocation(4572) at 0", "Move SimpleName: dropColumn(4225) into MethodInvocation(4572) at 1", "Update SimpleName: tableMetaData(4226) to controller", "Move SimpleName: tableMetaData(4226) into MethodInvocation(4572) at 2", "Insert MethodInvocation(4570) into MethodInvocation(4572) at 3", "Insert SimpleName: rpcCallback(4571) into MethodInvocation(4572) at 4", "Insert MethodInvocation(4576) into InfixExpression: !=(4578) at 0", "Insert NullLiteral(4577) into InfixExpression: !=(4578) at 1", "Insert ThrowStatement(4582) into Block(4583) at 0", "Insert SimpleName: rpcCallback(4585) into MethodInvocation(4587) at 0", "Insert SimpleName: get(4586) into MethodInvocation(4587) at 1", "Update SimpleName: MetaDataProtocol(4603) to MetaDataService", "Update SimpleName: Void(4605) to ClearCacheResponse", "Move MarkerAnnotation(4816) into MethodDeclaration(5082) at 0", "Update SimpleType: Void(4612) to ClearCacheResponse", "Move SimpleType: IOException(4826) into MethodDeclaration(5082) at 5", "Insert SimpleType: ServerRpcController(5286) into ClassInstanceCreation(5287) at 0", "Insert SimpleName: BlockingRpcCallback(5290) into SimpleType: BlockingRpcCallback(5291) at 0", "Insert SimpleName: MetaDataResponse(5292) into SimpleType: MetaDataResponse(5293) at 0", "Insert ParameterizedType: BlockingRpcCallback<MetaDataResponse>(5300) into ClassInstanceCreation(5301) at 0", "Insert SimpleName: UpdateIndexStateRequest(5307) into MethodInvocation(5309) at 0", "Insert SimpleName: newBuilder(5308) into MethodInvocation(5309) at 1", "Insert SimpleName: Mutation(5312) into SimpleType: Mutation(5313) at 0", "Insert SimpleType: MutationProto(5318) into VariableDeclarationStatement(5325) at 0", "Insert VariableDeclarationFragment(5324) into VariableDeclarationStatement(5325) at 1", "Insert MethodInvocation(5331) into ExpressionStatement(5332) at 0", "Insert SimpleName: builder(5338) into MethodInvocation(5340) at 0", "Insert SimpleName: build(5339) into MethodInvocation(5340) at 1", "Insert SimpleName: controller(5344) into MethodInvocation(5346) at 0", "Insert SimpleName: getFailedOn(5345) into MethodInvocation(5346) at 1", "Insert MethodInvocation(5351) into ThrowStatement(5352) at 0", "Insert SimpleName: TableName(888) into MethodInvocation(891) at 0", "Insert SimpleName: valueOf(889) into MethodInvocation(891) at 1", "Move SimpleName: tableName(871) into MethodInvocation(891) at 2", "Update SimpleName: MetaDataProtocol(2918) to MetaDataService", "Insert SimpleType: ServerRpcController(2946) into VariableDeclarationStatement(2952) at 0", "Insert VariableDeclarationFragment(2951) into VariableDeclarationStatement(2952) at 1", "Insert ParameterizedType: BlockingRpcCallback<GetVersionResponse>(2957) into VariableDeclarationStatement(2966) at 0", "Insert VariableDeclarationFragment(2965) into VariableDeclarationStatement(2966) at 1", "Insert SimpleType: GetVersionRequest.Builder(2968) into VariableDeclarationStatement(2974) at 0", "Insert VariableDeclarationFragment(2973) into VariableDeclarationStatement(2974) at 1", "Insert InfixExpression: !=(2988) into IfStatement(2994) at 0", "Insert Block(2993) into IfStatement(2994) at 1", "Insert MethodInvocation(2999) into ReturnStatement(3000) at 0", "Insert SimpleType: ServerRpcController(3480) into ClassInstanceCreation(3481) at 0", "Insert SimpleName: BlockingRpcCallback(3484) into SimpleType: BlockingRpcCallback(3485) at 0", "Insert SimpleName: MetaDataResponse(3486) into SimpleType: MetaDataResponse(3487) at 0", "Insert ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3494) into ClassInstanceCreation(3495) at 0", "Insert SimpleName: CreateTableRequest(3501) into MethodInvocation(3503) at 0", "Insert SimpleName: newBuilder(3502) into MethodInvocation(3503) at 1", "Insert SimpleName: Mutation(3506) into SimpleType: Mutation(3507) at 0", "Insert SimpleType: MutationProto(3512) into VariableDeclarationStatement(3519) at 0", "Insert VariableDeclarationFragment(3518) into VariableDeclarationStatement(3519) at 1", "Insert MethodInvocation(3525) into ExpressionStatement(3526) at 0", "Insert SimpleName: builder(3532) into MethodInvocation(3534) at 0", "Insert SimpleName: build(3533) into MethodInvocation(3534) at 1", "Insert SimpleName: controller(3538) into MethodInvocation(3540) at 0", "Insert SimpleName: getFailedOn(3539) into MethodInvocation(3540) at 1", "Insert MethodInvocation(3545) into ThrowStatement(3546) at 0", "Insert SimpleName: ServerRpcController(3646) into SimpleType: ServerRpcController(3647) at 0", "Insert SimpleType: BlockingRpcCallback(3658) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3661) at 0", "Insert SimpleType: MetaDataResponse(3660) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3661) at 1", "Insert SimpleName: controller(3721) into MethodInvocation(3723) at 0", "Insert SimpleName: getFailedOn(3722) into MethodInvocation(3723) at 1", "Insert SimpleType: ServerRpcController(3857) into ClassInstanceCreation(3858) at 0", "Insert SimpleName: BlockingRpcCallback(3861) into SimpleType: BlockingRpcCallback(3862) at 0", "Insert SimpleName: MetaDataResponse(3863) into SimpleType: MetaDataResponse(3864) at 0", "Insert ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3871) into ClassInstanceCreation(3872) at 0", "Insert SimpleName: DropTableRequest(3878) into MethodInvocation(3880) at 0", "Insert SimpleName: newBuilder(3879) into MethodInvocation(3880) at 1", "Insert SimpleName: Mutation(3883) into SimpleType: Mutation(3884) at 0", "Insert SimpleType: MutationProto(3889) into VariableDeclarationStatement(3896) at 0", "Insert VariableDeclarationFragment(3895) into VariableDeclarationStatement(3896) at 1", "Insert MethodInvocation(3902) into ExpressionStatement(3903) at 0", "Insert SimpleName: builder(3916) into MethodInvocation(3918) at 0", "Insert SimpleName: build(3917) into MethodInvocation(3918) at 1", "Insert SimpleName: controller(3922) into MethodInvocation(3924) at 0", "Insert SimpleName: getFailedOn(3923) into MethodInvocation(3924) at 1", "Insert MethodInvocation(3929) into ThrowStatement(3930) at 0", "Insert SimpleType: ServerRpcController(4321) into ClassInstanceCreation(4322) at 0", "Insert SimpleName: BlockingRpcCallback(4325) into SimpleType: BlockingRpcCallback(4326) at 0", "Insert SimpleName: MetaDataResponse(4327) into SimpleType: MetaDataResponse(4328) at 0", "Insert ParameterizedType: BlockingRpcCallback<MetaDataResponse>(4335) into ClassInstanceCreation(4336) at 0", "Insert SimpleName: AddColumnRequest(4342) into MethodInvocation(4344) at 0", "Insert SimpleName: newBuilder(4343) into MethodInvocation(4344) at 1", "Insert SimpleName: Mutation(4347) into SimpleType: Mutation(4348) at 0", "Insert SimpleType: MutationProto(4353) into VariableDeclarationStatement(4360) at 0", "Insert VariableDeclarationFragment(4359) into VariableDeclarationStatement(4360) at 1", "Insert MethodInvocation(4366) into ExpressionStatement(4367) at 0", "Insert SimpleName: builder(4373) into MethodInvocation(4375) at 0", "Insert SimpleName: build(4374) into MethodInvocation(4375) at 1", "Insert SimpleName: controller(4379) into MethodInvocation(4381) at 0", "Insert SimpleName: getFailedOn(4380) into MethodInvocation(4381) at 1", "Insert MethodInvocation(4386) into ThrowStatement(4387) at 0", "Insert SimpleType: ServerRpcController(4516) into ClassInstanceCreation(4517) at 0", "Insert SimpleName: BlockingRpcCallback(4520) into SimpleType: BlockingRpcCallback(4521) at 0", "Insert SimpleName: MetaDataResponse(4522) into SimpleType: MetaDataResponse(4523) at 0", "Insert ParameterizedType: BlockingRpcCallback<MetaDataResponse>(4530) into ClassInstanceCreation(4531) at 0", "Insert SimpleName: DropColumnRequest(4537) into MethodInvocation(4539) at 0", "Insert SimpleName: newBuilder(4538) into MethodInvocation(4539) at 1", "Update SimpleName: IOException(4222) to Mutation", "Move SimpleName: IOException(4222) into SimpleType: Mutation(4543) at 0", "Insert SimpleType: MutationProto(4548) into VariableDeclarationStatement(4555) at 0", "Insert VariableDeclarationFragment(4554) into VariableDeclarationStatement(4555) at 1", "Insert MethodInvocation(4561) into ExpressionStatement(4562) at 0", "Insert SimpleName: builder(4568) into MethodInvocation(4570) at 0", "Insert SimpleName: build(4569) into MethodInvocation(4570) at 1", "Insert SimpleName: controller(4574) into MethodInvocation(4576) at 0", "Insert SimpleName: getFailedOn(4575) into MethodInvocation(4576) at 1", "Insert MethodInvocation(4581) into ThrowStatement(4582) at 0", "Update SimpleName: Void(4611) to ClearCacheResponse", "Update SimpleType: MetaDataProtocol(4615) to MetaDataService", "Insert VariableDeclarationStatement(5034) into Block(5081) at 0", "Insert VariableDeclarationStatement(5048) into Block(5081) at 1", "Insert VariableDeclarationStatement(5056) into Block(5081) at 2", "Insert IfStatement(5076) into Block(5081) at 4", "Insert ReturnStatement(5080) into Block(5081) at 5", "Insert SimpleName: ServerRpcController(5285) into SimpleType: ServerRpcController(5286) at 0", "Insert SimpleType: BlockingRpcCallback(5297) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(5300) at 0", "Insert SimpleType: MetaDataResponse(5299) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(5300) at 1", "Insert SimpleName: MutationProto(5317) into SimpleType: MutationProto(5318) at 0", "Insert SimpleName: mp(5319) into VariableDeclarationFragment(5324) at 0", "Insert MethodInvocation(5323) into VariableDeclarationFragment(5324) at 1", "Insert SimpleName: builder(5326) into MethodInvocation(5331) at 0", "Insert SimpleName: addTableMetadataMutations(5327) into MethodInvocation(5331) at 1", "Insert MethodInvocation(5330) into MethodInvocation(5331) at 2", "Insert SimpleName: controller(5349) into MethodInvocation(5351) at 0", "Insert SimpleName: getFailedOn(5350) into MethodInvocation(5351) at 1", "Insert SimpleName: ServerRpcController(2945) into SimpleType: ServerRpcController(2946) at 0", "Insert SimpleName: controller(2947) into VariableDeclarationFragment(2951) at 0", "Insert ClassInstanceCreation(2950) into VariableDeclarationFragment(2951) at 1", "Update SimpleType: Batch.Callback(2933) to BlockingRpcCallback", "Move SimpleType: Batch.Callback(2933) into ParameterizedType: BlockingRpcCallback<GetVersionResponse>(2957) at 0", "Update SimpleType: Long(2935) to GetVersionResponse", "Move SimpleType: Long(2935) into ParameterizedType: BlockingRpcCallback<GetVersionResponse>(2957) at 1", "Insert SimpleName: rpcCallback(2958) into VariableDeclarationFragment(2965) at 0", "Insert ClassInstanceCreation(2964) into VariableDeclarationFragment(2965) at 1", "Insert QualifiedName: GetVersionRequest.Builder(2967) into SimpleType: GetVersionRequest.Builder(2968) at 0", "Insert SimpleName: builder(2969) into VariableDeclarationFragment(2973) at 0", "Insert MethodInvocation(2972) into VariableDeclarationFragment(2973) at 1", "Update SimpleName: results(2956) to instance", "Update SimpleName: put(2957) to getVersion", "Update SimpleName: region(2958) to controller", "Insert MethodInvocation(2980) into MethodInvocation(2982) at 3", "Insert SimpleName: rpcCallback(2981) into MethodInvocation(2982) at 4", "Insert MethodInvocation(2986) into InfixExpression: !=(2988) at 0", "Insert NullLiteral(2987) into InfixExpression: !=(2988) at 1", "Insert ThrowStatement(2992) into Block(2993) at 0", "Insert MethodInvocation(2997) into MethodInvocation(2999) at 0", "Insert SimpleName: getVersion(2998) into MethodInvocation(2999) at 1", "Insert SimpleName: ServerRpcController(3479) into SimpleType: ServerRpcController(3480) at 0", "Insert SimpleType: BlockingRpcCallback(3491) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3494) at 0", "Insert SimpleType: MetaDataResponse(3493) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3494) at 1", "Insert SimpleName: MutationProto(3511) into SimpleType: MutationProto(3512) at 0", "Insert SimpleName: mp(3513) into VariableDeclarationFragment(3518) at 0", "Insert MethodInvocation(3517) into VariableDeclarationFragment(3518) at 1", "Insert SimpleName: builder(3520) into MethodInvocation(3525) at 0", "Insert SimpleName: addTableMetadataMutations(3521) into MethodInvocation(3525) at 1", "Insert MethodInvocation(3524) into MethodInvocation(3525) at 2", "Insert SimpleName: controller(3543) into MethodInvocation(3545) at 0", "Insert SimpleName: getFailedOn(3544) into MethodInvocation(3545) at 1", "Insert SimpleName: BlockingRpcCallback(3657) into SimpleType: BlockingRpcCallback(3658) at 0", "Insert SimpleName: MetaDataResponse(3659) into SimpleType: MetaDataResponse(3660) at 0", "Insert SimpleName: ServerRpcController(3856) into SimpleType: ServerRpcController(3857) at 0", "Insert SimpleType: BlockingRpcCallback(3868) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3871) at 0", "Insert SimpleType: MetaDataResponse(3870) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(3871) at 1", "Insert SimpleName: MutationProto(3888) into SimpleType: MutationProto(3889) at 0", "Insert SimpleName: mp(3890) into VariableDeclarationFragment(3895) at 0", "Insert MethodInvocation(3894) into VariableDeclarationFragment(3895) at 1", "Insert SimpleName: builder(3897) into MethodInvocation(3902) at 0", "Insert SimpleName: addTableMetadataMutations(3898) into MethodInvocation(3902) at 1", "Insert MethodInvocation(3901) into MethodInvocation(3902) at 2", "Insert SimpleName: controller(3927) into MethodInvocation(3929) at 0", "Insert SimpleName: getFailedOn(3928) into MethodInvocation(3929) at 1", "Insert SimpleName: ServerRpcController(4320) into SimpleType: ServerRpcController(4321) at 0", "Insert SimpleType: BlockingRpcCallback(4332) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(4335) at 0", "Insert SimpleType: MetaDataResponse(4334) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(4335) at 1", "Insert SimpleName: MutationProto(4352) into SimpleType: MutationProto(4353) at 0", "Insert SimpleName: mp(4354) into VariableDeclarationFragment(4359) at 0", "Insert MethodInvocation(4358) into VariableDeclarationFragment(4359) at 1", "Insert SimpleName: builder(4361) into MethodInvocation(4366) at 0", "Insert SimpleName: addTableMetadataMutations(4362) into MethodInvocation(4366) at 1", "Insert MethodInvocation(4365) into MethodInvocation(4366) at 2", "Insert SimpleName: controller(4384) into MethodInvocation(4386) at 0", "Insert SimpleName: getFailedOn(4385) into MethodInvocation(4386) at 1", "Insert SimpleName: ServerRpcController(4515) into SimpleType: ServerRpcController(4516) at 0", "Insert SimpleType: BlockingRpcCallback(4527) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(4530) at 0", "Insert SimpleType: MetaDataResponse(4529) into ParameterizedType: BlockingRpcCallback<MetaDataResponse>(4530) at 1", "Insert SimpleName: MutationProto(4547) into SimpleType: MutationProto(4548) at 0", "Insert SimpleName: mp(4549) into VariableDeclarationFragment(4554) at 0", "Insert MethodInvocation(4553) into VariableDeclarationFragment(4554) at 1", "Insert SimpleName: builder(4556) into MethodInvocation(4561) at 0", "Insert SimpleName: addTableMetadataMutations(4557) into MethodInvocation(4561) at 1", "Insert MethodInvocation(4560) into MethodInvocation(4561) at 2", "Insert SimpleName: controller(4579) into MethodInvocation(4581) at 0", "Insert SimpleName: getFailedOn(4580) into MethodInvocation(4581) at 1", "Update SimpleName: MetaDataProtocol(4614) to MetaDataService", "Insert SimpleType: ServerRpcController(5028) into VariableDeclarationStatement(5034) at 0", "Insert VariableDeclarationFragment(5033) into VariableDeclarationStatement(5034) at 1", "Insert ParameterizedType: BlockingRpcCallback<ClearCacheResponse>(5039) into VariableDeclarationStatement(5048) at 0", "Insert VariableDeclarationFragment(5047) into VariableDeclarationStatement(5048) at 1", "Insert SimpleType: ClearCacheRequest.Builder(5050) into VariableDeclarationStatement(5056) at 0", "Insert VariableDeclarationFragment(5055) into VariableDeclarationStatement(5056) at 1", "Insert InfixExpression: !=(5070) into IfStatement(5076) at 0", "Insert Block(5075) into IfStatement(5076) at 1", "Insert MethodInvocation(5079) into ReturnStatement(5080) at 0", "Insert SimpleName: BlockingRpcCallback(5296) into SimpleType: BlockingRpcCallback(5297) at 0", "Insert SimpleName: MetaDataResponse(5298) into SimpleType: MetaDataResponse(5299) at 0", "Insert SimpleName: ProtobufUtil(5320) into MethodInvocation(5323) at 0", "Insert SimpleName: toProto(5321) into MethodInvocation(5323) at 1", "Insert SimpleName: m(5322) into MethodInvocation(5323) at 2", "Insert SimpleName: mp(5328) into MethodInvocation(5330) at 0", "Insert SimpleName: toByteString(5329) into MethodInvocation(5330) at 1", "Insert SimpleType: ServerRpcController(2949) into ClassInstanceCreation(2950) at 0", "Insert SimpleName: BlockingRpcCallback(2953) into SimpleType: BlockingRpcCallback(2954) at 0", "Update SimpleName: Long(2934) to GetVersionResponse", "Insert ParameterizedType: BlockingRpcCallback<GetVersionResponse>(2963) into ClassInstanceCreation(2964) at 0", "Insert SimpleName: GetVersionRequest(2970) into MethodInvocation(2972) at 0", "Insert SimpleName: newBuilder(2971) into MethodInvocation(2972) at 1", "Update SimpleName: value(2959) to builder", "Move SimpleName: value(2959) into MethodInvocation(2980) at 0", "Insert SimpleName: build(2979) into MethodInvocation(2980) at 1", "Insert SimpleName: controller(2984) into MethodInvocation(2986) at 0", "Insert SimpleName: getFailedOn(2985) into MethodInvocation(2986) at 1", "Insert MethodInvocation(2991) into ThrowStatement(2992) at 0", "Insert SimpleName: rpcCallback(2995) into MethodInvocation(2997) at 0", "Insert SimpleName: get(2996) into MethodInvocation(2997) at 1", "Insert SimpleName: BlockingRpcCallback(3490) into SimpleType: BlockingRpcCallback(3491) at 0", "Insert SimpleName: MetaDataResponse(3492) into SimpleType: MetaDataResponse(3493) at 0", "Insert SimpleName: ProtobufUtil(3514) into MethodInvocation(3517) at 0", "Insert SimpleName: toProto(3515) into MethodInvocation(3517) at 1", "Insert SimpleName: m(3516) into MethodInvocation(3517) at 2", "Insert SimpleName: mp(3522) into MethodInvocation(3524) at 0", "Insert SimpleName: toByteString(3523) into MethodInvocation(3524) at 1", "Insert SimpleName: BlockingRpcCallback(3867) into SimpleType: BlockingRpcCallback(3868) at 0", "Insert SimpleName: MetaDataResponse(3869) into SimpleType: MetaDataResponse(3870) at 0", "Insert SimpleName: ProtobufUtil(3891) into MethodInvocation(3894) at 0", "Insert SimpleName: toProto(3892) into MethodInvocation(3894) at 1", "Insert SimpleName: m(3893) into MethodInvocation(3894) at 2", "Insert SimpleName: mp(3899) into MethodInvocation(3901) at 0", "Insert SimpleName: toByteString(3900) into MethodInvocation(3901) at 1", "Insert SimpleName: BlockingRpcCallback(4331) into SimpleType: BlockingRpcCallback(4332) at 0", "Insert SimpleName: MetaDataResponse(4333) into SimpleType: MetaDataResponse(4334) at 0", "Insert SimpleName: ProtobufUtil(4355) into MethodInvocation(4358) at 0", "Insert SimpleName: toProto(4356) into MethodInvocation(4358) at 1", "Insert SimpleName: m(4357) into MethodInvocation(4358) at 2", "Insert SimpleName: mp(4363) into MethodInvocation(4365) at 0", "Insert SimpleName: toByteString(4364) into MethodInvocation(4365) at 1", "Insert SimpleName: BlockingRpcCallback(4526) into SimpleType: BlockingRpcCallback(4527) at 0", "Insert SimpleName: MetaDataResponse(4528) into SimpleType: MetaDataResponse(4529) at 0", "Insert SimpleName: ProtobufUtil(4550) into MethodInvocation(4553) at 0", "Insert SimpleName: toProto(4551) into MethodInvocation(4553) at 1", "Insert SimpleName: m(4552) into MethodInvocation(4553) at 2", "Insert SimpleName: mp(4558) into MethodInvocation(4560) at 0", "Insert SimpleName: toByteString(4559) into MethodInvocation(4560) at 1", "Insert SimpleName: ServerRpcController(5027) into SimpleType: ServerRpcController(5028) at 0", "Insert SimpleName: controller(5029) into VariableDeclarationFragment(5033) at 0", "Insert ClassInstanceCreation(5032) into VariableDeclarationFragment(5033) at 1", "Insert SimpleType: BlockingRpcCallback(5036) into ParameterizedType: BlockingRpcCallback<ClearCacheResponse>(5039) at 0", "Insert SimpleType: ClearCacheResponse(5038) into ParameterizedType: BlockingRpcCallback<ClearCacheResponse>(5039) at 1", "Insert SimpleName: rpcCallback(5040) into VariableDeclarationFragment(5047) at 0", "Insert ClassInstanceCreation(5046) into VariableDeclarationFragment(5047) at 1", "Insert QualifiedName: ClearCacheRequest.Builder(5049) into SimpleType: ClearCacheRequest.Builder(5050) at 0", "Insert SimpleName: builder(5051) into VariableDeclarationFragment(5055) at 0", "Insert MethodInvocation(5054) into VariableDeclarationFragment(5055) at 1", "Insert SimpleName: controller(5059) into MethodInvocation(5064) at 2", "Insert MethodInvocation(5062) into MethodInvocation(5064) at 3", "Insert SimpleName: rpcCallback(5063) into MethodInvocation(5064) at 4", "Insert MethodInvocation(5068) into InfixExpression: !=(5070) at 0", "Insert NullLiteral(5069) into InfixExpression: !=(5070) at 1", "Insert ThrowStatement(5074) into Block(5075) at 0", "Insert SimpleName: rpcCallback(5077) into MethodInvocation(5079) at 0", "Insert SimpleName: get(5078) into MethodInvocation(5079) at 1", "Insert SimpleName: ServerRpcController(2948) into SimpleType: ServerRpcController(2949) at 0", "Insert SimpleType: BlockingRpcCallback(2960) into ParameterizedType: BlockingRpcCallback<GetVersionResponse>(2963) at 0", "Insert SimpleType: GetVersionResponse(2962) into ParameterizedType: BlockingRpcCallback<GetVersionResponse>(2963) at 1", "Insert SimpleName: controller(2989) into MethodInvocation(2991) at 0", "Insert SimpleName: getFailedOn(2990) into MethodInvocation(2991) at 1", "Insert SimpleType: ServerRpcController(5031) into ClassInstanceCreation(5032) at 0", "Insert SimpleName: BlockingRpcCallback(5035) into SimpleType: BlockingRpcCallback(5036) at 0", "Insert SimpleName: ClearCacheResponse(5037) into SimpleType: ClearCacheResponse(5038) at 0", "Insert ParameterizedType: BlockingRpcCallback<ClearCacheResponse>(5045) into ClassInstanceCreation(5046) at 0", "Insert SimpleName: ClearCacheRequest(5052) into MethodInvocation(5054) at 0", "Insert SimpleName: newBuilder(5053) into MethodInvocation(5054) at 1", "Insert SimpleName: builder(5060) into MethodInvocation(5062) at 0", "Insert SimpleName: build(5061) into MethodInvocation(5062) at 1", "Insert SimpleName: controller(5066) into MethodInvocation(5068) at 0", "Insert SimpleName: getFailedOn(5067) into MethodInvocation(5068) at 1", "Insert MethodInvocation(5073) into ThrowStatement(5074) at 0", "Insert SimpleName: BlockingRpcCallback(2959) into SimpleType: BlockingRpcCallback(2960) at 0", "Update SimpleName: Long(2952) to GetVersionResponse", "Move SimpleName: Long(2952) into SimpleType: GetVersionResponse(2962) at 0", "Insert SimpleName: ServerRpcController(5030) into SimpleType: ServerRpcController(5031) at 0", "Insert SimpleType: BlockingRpcCallback(5042) into ParameterizedType: BlockingRpcCallback<ClearCacheResponse>(5045) at 0", "Insert SimpleType: ClearCacheResponse(5044) into ParameterizedType: BlockingRpcCallback<ClearCacheResponse>(5045) at 1", "Insert SimpleName: controller(5071) into MethodInvocation(5073) at 0", "Insert SimpleName: getFailedOn(5072) into MethodInvocation(5073) at 1", "Insert SimpleName: BlockingRpcCallback(5041) into SimpleType: BlockingRpcCallback(5042) at 0", "Insert SimpleName: ClearCacheResponse(5043) into SimpleType: ClearCacheResponse(5044) at 0", "Delete Modifier: final(215)", "Delete SimpleName: tableName(1656)", "Delete QualifiedName: Batch.Callback(2932)", "Delete SimpleName: Maps(2887)", "Delete SimpleName: newTreeMap(2888)", "Delete QualifiedName: Bytes.BYTES_COMPARATOR(2889)", "Delete MethodInvocation(2890)", "Delete VariableDeclarationFragment(2891)", "Delete VariableDeclarationStatement(2892)", "Delete SimpleName: regionKeys(2898)", "Delete QualifiedName: PhoenixDatabaseMetaData.TYPE_TABLE_NAME_BYTES(2899)", "Delete ThisExpression(2900)", "Delete SimpleName: getDelegate(2901)", "Delete MethodInvocation(2902)", "Delete SimpleName: getExecutor(2903)", "Delete MethodInvocation(2904)", "Delete SimpleName: Override(2912)", "Delete MarkerAnnotation(2913)", "Delete SimpleName: instance(2924)", "Delete SimpleName: getVersion(2925)", "Delete MethodInvocation(2926)", "Delete ReturnStatement(2927)", "Delete Block(2928)", "Delete MethodDeclaration(2929)", "Delete AnonymousClassDeclaration(2930)", "Delete ClassInstanceCreation(2931)", "Delete ParameterizedType: Batch.Callback<Long>(2936)", "Delete Modifier: public(2939)", "Delete PrimitiveType: void(2940)", "Delete SimpleName: update(2941)", "Delete PrimitiveType: byte(2942)", "Delete Dimension(2943)", "Delete ArrayType: byte[](2944)", "Delete SimpleName: region(2945)", "Delete SingleVariableDeclaration(2946)", "Delete PrimitiveType: byte(2947)", "Delete Dimension(2948)", "Delete ArrayType: byte[](2949)", "Delete SimpleName: row(2950)", "Delete SingleVariableDeclaration(2951)", "Delete SimpleType: Long(2953)", "Delete SimpleName: value(2954)", "Delete SingleVariableDeclaration(2955)", "Delete Block(2962)", "Delete MethodDeclaration(2963)", "Delete AnonymousClassDeclaration(2964)", "Delete ClassInstanceCreation(2965)", "Delete MethodInvocation(2966)", "Delete ExpressionStatement(2967)", "Delete SimpleName: HRegionLocation(3134)", "Delete SimpleType: HRegionLocation(3135)", "Delete SimpleName: regionLocation(3136)", "Delete SimpleName: retried(3137)", "Delete QualifiedName: PhoenixDatabaseMetaData.TYPE_TABLE_NAME_BYTES(3140)", "Delete MethodInvocation(3142)", "Delete SimpleName: locateRegion(3144)", "Delete MethodInvocation(3147)", "Delete ConditionalExpression(3148)", "Delete VariableDeclarationFragment(3149)", "Delete VariableDeclarationStatement(3150)", "Delete SimpleType: List(3152)", "Delete PrimitiveType: byte(3153)", "Delete Dimension(3154)", "Delete ArrayType: byte[](3155)", "Delete ParameterizedType: List<byte[]>(3156)", "Delete SimpleName: regionKeys(3157)", "Delete SimpleName: Collections(3158)", "Delete SimpleName: singletonList(3159)", "Delete SimpleName: regionLocation(3160)", "Delete SimpleName: getRegionInfo(3161)", "Delete MethodInvocation(3162)", "Delete MethodInvocation(3164)", "Delete MethodInvocation(3165)", "Delete SimpleName: Maps(3178)", "Delete SimpleName: newHashMapWithExpectedSize(3179)", "Delete NumberLiteral: 1(3180)", "Delete MethodInvocation(3181)", "Delete VariableDeclarationFragment(3182)", "Delete VariableDeclarationStatement(3183)", "Delete QualifiedName: PhoenixDatabaseMetaData.TYPE_TABLE_NAME_BYTES(3190)", "Delete ThisExpression(3191)", "Delete MethodInvocation(3193)", "Delete SimpleName: getExecutor(3194)", "Delete MethodInvocation(3195)", "Delete QualifiedName: Batch.Callback(3197)", "Delete SimpleType: Batch.Callback(3198)", "Delete SimpleName: MetaDataMutationResult(3199)", "Delete SimpleType: MetaDataMutationResult(3200)", "Delete ParameterizedType: Batch.Callback<MetaDataMutationResult>(3201)", "Delete SimpleName: Override(3202)", "Delete MarkerAnnotation(3203)", "Delete Modifier: public(3204)", "Delete PrimitiveType: void(3205)", "Delete SimpleName: update(3206)", "Delete PrimitiveType: byte(3207)", "Delete Dimension(3208)", "Delete ArrayType: byte[](3209)", "Delete SimpleName: region(3210)", "Delete SingleVariableDeclaration(3211)", "Delete PrimitiveType: byte(3212)", "Delete Dimension(3213)", "Delete ArrayType: byte[](3214)", "Delete SimpleName: row(3215)", "Delete SingleVariableDeclaration(3216)", "Delete SimpleName: MetaDataMutationResult(3217)", "Delete SimpleType: MetaDataMutationResult(3218)", "Delete SimpleName: value(3219)", "Delete SingleVariableDeclaration(3220)", "Delete SimpleName: results(3221)", "Delete SimpleName: put(3222)", "Delete SimpleName: region(3223)", "Delete SimpleName: value(3224)", "Delete MethodInvocation(3225)", "Delete ExpressionStatement(3226)", "Delete Block(3227)", "Delete MethodDeclaration(3228)", "Delete AnonymousClassDeclaration(3229)", "Delete ClassInstanceCreation(3230)", "Delete MethodInvocation(3231)", "Delete ExpressionStatement(3232)", "Delete SimpleName: result(3258)", "Delete SimpleName: result(3268)", "Delete MethodInvocation(3490)", "Delete ReturnStatement(3491)", "Delete SimpleName: instance(3582)", "Delete MethodInvocation(3589)", "Delete ReturnStatement(3590)", "Delete MethodInvocation(3719)", "Delete ReturnStatement(3720)", "Delete MethodInvocation(4104)", "Delete ReturnStatement(4105)", "Delete SimpleName: MetaDataMutationResult(4120)", "Delete SimpleType: MetaDataMutationResult(4121)", "Delete MethodInvocation(4227)", "Delete ReturnStatement(4228)", "Delete Block(4229)", "Delete SimpleName: HBaseFactoryProvider(405)", "Delete MethodInvocation(407)", "Delete NullLiteral(4624)", "Delete ReturnStatement(4625)", "Delete MethodInvocation(4830)", "Delete ReturnStatement(4831)"]}}, {"ConnectionlessQueryServicesImpl_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.ServerName to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: org.apache.hadoop.hbase.TableName to ImportDeclaration at 0"]}, {"root": "UPDATE from org.apache.hadoop.hbase.KeyValue to org.apache.hadoop.hbase.Cell", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.KeyValue from org.apache.hadoop.hbase.KeyValue to org.apache.hadoop.hbase.Cell"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 2", "operations": ["INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: valueOf to MethodInvocation at 1", "INS SimpleName: ServerName to MethodInvocation at 0", "INS QualifiedName: HConstants.DEFAULT_REGIONSERVER_PORT to MethodInvocation at 3", "INS StringLiteral: \"localhost\" to MethodInvocation at 2", "INS NumberLiteral: 0 to MethodInvocation at 4"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS SimpleName: TableName to MethodInvocation at 0", "INS SimpleName: tableName to MethodInvocation at 2", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: valueOf to MethodInvocation at 1"]}, {"root": "UPDATE from getFamilyMap to getFamilyCellMap", "operations": ["UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap"]}, {"root": "UPDATE from getBuffer to getValueArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getValueArray"]}, {"root": "DEL SimpleName: tableName", "operations": ["DEL SimpleName: tableName"]}, {"root": "DEL StringLiteral: \"localhost\"", "operations": ["DEL StringLiteral: \"localhost\""]}]}}, {"ConnectionlessQueryServicesImpl_diff": {"operations": ["Move ImportDeclaration(23) into CompilationUnit(1468) at 7", "Insert ImportDeclaration(25) into CompilationUnit(1468) at 12", "Insert ImportDeclaration(27) into CompilationUnit(1468) at 13", "Update QualifiedName: org.apache.hadoop.hbase.KeyValue(22) to org.apache.hadoop.hbase.Cell", "Insert QualifiedName: org.apache.hadoop.hbase.ServerName(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.TableName(26) into ImportDeclaration(27) at 0", "Update SimpleType: KeyValue(884) to Cell", "Update SimpleName: KeyValue(883) to Cell", "Insert MethodInvocation(289) into ClassInstanceCreation(292) at 2", "Insert MethodInvocation(280) into ClassInstanceCreation(283) at 1", "Insert SimpleName: ServerName(284) into MethodInvocation(289) at 0", "Insert SimpleName: valueOf(285) into MethodInvocation(289) at 1", "Insert StringLiteral: \"localhost\"(286) into MethodInvocation(289) at 2", "Insert QualifiedName: HConstants.DEFAULT_REGIONSERVER_PORT(287) into MethodInvocation(289) at 3", "Insert NumberLiteral: 0(288) into MethodInvocation(289) at 4", "Insert SimpleName: TableName(277) into MethodInvocation(280) at 0", "Insert SimpleName: valueOf(278) into MethodInvocation(280) at 1", "Insert SimpleName: tableName(279) into MethodInvocation(280) at 2", "Update SimpleName: getFamilyMap(890) to getFamilyCellMap", "Update SimpleName: getBuffer(906) to getValueArray", "Delete SimpleName: tableName(273)", "Delete StringLiteral: \"localhost\"(277)"]}}, {"HConnectionFactory_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 3"]}, {"root": "UPDATE from org.apache.hadoop.hbase.ZooKeeperConnectionException to java.io.IOException", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.ZooKeeperConnectionException from org.apache.hadoop.hbase.ZooKeeperConnectionException to java.io.IOException"]}, {"root": "UPDATE from ZooKeeperConnectionException to IOException", "operations": ["UPD SimpleName: ZooKeeperConnectionException from ZooKeeperConnectionException to IOException", "UPD SimpleType: ZooKeeperConnectionException from ZooKeeperConnectionException to IOException", "UPD SimpleName: ZooKeeperConnectionException from ZooKeeperConnectionException to IOException", "UPD SimpleType: ZooKeeperConnectionException from ZooKeeperConnectionException to IOException"]}]}}, {"HConnectionFactory_diff": {"operations": ["Move ImportDeclaration(3) into CompilationUnit(63) at 3", "Update QualifiedName: org.apache.hadoop.hbase.ZooKeeperConnectionException(4) to java.io.IOException", "Update SimpleType: ZooKeeperConnectionException(33) to IOException", "Update SimpleName: ZooKeeperConnectionException(32) to IOException", "Update SimpleType: ZooKeeperConnectionException(53) to IOException", "Update SimpleName: ZooKeeperConnectionException(52) to IOException"]}}, {"QueryServicesOptions_cluster": {"actions": [{"root": "UPDATE from org.apache.hadoop.hbase.regionserver.wal.WALEditCodec to org.apache.hadoop.hbase.regionserver.wal.WALCellCodec", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.regionserver.wal.WALEditCodec from org.apache.hadoop.hbase.regionserver.wal.WALEditCodec to org.apache.hadoop.hbase.regionserver.wal.WALCellCodec"]}, {"root": "UPDATE from WALEditCodec.WAL_EDIT_CODEC_CLASS_KEY to WALCellCodec.WAL_CELL_CODEC_CLASS_KEY", "operations": ["UPD QualifiedName: WALEditCodec.WAL_EDIT_CODEC_CLASS_KEY from WALEditCodec.WAL_EDIT_CODEC_CLASS_KEY to WALCellCodec.WAL_CELL_CODEC_CLASS_KEY"]}]}}, {"QueryServicesOptions_diff": {"operations": ["Update QualifiedName: org.apache.hadoop.hbase.regionserver.wal.WALEditCodec(76) to org.apache.hadoop.hbase.regionserver.wal.WALCellCodec", "Update QualifiedName: WALEditCodec.WAL_EDIT_CODEC_CLASS_KEY(1404) to WALCellCodec.WAL_CELL_CODEC_CLASS_KEY"]}}, {"DelegateColumn_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL PrimitiveType: void", "DEL SimpleName: Override", "DEL MarkerAnnotation", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleType: DataInput", "DEL SimpleName: getDelegate", "DEL Block", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: readFields", "DEL SimpleName: DataInput", "DEL SimpleType: IOException", "DEL SimpleName: readFields", "DEL Modifier: public", "DEL SimpleName: input", "DEL SimpleName: IOException", "DEL ExpressionStatement", "DEL SimpleName: input"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: output", "DEL MethodInvocation", "DEL SimpleName: write", "DEL SimpleName: output", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL Modifier: public", "DEL Block", "DEL SimpleName: IOException", "DEL PrimitiveType: void", "DEL SimpleType: IOException", "DEL SimpleName: Override", "DEL SingleVariableDeclaration", "DEL SimpleName: getDelegate", "DEL MarkerAnnotation", "DEL SimpleType: DataOutput", "DEL SimpleName: write", "DEL MethodInvocation", "DEL SimpleName: DataOutput"]}]}}, {"DelegateColumn_diff": {"operations": ["Delete SimpleName: Override(77)", "Delete MarkerAnnotation(78)", "Delete Modifier: public(79)", "Delete PrimitiveType: void(80)", "Delete SimpleName: readFields(81)", "Delete SimpleName: DataInput(82)", "Delete SimpleType: DataInput(83)", "Delete SimpleName: input(84)", "Delete SingleVariableDeclaration(85)", "Delete SimpleName: IOException(86)", "Delete SimpleType: IOException(87)", "Delete SimpleName: getDelegate(88)", "Delete MethodInvocation(89)", "Delete SimpleName: readFields(90)", "Delete SimpleName: input(91)", "Delete MethodInvocation(92)", "Delete ExpressionStatement(93)", "Delete Block(94)", "Delete MethodDeclaration(95)", "Delete SimpleName: Override(96)", "Delete MarkerAnnotation(97)", "Delete Modifier: public(98)", "Delete PrimitiveType: void(99)", "Delete SimpleName: write(100)", "Delete SimpleName: DataOutput(101)", "Delete SimpleType: DataOutput(102)", "Delete SimpleName: output(103)", "Delete SingleVariableDeclaration(104)", "Delete SimpleName: IOException(105)", "Delete SimpleType: IOException(106)", "Delete SimpleName: getDelegate(107)", "Delete MethodInvocation(108)", "Delete SimpleName: write(109)", "Delete SimpleName: output(110)", "Delete MethodInvocation(111)", "Delete ExpressionStatement(112)", "Delete Block(113)", "Delete MethodDeclaration(114)"]}}, {"MetaDataClient_cluster": {"actions": [{"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}]}}, {"MetaDataClient_diff": {"operations": ["Delete NullLiteral(5278)", "Delete NullLiteral(5313)"]}}, {"PColumn_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.Writable"]}, {"root": "DEL SimpleType: Writable", "operations": ["DEL SimpleType: Writable", "DEL SimpleName: Writable"]}]}}, {"PColumn_diff": {"operations": ["Delete QualifiedName: org.apache.hadoop.io.Writable(2)", "Delete ImportDeclaration(3)", "Delete SimpleName: Writable(13)", "Delete SimpleType: Writable(14)"]}}, {"PColumnImpl_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 8"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 33"]}, {"root": "UPDATE from org.apache.hadoop.hbase.util.Bytes to com.google.protobuf.HBaseZeroCopyByteString", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.util.Bytes from org.apache.hadoop.hbase.util.Bytes to com.google.protobuf.HBaseZeroCopyByteString"]}, {"root": "UPDATE from org.apache.phoenix.util.ByteUtil to org.apache.phoenix.coprocessor.generated.PTableProtos", "operations": ["UPD QualifiedName: org.apache.phoenix.util.ByteUtil from org.apache.phoenix.util.ByteUtil to org.apache.phoenix.coprocessor.generated.PTableProtos"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 32", "operations": ["INS SimpleName: column to TagElement: @param at 0", "INS TextElement: Create a PColumn instance from PBed PColumn instance to TagElement at 0", "INS SimpleName: PColumn to SimpleType: PColumn at 0", "INS Modifier: static to MethodDeclaration at 2", "INS Javadoc to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 32", "INS TagElement: @param to Javadoc at 1", "INS TagElement to Javadoc at 0", "INS SimpleType: PColumn to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "UPDATE from readFields to createFromProto", "operations": ["UPD SimpleName: readFields from readFields to createFromProto"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 6", "MOV SimpleName: readFields to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS Modifier: static to MethodDeclaration at 2", "operations": ["INS Modifier: static to MethodDeclaration at 2"]}, {"root": "INS SimpleType: PTableProtos.PColumn to MethodDeclaration at 3", "operations": ["INS QualifiedName: PTableProtos.PColumn to SimpleType: PTableProtos.PColumn at 0", "INS SimpleType: PTableProtos.PColumn to MethodDeclaration at 3"]}, {"root": "UPDATE from write to toProto", "operations": ["UPD SimpleName: write from write to toProto"]}, {"root": "INS Block to MethodDeclaration at 7", "operations": ["INS SimpleName: setMaxLength to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS QualifiedName: PTableProtos.PColumn.Builder to SimpleType: PTableProtos.PColumn.Builder at 0", "INS ReturnStatement to Block at 10", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS Block to MethodDeclaration at 7", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: setScale to MethodInvocation at 1", "INS SimpleName: getMaxLength to MethodInvocation at 1", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS IfStatement to Block at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: column to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: getScale to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 9", "INS Block to IfStatement at 1", "INS SimpleName: column to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS IfStatement to Block at 2", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS NullLiteral to InfixExpression: != at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: column to MethodInvocation at 0", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleType: PTableProtos.PColumn.Builder to VariableDeclarationStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS QualifiedName: PTableProtos.PColumn to MethodInvocation at 0", "INS SimpleName: getScale to MethodInvocation at 1", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getFamilyName to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: column to MethodInvocation at 0", "INS IfStatement to Block at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getArraySize to MethodInvocation at 1", "INS SimpleName: column to MethodInvocation at 0"]}, {"root": "UPDATE from DataInput to PTableProtos.PColumn", "operations": ["UPD SimpleType: DataInput from DataInput to PTableProtos.PColumn"]}, {"root": "UPDATE from WritableUtils to column", "operations": ["UPD SimpleName: WritableUtils from WritableUtils to column", "UPD SimpleName: input from input to column", "UPD SimpleName: WritableUtils from WritableUtils to column", "UPD SimpleName: output from output to column", "UPD SimpleName: Bytes from Bytes to column", "UPD SimpleName: output from output to column", "UPD SimpleName: WritableUtils from WritableUtils to column", "UPD SimpleName: output from output to column", "UPD SimpleName: output from output to column", "UPD SimpleName: Bytes from Bytes to column", "UPD SimpleName: WritableUtils from WritableUtils to column", "UPD SimpleName: WritableUtils from WritableUtils to column", "UPD SimpleName: input from input to column", "UPD SimpleName: WritableUtils from WritableUtils to column", "UPD SimpleName: writeBoolean from writeBoolean to column", "UPD SimpleName: WritableUtils from WritableUtils to column"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS VariableDeclarationStatement to Block at 2", "INS NullLiteral to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS SimpleName: column to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to Block at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: familyName to Assignment: = at 0", "INS MethodInvocation to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: toByteArray to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 7", "operations": ["INS VariableDeclarationStatement to Block at 7", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 8", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: maxLength to Assignment: = at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: column to MethodInvocation at 0", "INS IfStatement to Block at 8", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: getMaxLength to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 9", "operations": ["INS VariableDeclarationStatement to Block at 9", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 10", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: scale to Assignment: = at 0", "INS SimpleName: column to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 10", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: getScale to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 16", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleType: Integer to VariableDeclarationStatement at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS VariableDeclarationStatement to Block at 16", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS IfStatement to Block at 17", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: column to MethodInvocation at 0", "INS SimpleName: getArraySize to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to Assignment: = at 1", "INS IfStatement to Block at 17", "INS SimpleName: arraySize to Assignment: = at 0", "INS MethodInvocation to IfStatement at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS ReturnStatement to Block at 18", "operations": ["INS SimpleName: arraySize to ClassInstanceCreation at 9", "INS SimpleType: PColumnImpl to ClassInstanceCreation at 0", "INS SimpleName: columnName to ClassInstanceCreation at 1", "INS SimpleName: position to ClassInstanceCreation at 7", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: familyName to ClassInstanceCreation at 2", "INS SimpleName: dataType to ClassInstanceCreation at 3", "INS SimpleName: columnModifier to ClassInstanceCreation at 8", "INS ReturnStatement to Block at 18", "INS SimpleName: maxLength to ClassInstanceCreation at 4", "INS SimpleName: scale to ClassInstanceCreation at 5", "INS SimpleName: PColumnImpl to SimpleType: PColumnImpl at 0", "INS SimpleName: nullable to ClassInstanceCreation at 6"]}, {"root": "UPDATE from DataOutput to PColumn", "operations": ["UPD SimpleType: DataOutput from DataOutput to PColumn", "UPD SimpleName: DataOutput from DataOutput to PColumn"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3", "MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 6", "MOV ExpressionStatement to Block at 8", "MOV ExpressionStatement to Block at 7"]}, {"root": "INS QualifiedName: PTableProtos.PColumn to SimpleType: DataInput at 0", "operations": ["INS QualifiedName: PTableProtos.PColumn to SimpleType: DataInput at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: byte[] to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: PName to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Integer to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Integer to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from familyNameBytes to familyName", "operations": ["UPD SimpleName: familyNameBytes from familyNameBytes to familyName"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: familyNameBytes to VariableDeclarationFragment at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: readByteArray to MethodInvocation at 1", "MOV SimpleName: Bytes to MethodInvocation at 0"]}, {"root": "UPDATE from readByteArray to hasFamilyNameBytes", "operations": ["UPD SimpleName: readByteArray from readByteArray to hasFamilyNameBytes"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: maxLength to VariableDeclarationFragment at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: WritableUtils to MethodInvocation at 0", "MOV SimpleName: readVInt to MethodInvocation at 1"]}, {"root": "UPDATE from readVInt to hasMaxLength", "operations": ["UPD SimpleName: readVInt from readVInt to hasMaxLength"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: scale to VariableDeclarationFragment at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: readVInt to MethodInvocation at 1", "MOV SimpleName: WritableUtils to MethodInvocation at 0"]}, {"root": "UPDATE from readVInt to hasScale", "operations": ["UPD SimpleName: readVInt from readVInt to hasScale"]}, {"root": "UPDATE from arrSize to arraySize", "operations": ["UPD SimpleName: arrSize from arrSize to arraySize"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: arrSize to VariableDeclarationFragment at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: WritableUtils to MethodInvocation at 0", "MOV SimpleName: readVInt to MethodInvocation at 1"]}, {"root": "UPDATE from readVInt to hasArraySize", "operations": ["UPD SimpleName: readVInt from readVInt to hasArraySize"]}, {"root": "INS SimpleName: builder to MethodInvocation at 0", "operations": ["INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "UPDATE from Bytes to setColumnNameBytes", "operations": ["UPD SimpleName: Bytes from Bytes to setColumnNameBytes"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from WritableUtils to builder", "operations": ["UPD SimpleName: WritableUtils from WritableUtils to builder", "UPD SimpleName: WritableUtils from WritableUtils to builder", "UPD SimpleName: Bytes from Bytes to builder", "UPD SimpleName: WritableUtils from WritableUtils to builder", "UPD SimpleName: WritableUtils from WritableUtils to builder", "UPD SimpleName: output from output to builder"]}, {"root": "UPDATE from writeVInt to setDataType", "operations": ["UPD SimpleName: writeVInt from writeVInt to setDataType"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "INS SimpleName: setNullable to MethodInvocation at 1", "operations": ["INS SimpleName: setNullable to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from writeVInt to setPosition", "operations": ["UPD SimpleName: writeVInt from writeVInt to setPosition"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from writeVInt to setColumnModifier", "operations": ["UPD SimpleName: writeVInt from writeVInt to setColumnModifier"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from input to toByteArray", "operations": ["UPD SimpleName: input from input to toByteArray"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: values to MethodInvocation at 1", "MOV SimpleName: PDataType to MethodInvocation at 0"]}, {"root": "UPDATE from values to fromSqlTypeName", "operations": ["UPD SimpleName: values from values to fromSqlTypeName"]}, {"root": "UPDATE from readBoolean to getNullable", "operations": ["UPD SimpleName: readBoolean from readBoolean to getNullable"]}, {"root": "UPDATE from position to getPosition", "operations": ["UPD SimpleName: position from position to getPosition", "UPD SimpleName: readVInt from readVInt to getPosition"]}, {"root": "UPDATE from writeByteArray to HBaseZeroCopyByteString", "operations": ["UPD SimpleName: writeByteArray from writeByteArray to HBaseZeroCopyByteString", "UPD SimpleName: output from output to HBaseZeroCopyByteString"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: writeByteArray to MethodInvocation at 0"]}, {"root": "UPDATE from output to wrap", "operations": ["UPD SimpleName: output from output to wrap"]}, {"root": "UPDATE from ordinal to getSqlTypeName", "operations": ["UPD SimpleName: ordinal from ordinal to getSqlTypeName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: ordinal to MethodInvocation at 1", "MOV SimpleName: dataType to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: nullable to MethodInvocation at 1", "MOV SimpleName: writeBoolean to MethodInvocation at 0"]}, {"root": "UPDATE from nullable to isNullable", "operations": ["UPD SimpleName: nullable from nullable to isNullable"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: position to MethodInvocation at 1", "MOV SimpleName: output to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: column to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Bytes to MethodInvocation at 0", "MOV SimpleName: readByteArray to MethodInvocation at 1"]}, {"root": "UPDATE from readByteArray to getColumnNameBytes", "operations": ["UPD SimpleName: readByteArray from readByteArray to getColumnNameBytes"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: readVInt to MethodInvocation at 1", "MOV SimpleName: WritableUtils to MethodInvocation at 0"]}, {"root": "UPDATE from readVInt to getDataType", "operations": ["UPD SimpleName: readVInt from readVInt to getDataType", "UPD SimpleName: dataType from dataType to getDataType"]}, {"root": "UPDATE from readVInt to getColumnModifier", "operations": ["UPD SimpleName: readVInt from readVInt to getColumnModifier", "UPD SimpleName: columnModifier from columnModifier to getColumnModifier"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS SimpleName: column to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from writeByteArray to setFamilyNameBytes", "operations": ["UPD SimpleName: writeByteArray from writeByteArray to setFamilyNameBytes"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: column to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: wrap to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: columnModifier to MethodInvocation at 1"]}, {"root": "UPDATE from writeVInt to setArraySize", "operations": ["UPD SimpleName: writeVInt from writeVInt to setArraySize"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getArraySize to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: PNameFactory to MethodInvocation at 0", "MOV SimpleName: newName to MethodInvocation at 1", "MOV SimpleName: familyNameBytes to MethodInvocation at 1"]}, {"root": "UPDATE from name to getName", "operations": ["UPD SimpleName: name from name to getName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: name to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: WritableUtils to MethodInvocation at 0", "MOV SimpleName: writeVInt to MethodInvocation at 1"]}, {"root": "UPDATE from writeVInt to getMaxLength", "operations": ["UPD SimpleName: writeVInt from writeVInt to getMaxLength"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getBytes to MethodInvocation at 1", "MOV SimpleName: familyName to MethodInvocation at 1"]}, {"root": "UPDATE from familyNameBytes to getFamilyNameBytes", "operations": ["UPD SimpleName: familyNameBytes from familyNameBytes to getFamilyNameBytes"]}, {"root": "UPDATE from familyName to getFamilyName", "operations": ["UPD SimpleName: familyName from familyName to getFamilyName"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.DataInput"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.DataOutput"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.io.WritableUtils"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL QualifiedName: Integer.MIN_VALUE", "DEL SimpleName: NO_MAXLENGTH", "DEL FieldDeclaration", "DEL Modifier: static", "DEL Modifier: final"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: final", "DEL QualifiedName: Integer.MIN_VALUE", "DEL SimpleName: NO_SCALE", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL Modifier: static", "DEL FieldDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MarkerAnnotation", "DEL Modifier: public", "DEL PrimitiveType: void", "DEL SimpleName: Override", "DEL SimpleType: IOException", "DEL SimpleName: IOException", "DEL MethodDeclaration"]}, {"root": "DEL SimpleName: DataInput", "operations": ["DEL SimpleName: DataInput"]}, {"root": "DEL ArrayType: byte[]", "operations": ["DEL PrimitiveType: byte", "DEL Dimension", "DEL ArrayType: byte[]"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: input", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: familyName", "DEL InfixExpression: ==", "DEL QualifiedName: familyNameBytes.length", "DEL ConditionalExpression", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL VariableDeclarationStatement", "DEL NullLiteral"]}, {"root": "DEL ArrayAccess", "operations": ["DEL MethodInvocation", "DEL SimpleName: input", "DEL MethodInvocation", "DEL ArrayAccess"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: input", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: input", "DEL MethodInvocation", "DEL PrimitiveType: int"]}, {"root": "DEL SimpleName: input", "operations": ["DEL SimpleName: input"]}, {"root": "DEL SimpleName: input", "operations": ["DEL SimpleName: input"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: input", "DEL VariableDeclarationFragment"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: columnModifier", "DEL SimpleName: init", "DEL SimpleName: dataType", "DEL SimpleName: maxLength", "DEL SimpleName: NO_SCALE", "DEL SimpleName: NO_MAXLENGTH", "DEL InfixExpression: ==", "DEL NullLiteral", "DEL ExpressionStatement", "DEL SimpleName: arrSize", "DEL SimpleName: maxLength", "DEL SimpleName: position", "DEL PrefixExpression: -", "DEL ConditionalExpression", "DEL ConditionalExpression", "DEL NullLiteral", "DEL SimpleName: nullable", "DEL NumberLiteral: 1", "DEL SimpleName: familyName", "DEL SimpleName: arrSize", "DEL SimpleName: scale", "DEL InfixExpression: ==", "DEL InfixExpression: ==", "DEL SimpleName: scale", "DEL ConditionalExpression", "DEL NullLiteral", "DEL SimpleName: columnName"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL SimpleName: Override", "DEL MarkerAnnotation"]}, {"root": "DEL PrimitiveType: void", "operations": ["DEL PrimitiveType: void"]}, {"root": "DEL ConditionalExpression", "operations": ["DEL NullLiteral", "DEL QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY", "DEL InfixExpression: ==", "DEL ConditionalExpression", "DEL MethodInvocation", "DEL SimpleName: familyName"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL SimpleName: output", "operations": ["DEL SimpleName: output"]}, {"root": "DEL ConditionalExpression", "operations": ["DEL SimpleName: arraySize", "DEL NullLiteral", "DEL NumberLiteral: 1", "DEL InfixExpression: ==", "DEL PrefixExpression: -", "DEL SimpleName: arraySize", "DEL ConditionalExpression"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleType: IOException", "DEL SimpleName: IOException"]}, {"root": "DEL Block", "operations": ["DEL MethodInvocation", "DEL SimpleName: NO_MAXLENGTH", "DEL SimpleName: scale", "DEL SimpleName: output", "DEL ConditionalExpression", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: maxLength", "DEL SimpleName: writeVInt", "DEL SimpleName: maxLength", "DEL ExpressionStatement", "DEL ConditionalExpression", "DEL InfixExpression: ==", "DEL SimpleName: output", "DEL SimpleName: scale", "DEL SimpleName: NO_SCALE", "DEL InfixExpression: ==", "DEL ExpressionStatement", "DEL SimpleName: WritableUtils"]}]}}, {"PColumnImpl_diff": {"operations": ["Move ImportDeclaration(13) into CompilationUnit(837) at 8", "Move MethodDeclaration(673) into TypeDeclaration: class(836) at 33", "Update QualifiedName: org.apache.hadoop.hbase.util.Bytes(8) to com.google.protobuf.HBaseZeroCopyByteString", "Update QualifiedName: org.apache.phoenix.util.ByteUtil(14) to org.apache.phoenix.coprocessor.generated.PTableProtos", "Insert MethodDeclaration(706) into TypeDeclaration: class(836) at 29", "Insert Javadoc(553) into MethodDeclaration(706) at 0", "Insert Modifier: public(554) into MethodDeclaration(706) at 1", "Insert Modifier: static(555) into MethodDeclaration(706) at 2", "Insert SimpleType: PColumn(557) into MethodDeclaration(706) at 3", "Update SimpleName: readFields(434) to createFromProto", "Move SimpleName: readFields(434) into MethodDeclaration(706) at 4", "Move SingleVariableDeclaration(438) into MethodDeclaration(706) at 5", "Move Block(576) into MethodDeclaration(706) at 6", "Insert Modifier: static(708) into MethodDeclaration(835) at 1", "Insert SimpleType: PTableProtos.PColumn(710) into MethodDeclaration(835) at 2", "Update SimpleName: write(582) to toProto", "Insert Block(834) into MethodDeclaration(835) at 5", "Insert TagElement(550) into Javadoc(553) at 0", "Insert TagElement: @param(552) into Javadoc(553) at 1", "Insert SimpleName: PColumn(556) into SimpleType: PColumn(557) at 0", "Update SimpleType: DataInput(436) to PTableProtos.PColumn", "Update SimpleName: input(437) to column", "Insert VariableDeclarationStatement(588) into Block(705) at 2", "Insert IfStatement(604) into Block(705) at 3", "Insert VariableDeclarationStatement(621) into Block(705) at 5", "Insert IfStatement(632) into Block(705) at 6", "Insert VariableDeclarationStatement(638) into Block(705) at 7", "Insert IfStatement(649) into Block(705) at 8", "Insert VariableDeclarationStatement(680) into Block(705) at 12", "Insert IfStatement(691) into Block(705) at 13", "Insert ReturnStatement(704) into Block(705) at 14", "Insert QualifiedName: PTableProtos.PColumn(709) into SimpleType: PTableProtos.PColumn(710) at 0", "Update SimpleType: DataOutput(584) to PColumn", "Update SimpleName: output(585) to column", "Insert VariableDeclarationStatement(723) into Block(834) at 0", "Move ExpressionStatement(596) into Block(834) at 1", "Insert IfStatement(754) into Block(834) at 2", "Move ExpressionStatement(617) into Block(834) at 3", "Insert IfStatement(777) into Block(834) at 4", "Insert IfStatement(791) into Block(834) at 5", "Move ExpressionStatement(644) into Block(834) at 6", "Move ExpressionStatement(650) into Block(834) at 7", "Move ExpressionStatement(659) into Block(834) at 8", "Insert IfStatement(829) into Block(834) at 9", "Insert ReturnStatement(833) into Block(834) at 10", "Insert TextElement: Create a PColumn instance from PBed PColumn instance(549) into TagElement(550) at 0", "Insert SimpleName: column(551) into TagElement: @param(552) at 0", "Insert QualifiedName: PTableProtos.PColumn(559) into SimpleType: PTableProtos.PColumn(560) at 0", "Move ArrayType: byte[](462) into VariableDeclarationStatement(573) at 0", "Move SimpleType: PName(471) into VariableDeclarationStatement(588) at 0", "Insert VariableDeclarationFragment(587) into VariableDeclarationStatement(588) at 1", "Insert MethodInvocation(591) into IfStatement(604) at 0", "Insert Block(603) into IfStatement(604) at 1", "Move SimpleType: Integer(35) into VariableDeclarationStatement(621) at 0", "Insert VariableDeclarationFragment(620) into VariableDeclarationStatement(621) at 1", "Insert MethodInvocation(624) into IfStatement(632) at 0", "Insert Block(631) into IfStatement(632) at 1", "Move SimpleType: Integer(26) into VariableDeclarationStatement(638) at 0", "Insert VariableDeclarationFragment(637) into VariableDeclarationStatement(638) at 1", "Insert MethodInvocation(641) into IfStatement(649) at 0", "Insert Block(648) into IfStatement(649) at 1", "Insert SimpleType: Integer(676) into VariableDeclarationStatement(680) at 0", "Insert VariableDeclarationFragment(679) into VariableDeclarationStatement(680) at 1", "Insert MethodInvocation(683) into IfStatement(691) at 0", "Insert Block(690) into IfStatement(691) at 1", "Insert ClassInstanceCreation(703) into ReturnStatement(704) at 0", "Update SimpleName: DataOutput(583) to PColumn", "Insert SimpleType: PTableProtos.PColumn.Builder(717) into VariableDeclarationStatement(723) at 0", "Insert VariableDeclarationFragment(722) into VariableDeclarationStatement(723) at 1", "Insert InfixExpression: !=(740) into IfStatement(754) at 0", "Insert Block(753) into IfStatement(754) at 1", "Insert InfixExpression: !=(768) into IfStatement(777) at 0", "Insert Block(776) into IfStatement(777) at 1", "Insert InfixExpression: !=(782) into IfStatement(791) at 0", "Insert Block(790) into IfStatement(791) at 1", "Insert InfixExpression: !=(820) into IfStatement(829) at 0", "Insert Block(828) into IfStatement(829) at 1", "Insert MethodInvocation(832) into ReturnStatement(833) at 0", "Update SimpleName: familyNameBytes(463) to familyName", "Move SimpleName: familyNameBytes(463) into VariableDeclarationFragment(587) at 0", "Insert NullLiteral(586) into VariableDeclarationFragment(587) at 1", "Update SimpleName: Bytes(464) to column", "Move SimpleName: Bytes(464) into MethodInvocation(591) at 0", "Update SimpleName: readByteArray(465) to hasFamilyNameBytes", "Move SimpleName: readByteArray(465) into MethodInvocation(591) at 1", "Insert ExpressionStatement(602) into Block(603) at 0", "Insert MethodInvocation(613) into VariableDeclarationFragment(614) at 1", "Move SimpleName: maxLength(498) into VariableDeclarationFragment(620) at 0", "Insert NullLiteral(619) into VariableDeclarationFragment(620) at 1", "Update SimpleName: WritableUtils(499) to column", "Move SimpleName: WritableUtils(499) into MethodInvocation(624) at 0", "Update SimpleName: readVInt(500) to hasMaxLength", "Move SimpleName: readVInt(500) into MethodInvocation(624) at 1", "Insert ExpressionStatement(630) into Block(631) at 0", "Move SimpleName: scale(506) into VariableDeclarationFragment(637) at 0", "Insert NullLiteral(636) into VariableDeclarationFragment(637) at 1", "Update SimpleName: WritableUtils(507) to column", "Move SimpleName: WritableUtils(507) into MethodInvocation(641) at 0", "Update SimpleName: readVInt(508) to hasScale", "Move SimpleName: readVInt(508) into MethodInvocation(641) at 1", "Insert ExpressionStatement(647) into Block(648) at 0", "Insert SimpleName: Integer(675) into SimpleType: Integer(676) at 0", "Update SimpleName: arrSize(541) to arraySize", "Move SimpleName: arrSize(541) into VariableDeclarationFragment(679) at 0", "Insert NullLiteral(678) into VariableDeclarationFragment(679) at 1", "Update SimpleName: WritableUtils(542) to column", "Move SimpleName: WritableUtils(542) into MethodInvocation(683) at 0", "Update SimpleName: readVInt(543) to hasArraySize", "Move SimpleName: readVInt(543) into MethodInvocation(683) at 1", "Insert ExpressionStatement(689) into Block(690) at 0", "Insert SimpleType: PColumnImpl(693) into ClassInstanceCreation(703) at 0", "Insert SimpleName: columnName(694) into ClassInstanceCreation(703) at 1", "Insert SimpleName: familyName(695) into ClassInstanceCreation(703) at 2", "Insert SimpleName: dataType(696) into ClassInstanceCreation(703) at 3", "Insert SimpleName: maxLength(697) into ClassInstanceCreation(703) at 4", "Insert SimpleName: scale(698) into ClassInstanceCreation(703) at 5", "Insert SimpleName: nullable(699) into ClassInstanceCreation(703) at 6", "Insert SimpleName: position(700) into ClassInstanceCreation(703) at 7", "Insert SimpleName: columnModifier(701) into ClassInstanceCreation(703) at 8", "Insert SimpleName: arraySize(702) into ClassInstanceCreation(703) at 9", "Insert QualifiedName: PTableProtos.PColumn.Builder(716) into SimpleType: PTableProtos.PColumn.Builder(717) at 0", "Insert SimpleName: builder(718) into VariableDeclarationFragment(722) at 0", "Insert MethodInvocation(721) into VariableDeclarationFragment(722) at 1", "Insert SimpleName: builder(724) into MethodInvocation(734) at 0", "Update SimpleName: Bytes(589) to setColumnNameBytes", "Insert MethodInvocation(733) into MethodInvocation(734) at 2", "Insert MethodInvocation(738) into InfixExpression: !=(740) at 0", "Insert NullLiteral(739) into InfixExpression: !=(740) at 1", "Move ExpressionStatement(609) into Block(753) at 0", "Update SimpleName: WritableUtils(610) to builder", "Update SimpleName: writeVInt(611) to setDataType", "Insert MethodInvocation(761) into MethodInvocation(762) at 2", "Insert MethodInvocation(766) into InfixExpression: !=(768) at 0", "Move NullLiteral(622) into InfixExpression: !=(768) at 1", "Insert ExpressionStatement(775) into Block(776) at 0", "Insert MethodInvocation(780) into InfixExpression: !=(782) at 0", "Move NullLiteral(633) into InfixExpression: !=(782) at 1", "Insert ExpressionStatement(789) into Block(790) at 0", "Update SimpleName: output(640) to builder", "Insert SimpleName: setNullable(793) into MethodInvocation(797) at 1", "Insert MethodInvocation(796) into MethodInvocation(797) at 2", "Update SimpleName: WritableUtils(645) to builder", "Update SimpleName: writeVInt(646) to setPosition", "Insert MethodInvocation(803) into MethodInvocation(804) at 2", "Update SimpleName: WritableUtils(651) to builder", "Update SimpleName: writeVInt(652) to setColumnModifier", "Insert MethodInvocation(818) into InfixExpression: !=(820) at 0", "Insert NullLiteral(819) into InfixExpression: !=(820) at 1", "Move ExpressionStatement(671) into Block(828) at 0", "Insert SimpleName: builder(830) into MethodInvocation(832) at 0", "Insert SimpleName: build(831) into MethodInvocation(832) at 1", "Insert MethodInvocation(569) into MethodInvocation(571) at 0", "Update SimpleName: input(447) to toByteArray", "Insert Assignment: =(601) into ExpressionStatement(602) at 0", "Move SimpleName: PDataType(487) into MethodInvocation(613) at 0", "Update SimpleName: values(488) to fromSqlTypeName", "Move SimpleName: values(488) into MethodInvocation(613) at 1", "Insert MethodInvocation(612) into MethodInvocation(613) at 2", "Insert Assignment: =(629) into ExpressionStatement(630) at 0", "Insert Assignment: =(646) into ExpressionStatement(647) at 0", "Update SimpleName: input(515) to column", "Update SimpleName: readBoolean(516) to getNullable", "Update SimpleName: WritableUtils(522) to column", "Update SimpleName: readVInt(523) to getPosition", "Insert Assignment: =(688) into ExpressionStatement(689) at 0", "Insert SimpleName: PColumnImpl(692) into SimpleType: PColumnImpl(693) at 0", "Insert QualifiedName: PTableProtos.PColumn(719) into MethodInvocation(721) at 0", "Insert SimpleName: newBuilder(720) into MethodInvocation(721) at 1", "Update SimpleName: writeByteArray(590) to HBaseZeroCopyByteString", "Move SimpleName: writeByteArray(590) into MethodInvocation(733) at 0", "Update SimpleName: output(591) to wrap", "Move SimpleName: output(591) into MethodInvocation(733) at 1", "Move MethodInvocation(594) into MethodInvocation(733) at 2", "Insert SimpleName: column(736) into MethodInvocation(738) at 0", "Insert SimpleName: getFamilyName(737) into MethodInvocation(738) at 1", "Insert MethodInvocation(759) into MethodInvocation(761) at 0", "Update SimpleName: ordinal(614) to getSqlTypeName", "Move SimpleName: ordinal(614) into MethodInvocation(761) at 1", "Insert SimpleName: column(764) into MethodInvocation(766) at 0", "Insert SimpleName: getMaxLength(765) into MethodInvocation(766) at 1", "Insert MethodInvocation(774) into ExpressionStatement(775) at 0", "Insert SimpleName: column(778) into MethodInvocation(780) at 0", "Insert SimpleName: getScale(779) into MethodInvocation(780) at 1", "Insert MethodInvocation(788) into ExpressionStatement(789) at 0", "Update SimpleName: writeBoolean(641) to column", "Move SimpleName: writeBoolean(641) into MethodInvocation(796) at 0", "Update SimpleName: nullable(642) to isNullable", "Move SimpleName: nullable(642) into MethodInvocation(796) at 1", "Update SimpleName: output(647) to column", "Move SimpleName: output(647) into MethodInvocation(803) at 0", "Update SimpleName: position(648) to getPosition", "Move SimpleName: position(648) into MethodInvocation(803) at 1", "Insert MethodInvocation(812) into MethodInvocation(813) at 2", "Insert SimpleName: column(816) into MethodInvocation(818) at 0", "Insert SimpleName: getArraySize(817) into MethodInvocation(818) at 1", "Update SimpleName: Bytes(445) to column", "Move SimpleName: Bytes(445) into MethodInvocation(569) at 0", "Update SimpleName: readByteArray(446) to getColumnNameBytes", "Move SimpleName: readByteArray(446) into MethodInvocation(569) at 1", "Insert SimpleName: familyName(592) into Assignment: =(601) at 0", "Insert MethodInvocation(600) into Assignment: =(601) at 1", "Update SimpleName: WritableUtils(490) to column", "Move SimpleName: WritableUtils(490) into MethodInvocation(612) at 0", "Update SimpleName: readVInt(491) to getDataType", "Move SimpleName: readVInt(491) into MethodInvocation(612) at 1", "Insert SimpleName: maxLength(625) into Assignment: =(629) at 0", "Insert MethodInvocation(628) into Assignment: =(629) at 1", "Insert SimpleName: scale(642) into Assignment: =(646) at 0", "Insert MethodInvocation(645) into Assignment: =(646) at 1", "Update SimpleName: WritableUtils(533) to column", "Update SimpleName: readVInt(534) to getColumnModifier", "Insert SimpleName: arraySize(684) into Assignment: =(688) at 0", "Insert MethodInvocation(687) into Assignment: =(688) at 1", "Insert MethodInvocation(730) into MethodInvocation(732) at 0", "Update SimpleName: Bytes(597) to builder", "Update SimpleName: writeByteArray(598) to setFamilyNameBytes", "Insert MethodInvocation(750) into MethodInvocation(751) at 2", "Update SimpleName: output(612) to column", "Move SimpleName: output(612) into MethodInvocation(759) at 0", "Update SimpleName: dataType(613) to getDataType", "Move SimpleName: dataType(613) into MethodInvocation(759) at 1", "Insert SimpleName: builder(769) into MethodInvocation(774) at 0", "Insert SimpleName: setMaxLength(770) into MethodInvocation(774) at 1", "Insert MethodInvocation(773) into MethodInvocation(774) at 2", "Insert SimpleName: builder(783) into MethodInvocation(788) at 0", "Insert SimpleName: setScale(784) into MethodInvocation(788) at 1", "Insert MethodInvocation(787) into MethodInvocation(788) at 2", "Insert SimpleName: column(810) into MethodInvocation(812) at 0", "Update SimpleName: columnModifier(656) to getColumnModifier", "Move SimpleName: columnModifier(656) into MethodInvocation(812) at 1", "Update SimpleName: WritableUtils(660) to builder", "Update SimpleName: writeVInt(661) to setArraySize", "Insert MethodInvocation(825) into MethodInvocation(826) at 2", "Move SimpleName: PNameFactory(477) into MethodInvocation(600) at 0", "Move SimpleName: newName(478) into MethodInvocation(600) at 1", "Insert MethodInvocation(599) into MethodInvocation(600) at 2", "Insert SimpleName: column(626) into MethodInvocation(628) at 0", "Insert SimpleName: getMaxLength(627) into MethodInvocation(628) at 1", "Insert SimpleName: column(643) into MethodInvocation(645) at 0", "Insert SimpleName: getScale(644) into MethodInvocation(645) at 1", "Insert SimpleName: column(685) into MethodInvocation(687) at 0", "Insert SimpleName: getArraySize(686) into MethodInvocation(687) at 1", "Insert SimpleName: column(728) into MethodInvocation(730) at 0", "Update SimpleName: name(592) to getName", "Move SimpleName: name(592) into MethodInvocation(730) at 1", "Update SimpleName: output(599) to HBaseZeroCopyByteString", "Move SimpleName: output(599) into MethodInvocation(750) at 0", "Insert SimpleName: wrap(744) into MethodInvocation(750) at 1", "Insert MethodInvocation(749) into MethodInvocation(750) at 2", "Update SimpleName: WritableUtils(629) to column", "Move SimpleName: WritableUtils(629) into MethodInvocation(773) at 0", "Update SimpleName: writeVInt(630) to getMaxLength", "Move SimpleName: writeVInt(630) into MethodInvocation(773) at 1", "Insert SimpleName: column(785) into MethodInvocation(787) at 0", "Insert SimpleName: getScale(786) into MethodInvocation(787) at 1", "Update SimpleName: output(662) to column", "Move SimpleName: output(662) into MethodInvocation(825) at 0", "Insert SimpleName: getArraySize(824) into MethodInvocation(825) at 1", "Insert MethodInvocation(597) into MethodInvocation(599) at 0", "Insert SimpleName: toByteArray(598) into MethodInvocation(599) at 1", "Insert MethodInvocation(747) into MethodInvocation(749) at 0", "Move SimpleName: getBytes(605) into MethodInvocation(749) at 1", "Insert SimpleName: column(595) into MethodInvocation(597) at 0", "Update SimpleName: familyNameBytes(479) to getFamilyNameBytes", "Move SimpleName: familyNameBytes(479) into MethodInvocation(597) at 1", "Insert SimpleName: column(745) into MethodInvocation(747) at 0", "Update SimpleName: familyName(604) to getFamilyName", "Move SimpleName: familyName(604) into MethodInvocation(747) at 1", "Delete QualifiedName: java.io.DataInput(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.io.DataOutput(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.io.IOException(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.hadoop.io.WritableUtils(10)", "Delete ImportDeclaration(11)", "Delete Modifier: private(22)", "Delete Modifier: static(23)", "Delete Modifier: final(24)", "Delete SimpleName: NO_MAXLENGTH(27)", "Delete QualifiedName: Integer.MIN_VALUE(28)", "Delete VariableDeclarationFragment(29)", "Delete FieldDeclaration(30)", "Delete Modifier: private(31)", "Delete Modifier: static(32)", "Delete Modifier: final(33)", "Delete SimpleName: NO_SCALE(36)", "Delete QualifiedName: Integer.MIN_VALUE(37)", "Delete VariableDeclarationFragment(38)", "Delete FieldDeclaration(39)", "Delete SimpleName: Override(430)", "Delete MarkerAnnotation(431)", "Delete Modifier: public(432)", "Delete PrimitiveType: void(433)", "Delete SimpleName: IOException(439)", "Delete SimpleType: IOException(440)", "Delete MethodDeclaration(577)", "Delete SimpleName: DataInput(435)", "Delete PrimitiveType: byte(441)", "Delete Dimension(442)", "Delete ArrayType: byte[](443)", "Delete SimpleName: input(466)", "Delete MethodInvocation(467)", "Delete VariableDeclarationFragment(468)", "Delete VariableDeclarationStatement(469)", "Delete SimpleName: familyName(472)", "Delete QualifiedName: familyNameBytes.length(473)", "Delete NumberLiteral: 0(474)", "Delete InfixExpression: ==(475)", "Delete NullLiteral(476)", "Delete MethodInvocation(480)", "Delete ConditionalExpression(481)", "Delete VariableDeclarationFragment(482)", "Delete VariableDeclarationStatement(483)", "Delete MethodInvocation(489)", "Delete SimpleName: input(492)", "Delete MethodInvocation(493)", "Delete ArrayAccess(494)", "Delete PrimitiveType: int(497)", "Delete SimpleName: input(501)", "Delete MethodInvocation(502)", "Delete VariableDeclarationFragment(503)", "Delete VariableDeclarationStatement(504)", "Delete PrimitiveType: int(505)", "Delete SimpleName: input(509)", "Delete MethodInvocation(510)", "Delete VariableDeclarationFragment(511)", "Delete VariableDeclarationStatement(512)", "Delete SimpleName: input(524)", "Delete SimpleName: input(535)", "Delete PrimitiveType: int(540)", "Delete SimpleName: input(544)", "Delete MethodInvocation(545)", "Delete VariableDeclarationFragment(546)", "Delete VariableDeclarationStatement(547)", "Delete SimpleName: init(548)", "Delete SimpleName: columnName(549)", "Delete SimpleName: familyName(550)", "Delete SimpleName: dataType(551)", "Delete SimpleName: maxLength(552)", "Delete SimpleName: NO_MAXLENGTH(553)", "Delete InfixExpression: ==(554)", "Delete NullLiteral(555)", "Delete SimpleName: maxLength(556)", "Delete ConditionalExpression(557)", "Delete SimpleName: scale(558)", "Delete SimpleName: NO_SCALE(559)", "Delete InfixExpression: ==(560)", "Delete NullLiteral(561)", "Delete SimpleName: scale(562)", "Delete ConditionalExpression(563)", "Delete SimpleName: nullable(564)", "Delete SimpleName: position(565)", "Delete SimpleName: columnModifier(566)", "Delete SimpleName: arrSize(567)", "Delete NumberLiteral: 1(568)", "Delete PrefixExpression: -(569)", "Delete InfixExpression: ==(570)", "Delete NullLiteral(571)", "Delete SimpleName: arrSize(572)", "Delete ConditionalExpression(573)", "Delete MethodInvocation(574)", "Delete ExpressionStatement(575)", "Delete SimpleName: Override(578)", "Delete MarkerAnnotation(579)", "Delete PrimitiveType: void(581)", "Delete SimpleName: familyName(600)", "Delete NullLiteral(601)", "Delete InfixExpression: ==(602)", "Delete QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY(603)", "Delete MethodInvocation(606)", "Delete ConditionalExpression(607)", "Delete MethodInvocation(615)", "Delete SimpleName: output(653)", "Delete SimpleName: arraySize(663)", "Delete NullLiteral(664)", "Delete InfixExpression: ==(665)", "Delete NumberLiteral: 1(666)", "Delete PrefixExpression: -(667)", "Delete SimpleName: arraySize(668)", "Delete ConditionalExpression(669)", "Delete SimpleName: IOException(587)", "Delete SimpleType: IOException(588)", "Delete SimpleName: WritableUtils(618)", "Delete SimpleName: writeVInt(619)", "Delete SimpleName: output(620)", "Delete SimpleName: maxLength(621)", "Delete InfixExpression: ==(623)", "Delete SimpleName: NO_MAXLENGTH(624)", "Delete SimpleName: maxLength(625)", "Delete ConditionalExpression(626)", "Delete MethodInvocation(627)", "Delete ExpressionStatement(628)", "Delete SimpleName: output(631)", "Delete SimpleName: scale(632)", "Delete InfixExpression: ==(634)", "Delete SimpleName: NO_SCALE(635)", "Delete SimpleName: scale(636)", "Delete ConditionalExpression(637)", "Delete MethodInvocation(638)", "Delete ExpressionStatement(639)", "Delete Block(672)"]}}, {"PTable_cluster": {"actions": [{"root": "DEL SimpleType: Writable", "operations": ["DEL SimpleType: Writable", "DEL SimpleName: Writable"]}]}}, {"PTable_diff": {"operations": ["Delete SimpleName: Writable(23)", "Delete SimpleType: Writable(24)"]}}, {"PTableImpl_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 18", "MOV ImportDeclaration to CompilationUnit at 26", "MOV ImportDeclaration to CompilationUnit at 15", "MOV ImportDeclaration to CompilationUnit at 15"]}, {"root": "INS ImportDeclaration to CompilationUnit at 24", "operations": ["INS ImportDeclaration to CompilationUnit at 24", "INS QualifiedName: org.apache.phoenix.coprocessor.generated.PTableProtos to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 43", "operations": ["INS ImportDeclaration to CompilationUnit at 43", "INS QualifiedName: com.google.protobuf.HBaseZeroCopyByteString to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 87", "MOV MethodDeclaration to TypeDeclaration: class at 87"]}, {"root": "UPDATE from java.io.DataInput to java.util.Map.Entry", "operations": ["UPD QualifiedName: java.io.DataInput from java.io.DataInput to java.util.Map.Entry"]}, {"root": "UPDATE from java.io.DataOutput to org.apache.hadoop.hbase.Cell", "operations": ["UPD QualifiedName: java.io.DataOutput from java.io.DataOutput to org.apache.hadoop.hbase.Cell"]}, {"root": "UPDATE from org.apache.hadoop.hbase.KeyValue to org.apache.hadoop.hbase.client.Durability", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.KeyValue from org.apache.hadoop.hbase.KeyValue to org.apache.hadoop.hbase.client.Durability"]}, {"root": "UPDATE from org.apache.hadoop.io.WritableUtils to org.apache.phoenix.protobuf.ProtobufUtil", "operations": ["UPD QualifiedName: org.apache.hadoop.io.WritableUtils from org.apache.hadoop.io.WritableUtils to org.apache.phoenix.protobuf.ProtobufUtil"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TextElement: Construct a PTable instance from ProtoBuffered PTable instance to TagElement at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: table to TagElement: @param at 0", "INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "INS Modifier: static to MethodDeclaration at 3", "operations": ["INS Modifier: static to MethodDeclaration at 3"]}, {"root": "INS SimpleType: PTable to MethodDeclaration at 4", "operations": ["INS SimpleType: PTable to MethodDeclaration at 4"]}, {"root": "INS SimpleName: createFromProto to MethodDeclaration at 5", "operations": ["INS SimpleName: createFromProto to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS QualifiedName: PTableProtos.PTable to SimpleType: PTableProtos.PTable at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: table to SingleVariableDeclaration at 1", "INS SimpleType: PTableProtos.PTable to SingleVariableDeclaration at 0"]}, {"root": "INS Block to MethodDeclaration at 7", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS VariableDeclarationStatement to Block at 19", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: getIndexesList to MethodInvocation at 1", "INS Block to EnhancedForStatement at 2", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: pTableStatsProto to SingleVariableDeclaration at 1", "INS SimpleType: PTableProtos.PTable to SingleVariableDeclaration at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS Block to EnhancedForStatement at 2", "INS ExpressionStatement to Block at 0", "INS EnhancedForStatement to Block at 13", "INS Block to EnhancedForStatement at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: table to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: curPTableProto to SingleVariableDeclaration at 1", "INS QualifiedName: PTableProtos.PTableStats to SimpleType: PTableProtos.PTableStats at 0", "INS IfStatement to Block at 8", "INS QualifiedName: PTableProtos.PColumn to SimpleType: PTableProtos.PColumn at 0", "INS MethodInvocation to Assignment: = at 1", "INS EnhancedForStatement to Block at 16", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to Block at 20", "INS MethodInvocation to IfStatement at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: toByteArray to MethodInvocation at 1", "INS SimpleName: defaultFamilyName to Assignment: = at 0", "INS IfStatement to Block at 18", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: table to MethodInvocation at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS Block to IfStatement at 1", "INS SimpleName: table to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS Block to IfStatement at 1", "INS VariableDeclarationStatement to Block at 17", "INS SimpleName: curPColumnProto to SingleVariableDeclaration at 1", "INS QualifiedName: PTableProtos.PTable to SimpleType: PTableProtos.PTable at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: dataTableName to Assignment: = at 0", "INS MethodInvocation to IfStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: PTableProtos.PTableStats to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: pkName to Assignment: = at 0", "INS VariableDeclarationStatement to Block at 7", "INS EnhancedForStatement to Block at 11", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleType: PTableProtos.PColumn to SingleVariableDeclaration at 0", "INS SimpleName: toByteArray to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS Modifier: static to MethodDeclaration at 2", "operations": ["INS Modifier: static to MethodDeclaration at 2"]}, {"root": "INS SimpleType: PTableProtos.PTable to MethodDeclaration at 3", "operations": ["INS SimpleType: PTableProtos.PTable to MethodDeclaration at 3", "INS QualifiedName: PTableProtos.PTable to SimpleType: PTableProtos.PTable at 0"]}, {"root": "UPDATE from write to toProto", "operations": ["UPD SimpleName: write from write to toProto", "UPD SimpleName: output from output to toProto", "UPD SimpleName: write from write to toProto"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "INS Block to MethodDeclaration at 7", "operations": ["INS ArrayType: byte[][] to ParameterizedType: Entry<String,byte[][]> at 2", "INS SimpleType: PTable to ParameterizedType: List<PTable> at 1", "INS SimpleName: wrap to MethodInvocation at 1", "INS SimpleName: entry to SingleVariableDeclaration at 1", "INS ParameterizedType: List<PTable> to VariableDeclarationStatement at 0", "INS Block to MethodDeclaration at 7", "INS QualifiedName: PTableProtos.PTable.Builder to SimpleType: PTableProtos.PTable.Builder at 0", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS PrimitiveType: byte to ArrayType: byte[][] at 0", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: HBaseZeroCopyByteString to MethodInvocation at 0", "INS SimpleName: setDataTableNameBytes to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: table to MethodInvocation at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: build to MethodInvocation at 1", "INS ArrayType: byte[][] to ParameterizedType: Map<String,byte[][]> at 2", "INS ExpressionStatement to Block at 3", "INS SimpleName: getValue to MethodInvocation at 1", "INS ReturnStatement to Block at 25", "INS ExpressionStatement to Block at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: getDefaultFamilyName to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: HBaseZeroCopyByteString to MethodInvocation at 0", "INS SimpleName: PColumn to SimpleType: PColumn at 0", "INS InfixExpression: != to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS IfStatement to Block at 20", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Map to ParameterizedType: Map<String,byte[][]> at 0", "INS SimpleName: getTableStats to MethodInvocation at 1", "INS Dimension to ArrayType: byte[][] at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: entry to MethodInvocation at 0", "INS SimpleName: columnSize to VariableDeclarationFragment at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS SimpleName: statsMap to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 10", "INS QualifiedName: PTableProtos.PTableStats.Builder to SimpleType: PTableProtos.PTableStats.Builder at 0", "INS SimpleName: HBaseZeroCopyByteString to MethodInvocation at 0", "INS SimpleName: columns to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: PTableProtos.PTable.Builder to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 18", "INS MethodInvocation to InfixExpression: != at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: statsBuilder to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Dimension to ArrayType: byte[][] at 2", "INS VariableDeclarationStatement to Block at 7", "INS SimpleType: List to ParameterizedType: List<PColumn> at 0", "INS SimpleType: PName to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleType: Entry to ParameterizedType: Entry<String,byte[][]> at 0", "INS IfStatement to Block at 8", "INS SimpleName: PTable to SimpleType: PTable at 0", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: entrySet to MethodInvocation at 1", "INS SimpleName: indexes to VariableDeclarationFragment at 0", "INS SimpleType: String to ParameterizedType: Entry<String,byte[][]> at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: getPKName to MethodInvocation at 1", "INS Dimension to ArrayType: byte[][] at 1", "INS SimpleName: addGuidePosts to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getParentName to MethodInvocation at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: wrap to MethodInvocation at 1", "INS QualifiedName: PTableProtos.PTable to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS EnhancedForStatement to Block at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS Block to IfStatement at 1", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1", "INS EnhancedForStatement to Block at 0", "INS SimpleName: getGuidePosts to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: PTableProtos.PTableStats.Builder to VariableDeclarationStatement at 0", "INS SimpleName: PName to SimpleType: PName at 0", "INS VariableDeclarationStatement to Block at 12", "INS SimpleName: tmp to MethodInvocation at 0", "INS SimpleName: table to MethodInvocation at 0", "INS SimpleName: tmp to VariableDeclarationFragment at 0", "INS SimpleName: statsMap to MethodInvocation at 0", "INS SimpleName: size to MethodInvocation at 1", "INS Block to EnhancedForStatement at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: statsBuilder to MethodInvocation at 0", "INS SimpleName: statsMap to InfixExpression: != at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 15", "INS PrimitiveType: byte to ArrayType: byte[][] at 0", "INS InfixExpression: != to IfStatement at 0", "INS ParameterizedType: Map<String,byte[][]> to VariableDeclarationStatement at 0", "INS SimpleType: List to ParameterizedType: List<PTable> at 0", "INS IfStatement to Block at 19", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ParameterizedType: List<PColumn> to VariableDeclarationStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 13", "INS QualifiedName: PTableProtos.PTableStats to MethodInvocation at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: List to SimpleType: List at 0", "INS Dimension to ArrayType: byte[][] at 2", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to MethodInvocation at 2", "INS ParameterizedType: Entry<String,byte[][]> to SingleVariableDeclaration at 0", "INS SimpleName: curVal to SingleVariableDeclaration at 1", "INS IfStatement to Block at 21", "INS SimpleName: table to MethodInvocation at 0", "INS SimpleType: PColumn to ParameterizedType: List<PColumn> at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: statsBuilder to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: table to MethodInvocation at 0", "INS SimpleName: List to SimpleType: List at 0"]}, {"root": "UPDATE from DataInput to PTable", "operations": ["UPD SimpleName: DataInput from DataInput to PTable"]}, {"root": "MOVE from SimpleType: PTable", "operations": ["MOV SimpleName: DataInput to SimpleType: PTable at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 27", "MOV VariableDeclarationStatement to Block at 23", "MOV TryStatement to Block at 28", "MOV VariableDeclarationStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 12", "MOV VariableDeclarationStatement to Block at 25", "MOV IfStatement to Block at 4", "MOV VariableDeclarationStatement to Block at 22", "MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 6", "MOV VariableDeclarationStatement to Block at 24", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 10", "MOV VariableDeclarationStatement to Block at 15", "MOV IfStatement to Block at 26", "MOV VariableDeclarationStatement to Block at 9", "MOV VariableDeclarationStatement to Block at 14", "MOV VariableDeclarationStatement to Block at 21", "MOV VariableDeclarationStatement to Block at 5"]}, {"root": "UPDATE from WritableUtils to table", "operations": ["UPD SimpleName: WritableUtils from WritableUtils to table", "UPD SimpleName: Bytes from Bytes to table", "UPD SimpleName: input from input to table", "UPD SimpleName: Bytes from Bytes to table", "UPD SimpleName: Bytes from Bytes to table", "UPD SimpleName: WritableUtils from WritableUtils to table", "UPD SimpleName: WritableUtils from WritableUtils to table", "UPD SimpleName: tableName from tableName to table", "UPD SimpleName: input from input to table", "UPD SimpleName: Bytes from Bytes to table", "UPD SimpleName: column from column to table", "UPD SimpleName: WritableUtils from WritableUtils to table", "UPD SimpleName: type from type to table", "UPD SimpleName: index from index to table", "UPD SimpleName: WritableUtils from WritableUtils to table", "UPD SimpleName: input from input to table", "UPD SimpleName: allColumns from allColumns to table", "UPD SimpleName: indexes from indexes to table", "UPD SimpleName: WritableUtils from WritableUtils to table", "UPD SimpleName: output from output to table", "UPD SimpleName: input from input to table", "UPD SimpleName: writeBoolean from writeBoolean to table", "UPD SimpleName: input from input to table", "UPD SimpleName: output from output to table", "UPD SimpleName: WritableUtils from WritableUtils to table"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 22", "MOV VariableDeclarationStatement to Block at 9", "MOV ExpressionStatement to Block at 1", "MOV IfStatement to Block at 4", "MOV ExpressionStatement to Block at 17", "MOV EnhancedForStatement to Block at 16", "MOV ExpressionStatement to Block at 3", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 23", "MOV ExpressionStatement to Block at 6", "MOV ForStatement to Block at 14", "MOV ExpressionStatement to Block at 5", "MOV ExpressionStatement to Block at 2", "MOV IfStatement to Block at 11", "MOV IfStatement to Block at 24"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: getType to MethodInvocation at 1", "INS ThisExpression to MethodInvocation at 0", "INS QualifiedName: PTableType.INDEX to InfixExpression: == at 1", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: PTableImpl to ThisExpression at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS IfStatement to Block at 3"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: PName to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: PName to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: PName to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: PName to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: PName to VariableDeclarationStatement at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS MethodInvocation to InfixExpression: != at 0", "INS InfixExpression: == to InfixExpression: && at 0", "INS InfixExpression: != to InfixExpression: && at 1", "INS MethodInvocation to InfixExpression: == at 0", "INS SimpleName: getIndexState to MethodInvocation at 1", "INS SimpleName: table to MethodInvocation at 0", "INS InfixExpression: && to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: getType to MethodInvocation at 1", "INS SimpleName: table to MethodInvocation at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Integer to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS SingleVariableDeclaration to EnhancedForStatement at 0", "operations": ["INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: curIndex to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from Map<byte[],List<KeyValue>> to Map<byte[],List<Cell>>", "operations": ["UPD ParameterizedType: Map<byte[],List<KeyValue>> from Map<byte[],List<KeyValue>> to Map<byte[],List<Cell>>"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Delete to VariableDeclarationStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: readVInt to MethodInvocation at 1", "MOV SimpleName: WritableUtils to MethodInvocation at 0"]}, {"root": "UPDATE from readVInt to hasIndexState", "operations": ["UPD SimpleName: readVInt from readVInt to hasIndexState"]}, {"root": "UPDATE from pkNameBytes to pkName", "operations": ["UPD SimpleName: pkNameBytes from pkNameBytes to pkName"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: pkNameBytes to VariableDeclarationFragment at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: readByteArray to MethodInvocation at 1", "MOV SimpleName: Bytes to MethodInvocation at 0"]}, {"root": "UPDATE from readByteArray to hasPkNameBytes", "operations": ["UPD SimpleName: readByteArray from readByteArray to hasPkNameBytes"]}, {"root": "UPDATE from nColumns to bucketNum", "operations": ["UPD SimpleName: nColumns from nColumns to bucketNum", "UPD SimpleName: nColumns from nColumns to bucketNum"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: column to MethodInvocation at 0", "MOV SimpleName: input to MethodInvocation at 1"]}, {"root": "UPDATE from input to getColumnsList", "operations": ["UPD SimpleName: input from input to getColumnsList"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: input to MethodInvocation at 1", "MOV SimpleName: WritableUtils to MethodInvocation at 0"]}, {"root": "UPDATE from input to getGuidePostsList", "operations": ["UPD SimpleName: input from input to getGuidePostsList"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV ForStatement to Block at 1", "MOV ExpressionStatement to Block at 2"]}, {"root": "UPDATE from dataTableNameBytes to dataTableName", "operations": ["UPD SimpleName: dataTableNameBytes from dataTableNameBytes to dataTableName"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: dataTableNameBytes to VariableDeclarationFragment at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Bytes to MethodInvocation at 0", "MOV SimpleName: readByteArray to MethodInvocation at 1"]}, {"root": "UPDATE from readByteArray to hasDataTableNameBytes", "operations": ["UPD SimpleName: readByteArray from readByteArray to hasDataTableNameBytes"]}, {"root": "UPDATE from defaultFamilyNameBytes to defaultFamilyName", "operations": ["UPD SimpleName: defaultFamilyNameBytes from defaultFamilyNameBytes to defaultFamilyName"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: defaultFamilyNameBytes to VariableDeclarationFragment at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Bytes to MethodInvocation at 0", "MOV SimpleName: readByteArray to MethodInvocation at 1"]}, {"root": "UPDATE from readByteArray to hasDefaultFamilyName", "operations": ["UPD SimpleName: readByteArray from readByteArray to hasDefaultFamilyName"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 1"]}, {"root": "INS ReturnStatement to Block at 2", "operations": ["INS ReturnStatement to Block at 2", "INS SimpleName: result to ReturnStatement at 0"]}, {"root": "INS SimpleName: builder to MethodInvocation at 0", "operations": ["INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "UPDATE from Bytes to setSchemaNameBytes", "operations": ["UPD SimpleName: Bytes from Bytes to setSchemaNameBytes"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleName: builder to MethodInvocation at 0", "operations": ["INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "UPDATE from Bytes to setTableNameBytes", "operations": ["UPD SimpleName: Bytes from Bytes to setTableNameBytes"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleName: builder to MethodInvocation at 0", "operations": ["INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "UPDATE from WritableUtils to setTableType", "operations": ["UPD SimpleName: WritableUtils from WritableUtils to setTableType"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from WritableUtils to builder", "operations": ["UPD SimpleName: WritableUtils from WritableUtils to builder", "UPD SimpleName: Bytes from Bytes to builder", "UPD SimpleName: output from output to builder", "UPD SimpleName: Bytes from Bytes to builder", "UPD SimpleName: WritableUtils from WritableUtils to builder", "UPD SimpleName: WritableUtils from WritableUtils to builder", "UPD SimpleName: output from output to builder", "UPD SimpleName: output from output to builder", "UPD SimpleName: WritableUtils from WritableUtils to builder"]}, {"root": "UPDATE from writeVLong to setSequenceNumber", "operations": ["UPD SimpleName: writeVLong from writeVLong to setSequenceNumber"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from writeLong to setTimeStamp", "operations": ["UPD SimpleName: writeLong from writeLong to setTimeStamp"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: table to MethodInvocation at 0"]}, {"root": "UPDATE from pkName to tmp", "operations": ["UPD SimpleName: pkName from pkName to tmp"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV SimpleName: pkName to InfixExpression: != at 0", "MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "INS SimpleName: columnSize to InfixExpression: < at 1", "operations": ["INS SimpleName: columnSize to InfixExpression: < at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: PTable to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from writeBoolean to setIsImmutableRows", "operations": ["UPD SimpleName: writeBoolean from writeBoolean to setIsImmutableRows"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: table to MethodInvocation at 0"]}, {"root": "MOVE from ParameterizedType: Map<String,byte[][]>", "operations": ["MOV SimpleType: String to ParameterizedType: Map<String,byte[][]> at 1"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "UPDATE from writeBoolean to setDisableWAL", "operations": ["UPD SimpleName: writeBoolean from writeBoolean to setDisableWAL"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: table to MethodInvocation at 0"]}, {"root": "INS SimpleName: builder to MethodInvocation at 0", "operations": ["INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "UPDATE from output to setMultiTenant", "operations": ["UPD SimpleName: output from output to setMultiTenant"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to InfixExpression: == at 0", "operations": ["INS MethodInvocation to InfixExpression: == at 0", "INS SimpleName: getType to MethodInvocation at 1", "INS SimpleName: table to MethodInvocation at 0"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: table to MethodInvocation at 0", "INS SimpleName: toByteArray to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: toByteArray to MethodInvocation at 1", "INS SimpleName: table to MethodInvocation at 0"]}, {"root": "UPDATE from readVLong to getSequenceNumber", "operations": ["UPD SimpleName: readVLong from readVLong to getSequenceNumber", "UPD SimpleName: sequenceNumber from sequenceNumber to getSequenceNumber"]}, {"root": "UPDATE from readLong to getTimeStamp", "operations": ["UPD SimpleName: readLong from readLong to getTimeStamp", "UPD SimpleName: timeStamp from timeStamp to getTimeStamp"]}, {"root": "UPDATE from size to getBucketNum", "operations": ["UPD SimpleName: size from size to getBucketNum", "UPD SimpleName: readVInt from readVInt to getBucketNum"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: table to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: table to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from readBoolean to getIsImmutableRows", "operations": ["UPD SimpleName: readBoolean from readBoolean to getIsImmutableRows"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: byte[][] to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from readBoolean to getDisableWAL", "operations": ["UPD SimpleName: readBoolean from readBoolean to getDisableWAL"]}, {"root": "UPDATE from readBoolean to getMultiTenant", "operations": ["UPD SimpleName: readBoolean from readBoolean to getMultiTenant"]}, {"root": "INS SimpleType: PTableImpl to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: PTableImpl to VariableDeclarationStatement at 0", "INS SimpleName: PTableImpl to SimpleType: PTableImpl at 0"]}, {"root": "UPDATE from output to HBaseZeroCopyByteString", "operations": ["UPD SimpleName: output from output to HBaseZeroCopyByteString", "UPD SimpleName: writeByteArray from writeByteArray to HBaseZeroCopyByteString", "UPD SimpleName: writeByteArray from writeByteArray to HBaseZeroCopyByteString", "UPD SimpleName: output from output to HBaseZeroCopyByteString", "UPD SimpleName: writeByteArray from writeByteArray to HBaseZeroCopyByteString", "UPD SimpleName: output from output to HBaseZeroCopyByteString"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: writeByteArray to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: output to MethodInvocation at 1"]}, {"root": "UPDATE from writeByte to wrap", "operations": ["UPD SimpleName: writeByte from writeByte to wrap", "UPD SimpleName: output from output to wrap", "UPD SimpleName: output from output to wrap", "UPD SimpleName: writeByteArray from writeByteArray to wrap", "UPD SimpleName: output from output to wrap"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: writeByteArray to MethodInvocation at 0", "MOV SimpleName: output to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from writeVInt to ProtobufUtil", "operations": ["UPD SimpleName: writeVInt from writeVInt to ProtobufUtil"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: writeVInt to MethodInvocation at 0", "MOV SimpleName: output to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from output to toPTableTypeProto", "operations": ["UPD SimpleName: output from output to toPTableTypeProto"]}, {"root": "MOVE from InfixExpression: ==", "operations": ["MOV QualifiedName: PTableType.INDEX to InfixExpression: == at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 0", "MOV SimpleName: sequenceNumber to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: timeStamp to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: WritableUtils to MethodInvocation at 0", "MOV SimpleName: nColumns to MethodInvocation at 0", "MOV SimpleName: writeVInt to MethodInvocation at 1"]}, {"root": "UPDATE from writeVInt to getColumns", "operations": ["UPD SimpleName: writeVInt from writeVInt to getColumns"]}, {"root": "UPDATE from allColumns to columns", "operations": ["UPD SimpleName: allColumns from allColumns to columns", "UPD SimpleName: nColumns from nColumns to columns"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: indexes to MethodInvocation at 0", "MOV SimpleName: size to MethodInvocation at 1"]}, {"root": "UPDATE from size to getIndexes", "operations": ["UPD SimpleName: size from size to getIndexes"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: isImmutableRows to MethodInvocation at 1"]}, {"root": "UPDATE from disableWAL to isWALDisabled", "operations": ["UPD SimpleName: disableWAL from disableWAL to isWALDisabled"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: disableWAL to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: writeBoolean to MethodInvocation at 0", "MOV SimpleName: multiTenant to MethodInvocation at 1"]}, {"root": "UPDATE from multiTenant to isMultiTenant", "operations": ["UPD SimpleName: multiTenant from multiTenant to isMultiTenant"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS ArrayInitializer to ArrayCreation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ArrayCreation to MethodInvocation at 2", "INS MethodInvocation to ArrayInitializer at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: setViewType to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: table to MethodInvocation at 0"]}, {"root": "MOVE from ForStatement", "operations": ["MOV VariableDeclarationExpression to ForStatement at 0", "MOV PostfixExpression: ++ to ForStatement at 3"]}, {"root": "UPDATE from getFamilyMap to getFamilyCellMap", "operations": ["UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap"]}, {"root": "UPDATE from Iterator<KeyValue> to Iterator<Cell>", "operations": ["UPD ParameterizedType: Iterator<KeyValue> from Iterator<KeyValue> to Iterator<Cell>"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Delete to ClassInstanceCreation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from input to ordinal", "operations": ["UPD SimpleName: input from input to ordinal"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: table to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getIndexState to MethodInvocation at 1"]}, {"root": "UPDATE from nColumns to getColumnsCount", "operations": ["UPD SimpleName: nColumns from nColumns to getColumnsCount"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: nColumns to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: add to MethodInvocation at 1", "MOV SimpleName: columns to MethodInvocation at 0"]}, {"root": "UPDATE from nIndexes to getIndexesCount", "operations": ["UPD SimpleName: nIndexes from nIndexes to getIndexesCount"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: nIndexes to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: curPTableProto to MethodInvocation at 1"]}, {"root": "UPDATE from valueSize to value", "operations": ["UPD SimpleName: valueSize from valueSize to value"]}, {"root": "INS ArrayCreation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to ArrayCreation at 1", "INS ArrayCreation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodInvocation to InfixExpression: < at 1", "operations": ["INS SimpleName: pTableStatsProto to MethodInvocation at 0", "INS SimpleName: getValuesCount to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: < at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: pTableStatsProto to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: input to MethodInvocation at 1", "MOV SimpleName: Bytes to MethodInvocation at 0"]}, {"root": "UPDATE from input to hasViewStatement", "operations": ["UPD SimpleName: input from input to hasViewStatement"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ForStatement to Block at 2", "MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from index to result", "operations": ["UPD SimpleName: index from index to result"]}, {"root": "INS SimpleName: result to MethodInvocation at 0", "operations": ["INS SimpleName: result to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS SimpleName: table to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS SimpleName: getTableName to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from ordinal to getType", "operations": ["UPD SimpleName: ordinal from ordinal to getType"]}, {"root": "INS SimpleName: setIndexState to MethodInvocation at 1", "operations": ["INS SimpleName: setIndexState to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: table to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from pkName to setPkNameBytes", "operations": ["UPD SimpleName: pkName from pkName to setPkNameBytes"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: pkName to MethodInvocation at 1", "MOV SimpleName: getBytes to MethodInvocation at 1"]}, {"root": "UPDATE from writeVInt to setBucketNum", "operations": ["UPD SimpleName: writeVInt from writeVInt to setBucketNum", "UPD SimpleName: writeVInt from writeVInt to setBucketNum"]}, {"root": "INS SimpleName: builder to MethodInvocation at 0", "operations": ["INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "UPDATE from column to addColumns", "operations": ["UPD SimpleName: column from column to addColumns"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: column to MethodInvocation at 2"]}, {"root": "INS SimpleName: builder to MethodInvocation at 0", "operations": ["INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "UPDATE from index to addIndexes", "operations": ["UPD SimpleName: index from index to addIndexes"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from writeByteArray to setDefaultFamilyName", "operations": ["UPD SimpleName: writeByteArray from writeByteArray to setDefaultFamilyName"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: table to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: wrap to MethodInvocation at 1"]}, {"root": "UPDATE from writeByteArray to setViewStatement", "operations": ["UPD SimpleName: writeByteArray from writeByteArray to setViewStatement"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: wrap to MethodInvocation at 1", "INS SimpleName: table to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from setWriteToWAL to setDurability", "operations": ["UPD SimpleName: setWriteToWAL from setWriteToWAL to setDurability"]}, {"root": "INS QualifiedName: Durability.SKIP_WAL to MethodInvocation at 2", "operations": ["INS QualifiedName: Durability.SKIP_WAL to MethodInvocation at 2"]}, {"root": "UPDATE from schemaNameBytes to getSchemaNameBytes", "operations": ["UPD SimpleName: schemaNameBytes from schemaNameBytes to getSchemaNameBytes"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: schemaNameBytes to MethodInvocation at 1"]}, {"root": "UPDATE from tableNameBytes to getTableNameBytes", "operations": ["UPD SimpleName: tableNameBytes from tableNameBytes to getTableNameBytes"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: tableNameBytes to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: WritableUtils to MethodInvocation at 0", "MOV SimpleName: readVInt to MethodInvocation at 1"]}, {"root": "UPDATE from readVInt to getTableType", "operations": ["UPD SimpleName: readVInt from readVInt to getTableType"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: PIndexState to MethodInvocation at 0", "MOV SimpleName: values to MethodInvocation at 1"]}, {"root": "UPDATE from values to fromSerializedValue", "operations": ["UPD SimpleName: values from values to fromSerializedValue"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: newName to MethodInvocation at 1", "MOV SimpleName: PNameFactory to MethodInvocation at 0"]}, {"root": "UPDATE from write to PColumnImpl", "operations": ["UPD SimpleName: write from write to PColumnImpl", "UPD SimpleName: WritableUtils from WritableUtils to PColumnImpl"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: input to MethodInvocation at 2", "MOV SimpleName: readVInt to MethodInvocation at 1", "MOV SimpleName: WritableUtils to MethodInvocation at 0"]}, {"root": "UPDATE from index to createFromProto", "operations": ["UPD SimpleName: index from index to createFromProto", "UPD SimpleName: readVInt from readVInt to createFromProto"]}, {"root": "UPDATE from input to curPColumnProto", "operations": ["UPD SimpleName: input from input to curPColumnProto"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: index to MethodInvocation at 0"]}, {"root": "MOVE from ArrayCreation", "operations": ["MOV ArrayType: byte[][] to ArrayCreation at 0"]}, {"root": "UPDATE from key to getKey", "operations": ["UPD SimpleName: key from key to getKey"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: key to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: dataTableNameBytes to MethodInvocation at 1", "MOV SimpleName: newName to MethodInvocation at 1", "MOV SimpleName: PNameFactory to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: defaultFamilyNameBytes to MethodInvocation at 1", "MOV SimpleName: PNameFactory to MethodInvocation at 0", "MOV SimpleName: newName to MethodInvocation at 1"]}, {"root": "INS ArrayAccess to MethodInvocation at 2", "operations": ["INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: getViewType to MethodInvocation at 1", "INS MethodInvocation to ArrayAccess at 0", "INS ArrayAccess to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from ForStatement", "operations": ["MOV PostfixExpression: ++ to ForStatement at 2", "MOV VariableDeclarationExpression to ForStatement at 0"]}, {"root": "INS ParenthesizedExpression to ConditionalExpression at 0", "operations": ["INS ParenthesizedExpression to ConditionalExpression at 0", "INS SimpleName: bucketNum to InfixExpression: == at 0", "INS SimpleName: NO_SALTING to InfixExpression: == at 1", "INS InfixExpression: == to ParenthesizedExpression at 0"]}, {"root": "UPDATE from schemaName to getSchemaName", "operations": ["UPD SimpleName: schemaName from schemaName to getSchemaName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: schemaName to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: tableName to MethodInvocation at 0"]}, {"root": "UPDATE from ordinal to getSerializedValue", "operations": ["UPD SimpleName: ordinal from ordinal to getSerializedValue"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: ordinal to MethodInvocation at 1", "MOV SimpleName: state to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: write to MethodInvocation at 0", "MOV SimpleName: output to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: write to MethodInvocation at 0", "MOV SimpleName: output to MethodInvocation at 1"]}, {"root": "UPDATE from output to curIndex", "operations": ["UPD SimpleName: output from output to curIndex"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: writeByte to MethodInvocation at 1", "MOV SimpleName: output to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: table to MethodInvocation at 0"]}, {"root": "UPDATE from input to toByteArray", "operations": ["UPD SimpleName: input from input to toByteArray", "UPD SimpleName: input from input to toByteArray", "UPD SimpleName: readByte from readByte to toByteArray"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: readVInt to MethodInvocation at 1", "MOV SimpleName: input to MethodInvocation at 1", "MOV SimpleName: WritableUtils to MethodInvocation at 0"]}, {"root": "UPDATE from WritableUtils to pTableStatsProto", "operations": ["UPD SimpleName: WritableUtils from WritableUtils to pTableStatsProto"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: WritableUtils to MethodInvocation at 0", "MOV SimpleName: readVInt to MethodInvocation at 1"]}, {"root": "UPDATE from readVInt to getValuesCount", "operations": ["UPD SimpleName: readVInt from readVInt to getValuesCount"]}, {"root": "INS CastExpression to Assignment: = at 1", "operations": ["INS CastExpression to Assignment: = at 1"]}, {"root": "INS MethodInvocation to InfixExpression: < at 1", "operations": ["INS SimpleName: table to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: < at 1", "INS SimpleName: getPhysicalNamesCount to MethodInvocation at 1"]}, {"root": "UPDATE from state to getIndexState", "operations": ["UPD SimpleName: state from state to getIndexState"]}, {"root": "UPDATE from stats to statsBuilder", "operations": ["UPD SimpleName: stats from stats to statsBuilder"]}, {"root": "UPDATE from write to setKey", "operations": ["UPD SimpleName: write from write to setKey"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getKey to MethodInvocation at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ArrayType: byte[] to SingleVariableDeclaration at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getBytes to MethodInvocation at 1", "MOV SimpleName: parentTableName to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getBytes to MethodInvocation at 1", "MOV SimpleName: defaultFamilyName to MethodInvocation at 1"]}, {"root": "MOVE from ArrayCreation", "operations": ["MOV ArrayType: byte[] to ArrayCreation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: toBytes to MethodInvocation at 1", "MOV QualifiedName: PDataType.VARCHAR to MethodInvocation at 0", "MOV SimpleName: viewStatement to MethodInvocation at 1"]}, {"root": "UPDATE from physicalNames to getPhysicalNames", "operations": ["UPD SimpleName: physicalNames from physicalNames to getPhysicalNames", "UPD SimpleName: physicalNameBytes from physicalNameBytes to getPhysicalNames", "UPD SimpleName: physicalNames from physicalNames to getPhysicalNames"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: physicalNames to MethodInvocation at 1"]}, {"root": "INS SimpleName: builder to MethodInvocation at 0", "operations": ["INS SimpleName: builder to MethodInvocation at 0"]}, {"root": "UPDATE from Bytes to addPhysicalNames", "operations": ["UPD SimpleName: Bytes from Bytes to addPhysicalNames"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from readVInt to getPkNameBytes", "operations": ["UPD SimpleName: readVInt from readVInt to getPkNameBytes"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: pTableStatsProto to MethodInvocation at 0"]}, {"root": "UPDATE from dataTableNameBytes to getDataTableNameBytes", "operations": ["UPD SimpleName: dataTableNameBytes from dataTableNameBytes to getDataTableNameBytes"]}, {"root": "UPDATE from defaultFamilyName to getDefaultFamilyName", "operations": ["UPD SimpleName: defaultFamilyName from defaultFamilyName to getDefaultFamilyName", "UPD SimpleName: defaultFamilyNameBytes from defaultFamilyNameBytes to getDefaultFamilyName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: input to MethodInvocation at 0", "MOV SimpleName: readByte to MethodInvocation at 1"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1", "MOV SimpleType: String to CastExpression at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: table to MethodInvocation at 0"]}, {"root": "UPDATE from output to entry", "operations": ["UPD SimpleName: output from output to entry"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 0"]}, {"root": "UPDATE from parentTableName to getParentTableName", "operations": ["UPD SimpleName: parentTableName from parentTableName to getParentTableName"]}, {"root": "UPDATE from viewStatement to getViewStatement", "operations": ["UPD SimpleName: viewStatement from viewStatement to getViewStatement", "UPD SimpleName: viewStatementBytes from viewStatementBytes to getViewStatement"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: writeByteArray to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS SimpleName: kv to MethodInvocation at 0", "INS SimpleName: getQualifierOffset to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "INS MethodInvocation to MethodInvocation at 4", "operations": ["INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: kv to MethodInvocation at 0", "INS SimpleName: getQualifierLength to MethodInvocation at 1"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 6", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 6"]}, {"root": "INS QualifiedName: qualifier.length to MethodInvocation at 7", "operations": ["INS QualifiedName: qualifier.length to MethodInvocation at 7"]}, {"root": "UPDATE from Bytes to getValues", "operations": ["UPD SimpleName: Bytes from Bytes to getValues"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: readByteArray to MethodInvocation at 2", "MOV SimpleName: Bytes to MethodInvocation at 1"]}, {"root": "UPDATE from readByteArray to j", "operations": ["UPD SimpleName: readByteArray from readByteArray to j"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: toByteArray to MethodInvocation at 1", "INS SimpleName: table to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from nPhysicalNames to getPhysicalNamesCount", "operations": ["UPD SimpleName: nPhysicalNames from nPhysicalNames to getPhysicalNamesCount"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: nPhysicalNames to MethodInvocation at 1"]}, {"root": "UPDATE from Bytes to addValues", "operations": ["UPD SimpleName: Bytes from Bytes to addValues"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: writeByteArray to MethodInvocation at 1", "MOV SimpleName: Bytes to MethodInvocation at 1", "MOV SimpleName: output to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getSerializedValue to MethodInvocation at 1", "MOV SimpleName: viewType to MethodInvocation at 1"]}, {"root": "UPDATE from getQualifier to getQualifierArray", "operations": ["UPD SimpleName: getQualifier from getQualifier to getQualifierArray"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: i to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: toByteArray to MethodInvocation at 1", "INS SimpleName: table to MethodInvocation at 0"]}, {"root": "UPDATE from output to curVal", "operations": ["UPD SimpleName: output from output to curVal"]}, {"root": "UPDATE from viewType to getViewType", "operations": ["UPD SimpleName: viewType from viewType to getViewType"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: table to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: viewStatementBytes to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: physicalNames to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: physicalNameBytes to MethodInvocation at 1"]}, {"root": "DEL SingleMemberAnnotation", "operations": ["DEL SingleMemberAnnotation", "DEL StringLiteral: \"deprecation\"", "DEL SimpleName: SuppressWarnings"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL MethodInvocation", "DEL SimpleName: isWALDisabled", "DEL PrefixExpression: !"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL MarkerAnnotation", "DEL SimpleName: Override"]}, {"root": "DEL ArrayAccess", "operations": ["DEL MethodInvocation", "DEL ArrayAccess", "DEL SimpleName: ordinal"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL SimpleName: tableType", "DEL QualifiedName: PTableType.INDEX", "DEL InfixExpression: =="]}, {"root": "DEL Block", "operations": ["DEL IfStatement", "DEL SimpleName: ordinal", "DEL NumberLiteral: 0", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: ordinal", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: input", "DEL InfixExpression: >="]}, {"root": "DEL SimpleName: input", "operations": ["DEL SimpleName: input"]}, {"root": "DEL SimpleName: input", "operations": ["DEL SimpleName: input"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: input", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: valueSize", "operations": ["DEL SimpleName: valueSize"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL ConditionalExpression", "operations": ["DEL NumberLiteral: 0", "DEL CastExpression", "DEL QualifiedName: viewStatementBytes.length", "DEL NullLiteral", "DEL InfixExpression: ==", "DEL ConditionalExpression"]}, {"root": "DEL SimpleName: nPhysicalNames", "operations": ["DEL SimpleName: nPhysicalNames"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: physicalNameBytes", "DEL SimpleName: input", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: Bytes", "DEL SimpleName: readByteArray"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: viewStatementBytes", "DEL SimpleName: readByteArray", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: input", "DEL MethodInvocation", "DEL SimpleName: readVInt", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement", "DEL SimpleName: nPhysicalNames", "DEL SimpleName: WritableUtils"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: bucketNum", "DEL SimpleName: NO_SALTING", "DEL SimpleName: equals"]}, {"root": "DEL PrimitiveType: void", "operations": ["DEL PrimitiveType: void"]}, {"root": "DEL SimpleName: readFields", "operations": ["DEL SimpleName: readFields"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: DataInput", "DEL SimpleName: input", "DEL SingleVariableDeclaration"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleName: IOException", "DEL SimpleType: IOException"]}, {"root": "DEL Block", "operations": ["DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL ForStatement", "DEL SimpleName: nIndexes", "DEL SimpleName: value", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SimpleName: Bytes", "DEL VariableDeclarationFragment", "DEL SimpleName: pkNameBytes", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: PColumn", "DEL SimpleName: index", "DEL VariableDeclarationExpression", "DEL SimpleName: readVInt", "DEL PostfixExpression: ++", "DEL SimpleName: i", "DEL SimpleName: PColumnImpl", "DEL SimpleName: i", "DEL ArrayType: byte[]", "DEL Block", "DEL SimpleName: column", "DEL ConditionalExpression", "DEL ArrayType: byte[]", "DEL QualifiedName: pkNameBytes.length", "DEL ConditionalExpression", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Dimension", "DEL VariableDeclarationStatement", "DEL ForStatement", "DEL Dimension", "DEL VariableDeclarationFragment", "DEL SimpleName: pkName", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL PostfixExpression: ++", "DEL MethodInvocation", "DEL SimpleName: key", "DEL SimpleName: i", "DEL SimpleName: input", "DEL SimpleName: column", "DEL SimpleName: dataTableName", "DEL NullLiteral", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: readFields", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: input", "DEL SimpleName: i", "DEL SimpleName: valueSize", "DEL QualifiedName: defaultFamilyNameBytes.length", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL SimpleName: bucketNum", "DEL SimpleName: nIndexes", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL SimpleName: readByteArray", "DEL QualifiedName: dataTableNameBytes.length", "DEL SimpleName: nColumns", "DEL Block", "DEL ArrayType: byte[]", "DEL SimpleName: input", "DEL InfixExpression: ==", "DEL SimpleName: schemaNameBytes", "DEL VariableDeclarationFragment", "DEL ArrayType: byte[]", "DEL SimpleName: i", "DEL MethodInvocation", "DEL PrimitiveType: byte", "DEL SimpleName: i", "DEL SimpleName: input", "DEL PrimitiveType: byte", "DEL VariableDeclarationFragment", "DEL SimpleName: WritableUtils", "DEL InfixExpression: <", "DEL NumberLiteral: 0", "DEL SimpleName: defaultFamilyName", "DEL ConditionalExpression", "DEL VariableDeclarationExpression", "DEL PostfixExpression: ++", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL SimpleName: readByteArray", "DEL SimpleName: Bytes", "DEL VariableDeclarationStatement", "DEL PrimitiveType: byte", "DEL VariableDeclarationStatement", "DEL Block", "DEL ArrayCreation", "DEL SimpleName: size", "DEL SimpleName: input", "DEL PrimitiveType: byte", "DEL SimpleType: PColumn", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL SimpleName: i", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL InfixExpression: <", "DEL VariableDeclarationStatement", "DEL InfixExpression: ==", "DEL VariableDeclarationStatement", "DEL SimpleName: input", "DEL SimpleType: PColumnImpl", "DEL SimpleName: i", "DEL SimpleName: readString", "DEL PrimitiveType: byte", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL ForStatement", "DEL Dimension", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 0", "DEL InfixExpression: <", "DEL SimpleName: i", "DEL MethodInvocation", "DEL ArrayType: byte[]", "DEL SimpleName: size", "DEL SimpleName: readFields", "DEL MethodInvocation", "DEL SimpleName: input", "DEL InfixExpression: ==", "DEL Block", "DEL Dimension", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL Dimension", "DEL VariableDeclarationExpression", "DEL NullLiteral", "DEL SimpleName: tableNameBytes", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL MarkerAnnotation", "DEL SimpleName: Override"]}, {"root": "DEL PrimitiveType: void", "operations": ["DEL PrimitiveType: void"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL InfixExpression: ==", "DEL SimpleName: type"]}, {"root": "DEL SimpleName: writeVInt", "operations": ["DEL SimpleName: writeVInt"]}, {"root": "DEL SimpleName: output", "operations": ["DEL SimpleName: output"]}, {"root": "DEL ConditionalExpression", "operations": ["DEL MethodInvocation", "DEL SimpleName: state", "DEL PrefixExpression: -", "DEL ConditionalExpression", "DEL NumberLiteral: 1", "DEL NullLiteral", "DEL InfixExpression: =="]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL SimpleName: output", "operations": ["DEL SimpleName: output"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL PostfixExpression: --", "DEL SimpleName: nColumns"]}, {"root": "DEL SimpleName: output", "operations": ["DEL SimpleName: output"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: size", "DEL MethodInvocation", "DEL SimpleName: allColumns"]}, {"root": "DEL ConditionalExpression", "operations": ["DEL SimpleName: defaultFamilyName", "DEL MethodInvocation", "DEL QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY", "DEL NullLiteral", "DEL InfixExpression: ==", "DEL ConditionalExpression"]}, {"root": "DEL SimpleName: type", "operations": ["DEL SimpleName: type"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL ConditionalExpression", "operations": ["DEL InfixExpression: ==", "DEL SimpleName: viewStatement", "DEL NullLiteral", "DEL ConditionalExpression", "DEL MethodInvocation", "DEL QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: output", "DEL SimpleName: WritableUtils", "DEL MethodInvocation", "DEL SimpleName: writeVInt", "DEL SimpleName: physicalNames", "DEL SimpleName: size"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: DataOutput", "DEL SingleVariableDeclaration", "DEL SimpleName: DataOutput", "DEL SimpleName: output"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleName: IOException", "DEL SimpleType: IOException"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: output", "DEL InfixExpression: ==", "DEL SimpleName: writeVInt", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL SimpleName: parentTableName", "DEL ExpressionStatement", "DEL SimpleName: WritableUtils", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: Bytes", "DEL Block", "DEL SimpleName: writeByteArray", "DEL ConditionalExpression", "DEL MethodInvocation", "DEL QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY", "DEL QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: output", "DEL ConditionalExpression"]}]}}, {"PTableImpl_diff": {"operations": ["Move ImportDeclaration(11) into CompilationUnit(4604) at 15", "Move ImportDeclaration(13) into CompilationUnit(4604) at 15", "Move ImportDeclaration(33) into CompilationUnit(4604) at 18", "Move ImportDeclaration(47) into CompilationUnit(4604) at 26", "Insert ImportDeclaration(49) into CompilationUnit(4604) at 24", "Insert ImportDeclaration(87) into CompilationUnit(4604) at 43", "Move MethodDeclaration(3953) into TypeDeclaration: class(4603) at 87", "Move MethodDeclaration(4227) into TypeDeclaration: class(4603) at 87", "Update QualifiedName: java.io.DataInput(10) to java.util.Map.Entry", "Update QualifiedName: java.io.DataOutput(12) to org.apache.hadoop.hbase.Cell", "Update QualifiedName: org.apache.hadoop.hbase.KeyValue(32) to org.apache.hadoop.hbase.client.Durability", "Insert QualifiedName: org.apache.phoenix.coprocessor.generated.PTableProtos(48) into ImportDeclaration(49) at 0", "Update QualifiedName: org.apache.hadoop.io.WritableUtils(46) to org.apache.phoenix.protobuf.ProtobufUtil", "Insert QualifiedName: com.google.protobuf.HBaseZeroCopyByteString(86) into ImportDeclaration(87) at 0", "Insert Javadoc(3700) into MethodDeclaration(4176) at 0", "Insert Modifier: static(3702) into MethodDeclaration(4176) at 2", "Insert SimpleType: PTable(3704) into MethodDeclaration(4176) at 3", "Insert SimpleName: createFromProto(3705) into MethodDeclaration(4176) at 4", "Insert SingleVariableDeclaration(3709) into MethodDeclaration(4176) at 5", "Insert Block(4175) into MethodDeclaration(4176) at 6", "Insert Modifier: static(4178) into MethodDeclaration(4602) at 1", "Insert SimpleType: PTableProtos.PTable(4180) into MethodDeclaration(4602) at 2", "Update SimpleName: write(3958) to toProto", "Move SingleVariableDeclaration(4112) into MethodDeclaration(4602) at 6", "Insert Block(4601) into MethodDeclaration(4602) at 5", "Insert TagElement(3697) into Javadoc(3700) at 0", "Insert TagElement: @param(3699) into Javadoc(3700) at 1", "Update SimpleName: DataInput(3390) to PTable", "Move SimpleName: DataInput(3390) into SimpleType: PTable(3704) at 0", "Insert SimpleType: PTableProtos.PTable(3707) into SingleVariableDeclaration(3709) at 0", "Insert SimpleName: table(3708) into SingleVariableDeclaration(3709) at 1", "Move VariableDeclarationStatement(3424) into Block(4175) at 0", "Move VariableDeclarationStatement(3433) into Block(4175) at 1", "Move VariableDeclarationStatement(3446) into Block(4175) at 2", "Move VariableDeclarationStatement(3452) into Block(4175) at 3", "Move IfStatement(3478) into Block(4175) at 4", "Move VariableDeclarationStatement(3486) into Block(4175) at 5", "Move VariableDeclarationStatement(3493) into Block(4175) at 6", "Insert VariableDeclarationStatement(3789) into Block(4175) at 7", "Insert IfStatement(3805) into Block(4175) at 8", "Move VariableDeclarationStatement(3534) into Block(4175) at 9", "Move VariableDeclarationStatement(3546) into Block(4175) at 10", "Insert EnhancedForStatement(3843) into Block(4175) at 11", "Move VariableDeclarationStatement(3596) into Block(4175) at 12", "Insert EnhancedForStatement(3873) into Block(4175) at 13", "Move VariableDeclarationStatement(3633) into Block(4175) at 14", "Move VariableDeclarationStatement(3655) into Block(4175) at 15", "Insert EnhancedForStatement(3959) into Block(4175) at 16", "Insert VariableDeclarationStatement(3965) into Block(4175) at 17", "Insert IfStatement(3981) into Block(4175) at 18", "Insert VariableDeclarationStatement(3987) into Block(4175) at 19", "Insert IfStatement(4003) into Block(4175) at 20", "Move VariableDeclarationStatement(3787) into Block(4175) at 21", "Move VariableDeclarationStatement(3794) into Block(4175) at 22", "Move VariableDeclarationStatement(3800) into Block(4175) at 23", "Move VariableDeclarationStatement(3806) into Block(4175) at 24", "Move VariableDeclarationStatement(3817) into Block(4175) at 25", "Move IfStatement(3901) into Block(4175) at 26", "Move VariableDeclarationStatement(3910) into Block(4175) at 27", "Move TryStatement(3951) into Block(4175) at 28", "Insert QualifiedName: PTableProtos.PTable(4179) into SimpleType: PTableProtos.PTable(4180) at 0", "Update SimpleName: index(4111) to table", "Insert VariableDeclarationStatement(4193) into Block(4601) at 0", "Move ExpressionStatement(3972) into Block(4601) at 1", "Move ExpressionStatement(3980) into Block(4601) at 2", "Move ExpressionStatement(3988) into Block(4601) at 3", "Move IfStatement(4007) into Block(4601) at 4", "Move ExpressionStatement(4013) into Block(4601) at 5", "Move ExpressionStatement(4018) into Block(4601) at 6", "Insert VariableDeclarationStatement(4271) into Block(4601) at 7", "Insert IfStatement(4286) into Block(4601) at 8", "Move VariableDeclarationStatement(4041) into Block(4601) at 9", "Insert VariableDeclarationStatement(4299) into Block(4601) at 10", "Move IfStatement(4066) into Block(4601) at 11", "Insert VariableDeclarationStatement(4330) into Block(4601) at 12", "Insert VariableDeclarationStatement(4337) into Block(4601) at 13", "Move ForStatement(4100) into Block(4601) at 14", "Insert VariableDeclarationStatement(4377) into Block(4601) at 15", "Move EnhancedForStatement(4120) into Block(4601) at 16", "Move ExpressionStatement(4125) into Block(4601) at 17", "Insert VariableDeclarationStatement(4415) into Block(4601) at 18", "Insert IfStatement(4476) into Block(4601) at 19", "Insert IfStatement(4495) into Block(4601) at 20", "Insert IfStatement(4514) into Block(4601) at 21", "Move ExpressionStatement(4161) into Block(4601) at 22", "Move ExpressionStatement(4166) into Block(4601) at 23", "Move IfStatement(4225) into Block(4601) at 24", "Insert ReturnStatement(4600) into Block(4601) at 25", "Insert IfStatement(3274) into Block(3275) at 3", "Insert TextElement: Construct a PTable instance from ProtoBuffered PTable instance(3696) into TagElement(3697) at 0", "Insert SimpleName: table(3698) into TagElement: @param(3699) at 0", "Insert QualifiedName: PTableProtos.PTable(3706) into SimpleType: PTableProtos.PTable(3707) at 0", "Move SimpleType: PName(3505) into VariableDeclarationStatement(3722) at 0", "Move SimpleType: PName(3744) into VariableDeclarationStatement(3735) at 0", "Insert MethodInvocation(3758) into IfStatement(3769) at 0", "Move Block(3475) into IfStatement(3769) at 1", "Move SimpleType: PName(3768) into VariableDeclarationStatement(3789) at 0", "Insert VariableDeclarationFragment(3788) into VariableDeclarationStatement(3789) at 1", "Insert MethodInvocation(3792) into IfStatement(3805) at 0", "Insert Block(3804) into IfStatement(3805) at 1", "Insert SingleVariableDeclaration(3830) into EnhancedForStatement(3843) at 0", "Insert MethodInvocation(3833) into EnhancedForStatement(3843) at 1", "Insert Block(3842) into EnhancedForStatement(3843) at 2", "Insert SingleVariableDeclaration(3861) into EnhancedForStatement(3873) at 0", "Insert MethodInvocation(3864) into EnhancedForStatement(3873) at 1", "Insert Block(3872) into EnhancedForStatement(3873) at 2", "Insert SingleVariableDeclaration(3906) into EnhancedForStatement(3959) at 0", "Insert MethodInvocation(3909) into EnhancedForStatement(3959) at 1", "Insert Block(3958) into EnhancedForStatement(3959) at 2", "Move SimpleType: PName(3426) into VariableDeclarationStatement(3965) at 0", "Insert VariableDeclarationFragment(3964) into VariableDeclarationStatement(3965) at 1", "Insert MethodInvocation(3968) into IfStatement(3981) at 0", "Insert Block(3980) into IfStatement(3981) at 1", "Move SimpleType: PName(3417) into VariableDeclarationStatement(3987) at 0", "Insert VariableDeclarationFragment(3986) into VariableDeclarationStatement(3987) at 1", "Insert MethodInvocation(3990) into IfStatement(4003) at 0", "Insert Block(4002) into IfStatement(4003) at 1", "Insert SimpleType: PTableProtos.PTable.Builder(4187) into VariableDeclarationStatement(4193) at 0", "Insert VariableDeclarationFragment(4192) into VariableDeclarationStatement(4193) at 1", "Insert InfixExpression: &&(4238) into IfStatement(4249) at 0", "Insert SimpleType: PName(4265) into VariableDeclarationStatement(4271) at 0", "Insert VariableDeclarationFragment(4270) into VariableDeclarationStatement(4271) at 1", "Insert InfixExpression: !=(4274) into IfStatement(4286) at 0", "Insert Block(4285) into IfStatement(4286) at 1", "Move SimpleType: Integer(3519) into VariableDeclarationStatement(4294) at 0", "Insert PrimitiveType: int(4295) into VariableDeclarationStatement(4299) at 0", "Move VariableDeclarationFragment(4035) into VariableDeclarationStatement(4299) at 1", "Insert ParameterizedType: List<PColumn>(4324) into VariableDeclarationStatement(4330) at 0", "Insert VariableDeclarationFragment(4329) into VariableDeclarationStatement(4330) at 1", "Insert PrimitiveType: int(4331) into VariableDeclarationStatement(4337) at 0", "Insert VariableDeclarationFragment(4336) into VariableDeclarationStatement(4337) at 1", "Insert ParameterizedType: List<PTable>(4371) into VariableDeclarationStatement(4377) at 0", "Insert VariableDeclarationFragment(4376) into VariableDeclarationStatement(4377) at 1", "Insert SingleVariableDeclaration(4381) into EnhancedForStatement(4391) at 0", "Insert ParameterizedType: Map<String,byte[][]>(4407) into VariableDeclarationStatement(4415) at 0", "Insert VariableDeclarationFragment(4414) into VariableDeclarationStatement(4415) at 1", "Insert InfixExpression: !=(4418) into IfStatement(4476) at 0", "Insert Block(4475) into IfStatement(4476) at 1", "Insert InfixExpression: !=(4481) into IfStatement(4495) at 0", "Insert Block(4494) into IfStatement(4495) at 1", "Insert InfixExpression: !=(4500) into IfStatement(4514) at 0", "Insert Block(4513) into IfStatement(4514) at 1", "Insert MethodInvocation(4599) into ReturnStatement(4600) at 0", "Update ParameterizedType: Map<byte[],List<KeyValue>>(2929) to Map<byte[],List<Cell>>", "Update ParameterizedType: List<KeyValue>(2940) to List<Cell>", "Move SimpleType: Delete(3243) into VariableDeclarationStatement(3257) at 0", "Insert InfixExpression: ==(3267) into IfStatement(3274) at 0", "Insert Block(3273) into IfStatement(3274) at 1", "Update SimpleName: WritableUtils(3458) to table", "Move SimpleName: WritableUtils(3458) into MethodInvocation(3758) at 0", "Update SimpleName: readVInt(3459) to hasIndexState", "Move SimpleName: readVInt(3459) into MethodInvocation(3758) at 1", "Update SimpleName: pkNameBytes(3497) to pkName", "Move SimpleName: pkNameBytes(3497) into VariableDeclarationFragment(3788) at 0", "Insert NullLiteral(3787) into VariableDeclarationFragment(3788) at 1", "Update SimpleName: Bytes(3498) to table", "Move SimpleName: Bytes(3498) into MethodInvocation(3792) at 0", "Update SimpleName: readByteArray(3499) to hasPkNameBytes", "Move SimpleName: readByteArray(3499) into MethodInvocation(3792) at 1", "Insert ExpressionStatement(3803) into Block(3804) at 0", "Update SimpleName: nColumns(3528) to bucketNum", "Insert SimpleType: PTableProtos.PColumn(3828) into SingleVariableDeclaration(3830) at 0", "Insert SimpleName: curPColumnProto(3829) into SingleVariableDeclaration(3830) at 1", "Update SimpleName: column(3565) to table", "Move SimpleName: column(3565) into MethodInvocation(3833) at 0", "Update SimpleName: input(3567) to getColumnsList", "Move SimpleName: input(3567) into MethodInvocation(3833) at 1", "Insert ExpressionStatement(3841) into Block(3842) at 0", "Insert SimpleType: PTableProtos.PTable(3859) into SingleVariableDeclaration(3861) at 0", "Insert SimpleName: curPTableProto(3860) into SingleVariableDeclaration(3861) at 1", "Insert SimpleName: table(3862) into MethodInvocation(3864) at 0", "Insert SimpleName: getIndexesList(3863) into MethodInvocation(3864) at 1", "Move ExpressionStatement(3624) into Block(3872) at 0", "Insert SimpleType: PTableProtos.PTableStats(3904) into SingleVariableDeclaration(3906) at 0", "Insert SimpleName: pTableStatsProto(3905) into SingleVariableDeclaration(3906) at 1", "Update SimpleName: WritableUtils(3658) to table", "Move SimpleName: WritableUtils(3658) into MethodInvocation(3909) at 0", "Update SimpleName: input(3660) to getGuidePostsList", "Move SimpleName: input(3660) into MethodInvocation(3909) at 1", "Move VariableDeclarationStatement(3690) into Block(3958) at 0", "Move ForStatement(3724) into Block(3958) at 1", "Move ExpressionStatement(3730) into Block(3958) at 2", "Update SimpleName: dataTableNameBytes(3736) to dataTableName", "Move SimpleName: dataTableNameBytes(3736) into VariableDeclarationFragment(3964) at 0", "Insert NullLiteral(3963) into VariableDeclarationFragment(3964) at 1", "Update SimpleName: Bytes(3737) to table", "Move SimpleName: Bytes(3737) into MethodInvocation(3968) at 0", "Update SimpleName: readByteArray(3738) to hasDataTableNameBytes", "Move SimpleName: readByteArray(3738) into MethodInvocation(3968) at 1", "Insert ExpressionStatement(3979) into Block(3980) at 0", "Update SimpleName: defaultFamilyNameBytes(3760) to defaultFamilyName", "Move SimpleName: defaultFamilyNameBytes(3760) into VariableDeclarationFragment(3986) at 0", "Insert NullLiteral(3985) into VariableDeclarationFragment(3986) at 1", "Update SimpleName: Bytes(3761) to table", "Move SimpleName: Bytes(3761) into MethodInvocation(3990) at 0", "Update SimpleName: readByteArray(3762) to hasDefaultFamilyName", "Move SimpleName: readByteArray(3762) into MethodInvocation(3990) at 1", "Insert ExpressionStatement(4001) into Block(4002) at 0", "Insert IfStatement(4111) into Block(4112) at 1", "Move VariableDeclarationStatement(3614) into Block(4162) at 0", "Insert ReturnStatement(4161) into Block(4162) at 2", "Insert QualifiedName: PTableProtos.PTable.Builder(4186) into SimpleType: PTableProtos.PTable.Builder(4187) at 0", "Insert SimpleName: builder(4188) into VariableDeclarationFragment(4192) at 0", "Insert MethodInvocation(4191) into VariableDeclarationFragment(4192) at 1", "Insert SimpleName: builder(4194) into MethodInvocation(4204) at 0", "Update SimpleName: Bytes(3965) to setSchemaNameBytes", "Insert MethodInvocation(4203) into MethodInvocation(4204) at 2", "Insert SimpleName: builder(4206) into MethodInvocation(4216) at 0", "Update SimpleName: Bytes(3973) to setTableNameBytes", "Insert MethodInvocation(4215) into MethodInvocation(4216) at 2", "Insert SimpleName: builder(4218) into MethodInvocation(4226) at 0", "Update SimpleName: WritableUtils(3981) to setTableType", "Insert MethodInvocation(4225) into MethodInvocation(4226) at 2", "Insert InfixExpression: ==(4232) into InfixExpression: &&(4238) at 0", "Insert InfixExpression: !=(4237) into InfixExpression: &&(4238) at 1", "Update SimpleName: WritableUtils(4008) to builder", "Update SimpleName: writeVLong(4009) to setSequenceNumber", "Insert MethodInvocation(4254) into MethodInvocation(4255) at 2", "Update SimpleName: output(4014) to builder", "Update SimpleName: writeLong(4015) to setTimeStamp", "Insert MethodInvocation(4261) into MethodInvocation(4262) at 2", "Insert SimpleName: PName(4264) into SimpleType: PName(4265) at 0", "Insert SimpleName: tmp(4266) into VariableDeclarationFragment(4270) at 0", "Insert MethodInvocation(4269) into VariableDeclarationFragment(4270) at 1", "Update SimpleName: pkName(4022) to tmp", "Move SimpleName: pkName(4022) into InfixExpression: !=(4274) at 0", "Move NullLiteral(4023) into InfixExpression: !=(4274) at 1", "Insert ExpressionStatement(4284) into Block(4285) at 0", "Update SimpleName: nColumns(4036) to bucketNum", "Insert SimpleType: List(4321) into ParameterizedType: List<PColumn>(4324) at 0", "Insert SimpleType: PColumn(4323) into ParameterizedType: List<PColumn>(4324) at 1", "Insert SimpleName: columns(4325) into VariableDeclarationFragment(4329) at 0", "Insert MethodInvocation(4328) into VariableDeclarationFragment(4329) at 1", "Insert SimpleName: columnSize(4332) into VariableDeclarationFragment(4336) at 0", "Insert MethodInvocation(4335) into VariableDeclarationFragment(4336) at 1", "Insert SimpleName: columnSize(4344) into InfixExpression: <(4345) at 1", "Insert SimpleType: List(4368) into ParameterizedType: List<PTable>(4371) at 0", "Insert SimpleType: PTable(4370) into ParameterizedType: List<PTable>(4371) at 1", "Insert SimpleName: indexes(4372) into VariableDeclarationFragment(4376) at 0", "Insert MethodInvocation(4375) into VariableDeclarationFragment(4376) at 1", "Move SimpleType: PTable(3608) into SingleVariableDeclaration(4381) at 0", "Insert SimpleName: curIndex(4380) into SingleVariableDeclaration(4381) at 1", "Update SimpleName: output(4121) to builder", "Update SimpleName: writeBoolean(4122) to setIsImmutableRows", "Insert MethodInvocation(4396) into MethodInvocation(4397) at 2", "Insert SimpleType: Map(4400) into ParameterizedType: Map<String,byte[][]>(4407) at 0", "Move SimpleType: String(3675) into ParameterizedType: Map<String,byte[][]>(4407) at 1", "Insert ArrayType: byte[][](4406) into ParameterizedType: Map<String,byte[][]>(4407) at 2", "Insert SimpleName: statsMap(4408) into VariableDeclarationFragment(4414) at 0", "Insert MethodInvocation(4413) into VariableDeclarationFragment(4414) at 1", "Insert SimpleName: statsMap(4416) into InfixExpression: !=(4418) at 0", "Insert NullLiteral(4417) into InfixExpression: !=(4418) at 1", "Insert EnhancedForStatement(4474) into Block(4475) at 0", "Insert MethodInvocation(4479) into InfixExpression: !=(4481) at 0", "Move NullLiteral(4135) into InfixExpression: !=(4481) at 1", "Insert ExpressionStatement(4493) into Block(4494) at 0", "Insert MethodInvocation(4498) into InfixExpression: !=(4500) at 0", "Insert NullLiteral(4499) into InfixExpression: !=(4500) at 1", "Move ExpressionStatement(4156) into Block(4513) at 0", "Update SimpleName: output(4157) to builder", "Update SimpleName: writeBoolean(4158) to setDisableWAL", "Insert MethodInvocation(4519) into MethodInvocation(4520) at 2", "Insert SimpleName: builder(4522) into MethodInvocation(4527) at 0", "Update SimpleName: output(4162) to setMultiTenant", "Insert MethodInvocation(4526) into MethodInvocation(4527) at 2", "Insert MethodInvocation(4531) into InfixExpression: ==(4533) at 0", "Insert SimpleName: builder(4597) into MethodInvocation(4599) at 0", "Insert SimpleName: build(4598) into MethodInvocation(4599) at 1", "Update ParameterizedType: List<KeyValue>(2928) to List<Cell>", "Update SimpleType: KeyValue(2939) to Cell", "Insert MethodInvocation(3265) into InfixExpression: ==(3267) at 0", "Insert QualifiedName: PTableType.INDEX(3266) into InfixExpression: ==(3267) at 1", "Move ExpressionStatement(3260) into Block(3273) at 0", "Insert MethodInvocation(3719) into MethodInvocation(3720) at 2", "Insert MethodInvocation(3732) into MethodInvocation(3733) at 2", "Update SimpleName: WritableUtils(3481) to table", "Update SimpleName: readVLong(3482) to getSequenceNumber", "Update SimpleName: input(3489) to table", "Update SimpleName: readLong(3490) to getTimeStamp", "Insert Assignment: =(3802) into ExpressionStatement(3803) at 0", "Update SimpleName: WritableUtils(3529) to table", "Update SimpleName: readVInt(3530) to getBucketNum", "Insert MethodInvocation(3823) into MethodInvocation(3824) at 2", "Insert QualifiedName: PTableProtos.PColumn(3827) into SimpleType: PTableProtos.PColumn(3828) at 0", "Insert MethodInvocation(3840) into ExpressionStatement(3841) at 0", "Insert MethodInvocation(3854) into MethodInvocation(3855) at 2", "Insert QualifiedName: PTableProtos.PTable(3858) into SimpleType: PTableProtos.PTable(3859) at 0", "Update SimpleName: input(3629) to table", "Update SimpleName: readBoolean(3630) to getIsImmutableRows", "Insert QualifiedName: PTableProtos.PTableStats(3903) into SimpleType: PTableProtos.PTableStats(3904) at 0", "Move ArrayType: byte[][](3699) into VariableDeclarationStatement(3924) at 0", "Insert Assignment: =(3978) into ExpressionStatement(3979) at 0", "Insert Assignment: =(4000) into ExpressionStatement(4001) at 0", "Update SimpleName: input(3783) to table", "Update SimpleName: readBoolean(3784) to getDisableWAL", "Update SimpleName: input(3790) to table", "Update SimpleName: readBoolean(3791) to getMultiTenant", "Insert MethodInvocation(4059) into IfStatement(4111) at 0", "Insert Block(4110) into IfStatement(4111) at 1", "Insert SimpleType: PTableImpl(4124) into VariableDeclarationStatement(4130) at 0", "Insert SimpleName: result(4160) into ReturnStatement(4161) at 0", "Insert QualifiedName: PTableProtos.PTable(4189) into MethodInvocation(4191) at 0", "Insert SimpleName: newBuilder(4190) into MethodInvocation(4191) at 1", "Update SimpleName: writeByteArray(3966) to HBaseZeroCopyByteString", "Move SimpleName: writeByteArray(3966) into MethodInvocation(4203) at 0", "Update SimpleName: output(3967) to wrap", "Move SimpleName: output(3967) into MethodInvocation(4203) at 1", "Move MethodInvocation(3970) into MethodInvocation(4203) at 2", "Update SimpleName: writeByteArray(3974) to HBaseZeroCopyByteString", "Move SimpleName: writeByteArray(3974) into MethodInvocation(4215) at 0", "Update SimpleName: output(3975) to wrap", "Move SimpleName: output(3975) into MethodInvocation(4215) at 1", "Move MethodInvocation(3978) into MethodInvocation(4215) at 2", "Update SimpleName: writeVInt(3982) to ProtobufUtil", "Move SimpleName: writeVInt(3982) into MethodInvocation(4225) at 0", "Update SimpleName: output(3983) to toPTableTypeProto", "Move SimpleName: output(3983) into MethodInvocation(4225) at 1", "Move MethodInvocation(3986) into MethodInvocation(4225) at 2", "Insert MethodInvocation(4230) into InfixExpression: ==(4232) at 0", "Move QualifiedName: PTableType.INDEX(3990) into InfixExpression: ==(4232) at 1", "Insert MethodInvocation(4235) into InfixExpression: !=(4237) at 0", "Insert NullLiteral(4236) into InfixExpression: !=(4237) at 1", "Update SimpleName: output(4010) to table", "Move SimpleName: output(4010) into MethodInvocation(4254) at 0", "Update SimpleName: sequenceNumber(4011) to getSequenceNumber", "Move SimpleName: sequenceNumber(4011) into MethodInvocation(4254) at 1", "Insert SimpleName: table(4259) into MethodInvocation(4261) at 0", "Update SimpleName: timeStamp(4016) to getTimeStamp", "Move SimpleName: timeStamp(4016) into MethodInvocation(4261) at 1", "Update SimpleName: output(4021) to table", "Move SimpleName: output(4021) into MethodInvocation(4269) at 0", "Insert SimpleName: getPKName(4268) into MethodInvocation(4269) at 1", "Insert MethodInvocation(4283) into ExpressionStatement(4284) at 0", "Update SimpleName: allColumns(4037) to table", "Update SimpleName: size(4038) to getBucketNum", "Insert SimpleName: List(4320) into SimpleType: List(4321) at 0", "Insert SimpleName: PColumn(4322) into SimpleType: PColumn(4323) at 0", "Update SimpleName: WritableUtils(4067) to table", "Move SimpleName: WritableUtils(4067) into MethodInvocation(4328) at 0", "Update SimpleName: writeVInt(4068) to getColumns", "Move SimpleName: writeVInt(4068) into MethodInvocation(4328) at 1", "Update SimpleName: nColumns(4070) to columns", "Move SimpleName: nColumns(4070) into MethodInvocation(4335) at 0", "Insert SimpleName: size(4334) into MethodInvocation(4335) at 1", "Insert SimpleName: List(4367) into SimpleType: List(4368) at 0", "Insert SimpleName: PTable(4369) into SimpleType: PTable(4370) at 0", "Update SimpleName: indexes(4104) to table", "Move SimpleName: indexes(4104) into MethodInvocation(4375) at 0", "Update SimpleName: size(4105) to getIndexes", "Move SimpleName: size(4105) into MethodInvocation(4375) at 1", "Insert SimpleName: table(4394) into MethodInvocation(4396) at 0", "Move SimpleName: isImmutableRows(4123) into MethodInvocation(4396) at 1", "Insert SimpleName: Map(4399) into SimpleType: Map(4400) at 0", "Insert PrimitiveType: byte(4403) into ArrayType: byte[][](4406) at 0", "Insert Dimension(4404) into ArrayType: byte[][](4406) at 1", "Insert Dimension(4405) into ArrayType: byte[][](4406) at 2", "Insert MethodInvocation(4411) into MethodInvocation(4413) at 0", "Insert SimpleName: getGuidePosts(4412) into MethodInvocation(4413) at 1", "Insert SingleVariableDeclaration(4429) into EnhancedForStatement(4474) at 0", "Insert MethodInvocation(4432) into EnhancedForStatement(4474) at 1", "Insert Block(4473) into EnhancedForStatement(4474) at 2", "Insert SimpleName: table(4477) into MethodInvocation(4479) at 0", "Insert SimpleName: getParentName(4478) into MethodInvocation(4479) at 1", "Insert MethodInvocation(4492) into ExpressionStatement(4493) at 0", "Insert SimpleName: table(4496) into MethodInvocation(4498) at 0", "Insert SimpleName: getDefaultFamilyName(4497) into MethodInvocation(4498) at 1", "Insert SimpleName: table(4517) into MethodInvocation(4519) at 0", "Update SimpleName: disableWAL(4159) to isWALDisabled", "Move SimpleName: disableWAL(4159) into MethodInvocation(4519) at 1", "Update SimpleName: writeBoolean(4163) to table", "Move SimpleName: writeBoolean(4163) into MethodInvocation(4526) at 0", "Update SimpleName: multiTenant(4164) to isMultiTenant", "Move SimpleName: multiTenant(4164) into MethodInvocation(4526) at 1", "Insert SimpleName: table(4529) into MethodInvocation(4531) at 0", "Insert SimpleName: getType(4530) into MethodInvocation(4531) at 1", "Insert MethodInvocation(4549) into ExpressionStatement(4550) at 0", "Move VariableDeclarationExpression(3874) into ForStatement(4594) at 0", "Move PostfixExpression: ++(3879) into ForStatement(4594) at 3", "Update SimpleType: KeyValue(2927) to Cell", "Update SimpleName: getFamilyMap(2932) to getFamilyCellMap", "Update SimpleName: KeyValue(2938) to Cell", "Update ParameterizedType: Iterator<KeyValue>(2955) to Iterator<Cell>", "Move SimpleType: Delete(3240) into ClassInstanceCreation(3255) at 0", "Insert ThisExpression(3263) into MethodInvocation(3265) at 0", "Insert SimpleName: getType(3264) into MethodInvocation(3265) at 1", "Insert MethodInvocation(3717) into MethodInvocation(3719) at 0", "Insert SimpleName: toByteArray(3718) into MethodInvocation(3719) at 1", "Insert MethodInvocation(3730) into MethodInvocation(3732) at 0", "Insert SimpleName: toByteArray(3731) into MethodInvocation(3732) at 1", "Insert MethodInvocation(3744) into MethodInvocation(3746) at 0", "Update SimpleName: input(3442) to ordinal", "Insert MethodInvocation(3765) into Assignment: =(3766) at 1", "Insert SimpleName: pkName(3793) into Assignment: =(3802) at 0", "Insert MethodInvocation(3801) into Assignment: =(3802) at 1", "Insert SimpleName: table(3821) into MethodInvocation(3823) at 0", "Update SimpleName: nColumns(3543) to getColumnsCount", "Move SimpleName: nColumns(3543) into MethodInvocation(3823) at 1", "Move SimpleName: columns(3570) into MethodInvocation(3840) at 0", "Move SimpleName: add(3571) into MethodInvocation(3840) at 1", "Insert MethodInvocation(3839) into MethodInvocation(3840) at 2", "Insert SimpleName: table(3852) into MethodInvocation(3854) at 0", "Update SimpleName: nIndexes(3593) to getIndexesCount", "Move SimpleName: nIndexes(3593) into MethodInvocation(3854) at 1", "Insert MethodInvocation(3869) into MethodInvocation(3870) at 2", "Update SimpleName: valueSize(3684) to value", "Insert ArrayCreation(3922) into VariableDeclarationFragment(3923) at 1", "Insert MethodInvocation(3933) into InfixExpression: <(3934) at 1", "Insert MethodInvocation(3954) into MethodInvocation(3956) at 2", "Insert SimpleName: dataTableName(3969) into Assignment: =(3978) at 0", "Insert MethodInvocation(3977) into Assignment: =(3978) at 1", "Insert SimpleName: defaultFamilyName(3991) into Assignment: =(4000) at 0", "Insert MethodInvocation(3999) into Assignment: =(4000) at 1", "Update SimpleName: Bytes(3834) to table", "Move SimpleName: Bytes(3834) into MethodInvocation(4059) at 0", "Update SimpleName: input(3836) to hasViewStatement", "Move SimpleName: input(3836) into MethodInvocation(4059) at 1", "Move ExpressionStatement(3854) into Block(4110) at 0", "Move ExpressionStatement(3869) into Block(4110) at 1", "Move ForStatement(3899) into Block(4110) at 2", "Insert SimpleName: PTableImpl(4123) into SimpleType: PTableImpl(4124) at 0", "Update SimpleName: index(3609) to result", "Insert SimpleName: result(4131) into MethodInvocation(4158) at 0", "Insert MethodInvocation(4200) into MethodInvocation(4202) at 0", "Insert MethodInvocation(4212) into MethodInvocation(4214) at 0", "Update SimpleName: type(3984) to table", "Update SimpleName: ordinal(3985) to getType", "Insert SimpleName: table(4228) into MethodInvocation(4230) at 0", "Insert SimpleName: getType(4229) into MethodInvocation(4230) at 1", "Insert SimpleName: table(4233) into MethodInvocation(4235) at 0", "Insert SimpleName: getIndexState(4234) into MethodInvocation(4235) at 1", "Update SimpleName: WritableUtils(3992) to builder", "Insert SimpleName: setIndexState(4240) into MethodInvocation(4246) at 1", "Insert MethodInvocation(4245) into MethodInvocation(4246) at 2", "Insert SimpleName: builder(4275) into MethodInvocation(4283) at 0", "Update SimpleName: pkName(4026) to setPkNameBytes", "Move SimpleName: pkName(4026) into MethodInvocation(4283) at 1", "Insert MethodInvocation(4282) into MethodInvocation(4283) at 2", "Update SimpleName: WritableUtils(4045) to builder", "Update SimpleName: writeVInt(4046) to setBucketNum", "Update SimpleName: WritableUtils(4059) to builder", "Update SimpleName: writeVInt(4060) to setBucketNum", "Insert SimpleName: builder(4357) into MethodInvocation(4363) at 0", "Update SimpleName: column(4094) to addColumns", "Insert MethodInvocation(4362) into MethodInvocation(4363) at 2", "Insert SimpleName: builder(4383) into MethodInvocation(4388) at 0", "Update SimpleName: index(4114) to addIndexes", "Insert MethodInvocation(4387) into MethodInvocation(4388) at 2", "Insert SimpleName: table(4409) into MethodInvocation(4411) at 0", "Insert SimpleName: getTableStats(4410) into MethodInvocation(4411) at 1", "Insert ParameterizedType: Entry<String,byte[][]>(4427) into SingleVariableDeclaration(4429) at 0", "Insert SimpleName: entry(4428) into SingleVariableDeclaration(4429) at 1", "Insert SimpleName: statsMap(4430) into MethodInvocation(4432) at 0", "Insert SimpleName: entrySet(4431) into MethodInvocation(4432) at 1", "Insert VariableDeclarationStatement(4440) into Block(4473) at 0", "Move ExpressionStatement(4130) into Block(4473) at 1", "Insert EnhancedForStatement(4465) into Block(4473) at 2", "Insert ExpressionStatement(4472) into Block(4473) at 3", "Insert SimpleName: builder(4482) into MethodInvocation(4492) at 0", "Insert SimpleName: setDataTableNameBytes(4483) into MethodInvocation(4492) at 1", "Insert MethodInvocation(4491) into MethodInvocation(4492) at 2", "Update SimpleName: Bytes(4144) to builder", "Update SimpleName: writeByteArray(4145) to setDefaultFamilyName", "Insert MethodInvocation(4510) into MethodInvocation(4511) at 2", "Insert SimpleName: builder(4534) into MethodInvocation(4549) at 0", "Insert SimpleName: setViewType(4535) into MethodInvocation(4549) at 1", "Insert MethodInvocation(4548) into MethodInvocation(4549) at 2", "Update SimpleName: Bytes(4177) to builder", "Update SimpleName: writeByteArray(4178) to setViewStatement", "Insert MethodInvocation(4561) into MethodInvocation(4562) at 2", "Update SimpleName: KeyValue(2926) to Cell", "Update SimpleType: KeyValue(2954) to Cell", "Insert SimpleName: PTableImpl(3262) into ThisExpression(3263) at 0", "Update SimpleName: setWriteToWAL(3255) to setDurability", "Insert QualifiedName: Durability.SKIP_WAL(3270) into MethodInvocation(3271) at 2", "Insert SimpleName: table(3715) into MethodInvocation(3717) at 0", "Update SimpleName: schemaNameBytes(3421) to getSchemaNameBytes", "Move SimpleName: schemaNameBytes(3421) into MethodInvocation(3717) at 1", "Insert SimpleName: table(3728) into MethodInvocation(3730) at 0", "Update SimpleName: tableNameBytes(3430) to getTableNameBytes", "Move SimpleName: tableNameBytes(3430) into MethodInvocation(3730) at 1", "Update SimpleName: WritableUtils(3440) to table", "Move SimpleName: WritableUtils(3440) into MethodInvocation(3744) at 0", "Update SimpleName: readVInt(3441) to getTableType", "Move SimpleName: readVInt(3441) into MethodInvocation(3744) at 1", "Move SimpleName: PIndexState(3468) into MethodInvocation(3765) at 0", "Update SimpleName: values(3469) to fromSerializedValue", "Move SimpleName: values(3469) into MethodInvocation(3765) at 1", "Insert MethodInvocation(3764) into MethodInvocation(3765) at 2", "Move SimpleName: PNameFactory(3511) into MethodInvocation(3801) at 0", "Move SimpleName: newName(3512) into MethodInvocation(3801) at 1", "Insert MethodInvocation(3800) into MethodInvocation(3801) at 2", "Update SimpleName: WritableUtils(3579) to PColumnImpl", "Move SimpleName: WritableUtils(3579) into MethodInvocation(3839) at 0", "Update SimpleName: readVInt(3580) to createFromProto", "Move SimpleName: readVInt(3580) into MethodInvocation(3839) at 1", "Update SimpleName: input(3581) to curPColumnProto", "Move SimpleName: input(3581) into MethodInvocation(3839) at 2", "Update SimpleName: index(3622) to createFromProto", "Move SimpleName: index(3622) into MethodInvocation(3869) at 0", "Insert SimpleName: curPTableProto(3868) into MethodInvocation(3869) at 1", "Move ArrayType: byte[][](3694) into ArrayCreation(3922) at 0", "Insert MethodInvocation(3921) into ArrayCreation(3922) at 1", "Insert SimpleName: pTableStatsProto(3931) into MethodInvocation(3933) at 0", "Insert SimpleName: getValuesCount(3932) into MethodInvocation(3933) at 1", "Insert SimpleName: pTableStatsProto(3952) into MethodInvocation(3954) at 0", "Update SimpleName: key(3727) to getKey", "Move SimpleName: key(3727) into MethodInvocation(3954) at 1", "Move SimpleName: PNameFactory(3750) into MethodInvocation(3977) at 0", "Move SimpleName: newName(3751) into MethodInvocation(3977) at 1", "Insert MethodInvocation(3976) into MethodInvocation(3977) at 2", "Move SimpleName: PNameFactory(3774) into MethodInvocation(3999) at 0", "Move SimpleName: newName(3775) into MethodInvocation(3999) at 1", "Insert MethodInvocation(3998) into MethodInvocation(3999) at 2", "Insert ArrayAccess(4053) into MethodInvocation(4054) at 2", "Move VariableDeclarationExpression(4203) into ForStatement(4109) at 0", "Move PostfixExpression: ++(4210) into ForStatement(4109) at 2", "Insert ParenthesizedExpression(4143) into ConditionalExpression(4146) at 0", "Insert SimpleName: table(4198) into MethodInvocation(4200) at 0", "Update SimpleName: schemaName(3968) to getSchemaName", "Move SimpleName: schemaName(3968) into MethodInvocation(4200) at 1", "Update SimpleName: tableName(3976) to table", "Move SimpleName: tableName(3976) into MethodInvocation(4212) at 0", "Insert SimpleName: getTableName(4211) into MethodInvocation(4212) at 1", "Insert MethodInvocation(4243) into MethodInvocation(4245) at 0", "Update SimpleName: ordinal(4001) to getSerializedValue", "Move SimpleName: ordinal(4001) into MethodInvocation(4245) at 1", "Insert SimpleName: HBaseZeroCopyByteString(4277) into MethodInvocation(4282) at 0", "Insert SimpleName: wrap(4278) into MethodInvocation(4282) at 1", "Insert MethodInvocation(4281) into MethodInvocation(4282) at 2", "Update SimpleName: allColumns(4088) to columns", "Update SimpleName: write(4095) to PColumnImpl", "Move SimpleName: write(4095) into MethodInvocation(4362) at 0", "Update SimpleName: output(4096) to toProto", "Move SimpleName: output(4096) into MethodInvocation(4362) at 1", "Insert SimpleName: column(4361) into MethodInvocation(4362) at 2", "Update SimpleName: write(4115) to toProto", "Move SimpleName: write(4115) into MethodInvocation(4387) at 0", "Update SimpleName: output(4116) to curIndex", "Move SimpleName: output(4116) into MethodInvocation(4387) at 1", "Insert SimpleType: Entry(4420) into ParameterizedType: Entry<String,byte[][]>(4427) at 0", "Insert SimpleType: String(4422) into ParameterizedType: Entry<String,byte[][]>(4427) at 1", "Insert ArrayType: byte[][](4426) into ParameterizedType: Entry<String,byte[][]>(4427) at 2", "Insert SimpleType: PTableProtos.PTableStats.Builder(4434) into VariableDeclarationStatement(4440) at 0", "Insert VariableDeclarationFragment(4439) into VariableDeclarationStatement(4440) at 1", "Insert SingleVariableDeclaration(4452) into EnhancedForStatement(4465) at 0", "Insert MethodInvocation(4455) into EnhancedForStatement(4465) at 1", "Insert Block(4464) into EnhancedForStatement(4465) at 2", "Insert MethodInvocation(4471) into ExpressionStatement(4472) at 0", "Insert SimpleName: HBaseZeroCopyByteString(4484) into MethodInvocation(4491) at 0", "Insert SimpleName: wrap(4485) into MethodInvocation(4491) at 1", "Insert MethodInvocation(4490) into MethodInvocation(4491) at 2", "Update SimpleName: output(4146) to HBaseZeroCopyByteString", "Move SimpleName: output(4146) into MethodInvocation(4510) at 0", "Insert SimpleName: wrap(4504) into MethodInvocation(4510) at 1", "Insert MethodInvocation(4509) into MethodInvocation(4510) at 2", "Update SimpleName: output(4170) to HBaseZeroCopyByteString", "Move SimpleName: output(4170) into MethodInvocation(4548) at 0", "Update SimpleName: writeByte(4171) to wrap", "Move SimpleName: writeByte(4171) into MethodInvocation(4548) at 1", "Insert ArrayCreation(4547) into MethodInvocation(4548) at 2", "Update SimpleName: output(4179) to HBaseZeroCopyByteString", "Move SimpleName: output(4179) into MethodInvocation(4561) at 0", "Insert SimpleName: wrap(4554) into MethodInvocation(4561) at 1", "Insert MethodInvocation(4560) into MethodInvocation(4561) at 2", "Insert MethodInvocation(4572) into MethodInvocation(4574) at 0", "Update SimpleName: KeyValue(2953) to Cell", "Update SimpleType: KeyValue(2966) to Cell", "Insert SimpleName: table(3762) into MethodInvocation(3764) at 0", "Insert SimpleName: getIndexState(3763) into MethodInvocation(3764) at 1", "Insert MethodInvocation(3798) into MethodInvocation(3800) at 0", "Update SimpleName: input(3523) to toByteArray", "Move SimpleName: input(3523) into MethodInvocation(3800) at 1", "Update SimpleName: WritableUtils(3685) to pTableStatsProto", "Move SimpleName: WritableUtils(3685) into MethodInvocation(3921) at 0", "Update SimpleName: readVInt(3686) to getValuesCount", "Move SimpleName: readVInt(3686) into MethodInvocation(3921) at 1", "Insert MethodInvocation(3974) into MethodInvocation(3976) at 0", "Insert SimpleName: toByteArray(3975) into MethodInvocation(3976) at 1", "Insert MethodInvocation(3996) into MethodInvocation(3998) at 0", "Insert SimpleName: toByteArray(3997) into MethodInvocation(3998) at 1", "Insert MethodInvocation(4051) into ArrayAccess(4053) at 0", "Insert NumberLiteral: 0(4052) into ArrayAccess(4053) at 1", "Insert CastExpression(4071) into Assignment: =(4072) at 1", "Insert MethodInvocation(4091) into InfixExpression: <(4092) at 1", "Insert InfixExpression: ==(4142) into ParenthesizedExpression(4143) at 0", "Insert SimpleName: table(4241) into MethodInvocation(4243) at 0", "Update SimpleName: state(4000) to getIndexState", "Move SimpleName: state(4000) into MethodInvocation(4243) at 1", "Insert SimpleName: tmp(4279) into MethodInvocation(4281) at 0", "Move SimpleName: getBytes(4027) into MethodInvocation(4281) at 1", "Insert SimpleName: Entry(4419) into SimpleType: Entry(4420) at 0", "Insert SimpleName: String(4421) into SimpleType: String(4422) at 0", "Insert PrimitiveType: byte(4423) into ArrayType: byte[][](4426) at 0", "Insert Dimension(4424) into ArrayType: byte[][](4426) at 1", "Insert Dimension(4425) into ArrayType: byte[][](4426) at 2", "Insert QualifiedName: PTableProtos.PTableStats.Builder(4433) into SimpleType: PTableProtos.PTableStats.Builder(4434) at 0", "Insert SimpleName: statsBuilder(4435) into VariableDeclarationFragment(4439) at 0", "Insert MethodInvocation(4438) into VariableDeclarationFragment(4439) at 1", "Update SimpleName: stats(4126) to statsBuilder", "Update SimpleName: write(4127) to setKey", "Insert MethodInvocation(4445) into MethodInvocation(4446) at 2", "Move ArrayType: byte[](3882) into SingleVariableDeclaration(4452) at 0", "Insert SimpleName: curVal(4451) into SingleVariableDeclaration(4452) at 1", "Insert SimpleName: entry(4453) into MethodInvocation(4455) at 0", "Insert SimpleName: getValue(4454) into MethodInvocation(4455) at 1", "Insert ExpressionStatement(4463) into Block(4464) at 0", "Insert SimpleName: builder(4466) into MethodInvocation(4471) at 0", "Insert SimpleName: addGuidePosts(4467) into MethodInvocation(4471) at 1", "Insert MethodInvocation(4470) into MethodInvocation(4471) at 2", "Insert MethodInvocation(4488) into MethodInvocation(4490) at 0", "Move SimpleName: getBytes(4139) into MethodInvocation(4490) at 1", "Insert MethodInvocation(4507) into MethodInvocation(4509) at 0", "Move SimpleName: getBytes(4152) into MethodInvocation(4509) at 1", "Move ArrayType: byte[](3832) into ArrayCreation(4547) at 0", "Insert ArrayInitializer(4546) into ArrayCreation(4547) at 1", "Move QualifiedName: PDataType.VARCHAR(4184) into MethodInvocation(4560) at 0", "Move SimpleName: toBytes(4185) into MethodInvocation(4560) at 1", "Insert MethodInvocation(4559) into MethodInvocation(4560) at 2", "Insert SimpleName: table(4570) into MethodInvocation(4572) at 0", "Update SimpleName: physicalNames(4205) to getPhysicalNames", "Move SimpleName: physicalNames(4205) into MethodInvocation(4572) at 1", "Insert SimpleName: builder(4578) into MethodInvocation(4591) at 0", "Update SimpleName: Bytes(4211) to addPhysicalNames", "Insert MethodInvocation(4590) into MethodInvocation(4591) at 2", "Update SimpleName: KeyValue(2965) to Cell", "Update SimpleName: WritableUtils(3521) to table", "Move SimpleName: WritableUtils(3521) into MethodInvocation(3798) at 0", "Update SimpleName: readVInt(3522) to getPkNameBytes", "Move SimpleName: readVInt(3522) into MethodInvocation(3798) at 1", "Insert MethodInvocation(3943) into MethodInvocation(3945) at 0", "Update SimpleName: input(3719) to toByteArray", "Insert SimpleName: table(3972) into MethodInvocation(3974) at 0", "Update SimpleName: dataTableNameBytes(3752) to getDataTableNameBytes", "Move SimpleName: dataTableNameBytes(3752) into MethodInvocation(3974) at 1", "Insert SimpleName: table(3994) into MethodInvocation(3996) at 0", "Update SimpleName: defaultFamilyNameBytes(3776) to getDefaultFamilyName", "Move SimpleName: defaultFamilyNameBytes(3776) into MethodInvocation(3996) at 1", "Insert MethodInvocation(4049) into MethodInvocation(4051) at 0", "Update SimpleName: readByte(3825) to toByteArray", "Move SimpleName: readByte(3825) into MethodInvocation(4051) at 1", "Move SimpleType: String(3846) into CastExpression(4071) at 0", "Move MethodInvocation(3850) into CastExpression(4071) at 1", "Insert MethodInvocation(4079) into MethodInvocation(4080) at 2", "Insert SimpleName: table(4089) into MethodInvocation(4091) at 0", "Insert SimpleName: getPhysicalNamesCount(4090) into MethodInvocation(4091) at 1", "Insert SimpleName: bucketNum(4140) into InfixExpression: ==(4142) at 0", "Insert SimpleName: NO_SALTING(4141) into InfixExpression: ==(4142) at 1", "Insert QualifiedName: PTableProtos.PTableStats(4436) into MethodInvocation(4438) at 0", "Insert SimpleName: newBuilder(4437) into MethodInvocation(4438) at 1", "Update SimpleName: output(4128) to entry", "Move SimpleName: output(4128) into MethodInvocation(4445) at 0", "Insert SimpleName: getKey(4444) into MethodInvocation(4445) at 1", "Insert MethodInvocation(4462) into ExpressionStatement(4463) at 0", "Insert SimpleName: statsBuilder(4468) into MethodInvocation(4470) at 0", "Insert SimpleName: build(4469) into MethodInvocation(4470) at 1", "Insert SimpleName: table(4486) into MethodInvocation(4488) at 0", "Update SimpleName: parentTableName(4138) to getParentTableName", "Move SimpleName: parentTableName(4138) into MethodInvocation(4488) at 1", "Insert SimpleName: table(4505) into MethodInvocation(4507) at 0", "Update SimpleName: defaultFamilyName(4151) to getDefaultFamilyName", "Move SimpleName: defaultFamilyName(4151) into MethodInvocation(4507) at 1", "Insert MethodInvocation(4545) into ArrayInitializer(4546) at 0", "Insert SimpleName: table(4557) into MethodInvocation(4559) at 0", "Update SimpleName: viewStatement(4186) to getViewStatement", "Move SimpleName: viewStatement(4186) into MethodInvocation(4559) at 1", "Update SimpleName: writeByteArray(4212) to HBaseZeroCopyByteString", "Move SimpleName: writeByteArray(4212) into MethodInvocation(4590) at 0", "Update SimpleName: output(4213) to wrap", "Move SimpleName: output(4213) into MethodInvocation(4590) at 1", "Move MethodInvocation(4219) into MethodInvocation(4590) at 2", "Insert MethodInvocation(2984) into MethodInvocation(2991) at 3", "Insert MethodInvocation(2987) into MethodInvocation(2991) at 4", "Insert NumberLiteral: 0(2989) into MethodInvocation(2991) at 6", "Insert QualifiedName: qualifier.length(2990) into MethodInvocation(2991) at 7", "Insert SimpleName: pTableStatsProto(3940) into MethodInvocation(3943) at 0", "Update SimpleName: Bytes(3717) to getValues", "Move SimpleName: Bytes(3717) into MethodInvocation(3943) at 1", "Update SimpleName: readByteArray(3718) to j", "Move SimpleName: readByteArray(3718) into MethodInvocation(3943) at 2", "Update SimpleName: input(3824) to table", "Move SimpleName: input(3824) into MethodInvocation(4049) at 0", "Insert SimpleName: getViewType(4048) into MethodInvocation(4049) at 1", "Insert MethodInvocation(4069) into MethodInvocation(4070) at 2", "Insert SimpleName: table(4077) into MethodInvocation(4079) at 0", "Update SimpleName: nPhysicalNames(3866) to getPhysicalNamesCount", "Move SimpleName: nPhysicalNames(3866) into MethodInvocation(4079) at 1", "Insert SimpleName: statsBuilder(4456) into MethodInvocation(4462) at 0", "Update SimpleName: Bytes(4131) to addValues", "Move SimpleName: Bytes(4131) into MethodInvocation(4462) at 1", "Insert MethodInvocation(4461) into MethodInvocation(4462) at 2", "Insert MethodInvocation(4543) into MethodInvocation(4545) at 0", "Move SimpleName: getSerializedValue(4173) into MethodInvocation(4545) at 1", "Update SimpleName: getQualifier(2976) to getQualifierArray", "Insert SimpleName: kv(2982) into MethodInvocation(2984) at 0", "Insert SimpleName: getQualifierOffset(2983) into MethodInvocation(2984) at 1", "Insert SimpleName: kv(2985) into MethodInvocation(2987) at 0", "Insert SimpleName: getQualifierLength(2986) into MethodInvocation(2987) at 1", "Insert MethodInvocation(4067) into MethodInvocation(4069) at 0", "Insert SimpleName: toByteArray(4068) into MethodInvocation(4069) at 1", "Insert MethodInvocation(4104) into MethodInvocation(4105) at 2", "Insert SimpleName: HBaseZeroCopyByteString(4458) into MethodInvocation(4461) at 0", "Update SimpleName: writeByteArray(4132) to wrap", "Move SimpleName: writeByteArray(4132) into MethodInvocation(4461) at 1", "Update SimpleName: output(4133) to curVal", "Move SimpleName: output(4133) into MethodInvocation(4461) at 2", "Insert SimpleName: table(4541) into MethodInvocation(4543) at 0", "Update SimpleName: viewType(4172) to getViewType", "Move SimpleName: viewType(4172) into MethodInvocation(4543) at 1", "Insert MethodInvocation(4584) into MethodInvocation(4587) at 0", "Insert SimpleName: table(4065) into MethodInvocation(4067) at 0", "Update SimpleName: viewStatementBytes(3849) to getViewStatement", "Move SimpleName: viewStatementBytes(3849) into MethodInvocation(4067) at 1", "Insert MethodInvocation(4102) into MethodInvocation(4104) at 0", "Insert SimpleName: toByteArray(4103) into MethodInvocation(4104) at 1", "Insert SimpleName: table(4582) into MethodInvocation(4584) at 0", "Update SimpleName: physicalNames(4214) to getPhysicalNames", "Move SimpleName: physicalNames(4214) into MethodInvocation(4584) at 1", "Insert SimpleName: table(4099) into MethodInvocation(4102) at 0", "Update SimpleName: physicalNameBytes(3894) to getPhysicalNames", "Move SimpleName: physicalNameBytes(3894) into MethodInvocation(4102) at 1", "Insert SimpleName: i(4101) into MethodInvocation(4102) at 2", "Delete SimpleName: SuppressWarnings(3228)", "Delete StringLiteral: \"deprecation\"(3229)", "Delete SingleMemberAnnotation(3230)", "Delete NullLiteral(3246)", "Delete SimpleName: isWALDisabled(3256)", "Delete MethodInvocation(3257)", "Delete PrefixExpression: !(3258)", "Delete SimpleName: Override(3385)", "Delete MarkerAnnotation(3386)", "Delete MethodInvocation(3470)", "Delete SimpleName: ordinal(3471)", "Delete ArrayAccess(3472)", "Delete SimpleName: tableType(3453)", "Delete QualifiedName: PTableType.INDEX(3454)", "Delete InfixExpression: ==(3455)", "Delete PrimitiveType: int(3456)", "Delete SimpleName: ordinal(3457)", "Delete SimpleName: input(3460)", "Delete MethodInvocation(3461)", "Delete VariableDeclarationFragment(3462)", "Delete VariableDeclarationStatement(3463)", "Delete SimpleName: ordinal(3464)", "Delete NumberLiteral: 0(3465)", "Delete InfixExpression: >=(3466)", "Delete IfStatement(3476)", "Delete Block(3477)", "Delete SimpleName: input(3483)", "Delete SimpleName: input(3531)", "Delete PrimitiveType: int(3683)", "Delete SimpleName: input(3687)", "Delete MethodInvocation(3688)", "Delete SimpleName: valueSize(3710)", "Delete MethodInvocation(3826)", "Delete QualifiedName: viewStatementBytes.length(3841)", "Delete NumberLiteral: 0(3842)", "Delete InfixExpression: ==(3843)", "Delete NullLiteral(3844)", "Delete CastExpression(3851)", "Delete ConditionalExpression(3852)", "Delete SimpleName: nPhysicalNames(3876)", "Delete SimpleName: physicalNameBytes(3883)", "Delete SimpleName: Bytes(3884)", "Delete SimpleName: readByteArray(3885)", "Delete SimpleName: input(3886)", "Delete MethodInvocation(3887)", "Delete VariableDeclarationFragment(3888)", "Delete VariableDeclarationStatement(3889)", "Delete SimpleName: viewStatementBytes(3833)", "Delete SimpleName: readByteArray(3835)", "Delete MethodInvocation(3837)", "Delete VariableDeclarationFragment(3838)", "Delete VariableDeclarationStatement(3839)", "Delete PrimitiveType: int(3855)", "Delete SimpleName: nPhysicalNames(3856)", "Delete SimpleName: WritableUtils(3857)", "Delete SimpleName: readVInt(3858)", "Delete SimpleName: input(3859)", "Delete MethodInvocation(3860)", "Delete VariableDeclarationFragment(3861)", "Delete VariableDeclarationStatement(3862)", "Delete SimpleName: bucketNum(3919)", "Delete SimpleName: equals(3920)", "Delete SimpleName: NO_SALTING(3921)", "Delete MethodInvocation(3922)", "Delete PrimitiveType: void(3388)", "Delete SimpleName: readFields(3389)", "Delete SimpleType: DataInput(3391)", "Delete SimpleName: input(3392)", "Delete SingleVariableDeclaration(3393)", "Delete SimpleName: IOException(3394)", "Delete SimpleType: IOException(3395)", "Delete PrimitiveType: byte(3396)", "Delete Dimension(3397)", "Delete ArrayType: byte[](3398)", "Delete SimpleName: schemaNameBytes(3399)", "Delete SimpleName: Bytes(3400)", "Delete SimpleName: readByteArray(3401)", "Delete SimpleName: input(3402)", "Delete MethodInvocation(3403)", "Delete VariableDeclarationFragment(3404)", "Delete VariableDeclarationStatement(3405)", "Delete PrimitiveType: byte(3406)", "Delete Dimension(3407)", "Delete ArrayType: byte[](3408)", "Delete SimpleName: tableNameBytes(3409)", "Delete SimpleName: Bytes(3410)", "Delete SimpleName: readByteArray(3411)", "Delete SimpleName: input(3412)", "Delete MethodInvocation(3413)", "Delete VariableDeclarationFragment(3414)", "Delete VariableDeclarationStatement(3415)", "Delete PrimitiveType: byte(3494)", "Delete Dimension(3495)", "Delete ArrayType: byte[](3496)", "Delete SimpleName: input(3500)", "Delete MethodInvocation(3501)", "Delete VariableDeclarationFragment(3502)", "Delete VariableDeclarationStatement(3503)", "Delete SimpleName: pkName(3506)", "Delete QualifiedName: pkNameBytes.length(3507)", "Delete NumberLiteral: 0(3508)", "Delete InfixExpression: ==(3509)", "Delete NullLiteral(3510)", "Delete SimpleName: pkNameBytes(3513)", "Delete MethodInvocation(3514)", "Delete ConditionalExpression(3515)", "Delete VariableDeclarationFragment(3516)", "Delete VariableDeclarationStatement(3517)", "Delete SimpleName: bucketNum(3520)", "Delete MethodInvocation(3524)", "Delete VariableDeclarationFragment(3525)", "Delete VariableDeclarationStatement(3526)", "Delete PrimitiveType: int(3547)", "Delete SimpleName: i(3548)", "Delete NumberLiteral: 0(3549)", "Delete VariableDeclarationFragment(3550)", "Delete VariableDeclarationExpression(3551)", "Delete SimpleName: i(3552)", "Delete SimpleName: nColumns(3553)", "Delete InfixExpression: <(3554)", "Delete SimpleName: i(3555)", "Delete PostfixExpression: ++(3556)", "Delete SimpleName: PColumn(3557)", "Delete SimpleType: PColumn(3558)", "Delete SimpleName: column(3559)", "Delete SimpleName: PColumnImpl(3560)", "Delete SimpleType: PColumnImpl(3561)", "Delete ClassInstanceCreation(3562)", "Delete VariableDeclarationFragment(3563)", "Delete VariableDeclarationStatement(3564)", "Delete SimpleName: readFields(3566)", "Delete MethodInvocation(3568)", "Delete ExpressionStatement(3569)", "Delete SimpleName: column(3572)", "Delete MethodInvocation(3573)", "Delete ExpressionStatement(3574)", "Delete Block(3575)", "Delete ForStatement(3576)", "Delete PrimitiveType: int(3577)", "Delete SimpleName: nIndexes(3578)", "Delete MethodInvocation(3582)", "Delete VariableDeclarationFragment(3583)", "Delete VariableDeclarationStatement(3584)", "Delete PrimitiveType: int(3597)", "Delete SimpleName: i(3598)", "Delete NumberLiteral: 0(3599)", "Delete VariableDeclarationFragment(3600)", "Delete VariableDeclarationExpression(3601)", "Delete SimpleName: i(3602)", "Delete SimpleName: nIndexes(3603)", "Delete InfixExpression: <(3604)", "Delete SimpleName: i(3605)", "Delete PostfixExpression: ++(3606)", "Delete SimpleName: index(3615)", "Delete SimpleName: readFields(3616)", "Delete SimpleName: input(3617)", "Delete MethodInvocation(3618)", "Delete ExpressionStatement(3619)", "Delete Block(3625)", "Delete ForStatement(3626)", "Delete PrimitiveType: int(3656)", "Delete SimpleName: size(3657)", "Delete SimpleName: readVInt(3659)", "Delete MethodInvocation(3661)", "Delete VariableDeclarationFragment(3662)", "Delete VariableDeclarationStatement(3663)", "Delete PrimitiveType: int(3664)", "Delete SimpleName: i(3665)", "Delete NumberLiteral: 0(3666)", "Delete VariableDeclarationFragment(3667)", "Delete VariableDeclarationExpression(3668)", "Delete SimpleName: i(3669)", "Delete SimpleName: size(3670)", "Delete InfixExpression: <(3671)", "Delete SimpleName: i(3672)", "Delete PostfixExpression: ++(3673)", "Delete SimpleName: key(3676)", "Delete SimpleName: WritableUtils(3677)", "Delete SimpleName: readString(3678)", "Delete SimpleName: input(3679)", "Delete MethodInvocation(3680)", "Delete VariableDeclarationFragment(3681)", "Delete VariableDeclarationStatement(3682)", "Delete SimpleName: value(3695)", "Delete SimpleName: valueSize(3700)", "Delete ArrayCreation(3701)", "Delete VariableDeclarationFragment(3702)", "Delete VariableDeclarationStatement(3703)", "Delete Block(3731)", "Delete ForStatement(3732)", "Delete PrimitiveType: byte(3733)", "Delete Dimension(3734)", "Delete ArrayType: byte[](3735)", "Delete SimpleName: input(3739)", "Delete MethodInvocation(3740)", "Delete VariableDeclarationFragment(3741)", "Delete VariableDeclarationStatement(3742)", "Delete SimpleName: dataTableName(3745)", "Delete QualifiedName: dataTableNameBytes.length(3746)", "Delete NumberLiteral: 0(3747)", "Delete InfixExpression: ==(3748)", "Delete NullLiteral(3749)", "Delete MethodInvocation(3753)", "Delete ConditionalExpression(3754)", "Delete VariableDeclarationFragment(3755)", "Delete VariableDeclarationStatement(3756)", "Delete PrimitiveType: byte(3757)", "Delete Dimension(3758)", "Delete ArrayType: byte[](3759)", "Delete SimpleName: input(3763)", "Delete MethodInvocation(3764)", "Delete VariableDeclarationFragment(3765)", "Delete VariableDeclarationStatement(3766)", "Delete SimpleName: defaultFamilyName(3769)", "Delete QualifiedName: defaultFamilyNameBytes.length(3770)", "Delete NumberLiteral: 0(3771)", "Delete InfixExpression: ==(3772)", "Delete NullLiteral(3773)", "Delete MethodInvocation(3777)", "Delete ConditionalExpression(3778)", "Delete VariableDeclarationFragment(3779)", "Delete VariableDeclarationStatement(3780)", "Delete Block(3952)", "Delete SimpleName: Override(3954)", "Delete MarkerAnnotation(3955)", "Delete PrimitiveType: void(3957)", "Delete SimpleName: type(3989)", "Delete InfixExpression: ==(3991)", "Delete SimpleName: writeVInt(3993)", "Delete SimpleName: output(3994)", "Delete SimpleName: state(3995)", "Delete NullLiteral(3996)", "Delete InfixExpression: ==(3997)", "Delete NumberLiteral: 1(3998)", "Delete PrefixExpression: -(3999)", "Delete MethodInvocation(4002)", "Delete ConditionalExpression(4003)", "Delete PrimitiveType: int(4032)", "Delete SimpleName: output(4047)", "Delete SimpleName: nColumns(4056)", "Delete PostfixExpression: --(4057)", "Delete ExpressionStatement(4058)", "Delete SimpleName: output(4061)", "Delete SimpleName: allColumns(4079)", "Delete SimpleName: size(4080)", "Delete MethodInvocation(4081)", "Delete SimpleName: defaultFamilyName(4147)", "Delete NullLiteral(4148)", "Delete InfixExpression: ==(4149)", "Delete QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY(4150)", "Delete MethodInvocation(4153)", "Delete ConditionalExpression(4154)", "Delete SimpleName: type(4167)", "Delete MethodInvocation(4174)", "Delete MethodInvocation(4175)", "Delete SimpleName: viewStatement(4180)", "Delete NullLiteral(4181)", "Delete InfixExpression: ==(4182)", "Delete QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY(4183)", "Delete MethodInvocation(4187)", "Delete ConditionalExpression(4188)", "Delete SimpleName: WritableUtils(4191)", "Delete SimpleName: writeVInt(4192)", "Delete SimpleName: output(4193)", "Delete SimpleName: physicalNames(4194)", "Delete SimpleName: size(4195)", "Delete MethodInvocation(4196)", "Delete MethodInvocation(4197)", "Delete ExpressionStatement(4198)", "Delete SimpleName: DataOutput(3959)", "Delete SimpleType: DataOutput(3960)", "Delete SimpleName: output(3961)", "Delete SingleVariableDeclaration(3962)", "Delete SimpleName: IOException(3963)", "Delete SimpleType: IOException(3964)", "Delete SimpleName: Bytes(4019)", "Delete SimpleName: writeByteArray(4020)", "Delete InfixExpression: ==(4024)", "Delete QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY(4025)", "Delete MethodInvocation(4028)", "Delete ConditionalExpression(4029)", "Delete MethodInvocation(4030)", "Delete ExpressionStatement(4031)", "Delete SimpleName: output(4069)", "Delete MethodInvocation(4071)", "Delete ExpressionStatement(4072)", "Delete SimpleName: WritableUtils(4101)", "Delete SimpleName: writeVInt(4102)", "Delete SimpleName: output(4103)", "Delete MethodInvocation(4106)", "Delete MethodInvocation(4107)", "Delete ExpressionStatement(4108)", "Delete SimpleName: parentTableName(4134)", "Delete InfixExpression: ==(4136)", "Delete QualifiedName: ByteUtil.EMPTY_BYTE_ARRAY(4137)", "Delete MethodInvocation(4140)", "Delete ConditionalExpression(4141)", "Delete MethodInvocation(4142)", "Delete ExpressionStatement(4143)", "Delete Block(4226)"]}}, {"Sequence_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 28"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "UPDATE from Map<byte[],List<KeyValue>> to Map<byte[],List<Cell>>", "operations": ["UPD ParameterizedType: Map<byte[],List<KeyValue>> from Map<byte[],List<KeyValue>> to Map<byte[],List<Cell>>", "UPD ParameterizedType: Map<byte[],List<KeyValue>> from Map<byte[],List<KeyValue>> to Map<byte[],List<Cell>>", "UPD ParameterizedType: Map<byte[],List<KeyValue>> from Map<byte[],List<KeyValue>> to Map<byte[],List<Cell>>"]}, {"root": "UPDATE from KeyValue[] to Cell[]", "operations": ["UPD ArrayType: KeyValue[] from KeyValue[] to Cell[]", "UPD ArrayType: KeyValue[] from KeyValue[] to Cell[]", "UPD ArrayType: KeyValue[] from KeyValue[] to Cell[]", "UPD ArrayType: KeyValue[] from KeyValue[] to Cell[]"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: ensureKeyValue to MethodInvocation at 1", "INS QualifiedName: org.apache.hadoop.hbase.KeyValueUtil to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.KeyValueUtil to MethodInvocation at 0", "INS SimpleName: ensureKeyValue to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.KeyValueUtil to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: ensureKeyValue to MethodInvocation at 1"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: Result to MethodInvocation at 0", "INS SimpleName: newkvs to MethodInvocation at 2", "INS SimpleName: create to MethodInvocation at 1"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ArrayAccess to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ArrayAccess to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ArrayAccess to MethodInvocation at 2"]}, {"root": "UPDATE from getFamilyMap to getFamilyCellMap", "operations": ["UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap", "UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap", "UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap"]}, {"root": "INS CastExpression to MethodInvocation at 3", "operations": ["INS CastExpression to MethodInvocation at 3", "INS SimpleName: Cell to SimpleType: Cell at 0", "INS SimpleType: Cell to CastExpression at 0"]}, {"root": "UPDATE from raw to rawCells", "operations": ["UPD SimpleName: raw from raw to rawCells", "UPD SimpleName: raw from raw to rawCells", "UPD SimpleName: raw from raw to rawCells", "UPD SimpleName: raw from raw to rawCells", "UPD SimpleName: raw from raw to rawCells", "UPD SimpleName: raw from raw to rawCells", "UPD SimpleName: raw from raw to rawCells", "UPD SimpleName: raw from raw to rawCells", "UPD SimpleName: raw from raw to rawCells"]}, {"root": "INS CastExpression to MethodInvocation at 3", "operations": ["INS SimpleType: Cell to CastExpression at 0", "INS CastExpression to MethodInvocation at 3", "INS SimpleName: Cell to SimpleType: Cell at 0"]}, {"root": "INS CastExpression to MethodInvocation at 4", "operations": ["INS CastExpression to MethodInvocation at 4", "INS SimpleType: Cell to CastExpression at 0", "INS SimpleName: Cell to SimpleType: Cell at 0"]}, {"root": "INS CastExpression to MethodInvocation at 5", "operations": ["INS SimpleType: Cell to CastExpression at 0", "INS SimpleName: Cell to SimpleType: Cell at 0", "INS CastExpression to MethodInvocation at 5"]}, {"root": "INS CastExpression to MethodInvocation at 6", "operations": ["INS SimpleType: Cell to CastExpression at 0", "INS CastExpression to MethodInvocation at 6", "INS SimpleName: Cell to SimpleType: Cell at 0"]}, {"root": "INS CastExpression to MethodInvocation at 7", "operations": ["INS SimpleType: Cell to CastExpression at 0", "INS SimpleName: Cell to SimpleType: Cell at 0", "INS CastExpression to MethodInvocation at 7"]}, {"root": "INS CastExpression to MethodInvocation at 3", "operations": ["INS SimpleName: Cell to SimpleType: Cell at 0", "INS CastExpression to MethodInvocation at 3", "INS SimpleType: Cell to CastExpression at 0"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1"]}, {"root": "UPDATE from getBuffer to getValueArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray", "UPD SimpleName: getBuffer from getBuffer to getValueArray"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1", "MOV MethodInvocation to CastExpression at 1", "MOV MethodInvocation to CastExpression at 1", "MOV MethodInvocation to CastExpression at 1", "MOV MethodInvocation to CastExpression at 1"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: Result", "DEL SimpleName: newkvs", "DEL SimpleType: Result"]}]}}, {"Sequence_diff": {"operations": ["Move ImportDeclaration(37) into CompilationUnit(1915) at 28", "Insert ImportDeclaration(25) into CompilationUnit(1915) at 12", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(24) into ImportDeclaration(25) at 0", "Update ParameterizedType: Map<byte[],List<KeyValue>>(643) to Map<byte[],List<Cell>>", "Update ArrayType: KeyValue[](985) to Cell[]", "Insert MethodInvocation(1007) into ReturnStatement(1008) at 0", "Update ArrayType: KeyValue[](1015) to Cell[]", "Insert MethodInvocation(1040) into ReturnStatement(1041) at 0", "Update ArrayType: KeyValue[](1045) to Cell[]", "Insert MethodInvocation(1073) into ReturnStatement(1074) at 0", "Update ArrayType: KeyValue[](1079) to Cell[]", "Update ParameterizedType: List<KeyValue>(1090) to List<Cell>", "Insert MethodInvocation(1121) into ReturnStatement(1122) at 0", "Update SimpleType: KeyValue(1320) to Cell", "Update ParameterizedType: Map<byte[],List<KeyValue>>(1513) to Map<byte[],List<Cell>>", "Update SimpleType: KeyValue(1600) to Cell", "Update ParameterizedType: Map<byte[],List<KeyValue>>(1761) to Map<byte[],List<Cell>>", "Update SimpleType: KeyValue(1800) to Cell", "Update ParameterizedType: List<KeyValue>(642) to List<Cell>", "Update SimpleType: KeyValue(983) to Cell", "Insert QualifiedName: org.apache.hadoop.hbase.KeyValueUtil(1002) into MethodInvocation(1007) at 0", "Insert SimpleName: ensureKeyValue(1003) into MethodInvocation(1007) at 1", "Move ArrayAccess(999) into MethodInvocation(1007) at 2", "Update SimpleType: KeyValue(1013) to Cell", "Insert QualifiedName: org.apache.hadoop.hbase.KeyValueUtil(1035) into MethodInvocation(1040) at 0", "Insert SimpleName: ensureKeyValue(1036) into MethodInvocation(1040) at 1", "Move ArrayAccess(1029) into MethodInvocation(1040) at 2", "Update SimpleType: KeyValue(1043) to Cell", "Insert QualifiedName: org.apache.hadoop.hbase.KeyValueUtil(1068) into MethodInvocation(1073) at 0", "Insert SimpleName: ensureKeyValue(1069) into MethodInvocation(1073) at 1", "Move ArrayAccess(1059) into MethodInvocation(1073) at 2", "Update SimpleType: KeyValue(1077) to Cell", "Update SimpleType: KeyValue(1089) to Cell", "Insert SimpleName: Result(1118) into MethodInvocation(1121) at 0", "Insert SimpleName: create(1119) into MethodInvocation(1121) at 1", "Insert SimpleName: newkvs(1120) into MethodInvocation(1121) at 2", "Update SimpleName: KeyValue(1319) to Cell", "Update ParameterizedType: List<KeyValue>(1512) to List<Cell>", "Update SimpleName: KeyValue(1599) to Cell", "Update ParameterizedType: List<KeyValue>(1760) to List<Cell>", "Update SimpleName: KeyValue(1799) to Cell", "Update SimpleType: KeyValue(641) to Cell", "Update SimpleName: getFamilyMap(646) to getFamilyCellMap", "Update SimpleType: KeyValue(655) to Cell", "Insert CastExpression(672) into MethodInvocation(673) at 3", "Update SimpleType: KeyValue(744) to Cell", "Update SimpleName: KeyValue(982) to Cell", "Update SimpleName: raw(988) to rawCells", "Update SimpleName: KeyValue(1012) to Cell", "Update SimpleName: raw(1018) to rawCells", "Update SimpleName: KeyValue(1042) to Cell", "Update SimpleName: raw(1048) to rawCells", "Update SimpleName: KeyValue(1076) to Cell", "Update SimpleName: raw(1082) to rawCells", "Update SimpleName: KeyValue(1088) to Cell", "Update SimpleType: KeyValue(1511) to Cell", "Update SimpleName: getFamilyMap(1516) to getFamilyCellMap", "Update SimpleType: KeyValue(1535) to Cell", "Insert CastExpression(1561) into MethodInvocation(1612) at 3", "Insert CastExpression(1572) into MethodInvocation(1612) at 4", "Insert CastExpression(1583) into MethodInvocation(1612) at 5", "Insert CastExpression(1597) into MethodInvocation(1612) at 6", "Insert CastExpression(1611) into MethodInvocation(1612) at 7", "Update SimpleType: KeyValue(1759) to Cell", "Update SimpleName: getFamilyMap(1764) to getFamilyCellMap", "Update SimpleType: KeyValue(1773) to Cell", "Insert CastExpression(1814) into MethodInvocation(1815) at 3", "Update SimpleName: KeyValue(640) to Cell", "Update SimpleName: KeyValue(654) to Cell", "Insert SimpleType: Cell(660) into CastExpression(672) at 0", "Move MethodInvocation(667) into CastExpression(672) at 1", "Update SimpleName: raw(737) to rawCells", "Update SimpleName: KeyValue(743) to Cell", "Update SimpleName: raw(1323) to rawCells", "Update SimpleName: getBuffer(1352) to getValueArray", "Update SimpleName: KeyValue(1510) to Cell", "Update SimpleName: KeyValue(1534) to Cell", "Insert SimpleType: Cell(1552) into CastExpression(1561) at 0", "Move MethodInvocation(1544) into CastExpression(1561) at 1", "Insert SimpleType: Cell(1563) into CastExpression(1572) at 0", "Move MethodInvocation(1552) into CastExpression(1572) at 1", "Insert SimpleType: Cell(1574) into CastExpression(1583) at 0", "Move MethodInvocation(1560) into CastExpression(1583) at 1", "Insert SimpleType: Cell(1585) into CastExpression(1597) at 0", "Move MethodInvocation(1571) into CastExpression(1597) at 1", "Insert SimpleType: Cell(1599) into CastExpression(1611) at 0", "Move MethodInvocation(1582) into CastExpression(1611) at 1", "Update SimpleName: raw(1603) to rawCells", "Update SimpleName: getBuffer(1623) to getValueArray", "Update SimpleName: KeyValue(1758) to Cell", "Update SimpleName: KeyValue(1772) to Cell", "Insert SimpleType: Cell(1805) into CastExpression(1814) at 0", "Move MethodInvocation(1782) into CastExpression(1814) at 1", "Update SimpleName: raw(1803) to rawCells", "Update SimpleName: getBuffer(1823) to getValueArray", "Insert SimpleName: Cell(659) into SimpleType: Cell(660) at 0", "Update SimpleName: getBuffer(1260) to getValueArray", "Update SimpleName: getBuffer(1275) to getValueArray", "Update SimpleName: getBuffer(1290) to getValueArray", "Insert SimpleName: Cell(1551) into SimpleType: Cell(1552) at 0", "Insert SimpleName: Cell(1562) into SimpleType: Cell(1563) at 0", "Insert SimpleName: Cell(1573) into SimpleType: Cell(1574) at 0", "Insert SimpleName: Cell(1584) into SimpleType: Cell(1585) at 0", "Insert SimpleName: Cell(1598) into SimpleType: Cell(1599) at 0", "Insert SimpleName: Cell(1804) into SimpleType: Cell(1805) at 0", "Update SimpleName: raw(747) to rawCells", "Update SimpleName: getBuffer(760) to getValueArray", "Delete SimpleName: Result(1104)", "Delete SimpleType: Result(1105)", "Delete SimpleName: newkvs(1106)", "Delete ClassInstanceCreation(1107)"]}}, {"IndexLogRollSynchronizer_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS PrimitiveType: boolean to FieldDeclaration at 1", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS SimpleName: lockAcquired to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 6"]}, {"root": "INS Block to MethodDeclaration at 7", "operations": ["INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: InterruptedException to SimpleType: InterruptedException at 0", "INS CatchClause to TryStatement at 1", "INS IfStatement to Block at 2", "INS SimpleType: InterruptedException to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: Thread to MethodInvocation at 0", "INS Block to MethodDeclaration at 7", "INS StringLiteral: \"Acquiring lock got interrupted!\" to MethodInvocation at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to TryStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: interrupt to MethodInvocation at 1", "INS SimpleName: info to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS SimpleName: lockAcquired to Assignment: = at 0", "INS SimpleName: currentThread to MethodInvocation at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS BooleanLiteral: true to Assignment: = at 1", "INS SimpleName: lockAcquired to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS TryStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS ReturnStatement to IfStatement at 1", "INS SimpleName: lockAcquired to PrefixExpression: ! at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS IfStatement to Block at 0"]}, {"root": "UPDATE from lock to lockInterruptibly", "operations": ["UPD SimpleName: lock from lock to lockInterruptibly"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"IndexLogRollSynchronizer_diff": {"operations": ["Insert FieldDeclaration(106) into TypeDeclaration: class(294) at 6", "Insert Modifier: private(101) into FieldDeclaration(106) at 0", "Insert PrimitiveType: boolean(102) into FieldDeclaration(106) at 1", "Insert VariableDeclarationFragment(105) into FieldDeclaration(106) at 2", "Insert Block(176) into MethodDeclaration(177) at 7", "Insert SimpleName: lockAcquired(103) into VariableDeclarationFragment(105) at 0", "Insert BooleanLiteral: false(104) into VariableDeclarationFragment(105) at 1", "Move ExpressionStatement(134) into Block(176) at 0", "Insert TryStatement(167) into Block(176) at 1", "Insert IfStatement(175) into Block(176) at 2", "Insert IfStatement(196) into Block(206) at 0", "Insert Block(149) into TryStatement(167) at 0", "Insert CatchClause(166) into TryStatement(167) at 1", "Insert SimpleName: lockAcquired(168) into IfStatement(175) at 0", "Insert Block(174) into IfStatement(175) at 1", "Insert PrefixExpression: !(194) into IfStatement(196) at 0", "Insert ReturnStatement(195) into IfStatement(196) at 1", "Move ExpressionStatement(138) into Block(149) at 0", "Insert ExpressionStatement(148) into Block(149) at 1", "Insert SingleVariableDeclaration(153) into CatchClause(166) at 0", "Insert Block(165) into CatchClause(166) at 1", "Move ExpressionStatement(143) into Block(174) at 0", "Insert SimpleName: lockAcquired(193) into PrefixExpression: !(194) at 0", "Insert Assignment: =(147) into ExpressionStatement(148) at 0", "Insert SimpleType: InterruptedException(151) into SingleVariableDeclaration(153) at 0", "Insert SimpleName: e(152) into SingleVariableDeclaration(153) at 1", "Insert ExpressionStatement(158) into Block(165) at 0", "Insert ExpressionStatement(164) into Block(165) at 1", "Update SimpleName: lock(136) to lockInterruptibly", "Insert SimpleName: lockAcquired(145) into Assignment: =(147) at 0", "Insert BooleanLiteral: true(146) into Assignment: =(147) at 1", "Insert SimpleName: InterruptedException(150) into SimpleType: InterruptedException(151) at 0", "Insert MethodInvocation(157) into ExpressionStatement(158) at 0", "Insert MethodInvocation(163) into ExpressionStatement(164) at 0", "Insert SimpleName: LOG(154) into MethodInvocation(157) at 0", "Insert SimpleName: info(155) into MethodInvocation(157) at 1", "Insert StringLiteral: \"Acquiring lock got interrupted!\"(156) into MethodInvocation(157) at 2", "Insert MethodInvocation(161) into MethodInvocation(163) at 0", "Insert SimpleName: interrupt(162) into MethodInvocation(163) at 1", "Insert SimpleName: Thread(159) into MethodInvocation(161) at 0", "Insert SimpleName: currentThread(160) into MethodInvocation(161) at 1", "Delete Block(144)"]}}, {"Indexer_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 16"]}, {"root": "INS SimpleType: Durability to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: Durability to SimpleType: Durability at 0", "INS SimpleType: Durability to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleName: durability to SingleVariableDeclaration at 2", "operations": ["INS SimpleName: durability to SingleVariableDeclaration at 2"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: Durability to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: Durability to SingleVariableDeclaration at 1", "INS SimpleName: Durability to SimpleType: Durability at 0"]}, {"root": "INS SimpleName: durability to SingleVariableDeclaration at 2", "operations": ["INS SimpleName: durability to SingleVariableDeclaration at 2"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: Durability to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: Durability to SimpleType: Durability at 0", "INS SimpleType: Durability to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleName: durability to SingleVariableDeclaration at 2", "operations": ["INS SimpleName: durability to SingleVariableDeclaration at 2"]}, {"root": "UPDATE from MiniBatchOperationInProgress<Pair<Mutation,Integer>> to MiniBatchOperationInProgress<Mutation>", "operations": ["UPD ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> from MiniBatchOperationInProgress<Pair<Mutation,Integer>> to MiniBatchOperationInProgress<Mutation>", "UPD ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> from MiniBatchOperationInProgress<Pair<Mutation,Integer>> to MiniBatchOperationInProgress<Mutation>", "UPD ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> from MiniBatchOperationInProgress<Pair<Mutation,Integer>> to MiniBatchOperationInProgress<Mutation>"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "INS SimpleType: Durability to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: Durability to SingleVariableDeclaration at 1", "INS SimpleName: Durability to SimpleType: Durability at 0"]}, {"root": "INS SimpleName: durability to SingleVariableDeclaration at 2", "operations": ["INS SimpleName: durability to SingleVariableDeclaration at 2"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: Durability to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: Durability to SimpleType: Durability at 0", "INS SimpleType: Durability to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleName: durability to SingleVariableDeclaration at 2", "operations": ["INS SimpleName: durability to SingleVariableDeclaration at 2"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: Durability to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: Durability to SingleVariableDeclaration at 1", "INS SimpleName: Durability to SimpleType: Durability at 0"]}, {"root": "INS SimpleName: durability to SingleVariableDeclaration at 2", "operations": ["INS SimpleName: durability to SingleVariableDeclaration at 2"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: Durability to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: Durability to SimpleType: Durability at 0", "INS SimpleType: Durability to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleName: durability to SingleVariableDeclaration at 2", "operations": ["INS SimpleName: durability to SingleVariableDeclaration at 2"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: Durability to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: Durability to SingleVariableDeclaration at 1", "INS SimpleName: Durability to SimpleType: Durability at 0"]}, {"root": "INS SimpleName: durability to SingleVariableDeclaration at 2", "operations": ["INS SimpleName: durability to SingleVariableDeclaration at 2"]}, {"root": "MOVE from ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>", "operations": ["MOV SimpleType: Mutation to ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> at 1"]}, {"root": "MOVE from ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>", "operations": ["MOV SimpleType: Mutation to ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> at 1"]}, {"root": "INS SimpleType: Durability to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: Durability to VariableDeclarationStatement at 0", "INS SimpleName: Durability to SimpleType: Durability at 0"]}, {"root": "MOVE from ParameterizedType: List<KeyValue>", "operations": ["MOV SimpleType: List to ParameterizedType: List<KeyValue> at 0"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "INS InfixExpression: == to IfStatement at 0", "operations": ["INS QualifiedName: Durability.SKIP_WAL to InfixExpression: == at 1", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: durability to InfixExpression: == at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV FieldAccess to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV FieldAccess to IfStatement at 0"]}, {"root": "MOVE from ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>", "operations": ["MOV SimpleType: Mutation to ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> at 1"]}, {"root": "UPDATE from writeToWAL to durability", "operations": ["UPD SimpleName: writeToWAL from writeToWAL to durability", "UPD SimpleName: writeToWAL from writeToWAL to durability", "UPD SimpleName: writeToWAL from writeToWAL to durability", "UPD SimpleName: durable from durable to durability", "UPD SimpleName: writeToWAL from writeToWAL to durability", "UPD SimpleName: writeToWAL from writeToWAL to durability", "UPD SimpleName: writeToWAL from writeToWAL to durability", "UPD SimpleName: writeToWAL from writeToWAL to durability", "UPD SimpleName: writeToWAL from writeToWAL to durability", "UPD SimpleName: writeToWAL from writeToWAL to durability", "UPD SimpleName: durable from durable to durability", "UPD SimpleName: durable from durable to durability", "UPD SimpleName: op from op to durability"]}, {"root": "INS QualifiedName: Durability.SKIP_WAL to VariableDeclarationFragment at 1", "operations": ["INS QualifiedName: Durability.SKIP_WAL to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS InfixExpression: > to IfStatement at 0", "INS MethodInvocation to InfixExpression: > at 0", "INS SimpleName: ordinal to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: > at 1", "INS IfStatement to Block at 5"]}, {"root": "INS InfixExpression: == to InfixExpression: || at 0", "operations": ["INS InfixExpression: == to InfixExpression: || at 0", "INS SimpleName: durability to InfixExpression: == at 0", "INS QualifiedName: Durability.SKIP_WAL to InfixExpression: == at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Mutation to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "UPDATE from Entry<byte[],List<KeyValue>> to Entry<byte[],List<Cell>>", "operations": ["UPD ParameterizedType: Entry<byte[],List<KeyValue>> from Entry<byte[],List<KeyValue>> to Entry<byte[],List<Cell>>"]}, {"root": "MOVE from ParameterizedType: List<KeyValue>", "operations": ["MOV SimpleType: List to ParameterizedType: List<KeyValue> at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 1"]}, {"root": "UPDATE from op to m", "operations": ["UPD SimpleName: op from op to m"]}, {"root": "UPDATE from getFamilyMap to getFamilyCellMap", "operations": ["UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap"]}, {"root": "INS NullLiteral to MethodInvocation at 2", "operations": ["INS NullLiteral to MethodInvocation at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: op to MethodInvocation at 0", "MOV SimpleName: getFirst to MethodInvocation at 1"]}, {"root": "UPDATE from getFirst to ordinal", "operations": ["UPD SimpleName: getFirst from getFirst to ordinal"]}, {"root": "MOVE from ParameterizedType: List<KeyValue>", "operations": ["MOV SimpleType: List to ParameterizedType: List<KeyValue> at 0"]}, {"root": "MOVE from ParameterizedType: List<KeyValue>", "operations": ["MOV SimpleType: List to ParameterizedType: List<KeyValue> at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getKeyValues to MethodInvocation at 1", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: edit to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: getDurability to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: m to MethodInvocation at 0"]}, {"root": "UPDATE from ArrayList<KeyValue> to ArrayList<Cell>", "operations": ["UPD ParameterizedType: ArrayList<KeyValue> from ArrayList<KeyValue> to ArrayList<Cell>"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL SimpleName: writeToWAL", "operations": ["DEL SimpleName: writeToWAL"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL SimpleName: writeToWAL", "operations": ["DEL SimpleName: writeToWAL"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL SimpleName: writeToWAL", "operations": ["DEL SimpleName: writeToWAL"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL SimpleName: Pair", "DEL SimpleName: Integer", "DEL SimpleType: Integer", "DEL SimpleType: Pair", "DEL ParameterizedType: Pair<Mutation,Integer>"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL SimpleName: Pair", "DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleType: Integer", "DEL SimpleName: Integer", "DEL SimpleType: Pair"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL BooleanLiteral: false", "operations": ["DEL BooleanLiteral: false"]}, {"root": "DEL AssertStatement", "operations": ["DEL SimpleName: kv", "DEL InfixExpression: +", "DEL StringLiteral: \"Expected batch marker from the WALEdit, but got: \"", "DEL AssertStatement"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL SimpleName: Integer", "DEL SimpleType: Integer", "DEL SimpleName: Pair", "DEL SimpleType: Pair", "DEL SimpleType: Mutation", "DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleName: Mutation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: m", "DEL MethodInvocation"]}, {"root": "DEL InfixExpression: !=", "operations": ["DEL QualifiedName: Durability.SKIP_WAL", "DEL InfixExpression: !="]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: durable", "DEL PrefixExpression: !", "DEL IfStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getWriteToWAL", "DEL SimpleName: m"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL PrimitiveType: boolean", "DEL SingleVariableDeclaration", "DEL SimpleName: writeToWal"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleName: writeToWAL", "DEL FieldAccess", "DEL Assignment: =", "DEL SimpleName: writeToWal"]}, {"root": "DEL IfStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: getWriteToWAL", "DEL ThisExpression", "DEL SimpleName: writeToWAL", "DEL FieldAccess", "DEL Block", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: stored", "DEL IfStatement", "DEL BooleanLiteral: true"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: arg0", "DEL ThrowStatement", "DEL ClassInstanceCreation", "DEL StringLiteral: \"MultiMutations cannot be read/written\"", "DEL MethodDeclaration", "DEL SimpleName: IOException", "DEL MarkerAnnotation", "DEL PrimitiveType: void", "DEL SingleVariableDeclaration", "DEL SimpleName: Override", "DEL Block", "DEL Modifier: public", "DEL SimpleName: DataInput", "DEL SimpleName: readFields", "DEL SimpleType: DataInput", "DEL SimpleType: IOException", "DEL SimpleName: UnsupportedOperationException", "DEL SimpleType: UnsupportedOperationException"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: write", "DEL SimpleType: IOException", "DEL MethodDeclaration", "DEL SimpleName: IOException", "DEL ClassInstanceCreation", "DEL ThrowStatement", "DEL SimpleName: DataOutput", "DEL SimpleType: UnsupportedOperationException", "DEL SimpleName: UnsupportedOperationException", "DEL PrimitiveType: void", "DEL StringLiteral: \"MultiMutations cannot be read/written\"", "DEL SimpleName: Override", "DEL Modifier: public", "DEL Block", "DEL MarkerAnnotation", "DEL SingleVariableDeclaration", "DEL SimpleName: arg0", "DEL SimpleType: DataOutput"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL SimpleName: writeToWAL", "operations": ["DEL SimpleName: writeToWAL"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL SimpleName: writeToWAL", "DEL PrefixExpression: !"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL SimpleName: writeToWAL", "operations": ["DEL SimpleName: writeToWAL"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL SimpleName: writeToWAL", "operations": ["DEL SimpleName: writeToWAL"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleName: Pair", "DEL SimpleType: Integer", "DEL SimpleType: Pair", "DEL SimpleName: Integer"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL SimpleName: writeToWAL", "operations": ["DEL SimpleName: writeToWAL"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL SimpleName: writeToWAL", "operations": ["DEL SimpleName: writeToWAL"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL PrefixExpression: !", "DEL SimpleName: writeToWAL"]}]}}, {"Indexer_diff": {"operations": ["Insert ImportDeclaration(33) into CompilationUnit(2335) at 16", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(32) into ImportDeclaration(33) at 0", "Insert SimpleType: Durability(654) into SingleVariableDeclaration(656) at 1", "Insert SimpleName: durability(655) into SingleVariableDeclaration(656) at 2", "Insert Modifier: final(699) into SingleVariableDeclaration(703) at 0", "Insert SimpleType: Durability(701) into SingleVariableDeclaration(703) at 1", "Insert SimpleName: durability(702) into SingleVariableDeclaration(703) at 2", "Insert Modifier: final(764) into SingleVariableDeclaration(768) at 0", "Insert SimpleType: Durability(766) into SingleVariableDeclaration(768) at 1", "Insert SimpleName: durability(767) into SingleVariableDeclaration(768) at 2", "Update ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>(833) to MiniBatchOperationInProgress<Mutation>", "Update ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>(896) to MiniBatchOperationInProgress<Mutation>", "Update ParameterizedType: List<KeyValue>(1355) to List<Cell>", "Insert SimpleType: Durability(1452) into SingleVariableDeclaration(1454) at 1", "Insert SimpleName: durability(1453) into SingleVariableDeclaration(1454) at 2", "Insert Modifier: final(1555) into SingleVariableDeclaration(1559) at 0", "Insert SimpleType: Durability(1557) into SingleVariableDeclaration(1559) at 1", "Insert SimpleName: durability(1558) into SingleVariableDeclaration(1559) at 2", "Insert Modifier: final(1603) into SingleVariableDeclaration(1607) at 0", "Insert SimpleType: Durability(1605) into SingleVariableDeclaration(1607) at 1", "Insert SimpleName: durability(1606) into SingleVariableDeclaration(1607) at 2", "Update ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>(1709) to MiniBatchOperationInProgress<Mutation>", "Insert Modifier: final(1683) into SingleVariableDeclaration(1687) at 0", "Insert SimpleType: Durability(1685) into SingleVariableDeclaration(1687) at 1", "Insert SimpleName: durability(1686) into SingleVariableDeclaration(1687) at 2", "Insert Modifier: final(1727) into SingleVariableDeclaration(1731) at 0", "Insert SimpleType: Durability(1729) into SingleVariableDeclaration(1731) at 1", "Insert SimpleName: durability(1730) into SingleVariableDeclaration(1731) at 2", "Insert SimpleName: Durability(653) into SimpleType: Durability(654) at 0", "Insert SimpleName: Durability(700) into SimpleType: Durability(701) at 0", "Insert SimpleName: Durability(765) into SimpleType: Durability(766) at 0", "Move SimpleType: Mutation(829) into ParameterizedType: MiniBatchOperationInProgress<Mutation>(836) at 1", "Move SimpleType: Mutation(892) into ParameterizedType: MiniBatchOperationInProgress<Mutation>(894) at 1", "Insert SimpleType: Durability(918) into VariableDeclarationStatement(922) at 0", "Move SimpleType: List(1366) into ParameterizedType: List<Cell>(1328) at 0", "Update SimpleType: KeyValue(1354) to Cell", "Insert SimpleName: Durability(1451) into SimpleType: Durability(1452) at 0", "Insert InfixExpression: ==(1472) into IfStatement(1504) at 0", "Insert SimpleName: Durability(1556) into SimpleType: Durability(1557) at 0", "Move FieldAccess(1669) into IfStatement(1574) at 0", "Insert SimpleName: Durability(1604) into SimpleType: Durability(1605) at 0", "Move FieldAccess(1623) into IfStatement(1622) at 0", "Move SimpleType: Mutation(1705) into ParameterizedType: MiniBatchOperationInProgress<Mutation>(1647) at 1", "Insert SimpleName: Durability(1684) into SimpleType: Durability(1685) at 0", "Insert SimpleName: Durability(1728) into SimpleType: Durability(1729) at 0", "Update SimpleName: writeToWAL(802) to durability", "Insert SimpleName: Durability(917) into SimpleType: Durability(918) at 0", "Update SimpleName: durable(920) to durability", "Insert QualifiedName: Durability.SKIP_WAL(920) into VariableDeclarationFragment(921) at 1", "Insert IfStatement(1007) into Block(1051) at 4", "Update SimpleName: durable(1105) to durability", "Update SimpleName: KeyValue(1353) to Cell", "Update ParameterizedType: List<KeyValue>(1369) to List<Cell>", "Insert SimpleName: durability(1470) into InfixExpression: ==(1472) at 0", "Insert QualifiedName: Durability.SKIP_WAL(1471) into InfixExpression: ==(1472) at 1", "Update SimpleName: writeToWAL(1637) to durability", "Update SimpleName: writeToWAL(1683) to durability", "Insert InfixExpression: ==(1736) into InfixExpression: ||(1744) at 0", "Move SimpleType: Mutation(983) into VariableDeclarationStatement(980) at 0", "Insert InfixExpression: >(999) into IfStatement(1007) at 0", "Move Block(1010) into IfStatement(1007) at 1", "Update ParameterizedType: Entry<byte[],List<KeyValue>>(1252) to Entry<byte[],List<Cell>>", "Move SimpleType: List(1352) into ParameterizedType: List<Cell>(1342) at 0", "Update SimpleType: KeyValue(1368) to Cell", "Insert SimpleName: durability(1734) into InfixExpression: ==(1736) at 0", "Insert QualifiedName: Durability.SKIP_WAL(1735) into InfixExpression: ==(1736) at 1", "Update SimpleName: writeToWAL(662) to durability", "Update SimpleName: writeToWAL(707) to durability", "Update SimpleName: writeToWAL(717) to durability", "Insert IfStatement(969) into Block(970) at 1", "Update SimpleName: op(975) to m", "Insert MethodInvocation(995) into InfixExpression: >(999) at 0", "Insert MethodInvocation(998) into InfixExpression: >(999) at 1", "Update ParameterizedType: List<KeyValue>(1251) to List<Cell>", "Update SimpleName: getFamilyMap(1256) to getFamilyCellMap", "Update ParameterizedType: List<KeyValue>(1273) to List<Cell>", "Update SimpleName: KeyValue(1367) to Cell", "Update SimpleName: writeToWAL(1628) to durability", "Update SimpleName: writeToWAL(1674) to durability", "Update SimpleName: writeToWAL(1753) to durability", "Insert NullLiteral(435) into MethodInvocation(436) at 2", "Move InfixExpression: ==(961) into IfStatement(969) at 0", "Insert Block(968) into IfStatement(969) at 1", "Move MethodInvocation(1005) into MethodInvocation(995) at 0", "Insert SimpleName: ordinal(994) into MethodInvocation(995) at 1", "Update SimpleName: op(985) to durability", "Move SimpleName: op(985) into MethodInvocation(998) at 0", "Update SimpleName: getFirst(986) to ordinal", "Move SimpleName: getFirst(986) into MethodInvocation(998) at 1", "Move SimpleType: List(1270) into ParameterizedType: List<Cell>(1235) at 0", "Update SimpleType: KeyValue(1250) to Cell", "Move SimpleType: List(1248) into ParameterizedType: List<Cell>(1257) at 0", "Update SimpleType: KeyValue(1272) to Cell", "Insert MethodInvocation(955) into VariableDeclarationFragment(956) at 1", "Insert ExpressionStatement(967) into Block(968) at 0", "Update SimpleName: durable(1002) to durability", "Insert MethodInvocation(1003) into Assignment: =(1004) at 1", "Update SimpleName: KeyValue(1249) to Cell", "Update SimpleName: KeyValue(1271) to Cell", "Update ParameterizedType: ArrayList<KeyValue>(1385) to ArrayList<Cell>", "Insert MethodInvocation(952) into MethodInvocation(955) at 0", "Insert SimpleName: get(953) into MethodInvocation(955) at 1", "Insert NumberLiteral: 0(954) into MethodInvocation(955) at 2", "Move MethodInvocation(956) into ExpressionStatement(967) at 0", "Insert SimpleName: m(1001) into MethodInvocation(1003) at 0", "Insert SimpleName: getDurability(1002) into MethodInvocation(1003) at 1", "Update SimpleType: KeyValue(1384) to Cell", "Insert SimpleName: edit(950) into MethodInvocation(952) at 0", "Insert SimpleName: getKeyValues(951) into MethodInvocation(952) at 1", "Update SimpleName: KeyValue(1383) to Cell", "Delete PrimitiveType: boolean(650)", "Delete SimpleName: writeToWAL(651)", "Delete PrimitiveType: boolean(695)", "Delete SimpleName: writeToWAL(696)", "Delete PrimitiveType: boolean(758)", "Delete SimpleName: writeToWAL(759)", "Delete SimpleName: Pair(826)", "Delete SimpleType: Pair(827)", "Delete SimpleName: Integer(830)", "Delete SimpleType: Integer(831)", "Delete ParameterizedType: Pair<Mutation,Integer>(832)", "Delete SimpleName: Pair(889)", "Delete SimpleType: Pair(890)", "Delete SimpleName: Integer(893)", "Delete SimpleType: Integer(894)", "Delete ParameterizedType: Pair<Mutation,Integer>(895)", "Delete PrimitiveType: boolean(919)", "Delete BooleanLiteral: false(921)", "Delete StringLiteral: \"Expected batch marker from the WALEdit, but got: \"(962)", "Delete SimpleName: kv(963)", "Delete InfixExpression: +(964)", "Delete AssertStatement(965)", "Delete SimpleName: Pair(968)", "Delete SimpleType: Pair(969)", "Delete SimpleName: Mutation(970)", "Delete SimpleType: Mutation(971)", "Delete SimpleName: Integer(972)", "Delete SimpleType: Integer(973)", "Delete ParameterizedType: Pair<Mutation,Integer>(974)", "Delete SimpleName: m(984)", "Delete MethodInvocation(987)", "Delete VariableDeclarationFragment(988)", "Delete VariableDeclarationStatement(989)", "Delete QualifiedName: Durability.SKIP_WAL(1006)", "Delete InfixExpression: !=(1007)", "Delete SimpleName: durable(1000)", "Delete PrefixExpression: !(1001)", "Delete IfStatement(1011)", "Delete SimpleName: m(1039)", "Delete SimpleName: getWriteToWAL(1040)", "Delete MethodInvocation(1041)", "Delete PrimitiveType: boolean(1212)", "Delete SimpleName: writeToWal(1213)", "Delete SingleVariableDeclaration(1214)", "Delete ThisExpression(1221)", "Delete SimpleName: writeToWAL(1222)", "Delete FieldAccess(1223)", "Delete SimpleName: writeToWal(1224)", "Delete Assignment: =(1225)", "Delete ExpressionStatement(1226)", "Delete SimpleName: stored(1337)", "Delete SimpleName: getWriteToWAL(1338)", "Delete MethodInvocation(1339)", "Delete ThisExpression(1340)", "Delete SimpleName: writeToWAL(1341)", "Delete FieldAccess(1342)", "Delete BooleanLiteral: true(1343)", "Delete Assignment: =(1344)", "Delete ExpressionStatement(1345)", "Delete Block(1346)", "Delete IfStatement(1347)", "Delete SimpleName: Override(1448)", "Delete MarkerAnnotation(1449)", "Delete Modifier: public(1450)", "Delete PrimitiveType: void(1451)", "Delete SimpleName: readFields(1452)", "Delete SimpleName: DataInput(1453)", "Delete SimpleType: DataInput(1454)", "Delete SimpleName: arg0(1455)", "Delete SingleVariableDeclaration(1456)", "Delete SimpleName: IOException(1457)", "Delete SimpleType: IOException(1458)", "Delete SimpleName: UnsupportedOperationException(1459)", "Delete SimpleType: UnsupportedOperationException(1460)", "Delete StringLiteral: \"MultiMutations cannot be read/written\"(1461)", "Delete ClassInstanceCreation(1462)", "Delete ThrowStatement(1463)", "Delete Block(1464)", "Delete MethodDeclaration(1465)", "Delete SimpleName: Override(1466)", "Delete MarkerAnnotation(1467)", "Delete Modifier: public(1468)", "Delete PrimitiveType: void(1469)", "Delete SimpleName: write(1470)", "Delete SimpleName: DataOutput(1471)", "Delete SimpleType: DataOutput(1472)", "Delete SimpleName: arg0(1473)", "Delete SingleVariableDeclaration(1474)", "Delete SimpleName: IOException(1475)", "Delete SimpleType: IOException(1476)", "Delete SimpleName: UnsupportedOperationException(1477)", "Delete SimpleType: UnsupportedOperationException(1478)", "Delete StringLiteral: \"MultiMutations cannot be read/written\"(1479)", "Delete ClassInstanceCreation(1480)", "Delete ThrowStatement(1481)", "Delete Block(1482)", "Delete MethodDeclaration(1483)", "Delete PrimitiveType: boolean(1514)", "Delete SimpleName: writeToWAL(1515)", "Delete SimpleName: writeToWAL(1532)", "Delete PrefixExpression: !(1533)", "Delete PrimitiveType: boolean(1616)", "Delete SimpleName: writeToWAL(1617)", "Delete PrimitiveType: boolean(1662)", "Delete SimpleName: writeToWAL(1663)", "Delete SimpleName: Pair(1702)", "Delete SimpleType: Pair(1703)", "Delete SimpleName: Integer(1706)", "Delete SimpleType: Integer(1707)", "Delete ParameterizedType: Pair<Mutation,Integer>(1708)", "Delete PrimitiveType: boolean(1745)", "Delete SimpleName: writeToWAL(1746)", "Delete PrimitiveType: boolean(1787)", "Delete SimpleName: writeToWAL(1788)", "Delete SimpleName: writeToWAL(1792)", "Delete PrefixExpression: !(1793)"]}}, {"SpillableGroupByCache_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 15"]}, {"root": "INS MethodDeclaration to AnonymousClassDeclaration at 3", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: getMaxResultSize to MethodDeclaration at 3", "INS MethodDeclaration to AnonymousClassDeclaration at 3", "INS MethodInvocation to ReturnStatement at 0", "INS PrimitiveType: long to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: s to MethodInvocation at 0", "INS SimpleName: getMaxResultSize to MethodInvocation at 1", "INS ReturnStatement to Block at 0"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}]}}, {"SpillableGroupByCache_diff": {"operations": ["Insert ImportDeclaration(31) into CompilationUnit(1130) at 15", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(30) into ImportDeclaration(31) at 0", "Insert MethodDeclaration(1123) into AnonymousClassDeclaration(1124) at 3", "Insert MarkerAnnotation(1114) into MethodDeclaration(1123) at 0", "Insert Modifier: public(1115) into MethodDeclaration(1123) at 1", "Insert PrimitiveType: long(1116) into MethodDeclaration(1123) at 2", "Insert SimpleName: getMaxResultSize(1117) into MethodDeclaration(1123) at 3", "Insert Block(1122) into MethodDeclaration(1123) at 4", "Update ParameterizedType: List<KeyValue>(995) to List<Cell>", "Insert SimpleName: Override(1113) into MarkerAnnotation(1114) at 0", "Insert ReturnStatement(1121) into Block(1122) at 0", "Update SimpleType: KeyValue(994) to Cell", "Insert MethodInvocation(1120) into ReturnStatement(1121) at 0", "Update SimpleName: KeyValue(993) to Cell", "Insert SimpleName: s(1118) into MethodInvocation(1120) at 0", "Insert SimpleName: getMaxResultSize(1119) into MethodInvocation(1120) at 1"]}}, {"DistinctValueWithCountServerAggregator_cluster": {"actions": [{"root": "UPDATE from org.apache.hadoop.hbase.io.hfile.Compression to org.apache.hadoop.hbase.io.compress.Compression", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.io.hfile.Compression from org.apache.hadoop.hbase.io.hfile.Compression to org.apache.hadoop.hbase.io.compress.Compression"]}, {"root": "UPDATE from org.apache.hadoop.hbase.io.hfile.Compression.Algorithm to org.apache.hadoop.hbase.io.compress.Compression.Algorithm", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.io.hfile.Compression.Algorithm from org.apache.hadoop.hbase.io.hfile.Compression.Algorithm to org.apache.hadoop.hbase.io.compress.Compression.Algorithm"]}]}}, {"DistinctValueWithCountServerAggregator_diff": {"operations": ["Update QualifiedName: org.apache.hadoop.hbase.io.hfile.Compression(16) to org.apache.hadoop.hbase.io.compress.Compression", "Update QualifiedName: org.apache.hadoop.hbase.io.hfile.Compression.Algorithm(18) to org.apache.hadoop.hbase.io.compress.Compression.Algorithm"]}}, {"CSVBulkLoader_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.regionserver.metrics.SchemaMetrics"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: SchemaMetrics", "DEL MethodInvocation", "DEL SimpleName: configureGlobally", "DEL ExpressionStatement", "DEL SimpleName: conf"]}]}}, {"CSVBulkLoader_diff": {"operations": ["Delete QualifiedName: org.apache.hadoop.hbase.regionserver.metrics.SchemaMetrics(52)", "Delete ImportDeclaration(53)", "Delete SimpleName: SchemaMetrics(829)", "Delete SimpleName: configureGlobally(830)", "Delete SimpleName: conf(831)", "Delete MethodInvocation(832)", "Delete ExpressionStatement(833)"]}}, {"PTableStats_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: java.util.Map to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ParameterizedType: Map<String,byte[][]> to MethodDeclaration at 0", "operations": ["INS PrimitiveType: byte to ArrayType: byte[][] at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS ArrayType: byte[][] to ParameterizedType: Map<String,byte[][]> at 2", "INS Dimension to ArrayType: byte[][] at 1", "INS ParameterizedType: Map<String,byte[][]> to MethodDeclaration at 0", "INS Dimension to ArrayType: byte[][] at 2", "INS SimpleType: Map to ParameterizedType: Map<String,byte[][]> at 0", "INS SimpleType: String to ParameterizedType: Map<String,byte[][]> at 1"]}, {"root": "INS SimpleName: getGuidePosts to MethodDeclaration at 1", "operations": ["INS SimpleName: getGuidePosts to MethodDeclaration at 1"]}, {"root": "UPDATE from DataOutput to String", "operations": ["UPD SimpleName: DataOutput from DataOutput to String"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: DataOutput to SimpleType: String at 0"]}, {"root": "DEL PrimitiveType: void", "operations": ["DEL PrimitiveType: void"]}, {"root": "DEL SimpleName: write", "operations": ["DEL SimpleName: write"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: DataOutput", "DEL SingleVariableDeclaration", "DEL SimpleName: output"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleType: IOException", "DEL SimpleName: IOException"]}]}}, {"PTableStats_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(48) at 3", "Insert QualifiedName: java.util.Map(6) into ImportDeclaration(7) at 0", "Insert ParameterizedType: Map<String,byte[][]>(44) into MethodDeclaration(46) at 0", "Insert SimpleName: getGuidePosts(45) into MethodDeclaration(46) at 1", "Insert SimpleType: Map(37) into ParameterizedType: Map<String,byte[][]>(44) at 0", "Insert SimpleType: String(39) into ParameterizedType: Map<String,byte[][]>(44) at 1", "Insert ArrayType: byte[][](43) into ParameterizedType: Map<String,byte[][]>(44) at 2", "Insert SimpleName: Map(36) into SimpleType: Map(37) at 0", "Update SimpleName: DataOutput(36) to String", "Move SimpleName: DataOutput(36) into SimpleType: String(39) at 0", "Insert PrimitiveType: byte(40) into ArrayType: byte[][](43) at 0", "Insert Dimension(41) into ArrayType: byte[][](43) at 1", "Insert Dimension(42) into ArrayType: byte[][](43) at 2", "Delete PrimitiveType: void(34)", "Delete SimpleName: write(35)", "Delete SimpleType: DataOutput(37)", "Delete SimpleName: output(38)", "Delete SingleVariableDeclaration(39)", "Delete SimpleName: IOException(40)", "Delete SimpleType: IOException(41)"]}}, {"PTableStatsImpl_cluster": {"actions": [{"root": "UPDATE from Entry<String,byte[][]> to Map<String,byte[][]>", "operations": ["UPD ParameterizedType: Entry<String,byte[][]> from Entry<String,byte[][]> to Map<String,byte[][]>"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: Entry<String,byte[][]> to MethodDeclaration at 2"]}, {"root": "UPDATE from write to getGuidePosts", "operations": ["UPD SimpleName: write from write to getGuidePosts"]}, {"root": "UPDATE from Entry to Map", "operations": ["UPD SimpleType: Entry from Entry to Map", "UPD SimpleName: Entry from Entry to Map"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS NullLiteral to ReturnStatement at 0", "INS ReturnStatement to Block at 1"]}, {"root": "UPDATE from == to !=", "operations": ["UPD InfixExpression: == from == to !="]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0"]}, {"root": "UPDATE from WritableUtils to ImmutableMap", "operations": ["UPD SimpleName: WritableUtils from WritableUtils to ImmutableMap"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: output to MethodInvocation at 2", "MOV SimpleName: WritableUtils to MethodInvocation at 0", "MOV SimpleName: writeVInt to MethodInvocation at 1"]}, {"root": "UPDATE from writeVInt to copyOf", "operations": ["UPD SimpleName: writeVInt from writeVInt to copyOf"]}, {"root": "UPDATE from output to regionGuidePosts", "operations": ["UPD SimpleName: output from output to regionGuidePosts"]}, {"root": "DEL PrimitiveType: void", "operations": ["DEL PrimitiveType: void"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: DataOutput", "DEL SimpleName: output", "DEL SingleVariableDeclaration", "DEL SimpleName: DataOutput"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleName: IOException", "DEL SimpleType: IOException"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL NumberLiteral: 0", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: regionGuidePosts", "DEL SimpleName: size", "DEL MethodInvocation", "DEL SimpleName: WritableUtils", "DEL MethodInvocation", "DEL SimpleName: writeVInt", "DEL SimpleName: output", "DEL ExpressionStatement"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL SimpleName: entrySet", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL QualifiedName: value.length", "DEL SimpleName: i", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: entry", "DEL EnhancedForStatement", "DEL VariableDeclarationFragment", "DEL Dimension", "DEL SimpleName: value", "DEL SimpleName: writeVInt", "DEL SimpleName: Bytes", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: writeString", "DEL ArrayType: byte[][]", "DEL SimpleName: regionGuidePosts", "DEL SimpleName: getKey", "DEL MethodInvocation", "DEL Dimension", "DEL SimpleName: WritableUtils", "DEL MethodInvocation", "DEL SimpleName: getValue", "DEL SimpleName: output", "DEL MethodInvocation", "DEL SimpleName: entry", "DEL SimpleName: writeByteArray", "DEL Block", "DEL SimpleName: i", "DEL NumberLiteral: 0", "DEL PrimitiveType: byte", "DEL SimpleName: output", "DEL PrimitiveType: int", "DEL ArrayAccess", "DEL ForStatement", "DEL SimpleName: WritableUtils", "DEL SimpleName: entry", "DEL SimpleName: i", "DEL SimpleName: output", "DEL QualifiedName: value.length", "DEL MethodInvocation", "DEL VariableDeclarationExpression", "DEL SingleVariableDeclaration", "DEL InfixExpression: <", "DEL SimpleName: i", "DEL MethodInvocation", "DEL MethodInvocation", "DEL PostfixExpression: ++", "DEL SimpleName: value"]}]}}, {"PTableStatsImpl_diff": {"operations": ["Update ParameterizedType: Entry<String,byte[][]>(124) to Map<String,byte[][]>", "Move ParameterizedType: Entry<String,byte[][]>(124) into MethodDeclaration(111) at 2", "Update SimpleName: write(89) to getGuidePosts", "Update SimpleType: Entry(117) to Map", "Insert ReturnStatement(109) into Block(110) at 1", "Update SimpleName: Entry(116) to Map", "Update InfixExpression: ==(98) to !=", "Insert NullLiteral(108) into ReturnStatement(109) at 0", "Insert ReturnStatement(105) into Block(106) at 0", "Insert MethodInvocation(104) into ReturnStatement(105) at 0", "Update SimpleName: WritableUtils(99) to ImmutableMap", "Move SimpleName: WritableUtils(99) into MethodInvocation(104) at 0", "Update SimpleName: writeVInt(100) to copyOf", "Move SimpleName: writeVInt(100) into MethodInvocation(104) at 1", "Update SimpleName: output(101) to regionGuidePosts", "Move SimpleName: output(101) into MethodInvocation(104) at 2", "Delete PrimitiveType: void(88)", "Delete SimpleName: DataOutput(90)", "Delete SimpleType: DataOutput(91)", "Delete SimpleName: output(92)", "Delete SingleVariableDeclaration(93)", "Delete SimpleName: IOException(94)", "Delete SimpleType: IOException(95)", "Delete NumberLiteral: 0(102)", "Delete MethodInvocation(103)", "Delete ExpressionStatement(104)", "Delete ReturnStatement(105)", "Delete SimpleName: WritableUtils(108)", "Delete SimpleName: writeVInt(109)", "Delete SimpleName: output(110)", "Delete SimpleName: regionGuidePosts(111)", "Delete SimpleName: size(112)", "Delete MethodInvocation(113)", "Delete MethodInvocation(114)", "Delete ExpressionStatement(115)", "Delete SimpleName: entry(125)", "Delete SingleVariableDeclaration(126)", "Delete SimpleName: regionGuidePosts(127)", "Delete SimpleName: entrySet(128)", "Delete MethodInvocation(129)", "Delete SimpleName: WritableUtils(130)", "Delete SimpleName: writeString(131)", "Delete SimpleName: output(132)", "Delete SimpleName: entry(133)", "Delete SimpleName: getKey(134)", "Delete MethodInvocation(135)", "Delete MethodInvocation(136)", "Delete ExpressionStatement(137)", "Delete PrimitiveType: byte(138)", "Delete Dimension(139)", "Delete Dimension(140)", "Delete ArrayType: byte[][](141)", "Delete SimpleName: value(142)", "Delete SimpleName: entry(143)", "Delete SimpleName: getValue(144)", "Delete MethodInvocation(145)", "Delete VariableDeclarationFragment(146)", "Delete VariableDeclarationStatement(147)", "Delete SimpleName: WritableUtils(148)", "Delete SimpleName: writeVInt(149)", "Delete SimpleName: output(150)", "Delete QualifiedName: value.length(151)", "Delete MethodInvocation(152)", "Delete ExpressionStatement(153)", "Delete PrimitiveType: int(154)", "Delete SimpleName: i(155)", "Delete NumberLiteral: 0(156)", "Delete VariableDeclarationFragment(157)", "Delete VariableDeclarationExpression(158)", "Delete SimpleName: i(159)", "Delete QualifiedName: value.length(160)", "Delete InfixExpression: <(161)", "Delete SimpleName: i(162)", "Delete PostfixExpression: ++(163)", "Delete SimpleName: Bytes(164)", "Delete SimpleName: writeByteArray(165)", "Delete SimpleName: output(166)", "Delete SimpleName: value(167)", "Delete SimpleName: i(168)", "Delete ArrayAccess(169)", "Delete MethodInvocation(170)", "Delete ExpressionStatement(171)", "Delete Block(172)", "Delete ForStatement(173)", "Delete Block(174)", "Delete EnhancedForStatement(175)"]}}, {"MultiKeyValueTuple_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "UPDATE from getBuffer to getRowArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getRowArray"]}, {"root": "UPDATE from getBuffer to getValueArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getValueArray"]}]}}, {"MultiKeyValueTuple_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(225) at 2", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(4) into ImportDeclaration(5) at 0", "Update ParameterizedType: List<KeyValue>(21) to List<Cell>", "Update SimpleType: KeyValue(111) to Cell", "Update SimpleType: KeyValue(159) to Cell", "Update SimpleType: KeyValue(20) to Cell", "Update ParameterizedType: List<KeyValue>(31) to List<Cell>", "Update ParameterizedType: List<KeyValue>(51) to List<Cell>", "Update SimpleName: KeyValue(110) to Cell", "Update SimpleName: KeyValue(158) to Cell", "Update SimpleName: KeyValue(19) to Cell", "Update SimpleType: KeyValue(30) to Cell", "Update SimpleType: KeyValue(50) to Cell", "Update SimpleType: KeyValue(75) to Cell", "Update SimpleType: KeyValue(191) to Cell", "Update SimpleName: KeyValue(29) to Cell", "Update SimpleName: KeyValue(49) to Cell", "Update SimpleName: KeyValue(74) to Cell", "Update SimpleName: KeyValue(190) to Cell", "Update SimpleName: getBuffer(86) to getRowArray", "Update SimpleName: getBuffer(208) to getValueArray"]}}, {"Tuple_cluster": {"actions": [{"root": "UPDATE from org.apache.hadoop.hbase.KeyValue to org.apache.hadoop.hbase.Cell", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.KeyValue from org.apache.hadoop.hbase.KeyValue to org.apache.hadoop.hbase.Cell"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}]}}, {"Tuple_diff": {"operations": ["Update QualifiedName: org.apache.hadoop.hbase.KeyValue(2) to org.apache.hadoop.hbase.Cell", "Update SimpleType: KeyValue(65) to Cell", "Update SimpleType: KeyValue(86) to Cell", "Update SimpleName: KeyValue(64) to Cell", "Update SimpleName: KeyValue(85) to Cell"]}}, {"BaseIndexBuilder_cluster": {"actions": [{"root": "UPDATE from MiniBatchOperationInProgress<Pair<Mutation,Integer>> to MiniBatchOperationInProgress<Mutation>", "operations": ["UPD ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> from MiniBatchOperationInProgress<Pair<Mutation,Integer>> to MiniBatchOperationInProgress<Mutation>", "UPD ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> from MiniBatchOperationInProgress<Pair<Mutation,Integer>> to MiniBatchOperationInProgress<Mutation>"]}, {"root": "MOVE from ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>", "operations": ["MOV SimpleType: Mutation to ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> at 1"]}, {"root": "MOVE from ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>", "operations": ["MOV SimpleType: Mutation to ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> at 1"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL SimpleType: Pair", "DEL SimpleType: Integer", "DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleName: Integer", "DEL SimpleName: Pair"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL SimpleType: Pair", "DEL SimpleName: Pair", "DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleType: Integer", "DEL SimpleName: Integer"]}]}}, {"BaseIndexBuilder_diff": {"operations": ["Update ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>(91) to MiniBatchOperationInProgress<Mutation>", "Update ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>(112) to MiniBatchOperationInProgress<Mutation>", "Move SimpleType: Mutation(87) into ParameterizedType: MiniBatchOperationInProgress<Mutation>(86) at 1", "Move SimpleType: Mutation(108) into ParameterizedType: MiniBatchOperationInProgress<Mutation>(102) at 1", "Delete SimpleName: Pair(84)", "Delete SimpleType: Pair(85)", "Delete SimpleName: Integer(88)", "Delete SimpleType: Integer(89)", "Delete ParameterizedType: Pair<Mutation,Integer>(90)", "Delete SimpleName: Pair(105)", "Delete SimpleType: Pair(106)", "Delete SimpleName: Integer(109)", "Delete SimpleType: Integer(110)", "Delete ParameterizedType: Pair<Mutation,Integer>(111)"]}}, {"IndexBuildManager_cluster": {"actions": [{"root": "UPDATE from MiniBatchOperationInProgress<Pair<Mutation,Integer>> to MiniBatchOperationInProgress<Mutation>", "operations": ["UPD ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> from MiniBatchOperationInProgress<Pair<Mutation,Integer>> to MiniBatchOperationInProgress<Mutation>", "UPD ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> from MiniBatchOperationInProgress<Pair<Mutation,Integer>> to MiniBatchOperationInProgress<Mutation>", "UPD ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> from MiniBatchOperationInProgress<Pair<Mutation,Integer>> to MiniBatchOperationInProgress<Mutation>"]}, {"root": "MOVE from ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>", "operations": ["MOV SimpleType: Mutation to ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> at 1"]}, {"root": "MOVE from ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>", "operations": ["MOV SimpleType: Mutation to ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> at 1"]}, {"root": "MOVE from ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>", "operations": ["MOV SimpleType: Mutation to ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> at 1"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL SimpleName: Pair", "DEL SimpleType: Integer", "DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleName: Integer", "DEL SimpleType: Pair"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL SimpleName: Integer", "DEL SimpleType: Integer", "DEL SimpleName: Pair", "DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleType: Pair"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL SimpleName: Pair", "DEL SimpleType: Pair", "DEL SimpleName: Integer", "DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleType: Integer"]}]}}, {"IndexBuildManager_diff": {"operations": ["Update ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>(350) to MiniBatchOperationInProgress<Mutation>", "Update ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>(641) to MiniBatchOperationInProgress<Mutation>", "Update ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>(663) to MiniBatchOperationInProgress<Mutation>", "Move SimpleType: Mutation(346) into ParameterizedType: MiniBatchOperationInProgress<Mutation>(345) at 1", "Move SimpleType: Mutation(637) into ParameterizedType: MiniBatchOperationInProgress<Mutation>(631) at 1", "Move SimpleType: Mutation(659) into ParameterizedType: MiniBatchOperationInProgress<Mutation>(648) at 1", "Delete SimpleName: Pair(343)", "Delete SimpleType: Pair(344)", "Delete SimpleName: Integer(347)", "Delete SimpleType: Integer(348)", "Delete ParameterizedType: Pair<Mutation,Integer>(349)", "Delete SimpleName: Pair(634)", "Delete SimpleType: Pair(635)", "Delete SimpleName: Integer(638)", "Delete SimpleType: Integer(639)", "Delete ParameterizedType: Pair<Mutation,Integer>(640)", "Delete SimpleName: Pair(656)", "Delete SimpleType: Pair(657)", "Delete SimpleName: Integer(660)", "Delete SimpleType: Integer(661)", "Delete ParameterizedType: Pair<Mutation,Integer>(662)"]}}, {"IndexBuilder_cluster": {"actions": [{"root": "UPDATE from MiniBatchOperationInProgress<Pair<Mutation,Integer>> to MiniBatchOperationInProgress<Mutation>", "operations": ["UPD ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> from MiniBatchOperationInProgress<Pair<Mutation,Integer>> to MiniBatchOperationInProgress<Mutation>", "UPD ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> from MiniBatchOperationInProgress<Pair<Mutation,Integer>> to MiniBatchOperationInProgress<Mutation>"]}, {"root": "MOVE from ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>", "operations": ["MOV SimpleType: Mutation to ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> at 1"]}, {"root": "MOVE from ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>", "operations": ["MOV SimpleType: Mutation to ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>> at 1"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL ParameterizedType: Pair<Mutation,Integer>", "DEL SimpleType: Pair", "DEL SimpleName: Pair", "DEL SimpleName: Integer", "DEL SimpleType: Integer"]}, {"root": "DEL ParameterizedType: Pair<Mutation,Integer>", "operations": ["DEL SimpleType: Pair", "DEL SimpleName: Integer", "DEL SimpleType: Integer", "DEL SimpleName: Pair", "DEL ParameterizedType: Pair<Mutation,Integer>"]}]}}, {"IndexBuilder_diff": {"operations": ["Update ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>(256) to MiniBatchOperationInProgress<Mutation>", "Update ParameterizedType: MiniBatchOperationInProgress<Pair<Mutation,Integer>>(295) to MiniBatchOperationInProgress<Mutation>", "Move SimpleType: Mutation(252) into ParameterizedType: MiniBatchOperationInProgress<Mutation>(251) at 1", "Move SimpleType: Mutation(291) into ParameterizedType: MiniBatchOperationInProgress<Mutation>(285) at 1", "Delete SimpleName: Pair(249)", "Delete SimpleType: Pair(250)", "Delete SimpleName: Integer(253)", "Delete SimpleType: Integer(254)", "Delete ParameterizedType: Pair<Mutation,Integer>(255)", "Delete SimpleName: Pair(288)", "Delete SimpleType: Pair(289)", "Delete SimpleName: Integer(292)", "Delete SimpleType: Integer(293)", "Delete ParameterizedType: Pair<Mutation,Integer>(294)"]}}, {"CoveredColumnsIndexBuilder_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 30", "MOV ImportDeclaration to CompilationUnit at 30", "MOV ImportDeclaration to CompilationUnit at 30", "MOV ImportDeclaration to CompilationUnit at 30", "MOV ImportDeclaration to CompilationUnit at 30"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 17", "operations": ["INS ImportDeclaration to CompilationUnit at 17", "INS QualifiedName: org.apache.hadoop.hbase.KeyValueUtil to ImportDeclaration at 0"]}, {"root": "UPDATE from Map<byte[],List<KeyValue>> to Map<byte[],List<Cell>>", "operations": ["UPD ParameterizedType: Map<byte[],List<KeyValue>> from Map<byte[],List<KeyValue>> to Map<byte[],List<Cell>>"]}, {"root": "INS ParameterizedType: List<Cell> to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: List to ParameterizedType: List<Cell> at 0", "INS SimpleType: Cell to ParameterizedType: List<Cell> at 1", "INS SimpleName: List to SimpleType: List at 0", "INS ParameterizedType: List<Cell> to SingleVariableDeclaration at 0", "INS SimpleName: Cell to SimpleType: Cell at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: KeyValueUtil to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: familyKVs to VariableDeclarationFragment at 0", "INS SimpleName: ensureKeyValues to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: family to MethodInvocation at 2"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "UPDATE from getFamilyMap to getFamilyCellMap", "operations": ["UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap", "UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: List<KeyValue> to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "UPDATE from family to familyKVs", "operations": ["UPD SimpleName: family from family to familyKVs"]}]}}, {"CoveredColumnsIndexBuilder_diff": {"operations": ["Move ImportDeclaration(39) into CompilationUnit(1466) at 30", "Move ImportDeclaration(41) into CompilationUnit(1466) at 30", "Move ImportDeclaration(43) into CompilationUnit(1466) at 30", "Move ImportDeclaration(45) into CompilationUnit(1466) at 30", "Move ImportDeclaration(47) into CompilationUnit(1466) at 30", "Insert ImportDeclaration(29) into CompilationUnit(1466) at 14", "Insert ImportDeclaration(35) into CompilationUnit(1466) at 17", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.KeyValueUtil(34) into ImportDeclaration(35) at 0", "Update ParameterizedType: Map<byte[],List<KeyValue>>(1263) to Map<byte[],List<Cell>>", "Insert ParameterizedType: List<Cell>(430) into SingleVariableDeclaration(432) at 0", "Insert VariableDeclarationStatement(449) into Block(455) at 0", "Update ParameterizedType: List<KeyValue>(1262) to List<Cell>", "Insert SimpleType: List(427) into ParameterizedType: List<Cell>(430) at 0", "Insert SimpleType: Cell(429) into ParameterizedType: List<Cell>(430) at 1", "Update SimpleName: getFamilyMap(430) to getFamilyCellMap", "Move ParameterizedType: List<KeyValue>(426) into VariableDeclarationStatement(449) at 0", "Insert VariableDeclarationFragment(448) into VariableDeclarationStatement(449) at 1", "Update SimpleType: KeyValue(1261) to Cell", "Update SimpleName: getFamilyMap(1266) to getFamilyCellMap", "Insert SimpleName: List(426) into SimpleType: List(427) at 0", "Insert SimpleName: Cell(428) into SimpleType: Cell(429) at 0", "Insert SimpleName: familyKVs(443) into VariableDeclarationFragment(448) at 0", "Insert MethodInvocation(447) into VariableDeclarationFragment(448) at 1", "Update SimpleName: family(435) to familyKVs", "Update SimpleName: KeyValue(1260) to Cell", "Insert SimpleName: KeyValueUtil(444) into MethodInvocation(447) at 0", "Insert SimpleName: ensureKeyValues(445) into MethodInvocation(447) at 1", "Insert SimpleName: family(446) into MethodInvocation(447) at 2"]}}, {"LocalTableState_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 22", "MOV ImportDeclaration to CompilationUnit at 22"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS ImportDeclaration to CompilationUnit at 11", "INS QualifiedName: org.apache.hadoop.hbase.KeyValueUtil to ImportDeclaration at 0"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>", "UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: kvs to MethodInvocation at 2", "INS SimpleName: Result to MethodInvocation at 0", "INS SimpleName: create to MethodInvocation at 1"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "UPDATE from Map.Entry<byte[],List<KeyValue>> to Map.Entry<byte[],List<Cell>>", "operations": ["UPD ParameterizedType: Map.Entry<byte[],List<KeyValue>> from Map.Entry<byte[],List<KeyValue>> to Map.Entry<byte[],List<Cell>>"]}, {"root": "UPDATE from ArrayList<KeyValue> to ArrayList<Cell>", "operations": ["UPD ParameterizedType: ArrayList<KeyValue> from ArrayList<KeyValue> to ArrayList<Cell>"]}, {"root": "UPDATE from getFamilyMap to getFamilyCellMap", "operations": ["UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: ensureKeyValues to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: KeyValueUtil to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: kvs", "DEL SimpleType: Result", "DEL SimpleName: Result"]}]}}, {"LocalTableState_diff": {"operations": ["Move ImportDeclaration(27) into CompilationUnit(824) at 22", "Move ImportDeclaration(29) into CompilationUnit(824) at 22", "Insert ImportDeclaration(19) into CompilationUnit(824) at 9", "Insert ImportDeclaration(23) into CompilationUnit(824) at 11", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.KeyValueUtil(22) into ImportDeclaration(23) at 0", "Update ParameterizedType: List<KeyValue>(574) to List<Cell>", "Insert MethodInvocation(618) into ReturnStatement(619) at 0", "Update SimpleType: KeyValue(573) to Cell", "Insert SimpleName: Result(615) into MethodInvocation(618) at 0", "Insert SimpleName: create(616) into MethodInvocation(618) at 1", "Insert SimpleName: kvs(617) into MethodInvocation(618) at 2", "Update ParameterizedType: Map.Entry<byte[],List<KeyValue>>(644) to Map.Entry<byte[],List<Cell>>", "Update SimpleName: KeyValue(572) to Cell", "Update ParameterizedType: ArrayList<KeyValue>(580) to ArrayList<Cell>", "Update ParameterizedType: List<KeyValue>(643) to List<Cell>", "Update SimpleName: getFamilyMap(648) to getFamilyCellMap", "Update SimpleType: KeyValue(579) to Cell", "Update SimpleType: KeyValue(642) to Cell", "Insert MethodInvocation(667) into VariableDeclarationFragment(668) at 1", "Update SimpleName: KeyValue(578) to Cell", "Update SimpleName: KeyValue(641) to Cell", "Insert SimpleName: KeyValueUtil(662) into MethodInvocation(667) at 0", "Insert SimpleName: ensureKeyValues(663) into MethodInvocation(667) at 1", "Move MethodInvocation(660) into MethodInvocation(667) at 2", "Delete SimpleName: Result(611)", "Delete SimpleType: Result(612)", "Delete SimpleName: kvs(613)", "Delete ClassInstanceCreation(614)"]}}, {"ThreadPoolManager_cluster": {"actions": [{"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return"]}]}}, {"ThreadPoolManager_diff": {"operations": ["Delete TagElement: @return(184)"]}}, {"FilteredKeyValueScanner_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS SimpleName: backwardSeek to MethodDeclaration at 3", "INS SimpleName: backwardSeek to MethodInvocation at 1", "INS SimpleName: delegate to FieldAccess at 1", "INS SimpleName: arg0 to MethodInvocation at 2", "INS Block to MethodDeclaration at 6", "INS SimpleType: KeyValue to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: IOException to MethodDeclaration at 5", "INS FieldAccess to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS MethodInvocation to ReturnStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: KeyValue to SimpleType: KeyValue at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: arg0 to SingleVariableDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: IOException to SimpleType: IOException at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS SimpleName: delegate to FieldAccess at 1", "INS ReturnStatement to Block at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: seekToLastRow to MethodDeclaration at 3", "INS SimpleType: IOException to MethodDeclaration at 4", "INS Block to MethodDeclaration at 5", "INS ThisExpression to FieldAccess at 0", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: seekToLastRow to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS FieldAccess to MethodInvocation at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: seekToPreviousRow to MethodInvocation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: arg0 to MethodInvocation at 2", "INS SimpleName: delegate to FieldAccess at 1", "INS SimpleType: KeyValue to SingleVariableDeclaration at 0", "INS SimpleName: arg0 to SingleVariableDeclaration at 1", "INS SimpleName: KeyValue to SimpleType: KeyValue at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS SimpleName: seekToPreviousRow to MethodDeclaration at 3", "INS Block to MethodDeclaration at 6", "INS ThisExpression to FieldAccess at 0", "INS SimpleType: IOException to MethodDeclaration at 5", "INS MethodInvocation to ReturnStatement at 0"]}]}}, {"FilteredKeyValueScanner_diff": {"operations": ["Insert MethodDeclaration(388) into TypeDeclaration: class(424) at 20", "Insert MethodDeclaration(403) into TypeDeclaration: class(424) at 21", "Insert MethodDeclaration(423) into TypeDeclaration: class(424) at 22", "Insert MarkerAnnotation(370) into MethodDeclaration(388) at 0", "Insert Modifier: public(371) into MethodDeclaration(388) at 1", "Insert PrimitiveType: boolean(372) into MethodDeclaration(388) at 2", "Insert SimpleName: backwardSeek(373) into MethodDeclaration(388) at 3", "Insert SingleVariableDeclaration(377) into MethodDeclaration(388) at 4", "Insert SimpleType: IOException(379) into MethodDeclaration(388) at 5", "Insert Block(387) into MethodDeclaration(388) at 6", "Insert MarkerAnnotation(390) into MethodDeclaration(403) at 0", "Insert Modifier: public(391) into MethodDeclaration(403) at 1", "Insert PrimitiveType: boolean(392) into MethodDeclaration(403) at 2", "Insert SimpleName: seekToLastRow(393) into MethodDeclaration(403) at 3", "Insert SimpleType: IOException(395) into MethodDeclaration(403) at 4", "Insert Block(402) into MethodDeclaration(403) at 5", "Insert MarkerAnnotation(405) into MethodDeclaration(423) at 0", "Insert Modifier: public(406) into MethodDeclaration(423) at 1", "Insert PrimitiveType: boolean(407) into MethodDeclaration(423) at 2", "Insert SimpleName: seekToPreviousRow(408) into MethodDeclaration(423) at 3", "Insert SingleVariableDeclaration(412) into MethodDeclaration(423) at 4", "Insert SimpleType: IOException(414) into MethodDeclaration(423) at 5", "Insert Block(422) into MethodDeclaration(423) at 6", "Insert SimpleName: Override(369) into MarkerAnnotation(370) at 0", "Insert SimpleType: KeyValue(375) into SingleVariableDeclaration(377) at 0", "Insert SimpleName: arg0(376) into SingleVariableDeclaration(377) at 1", "Insert SimpleName: IOException(378) into SimpleType: IOException(379) at 0", "Insert ReturnStatement(386) into Block(387) at 0", "Insert SimpleName: Override(389) into MarkerAnnotation(390) at 0", "Insert SimpleName: IOException(394) into SimpleType: IOException(395) at 0", "Insert ReturnStatement(401) into Block(402) at 0", "Insert SimpleName: Override(404) into MarkerAnnotation(405) at 0", "Insert SimpleType: KeyValue(410) into SingleVariableDeclaration(412) at 0", "Insert SimpleName: arg0(411) into SingleVariableDeclaration(412) at 1", "Insert SimpleName: IOException(413) into SimpleType: IOException(414) at 0", "Insert ReturnStatement(421) into Block(422) at 0", "Insert SimpleName: KeyValue(374) into SimpleType: KeyValue(375) at 0", "Insert MethodInvocation(385) into ReturnStatement(386) at 0", "Insert MethodInvocation(400) into ReturnStatement(401) at 0", "Insert SimpleName: KeyValue(409) into SimpleType: KeyValue(410) at 0", "Insert MethodInvocation(420) into ReturnStatement(421) at 0", "Insert FieldAccess(382) into MethodInvocation(385) at 0", "Insert SimpleName: backwardSeek(383) into MethodInvocation(385) at 1", "Insert SimpleName: arg0(384) into MethodInvocation(385) at 2", "Insert FieldAccess(398) into MethodInvocation(400) at 0", "Insert SimpleName: seekToLastRow(399) into MethodInvocation(400) at 1", "Insert FieldAccess(417) into MethodInvocation(420) at 0", "Insert SimpleName: seekToPreviousRow(418) into MethodInvocation(420) at 1", "Insert SimpleName: arg0(419) into MethodInvocation(420) at 2", "Insert ThisExpression(380) into FieldAccess(382) at 0", "Insert SimpleName: delegate(381) into FieldAccess(382) at 1", "Insert ThisExpression(396) into FieldAccess(398) at 0", "Insert SimpleName: delegate(397) into FieldAccess(398) at 1", "Insert ThisExpression(415) into FieldAccess(417) at 0", "Insert SimpleName: delegate(416) into FieldAccess(417) at 1"]}}, {"CoprocessorHTableFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: org.apache.hadoop.hbase.TableName to ImportDeclaration at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: valueOf to MethodInvocation at 1", "INS SimpleName: TableName to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}]}}, {"CoprocessorHTableFactory_diff": {"operations": ["Insert ImportDeclaration(15) into CompilationUnit(187) at 7", "Insert QualifiedName: org.apache.hadoop.hbase.TableName(14) into ImportDeclaration(15) at 0", "Insert MethodInvocation(174) into MethodInvocation(175) at 2", "Insert SimpleName: TableName(169) into MethodInvocation(174) at 0", "Insert SimpleName: valueOf(170) into MethodInvocation(174) at 1", "Move MethodInvocation(169) into MethodInvocation(174) at 2"]}}, {"IndexedKeyValue_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.client.Delete to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: org.apache.hadoop.hbase.client.Put to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS ImportDeclaration to CompilationUnit at 11", "INS QualifiedName: org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutationProto to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutationProto.MutationType to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.regionserver.wal.WALEdit to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 14"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS ReturnStatement to Block at 0", "INS TagElement to Javadoc at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS SimpleName: matchingRow to MethodDeclaration at 4", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Javadoc to MethodDeclaration at 0", "INS ArrayType: byte[] to SingleVariableDeclaration at 1", "INS Dimension to ArrayType: byte[] at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS PrimitiveType: boolean to MethodDeclaration at 3", "INS Block to MethodDeclaration at 6", "INS Modifier: public to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS TextElement: Not a real KeyValue to TagElement at 0", "INS SimpleName: row to SingleVariableDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: mutationData to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1", "INS Dimension to ArrayType: byte[] at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS Block to MethodDeclaration at 7", "INS VariableDeclarationStatement to Block at 2", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS SimpleType: MutationProto to VariableDeclarationStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: toMutationProto to MethodDeclaration at 2", "INS QualifiedName: MutationType.PUT to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Delete to SimpleType: Delete at 0", "INS SimpleName: toMutation to MethodInvocation at 1", "INS SimpleName: mutation to MethodInvocation at 3", "INS Modifier: protected to MethodDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: MutationProto to SimpleType: MutationProto at 0", "INS SimpleName: m to ReturnStatement at 0", "INS QualifiedName: org.apache.hadoop.hbase.protobuf.ProtobufUtil to MethodInvocation at 0", "INS ReturnStatement to Block at 2", "INS SimpleType: Put to InstanceofExpression at 1", "INS IfStatement to IfStatement at 2", "INS SimpleName: m to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS QualifiedName: org.apache.hadoop.hbase.protobuf.ProtobufUtil to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS SimpleName: m to VariableDeclarationFragment at 0", "INS QualifiedName: MutationType.DELETE to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS InstanceofExpression to IfStatement at 0", "INS SimpleType: MutationProto to MethodDeclaration at 1", "INS NullLiteral to VariableDeclarationFragment at 1", "INS Block to MethodDeclaration at 5", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: mutation to InstanceofExpression at 0", "INS SimpleName: mutation to InstanceofExpression at 0", "INS SimpleType: Delete to InstanceofExpression at 1", "INS SimpleName: toMutation to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: mutation to MethodInvocation at 3", "INS SimpleType: MutationProto to VariableDeclarationStatement at 0", "INS SimpleName: m to Assignment: = at 0", "INS SimpleName: mutation to SingleVariableDeclaration at 1", "INS InstanceofExpression to IfStatement at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV MarkerAnnotation to MethodDeclaration at 1", "MOV Javadoc to MethodDeclaration at 0", "MOV SingleMemberAnnotation to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV PrimitiveType: void to MethodDeclaration at 3", "MOV SimpleName: write to MethodDeclaration at 4", "MOV SimpleType: IOException to MethodDeclaration at 4", "MOV Modifier: public to MethodDeclaration at 2"]}, {"root": "UPDATE from write to readFields", "operations": ["UPD SimpleName: write from write to readFields"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: m to VariableDeclarationFragment at 0", "INS SimpleName: MutationProto to SimpleType: MutationProto at 0", "INS SimpleType: MutationProto to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4", "MOV ExpressionStatement to Block at 3"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: Mutation to SingleVariableDeclaration at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1"]}, {"root": "UPDATE from HLog.METAFAMILY to WALEdit.METAFAMILY", "operations": ["UPD QualifiedName: HLog.METAFAMILY from HLog.METAFAMILY to WALEdit.METAFAMILY"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleType: MutationProto to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: m to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 2"]}, {"root": "UPDATE from out to Bytes", "operations": ["UPD SimpleName: out from out to Bytes", "UPD SimpleName: KeyValueCodec from KeyValueCodec to Bytes"]}, {"root": "UPDATE from writeUTF to writeByteArray", "operations": ["UPD SimpleName: writeUTF from writeUTF to writeByteArray"]}, {"root": "INS SimpleName: out to MethodInvocation at 2", "operations": ["INS SimpleName: out to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "UPDATE from Mutation to MutationProto", "operations": ["UPD SimpleName: Mutation from Mutation to MutationProto", "UPD SimpleName: ClassNotFoundException from ClassNotFoundException to MutationProto", "UPD SimpleName: ByteArrayOutputStream from ByteArrayOutputStream to MutationProto", "UPD SimpleName: Class from Class to MutationProto"]}, {"root": "MOVE from SimpleType: MutationProto", "operations": ["MOV SimpleName: Mutation to SimpleType: MutationProto at 0"]}, {"root": "UPDATE from newInstance to mProto", "operations": ["UPD SimpleName: newInstance from newInstance to mProto", "UPD SimpleName: clazz from clazz to mProto"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: clazz to VariableDeclarationFragment at 0"]}, {"root": "MOVE from SimpleType: MutationProto", "operations": ["MOV SimpleName: ClassNotFoundException to SimpleType: MutationProto at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 2"]}, {"root": "UPDATE from HLog to WALEdit", "operations": ["UPD SimpleName: HLog from HLog to WALEdit"]}, {"root": "UPDATE from bos to toMutationProto", "operations": ["UPD SimpleName: bos from bos to toMutationProto", "UPD SimpleName: write from write to toMutationProto"]}, {"root": "INS SimpleName: m to MethodInvocation at 0", "operations": ["INS SimpleName: m to MethodInvocation at 0"]}, {"root": "UPDATE from getClass to toByteArray", "operations": ["UPD SimpleName: getClass from getClass to toByteArray"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: KeyValueCodec to MethodInvocation at 0", "MOV SimpleName: write to MethodInvocation at 1", "MOV SimpleName: out to MethodInvocation at 2"]}, {"root": "UPDATE from write to readByteArray", "operations": ["UPD SimpleName: write from write to readByteArray"]}, {"root": "UPDATE from out to in", "operations": ["UPD SimpleName: out from out to in"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Class to MethodInvocation at 0", "MOV SimpleName: forName to MethodInvocation at 1"]}, {"root": "UPDATE from forName to parseFrom", "operations": ["UPD SimpleName: forName from forName to parseFrom"]}, {"root": "UPDATE from in to mutationData", "operations": ["UPD SimpleName: in from in to mutationData"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: in to MethodInvocation at 2"]}, {"root": "INS QualifiedName: org.apache.hadoop.hbase.protobuf.ProtobufUtil to MethodInvocation at 0", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.protobuf.ProtobufUtil to MethodInvocation at 0"]}, {"root": "UPDATE from clazz to toMutation", "operations": ["UPD SimpleName: clazz from clazz to toMutation"]}, {"root": "UPDATE from IOException to Put", "operations": ["UPD SimpleName: IOException from IOException to Put"]}, {"root": "MOVE from SimpleType: Put", "operations": ["MOV SimpleName: IOException to SimpleType: Put at 0"]}, {"root": "MOVE from SimpleType: MutationProto", "operations": ["MOV SimpleName: ByteArrayOutputStream to SimpleType: MutationProto at 0"]}, {"root": "UPDATE from bos to m", "operations": ["UPD SimpleName: bos from bos to m"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: bos to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 1"]}, {"root": "INS StringLiteral: \"Put/Delete mutations only supported\" to ClassInstanceCreation at 1", "operations": ["INS StringLiteral: \"Put/Delete mutations only supported\" to ClassInstanceCreation at 1"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: bos", "DEL SimpleType: ByteArrayOutputStream", "DEL SimpleName: ByteArrayOutputStream", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: bos", "DEL SimpleType: ByteArrayOutputStream", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL Assignment: ="]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: DataOutputStream", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: bos", "DEL SimpleName: write", "DEL ClassInstanceCreation", "DEL SimpleType: DataOutputStream"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: flush", "DEL ExpressionStatement"]}, {"root": "DEL CatchClause", "operations": ["DEL SimpleType: IOException", "DEL ClassInstanceCreation", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleType: IllegalArgumentException", "DEL SimpleName: IllegalArgumentException", "DEL CatchClause", "DEL StringLiteral: \"Failed to get bytes for mutation!\"", "DEL ThrowStatement", "DEL SimpleName: IOException", "DEL SimpleName: e", "DEL SimpleName: e"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: bos", "DEL ExpressionStatement", "DEL NullLiteral", "DEL MethodInvocation", "DEL SimpleName: bos", "DEL Block", "DEL TryStatement", "DEL Block", "DEL SimpleName: close", "DEL Block", "DEL InfixExpression: !=", "DEL IfStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: Override", "DEL Block", "DEL SimpleName: DataOutput", "DEL ThisExpression", "DEL MarkerAnnotation", "DEL SimpleType: DataOutput", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: out"]}, {"root": "DEL SimpleName: out", "operations": ["DEL SimpleName: out"]}, {"root": "DEL FieldAccess", "operations": ["DEL FieldAccess", "DEL SimpleName: mutation", "DEL ThisExpression"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getName", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL Block", "DEL ThrowStatement", "DEL CatchClause", "DEL CatchClause", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: e", "DEL SimpleType: IOException", "DEL SimpleName: e", "DEL TryStatement", "DEL WildcardType: ? extends Mutation", "DEL SimpleType: InstantiationException", "DEL SingleVariableDeclaration", "DEL SimpleName: Class", "DEL SimpleType: ClassNotFoundException", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ParameterizedType: Class<? extends Mutation>", "DEL SimpleName: e", "DEL SimpleType: IllegalAccessException", "DEL Block", "DEL SimpleName: clazz", "DEL PrimitiveType: void", "DEL SimpleType: Mutation", "DEL FieldAccess", "DEL SimpleName: asSubclass", "DEL ThisExpression", "DEL Block", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL Assignment: =", "DEL SingleVariableDeclaration", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL VariableDeclarationStatement", "DEL ThrowStatement", "DEL SimpleName: mutation", "DEL SimpleType: Class", "DEL SimpleName: readFields", "DEL SimpleName: in", "DEL SimpleName: readUTF", "DEL CatchClause", "DEL MethodInvocation", "DEL SimpleName: IllegalAccessException", "DEL TypeLiteral", "DEL SimpleType: IOException", "DEL SimpleName: readFields", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL SimpleName: InstantiationException"]}, {"root": "DEL SimpleName: e", "operations": ["DEL SimpleName: e"]}]}}, {"IndexedKeyValue_diff": {"operations": ["Insert ImportDeclaration(17) into CompilationUnit(584) at 8", "Insert ImportDeclaration(21) into CompilationUnit(584) at 10", "Insert ImportDeclaration(23) into CompilationUnit(584) at 11", "Insert ImportDeclaration(25) into CompilationUnit(584) at 12", "Insert ImportDeclaration(29) into CompilationUnit(584) at 14", "Insert QualifiedName: org.apache.hadoop.hbase.client.Delete(16) into ImportDeclaration(17) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.client.Put(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutationProto(22) into ImportDeclaration(23) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.protobuf.generated.ClientProtos.MutationProto.MutationType(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.regionserver.wal.WALEdit(28) into ImportDeclaration(29) at 0", "Insert MethodDeclaration(218) into TypeDeclaration: class(583) at 13", "Insert MethodDeclaration(508) into TypeDeclaration: class(583) at 19", "Insert MethodDeclaration(582) into TypeDeclaration: class(583) at 22", "Insert Javadoc(203) into MethodDeclaration(218) at 0", "Move MarkerAnnotation(481) into MethodDeclaration(218) at 1", "Insert Modifier: public(206) into MethodDeclaration(218) at 2", "Insert PrimitiveType: boolean(207) into MethodDeclaration(218) at 3", "Insert SimpleName: matchingRow(208) into MethodDeclaration(218) at 4", "Insert SingleVariableDeclaration(214) into MethodDeclaration(218) at 5", "Insert Block(217) into MethodDeclaration(218) at 6", "Move Javadoc(476) into MethodDeclaration(508) at 0", "Move SingleMemberAnnotation(479) into MethodDeclaration(508) at 1", "Move Modifier: public(379) into MethodDeclaration(508) at 2", "Move PrimitiveType: void(380) into MethodDeclaration(508) at 3", "Update SimpleName: write(381) to readFields", "Move SimpleName: write(381) into MethodDeclaration(508) at 4", "Move SingleVariableDeclaration(488) into MethodDeclaration(508) at 5", "Move SimpleType: IOException(490) into MethodDeclaration(508) at 6", "Insert Block(507) into MethodDeclaration(508) at 7", "Insert Modifier: protected(529) into MethodDeclaration(582) at 0", "Insert SimpleType: MutationProto(531) into MethodDeclaration(582) at 1", "Insert SimpleName: toMutationProto(532) into MethodDeclaration(582) at 2", "Insert SingleVariableDeclaration(536) into MethodDeclaration(582) at 3", "Move SimpleType: IOException(387) into MethodDeclaration(582) at 4", "Insert Block(581) into MethodDeclaration(582) at 5", "Insert TagElement(202) into Javadoc(203) at 0", "Insert Modifier: final(209) into SingleVariableDeclaration(214) at 0", "Insert ArrayType: byte[](212) into SingleVariableDeclaration(214) at 1", "Insert SimpleName: row(213) into SingleVariableDeclaration(214) at 2", "Insert ReturnStatement(216) into Block(217) at 0", "Insert VariableDeclarationStatement(416) into Block(425) at 1", "Move ExpressionStatement(502) into Block(507) at 0", "Insert VariableDeclarationStatement(479) into Block(507) at 1", "Insert VariableDeclarationStatement(488) into Block(507) at 2", "Move ExpressionStatement(533) into Block(507) at 3", "Move ExpressionStatement(549) into Block(507) at 4", "Insert SimpleName: MutationProto(530) into SimpleType: MutationProto(531) at 0", "Move SimpleType: Mutation(521) into SingleVariableDeclaration(536) at 0", "Insert SimpleName: mutation(535) into SingleVariableDeclaration(536) at 1", "Insert VariableDeclarationStatement(544) into Block(581) at 0", "Insert IfStatement(578) into Block(581) at 1", "Insert ReturnStatement(580) into Block(581) at 2", "Insert TextElement: Not a real KeyValue(201) into TagElement(202) at 0", "Insert PrimitiveType: byte(210) into ArrayType: byte[](212) at 0", "Insert Dimension(211) into ArrayType: byte[](212) at 1", "Insert BooleanLiteral: false(215) into ReturnStatement(216) at 0", "Move CatchClause(360) into TryStatement(353) at 1", "Insert SimpleType: MutationProto(408) into VariableDeclarationStatement(416) at 0", "Insert VariableDeclarationFragment(415) into VariableDeclarationStatement(416) at 1", "Insert ArrayType: byte[](472) into VariableDeclarationStatement(479) at 0", "Insert VariableDeclarationFragment(478) into VariableDeclarationStatement(479) at 1", "Insert SimpleType: MutationProto(481) into VariableDeclarationStatement(488) at 0", "Insert VariableDeclarationFragment(487) into VariableDeclarationStatement(488) at 1", "Insert SimpleType: MutationProto(540) into VariableDeclarationStatement(544) at 0", "Insert VariableDeclarationFragment(543) into VariableDeclarationStatement(544) at 1", "Insert InstanceofExpression(548) into IfStatement(578) at 0", "Insert Block(557) into IfStatement(578) at 1", "Insert IfStatement(577) into IfStatement(578) at 2", "Insert SimpleName: m(579) into ReturnStatement(580) at 0", "Update QualifiedName: HLog.METAFAMILY(186) to WALEdit.METAFAMILY", "Insert VariableDeclarationStatement(335) into Block(340) at 0", "Insert SimpleName: MutationProto(407) into SimpleType: MutationProto(408) at 0", "Insert SimpleName: m(409) into VariableDeclarationFragment(415) at 0", "Move MethodInvocation(454) into VariableDeclarationFragment(415) at 1", "Move FieldAccess(451) into MethodInvocation(414) at 2", "Update SimpleName: out(438) to Bytes", "Update SimpleName: writeUTF(439) to writeByteArray", "Insert SimpleName: out(419) into MethodInvocation(423) at 2", "Move MethodInvocation(444) into MethodInvocation(423) at 3", "Insert PrimitiveType: byte(470) into ArrayType: byte[](472) at 0", "Insert Dimension(471) into ArrayType: byte[](472) at 1", "Insert SimpleName: mutationData(473) into VariableDeclarationFragment(478) at 0", "Insert MethodInvocation(477) into VariableDeclarationFragment(478) at 1", "Update SimpleName: Mutation(505) to MutationProto", "Move SimpleName: Mutation(505) into SimpleType: MutationProto(481) at 0", "Update SimpleName: clazz(509) to mProto", "Move SimpleName: clazz(509) into VariableDeclarationFragment(487) at 0", "Insert MethodInvocation(486) into VariableDeclarationFragment(487) at 1", "Update SimpleName: ClassNotFoundException(551) to MutationProto", "Move SimpleName: ClassNotFoundException(551) into SimpleType: MutationProto(540) at 0", "Insert SimpleName: m(541) into VariableDeclarationFragment(543) at 0", "Insert NullLiteral(542) into VariableDeclarationFragment(543) at 1", "Insert SimpleName: mutation(545) into InstanceofExpression(548) at 0", "Insert SimpleType: Put(547) into InstanceofExpression(548) at 1", "Insert ExpressionStatement(556) into Block(557) at 0", "Insert InstanceofExpression(561) into IfStatement(577) at 0", "Insert Block(570) into IfStatement(577) at 1", "Move Block(571) into IfStatement(577) at 2", "Update SimpleName: HLog(164) to WALEdit", "Insert SimpleType: MutationProto(327) into VariableDeclarationStatement(335) at 0", "Insert VariableDeclarationFragment(334) into VariableDeclarationStatement(335) at 1", "Update SimpleName: write(452) to toMutationProto", "Insert SimpleName: m(420) into MethodInvocation(422) at 0", "Update SimpleName: getClass(443) to toByteArray", "Update SimpleName: KeyValueCodec(388) to Bytes", "Move SimpleName: KeyValueCodec(388) into MethodInvocation(477) at 0", "Update SimpleName: write(389) to readByteArray", "Move SimpleName: write(389) into MethodInvocation(477) at 1", "Update SimpleName: out(390) to in", "Move SimpleName: out(390) into MethodInvocation(477) at 2", "Update SimpleName: Class(513) to MutationProto", "Move SimpleName: Class(513) into MethodInvocation(486) at 0", "Update SimpleName: forName(514) to parseFrom", "Move SimpleName: forName(514) into MethodInvocation(486) at 1", "Update SimpleName: in(515) to mutationData", "Move SimpleName: in(515) into MethodInvocation(486) at 2", "Insert QualifiedName: org.apache.hadoop.hbase.protobuf.ProtobufUtil(492) into MethodInvocation(495) at 0", "Update SimpleName: clazz(529) to toMutation", "Update SimpleName: newInstance(530) to mProto", "Update SimpleName: IOException(555) to Put", "Move SimpleName: IOException(555) into SimpleType: Put(547) at 0", "Insert Assignment: =(555) into ExpressionStatement(556) at 0", "Insert SimpleName: mutation(558) into InstanceofExpression(561) at 0", "Insert SimpleType: Delete(560) into InstanceofExpression(561) at 1", "Insert ExpressionStatement(569) into Block(570) at 0", "Update SimpleName: ByteArrayOutputStream(305) to MutationProto", "Move SimpleName: ByteArrayOutputStream(305) into SimpleType: MutationProto(327) at 0", "Insert SimpleName: m(328) into VariableDeclarationFragment(334) at 0", "Insert MethodInvocation(333) into VariableDeclarationFragment(334) at 1", "Update SimpleName: bos(324) to m", "Insert SimpleName: m(549) into Assignment: =(555) at 0", "Insert MethodInvocation(554) into Assignment: =(555) at 1", "Insert SimpleName: Delete(559) into SimpleType: Delete(560) at 0", "Insert Assignment: =(568) into ExpressionStatement(569) at 0", "Update SimpleName: bos(320) to toMutationProto", "Move SimpleName: bos(320) into MethodInvocation(333) at 0", "Move FieldAccess(312) into MethodInvocation(333) at 1", "Insert QualifiedName: org.apache.hadoop.hbase.protobuf.ProtobufUtil(550) into MethodInvocation(554) at 0", "Insert SimpleName: toMutation(551) into MethodInvocation(554) at 1", "Insert QualifiedName: MutationType.PUT(552) into MethodInvocation(554) at 2", "Insert SimpleName: mutation(553) into MethodInvocation(554) at 3", "Insert SimpleName: m(562) into Assignment: =(568) at 0", "Insert MethodInvocation(567) into Assignment: =(568) at 1", "Insert StringLiteral: \"Put/Delete mutations only supported\"(573) into ClassInstanceCreation(574) at 1", "Insert QualifiedName: org.apache.hadoop.hbase.protobuf.ProtobufUtil(563) into MethodInvocation(567) at 0", "Insert SimpleName: toMutation(564) into MethodInvocation(567) at 1", "Insert QualifiedName: MutationType.DELETE(565) into MethodInvocation(567) at 2", "Insert SimpleName: mutation(566) into MethodInvocation(567) at 3", "Delete SimpleName: ByteArrayOutputStream(298)", "Delete SimpleType: ByteArrayOutputStream(299)", "Delete SimpleName: bos(300)", "Delete NullLiteral(301)", "Delete VariableDeclarationFragment(302)", "Delete VariableDeclarationStatement(303)", "Delete SimpleName: bos(304)", "Delete SimpleType: ByteArrayOutputStream(306)", "Delete ClassInstanceCreation(307)", "Delete Assignment: =(308)", "Delete ExpressionStatement(309)", "Delete SimpleName: write(313)", "Delete SimpleName: DataOutputStream(314)", "Delete SimpleType: DataOutputStream(315)", "Delete SimpleName: bos(316)", "Delete ClassInstanceCreation(317)", "Delete MethodInvocation(318)", "Delete ExpressionStatement(319)", "Delete SimpleName: flush(321)", "Delete MethodInvocation(322)", "Delete ExpressionStatement(323)", "Delete SimpleName: IOException(329)", "Delete SimpleType: IOException(330)", "Delete SimpleName: e(331)", "Delete SingleVariableDeclaration(332)", "Delete SimpleName: IllegalArgumentException(333)", "Delete SimpleType: IllegalArgumentException(334)", "Delete StringLiteral: \"Failed to get bytes for mutation!\"(335)", "Delete SimpleName: e(336)", "Delete ClassInstanceCreation(337)", "Delete ThrowStatement(338)", "Delete Block(339)", "Delete CatchClause(340)", "Delete SimpleName: bos(341)", "Delete NullLiteral(342)", "Delete InfixExpression: !=(343)", "Delete SimpleName: bos(344)", "Delete SimpleName: close(345)", "Delete MethodInvocation(346)", "Delete ExpressionStatement(347)", "Delete Block(348)", "Delete TryStatement(361)", "Delete Block(362)", "Delete IfStatement(363)", "Delete Block(364)", "Delete SimpleName: Override(377)", "Delete MarkerAnnotation(378)", "Delete SimpleName: DataOutput(382)", "Delete SimpleType: DataOutput(383)", "Delete SimpleName: out(384)", "Delete SingleVariableDeclaration(385)", "Delete ThisExpression(391)", "Delete MethodInvocation(392)", "Delete ExpressionStatement(393)", "Delete Block(394)", "Delete MethodDeclaration(395)", "Delete SimpleName: out(453)", "Delete ThisExpression(440)", "Delete SimpleName: mutation(441)", "Delete FieldAccess(442)", "Delete SimpleName: getName(445)", "Delete MethodInvocation(446)", "Delete ExpressionStatement(455)", "Delete Modifier: public(482)", "Delete PrimitiveType: void(483)", "Delete SimpleName: readFields(484)", "Delete SimpleName: Class(503)", "Delete SimpleType: Class(504)", "Delete SimpleType: Mutation(506)", "Delete WildcardType: ? extends Mutation(507)", "Delete ParameterizedType: Class<? extends Mutation>(508)", "Delete VariableDeclarationFragment(510)", "Delete VariableDeclarationStatement(511)", "Delete SimpleName: clazz(512)", "Delete SimpleName: readUTF(516)", "Delete MethodInvocation(517)", "Delete MethodInvocation(518)", "Delete SimpleName: asSubclass(519)", "Delete TypeLiteral(522)", "Delete MethodInvocation(523)", "Delete Assignment: =(524)", "Delete ExpressionStatement(525)", "Delete ThisExpression(534)", "Delete SimpleName: mutation(535)", "Delete FieldAccess(536)", "Delete SimpleName: readFields(537)", "Delete SimpleName: in(538)", "Delete MethodInvocation(539)", "Delete ExpressionStatement(540)", "Delete Block(550)", "Delete SimpleType: ClassNotFoundException(552)", "Delete SimpleName: e(553)", "Delete SingleVariableDeclaration(554)", "Delete SimpleType: IOException(556)", "Delete SimpleName: e(557)", "Delete ClassInstanceCreation(558)", "Delete ThrowStatement(559)", "Delete Block(560)", "Delete CatchClause(561)", "Delete SimpleName: InstantiationException(562)", "Delete SimpleType: InstantiationException(563)", "Delete SimpleName: e(564)", "Delete SingleVariableDeclaration(565)", "Delete CatchClause(572)", "Delete SimpleName: IllegalAccessException(573)", "Delete SimpleType: IllegalAccessException(574)", "Delete SimpleName: e(575)", "Delete SingleVariableDeclaration(576)", "Delete SimpleName: IOException(577)", "Delete SimpleType: IOException(578)", "Delete SimpleName: e(579)", "Delete ClassInstanceCreation(580)", "Delete ThrowStatement(581)", "Delete Block(582)", "Delete CatchClause(583)", "Delete TryStatement(584)", "Delete Block(585)", "Delete MethodDeclaration(586)", "Delete SimpleName: e(568)"]}}, {"KeyValueCodec_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS IfStatement to Block at 1", "INS Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 2", "MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: KeyValue to MethodInvocation at 0", "INS ReturnStatement to Block at 0"]}, {"root": "UPDATE from KeyValue to IndexedKeyValue", "operations": ["UPD SimpleType: KeyValue from KeyValue to IndexedKeyValue", "UPD SimpleName: KeyValue from KeyValue to IndexedKeyValue"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from readFields to create", "operations": ["UPD SimpleName: readFields from readFields to create"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: length to MethodInvocation at 2", "MOV SimpleName: in to MethodInvocation at 3", "MOV SimpleName: readFields to MethodInvocation at 1"]}, {"root": "UPDATE from kv to KeyValue", "operations": ["UPD SimpleName: kv from kv to KeyValue"]}, {"root": "INS SimpleName: kv to MethodInvocation at 2", "operations": ["INS SimpleName: kv to MethodInvocation at 2"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: KeyValue", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL SimpleType: KeyValue", "DEL SimpleName: kv"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: kv"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: kv", "DEL IfStatement", "DEL Assignment: =", "DEL Block", "DEL ExpressionStatement"]}]}}, {"KeyValueCodec_diff": {"operations": ["Insert ImportDeclaration(15) into CompilationUnit(304) at 7", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(14) into ImportDeclaration(15) at 0", "Insert IfStatement(221) into Block(222) at 1", "Move InfixExpression: ==(200) into IfStatement(221) at 0", "Insert Block(213) into IfStatement(221) at 1", "Move Block(225) into IfStatement(221) at 2", "Move VariableDeclarationStatement(197) into Block(213) at 0", "Move ExpressionStatement(211) into Block(213) at 1", "Move ReturnStatement(228) into Block(213) at 2", "Insert ReturnStatement(219) into Block(220) at 0", "Update SimpleType: KeyValue(194) to IndexedKeyValue", "Insert MethodInvocation(218) into ReturnStatement(219) at 0", "Update SimpleName: KeyValue(193) to IndexedKeyValue", "Move ClassInstanceCreation(204) into VariableDeclarationFragment(204) at 1", "Insert SimpleName: KeyValue(214) into MethodInvocation(218) at 0", "Update SimpleName: readFields(220) to create", "Move SimpleName: readFields(220) into MethodInvocation(218) at 1", "Move SimpleName: length(221) into MethodInvocation(218) at 2", "Move SimpleName: in(222) into MethodInvocation(218) at 3", "Update SimpleName: kv(300) to KeyValue", "Insert SimpleName: kv(295) into MethodInvocation(297) at 2", "Delete SimpleName: kv(213)", "Delete SimpleName: KeyValue(214)", "Delete SimpleType: KeyValue(215)", "Delete ClassInstanceCreation(216)", "Delete Assignment: =(217)", "Delete ExpressionStatement(218)", "Delete SimpleName: kv(219)", "Delete MethodInvocation(223)", "Delete ExpressionStatement(224)", "Delete SimpleName: kv(201)", "Delete Assignment: =(205)", "Delete ExpressionStatement(206)", "Delete Block(212)", "Delete IfStatement(226)"]}}, {"IndexedHLogReader_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: org.apache.hadoop.hbase.TableName to ImportDeclaration at 0"]}, {"root": "UPDATE from Reader to ProtobufLogReader", "operations": ["UPD SimpleType: Reader from Reader to ProtobufLogReader", "UPD SimpleName: Reader from Reader to ProtobufLogReader"]}, {"root": "UPDATE from public to protected", "operations": ["UPD Modifier: public from public to protected"]}, {"root": "UPDATE from init to initAfterCompression", "operations": ["UPD SimpleName: init from init to initAfterCompression"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 4"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: set to MethodInvocation at 1", "INS TypeLiteral to MethodInvocation at 0", "INS QualifiedName: WALCellCodec.WAL_CELL_CODEC_CLASS_KEY to MethodInvocation at 2", "INS SimpleType: IndexedWALEditCodec to TypeLiteral at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 3", "INS ExpressionStatement to Block at 0"]}, {"root": "INS SuperMethodInvocation to ExpressionStatement at 0", "operations": ["INS SuperMethodInvocation to ExpressionStatement at 0", "INS SimpleName: initAfterCompression to SuperMethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: conf to MethodInvocation at 0"]}, {"root": "UPDATE from getStackTrace to getName", "operations": ["UPD SimpleName: getStackTrace from getStackTrace to getName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getStackTrace to MethodInvocation at 1"]}, {"root": "UPDATE from IndexedWALReader to IndexedWALEditCodec", "operations": ["UPD SimpleName: IndexedWALReader from IndexedWALReader to IndexedWALEditCodec"]}, {"root": "MOVE from SimpleType: IndexedWALEditCodec", "operations": ["MOV SimpleName: IndexedWALReader to SimpleType: IndexedWALEditCodec at 0"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL SimpleType: SequenceFileLogReader", "DEL SimpleName: SequenceFileLogReader", "DEL Modifier: private", "DEL SimpleName: delegate", "DEL VariableDeclarationFragment"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL TagElement: @param", "DEL SimpleName: Writable", "DEL Javadoc", "DEL TextElement: the check on the value class, since we have a special value class that doesn't directly match", "DEL SimpleName: key", "DEL SimpleName: p", "DEL MethodInvocation", "DEL Block", "DEL Modifier: private", "DEL ReturnStatement", "DEL Modifier: static", "DEL TagElement: @throws", "DEL SimpleType: FileSystem", "DEL SimpleType: Writable", "DEL SimpleName: IOException", "DEL SimpleName: c", "DEL TextElement: what was specified in the file header", "DEL SimpleName: c", "DEL Block", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL SimpleType: Path", "DEL TagElement", "DEL IfStatement", "DEL SimpleName: p", "DEL SimpleName: IOException", "DEL TextElement: we basically have to reproduce what the SequenceFile.Reader is doing in next(), but without", "DEL SimpleName: p", "DEL SimpleName: IOException", "DEL SimpleType: Configuration", "DEL TagElement: @param", "DEL SimpleName: IndexedWALReader", "DEL SimpleName: next", "DEL SingleVariableDeclaration", "DEL SimpleName: fs", "DEL PrimitiveType: boolean", "DEL Modifier: synchronized", "DEL SimpleName: key", "DEL TagElement: @param", "DEL SimpleType: SequenceFileLogReader.WALReader", "DEL VariableDeclarationStatement", "DEL SimpleName: IndexedWALReader", "DEL PrimitiveType: boolean", "DEL SimpleName: Override", "DEL SimpleName: c", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: fs", "DEL SimpleName: more", "DEL SingleVariableDeclaration", "DEL SimpleName: next", "DEL SuperConstructorInvocation", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleType: Writable", "DEL SimpleName: Configuration", "DEL QualifiedName: SequenceFileLogReader.WALReader", "DEL MethodInvocation", "DEL SimpleName: more", "DEL SimpleType: IOException", "DEL SimpleName: getCurrentValue", "DEL MethodDeclaration", "DEL SimpleName: fs", "DEL MarkerAnnotation", "DEL SimpleName: val", "DEL SimpleType: IOException", "DEL SimpleName: Path", "DEL SimpleName: more", "DEL SimpleName: Writable", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL Modifier: public", "DEL SimpleName: val", "DEL TypeDeclaration: class", "DEL SimpleName: FileSystem"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ThisExpression", "DEL SimpleName: delegate", "DEL ExpressionStatement", "DEL SimpleName: IndexedHLogReader", "DEL FieldAccess", "DEL Modifier: public", "DEL Block", "DEL SimpleName: SequenceFileLogReader", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL MethodDeclaration", "DEL SimpleType: SequenceFileLogReader"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: FileSystem", "DEL SimpleType: FileSystem", "DEL SimpleName: fs", "DEL Modifier: final"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: path", "DEL SimpleType: Path", "DEL SimpleName: Path", "DEL Modifier: final"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: Configuration", "DEL SimpleType: Configuration", "DEL SingleVariableDeclaration", "DEL SimpleName: conf"]}, {"root": "DEL SimpleType: IOException", "operations": ["DEL SimpleType: IOException", "DEL SimpleName: IOException"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: path", "DEL ThisExpression", "DEL SimpleName: delegate", "DEL SimpleName: init", "DEL MethodInvocation", "DEL SimpleName: fs", "DEL FieldAccess", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: close", "DEL FieldAccess", "DEL MethodInvocation", "DEL ThisExpression", "DEL SimpleName: delegate", "DEL SimpleName: reader", "DEL ExpressionStatement", "DEL FieldAccess"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: delegate", "DEL Assignment: =", "DEL FieldAccess", "DEL FieldAccess", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleType: IndexedWALReader", "DEL SimpleName: fs", "DEL SimpleName: conf", "DEL ClassInstanceCreation", "DEL SimpleName: path", "DEL SimpleName: reader"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: Exception", "DEL ClassInstanceCreation", "DEL SimpleType: Exception", "DEL VariableDeclarationFragment", "DEL SimpleName: e", "DEL SimpleName: Exception", "DEL SimpleName: Exception", "DEL VariableDeclarationStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: e", "DEL StringLiteral: \"Instantiated indexed log reader.\"", "DEL SimpleName: LOG", "DEL SimpleName: info", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: Arrays", "DEL MethodInvocation", "DEL SimpleName: toString"]}, {"root": "DEL MethodInvocation", "operations": ["DEL InfixExpression: +", "DEL StringLiteral: \"Got conf: \"", "DEL SimpleName: LOG", "DEL SimpleName: info", "DEL MethodInvocation", "DEL SimpleName: conf"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: delegate", "DEL MethodDeclaration", "DEL FieldAccess", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL MarkerAnnotation", "DEL SimpleName: close", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL SimpleName: close", "DEL Modifier: public", "DEL ThisExpression"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL SimpleName: IOException", "DEL MarkerAnnotation", "DEL MethodInvocation", "DEL SimpleName: next", "DEL ReturnStatement", "DEL SimpleName: Override", "DEL Block", "DEL SimpleName: Entry", "DEL MethodDeclaration", "DEL SimpleType: IOException", "DEL SimpleName: next", "DEL NullLiteral", "DEL SimpleType: Entry"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: getKey", "DEL SimpleName: iae", "DEL Block", "DEL ExpressionStatement", "DEL SimpleType: IOException", "DEL SimpleName: Entry", "DEL ThrowStatement", "DEL QualifiedName: delegate.edit", "DEL SimpleName: IllegalAccessException", "DEL SimpleName: reuse", "DEL ClassInstanceCreation", "DEL Block", "DEL ExpressionStatement", "DEL MarkerAnnotation", "DEL ClassInstanceCreation", "DEL SimpleName: next", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: WALEdit", "DEL QualifiedName: HLog.Entry", "DEL ThrowStatement", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: edit", "DEL SimpleName: IOException", "DEL SingleVariableDeclaration", "DEL InfixExpression: ==", "DEL SimpleType: Entry", "DEL SimpleName: e", "DEL VariableDeclarationFragment", "DEL SimpleName: newKey", "DEL IfStatement", "DEL ThrowStatement", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL NullLiteral", "DEL SimpleName: key", "DEL VariableDeclarationFragment", "DEL SimpleType: IndexedWALEdit", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleType: IllegalAccessException", "DEL TryStatement", "DEL StringLiteral: \"are only support for HBase 0.94.9+ and with the IndexedWALEditCodec!\"", "DEL SimpleName: ioe", "DEL QualifiedName: delegate.entryStart", "DEL SimpleName: IOException", "DEL SimpleName: ie", "DEL SimpleName: newInstance", "DEL SimpleType: IndexedWALEdit", "DEL QualifiedName: delegate.compressionContext", "DEL InfixExpression: !=", "DEL SimpleName: HLogKey", "DEL Block", "DEL ClassInstanceCreation", "DEL QualifiedName: delegate.emptyCompressionContext", "DEL SimpleName: ie", "DEL IfStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: IndexedWALEdit", "DEL ExpressionStatement", "DEL Block", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: HLog", "DEL SimpleName: nextPairValid", "DEL Block", "DEL SimpleName: next", "DEL VariableDeclarationStatement", "DEL SimpleType: HLog.Entry", "DEL BooleanLiteral: false", "DEL StringLiteral: \"Reading compression isn't supported with the IndexedHLogReader! Compresed WALEdits \"", "DEL ClassInstanceCreation", "DEL Block", "DEL NullLiteral", "DEL MethodDeclaration", "DEL QualifiedName: delegate.compressionContext", "DEL Block", "DEL SimpleType: WALEdit", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL InfixExpression: &&", "DEL CatchClause", "DEL SimpleType: IOException", "DEL InfixExpression: !=", "DEL SimpleName: ioe", "DEL SimpleName: iae", "DEL SimpleName: nextPairValid", "DEL SimpleName: UnsupportedOperationException", "DEL Assignment: =", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL SimpleType: Entry", "DEL SimpleName: nextPairValid", "DEL IfStatement", "DEL SimpleName: e", "DEL NullLiteral", "DEL SimpleType: IOException", "DEL SimpleName: WALEdit", "DEL SimpleType: WALEdit", "DEL QualifiedName: delegate.keyClass", "DEL SimpleName: Entry", "DEL SimpleName: IndexedWALEdit", "DEL SimpleName: key", "DEL MethodInvocation", "DEL SimpleType: InstantiationException", "DEL PrimitiveType: boolean", "DEL NullLiteral", "DEL MethodInvocation", "DEL SimpleName: delegate", "DEL SimpleName: e", "DEL SimpleType: HLog.Entry", "DEL Modifier: public", "DEL PostfixExpression: ++", "DEL SimpleType: HLogKey", "DEL InfixExpression: ==", "DEL Block", "DEL Assignment: =", "DEL NullLiteral", "DEL CatchClause", "DEL SimpleName: IOException", "DEL VariableDeclarationFragment", "DEL SimpleType: IOException", "DEL SimpleName: getEdit", "DEL Assignment: =", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL SimpleName: e", "DEL SimpleName: val", "DEL SimpleName: val", "DEL ExpressionStatement", "DEL SimpleName: getPosition", "DEL SimpleName: e", "DEL SimpleName: key", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL QualifiedName: delegate.emptyCompressionContext", "DEL CatchClause", "DEL QualifiedName: delegate.keyClass", "DEL QualifiedName: HLog.Entry", "DEL SimpleName: InstantiationException", "DEL SimpleName: IOException", "DEL InfixExpression: +", "DEL SingleVariableDeclaration", "DEL QualifiedName: delegate.reader", "DEL ThrowStatement", "DEL BooleanLiteral: false", "DEL TryStatement", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL Block", "DEL ConditionalExpression", "DEL QualifiedName: delegate.reader", "DEL SimpleName: key", "DEL SimpleName: edit", "DEL SimpleName: reuse", "DEL SimpleName: e", "DEL SimpleType: UnsupportedOperationException", "DEL SimpleName: addFileInfoToException", "DEL QualifiedName: delegate.conf"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: delegate", "DEL ThisExpression", "DEL SimpleName: seek", "DEL SingleVariableDeclaration", "DEL SimpleType: IOException", "DEL PrimitiveType: void", "DEL SimpleName: Override", "DEL FieldAccess", "DEL SimpleName: seek", "DEL Block", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL PrimitiveType: long", "DEL SimpleName: pos", "DEL SimpleName: IOException", "DEL Modifier: public", "DEL MarkerAnnotation", "DEL MethodDeclaration", "DEL SimpleName: pos"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL PrimitiveType: long", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: getPosition", "DEL SimpleName: IOException", "DEL ThisExpression", "DEL ReturnStatement", "DEL SimpleName: delegate", "DEL FieldAccess", "DEL Modifier: public", "DEL SimpleName: Override", "DEL SimpleName: getPosition", "DEL MethodDeclaration", "DEL SimpleType: IOException", "DEL MarkerAnnotation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ExpressionStatement", "DEL SimpleType: IOException", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: Override", "DEL PrimitiveType: void", "DEL SimpleName: reset", "DEL FieldAccess", "DEL SimpleName: IOException", "DEL SimpleName: delegate", "DEL Modifier: public", "DEL ThisExpression", "DEL SimpleName: reset", "DEL MethodInvocation", "DEL MarkerAnnotation"]}]}}, {"IndexedHLogReader_diff": {"operations": ["Insert ImportDeclaration(17) into CompilationUnit(88) at 8", "Insert QualifiedName: org.apache.hadoop.hbase.TableName(16) into ImportDeclaration(17) at 0", "Update SimpleType: Reader(48) to ProtobufLogReader", "Update SimpleName: Reader(47) to ProtobufLogReader", "Update Modifier: public(158) to protected", "Update SimpleName: init(160) to initAfterCompression", "Move SimpleType: IOException(242) into MethodDeclaration(86) at 4", "Insert ExpressionStatement(81) into Block(85) at 0", "Insert MethodInvocation(80) into ExpressionStatement(81) at 0", "Insert SuperMethodInvocation(83) into ExpressionStatement(84) at 0", "Move SimpleName: conf(183) into MethodInvocation(80) at 0", "Insert SimpleName: set(73) into MethodInvocation(80) at 1", "Insert QualifiedName: WALCellCodec.WAL_CELL_CODEC_CLASS_KEY(74) into MethodInvocation(80) at 2", "Insert MethodInvocation(79) into MethodInvocation(80) at 3", "Insert SimpleName: initAfterCompression(82) into SuperMethodInvocation(83) at 0", "Insert TypeLiteral(77) into MethodInvocation(79) at 0", "Update SimpleName: getStackTrace(221) to getName", "Move SimpleName: getStackTrace(221) into MethodInvocation(79) at 1", "Insert SimpleType: IndexedWALEditCodec(76) into TypeLiteral(77) at 0", "Update SimpleName: IndexedWALReader(199) to IndexedWALEditCodec", "Move SimpleName: IndexedWALReader(199) into SimpleType: IndexedWALEditCodec(76) at 0", "Delete Modifier: private(63)", "Delete SimpleName: SequenceFileLogReader(64)", "Delete SimpleType: SequenceFileLogReader(65)", "Delete SimpleName: delegate(66)", "Delete VariableDeclarationFragment(67)", "Delete FieldDeclaration(68)", "Delete Modifier: private(69)", "Delete Modifier: static(70)", "Delete SimpleName: IndexedWALReader(71)", "Delete QualifiedName: SequenceFileLogReader.WALReader(72)", "Delete SimpleType: SequenceFileLogReader.WALReader(73)", "Delete SimpleName: fs(74)", "Delete TagElement: @param(75)", "Delete SimpleName: p(76)", "Delete TagElement: @param(77)", "Delete SimpleName: c(78)", "Delete TagElement: @param(79)", "Delete SimpleName: IOException(80)", "Delete TagElement: @throws(81)", "Delete Javadoc(82)", "Delete SimpleName: IndexedWALReader(83)", "Delete SimpleName: FileSystem(84)", "Delete SimpleType: FileSystem(85)", "Delete SimpleName: fs(86)", "Delete SingleVariableDeclaration(87)", "Delete SimpleName: Path(88)", "Delete SimpleType: Path(89)", "Delete SimpleName: p(90)", "Delete SingleVariableDeclaration(91)", "Delete SimpleName: Configuration(92)", "Delete SimpleType: Configuration(93)", "Delete SimpleName: c(94)", "Delete SingleVariableDeclaration(95)", "Delete SimpleName: IOException(96)", "Delete SimpleType: IOException(97)", "Delete SimpleName: fs(98)", "Delete SimpleName: p(99)", "Delete SimpleName: c(100)", "Delete SuperConstructorInvocation(101)", "Delete Block(102)", "Delete MethodDeclaration(103)", "Delete TextElement: we basically have to reproduce what the SequenceFile.Reader is doing in next(), but without(104)", "Delete TextElement: the check on the value class, since we have a special value class that doesn't directly match(105)", "Delete TextElement: what was specified in the file header(106)", "Delete TagElement(107)", "Delete Javadoc(108)", "Delete SimpleName: Override(109)", "Delete MarkerAnnotation(110)", "Delete Modifier: public(111)", "Delete Modifier: synchronized(112)", "Delete PrimitiveType: boolean(113)", "Delete SimpleName: next(114)", "Delete SimpleName: Writable(115)", "Delete SimpleType: Writable(116)", "Delete SimpleName: key(117)", "Delete SingleVariableDeclaration(118)", "Delete SimpleName: Writable(119)", "Delete SimpleType: Writable(120)", "Delete SimpleName: val(121)", "Delete SingleVariableDeclaration(122)", "Delete SimpleName: IOException(123)", "Delete SimpleType: IOException(124)", "Delete PrimitiveType: boolean(125)", "Delete SimpleName: more(126)", "Delete SimpleName: next(127)", "Delete SimpleName: key(128)", "Delete MethodInvocation(129)", "Delete VariableDeclarationFragment(130)", "Delete VariableDeclarationStatement(131)", "Delete SimpleName: more(132)", "Delete SimpleName: getCurrentValue(133)", "Delete SimpleName: val(134)", "Delete MethodInvocation(135)", "Delete ExpressionStatement(136)", "Delete Block(137)", "Delete IfStatement(138)", "Delete SimpleName: more(139)", "Delete ReturnStatement(140)", "Delete Block(141)", "Delete MethodDeclaration(142)", "Delete TypeDeclaration: class(143)", "Delete Modifier: public(144)", "Delete SimpleName: IndexedHLogReader(145)", "Delete ThisExpression(146)", "Delete SimpleName: delegate(147)", "Delete FieldAccess(148)", "Delete SimpleName: SequenceFileLogReader(149)", "Delete SimpleType: SequenceFileLogReader(150)", "Delete ClassInstanceCreation(151)", "Delete Assignment: =(152)", "Delete ExpressionStatement(153)", "Delete Block(154)", "Delete MethodDeclaration(155)", "Delete Modifier: final(161)", "Delete SimpleName: FileSystem(162)", "Delete SimpleType: FileSystem(163)", "Delete SimpleName: fs(164)", "Delete SingleVariableDeclaration(165)", "Delete Modifier: final(166)", "Delete SimpleName: Path(167)", "Delete SimpleType: Path(168)", "Delete SimpleName: path(169)", "Delete SingleVariableDeclaration(170)", "Delete SimpleName: Configuration(171)", "Delete SimpleType: Configuration(172)", "Delete SimpleName: conf(173)", "Delete SingleVariableDeclaration(174)", "Delete SimpleName: IOException(175)", "Delete SimpleType: IOException(176)", "Delete ThisExpression(177)", "Delete SimpleName: delegate(178)", "Delete FieldAccess(179)", "Delete SimpleName: init(180)", "Delete SimpleName: fs(181)", "Delete SimpleName: path(182)", "Delete MethodInvocation(184)", "Delete ExpressionStatement(185)", "Delete ThisExpression(186)", "Delete SimpleName: delegate(187)", "Delete FieldAccess(188)", "Delete SimpleName: reader(189)", "Delete FieldAccess(190)", "Delete SimpleName: close(191)", "Delete MethodInvocation(192)", "Delete ExpressionStatement(193)", "Delete ThisExpression(194)", "Delete SimpleName: delegate(195)", "Delete FieldAccess(196)", "Delete SimpleName: reader(197)", "Delete FieldAccess(198)", "Delete SimpleType: IndexedWALReader(200)", "Delete SimpleName: fs(201)", "Delete SimpleName: path(202)", "Delete SimpleName: conf(203)", "Delete ClassInstanceCreation(204)", "Delete Assignment: =(205)", "Delete ExpressionStatement(206)", "Delete SimpleName: Exception(207)", "Delete SimpleType: Exception(208)", "Delete SimpleName: e(209)", "Delete SimpleName: Exception(210)", "Delete SimpleType: Exception(211)", "Delete ClassInstanceCreation(212)", "Delete VariableDeclarationFragment(213)", "Delete VariableDeclarationStatement(214)", "Delete SimpleName: LOG(215)", "Delete SimpleName: info(216)", "Delete StringLiteral: \"Instantiated indexed log reader.\"(217)", "Delete SimpleName: Arrays(218)", "Delete SimpleName: toString(219)", "Delete SimpleName: e(220)", "Delete MethodInvocation(222)", "Delete MethodInvocation(223)", "Delete InfixExpression: +(224)", "Delete MethodInvocation(225)", "Delete ExpressionStatement(226)", "Delete SimpleName: LOG(227)", "Delete SimpleName: info(228)", "Delete StringLiteral: \"Got conf: \"(229)", "Delete SimpleName: conf(230)", "Delete InfixExpression: +(231)", "Delete MethodInvocation(232)", "Delete SimpleName: Override(236)", "Delete MarkerAnnotation(237)", "Delete Modifier: public(238)", "Delete PrimitiveType: void(239)", "Delete SimpleName: close(240)", "Delete ThisExpression(243)", "Delete SimpleName: delegate(244)", "Delete FieldAccess(245)", "Delete SimpleName: close(246)", "Delete MethodInvocation(247)", "Delete ExpressionStatement(248)", "Delete Block(249)", "Delete MethodDeclaration(250)", "Delete SimpleName: Override(251)", "Delete MarkerAnnotation(252)", "Delete Modifier: public(253)", "Delete SimpleName: Entry(254)", "Delete SimpleType: Entry(255)", "Delete SimpleName: next(256)", "Delete SimpleName: IOException(257)", "Delete SimpleType: IOException(258)", "Delete SimpleName: next(259)", "Delete NullLiteral(260)", "Delete MethodInvocation(261)", "Delete ReturnStatement(262)", "Delete Block(263)", "Delete MethodDeclaration(264)", "Delete SimpleName: Override(265)", "Delete MarkerAnnotation(266)", "Delete Modifier: public(267)", "Delete SimpleName: Entry(268)", "Delete SimpleType: Entry(269)", "Delete SimpleName: next(270)", "Delete SimpleName: Entry(271)", "Delete SimpleType: Entry(272)", "Delete SimpleName: reuse(273)", "Delete SingleVariableDeclaration(274)", "Delete SimpleName: IOException(275)", "Delete SimpleType: IOException(276)", "Delete QualifiedName: delegate.entryStart(277)", "Delete QualifiedName: delegate.reader(278)", "Delete SimpleName: getPosition(279)", "Delete MethodInvocation(280)", "Delete Assignment: =(281)", "Delete ExpressionStatement(282)", "Delete QualifiedName: HLog.Entry(283)", "Delete SimpleType: HLog.Entry(284)", "Delete SimpleName: e(285)", "Delete SimpleName: reuse(286)", "Delete VariableDeclarationFragment(287)", "Delete VariableDeclarationStatement(288)", "Delete SimpleName: e(289)", "Delete NullLiteral(290)", "Delete InfixExpression: ==(291)", "Delete SimpleName: HLogKey(292)", "Delete SimpleType: HLogKey(293)", "Delete SimpleName: key(294)", "Delete VariableDeclarationFragment(295)", "Delete VariableDeclarationStatement(296)", "Delete QualifiedName: delegate.keyClass(297)", "Delete NullLiteral(298)", "Delete InfixExpression: ==(299)", "Delete SimpleName: key(300)", "Delete SimpleName: HLog(301)", "Delete SimpleName: newKey(302)", "Delete QualifiedName: delegate.conf(303)", "Delete MethodInvocation(304)", "Delete Assignment: =(305)", "Delete ExpressionStatement(306)", "Delete Block(307)", "Delete SimpleName: key(308)", "Delete QualifiedName: delegate.keyClass(309)", "Delete SimpleName: newInstance(310)", "Delete MethodInvocation(311)", "Delete Assignment: =(312)", "Delete ExpressionStatement(313)", "Delete Block(314)", "Delete SimpleName: InstantiationException(315)", "Delete SimpleType: InstantiationException(316)", "Delete SimpleName: ie(317)", "Delete SingleVariableDeclaration(318)", "Delete SimpleName: IOException(319)", "Delete SimpleType: IOException(320)", "Delete SimpleName: ie(321)", "Delete ClassInstanceCreation(322)", "Delete ThrowStatement(323)", "Delete Block(324)", "Delete CatchClause(325)", "Delete SimpleName: IllegalAccessException(326)", "Delete SimpleType: IllegalAccessException(327)", "Delete SimpleName: iae(328)", "Delete SingleVariableDeclaration(329)", "Delete SimpleName: IOException(330)", "Delete SimpleType: IOException(331)", "Delete SimpleName: iae(332)", "Delete ClassInstanceCreation(333)", "Delete ThrowStatement(334)", "Delete Block(335)", "Delete CatchClause(336)", "Delete TryStatement(337)", "Delete Block(338)", "Delete IfStatement(339)", "Delete SimpleName: WALEdit(340)", "Delete SimpleType: WALEdit(341)", "Delete SimpleName: val(342)", "Delete SimpleName: WALEdit(343)", "Delete SimpleType: WALEdit(344)", "Delete ClassInstanceCreation(345)", "Delete VariableDeclarationFragment(346)", "Delete VariableDeclarationStatement(347)", "Delete SimpleName: e(348)", "Delete QualifiedName: HLog.Entry(349)", "Delete SimpleType: HLog.Entry(350)", "Delete SimpleName: key(351)", "Delete SimpleName: val(352)", "Delete ClassInstanceCreation(353)", "Delete Assignment: =(354)", "Delete ExpressionStatement(355)", "Delete Block(356)", "Delete IfStatement(357)", "Delete PrimitiveType: boolean(358)", "Delete SimpleName: nextPairValid(359)", "Delete BooleanLiteral: false(360)", "Delete VariableDeclarationFragment(361)", "Delete VariableDeclarationStatement(362)", "Delete QualifiedName: delegate.compressionContext(363)", "Delete NullLiteral(364)", "Delete InfixExpression: !=(365)", "Delete SimpleName: UnsupportedOperationException(366)", "Delete SimpleType: UnsupportedOperationException(367)", "Delete StringLiteral: \"Reading compression isn't supported with the IndexedHLogReader! Compresed WALEdits \"(368)", "Delete StringLiteral: \"are only support for HBase 0.94.9+ and with the IndexedWALEditCodec!\"(369)", "Delete InfixExpression: +(370)", "Delete ClassInstanceCreation(371)", "Delete ThrowStatement(372)", "Delete Block(373)", "Delete IfStatement(374)", "Delete SimpleName: IndexedWALEdit(375)", "Delete SimpleType: IndexedWALEdit(376)", "Delete SimpleName: edit(377)", "Delete SimpleName: IndexedWALEdit(378)", "Delete SimpleType: IndexedWALEdit(379)", "Delete SimpleName: e(380)", "Delete SimpleName: getEdit(381)", "Delete MethodInvocation(382)", "Delete ClassInstanceCreation(383)", "Delete VariableDeclarationFragment(384)", "Delete VariableDeclarationStatement(385)", "Delete SimpleName: nextPairValid(386)", "Delete QualifiedName: delegate.reader(387)", "Delete SimpleName: next(388)", "Delete SimpleName: e(389)", "Delete SimpleName: getKey(390)", "Delete MethodInvocation(391)", "Delete SimpleName: edit(392)", "Delete MethodInvocation(393)", "Delete Assignment: =(394)", "Delete ExpressionStatement(395)", "Delete Block(396)", "Delete SimpleName: IOException(397)", "Delete SimpleType: IOException(398)", "Delete SimpleName: ioe(399)", "Delete SingleVariableDeclaration(400)", "Delete SimpleName: delegate(401)", "Delete SimpleName: addFileInfoToException(402)", "Delete SimpleName: ioe(403)", "Delete MethodInvocation(404)", "Delete ThrowStatement(405)", "Delete Block(406)", "Delete CatchClause(407)", "Delete TryStatement(408)", "Delete QualifiedName: delegate.edit(409)", "Delete PostfixExpression: ++(410)", "Delete ExpressionStatement(411)", "Delete QualifiedName: delegate.compressionContext(412)", "Delete NullLiteral(413)", "Delete InfixExpression: !=(414)", "Delete QualifiedName: delegate.emptyCompressionContext(415)", "Delete InfixExpression: &&(416)", "Delete QualifiedName: delegate.emptyCompressionContext(417)", "Delete BooleanLiteral: false(418)", "Delete Assignment: =(419)", "Delete ExpressionStatement(420)", "Delete Block(421)", "Delete IfStatement(422)", "Delete SimpleName: nextPairValid(423)", "Delete SimpleName: e(424)", "Delete NullLiteral(425)", "Delete ConditionalExpression(426)", "Delete ReturnStatement(427)", "Delete Block(428)", "Delete MethodDeclaration(429)", "Delete SimpleName: Override(430)", "Delete MarkerAnnotation(431)", "Delete Modifier: public(432)", "Delete PrimitiveType: void(433)", "Delete SimpleName: seek(434)", "Delete PrimitiveType: long(435)", "Delete SimpleName: pos(436)", "Delete SingleVariableDeclaration(437)", "Delete SimpleName: IOException(438)", "Delete SimpleType: IOException(439)", "Delete ThisExpression(440)", "Delete SimpleName: delegate(441)", "Delete FieldAccess(442)", "Delete SimpleName: seek(443)", "Delete SimpleName: pos(444)", "Delete MethodInvocation(445)", "Delete ExpressionStatement(446)", "Delete Block(447)", "Delete MethodDeclaration(448)", "Delete SimpleName: Override(449)", "Delete MarkerAnnotation(450)", "Delete Modifier: public(451)", "Delete PrimitiveType: long(452)", "Delete SimpleName: getPosition(453)", "Delete SimpleName: IOException(454)", "Delete SimpleType: IOException(455)", "Delete ThisExpression(456)", "Delete SimpleName: delegate(457)", "Delete FieldAccess(458)", "Delete SimpleName: getPosition(459)", "Delete MethodInvocation(460)", "Delete ReturnStatement(461)", "Delete Block(462)", "Delete MethodDeclaration(463)", "Delete SimpleName: Override(464)", "Delete MarkerAnnotation(465)", "Delete Modifier: public(466)", "Delete PrimitiveType: void(467)", "Delete SimpleName: reset(468)", "Delete SimpleName: IOException(469)", "Delete SimpleType: IOException(470)", "Delete ThisExpression(471)", "Delete SimpleName: delegate(472)", "Delete FieldAccess(473)", "Delete SimpleName: reset(474)", "Delete MethodInvocation(475)", "Delete ExpressionStatement(476)", "Delete Block(477)", "Delete MethodDeclaration(478)"]}}, {"IndexedWALEdit_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL PackageDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.regionserver.wal"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.DataInput", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.DataOutput"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.List"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.NavigableMap", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.TreeMap"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.KeyValue", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.hbase.util.Bytes", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.hadoop.hbase.index.wal.KeyValueCodec"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: KeyValueCodec", "DEL TextElement:  to copy", "DEL SimpleName: VERSION_2", "DEL SingleVariableDeclaration", "DEL SimpleName: delegate", "DEL MethodInvocation", "DEL Modifier: static", "DEL SimpleName: in", "DEL SimpleName: readInt", "DEL SimpleName: delegate", "DEL ParameterizedType: List<KeyValue>", "DEL SimpleName: readKeyValues", "DEL PrefixExpression: -", "DEL VariableDeclarationExpression", "DEL Block", "DEL SimpleType: CompressionContext", "DEL SingleMemberAnnotation", "DEL SimpleName: in", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SimpleName: DataInput", "DEL NullLiteral", "DEL Block", "DEL SimpleName: readByteArray", "DEL SimpleName: delegate", "DEL Block", "DEL SimpleName: scopes", "DEL PrimitiveType: int", "DEL SimpleName: UnsupportedOperationException", "DEL FieldDeclaration", "DEL SimpleName: delegate", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: delegate", "DEL MarkerAnnotation", "DEL PrimitiveType: void", "DEL SimpleName: scopes", "DEL VariableDeclarationStatement", "DEL ThrowStatement", "DEL SimpleName: in", "DEL ExpressionStatement", "DEL SimpleType: DataOutput", "DEL SimpleName: i", "DEL PrimitiveType: void", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: getKeyValues", "DEL SimpleName: CompressionContext", "DEL SimpleType: KeyValue", "DEL StringLiteral: \"deprecation\"", "DEL SimpleName: readFields", "DEL TextElement: Read in data for a delegate ", "DEL Modifier: public", "DEL PrimitiveType: int", "DEL SimpleType: IOException", "DEL Block", "DEL ArrayType: byte[]", "DEL SimpleName: scope", "DEL IfStatement", "DEL SimpleName: getScopes", "DEL SimpleName: fam", "DEL SimpleName: clear", "DEL TagElement: @link", "DEL ThisExpression", "DEL PrimitiveType: int", "DEL SimpleName: TreeMap", "DEL SingleMemberAnnotation", "DEL InfixExpression: !=", "DEL ExpressionStatement", "DEL SimpleName: in", "DEL VariableDeclarationFragment", "DEL SimpleName: IOException", "DEL MethodDeclaration", "DEL Block", "DEL MethodInvocation", "DEL SimpleType: NavigableMap", "DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: >", "DEL SimpleType: TreeMap", "DEL Modifier: private", "DEL SimpleName: getScopes", "DEL TagElement", "DEL PrimitiveType: byte", "DEL SimpleName: numFamilies", "DEL SimpleType: Integer", "DEL Dimension", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleType: Integer", "DEL Assignment: =", "DEL Modifier: public", "DEL ForStatement", "DEL SimpleName: numFamilies", "DEL SimpleName: scopes", "DEL SimpleName: getScopes", "DEL MethodInvocation", "DEL SimpleName: List", "DEL SimpleName: VERSION_2", "DEL TextElement: This class should only be used with HBase &lt; 0.94.9. Newer installations of HBase should", "DEL TextElement: <p>", "DEL SimpleType: IOException", "DEL Block", "DEL InfixExpression: <", "DEL SimpleType: IOException", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL MethodInvocation", "DEL SimpleName: numFamilies", "DEL ThisExpression", "DEL IfStatement", "DEL SimpleType: IOException", "DEL SimpleName: addAll", "DEL SimpleName: delegate", "DEL FieldAccess", "DEL Modifier: public", "DEL SimpleName: KeyValue", "DEL SimpleName: delegate", "DEL VariableDeclarationStatement", "DEL SimpleName: delegate", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL SimpleType: UnsupportedOperationException", "DEL SimpleName: scope", "DEL SimpleName: delegate", "DEL StringLiteral: \"You must update your cluster to the lastest version of HBase and\"", "DEL TagElement", "DEL SimpleName: Override", "DEL ArrayType: byte[]", "DEL TextElement: instead use the IndexedWALEditCodec along with the correct configuration options.", "DEL SimpleName: getScopes", "DEL SimpleName: i", "DEL SimpleType: WALEdit", "DEL InfixExpression: !=", "DEL SimpleName: WALEdit", "DEL TextElement: Copy-constructor. Only does a surface copy of the delegates fields - no actual data is copied, only referenced.", "DEL SimpleName: IOException", "DEL VariableDeclarationStatement", "DEL ThrowStatement", "DEL FieldAccess", "DEL MethodInvocation", "DEL SimpleName: kvs", "DEL StringLiteral: \"Compression not supported for IndexedWALEdit! If you are using HBase 0.94.9+, use IndexedWALEditCodec instead.\"", "DEL NullLiteral", "DEL SimpleName: getScopes", "DEL MethodInvocation", "DEL TextElement: . This should only be used in concert with an IndexedHLogReader", "DEL SimpleName: Integer", "DEL TagElement: @param", "DEL SimpleType: List", "DEL SimpleName: IOException", "DEL MethodDeclaration", "DEL SimpleName: WALEdit", "DEL IfStatement", "DEL SimpleName: Integer", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: delegate", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: IndexedWALEdit", "DEL ClassInstanceCreation", "DEL PrimitiveType: byte", "DEL SimpleName: write", "DEL SimpleName: clear", "DEL SimpleName: IndexedWALEdit", "DEL SimpleName: context", "DEL Modifier: private", "DEL MarkerAnnotation", "DEL PrimitiveType: int", "DEL SimpleName: Bytes", "DEL SimpleName: scopes", "DEL MethodDeclaration", "DEL SimpleName: versionOrLength", "DEL PrimitiveType: void", "DEL Modifier: public", "DEL NumberLiteral: 0", "DEL SimpleName: SuppressWarnings", "DEL ArrayType: byte[]", "DEL Assignment: =", "DEL TypeDeclaration: class", "DEL StringLiteral: \" clean out all logs (cleanly start and then shutdown) before enabling indexing!\"", "DEL SimpleName: kvs", "DEL SingleVariableDeclaration", "DEL Block", "DEL StringLiteral: \"Indexed WALEdits aren't written directly out - use IndexedKeyValues instead\"", "DEL VariableDeclarationFragment", "DEL SimpleName: delegate", "DEL InfixExpression: !=", "DEL MethodDeclaration", "DEL FieldAccess", "DEL SimpleName: clear", "DEL ClassInstanceCreation", "DEL SimpleName: delegate", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: delegate", "DEL SimpleName: NavigableMap", "DEL ThisExpression", "DEL ClassInstanceCreation", "DEL QualifiedName: Bytes.BYTES_COMPARATOR", "DEL MarkerAnnotation", "DEL SimpleName: getKeyValues", "DEL SimpleName: IndexedWALEdit", "DEL IfStatement", "DEL ParameterizedType: NavigableMap<byte[],Integer>", "DEL SimpleName: WALEdit", "DEL ExpressionStatement", "DEL SimpleName: DataOutput", "DEL ExpressionStatement", "DEL ParameterizedType: TreeMap<byte[],Integer>", "DEL Modifier: final", "DEL StringLiteral: \"deprecation\"", "DEL SimpleName: delegate", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 1", "DEL SimpleType: WALEdit", "DEL SimpleName: put", "DEL Dimension", "DEL SimpleName: scopes", "DEL Modifier: public", "DEL SimpleName: fam", "DEL Javadoc", "DEL Block", "DEL InfixExpression: +", "DEL PrimitiveType: byte", "DEL SimpleName: versionOrLength", "DEL SimpleName: clear", "DEL IfStatement", "DEL VariableDeclarationStatement", "DEL SimpleType: DataInput", "DEL MethodInvocation", "DEL SimpleType: WALEdit", "DEL NumberLiteral: 0", "DEL FieldAccess", "DEL SimpleName: setCompressionContext", "DEL SimpleName: readInt", "DEL ThisExpression", "DEL MethodInvocation", "DEL ThrowStatement", "DEL SimpleName: in", "DEL SimpleName: setScopes", "DEL SimpleName: getKeyValues", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL Block", "DEL SimpleName: WALEdit", "DEL ExpressionStatement", "DEL SimpleName: Override", "DEL SimpleName: SuppressWarnings", "DEL SimpleName: IOException", "DEL VariableDeclarationStatement", "DEL SimpleName: out", "DEL SimpleName: readInt", "DEL Block", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL PostfixExpression: ++", "DEL FieldDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: in", "DEL Dimension"]}]}}, {"IndexedWALEdit_diff": {"operations": ["Delete QualifiedName: org.apache.hadoop.hbase.regionserver.wal(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.io.DataInput(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.io.DataOutput(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.io.IOException(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: java.util.List(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: java.util.NavigableMap(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: java.util.TreeMap(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.apache.hadoop.hbase.KeyValue(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.apache.hadoop.hbase.util.Bytes(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: org.apache.hadoop.hbase.index.wal.KeyValueCodec(18)", "Delete ImportDeclaration(19)", "Delete TextElement: Read in data for a delegate (20)", "Delete SimpleName: WALEdit(21)", "Delete TagElement: @link(22)", "Delete TextElement: . This should only be used in concert with an IndexedHLogReader(23)", "Delete TextElement: <p>(24)", "Delete TextElement: This class should only be used with HBase &lt; 0.94.9. Newer installations of HBase should(25)", "Delete TextElement: instead use the IndexedWALEditCodec along with the correct configuration options.(26)", "Delete TagElement(27)", "Delete Javadoc(28)", "Delete Modifier: public(29)", "Delete SimpleName: IndexedWALEdit(30)", "Delete SimpleName: WALEdit(31)", "Delete SimpleType: WALEdit(32)", "Delete Modifier: private(33)", "Delete Modifier: static(34)", "Delete Modifier: final(35)", "Delete PrimitiveType: int(36)", "Delete SimpleName: VERSION_2(37)", "Delete NumberLiteral: 1(38)", "Delete PrefixExpression: -(39)", "Delete VariableDeclarationFragment(40)", "Delete FieldDeclaration(41)", "Delete Modifier: private(42)", "Delete SimpleName: WALEdit(43)", "Delete SimpleType: WALEdit(44)", "Delete SimpleName: delegate(45)", "Delete VariableDeclarationFragment(46)", "Delete FieldDeclaration(47)", "Delete TextElement: Copy-constructor. Only does a surface copy of the delegates fields - no actual data is copied, only referenced.(48)", "Delete TagElement(49)", "Delete SimpleName: delegate(50)", "Delete TextElement:  to copy(51)", "Delete TagElement: @param(52)", "Delete Javadoc(53)", "Delete SimpleName: SuppressWarnings(54)", "Delete StringLiteral: \"deprecation\"(55)", "Delete SingleMemberAnnotation(56)", "Delete Modifier: public(57)", "Delete SimpleName: IndexedWALEdit(58)", "Delete SimpleName: WALEdit(59)", "Delete SimpleType: WALEdit(60)", "Delete SimpleName: delegate(61)", "Delete SingleVariableDeclaration(62)", "Delete ThisExpression(63)", "Delete SimpleName: delegate(64)", "Delete FieldAccess(65)", "Delete SimpleName: delegate(66)", "Delete Assignment: =(67)", "Delete ExpressionStatement(68)", "Delete ThisExpression(69)", "Delete SimpleName: delegate(70)", "Delete FieldAccess(71)", "Delete SimpleName: getKeyValues(72)", "Delete MethodInvocation(73)", "Delete SimpleName: clear(74)", "Delete MethodInvocation(75)", "Delete ExpressionStatement(76)", "Delete ThisExpression(77)", "Delete SimpleName: delegate(78)", "Delete FieldAccess(79)", "Delete SimpleName: getScopes(80)", "Delete MethodInvocation(81)", "Delete NullLiteral(82)", "Delete InfixExpression: !=(83)", "Delete ThisExpression(84)", "Delete SimpleName: delegate(85)", "Delete FieldAccess(86)", "Delete SimpleName: getScopes(87)", "Delete MethodInvocation(88)", "Delete SimpleName: clear(89)", "Delete MethodInvocation(90)", "Delete ExpressionStatement(91)", "Delete Block(92)", "Delete IfStatement(93)", "Delete Block(94)", "Delete MethodDeclaration(95)", "Delete Modifier: public(96)", "Delete SimpleName: IndexedWALEdit(97)", "Delete Block(98)", "Delete MethodDeclaration(99)", "Delete SimpleName: Override(100)", "Delete MarkerAnnotation(101)", "Delete Modifier: public(102)", "Delete PrimitiveType: void(103)", "Delete SimpleName: setCompressionContext(104)", "Delete SimpleName: CompressionContext(105)", "Delete SimpleType: CompressionContext(106)", "Delete SimpleName: context(107)", "Delete SingleVariableDeclaration(108)", "Delete SimpleName: UnsupportedOperationException(109)", "Delete SimpleType: UnsupportedOperationException(110)", "Delete StringLiteral: \"Compression not supported for IndexedWALEdit! If you are using HBase 0.94.9+, use IndexedWALEditCodec instead.\"(111)", "Delete ClassInstanceCreation(112)", "Delete ThrowStatement(113)", "Delete Block(114)", "Delete MethodDeclaration(115)", "Delete SimpleName: SuppressWarnings(116)", "Delete StringLiteral: \"deprecation\"(117)", "Delete SingleMemberAnnotation(118)", "Delete SimpleName: Override(119)", "Delete MarkerAnnotation(120)", "Delete Modifier: public(121)", "Delete PrimitiveType: void(122)", "Delete SimpleName: readFields(123)", "Delete SimpleName: DataInput(124)", "Delete SimpleType: DataInput(125)", "Delete SimpleName: in(126)", "Delete SingleVariableDeclaration(127)", "Delete SimpleName: IOException(128)", "Delete SimpleType: IOException(129)", "Delete SimpleName: delegate(130)", "Delete SimpleName: getKeyValues(131)", "Delete MethodInvocation(132)", "Delete SimpleName: clear(133)", "Delete MethodInvocation(134)", "Delete ExpressionStatement(135)", "Delete SimpleName: delegate(136)", "Delete SimpleName: getScopes(137)", "Delete MethodInvocation(138)", "Delete NullLiteral(139)", "Delete InfixExpression: !=(140)", "Delete SimpleName: delegate(141)", "Delete SimpleName: getScopes(142)", "Delete MethodInvocation(143)", "Delete SimpleName: clear(144)", "Delete MethodInvocation(145)", "Delete ExpressionStatement(146)", "Delete Block(147)", "Delete IfStatement(148)", "Delete PrimitiveType: int(149)", "Delete SimpleName: versionOrLength(150)", "Delete SimpleName: in(151)", "Delete SimpleName: readInt(152)", "Delete MethodInvocation(153)", "Delete VariableDeclarationFragment(154)", "Delete VariableDeclarationStatement(155)", "Delete SimpleName: versionOrLength(156)", "Delete SimpleName: VERSION_2(157)", "Delete InfixExpression: !=(158)", "Delete SimpleName: IOException(159)", "Delete SimpleType: IOException(160)", "Delete StringLiteral: \"You must update your cluster to the lastest version of HBase and\"(161)", "Delete StringLiteral: \" clean out all logs (cleanly start and then shutdown) before enabling indexing!\"(162)", "Delete InfixExpression: +(163)", "Delete ClassInstanceCreation(164)", "Delete ThrowStatement(165)", "Delete Block(166)", "Delete IfStatement(167)", "Delete SimpleName: List(168)", "Delete SimpleType: List(169)", "Delete SimpleName: KeyValue(170)", "Delete SimpleType: KeyValue(171)", "Delete ParameterizedType: List<KeyValue>(172)", "Delete SimpleName: kvs(173)", "Delete SimpleName: KeyValueCodec(174)", "Delete SimpleName: readKeyValues(175)", "Delete SimpleName: in(176)", "Delete MethodInvocation(177)", "Delete VariableDeclarationFragment(178)", "Delete VariableDeclarationStatement(179)", "Delete SimpleName: delegate(180)", "Delete SimpleName: getKeyValues(181)", "Delete MethodInvocation(182)", "Delete SimpleName: addAll(183)", "Delete SimpleName: kvs(184)", "Delete MethodInvocation(185)", "Delete ExpressionStatement(186)", "Delete PrimitiveType: int(187)", "Delete SimpleName: numFamilies(188)", "Delete SimpleName: in(189)", "Delete SimpleName: readInt(190)", "Delete MethodInvocation(191)", "Delete VariableDeclarationFragment(192)", "Delete VariableDeclarationStatement(193)", "Delete SimpleName: NavigableMap(194)", "Delete SimpleType: NavigableMap(195)", "Delete PrimitiveType: byte(196)", "Delete Dimension(197)", "Delete ArrayType: byte[](198)", "Delete SimpleName: Integer(199)", "Delete SimpleType: Integer(200)", "Delete ParameterizedType: NavigableMap<byte[],Integer>(201)", "Delete SimpleName: scopes(202)", "Delete SimpleName: delegate(203)", "Delete SimpleName: getScopes(204)", "Delete MethodInvocation(205)", "Delete VariableDeclarationFragment(206)", "Delete VariableDeclarationStatement(207)", "Delete SimpleName: numFamilies(208)", "Delete NumberLiteral: 0(209)", "Delete InfixExpression: >(210)", "Delete SimpleName: scopes(211)", "Delete NullLiteral(212)", "Delete InfixExpression: ==(213)", "Delete SimpleName: scopes(214)", "Delete SimpleName: TreeMap(215)", "Delete SimpleType: TreeMap(216)", "Delete PrimitiveType: byte(217)", "Delete Dimension(218)", "Delete ArrayType: byte[](219)", "Delete SimpleName: Integer(220)", "Delete SimpleType: Integer(221)", "Delete ParameterizedType: TreeMap<byte[],Integer>(222)", "Delete QualifiedName: Bytes.BYTES_COMPARATOR(223)", "Delete ClassInstanceCreation(224)", "Delete Assignment: =(225)", "Delete ExpressionStatement(226)", "Delete Block(227)", "Delete IfStatement(228)", "Delete PrimitiveType: int(229)", "Delete SimpleName: i(230)", "Delete NumberLiteral: 0(231)", "Delete VariableDeclarationFragment(232)", "Delete VariableDeclarationExpression(233)", "Delete SimpleName: i(234)", "Delete SimpleName: numFamilies(235)", "Delete InfixExpression: <(236)", "Delete SimpleName: i(237)", "Delete PostfixExpression: ++(238)", "Delete PrimitiveType: byte(239)", "Delete Dimension(240)", "Delete ArrayType: byte[](241)", "Delete SimpleName: fam(242)", "Delete SimpleName: Bytes(243)", "Delete SimpleName: readByteArray(244)", "Delete SimpleName: in(245)", "Delete MethodInvocation(246)", "Delete VariableDeclarationFragment(247)", "Delete VariableDeclarationStatement(248)", "Delete PrimitiveType: int(249)", "Delete SimpleName: scope(250)", "Delete SimpleName: in(251)", "Delete SimpleName: readInt(252)", "Delete MethodInvocation(253)", "Delete VariableDeclarationFragment(254)", "Delete VariableDeclarationStatement(255)", "Delete SimpleName: scopes(256)", "Delete SimpleName: put(257)", "Delete SimpleName: fam(258)", "Delete SimpleName: scope(259)", "Delete MethodInvocation(260)", "Delete ExpressionStatement(261)", "Delete Block(262)", "Delete ForStatement(263)", "Delete SimpleName: delegate(264)", "Delete SimpleName: setScopes(265)", "Delete SimpleName: scopes(266)", "Delete MethodInvocation(267)", "Delete ExpressionStatement(268)", "Delete Block(269)", "Delete IfStatement(270)", "Delete Block(271)", "Delete MethodDeclaration(272)", "Delete SimpleName: Override(273)", "Delete MarkerAnnotation(274)", "Delete Modifier: public(275)", "Delete PrimitiveType: void(276)", "Delete SimpleName: write(277)", "Delete SimpleName: DataOutput(278)", "Delete SimpleType: DataOutput(279)", "Delete SimpleName: out(280)", "Delete SingleVariableDeclaration(281)", "Delete SimpleName: IOException(282)", "Delete SimpleType: IOException(283)", "Delete SimpleName: IOException(284)", "Delete SimpleType: IOException(285)", "Delete StringLiteral: \"Indexed WALEdits aren't written directly out - use IndexedKeyValues instead\"(286)", "Delete ClassInstanceCreation(287)", "Delete ThrowStatement(288)", "Delete Block(289)", "Delete MethodDeclaration(290)", "Delete TypeDeclaration: class(291)"]}}, {"IndexedWALEditCodec_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 9", "MOV ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: org.apache.hadoop.conf.Configuration to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "UPDATE from org.apache.hadoop.hbase.codec.Decoder to org.apache.hadoop.hbase.Cell", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.codec.Decoder from org.apache.hadoop.hbase.codec.Decoder to org.apache.hadoop.hbase.Cell"]}, {"root": "UPDATE from org.apache.hadoop.hbase.codec.Encoder to org.apache.hadoop.hbase.KeyValueUtil", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.codec.Encoder from org.apache.hadoop.hbase.codec.Encoder to org.apache.hadoop.hbase.KeyValueUtil"]}, {"root": "UPDATE from WALEditCodec to WALCellCodec", "operations": ["UPD SimpleName: WALEditCodec from WALEditCodec to WALCellCodec", "UPD SimpleType: WALEditCodec from WALEditCodec to WALCellCodec"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS SimpleName: conf to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: Configuration to SimpleType: Configuration at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleType: Configuration to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: Configuration to SimpleType: Configuration at 0", "INS SimpleName: conf to SuperConstructorInvocation at 0", "INS SimpleName: compression to SuperConstructorInvocation at 1", "INS SimpleName: conf to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS SimpleType: Configuration to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SuperConstructorInvocation to Block at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 0", "MOV SimpleName: IndexedWALEditCodec to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 2"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: conf to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: conf to FieldAccess at 1"]}, {"root": "UPDATE from  that can handle a stream of regular and indexed  to Custom Decoder that can handle a stream of regular and indexed ", "operations": ["UPD TextElement:  that can handle a stream of regular and indexed  from  that can handle a stream of regular and indexed  to Custom Decoder that can handle a stream of regular and indexed "]}, {"root": "MOVE from TagElement", "operations": ["MOV TagElement: @link to TagElement at 3"]}, {"root": "UPDATE from  on the given input stream with the given  to Create a Decoder on the given input stream with the given Decoder to parse", "operations": ["UPD TextElement:  on the given input stream with the given  from  on the given input stream with the given  to Create a Decoder on the given input stream with the given Decoder to parse", "UPD TextElement:  on the given input stream with the given  from  on the given input stream with the given  to Create a Decoder on the given input stream with the given Decoder to parse"]}, {"root": "MOVE from TagElement", "operations": ["MOV TagElement: @link to TagElement at 6"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: KeyValueUtil to MethodInvocation at 0", "INS SimpleName: ensureKeyValue to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: cell to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS SimpleName: ensureKeyValue to MethodInvocation at 1", "INS SimpleName: KeyValueUtil to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: cell to MethodInvocation at 2"]}, {"root": "DEL SuperMethodInvocation", "operations": ["DEL SimpleName: compression", "DEL SimpleName: setCompression", "DEL SuperMethodInvocation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL Javadoc", "DEL TextElement: Required nullary constructor ", "DEL Block", "DEL TagElement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: compression", "DEL SimpleName: setCompression", "DEL MarkerAnnotation", "DEL TextElement:  compression to support for the encoder/decoder", "DEL Javadoc", "DEL TextElement: Override the parent implementation so we can get access to the current context too", "DEL Block", "DEL TagElement: @param", "DEL TagElement", "DEL MethodDeclaration", "DEL SimpleName: Override", "DEL Modifier: public", "DEL PrimitiveType: void"]}, {"root": "DEL TextElement: Custom ", "operations": ["DEL TextElement: Custom "]}, {"root": "DEL TagElement: @link", "operations": ["DEL SimpleName: Decoder", "DEL TagElement: @link"]}, {"root": "DEL TextElement: Create a ", "operations": ["DEL TextElement: Create a "]}, {"root": "DEL TagElement: @link", "operations": ["DEL SimpleName: Decoder", "DEL TagElement: @link"]}, {"root": "DEL TagElement: @link", "operations": ["DEL TagElement: @link", "DEL SimpleName: Decoder"]}, {"root": "DEL TextElement:  to parse", "operations": ["DEL TextElement:  to parse"]}, {"root": "DEL TextElement: Create a ", "operations": ["DEL TextElement: Create a "]}, {"root": "DEL TagElement: @link", "operations": ["DEL TagElement: @link", "DEL SimpleName: Decoder"]}, {"root": "DEL TagElement: @link", "operations": ["DEL SimpleName: Decoder", "DEL TagElement: @link"]}, {"root": "DEL TextElement:  to parse", "operations": ["DEL TextElement:  to parse"]}]}}, {"IndexedWALEditCodec_diff": {"operations": ["Move ImportDeclaration(21) into CompilationUnit(523) at 7", "Move ImportDeclaration(23) into CompilationUnit(523) at 9", "Insert ImportDeclaration(15) into CompilationUnit(523) at 7", "Insert QualifiedName: org.apache.hadoop.conf.Configuration(14) into ImportDeclaration(15) at 0", "Update QualifiedName: org.apache.hadoop.hbase.codec.Decoder(20) to org.apache.hadoop.hbase.Cell", "Update QualifiedName: org.apache.hadoop.hbase.codec.Encoder(22) to org.apache.hadoop.hbase.KeyValueUtil", "Update SimpleType: WALEditCodec(41) to WALCellCodec", "Insert FieldDeclaration(63) into TypeDeclaration: class(522) at 6", "Insert MethodDeclaration(90) into TypeDeclaration: class(522) at 7", "Update SimpleName: WALEditCodec(40) to WALCellCodec", "Insert Modifier: private(58) into FieldDeclaration(63) at 0", "Insert SimpleType: Configuration(60) into FieldDeclaration(63) at 1", "Insert VariableDeclarationFragment(62) into FieldDeclaration(63) at 2", "Move Modifier: public(59) into MethodDeclaration(90) at 0", "Move SimpleName: IndexedWALEditCodec(60) into MethodDeclaration(90) at 1", "Insert SingleVariableDeclaration(69) into MethodDeclaration(90) at 2", "Move SingleVariableDeclaration(77) into MethodDeclaration(90) at 3", "Insert Block(89) into MethodDeclaration(90) at 4", "Insert SimpleName: Configuration(59) into SimpleType: Configuration(60) at 0", "Insert SimpleName: conf(61) into VariableDeclarationFragment(62) at 0", "Insert SimpleType: Configuration(67) into SingleVariableDeclaration(69) at 0", "Insert SimpleName: conf(68) into SingleVariableDeclaration(69) at 1", "Insert SuperConstructorInvocation(76) into Block(89) at 0", "Move ExpressionStatement(81) into Block(89) at 1", "Move ExpressionStatement(87) into Block(89) at 2", "Update SimpleType: KeyValue(283) to Cell", "Insert SimpleName: Configuration(66) into SimpleType: Configuration(67) at 0", "Insert SimpleName: conf(74) into SuperConstructorInvocation(76) at 0", "Insert SimpleName: compression(75) into SuperConstructorInvocation(76) at 1", "Insert Assignment: =(81) into ExpressionStatement(82) at 0", "Update TextElement:  that can handle a stream of regular and indexed (169) to Custom Decoder that can handle a stream of regular and indexed ", "Move TagElement: @link(188) into TagElement(171) at 3", "Update SimpleName: KeyValue(282) to Cell", "Update SimpleType: KeyValue(386) to Cell", "Update SimpleType: KeyValue(477) to Cell", "Insert FieldAccess(79) into Assignment: =(81) at 0", "Insert SimpleName: conf(80) into Assignment: =(81) at 1", "Update TextElement:  on the given input stream with the given (182) to Create a Decoder on the given input stream with the given Decoder to parse", "Move TagElement: @link(171) into TagElement(182) at 6", "Update TextElement:  on the given input stream with the given (239) to Create a Decoder on the given input stream with the given Decoder to parse", "Update SimpleName: KeyValue(385) to Cell", "Update SimpleName: KeyValue(476) to Cell", "Insert ThisExpression(77) into FieldAccess(79) at 0", "Insert SimpleName: conf(78) into FieldAccess(79) at 1", "Insert MethodInvocation(391) into MethodInvocation(392) at 3", "Insert SimpleName: KeyValueUtil(388) into MethodInvocation(391) at 0", "Insert SimpleName: ensureKeyValue(389) into MethodInvocation(391) at 1", "Move SimpleName: cell(402) into MethodInvocation(391) at 2", "Insert MethodInvocation(514) into MethodInvocation(515) at 3", "Insert SimpleName: KeyValueUtil(511) into MethodInvocation(514) at 0", "Insert SimpleName: ensureKeyValue(512) into MethodInvocation(514) at 1", "Move SimpleName: cell(522) into MethodInvocation(514) at 2", "Delete SimpleName: setCompression(78)", "Delete SimpleName: compression(79)", "Delete SuperMethodInvocation(80)", "Delete TextElement: Required nullary constructor (56)", "Delete TagElement(57)", "Delete Javadoc(58)", "Delete Block(61)", "Delete MethodDeclaration(62)", "Delete TextElement: Override the parent implementation so we can get access to the current context too(63)", "Delete TagElement(64)", "Delete SimpleName: compression(65)", "Delete TextElement:  compression to support for the encoder/decoder(66)", "Delete TagElement: @param(67)", "Delete Javadoc(68)", "Delete SimpleName: Override(69)", "Delete MarkerAnnotation(70)", "Delete Modifier: public(71)", "Delete PrimitiveType: void(72)", "Delete SimpleName: setCompression(73)", "Delete Block(88)", "Delete MethodDeclaration(89)", "Delete TextElement: Custom (166)", "Delete SimpleName: Decoder(167)", "Delete TagElement: @link(168)", "Delete TextElement: Create a (179)", "Delete SimpleName: Decoder(180)", "Delete TagElement: @link(181)", "Delete SimpleName: Decoder(183)", "Delete TagElement: @link(184)", "Delete TextElement:  to parse(185)", "Delete TextElement: Create a (236)", "Delete SimpleName: Decoder(237)", "Delete TagElement: @link(238)", "Delete SimpleName: Decoder(240)", "Delete TagElement: @link(241)", "Delete TextElement:  to parse(242)"]}}, {"IndexMemStore_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.io.IOException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "UPDATE from org.apache.hadoop.hbase.KeyValue.KeyComparator to org.apache.hadoop.hbase.KeyValue.KVComparator", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.KeyValue.KeyComparator from org.apache.hadoop.hbase.KeyValue.KeyComparator to org.apache.hadoop.hbase.KeyValue.KVComparator"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 18", "INS SimpleName: KeyValue to SimpleType: KeyValue at 0", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: arg0 to SingleVariableDeclaration at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: backwardSeek to MethodDeclaration at 3", "INS Block to MethodDeclaration at 6", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: KeyValue to SingleVariableDeclaration at 0", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleType: IOException to MethodDeclaration at 5", "INS ThrowStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS ClassInstanceCreation to ThrowStatement at 0", "INS Block to MethodDeclaration at 5", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS ThrowStatement to Block at 0", "INS SimpleName: seekToLastRow to MethodDeclaration at 3", "INS SimpleType: IOException to MethodDeclaration at 4", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS SimpleName: arg0 to SingleVariableDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: KeyValue to SimpleType: KeyValue at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS ThrowStatement to Block at 0", "INS SimpleType: KeyValue to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS SimpleName: seekToPreviousRow to MethodDeclaration at 3", "INS SimpleType: IOException to MethodDeclaration at 5", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ClassInstanceCreation to ThrowStatement at 0"]}, {"root": "UPDATE from KeyComparator to KVComparator", "operations": ["UPD SimpleName: KeyComparator from KeyComparator to KVComparator", "UPD SimpleType: KeyComparator from KeyComparator to KVComparator", "UPD SimpleName: KeyComparator from KeyComparator to KVComparator", "UPD SimpleType: KeyComparator from KeyComparator to KVComparator"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: kv to MethodInvocation at 0", "INS SimpleName: getValueOffset to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 4", "operations": ["INS SimpleName: kv to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: getValueLength to MethodInvocation at 1"]}, {"root": "UPDATE from getValue to getValueArray", "operations": ["UPD SimpleName: getValue from getValue to getValueArray"]}, {"root": "UPDATE from compare to compareFlatKey", "operations": ["UPD SimpleName: compare from compare to compareFlatKey"]}, {"root": "UPDATE from getBuffer to getRowArray", "operations": ["UPD SimpleName: getBuffer from getBuffer to getRowArray", "UPD SimpleName: getBuffer from getBuffer to getRowArray"]}]}}, {"IndexMemStore_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(845) at 1", "Insert QualifiedName: java.io.IOException(2) into ImportDeclaration(3) at 0", "Update QualifiedName: org.apache.hadoop.hbase.KeyValue.KeyComparator(14) to org.apache.hadoop.hbase.KeyValue.KVComparator", "Insert MethodDeclaration(812) into TypeDeclaration: class(843) at 18", "Insert MethodDeclaration(825) into TypeDeclaration: class(843) at 19", "Insert MethodDeclaration(842) into TypeDeclaration: class(843) at 20", "Insert MarkerAnnotation(797) into MethodDeclaration(812) at 0", "Insert Modifier: public(798) into MethodDeclaration(812) at 1", "Insert PrimitiveType: boolean(799) into MethodDeclaration(812) at 2", "Insert SimpleName: backwardSeek(800) into MethodDeclaration(812) at 3", "Insert SingleVariableDeclaration(804) into MethodDeclaration(812) at 4", "Insert SimpleType: IOException(806) into MethodDeclaration(812) at 5", "Insert Block(811) into MethodDeclaration(812) at 6", "Insert MarkerAnnotation(814) into MethodDeclaration(825) at 0", "Insert Modifier: public(815) into MethodDeclaration(825) at 1", "Insert PrimitiveType: boolean(816) into MethodDeclaration(825) at 2", "Insert SimpleName: seekToLastRow(817) into MethodDeclaration(825) at 3", "Insert SimpleType: IOException(819) into MethodDeclaration(825) at 4", "Insert Block(824) into MethodDeclaration(825) at 5", "Insert MarkerAnnotation(827) into MethodDeclaration(842) at 0", "Insert Modifier: public(828) into MethodDeclaration(842) at 1", "Insert PrimitiveType: boolean(829) into MethodDeclaration(842) at 2", "Insert SimpleName: seekToPreviousRow(830) into MethodDeclaration(842) at 3", "Insert SingleVariableDeclaration(834) into MethodDeclaration(842) at 4", "Insert SimpleType: IOException(836) into MethodDeclaration(842) at 5", "Insert Block(841) into MethodDeclaration(842) at 6", "Insert SimpleName: Override(796) into MarkerAnnotation(797) at 0", "Insert SimpleType: KeyValue(802) into SingleVariableDeclaration(804) at 0", "Insert SimpleName: arg0(803) into SingleVariableDeclaration(804) at 1", "Insert SimpleName: IOException(805) into SimpleType: IOException(806) at 0", "Insert ThrowStatement(810) into Block(811) at 0", "Insert SimpleName: Override(813) into MarkerAnnotation(814) at 0", "Insert SimpleName: IOException(818) into SimpleType: IOException(819) at 0", "Insert ThrowStatement(823) into Block(824) at 0", "Insert SimpleName: Override(826) into MarkerAnnotation(827) at 0", "Insert SimpleType: KeyValue(832) into SingleVariableDeclaration(834) at 0", "Insert SimpleName: arg0(833) into SingleVariableDeclaration(834) at 1", "Insert SimpleName: IOException(835) into SimpleType: IOException(836) at 0", "Insert ThrowStatement(840) into Block(841) at 0", "Insert SimpleName: KeyValue(801) into SimpleType: KeyValue(802) at 0", "Insert ClassInstanceCreation(809) into ThrowStatement(810) at 0", "Insert ClassInstanceCreation(822) into ThrowStatement(823) at 0", "Insert SimpleName: KeyValue(831) into SimpleType: KeyValue(832) at 0", "Insert ClassInstanceCreation(839) into ThrowStatement(840) at 0", "Update SimpleType: KeyComparator(166) to KVComparator", "Insert MethodInvocation(368) into MethodInvocation(372) at 3", "Insert MethodInvocation(371) into MethodInvocation(372) at 4", "Insert SimpleType: UnsupportedOperationException(808) into ClassInstanceCreation(809) at 0", "Insert SimpleType: UnsupportedOperationException(821) into ClassInstanceCreation(822) at 0", "Insert SimpleType: UnsupportedOperationException(838) into ClassInstanceCreation(839) at 0", "Update SimpleName: KeyComparator(165) to KVComparator", "Update SimpleName: getValue(362) to getValueArray", "Insert SimpleName: kv(366) into MethodInvocation(368) at 0", "Insert SimpleName: getValueOffset(367) into MethodInvocation(368) at 1", "Insert SimpleName: kv(369) into MethodInvocation(371) at 0", "Insert SimpleName: getValueLength(370) into MethodInvocation(371) at 1", "Insert SimpleName: UnsupportedOperationException(807) into SimpleType: UnsupportedOperationException(808) at 0", "Insert SimpleName: UnsupportedOperationException(820) into SimpleType: UnsupportedOperationException(821) at 0", "Insert SimpleName: UnsupportedOperationException(837) into SimpleType: UnsupportedOperationException(838) at 0", "Update SimpleType: KeyComparator(169) to KVComparator", "Update SimpleName: KeyComparator(168) to KVComparator", "Update SimpleName: compare(189) to compareFlatKey", "Update SimpleName: getBuffer(191) to getRowArray", "Update SimpleName: getBuffer(202) to getRowArray"]}}, {"LocalTable_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Result to VariableDeclarationStatement at 0"]}, {"root": "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Result to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: kvs to MethodInvocation at 2", "INS SimpleName: r to VariableDeclarationFragment at 0", "INS SimpleName: create to MethodInvocation at 1"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell"]}, {"root": "UPDATE from ArrayList<KeyValue> to ArrayList<Cell>", "operations": ["UPD ParameterizedType: ArrayList<KeyValue> from ArrayList<KeyValue> to ArrayList<Cell>"]}, {"root": "DEL SimpleType: Result", "operations": ["DEL SimpleType: Result", "DEL SimpleName: Result"]}, {"root": "DEL VariableDeclarationFragment", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: r", "DEL ClassInstanceCreation", "DEL SimpleName: kvs"]}]}}, {"LocalTable_diff": {"operations": ["Insert ImportDeclaration(13) into CompilationUnit(182) at 6", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(12) into ImportDeclaration(13) at 0", "Update ParameterizedType: List<KeyValue>(137) to List<Cell>", "Move SimpleType: Result(166) into VariableDeclarationStatement(172) at 0", "Insert VariableDeclarationFragment(171) into VariableDeclarationStatement(172) at 1", "Update SimpleType: KeyValue(136) to Cell", "Insert SimpleName: r(166) into VariableDeclarationFragment(171) at 0", "Insert MethodInvocation(170) into VariableDeclarationFragment(171) at 1", "Update SimpleName: KeyValue(135) to Cell", "Update ParameterizedType: ArrayList<KeyValue>(143) to ArrayList<Cell>", "Insert SimpleName: Result(167) into MethodInvocation(170) at 0", "Insert SimpleName: create(168) into MethodInvocation(170) at 1", "Insert SimpleName: kvs(169) into MethodInvocation(170) at 2", "Update SimpleType: KeyValue(142) to Cell", "Update SimpleName: KeyValue(141) to Cell", "Delete SimpleName: Result(162)", "Delete SimpleType: Result(163)", "Delete SimpleName: r(164)", "Delete SimpleName: kvs(167)", "Delete ClassInstanceCreation(168)", "Delete VariableDeclarationFragment(169)"]}}, {"CoveredColumnIndexCodec_cluster": {"actions": [{"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return"]}]}}, {"CoveredColumnIndexCodec_diff": {"operations": ["Delete TagElement: @return(960)"]}}, {"CoveredColumnIndexer_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 20", "MOV ImportDeclaration to CompilationUnit at 20"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: getRowOffset to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: curKV to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: getRowLength to MethodInvocation at 1", "INS SimpleName: p to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ClassInstanceCreation at 3", "INS SimpleName: curKV to MethodInvocation at 0", "INS SimpleName: getRowArray to MethodInvocation at 1", "INS SimpleName: curKV to MethodInvocation at 0"]}, {"root": "INS SimpleType: KeyValue to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: KeyValue to VariableDeclarationStatement at 0", "INS SimpleName: KeyValue to SimpleType: KeyValue at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Put to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from p to curKV", "operations": ["UPD SimpleName: p from p to curKV"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Put to ClassInstanceCreation at 0"]}, {"root": "UPDATE from getType to getTypeByte", "operations": ["UPD SimpleName: getType from getType to getTypeByte"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: getRow", "DEL ClassInstanceCreation", "DEL MethodInvocation"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return"]}]}}, {"CoveredColumnIndexer_diff": {"operations": ["Move ImportDeclaration(29) into CompilationUnit(421) at 20", "Move ImportDeclaration(31) into CompilationUnit(421) at 20", "Insert VariableDeclarationStatement(282) into Block(366) at 1", "Insert SimpleType: KeyValue(255) into VariableDeclarationStatement(265) at 0", "Move SimpleType: Put(258) into VariableDeclarationStatement(282) at 0", "Insert VariableDeclarationFragment(281) into VariableDeclarationStatement(282) at 1", "Insert SimpleName: KeyValue(254) into SimpleType: KeyValue(255) at 0", "Update SimpleName: p(256) to curKV", "Move MethodInvocation(265) into VariableDeclarationFragment(264) at 1", "Insert SimpleName: p(268) into VariableDeclarationFragment(281) at 0", "Insert ClassInstanceCreation(280) into VariableDeclarationFragment(281) at 1", "Move SimpleType: Put(255) into ClassInstanceCreation(280) at 0", "Insert MethodInvocation(273) into ClassInstanceCreation(280) at 1", "Insert MethodInvocation(276) into ClassInstanceCreation(280) at 2", "Insert MethodInvocation(279) into ClassInstanceCreation(280) at 3", "Insert SimpleName: curKV(271) into MethodInvocation(273) at 0", "Insert SimpleName: getRowArray(272) into MethodInvocation(273) at 1", "Insert SimpleName: curKV(274) into MethodInvocation(276) at 0", "Insert SimpleName: getRowOffset(275) into MethodInvocation(276) at 1", "Insert SimpleName: curKV(277) into MethodInvocation(279) at 0", "Insert SimpleName: getRowLength(278) into MethodInvocation(279) at 1", "Update SimpleName: getType(281) to getTypeByte", "Delete SimpleName: getRow(266)", "Delete MethodInvocation(267)", "Delete ClassInstanceCreation(268)", "Delete TagElement: @return(364)"]}}, {"ApplyAndFilterDeletesFilter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.CellUtil to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: org.apache.hadoop.hbase.KeyValueUtil to ImportDeclaration at 0"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: KeyValue to SimpleType: KeyValue at 0", "INS SimpleName: KeyValueUtil to MethodInvocation at 0", "INS SimpleName: nextKV to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: KeyValue to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: next to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: ensureKeyValue to MethodInvocation at 1"]}, {"root": "UPDATE from getType to getTypeByte", "operations": ["UPD SimpleName: getType from getType to getTypeByte"]}, {"root": "UPDATE from next to nextKV", "operations": ["UPD SimpleName: next from next to nextKV", "UPD SimpleName: next from next to nextKV", "UPD SimpleName: next from next to nextKV", "UPD SimpleName: next from next to nextKV", "UPD SimpleName: next from next to nextKV", "UPD SimpleName: next from next to nextKV"]}, {"root": "UPDATE from deleteColumn to CellUtil", "operations": ["UPD SimpleName: deleteColumn from deleteColumn to CellUtil", "UPD SimpleName: pointDelete from pointDelete to CellUtil", "UPD SimpleName: deleteFamily from deleteFamily to CellUtil"]}, {"root": "INS SimpleName: deleteFamily to MethodInvocation at 2", "operations": ["INS SimpleName: deleteFamily to MethodInvocation at 2"]}, {"root": "INS SimpleName: deleteColumn to MethodInvocation at 2", "operations": ["INS SimpleName: deleteColumn to MethodInvocation at 2"]}, {"root": "INS SimpleName: pointDelete to MethodInvocation at 2", "operations": ["INS SimpleName: pointDelete to MethodInvocation at 2"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL PrimitiveType: void", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL MarkerAnnotation", "DEL SimpleName: IOException", "DEL SimpleName: Override", "DEL ThrowStatement", "DEL SingleVariableDeclaration", "DEL SimpleType: UnsupportedOperationException", "DEL SimpleType: DataOutput", "DEL SimpleName: DataOutput", "DEL Block", "DEL SimpleName: UnsupportedOperationException", "DEL StringLiteral: \"Server-side only filter, cannot be serialized!\"", "DEL SimpleType: IOException", "DEL SimpleName: out", "DEL SimpleName: write", "DEL Modifier: public"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: Override", "DEL SimpleName: readFields", "DEL StringLiteral: \"Server-side only filter, cannot be deserialized!\"", "DEL SimpleName: UnsupportedOperationException", "DEL MethodDeclaration", "DEL SimpleName: IOException", "DEL Block", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL SimpleName: in", "DEL SimpleType: UnsupportedOperationException", "DEL Modifier: public", "DEL SimpleType: IOException", "DEL SimpleName: DataInput", "DEL MarkerAnnotation", "DEL ThrowStatement", "DEL PrimitiveType: void", "DEL SimpleType: DataInput"]}]}}, {"ApplyAndFilterDeletesFilter_diff": {"operations": ["Insert ImportDeclaration(17) into CompilationUnit(751) at 8", "Insert ImportDeclaration(19) into CompilationUnit(751) at 9", "Insert ImportDeclaration(27) into CompilationUnit(751) at 13", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(16) into ImportDeclaration(17) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.CellUtil(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: org.apache.hadoop.hbase.KeyValueUtil(26) into ImportDeclaration(27) at 0", "Update SimpleType: KeyValue(275) to Cell", "Insert VariableDeclarationStatement(299) into Block(403) at 1", "Update SimpleName: KeyValue(274) to Cell", "Insert SimpleType: KeyValue(292) into VariableDeclarationStatement(299) at 0", "Insert VariableDeclarationFragment(298) into VariableDeclarationStatement(299) at 1", "Insert SimpleName: KeyValue(291) into SimpleType: KeyValue(292) at 0", "Insert SimpleName: nextKV(293) into VariableDeclarationFragment(298) at 0", "Insert MethodInvocation(297) into VariableDeclarationFragment(298) at 1", "Insert SimpleName: KeyValueUtil(294) into MethodInvocation(297) at 0", "Insert SimpleName: ensureKeyValue(295) into MethodInvocation(297) at 1", "Insert SimpleName: next(296) into MethodInvocation(297) at 2", "Update SimpleName: getType(288) to getTypeByte", "Update SimpleName: next(304) to nextKV", "Update SimpleName: next(324) to nextKV", "Update SimpleName: next(336) to nextKV", "Update SimpleName: next(351) to nextKV", "Update SimpleName: next(365) to nextKV", "Update SimpleName: next(379) to nextKV", "Update SimpleName: deleteFamily(627) to CellUtil", "Insert SimpleName: deleteFamily(608) into MethodInvocation(610) at 2", "Update SimpleName: deleteColumn(671) to CellUtil", "Insert SimpleName: deleteColumn(653) into MethodInvocation(655) at 2", "Update SimpleName: pointDelete(716) to CellUtil", "Insert SimpleName: pointDelete(699) into MethodInvocation(701) at 2", "Delete SimpleName: Override(390)", "Delete MarkerAnnotation(391)", "Delete Modifier: public(392)", "Delete PrimitiveType: void(393)", "Delete SimpleName: write(394)", "Delete SimpleName: DataOutput(395)", "Delete SimpleType: DataOutput(396)", "Delete SimpleName: out(397)", "Delete SingleVariableDeclaration(398)", "Delete SimpleName: IOException(399)", "Delete SimpleType: IOException(400)", "Delete SimpleName: UnsupportedOperationException(401)", "Delete SimpleType: UnsupportedOperationException(402)", "Delete StringLiteral: \"Server-side only filter, cannot be serialized!\"(403)", "Delete ClassInstanceCreation(404)", "Delete ThrowStatement(405)", "Delete Block(406)", "Delete MethodDeclaration(407)", "Delete SimpleName: Override(408)", "Delete MarkerAnnotation(409)", "Delete Modifier: public(410)", "Delete PrimitiveType: void(411)", "Delete SimpleName: readFields(412)", "Delete SimpleName: DataInput(413)", "Delete SimpleType: DataInput(414)", "Delete SimpleName: in(415)", "Delete SingleVariableDeclaration(416)", "Delete SimpleName: IOException(417)", "Delete SimpleType: IOException(418)", "Delete SimpleName: UnsupportedOperationException(419)", "Delete SimpleType: UnsupportedOperationException(420)", "Delete StringLiteral: \"Server-side only filter, cannot be deserialized!\"(421)", "Delete ClassInstanceCreation(422)", "Delete ThrowStatement(423)", "Delete Block(424)", "Delete MethodDeclaration(425)"]}}, {"ColumnTrackingNextLargestTimestampFilter_cluster": {"actions": [{"root": "UPDATE from java.io.DataInput to org.apache.hadoop.hbase.Cell", "operations": ["UPD QualifiedName: java.io.DataInput from java.io.DataInput to org.apache.hadoop.hbase.Cell"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.DataOutput", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: DataOutput", "DEL StringLiteral: \"Server-side only filter, cannot be serialized!\"", "DEL SimpleName: UnsupportedOperationException", "DEL Block", "DEL ThrowStatement", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: Override", "DEL PrimitiveType: void", "DEL SimpleType: IOException", "DEL SimpleName: out", "DEL SimpleName: write", "DEL ClassInstanceCreation", "DEL SimpleName: IOException", "DEL SimpleType: UnsupportedOperationException", "DEL SimpleType: DataOutput", "DEL MarkerAnnotation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MarkerAnnotation", "DEL StringLiteral: \"Server-side only filter, cannot be deserialized!\"", "DEL SimpleType: DataInput", "DEL SingleVariableDeclaration", "DEL ThrowStatement", "DEL MethodDeclaration", "DEL Block", "DEL SimpleType: UnsupportedOperationException", "DEL Modifier: public", "DEL PrimitiveType: void", "DEL SimpleType: IOException", "DEL SimpleName: in", "DEL SimpleName: Override", "DEL SimpleName: DataInput", "DEL SimpleName: UnsupportedOperationException", "DEL SimpleName: readFields", "DEL SimpleName: IOException", "DEL ClassInstanceCreation"]}]}}, {"ColumnTrackingNextLargestTimestampFilter_diff": {"operations": ["Update QualifiedName: java.io.DataInput(2) to org.apache.hadoop.hbase.Cell", "Update SimpleType: KeyValue(81) to Cell", "Update SimpleName: KeyValue(80) to Cell", "Delete QualifiedName: java.io.DataOutput(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.io.IOException(6)", "Delete ImportDeclaration(7)", "Delete SimpleName: Override(109)", "Delete MarkerAnnotation(110)", "Delete Modifier: public(111)", "Delete PrimitiveType: void(112)", "Delete SimpleName: write(113)", "Delete SimpleName: DataOutput(114)", "Delete SimpleType: DataOutput(115)", "Delete SimpleName: out(116)", "Delete SingleVariableDeclaration(117)", "Delete SimpleName: IOException(118)", "Delete SimpleType: IOException(119)", "Delete SimpleName: UnsupportedOperationException(120)", "Delete SimpleType: UnsupportedOperationException(121)", "Delete StringLiteral: \"Server-side only filter, cannot be serialized!\"(122)", "Delete ClassInstanceCreation(123)", "Delete ThrowStatement(124)", "Delete Block(125)", "Delete MethodDeclaration(126)", "Delete SimpleName: Override(127)", "Delete MarkerAnnotation(128)", "Delete Modifier: public(129)", "Delete PrimitiveType: void(130)", "Delete SimpleName: readFields(131)", "Delete SimpleName: DataInput(132)", "Delete SimpleType: DataInput(133)", "Delete SimpleName: in(134)", "Delete SingleVariableDeclaration(135)", "Delete SimpleName: IOException(136)", "Delete SimpleType: IOException(137)", "Delete SimpleName: UnsupportedOperationException(138)", "Delete SimpleType: UnsupportedOperationException(139)", "Delete StringLiteral: \"Server-side only filter, cannot be deserialized!\"(140)", "Delete ClassInstanceCreation(141)", "Delete ThrowStatement(142)", "Delete Block(143)", "Delete MethodDeclaration(144)"]}}, {"FamilyOnlyFilter_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 5"]}, {"root": "UPDATE from org.apache.hadoop.hbase.KeyValue to org.apache.hadoop.hbase.Cell", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.KeyValue from org.apache.hadoop.hbase.KeyValue to org.apache.hadoop.hbase.Cell"]}, {"root": "UPDATE from org.apache.hadoop.hbase.filter.WritableByteArrayComparable to org.apache.hadoop.hbase.filter.ByteArrayComparable", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.filter.WritableByteArrayComparable from org.apache.hadoop.hbase.filter.WritableByteArrayComparable to org.apache.hadoop.hbase.filter.ByteArrayComparable"]}, {"root": "UPDATE from WritableByteArrayComparable to ByteArrayComparable", "operations": ["UPD SimpleType: WritableByteArrayComparable from WritableByteArrayComparable to ByteArrayComparable", "UPD SimpleName: WritableByteArrayComparable from WritableByteArrayComparable to ByteArrayComparable"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}]}}, {"FamilyOnlyFilter_diff": {"operations": ["Move ImportDeclaration(22) into CompilationUnit(155) at 5", "Update QualifiedName: org.apache.hadoop.hbase.KeyValue(17) to org.apache.hadoop.hbase.Cell", "Update QualifiedName: org.apache.hadoop.hbase.filter.WritableByteArrayComparable(23) to org.apache.hadoop.hbase.filter.ByteArrayComparable", "Update SimpleType: WritableByteArrayComparable(71) to ByteArrayComparable", "Update SimpleType: KeyValue(110) to Cell", "Update SimpleName: WritableByteArrayComparable(70) to ByteArrayComparable", "Update SimpleName: KeyValue(109) to Cell"]}}, {"MaxTimestampFilter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: kv to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0"]}, {"root": "INS TryStatement to Block at 1", "operations": ["INS Block to CatchClause at 1", "INS MethodInvocation to Assignment: = at 1", "INS CatchClause to TryStatement at 1", "INS SimpleName: e to ClassInstanceCreation at 1", "INS Block to TryStatement at 0", "INS TryStatement to Block at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: CloneNotSupportedException to SimpleType: CloneNotSupportedException at 0", "INS SimpleType: IllegalArgumentException to ClassInstanceCreation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: kv to Assignment: = at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleType: CloneNotSupportedException to SingleVariableDeclaration at 0", "INS SimpleName: IllegalArgumentException to SimpleType: IllegalArgumentException at 0"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: KeyValue to VariableDeclarationStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: currentKV to MethodInvocation at 0", "MOV SimpleName: deepCopy to MethodInvocation at 1"]}, {"root": "UPDATE from deepCopy to clone", "operations": ["UPD SimpleName: deepCopy from deepCopy to clone"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: kv"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: IOException", "DEL ThrowStatement", "DEL MarkerAnnotation", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL SimpleType: UnsupportedOperationException", "DEL SimpleName: Override", "DEL Block", "DEL SimpleName: DataOutput", "DEL ClassInstanceCreation", "DEL StringLiteral: \"Server-side only filter, cannot be serialized!\"", "DEL SimpleName: UnsupportedOperationException", "DEL SimpleType: IOException", "DEL SimpleName: out", "DEL Modifier: public", "DEL SimpleName: write", "DEL SimpleType: DataOutput", "DEL PrimitiveType: void"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: UnsupportedOperationException", "DEL ThrowStatement", "DEL SimpleName: Override", "DEL MethodDeclaration", "DEL MarkerAnnotation", "DEL SimpleType: DataInput", "DEL SimpleName: in", "DEL SimpleName: readFields", "DEL StringLiteral: \"Server-side only filter, cannot be deserialized!\"", "DEL SimpleName: DataInput", "DEL SimpleType: IOException", "DEL ClassInstanceCreation", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleType: UnsupportedOperationException", "DEL SimpleName: IOException", "DEL PrimitiveType: void", "DEL Block"]}]}}, {"MaxTimestampFilter_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(151) at 4", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(8) into ImportDeclaration(9) at 0", "Insert VariableDeclarationStatement(61) into Block(120) at 0", "Insert TryStatement(80) into Block(120) at 1", "Update SimpleType: KeyValue(110) to Cell", "Move SimpleType: KeyValue(55) into VariableDeclarationStatement(61) at 0", "Insert VariableDeclarationFragment(60) into VariableDeclarationStatement(61) at 1", "Insert Block(68) into TryStatement(80) at 0", "Insert CatchClause(79) into TryStatement(80) at 1", "Update SimpleName: KeyValue(109) to Cell", "Insert SimpleName: kv(58) into VariableDeclarationFragment(60) at 0", "Insert NullLiteral(59) into VariableDeclarationFragment(60) at 1", "Insert ExpressionStatement(67) into Block(68) at 0", "Insert SingleVariableDeclaration(72) into CatchClause(79) at 0", "Insert Block(78) into CatchClause(79) at 1", "Insert Assignment: =(66) into ExpressionStatement(67) at 0", "Insert SimpleType: CloneNotSupportedException(70) into SingleVariableDeclaration(72) at 0", "Insert SimpleName: e(71) into SingleVariableDeclaration(72) at 1", "Insert ThrowStatement(77) into Block(78) at 0", "Insert SimpleName: kv(62) into Assignment: =(66) at 0", "Insert MethodInvocation(65) into Assignment: =(66) at 1", "Insert SimpleName: CloneNotSupportedException(69) into SimpleType: CloneNotSupportedException(70) at 0", "Insert ClassInstanceCreation(76) into ThrowStatement(77) at 0", "Move SimpleName: currentKV(57) into MethodInvocation(65) at 0", "Update SimpleName: deepCopy(58) to clone", "Move SimpleName: deepCopy(58) into MethodInvocation(65) at 1", "Insert SimpleType: IllegalArgumentException(74) into ClassInstanceCreation(76) at 0", "Insert SimpleName: e(75) into ClassInstanceCreation(76) at 1", "Insert SimpleName: IllegalArgumentException(73) into SimpleType: IllegalArgumentException(74) at 0", "Delete SimpleName: kv(56)", "Delete MethodInvocation(59)", "Delete VariableDeclarationFragment(60)", "Delete VariableDeclarationStatement(61)", "Delete SimpleName: Override(131)", "Delete MarkerAnnotation(132)", "Delete Modifier: public(133)", "Delete PrimitiveType: void(134)", "Delete SimpleName: write(135)", "Delete SimpleName: DataOutput(136)", "Delete SimpleType: DataOutput(137)", "Delete SimpleName: out(138)", "Delete SingleVariableDeclaration(139)", "Delete SimpleName: IOException(140)", "Delete SimpleType: IOException(141)", "Delete SimpleName: UnsupportedOperationException(142)", "Delete SimpleType: UnsupportedOperationException(143)", "Delete StringLiteral: \"Server-side only filter, cannot be serialized!\"(144)", "Delete ClassInstanceCreation(145)", "Delete ThrowStatement(146)", "Delete Block(147)", "Delete MethodDeclaration(148)", "Delete SimpleName: Override(149)", "Delete MarkerAnnotation(150)", "Delete Modifier: public(151)", "Delete PrimitiveType: void(152)", "Delete SimpleName: readFields(153)", "Delete SimpleName: DataInput(154)", "Delete SimpleType: DataInput(155)", "Delete SimpleName: in(156)", "Delete SingleVariableDeclaration(157)", "Delete SimpleName: IOException(158)", "Delete SimpleType: IOException(159)", "Delete SimpleName: UnsupportedOperationException(160)", "Delete SimpleType: UnsupportedOperationException(161)", "Delete StringLiteral: \"Server-side only filter, cannot be deserialized!\"(162)", "Delete ClassInstanceCreation(163)", "Delete ThrowStatement(164)", "Delete Block(165)", "Delete MethodDeclaration(166)"]}}, {"NewerTimestampFilter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: org.apache.hadoop.hbase.Cell to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell"]}, {"root": "DEL TextElement: Note,<tt>this</tt> doesn't support ", "operations": ["DEL TextElement: Note,<tt>this</tt> doesn't support "]}, {"root": "DEL TagElement: @link", "operations": ["DEL SimpleName: DataOutput", "DEL SimpleName: write", "DEL TagElement: @link", "DEL MethodRefParameter", "DEL MethodRef", "DEL SimpleType: DataOutput"]}, {"root": "DEL TextElement:  or ", "operations": ["DEL TextElement:  or "]}, {"root": "DEL TagElement: @link", "operations": ["DEL TagElement: @link", "DEL MethodRefParameter", "DEL SimpleName: DataInput", "DEL MethodRef", "DEL SimpleType: DataInput", "DEL SimpleName: readFields"]}, {"root": "DEL TextElement: .", "operations": ["DEL TextElement: ."]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleType: DataOutput", "DEL StringLiteral: \"TimestampFilter is server-side only!\"", "DEL SimpleName: DataOutput", "DEL PrimitiveType: void", "DEL SimpleType: UnsupportedOperationException", "DEL SimpleName: Override", "DEL ClassInstanceCreation", "DEL SimpleName: UnsupportedOperationException", "DEL MarkerAnnotation", "DEL SimpleName: write", "DEL Modifier: public", "DEL ThrowStatement", "DEL Block", "DEL SimpleName: IOException", "DEL SingleVariableDeclaration", "DEL SimpleName: out", "DEL SimpleType: IOException"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleType: UnsupportedOperationException", "DEL SimpleType: IOException", "DEL StringLiteral: \"TimestampFilter is server-side only!\"", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: UnsupportedOperationException", "DEL MarkerAnnotation", "DEL SimpleName: readFields", "DEL ThrowStatement", "DEL SimpleName: IOException", "DEL SimpleType: DataInput", "DEL PrimitiveType: void", "DEL Modifier: public", "DEL SimpleName: DataInput", "DEL SimpleName: Override", "DEL SimpleName: in", "DEL Block"]}]}}, {"NewerTimestampFilter_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(63) at 4", "Insert QualifiedName: org.apache.hadoop.hbase.Cell(8) into ImportDeclaration(9) at 0", "Update SimpleType: KeyValue(61) to Cell", "Update SimpleName: KeyValue(60) to Cell", "Delete TextElement: Note,<tt>this</tt> doesn't support (15)", "Delete SimpleName: write(16)", "Delete SimpleName: DataOutput(17)", "Delete SimpleType: DataOutput(18)", "Delete MethodRefParameter(19)", "Delete MethodRef(20)", "Delete TagElement: @link(21)", "Delete TextElement:  or (22)", "Delete SimpleName: readFields(23)", "Delete SimpleName: DataInput(24)", "Delete SimpleType: DataInput(25)", "Delete MethodRefParameter(26)", "Delete MethodRef(27)", "Delete TagElement: @link(28)", "Delete TextElement: .(29)", "Delete SimpleName: Override(75)", "Delete MarkerAnnotation(76)", "Delete Modifier: public(77)", "Delete PrimitiveType: void(78)", "Delete SimpleName: write(79)", "Delete SimpleName: DataOutput(80)", "Delete SimpleType: DataOutput(81)", "Delete SimpleName: out(82)", "Delete SingleVariableDeclaration(83)", "Delete SimpleName: IOException(84)", "Delete SimpleType: IOException(85)", "Delete SimpleName: UnsupportedOperationException(86)", "Delete SimpleType: UnsupportedOperationException(87)", "Delete StringLiteral: \"TimestampFilter is server-side only!\"(88)", "Delete ClassInstanceCreation(89)", "Delete ThrowStatement(90)", "Delete Block(91)", "Delete MethodDeclaration(92)", "Delete SimpleName: Override(93)", "Delete MarkerAnnotation(94)", "Delete Modifier: public(95)", "Delete PrimitiveType: void(96)", "Delete SimpleName: readFields(97)", "Delete SimpleName: DataInput(98)", "Delete SimpleType: DataInput(99)", "Delete SimpleName: in(100)", "Delete SingleVariableDeclaration(101)", "Delete SimpleName: IOException(102)", "Delete SimpleType: IOException(103)", "Delete SimpleName: UnsupportedOperationException(104)", "Delete SimpleType: UnsupportedOperationException(105)", "Delete StringLiteral: \"TimestampFilter is server-side only!\"(106)", "Delete ClassInstanceCreation(107)", "Delete ThrowStatement(108)", "Delete Block(109)", "Delete MethodDeclaration(110)"]}}, {"IndexUpdateManager_cluster": {"actions": [{"root": "UPDATE from org.apache.hadoop.hbase.KeyValue to org.apache.hadoop.hbase.Cell", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.KeyValue from org.apache.hadoop.hbase.KeyValue to org.apache.hadoop.hbase.Cell"]}, {"root": "UPDATE from List<KeyValue> to List<Cell>", "operations": ["UPD ParameterizedType: List<KeyValue> from List<KeyValue> to List<Cell>"]}, {"root": "UPDATE from getFamilyMap to getFamilyCellMap", "operations": ["UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap", "UPD SimpleName: getFamilyMap from getFamilyMap to getFamilyCellMap"]}, {"root": "UPDATE from KeyValue to Cell", "operations": ["UPD SimpleType: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleName: KeyValue from KeyValue to Cell", "UPD SimpleType: KeyValue from KeyValue to Cell"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getValueOffset to MethodInvocation at 1", "INS SimpleName: kv to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 4", "operations": ["INS SimpleName: getValueLength to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: kv to MethodInvocation at 0"]}, {"root": "UPDATE from getValue to getValueArray", "operations": ["UPD SimpleName: getValue from getValue to getValueArray"]}]}}, {"IndexUpdateManager_diff": {"operations": ["Update QualifiedName: org.apache.hadoop.hbase.KeyValue(14) to org.apache.hadoop.hbase.Cell", "Update ParameterizedType: List<KeyValue>(762) to List<Cell>", "Update SimpleName: getFamilyMap(747) to getFamilyCellMap", "Update SimpleType: KeyValue(761) to Cell", "Update SimpleName: getFamilyMap(766) to getFamilyCellMap", "Update SimpleName: KeyValue(760) to Cell", "Update SimpleType: KeyValue(771) to Cell", "Update SimpleName: KeyValue(770) to Cell", "Insert MethodInvocation(789) into MethodInvocation(793) at 3", "Insert MethodInvocation(792) into MethodInvocation(793) at 4", "Update SimpleName: getValue(785) to getValueArray", "Insert SimpleName: kv(787) into MethodInvocation(789) at 0", "Insert SimpleName: getValueOffset(788) into MethodInvocation(789) at 1", "Insert SimpleName: kv(790) into MethodInvocation(792) at 0", "Insert SimpleName: getValueLength(791) into MethodInvocation(792) at 1"]}}], "commit_stats": [{"total_files": 126, "deleted_files": 1, "testing": "True", "maintenance": "True", "build": "True"}]}