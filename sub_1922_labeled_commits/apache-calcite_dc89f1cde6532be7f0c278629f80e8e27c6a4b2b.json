{"application": "apache-calcite", "csha": "dc89f1cde6532be7f0c278629f80e8e27c6a4b2b", "files": [{"RexImpTable_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS QualifiedName: org.eigenbase.sql.type.SqlTypeUtil to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 14"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS SimpleName: RexLiteral to SimpleType: RexLiteral at 0", "INS SimpleName: arg to MethodInvocation at 0", "INS SimpleName: translator to MethodInvocation at 0", "INS SimpleName: getType to MethodInvocation at 1", "INS SimpleType: RexLiteral to InstanceofExpression at 1", "INS SimpleType: RexLiteral to CastExpression at 0", "INS MethodInvocation to ReturnStatement at 0", "INS QualifiedName: NullAs.NULL to InfixExpression: == at 1", "INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: getType to MethodInvocation at 1", "INS IfStatement to Block at 2", "INS Block to MethodDeclaration at 6", "INS SimpleName: deref to MethodInvocation at 1", "INS InfixExpression: && to InfixExpression: && at 0", "INS MethodInvocation to InfixExpression: && at 0", "INS MethodInvocation to InstanceofExpression at 0", "INS SimpleName: arg to MethodInvocation at 2", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: RexToLixTranslator to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: RexLiteral to SimpleType: RexLiteral at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: nullAs to MethodInvocation at 5", "INS SimpleName: call to MethodInvocation at 0", "INS SimpleName: equalSansNullability to MethodInvocation at 1", "INS QualifiedName: translator.typeFactory to MethodInvocation at 4", "INS SimpleName: arg to MethodInvocation at 2", "INS SimpleName: translator to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: translateLiteral to MethodInvocation at 1", "INS SimpleName: call to MethodInvocation at 0", "INS CastExpression to MethodInvocation at 2", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: deref to MethodInvocation at 1", "INS QualifiedName: translator.typeFactory to MethodInvocation at 2", "INS InfixExpression: == to InfixExpression: && at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: SqlTypeUtil to MethodInvocation at 0", "INS SimpleName: getType to MethodInvocation at 1", "INS InstanceofExpression to InfixExpression: && at 1", "INS SimpleName: nullAs to InfixExpression: == at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV IfStatement to Block at 1", "MOV ReturnStatement to Block at 3"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"RexImpTable_diff": {"operations": ["Insert ImportDeclaration(29) into CompilationUnit(6227) at 14", "Insert QualifiedName: org.eigenbase.sql.type.SqlTypeUtil(28) into ImportDeclaration(29) at 0", "Insert Block(5510) into MethodDeclaration(5511) at 6", "Move VariableDeclarationStatement(5444) into Block(5510) at 0", "Move IfStatement(5460) into Block(5510) at 1", "Insert IfStatement(5502) into Block(5510) at 2", "Move ReturnStatement(5467) into Block(5510) at 3", "Insert InfixExpression: &&(5484) into IfStatement(5502) at 0", "Insert Block(5501) into IfStatement(5502) at 1", "Insert InfixExpression: &&(5476) into InfixExpression: &&(5484) at 0", "Insert InstanceofExpression(5483) into InfixExpression: &&(5484) at 1", "Insert ReturnStatement(5500) into Block(5501) at 0", "Insert MethodInvocation(5472) into InfixExpression: &&(5476) at 0", "Insert InfixExpression: ==(5475) into InfixExpression: &&(5476) at 1", "Insert MethodInvocation(5480) into InstanceofExpression(5483) at 0", "Insert SimpleType: RexLiteral(5482) into InstanceofExpression(5483) at 1", "Insert MethodInvocation(5499) into ReturnStatement(5500) at 0", "Insert SimpleName: SqlTypeUtil(5463) into MethodInvocation(5472) at 0", "Insert SimpleName: equalSansNullability(5464) into MethodInvocation(5472) at 1", "Insert QualifiedName: translator.typeFactory(5465) into MethodInvocation(5472) at 2", "Insert MethodInvocation(5468) into MethodInvocation(5472) at 3", "Insert MethodInvocation(5471) into MethodInvocation(5472) at 4", "Insert SimpleName: nullAs(5473) into InfixExpression: ==(5475) at 0", "Insert QualifiedName: NullAs.NULL(5474) into InfixExpression: ==(5475) at 1", "Insert SimpleName: translator(5477) into MethodInvocation(5480) at 0", "Insert SimpleName: deref(5478) into MethodInvocation(5480) at 1", "Insert SimpleName: arg(5479) into MethodInvocation(5480) at 2", "Insert SimpleName: RexLiteral(5481) into SimpleType: RexLiteral(5482) at 0", "Insert SimpleName: RexToLixTranslator(5485) into MethodInvocation(5499) at 0", "Insert SimpleName: translateLiteral(5486) into MethodInvocation(5499) at 1", "Insert CastExpression(5493) into MethodInvocation(5499) at 2", "Insert MethodInvocation(5496) into MethodInvocation(5499) at 3", "Insert QualifiedName: translator.typeFactory(5497) into MethodInvocation(5499) at 4", "Insert SimpleName: nullAs(5498) into MethodInvocation(5499) at 5", "Insert SimpleName: call(5466) into MethodInvocation(5468) at 0", "Insert SimpleName: getType(5467) into MethodInvocation(5468) at 1", "Insert SimpleName: arg(5469) into MethodInvocation(5471) at 0", "Insert SimpleName: getType(5470) into MethodInvocation(5471) at 1", "Insert SimpleType: RexLiteral(5488) into CastExpression(5493) at 0", "Insert MethodInvocation(5492) into CastExpression(5493) at 1", "Insert SimpleName: call(5494) into MethodInvocation(5496) at 0", "Insert SimpleName: getType(5495) into MethodInvocation(5496) at 1", "Insert SimpleName: RexLiteral(5487) into SimpleType: RexLiteral(5488) at 0", "Insert SimpleName: translator(5489) into MethodInvocation(5492) at 0", "Insert SimpleName: deref(5490) into MethodInvocation(5492) at 1", "Insert SimpleName: arg(5491) into MethodInvocation(5492) at 2", "Delete Block(5468)"]}}, {"RexToLixTranslator_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 23", "operations": ["INS TextElement: Dereferences an expression if it is a to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: RexLocalRef to InstanceofExpression at 1", "INS SimpleType: RexLocalRef to VariableDeclarationStatement at 0", "INS QualifiedName: org.eigenbase.rex.RexLocalRef to TagElement: @link at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: getIndex to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: expr to InstanceofExpression at 0", "INS SimpleName: RexLocalRef to SimpleType: RexLocalRef at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: ref to VariableDeclarationFragment at 0", "INS SimpleName: ref to MethodInvocation at 0", "INS SimpleType: RexNode to MethodDeclaration at 2", "INS InstanceofExpression to IfStatement at 0", "INS SimpleName: expr to ReturnStatement at 0", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS Block to IfStatement at 2", "INS TextElement: .  to TagElement at 2", "INS MethodInvocation to ReturnStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Modifier: public to MethodDeclaration at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: deref to MethodDeclaration at 3", "INS Block to MethodDeclaration at 5", "INS ReturnStatement to Block at 1", "INS MethodDeclaration to TypeDeclaration: class at 23", "INS SimpleName: RexLocalRef to SimpleType: RexLocalRef at 0", "INS Block to IfStatement at 1", "INS TagElement: @link to TagElement at 1", "INS IfStatement to Block at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: literal to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: RexLiteral to SingleVariableDeclaration at 0"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV CastExpression to MethodInvocation at 1"]}, {"root": "UPDATE from get to deref", "operations": ["UPD SimpleName: get from get to deref"]}, {"root": "UPDATE from getIndex to expr", "operations": ["UPD SimpleName: getIndex from getIndex to expr"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getIndex to MethodInvocation at 2"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV CastExpression to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "DEL MethodInvocation", "operations": ["DEL ParenthesizedExpression", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: expr", "operations": ["DEL SimpleName: expr"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: literal", "DEL Modifier: final", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment"]}]}}, {"RexToLixTranslator_diff": {"operations": ["Insert MethodDeclaration(1320) into TypeDeclaration: class(3163) at 23", "Insert Javadoc(1283) into MethodDeclaration(1320) at 0", "Insert Modifier: public(1284) into MethodDeclaration(1320) at 1", "Insert SimpleType: RexNode(1286) into MethodDeclaration(1320) at 2", "Insert SimpleName: deref(1287) into MethodDeclaration(1320) at 3", "Move SingleVariableDeclaration(1415) into MethodDeclaration(1320) at 4", "Insert Block(1319) into MethodDeclaration(1320) at 5", "Insert SingleVariableDeclaration(1452) into MethodDeclaration(1751) at 5", "Insert TagElement(1282) into Javadoc(1283) at 0", "Insert SimpleName: RexNode(1285) into SimpleType: RexNode(1286) at 0", "Insert IfStatement(1318) into Block(1319) at 0", "Move SimpleType: RexLiteral(1430) into SingleVariableDeclaration(1452) at 0", "Insert SimpleName: literal(1451) into SingleVariableDeclaration(1452) at 1", "Insert TextElement: Dereferences an expression if it is a(1278) into TagElement(1282) at 0", "Insert TagElement: @link(1280) into TagElement(1282) at 1", "Insert TextElement: . (1281) into TagElement(1282) at 2", "Insert InstanceofExpression(1295) into IfStatement(1318) at 0", "Insert Block(1314) into IfStatement(1318) at 1", "Insert Block(1317) into IfStatement(1318) at 2", "Insert Modifier: final(1465) into VariableDeclarationStatement(1473) at 0", "Insert QualifiedName: org.eigenbase.rex.RexLocalRef(1279) into TagElement: @link(1280) at 0", "Insert SimpleName: expr(1292) into InstanceofExpression(1295) at 0", "Insert SimpleType: RexLocalRef(1294) into InstanceofExpression(1295) at 1", "Insert VariableDeclarationStatement(1304) into Block(1314) at 0", "Insert ReturnStatement(1313) into Block(1314) at 1", "Insert ReturnStatement(1316) into Block(1317) at 0", "Move CastExpression(1435) into MethodInvocation(1240) at 1", "Insert SimpleName: RexLocalRef(1293) into SimpleType: RexLocalRef(1294) at 0", "Insert SimpleType: RexLocalRef(1297) into VariableDeclarationStatement(1304) at 0", "Insert VariableDeclarationFragment(1303) into VariableDeclarationStatement(1304) at 1", "Insert MethodInvocation(1312) into ReturnStatement(1313) at 0", "Insert SimpleName: expr(1315) into ReturnStatement(1316) at 0", "Update SimpleName: get(1215) to deref", "Update SimpleName: getIndex(1221) to expr", "Move SimpleName: getIndex(1221) into MethodInvocation(1214) at 2", "Insert SimpleName: RexLocalRef(1296) into SimpleType: RexLocalRef(1297) at 0", "Insert SimpleName: ref(1298) into VariableDeclarationFragment(1303) at 0", "Move CastExpression(1219) into VariableDeclarationFragment(1303) at 1", "Move MethodInvocation(1214) into MethodInvocation(1312) at 0", "Insert SimpleName: get(1308) into MethodInvocation(1312) at 1", "Insert MethodInvocation(1311) into MethodInvocation(1312) at 2", "Insert SimpleName: ref(1309) into MethodInvocation(1311) at 0", "Insert SimpleName: getIndex(1310) into MethodInvocation(1311) at 1", "Delete ParenthesizedExpression(1220)", "Delete MethodInvocation(1222)", "Delete SimpleName: expr(1231)", "Delete Modifier: final(1428)", "Delete SimpleName: literal(1431)", "Delete VariableDeclarationFragment(1436)", "Delete VariableDeclarationStatement(1437)"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}