{"application": "google-closure-compiler", "csha": "183a7c95b74ffb40700be69389d3df4864d52dd2", "files": [{"ClosureCheckModule_cluster": {"actions": [{"root": "UPDATE from getLhsNodesOfDeclaration to findLhsNodesInNode", "operations": ["UPD SimpleName: getLhsNodesOfDeclaration from getLhsNodesOfDeclaration to findLhsNodesInNode"]}]}}, {"ClosureCheckModule_diff": {"operations": ["Update SimpleName: getLhsNodesOfDeclaration(1554) to findLhsNodesInNode"]}}, {"ClosureRewriteModule_cluster": {"actions": [{"root": "UPDATE from getLhsNodesOfDeclaration to findLhsNodesInNode", "operations": ["UPD SimpleName: getLhsNodesOfDeclaration from getLhsNodesOfDeclaration to findLhsNodesInNode"]}]}}, {"ClosureRewriteModule_diff": {"operations": ["Update SimpleName: getLhsNodesOfDeclaration(3782) to findLhsNodesInNode"]}}, {"CoalesceVariableNames_cluster": {"actions": [{"root": "UPDATE from getLhsNodesOfDeclaration to findLhsNodesInNode", "operations": ["UPD SimpleName: getLhsNodesOfDeclaration from getLhsNodesOfDeclaration to findLhsNodesInNode"]}]}}, {"CoalesceVariableNames_diff": {"operations": ["Update SimpleName: getLhsNodesOfDeclaration(848) to findLhsNodesInNode"]}}, {"ConvertToTypedInterface_cluster": {"actions": [{"root": "UPDATE from getLhsNodesOfDeclaration to findLhsNodesInNode", "operations": ["UPD SimpleName: getLhsNodesOfDeclaration from getLhsNodesOfDeclaration to findLhsNodesInNode"]}]}}, {"ConvertToTypedInterface_diff": {"operations": ["Update SimpleName: getLhsNodesOfDeclaration(1179) to findLhsNodesInNode"]}}, {"Es6SyntacticScopeCreator_cluster": {"actions": [{"root": "UPDATE from getLhsNodesOfDeclaration to findLhsNodesInNode", "operations": ["UPD SimpleName: getLhsNodesOfDeclaration from getLhsNodesOfDeclaration to findLhsNodesInNode"]}]}}, {"Es6SyntacticScopeCreator_diff": {"operations": ["Update SimpleName: getLhsNodesOfDeclaration(557) to findLhsNodesInNode"]}}, {"LiveVariablesAnalysisEs6_cluster": {"actions": [{"root": "UPDATE from getLhsNodesOfDeclaration to findLhsNodesInNode", "operations": ["UPD SimpleName: getLhsNodesOfDeclaration from getLhsNodesOfDeclaration to findLhsNodesInNode"]}]}}, {"LiveVariablesAnalysisEs6_diff": {"operations": ["Update SimpleName: getLhsNodesOfDeclaration(864) to findLhsNodesInNode"]}}, {"NameAnalyzer_cluster": {"actions": [{"root": "UPDATE from getLhsNodesOfDeclaration to findLhsNodesInNode", "operations": ["UPD SimpleName: getLhsNodesOfDeclaration from getLhsNodesOfDeclaration to findLhsNodesInNode", "UPD SimpleName: getLhsNodesOfDeclaration from getLhsNodesOfDeclaration to findLhsNodesInNode"]}]}}, {"NameAnalyzer_diff": {"operations": ["Update SimpleName: getLhsNodesOfDeclaration(1998) to findLhsNodesInNode", "Update SimpleName: getLhsNodesOfDeclaration(1555) to findLhsNodesInNode"]}}, {"Normalize_cluster": {"actions": [{"root": "UPDATE from getLhsNodesOfDeclaration to findLhsNodesInNode", "operations": ["UPD SimpleName: getLhsNodesOfDeclaration from getLhsNodesOfDeclaration to findLhsNodesInNode"]}]}}, {"Normalize_diff": {"operations": ["Update SimpleName: getLhsNodesOfDeclaration(1672) to findLhsNodesInNode"]}}, {"PureFunctionIdentifier_cluster": {"actions": [{"root": "UPDATE from only assume literals, primatives, and operations on primatives are local. to only assume literals, primitives, and operations on primitives are local.", "operations": ["UPD TextElement: only assume literals, primatives, and operations on primatives are local. from only assume literals, primatives, and operations on primatives are local. to only assume literals, primitives, and operations on primitives are local."]}, {"root": "UPDATE from unique defintion for a name, there may be many possible definitions for a given call site. In to unique definition for a name, there may be many possible definitions for a given call site. In", "operations": ["UPD TextElement: unique defintion for a name, there may be many possible definitions for a given call site. In from unique defintion for a name, there may be many possible definitions for a given call site. In to unique definition for a name, there may be many possible definitions for a given call site. In"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "INS Block to IfStatement at 2", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: NodeUtil to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS SimpleName: names to Assignment: = at 0", "INS SimpleType: Iterable to ParameterizedType: Iterable<Node> at 0", "INS Block to IfStatement at 1", "INS SimpleName: names to EnhancedForStatement at 1", "INS SimpleName: Iterable to SimpleType: Iterable at 0", "INS SimpleName: name to SingleVariableDeclaration at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: names to VariableDeclarationFragment at 0", "INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: of to MethodInvocation at 1", "INS Block to IfStatement at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: findLhsNodesInNode to MethodInvocation at 1", "INS SimpleName: op to MethodInvocation at 2", "INS SimpleName: lhs to MethodInvocation at 2", "INS ParameterizedType: Iterable<Node> to VariableDeclarationStatement at 0", "INS EnhancedForStatement to Block at 2", "INS SimpleName: Node to SimpleType: Node at 0", "INS SimpleName: names to Assignment: = at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: Node to ParameterizedType: Iterable<Node> at 1", "INS SimpleName: ImmutableList to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0", "MOV Block to EnhancedForStatement at 2"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: Node to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: Node to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: Node to VariableDeclarationStatement at 0", "INS SimpleName: Node to SimpleType: Node at 0"]}, {"root": "UPDATE from lhs to name", "operations": ["UPD SimpleName: lhs from lhs to name"]}, {"root": "UPDATE from op to NodeUtil", "operations": ["UPD SimpleName: op from op to NodeUtil"]}, {"root": "UPDATE from getLastChild to getRValueOfLValue", "operations": ["UPD SimpleName: getLastChild from getLastChild to getRValueOfLValue"]}, {"root": "INS SimpleName: name to MethodInvocation at 2", "operations": ["INS SimpleName: name to MethodInvocation at 2"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.base.Preconditions"]}, {"root": "DEL SimpleName: Preconditions", "operations": ["DEL SimpleName: Preconditions"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: lhs", "DEL ExpressionStatement", "DEL SimpleName: NodeUtil", "DEL SimpleName: lhs", "DEL StringLiteral: \"Unexpected LHS expression:\"", "DEL MethodInvocation", "DEL SimpleName: isGet", "DEL SimpleName: isName", "DEL SimpleName: Preconditions", "DEL InfixExpression: ||", "DEL MethodInvocation", "DEL SimpleName: lhs", "DEL SimpleName: checkState", "DEL MethodInvocation"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement"]}]}}, {"PureFunctionIdentifier_diff": {"operations": ["Update TextElement: only assume literals, primatives, and operations on primatives are local.(89) to only assume literals, primitives, and operations on primitives are local.", "Update TextElement: unique defintion for a name, there may be many possible definitions for a given call site. In(810) to unique definition for a name, there may be many possible definitions for a given call site. In", "Move MethodInvocation(1991) into IfStatement(2067) at 0", "Move Block(2050) into IfStatement(2067) at 1", "Insert Block(2066) into IfStatement(2067) at 2", "Insert VariableDeclarationStatement(1972) into Block(2066) at 0", "Insert IfStatement(1992) into Block(2066) at 1", "Insert EnhancedForStatement(2065) into Block(2066) at 2", "Insert ParameterizedType: Iterable<Node>(1969) into VariableDeclarationStatement(1972) at 0", "Insert VariableDeclarationFragment(1971) into VariableDeclarationStatement(1972) at 1", "Move MethodInvocation(1921) into IfStatement(1992) at 0", "Insert Block(1983) into IfStatement(1992) at 1", "Insert Block(1991) into IfStatement(1992) at 2", "Insert SingleVariableDeclaration(1996) into EnhancedForStatement(2065) at 0", "Insert SimpleName: names(1997) into EnhancedForStatement(2065) at 1", "Move Block(1987) into EnhancedForStatement(2065) at 2", "Insert SimpleType: Iterable(1966) into ParameterizedType: Iterable<Node>(1969) at 0", "Insert SimpleType: Node(1968) into ParameterizedType: Iterable<Node>(1969) at 1", "Insert SimpleName: names(1970) into VariableDeclarationFragment(1971) at 0", "Insert ExpressionStatement(1982) into Block(1983) at 0", "Insert ExpressionStatement(1990) into Block(1991) at 0", "Move SimpleType: Node(1952) into SingleVariableDeclaration(1996) at 0", "Insert SimpleName: name(1995) into SingleVariableDeclaration(1996) at 1", "Insert SimpleName: Iterable(1965) into SimpleType: Iterable(1966) at 0", "Insert SimpleName: Node(1967) into SimpleType: Node(1968) at 0", "Insert Assignment: =(1981) into ExpressionStatement(1982) at 0", "Insert Assignment: =(1989) into ExpressionStatement(1990) at 0", "Insert SimpleName: names(1976) into Assignment: =(1981) at 0", "Insert MethodInvocation(1980) into Assignment: =(1981) at 1", "Insert SimpleName: names(1984) into Assignment: =(1989) at 0", "Insert MethodInvocation(1988) into Assignment: =(1989) at 1", "Insert SimpleName: ImmutableList(1977) into MethodInvocation(1980) at 0", "Insert SimpleName: of(1978) into MethodInvocation(1980) at 1", "Insert SimpleName: lhs(1979) into MethodInvocation(1980) at 2", "Insert SimpleName: NodeUtil(1985) into MethodInvocation(1988) at 0", "Insert SimpleName: findLhsNodesInNode(1986) into MethodInvocation(1988) at 1", "Insert SimpleName: op(1987) into MethodInvocation(1988) at 2", "Insert SimpleType: Node(2028) into VariableDeclarationStatement(2035) at 0", "Update SimpleName: lhs(1927) to name", "Insert SimpleName: Node(2027) into SimpleType: Node(2028) at 0", "Update SimpleName: op(1954) to NodeUtil", "Update SimpleName: getLastChild(1955) to getRValueOfLValue", "Insert SimpleName: name(2032) into MethodInvocation(2033) at 2", "Delete QualifiedName: com.google.common.base.Preconditions(12)", "Delete ImportDeclaration(13)", "Delete SimpleName: Preconditions(1709)", "Delete SimpleName: Preconditions(1905)", "Delete SimpleName: checkState(1906)", "Delete SimpleName: lhs(1907)", "Delete SimpleName: isName(1908)", "Delete MethodInvocation(1909)", "Delete SimpleName: NodeUtil(1910)", "Delete SimpleName: isGet(1911)", "Delete SimpleName: lhs(1912)", "Delete MethodInvocation(1913)", "Delete InfixExpression: ||(1914)", "Delete StringLiteral: \"Unexpected LHS expression:\"(1915)", "Delete SimpleName: lhs(1916)", "Delete MethodInvocation(1917)", "Delete ExpressionStatement(1918)", "Delete IfStatement(2051)"]}}, {"RemoveUnusedVars_cluster": {"actions": [{"root": "UPDATE from getLhsNodesOfDeclaration to findLhsNodesInNode", "operations": ["UPD SimpleName: getLhsNodesOfDeclaration from getLhsNodesOfDeclaration to findLhsNodesInNode"]}]}}, {"RemoveUnusedVars_diff": {"operations": ["Update SimpleName: getLhsNodesOfDeclaration(1192) to findLhsNodesInNode"]}}], "commit_stats": [{"total_files": 13, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}