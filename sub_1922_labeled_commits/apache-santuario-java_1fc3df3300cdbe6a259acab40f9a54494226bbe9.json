{"application": "apache-santuario-java", "csha": "1fc3df3300cdbe6a259acab40f9a54494226bbe9", "files": [{"Init_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 12"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 3"]}, {"root": "UPDATE from org.apache.xml.security.keys.KeyInfo to org.apache.xml.security.utils.ElementProxy", "operations": ["UPD QualifiedName: org.apache.xml.security.keys.KeyInfo from org.apache.xml.security.keys.KeyInfo to org.apache.xml.security.utils.ElementProxy"]}, {"root": "INS Modifier: private to FieldDeclaration at 1", "operations": ["INS Modifier: private to FieldDeclaration at 1"]}, {"root": "INS Modifier: synchronized to MethodDeclaration at 2", "operations": ["INS Modifier: synchronized to MethodDeclaration at 2"]}, {"root": "UPDATE from _alreadyInitialized to alreadyInitialized", "operations": ["UPD SimpleName: _alreadyInitialized from _alreadyInitialized to alreadyInitialized", "UPD SimpleName: _alreadyInitialized from _alreadyInitialized to alreadyInitialized", "UPD SimpleName: _alreadyInitialized from _alreadyInitialized to alreadyInitialized"]}, {"root": "UPDATE from  true if the librairy is already initialized.      to  true if the library is already initialized.     ", "operations": ["UPD TextElement:  true if the librairy is already initialized.      from  true if the librairy is already initialized.      to  true if the library is already initialized.     "]}, {"root": "UPDATE from Init._alreadyInitialized to Init.alreadyInitialized", "operations": ["UPD QualifiedName: Init._alreadyInitialized from Init._alreadyInitialized to Init.alreadyInitialized"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1", "MOV SimpleType: InputStream to MethodDeclaration at 1"]}, {"root": "INS ParameterizedType: PrivilegedAction<InputStream> to ClassInstanceCreation at 0", "operations": ["INS SimpleName: InputStream to SimpleType: InputStream at 0", "INS ParameterizedType: PrivilegedAction<InputStream> to ClassInstanceCreation at 0", "INS SimpleType: InputStream to ParameterizedType: PrivilegedAction<InputStream> at 1"]}, {"root": "MOVE from ParameterizedType: PrivilegedAction<InputStream>", "operations": ["MOV SimpleType: PrivilegedAction to ParameterizedType: PrivilegedAction<InputStream> at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 3"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS SimpleName: ElementProxy to MethodInvocation at 0", "operations": ["INS SimpleName: ElementProxy to MethodInvocation at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from \"Not able to found dependecies for algorithm, I'm keep working.\" to \"Not able to found dependencies for algorithm, I'll keep working.\"", "operations": ["UPD StringLiteral: \"Not able to found dependecies for algorithm, I'm keep working.\" from \"Not able to found dependecies for algorithm, I'm keep working.\" to \"Not able to found dependencies for algorithm, I'll keep working.\""]}, {"root": "DEL TagElement: @author", "operations": ["DEL TagElement: @author", "DEL TextElement:  $Author$"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL PrimitiveType: long", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 0", "DEL SimpleName: XX_configure_i18n_end", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL SimpleName: XX_configure_reg_c14n_start", "DEL PrimitiveType: long"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL NumberLiteral: 0", "DEL PrimitiveType: long", "DEL VariableDeclarationStatement", "DEL SimpleName: XX_configure_reg_c14n_end", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL NumberLiteral: 0", "DEL PrimitiveType: long", "DEL SimpleName: XX_configure_reg_jcemapper_end", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: XX_configure_reg_keyInfo_start", "DEL NumberLiteral: 0", "DEL PrimitiveType: long", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: XX_configure_reg_keyResolver_end", "DEL NumberLiteral: 0", "DEL PrimitiveType: long", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL NumberLiteral: 0", "DEL PrimitiveType: long", "DEL VariableDeclarationFragment", "DEL SimpleName: XX_configure_reg_prefixes_start"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 0", "DEL PrimitiveType: long", "DEL SimpleName: XX_configure_reg_resourceresolver_start"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL NumberLiteral: 0", "DEL SimpleName: XX_configure_reg_sigalgos_end", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL PrimitiveType: long"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL PrimitiveType: long", "DEL SimpleName: XX_configure_reg_transforms_end"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL NumberLiteral: 0", "DEL VariableDeclarationStatement", "DEL SimpleName: XX_configure_reg_keyInfo_end", "DEL VariableDeclarationFragment", "DEL PrimitiveType: long"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL NumberLiteral: 0", "DEL PrimitiveType: long", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: XX_configure_reg_keyResolver_start"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL PrimitiveType: long", "DEL SimpleName: currentTimeMillis", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: System", "DEL VariableDeclarationStatement", "DEL SimpleName: XX_init_start"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: XX_prng_start", "DEL SimpleName: currentTimeMillis", "DEL PrimitiveType: long", "DEL SimpleName: System", "DEL VariableDeclarationStatement", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: System", "DEL PrimitiveType: long", "DEL VariableDeclarationFragment", "DEL SimpleName: XX_prng_end", "DEL SimpleName: currentTimeMillis"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: currentTimeMillis", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: System", "DEL PrimitiveType: long", "DEL VariableDeclarationFragment", "DEL SimpleName: XX_parsing_start"]}, {"root": "DEL SimpleType: Object", "operations": ["DEL SimpleType: Object", "DEL SimpleName: Object"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL PrimitiveType: long", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: currentTimeMillis", "DEL SimpleName: System", "DEL SimpleName: XX_parsing_end"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: XX_configure_i18n_start", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL PrimitiveType: long"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: XX_configure_reg_transforms_start", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 0", "DEL PrimitiveType: long"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: XX_configure_reg_jcemapper_start", "DEL PrimitiveType: long", "DEL NumberLiteral: 0"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL PrimitiveType: long", "DEL VariableDeclarationStatement", "DEL SimpleName: XX_configure_reg_sigalgos_start"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: XX_configure_reg_resourceresolver_end", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL PrimitiveType: long", "DEL VariableDeclarationStatement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL PrimitiveType: long", "DEL VariableDeclarationStatement", "DEL SimpleName: XX_configure_reg_prefixes_end", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: System", "DEL MethodInvocation", "DEL Assignment: =", "DEL ExpressionStatement", "DEL SimpleName: currentTimeMillis", "DEL SimpleName: XX_configure_i18n_start"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL SimpleName: XX_configure_i18n_end", "DEL SimpleName: System", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: currentTimeMillis"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: currentTimeMillis", "DEL SimpleName: System", "DEL MethodInvocation", "DEL SimpleName: XX_configure_reg_c14n_start", "DEL ExpressionStatement", "DEL Assignment: ="]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: forName", "DEL SimpleName: Class", "DEL MethodInvocation", "DEL SimpleName: JAVACLASS", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: currentTimeMillis", "DEL SimpleName: System", "DEL ExpressionStatement", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: XX_configure_reg_c14n_end"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: XX_configure_reg_transforms_start", "DEL ExpressionStatement", "DEL SimpleName: System", "DEL Assignment: =", "DEL SimpleName: currentTimeMillis", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: JAVACLASS", "DEL SimpleName: forName", "DEL SimpleName: Class", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: XX_configure_reg_transforms_end", "DEL MethodInvocation", "DEL SimpleName: System", "DEL SimpleName: currentTimeMillis", "DEL Assignment: ="]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: currentTimeMillis", "DEL SimpleName: XX_configure_reg_jcemapper_start", "DEL Assignment: =", "DEL SimpleName: System", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: System", "DEL SimpleName: XX_configure_reg_jcemapper_end", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: currentTimeMillis", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: XX_configure_reg_sigalgos_start", "DEL SimpleName: currentTimeMillis", "DEL Assignment: =", "DEL ExpressionStatement", "DEL SimpleName: System", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: forName", "DEL SimpleName: JAVACLASS", "DEL SimpleName: Class"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: System", "DEL Assignment: =", "DEL SimpleName: currentTimeMillis", "DEL SimpleName: XX_configure_reg_sigalgos_end", "DEL ExpressionStatement", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: XX_configure_reg_resourceresolver_start", "DEL SimpleName: System", "DEL MethodInvocation", "DEL SimpleName: currentTimeMillis", "DEL Assignment: ="]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: XX_configure_reg_resourceresolver_end", "DEL Assignment: =", "DEL SimpleName: currentTimeMillis", "DEL ExpressionStatement", "DEL SimpleName: System", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: System", "DEL SimpleName: currentTimeMillis", "DEL Assignment: =", "DEL SimpleName: XX_configure_reg_keyResolver_start", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: XX_configure_reg_keyResolver_end", "DEL SimpleName: System", "DEL MethodInvocation", "DEL SimpleName: currentTimeMillis", "DEL Assignment: =", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL SimpleName: System", "DEL SimpleName: currentTimeMillis", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: XX_configure_reg_prefixes_start"]}, {"root": "DEL QualifiedName: org.apache.xml.security.utils.ElementProxy", "operations": ["DEL QualifiedName: org.apache.xml.security.utils.ElementProxy"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL SimpleName: XX_configure_reg_prefixes_end", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: System", "DEL SimpleName: currentTimeMillis"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: XX_init_end", "DEL VariableDeclarationFragment", "DEL SimpleName: currentTimeMillis", "DEL VariableDeclarationStatement", "DEL SimpleName: System", "DEL PrimitiveType: long", "DEL MethodInvocation"]}, {"root": "DEL IfStatement", "operations": ["DEL StringLiteral: \" ms\"", "DEL SimpleName: XX_prng_end", "DEL InfixExpression: +", "DEL ParenthesizedExpression", "DEL ParenthesizedExpression", "DEL SimpleName: XX_configure_reg_c14n_end", "DEL ParenthesizedExpression", "DEL ParenthesizedExpression", "DEL SimpleName: log", "DEL SimpleName: debug", "DEL InfixExpression: +", "DEL InfixExpression: -", "DEL SimpleName: XX_configure_reg_sigalgos_start", "DEL ExpressionStatement", "DEL SimpleName: log", "DEL ParenthesizedExpression", "DEL SimpleName: log", "DEL StringLiteral: \"  XX_configure_reg_keyResolver      \"", "DEL MethodInvocation", "DEL CastExpression", "DEL SimpleName: XX_configure_reg_transforms_start", "DEL IfStatement", "DEL PrimitiveType: int", "DEL ParenthesizedExpression", "DEL ParenthesizedExpression", "DEL SimpleName: debug", "DEL SimpleName: debug", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL SimpleName: XX_configure_reg_c14n_start", "DEL InfixExpression: -", "DEL ExpressionStatement", "DEL SimpleName: XX_configure_reg_transforms_end", "DEL SimpleName: XX_configure_reg_prefixes_end", "DEL PrimitiveType: int", "DEL SimpleName: debug", "DEL PrimitiveType: int", "DEL PrimitiveType: int", "DEL StringLiteral: \" ms\"", "DEL StringLiteral: \"  XX_configure_i18n                 \"", "DEL StringLiteral: \"XX_init                             \"", "DEL StringLiteral: \"  XX_configure_reg_sigalgos         \"", "DEL ParenthesizedExpression", "DEL CastExpression", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL PrimitiveType: int", "DEL SimpleName: log", "DEL StringLiteral: \"  XX_configure_reg_keyInfo          \"", "DEL CastExpression", "DEL SimpleName: XX_configure_reg_resourceresolver_start", "DEL CastExpression", "DEL InfixExpression: -", "DEL ParenthesizedExpression", "DEL StringLiteral: \" ms\"", "DEL CastExpression", "DEL ExpressionStatement", "DEL SimpleName: XX_configure_reg_keyResolver_end", "DEL MethodInvocation", "DEL SimpleName: XX_configure_reg_resourceresolver_end", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleName: log", "DEL StringLiteral: \"  XX_parsing                        \"", "DEL ExpressionStatement", "DEL SimpleName: debug", "DEL ParenthesizedExpression", "DEL ParenthesizedExpression", "DEL ParenthesizedExpression", "DEL ExpressionStatement", "DEL StringLiteral: \" ms\"", "DEL CastExpression", "DEL ParenthesizedExpression", "DEL PrimitiveType: int", "DEL SimpleName: debug", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL ParenthesizedExpression", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL SimpleName: XX_configure_reg_sigalgos_end", "DEL InfixExpression: -", "DEL SimpleName: XX_init_end", "DEL SimpleName: XX_parsing_start", "DEL ExpressionStatement", "DEL InfixExpression: -", "DEL MethodInvocation", "DEL SimpleName: XX_configure_reg_jcemapper_start", "DEL ParenthesizedExpression", "DEL ParenthesizedExpression", "DEL SimpleName: XX_configure_reg_keyInfo_start", "DEL InfixExpression: +", "DEL SimpleName: XX_prng_start", "DEL MethodInvocation", "DEL SimpleName: XX_parsing_end", "DEL MethodInvocation", "DEL SimpleName: log", "DEL InfixExpression: -", "DEL CastExpression", "DEL ExpressionStatement", "DEL StringLiteral: \" ms\"", "DEL ParenthesizedExpression", "DEL InfixExpression: -", "DEL SimpleName: log", "DEL SimpleName: debug", "DEL CastExpression", "DEL ParenthesizedExpression", "DEL CastExpression", "DEL MethodInvocation", "DEL StringLiteral: \" ms\"", "DEL SimpleName: XX_configure_i18n_end", "DEL SimpleName: log", "DEL SimpleName: debug", "DEL ParenthesizedExpression", "DEL SimpleName: XX_configure_i18n_start", "DEL InfixExpression: -", "DEL SimpleName: XX_configure_reg_jcemapper_end", "DEL StringLiteral: \" ms\"", "DEL StringLiteral: \" ms\"", "DEL StringLiteral: \"  XX_configure_reg_transforms       \"", "DEL InfixExpression: +", "DEL SimpleName: log", "DEL SimpleName: debug", "DEL InfixExpression: -", "DEL StringLiteral: \" ms\"", "DEL SimpleName: XX_configure_reg_keyResolver_start", "DEL ParenthesizedExpression", "DEL StringLiteral: \"  XX_configure_reg_resourceresolver \"", "DEL InfixExpression: +", "DEL InfixExpression: +", "DEL SimpleName: log", "DEL StringLiteral: \" ms\"", "DEL InfixExpression: +", "DEL PrimitiveType: int", "DEL SimpleName: XX_configure_reg_prefixes_start", "DEL PrimitiveType: int", "DEL SimpleName: isDebugEnabled", "DEL SimpleName: debug", "DEL CastExpression", "DEL StringLiteral: \"  XX_configure_reg_c14n             \"", "DEL SimpleName: log", "DEL ParenthesizedExpression", "DEL InfixExpression: -", "DEL SimpleName: debug", "DEL SimpleName: log", "DEL SimpleName: XX_init_start", "DEL SimpleName: log", "DEL Block", "DEL ParenthesizedExpression", "DEL InfixExpression: +", "DEL SimpleName: XX_configure_reg_keyInfo_end", "DEL CastExpression", "DEL ParenthesizedExpression", "DEL StringLiteral: \"  XX_prng                           \"", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL StringLiteral: \"  XX_configure_reg_prefixes         \"", "DEL StringLiteral: \" ms\"", "DEL PrimitiveType: int", "DEL InfixExpression: -", "DEL MethodInvocation", "DEL CastExpression", "DEL InfixExpression: -", "DEL SimpleName: debug", "DEL StringLiteral: \"  XX_configure_reg_jcemapper        \"", "DEL ExpressionStatement", "DEL StringLiteral: \" ms\""]}]}}, {"Init_diff": {"operations": ["Move ImportDeclaration(19) into CompilationUnit(1004) at 12", "Move FieldDeclaration(93) into TypeDeclaration: class(1003) at 3", "Update QualifiedName: org.apache.xml.security.keys.KeyInfo(18) to org.apache.xml.security.utils.ElementProxy", "Insert Modifier: private(68) into FieldDeclaration(82) at 1", "Insert Modifier: synchronized(99) into MethodDeclaration(107) at 2", "Update SimpleName: _alreadyInitialized(78) to alreadyInitialized", "Update TextElement:  true if the librairy is already initialized.     (96) to  true if the library is already initialized.     ", "Update QualifiedName: Init._alreadyInitialized(104) to Init.alreadyInitialized", "Update SimpleName: _alreadyInitialized(116) to alreadyInitialized", "Update SimpleName: _alreadyInitialized(1404) to alreadyInitialized", "Move MethodInvocation(271) into VariableDeclarationFragment(185) at 1", "Insert ParameterizedType: PrivilegedAction<InputStream>(155) into ClassInstanceCreation(183) at 0", "Move SimpleType: PrivilegedAction(242) into ParameterizedType: PrivilegedAction<InputStream>(155) at 0", "Insert SimpleType: InputStream(154) into ParameterizedType: PrivilegedAction<InputStream>(155) at 1", "Insert Block(902) into IfStatement(903) at 1", "Insert SimpleName: InputStream(153) into SimpleType: InputStream(154) at 0", "Move SimpleType: InputStream(238) into MethodDeclaration(181) at 1", "Move IfStatement(1091) into Block(783) at 2", "Move IfStatement(961) into Block(886) at 2", "Move ExpressionStatement(1124) into Block(902) at 0", "Move IfStatement(540) into Block(400) at 3", "Move IfStatement(660) into Block(504) at 3", "Move IfStatement(821) into Block(637) at 3", "Insert Block(965) into IfStatement(966) at 1", "Move ExpressionStatement(1186) into Block(965) at 0", "Insert SimpleName: ElementProxy(967) into MethodInvocation(971) at 0", "Insert Block(398) into IfStatement(399) at 1", "Insert Block(502) into IfStatement(503) at 1", "Insert Block(635) into IfStatement(636) at 1", "Move MethodInvocation(1080) into IfStatement(744) at 0", "Insert Block(743) into IfStatement(744) at 1", "Move MethodInvocation(1066) into IfStatement(758) at 0", "Insert Block(757) into IfStatement(758) at 1", "Move MethodInvocation(950) into IfStatement(864) at 0", "Insert Block(863) into IfStatement(864) at 1", "Move MethodInvocation(936) into IfStatement(878) at 0", "Insert Block(877) into IfStatement(878) at 1", "Move ExpressionStatement(539) into Block(398) at 0", "Move ExpressionStatement(659) into Block(502) at 0", "Move ExpressionStatement(820) into Block(635) at 0", "Move ExpressionStatement(1075) into Block(743) at 0", "Move ExpressionStatement(1088) into Block(757) at 0", "Move ExpressionStatement(945) into Block(863) at 0", "Move ExpressionStatement(958) into Block(877) at 0", "Update StringLiteral: \"Not able to found dependecies for algorithm, I'm keep working.\"(698) to \"Not able to found dependencies for algorithm, I'll keep working.\"", "Delete TextElement:  $Author$(48)", "Delete TagElement: @author(49)", "Delete PrimitiveType: long(120)", "Delete SimpleName: XX_configure_i18n_end(121)", "Delete NumberLiteral: 0(122)", "Delete VariableDeclarationFragment(123)", "Delete VariableDeclarationStatement(124)", "Delete PrimitiveType: long(125)", "Delete SimpleName: XX_configure_reg_c14n_start(126)", "Delete NumberLiteral: 0(127)", "Delete VariableDeclarationFragment(128)", "Delete VariableDeclarationStatement(129)", "Delete PrimitiveType: long(130)", "Delete SimpleName: XX_configure_reg_c14n_end(131)", "Delete NumberLiteral: 0(132)", "Delete VariableDeclarationFragment(133)", "Delete VariableDeclarationStatement(134)", "Delete PrimitiveType: long(135)", "Delete SimpleName: XX_configure_reg_jcemapper_end(136)", "Delete NumberLiteral: 0(137)", "Delete VariableDeclarationFragment(138)", "Delete VariableDeclarationStatement(139)", "Delete PrimitiveType: long(140)", "Delete SimpleName: XX_configure_reg_keyInfo_start(141)", "Delete NumberLiteral: 0(142)", "Delete VariableDeclarationFragment(143)", "Delete VariableDeclarationStatement(144)", "Delete PrimitiveType: long(145)", "Delete SimpleName: XX_configure_reg_keyResolver_end(146)", "Delete NumberLiteral: 0(147)", "Delete VariableDeclarationFragment(148)", "Delete VariableDeclarationStatement(149)", "Delete PrimitiveType: long(150)", "Delete SimpleName: XX_configure_reg_prefixes_start(151)", "Delete NumberLiteral: 0(152)", "Delete VariableDeclarationFragment(153)", "Delete VariableDeclarationStatement(154)", "Delete PrimitiveType: long(155)", "Delete SimpleName: XX_configure_reg_resourceresolver_start(156)", "Delete NumberLiteral: 0(157)", "Delete VariableDeclarationFragment(158)", "Delete VariableDeclarationStatement(159)", "Delete PrimitiveType: long(160)", "Delete SimpleName: XX_configure_reg_sigalgos_end(161)", "Delete NumberLiteral: 0(162)", "Delete VariableDeclarationFragment(163)", "Delete VariableDeclarationStatement(164)", "Delete PrimitiveType: long(165)", "Delete SimpleName: XX_configure_reg_transforms_end(166)", "Delete NumberLiteral: 0(167)", "Delete VariableDeclarationFragment(168)", "Delete VariableDeclarationStatement(169)", "Delete PrimitiveType: long(170)", "Delete SimpleName: XX_configure_reg_keyInfo_end(171)", "Delete NumberLiteral: 0(172)", "Delete VariableDeclarationFragment(173)", "Delete VariableDeclarationStatement(174)", "Delete PrimitiveType: long(175)", "Delete SimpleName: XX_configure_reg_keyResolver_start(176)", "Delete NumberLiteral: 0(177)", "Delete VariableDeclarationFragment(178)", "Delete VariableDeclarationStatement(179)", "Delete PrimitiveType: long(180)", "Delete SimpleName: XX_init_start(181)", "Delete SimpleName: System(182)", "Delete SimpleName: currentTimeMillis(183)", "Delete MethodInvocation(184)", "Delete VariableDeclarationFragment(185)", "Delete VariableDeclarationStatement(186)", "Delete PrimitiveType: long(187)", "Delete SimpleName: XX_prng_start(188)", "Delete SimpleName: System(189)", "Delete SimpleName: currentTimeMillis(190)", "Delete MethodInvocation(191)", "Delete VariableDeclarationFragment(192)", "Delete VariableDeclarationStatement(193)", "Delete PrimitiveType: long(194)", "Delete SimpleName: XX_prng_end(195)", "Delete SimpleName: System(196)", "Delete SimpleName: currentTimeMillis(197)", "Delete MethodInvocation(198)", "Delete VariableDeclarationFragment(199)", "Delete VariableDeclarationStatement(200)", "Delete PrimitiveType: long(201)", "Delete SimpleName: XX_parsing_start(202)", "Delete SimpleName: System(203)", "Delete SimpleName: currentTimeMillis(204)", "Delete MethodInvocation(205)", "Delete VariableDeclarationFragment(206)", "Delete VariableDeclarationStatement(207)", "Delete SimpleName: Object(244)", "Delete SimpleType: Object(245)", "Delete CastExpression(272)", "Delete PrimitiveType: long(284)", "Delete SimpleName: XX_parsing_end(285)", "Delete SimpleName: System(286)", "Delete SimpleName: currentTimeMillis(287)", "Delete MethodInvocation(288)", "Delete VariableDeclarationFragment(289)", "Delete VariableDeclarationStatement(290)", "Delete PrimitiveType: long(291)", "Delete SimpleName: XX_configure_i18n_start(292)", "Delete NumberLiteral: 0(293)", "Delete VariableDeclarationFragment(294)", "Delete VariableDeclarationStatement(295)", "Delete PrimitiveType: long(296)", "Delete SimpleName: XX_configure_reg_transforms_start(297)", "Delete NumberLiteral: 0(298)", "Delete VariableDeclarationFragment(299)", "Delete VariableDeclarationStatement(300)", "Delete PrimitiveType: long(301)", "Delete SimpleName: XX_configure_reg_jcemapper_start(302)", "Delete NumberLiteral: 0(303)", "Delete VariableDeclarationFragment(304)", "Delete VariableDeclarationStatement(305)", "Delete PrimitiveType: long(306)", "Delete SimpleName: XX_configure_reg_sigalgos_start(307)", "Delete NumberLiteral: 0(308)", "Delete VariableDeclarationFragment(309)", "Delete VariableDeclarationStatement(310)", "Delete PrimitiveType: long(311)", "Delete SimpleName: XX_configure_reg_resourceresolver_end(312)", "Delete NumberLiteral: 0(313)", "Delete VariableDeclarationFragment(314)", "Delete VariableDeclarationStatement(315)", "Delete PrimitiveType: long(316)", "Delete SimpleName: XX_configure_reg_prefixes_end(317)", "Delete NumberLiteral: 0(318)", "Delete VariableDeclarationFragment(319)", "Delete VariableDeclarationStatement(320)", "Delete SimpleName: XX_configure_i18n_start(388)", "Delete SimpleName: System(389)", "Delete SimpleName: currentTimeMillis(390)", "Delete MethodInvocation(391)", "Delete Assignment: =(392)", "Delete ExpressionStatement(393)", "Delete SimpleName: XX_configure_i18n_end(455)", "Delete SimpleName: System(456)", "Delete SimpleName: currentTimeMillis(457)", "Delete MethodInvocation(458)", "Delete Assignment: =(459)", "Delete ExpressionStatement(460)", "Delete SimpleName: XX_configure_reg_c14n_start(467)", "Delete SimpleName: System(468)", "Delete SimpleName: currentTimeMillis(469)", "Delete MethodInvocation(470)", "Delete Assignment: =(471)", "Delete ExpressionStatement(472)", "Delete SimpleName: Class(522)", "Delete SimpleName: forName(523)", "Delete SimpleName: JAVACLASS(524)", "Delete MethodInvocation(525)", "Delete ExpressionStatement(526)", "Delete SimpleName: XX_configure_reg_c14n_end(575)", "Delete SimpleName: System(576)", "Delete SimpleName: currentTimeMillis(577)", "Delete MethodInvocation(578)", "Delete Assignment: =(579)", "Delete ExpressionStatement(580)", "Delete SimpleName: XX_configure_reg_transforms_start(587)", "Delete SimpleName: System(588)", "Delete SimpleName: currentTimeMillis(589)", "Delete MethodInvocation(590)", "Delete Assignment: =(591)", "Delete ExpressionStatement(592)", "Delete SimpleName: Class(642)", "Delete SimpleName: forName(643)", "Delete SimpleName: JAVACLASS(644)", "Delete MethodInvocation(645)", "Delete ExpressionStatement(646)", "Delete SimpleName: XX_configure_reg_transforms_end(706)", "Delete SimpleName: System(707)", "Delete SimpleName: currentTimeMillis(708)", "Delete MethodInvocation(709)", "Delete Assignment: =(710)", "Delete ExpressionStatement(711)", "Delete SimpleName: XX_configure_reg_jcemapper_start(718)", "Delete SimpleName: System(719)", "Delete SimpleName: currentTimeMillis(720)", "Delete MethodInvocation(721)", "Delete Assignment: =(722)", "Delete ExpressionStatement(723)", "Delete SimpleName: XX_configure_reg_jcemapper_end(732)", "Delete SimpleName: System(733)", "Delete SimpleName: currentTimeMillis(734)", "Delete MethodInvocation(735)", "Delete Assignment: =(736)", "Delete ExpressionStatement(737)", "Delete SimpleName: XX_configure_reg_sigalgos_start(744)", "Delete SimpleName: System(745)", "Delete SimpleName: currentTimeMillis(746)", "Delete MethodInvocation(747)", "Delete Assignment: =(748)", "Delete ExpressionStatement(749)", "Delete SimpleName: Class(803)", "Delete SimpleName: forName(804)", "Delete SimpleName: JAVACLASS(805)", "Delete MethodInvocation(806)", "Delete ExpressionStatement(807)", "Delete SimpleName: XX_configure_reg_sigalgos_end(856)", "Delete SimpleName: System(857)", "Delete SimpleName: currentTimeMillis(858)", "Delete MethodInvocation(859)", "Delete Assignment: =(860)", "Delete ExpressionStatement(861)", "Delete SimpleName: XX_configure_reg_resourceresolver_start(868)", "Delete SimpleName: System(869)", "Delete SimpleName: currentTimeMillis(870)", "Delete MethodInvocation(871)", "Delete Assignment: =(872)", "Delete ExpressionStatement(873)", "Delete SimpleName: XX_configure_reg_resourceresolver_end(984)", "Delete SimpleName: System(985)", "Delete SimpleName: currentTimeMillis(986)", "Delete MethodInvocation(987)", "Delete Assignment: =(988)", "Delete ExpressionStatement(989)", "Delete SimpleName: XX_configure_reg_keyResolver_start(998)", "Delete SimpleName: System(999)", "Delete SimpleName: currentTimeMillis(1000)", "Delete MethodInvocation(1001)", "Delete Assignment: =(1002)", "Delete ExpressionStatement(1003)", "Delete SimpleName: XX_configure_reg_keyResolver_end(1099)", "Delete SimpleName: System(1100)", "Delete SimpleName: currentTimeMillis(1101)", "Delete MethodInvocation(1102)", "Delete Assignment: =(1103)", "Delete ExpressionStatement(1104)", "Delete SimpleName: XX_configure_reg_prefixes_start(1111)", "Delete SimpleName: System(1112)", "Delete SimpleName: currentTimeMillis(1113)", "Delete MethodInvocation(1114)", "Delete Assignment: =(1115)", "Delete ExpressionStatement(1116)", "Delete QualifiedName: org.apache.xml.security.utils.ElementProxy(1188)", "Delete SimpleName: XX_configure_reg_prefixes_end(1196)", "Delete SimpleName: System(1197)", "Delete SimpleName: currentTimeMillis(1198)", "Delete MethodInvocation(1199)", "Delete Assignment: =(1200)", "Delete ExpressionStatement(1201)", "Delete PrimitiveType: long(1206)", "Delete SimpleName: XX_init_end(1207)", "Delete SimpleName: System(1208)", "Delete SimpleName: currentTimeMillis(1209)", "Delete MethodInvocation(1210)", "Delete VariableDeclarationFragment(1211)", "Delete VariableDeclarationStatement(1212)", "Delete SimpleName: log(1213)", "Delete SimpleName: isDebugEnabled(1214)", "Delete MethodInvocation(1215)", "Delete SimpleName: log(1216)", "Delete SimpleName: debug(1217)", "Delete StringLiteral: \"XX_init                             \"(1218)", "Delete PrimitiveType: int(1219)", "Delete SimpleName: XX_init_end(1220)", "Delete SimpleName: XX_init_start(1221)", "Delete InfixExpression: -(1222)", "Delete ParenthesizedExpression(1223)", "Delete CastExpression(1224)", "Delete ParenthesizedExpression(1225)", "Delete StringLiteral: \" ms\"(1226)", "Delete InfixExpression: +(1227)", "Delete MethodInvocation(1228)", "Delete ExpressionStatement(1229)", "Delete SimpleName: log(1230)", "Delete SimpleName: debug(1231)", "Delete StringLiteral: \"  XX_prng                           \"(1232)", "Delete PrimitiveType: int(1233)", "Delete SimpleName: XX_prng_end(1234)", "Delete SimpleName: XX_prng_start(1235)", "Delete InfixExpression: -(1236)", "Delete ParenthesizedExpression(1237)", "Delete CastExpression(1238)", "Delete ParenthesizedExpression(1239)", "Delete StringLiteral: \" ms\"(1240)", "Delete InfixExpression: +(1241)", "Delete MethodInvocation(1242)", "Delete ExpressionStatement(1243)", "Delete SimpleName: log(1244)", "Delete SimpleName: debug(1245)", "Delete StringLiteral: \"  XX_parsing                        \"(1246)", "Delete PrimitiveType: int(1247)", "Delete SimpleName: XX_parsing_end(1248)", "Delete SimpleName: XX_parsing_start(1249)", "Delete InfixExpression: -(1250)", "Delete ParenthesizedExpression(1251)", "Delete CastExpression(1252)", "Delete ParenthesizedExpression(1253)", "Delete StringLiteral: \" ms\"(1254)", "Delete InfixExpression: +(1255)", "Delete MethodInvocation(1256)", "Delete ExpressionStatement(1257)", "Delete SimpleName: log(1258)", "Delete SimpleName: debug(1259)", "Delete StringLiteral: \"  XX_configure_i18n                 \"(1260)", "Delete PrimitiveType: int(1261)", "Delete SimpleName: XX_configure_i18n_end(1262)", "Delete SimpleName: XX_configure_i18n_start(1263)", "Delete InfixExpression: -(1264)", "Delete ParenthesizedExpression(1265)", "Delete CastExpression(1266)", "Delete ParenthesizedExpression(1267)", "Delete StringLiteral: \" ms\"(1268)", "Delete InfixExpression: +(1269)", "Delete MethodInvocation(1270)", "Delete ExpressionStatement(1271)", "Delete SimpleName: log(1272)", "Delete SimpleName: debug(1273)", "Delete StringLiteral: \"  XX_configure_reg_c14n             \"(1274)", "Delete PrimitiveType: int(1275)", "Delete SimpleName: XX_configure_reg_c14n_end(1276)", "Delete SimpleName: XX_configure_reg_c14n_start(1277)", "Delete InfixExpression: -(1278)", "Delete ParenthesizedExpression(1279)", "Delete CastExpression(1280)", "Delete ParenthesizedExpression(1281)", "Delete StringLiteral: \" ms\"(1282)", "Delete InfixExpression: +(1283)", "Delete MethodInvocation(1284)", "Delete ExpressionStatement(1285)", "Delete SimpleName: log(1286)", "Delete SimpleName: debug(1287)", "Delete StringLiteral: \"  XX_configure_reg_jcemapper        \"(1288)", "Delete PrimitiveType: int(1289)", "Delete SimpleName: XX_configure_reg_jcemapper_end(1290)", "Delete SimpleName: XX_configure_reg_jcemapper_start(1291)", "Delete InfixExpression: -(1292)", "Delete ParenthesizedExpression(1293)", "Delete CastExpression(1294)", "Delete ParenthesizedExpression(1295)", "Delete StringLiteral: \" ms\"(1296)", "Delete InfixExpression: +(1297)", "Delete MethodInvocation(1298)", "Delete ExpressionStatement(1299)", "Delete SimpleName: log(1300)", "Delete SimpleName: debug(1301)", "Delete StringLiteral: \"  XX_configure_reg_keyInfo          \"(1302)", "Delete PrimitiveType: int(1303)", "Delete SimpleName: XX_configure_reg_keyInfo_end(1304)", "Delete SimpleName: XX_configure_reg_keyInfo_start(1305)", "Delete InfixExpression: -(1306)", "Delete ParenthesizedExpression(1307)", "Delete CastExpression(1308)", "Delete ParenthesizedExpression(1309)", "Delete StringLiteral: \" ms\"(1310)", "Delete InfixExpression: +(1311)", "Delete MethodInvocation(1312)", "Delete ExpressionStatement(1313)", "Delete SimpleName: log(1314)", "Delete SimpleName: debug(1315)", "Delete StringLiteral: \"  XX_configure_reg_keyResolver      \"(1316)", "Delete PrimitiveType: int(1317)", "Delete SimpleName: XX_configure_reg_keyResolver_end(1318)", "Delete SimpleName: XX_configure_reg_keyResolver_start(1319)", "Delete InfixExpression: -(1320)", "Delete ParenthesizedExpression(1321)", "Delete CastExpression(1322)", "Delete ParenthesizedExpression(1323)", "Delete StringLiteral: \" ms\"(1324)", "Delete InfixExpression: +(1325)", "Delete MethodInvocation(1326)", "Delete ExpressionStatement(1327)", "Delete SimpleName: log(1328)", "Delete SimpleName: debug(1329)", "Delete StringLiteral: \"  XX_configure_reg_prefixes         \"(1330)", "Delete PrimitiveType: int(1331)", "Delete SimpleName: XX_configure_reg_prefixes_end(1332)", "Delete SimpleName: XX_configure_reg_prefixes_start(1333)", "Delete InfixExpression: -(1334)", "Delete ParenthesizedExpression(1335)", "Delete CastExpression(1336)", "Delete ParenthesizedExpression(1337)", "Delete StringLiteral: \" ms\"(1338)", "Delete InfixExpression: +(1339)", "Delete MethodInvocation(1340)", "Delete ExpressionStatement(1341)", "Delete SimpleName: log(1342)", "Delete SimpleName: debug(1343)", "Delete StringLiteral: \"  XX_configure_reg_resourceresolver \"(1344)", "Delete PrimitiveType: int(1345)", "Delete SimpleName: XX_configure_reg_resourceresolver_end(1346)", "Delete SimpleName: XX_configure_reg_resourceresolver_start(1347)", "Delete InfixExpression: -(1348)", "Delete ParenthesizedExpression(1349)", "Delete CastExpression(1350)", "Delete ParenthesizedExpression(1351)", "Delete StringLiteral: \" ms\"(1352)", "Delete InfixExpression: +(1353)", "Delete MethodInvocation(1354)", "Delete ExpressionStatement(1355)", "Delete SimpleName: log(1356)", "Delete SimpleName: debug(1357)", "Delete StringLiteral: \"  XX_configure_reg_sigalgos         \"(1358)", "Delete PrimitiveType: int(1359)", "Delete SimpleName: XX_configure_reg_sigalgos_end(1360)", "Delete SimpleName: XX_configure_reg_sigalgos_start(1361)", "Delete InfixExpression: -(1362)", "Delete ParenthesizedExpression(1363)", "Delete CastExpression(1364)", "Delete ParenthesizedExpression(1365)", "Delete StringLiteral: \" ms\"(1366)", "Delete InfixExpression: +(1367)", "Delete MethodInvocation(1368)", "Delete ExpressionStatement(1369)", "Delete SimpleName: log(1370)", "Delete SimpleName: debug(1371)", "Delete StringLiteral: \"  XX_configure_reg_transforms       \"(1372)", "Delete PrimitiveType: int(1373)", "Delete SimpleName: XX_configure_reg_transforms_end(1374)", "Delete SimpleName: XX_configure_reg_transforms_start(1375)", "Delete InfixExpression: -(1376)", "Delete ParenthesizedExpression(1377)", "Delete CastExpression(1378)", "Delete ParenthesizedExpression(1379)", "Delete StringLiteral: \" ms\"(1380)", "Delete InfixExpression: +(1381)", "Delete MethodInvocation(1382)", "Delete ExpressionStatement(1383)", "Delete Block(1384)", "Delete IfStatement(1385)"]}}, {"JCEMapper_cluster": {"actions": [{"root": "INS ParameterizedType: HashMap<String,String> to ClassInstanceCreation at 0", "operations": ["INS ParameterizedType: HashMap<String,String> to ClassInstanceCreation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: HashMap<String,String> at 2", "INS SimpleType: String to ParameterizedType: HashMap<String,String> at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV InfixExpression: * to ClassInstanceCreation at 1", "MOV SimpleType: HashMap to ParameterizedType: HashMap<String,Algorithm> at 0"]}, {"root": "INS ParameterizedType: HashMap<String,Algorithm> to ClassInstanceCreation at 0", "operations": ["INS SimpleType: String to ParameterizedType: HashMap<String,Algorithm> at 1", "INS SimpleType: Algorithm to ParameterizedType: HashMap<String,Algorithm> at 2", "INS ParameterizedType: HashMap<String,Algorithm> to ClassInstanceCreation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Algorithm to SimpleType: Algorithm at 0"]}, {"root": "MOVE from ParameterizedType: HashMap<String,String>", "operations": ["MOV SimpleType: HashMap to ParameterizedType: HashMap<String,String> at 0", "MOV InfixExpression: * to ClassInstanceCreation at 1"]}]}}, {"JCEMapper_diff": {"operations": ["Insert ParameterizedType: HashMap<String,String>(130) into ClassInstanceCreation(134) at 0", "Move InfixExpression: *(137) into ClassInstanceCreation(134) at 1", "Insert ParameterizedType: HashMap<String,Algorithm>(144) into ClassInstanceCreation(148) at 0", "Move InfixExpression: *(128) into ClassInstanceCreation(148) at 1", "Move SimpleType: HashMap(125) into ParameterizedType: HashMap<String,String>(130) at 0", "Insert SimpleType: String(127) into ParameterizedType: HashMap<String,String>(130) at 1", "Insert SimpleType: String(129) into ParameterizedType: HashMap<String,String>(130) at 2", "Move SimpleType: HashMap(134) into ParameterizedType: HashMap<String,Algorithm>(144) at 0", "Insert SimpleType: String(141) into ParameterizedType: HashMap<String,Algorithm>(144) at 1", "Insert SimpleType: Algorithm(143) into ParameterizedType: HashMap<String,Algorithm>(144) at 2", "Insert SimpleName: String(126) into SimpleType: String(127) at 0", "Insert SimpleName: String(128) into SimpleType: String(129) at 0", "Insert SimpleName: String(140) into SimpleType: String(141) at 0", "Insert SimpleName: Algorithm(142) into SimpleType: Algorithm(143) at 0"]}}, {"MessageDigestAlgorithm_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 13"]}, {"root": "INS Modifier: private to FieldDeclaration at 1", "operations": ["INS Modifier: private to FieldDeclaration at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1", "MOV SimpleType: MessageDigest to FieldDeclaration at 2"]}, {"root": "INS Modifier: private to FieldDeclaration at 0", "operations": ["INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS ParameterizedType: ThreadLocal<Map<String,MessageDigest>> to FieldDeclaration at 2", "operations": ["INS SimpleType: String to ParameterizedType: Map<String,MessageDigest> at 1", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: MessageDigest to SimpleType: MessageDigest at 0", "INS ParameterizedType: Map<String,MessageDigest> to ParameterizedType: ThreadLocal<Map<String,MessageDigest>> at 1", "INS SimpleType: MessageDigest to ParameterizedType: Map<String,MessageDigest> at 2", "INS SimpleType: Map to ParameterizedType: Map<String,MessageDigest> at 0", "INS ParameterizedType: ThreadLocal<Map<String,MessageDigest>> to FieldDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS SimpleName: MessageDigest to SimpleType: MessageDigest at 0", "operations": ["INS SimpleName: MessageDigest to SimpleType: MessageDigest at 0"]}, {"root": "MOVE from ParameterizedType: ThreadLocal<Map<String,MessageDigest>>", "operations": ["MOV SimpleType: ThreadLocal to ParameterizedType: ThreadLocal<Map<String,MessageDigest>> at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS ParameterizedType: Map<String,MessageDigest> to VariableDeclarationStatement at 0", "INS SimpleType: String to ParameterizedType: Map<String,MessageDigest> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: MessageDigest to ParameterizedType: Map<String,MessageDigest> at 2", "INS SimpleName: digestMap to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationStatement to Block at 1"]}, {"root": "INS ParameterizedType: ThreadLocal<Map<String,MessageDigest>> to ClassInstanceCreation at 0", "operations": ["INS ParameterizedType: ThreadLocal<Map<String,MessageDigest>> to ClassInstanceCreation at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS ParameterizedType: Map<String,MessageDigest> to ParameterizedType: ThreadLocal<Map<String,MessageDigest>> at 1", "INS SimpleType: MessageDigest to ParameterizedType: Map<String,MessageDigest> at 2", "INS SimpleType: String to ParameterizedType: Map<String,MessageDigest> at 1", "INS SimpleType: Map to ParameterizedType: Map<String,MessageDigest> at 0", "INS SimpleName: MessageDigest to SimpleType: MessageDigest at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: MessageDigest to VariableDeclarationStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from ParameterizedType: ThreadLocal<Map<String,MessageDigest>>", "operations": ["MOV SimpleType: ThreadLocal to ParameterizedType: ThreadLocal<Map<String,MessageDigest>> at 0"]}, {"root": "MOVE from ParameterizedType: Map<String,MessageDigest>", "operations": ["MOV SimpleType: Map to ParameterizedType: Map<String,MessageDigest> at 0", "MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: digestMap to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "UPDATE from instances to digestMap", "operations": ["UPD SimpleName: instances from instances to digestMap"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: instances to MethodInvocation at 0"]}, {"root": "INS ParameterizedType: Map<String,MessageDigest> to MethodDeclaration at 1", "operations": ["INS SimpleType: String to ParameterizedType: Map<String,MessageDigest> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: MessageDigest to ParameterizedType: Map<String,MessageDigest> at 2", "INS ParameterizedType: Map<String,MessageDigest> to MethodDeclaration at 1"]}, {"root": "MOVE from SimpleType: MessageDigest", "operations": ["MOV SimpleName: MessageDigest to SimpleType: MessageDigest at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 1", "MOV SimpleName: algorithmURI to MethodInvocation at 2"]}, {"root": "MOVE from ParameterizedType: Map<String,MessageDigest>", "operations": ["MOV SimpleType: Map to ParameterizedType: Map<String,MessageDigest> at 0"]}, {"root": "UPDATE from Object to MessageDigest", "operations": ["UPD SimpleName: Object from Object to MessageDigest"]}, {"root": "MOVE from SimpleType: MessageDigest", "operations": ["MOV SimpleName: Object to SimpleType: MessageDigest at 0"]}, {"root": "INS ParameterizedType: HashMap<String,MessageDigest> to ClassInstanceCreation at 0", "operations": ["INS ParameterizedType: HashMap<String,MessageDigest> to ClassInstanceCreation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: HashMap<String,MessageDigest> at 1", "INS SimpleType: MessageDigest to ParameterizedType: HashMap<String,MessageDigest> at 2", "INS SimpleName: MessageDigest to SimpleType: MessageDigest at 0"]}, {"root": "MOVE from ParameterizedType: HashMap<String,MessageDigest>", "operations": ["MOV SimpleType: HashMap to ParameterizedType: HashMap<String,MessageDigest> at 0"]}, {"root": "DEL QualifiedName: java.security.MessageDigest", "operations": ["DEL QualifiedName: java.security.MessageDigest"]}, {"root": "DEL SimpleType: Object", "operations": ["DEL SimpleType: Object"]}, {"root": "DEL CastExpression", "operations": ["DEL MethodInvocation", "DEL CastExpression", "DEL ParenthesizedExpression", "DEL CastExpression"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement"]}, {"root": "DEL ParenthesizedExpression", "operations": ["DEL SimpleName: get", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL CastExpression"]}]}}, {"MessageDigestAlgorithm_diff": {"operations": ["Move MethodDeclaration(158) into TypeDeclaration: class(869) at 13", "Insert Modifier: private(118) into FieldDeclaration(124) at 1", "Update SimpleType: java.security.MessageDigest(119) to MessageDigest", "Insert Modifier: private(125) into FieldDeclaration(171) at 0", "Insert ParameterizedType: ThreadLocal<Map<String,MessageDigest>>(136) into FieldDeclaration(171) at 2", "Insert SimpleName: MessageDigest(119) into SimpleType: MessageDigest(120) at 0", "Move SimpleType: ThreadLocal(161) into ParameterizedType: ThreadLocal<Map<String,MessageDigest>>(136) at 0", "Insert ParameterizedType: Map<String,MessageDigest>(135) into ParameterizedType: ThreadLocal<Map<String,MessageDigest>>(136) at 1", "Insert VariableDeclarationStatement(273) into Block(411) at 0", "Insert VariableDeclarationStatement(282) into Block(411) at 1", "Insert SimpleType: Map(130) into ParameterizedType: Map<String,MessageDigest>(135) at 0", "Insert SimpleType: String(132) into ParameterizedType: Map<String,MessageDigest>(135) at 1", "Insert SimpleType: MessageDigest(134) into ParameterizedType: Map<String,MessageDigest>(135) at 2", "Insert ParameterizedType: ThreadLocal<Map<String,MessageDigest>>(147) into ClassInstanceCreation(169) at 0", "Insert ParameterizedType: Map<String,MessageDigest>(267) into VariableDeclarationStatement(273) at 0", "Insert VariableDeclarationFragment(272) into VariableDeclarationStatement(273) at 1", "Move SimpleType: MessageDigest(237) into VariableDeclarationStatement(282) at 0", "Move VariableDeclarationFragment(249) into VariableDeclarationStatement(282) at 1", "Insert Block(288) into IfStatement(289) at 1", "Insert SimpleName: Map(129) into SimpleType: Map(130) at 0", "Insert SimpleName: String(131) into SimpleType: String(132) at 0", "Insert SimpleName: MessageDigest(133) into SimpleType: MessageDigest(134) at 0", "Move SimpleType: ThreadLocal(164) into ParameterizedType: ThreadLocal<Map<String,MessageDigest>>(147) at 0", "Insert ParameterizedType: Map<String,MessageDigest>(146) into ParameterizedType: ThreadLocal<Map<String,MessageDigest>>(147) at 1", "Move SimpleType: Map(239) into ParameterizedType: Map<String,MessageDigest>(267) at 0", "Insert SimpleType: String(264) into ParameterizedType: Map<String,MessageDigest>(267) at 1", "Insert SimpleType: MessageDigest(266) into ParameterizedType: Map<String,MessageDigest>(267) at 2", "Insert SimpleName: digestMap(268) into VariableDeclarationFragment(272) at 0", "Move MethodInvocation(242) into VariableDeclarationFragment(272) at 1", "Insert MethodInvocation(280) into VariableDeclarationFragment(281) at 1", "Move ReturnStatement(255) into Block(288) at 0", "Update SimpleName: instances(372) to digestMap", "Move SimpleName: instances(372) into MethodInvocation(407) at 0", "Insert SimpleType: Map(141) into ParameterizedType: Map<String,MessageDigest>(146) at 0", "Insert SimpleType: String(143) into ParameterizedType: Map<String,MessageDigest>(146) at 1", "Insert SimpleType: MessageDigest(145) into ParameterizedType: Map<String,MessageDigest>(146) at 2", "Insert ParameterizedType: Map<String,MessageDigest>(155) into MethodDeclaration(167) at 1", "Insert SimpleName: String(263) into SimpleType: String(264) at 0", "Move SimpleName: MessageDigest(233) into SimpleType: MessageDigest(266) at 0", "Insert SimpleName: digestMap(277) into MethodInvocation(280) at 0", "Move SimpleName: get(245) into MethodInvocation(280) at 1", "Move SimpleName: algorithmURI(246) into MethodInvocation(280) at 2", "Insert SimpleName: Map(140) into SimpleType: Map(141) at 0", "Insert SimpleName: String(142) into SimpleType: String(143) at 0", "Insert SimpleName: MessageDigest(144) into SimpleType: MessageDigest(145) at 0", "Move SimpleType: Map(371) into ParameterizedType: Map<String,MessageDigest>(155) at 0", "Insert SimpleType: String(152) into ParameterizedType: Map<String,MessageDigest>(155) at 1", "Insert SimpleType: MessageDigest(154) into ParameterizedType: Map<String,MessageDigest>(155) at 2", "Insert SimpleName: String(151) into SimpleType: String(152) at 0", "Update SimpleName: Object(166) to MessageDigest", "Move SimpleName: Object(166) into SimpleType: MessageDigest(154) at 0", "Insert ParameterizedType: HashMap<String,MessageDigest>(163) into ClassInstanceCreation(164) at 0", "Move SimpleType: HashMap(170) into ParameterizedType: HashMap<String,MessageDigest>(163) at 0", "Insert SimpleType: String(160) into ParameterizedType: HashMap<String,MessageDigest>(163) at 1", "Insert SimpleType: MessageDigest(162) into ParameterizedType: HashMap<String,MessageDigest>(163) at 2", "Insert SimpleName: String(159) into SimpleType: String(160) at 0", "Insert SimpleName: MessageDigest(161) into SimpleType: MessageDigest(162) at 0", "Delete QualifiedName: java.security.MessageDigest(118)", "Delete SimpleType: Object(167)", "Delete CastExpression(243)", "Delete ParenthesizedExpression(244)", "Delete MethodInvocation(247)", "Delete CastExpression(248)", "Delete VariableDeclarationStatement(250)", "Delete SimpleName: get(373)", "Delete MethodInvocation(374)", "Delete CastExpression(375)", "Delete ParenthesizedExpression(376)"]}}, {"SignatureAlgorithm_cluster": {"actions": [{"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: ClassNotFoundException to MethodDeclaration at 8"]}, {"root": "DEL CatchClause", "operations": ["DEL Block", "DEL SimpleType: Object", "DEL SimpleType: XMLSignatureException", "DEL SimpleName: XMLSignatureException", "DEL VariableDeclarationFragment", "DEL SimpleName: algorithmURI", "DEL StringLiteral: \"algorithms.NoSuchAlgorithm\"", "DEL SimpleName: exArgs", "DEL SimpleName: getMessage", "DEL VariableDeclarationStatement", "DEL SimpleName: ex", "DEL SimpleName: exArgs", "DEL SimpleName: ex", "DEL CatchClause", "DEL ClassInstanceCreation", "DEL ThrowStatement", "DEL SimpleName: ex", "DEL SimpleName: Object", "DEL MethodInvocation", "DEL Dimension", "DEL ArrayInitializer", "DEL SingleVariableDeclaration"]}]}}, {"SignatureAlgorithm_diff": {"operations": ["Move SimpleType: ClassNotFoundException(1356) into MethodDeclaration(1383) at 8", "Delete SimpleName: ex(1357)", "Delete SingleVariableDeclaration(1358)", "Delete SimpleName: Object(1359)", "Delete SimpleType: Object(1360)", "Delete SimpleName: exArgs(1361)", "Delete Dimension(1362)", "Delete SimpleName: algorithmURI(1363)", "Delete SimpleName: ex(1364)", "Delete SimpleName: getMessage(1365)", "Delete MethodInvocation(1366)", "Delete ArrayInitializer(1367)", "Delete VariableDeclarationFragment(1368)", "Delete VariableDeclarationStatement(1369)", "Delete SimpleName: XMLSignatureException(1370)", "Delete SimpleType: XMLSignatureException(1371)", "Delete StringLiteral: \"algorithms.NoSuchAlgorithm\"(1372)", "Delete SimpleName: exArgs(1373)", "Delete SimpleName: ex(1374)", "Delete ClassInstanceCreation(1375)", "Delete ThrowStatement(1376)", "Delete Block(1377)", "Delete CatchClause(1378)"]}}, {"Canonicalizer_cluster": {"actions": [{"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: ClassNotFoundException to MethodDeclaration at 9"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "DEL TryStatement", "operations": ["DEL StringLiteral: \"c14n class not found\"", "DEL SimpleName: RuntimeException", "DEL Block", "DEL SingleVariableDeclaration", "DEL ThrowStatement", "DEL TryStatement", "DEL CatchClause", "DEL ClassInstanceCreation", "DEL SimpleName: e", "DEL Block", "DEL SimpleType: RuntimeException"]}]}}, {"Canonicalizer_diff": {"operations": ["Move SimpleType: ClassNotFoundException(337) into MethodDeclaration(338) at 9", "Move ExpressionStatement(334) into Block(337) at 2", "Delete Block(335)", "Delete SimpleName: e(338)", "Delete SingleVariableDeclaration(339)", "Delete SimpleName: RuntimeException(340)", "Delete SimpleType: RuntimeException(341)", "Delete StringLiteral: \"c14n class not found\"(342)", "Delete ClassInstanceCreation(343)", "Delete ThrowStatement(344)", "Delete Block(345)", "Delete CatchClause(346)", "Delete TryStatement(347)"]}}, {"Transform_cluster": {"actions": [{"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: ClassNotFoundException to MethodDeclaration at 9"]}, {"root": "DEL CatchClause", "operations": ["DEL CatchClause", "DEL SimpleType: Object", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: exArgs", "DEL SimpleName: exArgs", "DEL SimpleName: algorithmURI", "DEL ClassInstanceCreation", "DEL SimpleType: InvalidTransformException", "DEL SimpleName: ex", "DEL Dimension", "DEL ThrowStatement", "DEL ArrayInitializer", "DEL SimpleName: Object", "DEL SimpleName: InvalidTransformException", "DEL Block", "DEL SimpleName: ex", "DEL StringLiteral: \"signature.Transform.UnknownTransform\"", "DEL SingleVariableDeclaration"]}]}}, {"Transform_diff": {"operations": ["Move SimpleType: ClassNotFoundException(681) into MethodDeclaration(684) at 9", "Delete SimpleName: ex(682)", "Delete SingleVariableDeclaration(683)", "Delete SimpleName: Object(684)", "Delete SimpleType: Object(685)", "Delete SimpleName: exArgs(686)", "Delete Dimension(687)", "Delete SimpleName: algorithmURI(688)", "Delete ArrayInitializer(689)", "Delete VariableDeclarationFragment(690)", "Delete VariableDeclarationStatement(691)", "Delete SimpleName: InvalidTransformException(692)", "Delete SimpleType: InvalidTransformException(693)", "Delete StringLiteral: \"signature.Transform.UnknownTransform\"(694)", "Delete SimpleName: exArgs(695)", "Delete SimpleName: ex(696)", "Delete ClassInstanceCreation(697)", "Delete ThrowStatement(698)", "Delete Block(699)", "Delete CatchClause(700)"]}}], "commit_stats": [{"total_files": 7, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}