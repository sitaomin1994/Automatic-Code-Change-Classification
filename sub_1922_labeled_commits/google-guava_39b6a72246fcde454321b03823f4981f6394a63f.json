{"application": "google-guava", "csha": "39b6a72246fcde454321b03823f4981f6394a63f", "files": [{"AbstractRangeSet_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 12", "INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: computeNext to MethodDeclaration at 3", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Modifier: protected to MethodDeclaration at 1", "MOV Block to MethodDeclaration at 4"]}, {"root": "UPDATE from protected to public", "operations": ["UPD Modifier: protected from protected to public"]}, {"root": "UPDATE from computeNext to clear", "operations": ["UPD SimpleName: computeNext from computeNext to clear"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: remove to MethodInvocation at 0", "INS SimpleName: Range to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleType: C to MethodInvocation at 1"]}, {"root": "UPDATE from aboveAll to all", "operations": ["UPD SimpleName: aboveAll from aboveAll to all"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: aboveAll to MethodInvocation at 2"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Iterator"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodInvocation", "DEL SimpleName: positiveIterator", "DEL ParameterizedType: Range<C>", "DEL SimpleName: C", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL SimpleName: Range", "DEL SimpleName: standardComplementIterator", "DEL SimpleName: prevCut", "DEL SimpleName: C", "DEL ParameterizedType: Cut<C>", "DEL Javadoc", "DEL VariableDeclarationFragment", "DEL ParameterizedType: Iterator<Range<C>>", "DEL SimpleName: Range", "DEL SimpleType: Iterator", "DEL SimpleType: Range", "DEL SimpleType: Range", "DEL FieldDeclaration", "DEL SimpleType: C", "DEL ParameterizedType: Range<C>", "DEL AnonymousClassDeclaration", "DEL SimpleType: C", "DEL TextElement: An implementation for ", "DEL SimpleName: Iterator", "DEL SimpleName: AbstractIterator", "DEL SimpleName: iterator", "DEL MethodDeclaration", "DEL SimpleType: AbstractIterator", "DEL SimpleType: Cut", "DEL SimpleName: AbstractRangeSet", "DEL ThisExpression", "DEL SimpleType: C", "DEL SimpleType: C", "DEL TextElement: .", "DEL SimpleName: asRanges", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL TextElement:  complement().asRanges().iterator()", "DEL SimpleName: Range", "DEL SimpleName: Range", "DEL SimpleType: Iterator", "DEL SimpleName: belowAll", "DEL TagElement: @code", "DEL Modifier: final", "DEL SimpleName: Iterator", "DEL ParameterizedType: Range<C>", "DEL MethodInvocation", "DEL SimpleType: Range", "DEL Modifier: final", "DEL ParameterizedType: AbstractIterator<Range<C>>", "DEL SimpleName: Cut", "DEL TagElement", "DEL SimpleName: C", "DEL Block", "DEL SimpleName: C", "DEL ParameterizedType: Range<C>", "DEL SimpleName: Cut", "DEL ClassInstanceCreation", "DEL SimpleType: Range", "DEL VariableDeclarationFragment", "DEL ParameterizedType: Iterator<Range<C>>"]}, {"root": "DEL WhileStatement", "operations": ["DEL ExpressionStatement", "DEL IfStatement", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SimpleName: C", "DEL ParameterizedType: Range<C>", "DEL ParameterizedType: Range<C>", "DEL Block", "DEL SimpleName: C", "DEL SimpleType: C", "DEL Assignment: =", "DEL ReturnStatement", "DEL SimpleName: compareTo", "DEL MethodInvocation", "DEL SimpleName: Range", "DEL SimpleName: Cut", "DEL Block", "DEL QualifiedName: positiveRange.lowerBound", "DEL SimpleName: hasNext", "DEL SimpleName: oldCut", "DEL SimpleName: oldCut", "DEL SimpleType: C", "DEL SimpleType: C", "DEL VariableDeclarationFragment", "DEL SimpleName: prevCut", "DEL SimpleName: positiveRange", "DEL VariableDeclarationFragment", "DEL SimpleType: Cut", "DEL SimpleType: Range", "DEL SimpleName: prevCut", "DEL VariableDeclarationStatement", "DEL InfixExpression: <", "DEL ParameterizedType: Cut<C>", "DEL SimpleType: Range", "DEL QualifiedName: positiveRange.lowerBound", "DEL VariableDeclarationStatement", "DEL SimpleName: Range", "DEL SimpleName: oldCut", "DEL WhileStatement", "DEL QualifiedName: positiveRange.upperBound", "DEL SimpleName: C", "DEL SimpleName: positiveIterator", "DEL MethodInvocation", "DEL SimpleName: positiveIterator", "DEL SimpleName: next", "DEL ClassInstanceCreation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: Cut", "DEL SimpleName: posInfinity", "DEL SimpleType: Cut", "DEL SimpleType: C", "DEL ParameterizedType: Cut<C>", "DEL VariableDeclarationStatement", "DEL SimpleName: C", "DEL SimpleName: Cut", "DEL MethodInvocation", "DEL VariableDeclarationFragment"]}, {"root": "DEL IfStatement", "operations": ["DEL ParameterizedType: Range<C>", "DEL ParameterizedType: Range<C>", "DEL SimpleName: posInfinity", "DEL Block", "DEL SimpleName: prevCut", "DEL Assignment: =", "DEL SimpleName: C", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL IfStatement", "DEL SimpleName: Range", "DEL SimpleType: Range", "DEL VariableDeclarationStatement", "DEL SimpleName: compareTo", "DEL ExpressionStatement", "DEL SimpleName: posInfinity", "DEL ReturnStatement", "DEL SimpleName: prevCut", "DEL SimpleName: result", "DEL NumberLiteral: 0", "DEL SimpleType: C", "DEL SimpleName: posInfinity", "DEL InfixExpression: <", "DEL SimpleName: prevCut", "DEL SimpleType: Range", "DEL SimpleName: Range", "DEL SimpleName: C", "DEL SimpleType: C", "DEL SimpleName: result"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: endOfData", "DEL MethodInvocation"]}]}}, {"AbstractRangeSet_diff": {"operations": ["Insert MethodDeclaration(147) into TypeDeclaration: class(382) at 11", "Move MarkerAnnotation(153) into MethodDeclaration(147) at 0", "Update Modifier: protected(154) to public", "Move Modifier: protected(154) into MethodDeclaration(147) at 1", "Insert PrimitiveType: void(136) into MethodDeclaration(147) at 2", "Update SimpleName: computeNext(160) to clear", "Move SimpleName: computeNext(160) into MethodDeclaration(147) at 3", "Move Block(251) into MethodDeclaration(147) at 4", "Insert ExpressionStatement(145) into Block(146) at 0", "Insert MethodInvocation(144) into ExpressionStatement(145) at 0", "Insert SimpleName: remove(138) into MethodInvocation(144) at 0", "Insert MethodInvocation(143) into MethodInvocation(144) at 1", "Insert SimpleName: Range(139) into MethodInvocation(143) at 0", "Move SimpleType: C(144) into MethodInvocation(143) at 1", "Update SimpleName: aboveAll(214) to all", "Move SimpleName: aboveAll(214) into MethodInvocation(143) at 2", "Delete QualifiedName: java.util.Iterator(4)", "Delete ImportDeclaration(5)", "Delete TextElement: An implementation for (99)", "Delete TextElement:  complement().asRanges().iterator()(100)", "Delete TagElement: @code(101)", "Delete TextElement: .(102)", "Delete TagElement(103)", "Delete Javadoc(104)", "Delete Modifier: final(105)", "Delete SimpleName: Iterator(106)", "Delete SimpleType: Iterator(107)", "Delete SimpleName: Range(108)", "Delete SimpleType: Range(109)", "Delete SimpleName: C(110)", "Delete SimpleType: C(111)", "Delete ParameterizedType: Range<C>(112)", "Delete ParameterizedType: Iterator<Range<C>>(113)", "Delete SimpleName: standardComplementIterator(114)", "Delete SimpleName: AbstractIterator(115)", "Delete SimpleType: AbstractIterator(116)", "Delete SimpleName: Range(117)", "Delete SimpleType: Range(118)", "Delete SimpleName: C(119)", "Delete SimpleType: C(120)", "Delete ParameterizedType: Range<C>(121)", "Delete ParameterizedType: AbstractIterator<Range<C>>(122)", "Delete Modifier: final(123)", "Delete SimpleName: Iterator(124)", "Delete SimpleType: Iterator(125)", "Delete SimpleName: Range(126)", "Delete SimpleType: Range(127)", "Delete SimpleName: C(128)", "Delete SimpleType: C(129)", "Delete ParameterizedType: Range<C>(130)", "Delete ParameterizedType: Iterator<Range<C>>(131)", "Delete SimpleName: positiveIterator(132)", "Delete SimpleName: AbstractRangeSet(133)", "Delete ThisExpression(134)", "Delete SimpleName: asRanges(135)", "Delete MethodInvocation(136)", "Delete SimpleName: iterator(137)", "Delete MethodInvocation(138)", "Delete VariableDeclarationFragment(139)", "Delete FieldDeclaration(140)", "Delete SimpleName: Cut(141)", "Delete SimpleType: Cut(142)", "Delete ParameterizedType: Cut<C>(145)", "Delete SimpleName: prevCut(146)", "Delete SimpleName: Cut(147)", "Delete SimpleName: belowAll(148)", "Delete MethodInvocation(149)", "Delete VariableDeclarationFragment(150)", "Delete FieldDeclaration(151)", "Delete SimpleName: Range(155)", "Delete SimpleType: Range(156)", "Delete SimpleName: C(157)", "Delete SimpleType: C(158)", "Delete ParameterizedType: Range<C>(159)", "Delete MethodDeclaration(252)", "Delete AnonymousClassDeclaration(253)", "Delete ClassInstanceCreation(254)", "Delete ReturnStatement(255)", "Delete Block(256)", "Delete MethodDeclaration(257)", "Delete SimpleName: positiveIterator(161)", "Delete SimpleName: hasNext(162)", "Delete MethodInvocation(163)", "Delete SimpleName: Cut(164)", "Delete SimpleType: Cut(165)", "Delete SimpleName: C(166)", "Delete SimpleType: C(167)", "Delete ParameterizedType: Cut<C>(168)", "Delete SimpleName: oldCut(169)", "Delete SimpleName: prevCut(170)", "Delete VariableDeclarationFragment(171)", "Delete VariableDeclarationStatement(172)", "Delete SimpleName: Range(173)", "Delete SimpleType: Range(174)", "Delete SimpleName: C(175)", "Delete SimpleType: C(176)", "Delete ParameterizedType: Range<C>(177)", "Delete SimpleName: positiveRange(178)", "Delete SimpleName: positiveIterator(179)", "Delete SimpleName: next(180)", "Delete MethodInvocation(181)", "Delete VariableDeclarationFragment(182)", "Delete VariableDeclarationStatement(183)", "Delete SimpleName: prevCut(184)", "Delete QualifiedName: positiveRange.upperBound(185)", "Delete Assignment: =(186)", "Delete ExpressionStatement(187)", "Delete SimpleName: oldCut(188)", "Delete SimpleName: compareTo(189)", "Delete QualifiedName: positiveRange.lowerBound(190)", "Delete MethodInvocation(191)", "Delete NumberLiteral: 0(192)", "Delete InfixExpression: <(193)", "Delete SimpleName: Range(194)", "Delete SimpleType: Range(195)", "Delete SimpleName: C(196)", "Delete SimpleType: C(197)", "Delete ParameterizedType: Range<C>(198)", "Delete SimpleName: oldCut(199)", "Delete QualifiedName: positiveRange.lowerBound(200)", "Delete ClassInstanceCreation(201)", "Delete ReturnStatement(202)", "Delete Block(203)", "Delete IfStatement(204)", "Delete Block(205)", "Delete WhileStatement(206)", "Delete SimpleName: Cut(207)", "Delete SimpleType: Cut(208)", "Delete SimpleName: C(209)", "Delete SimpleType: C(210)", "Delete ParameterizedType: Cut<C>(211)", "Delete SimpleName: posInfinity(212)", "Delete SimpleName: Cut(213)", "Delete MethodInvocation(215)", "Delete VariableDeclarationFragment(216)", "Delete VariableDeclarationStatement(217)", "Delete SimpleName: prevCut(218)", "Delete SimpleName: compareTo(219)", "Delete SimpleName: posInfinity(220)", "Delete MethodInvocation(221)", "Delete NumberLiteral: 0(222)", "Delete InfixExpression: <(223)", "Delete SimpleName: Range(224)", "Delete SimpleType: Range(225)", "Delete SimpleName: C(226)", "Delete SimpleType: C(227)", "Delete ParameterizedType: Range<C>(228)", "Delete SimpleName: result(229)", "Delete SimpleName: Range(230)", "Delete SimpleType: Range(231)", "Delete SimpleName: C(232)", "Delete SimpleType: C(233)", "Delete ParameterizedType: Range<C>(234)", "Delete SimpleName: prevCut(235)", "Delete SimpleName: posInfinity(236)", "Delete ClassInstanceCreation(237)", "Delete VariableDeclarationFragment(238)", "Delete VariableDeclarationStatement(239)", "Delete SimpleName: prevCut(240)", "Delete SimpleName: posInfinity(241)", "Delete Assignment: =(242)", "Delete ExpressionStatement(243)", "Delete SimpleName: result(244)", "Delete ReturnStatement(245)", "Delete Block(246)", "Delete IfStatement(247)", "Delete SimpleName: endOfData(248)", "Delete MethodInvocation(249)", "Delete ReturnStatement(250)"]}}, {"ImmutableRangeSet_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: com.google.common.annotations.Beta to ImportDeclaration at 0"]}, {"root": "INS MarkerAnnotation to TypeDeclaration: class at 1", "operations": ["INS MarkerAnnotation to TypeDeclaration: class at 1", "INS SimpleName: Beta to MarkerAnnotation at 0"]}, {"root": "INS TagElement: @since to Javadoc at 2", "operations": ["INS TextElement:  14.0 to TagElement: @since at 0", "INS TagElement: @since to Javadoc at 2"]}]}}, {"ImmutableRangeSet_diff": {"operations": ["Insert ImportDeclaration(13) into CompilationUnit(2338) at 6", "Insert QualifiedName: com.google.common.annotations.Beta(12) into ImportDeclaration(13) at 0", "Insert MarkerAnnotation(45) into TypeDeclaration: class(2337) at 1", "Insert TagElement: @since(42) into Javadoc(43) at 2", "Insert SimpleName: Beta(44) into MarkerAnnotation(45) at 0", "Insert TextElement:  14.0(41) into TagElement: @since(42) at 0"]}}, {"Range_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: connectedRange.lowerBound to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS SimpleName: upperBound to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: connectedRange.upperBound to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: compareTo to MethodInvocation at 1", "INS SimpleName: upperCmp to VariableDeclarationFragment at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS NumberLiteral: 0 to InfixExpression: <= at 1", "INS InfixExpression: <= to InfixExpression: && at 1", "INS InfixExpression: >= to InfixExpression: && at 0", "INS Block to IfStatement at 1", "INS Block to IfStatement at 2", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS SimpleName: lowerCmp to InfixExpression: >= at 0", "INS SimpleName: connectedRange to ReturnStatement at 0", "INS InfixExpression: >= to ParenthesizedExpression at 0", "INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: && to IfStatement at 0", "INS NumberLiteral: 0 to InfixExpression: <= at 1", "INS InfixExpression: <= to InfixExpression: && at 0", "INS SimpleName: lowerBound to ConditionalExpression at 1", "INS SimpleName: upperCmp to InfixExpression: <= at 0", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS IfStatement to Block at 2", "INS ReturnStatement to Block at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: lowerCmp to InfixExpression: <= at 0", "INS QualifiedName: connectedRange.lowerBound to ConditionalExpression at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: lowerCmp to InfixExpression: >= at 0", "INS Block to IfStatement at 1", "INS SimpleName: upperCmp to InfixExpression: >= at 0", "INS ReturnStatement to Block at 0", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS InfixExpression: >= to InfixExpression: && at 1", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: newLower to VariableDeclarationFragment at 0", "INS ThisExpression to ReturnStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS QualifiedName: other.lowerBound to MethodInvocation at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: compareTo to MethodInvocation at 1", "INS SimpleName: upperBound to MethodInvocation at 0", "INS SimpleName: upperCmp to VariableDeclarationFragment at 0", "INS QualifiedName: other.upperBound to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS ReturnStatement to Block at 0", "INS Block to IfStatement at 1", "INS NumberLiteral: 0 to InfixExpression: <= at 1", "INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: >= to InfixExpression: && at 0", "INS NumberLiteral: 0 to InfixExpression: <= at 1", "INS SimpleName: lowerCmp to InfixExpression: <= at 0", "INS SimpleName: lowerCmp to InfixExpression: >= at 0", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS InfixExpression: <= to ParenthesizedExpression at 0", "INS SimpleName: lowerCmp to InfixExpression: <= at 0", "INS InfixExpression: && to IfStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS InfixExpression: >= to InfixExpression: && at 1", "INS SimpleName: other to ReturnStatement at 0", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS SimpleName: upperCmp to InfixExpression: >= at 0", "INS InfixExpression: <= to InfixExpression: && at 1", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS IfStatement to IfStatement at 2", "INS InfixExpression: <= to InfixExpression: && at 0", "INS SimpleName: lowerBound to ConditionalExpression at 1", "INS SimpleName: upperCmp to InfixExpression: <= at 0", "INS QualifiedName: other.lowerBound to ConditionalExpression at 2", "INS Block to IfStatement at 2", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS Block to IfStatement at 1", "INS NumberLiteral: 0 to InfixExpression: <= at 1", "INS ThisExpression to ReturnStatement at 0", "INS SimpleName: newLower to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS IfStatement to Block at 2", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: checkNotNull to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: lowerBound to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: upperBound to MethodInvocation at 1", "INS SimpleName: checkNotNull to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "UPDATE from newLower to lowerCmp", "operations": ["UPD SimpleName: newLower from newLower to lowerCmp", "UPD SimpleName: newLower from newLower to lowerCmp"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: newLower to VariableDeclarationFragment at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: newLower to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from Ordering to lowerBound", "operations": ["UPD SimpleName: Ordering from Ordering to lowerBound", "UPD SimpleName: Ordering from Ordering to lowerBound"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Ordering to MethodInvocation at 0", "MOV SimpleName: natural to MethodInvocation at 1"]}, {"root": "UPDATE from natural to compareTo", "operations": ["UPD SimpleName: natural from natural to compareTo", "UPD SimpleName: natural from natural to compareTo"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Ordering to MethodInvocation at 0", "MOV SimpleName: natural to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1", "MOV ReturnStatement to Block at 2"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Cut<C> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Cut<C> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Cut<C> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Cut<C> to VariableDeclarationStatement at 0"]}, {"root": "INS ConditionalExpression to VariableDeclarationFragment at 1", "operations": ["INS NumberLiteral: 0 to InfixExpression: <= at 1", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS QualifiedName: connectedRange.upperBound to ConditionalExpression at 2", "INS SimpleName: upperBound to ConditionalExpression at 1", "INS InfixExpression: <= to ParenthesizedExpression at 0", "INS SimpleName: upperCmp to InfixExpression: <= at 0"]}, {"root": "INS ConditionalExpression to VariableDeclarationFragment at 1", "operations": ["INS InfixExpression: >= to ParenthesizedExpression at 0", "INS SimpleName: upperBound to ConditionalExpression at 1", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS QualifiedName: other.upperBound to ConditionalExpression at 2", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS SimpleName: upperCmp to InfixExpression: >= at 0"]}, {"root": "DEL SimpleName: lowerBound", "operations": ["DEL SimpleName: lowerBound"]}, {"root": "DEL SimpleName: upperBound", "operations": ["DEL SimpleName: upperBound"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: upperBound", "DEL SimpleName: Ordering", "DEL QualifiedName: connectedRange.upperBound", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: min", "DEL SimpleName: natural"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL QualifiedName: connectedRange.lowerBound", "DEL SimpleName: max", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: lowerBound", "DEL VariableDeclarationStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: upperBound", "DEL SimpleName: Ordering", "DEL SimpleName: max", "DEL MethodInvocation", "DEL MethodInvocation", "DEL QualifiedName: other.upperBound", "DEL SimpleName: natural"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: min", "DEL SimpleName: lowerBound", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL QualifiedName: other.lowerBound"]}]}}, {"Range_diff": {"operations": ["Insert VariableDeclarationStatement(2102) into Block(2169) at 0", "Insert VariableDeclarationStatement(2110) into Block(2169) at 1", "Insert IfStatement(2168) into Block(2169) at 2", "Insert VariableDeclarationStatement(2230) into Block(2297) at 0", "Insert VariableDeclarationStatement(2238) into Block(2297) at 1", "Insert IfStatement(2296) into Block(2297) at 2", "Insert PrimitiveType: int(2095) into VariableDeclarationStatement(2102) at 0", "Insert VariableDeclarationFragment(2101) into VariableDeclarationStatement(2102) at 1", "Insert PrimitiveType: int(2103) into VariableDeclarationStatement(2110) at 0", "Insert VariableDeclarationFragment(2109) into VariableDeclarationStatement(2110) at 1", "Insert InfixExpression: &&(2117) into IfStatement(2168) at 0", "Insert Block(2120) into IfStatement(2168) at 1", "Insert IfStatement(2167) into IfStatement(2168) at 2", "Insert PrimitiveType: int(2223) into VariableDeclarationStatement(2230) at 0", "Insert VariableDeclarationFragment(2229) into VariableDeclarationStatement(2230) at 1", "Insert PrimitiveType: int(2231) into VariableDeclarationStatement(2238) at 0", "Insert VariableDeclarationFragment(2237) into VariableDeclarationStatement(2238) at 1", "Insert InfixExpression: &&(2245) into IfStatement(2296) at 0", "Insert Block(2248) into IfStatement(2296) at 1", "Insert IfStatement(2295) into IfStatement(2296) at 2", "Insert MethodInvocation(1421) into Assignment: =(1422) at 1", "Insert MethodInvocation(1429) into Assignment: =(1430) at 1", "Update SimpleName: newLower(2096) to lowerCmp", "Move SimpleName: newLower(2096) into VariableDeclarationFragment(2101) at 0", "Insert MethodInvocation(2100) into VariableDeclarationFragment(2101) at 1", "Insert SimpleName: upperCmp(2104) into VariableDeclarationFragment(2109) at 0", "Insert MethodInvocation(2108) into VariableDeclarationFragment(2109) at 1", "Insert InfixExpression: >=(2113) into InfixExpression: &&(2117) at 0", "Insert InfixExpression: <=(2116) into InfixExpression: &&(2117) at 1", "Insert ReturnStatement(2119) into Block(2120) at 0", "Insert InfixExpression: &&(2127) into IfStatement(2167) at 0", "Insert Block(2130) into IfStatement(2167) at 1", "Insert Block(2166) into IfStatement(2167) at 2", "Update SimpleName: newLower(2185) to lowerCmp", "Move SimpleName: newLower(2185) into VariableDeclarationFragment(2229) at 0", "Insert MethodInvocation(2228) into VariableDeclarationFragment(2229) at 1", "Insert SimpleName: upperCmp(2232) into VariableDeclarationFragment(2237) at 0", "Insert MethodInvocation(2236) into VariableDeclarationFragment(2237) at 1", "Insert InfixExpression: <=(2241) into InfixExpression: &&(2245) at 0", "Insert InfixExpression: >=(2244) into InfixExpression: &&(2245) at 1", "Insert ReturnStatement(2247) into Block(2248) at 0", "Insert InfixExpression: &&(2255) into IfStatement(2295) at 0", "Insert Block(2258) into IfStatement(2295) at 1", "Insert Block(2294) into IfStatement(2295) at 2", "Insert SimpleName: checkNotNull(1419) into MethodInvocation(1421) at 0", "Insert SimpleName: lowerBound(1420) into MethodInvocation(1421) at 1", "Insert SimpleName: checkNotNull(1427) into MethodInvocation(1429) at 0", "Insert SimpleName: upperBound(1428) into MethodInvocation(1429) at 1", "Update SimpleName: Ordering(2097) to lowerBound", "Move SimpleName: Ordering(2097) into MethodInvocation(2100) at 0", "Update SimpleName: natural(2098) to compareTo", "Move SimpleName: natural(2098) into MethodInvocation(2100) at 1", "Insert QualifiedName: connectedRange.lowerBound(2099) into MethodInvocation(2100) at 2", "Insert SimpleName: upperBound(2105) into MethodInvocation(2108) at 0", "Insert SimpleName: compareTo(2106) into MethodInvocation(2108) at 1", "Insert QualifiedName: connectedRange.upperBound(2107) into MethodInvocation(2108) at 2", "Insert SimpleName: lowerCmp(2111) into InfixExpression: >=(2113) at 0", "Insert NumberLiteral: 0(2112) into InfixExpression: >=(2113) at 1", "Insert SimpleName: upperCmp(2114) into InfixExpression: <=(2116) at 0", "Insert NumberLiteral: 0(2115) into InfixExpression: <=(2116) at 1", "Insert ThisExpression(2118) into ReturnStatement(2119) at 0", "Insert InfixExpression: <=(2123) into InfixExpression: &&(2127) at 0", "Insert InfixExpression: >=(2126) into InfixExpression: &&(2127) at 1", "Insert ReturnStatement(2129) into Block(2130) at 0", "Insert VariableDeclarationStatement(2145) into Block(2166) at 0", "Move VariableDeclarationStatement(2120) into Block(2166) at 1", "Move ReturnStatement(2125) into Block(2166) at 2", "Update SimpleName: Ordering(2186) to lowerBound", "Move SimpleName: Ordering(2186) into MethodInvocation(2228) at 0", "Update SimpleName: natural(2187) to compareTo", "Move SimpleName: natural(2187) into MethodInvocation(2228) at 1", "Insert QualifiedName: other.lowerBound(2227) into MethodInvocation(2228) at 2", "Insert SimpleName: upperBound(2233) into MethodInvocation(2236) at 0", "Insert SimpleName: compareTo(2234) into MethodInvocation(2236) at 1", "Insert QualifiedName: other.upperBound(2235) into MethodInvocation(2236) at 2", "Insert SimpleName: lowerCmp(2239) into InfixExpression: <=(2241) at 0", "Insert NumberLiteral: 0(2240) into InfixExpression: <=(2241) at 1", "Insert SimpleName: upperCmp(2242) into InfixExpression: >=(2244) at 0", "Insert NumberLiteral: 0(2243) into InfixExpression: >=(2244) at 1", "Insert ThisExpression(2246) into ReturnStatement(2247) at 0", "Insert InfixExpression: >=(2251) into InfixExpression: &&(2255) at 0", "Insert InfixExpression: <=(2254) into InfixExpression: &&(2255) at 1", "Insert ReturnStatement(2257) into Block(2258) at 0", "Insert VariableDeclarationStatement(2273) into Block(2294) at 0", "Move VariableDeclarationStatement(2209) into Block(2294) at 1", "Move ReturnStatement(2214) into Block(2294) at 2", "Insert SimpleName: lowerCmp(2121) into InfixExpression: <=(2123) at 0", "Insert NumberLiteral: 0(2122) into InfixExpression: <=(2123) at 1", "Insert SimpleName: upperCmp(2124) into InfixExpression: >=(2126) at 0", "Insert NumberLiteral: 0(2125) into InfixExpression: >=(2126) at 1", "Insert SimpleName: connectedRange(2128) into ReturnStatement(2129) at 0", "Move ParameterizedType: Cut<C>(2110) into VariableDeclarationStatement(2145) at 0", "Insert VariableDeclarationFragment(2144) into VariableDeclarationStatement(2145) at 1", "Move ParameterizedType: Cut<C>(2184) into VariableDeclarationStatement(2160) at 0", "Insert SimpleName: lowerCmp(2249) into InfixExpression: >=(2251) at 0", "Insert NumberLiteral: 0(2250) into InfixExpression: >=(2251) at 1", "Insert SimpleName: upperCmp(2252) into InfixExpression: <=(2254) at 0", "Insert NumberLiteral: 0(2253) into InfixExpression: <=(2254) at 1", "Insert SimpleName: other(2256) into ReturnStatement(2257) at 0", "Move ParameterizedType: Cut<C>(2199) into VariableDeclarationStatement(2273) at 0", "Insert VariableDeclarationFragment(2272) into VariableDeclarationStatement(2273) at 1", "Move ParameterizedType: Cut<C>(2095) into VariableDeclarationStatement(2288) at 0", "Insert SimpleName: newLower(2136) into VariableDeclarationFragment(2144) at 0", "Insert ConditionalExpression(2143) into VariableDeclarationFragment(2144) at 1", "Insert ConditionalExpression(2158) into VariableDeclarationFragment(2159) at 1", "Insert SimpleName: newLower(2264) into VariableDeclarationFragment(2272) at 0", "Insert ConditionalExpression(2271) into VariableDeclarationFragment(2272) at 1", "Insert ConditionalExpression(2286) into VariableDeclarationFragment(2287) at 1", "Insert ParenthesizedExpression(2140) into ConditionalExpression(2143) at 0", "Insert SimpleName: lowerBound(2141) into ConditionalExpression(2143) at 1", "Insert QualifiedName: connectedRange.lowerBound(2142) into ConditionalExpression(2143) at 2", "Insert ParenthesizedExpression(2155) into ConditionalExpression(2158) at 0", "Insert SimpleName: upperBound(2156) into ConditionalExpression(2158) at 1", "Insert QualifiedName: connectedRange.upperBound(2157) into ConditionalExpression(2158) at 2", "Insert ParenthesizedExpression(2268) into ConditionalExpression(2271) at 0", "Insert SimpleName: lowerBound(2269) into ConditionalExpression(2271) at 1", "Insert QualifiedName: other.lowerBound(2270) into ConditionalExpression(2271) at 2", "Insert ParenthesizedExpression(2283) into ConditionalExpression(2286) at 0", "Insert SimpleName: upperBound(2284) into ConditionalExpression(2286) at 1", "Insert QualifiedName: other.upperBound(2285) into ConditionalExpression(2286) at 2", "Insert InfixExpression: >=(2139) into ParenthesizedExpression(2140) at 0", "Insert InfixExpression: <=(2154) into ParenthesizedExpression(2155) at 0", "Insert InfixExpression: <=(2267) into ParenthesizedExpression(2268) at 0", "Insert InfixExpression: >=(2282) into ParenthesizedExpression(2283) at 0", "Insert SimpleName: lowerCmp(2137) into InfixExpression: >=(2139) at 0", "Insert NumberLiteral: 0(2138) into InfixExpression: >=(2139) at 1", "Insert SimpleName: upperCmp(2152) into InfixExpression: <=(2154) at 0", "Insert NumberLiteral: 0(2153) into InfixExpression: <=(2154) at 1", "Insert SimpleName: lowerCmp(2265) into InfixExpression: <=(2267) at 0", "Insert NumberLiteral: 0(2266) into InfixExpression: <=(2267) at 1", "Insert SimpleName: upperCmp(2280) into InfixExpression: >=(2282) at 0", "Insert NumberLiteral: 0(2281) into InfixExpression: >=(2282) at 1", "Delete SimpleName: lowerBound(1419)", "Delete SimpleName: upperBound(1425)", "Delete SimpleName: Ordering(2112)", "Delete SimpleName: natural(2113)", "Delete MethodInvocation(2114)", "Delete SimpleName: min(2115)", "Delete SimpleName: upperBound(2116)", "Delete QualifiedName: connectedRange.upperBound(2117)", "Delete MethodInvocation(2118)", "Delete MethodInvocation(2099)", "Delete SimpleName: max(2100)", "Delete SimpleName: lowerBound(2101)", "Delete QualifiedName: connectedRange.lowerBound(2102)", "Delete MethodInvocation(2103)", "Delete VariableDeclarationFragment(2104)", "Delete VariableDeclarationStatement(2105)", "Delete SimpleName: Ordering(2201)", "Delete SimpleName: natural(2202)", "Delete MethodInvocation(2203)", "Delete SimpleName: max(2204)", "Delete SimpleName: upperBound(2205)", "Delete QualifiedName: other.upperBound(2206)", "Delete MethodInvocation(2207)", "Delete MethodInvocation(2188)", "Delete SimpleName: min(2189)", "Delete SimpleName: lowerBound(2190)", "Delete QualifiedName: other.lowerBound(2191)", "Delete MethodInvocation(2192)", "Delete VariableDeclarationFragment(2193)", "Delete VariableDeclarationStatement(2194)"]}}, {"RangeSet_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: com.google.common.annotations.Beta to ImportDeclaration at 0"]}, {"root": "INS MarkerAnnotation to TypeDeclaration: interface at 1", "operations": ["INS MarkerAnnotation to TypeDeclaration: interface at 1", "INS SimpleName: Beta to MarkerAnnotation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 15", "operations": ["INS TagElement: @code to TagElement at 1", "INS TextElement: . to TagElement at 9", "INS TagElement to Javadoc at 0", "INS TextElement:  (optional operation).  After this operation, to TagElement at 2", "INS SimpleName: clear to MethodDeclaration at 2", "INS TagElement: @code to TagElement at 3", "INS PrimitiveType: void to MethodDeclaration at 1", "INS TextElement:  will return false for all  to TagElement at 4", "INS TextElement:  RangeSet to TagElement: @code at 0", "INS TextElement:  c to TagElement: @code at 0", "INS TextElement:  remove(Range.all()) to TagElement: @code at 0", "INS TagElement: @code to TagElement at 8", "INS TextElement: operation to TagElement: @throws at 3", "INS TextElement:  clear to TagElement: @code at 0", "INS TextElement:  this.contains(c) to TagElement: @code at 0", "INS TextElement: <p>This is equivalent to  to TagElement at 7", "INS MethodDeclaration to TypeDeclaration: interface at 15", "INS TagElement: @code to TagElement at 5", "INS SimpleName: UnsupportedOperationException to TagElement: @throws at 0", "INS TextElement: Removes all ranges from this  to TagElement at 0", "INS TagElement: @code to TagElement: @throws at 2", "INS TextElement:  if this range set does not support the  to TagElement: @throws at 1", "INS TagElement: @throws to Javadoc at 1", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: . to TagElement at 6"]}, {"root": "INS TagElement: @since to Javadoc at 3", "operations": ["INS TagElement: @since to Javadoc at 3", "INS TextElement:  14.0 to TagElement: @since at 0"]}]}}, {"RangeSet_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(550) at 1", "Insert QualifiedName: com.google.common.annotations.Beta(2) into ImportDeclaration(3) at 0", "Insert MarkerAnnotation(79) into TypeDeclaration: interface(549) at 1", "Insert MethodDeclaration(405) into TypeDeclaration: interface(549) at 15", "Insert TagElement: @since(76) into Javadoc(77) at 3", "Insert SimpleName: Beta(78) into MarkerAnnotation(79) at 0", "Insert Javadoc(402) into MethodDeclaration(405) at 0", "Insert PrimitiveType: void(403) into MethodDeclaration(405) at 1", "Insert SimpleName: clear(404) into MethodDeclaration(405) at 2", "Insert TextElement:  14.0(75) into TagElement: @since(76) at 0", "Insert TagElement(395) into Javadoc(402) at 0", "Insert TagElement: @throws(401) into Javadoc(402) at 1", "Insert TextElement: Removes all ranges from this (381) into TagElement(395) at 0", "Insert TagElement: @code(383) into TagElement(395) at 1", "Insert TextElement:  (optional operation).  After this operation,(384) into TagElement(395) at 2", "Insert TagElement: @code(386) into TagElement(395) at 3", "Insert TextElement:  will return false for all (387) into TagElement(395) at 4", "Insert TagElement: @code(389) into TagElement(395) at 5", "Insert TextElement: .(390) into TagElement(395) at 6", "Insert TextElement: <p>This is equivalent to (391) into TagElement(395) at 7", "Insert TagElement: @code(393) into TagElement(395) at 8", "Insert TextElement: .(394) into TagElement(395) at 9", "Insert SimpleName: UnsupportedOperationException(396) into TagElement: @throws(401) at 0", "Insert TextElement:  if this range set does not support the (397) into TagElement: @throws(401) at 1", "Insert TagElement: @code(399) into TagElement: @throws(401) at 2", "Insert TextElement: operation(400) into TagElement: @throws(401) at 3", "Insert TextElement:  RangeSet(382) into TagElement: @code(383) at 0", "Insert TextElement:  this.contains(c)(385) into TagElement: @code(386) at 0", "Insert TextElement:  c(388) into TagElement: @code(389) at 0", "Insert TextElement:  remove(Range.all())(392) into TagElement: @code(393) at 0", "Insert TextElement:  clear(398) into TagElement: @code(399) at 0"]}}, {"TreeRangeSet_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: com.google.common.annotations.Beta to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "UPDATE from java.util.AbstractSet to java.util.Comparator", "operations": ["UPD QualifiedName: java.util.AbstractSet from java.util.AbstractSet to java.util.Comparator"]}, {"root": "INS MarkerAnnotation to TypeDeclaration: class at 1", "operations": ["INS MarkerAnnotation to TypeDeclaration: class at 1", "INS SimpleName: Beta to MarkerAnnotation at 0"]}, {"root": "UPDATE from private to public", "operations": ["UPD Modifier: private from private to public", "UPD Modifier: final from final to public"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 22", "operations": ["INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ParameterizedType: Range<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 2", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleName: values to MethodInvocation at 1", "INS ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>> to ClassInstanceCreation at 0", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: Object to SingleVariableDeclaration at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: Range to SimpleType: Range at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: tailMap to MethodInvocation at 1", "INS SimpleName: key to SingleVariableDeclaration at 2", "INS SimpleName: C to SimpleType: C at 0", "INS ReturnStatement to Block at 1", "INS MethodInvocation to Assignment: = at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: Range<Cut<C>> at 1", "INS SimpleType: Cut to InstanceofExpression at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS MarkerAnnotation to SingleVariableDeclaration at 0", "INS SimpleName: C to SimpleType: C at 0", "INS Block to IfStatement at 1", "INS Modifier: public to MethodDeclaration at 1", "INS Modifier: final to FieldDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: RangesByUpperBound to TypeDeclaration: class at 3", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS Block to IfStatement at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: Maps to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: Comparator to SimpleType: Comparator at 0", "INS Block to IfStatement at 1", "INS SimpleName: iterator to MethodInvocation at 1", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleName: Maps to MethodInvocation at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: Object to SimpleType: Object at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 1", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleName: Range to SimpleType: Range at 0", "INS TypeParameter to TypeDeclaration: class at 4", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleName: upperBoundWindow to FieldAccess at 1", "INS SimpleName: cut to MethodInvocation at 2", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: range to MethodInvocation at 3", "INS SimpleName: get to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS SimpleName: backingItr to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to TryStatement at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS InfixExpression: == to IfStatement at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: backingItr to Assignment: = at 0", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS Javadoc to FieldDeclaration at 0", "INS SimpleName: fromKey to SingleVariableDeclaration at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS SimpleName: size to MethodDeclaration at 3", "INS QualifiedName: upperBoundWindow.lowerBound to MethodInvocation at 0", "INS QualifiedName: range.upperBound to MethodInvocation at 2", "INS SimpleType: AbstractIterator to ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>> at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: upperBound to FieldAccess at 1", "INS QualifiedName: range.upperBound to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleType: Entry to ParameterizedType: Entry<Cut<C>,Range<C>> at 0", "INS SimpleName: forBoolean to MethodInvocation at 1", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS MethodInvocation to Assignment: = at 1", "INS ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>> to MethodDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>> to ClassInstanceCreation at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: AbstractIterator to SimpleType: AbstractIterator at 0", "INS ReturnStatement to Block at 2", "INS Block to MethodDeclaration at 4", "INS ParameterizedType: Range<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 2", "INS SimpleName: window to SingleVariableDeclaration at 1", "INS ParameterizedType: Cut<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 1", "INS BooleanLiteral: true to MethodInvocation at 3", "INS SimpleName: lowerEntry to MethodInvocation at 0", "INS SimpleName: C to SimpleType: C at 0", "INS IfStatement to Block at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 4", "INS SimpleName: RangesByUpperBound to MethodDeclaration at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: AbstractIterator to SimpleType: AbstractIterator at 0", "INS ParameterizedType: Entry<Cut<C>,Range<C>> to MethodDeclaration at 2", "INS Block to IfStatement at 2", "INS SimpleName: iterator to MethodInvocation at 1", "INS SimpleName: NavigableMap to SimpleType: NavigableMap at 0", "INS SimpleName: tailMap to MethodDeclaration at 3", "INS TryStatement to Block at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: hasLowerBound to MethodInvocation at 1", "INS SimpleType: Entry to ParameterizedType: Entry<Cut<C>,Range<C>> at 0", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleName: endOfData to MethodInvocation at 0", "INS SimpleName: immutableEntry to MethodInvocation at 1", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS Block to IfStatement at 1", "INS SimpleName: subMap to MethodInvocation at 0", "INS SimpleName: entryIterator to MethodInvocation at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: C to SimpleType: C at 0", "INS ReturnStatement to Block at 0", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: C to TypeParameter at 0", "INS IfStatement to Block at 0", "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to MethodDeclaration at 2", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleType: AbstractIterator to ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>> at 0", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS ParameterizedType: Entry<Cut<C>,Range<C>> to ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>> at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Comparable to SimpleType: Comparable at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS MethodInvocation to FieldAccess at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: candidate to MethodInvocation at 0", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: hasNext to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS IfStatement to Block at 1", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS MethodInvocation to ConditionalExpression at 1", "INS SimpleType: Entry to ParameterizedType: Entry<Cut<C>,Range<C>> at 0", "INS StringLiteral: \"unchecked\" to SingleMemberAnnotation at 1", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS ParameterizedType: Range<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 2", "INS SimpleName: Range to SimpleType: Range at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: Range<Cut<C>> at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS Block to MethodDeclaration at 4", "INS ParameterizedType: Cut<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 1", "INS SimpleName: upperBoundWindow to VariableDeclarationFragment at 0", "INS Block to MethodDeclaration at 6", "INS ConditionalExpression to ReturnStatement at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: rangesByLowerBound to VariableDeclarationFragment at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS VariableDeclarationStatement to Block at 0", "INS InfixExpression: != to ReturnStatement at 0", "INS SimpleName: Nullable to MarkerAnnotation at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: C to SimpleType: C at 0", "INS WildcardType: ? super Cut<C> to ParameterizedType: Comparator<? super Cut<C>> at 1", "INS VariableDeclarationStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS ParameterizedType: PeekingIterator<Range<C>> to VariableDeclarationStatement at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: lowerEndpoint to MethodInvocation at 1", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS MethodInvocation to ConditionalExpression at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: fromKey to MethodInvocation at 2", "INS SimpleName: isLessThan to MethodInvocation at 1", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: rangesByLowerBound to MethodInvocation at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleName: rangesByLowerBound to Assignment: = at 1", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: NavigableMap to SimpleType: NavigableMap at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: C to SimpleType: C at 0", "INS Block to IfStatement at 1", "INS ParameterizedType: Comparator<? super Cut<C>> to MethodDeclaration at 2", "INS ParameterizedType: Cut<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 1", "INS SimpleName: toInclusive to MethodInvocation at 2", "INS SimpleName: inclusive to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: candidate to MethodInvocation at 0", "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to FieldDeclaration at 2", "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS SimpleName: cut to VariableDeclarationFragment at 0", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS SimpleName: upperBoundWindow to Assignment: = at 1", "INS Modifier: public to MethodDeclaration at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: backingItr to Assignment: = at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS ReturnStatement to Block at 1", "INS SimpleName: rangesByLowerBound to MethodInvocation at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS ParameterizedType: Range<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 2", "INS SimpleType: NavigableMap to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 0", "INS SimpleName: entryIterator to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS QualifiedName: upperBoundWindow.lowerBound to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: containsKey to MethodDeclaration at 3", "INS SimpleName: C to SimpleType: C at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: C to SimpleType: C at 0", "INS ExpressionStatement to Block at 1", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleName: C to SimpleType: C at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: upperBoundWindow to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: downTo to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: values to MethodInvocation at 1", "INS Modifier: private to FieldDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 1", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SingleMemberAnnotation to VariableDeclarationStatement at 0", "INS Block to IfStatement at 1", "INS ParameterizedType: Range<Cut<C>> to SingleVariableDeclaration at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS MethodInvocation to ConditionalExpression at 0", "INS SimpleName: NavigableMap to SimpleType: NavigableMap at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 1", "INS FieldAccess to Assignment: = at 0", "INS QualifiedName: range.upperBound to MethodInvocation at 2", "INS SimpleName: equals to MethodInvocation at 1", "INS MethodInvocation to FieldAccess at 0", "INS SimpleType: Object to SingleVariableDeclaration at 1", "INS SimpleName: computeNext to MethodDeclaration at 3", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleName: Range to SimpleType: Range at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: iterator to MethodInvocation at 1", "INS IfStatement to Block at 3", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: NavigableMap to SimpleType: NavigableMap at 0", "INS ParameterizedType: Entry<Cut<C>,Range<C>> to ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>> at 1", "INS Block to MethodDeclaration at 8", "INS Modifier: static to TypeDeclaration: class at 1", "INS CatchClause to TryStatement at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: NavigableMap to SimpleType: NavigableMap at 0", "INS SimpleName: BoundType to MethodInvocation at 0", "INS TextElement: upperBoundWindow represents the headMap/subMap/tailMap view of the entire \"ranges by upper to TagElement at 0", "INS SimpleName: backingItr to VariableDeclarationFragment at 0", "INS SimpleName: upperBoundWindow to MethodInvocation at 0", "INS SimpleType: ClassCastException to SingleVariableDeclaration at 0", "INS InstanceofExpression to IfStatement at 0", "INS SimpleName: endOfData to MethodInvocation at 0", "INS SimpleName: rangesByLowerBound to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS Modifier: private to MethodDeclaration at 0", "INS ParameterizedType: Range<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 2", "INS SimpleName: iterator to MethodInvocation at 1", "INS SimpleName: Range to SimpleType: Range at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleType: Iterator to ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>> at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleName: inclusive to SingleVariableDeclaration at 1", "INS SimpleName: endOfData to MethodInvocation at 0", "INS SimpleName: isLessThan to MethodInvocation at 1", "INS SimpleName: forBoolean to MethodInvocation at 1", "INS ParameterizedType: Range<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 2", "INS MethodInvocation to MethodInvocation at 0", "INS WildcardType: ? to ParameterizedType: Comparable<?> at 1", "INS SimpleName: isEmpty to MethodDeclaration at 3", "INS MethodInvocation to MethodInvocation at 0", "INS Modifier: private to FieldDeclaration at 1", "INS InfixExpression: != to InfixExpression: && at 0", "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to MethodDeclaration at 1", "INS SimpleType: NavigableMap to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 0", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS ParameterizedType: Range<Cut<C>> to FieldDeclaration at 3", "INS ParameterizedType: Range<Cut<C>> to SingleVariableDeclaration at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleName: getKey to MethodInvocation at 1", "INS Block to IfStatement at 2", "INS SimpleName: range to MethodInvocation at 3", "INS SimpleName: upperBoundWindow to MethodInvocation at 0", "INS SimpleName: toKey to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: isLessThan to MethodInvocation at 1", "INS SimpleName: candidate to InfixExpression: != at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS SimpleType: NavigableMap to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 0", "INS SimpleName: C to SimpleType: C at 0", "INS ParameterizedType: Comparable<?> to TypeParameter at 1", "INS SimpleName: immutableEntry to MethodInvocation at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: headMap to MethodDeclaration at 3", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleName: range to MethodInvocation at 1", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS MethodInvocation to MethodInvocation at 1", "INS InfixExpression: && to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: backingItr to MethodInvocation at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 22", "INS SimpleName: fromInclusive to SingleVariableDeclaration at 1", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleType: PeekingIterator to ParameterizedType: PeekingIterator<Range<C>> at 0", "INS IfStatement to Block at 2", "INS SimpleType: Comparator to ParameterizedType: Comparator<? super Cut<C>> at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: tailMap to MethodInvocation at 1", "INS SimpleName: upperBound to FieldAccess at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS BooleanLiteral: true to MethodInvocation at 3", "INS MethodInvocation to ConditionalExpression at 0", "INS SimpleName: PeekingIterator to SimpleType: PeekingIterator at 0", "INS SimpleName: C to SimpleType: C at 0", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS SimpleName: ClassCastException to SimpleType: ClassCastException at 0", "INS SimpleType: Comparable to ParameterizedType: Comparable<?> at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: endOfData to MethodInvocation at 0", "INS IfStatement to IfStatement at 2", "INS MethodInvocation to InfixExpression: && at 1", "INS SimpleName: rangesByLowerBound to SingleVariableDeclaration at 1", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS MethodInvocation to ReturnStatement at 0", "INS Block to MethodDeclaration at 3", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS IfStatement to Block at 0", "INS SimpleType: Iterator to ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>> at 0", "INS MethodInvocation to ConditionalExpression at 1", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleName: rangesByLowerBound to FieldAccess at 1", "INS QualifiedName: range.upperBound to MethodInvocation at 2", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: values to MethodInvocation at 1", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS MethodInvocation to MethodInvocation at 5", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: upperBoundWindow to MethodInvocation at 0", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: hasNext to MethodInvocation at 1", "INS SimpleName: fromKey to SingleVariableDeclaration at 1", "INS FieldAccess to MethodInvocation at 2", "INS SimpleName: Range to SimpleType: Range at 0", "INS ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>> to MethodDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: toKey to SingleVariableDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS ConditionalExpression to ReturnStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleName: get to MethodDeclaration at 3", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS ParameterizedType: Range<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 2", "INS SimpleName: inclusive to SingleVariableDeclaration at 1", "INS SimpleName: upperBoundWindow to SingleVariableDeclaration at 1", "INS SimpleName: key to MethodInvocation at 1", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: Range<Cut<C>> at 1", "INS IfStatement to Block at 0", "INS SimpleName: C to SimpleType: C at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: C to SimpleType: C at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to SingleVariableDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: subMap to MethodDeclaration at 2", "INS SimpleName: Range to MethodInvocation at 0", "INS ParameterizedType: Range<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 2", "INS ReturnStatement to Block at 0", "INS PrefixExpression: ! to ConditionalExpression at 2", "INS SimpleType: Range to ParameterizedType: Range<Cut<C>> at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: hasNext to MethodInvocation at 1", "INS PrimitiveType: int to MethodDeclaration at 2", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS ParameterizedType: Cut<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 1", "INS ParameterizedType: Cut<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 1", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: descendingEntryIterator to MethodDeclaration at 2", "INS SimpleName: Range to MethodInvocation at 0", "INS SimpleType: NavigableMap to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 0", "INS SimpleType: Range to ParameterizedType: Range<Cut<C>> at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS MethodInvocation to IfStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: toInclusive to SingleVariableDeclaration at 1", "INS SimpleType: Range to ParameterizedType: Range<Cut<C>> at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleName: rangesByLowerBound to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: comparator to MethodDeclaration at 3", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleName: key to SingleVariableDeclaration at 2", "INS SimpleName: BoundType to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS ParameterizedType: Range<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 2", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS MethodInvocation to MethodInvocation at 2", "INS Block to MethodDeclaration at 5", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleType: Entry to ParameterizedType: Entry<Cut<C>,Range<C>> at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS NullLiteral to ReturnStatement at 0", "INS SimpleName: all to MethodInvocation at 1", "INS SimpleType: Entry to ParameterizedType: Entry<Cut<C>,Range<C>> at 0", "INS QualifiedName: upperBoundWindow.upperBound to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: key to CastExpression at 1", "INS ParameterizedType: Entry<Cut<C>,Range<C>> to ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>> at 1", "INS SimpleName: computeNext to MethodDeclaration at 3", "INS SimpleName: subMap to MethodDeclaration at 3", "INS TextElement: bound\" map; it's a constraint on the *keys*, and does not affect the values. to TagElement at 1", "INS SimpleType: NavigableMap to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS ParameterizedType: Range<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: subMap to MethodInvocation at 0", "INS SimpleName: values to MethodInvocation at 1", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS ParameterizedType: Cut<C> to VariableDeclarationStatement at 1", "INS ParameterizedType: Cut<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 1", "INS SimpleName: entryIterator to MethodDeclaration at 2", "INS SimpleName: toKey to MethodInvocation at 4", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS ParameterizedType: Entry<Cut<C>,Range<C>> to ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>> at 1", "INS SimpleName: backingItr to VariableDeclarationFragment at 0", "INS TagElement to Javadoc at 0", "INS ReturnStatement to Block at 3", "INS SimpleName: backingItr to Assignment: = at 0", "INS IfStatement to Block at 1", "INS SimpleName: backingItr to Assignment: = at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: key to InstanceofExpression at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 23", "operations": ["INS ExpressionStatement to Block at 1", "INS Modifier: static to TypeDeclaration: class at 1", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: positiveRangesByLowerBound to SingleVariableDeclaration at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: Nullable to MarkerAnnotation at 0", "INS ParameterizedType: Range<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 2", "INS InfixExpression: != to ReturnStatement at 0", "INS SimpleName: Range to MethodInvocation at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS ParameterizedType: Collection<Range<C>> to VariableDeclarationStatement at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS Modifier: private to FieldDeclaration at 1", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleType: Range to ParameterizedType: Range<Cut<C>> at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS ParameterizedType: Comparable<?> to TypeParameter at 1", "INS IfStatement to IfStatement at 2", "INS ThisExpression to FieldAccess at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: negativeRange to Assignment: = at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS ParameterizedType: Range<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 2", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleName: nextComplementRangeLowerBound to MethodInvocation at 2", "INS SimpleName: nextComplementRangeLowerBound to VariableDeclarationFragment at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleName: C to SimpleType: C at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: C to SimpleType: C at 0", "INS Modifier: final to TypeDeclaration: class at 2", "INS ReturnStatement to Block at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: Iterators to MethodInvocation at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleType: Object to SingleVariableDeclaration at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: positiveRangesByLowerBound to Assignment: = at 1", "INS ParameterizedType: Cut<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 1", "INS SimpleName: Cut to MethodInvocation at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS MethodInvocation to InfixExpression: || at 0", "INS Modifier: public to MethodDeclaration at 2", "INS IfStatement to Block at 2", "INS SimpleName: NavigableMap to SimpleType: NavigableMap at 0", "INS SimpleName: negativeRange to VariableDeclarationFragment at 0", "INS ParameterizedType: Range<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 2", "INS SimpleType: NavigableMap to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 0", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleName: lowerBound to FieldAccess at 1", "INS ParameterizedType: Cut<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 1", "INS SimpleName: Comparator to SimpleType: Comparator at 0", "INS Block to IfStatement at 2", "INS SimpleName: NavigableMap to SimpleType: NavigableMap at 0", "INS QualifiedName: positiveRange.upperBound to Assignment: = at 1", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: create to MethodInvocation at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: peek to MethodInvocation at 1", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleName: C to SimpleType: C at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: key to SingleVariableDeclaration at 1", "INS SimpleName: Range to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS SimpleType: NavigableMap to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 0", "INS SimpleName: Comparable to SimpleType: Comparable at 0", "INS SimpleName: ComplementRangesByLowerBound to MethodDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleName: complementLowerBoundWindow to MethodInvocation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: C to SimpleType: C at 0", "INS Block to MethodDeclaration at 3", "INS SimpleType: Range to ParameterizedType: Range<Cut<C>> at 0", "INS SimpleName: endOfData to MethodInvocation at 0", "INS SimpleName: values to MethodInvocation at 1", "INS WildcardType: ? super Cut<C> to ParameterizedType: Comparator<? super Cut<C>> at 1", "INS QualifiedName: positiveRange.lowerBound to MethodInvocation at 3", "INS MethodInvocation to PrefixExpression: ! at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: Entry to ParameterizedType: Entry<Cut<C>,Range<C>> at 0", "INS SimpleName: upperBound to FieldAccess at 1", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS ParameterizedType: Cut<C> to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: natural to MethodInvocation at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 2", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS Block to IfStatement at 2", "INS SimpleName: firstComplementRangeLowerBound to VariableDeclarationFragment at 1", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleType: Comparator to ParameterizedType: Comparator<? super Cut<C>> at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS ParenthesizedExpression to InfixExpression: && at 1", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleName: toKey to SingleVariableDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: hasNext to MethodInvocation at 1", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleName: C to SimpleType: C at 0", "INS MethodInvocation to Assignment: = at 1", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: C to SimpleType: C at 0", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS FieldAccess to Assignment: = at 1", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: Cut to MethodInvocation at 0", "INS ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>> to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: iterator to MethodInvocation at 1", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: complementLowerBoundWindow to FieldAccess at 1", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: C to SimpleType: C at 0", "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to FieldDeclaration at 2", "INS SimpleName: subMap to MethodDeclaration at 2", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: C to SimpleType: C at 0", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to ConstructorInvocation at 1", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS Modifier: private to MethodDeclaration at 0", "INS ParameterizedType: Entry<Cut<C>,Range<C>> to MethodDeclaration at 2", "INS SimpleName: NavigableMap to SimpleType: NavigableMap at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: complementLowerBoundWindow to VariableDeclarationFragment at 0", "INS SimpleName: firstComplementRangeLowerBound to VariableDeclarationFragment at 0", "INS SimpleName: positiveRangesByLowerBound to ConstructorInvocation at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SingleVariableDeclaration to MethodDeclaration at 1", "INS ParameterizedType: Cut<C> to ParameterizedType: Range<Cut<C>> at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: Range to SimpleType: Range at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS ReturnStatement to Block at 3", "INS SimpleName: AbstractIterator to SimpleType: AbstractIterator at 0", "INS SimpleType: NavigableMap to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 0", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleName: Iterators to MethodInvocation at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 1", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS PrefixExpression: ! to InfixExpression: || at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: key to MethodInvocation at 1", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleType: C to MethodInvocation at 1", "INS SimpleName: positiveItr to MethodInvocation at 0", "INS SimpleType: Range to ParameterizedType: Range<Cut<C>> at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: C to SimpleType: C at 0", "INS TextElement: the values. to TagElement at 2", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: Collection to ParameterizedType: Collection<Range<C>> at 0", "INS IfStatement to Block at 1", "INS SimpleName: positiveRanges to Assignment: = at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 1", "INS SimpleName: ComplementRangesByLowerBound to TypeDeclaration: class at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: get to MethodDeclaration at 4", "INS SimpleName: positiveRangesByUpperBound to VariableDeclarationFragment at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: Maps to MethodInvocation at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS ParameterizedType: Range<Cut<C>> to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to SingleVariableDeclaration at 0", "INS SimpleType: NavigableMap to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS ParameterizedType: Cut<C> to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to IfStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS ReturnStatement to Block at 5", "INS SimpleType: Entry to ParameterizedType: Entry<Cut<C>,Range<C>> at 0", "INS SimpleName: positiveRangesByLowerBound to FieldAccess at 1", "INS ParameterizedType: Cut<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 1", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleName: AbstractNavigableMap to SimpleType: AbstractNavigableMap at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 1", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS ParameterizedType: Entry<Cut<C>,Range<C>> to ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>> at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS ParameterizedType: Cut<C> to WildcardType: ? super Cut<C> at 0", "INS SimpleName: entryIterator to MethodDeclaration at 2", "INS ParameterizedType: Cut<C> to ParameterizedType: Range<Cut<C>> at 1", "INS ParameterizedType: Range<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 2", "INS SimpleType: NavigableMap to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 0", "INS ConstructorInvocation to Block at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: positiveRangesByLowerBound to VariableDeclarationFragment at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: positiveItr to MethodInvocation at 0", "INS SimpleName: key to SingleVariableDeclaration at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: AbstractNavigableMap to ParameterizedType: AbstractNavigableMap<Cut<C>,Range<C>> at 0", "INS SimpleName: window to SingleVariableDeclaration at 1", "INS SimpleType: Iterator to ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>> at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: isLessThan to MethodInvocation at 1", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: Iterators to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS ParameterizedType: Range<C> to MethodDeclaration at 3", "INS TextElement: complementLowerBoundWindow represents the headMap/subMap/tailMap view of the entire to TagElement at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: containsKey to MethodDeclaration at 3", "INS FieldAccess to InfixExpression: != at 0", "INS SimpleName: C to SimpleType: C at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS InfixExpression: != to InfixExpression: || at 1", "INS QualifiedName: complementLowerBoundWindow.upperBound to MethodInvocation at 0", "INS MethodInvocation to FieldAccess at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS ParameterizedType: Range<C> to ParameterizedType: Collection<Range<C>> at 1", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: positiveItr to VariableDeclarationFragment at 0", "INS FieldAccess to Assignment: = at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: subWindow to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ParameterizedType: Range<C> to ParameterizedType: AbstractNavigableMap<Cut<C>,Range<C>> at 2", "INS MethodInvocation to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: positiveRange to VariableDeclarationFragment at 0", "INS FieldAccess to Assignment: = at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: AbstractNavigableMap<Cut<C>,Range<C>> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: positiveRanges to VariableDeclarationFragment at 0", "INS ParameterizedType: Range<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 2", "INS SimpleName: positiveRanges to MethodInvocation at 0", "INS ParameterizedType: AbstractNavigableMap<Cut<C>,Range<C>> to TypeDeclaration: class at 5", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: hasLowerBound to MethodInvocation at 1", "INS SimpleName: positiveRangesByUpperBound to MethodInvocation at 0", "INS ParameterizedType: Range<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 2", "INS SimpleName: immutableEntry to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS ParameterizedType: Cut<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 1", "INS ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>> to ClassInstanceCreation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: hasNext to MethodInvocation at 1", "INS ParameterizedType: Range<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 2", "INS ThisExpression to FieldAccess at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: window to Assignment: = at 1", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleType: C to ParameterizedType: RangesByUpperBound<C> at 1", "INS Block to MethodDeclaration at 4", "INS ParameterizedType: Range<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 2", "INS ParameterizedType: RangesByUpperBound<C> to ClassInstanceCreation at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 1", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS WildcardType: ? to ParameterizedType: Comparable<?> at 1", "INS SimpleName: Range to SimpleType: Range at 0", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS NullLiteral to InfixExpression: != at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: positiveItr to MethodInvocation at 0", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: aboveAll to MethodInvocation at 2", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: C to SimpleType: C at 0", "INS Block to MethodDeclaration at 4", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleName: contains to MethodInvocation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: NavigableMap to SimpleType: NavigableMap at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: subMap to MethodDeclaration at 3", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS InfixExpression: == to InfixExpression: || at 1", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleName: get to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to MethodDeclaration at 2", "INS SimpleName: nextComplementRangeLowerBound to Assignment: = at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 1", "INS SimpleName: Range to SimpleType: Range at 0", "INS Block to IfStatement at 1", "INS SimpleName: nextComplementRangeLowerBound to MethodInvocation at 2", "INS SimpleName: positiveRangesByLowerBound to SingleVariableDeclaration at 1", "INS ParameterizedType: Range<Cut<C>> to SingleVariableDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: ComplementRangesByLowerBound to MethodDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: positiveRangesByUpperBound to FieldAccess at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleName: size to MethodDeclaration at 3", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleName: NavigableMap to SimpleType: NavigableMap at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS InfixExpression: || to ParenthesizedExpression at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: belowAll to MethodInvocation at 2", "INS SimpleType: Object to SingleVariableDeclaration at 0", "INS SimpleName: computeNext to MethodDeclaration at 3", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: hasNext to MethodInvocation at 1", "INS SimpleName: firstComplementRangeLowerBound to Assignment: = at 0", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleName: Ordering to MethodInvocation at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: negativeRange to MethodInvocation at 3", "INS SimpleName: nextComplementRangeLowerBound to InfixExpression: == at 0", "INS Assignment: = to ExpressionStatement at 0", "INS FieldDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: C to SimpleType: C at 0", "INS VariableDeclarationStatement to Block at 2", "INS Block to MethodDeclaration at 8", "INS SimpleName: entryIterator to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: C to SimpleType: C at 0", "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to MethodDeclaration at 1", "INS SimpleName: positiveItr to MethodInvocation at 0", "INS SimpleName: C to TypeParameter at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to InfixExpression: != at 1", "INS SimpleName: C to SimpleType: C at 0", "INS IfStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS ParameterizedType: Range<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 2", "INS SimpleName: positiveRangesByLowerBound to ClassInstanceCreation at 1", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS SimpleName: peekingIterator to MethodInvocation at 1", "INS ParameterizedType: Cut<C> to MethodInvocation at 1", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS Modifier: private to MethodDeclaration at 0", "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to FieldDeclaration at 2", "INS Block to IfStatement at 2", "INS SimpleName: positiveItr to MethodInvocation at 0", "INS ParameterizedType: Cut<C> to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS SimpleType: RangesByUpperBound to ParameterizedType: RangesByUpperBound<C> at 0", "INS SimpleType: AbstractIterator to ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>> at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS Javadoc to FieldDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: fromInclusive to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: positiveItr to MethodInvocation at 0", "INS QualifiedName: negativeRange.lowerBound to MethodInvocation at 2", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: fromKey to SingleVariableDeclaration at 1", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleName: toInclusive to SingleVariableDeclaration at 1", "INS SimpleName: Range to SimpleType: Range at 0", "INS InfixExpression: || to IfStatement at 0", "INS MethodInvocation to InfixExpression: && at 0", "INS Modifier: private to TypeDeclaration: class at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: Range<Cut<C>> at 1", "INS Block to IfStatement at 1", "INS IfStatement to Block at 4", "INS SimpleType: NavigableMap to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 0", "INS SimpleType: Comparable to ParameterizedType: Comparable<?> at 0", "INS SimpleName: emptyIterator to MethodInvocation at 1", "INS SimpleName: Range to SimpleType: Range at 0", "INS MethodInvocation to InfixExpression: == at 1", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to FieldAccess at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS ParameterizedType: Range<Cut<C>> to FieldDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: C to SimpleType: C at 0", "INS TextElement: \"complement ranges by lower bound\" map; it's a constraint on the *keys*, and does not affect to TagElement at 1", "INS SimpleName: NavigableMap to SimpleType: NavigableMap at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 23", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleType: C to MethodInvocation at 1", "INS SimpleName: complementLowerBoundWindow to MethodInvocation at 0", "INS ParameterizedType: Comparator<? super Cut<C>> to MethodDeclaration at 2", "INS TypeParameter to TypeDeclaration: class at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: comparator to MethodDeclaration at 3", "INS ParameterizedType: Entry<Cut<C>,Range<C>> to ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>> at 1", "INS SimpleType: Entry to ParameterizedType: Entry<Cut<C>,Range<C>> at 0", "INS SimpleName: Cut to SimpleType: Cut at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 24", "operations": ["INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: contains to MethodDeclaration at 3", "INS SimpleName: Range to SimpleType: Range at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS Modifier: public to MethodDeclaration at 1", "INS ClassInstanceCreation to SuperConstructorInvocation at 0", "INS PrefixExpression: ! to ReturnStatement at 0", "INS SimpleName: rangeToAdd to SingleVariableDeclaration at 1", "INS FieldAccess to ClassInstanceCreation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SuperConstructorInvocation to Block at 0", "INS SimpleName: TreeRangeSet to ThisExpression at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 24", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS Modifier: public to MethodDeclaration at 1", "INS ThisExpression to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleName: Complement to MethodDeclaration at 0", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleName: C to SimpleType: C at 0", "INS ParameterizedType: TreeRangeSet<C> to TypeDeclaration: class at 3", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: rangesByLowerBound to FieldAccess at 1", "INS SimpleName: ComplementRangesByLowerBound to SimpleType: ComplementRangesByLowerBound at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleType: TreeRangeSet to ParameterizedType: TreeRangeSet<C> at 0", "INS Modifier: private to TypeDeclaration: class at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: remove to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS SimpleName: TreeRangeSet to ThisExpression at 0", "INS ParameterizedType: Range<C> to SingleVariableDeclaration at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleName: rangeToAdd to MethodInvocation at 2", "INS Block to MethodDeclaration at 5", "INS SimpleName: rangeToRemove to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: value to MethodInvocation at 2", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleType: C to ParameterizedType: TreeRangeSet<C> at 1", "INS ParameterizedType: Range<C> to SingleVariableDeclaration at 0", "INS SimpleName: TreeRangeSet to ThisExpression at 0", "INS ThisExpression to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: C to SimpleType: C at 0", "INS Modifier: final to TypeDeclaration: class at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: contains to MethodInvocation at 1", "INS SimpleName: add to MethodDeclaration at 3", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleType: C to ParameterizedType: ComplementRangesByLowerBound<C> at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleName: C to SimpleType: C at 0", "INS ThisExpression to MethodInvocation at 0", "INS Block to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: remove to MethodInvocation at 1", "INS SimpleName: rangeToRemove to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS ParameterizedType: ComplementRangesByLowerBound<C> to ClassInstanceCreation at 0", "INS SimpleType: ComplementRangesByLowerBound to ParameterizedType: ComplementRangesByLowerBound<C> at 0", "INS SimpleName: Complement to TypeDeclaration: class at 2", "INS SimpleName: TreeRangeSet to SimpleType: TreeRangeSet at 0"]}, {"root": "INS TagElement: @since to Javadoc at 2", "operations": ["INS TextElement:  14.0 to TagElement: @since at 0", "INS TagElement: @since to Javadoc at 2"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 13", "MOV MethodDeclaration to TypeDeclaration: class at 17", "MOV ParameterizedType: AbstractRangeSet<C> to TypeDeclaration: class at 5", "MOV MethodDeclaration to TypeDeclaration: class at 8", "MOV Modifier: private to TypeDeclaration: class at 0", "MOV Modifier: final to TypeDeclaration: class at 2", "MOV MethodDeclaration to TypeDeclaration: class at 14"]}, {"root": "UPDATE from AbstractRangeSet<C> to AbstractNavigableMap<Cut<C>,Range<C>>", "operations": ["UPD ParameterizedType: AbstractRangeSet<C> from AbstractRangeSet<C> to AbstractNavigableMap<Cut<C>,Range<C>>"]}, {"root": "UPDATE from rangesByLowerCut to rangesByLowerBound", "operations": ["UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound", "UPD SimpleName: hasLowerBound from hasLowerBound to rangesByLowerBound", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to rangesByLowerBound"]}, {"root": "UPDATE from AbstractRangeSet to AbstractNavigableMap", "operations": ["UPD SimpleName: AbstractRangeSet from AbstractRangeSet to AbstractNavigableMap", "UPD SimpleType: AbstractRangeSet from AbstractRangeSet to AbstractNavigableMap"]}, {"root": "INS ParameterizedType: Cut<C> to ParameterizedType: AbstractRangeSet<C> at 1", "operations": ["INS ParameterizedType: Cut<C> to ParameterizedType: AbstractRangeSet<C> at 1", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleName: rangeContaining to MethodDeclaration at 1", "MOV ParameterizedType: Range<C> to ParameterizedType: AbstractRangeSet<C> at 2", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 1", "MOV Block to MethodDeclaration at 2", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private"]}, {"root": "UPDATE from rangeContaining to RangesByUpperBound", "operations": ["UPD SimpleName: rangeContaining from rangeContaining to RangesByUpperBound", "UPD SimpleName: NoSuchElementException from NoSuchElementException to RangesByUpperBound"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 1", "MOV Block to MethodDeclaration at 4", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV ParameterizedType: Iterator<Range<C>> to VariableDeclarationStatement at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV PrimitiveType: int to MethodDeclaration at 2", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 1", "MOV ParameterizedType: Range<C> to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 1", "MOV ParameterizedType: Set<Range<C>> to MethodDeclaration at 2", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from Set<Range<C>> to NavigableMap<Cut<C>,Range<C>>", "operations": ["UPD ParameterizedType: Set<Range<C>> from Set<Range<C>> to NavigableMap<Cut<C>,Range<C>>"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from int to boolean", "operations": ["UPD PrimitiveType: int from int to boolean"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 1", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Block to MethodDeclaration at 6", "MOV PrimitiveType: boolean to MethodDeclaration at 2", "MOV Modifier: public to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to MethodDeclaration at 2", "operations": ["INS ParameterizedType: Range<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 2", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to MethodDeclaration at 2", "INS SimpleName: NavigableMap to SimpleType: NavigableMap at 0", "INS SimpleType: NavigableMap to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleName: Range to SimpleType: Range at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 1", "INS SimpleName: Cut to SimpleType: Cut at 0"]}, {"root": "INS SimpleName: headMap to MethodDeclaration at 3", "operations": ["INS SimpleName: headMap to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: Cut to SimpleType: Cut at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: toKey to SingleVariableDeclaration at 1", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleName: C to SimpleType: C at 0", "INS ParameterizedType: Cut<C> to SingleVariableDeclaration at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: inclusive to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to MethodDeclaration at 2", "operations": ["INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to MethodDeclaration at 2", "INS SimpleName: C to SimpleType: C at 0", "INS ParameterizedType: Range<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 2", "INS SimpleType: NavigableMap to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 0", "INS SimpleName: NavigableMap to SimpleType: NavigableMap at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 1", "INS SimpleType: C to ParameterizedType: Cut<C> at 1"]}, {"root": "INS SimpleName: tailMap to MethodDeclaration at 3", "operations": ["INS SimpleName: tailMap to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: fromKey to SingleVariableDeclaration at 1", "INS ParameterizedType: Cut<C> to SingleVariableDeclaration at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleName: C to SimpleType: C at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: inclusive to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>> to MethodDeclaration at 1", "operations": ["INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleType: Iterator to ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>> at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: C to SimpleType: C at 0", "INS ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>> to MethodDeclaration at 1", "INS ParameterizedType: Range<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 2", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS ParameterizedType: Entry<Cut<C>,Range<C>> to ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>> at 1", "INS ParameterizedType: Cut<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 1", "INS SimpleType: Entry to ParameterizedType: Entry<Cut<C>,Range<C>> at 0", "INS SimpleName: Range to SimpleType: Range at 0"]}, {"root": "INS SimpleName: descendingEntryIterator to MethodDeclaration at 2", "operations": ["INS SimpleName: descendingEntryIterator to MethodDeclaration at 2"]}, {"root": "UPDATE from boolean to int", "operations": ["UPD PrimitiveType: boolean from boolean to int"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "UPDATE from positive to complement", "operations": ["UPD SimpleName: positive from positive to complement"]}, {"root": "MOVE from ParameterizedType: Cut<C>", "operations": ["MOV SimpleType: C to ParameterizedType: Cut<C> at 1"]}, {"root": "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to SingleVariableDeclaration at 0", "operations": ["INS ParameterizedType: Range<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 2", "INS ParameterizedType: Cut<C> to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 1", "INS SimpleType: NavigableMap to ParameterizedType: NavigableMap<Cut<C>,Range<C>> at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleName: NavigableMap to SimpleType: NavigableMap at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleName: Range to SimpleType: Range at 0", "INS ParameterizedType: NavigableMap<Cut<C>,Range<C>> to SingleVariableDeclaration at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleName: Cut to SimpleType: Cut at 0"]}, {"root": "INS SimpleName: rangesByLowerBound to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: rangesByLowerBound to SingleVariableDeclaration at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: rangesByLowerBound to FieldAccess at 1", "INS SimpleName: rangesByLowerBound to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: upperBoundWindow to FieldAccess at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ParameterizedType: Cut<C> to SingleVariableDeclaration at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ParameterizedType: Cut<C> to SingleVariableDeclaration at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ParameterizedType: Cut<C> to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "INS SimpleType: NavigableMap to ParameterizedType: Set<Range<C>> at 0", "operations": ["INS SimpleType: NavigableMap to ParameterizedType: Set<Range<C>> at 0", "INS SimpleName: NavigableMap to SimpleType: NavigableMap at 0"]}, {"root": "INS ParameterizedType: Cut<C> to ParameterizedType: Set<Range<C>> at 1", "operations": ["INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS ParameterizedType: Cut<C> to ParameterizedType: Set<Range<C>> at 1", "INS SimpleName: C to SimpleType: C at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ParameterizedType: Cut<C> to SingleVariableDeclaration at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV MarkerAnnotation to SingleVariableDeclaration at 0", "MOV ParameterizedType: Range<C> to ParameterizedType: PeekingIterator<Range<C>> at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1", "MOV IfStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 1", "MOV IfStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0", "MOV IfStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 2"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ParameterizedType: Cut<C> to SingleVariableDeclaration at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ParameterizedType: Cut<C> to SingleVariableDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: itr to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS MethodInvocation to ConditionalExpression at 1", "INS SimpleName: Cut to MethodInvocation at 0", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS SimpleType: C to MethodInvocation at 1", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleName: startingPoint to VariableDeclarationFragment at 0", "INS SimpleName: complementLowerBoundWindow to MethodInvocation at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleName: C to SimpleType: C at 0", "INS MethodInvocation to ConditionalExpression at 0", "INS SimpleName: complementLowerBoundWindow to MethodInvocation at 0", "INS SimpleName: aboveAll to MethodInvocation at 2", "INS SimpleName: hasUpperBound to MethodInvocation at 1", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ParameterizedType: Cut<C> to VariableDeclarationStatement at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: upperEndpoint to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to InfixExpression: == at 0", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: complementLowerBoundWindow to MethodInvocation at 0", "INS SimpleName: upperBoundType to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: && at 0", "INS SimpleName: hasUpperBound to MethodInvocation at 1", "INS InfixExpression: == to InfixExpression: && at 1", "INS SimpleName: inclusive to VariableDeclarationFragment at 0", "INS InfixExpression: && to VariableDeclarationFragment at 1", "INS SimpleName: complementLowerBoundWindow to MethodInvocation at 0", "INS QualifiedName: BoundType.CLOSED to InfixExpression: == at 1", "INS VariableDeclarationStatement to Block at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS ParameterizedType: Cut<C> to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: C to SimpleType: C at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: cut to VariableDeclarationFragment at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS Block to IfStatement at 1", "INS SimpleName: higherKey to MethodInvocation at 1", "INS SimpleName: peek to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 2", "INS MethodInvocation to FieldAccess at 0", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: C to MethodInvocation at 1", "INS SimpleName: positiveRangesByLowerBound to MethodInvocation at 0", "INS FieldAccess to MethodInvocation at 2", "INS SimpleName: Cut to MethodInvocation at 0", "INS SimpleName: positiveItr to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 5", "INS SimpleName: emptyIterator to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: cut to Assignment: = at 0", "INS SimpleName: Iterators to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: belowAll to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: upperBound to FieldAccess at 1", "INS SimpleName: cut to Assignment: = at 0", "INS IfStatement to IfStatement at 2"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 6"]}, {"root": "INS ReturnStatement to Block at 7", "operations": ["INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: C to SimpleType: C at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: C to SimpleType: C at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: computeNext to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleType: AbstractIterator to ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>> at 0", "INS ParameterizedType: Range<C> to VariableDeclarationStatement at 0", "INS SimpleName: Range to SimpleType: Range at 0", "INS ParameterizedType: Range<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 2", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS MethodInvocation to InfixExpression: == at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 1", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleType: Entry to ParameterizedType: Entry<Cut<C>,Range<C>> at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: endOfData to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: firstComplementRangeUpperBound to VariableDeclarationFragment at 1", "INS FieldDeclaration to AnonymousClassDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ReturnStatement to Block at 7", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleName: nextComplementRangeUpperBound to VariableDeclarationFragment at 0", "INS SimpleName: nextComplementRangeUpperBound to InfixExpression: == at 0", "INS Block to IfStatement at 1", "INS SimpleName: Range to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: nextComplementRangeUpperBound to MethodInvocation at 3", "INS ParameterizedType: Range<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 2", "INS IfStatement to IfStatement at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS QualifiedName: positiveRange.upperBound to MethodInvocation at 2", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleName: belowAll to MethodInvocation at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: AbstractIterator to SimpleType: AbstractIterator at 0", "INS QualifiedName: positiveRange.lowerBound to Assignment: = at 1", "INS SimpleName: positiveRange to VariableDeclarationFragment at 0", "INS SimpleName: C to SimpleType: C at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: endOfData to MethodInvocation at 0", "INS SimpleName: create to MethodInvocation at 1", "INS ParameterizedType: Cut<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: C to SimpleType: C at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ParameterizedType: Entry<Cut<C>,Range<C>> to MethodDeclaration at 2", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleType: C to MethodInvocation at 1", "INS SimpleName: Range to SimpleType: Range at 0", "INS VariableDeclarationStatement to Block at 1", "INS ParameterizedType: Cut<C> to FieldDeclaration at 0", "INS ParameterizedType: Range<C> to VariableDeclarationStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleType: Entry to ParameterizedType: Entry<Cut<C>,Range<C>> at 0", "INS SimpleName: Cut to MethodInvocation at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS ParameterizedType: Cut<C> to ParameterizedType: Entry<Cut<C>,Range<C>> at 1", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleName: nextComplementRangeUpperBound to Assignment: = at 0", "INS ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>> to ClassInstanceCreation at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: negativeRange to VariableDeclarationFragment at 0", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS IfStatement to Block at 3", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS ParameterizedType: Entry<Cut<C>,Range<C>> to ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>> at 1", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleName: C to SimpleType: C at 0"]}, {"root": "MOVE from ParameterizedType: Range<C>", "operations": ["MOV SimpleType: C to ParameterizedType: Range<C> at 1", "MOV SimpleType: Range to ParameterizedType: Range<C> at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: e to SingleVariableDeclaration at 1", "INS InfixExpression: && to IfStatement at 0", "INS IfStatement to Block at 0", "INS CatchClause to TryStatement at 1", "INS ReturnStatement to Block at 0", "INS Block to CatchClause at 1", "INS TryStatement to Block at 0", "INS InstanceofExpression to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS Block to TryStatement at 0", "INS IfStatement to Block at 2", "INS SimpleType: ClassCastException to SingleVariableDeclaration at 0", "INS NullLiteral to ReturnStatement at 0", "INS SimpleType: Cut to InstanceofExpression at 1", "INS SimpleName: ClassCastException to SimpleType: ClassCastException at 0", "INS SimpleName: key to InstanceofExpression at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 0"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS ReturnStatement to Block at 1", "INS NullLiteral to ReturnStatement at 0"]}, {"root": "INS Block to IfStatement at 3", "operations": ["INS Block to IfStatement at 3", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: ImmutableSortedMap to MethodInvocation at 0", "INS SimpleName: of to MethodInvocation at 1", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: Range to MethodInvocation at 0", "INS SimpleName: BoundType to MethodInvocation at 0", "INS SimpleName: forBoolean to MethodInvocation at 1", "INS SimpleName: subMap to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: upTo to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: inclusive to MethodInvocation at 2", "INS SimpleName: toKey to MethodInvocation at 2"]}, {"root": "UPDATE from rangesByLowerCut to Cut", "operations": ["UPD SimpleName: rangesByLowerCut from rangesByLowerCut to Cut", "UPD SimpleName: Set from Set to Cut", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to Cut", "UPD SimpleType: Set from Set to Cut"]}, {"root": "MOVE from ParameterizedType: Cut<C>", "operations": ["MOV SimpleType: Set to ParameterizedType: Cut<C> at 0"]}, {"root": "MOVE from WildcardType: ? super Cut<C>", "operations": ["MOV ParameterizedType: Cut<C> to WildcardType: ? super Cut<C> at 0"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: hasUpperBound to MethodInvocation at 1", "INS SimpleName: upperBoundWindow to MethodInvocation at 0"]}, {"root": "INS Block to IfStatement at 3", "operations": ["INS SimpleName: backingItr to Assignment: = at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: rangesByLowerBound to MethodInvocation at 0", "INS SimpleName: peekingIterator to MethodInvocation at 1", "INS SimpleName: values to MethodInvocation at 1", "INS SimpleName: iterator to MethodInvocation at 1", "INS SimpleName: Iterators to MethodInvocation at 0", "INS SimpleName: descendingMap to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS MethodInvocation to InfixExpression: && at 0", "INS SimpleName: hasNext to MethodInvocation at 1", "INS SimpleName: backingItr to MethodInvocation at 0", "INS QualifiedName: upperBoundWindow.upperBound to MethodInvocation at 0", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to FieldAccess at 0", "INS SimpleName: backingItr to MethodInvocation at 0", "INS SimpleName: upperBound to FieldAccess at 1", "INS MethodInvocation to InfixExpression: && at 1", "INS SimpleName: isLessThan to MethodInvocation at 1", "INS FieldAccess to MethodInvocation at 2", "INS SimpleName: peek to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS PrefixExpression: ! to IfStatement at 0", "operations": ["INS PrefixExpression: ! to IfStatement at 0", "INS MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: fromInclusive to MethodInvocation at 2", "INS SimpleName: toInclusive to MethodInvocation at 2", "INS SimpleName: forBoolean to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: subMap to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 5", "INS SimpleName: forBoolean to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: toKey to MethodInvocation at 4", "INS SimpleName: fromKey to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: subMap to MethodInvocation at 0", "INS SimpleName: toKey to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "UPDATE from positive to Range", "operations": ["UPD SimpleName: positive from positive to Range", "UPD SimpleName: Objects from Objects to Range", "UPD SimpleName: positive from positive to Range", "UPD SimpleType: RangeSet from RangeSet to Range", "UPD SimpleName: RangeSet from RangeSet to Range"]}, {"root": "MOVE from ParameterizedType: Range<C>", "operations": ["MOV SimpleType: C to ParameterizedType: Range<C> at 1", "MOV SimpleType: RangeSet to ParameterizedType: Range<C> at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: BoundType to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: subMap to MethodInvocation at 0", "INS SimpleName: downTo to MethodInvocation at 1", "INS SimpleName: Range to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: fromKey to MethodInvocation at 2", "INS SimpleName: forBoolean to MethodInvocation at 1"]}, {"root": "UPDATE from AbstractSet<Range<C>> to PeekingIterator<Range<C>>", "operations": ["UPD ParameterizedType: AbstractSet<Range<C>> from AbstractSet<Range<C>> to PeekingIterator<Range<C>>"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: AbstractSet<Range<C>> to VariableDeclarationStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Iterator<Range<C>> to VariableDeclarationStatement at 0"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS ParameterizedType: PeekingIterator<Range<C>> to VariableDeclarationStatement at 1", "operations": ["INS SimpleType: PeekingIterator to ParameterizedType: PeekingIterator<Range<C>> at 0", "INS ParameterizedType: Range<C> to ParameterizedType: PeekingIterator<Range<C>> at 1", "INS SimpleName: PeekingIterator to SimpleType: PeekingIterator at 0", "INS SimpleName: Range to SimpleType: Range at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS ParameterizedType: PeekingIterator<Range<C>> to VariableDeclarationStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0", "MOV IfStatement to IfStatement at 2"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS ParameterizedType: Cut<C> to VariableDeclarationStatement at 1", "operations": ["INS SimpleName: C to SimpleType: C at 0", "INS ParameterizedType: Cut<C> to VariableDeclarationStatement at 1", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "UPDATE from rangeBelow to window", "operations": ["UPD SimpleName: rangeBelow from rangeBelow to window"]}, {"root": "UPDATE from getValue to isConnected", "operations": ["UPD SimpleName: getValue from getValue to isConnected", "UPD SimpleName: contains from contains to isConnected"]}, {"root": "UPDATE from rangesByLowerCut to upperBoundWindow", "operations": ["UPD SimpleName: rangesByLowerCut from rangesByLowerCut to upperBoundWindow", "UPD SimpleName: value from value to upperBoundWindow"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: upperBoundWindow to MethodInvocation at 2", "INS SimpleName: intersection to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: window to MethodInvocation at 0", "INS ParameterizedType: RangesByUpperBound<C> to ClassInstanceCreation at 0", "INS SimpleName: rangesByLowerBound to ClassInstanceCreation at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleType: RangesByUpperBound to ParameterizedType: RangesByUpperBound<C> at 0", "INS SimpleName: RangesByUpperBound to SimpleType: RangesByUpperBound at 0"]}, {"root": "UPDATE from standardComplementIterator to Ordering", "operations": ["UPD SimpleName: standardComplementIterator from standardComplementIterator to Ordering"]}, {"root": "INS ParameterizedType: Cut<C> to MethodInvocation at 2", "operations": ["INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS ParameterizedType: Cut<C> to MethodInvocation at 2", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0"]}, {"root": "INS SimpleName: natural to MethodInvocation at 3", "operations": ["INS SimpleName: natural to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from firstEntry to Iterators", "operations": ["UPD SimpleName: firstEntry from firstEntry to Iterators"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: firstEntry to MethodInvocation at 0", "MOV SimpleName: getValue to MethodInvocation at 1"]}, {"root": "UPDATE from getValue to size", "operations": ["UPD SimpleName: getValue from getValue to size"]}, {"root": "UPDATE from aboveAll to all", "operations": ["UPD SimpleName: aboveAll from aboveAll to all"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: aboveAll to MethodInvocation at 2"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS SimpleName: ImmutableSortedMap to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: of to MethodInvocation at 1"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS SimpleName: subWindow to ClassInstanceCreation at 2", "INS SimpleName: ComplementRangesByLowerBound to SimpleType: ComplementRangesByLowerBound at 0", "INS ParameterizedType: ComplementRangesByLowerBound<C> to ClassInstanceCreation at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: ComplementRangesByLowerBound to ParameterizedType: ComplementRangesByLowerBound<C> at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleType: C to ParameterizedType: ComplementRangesByLowerBound<C> at 1", "INS SimpleName: positiveRangesByLowerBound to ClassInstanceCreation at 1", "INS ReturnStatement to Block at 1"]}, {"root": "MOVE from ParameterizedType: Range<C>", "operations": ["MOV SimpleType: C to ParameterizedType: Range<C> at 1", "MOV SimpleType: Range to ParameterizedType: Range<C> at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from AbstractSet to PeekingIterator", "operations": ["UPD SimpleName: AbstractSet from AbstractSet to PeekingIterator", "UPD SimpleType: AbstractSet from AbstractSet to PeekingIterator"]}, {"root": "UPDATE from candidatePositiveRanges to positiveItr", "operations": ["UPD SimpleName: candidatePositiveRanges from candidatePositiveRanges to positiveItr", "UPD SimpleName: candidatePositiveRanges from candidatePositiveRanges to positiveItr", "UPD SimpleName: candidatePositiveRanges from candidatePositiveRanges to positiveItr", "UPD SimpleName: candidatePositiveRanges from candidatePositiveRanges to positiveItr"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: Iterators to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: peekingIterator to MethodInvocation at 1"]}, {"root": "UPDATE from <= to ||", "operations": ["UPD InfixExpression: <= from <= to ||"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: <= to IfStatement at 0"]}, {"root": "UPDATE from resultUpperBound to firstComplementRangeUpperBound", "operations": ["UPD SimpleName: resultUpperBound from resultUpperBound to firstComplementRangeUpperBound"]}, {"root": "MOVE from SimpleType: C", "operations": ["MOV SimpleName: C to SimpleType: C at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3", "MOV SimpleName: firstNonNull to MethodInvocation at 2", "MOV MethodInvocation to MethodInvocation at 3", "MOV SimpleName: Objects to MethodInvocation at 0"]}, {"root": "UPDATE from firstNonNull to fromKey", "operations": ["UPD SimpleName: firstNonNull from firstNonNull to fromKey"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS SimpleName: peekingIterator to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: values to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: rangesByLowerBound to MethodInvocation at 0", "INS SimpleName: Iterators to MethodInvocation at 0", "INS SimpleName: iterator to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: upperEndpoint to MethodInvocation at 1", "INS SimpleName: backingItr to Assignment: = at 0", "INS BooleanLiteral: false to MethodInvocation at 3", "INS SimpleName: upperBoundWindow to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: headMap to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: descendingMap to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: next to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: backingItr to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: rangesByLowerBound to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: hasLowerBound to MethodInvocation at 0"]}, {"root": "UPDATE from lastEntry to complementLowerBoundWindow", "operations": ["UPD SimpleName: lastEntry from lastEntry to complementLowerBoundWindow", "UPD SimpleName: positive from positive to complementLowerBoundWindow", "UPD SimpleName: Range from Range to complementLowerBoundWindow", "UPD SimpleName: remove from remove to complementLowerBoundWindow"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getValue to MethodInvocation at 1", "MOV SimpleName: lastEntry to MethodInvocation at 0"]}, {"root": "UPDATE from lastEntry to subWindow", "operations": ["UPD SimpleName: lastEntry from lastEntry to subWindow", "UPD SimpleName: hasUpperBound from hasUpperBound to subWindow", "UPD SimpleName: spanUpperBound from spanUpperBound to subWindow"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: hasUpperBound to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: spanLowerBound to MethodInvocation at 0", "MOV SimpleName: Range to MethodInvocation at 0", "MOV SimpleName: create to MethodInvocation at 1", "MOV SimpleName: spanUpperBound to MethodInvocation at 0"]}, {"root": "UPDATE from spanLowerBound to range", "operations": ["UPD SimpleName: spanLowerBound from spanLowerBound to range", "UPD SimpleName: size from size to range", "UPD SimpleName: create from create to range"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: positive to MethodInvocation at 0"]}, {"root": "UPDATE from equals to upTo", "operations": ["UPD SimpleName: equals from equals to upTo"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: equals to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS MethodInvocation to InfixExpression: == at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: positiveRangesByUpperBound to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: values to MethodInvocation at 1", "INS SimpleName: tailMap to MethodInvocation at 1", "INS InfixExpression: == to MethodInvocation at 3", "INS SimpleName: positiveRanges to Assignment: = at 0", "INS QualifiedName: BoundType.CLOSED to InfixExpression: == at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: Range to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: create to MethodInvocation at 1"]}, {"root": "INS PrefixExpression: ! to InfixExpression: <= at 0", "operations": ["INS PrefixExpression: ! to InfixExpression: <= at 0"]}, {"root": "UPDATE from rangesByLowerCut to cut", "operations": ["UPD SimpleName: rangesByLowerCut from rangesByLowerCut to cut", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to cut", "UPD SimpleName: floorRange from floorRange to cut", "UPD SimpleName: range from range to cut"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: rangesByLowerCut to MethodInvocation at 2"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV ThisExpression to FieldAccess at 0"]}, {"root": "UPDATE from ImmutableRangeSet to BoundType", "operations": ["UPD SimpleName: ImmutableRangeSet from ImmutableRangeSet to BoundType", "UPD SimpleName: spanUpperBound from spanUpperBound to BoundType", "UPD SimpleName: rangesByLowerCut from rangesByLowerCut to BoundType", "UPD SimpleName: spanLowerBound from spanLowerBound to BoundType"]}, {"root": "UPDATE from higherKey to forBoolean", "operations": ["UPD SimpleName: higherKey from higherKey to forBoolean", "UPD SimpleName: all from all to forBoolean"]}, {"root": "UPDATE from valueCut to fromInclusive", "operations": ["UPD SimpleName: valueCut from valueCut to fromInclusive"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0", "MOV Block to CatchClause at 1", "MOV Block to IfStatement at 1"]}, {"root": "UPDATE from lastEntry to lowerEntry", "operations": ["UPD SimpleName: lastEntry from lastEntry to lowerEntry", "UPD SimpleName: lastEntry from lastEntry to lowerEntry", "UPD SimpleName: firstEntry from firstEntry to lowerEntry", "UPD SimpleName: lastEntry from lastEntry to lowerEntry", "UPD SimpleName: firstEntry from firstEntry to lowerEntry"]}, {"root": "MOVE from InfixExpression: ==", "operations": ["MOV SimpleName: lastEntry to InfixExpression: == at 0", "MOV NullLiteral to InfixExpression: == at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: Entry<Cut<C>,Range<C>> to MethodDeclaration at 2"]}, {"root": "UPDATE from public to protected", "operations": ["UPD Modifier: public from public to protected", "UPD Modifier: public from public to protected"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: complementLowerBoundWindow to MethodInvocation at 2"]}, {"root": "INS SimpleName: inclusive to MethodInvocation at 3", "operations": ["INS SimpleName: inclusive to MethodInvocation at 3"]}, {"root": "UPDATE from positive to inclusive", "operations": ["UPD SimpleName: positive from positive to inclusive"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: positive to MethodInvocation at 2"]}, {"root": "UPDATE from spanLowerBound to firstComplementRangeLowerBound", "operations": ["UPD SimpleName: spanLowerBound from spanLowerBound to firstComplementRangeLowerBound"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0", "MOV SimpleName: iterator to MethodInvocation at 1"]}, {"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "UPDATE from compareTo to positiveRangesByLowerBound", "operations": ["UPD SimpleName: compareTo from compareTo to positiveRangesByLowerBound", "UPD SimpleName: candidatePositiveRanges from candidatePositiveRanges to positiveRangesByLowerBound"]}, {"root": "UPDATE from cut to containsKey", "operations": ["UPD SimpleName: cut from cut to containsKey"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from ParameterizedType: RangesByUpperBound<C>", "operations": ["MOV SimpleType: C to ParameterizedType: RangesByUpperBound<C> at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: upperBoundWindow to MethodInvocation at 0", "INS SimpleName: lowerEndpoint to MethodInvocation at 1"]}, {"root": "MOVE from SimpleType: RangesByUpperBound", "operations": ["MOV SimpleName: NoSuchElementException to SimpleType: RangesByUpperBound at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getValue to MethodInvocation at 1", "MOV SimpleName: lastEntry to MethodInvocation at 0"]}, {"root": "UPDATE from getValue to intersection", "operations": ["UPD SimpleName: getValue from getValue to intersection"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: candidatePositiveRanges to MethodInvocation at 0", "MOV SimpleName: next to MethodInvocation at 1"]}, {"root": "UPDATE from next to higherKey", "operations": ["UPD SimpleName: next from next to higherKey"]}, {"root": "UPDATE from containsKey to contains", "operations": ["UPD SimpleName: containsKey from containsKey to contains", "UPD SimpleName: create from create to contains"]}, {"root": "INS SingleMemberAnnotation to VariableDeclarationStatement at 0", "operations": ["INS StringLiteral: \"unchecked\" to SingleMemberAnnotation at 1", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to VariableDeclarationStatement at 0"]}, {"root": "INS ParameterizedType: Cut<C> to VariableDeclarationStatement at 1", "operations": ["INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS ParameterizedType: Cut<C> to VariableDeclarationStatement at 1", "INS SimpleName: Cut to SimpleType: Cut at 0"]}, {"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "UPDATE from lastEntry to candidate", "operations": ["UPD SimpleName: lastEntry from lastEntry to candidate"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Range<C> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Range<C> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: range to MethodInvocation at 1", "MOV SimpleName: remove to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from ParameterizedType: Range<C>", "operations": ["MOV SimpleType: C to ParameterizedType: Range<C> at 1", "MOV SimpleType: Range to ParameterizedType: Range<C> at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Range<C> to VariableDeclarationStatement at 0"]}, {"root": "INS CastExpression to VariableDeclarationFragment at 1", "operations": ["INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: Cut to SimpleType: Cut at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: Cut to ParameterizedType: Cut<C> at 0", "INS SimpleType: C to ParameterizedType: Cut<C> at 1", "INS ParameterizedType: Cut<C> to CastExpression at 0", "INS SimpleName: key to CastExpression at 1"]}, {"root": "UPDATE from floorRange to firstEntry", "operations": ["UPD SimpleName: floorRange from floorRange to firstEntry", "UPD SimpleName: lastEntry from lastEntry to firstEntry", "UPD SimpleName: floorRange from floorRange to firstEntry", "UPD SimpleName: lastEntry from lastEntry to firstEntry"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV MethodInvocation to InfixExpression: && at 1", "MOV InfixExpression: != to InfixExpression: && at 0"]}, {"root": "MOVE from CastExpression", "operations": ["MOV ParameterizedType: Cut<C> to CastExpression at 0"]}, {"root": "INS SimpleName: cut to MethodInvocation at 2", "operations": ["INS SimpleName: cut to MethodInvocation at 2"]}, {"root": "INS SimpleName: cut to MethodInvocation at 2", "operations": ["INS SimpleName: cut to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: lastEntry to MethodInvocation at 0", "MOV SimpleName: getValue to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: backingItr to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: lowerEndpoint to MethodInvocation at 1", "operations": ["INS SimpleName: lowerEndpoint to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from rangesByLowerCut to positiveRangesByUpperBound", "operations": ["UPD SimpleName: rangesByLowerCut from rangesByLowerCut to positiveRangesByUpperBound"]}, {"root": "UPDATE from cut to startingPoint", "operations": ["UPD SimpleName: cut from cut to startingPoint"]}, {"root": "INS SimpleName: inclusive to MethodInvocation at 3", "operations": ["INS SimpleName: inclusive to MethodInvocation at 3"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS SimpleName: tailMap to MethodInvocation at 0", "INS BooleanLiteral: true to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS SimpleName: getKey to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from encloses to equals", "operations": ["UPD SimpleName: encloses from encloses to equals"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV MethodInvocation to ReturnStatement at 0"]}, {"root": "UPDATE from rangesByLowerCut to backingItr", "operations": ["UPD SimpleName: rangesByLowerCut from rangesByLowerCut to backingItr"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: rangesByLowerCut to MethodInvocation at 0", "MOV SimpleName: size to MethodInvocation at 1"]}, {"root": "UPDATE from size to next", "operations": ["UPD SimpleName: size from size to next"]}, {"root": "UPDATE from range to lowerBoundType", "operations": ["UPD SimpleName: range from range to lowerBoundType"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Range<C> to VariableDeclarationStatement at 0"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: negativeRange to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS QualifiedName: complementLowerBoundWindow.lowerBound to MethodInvocation at 0", "INS SimpleName: belowAll to MethodInvocation at 2", "INS SimpleName: C to SimpleType: C at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: isLessThan to MethodInvocation at 1", "INS SimpleType: C to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: rangesByLowerCut to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: floorRange to MethodInvocation at 0"]}, {"root": "UPDATE from spanUpperBound to nextComplementRangeLowerBound", "operations": ["UPD SimpleName: spanUpperBound from spanUpperBound to nextComplementRangeLowerBound", "UPD SimpleName: range from range to nextComplementRangeLowerBound"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleName: Range to SimpleType: Range at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: C to ParameterizedType: Range<C> at 1", "INS SimpleName: nextComplementRangeUpperBound to MethodInvocation at 3", "INS SimpleName: negativeRange to VariableDeclarationFragment at 0", "INS SimpleType: Range to ParameterizedType: Range<C> at 0", "INS ParameterizedType: Range<C> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "INS ReturnStatement to Block at 2", "operations": ["INS SimpleName: Maps to MethodInvocation at 0", "INS ReturnStatement to Block at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: negativeRange to MethodInvocation at 3", "INS SimpleType: C to MethodInvocation at 1", "INS SimpleName: Cut to MethodInvocation at 0", "INS SimpleName: immutableEntry to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: belowAll to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: positive to MethodInvocation at 0"]}, {"root": "UPDATE from add to create", "operations": ["UPD SimpleName: add from add to create"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: add to MethodInvocation at 1", "MOV SimpleName: range to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "INS QualifiedName: complementLowerBoundWindow.lowerBound to MethodInvocation at 0", "operations": ["INS QualifiedName: complementLowerBoundWindow.lowerBound to MethodInvocation at 0"]}, {"root": "UPDATE from Cut to isLessThan", "operations": ["UPD SimpleName: Cut from Cut to isLessThan"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Cut to MethodInvocation at 1"]}, {"root": "UPDATE from firstCandidate.lowerBound to negativeRange.lowerBound", "operations": ["UPD QualifiedName: firstCandidate.lowerBound from firstCandidate.lowerBound to negativeRange.lowerBound"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: rangesByLowerCut to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: candidatePositiveRanges to MethodInvocation at 0", "MOV SimpleName: next to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: Maps to MethodInvocation at 0", "INS SimpleName: immutableEntry to MethodInvocation at 1", "INS QualifiedName: negativeRange.lowerBound to MethodInvocation at 2", "INS SimpleName: negativeRange to MethodInvocation at 3"]}, {"root": "UPDATE from lowerBound to nextComplementRangeUpperBound", "operations": ["UPD SimpleName: lowerBound from lowerBound to nextComplementRangeUpperBound"]}, {"root": "INS SimpleType: C to MethodInvocation at 1", "operations": ["INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: C to MethodInvocation at 1"]}, {"root": "INS SimpleName: belowAll to MethodInvocation at 2", "operations": ["INS SimpleName: belowAll to MethodInvocation at 2"]}, {"root": "DEL SimpleType: C", "operations": ["DEL SimpleType: C"]}, {"root": "DEL SimpleName: value", "operations": ["DEL SimpleName: value"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: contains", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL SimpleName: positive", "DEL MethodInvocation", "DEL SimpleName: value", "DEL ReturnStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL QualifiedName: rangeBelow.upperBound", "DEL ExpressionStatement", "DEL SimpleName: lowerBound", "DEL Assignment: ="]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: lowerBound", "DEL SimpleName: upperBound", "DEL ClassInstanceCreation"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL InfixExpression: -", "operations": ["DEL InfixExpression: -", "DEL MethodInvocation", "DEL NumberLiteral: 1"]}, {"root": "DEL SimpleName: positiveBoundedBelow", "operations": ["DEL SimpleName: positiveBoundedBelow"]}, {"root": "DEL PostfixExpression: ++", "operations": ["DEL PostfixExpression: ++", "DEL SimpleName: size"]}, {"root": "DEL SimpleName: positiveBoundedAbove", "operations": ["DEL SimpleName: positiveBoundedAbove"]}, {"root": "DEL PostfixExpression: ++", "operations": ["DEL SimpleName: size", "DEL PostfixExpression: ++"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL FieldAccess", "operations": ["DEL SimpleName: lowerBound", "DEL FieldAccess", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL SimpleName: isEmpty", "operations": ["DEL SimpleName: isEmpty"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL ParameterizedType: RangeSet<C>", "operations": ["DEL ParameterizedType: RangeSet<C>"]}, {"root": "DEL SimpleName: complement", "operations": ["DEL SimpleName: complement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: floorRange", "operations": ["DEL SimpleName: floorRange"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: cut", "DEL SingleVariableDeclaration"]}, {"root": "DEL BooleanLiteral: false", "operations": ["DEL BooleanLiteral: false"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL QualifiedName: firstCandidate.lowerBound", "operations": ["DEL QualifiedName: firstCandidate.lowerBound"]}, {"root": "DEL QualifiedName: firstCandidate.upperBound", "operations": ["DEL QualifiedName: firstCandidate.upperBound"]}, {"root": "DEL NumberLiteral: 0", "operations": ["DEL NumberLiteral: 0"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: higherKey", "DEL MethodInvocation", "DEL SimpleName: resultLowerBound"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: belowAll"]}, {"root": "DEL SimpleName: equals", "operations": ["DEL SimpleName: equals"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: isEmpty", "DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL ReturnStatement"]}, {"root": "DEL SimpleName: firstKey", "operations": ["DEL SimpleName: firstKey"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL ReturnStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: create", "DEL SimpleName: resultLowerBound", "DEL ReturnStatement", "DEL SimpleName: create", "DEL SimpleName: resultLowerBound", "DEL SimpleName: Range", "DEL IfStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: resultUpperBound", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: Range", "DEL FieldAccess", "DEL IfStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL QualifiedName: firstCandidate.upperBound", "DEL QualifiedName: firstCandidate.lowerBound", "DEL MethodInvocation", "DEL SimpleName: firstCandidate", "DEL ReturnStatement", "DEL Block", "DEL IfStatement", "DEL Block", "DEL Block", "DEL SimpleName: upperBound", "DEL VariableDeclarationStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: floorRange", "DEL QualifiedName: range.lowerBound"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: range", "DEL ExpressionStatement", "DEL SimpleName: checkNotNull", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL InfixExpression: &&", "DEL ReturnStatement"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: range", "DEL VariableDeclarationStatement", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL Block", "DEL PrimitiveType: boolean", "DEL TypeDeclaration: class", "DEL IfStatement", "DEL ParameterizedType: Range<C>", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: Cut", "DEL ReturnStatement", "DEL ExpressionStatement", "DEL SimpleName: spanLowerBound", "DEL Block", "DEL SimpleName: hasUpperBound", "DEL SimpleName: upperBound", "DEL SimpleName: positiveBoundedBelow", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: floorEntry", "DEL Assignment: =", "DEL SimpleName: upperBound", "DEL InfixExpression: ||", "DEL MethodDeclaration", "DEL ParameterizedType: Range<C>", "DEL SimpleName: positiveBoundedAbove", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: value", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL SimpleName: rangesByLowerCut", "DEL SimpleName: asRanges", "DEL SimpleName: firstEntry", "DEL SimpleName: size", "DEL SimpleName: belowValue", "DEL SimpleName: rangeBelow", "DEL VariableDeclarationFragment", "DEL SimpleName: valueCut", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: size", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: range", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL SimpleName: encloses", "DEL SimpleName: getValue", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Modifier: public", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL MethodDeclaration", "DEL InfixExpression: ==", "DEL SimpleName: remove", "DEL AnonymousClassDeclaration", "DEL SimpleType: NoSuchElementException", "DEL SimpleName: entryBelow", "DEL SimpleName: contains", "DEL Block", "DEL ParameterizedType: Range<C>", "DEL Block", "DEL PrimitiveType: boolean", "DEL FieldAccess", "DEL MethodInvocation", "DEL Block", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleName: range", "DEL PrimitiveType: void", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: valueCut", "DEL NullLiteral", "DEL SimpleName: spanUpperBound", "DEL SimpleName: entryBelow", "DEL SimpleName: span", "DEL MethodDeclaration", "DEL SimpleName: Cut", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL InfixExpression: ==", "DEL SimpleName: entryBelow", "DEL Block", "DEL SimpleName: lowerBound", "DEL SimpleName: add", "DEL PrimitiveType: boolean", "DEL IfStatement", "DEL SimpleName: Complement", "DEL SimpleName: equals", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL ClassInstanceCreation", "DEL PrefixExpression: !", "DEL IfStatement", "DEL Block", "DEL SimpleName: iterator", "DEL ThrowStatement", "DEL SimpleName: spanLowerBound", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL IfStatement"]}]}}, {"TreeRangeSet_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(2930) at 6", "Insert ImportDeclaration(5) into CompilationUnit(2930) at 2", "Insert QualifiedName: com.google.common.annotations.Beta(4) into ImportDeclaration(5) at 0", "Update QualifiedName: java.util.AbstractSet(8) to java.util.Comparator", "Insert MarkerAnnotation(42) into TypeDeclaration: class(2929) at 1", "Update Modifier: final(40) to public", "Insert TypeDeclaration: class(1758) into TypeDeclaration: class(2929) at 22", "Insert TypeDeclaration: class(2833) into TypeDeclaration: class(2929) at 23", "Insert TypeDeclaration: class(2928) into TypeDeclaration: class(2929) at 24", "Insert TagElement: @since(39) into Javadoc(40) at 2", "Insert SimpleName: Beta(41) into MarkerAnnotation(42) at 0", "Move Modifier: private(889) into TypeDeclaration: class(1758) at 0", "Insert Modifier: static(896) into TypeDeclaration: class(1758) at 1", "Move Modifier: final(890) into TypeDeclaration: class(1758) at 2", "Insert SimpleName: RangesByUpperBound(898) into TypeDeclaration: class(1758) at 3", "Insert TypeParameter(904) into TypeDeclaration: class(1758) at 4", "Update ParameterizedType: AbstractRangeSet<C>(896) to AbstractNavigableMap<Cut<C>,Range<C>>", "Move ParameterizedType: AbstractRangeSet<C>(896) into TypeDeclaration: class(1758) at 5", "Insert FieldDeclaration(935) into TypeDeclaration: class(1758) at 6", "Insert FieldDeclaration(952) into TypeDeclaration: class(1758) at 7", "Insert MethodDeclaration(984) into TypeDeclaration: class(1758) at 8", "Insert MethodDeclaration(1025) into TypeDeclaration: class(1758) at 9", "Insert MethodDeclaration(1075) into TypeDeclaration: class(1758) at 10", "Insert MethodDeclaration(1130) into TypeDeclaration: class(1758) at 11", "Insert MethodDeclaration(1170) into TypeDeclaration: class(1758) at 12", "Insert MethodDeclaration(1210) into TypeDeclaration: class(1758) at 13", "Insert MethodDeclaration(1234) into TypeDeclaration: class(1758) at 14", "Insert MethodDeclaration(1253) into TypeDeclaration: class(1758) at 15", "Insert MethodDeclaration(1353) into TypeDeclaration: class(1758) at 16", "Insert MethodDeclaration(1549) into TypeDeclaration: class(1758) at 17", "Insert MethodDeclaration(1709) into TypeDeclaration: class(1758) at 18", "Insert MethodDeclaration(1734) into TypeDeclaration: class(1758) at 19", "Insert MethodDeclaration(1757) into TypeDeclaration: class(1758) at 20", "Insert Modifier: private(1759) into TypeDeclaration: class(2833) at 0", "Insert Modifier: static(1760) into TypeDeclaration: class(2833) at 1", "Insert Modifier: final(1761) into TypeDeclaration: class(2833) at 2", "Insert SimpleName: ComplementRangesByLowerBound(1762) into TypeDeclaration: class(2833) at 3", "Insert TypeParameter(1768) into TypeDeclaration: class(2833) at 4", "Insert ParameterizedType: AbstractNavigableMap<Cut<C>,Range<C>>(1781) into TypeDeclaration: class(2833) at 5", "Insert FieldDeclaration(1799) into TypeDeclaration: class(2833) at 6", "Insert FieldDeclaration(1817) into TypeDeclaration: class(2833) at 7", "Insert FieldDeclaration(1835) into TypeDeclaration: class(2833) at 8", "Insert MethodDeclaration(1863) into TypeDeclaration: class(2833) at 9", "Insert MethodDeclaration(1916) into TypeDeclaration: class(2833) at 10", "Insert MethodDeclaration(1971) into TypeDeclaration: class(2833) at 11", "Insert MethodDeclaration(2026) into TypeDeclaration: class(2833) at 12", "Move MethodDeclaration(1316) into TypeDeclaration: class(2833) at 13", "Move MethodDeclaration(1330) into TypeDeclaration: class(2833) at 14", "Insert MethodDeclaration(2130) into TypeDeclaration: class(2833) at 15", "Insert MethodDeclaration(2394) into TypeDeclaration: class(2833) at 16", "Move MethodDeclaration(1526) into TypeDeclaration: class(2833) at 17", "Insert MethodDeclaration(2724) into TypeDeclaration: class(2833) at 18", "Insert MethodDeclaration(2815) into TypeDeclaration: class(2833) at 19", "Insert MethodDeclaration(2832) into TypeDeclaration: class(2833) at 20", "Insert Modifier: private(2834) into TypeDeclaration: class(2928) at 0", "Insert Modifier: final(2835) into TypeDeclaration: class(2928) at 1", "Insert SimpleName: Complement(2836) into TypeDeclaration: class(2928) at 2", "Insert ParameterizedType: TreeRangeSet<C>(2841) into TypeDeclaration: class(2928) at 3", "Insert MethodDeclaration(2855) into TypeDeclaration: class(2928) at 4", "Insert MethodDeclaration(2875) into TypeDeclaration: class(2928) at 5", "Insert MethodDeclaration(2895) into TypeDeclaration: class(2928) at 6", "Insert MethodDeclaration(2913) into TypeDeclaration: class(2928) at 7", "Move MethodDeclaration(908) into TypeDeclaration: class(2928) at 8", "Insert TextElement:  14.0(38) into TagElement: @since(39) at 0", "Update SimpleName: rangesByLowerCut(68) to rangesByLowerBound", "Insert SimpleName: C(899) into TypeParameter(904) at 0", "Insert ParameterizedType: Comparable<?>(903) into TypeParameter(904) at 1", "Update SimpleType: AbstractRangeSet(893) to AbstractNavigableMap", "Insert ParameterizedType: Cut<C>(911) into ParameterizedType: AbstractNavigableMap<Cut<C>,Range<C>>(917) at 1", "Move ParameterizedType: Range<C>(934) into ParameterizedType: AbstractNavigableMap<Cut<C>,Range<C>>(917) at 2", "Insert Modifier: private(918) into FieldDeclaration(935) at 0", "Insert Modifier: final(919) into FieldDeclaration(935) at 1", "Insert ParameterizedType: NavigableMap<Cut<C>,Range<C>>(932) into FieldDeclaration(935) at 2", "Insert VariableDeclarationFragment(934) into FieldDeclaration(935) at 3", "Insert Javadoc(939) into FieldDeclaration(952) at 0", "Insert Modifier: private(940) into FieldDeclaration(952) at 1", "Insert Modifier: final(941) into FieldDeclaration(952) at 2", "Insert ParameterizedType: Range<Cut<C>>(949) into FieldDeclaration(952) at 3", "Insert VariableDeclarationFragment(951) into FieldDeclaration(952) at 4", "Insert SimpleName: RangesByUpperBound(953) into MethodDeclaration(984) at 0", "Move SingleVariableDeclaration(917) into MethodDeclaration(984) at 1", "Move Block(925) into MethodDeclaration(984) at 2", "Update Modifier: public(929) to private", "Move Modifier: public(929) into MethodDeclaration(1025) at 0", "Update SimpleName: rangeContaining(935) to RangesByUpperBound", "Move SimpleName: rangeContaining(935) into MethodDeclaration(1025) at 1", "Insert SingleVariableDeclaration(1001) into MethodDeclaration(1025) at 2", "Insert SingleVariableDeclaration(1011) into MethodDeclaration(1025) at 3", "Insert Block(1024) into MethodDeclaration(1025) at 4", "Insert Modifier: private(1026) into MethodDeclaration(1075) at 0", "Insert ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1039) into MethodDeclaration(1075) at 1", "Insert SimpleName: subMap(1040) into MethodDeclaration(1075) at 2", "Insert SingleVariableDeclaration(1050) into MethodDeclaration(1075) at 3", "Insert Block(1074) into MethodDeclaration(1075) at 4", "Move MarkerAnnotation(1068) into MethodDeclaration(1130) at 0", "Insert Modifier: public(1078) into MethodDeclaration(1130) at 1", "Insert ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1091) into MethodDeclaration(1130) at 2", "Insert SimpleName: subMap(1092) into MethodDeclaration(1130) at 3", "Insert SingleVariableDeclaration(1099) into MethodDeclaration(1130) at 4", "Insert SingleVariableDeclaration(1102) into MethodDeclaration(1130) at 5", "Insert SingleVariableDeclaration(1109) into MethodDeclaration(1130) at 6", "Insert SingleVariableDeclaration(1112) into MethodDeclaration(1130) at 7", "Insert Block(1129) into MethodDeclaration(1130) at 8", "Move MarkerAnnotation(1087) into MethodDeclaration(1170) at 0", "Insert Modifier: public(1133) into MethodDeclaration(1170) at 1", "Insert ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1146) into MethodDeclaration(1170) at 2", "Insert SimpleName: headMap(1147) into MethodDeclaration(1170) at 3", "Insert SingleVariableDeclaration(1154) into MethodDeclaration(1170) at 4", "Insert SingleVariableDeclaration(1157) into MethodDeclaration(1170) at 5", "Insert Block(1169) into MethodDeclaration(1170) at 6", "Move MarkerAnnotation(1165) into MethodDeclaration(1210) at 0", "Move Modifier: public(1049) into MethodDeclaration(1210) at 1", "Update ParameterizedType: Set<Range<C>>(1057) to NavigableMap<Cut<C>,Range<C>>", "Move ParameterizedType: Set<Range<C>>(1057) into MethodDeclaration(1210) at 2", "Insert SimpleName: tailMap(1187) into MethodDeclaration(1210) at 3", "Insert SingleVariableDeclaration(1194) into MethodDeclaration(1210) at 4", "Insert SingleVariableDeclaration(1197) into MethodDeclaration(1210) at 5", "Insert Block(1209) into MethodDeclaration(1210) at 6", "Move MarkerAnnotation(1332) into MethodDeclaration(1234) at 0", "Move Modifier: public(1069) into MethodDeclaration(1234) at 1", "Insert ParameterizedType: Comparator<? super Cut<C>>(1222) into MethodDeclaration(1234) at 2", "Insert SimpleName: comparator(1223) into MethodDeclaration(1234) at 3", "Move Block(1084) into MethodDeclaration(1234) at 4", "Move MarkerAnnotation(1318) into MethodDeclaration(1253) at 0", "Move Modifier: public(1088) into MethodDeclaration(1253) at 1", "Update PrimitiveType: int(1089) to boolean", "Move PrimitiveType: int(1089) into MethodDeclaration(1253) at 2", "Insert SimpleName: containsKey(1239) into MethodDeclaration(1253) at 3", "Insert SingleVariableDeclaration(1245) into MethodDeclaration(1253) at 4", "Insert Block(1252) into MethodDeclaration(1253) at 5", "Move MarkerAnnotation(1301) into MethodDeclaration(1353) at 0", "Insert Modifier: public(1256) into MethodDeclaration(1353) at 1", "Move ParameterizedType: Range<C>(1171) into MethodDeclaration(1353) at 2", "Insert SimpleName: get(1262) into MethodDeclaration(1353) at 3", "Insert SingleVariableDeclaration(1268) into MethodDeclaration(1353) at 4", "Insert Block(1352) into MethodDeclaration(1353) at 5", "Move MarkerAnnotation(1352) into MethodDeclaration(1549) at 0", "Insert ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>>(1371) into MethodDeclaration(1549) at 1", "Insert SimpleName: entryIterator(1372) into MethodDeclaration(1549) at 2", "Insert Block(1548) into MethodDeclaration(1549) at 3", "Move MarkerAnnotation(1528) into MethodDeclaration(1709) at 0", "Insert ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>>(1567) into MethodDeclaration(1709) at 1", "Insert SimpleName: descendingEntryIterator(1568) into MethodDeclaration(1709) at 2", "Insert Block(1708) into MethodDeclaration(1709) at 3", "Move MarkerAnnotation(910) into MethodDeclaration(1734) at 0", "Insert Modifier: public(1712) into MethodDeclaration(1734) at 1", "Insert PrimitiveType: int(1713) into MethodDeclaration(1734) at 2", "Insert SimpleName: size(1714) into MethodDeclaration(1734) at 3", "Insert Block(1733) into MethodDeclaration(1734) at 4", "Insert MarkerAnnotation(1736) into MethodDeclaration(1757) at 0", "Insert Modifier: public(1737) into MethodDeclaration(1757) at 1", "Insert PrimitiveType: boolean(1738) into MethodDeclaration(1757) at 2", "Insert SimpleName: isEmpty(1739) into MethodDeclaration(1757) at 3", "Insert Block(1756) into MethodDeclaration(1757) at 4", "Insert SimpleName: C(1763) into TypeParameter(1768) at 0", "Insert ParameterizedType: Comparable<?>(1767) into TypeParameter(1768) at 1", "Insert SimpleType: AbstractNavigableMap(1770) into ParameterizedType: AbstractNavigableMap<Cut<C>,Range<C>>(1781) at 0", "Insert ParameterizedType: Cut<C>(1775) into ParameterizedType: AbstractNavigableMap<Cut<C>,Range<C>>(1781) at 1", "Insert ParameterizedType: Range<C>(1780) into ParameterizedType: AbstractNavigableMap<Cut<C>,Range<C>>(1781) at 2", "Insert Modifier: private(1782) into FieldDeclaration(1799) at 0", "Insert Modifier: final(1783) into FieldDeclaration(1799) at 1", "Insert ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1796) into FieldDeclaration(1799) at 2", "Insert VariableDeclarationFragment(1798) into FieldDeclaration(1799) at 3", "Insert Modifier: private(1800) into FieldDeclaration(1817) at 0", "Insert Modifier: final(1801) into FieldDeclaration(1817) at 1", "Insert ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1814) into FieldDeclaration(1817) at 2", "Insert VariableDeclarationFragment(1816) into FieldDeclaration(1817) at 3", "Insert Javadoc(1822) into FieldDeclaration(1835) at 0", "Insert Modifier: private(1823) into FieldDeclaration(1835) at 1", "Insert Modifier: final(1824) into FieldDeclaration(1835) at 2", "Insert ParameterizedType: Range<Cut<C>>(1832) into FieldDeclaration(1835) at 3", "Insert VariableDeclarationFragment(1834) into FieldDeclaration(1835) at 4", "Insert SimpleName: ComplementRangesByLowerBound(1836) into MethodDeclaration(1863) at 0", "Insert SingleVariableDeclaration(1851) into MethodDeclaration(1863) at 1", "Insert Block(1862) into MethodDeclaration(1863) at 2", "Insert Modifier: private(1864) into MethodDeclaration(1916) at 0", "Insert SimpleName: ComplementRangesByLowerBound(1865) into MethodDeclaration(1916) at 1", "Insert SingleVariableDeclaration(1880) into MethodDeclaration(1916) at 2", "Insert SingleVariableDeclaration(1890) into MethodDeclaration(1916) at 3", "Insert Block(1915) into MethodDeclaration(1916) at 4", "Insert Modifier: private(1917) into MethodDeclaration(1971) at 0", "Insert ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1930) into MethodDeclaration(1971) at 1", "Insert SimpleName: subMap(1931) into MethodDeclaration(1971) at 2", "Insert SingleVariableDeclaration(1941) into MethodDeclaration(1971) at 3", "Insert Block(1970) into MethodDeclaration(1971) at 4", "Insert MarkerAnnotation(1973) into MethodDeclaration(2026) at 0", "Insert Modifier: public(1974) into MethodDeclaration(2026) at 1", "Insert ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1987) into MethodDeclaration(2026) at 2", "Insert SimpleName: subMap(1988) into MethodDeclaration(2026) at 3", "Insert SingleVariableDeclaration(1995) into MethodDeclaration(2026) at 4", "Insert SingleVariableDeclaration(1998) into MethodDeclaration(2026) at 5", "Insert SingleVariableDeclaration(2005) into MethodDeclaration(2026) at 6", "Insert SingleVariableDeclaration(2008) into MethodDeclaration(2026) at 7", "Insert Block(2025) into MethodDeclaration(2026) at 8", "Insert MarkerAnnotation(2028) into MethodDeclaration(2066) at 0", "Insert ParameterizedType: NavigableMap<Cut<C>,Range<C>>(2042) into MethodDeclaration(2066) at 2", "Insert SimpleName: headMap(2043) into MethodDeclaration(2066) at 3", "Insert SingleVariableDeclaration(2050) into MethodDeclaration(2066) at 4", "Insert SingleVariableDeclaration(2053) into MethodDeclaration(2066) at 5", "Insert MarkerAnnotation(2068) into MethodDeclaration(2106) at 0", "Insert ParameterizedType: NavigableMap<Cut<C>,Range<C>>(2082) into MethodDeclaration(2106) at 2", "Insert SimpleName: tailMap(2083) into MethodDeclaration(2106) at 3", "Insert SingleVariableDeclaration(2090) into MethodDeclaration(2106) at 4", "Insert SingleVariableDeclaration(2093) into MethodDeclaration(2106) at 5", "Insert MarkerAnnotation(2108) into MethodDeclaration(2130) at 0", "Move Modifier: public(1333) into MethodDeclaration(2130) at 1", "Insert ParameterizedType: Comparator<? super Cut<C>>(2118) into MethodDeclaration(2130) at 2", "Insert SimpleName: comparator(2119) into MethodDeclaration(2130) at 3", "Insert Block(2129) into MethodDeclaration(2130) at 4", "Insert MarkerAnnotation(2132) into MethodDeclaration(2394) at 0", "Insert ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>>(2148) into MethodDeclaration(2394) at 1", "Insert SimpleName: entryIterator(2149) into MethodDeclaration(2394) at 2", "Insert Block(2393) into MethodDeclaration(2394) at 3", "Insert MarkerAnnotation(2396) into MethodDeclaration(2711) at 0", "Insert ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>>(2412) into MethodDeclaration(2711) at 1", "Insert SimpleName: descendingEntryIterator(2413) into MethodDeclaration(2711) at 2", "Insert MarkerAnnotation(2713) into MethodDeclaration(2724) at 0", "Move Modifier: public(1529) into MethodDeclaration(2724) at 1", "Update PrimitiveType: boolean(1530) to int", "Move PrimitiveType: boolean(1530) into MethodDeclaration(2724) at 2", "Insert SimpleName: size(2716) into MethodDeclaration(2724) at 3", "Insert Block(2723) into MethodDeclaration(2724) at 4", "Insert MarkerAnnotation(2726) into MethodDeclaration(2815) at 0", "Insert MarkerAnnotation(2728) into MethodDeclaration(2815) at 1", "Insert Modifier: public(2729) into MethodDeclaration(2815) at 2", "Insert ParameterizedType: Range<C>(2734) into MethodDeclaration(2815) at 3", "Insert SimpleName: get(2735) into MethodDeclaration(2815) at 4", "Insert SingleVariableDeclaration(2739) into MethodDeclaration(2815) at 5", "Move Block(1563) into MethodDeclaration(2815) at 6", "Insert MarkerAnnotation(2817) into MethodDeclaration(2832) at 0", "Insert Modifier: public(2818) into MethodDeclaration(2832) at 1", "Insert PrimitiveType: boolean(2819) into MethodDeclaration(2832) at 2", "Insert SimpleName: containsKey(2820) into MethodDeclaration(2832) at 3", "Insert SingleVariableDeclaration(2824) into MethodDeclaration(2832) at 4", "Insert Block(2831) into MethodDeclaration(2832) at 5", "Insert SimpleType: TreeRangeSet(2838) into ParameterizedType: TreeRangeSet<C>(2841) at 0", "Insert SimpleType: C(2840) into ParameterizedType: TreeRangeSet<C>(2841) at 1", "Insert SimpleName: Complement(2842) into MethodDeclaration(2855) at 0", "Insert Block(2854) into MethodDeclaration(2855) at 1", "Insert MarkerAnnotation(2857) into MethodDeclaration(2875) at 0", "Insert Modifier: public(2858) into MethodDeclaration(2875) at 1", "Insert PrimitiveType: void(2859) into MethodDeclaration(2875) at 2", "Insert SimpleName: add(2860) into MethodDeclaration(2875) at 3", "Insert SingleVariableDeclaration(2867) into MethodDeclaration(2875) at 4", "Insert Block(2874) into MethodDeclaration(2875) at 5", "Insert MarkerAnnotation(2877) into MethodDeclaration(2895) at 0", "Insert Modifier: public(2878) into MethodDeclaration(2895) at 1", "Insert PrimitiveType: void(2879) into MethodDeclaration(2895) at 2", "Insert SimpleName: remove(2880) into MethodDeclaration(2895) at 3", "Insert SingleVariableDeclaration(2887) into MethodDeclaration(2895) at 4", "Insert Block(2894) into MethodDeclaration(2895) at 5", "Insert MarkerAnnotation(2897) into MethodDeclaration(2913) at 0", "Insert Modifier: public(2898) into MethodDeclaration(2913) at 1", "Insert PrimitiveType: boolean(2899) into MethodDeclaration(2913) at 2", "Insert SimpleName: contains(2900) into MethodDeclaration(2913) at 3", "Move SingleVariableDeclaration(939) into MethodDeclaration(2913) at 4", "Insert Block(2912) into MethodDeclaration(2913) at 5", "Insert MarkerAnnotation(2915) into MethodDeclaration(2927) at 0", "Update Modifier: private(897) to public", "Update SimpleName: positive(903) to complement", "Insert SimpleType: Comparable(901) into ParameterizedType: Comparable<?>(903) at 0", "Insert WildcardType: ?(902) into ParameterizedType: Comparable<?>(903) at 1", "Update SimpleName: AbstractRangeSet(892) to AbstractNavigableMap", "Insert SimpleType: Cut(908) into ParameterizedType: Cut<C>(911) at 0", "Move SimpleType: C(895) into ParameterizedType: Cut<C>(911) at 1", "Insert SimpleType: NavigableMap(921) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(932) at 0", "Insert ParameterizedType: Cut<C>(926) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(932) at 1", "Insert ParameterizedType: Range<C>(931) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(932) at 2", "Insert SimpleName: rangesByLowerBound(933) into VariableDeclarationFragment(934) at 0", "Insert TagElement(938) into Javadoc(939) at 0", "Insert SimpleType: Range(943) into ParameterizedType: Range<Cut<C>>(949) at 0", "Insert ParameterizedType: Cut<C>(948) into ParameterizedType: Range<Cut<C>>(949) at 1", "Insert SimpleName: upperBoundWindow(950) into VariableDeclarationFragment(951) at 0", "Insert ParameterizedType: NavigableMap<Cut<C>,Range<C>>(966) into SingleVariableDeclaration(968) at 0", "Insert SimpleName: rangesByLowerBound(967) into SingleVariableDeclaration(968) at 1", "Insert ExpressionStatement(974) into Block(983) at 0", "Insert ExpressionStatement(982) into Block(983) at 1", "Insert ParameterizedType: NavigableMap<Cut<C>,Range<C>>(999) into SingleVariableDeclaration(1001) at 0", "Insert SimpleName: rangesByLowerBound(1000) into SingleVariableDeclaration(1001) at 1", "Insert ParameterizedType: Range<Cut<C>>(1009) into SingleVariableDeclaration(1011) at 0", "Insert SimpleName: upperBoundWindow(1010) into SingleVariableDeclaration(1011) at 1", "Insert ExpressionStatement(1017) into Block(1024) at 0", "Insert ExpressionStatement(1023) into Block(1024) at 1", "Insert SimpleType: NavigableMap(1028) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1039) at 0", "Insert ParameterizedType: Cut<C>(1033) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1039) at 1", "Insert ParameterizedType: Range<C>(1038) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1039) at 2", "Insert ParameterizedType: Range<Cut<C>>(1048) into SingleVariableDeclaration(1050) at 0", "Insert SimpleName: window(1049) into SingleVariableDeclaration(1050) at 1", "Move IfStatement(1013) into Block(1074) at 0", "Insert SimpleType: NavigableMap(1080) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1091) at 0", "Insert ParameterizedType: Cut<C>(1085) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1091) at 1", "Insert ParameterizedType: Range<C>(1090) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1091) at 2", "Move ParameterizedType: Cut<C>(1020) into SingleVariableDeclaration(1099) at 0", "Insert SimpleName: fromKey(1098) into SingleVariableDeclaration(1099) at 1", "Insert PrimitiveType: boolean(1100) into SingleVariableDeclaration(1102) at 0", "Insert SimpleName: fromInclusive(1101) into SingleVariableDeclaration(1102) at 1", "Move ParameterizedType: Cut<C>(976) into SingleVariableDeclaration(1109) at 0", "Insert SimpleName: toKey(1108) into SingleVariableDeclaration(1109) at 1", "Insert PrimitiveType: boolean(1110) into SingleVariableDeclaration(1112) at 0", "Insert SimpleName: toInclusive(1111) into SingleVariableDeclaration(1112) at 1", "Insert ReturnStatement(1128) into Block(1129) at 0", "Insert SimpleType: NavigableMap(1135) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1146) at 0", "Insert ParameterizedType: Cut<C>(1140) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1146) at 1", "Insert ParameterizedType: Range<C>(1145) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1146) at 2", "Move ParameterizedType: Cut<C>(944) into SingleVariableDeclaration(1154) at 0", "Insert SimpleName: toKey(1153) into SingleVariableDeclaration(1154) at 1", "Insert PrimitiveType: boolean(1155) into SingleVariableDeclaration(1157) at 0", "Insert SimpleName: inclusive(1156) into SingleVariableDeclaration(1157) at 1", "Move ReturnStatement(1044) into Block(1169) at 0", "Insert SimpleType: NavigableMap(1175) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1186) at 0", "Insert ParameterizedType: Cut<C>(1180) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1186) at 1", "Move ParameterizedType: Cut<C>(1177) into SingleVariableDeclaration(1194) at 0", "Insert SimpleName: fromKey(1193) into SingleVariableDeclaration(1194) at 1", "Insert PrimitiveType: boolean(1195) into SingleVariableDeclaration(1197) at 0", "Insert SimpleName: inclusive(1196) into SingleVariableDeclaration(1197) at 1", "Insert ReturnStatement(1208) into Block(1209) at 0", "Insert SimpleType: Comparator(1215) into ParameterizedType: Comparator<? super Cut<C>>(1222) at 0", "Insert WildcardType: ? super Cut<C>(1221) into ParameterizedType: Comparator<? super Cut<C>>(1222) at 1", "Insert MarkerAnnotation(1241) into SingleVariableDeclaration(1245) at 0", "Insert SimpleType: Object(1243) into SingleVariableDeclaration(1245) at 1", "Insert SimpleName: key(1244) into SingleVariableDeclaration(1245) at 2", "Insert ReturnStatement(1251) into Block(1252) at 0", "Move MarkerAnnotation(1372) into SingleVariableDeclaration(1268) at 0", "Insert SimpleType: Object(1266) into SingleVariableDeclaration(1268) at 1", "Insert SimpleName: key(1267) into SingleVariableDeclaration(1268) at 2", "Insert IfStatement(1349) into Block(1352) at 0", "Insert ReturnStatement(1351) into Block(1352) at 1", "Insert SimpleType: Iterator(1357) into ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>>(1371) at 0", "Insert ParameterizedType: Entry<Cut<C>,Range<C>>(1370) into ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>>(1371) at 1", "Insert VariableDeclarationStatement(1384) into Block(1548) at 0", "Insert IfStatement(1473) into Block(1548) at 1", "Insert ReturnStatement(1547) into Block(1548) at 2", "Insert SimpleType: Iterator(1553) into ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>>(1567) at 0", "Insert ParameterizedType: Entry<Cut<C>,Range<C>>(1566) into ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>>(1567) at 1", "Insert VariableDeclarationStatement(1580) into Block(1708) at 0", "Move IfStatement(1148) into Block(1708) at 1", "Move IfStatement(1154) into Block(1708) at 2", "Insert ReturnStatement(1707) into Block(1708) at 3", "Insert IfStatement(1726) into Block(1733) at 0", "Insert ReturnStatement(1732) into Block(1733) at 1", "Insert SimpleName: Override(1735) into MarkerAnnotation(1736) at 0", "Insert ReturnStatement(1755) into Block(1756) at 0", "Insert SimpleType: Comparable(1765) into ParameterizedType: Comparable<?>(1767) at 0", "Insert WildcardType: ?(1766) into ParameterizedType: Comparable<?>(1767) at 1", "Insert SimpleName: AbstractNavigableMap(1769) into SimpleType: AbstractNavigableMap(1770) at 0", "Insert SimpleType: Cut(1772) into ParameterizedType: Cut<C>(1775) at 0", "Insert SimpleType: C(1774) into ParameterizedType: Cut<C>(1775) at 1", "Insert SimpleType: Range(1777) into ParameterizedType: Range<C>(1780) at 0", "Insert SimpleType: C(1779) into ParameterizedType: Range<C>(1780) at 1", "Insert SimpleType: NavigableMap(1785) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1796) at 0", "Insert ParameterizedType: Cut<C>(1790) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1796) at 1", "Insert ParameterizedType: Range<C>(1795) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1796) at 2", "Insert SimpleName: positiveRangesByLowerBound(1797) into VariableDeclarationFragment(1798) at 0", "Insert SimpleType: NavigableMap(1803) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1814) at 0", "Insert ParameterizedType: Cut<C>(1808) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1814) at 1", "Insert ParameterizedType: Range<C>(1813) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1814) at 2", "Insert SimpleName: positiveRangesByUpperBound(1815) into VariableDeclarationFragment(1816) at 0", "Insert TagElement(1821) into Javadoc(1822) at 0", "Insert SimpleType: Range(1826) into ParameterizedType: Range<Cut<C>>(1832) at 0", "Insert ParameterizedType: Cut<C>(1831) into ParameterizedType: Range<Cut<C>>(1832) at 1", "Insert SimpleName: complementLowerBoundWindow(1833) into VariableDeclarationFragment(1834) at 0", "Insert ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1849) into SingleVariableDeclaration(1851) at 0", "Insert SimpleName: positiveRangesByLowerBound(1850) into SingleVariableDeclaration(1851) at 1", "Insert ConstructorInvocation(1861) into Block(1862) at 0", "Insert ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1878) into SingleVariableDeclaration(1880) at 0", "Insert SimpleName: positiveRangesByLowerBound(1879) into SingleVariableDeclaration(1880) at 1", "Insert ParameterizedType: Range<Cut<C>>(1888) into SingleVariableDeclaration(1890) at 0", "Insert SimpleName: window(1889) into SingleVariableDeclaration(1890) at 1", "Insert ExpressionStatement(1896) into Block(1915) at 0", "Insert ExpressionStatement(1908) into Block(1915) at 1", "Insert ExpressionStatement(1914) into Block(1915) at 2", "Insert SimpleType: NavigableMap(1919) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1930) at 0", "Insert ParameterizedType: Cut<C>(1924) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1930) at 1", "Insert ParameterizedType: Range<C>(1929) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1930) at 2", "Insert ParameterizedType: Range<Cut<C>>(1939) into SingleVariableDeclaration(1941) at 0", "Insert SimpleName: subWindow(1940) into SingleVariableDeclaration(1941) at 1", "Move IfStatement(1291) into Block(1970) at 0", "Insert SimpleName: Override(1972) into MarkerAnnotation(1973) at 0", "Insert SimpleType: NavigableMap(1976) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1987) at 0", "Insert ParameterizedType: Cut<C>(1981) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1987) at 1", "Insert ParameterizedType: Range<C>(1986) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1987) at 2", "Move ParameterizedType: Cut<C>(1441) into SingleVariableDeclaration(1995) at 0", "Insert SimpleName: fromKey(1994) into SingleVariableDeclaration(1995) at 1", "Insert PrimitiveType: boolean(1996) into SingleVariableDeclaration(1998) at 0", "Insert SimpleName: fromInclusive(1997) into SingleVariableDeclaration(1998) at 1", "Move ParameterizedType: Cut<C>(1432) into SingleVariableDeclaration(2005) at 0", "Insert SimpleName: toKey(2004) into SingleVariableDeclaration(2005) at 1", "Insert PrimitiveType: boolean(2006) into SingleVariableDeclaration(2008) at 0", "Insert SimpleName: toInclusive(2007) into SingleVariableDeclaration(2008) at 1", "Move ReturnStatement(1297) into Block(2025) at 0", "Insert SimpleName: Override(2027) into MarkerAnnotation(2028) at 0", "Insert SimpleType: NavigableMap(2031) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(2042) at 0", "Insert ParameterizedType: Cut<C>(2036) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(2042) at 1", "Insert ParameterizedType: Range<C>(2041) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(2042) at 2", "Insert ParameterizedType: Cut<C>(2048) into SingleVariableDeclaration(2050) at 0", "Insert SimpleName: toKey(2049) into SingleVariableDeclaration(2050) at 1", "Insert PrimitiveType: boolean(2051) into SingleVariableDeclaration(2053) at 0", "Insert SimpleName: inclusive(2052) into SingleVariableDeclaration(2053) at 1", "Insert SimpleName: Override(2067) into MarkerAnnotation(2068) at 0", "Insert SimpleType: NavigableMap(2071) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(2082) at 0", "Insert ParameterizedType: Cut<C>(2076) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(2082) at 1", "Insert ParameterizedType: Range<C>(2081) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(2082) at 2", "Insert ParameterizedType: Cut<C>(2088) into SingleVariableDeclaration(2090) at 0", "Insert SimpleName: fromKey(2089) into SingleVariableDeclaration(2090) at 1", "Insert PrimitiveType: boolean(2091) into SingleVariableDeclaration(2093) at 0", "Insert SimpleName: inclusive(2092) into SingleVariableDeclaration(2093) at 1", "Insert SimpleName: Override(2107) into MarkerAnnotation(2108) at 0", "Insert SimpleType: Comparator(2111) into ParameterizedType: Comparator<? super Cut<C>>(2118) at 0", "Insert WildcardType: ? super Cut<C>(2117) into ParameterizedType: Comparator<? super Cut<C>>(2118) at 1", "Insert ReturnStatement(2128) into Block(2129) at 0", "Insert SimpleName: Override(2131) into MarkerAnnotation(2132) at 0", "Insert SimpleType: Iterator(2134) into ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>>(2148) at 0", "Insert ParameterizedType: Entry<Cut<C>,Range<C>>(2147) into ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>>(2148) at 1", "Insert VariableDeclarationStatement(2160) into Block(2393) at 0", "Insert IfStatement(2188) into Block(2393) at 1", "Insert VariableDeclarationStatement(2206) into Block(2393) at 2", "Insert VariableDeclarationStatement(2215) into Block(2393) at 3", "Insert IfStatement(2267) into Block(2393) at 4", "Insert ReturnStatement(2392) into Block(2393) at 5", "Insert SimpleName: Override(2395) into MarkerAnnotation(2396) at 0", "Insert SimpleType: Iterator(2398) into ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>>(2412) at 0", "Insert ParameterizedType: Entry<Cut<C>,Range<C>>(2411) into ParameterizedType: Iterator<Entry<Cut<C>,Range<C>>>(2412) at 1", "Insert VariableDeclarationStatement(2424) into Block(2710) at 0", "Insert VariableDeclarationStatement(2444) into Block(2710) at 1", "Insert VariableDeclarationStatement(2457) into Block(2710) at 2", "Insert VariableDeclarationStatement(2491) into Block(2710) at 4", "Insert IfStatement(2541) into Block(2710) at 5", "Move VariableDeclarationStatement(1456) into Block(2710) at 6", "Insert ReturnStatement(2709) into Block(2710) at 7", "Insert SimpleName: Override(2712) into MarkerAnnotation(2713) at 0", "Insert ReturnStatement(2722) into Block(2723) at 0", "Insert SimpleName: Override(2725) into MarkerAnnotation(2726) at 0", "Insert SimpleName: Nullable(2727) into MarkerAnnotation(2728) at 0", "Move SimpleType: Range(1533) into ParameterizedType: Range<C>(2734) at 0", "Move SimpleType: C(1535) into ParameterizedType: Range<C>(2734) at 1", "Insert SimpleType: Object(2737) into SingleVariableDeclaration(2739) at 0", "Insert SimpleName: key(2738) into SingleVariableDeclaration(2739) at 1", "Insert IfStatement(2811) into Block(2814) at 0", "Insert ReturnStatement(2813) into Block(2814) at 1", "Insert SimpleName: Override(2816) into MarkerAnnotation(2817) at 0", "Insert SimpleType: Object(2822) into SingleVariableDeclaration(2824) at 0", "Insert SimpleName: key(2823) into SingleVariableDeclaration(2824) at 1", "Insert ReturnStatement(2830) into Block(2831) at 0", "Insert SimpleName: TreeRangeSet(2837) into SimpleType: TreeRangeSet(2838) at 0", "Insert SimpleName: C(2839) into SimpleType: C(2840) at 0", "Insert SuperConstructorInvocation(2853) into Block(2854) at 0", "Insert SimpleName: Override(2856) into MarkerAnnotation(2857) at 0", "Insert ParameterizedType: Range<C>(2865) into SingleVariableDeclaration(2867) at 0", "Insert SimpleName: rangeToAdd(2866) into SingleVariableDeclaration(2867) at 1", "Insert ExpressionStatement(2873) into Block(2874) at 0", "Insert SimpleName: Override(2876) into MarkerAnnotation(2877) at 0", "Insert ParameterizedType: Range<C>(2885) into SingleVariableDeclaration(2887) at 0", "Insert SimpleName: rangeToRemove(2886) into SingleVariableDeclaration(2887) at 1", "Insert ExpressionStatement(2893) into Block(2894) at 0", "Insert SimpleName: Override(2896) into MarkerAnnotation(2897) at 0", "Insert ReturnStatement(2911) into Block(2912) at 0", "Insert SimpleName: Override(2914) into MarkerAnnotation(2915) at 0", "Insert SimpleName: Comparable(900) into SimpleType: Comparable(901) at 0", "Insert SimpleName: Cut(907) into SimpleType: Cut(908) at 0", "Insert SimpleName: NavigableMap(920) into SimpleType: NavigableMap(921) at 0", "Insert SimpleType: Cut(923) into ParameterizedType: Cut<C>(926) at 0", "Insert SimpleType: C(925) into ParameterizedType: Cut<C>(926) at 1", "Insert SimpleType: Range(928) into ParameterizedType: Range<C>(931) at 0", "Insert SimpleType: C(930) into ParameterizedType: Range<C>(931) at 1", "Insert TextElement: upperBoundWindow represents the headMap/subMap/tailMap view of the entire \"ranges by upper(936) into TagElement(938) at 0", "Insert TextElement: bound\" map; it's a constraint on the *keys*, and does not affect the values.(937) into TagElement(938) at 1", "Insert SimpleName: Range(942) into SimpleType: Range(943) at 0", "Insert SimpleType: Cut(945) into ParameterizedType: Cut<C>(948) at 0", "Insert SimpleType: C(947) into ParameterizedType: Cut<C>(948) at 1", "Insert SimpleType: NavigableMap(955) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(966) at 0", "Insert ParameterizedType: Cut<C>(960) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(966) at 1", "Insert ParameterizedType: Range<C>(965) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(966) at 2", "Insert Assignment: =(973) into ExpressionStatement(974) at 0", "Insert Assignment: =(981) into ExpressionStatement(982) at 0", "Insert SimpleType: NavigableMap(988) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(999) at 0", "Insert ParameterizedType: Cut<C>(993) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(999) at 1", "Insert ParameterizedType: Range<C>(998) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(999) at 2", "Insert SimpleType: Range(1003) into ParameterizedType: Range<Cut<C>>(1009) at 0", "Insert ParameterizedType: Cut<C>(1008) into ParameterizedType: Range<Cut<C>>(1009) at 1", "Insert Assignment: =(1016) into ExpressionStatement(1017) at 0", "Insert Assignment: =(1022) into ExpressionStatement(1023) at 0", "Insert SimpleName: NavigableMap(1027) into SimpleType: NavigableMap(1028) at 0", "Insert SimpleType: Cut(1030) into ParameterizedType: Cut<C>(1033) at 0", "Insert SimpleType: C(1032) into ParameterizedType: Cut<C>(1033) at 1", "Insert SimpleType: Range(1035) into ParameterizedType: Range<C>(1038) at 0", "Insert SimpleType: C(1037) into ParameterizedType: Range<C>(1038) at 1", "Insert SimpleType: Range(1042) into ParameterizedType: Range<Cut<C>>(1048) at 0", "Insert ParameterizedType: Cut<C>(1047) into ParameterizedType: Range<Cut<C>>(1048) at 1", "Insert Block(1072) into IfStatement(1073) at 2", "Insert SimpleName: NavigableMap(1079) into SimpleType: NavigableMap(1080) at 0", "Insert SimpleType: Cut(1082) into ParameterizedType: Cut<C>(1085) at 0", "Insert SimpleType: C(1084) into ParameterizedType: Cut<C>(1085) at 1", "Insert SimpleType: Range(1087) into ParameterizedType: Range<C>(1090) at 0", "Insert SimpleType: C(1089) into ParameterizedType: Range<C>(1090) at 1", "Insert MethodInvocation(1127) into ReturnStatement(1128) at 0", "Insert SimpleName: NavigableMap(1134) into SimpleType: NavigableMap(1135) at 0", "Insert SimpleType: Cut(1137) into ParameterizedType: Cut<C>(1140) at 0", "Insert SimpleType: C(1139) into ParameterizedType: Cut<C>(1140) at 1", "Insert SimpleType: Range(1142) into ParameterizedType: Range<C>(1145) at 0", "Insert SimpleType: C(1144) into ParameterizedType: Range<C>(1145) at 1", "Insert MethodInvocation(1167) into ReturnStatement(1168) at 0", "Insert SimpleName: NavigableMap(1174) into SimpleType: NavigableMap(1175) at 0", "Update SimpleType: Set(1051) to Cut", "Move SimpleType: Set(1051) into ParameterizedType: Cut<C>(1180) at 0", "Insert SimpleType: C(1179) into ParameterizedType: Cut<C>(1180) at 1", "Insert MethodInvocation(1207) into ReturnStatement(1208) at 0", "Insert SimpleName: Comparator(1214) into SimpleType: Comparator(1215) at 0", "Move ParameterizedType: Cut<C>(1247) into WildcardType: ? super Cut<C>(1221) at 0", "Insert SimpleName: Nullable(1240) into MarkerAnnotation(1241) at 0", "Insert SimpleName: Object(1242) into SimpleType: Object(1243) at 0", "Insert InfixExpression: !=(1250) into ReturnStatement(1251) at 0", "Insert SimpleName: Object(1265) into SimpleType: Object(1266) at 0", "Insert InstanceofExpression(1272) into IfStatement(1349) at 0", "Insert Block(1348) into IfStatement(1349) at 1", "Insert NullLiteral(1350) into ReturnStatement(1351) at 0", "Insert SimpleName: Iterator(1356) into SimpleType: Iterator(1357) at 0", "Insert SimpleType: Entry(1359) into ParameterizedType: Entry<Cut<C>,Range<C>>(1370) at 0", "Insert ParameterizedType: Cut<C>(1364) into ParameterizedType: Entry<Cut<C>,Range<C>>(1370) at 1", "Insert ParameterizedType: Range<C>(1369) into ParameterizedType: Entry<Cut<C>,Range<C>>(1370) at 2", "Insert Modifier: final(1373) into VariableDeclarationStatement(1384) at 0", "Move ParameterizedType: Iterator<Range<C>>(1077) into VariableDeclarationStatement(1384) at 1", "Insert VariableDeclarationFragment(1383) into VariableDeclarationStatement(1384) at 2", "Insert PrefixExpression: !(1388) into IfStatement(1473) at 0", "Insert Block(1397) into IfStatement(1473) at 1", "Insert Block(1472) into IfStatement(1473) at 2", "Insert ClassInstanceCreation(1546) into ReturnStatement(1547) at 0", "Insert SimpleName: Iterator(1552) into SimpleType: Iterator(1553) at 0", "Insert SimpleType: Entry(1555) into ParameterizedType: Entry<Cut<C>,Range<C>>(1566) at 0", "Insert ParameterizedType: Cut<C>(1560) into ParameterizedType: Entry<Cut<C>,Range<C>>(1566) at 1", "Insert ParameterizedType: Range<C>(1565) into ParameterizedType: Entry<Cut<C>,Range<C>>(1566) at 2", "Insert Modifier: final(1569) into VariableDeclarationStatement(1580) at 0", "Insert ParameterizedType: PeekingIterator<Range<C>>(1577) into VariableDeclarationStatement(1580) at 1", "Insert VariableDeclarationFragment(1579) into VariableDeclarationStatement(1580) at 2", "Insert MethodInvocation(1583) into IfStatement(1618) at 0", "Insert Block(1617) into IfStatement(1618) at 2", "Insert InfixExpression: &&(1630) into IfStatement(1636) at 0", "Insert ClassInstanceCreation(1706) into ReturnStatement(1707) at 0", "Insert MethodInvocation(1720) into IfStatement(1726) at 0", "Move Block(1207) into IfStatement(1726) at 1", "Insert MethodInvocation(1731) into ReturnStatement(1732) at 0", "Insert ConditionalExpression(1754) into ReturnStatement(1755) at 0", "Insert SimpleName: Comparable(1764) into SimpleType: Comparable(1765) at 0", "Insert SimpleName: Cut(1771) into SimpleType: Cut(1772) at 0", "Insert SimpleName: C(1773) into SimpleType: C(1774) at 0", "Insert SimpleName: Range(1776) into SimpleType: Range(1777) at 0", "Insert SimpleName: C(1778) into SimpleType: C(1779) at 0", "Insert SimpleName: NavigableMap(1784) into SimpleType: NavigableMap(1785) at 0", "Insert SimpleType: Cut(1787) into ParameterizedType: Cut<C>(1790) at 0", "Insert SimpleType: C(1789) into ParameterizedType: Cut<C>(1790) at 1", "Insert SimpleType: Range(1792) into ParameterizedType: Range<C>(1795) at 0", "Insert SimpleType: C(1794) into ParameterizedType: Range<C>(1795) at 1", "Insert SimpleName: NavigableMap(1802) into SimpleType: NavigableMap(1803) at 0", "Insert SimpleType: Cut(1805) into ParameterizedType: Cut<C>(1808) at 0", "Insert SimpleType: C(1807) into ParameterizedType: Cut<C>(1808) at 1", "Insert SimpleType: Range(1810) into ParameterizedType: Range<C>(1813) at 0", "Insert SimpleType: C(1812) into ParameterizedType: Range<C>(1813) at 1", "Insert TextElement: complementLowerBoundWindow represents the headMap/subMap/tailMap view of the entire(1818) into TagElement(1821) at 0", "Insert TextElement: \"complement ranges by lower bound\" map; it's a constraint on the *keys*, and does not affect(1819) into TagElement(1821) at 1", "Insert TextElement: the values.(1820) into TagElement(1821) at 2", "Insert SimpleName: Range(1825) into SimpleType: Range(1826) at 0", "Insert SimpleType: Cut(1828) into ParameterizedType: Cut<C>(1831) at 0", "Insert SimpleType: C(1830) into ParameterizedType: Cut<C>(1831) at 1", "Insert SimpleType: NavigableMap(1838) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1849) at 0", "Insert ParameterizedType: Cut<C>(1843) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1849) at 1", "Insert ParameterizedType: Range<C>(1848) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1849) at 2", "Insert SimpleName: positiveRangesByLowerBound(1852) into ConstructorInvocation(1861) at 0", "Insert MethodInvocation(1860) into ConstructorInvocation(1861) at 1", "Insert SimpleType: NavigableMap(1867) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1878) at 0", "Insert ParameterizedType: Cut<C>(1872) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1878) at 1", "Insert ParameterizedType: Range<C>(1877) into ParameterizedType: NavigableMap<Cut<C>,Range<C>>(1878) at 2", "Insert SimpleType: Range(1882) into ParameterizedType: Range<Cut<C>>(1888) at 0", "Insert ParameterizedType: Cut<C>(1887) into ParameterizedType: Range<Cut<C>>(1888) at 1", "Insert Assignment: =(1895) into ExpressionStatement(1896) at 0", "Insert Assignment: =(1907) into ExpressionStatement(1908) at 0", "Insert Assignment: =(1913) into ExpressionStatement(1914) at 0", "Insert SimpleName: NavigableMap(1918) into SimpleType: NavigableMap(1919) at 0", "Insert SimpleType: Cut(1921) into ParameterizedType: Cut<C>(1924) at 0", "Insert SimpleType: C(1923) into ParameterizedType: Cut<C>(1924) at 1", "Insert SimpleType: Range(1926) into ParameterizedType: Range<C>(1929) at 0", "Insert SimpleType: C(1928) into ParameterizedType: Range<C>(1929) at 1", "Insert SimpleType: Range(1933) into ParameterizedType: Range<Cut<C>>(1939) at 0", "Insert ParameterizedType: Cut<C>(1938) into ParameterizedType: Range<Cut<C>>(1939) at 1", "Insert PrefixExpression: !(1946) into IfStatement(1969) at 0", "Insert SimpleName: NavigableMap(1975) into SimpleType: NavigableMap(1976) at 0", "Insert SimpleType: Cut(1978) into ParameterizedType: Cut<C>(1981) at 0", "Insert SimpleType: C(1980) into ParameterizedType: Cut<C>(1981) at 1", "Insert SimpleType: Range(1983) into ParameterizedType: Range<C>(1986) at 0", "Insert SimpleType: C(1985) into ParameterizedType: Range<C>(1986) at 1", "Insert MethodInvocation(2023) into ReturnStatement(2024) at 0", "Insert SimpleName: NavigableMap(2030) into SimpleType: NavigableMap(2031) at 0", "Insert SimpleType: Cut(2033) into ParameterizedType: Cut<C>(2036) at 0", "Insert SimpleType: C(2035) into ParameterizedType: Cut<C>(2036) at 1", "Insert SimpleType: Range(2038) into ParameterizedType: Range<C>(2041) at 0", "Insert SimpleType: C(2040) into ParameterizedType: Range<C>(2041) at 1", "Insert SimpleType: Cut(2045) into ParameterizedType: Cut<C>(2048) at 0", "Insert SimpleType: C(2047) into ParameterizedType: Cut<C>(2048) at 1", "Insert MethodInvocation(2063) into ReturnStatement(2064) at 0", "Insert SimpleName: NavigableMap(2070) into SimpleType: NavigableMap(2071) at 0", "Insert SimpleType: Cut(2073) into ParameterizedType: Cut<C>(2076) at 0", "Insert SimpleType: C(2075) into ParameterizedType: Cut<C>(2076) at 1", "Update SimpleType: RangeSet(1321) to Range", "Move SimpleType: RangeSet(1321) into ParameterizedType: Range<C>(2081) at 0", "Move SimpleType: C(1323) into ParameterizedType: Range<C>(2081) at 1", "Insert SimpleType: Cut(2085) into ParameterizedType: Cut<C>(2088) at 0", "Insert SimpleType: C(2087) into ParameterizedType: Cut<C>(2088) at 1", "Insert MethodInvocation(2103) into ReturnStatement(2104) at 0", "Insert SimpleName: Comparator(2110) into SimpleType: Comparator(2111) at 0", "Insert ParameterizedType: Cut<C>(2116) into WildcardType: ? super Cut<C>(2117) at 0", "Insert MethodInvocation(2127) into ReturnStatement(2128) at 0", "Insert SimpleName: Iterator(2133) into SimpleType: Iterator(2134) at 0", "Insert SimpleType: Entry(2136) into ParameterizedType: Entry<Cut<C>,Range<C>>(2147) at 0", "Insert ParameterizedType: Cut<C>(2141) into ParameterizedType: Entry<Cut<C>,Range<C>>(2147) at 1", "Insert ParameterizedType: Range<C>(2146) into ParameterizedType: Entry<Cut<C>,Range<C>>(2147) at 2", "Insert ParameterizedType: Collection<Range<C>>(2157) into VariableDeclarationStatement(2160) at 0", "Insert VariableDeclarationFragment(2159) into VariableDeclarationStatement(2160) at 1", "Insert MethodInvocation(2163) into IfStatement(2188) at 0", "Insert Block(2180) into IfStatement(2188) at 1", "Insert Block(2187) into IfStatement(2188) at 2", "Insert Modifier: final(2189) into VariableDeclarationStatement(2206) at 0", "Update ParameterizedType: AbstractSet<Range<C>>(1066) to PeekingIterator<Range<C>>", "Move ParameterizedType: AbstractSet<Range<C>>(1066) into VariableDeclarationStatement(2206) at 1", "Insert VariableDeclarationFragment(2205) into VariableDeclarationStatement(2206) at 2", "Insert Modifier: final(2207) into VariableDeclarationStatement(2215) at 0", "Insert ParameterizedType: Cut<C>(2212) into VariableDeclarationStatement(2215) at 1", "Insert VariableDeclarationFragment(2214) into VariableDeclarationStatement(2215) at 2", "Insert InfixExpression: &&(2241) into IfStatement(2267) at 0", "Move Block(1219) into IfStatement(2267) at 1", "Insert IfStatement(2266) into IfStatement(2267) at 2", "Insert ClassInstanceCreation(2391) into ReturnStatement(2392) at 0", "Insert SimpleName: Iterator(2397) into SimpleType: Iterator(2398) at 0", "Insert SimpleType: Entry(2400) into ParameterizedType: Entry<Cut<C>,Range<C>>(2411) at 0", "Insert ParameterizedType: Cut<C>(2405) into ParameterizedType: Entry<Cut<C>,Range<C>>(2411) at 1", "Insert ParameterizedType: Range<C>(2410) into ParameterizedType: Entry<Cut<C>,Range<C>>(2411) at 2", "Move ParameterizedType: Iterator<Range<C>>(1393) into VariableDeclarationStatement(2424) at 0", "Insert VariableDeclarationFragment(2423) into VariableDeclarationStatement(2424) at 1", "Insert ParameterizedType: Cut<C>(2429) into VariableDeclarationStatement(2444) at 0", "Insert VariableDeclarationFragment(2443) into VariableDeclarationStatement(2444) at 1", "Insert PrimitiveType: boolean(2445) into VariableDeclarationStatement(2457) at 0", "Insert VariableDeclarationFragment(2456) into VariableDeclarationStatement(2457) at 1", "Insert Modifier: final(2458) into VariableDeclarationStatement(2483) at 0", "Insert ParameterizedType: PeekingIterator<Range<C>>(2466) into VariableDeclarationStatement(2483) at 1", "Insert ParameterizedType: Cut<C>(2488) into VariableDeclarationStatement(2491) at 0", "Insert VariableDeclarationFragment(2490) into VariableDeclarationStatement(2491) at 1", "Move MethodInvocation(1410) into IfStatement(2541) at 0", "Insert Block(2506) into IfStatement(2541) at 1", "Insert IfStatement(2540) into IfStatement(2541) at 2", "Insert Modifier: final(2542) into VariableDeclarationStatement(2559) at 0", "Insert ParameterizedType: Cut<C>(2547) into VariableDeclarationStatement(2559) at 1", "Insert ClassInstanceCreation(2708) into ReturnStatement(2709) at 0", "Insert MethodInvocation(2721) into ReturnStatement(2722) at 0", "Insert SimpleName: Object(2736) into SimpleType: Object(2737) at 0", "Insert InstanceofExpression(2743) into IfStatement(2811) at 0", "Insert Block(2810) into IfStatement(2811) at 1", "Insert NullLiteral(2812) into ReturnStatement(2813) at 0", "Insert SimpleName: Object(2821) into SimpleType: Object(2822) at 0", "Insert InfixExpression: !=(2829) into ReturnStatement(2830) at 0", "Insert ClassInstanceCreation(2852) into SuperConstructorInvocation(2853) at 0", "Insert SimpleType: Range(2862) into ParameterizedType: Range<C>(2865) at 0", "Insert SimpleType: C(2864) into ParameterizedType: Range<C>(2865) at 1", "Insert MethodInvocation(2872) into ExpressionStatement(2873) at 0", "Insert SimpleType: Range(2882) into ParameterizedType: Range<C>(2885) at 0", "Insert SimpleType: C(2884) into ParameterizedType: Range<C>(2885) at 1", "Insert MethodInvocation(2892) into ExpressionStatement(2893) at 0", "Insert PrefixExpression: !(2910) into ReturnStatement(2911) at 0", "Update SimpleName: rangesByLowerCut(178) to rangesByLowerBound", "Update SimpleName: rangesByLowerCut(266) to rangesByLowerBound", "Update SimpleName: rangesByLowerCut(337) to rangesByLowerBound", "Update SimpleName: rangesByLowerCut(397) to rangesByLowerBound", "Update SimpleName: rangesByLowerCut(439) to rangesByLowerBound", "Update SimpleName: rangesByLowerCut(458) to rangesByLowerBound", "Update SimpleName: rangesByLowerCut(542) to rangesByLowerBound", "Update SimpleName: rangesByLowerCut(602) to rangesByLowerBound", "Update SimpleName: rangesByLowerCut(636) to rangesByLowerBound", "Update SimpleName: rangesByLowerCut(693) to rangesByLowerBound", "Update SimpleName: rangesByLowerCut(767) to rangesByLowerBound", "Update SimpleName: rangesByLowerCut(808) to rangesByLowerBound", "Insert SimpleName: Cut(922) into SimpleType: Cut(923) at 0", "Insert SimpleName: C(924) into SimpleType: C(925) at 0", "Insert SimpleName: Range(927) into SimpleType: Range(928) at 0", "Insert SimpleName: C(929) into SimpleType: C(930) at 0", "Insert SimpleName: Cut(944) into SimpleType: Cut(945) at 0", "Insert SimpleName: C(946) into SimpleType: C(947) at 0", "Insert SimpleName: NavigableMap(954) into SimpleType: NavigableMap(955) at 0", "Insert SimpleType: Cut(957) into ParameterizedType: Cut<C>(960) at 0", "Insert SimpleType: C(959) into ParameterizedType: Cut<C>(960) at 1", "Insert SimpleType: Range(962) into ParameterizedType: Range<C>(965) at 0", "Insert SimpleType: C(964) into ParameterizedType: Range<C>(965) at 1", "Insert FieldAccess(971) into Assignment: =(973) at 0", "Insert SimpleName: rangesByLowerBound(972) into Assignment: =(973) at 1", "Insert FieldAccess(977) into Assignment: =(981) at 0", "Move MethodInvocation(1205) into Assignment: =(981) at 1", "Insert SimpleName: NavigableMap(987) into SimpleType: NavigableMap(988) at 0", "Insert SimpleType: Cut(990) into ParameterizedType: Cut<C>(993) at 0", "Insert SimpleType: C(992) into ParameterizedType: Cut<C>(993) at 1", "Insert SimpleType: Range(995) into ParameterizedType: Range<C>(998) at 0", "Insert SimpleType: C(997) into ParameterizedType: Range<C>(998) at 1", "Insert SimpleName: Range(1002) into SimpleType: Range(1003) at 0", "Insert SimpleType: Cut(1005) into ParameterizedType: Cut<C>(1008) at 0", "Insert SimpleType: C(1007) into ParameterizedType: Cut<C>(1008) at 1", "Insert FieldAccess(1014) into Assignment: =(1016) at 0", "Insert SimpleName: rangesByLowerBound(1015) into Assignment: =(1016) at 1", "Insert FieldAccess(1020) into Assignment: =(1022) at 0", "Insert SimpleName: upperBoundWindow(1021) into Assignment: =(1022) at 1", "Insert SimpleName: Cut(1029) into SimpleType: Cut(1030) at 0", "Insert SimpleName: C(1031) into SimpleType: C(1032) at 0", "Insert SimpleName: Range(1034) into SimpleType: Range(1035) at 0", "Insert SimpleName: C(1036) into SimpleType: C(1037) at 0", "Insert SimpleName: Range(1041) into SimpleType: Range(1042) at 0", "Insert SimpleType: Cut(1044) into ParameterizedType: Cut<C>(1047) at 0", "Insert SimpleType: C(1046) into ParameterizedType: Cut<C>(1047) at 1", "Update SimpleName: rangeBelow(1001) to window", "Update SimpleName: contains(1002) to isConnected", "Update SimpleName: value(1003) to upperBoundWindow", "Insert ReturnStatement(1066) into Block(1067) at 0", "Insert ReturnStatement(1071) into Block(1072) at 0", "Insert SimpleName: Cut(1081) into SimpleType: Cut(1082) at 0", "Insert SimpleName: C(1083) into SimpleType: C(1084) at 0", "Insert SimpleName: Range(1086) into SimpleType: Range(1087) at 0", "Insert SimpleName: C(1088) into SimpleType: C(1089) at 0", "Insert SimpleName: subMap(1113) into MethodInvocation(1127) at 0", "Insert MethodInvocation(1126) into MethodInvocation(1127) at 1", "Insert SimpleName: Cut(1136) into SimpleType: Cut(1137) at 0", "Insert SimpleName: C(1138) into SimpleType: C(1139) at 0", "Insert SimpleName: Range(1141) into SimpleType: Range(1142) at 0", "Insert SimpleName: C(1143) into SimpleType: C(1144) at 0", "Insert SimpleName: subMap(1158) into MethodInvocation(1167) at 0", "Insert MethodInvocation(1166) into MethodInvocation(1167) at 1", "Update SimpleName: Set(1050) to Cut", "Insert SimpleName: C(1178) into SimpleType: C(1179) at 0", "Insert SimpleName: subMap(1198) into MethodInvocation(1207) at 0", "Insert MethodInvocation(1206) into MethodInvocation(1207) at 1", "Update SimpleName: standardComplementIterator(1081) to Ordering", "Insert ParameterizedType: Cut<C>(1229) into MethodInvocation(1231) at 1", "Insert SimpleName: natural(1230) into MethodInvocation(1231) at 2", "Insert MethodInvocation(1248) into InfixExpression: !=(1250) at 0", "Insert NullLiteral(1249) into InfixExpression: !=(1250) at 1", "Insert SimpleName: key(1269) into InstanceofExpression(1272) at 0", "Insert SimpleType: Cut(1271) into InstanceofExpression(1272) at 1", "Insert TryStatement(1347) into Block(1348) at 0", "Insert SimpleName: Entry(1358) into SimpleType: Entry(1359) at 0", "Insert SimpleType: Cut(1361) into ParameterizedType: Cut<C>(1364) at 0", "Insert SimpleType: C(1363) into ParameterizedType: Cut<C>(1364) at 1", "Insert SimpleType: Range(1366) into ParameterizedType: Range<C>(1369) at 0", "Insert SimpleType: C(1368) into ParameterizedType: Range<C>(1369) at 1", "Insert SimpleName: backingItr(1382) into VariableDeclarationFragment(1383) at 0", "Insert MethodInvocation(1387) into PrefixExpression: !(1388) at 0", "Insert ExpressionStatement(1396) into Block(1397) at 0", "Move VariableDeclarationStatement(1199) into Block(1472) at 0", "Insert IfStatement(1471) into Block(1472) at 1", "Insert ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>>(1489) into ClassInstanceCreation(1546) at 0", "Insert AnonymousClassDeclaration(1545) into ClassInstanceCreation(1546) at 1", "Insert SimpleName: Entry(1554) into SimpleType: Entry(1555) at 0", "Insert SimpleType: Cut(1557) into ParameterizedType: Cut<C>(1560) at 0", "Insert SimpleType: C(1559) into ParameterizedType: Cut<C>(1560) at 1", "Insert SimpleType: Range(1562) into ParameterizedType: Range<C>(1565) at 0", "Insert SimpleType: C(1564) into ParameterizedType: Range<C>(1565) at 1", "Insert SimpleType: PeekingIterator(1571) into ParameterizedType: PeekingIterator<Range<C>>(1577) at 0", "Move ParameterizedType: Range<C>(1377) into ParameterizedType: PeekingIterator<Range<C>>(1577) at 1", "Insert SimpleName: backingItr(1578) into VariableDeclarationFragment(1579) at 0", "Insert SimpleName: upperBoundWindow(1581) into MethodInvocation(1583) at 0", "Insert SimpleName: hasUpperBound(1582) into MethodInvocation(1583) at 1", "Insert ExpressionStatement(1616) into Block(1617) at 0", "Insert MethodInvocation(1621) into InfixExpression: &&(1630) at 0", "Insert MethodInvocation(1629) into InfixExpression: &&(1630) at 1", "Insert ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>>(1652) into ClassInstanceCreation(1706) at 0", "Insert AnonymousClassDeclaration(1705) into ClassInstanceCreation(1706) at 1", "Insert SimpleName: upperBoundWindow(1715) into MethodInvocation(1720) at 0", "Insert SimpleName: equals(1716) into MethodInvocation(1720) at 1", "Move MethodInvocation(1507) into MethodInvocation(1720) at 2", "Update SimpleName: firstEntry(1208) to Iterators", "Move SimpleName: firstEntry(1208) into MethodInvocation(1731) at 0", "Update SimpleName: getValue(1209) to size", "Move SimpleName: getValue(1209) into MethodInvocation(1731) at 1", "Insert MethodInvocation(1730) into MethodInvocation(1731) at 2", "Insert MethodInvocation(1745) into ConditionalExpression(1754) at 0", "Insert MethodInvocation(1748) into ConditionalExpression(1754) at 1", "Insert PrefixExpression: !(1753) into ConditionalExpression(1754) at 2", "Insert SimpleName: Cut(1786) into SimpleType: Cut(1787) at 0", "Insert SimpleName: C(1788) into SimpleType: C(1789) at 0", "Insert SimpleName: Range(1791) into SimpleType: Range(1792) at 0", "Insert SimpleName: C(1793) into SimpleType: C(1794) at 0", "Insert SimpleName: Cut(1804) into SimpleType: Cut(1805) at 0", "Insert SimpleName: C(1806) into SimpleType: C(1807) at 0", "Insert SimpleName: Range(1809) into SimpleType: Range(1810) at 0", "Insert SimpleName: C(1811) into SimpleType: C(1812) at 0", "Insert SimpleName: Cut(1827) into SimpleType: Cut(1828) at 0", "Insert SimpleName: C(1829) into SimpleType: C(1830) at 0", "Insert SimpleName: NavigableMap(1837) into SimpleType: NavigableMap(1838) at 0", "Insert SimpleType: Cut(1840) into ParameterizedType: Cut<C>(1843) at 0", "Insert SimpleType: C(1842) into ParameterizedType: Cut<C>(1843) at 1", "Insert SimpleType: Range(1845) into ParameterizedType: Range<C>(1848) at 0", "Insert SimpleType: C(1847) into ParameterizedType: Range<C>(1848) at 1", "Insert SimpleName: Range(1853) into MethodInvocation(1860) at 0", "Insert ParameterizedType: Cut<C>(1858) into MethodInvocation(1860) at 1", "Update SimpleName: aboveAll(1229) to all", "Move SimpleName: aboveAll(1229) into MethodInvocation(1860) at 2", "Insert SimpleName: NavigableMap(1866) into SimpleType: NavigableMap(1867) at 0", "Insert SimpleType: Cut(1869) into ParameterizedType: Cut<C>(1872) at 0", "Insert SimpleType: C(1871) into ParameterizedType: Cut<C>(1872) at 1", "Insert SimpleType: Range(1874) into ParameterizedType: Range<C>(1877) at 0", "Insert SimpleType: C(1876) into ParameterizedType: Range<C>(1877) at 1", "Insert SimpleName: Range(1881) into SimpleType: Range(1882) at 0", "Insert SimpleType: Cut(1884) into ParameterizedType: Cut<C>(1887) at 0", "Insert SimpleType: C(1886) into ParameterizedType: Cut<C>(1887) at 1", "Insert FieldAccess(1893) into Assignment: =(1895) at 0", "Insert SimpleName: positiveRangesByLowerBound(1894) into Assignment: =(1895) at 1", "Insert FieldAccess(1899) into Assignment: =(1907) at 0", "Insert ClassInstanceCreation(1906) into Assignment: =(1907) at 1", "Insert FieldAccess(1911) into Assignment: =(1913) at 0", "Insert SimpleName: window(1912) into Assignment: =(1913) at 1", "Insert SimpleName: Cut(1920) into SimpleType: Cut(1921) at 0", "Insert SimpleName: C(1922) into SimpleType: C(1923) at 0", "Insert SimpleName: Range(1925) into SimpleType: Range(1926) at 0", "Insert SimpleName: C(1927) into SimpleType: C(1928) at 0", "Insert SimpleName: Range(1932) into SimpleType: Range(1933) at 0", "Insert SimpleType: Cut(1935) into ParameterizedType: Cut<C>(1938) at 0", "Insert SimpleType: C(1937) into ParameterizedType: Cut<C>(1938) at 1", "Insert MethodInvocation(1945) into PrefixExpression: !(1946) at 0", "Insert ReturnStatement(1950) into Block(1951) at 0", "Insert ReturnStatement(1967) into Block(1968) at 1", "Insert SimpleName: Cut(1977) into SimpleType: Cut(1978) at 0", "Insert SimpleName: C(1979) into SimpleType: C(1980) at 0", "Insert SimpleName: Range(1982) into SimpleType: Range(1983) at 0", "Insert SimpleName: C(1984) into SimpleType: C(1985) at 0", "Insert SimpleName: subMap(2009) into MethodInvocation(2023) at 0", "Insert MethodInvocation(2022) into MethodInvocation(2023) at 1", "Insert SimpleName: Cut(2032) into SimpleType: Cut(2033) at 0", "Insert SimpleName: C(2034) into SimpleType: C(2035) at 0", "Insert SimpleName: Range(2037) into SimpleType: Range(2038) at 0", "Insert SimpleName: C(2039) into SimpleType: C(2040) at 0", "Insert SimpleName: Cut(2044) into SimpleType: Cut(2045) at 0", "Insert SimpleName: C(2046) into SimpleType: C(2047) at 0", "Insert SimpleName: subMap(2054) into MethodInvocation(2063) at 0", "Insert MethodInvocation(2062) into MethodInvocation(2063) at 1", "Insert SimpleName: Cut(2072) into SimpleType: Cut(2073) at 0", "Insert SimpleName: C(2074) into SimpleType: C(2075) at 0", "Update SimpleName: RangeSet(1320) to Range", "Insert SimpleName: Cut(2084) into SimpleType: Cut(2085) at 0", "Insert SimpleName: C(2086) into SimpleType: C(2087) at 0", "Insert SimpleName: subMap(2094) into MethodInvocation(2103) at 0", "Insert MethodInvocation(2102) into MethodInvocation(2103) at 1", "Insert SimpleType: Cut(2113) into ParameterizedType: Cut<C>(2116) at 0", "Insert SimpleType: C(2115) into ParameterizedType: Cut<C>(2116) at 1", "Insert SimpleName: Ordering(2120) into MethodInvocation(2127) at 0", "Insert ParameterizedType: Cut<C>(2125) into MethodInvocation(2127) at 1", "Insert SimpleName: natural(2126) into MethodInvocation(2127) at 2", "Insert SimpleName: Entry(2135) into SimpleType: Entry(2136) at 0", "Insert SimpleType: Cut(2138) into ParameterizedType: Cut<C>(2141) at 0", "Insert SimpleType: C(2140) into ParameterizedType: Cut<C>(2141) at 1", "Move SimpleType: Range(1337) into ParameterizedType: Range<C>(2146) at 0", "Move SimpleType: C(1339) into ParameterizedType: Range<C>(2146) at 1", "Insert SimpleType: Collection(2151) into ParameterizedType: Collection<Range<C>>(2157) at 0", "Insert ParameterizedType: Range<C>(2156) into ParameterizedType: Collection<Range<C>>(2157) at 1", "Insert SimpleName: positiveRanges(2158) into VariableDeclarationFragment(2159) at 0", "Insert SimpleName: complementLowerBoundWindow(2161) into MethodInvocation(2163) at 0", "Insert SimpleName: hasLowerBound(2162) into MethodInvocation(2163) at 1", "Move ExpressionStatement(1348) into Block(2180) at 0", "Insert ExpressionStatement(2186) into Block(2187) at 0", "Update SimpleType: AbstractSet(1060) to PeekingIterator", "Insert SimpleName: positiveItr(2198) into VariableDeclarationFragment(2205) at 0", "Insert MethodInvocation(2204) into VariableDeclarationFragment(2205) at 1", "Insert SimpleType: Cut(2209) into ParameterizedType: Cut<C>(2212) at 0", "Insert SimpleType: C(2211) into ParameterizedType: Cut<C>(2212) at 1", "Insert SimpleName: firstComplementRangeLowerBound(2213) into VariableDeclarationFragment(2214) at 0", "Insert MethodInvocation(2223) into InfixExpression: &&(2241) at 0", "Insert ParenthesizedExpression(2240) into InfixExpression: &&(2241) at 1", "Insert MethodInvocation(2251) into IfStatement(2266) at 0", "Insert Block(2260) into IfStatement(2266) at 1", "Insert Block(2265) into IfStatement(2266) at 2", "Insert ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>>(2283) into ClassInstanceCreation(2391) at 0", "Insert AnonymousClassDeclaration(2390) into ClassInstanceCreation(2391) at 1", "Insert SimpleName: Entry(2399) into SimpleType: Entry(2400) at 0", "Insert SimpleType: Cut(2402) into ParameterizedType: Cut<C>(2405) at 0", "Insert SimpleType: C(2404) into ParameterizedType: Cut<C>(2405) at 1", "Insert SimpleType: Range(2407) into ParameterizedType: Range<C>(2410) at 0", "Insert SimpleType: C(2409) into ParameterizedType: Range<C>(2410) at 1", "Insert SimpleName: itr(2422) into VariableDeclarationFragment(2423) at 0", "Insert SimpleType: Cut(2426) into ParameterizedType: Cut<C>(2429) at 0", "Insert SimpleType: C(2428) into ParameterizedType: Cut<C>(2429) at 1", "Insert SimpleName: startingPoint(2430) into VariableDeclarationFragment(2443) at 0", "Insert ConditionalExpression(2442) into VariableDeclarationFragment(2443) at 1", "Insert SimpleName: inclusive(2446) into VariableDeclarationFragment(2456) at 0", "Insert InfixExpression: &&(2455) into VariableDeclarationFragment(2456) at 1", "Insert SimpleType: PeekingIterator(2460) into ParameterizedType: PeekingIterator<Range<C>>(2466) at 0", "Insert ParameterizedType: Range<C>(2465) into ParameterizedType: PeekingIterator<Range<C>>(2466) at 1", "Update SimpleName: candidatePositiveRanges(1394) to positiveItr", "Insert MethodInvocation(2481) into VariableDeclarationFragment(2482) at 1", "Insert SimpleType: Cut(2485) into ParameterizedType: Cut<C>(2488) at 0", "Insert SimpleType: C(2487) into ParameterizedType: Cut<C>(2488) at 1", "Insert SimpleName: cut(2489) into VariableDeclarationFragment(2490) at 0", "Update SimpleName: candidatePositiveRanges(1408) to positiveItr", "Insert ExpressionStatement(2505) into Block(2506) at 0", "Update InfixExpression: <=(1427) to ||", "Move InfixExpression: <=(1427) into IfStatement(2540) at 0", "Insert Block(2527) into IfStatement(2540) at 1", "Insert Block(2539) into IfStatement(2540) at 2", "Insert SimpleType: Cut(2544) into ParameterizedType: Cut<C>(2547) at 0", "Insert SimpleType: C(2546) into ParameterizedType: Cut<C>(2547) at 1", "Update SimpleName: resultUpperBound(1442) to firstComplementRangeUpperBound", "Insert ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>>(2575) into ClassInstanceCreation(2708) at 0", "Insert AnonymousClassDeclaration(2707) into ClassInstanceCreation(2708) at 1", "Insert SimpleName: Iterators(2717) into MethodInvocation(2721) at 0", "Insert SimpleName: size(2718) into MethodInvocation(2721) at 1", "Insert MethodInvocation(2720) into MethodInvocation(2721) at 2", "Insert SimpleName: key(2740) into InstanceofExpression(2743) at 0", "Insert SimpleType: Cut(2742) into InstanceofExpression(2743) at 1", "Insert TryStatement(2809) into Block(2810) at 0", "Insert MethodInvocation(2827) into InfixExpression: !=(2829) at 0", "Insert NullLiteral(2828) into InfixExpression: !=(2829) at 1", "Insert ParameterizedType: ComplementRangesByLowerBound<C>(2847) into ClassInstanceCreation(2852) at 0", "Insert FieldAccess(2851) into ClassInstanceCreation(2852) at 1", "Insert SimpleName: Range(2861) into SimpleType: Range(2862) at 0", "Insert SimpleName: C(2863) into SimpleType: C(2864) at 0", "Insert ThisExpression(2869) into MethodInvocation(2872) at 0", "Insert SimpleName: remove(2870) into MethodInvocation(2872) at 1", "Insert SimpleName: rangeToAdd(2871) into MethodInvocation(2872) at 2", "Insert SimpleName: Range(2881) into SimpleType: Range(2882) at 0", "Insert SimpleName: C(2883) into SimpleType: C(2884) at 0", "Insert ThisExpression(2889) into MethodInvocation(2892) at 0", "Insert SimpleName: add(2890) into MethodInvocation(2892) at 1", "Insert SimpleName: rangeToRemove(2891) into MethodInvocation(2892) at 2", "Insert MethodInvocation(2909) into PrefixExpression: !(2910) at 0", "Update SimpleName: rangesByLowerCut(831) to rangesByLowerBound", "Update SimpleName: rangesByLowerCut(837) to rangesByLowerBound", "Insert SimpleName: Cut(956) into SimpleType: Cut(957) at 0", "Move SimpleName: C(914) into SimpleType: C(959) at 0", "Insert SimpleName: Range(961) into SimpleType: Range(962) at 0", "Insert SimpleName: C(963) into SimpleType: C(964) at 0", "Insert ThisExpression(969) into FieldAccess(971) at 0", "Insert SimpleName: rangesByLowerBound(970) into FieldAccess(971) at 1", "Insert ThisExpression(975) into FieldAccess(977) at 0", "Insert SimpleName: upperBoundWindow(976) into FieldAccess(977) at 1", "Insert SimpleName: Cut(989) into SimpleType: Cut(990) at 0", "Insert SimpleName: C(991) into SimpleType: C(992) at 0", "Insert SimpleName: Range(994) into SimpleType: Range(995) at 0", "Insert SimpleName: C(996) into SimpleType: C(997) at 0", "Insert SimpleName: Cut(1004) into SimpleType: Cut(1005) at 0", "Insert SimpleName: C(1006) into SimpleType: C(1007) at 0", "Insert ThisExpression(1012) into FieldAccess(1014) at 0", "Insert SimpleName: rangesByLowerBound(1013) into FieldAccess(1014) at 1", "Insert ThisExpression(1018) into FieldAccess(1020) at 0", "Insert SimpleName: upperBoundWindow(1019) into FieldAccess(1020) at 1", "Insert SimpleName: Cut(1043) into SimpleType: Cut(1044) at 0", "Insert SimpleName: C(1045) into SimpleType: C(1046) at 0", "Insert ClassInstanceCreation(1065) into ReturnStatement(1066) at 0", "Insert MethodInvocation(1070) into ReturnStatement(1071) at 0", "Update SimpleName: Objects(1022) to Range", "Move SimpleName: Objects(1022) into MethodInvocation(1126) at 0", "Insert SimpleName: range(1115) into MethodInvocation(1126) at 1", "Update SimpleName: firstNonNull(1023) to fromKey", "Move SimpleName: firstNonNull(1023) into MethodInvocation(1126) at 2", "Move MethodInvocation(1027) into MethodInvocation(1126) at 3", "Insert SimpleName: toKey(1121) into MethodInvocation(1126) at 4", "Insert MethodInvocation(1125) into MethodInvocation(1126) at 5", "Insert SimpleName: Range(1159) into MethodInvocation(1166) at 0", "Insert SimpleName: upTo(1160) into MethodInvocation(1166) at 1", "Insert SimpleName: toKey(1161) into MethodInvocation(1166) at 2", "Insert MethodInvocation(1165) into MethodInvocation(1166) at 3", "Insert SimpleName: Range(1199) into MethodInvocation(1206) at 0", "Insert SimpleName: downTo(1200) into MethodInvocation(1206) at 1", "Insert SimpleName: fromKey(1201) into MethodInvocation(1206) at 2", "Insert MethodInvocation(1205) into MethodInvocation(1206) at 3", "Insert SimpleType: Cut(1226) into ParameterizedType: Cut<C>(1229) at 0", "Insert SimpleType: C(1228) into ParameterizedType: Cut<C>(1229) at 1", "Insert SimpleName: get(1246) into MethodInvocation(1248) at 0", "Insert SimpleName: key(1247) into MethodInvocation(1248) at 1", "Insert SimpleName: Cut(1270) into SimpleType: Cut(1271) at 0", "Insert Block(1338) into TryStatement(1347) at 0", "Insert CatchClause(1346) into TryStatement(1347) at 1", "Insert SimpleName: Cut(1360) into SimpleType: Cut(1361) at 0", "Insert SimpleName: C(1362) into SimpleType: C(1363) at 0", "Insert SimpleName: Range(1365) into SimpleType: Range(1366) at 0", "Insert SimpleName: C(1367) into SimpleType: C(1368) at 0", "Insert SimpleName: upperBoundWindow(1385) into MethodInvocation(1387) at 0", "Insert SimpleName: hasLowerBound(1386) into MethodInvocation(1387) at 1", "Insert Assignment: =(1395) into ExpressionStatement(1396) at 0", "Insert InfixExpression: ==(1422) into IfStatement(1471) at 0", "Insert Block(1431) into IfStatement(1471) at 1", "Insert IfStatement(1470) into IfStatement(1471) at 2", "Insert SimpleType: AbstractIterator(1475) into ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>>(1489) at 0", "Insert ParameterizedType: Entry<Cut<C>,Range<C>>(1488) into ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>>(1489) at 1", "Insert MethodDeclaration(1544) into AnonymousClassDeclaration(1545) at 0", "Insert SimpleName: Cut(1556) into SimpleType: Cut(1557) at 0", "Insert SimpleName: C(1558) into SimpleType: C(1559) at 0", "Insert SimpleName: Range(1561) into SimpleType: Range(1562) at 0", "Insert SimpleName: C(1563) into SimpleType: C(1564) at 0", "Insert SimpleName: PeekingIterator(1570) into SimpleType: PeekingIterator(1571) at 0", "Insert Assignment: =(1601) into ExpressionStatement(1602) at 0", "Insert Assignment: =(1615) into ExpressionStatement(1616) at 0", "Insert SimpleName: backingItr(1619) into MethodInvocation(1621) at 0", "Insert SimpleName: hasNext(1620) into MethodInvocation(1621) at 1", "Insert QualifiedName: upperBoundWindow.upperBound(1622) into MethodInvocation(1629) at 0", "Insert SimpleName: isLessThan(1623) into MethodInvocation(1629) at 1", "Insert FieldAccess(1628) into MethodInvocation(1629) at 2", "Insert MethodInvocation(1633) into ExpressionStatement(1634) at 0", "Insert SimpleType: AbstractIterator(1638) into ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>>(1652) at 0", "Insert ParameterizedType: Entry<Cut<C>,Range<C>>(1651) into ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>>(1652) at 1", "Insert MethodDeclaration(1704) into AnonymousClassDeclaration(1705) at 0", "Insert MethodInvocation(1723) into ReturnStatement(1724) at 0", "Insert SimpleName: entryIterator(1729) into MethodInvocation(1730) at 0", "Insert SimpleName: upperBoundWindow(1740) into MethodInvocation(1745) at 0", "Insert SimpleName: equals(1741) into MethodInvocation(1745) at 1", "Insert MethodInvocation(1744) into MethodInvocation(1745) at 2", "Update SimpleName: hasLowerBound(1211) to rangesByLowerBound", "Move SimpleName: hasLowerBound(1211) into MethodInvocation(1748) at 0", "Insert SimpleName: isEmpty(1747) into MethodInvocation(1748) at 1", "Insert MethodInvocation(1752) into PrefixExpression: !(1753) at 0", "Insert SimpleName: Cut(1839) into SimpleType: Cut(1840) at 0", "Insert SimpleName: C(1841) into SimpleType: C(1842) at 0", "Insert SimpleName: Range(1844) into SimpleType: Range(1845) at 0", "Insert SimpleName: C(1846) into SimpleType: C(1847) at 0", "Insert SimpleType: Cut(1855) into ParameterizedType: Cut<C>(1858) at 0", "Insert SimpleType: C(1857) into ParameterizedType: Cut<C>(1858) at 1", "Insert SimpleName: Cut(1868) into SimpleType: Cut(1869) at 0", "Insert SimpleName: C(1870) into SimpleType: C(1871) at 0", "Insert SimpleName: Range(1873) into SimpleType: Range(1874) at 0", "Insert SimpleName: C(1875) into SimpleType: C(1876) at 0", "Insert SimpleName: Cut(1883) into SimpleType: Cut(1884) at 0", "Insert SimpleName: C(1885) into SimpleType: C(1886) at 0", "Insert ThisExpression(1891) into FieldAccess(1893) at 0", "Insert SimpleName: positiveRangesByLowerBound(1892) into FieldAccess(1893) at 1", "Insert ThisExpression(1897) into FieldAccess(1899) at 0", "Insert SimpleName: positiveRangesByUpperBound(1898) into FieldAccess(1899) at 1", "Insert ParameterizedType: RangesByUpperBound<C>(1904) into ClassInstanceCreation(1906) at 0", "Insert SimpleName: positiveRangesByLowerBound(1905) into ClassInstanceCreation(1906) at 1", "Insert ThisExpression(1909) into FieldAccess(1911) at 0", "Insert SimpleName: complementLowerBoundWindow(1910) into FieldAccess(1911) at 1", "Insert SimpleName: Cut(1934) into SimpleType: Cut(1935) at 0", "Insert SimpleName: C(1936) into SimpleType: C(1937) at 0", "Update SimpleName: lastEntry(1270) to complementLowerBoundWindow", "Move SimpleName: lastEntry(1270) into MethodInvocation(1945) at 0", "Update SimpleName: getValue(1271) to isConnected", "Move SimpleName: getValue(1271) into MethodInvocation(1945) at 1", "Update SimpleName: hasUpperBound(1273) to subWindow", "Move SimpleName: hasUpperBound(1273) into MethodInvocation(1945) at 2", "Insert MethodInvocation(1949) into ReturnStatement(1950) at 0", "Insert ClassInstanceCreation(1966) into ReturnStatement(1967) at 0", "Move SimpleName: Range(1292) into MethodInvocation(2022) at 0", "Update SimpleName: create(1293) to range", "Move SimpleName: create(1293) into MethodInvocation(2022) at 1", "Insert SimpleName: fromKey(2012) into MethodInvocation(2022) at 2", "Insert MethodInvocation(2016) into MethodInvocation(2022) at 3", "Insert SimpleName: toKey(2017) into MethodInvocation(2022) at 4", "Insert MethodInvocation(2021) into MethodInvocation(2022) at 5", "Update SimpleName: positive(1305) to Range", "Move SimpleName: positive(1305) into MethodInvocation(2062) at 0", "Update SimpleName: equals(1307) to upTo", "Move SimpleName: equals(1307) into MethodInvocation(2062) at 1", "Insert SimpleName: toKey(2057) into MethodInvocation(2062) at 2", "Move MethodInvocation(1312) into MethodInvocation(2062) at 3", "Insert SimpleName: Range(2095) into MethodInvocation(2102) at 0", "Insert SimpleName: downTo(2096) into MethodInvocation(2102) at 1", "Insert SimpleName: fromKey(2097) into MethodInvocation(2102) at 2", "Insert MethodInvocation(2101) into MethodInvocation(2102) at 3", "Insert SimpleName: Cut(2112) into SimpleType: Cut(2113) at 0", "Insert SimpleName: C(2114) into SimpleType: C(2115) at 0", "Insert SimpleType: Cut(2122) into ParameterizedType: Cut<C>(2125) at 0", "Insert SimpleType: C(2124) into ParameterizedType: Cut<C>(2125) at 1", "Insert SimpleName: Cut(2137) into SimpleType: Cut(2138) at 0", "Insert SimpleName: C(2139) into SimpleType: C(2140) at 0", "Insert SimpleName: Collection(2150) into SimpleType: Collection(2151) at 0", "Insert SimpleType: Range(2153) into ParameterizedType: Range<C>(2156) at 0", "Insert SimpleType: C(2155) into ParameterizedType: Range<C>(2156) at 1", "Insert Assignment: =(2178) into ExpressionStatement(2179) at 0", "Insert Assignment: =(2185) into ExpressionStatement(2186) at 0", "Update SimpleName: AbstractSet(1059) to PeekingIterator", "Insert SimpleName: Iterators(2199) into MethodInvocation(2204) at 0", "Insert SimpleName: peekingIterator(2200) into MethodInvocation(2204) at 1", "Insert MethodInvocation(2203) into MethodInvocation(2204) at 2", "Insert SimpleName: Cut(2208) into SimpleType: Cut(2209) at 0", "Insert SimpleName: C(2210) into SimpleType: C(2211) at 0", "Insert SimpleName: complementLowerBoundWindow(2216) into MethodInvocation(2223) at 0", "Insert SimpleName: contains(2217) into MethodInvocation(2223) at 1", "Move MethodInvocation(1516) into MethodInvocation(2223) at 2", "Insert InfixExpression: ||(2239) into ParenthesizedExpression(2240) at 0", "Insert SimpleName: positiveItr(2249) into MethodInvocation(2251) at 0", "Insert SimpleName: hasNext(2250) into MethodInvocation(2251) at 1", "Insert ExpressionStatement(2259) into Block(2260) at 0", "Insert ReturnStatement(2264) into Block(2265) at 0", "Insert SimpleType: AbstractIterator(2269) into ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>>(2283) at 0", "Insert ParameterizedType: Entry<Cut<C>,Range<C>>(2282) into ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>>(2283) at 1", "Insert FieldDeclaration(2292) into AnonymousClassDeclaration(2390) at 0", "Insert MethodDeclaration(2389) into AnonymousClassDeclaration(2390) at 1", "Insert SimpleName: Cut(2401) into SimpleType: Cut(2402) at 0", "Insert SimpleName: C(2403) into SimpleType: C(2404) at 0", "Insert SimpleName: Range(2406) into SimpleType: Range(2407) at 0", "Insert SimpleName: C(2408) into SimpleType: C(2409) at 0", "Insert SimpleName: Cut(2425) into SimpleType: Cut(2426) at 0", "Insert SimpleName: C(2427) into SimpleType: C(2428) at 0", "Insert MethodInvocation(2433) into ConditionalExpression(2442) at 0", "Insert MethodInvocation(2436) into ConditionalExpression(2442) at 1", "Insert MethodInvocation(2441) into ConditionalExpression(2442) at 2", "Insert MethodInvocation(2449) into InfixExpression: &&(2455) at 0", "Insert InfixExpression: ==(2454) into InfixExpression: &&(2455) at 1", "Insert SimpleName: PeekingIterator(2459) into SimpleType: PeekingIterator(2460) at 0", "Insert SimpleType: Range(2462) into ParameterizedType: Range<C>(2465) at 0", "Insert SimpleType: C(2464) into ParameterizedType: Range<C>(2465) at 1", "Insert SimpleName: Iterators(2468) into MethodInvocation(2481) at 0", "Insert SimpleName: peekingIterator(2469) into MethodInvocation(2481) at 1", "Insert MethodInvocation(2480) into MethodInvocation(2481) at 2", "Insert SimpleName: Cut(2484) into SimpleType: Cut(2485) at 0", "Insert SimpleName: C(2486) into SimpleType: C(2487) at 0", "Insert Assignment: =(2504) into ExpressionStatement(2505) at 0", "Insert PrefixExpression: !(2515) into InfixExpression: ||(2522) at 0", "Insert ReturnStatement(2526) into Block(2527) at 0", "Insert ExpressionStatement(2538) into Block(2539) at 0", "Insert SimpleName: Cut(2543) into SimpleType: Cut(2544) at 0", "Insert SimpleName: C(2545) into SimpleType: C(2546) at 0", "Update SimpleName: rangesByLowerCut(1445) to cut", "Move SimpleName: rangesByLowerCut(1445) into MethodInvocation(2557) at 2", "Move MethodInvocation(1032) into MethodInvocation(2557) at 3", "Insert SimpleType: AbstractIterator(2561) into ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>>(2575) at 0", "Insert ParameterizedType: Entry<Cut<C>,Range<C>>(2574) into ParameterizedType: AbstractIterator<Entry<Cut<C>,Range<C>>>(2575) at 1", "Insert FieldDeclaration(2584) into AnonymousClassDeclaration(2707) at 0", "Insert MethodDeclaration(2706) into AnonymousClassDeclaration(2707) at 1", "Insert SimpleName: entryIterator(2719) into MethodInvocation(2720) at 0", "Insert SimpleName: Cut(2741) into SimpleType: Cut(2742) at 0", "Insert Block(2800) into TryStatement(2809) at 0", "Insert CatchClause(2808) into TryStatement(2809) at 1", "Insert SimpleName: get(2825) into MethodInvocation(2827) at 0", "Insert SimpleName: key(2826) into MethodInvocation(2827) at 1", "Insert SimpleType: ComplementRangesByLowerBound(2844) into ParameterizedType: ComplementRangesByLowerBound<C>(2847) at 0", "Insert SimpleType: C(2846) into ParameterizedType: ComplementRangesByLowerBound<C>(2847) at 1", "Move ThisExpression(1080) into FieldAccess(2851) at 0", "Insert SimpleName: rangesByLowerBound(2850) into FieldAccess(2851) at 1", "Insert SimpleName: TreeRangeSet(2868) into ThisExpression(2869) at 0", "Insert SimpleName: TreeRangeSet(2888) into ThisExpression(2889) at 0", "Insert ThisExpression(2906) into MethodInvocation(2909) at 0", "Insert SimpleName: contains(2907) into MethodInvocation(2909) at 1", "Insert SimpleName: value(2908) into MethodInvocation(2909) at 2", "Insert ParameterizedType: RangesByUpperBound<C>(1059) into ClassInstanceCreation(1065) at 0", "Insert SimpleName: rangesByLowerBound(1060) into ClassInstanceCreation(1065) at 1", "Insert MethodInvocation(1064) into ClassInstanceCreation(1065) at 2", "Insert SimpleName: ImmutableSortedMap(1068) into MethodInvocation(1070) at 0", "Insert SimpleName: of(1069) into MethodInvocation(1070) at 1", "Update SimpleName: rangesByLowerCut(1024) to BoundType", "Update SimpleName: higherKey(1025) to forBoolean", "Update SimpleName: valueCut(1026) to fromInclusive", "Insert SimpleName: BoundType(1122) into MethodInvocation(1125) at 0", "Insert SimpleName: forBoolean(1123) into MethodInvocation(1125) at 1", "Insert SimpleName: toInclusive(1124) into MethodInvocation(1125) at 2", "Insert SimpleName: BoundType(1162) into MethodInvocation(1165) at 0", "Insert SimpleName: forBoolean(1163) into MethodInvocation(1165) at 1", "Insert SimpleName: inclusive(1164) into MethodInvocation(1165) at 2", "Insert SimpleName: BoundType(1202) into MethodInvocation(1205) at 0", "Insert SimpleName: forBoolean(1203) into MethodInvocation(1205) at 1", "Insert SimpleName: inclusive(1204) into MethodInvocation(1205) at 2", "Insert SimpleName: Cut(1225) into SimpleType: Cut(1226) at 0", "Insert SimpleName: C(1227) into SimpleType: C(1228) at 0", "Insert VariableDeclarationStatement(1290) into Block(1338) at 0", "Insert IfStatement(1299) into Block(1338) at 1", "Move VariableDeclarationStatement(1269) into Block(1338) at 2", "Insert IfStatement(1337) into Block(1338) at 3", "Insert SingleVariableDeclaration(1342) into CatchClause(1346) at 0", "Move Block(1486) into CatchClause(1346) at 1", "Insert SimpleName: backingItr(1389) into Assignment: =(1395) at 0", "Insert MethodInvocation(1394) into Assignment: =(1395) at 1", "Update SimpleName: firstEntry(1194) to lowerEntry", "Update SimpleName: lastEntry(1123) to lowerEntry", "Move SimpleName: lastEntry(1123) into InfixExpression: ==(1422) at 0", "Move NullLiteral(1124) into InfixExpression: ==(1422) at 1", "Insert ExpressionStatement(1430) into Block(1431) at 0", "Insert MethodInvocation(1439) into IfStatement(1470) at 0", "Insert Block(1454) into IfStatement(1470) at 1", "Insert Block(1469) into IfStatement(1470) at 2", "Insert SimpleName: AbstractIterator(1474) into SimpleType: AbstractIterator(1475) at 0", "Insert SimpleType: Entry(1477) into ParameterizedType: Entry<Cut<C>,Range<C>>(1488) at 0", "Insert ParameterizedType: Cut<C>(1482) into ParameterizedType: Entry<Cut<C>,Range<C>>(1488) at 1", "Insert ParameterizedType: Range<C>(1487) into ParameterizedType: Entry<Cut<C>,Range<C>>(1488) at 2", "Move MarkerAnnotation(1048) into MethodDeclaration(1544) at 0", "Insert Modifier: protected(1492) into MethodDeclaration(1544) at 1", "Move ParameterizedType: Entry<Cut<C>,Range<C>>(964) into MethodDeclaration(1544) at 2", "Insert SimpleName: computeNext(1506) into MethodDeclaration(1544) at 3", "Insert Block(1543) into MethodDeclaration(1544) at 4", "Insert SimpleName: backingItr(1584) into Assignment: =(1601) at 0", "Insert MethodInvocation(1600) into Assignment: =(1601) at 1", "Insert SimpleName: backingItr(1604) into Assignment: =(1615) at 0", "Insert MethodInvocation(1614) into Assignment: =(1615) at 1", "Insert MethodInvocation(1626) into FieldAccess(1628) at 0", "Insert SimpleName: upperBound(1627) into FieldAccess(1628) at 1", "Insert SimpleName: backingItr(1631) into MethodInvocation(1633) at 0", "Insert SimpleName: next(1632) into MethodInvocation(1633) at 1", "Insert SimpleName: AbstractIterator(1637) into SimpleType: AbstractIterator(1638) at 0", "Insert SimpleType: Entry(1640) into ParameterizedType: Entry<Cut<C>,Range<C>>(1651) at 0", "Insert ParameterizedType: Cut<C>(1645) into ParameterizedType: Entry<Cut<C>,Range<C>>(1651) at 1", "Insert ParameterizedType: Range<C>(1650) into ParameterizedType: Entry<Cut<C>,Range<C>>(1651) at 2", "Move MarkerAnnotation(928) into MethodDeclaration(1704) at 0", "Update Modifier: public(1166) to protected", "Move Modifier: public(1166) into MethodDeclaration(1704) at 1", "Insert ParameterizedType: Entry<Cut<C>,Range<C>>(1668) into MethodDeclaration(1704) at 2", "Insert SimpleName: computeNext(1669) into MethodDeclaration(1704) at 3", "Insert Block(1703) into MethodDeclaration(1704) at 4", "Insert SimpleName: rangesByLowerBound(1721) into MethodInvocation(1723) at 0", "Insert SimpleName: size(1722) into MethodInvocation(1723) at 1", "Insert SimpleName: Range(1742) into MethodInvocation(1744) at 0", "Insert SimpleName: all(1743) into MethodInvocation(1744) at 1", "Insert MethodInvocation(1750) into MethodInvocation(1752) at 0", "Insert SimpleName: hasNext(1751) into MethodInvocation(1752) at 1", "Insert SimpleName: Cut(1854) into SimpleType: Cut(1855) at 0", "Insert SimpleName: C(1856) into SimpleType: C(1857) at 0", "Insert SimpleType: RangesByUpperBound(1901) into ParameterizedType: RangesByUpperBound<C>(1904) at 0", "Insert SimpleType: C(1903) into ParameterizedType: RangesByUpperBound<C>(1904) at 1", "Insert SimpleName: ImmutableSortedMap(1947) into MethodInvocation(1949) at 0", "Insert SimpleName: of(1948) into MethodInvocation(1949) at 1", "Update SimpleName: spanUpperBound(1282) to subWindow", "Insert MethodInvocation(1956) into Assignment: =(1957) at 1", "Insert ParameterizedType: ComplementRangesByLowerBound<C>(1963) into ClassInstanceCreation(1966) at 0", "Insert SimpleName: positiveRangesByLowerBound(1964) into ClassInstanceCreation(1966) at 1", "Insert SimpleName: subWindow(1965) into ClassInstanceCreation(1966) at 2", "Update SimpleName: spanLowerBound(1294) to BoundType", "Move SimpleName: spanLowerBound(1294) into MethodInvocation(2016) at 0", "Insert SimpleName: forBoolean(2014) into MethodInvocation(2016) at 1", "Insert SimpleName: fromInclusive(2015) into MethodInvocation(2016) at 2", "Update SimpleName: spanUpperBound(1295) to BoundType", "Move SimpleName: spanUpperBound(1295) into MethodInvocation(2021) at 0", "Insert SimpleName: forBoolean(2019) into MethodInvocation(2021) at 1", "Insert SimpleName: toInclusive(2020) into MethodInvocation(2021) at 2", "Update SimpleName: ImmutableRangeSet(1308) to BoundType", "Update SimpleName: all(1311) to forBoolean", "Insert SimpleName: inclusive(2060) into MethodInvocation(2061) at 2", "Insert SimpleName: BoundType(2098) into MethodInvocation(2101) at 0", "Insert SimpleName: forBoolean(2099) into MethodInvocation(2101) at 1", "Update SimpleName: positive(1326) to inclusive", "Move SimpleName: positive(1326) into MethodInvocation(2101) at 2", "Insert SimpleName: Cut(2121) into SimpleType: Cut(2122) at 0", "Insert SimpleName: C(2123) into SimpleType: C(2124) at 0", "Insert SimpleName: Range(2152) into SimpleType: Range(2153) at 0", "Insert SimpleName: C(2154) into SimpleType: C(2155) at 0", "Insert SimpleName: positiveRanges(2164) into Assignment: =(2178) at 0", "Insert MethodInvocation(2177) into Assignment: =(2178) at 1", "Insert SimpleName: positiveRanges(2181) into Assignment: =(2185) at 0", "Insert MethodInvocation(2184) into Assignment: =(2185) at 1", "Insert SimpleName: positiveRanges(2201) into MethodInvocation(2203) at 0", "Insert SimpleName: iterator(2202) into MethodInvocation(2203) at 1", "Insert PrefixExpression: !(2227) into InfixExpression: ||(2239) at 0", "Insert InfixExpression: !=(2238) into InfixExpression: ||(2239) at 1", "Update SimpleName: spanLowerBound(1213) to firstComplementRangeLowerBound", "Insert Assignment: =(2258) into ExpressionStatement(2259) at 0", "Insert MethodInvocation(2263) into ReturnStatement(2264) at 0", "Insert SimpleName: AbstractIterator(2268) into SimpleType: AbstractIterator(2269) at 0", "Insert SimpleType: Entry(2271) into ParameterizedType: Entry<Cut<C>,Range<C>>(2282) at 0", "Insert ParameterizedType: Cut<C>(2276) into ParameterizedType: Entry<Cut<C>,Range<C>>(2282) at 1", "Insert ParameterizedType: Range<C>(2281) into ParameterizedType: Entry<Cut<C>,Range<C>>(2282) at 2", "Insert ParameterizedType: Cut<C>(2288) into FieldDeclaration(2292) at 0", "Insert VariableDeclarationFragment(2291) into FieldDeclaration(2292) at 1", "Insert MarkerAnnotation(2294) into MethodDeclaration(2389) at 0", "Update Modifier: public(1353) to protected", "Move Modifier: public(1353) into MethodDeclaration(2389) at 1", "Insert ParameterizedType: Entry<Cut<C>,Range<C>>(2308) into MethodDeclaration(2389) at 2", "Insert SimpleName: computeNext(2309) into MethodDeclaration(2389) at 3", "Insert Block(2388) into MethodDeclaration(2389) at 4", "Insert SimpleName: complementLowerBoundWindow(2431) into MethodInvocation(2433) at 0", "Insert SimpleName: hasUpperBound(2432) into MethodInvocation(2433) at 1", "Insert SimpleName: complementLowerBoundWindow(2434) into MethodInvocation(2436) at 0", "Insert SimpleName: upperEndpoint(2435) into MethodInvocation(2436) at 1", "Insert SimpleName: Cut(2437) into MethodInvocation(2441) at 0", "Insert SimpleType: C(2439) into MethodInvocation(2441) at 1", "Insert SimpleName: aboveAll(2440) into MethodInvocation(2441) at 2", "Insert SimpleName: complementLowerBoundWindow(2447) into MethodInvocation(2449) at 0", "Insert SimpleName: hasUpperBound(2448) into MethodInvocation(2449) at 1", "Insert MethodInvocation(2452) into InfixExpression: ==(2454) at 0", "Insert QualifiedName: BoundType.CLOSED(2453) into InfixExpression: ==(2454) at 1", "Insert SimpleName: Range(2461) into SimpleType: Range(2462) at 0", "Insert SimpleName: C(2463) into SimpleType: C(2464) at 0", "Move MethodInvocation(1403) into MethodInvocation(2480) at 0", "Move SimpleName: iterator(1404) into MethodInvocation(2480) at 1", "Insert SimpleName: cut(2495) into Assignment: =(2504) at 0", "Insert MethodInvocation(2503) into Assignment: =(2504) at 1", "Move MethodInvocation(1495) into PrefixExpression: !(2515) at 0", "Update SimpleName: compareTo(1423) to positiveRangesByLowerBound", "Update SimpleName: cut(1424) to containsKey", "Move MethodInvocation(1097) into MethodInvocation(2521) at 3", "Insert MethodInvocation(2525) into ReturnStatement(2526) at 0", "Insert Assignment: =(2537) into ExpressionStatement(2538) at 0", "Insert SimpleName: AbstractIterator(2560) into SimpleType: AbstractIterator(2561) at 0", "Insert SimpleType: Entry(2563) into ParameterizedType: Entry<Cut<C>,Range<C>>(2574) at 0", "Insert ParameterizedType: Cut<C>(2568) into ParameterizedType: Entry<Cut<C>,Range<C>>(2574) at 1", "Insert ParameterizedType: Range<C>(2573) into ParameterizedType: Entry<Cut<C>,Range<C>>(2574) at 2", "Insert ParameterizedType: Cut<C>(2580) into FieldDeclaration(2584) at 0", "Insert VariableDeclarationFragment(2583) into FieldDeclaration(2584) at 1", "Insert MarkerAnnotation(2586) into MethodDeclaration(2706) at 0", "Insert Modifier: protected(2587) into MethodDeclaration(2706) at 1", "Insert ParameterizedType: Entry<Cut<C>,Range<C>>(2600) into MethodDeclaration(2706) at 2", "Insert SimpleName: computeNext(2601) into MethodDeclaration(2706) at 3", "Insert Block(2705) into MethodDeclaration(2706) at 4", "Move VariableDeclarationStatement(1553) into Block(2800) at 0", "Move VariableDeclarationStatement(1120) into Block(2800) at 1", "Insert IfStatement(2799) into Block(2800) at 2", "Insert SingleVariableDeclaration(2804) into CatchClause(2808) at 0", "Insert Block(2807) into CatchClause(2808) at 1", "Insert SimpleName: ComplementRangesByLowerBound(2843) into SimpleType: ComplementRangesByLowerBound(2844) at 0", "Insert SimpleName: C(2845) into SimpleType: C(2846) at 0", "Insert SimpleName: TreeRangeSet(2905) into ThisExpression(2906) at 0", "Insert SimpleType: RangesByUpperBound(1056) into ParameterizedType: RangesByUpperBound<C>(1059) at 0", "Move SimpleType: C(1310) into ParameterizedType: RangesByUpperBound<C>(1059) at 1", "Insert SimpleName: window(1061) into MethodInvocation(1064) at 0", "Insert SimpleName: intersection(1062) into MethodInvocation(1064) at 1", "Insert SimpleName: upperBoundWindow(1063) into MethodInvocation(1064) at 2", "Insert SingleMemberAnnotation(1275) into VariableDeclarationStatement(1290) at 0", "Insert ParameterizedType: Cut<C>(1280) into VariableDeclarationStatement(1290) at 1", "Insert VariableDeclarationFragment(1289) into VariableDeclarationStatement(1290) at 2", "Insert PrefixExpression: !(1295) into IfStatement(1299) at 0", "Move Block(1007) into IfStatement(1299) at 1", "Insert InfixExpression: &&(1331) into IfStatement(1337) at 0", "Insert Block(1336) into IfStatement(1337) at 1", "Insert SimpleType: ClassCastException(1340) into SingleVariableDeclaration(1342) at 0", "Insert SimpleName: e(1341) into SingleVariableDeclaration(1342) at 1", "Insert MethodInvocation(1392) into MethodInvocation(1394) at 0", "Insert SimpleName: iterator(1393) into MethodInvocation(1394) at 1", "Update SimpleName: rangesByLowerCut(1195) to rangesByLowerBound", "Update SimpleName: firstEntry(1196) to lowerEntry", "Insert MethodInvocation(1416) into MethodInvocation(1417) at 2", "Insert Assignment: =(1429) into ExpressionStatement(1430) at 0", "Insert QualifiedName: upperBoundWindow.lowerBound(1432) into MethodInvocation(1439) at 0", "Insert SimpleName: isLessThan(1433) into MethodInvocation(1439) at 1", "Insert FieldAccess(1438) into MethodInvocation(1439) at 2", "Insert ExpressionStatement(1453) into Block(1454) at 0", "Insert ExpressionStatement(1468) into Block(1469) at 0", "Insert SimpleName: Entry(1476) into SimpleType: Entry(1477) at 0", "Insert SimpleType: Cut(1479) into ParameterizedType: Cut<C>(1482) at 0", "Insert SimpleType: C(1481) into ParameterizedType: Cut<C>(1482) at 1", "Insert SimpleType: Range(1484) into ParameterizedType: Range<C>(1487) at 0", "Insert SimpleType: C(1486) into ParameterizedType: Range<C>(1487) at 1", "Insert IfStatement(1515) into Block(1543) at 0", "Move VariableDeclarationStatement(1142) into Block(1543) at 1", "Insert IfStatement(1542) into Block(1543) at 2", "Insert SimpleName: Iterators(1585) into MethodInvocation(1600) at 0", "Insert SimpleName: peekingIterator(1586) into MethodInvocation(1600) at 1", "Insert MethodInvocation(1599) into MethodInvocation(1600) at 2", "Insert SimpleName: Iterators(1605) into MethodInvocation(1614) at 0", "Insert SimpleName: peekingIterator(1606) into MethodInvocation(1614) at 1", "Insert MethodInvocation(1613) into MethodInvocation(1614) at 2", "Insert SimpleName: backingItr(1624) into MethodInvocation(1626) at 0", "Insert SimpleName: peek(1625) into MethodInvocation(1626) at 1", "Insert SimpleName: Entry(1639) into SimpleType: Entry(1640) at 0", "Insert SimpleType: Cut(1642) into ParameterizedType: Cut<C>(1645) at 0", "Insert SimpleType: C(1644) into ParameterizedType: Cut<C>(1645) at 1", "Insert SimpleType: Range(1647) into ParameterizedType: Range<C>(1650) at 0", "Insert SimpleType: C(1649) into ParameterizedType: Range<C>(1650) at 1", "Insert SimpleType: Entry(1657) into ParameterizedType: Entry<Cut<C>,Range<C>>(1668) at 0", "Insert ParameterizedType: Cut<C>(1662) into ParameterizedType: Entry<Cut<C>,Range<C>>(1668) at 1", "Insert ParameterizedType: Range<C>(1667) into ParameterizedType: Entry<Cut<C>,Range<C>>(1668) at 2", "Insert IfStatement(1678) into Block(1703) at 0", "Move VariableDeclarationStatement(1180) into Block(1703) at 1", "Insert ReturnStatement(1702) into Block(1703) at 2", "Insert SimpleName: entryIterator(1749) into MethodInvocation(1750) at 0", "Update SimpleName: NoSuchElementException(1234) to RangesByUpperBound", "Move SimpleName: NoSuchElementException(1234) into SimpleType: RangesByUpperBound(1901) at 0", "Insert SimpleName: C(1902) into SimpleType: C(1903) at 0", "Update SimpleName: lastEntry(1283) to subWindow", "Move SimpleName: lastEntry(1283) into MethodInvocation(1956) at 0", "Update SimpleName: getValue(1284) to intersection", "Move SimpleName: getValue(1284) into MethodInvocation(1956) at 1", "Insert SimpleName: complementLowerBoundWindow(1955) into MethodInvocation(1956) at 2", "Insert SimpleType: ComplementRangesByLowerBound(1960) into ParameterizedType: ComplementRangesByLowerBound<C>(1963) at 0", "Insert SimpleType: C(1962) into ParameterizedType: ComplementRangesByLowerBound<C>(1963) at 1", "Insert MethodInvocation(2175) into MethodInvocation(2177) at 0", "Insert SimpleName: values(2176) into MethodInvocation(2177) at 1", "Insert SimpleName: positiveRangesByUpperBound(2182) into MethodInvocation(2184) at 0", "Insert SimpleName: values(2183) into MethodInvocation(2184) at 1", "Insert MethodInvocation(2226) into PrefixExpression: !(2227) at 0", "Insert FieldAccess(2232) into InfixExpression: !=(2238) at 0", "Insert MethodInvocation(2237) into InfixExpression: !=(2238) at 1", "Insert SimpleName: firstComplementRangeLowerBound(2252) into Assignment: =(2258) at 0", "Insert FieldAccess(2257) into Assignment: =(2258) at 1", "Insert SimpleName: Iterators(2261) into MethodInvocation(2263) at 0", "Insert SimpleName: emptyIterator(2262) into MethodInvocation(2263) at 1", "Insert SimpleName: Entry(2270) into SimpleType: Entry(2271) at 0", "Insert SimpleType: Cut(2273) into ParameterizedType: Cut<C>(2276) at 0", "Insert SimpleType: C(2275) into ParameterizedType: Cut<C>(2276) at 1", "Insert SimpleType: Range(2278) into ParameterizedType: Range<C>(2281) at 0", "Insert SimpleType: C(2280) into ParameterizedType: Range<C>(2281) at 1", "Insert SimpleType: Cut(2285) into ParameterizedType: Cut<C>(2288) at 0", "Insert SimpleType: C(2287) into ParameterizedType: Cut<C>(2288) at 1", "Insert SimpleName: nextComplementRangeLowerBound(2289) into VariableDeclarationFragment(2291) at 0", "Insert SimpleName: firstComplementRangeLowerBound(2290) into VariableDeclarationFragment(2291) at 1", "Insert SimpleName: Override(2293) into MarkerAnnotation(2294) at 0", "Insert SimpleType: Entry(2297) into ParameterizedType: Entry<Cut<C>,Range<C>>(2308) at 0", "Insert ParameterizedType: Cut<C>(2302) into ParameterizedType: Entry<Cut<C>,Range<C>>(2308) at 1", "Insert ParameterizedType: Range<C>(2307) into ParameterizedType: Entry<Cut<C>,Range<C>>(2308) at 2", "Insert IfStatement(2326) into Block(2388) at 0", "Insert VariableDeclarationStatement(2334) into Block(2388) at 1", "Insert IfStatement(2381) into Block(2388) at 2", "Insert ReturnStatement(2387) into Block(2388) at 3", "Insert SimpleName: C(2438) into SimpleType: C(2439) at 0", "Insert SimpleName: complementLowerBoundWindow(2450) into MethodInvocation(2452) at 0", "Insert SimpleName: upperBoundType(2451) into MethodInvocation(2452) at 1", "Update SimpleName: candidatePositiveRanges(1417) to positiveRangesByLowerBound", "Move SimpleName: candidatePositiveRanges(1417) into MethodInvocation(2503) at 0", "Update SimpleName: next(1418) to higherKey", "Move SimpleName: next(1418) into MethodInvocation(2503) at 1", "Insert FieldAccess(2502) into MethodInvocation(2503) at 2", "Update SimpleName: Range(1487) to complementLowerBoundWindow", "Update SimpleName: create(1488) to contains", "Insert SimpleName: Iterators(2523) into MethodInvocation(2525) at 0", "Insert SimpleName: emptyIterator(2524) into MethodInvocation(2525) at 1", "Insert SimpleName: cut(2528) into Assignment: =(2537) at 0", "Insert MethodInvocation(2536) into Assignment: =(2537) at 1", "Insert SimpleName: Entry(2562) into SimpleType: Entry(2563) at 0", "Insert SimpleType: Cut(2565) into ParameterizedType: Cut<C>(2568) at 0", "Insert SimpleType: C(2567) into ParameterizedType: Cut<C>(2568) at 1", "Insert SimpleType: Range(2570) into ParameterizedType: Range<C>(2573) at 0", "Insert SimpleType: C(2572) into ParameterizedType: Range<C>(2573) at 1", "Insert SimpleType: Cut(2577) into ParameterizedType: Cut<C>(2580) at 0", "Insert SimpleType: C(2579) into ParameterizedType: Cut<C>(2580) at 1", "Insert SimpleName: nextComplementRangeUpperBound(2581) into VariableDeclarationFragment(2583) at 0", "Insert SimpleName: firstComplementRangeUpperBound(2582) into VariableDeclarationFragment(2583) at 1", "Insert SimpleName: Override(2585) into MarkerAnnotation(2586) at 0", "Insert SimpleType: Entry(2589) into ParameterizedType: Entry<Cut<C>,Range<C>>(2600) at 0", "Insert ParameterizedType: Cut<C>(2594) into ParameterizedType: Entry<Cut<C>,Range<C>>(2600) at 1", "Insert ParameterizedType: Range<C>(2599) into ParameterizedType: Entry<Cut<C>,Range<C>>(2600) at 2", "Insert IfStatement(2701) into Block(2705) at 0", "Insert ReturnStatement(2704) into Block(2705) at 1", "Insert SingleMemberAnnotation(2746) into VariableDeclarationStatement(2761) at 0", "Insert ParameterizedType: Cut<C>(2751) into VariableDeclarationStatement(2761) at 1", "Insert InfixExpression: &&(2793) into IfStatement(2799) at 0", "Insert Block(2798) into IfStatement(2799) at 1", "Insert SimpleType: ClassCastException(2802) into SingleVariableDeclaration(2804) at 0", "Insert SimpleName: e(2803) into SingleVariableDeclaration(2804) at 1", "Insert ReturnStatement(2806) into Block(2807) at 0", "Insert SimpleName: RangesByUpperBound(1055) into SimpleType: RangesByUpperBound(1056) at 0", "Insert SimpleName: SuppressWarnings(1273) into SingleMemberAnnotation(1275) at 0", "Insert StringLiteral: \"unchecked\"(1274) into SingleMemberAnnotation(1275) at 1", "Insert SimpleType: Cut(1277) into ParameterizedType: Cut<C>(1280) at 0", "Insert SimpleType: C(1279) into ParameterizedType: Cut<C>(1280) at 1", "Insert SimpleName: cut(1281) into VariableDeclarationFragment(1289) at 0", "Insert CastExpression(1288) into VariableDeclarationFragment(1289) at 1", "Move MethodInvocation(1098) into PrefixExpression: !(1295) at 0", "Update SimpleName: lastEntry(1264) to candidate", "Insert InfixExpression: !=(1322) into InfixExpression: &&(1331) at 0", "Insert MethodInvocation(1330) into InfixExpression: &&(1331) at 1", "Insert ReturnStatement(1335) into Block(1336) at 0", "Insert SimpleName: ClassCastException(1339) into SimpleType: ClassCastException(1340) at 0", "Insert SimpleName: rangesByLowerBound(1390) into MethodInvocation(1392) at 0", "Insert SimpleName: values(1391) into MethodInvocation(1392) at 1", "Insert SimpleName: upperBoundWindow(1414) into MethodInvocation(1416) at 0", "Insert SimpleName: lowerEndpoint(1415) into MethodInvocation(1416) at 1", "Insert SimpleName: backingItr(1423) into Assignment: =(1429) at 0", "Insert MethodInvocation(1428) into Assignment: =(1429) at 1", "Insert MethodInvocation(1436) into FieldAccess(1438) at 0", "Insert SimpleName: upperBound(1437) into FieldAccess(1438) at 1", "Insert Assignment: =(1452) into ExpressionStatement(1453) at 0", "Insert Assignment: =(1467) into ExpressionStatement(1468) at 0", "Insert SimpleName: Cut(1478) into SimpleType: Cut(1479) at 0", "Insert SimpleName: C(1480) into SimpleType: C(1481) at 0", "Insert SimpleName: Range(1483) into SimpleType: Range(1484) at 0", "Insert SimpleName: C(1485) into SimpleType: C(1486) at 0", "Insert PrefixExpression: !(1510) into IfStatement(1515) at 0", "Insert Block(1514) into IfStatement(1515) at 1", "Move ParameterizedType: Range<C>(1547) into VariableDeclarationStatement(1526) at 0", "Insert MethodInvocation(1530) into IfStatement(1542) at 0", "Insert Block(1534) into IfStatement(1542) at 1", "Insert Block(1541) into IfStatement(1542) at 2", "Insert MethodInvocation(1597) into MethodInvocation(1599) at 0", "Insert SimpleName: iterator(1598) into MethodInvocation(1599) at 1", "Insert MethodInvocation(1611) into MethodInvocation(1613) at 0", "Insert SimpleName: iterator(1612) into MethodInvocation(1613) at 1", "Insert SimpleName: Cut(1641) into SimpleType: Cut(1642) at 0", "Insert SimpleName: C(1643) into SimpleType: C(1644) at 0", "Insert SimpleName: Range(1646) into SimpleType: Range(1647) at 0", "Insert SimpleName: C(1648) into SimpleType: C(1649) at 0", "Insert SimpleName: Entry(1656) into SimpleType: Entry(1657) at 0", "Insert SimpleType: Cut(1659) into ParameterizedType: Cut<C>(1662) at 0", "Insert SimpleType: C(1661) into ParameterizedType: Cut<C>(1662) at 1", "Insert SimpleType: Range(1664) into ParameterizedType: Range<C>(1667) at 0", "Insert SimpleType: C(1666) into ParameterizedType: Range<C>(1667) at 1", "Insert PrefixExpression: !(1673) into IfStatement(1678) at 0", "Insert Block(1677) into IfStatement(1678) at 1", "Move ParameterizedType: Range<C>(1415) into VariableDeclarationStatement(1689) at 0", "Insert ConditionalExpression(1701) into ReturnStatement(1702) at 0", "Insert SimpleName: ComplementRangesByLowerBound(1959) into SimpleType: ComplementRangesByLowerBound(1960) at 0", "Insert SimpleName: C(1961) into SimpleType: C(1962) at 0", "Insert SimpleName: positiveRangesByUpperBound(2165) into MethodInvocation(2175) at 0", "Insert SimpleName: tailMap(2166) into MethodInvocation(2175) at 1", "Move MethodInvocation(1344) into MethodInvocation(2175) at 2", "Insert InfixExpression: ==(2174) into MethodInvocation(2175) at 3", "Insert SimpleName: positiveItr(2224) into MethodInvocation(2226) at 0", "Insert SimpleName: hasNext(2225) into MethodInvocation(2226) at 1", "Insert MethodInvocation(2230) into FieldAccess(2232) at 0", "Insert SimpleName: lowerBound(2231) into FieldAccess(2232) at 1", "Insert SimpleName: Cut(2233) into MethodInvocation(2237) at 0", "Insert SimpleType: C(2235) into MethodInvocation(2237) at 1", "Insert SimpleName: belowAll(2236) into MethodInvocation(2237) at 2", "Insert MethodInvocation(2255) into FieldAccess(2257) at 0", "Insert SimpleName: upperBound(2256) into FieldAccess(2257) at 1", "Insert SimpleName: Cut(2272) into SimpleType: Cut(2273) at 0", "Insert SimpleName: C(2274) into SimpleType: C(2275) at 0", "Insert SimpleName: Range(2277) into SimpleType: Range(2278) at 0", "Insert SimpleName: C(2279) into SimpleType: C(2280) at 0", "Insert SimpleName: Cut(2284) into SimpleType: Cut(2285) at 0", "Insert SimpleName: C(2286) into SimpleType: C(2287) at 0", "Insert SimpleName: Entry(2296) into SimpleType: Entry(2297) at 0", "Insert SimpleType: Cut(2299) into ParameterizedType: Cut<C>(2302) at 0", "Insert SimpleType: C(2301) into ParameterizedType: Cut<C>(2302) at 1", "Move SimpleType: Range(1357) into ParameterizedType: Range<C>(2307) at 0", "Move SimpleType: C(1359) into ParameterizedType: Range<C>(2307) at 1", "Insert InfixExpression: ||(2321) into IfStatement(2326) at 0", "Insert Block(2325) into IfStatement(2326) at 1", "Move ParameterizedType: Range<C>(1040) into VariableDeclarationStatement(2334) at 0", "Insert VariableDeclarationFragment(2333) into VariableDeclarationStatement(2334) at 1", "Insert MethodInvocation(2337) into IfStatement(2381) at 0", "Insert Block(2361) into IfStatement(2381) at 1", "Insert Block(2380) into IfStatement(2381) at 2", "Insert MethodInvocation(2386) into ReturnStatement(2387) at 0", "Insert MethodInvocation(2500) into FieldAccess(2502) at 0", "Insert SimpleName: upperBound(2501) into FieldAccess(2502) at 1", "Insert SimpleName: positiveRangesByLowerBound(2529) into MethodInvocation(2536) at 0", "Insert SimpleName: higherKey(2530) into MethodInvocation(2536) at 1", "Insert MethodInvocation(2535) into MethodInvocation(2536) at 2", "Insert SimpleName: Cut(2564) into SimpleType: Cut(2565) at 0", "Insert SimpleName: C(2566) into SimpleType: C(2567) at 0", "Insert SimpleName: Range(2569) into SimpleType: Range(2570) at 0", "Insert SimpleName: C(2571) into SimpleType: C(2572) at 0", "Insert SimpleName: Cut(2576) into SimpleType: Cut(2577) at 0", "Insert SimpleName: C(2578) into SimpleType: C(2579) at 0", "Insert SimpleName: Entry(2588) into SimpleType: Entry(2589) at 0", "Insert SimpleType: Cut(2591) into ParameterizedType: Cut<C>(2594) at 0", "Insert SimpleType: C(2593) into ParameterizedType: Cut<C>(2594) at 1", "Insert SimpleType: Range(2596) into ParameterizedType: Range<C>(2599) at 0", "Insert SimpleType: C(2598) into ParameterizedType: Range<C>(2599) at 1", "Insert InfixExpression: ==(2608) into IfStatement(2701) at 0", "Insert Block(2612) into IfStatement(2701) at 1", "Insert IfStatement(2700) into IfStatement(2701) at 2", "Insert MethodInvocation(2703) into ReturnStatement(2704) at 0", "Insert SimpleName: SuppressWarnings(2744) into SingleMemberAnnotation(2746) at 0", "Insert StringLiteral: \"unchecked\"(2745) into SingleMemberAnnotation(2746) at 1", "Insert SimpleType: Cut(2748) into ParameterizedType: Cut<C>(2751) at 0", "Insert SimpleType: C(2750) into ParameterizedType: Cut<C>(2751) at 1", "Update SimpleName: floorRange(1548) to cut", "Insert CastExpression(2759) into VariableDeclarationFragment(2760) at 1", "Update SimpleName: lastEntry(1115) to firstEntry", "Move InfixExpression: !=(1556) into InfixExpression: &&(2793) at 0", "Move MethodInvocation(1560) into InfixExpression: &&(2793) at 1", "Insert ReturnStatement(2797) into Block(2798) at 0", "Insert SimpleName: ClassCastException(2801) into SimpleType: ClassCastException(2802) at 0", "Insert NullLiteral(2805) into ReturnStatement(2806) at 0", "Insert SimpleName: Cut(1276) into SimpleType: Cut(1277) at 0", "Insert SimpleName: C(1278) into SimpleType: C(1279) at 0", "Move ParameterizedType: Cut<C>(1383) into CastExpression(1288) at 0", "Insert SimpleName: key(1287) into CastExpression(1288) at 1", "Update SimpleName: rangesByLowerCut(1093) to upperBoundWindow", "Update SimpleName: containsKey(1094) to contains", "Insert SimpleName: cut(1293) into MethodInvocation(1294) at 2", "Update SimpleName: rangesByLowerCut(1265) to rangesByLowerBound", "Update SimpleName: lastEntry(1266) to lowerEntry", "Insert SimpleName: cut(1316) into MethodInvocation(1317) at 2", "Insert SimpleName: candidate(1320) into InfixExpression: !=(1322) at 0", "Insert NullLiteral(1321) into InfixExpression: !=(1322) at 1", "Insert FieldAccess(1327) into MethodInvocation(1330) at 0", "Insert SimpleName: equals(1328) into MethodInvocation(1330) at 1", "Insert SimpleName: cut(1329) into MethodInvocation(1330) at 2", "Insert MethodInvocation(1334) into ReturnStatement(1335) at 0", "Insert MethodInvocation(1426) into MethodInvocation(1428) at 0", "Insert SimpleName: iterator(1427) into MethodInvocation(1428) at 1", "Update SimpleName: lastEntry(1126) to lowerEntry", "Move SimpleName: lastEntry(1126) into MethodInvocation(1436) at 0", "Move SimpleName: getValue(1127) into MethodInvocation(1436) at 1", "Insert SimpleName: backingItr(1440) into Assignment: =(1452) at 0", "Insert MethodInvocation(1451) into Assignment: =(1452) at 1", "Insert SimpleName: backingItr(1455) into Assignment: =(1467) at 0", "Insert MethodInvocation(1466) into Assignment: =(1467) at 1", "Insert MethodInvocation(1509) into PrefixExpression: !(1510) at 0", "Insert ReturnStatement(1513) into Block(1514) at 0", "Update SimpleName: size(1135) to range", "Insert MethodInvocation(1524) into VariableDeclarationFragment(1525) at 1", "Insert QualifiedName: upperBoundWindow.upperBound(1527) into MethodInvocation(1530) at 0", "Insert SimpleName: isLessThan(1528) into MethodInvocation(1530) at 1", "Insert QualifiedName: range.upperBound(1529) into MethodInvocation(1530) at 2", "Insert ReturnStatement(1533) into Block(1534) at 0", "Insert ReturnStatement(1540) into Block(1541) at 0", "Insert MethodInvocation(1595) into MethodInvocation(1597) at 0", "Insert SimpleName: values(1596) into MethodInvocation(1597) at 1", "Insert MethodInvocation(1609) into MethodInvocation(1611) at 0", "Insert SimpleName: values(1610) into MethodInvocation(1611) at 1", "Insert SimpleName: Cut(1658) into SimpleType: Cut(1659) at 0", "Insert SimpleName: C(1660) into SimpleType: C(1661) at 0", "Insert SimpleName: Range(1663) into SimpleType: Range(1664) at 0", "Insert SimpleName: C(1665) into SimpleType: C(1666) at 0", "Insert MethodInvocation(1672) into PrefixExpression: !(1673) at 0", "Insert ReturnStatement(1676) into Block(1677) at 0", "Update SimpleName: spanLowerBound(1178) to range", "Insert MethodInvocation(1687) into VariableDeclarationFragment(1688) at 1", "Insert MethodInvocation(1693) into ConditionalExpression(1701) at 0", "Insert MethodInvocation(1698) into ConditionalExpression(1701) at 1", "Insert MethodInvocation(1700) into ConditionalExpression(1701) at 2", "Update SimpleName: positive(1343) to complementLowerBoundWindow", "Insert SimpleName: lowerEndpoint(2168) into MethodInvocation(2169) at 1", "Insert MethodInvocation(2172) into InfixExpression: ==(2174) at 0", "Insert QualifiedName: BoundType.CLOSED(2173) into InfixExpression: ==(2174) at 1", "Insert SimpleName: positiveItr(2228) into MethodInvocation(2230) at 0", "Insert SimpleName: peek(2229) into MethodInvocation(2230) at 1", "Insert SimpleName: C(2234) into SimpleType: C(2235) at 0", "Insert SimpleName: positiveItr(2253) into MethodInvocation(2255) at 0", "Insert SimpleName: next(2254) into MethodInvocation(2255) at 1", "Insert SimpleName: Cut(2298) into SimpleType: Cut(2299) at 0", "Insert SimpleName: C(2300) into SimpleType: C(2301) at 0", "Insert MethodInvocation(2313) into InfixExpression: ||(2321) at 0", "Insert InfixExpression: ==(2320) into InfixExpression: ||(2321) at 1", "Insert ReturnStatement(2324) into Block(2325) at 0", "Insert SimpleName: negativeRange(2332) into VariableDeclarationFragment(2333) at 0", "Insert SimpleName: positiveItr(2335) into MethodInvocation(2337) at 0", "Insert SimpleName: hasNext(2336) into MethodInvocation(2337) at 1", "Insert VariableDeclarationStatement(2348) into Block(2361) at 0", "Insert ExpressionStatement(2356) into Block(2361) at 1", "Insert ExpressionStatement(2360) into Block(2361) at 2", "Move ExpressionStatement(1368) into Block(2380) at 0", "Move ExpressionStatement(1280) into Block(2380) at 1", "Insert SimpleName: Maps(2382) into MethodInvocation(2386) at 0", "Insert SimpleName: immutableEntry(2383) into MethodInvocation(2386) at 1", "Insert QualifiedName: negativeRange.lowerBound(2384) into MethodInvocation(2386) at 2", "Insert SimpleName: negativeRange(2385) into MethodInvocation(2386) at 3", "Update SimpleName: rangesByLowerCut(1395) to positiveRangesByUpperBound", "Update SimpleName: cut(1397) to startingPoint", "Insert SimpleName: inclusive(2473) into MethodInvocation(2474) at 3", "Insert SimpleName: positiveItr(2498) into MethodInvocation(2500) at 0", "Insert SimpleName: peek(2499) into MethodInvocation(2500) at 1", "Insert SimpleName: Cut(2531) into MethodInvocation(2535) at 0", "Insert SimpleType: C(2533) into MethodInvocation(2535) at 1", "Insert SimpleName: belowAll(2534) into MethodInvocation(2535) at 2", "Insert SimpleName: Cut(2590) into SimpleType: Cut(2591) at 0", "Insert SimpleName: C(2592) into SimpleType: C(2593) at 0", "Insert SimpleName: Range(2595) into SimpleType: Range(2596) at 0", "Insert SimpleName: C(2597) into SimpleType: C(2598) at 0", "Insert SimpleName: nextComplementRangeUpperBound(2602) into InfixExpression: ==(2608) at 0", "Insert MethodInvocation(2607) into InfixExpression: ==(2608) at 1", "Insert ReturnStatement(2611) into Block(2612) at 0", "Move MethodInvocation(1466) into IfStatement(2700) at 0", "Insert Block(2656) into IfStatement(2700) at 1", "Move IfStatement(1523) into IfStatement(2700) at 2", "Insert SimpleName: endOfData(2702) into MethodInvocation(2703) at 0", "Insert SimpleName: Cut(2747) into SimpleType: Cut(2748) at 0", "Insert SimpleName: C(2749) into SimpleType: C(2750) at 0", "Insert ParameterizedType: Cut<C>(2757) into CastExpression(2759) at 0", "Insert SimpleName: key(2758) into CastExpression(2759) at 1", "Insert MethodInvocation(2779) into MethodInvocation(2781) at 0", "Update SimpleName: lastEntry(1117) to firstEntry", "Update SimpleName: floorRange(1554) to firstEntry", "Insert MethodInvocation(2789) into MethodInvocation(2792) at 0", "Update SimpleName: encloses(1558) to equals", "Update SimpleName: range(1559) to cut", "Move MethodInvocation(1223) into ReturnStatement(2797) at 0", "Insert MethodInvocation(1325) into FieldAccess(1327) at 0", "Insert SimpleName: upperBound(1326) into FieldAccess(1327) at 1", "Insert SimpleName: candidate(1332) into MethodInvocation(1334) at 0", "Insert SimpleName: getValue(1333) into MethodInvocation(1334) at 1", "Insert SimpleName: rangesByLowerBound(1424) into MethodInvocation(1426) at 0", "Insert SimpleName: values(1425) into MethodInvocation(1426) at 1", "Insert MethodInvocation(1449) into MethodInvocation(1451) at 0", "Insert SimpleName: iterator(1450) into MethodInvocation(1451) at 1", "Insert MethodInvocation(1464) into MethodInvocation(1466) at 0", "Insert SimpleName: iterator(1465) into MethodInvocation(1466) at 1", "Insert SimpleName: backingItr(1507) into MethodInvocation(1509) at 0", "Insert SimpleName: hasNext(1508) into MethodInvocation(1509) at 1", "Insert MethodInvocation(1512) into ReturnStatement(1513) at 0", "Update SimpleName: rangesByLowerCut(1136) to backingItr", "Move SimpleName: rangesByLowerCut(1136) into MethodInvocation(1524) at 0", "Update SimpleName: size(1137) to next", "Move SimpleName: size(1137) into MethodInvocation(1524) at 1", "Insert MethodInvocation(1532) into ReturnStatement(1533) at 0", "Insert MethodInvocation(1539) into ReturnStatement(1540) at 0", "Insert MethodInvocation(1593) into MethodInvocation(1595) at 0", "Insert SimpleName: descendingMap(1594) into MethodInvocation(1595) at 1", "Insert SimpleName: rangesByLowerBound(1607) into MethodInvocation(1609) at 0", "Insert SimpleName: descendingMap(1608) into MethodInvocation(1609) at 1", "Insert SimpleName: backingItr(1670) into MethodInvocation(1672) at 0", "Insert SimpleName: hasNext(1671) into MethodInvocation(1672) at 1", "Insert MethodInvocation(1675) into ReturnStatement(1676) at 0", "Insert SimpleName: backingItr(1685) into MethodInvocation(1687) at 0", "Insert SimpleName: next(1686) into MethodInvocation(1687) at 1", "Insert QualifiedName: upperBoundWindow.lowerBound(1690) into MethodInvocation(1693) at 0", "Insert SimpleName: isLessThan(1691) into MethodInvocation(1693) at 1", "Insert QualifiedName: range.upperBound(1692) into MethodInvocation(1693) at 2", "Insert SimpleName: Maps(1694) into MethodInvocation(1698) at 0", "Insert SimpleName: immutableEntry(1695) into MethodInvocation(1698) at 1", "Insert QualifiedName: range.upperBound(1696) into MethodInvocation(1698) at 2", "Insert SimpleName: range(1697) into MethodInvocation(1698) at 3", "Insert SimpleName: endOfData(1699) into MethodInvocation(1700) at 0", "Update SimpleName: remove(1345) to complementLowerBoundWindow", "Move SimpleName: remove(1345) into MethodInvocation(2172) at 0", "Update SimpleName: range(1346) to lowerBoundType", "Move SimpleName: range(1346) into MethodInvocation(2172) at 1", "Insert QualifiedName: complementLowerBoundWindow.upperBound(2310) into MethodInvocation(2313) at 0", "Insert SimpleName: isLessThan(2311) into MethodInvocation(2313) at 1", "Insert SimpleName: nextComplementRangeLowerBound(2312) into MethodInvocation(2313) at 2", "Insert SimpleName: nextComplementRangeLowerBound(2314) into InfixExpression: ==(2320) at 0", "Insert MethodInvocation(2319) into InfixExpression: ==(2320) at 1", "Insert MethodInvocation(2323) into ReturnStatement(2324) at 0", "Move ParameterizedType: Range<C>(994) into VariableDeclarationStatement(2348) at 0", "Insert VariableDeclarationFragment(2347) into VariableDeclarationStatement(2348) at 1", "Insert Assignment: =(2355) into ExpressionStatement(2356) at 0", "Insert Assignment: =(2359) into ExpressionStatement(2360) at 0", "Insert Assignment: =(2372) into ExpressionStatement(2373) at 0", "Insert SimpleName: C(2532) into SimpleType: C(2533) at 0", "Insert SimpleName: Cut(2603) into MethodInvocation(2607) at 0", "Insert SimpleType: C(2605) into MethodInvocation(2607) at 1", "Insert SimpleName: belowAll(2606) into MethodInvocation(2607) at 2", "Insert MethodInvocation(2610) into ReturnStatement(2611) at 0", "Update SimpleName: candidatePositiveRanges(1464) to positiveItr", "Insert VariableDeclarationStatement(2626) into Block(2656) at 0", "Insert VariableDeclarationStatement(2639) into Block(2656) at 1", "Insert ExpressionStatement(2643) into Block(2656) at 2", "Insert IfStatement(2655) into Block(2656) at 3", "Insert MethodInvocation(2664) into IfStatement(2699) at 0", "Insert SimpleType: Cut(2754) into ParameterizedType: Cut<C>(2757) at 0", "Insert SimpleType: C(2756) into ParameterizedType: Cut<C>(2757) at 1", "Insert SimpleName: tailMap(2776) into MethodInvocation(2779) at 0", "Update SimpleName: rangesByLowerCut(1116) to cut", "Move SimpleName: rangesByLowerCut(1116) into MethodInvocation(2779) at 1", "Insert BooleanLiteral: true(2778) into MethodInvocation(2779) at 2", "Update SimpleName: floorRange(1557) to firstEntry", "Move SimpleName: floorRange(1557) into MethodInvocation(2789) at 0", "Insert SimpleName: getKey(2788) into MethodInvocation(2789) at 1", "Insert SimpleName: candidate(1323) into MethodInvocation(1325) at 0", "Insert SimpleName: getValue(1324) into MethodInvocation(1325) at 1", "Insert MethodInvocation(1447) into MethodInvocation(1449) at 0", "Insert SimpleName: values(1448) into MethodInvocation(1449) at 1", "Insert MethodInvocation(1462) into MethodInvocation(1464) at 0", "Insert SimpleName: values(1463) into MethodInvocation(1464) at 1", "Insert SimpleName: endOfData(1511) into MethodInvocation(1512) at 0", "Insert SimpleName: endOfData(1531) into MethodInvocation(1532) at 0", "Insert SimpleName: Maps(1535) into MethodInvocation(1539) at 0", "Insert SimpleName: immutableEntry(1536) into MethodInvocation(1539) at 1", "Insert QualifiedName: range.upperBound(1537) into MethodInvocation(1539) at 2", "Insert SimpleName: range(1538) into MethodInvocation(1539) at 3", "Insert SimpleName: rangesByLowerBound(1587) into MethodInvocation(1593) at 0", "Insert SimpleName: headMap(1588) into MethodInvocation(1593) at 1", "Insert MethodInvocation(1591) into MethodInvocation(1593) at 2", "Insert BooleanLiteral: false(1592) into MethodInvocation(1593) at 3", "Insert SimpleName: endOfData(1674) into MethodInvocation(1675) at 0", "Insert SimpleName: Cut(2315) into MethodInvocation(2319) at 0", "Insert SimpleType: C(2317) into MethodInvocation(2319) at 1", "Insert SimpleName: aboveAll(2318) into MethodInvocation(2319) at 2", "Insert SimpleName: endOfData(2322) into MethodInvocation(2323) at 0", "Insert SimpleName: positiveRange(2343) into VariableDeclarationFragment(2347) at 0", "Insert MethodInvocation(2346) into VariableDeclarationFragment(2347) at 1", "Insert SimpleName: negativeRange(2349) into Assignment: =(2355) at 0", "Insert MethodInvocation(2354) into Assignment: =(2355) at 1", "Insert SimpleName: nextComplementRangeLowerBound(2357) into Assignment: =(2359) at 0", "Insert QualifiedName: positiveRange.upperBound(2358) into Assignment: =(2359) at 1", "Insert SimpleName: negativeRange(2362) into Assignment: =(2372) at 0", "Insert MethodInvocation(2371) into Assignment: =(2372) at 1", "Update SimpleName: spanUpperBound(1275) to nextComplementRangeLowerBound", "Insert SimpleName: C(2604) into SimpleType: C(2605) at 0", "Insert SimpleName: endOfData(2609) into MethodInvocation(2610) at 0", "Insert ParameterizedType: Range<C>(2620) into VariableDeclarationStatement(2626) at 0", "Insert VariableDeclarationFragment(2625) into VariableDeclarationStatement(2626) at 1", "Insert ParameterizedType: Range<C>(2631) into VariableDeclarationStatement(2639) at 0", "Insert VariableDeclarationFragment(2638) into VariableDeclarationStatement(2639) at 1", "Insert Assignment: =(2642) into ExpressionStatement(2643) at 0", "Move MethodInvocation(1483) into IfStatement(2655) at 0", "Move Block(1497) into IfStatement(2655) at 1", "Insert QualifiedName: complementLowerBoundWindow.lowerBound(2657) into MethodInvocation(2664) at 0", "Insert SimpleName: isLessThan(2658) into MethodInvocation(2664) at 1", "Insert MethodInvocation(2663) into MethodInvocation(2664) at 2", "Insert VariableDeclarationStatement(2681) into Block(2698) at 0", "Move ExpressionStatement(988) into Block(2698) at 1", "Insert ReturnStatement(2697) into Block(2698) at 2", "Insert SimpleName: Cut(2753) into SimpleType: Cut(2754) at 0", "Insert SimpleName: C(2755) into SimpleType: C(2756) at 0", "Insert SimpleName: rangesByLowerBound(1441) into MethodInvocation(1447) at 0", "Insert SimpleName: tailMap(1442) into MethodInvocation(1447) at 1", "Insert MethodInvocation(1445) into MethodInvocation(1447) at 2", "Insert BooleanLiteral: true(1446) into MethodInvocation(1447) at 3", "Insert SimpleName: rangesByLowerBound(1456) into MethodInvocation(1462) at 0", "Insert SimpleName: tailMap(1457) into MethodInvocation(1462) at 1", "Insert MethodInvocation(1460) into MethodInvocation(1462) at 2", "Insert BooleanLiteral: true(1461) into MethodInvocation(1462) at 3", "Insert SimpleName: upperBoundWindow(1589) into MethodInvocation(1591) at 0", "Insert SimpleName: upperEndpoint(1590) into MethodInvocation(1591) at 1", "Insert SimpleName: C(2316) into SimpleType: C(2317) at 0", "Insert SimpleName: positiveItr(2344) into MethodInvocation(2346) at 0", "Insert SimpleName: next(2345) into MethodInvocation(2346) at 1", "Insert SimpleName: Range(2350) into MethodInvocation(2354) at 0", "Insert SimpleName: create(2351) into MethodInvocation(2354) at 1", "Insert SimpleName: nextComplementRangeLowerBound(2352) into MethodInvocation(2354) at 2", "Insert QualifiedName: positiveRange.lowerBound(2353) into MethodInvocation(2354) at 3", "Update SimpleName: positive(1363) to Range", "Move SimpleName: positive(1363) into MethodInvocation(2371) at 0", "Update SimpleName: add(1365) to create", "Move SimpleName: add(1365) into MethodInvocation(2371) at 1", "Update SimpleName: range(1366) to nextComplementRangeLowerBound", "Move SimpleName: range(1366) into MethodInvocation(2371) at 2", "Move MethodInvocation(1453) into MethodInvocation(2371) at 3", "Insert SimpleType: Range(2617) into ParameterizedType: Range<C>(2620) at 0", "Insert SimpleType: C(2619) into ParameterizedType: Range<C>(2620) at 1", "Insert SimpleName: positiveRange(2621) into VariableDeclarationFragment(2625) at 0", "Insert MethodInvocation(2624) into VariableDeclarationFragment(2625) at 1", "Insert SimpleType: Range(2628) into ParameterizedType: Range<C>(2631) at 0", "Insert SimpleType: C(2630) into ParameterizedType: Range<C>(2631) at 1", "Insert SimpleName: negativeRange(2632) into VariableDeclarationFragment(2638) at 0", "Insert MethodInvocation(2637) into VariableDeclarationFragment(2638) at 1", "Insert SimpleName: nextComplementRangeUpperBound(2640) into Assignment: =(2642) at 0", "Insert QualifiedName: positiveRange.lowerBound(2641) into Assignment: =(2642) at 1", "Insert QualifiedName: complementLowerBoundWindow.lowerBound(2644) into MethodInvocation(2647) at 0", "Update SimpleName: Cut(1478) to isLessThan", "Move SimpleName: Cut(1478) into MethodInvocation(2647) at 1", "Update QualifiedName: firstCandidate.lowerBound(1482) to negativeRange.lowerBound", "Update SimpleName: rangesByLowerCut(1502) to Cut", "Move SimpleName: rangesByLowerCut(1502) into MethodInvocation(2663) at 0", "Insert SimpleType: C(2661) into MethodInvocation(2663) at 1", "Insert SimpleName: belowAll(2662) into MethodInvocation(2663) at 2", "Insert ParameterizedType: Range<C>(2669) into VariableDeclarationStatement(2681) at 0", "Insert VariableDeclarationFragment(2680) into VariableDeclarationStatement(2681) at 1", "Insert MethodInvocation(2696) into ReturnStatement(2697) at 0", "Insert SimpleName: lowerEntry(1443) into MethodInvocation(1445) at 0", "Insert SimpleName: getKey(1444) into MethodInvocation(1445) at 1", "Insert SimpleName: upperBoundWindow(1458) into MethodInvocation(1460) at 0", "Insert SimpleName: lowerEndpoint(1459) into MethodInvocation(1460) at 1", "Insert SimpleName: Range(2616) into SimpleType: Range(2617) at 0", "Insert SimpleName: C(2618) into SimpleType: C(2619) at 0", "Update SimpleName: candidatePositiveRanges(1469) to positiveItr", "Move SimpleName: candidatePositiveRanges(1469) into MethodInvocation(2624) at 0", "Move SimpleName: next(1470) into MethodInvocation(2624) at 1", "Insert SimpleName: Range(2627) into SimpleType: Range(2628) at 0", "Insert SimpleName: C(2629) into SimpleType: C(2630) at 0", "Insert SimpleName: Range(2633) into MethodInvocation(2637) at 0", "Insert SimpleName: create(2634) into MethodInvocation(2637) at 1", "Insert QualifiedName: positiveRange.upperBound(2635) into MethodInvocation(2637) at 2", "Insert SimpleName: nextComplementRangeUpperBound(2636) into MethodInvocation(2637) at 3", "Insert MethodInvocation(2652) into ReturnStatement(2653) at 0", "Insert SimpleName: C(2660) into SimpleType: C(2661) at 0", "Insert SimpleType: Range(2666) into ParameterizedType: Range<C>(2669) at 0", "Insert SimpleType: C(2668) into ParameterizedType: Range<C>(2669) at 1", "Insert SimpleName: negativeRange(2670) into VariableDeclarationFragment(2680) at 0", "Insert MethodInvocation(2679) into VariableDeclarationFragment(2680) at 1", "Update SimpleName: lowerBound(983) to nextComplementRangeUpperBound", "Insert SimpleName: Maps(2688) into MethodInvocation(2696) at 0", "Insert SimpleName: immutableEntry(2689) into MethodInvocation(2696) at 1", "Insert MethodInvocation(2694) into MethodInvocation(2696) at 2", "Insert SimpleName: negativeRange(2695) into MethodInvocation(2696) at 3", "Insert SimpleName: Maps(2648) into MethodInvocation(2652) at 0", "Insert SimpleName: immutableEntry(2649) into MethodInvocation(2652) at 1", "Insert QualifiedName: negativeRange.lowerBound(2650) into MethodInvocation(2652) at 2", "Insert SimpleName: negativeRange(2651) into MethodInvocation(2652) at 3", "Insert SimpleName: Range(2665) into SimpleType: Range(2666) at 0", "Insert SimpleName: C(2667) into SimpleType: C(2668) at 0", "Move SimpleName: Range(1510) into MethodInvocation(2679) at 0", "Move SimpleName: create(1511) into MethodInvocation(2679) at 1", "Move MethodInvocation(1519) into MethodInvocation(2679) at 2", "Insert SimpleName: nextComplementRangeUpperBound(2678) into MethodInvocation(2679) at 3", "Insert SimpleName: Cut(2690) into MethodInvocation(2694) at 0", "Insert SimpleType: C(2692) into MethodInvocation(2694) at 1", "Insert SimpleName: belowAll(2693) into MethodInvocation(2694) at 2", "Update SimpleName: rangesByLowerCut(1517) to Cut", "Insert SimpleType: C(2675) into MethodInvocation(2677) at 1", "Insert SimpleName: belowAll(2676) into MethodInvocation(2677) at 2", "Insert SimpleName: C(2691) into SimpleType: C(2692) at 0", "Insert SimpleName: C(2674) into SimpleType: C(2675) at 0", "Delete SimpleType: C(915)", "Delete SimpleName: value(916)", "Delete SimpleName: positive(918)", "Delete MethodInvocation(919)", "Delete SimpleName: contains(920)", "Delete SimpleName: value(921)", "Delete MethodInvocation(922)", "Delete PrefixExpression: !(923)", "Delete ReturnStatement(924)", "Delete SimpleName: lowerBound(1008)", "Delete QualifiedName: rangeBelow.upperBound(1009)", "Delete Assignment: =(1010)", "Delete ExpressionStatement(1011)", "Delete SimpleName: lowerBound(1041)", "Delete SimpleName: upperBound(1042)", "Delete ClassInstanceCreation(1043)", "Delete PrimitiveType: int(1134)", "Delete MethodInvocation(1138)", "Delete NumberLiteral: 1(1139)", "Delete InfixExpression: -(1140)", "Delete SimpleName: positiveBoundedBelow(1143)", "Delete SimpleName: size(1144)", "Delete PostfixExpression: ++(1145)", "Delete SimpleName: positiveBoundedAbove(1149)", "Delete SimpleName: size(1150)", "Delete PostfixExpression: ++(1151)", "Delete MethodInvocation(1272)", "Delete MethodInvocation(1274)", "Delete MethodInvocation(1285)", "Delete SimpleName: lowerBound(1286)", "Delete FieldAccess(1287)", "Delete MethodInvocation(1296)", "Delete PrimitiveType: boolean(1303)", "Delete SimpleName: isEmpty(1304)", "Delete MethodInvocation(1306)", "Delete MethodInvocation(1313)", "Delete ParameterizedType: RangeSet<C>(1324)", "Delete SimpleName: complement(1325)", "Delete MethodInvocation(1327)", "Delete MethodInvocation(1347)", "Delete MethodInvocation(1364)", "Delete MethodInvocation(1367)", "Delete SimpleName: floorRange(1378)", "Delete SimpleName: cut(1384)", "Delete SingleVariableDeclaration(1385)", "Delete BooleanLiteral: false(1398)", "Delete MethodInvocation(1405)", "Delete QualifiedName: firstCandidate.lowerBound(1494)", "Delete QualifiedName: firstCandidate.upperBound(1422)", "Delete NumberLiteral: 0(1426)", "Delete SimpleName: higherKey(1446)", "Delete SimpleName: resultLowerBound(1447)", "Delete MethodInvocation(1448)", "Delete SimpleName: belowAll(1479)", "Delete MethodInvocation(1480)", "Delete SimpleName: equals(1481)", "Delete SimpleName: isEmpty(1503)", "Delete MethodInvocation(1504)", "Delete ReturnStatement(1508)", "Delete Block(1509)", "Delete SimpleName: firstKey(1518)", "Delete MethodInvocation(1520)", "Delete ReturnStatement(1521)", "Delete SimpleName: firstCandidate(1416)", "Delete MethodInvocation(1419)", "Delete VariableDeclarationFragment(1420)", "Delete VariableDeclarationStatement(1421)", "Delete SimpleName: resultLowerBound(1433)", "Delete QualifiedName: firstCandidate.upperBound(1434)", "Delete VariableDeclarationFragment(1435)", "Delete VariableDeclarationStatement(1436)", "Delete SimpleName: Range(1457)", "Delete SimpleName: create(1458)", "Delete SimpleName: resultLowerBound(1459)", "Delete SimpleName: resultUpperBound(1460)", "Delete MethodInvocation(1461)", "Delete ReturnStatement(1462)", "Delete Block(1463)", "Delete SimpleName: Range(1467)", "Delete SimpleName: create(1468)", "Delete MethodInvocation(1471)", "Delete SimpleName: upperBound(1472)", "Delete FieldAccess(1473)", "Delete QualifiedName: firstCandidate.lowerBound(1474)", "Delete MethodInvocation(1475)", "Delete ReturnStatement(1476)", "Delete Block(1477)", "Delete IfStatement(1498)", "Delete IfStatement(1499)", "Delete IfStatement(1500)", "Delete Block(1501)", "Delete IfStatement(1524)", "Delete SimpleName: floorRange(1549)", "Delete QualifiedName: range.lowerBound(1550)", "Delete MethodInvocation(1551)", "Delete SimpleName: checkNotNull(1539)", "Delete SimpleName: range(1540)", "Delete MethodInvocation(1541)", "Delete ExpressionStatement(1542)", "Delete InfixExpression: &&(1561)", "Delete ReturnStatement(1562)", "Delete SimpleName: Complement(891)", "Delete Modifier: public(911)", "Delete PrimitiveType: boolean(912)", "Delete SimpleName: contains(913)", "Delete MethodDeclaration(926)", "Delete SimpleName: valueCut(945)", "Delete SimpleName: Cut(946)", "Delete SimpleName: belowValue(947)", "Delete SimpleName: value(948)", "Delete MethodInvocation(949)", "Delete VariableDeclarationFragment(950)", "Delete VariableDeclarationStatement(951)", "Delete SimpleName: entryBelow(965)", "Delete SimpleName: rangesByLowerCut(966)", "Delete SimpleName: floorEntry(967)", "Delete SimpleName: valueCut(968)", "Delete MethodInvocation(969)", "Delete VariableDeclarationFragment(970)", "Delete VariableDeclarationStatement(971)", "Delete SimpleName: lowerBound(977)", "Delete VariableDeclarationFragment(978)", "Delete VariableDeclarationStatement(979)", "Delete SimpleName: entryBelow(980)", "Delete NullLiteral(981)", "Delete InfixExpression: ==(982)", "Delete Block(989)", "Delete SimpleName: rangeBelow(995)", "Delete SimpleName: entryBelow(996)", "Delete SimpleName: getValue(997)", "Delete MethodInvocation(998)", "Delete VariableDeclarationFragment(999)", "Delete VariableDeclarationStatement(1000)", "Delete Block(1014)", "Delete IfStatement(1015)", "Delete SimpleName: upperBound(1021)", "Delete MethodInvocation(1033)", "Delete VariableDeclarationFragment(1034)", "Delete VariableDeclarationStatement(1035)", "Delete Block(1045)", "Delete MethodDeclaration(1046)", "Delete SimpleName: asRanges(1058)", "Delete SimpleName: iterator(1078)", "Delete MethodDeclaration(1085)", "Delete SimpleName: size(1090)", "Delete PrimitiveType: boolean(1091)", "Delete SimpleName: positiveBoundedBelow(1092)", "Delete PrefixExpression: !(1099)", "Delete VariableDeclarationFragment(1100)", "Delete VariableDeclarationStatement(1101)", "Delete PrimitiveType: boolean(1121)", "Delete SimpleName: positiveBoundedAbove(1122)", "Delete InfixExpression: ==(1125)", "Delete MethodInvocation(1128)", "Delete SimpleName: hasUpperBound(1129)", "Delete MethodInvocation(1130)", "Delete InfixExpression: ||(1131)", "Delete VariableDeclarationFragment(1132)", "Delete VariableDeclarationStatement(1133)", "Delete SimpleName: size(1155)", "Delete ReturnStatement(1156)", "Delete Block(1157)", "Delete MethodDeclaration(1158)", "Delete AnonymousClassDeclaration(1159)", "Delete ClassInstanceCreation(1160)", "Delete ReturnStatement(1161)", "Delete Block(1162)", "Delete MethodDeclaration(1163)", "Delete SimpleName: span(1172)", "Delete SimpleName: firstEntry(1200)", "Delete NullLiteral(1201)", "Delete InfixExpression: ==(1202)", "Delete MethodInvocation(1210)", "Delete MethodInvocation(1212)", "Delete SimpleName: spanLowerBound(1220)", "Delete SimpleName: upperBound(1224)", "Delete FieldAccess(1225)", "Delete Assignment: =(1226)", "Delete ExpressionStatement(1227)", "Delete SimpleName: Cut(1228)", "Delete MethodInvocation(1230)", "Delete SimpleName: equals(1231)", "Delete SimpleName: spanLowerBound(1232)", "Delete MethodInvocation(1233)", "Delete SimpleType: NoSuchElementException(1235)", "Delete ClassInstanceCreation(1236)", "Delete ThrowStatement(1237)", "Delete Block(1238)", "Delete IfStatement(1239)", "Delete Block(1240)", "Delete IfStatement(1241)", "Delete IfStatement(1242)", "Delete SimpleName: spanUpperBound(1248)", "Delete VariableDeclarationFragment(1249)", "Delete VariableDeclarationStatement(1250)", "Delete Block(1298)", "Delete MethodDeclaration(1299)", "Delete PrimitiveType: void(1334)", "Delete SimpleName: add(1335)", "Delete ParameterizedType: Range<C>(1340)", "Delete SimpleName: range(1341)", "Delete SingleVariableDeclaration(1342)", "Delete Block(1349)", "Delete MethodDeclaration(1350)", "Delete PrimitiveType: void(1354)", "Delete SimpleName: remove(1355)", "Delete ParameterizedType: Range<C>(1360)", "Delete SimpleName: range(1361)", "Delete SingleVariableDeclaration(1362)", "Delete Block(1369)", "Delete MethodDeclaration(1370)", "Delete SimpleName: encloses(1531)", "Delete ParameterizedType: Range<C>(1536)", "Delete SimpleName: range(1537)", "Delete SingleVariableDeclaration(1538)", "Delete MethodDeclaration(1564)", "Delete TypeDeclaration: class(1565)"]}}], "commit_stats": [{"total_files": 6, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}