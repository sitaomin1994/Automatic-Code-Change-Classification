{"application": "apache-nutch", "csha": "9ad0b410d3c9b636f36aae9d642d26038284aaba", "files": [{"HtmlParseFilters_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.util.ArrayList to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 4", "operations": ["INS Modifier: public to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: HTMLPARSEFILTER_ORDER to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to FieldDeclaration at 3", "INS StringLiteral: \"htmlparsefilter.order\" to VariableDeclarationFragment at 1", "INS Modifier: final to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 3", "MOV InfixExpression: == to IfStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: order to VariableDeclarationFragment at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: HTMLPARSEFILTER_ORDER to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: conf to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS ArrayType: String[] to VariableDeclarationStatement at 0", "INS StringLiteral: \"\\\\s+\" to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS SimpleName: orderedFilters to VariableDeclarationFragment at 0", "INS Block to IfStatement at 1", "INS SimpleName: order to InfixExpression: != at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to Block at 1", "INS SimpleName: orderedFilters to Assignment: = at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: trim to MethodInvocation at 1", "INS SimpleName: split to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS IfStatement to Block at 5", "INS StringLiteral: \"\" to MethodInvocation at 2", "INS InfixExpression: && to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS NullLiteral to VariableDeclarationFragment at 1", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: order to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS Dimension to ArrayType: String[] at 1", "INS SimpleName: order to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV TryStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 2"]}, {"root": "UPDATE from filters to filterMap", "operations": ["UPD SimpleName: filters from filters to filterMap", "UPD SimpleName: filters from filters to filterMap", "UPD SimpleName: filters from filters to filterMap"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS SimpleName: filter to InfixExpression: != at 0", "INS Block to IfStatement at 2", "INS SimpleName: filter to MethodInvocation at 2", "INS SimpleName: objectCache to MethodInvocation at 0", "INS InfixExpression: != to IfStatement at 0", "INS IfStatement to Block at 1", "INS QualifiedName: orderedFilters.length to InfixExpression: < at 1", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<HtmlParseFilter> at 0", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: HtmlParseFilter to SimpleType: HtmlParseFilter at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: i to InfixExpression: < at 0", "INS SimpleName: i to ArrayAccess at 1", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<HtmlParseFilter> at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS ParameterizedType: ArrayList<HtmlParseFilter> to ClassInstanceCreation at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: HtmlParseFilter to SimpleType: HtmlParseFilter at 0", "INS ParameterizedType: ArrayList<HtmlParseFilter> to VariableDeclarationStatement at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleType: HtmlParseFilter to ParameterizedType: ArrayList<HtmlParseFilter> at 1", "INS SimpleType: HtmlParseFilter to TypeLiteral at 0", "INS SimpleType: HtmlParseFilter to VariableDeclarationStatement at 0", "INS SimpleType: HtmlParseFilter to ParameterizedType: ArrayList<HtmlParseFilter> at 1", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS SimpleName: orderedFilters to InfixExpression: == at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS TypeLiteral to MethodInvocation at 0", "INS SimpleName: HtmlParseFilter to SimpleType: HtmlParseFilter at 0", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS ArrayAccess to MethodInvocation at 2", "INS NullLiteral to InfixExpression: == at 1", "INS IfStatement to Block at 5", "INS Block to IfStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS NullLiteral to InfixExpression: != at 1", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: filterMap to MethodInvocation at 0", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS SimpleName: filters to MethodInvocation at 0", "INS ForStatement to Block at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getName to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: filters to VariableDeclarationFragment at 0", "INS SimpleName: filter to VariableDeclarationFragment at 0", "INS SimpleName: setObject to MethodInvocation at 1", "INS Block to ForStatement at 3", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: < to ForStatement at 1", "INS InfixExpression: == to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: orderedFilters to ArrayAccess at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: HtmlParseFilter to SimpleType: HtmlParseFilter at 0", "INS PostfixExpression: ++ to ForStatement at 2"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: filterMap to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: filterMap to MethodInvocation at 0", "INS SimpleName: values to MethodInvocation at 1", "INS ArrayType: HtmlParseFilter[] to ArrayCreation at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: toArray to MethodInvocation at 1", "INS ArrayCreation to MethodInvocation at 2", "INS SimpleName: HtmlParseFilter to SimpleType: HtmlParseFilter at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to ArrayCreation at 1", "INS SimpleType: HtmlParseFilter to ArrayType: HtmlParseFilter[] at 0", "INS Dimension to ArrayType: HtmlParseFilter[] at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "UPDATE from put to containsKey", "operations": ["UPD SimpleName: put from put to containsKey"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: filters to MethodInvocation at 0"]}, {"root": "UPDATE from containsKey to put", "operations": ["UPD SimpleName: containsKey from containsKey to put"]}, {"root": "INS SimpleName: parseFilter to MethodInvocation at 3", "operations": ["INS SimpleName: parseFilter to MethodInvocation at 3"]}, {"root": "DEL SimpleName: parseFilter", "operations": ["DEL SimpleName: parseFilter"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: values", "DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL IfStatement", "DEL Block"]}]}}, {"HtmlParseFilters_diff": {"operations": ["Insert ImportDeclaration(17) into CompilationUnit(437) at 1", "Insert QualifiedName: java.util.ArrayList(16) into ImportDeclaration(17) at 0", "Insert FieldDeclaration(54) into TypeDeclaration: class(436) at 4", "Insert Modifier: public(46) into FieldDeclaration(54) at 0", "Insert Modifier: static(47) into FieldDeclaration(54) at 1", "Insert Modifier: final(48) into FieldDeclaration(54) at 2", "Insert SimpleType: String(50) into FieldDeclaration(54) at 3", "Insert VariableDeclarationFragment(53) into FieldDeclaration(54) at 4", "Move Block(244) into MethodDeclaration(368) at 3", "Insert SimpleName: String(49) into SimpleType: String(50) at 0", "Insert SimpleName: HTMLPARSEFILTER_ORDER(51) into VariableDeclarationFragment(53) at 0", "Insert StringLiteral: \"htmlparsefilter.order\"(52) into VariableDeclarationFragment(53) at 1", "Insert VariableDeclarationStatement(69) into Block(367) at 0", "Move VariableDeclarationStatement(58) into Block(367) at 1", "Insert IfStatement(366) into Block(367) at 3", "Insert SimpleType: String(62) into VariableDeclarationStatement(69) at 0", "Insert VariableDeclarationFragment(68) into VariableDeclarationStatement(69) at 1", "Move InfixExpression: ==(79) into IfStatement(366) at 0", "Insert Block(365) into IfStatement(366) at 1", "Insert SimpleName: String(61) into SimpleType: String(62) at 0", "Insert SimpleName: order(63) into VariableDeclarationFragment(68) at 0", "Insert MethodInvocation(67) into VariableDeclarationFragment(68) at 1", "Insert VariableDeclarationStatement(107) into Block(365) at 0", "Insert IfStatement(127) into Block(365) at 1", "Move VariableDeclarationStatement(97) into Block(365) at 2", "Move TryStatement(225) into Block(365) at 3", "Move ExpressionStatement(76) into Block(365) at 4", "Insert SimpleName: conf(64) into MethodInvocation(67) at 0", "Insert SimpleName: get(65) into MethodInvocation(67) at 1", "Insert SimpleName: HTMLPARSEFILTER_ORDER(66) into MethodInvocation(67) at 2", "Insert ArrayType: String[](103) into VariableDeclarationStatement(107) at 0", "Insert VariableDeclarationFragment(106) into VariableDeclarationStatement(107) at 1", "Insert InfixExpression: &&(118) into IfStatement(127) at 0", "Insert Block(126) into IfStatement(127) at 1", "Insert SimpleType: String(101) into ArrayType: String[](103) at 0", "Insert Dimension(102) into ArrayType: String[](103) at 1", "Insert SimpleName: orderedFilters(104) into VariableDeclarationFragment(106) at 0", "Insert NullLiteral(105) into VariableDeclarationFragment(106) at 1", "Insert InfixExpression: !=(110) into InfixExpression: &&(118) at 0", "Insert PrefixExpression: !(117) into InfixExpression: &&(118) at 1", "Insert ExpressionStatement(125) into Block(126) at 0", "Update SimpleName: filters(87) to filterMap", "Insert IfStatement(333) into Block(334) at 5", "Insert SimpleName: String(100) into SimpleType: String(101) at 0", "Insert SimpleName: order(108) into InfixExpression: !=(110) at 0", "Insert NullLiteral(109) into InfixExpression: !=(110) at 1", "Insert MethodInvocation(116) into PrefixExpression: !(117) at 0", "Insert Assignment: =(124) into ExpressionStatement(125) at 0", "Insert InfixExpression: ==(253) into IfStatement(333) at 0", "Insert Block(264) into IfStatement(333) at 1", "Insert Block(332) into IfStatement(333) at 2", "Insert MethodInvocation(113) into MethodInvocation(116) at 0", "Insert SimpleName: equals(114) into MethodInvocation(116) at 1", "Insert StringLiteral: \"\"(115) into MethodInvocation(116) at 2", "Insert SimpleName: orderedFilters(119) into Assignment: =(124) at 0", "Insert MethodInvocation(123) into Assignment: =(124) at 1", "Insert MethodInvocation(248) into VariableDeclarationFragment(249) at 1", "Insert SimpleName: orderedFilters(251) into InfixExpression: ==(253) at 0", "Insert NullLiteral(252) into InfixExpression: ==(253) at 1", "Move ExpressionStatement(212) into Block(264) at 0", "Insert VariableDeclarationStatement(278) into Block(332) at 0", "Insert ForStatement(311) into Block(332) at 1", "Insert ExpressionStatement(331) into Block(332) at 2", "Insert SimpleName: order(111) into MethodInvocation(113) at 0", "Insert SimpleName: trim(112) into MethodInvocation(113) at 1", "Insert SimpleName: order(120) into MethodInvocation(123) at 0", "Insert SimpleName: split(121) into MethodInvocation(123) at 1", "Insert StringLiteral: \"\\\\s+\"(122) into MethodInvocation(123) at 2", "Insert MethodInvocation(238) into MethodInvocation(248) at 0", "Insert SimpleName: toArray(239) into MethodInvocation(248) at 1", "Insert ArrayCreation(247) into MethodInvocation(248) at 2", "Insert ParameterizedType: ArrayList<HtmlParseFilter>(269) into VariableDeclarationStatement(278) at 0", "Insert VariableDeclarationFragment(277) into VariableDeclarationStatement(278) at 1", "Insert VariableDeclarationExpression(283) into ForStatement(311) at 0", "Insert InfixExpression: <(286) into ForStatement(311) at 1", "Insert PostfixExpression: ++(288) into ForStatement(311) at 2", "Insert Block(310) into ForStatement(311) at 3", "Insert MethodInvocation(330) into ExpressionStatement(331) at 0", "Move MethodInvocation(177) into PrefixExpression: !(216) at 0", "Insert SimpleName: filterMap(236) into MethodInvocation(238) at 0", "Insert SimpleName: values(237) into MethodInvocation(238) at 1", "Insert ArrayType: HtmlParseFilter[](243) into ArrayCreation(247) at 0", "Insert MethodInvocation(246) into ArrayCreation(247) at 1", "Insert SimpleType: ArrayList(266) into ParameterizedType: ArrayList<HtmlParseFilter>(269) at 0", "Insert SimpleType: HtmlParseFilter(268) into ParameterizedType: ArrayList<HtmlParseFilter>(269) at 1", "Insert SimpleName: filters(270) into VariableDeclarationFragment(277) at 0", "Insert ClassInstanceCreation(276) into VariableDeclarationFragment(277) at 1", "Insert PrimitiveType: int(279) into VariableDeclarationExpression(283) at 0", "Insert VariableDeclarationFragment(282) into VariableDeclarationExpression(283) at 1", "Insert SimpleName: i(284) into InfixExpression: <(286) at 0", "Insert QualifiedName: orderedFilters.length(285) into InfixExpression: <(286) at 1", "Insert SimpleName: i(287) into PostfixExpression: ++(288) at 0", "Insert VariableDeclarationStatement(299) into Block(310) at 0", "Insert IfStatement(309) into Block(310) at 1", "Insert SimpleName: objectCache(312) into MethodInvocation(330) at 0", "Insert SimpleName: setObject(313) into MethodInvocation(330) at 1", "Insert MethodInvocation(318) into MethodInvocation(330) at 2", "Move MethodInvocation(200) into MethodInvocation(330) at 3", "Update SimpleName: filters(169) to filterMap", "Update SimpleName: put(170) to containsKey", "Move MethodInvocation(167) into ExpressionStatement(226) at 0", "Insert SimpleType: HtmlParseFilter(241) into ArrayType: HtmlParseFilter[](243) at 0", "Insert Dimension(242) into ArrayType: HtmlParseFilter[](243) at 1", "Insert SimpleName: filterMap(244) into MethodInvocation(246) at 0", "Insert SimpleName: size(245) into MethodInvocation(246) at 1", "Insert SimpleName: ArrayList(265) into SimpleType: ArrayList(266) at 0", "Insert SimpleName: HtmlParseFilter(267) into SimpleType: HtmlParseFilter(268) at 0", "Insert ParameterizedType: ArrayList<HtmlParseFilter>(275) into ClassInstanceCreation(276) at 0", "Insert SimpleName: i(280) into VariableDeclarationFragment(282) at 0", "Insert NumberLiteral: 0(281) into VariableDeclarationFragment(282) at 1", "Insert SimpleType: HtmlParseFilter(290) into VariableDeclarationStatement(299) at 0", "Insert VariableDeclarationFragment(298) into VariableDeclarationStatement(299) at 1", "Insert InfixExpression: !=(302) into IfStatement(309) at 0", "Insert Block(308) into IfStatement(309) at 1", "Insert TypeLiteral(316) into MethodInvocation(318) at 0", "Insert SimpleName: getName(317) into MethodInvocation(318) at 1", "Move SimpleName: filters(188) into MethodInvocation(329) at 0", "Update SimpleName: filters(160) to filterMap", "Update SimpleName: containsKey(161) to put", "Insert SimpleName: parseFilter(224) into MethodInvocation(225) at 3", "Insert SimpleName: HtmlParseFilter(240) into SimpleType: HtmlParseFilter(241) at 0", "Insert SimpleType: ArrayList(272) into ParameterizedType: ArrayList<HtmlParseFilter>(275) at 0", "Insert SimpleType: HtmlParseFilter(274) into ParameterizedType: ArrayList<HtmlParseFilter>(275) at 1", "Insert SimpleName: HtmlParseFilter(289) into SimpleType: HtmlParseFilter(290) at 0", "Insert SimpleName: filter(291) into VariableDeclarationFragment(298) at 0", "Insert MethodInvocation(297) into VariableDeclarationFragment(298) at 1", "Insert SimpleName: filter(300) into InfixExpression: !=(302) at 0", "Insert NullLiteral(301) into InfixExpression: !=(302) at 1", "Insert ExpressionStatement(307) into Block(308) at 0", "Insert SimpleType: HtmlParseFilter(315) into TypeLiteral(316) at 0", "Insert SimpleName: ArrayList(271) into SimpleType: ArrayList(272) at 0", "Insert SimpleName: HtmlParseFilter(273) into SimpleType: HtmlParseFilter(274) at 0", "Insert SimpleName: filterMap(292) into MethodInvocation(297) at 0", "Insert SimpleName: get(293) into MethodInvocation(297) at 1", "Insert ArrayAccess(296) into MethodInvocation(297) at 2", "Insert MethodInvocation(306) into ExpressionStatement(307) at 0", "Insert SimpleName: HtmlParseFilter(314) into SimpleType: HtmlParseFilter(315) at 0", "Insert SimpleName: orderedFilters(294) into ArrayAccess(296) at 0", "Insert SimpleName: i(295) into ArrayAccess(296) at 1", "Insert SimpleName: filters(303) into MethodInvocation(306) at 0", "Insert SimpleName: add(304) into MethodInvocation(306) at 1", "Insert SimpleName: filter(305) into MethodInvocation(306) at 2", "Delete SimpleName: parseFilter(176)", "Delete SimpleName: values(189)", "Delete MethodInvocation(190)", "Delete IfStatement(245)", "Delete Block(246)"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}