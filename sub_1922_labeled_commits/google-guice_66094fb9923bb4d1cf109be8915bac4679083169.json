{"application": "google-guice", "csha": "66094fb9923bb4d1cf109be8915bac4679083169", "files": [{"Scopes_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: ExposedBinding to SimpleType: ExposedBinding at 0", "INS TagElement: @param to Javadoc at 3", "INS TextElement: was retrieved via  to TagElement at 5", "INS TagElement to Javadoc at 0", "INS SimpleName: scopeAnnotation to SingleVariableDeclaration at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Boolean to MethodDeclaration at 1", "INS SimpleName: scope to SingleVariableDeclaration at 2", "INS SimpleName: Binding to SimpleType: Binding at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: BindingScopingVisitor to SimpleType: BindingScopingVisitor at 0", "INS InfixExpression: == to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS ParameterizedType: BindingScopingVisitor<Boolean> to ClassInstanceCreation at 0", "INS ParameterizedType: Class<? extends Annotation> to SingleVariableDeclaration at 0", "INS SimpleName: Annotation to SimpleType: Annotation at 0", "INS WildcardType: ? to ParameterizedType: ExposedBinding<?> at 1", "INS IfStatement to Block at 1", "INS SimpleName: ExposedBinding to SimpleType: ExposedBinding at 0", "INS TextElement: ), then this method will to TagElement at 7", "INS SimpleName: LinkedBindingImpl to SimpleType: LinkedBindingImpl at 0", "INS Block to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS SimpleName: getKey to MethodInvocation at 1", "INS SimpleName: Class to SimpleType: Class at 0", "INS SimpleName: Injector to MemberRef at 0", "INS SimpleType: LinkedBindingImpl to CastExpression at 0", "INS SimpleName: visitedScope to SingleVariableDeclaration at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 3", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: LinkedBindingImpl to ParameterizedType: LinkedBindingImpl<?> at 0", "INS SimpleName: acceptScopingVisitor to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS InfixExpression: != to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS TextElement:  linked key binding to TagElement: @link at 1", "INS IfStatement to Block at 2", "INS Block to IfStatement at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: scopeAnnotation to InfixExpression: == at 1", "INS TagElement: @code to TagElement at 1", "INS ReturnStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS WildcardType: ? extends Annotation to ParameterizedType: Class<? extends Annotation> at 1", "INS SimpleName: matches to VariableDeclarationFragment at 0", "INS IfStatement to Block at 2", "INS SimpleName: scopeAnnotation to TagElement: @param at 0", "INS InstanceofExpression to IfStatement at 0", "INS SimpleName: linkedBinding to MethodInvocation at 0", "INS SimpleName: Injector to SimpleType: Injector at 0", "INS TextElement:  binding to check to TagElement: @param at 1", "INS BooleanLiteral: true to ReturnStatement at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS InfixExpression: == to ReturnStatement at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS SimpleName: Scope to SimpleType: Scope at 0", "INS SimpleType: Boolean to MethodDeclaration at 1", "INS SimpleName: binding to CastExpression at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS TagElement: @param to Javadoc at 1", "INS VariableDeclarationStatement to Block at 0", "INS TextElement:  and belongs to an injector (ie. it to TagElement at 4", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS TextElement:  has the given scope. If the binding is a  to TagElement at 2", "INS Modifier: final to SingleVariableDeclaration at 0", "INS TagElement: @link to TagElement at 6", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: scope to InfixExpression: == at 1", "INS SimpleName: binding to InstanceofExpression at 0", "INS SimpleName: LinkedBindingImpl to SimpleType: LinkedBindingImpl at 0", "INS SimpleName: getBinding to MethodInvocation at 1", "INS SimpleName: injector to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Block to IfStatement at 1", "INS Modifier: public to MethodDeclaration at 0", "INS TagElement: @link to TagElement at 3", "INS SimpleName: LinkedBindingImpl to SimpleType: LinkedBindingImpl at 0", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS SimpleName: binding to CastExpression at 1", "INS SimpleName: binding to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: binding to MethodInvocation at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleType: ExposedBinding to CastExpression at 0", "INS SimpleName: getInjector to MethodInvocation at 1", "INS SimpleName: visitNoScoping to MethodDeclaration at 2", "INS WildcardType: ? to ParameterizedType: Binding<?> at 1", "INS SimpleName: Annotation to SimpleType: Annotation at 0", "INS SimpleName: binding to TagElement: @param at 0", "INS SimpleName: linkedBinding to VariableDeclarationFragment at 0", "INS SimpleName: visitEagerSingleton to MethodDeclaration at 2", "INS ContinueStatement to Block at 1", "INS Block to DoStatement at 0", "INS SimpleName: scope to TagElement: @param at 0", "INS SimpleName: visitScope to MethodDeclaration at 2", "INS ParameterizedType: Binding<?> to SingleVariableDeclaration at 0", "INS SimpleType: ExposedBinding to InstanceofExpression at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: injector to MethodInvocation at 0", "INS SimpleName: binding to SingleVariableDeclaration at 1", "INS SimpleName: Injector to SimpleType: Injector at 0", "INS SimpleType: Class to ParameterizedType: Class<? extends Annotation> at 0", "INS ContinueStatement to Block at 1", "INS TextElement: Returns true if  to TagElement at 0", "INS VariableDeclarationStatement to Block at 0", "INS TextElement:  binding to TagElement: @code at 0", "INS SimpleName: getBinding to MemberRef at 1", "INS SimpleType: Scope to SingleVariableDeclaration at 0", "INS QualifiedName: com.google.inject.spi.LinkedKeyBinding to TagElement: @link at 0", "INS SimpleName: visitedAnnotation to InfixExpression: == at 0", "INS ReturnStatement to Block at 3", "INS SimpleName: injector to InfixExpression: != at 0", "INS TagElement: @param to Javadoc at 2", "INS BooleanLiteral: true to DoStatement at 1", "INS SimpleName: binding to Assignment: = at 0", "INS SimpleName: exposedBinding to MethodInvocation at 0", "INS SimpleName: getPrivateElements to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS Block to MethodDeclaration at 3", "INS WildcardType: ? to ParameterizedType: LinkedBindingImpl<?> at 1", "INS SimpleType: Injector to VariableDeclarationStatement at 0", "INS SimpleName: Scope to SimpleType: Scope at 0", "INS ExpressionStatement to Block at 0", "INS WildcardType: ? extends Annotation to ParameterizedType: Class<? extends Annotation> at 1", "INS SimpleType: BindingScopingVisitor to ParameterizedType: BindingScopingVisitor<Boolean> at 0", "INS SimpleType: Annotation to WildcardType: ? extends Annotation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ParameterizedType: ExposedBinding<?> to VariableDeclarationStatement at 0", "INS SimpleName: isScoped to MethodDeclaration at 4", "INS SimpleType: Boolean to MethodDeclaration at 1", "INS SimpleName: visitedScope to InfixExpression: == at 0", "INS Block to MethodDeclaration at 8", "INS SimpleName: ExposedBinding to SimpleType: ExposedBinding at 0", "INS TextElement:  scope annotation class to TagElement: @param at 1", "INS SimpleType: Injector to VariableDeclarationStatement at 0", "INS SimpleName: binding to InstanceofExpression at 0", "INS SimpleName: visitScopeAnnotation to MethodDeclaration at 2", "INS SimpleName: injector to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: linkedBinding to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS DoStatement to Block at 0", "INS InfixExpression: != to IfStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS IfStatement to IfStatement at 2", "INS SimpleName: injector to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: Annotation to WildcardType: ? extends Annotation at 0", "INS PrimitiveType: boolean to MethodDeclaration at 3", "INS InstanceofExpression to IfStatement at 0", "INS TextElement: also true if the target binding has the given scope. to TagElement at 8", "INS SimpleName: getLinkedKey to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleType: Boolean to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: injector to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleType: Scope to SingleVariableDeclaration at 1", "INS ParameterizedType: Class<? extends Annotation> to SingleVariableDeclaration at 1", "INS ParameterizedType: LinkedBindingImpl<?> to VariableDeclarationStatement at 0", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS SimpleName: getInjector to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: exposedBinding to VariableDeclarationFragment at 0", "INS Block to MethodDeclaration at 4", "INS IfStatement to Block at 2", "INS Block to IfStatement at 1", "INS SimpleName: Class to SimpleType: Class at 0", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleType: LinkedBindingImpl to InstanceofExpression at 1", "INS TextElement:  Injector.getBinding() to TagElement: @link at 1", "INS Block to MethodDeclaration at 3", "INS MethodDeclaration to AnonymousClassDeclaration at 2", "INS SimpleName: matches to IfStatement at 0", "INS MemberRef to TagElement: @link at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: getBinding to MethodInvocation at 1", "INS SimpleType: ExposedBinding to ParameterizedType: ExposedBinding<?> at 0", "INS SimpleName: exposedBinding to MethodInvocation at 0", "INS SimpleType: Class to ParameterizedType: Class<? extends Annotation> at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: Binding to ParameterizedType: Binding<?> at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 1", "INS SimpleName: visitedAnnotation to SingleVariableDeclaration at 1", "INS Block to IfStatement at 1", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS Modifier: static to MethodDeclaration at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS TextElement:  scope implementation instance to TagElement: @param at 1", "INS MethodInvocation to MethodInvocation at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleType: Boolean to ParameterizedType: BindingScopingVisitor<Boolean> at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS ReturnStatement to Block at 0"]}]}}, {"Scopes_diff": {"operations": ["Insert MethodDeclaration(700) into TypeDeclaration: class(724) at 8", "Insert Javadoc(520) into MethodDeclaration(700) at 0", "Insert Modifier: public(521) into MethodDeclaration(700) at 1", "Insert Modifier: static(522) into MethodDeclaration(700) at 2", "Insert PrimitiveType: boolean(523) into MethodDeclaration(700) at 3", "Insert SimpleName: isScoped(524) into MethodDeclaration(700) at 4", "Insert SingleVariableDeclaration(530) into MethodDeclaration(700) at 5", "Insert SingleVariableDeclaration(535) into MethodDeclaration(700) at 6", "Insert SingleVariableDeclaration(544) into MethodDeclaration(700) at 7", "Insert Block(699) into MethodDeclaration(700) at 8", "Insert TagElement(510) into Javadoc(520) at 0", "Insert TagElement: @param(513) into Javadoc(520) at 1", "Insert TagElement: @param(516) into Javadoc(520) at 2", "Insert TagElement: @param(519) into Javadoc(520) at 3", "Insert ParameterizedType: Binding<?>(528) into SingleVariableDeclaration(530) at 0", "Insert SimpleName: binding(529) into SingleVariableDeclaration(530) at 1", "Insert Modifier: final(531) into SingleVariableDeclaration(535) at 0", "Insert SimpleType: Scope(533) into SingleVariableDeclaration(535) at 1", "Insert SimpleName: scope(534) into SingleVariableDeclaration(535) at 2", "Insert Modifier: final(536) into SingleVariableDeclaration(544) at 0", "Insert ParameterizedType: Class<? extends Annotation>(542) into SingleVariableDeclaration(544) at 1", "Insert SimpleName: scopeAnnotation(543) into SingleVariableDeclaration(544) at 2", "Insert DoStatement(698) into Block(699) at 0", "Insert TextElement: Returns true if (494) into TagElement(510) at 0", "Insert TagElement: @code(496) into TagElement(510) at 1", "Insert TextElement:  has the given scope. If the binding is a (497) into TagElement(510) at 2", "Insert TagElement: @link(500) into TagElement(510) at 3", "Insert TextElement:  and belongs to an injector (ie. it(501) into TagElement(510) at 4", "Insert TextElement: was retrieved via (502) into TagElement(510) at 5", "Insert TagElement: @link(507) into TagElement(510) at 6", "Insert TextElement: ), then this method will(508) into TagElement(510) at 7", "Insert TextElement: also true if the target binding has the given scope.(509) into TagElement(510) at 8", "Insert SimpleName: binding(511) into TagElement: @param(513) at 0", "Insert TextElement:  binding to check(512) into TagElement: @param(513) at 1", "Insert SimpleName: scope(514) into TagElement: @param(516) at 0", "Insert TextElement:  scope implementation instance(515) into TagElement: @param(516) at 1", "Insert SimpleName: scopeAnnotation(517) into TagElement: @param(519) at 0", "Insert TextElement:  scope annotation class(518) into TagElement: @param(519) at 1", "Insert SimpleType: Binding(526) into ParameterizedType: Binding<?>(528) at 0", "Insert WildcardType: ?(527) into ParameterizedType: Binding<?>(528) at 1", "Insert SimpleName: Scope(532) into SimpleType: Scope(533) at 0", "Insert SimpleType: Class(538) into ParameterizedType: Class<? extends Annotation>(542) at 0", "Insert WildcardType: ? extends Annotation(541) into ParameterizedType: Class<? extends Annotation>(542) at 1", "Insert Block(696) into DoStatement(698) at 0", "Insert BooleanLiteral: true(697) into DoStatement(698) at 1", "Insert TextElement:  binding(495) into TagElement: @code(496) at 0", "Insert QualifiedName: com.google.inject.spi.LinkedKeyBinding(498) into TagElement: @link(500) at 0", "Insert TextElement:  linked key binding(499) into TagElement: @link(500) at 1", "Insert MemberRef(505) into TagElement: @link(507) at 0", "Insert TextElement:  Injector.getBinding()(506) into TagElement: @link(507) at 1", "Insert SimpleName: Binding(525) into SimpleType: Binding(526) at 0", "Insert SimpleName: Class(537) into SimpleType: Class(538) at 0", "Insert SimpleType: Annotation(540) into WildcardType: ? extends Annotation(541) at 0", "Insert VariableDeclarationStatement(606) into Block(696) at 0", "Insert IfStatement(611) into Block(696) at 1", "Insert IfStatement(693) into Block(696) at 2", "Insert ReturnStatement(695) into Block(696) at 3", "Insert SimpleName: Injector(503) into MemberRef(505) at 0", "Insert SimpleName: getBinding(504) into MemberRef(505) at 1", "Insert SimpleName: Annotation(539) into SimpleType: Annotation(540) at 0", "Insert PrimitiveType: boolean(545) into VariableDeclarationStatement(606) at 0", "Insert VariableDeclarationFragment(605) into VariableDeclarationStatement(606) at 1", "Insert SimpleName: matches(607) into IfStatement(611) at 0", "Insert Block(610) into IfStatement(611) at 1", "Insert InstanceofExpression(615) into IfStatement(693) at 0", "Insert Block(650) into IfStatement(693) at 1", "Insert IfStatement(692) into IfStatement(693) at 2", "Insert BooleanLiteral: false(694) into ReturnStatement(695) at 0", "Insert SimpleName: matches(546) into VariableDeclarationFragment(605) at 0", "Insert MethodInvocation(604) into VariableDeclarationFragment(605) at 1", "Insert ReturnStatement(609) into Block(610) at 0", "Insert SimpleName: binding(612) into InstanceofExpression(615) at 0", "Insert SimpleType: LinkedBindingImpl(614) into InstanceofExpression(615) at 1", "Insert VariableDeclarationStatement(626) into Block(650) at 0", "Insert VariableDeclarationStatement(634) into Block(650) at 1", "Insert IfStatement(649) into Block(650) at 2", "Insert InstanceofExpression(654) into IfStatement(692) at 0", "Insert Block(691) into IfStatement(692) at 1", "Insert SimpleName: binding(547) into MethodInvocation(604) at 0", "Insert SimpleName: acceptScopingVisitor(548) into MethodInvocation(604) at 1", "Insert ClassInstanceCreation(603) into MethodInvocation(604) at 2", "Insert BooleanLiteral: true(608) into ReturnStatement(609) at 0", "Insert SimpleName: LinkedBindingImpl(613) into SimpleType: LinkedBindingImpl(614) at 0", "Insert ParameterizedType: LinkedBindingImpl<?>(619) into VariableDeclarationStatement(626) at 0", "Insert VariableDeclarationFragment(625) into VariableDeclarationStatement(626) at 1", "Insert SimpleType: Injector(628) into VariableDeclarationStatement(634) at 0", "Insert VariableDeclarationFragment(633) into VariableDeclarationStatement(634) at 1", "Insert InfixExpression: !=(637) into IfStatement(649) at 0", "Insert Block(648) into IfStatement(649) at 1", "Insert SimpleName: binding(651) into InstanceofExpression(654) at 0", "Insert SimpleType: ExposedBinding(653) into InstanceofExpression(654) at 1", "Insert VariableDeclarationStatement(665) into Block(691) at 0", "Insert VariableDeclarationStatement(675) into Block(691) at 1", "Insert IfStatement(690) into Block(691) at 2", "Insert ParameterizedType: BindingScopingVisitor<Boolean>(553) into ClassInstanceCreation(603) at 0", "Insert AnonymousClassDeclaration(602) into ClassInstanceCreation(603) at 1", "Insert SimpleType: LinkedBindingImpl(617) into ParameterizedType: LinkedBindingImpl<?>(619) at 0", "Insert WildcardType: ?(618) into ParameterizedType: LinkedBindingImpl<?>(619) at 1", "Insert SimpleName: linkedBinding(620) into VariableDeclarationFragment(625) at 0", "Insert CastExpression(624) into VariableDeclarationFragment(625) at 1", "Insert SimpleName: Injector(627) into SimpleType: Injector(628) at 0", "Insert SimpleName: injector(629) into VariableDeclarationFragment(633) at 0", "Insert MethodInvocation(632) into VariableDeclarationFragment(633) at 1", "Insert SimpleName: injector(635) into InfixExpression: !=(637) at 0", "Insert NullLiteral(636) into InfixExpression: !=(637) at 1", "Insert ExpressionStatement(646) into Block(648) at 0", "Insert ContinueStatement(647) into Block(648) at 1", "Insert SimpleName: ExposedBinding(652) into SimpleType: ExposedBinding(653) at 0", "Insert ParameterizedType: ExposedBinding<?>(658) into VariableDeclarationStatement(665) at 0", "Insert VariableDeclarationFragment(664) into VariableDeclarationStatement(665) at 1", "Insert SimpleType: Injector(667) into VariableDeclarationStatement(675) at 0", "Insert VariableDeclarationFragment(674) into VariableDeclarationStatement(675) at 1", "Insert InfixExpression: !=(678) into IfStatement(690) at 0", "Insert Block(689) into IfStatement(690) at 1", "Insert SimpleType: BindingScopingVisitor(550) into ParameterizedType: BindingScopingVisitor<Boolean>(553) at 0", "Insert SimpleType: Boolean(552) into ParameterizedType: BindingScopingVisitor<Boolean>(553) at 1", "Insert MethodDeclaration(561) into AnonymousClassDeclaration(602) at 0", "Insert MethodDeclaration(579) into AnonymousClassDeclaration(602) at 1", "Insert MethodDeclaration(593) into AnonymousClassDeclaration(602) at 2", "Insert MethodDeclaration(601) into AnonymousClassDeclaration(602) at 3", "Insert SimpleName: LinkedBindingImpl(616) into SimpleType: LinkedBindingImpl(617) at 0", "Insert SimpleType: LinkedBindingImpl(622) into CastExpression(624) at 0", "Insert SimpleName: binding(623) into CastExpression(624) at 1", "Insert SimpleName: linkedBinding(630) into MethodInvocation(632) at 0", "Insert SimpleName: getInjector(631) into MethodInvocation(632) at 1", "Insert Assignment: =(645) into ExpressionStatement(646) at 0", "Insert SimpleType: ExposedBinding(656) into ParameterizedType: ExposedBinding<?>(658) at 0", "Insert WildcardType: ?(657) into ParameterizedType: ExposedBinding<?>(658) at 1", "Insert SimpleName: exposedBinding(659) into VariableDeclarationFragment(664) at 0", "Insert CastExpression(663) into VariableDeclarationFragment(664) at 1", "Insert SimpleName: Injector(666) into SimpleType: Injector(667) at 0", "Insert SimpleName: injector(668) into VariableDeclarationFragment(674) at 0", "Insert MethodInvocation(673) into VariableDeclarationFragment(674) at 1", "Insert SimpleName: injector(676) into InfixExpression: !=(678) at 0", "Insert NullLiteral(677) into InfixExpression: !=(678) at 1", "Insert ExpressionStatement(687) into Block(689) at 0", "Insert ContinueStatement(688) into Block(689) at 1", "Insert SimpleName: BindingScopingVisitor(549) into SimpleType: BindingScopingVisitor(550) at 0", "Insert SimpleName: Boolean(551) into SimpleType: Boolean(552) at 0", "Insert Modifier: public(554) into MethodDeclaration(561) at 0", "Insert SimpleType: Boolean(556) into MethodDeclaration(561) at 1", "Insert SimpleName: visitNoScoping(557) into MethodDeclaration(561) at 2", "Insert Block(560) into MethodDeclaration(561) at 3", "Insert Modifier: public(562) into MethodDeclaration(579) at 0", "Insert SimpleType: Boolean(564) into MethodDeclaration(579) at 1", "Insert SimpleName: visitScopeAnnotation(565) into MethodDeclaration(579) at 2", "Insert SingleVariableDeclaration(573) into MethodDeclaration(579) at 3", "Insert Block(578) into MethodDeclaration(579) at 4", "Insert Modifier: public(580) into MethodDeclaration(593) at 0", "Insert SimpleType: Boolean(582) into MethodDeclaration(593) at 1", "Insert SimpleName: visitScope(583) into MethodDeclaration(593) at 2", "Insert SingleVariableDeclaration(587) into MethodDeclaration(593) at 3", "Insert Block(592) into MethodDeclaration(593) at 4", "Insert Modifier: public(594) into MethodDeclaration(601) at 0", "Insert SimpleType: Boolean(596) into MethodDeclaration(601) at 1", "Insert SimpleName: visitEagerSingleton(597) into MethodDeclaration(601) at 2", "Insert Block(600) into MethodDeclaration(601) at 3", "Insert SimpleName: LinkedBindingImpl(621) into SimpleType: LinkedBindingImpl(622) at 0", "Insert SimpleName: binding(638) into Assignment: =(645) at 0", "Insert MethodInvocation(644) into Assignment: =(645) at 1", "Insert SimpleName: ExposedBinding(655) into SimpleType: ExposedBinding(656) at 0", "Insert SimpleType: ExposedBinding(661) into CastExpression(663) at 0", "Insert SimpleName: binding(662) into CastExpression(663) at 1", "Insert MethodInvocation(671) into MethodInvocation(673) at 0", "Insert SimpleName: getInjector(672) into MethodInvocation(673) at 1", "Insert Assignment: =(686) into ExpressionStatement(687) at 0", "Insert SimpleName: Boolean(555) into SimpleType: Boolean(556) at 0", "Insert ReturnStatement(559) into Block(560) at 0", "Insert SimpleName: Boolean(563) into SimpleType: Boolean(564) at 0", "Insert ParameterizedType: Class<? extends Annotation>(571) into SingleVariableDeclaration(573) at 0", "Insert SimpleName: visitedAnnotation(572) into SingleVariableDeclaration(573) at 1", "Insert ReturnStatement(577) into Block(578) at 0", "Insert SimpleName: Boolean(581) into SimpleType: Boolean(582) at 0", "Insert SimpleType: Scope(585) into SingleVariableDeclaration(587) at 0", "Insert SimpleName: visitedScope(586) into SingleVariableDeclaration(587) at 1", "Insert ReturnStatement(591) into Block(592) at 0", "Insert SimpleName: Boolean(595) into SimpleType: Boolean(596) at 0", "Insert ReturnStatement(599) into Block(600) at 0", "Insert SimpleName: injector(639) into MethodInvocation(644) at 0", "Insert SimpleName: getBinding(640) into MethodInvocation(644) at 1", "Insert MethodInvocation(643) into MethodInvocation(644) at 2", "Insert SimpleName: ExposedBinding(660) into SimpleType: ExposedBinding(661) at 0", "Insert SimpleName: exposedBinding(669) into MethodInvocation(671) at 0", "Insert SimpleName: getPrivateElements(670) into MethodInvocation(671) at 1", "Insert SimpleName: binding(679) into Assignment: =(686) at 0", "Insert MethodInvocation(685) into Assignment: =(686) at 1", "Insert BooleanLiteral: false(558) into ReturnStatement(559) at 0", "Insert SimpleType: Class(567) into ParameterizedType: Class<? extends Annotation>(571) at 0", "Insert WildcardType: ? extends Annotation(570) into ParameterizedType: Class<? extends Annotation>(571) at 1", "Insert InfixExpression: ==(576) into ReturnStatement(577) at 0", "Insert SimpleName: Scope(584) into SimpleType: Scope(585) at 0", "Insert InfixExpression: ==(590) into ReturnStatement(591) at 0", "Insert BooleanLiteral: false(598) into ReturnStatement(599) at 0", "Insert SimpleName: linkedBinding(641) into MethodInvocation(643) at 0", "Insert SimpleName: getLinkedKey(642) into MethodInvocation(643) at 1", "Insert SimpleName: injector(680) into MethodInvocation(685) at 0", "Insert SimpleName: getBinding(681) into MethodInvocation(685) at 1", "Insert MethodInvocation(684) into MethodInvocation(685) at 2", "Insert SimpleName: Class(566) into SimpleType: Class(567) at 0", "Insert SimpleType: Annotation(569) into WildcardType: ? extends Annotation(570) at 0", "Insert SimpleName: visitedAnnotation(574) into InfixExpression: ==(576) at 0", "Insert SimpleName: scopeAnnotation(575) into InfixExpression: ==(576) at 1", "Insert SimpleName: visitedScope(588) into InfixExpression: ==(590) at 0", "Insert SimpleName: scope(589) into InfixExpression: ==(590) at 1", "Insert SimpleName: exposedBinding(682) into MethodInvocation(684) at 0", "Insert SimpleName: getKey(683) into MethodInvocation(684) at 1", "Insert SimpleName: Annotation(568) into SimpleType: Annotation(569) at 0"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}