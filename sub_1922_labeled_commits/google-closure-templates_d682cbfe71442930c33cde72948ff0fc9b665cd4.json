{"application": "google-closure-templates", "csha": "d682cbfe71442930c33cde72948ff0fc9b665cd4", "files": [{"ExpressionCompiler_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 20", "operations": ["INS QualifiedName: com.google.template.soy.exprtree.ExprNode.PrimitiveNode to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 20"]}, {"root": "INS ImportDeclaration to CompilationUnit at 60", "operations": ["INS QualifiedName: com.google.template.soy.types.primitive.UnknownType to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 60"]}, {"root": "INS TextElement: <p>A note on how we use soy types.  We generally try to limit the places where we read type to TagElement at 5", "operations": ["INS TextElement: <p>A note on how we use soy types.  We generally try to limit the places where we read type to TagElement at 5"]}, {"root": "INS TextElement: information from the AST.  This is because it tends to be not very accurate.  Specifically, the to TagElement at 6", "operations": ["INS TextElement: information from the AST.  This is because it tends to be not very accurate.  Specifically, the to TagElement at 6"]}, {"root": "INS TextElement: places where we rely on type information from the ast are: to TagElement at 7", "operations": ["INS TextElement: places where we rely on type information from the ast are: to TagElement at 7"]}, {"root": "INS TextElement: <ul> to TagElement at 8", "operations": ["INS TextElement: <ul> to TagElement at 8"]}, {"root": "INS TextElement: <li> to TagElement at 9", "operations": ["INS TextElement: <li> to TagElement at 9"]}, {"root": "INS TagElement: @link to TagElement at 10", "operations": ["INS SimpleName: VarRefNode to TagElement: @link at 0", "INS TagElement: @link to TagElement at 10"]}, {"root": "INS TextElement: <li> to TagElement at 11", "operations": ["INS TextElement: <li> to TagElement at 11"]}, {"root": "INS TagElement: @link to TagElement at 12", "operations": ["INS TagElement: @link to TagElement at 12", "INS SimpleName: PrimitiveNode to TagElement: @link at 0"]}, {"root": "INS TextElement: <li> to TagElement at 13", "operations": ["INS TextElement: <li> to TagElement at 13"]}, {"root": "INS TagElement: @link to TagElement at 14", "operations": ["INS TagElement: @link to TagElement at 14", "INS SimpleName: DataAccessNode to TagElement: @link at 0"]}, {"root": "INS TextElement: </ul> to TagElement at 15", "operations": ["INS TextElement: </ul> to TagElement at 15"]}, {"root": "INS TextElement: <p>This is because these are the points that are most likely to be in direct control of the user. to TagElement at 16", "operations": ["INS TextElement: <p>This is because these are the points that are most likely to be in direct control of the user. to TagElement at 16"]}, {"root": "INS TextElement: All other type information is derived directly from operations on SoyExpression objects. to TagElement at 17", "operations": ["INS TextElement: All other type information is derived directly from operations on SoyExpression objects. to TagElement at 17"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from cast to SoyExpression", "operations": ["UPD SimpleName: cast from cast to SoyExpression"]}, {"root": "UPDATE from node to forSoyValue", "operations": ["UPD SimpleName: node from node to forSoyValue"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: node to MethodInvocation at 1"]}, {"root": "INS QualifiedName: SoyTypes.NUMBER_TYPE to MethodInvocation at 2", "operations": ["INS QualifiedName: SoyTypes.NUMBER_TYPE to MethodInvocation at 2"]}, {"root": "INS QualifiedName: SoyTypes.NUMBER_TYPE to MethodInvocation at 2", "operations": ["INS QualifiedName: SoyTypes.NUMBER_TYPE to MethodInvocation at 2"]}, {"root": "INS QualifiedName: SoyTypes.NUMBER_TYPE to MethodInvocation at 2", "operations": ["INS QualifiedName: SoyTypes.NUMBER_TYPE to MethodInvocation at 2"]}, {"root": "UPDATE from isKnownInt to assignableToNullableInt", "operations": ["UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt"]}, {"root": "UPDATE from isKnownNumber to assignableToNullableNumber", "operations": ["UPD SimpleName: isKnownNumber from isKnownNumber to assignableToNullableNumber", "UPD SimpleName: isKnownNumber from isKnownNumber to assignableToNullableNumber", "UPD SimpleName: isKnownNumber from isKnownNumber to assignableToNullableNumber", "UPD SimpleName: isKnownNumber from isKnownNumber to assignableToNullableNumber", "UPD SimpleName: isKnownNumber from isKnownNumber to assignableToNullableNumber", "UPD SimpleName: isKnownNumber from isKnownNumber to assignableToNullableNumber", "UPD SimpleName: isKnownNumber from isKnownNumber to assignableToNullableNumber", "UPD SimpleName: isKnownNumber from isKnownNumber to assignableToNullableNumber", "UPD SimpleName: isKnownNumber from isKnownNumber to assignableToNullableNumber", "UPD SimpleName: isKnownNumber from isKnownNumber to assignableToNullableNumber", "UPD SimpleName: isKnownNumber from isKnownNumber to assignableToNullableNumber", "UPD SimpleName: isKnownNumber from isKnownNumber to assignableToNullableNumber", "UPD SimpleName: isKnownNumber from isKnownNumber to assignableToNullableNumber", "UPD SimpleName: isKnownNumber from isKnownNumber to assignableToNullableNumber", "UPD SimpleName: isKnownNumber from isKnownNumber to assignableToNullableNumber"]}, {"root": "INS QualifiedName: SoyTypes.NUMBER_TYPE to MethodInvocation at 2", "operations": ["INS QualifiedName: SoyTypes.NUMBER_TYPE to MethodInvocation at 2"]}, {"root": "UPDATE from node to UnknownType", "operations": ["UPD SimpleName: node from node to UnknownType", "UPD SimpleName: node from node to UnknownType"]}, {"root": "UPDATE from getType to getInstance", "operations": ["UPD SimpleName: getType from getType to getInstance", "UPD SimpleName: getType from getType to getInstance"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS TypeLiteral to MethodInvocation at 2", "INS SimpleName: SoyValue to SimpleType: SoyValue at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: cast to MethodInvocation at 1", "INS SimpleType: SoyValue to TypeLiteral at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: SoyValue to SimpleType: SoyValue at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: cast to MethodInvocation at 1", "INS TypeLiteral to MethodInvocation at 2", "INS SimpleType: SoyValue to TypeLiteral at 0"]}, {"root": "INS TypeLiteral to MethodInvocation at 2", "operations": ["INS TypeLiteral to MethodInvocation at 2"]}, {"root": "INS TypeLiteral to MethodInvocation at 2", "operations": ["INS SimpleType: SoyValue to TypeLiteral at 0", "INS TypeLiteral to MethodInvocation at 2", "INS SimpleName: SoyValue to SimpleType: SoyValue at 0"]}, {"root": "UPDATE from SoyExpression to childExpr", "operations": ["UPD SimpleName: SoyExpression from SoyExpression to childExpr", "UPD SimpleName: node from node to childExpr"]}, {"root": "UPDATE from node to withSource", "operations": ["UPD SimpleName: node from node to withSource"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: node to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from TypeLiteral", "operations": ["MOV SimpleType: SoyValue to TypeLiteral at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS MethodInvocation to ClassInstanceCreation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: node to MethodInvocation at 0", "MOV SimpleName: getType to MethodInvocation at 1"]}, {"root": "UPDATE from getType to resultType", "operations": ["UPD SimpleName: getType from getType to resultType"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getType", "DEL SimpleName: javaType", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: forSoyValue", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getType", "DEL SimpleName: SoyExpression", "DEL SimpleName: node"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getType", "DEL MethodInvocation", "DEL SimpleName: node"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getType", "DEL SimpleName: node"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getType", "DEL MethodInvocation", "DEL SimpleName: node"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: javaType", "DEL SimpleName: node", "DEL VariableDeclarationFragment", "DEL SimpleName: getType", "DEL ParameterizedType: Class<? extends SoyValue>", "DEL WildcardType: ? extends SoyValue", "DEL VariableDeclarationStatement", "DEL SimpleType: Class", "DEL MethodInvocation", "DEL SimpleName: Class", "DEL MethodInvocation", "DEL SimpleName: javaType"]}, {"root": "DEL SimpleName: javaType", "operations": ["DEL SimpleName: javaType"]}, {"root": "DEL SimpleName: javaType", "operations": ["DEL SimpleName: javaType"]}, {"root": "DEL SimpleName: forSoyValue", "operations": ["DEL SimpleName: forSoyValue"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getType"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getType", "DEL MethodInvocation", "DEL SimpleName: Type", "DEL MethodInvocation", "DEL SimpleName: javaType"]}]}}, {"ExpressionCompiler_diff": {"operations": ["Insert ImportDeclaration(41) into CompilationUnit(3958) at 20", "Insert ImportDeclaration(121) into CompilationUnit(3958) at 60", "Insert QualifiedName: com.google.template.soy.exprtree.ExprNode.PrimitiveNode(40) into ImportDeclaration(41) at 0", "Insert QualifiedName: com.google.template.soy.types.primitive.UnknownType(120) into ImportDeclaration(121) at 0", "Insert TextElement: <p>A note on how we use soy types.  We generally try to limit the places where we read type(139) into TagElement(155) at 5", "Insert TextElement: information from the AST.  This is because it tends to be not very accurate.  Specifically, the(140) into TagElement(155) at 6", "Insert TextElement: places where we rely on type information from the ast are:(141) into TagElement(155) at 7", "Insert TextElement: <ul>(142) into TagElement(155) at 8", "Insert TextElement: <li>(143) into TagElement(155) at 9", "Insert TagElement: @link(145) into TagElement(155) at 10", "Insert TextElement: <li>(146) into TagElement(155) at 11", "Insert TagElement: @link(148) into TagElement(155) at 12", "Insert TextElement: <li>(149) into TagElement(155) at 13", "Insert TagElement: @link(151) into TagElement(155) at 14", "Insert TextElement: </ul>(152) into TagElement(155) at 15", "Insert TextElement: <p>This is because these are the points that are most likely to be in direct control of the user.(153) into TagElement(155) at 16", "Insert TextElement: All other type information is derived directly from operations on SoyExpression objects.(154) into TagElement(155) at 17", "Insert SimpleName: VarRefNode(144) into TagElement: @link(145) at 0", "Insert SimpleName: PrimitiveNode(147) into TagElement: @link(148) at 0", "Insert SimpleName: DataAccessNode(150) into TagElement: @link(151) at 0", "Move MethodInvocation(1495) into ReturnStatement(1508) at 0", "Move MethodInvocation(1488) into MethodInvocation(1507) at 2", "Update SimpleName: cast(1489) to SoyExpression", "Update SimpleName: node(1490) to forSoyValue", "Move SimpleName: node(1490) into MethodInvocation(1507) at 1", "Insert QualifiedName: SoyTypes.NUMBER_TYPE(1497) into MethodInvocation(1507) at 2", "Insert QualifiedName: SoyTypes.NUMBER_TYPE(1578) into MethodInvocation(1588) at 2", "Insert QualifiedName: SoyTypes.NUMBER_TYPE(1659) into MethodInvocation(1669) at 2", "Update SimpleName: isKnownInt(1892) to assignableToNullableInt", "Update SimpleName: isKnownNumber(1940) to assignableToNullableNumber", "Insert QualifiedName: SoyTypes.NUMBER_TYPE(1994) into MethodInvocation(2001) at 2", "Update SimpleName: isKnownInt(1028) to assignableToNullableInt", "Update SimpleName: isKnownInt(1031) to assignableToNullableInt", "Update SimpleName: isKnownNumber(1054) to assignableToNullableNumber", "Update SimpleName: isKnownNumber(1057) to assignableToNullableNumber", "Update SimpleName: isKnownInt(1124) to assignableToNullableInt", "Update SimpleName: isKnownInt(1127) to assignableToNullableInt", "Update SimpleName: isKnownNumber(1150) to assignableToNullableNumber", "Update SimpleName: isKnownNumber(1153) to assignableToNullableNumber", "Update SimpleName: isKnownInt(1220) to assignableToNullableInt", "Update SimpleName: isKnownInt(1223) to assignableToNullableInt", "Update SimpleName: isKnownNumber(1246) to assignableToNullableNumber", "Update SimpleName: isKnownNumber(1249) to assignableToNullableNumber", "Update SimpleName: isKnownInt(1316) to assignableToNullableInt", "Update SimpleName: isKnownInt(1319) to assignableToNullableInt", "Update SimpleName: isKnownNumber(1342) to assignableToNullableNumber", "Update SimpleName: isKnownNumber(1345) to assignableToNullableNumber", "Update SimpleName: isKnownInt(1412) to assignableToNullableInt", "Update SimpleName: isKnownInt(1415) to assignableToNullableInt", "Update SimpleName: isKnownNumber(1427) to assignableToNullableNumber", "Update SimpleName: isKnownNumber(1430) to assignableToNullableNumber", "Update SimpleName: isKnownInt(1536) to assignableToNullableInt", "Update SimpleName: isKnownInt(1539) to assignableToNullableInt", "Update SimpleName: isKnownNumber(1551) to assignableToNullableNumber", "Update SimpleName: isKnownNumber(1554) to assignableToNullableNumber", "Update SimpleName: isKnownInt(1619) to assignableToNullableInt", "Update SimpleName: isKnownInt(1622) to assignableToNullableInt", "Update SimpleName: isKnownNumber(1634) to assignableToNullableNumber", "Update SimpleName: isKnownNumber(1637) to assignableToNullableNumber", "Update SimpleName: node(2389) to UnknownType", "Update SimpleName: getType(2390) to getInstance", "Insert MethodInvocation(2405) into MethodInvocation(2414) at 1", "Insert MethodInvocation(2413) into MethodInvocation(2414) at 2", "Insert TypeLiteral(2693) into MethodInvocation(2694) at 2", "Insert TypeLiteral(2707) into MethodInvocation(2708) at 2", "Update SimpleName: node(2708) to UnknownType", "Update SimpleName: getType(2709) to getInstance", "Update SimpleName: SoyExpression(3254) to childExpr", "Update SimpleName: node(3256) to withSource", "Move SimpleName: node(3256) into MethodInvocation(3319) at 1", "Move MethodInvocation(2395) into MethodInvocation(2405) at 0", "Insert SimpleName: cast(2401) into MethodInvocation(2405) at 1", "Insert TypeLiteral(2404) into MethodInvocation(2405) at 2", "Move MethodInvocation(2398) into MethodInvocation(2413) at 0", "Insert SimpleName: cast(2409) into MethodInvocation(2413) at 1", "Insert TypeLiteral(2412) into MethodInvocation(2413) at 2", "Move SimpleType: SoyValue(2671) into TypeLiteral(2693) at 0", "Insert SimpleType: SoyValue(2706) into TypeLiteral(2707) at 0", "Insert MethodInvocation(3265) into ClassInstanceCreation(3318) at 1", "Insert SimpleType: SoyValue(2403) into TypeLiteral(2404) at 0", "Insert SimpleType: SoyValue(2411) into TypeLiteral(2412) at 0", "Insert SimpleName: SoyValue(2705) into SimpleType: SoyValue(2706) at 0", "Update SimpleName: node(3263) to childExpr", "Move SimpleName: node(3263) into MethodInvocation(3265) at 0", "Update SimpleName: getType(3264) to resultType", "Move SimpleName: getType(3264) into MethodInvocation(3265) at 1", "Insert SimpleName: SoyValue(2402) into SimpleType: SoyValue(2403) at 0", "Insert SimpleName: SoyValue(2410) into SimpleType: SoyValue(2411) at 0", "Delete SimpleName: getType(1491)", "Delete MethodInvocation(1492)", "Delete SimpleName: javaType(1493)", "Delete MethodInvocation(1494)", "Delete SimpleName: SoyExpression(1475)", "Delete SimpleName: forSoyValue(1476)", "Delete SimpleName: node(1477)", "Delete SimpleName: getType(1478)", "Delete MethodInvocation(1479)", "Delete MethodInvocation(1496)", "Delete SimpleName: node(1567)", "Delete SimpleName: getType(1568)", "Delete MethodInvocation(1569)", "Delete SimpleName: node(1650)", "Delete SimpleName: getType(1651)", "Delete MethodInvocation(1652)", "Delete SimpleName: node(1987)", "Delete SimpleName: getType(1988)", "Delete MethodInvocation(1989)", "Delete SimpleName: Class(2668)", "Delete SimpleType: Class(2669)", "Delete WildcardType: ? extends SoyValue(2672)", "Delete ParameterizedType: Class<? extends SoyValue>(2673)", "Delete SimpleName: javaType(2674)", "Delete SimpleName: node(2675)", "Delete SimpleName: getType(2676)", "Delete MethodInvocation(2677)", "Delete SimpleName: javaType(2678)", "Delete MethodInvocation(2679)", "Delete VariableDeclarationFragment(2680)", "Delete VariableDeclarationStatement(2681)", "Delete SimpleName: javaType(2690)", "Delete SimpleName: javaType(2702)", "Delete SimpleName: forSoyValue(3255)", "Delete SimpleName: getType(3257)", "Delete MethodInvocation(3258)", "Delete SimpleName: Type(3261)", "Delete SimpleName: getType(3262)", "Delete MethodInvocation(3265)", "Delete SimpleName: javaType(3266)", "Delete MethodInvocation(3267)", "Delete MethodInvocation(3268)"]}}, {"PluginFunctionCompiler_cluster": {"actions": [{"root": "UPDATE from isKnownInt to assignableToNullableInt", "operations": ["UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt", "UPD SimpleName: isKnownInt from isKnownInt to assignableToNullableInt"]}, {"root": "UPDATE from isKnownFloat to assignableToNullableFloat", "operations": ["UPD SimpleName: isKnownFloat from isKnownFloat to assignableToNullableFloat", "UPD SimpleName: isKnownFloat from isKnownFloat to assignableToNullableFloat", "UPD SimpleName: isKnownFloat from isKnownFloat to assignableToNullableFloat", "UPD SimpleName: isKnownFloat from isKnownFloat to assignableToNullableFloat", "UPD SimpleName: isKnownFloat from isKnownFloat to assignableToNullableFloat"]}, {"root": "UPDATE from node to UnknownType", "operations": ["UPD SimpleName: node from node to UnknownType"]}, {"root": "UPDATE from getType to getInstance", "operations": ["UPD SimpleName: getType from getType to getInstance"]}]}}, {"PluginFunctionCompiler_diff": {"operations": ["Update SimpleName: isKnownInt(1436) to assignableToNullableInt", "Update SimpleName: isKnownFloat(1443) to assignableToNullableFloat", "Update SimpleName: isKnownInt(1247) to assignableToNullableInt", "Update SimpleName: isKnownInt(1250) to assignableToNullableInt", "Update SimpleName: isKnownInt(1331) to assignableToNullableInt", "Update SimpleName: isKnownInt(1334) to assignableToNullableInt", "Update SimpleName: node(1550) to UnknownType", "Update SimpleName: getType(1551) to getInstance", "Update SimpleName: isKnownFloat(1272) to assignableToNullableFloat", "Update SimpleName: isKnownFloat(1275) to assignableToNullableFloat", "Update SimpleName: isKnownFloat(1356) to assignableToNullableFloat", "Update SimpleName: isKnownFloat(1359) to assignableToNullableFloat"]}}, {"SoyExpression_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 27", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 27", "INS ReturnStatement to Block at 0", "INS SimpleName: getInstance to MethodInvocation at 1", "INS PrimitiveType: boolean to MethodDeclaration at 0", "INS SimpleName: IntType to MethodInvocation at 0", "INS Block to MethodDeclaration at 2", "INS MethodInvocation to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: assignableToNullableInt to MethodDeclaration at 1", "INS SimpleName: assignableToNullableType to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 28", "operations": ["INS SimpleName: assignableToNullableFloat to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 28", "INS Block to MethodDeclaration at 2", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: assignableToNullableType to MethodInvocation at 0", "INS SimpleName: getInstance to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: FloatType to MethodInvocation at 0", "INS PrimitiveType: boolean to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 29", "operations": ["INS SimpleName: assignableToNullableType to MethodInvocation at 0", "INS Block to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 29", "INS QualifiedName: SoyTypes.NUMBER_TYPE to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: assignableToNullableNumber to MethodDeclaration at 1", "INS PrimitiveType: boolean to MethodDeclaration at 0", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 30", "operations": ["INS SimpleName: removeNull to MethodInvocation at 1", "INS SimpleName: soyType to MethodInvocation at 2", "INS QualifiedName: Kind.UNION to InfixExpression: == at 1", "INS SimpleName: soyType to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 30", "INS MethodInvocation to InfixExpression: || at 0", "INS ParenthesizedExpression to InfixExpression: || at 1", "INS InfixExpression: && to ParenthesizedExpression at 0", "INS SimpleName: getKind to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: SoyType to SimpleType: SoyType at 0", "INS SimpleName: SoyTypes to MethodInvocation at 0", "INS SimpleName: type to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: && at 1", "INS InfixExpression: == to InfixExpression: && at 0", "INS SimpleName: assignableToNullableType to MethodDeclaration at 2", "INS Modifier: private to MethodDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: isAssignableFrom to MethodInvocation at 1", "INS SimpleName: soyType to MethodInvocation at 2", "INS InfixExpression: || to ReturnStatement at 0", "INS SimpleType: SoyType to SingleVariableDeclaration at 0", "INS SimpleName: isAssignableFrom to MethodInvocation at 1", "INS SimpleName: type to MethodInvocation at 0", "INS SimpleName: type to SingleVariableDeclaration at 1", "INS MethodInvocation to InfixExpression: == at 0", "INS Block to MethodDeclaration at 4", "INS ReturnStatement to Block at 0"]}, {"root": "UPDATE from \"Trying to unbox an unboxed value doesn't make sense, \" to \"Trying to unbox an unboxed value (\"", "operations": ["UPD StringLiteral: \"Trying to unbox an unboxed value doesn't make sense, \" from \"Trying to unbox an unboxed value doesn't make sense, \" to \"Trying to unbox an unboxed value (\""]}, {"root": "INS SimpleName: clazz to InfixExpression: + at 1", "operations": ["INS SimpleName: clazz to InfixExpression: + at 1"]}, {"root": "INS StringLiteral: \") doesn't make sense, \" to InfixExpression: + at 2", "operations": ["INS StringLiteral: \") doesn't make sense, \" to InfixExpression: + at 2"]}]}}, {"SoyExpression_diff": {"operations": ["Insert MethodDeclaration(711) into TypeDeclaration: class(2249) at 27", "Insert MethodDeclaration(721) into TypeDeclaration: class(2249) at 28", "Insert MethodDeclaration(729) into TypeDeclaration: class(2249) at 29", "Insert MethodDeclaration(758) into TypeDeclaration: class(2249) at 30", "Insert PrimitiveType: boolean(702) into MethodDeclaration(711) at 0", "Insert SimpleName: assignableToNullableInt(703) into MethodDeclaration(711) at 1", "Insert Block(710) into MethodDeclaration(711) at 2", "Insert PrimitiveType: boolean(712) into MethodDeclaration(721) at 0", "Insert SimpleName: assignableToNullableFloat(713) into MethodDeclaration(721) at 1", "Insert Block(720) into MethodDeclaration(721) at 2", "Insert PrimitiveType: boolean(722) into MethodDeclaration(729) at 0", "Insert SimpleName: assignableToNullableNumber(723) into MethodDeclaration(729) at 1", "Insert Block(728) into MethodDeclaration(729) at 2", "Insert Modifier: private(730) into MethodDeclaration(758) at 0", "Insert PrimitiveType: boolean(731) into MethodDeclaration(758) at 1", "Insert SimpleName: assignableToNullableType(732) into MethodDeclaration(758) at 2", "Insert SingleVariableDeclaration(736) into MethodDeclaration(758) at 3", "Insert Block(757) into MethodDeclaration(758) at 4", "Insert ReturnStatement(709) into Block(710) at 0", "Insert ReturnStatement(719) into Block(720) at 0", "Insert ReturnStatement(727) into Block(728) at 0", "Insert SimpleType: SoyType(734) into SingleVariableDeclaration(736) at 0", "Insert SimpleName: type(735) into SingleVariableDeclaration(736) at 1", "Insert ReturnStatement(756) into Block(757) at 0", "Insert MethodInvocation(708) into ReturnStatement(709) at 0", "Insert MethodInvocation(718) into ReturnStatement(719) at 0", "Insert MethodInvocation(726) into ReturnStatement(727) at 0", "Insert SimpleName: SoyType(733) into SimpleType: SoyType(734) at 0", "Insert InfixExpression: ||(755) into ReturnStatement(756) at 0", "Insert SimpleName: assignableToNullableType(704) into MethodInvocation(708) at 0", "Insert MethodInvocation(707) into MethodInvocation(708) at 1", "Insert SimpleName: assignableToNullableType(714) into MethodInvocation(718) at 0", "Insert MethodInvocation(717) into MethodInvocation(718) at 1", "Insert SimpleName: assignableToNullableType(724) into MethodInvocation(726) at 0", "Insert QualifiedName: SoyTypes.NUMBER_TYPE(725) into MethodInvocation(726) at 1", "Insert MethodInvocation(740) into InfixExpression: ||(755) at 0", "Insert ParenthesizedExpression(754) into InfixExpression: ||(755) at 1", "Insert SimpleName: IntType(705) into MethodInvocation(707) at 0", "Insert SimpleName: getInstance(706) into MethodInvocation(707) at 1", "Insert SimpleName: FloatType(715) into MethodInvocation(717) at 0", "Insert SimpleName: getInstance(716) into MethodInvocation(717) at 1", "Insert SimpleName: type(737) into MethodInvocation(740) at 0", "Insert SimpleName: isAssignableFrom(738) into MethodInvocation(740) at 1", "Insert SimpleName: soyType(739) into MethodInvocation(740) at 2", "Insert InfixExpression: &&(753) into ParenthesizedExpression(754) at 0", "Insert InfixExpression: ==(745) into InfixExpression: &&(753) at 0", "Insert MethodInvocation(752) into InfixExpression: &&(753) at 1", "Insert MethodInvocation(743) into InfixExpression: ==(745) at 0", "Insert QualifiedName: Kind.UNION(744) into InfixExpression: ==(745) at 1", "Insert SimpleName: type(746) into MethodInvocation(752) at 0", "Insert SimpleName: isAssignableFrom(747) into MethodInvocation(752) at 1", "Insert MethodInvocation(751) into MethodInvocation(752) at 2", "Update StringLiteral: \"Trying to unbox an unboxed value doesn't make sense, \"(1463) to \"Trying to unbox an unboxed value (\"", "Insert SimpleName: clazz(1521) into InfixExpression: +(1524) at 1", "Insert StringLiteral: \") doesn't make sense, \"(1522) into InfixExpression: +(1524) at 2", "Insert SimpleName: soyType(741) into MethodInvocation(743) at 0", "Insert SimpleName: getKind(742) into MethodInvocation(743) at 1", "Insert SimpleName: SoyTypes(748) into MethodInvocation(751) at 0", "Insert SimpleName: removeNull(749) into MethodInvocation(751) at 1", "Insert SimpleName: soyType(750) into MethodInvocation(751) at 2"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}