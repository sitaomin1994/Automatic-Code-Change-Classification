{"application": "apache-mina", "csha": "a65aaa26f30236f5fdfe1427364d479f19c0db2b", "files": [{"NioSelectorProcessor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 19", "operations": ["INS QualifiedName: org.apache.mina.api.RuntimeIoException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 19"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 9", "MOV TypeDeclaration: class to TypeDeclaration: class at 25"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS CastExpression to MethodInvocation at 2", "INS TagElement to Javadoc at 0", "INS SimpleName: NioTcpSession to SimpleType: NioTcpSession at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: session to CastExpression at 1", "INS StringLiteral: \"scheduling session {} for close\" to MethodInvocation at 2", "INS TagElement: @inheritDoc to TagElement at 0", "INS SimpleName: IoSession to SimpleType: IoSession at 0", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: sessionsToClose to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS Javadoc to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS SimpleName: wakeupWorker to MethodInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 3", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleType: NioTcpSession to CastExpression at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: scheduleForClose to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Block to MethodDeclaration at 6", "INS SimpleName: session to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: session to SingleVariableDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: LOGGER to MethodInvocation at 0", "INS SimpleType: IoSession to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement: FIXME : too much locking there ? to TagElement at 1", "INS TextElement: Wake the I/O worker thread and if none exists, create a new one to TagElement at 0", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @inheritDoc to TagElement at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @inheritDoc to TagElement at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @inheritDoc to TagElement at 0"]}, {"root": "INS TextElement: jvermillard : FIXME the typing is ugly !!! to TagElement at 1", "operations": ["INS TextElement: jvermillard : FIXME the typing is ugly !!! to TagElement at 1"]}, {"root": "UPDATE from The worker processing incoming session creation and destruction requests. to The worker processing incoming session creation, session destruction requests, session write and reads.", "operations": ["UPD TextElement: The worker processing incoming session creation and destruction requests. from The worker processing incoming session creation and destruction requests. to The worker processing incoming session creation, session destruction requests, session write and reads."]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: session to MethodInvocation at 3"]}, {"root": "INS ThrowStatement to Block at 1", "operations": ["INS ClassInstanceCreation to ThrowStatement at 0", "INS StringLiteral: \"cannot configure socket as non-blocking\" to ClassInstanceCreation at 1", "INS ThrowStatement to Block at 1", "INS SimpleName: e to ClassInstanceCreation at 2", "INS SimpleName: RuntimeIoException to SimpleType: RuntimeIoException at 0", "INS SimpleType: RuntimeIoException to ClassInstanceCreation at 0"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: DefaultWriteFuture to VariableDeclarationStatement at 0", "INS SimpleName: future to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1", "INS IfStatement to Block at 4", "INS SimpleName: DefaultWriteFuture to SimpleType: DefaultWriteFuture at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0", "MOV Block to IfStatement at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 2"]}, {"root": "INS InfixExpression: != to IfStatement at 0", "operations": ["INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: future to InfixExpression: != at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV CastExpression to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: future to MethodInvocation at 0", "operations": ["INS SimpleName: future to MethodInvocation at 0"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: toString"]}, {"root": "DEL ParenthesizedExpression", "operations": ["DEL ParenthesizedExpression"]}]}}, {"NioSelectorProcessor_diff": {"operations": ["Insert ImportDeclaration(39) into CompilationUnit(1623) at 19", "Move FieldDeclaration(311) into TypeDeclaration: class(1622) at 9", "Move TypeDeclaration: class(1527) into TypeDeclaration: class(1622) at 25", "Insert QualifiedName: org.apache.mina.api.RuntimeIoException(38) into ImportDeclaration(39) at 0", "Insert MethodDeclaration(816) into TypeDeclaration: class(1622) at 24", "Insert Javadoc(318) into MethodDeclaration(358) at 0", "Insert Javadoc(361) into MethodDeclaration(428) at 0", "Insert Javadoc(431) into MethodDeclaration(491) at 0", "Insert Javadoc(494) into MethodDeclaration(754) at 0", "Insert Javadoc(788) into MethodDeclaration(816) at 0", "Insert MarkerAnnotation(790) into MethodDeclaration(816) at 1", "Insert Modifier: public(791) into MethodDeclaration(816) at 2", "Insert PrimitiveType: void(792) into MethodDeclaration(816) at 3", "Insert SimpleName: scheduleForClose(793) into MethodDeclaration(816) at 4", "Insert SingleVariableDeclaration(797) into MethodDeclaration(816) at 5", "Insert Block(815) into MethodDeclaration(816) at 6", "Insert TagElement(317) into Javadoc(318) at 0", "Insert TagElement(360) into Javadoc(361) at 0", "Insert TagElement(430) into Javadoc(431) at 0", "Insert TagElement(493) into Javadoc(494) at 0", "Insert TagElement(787) into Javadoc(788) at 0", "Insert SimpleName: Override(789) into MarkerAnnotation(790) at 0", "Insert SimpleType: IoSession(795) into SingleVariableDeclaration(797) at 0", "Insert SimpleName: session(796) into SingleVariableDeclaration(797) at 1", "Insert ExpressionStatement(803) into Block(815) at 0", "Insert ExpressionStatement(811) into Block(815) at 1", "Insert ExpressionStatement(814) into Block(815) at 2", "Insert TextElement: jvermillard : FIXME the typing is ugly !!!(136) into TagElement(137) at 1", "Insert TextElement: Wake the I/O worker thread and if none exists, create a new one(315) into TagElement(317) at 0", "Insert TextElement: FIXME : too much locking there ?(316) into TagElement(317) at 1", "Insert TagElement: @inheritDoc(359) into TagElement(360) at 0", "Insert TagElement: @inheritDoc(429) into TagElement(430) at 0", "Insert TagElement: @inheritDoc(492) into TagElement(493) at 0", "Insert TagElement: @inheritDoc(786) into TagElement(787) at 0", "Insert SimpleName: IoSession(794) into SimpleType: IoSession(795) at 0", "Insert MethodInvocation(802) into ExpressionStatement(803) at 0", "Insert MethodInvocation(810) into ExpressionStatement(811) at 0", "Insert MethodInvocation(813) into ExpressionStatement(814) at 0", "Update TextElement: The worker processing incoming session creation and destruction requests.(733) to The worker processing incoming session creation, session destruction requests, session write and reads.", "Move SimpleName: session(1543) into MethodInvocation(771) at 3", "Insert SimpleName: LOGGER(798) into MethodInvocation(802) at 0", "Insert SimpleName: debug(799) into MethodInvocation(802) at 1", "Insert StringLiteral: \"scheduling session {} for close\"(800) into MethodInvocation(802) at 2", "Insert SimpleName: session(801) into MethodInvocation(802) at 3", "Insert SimpleName: sessionsToClose(804) into MethodInvocation(810) at 0", "Insert SimpleName: add(805) into MethodInvocation(810) at 1", "Insert CastExpression(809) into MethodInvocation(810) at 2", "Insert SimpleName: wakeupWorker(812) into MethodInvocation(813) at 0", "Insert ThrowStatement(574) into Block(575) at 1", "Insert SimpleType: NioTcpSession(807) into CastExpression(809) at 0", "Insert SimpleName: session(808) into CastExpression(809) at 1", "Insert ClassInstanceCreation(573) into ThrowStatement(574) at 0", "Insert SimpleName: NioTcpSession(806) into SimpleType: NioTcpSession(807) at 0", "Insert SimpleType: RuntimeIoException(570) into ClassInstanceCreation(573) at 0", "Insert StringLiteral: \"cannot configure socket as non-blocking\"(571) into ClassInstanceCreation(573) at 1", "Insert SimpleName: e(572) into ClassInstanceCreation(573) at 2", "Insert SimpleName: RuntimeIoException(569) into SimpleType: RuntimeIoException(570) at 0", "Insert IfStatement(1377) into Block(1378) at 4", "Move InfixExpression: ==(1265) into IfStatement(1377) at 0", "Insert Block(1374) into IfStatement(1377) at 1", "Move Block(1282) into IfStatement(1377) at 2", "Move ExpressionStatement(1269) into Block(1374) at 0", "Insert VariableDeclarationStatement(1364) into Block(1374) at 1", "Move IfStatement(1283) into Block(1374) at 2", "Insert SimpleType: DefaultWriteFuture(1355) into VariableDeclarationStatement(1364) at 0", "Insert VariableDeclarationFragment(1363) into VariableDeclarationStatement(1364) at 1", "Insert InfixExpression: !=(1367) into IfStatement(1373) at 0", "Insert SimpleName: DefaultWriteFuture(1354) into SimpleType: DefaultWriteFuture(1355) at 0", "Insert SimpleName: future(1356) into VariableDeclarationFragment(1363) at 0", "Move CastExpression(1275) into VariableDeclarationFragment(1363) at 1", "Insert SimpleName: future(1365) into InfixExpression: !=(1367) at 0", "Insert NullLiteral(1366) into InfixExpression: !=(1367) at 1", "Insert SimpleName: future(1368) into MethodInvocation(1370) at 0", "Delete SimpleName: toString(1544)", "Delete MethodInvocation(1545)", "Delete ParenthesizedExpression(1276)"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}