{"application": "apache-httpclient", "csha": "e2e564a1a198ed7cf7a6460f8bfb0a7f64b594f1", "files": [{"ClientCustomContext_cluster": {"actions": [{"root": "UPDATE from org.apache.http.client.protocol.ClientContext to org.apache.http.client.protocol.HttpClientContext", "operations": ["UPD QualifiedName: org.apache.http.client.protocol.ClientContext from org.apache.http.client.protocol.ClientContext to org.apache.http.client.protocol.HttpClientContext"]}, {"root": "UPDATE from HttpContext to HttpClientContext", "operations": ["UPD SimpleType: HttpContext from HttpContext to HttpClientContext", "UPD SimpleName: HttpContext from HttpContext to HttpClientContext"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: create to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: HttpClientContext to MethodInvocation at 0"]}, {"root": "UPDATE from setAttribute to setCookieStore", "operations": ["UPD SimpleName: setAttribute from setAttribute to setCookieStore"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.http.protocol.BasicHttpContext"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.http.protocol.HttpContext", "DEL ImportDeclaration"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: BasicHttpContext", "DEL SimpleType: BasicHttpContext"]}, {"root": "DEL QualifiedName: ClientContext.COOKIE_STORE", "operations": ["DEL QualifiedName: ClientContext.COOKIE_STORE"]}]}}, {"ClientCustomContext_diff": {"operations": ["Update QualifiedName: org.apache.http.client.protocol.ClientContext(12) to org.apache.http.client.protocol.HttpClientContext", "Update SimpleType: HttpContext(64) to HttpClientContext", "Update SimpleName: HttpContext(63) to HttpClientContext", "Insert MethodInvocation(64) into VariableDeclarationFragment(65) at 1", "Update SimpleName: setAttribute(72) to setCookieStore", "Insert SimpleName: HttpClientContext(62) into MethodInvocation(64) at 0", "Insert SimpleName: create(63) into MethodInvocation(64) at 1", "Delete QualifiedName: org.apache.http.protocol.BasicHttpContext(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.http.protocol.HttpContext(24)", "Delete ImportDeclaration(25)", "Delete SimpleName: BasicHttpContext(66)", "Delete SimpleType: BasicHttpContext(67)", "Delete ClassInstanceCreation(68)", "Delete QualifiedName: ClientContext.COOKIE_STORE(73)"]}}, {"ClientInteractiveAuthentication_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 14"]}, {"root": "UPDATE from org.apache.http.client.protocol.ClientContext to org.apache.http.client.protocol.HttpClientContext", "operations": ["UPD QualifiedName: org.apache.http.client.protocol.ClientContext from org.apache.http.client.protocol.ClientContext to org.apache.http.client.protocol.HttpClientContext"]}, {"root": "UPDATE from org.apache.http.protocol.HttpContext to org.apache.http.conn.routing.RouteInfo", "operations": ["UPD QualifiedName: org.apache.http.protocol.HttpContext from org.apache.http.protocol.HttpContext to org.apache.http.conn.routing.RouteInfo"]}, {"root": "UPDATE from HttpContext to HttpClientContext", "operations": ["UPD SimpleType: HttpContext from HttpContext to HttpClientContext", "UPD SimpleName: HttpContext from HttpContext to HttpClientContext"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: create to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: HttpClientContext to MethodInvocation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 5", "operations": ["INS SimpleType: RouteInfo to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: localContext to MethodInvocation at 0", "INS SimpleName: getHttpRoute to MethodInvocation at 1", "INS SimpleName: route to VariableDeclarationFragment at 0", "INS SimpleName: RouteInfo to SimpleType: RouteInfo at 0"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: localContext to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getTargetAuthState", "operations": ["UPD SimpleName: getAttribute from getAttribute to getTargetAuthState"]}, {"root": "UPDATE from localContext to route", "operations": ["UPD SimpleName: localContext from localContext to route", "UPD SimpleName: localContext from localContext to route"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: localContext to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getTargetHost", "operations": ["UPD SimpleName: getAttribute from getAttribute to getTargetHost"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: localContext to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getProxyAuthState", "operations": ["UPD SimpleName: getAttribute from getAttribute to getProxyAuthState"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: localContext to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getProxyHost", "operations": ["UPD SimpleName: getAttribute from getAttribute to getProxyHost"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.http.protocol.BasicHttpContext"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.http.protocol.ExecutionContext", "DEL ImportDeclaration"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: BasicHttpContext", "DEL ClassInstanceCreation", "DEL SimpleType: BasicHttpContext"]}, {"root": "DEL CastExpression", "operations": ["DEL MethodInvocation", "DEL QualifiedName: ClientContext.TARGET_AUTH_STATE", "DEL SimpleType: AuthState", "DEL SimpleName: AuthState", "DEL CastExpression"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression", "DEL MethodInvocation", "DEL SimpleType: HttpHost", "DEL SimpleName: HttpHost", "DEL QualifiedName: ExecutionContext.HTTP_TARGET_HOST"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression", "DEL SimpleName: AuthState", "DEL QualifiedName: ClientContext.PROXY_AUTH_STATE", "DEL MethodInvocation", "DEL SimpleType: AuthState"]}, {"root": "DEL CastExpression", "operations": ["DEL MethodInvocation", "DEL QualifiedName: ExecutionContext.HTTP_PROXY_HOST", "DEL SimpleName: HttpHost", "DEL CastExpression", "DEL SimpleType: HttpHost"]}]}}, {"ClientInteractiveAuthentication_diff": {"operations": ["Move ImportDeclaration(39) into CompilationUnit(339) at 14", "Update QualifiedName: org.apache.http.client.protocol.ClientContext(26) to org.apache.http.client.protocol.HttpClientContext", "Update QualifiedName: org.apache.http.protocol.HttpContext(38) to org.apache.http.conn.routing.RouteInfo", "Update SimpleType: HttpContext(82) to HttpClientContext", "Update SimpleName: HttpContext(81) to HttpClientContext", "Insert MethodInvocation(82) into VariableDeclarationFragment(83) at 1", "Insert SimpleName: HttpClientContext(80) into MethodInvocation(82) at 0", "Insert SimpleName: create(81) into MethodInvocation(82) at 1", "Insert VariableDeclarationStatement(160) into Block(320) at 5", "Insert SimpleType: RouteInfo(154) into VariableDeclarationStatement(160) at 0", "Insert VariableDeclarationFragment(159) into VariableDeclarationStatement(160) at 1", "Insert SimpleName: RouteInfo(153) into SimpleType: RouteInfo(154) at 0", "Insert SimpleName: route(155) into VariableDeclarationFragment(159) at 0", "Insert MethodInvocation(158) into VariableDeclarationFragment(159) at 1", "Insert SimpleName: localContext(156) into MethodInvocation(158) at 0", "Insert SimpleName: getHttpRoute(157) into MethodInvocation(158) at 1", "Insert MethodInvocation(179) into Assignment: =(180) at 1", "Insert MethodInvocation(185) into Assignment: =(186) at 1", "Insert MethodInvocation(196) into Assignment: =(197) at 1", "Insert MethodInvocation(202) into Assignment: =(203) at 1", "Move SimpleName: localContext(175) into MethodInvocation(179) at 0", "Update SimpleName: getAttribute(176) to getTargetAuthState", "Move SimpleName: getAttribute(176) into MethodInvocation(179) at 1", "Update SimpleName: localContext(185) to route", "Move SimpleName: localContext(185) into MethodInvocation(185) at 0", "Update SimpleName: getAttribute(186) to getTargetHost", "Move SimpleName: getAttribute(186) into MethodInvocation(185) at 1", "Move SimpleName: localContext(200) into MethodInvocation(196) at 0", "Update SimpleName: getAttribute(201) to getProxyAuthState", "Move SimpleName: getAttribute(201) into MethodInvocation(196) at 1", "Update SimpleName: localContext(210) to route", "Move SimpleName: localContext(210) into MethodInvocation(202) at 0", "Update SimpleName: getAttribute(211) to getProxyHost", "Move SimpleName: getAttribute(211) into MethodInvocation(202) at 1", "Delete QualifiedName: org.apache.http.protocol.BasicHttpContext(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.http.protocol.ExecutionContext(36)", "Delete ImportDeclaration(37)", "Delete SimpleName: BasicHttpContext(84)", "Delete SimpleType: BasicHttpContext(85)", "Delete ClassInstanceCreation(86)", "Delete SimpleName: AuthState(173)", "Delete SimpleType: AuthState(174)", "Delete QualifiedName: ClientContext.TARGET_AUTH_STATE(177)", "Delete MethodInvocation(178)", "Delete CastExpression(179)", "Delete SimpleName: HttpHost(183)", "Delete SimpleType: HttpHost(184)", "Delete QualifiedName: ExecutionContext.HTTP_TARGET_HOST(187)", "Delete MethodInvocation(188)", "Delete CastExpression(189)", "Delete SimpleName: AuthState(198)", "Delete SimpleType: AuthState(199)", "Delete QualifiedName: ClientContext.PROXY_AUTH_STATE(202)", "Delete MethodInvocation(203)", "Delete CastExpression(204)", "Delete SimpleName: HttpHost(208)", "Delete SimpleType: HttpHost(209)", "Delete QualifiedName: ExecutionContext.HTTP_PROXY_HOST(212)", "Delete MethodInvocation(213)", "Delete CastExpression(214)"]}}, {"ClientPreemptiveBasicAuthentication_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: org.apache.http.client.protocol.HttpClientContext to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "UPDATE from BasicHttpContext to HttpClientContext", "operations": ["UPD SimpleType: BasicHttpContext from BasicHttpContext to HttpClientContext", "UPD SimpleName: BasicHttpContext from BasicHttpContext to HttpClientContext"]}, {"root": "UPDATE from localcontext to localContext", "operations": ["UPD SimpleName: localcontext from localcontext to localContext", "UPD SimpleName: localcontext from localcontext to localContext", "UPD SimpleName: localcontext from localcontext to localContext"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: create to MethodInvocation at 1", "INS SimpleName: HttpClientContext to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from setAttribute to setAuthCache", "operations": ["UPD SimpleName: setAttribute from setAttribute to setAuthCache"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: BasicHttpContext", "DEL SimpleType: BasicHttpContext"]}, {"root": "DEL QualifiedName: ClientContext.AUTH_CACHE", "operations": ["DEL QualifiedName: ClientContext.AUTH_CACHE"]}]}}, {"ClientPreemptiveBasicAuthentication_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(247) at 10", "Insert QualifiedName: org.apache.http.client.protocol.HttpClientContext(20) into ImportDeclaration(21) at 0", "Update SimpleType: BasicHttpContext(129) to HttpClientContext", "Update SimpleName: BasicHttpContext(128) to HttpClientContext", "Update SimpleName: localcontext(130) to localContext", "Insert MethodInvocation(135) into VariableDeclarationFragment(136) at 1", "Update SimpleName: localcontext(136) to localContext", "Update SimpleName: setAttribute(137) to setAuthCache", "Insert SimpleName: HttpClientContext(133) into MethodInvocation(135) at 0", "Insert SimpleName: create(134) into MethodInvocation(135) at 1", "Update SimpleName: localcontext(184) to localContext", "Delete SimpleName: BasicHttpContext(131)", "Delete SimpleType: BasicHttpContext(132)", "Delete ClassInstanceCreation(133)", "Delete QualifiedName: ClientContext.AUTH_CACHE(138)"]}}, {"ClientPreemptiveDigestAuthentication_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: org.apache.http.client.protocol.HttpClientContext to ImportDeclaration at 0"]}, {"root": "UPDATE from BasicHttpContext to HttpClientContext", "operations": ["UPD SimpleType: BasicHttpContext from BasicHttpContext to HttpClientContext", "UPD SimpleName: BasicHttpContext from BasicHttpContext to HttpClientContext"]}, {"root": "UPDATE from localcontext to localContext", "operations": ["UPD SimpleName: localcontext from localcontext to localContext", "UPD SimpleName: localcontext from localcontext to localContext", "UPD SimpleName: localcontext from localcontext to localContext"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: HttpClientContext to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: create to MethodInvocation at 1"]}, {"root": "UPDATE from setAttribute to setAuthCache", "operations": ["UPD SimpleName: setAttribute from setAttribute to setAuthCache"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: BasicHttpContext", "DEL ClassInstanceCreation", "DEL SimpleType: BasicHttpContext"]}, {"root": "DEL QualifiedName: ClientContext.AUTH_CACHE", "operations": ["DEL QualifiedName: ClientContext.AUTH_CACHE"]}]}}, {"ClientPreemptiveDigestAuthentication_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(259) at 10", "Insert QualifiedName: org.apache.http.client.protocol.HttpClientContext(20) into ImportDeclaration(21) at 0", "Update SimpleType: BasicHttpContext(141) to HttpClientContext", "Update SimpleName: BasicHttpContext(140) to HttpClientContext", "Update SimpleName: localcontext(142) to localContext", "Insert MethodInvocation(147) into VariableDeclarationFragment(148) at 1", "Update SimpleName: localcontext(148) to localContext", "Update SimpleName: setAttribute(149) to setAuthCache", "Insert SimpleName: HttpClientContext(145) into MethodInvocation(147) at 0", "Insert SimpleName: create(146) into MethodInvocation(147) at 1", "Update SimpleName: localcontext(196) to localContext", "Delete SimpleName: BasicHttpContext(143)", "Delete SimpleType: BasicHttpContext(144)", "Delete ClassInstanceCreation(145)", "Delete QualifiedName: ClientContext.AUTH_CACHE(150)"]}}, {"HttpClientConnectionManager_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.http.conn.scheme.SchemeRegistry"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.http.params.HttpParams"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: getSchemeRegistry", "DEL SimpleType: SchemeRegistry", "DEL SimpleName: SchemeRegistry", "DEL MethodDeclaration"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: HttpParams", "DEL SimpleName: params", "DEL SimpleType: HttpParams"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: params", "DEL SimpleName: HttpParams", "DEL SimpleType: HttpParams", "DEL SingleVariableDeclaration"]}]}}, {"HttpClientConnectionManager_diff": {"operations": ["Delete QualifiedName: org.apache.http.conn.scheme.SchemeRegistry(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: org.apache.http.params.HttpParams(16)", "Delete ImportDeclaration(17)", "Delete SimpleName: SchemeRegistry(36)", "Delete SimpleType: SchemeRegistry(37)", "Delete SimpleName: getSchemeRegistry(38)", "Delete MethodDeclaration(39)", "Delete SimpleName: HttpParams(119)", "Delete SimpleType: HttpParams(120)", "Delete SimpleName: params(121)", "Delete SingleVariableDeclaration(122)", "Delete SimpleName: HttpParams(140)", "Delete SimpleType: HttpParams(141)", "Delete SimpleName: params(142)", "Delete SingleVariableDeclaration(143)"]}}, {"HttpConnectionFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: org.apache.http.config.ConnectionConfig to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 2", "operations": ["INS SimpleName: config to SingleVariableDeclaration at 1", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 0", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2"]}]}}, {"HttpConnectionFactory_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(29) at 2", "Insert QualifiedName: org.apache.http.config.ConnectionConfig(4) into ImportDeclaration(5) at 0", "Insert SingleVariableDeclaration(26) into MethodDeclaration(27) at 2", "Insert SimpleType: ConnectionConfig(24) into SingleVariableDeclaration(26) at 0", "Insert SimpleName: config(25) into SingleVariableDeclaration(26) at 1", "Insert SimpleName: ConnectionConfig(23) into SimpleType: ConnectionConfig(24) at 0"]}}, {"Executor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS QualifiedName: org.apache.http.conn.socket.LayeredConnectionSocketFactory to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 21"]}, {"root": "UPDATE from org.apache.http.conn.scheme.PlainSocketFactory to org.apache.http.config.Registry", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.PlainSocketFactory from org.apache.http.conn.scheme.PlainSocketFactory to org.apache.http.config.Registry"]}, {"root": "UPDATE from org.apache.http.conn.scheme.Scheme to org.apache.http.config.RegistryBuilder", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.Scheme from org.apache.http.conn.scheme.Scheme to org.apache.http.config.RegistryBuilder"]}, {"root": "UPDATE from org.apache.http.conn.scheme.SchemeRegistry to org.apache.http.conn.socket.ConnectionSocketFactory", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.SchemeRegistry from org.apache.http.conn.scheme.SchemeRegistry to org.apache.http.conn.socket.ConnectionSocketFactory"]}, {"root": "UPDATE from org.apache.http.conn.scheme.SchemeSocketFactory to org.apache.http.conn.socket.PlainSocketFactory", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.SchemeSocketFactory from org.apache.http.conn.scheme.SchemeSocketFactory to org.apache.http.conn.socket.PlainSocketFactory"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TextElement:  (4.3) do not use. to TagElement: @deprecated at 0", "INS TagElement: @deprecated to Javadoc at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement: @deprecated to Javadoc at 0", "INS TextElement:  (4.3) do not use. to TagElement: @deprecated at 0", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 6", "operations": ["INS SimpleName: ssl to ConditionalExpression at 1", "INS VariableDeclarationStatement to Block at 6", "INS StringLiteral: \"https\" to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ParameterizedType: Registry<ConnectionSocketFactory> to VariableDeclarationStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ConditionalExpression to MethodInvocation at 3", "INS SimpleName: SSLSocketFactory to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getSocketFactory to MethodInvocation at 1", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleType: Registry to ParameterizedType: Registry<ConnectionSocketFactory> at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: ConnectionSocketFactory to MethodInvocation at 1", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Registry<ConnectionSocketFactory> at 1", "INS SimpleName: create to MethodInvocation at 2", "INS MethodInvocation to ConditionalExpression at 2", "INS StringLiteral: \"http\" to MethodInvocation at 2"]}, {"root": "UPDATE from Scheme to org.apache.http.conn.scheme.Scheme", "operations": ["UPD SimpleType: Scheme from Scheme to org.apache.http.conn.scheme.Scheme"]}, {"root": "UPDATE from SchemeRegistry to LayeredConnectionSocketFactory", "operations": ["UPD SimpleType: SchemeRegistry from SchemeRegistry to LayeredConnectionSocketFactory", "UPD SimpleName: SchemeRegistry from SchemeRegistry to LayeredConnectionSocketFactory"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: SchemeRegistry to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS QualifiedName: org.apache.http.conn.scheme.Scheme to SimpleType: Scheme at 0", "operations": ["INS QualifiedName: org.apache.http.conn.scheme.Scheme to SimpleType: Scheme at 0"]}, {"root": "UPDATE from plain to sfr", "operations": ["UPD SimpleName: plain from plain to sfr", "UPD SimpleName: schemeRegistry from schemeRegistry to sfr"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3", "MOV SimpleName: plain to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from SchemeRegistry to Registry", "operations": ["UPD SimpleName: SchemeRegistry from SchemeRegistry to Registry"]}, {"root": "MOVE from SimpleType: Registry", "operations": ["MOV SimpleName: SchemeRegistry to SimpleType: Registry at 0"]}, {"root": "UPDATE from Scheme to ConnectionSocketFactory", "operations": ["UPD SimpleName: Scheme from Scheme to ConnectionSocketFactory", "UPD SimpleName: SchemeSocketFactory from SchemeSocketFactory to ConnectionSocketFactory"]}, {"root": "MOVE from SimpleType: ConnectionSocketFactory", "operations": ["MOV SimpleName: SchemeSocketFactory to SimpleType: ConnectionSocketFactory at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: schemeRegistry to MethodInvocation at 1", "MOV SimpleName: register to MethodInvocation at 1"]}, {"root": "UPDATE from schemeRegistry to register", "operations": ["UPD SimpleName: schemeRegistry from schemeRegistry to register"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV InfixExpression: != to ConditionalExpression at 0"]}, {"root": "UPDATE from register to RegistryBuilder", "operations": ["UPD SimpleName: register from register to RegistryBuilder"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: register to MethodInvocation at 0"]}, {"root": "MOVE from SimpleType: ConnectionSocketFactory", "operations": ["MOV SimpleName: Scheme to SimpleType: ConnectionSocketFactory at 0"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: schemeRegistry", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleType: SchemeRegistry", "DEL ClassInstanceCreation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleType: SchemeSocketFactory"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: schemeRegistry", "DEL SimpleType: Scheme", "DEL ExpressionStatement", "DEL StringLiteral: \"http\"", "DEL ClassInstanceCreation", "DEL NumberLiteral: 80", "DEL SimpleName: plain", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: SchemeSocketFactory", "DEL SimpleType: SchemeSocketFactory"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleType: Scheme", "DEL ExpressionStatement", "DEL NumberLiteral: 443", "DEL Block", "DEL SimpleName: ssl", "DEL IfStatement", "DEL ClassInstanceCreation", "DEL StringLiteral: \"https\"", "DEL SimpleName: Scheme", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: Scheme", "operations": ["DEL SimpleName: Scheme"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: CONNMGR", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: scheme", "DEL SimpleName: getSchemeRegistry", "DEL SimpleName: register"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: getSchemeRegistry", "DEL SimpleName: CONNMGR", "DEL MethodInvocation", "DEL SimpleName: name", "DEL ExpressionStatement", "DEL SimpleName: unregister", "DEL MethodInvocation"]}]}}, {"Executor_diff": {"operations": ["Insert ImportDeclaration(43) into CompilationUnit(771) at 21", "Update QualifiedName: org.apache.http.conn.scheme.PlainSocketFactory(36) to org.apache.http.config.Registry", "Update QualifiedName: org.apache.http.conn.scheme.Scheme(38) to org.apache.http.config.RegistryBuilder", "Update QualifiedName: org.apache.http.conn.scheme.SchemeRegistry(40) to org.apache.http.conn.socket.ConnectionSocketFactory", "Insert QualifiedName: org.apache.http.conn.socket.LayeredConnectionSocketFactory(42) into ImportDeclaration(43) at 0", "Update QualifiedName: org.apache.http.conn.scheme.SchemeSocketFactory(42) to org.apache.http.conn.socket.PlainSocketFactory", "Insert Javadoc(740) into MethodDeclaration(753) at 0", "Insert MarkerAnnotation(742) into MethodDeclaration(753) at 1", "Insert Javadoc(756) into MethodDeclaration(769) at 0", "Insert MarkerAnnotation(758) into MethodDeclaration(769) at 1", "Insert VariableDeclarationStatement(93) into Block(214) at 0", "Insert VariableDeclarationStatement(185) into Block(214) at 2", "Insert TagElement: @deprecated(739) into Javadoc(740) at 0", "Insert SimpleName: Deprecated(741) into MarkerAnnotation(742) at 0", "Update SimpleType: Scheme(751) to org.apache.http.conn.scheme.Scheme", "Insert TagElement: @deprecated(755) into Javadoc(756) at 0", "Insert SimpleName: Deprecated(757) into MarkerAnnotation(758) at 0", "Update SimpleType: SchemeRegistry(87) to LayeredConnectionSocketFactory", "Move SimpleType: SchemeRegistry(87) into VariableDeclarationStatement(93) at 0", "Move VariableDeclarationFragment(116) into VariableDeclarationStatement(93) at 1", "Insert ParameterizedType: Registry<ConnectionSocketFactory>(158) into VariableDeclarationStatement(185) at 0", "Insert VariableDeclarationFragment(184) into VariableDeclarationStatement(185) at 1", "Insert TextElement:  (4.3) do not use.(738) into TagElement: @deprecated(739) at 0", "Insert QualifiedName: org.apache.http.conn.scheme.Scheme(748) into SimpleType: org.apache.http.conn.scheme.Scheme(749) at 0", "Insert TextElement:  (4.3) do not use.(754) into TagElement: @deprecated(755) at 0", "Update SimpleName: SchemeRegistry(86) to LayeredConnectionSocketFactory", "Insert SimpleType: Registry(155) into ParameterizedType: Registry<ConnectionSocketFactory>(158) at 0", "Insert SimpleType: ConnectionSocketFactory(157) into ParameterizedType: Registry<ConnectionSocketFactory>(158) at 1", "Update SimpleName: plain(96) to sfr", "Move SimpleName: plain(96) into VariableDeclarationFragment(184) at 0", "Insert MethodInvocation(183) into VariableDeclarationFragment(184) at 1", "Update SimpleName: SchemeRegistry(89) to Registry", "Move SimpleName: SchemeRegistry(89) into SimpleType: Registry(155) at 0", "Update SimpleName: SchemeSocketFactory(94) to ConnectionSocketFactory", "Move SimpleName: SchemeSocketFactory(94) into SimpleType: ConnectionSocketFactory(157) at 0", "Insert MethodInvocation(181) into MethodInvocation(183) at 0", "Insert SimpleName: build(182) into MethodInvocation(183) at 1", "Update SimpleName: schemeRegistry(196) to sfr", "Insert MethodInvocation(170) into MethodInvocation(181) at 0", "Move SimpleName: register(182) into MethodInvocation(181) at 1", "Insert StringLiteral: \"https\"(172) into MethodInvocation(181) at 2", "Insert ConditionalExpression(180) into MethodInvocation(181) at 3", "Insert MethodInvocation(164) into MethodInvocation(170) at 0", "Update SimpleName: schemeRegistry(181) to register", "Move SimpleName: schemeRegistry(181) into MethodInvocation(170) at 1", "Insert StringLiteral: \"http\"(166) into MethodInvocation(170) at 2", "Move MethodInvocation(99) into MethodInvocation(170) at 3", "Move InfixExpression: !=(180) into ConditionalExpression(180) at 0", "Insert SimpleName: ssl(176) into ConditionalExpression(180) at 1", "Insert MethodInvocation(179) into ConditionalExpression(180) at 2", "Update SimpleName: register(103) to RegistryBuilder", "Move SimpleName: register(103) into MethodInvocation(164) at 0", "Insert SimpleType: ConnectionSocketFactory(162) into MethodInvocation(164) at 1", "Insert SimpleName: create(163) into MethodInvocation(164) at 2", "Insert SimpleName: SSLSocketFactory(177) into MethodInvocation(179) at 0", "Insert SimpleName: getSocketFactory(178) into MethodInvocation(179) at 1", "Update SimpleName: Scheme(104) to ConnectionSocketFactory", "Move SimpleName: Scheme(104) into SimpleType: ConnectionSocketFactory(162) at 0", "Delete SimpleName: schemeRegistry(88)", "Delete SimpleType: SchemeRegistry(90)", "Delete ClassInstanceCreation(91)", "Delete VariableDeclarationFragment(92)", "Delete VariableDeclarationStatement(93)", "Delete SimpleType: SchemeSocketFactory(95)", "Delete VariableDeclarationFragment(100)", "Delete VariableDeclarationStatement(101)", "Delete SimpleName: schemeRegistry(102)", "Delete SimpleType: Scheme(105)", "Delete StringLiteral: \"http\"(106)", "Delete NumberLiteral: 80(107)", "Delete SimpleName: plain(108)", "Delete ClassInstanceCreation(109)", "Delete MethodInvocation(110)", "Delete ExpressionStatement(111)", "Delete SimpleName: SchemeSocketFactory(112)", "Delete SimpleType: SchemeSocketFactory(113)", "Delete VariableDeclarationStatement(117)", "Delete SimpleName: Scheme(183)", "Delete SimpleType: Scheme(184)", "Delete StringLiteral: \"https\"(185)", "Delete NumberLiteral: 443(186)", "Delete SimpleName: ssl(187)", "Delete ClassInstanceCreation(188)", "Delete MethodInvocation(189)", "Delete ExpressionStatement(190)", "Delete Block(191)", "Delete IfStatement(192)", "Delete SimpleName: Scheme(750)", "Delete SimpleName: CONNMGR(754)", "Delete SimpleName: getSchemeRegistry(755)", "Delete MethodInvocation(756)", "Delete SimpleName: register(757)", "Delete SimpleName: scheme(758)", "Delete MethodInvocation(759)", "Delete ExpressionStatement(760)", "Delete SimpleName: CONNMGR(772)", "Delete SimpleName: getSchemeRegistry(773)", "Delete MethodInvocation(774)", "Delete SimpleName: unregister(775)", "Delete SimpleName: name(776)", "Delete MethodInvocation(777)", "Delete ExpressionStatement(778)"]}}, {"ClientContext_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: org.apache.http.auth.AuthSchemeProvider to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: org.apache.http.conn.socket.ConnectionSocketFactory to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.apache.http.cookie.CookieSpecProvider to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: interface", "operations": ["MOV FieldDeclaration to TypeDeclaration: interface at 16"]}, {"root": "INS FieldDeclaration to TypeDeclaration: interface at 16", "operations": ["INS TagElement to Javadoc at 0", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS SimpleName: ConnectionSocketFactory to TagElement: @link at 0", "INS SimpleName: SOCKET_FACTORY_REGISTRY to VariableDeclarationFragment at 0", "INS QualifiedName: org.apache.http.config.Lookup to TagElement: @link at 0", "INS TextElement: the actual  to TagElement at 3", "INS FieldDeclaration to TypeDeclaration: interface at 16", "INS Javadoc to FieldDeclaration at 0", "INS TagElement: @link to TagElement at 4", "INS TextElement: Attribute name of a  to TagElement at 0", "INS StringLiteral: \"http.socket-factory-registry\" to VariableDeclarationFragment at 1", "INS TagElement: @link to TagElement at 1", "INS Modifier: final to FieldDeclaration at 3", "INS TextElement:  registry. to TagElement at 5", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement:  object that represents to TagElement at 2", "INS Modifier: static to FieldDeclaration at 2", "INS Modifier: public to FieldDeclaration at 1", "INS SimpleType: String to FieldDeclaration at 4"]}, {"root": "INS MarkerAnnotation to FieldDeclaration at 1", "operations": ["INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS MarkerAnnotation to FieldDeclaration at 1"]}, {"root": "INS TagElement: @deprecated to Javadoc at 1", "operations": ["INS TagElement: @deprecated to Javadoc at 1", "INS TextElement:  (4.3) do not use to TagElement: @deprecated at 0"]}, {"root": "UPDATE from object that represents the actual cookie specification registry. to  object that represents", "operations": ["UPD TextElement: object that represents the actual cookie specification registry. from object that represents the actual cookie specification registry. to  object that represents", "UPD TextElement: object that represents the actual authentication scheme registry. from object that represents the actual authentication scheme registry. to  object that represents"]}, {"root": "INS TextElement: the actual  to TagElement at 3", "operations": ["INS TextElement: the actual  to TagElement at 3"]}, {"root": "INS TagElement: @link to TagElement at 4", "operations": ["INS TagElement: @link to TagElement at 4", "INS SimpleName: CookieSpecProvider to TagElement: @link at 0"]}, {"root": "INS TextElement:  registry. to TagElement at 5", "operations": ["INS TextElement:  registry. to TagElement at 5"]}, {"root": "INS TextElement: the actual  to TagElement at 3", "operations": ["INS TextElement: the actual  to TagElement at 3"]}, {"root": "INS TagElement: @link to TagElement at 4", "operations": ["INS TagElement: @link to TagElement at 4", "INS SimpleName: AuthSchemeProvider to TagElement: @link at 0"]}, {"root": "INS TextElement:  registry. to TagElement at 5", "operations": ["INS TextElement:  registry. to TagElement at 5"]}, {"root": "UPDATE from org.apache.http.auth.AuthSchemeRegistry to org.apache.http.config.Lookup", "operations": ["UPD QualifiedName: org.apache.http.auth.AuthSchemeRegistry from org.apache.http.auth.AuthSchemeRegistry to org.apache.http.config.Lookup", "UPD QualifiedName: org.apache.http.cookie.CookieSpecRegistry from org.apache.http.cookie.CookieSpecRegistry to org.apache.http.config.Lookup"]}]}}, {"ClientContext_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(251) at 1", "Insert ImportDeclaration(5) into CompilationUnit(251) at 2", "Insert ImportDeclaration(7) into CompilationUnit(251) at 3", "Move FieldDeclaration(118) into TypeDeclaration: interface(250) at 16", "Insert QualifiedName: org.apache.http.auth.AuthSchemeProvider(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: org.apache.http.conn.socket.ConnectionSocketFactory(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: org.apache.http.cookie.CookieSpecProvider(6) into ImportDeclaration(7) at 0", "Insert FieldDeclaration(249) into TypeDeclaration: interface(250) at 16", "Insert MarkerAnnotation(44) into FieldDeclaration(53) at 1", "Insert Javadoc(240) into FieldDeclaration(249) at 0", "Insert Modifier: public(241) into FieldDeclaration(249) at 1", "Insert Modifier: static(242) into FieldDeclaration(249) at 2", "Insert Modifier: final(243) into FieldDeclaration(249) at 3", "Insert SimpleType: String(245) into FieldDeclaration(249) at 4", "Insert VariableDeclarationFragment(248) into FieldDeclaration(249) at 5", "Insert TagElement: @deprecated(41) into Javadoc(42) at 1", "Insert SimpleName: Deprecated(43) into MarkerAnnotation(44) at 0", "Insert TagElement(239) into Javadoc(240) at 0", "Insert SimpleName: String(244) into SimpleType: String(245) at 0", "Insert SimpleName: SOCKET_FACTORY_REGISTRY(246) into VariableDeclarationFragment(248) at 0", "Insert StringLiteral: \"http.socket-factory-registry\"(247) into VariableDeclarationFragment(248) at 1", "Insert TextElement:  (4.3) do not use(40) into TagElement: @deprecated(41) at 0", "Update TextElement: object that represents the actual cookie specification registry.(47) to  object that represents", "Insert TextElement: the actual (58) into TagElement(62) at 3", "Insert TagElement: @link(60) into TagElement(62) at 4", "Insert TextElement:  registry.(61) into TagElement(62) at 5", "Update TextElement: object that represents the actual authentication scheme registry.(107) to  object that represents", "Insert TextElement: the actual (216) into TagElement(220) at 3", "Insert TagElement: @link(218) into TagElement(220) at 4", "Insert TextElement:  registry.(219) into TagElement(220) at 5", "Insert TextElement: Attribute name of a (231) into TagElement(239) at 0", "Insert TagElement: @link(233) into TagElement(239) at 1", "Insert TextElement:  object that represents(234) into TagElement(239) at 2", "Insert TextElement: the actual (235) into TagElement(239) at 3", "Insert TagElement: @link(237) into TagElement(239) at 4", "Insert TextElement:  registry.(238) into TagElement(239) at 5", "Update QualifiedName: org.apache.http.cookie.CookieSpecRegistry(45) to org.apache.http.config.Lookup", "Insert SimpleName: CookieSpecProvider(59) into TagElement: @link(60) at 0", "Update QualifiedName: org.apache.http.auth.AuthSchemeRegistry(105) to org.apache.http.config.Lookup", "Insert SimpleName: AuthSchemeProvider(217) into TagElement: @link(218) at 0", "Insert QualifiedName: org.apache.http.config.Lookup(232) into TagElement: @link(233) at 0", "Insert SimpleName: ConnectionSocketFactory(236) into TagElement: @link(237) at 0"]}}, {"ClientContextConfigurer_cluster": {"actions": [{"root": "INS MarkerAnnotation to TypeDeclaration: class at 2", "operations": ["INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS MarkerAnnotation to TypeDeclaration: class at 2"]}, {"root": "INS TagElement: @deprecated to Javadoc at 2", "operations": ["INS TextElement:  (4.3) use  to TagElement: @deprecated at 0", "INS TagElement: @link to TagElement: @deprecated at 1", "INS TagElement: @deprecated to Javadoc at 2", "INS SimpleName: HttpClientContext to TagElement: @link at 0"]}]}}, {"ClientContextConfigurer_diff": {"operations": ["Insert MarkerAnnotation(29) into TypeDeclaration: class(137) at 2", "Insert TagElement: @deprecated(24) into Javadoc(25) at 2", "Insert SimpleName: Deprecated(28) into MarkerAnnotation(29) at 0", "Insert TextElement:  (4.3) use (21) into TagElement: @deprecated(24) at 0", "Insert TagElement: @link(23) into TagElement: @deprecated(24) at 1", "Insert SimpleName: HttpClientContext(22) into TagElement: @link(23) at 0"]}}, {"RequestAddCookies_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 15", "MOV ImportDeclaration to CompilationUnit at 21"]}, {"root": "UPDATE from org.apache.http.conn.scheme.Scheme to org.apache.http.config.Lookup", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.Scheme from org.apache.http.conn.scheme.Scheme to org.apache.http.config.Lookup"]}, {"root": "UPDATE from org.apache.http.cookie.CookieSpecRegistry to org.apache.http.cookie.CookieSpecProvider", "operations": ["UPD QualifiedName: org.apache.http.cookie.CookieSpecRegistry from org.apache.http.cookie.CookieSpecRegistry to org.apache.http.cookie.CookieSpecProvider"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 11", "MOV IfStatement to Block at 7", "MOV IfStatement to Block at 9"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 19", "MOV VariableDeclarationStatement to Block at 11"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 22", "MOV IfStatement to Block at 23"]}, {"root": "UPDATE from CookieStore to HttpClientContext", "operations": ["UPD SimpleType: CookieStore from CookieStore to HttpClientContext", "UPD SimpleName: CookieStore from CookieStore to HttpClientContext", "UPD SimpleName: context from context to HttpClientContext"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: CookieStore to VariableDeclarationStatement at 0"]}, {"root": "INS ParameterizedType: Lookup<CookieSpecProvider> to VariableDeclarationStatement at 0", "operations": ["INS ParameterizedType: Lookup<CookieSpecProvider> to VariableDeclarationStatement at 0", "INS SimpleType: Lookup to ParameterizedType: Lookup<CookieSpecProvider> at 0", "INS SimpleName: Lookup to SimpleType: Lookup at 0", "INS SimpleType: CookieSpecProvider to ParameterizedType: Lookup<CookieSpecProvider> at 1"]}, {"root": "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: registry to VariableDeclarationFragment at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: HttpHost to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: RouteInfo to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: < to IfStatement at 0"]}, {"root": "UPDATE from HttpHost to CookieSpecProvider", "operations": ["UPD SimpleName: HttpHost from HttpHost to CookieSpecProvider", "UPD SimpleType: String from String to CookieSpecProvider", "UPD SimpleName: String from String to CookieSpecProvider"]}, {"root": "INS InfixExpression: == to IfStatement at 0", "operations": ["INS InfixExpression: == to IfStatement at 0", "INS SimpleName: provider to InfixExpression: == at 0", "INS NullLiteral to InfixExpression: == at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: policy to InfixExpression: + at 1", "INS ThrowStatement to Block at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: HttpException to SimpleType: HttpException at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleType: HttpException to ClassInstanceCreation at 0", "INS StringLiteral: \"Unsupported cookie policy: \" to InfixExpression: + at 0"]}, {"root": "UPDATE from getParams to clientContext", "operations": ["UPD SimpleName: getParams from getParams to clientContext", "UPD SimpleName: context from context to clientContext", "UPD SimpleName: context from context to clientContext", "UPD SimpleName: context from context to clientContext", "UPD SimpleName: cookieStore from cookieStore to clientContext", "UPD SimpleName: context from context to clientContext"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: context to MethodInvocation at 2"]}, {"root": "INS SimpleName: cookieStore to VariableDeclarationFragment at 0", "operations": ["INS SimpleName: cookieStore to VariableDeclarationFragment at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from route to targetHost", "operations": ["UPD SimpleName: route from route to targetHost"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from schemeRegistry to route", "operations": ["UPD SimpleName: schemeRegistry from schemeRegistry to route", "UPD SimpleName: scheme from scheme to route"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from scheme to provider", "operations": ["UPD SimpleName: scheme from scheme to provider", "UPD SimpleName: policy from policy to provider"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAttribute to MethodInvocation at 1", "MOV SimpleName: context to MethodInvocation at 0"]}, {"root": "UPDATE from getAttribute to adapt", "operations": ["UPD SimpleName: getAttribute from getAttribute to adapt"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getCookieStore", "operations": ["UPD SimpleName: getAttribute from getAttribute to getCookieStore"]}, {"root": "MOVE from SimpleType: CookieSpecProvider", "operations": ["MOV SimpleName: HttpHost to SimpleType: CookieSpecProvider at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getCookieSpecRegistry", "operations": ["UPD SimpleName: getAttribute from getAttribute to getCookieSpecRegistry"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAttribute to MethodInvocation at 1", "MOV SimpleName: context to MethodInvocation at 0"]}, {"root": "UPDATE from getAttribute to getTargetHost", "operations": ["UPD SimpleName: getAttribute from getAttribute to getTargetHost", "UPD SimpleName: resolvePort from resolvePort to getTargetHost"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAttribute to MethodInvocation at 1", "MOV SimpleName: context to MethodInvocation at 0"]}, {"root": "UPDATE from getAttribute to getHttpRoute", "operations": ["UPD SimpleName: getAttribute from getAttribute to getHttpRoute"]}, {"root": "INS ConditionalExpression to ClassInstanceCreation at 3", "operations": ["INS InfixExpression: != to ConditionalExpression at 0", "INS ConditionalExpression to ClassInstanceCreation at 3", "INS SimpleName: requestURI to InfixExpression: != at 0", "INS StringLiteral: \"/\" to ConditionalExpression at 2", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "UPDATE from targetHost to registry", "operations": ["UPD SimpleName: targetHost from targetHost to registry"]}, {"root": "UPDATE from getSchemeName to lookup", "operations": ["UPD SimpleName: getSchemeName from getSchemeName to lookup"]}, {"root": "INS SimpleName: policy to MethodInvocation at 2", "operations": ["INS SimpleName: policy to MethodInvocation at 2"]}, {"root": "UPDATE from request to create", "operations": ["UPD SimpleName: request from request to create"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: request to MethodInvocation at 3", "MOV SimpleName: getParams to MethodInvocation at 4"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV MethodInvocation to ConditionalExpression at 1"]}, {"root": "UPDATE from ex to ignore", "operations": ["UPD SimpleName: ex from ex to ignore"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS NullLiteral to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: requestURI to Assignment: = at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from port to getPort", "operations": ["UPD SimpleName: port from port to getPort"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: scheme to MethodInvocation at 0", "MOV SimpleName: resolvePort to MethodInvocation at 1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.http.ProtocolException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.http.conn.scheme.SchemeRegistry"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.http.protocol.ExecutionContext"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression", "DEL QualifiedName: ClientContext.COOKIE_STORE", "DEL MethodInvocation"]}, {"root": "DEL SimpleType: CookieSpecRegistry", "operations": ["DEL SimpleName: CookieSpecRegistry", "DEL SimpleType: CookieSpecRegistry"]}, {"root": "DEL SimpleName: registry", "operations": ["DEL SimpleName: registry"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression", "DEL SimpleName: CookieSpecRegistry", "DEL MethodInvocation", "DEL QualifiedName: ClientContext.COOKIESPEC_REGISTRY", "DEL SimpleType: CookieSpecRegistry"]}, {"root": "DEL VariableDeclarationFragment", "operations": ["DEL SimpleType: HttpHost", "DEL MethodInvocation", "DEL SimpleName: targetHost", "DEL VariableDeclarationFragment", "DEL CastExpression", "DEL QualifiedName: ExecutionContext.HTTP_TARGET_HOST"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleType: RouteInfo", "DEL CastExpression", "DEL SimpleName: RouteInfo", "DEL MethodInvocation", "DEL QualifiedName: ClientContext.ROUTE"]}, {"root": "DEL SimpleType: SchemeRegistry", "operations": ["DEL SimpleName: SchemeRegistry", "DEL SimpleType: SchemeRegistry"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleType: SchemeRegistry", "DEL MethodInvocation", "DEL CastExpression", "DEL SimpleName: SchemeRegistry", "DEL QualifiedName: ClientContext.SCHEME_REGISTRY"]}, {"root": "DEL ThrowStatement", "operations": ["DEL InfixExpression: +", "DEL SimpleName: getUri", "DEL SimpleName: ex", "DEL MethodInvocation", "DEL SimpleName: ProtocolException", "DEL SimpleType: ProtocolException", "DEL SimpleName: getRequestLine", "DEL MethodInvocation", "DEL ThrowStatement", "DEL StringLiteral: \"Invalid request URI: \"", "DEL SimpleName: request", "DEL ClassInstanceCreation"]}, {"root": "DEL InfixExpression: !=", "operations": ["DEL SimpleName: schemeRegistry", "DEL NullLiteral", "DEL InfixExpression: !="]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: schemeRegistry", "DEL VariableDeclarationStatement", "DEL SimpleName: scheme", "DEL SimpleName: getScheme", "DEL SimpleName: targetHost", "DEL SimpleName: Scheme", "DEL SimpleType: Scheme", "DEL MethodInvocation"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: route", "DEL IfStatement", "DEL MethodInvocation", "DEL Block", "DEL Block", "DEL IfStatement", "DEL InfixExpression: ==", "DEL NumberLiteral: 1", "DEL Block", "DEL SimpleName: getHopCount"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: equalsIgnoreCase", "DEL SimpleName: scheme", "DEL MethodInvocation", "DEL StringLiteral: \"http\""]}, {"root": "DEL Block", "operations": ["DEL Assignment: =", "DEL SimpleName: port", "DEL NumberLiteral: 80", "DEL Block", "DEL ExpressionStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL ExpressionStatement", "DEL NumberLiteral: 443", "DEL StringLiteral: \"https\"", "DEL Assignment: =", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: scheme", "DEL SimpleName: port", "DEL Block", "DEL SimpleName: equalsIgnoreCase"]}, {"root": "DEL SimpleName: registry", "operations": ["DEL SimpleName: registry"]}, {"root": "DEL SimpleName: getCookieSpec", "operations": ["DEL SimpleName: getCookieSpec"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}]}}, {"RequestAddCookies_diff": {"operations": ["Move ImportDeclaration(15) into CompilationUnit(622) at 15", "Move ImportDeclaration(39) into CompilationUnit(622) at 21", "Update QualifiedName: org.apache.http.conn.scheme.Scheme(40) to org.apache.http.config.Lookup", "Update QualifiedName: org.apache.http.cookie.CookieSpecRegistry(50) to org.apache.http.cookie.CookieSpecProvider", "Move IfStatement(191) into Block(619) at 7", "Move IfStatement(216) into Block(619) at 9", "Move IfStatement(241) into Block(619) at 11", "Move VariableDeclarationStatement(381) into Block(619) at 11", "Move IfStatement(402) into Block(619) at 19", "Move VariableDeclarationStatement(411) into Block(619) at 22", "Move IfStatement(431) into Block(619) at 23", "Update SimpleType: CookieStore(168) to HttpClientContext", "Move SimpleType: CookieStore(171) into VariableDeclarationStatement(177) at 0", "Insert ParameterizedType: Lookup<CookieSpecProvider>(195) into VariableDeclarationStatement(201) at 0", "Insert VariableDeclarationFragment(200) into VariableDeclarationStatement(201) at 1", "Move SimpleType: HttpHost(218) into VariableDeclarationStatement(222) at 0", "Move SimpleType: RouteInfo(243) into VariableDeclarationStatement(243) at 0", "Move InfixExpression: <(364) into IfStatement(356) at 0", "Update SimpleType: String(405) to CookieSpecProvider", "Insert InfixExpression: ==(394) into IfStatement(403) at 0", "Insert Block(402) into IfStatement(403) at 1", "Update SimpleName: CookieStore(167) to HttpClientContext", "Update SimpleName: cookieStore(169) to clientContext", "Insert MethodInvocation(167) into VariableDeclarationFragment(168) at 1", "Insert SimpleName: cookieStore(172) into VariableDeclarationFragment(176) at 0", "Insert MethodInvocation(175) into VariableDeclarationFragment(176) at 1", "Insert SimpleType: Lookup(192) into ParameterizedType: Lookup<CookieSpecProvider>(195) at 0", "Insert SimpleType: CookieSpecProvider(194) into ParameterizedType: Lookup<CookieSpecProvider>(195) at 1", "Insert SimpleName: registry(196) into VariableDeclarationFragment(200) at 0", "Insert MethodInvocation(199) into VariableDeclarationFragment(200) at 1", "Update SimpleName: route(244) to targetHost", "Insert MethodInvocation(220) into VariableDeclarationFragment(221) at 1", "Update SimpleName: schemeRegistry(372) to route", "Insert MethodInvocation(241) into VariableDeclarationFragment(242) at 1", "Update SimpleName: String(404) to CookieSpecProvider", "Update SimpleName: scheme(406) to provider", "Insert SimpleName: provider(392) into InfixExpression: ==(394) at 0", "Insert NullLiteral(393) into InfixExpression: ==(394) at 1", "Insert ThrowStatement(401) into Block(402) at 0", "Update SimpleName: context(172) to HttpClientContext", "Move SimpleName: context(172) into MethodInvocation(167) at 0", "Update SimpleName: getAttribute(173) to adapt", "Move SimpleName: getAttribute(173) into MethodInvocation(167) at 1", "Insert SimpleName: context(166) into MethodInvocation(167) at 2", "Update SimpleName: context(197) to clientContext", "Move SimpleName: context(197) into MethodInvocation(175) at 0", "Update SimpleName: getAttribute(198) to getCookieStore", "Move SimpleName: getAttribute(198) into MethodInvocation(175) at 1", "Insert SimpleName: Lookup(191) into SimpleType: Lookup(192) at 0", "Update SimpleName: HttpHost(220) to CookieSpecProvider", "Move SimpleName: HttpHost(220) into SimpleType: CookieSpecProvider(194) at 0", "Update SimpleName: context(222) to clientContext", "Move SimpleName: context(222) into MethodInvocation(199) at 0", "Update SimpleName: getAttribute(223) to getCookieSpecRegistry", "Move SimpleName: getAttribute(223) into MethodInvocation(199) at 1", "Update SimpleName: context(247) to clientContext", "Move SimpleName: context(247) into MethodInvocation(220) at 0", "Update SimpleName: getAttribute(248) to getTargetHost", "Move SimpleName: getAttribute(248) into MethodInvocation(220) at 1", "Update SimpleName: context(375) to clientContext", "Move SimpleName: context(375) into MethodInvocation(241) at 0", "Update SimpleName: getAttribute(376) to getHttpRoute", "Move SimpleName: getAttribute(376) into MethodInvocation(241) at 1", "Insert ConditionalExpression(376) into ClassInstanceCreation(380) at 3", "Update SimpleName: targetHost(407) to registry", "Update SimpleName: getSchemeName(408) to lookup", "Insert SimpleName: policy(388) into MethodInvocation(389) at 2", "Insert ClassInstanceCreation(400) into ThrowStatement(401) at 0", "Update SimpleName: policy(462) to provider", "Update SimpleName: request(463) to create", "Move SimpleName: request(463) into MethodInvocation(410) at 3", "Update SimpleName: getParams(464) to clientContext", "Move SimpleName: getParams(464) into MethodInvocation(410) at 4", "Insert InfixExpression: !=(371) into ConditionalExpression(376) at 0", "Move MethodInvocation(450) into ConditionalExpression(376) at 1", "Insert StringLiteral: \"/\"(375) into ConditionalExpression(376) at 2", "Insert SimpleType: HttpException(396) into ClassInstanceCreation(400) at 0", "Insert InfixExpression: +(399) into ClassInstanceCreation(400) at 1", "Update SimpleName: ex(328) to ignore", "Insert ExpressionStatement(323) into Block(324) at 0", "Insert MethodInvocation(350) into MethodInvocation(352) at 0", "Update SimpleName: port(397) to getPort", "Insert SimpleName: requestURI(369) into InfixExpression: !=(371) at 0", "Insert NullLiteral(370) into InfixExpression: !=(371) at 1", "Insert SimpleName: HttpException(395) into SimpleType: HttpException(396) at 0", "Insert StringLiteral: \"Unsupported cookie policy: \"(397) into InfixExpression: +(399) at 0", "Insert SimpleName: policy(398) into InfixExpression: +(399) at 1", "Insert Assignment: =(322) into ExpressionStatement(323) at 0", "Update SimpleName: scheme(395) to route", "Move SimpleName: scheme(395) into MethodInvocation(350) at 0", "Update SimpleName: resolvePort(396) to getTargetHost", "Move SimpleName: resolvePort(396) into MethodInvocation(350) at 1", "Insert SimpleName: requestURI(320) into Assignment: =(322) at 0", "Insert NullLiteral(321) into Assignment: =(322) at 1", "Delete QualifiedName: org.apache.http.ProtocolException(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.http.conn.scheme.SchemeRegistry(42)", "Delete ImportDeclaration(43)", "Delete QualifiedName: org.apache.http.protocol.ExecutionContext(56)", "Delete ImportDeclaration(57)", "Delete QualifiedName: ClientContext.COOKIE_STORE(174)", "Delete MethodInvocation(175)", "Delete CastExpression(176)", "Delete SimpleName: CookieSpecRegistry(192)", "Delete SimpleType: CookieSpecRegistry(193)", "Delete SimpleName: registry(194)", "Delete SimpleName: CookieSpecRegistry(195)", "Delete SimpleType: CookieSpecRegistry(196)", "Delete QualifiedName: ClientContext.COOKIESPEC_REGISTRY(199)", "Delete MethodInvocation(200)", "Delete CastExpression(201)", "Delete SimpleName: targetHost(219)", "Delete SimpleType: HttpHost(221)", "Delete QualifiedName: ExecutionContext.HTTP_TARGET_HOST(224)", "Delete MethodInvocation(225)", "Delete CastExpression(226)", "Delete VariableDeclarationFragment(227)", "Delete SimpleName: RouteInfo(245)", "Delete SimpleType: RouteInfo(246)", "Delete QualifiedName: ClientContext.ROUTE(249)", "Delete MethodInvocation(250)", "Delete CastExpression(251)", "Delete SimpleName: SchemeRegistry(370)", "Delete SimpleType: SchemeRegistry(371)", "Delete SimpleName: SchemeRegistry(373)", "Delete SimpleType: SchemeRegistry(374)", "Delete QualifiedName: ClientContext.SCHEME_REGISTRY(377)", "Delete MethodInvocation(378)", "Delete CastExpression(379)", "Delete SimpleName: ProtocolException(330)", "Delete SimpleType: ProtocolException(331)", "Delete StringLiteral: \"Invalid request URI: \"(332)", "Delete SimpleName: request(333)", "Delete SimpleName: getRequestLine(334)", "Delete MethodInvocation(335)", "Delete SimpleName: getUri(336)", "Delete MethodInvocation(337)", "Delete InfixExpression: +(338)", "Delete SimpleName: ex(339)", "Delete ClassInstanceCreation(340)", "Delete ThrowStatement(341)", "Delete SimpleName: schemeRegistry(382)", "Delete NullLiteral(383)", "Delete InfixExpression: !=(384)", "Delete SimpleName: Scheme(385)", "Delete SimpleType: Scheme(386)", "Delete SimpleName: scheme(387)", "Delete SimpleName: schemeRegistry(388)", "Delete SimpleName: getScheme(389)", "Delete SimpleName: targetHost(390)", "Delete MethodInvocation(391)", "Delete VariableDeclarationFragment(392)", "Delete VariableDeclarationStatement(393)", "Delete SimpleName: route(365)", "Delete SimpleName: getHopCount(366)", "Delete MethodInvocation(367)", "Delete NumberLiteral: 1(368)", "Delete InfixExpression: ==(369)", "Delete Block(403)", "Delete Block(432)", "Delete IfStatement(433)", "Delete Block(434)", "Delete IfStatement(435)", "Delete SimpleName: scheme(412)", "Delete SimpleName: equalsIgnoreCase(413)", "Delete StringLiteral: \"http\"(414)", "Delete MethodInvocation(415)", "Delete SimpleName: port(416)", "Delete NumberLiteral: 80(417)", "Delete Assignment: =(418)", "Delete ExpressionStatement(419)", "Delete Block(420)", "Delete SimpleName: scheme(421)", "Delete SimpleName: equalsIgnoreCase(422)", "Delete StringLiteral: \"https\"(423)", "Delete MethodInvocation(424)", "Delete SimpleName: port(425)", "Delete NumberLiteral: 443(426)", "Delete Assignment: =(427)", "Delete ExpressionStatement(428)", "Delete Block(429)", "Delete IfStatement(430)", "Delete SimpleName: registry(460)", "Delete SimpleName: getCookieSpec(461)", "Delete MethodInvocation(465)"]}}, {"RequestAuthCache_cluster": {"actions": [{"root": "UPDATE from org.apache.http.conn.scheme.Scheme to org.apache.http.conn.routing.RouteInfo", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.Scheme from org.apache.http.conn.scheme.Scheme to org.apache.http.conn.routing.RouteInfo"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 5", "MOV IfStatement to Block at 7"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 8", "MOV VariableDeclarationStatement to Block at 7", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 9", "operations": ["INS IfStatement to Block at 9", "INS Block to IfStatement at 1"]}, {"root": "UPDATE from AuthCache to HttpClientContext", "operations": ["UPD SimpleName: AuthCache from AuthCache to HttpClientContext", "UPD SimpleType: AuthCache from AuthCache to HttpClientContext", "UPD SimpleName: context from context to HttpClientContext"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AuthCache to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: CredentialsProvider to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from SchemeRegistry to RouteInfo", "operations": ["UPD SimpleName: SchemeRegistry from SchemeRegistry to RouteInfo", "UPD SimpleType: SchemeRegistry from SchemeRegistry to RouteInfo"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: HttpHost to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: < to IfStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AuthState to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from authCache to clientContext", "operations": ["UPD SimpleName: authCache from authCache to clientContext", "UPD SimpleName: context from context to clientContext", "UPD SimpleName: schemeRegistry from schemeRegistry to clientContext", "UPD SimpleName: context from context to clientContext", "UPD SimpleName: context from context to clientContext", "UPD SimpleName: context from context to clientContext", "UPD SimpleName: context from context to clientContext"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: context to MethodInvocation at 2"]}, {"root": "UPDATE from credsProvider to authCache", "operations": ["UPD SimpleName: credsProvider from credsProvider to authCache"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from target to credsProvider", "operations": ["UPD SimpleName: target from target to credsProvider"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from schemeRegistry to route", "operations": ["UPD SimpleName: schemeRegistry from schemeRegistry to route", "UPD SimpleName: scheme from scheme to route", "UPD SimpleName: context from context to route"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from scheme to target", "operations": ["UPD SimpleName: scheme from scheme to target"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAttribute to MethodInvocation at 1", "MOV SimpleName: context to MethodInvocation at 0"]}, {"root": "UPDATE from getAttribute to adapt", "operations": ["UPD SimpleName: getAttribute from getAttribute to adapt"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getAuthCache", "operations": ["UPD SimpleName: getAttribute from getAttribute to getAuthCache"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getCredentialsProvider", "operations": ["UPD SimpleName: getAttribute from getAttribute to getCredentialsProvider"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getHttpRoute", "operations": ["UPD SimpleName: getAttribute from getAttribute to getHttpRoute"]}, {"root": "UPDATE from target to getTargetHost", "operations": ["UPD SimpleName: target from target to getTargetHost", "UPD SimpleName: target from target to getTargetHost"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getTargetAuthState", "operations": ["UPD SimpleName: getAttribute from getAttribute to getTargetAuthState"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getProxyHost", "operations": ["UPD SimpleName: getAttribute from getAttribute to getProxyHost"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getProxyAuthState", "operations": ["UPD SimpleName: getAttribute from getAttribute to getProxyAuthState"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getPort to MethodInvocation at 1", "MOV SimpleName: target to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: scheme to MethodInvocation at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.http.conn.scheme.SchemeRegistry", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.http.protocol.ExecutionContext"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression", "DEL QualifiedName: ClientContext.AUTH_CACHE", "DEL MethodInvocation"]}, {"root": "DEL CastExpression", "operations": ["DEL MethodInvocation", "DEL QualifiedName: ClientContext.CREDS_PROVIDER", "DEL CastExpression", "DEL SimpleName: CredentialsProvider", "DEL SimpleType: CredentialsProvider"]}, {"root": "DEL SimpleType: HttpHost", "operations": ["DEL SimpleName: HttpHost", "DEL SimpleType: HttpHost"]}, {"root": "DEL CastExpression", "operations": ["DEL MethodInvocation", "DEL CastExpression", "DEL QualifiedName: ExecutionContext.HTTP_TARGET_HOST"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleType: SchemeRegistry", "DEL MethodInvocation", "DEL CastExpression", "DEL QualifiedName: ClientContext.SCHEME_REGISTRY", "DEL SimpleName: SchemeRegistry"]}, {"root": "DEL SimpleType: Scheme", "operations": ["DEL SimpleName: Scheme", "DEL SimpleType: Scheme"]}, {"root": "DEL SimpleName: getScheme", "operations": ["DEL SimpleName: getScheme"]}, {"root": "DEL SimpleName: resolvePort", "operations": ["DEL SimpleName: resolvePort"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL IfStatement"]}, {"root": "DEL CastExpression", "operations": ["DEL MethodInvocation", "DEL CastExpression", "DEL QualifiedName: ClientContext.TARGET_AUTH_STATE"]}, {"root": "DEL CastExpression", "operations": ["DEL QualifiedName: ExecutionContext.HTTP_PROXY_HOST", "DEL CastExpression", "DEL SimpleName: HttpHost", "DEL MethodInvocation", "DEL SimpleType: HttpHost"]}, {"root": "DEL SimpleType: AuthState", "operations": ["DEL SimpleType: AuthState", "DEL SimpleName: AuthState"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleType: AuthState", "DEL SimpleName: AuthState", "DEL QualifiedName: ClientContext.PROXY_AUTH_STATE", "DEL CastExpression", "DEL MethodInvocation"]}]}}, {"RequestAuthCache_diff": {"operations": ["Update QualifiedName: org.apache.http.conn.scheme.Scheme(32) to org.apache.http.conn.routing.RouteInfo", "Move IfStatement(136) into Block(295) at 5", "Move IfStatement(161) into Block(295) at 7", "Move VariableDeclarationStatement(190) into Block(295) at 7", "Move VariableDeclarationStatement(199) into Block(295) at 8", "Insert IfStatement(198) into Block(295) at 9", "Update SimpleType: AuthCache(113) to HttpClientContext", "Move SimpleType: AuthCache(116) into VariableDeclarationStatement(124) at 0", "Move SimpleType: CredentialsProvider(138) into VariableDeclarationStatement(145) at 0", "Update SimpleType: SchemeRegistry(180) to RouteInfo", "Move SimpleType: HttpHost(166) into VariableDeclarationStatement(174) at 0", "Move InfixExpression: <(178) into IfStatement(198) at 0", "Insert Block(197) into IfStatement(198) at 1", "Move SimpleType: AuthState(224) into VariableDeclarationStatement(258) at 0", "Update SimpleName: AuthCache(112) to HttpClientContext", "Update SimpleName: authCache(114) to clientContext", "Insert MethodInvocation(114) into VariableDeclarationFragment(115) at 1", "Update SimpleName: credsProvider(139) to authCache", "Insert MethodInvocation(122) into VariableDeclarationFragment(123) at 1", "Update SimpleName: target(164) to credsProvider", "Insert MethodInvocation(143) into VariableDeclarationFragment(144) at 1", "Update SimpleName: SchemeRegistry(179) to RouteInfo", "Update SimpleName: schemeRegistry(181) to route", "Insert MethodInvocation(164) into VariableDeclarationFragment(165) at 1", "Update SimpleName: scheme(193) to target", "Move ExpressionStatement(217) into Block(197) at 0", "Insert MethodInvocation(204) into VariableDeclarationFragment(205) at 1", "Insert MethodInvocation(248) into VariableDeclarationFragment(249) at 1", "Insert MethodInvocation(256) into VariableDeclarationFragment(257) at 1", "Update SimpleName: context(117) to HttpClientContext", "Move SimpleName: context(117) into MethodInvocation(114) at 0", "Update SimpleName: getAttribute(118) to adapt", "Move SimpleName: getAttribute(118) into MethodInvocation(114) at 1", "Insert SimpleName: context(113) into MethodInvocation(114) at 2", "Update SimpleName: context(142) to clientContext", "Move SimpleName: context(142) into MethodInvocation(122) at 0", "Update SimpleName: getAttribute(143) to getAuthCache", "Move SimpleName: getAttribute(143) into MethodInvocation(122) at 1", "Update SimpleName: context(167) to clientContext", "Move SimpleName: context(167) into MethodInvocation(143) at 0", "Update SimpleName: getAttribute(168) to getCredentialsProvider", "Move SimpleName: getAttribute(168) into MethodInvocation(143) at 1", "Update SimpleName: context(184) to clientContext", "Move SimpleName: context(184) into MethodInvocation(164) at 0", "Update SimpleName: getAttribute(185) to getHttpRoute", "Move SimpleName: getAttribute(185) into MethodInvocation(164) at 1", "Update SimpleName: schemeRegistry(194) to clientContext", "Update SimpleName: target(196) to getTargetHost", "Update SimpleName: context(225) to clientContext", "Move SimpleName: context(225) into MethodInvocation(204) at 0", "Update SimpleName: getAttribute(226) to getTargetAuthState", "Move SimpleName: getAttribute(226) into MethodInvocation(204) at 1", "Update SimpleName: context(273) to route", "Move SimpleName: context(273) into MethodInvocation(248) at 0", "Update SimpleName: getAttribute(274) to getProxyHost", "Move SimpleName: getAttribute(274) into MethodInvocation(248) at 1", "Update SimpleName: context(285) to clientContext", "Move SimpleName: context(285) into MethodInvocation(256) at 0", "Update SimpleName: getAttribute(286) to getProxyAuthState", "Move SimpleName: getAttribute(286) into MethodInvocation(256) at 1", "Insert MethodInvocation(188) into MethodInvocation(190) at 0", "Move SimpleName: getPort(209) into MethodInvocation(190) at 1", "Update SimpleName: scheme(206) to route", "Move SimpleName: scheme(206) into MethodInvocation(188) at 0", "Update SimpleName: target(208) to getTargetHost", "Move SimpleName: target(208) into MethodInvocation(188) at 1", "Delete QualifiedName: org.apache.http.conn.scheme.SchemeRegistry(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.http.protocol.ExecutionContext(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: ClientContext.AUTH_CACHE(119)", "Delete MethodInvocation(120)", "Delete CastExpression(121)", "Delete SimpleName: CredentialsProvider(140)", "Delete SimpleType: CredentialsProvider(141)", "Delete QualifiedName: ClientContext.CREDS_PROVIDER(144)", "Delete MethodInvocation(145)", "Delete CastExpression(146)", "Delete SimpleName: HttpHost(162)", "Delete SimpleType: HttpHost(163)", "Delete QualifiedName: ExecutionContext.HTTP_TARGET_HOST(169)", "Delete MethodInvocation(170)", "Delete CastExpression(171)", "Delete SimpleName: SchemeRegistry(182)", "Delete SimpleType: SchemeRegistry(183)", "Delete QualifiedName: ClientContext.SCHEME_REGISTRY(186)", "Delete MethodInvocation(187)", "Delete CastExpression(188)", "Delete SimpleName: Scheme(191)", "Delete SimpleType: Scheme(192)", "Delete SimpleName: getScheme(195)", "Delete SimpleName: resolvePort(207)", "Delete MethodInvocation(210)", "Delete Block(218)", "Delete IfStatement(219)", "Delete QualifiedName: ClientContext.TARGET_AUTH_STATE(227)", "Delete MethodInvocation(228)", "Delete CastExpression(229)", "Delete SimpleName: HttpHost(271)", "Delete SimpleType: HttpHost(272)", "Delete QualifiedName: ExecutionContext.HTTP_PROXY_HOST(275)", "Delete MethodInvocation(276)", "Delete CastExpression(277)", "Delete SimpleName: AuthState(280)", "Delete SimpleType: AuthState(281)", "Delete SimpleName: AuthState(283)", "Delete SimpleType: AuthState(284)", "Delete QualifiedName: ClientContext.PROXY_AUTH_STATE(287)", "Delete MethodInvocation(288)", "Delete CastExpression(289)"]}}, {"RequestClientConnControl_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleName: HttpClientContext to MethodInvocation at 0", "INS SimpleName: adapt to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: clientContext to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: context to MethodInvocation at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS VariableDeclarationStatement to Block at 4"]}, {"root": "UPDATE from RouteInfo to HttpClientContext", "operations": ["UPD SimpleName: RouteInfo from RouteInfo to HttpClientContext", "UPD SimpleType: RouteInfo from RouteInfo to HttpClientContext"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1", "MOV SimpleType: RouteInfo to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: RouteInfo to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from context to clientContext", "operations": ["UPD SimpleName: context from context to clientContext"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getHttpRoute", "operations": ["UPD SimpleName: getAttribute from getAttribute to getHttpRoute"]}, {"root": "DEL CastExpression", "operations": ["DEL MethodInvocation", "DEL CastExpression", "DEL QualifiedName: ClientContext.ROUTE"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement"]}]}}, {"RequestClientConnControl_diff": {"operations": ["Insert VariableDeclarationStatement(119) into Block(190) at 3", "Insert VariableDeclarationStatement(127) into Block(190) at 4", "Update SimpleType: RouteInfo(112) to HttpClientContext", "Move SimpleType: RouteInfo(112) into VariableDeclarationStatement(119) at 0", "Insert VariableDeclarationFragment(118) into VariableDeclarationStatement(119) at 1", "Move SimpleType: RouteInfo(115) into VariableDeclarationStatement(127) at 0", "Move VariableDeclarationFragment(121) into VariableDeclarationStatement(127) at 1", "Update SimpleName: RouteInfo(111) to HttpClientContext", "Insert SimpleName: clientContext(113) into VariableDeclarationFragment(118) at 0", "Insert MethodInvocation(117) into VariableDeclarationFragment(118) at 1", "Insert MethodInvocation(125) into VariableDeclarationFragment(126) at 1", "Insert SimpleName: HttpClientContext(114) into MethodInvocation(117) at 0", "Insert SimpleName: adapt(115) into MethodInvocation(117) at 1", "Insert SimpleName: context(116) into MethodInvocation(117) at 2", "Update SimpleName: context(116) to clientContext", "Move SimpleName: context(116) into MethodInvocation(125) at 0", "Update SimpleName: getAttribute(117) to getHttpRoute", "Move SimpleName: getAttribute(117) into MethodInvocation(125) at 1", "Delete QualifiedName: ClientContext.ROUTE(118)", "Delete MethodInvocation(119)", "Delete CastExpression(120)", "Delete VariableDeclarationStatement(122)"]}}, {"ResponseAuthCache_cluster": {"actions": [{"root": "DEL SimpleName: schemeRegistry", "operations": ["DEL SimpleName: schemeRegistry"]}]}}, {"ResponseAuthCache_diff": {"operations": ["Delete SimpleName: schemeRegistry(237)"]}}, {"ResponseProcessCookies_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleName: clientContext to MethodInvocation at 0", "INS SimpleName: getCookieSpec to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: cookieSpec to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 5", "operations": ["INS VariableDeclarationStatement to Block at 5"]}, {"root": "UPDATE from CookieSpec to HttpClientContext", "operations": ["UPD SimpleType: CookieSpec from CookieSpec to HttpClientContext", "UPD SimpleName: CookieSpec from CookieSpec to HttpClientContext", "UPD SimpleName: context from context to HttpClientContext"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: CookieSpec to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: CookieStore to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from context to clientContext", "operations": ["UPD SimpleName: context from context to clientContext", "UPD SimpleName: context from context to clientContext", "UPD SimpleName: cookieSpec from cookieSpec to clientContext"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: context to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAttribute to MethodInvocation at 1", "MOV SimpleName: context to MethodInvocation at 0"]}, {"root": "UPDATE from getAttribute to adapt", "operations": ["UPD SimpleName: getAttribute from getAttribute to adapt"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getCookieStore", "operations": ["UPD SimpleName: getAttribute from getAttribute to getCookieStore"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getCookieOrigin", "operations": ["UPD SimpleName: getAttribute from getAttribute to getCookieOrigin"]}, {"root": "DEL CastExpression", "operations": ["DEL MethodInvocation", "DEL CastExpression", "DEL QualifiedName: ClientContext.COOKIE_SPEC"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression", "DEL QualifiedName: ClientContext.COOKIE_STORE", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: CookieStore", "DEL VariableDeclarationStatement", "DEL SimpleType: CookieStore"]}, {"root": "DEL CastExpression", "operations": ["DEL QualifiedName: ClientContext.COOKIE_ORIGIN", "DEL SimpleName: CookieOrigin", "DEL CastExpression", "DEL SimpleType: CookieOrigin", "DEL MethodInvocation"]}]}}, {"ResponseProcessCookies_diff": {"operations": ["Insert VariableDeclarationStatement(121) into Block(214) at 3", "Insert VariableDeclarationStatement(142) into Block(214) at 5", "Update SimpleType: CookieSpec(106) to HttpClientContext", "Move SimpleType: CookieSpec(109) into VariableDeclarationStatement(121) at 0", "Insert VariableDeclarationFragment(120) into VariableDeclarationStatement(121) at 1", "Move SimpleType: CookieStore(134) into VariableDeclarationStatement(142) at 0", "Move VariableDeclarationFragment(140) into VariableDeclarationStatement(142) at 1", "Update SimpleName: CookieSpec(105) to HttpClientContext", "Update SimpleName: cookieSpec(107) to clientContext", "Insert MethodInvocation(111) into VariableDeclarationFragment(112) at 1", "Insert SimpleName: cookieSpec(116) into VariableDeclarationFragment(120) at 0", "Insert MethodInvocation(119) into VariableDeclarationFragment(120) at 1", "Insert MethodInvocation(140) into VariableDeclarationFragment(141) at 1", "Insert MethodInvocation(161) into VariableDeclarationFragment(162) at 1", "Update SimpleName: context(110) to HttpClientContext", "Move SimpleName: context(110) into MethodInvocation(111) at 0", "Update SimpleName: getAttribute(111) to adapt", "Move SimpleName: getAttribute(111) into MethodInvocation(111) at 1", "Insert SimpleName: context(110) into MethodInvocation(111) at 2", "Insert SimpleName: clientContext(117) into MethodInvocation(119) at 0", "Insert SimpleName: getCookieSpec(118) into MethodInvocation(119) at 1", "Update SimpleName: context(135) to clientContext", "Move SimpleName: context(135) into MethodInvocation(140) at 0", "Update SimpleName: getAttribute(136) to getCookieStore", "Move SimpleName: getAttribute(136) into MethodInvocation(140) at 1", "Update SimpleName: context(160) to clientContext", "Move SimpleName: context(160) into MethodInvocation(161) at 0", "Update SimpleName: getAttribute(161) to getCookieOrigin", "Move SimpleName: getAttribute(161) into MethodInvocation(161) at 1", "Delete QualifiedName: ClientContext.COOKIE_SPEC(112)", "Delete MethodInvocation(113)", "Delete CastExpression(114)", "Delete QualifiedName: ClientContext.COOKIE_STORE(137)", "Delete MethodInvocation(138)", "Delete CastExpression(139)", "Delete SimpleName: CookieStore(130)", "Delete SimpleType: CookieStore(131)", "Delete VariableDeclarationStatement(141)", "Delete SimpleName: CookieOrigin(158)", "Delete SimpleType: CookieOrigin(159)", "Delete QualifiedName: ClientContext.COOKIE_ORIGIN(162)", "Delete MethodInvocation(163)", "Delete CastExpression(164)"]}}, {"Scheme_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.apache.http.config.Registry to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: org.apache.http.conn.SchemePortResolver to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS MarkerAnnotation to TypeDeclaration: class at 2", "operations": ["INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS MarkerAnnotation to TypeDeclaration: class at 2"]}, {"root": "INS TagElement: @deprecated to Javadoc at 2", "operations": ["INS TagElement: @link to TagElement: @deprecated at 1", "INS TextElement: and  to TagElement: @deprecated at 3", "INS TagElement: @deprecated to Javadoc at 2", "INS TextElement:  for default port resolution to TagElement: @deprecated at 2", "INS TextElement:  for socket factory lookups. to TagElement: @deprecated at 5", "INS TextElement:  (4.3) use  to TagElement: @deprecated at 0", "INS TagElement: @link to TagElement: @deprecated at 4", "INS SimpleName: SchemePortResolver to TagElement: @link at 0", "INS SimpleName: Registry to TagElement: @link at 0"]}, {"root": "DEL SingleMemberAnnotation", "operations": ["DEL SimpleName: SuppressWarnings", "DEL SingleMemberAnnotation", "DEL StringLiteral: \"deprecation\""]}]}}, {"Scheme_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(706) at 3", "Insert ImportDeclaration(9) into CompilationUnit(706) at 4", "Insert QualifiedName: org.apache.http.config.Registry(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: org.apache.http.conn.SchemePortResolver(8) into ImportDeclaration(9) at 0", "Insert MarkerAnnotation(41) into TypeDeclaration: class(705) at 2", "Insert TagElement: @deprecated(36) into Javadoc(37) at 2", "Insert SimpleName: Deprecated(40) into MarkerAnnotation(41) at 0", "Insert TextElement:  (4.3) use (28) into TagElement: @deprecated(36) at 0", "Insert TagElement: @link(30) into TagElement: @deprecated(36) at 1", "Insert TextElement:  for default port resolution(31) into TagElement: @deprecated(36) at 2", "Insert TextElement: and (32) into TagElement: @deprecated(36) at 3", "Insert TagElement: @link(34) into TagElement: @deprecated(36) at 4", "Insert TextElement:  for socket factory lookups.(35) into TagElement: @deprecated(36) at 5", "Insert SimpleName: SchemePortResolver(29) into TagElement: @link(30) at 0", "Insert SimpleName: Registry(33) into TagElement: @link(34) at 0", "Delete SimpleName: SuppressWarnings(100)", "Delete StringLiteral: \"deprecation\"(101)", "Delete SingleMemberAnnotation(102)"]}}, {"SchemeRegistry_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: org.apache.http.config.Registry to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS MarkerAnnotation to TypeDeclaration: class at 2", "operations": ["INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS MarkerAnnotation to TypeDeclaration: class at 2"]}, {"root": "INS TagElement: @deprecated to Javadoc at 2", "operations": ["INS TagElement: @link to TagElement: @deprecated at 1", "INS TextElement:  (4.3) use  to TagElement: @deprecated at 0", "INS SimpleName: Registry to TagElement: @link at 0", "INS TagElement: @deprecated to Javadoc at 2"]}]}}, {"SchemeRegistry_diff": {"operations": ["Insert ImportDeclaration(13) into CompilationUnit(358) at 6", "Insert QualifiedName: org.apache.http.config.Registry(12) into ImportDeclaration(13) at 0", "Insert MarkerAnnotation(32) into TypeDeclaration: class(357) at 2", "Insert TagElement: @deprecated(27) into Javadoc(28) at 2", "Insert SimpleName: Deprecated(31) into MarkerAnnotation(32) at 0", "Insert TextElement:  (4.3) use (24) into TagElement: @deprecated(27) at 0", "Insert TagElement: @link(26) into TagElement: @deprecated(27) at 1", "Insert SimpleName: Registry(25) into TagElement: @link(26) at 0"]}}, {"ConnectionSocketFactory_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.http.config.SocketConfig"]}, {"root": "DEL TagElement: @param", "operations": ["DEL SimpleName: config", "DEL TextElement:  Socket configuration. If <code>null</cpde> ", "DEL SimpleName: DEFAULT", "DEL TagElement: @param", "DEL TagElement: @link", "DEL MemberRef", "DEL TextElement: will be used.", "DEL SimpleName: SocketConfig"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: config", "DEL SimpleName: SocketConfig", "DEL SingleVariableDeclaration", "DEL SimpleType: SocketConfig"]}]}}, {"ConnectionSocketFactory_diff": {"operations": ["     *   HttpContext))(24) to TextElement:  #connectSocket(Socket, SocketConfig, HttpHost, InetSocketAddress, InetSocketAddress,", "     *   HttpContext))(22)", "Delete QualifiedName: org.apache.http.config.SocketConfig(10)", "Delete ImportDeclaration(11)", "Delete SimpleName: config(60)", "Delete TextElement:  Socket configuration. If <code>null</cpde> (61)", "Delete SimpleName: SocketConfig(62)", "Delete SimpleName: DEFAULT(63)", "Delete MemberRef(64)", "Delete TagElement: @link(65)", "Delete TextElement: will be used.(66)", "Delete TagElement: @param(67)", "Delete SimpleName: SocketConfig(102)", "Delete SimpleType: SocketConfig(103)", "Delete SimpleName: config(104)", "Delete SingleVariableDeclaration(105)"]}}, {"PlainSocketFactory_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.http.config.SocketConfig", "DEL ImportDeclaration"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleType: SocketConfig", "DEL SimpleName: SocketConfig", "DEL SimpleName: config", "DEL Modifier: final"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: SocketConfig", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL NullLiteral", "DEL SimpleName: sconf", "DEL ConditionalExpression", "DEL SimpleName: config", "DEL SimpleName: SocketConfig", "DEL QualifiedName: SocketConfig.DEFAULT", "DEL SimpleName: config", "DEL InfixExpression: !="]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: sock", "DEL MethodInvocation", "DEL SimpleName: setReuseAddress", "DEL SimpleName: sconf", "DEL SimpleName: isSoReuseAddress", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: sock", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: sconf", "DEL SimpleName: setSoTimeout", "DEL SimpleName: getSoTimeout", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: sconf", "DEL SimpleName: isTcpNoDelay", "DEL SimpleName: setTcpNoDelay", "DEL MethodInvocation", "DEL SimpleName: sock", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: linger", "DEL SimpleName: sconf", "DEL VariableDeclarationStatement", "DEL SimpleName: getSoLinger", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL MethodInvocation"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: sock", "DEL SimpleName: setSoLinger", "DEL NumberLiteral: 0", "DEL SimpleName: linger", "DEL InfixExpression: >", "DEL SimpleName: linger", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: linger", "DEL Block", "DEL InfixExpression: >=", "DEL ExpressionStatement", "DEL NumberLiteral: 0"]}]}}, {"PlainSocketFactory_diff": {"operations": ["Delete QualifiedName: org.apache.http.config.SocketConfig(14)", "Delete ImportDeclaration(15)", "Delete Modifier: final(86)", "Delete SimpleName: SocketConfig(87)", "Delete SimpleType: SocketConfig(88)", "Delete SimpleName: config(89)", "Delete SingleVariableDeclaration(90)", "Delete SimpleName: SocketConfig(128)", "Delete SimpleType: SocketConfig(129)", "Delete SimpleName: sconf(130)", "Delete SimpleName: config(131)", "Delete NullLiteral(132)", "Delete InfixExpression: !=(133)", "Delete SimpleName: config(134)", "Delete QualifiedName: SocketConfig.DEFAULT(135)", "Delete ConditionalExpression(136)", "Delete VariableDeclarationFragment(137)", "Delete VariableDeclarationStatement(138)", "Delete SimpleName: sock(142)", "Delete SimpleName: setReuseAddress(143)", "Delete SimpleName: sconf(144)", "Delete SimpleName: isSoReuseAddress(145)", "Delete MethodInvocation(146)", "Delete MethodInvocation(147)", "Delete ExpressionStatement(148)", "Delete SimpleName: sock(156)", "Delete SimpleName: setSoTimeout(157)", "Delete SimpleName: sconf(158)", "Delete SimpleName: getSoTimeout(159)", "Delete MethodInvocation(160)", "Delete MethodInvocation(161)", "Delete ExpressionStatement(162)", "Delete SimpleName: sock(183)", "Delete SimpleName: setTcpNoDelay(184)", "Delete SimpleName: sconf(185)", "Delete SimpleName: isTcpNoDelay(186)", "Delete MethodInvocation(187)", "Delete MethodInvocation(188)", "Delete ExpressionStatement(189)", "Delete PrimitiveType: int(190)", "Delete SimpleName: linger(191)", "Delete SimpleName: sconf(192)", "Delete SimpleName: getSoLinger(193)", "Delete MethodInvocation(194)", "Delete VariableDeclarationFragment(195)", "Delete VariableDeclarationStatement(196)", "Delete SimpleName: linger(197)", "Delete NumberLiteral: 0(198)", "Delete InfixExpression: >=(199)", "Delete SimpleName: sock(200)", "Delete SimpleName: setSoLinger(201)", "Delete SimpleName: linger(202)", "Delete NumberLiteral: 0(203)", "Delete InfixExpression: >(204)", "Delete SimpleName: linger(205)", "Delete MethodInvocation(206)", "Delete ExpressionStatement(207)", "Delete Block(208)", "Delete IfStatement(209)"]}}, {"SSLSocketFactory_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 29"]}, {"root": "UPDATE from org.apache.http.conn.socket.PlainSocketFactory to java.net.SocketTimeoutException", "operations": ["UPD QualifiedName: org.apache.http.conn.socket.PlainSocketFactory from org.apache.http.conn.socket.PlainSocketFactory to java.net.SocketTimeoutException"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 3", "INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: localAddress to InfixExpression: != at 0", "INS SimpleName: localAddress to MethodInvocation at 2", "INS SimpleName: sock to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: bind to MethodInvocation at 1"]}, {"root": "INS TryStatement to Block at 4", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: ConnectTimeoutException to SimpleType: ConnectTimeoutException at 0", "INS SimpleType: SocketTimeoutException to SingleVariableDeclaration at 0", "INS Block to CatchClause at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: remoteAddress to MethodInvocation at 2", "INS SimpleType: ConnectTimeoutException to ClassInstanceCreation at 0", "INS TryStatement to Block at 4", "INS SimpleName: sock to MethodInvocation at 0", "INS SimpleName: remoteAddress to ClassInstanceCreation at 2", "INS SimpleName: host to ClassInstanceCreation at 1", "INS Block to TryStatement at 0", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS CatchClause to TryStatement at 1", "INS SimpleName: SocketTimeoutException to SimpleType: SocketTimeoutException at 0"]}, {"root": "UPDATE from connectSocket to connect", "operations": ["UPD SimpleName: connectSocket from connectSocket to connect"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: connectSocket to MethodInvocation at 1", "MOV SimpleName: connectTimeout to MethodInvocation at 3"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.http.params.HttpParamConfig", "DEL ImportDeclaration"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: SocketConfig", "DEL SimpleName: params", "DEL SimpleName: SocketConfig", "DEL MethodInvocation", "DEL SimpleName: config", "DEL SimpleName: getSocketConfig", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: HttpParamConfig"]}, {"root": "DEL SimpleName: config", "operations": ["DEL SimpleName: config"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL SimpleName: SocketConfig", "DEL SimpleName: config", "DEL SimpleType: SocketConfig"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL QualifiedName: PlainSocketFactory.INSTANCE", "DEL SimpleName: context", "DEL ExpressionStatement", "DEL SimpleName: host", "DEL SimpleName: remoteAddress", "DEL SimpleName: config", "DEL SimpleName: socket", "DEL MethodInvocation", "DEL SimpleName: localAddress"]}]}}, {"SSLSocketFactory_diff": {"operations": ["Move ImportDeclaration(23) into CompilationUnit(2526) at 29", "Update QualifiedName: org.apache.http.conn.socket.PlainSocketFactory(22) to java.net.SocketTimeoutException", "Insert IfStatement(2360) into Block(2413) at 3", "Insert TryStatement(2380) into Block(2413) at 4", "Insert InfixExpression: !=(2353) into IfStatement(2360) at 0", "Insert Block(2359) into IfStatement(2360) at 1", "Insert Block(2367) into TryStatement(2380) at 0", "Insert CatchClause(2379) into TryStatement(2380) at 1", "Insert SimpleName: localAddress(2351) into InfixExpression: !=(2353) at 0", "Insert NullLiteral(2352) into InfixExpression: !=(2353) at 1", "Insert ExpressionStatement(2358) into Block(2359) at 0", "Insert ExpressionStatement(2366) into Block(2367) at 0", "Insert SingleVariableDeclaration(2371) into CatchClause(2379) at 0", "Insert Block(2378) into CatchClause(2379) at 1", "Insert MethodInvocation(2357) into ExpressionStatement(2358) at 0", "Insert MethodInvocation(2365) into ExpressionStatement(2366) at 0", "Insert SimpleType: SocketTimeoutException(2369) into SingleVariableDeclaration(2371) at 0", "Insert SimpleName: ex(2370) into SingleVariableDeclaration(2371) at 1", "Insert ThrowStatement(2377) into Block(2378) at 0", "Insert SimpleName: sock(2354) into MethodInvocation(2357) at 0", "Insert SimpleName: bind(2355) into MethodInvocation(2357) at 1", "Insert SimpleName: localAddress(2356) into MethodInvocation(2357) at 2", "Insert SimpleName: sock(2361) into MethodInvocation(2365) at 0", "Update SimpleName: connectSocket(2369) to connect", "Move SimpleName: connectSocket(2369) into MethodInvocation(2365) at 1", "Insert SimpleName: remoteAddress(2363) into MethodInvocation(2365) at 2", "Move SimpleName: connectTimeout(2370) into MethodInvocation(2365) at 3", "Insert SimpleName: SocketTimeoutException(2368) into SimpleType: SocketTimeoutException(2369) at 0", "Insert ClassInstanceCreation(2376) into ThrowStatement(2377) at 0", "Insert SimpleType: ConnectTimeoutException(2373) into ClassInstanceCreation(2376) at 0", "Insert SimpleName: host(2374) into ClassInstanceCreation(2376) at 1", "Insert SimpleName: remoteAddress(2375) into ClassInstanceCreation(2376) at 2", "Insert SimpleName: ConnectTimeoutException(2372) into SimpleType: ConnectTimeoutException(2373) at 0", "Delete QualifiedName: org.apache.http.params.HttpParamConfig(26)", "Delete ImportDeclaration(27)", "Delete SimpleName: SocketConfig(1784)", "Delete SimpleType: SocketConfig(1785)", "Delete SimpleName: config(1786)", "Delete SimpleName: HttpParamConfig(1787)", "Delete SimpleName: getSocketConfig(1788)", "Delete SimpleName: params(1789)", "Delete MethodInvocation(1790)", "Delete VariableDeclarationFragment(1791)", "Delete VariableDeclarationStatement(1792)", "Delete SimpleName: config(1796)", "Delete Modifier: final(2306)", "Delete SimpleName: SocketConfig(2307)", "Delete SimpleType: SocketConfig(2308)", "Delete SimpleName: config(2309)", "Delete SingleVariableDeclaration(2310)", "Delete QualifiedName: PlainSocketFactory.INSTANCE(2368)", "Delete SimpleName: socket(2371)", "Delete SimpleName: config(2372)", "Delete SimpleName: host(2373)", "Delete SimpleName: remoteAddress(2374)", "Delete SimpleName: localAddress(2375)", "Delete SimpleName: context(2376)", "Delete MethodInvocation(2377)", "Delete ExpressionStatement(2378)"]}}, {"BasicSchemeFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.http.auth.AuthSchemeProvider to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: org.apache.http.protocol.HttpContext to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS SingleMemberAnnotation to TypeDeclaration: class at 2", "operations": ["INS SingleMemberAnnotation to TypeDeclaration: class at 2", "INS StringLiteral: \"deprecation\" to SingleMemberAnnotation at 1", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0"]}, {"root": "INS SimpleType: AuthSchemeProvider to TypeDeclaration: class at 6", "operations": ["INS SimpleName: AuthSchemeProvider to SimpleType: AuthSchemeProvider at 0", "INS SimpleType: AuthSchemeProvider to TypeDeclaration: class at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: HttpContext to SimpleType: HttpContext at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleType: AuthScheme to MethodDeclaration at 1", "INS SimpleName: context to SingleVariableDeclaration at 2", "INS SimpleType: HttpContext to SingleVariableDeclaration at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: create to MethodDeclaration at 2", "INS SimpleType: BasicScheme to ClassInstanceCreation at 0", "INS SimpleName: AuthScheme to SimpleType: AuthScheme at 0", "INS SimpleName: BasicScheme to SimpleType: BasicScheme at 0", "INS Block to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "UPDATE from AuthSchemeFactory to AuthSchemeProvider", "operations": ["UPD SimpleName: AuthSchemeFactory from AuthSchemeFactory to AuthSchemeProvider"]}]}}, {"BasicSchemeFactory_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(66) at 4", "Insert ImportDeclaration(13) into CompilationUnit(66) at 6", "Insert QualifiedName: org.apache.http.auth.AuthSchemeProvider(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.http.protocol.HttpContext(12) into ImportDeclaration(13) at 0", "Insert SingleMemberAnnotation(28) into TypeDeclaration: class(65) at 2", "Insert SimpleType: AuthSchemeProvider(34) into TypeDeclaration: class(65) at 6", "Insert MethodDeclaration(64) into TypeDeclaration: class(65) at 8", "Insert SimpleName: SuppressWarnings(26) into SingleMemberAnnotation(28) at 0", "Insert StringLiteral: \"deprecation\"(27) into SingleMemberAnnotation(28) at 1", "Insert SimpleName: AuthSchemeProvider(33) into SimpleType: AuthSchemeProvider(34) at 0", "Insert Modifier: public(50) into MethodDeclaration(64) at 0", "Insert SimpleType: AuthScheme(52) into MethodDeclaration(64) at 1", "Insert SimpleName: create(53) into MethodDeclaration(64) at 2", "Insert SingleVariableDeclaration(58) into MethodDeclaration(64) at 3", "Insert Block(63) into MethodDeclaration(64) at 4", "Insert SimpleName: AuthScheme(51) into SimpleType: AuthScheme(52) at 0", "Insert Modifier: final(54) into SingleVariableDeclaration(58) at 0", "Insert SimpleType: HttpContext(56) into SingleVariableDeclaration(58) at 1", "Insert SimpleName: context(57) into SingleVariableDeclaration(58) at 2", "Insert ReturnStatement(62) into Block(63) at 0", "Update SimpleName: AuthSchemeFactory(10) to AuthSchemeProvider", "Insert SimpleName: HttpContext(55) into SimpleType: HttpContext(56) at 0", "Insert ClassInstanceCreation(61) into ReturnStatement(62) at 0", "Insert SimpleType: BasicScheme(60) into ClassInstanceCreation(61) at 0", "Insert SimpleName: BasicScheme(59) into SimpleType: BasicScheme(60) at 0"]}}, {"DigestSchemeFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.http.auth.AuthSchemeProvider to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: org.apache.http.protocol.HttpContext to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS SingleMemberAnnotation to TypeDeclaration: class at 2", "operations": ["INS SingleMemberAnnotation to TypeDeclaration: class at 2", "INS StringLiteral: \"deprecation\" to SingleMemberAnnotation at 1", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0"]}, {"root": "INS SimpleType: AuthSchemeProvider to TypeDeclaration: class at 6", "operations": ["INS SimpleName: AuthSchemeProvider to SimpleType: AuthSchemeProvider at 0", "INS SimpleType: AuthSchemeProvider to TypeDeclaration: class at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: HttpContext to SimpleType: HttpContext at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleType: AuthScheme to MethodDeclaration at 1", "INS SimpleName: context to SingleVariableDeclaration at 2", "INS SimpleType: HttpContext to SingleVariableDeclaration at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: create to MethodDeclaration at 2", "INS SimpleType: DigestScheme to ClassInstanceCreation at 0", "INS SimpleName: AuthScheme to SimpleType: AuthScheme at 0", "INS SimpleName: DigestScheme to SimpleType: DigestScheme at 0", "INS Block to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "UPDATE from AuthSchemeFactory to AuthSchemeProvider", "operations": ["UPD SimpleName: AuthSchemeFactory from AuthSchemeFactory to AuthSchemeProvider"]}]}}, {"DigestSchemeFactory_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(66) at 4", "Insert ImportDeclaration(13) into CompilationUnit(66) at 6", "Insert QualifiedName: org.apache.http.auth.AuthSchemeProvider(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.http.protocol.HttpContext(12) into ImportDeclaration(13) at 0", "Insert SingleMemberAnnotation(28) into TypeDeclaration: class(65) at 2", "Insert SimpleType: AuthSchemeProvider(34) into TypeDeclaration: class(65) at 6", "Insert MethodDeclaration(64) into TypeDeclaration: class(65) at 8", "Insert SimpleName: SuppressWarnings(26) into SingleMemberAnnotation(28) at 0", "Insert StringLiteral: \"deprecation\"(27) into SingleMemberAnnotation(28) at 1", "Insert SimpleName: AuthSchemeProvider(33) into SimpleType: AuthSchemeProvider(34) at 0", "Insert Modifier: public(50) into MethodDeclaration(64) at 0", "Insert SimpleType: AuthScheme(52) into MethodDeclaration(64) at 1", "Insert SimpleName: create(53) into MethodDeclaration(64) at 2", "Insert SingleVariableDeclaration(58) into MethodDeclaration(64) at 3", "Insert Block(63) into MethodDeclaration(64) at 4", "Insert SimpleName: AuthScheme(51) into SimpleType: AuthScheme(52) at 0", "Insert Modifier: final(54) into SingleVariableDeclaration(58) at 0", "Insert SimpleType: HttpContext(56) into SingleVariableDeclaration(58) at 1", "Insert SimpleName: context(57) into SingleVariableDeclaration(58) at 2", "Insert ReturnStatement(62) into Block(63) at 0", "Update SimpleName: AuthSchemeFactory(10) to AuthSchemeProvider", "Insert SimpleName: HttpContext(55) into SimpleType: HttpContext(56) at 0", "Insert ClassInstanceCreation(61) into ReturnStatement(62) at 0", "Insert SimpleType: DigestScheme(60) into ClassInstanceCreation(61) at 0", "Insert SimpleName: DigestScheme(59) into SimpleType: DigestScheme(60) at 0"]}}, {"KerberosSchemeFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: org.apache.http.auth.AuthSchemeProvider to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.http.protocol.HttpContext to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 10"]}, {"root": "INS SingleMemberAnnotation to TypeDeclaration: class at 2", "operations": ["INS SingleMemberAnnotation to TypeDeclaration: class at 2", "INS StringLiteral: \"deprecation\" to SingleMemberAnnotation at 1", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0"]}, {"root": "INS SimpleType: AuthSchemeProvider to TypeDeclaration: class at 6", "operations": ["INS SimpleName: AuthSchemeProvider to SimpleType: AuthSchemeProvider at 0", "INS SimpleType: AuthSchemeProvider to TypeDeclaration: class at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS FieldAccess to ClassInstanceCreation at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleType: HttpContext to SingleVariableDeclaration at 1", "INS SimpleName: context to SingleVariableDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: KerberosScheme to SimpleType: KerberosScheme at 0", "INS SimpleType: AuthScheme to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS SimpleType: KerberosScheme to ClassInstanceCreation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: create to MethodDeclaration at 2", "INS SimpleName: stripPort to FieldAccess at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: HttpContext to SimpleType: HttpContext at 0", "INS SimpleName: AuthScheme to SimpleType: AuthScheme at 0", "INS ClassInstanceCreation to ReturnStatement at 0"]}, {"root": "INS TagElement: @link to TagElement at 0", "operations": ["INS TagElement: @link to TagElement at 0", "INS SimpleName: AuthSchemeProvider to TagElement: @link at 0"]}, {"root": "UPDATE from Kerberos authentication scheme factory. to  implementation that creates and initializes", "operations": ["UPD TextElement: Kerberos authentication scheme factory. from Kerberos authentication scheme factory. to  implementation that creates and initializes"]}, {"root": "INS TagElement: @link to TagElement at 2", "operations": ["INS TagElement: @link to TagElement at 2", "INS SimpleName: KerberosScheme to TagElement: @link at 0"]}, {"root": "INS TextElement:  instances. to TagElement at 3", "operations": ["INS TextElement:  instances. to TagElement at 3"]}]}}, {"KerberosSchemeFactory_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(105) at 4", "Insert ImportDeclaration(13) into CompilationUnit(105) at 6", "Move MethodDeclaration(64) into TypeDeclaration: class(104) at 10", "Insert QualifiedName: org.apache.http.auth.AuthSchemeProvider(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.http.protocol.HttpContext(12) into ImportDeclaration(13) at 0", "Insert SingleMemberAnnotation(28) into TypeDeclaration: class(104) at 2", "Insert SimpleType: AuthSchemeProvider(34) into TypeDeclaration: class(104) at 6", "Insert MethodDeclaration(103) into TypeDeclaration: class(104) at 12", "Insert SimpleName: SuppressWarnings(26) into SingleMemberAnnotation(28) at 0", "Insert StringLiteral: \"deprecation\"(27) into SingleMemberAnnotation(28) at 1", "Insert SimpleName: AuthSchemeProvider(33) into SimpleType: AuthSchemeProvider(34) at 0", "Insert Modifier: public(86) into MethodDeclaration(103) at 0", "Insert SimpleType: AuthScheme(88) into MethodDeclaration(103) at 1", "Insert SimpleName: create(89) into MethodDeclaration(103) at 2", "Insert SingleVariableDeclaration(94) into MethodDeclaration(103) at 3", "Insert Block(102) into MethodDeclaration(103) at 4", "Insert TagElement: @link(15) into TagElement(20) at 0", "Update TextElement: Kerberos authentication scheme factory.(10) to  implementation that creates and initializes", "Insert TagElement: @link(18) into TagElement(20) at 2", "Insert TextElement:  instances.(19) into TagElement(20) at 3", "Insert SimpleName: AuthScheme(87) into SimpleType: AuthScheme(88) at 0", "Insert Modifier: final(90) into SingleVariableDeclaration(94) at 0", "Insert SimpleType: HttpContext(92) into SingleVariableDeclaration(94) at 1", "Insert SimpleName: context(93) into SingleVariableDeclaration(94) at 2", "Insert ReturnStatement(101) into Block(102) at 0", "Insert SimpleName: AuthSchemeProvider(14) into TagElement: @link(15) at 0", "Insert SimpleName: KerberosScheme(17) into TagElement: @link(18) at 0", "Insert SimpleName: HttpContext(91) into SimpleType: HttpContext(92) at 0", "Insert ClassInstanceCreation(100) into ReturnStatement(101) at 0", "Insert SimpleType: KerberosScheme(96) into ClassInstanceCreation(100) at 0", "Insert FieldAccess(99) into ClassInstanceCreation(100) at 1", "Insert SimpleName: KerberosScheme(95) into SimpleType: KerberosScheme(96) at 0", "Insert ThisExpression(97) into FieldAccess(99) at 0", "Insert SimpleName: stripPort(98) into FieldAccess(99) at 1"]}}, {"NTLMSchemeFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: org.apache.http.auth.AuthSchemeProvider to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.http.protocol.HttpContext to ImportDeclaration at 0"]}, {"root": "INS SingleMemberAnnotation to TypeDeclaration: class at 2", "operations": ["INS SingleMemberAnnotation to TypeDeclaration: class at 2", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS StringLiteral: \"deprecation\" to SingleMemberAnnotation at 1"]}, {"root": "INS SimpleType: AuthSchemeProvider to TypeDeclaration: class at 6", "operations": ["INS SimpleName: AuthSchemeProvider to SimpleType: AuthSchemeProvider at 0", "INS SimpleType: AuthSchemeProvider to TypeDeclaration: class at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: NTLMEngineImpl to SimpleType: NTLMEngineImpl at 0", "INS SimpleName: create to MethodDeclaration at 2", "INS SimpleName: AuthScheme to SimpleType: AuthScheme at 0", "INS SimpleName: context to SingleVariableDeclaration at 2", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleType: HttpContext to SingleVariableDeclaration at 1", "INS SimpleName: HttpContext to SimpleType: HttpContext at 0", "INS SimpleName: NTLMScheme to SimpleType: NTLMScheme at 0", "INS SimpleType: NTLMScheme to ClassInstanceCreation at 0", "INS Modifier: public to MethodDeclaration at 0", "INS ClassInstanceCreation to ClassInstanceCreation at 1", "INS SimpleType: NTLMEngineImpl to ClassInstanceCreation at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleType: AuthScheme to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from AuthSchemeFactory to AuthSchemeProvider", "operations": ["UPD SimpleName: AuthSchemeFactory from AuthSchemeFactory to AuthSchemeProvider"]}]}}, {"NTLMSchemeFactory_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(75) at 4", "Insert ImportDeclaration(13) into CompilationUnit(75) at 6", "Insert QualifiedName: org.apache.http.auth.AuthSchemeProvider(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.http.protocol.HttpContext(12) into ImportDeclaration(13) at 0", "Insert SingleMemberAnnotation(31) into TypeDeclaration: class(74) at 2", "Insert SimpleType: AuthSchemeProvider(37) into TypeDeclaration: class(74) at 6", "Insert MethodDeclaration(73) into TypeDeclaration: class(74) at 8", "Insert SimpleName: SuppressWarnings(29) into SingleMemberAnnotation(31) at 0", "Insert StringLiteral: \"deprecation\"(30) into SingleMemberAnnotation(31) at 1", "Insert SimpleName: AuthSchemeProvider(36) into SimpleType: AuthSchemeProvider(37) at 0", "Insert Modifier: public(56) into MethodDeclaration(73) at 0", "Insert SimpleType: AuthScheme(58) into MethodDeclaration(73) at 1", "Insert SimpleName: create(59) into MethodDeclaration(73) at 2", "Insert SingleVariableDeclaration(64) into MethodDeclaration(73) at 3", "Insert Block(72) into MethodDeclaration(73) at 4", "Insert SimpleName: AuthScheme(57) into SimpleType: AuthScheme(58) at 0", "Insert Modifier: final(60) into SingleVariableDeclaration(64) at 0", "Insert SimpleType: HttpContext(62) into SingleVariableDeclaration(64) at 1", "Insert SimpleName: context(63) into SingleVariableDeclaration(64) at 2", "Insert ReturnStatement(71) into Block(72) at 0", "Update SimpleName: AuthSchemeFactory(10) to AuthSchemeProvider", "Insert SimpleName: HttpContext(61) into SimpleType: HttpContext(62) at 0", "Insert ClassInstanceCreation(70) into ReturnStatement(71) at 0", "Insert SimpleType: NTLMScheme(66) into ClassInstanceCreation(70) at 0", "Insert ClassInstanceCreation(69) into ClassInstanceCreation(70) at 1", "Insert SimpleName: NTLMScheme(65) into SimpleType: NTLMScheme(66) at 0", "Insert SimpleType: NTLMEngineImpl(68) into ClassInstanceCreation(69) at 0", "Insert SimpleName: NTLMEngineImpl(67) into SimpleType: NTLMEngineImpl(68) at 0"]}}, {"RFC2617Scheme_cluster": {"actions": [{"root": "UPDATE from BasicHeaderValueParser.DEFAULT to BasicHeaderValueParser.INSTANCE", "operations": ["UPD QualifiedName: BasicHeaderValueParser.DEFAULT from BasicHeaderValueParser.DEFAULT to BasicHeaderValueParser.INSTANCE"]}]}}, {"RFC2617Scheme_diff": {"operations": ["Update QualifiedName: BasicHeaderValueParser.DEFAULT(110) to BasicHeaderValueParser.INSTANCE"]}}, {"SPNegoSchemeFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: org.apache.http.auth.AuthSchemeProvider to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.http.protocol.HttpContext to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 10"]}, {"root": "INS SingleMemberAnnotation to TypeDeclaration: class at 2", "operations": ["INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to TypeDeclaration: class at 2", "INS StringLiteral: \"deprecation\" to SingleMemberAnnotation at 1"]}, {"root": "INS SimpleType: AuthSchemeProvider to TypeDeclaration: class at 6", "operations": ["INS SimpleName: AuthSchemeProvider to SimpleType: AuthSchemeProvider at 0", "INS SimpleType: AuthSchemeProvider to TypeDeclaration: class at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS ClassInstanceCreation to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS SimpleName: context to SingleVariableDeclaration at 2", "INS FieldAccess to ClassInstanceCreation at 1", "INS SimpleName: AuthScheme to SimpleType: AuthScheme at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: create to MethodDeclaration at 2", "INS SimpleType: SPNegoScheme to ClassInstanceCreation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: HttpContext to SingleVariableDeclaration at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: stripPort to FieldAccess at 1", "INS SimpleName: HttpContext to SimpleType: HttpContext at 0", "INS SimpleType: AuthScheme to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: SPNegoScheme to SimpleType: SPNegoScheme at 0", "INS ReturnStatement to Block at 0"]}, {"root": "INS TagElement: @link to TagElement at 0", "operations": ["INS SimpleName: AuthSchemeProvider to TagElement: @link at 0", "INS TagElement: @link to TagElement at 0"]}, {"root": "UPDATE from SPNEGO (Simple and Protected GSSAPI Negotiation Mechanism) authentication to  implementation that creates and initializes", "operations": ["UPD TextElement: SPNEGO (Simple and Protected GSSAPI Negotiation Mechanism) authentication from SPNEGO (Simple and Protected GSSAPI Negotiation Mechanism) authentication to  implementation that creates and initializes"]}, {"root": "INS TagElement: @link to TagElement at 2", "operations": ["INS TagElement: @link to TagElement at 2", "INS SimpleName: SPNegoScheme to TagElement: @link at 0"]}, {"root": "UPDATE from scheme factory. to  instances.", "operations": ["UPD TextElement: scheme factory. from scheme factory. to  instances."]}]}}, {"SPNegoSchemeFactory_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(105) at 4", "Insert ImportDeclaration(13) into CompilationUnit(105) at 6", "Move MethodDeclaration(65) into TypeDeclaration: class(104) at 10", "Insert QualifiedName: org.apache.http.auth.AuthSchemeProvider(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.http.protocol.HttpContext(12) into ImportDeclaration(13) at 0", "Insert SingleMemberAnnotation(28) into TypeDeclaration: class(104) at 2", "Insert SimpleType: AuthSchemeProvider(34) into TypeDeclaration: class(104) at 6", "Insert MethodDeclaration(103) into TypeDeclaration: class(104) at 12", "Insert SimpleName: SuppressWarnings(26) into SingleMemberAnnotation(28) at 0", "Insert StringLiteral: \"deprecation\"(27) into SingleMemberAnnotation(28) at 1", "Insert SimpleName: AuthSchemeProvider(33) into SimpleType: AuthSchemeProvider(34) at 0", "Insert Modifier: public(86) into MethodDeclaration(103) at 0", "Insert SimpleType: AuthScheme(88) into MethodDeclaration(103) at 1", "Insert SimpleName: create(89) into MethodDeclaration(103) at 2", "Insert SingleVariableDeclaration(94) into MethodDeclaration(103) at 3", "Insert Block(102) into MethodDeclaration(103) at 4", "Insert TagElement: @link(15) into TagElement(20) at 0", "Update TextElement: SPNEGO (Simple and Protected GSSAPI Negotiation Mechanism) authentication(10) to  implementation that creates and initializes", "Insert TagElement: @link(18) into TagElement(20) at 2", "Update TextElement: scheme factory.(11) to  instances.", "Insert SimpleName: AuthScheme(87) into SimpleType: AuthScheme(88) at 0", "Insert Modifier: final(90) into SingleVariableDeclaration(94) at 0", "Insert SimpleType: HttpContext(92) into SingleVariableDeclaration(94) at 1", "Insert SimpleName: context(93) into SingleVariableDeclaration(94) at 2", "Insert ReturnStatement(101) into Block(102) at 0", "Insert SimpleName: AuthSchemeProvider(14) into TagElement: @link(15) at 0", "Insert SimpleName: SPNegoScheme(17) into TagElement: @link(18) at 0", "Insert SimpleName: HttpContext(91) into SimpleType: HttpContext(92) at 0", "Insert ClassInstanceCreation(100) into ReturnStatement(101) at 0", "Insert SimpleType: SPNegoScheme(96) into ClassInstanceCreation(100) at 0", "Insert FieldAccess(99) into ClassInstanceCreation(100) at 1", "Insert SimpleName: SPNegoScheme(95) into SimpleType: SPNegoScheme(96) at 0", "Insert ThisExpression(97) into FieldAccess(99) at 0", "Insert SimpleName: stripPort(98) into FieldAccess(99) at 1"]}}, {"AuthenticationStrategyImpl_cluster": {"actions": [{"root": "UPDATE from org.apache.http.auth.AuthSchemeRegistry to org.apache.http.auth.AuthSchemeProvider", "operations": ["UPD QualifiedName: org.apache.http.auth.AuthSchemeRegistry from org.apache.http.auth.AuthSchemeRegistry to org.apache.http.auth.AuthSchemeProvider"]}, {"root": "UPDATE from org.apache.http.client.protocol.ClientContext to org.apache.http.client.protocol.HttpClientContext", "operations": ["UPD QualifiedName: org.apache.http.client.protocol.ClientContext from org.apache.http.client.protocol.ClientContext to org.apache.http.client.protocol.HttpClientContext"]}, {"root": "UPDATE from org.apache.http.conn.scheme.SchemeRegistry to org.apache.http.config.Lookup", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.SchemeRegistry from org.apache.http.conn.scheme.SchemeRegistry to org.apache.http.config.Lookup"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS SimpleName: HttpClientContext to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: HttpClientContext to SimpleType: HttpClientContext at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: HttpClientContext to VariableDeclarationStatement at 0", "INS SimpleName: adapt to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: context to MethodInvocation at 2", "INS SimpleName: clientContext to VariableDeclarationFragment at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 4", "MOV IfStatement to Block at 2", "MOV ExpressionStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 3"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: adapt to MethodInvocation at 1", "INS SimpleName: context to MethodInvocation at 2", "INS SimpleName: clientContext to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: HttpClientContext to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 2", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS VariableDeclarationStatement to Block at 3"]}, {"root": "INS ParameterizedType: Lookup<AuthSchemeProvider> to VariableDeclarationStatement at 0", "operations": ["INS ParameterizedType: Lookup<AuthSchemeProvider> to VariableDeclarationStatement at 0", "INS SimpleName: Lookup to SimpleType: Lookup at 0", "INS SimpleType: AuthSchemeProvider to ParameterizedType: Lookup<AuthSchemeProvider> at 1", "INS SimpleType: Lookup to ParameterizedType: Lookup<AuthSchemeProvider> at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: CredentialsProvider to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0", "MOV Block to EnhancedForStatement at 2", "MOV Block to IfStatement at 2"]}, {"root": "UPDATE from AuthCache to HttpClientContext", "operations": ["UPD SimpleName: AuthCache from AuthCache to HttpClientContext", "UPD SimpleType: AuthCache from AuthCache to HttpClientContext", "UPD SimpleType: AuthCache from AuthCache to HttpClientContext", "UPD SimpleName: context from context to HttpClientContext", "UPD SimpleName: AuthCache from AuthCache to HttpClientContext"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1", "MOV SimpleType: AuthCache to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AuthCache to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS IfStatement to Block at 1"]}, {"root": "UPDATE from authCache to clientContext", "operations": ["UPD SimpleName: authCache from authCache to clientContext", "UPD SimpleName: context from context to clientContext", "UPD SimpleName: context from context to clientContext", "UPD SimpleName: context from context to clientContext", "UPD SimpleName: context from context to clientContext", "UPD SimpleName: context from context to clientContext"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: context to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 1"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from AuthSchemeRegistry to AuthSchemeProvider", "operations": ["UPD SimpleName: AuthSchemeRegistry from AuthSchemeRegistry to AuthSchemeProvider"]}, {"root": "MOVE from SimpleType: AuthSchemeProvider", "operations": ["MOV SimpleName: AuthSchemeRegistry to SimpleType: AuthSchemeProvider at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAttribute to MethodInvocation at 1", "MOV SimpleName: context to MethodInvocation at 0"]}, {"root": "UPDATE from getAttribute to getAuthSchemeRegistry", "operations": ["UPD SimpleName: getAttribute from getAttribute to getAuthSchemeRegistry"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getCredentialsProvider", "operations": ["UPD SimpleName: getAttribute from getAttribute to getCredentialsProvider"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAttribute to MethodInvocation at 1", "MOV SimpleName: context to MethodInvocation at 0"]}, {"root": "UPDATE from getAttribute to adapt", "operations": ["UPD SimpleName: getAttribute from getAttribute to adapt"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AuthCache to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getAuthCache", "operations": ["UPD SimpleName: getAttribute from getAttribute to getAuthCache", "UPD SimpleName: getAttribute from getAttribute to getAuthCache"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleType: AuthSchemeProvider to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: AuthSchemeProvider to SimpleType: AuthSchemeProvider at 0", "INS SimpleName: id to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: lookup to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS InfixExpression: == to IfStatement at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: log to FieldAccess at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: id to InfixExpression: + at 1", "INS ExpressionStatement to Block at 0", "INS NullLiteral to InfixExpression: == at 1", "INS ContinueStatement to Block at 1", "INS Block to IfStatement at 1", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: log to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0", "INS StringLiteral: \" not supported\" to InfixExpression: + at 2", "INS StringLiteral: \"Authentication scheme \" to InfixExpression: + at 0", "INS IfStatement to Block at 0", "INS SimpleName: warn to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS Block to IfStatement at 1", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: authSchemeProvider to InfixExpression: == at 0", "INS ThisExpression to FieldAccess at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: authSchemeProvider to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: authScheme to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "UPDATE from schemeRegistry to authCache", "operations": ["UPD SimpleName: schemeRegistry from schemeRegistry to authCache"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AuthScheme to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from authScheme to authSchemeProvider", "operations": ["UPD SimpleName: authScheme from authScheme to authSchemeProvider"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: authScheme to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from setAttribute to setAuthCache", "operations": ["UPD SimpleName: setAttribute from setAttribute to setAuthCache"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: registry to MethodInvocation at 0"]}, {"root": "UPDATE from response to create", "operations": ["UPD SimpleName: response from response to create"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getParams to MethodInvocation at 2", "MOV SimpleName: response to MethodInvocation at 1"]}, {"root": "UPDATE from getParams to context", "operations": ["UPD SimpleName: getParams from getParams to context"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV SimpleName: log to FieldAccess at 1", "MOV ThisExpression to FieldAccess at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 3", "MOV FieldAccess to MethodInvocation at 0"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV SimpleName: log to FieldAccess at 1"]}, {"root": "UPDATE from \"Authentication scheme \" to \"Challenge for \"", "operations": ["UPD StringLiteral: \"Authentication scheme \" from \"Authentication scheme \" to \"Challenge for \""]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV SimpleName: id to InfixExpression: + at 1"]}, {"root": "UPDATE from \" not supported\" to \" authentication scheme not available\"", "operations": ["UPD StringLiteral: \" not supported\" from \" not supported\" to \" authentication scheme not available\""]}, {"root": "DEL SimpleType: AuthSchemeRegistry", "operations": ["DEL SimpleType: AuthSchemeRegistry"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleName: AuthSchemeRegistry", "DEL QualifiedName: ClientContext.AUTHSCHEME_REGISTRY", "DEL SimpleType: AuthSchemeRegistry", "DEL MethodInvocation", "DEL CastExpression"]}, {"root": "DEL SimpleType: CredentialsProvider", "operations": ["DEL SimpleName: CredentialsProvider", "DEL SimpleType: CredentialsProvider"]}, {"root": "DEL CastExpression", "operations": ["DEL QualifiedName: ClientContext.CREDS_PROVIDER", "DEL MethodInvocation", "DEL CastExpression"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: getAuthScheme", "DEL SimpleName: id", "DEL MethodInvocation"]}, {"root": "DEL TryStatement", "operations": ["DEL Block", "DEL SimpleName: e", "DEL CatchClause", "DEL TryStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: IllegalStateException", "DEL SimpleType: IllegalStateException"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL IfStatement"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression", "DEL QualifiedName: ClientContext.AUTH_CACHE", "DEL MethodInvocation"]}, {"root": "DEL SimpleType: SchemeRegistry", "operations": ["DEL SimpleName: SchemeRegistry", "DEL SimpleType: SchemeRegistry"]}, {"root": "DEL CastExpression", "operations": ["DEL QualifiedName: ClientContext.SCHEME_REGISTRY", "DEL CastExpression", "DEL SimpleName: SchemeRegistry", "DEL MethodInvocation", "DEL SimpleType: SchemeRegistry"]}, {"root": "DEL SimpleName: schemeRegistry", "operations": ["DEL SimpleName: schemeRegistry"]}, {"root": "DEL QualifiedName: ClientContext.AUTH_CACHE", "operations": ["DEL QualifiedName: ClientContext.AUTH_CACHE"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL Block"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression", "DEL MethodInvocation", "DEL QualifiedName: ClientContext.AUTH_CACHE"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement"]}]}}, {"AuthenticationStrategyImpl_diff": {"operations": ["Update QualifiedName: org.apache.http.auth.AuthSchemeRegistry(36) to org.apache.http.auth.AuthSchemeProvider", "Update QualifiedName: org.apache.http.client.protocol.ClientContext(52) to org.apache.http.client.protocol.HttpClientContext", "Update QualifiedName: org.apache.http.conn.scheme.SchemeRegistry(54) to org.apache.http.config.Lookup", "Insert VariableDeclarationStatement(506) into Block(751) at 4", "Move VariableDeclarationStatement(807) into Block(865) at 3", "Move IfStatement(837) into Block(865) at 4", "Insert VariableDeclarationStatement(953) into Block(988) at 2", "Insert VariableDeclarationStatement(961) into Block(988) at 3", "Insert SimpleType: HttpClientContext(499) into VariableDeclarationStatement(506) at 0", "Insert VariableDeclarationFragment(505) into VariableDeclarationStatement(506) at 1", "Insert ParameterizedType: Lookup<AuthSchemeProvider>(525) into VariableDeclarationStatement(531) at 0", "Move SimpleType: CredentialsProvider(542) into VariableDeclarationStatement(553) at 0", "Move Block(719) into EnhancedForStatement(748) at 2", "Update SimpleType: AuthCache(797) to HttpClientContext", "Move MethodInvocation(795) into IfStatement(864) at 0", "Update SimpleType: AuthCache(947) to HttpClientContext", "Move SimpleType: AuthCache(947) into VariableDeclarationStatement(953) at 0", "Insert VariableDeclarationFragment(952) into VariableDeclarationStatement(953) at 1", "Move SimpleType: AuthCache(950) into VariableDeclarationStatement(961) at 0", "Move VariableDeclarationFragment(956) into VariableDeclarationStatement(961) at 1", "Insert SimpleName: HttpClientContext(498) into SimpleType: HttpClientContext(499) at 0", "Insert SimpleName: clientContext(500) into VariableDeclarationFragment(505) at 0", "Insert MethodInvocation(504) into VariableDeclarationFragment(505) at 1", "Insert SimpleType: Lookup(522) into ParameterizedType: Lookup<AuthSchemeProvider>(525) at 0", "Insert SimpleType: AuthSchemeProvider(524) into ParameterizedType: Lookup<AuthSchemeProvider>(525) at 1", "Insert MethodInvocation(529) into VariableDeclarationFragment(530) at 1", "Insert MethodInvocation(551) into VariableDeclarationFragment(552) at 1", "Move VariableDeclarationStatement(630) into Block(747) at 0", "Insert IfStatement(746) into Block(747) at 1", "Update SimpleName: AuthCache(796) to HttpClientContext", "Update SimpleName: authCache(798) to clientContext", "Insert MethodInvocation(807) into VariableDeclarationFragment(808) at 1", "Insert IfStatement(836) into Block(863) at 1", "Move IfStatement(857) into Block(863) at 2", "Move ExpressionStatement(863) into Block(863) at 3", "Update SimpleName: AuthCache(946) to HttpClientContext", "Insert SimpleName: clientContext(947) into VariableDeclarationFragment(952) at 0", "Insert MethodInvocation(951) into VariableDeclarationFragment(952) at 1", "Insert MethodInvocation(959) into VariableDeclarationFragment(960) at 1", "Insert SimpleName: HttpClientContext(501) into MethodInvocation(504) at 0", "Insert SimpleName: adapt(502) into MethodInvocation(504) at 1", "Insert SimpleName: context(503) into MethodInvocation(504) at 2", "Insert SimpleName: Lookup(521) into SimpleType: Lookup(522) at 0", "Update SimpleName: AuthSchemeRegistry(512) to AuthSchemeProvider", "Move SimpleName: AuthSchemeRegistry(512) into SimpleType: AuthSchemeProvider(524) at 0", "Update SimpleName: context(517) to clientContext", "Move SimpleName: context(517) into MethodInvocation(529) at 0", "Update SimpleName: getAttribute(518) to getAuthSchemeRegistry", "Move SimpleName: getAttribute(518) into MethodInvocation(529) at 1", "Update SimpleName: context(543) to clientContext", "Move SimpleName: context(543) into MethodInvocation(551) at 0", "Update SimpleName: getAttribute(544) to getCredentialsProvider", "Move SimpleName: getAttribute(544) into MethodInvocation(551) at 1", "Move InfixExpression: !=(633) into IfStatement(746) at 0", "Move Block(694) into IfStatement(746) at 1", "Move Block(737) into IfStatement(746) at 2", "Update SimpleName: context(801) to HttpClientContext", "Move SimpleName: context(801) into MethodInvocation(807) at 0", "Update SimpleName: getAttribute(802) to adapt", "Move SimpleName: getAttribute(802) into MethodInvocation(807) at 1", "Insert SimpleName: context(806) into MethodInvocation(807) at 2", "Move SimpleType: AuthCache(800) into VariableDeclarationStatement(820) at 0", "Move InfixExpression: ==(810) into IfStatement(836) at 0", "Insert Block(835) into IfStatement(836) at 1", "Insert SimpleName: HttpClientContext(948) into MethodInvocation(951) at 0", "Insert SimpleName: adapt(949) into MethodInvocation(951) at 1", "Insert SimpleName: context(950) into MethodInvocation(951) at 2", "Update SimpleName: context(951) to clientContext", "Move SimpleName: context(951) into MethodInvocation(959) at 0", "Update SimpleName: getAttribute(952) to getAuthCache", "Move SimpleName: getAttribute(952) into MethodInvocation(959) at 1", "Insert VariableDeclarationStatement(646) into Block(727) at 0", "Insert IfStatement(669) into Block(727) at 1", "Insert VariableDeclarationStatement(678) into Block(727) at 2", "Move IfStatement(715) into Block(745) at 0", "Update SimpleName: schemeRegistry(813) to authCache", "Insert MethodInvocation(818) into VariableDeclarationFragment(819) at 1", "Move ExpressionStatement(829) into Block(835) at 0", "Move ExpressionStatement(835) into Block(835) at 1", "Insert SimpleType: AuthSchemeProvider(639) into VariableDeclarationStatement(646) at 0", "Insert VariableDeclarationFragment(645) into VariableDeclarationStatement(646) at 1", "Insert InfixExpression: ==(649) into IfStatement(669) at 0", "Insert Block(668) into IfStatement(669) at 1", "Move SimpleType: AuthScheme(635) into VariableDeclarationStatement(678) at 0", "Insert VariableDeclarationFragment(677) into VariableDeclarationStatement(678) at 1", "Move MethodInvocation(724) into IfStatement(744) at 0", "Move Block(735) into IfStatement(744) at 1", "Update SimpleName: context(816) to clientContext", "Move SimpleName: context(816) into MethodInvocation(818) at 0", "Update SimpleName: getAttribute(817) to getAuthCache", "Move SimpleName: getAttribute(817) into MethodInvocation(818) at 1", "Insert SimpleName: AuthSchemeProvider(638) into SimpleType: AuthSchemeProvider(639) at 0", "Update SimpleName: authScheme(636) to authSchemeProvider", "Move SimpleName: authScheme(636) into VariableDeclarationFragment(645) at 0", "Insert MethodInvocation(644) into VariableDeclarationFragment(645) at 1", "Insert SimpleName: authSchemeProvider(647) into InfixExpression: ==(649) at 0", "Insert NullLiteral(648) into InfixExpression: ==(649) at 1", "Insert IfStatement(666) into Block(668) at 0", "Insert ContinueStatement(667) into Block(668) at 1", "Insert SimpleName: authScheme(672) into VariableDeclarationFragment(677) at 0", "Insert MethodInvocation(676) into VariableDeclarationFragment(677) at 1", "Move FieldAccess(701) into MethodInvocation(732) at 0", "Move ExpressionStatement(713) into Block(743) at 0", "Update SimpleName: context(830) to clientContext", "Update SimpleName: setAttribute(831) to setAuthCache", "Move SimpleName: registry(637) into MethodInvocation(644) at 0", "Insert SimpleName: lookup(642) into MethodInvocation(644) at 1", "Insert SimpleName: id(643) into MethodInvocation(644) at 2", "Insert MethodInvocation(654) into IfStatement(666) at 0", "Insert Block(665) into IfStatement(666) at 1", "Insert SimpleName: authSchemeProvider(673) into MethodInvocation(676) at 0", "Update SimpleName: response(640) to create", "Move SimpleName: response(640) into MethodInvocation(676) at 1", "Update SimpleName: getParams(641) to context", "Move SimpleName: getParams(641) into MethodInvocation(676) at 2", "Move ThisExpression(720) into FieldAccess(730) at 0", "Move SimpleName: log(721) into FieldAccess(730) at 1", "Insert FieldAccess(652) into MethodInvocation(654) at 0", "Insert SimpleName: isWarnEnabled(653) into MethodInvocation(654) at 1", "Insert ExpressionStatement(664) into Block(665) at 0", "Move FieldAccess(727) into MethodInvocation(741) at 0", "Update SimpleName: warn(707) to debug", "Move InfixExpression: +(732) into MethodInvocation(741) at 3", "Insert ThisExpression(650) into FieldAccess(652) at 0", "Insert SimpleName: log(651) into FieldAccess(652) at 1", "Insert MethodInvocation(663) into ExpressionStatement(664) at 0", "Move SimpleName: log(705) into FieldAccess(735) at 1", "Update StringLiteral: \"Authentication scheme \"(708) to \"Challenge for \"", "Move StringLiteral: \"Authentication scheme \"(708) into InfixExpression: +(740) at 0", "Update StringLiteral: \" not supported\"(710) to \" authentication scheme not available\"", "Move StringLiteral: \" not supported\"(710) into InfixExpression: +(740) at 3", "Insert FieldAccess(657) into MethodInvocation(663) at 0", "Insert SimpleName: warn(658) into MethodInvocation(663) at 1", "Insert InfixExpression: +(662) into MethodInvocation(663) at 2", "Insert ThisExpression(655) into FieldAccess(657) at 0", "Insert SimpleName: log(656) into FieldAccess(657) at 1", "Insert StringLiteral: \"Authentication scheme \"(659) into InfixExpression: +(662) at 0", "Insert SimpleName: id(660) into InfixExpression: +(662) at 1", "Insert StringLiteral: \" not supported\"(661) into InfixExpression: +(662) at 2", "Delete SimpleType: AuthSchemeRegistry(513)", "Delete SimpleName: AuthSchemeRegistry(515)", "Delete SimpleType: AuthSchemeRegistry(516)", "Delete QualifiedName: ClientContext.AUTHSCHEME_REGISTRY(519)", "Delete MethodInvocation(520)", "Delete CastExpression(521)", "Delete SimpleName: CredentialsProvider(538)", "Delete SimpleType: CredentialsProvider(539)", "Delete QualifiedName: ClientContext.CREDS_PROVIDER(545)", "Delete MethodInvocation(546)", "Delete CastExpression(547)", "Delete SimpleName: getAuthScheme(638)", "Delete SimpleName: id(639)", "Delete MethodInvocation(642)", "Delete MethodInvocation(643)", "Delete VariableDeclarationFragment(644)", "Delete VariableDeclarationStatement(645)", "Delete SimpleName: IllegalStateException(695)", "Delete SimpleType: IllegalStateException(696)", "Delete SimpleName: e(697)", "Delete SingleVariableDeclaration(698)", "Delete Block(716)", "Delete CatchClause(717)", "Delete TryStatement(718)", "Delete IfStatement(738)", "Delete Block(739)", "Delete QualifiedName: ClientContext.AUTH_CACHE(803)", "Delete MethodInvocation(804)", "Delete CastExpression(805)", "Delete SimpleName: SchemeRegistry(811)", "Delete SimpleType: SchemeRegistry(812)", "Delete SimpleName: SchemeRegistry(814)", "Delete SimpleType: SchemeRegistry(815)", "Delete QualifiedName: ClientContext.SCHEME_REGISTRY(818)", "Delete MethodInvocation(819)", "Delete CastExpression(820)", "Delete SimpleName: schemeRegistry(826)", "Delete QualifiedName: ClientContext.AUTH_CACHE(832)", "Delete Block(864)", "Delete IfStatement(865)", "Delete QualifiedName: ClientContext.AUTH_CACHE(953)", "Delete MethodInvocation(954)", "Delete CastExpression(955)", "Delete VariableDeclarationStatement(957)"]}}, {"BasicAuthCache_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 7"]}, {"root": "UPDATE from org.apache.http.conn.scheme.Scheme to org.apache.http.conn.SchemePortResolver", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.Scheme from org.apache.http.conn.scheme.Scheme to org.apache.http.conn.SchemePortResolver"]}, {"root": "UPDATE from org.apache.http.conn.scheme.SchemeRegistry to org.apache.http.impl.conn.DefaultSchemePortResolver", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.SchemeRegistry from org.apache.http.conn.scheme.SchemeRegistry to org.apache.http.impl.conn.DefaultSchemePortResolver"]}, {"root": "UPDATE from SchemeRegistry to SchemePortResolver", "operations": ["UPD SimpleName: SchemeRegistry from SchemeRegistry to SchemePortResolver", "UPD SimpleType: SchemeRegistry from SchemeRegistry to SchemePortResolver", "UPD SimpleType: SchemeRegistry from SchemeRegistry to SchemePortResolver", "UPD SimpleName: SchemeRegistry from SchemeRegistry to SchemePortResolver"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "UPDATE from scheme to schemePortResolver", "operations": ["UPD SimpleName: scheme from scheme to schemePortResolver", "UPD SimpleName: schemeRegistry from schemeRegistry to schemePortResolver", "UPD SimpleName: schemeRegistry from schemeRegistry to schemePortResolver", "UPD SimpleName: schemeRegistry from schemeRegistry to schemePortResolver"]}, {"root": "INS ConditionalExpression to Assignment: = at 1", "operations": ["INS ConditionalExpression to Assignment: = at 1", "INS SimpleName: schemePortResolver to ConditionalExpression at 1", "INS QualifiedName: DefaultSchemePortResolver.INSTANCE to ConditionalExpression at 2", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: schemePortResolver to InfixExpression: != at 0", "INS InfixExpression: != to ConditionalExpression at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV PrimitiveType: int to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: port to VariableDeclarationFragment at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: resolvePort to MethodInvocation at 1", "MOV SimpleName: scheme to MethodInvocation at 0"]}, {"root": "UPDATE from resolvePort to resolve", "operations": ["UPD SimpleName: resolvePort from resolvePort to resolve"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: host to MethodInvocation at 2"]}, {"root": "DEL SimpleName: schemeRegistry", "operations": ["DEL SimpleName: schemeRegistry"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: schemeRegistry", "DEL StringLiteral: \"https\"", "DEL SimpleName: getSchemeName", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL SimpleName: scheme", "DEL SimpleName: schemeRegistry", "DEL FieldAccess", "DEL Block", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: getScheme", "DEL SimpleName: Scheme", "DEL MethodInvocation", "DEL SimpleName: getPort", "DEL SimpleName: port", "DEL IfStatement", "DEL VariableDeclarationStatement", "DEL SimpleType: Scheme", "DEL ExpressionStatement", "DEL FieldAccess", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL SimpleName: host", "DEL MethodInvocation", "DEL SimpleName: equalsIgnoreCase", "DEL NullLiteral", "DEL SimpleName: port", "DEL SimpleName: host", "DEL ThisExpression", "DEL MethodInvocation", "DEL ConditionalExpression", "DEL NumberLiteral: 443", "DEL NumberLiteral: 80", "DEL ExpressionStatement", "DEL Assignment: =", "DEL ThisExpression"]}]}}, {"BasicAuthCache_diff": {"operations": ["Move FieldDeclaration(36) into TypeDeclaration: class(256) at 7", "Update QualifiedName: org.apache.http.conn.scheme.Scheme(12) to org.apache.http.conn.SchemePortResolver", "Update QualifiedName: org.apache.http.conn.scheme.SchemeRegistry(14) to org.apache.http.impl.conn.DefaultSchemePortResolver", "Update SimpleType: SchemeRegistry(33) to SchemePortResolver", "Move ExpressionStatement(70) into Block(89) at 3", "Update SimpleName: SchemeRegistry(32) to SchemePortResolver", "Update SimpleName: schemeRegistry(34) to schemePortResolver", "Update SimpleType: SchemeRegistry(61) to SchemePortResolver", "Update SimpleName: schemeRegistry(62) to schemePortResolver", "Update SimpleName: SchemeRegistry(60) to SchemePortResolver", "Insert ConditionalExpression(86) into Assignment: =(87) at 1", "Insert VariableDeclarationStatement(118) into Block(130) at 0", "Update SimpleName: schemeRegistry(66) to schemePortResolver", "Insert InfixExpression: !=(83) into ConditionalExpression(86) at 0", "Insert SimpleName: schemePortResolver(84) into ConditionalExpression(86) at 1", "Insert QualifiedName: DefaultSchemePortResolver.INSTANCE(85) into ConditionalExpression(86) at 2", "Move PrimitiveType: int(106) into VariableDeclarationStatement(118) at 0", "Insert VariableDeclarationFragment(117) into VariableDeclarationStatement(118) at 1", "Insert SimpleName: schemePortResolver(81) into InfixExpression: !=(83) at 0", "Insert NullLiteral(82) into InfixExpression: !=(83) at 1", "Move SimpleName: port(107) into VariableDeclarationFragment(117) at 0", "Insert MethodInvocation(116) into VariableDeclarationFragment(117) at 1", "Update SimpleName: scheme(127) to schemePortResolver", "Move SimpleName: scheme(127) into MethodInvocation(116) at 0", "Update SimpleName: resolvePort(128) to resolve", "Move SimpleName: resolvePort(128) into MethodInvocation(116) at 1", "Move SimpleName: host(129) into MethodInvocation(116) at 2", "Delete SimpleName: schemeRegistry(68)", "Delete VariableDeclarationFragment(108)", "Delete VariableDeclarationStatement(109)", "Delete ThisExpression(110)", "Delete SimpleName: schemeRegistry(111)", "Delete FieldAccess(112)", "Delete NullLiteral(113)", "Delete InfixExpression: !=(114)", "Delete SimpleName: Scheme(115)", "Delete SimpleType: Scheme(116)", "Delete SimpleName: scheme(117)", "Delete ThisExpression(118)", "Delete SimpleName: schemeRegistry(119)", "Delete FieldAccess(120)", "Delete SimpleName: getScheme(121)", "Delete SimpleName: host(122)", "Delete MethodInvocation(123)", "Delete VariableDeclarationFragment(124)", "Delete VariableDeclarationStatement(125)", "Delete SimpleName: port(126)", "Delete SimpleName: getPort(130)", "Delete MethodInvocation(131)", "Delete MethodInvocation(132)", "Delete Assignment: =(133)", "Delete ExpressionStatement(134)", "Delete Block(135)", "Delete SimpleName: port(136)", "Delete SimpleName: host(137)", "Delete SimpleName: getSchemeName(138)", "Delete MethodInvocation(139)", "Delete SimpleName: equalsIgnoreCase(140)", "Delete StringLiteral: \"https\"(141)", "Delete MethodInvocation(142)", "Delete NumberLiteral: 443(143)", "Delete NumberLiteral: 80(144)", "Delete ConditionalExpression(145)", "Delete Assignment: =(146)", "Delete ExpressionStatement(147)", "Delete Block(148)", "Delete IfStatement(149)"]}}, {"DefaultConnectionKeepAliveStrategy_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleType: DefaultConnectionKeepAliveStrategy to ClassInstanceCreation at 0", "INS SimpleName: DefaultConnectionKeepAliveStrategy to SimpleType: DefaultConnectionKeepAliveStrategy at 0", "INS Modifier: final to FieldDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleType: DefaultConnectionKeepAliveStrategy to FieldDeclaration at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: public to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleName: INSTANCE to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: DefaultConnectionKeepAliveStrategy to SimpleType: DefaultConnectionKeepAliveStrategy at 0"]}]}}, {"DefaultConnectionKeepAliveStrategy_diff": {"operations": ["Insert FieldDeclaration(42) into TypeDeclaration: class(135) at 5", "Insert Modifier: public(32) into FieldDeclaration(42) at 0", "Insert Modifier: static(33) into FieldDeclaration(42) at 1", "Insert Modifier: final(34) into FieldDeclaration(42) at 2", "Insert SimpleType: DefaultConnectionKeepAliveStrategy(36) into FieldDeclaration(42) at 3", "Insert VariableDeclarationFragment(41) into FieldDeclaration(42) at 4", "Insert SimpleName: DefaultConnectionKeepAliveStrategy(35) into SimpleType: DefaultConnectionKeepAliveStrategy(36) at 0", "Insert SimpleName: INSTANCE(37) into VariableDeclarationFragment(41) at 0", "Insert ClassInstanceCreation(40) into VariableDeclarationFragment(41) at 1", "Insert SimpleType: DefaultConnectionKeepAliveStrategy(39) into ClassInstanceCreation(40) at 0", "Insert SimpleName: DefaultConnectionKeepAliveStrategy(38) into SimpleType: DefaultConnectionKeepAliveStrategy(39) at 0"]}}, {"DefaultHttpRequestRetryHandler_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleName: DefaultHttpRequestRetryHandler to SimpleType: DefaultHttpRequestRetryHandler at 0", "INS Modifier: final to FieldDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: INSTANCE to VariableDeclarationFragment at 0", "INS SimpleName: DefaultHttpRequestRetryHandler to SimpleType: DefaultHttpRequestRetryHandler at 0", "INS SimpleType: DefaultHttpRequestRetryHandler to FieldDeclaration at 3", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: DefaultHttpRequestRetryHandler to ClassInstanceCreation at 0", "INS Modifier: public to FieldDeclaration at 0"]}]}}, {"DefaultHttpRequestRetryHandler_diff": {"operations": ["Insert FieldDeclaration(50) into TypeDeclaration: class(344) at 5", "Insert Modifier: public(40) into FieldDeclaration(50) at 0", "Insert Modifier: static(41) into FieldDeclaration(50) at 1", "Insert Modifier: final(42) into FieldDeclaration(50) at 2", "Insert SimpleType: DefaultHttpRequestRetryHandler(44) into FieldDeclaration(50) at 3", "Insert VariableDeclarationFragment(49) into FieldDeclaration(50) at 4", "Insert SimpleName: DefaultHttpRequestRetryHandler(43) into SimpleType: DefaultHttpRequestRetryHandler(44) at 0", "Insert SimpleName: INSTANCE(45) into VariableDeclarationFragment(49) at 0", "Insert ClassInstanceCreation(48) into VariableDeclarationFragment(49) at 1", "Insert SimpleType: DefaultHttpRequestRetryHandler(47) into ClassInstanceCreation(48) at 0", "Insert SimpleName: DefaultHttpRequestRetryHandler(46) into SimpleType: DefaultHttpRequestRetryHandler(47) at 0"]}}, {"DefaultRedirectStrategy_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS SimpleType: DefaultRedirectStrategy to FieldDeclaration at 3", "INS SimpleName: DefaultRedirectStrategy to SimpleType: DefaultRedirectStrategy at 0", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS Modifier: public to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: INSTANCE to VariableDeclarationFragment at 0", "INS SimpleType: DefaultRedirectStrategy to ClassInstanceCreation at 0", "INS SimpleName: DefaultRedirectStrategy to SimpleType: DefaultRedirectStrategy at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: final to FieldDeclaration at 2"]}]}}, {"DefaultRedirectStrategy_diff": {"operations": ["Insert FieldDeclaration(106) into TypeDeclaration: class(668) at 7", "Insert Modifier: public(96) into FieldDeclaration(106) at 0", "Insert Modifier: static(97) into FieldDeclaration(106) at 1", "Insert Modifier: final(98) into FieldDeclaration(106) at 2", "Insert SimpleType: DefaultRedirectStrategy(100) into FieldDeclaration(106) at 3", "Insert VariableDeclarationFragment(105) into FieldDeclaration(106) at 4", "Insert SimpleName: DefaultRedirectStrategy(99) into SimpleType: DefaultRedirectStrategy(100) at 0", "Insert SimpleName: INSTANCE(101) into VariableDeclarationFragment(105) at 0", "Insert ClassInstanceCreation(104) into VariableDeclarationFragment(105) at 1", "Insert SimpleType: DefaultRedirectStrategy(103) into ClassInstanceCreation(104) at 0", "Insert SimpleName: DefaultRedirectStrategy(102) into SimpleType: DefaultRedirectStrategy(103) at 0"]}}, {"DefaultUserTokenHandler_cluster": {"actions": [{"root": "UPDATE from org.apache.http.client.protocol.ClientContext to org.apache.http.client.protocol.HttpClientContext", "operations": ["UPD QualifiedName: org.apache.http.client.protocol.ClientContext from org.apache.http.client.protocol.ClientContext to org.apache.http.client.protocol.HttpClientContext"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleName: INSTANCE to VariableDeclarationFragment at 0", "INS SimpleName: DefaultUserTokenHandler to SimpleType: DefaultUserTokenHandler at 0", "INS SimpleName: DefaultUserTokenHandler to SimpleType: DefaultUserTokenHandler at 0", "INS Modifier: final to FieldDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleType: DefaultUserTokenHandler to ClassInstanceCreation at 0", "INS SimpleType: DefaultUserTokenHandler to FieldDeclaration at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: public to FieldDeclaration at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: context to MethodInvocation at 2", "INS SimpleName: clientContext to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: HttpClientContext to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: adapt to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS VariableDeclarationStatement to Block at 2"]}, {"root": "UPDATE from AuthState to HttpClientContext", "operations": ["UPD SimpleName: AuthState from AuthState to HttpClientContext", "UPD SimpleType: AuthState from AuthState to HttpClientContext"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AuthState to VariableDeclarationStatement at 0", "MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AuthState to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from context to clientContext", "operations": ["UPD SimpleName: context from context to clientContext", "UPD SimpleName: context from context to clientContext", "UPD SimpleName: context from context to clientContext"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getTargetAuthState", "operations": ["UPD SimpleName: getAttribute from getAttribute to getTargetAuthState"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: HttpConnection to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AuthState to VariableDeclarationStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: context to MethodInvocation at 0", "MOV SimpleName: getAttribute to MethodInvocation at 1"]}, {"root": "UPDATE from getAttribute to getConnection", "operations": ["UPD SimpleName: getAttribute from getAttribute to getConnection"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAttribute to MethodInvocation at 1", "MOV SimpleName: context to MethodInvocation at 0"]}, {"root": "UPDATE from getAttribute to getProxyAuthState", "operations": ["UPD SimpleName: getAttribute from getAttribute to getProxyAuthState"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.http.protocol.ExecutionContext"]}, {"root": "DEL CastExpression", "operations": ["DEL MethodInvocation", "DEL SimpleType: AuthState", "DEL CastExpression", "DEL SimpleName: AuthState", "DEL QualifiedName: ClientContext.TARGET_AUTH_STATE"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement"]}, {"root": "DEL CastExpression", "operations": ["DEL QualifiedName: ClientContext.PROXY_AUTH_STATE", "DEL CastExpression", "DEL MethodInvocation"]}, {"root": "DEL SimpleType: HttpConnection", "operations": ["DEL SimpleName: HttpConnection", "DEL SimpleType: HttpConnection"]}, {"root": "DEL CastExpression", "operations": ["DEL MethodInvocation", "DEL CastExpression", "DEL QualifiedName: ExecutionContext.HTTP_CONNECTION"]}]}}, {"DefaultUserTokenHandler_diff": {"operations": ["Update QualifiedName: org.apache.http.client.protocol.ClientContext(18) to org.apache.http.client.protocol.HttpClientContext", "Insert FieldDeclaration(60) into TypeDeclaration: class(221) at 5", "Insert Modifier: public(50) into FieldDeclaration(60) at 0", "Insert Modifier: static(51) into FieldDeclaration(60) at 1", "Insert Modifier: final(52) into FieldDeclaration(60) at 2", "Insert SimpleType: DefaultUserTokenHandler(54) into FieldDeclaration(60) at 3", "Insert VariableDeclarationFragment(59) into FieldDeclaration(60) at 4", "Insert SimpleName: DefaultUserTokenHandler(53) into SimpleType: DefaultUserTokenHandler(54) at 0", "Insert SimpleName: INSTANCE(55) into VariableDeclarationFragment(59) at 0", "Insert ClassInstanceCreation(58) into VariableDeclarationFragment(59) at 1", "Insert VariableDeclarationStatement(78) into Block(167) at 0", "Insert VariableDeclarationStatement(92) into Block(167) at 2", "Insert SimpleType: DefaultUserTokenHandler(57) into ClassInstanceCreation(58) at 0", "Update SimpleType: AuthState(68) to HttpClientContext", "Move SimpleType: AuthState(68) into VariableDeclarationStatement(78) at 0", "Insert VariableDeclarationFragment(77) into VariableDeclarationStatement(78) at 1", "Move SimpleType: AuthState(92) into VariableDeclarationStatement(92) at 0", "Move VariableDeclarationFragment(77) into VariableDeclarationStatement(92) at 1", "Insert SimpleName: DefaultUserTokenHandler(56) into SimpleType: DefaultUserTokenHandler(57) at 0", "Update SimpleName: AuthState(67) to HttpClientContext", "Insert SimpleName: clientContext(72) into VariableDeclarationFragment(77) at 0", "Insert MethodInvocation(76) into VariableDeclarationFragment(77) at 1", "Insert MethodInvocation(90) into VariableDeclarationFragment(91) at 1", "Insert SimpleName: HttpClientContext(73) into MethodInvocation(76) at 0", "Insert SimpleName: adapt(74) into MethodInvocation(76) at 1", "Insert SimpleName: context(75) into MethodInvocation(76) at 2", "Update SimpleName: context(72) to clientContext", "Move SimpleName: context(72) into MethodInvocation(90) at 0", "Update SimpleName: getAttribute(73) to getTargetAuthState", "Move SimpleName: getAttribute(73) into MethodInvocation(90) at 1", "Move SimpleType: HttpConnection(120) into VariableDeclarationStatement(133) at 0", "Insert MethodInvocation(131) into VariableDeclarationFragment(132) at 1", "Move SimpleType: AuthState(95) into VariableDeclarationStatement(112) at 0", "Update SimpleName: context(121) to clientContext", "Move SimpleName: context(121) into MethodInvocation(131) at 0", "Update SimpleName: getAttribute(122) to getConnection", "Move SimpleName: getAttribute(122) into MethodInvocation(131) at 1", "Insert MethodInvocation(110) into VariableDeclarationFragment(111) at 1", "Update SimpleName: context(96) to clientContext", "Move SimpleName: context(96) into MethodInvocation(110) at 0", "Update SimpleName: getAttribute(97) to getProxyAuthState", "Move SimpleName: getAttribute(97) into MethodInvocation(110) at 1", "Delete QualifiedName: org.apache.http.protocol.ExecutionContext(22)", "Delete ImportDeclaration(23)", "Delete SimpleName: AuthState(70)", "Delete SimpleType: AuthState(71)", "Delete QualifiedName: ClientContext.TARGET_AUTH_STATE(74)", "Delete MethodInvocation(75)", "Delete CastExpression(76)", "Delete VariableDeclarationStatement(78)", "Delete QualifiedName: ClientContext.PROXY_AUTH_STATE(98)", "Delete MethodInvocation(99)", "Delete CastExpression(100)", "Delete SimpleName: HttpConnection(116)", "Delete SimpleType: HttpConnection(117)", "Delete QualifiedName: ExecutionContext.HTTP_CONNECTION(123)", "Delete MethodInvocation(124)", "Delete CastExpression(125)"]}}, {"NoopUserTokenHandler_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleName: NoopUserTokenHandler to SimpleType: NoopUserTokenHandler at 0", "INS SimpleName: INSTANCE to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleType: NoopUserTokenHandler to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: NoopUserTokenHandler to ClassInstanceCreation at 0", "INS Modifier: public to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: NoopUserTokenHandler to SimpleType: NoopUserTokenHandler at 0", "INS Modifier: static to FieldDeclaration at 1"]}]}}, {"NoopUserTokenHandler_diff": {"operations": ["Insert FieldDeclaration(32) into TypeDeclaration: class(46) at 5", "Insert Modifier: public(22) into FieldDeclaration(32) at 0", "Insert Modifier: static(23) into FieldDeclaration(32) at 1", "Insert Modifier: final(24) into FieldDeclaration(32) at 2", "Insert SimpleType: NoopUserTokenHandler(26) into FieldDeclaration(32) at 3", "Insert VariableDeclarationFragment(31) into FieldDeclaration(32) at 4", "Insert SimpleName: NoopUserTokenHandler(25) into SimpleType: NoopUserTokenHandler(26) at 0", "Insert SimpleName: INSTANCE(27) into VariableDeclarationFragment(31) at 0", "Insert ClassInstanceCreation(30) into VariableDeclarationFragment(31) at 1", "Insert SimpleType: NoopUserTokenHandler(29) into ClassInstanceCreation(30) at 0", "Insert SimpleName: NoopUserTokenHandler(28) into SimpleType: NoopUserTokenHandler(29) at 0"]}}, {"ProxyAuthenticationStrategy_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS Modifier: public to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleType: ProxyAuthenticationStrategy to FieldDeclaration at 3", "INS SimpleType: ProxyAuthenticationStrategy to ClassInstanceCreation at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: ProxyAuthenticationStrategy to SimpleType: ProxyAuthenticationStrategy at 0", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleName: INSTANCE to VariableDeclarationFragment at 0", "INS SimpleName: ProxyAuthenticationStrategy to SimpleType: ProxyAuthenticationStrategy at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS ClassInstanceCreation to VariableDeclarationFragment at 1"]}]}}, {"ProxyAuthenticationStrategy_diff": {"operations": ["Insert FieldDeclaration(36) into TypeDeclaration: class(45) at 5", "Insert Modifier: public(26) into FieldDeclaration(36) at 0", "Insert Modifier: static(27) into FieldDeclaration(36) at 1", "Insert Modifier: final(28) into FieldDeclaration(36) at 2", "Insert SimpleType: ProxyAuthenticationStrategy(30) into FieldDeclaration(36) at 3", "Insert VariableDeclarationFragment(35) into FieldDeclaration(36) at 4", "Insert SimpleName: ProxyAuthenticationStrategy(29) into SimpleType: ProxyAuthenticationStrategy(30) at 0", "Insert SimpleName: INSTANCE(31) into VariableDeclarationFragment(35) at 0", "Insert ClassInstanceCreation(34) into VariableDeclarationFragment(35) at 1", "Insert SimpleType: ProxyAuthenticationStrategy(33) into ClassInstanceCreation(34) at 0", "Insert SimpleName: ProxyAuthenticationStrategy(32) into SimpleType: ProxyAuthenticationStrategy(33) at 0"]}}, {"TargetAuthenticationStrategy_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS Modifier: public to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleType: TargetAuthenticationStrategy to FieldDeclaration at 3", "INS SimpleType: TargetAuthenticationStrategy to ClassInstanceCreation at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: TargetAuthenticationStrategy to SimpleType: TargetAuthenticationStrategy at 0", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleName: INSTANCE to VariableDeclarationFragment at 0", "INS SimpleName: TargetAuthenticationStrategy to SimpleType: TargetAuthenticationStrategy at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS ClassInstanceCreation to VariableDeclarationFragment at 1"]}]}}, {"TargetAuthenticationStrategy_diff": {"operations": ["Insert FieldDeclaration(36) into TypeDeclaration: class(45) at 5", "Insert Modifier: public(26) into FieldDeclaration(36) at 0", "Insert Modifier: static(27) into FieldDeclaration(36) at 1", "Insert Modifier: final(28) into FieldDeclaration(36) at 2", "Insert SimpleType: TargetAuthenticationStrategy(30) into FieldDeclaration(36) at 3", "Insert VariableDeclarationFragment(35) into FieldDeclaration(36) at 4", "Insert SimpleName: TargetAuthenticationStrategy(29) into SimpleType: TargetAuthenticationStrategy(30) at 0", "Insert SimpleName: INSTANCE(31) into VariableDeclarationFragment(35) at 0", "Insert ClassInstanceCreation(34) into VariableDeclarationFragment(35) at 1", "Insert SimpleType: TargetAuthenticationStrategy(33) into ClassInstanceCreation(34) at 0", "Insert SimpleName: TargetAuthenticationStrategy(32) into SimpleType: TargetAuthenticationStrategy(33) at 0"]}}, {"BasicHttpClientConnectionManager_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 11", "MOV ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: java.net.InetSocketAddress to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS ImportDeclaration to CompilationUnit at 12", "INS QualifiedName: org.apache.http.config.ConnectionConfig to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: org.apache.http.config.Lookup to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS QualifiedName: org.apache.http.config.RegistryBuilder to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 15"]}, {"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS ImportDeclaration to CompilationUnit at 21", "INS QualifiedName: org.apache.http.conn.SchemePortResolver to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 24", "operations": ["INS ImportDeclaration to CompilationUnit at 24", "INS QualifiedName: org.apache.http.conn.socket.ConnectionSocketFactory to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 25", "operations": ["INS ImportDeclaration to CompilationUnit at 25", "INS QualifiedName: org.apache.http.conn.socket.PlainSocketFactory to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 26", "operations": ["INS ImportDeclaration to CompilationUnit at 26", "INS QualifiedName: org.apache.http.conn.ssl.SSLSocketFactory to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 22", "MOV MethodDeclaration to TypeDeclaration: class at 22", "MOV MethodDeclaration to TypeDeclaration: class at 23"]}, {"root": "UPDATE from org.apache.http.conn.scheme.SchemeRegistry to org.apache.http.config.Registry", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.SchemeRegistry from org.apache.http.conn.scheme.SchemeRegistry to org.apache.http.config.Registry"]}, {"root": "UPDATE from org.apache.http.params.HttpParams to org.apache.http.config.SocketConfig", "operations": ["UPD QualifiedName: org.apache.http.params.HttpParams from org.apache.http.params.HttpParams to org.apache.http.config.SocketConfig"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 14", "operations": ["INS Modifier: private to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 14", "INS SingleMemberAnnotation to FieldDeclaration at 0", "INS SimpleType: SocketConfig to FieldDeclaration at 2", "INS SimpleName: socketConfig to VariableDeclarationFragment at 0", "INS SimpleName: GuardedBy to SingleMemberAnnotation at 0", "INS StringLiteral: \"this\" to SingleMemberAnnotation at 1", "INS SimpleName: SocketConfig to SimpleType: SocketConfig at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 15", "operations": ["INS SimpleType: ConnectionConfig to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: GuardedBy to SingleMemberAnnotation at 0", "INS StringLiteral: \"this\" to SingleMemberAnnotation at 1", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS FieldDeclaration to TypeDeclaration: class at 15", "INS SingleMemberAnnotation to FieldDeclaration at 0", "INS SimpleName: connConfig to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS SimpleName: PlainSocketFactory to MethodInvocation at 0", "INS SimpleName: getSocketFactory to MethodInvocation at 1", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: getSocketFactory to MethodInvocation at 1", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Registry<ConnectionSocketFactory> at 1", "INS SimpleName: RegistryBuilder to MethodInvocation at 0", "INS SimpleName: Registry to SimpleType: Registry at 0", "INS StringLiteral: \"https\" to MethodInvocation at 2", "INS SimpleType: Registry to ParameterizedType: Registry<ConnectionSocketFactory> at 0", "INS SimpleName: register to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: build to MethodInvocation at 1", "INS Modifier: static to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to MethodInvocation at 3", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS ParameterizedType: Registry<ConnectionSocketFactory> to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS SimpleName: SSLSocketFactory to MethodInvocation at 0", "INS SimpleName: create to MethodInvocation at 2", "INS SimpleName: getDefaultRegistry to MethodDeclaration at 3", "INS StringLiteral: \"https\" to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleType: ConnectionSocketFactory to MethodInvocation at 1", "INS SimpleName: ConnectionSocketFactory to SimpleType: ConnectionSocketFactory at 0", "INS SimpleName: register to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: ConnectionSocketFactory to SimpleType: ConnectionSocketFactory at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS ParameterizedType: Lookup<ConnectionSocketFactory> to SingleVariableDeclaration at 1", "INS SimpleName: Lookup to SimpleType: Lookup at 0", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS SimpleName: BasicHttpClientConnectionManager to MethodDeclaration at 1", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Lookup<ConnectionSocketFactory> at 1", "INS SimpleType: Lookup to ParameterizedType: Lookup<ConnectionSocketFactory> at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS ConstructorInvocation to Block at 0", "INS SimpleName: ConnectionSocketFactory to SimpleType: ConnectionSocketFactory at 0", "INS NullLiteral to ConstructorInvocation at 1", "INS NullLiteral to ConstructorInvocation at 2", "INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS NullLiteral to ConstructorInvocation at 3", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: socketFactoryRegistry to SingleVariableDeclaration at 2", "INS SimpleName: socketFactoryRegistry to ConstructorInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 27", "operations": ["INS SimpleType: ConnectionConfig to MethodDeclaration at 2", "INS Modifier: synchronized to MethodDeclaration at 1", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 27", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: connConfig to ReturnStatement at 0", "INS SimpleName: getConnectionConfig to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 35", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 35", "INS Modifier: public to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: connect to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 36", "operations": ["INS SimpleName: upgrade to MethodDeclaration at 2", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 36"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: SchemePortResolver to SingleVariableDeclaration at 1", "INS SimpleName: schemePortResolver to SingleVariableDeclaration at 2", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: SchemePortResolver to SimpleType: SchemePortResolver at 0"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS SuperConstructorInvocation to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS QualifiedName: ConnectionConfig.DEFAULT to Assignment: = at 1", "INS SimpleName: connConfig to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS ThisExpression to FieldAccess at 0", "INS QualifiedName: SocketConfig.DEFAULT to Assignment: = at 1", "INS ExpressionStatement to Block at 5", "INS FieldAccess to Assignment: = at 0", "INS Block to MethodDeclaration at 6", "INS ExpressionStatement to Block at 4", "INS SimpleName: socketConfig to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS ParameterizedType: HttpConnectionFactory<SocketClientConnection> to SingleVariableDeclaration at 1", "INS SimpleName: connFactory to SingleVariableDeclaration at 2", "INS SimpleType: HttpConnectionFactory to ParameterizedType: HttpConnectionFactory<SocketClientConnection> at 0", "INS SimpleName: SocketClientConnection to SimpleType: SocketClientConnection at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: SocketClientConnection to ParameterizedType: HttpConnectionFactory<SocketClientConnection> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: HttpConnectionFactory to SimpleType: HttpConnectionFactory at 0"]}, {"root": "INS Modifier: synchronized to MethodDeclaration at 1", "operations": ["INS Modifier: synchronized to MethodDeclaration at 1"]}, {"root": "UPDATE from HttpParams to SocketConfig", "operations": ["UPD SimpleType: HttpParams from HttpParams to SocketConfig", "UPD SimpleType: SchemeRegistry from SchemeRegistry to SocketConfig", "UPD SimpleName: HttpParams from HttpParams to SocketConfig", "UPD SimpleName: SchemeRegistry from SchemeRegistry to SocketConfig"]}, {"root": "UPDATE from getSchemeRegistry to getSocketConfig", "operations": ["UPD SimpleName: getSchemeRegistry from getSchemeRegistry to getSocketConfig"]}, {"root": "INS Modifier: synchronized to MethodDeclaration at 1", "operations": ["INS Modifier: synchronized to MethodDeclaration at 1"]}, {"root": "UPDATE from connect to setSocketConfig", "operations": ["UPD SimpleName: connect from connect to setSocketConfig"]}, {"root": "INS Block to MethodDeclaration at 9", "operations": ["INS SimpleName: socketConfig to InfixExpression: != at 0", "INS ExpressionStatement to Block at 0", "INS InfixExpression: != to ConditionalExpression at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: socketConfig to ConditionalExpression at 1", "INS QualifiedName: SocketConfig.DEFAULT to ConditionalExpression at 2", "INS ThisExpression to FieldAccess at 0", "INS ConditionalExpression to Assignment: = at 1", "INS Block to MethodDeclaration at 9", "INS SimpleName: socketConfig to FieldAccess at 1", "INS NullLiteral to InfixExpression: != at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS Modifier: synchronized to MethodDeclaration at 1", "operations": ["INS Modifier: synchronized to MethodDeclaration at 1"]}, {"root": "UPDATE from upgrade to setConnectionConfig", "operations": ["UPD SimpleName: upgrade from upgrade to setConnectionConfig"]}, {"root": "INS Block to MethodDeclaration at 8", "operations": ["INS ThisExpression to FieldAccess at 0", "INS InfixExpression: != to ConditionalExpression at 0", "INS SimpleName: connConfig to InfixExpression: != at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: connConfig to ConditionalExpression at 1", "INS ExpressionStatement to Block at 0", "INS NullLiteral to InfixExpression: != at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: connConfig to FieldAccess at 1", "INS ConditionalExpression to Assignment: = at 1", "INS QualifiedName: ConnectionConfig.DEFAULT to ConditionalExpression at 2", "INS Block to MethodDeclaration at 8"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV Block to MethodDeclaration at 7", "MOV SimpleType: IOException to MethodDeclaration at 7", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV Block to MethodDeclaration at 8", "MOV SimpleType: IOException to MethodDeclaration at 6"]}, {"root": "INS ParameterizedType: Lookup<ConnectionSocketFactory> to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: Lookup to ParameterizedType: Lookup<ConnectionSocketFactory> at 0", "INS SimpleName: Lookup to SimpleType: Lookup at 0", "INS ParameterizedType: Lookup<ConnectionSocketFactory> to SingleVariableDeclaration at 1", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Lookup<ConnectionSocketFactory> at 1"]}, {"root": "UPDATE from schemeRegistry to socketFactoryRegistry", "operations": ["UPD SimpleName: schemeRegistry from schemeRegistry to socketFactoryRegistry", "UPD SimpleName: schemeRegistry from schemeRegistry to socketFactoryRegistry", "UPD SimpleName: schemeRegistry from schemeRegistry to socketFactoryRegistry", "UPD SimpleName: schemeRegistry from schemeRegistry to socketFactoryRegistry"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 3"]}, {"root": "INS ParameterizedType: Lookup<ConnectionSocketFactory> to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: ConnectionSocketFactory to ParameterizedType: Lookup<ConnectionSocketFactory> at 1", "INS ParameterizedType: Lookup<ConnectionSocketFactory> to SingleVariableDeclaration at 1", "INS SimpleName: Lookup to SimpleType: Lookup at 0", "INS SimpleType: Lookup to ParameterizedType: Lookup<ConnectionSocketFactory> at 0"]}, {"root": "UPDATE from params to socketConfig", "operations": ["UPD SimpleName: params from params to socketConfig"]}, {"root": "UPDATE from HttpParams to ConnectionConfig", "operations": ["UPD SimpleType: HttpParams from HttpParams to ConnectionConfig", "UPD SimpleName: HttpParams from HttpParams to ConnectionConfig"]}, {"root": "UPDATE from params to connConfig", "operations": ["UPD SimpleName: params from params to connConfig"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS VariableDeclarationStatement to Block at 3", "INS SimpleName: InetSocketAddress to SimpleType: InetSocketAddress at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: InetSocketAddress to VariableDeclarationStatement at 0", "INS InfixExpression: != to ConditionalExpression at 0", "INS SimpleName: local to InfixExpression: != at 0", "INS SimpleName: local to ClassInstanceCreation at 1", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS NullLiteral to ConditionalExpression at 2", "INS SimpleName: InetSocketAddress to SimpleType: InetSocketAddress at 0", "INS NumberLiteral: 0 to ClassInstanceCreation at 2", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleType: InetSocketAddress to ClassInstanceCreation at 0", "INS ClassInstanceCreation to ConditionalExpression at 1", "INS SimpleName: localAddress to VariableDeclarationFragment at 0"]}, {"root": "INS SimpleName: connFactory to ConstructorInvocation at 1", "operations": ["INS SimpleName: connFactory to ConstructorInvocation at 1"]}, {"root": "INS NullLiteral to ConstructorInvocation at 3", "operations": ["INS NullLiteral to ConstructorInvocation at 3"]}, {"root": "INS SimpleName: socketConfig to ReturnStatement at 0", "operations": ["INS SimpleName: socketConfig to ReturnStatement at 0"]}, {"root": "UPDATE from SchemeRegistry to ConnectionSocketFactory", "operations": ["UPD SimpleName: SchemeRegistry from SchemeRegistry to ConnectionSocketFactory", "UPD SimpleName: SchemeRegistry from SchemeRegistry to ConnectionSocketFactory"]}, {"root": "MOVE from SimpleType: ConnectionSocketFactory", "operations": ["MOV SimpleName: SchemeRegistry to SimpleType: ConnectionSocketFactory at 0"]}, {"root": "MOVE from SimpleType: ConnectionSocketFactory", "operations": ["MOV SimpleName: SchemeRegistry to SimpleType: ConnectionSocketFactory at 0"]}, {"root": "UPDATE from SchemeRegistryFactory to getDefaultRegistry", "operations": ["UPD SimpleName: SchemeRegistryFactory from SchemeRegistryFactory to getDefaultRegistry"]}, {"root": "UPDATE from upgrade to connect", "operations": ["UPD SimpleName: upgrade from upgrade to connect"]}, {"root": "INS SimpleName: localAddress to MethodInvocation at 4", "operations": ["INS SimpleName: localAddress to MethodInvocation at 4"]}, {"root": "INS MethodInvocation to MethodInvocation at 5", "operations": ["INS FieldAccess to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 5", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: connConfig to FieldAccess at 1"]}, {"root": "INS FieldAccess to MethodInvocation at 6", "operations": ["INS SimpleName: socketConfig to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 6"]}, {"root": "INS SimpleName: context to MethodInvocation at 7", "operations": ["INS SimpleName: context to MethodInvocation at 7"]}, {"root": "UPDATE from connect to upgrade", "operations": ["UPD SimpleName: connect from connect to upgrade"]}, {"root": "INS SimpleName: schemePortResolver to ClassInstanceCreation at 2", "operations": ["INS SimpleName: schemePortResolver to ClassInstanceCreation at 2"]}, {"root": "UPDATE from params to getConnectTimeout", "operations": ["UPD SimpleName: params from params to getConnectTimeout"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: params to MethodInvocation at 1"]}, {"root": "INS FieldAccess to MethodInvocation at 2", "operations": ["INS FieldAccess to MethodInvocation at 2", "INS SimpleName: connConfig to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "DEL SimpleType: SchemeRegistry", "operations": ["DEL SimpleType: SchemeRegistry"]}, {"root": "DEL Block", "operations": ["DEL IfStatement", "DEL ThrowStatement", "DEL Block", "DEL SimpleName: schemeRegistry", "DEL NullLiteral", "DEL ClassInstanceCreation", "DEL SimpleName: IllegalArgumentException", "DEL SimpleType: IllegalArgumentException", "DEL InfixExpression: ==", "DEL Block", "DEL StringLiteral: \"Scheme registry may not be null\""]}, {"root": "DEL SimpleType: SchemeRegistry", "operations": ["DEL SimpleType: SchemeRegistry"]}, {"root": "DEL SimpleName: createDefault", "operations": ["DEL SimpleName: createDefault"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getSchemeRegistry", "DEL ThisExpression", "DEL SimpleName: connectionOperator", "DEL FieldAccess", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: context", "operations": ["DEL SimpleName: context"]}, {"root": "DEL SimpleName: local", "operations": ["DEL SimpleName: local"]}, {"root": "DEL SimpleName: params", "operations": ["DEL SimpleName: params"]}]}}, {"BasicHttpClientConnectionManager_diff": {"operations": ["Move ImportDeclaration(35) into CompilationUnit(1236) at 11", "Move ImportDeclaration(37) into CompilationUnit(1236) at 12", "Insert ImportDeclaration(7) into CompilationUnit(1236) at 3", "Insert ImportDeclaration(25) into CompilationUnit(1236) at 12", "Insert ImportDeclaration(27) into CompilationUnit(1236) at 13", "Insert ImportDeclaration(31) into CompilationUnit(1236) at 15", "Insert ImportDeclaration(43) into CompilationUnit(1236) at 21", "Insert ImportDeclaration(49) into CompilationUnit(1236) at 24", "Insert ImportDeclaration(51) into CompilationUnit(1236) at 25", "Insert ImportDeclaration(53) into CompilationUnit(1236) at 26", "Move MethodDeclaration(272) into TypeDeclaration: class(1235) at 22", "Move MethodDeclaration(881) into TypeDeclaration: class(1235) at 22", "Move MethodDeclaration(952) into TypeDeclaration: class(1235) at 23", "Insert QualifiedName: java.net.InetSocketAddress(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: org.apache.http.config.ConnectionConfig(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: org.apache.http.config.Lookup(26) into ImportDeclaration(27) at 0", "Update QualifiedName: org.apache.http.conn.scheme.SchemeRegistry(34) to org.apache.http.config.Registry", "Insert QualifiedName: org.apache.http.config.RegistryBuilder(30) into ImportDeclaration(31) at 0", "Update QualifiedName: org.apache.http.params.HttpParams(36) to org.apache.http.config.SocketConfig", "Insert QualifiedName: org.apache.http.conn.SchemePortResolver(42) into ImportDeclaration(43) at 0", "Insert QualifiedName: org.apache.http.conn.socket.ConnectionSocketFactory(48) into ImportDeclaration(49) at 0", "Insert QualifiedName: org.apache.http.conn.socket.PlainSocketFactory(50) into ImportDeclaration(51) at 0", "Insert QualifiedName: org.apache.http.conn.ssl.SSLSocketFactory(52) into ImportDeclaration(53) at 0", "Insert FieldDeclaration(176) into TypeDeclaration: class(1235) at 14", "Insert FieldDeclaration(185) into TypeDeclaration: class(1235) at 15", "Insert MethodDeclaration(224) into TypeDeclaration: class(1235) at 17", "Move SingleVariableDeclaration(172) into MethodDeclaration(295) at 5", "Insert MethodDeclaration(337) into TypeDeclaration: class(1235) at 20", "Insert MethodDeclaration(419) into TypeDeclaration: class(1235) at 27", "Insert MethodDeclaration(1056) into TypeDeclaration: class(1235) at 35", "Insert MethodDeclaration(1121) into TypeDeclaration: class(1235) at 36", "Insert SingleMemberAnnotation(170) into FieldDeclaration(176) at 0", "Insert Modifier: private(171) into FieldDeclaration(176) at 1", "Insert SimpleType: SocketConfig(173) into FieldDeclaration(176) at 2", "Insert VariableDeclarationFragment(175) into FieldDeclaration(176) at 3", "Insert SingleMemberAnnotation(179) into FieldDeclaration(185) at 0", "Insert Modifier: private(180) into FieldDeclaration(185) at 1", "Insert SimpleType: ConnectionConfig(182) into FieldDeclaration(185) at 2", "Insert VariableDeclarationFragment(184) into FieldDeclaration(185) at 3", "Insert Modifier: private(195) into MethodDeclaration(224) at 0", "Insert Modifier: static(196) into MethodDeclaration(224) at 1", "Insert ParameterizedType: Registry<ConnectionSocketFactory>(201) into MethodDeclaration(224) at 2", "Insert SimpleName: getDefaultRegistry(202) into MethodDeclaration(224) at 3", "Insert Block(223) into MethodDeclaration(224) at 4", "Insert SingleVariableDeclaration(247) into MethodDeclaration(295) at 4", "Insert Block(294) into MethodDeclaration(295) at 6", "Insert SingleVariableDeclaration(313) into MethodDeclaration(320) at 3", "Insert Modifier: public(321) into MethodDeclaration(337) at 0", "Insert SimpleName: BasicHttpClientConnectionManager(322) into MethodDeclaration(337) at 1", "Insert SingleVariableDeclaration(330) into MethodDeclaration(337) at 2", "Insert Block(336) into MethodDeclaration(337) at 3", "Insert Modifier: synchronized(381) into MethodDeclaration(388) at 1", "Update SimpleType: SchemeRegistry(263) to SocketConfig", "Update SimpleName: getSchemeRegistry(264) to getSocketConfig", "Insert Modifier: synchronized(390) into MethodDeclaration(410) at 1", "Update SimpleName: connect(807) to setSocketConfig", "Insert Block(409) into MethodDeclaration(410) at 5", "Insert Modifier: public(411) into MethodDeclaration(419) at 0", "Insert Modifier: synchronized(412) into MethodDeclaration(419) at 1", "Insert SimpleType: ConnectionConfig(414) into MethodDeclaration(419) at 2", "Insert SimpleName: getConnectionConfig(415) into MethodDeclaration(419) at 3", "Insert Block(418) into MethodDeclaration(419) at 4", "Insert Modifier: synchronized(421) into MethodDeclaration(441) at 1", "Update SimpleName: upgrade(884) to setConnectionConfig", "Insert Block(440) into MethodDeclaration(441) at 5", "Insert Modifier: public(963) into MethodDeclaration(1056) at 0", "Insert PrimitiveType: void(964) into MethodDeclaration(1056) at 1", "Insert SimpleName: connect(965) into MethodDeclaration(1056) at 2", "Move SingleVariableDeclaration(812) into MethodDeclaration(1056) at 3", "Move SingleVariableDeclaration(817) into MethodDeclaration(1056) at 4", "Move SingleVariableDeclaration(822) into MethodDeclaration(1056) at 5", "Move SingleVariableDeclaration(827) into MethodDeclaration(1056) at 6", "Move SimpleType: IOException(834) into MethodDeclaration(1056) at 7", "Move Block(951) into MethodDeclaration(1056) at 8", "Insert Modifier: public(1057) into MethodDeclaration(1121) at 0", "Insert PrimitiveType: void(1058) into MethodDeclaration(1121) at 1", "Insert SimpleName: upgrade(1059) into MethodDeclaration(1121) at 2", "Move SingleVariableDeclaration(889) into MethodDeclaration(1121) at 3", "Move SingleVariableDeclaration(894) into MethodDeclaration(1121) at 4", "Move SingleVariableDeclaration(899) into MethodDeclaration(1121) at 5", "Move SimpleType: IOException(906) into MethodDeclaration(1121) at 6", "Move Block(880) into MethodDeclaration(1121) at 7", "Insert SimpleName: GuardedBy(168) into SingleMemberAnnotation(170) at 0", "Insert StringLiteral: \"this\"(169) into SingleMemberAnnotation(170) at 1", "Insert SimpleName: SocketConfig(172) into SimpleType: SocketConfig(173) at 0", "Insert SimpleName: socketConfig(174) into VariableDeclarationFragment(175) at 0", "Insert SimpleName: GuardedBy(177) into SingleMemberAnnotation(179) at 0", "Insert StringLiteral: \"this\"(178) into SingleMemberAnnotation(179) at 1", "Insert SimpleName: ConnectionConfig(181) into SimpleType: ConnectionConfig(182) at 0", "Insert SimpleName: connConfig(183) into VariableDeclarationFragment(184) at 0", "Insert SimpleType: Registry(198) into ParameterizedType: Registry<ConnectionSocketFactory>(201) at 0", "Insert SimpleType: ConnectionSocketFactory(200) into ParameterizedType: Registry<ConnectionSocketFactory>(201) at 1", "Insert ReturnStatement(222) into Block(223) at 0", "Insert ParameterizedType: Lookup<ConnectionSocketFactory>(232) into SingleVariableDeclaration(234) at 1", "Update SimpleName: schemeRegistry(166) to socketFactoryRegistry", "Insert Modifier: final(243) into SingleVariableDeclaration(247) at 0", "Insert SimpleType: SchemePortResolver(245) into SingleVariableDeclaration(247) at 1", "Insert SimpleName: schemePortResolver(246) into SingleVariableDeclaration(247) at 2", "Insert SuperConstructorInvocation(253) into Block(294) at 0", "Move ExpressionStatement(200) into Block(294) at 1", "Move ExpressionStatement(211) into Block(294) at 2", "Move ExpressionStatement(217) into Block(294) at 3", "Insert ExpressionStatement(287) into Block(294) at 4", "Insert ExpressionStatement(293) into Block(294) at 5", "Insert ParameterizedType: Lookup<ConnectionSocketFactory>(303) into SingleVariableDeclaration(305) at 1", "Update SimpleName: schemeRegistry(225) to socketFactoryRegistry", "Insert Modifier: final(306) into SingleVariableDeclaration(313) at 0", "Insert ParameterizedType: HttpConnectionFactory<SocketClientConnection>(311) into SingleVariableDeclaration(313) at 1", "Insert SimpleName: connFactory(312) into SingleVariableDeclaration(313) at 2", "Insert Modifier: final(323) into SingleVariableDeclaration(330) at 0", "Insert ParameterizedType: Lookup<ConnectionSocketFactory>(328) into SingleVariableDeclaration(330) at 1", "Insert SimpleName: socketFactoryRegistry(329) into SingleVariableDeclaration(330) at 2", "Insert ConstructorInvocation(335) into Block(336) at 0", "Update SimpleName: SchemeRegistry(262) to SocketConfig", "Update SimpleType: HttpParams(830) to SocketConfig", "Update SimpleName: params(831) to socketConfig", "Insert ExpressionStatement(408) into Block(409) at 0", "Insert SimpleName: ConnectionConfig(413) into SimpleType: ConnectionConfig(414) at 0", "Insert ReturnStatement(417) into Block(418) at 0", "Update SimpleType: HttpParams(902) to ConnectionConfig", "Update SimpleName: params(903) to connConfig", "Insert ExpressionStatement(439) into Block(440) at 0", "Insert VariableDeclarationStatement(1034) into Block(1055) at 3", "Insert SimpleName: Registry(197) into SimpleType: Registry(198) at 0", "Insert SimpleName: ConnectionSocketFactory(199) into SimpleType: ConnectionSocketFactory(200) at 0", "Insert MethodInvocation(221) into ReturnStatement(222) at 0", "Insert SimpleType: Lookup(229) into ParameterizedType: Lookup<ConnectionSocketFactory>(232) at 0", "Insert SimpleType: ConnectionSocketFactory(231) into ParameterizedType: Lookup<ConnectionSocketFactory>(232) at 1", "Insert SimpleName: SchemePortResolver(244) into SimpleType: SchemePortResolver(245) at 0", "Insert Assignment: =(286) into ExpressionStatement(287) at 0", "Insert Assignment: =(292) into ExpressionStatement(293) at 0", "Insert SimpleType: Lookup(300) into ParameterizedType: Lookup<ConnectionSocketFactory>(303) at 0", "Insert SimpleType: ConnectionSocketFactory(302) into ParameterizedType: Lookup<ConnectionSocketFactory>(303) at 1", "Insert SimpleType: HttpConnectionFactory(308) into ParameterizedType: HttpConnectionFactory<SocketClientConnection>(311) at 0", "Insert SimpleType: SocketClientConnection(310) into ParameterizedType: HttpConnectionFactory<SocketClientConnection>(311) at 1", "Update SimpleName: schemeRegistry(227) to socketFactoryRegistry", "Insert SimpleName: connFactory(315) into ConstructorInvocation(318) at 1", "Insert SimpleType: Lookup(325) into ParameterizedType: Lookup<ConnectionSocketFactory>(328) at 0", "Insert SimpleType: ConnectionSocketFactory(327) into ParameterizedType: Lookup<ConnectionSocketFactory>(328) at 1", "Insert SimpleName: socketFactoryRegistry(331) into ConstructorInvocation(335) at 0", "Insert NullLiteral(332) into ConstructorInvocation(335) at 1", "Insert NullLiteral(333) into ConstructorInvocation(335) at 2", "Insert NullLiteral(334) into ConstructorInvocation(335) at 3", "Insert NullLiteral(344) into ConstructorInvocation(345) at 3", "Insert SimpleName: socketConfig(385) into ReturnStatement(386) at 0", "Update SimpleName: HttpParams(829) to SocketConfig", "Insert Assignment: =(407) into ExpressionStatement(408) at 0", "Insert SimpleName: connConfig(416) into ReturnStatement(417) at 0", "Update SimpleName: HttpParams(901) to ConnectionConfig", "Insert Assignment: =(438) into ExpressionStatement(439) at 0", "Insert SimpleType: InetSocketAddress(1021) into VariableDeclarationStatement(1034) at 0", "Insert VariableDeclarationFragment(1033) into VariableDeclarationStatement(1034) at 1", "Insert MethodInvocation(219) into MethodInvocation(221) at 0", "Insert SimpleName: build(220) into MethodInvocation(221) at 1", "Insert SimpleName: Lookup(228) into SimpleType: Lookup(229) at 0", "Update SimpleName: SchemeRegistry(164) to ConnectionSocketFactory", "Move SimpleName: SchemeRegistry(164) into SimpleType: ConnectionSocketFactory(231) at 0", "Insert FieldAccess(284) into Assignment: =(286) at 0", "Insert QualifiedName: SocketConfig.DEFAULT(285) into Assignment: =(286) at 1", "Insert FieldAccess(290) into Assignment: =(292) at 0", "Insert QualifiedName: ConnectionConfig.DEFAULT(291) into Assignment: =(292) at 1", "Insert SimpleName: Lookup(299) into SimpleType: Lookup(300) at 0", "Update SimpleName: SchemeRegistry(223) to ConnectionSocketFactory", "Move SimpleName: SchemeRegistry(223) into SimpleType: ConnectionSocketFactory(302) at 0", "Insert SimpleName: HttpConnectionFactory(307) into SimpleType: HttpConnectionFactory(308) at 0", "Insert SimpleName: SocketClientConnection(309) into SimpleType: SocketClientConnection(310) at 0", "Insert SimpleName: Lookup(324) into SimpleType: Lookup(325) at 0", "Insert SimpleName: ConnectionSocketFactory(326) into SimpleType: ConnectionSocketFactory(327) at 0", "Update SimpleName: SchemeRegistryFactory(235) to getDefaultRegistry", "Insert FieldAccess(400) into Assignment: =(407) at 0", "Insert ConditionalExpression(406) into Assignment: =(407) at 1", "Insert FieldAccess(431) into Assignment: =(438) at 0", "Insert ConditionalExpression(437) into Assignment: =(438) at 1", "Insert SimpleName: InetSocketAddress(1020) into SimpleType: InetSocketAddress(1021) at 0", "Insert SimpleName: localAddress(1022) into VariableDeclarationFragment(1033) at 0", "Insert ConditionalExpression(1032) into VariableDeclarationFragment(1033) at 1", "Update SimpleName: upgrade(942) to connect", "Insert SimpleName: localAddress(1043) into MethodInvocation(1053) at 4", "Insert MethodInvocation(1048) into MethodInvocation(1053) at 5", "Insert FieldAccess(1051) into MethodInvocation(1053) at 6", "Insert SimpleName: context(1052) into MethodInvocation(1053) at 7", "Update SimpleName: connect(870) to upgrade", "Insert MethodInvocation(213) into MethodInvocation(219) at 0", "Insert SimpleName: register(214) into MethodInvocation(219) at 1", "Insert StringLiteral: \"https\"(215) into MethodInvocation(219) at 2", "Insert MethodInvocation(218) into MethodInvocation(219) at 3", "Update SimpleName: schemeRegistry(196) to socketFactoryRegistry", "Insert SimpleName: schemePortResolver(260) into ClassInstanceCreation(262) at 2", "Insert ThisExpression(282) into FieldAccess(284) at 0", "Insert SimpleName: socketConfig(283) into FieldAccess(284) at 1", "Insert ThisExpression(288) into FieldAccess(290) at 0", "Insert SimpleName: connConfig(289) into FieldAccess(290) at 1", "Insert ThisExpression(398) into FieldAccess(400) at 0", "Insert SimpleName: socketConfig(399) into FieldAccess(400) at 1", "Insert InfixExpression: !=(403) into ConditionalExpression(406) at 0", "Insert SimpleName: socketConfig(404) into ConditionalExpression(406) at 1", "Insert QualifiedName: SocketConfig.DEFAULT(405) into ConditionalExpression(406) at 2", "Insert ThisExpression(429) into FieldAccess(431) at 0", "Insert SimpleName: connConfig(430) into FieldAccess(431) at 1", "Insert InfixExpression: !=(434) into ConditionalExpression(437) at 0", "Insert SimpleName: connConfig(435) into ConditionalExpression(437) at 1", "Insert QualifiedName: ConnectionConfig.DEFAULT(436) into ConditionalExpression(437) at 2", "Insert InfixExpression: !=(1025) into ConditionalExpression(1032) at 0", "Insert ClassInstanceCreation(1030) into ConditionalExpression(1032) at 1", "Insert NullLiteral(1031) into ConditionalExpression(1032) at 2", "Insert FieldAccess(1046) into MethodInvocation(1048) at 0", "Update SimpleName: params(948) to getConnectTimeout", "Move SimpleName: params(948) into MethodInvocation(1048) at 1", "Insert ThisExpression(1049) into FieldAccess(1051) at 0", "Insert SimpleName: socketConfig(1050) into FieldAccess(1051) at 1", "Insert MethodInvocation(207) into MethodInvocation(213) at 0", "Insert SimpleName: register(208) into MethodInvocation(213) at 1", "Insert StringLiteral: \"https\"(209) into MethodInvocation(213) at 2", "Insert MethodInvocation(212) into MethodInvocation(213) at 3", "Insert SimpleName: SSLSocketFactory(216) into MethodInvocation(218) at 0", "Insert SimpleName: getSocketFactory(217) into MethodInvocation(218) at 1", "Insert SimpleName: socketConfig(401) into InfixExpression: !=(403) at 0", "Insert NullLiteral(402) into InfixExpression: !=(403) at 1", "Insert SimpleName: connConfig(432) into InfixExpression: !=(434) at 0", "Insert NullLiteral(433) into InfixExpression: !=(434) at 1", "Insert SimpleName: local(1023) into InfixExpression: !=(1025) at 0", "Insert NullLiteral(1024) into InfixExpression: !=(1025) at 1", "Insert SimpleType: InetSocketAddress(1027) into ClassInstanceCreation(1030) at 0", "Insert SimpleName: local(1028) into ClassInstanceCreation(1030) at 1", "Insert NumberLiteral: 0(1029) into ClassInstanceCreation(1030) at 2", "Insert ThisExpression(1044) into FieldAccess(1046) at 0", "Insert SimpleName: connConfig(1045) into FieldAccess(1046) at 1", "Insert SimpleName: RegistryBuilder(203) into MethodInvocation(207) at 0", "Insert SimpleType: ConnectionSocketFactory(205) into MethodInvocation(207) at 1", "Insert SimpleName: create(206) into MethodInvocation(207) at 2", "Insert SimpleName: PlainSocketFactory(210) into MethodInvocation(212) at 0", "Insert SimpleName: getSocketFactory(211) into MethodInvocation(212) at 1", "Insert FieldAccess(754) into MethodInvocation(755) at 2", "Insert SimpleName: InetSocketAddress(1026) into SimpleType: InetSocketAddress(1027) at 0", "Insert SimpleName: ConnectionSocketFactory(204) into SimpleType: ConnectionSocketFactory(205) at 0", "Insert ThisExpression(752) into FieldAccess(754) at 0", "Insert SimpleName: connConfig(753) into FieldAccess(754) at 1", "Delete SimpleType: SchemeRegistry(165)", "Delete SimpleName: schemeRegistry(181)", "Delete NullLiteral(182)", "Delete InfixExpression: ==(183)", "Delete SimpleName: IllegalArgumentException(184)", "Delete SimpleType: IllegalArgumentException(185)", "Delete StringLiteral: \"Scheme registry may not be null\"(186)", "Delete ClassInstanceCreation(187)", "Delete ThrowStatement(188)", "Delete Block(189)", "Delete IfStatement(190)", "Delete Block(218)", "Delete SimpleType: SchemeRegistry(224)", "Delete SimpleName: createDefault(236)", "Delete ThisExpression(265)", "Delete SimpleName: connectionOperator(266)", "Delete FieldAccess(267)", "Delete SimpleName: getSchemeRegistry(268)", "Delete MethodInvocation(269)", "Delete SimpleName: context(947)", "Delete SimpleName: local(875)", "Delete SimpleName: params(877)"]}}, {"DefaultClientConnectionFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.nio.charset.Charset to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: java.nio.charset.CharsetDecoder to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: java.nio.charset.CharsetEncoder to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: java.nio.charset.CodingErrorAction to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: org.apache.http.config.ConnectionConfig to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: config to SingleVariableDeclaration at 2", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS ConditionalExpression to VariableDeclarationFragment at 1", "INS SimpleName: config to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS InfixExpression: != to ConditionalExpression at 0", "INS SimpleType: ConnectionConfig to VariableDeclarationStatement at 0", "INS SimpleName: cconfig to VariableDeclarationFragment at 0", "INS SimpleName: config to ConditionalExpression at 1", "INS QualifiedName: ConnectionConfig.DEFAULT to ConditionalExpression at 2", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleType: CharsetDecoder to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: CharsetDecoder to SimpleType: CharsetDecoder at 0", "INS SimpleName: chardecoder to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: CharsetEncoder to SimpleType: CharsetEncoder at 0", "INS SimpleName: charencoder to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 2", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleType: CharsetEncoder to VariableDeclarationStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleName: cconfig to MethodInvocation at 0", "INS SimpleType: Charset to VariableDeclarationStatement at 0", "INS SimpleName: getCharset to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: charset to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: Charset to SimpleType: Charset at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS SimpleName: cconfig to MethodInvocation at 0", "INS SimpleName: cconfig to MethodInvocation at 0", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS MethodInvocation to ConditionalExpression at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS QualifiedName: CodingErrorAction.REPORT to ConditionalExpression at 2", "INS SimpleType: CodingErrorAction to VariableDeclarationStatement at 0", "INS SimpleName: CodingErrorAction to SimpleType: CodingErrorAction at 0", "INS SimpleName: malformedInputAction to VariableDeclarationFragment at 0", "INS SimpleName: getMalformedInputAction to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NullLiteral to InfixExpression: != at 1", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: getMalformedInputAction to MethodInvocation at 1", "INS InfixExpression: != to ConditionalExpression at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 5", "operations": ["INS MethodInvocation to ConditionalExpression at 1", "INS SimpleName: getUnmappableInputAction to MethodInvocation at 1", "INS SimpleName: unmappableInputAction to VariableDeclarationFragment at 0", "INS SimpleName: getUnmappableInputAction to MethodInvocation at 1", "INS SimpleName: cconfig to MethodInvocation at 0", "INS InfixExpression: != to ConditionalExpression at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS VariableDeclarationStatement to Block at 5", "INS QualifiedName: CodingErrorAction.REPORT to ConditionalExpression at 2", "INS SimpleName: cconfig to MethodInvocation at 0", "INS SimpleType: CodingErrorAction to VariableDeclarationStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: CodingErrorAction to SimpleType: CodingErrorAction at 0", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: charset to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: unmappableInputAction to MethodInvocation at 2", "INS IfStatement to Block at 6", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: chardecoder to MethodInvocation at 0", "INS SimpleName: chardecoder to Assignment: = at 0", "INS SimpleName: onMalformedInput to MethodInvocation at 1", "INS SimpleName: onMalformedInput to MethodInvocation at 1", "INS ExpressionStatement to Block at 4", "INS InfixExpression: != to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: chardecoder to MethodInvocation at 0", "INS SimpleName: unmappableInputAction to MethodInvocation at 2", "INS SimpleName: charencoder to MethodInvocation at 0", "INS SimpleName: charset to MethodInvocation at 0", "INS SimpleName: onUnmappableCharacter to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: charencoder to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: onUnmappableCharacter to MethodInvocation at 1", "INS SimpleName: charencoder to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: malformedInputAction to MethodInvocation at 2", "INS SimpleName: newDecoder to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: charset to InfixExpression: != at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: malformedInputAction to MethodInvocation at 2", "INS SimpleName: newEncoder to MethodInvocation at 1"]}, {"root": "INS SimpleName: chardecoder to ClassInstanceCreation at 2", "operations": ["INS SimpleName: chardecoder to ClassInstanceCreation at 2"]}, {"root": "INS SimpleName: charencoder to ClassInstanceCreation at 3", "operations": ["INS SimpleName: charencoder to ClassInstanceCreation at 3"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 4", "operations": ["INS SimpleName: cconfig to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 4", "INS SimpleName: getMessageConstraints to MethodInvocation at 1"]}, {"root": "INS NullLiteral to ClassInstanceCreation at 5", "operations": ["INS NullLiteral to ClassInstanceCreation at 5"]}, {"root": "INS NullLiteral to ClassInstanceCreation at 6", "operations": ["INS NullLiteral to ClassInstanceCreation at 6"]}, {"root": "INS NullLiteral to ClassInstanceCreation at 7", "operations": ["INS NullLiteral to ClassInstanceCreation at 7"]}, {"root": "INS NullLiteral to ClassInstanceCreation at 8", "operations": ["INS NullLiteral to ClassInstanceCreation at 8"]}]}}, {"DefaultClientConnectionFactory_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(167) at 1", "Insert ImportDeclaration(5) into CompilationUnit(167) at 2", "Insert ImportDeclaration(7) into CompilationUnit(167) at 3", "Insert ImportDeclaration(9) into CompilationUnit(167) at 4", "Insert ImportDeclaration(13) into CompilationUnit(167) at 6", "Insert QualifiedName: java.nio.charset.Charset(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: java.nio.charset.CharsetDecoder(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: java.nio.charset.CharsetEncoder(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: java.nio.charset.CodingErrorAction(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.http.config.ConnectionConfig(12) into ImportDeclaration(13) at 0", "Insert SingleVariableDeclaration(49) into MethodDeclaration(165) at 3", "Insert Modifier: final(45) into SingleVariableDeclaration(49) at 0", "Insert SimpleType: ConnectionConfig(47) into SingleVariableDeclaration(49) at 1", "Insert SimpleName: config(48) into SingleVariableDeclaration(49) at 2", "Insert VariableDeclarationStatement(60) into Block(164) at 0", "Insert VariableDeclarationStatement(66) into Block(164) at 1", "Insert VariableDeclarationStatement(72) into Block(164) at 2", "Insert VariableDeclarationStatement(80) into Block(164) at 3", "Insert VariableDeclarationStatement(95) into Block(164) at 4", "Insert VariableDeclarationStatement(110) into Block(164) at 5", "Insert IfStatement(147) into Block(164) at 6", "Insert SimpleName: ConnectionConfig(46) into SimpleType: ConnectionConfig(47) at 0", "Insert SimpleType: ConnectionConfig(51) into VariableDeclarationStatement(60) at 0", "Insert VariableDeclarationFragment(59) into VariableDeclarationStatement(60) at 1", "Insert SimpleType: CharsetDecoder(62) into VariableDeclarationStatement(66) at 0", "Insert VariableDeclarationFragment(65) into VariableDeclarationStatement(66) at 1", "Insert SimpleType: CharsetEncoder(68) into VariableDeclarationStatement(72) at 0", "Insert VariableDeclarationFragment(71) into VariableDeclarationStatement(72) at 1", "Insert SimpleType: Charset(74) into VariableDeclarationStatement(80) at 0", "Insert VariableDeclarationFragment(79) into VariableDeclarationStatement(80) at 1", "Insert SimpleType: CodingErrorAction(82) into VariableDeclarationStatement(95) at 0", "Insert VariableDeclarationFragment(94) into VariableDeclarationStatement(95) at 1", "Insert SimpleType: CodingErrorAction(97) into VariableDeclarationStatement(110) at 0", "Insert VariableDeclarationFragment(109) into VariableDeclarationStatement(110) at 1", "Insert InfixExpression: !=(113) into IfStatement(147) at 0", "Insert Block(146) into IfStatement(147) at 1", "Insert SimpleName: ConnectionConfig(50) into SimpleType: ConnectionConfig(51) at 0", "Insert SimpleName: cconfig(52) into VariableDeclarationFragment(59) at 0", "Insert ConditionalExpression(58) into VariableDeclarationFragment(59) at 1", "Insert SimpleName: CharsetDecoder(61) into SimpleType: CharsetDecoder(62) at 0", "Insert SimpleName: chardecoder(63) into VariableDeclarationFragment(65) at 0", "Insert NullLiteral(64) into VariableDeclarationFragment(65) at 1", "Insert SimpleName: CharsetEncoder(67) into SimpleType: CharsetEncoder(68) at 0", "Insert SimpleName: charencoder(69) into VariableDeclarationFragment(71) at 0", "Insert NullLiteral(70) into VariableDeclarationFragment(71) at 1", "Insert SimpleName: Charset(73) into SimpleType: Charset(74) at 0", "Insert SimpleName: charset(75) into VariableDeclarationFragment(79) at 0", "Insert MethodInvocation(78) into VariableDeclarationFragment(79) at 1", "Insert SimpleName: CodingErrorAction(81) into SimpleType: CodingErrorAction(82) at 0", "Insert SimpleName: malformedInputAction(83) into VariableDeclarationFragment(94) at 0", "Insert ConditionalExpression(93) into VariableDeclarationFragment(94) at 1", "Insert SimpleName: CodingErrorAction(96) into SimpleType: CodingErrorAction(97) at 0", "Insert SimpleName: unmappableInputAction(98) into VariableDeclarationFragment(109) at 0", "Insert ConditionalExpression(108) into VariableDeclarationFragment(109) at 1", "Insert SimpleName: charset(111) into InfixExpression: !=(113) at 0", "Insert NullLiteral(112) into InfixExpression: !=(113) at 1", "Insert ExpressionStatement(119) into Block(146) at 0", "Insert ExpressionStatement(124) into Block(146) at 1", "Insert ExpressionStatement(129) into Block(146) at 2", "Insert ExpressionStatement(135) into Block(146) at 3", "Insert ExpressionStatement(140) into Block(146) at 4", "Insert ExpressionStatement(145) into Block(146) at 5", "Insert SimpleName: chardecoder(153) into ClassInstanceCreation(162) at 2", "Insert SimpleName: charencoder(154) into ClassInstanceCreation(162) at 3", "Insert MethodInvocation(157) into ClassInstanceCreation(162) at 4", "Insert NullLiteral(158) into ClassInstanceCreation(162) at 5", "Insert NullLiteral(159) into ClassInstanceCreation(162) at 6", "Insert NullLiteral(160) into ClassInstanceCreation(162) at 7", "Insert NullLiteral(161) into ClassInstanceCreation(162) at 8", "Insert InfixExpression: !=(55) into ConditionalExpression(58) at 0", "Insert SimpleName: config(56) into ConditionalExpression(58) at 1", "Insert QualifiedName: ConnectionConfig.DEFAULT(57) into ConditionalExpression(58) at 2", "Insert SimpleName: cconfig(76) into MethodInvocation(78) at 0", "Insert SimpleName: getCharset(77) into MethodInvocation(78) at 1", "Insert InfixExpression: !=(88) into ConditionalExpression(93) at 0", "Insert MethodInvocation(91) into ConditionalExpression(93) at 1", "Insert QualifiedName: CodingErrorAction.REPORT(92) into ConditionalExpression(93) at 2", "Insert InfixExpression: !=(103) into ConditionalExpression(108) at 0", "Insert MethodInvocation(106) into ConditionalExpression(108) at 1", "Insert QualifiedName: CodingErrorAction.REPORT(107) into ConditionalExpression(108) at 2", "Insert Assignment: =(118) into ExpressionStatement(119) at 0", "Insert MethodInvocation(123) into ExpressionStatement(124) at 0", "Insert MethodInvocation(128) into ExpressionStatement(129) at 0", "Insert Assignment: =(134) into ExpressionStatement(135) at 0", "Insert MethodInvocation(139) into ExpressionStatement(140) at 0", "Insert MethodInvocation(144) into ExpressionStatement(145) at 0", "Insert SimpleName: cconfig(155) into MethodInvocation(157) at 0", "Insert SimpleName: getMessageConstraints(156) into MethodInvocation(157) at 1", "Insert SimpleName: config(53) into InfixExpression: !=(55) at 0", "Insert NullLiteral(54) into InfixExpression: !=(55) at 1", "Insert MethodInvocation(86) into InfixExpression: !=(88) at 0", "Insert NullLiteral(87) into InfixExpression: !=(88) at 1", "Insert SimpleName: cconfig(89) into MethodInvocation(91) at 0", "Insert SimpleName: getMalformedInputAction(90) into MethodInvocation(91) at 1", "Insert MethodInvocation(101) into InfixExpression: !=(103) at 0", "Insert NullLiteral(102) into InfixExpression: !=(103) at 1", "Insert SimpleName: cconfig(104) into MethodInvocation(106) at 0", "Insert SimpleName: getUnmappableInputAction(105) into MethodInvocation(106) at 1", "Insert SimpleName: chardecoder(114) into Assignment: =(118) at 0", "Insert MethodInvocation(117) into Assignment: =(118) at 1", "Insert SimpleName: chardecoder(120) into MethodInvocation(123) at 0", "Insert SimpleName: onMalformedInput(121) into MethodInvocation(123) at 1", "Insert SimpleName: malformedInputAction(122) into MethodInvocation(123) at 2", "Insert SimpleName: chardecoder(125) into MethodInvocation(128) at 0", "Insert SimpleName: onUnmappableCharacter(126) into MethodInvocation(128) at 1", "Insert SimpleName: unmappableInputAction(127) into MethodInvocation(128) at 2", "Insert SimpleName: charencoder(130) into Assignment: =(134) at 0", "Insert MethodInvocation(133) into Assignment: =(134) at 1", "Insert SimpleName: charencoder(136) into MethodInvocation(139) at 0", "Insert SimpleName: onMalformedInput(137) into MethodInvocation(139) at 1", "Insert SimpleName: malformedInputAction(138) into MethodInvocation(139) at 2", "Insert SimpleName: charencoder(141) into MethodInvocation(144) at 0", "Insert SimpleName: onUnmappableCharacter(142) into MethodInvocation(144) at 1", "Insert SimpleName: unmappableInputAction(143) into MethodInvocation(144) at 2", "Insert SimpleName: cconfig(84) into MethodInvocation(86) at 0", "Insert SimpleName: getMalformedInputAction(85) into MethodInvocation(86) at 1", "Insert SimpleName: cconfig(99) into MethodInvocation(101) at 0", "Insert SimpleName: getUnmappableInputAction(100) into MethodInvocation(101) at 1", "Insert SimpleName: charset(115) into MethodInvocation(117) at 0", "Insert SimpleName: newDecoder(116) into MethodInvocation(117) at 1", "Insert SimpleName: charset(131) into MethodInvocation(133) at 0", "Insert SimpleName: newEncoder(132) into MethodInvocation(133) at 1"]}}, {"DefaultHttpRoutePlanner_cluster": {"actions": [{"root": "INS MarkerAnnotation to TypeDeclaration: class at 2", "operations": ["INS MarkerAnnotation to TypeDeclaration: class at 2", "INS SimpleName: Deprecated to MarkerAnnotation at 0"]}, {"root": "INS TagElement: @deprecated to Javadoc at 2", "operations": ["INS TagElement: @deprecated to Javadoc at 2", "INS SimpleName: DefaultRoutePlanner to TagElement: @link at 0", "INS TagElement: @link to TagElement: @deprecated at 1", "INS TextElement:  (4.3) use  to TagElement: @deprecated at 0"]}]}}, {"DefaultHttpRoutePlanner_diff": {"operations": ["Insert MarkerAnnotation(71) into TypeDeclaration: class(304) at 2", "Insert TagElement: @deprecated(66) into Javadoc(67) at 2", "Insert SimpleName: Deprecated(70) into MarkerAnnotation(71) at 0", "Insert TextElement:  (4.3) use (63) into TagElement: @deprecated(66) at 0", "Insert TagElement: @link(65) into TagElement: @deprecated(66) at 1", "Insert SimpleName: DefaultRoutePlanner(64) into TagElement: @link(65) at 0"]}}, {"HttpClientConnectionManagerBase_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 14"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: java.net.InetSocketAddress to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: java.util.Map to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: java.util.concurrent.ConcurrentHashMap to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS QualifiedName: org.apache.http.config.ConnectionConfig to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 13"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: org.apache.http.config.Lookup to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS QualifiedName: org.apache.http.config.SocketConfig to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 15"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 17"]}, {"root": "UPDATE from org.apache.http.conn.scheme.SchemeRegistry to org.apache.http.conn.SchemePortResolver", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.SchemeRegistry from org.apache.http.conn.scheme.SchemeRegistry to org.apache.http.conn.SchemePortResolver"]}, {"root": "UPDATE from org.apache.http.params.HttpParams to org.apache.http.conn.socket.ConnectionSocketFactory", "operations": ["UPD QualifiedName: org.apache.http.params.HttpParams from org.apache.http.params.HttpParams to org.apache.http.conn.socket.ConnectionSocketFactory"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: HttpHost to ParameterizedType: Map<HttpHost,SocketConfig> at 1", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleType: Map to ParameterizedType: Map<HttpHost,SocketConfig> at 0", "INS SimpleName: HttpHost to SimpleType: HttpHost at 0", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS SimpleName: socketConfigMap to VariableDeclarationFragment at 0", "INS SimpleType: SocketConfig to ParameterizedType: Map<HttpHost,SocketConfig> at 2", "INS ParameterizedType: Map<HttpHost,SocketConfig> to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: SocketConfig to SimpleType: SocketConfig at 0", "INS SimpleName: Map to SimpleType: Map at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 8", "INS SimpleType: ConnectionConfig to ParameterizedType: Map<HttpHost,ConnectionConfig> at 2", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: HttpHost to SimpleType: HttpHost at 0", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleType: Map to ParameterizedType: Map<HttpHost,ConnectionConfig> at 0", "INS SimpleName: connectionConfigMap to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1", "INS ParameterizedType: Map<HttpHost,ConnectionConfig> to FieldDeclaration at 2", "INS SimpleType: HttpHost to ParameterizedType: Map<HttpHost,ConnectionConfig> at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 9", "operations": ["INS Modifier: volatile to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleType: SocketConfig to FieldDeclaration at 2", "INS SimpleName: SocketConfig to SimpleType: SocketConfig at 0", "INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 9", "INS SimpleName: defaultSocketConfig to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 10", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 10", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS SimpleType: ConnectionConfig to FieldDeclaration at 2", "INS SimpleName: defaultConnectionConfig to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: volatile to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS InfixExpression: == to IfStatement at 0", "INS ClassInstanceCreation to ConditionalExpression at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: connectionConfigMap to FieldAccess at 1", "INS SimpleName: InetSocketAddress to SimpleType: InetSocketAddress at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: local to ClassInstanceCreation at 1", "INS SimpleName: host to MethodInvocation at 2", "INS InfixExpression: == to IfStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: defaultSocketConfig to FieldAccess at 1", "INS SimpleName: connConfig to VariableDeclarationFragment at 0", "INS SimpleName: localAddress to MethodInvocation at 4", "INS SimpleName: context to MethodInvocation at 7", "INS SimpleName: socketConfig to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: connConfig to InfixExpression: == at 0", "INS SimpleName: host to MethodInvocation at 2", "INS SimpleType: InetSocketAddress to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: InetSocketAddress to SimpleType: InetSocketAddress at 0", "INS VariableDeclarationStatement to Block at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: socketConfig to Assignment: = at 0", "INS SimpleName: local to InfixExpression: != at 0", "INS Block to MethodDeclaration at 8", "INS SimpleName: connConfig to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS IfStatement to Block at 6", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS SimpleName: localAddress to VariableDeclarationFragment at 0", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS SimpleName: connect to MethodDeclaration at 2", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: connect to MethodInvocation at 1", "INS SimpleName: socketConfigMap to FieldAccess at 1", "INS ExpressionStatement to Block at 8", "INS SimpleName: SocketConfig to SimpleType: SocketConfig at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS FieldAccess to Assignment: = at 1", "INS FieldAccess to Assignment: = at 1", "INS Modifier: public to MethodDeclaration at 0", "INS Block to IfStatement at 1", "INS ThisExpression to FieldAccess at 0", "INS ThisExpression to FieldAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: != to ConditionalExpression at 0", "INS SimpleName: getConnectTimeout to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 7", "INS SimpleType: InetSocketAddress to ClassInstanceCreation at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS FieldAccess to MethodInvocation at 0", "INS SimpleType: ConnectionConfig to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 5", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: conn to MethodInvocation at 2", "INS NullLiteral to ConditionalExpression at 2", "INS SimpleName: connConfig to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: get to MethodInvocation at 1", "INS NumberLiteral: 0 to ClassInstanceCreation at 2", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS ExpressionStatement to Block at 0", "INS SimpleType: SocketConfig to VariableDeclarationStatement at 0", "INS IfStatement to Block at 4", "INS SimpleName: socketConfig to MethodInvocation at 6", "INS SimpleName: defaultConnectionConfig to FieldAccess at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: host to MethodInvocation at 3", "INS FieldAccess to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: socketConfig to InfixExpression: == at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 21", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: upgrade to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 3", "INS FieldAccess to ReturnStatement at 0", "INS SimpleName: SocketConfig to SimpleType: SocketConfig at 0", "INS SimpleName: defaultSocketConfig to FieldAccess at 1", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS SimpleName: getDefaultSocketConfig to MethodDeclaration at 2", "INS SimpleType: SocketConfig to MethodDeclaration at 1", "INS ThisExpression to FieldAccess at 0", "INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 23", "operations": ["INS QualifiedName: SocketConfig.DEFAULT to ConditionalExpression at 2", "INS SimpleName: SocketConfig to SimpleType: SocketConfig at 0", "INS MethodDeclaration to TypeDeclaration: class at 23", "INS Block to MethodDeclaration at 4", "INS NullLiteral to InfixExpression: != at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: defaultSocketConfig to SingleVariableDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: SocketConfig to SingleVariableDeclaration at 1", "INS SimpleName: defaultSocketConfig to FieldAccess at 1", "INS InfixExpression: != to ConditionalExpression at 0", "INS FieldAccess to Assignment: = at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: defaultSocketConfig to ConditionalExpression at 1", "INS SimpleName: defaultSocketConfig to InfixExpression: != at 0", "INS ConditionalExpression to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: setDefaultSocketConfig to MethodDeclaration at 2", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS FieldAccess to ReturnStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: defaultConnectionConfig to FieldAccess at 1", "INS SimpleName: getDefaultConnectionConfig to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS Block to MethodDeclaration at 3", "INS SimpleType: ConnectionConfig to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 24"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS SimpleName: defaultConnectionConfig to ConditionalExpression at 1", "INS MethodDeclaration to TypeDeclaration: class at 25", "INS Modifier: final to SingleVariableDeclaration at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: setDefaultConnectionConfig to MethodDeclaration at 2", "INS SimpleName: defaultConnectionConfig to SingleVariableDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1", "INS SimpleName: defaultConnectionConfig to InfixExpression: != at 0", "INS SimpleName: defaultConnectionConfig to FieldAccess at 1", "INS InfixExpression: != to ConditionalExpression at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS Assignment: = to ExpressionStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS ConditionalExpression to Assignment: = at 1", "INS QualifiedName: ConnectionConfig.DEFAULT to ConditionalExpression at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 28", "operations": ["INS SimpleName: connectionConfigMap to FieldAccess at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS SimpleName: getConnectionConfig to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: ConnectionConfig to MethodDeclaration at 1", "INS SimpleName: host to SingleVariableDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 28", "INS SimpleName: host to MethodInvocation at 2", "INS SimpleName: HttpHost to SimpleType: HttpHost at 0", "INS Modifier: public to MethodDeclaration at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleType: HttpHost to SingleVariableDeclaration at 1", "INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 2", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 2", "INS Modifier: final to SingleVariableDeclaration at 0", "INS ParameterizedType: Lookup<ConnectionSocketFactory> to SingleVariableDeclaration at 1", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Lookup<ConnectionSocketFactory> at 1", "INS SimpleName: Lookup to SimpleType: Lookup at 0", "INS SimpleName: ConnectionSocketFactory to SimpleType: ConnectionSocketFactory at 0", "INS SimpleName: socketFactoryRegistry to SingleVariableDeclaration at 2", "INS SimpleType: Lookup to ParameterizedType: Lookup<ConnectionSocketFactory> at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV Block to MethodDeclaration at 7", "MOV SimpleType: IOException to MethodDeclaration at 7"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleType: IOException to MethodDeclaration at 6"]}, {"root": "UPDATE from SchemeRegistry to SocketConfig", "operations": ["UPD SimpleName: SchemeRegistry from SchemeRegistry to SocketConfig", "UPD SimpleType: SchemeRegistry from SchemeRegistry to SocketConfig"]}, {"root": "UPDATE from getSchemeRegistry to getSocketConfig", "operations": ["UPD SimpleName: getSchemeRegistry from getSchemeRegistry to getSocketConfig"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: HttpHost to SimpleType: HttpHost at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: host to SingleVariableDeclaration at 2", "INS SimpleType: HttpHost to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from connect to setSocketConfig", "operations": ["UPD SimpleName: connect from connect to setSocketConfig"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: SocketConfig to SimpleType: SocketConfig at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: socketConfig to SingleVariableDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: SocketConfig to SingleVariableDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS SimpleName: socketConfigMap to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: host to MethodInvocation at 2", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: socketConfig to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: put to MethodInvocation at 1"]}, {"root": "UPDATE from upgrade to setConnectionConfig", "operations": ["UPD SimpleName: upgrade from upgrade to setConnectionConfig"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: connectionConfig to SingleVariableDeclaration at 2", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: ConnectionConfig to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from SchemeRegistry to SchemePortResolver", "operations": ["UPD SimpleType: SchemeRegistry from SchemeRegistry to SchemePortResolver", "UPD SimpleName: SchemeRegistry from SchemeRegistry to SchemePortResolver"]}, {"root": "UPDATE from schemeRegistry to schemePortResolver", "operations": ["UPD SimpleName: schemeRegistry from schemeRegistry to schemePortResolver"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS ExpressionStatement to Block at 4", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: schemePortResolver to ClassInstanceCreation at 2", "INS SimpleName: socketFactoryRegistry to ClassInstanceCreation at 1", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: dnsResolver to ClassInstanceCreation at 3"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS SimpleName: HttpHost to SimpleType: HttpHost at 0", "INS SimpleName: socketConfigMap to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleType: ConcurrentHashMap to ParameterizedType: ConcurrentHashMap<HttpHost,SocketConfig> at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: HttpHost to ParameterizedType: ConcurrentHashMap<HttpHost,SocketConfig> at 1", "INS ExpressionStatement to Block at 5", "INS FieldAccess to Assignment: = at 0", "INS SimpleType: SocketConfig to ParameterizedType: ConcurrentHashMap<HttpHost,SocketConfig> at 2", "INS SimpleName: SocketConfig to SimpleType: SocketConfig at 0", "INS ParameterizedType: ConcurrentHashMap<HttpHost,SocketConfig> to ClassInstanceCreation at 0"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS SimpleName: defaultSocketConfig to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS QualifiedName: SocketConfig.DEFAULT to Assignment: = at 1", "INS ExpressionStatement to Block at 7"]}, {"root": "INS ExpressionStatement to Block at 8", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 8", "INS QualifiedName: ConnectionConfig.DEFAULT to Assignment: = at 1", "INS SimpleName: defaultConnectionConfig to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1", "MOV IfStatement to Block at 0", "MOV SynchronizedStatement to Block at 2"]}, {"root": "UPDATE from HttpParams to HttpHost", "operations": ["UPD SimpleName: HttpParams from HttpParams to HttpHost", "UPD SimpleName: HttpParams from HttpParams to HttpHost", "UPD SimpleType: HttpParams from HttpParams to HttpHost", "UPD SimpleType: HttpParams from HttpParams to HttpHost"]}, {"root": "UPDATE from params to host", "operations": ["UPD SimpleName: params from params to host", "UPD SimpleName: params from params to host"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0"]}, {"root": "INS FieldAccess to Assignment: = at 0", "operations": ["INS FieldAccess to Assignment: = at 0", "INS SimpleName: connectionConfigMap to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0"]}, {"root": "UPDATE from connect to upgrade", "operations": ["UPD SimpleName: connect from connect to upgrade"]}, {"root": "UPDATE from getSchemeRegistry to get", "operations": ["UPD SimpleName: getSchemeRegistry from getSchemeRegistry to get"]}, {"root": "INS SimpleName: host to MethodInvocation at 2", "operations": ["INS SimpleName: host to MethodInvocation at 2"]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS FieldAccess to MethodInvocation at 0", "INS SimpleName: connectionConfigMap to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "UPDATE from conn to put", "operations": ["UPD SimpleName: conn from conn to put"]}, {"root": "UPDATE from context to connectionConfig", "operations": ["UPD SimpleName: context from context to connectionConfig"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: HttpClientConnectionOperator to ClassInstanceCreation at 0"]}, {"root": "INS ParameterizedType: ConcurrentHashMap<HttpHost,ConnectionConfig> to ClassInstanceCreation at 0", "operations": ["INS ParameterizedType: ConcurrentHashMap<HttpHost,ConnectionConfig> to ClassInstanceCreation at 0", "INS SimpleName: HttpHost to SimpleType: HttpHost at 0", "INS SimpleName: ConnectionConfig to SimpleType: ConnectionConfig at 0", "INS SimpleName: ConcurrentHashMap to SimpleType: ConcurrentHashMap at 0", "INS SimpleType: ConcurrentHashMap to ParameterizedType: ConcurrentHashMap<HttpHost,ConnectionConfig> at 0", "INS SimpleType: HttpHost to ParameterizedType: ConcurrentHashMap<HttpHost,ConnectionConfig> at 1", "INS SimpleType: ConnectionConfig to ParameterizedType: ConcurrentHashMap<HttpHost,ConnectionConfig> at 2"]}, {"root": "UPDATE from connectionOperator to socketConfigMap", "operations": ["UPD SimpleName: connectionOperator from connectionOperator to socketConfigMap"]}, {"root": "UPDATE from IllegalArgumentException to ConcurrentHashMap", "operations": ["UPD SimpleName: IllegalArgumentException from IllegalArgumentException to ConcurrentHashMap"]}, {"root": "MOVE from SimpleType: ConcurrentHashMap", "operations": ["MOV SimpleName: IllegalArgumentException to SimpleType: ConcurrentHashMap at 0"]}, {"root": "DEL IfStatement", "operations": ["DEL InfixExpression: ==", "DEL SimpleName: schemeRegistry", "DEL Block", "DEL StringLiteral: \"Scheme registry may nor be null\"", "DEL IfStatement", "DEL NullLiteral", "DEL SimpleType: IllegalArgumentException", "DEL ThrowStatement", "DEL ClassInstanceCreation"]}, {"root": "DEL SimpleName: schemeRegistry", "operations": ["DEL SimpleName: schemeRegistry"]}, {"root": "DEL SimpleName: dnsResolver", "operations": ["DEL SimpleName: dnsResolver"]}, {"root": "DEL SimpleName: local", "operations": ["DEL SimpleName: local"]}, {"root": "DEL SimpleName: params", "operations": ["DEL SimpleName: params"]}, {"root": "DEL SimpleName: upgrade", "operations": ["DEL SimpleName: upgrade"]}, {"root": "DEL SimpleName: params", "operations": ["DEL SimpleName: params"]}]}}, {"HttpClientConnectionManagerBase_diff": {"operations": ["Move ImportDeclaration(33) into CompilationUnit(976) at 14", "Insert ImportDeclaration(7) into CompilationUnit(976) at 3", "Insert ImportDeclaration(9) into CompilationUnit(976) at 4", "Insert ImportDeclaration(11) into CompilationUnit(976) at 5", "Insert ImportDeclaration(27) into CompilationUnit(976) at 13", "Insert ImportDeclaration(29) into CompilationUnit(976) at 14", "Insert ImportDeclaration(31) into CompilationUnit(976) at 15", "Move MethodDeclaration(198) into TypeDeclaration: class(975) at 17", "Insert QualifiedName: java.net.InetSocketAddress(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: java.util.Map(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: java.util.concurrent.ConcurrentHashMap(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.http.config.ConnectionConfig(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: org.apache.http.config.Lookup(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: org.apache.http.config.SocketConfig(30) into ImportDeclaration(31) at 0", "Update QualifiedName: org.apache.http.conn.scheme.SchemeRegistry(32) to org.apache.http.conn.SchemePortResolver", "Update QualifiedName: org.apache.http.params.HttpParams(34) to org.apache.http.conn.socket.ConnectionSocketFactory", "Insert FieldDeclaration(132) into TypeDeclaration: class(975) at 7", "Insert FieldDeclaration(144) into TypeDeclaration: class(975) at 8", "Insert FieldDeclaration(151) into TypeDeclaration: class(975) at 9", "Insert FieldDeclaration(158) into TypeDeclaration: class(975) at 10", "Insert MethodDeclaration(766) into TypeDeclaration: class(975) at 20", "Insert MethodDeclaration(830) into TypeDeclaration: class(975) at 21", "Insert MethodDeclaration(840) into TypeDeclaration: class(975) at 22", "Insert MethodDeclaration(861) into TypeDeclaration: class(975) at 23", "Insert MethodDeclaration(871) into TypeDeclaration: class(975) at 24", "Insert MethodDeclaration(892) into TypeDeclaration: class(975) at 25", "Insert MethodDeclaration(951) into TypeDeclaration: class(975) at 28", "Insert Modifier: private(121) into FieldDeclaration(132) at 0", "Insert Modifier: final(122) into FieldDeclaration(132) at 1", "Insert ParameterizedType: Map<HttpHost,SocketConfig>(129) into FieldDeclaration(132) at 2", "Insert VariableDeclarationFragment(131) into FieldDeclaration(132) at 3", "Insert Modifier: private(133) into FieldDeclaration(144) at 0", "Insert Modifier: final(134) into FieldDeclaration(144) at 1", "Insert ParameterizedType: Map<HttpHost,ConnectionConfig>(141) into FieldDeclaration(144) at 2", "Insert VariableDeclarationFragment(143) into FieldDeclaration(144) at 3", "Insert Modifier: private(145) into FieldDeclaration(151) at 0", "Insert Modifier: volatile(146) into FieldDeclaration(151) at 1", "Insert SimpleType: SocketConfig(148) into FieldDeclaration(151) at 2", "Insert VariableDeclarationFragment(150) into FieldDeclaration(151) at 3", "Insert Modifier: private(152) into FieldDeclaration(158) at 0", "Insert Modifier: volatile(153) into FieldDeclaration(158) at 1", "Insert SimpleType: ConnectionConfig(155) into FieldDeclaration(158) at 2", "Insert VariableDeclarationFragment(157) into FieldDeclaration(158) at 3", "Insert SingleVariableDeclaration(177) into MethodDeclaration(255) at 2", "Insert Modifier: public(634) into MethodDeclaration(766) at 0", "Insert PrimitiveType: void(635) into MethodDeclaration(766) at 1", "Insert SimpleName: connect(636) into MethodDeclaration(766) at 2", "Move SingleVariableDeclaration(566) into MethodDeclaration(766) at 3", "Move SingleVariableDeclaration(571) into MethodDeclaration(766) at 4", "Move SingleVariableDeclaration(576) into MethodDeclaration(766) at 5", "Move SingleVariableDeclaration(581) into MethodDeclaration(766) at 6", "Move SimpleType: IOException(588) into MethodDeclaration(766) at 7", "Insert Block(765) into MethodDeclaration(766) at 8", "Insert Modifier: public(767) into MethodDeclaration(830) at 0", "Insert PrimitiveType: void(768) into MethodDeclaration(830) at 1", "Insert SimpleName: upgrade(769) into MethodDeclaration(830) at 2", "Move SingleVariableDeclaration(642) into MethodDeclaration(830) at 3", "Move SingleVariableDeclaration(647) into MethodDeclaration(830) at 4", "Move SingleVariableDeclaration(652) into MethodDeclaration(830) at 5", "Move SimpleType: IOException(659) into MethodDeclaration(830) at 6", "Move Block(633) into MethodDeclaration(830) at 7", "Insert Modifier: public(831) into MethodDeclaration(840) at 0", "Insert SimpleType: SocketConfig(833) into MethodDeclaration(840) at 1", "Insert SimpleName: getDefaultSocketConfig(834) into MethodDeclaration(840) at 2", "Insert Block(839) into MethodDeclaration(840) at 3", "Insert Modifier: public(841) into MethodDeclaration(861) at 0", "Insert PrimitiveType: void(842) into MethodDeclaration(861) at 1", "Insert SimpleName: setDefaultSocketConfig(843) into MethodDeclaration(861) at 2", "Insert SingleVariableDeclaration(848) into MethodDeclaration(861) at 3", "Insert Block(860) into MethodDeclaration(861) at 4", "Insert Modifier: public(862) into MethodDeclaration(871) at 0", "Insert SimpleType: ConnectionConfig(864) into MethodDeclaration(871) at 1", "Insert SimpleName: getDefaultConnectionConfig(865) into MethodDeclaration(871) at 2", "Insert Block(870) into MethodDeclaration(871) at 3", "Insert Modifier: public(872) into MethodDeclaration(892) at 0", "Insert PrimitiveType: void(873) into MethodDeclaration(892) at 1", "Insert SimpleName: setDefaultConnectionConfig(874) into MethodDeclaration(892) at 2", "Insert SingleVariableDeclaration(879) into MethodDeclaration(892) at 3", "Insert Block(891) into MethodDeclaration(892) at 4", "Update SimpleType: SchemeRegistry(189) to SocketConfig", "Update SimpleName: getSchemeRegistry(190) to getSocketConfig", "Insert SingleVariableDeclaration(901) into MethodDeclaration(910) at 3", "Update SimpleName: connect(561) to setSocketConfig", "Insert SingleVariableDeclaration(923) into MethodDeclaration(933) at 4", "Insert Block(932) into MethodDeclaration(933) at 5", "Insert Modifier: public(934) into MethodDeclaration(951) at 0", "Insert SimpleType: ConnectionConfig(936) into MethodDeclaration(951) at 1", "Insert SimpleName: getConnectionConfig(937) into MethodDeclaration(951) at 2", "Insert SingleVariableDeclaration(942) into MethodDeclaration(951) at 3", "Insert Block(950) into MethodDeclaration(951) at 4", "Update SimpleName: upgrade(637) to setConnectionConfig", "Insert SingleVariableDeclaration(964) into MethodDeclaration(974) at 4", "Insert SimpleType: Map(124) into ParameterizedType: Map<HttpHost,SocketConfig>(129) at 0", "Insert SimpleType: HttpHost(126) into ParameterizedType: Map<HttpHost,SocketConfig>(129) at 1", "Insert SimpleType: SocketConfig(128) into ParameterizedType: Map<HttpHost,SocketConfig>(129) at 2", "Insert SimpleName: socketConfigMap(130) into VariableDeclarationFragment(131) at 0", "Insert SimpleType: Map(136) into ParameterizedType: Map<HttpHost,ConnectionConfig>(141) at 0", "Insert SimpleType: HttpHost(138) into ParameterizedType: Map<HttpHost,ConnectionConfig>(141) at 1", "Insert SimpleType: ConnectionConfig(140) into ParameterizedType: Map<HttpHost,ConnectionConfig>(141) at 2", "Insert SimpleName: connectionConfigMap(142) into VariableDeclarationFragment(143) at 0", "Insert SimpleName: SocketConfig(147) into SimpleType: SocketConfig(148) at 0", "Insert SimpleName: defaultSocketConfig(149) into VariableDeclarationFragment(150) at 0", "Insert SimpleName: ConnectionConfig(154) into SimpleType: ConnectionConfig(155) at 0", "Insert SimpleName: defaultConnectionConfig(156) into VariableDeclarationFragment(157) at 0", "Insert Modifier: final(170) into SingleVariableDeclaration(177) at 0", "Insert ParameterizedType: Lookup<ConnectionSocketFactory>(175) into SingleVariableDeclaration(177) at 1", "Insert SimpleName: socketFactoryRegistry(176) into SingleVariableDeclaration(177) at 2", "Update SimpleType: SchemeRegistry(122) to SchemePortResolver", "Update SimpleName: schemeRegistry(123) to schemePortResolver", "Insert ExpressionStatement(215) into Block(254) at 3", "Insert ExpressionStatement(228) into Block(254) at 4", "Insert ExpressionStatement(247) into Block(254) at 6", "Insert ExpressionStatement(253) into Block(254) at 7", "Move IfStatement(669) into Block(765) at 0", "Move VariableDeclarationStatement(674) into Block(765) at 1", "Move SynchronizedStatement(692) into Block(765) at 2", "Insert VariableDeclarationStatement(702) into Block(765) at 3", "Insert IfStatement(713) into Block(765) at 4", "Insert VariableDeclarationStatement(724) into Block(765) at 5", "Insert IfStatement(735) into Block(765) at 6", "Insert VariableDeclarationStatement(750) into Block(765) at 7", "Insert ExpressionStatement(764) into Block(765) at 8", "Insert SimpleName: SocketConfig(832) into SimpleType: SocketConfig(833) at 0", "Insert ReturnStatement(838) into Block(839) at 0", "Insert Modifier: final(844) into SingleVariableDeclaration(848) at 0", "Insert SimpleType: SocketConfig(846) into SingleVariableDeclaration(848) at 1", "Insert SimpleName: defaultSocketConfig(847) into SingleVariableDeclaration(848) at 2", "Insert ExpressionStatement(859) into Block(860) at 0", "Insert SimpleName: ConnectionConfig(863) into SimpleType: ConnectionConfig(864) at 0", "Insert ReturnStatement(869) into Block(870) at 0", "Insert Modifier: final(875) into SingleVariableDeclaration(879) at 0", "Insert SimpleType: ConnectionConfig(877) into SingleVariableDeclaration(879) at 1", "Insert SimpleName: defaultConnectionConfig(878) into SingleVariableDeclaration(879) at 2", "Insert ExpressionStatement(890) into Block(891) at 0", "Update SimpleName: SchemeRegistry(188) to SocketConfig", "Insert Modifier: final(897) into SingleVariableDeclaration(901) at 0", "Insert SimpleType: HttpHost(899) into SingleVariableDeclaration(901) at 1", "Insert SimpleName: host(900) into SingleVariableDeclaration(901) at 2", "Update SimpleType: HttpParams(584) to HttpHost", "Update SimpleName: params(585) to host", "Insert Modifier: final(919) into SingleVariableDeclaration(923) at 0", "Insert SimpleType: SocketConfig(921) into SingleVariableDeclaration(923) at 1", "Insert SimpleName: socketConfig(922) into SingleVariableDeclaration(923) at 2", "Insert ExpressionStatement(931) into Block(932) at 0", "Insert SimpleName: ConnectionConfig(935) into SimpleType: ConnectionConfig(936) at 0", "Insert Modifier: final(938) into SingleVariableDeclaration(942) at 0", "Insert SimpleType: HttpHost(940) into SingleVariableDeclaration(942) at 1", "Insert SimpleName: host(941) into SingleVariableDeclaration(942) at 2", "Insert ReturnStatement(949) into Block(950) at 0", "Update SimpleType: HttpParams(655) to HttpHost", "Update SimpleName: params(656) to host", "Insert Modifier: final(960) into SingleVariableDeclaration(964) at 0", "Insert SimpleType: ConnectionConfig(962) into SingleVariableDeclaration(964) at 1", "Insert SimpleName: connectionConfig(963) into SingleVariableDeclaration(964) at 2", "Insert SimpleName: Map(123) into SimpleType: Map(124) at 0", "Insert SimpleName: HttpHost(125) into SimpleType: HttpHost(126) at 0", "Insert SimpleName: SocketConfig(127) into SimpleType: SocketConfig(128) at 0", "Insert SimpleName: Map(135) into SimpleType: Map(136) at 0", "Insert SimpleName: HttpHost(137) into SimpleType: HttpHost(138) at 0", "Insert SimpleName: ConnectionConfig(139) into SimpleType: ConnectionConfig(140) at 0", "Insert SimpleType: Lookup(172) into ParameterizedType: Lookup<ConnectionSocketFactory>(175) at 0", "Insert SimpleType: ConnectionSocketFactory(174) into ParameterizedType: Lookup<ConnectionSocketFactory>(175) at 1", "Update SimpleName: SchemeRegistry(121) to SchemePortResolver", "Insert Assignment: =(214) into ExpressionStatement(215) at 0", "Insert Assignment: =(227) into ExpressionStatement(228) at 0", "Insert Assignment: =(246) into ExpressionStatement(247) at 0", "Insert Assignment: =(252) into ExpressionStatement(253) at 0", "Insert SimpleType: SocketConfig(693) into VariableDeclarationStatement(702) at 0", "Insert VariableDeclarationFragment(701) into VariableDeclarationStatement(702) at 1", "Insert InfixExpression: ==(705) into IfStatement(713) at 0", "Insert Block(712) into IfStatement(713) at 1", "Insert SimpleType: ConnectionConfig(715) into VariableDeclarationStatement(724) at 0", "Insert VariableDeclarationFragment(723) into VariableDeclarationStatement(724) at 1", "Insert InfixExpression: ==(727) into IfStatement(735) at 0", "Insert Block(734) into IfStatement(735) at 1", "Insert SimpleType: InetSocketAddress(737) into VariableDeclarationStatement(750) at 0", "Insert VariableDeclarationFragment(749) into VariableDeclarationStatement(750) at 1", "Insert MethodInvocation(763) into ExpressionStatement(764) at 0", "Insert FieldAccess(837) into ReturnStatement(838) at 0", "Insert SimpleName: SocketConfig(845) into SimpleType: SocketConfig(846) at 0", "Insert Assignment: =(858) into ExpressionStatement(859) at 0", "Insert FieldAccess(868) into ReturnStatement(869) at 0", "Insert SimpleName: ConnectionConfig(876) into SimpleType: ConnectionConfig(877) at 0", "Insert Assignment: =(889) into ExpressionStatement(890) at 0", "Insert SimpleName: HttpHost(898) into SimpleType: HttpHost(899) at 0", "Update SimpleName: HttpParams(583) to HttpHost", "Insert SimpleName: SocketConfig(920) into SimpleType: SocketConfig(921) at 0", "Insert MethodInvocation(930) into ExpressionStatement(931) at 0", "Insert SimpleName: HttpHost(939) into SimpleType: HttpHost(940) at 0", "Insert MethodInvocation(948) into ReturnStatement(949) at 0", "Update SimpleName: HttpParams(654) to HttpHost", "Insert SimpleName: ConnectionConfig(961) into SimpleType: ConnectionConfig(962) at 0", "Insert SimpleName: Lookup(171) into SimpleType: Lookup(172) at 0", "Insert SimpleName: ConnectionSocketFactory(173) into SimpleType: ConnectionSocketFactory(174) at 0", "Move FieldAccess(159) into Assignment: =(214) at 0", "Insert ClassInstanceCreation(213) into Assignment: =(214) at 1", "Insert FieldAccess(218) into Assignment: =(227) at 0", "Insert ClassInstanceCreation(226) into Assignment: =(227) at 1", "Insert FieldAccess(231) into Assignment: =(240) at 0", "Insert FieldAccess(244) into Assignment: =(246) at 0", "Insert QualifiedName: SocketConfig.DEFAULT(245) into Assignment: =(246) at 1", "Insert FieldAccess(250) into Assignment: =(252) at 0", "Insert QualifiedName: ConnectionConfig.DEFAULT(251) into Assignment: =(252) at 1", "Insert SimpleName: SocketConfig(692) into SimpleType: SocketConfig(693) at 0", "Insert SimpleName: socketConfig(694) into VariableDeclarationFragment(701) at 0", "Insert MethodInvocation(700) into VariableDeclarationFragment(701) at 1", "Insert SimpleName: socketConfig(703) into InfixExpression: ==(705) at 0", "Insert NullLiteral(704) into InfixExpression: ==(705) at 1", "Insert ExpressionStatement(711) into Block(712) at 0", "Insert SimpleName: ConnectionConfig(714) into SimpleType: ConnectionConfig(715) at 0", "Insert SimpleName: connConfig(716) into VariableDeclarationFragment(723) at 0", "Insert MethodInvocation(722) into VariableDeclarationFragment(723) at 1", "Insert SimpleName: connConfig(725) into InfixExpression: ==(727) at 0", "Insert NullLiteral(726) into InfixExpression: ==(727) at 1", "Insert ExpressionStatement(733) into Block(734) at 0", "Insert SimpleName: InetSocketAddress(736) into SimpleType: InetSocketAddress(737) at 0", "Insert SimpleName: localAddress(738) into VariableDeclarationFragment(749) at 0", "Insert ConditionalExpression(748) into VariableDeclarationFragment(749) at 1", "Move FieldAccess(695) into MethodInvocation(763) at 0", "Insert SimpleName: connect(754) into MethodInvocation(763) at 1", "Insert SimpleName: conn(755) into MethodInvocation(763) at 2", "Insert SimpleName: host(756) into MethodInvocation(763) at 3", "Insert SimpleName: localAddress(757) into MethodInvocation(763) at 4", "Insert MethodInvocation(760) into MethodInvocation(763) at 5", "Insert SimpleName: socketConfig(761) into MethodInvocation(763) at 6", "Insert SimpleName: context(762) into MethodInvocation(763) at 7", "Update SimpleName: connect(625) to upgrade", "Insert ThisExpression(835) into FieldAccess(837) at 0", "Insert SimpleName: defaultSocketConfig(836) into FieldAccess(837) at 1", "Insert FieldAccess(851) into Assignment: =(858) at 0", "Insert ConditionalExpression(857) into Assignment: =(858) at 1", "Insert ThisExpression(866) into FieldAccess(868) at 0", "Insert SimpleName: defaultConnectionConfig(867) into FieldAccess(868) at 1", "Insert FieldAccess(882) into Assignment: =(889) at 0", "Insert ConditionalExpression(888) into Assignment: =(889) at 1", "Update SimpleName: getSchemeRegistry(194) to get", "Insert SimpleName: host(906) into MethodInvocation(907) at 2", "Insert FieldAccess(926) into MethodInvocation(930) at 0", "Insert SimpleName: put(927) into MethodInvocation(930) at 1", "Insert SimpleName: host(928) into MethodInvocation(930) at 2", "Insert SimpleName: socketConfig(929) into MethodInvocation(930) at 3", "Insert FieldAccess(945) into MethodInvocation(948) at 0", "Insert SimpleName: get(946) into MethodInvocation(948) at 1", "Insert SimpleName: host(947) into MethodInvocation(948) at 2", "Insert FieldAccess(967) into MethodInvocation(971) at 0", "Update SimpleName: conn(697) to put", "Update SimpleName: context(699) to connectionConfig", "Move SimpleType: HttpClientConnectionOperator(161) into ClassInstanceCreation(213) at 0", "Insert SimpleName: socketFactoryRegistry(210) into ClassInstanceCreation(213) at 1", "Insert SimpleName: schemePortResolver(211) into ClassInstanceCreation(213) at 2", "Insert SimpleName: dnsResolver(212) into ClassInstanceCreation(213) at 3", "Insert ThisExpression(216) into FieldAccess(218) at 0", "Insert SimpleName: socketConfigMap(217) into FieldAccess(218) at 1", "Insert ParameterizedType: ConcurrentHashMap<HttpHost,SocketConfig>(225) into ClassInstanceCreation(226) at 0", "Insert ThisExpression(229) into FieldAccess(231) at 0", "Insert SimpleName: connectionConfigMap(230) into FieldAccess(231) at 1", "Insert ParameterizedType: ConcurrentHashMap<HttpHost,ConnectionConfig>(238) into ClassInstanceCreation(239) at 0", "Insert ThisExpression(242) into FieldAccess(244) at 0", "Insert SimpleName: defaultSocketConfig(243) into FieldAccess(244) at 1", "Insert ThisExpression(248) into FieldAccess(250) at 0", "Insert SimpleName: defaultConnectionConfig(249) into FieldAccess(250) at 1", "Insert FieldAccess(697) into MethodInvocation(700) at 0", "Insert SimpleName: get(698) into MethodInvocation(700) at 1", "Insert SimpleName: host(699) into MethodInvocation(700) at 2", "Insert Assignment: =(710) into ExpressionStatement(711) at 0", "Insert FieldAccess(719) into MethodInvocation(722) at 0", "Insert SimpleName: get(720) into MethodInvocation(722) at 1", "Insert SimpleName: host(721) into MethodInvocation(722) at 2", "Insert Assignment: =(732) into ExpressionStatement(733) at 0", "Insert InfixExpression: !=(741) into ConditionalExpression(748) at 0", "Insert ClassInstanceCreation(746) into ConditionalExpression(748) at 1", "Insert NullLiteral(747) into ConditionalExpression(748) at 2", "Insert SimpleName: connConfig(758) into MethodInvocation(760) at 0", "Insert SimpleName: getConnectTimeout(759) into MethodInvocation(760) at 1", "Insert ThisExpression(849) into FieldAccess(851) at 0", "Insert SimpleName: defaultSocketConfig(850) into FieldAccess(851) at 1", "Insert InfixExpression: !=(854) into ConditionalExpression(857) at 0", "Insert SimpleName: defaultSocketConfig(855) into ConditionalExpression(857) at 1", "Insert QualifiedName: SocketConfig.DEFAULT(856) into ConditionalExpression(857) at 2", "Insert ThisExpression(880) into FieldAccess(882) at 0", "Insert SimpleName: defaultConnectionConfig(881) into FieldAccess(882) at 1", "Insert InfixExpression: !=(885) into ConditionalExpression(888) at 0", "Insert SimpleName: defaultConnectionConfig(886) into ConditionalExpression(888) at 1", "Insert QualifiedName: ConnectionConfig.DEFAULT(887) into ConditionalExpression(888) at 2", "Update SimpleName: connectionOperator(192) to socketConfigMap", "Insert ThisExpression(924) into FieldAccess(926) at 0", "Insert SimpleName: socketConfigMap(925) into FieldAccess(926) at 1", "Insert ThisExpression(943) into FieldAccess(945) at 0", "Insert SimpleName: connectionConfigMap(944) into FieldAccess(945) at 1", "Insert ThisExpression(965) into FieldAccess(967) at 0", "Insert SimpleName: connectionConfigMap(966) into FieldAccess(967) at 1", "Insert SimpleType: ConcurrentHashMap(220) into ParameterizedType: ConcurrentHashMap<HttpHost,SocketConfig>(225) at 0", "Insert SimpleType: HttpHost(222) into ParameterizedType: ConcurrentHashMap<HttpHost,SocketConfig>(225) at 1", "Insert SimpleType: SocketConfig(224) into ParameterizedType: ConcurrentHashMap<HttpHost,SocketConfig>(225) at 2", "Insert SimpleType: ConcurrentHashMap(233) into ParameterizedType: ConcurrentHashMap<HttpHost,ConnectionConfig>(238) at 0", "Insert SimpleType: HttpHost(235) into ParameterizedType: ConcurrentHashMap<HttpHost,ConnectionConfig>(238) at 1", "Insert SimpleType: ConnectionConfig(237) into ParameterizedType: ConcurrentHashMap<HttpHost,ConnectionConfig>(238) at 2", "Insert ThisExpression(695) into FieldAccess(697) at 0", "Insert SimpleName: socketConfigMap(696) into FieldAccess(697) at 1", "Insert SimpleName: socketConfig(706) into Assignment: =(710) at 0", "Insert FieldAccess(709) into Assignment: =(710) at 1", "Insert ThisExpression(717) into FieldAccess(719) at 0", "Insert SimpleName: connectionConfigMap(718) into FieldAccess(719) at 1", "Insert SimpleName: connConfig(728) into Assignment: =(732) at 0", "Insert FieldAccess(731) into Assignment: =(732) at 1", "Insert SimpleName: local(739) into InfixExpression: !=(741) at 0", "Insert NullLiteral(740) into InfixExpression: !=(741) at 1", "Insert SimpleType: InetSocketAddress(743) into ClassInstanceCreation(746) at 0", "Insert SimpleName: local(744) into ClassInstanceCreation(746) at 1", "Insert NumberLiteral: 0(745) into ClassInstanceCreation(746) at 2", "Insert SimpleName: defaultSocketConfig(852) into InfixExpression: !=(854) at 0", "Insert NullLiteral(853) into InfixExpression: !=(854) at 1", "Insert SimpleName: defaultConnectionConfig(883) into InfixExpression: !=(885) at 0", "Insert NullLiteral(884) into InfixExpression: !=(885) at 1", "Update SimpleName: IllegalArgumentException(144) to ConcurrentHashMap", "Move SimpleName: IllegalArgumentException(144) into SimpleType: ConcurrentHashMap(220) at 0", "Insert SimpleName: HttpHost(221) into SimpleType: HttpHost(222) at 0", "Insert SimpleName: SocketConfig(223) into SimpleType: SocketConfig(224) at 0", "Insert SimpleName: ConcurrentHashMap(232) into SimpleType: ConcurrentHashMap(233) at 0", "Insert SimpleName: HttpHost(234) into SimpleType: HttpHost(235) at 0", "Insert SimpleName: ConnectionConfig(236) into SimpleType: ConnectionConfig(237) at 0", "Insert ThisExpression(707) into FieldAccess(709) at 0", "Insert SimpleName: defaultSocketConfig(708) into FieldAccess(709) at 1", "Insert ThisExpression(729) into FieldAccess(731) at 0", "Insert SimpleName: defaultConnectionConfig(730) into FieldAccess(731) at 1", "Insert SimpleName: InetSocketAddress(742) into SimpleType: InetSocketAddress(743) at 0", "Delete SimpleName: schemeRegistry(141)", "Delete NullLiteral(142)", "Delete InfixExpression: ==(143)", "Delete SimpleType: IllegalArgumentException(145)", "Delete StringLiteral: \"Scheme registry may nor be null\"(146)", "Delete ClassInstanceCreation(147)", "Delete ThrowStatement(148)", "Delete Block(149)", "Delete IfStatement(150)", "Delete SimpleName: schemeRegistry(162)", "Delete SimpleName: dnsResolver(163)", "Delete SimpleName: local(628)", "Delete SimpleName: params(630)", "Delete SimpleName: upgrade(696)", "Delete SimpleName: params(700)"]}}, {"HttpClientConnectionOperator_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 13", "MOV ImportDeclaration to CompilationUnit at 12", "MOV ImportDeclaration to CompilationUnit at 20", "MOV ImportDeclaration to CompilationUnit at 11"]}, {"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS QualifiedName: org.apache.http.conn.socket.LayeredConnectionSocketFactory to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 21"]}, {"root": "UPDATE from org.apache.http.conn.HttpInetSocketAddress to org.apache.http.client.protocol.HttpClientContext", "operations": ["UPD QualifiedName: org.apache.http.conn.HttpInetSocketAddress from org.apache.http.conn.HttpInetSocketAddress to org.apache.http.client.protocol.HttpClientContext"]}, {"root": "UPDATE from org.apache.http.conn.scheme.Scheme to org.apache.http.config.Lookup", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.Scheme from org.apache.http.conn.scheme.Scheme to org.apache.http.config.Lookup"]}, {"root": "UPDATE from org.apache.http.conn.scheme.SchemeLayeredSocketFactory to org.apache.http.config.SocketConfig", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.SchemeLayeredSocketFactory from org.apache.http.conn.scheme.SchemeLayeredSocketFactory to org.apache.http.config.SocketConfig"]}, {"root": "UPDATE from org.apache.http.conn.scheme.SchemeRegistry to org.apache.http.conn.SchemePortResolver", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.SchemeRegistry from org.apache.http.conn.scheme.SchemeRegistry to org.apache.http.conn.SchemePortResolver"]}, {"root": "UPDATE from org.apache.http.conn.scheme.SchemeSocketFactory to org.apache.http.conn.socket.ConnectionSocketFactory", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.SchemeSocketFactory from org.apache.http.conn.scheme.SchemeSocketFactory to org.apache.http.conn.socket.ConnectionSocketFactory"]}, {"root": "UPDATE from org.apache.http.params.HttpParams to org.apache.http.conn.socket.PlainSocketFactory", "operations": ["UPD QualifiedName: org.apache.http.params.HttpParams from org.apache.http.params.HttpParams to org.apache.http.conn.socket.PlainSocketFactory"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 3", "operations": ["INS ParameterizedType: Lookup<ConnectionSocketFactory> to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 3", "INS SimpleName: Lookup to SimpleType: Lookup at 0", "INS Modifier: final to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: socketFactoryRegistry to VariableDeclarationFragment at 0", "INS SimpleName: ConnectionSocketFactory to SimpleType: ConnectionSocketFactory at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleType: Lookup to ParameterizedType: Lookup<ConnectionSocketFactory> at 0", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Lookup<ConnectionSocketFactory> at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 6", "operations": ["INS ParameterizedType: Lookup<ConnectionSocketFactory> to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 3", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: Lookup to ParameterizedType: Lookup<ConnectionSocketFactory> at 0", "INS SimpleName: ConnectionSocketFactory to SimpleType: ConnectionSocketFactory at 0", "INS SimpleName: schemePortResolver to ConditionalExpression at 1", "INS SimpleName: schemePortResolver to InfixExpression: != at 0", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS ConditionalExpression to Assignment: = at 1", "INS QualifiedName: DefaultSchemePortResolver.INSTANCE to ConditionalExpression at 2", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Lookup<ConnectionSocketFactory> at 1", "INS SimpleName: socketFactoryRegistry to SingleVariableDeclaration at 2", "INS InfixExpression: != to ConditionalExpression at 0", "INS SingleVariableDeclaration to MethodDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: Lookup to SimpleType: Lookup at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 8"]}, {"root": "UPDATE from SchemeRegistry to SchemePortResolver", "operations": ["UPD SimpleType: SchemeRegistry from SchemeRegistry to SchemePortResolver", "UPD SimpleName: SchemeRegistry from SchemeRegistry to SchemePortResolver", "UPD SimpleName: SchemeRegistry from SchemeRegistry to SchemePortResolver", "UPD SimpleType: SchemeRegistry from SchemeRegistry to SchemePortResolver"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 2", "MOV SimpleName: HttpClientConnectionOperator to MethodDeclaration at 0"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 0", "operations": ["INS SingleMemberAnnotation to MethodDeclaration at 0", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS StringLiteral: \"unchecked\" to SingleMemberAnnotation at 1"]}, {"root": "INS ParameterizedType: Lookup<ConnectionSocketFactory> to MethodDeclaration at 2", "operations": ["INS SimpleType: Lookup to ParameterizedType: Lookup<ConnectionSocketFactory> at 0", "INS SimpleName: Lookup to SimpleType: Lookup at 0", "INS ParameterizedType: Lookup<ConnectionSocketFactory> to MethodDeclaration at 2", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Lookup<ConnectionSocketFactory> at 1"]}, {"root": "UPDATE from getSchemeRegistry to getSocketFactoryRegistry", "operations": ["UPD SimpleName: getSchemeRegistry from getSchemeRegistry to getSocketFactoryRegistry", "UPD SimpleName: getSchemeRegistry from getSchemeRegistry to getSocketFactoryRegistry", "UPD SimpleName: getSchemeRegistry from getSchemeRegistry to getSocketFactoryRegistry"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: localAddress to SingleVariableDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS PrimitiveType: int to SingleVariableDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 8", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS NullLiteral to InfixExpression: == at 1", "INS Block to IfStatement at 1", "INS SimpleName: clientContext to VariableDeclarationFragment at 0", "INS SimpleName: sf to InfixExpression: == at 0", "INS IfStatement to Block at 3", "INS InfixExpression: == to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: HttpClientContext to VariableDeclarationStatement at 0", "INS SimpleName: sf to Assignment: = at 0", "INS SimpleName: adapt to MethodInvocation at 1", "INS Block to MethodDeclaration at 8", "INS SimpleName: context to MethodInvocation at 2", "INS QualifiedName: PlainSocketFactory.INSTANCE to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: HttpClientContext to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0"]}, {"root": "UPDATE from schemeRegistry to schemePortResolver", "operations": ["UPD SimpleName: schemeRegistry from schemeRegistry to schemePortResolver", "UPD SimpleName: schemeRegistry from schemeRegistry to schemePortResolver", "UPD SimpleName: schemeRegistry from schemeRegistry to schemePortResolver"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4", "MOV IfStatement to Block at 1", "MOV SuperConstructorInvocation to Block at 0", "MOV ExpressionStatement to Block at 2"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleName: local to SingleVariableDeclaration at 2", "MOV Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: InetSocketAddress to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from local to connectTimeout", "operations": ["UPD SimpleName: local from local to connectTimeout"]}, {"root": "UPDATE from HttpParams to SocketConfig", "operations": ["UPD SimpleType: HttpParams from HttpParams to SocketConfig", "UPD SimpleName: HttpParams from HttpParams to SocketConfig"]}, {"root": "UPDATE from params to socketConfig", "operations": ["UPD SimpleName: params from params to socketConfig"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS IfStatement to Block at 2", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleType: IOException to ClassInstanceCreation at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS ThrowStatement to Block at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: sf to InfixExpression: == at 0", "INS NullLiteral to InfixExpression: == at 1", "INS Block to IfStatement at 1", "INS StringLiteral: \"Unsupported scheme: \" to InfixExpression: + at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 5", "MOV VariableDeclarationStatement to Block at 6", "MOV ExpressionStatement to Block at 8", "MOV VariableDeclarationStatement to Block at 1", "MOV TryStatement to Block at 7", "MOV IfStatement to Block at 4"]}, {"root": "UPDATE from Scheme to ConnectionSocketFactory", "operations": ["UPD SimpleName: Scheme from Scheme to ConnectionSocketFactory", "UPD SimpleName: SchemeRegistry from SchemeRegistry to ConnectionSocketFactory", "UPD SimpleName: SchemeRegistry from SchemeRegistry to ConnectionSocketFactory", "UPD SimpleName: SchemeRegistry from SchemeRegistry to ConnectionSocketFactory", "UPD SimpleType: Scheme from Scheme to ConnectionSocketFactory", "UPD SimpleName: SchemeRegistry from SchemeRegistry to ConnectionSocketFactory", "UPD SimpleName: Scheme from Scheme to ConnectionSocketFactory", "UPD SimpleName: SchemeRegistry from SchemeRegistry to ConnectionSocketFactory", "UPD SimpleType: Scheme from Scheme to ConnectionSocketFactory"]}, {"root": "MOVE from SimpleType: ConnectionSocketFactory", "operations": ["MOV SimpleName: SchemeRegistry to SimpleType: ConnectionSocketFactory at 0"]}, {"root": "INS ParameterizedType: Lookup<ConnectionSocketFactory> to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: Lookup to ParameterizedType: Lookup<ConnectionSocketFactory> at 0", "INS ParameterizedType: Lookup<ConnectionSocketFactory> to VariableDeclarationStatement at 0", "INS SimpleName: Lookup to SimpleType: Lookup at 0", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Lookup<ConnectionSocketFactory> at 1"]}, {"root": "INS ParameterizedType: Lookup<ConnectionSocketFactory> to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: Lookup to ParameterizedType: Lookup<ConnectionSocketFactory> at 0", "INS SimpleName: Lookup to SimpleType: Lookup at 0", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Lookup<ConnectionSocketFactory> at 1", "INS ParameterizedType: Lookup<ConnectionSocketFactory> to VariableDeclarationStatement at 0"]}, {"root": "INS ParameterizedType: Lookup<ConnectionSocketFactory> to VariableDeclarationStatement at 0", "operations": ["INS ParameterizedType: Lookup<ConnectionSocketFactory> to VariableDeclarationStatement at 0", "INS SimpleType: Lookup to ParameterizedType: Lookup<ConnectionSocketFactory> at 0", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Lookup<ConnectionSocketFactory> at 1", "INS SimpleName: Lookup to SimpleType: Lookup at 0"]}, {"root": "UPDATE from SchemeLayeredSocketFactory to LayeredConnectionSocketFactory", "operations": ["UPD SimpleName: SchemeLayeredSocketFactory from SchemeLayeredSocketFactory to LayeredConnectionSocketFactory", "UPD SimpleType: SchemeLayeredSocketFactory from SchemeLayeredSocketFactory to LayeredConnectionSocketFactory", "UPD SimpleName: SchemeLayeredSocketFactory from SchemeLayeredSocketFactory to LayeredConnectionSocketFactory", "UPD SimpleName: SchemeLayeredSocketFactory from SchemeLayeredSocketFactory to LayeredConnectionSocketFactory", "UPD SimpleType: SchemeLayeredSocketFactory from SchemeLayeredSocketFactory to LayeredConnectionSocketFactory", "UPD SimpleType: SchemeLayeredSocketFactory from SchemeLayeredSocketFactory to LayeredConnectionSocketFactory"]}, {"root": "UPDATE from schemeRegistry to socketFactoryRegistry", "operations": ["UPD SimpleName: schemeRegistry from schemeRegistry to socketFactoryRegistry", "UPD SimpleName: schemeRegistry from schemeRegistry to socketFactoryRegistry", "UPD SimpleName: schemeRegistry from schemeRegistry to socketFactoryRegistry", "UPD SimpleName: schemeRegistry from schemeRegistry to socketFactoryRegistry"]}, {"root": "UPDATE from schm to sf", "operations": ["UPD SimpleName: schm from schm to sf", "UPD SimpleName: schm from schm to sf"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: sock to MethodInvocation at 0", "INS SimpleName: socketConfig to MethodInvocation at 0", "INS SimpleName: setReuseAddress to MethodInvocation at 1", "INS SimpleName: isSoReuseAddress to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS TryStatement to Block at 9", "operations": ["INS VariableDeclarationStatement to Block at 4", "INS SimpleName: sock to MethodInvocation at 0", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS SimpleName: socketConfig to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: linger to VariableDeclarationFragment at 0", "INS SimpleName: getSoTimeout to MethodInvocation at 1", "INS SimpleName: isSoKeepAlive to MethodInvocation at 1", "INS SimpleName: getSoLinger to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 3", "INS ExpressionStatement to Block at 2", "INS SimpleName: socketConfig to MethodInvocation at 0", "INS SimpleName: socketConfig to MethodInvocation at 0", "INS Block to TryStatement at 0", "INS SimpleName: sock to Assignment: = at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: > to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: setSoTimeout to MethodInvocation at 1", "INS InfixExpression: >= to IfStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: linger to InfixExpression: >= at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setKeepAlive to MethodInvocation at 1", "INS SimpleName: linger to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: linger to InfixExpression: > at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: sock to MethodInvocation at 0", "INS SimpleName: setTcpNoDelay to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS IfStatement to Block at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: host to MethodInvocation at 4", "INS SimpleName: socketConfig to MethodInvocation at 0", "INS SimpleName: sock to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: setSoLinger to MethodInvocation at 1", "INS TryStatement to Block at 9", "INS SimpleName: connectTimeout to MethodInvocation at 2", "INS SimpleName: isTcpNoDelay to MethodInvocation at 1", "INS SimpleName: sock to MethodInvocation at 0"]}, {"root": "UPDATE from HttpParams to HttpClientContext", "operations": ["UPD SimpleName: HttpParams from HttpParams to HttpClientContext"]}, {"root": "MOVE from SimpleType: HttpClientContext", "operations": ["MOV SimpleName: HttpParams to SimpleType: HttpClientContext at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV ThisExpression to FieldAccess at 0", "MOV SimpleName: schemeRegistry to FieldAccess at 1"]}, {"root": "MOVE from SimpleType: ConnectionSocketFactory", "operations": ["MOV SimpleName: SchemeRegistry to SimpleType: ConnectionSocketFactory at 0"]}, {"root": "INS ParameterizedType: Lookup<ConnectionSocketFactory> to CastExpression at 0", "operations": ["INS SimpleType: Lookup to ParameterizedType: Lookup<ConnectionSocketFactory> at 0", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Lookup<ConnectionSocketFactory> at 1", "INS ParameterizedType: Lookup<ConnectionSocketFactory> to CastExpression at 0", "INS SimpleName: Lookup to SimpleType: Lookup at 0"]}, {"root": "MOVE from SimpleType: ConnectionSocketFactory", "operations": ["MOV SimpleName: SchemeRegistry to SimpleType: ConnectionSocketFactory at 0"]}, {"root": "UPDATE from getScheme to lookup", "operations": ["UPD SimpleName: getScheme from getScheme to lookup", "UPD SimpleName: getScheme from getScheme to lookup"]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS FieldAccess to MethodInvocation at 0", "INS SimpleName: schemePortResolver to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "UPDATE from resolvePort to resolve", "operations": ["UPD SimpleName: resolvePort from resolvePort to resolve", "UPD SimpleName: resolvePort from resolvePort to resolve"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: host to MethodInvocation at 3"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Socket to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: InetSocketAddress to VariableDeclarationStatement at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1", "MOV CatchClause to TryStatement at 2"]}, {"root": "MOVE from SimpleType: ConnectionSocketFactory", "operations": ["MOV SimpleName: SchemeRegistry to SimpleType: ConnectionSocketFactory at 0"]}, {"root": "UPDATE from context to clientContext", "operations": ["UPD SimpleName: context from context to clientContext"]}, {"root": "INS SimpleName: sf to CastExpression at 1", "operations": ["INS SimpleName: sf to CastExpression at 1"]}, {"root": "UPDATE from \"Scheme registry may nor be null\" to \"Socket factory registry may nor be null\"", "operations": ["UPD StringLiteral: \"Scheme registry may nor be null\" from \"Scheme registry may nor be null\" to \"Socket factory registry may nor be null\""]}, {"root": "UPDATE from ClientContext.SCHEME_REGISTRY to ClientContext.SOCKET_FACTORY_REGISTRY", "operations": ["UPD QualifiedName: ClientContext.SCHEME_REGISTRY from ClientContext.SCHEME_REGISTRY to ClientContext.SOCKET_FACTORY_REGISTRY"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 6", "MOV ReturnStatement to Block at 7"]}, {"root": "INS SimpleName: sf to InstanceofExpression at 0", "operations": ["INS SimpleName: sf to InstanceofExpression at 0"]}, {"root": "MOVE from SimpleType: ConnectionSocketFactory", "operations": ["MOV SimpleName: SchemeRegistry to SimpleType: ConnectionSocketFactory at 0"]}, {"root": "UPDATE from SchemeSocketFactory to IOException", "operations": ["UPD SimpleName: SchemeSocketFactory from SchemeSocketFactory to IOException"]}, {"root": "MOVE from SimpleType: IOException", "operations": ["MOV SimpleName: SchemeSocketFactory to SimpleType: IOException at 0"]}, {"root": "UPDATE from params to context", "operations": ["UPD SimpleName: params from params to context", "UPD SimpleName: params from params to context", "UPD SimpleName: params from params to context"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: InetSocketAddress to ClassInstanceCreation at 0"]}, {"root": "UPDATE from \") must have layered socket factory.\" to \") must have layered socket factory\"", "operations": ["UPD StringLiteral: \") must have layered socket factory.\" from \") must have layered socket factory.\" to \") must have layered socket factory\""]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS FieldAccess to MethodInvocation at 0", "INS SimpleName: schemePortResolver to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: host to MethodInvocation at 3"]}, {"root": "INS SimpleName: sock to MethodInvocation at 2", "operations": ["INS SimpleName: sock to MethodInvocation at 2"]}, {"root": "UPDATE from schm to host", "operations": ["UPD SimpleName: schm from schm to host", "UPD SimpleName: schm from schm to host"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: schm to MethodInvocation at 0", "MOV SimpleName: getSchemeSocketFactory to MethodInvocation at 1"]}, {"root": "UPDATE from getSchemeSocketFactory to getSchemeName", "operations": ["UPD SimpleName: getSchemeSocketFactory from getSchemeSocketFactory to getSchemeName", "UPD SimpleName: getName from getName to getSchemeName"]}, {"root": "UPDATE from connsock to sock", "operations": ["UPD SimpleName: connsock from connsock to sock"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: localAddress to MethodInvocation at 6", "MOV SimpleName: connectSocket to MethodInvocation at 1", "MOV SimpleName: remoteAddress to MethodInvocation at 5", "MOV SimpleName: sock to MethodInvocation at 3", "MOV SimpleName: params to MethodInvocation at 7", "MOV SimpleName: sf to MethodInvocation at 0"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL MethodDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: getSchemeRegistry", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL SimpleType: SchemeRegistry", "DEL SimpleName: SchemeRegistry", "DEL Block", "DEL Modifier: public", "DEL FieldAccess"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: dnsResolver", "DEL SimpleType: DnsResolver", "DEL Modifier: public", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: DnsResolver", "DEL ThisExpression", "DEL SimpleName: getDnsResolver", "DEL FieldAccess"]}, {"root": "DEL SimpleType: SchemeRegistry", "operations": ["DEL SimpleType: SchemeRegistry"]}, {"root": "DEL SimpleType: SchemeRegistry", "operations": ["DEL SimpleType: SchemeRegistry"]}, {"root": "DEL SimpleType: SchemeRegistry", "operations": ["DEL SimpleType: SchemeRegistry"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: InetAddress", "DEL SingleVariableDeclaration", "DEL SimpleName: InetAddress"]}, {"root": "DEL SimpleType: SchemeRegistry", "operations": ["DEL SimpleType: SchemeRegistry"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: SchemeSocketFactory", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: sf"]}, {"root": "DEL SimpleName: schm", "operations": ["DEL SimpleName: schm"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getPort"]}, {"root": "DEL SimpleType: Socket", "operations": ["DEL SimpleName: Socket", "DEL SimpleType: Socket"]}, {"root": "DEL SimpleType: HttpInetSocketAddress", "operations": ["DEL SimpleType: HttpInetSocketAddress", "DEL SimpleName: HttpInetSocketAddress"]}, {"root": "DEL SimpleName: host", "operations": ["DEL SimpleName: host"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: localAddress", "DEL NullLiteral", "DEL VariableDeclarationFragment"]}, {"root": "DEL IfStatement", "operations": ["DEL InfixExpression: !=", "DEL ExpressionStatement", "DEL SimpleName: localAddress", "DEL Block", "DEL SimpleName: local", "DEL Assignment: =", "DEL IfStatement", "DEL NumberLiteral: 0", "DEL NullLiteral", "DEL ClassInstanceCreation", "DEL SimpleName: local"]}, {"root": "DEL TryStatement", "operations": ["DEL VariableDeclarationStatement", "DEL Block", "DEL TryStatement", "DEL SimpleName: connsock", "DEL MethodInvocation", "DEL VariableDeclarationFragment"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleType: HttpParams", "DEL SimpleName: params", "DEL Modifier: final"]}, {"root": "DEL SimpleType: SchemeRegistry", "operations": ["DEL SimpleType: SchemeRegistry"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getSchemeSocketFactory", "DEL SimpleName: schm", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: schm", "DEL MethodInvocation", "DEL SimpleName: getSchemeSocketFactory"]}, {"root": "DEL SimpleName: schm", "operations": ["DEL SimpleName: schm"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getPort", "DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"HttpClientConnectionOperator_diff": {"operations": ["Move ImportDeclaration(31) into CompilationUnit(613) at 11", "Move ImportDeclaration(33) into CompilationUnit(613) at 20", "Move ImportDeclaration(35) into CompilationUnit(613) at 12", "Move ImportDeclaration(37) into CompilationUnit(613) at 13", "Insert ImportDeclaration(43) into CompilationUnit(613) at 21", "Update QualifiedName: org.apache.http.conn.HttpInetSocketAddress(30) to org.apache.http.client.protocol.HttpClientContext", "Update QualifiedName: org.apache.http.conn.scheme.Scheme(34) to org.apache.http.config.Lookup", "Update QualifiedName: org.apache.http.conn.scheme.SchemeLayeredSocketFactory(36) to org.apache.http.config.SocketConfig", "Update QualifiedName: org.apache.http.conn.scheme.SchemeRegistry(38) to org.apache.http.conn.SchemePortResolver", "Update QualifiedName: org.apache.http.conn.scheme.SchemeSocketFactory(40) to org.apache.http.conn.socket.ConnectionSocketFactory", "Insert QualifiedName: org.apache.http.conn.socket.LayeredConnectionSocketFactory(42) into ImportDeclaration(43) at 0", "Update QualifiedName: org.apache.http.params.HttpParams(42) to org.apache.http.conn.socket.PlainSocketFactory", "Insert FieldDeclaration(73) into TypeDeclaration: class(612) at 3", "Insert MethodDeclaration(147) into TypeDeclaration: class(612) at 6", "Move SingleVariableDeclaration(195) into MethodDeclaration(473) at 8", "Insert Modifier: private(64) into FieldDeclaration(73) at 0", "Insert Modifier: final(65) into FieldDeclaration(73) at 1", "Insert ParameterizedType: Lookup<ConnectionSocketFactory>(70) into FieldDeclaration(73) at 2", "Insert VariableDeclarationFragment(72) into FieldDeclaration(73) at 3", "Update SimpleType: SchemeRegistry(65) to SchemePortResolver", "Move SimpleName: HttpClientConnectionOperator(76) into MethodDeclaration(147) at 0", "Insert SingleVariableDeclaration(96) into MethodDeclaration(147) at 1", "Move SingleVariableDeclaration(81) into MethodDeclaration(147) at 2", "Move SingleVariableDeclaration(86) into MethodDeclaration(147) at 3", "Insert Block(146) into MethodDeclaration(147) at 4", "Insert SingleMemberAnnotation(150) into MethodDeclaration(195) at 0", "Insert ParameterizedType: Lookup<ConnectionSocketFactory>(156) into MethodDeclaration(195) at 2", "Update SimpleName: getSchemeRegistry(140) to getSocketFactoryRegistry", "Insert SingleVariableDeclaration(213) into MethodDeclaration(473) at 5", "Insert SingleVariableDeclaration(217) into MethodDeclaration(473) at 6", "Insert Block(610) into MethodDeclaration(611) at 7", "Insert SimpleType: Lookup(67) into ParameterizedType: Lookup<ConnectionSocketFactory>(70) at 0", "Insert SimpleType: ConnectionSocketFactory(69) into ParameterizedType: Lookup<ConnectionSocketFactory>(70) at 1", "Insert SimpleName: socketFactoryRegistry(71) into VariableDeclarationFragment(72) at 0", "Update SimpleName: SchemeRegistry(64) to SchemePortResolver", "Update SimpleName: schemeRegistry(66) to schemePortResolver", "Insert Modifier: final(89) into SingleVariableDeclaration(96) at 0", "Insert ParameterizedType: Lookup<ConnectionSocketFactory>(94) into SingleVariableDeclaration(96) at 1", "Insert SimpleName: socketFactoryRegistry(95) into SingleVariableDeclaration(96) at 2", "Update SimpleType: SchemeRegistry(79) to SchemePortResolver", "Update SimpleName: schemeRegistry(80) to schemePortResolver", "Move SuperConstructorInvocation(87) into Block(146) at 0", "Move IfStatement(97) into Block(146) at 1", "Move ExpressionStatement(103) into Block(146) at 2", "Insert ExpressionStatement(134) into Block(146) at 3", "Move ExpressionStatement(114) into Block(146) at 4", "Insert SimpleName: SuppressWarnings(148) into SingleMemberAnnotation(150) at 0", "Insert StringLiteral: \"unchecked\"(149) into SingleMemberAnnotation(150) at 1", "Insert SimpleType: Lookup(153) into ParameterizedType: Lookup<ConnectionSocketFactory>(156) at 0", "Insert SimpleType: ConnectionSocketFactory(155) into ParameterizedType: Lookup<ConnectionSocketFactory>(156) at 1", "Move Modifier: final(186) into SingleVariableDeclaration(213) at 0", "Move SimpleType: InetSocketAddress(297) into SingleVariableDeclaration(213) at 1", "Insert SimpleName: localAddress(212) into SingleVariableDeclaration(213) at 2", "Insert Modifier: final(214) into SingleVariableDeclaration(217) at 0", "Insert PrimitiveType: int(215) into SingleVariableDeclaration(217) at 1", "Update SimpleName: local(189) to connectTimeout", "Move SimpleName: local(189) into SingleVariableDeclaration(217) at 2", "Update SimpleType: HttpParams(198) to SocketConfig", "Update SimpleName: params(199) to socketConfig", "Insert IfStatement(265) into Block(472) at 2", "Insert VariableDeclarationStatement(502) into Block(610) at 0", "Move VariableDeclarationStatement(442) into Block(610) at 1", "Move VariableDeclarationStatement(453) into Block(610) at 2", "Insert IfStatement(533) into Block(610) at 3", "Move IfStatement(473) into Block(610) at 4", "Move VariableDeclarationStatement(484) into Block(610) at 5", "Move VariableDeclarationStatement(489) into Block(610) at 6", "Move TryStatement(527) into Block(610) at 7", "Move ExpressionStatement(532) into Block(610) at 8", "Insert SimpleName: Lookup(66) into SimpleType: Lookup(67) at 0", "Insert SimpleName: ConnectionSocketFactory(68) into SimpleType: ConnectionSocketFactory(69) at 0", "Insert SimpleType: Lookup(91) into ParameterizedType: Lookup<ConnectionSocketFactory>(94) at 0", "Insert SimpleType: ConnectionSocketFactory(93) into ParameterizedType: Lookup<ConnectionSocketFactory>(94) at 1", "Update SimpleName: SchemeRegistry(78) to SchemePortResolver", "Insert Assignment: =(133) into ExpressionStatement(134) at 0", "Insert SimpleName: Lookup(152) into SimpleType: Lookup(153) at 0", "Update SimpleName: SchemeRegistry(138) to ConnectionSocketFactory", "Move SimpleName: SchemeRegistry(138) into SimpleType: ConnectionSocketFactory(155) at 0", "Insert ParameterizedType: Lookup<ConnectionSocketFactory>(167) into VariableDeclarationStatement(180) at 0", "Update SimpleName: HttpParams(197) to SocketConfig", "Insert ParameterizedType: Lookup<ConnectionSocketFactory>(234) into VariableDeclarationStatement(240) at 0", "Update SimpleType: Scheme(212) to ConnectionSocketFactory", "Insert InfixExpression: ==(254) into IfStatement(265) at 0", "Insert Block(264) into IfStatement(265) at 1", "Insert SimpleType: HttpClientContext(495) into VariableDeclarationStatement(502) at 0", "Insert VariableDeclarationFragment(501) into VariableDeclarationStatement(502) at 1", "Insert ParameterizedType: Lookup<ConnectionSocketFactory>(507) into VariableDeclarationStatement(513) at 0", "Update SimpleType: Scheme(444) to ConnectionSocketFactory", "Insert InfixExpression: ==(527) into IfStatement(533) at 0", "Insert Block(532) into IfStatement(533) at 1", "Update SimpleType: SchemeLayeredSocketFactory(475) to LayeredConnectionSocketFactory", "Insert SimpleName: Lookup(90) into SimpleType: Lookup(91) at 0", "Insert SimpleName: ConnectionSocketFactory(92) into SimpleType: ConnectionSocketFactory(93) at 0", "Update SimpleName: schemeRegistry(88) to socketFactoryRegistry", "Update SimpleName: schemeRegistry(101) to socketFactoryRegistry", "Insert FieldAccess(126) into Assignment: =(133) at 0", "Insert ConditionalExpression(132) into Assignment: =(133) at 1", "Insert SimpleType: Lookup(164) into ParameterizedType: Lookup<ConnectionSocketFactory>(167) at 0", "Insert SimpleType: ConnectionSocketFactory(166) into ParameterizedType: Lookup<ConnectionSocketFactory>(167) at 1", "Insert SimpleType: Lookup(231) into ParameterizedType: Lookup<ConnectionSocketFactory>(234) at 0", "Insert SimpleType: ConnectionSocketFactory(233) into ParameterizedType: Lookup<ConnectionSocketFactory>(234) at 1", "Update SimpleName: Scheme(211) to ConnectionSocketFactory", "Update SimpleName: schm(213) to sf", "Insert SimpleName: sf(252) into InfixExpression: ==(254) at 0", "Insert NullLiteral(253) into InfixExpression: ==(254) at 1", "Insert ThrowStatement(263) into Block(264) at 0", "Insert ExpressionStatement(333) into Block(470) at 3", "Insert TryStatement(451) into Block(470) at 7", "Update SimpleName: HttpParams(429) to HttpClientContext", "Move SimpleName: HttpParams(429) into SimpleType: HttpClientContext(495) at 0", "Insert SimpleName: clientContext(496) into VariableDeclarationFragment(501) at 0", "Insert MethodInvocation(500) into VariableDeclarationFragment(501) at 1", "Insert SimpleType: Lookup(504) into ParameterizedType: Lookup<ConnectionSocketFactory>(507) at 0", "Insert SimpleType: ConnectionSocketFactory(506) into ParameterizedType: Lookup<ConnectionSocketFactory>(507) at 1", "Update SimpleName: Scheme(443) to ConnectionSocketFactory", "Update SimpleName: schm(445) to sf", "Insert SimpleName: sf(525) into InfixExpression: ==(527) at 0", "Insert NullLiteral(526) into InfixExpression: ==(527) at 1", "Insert ExpressionStatement(531) into Block(532) at 0", "Update SimpleName: SchemeLayeredSocketFactory(474) to LayeredConnectionSocketFactory", "Move MethodInvocation(505) into VariableDeclarationFragment(567) at 1", "Update SimpleName: schemeRegistry(99) to socketFactoryRegistry", "Move ThisExpression(121) into FieldAccess(126) at 0", "Update SimpleName: schemeRegistry(122) to schemePortResolver", "Move SimpleName: schemeRegistry(122) into FieldAccess(126) at 1", "Insert InfixExpression: !=(129) into ConditionalExpression(132) at 0", "Insert SimpleName: schemePortResolver(130) into ConditionalExpression(132) at 1", "Insert QualifiedName: DefaultSchemePortResolver.INSTANCE(131) into ConditionalExpression(132) at 2", "Insert SimpleName: Lookup(163) into SimpleType: Lookup(164) at 0", "Update SimpleName: SchemeRegistry(146) to ConnectionSocketFactory", "Move SimpleName: SchemeRegistry(146) into SimpleType: ConnectionSocketFactory(166) at 0", "Insert ParameterizedType: Lookup<ConnectionSocketFactory>(173) into CastExpression(178) at 0", "Insert SimpleName: Lookup(230) into SimpleType: Lookup(231) at 0", "Update SimpleName: SchemeRegistry(203) to ConnectionSocketFactory", "Move SimpleName: SchemeRegistry(203) into SimpleType: ConnectionSocketFactory(233) at 0", "Update SimpleName: getSchemeRegistry(206) to getSocketFactoryRegistry", "Update SimpleName: getScheme(215) to lookup", "Insert ClassInstanceCreation(262) into ThrowStatement(263) at 0", "Insert FieldAccess(285) into MethodInvocation(288) at 0", "Update SimpleName: resolvePort(248) to resolve", "Move SimpleName: host(249) into MethodInvocation(288) at 3", "Move SimpleType: Socket(343) into VariableDeclarationStatement(326) at 0", "Insert MethodInvocation(332) into ExpressionStatement(333) at 0", "Move SimpleType: InetSocketAddress(318) into VariableDeclarationStatement(348) at 0", "Insert Block(424) into TryStatement(451) at 0", "Move CatchClause(375) into TryStatement(451) at 1", "Move CatchClause(386) into TryStatement(451) at 2", "Insert SimpleName: HttpClientContext(497) into MethodInvocation(500) at 0", "Insert SimpleName: adapt(498) into MethodInvocation(500) at 1", "Insert SimpleName: context(499) into MethodInvocation(500) at 2", "Insert SimpleName: Lookup(503) into SimpleType: Lookup(504) at 0", "Update SimpleName: SchemeRegistry(435) to ConnectionSocketFactory", "Move SimpleName: SchemeRegistry(435) into SimpleType: ConnectionSocketFactory(506) at 0", "Update SimpleName: getSchemeRegistry(438) to getSocketFactoryRegistry", "Update SimpleName: context(439) to clientContext", "Update SimpleName: getScheme(447) to lookup", "Insert Assignment: =(530) into ExpressionStatement(531) at 0", "Update SimpleType: SchemeLayeredSocketFactory(478) to LayeredConnectionSocketFactory", "Insert SimpleName: sf(557) into CastExpression(558) at 1", "Update StringLiteral: \"Scheme registry may nor be null\"(93) to \"Socket factory registry may nor be null\"", "Insert SimpleName: schemePortResolver(127) into InfixExpression: !=(129) at 0", "Insert NullLiteral(128) into InfixExpression: !=(129) at 1", "Insert SimpleType: Lookup(170) into ParameterizedType: Lookup<ConnectionSocketFactory>(173) at 0", "Insert SimpleType: ConnectionSocketFactory(172) into ParameterizedType: Lookup<ConnectionSocketFactory>(173) at 1", "Update QualifiedName: ClientContext.SCHEME_REGISTRY(153) to ClientContext.SOCKET_FACTORY_REGISTRY", "Insert SimpleType: IOException(256) into ClassInstanceCreation(262) at 0", "Insert InfixExpression: +(261) into ClassInstanceCreation(262) at 1", "Insert ThisExpression(283) into FieldAccess(285) at 0", "Insert SimpleName: schemePortResolver(284) into FieldAccess(285) at 1", "Insert SimpleName: sock(327) into MethodInvocation(332) at 0", "Insert SimpleName: setReuseAddress(328) into MethodInvocation(332) at 1", "Insert MethodInvocation(331) into MethodInvocation(332) at 2", "Insert ExpressionStatement(371) into Block(424) at 0", "Insert ExpressionStatement(383) into Block(424) at 1", "Insert ExpressionStatement(390) into Block(424) at 2", "Insert ExpressionStatement(397) into Block(424) at 3", "Insert VariableDeclarationStatement(404) into Block(424) at 4", "Insert IfStatement(417) into Block(424) at 5", "Move ExpressionStatement(358) into Block(424) at 6", "Move ReturnStatement(359) into Block(424) at 7", "Insert SimpleName: sf(528) into Assignment: =(530) at 0", "Insert QualifiedName: PlainSocketFactory.INSTANCE(529) into Assignment: =(530) at 1", "Insert SimpleName: sf(534) into InstanceofExpression(537) at 0", "Update SimpleType: SchemeLayeredSocketFactory(458) to LayeredConnectionSocketFactory", "Update SimpleName: SchemeLayeredSocketFactory(477) to LayeredConnectionSocketFactory", "Insert SimpleName: Lookup(169) into SimpleType: Lookup(170) at 0", "Update SimpleName: SchemeRegistry(149) to ConnectionSocketFactory", "Move SimpleName: SchemeRegistry(149) into SimpleType: ConnectionSocketFactory(172) at 0", "Update SimpleName: schemeRegistry(163) to socketFactoryRegistry", "Update SimpleName: SchemeSocketFactory(222) to IOException", "Move SimpleName: SchemeSocketFactory(222) into SimpleType: IOException(256) at 0", "Insert StringLiteral: \"Unsupported scheme: \"(257) into InfixExpression: +(261) at 0", "Insert MethodInvocation(260) into InfixExpression: +(261) at 1", "Update SimpleName: params(287) to context", "Insert SimpleName: socketConfig(329) into MethodInvocation(331) at 0", "Insert SimpleName: isSoReuseAddress(330) into MethodInvocation(331) at 1", "Move SimpleType: InetSocketAddress(308) into ClassInstanceCreation(346) at 0", "Insert MethodInvocation(370) into ExpressionStatement(371) at 0", "Insert Assignment: =(382) into ExpressionStatement(383) at 0", "Insert MethodInvocation(389) into ExpressionStatement(390) at 0", "Insert MethodInvocation(396) into ExpressionStatement(397) at 0", "Insert PrimitiveType: int(398) into VariableDeclarationStatement(404) at 0", "Insert VariableDeclarationFragment(403) into VariableDeclarationStatement(404) at 1", "Insert InfixExpression: >=(407) into IfStatement(417) at 0", "Insert Block(416) into IfStatement(417) at 1", "Update SimpleName: SchemeLayeredSocketFactory(457) to LayeredConnectionSocketFactory", "Update StringLiteral: \") must have layered socket factory.\"(468) to \") must have layered socket factory\"", "Insert FieldAccess(573) into MethodInvocation(576) at 0", "Update SimpleName: resolvePort(493) to resolve", "Move SimpleName: host(494) into MethodInvocation(576) at 3", "Insert SimpleName: sock(582) into MethodInvocation(588) at 2", "Update SimpleName: params(510) to context", "Update SimpleName: schm(225) to host", "Move SimpleName: schm(225) into MethodInvocation(260) at 0", "Update SimpleName: getSchemeSocketFactory(226) to getSchemeName", "Move SimpleName: getSchemeSocketFactory(226) into MethodInvocation(260) at 1", "Insert SimpleName: sock(365) into MethodInvocation(370) at 0", "Insert SimpleName: setSoTimeout(366) into MethodInvocation(370) at 1", "Insert MethodInvocation(369) into MethodInvocation(370) at 2", "Insert SimpleName: sock(372) into Assignment: =(382) at 0", "Insert MethodInvocation(381) into Assignment: =(382) at 1", "Insert SimpleName: sock(384) into MethodInvocation(389) at 0", "Insert SimpleName: setTcpNoDelay(385) into MethodInvocation(389) at 1", "Insert MethodInvocation(388) into MethodInvocation(389) at 2", "Insert SimpleName: sock(391) into MethodInvocation(396) at 0", "Insert SimpleName: setKeepAlive(392) into MethodInvocation(396) at 1", "Insert MethodInvocation(395) into MethodInvocation(396) at 2", "Insert SimpleName: linger(399) into VariableDeclarationFragment(403) at 0", "Insert MethodInvocation(402) into VariableDeclarationFragment(403) at 1", "Insert SimpleName: linger(405) into InfixExpression: >=(407) at 0", "Insert NumberLiteral: 0(406) into InfixExpression: >=(407) at 1", "Insert ExpressionStatement(415) into Block(416) at 0", "Update SimpleName: connsock(356) to sock", "Update SimpleName: schm(465) to host", "Update SimpleName: getName(466) to getSchemeName", "Insert ThisExpression(571) into FieldAccess(573) at 0", "Insert SimpleName: schemePortResolver(572) into FieldAccess(573) at 1", "Insert SimpleName: socketConfig(367) into MethodInvocation(369) at 0", "Insert SimpleName: getSoTimeout(368) into MethodInvocation(369) at 1", "Move SimpleName: sf(345) into MethodInvocation(381) at 0", "Move SimpleName: connectSocket(346) into MethodInvocation(381) at 1", "Insert SimpleName: connectTimeout(375) into MethodInvocation(381) at 2", "Move SimpleName: sock(347) into MethodInvocation(381) at 3", "Insert SimpleName: host(377) into MethodInvocation(381) at 4", "Move SimpleName: remoteAddress(348) into MethodInvocation(381) at 5", "Move SimpleName: localAddress(349) into MethodInvocation(381) at 6", "Update SimpleName: params(350) to context", "Move SimpleName: params(350) into MethodInvocation(381) at 7", "Insert SimpleName: socketConfig(386) into MethodInvocation(388) at 0", "Insert SimpleName: isTcpNoDelay(387) into MethodInvocation(388) at 1", "Insert SimpleName: socketConfig(393) into MethodInvocation(395) at 0", "Insert SimpleName: isSoKeepAlive(394) into MethodInvocation(395) at 1", "Insert SimpleName: socketConfig(400) into MethodInvocation(402) at 0", "Insert SimpleName: getSoLinger(401) into MethodInvocation(402) at 1", "Insert MethodInvocation(414) into ExpressionStatement(415) at 0", "Insert SimpleName: sock(408) into MethodInvocation(414) at 0", "Insert SimpleName: setSoLinger(409) into MethodInvocation(414) at 1", "Insert InfixExpression: >(412) into MethodInvocation(414) at 2", "Insert SimpleName: linger(413) into MethodInvocation(414) at 3", "Insert SimpleName: linger(410) into InfixExpression: >(412) at 0", "Insert NumberLiteral: 0(411) into InfixExpression: >(412) at 1", "Delete Block(115)", "Delete MethodDeclaration(116)", "Delete Modifier: public(117)", "Delete SimpleName: SchemeRegistry(118)", "Delete SimpleType: SchemeRegistry(119)", "Delete SimpleName: getSchemeRegistry(120)", "Delete FieldAccess(123)", "Delete ReturnStatement(124)", "Delete Block(125)", "Delete MethodDeclaration(126)", "Delete Modifier: public(127)", "Delete SimpleName: DnsResolver(128)", "Delete SimpleType: DnsResolver(129)", "Delete SimpleName: getDnsResolver(130)", "Delete ThisExpression(131)", "Delete SimpleName: dnsResolver(132)", "Delete FieldAccess(133)", "Delete ReturnStatement(134)", "Delete Block(135)", "Delete MethodDeclaration(136)", "Delete SimpleType: SchemeRegistry(139)", "Delete SimpleType: SchemeRegistry(147)", "Delete SimpleType: SchemeRegistry(150)", "Delete SimpleName: InetAddress(187)", "Delete SimpleType: InetAddress(188)", "Delete SingleVariableDeclaration(190)", "Delete SimpleType: SchemeRegistry(204)", "Delete SimpleType: SchemeSocketFactory(223)", "Delete SimpleName: sf(224)", "Delete MethodInvocation(227)", "Delete VariableDeclarationFragment(228)", "Delete VariableDeclarationStatement(229)", "Delete SimpleName: schm(247)", "Delete SimpleName: getPort(250)", "Delete MethodInvocation(251)", "Delete SimpleName: Socket(282)", "Delete SimpleType: Socket(283)", "Delete SimpleName: HttpInetSocketAddress(299)", "Delete SimpleType: HttpInetSocketAddress(300)", "Delete SimpleName: host(301)", "Delete SimpleName: localAddress(309)", "Delete NullLiteral(310)", "Delete VariableDeclarationFragment(311)", "Delete VariableDeclarationStatement(312)", "Delete SimpleName: local(313)", "Delete NullLiteral(314)", "Delete InfixExpression: !=(315)", "Delete SimpleName: localAddress(316)", "Delete SimpleName: local(319)", "Delete NumberLiteral: 0(320)", "Delete ClassInstanceCreation(321)", "Delete Assignment: =(322)", "Delete ExpressionStatement(323)", "Delete Block(324)", "Delete IfStatement(325)", "Delete SimpleName: connsock(344)", "Delete MethodInvocation(351)", "Delete VariableDeclarationFragment(352)", "Delete VariableDeclarationStatement(353)", "Delete Block(360)", "Delete TryStatement(387)", "Delete Modifier: final(428)", "Delete SimpleType: HttpParams(430)", "Delete SimpleName: params(431)", "Delete SingleVariableDeclaration(432)", "Delete SimpleType: SchemeRegistry(436)", "Delete SimpleName: schm(454)", "Delete SimpleName: getSchemeSocketFactory(455)", "Delete MethodInvocation(456)", "Delete SimpleName: schm(479)", "Delete SimpleName: getSchemeSocketFactory(480)", "Delete MethodInvocation(481)", "Delete SimpleName: schm(492)", "Delete SimpleName: getPort(495)", "Delete MethodInvocation(496)", "Delete Block(533)"]}}, {"PoolingHttpClientConnectionManager_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: org.apache.http.config.RegistryBuilder to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: org.apache.http.conn.SchemePortResolver to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: org.apache.http.conn.socket.ConnectionSocketFactory to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: org.apache.http.conn.socket.PlainSocketFactory to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: org.apache.http.conn.ssl.SSLSocketFactory to ImportDeclaration at 0"]}, {"root": "UPDATE from org.apache.http.conn.scheme.SchemeRegistry to org.apache.http.config.Registry", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.SchemeRegistry from org.apache.http.conn.scheme.SchemeRegistry to org.apache.http.config.Registry"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS StringLiteral: \"https\" to MethodInvocation at 2", "INS SimpleName: SSLSocketFactory to MethodInvocation at 0", "INS ParameterizedType: Registry<ConnectionSocketFactory> to MethodDeclaration at 2", "INS SimpleName: getSocketFactory to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: getSocketFactory to MethodInvocation at 1", "INS SimpleName: ConnectionSocketFactory to SimpleType: ConnectionSocketFactory at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: Registry to SimpleType: Registry at 0", "INS SimpleName: register to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS Modifier: private to MethodDeclaration at 0", "INS MethodInvocation to MethodInvocation at 3", "INS StringLiteral: \"http\" to MethodInvocation at 2", "INS SimpleName: create to MethodInvocation at 2", "INS SimpleName: ConnectionSocketFactory to SimpleType: ConnectionSocketFactory at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: Registry to ParameterizedType: Registry<ConnectionSocketFactory> at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: getDefaultRegistry to MethodDeclaration at 3", "INS SimpleName: RegistryBuilder to MethodInvocation at 0", "INS SimpleName: register to MethodInvocation at 1", "INS SimpleType: ConnectionSocketFactory to MethodInvocation at 1", "INS Modifier: static to MethodDeclaration at 1", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Registry<ConnectionSocketFactory> at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: PlainSocketFactory to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS Block to MethodDeclaration at 2", "INS SimpleName: getDefaultRegistry to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS ConstructorInvocation to Block at 0", "INS Modifier: public to MethodDeclaration at 0", "INS MethodInvocation to ConstructorInvocation at 0", "INS SimpleName: PoolingHttpClientConnectionManager to MethodDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 2", "operations": ["INS PrimitiveType: long to SingleVariableDeclaration at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: timeToLive to SingleVariableDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: tunit to SingleVariableDeclaration at 2", "INS SimpleName: TimeUnit to SimpleType: TimeUnit at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: TimeUnit to SingleVariableDeclaration at 1", "INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV Block to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: schemePortResolver to SingleVariableDeclaration at 2", "INS SimpleName: SchemePortResolver to SimpleType: SchemePortResolver at 0", "INS SimpleType: SchemePortResolver to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 7"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: SchemePortResolver to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: schemePortResolver to SingleVariableDeclaration at 2", "INS SimpleName: SchemePortResolver to SimpleType: SchemePortResolver at 0"]}, {"root": "INS ParameterizedType: Registry<ConnectionSocketFactory> to SingleVariableDeclaration at 1", "operations": ["INS ParameterizedType: Registry<ConnectionSocketFactory> to SingleVariableDeclaration at 1", "INS SimpleType: Registry to ParameterizedType: Registry<ConnectionSocketFactory> at 0", "INS SimpleName: ConnectionSocketFactory to SimpleType: ConnectionSocketFactory at 0", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Registry<ConnectionSocketFactory> at 1"]}, {"root": "UPDATE from schreg to socketFactoryRegistry", "operations": ["UPD SimpleName: schreg from schreg to socketFactoryRegistry", "UPD SimpleName: schemeRegistry from schemeRegistry to socketFactoryRegistry", "UPD SimpleName: schreg from schreg to socketFactoryRegistry", "UPD SimpleName: schemeRegistry from schemeRegistry to socketFactoryRegistry", "UPD SimpleName: schemeRegistry from schemeRegistry to socketFactoryRegistry", "UPD SimpleName: schemeRegistry from schemeRegistry to socketFactoryRegistry", "UPD SimpleName: schemeRegistry from schemeRegistry to socketFactoryRegistry", "UPD SimpleName: schemeRegistry from schemeRegistry to socketFactoryRegistry", "UPD SimpleName: schreg from schreg to socketFactoryRegistry", "UPD SimpleName: schreg from schreg to socketFactoryRegistry"]}, {"root": "INS ParameterizedType: Registry<ConnectionSocketFactory> to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: Registry to ParameterizedType: Registry<ConnectionSocketFactory> at 0", "INS ParameterizedType: Registry<ConnectionSocketFactory> to SingleVariableDeclaration at 1", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Registry<ConnectionSocketFactory> at 1", "INS SimpleName: ConnectionSocketFactory to SimpleType: ConnectionSocketFactory at 0"]}, {"root": "INS ParameterizedType: Registry<ConnectionSocketFactory> to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: ConnectionSocketFactory to SimpleType: ConnectionSocketFactory at 0", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Registry<ConnectionSocketFactory> at 1", "INS ParameterizedType: Registry<ConnectionSocketFactory> to SingleVariableDeclaration at 1", "INS SimpleType: Registry to ParameterizedType: Registry<ConnectionSocketFactory> at 0"]}, {"root": "INS ParameterizedType: Registry<ConnectionSocketFactory> to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: ConnectionSocketFactory to SimpleType: ConnectionSocketFactory at 0", "INS SimpleType: ConnectionSocketFactory to ParameterizedType: Registry<ConnectionSocketFactory> at 1", "INS SimpleType: Registry to ParameterizedType: Registry<ConnectionSocketFactory> at 0", "INS ParameterizedType: Registry<ConnectionSocketFactory> to SingleVariableDeclaration at 1"]}, {"root": "INS ParameterizedType: Registry<ConnectionSocketFactory> to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: ConnectionSocketFactory to ParameterizedType: Registry<ConnectionSocketFactory> at 1", "INS SimpleType: Registry to ParameterizedType: Registry<ConnectionSocketFactory> at 0", "INS ParameterizedType: Registry<ConnectionSocketFactory> to SingleVariableDeclaration at 1", "INS SimpleName: ConnectionSocketFactory to SimpleType: ConnectionSocketFactory at 0"]}, {"root": "INS MethodInvocation to ConstructorInvocation at 0", "operations": ["INS MethodInvocation to ConstructorInvocation at 0"]}, {"root": "INS SimpleName: timeToLive to ConstructorInvocation at 1", "operations": ["INS SimpleName: timeToLive to ConstructorInvocation at 1"]}, {"root": "INS SimpleName: tunit to ConstructorInvocation at 2", "operations": ["INS SimpleName: tunit to ConstructorInvocation at 2"]}, {"root": "INS NullLiteral to ConstructorInvocation at 1", "operations": ["INS NullLiteral to ConstructorInvocation at 1"]}, {"root": "INS NullLiteral to ConstructorInvocation at 2", "operations": ["INS NullLiteral to ConstructorInvocation at 2"]}, {"root": "INS NullLiteral to ConstructorInvocation at 3", "operations": ["INS NullLiteral to ConstructorInvocation at 3"]}, {"root": "INS SimpleName: schemePortResolver to ConstructorInvocation at 2", "operations": ["INS SimpleName: schemePortResolver to ConstructorInvocation at 2"]}, {"root": "INS SimpleName: dnsResolver to ConstructorInvocation at 3", "operations": ["INS SimpleName: dnsResolver to ConstructorInvocation at 3"]}, {"root": "INS SimpleName: schemePortResolver to SuperConstructorInvocation at 2", "operations": ["INS SimpleName: schemePortResolver to SuperConstructorInvocation at 2"]}, {"root": "UPDATE from SchemeRegistryFactory to getDefaultRegistry", "operations": ["UPD SimpleName: SchemeRegistryFactory from SchemeRegistryFactory to getDefaultRegistry"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: SchemeRegistryFactory to MethodInvocation at 0"]}, {"root": "UPDATE from SchemeRegistry to Registry", "operations": ["UPD SimpleName: SchemeRegistry from SchemeRegistry to Registry", "UPD SimpleName: SchemeRegistry from SchemeRegistry to Registry", "UPD SimpleName: SchemeRegistry from SchemeRegistry to Registry", "UPD SimpleName: SchemeRegistry from SchemeRegistry to Registry", "UPD SimpleName: SchemeRegistry from SchemeRegistry to Registry"]}, {"root": "MOVE from SimpleType: Registry", "operations": ["MOV SimpleName: SchemeRegistry to SimpleType: Registry at 0"]}, {"root": "MOVE from SimpleType: Registry", "operations": ["MOV SimpleName: SchemeRegistry to SimpleType: Registry at 0"]}, {"root": "MOVE from SimpleType: Registry", "operations": ["MOV SimpleName: SchemeRegistry to SimpleType: Registry at 0"]}, {"root": "MOVE from SimpleType: Registry", "operations": ["MOV SimpleName: SchemeRegistry to SimpleType: Registry at 0"]}, {"root": "MOVE from SimpleType: Registry", "operations": ["MOV SimpleName: SchemeRegistry to SimpleType: Registry at 0"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: createDefault", "DEL MethodInvocation"]}, {"root": "DEL SimpleType: SchemeRegistry", "operations": ["DEL SimpleType: SchemeRegistry"]}, {"root": "DEL SimpleType: SchemeRegistry", "operations": ["DEL SimpleType: SchemeRegistry"]}, {"root": "DEL SimpleType: SchemeRegistry", "operations": ["DEL SimpleType: SchemeRegistry"]}, {"root": "DEL SimpleName: dnsResolver", "operations": ["DEL SimpleName: dnsResolver"]}, {"root": "DEL SimpleType: SchemeRegistry", "operations": ["DEL SimpleType: SchemeRegistry"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL SimpleType: SchemeRegistry", "operations": ["DEL SimpleType: SchemeRegistry"]}]}}, {"PoolingHttpClientConnectionManager_diff": {"operations": ["Move ImportDeclaration(19) into CompilationUnit(939) at 7", "Insert ImportDeclaration(17) into CompilationUnit(939) at 8", "Insert ImportDeclaration(21) into CompilationUnit(939) at 10", "Insert ImportDeclaration(25) into CompilationUnit(939) at 12", "Insert ImportDeclaration(27) into CompilationUnit(939) at 13", "Insert ImportDeclaration(29) into CompilationUnit(939) at 14", "Update QualifiedName: org.apache.http.conn.scheme.SchemeRegistry(18) to org.apache.http.config.Registry", "Insert QualifiedName: org.apache.http.config.RegistryBuilder(16) into ImportDeclaration(17) at 0", "Insert QualifiedName: org.apache.http.conn.SchemePortResolver(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: org.apache.http.conn.socket.ConnectionSocketFactory(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: org.apache.http.conn.socket.PlainSocketFactory(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: org.apache.http.conn.ssl.SSLSocketFactory(28) into ImportDeclaration(29) at 0", "Insert MethodDeclaration(111) into TypeDeclaration: class(938) at 7", "Insert MethodDeclaration(118) into TypeDeclaration: class(938) at 8", "Insert Modifier: private(82) into MethodDeclaration(111) at 0", "Insert Modifier: static(83) into MethodDeclaration(111) at 1", "Insert ParameterizedType: Registry<ConnectionSocketFactory>(88) into MethodDeclaration(111) at 2", "Insert SimpleName: getDefaultRegistry(89) into MethodDeclaration(111) at 3", "Insert Block(110) into MethodDeclaration(111) at 4", "Insert Modifier: public(112) into MethodDeclaration(118) at 0", "Insert SimpleName: PoolingHttpClientConnectionManager(113) into MethodDeclaration(118) at 1", "Insert Block(117) into MethodDeclaration(118) at 2", "Insert SingleVariableDeclaration(124) into MethodDeclaration(136) at 2", "Insert SingleVariableDeclaration(129) into MethodDeclaration(136) at 3", "Move SingleVariableDeclaration(153) into MethodDeclaration(177) at 3", "Move Block(173) into MethodDeclaration(209) at 5", "Insert SingleVariableDeclaration(224) into MethodDeclaration(251) at 3", "Move SingleVariableDeclaration(105) into MethodDeclaration(251) at 4", "Move Block(140) into MethodDeclaration(251) at 7", "Insert SingleVariableDeclaration(270) into MethodDeclaration(288) at 3", "Insert SimpleType: Registry(85) into ParameterizedType: Registry<ConnectionSocketFactory>(88) at 0", "Insert SimpleType: ConnectionSocketFactory(87) into ParameterizedType: Registry<ConnectionSocketFactory>(88) at 1", "Insert ReturnStatement(109) into Block(110) at 0", "Insert ConstructorInvocation(116) into Block(117) at 0", "Insert Modifier: final(121) into SingleVariableDeclaration(124) at 0", "Insert PrimitiveType: long(122) into SingleVariableDeclaration(124) at 1", "Insert SimpleName: timeToLive(123) into SingleVariableDeclaration(124) at 2", "Insert Modifier: final(125) into SingleVariableDeclaration(129) at 0", "Insert SimpleType: TimeUnit(127) into SingleVariableDeclaration(129) at 1", "Insert SimpleName: tunit(128) into SingleVariableDeclaration(129) at 2", "Insert ParameterizedType: Registry<ConnectionSocketFactory>(144) into SingleVariableDeclaration(146) at 1", "Update SimpleName: schreg(85) to socketFactoryRegistry", "Insert ParameterizedType: Registry<ConnectionSocketFactory>(161) into SingleVariableDeclaration(163) at 1", "Update SimpleName: schreg(99) to socketFactoryRegistry", "Insert ParameterizedType: Registry<ConnectionSocketFactory>(185) into SingleVariableDeclaration(187) at 1", "Update SimpleName: schemeRegistry(119) to socketFactoryRegistry", "Insert ParameterizedType: Registry<ConnectionSocketFactory>(217) into SingleVariableDeclaration(219) at 1", "Update SimpleName: schemeRegistry(147) to socketFactoryRegistry", "Insert Modifier: final(220) into SingleVariableDeclaration(224) at 0", "Insert SimpleType: SchemePortResolver(222) into SingleVariableDeclaration(224) at 1", "Insert SimpleName: schemePortResolver(223) into SingleVariableDeclaration(224) at 2", "Insert ParameterizedType: Registry<ConnectionSocketFactory>(263) into SingleVariableDeclaration(265) at 1", "Update SimpleName: schemeRegistry(184) to socketFactoryRegistry", "Insert Modifier: final(266) into SingleVariableDeclaration(270) at 0", "Insert SimpleType: SchemePortResolver(268) into SingleVariableDeclaration(270) at 1", "Insert SimpleName: schemePortResolver(269) into SingleVariableDeclaration(270) at 2", "Insert SimpleName: Registry(84) into SimpleType: Registry(85) at 0", "Insert SimpleName: ConnectionSocketFactory(86) into SimpleType: ConnectionSocketFactory(87) at 0", "Insert MethodInvocation(108) into ReturnStatement(109) at 0", "Insert MethodInvocation(115) into ConstructorInvocation(116) at 0", "Insert SimpleName: TimeUnit(126) into SimpleType: TimeUnit(127) at 0", "Insert MethodInvocation(131) into ConstructorInvocation(134) at 0", "Insert SimpleName: timeToLive(132) into ConstructorInvocation(134) at 1", "Insert SimpleName: tunit(133) into ConstructorInvocation(134) at 2", "Insert SimpleType: Registry(141) into ParameterizedType: Registry<ConnectionSocketFactory>(144) at 0", "Insert SimpleType: ConnectionSocketFactory(143) into ParameterizedType: Registry<ConnectionSocketFactory>(144) at 1", "Update SimpleName: schreg(87) to socketFactoryRegistry", "Insert SimpleType: Registry(158) into ParameterizedType: Registry<ConnectionSocketFactory>(161) at 0", "Insert SimpleType: ConnectionSocketFactory(160) into ParameterizedType: Registry<ConnectionSocketFactory>(161) at 1", "Update SimpleName: schreg(106) to socketFactoryRegistry", "Insert NullLiteral(170) into ConstructorInvocation(175) at 1", "Insert SimpleType: Registry(182) into ParameterizedType: Registry<ConnectionSocketFactory>(185) at 0", "Insert SimpleType: ConnectionSocketFactory(184) into ParameterizedType: Registry<ConnectionSocketFactory>(185) at 1", "Update SimpleName: schemeRegistry(170) to socketFactoryRegistry", "Insert NullLiteral(205) into ConstructorInvocation(207) at 2", "Insert NullLiteral(206) into ConstructorInvocation(207) at 3", "Insert SimpleType: Registry(214) into ParameterizedType: Registry<ConnectionSocketFactory>(217) at 0", "Insert SimpleType: ConnectionSocketFactory(216) into ParameterizedType: Registry<ConnectionSocketFactory>(217) at 1", "Insert SimpleName: SchemePortResolver(221) into SimpleType: SchemePortResolver(222) at 0", "Update SimpleName: schemeRegistry(137) to socketFactoryRegistry", "Insert SimpleName: schemePortResolver(247) into ConstructorInvocation(249) at 2", "Insert SimpleName: dnsResolver(248) into ConstructorInvocation(249) at 3", "Insert SimpleType: Registry(260) into ParameterizedType: Registry<ConnectionSocketFactory>(263) at 0", "Insert SimpleType: ConnectionSocketFactory(262) into ParameterizedType: Registry<ConnectionSocketFactory>(263) at 1", "Insert SimpleName: SchemePortResolver(267) into SimpleType: SchemePortResolver(268) at 0", "Update SimpleName: schemeRegistry(192) to socketFactoryRegistry", "Insert SimpleName: schemePortResolver(278) into SuperConstructorInvocation(280) at 2", "Insert MethodInvocation(106) into MethodInvocation(108) at 0", "Insert SimpleName: build(107) into MethodInvocation(108) at 1", "Insert SimpleName: getDefaultRegistry(114) into MethodInvocation(115) at 0", "Update SimpleName: SchemeRegistryFactory(74) to getDefaultRegistry", "Move SimpleName: SchemeRegistryFactory(74) into MethodInvocation(131) at 0", "Update SimpleName: SchemeRegistry(83) to Registry", "Move SimpleName: SchemeRegistry(83) into SimpleType: Registry(141) at 0", "Insert SimpleName: ConnectionSocketFactory(142) into SimpleType: ConnectionSocketFactory(143) at 0", "Update SimpleName: SchemeRegistry(97) to Registry", "Move SimpleName: SchemeRegistry(97) into SimpleType: Registry(158) at 0", "Insert SimpleName: ConnectionSocketFactory(159) into SimpleType: ConnectionSocketFactory(160) at 0", "Update SimpleName: SchemeRegistry(117) to Registry", "Move SimpleName: SchemeRegistry(117) into SimpleType: Registry(182) at 0", "Insert SimpleName: ConnectionSocketFactory(183) into SimpleType: ConnectionSocketFactory(184) at 0", "Update SimpleName: SchemeRegistry(145) to Registry", "Move SimpleName: SchemeRegistry(145) into SimpleType: Registry(214) at 0", "Insert SimpleName: ConnectionSocketFactory(215) into SimpleType: ConnectionSocketFactory(216) at 0", "Update SimpleName: SchemeRegistry(182) to Registry", "Move SimpleName: SchemeRegistry(182) into SimpleType: Registry(260) at 0", "Insert SimpleName: ConnectionSocketFactory(261) into SimpleType: ConnectionSocketFactory(262) at 0", "Insert MethodInvocation(100) into MethodInvocation(106) at 0", "Insert SimpleName: register(101) into MethodInvocation(106) at 1", "Insert StringLiteral: \"https\"(102) into MethodInvocation(106) at 2", "Insert MethodInvocation(105) into MethodInvocation(106) at 3", "Insert MethodInvocation(94) into MethodInvocation(100) at 0", "Insert SimpleName: register(95) into MethodInvocation(100) at 1", "Insert StringLiteral: \"http\"(96) into MethodInvocation(100) at 2", "Insert MethodInvocation(99) into MethodInvocation(100) at 3", "Insert SimpleName: SSLSocketFactory(103) into MethodInvocation(105) at 0", "Insert SimpleName: getSocketFactory(104) into MethodInvocation(105) at 1", "Insert SimpleName: RegistryBuilder(90) into MethodInvocation(94) at 0", "Insert SimpleType: ConnectionSocketFactory(92) into MethodInvocation(94) at 1", "Insert SimpleName: create(93) into MethodInvocation(94) at 2", "Insert SimpleName: PlainSocketFactory(97) into MethodInvocation(99) at 0", "Insert SimpleName: getSocketFactory(98) into MethodInvocation(99) at 1", "Insert SimpleName: ConnectionSocketFactory(91) into SimpleType: ConnectionSocketFactory(92) at 0", "Delete SimpleName: createDefault(75)", "Delete MethodInvocation(76)", "Delete SimpleType: SchemeRegistry(84)", "Delete SimpleType: SchemeRegistry(98)", "Delete SimpleType: SchemeRegistry(118)", "Delete SimpleName: dnsResolver(171)", "Delete SimpleType: SchemeRegistry(146)", "Delete NullLiteral(138)", "Delete SimpleType: SchemeRegistry(183)"]}}, {"ProxySelectorRoutePlanner_cluster": {"actions": [{"root": "INS MarkerAnnotation to TypeDeclaration: class at 2", "operations": ["INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS MarkerAnnotation to TypeDeclaration: class at 2"]}, {"root": "INS TagElement: @deprecated to Javadoc at 2", "operations": ["INS TagElement: @deprecated to Javadoc at 2", "INS TagElement: @link to TagElement: @deprecated at 1", "INS TextElement:  (4.3) use  to TagElement: @deprecated at 0", "INS SimpleName: SystemDefaultRoutePlanner to TagElement: @link at 0"]}]}}, {"ProxySelectorRoutePlanner_diff": {"operations": ["Insert MarkerAnnotation(86) into TypeDeclaration: class(656) at 2", "Insert TagElement: @deprecated(81) into Javadoc(82) at 2", "Insert SimpleName: Deprecated(85) into MarkerAnnotation(86) at 0", "Insert TextElement:  (4.3) use (78) into TagElement: @deprecated(81) at 0", "Insert TagElement: @link(80) into TagElement: @deprecated(81) at 1", "Insert SimpleName: SystemDefaultRoutePlanner(79) into TagElement: @link(80) at 0"]}}, {"SchemeRegistryFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.http.impl.client.builder.HttpClientBuilder to ImportDeclaration at 0"]}, {"root": "INS MarkerAnnotation to TypeDeclaration: class at 2", "operations": ["INS MarkerAnnotation to TypeDeclaration: class at 2", "INS SimpleName: Deprecated to MarkerAnnotation at 0"]}, {"root": "INS TagElement: @deprecated to Javadoc at 1", "operations": ["INS TagElement: @link to TagElement: @deprecated at 1", "INS TextElement:  (4.3) use  to TagElement: @deprecated at 0", "INS TagElement: @deprecated to Javadoc at 1", "INS TextElement: . to TagElement: @deprecated at 2", "INS SimpleName: HttpClientBuilder to TagElement: @link at 0"]}]}}, {"SchemeRegistryFactory_diff": {"operations": ["Insert ImportDeclaration(13) into CompilationUnit(140) at 6", "Insert QualifiedName: org.apache.http.impl.client.builder.HttpClientBuilder(12) into ImportDeclaration(13) at 0", "Insert MarkerAnnotation(25) into TypeDeclaration: class(139) at 2", "Insert TagElement: @deprecated(20) into Javadoc(21) at 1", "Insert SimpleName: Deprecated(24) into MarkerAnnotation(25) at 0", "Insert TextElement:  (4.3) use (16) into TagElement: @deprecated(20) at 0", "Insert TagElement: @link(18) into TagElement: @deprecated(20) at 1", "Insert TextElement: .(19) into TagElement: @deprecated(20) at 2", "Insert SimpleName: HttpClientBuilder(17) into TagElement: @link(18) at 0"]}}, {"BestMatchSpecFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.http.cookie.CookieSpecProvider to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: org.apache.http.protocol.HttpContext to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS Javadoc to TypeDeclaration: class at 0", "operations": ["INS TagElement to Javadoc at 0", "INS Javadoc to TypeDeclaration: class at 0"]}, {"root": "INS SingleMemberAnnotation to TypeDeclaration: class at 3", "operations": ["INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to TypeDeclaration: class at 3", "INS StringLiteral: \"deprecation\" to SingleMemberAnnotation at 1"]}, {"root": "INS Modifier: public to TypeDeclaration: class at 4", "operations": ["INS Modifier: public to TypeDeclaration: class at 4"]}, {"root": "INS SimpleName: BestMatchSpecFactory to TypeDeclaration: class at 5", "operations": ["INS SimpleName: BestMatchSpecFactory to TypeDeclaration: class at 5"]}, {"root": "INS SimpleType: CookieSpecProvider to TypeDeclaration: class at 9", "operations": ["INS SimpleName: CookieSpecProvider to SimpleType: CookieSpecProvider at 0", "INS SimpleType: CookieSpecProvider to TypeDeclaration: class at 9"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 10", "operations": ["INS Dimension to ArrayType: String[] at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ArrayType: String[] to FieldDeclaration at 2", "INS SimpleName: datepatterns to VariableDeclarationFragment at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS FieldDeclaration to TypeDeclaration: class at 10", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS PrimitiveType: boolean to FieldDeclaration at 2", "INS SimpleName: oneHeader to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: datepatterns to Assignment: = at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: oneHeader to FieldAccess at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS ArrayType: String[] to SingleVariableDeclaration at 1", "INS SimpleName: datepatterns to SingleVariableDeclaration at 2", "INS ExpressionStatement to Block at 2", "INS SimpleName: datepatterns to FieldAccess at 1", "INS SimpleName: oneHeader to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Dimension to ArrayType: String[] at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SuperConstructorInvocation to Block at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: oneHeader to SingleVariableDeclaration at 2", "INS ExpressionStatement to Block at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS FieldAccess to Assignment: = at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS ThisExpression to FieldAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: BestMatchSpecFactory to MethodDeclaration at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS Block to MethodDeclaration at 2", "INS ConstructorInvocation to Block at 0", "INS SimpleName: BestMatchSpecFactory to MethodDeclaration at 1", "INS BooleanLiteral: false to ConstructorInvocation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS NullLiteral to ConstructorInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 13"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS Block to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS ThisExpression to FieldAccess at 0", "INS SimpleType: HttpContext to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: BestMatchSpec to SimpleType: BestMatchSpec at 0", "INS SimpleType: BestMatchSpec to ClassInstanceCreation at 0", "INS FieldAccess to ClassInstanceCreation at 2", "INS SimpleType: CookieSpec to MethodDeclaration at 1", "INS SimpleName: oneHeader to FieldAccess at 1", "INS SimpleName: HttpContext to SimpleType: HttpContext at 0", "INS SimpleName: context to SingleVariableDeclaration at 2", "INS SimpleName: CookieSpec to SimpleType: CookieSpec at 0", "INS FieldAccess to ClassInstanceCreation at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: create to MethodDeclaration at 2", "INS ClassInstanceCreation to ReturnStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: datepatterns to FieldAccess at 1"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @since to Javadoc at 1"]}, {"root": "MOVE from TagElement", "operations": ["MOV TagElement: @link to TagElement at 0", "MOV TextElement:  implementation that creates and initializes to TagElement at 1", "MOV TextElement:  instances. to TagElement at 3", "MOV TagElement: @link to TagElement at 2"]}, {"root": "UPDATE from CookieSpecFactory to CookieSpecProvider", "operations": ["UPD SimpleName: CookieSpecFactory from CookieSpecFactory to CookieSpecProvider"]}, {"root": "DEL Javadoc", "operations": ["DEL MemberRef", "DEL TagElement: @link", "DEL TextElement: </li>", "DEL TextElement: </ul>", "DEL QualifiedName: org.apache.http.cookie.params.CookieSpecPNames", "DEL SimpleName: DATE_PATTERNS", "DEL MemberRef", "DEL QualifiedName: org.apache.http.cookie.params.CookieSpecPNames", "DEL TagElement: @link", "DEL TextElement: The following parameters can be used to customize the behavior of this", "DEL TextElement: <ul>", "DEL Javadoc", "DEL TextElement: class:", "DEL TextElement: <li>", "DEL TagElement", "DEL TextElement: <p>", "DEL TextElement: <li>", "DEL SimpleName: SINGLE_COOKIE_HEADER", "DEL TextElement: </li>"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL SimpleName: BestMatchSpecFactory", "operations": ["DEL SimpleName: BestMatchSpecFactory"]}]}}, {"BestMatchSpecFactory_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(194) at 5", "Insert ImportDeclaration(17) into CompilationUnit(194) at 8", "Insert QualifiedName: org.apache.http.cookie.CookieSpecProvider(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.http.protocol.HttpContext(16) into ImportDeclaration(17) at 0", "Insert Javadoc(27) into TypeDeclaration: class(193) at 0", "Insert SingleMemberAnnotation(32) into TypeDeclaration: class(193) at 2", "Insert Modifier: public(33) into TypeDeclaration: class(193) at 3", "Insert SimpleType: CookieSpecProvider(38) into TypeDeclaration: class(193) at 6", "Insert FieldDeclaration(47) into TypeDeclaration: class(193) at 7", "Insert FieldDeclaration(53) into TypeDeclaration: class(193) at 8", "Insert MethodDeclaration(81) into TypeDeclaration: class(193) at 9", "Insert MethodDeclaration(88) into TypeDeclaration: class(193) at 10", "Insert MethodDeclaration(192) into TypeDeclaration: class(193) at 12", "Insert TagElement(24) into Javadoc(27) at 0", "Move TagElement: @since(39) into Javadoc(27) at 1", "Insert SimpleName: SuppressWarnings(30) into SingleMemberAnnotation(32) at 0", "Insert StringLiteral: \"deprecation\"(31) into SingleMemberAnnotation(32) at 1", "Insert SimpleName: CookieSpecProvider(37) into SimpleType: CookieSpecProvider(38) at 0", "Insert Modifier: private(39) into FieldDeclaration(47) at 0", "Insert Modifier: final(40) into FieldDeclaration(47) at 1", "Insert ArrayType: String[](44) into FieldDeclaration(47) at 2", "Insert VariableDeclarationFragment(46) into FieldDeclaration(47) at 3", "Insert Modifier: private(48) into FieldDeclaration(53) at 0", "Insert Modifier: final(49) into FieldDeclaration(53) at 1", "Insert PrimitiveType: boolean(50) into FieldDeclaration(53) at 2", "Insert VariableDeclarationFragment(52) into FieldDeclaration(53) at 3", "Insert Modifier: public(54) into MethodDeclaration(81) at 0", "Insert SingleVariableDeclaration(62) into MethodDeclaration(81) at 2", "Insert SingleVariableDeclaration(66) into MethodDeclaration(81) at 3", "Insert Block(80) into MethodDeclaration(81) at 4", "Insert Modifier: public(82) into MethodDeclaration(88) at 0", "Insert Block(87) into MethodDeclaration(88) at 2", "Insert Modifier: public(172) into MethodDeclaration(192) at 0", "Insert SimpleType: CookieSpec(174) into MethodDeclaration(192) at 1", "Insert SimpleName: create(175) into MethodDeclaration(192) at 2", "Insert SingleVariableDeclaration(180) into MethodDeclaration(192) at 3", "Insert Block(191) into MethodDeclaration(192) at 4", "Move TagElement: @link(15) into TagElement(24) at 0", "Move TextElement:  implementation that creates and initializes(16) into TagElement(24) at 1", "Move TagElement: @link(18) into TagElement(24) at 2", "Move TextElement:  instances.(19) into TagElement(24) at 3", "Insert SimpleType: String(42) into ArrayType: String[](44) at 0", "Insert Dimension(43) into ArrayType: String[](44) at 1", "Insert SimpleName: datepatterns(45) into VariableDeclarationFragment(46) at 0", "Insert SimpleName: oneHeader(51) into VariableDeclarationFragment(52) at 0", "Insert Modifier: final(56) into SingleVariableDeclaration(62) at 0", "Insert ArrayType: String[](60) into SingleVariableDeclaration(62) at 1", "Insert SimpleName: datepatterns(61) into SingleVariableDeclaration(62) at 2", "Insert Modifier: final(63) into SingleVariableDeclaration(66) at 0", "Insert PrimitiveType: boolean(64) into SingleVariableDeclaration(66) at 1", "Insert SimpleName: oneHeader(65) into SingleVariableDeclaration(66) at 2", "Insert SuperConstructorInvocation(67) into Block(80) at 0", "Insert ExpressionStatement(73) into Block(80) at 1", "Insert ExpressionStatement(79) into Block(80) at 2", "Insert ConstructorInvocation(86) into Block(87) at 0", "Insert SimpleName: CookieSpec(173) into SimpleType: CookieSpec(174) at 0", "Insert Modifier: final(176) into SingleVariableDeclaration(180) at 0", "Insert SimpleType: HttpContext(178) into SingleVariableDeclaration(180) at 1", "Insert SimpleName: context(179) into SingleVariableDeclaration(180) at 2", "Insert ReturnStatement(190) into Block(191) at 0", "Update SimpleName: CookieSpecFactory(14) to CookieSpecProvider", "Insert SimpleName: String(41) into SimpleType: String(42) at 0", "Insert SimpleType: String(58) into ArrayType: String[](60) at 0", "Insert Dimension(59) into ArrayType: String[](60) at 1", "Insert Assignment: =(72) into ExpressionStatement(73) at 0", "Insert Assignment: =(78) into ExpressionStatement(79) at 0", "Insert NullLiteral(84) into ConstructorInvocation(86) at 0", "Insert BooleanLiteral: false(85) into ConstructorInvocation(86) at 1", "Insert SimpleName: HttpContext(177) into SimpleType: HttpContext(178) at 0", "Insert ClassInstanceCreation(189) into ReturnStatement(190) at 0", "Insert SimpleName: String(57) into SimpleType: String(58) at 0", "Insert FieldAccess(70) into Assignment: =(72) at 0", "Insert SimpleName: datepatterns(71) into Assignment: =(72) at 1", "Insert FieldAccess(76) into Assignment: =(78) at 0", "Insert SimpleName: oneHeader(77) into Assignment: =(78) at 1", "Insert FieldAccess(185) into ClassInstanceCreation(189) at 1", "Insert FieldAccess(188) into ClassInstanceCreation(189) at 2", "Insert ThisExpression(68) into FieldAccess(70) at 0", "Insert SimpleName: datepatterns(69) into FieldAccess(70) at 1", "Insert ThisExpression(74) into FieldAccess(76) at 0", "Insert SimpleName: oneHeader(75) into FieldAccess(76) at 1", "Insert ThisExpression(183) into FieldAccess(185) at 0", "Insert SimpleName: datepatterns(184) into FieldAccess(185) at 1", "Insert ThisExpression(186) into FieldAccess(188) at 0", "Insert SimpleName: oneHeader(187) into FieldAccess(188) at 1", "Delete TextElement: <p>(20)", "Delete TextElement: The following parameters can be used to customize the behavior of this(21)", "Delete TextElement: class:(22)", "Delete TextElement: <ul>(23)", "Delete TextElement: <li>(24)", "Delete QualifiedName: org.apache.http.cookie.params.CookieSpecPNames(25)", "Delete SimpleName: DATE_PATTERNS(26)", "Delete MemberRef(27)", "Delete TagElement: @link(28)", "Delete TextElement: </li>(29)", "Delete TextElement: <li>(30)", "Delete QualifiedName: org.apache.http.cookie.params.CookieSpecPNames(31)", "Delete SimpleName: SINGLE_COOKIE_HEADER(32)", "Delete MemberRef(33)", "Delete TagElement: @link(34)", "Delete TextElement: </li>(35)", "Delete TextElement: </ul>(36)", "Delete TagElement(37)", "Delete Javadoc(40)", "Delete Modifier: public(43)"]}}, {"BrowserCompatSpecFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.http.cookie.CookieSpecProvider to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: org.apache.http.protocol.HttpContext to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS SingleMemberAnnotation to TypeDeclaration: class at 2", "operations": ["INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS StringLiteral: \"deprecation\" to SingleMemberAnnotation at 1", "INS SingleMemberAnnotation to TypeDeclaration: class at 2"]}, {"root": "INS SimpleType: CookieSpecProvider to TypeDeclaration: class at 6", "operations": ["INS SimpleType: CookieSpecProvider to TypeDeclaration: class at 6", "INS SimpleName: CookieSpecProvider to SimpleType: CookieSpecProvider at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS Dimension to ArrayType: String[] at 1", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS ArrayType: String[] to FieldDeclaration at 2", "INS SimpleType: String to ArrayType: String[] at 0", "INS SimpleName: datepatterns to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS ExpressionStatement to Block at 1", "INS SuperConstructorInvocation to Block at 0", "INS Dimension to ArrayType: String[] at 1", "INS SimpleName: datepatterns to FieldAccess at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: datepatterns to Assignment: = at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS ArrayType: String[] to SingleVariableDeclaration at 1", "INS SimpleName: datepatterns to SingleVariableDeclaration at 2", "INS Block to MethodDeclaration at 3", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: BrowserCompatSpecFactory to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleName: BrowserCompatSpecFactory to MethodDeclaration at 1", "INS Block to MethodDeclaration at 2", "INS ConstructorInvocation to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS NullLiteral to ConstructorInvocation at 0", "INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: BrowserCompatSpec to SimpleType: BrowserCompatSpec at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: CookieSpec to SimpleType: CookieSpec at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: context to SingleVariableDeclaration at 2", "INS SimpleType: CookieSpec to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: create to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleType: BrowserCompatSpec to ClassInstanceCreation at 0", "INS SimpleName: datepatterns to FieldAccess at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS FieldAccess to ClassInstanceCreation at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: HttpContext to SimpleType: HttpContext at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: HttpContext to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from CookieSpecFactory to CookieSpecProvider", "operations": ["UPD SimpleName: CookieSpecFactory from CookieSpecFactory to CookieSpecProvider"]}, {"root": "DEL TextElement: <p>", "operations": ["DEL TextElement: <p>"]}, {"root": "DEL TextElement: The following parameters can be used to customize the behavior of this", "operations": ["DEL TextElement: The following parameters can be used to customize the behavior of this"]}, {"root": "DEL TextElement: class:", "operations": ["DEL TextElement: class:"]}, {"root": "DEL TextElement: <ul>", "operations": ["DEL TextElement: <ul>"]}, {"root": "DEL TextElement: <li>", "operations": ["DEL TextElement: <li>"]}, {"root": "DEL TagElement: @link", "operations": ["DEL MemberRef", "DEL SimpleName: DATE_PATTERNS", "DEL TagElement: @link", "DEL QualifiedName: org.apache.http.cookie.params.CookieSpecPNames"]}, {"root": "DEL TextElement: </li>", "operations": ["DEL TextElement: </li>"]}, {"root": "DEL TextElement: </ul>", "operations": ["DEL TextElement: </ul>"]}]}}, {"BrowserCompatSpecFactory_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(164) at 5", "Insert ImportDeclaration(17) into CompilationUnit(164) at 8", "Insert QualifiedName: org.apache.http.cookie.CookieSpecProvider(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.http.protocol.HttpContext(16) into ImportDeclaration(17) at 0", "Insert SingleMemberAnnotation(32) into TypeDeclaration: class(163) at 2", "Insert SimpleType: CookieSpecProvider(38) into TypeDeclaration: class(163) at 6", "Insert FieldDeclaration(47) into TypeDeclaration: class(163) at 7", "Insert MethodDeclaration(65) into TypeDeclaration: class(163) at 8", "Insert MethodDeclaration(71) into TypeDeclaration: class(163) at 9", "Insert MethodDeclaration(162) into TypeDeclaration: class(163) at 11", "Insert SimpleName: SuppressWarnings(30) into SingleMemberAnnotation(32) at 0", "Insert StringLiteral: \"deprecation\"(31) into SingleMemberAnnotation(32) at 1", "Insert SimpleName: CookieSpecProvider(37) into SimpleType: CookieSpecProvider(38) at 0", "Insert Modifier: private(39) into FieldDeclaration(47) at 0", "Insert Modifier: final(40) into FieldDeclaration(47) at 1", "Insert ArrayType: String[](44) into FieldDeclaration(47) at 2", "Insert VariableDeclarationFragment(46) into FieldDeclaration(47) at 3", "Insert Modifier: public(48) into MethodDeclaration(65) at 0", "Insert SimpleName: BrowserCompatSpecFactory(49) into MethodDeclaration(65) at 1", "Insert SingleVariableDeclaration(56) into MethodDeclaration(65) at 2", "Insert Block(64) into MethodDeclaration(65) at 3", "Insert Modifier: public(66) into MethodDeclaration(71) at 0", "Insert SimpleName: BrowserCompatSpecFactory(67) into MethodDeclaration(71) at 1", "Insert Block(70) into MethodDeclaration(71) at 2", "Insert Modifier: public(145) into MethodDeclaration(162) at 0", "Insert SimpleType: CookieSpec(147) into MethodDeclaration(162) at 1", "Insert SimpleName: create(148) into MethodDeclaration(162) at 2", "Insert SingleVariableDeclaration(153) into MethodDeclaration(162) at 3", "Insert Block(161) into MethodDeclaration(162) at 4", "Insert SimpleType: String(42) into ArrayType: String[](44) at 0", "Insert Dimension(43) into ArrayType: String[](44) at 1", "Insert SimpleName: datepatterns(45) into VariableDeclarationFragment(46) at 0", "Insert Modifier: final(50) into SingleVariableDeclaration(56) at 0", "Insert ArrayType: String[](54) into SingleVariableDeclaration(56) at 1", "Insert SimpleName: datepatterns(55) into SingleVariableDeclaration(56) at 2", "Insert SuperConstructorInvocation(57) into Block(64) at 0", "Insert ExpressionStatement(63) into Block(64) at 1", "Insert ConstructorInvocation(69) into Block(70) at 0", "Insert SimpleName: CookieSpec(146) into SimpleType: CookieSpec(147) at 0", "Insert Modifier: final(149) into SingleVariableDeclaration(153) at 0", "Insert SimpleType: HttpContext(151) into SingleVariableDeclaration(153) at 1", "Insert SimpleName: context(152) into SingleVariableDeclaration(153) at 2", "Insert ReturnStatement(160) into Block(161) at 0", "Update SimpleName: CookieSpecFactory(14) to CookieSpecProvider", "Insert SimpleName: String(41) into SimpleType: String(42) at 0", "Insert SimpleType: String(52) into ArrayType: String[](54) at 0", "Insert Dimension(53) into ArrayType: String[](54) at 1", "Insert Assignment: =(62) into ExpressionStatement(63) at 0", "Insert NullLiteral(68) into ConstructorInvocation(69) at 0", "Insert SimpleName: HttpContext(150) into SimpleType: HttpContext(151) at 0", "Insert ClassInstanceCreation(159) into ReturnStatement(160) at 0", "Insert SimpleName: String(51) into SimpleType: String(52) at 0", "Insert FieldAccess(60) into Assignment: =(62) at 0", "Insert SimpleName: datepatterns(61) into Assignment: =(62) at 1", "Insert SimpleType: BrowserCompatSpec(155) into ClassInstanceCreation(159) at 0", "Insert FieldAccess(158) into ClassInstanceCreation(159) at 1", "Insert ThisExpression(58) into FieldAccess(60) at 0", "Insert SimpleName: datepatterns(59) into FieldAccess(60) at 1", "Insert SimpleName: BrowserCompatSpec(154) into SimpleType: BrowserCompatSpec(155) at 0", "Insert ThisExpression(156) into FieldAccess(158) at 0", "Insert SimpleName: datepatterns(157) into FieldAccess(158) at 1", "Delete TextElement: <p>(20)", "Delete TextElement: The following parameters can be used to customize the behavior of this(21)", "Delete TextElement: class:(22)", "Delete TextElement: <ul>(23)", "Delete TextElement: <li>(24)", "Delete QualifiedName: org.apache.http.cookie.params.CookieSpecPNames(25)", "Delete SimpleName: DATE_PATTERNS(26)", "Delete MemberRef(27)", "Delete TagElement: @link(28)", "Delete TextElement: </li>(29)", "Delete TextElement: </ul>(30)"]}}, {"IgnoreSpecFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: org.apache.http.cookie.CookieSpecProvider to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: org.apache.http.protocol.HttpContext to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS SingleMemberAnnotation to TypeDeclaration: class at 2", "operations": ["INS StringLiteral: \"deprecation\" to SingleMemberAnnotation at 1", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to TypeDeclaration: class at 2"]}, {"root": "INS SimpleType: CookieSpecProvider to TypeDeclaration: class at 6", "operations": ["INS SimpleType: CookieSpecProvider to TypeDeclaration: class at 6", "INS SimpleName: CookieSpecProvider to SimpleType: CookieSpecProvider at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS SuperConstructorInvocation to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS Block to MethodDeclaration at 2", "INS SimpleName: IgnoreSpecFactory to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleName: CookieSpec to SimpleType: CookieSpec at 0", "INS Block to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: create to MethodDeclaration at 2", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: CookieSpec to MethodDeclaration at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: HttpContext to SimpleType: HttpContext at 0", "INS SimpleType: IgnoreSpec to ClassInstanceCreation at 0", "INS SimpleType: HttpContext to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: context to SingleVariableDeclaration at 2", "INS ReturnStatement to Block at 0", "INS SimpleName: IgnoreSpec to SimpleType: IgnoreSpec at 0"]}, {"root": "UPDATE from CookieSpecFactory to CookieSpecProvider", "operations": ["UPD SimpleName: CookieSpecFactory from CookieSpecFactory to CookieSpecProvider"]}]}}, {"IgnoreSpecFactory_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(68) at 4", "Insert ImportDeclaration(13) into CompilationUnit(68) at 6", "Insert QualifiedName: org.apache.http.cookie.CookieSpecProvider(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.http.protocol.HttpContext(12) into ImportDeclaration(13) at 0", "Insert SingleMemberAnnotation(25) into TypeDeclaration: class(67) at 2", "Insert SimpleType: CookieSpecProvider(31) into TypeDeclaration: class(67) at 6", "Insert MethodDeclaration(36) into TypeDeclaration: class(67) at 7", "Insert MethodDeclaration(66) into TypeDeclaration: class(67) at 9", "Insert SimpleName: SuppressWarnings(23) into SingleMemberAnnotation(25) at 0", "Insert StringLiteral: \"deprecation\"(24) into SingleMemberAnnotation(25) at 1", "Insert SimpleName: CookieSpecProvider(30) into SimpleType: CookieSpecProvider(31) at 0", "Insert Modifier: public(32) into MethodDeclaration(36) at 0", "Insert SimpleName: IgnoreSpecFactory(33) into MethodDeclaration(36) at 1", "Insert Block(35) into MethodDeclaration(36) at 2", "Insert Modifier: public(52) into MethodDeclaration(66) at 0", "Insert SimpleType: CookieSpec(54) into MethodDeclaration(66) at 1", "Insert SimpleName: create(55) into MethodDeclaration(66) at 2", "Insert SingleVariableDeclaration(60) into MethodDeclaration(66) at 3", "Insert Block(65) into MethodDeclaration(66) at 4", "Insert SuperConstructorInvocation(34) into Block(35) at 0", "Insert SimpleName: CookieSpec(53) into SimpleType: CookieSpec(54) at 0", "Insert Modifier: final(56) into SingleVariableDeclaration(60) at 0", "Insert SimpleType: HttpContext(58) into SingleVariableDeclaration(60) at 1", "Insert SimpleName: context(59) into SingleVariableDeclaration(60) at 2", "Insert ReturnStatement(64) into Block(65) at 0", "Update SimpleName: CookieSpecFactory(10) to CookieSpecProvider", "Insert SimpleName: HttpContext(57) into SimpleType: HttpContext(58) at 0", "Insert ClassInstanceCreation(63) into ReturnStatement(64) at 0", "Insert SimpleType: IgnoreSpec(62) into ClassInstanceCreation(63) at 0", "Insert SimpleName: IgnoreSpec(61) into SimpleType: IgnoreSpec(62) at 0"]}}, {"NetscapeDraftSpecFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.http.cookie.CookieSpecProvider to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: org.apache.http.protocol.HttpContext to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS SingleMemberAnnotation to TypeDeclaration: class at 2", "operations": ["INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS StringLiteral: \"deprecation\" to SingleMemberAnnotation at 1", "INS SingleMemberAnnotation to TypeDeclaration: class at 2"]}, {"root": "INS SimpleType: CookieSpecProvider to TypeDeclaration: class at 6", "operations": ["INS SimpleType: CookieSpecProvider to TypeDeclaration: class at 6", "INS SimpleName: CookieSpecProvider to SimpleType: CookieSpecProvider at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS Dimension to ArrayType: String[] at 1", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS ArrayType: String[] to FieldDeclaration at 2", "INS SimpleType: String to ArrayType: String[] at 0", "INS SimpleName: datepatterns to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS ExpressionStatement to Block at 1", "INS SuperConstructorInvocation to Block at 0", "INS Dimension to ArrayType: String[] at 1", "INS SimpleName: datepatterns to FieldAccess at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: datepatterns to Assignment: = at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS ArrayType: String[] to SingleVariableDeclaration at 1", "INS SimpleName: datepatterns to SingleVariableDeclaration at 2", "INS Block to MethodDeclaration at 3", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: NetscapeDraftSpecFactory to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleName: NetscapeDraftSpecFactory to MethodDeclaration at 1", "INS Block to MethodDeclaration at 2", "INS ConstructorInvocation to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS NullLiteral to ConstructorInvocation at 0", "INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: NetscapeDraftSpec to SimpleType: NetscapeDraftSpec at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: CookieSpec to SimpleType: CookieSpec at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: context to SingleVariableDeclaration at 2", "INS SimpleType: CookieSpec to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: create to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleType: NetscapeDraftSpec to ClassInstanceCreation at 0", "INS SimpleName: datepatterns to FieldAccess at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS FieldAccess to ClassInstanceCreation at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: HttpContext to SimpleType: HttpContext at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: HttpContext to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from CookieSpecFactory to CookieSpecProvider", "operations": ["UPD SimpleName: CookieSpecFactory from CookieSpecFactory to CookieSpecProvider"]}, {"root": "DEL TextElement: <p>", "operations": ["DEL TextElement: <p>"]}, {"root": "DEL TextElement: The following parameters can be used to customize the behavior of this", "operations": ["DEL TextElement: The following parameters can be used to customize the behavior of this"]}, {"root": "DEL TextElement: class:", "operations": ["DEL TextElement: class:"]}, {"root": "DEL TextElement: <ul>", "operations": ["DEL TextElement: <ul>"]}, {"root": "DEL TextElement: <li>", "operations": ["DEL TextElement: <li>"]}, {"root": "DEL TagElement: @link", "operations": ["DEL MemberRef", "DEL SimpleName: DATE_PATTERNS", "DEL TagElement: @link", "DEL QualifiedName: org.apache.http.cookie.params.CookieSpecPNames"]}, {"root": "DEL TextElement: </li>", "operations": ["DEL TextElement: </li>"]}, {"root": "DEL TextElement: </ul>", "operations": ["DEL TextElement: </ul>"]}]}}, {"NetscapeDraftSpecFactory_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(164) at 5", "Insert ImportDeclaration(17) into CompilationUnit(164) at 8", "Insert QualifiedName: org.apache.http.cookie.CookieSpecProvider(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.http.protocol.HttpContext(16) into ImportDeclaration(17) at 0", "Insert SingleMemberAnnotation(32) into TypeDeclaration: class(163) at 2", "Insert SimpleType: CookieSpecProvider(38) into TypeDeclaration: class(163) at 6", "Insert FieldDeclaration(47) into TypeDeclaration: class(163) at 7", "Insert MethodDeclaration(65) into TypeDeclaration: class(163) at 8", "Insert MethodDeclaration(71) into TypeDeclaration: class(163) at 9", "Insert MethodDeclaration(162) into TypeDeclaration: class(163) at 11", "Insert SimpleName: SuppressWarnings(30) into SingleMemberAnnotation(32) at 0", "Insert StringLiteral: \"deprecation\"(31) into SingleMemberAnnotation(32) at 1", "Insert SimpleName: CookieSpecProvider(37) into SimpleType: CookieSpecProvider(38) at 0", "Insert Modifier: private(39) into FieldDeclaration(47) at 0", "Insert Modifier: final(40) into FieldDeclaration(47) at 1", "Insert ArrayType: String[](44) into FieldDeclaration(47) at 2", "Insert VariableDeclarationFragment(46) into FieldDeclaration(47) at 3", "Insert Modifier: public(48) into MethodDeclaration(65) at 0", "Insert SimpleName: NetscapeDraftSpecFactory(49) into MethodDeclaration(65) at 1", "Insert SingleVariableDeclaration(56) into MethodDeclaration(65) at 2", "Insert Block(64) into MethodDeclaration(65) at 3", "Insert Modifier: public(66) into MethodDeclaration(71) at 0", "Insert SimpleName: NetscapeDraftSpecFactory(67) into MethodDeclaration(71) at 1", "Insert Block(70) into MethodDeclaration(71) at 2", "Insert Modifier: public(145) into MethodDeclaration(162) at 0", "Insert SimpleType: CookieSpec(147) into MethodDeclaration(162) at 1", "Insert SimpleName: create(148) into MethodDeclaration(162) at 2", "Insert SingleVariableDeclaration(153) into MethodDeclaration(162) at 3", "Insert Block(161) into MethodDeclaration(162) at 4", "Insert SimpleType: String(42) into ArrayType: String[](44) at 0", "Insert Dimension(43) into ArrayType: String[](44) at 1", "Insert SimpleName: datepatterns(45) into VariableDeclarationFragment(46) at 0", "Insert Modifier: final(50) into SingleVariableDeclaration(56) at 0", "Insert ArrayType: String[](54) into SingleVariableDeclaration(56) at 1", "Insert SimpleName: datepatterns(55) into SingleVariableDeclaration(56) at 2", "Insert SuperConstructorInvocation(57) into Block(64) at 0", "Insert ExpressionStatement(63) into Block(64) at 1", "Insert ConstructorInvocation(69) into Block(70) at 0", "Insert SimpleName: CookieSpec(146) into SimpleType: CookieSpec(147) at 0", "Insert Modifier: final(149) into SingleVariableDeclaration(153) at 0", "Insert SimpleType: HttpContext(151) into SingleVariableDeclaration(153) at 1", "Insert SimpleName: context(152) into SingleVariableDeclaration(153) at 2", "Insert ReturnStatement(160) into Block(161) at 0", "Update SimpleName: CookieSpecFactory(14) to CookieSpecProvider", "Insert SimpleName: String(41) into SimpleType: String(42) at 0", "Insert SimpleType: String(52) into ArrayType: String[](54) at 0", "Insert Dimension(53) into ArrayType: String[](54) at 1", "Insert Assignment: =(62) into ExpressionStatement(63) at 0", "Insert NullLiteral(68) into ConstructorInvocation(69) at 0", "Insert SimpleName: HttpContext(150) into SimpleType: HttpContext(151) at 0", "Insert ClassInstanceCreation(159) into ReturnStatement(160) at 0", "Insert SimpleName: String(51) into SimpleType: String(52) at 0", "Insert FieldAccess(60) into Assignment: =(62) at 0", "Insert SimpleName: datepatterns(61) into Assignment: =(62) at 1", "Insert SimpleType: NetscapeDraftSpec(155) into ClassInstanceCreation(159) at 0", "Insert FieldAccess(158) into ClassInstanceCreation(159) at 1", "Insert ThisExpression(58) into FieldAccess(60) at 0", "Insert SimpleName: datepatterns(59) into FieldAccess(60) at 1", "Insert SimpleName: NetscapeDraftSpec(154) into SimpleType: NetscapeDraftSpec(155) at 0", "Insert ThisExpression(156) into FieldAccess(158) at 0", "Insert SimpleName: datepatterns(157) into FieldAccess(158) at 1", "Delete TextElement: <p>(20)", "Delete TextElement: The following parameters can be used to customize the behavior of this(21)", "Delete TextElement: class:(22)", "Delete TextElement: <ul>(23)", "Delete TextElement: <li>(24)", "Delete QualifiedName: org.apache.http.cookie.params.CookieSpecPNames(25)", "Delete SimpleName: DATE_PATTERNS(26)", "Delete MemberRef(27)", "Delete TagElement: @link(28)", "Delete TextElement: </li>(29)", "Delete TextElement: </ul>(30)"]}}, {"RFC2109SpecFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.http.cookie.CookieSpecProvider to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: org.apache.http.protocol.HttpContext to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS Javadoc to TypeDeclaration: class at 0", "operations": ["INS TagElement to Javadoc at 0", "INS Javadoc to TypeDeclaration: class at 0"]}, {"root": "INS SingleMemberAnnotation to TypeDeclaration: class at 3", "operations": ["INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to TypeDeclaration: class at 3", "INS StringLiteral: \"deprecation\" to SingleMemberAnnotation at 1"]}, {"root": "INS Modifier: public to TypeDeclaration: class at 4", "operations": ["INS Modifier: public to TypeDeclaration: class at 4"]}, {"root": "INS SimpleName: RFC2109SpecFactory to TypeDeclaration: class at 5", "operations": ["INS SimpleName: RFC2109SpecFactory to TypeDeclaration: class at 5"]}, {"root": "INS SimpleType: CookieSpecProvider to TypeDeclaration: class at 9", "operations": ["INS SimpleName: CookieSpecProvider to SimpleType: CookieSpecProvider at 0", "INS SimpleType: CookieSpecProvider to TypeDeclaration: class at 9"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 10", "operations": ["INS Dimension to ArrayType: String[] at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ArrayType: String[] to FieldDeclaration at 2", "INS SimpleName: datepatterns to VariableDeclarationFragment at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS FieldDeclaration to TypeDeclaration: class at 10", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS PrimitiveType: boolean to FieldDeclaration at 2", "INS SimpleName: oneHeader to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: datepatterns to Assignment: = at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: oneHeader to FieldAccess at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS ArrayType: String[] to SingleVariableDeclaration at 1", "INS SimpleName: datepatterns to SingleVariableDeclaration at 2", "INS ExpressionStatement to Block at 2", "INS SimpleName: datepatterns to FieldAccess at 1", "INS SimpleName: oneHeader to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Dimension to ArrayType: String[] at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SuperConstructorInvocation to Block at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: oneHeader to SingleVariableDeclaration at 2", "INS ExpressionStatement to Block at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS FieldAccess to Assignment: = at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS ThisExpression to FieldAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: RFC2109SpecFactory to MethodDeclaration at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS Block to MethodDeclaration at 2", "INS ConstructorInvocation to Block at 0", "INS SimpleName: RFC2109SpecFactory to MethodDeclaration at 1", "INS BooleanLiteral: false to ConstructorInvocation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS NullLiteral to ConstructorInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 13"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS Block to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS ThisExpression to FieldAccess at 0", "INS SimpleType: HttpContext to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: RFC2109Spec to SimpleType: RFC2109Spec at 0", "INS SimpleType: RFC2109Spec to ClassInstanceCreation at 0", "INS FieldAccess to ClassInstanceCreation at 2", "INS SimpleType: CookieSpec to MethodDeclaration at 1", "INS SimpleName: oneHeader to FieldAccess at 1", "INS SimpleName: HttpContext to SimpleType: HttpContext at 0", "INS SimpleName: context to SingleVariableDeclaration at 2", "INS SimpleName: CookieSpec to SimpleType: CookieSpec at 0", "INS FieldAccess to ClassInstanceCreation at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: create to MethodDeclaration at 2", "INS ClassInstanceCreation to ReturnStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: datepatterns to FieldAccess at 1"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @since to Javadoc at 1"]}, {"root": "MOVE from TagElement", "operations": ["MOV TagElement: @link to TagElement at 0", "MOV TextElement:  implementation that creates and initializes to TagElement at 1", "MOV TextElement:  instances. to TagElement at 3", "MOV TagElement: @link to TagElement at 2"]}, {"root": "UPDATE from CookieSpecFactory to CookieSpecProvider", "operations": ["UPD SimpleName: CookieSpecFactory from CookieSpecFactory to CookieSpecProvider"]}, {"root": "DEL Javadoc", "operations": ["DEL MemberRef", "DEL TagElement: @link", "DEL TextElement: </li>", "DEL TextElement: </ul>", "DEL QualifiedName: org.apache.http.cookie.params.CookieSpecPNames", "DEL SimpleName: DATE_PATTERNS", "DEL MemberRef", "DEL QualifiedName: org.apache.http.cookie.params.CookieSpecPNames", "DEL TagElement: @link", "DEL TextElement: The following parameters can be used to customize the behavior of this", "DEL TextElement: <ul>", "DEL Javadoc", "DEL TextElement: class:", "DEL TextElement: <li>", "DEL TagElement", "DEL TextElement: <p>", "DEL TextElement: <li>", "DEL SimpleName: SINGLE_COOKIE_HEADER", "DEL TextElement: </li>"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL SimpleName: RFC2109SpecFactory", "operations": ["DEL SimpleName: RFC2109SpecFactory"]}]}}, {"RFC2109SpecFactory_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(194) at 5", "Insert ImportDeclaration(17) into CompilationUnit(194) at 8", "Insert QualifiedName: org.apache.http.cookie.CookieSpecProvider(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.http.protocol.HttpContext(16) into ImportDeclaration(17) at 0", "Insert Javadoc(27) into TypeDeclaration: class(193) at 0", "Insert SingleMemberAnnotation(32) into TypeDeclaration: class(193) at 2", "Insert Modifier: public(33) into TypeDeclaration: class(193) at 3", "Insert SimpleName: RFC2109SpecFactory(34) into TypeDeclaration: class(193) at 4", "Insert SimpleType: CookieSpecProvider(38) into TypeDeclaration: class(193) at 6", "Insert FieldDeclaration(47) into TypeDeclaration: class(193) at 7", "Insert FieldDeclaration(53) into TypeDeclaration: class(193) at 8", "Insert MethodDeclaration(81) into TypeDeclaration: class(193) at 9", "Insert MethodDeclaration(88) into TypeDeclaration: class(193) at 10", "Insert MethodDeclaration(192) into TypeDeclaration: class(193) at 12", "Insert TagElement(24) into Javadoc(27) at 0", "Move TagElement: @since(39) into Javadoc(27) at 1", "Insert SimpleName: SuppressWarnings(30) into SingleMemberAnnotation(32) at 0", "Insert StringLiteral: \"deprecation\"(31) into SingleMemberAnnotation(32) at 1", "Insert SimpleName: CookieSpecProvider(37) into SimpleType: CookieSpecProvider(38) at 0", "Insert Modifier: private(39) into FieldDeclaration(47) at 0", "Insert Modifier: final(40) into FieldDeclaration(47) at 1", "Insert ArrayType: String[](44) into FieldDeclaration(47) at 2", "Insert VariableDeclarationFragment(46) into FieldDeclaration(47) at 3", "Insert Modifier: private(48) into FieldDeclaration(53) at 0", "Insert Modifier: final(49) into FieldDeclaration(53) at 1", "Insert PrimitiveType: boolean(50) into FieldDeclaration(53) at 2", "Insert VariableDeclarationFragment(52) into FieldDeclaration(53) at 3", "Insert Modifier: public(54) into MethodDeclaration(81) at 0", "Insert SimpleName: RFC2109SpecFactory(55) into MethodDeclaration(81) at 1", "Insert SingleVariableDeclaration(62) into MethodDeclaration(81) at 2", "Insert SingleVariableDeclaration(66) into MethodDeclaration(81) at 3", "Insert Block(80) into MethodDeclaration(81) at 4", "Insert Modifier: public(82) into MethodDeclaration(88) at 0", "Insert SimpleName: RFC2109SpecFactory(83) into MethodDeclaration(88) at 1", "Insert Block(87) into MethodDeclaration(88) at 2", "Insert Modifier: public(172) into MethodDeclaration(192) at 0", "Insert SimpleType: CookieSpec(174) into MethodDeclaration(192) at 1", "Insert SimpleName: create(175) into MethodDeclaration(192) at 2", "Insert SingleVariableDeclaration(180) into MethodDeclaration(192) at 3", "Insert Block(191) into MethodDeclaration(192) at 4", "Move TagElement: @link(15) into TagElement(24) at 0", "Move TextElement:  implementation that creates and initializes(16) into TagElement(24) at 1", "Move TagElement: @link(18) into TagElement(24) at 2", "Move TextElement:  instances.(19) into TagElement(24) at 3", "Insert SimpleType: String(42) into ArrayType: String[](44) at 0", "Insert Dimension(43) into ArrayType: String[](44) at 1", "Insert SimpleName: datepatterns(45) into VariableDeclarationFragment(46) at 0", "Insert SimpleName: oneHeader(51) into VariableDeclarationFragment(52) at 0", "Insert Modifier: final(56) into SingleVariableDeclaration(62) at 0", "Insert ArrayType: String[](60) into SingleVariableDeclaration(62) at 1", "Insert SimpleName: datepatterns(61) into SingleVariableDeclaration(62) at 2", "Insert Modifier: final(63) into SingleVariableDeclaration(66) at 0", "Insert PrimitiveType: boolean(64) into SingleVariableDeclaration(66) at 1", "Insert SimpleName: oneHeader(65) into SingleVariableDeclaration(66) at 2", "Insert SuperConstructorInvocation(67) into Block(80) at 0", "Insert ExpressionStatement(73) into Block(80) at 1", "Insert ExpressionStatement(79) into Block(80) at 2", "Insert ConstructorInvocation(86) into Block(87) at 0", "Insert SimpleName: CookieSpec(173) into SimpleType: CookieSpec(174) at 0", "Insert Modifier: final(176) into SingleVariableDeclaration(180) at 0", "Insert SimpleType: HttpContext(178) into SingleVariableDeclaration(180) at 1", "Insert SimpleName: context(179) into SingleVariableDeclaration(180) at 2", "Insert ReturnStatement(190) into Block(191) at 0", "Update SimpleName: CookieSpecFactory(14) to CookieSpecProvider", "Insert SimpleName: String(41) into SimpleType: String(42) at 0", "Insert SimpleType: String(58) into ArrayType: String[](60) at 0", "Insert Dimension(59) into ArrayType: String[](60) at 1", "Insert Assignment: =(72) into ExpressionStatement(73) at 0", "Insert Assignment: =(78) into ExpressionStatement(79) at 0", "Insert NullLiteral(84) into ConstructorInvocation(86) at 0", "Insert BooleanLiteral: false(85) into ConstructorInvocation(86) at 1", "Insert SimpleName: HttpContext(177) into SimpleType: HttpContext(178) at 0", "Insert ClassInstanceCreation(189) into ReturnStatement(190) at 0", "Insert SimpleName: String(57) into SimpleType: String(58) at 0", "Insert FieldAccess(70) into Assignment: =(72) at 0", "Insert SimpleName: datepatterns(71) into Assignment: =(72) at 1", "Insert FieldAccess(76) into Assignment: =(78) at 0", "Insert SimpleName: oneHeader(77) into Assignment: =(78) at 1", "Insert SimpleType: RFC2109Spec(182) into ClassInstanceCreation(189) at 0", "Insert FieldAccess(185) into ClassInstanceCreation(189) at 1", "Insert FieldAccess(188) into ClassInstanceCreation(189) at 2", "Insert ThisExpression(68) into FieldAccess(70) at 0", "Insert SimpleName: datepatterns(69) into FieldAccess(70) at 1", "Insert ThisExpression(74) into FieldAccess(76) at 0", "Insert SimpleName: oneHeader(75) into FieldAccess(76) at 1", "Insert SimpleName: RFC2109Spec(181) into SimpleType: RFC2109Spec(182) at 0", "Insert ThisExpression(183) into FieldAccess(185) at 0", "Insert SimpleName: datepatterns(184) into FieldAccess(185) at 1", "Insert ThisExpression(186) into FieldAccess(188) at 0", "Insert SimpleName: oneHeader(187) into FieldAccess(188) at 1", "Delete TextElement: <p>(20)", "Delete TextElement: The following parameters can be used to customize the behavior of this(21)", "Delete TextElement: class:(22)", "Delete TextElement: <ul>(23)", "Delete TextElement: <li>(24)", "Delete QualifiedName: org.apache.http.cookie.params.CookieSpecPNames(25)", "Delete SimpleName: DATE_PATTERNS(26)", "Delete MemberRef(27)", "Delete TagElement: @link(28)", "Delete TextElement: </li>(29)", "Delete TextElement: <li>(30)", "Delete QualifiedName: org.apache.http.cookie.params.CookieSpecPNames(31)", "Delete SimpleName: SINGLE_COOKIE_HEADER(32)", "Delete MemberRef(33)", "Delete TagElement: @link(34)", "Delete TextElement: </li>(35)", "Delete TextElement: </ul>(36)", "Delete TagElement(37)", "Delete Javadoc(40)", "Delete Modifier: public(43)", "Delete SimpleName: RFC2109SpecFactory(44)"]}}, {"RFC2965SpecFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.http.cookie.CookieSpecProvider to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: org.apache.http.protocol.HttpContext to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS Javadoc to TypeDeclaration: class at 0", "operations": ["INS TagElement to Javadoc at 0", "INS Javadoc to TypeDeclaration: class at 0"]}, {"root": "INS SingleMemberAnnotation to TypeDeclaration: class at 3", "operations": ["INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to TypeDeclaration: class at 3", "INS StringLiteral: \"deprecation\" to SingleMemberAnnotation at 1"]}, {"root": "INS Modifier: public to TypeDeclaration: class at 4", "operations": ["INS Modifier: public to TypeDeclaration: class at 4"]}, {"root": "INS SimpleName: RFC2965SpecFactory to TypeDeclaration: class at 5", "operations": ["INS SimpleName: RFC2965SpecFactory to TypeDeclaration: class at 5"]}, {"root": "INS SimpleType: CookieSpecProvider to TypeDeclaration: class at 9", "operations": ["INS SimpleName: CookieSpecProvider to SimpleType: CookieSpecProvider at 0", "INS SimpleType: CookieSpecProvider to TypeDeclaration: class at 9"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 10", "operations": ["INS Dimension to ArrayType: String[] at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ArrayType: String[] to FieldDeclaration at 2", "INS SimpleName: datepatterns to VariableDeclarationFragment at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS FieldDeclaration to TypeDeclaration: class at 10", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS PrimitiveType: boolean to FieldDeclaration at 2", "INS SimpleName: oneHeader to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: datepatterns to Assignment: = at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: oneHeader to FieldAccess at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS ArrayType: String[] to SingleVariableDeclaration at 1", "INS SimpleName: datepatterns to SingleVariableDeclaration at 2", "INS ExpressionStatement to Block at 2", "INS SimpleName: datepatterns to FieldAccess at 1", "INS SimpleName: oneHeader to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Dimension to ArrayType: String[] at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SuperConstructorInvocation to Block at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: oneHeader to SingleVariableDeclaration at 2", "INS ExpressionStatement to Block at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS FieldAccess to Assignment: = at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS ThisExpression to FieldAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: RFC2965SpecFactory to MethodDeclaration at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS Block to MethodDeclaration at 2", "INS ConstructorInvocation to Block at 0", "INS SimpleName: RFC2965SpecFactory to MethodDeclaration at 1", "INS BooleanLiteral: false to ConstructorInvocation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS NullLiteral to ConstructorInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 13"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS Block to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS ThisExpression to FieldAccess at 0", "INS SimpleType: HttpContext to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: RFC2965Spec to SimpleType: RFC2965Spec at 0", "INS SimpleType: RFC2965Spec to ClassInstanceCreation at 0", "INS FieldAccess to ClassInstanceCreation at 2", "INS SimpleType: CookieSpec to MethodDeclaration at 1", "INS SimpleName: oneHeader to FieldAccess at 1", "INS SimpleName: HttpContext to SimpleType: HttpContext at 0", "INS SimpleName: context to SingleVariableDeclaration at 2", "INS SimpleName: CookieSpec to SimpleType: CookieSpec at 0", "INS FieldAccess to ClassInstanceCreation at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: create to MethodDeclaration at 2", "INS ClassInstanceCreation to ReturnStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: datepatterns to FieldAccess at 1"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @since to Javadoc at 1"]}, {"root": "MOVE from TagElement", "operations": ["MOV TagElement: @link to TagElement at 0", "MOV TextElement:  implementation that creates and initializes to TagElement at 1", "MOV TextElement:  instances. to TagElement at 3", "MOV TagElement: @link to TagElement at 2"]}, {"root": "UPDATE from CookieSpecFactory to CookieSpecProvider", "operations": ["UPD SimpleName: CookieSpecFactory from CookieSpecFactory to CookieSpecProvider"]}, {"root": "DEL Javadoc", "operations": ["DEL MemberRef", "DEL TagElement: @link", "DEL TextElement: </li>", "DEL TextElement: </ul>", "DEL QualifiedName: org.apache.http.cookie.params.CookieSpecPNames", "DEL SimpleName: DATE_PATTERNS", "DEL MemberRef", "DEL QualifiedName: org.apache.http.cookie.params.CookieSpecPNames", "DEL TagElement: @link", "DEL TextElement: The following parameters can be used to customize the behavior of this", "DEL TextElement: <ul>", "DEL Javadoc", "DEL TextElement: class:", "DEL TextElement: <li>", "DEL TagElement", "DEL TextElement: <p>", "DEL TextElement: <li>", "DEL SimpleName: SINGLE_COOKIE_HEADER", "DEL TextElement: </li>"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL SimpleName: RFC2965SpecFactory", "operations": ["DEL SimpleName: RFC2965SpecFactory"]}]}}, {"RFC2965SpecFactory_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(194) at 5", "Insert ImportDeclaration(17) into CompilationUnit(194) at 8", "Insert QualifiedName: org.apache.http.cookie.CookieSpecProvider(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.http.protocol.HttpContext(16) into ImportDeclaration(17) at 0", "Insert Javadoc(27) into TypeDeclaration: class(193) at 0", "Insert SingleMemberAnnotation(32) into TypeDeclaration: class(193) at 2", "Insert Modifier: public(33) into TypeDeclaration: class(193) at 3", "Insert SimpleName: RFC2965SpecFactory(34) into TypeDeclaration: class(193) at 4", "Insert SimpleType: CookieSpecProvider(38) into TypeDeclaration: class(193) at 6", "Insert FieldDeclaration(47) into TypeDeclaration: class(193) at 7", "Insert FieldDeclaration(53) into TypeDeclaration: class(193) at 8", "Insert MethodDeclaration(81) into TypeDeclaration: class(193) at 9", "Insert MethodDeclaration(88) into TypeDeclaration: class(193) at 10", "Insert MethodDeclaration(192) into TypeDeclaration: class(193) at 12", "Insert TagElement(24) into Javadoc(27) at 0", "Move TagElement: @since(39) into Javadoc(27) at 1", "Insert SimpleName: SuppressWarnings(30) into SingleMemberAnnotation(32) at 0", "Insert StringLiteral: \"deprecation\"(31) into SingleMemberAnnotation(32) at 1", "Insert SimpleName: CookieSpecProvider(37) into SimpleType: CookieSpecProvider(38) at 0", "Insert Modifier: private(39) into FieldDeclaration(47) at 0", "Insert Modifier: final(40) into FieldDeclaration(47) at 1", "Insert ArrayType: String[](44) into FieldDeclaration(47) at 2", "Insert VariableDeclarationFragment(46) into FieldDeclaration(47) at 3", "Insert Modifier: private(48) into FieldDeclaration(53) at 0", "Insert Modifier: final(49) into FieldDeclaration(53) at 1", "Insert PrimitiveType: boolean(50) into FieldDeclaration(53) at 2", "Insert VariableDeclarationFragment(52) into FieldDeclaration(53) at 3", "Insert Modifier: public(54) into MethodDeclaration(81) at 0", "Insert SimpleName: RFC2965SpecFactory(55) into MethodDeclaration(81) at 1", "Insert SingleVariableDeclaration(62) into MethodDeclaration(81) at 2", "Insert SingleVariableDeclaration(66) into MethodDeclaration(81) at 3", "Insert Block(80) into MethodDeclaration(81) at 4", "Insert Modifier: public(82) into MethodDeclaration(88) at 0", "Insert SimpleName: RFC2965SpecFactory(83) into MethodDeclaration(88) at 1", "Insert Block(87) into MethodDeclaration(88) at 2", "Insert Modifier: public(172) into MethodDeclaration(192) at 0", "Insert SimpleType: CookieSpec(174) into MethodDeclaration(192) at 1", "Insert SimpleName: create(175) into MethodDeclaration(192) at 2", "Insert SingleVariableDeclaration(180) into MethodDeclaration(192) at 3", "Insert Block(191) into MethodDeclaration(192) at 4", "Move TagElement: @link(15) into TagElement(24) at 0", "Move TextElement:  implementation that creates and initializes(16) into TagElement(24) at 1", "Move TagElement: @link(18) into TagElement(24) at 2", "Move TextElement:  instances.(19) into TagElement(24) at 3", "Insert SimpleType: String(42) into ArrayType: String[](44) at 0", "Insert Dimension(43) into ArrayType: String[](44) at 1", "Insert SimpleName: datepatterns(45) into VariableDeclarationFragment(46) at 0", "Insert SimpleName: oneHeader(51) into VariableDeclarationFragment(52) at 0", "Insert Modifier: final(56) into SingleVariableDeclaration(62) at 0", "Insert ArrayType: String[](60) into SingleVariableDeclaration(62) at 1", "Insert SimpleName: datepatterns(61) into SingleVariableDeclaration(62) at 2", "Insert Modifier: final(63) into SingleVariableDeclaration(66) at 0", "Insert PrimitiveType: boolean(64) into SingleVariableDeclaration(66) at 1", "Insert SimpleName: oneHeader(65) into SingleVariableDeclaration(66) at 2", "Insert SuperConstructorInvocation(67) into Block(80) at 0", "Insert ExpressionStatement(73) into Block(80) at 1", "Insert ExpressionStatement(79) into Block(80) at 2", "Insert ConstructorInvocation(86) into Block(87) at 0", "Insert SimpleName: CookieSpec(173) into SimpleType: CookieSpec(174) at 0", "Insert Modifier: final(176) into SingleVariableDeclaration(180) at 0", "Insert SimpleType: HttpContext(178) into SingleVariableDeclaration(180) at 1", "Insert SimpleName: context(179) into SingleVariableDeclaration(180) at 2", "Insert ReturnStatement(190) into Block(191) at 0", "Update SimpleName: CookieSpecFactory(14) to CookieSpecProvider", "Insert SimpleName: String(41) into SimpleType: String(42) at 0", "Insert SimpleType: String(58) into ArrayType: String[](60) at 0", "Insert Dimension(59) into ArrayType: String[](60) at 1", "Insert Assignment: =(72) into ExpressionStatement(73) at 0", "Insert Assignment: =(78) into ExpressionStatement(79) at 0", "Insert NullLiteral(84) into ConstructorInvocation(86) at 0", "Insert BooleanLiteral: false(85) into ConstructorInvocation(86) at 1", "Insert SimpleName: HttpContext(177) into SimpleType: HttpContext(178) at 0", "Insert ClassInstanceCreation(189) into ReturnStatement(190) at 0", "Insert SimpleName: String(57) into SimpleType: String(58) at 0", "Insert FieldAccess(70) into Assignment: =(72) at 0", "Insert SimpleName: datepatterns(71) into Assignment: =(72) at 1", "Insert FieldAccess(76) into Assignment: =(78) at 0", "Insert SimpleName: oneHeader(77) into Assignment: =(78) at 1", "Insert SimpleType: RFC2965Spec(182) into ClassInstanceCreation(189) at 0", "Insert FieldAccess(185) into ClassInstanceCreation(189) at 1", "Insert FieldAccess(188) into ClassInstanceCreation(189) at 2", "Insert ThisExpression(68) into FieldAccess(70) at 0", "Insert SimpleName: datepatterns(69) into FieldAccess(70) at 1", "Insert ThisExpression(74) into FieldAccess(76) at 0", "Insert SimpleName: oneHeader(75) into FieldAccess(76) at 1", "Insert SimpleName: RFC2965Spec(181) into SimpleType: RFC2965Spec(182) at 0", "Insert ThisExpression(183) into FieldAccess(185) at 0", "Insert SimpleName: datepatterns(184) into FieldAccess(185) at 1", "Insert ThisExpression(186) into FieldAccess(188) at 0", "Insert SimpleName: oneHeader(187) into FieldAccess(188) at 1", "Delete TextElement: <p>(20)", "Delete TextElement: The following parameters can be used to customize the behavior of this(21)", "Delete TextElement: class:(22)", "Delete TextElement: <ul>(23)", "Delete TextElement: <li>(24)", "Delete QualifiedName: org.apache.http.cookie.params.CookieSpecPNames(25)", "Delete SimpleName: DATE_PATTERNS(26)", "Delete MemberRef(27)", "Delete TagElement: @link(28)", "Delete TextElement: </li>(29)", "Delete TextElement: <li>(30)", "Delete QualifiedName: org.apache.http.cookie.params.CookieSpecPNames(31)", "Delete SimpleName: SINGLE_COOKIE_HEADER(32)", "Delete MemberRef(33)", "Delete TagElement: @link(34)", "Delete TextElement: </li>(35)", "Delete TextElement: </ul>(36)", "Delete TagElement(37)", "Delete Javadoc(40)", "Delete Modifier: public(43)", "Delete SimpleName: RFC2965SpecFactory(44)"]}}, {"HttpClientBuilder_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 36", "MOV ImportDeclaration to CompilationUnit at 13", "MOV ImportDeclaration to CompilationUnit at 51", "MOV ImportDeclaration to CompilationUnit at 62", "MOV ImportDeclaration to CompilationUnit at 34", "MOV ImportDeclaration to CompilationUnit at 34", "MOV ImportDeclaration to CompilationUnit at 79"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 63", "MOV FieldDeclaration to TypeDeclaration: class at 26", "MOV MethodDeclaration to TypeDeclaration: class at 63"]}, {"root": "UPDATE from java.util.ArrayList to org.apache.http.auth.AuthSchemeProvider", "operations": ["UPD QualifiedName: java.util.ArrayList from java.util.ArrayList to org.apache.http.auth.AuthSchemeProvider"]}, {"root": "UPDATE from org.apache.http.HttpVersion to org.apache.http.config.Lookup", "operations": ["UPD QualifiedName: org.apache.http.HttpVersion from org.apache.http.HttpVersion to org.apache.http.config.Lookup"]}, {"root": "UPDATE from org.apache.http.auth.AuthSchemeFactory to org.apache.http.config.RegistryBuilder", "operations": ["UPD QualifiedName: org.apache.http.auth.AuthSchemeFactory from org.apache.http.auth.AuthSchemeFactory to org.apache.http.config.RegistryBuilder"]}, {"root": "UPDATE from org.apache.http.auth.AuthSchemeRegistry to org.apache.http.conn.SchemePortResolver", "operations": ["UPD QualifiedName: org.apache.http.auth.AuthSchemeRegistry from org.apache.http.auth.AuthSchemeRegistry to org.apache.http.conn.SchemePortResolver"]}, {"root": "UPDATE from org.apache.http.conn.scheme.Scheme to org.apache.http.conn.socket.ConnectionSocketFactory", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.Scheme from org.apache.http.conn.scheme.Scheme to org.apache.http.conn.socket.ConnectionSocketFactory"]}, {"root": "UPDATE from org.apache.http.conn.scheme.SchemeLayeredSocketFactory to org.apache.http.conn.socket.LayeredConnectionSocketFactory", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.SchemeLayeredSocketFactory from org.apache.http.conn.scheme.SchemeLayeredSocketFactory to org.apache.http.conn.socket.LayeredConnectionSocketFactory"]}, {"root": "UPDATE from org.apache.http.conn.scheme.SchemeRegistry to org.apache.http.conn.socket.PlainSocketFactory", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.SchemeRegistry from org.apache.http.conn.scheme.SchemeRegistry to org.apache.http.conn.socket.PlainSocketFactory"]}, {"root": "UPDATE from org.apache.http.cookie.CookieSpecFactory to org.apache.http.conn.ssl.SSLSocketFactory", "operations": ["UPD QualifiedName: org.apache.http.cookie.CookieSpecFactory from org.apache.http.cookie.CookieSpecFactory to org.apache.http.conn.ssl.SSLSocketFactory"]}, {"root": "UPDATE from org.apache.http.cookie.CookieSpecRegistry to org.apache.http.cookie.CookieSpecProvider", "operations": ["UPD QualifiedName: org.apache.http.cookie.CookieSpecRegistry from org.apache.http.cookie.CookieSpecRegistry to org.apache.http.cookie.CookieSpecProvider"]}, {"root": "UPDATE from org.apache.http.impl.conn.DefaultHttpRoutePlanner to org.apache.http.impl.conn.DefaultRoutePlanner", "operations": ["UPD QualifiedName: org.apache.http.impl.conn.DefaultHttpRoutePlanner from org.apache.http.impl.conn.DefaultHttpRoutePlanner to org.apache.http.impl.conn.DefaultRoutePlanner"]}, {"root": "UPDATE from org.apache.http.impl.conn.ProxySelectorRoutePlanner to org.apache.http.impl.conn.DefaultSchemePortResolver", "operations": ["UPD QualifiedName: org.apache.http.impl.conn.ProxySelectorRoutePlanner from org.apache.http.impl.conn.ProxySelectorRoutePlanner to org.apache.http.impl.conn.DefaultSchemePortResolver"]}, {"root": "UPDATE from org.apache.http.impl.conn.SchemeRegistryFactory to org.apache.http.impl.conn.SystemDefaultRoutePlanner", "operations": ["UPD QualifiedName: org.apache.http.impl.conn.SchemeRegistryFactory from org.apache.http.impl.conn.SchemeRegistryFactory to org.apache.http.impl.conn.SystemDefaultRoutePlanner"]}, {"root": "UPDATE from org.apache.http.protocol.ImmutableHttpProcessor to org.apache.http.protocol.HttpProcessorBuilder", "operations": ["UPD QualifiedName: org.apache.http.protocol.ImmutableHttpProcessor from org.apache.http.protocol.ImmutableHttpProcessor to org.apache.http.protocol.HttpProcessorBuilder"]}, {"root": "INS Javadoc to TypeDeclaration: class at 0", "operations": ["INS Javadoc to TypeDeclaration: class at 0", "INS TagElement to Javadoc at 0"]}, {"root": "INS Modifier: public to TypeDeclaration: class at 3", "operations": ["INS Modifier: public to TypeDeclaration: class at 3"]}, {"root": "INS SimpleName: HttpClientBuilder to TypeDeclaration: class at 4", "operations": ["INS SimpleName: HttpClientBuilder to TypeDeclaration: class at 4"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 8", "INS SimpleType: LayeredConnectionSocketFactory to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: LayeredConnectionSocketFactory to SimpleType: LayeredConnectionSocketFactory at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: schemePortResolver to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: SchemePortResolver to SimpleType: SchemePortResolver at 0", "INS SimpleType: SchemePortResolver to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 28", "operations": ["INS SimpleType: Lookup to ParameterizedType: Lookup<AuthSchemeProvider> at 0", "INS SimpleName: Lookup to SimpleType: Lookup at 0", "INS FieldDeclaration to TypeDeclaration: class at 28", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: AuthSchemeProvider to ParameterizedType: Lookup<AuthSchemeProvider> at 1", "INS ParameterizedType: Lookup<AuthSchemeProvider> to FieldDeclaration at 1", "INS SimpleName: AuthSchemeProvider to SimpleType: AuthSchemeProvider at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: authSchemeRegistry to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 29", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: CookieSpecProvider to SimpleType: CookieSpecProvider at 0", "INS FieldDeclaration to TypeDeclaration: class at 29", "INS SimpleType: Lookup to ParameterizedType: Lookup<CookieSpecProvider> at 0", "INS ParameterizedType: Lookup<CookieSpecProvider> to FieldDeclaration at 1", "INS SimpleType: CookieSpecProvider to ParameterizedType: Lookup<CookieSpecProvider> at 1", "INS SimpleName: cookieSpecRegistry to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: Lookup to SimpleType: Lookup at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 47", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 47", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: setSSLSocketFactory to MethodDeclaration at 3", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: LayeredConnectionSocketFactory to SimpleType: LayeredConnectionSocketFactory at 0", "INS SimpleType: LayeredConnectionSocketFactory to SingleVariableDeclaration at 1", "INS Modifier: final to MethodDeclaration at 1", "INS SimpleName: sslSocketFactory to SingleVariableDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 49", "operations": ["INS ThisExpression to FieldAccess at 0", "INS MethodDeclaration to TypeDeclaration: class at 49", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: HttpClientBuilder to MethodDeclaration at 2", "INS Modifier: final to MethodDeclaration at 1", "INS SimpleType: SchemePortResolver to SingleVariableDeclaration at 1", "INS SimpleName: schemePortResolver to SingleVariableDeclaration at 2", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: schemePortResolver to FieldAccess at 1", "INS SimpleName: schemePortResolver to Assignment: = at 1", "INS SimpleName: HttpClientBuilder to SimpleType: HttpClientBuilder at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ExpressionStatement to Block at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: setSchemePortResolver to MethodDeclaration at 3", "INS Block to MethodDeclaration at 5"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 81", "operations": ["INS SimpleName: SchemePortResolver to SimpleType: SchemePortResolver at 0", "INS IfStatement to Block at 32", "INS Block to IfStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: schemePortResolver to Assignment: = at 0", "INS SimpleType: RegistryBuilder to ParameterizedType: RegistryBuilder<AuthSchemeProvider> at 0", "INS SimpleName: defaultCookieStore to ClassInstanceCreation at 6", "INS QualifiedName: CookiePolicy.NETSCAPE to MethodInvocation at 2", "INS IfStatement to Block at 34", "INS ThisExpression to FieldAccess at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to MethodDeclaration at 3", "INS Block to IfStatement at 1", "INS ParameterizedType: Lookup<CookieSpecProvider> to VariableDeclarationStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: create to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS IfStatement to Block at 15", "INS SimpleName: schemePortResolver to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: b to VariableDeclarationFragment at 0", "INS MethodDeclaration to TypeDeclaration: class at 81", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleType: AuthSchemeProvider to MethodInvocation at 1", "INS SimpleType: SchemePortResolver to VariableDeclarationStatement at 0", "INS SimpleName: cookieSpecRegistry to ClassInstanceCreation at 4", "INS MethodInvocation to MethodInvocation at 0", "INS ParameterizedType: RegistryBuilder<CookieSpecProvider> to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 33", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: routePlanner to ClassInstanceCreation at 3", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: connManager to ClassInstanceCreation at 2", "INS SimpleName: create to MethodInvocation at 2", "INS ParameterizedType: RegistryBuilder<AuthSchemeProvider> to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS QualifiedName: CookiePolicy.IGNORE_COOKIES to MethodInvocation at 2", "INS SimpleName: schemePortResolver to FieldAccess at 1", "INS SimpleName: RegistryBuilder to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 39", "INS SimpleName: execChain to ClassInstanceCreation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: CookieSpecProvider to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: b to VariableDeclarationFragment at 0", "INS SimpleType: AuthSchemeProvider to ParameterizedType: RegistryBuilder<AuthSchemeProvider> at 1", "INS QualifiedName: CookiePolicy.BEST_MATCH to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: authSchemeRegistry to ClassInstanceCreation at 5", "INS SimpleName: build to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS QualifiedName: CookiePolicy.RFC_2109 to MethodInvocation at 2", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: schemePortResolver to InfixExpression: == at 0", "INS QualifiedName: DefaultSchemePortResolver.INSTANCE to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: defaultCredentialsProvider to ClassInstanceCreation at 7", "INS VariableDeclarationStatement to Block at 14", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS FieldAccess to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 1"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @since to Javadoc at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "UPDATE from Map<String,CookieSpecFactory> to Map<String,AuthSchemeProvider>", "operations": ["UPD ParameterizedType: Map<String,CookieSpecFactory> from Map<String,CookieSpecFactory> to Map<String,AuthSchemeProvider>"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "UPDATE from Map<String,AuthSchemeFactory> to Map<String,CookieSpecProvider>", "operations": ["UPD ParameterizedType: Map<String,AuthSchemeFactory> from Map<String,AuthSchemeFactory> to Map<String,CookieSpecProvider>"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 5", "MOV SimpleType: HttpClientBuilder to MethodDeclaration at 2"]}, {"root": "INS SimpleType: HttpClientBuilder to MethodDeclaration at 2", "operations": ["INS SimpleType: HttpClientBuilder to MethodDeclaration at 2", "INS SimpleName: HttpClientBuilder to SimpleType: HttpClientBuilder at 0"]}, {"root": "UPDATE from setSSLSocketFactory to setAuthSchemeRegistry", "operations": ["UPD SimpleName: setSSLSocketFactory from setSSLSocketFactory to setAuthSchemeRegistry"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS SimpleName: authSchemeRegistry to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: authSchemeRegistry to FieldAccess at 1", "INS Block to MethodDeclaration at 5", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to ReturnStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "UPDATE from setParams to setCookieSpecRegistry", "operations": ["UPD SimpleName: setParams from setParams to setCookieSpecRegistry"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: CloseableHttpClient to MethodDeclaration at 1", "MOV SimpleName: build to MethodDeclaration at 2", "MOV Modifier: public to MethodDeclaration at 0"]}, {"root": "MOVE from TagElement", "operations": ["MOV TagElement: @link to TagElement at 0", "MOV TextElement: </p> to TagElement at 25", "MOV TextElement: <ul> to TagElement at 7", "MOV TextElement: <li>java.home</li> to TagElement at 13", "MOV TextElement: <li>http.proxyPort</li> to TagElement at 20", "MOV TextElement: <li>javax.net.ssl.keyStoreType</li> to TagElement at 15", "MOV TextElement: <li>http.proxyHost</li> to TagElement at 19", "MOV TagElement: @link to TagElement at 5", "MOV TextElement: if the  to TagElement at 4", "MOV TextElement: <li>javax.net.ssl.trustStoreProvider</li> to TagElement at 11", "MOV TextElement: <li>ssl.TrustManagerFactory.algorithm</li> to TagElement at 8", "MOV TextElement: <li>http.nonProxyHosts</li> to TagElement at 21", "MOV TextElement: <li>javax.net.ssl.trustStorePassword</li> to TagElement at 12", "MOV TextElement: </ul> to TagElement at 24", "MOV TextElement: The following system properties are taken into account by this class to TagElement at 3", "MOV TextElement: <li>javax.net.ssl.keyStore</li> to TagElement at 16", "MOV TextElement: <li>javax.net.ssl.keyStorePassword</li> to TagElement at 18", "MOV TextElement:  method is called. to TagElement at 6", "MOV TextElement: <li>javax.net.ssl.trustStore</li> to TagElement at 10", "MOV TextElement:  builder. to TagElement at 1", "MOV TextElement: <p> to TagElement at 2", "MOV TextElement: <li>ssl.KeyManagerFactory.algorithm</li> to TagElement at 14", "MOV TextElement: <li>javax.net.ssl.keyStoreProvider</li> to TagElement at 17", "MOV TextElement: <li>http.keepAlive</li> to TagElement at 22", "MOV TextElement: <li>javax.net.ssl.trustStoreType</li> to TagElement at 9", "MOV TextElement: <li>http.maxConnections</li> to TagElement at 23"]}, {"root": "UPDATE from CookieSpecFactory to AuthSchemeProvider", "operations": ["UPD SimpleName: CookieSpecFactory from CookieSpecFactory to AuthSchemeProvider", "UPD SimpleName: CookieSpecFactory from CookieSpecFactory to AuthSchemeProvider", "UPD SimpleType: CookieSpecFactory from CookieSpecFactory to AuthSchemeProvider", "UPD SimpleName: AuthSchemeFactory from AuthSchemeFactory to AuthSchemeProvider", "UPD SimpleName: AuthSchemeRegistry from AuthSchemeRegistry to AuthSchemeProvider", "UPD SimpleName: AuthSchemeFactory from AuthSchemeFactory to AuthSchemeProvider", "UPD SimpleType: CookieSpecFactory from CookieSpecFactory to AuthSchemeProvider", "UPD SimpleName: SchemeLayeredSocketFactory from SchemeLayeredSocketFactory to AuthSchemeProvider", "UPD SimpleType: AuthSchemeFactory from AuthSchemeFactory to AuthSchemeProvider", "UPD SimpleType: AuthSchemeFactory from AuthSchemeFactory to AuthSchemeProvider", "UPD SimpleName: CookieSpecRegistry from CookieSpecRegistry to AuthSchemeProvider"]}, {"root": "UPDATE from AuthSchemeFactory to CookieSpecProvider", "operations": ["UPD SimpleName: AuthSchemeFactory from AuthSchemeFactory to CookieSpecProvider", "UPD SimpleType: E from E to CookieSpecProvider", "UPD SimpleType: Class from Class to CookieSpecProvider", "UPD SimpleName: HttpParams from HttpParams to CookieSpecProvider", "UPD SimpleName: CookieSpecFactory from CookieSpecFactory to CookieSpecProvider", "UPD SimpleType: AuthSchemeFactory from AuthSchemeFactory to CookieSpecProvider", "UPD SimpleType: CookieSpecFactory from CookieSpecFactory to CookieSpecProvider", "UPD SimpleType: CookieSpecFactory from CookieSpecFactory to CookieSpecProvider", "UPD SimpleType: AuthSchemeFactory from AuthSchemeFactory to CookieSpecProvider", "UPD SimpleName: AuthSchemeFactory from AuthSchemeFactory to CookieSpecProvider", "UPD SimpleName: CookieSpecFactory from CookieSpecFactory to CookieSpecProvider", "UPD SimpleName: Class from Class to CookieSpecProvider", "UPD SimpleName: E from E to CookieSpecProvider"]}, {"root": "INS ParameterizedType: Lookup<AuthSchemeProvider> to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: AuthSchemeProvider to ParameterizedType: Lookup<AuthSchemeProvider> at 1", "INS ParameterizedType: Lookup<AuthSchemeProvider> to SingleVariableDeclaration at 1", "INS SimpleName: Lookup to SimpleType: Lookup at 0", "INS SimpleType: Lookup to ParameterizedType: Lookup<AuthSchemeProvider> at 0"]}, {"root": "UPDATE from sslSocketFactory to authSchemeRegistry", "operations": ["UPD SimpleName: sslSocketFactory from sslSocketFactory to authSchemeRegistry", "UPD SimpleName: params from params to authSchemeRegistry", "UPD SimpleName: params from params to authSchemeRegistry", "UPD SimpleName: params from params to authSchemeRegistry"]}, {"root": "INS ParameterizedType: Lookup<CookieSpecProvider> to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: Lookup to ParameterizedType: Lookup<CookieSpecProvider> at 0", "INS SimpleName: CookieSpecProvider to SimpleType: CookieSpecProvider at 0", "INS SimpleType: CookieSpecProvider to ParameterizedType: Lookup<CookieSpecProvider> at 1", "INS ParameterizedType: Lookup<CookieSpecProvider> to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleName: cookieSpecRegistry to SingleVariableDeclaration at 2", "operations": ["INS SimpleName: cookieSpecRegistry to SingleVariableDeclaration at 2"]}, {"root": "UPDATE from authSchemeFactory to authSchemeProvider", "operations": ["UPD SimpleName: authSchemeFactory from authSchemeFactory to authSchemeProvider", "UPD SimpleName: authSchemeFactory from authSchemeFactory to authSchemeProvider"]}, {"root": "UPDATE from cookieSpecFactory to cookieSpecProvider", "operations": ["UPD SimpleName: cookieSpecFactory from cookieSpecFactory to cookieSpecProvider", "UPD SimpleName: cookieSpecFactory from cookieSpecFactory to cookieSpecProvider"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 13", "MOV VariableDeclarationStatement to Block at 2", "MOV ExpressionStatement to Block at 20", "MOV IfStatement to Block at 27", "MOV VariableDeclarationStatement to Block at 4", "MOV IfStatement to Block at 11", "MOV VariableDeclarationStatement to Block at 29", "MOV VariableDeclarationStatement to Block at 23", "MOV ExpressionStatement to Block at 21", "MOV IfStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 35", "MOV VariableDeclarationStatement to Block at 6", "MOV IfStatement to Block at 25", "MOV VariableDeclarationStatement to Block at 28", "MOV VariableDeclarationStatement to Block at 26", "MOV VariableDeclarationStatement to Block at 18", "MOV IfStatement to Block at 22", "MOV IfStatement to Block at 2", "MOV IfStatement to Block at 5", "MOV IfStatement to Block at 24", "MOV VariableDeclarationStatement to Block at 31", "MOV IfStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 10", "MOV ExpressionStatement to Block at 17", "MOV VariableDeclarationStatement to Block at 0", "MOV IfStatement to Block at 19", "MOV VariableDeclarationStatement to Block at 37", "MOV IfStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 12", "MOV VariableDeclarationStatement to Block at 16", "MOV VariableDeclarationStatement to Block at 8", "MOV IfStatement to Block at 38", "MOV IfStatement to Block at 9", "MOV IfStatement to Block at 30", "MOV IfStatement to Block at 7", "MOV IfStatement to Block at 36"]}, {"root": "UPDATE from SchemeLayeredSocketFactory to SchemePortResolver", "operations": ["UPD SimpleName: SchemeLayeredSocketFactory from SchemeLayeredSocketFactory to SchemePortResolver"]}, {"root": "MOVE from SimpleType: SchemePortResolver", "operations": ["MOV SimpleName: SchemeLayeredSocketFactory to SimpleType: SchemePortResolver at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 5", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS ParameterizedType: Lookup<AuthSchemeProvider> to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: Lookup to ParameterizedType: Lookup<AuthSchemeProvider> at 0", "INS SimpleType: AuthSchemeProvider to ParameterizedType: Lookup<AuthSchemeProvider> at 1", "INS SimpleName: AuthSchemeProvider to SimpleType: AuthSchemeProvider at 0", "INS ParameterizedType: Lookup<AuthSchemeProvider> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from SimpleType: AuthSchemeProvider", "operations": ["MOV SimpleName: SchemeLayeredSocketFactory to SimpleType: AuthSchemeProvider at 0"]}, {"root": "UPDATE from HashMap to Lookup", "operations": ["UPD SimpleType: HashMap from HashMap to Lookup", "UPD SimpleName: HashMap from HashMap to Lookup", "UPD SimpleName: HttpParams from HttpParams to Lookup", "UPD SimpleName: HttpParams from HttpParams to Lookup"]}, {"root": "MOVE from SimpleType: Lookup", "operations": ["MOV SimpleName: HttpParams to SimpleType: Lookup at 0"]}, {"root": "UPDATE from uniqueClasses to cookieSpecRegistry", "operations": ["UPD SimpleName: uniqueClasses from uniqueClasses to cookieSpecRegistry", "UPD SimpleName: previous from previous to cookieSpecRegistry", "UPD SimpleName: c from c to cookieSpecRegistry", "UPD SimpleName: params from params to cookieSpecRegistry", "UPD SimpleName: params from params to cookieSpecRegistry"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleType: String to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: defaultAgent to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS EnhancedForStatement to Block at 0", "INS IfStatement to Block at 4", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: requestFirst to InfixExpression: != at 0", "INS SimpleName: requestFirst to EnhancedForStatement at 1", "INS SimpleName: i to SingleVariableDeclaration at 1", "INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS Block to EnhancedForStatement at 2"]}, {"root": "INS IfStatement to Block at 10", "operations": ["INS IfStatement to Block at 10", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 11", "operations": ["INS IfStatement to Block at 11", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 17", "operations": ["INS NullLiteral to InfixExpression: != at 1", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 17", "INS SimpleName: requestLast to InfixExpression: != at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: requestLast to EnhancedForStatement at 1", "INS SimpleName: i to SingleVariableDeclaration at 1", "INS Block to IfStatement at 1", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS EnhancedForStatement to Block at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: i to MethodInvocation at 2"]}, {"root": "INS IfStatement to Block at 18", "operations": ["INS SimpleName: responseLast to EnhancedForStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS ExpressionStatement to Block at 0", "INS InfixExpression: != to IfStatement at 0", "INS IfStatement to Block at 18", "INS SimpleName: i to MethodInvocation at 2", "INS Block to EnhancedForStatement at 2", "INS Block to IfStatement at 1", "INS SimpleName: i to SingleVariableDeclaration at 1", "INS EnhancedForStatement to Block at 0", "INS SimpleName: responseLast to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "MOVE from ParameterizedType: Lookup<CookieSpecProvider>", "operations": ["MOV SimpleType: HashMap to ParameterizedType: Lookup<CookieSpecProvider> at 0"]}, {"root": "MOVE from ParameterizedType: Lookup<CookieSpecProvider>", "operations": ["MOV SimpleType: Class to ParameterizedType: Lookup<CookieSpecProvider> at 1"]}, {"root": "INS FieldAccess to VariableDeclarationFragment at 1", "operations": ["INS FieldAccess to VariableDeclarationFragment at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: InternalHttpClient to ClassInstanceCreation at 0"]}, {"root": "UPDATE from SchemeRegistry to LayeredConnectionSocketFactory", "operations": ["UPD SimpleName: SchemeRegistry from SchemeRegistry to LayeredConnectionSocketFactory", "UPD SimpleType: SchemeRegistry from SchemeRegistry to LayeredConnectionSocketFactory"]}, {"root": "UPDATE from != to ==", "operations": ["UPD InfixExpression: != from != to =="]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: PoolingHttpClientConnectionManager to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleType: HttpProcessorBuilder to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: HttpProcessorBuilder to VariableDeclarationStatement at 0"]}, {"root": "INS InfixExpression: != to IfStatement at 0", "operations": ["INS InfixExpression: != to IfStatement at 0", "INS SimpleName: responseFirst to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: responseFirst to EnhancedForStatement at 1", "INS EnhancedForStatement to Block at 0", "INS Block to EnhancedForStatement at 2", "INS Block to IfStatement at 1", "INS SimpleName: i to SingleVariableDeclaration at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV PrefixExpression: ! to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV PrefixExpression: ! to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV PrefixExpression: ! to IfStatement at 0"]}, {"root": "MOVE from SimpleType: Lookup", "operations": ["MOV SimpleName: HttpParams to SimpleType: Lookup at 0"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV ThisExpression to FieldAccess at 0", "MOV SimpleName: uniqueClasses to FieldAccess at 1"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS SimpleName: cookieSpecRegistry to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0"]}, {"root": "INS SimpleName: sslSocketFactory to VariableDeclarationFragment at 0", "operations": ["INS SimpleName: sslSocketFactory to VariableDeclarationFragment at 0"]}, {"root": "INS FieldAccess to VariableDeclarationFragment at 1", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to VariableDeclarationFragment at 1", "INS SimpleName: sslSocketFactory to FieldAccess at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: getSocketFactory to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: sslSocketFactory to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: sslSocketFactory to Assignment: = at 0", "INS SimpleName: systemProperties to IfStatement at 0", "INS Block to IfStatement at 2", "INS SimpleName: SSLSocketFactory to MethodInvocation at 0", "INS SimpleName: getSystemSocketFactory to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS QualifiedName: DefaultConnectionKeepAliveStrategy.INSTANCE to Assignment: = at 1", "operations": ["INS QualifiedName: DefaultConnectionKeepAliveStrategy.INSTANCE to Assignment: = at 1"]}, {"root": "INS QualifiedName: TargetAuthenticationStrategy.INSTANCE to Assignment: = at 1", "operations": ["INS QualifiedName: TargetAuthenticationStrategy.INSTANCE to Assignment: = at 1"]}, {"root": "INS QualifiedName: ProxyAuthenticationStrategy.INSTANCE to Assignment: = at 1", "operations": ["INS QualifiedName: ProxyAuthenticationStrategy.INSTANCE to Assignment: = at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV InfixExpression: + to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from ListBuilder to HttpProcessorBuilder", "operations": ["UPD SimpleName: ListBuilder from ListBuilder to HttpProcessorBuilder"]}, {"root": "MOVE from SimpleType: HttpProcessorBuilder", "operations": ["MOV SimpleName: ListBuilder to SimpleType: HttpProcessorBuilder at 0"]}, {"root": "UPDATE from reqincps to b", "operations": ["UPD SimpleName: reqincps from reqincps to b", "UPD SimpleName: reqlb from reqlb to b", "UPD SimpleName: reqlb from reqlb to b", "UPD SimpleName: reqlb from reqlb to b", "UPD SimpleName: reqlb from reqlb to b", "UPD SimpleName: authSchemeRegistry from authSchemeRegistry to b", "UPD SimpleName: reslb from reslb to b", "UPD SimpleName: reqlb from reqlb to b", "UPD SimpleName: cookieSpecRegistry from cookieSpecRegistry to b", "UPD SimpleName: authSchemeRegistry from authSchemeRegistry to b", "UPD SimpleName: reslb from reslb to b", "UPD SimpleName: reqlb from reqlb to b", "UPD SimpleName: reslb from reslb to b", "UPD SimpleName: reslb from reslb to b", "UPD SimpleName: reqlb from reqlb to b", "UPD SimpleName: setTcpNoDelay from setTcpNoDelay to b", "UPD SimpleName: HttpProtocolParams from HttpProtocolParams to b"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: HttpProcessorBuilder to MethodInvocation at 0", "INS SimpleName: create to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS SimpleName: authSchemeRegistry to Assignment: = at 0", "operations": ["INS SimpleName: authSchemeRegistry to Assignment: = at 0"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: b to MethodInvocation at 0"]}, {"root": "UPDATE from List to RegistryBuilder", "operations": ["UPD SimpleType: List from List to RegistryBuilder", "UPD SimpleName: CookieSpecRegistry from CookieSpecRegistry to RegistryBuilder", "UPD SimpleName: List from List to RegistryBuilder", "UPD SimpleName: register from register to RegistryBuilder"]}, {"root": "MOVE from ParameterizedType: RegistryBuilder<CookieSpecProvider>", "operations": ["MOV SimpleType: List to ParameterizedType: RegistryBuilder<CookieSpecProvider> at 0", "MOV SimpleType: E to ParameterizedType: RegistryBuilder<CookieSpecProvider> at 1"]}, {"root": "UPDATE from HttpProtocolParams to register", "operations": ["UPD SimpleName: HttpProtocolParams from HttpProtocolParams to register", "UPD SimpleName: params from params to register", "UPD SimpleName: params from params to register", "UPD SimpleName: name from name to register", "UPD SimpleName: setContentCharset from setContentCharset to register", "UPD SimpleName: setVersion from setVersion to register"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV QualifiedName: HTTP.DEF_CONTENT_CHARSET to MethodInvocation at 2", "MOV SimpleName: name to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "UPDATE from HashMap<String,CookieSpecFactory> to HashMap<String,AuthSchemeProvider>", "operations": ["UPD ParameterizedType: HashMap<String,CookieSpecFactory> from HashMap<String,CookieSpecFactory> to HashMap<String,AuthSchemeProvider>"]}, {"root": "UPDATE from HashMap<String,AuthSchemeFactory> to HashMap<String,CookieSpecProvider>", "operations": ["UPD ParameterizedType: HashMap<String,AuthSchemeFactory> from HashMap<String,AuthSchemeFactory> to HashMap<String,CookieSpecProvider>"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: PoolingHttpClientConnectionManager to ClassInstanceCreation at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS SimpleName: register to MethodInvocation at 1", "INS SimpleName: register to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS StringLiteral: \"https\" to MethodInvocation at 2", "INS SimpleName: create to MethodInvocation at 2", "INS SimpleName: PlainSocketFactory to MethodInvocation at 0", "INS SimpleName: ConnectionSocketFactory to SimpleType: ConnectionSocketFactory at 0", "INS MethodInvocation to MethodInvocation at 0", "INS StringLiteral: \"http\" to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getSocketFactory to MethodInvocation at 1", "INS SimpleName: RegistryBuilder to MethodInvocation at 0", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleType: ConnectionSocketFactory to MethodInvocation at 1", "INS SimpleName: sslSocketFactory to MethodInvocation at 3"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV InfixExpression: != to ConditionalExpression at 0"]}, {"root": "INS SimpleName: defaultAgent to ClassInstanceCreation at 1", "operations": ["INS SimpleName: defaultAgent to ClassInstanceCreation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: reqincps to MethodInvocation at 0", "MOV SimpleName: size to MethodInvocation at 1"]}, {"root": "UPDATE from params to build", "operations": ["UPD SimpleName: params from params to build", "UPD SimpleName: size from size to build"]}, {"root": "MOVE from SimpleType: RegistryBuilder", "operations": ["MOV SimpleName: CookieSpecRegistry to SimpleType: RegistryBuilder at 0"]}, {"root": "MOVE from SimpleType: AuthSchemeProvider", "operations": ["MOV SimpleName: CookieSpecRegistry to SimpleType: AuthSchemeProvider at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3", "MOV SimpleName: register to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3", "MOV SimpleName: register to MethodInvocation at 1", "MOV QualifiedName: AuthPolicy.KERBEROS to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: HttpProtocolParams to MethodInvocation at 1", "MOV SimpleName: params to MethodInvocation at 1", "MOV SimpleName: setContentCharset to MethodInvocation at 1"]}, {"root": "UPDATE from HTTP.DEF_CONTENT_CHARSET to CookiePolicy.RFC_2965", "operations": ["UPD QualifiedName: HTTP.DEF_CONTENT_CHARSET from HTTP.DEF_CONTENT_CHARSET to CookiePolicy.RFC_2965"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: params to MethodInvocation at 1", "MOV SimpleName: setTcpNoDelay to MethodInvocation at 0"]}, {"root": "INS QualifiedName: DefaultConnectionReuseStrategy.INSTANCE to Assignment: = at 1", "operations": ["INS QualifiedName: DefaultConnectionReuseStrategy.INSTANCE to Assignment: = at 1"]}, {"root": "INS QualifiedName: DefaultUserTokenHandler.INSTANCE to Assignment: = at 1", "operations": ["INS QualifiedName: DefaultUserTokenHandler.INSTANCE to Assignment: = at 1"]}, {"root": "INS QualifiedName: NoopUserTokenHandler.INSTANCE to Assignment: = at 1", "operations": ["INS QualifiedName: NoopUserTokenHandler.INSTANCE to Assignment: = at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: HttpRequestInterceptor to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: HttpResponseInterceptor to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 2"]}, {"root": "UPDATE from addAll to add", "operations": ["UPD SimpleName: addAll from addAll to add", "UPD SimpleName: addAll from addAll to add"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 2"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: HttpRequestInterceptor to SingleVariableDeclaration at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: HttpResponseInterceptor to SingleVariableDeclaration at 0"]}, {"root": "INS QualifiedName: DefaultHttpRequestRetryHandler.INSTANCE to Assignment: = at 1", "operations": ["INS QualifiedName: DefaultHttpRequestRetryHandler.INSTANCE to Assignment: = at 1"]}, {"root": "INS QualifiedName: DefaultRedirectStrategy.INSTANCE to Assignment: = at 1", "operations": ["INS QualifiedName: DefaultRedirectStrategy.INSTANCE to Assignment: = at 1"]}, {"root": "MOVE from SimpleType: AuthSchemeProvider", "operations": ["MOV SimpleName: AuthSchemeRegistry to SimpleType: AuthSchemeProvider at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3", "MOV SimpleName: register to MethodInvocation at 1", "MOV QualifiedName: AuthPolicy.SPNEGO to MethodInvocation at 2"]}, {"root": "UPDATE from Map.Entry<String,AuthSchemeFactory> to Map.Entry<String,AuthSchemeProvider>", "operations": ["UPD ParameterizedType: Map.Entry<String,AuthSchemeFactory> from Map.Entry<String,AuthSchemeFactory> to Map.Entry<String,AuthSchemeProvider>"]}, {"root": "MOVE from SimpleType: CookieSpecProvider", "operations": ["MOV SimpleName: HttpParams to SimpleType: CookieSpecProvider at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "UPDATE from Map.Entry<String,CookieSpecFactory> to Map.Entry<String,CookieSpecProvider>", "operations": ["UPD ParameterizedType: Map.Entry<String,CookieSpecFactory> from Map.Entry<String,CookieSpecFactory> to Map.Entry<String,CookieSpecProvider>"]}, {"root": "UPDATE from ProxySelectorRoutePlanner to SystemDefaultRoutePlanner", "operations": ["UPD SimpleName: ProxySelectorRoutePlanner from ProxySelectorRoutePlanner to SystemDefaultRoutePlanner", "UPD SimpleType: ProxySelectorRoutePlanner from ProxySelectorRoutePlanner to SystemDefaultRoutePlanner"]}, {"root": "INS SimpleName: schemePortResolver to ClassInstanceCreation at 1", "operations": ["INS SimpleName: schemePortResolver to ClassInstanceCreation at 1"]}, {"root": "UPDATE from DefaultHttpRoutePlanner to DefaultRoutePlanner", "operations": ["UPD SimpleType: DefaultHttpRoutePlanner from DefaultHttpRoutePlanner to DefaultRoutePlanner", "UPD SimpleName: DefaultHttpRoutePlanner from DefaultHttpRoutePlanner to DefaultRoutePlanner"]}, {"root": "INS SimpleName: schemePortResolver to ClassInstanceCreation at 1", "operations": ["INS SimpleName: schemePortResolver to ClassInstanceCreation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV QualifiedName: AuthPolicy.NTLM to MethodInvocation at 2", "MOV ClassInstanceCreation to MethodInvocation at 3", "MOV SimpleName: register to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "INS QualifiedName: DefaultConnectionReuseStrategy.INSTANCE to Assignment: = at 1", "operations": ["INS QualifiedName: DefaultConnectionReuseStrategy.INSTANCE to Assignment: = at 1"]}, {"root": "INS QualifiedName: NoConnectionReuseStrategy.INSTANCE to Assignment: = at 1", "operations": ["INS QualifiedName: NoConnectionReuseStrategy.INSTANCE to Assignment: = at 1"]}, {"root": "UPDATE from add to addFirst", "operations": ["UPD SimpleName: add from add to addFirst", "UPD SimpleName: add from add to addFirst"]}, {"root": "INS SimpleName: i to MethodInvocation at 2", "operations": ["INS SimpleName: i to MethodInvocation at 2"]}, {"root": "INS SimpleName: i to MethodInvocation at 2", "operations": ["INS SimpleName: i to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: build to MethodInvocation at 1", "MOV SimpleName: reqlb to MethodInvocation at 0"]}, {"root": "UPDATE from build to addLast", "operations": ["UPD SimpleName: build from build to addLast", "UPD SimpleName: build from build to addLast"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: reslb to MethodInvocation at 0", "MOV SimpleName: build to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV QualifiedName: AuthPolicy.DIGEST to MethodInvocation at 2", "MOV SimpleName: register to MethodInvocation at 1", "MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: params to MethodInvocation at 1", "MOV QualifiedName: HttpVersion.HTTP_1_1 to MethodInvocation at 2", "MOV SimpleName: HttpProtocolParams to MethodInvocation at 0", "MOV SimpleName: setVersion to MethodInvocation at 1"]}, {"root": "UPDATE from HttpVersion.HTTP_1_1 to CookiePolicy.BROWSER_COMPATIBILITY", "operations": ["UPD QualifiedName: HttpVersion.HTTP_1_1 from HttpVersion.HTTP_1_1 to CookiePolicy.BROWSER_COMPATIBILITY"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "UPDATE from register to SSLSocketFactory", "operations": ["UPD SimpleName: register from register to SSLSocketFactory"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: register to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: authSchemeRegistry to MethodInvocation at 0", "MOV QualifiedName: AuthPolicy.BASIC to MethodInvocation at 2", "MOV SimpleName: register to MethodInvocation at 1", "MOV ClassInstanceCreation to MethodInvocation at 3"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Collection"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.List", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.http.params.CoreConnectionPNames"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.http.params.CoreProtocolPNames"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.http.params.HttpConnectionParams", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.http.params.HttpParams", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.http.params.HttpProtocolParams", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.http.params.SyncBasicHttpParams"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.http.protocol.HTTP", "DEL ImportDeclaration"]}, {"root": "DEL Javadoc", "operations": ["DEL Javadoc", "DEL TextElement: <li>", "DEL TagElement: @link", "DEL SimpleName: STRICT_TRANSFER_ENCODING", "DEL QualifiedName: org.apache.http.client.params.ClientPNames", "DEL SimpleName: CONN_MANAGER_TIMEOUT", "DEL MemberRef", "DEL QualifiedName: org.apache.http.conn.params.ConnRoutePNames", "DEL TextElement: </li>", "DEL TextElement: </li>", "DEL QualifiedName: org.apache.http.params.CoreConnectionPNames", "DEL TextElement: </li>", "DEL TextElement: </li>", "DEL MemberRef", "DEL TextElement: <li>", "DEL TagElement: @link", "DEL TextElement: </li>", "DEL TextElement: <li>SocketBufferSize: 8192</li>", "DEL TextElement: <li>UserAgent: Apache-HttpClient/release (java 1.5)</li>", "DEL SimpleName: USER_AGENT", "DEL TagElement", "DEL TextElement: <li>", "DEL TextElement: <li>", "DEL SimpleName: CREDENTIAL_CHARSET", "DEL TextElement: </li>", "DEL TextElement: </li>", "DEL TagElement: @link", "DEL TagElement: @link", "DEL QualifiedName: org.apache.http.params.CoreProtocolPNames", "DEL SimpleName: SO_TIMEOUT", "DEL SimpleName: HANDLE_REDIRECTS", "DEL TagElement: @link", "DEL QualifiedName: org.apache.http.params.CoreConnectionPNames", "DEL TextElement: </li>", "DEL TagElement: @link", "DEL TextElement: <li>", "DEL MemberRef", "DEL TextElement: </li>", "DEL TextElement: </li>", "DEL TextElement: </li>", "DEL MemberRef", "DEL SimpleName: MAX_LINE_LENGTH", "DEL QualifiedName: org.apache.http.client.params.ClientPNames", "DEL TextElement: </li>", "DEL TextElement: <li>", "DEL QualifiedName: org.apache.http.params.CoreConnectionPNames", "DEL QualifiedName: org.apache.http.client.params.ClientPNames", "DEL QualifiedName: org.apache.http.auth.params.AuthPNames", "DEL TextElement: </li>", "DEL MemberRef", "DEL TextElement: <li>", "DEL TextElement: </li>", "DEL MemberRef", "DEL SimpleName: TCP_NODELAY", "DEL MemberRef", "DEL SimpleName: COOKIE_POLICY", "DEL MemberRef", "DEL MemberRef", "DEL MemberRef", "DEL TextElement: </li>", "DEL TextElement: </li>", "DEL SimpleName: DEFAULT_HEADERS", "DEL TagElement: @link", "DEL TextElement: <li>", "DEL MemberRef", "DEL TextElement: This class sets up the following parameters if not explicitly set:", "DEL TagElement: @link", "DEL QualifiedName: org.apache.http.params.CoreConnectionPNames", "DEL TextElement: <li>", "DEL MemberRef", "DEL TagElement: @link", "DEL SimpleName: MAX_HEADER_COUNT", "DEL TagElement: @link", "DEL SimpleName: SO_REUSEADDR", "DEL MemberRef", "DEL TextElement: <li>", "DEL SimpleName: ALLOW_CIRCULAR_REDIRECTS", "DEL TagElement: @link", "DEL MemberRef", "DEL QualifiedName: org.apache.http.params.CoreConnectionPNames", "DEL QualifiedName: org.apache.http.client.params.ClientPNames", "DEL MemberRef", "DEL SimpleName: HTTP_ELEMENT_CHARSET", "DEL TagElement: @link", "DEL QualifiedName: org.apache.http.client.params.ClientPNames", "DEL TextElement: </li>", "DEL TextElement: </li>", "DEL TextElement: <li>", "DEL QualifiedName: org.apache.http.client.params.ClientPNames", "DEL TagElement: @link", "DEL MemberRef", "DEL TagElement: @link", "DEL SimpleName: MAX_REDIRECTS", "DEL TagElement: @link", "DEL TagElement: @link", "DEL SimpleName: HANDLE_AUTHENTICATION", "DEL SimpleName: STALE_CONNECTION_CHECK", "DEL TextElement: </li>", "DEL TextElement: <li>", "DEL QualifiedName: org.apache.http.client.params.ClientPNames", "DEL SimpleName: CONNECTION_TIMEOUT", "DEL TextElement: </li>", "DEL TextElement: The following parameters can be used to customize the behavior of ", "DEL TagElement: @link", "DEL TagElement: @link", "DEL TextElement: <li>", "DEL TextElement: <li>", "DEL TextElement: <ul>", "DEL TextElement: <li>", "DEL TagElement: @link", "DEL QualifiedName: org.apache.http.params.CoreConnectionPNames", "DEL MemberRef", "DEL QualifiedName: org.apache.http.params.CoreProtocolPNames", "DEL MemberRef", "DEL QualifiedName: org.apache.http.client.params.ClientPNames", "DEL TextElement: <li>", "DEL QualifiedName: org.apache.http.params.CoreProtocolPNames", "DEL TextElement: </li>", "DEL TextElement: <li>", "DEL TagElement: @link", "DEL QualifiedName: org.apache.http.params.CoreConnectionPNames", "DEL TextElement: <p>", "DEL QualifiedName: org.apache.http.cookie.params.CookieSpecPNames", "DEL SimpleName: DEFAULT_HOST", "DEL TextElement: <li>Version: HttpVersion.HTTP_1_1</li>", "DEL QualifiedName: org.apache.http.conn.params.ConnRoutePNames", "DEL MemberRef", "DEL SimpleName: SO_LINGER", "DEL SimpleName: USE_EXPECT_CONTINUE", "DEL TextElement: <li>", "DEL MemberRef", "DEL TextElement: <li>NoTcpDelay: true</li>", "DEL TextElement: <li>", "DEL TextElement: <li>", "DEL TextElement: </li>", "DEL TextElement: <li>", "DEL QualifiedName: org.apache.http.params.CoreConnectionPNames", "DEL TextElement: <li>", "DEL MemberRef", "DEL TextElement: </li>", "DEL TextElement: </ul>", "DEL TextElement: </li>", "DEL TextElement: <li>ContentCharset: HTTP.DEFAULT_CONTENT_CHARSET</li>", "DEL TagElement: @link", "DEL TextElement: <ul>", "DEL MemberRef", "DEL QualifiedName: org.apache.http.cookie.params.CookieSpecPNames", "DEL TextElement: <li>", "DEL TextElement: <li>", "DEL TextElement: produced by this builder:", "DEL MemberRef", "DEL QualifiedName: org.apache.http.params.CoreProtocolPNames", "DEL TextElement: </li>", "DEL QualifiedName: org.apache.http.conn.params.ConnRoutePNames", "DEL TagElement: @link", "DEL TextElement: </li>", "DEL QualifiedName: org.apache.http.params.CoreProtocolPNames", "DEL SimpleName: VIRTUAL_HOST", "DEL TagElement: @link", "DEL MemberRef", "DEL TagElement: @link", "DEL SimpleName: DATE_PATTERNS", "DEL TextElement: <li>", "DEL TagElement: @link", "DEL TagElement: @link", "DEL TagElement: @link", "DEL TextElement: </li>", "DEL TagElement: @link", "DEL MemberRef", "DEL MemberRef", "DEL TextElement: </li>", "DEL TextElement: <li>", "DEL QualifiedName: org.apache.http.params.CoreProtocolPNames", "DEL TagElement: @link", "DEL TextElement: </li>", "DEL TextElement: <li>", "DEL MemberRef", "DEL SimpleName: HttpClient", "DEL QualifiedName: org.apache.http.client.params.ClientPNames", "DEL MemberRef", "DEL TagElement: @link", "DEL SimpleName: SINGLE_COOKIE_HEADER", "DEL SimpleName: DEFAULT_PROXY", "DEL SimpleName: SOCKET_BUFFER_SIZE", "DEL TagElement: @link", "DEL TextElement: <p>", "DEL QualifiedName: org.apache.http.params.CoreConnectionPNames", "DEL SimpleName: LOCAL_ADDRESS", "DEL TextElement: <li>", "DEL MemberRef", "DEL TextElement: <li>", "DEL TextElement: </ul>", "DEL TextElement: <li>", "DEL MemberRef", "DEL SimpleName: PROTOCOL_VERSION", "DEL SimpleName: WAIT_FOR_CONTINUE", "DEL TextElement: </li>", "DEL SimpleName: FORCED_ROUTE"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL SimpleName: HttpClientBuilder", "operations": ["DEL SimpleName: HttpClientBuilder"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL SimpleType: SchemeLayeredSocketFactory", "DEL FieldDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: params", "DEL FieldDeclaration", "DEL SimpleName: HttpParams", "DEL VariableDeclarationFragment", "DEL SimpleType: HttpParams", "DEL Modifier: private"]}, {"root": "DEL SimpleType: SchemeLayeredSocketFactory", "operations": ["DEL SimpleType: SchemeLayeredSocketFactory"]}, {"root": "DEL SimpleType: HttpParams", "operations": ["DEL SimpleType: HttpParams"]}, {"root": "DEL SimpleName: params", "operations": ["DEL SimpleName: params"]}, {"root": "DEL SimpleName: schemeRegistry", "operations": ["DEL SimpleName: schemeRegistry"]}, {"root": "DEL ConditionalExpression", "operations": ["DEL MethodInvocation", "DEL SimpleName: systemProperties", "DEL SimpleName: createSystemDefault", "DEL SimpleName: SchemeRegistryFactory", "DEL SimpleName: createDefault", "DEL SimpleName: SchemeRegistryFactory", "DEL ConditionalExpression", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: Scheme", "DEL StringLiteral: \"https\"", "DEL SimpleName: sslSocketFactory", "DEL SimpleName: schemeRegistry", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleType: Scheme", "DEL NumberLiteral: 443"]}, {"root": "DEL SimpleName: schemeRegistry", "operations": ["DEL SimpleName: schemeRegistry"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: DefaultConnectionReuseStrategy", "DEL SimpleType: DefaultConnectionReuseStrategy", "DEL ClassInstanceCreation"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: NoConnectionReuseStrategy", "DEL SimpleType: NoConnectionReuseStrategy", "DEL ClassInstanceCreation"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: DefaultConnectionReuseStrategy", "DEL SimpleName: DefaultConnectionReuseStrategy"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: DefaultConnectionKeepAliveStrategy", "DEL SimpleType: DefaultConnectionKeepAliveStrategy", "DEL ClassInstanceCreation"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: TargetAuthenticationStrategy", "DEL SimpleName: TargetAuthenticationStrategy"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: ProxyAuthenticationStrategy", "DEL SimpleType: ProxyAuthenticationStrategy", "DEL ClassInstanceCreation"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: DefaultUserTokenHandler", "DEL SimpleType: DefaultUserTokenHandler"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: NoopUserTokenHandler", "DEL SimpleName: NoopUserTokenHandler", "DEL ClassInstanceCreation"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL ParenthesizedExpression", "operations": ["DEL ParenthesizedExpression"]}, {"root": "DEL ParameterizedType: ListBuilder<HttpRequestInterceptor>", "operations": ["DEL SimpleType: ListBuilder", "DEL ParameterizedType: ListBuilder<HttpRequestInterceptor>"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: ListBuilder", "DEL SimpleType: HttpRequestInterceptor", "DEL SimpleName: ListBuilder", "DEL ClassInstanceCreation", "DEL SimpleName: HttpRequestInterceptor", "DEL ParameterizedType: ListBuilder<HttpRequestInterceptor>"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: addAll", "DEL ExpressionStatement", "DEL SimpleName: reqlb", "DEL MethodInvocation", "DEL SimpleName: requestFirst"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL IfStatement"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL SimpleName: requestLast", "operations": ["DEL SimpleName: requestLast"]}, {"root": "DEL SimpleName: responseFirst", "operations": ["DEL SimpleName: responseFirst"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: ListBuilder", "DEL SimpleType: HttpResponseInterceptor", "DEL ClassInstanceCreation", "DEL ParameterizedType: ListBuilder<HttpResponseInterceptor>", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: reslb", "DEL SimpleType: ListBuilder", "DEL SimpleName: ListBuilder", "DEL ParameterizedType: ListBuilder<HttpResponseInterceptor>", "DEL SimpleType: ListBuilder", "DEL SimpleName: HttpResponseInterceptor"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: addAll", "DEL SimpleName: reslb", "DEL SimpleName: responseLast", "DEL ExpressionStatement", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: List", "DEL SimpleType: HttpRequestInterceptor", "DEL ParameterizedType: List<HttpRequestInterceptor>", "DEL VariableDeclarationStatement", "DEL SimpleType: List", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: HttpRequestInterceptor", "DEL SimpleName: reqincps"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: resincps", "DEL ParameterizedType: List<HttpResponseInterceptor>", "DEL SimpleType: List", "DEL VariableDeclarationStatement", "DEL SimpleName: HttpResponseInterceptor", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleType: HttpResponseInterceptor", "DEL SimpleName: List"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: ImmutableHttpProcessor", "DEL ArrayCreation", "DEL SimpleName: resincps", "DEL ClassInstanceCreation", "DEL Dimension", "DEL MethodInvocation", "DEL SimpleName: resincps", "DEL Dimension", "DEL SimpleName: toArray", "DEL SimpleName: ImmutableHttpProcessor", "DEL SimpleName: size", "DEL SimpleName: reqincps", "DEL ArrayCreation", "DEL ArrayType: HttpRequestInterceptor[]", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: toArray", "DEL ArrayType: HttpResponseInterceptor[]", "DEL MethodInvocation"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: DefaultHttpRequestRetryHandler", "DEL SimpleType: DefaultHttpRequestRetryHandler"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getSchemeRegistry", "DEL SimpleName: connManager"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: connManager", "DEL SimpleName: getSchemeRegistry", "DEL MethodInvocation"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: DefaultRedirectStrategy", "DEL SimpleName: DefaultRedirectStrategy"]}, {"root": "DEL SimpleType: HttpParams", "operations": ["DEL SimpleType: HttpParams"]}, {"root": "DEL FieldAccess", "operations": ["DEL FieldAccess", "DEL ThisExpression", "DEL SimpleName: list"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: E", "DEL ParameterizedType: LinkedList<E>", "DEL SimpleType: LinkedList", "DEL SimpleName: LinkedList", "DEL SimpleName: E"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: remove", "DEL FieldAccess", "DEL MethodInvocation", "DEL SimpleName: getClass", "DEL SimpleName: e"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL BooleanLiteral: true", "DEL SimpleName: HttpConnectionParams"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ExpressionStatement", "DEL SimpleName: register", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: params", "DEL MethodDeclaration", "DEL Assignment: =", "DEL SimpleName: defaultCookieStore", "DEL ExpressionStatement", "DEL SimpleName: cookieSpecRegistry", "DEL MethodInvocation", "DEL SimpleName: authSchemeRegistry", "DEL ExpressionStatement", "DEL QualifiedName: CookiePolicy.RFC_2109", "DEL ExpressionStatement", "DEL SimpleName: register", "DEL SimpleName: defaultCredentialsProvider", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleType: AuthSchemeRegistry", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: register", "DEL ExpressionStatement", "DEL SimpleName: authSchemeRegistry", "DEL SimpleType: CookieSpecRegistry", "DEL SimpleType: AuthSchemeRegistry", "DEL SimpleType: CookieSpecRegistry", "DEL ClassInstanceCreation", "DEL SimpleName: cookieSpecRegistry", "DEL QualifiedName: CookiePolicy.IGNORE_COOKIES", "DEL SimpleName: register", "DEL SimpleName: cookieSpecRegistry", "DEL SimpleName: authSchemeRegistry", "DEL SimpleName: SyncBasicHttpParams", "DEL SimpleName: cookieSpecRegistry", "DEL QualifiedName: CookiePolicy.BEST_MATCH", "DEL SimpleName: routePlanner", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: AuthSchemeRegistry", "DEL ClassInstanceCreation", "DEL SimpleName: setDefaultHttpParams", "DEL MethodInvocation", "DEL SimpleName: connManager", "DEL ExpressionStatement", "DEL SimpleName: params", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: authSchemeRegistry", "DEL QualifiedName: CookiePolicy.BROWSER_COMPATIBILITY", "DEL SimpleName: execChain", "DEL QualifiedName: CookiePolicy.NETSCAPE", "DEL VariableDeclarationFragment", "DEL QualifiedName: CookiePolicy.RFC_2965", "DEL SimpleName: authSchemeRegistry", "DEL Block", "DEL SimpleName: register", "DEL IfStatement", "DEL SimpleName: cookieSpecRegistry", "DEL SimpleName: cookieSpecRegistry", "DEL SimpleName: cookieSpecRegistry", "DEL ClassInstanceCreation", "DEL SimpleType: SyncBasicHttpParams", "DEL SimpleName: authSchemeRegistry", "DEL SimpleName: params", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL ReturnStatement", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: cookieSpecRegistry"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL ParameterizedType: Class<?>", "DEL SimpleType: Collection", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: ListBuilder", "DEL SingleVariableDeclaration", "DEL SimpleName: c", "DEL ParameterizedType: ArrayList<E>", "DEL Block", "DEL SimpleName: Class", "DEL ThisExpression", "DEL SimpleType: E", "DEL SimpleName: E", "DEL SimpleType: E", "DEL SimpleName: e", "DEL ThisExpression", "DEL ReturnStatement", "DEL SimpleName: remove", "DEL Block", "DEL SimpleType: E", "DEL ExpressionStatement", "DEL Block", "DEL FieldAccess", "DEL MethodDeclaration", "DEL SimpleName: E", "DEL FieldAccess", "DEL ReturnStatement", "DEL SimpleType: E", "DEL SimpleType: Map", "DEL SimpleName: E", "DEL SingleVariableDeclaration", "DEL TypeDeclaration: class", "DEL SimpleName: e", "DEL Modifier: final", "DEL SimpleName: E", "DEL SimpleName: c", "DEL EnhancedForStatement", "DEL Modifier: private", "DEL SimpleName: build", "DEL ParameterizedType: Class<?>", "DEL Modifier: public", "DEL ParameterizedType: Collection<E>", "DEL SimpleName: LinkedList", "DEL MethodInvocation", "DEL SimpleName: E", "DEL Block", "DEL FieldDeclaration", "DEL SimpleType: LinkedList", "DEL EnhancedForStatement", "DEL ParameterizedType: HashMap<Class<?>,E>", "DEL SimpleName: addAll", "DEL InfixExpression: ==", "DEL TypeParameter", "DEL SimpleName: e", "DEL FieldDeclaration", "DEL Assignment: =", "DEL ExpressionStatement", "DEL ThisExpression", "DEL SimpleName: c", "DEL ExpressionStatement", "DEL SimpleType: E", "DEL MethodDeclaration", "DEL Block", "DEL ExpressionStatement", "DEL FieldAccess", "DEL SimpleName: e", "DEL Modifier: final", "DEL ClassInstanceCreation", "DEL SimpleName: E", "DEL SimpleName: uniqueClasses", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: previous", "DEL SimpleName: e", "DEL WildcardType: ?", "DEL ParameterizedType: Map<Class<?>,E>", "DEL SimpleName: list", "DEL SimpleName: add", "DEL SimpleName: addAll", "DEL SimpleName: add", "DEL Block", "DEL Modifier: static", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: list", "DEL ParameterizedType: LinkedList<E>", "DEL MethodInvocation", "DEL SimpleName: getClass", "DEL SimpleName: E", "DEL SimpleName: list", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL SimpleType: E", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: add", "DEL MethodDeclaration", "DEL Modifier: public", "DEL Modifier: public", "DEL SimpleName: list", "DEL FieldAccess", "DEL ReturnStatement", "DEL SimpleName: add", "DEL PrimitiveType: void", "DEL IfStatement", "DEL InfixExpression: ==", "DEL SimpleName: uniqueClasses", "DEL SimpleName: E", "DEL Modifier: public", "DEL SimpleType: ArrayList", "DEL ParameterizedType: List<E>", "DEL VariableDeclarationStatement", "DEL ReturnStatement", "DEL Modifier: final", "DEL IfStatement", "DEL SimpleType: E", "DEL Block", "DEL SimpleName: e", "DEL SimpleType: E", "DEL SimpleName: E", "DEL SimpleName: E", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL SimpleType: Class", "DEL SimpleName: c", "DEL SimpleName: Map", "DEL NullLiteral", "DEL FieldAccess", "DEL Block", "DEL IfStatement", "DEL InfixExpression: !=", "DEL SimpleType: E", "DEL WildcardType: ?", "DEL Block", "DEL SimpleName: put", "DEL SimpleName: ArrayList", "DEL SimpleName: uniqueClasses", "DEL ThisExpression", "DEL MethodDeclaration", "DEL Modifier: final", "DEL ThisExpression", "DEL SimpleName: ListBuilder", "DEL NullLiteral", "DEL SimpleName: Collection", "DEL Modifier: private", "DEL SimpleName: c", "DEL SimpleName: E", "DEL PrimitiveType: void", "DEL SimpleName: e", "DEL Block", "DEL NullLiteral", "DEL ExpressionStatement", "DEL SimpleType: E", "DEL SimpleName: previous", "DEL SimpleName: e", "DEL SingleVariableDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL TextElement: <li>", "DEL NumberLiteral: 8192", "DEL MethodInvocation", "DEL SimpleName: HTTP_CONTENT_CHARSET", "DEL MethodInvocation", "DEL SimpleName: CoreConnectionPNames", "DEL SimpleName: setSocketBufferSize", "DEL TagElement", "DEL SimpleName: PROTOCOL_VERSION", "DEL TextElement: : ISO-8859-1</li>", "DEL TextElement: : 1.1</li>", "DEL SingleVariableDeclaration", "DEL TagElement: @link", "DEL MemberRef", "DEL TextElement: <ul>", "DEL PrimitiveType: void", "DEL TextElement: <li>", "DEL ExpressionStatement", "DEL TagElement: @link", "DEL SimpleName: HttpConnectionParams", "DEL MemberRef", "DEL SimpleName: CoreProtocolPNames", "DEL TagElement: @link", "DEL TextElement: : 8192</li>", "DEL TextElement: : Apache-HttpClient/<release> (java 1.5)</li>", "DEL SimpleName: CoreProtocolPNames", "DEL SimpleName: setUserAgent", "DEL SimpleName: TCP_NODELAY", "DEL SimpleType: HttpParams", "DEL SimpleName: params", "DEL Javadoc", "DEL TagElement: @link", "DEL TextElement: Saves the default set of HttpParams in the provided parameter.", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: USER_AGENT", "DEL Modifier: public", "DEL TextElement: <li>", "DEL MemberRef", "DEL SimpleName: HttpProtocolParams", "DEL TextElement: <li>", "DEL Block", "DEL SimpleName: CoreConnectionPNames", "DEL TextElement: <li>", "DEL MethodInvocation", "DEL TagElement: @link", "DEL SimpleName: CoreProtocolPNames", "DEL SimpleName: params", "DEL ExpressionStatement", "DEL SimpleName: params", "DEL TextElement: : true</li>", "DEL TextElement: </ul>", "DEL MemberRef", "DEL Modifier: static", "DEL SimpleName: SOCKET_BUFFER_SIZE", "DEL TextElement: These are:", "DEL MemberRef", "DEL SimpleName: setDefaultHttpParams"]}]}}, {"HttpClientBuilder_diff": {"operations": ["Move ImportDeclaration(5) into CompilationUnit(2164) at 13", "Move ImportDeclaration(23) into CompilationUnit(2164) at 34", "Move ImportDeclaration(27) into CompilationUnit(2164) at 34", "Move ImportDeclaration(29) into CompilationUnit(2164) at 36", "Move ImportDeclaration(111) into CompilationUnit(2164) at 51", "Move ImportDeclaration(119) into CompilationUnit(2164) at 62", "Move ImportDeclaration(155) into CompilationUnit(2164) at 79", "Move FieldDeclaration(543) into TypeDeclaration: class(2163) at 26", "Move MethodDeclaration(668) into TypeDeclaration: class(2163) at 63", "Move MethodDeclaration(1144) into TypeDeclaration: class(2163) at 63", "Update QualifiedName: java.util.ArrayList(4) to org.apache.http.auth.AuthSchemeProvider", "Update QualifiedName: org.apache.http.HttpVersion(22) to org.apache.http.config.Lookup", "Update QualifiedName: org.apache.http.auth.AuthSchemeFactory(26) to org.apache.http.config.RegistryBuilder", "Update QualifiedName: org.apache.http.auth.AuthSchemeRegistry(28) to org.apache.http.conn.SchemePortResolver", "Update QualifiedName: org.apache.http.conn.scheme.Scheme(74) to org.apache.http.conn.socket.ConnectionSocketFactory", "Update QualifiedName: org.apache.http.conn.scheme.SchemeLayeredSocketFactory(76) to org.apache.http.conn.socket.LayeredConnectionSocketFactory", "Update QualifiedName: org.apache.http.conn.scheme.SchemeRegistry(78) to org.apache.http.conn.socket.PlainSocketFactory", "Update QualifiedName: org.apache.http.cookie.CookieSpecFactory(80) to org.apache.http.conn.ssl.SSLSocketFactory", "Update QualifiedName: org.apache.http.cookie.CookieSpecRegistry(82) to org.apache.http.cookie.CookieSpecProvider", "Update QualifiedName: org.apache.http.impl.conn.DefaultHttpRoutePlanner(120) to org.apache.http.impl.conn.DefaultRoutePlanner", "Update QualifiedName: org.apache.http.impl.conn.ProxySelectorRoutePlanner(122) to org.apache.http.impl.conn.DefaultSchemePortResolver", "Update QualifiedName: org.apache.http.impl.conn.SchemeRegistryFactory(124) to org.apache.http.impl.conn.SystemDefaultRoutePlanner", "Update QualifiedName: org.apache.http.protocol.ImmutableHttpProcessor(156) to org.apache.http.protocol.HttpProcessorBuilder", "Insert Javadoc(182) into TypeDeclaration: class(2163) at 0", "Insert Modifier: public(185) into TypeDeclaration: class(2163) at 2", "Insert SimpleName: HttpClientBuilder(186) into TypeDeclaration: class(2163) at 3", "Insert FieldDeclaration(198) into TypeDeclaration: class(2163) at 5", "Insert FieldDeclaration(210) into TypeDeclaration: class(2163) at 7", "Insert FieldDeclaration(327) into TypeDeclaration: class(2163) at 24", "Insert FieldDeclaration(336) into TypeDeclaration: class(2163) at 25", "Insert MethodDeclaration(472) into TypeDeclaration: class(2163) at 42", "Insert MethodDeclaration(512) into TypeDeclaration: class(2163) at 44", "Insert MethodDeclaration(2162) into TypeDeclaration: class(2163) at 76", "Insert TagElement(179) into Javadoc(182) at 0", "Move TagElement: @since(395) into Javadoc(182) at 1", "Insert Modifier: private(193) into FieldDeclaration(198) at 0", "Insert SimpleType: LayeredConnectionSocketFactory(195) into FieldDeclaration(198) at 1", "Move VariableDeclarationFragment(411) into FieldDeclaration(198) at 2", "Insert Modifier: private(205) into FieldDeclaration(210) at 0", "Insert SimpleType: SchemePortResolver(207) into FieldDeclaration(210) at 1", "Insert VariableDeclarationFragment(209) into FieldDeclaration(210) at 2", "Insert Modifier: private(319) into FieldDeclaration(327) at 0", "Insert ParameterizedType: Lookup<AuthSchemeProvider>(324) into FieldDeclaration(327) at 1", "Insert VariableDeclarationFragment(326) into FieldDeclaration(327) at 2", "Insert Modifier: private(328) into FieldDeclaration(336) at 0", "Insert ParameterizedType: Lookup<CookieSpecProvider>(333) into FieldDeclaration(336) at 1", "Insert VariableDeclarationFragment(335) into FieldDeclaration(336) at 2", "Update ParameterizedType: Map<String,CookieSpecFactory>(551) to Map<String,AuthSchemeProvider>", "Move VariableDeclarationFragment(542) into FieldDeclaration(347) at 2", "Update ParameterizedType: Map<String,AuthSchemeFactory>(540) to Map<String,CookieSpecProvider>", "Move VariableDeclarationFragment(553) into FieldDeclaration(358) at 2", "Insert Modifier: public(453) into MethodDeclaration(472) at 0", "Insert Modifier: final(454) into MethodDeclaration(472) at 1", "Move SimpleType: HttpClientBuilder(652) into MethodDeclaration(472) at 2", "Insert SimpleName: setSSLSocketFactory(457) into MethodDeclaration(472) at 3", "Insert SingleVariableDeclaration(462) into MethodDeclaration(472) at 4", "Move Block(667) into MethodDeclaration(472) at 5", "Insert Modifier: public(493) into MethodDeclaration(512) at 0", "Insert Modifier: final(494) into MethodDeclaration(512) at 1", "Insert SimpleType: HttpClientBuilder(496) into MethodDeclaration(512) at 2", "Insert SimpleName: setSchemePortResolver(497) into MethodDeclaration(512) at 3", "Insert SingleVariableDeclaration(502) into MethodDeclaration(512) at 4", "Insert Block(511) into MethodDeclaration(512) at 5", "Insert SimpleType: HttpClientBuilder(992) into MethodDeclaration(1011) at 2", "Update SimpleName: setSSLSocketFactory(653) to setAuthSchemeRegistry", "Insert Block(1010) into MethodDeclaration(1011) at 5", "Update SimpleName: setParams(1129) to setCookieSpecRegistry", "Move Modifier: public(1370) into MethodDeclaration(2162) at 0", "Move SimpleType: CloseableHttpClient(1372) into MethodDeclaration(2162) at 1", "Move SimpleName: build(1373) into MethodDeclaration(2162) at 2", "Insert Block(2161) into MethodDeclaration(2162) at 3", "Move TagElement: @link(169) into TagElement(179) at 0", "Move TextElement:  builder.(170) into TagElement(179) at 1", "Move TextElement: <p>(171) into TagElement(179) at 2", "Move TextElement: The following system properties are taken into account by this class(172) into TagElement(179) at 3", "Move TextElement: if the (173) into TagElement(179) at 4", "Move TagElement: @link(176) into TagElement(179) at 5", "Move TextElement:  method is called.(177) into TagElement(179) at 6", "Move TextElement: <ul>(178) into TagElement(179) at 7", "Move TextElement: <li>ssl.TrustManagerFactory.algorithm</li>(179) into TagElement(179) at 8", "Move TextElement: <li>javax.net.ssl.trustStoreType</li>(180) into TagElement(179) at 9", "Move TextElement: <li>javax.net.ssl.trustStore</li>(181) into TagElement(179) at 10", "Move TextElement: <li>javax.net.ssl.trustStoreProvider</li>(182) into TagElement(179) at 11", "Move TextElement: <li>javax.net.ssl.trustStorePassword</li>(183) into TagElement(179) at 12", "Move TextElement: <li>java.home</li>(184) into TagElement(179) at 13", "Move TextElement: <li>ssl.KeyManagerFactory.algorithm</li>(185) into TagElement(179) at 14", "Move TextElement: <li>javax.net.ssl.keyStoreType</li>(186) into TagElement(179) at 15", "Move TextElement: <li>javax.net.ssl.keyStore</li>(187) into TagElement(179) at 16", "Move TextElement: <li>javax.net.ssl.keyStoreProvider</li>(188) into TagElement(179) at 17", "Move TextElement: <li>javax.net.ssl.keyStorePassword</li>(189) into TagElement(179) at 18", "Move TextElement: <li>http.proxyHost</li>(190) into TagElement(179) at 19", "Move TextElement: <li>http.proxyPort</li>(191) into TagElement(179) at 20", "Move TextElement: <li>http.nonProxyHosts</li>(192) into TagElement(179) at 21", "Move TextElement: <li>http.keepAlive</li>(193) into TagElement(179) at 22", "Move TextElement: <li>http.maxConnections</li>(194) into TagElement(179) at 23", "Move TextElement: </ul>(195) into TagElement(179) at 24", "Move TextElement: </p>(196) into TagElement(179) at 25", "Insert SimpleName: LayeredConnectionSocketFactory(194) into SimpleType: LayeredConnectionSocketFactory(195) at 0", "Insert SimpleName: SchemePortResolver(206) into SimpleType: SchemePortResolver(207) at 0", "Insert SimpleName: schemePortResolver(208) into VariableDeclarationFragment(209) at 0", "Insert SimpleType: Lookup(321) into ParameterizedType: Lookup<AuthSchemeProvider>(324) at 0", "Insert SimpleType: AuthSchemeProvider(323) into ParameterizedType: Lookup<AuthSchemeProvider>(324) at 1", "Insert SimpleName: authSchemeRegistry(325) into VariableDeclarationFragment(326) at 0", "Insert SimpleType: Lookup(330) into ParameterizedType: Lookup<CookieSpecProvider>(333) at 0", "Insert SimpleType: CookieSpecProvider(332) into ParameterizedType: Lookup<CookieSpecProvider>(333) at 1", "Insert SimpleName: cookieSpecRegistry(334) into VariableDeclarationFragment(335) at 0", "Update SimpleType: CookieSpecFactory(550) to AuthSchemeProvider", "Update SimpleType: AuthSchemeFactory(539) to CookieSpecProvider", "Insert Modifier: final(458) into SingleVariableDeclaration(462) at 0", "Insert SimpleType: LayeredConnectionSocketFactory(460) into SingleVariableDeclaration(462) at 1", "Insert SimpleName: sslSocketFactory(461) into SingleVariableDeclaration(462) at 2", "Insert SimpleName: HttpClientBuilder(495) into SimpleType: HttpClientBuilder(496) at 0", "Insert Modifier: final(498) into SingleVariableDeclaration(502) at 0", "Insert SimpleType: SchemePortResolver(500) into SingleVariableDeclaration(502) at 1", "Insert SimpleName: schemePortResolver(501) into SingleVariableDeclaration(502) at 2", "Insert ExpressionStatement(508) into Block(511) at 0", "Insert ReturnStatement(510) into Block(511) at 1", "Insert SimpleName: HttpClientBuilder(991) into SimpleType: HttpClientBuilder(992) at 0", "Insert ParameterizedType: Lookup<AuthSchemeProvider>(999) into SingleVariableDeclaration(1001) at 1", "Update SimpleName: sslSocketFactory(657) to authSchemeRegistry", "Insert ExpressionStatement(1007) into Block(1010) at 0", "Insert ReturnStatement(1009) into Block(1010) at 1", "Insert ParameterizedType: Lookup<CookieSpecProvider>(1022) into SingleVariableDeclaration(1024) at 1", "Insert SimpleName: cookieSpecRegistry(1023) into SingleVariableDeclaration(1024) at 2", "Update SimpleType: AuthSchemeFactory(1197) to AuthSchemeProvider", "Update SimpleName: authSchemeFactory(1198) to authSchemeProvider", "Update SimpleType: CookieSpecFactory(1244) to CookieSpecProvider", "Update SimpleName: cookieSpecFactory(1245) to cookieSpecProvider", "Move VariableDeclarationStatement(1381) into Block(2161) at 0", "Move IfStatement(1392) into Block(2161) at 1", "Move VariableDeclarationStatement(1400) into Block(2161) at 2", "Move IfStatement(1513) into Block(2161) at 3", "Move VariableDeclarationStatement(1521) into Block(2161) at 4", "Move IfStatement(1564) into Block(2161) at 5", "Move VariableDeclarationStatement(1572) into Block(2161) at 6", "Move IfStatement(1583) into Block(2161) at 7", "Move VariableDeclarationStatement(1591) into Block(2161) at 8", "Move IfStatement(1602) into Block(2161) at 9", "Move VariableDeclarationStatement(1610) into Block(2161) at 10", "Move IfStatement(1621) into Block(2161) at 11", "Move VariableDeclarationStatement(1629) into Block(2161) at 12", "Move IfStatement(1651) into Block(2161) at 13", "Insert VariableDeclarationStatement(1510) into Block(2161) at 14", "Insert IfStatement(1519) into Block(2161) at 15", "Move VariableDeclarationStatement(1666) into Block(2161) at 16", "Move ExpressionStatement(1672) into Block(2161) at 17", "Move VariableDeclarationStatement(1680) into Block(2161) at 18", "Move IfStatement(1860) into Block(2161) at 19", "Move ExpressionStatement(1868) into Block(2161) at 20", "Move ExpressionStatement(1874) into Block(2161) at 21", "Move IfStatement(1905) into Block(2161) at 22", "Move VariableDeclarationStatement(1913) into Block(2161) at 23", "Move IfStatement(1943) into Block(2161) at 24", "Move IfStatement(1975) into Block(2161) at 25", "Move VariableDeclarationStatement(1983) into Block(2161) at 26", "Move IfStatement(1996) into Block(2161) at 27", "Move VariableDeclarationStatement(2004) into Block(2161) at 28", "Move VariableDeclarationStatement(2012) into Block(2161) at 29", "Move IfStatement(2030) into Block(2161) at 30", "Move VariableDeclarationStatement(2038) into Block(2161) at 31", "Insert IfStatement(2009) into Block(2161) at 32", "Insert VariableDeclarationStatement(2020) into Block(2161) at 33", "Insert IfStatement(2111) into Block(2161) at 34", "Move VariableDeclarationStatement(2223) into Block(2161) at 35", "Move IfStatement(2234) into Block(2161) at 36", "Move VariableDeclarationStatement(2242) into Block(2161) at 37", "Move IfStatement(2253) into Block(2161) at 38", "Insert ReturnStatement(2160) into Block(2161) at 39", "Insert SimpleName: Lookup(320) into SimpleType: Lookup(321) at 0", "Insert SimpleName: AuthSchemeProvider(322) into SimpleType: AuthSchemeProvider(323) at 0", "Insert SimpleName: Lookup(329) into SimpleType: Lookup(330) at 0", "Insert SimpleName: CookieSpecProvider(331) into SimpleType: CookieSpecProvider(332) at 0", "Update SimpleName: CookieSpecFactory(549) to AuthSchemeProvider", "Update SimpleName: AuthSchemeFactory(538) to CookieSpecProvider", "Insert SimpleName: LayeredConnectionSocketFactory(459) into SimpleType: LayeredConnectionSocketFactory(460) at 0", "Update SimpleName: SchemeLayeredSocketFactory(408) to SchemePortResolver", "Move SimpleName: SchemeLayeredSocketFactory(408) into SimpleType: SchemePortResolver(500) at 0", "Insert Assignment: =(507) into ExpressionStatement(508) at 0", "Insert ThisExpression(509) into ReturnStatement(510) at 0", "Insert SimpleType: Lookup(996) into ParameterizedType: Lookup<AuthSchemeProvider>(999) at 0", "Insert SimpleType: AuthSchemeProvider(998) into ParameterizedType: Lookup<AuthSchemeProvider>(999) at 1", "Insert Assignment: =(1006) into ExpressionStatement(1007) at 0", "Insert ThisExpression(1008) into ReturnStatement(1009) at 0", "Insert SimpleType: Lookup(1019) into ParameterizedType: Lookup<CookieSpecProvider>(1022) at 0", "Insert SimpleType: CookieSpecProvider(1021) into ParameterizedType: Lookup<CookieSpecProvider>(1022) at 1", "Update SimpleName: AuthSchemeFactory(1196) to AuthSchemeProvider", "Move Block(1265) into IfStatement(1069) at 1", "Update SimpleName: CookieSpecFactory(1243) to CookieSpecProvider", "Move Block(1218) into IfStatement(1116) at 1", "Insert SimpleType: SchemePortResolver(1504) into VariableDeclarationStatement(1510) at 0", "Insert VariableDeclarationFragment(1509) into VariableDeclarationStatement(1510) at 1", "Insert InfixExpression: ==(1513) into IfStatement(1519) at 0", "Insert Block(1518) into IfStatement(1519) at 1", "Move ExpressionStatement(1724) into Block(1748) at 5", "Insert ParameterizedType: Lookup<AuthSchemeProvider>(1916) into VariableDeclarationStatement(1922) at 0", "Move InfixExpression: ==(2041) into IfStatement(2009) at 0", "Insert Block(2008) into IfStatement(2009) at 1", "Insert ParameterizedType: Lookup<CookieSpecProvider>(2014) into VariableDeclarationStatement(2020) at 0", "Move VariableDeclarationFragment(2350) into VariableDeclarationStatement(2020) at 1", "Move InfixExpression: ==(2396) into IfStatement(2111) at 0", "Insert Block(2110) into IfStatement(2111) at 1", "Insert ClassInstanceCreation(2159) into ReturnStatement(2160) at 0", "Insert FieldAccess(505) into Assignment: =(507) at 0", "Insert SimpleName: schemePortResolver(506) into Assignment: =(507) at 1", "Insert SimpleName: Lookup(995) into SimpleType: Lookup(996) at 0", "Update SimpleName: SchemeLayeredSocketFactory(655) to AuthSchemeProvider", "Move SimpleName: SchemeLayeredSocketFactory(655) into SimpleType: AuthSchemeProvider(998) at 0", "Insert FieldAccess(1004) into Assignment: =(1006) at 0", "Insert SimpleName: authSchemeRegistry(1005) into Assignment: =(1006) at 1", "Update SimpleName: HttpParams(1131) to Lookup", "Move SimpleName: HttpParams(1131) into SimpleType: Lookup(1019) at 0", "Insert SimpleName: CookieSpecProvider(1020) into SimpleType: CookieSpecProvider(1021) at 0", "Update SimpleName: params(1138) to cookieSpecRegistry", "Move FieldAccess(1207) into MethodInvocation(1076) at 0", "Update SimpleName: authSchemeFactory(1225) to authSchemeProvider", "Move FieldAccess(1254) into MethodInvocation(1123) at 0", "Update SimpleName: cookieSpecFactory(1272) to cookieSpecProvider", "Insert SimpleName: SchemePortResolver(1503) into SimpleType: SchemePortResolver(1504) at 0", "Insert SimpleName: schemePortResolver(1505) into VariableDeclarationFragment(1509) at 0", "Insert FieldAccess(1508) into VariableDeclarationFragment(1509) at 1", "Insert SimpleName: schemePortResolver(1511) into InfixExpression: ==(1513) at 0", "Insert NullLiteral(1512) into InfixExpression: ==(1513) at 1", "Insert ExpressionStatement(1517) into Block(1518) at 0", "Move VariableDeclarationStatement(2543) into Block(1748) at 0", "Move VariableDeclarationStatement(2558) into Block(1748) at 1", "Insert VariableDeclarationStatement(1587) into Block(1748) at 2", "Insert IfStatement(1612) into Block(1748) at 4", "Insert IfStatement(1674) into Block(1748) at 8", "Insert IfStatement(1685) into Block(1748) at 9", "Insert IfStatement(1724) into Block(1748) at 12", "Insert IfStatement(1741) into Block(1748) at 13", "Insert SimpleType: Lookup(1913) into ParameterizedType: Lookup<AuthSchemeProvider>(1916) at 0", "Insert SimpleType: AuthSchemeProvider(1915) into ParameterizedType: Lookup<AuthSchemeProvider>(1916) at 1", "Update SimpleName: params(2033) to authSchemeRegistry", "Update SimpleName: params(2039) to authSchemeRegistry", "Insert VariableDeclarationStatement(1938) into Block(2008) at 0", "Insert ExpressionStatement(1972) into Block(2008) at 1", "Move IfStatement(2215) into Block(2008) at 2", "Move ExpressionStatement(2307) into Block(2008) at 3", "Update SimpleType: HashMap(2312) to Lookup", "Move SimpleType: HashMap(2312) into ParameterizedType: Lookup<CookieSpecProvider>(2014) at 0", "Update SimpleType: Class(2314) to CookieSpecProvider", "Move SimpleType: Class(2314) into ParameterizedType: Lookup<CookieSpecProvider>(2014) at 1", "Update SimpleName: previous(2341) to cookieSpecRegistry", "Insert FieldAccess(2018) into VariableDeclarationFragment(2019) at 1", "Update SimpleName: c(2394) to cookieSpecRegistry", "Insert VariableDeclarationStatement(2036) into Block(2110) at 0", "Insert ExpressionStatement(2074) into Block(2110) at 1", "Move IfStatement(2138) into Block(2110) at 2", "Move ExpressionStatement(2522) into Block(2110) at 3", "Move SimpleType: InternalHttpClient(2255) into ClassInstanceCreation(2159) at 0", "Insert SimpleName: execChain(2152) into ClassInstanceCreation(2159) at 1", "Insert SimpleName: connManager(2153) into ClassInstanceCreation(2159) at 2", "Insert SimpleName: routePlanner(2154) into ClassInstanceCreation(2159) at 3", "Insert SimpleName: cookieSpecRegistry(2155) into ClassInstanceCreation(2159) at 4", "Insert SimpleName: authSchemeRegistry(2156) into ClassInstanceCreation(2159) at 5", "Insert SimpleName: defaultCookieStore(2157) into ClassInstanceCreation(2159) at 6", "Insert SimpleName: defaultCredentialsProvider(2158) into ClassInstanceCreation(2159) at 7", "Insert ThisExpression(503) into FieldAccess(505) at 0", "Insert SimpleName: schemePortResolver(504) into FieldAccess(505) at 1", "Insert ThisExpression(1002) into FieldAccess(1004) at 0", "Insert SimpleName: authSchemeRegistry(1003) into FieldAccess(1004) at 1", "Update SimpleName: params(1136) to cookieSpecRegistry", "Update SimpleType: SchemeRegistry(1405) to LayeredConnectionSocketFactory", "Update InfixExpression: !=(1419) to ==", "Move SimpleType: PoolingHttpClientConnectionManager(1436) into VariableDeclarationStatement(1307) at 0", "Insert ThisExpression(1506) into FieldAccess(1508) at 0", "Insert SimpleName: schemePortResolver(1507) into FieldAccess(1508) at 1", "Insert Assignment: =(1516) into ExpressionStatement(1517) at 0", "Insert SimpleType: String(1580) into VariableDeclarationStatement(1587) at 0", "Insert VariableDeclarationFragment(1586) into VariableDeclarationStatement(1587) at 1", "Insert SimpleType: HttpProcessorBuilder(1589) into VariableDeclarationStatement(1595) at 0", "Insert InfixExpression: !=(1598) into IfStatement(1612) at 0", "Insert Block(1611) into IfStatement(1612) at 1", "Insert InfixExpression: !=(1615) into IfStatement(1629) at 0", "Insert Block(1628) into IfStatement(1629) at 1", "Move PrefixExpression: !(1726) into IfStatement(1663) at 0", "Move PrefixExpression: !(1737) into IfStatement(1674) at 0", "Insert Block(1673) into IfStatement(1674) at 1", "Move PrefixExpression: !(1748) into IfStatement(1685) at 0", "Insert Block(1684) into IfStatement(1685) at 1", "Insert InfixExpression: !=(1710) into IfStatement(1724) at 0", "Insert Block(1723) into IfStatement(1724) at 1", "Insert InfixExpression: !=(1727) into IfStatement(1741) at 0", "Insert Block(1740) into IfStatement(1741) at 1", "Update SimpleName: HttpParams(2031) to Lookup", "Move SimpleName: HttpParams(2031) into SimpleType: Lookup(1913) at 0", "Insert SimpleName: AuthSchemeProvider(1914) into SimpleType: AuthSchemeProvider(1915) at 0", "Update SimpleName: params(2035) to authSchemeRegistry", "Insert ParameterizedType: RegistryBuilder<AuthSchemeProvider>(1930) into VariableDeclarationStatement(1938) at 0", "Insert VariableDeclarationFragment(1937) into VariableDeclarationStatement(1938) at 1", "Insert MethodInvocation(1971) into ExpressionStatement(1972) at 0", "Update SimpleName: HashMap(2311) to Lookup", "Update SimpleName: Class(2313) to CookieSpecProvider", "Move ThisExpression(2342) into FieldAccess(2018) at 0", "Update SimpleName: uniqueClasses(2343) to cookieSpecRegistry", "Move SimpleName: uniqueClasses(2343) into FieldAccess(2018) at 1", "Insert ParameterizedType: RegistryBuilder<CookieSpecProvider>(2028) into VariableDeclarationStatement(2036) at 0", "Insert VariableDeclarationFragment(2035) into VariableDeclarationStatement(2036) at 1", "Insert MethodInvocation(2073) into ExpressionStatement(2074) at 0", "Insert Assignment: =(2108) into ExpressionStatement(2109) at 0", "Move FieldAccess(1222) into Assignment: =(1066) at 0", "Move FieldAccess(1269) into Assignment: =(1113) at 0", "Update SimpleName: SchemeRegistry(1404) to LayeredConnectionSocketFactory", "Insert SimpleName: sslSocketFactory(1256) into VariableDeclarationFragment(1260) at 0", "Insert FieldAccess(1259) into VariableDeclarationFragment(1260) at 1", "Insert IfStatement(1280) into Block(1281) at 0", "Insert QualifiedName: DefaultConnectionKeepAliveStrategy.INSTANCE(1438) into Assignment: =(1439) at 1", "Insert QualifiedName: TargetAuthenticationStrategy.INSTANCE(1455) into Assignment: =(1456) at 1", "Insert QualifiedName: ProxyAuthenticationStrategy.INSTANCE(1472) into Assignment: =(1473) at 1", "Insert SimpleName: schemePortResolver(1514) into Assignment: =(1516) at 0", "Insert QualifiedName: DefaultSchemePortResolver.INSTANCE(1515) into Assignment: =(1516) at 1", "Insert SimpleName: String(1579) into SimpleType: String(1580) at 0", "Insert SimpleName: defaultAgent(1581) into VariableDeclarationFragment(1586) at 0", "Move InfixExpression: +(2565) into VariableDeclarationFragment(1586) at 1", "Update SimpleName: ListBuilder(1684) to HttpProcessorBuilder", "Move SimpleName: ListBuilder(1684) into SimpleType: HttpProcessorBuilder(1589) at 0", "Update SimpleName: reqlb(1689) to b", "Insert MethodInvocation(1593) into VariableDeclarationFragment(1594) at 1", "Insert SimpleName: requestFirst(1596) into InfixExpression: !=(1598) at 0", "Insert NullLiteral(1597) into InfixExpression: !=(1598) at 1", "Insert EnhancedForStatement(1610) into Block(1611) at 0", "Insert SimpleName: responseFirst(1613) into InfixExpression: !=(1615) at 0", "Insert NullLiteral(1614) into InfixExpression: !=(1615) at 1", "Insert EnhancedForStatement(1627) into Block(1628) at 0", "Update SimpleName: reqlb(1703) to b", "Move ExpressionStatement(1762) into Block(1673) at 0", "Move ExpressionStatement(1781) into Block(1684) at 0", "Insert SimpleName: requestLast(1708) into InfixExpression: !=(1710) at 0", "Insert NullLiteral(1709) into InfixExpression: !=(1710) at 1", "Insert EnhancedForStatement(1722) into Block(1723) at 0", "Insert SimpleName: responseLast(1725) into InfixExpression: !=(1727) at 0", "Insert NullLiteral(1726) into InfixExpression: !=(1727) at 1", "Insert EnhancedForStatement(1739) into Block(1740) at 0", "Insert MethodInvocation(1745) into Assignment: =(1746) at 1", "Insert SimpleType: RegistryBuilder(1927) into ParameterizedType: RegistryBuilder<AuthSchemeProvider>(1930) at 0", "Insert SimpleType: AuthSchemeProvider(1929) into ParameterizedType: RegistryBuilder<AuthSchemeProvider>(1930) at 1", "Insert SimpleName: b(1931) into VariableDeclarationFragment(1937) at 0", "Insert MethodInvocation(1936) into VariableDeclarationFragment(1937) at 1", "Insert MethodInvocation(1969) into MethodInvocation(1971) at 0", "Insert SimpleName: build(1970) into MethodInvocation(1971) at 1", "Insert SimpleName: authSchemeRegistry(2002) into Assignment: =(2006) at 0", "Insert MethodInvocation(2005) into Assignment: =(2006) at 1", "Update SimpleType: List(2441) to RegistryBuilder", "Move SimpleType: List(2441) into ParameterizedType: RegistryBuilder<CookieSpecProvider>(2028) at 0", "Update SimpleType: E(2443) to CookieSpecProvider", "Move SimpleType: E(2443) into ParameterizedType: RegistryBuilder<CookieSpecProvider>(2028) at 1", "Insert SimpleName: b(2029) into VariableDeclarationFragment(2035) at 0", "Insert MethodInvocation(2034) into VariableDeclarationFragment(2035) at 1", "Insert MethodInvocation(2067) into MethodInvocation(2073) at 0", "Update SimpleName: name(2513) to register", "Move SimpleName: name(2513) into MethodInvocation(2073) at 1", "Insert QualifiedName: CookiePolicy.IGNORE_COOKIES(2069) into MethodInvocation(2073) at 2", "Move ClassInstanceCreation(2107) into MethodInvocation(2073) at 3", "Insert SimpleName: cookieSpecRegistry(2104) into Assignment: =(2108) at 0", "Insert MethodInvocation(2107) into Assignment: =(2108) at 1", "Update ParameterizedType: HashMap<String,CookieSpecFactory>(1261) to HashMap<String,AuthSchemeProvider>", "Update ParameterizedType: HashMap<String,AuthSchemeFactory>(1214) to HashMap<String,CookieSpecProvider>", "Insert ThisExpression(1257) into FieldAccess(1259) at 0", "Insert SimpleName: sslSocketFactory(1258) into FieldAccess(1259) at 1", "Insert SimpleName: systemProperties(1265) into IfStatement(1280) at 0", "Insert Block(1272) into IfStatement(1280) at 1", "Insert Block(1279) into IfStatement(1280) at 2", "Move SimpleType: PoolingHttpClientConnectionManager(1433) into ClassInstanceCreation(1305) at 0", "Insert MethodInvocation(1304) into ClassInstanceCreation(1305) at 1", "Move InfixExpression: !=(2550) into ConditionalExpression(1576) at 0", "Insert SimpleName: HttpProcessorBuilder(1591) into MethodInvocation(1593) at 0", "Insert SimpleName: create(1592) into MethodInvocation(1593) at 1", "Insert SingleVariableDeclaration(1602) into EnhancedForStatement(1610) at 0", "Insert SimpleName: requestFirst(1603) into EnhancedForStatement(1610) at 1", "Insert Block(1609) into EnhancedForStatement(1610) at 2", "Insert SingleVariableDeclaration(1619) into EnhancedForStatement(1627) at 0", "Insert SimpleName: responseFirst(1620) into EnhancedForStatement(1627) at 1", "Insert Block(1626) into EnhancedForStatement(1627) at 2", "Insert SimpleName: defaultAgent(1646) into ClassInstanceCreation(1647) at 1", "Insert SingleVariableDeclaration(1714) into EnhancedForStatement(1722) at 0", "Insert SimpleName: requestLast(1715) into EnhancedForStatement(1722) at 1", "Insert Block(1721) into EnhancedForStatement(1722) at 2", "Insert SingleVariableDeclaration(1731) into EnhancedForStatement(1739) at 0", "Insert SimpleName: responseLast(1732) into EnhancedForStatement(1739) at 1", "Insert Block(1738) into EnhancedForStatement(1739) at 2", "Update SimpleName: reqincps(1840) to b", "Move SimpleName: reqincps(1840) into MethodInvocation(1745) at 0", "Update SimpleName: size(1841) to build", "Move SimpleName: size(1841) into MethodInvocation(1745) at 1", "Update SimpleName: CookieSpecRegistry(2054) to RegistryBuilder", "Move SimpleName: CookieSpecRegistry(2054) into SimpleType: RegistryBuilder(1927) at 0", "Update SimpleName: CookieSpecRegistry(2057) to AuthSchemeProvider", "Move SimpleName: CookieSpecRegistry(2057) into SimpleType: AuthSchemeProvider(1929) at 0", "Update SimpleName: register(2063) to RegistryBuilder", "Move SimpleName: register(2063) into MethodInvocation(1936) at 0", "Insert SimpleType: AuthSchemeProvider(1934) into MethodInvocation(1936) at 1", "Insert SimpleName: create(1935) into MethodInvocation(1936) at 2", "Insert MethodInvocation(1963) into MethodInvocation(1969) at 0", "Move SimpleName: register(2180) into MethodInvocation(1969) at 1", "Move QualifiedName: AuthPolicy.KERBEROS(2181) into MethodInvocation(1969) at 2", "Move ClassInstanceCreation(2184) into MethodInvocation(1969) at 3", "Insert SimpleName: b(2003) into MethodInvocation(2005) at 0", "Insert SimpleName: build(2004) into MethodInvocation(2005) at 1", "Update SimpleName: List(2440) to RegistryBuilder", "Update SimpleName: E(2442) to CookieSpecProvider", "Insert SimpleName: RegistryBuilder(2030) into MethodInvocation(2034) at 0", "Insert SimpleType: CookieSpecProvider(2032) into MethodInvocation(2034) at 1", "Insert SimpleName: create(2033) into MethodInvocation(2034) at 2", "Insert MethodInvocation(2061) into MethodInvocation(2067) at 0", "Update SimpleName: params(2511) to register", "Move SimpleName: params(2511) into MethodInvocation(2067) at 1", "Update QualifiedName: HTTP.DEF_CONTENT_CHARSET(2512) to CookiePolicy.RFC_2965", "Move QualifiedName: HTTP.DEF_CONTENT_CHARSET(2512) into MethodInvocation(2067) at 2", "Move ClassInstanceCreation(2099) into MethodInvocation(2067) at 3", "Update SimpleName: setTcpNoDelay(2518) to b", "Move SimpleName: setTcpNoDelay(2518) into MethodInvocation(2107) at 0", "Update SimpleName: params(2519) to build", "Move SimpleName: params(2519) into MethodInvocation(2107) at 1", "Update SimpleType: CookieSpecFactory(1260) to AuthSchemeProvider", "Update SimpleType: AuthSchemeFactory(1213) to CookieSpecProvider", "Insert ExpressionStatement(1271) into Block(1272) at 0", "Insert ExpressionStatement(1278) into Block(1279) at 0", "Insert MethodInvocation(1302) into MethodInvocation(1304) at 0", "Insert SimpleName: build(1303) into MethodInvocation(1304) at 1", "Insert QualifiedName: DefaultConnectionReuseStrategy.INSTANCE(1419) into Assignment: =(1420) at 1", "Insert QualifiedName: DefaultUserTokenHandler.INSTANCE(1491) into Assignment: =(1492) at 1", "Insert QualifiedName: NoopUserTokenHandler.INSTANCE(1496) into Assignment: =(1497) at 1", "Move SimpleType: HttpRequestInterceptor(1687) into SingleVariableDeclaration(1602) at 0", "Insert SimpleName: i(1601) into SingleVariableDeclaration(1602) at 1", "Move ExpressionStatement(1733) into Block(1609) at 0", "Move SimpleType: HttpResponseInterceptor(1766) into SingleVariableDeclaration(1619) at 0", "Insert SimpleName: i(1618) into SingleVariableDeclaration(1619) at 1", "Move ExpressionStatement(1744) into Block(1626) at 0", "Update SimpleName: reqlb(1749) to b", "Move ClassInstanceCreation(1731) into MethodInvocation(1660) at 2", "Update SimpleName: reqlb(1758) to b", "Update SimpleName: addAll(1759) to add", "Move ClassInstanceCreation(1742) into MethodInvocation(1671) at 2", "Update SimpleName: reslb(1777) to b", "Update SimpleName: addAll(1778) to add", "Move ClassInstanceCreation(1753) into MethodInvocation(1682) at 2", "Update SimpleName: reslb(1784) to b", "Update SimpleName: reslb(1795) to b", "Move SimpleType: HttpRequestInterceptor(1837) into SingleVariableDeclaration(1714) at 0", "Insert SimpleName: i(1713) into SingleVariableDeclaration(1714) at 1", "Insert ExpressionStatement(1720) into Block(1721) at 0", "Move SimpleType: HttpResponseInterceptor(1848) into SingleVariableDeclaration(1731) at 0", "Insert SimpleName: i(1730) into SingleVariableDeclaration(1731) at 1", "Insert ExpressionStatement(1737) into Block(1738) at 0", "Insert QualifiedName: DefaultHttpRequestRetryHandler.INSTANCE(1778) into Assignment: =(1779) at 1", "Insert QualifiedName: DefaultRedirectStrategy.INSTANCE(1841) into Assignment: =(1842) at 1", "Update SimpleName: AuthSchemeRegistry(2139) to AuthSchemeProvider", "Move SimpleName: AuthSchemeRegistry(2139) into SimpleType: AuthSchemeProvider(1934) at 0", "Insert MethodInvocation(1957) into MethodInvocation(1963) at 0", "Move SimpleName: register(2172) into MethodInvocation(1963) at 1", "Move QualifiedName: AuthPolicy.SPNEGO(2173) into MethodInvocation(1963) at 2", "Move ClassInstanceCreation(2176) into MethodInvocation(1963) at 3", "Update ParameterizedType: Map.Entry<String,AuthSchemeFactory>(2196) to Map.Entry<String,AuthSchemeProvider>", "Update SimpleName: HttpParams(2499) to CookieSpecProvider", "Move SimpleName: HttpParams(2499) into SimpleType: CookieSpecProvider(2032) at 0", "Insert MethodInvocation(2055) into MethodInvocation(2061) at 0", "Update SimpleName: setContentCharset(2510) to register", "Move SimpleName: setContentCharset(2510) into MethodInvocation(2061) at 1", "Insert QualifiedName: CookiePolicy.RFC_2109(2057) into MethodInvocation(2061) at 2", "Move ClassInstanceCreation(2091) into MethodInvocation(2061) at 3", "Update ParameterizedType: Map.Entry<String,CookieSpecFactory>(2119) to Map.Entry<String,CookieSpecProvider>", "Update SimpleName: CookieSpecFactory(1259) to AuthSchemeProvider", "Update SimpleName: AuthSchemeFactory(1212) to CookieSpecProvider", "Insert Assignment: =(1270) into ExpressionStatement(1271) at 0", "Insert Assignment: =(1277) into ExpressionStatement(1278) at 0", "Insert MethodInvocation(1298) into MethodInvocation(1302) at 0", "Insert SimpleName: register(1299) into MethodInvocation(1302) at 1", "Insert StringLiteral: \"https\"(1300) into MethodInvocation(1302) at 2", "Insert SimpleName: sslSocketFactory(1301) into MethodInvocation(1302) at 3", "Insert MethodInvocation(1719) into ExpressionStatement(1720) at 0", "Insert MethodInvocation(1736) into ExpressionStatement(1737) at 0", "Update SimpleType: ProxySelectorRoutePlanner(1920) to SystemDefaultRoutePlanner", "Insert SimpleName: schemePortResolver(1808) into ClassInstanceCreation(1812) at 1", "Update SimpleType: DefaultHttpRoutePlanner(1933) to DefaultRoutePlanner", "Insert SimpleName: schemePortResolver(1819) into ClassInstanceCreation(1820) at 1", "Insert MethodInvocation(1951) into MethodInvocation(1957) at 0", "Move SimpleName: register(2164) into MethodInvocation(1957) at 1", "Move QualifiedName: AuthPolicy.NTLM(2165) into MethodInvocation(1957) at 2", "Move ClassInstanceCreation(2168) into MethodInvocation(1957) at 3", "Update SimpleType: AuthSchemeFactory(2195) to AuthSchemeProvider", "Insert MethodInvocation(2049) into MethodInvocation(2055) at 0", "Update SimpleName: HttpProtocolParams(2509) to register", "Move SimpleName: HttpProtocolParams(2509) into MethodInvocation(2055) at 1", "Insert QualifiedName: CookiePolicy.NETSCAPE(2051) into MethodInvocation(2055) at 2", "Move ClassInstanceCreation(2083) into MethodInvocation(2055) at 3", "Update SimpleType: CookieSpecFactory(2118) to CookieSpecProvider", "Insert SimpleName: sslSocketFactory(1266) into Assignment: =(1270) at 0", "Insert MethodInvocation(1269) into Assignment: =(1270) at 1", "Insert SimpleName: sslSocketFactory(1273) into Assignment: =(1277) at 0", "Insert MethodInvocation(1276) into Assignment: =(1277) at 1", "Insert MethodInvocation(1292) into MethodInvocation(1298) at 0", "Insert SimpleName: register(1293) into MethodInvocation(1298) at 1", "Insert StringLiteral: \"http\"(1294) into MethodInvocation(1298) at 2", "Insert MethodInvocation(1297) into MethodInvocation(1298) at 3", "Insert QualifiedName: DefaultConnectionReuseStrategy.INSTANCE(1407) into Assignment: =(1408) at 1", "Insert QualifiedName: NoConnectionReuseStrategy.INSTANCE(1412) into Assignment: =(1413) at 1", "Update SimpleName: reqlb(1727) to b", "Update SimpleName: add(1728) to addFirst", "Insert SimpleName: i(1606) into MethodInvocation(1607) at 2", "Update SimpleName: reqlb(1738) to b", "Update SimpleName: add(1739) to addFirst", "Insert SimpleName: i(1623) into MethodInvocation(1624) at 2", "Update SimpleName: reqlb(1815) to b", "Move SimpleName: reqlb(1815) into MethodInvocation(1719) at 0", "Update SimpleName: build(1816) to addLast", "Move SimpleName: build(1816) into MethodInvocation(1719) at 1", "Insert SimpleName: i(1718) into MethodInvocation(1719) at 2", "Update SimpleName: reslb(1826) to b", "Move SimpleName: reslb(1826) into MethodInvocation(1736) at 0", "Update SimpleName: build(1827) to addLast", "Move SimpleName: build(1827) into MethodInvocation(1736) at 1", "Insert SimpleName: i(1735) into MethodInvocation(1736) at 2", "Update SimpleName: ProxySelectorRoutePlanner(1919) to SystemDefaultRoutePlanner", "Update SimpleName: DefaultHttpRoutePlanner(1932) to DefaultRoutePlanner", "Insert MethodInvocation(1945) into MethodInvocation(1951) at 0", "Move SimpleName: register(2156) into MethodInvocation(1951) at 1", "Move QualifiedName: AuthPolicy.DIGEST(2157) into MethodInvocation(1951) at 2", "Move ClassInstanceCreation(2160) into MethodInvocation(1951) at 3", "Update SimpleName: AuthSchemeFactory(2194) to AuthSchemeProvider", "Update SimpleName: authSchemeRegistry(2202) to b", "Insert MethodInvocation(2043) into MethodInvocation(2049) at 0", "Update SimpleName: params(2505) to register", "Move SimpleName: params(2505) into MethodInvocation(2049) at 1", "Update QualifiedName: HttpVersion.HTTP_1_1(2506) to CookiePolicy.BROWSER_COMPATIBILITY", "Move QualifiedName: HttpVersion.HTTP_1_1(2506) into MethodInvocation(2049) at 2", "Move ClassInstanceCreation(2075) into MethodInvocation(2049) at 3", "Update SimpleName: CookieSpecFactory(2117) to CookieSpecProvider", "Update SimpleName: cookieSpecRegistry(2125) to b", "Update SimpleName: register(1421) to SSLSocketFactory", "Move SimpleName: register(1421) into MethodInvocation(1269) at 0", "Insert SimpleName: getSystemSocketFactory(1268) into MethodInvocation(1269) at 1", "Insert SimpleName: SSLSocketFactory(1274) into MethodInvocation(1276) at 0", "Insert SimpleName: getSocketFactory(1275) into MethodInvocation(1276) at 1", "Insert SimpleName: RegistryBuilder(1288) into MethodInvocation(1292) at 0", "Insert SimpleType: ConnectionSocketFactory(1290) into MethodInvocation(1292) at 1", "Insert SimpleName: create(1291) into MethodInvocation(1292) at 2", "Insert SimpleName: PlainSocketFactory(1295) into MethodInvocation(1297) at 0", "Insert SimpleName: getSocketFactory(1296) into MethodInvocation(1297) at 1", "Update SimpleName: authSchemeRegistry(2147) to b", "Move SimpleName: authSchemeRegistry(2147) into MethodInvocation(1945) at 0", "Move SimpleName: register(2148) into MethodInvocation(1945) at 1", "Move QualifiedName: AuthPolicy.BASIC(2149) into MethodInvocation(1945) at 2", "Move ClassInstanceCreation(2152) into MethodInvocation(1945) at 3", "Update SimpleName: HttpProtocolParams(2503) to b", "Move SimpleName: HttpProtocolParams(2503) into MethodInvocation(2043) at 0", "Update SimpleName: setVersion(2504) to register", "Move SimpleName: setVersion(2504) into MethodInvocation(2043) at 1", "Insert QualifiedName: CookiePolicy.BEST_MATCH(2039) into MethodInvocation(2043) at 2", "Move ClassInstanceCreation(2067) into MethodInvocation(2043) at 3", "Insert SimpleName: ConnectionSocketFactory(1289) into SimpleType: ConnectionSocketFactory(1290) at 0", "Delete QualifiedName: java.util.Collection(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: java.util.List(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.apache.http.params.CoreConnectionPNames(138)", "Delete ImportDeclaration(139)", "Delete QualifiedName: org.apache.http.params.CoreProtocolPNames(140)", "Delete ImportDeclaration(141)", "Delete QualifiedName: org.apache.http.params.HttpConnectionParams(142)", "Delete ImportDeclaration(143)", "Delete QualifiedName: org.apache.http.params.HttpParams(144)", "Delete ImportDeclaration(145)", "Delete QualifiedName: org.apache.http.params.HttpProtocolParams(146)", "Delete ImportDeclaration(147)", "Delete QualifiedName: org.apache.http.params.SyncBasicHttpParams(148)", "Delete ImportDeclaration(149)", "Delete QualifiedName: org.apache.http.protocol.HTTP(150)", "Delete ImportDeclaration(151)", "Delete TextElement: <p>(197)", "Delete TextElement: This class sets up the following parameters if not explicitly set:(198)", "Delete TextElement: <ul>(199)", "Delete TextElement: <li>Version: HttpVersion.HTTP_1_1</li>(200)", "Delete TextElement: <li>ContentCharset: HTTP.DEFAULT_CONTENT_CHARSET</li>(201)", "Delete TextElement: <li>NoTcpDelay: true</li>(202)", "Delete TextElement: <li>SocketBufferSize: 8192</li>(203)", "Delete TextElement: <li>UserAgent: Apache-HttpClient/release (java 1.5)</li>(204)", "Delete TextElement: </ul>(205)", "Delete TextElement: <p>(206)", "Delete TextElement: The following parameters can be used to customize the behavior of (207)", "Delete SimpleName: HttpClient(208)", "Delete TagElement: @link(209)", "Delete TextElement: produced by this builder:(210)", "Delete TextElement: <ul>(211)", "Delete TextElement: <li>(212)", "Delete QualifiedName: org.apache.http.params.CoreProtocolPNames(213)", "Delete SimpleName: PROTOCOL_VERSION(214)", "Delete MemberRef(215)", "Delete TagElement: @link(216)", "Delete TextElement: </li>(217)", "Delete TextElement: <li>(218)", "Delete QualifiedName: org.apache.http.params.CoreProtocolPNames(219)", "Delete SimpleName: STRICT_TRANSFER_ENCODING(220)", "Delete MemberRef(221)", "Delete TagElement: @link(222)", "Delete TextElement: </li>(223)", "Delete TextElement: <li>(224)", "Delete QualifiedName: org.apache.http.params.CoreProtocolPNames(225)", "Delete SimpleName: HTTP_ELEMENT_CHARSET(226)", "Delete MemberRef(227)", "Delete TagElement: @link(228)", "Delete TextElement: </li>(229)", "Delete TextElement: <li>(230)", "Delete QualifiedName: org.apache.http.params.CoreProtocolPNames(231)", "Delete SimpleName: USE_EXPECT_CONTINUE(232)", "Delete MemberRef(233)", "Delete TagElement: @link(234)", "Delete TextElement: </li>(235)", "Delete TextElement: <li>(236)", "Delete QualifiedName: org.apache.http.params.CoreProtocolPNames(237)", "Delete SimpleName: WAIT_FOR_CONTINUE(238)", "Delete MemberRef(239)", "Delete TagElement: @link(240)", "Delete TextElement: </li>(241)", "Delete TextElement: <li>(242)", "Delete QualifiedName: org.apache.http.params.CoreProtocolPNames(243)", "Delete SimpleName: USER_AGENT(244)", "Delete MemberRef(245)", "Delete TagElement: @link(246)", "Delete TextElement: </li>(247)", "Delete TextElement: <li>(248)", "Delete QualifiedName: org.apache.http.params.CoreConnectionPNames(249)", "Delete SimpleName: TCP_NODELAY(250)", "Delete MemberRef(251)", "Delete TagElement: @link(252)", "Delete TextElement: </li>(253)", "Delete TextElement: <li>(254)", "Delete QualifiedName: org.apache.http.params.CoreConnectionPNames(255)", "Delete SimpleName: SO_TIMEOUT(256)", "Delete MemberRef(257)", "Delete TagElement: @link(258)", "Delete TextElement: </li>(259)", "Delete TextElement: <li>(260)", "Delete QualifiedName: org.apache.http.params.CoreConnectionPNames(261)", "Delete SimpleName: SO_LINGER(262)", "Delete MemberRef(263)", "Delete TagElement: @link(264)", "Delete TextElement: </li>(265)", "Delete TextElement: <li>(266)", "Delete QualifiedName: org.apache.http.params.CoreConnectionPNames(267)", "Delete SimpleName: SO_REUSEADDR(268)", "Delete MemberRef(269)", "Delete TagElement: @link(270)", "Delete TextElement: </li>(271)", "Delete TextElement: <li>(272)", "Delete QualifiedName: org.apache.http.params.CoreConnectionPNames(273)", "Delete SimpleName: SOCKET_BUFFER_SIZE(274)", "Delete MemberRef(275)", "Delete TagElement: @link(276)", "Delete TextElement: </li>(277)", "Delete TextElement: <li>(278)", "Delete QualifiedName: org.apache.http.params.CoreConnectionPNames(279)", "Delete SimpleName: CONNECTION_TIMEOUT(280)", "Delete MemberRef(281)", "Delete TagElement: @link(282)", "Delete TextElement: </li>(283)", "Delete TextElement: <li>(284)", "Delete QualifiedName: org.apache.http.params.CoreConnectionPNames(285)", "Delete SimpleName: MAX_LINE_LENGTH(286)", "Delete MemberRef(287)", "Delete TagElement: @link(288)", "Delete TextElement: </li>(289)", "Delete TextElement: <li>(290)", "Delete QualifiedName: org.apache.http.params.CoreConnectionPNames(291)", "Delete SimpleName: MAX_HEADER_COUNT(292)", "Delete MemberRef(293)", "Delete TagElement: @link(294)", "Delete TextElement: </li>(295)", "Delete TextElement: <li>(296)", "Delete QualifiedName: org.apache.http.params.CoreConnectionPNames(297)", "Delete SimpleName: STALE_CONNECTION_CHECK(298)", "Delete MemberRef(299)", "Delete TagElement: @link(300)", "Delete TextElement: </li>(301)", "Delete TextElement: <li>(302)", "Delete QualifiedName: org.apache.http.conn.params.ConnRoutePNames(303)", "Delete SimpleName: FORCED_ROUTE(304)", "Delete MemberRef(305)", "Delete TagElement: @link(306)", "Delete TextElement: </li>(307)", "Delete TextElement: <li>(308)", "Delete QualifiedName: org.apache.http.conn.params.ConnRoutePNames(309)", "Delete SimpleName: LOCAL_ADDRESS(310)", "Delete MemberRef(311)", "Delete TagElement: @link(312)", "Delete TextElement: </li>(313)", "Delete TextElement: <li>(314)", "Delete QualifiedName: org.apache.http.conn.params.ConnRoutePNames(315)", "Delete SimpleName: DEFAULT_PROXY(316)", "Delete MemberRef(317)", "Delete TagElement: @link(318)", "Delete TextElement: </li>(319)", "Delete TextElement: <li>(320)", "Delete QualifiedName: org.apache.http.cookie.params.CookieSpecPNames(321)", "Delete SimpleName: DATE_PATTERNS(322)", "Delete MemberRef(323)", "Delete TagElement: @link(324)", "Delete TextElement: </li>(325)", "Delete TextElement: <li>(326)", "Delete QualifiedName: org.apache.http.cookie.params.CookieSpecPNames(327)", "Delete SimpleName: SINGLE_COOKIE_HEADER(328)", "Delete MemberRef(329)", "Delete TagElement: @link(330)", "Delete TextElement: </li>(331)", "Delete TextElement: <li>(332)", "Delete QualifiedName: org.apache.http.auth.params.AuthPNames(333)", "Delete SimpleName: CREDENTIAL_CHARSET(334)", "Delete MemberRef(335)", "Delete TagElement: @link(336)", "Delete TextElement: </li>(337)", "Delete TextElement: <li>(338)", "Delete QualifiedName: org.apache.http.client.params.ClientPNames(339)", "Delete SimpleName: COOKIE_POLICY(340)", "Delete MemberRef(341)", "Delete TagElement: @link(342)", "Delete TextElement: </li>(343)", "Delete TextElement: <li>(344)", "Delete QualifiedName: org.apache.http.client.params.ClientPNames(345)", "Delete SimpleName: HANDLE_AUTHENTICATION(346)", "Delete MemberRef(347)", "Delete TagElement: @link(348)", "Delete TextElement: </li>(349)", "Delete TextElement: <li>(350)", "Delete QualifiedName: org.apache.http.client.params.ClientPNames(351)", "Delete SimpleName: HANDLE_REDIRECTS(352)", "Delete MemberRef(353)", "Delete TagElement: @link(354)", "Delete TextElement: </li>(355)", "Delete TextElement: <li>(356)", "Delete QualifiedName: org.apache.http.client.params.ClientPNames(357)", "Delete SimpleName: MAX_REDIRECTS(358)", "Delete MemberRef(359)", "Delete TagElement: @link(360)", "Delete TextElement: </li>(361)", "Delete TextElement: <li>(362)", "Delete QualifiedName: org.apache.http.client.params.ClientPNames(363)", "Delete SimpleName: ALLOW_CIRCULAR_REDIRECTS(364)", "Delete MemberRef(365)", "Delete TagElement: @link(366)", "Delete TextElement: </li>(367)", "Delete TextElement: <li>(368)", "Delete QualifiedName: org.apache.http.client.params.ClientPNames(369)", "Delete SimpleName: VIRTUAL_HOST(370)", "Delete MemberRef(371)", "Delete TagElement: @link(372)", "Delete TextElement: </li>(373)", "Delete TextElement: <li>(374)", "Delete QualifiedName: org.apache.http.client.params.ClientPNames(375)", "Delete SimpleName: DEFAULT_HOST(376)", "Delete MemberRef(377)", "Delete TagElement: @link(378)", "Delete TextElement: </li>(379)", "Delete TextElement: <li>(380)", "Delete QualifiedName: org.apache.http.client.params.ClientPNames(381)", "Delete SimpleName: DEFAULT_HEADERS(382)", "Delete MemberRef(383)", "Delete TagElement: @link(384)", "Delete TextElement: </li>(385)", "Delete TextElement: <li>(386)", "Delete QualifiedName: org.apache.http.client.params.ClientPNames(387)", "Delete SimpleName: CONN_MANAGER_TIMEOUT(388)", "Delete MemberRef(389)", "Delete TagElement: @link(390)", "Delete TextElement: </li>(391)", "Delete TextElement: </ul>(392)", "Delete TagElement(393)", "Delete Javadoc(396)", "Delete Modifier: public(399)", "Delete SimpleName: HttpClientBuilder(400)", "Delete Modifier: private(407)", "Delete SimpleType: SchemeLayeredSocketFactory(409)", "Delete FieldDeclaration(412)", "Delete Modifier: private(527)", "Delete SimpleName: HttpParams(528)", "Delete SimpleType: HttpParams(529)", "Delete SimpleName: params(530)", "Delete VariableDeclarationFragment(531)", "Delete FieldDeclaration(532)", "Delete SimpleType: SchemeLayeredSocketFactory(656)", "Delete SimpleType: HttpParams(1132)", "Delete SimpleName: params(1133)", "Delete SimpleName: schemeRegistry(1406)", "Delete SimpleName: systemProperties(1407)", "Delete SimpleName: SchemeRegistryFactory(1408)", "Delete SimpleName: createSystemDefault(1409)", "Delete MethodInvocation(1410)", "Delete SimpleName: SchemeRegistryFactory(1411)", "Delete SimpleName: createDefault(1412)", "Delete MethodInvocation(1413)", "Delete ConditionalExpression(1414)", "Delete SimpleName: schemeRegistry(1420)", "Delete SimpleName: Scheme(1422)", "Delete SimpleType: Scheme(1423)", "Delete StringLiteral: \"https\"(1424)", "Delete NumberLiteral: 443(1425)", "Delete SimpleName: sslSocketFactory(1426)", "Delete ClassInstanceCreation(1427)", "Delete MethodInvocation(1428)", "Delete ExpressionStatement(1429)", "Delete SimpleName: schemeRegistry(1437)", "Delete SimpleName: DefaultConnectionReuseStrategy(1540)", "Delete SimpleType: DefaultConnectionReuseStrategy(1541)", "Delete ClassInstanceCreation(1542)", "Delete SimpleName: NoConnectionReuseStrategy(1547)", "Delete SimpleType: NoConnectionReuseStrategy(1548)", "Delete ClassInstanceCreation(1549)", "Delete SimpleName: DefaultConnectionReuseStrategy(1556)", "Delete SimpleType: DefaultConnectionReuseStrategy(1557)", "Delete ClassInstanceCreation(1558)", "Delete SimpleName: DefaultConnectionKeepAliveStrategy(1577)", "Delete SimpleType: DefaultConnectionKeepAliveStrategy(1578)", "Delete ClassInstanceCreation(1579)", "Delete SimpleName: TargetAuthenticationStrategy(1596)", "Delete SimpleType: TargetAuthenticationStrategy(1597)", "Delete ClassInstanceCreation(1598)", "Delete SimpleName: ProxyAuthenticationStrategy(1615)", "Delete SimpleType: ProxyAuthenticationStrategy(1616)", "Delete ClassInstanceCreation(1617)", "Delete SimpleName: DefaultUserTokenHandler(1636)", "Delete SimpleType: DefaultUserTokenHandler(1637)", "Delete ClassInstanceCreation(1638)", "Delete SimpleName: NoopUserTokenHandler(1643)", "Delete SimpleType: NoopUserTokenHandler(1644)", "Delete ClassInstanceCreation(1645)", "Delete Modifier: final(2529)", "Delete Modifier: final(2544)", "Delete ParenthesizedExpression(2551)", "Delete SimpleType: ListBuilder(1685)", "Delete ParameterizedType: ListBuilder<HttpRequestInterceptor>(1688)", "Delete SimpleName: ListBuilder(1690)", "Delete SimpleType: ListBuilder(1691)", "Delete SimpleName: HttpRequestInterceptor(1692)", "Delete SimpleType: HttpRequestInterceptor(1693)", "Delete ParameterizedType: ListBuilder<HttpRequestInterceptor>(1694)", "Delete ClassInstanceCreation(1695)", "Delete SimpleName: reqlb(1698)", "Delete SimpleName: addAll(1699)", "Delete SimpleName: requestFirst(1700)", "Delete MethodInvocation(1701)", "Delete ExpressionStatement(1702)", "Delete Block(1734)", "Delete IfStatement(1735)", "Delete Block(1745)", "Delete SimpleName: requestLast(1760)", "Delete SimpleName: responseFirst(1779)", "Delete SimpleName: ListBuilder(1763)", "Delete SimpleType: ListBuilder(1764)", "Delete ParameterizedType: ListBuilder<HttpResponseInterceptor>(1767)", "Delete SimpleName: reslb(1768)", "Delete SimpleName: ListBuilder(1769)", "Delete SimpleType: ListBuilder(1770)", "Delete SimpleName: HttpResponseInterceptor(1771)", "Delete SimpleType: HttpResponseInterceptor(1772)", "Delete ParameterizedType: ListBuilder<HttpResponseInterceptor>(1773)", "Delete ClassInstanceCreation(1774)", "Delete VariableDeclarationFragment(1775)", "Delete VariableDeclarationStatement(1776)", "Delete SimpleName: reslb(1804)", "Delete SimpleName: addAll(1805)", "Delete SimpleName: responseLast(1806)", "Delete MethodInvocation(1807)", "Delete ExpressionStatement(1808)", "Delete SimpleName: List(1809)", "Delete SimpleType: List(1810)", "Delete SimpleName: HttpRequestInterceptor(1811)", "Delete SimpleType: HttpRequestInterceptor(1812)", "Delete ParameterizedType: List<HttpRequestInterceptor>(1813)", "Delete SimpleName: reqincps(1814)", "Delete MethodInvocation(1817)", "Delete VariableDeclarationFragment(1818)", "Delete VariableDeclarationStatement(1819)", "Delete SimpleName: List(1820)", "Delete SimpleType: List(1821)", "Delete SimpleName: HttpResponseInterceptor(1822)", "Delete SimpleType: HttpResponseInterceptor(1823)", "Delete ParameterizedType: List<HttpResponseInterceptor>(1824)", "Delete SimpleName: resincps(1825)", "Delete MethodInvocation(1828)", "Delete VariableDeclarationFragment(1829)", "Delete VariableDeclarationStatement(1830)", "Delete SimpleName: ImmutableHttpProcessor(1832)", "Delete SimpleType: ImmutableHttpProcessor(1833)", "Delete SimpleName: reqincps(1834)", "Delete SimpleName: toArray(1835)", "Delete Dimension(1838)", "Delete ArrayType: HttpRequestInterceptor[](1839)", "Delete MethodInvocation(1842)", "Delete ArrayCreation(1843)", "Delete MethodInvocation(1844)", "Delete SimpleName: resincps(1845)", "Delete SimpleName: toArray(1846)", "Delete Dimension(1849)", "Delete ArrayType: HttpResponseInterceptor[](1850)", "Delete SimpleName: resincps(1851)", "Delete SimpleName: size(1852)", "Delete MethodInvocation(1853)", "Delete ArrayCreation(1854)", "Delete MethodInvocation(1855)", "Delete ClassInstanceCreation(1856)", "Delete SimpleName: DefaultHttpRequestRetryHandler(1889)", "Delete SimpleType: DefaultHttpRequestRetryHandler(1890)", "Delete ClassInstanceCreation(1891)", "Delete SimpleName: connManager(1921)", "Delete SimpleName: getSchemeRegistry(1922)", "Delete MethodInvocation(1923)", "Delete SimpleName: connManager(1934)", "Delete SimpleName: getSchemeRegistry(1935)", "Delete MethodInvocation(1936)", "Delete SimpleName: DefaultRedirectStrategy(1958)", "Delete SimpleType: DefaultRedirectStrategy(1959)", "Delete ClassInstanceCreation(1960)", "Delete SimpleType: HttpParams(2032)", "Delete ThisExpression(2297)", "Delete SimpleName: list(2298)", "Delete FieldAccess(2299)", "Delete SimpleName: LinkedList(2300)", "Delete SimpleType: LinkedList(2301)", "Delete SimpleName: E(2302)", "Delete SimpleType: E(2303)", "Delete ParameterizedType: LinkedList<E>(2304)", "Delete ClassInstanceCreation(2305)", "Delete FieldAccess(2344)", "Delete SimpleName: remove(2345)", "Delete SimpleName: e(2346)", "Delete SimpleName: getClass(2347)", "Delete MethodInvocation(2348)", "Delete MethodInvocation(2349)", "Delete SimpleName: HttpConnectionParams(2517)", "Delete BooleanLiteral: true(2520)", "Delete MethodInvocation(2521)", "Delete SimpleName: params(2042)", "Delete SimpleName: SyncBasicHttpParams(2043)", "Delete SimpleType: SyncBasicHttpParams(2044)", "Delete ClassInstanceCreation(2045)", "Delete Assignment: =(2046)", "Delete ExpressionStatement(2047)", "Delete SimpleName: setDefaultHttpParams(2048)", "Delete SimpleName: params(2049)", "Delete MethodInvocation(2050)", "Delete ExpressionStatement(2051)", "Delete Block(2052)", "Delete IfStatement(2053)", "Delete SimpleType: CookieSpecRegistry(2055)", "Delete SimpleName: cookieSpecRegistry(2056)", "Delete SimpleType: CookieSpecRegistry(2058)", "Delete ClassInstanceCreation(2059)", "Delete VariableDeclarationFragment(2060)", "Delete VariableDeclarationStatement(2061)", "Delete SimpleName: cookieSpecRegistry(2062)", "Delete QualifiedName: CookiePolicy.BEST_MATCH(2064)", "Delete MethodInvocation(2068)", "Delete ExpressionStatement(2069)", "Delete SimpleName: cookieSpecRegistry(2070)", "Delete SimpleName: register(2071)", "Delete QualifiedName: CookiePolicy.BROWSER_COMPATIBILITY(2072)", "Delete MethodInvocation(2076)", "Delete ExpressionStatement(2077)", "Delete SimpleName: cookieSpecRegistry(2078)", "Delete SimpleName: register(2079)", "Delete QualifiedName: CookiePolicy.NETSCAPE(2080)", "Delete MethodInvocation(2084)", "Delete ExpressionStatement(2085)", "Delete SimpleName: cookieSpecRegistry(2086)", "Delete SimpleName: register(2087)", "Delete QualifiedName: CookiePolicy.RFC_2109(2088)", "Delete MethodInvocation(2092)", "Delete ExpressionStatement(2093)", "Delete SimpleName: cookieSpecRegistry(2094)", "Delete SimpleName: register(2095)", "Delete QualifiedName: CookiePolicy.RFC_2965(2096)", "Delete MethodInvocation(2100)", "Delete ExpressionStatement(2101)", "Delete SimpleName: cookieSpecRegistry(2102)", "Delete SimpleName: register(2103)", "Delete QualifiedName: CookiePolicy.IGNORE_COOKIES(2104)", "Delete MethodInvocation(2108)", "Delete ExpressionStatement(2109)", "Delete SimpleType: AuthSchemeRegistry(2140)", "Delete SimpleName: authSchemeRegistry(2141)", "Delete SimpleName: AuthSchemeRegistry(2142)", "Delete SimpleType: AuthSchemeRegistry(2143)", "Delete ClassInstanceCreation(2144)", "Delete VariableDeclarationFragment(2145)", "Delete VariableDeclarationStatement(2146)", "Delete MethodInvocation(2153)", "Delete ExpressionStatement(2154)", "Delete SimpleName: authSchemeRegistry(2155)", "Delete MethodInvocation(2161)", "Delete ExpressionStatement(2162)", "Delete SimpleName: authSchemeRegistry(2163)", "Delete MethodInvocation(2169)", "Delete ExpressionStatement(2170)", "Delete SimpleName: authSchemeRegistry(2171)", "Delete MethodInvocation(2177)", "Delete ExpressionStatement(2178)", "Delete SimpleName: authSchemeRegistry(2179)", "Delete MethodInvocation(2185)", "Delete ExpressionStatement(2186)", "Delete SimpleName: execChain(2256)", "Delete SimpleName: connManager(2257)", "Delete SimpleName: routePlanner(2258)", "Delete SimpleName: cookieSpecRegistry(2259)", "Delete SimpleName: authSchemeRegistry(2260)", "Delete SimpleName: defaultCookieStore(2261)", "Delete SimpleName: defaultCredentialsProvider(2262)", "Delete SimpleName: params(2263)", "Delete ClassInstanceCreation(2264)", "Delete ReturnStatement(2265)", "Delete Block(2266)", "Delete MethodDeclaration(2267)", "Delete Modifier: static(2268)", "Delete SimpleName: ListBuilder(2269)", "Delete SimpleName: E(2270)", "Delete TypeParameter(2271)", "Delete Modifier: private(2272)", "Delete Modifier: final(2273)", "Delete SimpleName: LinkedList(2274)", "Delete SimpleType: LinkedList(2275)", "Delete SimpleName: E(2276)", "Delete SimpleType: E(2277)", "Delete ParameterizedType: LinkedList<E>(2278)", "Delete SimpleName: list(2279)", "Delete VariableDeclarationFragment(2280)", "Delete FieldDeclaration(2281)", "Delete Modifier: private(2282)", "Delete Modifier: final(2283)", "Delete SimpleName: Map(2284)", "Delete SimpleType: Map(2285)", "Delete SimpleName: Class(2286)", "Delete SimpleType: Class(2287)", "Delete WildcardType: ?(2288)", "Delete ParameterizedType: Class<?>(2289)", "Delete SimpleName: E(2290)", "Delete SimpleType: E(2291)", "Delete ParameterizedType: Map<Class<?>,E>(2292)", "Delete SimpleName: uniqueClasses(2293)", "Delete VariableDeclarationFragment(2294)", "Delete FieldDeclaration(2295)", "Delete SimpleName: ListBuilder(2296)", "Delete ThisExpression(2308)", "Delete SimpleName: uniqueClasses(2309)", "Delete FieldAccess(2310)", "Delete WildcardType: ?(2315)", "Delete ParameterizedType: Class<?>(2316)", "Delete SimpleName: E(2317)", "Delete SimpleType: E(2318)", "Delete ParameterizedType: HashMap<Class<?>,E>(2319)", "Delete ClassInstanceCreation(2320)", "Delete Assignment: =(2321)", "Delete ExpressionStatement(2322)", "Delete Block(2323)", "Delete MethodDeclaration(2324)", "Delete Modifier: public(2325)", "Delete PrimitiveType: void(2326)", "Delete SimpleName: add(2327)", "Delete Modifier: final(2328)", "Delete SimpleName: E(2329)", "Delete SimpleType: E(2330)", "Delete SimpleName: e(2331)", "Delete SingleVariableDeclaration(2332)", "Delete SimpleName: e(2333)", "Delete NullLiteral(2334)", "Delete InfixExpression: ==(2335)", "Delete ReturnStatement(2336)", "Delete Block(2337)", "Delete IfStatement(2338)", "Delete SimpleName: E(2339)", "Delete SimpleType: E(2340)", "Delete VariableDeclarationStatement(2351)", "Delete SimpleName: previous(2352)", "Delete NullLiteral(2353)", "Delete InfixExpression: !=(2354)", "Delete ThisExpression(2355)", "Delete SimpleName: list(2356)", "Delete FieldAccess(2357)", "Delete SimpleName: remove(2358)", "Delete SimpleName: previous(2359)", "Delete MethodInvocation(2360)", "Delete ExpressionStatement(2361)", "Delete Block(2362)", "Delete IfStatement(2363)", "Delete ThisExpression(2364)", "Delete SimpleName: list(2365)", "Delete FieldAccess(2366)", "Delete SimpleName: add(2367)", "Delete SimpleName: e(2368)", "Delete MethodInvocation(2369)", "Delete ExpressionStatement(2370)", "Delete ThisExpression(2371)", "Delete SimpleName: uniqueClasses(2372)", "Delete FieldAccess(2373)", "Delete SimpleName: put(2374)", "Delete SimpleName: e(2375)", "Delete SimpleName: getClass(2376)", "Delete MethodInvocation(2377)", "Delete SimpleName: e(2378)", "Delete MethodInvocation(2379)", "Delete ExpressionStatement(2380)", "Delete Block(2381)", "Delete MethodDeclaration(2382)", "Delete Modifier: public(2383)", "Delete PrimitiveType: void(2384)", "Delete SimpleName: addAll(2385)", "Delete Modifier: final(2386)", "Delete SimpleName: Collection(2387)", "Delete SimpleType: Collection(2388)", "Delete SimpleName: E(2389)", "Delete SimpleType: E(2390)", "Delete ParameterizedType: Collection<E>(2391)", "Delete SimpleName: c(2392)", "Delete SingleVariableDeclaration(2393)", "Delete ReturnStatement(2397)", "Delete Block(2398)", "Delete IfStatement(2399)", "Delete SimpleName: E(2400)", "Delete SimpleType: E(2401)", "Delete SimpleName: e(2402)", "Delete SingleVariableDeclaration(2403)", "Delete SimpleName: c(2404)", "Delete SimpleName: add(2405)", "Delete SimpleName: e(2406)", "Delete MethodInvocation(2407)", "Delete ExpressionStatement(2408)", "Delete Block(2409)", "Delete EnhancedForStatement(2410)", "Delete Block(2411)", "Delete MethodDeclaration(2412)", "Delete Modifier: public(2413)", "Delete PrimitiveType: void(2414)", "Delete SimpleName: addAll(2415)", "Delete SimpleName: E(2416)", "Delete SimpleType: E(2417)", "Delete SimpleName: c(2418)", "Delete SingleVariableDeclaration(2419)", "Delete SimpleName: c(2420)", "Delete NullLiteral(2421)", "Delete InfixExpression: ==(2422)", "Delete ReturnStatement(2423)", "Delete Block(2424)", "Delete IfStatement(2425)", "Delete SimpleName: E(2426)", "Delete SimpleType: E(2427)", "Delete SimpleName: e(2428)", "Delete SingleVariableDeclaration(2429)", "Delete SimpleName: c(2430)", "Delete SimpleName: add(2431)", "Delete SimpleName: e(2432)", "Delete MethodInvocation(2433)", "Delete ExpressionStatement(2434)", "Delete Block(2435)", "Delete EnhancedForStatement(2436)", "Delete Block(2437)", "Delete MethodDeclaration(2438)", "Delete Modifier: public(2439)", "Delete ParameterizedType: List<E>(2444)", "Delete SimpleName: build(2445)", "Delete SimpleName: ArrayList(2446)", "Delete SimpleType: ArrayList(2447)", "Delete SimpleName: E(2448)", "Delete SimpleType: E(2449)", "Delete ParameterizedType: ArrayList<E>(2450)", "Delete ThisExpression(2451)", "Delete SimpleName: list(2452)", "Delete FieldAccess(2453)", "Delete ClassInstanceCreation(2454)", "Delete ReturnStatement(2455)", "Delete Block(2456)", "Delete MethodDeclaration(2457)", "Delete TypeDeclaration: class(2458)", "Delete TextElement: Saves the default set of HttpParams in the provided parameter.(2459)", "Delete TextElement: These are:(2460)", "Delete TextElement: <ul>(2461)", "Delete TextElement: <li>(2462)", "Delete SimpleName: CoreProtocolPNames(2463)", "Delete SimpleName: PROTOCOL_VERSION(2464)", "Delete MemberRef(2465)", "Delete TagElement: @link(2466)", "Delete TextElement: : 1.1</li>(2467)", "Delete TextElement: <li>(2468)", "Delete SimpleName: CoreProtocolPNames(2469)", "Delete SimpleName: HTTP_CONTENT_CHARSET(2470)", "Delete MemberRef(2471)", "Delete TagElement: @link(2472)", "Delete TextElement: : ISO-8859-1</li>(2473)", "Delete TextElement: <li>(2474)", "Delete SimpleName: CoreConnectionPNames(2475)", "Delete SimpleName: TCP_NODELAY(2476)", "Delete MemberRef(2477)", "Delete TagElement: @link(2478)", "Delete TextElement: : true</li>(2479)", "Delete TextElement: <li>(2480)", "Delete SimpleName: CoreConnectionPNames(2481)", "Delete SimpleName: SOCKET_BUFFER_SIZE(2482)", "Delete MemberRef(2483)", "Delete TagElement: @link(2484)", "Delete TextElement: : 8192</li>(2485)", "Delete TextElement: <li>(2486)", "Delete SimpleName: CoreProtocolPNames(2487)", "Delete SimpleName: USER_AGENT(2488)", "Delete MemberRef(2489)", "Delete TagElement: @link(2490)", "Delete TextElement: : Apache-HttpClient/<release> (java 1.5)</li>(2491)", "Delete TextElement: </ul>(2492)", "Delete TagElement(2493)", "Delete Javadoc(2494)", "Delete Modifier: public(2495)", "Delete Modifier: static(2496)", "Delete PrimitiveType: void(2497)", "Delete SimpleName: setDefaultHttpParams(2498)", "Delete SimpleType: HttpParams(2500)", "Delete SimpleName: params(2501)", "Delete SingleVariableDeclaration(2502)", "Delete MethodInvocation(2507)", "Delete ExpressionStatement(2508)", "Delete MethodInvocation(2514)", "Delete MethodInvocation(2515)", "Delete ExpressionStatement(2516)", "Delete SimpleName: HttpConnectionParams(2523)", "Delete SimpleName: setSocketBufferSize(2524)", "Delete SimpleName: params(2525)", "Delete NumberLiteral: 8192(2526)", "Delete MethodInvocation(2527)", "Delete ExpressionStatement(2528)", "Delete SimpleName: HttpProtocolParams(2559)", "Delete SimpleName: setUserAgent(2560)", "Delete SimpleName: params(2561)", "Delete MethodInvocation(2566)", "Delete ExpressionStatement(2567)", "Delete Block(2568)", "Delete MethodDeclaration(2569)"]}}, {"InternalHttpClient_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 20"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS QualifiedName: org.apache.http.client.protocol.HttpClientContext to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 16"]}, {"root": "INS ImportDeclaration to CompilationUnit at 17", "operations": ["INS QualifiedName: org.apache.http.config.Lookup to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 17"]}, {"root": "UPDATE from org.apache.http.auth.AuthSchemeRegistry to org.apache.http.auth.AuthSchemeProvider", "operations": ["UPD QualifiedName: org.apache.http.auth.AuthSchemeRegistry from org.apache.http.auth.AuthSchemeRegistry to org.apache.http.auth.AuthSchemeProvider"]}, {"root": "UPDATE from org.apache.http.cookie.CookieSpecRegistry to org.apache.http.cookie.CookieSpecProvider", "operations": ["UPD QualifiedName: org.apache.http.cookie.CookieSpecRegistry from org.apache.http.cookie.CookieSpecRegistry to org.apache.http.cookie.CookieSpecProvider"]}, {"root": "INS ParameterizedType: Lookup<CookieSpecProvider> to FieldDeclaration at 2", "operations": ["INS SimpleName: Lookup to SimpleType: Lookup at 0", "INS ParameterizedType: Lookup<CookieSpecProvider> to FieldDeclaration at 2", "INS SimpleType: CookieSpecProvider to ParameterizedType: Lookup<CookieSpecProvider> at 1", "INS SimpleType: Lookup to ParameterizedType: Lookup<CookieSpecProvider> at 0"]}, {"root": "INS ParameterizedType: Lookup<AuthSchemeProvider> to FieldDeclaration at 2", "operations": ["INS ParameterizedType: Lookup<AuthSchemeProvider> to FieldDeclaration at 2", "INS SimpleType: AuthSchemeProvider to ParameterizedType: Lookup<AuthSchemeProvider> at 1", "INS SimpleType: Lookup to ParameterizedType: Lookup<AuthSchemeProvider> at 0", "INS SimpleName: Lookup to SimpleType: Lookup at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleMemberAnnotation to MethodDeclaration at 0"]}, {"root": "INS ParameterizedType: Lookup<CookieSpecProvider> to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: Lookup to SimpleType: Lookup at 0", "INS SimpleType: Lookup to ParameterizedType: Lookup<CookieSpecProvider> at 0", "INS SimpleType: CookieSpecProvider to ParameterizedType: Lookup<CookieSpecProvider> at 1", "INS ParameterizedType: Lookup<CookieSpecProvider> to SingleVariableDeclaration at 1"]}, {"root": "INS ParameterizedType: Lookup<AuthSchemeProvider> to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: AuthSchemeProvider to ParameterizedType: Lookup<AuthSchemeProvider> at 1", "INS ParameterizedType: Lookup<AuthSchemeProvider> to SingleVariableDeclaration at 1", "INS SimpleName: Lookup to SimpleType: Lookup at 0", "INS SimpleType: Lookup to ParameterizedType: Lookup<AuthSchemeProvider> at 0"]}, {"root": "UPDATE from CookieSpecRegistry to CookieSpecProvider", "operations": ["UPD SimpleName: CookieSpecRegistry from CookieSpecRegistry to CookieSpecProvider", "UPD SimpleName: CookieSpecRegistry from CookieSpecRegistry to CookieSpecProvider"]}, {"root": "MOVE from SimpleType: CookieSpecProvider", "operations": ["MOV SimpleName: CookieSpecRegistry to SimpleType: CookieSpecProvider at 0"]}, {"root": "UPDATE from AuthSchemeRegistry to AuthSchemeProvider", "operations": ["UPD SimpleName: AuthSchemeRegistry from AuthSchemeRegistry to AuthSchemeProvider", "UPD SimpleName: AuthSchemeRegistry from AuthSchemeRegistry to AuthSchemeProvider"]}, {"root": "MOVE from SimpleType: AuthSchemeProvider", "operations": ["MOV SimpleName: AuthSchemeRegistry to SimpleType: AuthSchemeProvider at 0"]}, {"root": "UPDATE from HttpContext to HttpClientContext", "operations": ["UPD SimpleType: HttpContext from HttpContext to HttpClientContext", "UPD SimpleName: HttpContext from HttpContext to HttpClientContext"]}, {"root": "MOVE from SimpleType: CookieSpecProvider", "operations": ["MOV SimpleName: CookieSpecRegistry to SimpleType: CookieSpecProvider at 0"]}, {"root": "MOVE from SimpleType: AuthSchemeProvider", "operations": ["MOV SimpleName: AuthSchemeRegistry to SimpleType: AuthSchemeProvider at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV ClassInstanceCreation to Assignment: = at 1"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: HttpClientContext to MethodInvocation at 0", "INS SimpleName: adapt to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from getConnectionManager to connManager", "operations": ["UPD SimpleName: getConnectionManager from getConnectionManager to connManager"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getConnectionManager to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ConditionalExpression to MethodInvocation at 2"]}, {"root": "DEL SimpleType: CookieSpecRegistry", "operations": ["DEL SimpleType: CookieSpecRegistry"]}, {"root": "DEL SimpleType: AuthSchemeRegistry", "operations": ["DEL SimpleType: AuthSchemeRegistry"]}, {"root": "DEL SimpleType: CookieSpecRegistry", "operations": ["DEL SimpleType: CookieSpecRegistry"]}, {"root": "DEL SimpleType: AuthSchemeRegistry", "operations": ["DEL SimpleType: AuthSchemeRegistry"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: params", "DEL SimpleName: HttpParams", "DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL SimpleType: HttpParams"]}, {"root": "DEL ConditionalExpression", "operations": ["DEL SimpleName: params", "DEL SimpleName: params", "DEL ConditionalExpression", "DEL NullLiteral", "DEL InfixExpression: !="]}, {"root": "DEL IfStatement", "operations": ["DEL NullLiteral", "DEL SimpleName: getSchemeRegistry", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: getAttribute", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL FieldAccess", "DEL QualifiedName: ClientContext.SCHEME_REGISTRY", "DEL SimpleName: context", "DEL SimpleName: context", "DEL Block", "DEL MethodInvocation", "DEL ThisExpression", "DEL SimpleName: connManager", "DEL SimpleName: setAttribute", "DEL QualifiedName: ClientContext.SCHEME_REGISTRY"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}]}}, {"InternalHttpClient_diff": {"operations": ["Move ImportDeclaration(37) into CompilationUnit(709) at 20", "Insert ImportDeclaration(33) into CompilationUnit(709) at 16", "Insert ImportDeclaration(35) into CompilationUnit(709) at 17", "Update QualifiedName: org.apache.http.auth.AuthSchemeRegistry(14) to org.apache.http.auth.AuthSchemeProvider", "Insert QualifiedName: org.apache.http.client.protocol.HttpClientContext(32) into ImportDeclaration(33) at 0", "Insert QualifiedName: org.apache.http.config.Lookup(34) into ImportDeclaration(35) at 0", "Update QualifiedName: org.apache.http.cookie.CookieSpecRegistry(46) to org.apache.http.cookie.CookieSpecProvider", "Insert ParameterizedType: Lookup<CookieSpecProvider>(99) into FieldDeclaration(102) at 2", "Insert ParameterizedType: Lookup<AuthSchemeProvider>(109) into FieldDeclaration(112) at 2", "Move SingleMemberAnnotation(65) into MethodDeclaration(707) at 0", "Insert SimpleType: Lookup(96) into ParameterizedType: Lookup<CookieSpecProvider>(99) at 0", "Insert SimpleType: CookieSpecProvider(98) into ParameterizedType: Lookup<CookieSpecProvider>(99) at 1", "Insert SimpleType: Lookup(106) into ParameterizedType: Lookup<AuthSchemeProvider>(109) at 0", "Insert SimpleType: AuthSchemeProvider(108) into ParameterizedType: Lookup<AuthSchemeProvider>(109) at 1", "Insert ParameterizedType: Lookup<CookieSpecProvider>(156) into SingleVariableDeclaration(158) at 1", "Insert ParameterizedType: Lookup<AuthSchemeProvider>(164) into SingleVariableDeclaration(166) at 1", "Insert SimpleName: Lookup(95) into SimpleType: Lookup(96) at 0", "Update SimpleName: CookieSpecRegistry(94) to CookieSpecProvider", "Move SimpleName: CookieSpecRegistry(94) into SimpleType: CookieSpecProvider(98) at 0", "Insert SimpleName: Lookup(105) into SimpleType: Lookup(106) at 0", "Update SimpleName: AuthSchemeRegistry(101) to AuthSchemeProvider", "Move SimpleName: AuthSchemeRegistry(101) into SimpleType: AuthSchemeProvider(108) at 0", "Insert SimpleType: Lookup(153) into ParameterizedType: Lookup<CookieSpecProvider>(156) at 0", "Insert SimpleType: CookieSpecProvider(155) into ParameterizedType: Lookup<CookieSpecProvider>(156) at 1", "Insert SimpleType: Lookup(161) into ParameterizedType: Lookup<AuthSchemeProvider>(164) at 0", "Insert SimpleType: AuthSchemeProvider(163) into ParameterizedType: Lookup<AuthSchemeProvider>(164) at 1", "Update SimpleType: HttpContext(332) to HttpClientContext", "Insert SimpleName: Lookup(152) into SimpleType: Lookup(153) at 0", "Update SimpleName: CookieSpecRegistry(145) to CookieSpecProvider", "Move SimpleName: CookieSpecRegistry(145) into SimpleType: CookieSpecProvider(155) at 0", "Insert SimpleName: Lookup(160) into SimpleType: Lookup(161) at 0", "Update SimpleName: AuthSchemeRegistry(150) to AuthSchemeProvider", "Move SimpleName: AuthSchemeRegistry(150) into SimpleType: AuthSchemeProvider(163) at 0", "Move ClassInstanceCreation(251) into Assignment: =(256) at 1", "Update SimpleName: HttpContext(331) to HttpClientContext", "Insert MethodInvocation(347) into VariableDeclarationFragment(348) at 1", "Update SimpleName: getConnectionManager(616) to connManager", "Move SimpleName: getConnectionManager(616) into MethodInvocation(606) at 0", "Insert SimpleName: HttpClientContext(337) into MethodInvocation(347) at 0", "Insert SimpleName: adapt(338) into MethodInvocation(347) at 1", "Move ConditionalExpression(341) into MethodInvocation(347) at 2", "Delete SimpleType: CookieSpecRegistry(95)", "Delete SimpleType: AuthSchemeRegistry(102)", "Delete SimpleType: CookieSpecRegistry(146)", "Delete SimpleType: AuthSchemeRegistry(151)", "Delete Modifier: final(164)", "Delete SimpleName: HttpParams(165)", "Delete SimpleType: HttpParams(166)", "Delete SimpleName: params(167)", "Delete SingleVariableDeclaration(168)", "Delete SimpleName: params(245)", "Delete NullLiteral(246)", "Delete InfixExpression: !=(247)", "Delete SimpleName: params(248)", "Delete ConditionalExpression(252)", "Delete SimpleName: context(376)", "Delete SimpleName: getAttribute(377)", "Delete QualifiedName: ClientContext.SCHEME_REGISTRY(378)", "Delete MethodInvocation(379)", "Delete NullLiteral(380)", "Delete InfixExpression: ==(381)", "Delete SimpleName: context(382)", "Delete SimpleName: setAttribute(383)", "Delete QualifiedName: ClientContext.SCHEME_REGISTRY(384)", "Delete ThisExpression(385)", "Delete SimpleName: connManager(386)", "Delete FieldAccess(387)", "Delete SimpleName: getSchemeRegistry(388)", "Delete MethodInvocation(389)", "Delete MethodInvocation(390)", "Delete ExpressionStatement(391)", "Delete Block(392)", "Delete IfStatement(393)", "Delete MethodInvocation(617)"]}}, {"MainClientExec_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 26"]}, {"root": "UPDATE from org.apache.http.conn.scheme.Scheme to org.apache.http.client.protocol.HttpClientContext", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.Scheme from org.apache.http.conn.scheme.Scheme to org.apache.http.client.protocol.HttpClientContext"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: clientContext to MethodInvocation at 0", "INS SimpleName: targetAuthState to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getTargetAuthState to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 4"]}, {"root": "INS VariableDeclarationStatement to Block at 6", "operations": ["INS VariableDeclarationStatement to Block at 6"]}, {"root": "UPDATE from AuthState to HttpClientContext", "operations": ["UPD SimpleType: AuthState from AuthState to HttpClientContext", "UPD SimpleName: context from context to HttpClientContext", "UPD SimpleName: AuthState from AuthState to HttpClientContext"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AuthState to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AuthState to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from targetAuthState to clientContext", "operations": ["UPD SimpleName: targetAuthState from targetAuthState to clientContext", "UPD SimpleName: context from context to clientContext", "UPD SimpleName: context from context to clientContext"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: context to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS QualifiedName: ClientContext.TARGET_AUTH_STATE to MethodInvocation at 2", "INS SimpleName: targetAuthState to MethodInvocation at 3", "INS SimpleName: context to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setAttribute to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: proxyAuthState to MethodInvocation at 3", "INS ExpressionStatement to Block at 1", "INS QualifiedName: ClientContext.PROXY_AUTH_STATE to MethodInvocation at 2", "INS SimpleName: setAttribute to MethodInvocation at 1", "INS SimpleName: context to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAttribute to MethodInvocation at 1", "MOV SimpleName: context to MethodInvocation at 0"]}, {"root": "UPDATE from getAttribute to adapt", "operations": ["UPD SimpleName: getAttribute from getAttribute to adapt"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAttribute to MethodInvocation at 1", "MOV SimpleName: context to MethodInvocation at 0"]}, {"root": "UPDATE from getAttribute to getProxyAuthState", "operations": ["UPD SimpleName: getAttribute from getAttribute to getProxyAuthState"]}, {"root": "UPDATE from getAttribute to getUserToken", "operations": ["UPD SimpleName: getAttribute from getAttribute to getUserToken"]}, {"root": "UPDATE from buffer to target", "operations": ["UPD SimpleName: buffer from buffer to target"]}, {"root": "UPDATE from toString to toHostString", "operations": ["UPD SimpleName: toString from toString to toHostString"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getTargetHost to MethodInvocation at 1"]}, {"root": "UPDATE from getDefaultPort to getPort", "operations": ["UPD SimpleName: getDefaultPort from getDefaultPort to getPort"]}, {"root": "UPDATE from scheme to route", "operations": ["UPD SimpleName: scheme from scheme to route"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: scheme to MethodInvocation at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.http.conn.scheme.SchemeRegistry", "DEL ImportDeclaration"]}, {"root": "DEL CastExpression", "operations": ["DEL MethodInvocation", "DEL CastExpression", "DEL QualifiedName: ClientContext.TARGET_AUTH_STATE"]}, {"root": "DEL CastExpression", "operations": ["DEL MethodInvocation", "DEL QualifiedName: ClientContext.PROXY_AUTH_STATE", "DEL CastExpression"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: AuthState", "DEL VariableDeclarationStatement", "DEL SimpleType: AuthState"]}, {"root": "DEL QualifiedName: ClientContext.USER_TOKEN", "operations": ["DEL QualifiedName: ClientContext.USER_TOKEN"]}, {"root": "DEL SimpleName: params", "operations": ["DEL SimpleName: params"]}, {"root": "DEL SimpleName: params", "operations": ["DEL SimpleName: params"]}, {"root": "DEL SimpleName: params", "operations": ["DEL SimpleName: params"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: reg", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: reg", "DEL SimpleName: SchemeRegistry", "DEL VariableDeclarationFragment", "DEL SimpleType: SchemeRegistry", "DEL MethodInvocation", "DEL SimpleName: getAttribute", "DEL SimpleName: reg", "DEL SimpleType: HttpContext", "DEL Block", "DEL SimpleName: context", "DEL Modifier: private", "DEL CastExpression", "DEL Assignment: =", "DEL Modifier: final", "DEL SimpleType: SchemeRegistry", "DEL SimpleName: context", "DEL Block", "DEL SimpleName: getSchemeRegistry", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL SimpleName: HttpContext", "DEL InfixExpression: ==", "DEL SimpleName: SchemeRegistry", "DEL SimpleType: SchemeRegistry", "DEL SimpleName: reg", "DEL NullLiteral", "DEL SimpleName: getSchemeRegistry", "DEL QualifiedName: ClientContext.SCHEME_REGISTRY", "DEL SimpleName: SchemeRegistry", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: host", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: getHostName", "DEL VariableDeclarationStatement", "DEL SimpleName: target"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: port", "DEL SimpleName: target", "DEL VariableDeclarationFragment", "DEL SimpleName: getPort", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: Scheme", "DEL SimpleName: getSchemeRegistry", "DEL MethodInvocation", "DEL SimpleName: registry", "DEL SimpleName: registry", "DEL MethodInvocation", "DEL SimpleName: SchemeRegistry", "DEL SimpleName: getScheme", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: getDefaultPort", "DEL SimpleType: SchemeRegistry", "DEL SimpleName: port", "DEL SimpleName: scheme", "DEL VariableDeclarationFragment", "DEL SimpleName: port", "DEL SimpleName: context", "DEL SimpleName: getSchemeName", "DEL Assignment: =", "DEL ExpressionStatement", "DEL NumberLiteral: 0", "DEL SimpleType: Scheme", "DEL SimpleName: target", "DEL IfStatement", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: scheme", "DEL InfixExpression: <"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: length", "DEL VariableDeclarationStatement", "DEL InfixExpression: +", "DEL SimpleName: host", "DEL SimpleName: StringBuilder", "DEL SimpleType: StringBuilder", "DEL SimpleName: buffer", "DEL ClassInstanceCreation", "DEL SimpleName: StringBuilder", "DEL VariableDeclarationFragment", "DEL SimpleType: StringBuilder", "DEL MethodInvocation", "DEL NumberLiteral: 6"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: buffer", "DEL ExpressionStatement", "DEL SimpleName: append", "DEL SimpleName: host"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL CharacterLiteral: ':'", "DEL SimpleName: append", "DEL MethodInvocation", "DEL SimpleName: buffer"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: buffer", "DEL SimpleName: port", "DEL SimpleName: Integer", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: append", "DEL SimpleName: toString"]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleType: String", "DEL SimpleName: String"]}, {"root": "DEL FieldAccess", "operations": ["DEL SimpleName: connManager", "DEL ThisExpression", "DEL FieldAccess"]}, {"root": "DEL SimpleName: params", "operations": ["DEL SimpleName: params"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: scheme", "DEL SimpleName: connManager", "DEL SimpleType: Scheme", "DEL SimpleName: Scheme", "DEL SimpleName: getScheme", "DEL SimpleName: target", "DEL VariableDeclarationFragment", "DEL SimpleName: getSchemeRegistry", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL MethodInvocation"]}]}}, {"MainClientExec_diff": {"operations": ["Move ImportDeclaration(69) into CompilationUnit(2055) at 26", "Update QualifiedName: org.apache.http.conn.scheme.Scheme(68) to org.apache.http.client.protocol.HttpClientContext", "Insert VariableDeclarationStatement(567) into Block(1303) at 4", "Insert VariableDeclarationStatement(592) into Block(1303) at 6", "Update SimpleType: AuthState(554) to HttpClientContext", "Move SimpleType: AuthState(557) into VariableDeclarationStatement(567) at 0", "Insert VariableDeclarationFragment(566) into VariableDeclarationStatement(567) at 1", "Move SimpleType: AuthState(580) into VariableDeclarationStatement(592) at 0", "Move VariableDeclarationFragment(586) into VariableDeclarationStatement(592) at 1", "Move SimpleType: String(1650) into VariableDeclarationStatement(1625) at 0", "Update SimpleName: AuthState(553) to HttpClientContext", "Update SimpleName: targetAuthState(555) to clientContext", "Insert MethodInvocation(557) into VariableDeclarationFragment(558) at 1", "Insert SimpleName: targetAuthState(562) into VariableDeclarationFragment(566) at 0", "Insert MethodInvocation(565) into VariableDeclarationFragment(566) at 1", "Insert ExpressionStatement(582) into Block(583) at 1", "Insert MethodInvocation(590) into VariableDeclarationFragment(591) at 1", "Insert ExpressionStatement(607) into Block(608) at 1", "Update SimpleName: context(558) to HttpClientContext", "Move SimpleName: context(558) into MethodInvocation(557) at 0", "Update SimpleName: getAttribute(559) to adapt", "Move SimpleName: getAttribute(559) into MethodInvocation(557) at 1", "Insert SimpleName: context(556) into MethodInvocation(557) at 2", "Insert SimpleName: clientContext(563) into MethodInvocation(565) at 0", "Insert SimpleName: getTargetAuthState(564) into MethodInvocation(565) at 1", "Insert MethodInvocation(581) into ExpressionStatement(582) at 0", "Update SimpleName: context(581) to clientContext", "Move SimpleName: context(581) into MethodInvocation(590) at 0", "Update SimpleName: getAttribute(582) to getProxyAuthState", "Move SimpleName: getAttribute(582) into MethodInvocation(590) at 1", "Insert MethodInvocation(606) into ExpressionStatement(607) at 0", "Update SimpleName: context(610) to clientContext", "Update SimpleName: getAttribute(611) to getUserToken", "Update SimpleName: buffer(1728) to target", "Update SimpleName: toString(1729) to toHostString", "Insert SimpleName: context(577) into MethodInvocation(581) at 0", "Insert SimpleName: setAttribute(578) into MethodInvocation(581) at 1", "Insert QualifiedName: ClientContext.TARGET_AUTH_STATE(579) into MethodInvocation(581) at 2", "Insert SimpleName: targetAuthState(580) into MethodInvocation(581) at 3", "Insert SimpleName: context(602) into MethodInvocation(606) at 0", "Insert SimpleName: setAttribute(603) into MethodInvocation(606) at 1", "Insert QualifiedName: ClientContext.PROXY_AUTH_STATE(604) into MethodInvocation(606) at 2", "Insert SimpleName: proxyAuthState(605) into MethodInvocation(606) at 3", "Move FieldAccess(1568) into MethodInvocation(1678) at 0", "Insert MethodInvocation(1975) into MethodInvocation(1977) at 0", "Update SimpleName: getDefaultPort(2093) to getPort", "Update SimpleName: scheme(2092) to route", "Move SimpleName: scheme(2092) into MethodInvocation(1975) at 0", "Insert SimpleName: getTargetHost(1974) into MethodInvocation(1975) at 1", "Delete QualifiedName: org.apache.http.conn.scheme.SchemeRegistry(70)", "Delete ImportDeclaration(71)", "Delete QualifiedName: ClientContext.TARGET_AUTH_STATE(560)", "Delete MethodInvocation(561)", "Delete CastExpression(562)", "Delete QualifiedName: ClientContext.PROXY_AUTH_STATE(583)", "Delete MethodInvocation(584)", "Delete CastExpression(585)", "Delete SimpleName: AuthState(576)", "Delete SimpleType: AuthState(577)", "Delete VariableDeclarationStatement(587)", "Delete QualifiedName: ClientContext.USER_TOKEN(612)", "Delete SimpleName: params(1384)", "Delete SimpleName: params(1409)", "Delete SimpleName: params(1504)", "Delete Modifier: private(1541)", "Delete SimpleName: SchemeRegistry(1542)", "Delete SimpleType: SchemeRegistry(1543)", "Delete SimpleName: getSchemeRegistry(1544)", "Delete Modifier: final(1545)", "Delete SimpleName: HttpContext(1546)", "Delete SimpleType: HttpContext(1547)", "Delete SimpleName: context(1548)", "Delete SingleVariableDeclaration(1549)", "Delete SimpleName: SchemeRegistry(1550)", "Delete SimpleType: SchemeRegistry(1551)", "Delete SimpleName: reg(1552)", "Delete SimpleName: SchemeRegistry(1553)", "Delete SimpleType: SchemeRegistry(1554)", "Delete SimpleName: context(1555)", "Delete SimpleName: getAttribute(1556)", "Delete QualifiedName: ClientContext.SCHEME_REGISTRY(1557)", "Delete MethodInvocation(1558)", "Delete CastExpression(1559)", "Delete VariableDeclarationFragment(1560)", "Delete VariableDeclarationStatement(1561)", "Delete SimpleName: reg(1562)", "Delete NullLiteral(1563)", "Delete InfixExpression: ==(1564)", "Delete SimpleName: reg(1565)", "Delete SimpleName: getSchemeRegistry(1569)", "Delete MethodInvocation(1570)", "Delete Assignment: =(1571)", "Delete ExpressionStatement(1572)", "Delete Block(1573)", "Delete IfStatement(1574)", "Delete SimpleName: reg(1575)", "Delete ReturnStatement(1576)", "Delete Block(1577)", "Delete MethodDeclaration(1578)", "Delete SimpleName: host(1651)", "Delete SimpleName: target(1652)", "Delete SimpleName: getHostName(1653)", "Delete MethodInvocation(1654)", "Delete VariableDeclarationFragment(1655)", "Delete VariableDeclarationStatement(1656)", "Delete PrimitiveType: int(1657)", "Delete SimpleName: port(1658)", "Delete SimpleName: target(1659)", "Delete SimpleName: getPort(1660)", "Delete MethodInvocation(1661)", "Delete VariableDeclarationFragment(1662)", "Delete VariableDeclarationStatement(1663)", "Delete SimpleName: port(1664)", "Delete NumberLiteral: 0(1665)", "Delete InfixExpression: <(1666)", "Delete SimpleName: SchemeRegistry(1667)", "Delete SimpleType: SchemeRegistry(1668)", "Delete SimpleName: registry(1669)", "Delete SimpleName: getSchemeRegistry(1670)", "Delete SimpleName: context(1671)", "Delete MethodInvocation(1672)", "Delete VariableDeclarationFragment(1673)", "Delete VariableDeclarationStatement(1674)", "Delete SimpleName: Scheme(1675)", "Delete SimpleType: Scheme(1676)", "Delete SimpleName: scheme(1677)", "Delete SimpleName: registry(1678)", "Delete SimpleName: getScheme(1679)", "Delete SimpleName: target(1680)", "Delete SimpleName: getSchemeName(1681)", "Delete MethodInvocation(1682)", "Delete MethodInvocation(1683)", "Delete VariableDeclarationFragment(1684)", "Delete VariableDeclarationStatement(1685)", "Delete SimpleName: port(1686)", "Delete SimpleName: scheme(1687)", "Delete SimpleName: getDefaultPort(1688)", "Delete MethodInvocation(1689)", "Delete Assignment: =(1690)", "Delete ExpressionStatement(1691)", "Delete Block(1692)", "Delete IfStatement(1693)", "Delete SimpleName: StringBuilder(1694)", "Delete SimpleType: StringBuilder(1695)", "Delete SimpleName: buffer(1696)", "Delete SimpleName: StringBuilder(1697)", "Delete SimpleType: StringBuilder(1698)", "Delete SimpleName: host(1699)", "Delete SimpleName: length(1700)", "Delete MethodInvocation(1701)", "Delete NumberLiteral: 6(1702)", "Delete InfixExpression: +(1703)", "Delete ClassInstanceCreation(1704)", "Delete VariableDeclarationFragment(1705)", "Delete VariableDeclarationStatement(1706)", "Delete SimpleName: buffer(1707)", "Delete SimpleName: append(1708)", "Delete SimpleName: host(1709)", "Delete MethodInvocation(1710)", "Delete ExpressionStatement(1711)", "Delete SimpleName: buffer(1712)", "Delete SimpleName: append(1713)", "Delete CharacterLiteral: ':'(1714)", "Delete MethodInvocation(1715)", "Delete ExpressionStatement(1716)", "Delete SimpleName: buffer(1717)", "Delete SimpleName: append(1718)", "Delete SimpleName: Integer(1719)", "Delete SimpleName: toString(1720)", "Delete SimpleName: port(1721)", "Delete MethodInvocation(1722)", "Delete MethodInvocation(1723)", "Delete ExpressionStatement(1724)", "Delete SimpleName: String(1725)", "Delete SimpleType: String(1726)", "Delete ThisExpression(1773)", "Delete SimpleName: connManager(1774)", "Delete FieldAccess(1775)", "Delete SimpleName: params(1785)", "Delete SimpleName: Scheme(2075)", "Delete SimpleType: Scheme(2076)", "Delete SimpleName: scheme(2077)", "Delete SimpleName: connManager(2078)", "Delete SimpleName: getSchemeRegistry(2079)", "Delete MethodInvocation(2080)", "Delete SimpleName: getScheme(2081)", "Delete SimpleName: target(2082)", "Delete MethodInvocation(2083)", "Delete VariableDeclarationFragment(2084)", "Delete VariableDeclarationStatement(2085)"]}}, {"ProtocolExec_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS ImportDeclaration to CompilationUnit at 15", "INS QualifiedName: org.apache.http.client.protocol.HttpClientContext to ImportDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS VariableDeclarationStatement to Block at 3", "INS SimpleName: adapt to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: context to MethodInvocation at 2", "INS SimpleName: clientContext to VariableDeclarationFragment at 0", "INS SimpleName: HttpClientContext to MethodInvocation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 5", "operations": ["INS VariableDeclarationStatement to Block at 5"]}, {"root": "UPDATE from AuthState to HttpClientContext", "operations": ["UPD SimpleType: AuthState from AuthState to HttpClientContext", "UPD SimpleName: AuthState from AuthState to HttpClientContext"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AuthState to VariableDeclarationStatement at 0", "MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AuthState to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from context to clientContext", "operations": ["UPD SimpleName: context from context to clientContext"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAttribute to MethodInvocation at 1", "MOV SimpleName: context to MethodInvocation at 0"]}, {"root": "UPDATE from getAttribute to getTargetAuthState", "operations": ["UPD SimpleName: getAttribute from getAttribute to getTargetAuthState"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression", "DEL MethodInvocation", "DEL QualifiedName: ClientContext.TARGET_AUTH_STATE"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement"]}]}}, {"ProtocolExec_diff": {"operations": ["Insert ImportDeclaration(31) into CompilationUnit(527) at 15", "Insert QualifiedName: org.apache.http.client.protocol.HttpClientContext(30) into ImportDeclaration(31) at 0", "Insert VariableDeclarationStatement(310) into Block(524) at 3", "Insert VariableDeclarationStatement(326) into Block(524) at 5", "Update SimpleType: AuthState(309) to HttpClientContext", "Move SimpleType: AuthState(309) into VariableDeclarationStatement(310) at 0", "Insert VariableDeclarationFragment(309) into VariableDeclarationStatement(310) at 1", "Move SimpleType: AuthState(312) into VariableDeclarationStatement(326) at 0", "Move VariableDeclarationFragment(318) into VariableDeclarationStatement(326) at 1", "Update SimpleName: AuthState(308) to HttpClientContext", "Insert SimpleName: clientContext(304) into VariableDeclarationFragment(309) at 0", "Insert MethodInvocation(308) into VariableDeclarationFragment(309) at 1", "Insert MethodInvocation(324) into VariableDeclarationFragment(325) at 1", "Insert SimpleName: HttpClientContext(305) into MethodInvocation(308) at 0", "Insert SimpleName: adapt(306) into MethodInvocation(308) at 1", "Insert SimpleName: context(307) into MethodInvocation(308) at 2", "Update SimpleName: context(313) to clientContext", "Move SimpleName: context(313) into MethodInvocation(324) at 0", "Update SimpleName: getAttribute(314) to getTargetAuthState", "Move SimpleName: getAttribute(314) into MethodInvocation(324) at 1", "Delete QualifiedName: ClientContext.TARGET_AUTH_STATE(315)", "Delete MethodInvocation(316)", "Delete CastExpression(317)", "Delete VariableDeclarationStatement(319)"]}}, {"RedirectExec_cluster": {"actions": [{"root": "UPDATE from org.apache.http.client.protocol.ClientContext to org.apache.http.client.protocol.HttpClientContext", "operations": ["UPD QualifiedName: org.apache.http.client.protocol.ClientContext from org.apache.http.client.protocol.ClientContext to org.apache.http.client.protocol.HttpClientContext"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleName: adapt to MethodInvocation at 1", "INS SimpleName: clientContext to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: HttpClientContext to SimpleType: HttpClientContext at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: context to MethodInvocation at 2", "INS SimpleType: HttpClientContext to VariableDeclarationStatement at 0", "INS SimpleName: HttpClientContext to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 3"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AuthState to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AuthState to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from context to clientContext", "operations": ["UPD SimpleName: context from context to clientContext", "UPD SimpleName: context from context to clientContext"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAttribute to MethodInvocation at 1", "MOV SimpleName: context to MethodInvocation at 0"]}, {"root": "UPDATE from getAttribute to getTargetAuthState", "operations": ["UPD SimpleName: getAttribute from getAttribute to getTargetAuthState"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAttribute to MethodInvocation at 1", "MOV SimpleName: context to MethodInvocation at 0"]}, {"root": "UPDATE from getAttribute to getProxyAuthState", "operations": ["UPD SimpleName: getAttribute from getAttribute to getProxyAuthState"]}, {"root": "DEL SimpleType: AuthState", "operations": ["DEL SimpleName: AuthState", "DEL SimpleType: AuthState"]}, {"root": "DEL CastExpression", "operations": ["DEL MethodInvocation", "DEL QualifiedName: ClientContext.TARGET_AUTH_STATE", "DEL CastExpression"]}, {"root": "DEL SimpleType: AuthState", "operations": ["DEL SimpleType: AuthState", "DEL SimpleName: AuthState"]}, {"root": "DEL CastExpression", "operations": ["DEL CastExpression", "DEL MethodInvocation", "DEL QualifiedName: ClientContext.PROXY_AUTH_STATE"]}]}}, {"RedirectExec_diff": {"operations": ["Update QualifiedName: org.apache.http.client.protocol.ClientContext(36) to org.apache.http.client.protocol.HttpClientContext", "Insert VariableDeclarationStatement(248) into Block(583) at 3", "Insert SimpleType: HttpClientContext(241) into VariableDeclarationStatement(248) at 0", "Insert VariableDeclarationFragment(247) into VariableDeclarationStatement(248) at 1", "Insert SimpleName: HttpClientContext(240) into SimpleType: HttpClientContext(241) at 0", "Insert SimpleName: clientContext(242) into VariableDeclarationFragment(247) at 0", "Insert MethodInvocation(246) into VariableDeclarationFragment(247) at 1", "Insert SimpleName: HttpClientContext(243) into MethodInvocation(246) at 0", "Insert SimpleName: adapt(244) into MethodInvocation(246) at 1", "Insert SimpleName: context(245) into MethodInvocation(246) at 2", "Move SimpleType: AuthState(397) into VariableDeclarationStatement(409) at 0", "Move SimpleType: AuthState(425) into VariableDeclarationStatement(433) at 0", "Insert MethodInvocation(407) into VariableDeclarationFragment(408) at 1", "Insert MethodInvocation(431) into VariableDeclarationFragment(432) at 1", "Update SimpleName: context(398) to clientContext", "Move SimpleName: context(398) into MethodInvocation(407) at 0", "Update SimpleName: getAttribute(399) to getTargetAuthState", "Move SimpleName: getAttribute(399) into MethodInvocation(407) at 1", "Update SimpleName: context(426) to clientContext", "Move SimpleName: context(426) into MethodInvocation(431) at 0", "Update SimpleName: getAttribute(427) to getProxyAuthState", "Move SimpleName: getAttribute(427) into MethodInvocation(431) at 1", "Delete SimpleName: AuthState(393)", "Delete SimpleType: AuthState(394)", "Delete QualifiedName: ClientContext.TARGET_AUTH_STATE(400)", "Delete MethodInvocation(401)", "Delete CastExpression(402)", "Delete SimpleName: AuthState(421)", "Delete SimpleType: AuthState(422)", "Delete QualifiedName: ClientContext.PROXY_AUTH_STATE(428)", "Delete MethodInvocation(429)", "Delete CastExpression(430)"]}}], "commit_stats": [{"total_files": 84, "deleted_files": 5, "testing": "True", "maintenance": "False", "build": "False"}]}