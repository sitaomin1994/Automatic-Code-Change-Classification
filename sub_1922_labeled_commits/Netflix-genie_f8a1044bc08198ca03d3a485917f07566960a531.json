{"application": "Netflix-genie", "csha": "f8a1044bc08198ca03d3a485917f07566960a531", "files": [{"JobManagerFactory_cluster": {"actions": [{"root": "UPDATE from com.netflix.genie.core.services.ClusterConfigService to com.netflix.genie.core.services.ClusterService", "operations": ["UPD QualifiedName: com.netflix.genie.core.services.ClusterConfigService from com.netflix.genie.core.services.ClusterConfigService to com.netflix.genie.core.services.ClusterService"]}, {"root": "UPDATE from ClusterConfigService to ClusterService", "operations": ["UPD SimpleType: ClusterConfigService from ClusterConfigService to ClusterService", "UPD SimpleName: ClusterConfigService from ClusterConfigService to ClusterService", "UPD SimpleName: ClusterConfigService from ClusterConfigService to ClusterService", "UPD SimpleType: ClusterConfigService from ClusterConfigService to ClusterService"]}]}}, {"JobManagerFactory_diff": {"operations": ["Update QualifiedName: com.netflix.genie.core.services.ClusterConfigService(12) to com.netflix.genie.core.services.ClusterService", "Update SimpleType: ClusterConfigService(62) to ClusterService", "Update SimpleName: ClusterConfigService(61) to ClusterService", "Update SimpleType: ClusterConfigService(104) to ClusterService", "Update SimpleName: ClusterConfigService(103) to ClusterService"]}}, {"ApplicationController_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 25", "operations": ["INS ImportDeclaration to CompilationUnit at 25", "INS QualifiedName: org.springframework.web.bind.annotation.ResponseStatus to ImportDeclaration at 0"]}, {"root": "UPDATE from com.netflix.genie.core.services.ApplicationConfigService to com.netflix.genie.core.services.ApplicationService", "operations": ["UPD QualifiedName: com.netflix.genie.core.services.ApplicationConfigService from com.netflix.genie.core.services.ApplicationConfigService to com.netflix.genie.core.services.ApplicationService"]}, {"root": "UPDATE from ApplicationConfigService to ApplicationService", "operations": ["UPD SimpleType: ApplicationConfigService from ApplicationConfigService to ApplicationService", "UPD SimpleName: ApplicationConfigService from ApplicationConfigService to ApplicationService", "UPD SimpleType: ApplicationConfigService from ApplicationConfigService to ApplicationService", "UPD SimpleName: ApplicationConfigService from ApplicationConfigService to ApplicationService"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 2", "operations": ["INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0", "INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1", "INS SingleMemberAnnotation to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 6"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 2", "operations": ["INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to MethodDeclaration at 2", "INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 6"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 2", "operations": ["INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0", "INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1", "INS SingleMemberAnnotation to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 6"]}, {"root": "UPDATE from addJarsForApplication to addDependenciesForApplication", "operations": ["UPD SimpleName: addJarsForApplication from addJarsForApplication to addDependenciesForApplication", "UPD SimpleName: addJarsForApplication from addJarsForApplication to addDependenciesForApplication"]}, {"root": "UPDATE from getJarsForApplication to getDependenciesForApplication", "operations": ["UPD SimpleName: getJarsForApplication from getJarsForApplication to getDependenciesForApplication", "UPD SimpleName: getJarsForApplication from getJarsForApplication to getDependenciesForApplication"]}, {"root": "UPDATE from updateJarsForApplication to updateDependenciesForApplication", "operations": ["UPD SimpleName: updateJarsForApplication from updateJarsForApplication to updateDependenciesForApplication", "UPD SimpleName: updateJarsForApplication from updateJarsForApplication to updateDependenciesForApplication"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 2", "operations": ["INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1", "INS SingleMemberAnnotation to MethodDeclaration at 2", "INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 6"]}, {"root": "UPDATE from removeAllJarsForApplication to removeAllDependenciesForApplication", "operations": ["UPD SimpleName: removeAllJarsForApplication from removeAllJarsForApplication to removeAllDependenciesForApplication", "UPD SimpleName: removeAllJarsForApplication from removeAllJarsForApplication to removeAllDependenciesForApplication"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 2", "operations": ["INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to MethodDeclaration at 2", "INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 6"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 2", "operations": ["INS SingleMemberAnnotation to MethodDeclaration at 2", "INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0", "INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 6"]}, {"root": "UPDATE from Code for ApplicationConfigResource - REST end-point for supporting to Code for ApplicationController - REST end-point for supporting Applications.", "operations": ["UPD TextElement: Code for ApplicationConfigResource - REST end-point for supporting from Code for ApplicationConfigResource - REST end-point for supporting to Code for ApplicationController - REST end-point for supporting Applications."]}, {"root": "UPDATE from applicationConfigService to applicationService", "operations": ["UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService", "UPD SimpleName: applicationConfigService from applicationConfigService to applicationService"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from jars to dependencies", "operations": ["UPD SimpleName: jars from jars to dependencies", "UPD SimpleName: jars from jars to dependencies", "UPD SimpleName: jars from jars to dependencies", "UPD SimpleName: jars from jars to dependencies", "UPD SimpleName: jars from jars to dependencies", "UPD SimpleName: jars from jars to dependencies", "UPD SimpleName: jars from jars to dependencies", "UPD SimpleName: jars from jars to dependencies"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from Add new jar files for a given application. to Add new dependency files for a given application.", "operations": ["UPD TextElement: Add new jar files for a given application. from Add new jar files for a given application. to Add new dependency files for a given application."]}, {"root": "UPDATE from    The id of the application to add the jar file to. Not to            The id of the application to add the dependency file to. Not", "operations": ["UPD TextElement:    The id of the application to add the jar file to. Not from    The id of the application to add the jar file to. Not to            The id of the application to add the dependency file to. Not"]}, {"root": "UPDATE from  The jar files to add. Not null. to  The dependency files to add. Not null.", "operations": ["UPD TextElement:  The jar files to add. Not null. from  The jar files to add. Not null. to  The dependency files to add. Not null."]}, {"root": "UPDATE from  The active set of application jars. to  The active set of application dependencies.", "operations": ["UPD TextElement:  The active set of application jars. from  The active set of application jars. to  The active set of application dependencies."]}, {"root": "UPDATE from \"/{id}/jars\" to \"/{id}/dependencies\"", "operations": ["UPD StringLiteral: \"/{id}/jars\" from \"/{id}/jars\" to \"/{id}/dependencies\"", "UPD StringLiteral: \"/{id}/jars\" from \"/{id}/jars\" to \"/{id}/dependencies\"", "UPD StringLiteral: \"/{id}/jars\" from \"/{id}/jars\" to \"/{id}/dependencies\"", "UPD StringLiteral: \"/{id}/jars\" from \"/{id}/jars\" to \"/{id}/dependencies\""]}, {"root": "UPDATE from \"Add new jar files to an application\" to \"Add new dependency files to an application\"", "operations": ["UPD StringLiteral: \"Add new jar files to an application\" from \"Add new jar files to an application\" to \"Add new dependency files to an application\""]}, {"root": "UPDATE from \"Add the supplied jar files to the applicaiton with the supplied id.\" to \"Add the supplied dependency files to the application with the supplied id.\"", "operations": ["UPD StringLiteral: \"Add the supplied jar files to the applicaiton with the supplied id.\" from \"Add the supplied jar files to the applicaiton with the supplied id.\" to \"Add the supplied dependency files to the application with the supplied id.\""]}, {"root": "MOVE from NormalAnnotation", "operations": ["MOV MemberValuePair to NormalAnnotation at 2"]}, {"root": "MOVE from NormalAnnotation", "operations": ["MOV MemberValuePair to NormalAnnotation at 2"]}, {"root": "UPDATE from Get all the jar files for a given application. to Get all the dependency files for a given application.", "operations": ["UPD TextElement: Get all the jar files for a given application. from Get all the jar files for a given application. to Get all the dependency files for a given application."]}, {"root": "UPDATE from  The id of the application to get the jar files for. Not to  The id of the application to get the dependency files for. Not", "operations": ["UPD TextElement:  The id of the application to get the jar files for. Not from  The id of the application to get the jar files for. Not to  The id of the application to get the dependency files for. Not"]}, {"root": "UPDATE from  The set of jar files. to  The set of dependency files.", "operations": ["UPD TextElement:  The set of jar files. from  The set of jar files. to  The set of dependency files."]}, {"root": "UPDATE from \"Get the jars for an application\" to \"Get the dependencies for an application\"", "operations": ["UPD StringLiteral: \"Get the jars for an application\" from \"Get the jars for an application\" to \"Get the dependencies for an application\""]}, {"root": "UPDATE from \"Get the jars for the application with the supplied id.\" to \"Get the dependencies for the application with the supplied id.\"", "operations": ["UPD StringLiteral: \"Get the jars for the application with the supplied id.\" from \"Get the jars for the application with the supplied id.\" to \"Get the dependencies for the application with the supplied id.\""]}, {"root": "UPDATE from Update the jar files for a given application. to Update the dependency files for a given application.", "operations": ["UPD TextElement: Update the jar files for a given application. from Update the jar files for a given application. to Update the dependency files for a given application."]}, {"root": "UPDATE from    The id of the application to update the jar files for. Not to    The id of the application to update the dependency files for. Not", "operations": ["UPD TextElement:    The id of the application to update the jar files for. Not from    The id of the application to update the jar files for. Not to    The id of the application to update the dependency files for. Not"]}, {"root": "UPDATE from  The jar files to replace existing jar files with. Not to  The dependency files to replace existing dependency files with. Not", "operations": ["UPD TextElement:  The jar files to replace existing jar files with. Not from  The jar files to replace existing jar files with. Not to  The dependency files to replace existing dependency files with. Not"]}, {"root": "UPDATE from  The active set of application jars to  The active set of application dependencies", "operations": ["UPD TextElement:  The active set of application jars from  The active set of application jars to  The active set of application dependencies"]}, {"root": "UPDATE from \"Update jar files for an application\" to \"Update dependency files for an application\"", "operations": ["UPD StringLiteral: \"Update jar files for an application\" from \"Update jar files for an application\" to \"Update dependency files for an application\""]}, {"root": "UPDATE from \"Replace the existing jar files for application with given id.\" to \"Replace the existing dependency files for application with given id.\"", "operations": ["UPD StringLiteral: \"Replace the existing jar files for application with given id.\" from \"Replace the existing jar files for application with given id.\" to \"Replace the existing dependency files for application with given id.\""]}, {"root": "UPDATE from Delete the all jar files from a given application. to Delete the all dependency files from a given application.", "operations": ["UPD TextElement: Delete the all jar files from a given application. from Delete the all jar files from a given application. to Delete the all dependency files from a given application."]}, {"root": "UPDATE from  The id of the application to delete the jar files from. Not to  The id of the application to delete the dependency files from. Not", "operations": ["UPD TextElement:  The id of the application to delete the jar files from. Not from  The id of the application to delete the jar files from. Not to  The id of the application to delete the dependency files from. Not"]}, {"root": "UPDATE from \"Remove all jar files from an application\" to \"Remove all dependency files from an application\"", "operations": ["UPD StringLiteral: \"Remove all jar files from an application\" from \"Remove all jar files from an application\" to \"Remove all dependency files from an application\""]}, {"root": "UPDATE from \"Remove all the jar files from the application with given id.\" to \"Remove all the dependency files from the application with given id.\"", "operations": ["UPD StringLiteral: \"Remove all the jar files from the application with given id.\" from \"Remove all the jar files from the application with given id.\" to \"Remove all the dependency files from the application with given id.\""]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0", "MOV SimpleName: deleteAllApplications to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: deleteApplication to MethodInvocation at 1", "MOV FieldAccess to MethodInvocation at 0", "MOV SimpleName: id to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: removeAllConfigsForApplication to MethodInvocation at 1", "MOV SimpleName: id to MethodInvocation at 2", "MOV FieldAccess to MethodInvocation at 0"]}, {"root": "UPDATE from \"Id of the application to add jar to.\" to \"Id of the application to add dependencies to.\"", "operations": ["UPD StringLiteral: \"Id of the application to add jar to.\" from \"Id of the application to add jar to.\" to \"Id of the application to add dependencies to.\""]}, {"root": "UPDATE from \"The jar files to add.\" to \"The dependencies files to add.\"", "operations": ["UPD StringLiteral: \"The jar files to add.\" from \"The jar files to add.\" to \"The dependencies files to add.\""]}, {"root": "UPDATE from \"Id of the application to get the jars for.\" to \"Id of the application to get the dependencies for.\"", "operations": ["UPD StringLiteral: \"Id of the application to get the jars for.\" from \"Id of the application to get the jars for.\" to \"Id of the application to get the dependencies for.\""]}, {"root": "UPDATE from \"The jar files to replace existing with.\" to \"The dependency files to replace existing with.\"", "operations": ["UPD StringLiteral: \"The jar files to replace existing with.\" from \"The jar files to replace existing with.\" to \"The dependency files to replace existing with.\""]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: id to MethodInvocation at 2", "MOV SimpleName: removeAllJarsForApplication to MethodInvocation at 1", "MOV FieldAccess to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: id to MethodInvocation at 2", "MOV FieldAccess to MethodInvocation at 0", "MOV SimpleName: removeAllTagsForApplication to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0", "MOV SimpleName: id to MethodInvocation at 2", "MOV SimpleName: removeTagForApplication to MethodInvocation at 1", "MOV SimpleName: tag to MethodInvocation at 3"]}, {"root": "UPDATE from \" and jars \" to \" and dependencies \"", "operations": ["UPD StringLiteral: \" and jars \" from \" and jars \" to \" and dependencies \"", "UPD StringLiteral: \" and jars \" from \" and jars \" to \" and dependencies \""]}, {"root": "DEL TextElement: Application.", "operations": ["DEL TextElement: Application."]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return", "DEL TextElement:  All The deleted applications"]}, {"root": "DEL MemberValuePair", "operations": ["DEL SimpleName: Application", "DEL SimpleType: Application", "DEL MemberValuePair", "DEL TypeLiteral", "DEL SimpleName: response"]}, {"root": "DEL MemberValuePair", "operations": ["DEL SimpleName: responseContainer", "DEL StringLiteral: \"List\"", "DEL MemberValuePair"]}, {"root": "DEL ParameterizedType: List<Application>", "operations": ["DEL SimpleType: List", "DEL SimpleName: Application", "DEL SimpleName: List", "DEL SimpleType: Application", "DEL ParameterizedType: List<Application>"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL MethodInvocation"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return", "DEL TextElement:  The deleted application configuration"]}, {"root": "DEL SimpleType: Application", "operations": ["DEL SimpleName: Application", "DEL SimpleType: Application"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL ReturnStatement"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TextElement:  Empty set if successful", "DEL TagElement: @return"]}, {"root": "DEL ParameterizedType: Set<String>", "operations": ["DEL SimpleName: String", "DEL SimpleType: Set", "DEL SimpleName: Set", "DEL SimpleType: String", "DEL ParameterizedType: Set<String>"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL ReturnStatement"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return", "DEL TextElement:  Empty set if successful"]}, {"root": "DEL ParameterizedType: Set<String>", "operations": ["DEL SimpleName: Set", "DEL SimpleType: Set", "DEL SimpleName: String", "DEL ParameterizedType: Set<String>", "DEL SimpleType: String"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL MethodInvocation"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return", "DEL TextElement:  Empty set if successful"]}, {"root": "DEL ParameterizedType: Set<String>", "operations": ["DEL SimpleName: Set", "DEL SimpleType: Set", "DEL ParameterizedType: Set<String>", "DEL SimpleName: String", "DEL SimpleType: String"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL ReturnStatement"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TextElement:  The active set of tags for the application.", "DEL TagElement: @return"]}, {"root": "DEL ParameterizedType: Set<String>", "operations": ["DEL SimpleName: String", "DEL SimpleType: Set", "DEL SimpleType: String", "DEL SimpleName: Set", "DEL ParameterizedType: Set<String>"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL ReturnStatement"]}]}}, {"ApplicationController_diff": {"operations": ["Insert ImportDeclaration(51) into CompilationUnit(2846) at 25", "Update QualifiedName: com.netflix.genie.core.services.ApplicationConfigService(12) to com.netflix.genie.core.services.ApplicationService", "Insert QualifiedName: org.springframework.web.bind.annotation.ResponseStatus(50) into ImportDeclaration(51) at 0", "Update SimpleType: ApplicationConfigService(111) to ApplicationService", "Insert SingleMemberAnnotation(885) into MethodDeclaration(929) at 2", "Insert PrimitiveType: void(908) into MethodDeclaration(929) at 6", "Insert SingleMemberAnnotation(949) into MethodDeclaration(1033) at 2", "Insert PrimitiveType: void(993) into MethodDeclaration(1033) at 6", "Insert SingleMemberAnnotation(1442) into MethodDeclaration(1529) at 2", "Insert PrimitiveType: void(1489) into MethodDeclaration(1529) at 6", "Update SimpleName: addJarsForApplication(1620) to addDependenciesForApplication", "Update SimpleName: getJarsForApplication(1752) to getDependenciesForApplication", "Update SimpleName: updateJarsForApplication(1870) to updateDependenciesForApplication", "Insert SingleMemberAnnotation(1938) into MethodDeclaration(2025) at 2", "Insert PrimitiveType: void(1985) into MethodDeclaration(2025) at 6", "Update SimpleName: removeAllJarsForApplication(2002) to removeAllDependenciesForApplication", "Insert SingleMemberAnnotation(2434) into MethodDeclaration(2523) at 2", "Insert PrimitiveType: void(2483) into MethodDeclaration(2523) at 6", "Insert SingleMemberAnnotation(2547) into MethodDeclaration(2655) at 2", "Insert PrimitiveType: void(2596) into MethodDeclaration(2655) at 6", "Update TextElement: Code for ApplicationConfigResource - REST end-point for supporting(62) to Code for ApplicationController - REST end-point for supporting Applications.", "Update SimpleName: ApplicationConfigService(110) to ApplicationService", "Update SimpleName: applicationConfigService(112) to applicationService", "Update SimpleType: ApplicationConfigService(127) to ApplicationService", "Update SimpleName: applicationConfigService(128) to applicationService", "Insert SimpleName: ResponseStatus(883) into SingleMemberAnnotation(885) at 0", "Insert QualifiedName: HttpStatus.OK(884) into SingleMemberAnnotation(885) at 1", "Insert ExpressionStatement(927) into Block(928) at 1", "Insert SimpleName: ResponseStatus(947) into SingleMemberAnnotation(949) at 0", "Insert QualifiedName: HttpStatus.OK(948) into SingleMemberAnnotation(949) at 1", "Insert ExpressionStatement(1031) into Block(1032) at 1", "Insert SimpleName: ResponseStatus(1440) into SingleMemberAnnotation(1442) at 0", "Insert QualifiedName: HttpStatus.OK(1441) into SingleMemberAnnotation(1442) at 1", "Insert ExpressionStatement(1527) into Block(1528) at 1", "Update SimpleName: jars(1653) to dependencies", "Update SimpleName: jars(1903) to dependencies", "Insert SimpleName: ResponseStatus(1936) into SingleMemberAnnotation(1938) at 0", "Insert QualifiedName: HttpStatus.OK(1937) into SingleMemberAnnotation(1938) at 1", "Insert ExpressionStatement(2023) into Block(2024) at 1", "Insert SimpleName: ResponseStatus(2432) into SingleMemberAnnotation(2434) at 0", "Insert QualifiedName: HttpStatus.OK(2433) into SingleMemberAnnotation(2434) at 1", "Insert ExpressionStatement(2521) into Block(2522) at 1", "Insert SimpleName: ResponseStatus(2545) into SingleMemberAnnotation(2547) at 0", "Insert QualifiedName: HttpStatus.OK(2546) into SingleMemberAnnotation(2547) at 1", "Insert ExpressionStatement(2653) into Block(2654) at 1", "Update SimpleName: applicationConfigService(117) to applicationService", "Update SimpleName: ApplicationConfigService(126) to ApplicationService", "Insert MethodInvocation(926) into ExpressionStatement(927) at 0", "Insert MethodInvocation(1030) into ExpressionStatement(1031) at 0", "Insert MethodInvocation(1526) into ExpressionStatement(1527) at 0", "Update TextElement: Add new jar files for a given application.(1543) to Add new dependency files for a given application.", "Update TextElement:    The id of the application to add the jar file to. Not(1546) to            The id of the application to add the dependency file to. Not", "Update SimpleName: jars(1549) to dependencies", "Update TextElement:  The jar files to add. Not null.(1550) to  The dependency files to add. Not null.", "Update TextElement:  The active set of application jars.(1552) to  The active set of application dependencies.", "Update StringLiteral: \"/{id}/jars\"(1560) to \"/{id}/dependencies\"", "Update StringLiteral: \"Add new jar files to an application\"(1571) to \"Add new dependency files to an application\"", "Update StringLiteral: \"Add the supplied jar files to the applicaiton with the supplied id.\"(1574) to \"Add the supplied dependency files to the application with the supplied id.\"", "Move MemberValuePair(1643) into NormalAnnotation(1615) at 2", "Move MemberValuePair(1627) into NormalAnnotation(1631) at 2", "Update TextElement: Get all the jar files for a given application.(1681) to Get all the dependency files for a given application.", "Update TextElement:  The id of the application to get the jar files for. Not(1684) to  The id of the application to get the dependency files for. Not", "Update TextElement:  The set of jar files.(1687) to  The set of dependency files.", "Update StringLiteral: \"/{id}/jars\"(1695) to \"/{id}/dependencies\"", "Update StringLiteral: \"Get the jars for an application\"(1703) to \"Get the dependencies for an application\"", "Update StringLiteral: \"Get the jars for the application with the supplied id.\"(1706) to \"Get the dependencies for the application with the supplied id.\"", "Update TextElement: Update the jar files for a given application.(1792) to Update the dependency files for a given application.", "Update TextElement:    The id of the application to update the jar files for. Not(1795) to    The id of the application to update the dependency files for. Not", "Update SimpleName: jars(1798) to dependencies", "Update TextElement:  The jar files to replace existing jar files with. Not(1799) to  The dependency files to replace existing dependency files with. Not", "Update TextElement:  The active set of application jars(1802) to  The active set of application dependencies", "Update StringLiteral: \"/{id}/jars\"(1810) to \"/{id}/dependencies\"", "Update StringLiteral: \"Update jar files for an application\"(1821) to \"Update dependency files for an application\"", "Update StringLiteral: \"Replace the existing jar files for application with given id.\"(1824) to \"Replace the existing dependency files for application with given id.\"", "Update TextElement: Delete the all jar files from a given application.(1931) to Delete the all dependency files from a given application.", "Update TextElement:  The id of the application to delete the jar files from. Not(1934) to  The id of the application to delete the dependency files from. Not", "Update StringLiteral: \"/{id}/jars\"(1945) to \"/{id}/dependencies\"", "Update StringLiteral: \"Remove all jar files from an application\"(1953) to \"Remove all dependency files from an application\"", "Update StringLiteral: \"Remove all the jar files from the application with given id.\"(1956) to \"Remove all the dependency files from the application with given id.\"", "Insert MethodInvocation(2022) into ExpressionStatement(2023) at 0", "Insert MethodInvocation(2520) into ExpressionStatement(2521) at 0", "Insert MethodInvocation(2652) into ExpressionStatement(2653) at 0", "Update SimpleName: applicationConfigService(133) to applicationService", "Move FieldAccess(934) into MethodInvocation(926) at 0", "Move SimpleName: deleteAllApplications(935) into MethodInvocation(926) at 1", "Move FieldAccess(1037) into MethodInvocation(1030) at 0", "Move SimpleName: deleteApplication(1038) into MethodInvocation(1030) at 1", "Move SimpleName: id(1039) into MethodInvocation(1030) at 2", "Move FieldAccess(1536) into MethodInvocation(1526) at 0", "Move SimpleName: removeAllConfigsForApplication(1537) into MethodInvocation(1526) at 1", "Move SimpleName: id(1538) into MethodInvocation(1526) at 2", "Update StringLiteral: \"Id of the application to add jar to.\"(1623) to \"Id of the application to add dependencies to.\"", "Update StringLiteral: \"The jar files to add.\"(1639) to \"The dependencies files to add.\"", "Update SimpleName: addJarsForApplication(1674) to addDependenciesForApplication", "Update SimpleName: jars(1676) to dependencies", "Update StringLiteral: \"Id of the application to get the jars for.\"(1755) to \"Id of the application to get the dependencies for.\"", "Update SimpleName: getJarsForApplication(1786) to getDependenciesForApplication", "Update StringLiteral: \"The jar files to replace existing with.\"(1889) to \"The dependency files to replace existing with.\"", "Update SimpleName: updateJarsForApplication(1924) to updateDependenciesForApplication", "Update SimpleName: jars(1926) to dependencies", "Move FieldAccess(2035) into MethodInvocation(2022) at 0", "Update SimpleName: removeAllJarsForApplication(2036) to removeAllDependenciesForApplication", "Move SimpleName: removeAllJarsForApplication(2036) into MethodInvocation(2022) at 1", "Move SimpleName: id(2037) into MethodInvocation(2022) at 2", "Move FieldAccess(2536) into MethodInvocation(2520) at 0", "Move SimpleName: removeAllTagsForApplication(2537) into MethodInvocation(2520) at 1", "Move SimpleName: id(2538) into MethodInvocation(2520) at 2", "Move FieldAccess(2670) into MethodInvocation(2652) at 0", "Move SimpleName: removeTagForApplication(2671) into MethodInvocation(2652) at 1", "Move SimpleName: id(2672) into MethodInvocation(2652) at 2", "Move SimpleName: tag(2673) into MethodInvocation(2652) at 3", "Update SimpleName: applicationConfigService(131) to applicationService", "Update SimpleName: applicationConfigService(403) to applicationService", "Update SimpleName: applicationConfigService(728) to applicationService", "Update SimpleName: applicationConfigService(862) to applicationService", "Update SimpleName: applicationConfigService(933) to applicationService", "Update SimpleName: applicationConfigService(1036) to applicationService", "Update SimpleName: applicationConfigService(1173) to applicationService", "Update SimpleName: applicationConfigService(1285) to applicationService", "Update SimpleName: applicationConfigService(1423) to applicationService", "Update SimpleName: applicationConfigService(1535) to applicationService", "Update SimpleName: applicationConfigService(1672) to applicationService", "Update SimpleName: applicationConfigService(1784) to applicationService", "Update SimpleName: applicationConfigService(1922) to applicationService", "Update SimpleName: applicationConfigService(2034) to applicationService", "Update SimpleName: applicationConfigService(2171) to applicationService", "Update SimpleName: applicationConfigService(2283) to applicationService", "Update SimpleName: applicationConfigService(2421) to applicationService", "Update SimpleName: applicationConfigService(2535) to applicationService", "Update SimpleName: applicationConfigService(2669) to applicationService", "Update SimpleName: applicationConfigService(2858) to applicationService", "Update SimpleName: applicationConfigService(251) to applicationService", "Update StringLiteral: \" and jars \"(1664) to \" and dependencies \"", "Update SimpleName: jars(1665) to dependencies", "Update StringLiteral: \" and jars \"(1914) to \" and dependencies \"", "Update SimpleName: jars(1915) to dependencies", "Delete TextElement: Application.(63)", "Delete TextElement:  All The deleted applications(873)", "Delete TagElement: @return(874)", "Delete SimpleName: response(891)", "Delete SimpleName: Application(892)", "Delete SimpleType: Application(893)", "Delete TypeLiteral(894)", "Delete MemberValuePair(895)", "Delete SimpleName: responseContainer(896)", "Delete StringLiteral: \"List\"(897)", "Delete MemberValuePair(898)", "Delete SimpleName: List(914)", "Delete SimpleType: List(915)", "Delete SimpleName: Application(916)", "Delete SimpleType: Application(917)", "Delete ParameterizedType: List<Application>(918)", "Delete MethodInvocation(936)", "Delete ReturnStatement(937)", "Delete TextElement:  The deleted application configuration(945)", "Delete TagElement: @return(946)", "Delete SimpleName: Application(1002)", "Delete SimpleType: Application(1003)", "Delete MethodInvocation(1040)", "Delete ReturnStatement(1041)", "Delete TextElement:  Empty set if successful(1438)", "Delete TagElement: @return(1439)", "Delete SimpleName: Set(1498)", "Delete SimpleType: Set(1499)", "Delete SimpleName: String(1500)", "Delete SimpleType: String(1501)", "Delete ParameterizedType: Set<String>(1502)", "Delete MethodInvocation(1539)", "Delete ReturnStatement(1540)", "Delete TextElement:  Empty set if successful(1937)", "Delete TagElement: @return(1938)", "Delete SimpleName: Set(1997)", "Delete SimpleType: Set(1998)", "Delete SimpleName: String(1999)", "Delete SimpleType: String(2000)", "Delete ParameterizedType: Set<String>(2001)", "Delete MethodInvocation(2038)", "Delete ReturnStatement(2039)", "Delete TextElement:  Empty set if successful(2436)", "Delete TagElement: @return(2437)", "Delete SimpleName: Set(2498)", "Delete SimpleType: Set(2499)", "Delete SimpleName: String(2500)", "Delete SimpleType: String(2501)", "Delete ParameterizedType: Set<String>(2502)", "Delete MethodInvocation(2539)", "Delete ReturnStatement(2540)", "Delete TextElement:  The active set of tags for the application.(2552)", "Delete TagElement: @return(2553)", "Delete SimpleName: Set(2614)", "Delete SimpleType: Set(2615)", "Delete SimpleName: String(2616)", "Delete SimpleType: String(2617)", "Delete ParameterizedType: Set<String>(2618)", "Delete MethodInvocation(2674)", "Delete ReturnStatement(2675)"]}}, {"ClusterController_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 25", "operations": ["INS QualifiedName: org.springframework.web.bind.annotation.ResponseStatus to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 25"]}, {"root": "UPDATE from com.netflix.genie.core.services.ClusterConfigService to com.netflix.genie.core.services.ClusterService", "operations": ["UPD QualifiedName: com.netflix.genie.core.services.ClusterConfigService from com.netflix.genie.core.services.ClusterConfigService to com.netflix.genie.core.services.ClusterService"]}, {"root": "UPDATE from ClusterConfigService to ClusterService", "operations": ["UPD SimpleType: ClusterConfigService from ClusterConfigService to ClusterService", "UPD SimpleName: ClusterConfigService from ClusterConfigService to ClusterService", "UPD SimpleType: ClusterConfigService from ClusterConfigService to ClusterService", "UPD SimpleName: ClusterConfigService from ClusterConfigService to ClusterService"]}, {"root": "INS Block to MethodDeclaration at 10", "operations": ["INS SimpleName: updateCluster to MethodInvocation at 3", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: clusterService to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to MethodDeclaration at 10", "INS SimpleName: updateCluster to MethodInvocation at 1", "INS SimpleName: id to MethodInvocation at 2", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 2", "operations": ["INS SingleMemberAnnotation to MethodDeclaration at 2", "INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0", "INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 6"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 2", "operations": ["INS SingleMemberAnnotation to MethodDeclaration at 2", "INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1", "INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 6"]}, {"root": "INS SimpleName: deleteAllClusters to MethodDeclaration at 7", "operations": ["INS SimpleName: deleteAllClusters to MethodDeclaration at 7"]}, {"root": "INS Block to MethodDeclaration at 11", "operations": ["INS Block to MethodDeclaration at 11", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "INS Block to MethodDeclaration at 10", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS FieldAccess to MethodInvocation at 0", "INS Block to MethodDeclaration at 10", "INS SimpleName: addConfigsForCluster to MethodInvocation at 1", "INS SimpleName: clusterService to FieldAccess at 1", "INS IfStatement to Block at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS ReturnStatement to Block at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: id to MethodInvocation at 2", "INS SimpleName: configs to MethodInvocation at 3"]}, {"root": "INS Block to MethodDeclaration at 10", "operations": ["INS SimpleName: clusterService to FieldAccess at 1", "INS IfStatement to Block at 0", "INS SimpleName: configs to MethodInvocation at 3", "INS MethodInvocation to IfStatement at 0", "INS ReturnStatement to Block at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: updateConfigsForCluster to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: id to MethodInvocation at 2", "INS Block to MethodDeclaration at 10", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "UPDATE from updateCommandsForCluster to setCommandsForCluster", "operations": ["UPD SimpleName: updateCommandsForCluster from updateCommandsForCluster to setCommandsForCluster"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 2", "operations": ["INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0", "INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1", "INS SingleMemberAnnotation to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 6"]}, {"root": "INS SimpleName: removeAllCommandsForCluster to MethodDeclaration at 7", "operations": ["INS SimpleName: removeAllCommandsForCluster to MethodDeclaration at 7"]}, {"root": "INS Block to MethodDeclaration at 12", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 1", "INS Block to MethodDeclaration at 12", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 2", "operations": ["INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1", "INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 6"]}, {"root": "INS SimpleName: removeCommandForCluster to MethodDeclaration at 7", "operations": ["INS SimpleName: removeCommandForCluster to MethodDeclaration at 7"]}, {"root": "INS Block to MethodDeclaration at 13", "operations": ["INS ExpressionStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: commandId to MethodInvocation at 3", "INS IfStatement to Block at 0", "INS ThisExpression to FieldAccess at 0", "INS Block to MethodDeclaration at 13", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: id to MethodInvocation at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: removeCommandForCluster to MethodInvocation at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: clusterService to FieldAccess at 1"]}, {"root": "INS Block to MethodDeclaration at 10", "operations": ["INS SimpleName: clusterService to FieldAccess at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS Block to MethodDeclaration at 10", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: addTagsForCluster to MethodInvocation at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: tags to MethodInvocation at 3", "INS FieldAccess to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: id to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS Block to MethodDeclaration at 10", "operations": ["INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: updateTagsForCluster to MethodInvocation at 1", "INS FieldAccess to MethodInvocation at 0", "INS Block to MethodDeclaration at 10", "INS SimpleName: id to MethodInvocation at 2", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: tags to MethodInvocation at 3", "INS ReturnStatement to Block at 1", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: clusterService to FieldAccess at 1"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 2", "operations": ["INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1", "INS SingleMemberAnnotation to MethodDeclaration at 2", "INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 6"]}, {"root": "INS SimpleName: removeAllTagsForCluster to MethodDeclaration at 7", "operations": ["INS SimpleName: removeAllTagsForCluster to MethodDeclaration at 7"]}, {"root": "INS Block to MethodDeclaration at 12", "operations": ["INS Block to MethodDeclaration at 12", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 2", "operations": ["INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1", "INS SingleMemberAnnotation to MethodDeclaration at 2", "INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 6"]}, {"root": "INS SimpleName: removeTagForCluster to MethodDeclaration at 7", "operations": ["INS SimpleName: removeTagForCluster to MethodDeclaration at 7"]}, {"root": "INS Block to MethodDeclaration at 13", "operations": ["INS SimpleName: clusterService to FieldAccess at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: removeTagForCluster to MethodInvocation at 1", "INS SimpleName: tag to MethodInvocation at 3", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS ThisExpression to FieldAccess at 0", "INS Block to MethodDeclaration at 13", "INS SimpleName: id to MethodInvocation at 2"]}, {"root": "UPDATE from clusterConfigService to clusterService", "operations": ["UPD SimpleName: clusterConfigService from clusterConfigService to clusterService", "UPD SimpleName: clusterConfigService from clusterConfigService to clusterService", "UPD SimpleName: clusterConfigService from clusterConfigService to clusterService", "UPD SimpleName: clusterConfigService from clusterConfigService to clusterService", "UPD SimpleName: clusterConfigService from clusterConfigService to clusterService", "UPD SimpleName: clusterConfigService from clusterConfigService to clusterService", "UPD SimpleName: clusterConfigService from clusterConfigService to clusterService", "UPD SimpleName: clusterConfigService from clusterConfigService to clusterService", "UPD SimpleName: clusterConfigService from clusterConfigService to clusterService", "UPD SimpleName: clusterConfigService from clusterConfigService to clusterService", "UPD SimpleName: clusterConfigService from clusterConfigService to clusterService", "UPD SimpleName: clusterConfigService from clusterConfigService to clusterService", "UPD SimpleName: clusterConfigService from clusterConfigService to clusterService", "UPD SimpleName: clusterConfigService from clusterConfigService to clusterService", "UPD SimpleName: clusterConfigService from clusterConfigService to clusterService", "UPD SimpleName: clusterConfigService from clusterConfigService to clusterService", "UPD SimpleName: clusterConfigService from clusterConfigService to clusterService"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "UPDATE from List<Command> to List<String>", "operations": ["UPD ParameterizedType: List<Command> from List<Command> to List<String>", "UPD ParameterizedType: List<Command> from List<Command> to List<String>"]}, {"root": "UPDATE from commands to commandIds", "operations": ["UPD SimpleName: commands from commands to commandIds", "UPD SimpleName: commands from commands to commandIds", "UPD SimpleName: commands from commands to commandIds", "UPD SimpleName: commands from commands to commandIds", "UPD SimpleName: commands from commands to commandIds", "UPD SimpleName: commands from commands to commandIds", "UPD SimpleName: commands from commands to commandIds", "UPD SimpleName: commands from commands to commandIds"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "UPDATE from Add new commands to the given cluster. to Add new commandIds to the given cluster.", "operations": ["UPD TextElement: Add new commands to the given cluster. from Add new commands to the given cluster. to Add new commandIds to the given cluster."]}, {"root": "UPDATE from        The id of the cluster to add the commands to. Not to          The id of the cluster to add the commandIds to. Not", "operations": ["UPD TextElement:        The id of the cluster to add the commands to. Not from        The id of the cluster to add the commands to. Not to          The id of the cluster to add the commandIds to. Not"]}, {"root": "UPDATE from  The commands to add. Not null. to  The ids of the commandIds to add. Not null.", "operations": ["UPD TextElement:  The commands to add. Not null. from  The commands to add. Not null. to  The ids of the commandIds to add. Not null."]}, {"root": "UPDATE from  The active commands for this cluster. to  The active commandIds for this cluster.", "operations": ["UPD TextElement:  The active commands for this cluster. from  The active commands for this cluster. to  The active commandIds for this cluster."]}, {"root": "UPDATE from \"Add new commands to a cluster\" to \"Add new commandIds to a cluster\"", "operations": ["UPD StringLiteral: \"Add new commands to a cluster\" from \"Add new commands to a cluster\" to \"Add new commandIds to a cluster\""]}, {"root": "MOVE from NormalAnnotation", "operations": ["MOV MemberValuePair to NormalAnnotation at 2"]}, {"root": "MOVE from NormalAnnotation", "operations": ["MOV MemberValuePair to NormalAnnotation at 2"]}, {"root": "MOVE from ParameterizedType: List<Command>", "operations": ["MOV SimpleType: String to ParameterizedType: List<Command> at 1"]}, {"root": "UPDATE from Get all the commands configured for a given cluster. to Get all the commandIds configured for a given cluster.", "operations": ["UPD TextElement: Get all the commands configured for a given cluster. from Get all the commands configured for a given cluster. to Get all the commandIds configured for a given cluster."]}, {"root": "UPDATE from  The various statuses to return commands for. to  The various statuses to return commandIds for.", "operations": ["UPD TextElement:  The various statuses to return commands for. from  The various statuses to return commands for. to  The various statuses to return commandIds for."]}, {"root": "UPDATE from  The active set of commands for the cluster. to  The active set of commandIds for the cluster.", "operations": ["UPD TextElement:  The active set of commands for the cluster. from  The active set of commands for the cluster. to  The active set of commandIds for the cluster."]}, {"root": "UPDATE from \"Get the commands for a cluster\" to \"Get the commandIds for a cluster\"", "operations": ["UPD StringLiteral: \"Get the commands for a cluster\" from \"Get the commands for a cluster\" to \"Get the commandIds for a cluster\""]}, {"root": "UPDATE from \"Get the commands for the cluster with the supplied id.\" to \"Get the commandIds for the cluster with the supplied id.\"", "operations": ["UPD StringLiteral: \"Get the commands for the cluster with the supplied id.\" from \"Get the commands for the cluster with the supplied id.\" to \"Get the commandIds for the cluster with the supplied id.\""]}, {"root": "UPDATE from Update the commands for a given cluster. to Set the commandIds for a given cluster.", "operations": ["UPD TextElement: Update the commands for a given cluster. from Update the commands for a given cluster. to Set the commandIds for a given cluster."]}, {"root": "UPDATE from        The id of the cluster to update the configuration files for. to          The id of the cluster to update the configuration files for.", "operations": ["UPD TextElement:        The id of the cluster to update the configuration files for. from        The id of the cluster to update the configuration files for. to          The id of the cluster to update the configuration files for."]}, {"root": "UPDATE from  The commands to replace existing applications with. Not to  The ids of the commands to replace existing commands with. Not", "operations": ["UPD TextElement:  The commands to replace existing applications with. Not from  The commands to replace existing applications with. Not to  The ids of the commands to replace existing commands with. Not"]}, {"root": "UPDATE from  The new set of commands for the cluster. to  The new set of commandIds for the cluster.", "operations": ["UPD TextElement:  The new set of commands for the cluster. from  The new set of commands for the cluster. to  The new set of commandIds for the cluster."]}, {"root": "UPDATE from \"Update the commands for an cluster\" to \"Update the commands for a cluster\"", "operations": ["UPD StringLiteral: \"Update the commands for an cluster\" from \"Update the commands for an cluster\" to \"Update the commands for a cluster\""]}, {"root": "MOVE from NormalAnnotation", "operations": ["MOV MemberValuePair to NormalAnnotation at 2"]}, {"root": "MOVE from NormalAnnotation", "operations": ["MOV MemberValuePair to NormalAnnotation at 2"]}, {"root": "MOVE from ParameterizedType: List<Command>", "operations": ["MOV SimpleType: String to ParameterizedType: List<Command> at 1"]}, {"root": "UPDATE from Remove the all commands from a given cluster. to Remove the all commandIds from a given cluster.", "operations": ["UPD TextElement: Remove the all commands from a given cluster. from Remove the all commands from a given cluster. to Remove the all commandIds from a given cluster."]}, {"root": "UPDATE from  The id of the cluster to delete the commands from. Not to  The id of the cluster to delete the commandIds from. Not", "operations": ["UPD TextElement:  The id of the cluster to delete the commands from. Not from  The id of the cluster to delete the commands from. Not to  The id of the cluster to delete the commandIds from. Not"]}, {"root": "UPDATE from \"Remove all commands from an cluster\" to \"Remove all commandIds from an cluster\"", "operations": ["UPD StringLiteral: \"Remove all commands from an cluster\" from \"Remove all commands from an cluster\" to \"Remove all commandIds from an cluster\""]}, {"root": "UPDATE from \"Remove all the commands from the cluster with given id.\" to \"Remove all the commandIds from the cluster with given id.\"", "operations": ["UPD StringLiteral: \"Remove all the commands from the cluster with given id.\" from \"Remove all the commands from the cluster with given id.\" to \"Remove all the commandIds from the cluster with given id.\""]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: deleteCluster to MethodInvocation at 1", "MOV FieldAccess to MethodInvocation at 0", "MOV SimpleName: id to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: deleteAllClusters to MethodInvocation at 1", "MOV FieldAccess to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from \"Add the supplied commands to the cluster with the supplied id.\" to \"Add the supplied commandIds to the cluster with the supplied id.\"", "operations": ["UPD StringLiteral: \"Add the supplied commands to the cluster with the supplied id.\" from \"Add the supplied commands to the cluster with the supplied id.\" to \"Add the supplied commandIds to the cluster with the supplied id.\""]}, {"root": "UPDATE from \" commands should already have been created.\" to \" commandIds should already have been created.\"", "operations": ["UPD StringLiteral: \" commands should already have been created.\" from \" commands should already have been created.\" to \" commandIds should already have been created.\""]}, {"root": "UPDATE from \"Id of the cluster to add commands to.\" to \"Id of the cluster to add commandIds to.\"", "operations": ["UPD StringLiteral: \"Id of the cluster to add commands to.\" from \"Id of the cluster to add commands to.\" to \"Id of the cluster to add commandIds to.\""]}, {"root": "UPDATE from \"The commands to add.\" to \"The ids of the commandIds to add.\"", "operations": ["UPD StringLiteral: \"The commands to add.\" from \"The commands to add.\" to \"The ids of the commandIds to add.\""]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from \"Id of the cluster to get commands for.\" to \"Id of the cluster to get commandIds for.\"", "operations": ["UPD StringLiteral: \"Id of the cluster to get commands for.\" from \"Id of the cluster to get commands for.\" to \"Id of the cluster to get commandIds for.\""]}, {"root": "UPDATE from \"The statuses of the commands to find.\" to \"The statuses of the commandIds to find.\"", "operations": ["UPD StringLiteral: \"The statuses of the commands to find.\" from \"The statuses of the commands to find.\" to \"The statuses of the commandIds to find.\""]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from \"Id of the cluster to update commands for.\" to \"Id of the cluster to update commandIds for.\"", "operations": ["UPD StringLiteral: \"Id of the cluster to update commands for.\" from \"Id of the cluster to update commands for.\" to \"Id of the cluster to update commandIds for.\""]}, {"root": "UPDATE from \"The commands to replace existing with. Should already be created\" to \"The ids of the commands to replace existing commands with. Should already be created\"", "operations": ["UPD StringLiteral: \"The commands to replace existing with. Should already be created\" from \"The commands to replace existing with. Should already be created\" to \"The ids of the commands to replace existing commands with. Should already be created\""]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: id to MethodInvocation at 2", "MOV FieldAccess to MethodInvocation at 0", "MOV SimpleName: removeAllCommandsForCluster to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0", "MOV SimpleName: id to MethodInvocation at 2", "MOV SimpleName: removeAllTagsForCluster to MethodInvocation at 1"]}, {"root": "UPDATE from info to debug", "operations": ["UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug"]}, {"root": "INS InfixExpression: + to MethodInvocation at 2", "operations": ["INS StringLiteral: \"| minUpdateTime \" to InfixExpression: + at 4", "INS StringLiteral: \"| limit \" to InfixExpression: + at 7", "INS StringLiteral: \"Called \" to InfixExpression: + at 0", "INS StringLiteral: \"| statuses \" to InfixExpression: + at 2", "INS InfixExpression: + to MethodInvocation at 2", "INS StringLiteral: \"| maxUpdateTime \" to InfixExpression: + at 5", "INS StringLiteral: \"| tags \" to InfixExpression: + at 3", "INS StringLiteral: \"orderBys]\" to InfixExpression: + at 9", "INS StringLiteral: \"| descending | \" to InfixExpression: + at 8", "INS StringLiteral: \"[name \" to InfixExpression: + at 1", "INS StringLiteral: \"| page \" to InfixExpression: + at 6"]}, {"root": "UPDATE from \" and commands \" to \" and commandIds \"", "operations": ["UPD StringLiteral: \" and commands \" from \" and commands \" to \" and commandIds \"", "UPD StringLiteral: \" and commands \" from \" and commands \" to \" and commandIds \""]}, {"root": "DEL StringLiteral: \"Called [name | statuses | tags | minUpdateTime | maxUpdateTime | page | limit | descending | orderBys]\"", "operations": ["DEL StringLiteral: \"Called [name | statuses | tags | minUpdateTime | maxUpdateTime | page | limit | descending | orderBys]\""]}, {"root": "DEL ReturnStatement", "operations": ["DEL FieldAccess", "DEL SimpleName: id", "DEL MethodInvocation", "DEL SimpleName: updateCluster", "DEL ThisExpression", "DEL ReturnStatement", "DEL SimpleName: updateCluster", "DEL SimpleName: clusterConfigService"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return", "DEL TextElement:  the deleted cluster"]}, {"root": "DEL MemberValuePair", "operations": ["DEL SimpleType: Cluster", "DEL MemberValuePair", "DEL TypeLiteral", "DEL SimpleName: Cluster", "DEL SimpleName: response"]}, {"root": "DEL SimpleType: Cluster", "operations": ["DEL SimpleType: Cluster", "DEL SimpleName: Cluster"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL MethodInvocation"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return", "DEL TextElement:  All The deleted clusters"]}, {"root": "DEL MemberValuePair", "operations": ["DEL MemberValuePair", "DEL TypeLiteral", "DEL SimpleType: Cluster", "DEL SimpleName: response", "DEL SimpleName: Cluster"]}, {"root": "DEL MemberValuePair", "operations": ["DEL SimpleName: responseContainer", "DEL StringLiteral: \"List\"", "DEL MemberValuePair"]}, {"root": "DEL ParameterizedType: List<Cluster>", "operations": ["DEL SimpleType: Cluster", "DEL ParameterizedType: List<Cluster>", "DEL SimpleName: Cluster", "DEL SimpleType: List", "DEL SimpleName: List"]}, {"root": "DEL SimpleName: deleteAllClusters", "operations": ["DEL SimpleName: deleteAllClusters"]}, {"root": "DEL Block", "operations": ["DEL MethodInvocation", "DEL Block", "DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: id", "DEL SimpleName: configs", "DEL FieldAccess", "DEL ThisExpression", "DEL SimpleName: addConfigsForCluster", "DEL MethodInvocation", "DEL SimpleName: clusterConfigService", "DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: updateConfigsForCluster", "DEL FieldAccess", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: id", "DEL SimpleName: clusterConfigService", "DEL SimpleName: configs", "DEL ThisExpression"]}, {"root": "DEL SimpleType: Command", "operations": ["DEL SimpleType: Command", "DEL SimpleName: Command"]}, {"root": "DEL SimpleType: Command", "operations": ["DEL SimpleName: Command", "DEL SimpleType: Command"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return", "DEL TextElement:  Empty set if successful"]}, {"root": "DEL MemberValuePair", "operations": ["DEL TypeLiteral", "DEL MemberValuePair", "DEL SimpleName: response", "DEL SimpleType: Command", "DEL SimpleName: Command"]}, {"root": "DEL MemberValuePair", "operations": ["DEL SimpleName: responseContainer", "DEL MemberValuePair", "DEL StringLiteral: \"List\""]}, {"root": "DEL ParameterizedType: List<Command>", "operations": ["DEL SimpleType: List", "DEL ParameterizedType: List<Command>", "DEL SimpleName: Command", "DEL SimpleName: List", "DEL SimpleType: Command"]}, {"root": "DEL SimpleName: removeAllCommandsForCluster", "operations": ["DEL SimpleName: removeAllCommandsForCluster"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL MethodInvocation", "DEL ReturnStatement"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TextElement:  The active set of commands for the cluster.", "DEL TagElement: @return"]}, {"root": "DEL MemberValuePair", "operations": ["DEL SimpleName: Command", "DEL SimpleType: Command", "DEL SimpleName: response", "DEL TypeLiteral", "DEL MemberValuePair"]}, {"root": "DEL MemberValuePair", "operations": ["DEL SimpleName: responseContainer", "DEL MemberValuePair", "DEL StringLiteral: \"List\""]}, {"root": "DEL ParameterizedType: List<Command>", "operations": ["DEL SimpleType: List", "DEL SimpleName: Command", "DEL SimpleType: Command", "DEL SimpleName: List", "DEL ParameterizedType: List<Command>"]}, {"root": "DEL SimpleName: removeCommandForCluster", "operations": ["DEL SimpleName: removeCommandForCluster"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: removeCommandForCluster", "DEL SimpleName: commandId", "DEL ReturnStatement", "DEL SimpleName: id", "DEL FieldAccess", "DEL MethodInvocation", "DEL SimpleName: clusterConfigService", "DEL ThisExpression"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ThisExpression", "DEL SimpleName: tags", "DEL SimpleName: addTagsForCluster", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: id", "DEL FieldAccess", "DEL SimpleName: clusterConfigService"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: tags", "DEL FieldAccess", "DEL SimpleName: clusterConfigService", "DEL MethodInvocation", "DEL SimpleName: id", "DEL ThisExpression", "DEL SimpleName: updateTagsForCluster"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TextElement:  Empty set if successful", "DEL TagElement: @return"]}, {"root": "DEL MemberValuePair", "operations": ["DEL TypeLiteral", "DEL SimpleName: response", "DEL MemberValuePair"]}, {"root": "DEL MemberValuePair", "operations": ["DEL MemberValuePair", "DEL SimpleName: responseContainer", "DEL StringLiteral: \"Set\""]}, {"root": "DEL ParameterizedType: Set<String>", "operations": ["DEL SimpleType: String", "DEL SimpleName: Set", "DEL SimpleType: Set", "DEL ParameterizedType: Set<String>", "DEL SimpleName: String"]}, {"root": "DEL SimpleName: removeAllTagsForCluster", "operations": ["DEL SimpleName: removeAllTagsForCluster"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL ReturnStatement", "DEL MethodInvocation"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return", "DEL TextElement:  The active set of tags for the cluster."]}, {"root": "DEL MemberValuePair", "operations": ["DEL TypeLiteral", "DEL SimpleName: response", "DEL MemberValuePair"]}, {"root": "DEL MemberValuePair", "operations": ["DEL MemberValuePair", "DEL StringLiteral: \"Set\"", "DEL SimpleName: responseContainer"]}, {"root": "DEL ParameterizedType: Set<String>", "operations": ["DEL SimpleName: Set", "DEL ParameterizedType: Set<String>", "DEL SimpleName: String", "DEL SimpleType: String", "DEL SimpleType: Set"]}, {"root": "DEL SimpleName: removeTagForCluster", "operations": ["DEL SimpleName: removeTagForCluster"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ThisExpression", "DEL MethodInvocation", "DEL ReturnStatement", "DEL FieldAccess", "DEL SimpleName: tag", "DEL SimpleName: id", "DEL SimpleName: clusterConfigService", "DEL SimpleName: removeTagForCluster"]}]}}, {"ClusterController_diff": {"operations": ["Insert ImportDeclaration(51) into CompilationUnit(2761) at 25", "Update QualifiedName: com.netflix.genie.core.services.ClusterConfigService(12) to com.netflix.genie.core.services.ClusterService", "Insert QualifiedName: org.springframework.web.bind.annotation.ResponseStatus(50) into ImportDeclaration(51) at 0", "Update SimpleType: ClusterConfigService(111) to ClusterService", "Insert Block(895) into MethodDeclaration(896) at 10", "Insert SingleMemberAnnotation(916) into MethodDeclaration(995) at 2", "Insert PrimitiveType: void(955) into MethodDeclaration(995) at 6", "Insert SingleMemberAnnotation(1009) into MethodDeclaration(1069) at 2", "Insert PrimitiveType: void(1048) into MethodDeclaration(1069) at 6", "Insert SimpleName: deleteAllClusters(1049) into MethodDeclaration(1069) at 7", "Insert Block(1068) into MethodDeclaration(1069) at 9", "Insert Block(1206) into MethodDeclaration(1207) at 10", "Insert Block(1456) into MethodDeclaration(1457) at 10", "Update SimpleName: updateCommandsForCluster(1812) to setCommandsForCluster", "Insert SingleMemberAnnotation(1944) into MethodDeclaration(2023) at 2", "Insert PrimitiveType: void(1983) into MethodDeclaration(2023) at 6", "Insert SimpleName: removeAllCommandsForCluster(1984) into MethodDeclaration(2023) at 7", "Insert Block(2022) into MethodDeclaration(2023) at 10", "Insert SingleMemberAnnotation(2047) into MethodDeclaration(2145) at 2", "Insert PrimitiveType: void(2086) into MethodDeclaration(2145) at 6", "Insert SimpleName: removeCommandForCluster(2087) into MethodDeclaration(2145) at 7", "Insert Block(2144) into MethodDeclaration(2145) at 11", "Insert Block(2282) into MethodDeclaration(2283) at 10", "Insert Block(2532) into MethodDeclaration(2533) at 10", "Insert SingleMemberAnnotation(2554) into MethodDeclaration(2635) at 2", "Insert PrimitiveType: void(2595) into MethodDeclaration(2635) at 6", "Insert SimpleName: removeAllTagsForCluster(2596) into MethodDeclaration(2635) at 7", "Insert Block(2634) into MethodDeclaration(2635) at 10", "Insert SingleMemberAnnotation(2659) into MethodDeclaration(2759) at 2", "Insert PrimitiveType: void(2700) into MethodDeclaration(2759) at 6", "Insert SimpleName: removeTagForCluster(2701) into MethodDeclaration(2759) at 7", "Insert Block(2758) into MethodDeclaration(2759) at 11", "Update SimpleName: ClusterConfigService(110) to ClusterService", "Update SimpleName: clusterConfigService(112) to clusterService", "Update SimpleType: ClusterConfigService(127) to ClusterService", "Update SimpleName: clusterConfigService(128) to clusterService", "Insert IfStatement(249) into Block(296) at 0", "Insert IfStatement(392) into Block(400) at 0", "Insert IfStatement(701) into Block(767) at 0", "Insert IfStatement(886) into Block(895) at 0", "Insert ReturnStatement(894) into Block(895) at 1", "Insert SimpleName: ResponseStatus(914) into SingleMemberAnnotation(916) at 0", "Insert QualifiedName: HttpStatus.OK(915) into SingleMemberAnnotation(916) at 1", "Insert IfStatement(986) into Block(994) at 0", "Insert ExpressionStatement(993) into Block(994) at 1", "Insert SimpleName: ResponseStatus(1007) into SingleMemberAnnotation(1009) at 0", "Insert QualifiedName: HttpStatus.OK(1008) into SingleMemberAnnotation(1009) at 1", "Insert IfStatement(1061) into Block(1068) at 0", "Insert ExpressionStatement(1067) into Block(1068) at 1", "Insert IfStatement(1197) into Block(1206) at 0", "Insert ReturnStatement(1205) into Block(1206) at 1", "Insert IfStatement(1309) into Block(1317) at 0", "Insert IfStatement(1447) into Block(1456) at 0", "Insert ReturnStatement(1455) into Block(1456) at 1", "Update ParameterizedType: List<Command>(1528) to List<String>", "Update SimpleName: commands(1529) to commandIds", "Insert IfStatement(1587) into Block(1596) at 0", "Insert IfStatement(1728) into Block(1783) at 0", "Update ParameterizedType: List<Command>(1844) to List<String>", "Update SimpleName: commands(1845) to commandIds", "Insert IfStatement(1913) into Block(1922) at 0", "Insert SimpleName: ResponseStatus(1942) into SingleMemberAnnotation(1944) at 0", "Insert QualifiedName: HttpStatus.OK(1943) into SingleMemberAnnotation(1944) at 1", "Insert IfStatement(2014) into Block(2022) at 0", "Insert ExpressionStatement(2021) into Block(2022) at 1", "Insert SimpleName: ResponseStatus(2045) into SingleMemberAnnotation(2047) at 0", "Insert QualifiedName: HttpStatus.OK(2046) into SingleMemberAnnotation(2047) at 1", "Insert IfStatement(2135) into Block(2144) at 0", "Insert ExpressionStatement(2143) into Block(2144) at 1", "Insert IfStatement(2273) into Block(2282) at 0", "Insert ReturnStatement(2281) into Block(2282) at 1", "Insert IfStatement(2385) into Block(2393) at 0", "Insert IfStatement(2523) into Block(2532) at 0", "Insert ReturnStatement(2531) into Block(2532) at 1", "Insert SimpleName: ResponseStatus(2552) into SingleMemberAnnotation(2554) at 0", "Insert QualifiedName: HttpStatus.OK(2553) into SingleMemberAnnotation(2554) at 1", "Insert IfStatement(2626) into Block(2634) at 0", "Insert ExpressionStatement(2633) into Block(2634) at 1", "Insert SimpleName: ResponseStatus(2657) into SingleMemberAnnotation(2659) at 0", "Insert QualifiedName: HttpStatus.OK(2658) into SingleMemberAnnotation(2659) at 1", "Insert IfStatement(2749) into Block(2758) at 0", "Insert ExpressionStatement(2757) into Block(2758) at 1", "Update SimpleName: clusterConfigService(117) to clusterService", "Update SimpleName: ClusterConfigService(126) to ClusterService", "Insert MethodInvocation(240) into IfStatement(249) at 0", "Insert Block(248) into IfStatement(249) at 1", "Insert MethodInvocation(383) into IfStatement(392) at 0", "Insert Block(391) into IfStatement(392) at 1", "Insert MethodInvocation(662) into IfStatement(701) at 0", "Insert Block(700) into IfStatement(701) at 1", "Insert MethodInvocation(875) into IfStatement(886) at 0", "Move Block(863) into IfStatement(886) at 1", "Insert MethodInvocation(893) into ReturnStatement(894) at 0", "Insert MethodInvocation(977) into IfStatement(986) at 0", "Insert Block(985) into IfStatement(986) at 1", "Insert MethodInvocation(992) into ExpressionStatement(993) at 0", "Insert MethodInvocation(1054) into IfStatement(1061) at 0", "Insert Block(1060) into IfStatement(1061) at 1", "Insert MethodInvocation(1066) into ExpressionStatement(1067) at 0", "Insert MethodInvocation(1186) into IfStatement(1197) at 0", "Move Block(1175) into IfStatement(1197) at 1", "Insert MethodInvocation(1204) into ReturnStatement(1205) at 0", "Insert MethodInvocation(1300) into IfStatement(1309) at 0", "Insert Block(1308) into IfStatement(1309) at 1", "Insert MethodInvocation(1436) into IfStatement(1447) at 0", "Move Block(1415) into IfStatement(1447) at 1", "Insert MethodInvocation(1454) into ReturnStatement(1455) at 0", "Update TextElement: Add new commands to the given cluster.(1417) to Add new commandIds to the given cluster.", "Update TextElement:        The id of the cluster to add the commands to. Not(1420) to          The id of the cluster to add the commandIds to. Not", "Update SimpleName: commands(1423) to commandIds", "Update TextElement:  The commands to add. Not null.(1424) to  The ids of the commandIds to add. Not null.", "Update TextElement:  The active commands for this cluster.(1426) to  The active commandIds for this cluster.", "Update StringLiteral: \"Add new commands to a cluster\"(1445) to \"Add new commandIds to a cluster\"", "Move MemberValuePair(1519) into NormalAnnotation(1545) at 2", "Move MemberValuePair(1503) into NormalAnnotation(1561) at 2", "Move SimpleType: String(2617) into ParameterizedType: List<String>(1569) at 1", "Insert MethodInvocation(1576) into IfStatement(1587) at 0", "Insert Block(1586) into IfStatement(1587) at 1", "Update TextElement: Get all the commands configured for a given cluster.(1552) to Get all the commandIds configured for a given cluster.", "Update TextElement:  The various statuses to return commands for.(1559) to  The various statuses to return commandIds for.", "Update TextElement:  The active set of commands for the cluster.(1561) to  The active set of commandIds for the cluster.", "Update StringLiteral: \"Get the commands for a cluster\"(1577) to \"Get the commandIds for a cluster\"", "Update StringLiteral: \"Get the commands for the cluster with the supplied id.\"(1580) to \"Get the commandIds for the cluster with the supplied id.\"", "Insert MethodInvocation(1717) into IfStatement(1728) at 0", "Insert Block(1727) into IfStatement(1728) at 1", "Update TextElement: Update the commands for a given cluster.(1734) to Set the commandIds for a given cluster.", "Update TextElement:        The id of the cluster to update the configuration files for.(1737) to          The id of the cluster to update the configuration files for.", "Update SimpleName: commands(1740) to commandIds", "Update TextElement:  The commands to replace existing applications with. Not(1741) to  The ids of the commands to replace existing commands with. Not", "Update TextElement:  The new set of commands for the cluster.(1744) to  The new set of commandIds for the cluster.", "Update StringLiteral: \"Update the commands for an cluster\"(1763) to \"Update the commands for a cluster\"", "Move MemberValuePair(1835) into NormalAnnotation(1871) at 2", "Move MemberValuePair(1819) into NormalAnnotation(1887) at 2", "Move SimpleType: String(2506) into ParameterizedType: List<String>(1895) at 1", "Insert MethodInvocation(1902) into IfStatement(1913) at 0", "Insert Block(1912) into IfStatement(1913) at 1", "Update TextElement: Remove the all commands from a given cluster.(1868) to Remove the all commandIds from a given cluster.", "Update TextElement:  The id of the cluster to delete the commands from. Not(1871) to  The id of the cluster to delete the commandIds from. Not", "Update StringLiteral: \"Remove all commands from an cluster\"(1890) to \"Remove all commandIds from an cluster\"", "Update StringLiteral: \"Remove all the commands from the cluster with given id.\"(1893) to \"Remove all the commandIds from the cluster with given id.\"", "Insert MethodInvocation(2005) into IfStatement(2014) at 0", "Insert Block(2013) into IfStatement(2014) at 1", "Insert MethodInvocation(2020) into ExpressionStatement(2021) at 0", "Insert MethodInvocation(2124) into IfStatement(2135) at 0", "Move Block(2100) into IfStatement(2135) at 1", "Insert MethodInvocation(2142) into ExpressionStatement(2143) at 0", "Insert MethodInvocation(2262) into IfStatement(2273) at 0", "Move Block(2233) into IfStatement(2273) at 1", "Insert MethodInvocation(2280) into ReturnStatement(2281) at 0", "Insert MethodInvocation(2376) into IfStatement(2385) at 0", "Insert Block(2384) into IfStatement(2385) at 1", "Insert MethodInvocation(2512) into IfStatement(2523) at 0", "Move Block(2473) into IfStatement(2523) at 1", "Insert MethodInvocation(2530) into ReturnStatement(2531) at 0", "Insert MethodInvocation(2617) into IfStatement(2626) at 0", "Insert Block(2625) into IfStatement(2626) at 1", "Insert MethodInvocation(2632) into ExpressionStatement(2633) at 0", "Insert MethodInvocation(2738) into IfStatement(2749) at 0", "Move Block(2711) into IfStatement(2749) at 1", "Insert MethodInvocation(2756) into ExpressionStatement(2757) at 0", "Update SimpleName: clusterConfigService(133) to clusterService", "Insert SimpleName: LOG(238) into MethodInvocation(240) at 0", "Insert SimpleName: isDebugEnabled(239) into MethodInvocation(240) at 1", "Move ExpressionStatement(242) into Block(248) at 0", "Insert SimpleName: LOG(381) into MethodInvocation(383) at 0", "Insert SimpleName: isDebugEnabled(382) into MethodInvocation(383) at 1", "Move ExpressionStatement(380) into Block(391) at 0", "Insert SimpleName: LOG(660) into MethodInvocation(662) at 0", "Insert SimpleName: isDebugEnabled(661) into MethodInvocation(662) at 1", "Move ExpressionStatement(652) into Block(700) at 0", "Move ExpressionStatement(674) into Block(700) at 1", "Insert SimpleName: LOG(873) into MethodInvocation(875) at 0", "Insert SimpleName: isDebugEnabled(874) into MethodInvocation(875) at 1", "Insert FieldAccess(889) into MethodInvocation(893) at 0", "Insert SimpleName: updateCluster(890) into MethodInvocation(893) at 1", "Insert SimpleName: id(891) into MethodInvocation(893) at 2", "Insert SimpleName: updateCluster(892) into MethodInvocation(893) at 3", "Insert SimpleName: LOG(975) into MethodInvocation(977) at 0", "Insert SimpleName: isDebugEnabled(976) into MethodInvocation(977) at 1", "Move ExpressionStatement(954) into Block(985) at 0", "Move FieldAccess(957) into MethodInvocation(992) at 0", "Move SimpleName: deleteCluster(958) into MethodInvocation(992) at 1", "Move SimpleName: id(959) into MethodInvocation(992) at 2", "Insert SimpleName: LOG(1052) into MethodInvocation(1054) at 0", "Insert SimpleName: isDebugEnabled(1053) into MethodInvocation(1054) at 1", "Move ExpressionStatement(1035) into Block(1060) at 0", "Move FieldAccess(1038) into MethodInvocation(1066) at 0", "Move SimpleName: deleteAllClusters(1039) into MethodInvocation(1066) at 1", "Insert SimpleName: LOG(1184) into MethodInvocation(1186) at 0", "Insert SimpleName: isDebugEnabled(1185) into MethodInvocation(1186) at 1", "Insert FieldAccess(1200) into MethodInvocation(1204) at 0", "Insert SimpleName: addConfigsForCluster(1201) into MethodInvocation(1204) at 1", "Insert SimpleName: id(1202) into MethodInvocation(1204) at 2", "Insert SimpleName: configs(1203) into MethodInvocation(1204) at 3", "Insert SimpleName: LOG(1298) into MethodInvocation(1300) at 0", "Insert SimpleName: isDebugEnabled(1299) into MethodInvocation(1300) at 1", "Move ExpressionStatement(1273) into Block(1308) at 0", "Insert SimpleName: LOG(1434) into MethodInvocation(1436) at 0", "Insert SimpleName: isDebugEnabled(1435) into MethodInvocation(1436) at 1", "Insert FieldAccess(1450) into MethodInvocation(1454) at 0", "Insert SimpleName: updateConfigsForCluster(1451) into MethodInvocation(1454) at 1", "Insert SimpleName: id(1452) into MethodInvocation(1454) at 2", "Insert SimpleName: configs(1453) into MethodInvocation(1454) at 3", "Update StringLiteral: \"Add the supplied commands to the cluster with the supplied id.\"(1448) to \"Add the supplied commandIds to the cluster with the supplied id.\"", "Update StringLiteral: \" commands should already have been created.\"(1449) to \" commandIds should already have been created.\"", "Update StringLiteral: \"Id of the cluster to add commands to.\"(1499) to \"Id of the cluster to add commandIds to.\"", "Update StringLiteral: \"The commands to add.\"(1515) to \"The ids of the commandIds to add.\"", "Insert SimpleName: LOG(1574) into MethodInvocation(1576) at 0", "Insert SimpleName: isDebugEnabled(1575) into MethodInvocation(1576) at 1", "Move ExpressionStatement(1541) into Block(1586) at 0", "Update SimpleName: commands(1547) to commandIds", "Update StringLiteral: \"Id of the cluster to get commands for.\"(1629) to \"Id of the cluster to get commandIds for.\"", "Update StringLiteral: \"The statuses of the commands to find.\"(1645) to \"The statuses of the commandIds to find.\"", "Insert SimpleName: LOG(1715) into MethodInvocation(1717) at 0", "Insert SimpleName: isDebugEnabled(1716) into MethodInvocation(1717) at 1", "Move ExpressionStatement(1677) into Block(1727) at 0", "Update StringLiteral: \"Id of the cluster to update commands for.\"(1815) to \"Id of the cluster to update commandIds for.\"", "Update StringLiteral: \"The commands to replace existing with. Should already be created\"(1831) to \"The ids of the commands to replace existing commands with. Should already be created\"", "Insert SimpleName: LOG(1900) into MethodInvocation(1902) at 0", "Insert SimpleName: isDebugEnabled(1901) into MethodInvocation(1902) at 1", "Move ExpressionStatement(1857) into Block(1912) at 0", "Update SimpleName: commands(1863) to commandIds", "Insert SimpleName: LOG(2003) into MethodInvocation(2005) at 0", "Insert SimpleName: isDebugEnabled(2004) into MethodInvocation(2005) at 1", "Move ExpressionStatement(1964) into Block(2013) at 0", "Move FieldAccess(1967) into MethodInvocation(2020) at 0", "Move SimpleName: removeAllCommandsForCluster(1968) into MethodInvocation(2020) at 1", "Move SimpleName: id(1969) into MethodInvocation(2020) at 2", "Insert SimpleName: LOG(2122) into MethodInvocation(2124) at 0", "Insert SimpleName: isDebugEnabled(2123) into MethodInvocation(2124) at 1", "Insert FieldAccess(2138) into MethodInvocation(2142) at 0", "Insert SimpleName: removeCommandForCluster(2139) into MethodInvocation(2142) at 1", "Insert SimpleName: id(2140) into MethodInvocation(2142) at 2", "Insert SimpleName: commandId(2141) into MethodInvocation(2142) at 3", "Insert SimpleName: LOG(2260) into MethodInvocation(2262) at 0", "Insert SimpleName: isDebugEnabled(2261) into MethodInvocation(2262) at 1", "Insert FieldAccess(2276) into MethodInvocation(2280) at 0", "Insert SimpleName: addTagsForCluster(2277) into MethodInvocation(2280) at 1", "Insert SimpleName: id(2278) into MethodInvocation(2280) at 2", "Insert SimpleName: tags(2279) into MethodInvocation(2280) at 3", "Insert SimpleName: LOG(2374) into MethodInvocation(2376) at 0", "Insert SimpleName: isDebugEnabled(2375) into MethodInvocation(2376) at 1", "Move ExpressionStatement(2331) into Block(2384) at 0", "Insert SimpleName: LOG(2510) into MethodInvocation(2512) at 0", "Insert SimpleName: isDebugEnabled(2511) into MethodInvocation(2512) at 1", "Insert FieldAccess(2526) into MethodInvocation(2530) at 0", "Insert SimpleName: updateTagsForCluster(2527) into MethodInvocation(2530) at 1", "Insert SimpleName: id(2528) into MethodInvocation(2530) at 2", "Insert SimpleName: tags(2529) into MethodInvocation(2530) at 3", "Insert SimpleName: LOG(2615) into MethodInvocation(2617) at 0", "Insert SimpleName: isDebugEnabled(2616) into MethodInvocation(2617) at 1", "Move ExpressionStatement(2573) into Block(2625) at 0", "Move FieldAccess(2576) into MethodInvocation(2632) at 0", "Move SimpleName: removeAllTagsForCluster(2577) into MethodInvocation(2632) at 1", "Move SimpleName: id(2578) into MethodInvocation(2632) at 2", "Insert SimpleName: LOG(2736) into MethodInvocation(2738) at 0", "Insert SimpleName: isDebugEnabled(2737) into MethodInvocation(2738) at 1", "Insert FieldAccess(2752) into MethodInvocation(2756) at 0", "Insert SimpleName: removeTagForCluster(2753) into MethodInvocation(2756) at 1", "Insert SimpleName: id(2754) into MethodInvocation(2756) at 2", "Insert SimpleName: tag(2755) into MethodInvocation(2756) at 3", "Update SimpleName: clusterConfigService(131) to clusterService", "Update SimpleName: clusterConfigService(382) to clusterService", "Update SimpleName: clusterConfigService(726) to clusterService", "Insert ThisExpression(887) into FieldAccess(889) at 0", "Insert SimpleName: clusterService(888) into FieldAccess(889) at 1", "Update SimpleName: clusterConfigService(956) to clusterService", "Update SimpleName: clusterConfigService(1037) to clusterService", "Insert ThisExpression(1198) into FieldAccess(1200) at 0", "Insert SimpleName: clusterService(1199) into FieldAccess(1200) at 1", "Update SimpleName: clusterConfigService(1275) to clusterService", "Insert ThisExpression(1448) into FieldAccess(1450) at 0", "Insert SimpleName: clusterService(1449) into FieldAccess(1450) at 1", "Update SimpleName: clusterConfigService(1543) to clusterService", "Update SimpleName: clusterConfigService(1725) to clusterService", "Update SimpleName: clusterConfigService(1859) to clusterService", "Update SimpleName: clusterConfigService(1966) to clusterService", "Insert ThisExpression(2136) into FieldAccess(2138) at 0", "Insert SimpleName: clusterService(2137) into FieldAccess(2138) at 1", "Insert ThisExpression(2274) into FieldAccess(2276) at 0", "Insert SimpleName: clusterService(2275) into FieldAccess(2276) at 1", "Update SimpleName: clusterConfigService(2333) to clusterService", "Insert ThisExpression(2524) into FieldAccess(2526) at 0", "Insert SimpleName: clusterService(2525) into FieldAccess(2526) at 1", "Update SimpleName: clusterConfigService(2575) to clusterService", "Insert ThisExpression(2750) into FieldAccess(2752) at 0", "Insert SimpleName: clusterService(2751) into FieldAccess(2752) at 1", "Update SimpleName: info(237) to debug", "Update SimpleName: clusterConfigService(248) to clusterService", "Update SimpleName: info(375) to debug", "Update SimpleName: info(649) to debug", "Insert InfixExpression: +(675) into MethodInvocation(676) at 2", "Update SimpleName: info(654) to debug", "Update SimpleName: info(847) to debug", "Update SimpleName: info(949) to debug", "Update SimpleName: info(1032) to debug", "Update SimpleName: info(1159) to debug", "Update SimpleName: info(1268) to debug", "Update SimpleName: info(1399) to debug", "Update SimpleName: info(1534) to debug", "Update SimpleName: info(1670) to debug", "Update SimpleName: info(1850) to debug", "Update SimpleName: info(1959) to debug", "Update SimpleName: info(2084) to debug", "Update SimpleName: info(2217) to debug", "Update SimpleName: info(2326) to debug", "Update SimpleName: info(2457) to debug", "Update SimpleName: info(2568) to debug", "Update SimpleName: info(2695) to debug", "Insert StringLiteral: \"Called \"(665) into InfixExpression: +(675) at 0", "Insert StringLiteral: \"[name \"(666) into InfixExpression: +(675) at 1", "Insert StringLiteral: \"| statuses \"(667) into InfixExpression: +(675) at 2", "Insert StringLiteral: \"| tags \"(668) into InfixExpression: +(675) at 3", "Insert StringLiteral: \"| minUpdateTime \"(669) into InfixExpression: +(675) at 4", "Insert StringLiteral: \"| maxUpdateTime \"(670) into InfixExpression: +(675) at 5", "Insert StringLiteral: \"| page \"(671) into InfixExpression: +(675) at 6", "Insert StringLiteral: \"| limit \"(672) into InfixExpression: +(675) at 7", "Insert StringLiteral: \"| descending | \"(673) into InfixExpression: +(675) at 8", "Insert StringLiteral: \"orderBys]\"(674) into InfixExpression: +(675) at 9", "Update StringLiteral: \" and commands \"(1537) to \" and commandIds \"", "Update SimpleName: commands(1538) to commandIds", "Update StringLiteral: \" and commands \"(1853) to \" and commandIds \"", "Update SimpleName: commands(1854) to commandIds", "Delete StringLiteral: \"Called [name | statuses | tags | minUpdateTime | maxUpdateTime | page | limit | descending | orderBys]\"(650)", "Delete ThisExpression(855)", "Delete SimpleName: clusterConfigService(856)", "Delete FieldAccess(857)", "Delete SimpleName: updateCluster(858)", "Delete SimpleName: id(859)", "Delete SimpleName: updateCluster(860)", "Delete MethodInvocation(861)", "Delete ReturnStatement(862)", "Delete TextElement:  the deleted cluster(870)", "Delete TagElement: @return(871)", "Delete SimpleName: response(891)", "Delete SimpleName: Cluster(892)", "Delete SimpleType: Cluster(893)", "Delete TypeLiteral(894)", "Delete MemberValuePair(895)", "Delete SimpleName: Cluster(927)", "Delete SimpleType: Cluster(928)", "Delete MethodInvocation(960)", "Delete ReturnStatement(961)", "Delete TextElement:  All The deleted clusters(966)", "Delete TagElement: @return(967)", "Delete SimpleName: response(984)", "Delete SimpleName: Cluster(985)", "Delete SimpleType: Cluster(986)", "Delete TypeLiteral(987)", "Delete MemberValuePair(988)", "Delete SimpleName: responseContainer(989)", "Delete StringLiteral: \"List\"(990)", "Delete MemberValuePair(991)", "Delete SimpleName: List(1023)", "Delete SimpleType: List(1024)", "Delete SimpleName: Cluster(1025)", "Delete SimpleType: Cluster(1026)", "Delete ParameterizedType: List<Cluster>(1027)", "Delete SimpleName: deleteAllClusters(1028)", "Delete MethodInvocation(1040)", "Delete ReturnStatement(1041)", "Delete Block(1042)", "Delete ThisExpression(1167)", "Delete SimpleName: clusterConfigService(1168)", "Delete FieldAccess(1169)", "Delete SimpleName: addConfigsForCluster(1170)", "Delete SimpleName: id(1171)", "Delete SimpleName: configs(1172)", "Delete MethodInvocation(1173)", "Delete ReturnStatement(1174)", "Delete ThisExpression(1407)", "Delete SimpleName: clusterConfigService(1408)", "Delete FieldAccess(1409)", "Delete SimpleName: updateConfigsForCluster(1410)", "Delete SimpleName: id(1411)", "Delete SimpleName: configs(1412)", "Delete MethodInvocation(1413)", "Delete ReturnStatement(1414)", "Delete SimpleName: Command(1526)", "Delete SimpleType: Command(1527)", "Delete SimpleName: Command(1842)", "Delete SimpleType: Command(1843)", "Delete TextElement:  Empty set if successful(1874)", "Delete TagElement: @return(1875)", "Delete SimpleName: response(1895)", "Delete SimpleName: Command(1896)", "Delete SimpleType: Command(1897)", "Delete TypeLiteral(1898)", "Delete MemberValuePair(1899)", "Delete SimpleName: responseContainer(1900)", "Delete StringLiteral: \"List\"(1901)", "Delete MemberValuePair(1902)", "Delete SimpleName: List(1934)", "Delete SimpleType: List(1935)", "Delete SimpleName: Command(1936)", "Delete SimpleType: Command(1937)", "Delete ParameterizedType: List<Command>(1938)", "Delete SimpleName: removeAllCommandsForCluster(1939)", "Delete MethodInvocation(1970)", "Delete ReturnStatement(1971)", "Delete Block(1972)", "Delete TextElement:  The active set of commands for the cluster.(1983)", "Delete TagElement: @return(1984)", "Delete SimpleName: response(2004)", "Delete SimpleName: Command(2005)", "Delete SimpleType: Command(2006)", "Delete TypeLiteral(2007)", "Delete MemberValuePair(2008)", "Delete SimpleName: responseContainer(2009)", "Delete StringLiteral: \"List\"(2010)", "Delete MemberValuePair(2011)", "Delete SimpleName: List(2043)", "Delete SimpleType: List(2044)", "Delete SimpleName: Command(2045)", "Delete SimpleType: Command(2046)", "Delete ParameterizedType: List<Command>(2047)", "Delete SimpleName: removeCommandForCluster(2048)", "Delete ThisExpression(2092)", "Delete SimpleName: clusterConfigService(2093)", "Delete FieldAccess(2094)", "Delete SimpleName: removeCommandForCluster(2095)", "Delete SimpleName: id(2096)", "Delete SimpleName: commandId(2097)", "Delete MethodInvocation(2098)", "Delete ReturnStatement(2099)", "Delete ThisExpression(2225)", "Delete SimpleName: clusterConfigService(2226)", "Delete FieldAccess(2227)", "Delete SimpleName: addTagsForCluster(2228)", "Delete SimpleName: id(2229)", "Delete SimpleName: tags(2230)", "Delete MethodInvocation(2231)", "Delete ReturnStatement(2232)", "Delete ThisExpression(2465)", "Delete SimpleName: clusterConfigService(2466)", "Delete FieldAccess(2467)", "Delete SimpleName: updateTagsForCluster(2468)", "Delete SimpleName: id(2469)", "Delete SimpleName: tags(2470)", "Delete MethodInvocation(2471)", "Delete ReturnStatement(2472)", "Delete TextElement:  Empty set if successful(2481)", "Delete TagElement: @return(2482)", "Delete SimpleName: response(2504)", "Delete TypeLiteral(2507)", "Delete MemberValuePair(2508)", "Delete SimpleName: responseContainer(2509)", "Delete StringLiteral: \"Set\"(2510)", "Delete MemberValuePair(2511)", "Delete SimpleName: Set(2543)", "Delete SimpleType: Set(2544)", "Delete SimpleName: String(2545)", "Delete SimpleType: String(2546)", "Delete ParameterizedType: Set<String>(2547)", "Delete SimpleName: removeAllTagsForCluster(2548)", "Delete MethodInvocation(2579)", "Delete ReturnStatement(2580)", "Delete Block(2581)", "Delete TextElement:  The active set of tags for the cluster.(2592)", "Delete TagElement: @return(2593)", "Delete SimpleName: response(2615)", "Delete TypeLiteral(2618)", "Delete MemberValuePair(2619)", "Delete SimpleName: responseContainer(2620)", "Delete StringLiteral: \"Set\"(2621)", "Delete MemberValuePair(2622)", "Delete SimpleName: Set(2654)", "Delete SimpleType: Set(2655)", "Delete SimpleName: String(2656)", "Delete SimpleType: String(2657)", "Delete ParameterizedType: Set<String>(2658)", "Delete SimpleName: removeTagForCluster(2659)", "Delete ThisExpression(2703)", "Delete SimpleName: clusterConfigService(2704)", "Delete FieldAccess(2705)", "Delete SimpleName: removeTagForCluster(2706)", "Delete SimpleName: id(2707)", "Delete SimpleName: tag(2708)", "Delete MethodInvocation(2709)", "Delete ReturnStatement(2710)"]}}, {"CommandController_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 26", "operations": ["INS QualifiedName: org.springframework.web.bind.annotation.ResponseStatus to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 26"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 27"]}, {"root": "UPDATE from com.netflix.genie.core.services.CommandConfigService to com.netflix.genie.core.services.CommandService", "operations": ["UPD QualifiedName: com.netflix.genie.core.services.CommandConfigService from com.netflix.genie.core.services.CommandConfigService to com.netflix.genie.core.services.CommandService"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS NormalAnnotation to MethodDeclaration at 3", "INS SimpleName: LOG to MethodInvocation at 0", "INS FieldAccess to MethodInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 6", "INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: deleteAllCommands to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 9", "INS SimpleName: ApiOperation to NormalAnnotation at 0", "INS MethodInvocation to IfStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS IfStatement to Block at 0", "INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1", "INS SingleMemberAnnotation to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 5", "INS StringLiteral: \"called to delete all commands.\" to MethodInvocation at 2", "INS SimpleName: deleteAllCommands to MethodDeclaration at 7", "INS SimpleName: commandService to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 28", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: removeAllApplicationsForCommand to MethodDeclaration at 7", "INS TextElement:  The id of the command to delete the applications from. Not to TagElement: @param at 1", "INS SimpleName: commandService to FieldAccess at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: GenieException to TagElement: @throws at 0", "INS SimpleName: value to MemberValuePair at 0", "INS TagElement: @param to Javadoc at 1", "INS TagElement: @throws to Javadoc at 2", "INS StringLiteral: \"Remove applications from a command\" to MemberValuePair at 1", "INS SimpleName: id to TagElement: @param at 0", "INS MemberValuePair to NormalAnnotation at 1", "INS ThisExpression to FieldAccess at 0", "INS IfStatement to Block at 0", "INS NormalAnnotation to MethodDeclaration at 3", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 28", "INS TextElement: null/empty/blank. to TagElement: @param at 2", "INS TextElement:  For any error to TagElement: @throws at 1", "INS Block to MethodDeclaration at 10", "INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0", "INS PrimitiveType: void to MethodDeclaration at 6", "INS SingleMemberAnnotation to MethodDeclaration at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: ApiOperation to NormalAnnotation at 0", "INS TagElement to Javadoc at 0", "INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1", "INS TextElement: Remove the applications from a given command. to TagElement at 0", "INS Modifier: public to MethodDeclaration at 5", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: removeApplicationsForCommand to MethodInvocation at 1", "INS SimpleName: id to MethodInvocation at 2"]}, {"root": "UPDATE from CommandConfigService to CommandService", "operations": ["UPD SimpleName: CommandConfigService from CommandConfigService to CommandService", "UPD SimpleType: CommandConfigService from CommandConfigService to CommandService", "UPD SimpleName: CommandConfigService from CommandConfigService to CommandService", "UPD SimpleType: CommandConfigService from CommandConfigService to CommandService"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV NormalAnnotation to MethodDeclaration at 1", "MOV NormalAnnotation to MethodDeclaration at 4", "MOV Javadoc to MethodDeclaration at 0", "MOV SimpleType: GenieException to MethodDeclaration at 8"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 2", "operations": ["INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to MethodDeclaration at 2", "INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 6"]}, {"root": "INS Block to MethodDeclaration at 10", "operations": ["INS SimpleName: commandService to FieldAccess at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: id to MethodInvocation at 2", "INS Block to MethodDeclaration at 10", "INS MethodInvocation to ReturnStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: addConfigsForCommand to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS SimpleName: configs to MethodInvocation at 3"]}, {"root": "INS Block to MethodDeclaration at 10", "operations": ["INS SimpleName: configs to MethodInvocation at 3", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: id to MethodInvocation at 2", "INS SimpleName: updateConfigsForCommand to MethodInvocation at 1", "INS Block to MethodDeclaration at 10", "INS SimpleName: commandService to FieldAccess at 1", "INS ReturnStatement to Block at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 2", "operations": ["INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1", "INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 6"]}, {"root": "INS SimpleName: removeAllConfigsForCommand to MethodDeclaration at 7", "operations": ["INS SimpleName: removeAllConfigsForCommand to MethodDeclaration at 7"]}, {"root": "INS Block to MethodDeclaration at 12", "operations": ["INS ExpressionStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to MethodDeclaration at 12", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "INS Block to MethodDeclaration at 10", "operations": ["INS ThisExpression to FieldAccess at 0", "INS IfStatement to Block at 0", "INS SimpleName: addTagsForCommand to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: commandService to FieldAccess at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: id to MethodInvocation at 2", "INS Block to MethodDeclaration at 10", "INS SimpleName: tags to MethodInvocation at 3", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS FieldAccess to MethodInvocation at 0", "INS ReturnStatement to Block at 1"]}, {"root": "INS Block to MethodDeclaration at 10", "operations": ["INS SimpleName: updateTagsForCommand to MethodInvocation at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: tags to MethodInvocation at 3", "INS IfStatement to Block at 0", "INS SimpleName: id to MethodInvocation at 2", "INS SimpleName: commandService to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Block to MethodDeclaration at 10", "INS MethodInvocation to IfStatement at 0", "INS ReturnStatement to Block at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 2", "operations": ["INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to MethodDeclaration at 2", "INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 6"]}, {"root": "INS SimpleName: removeAllTagsForCommand to MethodDeclaration at 7", "operations": ["INS SimpleName: removeAllTagsForCommand to MethodDeclaration at 7"]}, {"root": "INS Block to MethodDeclaration at 12", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 12"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 2", "operations": ["INS SingleMemberAnnotation to MethodDeclaration at 2", "INS SimpleName: ResponseStatus to SingleMemberAnnotation at 0", "INS QualifiedName: HttpStatus.OK to SingleMemberAnnotation at 1"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 6", "operations": ["INS PrimitiveType: void to MethodDeclaration at 6"]}, {"root": "INS SimpleName: removeTagForCommand to MethodDeclaration at 7", "operations": ["INS SimpleName: removeTagForCommand to MethodDeclaration at 7"]}, {"root": "INS Block to MethodDeclaration at 13", "operations": ["INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS Block to MethodDeclaration at 13", "INS SimpleName: LOG to MethodInvocation at 0", "INS FieldAccess to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: removeTagForCommand to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS SimpleName: tag to MethodInvocation at 3", "INS ExpressionStatement to Block at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: id to MethodInvocation at 2", "INS SimpleName: commandService to FieldAccess at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TextElement: null/empty/blank. to TagElement: @param at 2", "INS TextElement:  The ids of the applications to add. Not null. to TagElement: @param at 1", "INS SimpleName: id to TagElement: @param at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @return to Javadoc at 3", "INS SimpleName: GenieException to TagElement: @throws at 0", "INS TextElement:  The active applications for this command. to TagElement: @return at 0", "INS SimpleName: applicationIds to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 2", "INS TextElement:  For any error to TagElement: @throws at 1", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: Add applications for the given command. to TagElement at 0", "INS TagElement: @throws to Javadoc at 4", "INS TagElement: @param to Javadoc at 1", "INS TextElement:              The id of the command to add the applications to. Not to TagElement: @param at 1"]}, {"root": "UPDATE from setApplicationsForCommand to addApplicationsForCommand", "operations": ["UPD SimpleName: setApplicationsForCommand from setApplicationsForCommand to addApplicationsForCommand", "UPD SimpleName: setApplicationsForCommand from setApplicationsForCommand to addApplicationsForCommand"]}, {"root": "UPDATE from getApplicationForCommand to getApplicationsForCommand", "operations": ["UPD SimpleName: getApplicationForCommand from getApplicationForCommand to getApplicationsForCommand"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0"]}, {"root": "INS NormalAnnotation to MethodDeclaration at 1", "operations": ["INS NormalAnnotation to MethodDeclaration at 1", "INS StringLiteral: \"/{id}/applications\" to MemberValuePair at 1", "INS MemberValuePair to NormalAnnotation at 1", "INS SimpleName: value to MemberValuePair at 0", "INS QualifiedName: MediaType.APPLICATION_JSON_VALUE to MemberValuePair at 1", "INS SimpleName: consumes to MemberValuePair at 0", "INS SimpleName: RequestMapping to NormalAnnotation at 0", "INS MemberValuePair to NormalAnnotation at 2", "INS SimpleName: method to MemberValuePair at 0", "INS QualifiedName: RequestMethod.PUT to MemberValuePair at 1", "INS MemberValuePair to NormalAnnotation at 3"]}, {"root": "INS NormalAnnotation to MethodDeclaration at 3", "operations": ["INS SimpleName: ApiResponse to NormalAnnotation at 0", "INS SimpleName: message to MemberValuePair at 0", "INS MemberValuePair to NormalAnnotation at 2", "INS SimpleName: message to MemberValuePair at 0", "INS NormalAnnotation to ArrayInitializer at 0", "INS SimpleName: code to MemberValuePair at 0", "INS StringLiteral: \"Command not found\" to MemberValuePair at 1", "INS SimpleName: code to MemberValuePair at 0", "INS MemberValuePair to NormalAnnotation at 1", "INS QualifiedName: HttpURLConnection.HTTP_INTERNAL_ERROR to MemberValuePair at 1", "INS NormalAnnotation to MethodDeclaration at 3", "INS NormalAnnotation to ArrayInitializer at 2", "INS NormalAnnotation to ArrayInitializer at 1", "INS SimpleName: code to MemberValuePair at 0", "INS MemberValuePair to NormalAnnotation at 2", "INS SimpleName: value to MemberValuePair at 0", "INS QualifiedName: HttpURLConnection.HTTP_NOT_FOUND to MemberValuePair at 1", "INS SimpleName: ApiResponses to NormalAnnotation at 0", "INS SimpleName: ApiResponse to NormalAnnotation at 0", "INS MemberValuePair to NormalAnnotation at 1", "INS MemberValuePair to NormalAnnotation at 1", "INS MemberValuePair to NormalAnnotation at 1", "INS SimpleName: message to MemberValuePair at 0", "INS SimpleName: ApiResponse to NormalAnnotation at 0", "INS QualifiedName: HttpURLConnection.HTTP_PRECON_FAILED to MemberValuePair at 1", "INS MemberValuePair to NormalAnnotation at 2", "INS ArrayInitializer to MemberValuePair at 1", "INS StringLiteral: \"Invalid required parameter supplied\" to MemberValuePair at 1", "INS StringLiteral: \"Genie Server Error due to Unknown Exception\" to MemberValuePair at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: GenieException to MethodDeclaration at 9", "MOV ParameterizedType: Set<Application> to MethodDeclaration at 5", "MOV NormalAnnotation to MethodDeclaration at 4", "MOV Block to IfStatement at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 8", "MOV NormalAnnotation to MethodDeclaration at 1"]}, {"root": "INS SimpleName: setApplicationsForCommand to MethodDeclaration at 6", "operations": ["INS SimpleName: setApplicationsForCommand to MethodDeclaration at 6"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS BooleanLiteral: true to MemberValuePair at 1", "INS SimpleName: ApiParam to NormalAnnotation at 0", "INS SimpleName: id to SingleVariableDeclaration at 4", "INS MemberValuePair to NormalAnnotation at 2", "INS SimpleName: PathVariable to SingleMemberAnnotation at 0", "INS StringLiteral: \"id\" to SingleMemberAnnotation at 1", "INS SingleMemberAnnotation to SingleVariableDeclaration at 1", "INS StringLiteral: \"Id of the command to set application for.\" to MemberValuePair at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 3", "INS SimpleName: required to MemberValuePair at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS Modifier: final to SingleVariableDeclaration at 2", "INS MemberValuePair to NormalAnnotation at 1", "INS NormalAnnotation to SingleVariableDeclaration at 0", "INS SimpleName: value to MemberValuePair at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 8", "operations": ["INS SimpleName: required to MemberValuePair at 0", "INS StringLiteral: \"The ids of the applications to set.\" to MemberValuePair at 1", "INS MemberValuePair to NormalAnnotation at 2", "INS SimpleName: ApiParam to NormalAnnotation at 0", "INS ParameterizedType: Set<String> to SingleVariableDeclaration at 3", "INS SimpleName: RequestBody to MarkerAnnotation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS MemberValuePair to NormalAnnotation at 1", "INS MarkerAnnotation to SingleVariableDeclaration at 1", "INS SimpleName: applicationIds to SingleVariableDeclaration at 4", "INS BooleanLiteral: true to MemberValuePair at 1", "INS NormalAnnotation to SingleVariableDeclaration at 0", "INS Modifier: final to SingleVariableDeclaration at 2", "INS SimpleName: value to MemberValuePair at 0"]}, {"root": "INS SimpleType: GenieException to MethodDeclaration at 9", "operations": ["INS SimpleType: GenieException to MethodDeclaration at 9", "INS SimpleName: GenieException to SimpleType: GenieException at 0"]}, {"root": "INS NormalAnnotation to MethodDeclaration at 1", "operations": ["INS MemberValuePair to NormalAnnotation at 2", "INS NormalAnnotation to MethodDeclaration at 1", "INS SimpleName: value to MemberValuePair at 0", "INS MemberValuePair to NormalAnnotation at 1", "INS StringLiteral: \"/{id}/applications/{appId}\" to MemberValuePair at 1", "INS QualifiedName: RequestMethod.DELETE to MemberValuePair at 1", "INS SimpleName: RequestMapping to NormalAnnotation at 0", "INS SimpleName: method to MemberValuePair at 0"]}, {"root": "INS NormalAnnotation to MethodDeclaration at 3", "operations": ["INS QualifiedName: HttpURLConnection.HTTP_PRECON_FAILED to MemberValuePair at 1", "INS MemberValuePair to NormalAnnotation at 2", "INS StringLiteral: \"Invalid required parameter supplied\" to MemberValuePair at 1", "INS QualifiedName: HttpURLConnection.HTTP_INTERNAL_ERROR to MemberValuePair at 1", "INS SimpleName: value to MemberValuePair at 0", "INS SimpleName: message to MemberValuePair at 0", "INS MemberValuePair to NormalAnnotation at 1", "INS SimpleName: code to MemberValuePair at 0", "INS SimpleName: ApiResponse to NormalAnnotation at 0", "INS NormalAnnotation to MethodDeclaration at 3", "INS SimpleName: message to MemberValuePair at 0", "INS SimpleName: code to MemberValuePair at 0", "INS NormalAnnotation to ArrayInitializer at 0", "INS MemberValuePair to NormalAnnotation at 2", "INS NormalAnnotation to ArrayInitializer at 1", "INS NormalAnnotation to ArrayInitializer at 2", "INS MemberValuePair to NormalAnnotation at 1", "INS ArrayInitializer to MemberValuePair at 1", "INS SimpleName: ApiResponse to NormalAnnotation at 0", "INS SimpleName: ApiResponses to NormalAnnotation at 0", "INS QualifiedName: HttpURLConnection.HTTP_NOT_FOUND to MemberValuePair at 1", "INS MemberValuePair to NormalAnnotation at 1", "INS MemberValuePair to NormalAnnotation at 1", "INS SimpleName: message to MemberValuePair at 0", "INS StringLiteral: \"Command not found\" to MemberValuePair at 1", "INS MemberValuePair to NormalAnnotation at 2", "INS StringLiteral: \"Genie Server Error due to Unknown Exception\" to MemberValuePair at 1", "INS SimpleName: ApiResponse to NormalAnnotation at 0", "INS SimpleName: code to MemberValuePair at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 5", "operations": ["INS PrimitiveType: void to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SingleMemberAnnotation to SingleVariableDeclaration at 1", "INS SimpleName: ApiParam to NormalAnnotation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: value to MemberValuePair at 0", "INS Modifier: final to SingleVariableDeclaration at 2", "INS SimpleName: PathVariable to SingleMemberAnnotation at 0", "INS BooleanLiteral: true to MemberValuePair at 1", "INS NormalAnnotation to SingleVariableDeclaration at 0", "INS StringLiteral: \"id\" to SingleMemberAnnotation at 1", "INS StringLiteral: \"Id of the command to delete from.\" to MemberValuePair at 1", "INS MemberValuePair to NormalAnnotation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleType: String to SingleVariableDeclaration at 3", "INS SimpleName: id to SingleVariableDeclaration at 4", "INS SimpleName: required to MemberValuePair at 0", "INS MemberValuePair to NormalAnnotation at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 8", "operations": ["INS StringLiteral: \"Id of the application to remove.\" to MemberValuePair at 1", "INS NormalAnnotation to SingleVariableDeclaration at 0", "INS Modifier: final to SingleVariableDeclaration at 2", "INS SimpleName: value to MemberValuePair at 0", "INS BooleanLiteral: true to MemberValuePair at 1", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS SimpleName: ApiParam to NormalAnnotation at 0", "INS StringLiteral: \"appId\" to SingleMemberAnnotation at 1", "INS SimpleName: PathVariable to SingleMemberAnnotation at 0", "INS MemberValuePair to NormalAnnotation at 2", "INS SimpleName: required to MemberValuePair at 0", "INS SimpleName: appId to SingleVariableDeclaration at 4", "INS MemberValuePair to NormalAnnotation at 1", "INS SingleMemberAnnotation to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleType: GenieException to MethodDeclaration at 9", "operations": ["INS SimpleType: GenieException to MethodDeclaration at 9", "INS SimpleName: GenieException to SimpleType: GenieException at 0"]}, {"root": "INS Block to MethodDeclaration at 10", "operations": ["INS SimpleName: debug to MethodInvocation at 1", "INS SimpleName: appId to InfixExpression: + at 3", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: id to InfixExpression: + at 1", "INS Block to MethodDeclaration at 10", "INS ExpressionStatement to Block at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: removeApplicationForCommand to MethodInvocation at 1", "INS SimpleName: commandService to FieldAccess at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: id to MethodInvocation at 2", "INS SimpleName: appId to MethodInvocation at 3", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"Called with id '\" to InfixExpression: + at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS StringLiteral: \"' and app id \" to InfixExpression: + at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 0"]}, {"root": "UPDATE from Code for CommandConfigResource. to Code for the Commands REST API implemented as a Spring REST controller.", "operations": ["UPD TextElement: Code for CommandConfigResource. from Code for CommandConfigResource. to Code for the Commands REST API implemented as a Spring REST controller."]}, {"root": "UPDATE from commandConfigService to commandService", "operations": ["UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService", "UPD SimpleName: commandConfigService from commandConfigService to commandService"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "MOVE from NormalAnnotation", "operations": ["MOV MemberValuePair to NormalAnnotation at 2", "MOV MemberValuePair to NormalAnnotation at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from NormalAnnotation", "operations": ["MOV MemberValuePair to NormalAnnotation at 4", "MOV MemberValuePair to NormalAnnotation at 3", "MOV MemberValuePair to NormalAnnotation at 2"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1"]}, {"root": "UPDATE from @return to @param", "operations": ["UPD TagElement: @return from @return to @param"]}, {"root": "INS MemberValuePair to NormalAnnotation at 2", "operations": ["INS SimpleName: notes to MemberValuePair at 0", "INS StringLiteral: \"Remove the applications from the command with given id.\" to MemberValuePair at 1", "INS MemberValuePair to NormalAnnotation at 2"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 3"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "UPDATE from \"Delete an command\" to \"Delete a command\"", "operations": ["UPD StringLiteral: \"Delete an command\" from \"Delete an command\" to \"Delete a command\""]}, {"root": "UPDATE from \"Delete an command with the supplied id.\" to \"Delete a command with the supplied id.\"", "operations": ["UPD StringLiteral: \"Delete an command with the supplied id.\" from \"Delete an command with the supplied id.\" to \"Delete a command with the supplied id.\""]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "UPDATE from \"Set the applications for a command\" to \"Add applications for a command\"", "operations": ["UPD StringLiteral: \"Set the applications for a command\" from \"Set the applications for a command\" to \"Add applications for a command\""]}, {"root": "UPDATE from Set the application for the given command. to Set the applications for the given command.", "operations": ["UPD TextElement: Set the application for the given command. from Set the application for the given command. to Set the applications for the given command."]}, {"root": "UPDATE from response to value", "operations": ["UPD SimpleName: response from response to value"]}, {"root": "INS StringLiteral: \"Set applications for a command\" to MemberValuePair at 1", "operations": ["INS StringLiteral: \"Set applications for a command\" to MemberValuePair at 1"]}, {"root": "UPDATE from responseContainer to notes", "operations": ["UPD SimpleName: responseContainer from responseContainer to notes"]}, {"root": "INS InfixExpression: + to MemberValuePair at 1", "operations": ["INS StringLiteral: \"Set the supplied applications to the command \" to InfixExpression: + at 0", "INS StringLiteral: \"with the supplied id. Applications should already \" to InfixExpression: + at 1", "INS StringLiteral: \"have been created. Replaces existing applications.\" to InfixExpression: + at 2", "INS InfixExpression: + to MemberValuePair at 1"]}, {"root": "UPDATE from List to Set", "operations": ["UPD SimpleType: List from List to Set", "UPD SimpleName: List from List to Set"]}, {"root": "MOVE from ParameterizedType: Set<String>", "operations": ["MOV SimpleType: Command to ParameterizedType: Set<String> at 1", "MOV SimpleType: List to ParameterizedType: Set<String> at 0"]}, {"root": "UPDATE from Command to String", "operations": ["UPD SimpleType: Command from Command to String", "UPD SimpleName: Command from Command to String"]}, {"root": "UPDATE from  The id of the command to delete the application from. Not to     The id of the command to delete the application from. Not", "operations": ["UPD TextElement:  The id of the command to delete the application from. Not from  The id of the command to delete the application from. Not to     The id of the command to delete the application from. Not"]}, {"root": "INS SimpleName: appId to TagElement: @return at 0", "operations": ["INS SimpleName: appId to TagElement: @return at 0"]}, {"root": "UPDATE from  The active set of applications for the command. to  The id of the application to remove from the command. Not null/empty/blank.", "operations": ["UPD TextElement:  The active set of applications for the command. from  The active set of applications for the command. to  The id of the application to remove from the command. Not null/empty/blank."]}, {"root": "UPDATE from \"Remove an applications from a command\" to \"Remove applications from a command\"", "operations": ["UPD StringLiteral: \"Remove an applications from a command\" from \"Remove an applications from a command\" to \"Remove applications from a command\""]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS SimpleName: statuses to InfixExpression: != at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0", "MOV SimpleName: id to MethodInvocation at 2", "MOV SimpleName: deleteCommand to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: removeAllConfigsForCommand to MethodInvocation at 1", "MOV FieldAccess to MethodInvocation at 0", "MOV SimpleName: id to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: removeAllTagsForCommand to MethodInvocation at 1", "MOV SimpleName: id to MethodInvocation at 2", "MOV FieldAccess to MethodInvocation at 0"]}, {"root": "UPDATE from \"Set the supplied applications to the command \" to \"Add the supplied applications to the command \"", "operations": ["UPD StringLiteral: \"Set the supplied applications to the command \" from \"Set the supplied applications to the command \" to \"Add the supplied applications to the command \""]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from deleteAllCommands to setApplicationsForCommand", "operations": ["UPD SimpleName: deleteAllCommands from deleteAllCommands to setApplicationsForCommand"]}, {"root": "INS SimpleName: id to MethodInvocation at 2", "operations": ["INS SimpleName: id to MethodInvocation at 2"]}, {"root": "INS SimpleName: applicationIds to MethodInvocation at 3", "operations": ["INS SimpleName: applicationIds to MethodInvocation at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV PrefixExpression: ! to InfixExpression: && at 1"]}, {"root": "UPDATE from info to debug", "operations": ["UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug"]}, {"root": "INS InfixExpression: + to MethodInvocation at 2", "operations": ["INS SimpleName: applicationIds to InfixExpression: + at 3", "INS StringLiteral: \"Called with id \" to InfixExpression: + at 0", "INS SimpleName: id to InfixExpression: + at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS StringLiteral: \" and application \" to InfixExpression: + at 2"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TextElement:  All The deleted comamnd", "DEL TagElement: @return"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return", "DEL TextElement:  The deleted configuration"]}, {"root": "DEL MemberValuePair", "operations": ["DEL SimpleName: Command", "DEL MemberValuePair", "DEL TypeLiteral", "DEL SimpleType: Command", "DEL SimpleName: response"]}, {"root": "DEL SimpleType: Command", "operations": ["DEL SimpleType: Command", "DEL SimpleName: Command"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: addConfigsForCommand", "DEL ReturnStatement", "DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: commandConfigService", "DEL SimpleName: id", "DEL SimpleName: configs", "DEL FieldAccess"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: id", "DEL FieldAccess", "DEL SimpleName: configs", "DEL SimpleName: updateConfigsForCommand", "DEL SimpleName: commandConfigService"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return", "DEL TextElement:  Empty set if successful"]}, {"root": "DEL MemberValuePair", "operations": ["DEL SimpleName: response", "DEL TypeLiteral", "DEL SimpleName: String", "DEL MemberValuePair", "DEL SimpleType: String"]}, {"root": "DEL MemberValuePair", "operations": ["DEL SimpleName: responseContainer", "DEL StringLiteral: \"Set\"", "DEL MemberValuePair"]}, {"root": "DEL ParameterizedType: Set<String>", "operations": ["DEL SimpleName: String", "DEL SimpleName: Set", "DEL ParameterizedType: Set<String>", "DEL SimpleType: String", "DEL SimpleType: Set"]}, {"root": "DEL SimpleName: removeAllConfigsForCommand", "operations": ["DEL SimpleName: removeAllConfigsForCommand"]}, {"root": "DEL Block", "operations": ["DEL ReturnStatement", "DEL Block", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleName: tags", "DEL SimpleName: commandConfigService", "DEL SimpleName: addTagsForCommand", "DEL ThisExpression", "DEL SimpleName: id"]}, {"root": "DEL MemberValuePair", "operations": ["DEL TypeLiteral", "DEL SimpleName: response", "DEL MemberValuePair", "DEL SimpleName: String", "DEL SimpleType: String"]}, {"root": "DEL MemberValuePair", "operations": ["DEL MemberValuePair", "DEL StringLiteral: \"Set\"", "DEL SimpleName: responseContainer"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: commandConfigService", "DEL FieldAccess", "DEL SimpleName: tags", "DEL SimpleName: id", "DEL ReturnStatement", "DEL SimpleName: updateTagsForCommand", "DEL MethodInvocation", "DEL ThisExpression"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return", "DEL TextElement:  Empty set if successful"]}, {"root": "DEL MemberValuePair", "operations": ["DEL MemberValuePair", "DEL TypeLiteral", "DEL SimpleName: String", "DEL SimpleType: String", "DEL SimpleName: response"]}, {"root": "DEL MemberValuePair", "operations": ["DEL SimpleName: responseContainer", "DEL StringLiteral: \"Set\"", "DEL MemberValuePair"]}, {"root": "DEL ParameterizedType: Set<String>", "operations": ["DEL SimpleName: String", "DEL SimpleName: Set", "DEL SimpleType: Set", "DEL ParameterizedType: Set<String>", "DEL SimpleType: String"]}, {"root": "DEL SimpleName: removeAllTagsForCommand", "operations": ["DEL SimpleName: removeAllTagsForCommand"]}, {"root": "DEL Block", "operations": ["DEL ReturnStatement", "DEL Block", "DEL MethodInvocation"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TextElement:  The active set of tags for the command.", "DEL TagElement: @return"]}, {"root": "DEL MemberValuePair", "operations": ["DEL SimpleName: response", "DEL TypeLiteral", "DEL MemberValuePair"]}, {"root": "DEL MemberValuePair", "operations": ["DEL MemberValuePair", "DEL StringLiteral: \"Set\"", "DEL SimpleName: responseContainer"]}, {"root": "DEL ParameterizedType: Set<String>", "operations": ["DEL SimpleType: Set", "DEL SimpleType: String", "DEL SimpleName: Set", "DEL SimpleName: String", "DEL ParameterizedType: Set<String>"]}, {"root": "DEL SimpleName: removeTagForCommand", "operations": ["DEL SimpleName: removeTagForCommand"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: removeTagForCommand", "DEL SimpleName: commandConfigService", "DEL FieldAccess", "DEL ReturnStatement", "DEL SimpleName: id", "DEL SimpleName: tag"]}, {"root": "DEL TypeLiteral", "operations": ["DEL SimpleType: Command", "DEL TypeLiteral", "DEL SimpleName: Command"]}, {"root": "DEL StringLiteral: \"List\"", "operations": ["DEL StringLiteral: \"List\""]}, {"root": "DEL ParameterizedType: List<Command>", "operations": ["DEL ParameterizedType: List<Command>"]}, {"root": "DEL SimpleName: deleteAllCommands", "operations": ["DEL SimpleName: deleteAllCommands"]}, {"root": "DEL StringLiteral: \"called to delete all commands.\"", "operations": ["DEL StringLiteral: \"called to delete all commands.\""]}, {"root": "DEL ReturnStatement", "operations": ["DEL FieldAccess", "DEL SimpleName: commandConfigService", "DEL ThisExpression", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: id", "DEL SimpleName: removeApplicationsForCommand"]}]}}, {"CommandController_diff": {"operations": ["Insert ImportDeclaration(53) into CompilationUnit(2933) at 26", "Move MethodDeclaration(918) into TypeDeclaration: class(2932) at 27", "Update QualifiedName: com.netflix.genie.core.services.CommandConfigService(14) to com.netflix.genie.core.services.CommandService", "Insert QualifiedName: org.springframework.web.bind.annotation.ResponseStatus(52) into ImportDeclaration(53) at 0", "Insert MethodDeclaration(934) into TypeDeclaration: class(2932) at 14", "Insert MethodDeclaration(2621) into TypeDeclaration: class(2932) at 28", "Update SimpleType: CommandConfigService(112) to CommandService", "Move Javadoc(846) into MethodDeclaration(934) at 0", "Move NormalAnnotation(851) into MethodDeclaration(934) at 1", "Insert SingleMemberAnnotation(874) into MethodDeclaration(934) at 2", "Insert NormalAnnotation(882) into MethodDeclaration(934) at 3", "Move NormalAnnotation(896) into MethodDeclaration(934) at 4", "Insert Modifier: public(912) into MethodDeclaration(934) at 5", "Insert PrimitiveType: void(913) into MethodDeclaration(934) at 6", "Insert SimpleName: deleteAllCommands(914) into MethodDeclaration(934) at 7", "Move SimpleType: GenieException(905) into MethodDeclaration(934) at 8", "Insert Block(933) into MethodDeclaration(934) at 9", "Insert SingleMemberAnnotation(954) into MethodDeclaration(1033) at 2", "Insert PrimitiveType: void(993) into MethodDeclaration(1033) at 6", "Insert Block(1170) into MethodDeclaration(1171) at 10", "Insert Block(1420) into MethodDeclaration(1421) at 10", "Insert SingleMemberAnnotation(1442) into MethodDeclaration(1521) at 2", "Insert PrimitiveType: void(1481) into MethodDeclaration(1521) at 6", "Insert SimpleName: removeAllConfigsForCommand(1482) into MethodDeclaration(1521) at 7", "Insert Block(1520) into MethodDeclaration(1521) at 10", "Insert Block(1658) into MethodDeclaration(1659) at 10", "Insert Block(1900) into MethodDeclaration(1901) at 10", "Insert SingleMemberAnnotation(1922) into MethodDeclaration(2003) at 2", "Insert PrimitiveType: void(1963) into MethodDeclaration(2003) at 6", "Insert SimpleName: removeAllTagsForCommand(1964) into MethodDeclaration(2003) at 7", "Insert Block(2002) into MethodDeclaration(2003) at 10", "Insert SingleMemberAnnotation(2027) into MethodDeclaration(2127) at 2", "Insert PrimitiveType: void(2068) into MethodDeclaration(2127) at 6", "Insert SimpleName: removeTagForCommand(2069) into MethodDeclaration(2127) at 7", "Insert Block(2126) into MethodDeclaration(2127) at 11", "Insert Javadoc(2142) into MethodDeclaration(2268) at 0", "Update SimpleName: setApplicationsForCommand(2188) to addApplicationsForCommand", "Update SimpleName: getApplicationForCommand(2320) to getApplicationsForCommand", "Move Javadoc(2122) into MethodDeclaration(2520) at 0", "Insert NormalAnnotation(2405) into MethodDeclaration(2520) at 1", "Insert NormalAnnotation(2453) into MethodDeclaration(2520) at 3", "Move ParameterizedType: Set<Application>(2425) into MethodDeclaration(2520) at 5", "Insert SimpleName: setApplicationsForCommand(2460) into MethodDeclaration(2520) at 6", "Insert SingleVariableDeclaration(2476) into MethodDeclaration(2520) at 7", "Insert SingleVariableDeclaration(2494) into MethodDeclaration(2520) at 8", "Insert SimpleType: GenieException(2496) into MethodDeclaration(2520) at 9", "Insert Javadoc(2530) into MethodDeclaration(2621) at 0", "Move NormalAnnotation(2374) into MethodDeclaration(2621) at 1", "Insert SingleMemberAnnotation(2541) into MethodDeclaration(2621) at 2", "Insert NormalAnnotation(2549) into MethodDeclaration(2621) at 3", "Move NormalAnnotation(2419) into MethodDeclaration(2621) at 4", "Insert Modifier: public(2579) into MethodDeclaration(2621) at 5", "Insert PrimitiveType: void(2580) into MethodDeclaration(2621) at 6", "Insert SimpleName: removeAllApplicationsForCommand(2581) into MethodDeclaration(2621) at 7", "Move SingleVariableDeclaration(2442) into MethodDeclaration(2621) at 8", "Move SimpleType: GenieException(2444) into MethodDeclaration(2621) at 9", "Insert Block(2620) into MethodDeclaration(2621) at 10", "Insert NormalAnnotation(2642) into MethodDeclaration(2740) at 1", "Insert NormalAnnotation(2679) into MethodDeclaration(2740) at 3", "Insert PrimitiveType: void(2681) into MethodDeclaration(2740) at 5", "Insert SingleVariableDeclaration(2698) into MethodDeclaration(2740) at 7", "Insert SingleVariableDeclaration(2714) into MethodDeclaration(2740) at 8", "Insert SimpleType: GenieException(2716) into MethodDeclaration(2740) at 9", "Insert Block(2739) into MethodDeclaration(2740) at 10", "Update TextElement: Code for CommandConfigResource.(64) to Code for the Commands REST API implemented as a Spring REST controller.", "Update SimpleName: CommandConfigService(111) to CommandService", "Update SimpleName: commandConfigService(113) to commandService", "Update SimpleType: CommandConfigService(128) to CommandService", "Update SimpleName: commandConfigService(129) to commandService", "Insert IfStatement(252) into Block(299) at 0", "Insert IfStatement(395) into Block(403) at 0", "Insert IfStatement(670) into Block(735) at 0", "Insert IfStatement(850) into Block(859) at 0", "Insert SimpleName: ResponseStatus(872) into SingleMemberAnnotation(874) at 0", "Insert QualifiedName: HttpStatus.OK(873) into SingleMemberAnnotation(874) at 1", "Insert SimpleName: ApiOperation(875) into NormalAnnotation(882) at 0", "Move MemberValuePair(855) into NormalAnnotation(882) at 1", "Move MemberValuePair(858) into NormalAnnotation(882) at 2", "Insert IfStatement(926) into Block(933) at 0", "Insert ExpressionStatement(932) into Block(933) at 1", "Insert SimpleName: ResponseStatus(952) into SingleMemberAnnotation(954) at 0", "Insert QualifiedName: HttpStatus.OK(953) into SingleMemberAnnotation(954) at 1", "Insert IfStatement(1024) into Block(1032) at 0", "Insert ExpressionStatement(1031) into Block(1032) at 1", "Insert IfStatement(1161) into Block(1170) at 0", "Insert ReturnStatement(1169) into Block(1170) at 1", "Insert IfStatement(1273) into Block(1281) at 0", "Insert IfStatement(1411) into Block(1420) at 0", "Insert ReturnStatement(1419) into Block(1420) at 1", "Insert SimpleName: ResponseStatus(1440) into SingleMemberAnnotation(1442) at 0", "Insert QualifiedName: HttpStatus.OK(1441) into SingleMemberAnnotation(1442) at 1", "Insert IfStatement(1512) into Block(1520) at 0", "Insert ExpressionStatement(1519) into Block(1520) at 1", "Insert IfStatement(1649) into Block(1658) at 0", "Insert ReturnStatement(1657) into Block(1658) at 1", "Insert IfStatement(1761) into Block(1769) at 0", "Insert IfStatement(1891) into Block(1900) at 0", "Insert ReturnStatement(1899) into Block(1900) at 1", "Insert SimpleName: ResponseStatus(1920) into SingleMemberAnnotation(1922) at 0", "Insert QualifiedName: HttpStatus.OK(1921) into SingleMemberAnnotation(1922) at 1", "Insert IfStatement(1994) into Block(2002) at 0", "Insert ExpressionStatement(2001) into Block(2002) at 1", "Insert SimpleName: ResponseStatus(2025) into SingleMemberAnnotation(2027) at 0", "Insert QualifiedName: HttpStatus.OK(2026) into SingleMemberAnnotation(2027) at 1", "Insert IfStatement(2117) into Block(2126) at 0", "Insert ExpressionStatement(2125) into Block(2126) at 1", "Insert TagElement(2129) into Javadoc(2142) at 0", "Insert TagElement: @param(2133) into Javadoc(2142) at 1", "Insert TagElement: @param(2136) into Javadoc(2142) at 2", "Insert TagElement: @return(2138) into Javadoc(2142) at 3", "Insert TagElement: @throws(2141) into Javadoc(2142) at 4", "Insert IfStatement(2370) into Block(2378) at 0", "Insert SimpleName: RequestMapping(2395) into NormalAnnotation(2405) at 0", "Insert MemberValuePair(2398) into NormalAnnotation(2405) at 1", "Insert MemberValuePair(2401) into NormalAnnotation(2405) at 2", "Insert MemberValuePair(2404) into NormalAnnotation(2405) at 3", "Move MemberValuePair(2386) into NormalAnnotation(2424) at 3", "Move MemberValuePair(2389) into NormalAnnotation(2424) at 4", "Insert SimpleName: ApiResponses(2425) into NormalAnnotation(2453) at 0", "Insert MemberValuePair(2452) into NormalAnnotation(2453) at 1", "Insert NormalAnnotation(2468) into SingleVariableDeclaration(2476) at 0", "Insert SingleMemberAnnotation(2471) into SingleVariableDeclaration(2476) at 1", "Insert Modifier: final(2472) into SingleVariableDeclaration(2476) at 2", "Insert SimpleType: String(2474) into SingleVariableDeclaration(2476) at 3", "Insert SimpleName: id(2475) into SingleVariableDeclaration(2476) at 4", "Insert NormalAnnotation(2484) into SingleVariableDeclaration(2494) at 0", "Insert MarkerAnnotation(2486) into SingleVariableDeclaration(2494) at 1", "Insert Modifier: final(2487) into SingleVariableDeclaration(2494) at 2", "Insert ParameterizedType: Set<String>(2492) into SingleVariableDeclaration(2494) at 3", "Insert SimpleName: applicationIds(2493) into SingleVariableDeclaration(2494) at 4", "Insert SimpleName: GenieException(2495) into SimpleType: GenieException(2496) at 0", "Insert IfStatement(2510) into Block(2519) at 0", "Insert TagElement(2522) into Javadoc(2530) at 0", "Insert TagElement: @param(2526) into Javadoc(2530) at 1", "Insert TagElement: @throws(2529) into Javadoc(2530) at 2", "Insert SimpleName: ResponseStatus(2539) into SingleMemberAnnotation(2541) at 0", "Insert QualifiedName: HttpStatus.OK(2540) into SingleMemberAnnotation(2541) at 1", "Insert SimpleName: ApiOperation(2542) into NormalAnnotation(2549) at 0", "Insert MemberValuePair(2545) into NormalAnnotation(2549) at 1", "Move MemberValuePair(2381) into NormalAnnotation(2549) at 2", "Insert IfStatement(2612) into Block(2620) at 0", "Insert ExpressionStatement(2619) into Block(2620) at 1", "Update TagElement: @return(2362) to @param", "Insert SimpleName: RequestMapping(2635) into NormalAnnotation(2642) at 0", "Insert MemberValuePair(2638) into NormalAnnotation(2642) at 1", "Insert MemberValuePair(2641) into NormalAnnotation(2642) at 2", "Insert MemberValuePair(2649) into NormalAnnotation(2650) at 2", "Insert SimpleName: ApiResponses(2651) into NormalAnnotation(2679) at 0", "Insert MemberValuePair(2678) into NormalAnnotation(2679) at 1", "Insert NormalAnnotation(2690) into SingleVariableDeclaration(2698) at 0", "Insert SingleMemberAnnotation(2693) into SingleVariableDeclaration(2698) at 1", "Insert Modifier: final(2694) into SingleVariableDeclaration(2698) at 2", "Insert SimpleType: String(2696) into SingleVariableDeclaration(2698) at 3", "Insert SimpleName: id(2697) into SingleVariableDeclaration(2698) at 4", "Insert NormalAnnotation(2706) into SingleVariableDeclaration(2714) at 0", "Insert SingleMemberAnnotation(2709) into SingleVariableDeclaration(2714) at 1", "Insert Modifier: final(2710) into SingleVariableDeclaration(2714) at 2", "Move SimpleType: String(2012) into SingleVariableDeclaration(2714) at 3", "Insert SimpleName: appId(2713) into SingleVariableDeclaration(2714) at 4", "Insert SimpleName: GenieException(2715) into SimpleType: GenieException(2716) at 0", "Insert IfStatement(2730) into Block(2739) at 0", "Insert ExpressionStatement(2738) into Block(2739) at 1", "Insert IfStatement(2871) into Block(2930) at 0", "Update SimpleName: commandConfigService(118) to commandService", "Update SimpleName: CommandConfigService(127) to CommandService", "Insert MethodInvocation(241) into IfStatement(252) at 0", "Insert Block(251) into IfStatement(252) at 1", "Insert MethodInvocation(386) into IfStatement(395) at 0", "Insert Block(394) into IfStatement(395) at 1", "Insert MethodInvocation(643) into IfStatement(670) at 0", "Insert Block(669) into IfStatement(670) at 1", "Insert MethodInvocation(843) into IfStatement(850) at 0", "Insert Block(849) into IfStatement(850) at 1", "Insert MethodInvocation(919) into IfStatement(926) at 0", "Insert Block(925) into IfStatement(926) at 1", "Insert MethodInvocation(931) into ExpressionStatement(932) at 0", "Update StringLiteral: \"Delete an command\"(940) to \"Delete a command\"", "Update StringLiteral: \"Delete an command with the supplied id.\"(943) to \"Delete a command with the supplied id.\"", "Insert MethodInvocation(1015) into IfStatement(1024) at 0", "Insert Block(1023) into IfStatement(1024) at 1", "Insert MethodInvocation(1030) into ExpressionStatement(1031) at 0", "Insert MethodInvocation(1150) into IfStatement(1161) at 0", "Move Block(1149) into IfStatement(1161) at 1", "Insert MethodInvocation(1168) into ReturnStatement(1169) at 0", "Insert MethodInvocation(1264) into IfStatement(1273) at 0", "Insert Block(1272) into IfStatement(1273) at 1", "Insert MethodInvocation(1400) into IfStatement(1411) at 0", "Move Block(1389) into IfStatement(1411) at 1", "Insert MethodInvocation(1418) into ReturnStatement(1419) at 0", "Insert MethodInvocation(1503) into IfStatement(1512) at 0", "Insert Block(1511) into IfStatement(1512) at 1", "Insert MethodInvocation(1518) into ExpressionStatement(1519) at 0", "Insert MethodInvocation(1638) into IfStatement(1649) at 0", "Move Block(1628) into IfStatement(1649) at 1", "Insert MethodInvocation(1656) into ReturnStatement(1657) at 0", "Insert MethodInvocation(1752) into IfStatement(1761) at 0", "Insert Block(1760) into IfStatement(1761) at 1", "Insert MethodInvocation(1880) into IfStatement(1891) at 0", "Move Block(1868) into IfStatement(1891) at 1", "Insert MethodInvocation(1898) into ReturnStatement(1899) at 0", "Insert MethodInvocation(1985) into IfStatement(1994) at 0", "Insert Block(1993) into IfStatement(1994) at 1", "Insert MethodInvocation(2000) into ExpressionStatement(2001) at 0", "Insert MethodInvocation(2106) into IfStatement(2117) at 0", "Move Block(2106) into IfStatement(2117) at 1", "Insert MethodInvocation(2124) into ExpressionStatement(2125) at 0", "Insert TextElement: Add applications for the given command.(2128) into TagElement(2129) at 0", "Insert SimpleName: id(2130) into TagElement: @param(2133) at 0", "Insert TextElement:              The id of the command to add the applications to. Not(2131) into TagElement: @param(2133) at 1", "Insert TextElement: null/empty/blank.(2132) into TagElement: @param(2133) at 2", "Insert SimpleName: applicationIds(2134) into TagElement: @param(2136) at 0", "Insert TextElement:  The ids of the applications to add. Not null.(2135) into TagElement: @param(2136) at 1", "Insert TextElement:  The active applications for this command.(2137) into TagElement: @return(2138) at 0", "Insert SimpleName: GenieException(2139) into TagElement: @throws(2141) at 0", "Insert TextElement:  For any error(2140) into TagElement: @throws(2141) at 1", "Update StringLiteral: \"Set the applications for a command\"(2136) to \"Add applications for a command\"", "Insert MethodInvocation(2361) into IfStatement(2370) at 0", "Insert Block(2369) into IfStatement(2370) at 1", "Update TextElement: Set the application for the given command.(2108) to Set the applications for the given command.", "Insert SimpleName: value(2396) into MemberValuePair(2398) at 0", "Insert StringLiteral: \"/{id}/applications\"(2397) into MemberValuePair(2398) at 1", "Insert SimpleName: method(2399) into MemberValuePair(2401) at 0", "Insert QualifiedName: RequestMethod.PUT(2400) into MemberValuePair(2401) at 1", "Insert SimpleName: consumes(2402) into MemberValuePair(2404) at 0", "Insert QualifiedName: MediaType.APPLICATION_JSON_VALUE(2403) into MemberValuePair(2404) at 1", "Update SimpleName: response(859) to value", "Insert StringLiteral: \"Set applications for a command\"(2408) into MemberValuePair(2409) at 1", "Update SimpleName: responseContainer(864) to notes", "Insert InfixExpression: +(2414) into MemberValuePair(2415) at 1", "Insert SimpleName: value(2426) into MemberValuePair(2452) at 0", "Insert ArrayInitializer(2451) into MemberValuePair(2452) at 1", "Insert SimpleName: ApiParam(2461) into NormalAnnotation(2468) at 0", "Insert MemberValuePair(2464) into NormalAnnotation(2468) at 1", "Insert MemberValuePair(2467) into NormalAnnotation(2468) at 2", "Insert SimpleName: PathVariable(2469) into SingleMemberAnnotation(2471) at 0", "Insert StringLiteral: \"id\"(2470) into SingleMemberAnnotation(2471) at 1", "Insert SimpleName: String(2473) into SimpleType: String(2474) at 0", "Insert SimpleName: ApiParam(2477) into NormalAnnotation(2484) at 0", "Insert MemberValuePair(2480) into NormalAnnotation(2484) at 1", "Insert MemberValuePair(2483) into NormalAnnotation(2484) at 2", "Insert SimpleName: RequestBody(2485) into MarkerAnnotation(2486) at 0", "Update SimpleType: List(899) to Set", "Move SimpleType: List(899) into ParameterizedType: Set<String>(2492) at 0", "Update SimpleType: Command(901) to String", "Move SimpleType: Command(901) into ParameterizedType: Set<String>(2492) at 1", "Insert MethodInvocation(2499) into IfStatement(2510) at 0", "Insert Block(2509) into IfStatement(2510) at 1", "Insert TextElement: Remove the applications from a given command.(2521) into TagElement(2522) at 0", "Insert SimpleName: id(2523) into TagElement: @param(2526) at 0", "Insert TextElement:  The id of the command to delete the applications from. Not(2524) into TagElement: @param(2526) at 1", "Insert TextElement: null/empty/blank.(2525) into TagElement: @param(2526) at 2", "Insert SimpleName: GenieException(2527) into TagElement: @throws(2529) at 0", "Insert TextElement:  For any error(2528) into TagElement: @throws(2529) at 1", "Insert SimpleName: value(2543) into MemberValuePair(2545) at 0", "Insert StringLiteral: \"Remove applications from a command\"(2544) into MemberValuePair(2545) at 1", "Insert MethodInvocation(2602) into IfStatement(2612) at 0", "Move Block(2460) into IfStatement(2612) at 1", "Insert MethodInvocation(2618) into ExpressionStatement(2619) at 0", "Update TextElement:  The id of the command to delete the application from. Not(2358) to     The id of the command to delete the application from. Not", "Insert SimpleName: appId(2628) into TagElement: @param(2630) at 0", "Update TextElement:  The active set of applications for the command.(2361) to  The id of the application to remove from the command. Not null/empty/blank.", "Insert SimpleName: value(2636) into MemberValuePair(2638) at 0", "Insert StringLiteral: \"/{id}/applications/{appId}\"(2637) into MemberValuePair(2638) at 1", "Insert SimpleName: method(2639) into MemberValuePair(2641) at 0", "Insert QualifiedName: RequestMethod.DELETE(2640) into MemberValuePair(2641) at 1", "Update StringLiteral: \"Remove an applications from a command\"(2377) to \"Remove applications from a command\"", "Insert SimpleName: notes(2647) into MemberValuePair(2649) at 0", "Insert StringLiteral: \"Remove the applications from the command with given id.\"(2648) into MemberValuePair(2649) at 1", "Insert SimpleName: value(2652) into MemberValuePair(2678) at 0", "Insert ArrayInitializer(2677) into MemberValuePair(2678) at 1", "Insert SimpleName: ApiParam(2683) into NormalAnnotation(2690) at 0", "Insert MemberValuePair(2686) into NormalAnnotation(2690) at 1", "Insert MemberValuePair(2689) into NormalAnnotation(2690) at 2", "Insert SimpleName: PathVariable(2691) into SingleMemberAnnotation(2693) at 0", "Insert StringLiteral: \"id\"(2692) into SingleMemberAnnotation(2693) at 1", "Insert SimpleName: String(2695) into SimpleType: String(2696) at 0", "Insert SimpleName: ApiParam(2699) into NormalAnnotation(2706) at 0", "Insert MemberValuePair(2702) into NormalAnnotation(2706) at 1", "Insert MemberValuePair(2705) into NormalAnnotation(2706) at 2", "Insert SimpleName: PathVariable(2707) into SingleMemberAnnotation(2709) at 0", "Insert StringLiteral: \"appId\"(2708) into SingleMemberAnnotation(2709) at 1", "Insert MethodInvocation(2719) into IfStatement(2730) at 0", "Insert Block(2729) into IfStatement(2730) at 1", "Insert MethodInvocation(2737) into ExpressionStatement(2738) at 0", "Insert MethodInvocation(2860) into IfStatement(2871) at 0", "Insert Block(2870) into IfStatement(2871) at 1", "Insert InfixExpression: &&(2888) into IfStatement(2921) at 0", "Update SimpleName: commandConfigService(134) to commandService", "Insert SimpleName: LOG(239) into MethodInvocation(241) at 0", "Insert SimpleName: isDebugEnabled(240) into MethodInvocation(241) at 1", "Move ExpressionStatement(245) into Block(251) at 0", "Insert SimpleName: LOG(384) into MethodInvocation(386) at 0", "Insert SimpleName: isDebugEnabled(385) into MethodInvocation(386) at 1", "Move ExpressionStatement(383) into Block(394) at 0", "Insert SimpleName: LOG(641) into MethodInvocation(643) at 0", "Insert SimpleName: isDebugEnabled(642) into MethodInvocation(643) at 1", "Move ExpressionStatement(633) into Block(669) at 0", "Move ExpressionStatement(653) into Block(669) at 1", "Insert SimpleName: LOG(841) into MethodInvocation(843) at 0", "Insert SimpleName: isDebugEnabled(842) into MethodInvocation(843) at 1", "Move ExpressionStatement(828) into Block(849) at 0", "Insert SimpleName: LOG(917) into MethodInvocation(919) at 0", "Insert SimpleName: isDebugEnabled(918) into MethodInvocation(919) at 1", "Insert ExpressionStatement(924) into Block(925) at 0", "Insert FieldAccess(929) into MethodInvocation(931) at 0", "Insert SimpleName: deleteAllCommands(930) into MethodInvocation(931) at 1", "Insert SimpleName: LOG(1013) into MethodInvocation(1015) at 0", "Insert SimpleName: isDebugEnabled(1014) into MethodInvocation(1015) at 1", "Move ExpressionStatement(1008) into Block(1023) at 0", "Move FieldAccess(1011) into MethodInvocation(1030) at 0", "Move SimpleName: deleteCommand(1012) into MethodInvocation(1030) at 1", "Move SimpleName: id(1013) into MethodInvocation(1030) at 2", "Insert SimpleName: LOG(1148) into MethodInvocation(1150) at 0", "Insert SimpleName: isDebugEnabled(1149) into MethodInvocation(1150) at 1", "Insert FieldAccess(1164) into MethodInvocation(1168) at 0", "Insert SimpleName: addConfigsForCommand(1165) into MethodInvocation(1168) at 1", "Insert SimpleName: id(1166) into MethodInvocation(1168) at 2", "Insert SimpleName: configs(1167) into MethodInvocation(1168) at 3", "Insert SimpleName: LOG(1262) into MethodInvocation(1264) at 0", "Insert SimpleName: isDebugEnabled(1263) into MethodInvocation(1264) at 1", "Move ExpressionStatement(1247) into Block(1272) at 0", "Insert SimpleName: LOG(1398) into MethodInvocation(1400) at 0", "Insert SimpleName: isDebugEnabled(1399) into MethodInvocation(1400) at 1", "Insert FieldAccess(1414) into MethodInvocation(1418) at 0", "Insert SimpleName: updateConfigsForCommand(1415) into MethodInvocation(1418) at 1", "Insert SimpleName: id(1416) into MethodInvocation(1418) at 2", "Insert SimpleName: configs(1417) into MethodInvocation(1418) at 3", "Insert SimpleName: LOG(1501) into MethodInvocation(1503) at 0", "Insert SimpleName: isDebugEnabled(1502) into MethodInvocation(1503) at 1", "Move ExpressionStatement(1487) into Block(1511) at 0", "Move FieldAccess(1490) into MethodInvocation(1518) at 0", "Move SimpleName: removeAllConfigsForCommand(1491) into MethodInvocation(1518) at 1", "Move SimpleName: id(1492) into MethodInvocation(1518) at 2", "Insert SimpleName: LOG(1636) into MethodInvocation(1638) at 0", "Insert SimpleName: isDebugEnabled(1637) into MethodInvocation(1638) at 1", "Insert FieldAccess(1652) into MethodInvocation(1656) at 0", "Insert SimpleName: addTagsForCommand(1653) into MethodInvocation(1656) at 1", "Insert SimpleName: id(1654) into MethodInvocation(1656) at 2", "Insert SimpleName: tags(1655) into MethodInvocation(1656) at 3", "Insert SimpleName: LOG(1750) into MethodInvocation(1752) at 0", "Insert SimpleName: isDebugEnabled(1751) into MethodInvocation(1752) at 1", "Move ExpressionStatement(1726) into Block(1760) at 0", "Insert SimpleName: LOG(1878) into MethodInvocation(1880) at 0", "Insert SimpleName: isDebugEnabled(1879) into MethodInvocation(1880) at 1", "Insert FieldAccess(1894) into MethodInvocation(1898) at 0", "Insert SimpleName: updateTagsForCommand(1895) into MethodInvocation(1898) at 1", "Insert SimpleName: id(1896) into MethodInvocation(1898) at 2", "Insert SimpleName: tags(1897) into MethodInvocation(1898) at 3", "Insert SimpleName: LOG(1983) into MethodInvocation(1985) at 0", "Insert SimpleName: isDebugEnabled(1984) into MethodInvocation(1985) at 1", "Move ExpressionStatement(1968) into Block(1993) at 0", "Move FieldAccess(1971) into MethodInvocation(2000) at 0", "Move SimpleName: removeAllTagsForCommand(1972) into MethodInvocation(2000) at 1", "Move SimpleName: id(1973) into MethodInvocation(2000) at 2", "Insert SimpleName: LOG(2104) into MethodInvocation(2106) at 0", "Insert SimpleName: isDebugEnabled(2105) into MethodInvocation(2106) at 1", "Insert FieldAccess(2120) into MethodInvocation(2124) at 0", "Insert SimpleName: removeTagForCommand(2121) into MethodInvocation(2124) at 1", "Insert SimpleName: id(2122) into MethodInvocation(2124) at 2", "Insert SimpleName: tag(2123) into MethodInvocation(2124) at 3", "Update StringLiteral: \"Set the supplied applications to the command \"(2139) to \"Add the supplied applications to the command \"", "Update SimpleName: setApplicationsForCommand(2242) to addApplicationsForCommand", "Insert SimpleName: LOG(2359) into MethodInvocation(2361) at 0", "Insert SimpleName: isDebugEnabled(2360) into MethodInvocation(2361) at 1", "Move ExpressionStatement(2345) into Block(2369) at 0", "Insert StringLiteral: \"Set the supplied applications to the command \"(2411) into InfixExpression: +(2414) at 0", "Insert StringLiteral: \"with the supplied id. Applications should already \"(2412) into InfixExpression: +(2414) at 1", "Insert StringLiteral: \"have been created. Replaces existing applications.\"(2413) into InfixExpression: +(2414) at 2", "Insert NormalAnnotation(2434) into ArrayInitializer(2451) at 0", "Insert NormalAnnotation(2442) into ArrayInitializer(2451) at 1", "Insert NormalAnnotation(2450) into ArrayInitializer(2451) at 2", "Insert SimpleName: value(2462) into MemberValuePair(2464) at 0", "Insert StringLiteral: \"Id of the command to set application for.\"(2463) into MemberValuePair(2464) at 1", "Insert SimpleName: required(2465) into MemberValuePair(2467) at 0", "Insert BooleanLiteral: true(2466) into MemberValuePair(2467) at 1", "Insert SimpleName: value(2478) into MemberValuePair(2480) at 0", "Insert StringLiteral: \"The ids of the applications to set.\"(2479) into MemberValuePair(2480) at 1", "Insert SimpleName: required(2481) into MemberValuePair(2483) at 0", "Insert BooleanLiteral: true(2482) into MemberValuePair(2483) at 1", "Update SimpleName: List(898) to Set", "Update SimpleName: Command(900) to String", "Insert SimpleName: LOG(2497) into MethodInvocation(2499) at 0", "Insert SimpleName: isDebugEnabled(2498) into MethodInvocation(2499) at 1", "Move ExpressionStatement(910) into Block(2509) at 0", "Update SimpleName: deleteAllCommands(914) to setApplicationsForCommand", "Insert SimpleName: id(2515) into MethodInvocation(2517) at 2", "Insert SimpleName: applicationIds(2516) into MethodInvocation(2517) at 3", "Insert SimpleName: LOG(2600) into MethodInvocation(2602) at 0", "Insert SimpleName: isDebugEnabled(2601) into MethodInvocation(2602) at 1", "Insert FieldAccess(2615) into MethodInvocation(2618) at 0", "Insert SimpleName: removeApplicationsForCommand(2616) into MethodInvocation(2618) at 1", "Insert SimpleName: id(2617) into MethodInvocation(2618) at 2", "Insert NormalAnnotation(2660) into ArrayInitializer(2677) at 0", "Insert NormalAnnotation(2668) into ArrayInitializer(2677) at 1", "Insert NormalAnnotation(2676) into ArrayInitializer(2677) at 2", "Insert SimpleName: value(2684) into MemberValuePair(2686) at 0", "Insert StringLiteral: \"Id of the command to delete from.\"(2685) into MemberValuePair(2686) at 1", "Insert SimpleName: required(2687) into MemberValuePair(2689) at 0", "Insert BooleanLiteral: true(2688) into MemberValuePair(2689) at 1", "Insert SimpleName: value(2700) into MemberValuePair(2702) at 0", "Insert StringLiteral: \"Id of the application to remove.\"(2701) into MemberValuePair(2702) at 1", "Insert SimpleName: required(2703) into MemberValuePair(2705) at 0", "Insert BooleanLiteral: true(2704) into MemberValuePair(2705) at 1", "Insert SimpleName: LOG(2717) into MethodInvocation(2719) at 0", "Insert SimpleName: isDebugEnabled(2718) into MethodInvocation(2719) at 1", "Insert ExpressionStatement(2728) into Block(2729) at 0", "Insert FieldAccess(2733) into MethodInvocation(2737) at 0", "Insert SimpleName: removeApplicationForCommand(2734) into MethodInvocation(2737) at 1", "Insert SimpleName: id(2735) into MethodInvocation(2737) at 2", "Insert SimpleName: appId(2736) into MethodInvocation(2737) at 3", "Insert SimpleName: LOG(2858) into MethodInvocation(2860) at 0", "Insert SimpleName: isDebugEnabled(2859) into MethodInvocation(2860) at 1", "Move ExpressionStatement(2587) into Block(2870) at 0", "Insert InfixExpression: !=(2883) into InfixExpression: &&(2888) at 0", "Move PrefixExpression: !(2600) into InfixExpression: &&(2888) at 1", "Update SimpleName: commandConfigService(132) to commandService", "Update SimpleName: commandConfigService(385) to commandService", "Update SimpleName: commandConfigService(705) to commandService", "Update SimpleName: commandConfigService(830) to commandService", "Insert MethodInvocation(923) into ExpressionStatement(924) at 0", "Insert ThisExpression(927) into FieldAccess(929) at 0", "Insert SimpleName: commandService(928) into FieldAccess(929) at 1", "Update SimpleName: commandConfigService(1010) to commandService", "Insert ThisExpression(1162) into FieldAccess(1164) at 0", "Insert SimpleName: commandService(1163) into FieldAccess(1164) at 1", "Update SimpleName: commandConfigService(1249) to commandService", "Insert ThisExpression(1412) into FieldAccess(1414) at 0", "Insert SimpleName: commandService(1413) into FieldAccess(1414) at 1", "Update SimpleName: commandConfigService(1489) to commandService", "Insert ThisExpression(1650) into FieldAccess(1652) at 0", "Insert SimpleName: commandService(1651) into FieldAccess(1652) at 1", "Update SimpleName: commandConfigService(1728) to commandService", "Insert ThisExpression(1892) into FieldAccess(1894) at 0", "Insert SimpleName: commandService(1893) into FieldAccess(1894) at 1", "Update SimpleName: commandConfigService(1970) to commandService", "Insert ThisExpression(2118) into FieldAccess(2120) at 0", "Insert SimpleName: commandService(2119) into FieldAccess(2120) at 1", "Update SimpleName: commandConfigService(2240) to commandService", "Update SimpleName: commandConfigService(2347) to commandService", "Insert SimpleName: ApiResponse(2427) into NormalAnnotation(2434) at 0", "Insert MemberValuePair(2430) into NormalAnnotation(2434) at 1", "Insert MemberValuePair(2433) into NormalAnnotation(2434) at 2", "Insert SimpleName: ApiResponse(2435) into NormalAnnotation(2442) at 0", "Insert MemberValuePair(2438) into NormalAnnotation(2442) at 1", "Insert MemberValuePair(2441) into NormalAnnotation(2442) at 2", "Insert SimpleName: ApiResponse(2443) into NormalAnnotation(2450) at 0", "Insert MemberValuePair(2446) into NormalAnnotation(2450) at 1", "Insert MemberValuePair(2449) into NormalAnnotation(2450) at 2", "Update SimpleName: commandConfigService(912) to commandService", "Insert ThisExpression(2613) into FieldAccess(2615) at 0", "Insert SimpleName: commandService(2614) into FieldAccess(2615) at 1", "Insert SimpleName: ApiResponse(2653) into NormalAnnotation(2660) at 0", "Insert MemberValuePair(2656) into NormalAnnotation(2660) at 1", "Insert MemberValuePair(2659) into NormalAnnotation(2660) at 2", "Insert SimpleName: ApiResponse(2661) into NormalAnnotation(2668) at 0", "Insert MemberValuePair(2664) into NormalAnnotation(2668) at 1", "Insert MemberValuePair(2667) into NormalAnnotation(2668) at 2", "Insert SimpleName: ApiResponse(2669) into NormalAnnotation(2676) at 0", "Insert MemberValuePair(2672) into NormalAnnotation(2676) at 1", "Insert MemberValuePair(2675) into NormalAnnotation(2676) at 2", "Insert MethodInvocation(2727) into ExpressionStatement(2728) at 0", "Insert ThisExpression(2731) into FieldAccess(2733) at 0", "Insert SimpleName: commandService(2732) into FieldAccess(2733) at 1", "Insert SimpleName: statuses(2881) into InfixExpression: !=(2883) at 0", "Insert NullLiteral(2882) into InfixExpression: !=(2883) at 1", "Update SimpleName: commandConfigService(2635) to commandService", "Update SimpleName: info(238) to debug", "Update SimpleName: commandConfigService(251) to commandService", "Update SimpleName: info(378) to debug", "Update SimpleName: info(630) to debug", "Update SimpleName: info(635) to debug", "Update SimpleName: info(825) to debug", "Insert SimpleName: LOG(920) into MethodInvocation(923) at 0", "Insert SimpleName: debug(921) into MethodInvocation(923) at 1", "Insert StringLiteral: \"called to delete all commands.\"(922) into MethodInvocation(923) at 2", "Update SimpleName: info(1003) to debug", "Update SimpleName: info(1133) to debug", "Update SimpleName: info(1242) to debug", "Update SimpleName: info(1373) to debug", "Update SimpleName: info(1482) to debug", "Update SimpleName: info(1612) to debug", "Update SimpleName: info(1721) to debug", "Update SimpleName: info(1852) to debug", "Update SimpleName: info(1963) to debug", "Update SimpleName: info(2090) to debug", "Update SimpleName: info(2340) to debug", "Insert SimpleName: code(2428) into MemberValuePair(2430) at 0", "Insert QualifiedName: HttpURLConnection.HTTP_NOT_FOUND(2429) into MemberValuePair(2430) at 1", "Insert SimpleName: message(2431) into MemberValuePair(2433) at 0", "Insert StringLiteral: \"Command not found\"(2432) into MemberValuePair(2433) at 1", "Insert SimpleName: code(2436) into MemberValuePair(2438) at 0", "Insert QualifiedName: HttpURLConnection.HTTP_PRECON_FAILED(2437) into MemberValuePair(2438) at 1", "Insert SimpleName: message(2439) into MemberValuePair(2441) at 0", "Insert StringLiteral: \"Invalid required parameter supplied\"(2440) into MemberValuePair(2441) at 1", "Insert SimpleName: code(2444) into MemberValuePair(2446) at 0", "Insert QualifiedName: HttpURLConnection.HTTP_INTERNAL_ERROR(2445) into MemberValuePair(2446) at 1", "Insert SimpleName: message(2447) into MemberValuePair(2449) at 0", "Insert StringLiteral: \"Genie Server Error due to Unknown Exception\"(2448) into MemberValuePair(2449) at 1", "Insert InfixExpression: +(2506) into MethodInvocation(2507) at 2", "Update SimpleName: info(2446) to debug", "Insert SimpleName: code(2654) into MemberValuePair(2656) at 0", "Insert QualifiedName: HttpURLConnection.HTTP_NOT_FOUND(2655) into MemberValuePair(2656) at 1", "Insert SimpleName: message(2657) into MemberValuePair(2659) at 0", "Insert StringLiteral: \"Command not found\"(2658) into MemberValuePair(2659) at 1", "Insert SimpleName: code(2662) into MemberValuePair(2664) at 0", "Insert QualifiedName: HttpURLConnection.HTTP_PRECON_FAILED(2663) into MemberValuePair(2664) at 1", "Insert SimpleName: message(2665) into MemberValuePair(2667) at 0", "Insert StringLiteral: \"Invalid required parameter supplied\"(2666) into MemberValuePair(2667) at 1", "Insert SimpleName: code(2670) into MemberValuePair(2672) at 0", "Insert QualifiedName: HttpURLConnection.HTTP_INTERNAL_ERROR(2671) into MemberValuePair(2672) at 1", "Insert SimpleName: message(2673) into MemberValuePair(2675) at 0", "Insert StringLiteral: \"Genie Server Error due to Unknown Exception\"(2674) into MemberValuePair(2675) at 1", "Insert SimpleName: LOG(2720) into MethodInvocation(2727) at 0", "Insert SimpleName: debug(2721) into MethodInvocation(2727) at 1", "Insert InfixExpression: +(2726) into MethodInvocation(2727) at 2", "Update SimpleName: info(2580) to debug", "Insert StringLiteral: \"Called with id \"(2502) into InfixExpression: +(2506) at 0", "Insert SimpleName: id(2503) into InfixExpression: +(2506) at 1", "Insert StringLiteral: \" and application \"(2504) into InfixExpression: +(2506) at 2", "Insert SimpleName: applicationIds(2505) into InfixExpression: +(2506) at 3", "Insert StringLiteral: \"Called with id '\"(2722) into InfixExpression: +(2726) at 0", "Insert SimpleName: id(2723) into InfixExpression: +(2726) at 1", "Insert StringLiteral: \"' and app id \"(2724) into InfixExpression: +(2726) at 2", "Insert SimpleName: appId(2725) into InfixExpression: +(2726) at 3", "Delete TextElement:  All The deleted comamnd(841)", "Delete TagElement: @return(842)", "Delete TextElement:  The deleted configuration(924)", "Delete TagElement: @return(925)", "Delete SimpleName: response(945)", "Delete SimpleName: Command(946)", "Delete SimpleType: Command(947)", "Delete TypeLiteral(948)", "Delete MemberValuePair(949)", "Delete SimpleName: Command(981)", "Delete SimpleType: Command(982)", "Delete MethodInvocation(1014)", "Delete ReturnStatement(1015)", "Delete ThisExpression(1141)", "Delete SimpleName: commandConfigService(1142)", "Delete FieldAccess(1143)", "Delete SimpleName: addConfigsForCommand(1144)", "Delete SimpleName: id(1145)", "Delete SimpleName: configs(1146)", "Delete MethodInvocation(1147)", "Delete ReturnStatement(1148)", "Delete ThisExpression(1381)", "Delete SimpleName: commandConfigService(1382)", "Delete FieldAccess(1383)", "Delete SimpleName: updateConfigsForCommand(1384)", "Delete SimpleName: id(1385)", "Delete SimpleName: configs(1386)", "Delete MethodInvocation(1387)", "Delete ReturnStatement(1388)", "Delete TextElement:  Empty set if successful(1397)", "Delete TagElement: @return(1398)", "Delete SimpleName: response(1418)", "Delete SimpleName: String(1419)", "Delete SimpleType: String(1420)", "Delete TypeLiteral(1421)", "Delete MemberValuePair(1422)", "Delete SimpleName: responseContainer(1423)", "Delete StringLiteral: \"Set\"(1424)", "Delete MemberValuePair(1425)", "Delete SimpleName: Set(1457)", "Delete SimpleType: Set(1458)", "Delete SimpleName: String(1459)", "Delete SimpleType: String(1460)", "Delete ParameterizedType: Set<String>(1461)", "Delete SimpleName: removeAllConfigsForCommand(1462)", "Delete MethodInvocation(1493)", "Delete ReturnStatement(1494)", "Delete Block(1495)", "Delete ThisExpression(1620)", "Delete SimpleName: commandConfigService(1621)", "Delete FieldAccess(1622)", "Delete SimpleName: addTagsForCommand(1623)", "Delete SimpleName: id(1624)", "Delete SimpleName: tags(1625)", "Delete MethodInvocation(1626)", "Delete ReturnStatement(1627)", "Delete SimpleName: response(1770)", "Delete SimpleName: String(1771)", "Delete SimpleType: String(1772)", "Delete TypeLiteral(1773)", "Delete MemberValuePair(1774)", "Delete SimpleName: responseContainer(1775)", "Delete StringLiteral: \"Set\"(1776)", "Delete MemberValuePair(1777)", "Delete ThisExpression(1860)", "Delete SimpleName: commandConfigService(1861)", "Delete FieldAccess(1862)", "Delete SimpleName: updateTagsForCommand(1863)", "Delete SimpleName: id(1864)", "Delete SimpleName: tags(1865)", "Delete MethodInvocation(1866)", "Delete ReturnStatement(1867)", "Delete TextElement:  Empty set if successful(1876)", "Delete TagElement: @return(1877)", "Delete SimpleName: response(1899)", "Delete SimpleName: String(1900)", "Delete SimpleType: String(1901)", "Delete TypeLiteral(1902)", "Delete MemberValuePair(1903)", "Delete SimpleName: responseContainer(1904)", "Delete StringLiteral: \"Set\"(1905)", "Delete MemberValuePair(1906)", "Delete SimpleName: Set(1938)", "Delete SimpleType: Set(1939)", "Delete SimpleName: String(1940)", "Delete SimpleType: String(1941)", "Delete ParameterizedType: Set<String>(1942)", "Delete SimpleName: removeAllTagsForCommand(1943)", "Delete MethodInvocation(1974)", "Delete ReturnStatement(1975)", "Delete Block(1976)", "Delete TextElement:  The active set of tags for the command.(1987)", "Delete TagElement: @return(1988)", "Delete SimpleName: response(2010)", "Delete TypeLiteral(2013)", "Delete MemberValuePair(2014)", "Delete SimpleName: responseContainer(2015)", "Delete StringLiteral: \"Set\"(2016)", "Delete MemberValuePair(2017)", "Delete SimpleName: Set(2049)", "Delete SimpleType: Set(2050)", "Delete SimpleName: String(2051)", "Delete SimpleType: String(2052)", "Delete ParameterizedType: Set<String>(2053)", "Delete SimpleName: removeTagForCommand(2054)", "Delete ThisExpression(2098)", "Delete SimpleName: commandConfigService(2099)", "Delete FieldAccess(2100)", "Delete SimpleName: removeTagForCommand(2101)", "Delete SimpleName: id(2102)", "Delete SimpleName: tag(2103)", "Delete MethodInvocation(2104)", "Delete ReturnStatement(2105)", "Delete SimpleName: Command(860)", "Delete SimpleType: Command(861)", "Delete TypeLiteral(862)", "Delete StringLiteral: \"List\"(865)", "Delete ParameterizedType: List<Command>(902)", "Delete SimpleName: deleteAllCommands(903)", "Delete StringLiteral: \"called to delete all commands.\"(908)", "Delete ThisExpression(2453)", "Delete SimpleName: commandConfigService(2454)", "Delete FieldAccess(2455)", "Delete SimpleName: removeApplicationsForCommand(2456)", "Delete SimpleName: id(2457)", "Delete MethodInvocation(2458)", "Delete ReturnStatement(2459)"]}}, {"JobController_cluster": {"actions": [{"root": "INS Block to MethodDeclaration at 9", "operations": ["INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to MethodDeclaration at 9"]}, {"root": "INS Block to MethodDeclaration at 9", "operations": ["INS Block to MethodDeclaration at 9", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to MethodDeclaration at 9", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS Block to MethodDeclaration at 9", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "INS Block to MethodDeclaration at 9", "operations": ["INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 9", "INS SimpleName: LOG to MethodInvocation at 0", "INS IfStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ReturnStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ReturnStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ReturnStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ReturnStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from info to debug", "operations": ["UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug", "UPD SimpleName: info from info to debug"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"JobController_diff": {"operations": ["Insert Block(552) into MethodDeclaration(553) at 9", "Insert Block(1264) into MethodDeclaration(1265) at 9", "Insert Block(1529) into MethodDeclaration(1530) at 9", "Insert Block(1795) into MethodDeclaration(1796) at 9", "Insert IfStatement(343) into Block(440) at 1", "Insert IfStatement(544) into Block(552) at 0", "Move ReturnStatement(541) into Block(552) at 1", "Insert IfStatement(656) into Block(690) at 0", "Insert IfStatement(1090) into Block(1160) at 0", "Insert IfStatement(1256) into Block(1264) at 0", "Move ReturnStatement(1238) into Block(1264) at 1", "Insert IfStatement(1401) into Block(1410) at 0", "Insert IfStatement(1521) into Block(1529) at 0", "Move ReturnStatement(1493) into Block(1529) at 1", "Insert IfStatement(1667) into Block(1676) at 0", "Insert IfStatement(1787) into Block(1795) at 0", "Move ReturnStatement(1749) into Block(1795) at 1", "Insert IfStatement(1927) into Block(1936) at 0", "Insert MethodInvocation(334) into IfStatement(343) at 0", "Insert Block(342) into IfStatement(343) at 1", "Insert MethodInvocation(535) into IfStatement(544) at 0", "Insert Block(543) into IfStatement(544) at 1", "Insert MethodInvocation(647) into IfStatement(656) at 0", "Insert Block(655) into IfStatement(656) at 1", "Insert MethodInvocation(1051) into IfStatement(1090) at 0", "Insert Block(1089) into IfStatement(1090) at 1", "Insert MethodInvocation(1247) into IfStatement(1256) at 0", "Insert Block(1255) into IfStatement(1256) at 1", "Insert MethodInvocation(1390) into IfStatement(1401) at 0", "Insert Block(1400) into IfStatement(1401) at 1", "Insert MethodInvocation(1512) into IfStatement(1521) at 0", "Insert Block(1520) into IfStatement(1521) at 1", "Insert MethodInvocation(1656) into IfStatement(1667) at 0", "Insert Block(1666) into IfStatement(1667) at 1", "Insert MethodInvocation(1778) into IfStatement(1787) at 0", "Insert Block(1786) into IfStatement(1787) at 1", "Insert MethodInvocation(1916) into IfStatement(1927) at 0", "Insert Block(1926) into IfStatement(1927) at 1", "Insert SimpleName: LOG(332) into MethodInvocation(334) at 0", "Insert SimpleName: isDebugEnabled(333) into MethodInvocation(334) at 1", "Move ExpressionStatement(338) into Block(342) at 0", "Insert SimpleName: LOG(533) into MethodInvocation(535) at 0", "Insert SimpleName: isDebugEnabled(534) into MethodInvocation(535) at 1", "Move ExpressionStatement(534) into Block(543) at 0", "Insert SimpleName: LOG(645) into MethodInvocation(647) at 0", "Insert SimpleName: isDebugEnabled(646) into MethodInvocation(647) at 1", "Move ExpressionStatement(641) into Block(655) at 0", "Insert SimpleName: LOG(1049) into MethodInvocation(1051) at 0", "Insert SimpleName: isDebugEnabled(1050) into MethodInvocation(1051) at 1", "Move ExpressionStatement(1040) into Block(1089) at 0", "Move ExpressionStatement(1070) into Block(1089) at 1", "Insert SimpleName: LOG(1245) into MethodInvocation(1247) at 0", "Insert SimpleName: isDebugEnabled(1246) into MethodInvocation(1247) at 1", "Move ExpressionStatement(1231) into Block(1255) at 0", "Insert SimpleName: LOG(1388) into MethodInvocation(1390) at 0", "Insert SimpleName: isDebugEnabled(1389) into MethodInvocation(1390) at 1", "Move ExpressionStatement(1371) into Block(1400) at 0", "Insert SimpleName: LOG(1510) into MethodInvocation(1512) at 0", "Insert SimpleName: isDebugEnabled(1511) into MethodInvocation(1512) at 1", "Move ExpressionStatement(1486) into Block(1520) at 0", "Insert SimpleName: LOG(1654) into MethodInvocation(1656) at 0", "Insert SimpleName: isDebugEnabled(1655) into MethodInvocation(1656) at 1", "Move ExpressionStatement(1627) into Block(1666) at 0", "Insert SimpleName: LOG(1776) into MethodInvocation(1778) at 0", "Insert SimpleName: isDebugEnabled(1777) into MethodInvocation(1778) at 1", "Move ExpressionStatement(1742) into Block(1786) at 0", "Insert SimpleName: LOG(1914) into MethodInvocation(1916) at 0", "Insert SimpleName: isDebugEnabled(1915) into MethodInvocation(1916) at 1", "Move ExpressionStatement(1877) into Block(1926) at 0", "Update SimpleName: info(333) to debug", "Update SimpleName: info(529) to debug", "Update SimpleName: info(636) to debug", "Update SimpleName: info(1035) to debug", "Update SimpleName: info(1042) to debug", "Update SimpleName: info(1226) to debug", "Update SimpleName: info(1364) to debug", "Update SimpleName: info(1481) to debug", "Update SimpleName: info(1620) to debug", "Update SimpleName: info(1737) to debug", "Update SimpleName: info(1870) to debug", "Delete Block(542)", "Delete Block(1239)", "Delete Block(1494)", "Delete Block(1750)"]}}, {"JobManagerImpl_cluster": {"actions": [{"root": "UPDATE from com.netflix.genie.core.services.CommandConfigService to com.netflix.genie.core.services.CommandService", "operations": ["UPD QualifiedName: com.netflix.genie.core.services.CommandConfigService from com.netflix.genie.core.services.CommandConfigService to com.netflix.genie.core.services.CommandService"]}, {"root": "UPDATE from CommandConfigService to CommandService", "operations": ["UPD SimpleType: CommandConfigService from CommandConfigService to CommandService", "UPD SimpleName: CommandConfigService from CommandConfigService to CommandService", "UPD SimpleType: CommandConfigService from CommandConfigService to CommandService", "UPD SimpleName: CommandConfigService from CommandConfigService to CommandService"]}]}}, {"JobManagerImpl_diff": {"operations": ["Update QualifiedName: com.netflix.genie.core.services.CommandConfigService(22) to com.netflix.genie.core.services.CommandService", "Update SimpleType: CommandConfigService(164) to CommandService", "Update SimpleName: CommandConfigService(163) to CommandService", "Update SimpleType: CommandConfigService(274) to CommandService", "Update SimpleName: CommandConfigService(273) to CommandService"]}}, {"PrestoJobManagerImpl_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 4"]}, {"root": "UPDATE from com.netflix.genie.core.services.CommandConfigService to com.netflix.genie.core.services.CommandService", "operations": ["UPD QualifiedName: com.netflix.genie.core.services.CommandConfigService from com.netflix.genie.core.services.CommandConfigService to com.netflix.genie.core.services.CommandService"]}, {"root": "UPDATE from CommandConfigService to CommandService", "operations": ["UPD SimpleType: CommandConfigService from CommandConfigService to CommandService", "UPD SimpleName: CommandConfigService from CommandConfigService to CommandService"]}]}}, {"PrestoJobManagerImpl_diff": {"operations": ["Move ImportDeclaration(13) into CompilationUnit(441) at 4", "Update QualifiedName: com.netflix.genie.core.services.CommandConfigService(12) to com.netflix.genie.core.services.CommandService", "Update SimpleType: CommandConfigService(183) to CommandService", "Update SimpleName: CommandConfigService(182) to CommandService"]}}, {"YarnJobManagerImpl_cluster": {"actions": [{"root": "UPDATE from com.netflix.genie.core.services.CommandConfigService to com.netflix.genie.core.services.CommandService", "operations": ["UPD QualifiedName: com.netflix.genie.core.services.CommandConfigService from com.netflix.genie.core.services.CommandConfigService to com.netflix.genie.core.services.CommandService"]}, {"root": "UPDATE from CommandConfigService to CommandService", "operations": ["UPD SimpleName: CommandConfigService from CommandConfigService to CommandService", "UPD SimpleType: CommandConfigService from CommandConfigService to CommandService"]}]}}, {"YarnJobManagerImpl_diff": {"operations": ["Update QualifiedName: com.netflix.genie.core.services.CommandConfigService(10) to com.netflix.genie.core.services.CommandService", "Update SimpleType: CommandConfigService(217) to CommandService", "Update SimpleName: CommandConfigService(216) to CommandService"]}}], "commit_stats": [{"total_files": 37, "deleted_files": 26, "testing": "True", "maintenance": "True", "build": "False"}]}