{"application": "apache-opennlp", "csha": "51bb03eb75526955c59a3dfadbce4e63690c4141", "files": [{"DetokenizationDictionary_cluster": {"actions": [{"root": "INS TextElement:  an array of tokens that should be detokenized according to an operation to TagElement: @param at 1", "operations": ["INS TextElement:  an array of tokens that should be detokenized according to an operation to TagElement: @param at 1"]}, {"root": "INS TextElement:  an array of operations which specifies which operation to TagElement: @param at 1", "operations": ["INS TextElement:  an array of operations which specifies which operation to TagElement: @param at 1"]}, {"root": "INS TextElement: should be used for the provided tokens to TagElement: @param at 2", "operations": ["INS TextElement: should be used for the provided tokens to TagElement: @param at 2"]}]}}, {"DetokenizationDictionary_diff": {"operations": ["Insert TextElement:  an array of tokens that should be detokenized according to an operation(130) into TagElement: @param(131) at 1", "Insert TextElement:  an array of operations which specifies which operation(133) into TagElement: @param(135) at 1", "Insert TextElement: should be used for the provided tokens(134) into TagElement: @param(135) at 2"]}}, {"Detokenizer_cluster": {"actions": [{"root": "INS TextElement:  the token which should be concatenated to TagElement: @param at 1", "operations": ["INS TextElement:  the token which should be concatenated to TagElement: @param at 1"]}, {"root": "INS TextElement:  the concatenated tokens to TagElement: @return at 0", "operations": ["INS TextElement:  the concatenated tokens to TagElement: @return at 0"]}]}}, {"Detokenizer_diff": {"operations": ["Insert TextElement:  the token which should be concatenated(61) into TagElement: @param(62) at 1", "Insert TextElement:  the concatenated tokens(66) into TagElement: @return(67) at 0"]}}, {"SimpleTokenizer_cluster": {"actions": [{"root": "INS TagElement: @deprecated to Javadoc at 2", "operations": ["INS TagElement: @deprecated to Javadoc at 2", "INS TextElement:  this method will be removed, use the new command line interface instead! to TagElement: @deprecated at 0"]}, {"root": "INS TextElement:  the command line arguments to TagElement: @param at 1", "operations": ["INS TextElement:  the command line arguments to TagElement: @param at 1"]}, {"root": "INS TextElement:  if reading or writing from stdin or stdout fails in anyway to TagElement: @throws at 1", "operations": ["INS TextElement:  if reading or writing from stdin or stdout fails in anyway to TagElement: @throws at 1"]}]}}, {"SimpleTokenizer_diff": {"operations": ["Insert TagElement: @deprecated(239) into Javadoc(240) at 2", "Insert TextElement:  the command line arguments(233) into TagElement: @param(234) at 1", "Insert TextElement:  if reading or writing from stdin or stdout fails in anyway(236) into TagElement: @throws(237) at 1", "Insert TextElement:  this method will be removed, use the new command line interface instead!(238) into TagElement: @deprecated(239) at 0"]}}, {"TokenizerFactory_cluster": {"actions": [{"root": "INS TagElement: @param to Javadoc at 1", "operations": ["INS SimpleName: TokenizerFactory to TagElement: @link at 0", "INS TagElement: @link to TagElement: @param at 2", "INS TextElement:  the name of the class implementing the  to TagElement: @param at 1", "INS SimpleName: subclassName to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 1"]}, {"root": "INS TagElement: @param to Javadoc at 2", "operations": ["INS TextElement:  the language code the tokenizer should use to TagElement: @param at 1", "INS SimpleName: languageCode to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 2"]}, {"root": "INS TagElement: @param to Javadoc at 3", "operations": ["INS TagElement: @param to Javadoc at 3", "INS TextElement:  an optional dictionary containing abbreviations, or null if not present to TagElement: @param at 1", "INS SimpleName: abbreviationDictionary to TagElement: @param at 0"]}, {"root": "INS TagElement: @param to Javadoc at 4", "operations": ["INS TagElement: @param to Javadoc at 4", "INS SimpleName: useAlphaNumericOptimization to TagElement: @param at 0", "INS TextElement:  indicate if the alpha numeric optimization should be enabled or disabled to TagElement: @param at 1"]}, {"root": "INS TagElement: @param to Javadoc at 5", "operations": ["INS SimpleName: alphaNumericPattern to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 5", "INS TextElement:  the pattern the alpha numeric optimization should use to TagElement: @param at 1"]}, {"root": "INS TagElement: @return to Javadoc at 6", "operations": ["INS TextElement:  the instance of the Tokenizer Factory to TagElement: @return at 0", "INS TagElement: @return to Javadoc at 6"]}, {"root": "INS TagElement: @throws to Javadoc at 7", "operations": ["INS TagElement: @throws to Javadoc at 7", "INS SimpleName: InvalidFormatException to TagElement: @throws at 0", "INS TextElement:  if once of the input parameters doesn't comply if the expected format to TagElement: @throws at 1"]}, {"root": "INS TagElement: @return to Javadoc at 1", "operations": ["INS TextElement:  true if the alpha numeric optimization is enabled, otherwise false to TagElement: @return at 0", "INS TagElement: @return to Javadoc at 1"]}, {"root": "INS TagElement to Javadoc at 0", "operations": ["INS TextElement: Retrieves the language code. to TagElement at 0", "INS TagElement to Javadoc at 0"]}, {"root": "UPDATE from  to @return", "operations": ["UPD TagElement from  to @return"]}, {"root": "INS TagElement: @return to Javadoc at 1", "operations": ["INS TextElement:  a new instance of the context generator to TagElement: @return at 0", "INS TagElement: @return to Javadoc at 1"]}, {"root": "UPDATE from Gets the language code to  the language code", "operations": ["UPD TextElement: Gets the language code from Gets the language code to  the language code"]}]}}, {"TokenizerFactory_diff": {"operations": ["Insert TagElement: @param(349) into Javadoc(367) at 1", "Insert TagElement: @param(352) into Javadoc(367) at 2", "Insert TagElement: @param(355) into Javadoc(367) at 3", "Insert TagElement: @param(358) into Javadoc(367) at 4", "Insert TagElement: @param(361) into Javadoc(367) at 5", "Insert TagElement: @return(363) into Javadoc(367) at 6", "Insert TagElement: @throws(366) into Javadoc(367) at 7", "Insert TagElement: @return(542) into Javadoc(543) at 1", "Insert TagElement(612) into Javadoc(615) at 0", "Update TagElement(588) to @return", "Insert TagElement: @return(650) into Javadoc(651) at 1", "Insert SimpleName: subclassName(345) into TagElement: @param(349) at 0", "Insert TextElement:  the name of the class implementing the (346) into TagElement: @param(349) at 1", "Insert TagElement: @link(348) into TagElement: @param(349) at 2", "Insert SimpleName: languageCode(350) into TagElement: @param(352) at 0", "Insert TextElement:  the language code the tokenizer should use(351) into TagElement: @param(352) at 1", "Insert SimpleName: abbreviationDictionary(353) into TagElement: @param(355) at 0", "Insert TextElement:  an optional dictionary containing abbreviations, or null if not present(354) into TagElement: @param(355) at 1", "Insert SimpleName: useAlphaNumericOptimization(356) into TagElement: @param(358) at 0", "Insert TextElement:  indicate if the alpha numeric optimization should be enabled or disabled(357) into TagElement: @param(358) at 1", "Insert SimpleName: alphaNumericPattern(359) into TagElement: @param(361) at 0", "Insert TextElement:  the pattern the alpha numeric optimization should use(360) into TagElement: @param(361) at 1", "Insert TextElement:  the instance of the Tokenizer Factory(362) into TagElement: @return(363) at 0", "Insert SimpleName: InvalidFormatException(364) into TagElement: @throws(366) at 0", "Insert TextElement:  if once of the input parameters doesn't comply if the expected format(365) into TagElement: @throws(366) at 1", "Insert TextElement:  true if the alpha numeric optimization is enabled, otherwise false(541) into TagElement: @return(542) at 0", "Insert TextElement: Retrieves the language code.(611) into TagElement(612) at 0", "Update TextElement: Gets the language code(587) to  the language code", "Insert TextElement:  a new instance of the context generator(649) into TagElement: @return(650) at 0", "Insert SimpleName: TokenizerFactory(347) into TagElement: @link(348) at 0"]}}, {"LineSearch_cluster": {"actions": [{"root": "UPDATE from Backtracking line search (see Nocedal & Wright 2006, Numerical Optimization, p. 37) to Backtracking line search (see Nocedal &amp; Wright 2006, Numerical Optimization, p. 37)", "operations": ["UPD TextElement: Backtracking line search (see Nocedal & Wright 2006, Numerical Optimization, p. 37) from Backtracking line search (see Nocedal & Wright 2006, Numerical Optimization, p. 37) to Backtracking line search (see Nocedal &amp; Wright 2006, Numerical Optimization, p. 37)"]}]}}, {"LineSearch_diff": {"operations": ["Update TextElement: Backtracking line search (see Nocedal & Wright 2006, Numerical Optimization, p. 37)(23) to Backtracking line search (see Nocedal &amp; Wright 2006, Numerical Optimization, p. 37)"]}}], "commit_stats": [{"total_files": 5, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}