{"application": "apache-ranger", "csha": "e8c4658a39407685c57966ab1566e8bac5411b5f", "files": [{"RangerPolicyService_cluster": {"actions": [{"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS IfStatement to IfStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS IfStatement to IfStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.ranger.plugin.model.RangerPolicy.RangerDataMaskPolicyItem"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.ranger.plugin.model.RangerPolicy.RangerRowFilterPolicyItem", "DEL ImportDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL StringLiteral: \"dataMaskPolicyItems\"", "DEL VariableDeclarationFragment", "DEL Modifier: static", "DEL Modifier: final", "DEL SimpleName: String", "DEL SimpleType: String", "DEL FieldDeclaration", "DEL SimpleName: DATAMASK_POLICY_ITEM_CLASS_FIELD_NAME", "DEL Modifier: public"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: static", "DEL SimpleName: ROWFILTER_POLICY_ITEM_CLASS_FIELD_NAME", "DEL StringLiteral: \"rowFilterPolicyItems\"", "DEL Modifier: final", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL Modifier: public", "DEL FieldDeclaration"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleType: VTrxLogAttr", "DEL ExpressionStatement", "DEL StringLiteral: \"dataMaskPolicyItems\"", "DEL SimpleName: trxLogAttrs", "DEL ClassInstanceCreation", "DEL StringLiteral: \"dataMaskPolicyItems\"", "DEL StringLiteral: \"Masked Policy Items\"", "DEL SimpleName: put", "DEL BooleanLiteral: false", "DEL SimpleName: VTrxLogAttr", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL StringLiteral: \"rowFilterPolicyItems\"", "DEL StringLiteral: \"rowFilterPolicyItems\"", "DEL ExpressionStatement", "DEL SimpleName: VTrxLogAttr", "DEL SimpleType: VTrxLogAttr", "DEL StringLiteral: \"Row level filter Policy Items\"", "DEL ClassInstanceCreation", "DEL SimpleName: trxLogAttrs", "DEL MethodInvocation", "DEL BooleanLiteral: false", "DEL SimpleName: put"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: fieldName", "DEL SimpleName: equalsIgnoreCase", "DEL MethodInvocation", "DEL SimpleName: ROWFILTER_POLICY_ITEM_CLASS_FIELD_NAME"]}, {"root": "DEL Block", "operations": ["DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: field", "DEL SimpleName: value", "DEL ExpressionStatement", "DEL SimpleName: vObj", "DEL SimpleName: processRowFilterPolicyItemForTrxLog", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: get"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL SimpleName: get", "DEL SimpleName: processDataMaskPolicyItemsForTrxLog", "DEL MethodInvocation", "DEL SimpleName: value", "DEL SimpleName: vObj", "DEL Assignment: =", "DEL SimpleName: field", "DEL SimpleName: DATAMASK_POLICY_ITEM_CLASS_FIELD_NAME", "DEL SimpleName: fieldName", "DEL MethodInvocation", "DEL IfStatement", "DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: equalsIgnoreCase"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: equalsIgnoreCase", "DEL SimpleName: ROWFILTER_POLICY_ITEM_CLASS_FIELD_NAME", "DEL SimpleName: fieldName", "DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: getRowFilterPolicyItems", "DEL SimpleName: oldValue", "DEL NullLiteral", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL Block", "DEL SimpleName: oldPolicy", "DEL Block", "DEL IfStatement", "DEL Assignment: =", "DEL SimpleName: oldPolicy", "DEL SimpleName: processRowFilterPolicyItemForTrxLog"]}, {"root": "DEL IfStatement", "operations": ["DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: oldPolicy", "DEL NullLiteral", "DEL SimpleName: fieldName", "DEL IfStatement", "DEL Block", "DEL SimpleName: oldPolicy", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: oldValue", "DEL SimpleName: DATAMASK_POLICY_ITEM_CLASS_FIELD_NAME", "DEL SimpleName: processDataMaskPolicyItemsForTrxLog", "DEL InfixExpression: !=", "DEL IfStatement", "DEL ExpressionStatement", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: getDataMaskPolicyItems", "DEL SimpleName: equalsIgnoreCase", "DEL Assignment: ="]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: equalsIgnoreCase", "DEL SimpleName: fieldName", "DEL SimpleName: ROWFILTER_POLICY_ITEM_CLASS_FIELD_NAME", "DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL NullLiteral", "DEL SimpleName: oldValue", "DEL Block", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: value", "DEL SimpleName: compareTwoRowFilterPolicyItemList", "DEL IfStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL SimpleName: compareTwoDataMaskingPolicyItemList", "DEL Block", "DEL IfStatement", "DEL SimpleName: value", "DEL SimpleName: DATAMASK_POLICY_ITEM_CLASS_FIELD_NAME", "DEL NullLiteral", "DEL MethodInvocation", "DEL SimpleName: equalsIgnoreCase", "DEL IfStatement", "DEL SimpleName: fieldName", "DEL MethodInvocation", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: oldValue", "DEL IfStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleType: List", "DEL StringLiteral: \"\"", "DEL SingleVariableDeclaration", "DEL InfixExpression: ==", "DEL Modifier: private", "DEL SimpleName: value", "DEL SimpleName: ret", "DEL VariableDeclarationFragment", "DEL ReturnStatement", "DEL SimpleName: rangerPolicyItems", "DEL SimpleName: RangerDataMaskPolicyItem", "DEL SimpleName: processDataMaskPolicyItemsForTrxLog", "DEL NullLiteral", "DEL SimpleName: List", "DEL ParameterizedType: List<RangerDataMaskPolicyItem>", "DEL MethodDeclaration", "DEL SimpleName: String", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: value", "DEL SimpleType: Object", "DEL SimpleName: List", "DEL InfixExpression: ==", "DEL ParameterizedType: List<RangerDataMaskPolicyItem>", "DEL InfixExpression: ==", "DEL IfStatement", "DEL SimpleType: RangerDataMaskPolicyItem", "DEL SimpleName: size", "DEL IfStatement", "DEL SingleMemberAnnotation", "DEL SimpleName: value", "DEL ReturnStatement", "DEL SimpleName: rangerPolicyItems", "DEL CastExpression", "DEL SimpleName: jsonUtil", "DEL NullLiteral", "DEL Block", "DEL SimpleName: readListToString", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL NumberLiteral: 0", "DEL SimpleName: String", "DEL InfixExpression: ||", "DEL StringLiteral: \"unchecked\"", "DEL SimpleType: String", "DEL SimpleName: ret", "DEL Block", "DEL SimpleName: RangerDataMaskPolicyItem", "DEL SimpleType: RangerDataMaskPolicyItem", "DEL ReturnStatement", "DEL StringLiteral: \"\"", "DEL NullLiteral", "DEL SimpleName: Object", "DEL StringLiteral: \"\"", "DEL SimpleName: rangerPolicyItems", "DEL VariableDeclarationFragment", "DEL SimpleType: List", "DEL MethodInvocation", "DEL SimpleName: rangerPolicyItems", "DEL SimpleName: SuppressWarnings", "DEL IfStatement", "DEL SimpleName: ret", "DEL Block", "DEL SimpleType: String"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL IfStatement", "DEL SimpleName: size", "DEL SimpleName: ret", "DEL SimpleName: ret", "DEL VariableDeclarationFragment", "DEL InfixExpression: ||", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleType: List", "DEL SimpleName: value", "DEL SimpleName: SuppressWarnings", "DEL SingleVariableDeclaration", "DEL SimpleName: rangerPolicyItems", "DEL ParameterizedType: List<RangerRowFilterPolicyItem>", "DEL ReturnStatement", "DEL SimpleType: RangerRowFilterPolicyItem", "DEL ReturnStatement", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: List", "DEL ReturnStatement", "DEL SimpleName: RangerRowFilterPolicyItem", "DEL IfStatement", "DEL SimpleName: List", "DEL NullLiteral", "DEL MethodDeclaration", "DEL Block", "DEL StringLiteral: \"unchecked\"", "DEL SimpleName: Object", "DEL SimpleName: rangerPolicyItems", "DEL CastExpression", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL SimpleName: String", "DEL SimpleType: Object", "DEL Block", "DEL SingleMemberAnnotation", "DEL VariableDeclarationFragment", "DEL NullLiteral", "DEL SimpleType: RangerRowFilterPolicyItem", "DEL InfixExpression: ==", "DEL SimpleName: rangerPolicyItems", "DEL SimpleName: processRowFilterPolicyItemForTrxLog", "DEL SimpleType: List", "DEL InfixExpression: ==", "DEL Block", "DEL ParameterizedType: List<RangerRowFilterPolicyItem>", "DEL SimpleType: String", "DEL SimpleName: value", "DEL MethodInvocation", "DEL StringLiteral: \"\"", "DEL SimpleName: value", "DEL IfStatement", "DEL SimpleName: RangerRowFilterPolicyItem", "DEL SimpleName: rangerPolicyItems", "DEL StringLiteral: \"\"", "DEL SimpleName: readListToString", "DEL InfixExpression: ==", "DEL NumberLiteral: 0", "DEL StringLiteral: \"\"", "DEL SimpleType: String", "DEL InfixExpression: ==", "DEL NullLiteral", "DEL Modifier: private", "DEL SimpleName: ret", "DEL SimpleName: jsonUtil"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: RangerDataMaskPolicyItem", "DEL SingleVariableDeclaration", "DEL SimpleType: ObjectMapper", "DEL CatchClause", "DEL SimpleName: createRESTException", "DEL StringLiteral: \"Invalid input data: \"", "DEL SimpleName: JsonMappingException", "DEL SimpleName: value", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL InfixExpression: &&", "DEL MethodInvocation", "DEL ParameterizedType: List<RangerDataMaskPolicyItem>", "DEL BooleanLiteral: false", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleType: RangerDataMaskPolicyItem", "DEL SimpleName: value", "DEL PrimitiveType: boolean", "DEL ParameterizedType: List<RangerDataMaskPolicyItem>", "DEL SimpleName: List", "DEL SimpleType: List", "DEL InfixExpression: &&", "DEL SimpleName: List", "DEL SimpleName: RangerDataMaskPolicyItem", "DEL SimpleName: List", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: polItem", "DEL SimpleType: TypeReference", "DEL SimpleName: TypeReference", "DEL PrefixExpression: !", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: restErrorUtil", "DEL SimpleName: oldListSize", "DEL SimpleName: RangerDataMaskPolicyItem", "DEL InfixExpression: !=", "DEL ThrowStatement", "DEL SingleVariableDeclaration", "DEL SimpleType: RangerDataMaskPolicyItem", "DEL SimpleName: oldValue", "DEL ParameterizedType: List<RangerDataMaskPolicyItem>", "DEL InfixExpression: ||", "DEL SimpleName: value", "DEL BooleanLiteral: false", "DEL IfStatement", "DEL CatchClause", "DEL ThrowStatement", "DEL Block", "DEL MethodInvocation", "DEL SimpleType: JsonParseException", "DEL SimpleType: RangerDataMaskPolicyItem", "DEL SimpleName: createRESTException", "DEL ClassInstanceCreation", "DEL Block", "DEL IfStatement", "DEL SimpleName: stringUtil", "DEL AnonymousClassDeclaration", "DEL SimpleName: TypeReference", "DEL MethodDeclaration", "DEL SimpleName: isEmpty", "DEL ThrowStatement", "DEL SimpleName: obj", "DEL MethodInvocation", "DEL SimpleName: oldValue", "DEL SimpleName: getMessage", "DEL Block", "DEL TryStatement", "DEL SimpleName: listSize", "DEL SimpleName: oldObj", "DEL SimpleName: value", "DEL StringLiteral: \"Invalid input data: \"", "DEL ReturnStatement", "DEL SimpleName: oldValue", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: compareTwoDataMaskingPolicyItemList", "DEL SimpleType: TypeReference", "DEL SimpleName: contains", "DEL SimpleType: RangerDataMaskPolicyItem", "DEL QualifiedName: MessageEnums.INVALID_INPUT_DATA", "DEL StringLiteral: \"Invalid input data: \"", "DEL BooleanLiteral: true", "DEL VariableDeclarationStatement", "DEL SimpleName: getMessage", "DEL SimpleName: mapper", "DEL SimpleName: readValue", "DEL ClassInstanceCreation", "DEL IfStatement", "DEL SimpleName: ObjectMapper", "DEL SimpleName: getMessage", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ParameterizedType: List<RangerDataMaskPolicyItem>", "DEL SimpleName: RangerDataMaskPolicyItem", "DEL BooleanLiteral: true", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL ReturnStatement", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL BooleanLiteral: true", "DEL SimpleName: createRESTException", "DEL ReturnStatement", "DEL SimpleName: readValue", "DEL BooleanLiteral: false", "DEL SimpleName: size", "DEL Block", "DEL SimpleType: RangerDataMaskPolicyItem", "DEL SimpleName: oldObj", "DEL SimpleName: value", "DEL SimpleName: e", "DEL SimpleType: List", "DEL SimpleName: oldObj", "DEL MethodInvocation", "DEL StringLiteral: \"\"", "DEL NullLiteral", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL ReturnStatement", "DEL StringLiteral: \"\"", "DEL SimpleName: List", "DEL ParameterizedType: TypeReference<List<RangerDataMaskPolicyItem>>", "DEL SimpleName: mapper", "DEL ParameterizedType: TypeReference<List<RangerDataMaskPolicyItem>>", "DEL SimpleName: RangerDataMaskPolicyItem", "DEL SimpleName: restErrorUtil", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL SimpleName: oldValue", "DEL InfixExpression: ==", "DEL SimpleName: polItem", "DEL VariableDeclarationFragment", "DEL Block", "DEL Block", "DEL EnhancedForStatement", "DEL SimpleName: e", "DEL QualifiedName: MessageEnums.INVALID_INPUT_DATA", "DEL SimpleName: e", "DEL QualifiedName: MessageEnums.INVALID_INPUT_DATA", "DEL SimpleName: oldValue", "DEL SimpleName: String", "DEL SimpleName: stringUtil", "DEL VariableDeclarationStatement", "DEL SimpleName: oldListSize", "DEL InfixExpression: +", "DEL Block", "DEL SimpleName: JsonParseException", "DEL SimpleName: e", "DEL SimpleName: e", "DEL CatchClause", "DEL InfixExpression: ==", "DEL SimpleName: listSize", "DEL SimpleName: size", "DEL InfixExpression: +", "DEL InfixExpression: +", "DEL SimpleType: ObjectMapper", "DEL NullLiteral", "DEL SimpleName: restErrorUtil", "DEL SimpleType: JsonMappingException", "DEL ClassInstanceCreation", "DEL Block", "DEL SimpleType: String", "DEL Modifier: private", "DEL PrimitiveType: int", "DEL SimpleName: obj", "DEL IfStatement", "DEL AnonymousClassDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: mapper", "DEL SimpleName: isEmpty", "DEL SimpleType: String", "DEL Block", "DEL SimpleName: obj", "DEL IfStatement", "DEL SimpleType: List", "DEL VariableDeclarationFragment", "DEL SimpleName: ObjectMapper", "DEL VariableDeclarationFragment", "DEL ReturnStatement", "DEL SimpleType: List", "DEL SimpleName: e", "DEL PrimitiveType: int", "DEL Block"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: RangerRowFilterPolicyItem", "DEL IfStatement", "DEL SimpleName: e", "DEL SimpleType: JsonParseException", "DEL SimpleName: value", "DEL SimpleName: listSize", "DEL SimpleName: RangerRowFilterPolicyItem", "DEL Block", "DEL BooleanLiteral: true", "DEL InfixExpression: &&", "DEL SimpleName: size", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: e", "DEL SimpleType: List", "DEL Block", "DEL SimpleName: oldObj", "DEL SimpleName: restErrorUtil", "DEL SimpleType: List", "DEL ReturnStatement", "DEL SimpleName: TypeReference", "DEL SimpleName: oldValue", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL IfStatement", "DEL SimpleName: listSize", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL SimpleName: isEmpty", "DEL IfStatement", "DEL SimpleName: isEmpty", "DEL ParameterizedType: List<RangerRowFilterPolicyItem>", "DEL MethodDeclaration", "DEL StringLiteral: \"\"", "DEL SimpleName: oldListSize", "DEL SimpleName: value", "DEL SimpleName: readValue", "DEL SimpleType: List", "DEL SimpleName: createRESTException", "DEL StringLiteral: \"Invalid input data: \"", "DEL VariableDeclarationFragment", "DEL PrimitiveType: boolean", "DEL SimpleName: List", "DEL NullLiteral", "DEL InfixExpression: ==", "DEL Block", "DEL SimpleName: e", "DEL StringLiteral: \"\"", "DEL ThrowStatement", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"Invalid input data: \"", "DEL Block", "DEL SimpleName: obj", "DEL AnonymousClassDeclaration", "DEL Block", "DEL SimpleName: readValue", "DEL MethodInvocation", "DEL SimpleName: List", "DEL SimpleName: oldValue", "DEL SimpleName: contains", "DEL SimpleName: value", "DEL PrefixExpression: !", "DEL SimpleName: TypeReference", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleType: List", "DEL SimpleName: obj", "DEL SimpleName: oldListSize", "DEL QualifiedName: MessageEnums.INVALID_INPUT_DATA", "DEL SimpleType: RangerRowFilterPolicyItem", "DEL SimpleName: oldObj", "DEL VariableDeclarationStatement", "DEL InfixExpression: !=", "DEL SingleVariableDeclaration", "DEL ThrowStatement", "DEL QualifiedName: MessageEnums.INVALID_INPUT_DATA", "DEL SimpleName: e", "DEL VariableDeclarationStatement", "DEL SimpleName: createRESTException", "DEL SimpleName: getMessage", "DEL ReturnStatement", "DEL SimpleType: JsonMappingException", "DEL ParameterizedType: TypeReference<List<RangerRowFilterPolicyItem>>", "DEL ParameterizedType: List<RangerRowFilterPolicyItem>", "DEL SimpleName: RangerRowFilterPolicyItem", "DEL InfixExpression: +", "DEL CatchClause", "DEL SimpleName: stringUtil", "DEL ParameterizedType: List<RangerRowFilterPolicyItem>", "DEL Block", "DEL StringLiteral: \"Invalid input data: \"", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL SimpleType: String", "DEL SimpleName: oldObj", "DEL SimpleName: oldValue", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL SimpleName: value", "DEL ReturnStatement", "DEL NullLiteral", "DEL ParameterizedType: List<RangerRowFilterPolicyItem>", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL SimpleName: obj", "DEL MethodInvocation", "DEL SimpleName: IOException", "DEL SimpleName: RangerRowFilterPolicyItem", "DEL InfixExpression: +", "DEL BooleanLiteral: true", "DEL ThrowStatement", "DEL SimpleType: RangerRowFilterPolicyItem", "DEL SimpleName: mapper", "DEL BooleanLiteral: false", "DEL SimpleName: oldValue", "DEL BooleanLiteral: false", "DEL ClassInstanceCreation", "DEL SimpleName: List", "DEL InfixExpression: ==", "DEL TryStatement", "DEL SimpleType: TypeReference", "DEL SimpleType: RangerRowFilterPolicyItem", "DEL Block", "DEL SimpleName: stringUtil", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL AnonymousClassDeclaration", "DEL SimpleName: RangerRowFilterPolicyItem", "DEL SimpleType: ObjectMapper", "DEL SimpleName: e", "DEL SingleVariableDeclaration", "DEL Modifier: private", "DEL Block", "DEL ReturnStatement", "DEL InfixExpression: ||", "DEL ReturnStatement", "DEL SimpleName: restErrorUtil", "DEL SingleVariableDeclaration", "DEL SimpleName: ObjectMapper", "DEL BooleanLiteral: true", "DEL ClassInstanceCreation", "DEL CatchClause", "DEL SimpleName: polItem", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL BooleanLiteral: false", "DEL ReturnStatement", "DEL SimpleName: getMessage", "DEL SimpleName: RangerRowFilterPolicyItem", "DEL SimpleName: restErrorUtil", "DEL SimpleName: mapper", "DEL PrimitiveType: int", "DEL SimpleName: polItem", "DEL CatchClause", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL QualifiedName: MessageEnums.INVALID_INPUT_DATA", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: JsonParseException", "DEL SimpleName: value", "DEL MethodInvocation", "DEL SimpleName: mapper", "DEL Block", "DEL SimpleName: compareTwoRowFilterPolicyItemList", "DEL SimpleType: ObjectMapper", "DEL VariableDeclarationFragment", "DEL InfixExpression: &&", "DEL ParameterizedType: TypeReference<List<RangerRowFilterPolicyItem>>", "DEL VariableDeclarationFragment", "DEL SimpleName: List", "DEL SimpleName: JsonMappingException", "DEL SimpleName: size", "DEL SimpleName: createRESTException", "DEL SimpleName: getMessage", "DEL MethodInvocation", "DEL SimpleType: TypeReference", "DEL Block", "DEL MethodInvocation", "DEL SimpleType: RangerRowFilterPolicyItem", "DEL IfStatement", "DEL SimpleType: IOException", "DEL SimpleName: oldValue", "DEL PrimitiveType: int", "DEL SimpleName: ObjectMapper"]}]}}, {"RangerPolicyService_diff": {"operations": ["Move IfStatement(889) into IfStatement(818) at 2", "Move MethodInvocation(840) into IfStatement(817) at 0", "Move Block(850) into IfStatement(817) at 1", "Move IfStatement(1167) into IfStatement(1059) at 2", "Move MethodInvocation(1098) into IfStatement(1058) at 0", "Move Block(1112) into IfStatement(1058) at 1", "Insert IfStatement(1057) into IfStatement(1058) at 2", "Move IfStatement(1305) into IfStatement(1169) at 2", "Move MethodInvocation(1116) into IfStatement(1057) at 0", "Move Block(1130) into IfStatement(1057) at 1", "Move MethodInvocation(1255) into IfStatement(1168) at 0", "Move Block(1264) into IfStatement(1168) at 1", "Insert IfStatement(1167) into IfStatement(1168) at 2", "Move MethodInvocation(1268) into IfStatement(1167) at 0", "Move Block(1278) into IfStatement(1167) at 1", "Delete QualifiedName: org.apache.ranger.plugin.model.RangerPolicy.RangerDataMaskPolicyItem(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.ranger.plugin.model.RangerPolicy.RangerRowFilterPolicyItem(40)", "Delete ImportDeclaration(41)", "Delete Modifier: public(140)", "Delete Modifier: static(141)", "Delete Modifier: final(142)", "Delete SimpleName: String(143)", "Delete SimpleType: String(144)", "Delete SimpleName: DATAMASK_POLICY_ITEM_CLASS_FIELD_NAME(145)", "Delete StringLiteral: \"dataMaskPolicyItems\"(146)", "Delete VariableDeclarationFragment(147)", "Delete FieldDeclaration(148)", "Delete Modifier: public(149)", "Delete Modifier: static(150)", "Delete Modifier: final(151)", "Delete SimpleName: String(152)", "Delete SimpleType: String(153)", "Delete SimpleName: ROWFILTER_POLICY_ITEM_CLASS_FIELD_NAME(154)", "Delete StringLiteral: \"rowFilterPolicyItems\"(155)", "Delete VariableDeclarationFragment(156)", "Delete FieldDeclaration(157)", "Delete SimpleName: trxLogAttrs(281)", "Delete SimpleName: put(282)", "Delete StringLiteral: \"dataMaskPolicyItems\"(283)", "Delete SimpleName: VTrxLogAttr(284)", "Delete SimpleType: VTrxLogAttr(285)", "Delete StringLiteral: \"dataMaskPolicyItems\"(286)", "Delete StringLiteral: \"Masked Policy Items\"(287)", "Delete BooleanLiteral: false(288)", "Delete ClassInstanceCreation(289)", "Delete MethodInvocation(290)", "Delete ExpressionStatement(291)", "Delete SimpleName: trxLogAttrs(292)", "Delete SimpleName: put(293)", "Delete StringLiteral: \"rowFilterPolicyItems\"(294)", "Delete SimpleName: VTrxLogAttr(295)", "Delete SimpleType: VTrxLogAttr(296)", "Delete StringLiteral: \"rowFilterPolicyItems\"(297)", "Delete StringLiteral: \"Row level filter Policy Items\"(298)", "Delete BooleanLiteral: false(299)", "Delete ClassInstanceCreation(300)", "Delete MethodInvocation(301)", "Delete ExpressionStatement(302)", "Delete SimpleName: fieldName(865)", "Delete SimpleName: equalsIgnoreCase(866)", "Delete SimpleName: ROWFILTER_POLICY_ITEM_CLASS_FIELD_NAME(867)", "Delete MethodInvocation(868)", "Delete SimpleName: value(869)", "Delete SimpleName: processRowFilterPolicyItemForTrxLog(870)", "Delete SimpleName: field(871)", "Delete SimpleName: get(872)", "Delete SimpleName: vObj(873)", "Delete MethodInvocation(874)", "Delete MethodInvocation(875)", "Delete Assignment: =(876)", "Delete ExpressionStatement(877)", "Delete Block(878)", "Delete SimpleName: fieldName(851)", "Delete SimpleName: equalsIgnoreCase(852)", "Delete SimpleName: DATAMASK_POLICY_ITEM_CLASS_FIELD_NAME(853)", "Delete MethodInvocation(854)", "Delete SimpleName: value(855)", "Delete SimpleName: processDataMaskPolicyItemsForTrxLog(856)", "Delete SimpleName: field(857)", "Delete SimpleName: get(858)", "Delete SimpleName: vObj(859)", "Delete MethodInvocation(860)", "Delete MethodInvocation(861)", "Delete Assignment: =(862)", "Delete ExpressionStatement(863)", "Delete Block(864)", "Delete IfStatement(890)", "Delete IfStatement(891)", "Delete SimpleName: fieldName(1149)", "Delete SimpleName: equalsIgnoreCase(1150)", "Delete SimpleName: ROWFILTER_POLICY_ITEM_CLASS_FIELD_NAME(1151)", "Delete MethodInvocation(1152)", "Delete SimpleName: oldPolicy(1153)", "Delete NullLiteral(1154)", "Delete InfixExpression: !=(1155)", "Delete SimpleName: oldValue(1156)", "Delete SimpleName: processRowFilterPolicyItemForTrxLog(1157)", "Delete SimpleName: oldPolicy(1158)", "Delete SimpleName: getRowFilterPolicyItems(1159)", "Delete MethodInvocation(1160)", "Delete MethodInvocation(1161)", "Delete Assignment: =(1162)", "Delete ExpressionStatement(1163)", "Delete Block(1164)", "Delete IfStatement(1165)", "Delete Block(1166)", "Delete SimpleName: fieldName(1131)", "Delete SimpleName: equalsIgnoreCase(1132)", "Delete SimpleName: DATAMASK_POLICY_ITEM_CLASS_FIELD_NAME(1133)", "Delete MethodInvocation(1134)", "Delete SimpleName: oldPolicy(1135)", "Delete NullLiteral(1136)", "Delete InfixExpression: !=(1137)", "Delete SimpleName: oldValue(1138)", "Delete SimpleName: processDataMaskPolicyItemsForTrxLog(1139)", "Delete SimpleName: oldPolicy(1140)", "Delete SimpleName: getDataMaskPolicyItems(1141)", "Delete MethodInvocation(1142)", "Delete MethodInvocation(1143)", "Delete Assignment: =(1144)", "Delete ExpressionStatement(1145)", "Delete Block(1146)", "Delete IfStatement(1147)", "Delete Block(1148)", "Delete IfStatement(1168)", "Delete IfStatement(1169)", "Delete IfStatement(1170)", "Delete SimpleName: fieldName(1292)", "Delete SimpleName: equalsIgnoreCase(1293)", "Delete SimpleName: ROWFILTER_POLICY_ITEM_CLASS_FIELD_NAME(1294)", "Delete MethodInvocation(1295)", "Delete SimpleName: compareTwoRowFilterPolicyItemList(1296)", "Delete SimpleName: value(1297)", "Delete SimpleName: oldValue(1298)", "Delete MethodInvocation(1299)", "Delete NullLiteral(1300)", "Delete ReturnStatement(1301)", "Delete Block(1302)", "Delete IfStatement(1303)", "Delete Block(1304)", "Delete SimpleName: fieldName(1279)", "Delete SimpleName: equalsIgnoreCase(1280)", "Delete SimpleName: DATAMASK_POLICY_ITEM_CLASS_FIELD_NAME(1281)", "Delete MethodInvocation(1282)", "Delete SimpleName: compareTwoDataMaskingPolicyItemList(1283)", "Delete SimpleName: value(1284)", "Delete SimpleName: oldValue(1285)", "Delete MethodInvocation(1286)", "Delete NullLiteral(1287)", "Delete ReturnStatement(1288)", "Delete Block(1289)", "Delete IfStatement(1290)", "Delete Block(1291)", "Delete IfStatement(1306)", "Delete IfStatement(1307)", "Delete IfStatement(1308)", "Delete SimpleName: SuppressWarnings(1962)", "Delete StringLiteral: \"unchecked\"(1963)", "Delete SingleMemberAnnotation(1964)", "Delete Modifier: private(1965)", "Delete SimpleName: String(1966)", "Delete SimpleType: String(1967)", "Delete SimpleName: processDataMaskPolicyItemsForTrxLog(1968)", "Delete SimpleName: Object(1969)", "Delete SimpleType: Object(1970)", "Delete SimpleName: value(1971)", "Delete SingleVariableDeclaration(1972)", "Delete SimpleName: value(1973)", "Delete NullLiteral(1974)", "Delete InfixExpression: ==(1975)", "Delete StringLiteral: \"\"(1976)", "Delete ReturnStatement(1977)", "Delete Block(1978)", "Delete IfStatement(1979)", "Delete SimpleName: List(1980)", "Delete SimpleType: List(1981)", "Delete SimpleName: RangerDataMaskPolicyItem(1982)", "Delete SimpleType: RangerDataMaskPolicyItem(1983)", "Delete ParameterizedType: List<RangerDataMaskPolicyItem>(1984)", "Delete SimpleName: rangerPolicyItems(1985)", "Delete SimpleName: List(1986)", "Delete SimpleType: List(1987)", "Delete SimpleName: RangerDataMaskPolicyItem(1988)", "Delete SimpleType: RangerDataMaskPolicyItem(1989)", "Delete ParameterizedType: List<RangerDataMaskPolicyItem>(1990)", "Delete SimpleName: value(1991)", "Delete CastExpression(1992)", "Delete VariableDeclarationFragment(1993)", "Delete VariableDeclarationStatement(1994)", "Delete SimpleName: rangerPolicyItems(1995)", "Delete NullLiteral(1996)", "Delete InfixExpression: ==(1997)", "Delete SimpleName: rangerPolicyItems(1998)", "Delete SimpleName: size(1999)", "Delete MethodInvocation(2000)", "Delete NumberLiteral: 0(2001)", "Delete InfixExpression: ==(2002)", "Delete InfixExpression: ||(2003)", "Delete StringLiteral: \"\"(2004)", "Delete ReturnStatement(2005)", "Delete Block(2006)", "Delete IfStatement(2007)", "Delete SimpleName: String(2008)", "Delete SimpleType: String(2009)", "Delete SimpleName: ret(2010)", "Delete SimpleName: jsonUtil(2011)", "Delete SimpleName: readListToString(2012)", "Delete SimpleName: rangerPolicyItems(2013)", "Delete MethodInvocation(2014)", "Delete VariableDeclarationFragment(2015)", "Delete VariableDeclarationStatement(2016)", "Delete SimpleName: ret(2017)", "Delete NullLiteral(2018)", "Delete InfixExpression: ==(2019)", "Delete StringLiteral: \"\"(2020)", "Delete ReturnStatement(2021)", "Delete Block(2022)", "Delete IfStatement(2023)", "Delete SimpleName: ret(2024)", "Delete ReturnStatement(2025)", "Delete Block(2026)", "Delete MethodDeclaration(2027)", "Delete SimpleName: SuppressWarnings(2028)", "Delete StringLiteral: \"unchecked\"(2029)", "Delete SingleMemberAnnotation(2030)", "Delete Modifier: private(2031)", "Delete SimpleName: String(2032)", "Delete SimpleType: String(2033)", "Delete SimpleName: processRowFilterPolicyItemForTrxLog(2034)", "Delete SimpleName: Object(2035)", "Delete SimpleType: Object(2036)", "Delete SimpleName: value(2037)", "Delete SingleVariableDeclaration(2038)", "Delete SimpleName: value(2039)", "Delete NullLiteral(2040)", "Delete InfixExpression: ==(2041)", "Delete StringLiteral: \"\"(2042)", "Delete ReturnStatement(2043)", "Delete Block(2044)", "Delete IfStatement(2045)", "Delete SimpleName: List(2046)", "Delete SimpleType: List(2047)", "Delete SimpleName: RangerRowFilterPolicyItem(2048)", "Delete SimpleType: RangerRowFilterPolicyItem(2049)", "Delete ParameterizedType: List<RangerRowFilterPolicyItem>(2050)", "Delete SimpleName: rangerPolicyItems(2051)", "Delete SimpleName: List(2052)", "Delete SimpleType: List(2053)", "Delete SimpleName: RangerRowFilterPolicyItem(2054)", "Delete SimpleType: RangerRowFilterPolicyItem(2055)", "Delete ParameterizedType: List<RangerRowFilterPolicyItem>(2056)", "Delete SimpleName: value(2057)", "Delete CastExpression(2058)", "Delete VariableDeclarationFragment(2059)", "Delete VariableDeclarationStatement(2060)", "Delete SimpleName: rangerPolicyItems(2061)", "Delete NullLiteral(2062)", "Delete InfixExpression: ==(2063)", "Delete SimpleName: rangerPolicyItems(2064)", "Delete SimpleName: size(2065)", "Delete MethodInvocation(2066)", "Delete NumberLiteral: 0(2067)", "Delete InfixExpression: ==(2068)", "Delete InfixExpression: ||(2069)", "Delete StringLiteral: \"\"(2070)", "Delete ReturnStatement(2071)", "Delete Block(2072)", "Delete IfStatement(2073)", "Delete SimpleName: String(2074)", "Delete SimpleType: String(2075)", "Delete SimpleName: ret(2076)", "Delete SimpleName: jsonUtil(2077)", "Delete SimpleName: readListToString(2078)", "Delete SimpleName: rangerPolicyItems(2079)", "Delete MethodInvocation(2080)", "Delete VariableDeclarationFragment(2081)", "Delete VariableDeclarationStatement(2082)", "Delete SimpleName: ret(2083)", "Delete NullLiteral(2084)", "Delete InfixExpression: ==(2085)", "Delete StringLiteral: \"\"(2086)", "Delete ReturnStatement(2087)", "Delete Block(2088)", "Delete IfStatement(2089)", "Delete SimpleName: ret(2090)", "Delete ReturnStatement(2091)", "Delete Block(2092)", "Delete MethodDeclaration(2093)", "Delete Modifier: private(2094)", "Delete PrimitiveType: boolean(2095)", "Delete SimpleName: compareTwoDataMaskingPolicyItemList(2096)", "Delete SimpleName: String(2097)", "Delete SimpleType: String(2098)", "Delete SimpleName: value(2099)", "Delete SingleVariableDeclaration(2100)", "Delete SimpleName: String(2101)", "Delete SimpleType: String(2102)", "Delete SimpleName: oldValue(2103)", "Delete SingleVariableDeclaration(2104)", "Delete SimpleName: value(2105)", "Delete NullLiteral(2106)", "Delete InfixExpression: ==(2107)", "Delete SimpleName: oldValue(2108)", "Delete NullLiteral(2109)", "Delete InfixExpression: ==(2110)", "Delete InfixExpression: &&(2111)", "Delete BooleanLiteral: true(2112)", "Delete ReturnStatement(2113)", "Delete Block(2114)", "Delete IfStatement(2115)", "Delete SimpleName: value(2116)", "Delete StringLiteral: \"\"(2117)", "Delete InfixExpression: ==(2118)", "Delete SimpleName: oldValue(2119)", "Delete StringLiteral: \"\"(2120)", "Delete InfixExpression: ==(2121)", "Delete InfixExpression: &&(2122)", "Delete BooleanLiteral: true(2123)", "Delete ReturnStatement(2124)", "Delete Block(2125)", "Delete IfStatement(2126)", "Delete SimpleName: stringUtil(2127)", "Delete SimpleName: isEmpty(2128)", "Delete SimpleName: value(2129)", "Delete MethodInvocation(2130)", "Delete SimpleName: stringUtil(2131)", "Delete SimpleName: isEmpty(2132)", "Delete SimpleName: oldValue(2133)", "Delete MethodInvocation(2134)", "Delete InfixExpression: ||(2135)", "Delete BooleanLiteral: false(2136)", "Delete ReturnStatement(2137)", "Delete Block(2138)", "Delete IfStatement(2139)", "Delete SimpleName: ObjectMapper(2140)", "Delete SimpleType: ObjectMapper(2141)", "Delete SimpleName: mapper(2142)", "Delete SimpleName: ObjectMapper(2143)", "Delete SimpleType: ObjectMapper(2144)", "Delete ClassInstanceCreation(2145)", "Delete VariableDeclarationFragment(2146)", "Delete VariableDeclarationStatement(2147)", "Delete SimpleName: List(2148)", "Delete SimpleType: List(2149)", "Delete SimpleName: RangerDataMaskPolicyItem(2150)", "Delete SimpleType: RangerDataMaskPolicyItem(2151)", "Delete ParameterizedType: List<RangerDataMaskPolicyItem>(2152)", "Delete SimpleName: obj(2153)", "Delete SimpleName: mapper(2154)", "Delete SimpleName: readValue(2155)", "Delete SimpleName: value(2156)", "Delete SimpleName: TypeReference(2157)", "Delete SimpleType: TypeReference(2158)", "Delete SimpleName: List(2159)", "Delete SimpleType: List(2160)", "Delete SimpleName: RangerDataMaskPolicyItem(2161)", "Delete SimpleType: RangerDataMaskPolicyItem(2162)", "Delete ParameterizedType: List<RangerDataMaskPolicyItem>(2163)", "Delete ParameterizedType: TypeReference<List<RangerDataMaskPolicyItem>>(2164)", "Delete AnonymousClassDeclaration(2165)", "Delete ClassInstanceCreation(2166)", "Delete MethodInvocation(2167)", "Delete VariableDeclarationFragment(2168)", "Delete VariableDeclarationStatement(2169)", "Delete SimpleName: List(2170)", "Delete SimpleType: List(2171)", "Delete SimpleName: RangerDataMaskPolicyItem(2172)", "Delete SimpleType: RangerDataMaskPolicyItem(2173)", "Delete ParameterizedType: List<RangerDataMaskPolicyItem>(2174)", "Delete SimpleName: oldObj(2175)", "Delete SimpleName: mapper(2176)", "Delete SimpleName: readValue(2177)", "Delete SimpleName: oldValue(2178)", "Delete SimpleName: TypeReference(2179)", "Delete SimpleType: TypeReference(2180)", "Delete SimpleName: List(2181)", "Delete SimpleType: List(2182)", "Delete SimpleName: RangerDataMaskPolicyItem(2183)", "Delete SimpleType: RangerDataMaskPolicyItem(2184)", "Delete ParameterizedType: List<RangerDataMaskPolicyItem>(2185)", "Delete ParameterizedType: TypeReference<List<RangerDataMaskPolicyItem>>(2186)", "Delete AnonymousClassDeclaration(2187)", "Delete ClassInstanceCreation(2188)", "Delete MethodInvocation(2189)", "Delete VariableDeclarationFragment(2190)", "Delete VariableDeclarationStatement(2191)", "Delete PrimitiveType: int(2192)", "Delete SimpleName: oldListSize(2193)", "Delete SimpleName: oldObj(2194)", "Delete SimpleName: size(2195)", "Delete MethodInvocation(2196)", "Delete VariableDeclarationFragment(2197)", "Delete VariableDeclarationStatement(2198)", "Delete PrimitiveType: int(2199)", "Delete SimpleName: listSize(2200)", "Delete SimpleName: obj(2201)", "Delete SimpleName: size(2202)", "Delete MethodInvocation(2203)", "Delete VariableDeclarationFragment(2204)", "Delete VariableDeclarationStatement(2205)", "Delete SimpleName: oldListSize(2206)", "Delete SimpleName: listSize(2207)", "Delete InfixExpression: !=(2208)", "Delete BooleanLiteral: false(2209)", "Delete ReturnStatement(2210)", "Delete Block(2211)", "Delete IfStatement(2212)", "Delete SimpleName: RangerDataMaskPolicyItem(2213)", "Delete SimpleType: RangerDataMaskPolicyItem(2214)", "Delete SimpleName: polItem(2215)", "Delete SingleVariableDeclaration(2216)", "Delete SimpleName: obj(2217)", "Delete SimpleName: oldObj(2218)", "Delete SimpleName: contains(2219)", "Delete SimpleName: polItem(2220)", "Delete MethodInvocation(2221)", "Delete PrefixExpression: !(2222)", "Delete BooleanLiteral: false(2223)", "Delete ReturnStatement(2224)", "Delete Block(2225)", "Delete IfStatement(2226)", "Delete Block(2227)", "Delete EnhancedForStatement(2228)", "Delete BooleanLiteral: true(2229)", "Delete ReturnStatement(2230)", "Delete Block(2231)", "Delete SimpleName: JsonParseException(2232)", "Delete SimpleType: JsonParseException(2233)", "Delete SimpleName: e(2234)", "Delete SingleVariableDeclaration(2235)", "Delete SimpleName: restErrorUtil(2236)", "Delete SimpleName: createRESTException(2237)", "Delete StringLiteral: \"Invalid input data: \"(2238)", "Delete SimpleName: e(2239)", "Delete SimpleName: getMessage(2240)", "Delete MethodInvocation(2241)", "Delete InfixExpression: +(2242)", "Delete QualifiedName: MessageEnums.INVALID_INPUT_DATA(2243)", "Delete MethodInvocation(2244)", "Delete ThrowStatement(2245)", "Delete Block(2246)", "Delete CatchClause(2247)", "Delete SimpleName: JsonMappingException(2248)", "Delete SimpleType: JsonMappingException(2249)", "Delete SimpleName: e(2250)", "Delete SingleVariableDeclaration(2251)", "Delete SimpleName: restErrorUtil(2252)", "Delete SimpleName: createRESTException(2253)", "Delete StringLiteral: \"Invalid input data: \"(2254)", "Delete SimpleName: e(2255)", "Delete SimpleName: getMessage(2256)", "Delete MethodInvocation(2257)", "Delete InfixExpression: +(2258)", "Delete QualifiedName: MessageEnums.INVALID_INPUT_DATA(2259)", "Delete MethodInvocation(2260)", "Delete ThrowStatement(2261)", "Delete Block(2262)", "Delete CatchClause(2263)", "Delete SimpleName: IOException(2264)", "Delete SimpleType: IOException(2265)", "Delete SimpleName: e(2266)", "Delete SingleVariableDeclaration(2267)", "Delete SimpleName: restErrorUtil(2268)", "Delete SimpleName: createRESTException(2269)", "Delete StringLiteral: \"Invalid input data: \"(2270)", "Delete SimpleName: e(2271)", "Delete SimpleName: getMessage(2272)", "Delete MethodInvocation(2273)", "Delete InfixExpression: +(2274)", "Delete QualifiedName: MessageEnums.INVALID_INPUT_DATA(2275)", "Delete MethodInvocation(2276)", "Delete ThrowStatement(2277)", "Delete Block(2278)", "Delete CatchClause(2279)", "Delete TryStatement(2280)", "Delete Block(2281)", "Delete MethodDeclaration(2282)", "Delete Modifier: private(2283)", "Delete PrimitiveType: boolean(2284)", "Delete SimpleName: compareTwoRowFilterPolicyItemList(2285)", "Delete SimpleName: String(2286)", "Delete SimpleType: String(2287)", "Delete SimpleName: value(2288)", "Delete SingleVariableDeclaration(2289)", "Delete SimpleName: String(2290)", "Delete SimpleType: String(2291)", "Delete SimpleName: oldValue(2292)", "Delete SingleVariableDeclaration(2293)", "Delete SimpleName: value(2294)", "Delete NullLiteral(2295)", "Delete InfixExpression: ==(2296)", "Delete SimpleName: oldValue(2297)", "Delete NullLiteral(2298)", "Delete InfixExpression: ==(2299)", "Delete InfixExpression: &&(2300)", "Delete BooleanLiteral: true(2301)", "Delete ReturnStatement(2302)", "Delete Block(2303)", "Delete IfStatement(2304)", "Delete SimpleName: value(2305)", "Delete StringLiteral: \"\"(2306)", "Delete InfixExpression: ==(2307)", "Delete SimpleName: oldValue(2308)", "Delete StringLiteral: \"\"(2309)", "Delete InfixExpression: ==(2310)", "Delete InfixExpression: &&(2311)", "Delete BooleanLiteral: true(2312)", "Delete ReturnStatement(2313)", "Delete Block(2314)", "Delete IfStatement(2315)", "Delete SimpleName: stringUtil(2316)", "Delete SimpleName: isEmpty(2317)", "Delete SimpleName: value(2318)", "Delete MethodInvocation(2319)", "Delete SimpleName: stringUtil(2320)", "Delete SimpleName: isEmpty(2321)", "Delete SimpleName: oldValue(2322)", "Delete MethodInvocation(2323)", "Delete InfixExpression: ||(2324)", "Delete BooleanLiteral: false(2325)", "Delete ReturnStatement(2326)", "Delete Block(2327)", "Delete IfStatement(2328)", "Delete SimpleName: ObjectMapper(2329)", "Delete SimpleType: ObjectMapper(2330)", "Delete SimpleName: mapper(2331)", "Delete SimpleName: ObjectMapper(2332)", "Delete SimpleType: ObjectMapper(2333)", "Delete ClassInstanceCreation(2334)", "Delete VariableDeclarationFragment(2335)", "Delete VariableDeclarationStatement(2336)", "Delete SimpleName: List(2337)", "Delete SimpleType: List(2338)", "Delete SimpleName: RangerRowFilterPolicyItem(2339)", "Delete SimpleType: RangerRowFilterPolicyItem(2340)", "Delete ParameterizedType: List<RangerRowFilterPolicyItem>(2341)", "Delete SimpleName: obj(2342)", "Delete SimpleName: mapper(2343)", "Delete SimpleName: readValue(2344)", "Delete SimpleName: value(2345)", "Delete SimpleName: TypeReference(2346)", "Delete SimpleType: TypeReference(2347)", "Delete SimpleName: List(2348)", "Delete SimpleType: List(2349)", "Delete SimpleName: RangerRowFilterPolicyItem(2350)", "Delete SimpleType: RangerRowFilterPolicyItem(2351)", "Delete ParameterizedType: List<RangerRowFilterPolicyItem>(2352)", "Delete ParameterizedType: TypeReference<List<RangerRowFilterPolicyItem>>(2353)", "Delete AnonymousClassDeclaration(2354)", "Delete ClassInstanceCreation(2355)", "Delete MethodInvocation(2356)", "Delete VariableDeclarationFragment(2357)", "Delete VariableDeclarationStatement(2358)", "Delete SimpleName: List(2359)", "Delete SimpleType: List(2360)", "Delete SimpleName: RangerRowFilterPolicyItem(2361)", "Delete SimpleType: RangerRowFilterPolicyItem(2362)", "Delete ParameterizedType: List<RangerRowFilterPolicyItem>(2363)", "Delete SimpleName: oldObj(2364)", "Delete SimpleName: mapper(2365)", "Delete SimpleName: readValue(2366)", "Delete SimpleName: oldValue(2367)", "Delete SimpleName: TypeReference(2368)", "Delete SimpleType: TypeReference(2369)", "Delete SimpleName: List(2370)", "Delete SimpleType: List(2371)", "Delete SimpleName: RangerRowFilterPolicyItem(2372)", "Delete SimpleType: RangerRowFilterPolicyItem(2373)", "Delete ParameterizedType: List<RangerRowFilterPolicyItem>(2374)", "Delete ParameterizedType: TypeReference<List<RangerRowFilterPolicyItem>>(2375)", "Delete AnonymousClassDeclaration(2376)", "Delete ClassInstanceCreation(2377)", "Delete MethodInvocation(2378)", "Delete VariableDeclarationFragment(2379)", "Delete VariableDeclarationStatement(2380)", "Delete PrimitiveType: int(2381)", "Delete SimpleName: oldListSize(2382)", "Delete SimpleName: oldObj(2383)", "Delete SimpleName: size(2384)", "Delete MethodInvocation(2385)", "Delete VariableDeclarationFragment(2386)", "Delete VariableDeclarationStatement(2387)", "Delete PrimitiveType: int(2388)", "Delete SimpleName: listSize(2389)", "Delete SimpleName: obj(2390)", "Delete SimpleName: size(2391)", "Delete MethodInvocation(2392)", "Delete VariableDeclarationFragment(2393)", "Delete VariableDeclarationStatement(2394)", "Delete SimpleName: oldListSize(2395)", "Delete SimpleName: listSize(2396)", "Delete InfixExpression: !=(2397)", "Delete BooleanLiteral: false(2398)", "Delete ReturnStatement(2399)", "Delete Block(2400)", "Delete IfStatement(2401)", "Delete SimpleName: RangerRowFilterPolicyItem(2402)", "Delete SimpleType: RangerRowFilterPolicyItem(2403)", "Delete SimpleName: polItem(2404)", "Delete SingleVariableDeclaration(2405)", "Delete SimpleName: obj(2406)", "Delete SimpleName: oldObj(2407)", "Delete SimpleName: contains(2408)", "Delete SimpleName: polItem(2409)", "Delete MethodInvocation(2410)", "Delete PrefixExpression: !(2411)", "Delete BooleanLiteral: false(2412)", "Delete ReturnStatement(2413)", "Delete Block(2414)", "Delete IfStatement(2415)", "Delete Block(2416)", "Delete EnhancedForStatement(2417)", "Delete BooleanLiteral: true(2418)", "Delete ReturnStatement(2419)", "Delete Block(2420)", "Delete SimpleName: JsonParseException(2421)", "Delete SimpleType: JsonParseException(2422)", "Delete SimpleName: e(2423)", "Delete SingleVariableDeclaration(2424)", "Delete SimpleName: restErrorUtil(2425)", "Delete SimpleName: createRESTException(2426)", "Delete StringLiteral: \"Invalid input data: \"(2427)", "Delete SimpleName: e(2428)", "Delete SimpleName: getMessage(2429)", "Delete MethodInvocation(2430)", "Delete InfixExpression: +(2431)", "Delete QualifiedName: MessageEnums.INVALID_INPUT_DATA(2432)", "Delete MethodInvocation(2433)", "Delete ThrowStatement(2434)", "Delete Block(2435)", "Delete CatchClause(2436)", "Delete SimpleName: JsonMappingException(2437)", "Delete SimpleType: JsonMappingException(2438)", "Delete SimpleName: e(2439)", "Delete SingleVariableDeclaration(2440)", "Delete SimpleName: restErrorUtil(2441)", "Delete SimpleName: createRESTException(2442)", "Delete StringLiteral: \"Invalid input data: \"(2443)", "Delete SimpleName: e(2444)", "Delete SimpleName: getMessage(2445)", "Delete MethodInvocation(2446)", "Delete InfixExpression: +(2447)", "Delete QualifiedName: MessageEnums.INVALID_INPUT_DATA(2448)", "Delete MethodInvocation(2449)", "Delete ThrowStatement(2450)", "Delete Block(2451)", "Delete CatchClause(2452)", "Delete SimpleName: IOException(2453)", "Delete SimpleType: IOException(2454)", "Delete SimpleName: e(2455)", "Delete SingleVariableDeclaration(2456)", "Delete SimpleName: restErrorUtil(2457)", "Delete SimpleName: createRESTException(2458)", "Delete StringLiteral: \"Invalid input data: \"(2459)", "Delete SimpleName: e(2460)", "Delete SimpleName: getMessage(2461)", "Delete MethodInvocation(2462)", "Delete InfixExpression: +(2463)", "Delete QualifiedName: MessageEnums.INVALID_INPUT_DATA(2464)", "Delete MethodInvocation(2465)", "Delete ThrowStatement(2466)", "Delete Block(2467)", "Delete CatchClause(2468)", "Delete TryStatement(2469)", "Delete Block(2470)", "Delete MethodDeclaration(2471)"]}}], "commit_stats": [{"total_files": 5, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}