{"application": "apache-calcite", "csha": "41215c2f358a0006c944c48c30f26506ea60e493", "files": [{"ColumnMetaData_cluster": {"actions": [{"root": "UPDATE from private to public", "operations": ["UPD Modifier: private from private to public"]}]}}, {"ColumnMetaData_diff": {"operations": ["Update Modifier: private(630) to public"]}}, {"Schemas_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS ImportDeclaration to CompilationUnit at 16", "INS QualifiedName: com.google.common.base.Preconditions to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 34", "operations": ["INS SimpleName: uniqueTableName to MethodDeclaration at 4", "INS BooleanLiteral: true to MethodInvocation at 3", "INS PostfixExpression: ++ to ForStatement at 2", "INS SimpleName: schema to MethodInvocation at 0", "INS SimpleName: t to Assignment: = at 0", "INS MethodDeclaration to TypeDeclaration: class at 34", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleType: String to MethodDeclaration at 3", "INS SimpleName: getTable to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: base to InfixExpression: + at 0", "INS SimpleName: x to PostfixExpression: ++ at 0", "INS ExpressionStatement to Block at 0", "INS Modifier: static to MethodDeclaration at 2", "INS VariableDeclarationExpression to ForStatement at 0", "INS InfixExpression: + to Assignment: = at 1", "INS SimpleName: Preconditions to MethodInvocation at 0", "INS Block to ForStatement at 3", "INS SimpleName: t to VariableDeclarationFragment at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: schema to SingleVariableDeclaration at 1", "INS SimpleName: base to SingleVariableDeclaration at 1", "INS TextElement: Generates a table name that is unique within the given schema.  to TagElement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: OptiqSchema to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: OptiqSchema to SimpleType: OptiqSchema at 0", "INS SimpleName: checkNotNull to MethodInvocation at 1", "INS SimpleName: t to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: base to MethodInvocation at 2", "INS SimpleName: x to InfixExpression: + at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: x to VariableDeclarationFragment at 0", "INS ForStatement to Block at 1", "INS ReturnStatement to Block at 2", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS InfixExpression: != to ForStatement at 1", "INS SimpleName: t to ReturnStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Block to MethodDeclaration at 7"]}]}}, {"Schemas_diff": {"operations": ["Insert ImportDeclaration(33) into CompilationUnit(1909) at 16", "Insert QualifiedName: com.google.common.base.Preconditions(32) into ImportDeclaration(33) at 0", "Insert MethodDeclaration(1806) into TypeDeclaration: class(1908) at 34", "Insert Javadoc(1758) into MethodDeclaration(1806) at 0", "Insert Modifier: public(1759) into MethodDeclaration(1806) at 1", "Insert Modifier: static(1760) into MethodDeclaration(1806) at 2", "Insert SimpleType: String(1762) into MethodDeclaration(1806) at 3", "Insert SimpleName: uniqueTableName(1763) into MethodDeclaration(1806) at 4", "Insert SingleVariableDeclaration(1767) into MethodDeclaration(1806) at 5", "Insert SingleVariableDeclaration(1771) into MethodDeclaration(1806) at 6", "Insert Block(1805) into MethodDeclaration(1806) at 7", "Insert TagElement(1757) into Javadoc(1758) at 0", "Insert SimpleName: String(1761) into SimpleType: String(1762) at 0", "Insert SimpleType: OptiqSchema(1765) into SingleVariableDeclaration(1767) at 0", "Insert SimpleName: schema(1766) into SingleVariableDeclaration(1767) at 1", "Insert SimpleType: String(1769) into SingleVariableDeclaration(1771) at 0", "Insert SimpleName: base(1770) into SingleVariableDeclaration(1771) at 1", "Insert VariableDeclarationStatement(1780) into Block(1805) at 0", "Insert ForStatement(1802) into Block(1805) at 1", "Insert ReturnStatement(1804) into Block(1805) at 2", "Insert TextElement: Generates a table name that is unique within the given schema. (1756) into TagElement(1757) at 0", "Insert SimpleName: OptiqSchema(1764) into SimpleType: OptiqSchema(1765) at 0", "Insert SimpleName: String(1768) into SimpleType: String(1769) at 0", "Insert SimpleType: String(1773) into VariableDeclarationStatement(1780) at 0", "Insert VariableDeclarationFragment(1779) into VariableDeclarationStatement(1780) at 1", "Insert VariableDeclarationExpression(1785) into ForStatement(1802) at 0", "Insert InfixExpression: !=(1792) into ForStatement(1802) at 1", "Insert PostfixExpression: ++(1794) into ForStatement(1802) at 2", "Insert Block(1801) into ForStatement(1802) at 3", "Insert SimpleName: t(1803) into ReturnStatement(1804) at 0", "Insert SimpleName: String(1772) into SimpleType: String(1773) at 0", "Insert SimpleName: t(1774) into VariableDeclarationFragment(1779) at 0", "Insert MethodInvocation(1778) into VariableDeclarationFragment(1779) at 1", "Insert PrimitiveType: int(1781) into VariableDeclarationExpression(1785) at 0", "Insert VariableDeclarationFragment(1784) into VariableDeclarationExpression(1785) at 1", "Insert MethodInvocation(1790) into InfixExpression: !=(1792) at 0", "Insert NullLiteral(1791) into InfixExpression: !=(1792) at 1", "Insert SimpleName: x(1793) into PostfixExpression: ++(1794) at 0", "Insert ExpressionStatement(1800) into Block(1801) at 0", "Insert SimpleName: Preconditions(1775) into MethodInvocation(1778) at 0", "Insert SimpleName: checkNotNull(1776) into MethodInvocation(1778) at 1", "Insert SimpleName: base(1777) into MethodInvocation(1778) at 2", "Insert SimpleName: x(1782) into VariableDeclarationFragment(1784) at 0", "Insert NumberLiteral: 0(1783) into VariableDeclarationFragment(1784) at 1", "Insert SimpleName: schema(1786) into MethodInvocation(1790) at 0", "Insert SimpleName: getTable(1787) into MethodInvocation(1790) at 1", "Insert SimpleName: t(1788) into MethodInvocation(1790) at 2", "Insert BooleanLiteral: true(1789) into MethodInvocation(1790) at 3", "Insert Assignment: =(1799) into ExpressionStatement(1800) at 0", "Insert SimpleName: t(1795) into Assignment: =(1799) at 0", "Insert InfixExpression: +(1798) into Assignment: =(1799) at 1", "Insert SimpleName: base(1796) into InfixExpression: +(1798) at 0", "Insert SimpleName: x(1797) into InfixExpression: +(1798) at 1"]}}, {"AggregateCall_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 9"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS SimpleName: sqlAgg to MethodInvocation at 1", "INS ReturnStatement to Block at 2", "INS SimpleName: newGroupKeyCount to MethodInvocation at 4", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS SimpleType: RelDataType to VariableDeclarationStatement at 1", "INS Block to MethodDeclaration at 8", "INS NullLiteral to ConditionalExpression at 2", "INS SimpleName: adaptTo to MethodDeclaration at 3", "INS SimpleName: newType to MethodInvocation at 6", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: RelDataType to SimpleType: RelDataType at 0", "INS SimpleName: create to MethodInvocation at 0", "INS SimpleName: type to ConditionalExpression at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: newType to VariableDeclarationFragment at 0", "INS SimpleName: distinct to MethodInvocation at 2", "INS SimpleName: aggArgs to MethodInvocation at 3", "INS SimpleName: input to MethodInvocation at 5", "INS Modifier: public to MethodDeclaration at 1", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TagElement: @code to TagElement at 1", "INS TextElement:  type to TagElement: @code at 0", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: Creates an AggregateCall, inferring its type if  to TagElement at 0", "INS TextElement:  is null.  to TagElement at 2"]}, {"root": "INS Modifier: static to MethodDeclaration at 3", "operations": ["INS Modifier: static to MethodDeclaration at 3"]}, {"root": "INS SimpleType: AggregateCall to MethodDeclaration at 4", "operations": ["INS SimpleName: AggregateCall to SimpleType: AggregateCall at 0", "INS SimpleType: AggregateCall to MethodDeclaration at 4"]}, {"root": "INS SimpleName: create to MethodDeclaration at 5", "operations": ["INS SimpleName: create to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleName: aggFunction to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleType: SqlAggFunction to SingleVariableDeclaration at 0", "INS SimpleName: SqlAggFunction to SimpleType: SqlAggFunction at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 7", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: distinct to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 8", "operations": ["INS ParameterizedType: List<Integer> to SingleVariableDeclaration at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: argList to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS SimpleType: List to ParameterizedType: List<Integer> at 0", "INS SimpleType: Integer to ParameterizedType: List<Integer> at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 9", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: groupCount to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 9"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 10", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 10", "INS SimpleName: input to SingleVariableDeclaration at 1", "INS SimpleName: RelNode to SimpleType: RelNode at 0", "INS SimpleType: RelNode to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 11", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 11", "INS SimpleName: type to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 12", "operations": ["INS SimpleName: name to SingleVariableDeclaration at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to MethodDeclaration at 12"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: AggregateCall to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 7"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: RelDataType to SingleVariableDeclaration at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS InfixExpression: == to IfStatement at 0", "INS SimpleName: type to InfixExpression: == at 0", "INS SimpleName: groupCount to ClassInstanceCreation at 4", "INS SimpleName: types to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleType: AggregateRelBase.AggCallBinding to VariableDeclarationStatement at 1", "INS SimpleName: List to SimpleType: List at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleType: RelDataType to ParameterizedType: List<RelDataType> at 1", "INS ParameterizedType: List<RelDataType> to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS QualifiedName: AggregateRelBase.AggCallBinding to SimpleType: AggregateRelBase.AggCallBinding at 0", "INS SimpleName: argList to MethodInvocation at 3", "INS Modifier: final to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 2", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: types to ClassInstanceCreation at 3", "INS SimpleName: RelDataType to SimpleType: RelDataType at 0", "INS SimpleName: typeFactory to ClassInstanceCreation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: SqlTypeUtil to MethodInvocation at 0", "INS SimpleType: List to ParameterizedType: List<RelDataType> at 0", "INS SimpleName: aggFunction to ClassInstanceCreation at 2", "INS SimpleName: callBinding to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "UPDATE from aggregation to aggFunction", "operations": ["UPD SimpleName: aggregation from aggregation to aggFunction", "UPD SimpleName: sqlAgg from sqlAgg to aggFunction"]}, {"root": "INS SimpleName: distinct to ClassInstanceCreation at 2", "operations": ["INS SimpleName: distinct to ClassInstanceCreation at 2"]}, {"root": "UPDATE from aggArgs to argList", "operations": ["UPD SimpleName: aggArgs from aggArgs to argList"]}, {"root": "UPDATE from newReturnType to type", "operations": ["UPD SimpleName: newReturnType from newReturnType to type", "UPD SimpleName: newReturnType from newReturnType to type"]}, {"root": "INS SimpleName: name to ClassInstanceCreation at 6", "operations": ["INS SimpleName: name to ClassInstanceCreation at 6"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 7"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleType: RelDataTypeFactory to VariableDeclarationStatement at 1", "operations": ["INS SimpleType: RelDataTypeFactory to VariableDeclarationStatement at 1", "INS SimpleName: RelDataTypeFactory to SimpleType: RelDataTypeFactory at 0"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV InfixExpression: == to ConditionalExpression at 0"]}, {"root": "UPDATE from newReturnType to typeFactory", "operations": ["UPD SimpleName: newReturnType from newReturnType to typeFactory"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1", "MOV SimpleType: AggregateRelBase.AggCallBinding to ClassInstanceCreation at 0"]}, {"root": "UPDATE from getType to projectTypes", "operations": ["UPD SimpleName: getType from getType to projectTypes"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getType to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleName: callBinding to MethodInvocation at 2", "operations": ["INS SimpleName: callBinding to MethodInvocation at 2"]}, {"root": "DEL SimpleName: adaptTo", "operations": ["DEL SimpleName: adaptTo"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL MethodInvocation", "DEL SimpleName: aggArgs", "DEL SimpleName: SqlTypeUtil", "DEL ClassInstanceCreation", "DEL SimpleName: newGroupKeyCount", "DEL SimpleName: projectTypes", "DEL SimpleName: sqlAgg"]}, {"root": "DEL IfStatement", "operations": ["DEL ExpressionStatement", "DEL Block", "DEL SimpleName: newReturnType", "DEL Block", "DEL IfStatement", "DEL Assignment: =", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: isDistinct"]}]}}, {"AggregateCall_diff": {"operations": ["Move MethodDeclaration(561) into TypeDeclaration: class(660) at 9", "Insert MethodDeclaration(637) into TypeDeclaration: class(660) at 21", "Insert Javadoc(153) into MethodDeclaration(250) at 0", "Insert Modifier: static(155) into MethodDeclaration(250) at 2", "Insert SimpleType: AggregateCall(157) into MethodDeclaration(250) at 3", "Insert SimpleName: create(158) into MethodDeclaration(250) at 4", "Insert SingleVariableDeclaration(162) into MethodDeclaration(250) at 5", "Insert SingleVariableDeclaration(165) into MethodDeclaration(250) at 6", "Insert SingleVariableDeclaration(172) into MethodDeclaration(250) at 7", "Insert SingleVariableDeclaration(175) into MethodDeclaration(250) at 8", "Insert SingleVariableDeclaration(179) into MethodDeclaration(250) at 9", "Insert SingleVariableDeclaration(183) into MethodDeclaration(250) at 10", "Insert SingleVariableDeclaration(187) into MethodDeclaration(250) at 11", "Move Javadoc(478) into MethodDeclaration(637) at 0", "Insert Modifier: public(582) into MethodDeclaration(637) at 1", "Move SimpleType: AggregateCall(481) into MethodDeclaration(637) at 2", "Insert SimpleName: adaptTo(585) into MethodDeclaration(637) at 3", "Move SingleVariableDeclaration(486) into MethodDeclaration(637) at 4", "Move SingleVariableDeclaration(493) into MethodDeclaration(637) at 5", "Move SingleVariableDeclaration(496) into MethodDeclaration(637) at 6", "Move SingleVariableDeclaration(499) into MethodDeclaration(637) at 7", "Insert Block(636) into MethodDeclaration(637) at 8", "Insert TagElement(152) into Javadoc(153) at 0", "Insert SimpleName: AggregateCall(156) into SimpleType: AggregateCall(157) at 0", "Insert SimpleType: SqlAggFunction(160) into SingleVariableDeclaration(162) at 0", "Insert SimpleName: aggFunction(161) into SingleVariableDeclaration(162) at 1", "Insert PrimitiveType: boolean(163) into SingleVariableDeclaration(165) at 0", "Insert SimpleName: distinct(164) into SingleVariableDeclaration(165) at 1", "Insert ParameterizedType: List<Integer>(170) into SingleVariableDeclaration(172) at 0", "Insert SimpleName: argList(171) into SingleVariableDeclaration(172) at 1", "Insert PrimitiveType: int(173) into SingleVariableDeclaration(175) at 0", "Insert SimpleName: groupCount(174) into SingleVariableDeclaration(175) at 1", "Insert SimpleType: RelNode(177) into SingleVariableDeclaration(179) at 0", "Insert SimpleName: input(178) into SingleVariableDeclaration(179) at 1", "Move SimpleType: RelDataType(511) into SingleVariableDeclaration(183) at 0", "Insert SimpleName: type(182) into SingleVariableDeclaration(183) at 1", "Insert SimpleType: String(185) into SingleVariableDeclaration(187) at 0", "Insert SimpleName: name(186) into SingleVariableDeclaration(187) at 1", "Insert IfStatement(239) into Block(249) at 0", "Move VariableDeclarationStatement(509) into Block(636) at 0", "Insert VariableDeclarationStatement(624) into Block(636) at 1", "Insert ReturnStatement(635) into Block(636) at 2", "Insert TextElement: Creates an AggregateCall, inferring its type if (148) into TagElement(152) at 0", "Insert TagElement: @code(150) into TagElement(152) at 1", "Insert TextElement:  is null. (151) into TagElement(152) at 2", "Insert SimpleName: SqlAggFunction(159) into SimpleType: SqlAggFunction(160) at 0", "Insert SimpleType: List(167) into ParameterizedType: List<Integer>(170) at 0", "Insert SimpleType: Integer(169) into ParameterizedType: List<Integer>(170) at 1", "Insert SimpleName: RelNode(176) into SimpleType: RelNode(177) at 0", "Insert SimpleName: String(184) into SimpleType: String(185) at 0", "Insert InfixExpression: ==(190) into IfStatement(239) at 0", "Insert Block(238) into IfStatement(239) at 1", "Insert Modifier: final(613) into VariableDeclarationStatement(624) at 0", "Insert SimpleType: RelDataType(615) into VariableDeclarationStatement(624) at 1", "Insert VariableDeclarationFragment(623) into VariableDeclarationStatement(624) at 2", "Insert MethodInvocation(634) into ReturnStatement(635) at 0", "Insert TextElement:  type(149) into TagElement: @code(150) at 0", "Insert SimpleName: List(166) into SimpleType: List(167) at 0", "Insert SimpleName: Integer(168) into SimpleType: Integer(169) at 0", "Insert SimpleName: type(188) into InfixExpression: ==(190) at 0", "Insert NullLiteral(189) into InfixExpression: ==(190) at 1", "Move VariableDeclarationStatement(514) into Block(238) at 0", "Insert VariableDeclarationStatement(217) into Block(238) at 1", "Insert VariableDeclarationStatement(230) into Block(238) at 2", "Move ExpressionStatement(546) into Block(238) at 3", "Update SimpleName: aggregation(551) to aggFunction", "Insert SimpleName: distinct(243) into ClassInstanceCreation(247) at 2", "Update SimpleName: aggArgs(554) to argList", "Update SimpleName: newReturnType(555) to type", "Insert SimpleName: name(246) into ClassInstanceCreation(247) at 5", "Insert SimpleName: RelDataType(614) into SimpleType: RelDataType(615) at 0", "Insert SimpleName: newType(616) into VariableDeclarationFragment(623) at 0", "Insert ConditionalExpression(622) into VariableDeclarationFragment(623) at 1", "Insert SimpleName: create(625) into MethodInvocation(634) at 0", "Insert SimpleName: sqlAgg(626) into MethodInvocation(634) at 1", "Insert SimpleName: distinct(627) into MethodInvocation(634) at 2", "Insert SimpleName: aggArgs(628) into MethodInvocation(634) at 3", "Insert SimpleName: newGroupKeyCount(629) into MethodInvocation(634) at 4", "Insert SimpleName: input(630) into MethodInvocation(634) at 5", "Insert SimpleName: newType(631) into MethodInvocation(634) at 6", "Move MethodInvocation(557) into MethodInvocation(634) at 7", "Insert Modifier: final(191) into VariableDeclarationStatement(201) at 0", "Insert SimpleType: RelDataTypeFactory(193) into VariableDeclarationStatement(201) at 1", "Insert Modifier: final(202) into VariableDeclarationStatement(217) at 0", "Insert ParameterizedType: List<RelDataType>(207) into VariableDeclarationStatement(217) at 1", "Insert VariableDeclarationFragment(216) into VariableDeclarationStatement(217) at 2", "Insert Modifier: final(218) into VariableDeclarationStatement(230) at 0", "Insert SimpleType: AggregateRelBase.AggCallBinding(220) into VariableDeclarationStatement(230) at 1", "Insert VariableDeclarationFragment(229) into VariableDeclarationStatement(230) at 2", "Move InfixExpression: ==(517) into ConditionalExpression(622) at 0", "Insert SimpleName: type(620) into ConditionalExpression(622) at 1", "Insert NullLiteral(621) into ConditionalExpression(622) at 2", "Insert SimpleName: RelDataTypeFactory(192) into SimpleType: RelDataTypeFactory(193) at 0", "Update SimpleName: newReturnType(512) to typeFactory", "Move MethodInvocation(533) into VariableDeclarationFragment(200) at 1", "Insert SimpleType: List(204) into ParameterizedType: List<RelDataType>(207) at 0", "Insert SimpleType: RelDataType(206) into ParameterizedType: List<RelDataType>(207) at 1", "Insert SimpleName: types(208) into VariableDeclarationFragment(216) at 0", "Insert MethodInvocation(215) into VariableDeclarationFragment(216) at 1", "Insert QualifiedName: AggregateRelBase.AggCallBinding(219) into SimpleType: AggregateRelBase.AggCallBinding(220) at 0", "Insert SimpleName: callBinding(221) into VariableDeclarationFragment(229) at 0", "Insert ClassInstanceCreation(228) into VariableDeclarationFragment(229) at 1", "Update SimpleName: newReturnType(524) to type", "Insert SimpleName: List(203) into SimpleType: List(204) at 0", "Insert SimpleName: RelDataType(205) into SimpleType: RelDataType(206) at 0", "Insert SimpleName: SqlTypeUtil(209) into MethodInvocation(215) at 0", "Update SimpleName: getType(519) to projectTypes", "Move SimpleName: getType(519) into MethodInvocation(215) at 1", "Move MethodInvocation(539) into MethodInvocation(215) at 2", "Insert SimpleName: argList(214) into MethodInvocation(215) at 3", "Move SimpleType: AggregateRelBase.AggCallBinding(528) into ClassInstanceCreation(228) at 0", "Insert SimpleName: typeFactory(224) into ClassInstanceCreation(228) at 1", "Insert SimpleName: aggFunction(225) into ClassInstanceCreation(228) at 2", "Insert SimpleName: types(226) into ClassInstanceCreation(228) at 3", "Insert SimpleName: groupCount(227) into ClassInstanceCreation(228) at 4", "Update SimpleName: sqlAgg(525) to aggFunction", "Insert SimpleName: callBinding(234) into MethodInvocation(235) at 2", "Delete SimpleName: adaptTo(482)", "Delete SimpleName: sqlAgg(534)", "Delete SimpleName: SqlTypeUtil(535)", "Delete SimpleName: projectTypes(536)", "Delete SimpleName: aggArgs(540)", "Delete MethodInvocation(541)", "Delete SimpleName: newGroupKeyCount(542)", "Delete ClassInstanceCreation(543)", "Delete SimpleName: newReturnType(518)", "Delete MethodInvocation(520)", "Delete Assignment: =(521)", "Delete ExpressionStatement(522)", "Delete Block(523)", "Delete Block(547)", "Delete IfStatement(548)", "Delete SimpleName: isDistinct(552)", "Delete MethodInvocation(553)"]}}, {"Aggregation_cluster": {"actions": [{"root": "INS TagElement: @deprecated to Javadoc at 1", "operations": ["INS MemberRef to TagElement: @link at 0", "INS QualifiedName: org.eigenbase.util.Bug to MemberRef at 0", "INS TextElement: ; to TagElement: @deprecated at 2", "INS TextElement:  calcite-0.9.1 to TagElement: @link at 1", "INS TextElement: after  to TagElement: @deprecated at 3", "INS MemberRef to TagElement: @link at 0", "INS TagElement: @deprecated to Javadoc at 1", "INS TagElement: @link to TagElement: @deprecated at 1", "INS SimpleName: upgrade to MemberRef at 1", "INS TextElement: and after  to TagElement: @deprecated at 9", "INS TagElement: @code to TagElement: @deprecated at 8", "INS TextElement:  calcite-0.9.2 to TagElement: @link at 1", "INS QualifiedName: org.eigenbase.sql.SqlAggFunction to TagElement: @link at 0", "INS TextElement: , to TagElement: @deprecated at 5", "INS TextElement:  will require a  to TagElement: @deprecated at 7", "INS TextElement:  SqlAggFunction to TagElement: @code at 0", "INS TagElement: @link to TagElement: @deprecated at 4", "INS TagElement: @link to TagElement: @deprecated at 6", "INS SimpleName: upgrade to MemberRef at 1", "INS TextElement:  Use  to TagElement: @deprecated at 0", "INS QualifiedName: org.eigenbase.util.Bug to MemberRef at 0", "INS QualifiedName: org.eigenbase.rel.AggregateCall to TagElement: @link at 0", "INS TextElement: this interface will be removed. to TagElement: @deprecated at 11", "INS TagElement: @link to TagElement: @deprecated at 10"]}, {"root": "INS TagElement: @deprecated to Javadoc at 3", "operations": ["INS TextElement: . to TagElement: @deprecated at 5", "INS QualifiedName: org.eigenbase.sql.SqlAggFunction to MethodRef at 0", "INS TextElement: be removed after  to TagElement: @deprecated at 3", "INS MethodRef to TagElement: @link at 0", "INS QualifiedName: org.eigenbase.util.Bug to MemberRef at 0", "INS TextElement:  Use to TagElement: @deprecated at 0", "INS TagElement: @link to TagElement: @deprecated at 1", "INS MemberRef to TagElement: @link at 0", "INS SimpleName: upgrade to MemberRef at 1", "INS TextElement: ; will to TagElement: @deprecated at 2", "INS TextElement:  calcite-0.9.2 to TagElement: @link at 1", "INS TagElement: @deprecated to Javadoc at 3", "INS TagElement: @link to TagElement: @deprecated at 4", "INS SimpleName: getOperandTypeInference to MethodRef at 1"]}, {"root": "INS TagElement: @deprecated to Javadoc at 3", "operations": ["INS QualifiedName: org.eigenbase.util.Bug to MemberRef at 0", "INS MemberRef to TagElement: @link at 0", "INS TextElement: ; will to TagElement: @deprecated at 2", "INS TagElement: @link to TagElement: @deprecated at 1", "INS SimpleName: upgrade to MemberRef at 1", "INS TagElement: @deprecated to Javadoc at 3", "INS QualifiedName: org.eigenbase.sql.SqlAggFunction to MethodRef at 0", "INS TextElement: be removed after  to TagElement: @deprecated at 3", "INS TextElement:  calcite-0.9.2 to TagElement: @link at 1", "INS TagElement: @link to TagElement: @deprecated at 4", "INS TextElement: . to TagElement: @deprecated at 5", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: getReturnTypeInference to MethodRef at 1", "INS TextElement:  Use to TagElement: @deprecated at 0"]}]}}, {"Aggregation_diff": {"operations": ["Insert TagElement: @deprecated(38) into Javadoc(39) at 1", "Insert TextElement:  Use (15) into TagElement: @deprecated(38) at 0", "Insert TagElement: @link(17) into TagElement: @deprecated(38) at 1", "Insert TextElement: ;(18) into TagElement: @deprecated(38) at 2", "Insert TextElement: after (19) into TagElement: @deprecated(38) at 3", "Insert TagElement: @link(24) into TagElement: @deprecated(38) at 4", "Insert TextElement: ,(25) into TagElement: @deprecated(38) at 5", "Insert TagElement: @link(27) into TagElement: @deprecated(38) at 6", "Insert TextElement:  will require a (28) into TagElement: @deprecated(38) at 7", "Insert TagElement: @code(30) into TagElement: @deprecated(38) at 8", "Insert TextElement: and after (31) into TagElement: @deprecated(38) at 9", "Insert TagElement: @link(36) into TagElement: @deprecated(38) at 10", "Insert TextElement: this interface will be removed.(37) into TagElement: @deprecated(38) at 11", "Insert TagElement: @deprecated(62) into Javadoc(63) at 3", "Insert TagElement: @deprecated(95) into Javadoc(96) at 3", "Insert QualifiedName: org.eigenbase.sql.SqlAggFunction(16) into TagElement: @link(17) at 0", "Insert MemberRef(22) into TagElement: @link(24) at 0", "Insert TextElement:  calcite-0.9.1(23) into TagElement: @link(24) at 1", "Insert QualifiedName: org.eigenbase.rel.AggregateCall(26) into TagElement: @link(27) at 0", "Insert TextElement:  SqlAggFunction(29) into TagElement: @code(30) at 0", "Insert MemberRef(34) into TagElement: @link(36) at 0", "Insert TextElement:  calcite-0.9.2(35) into TagElement: @link(36) at 1", "Insert TextElement:  Use(49) into TagElement: @deprecated(62) at 0", "Insert TagElement: @link(53) into TagElement: @deprecated(62) at 1", "Insert TextElement: ; will(54) into TagElement: @deprecated(62) at 2", "Insert TextElement: be removed after (55) into TagElement: @deprecated(62) at 3", "Insert TagElement: @link(60) into TagElement: @deprecated(62) at 4", "Insert TextElement: .(61) into TagElement: @deprecated(62) at 5", "Insert TextElement:  Use(82) into TagElement: @deprecated(95) at 0", "Insert TagElement: @link(86) into TagElement: @deprecated(95) at 1", "Insert TextElement: ; will(87) into TagElement: @deprecated(95) at 2", "Insert TextElement: be removed after (88) into TagElement: @deprecated(95) at 3", "Insert TagElement: @link(93) into TagElement: @deprecated(95) at 4", "Insert TextElement: .(94) into TagElement: @deprecated(95) at 5", "Insert QualifiedName: org.eigenbase.util.Bug(20) into MemberRef(22) at 0", "Insert SimpleName: upgrade(21) into MemberRef(22) at 1", "Insert QualifiedName: org.eigenbase.util.Bug(32) into MemberRef(34) at 0", "Insert SimpleName: upgrade(33) into MemberRef(34) at 1", "Insert MethodRef(52) into TagElement: @link(53) at 0", "Insert MemberRef(58) into TagElement: @link(60) at 0", "Insert TextElement:  calcite-0.9.2(59) into TagElement: @link(60) at 1", "Insert MethodRef(85) into TagElement: @link(86) at 0", "Insert MemberRef(91) into TagElement: @link(93) at 0", "Insert TextElement:  calcite-0.9.2(92) into TagElement: @link(93) at 1", "Insert QualifiedName: org.eigenbase.sql.SqlAggFunction(50) into MethodRef(52) at 0", "Insert SimpleName: getOperandTypeInference(51) into MethodRef(52) at 1", "Insert QualifiedName: org.eigenbase.util.Bug(56) into MemberRef(58) at 0", "Insert SimpleName: upgrade(57) into MemberRef(58) at 1", "Insert QualifiedName: org.eigenbase.sql.SqlAggFunction(83) into MethodRef(85) at 0", "Insert SimpleName: getReturnTypeInference(84) into MethodRef(85) at 1", "Insert QualifiedName: org.eigenbase.util.Bug(89) into MemberRef(91) at 0", "Insert SimpleName: upgrade(90) into MemberRef(91) at 1"]}}, {"RelOptLattice_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS ImportDeclaration to CompilationUnit at 9", "INS QualifiedName: net.hydromatic.optiq.materialize.TileKey to ImportDeclaration at 0"]}, {"root": "UPDATE from Pair<OptiqSchema.TableEntry,MaterializationService.TileKey> to Pair<OptiqSchema.TableEntry,TileKey>", "operations": ["UPD ParameterizedType: Pair<OptiqSchema.TableEntry,MaterializationService.TileKey> from Pair<OptiqSchema.TableEntry,MaterializationService.TileKey> to Pair<OptiqSchema.TableEntry,TileKey>"]}, {"root": "UPDATE from MaterializationService.TileKey to TileKey", "operations": ["UPD SimpleType: MaterializationService.TileKey from MaterializationService.TileKey to TileKey"]}, {"root": "INS SimpleName: TileKey to SimpleType: MaterializationService.TileKey at 0", "operations": ["INS SimpleName: TileKey to SimpleType: MaterializationService.TileKey at 0"]}, {"root": "INS BooleanLiteral: false to MethodInvocation at 7", "operations": ["INS BooleanLiteral: false to MethodInvocation at 7"]}, {"root": "DEL QualifiedName: MaterializationService.TileKey", "operations": ["DEL QualifiedName: MaterializationService.TileKey"]}]}}, {"RelOptLattice_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(216) at 9", "Insert QualifiedName: net.hydromatic.optiq.materialize.TileKey(18) into ImportDeclaration(19) at 0", "Update ParameterizedType: Pair<OptiqSchema.TableEntry,MaterializationService.TileKey>(133) to Pair<OptiqSchema.TableEntry,TileKey>", "Update SimpleType: MaterializationService.TileKey(132) to TileKey", "Insert SimpleName: TileKey(133) into SimpleType: TileKey(134) at 0", "Insert BooleanLiteral: false(210) into MethodInvocation(211) at 7", "Delete QualifiedName: MaterializationService.TileKey(131)"]}}, {"SubstitutionVisitor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: org.eigenbase.sql.SqlAggFunction to ImportDeclaration at 0"]}, {"root": "UPDATE from Aggregation to SqlAggFunction", "operations": ["UPD SimpleName: Aggregation from Aggregation to SqlAggFunction", "UPD SimpleType: Aggregation from Aggregation to SqlAggFunction"]}, {"root": "INS InfixExpression: || to IfStatement at 0", "operations": ["INS QualifiedName: SqlStdOperatorTable.SUM0 to InfixExpression: == at 1", "INS InfixExpression: || to IfStatement at 0", "INS InfixExpression: == to InfixExpression: || at 1", "INS SimpleName: aggregation to InfixExpression: == at 0"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: || to InfixExpression: || at 0"]}, {"root": "INS CastExpression to ReturnStatement at 0", "operations": ["INS CastExpression to ReturnStatement at 0", "INS SimpleType: SqlAggFunction to CastExpression at 0", "INS SimpleName: SqlAggFunction to SimpleType: SqlAggFunction at 0", "INS SimpleName: aggregation to CastExpression at 1"]}, {"root": "UPDATE from SqlStdOperatorTable.SUM to SqlStdOperatorTable.SUM0", "operations": ["UPD QualifiedName: SqlStdOperatorTable.SUM from SqlStdOperatorTable.SUM to SqlStdOperatorTable.SUM0"]}, {"root": "DEL SimpleName: aggregation", "operations": ["DEL SimpleName: aggregation"]}]}}, {"SubstitutionVisitor_diff": {"operations": ["Insert ImportDeclaration(17) into CompilationUnit(8231) at 8", "Insert QualifiedName: org.eigenbase.sql.SqlAggFunction(16) into ImportDeclaration(17) at 0", "Update SimpleType: Aggregation(4696) to SqlAggFunction", "Update SimpleName: Aggregation(4695) to SqlAggFunction", "Insert InfixExpression: ||(4718) into IfStatement(4735) at 0", "Move InfixExpression: ||(4712) into InfixExpression: ||(4718) at 0", "Insert InfixExpression: ==(4717) into InfixExpression: ||(4718) at 1", "Insert SimpleName: aggregation(4715) into InfixExpression: ==(4717) at 0", "Insert QualifiedName: SqlStdOperatorTable.SUM0(4716) into InfixExpression: ==(4717) at 1", "Insert CastExpression(4722) into ReturnStatement(4723) at 0", "Insert SimpleType: SqlAggFunction(4720) into CastExpression(4722) at 0", "Insert SimpleName: aggregation(4721) into CastExpression(4722) at 1", "Update QualifiedName: SqlStdOperatorTable.SUM(4719) to SqlStdOperatorTable.SUM0", "Insert SimpleName: SqlAggFunction(4719) into SimpleType: SqlAggFunction(4720) at 0", "Delete SimpleName: aggregation(4713)"]}}, {"MaterializedViewTable_cluster": {"actions": [{"root": "UPDATE from tableName to suggestedTableName", "operations": ["UPD SimpleName: tableName from tableName to suggestedTableName", "UPD SimpleName: tableName from tableName to suggestedTableName"]}]}}, {"MaterializedViewTable_diff": {"operations": ["Update SimpleName: tableName(274) to suggestedTableName", "Update SimpleName: tableName(293) to suggestedTableName"]}}, {"StarTable_cluster": {"actions": [{"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: String", "DEL Modifier: final", "DEL VariableDeclarationStatement", "DEL ParameterizedType: List<String>", "DEL SimpleName: ArrayList", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleType: List", "DEL SimpleName: List", "DEL SimpleName: nameList", "DEL SimpleName: String", "DEL SimpleType: ArrayList", "DEL ParameterizedType: ArrayList<String>", "DEL SimpleName: String"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: rowType", "DEL MethodInvocation", "DEL SimpleName: getFieldNames", "DEL SimpleName: addAll", "DEL SimpleName: nameList", "DEL ExpressionStatement"]}]}}, {"StarTable_diff": {"operations": ["Delete Modifier: final(167)", "Delete SimpleName: List(168)", "Delete SimpleType: List(169)", "Delete SimpleName: String(170)", "Delete SimpleType: String(171)", "Delete ParameterizedType: List<String>(172)", "Delete SimpleName: nameList(173)", "Delete SimpleName: ArrayList(174)", "Delete SimpleType: ArrayList(175)", "Delete SimpleName: String(176)", "Delete SimpleType: String(177)", "Delete ParameterizedType: ArrayList<String>(178)", "Delete ClassInstanceCreation(179)", "Delete VariableDeclarationFragment(180)", "Delete VariableDeclarationStatement(181)", "Delete SimpleName: nameList(220)", "Delete SimpleName: addAll(221)", "Delete SimpleName: rowType(222)", "Delete SimpleName: getFieldNames(223)", "Delete MethodInvocation(224)", "Delete MethodInvocation(225)", "Delete ExpressionStatement(226)"]}}, {"OptiqConnectionImpl_cluster": {"actions": [{"root": "INS BooleanLiteral: true to MethodInvocation at 7", "operations": ["INS BooleanLiteral: true to MethodInvocation at 7"]}]}}, {"OptiqConnectionImpl_diff": {"operations": ["Insert BooleanLiteral: true(351) into MethodInvocation(352) at 7"]}}, {"OptiqSchema_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: com.google.common.base.Preconditions to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: add to MethodDeclaration at 3", "INS SimpleName: TableEntry to SimpleType: TableEntry at 0", "INS SimpleName: table to SingleVariableDeclaration at 1", "INS SimpleName: table to MethodInvocation at 2", "INS ReturnStatement to Block at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: String to MethodInvocation at 1", "INS SimpleName: tableName to SingleVariableDeclaration at 1", "INS SimpleName: tableName to MethodInvocation at 1", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: of to MethodInvocation at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: TableEntry to MethodDeclaration at 2", "INS SimpleName: Table to SimpleType: Table at 0", "INS TextElement: Defines a table within this schema.  to TagElement at 0", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS SimpleType: Table to SingleVariableDeclaration at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: add to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS TagElement to Javadoc at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 29", "operations": ["INS NullLiteral to ReturnStatement at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleType: Table to ParameterizedType: Pair<String,Table> at 2", "INS SimpleName: sql to SingleVariableDeclaration at 1", "INS SimpleName: contains to MethodInvocation at 1", "INS SimpleName: values to MethodInvocation at 1", "INS SimpleName: TableEntry to SimpleType: TableEntry at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to MethodInvocation at 3", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: String to ParameterizedType: Pair<String,Table> at 1", "INS EnhancedForStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS MethodInvocation to EnhancedForStatement at 1", "INS ParameterizedType: Pair<String,Table> to MethodDeclaration at 3", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 29", "INS TagElement to Javadoc at 0", "INS SimpleName: tableEntry to MethodInvocation at 0", "INS SimpleName: getTableBySql to MethodDeclaration at 4", "INS SimpleName: of to MethodInvocation at 1", "INS SimpleName: getTable to MethodInvocation at 1", "INS SimpleType: TableEntry to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 6", "INS TextElement: Returns a table that materializes the given SQL statement.  to TagElement at 0", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS SimpleName: Table to SimpleType: Table at 0", "INS Modifier: final to MethodDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: Pair to MethodInvocation at 0", "INS QualifiedName: tableEntry.name to MethodInvocation at 2", "INS SimpleType: Pair to ParameterizedType: Pair<String,Table> at 0", "INS SimpleName: tableMap to MethodInvocation at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: String to SimpleType: String at 0", "INS IfStatement to Block at 0", "INS SimpleName: tableEntry to SingleVariableDeclaration at 1", "INS Block to IfStatement at 1", "INS SimpleName: sql to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS QualifiedName: tableEntry.sqls to MethodInvocation at 0", "INS ReturnStatement to Block at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleType: String to ParameterizedType: ImmutableList<String> at 1", "INS SimpleType: ImmutableList to ParameterizedType: ImmutableList<String> at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: ImmutableList<String> to SingleVariableDeclaration at 0", "INS SimpleName: sqls to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: ImmutableList to SimpleType: ImmutableList at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: List to SimpleType: List at 0", "INS ParameterizedType: List<String> to FieldDeclaration at 2", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS SimpleName: String to SimpleType: String at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SimpleName: sqls to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: String to ParameterizedType: ImmutableList<String> at 1", "INS SimpleName: ImmutableList to SimpleType: ImmutableList at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: ImmutableList<String> to SingleVariableDeclaration at 0", "INS SimpleType: ImmutableList to ParameterizedType: ImmutableList<String> at 0", "INS SimpleName: sqls to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleType: ImmutableList to ParameterizedType: ImmutableList<String> at 0", "INS SimpleName: sqls to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS ParameterizedType: ImmutableList<String> to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: ImmutableList to SimpleType: ImmutableList at 0", "INS SimpleType: String to ParameterizedType: ImmutableList<String> at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: sqls to FieldAccess at 1", "INS ExpressionStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Preconditions to MethodInvocation at 0", "INS SimpleName: checkNotNull to MethodInvocation at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: sqls to MethodInvocation at 2"]}, {"root": "INS SimpleName: sqls to SuperConstructorInvocation at 2", "operations": ["INS SimpleName: sqls to SuperConstructorInvocation at 2"]}, {"root": "INS SimpleName: sqls to ClassInstanceCreation at 4", "operations": ["INS SimpleName: sqls to ClassInstanceCreation at 4"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: table to MethodInvocation at 2", "INS SimpleName: Preconditions to MethodInvocation at 0", "INS SimpleName: checkNotNull to MethodInvocation at 1"]}, {"root": "DEL SimpleName: table", "operations": ["DEL SimpleName: table"]}]}}, {"OptiqSchema_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(3321) at 10", "Insert QualifiedName: com.google.common.base.Preconditions(20) into ImportDeclaration(21) at 0", "Insert MethodDeclaration(505) into TypeDeclaration: class(3320) at 20", "Insert MethodDeclaration(1013) into TypeDeclaration: class(3320) at 29", "Insert Javadoc(481) into MethodDeclaration(505) at 0", "Insert Modifier: public(482) into MethodDeclaration(505) at 1", "Insert SimpleType: TableEntry(484) into MethodDeclaration(505) at 2", "Insert SimpleName: add(485) into MethodDeclaration(505) at 3", "Insert SingleVariableDeclaration(489) into MethodDeclaration(505) at 4", "Insert SingleVariableDeclaration(493) into MethodDeclaration(505) at 5", "Insert Block(504) into MethodDeclaration(505) at 6", "Insert SingleVariableDeclaration(527) into MethodDeclaration(550) at 6", "Insert Javadoc(972) into MethodDeclaration(1013) at 0", "Insert Modifier: public(973) into MethodDeclaration(1013) at 1", "Insert Modifier: final(974) into MethodDeclaration(1013) at 2", "Insert ParameterizedType: Pair<String,Table>(981) into MethodDeclaration(1013) at 3", "Insert SimpleName: getTableBySql(982) into MethodDeclaration(1013) at 4", "Insert SingleVariableDeclaration(986) into MethodDeclaration(1013) at 5", "Insert Block(1012) into MethodDeclaration(1013) at 6", "Insert FieldDeclaration(2289) into TypeDeclaration: class(2327) at 6", "Insert TagElement(480) into Javadoc(481) at 0", "Insert SimpleName: TableEntry(483) into SimpleType: TableEntry(484) at 0", "Insert SimpleType: String(487) into SingleVariableDeclaration(489) at 0", "Insert SimpleName: tableName(488) into SingleVariableDeclaration(489) at 1", "Insert SimpleType: Table(491) into SingleVariableDeclaration(493) at 0", "Insert SimpleName: table(492) into SingleVariableDeclaration(493) at 1", "Insert ReturnStatement(503) into Block(504) at 0", "Insert ParameterizedType: ImmutableList<String>(525) into SingleVariableDeclaration(527) at 0", "Insert SimpleName: sqls(526) into SingleVariableDeclaration(527) at 1", "Insert TagElement(971) into Javadoc(972) at 0", "Insert SimpleType: Pair(976) into ParameterizedType: Pair<String,Table>(981) at 0", "Insert SimpleType: String(978) into ParameterizedType: Pair<String,Table>(981) at 1", "Insert SimpleType: Table(980) into ParameterizedType: Pair<String,Table>(981) at 2", "Insert SimpleType: String(984) into SingleVariableDeclaration(986) at 0", "Insert SimpleName: sql(985) into SingleVariableDeclaration(986) at 1", "Insert EnhancedForStatement(1009) into Block(1012) at 0", "Insert ReturnStatement(1011) into Block(1012) at 1", "Insert Modifier: public(2280) into FieldDeclaration(2289) at 0", "Insert Modifier: final(2281) into FieldDeclaration(2289) at 1", "Insert ParameterizedType: List<String>(2286) into FieldDeclaration(2289) at 2", "Insert VariableDeclarationFragment(2288) into FieldDeclaration(2289) at 3", "Insert SingleVariableDeclaration(2306) into MethodDeclaration(2320) at 4", "Insert SingleVariableDeclaration(2871) into MethodDeclaration(2890) at 6", "Insert TextElement: Defines a table within this schema. (479) into TagElement(480) at 0", "Insert SimpleName: String(486) into SimpleType: String(487) at 0", "Insert SimpleName: Table(490) into SimpleType: Table(491) at 0", "Insert MethodInvocation(502) into ReturnStatement(503) at 0", "Insert SimpleType: ImmutableList(522) into ParameterizedType: ImmutableList<String>(525) at 0", "Insert SimpleType: String(524) into ParameterizedType: ImmutableList<String>(525) at 1", "Insert TextElement: Returns a table that materializes the given SQL statement. (970) into TagElement(971) at 0", "Insert SimpleName: Pair(975) into SimpleType: Pair(976) at 0", "Insert SimpleName: String(977) into SimpleType: String(978) at 0", "Insert SimpleName: Table(979) into SimpleType: Table(980) at 0", "Insert SimpleName: String(983) into SimpleType: String(984) at 0", "Insert SingleVariableDeclaration(990) into EnhancedForStatement(1009) at 0", "Insert MethodInvocation(993) into EnhancedForStatement(1009) at 1", "Insert Block(1008) into EnhancedForStatement(1009) at 2", "Insert NullLiteral(1010) into ReturnStatement(1011) at 0", "Insert SimpleType: List(2283) into ParameterizedType: List<String>(2286) at 0", "Insert SimpleType: String(2285) into ParameterizedType: List<String>(2286) at 1", "Insert SimpleName: sqls(2287) into VariableDeclarationFragment(2288) at 0", "Insert ParameterizedType: ImmutableList<String>(2304) into SingleVariableDeclaration(2306) at 0", "Insert SimpleName: sqls(2305) into SingleVariableDeclaration(2306) at 1", "Insert ExpressionStatement(2318) into Block(2319) at 1", "Insert ParameterizedType: ImmutableList<String>(2869) into SingleVariableDeclaration(2871) at 0", "Insert SimpleName: sqls(2870) into SingleVariableDeclaration(2871) at 1", "Insert SimpleName: add(494) into MethodInvocation(502) at 0", "Insert SimpleName: tableName(495) into MethodInvocation(502) at 1", "Insert SimpleName: table(496) into MethodInvocation(502) at 2", "Insert MethodInvocation(501) into MethodInvocation(502) at 3", "Insert SimpleName: ImmutableList(521) into SimpleType: ImmutableList(522) at 0", "Insert SimpleName: String(523) into SimpleType: String(524) at 0", "Insert SimpleType: TableEntry(988) into SingleVariableDeclaration(990) at 0", "Insert SimpleName: tableEntry(989) into SingleVariableDeclaration(990) at 1", "Insert SimpleName: tableMap(991) into MethodInvocation(993) at 0", "Insert SimpleName: values(992) into MethodInvocation(993) at 1", "Insert IfStatement(1007) into Block(1008) at 0", "Insert SimpleName: List(2282) into SimpleType: List(2283) at 0", "Insert SimpleName: String(2284) into SimpleType: String(2285) at 0", "Insert SimpleType: ImmutableList(2301) into ParameterizedType: ImmutableList<String>(2304) at 0", "Insert SimpleType: String(2303) into ParameterizedType: ImmutableList<String>(2304) at 1", "Insert Assignment: =(2317) into ExpressionStatement(2318) at 0", "Insert SimpleType: ImmutableList(2866) into ParameterizedType: ImmutableList<String>(2869) at 0", "Insert SimpleType: String(2868) into ParameterizedType: ImmutableList<String>(2869) at 1", "Insert SimpleName: sqls(2874) into SuperConstructorInvocation(2875) at 2", "Insert SimpleName: ImmutableList(497) into MethodInvocation(501) at 0", "Insert SimpleType: String(499) into MethodInvocation(501) at 1", "Insert SimpleName: of(500) into MethodInvocation(501) at 2", "Insert SimpleName: sqls(537) into ClassInstanceCreation(538) at 4", "Insert SimpleName: TableEntry(987) into SimpleType: TableEntry(988) at 0", "Insert MethodInvocation(997) into IfStatement(1007) at 0", "Insert Block(1006) into IfStatement(1007) at 1", "Insert SimpleName: ImmutableList(2300) into SimpleType: ImmutableList(2301) at 0", "Insert SimpleName: String(2302) into SimpleType: String(2303) at 0", "Insert FieldAccess(2312) into Assignment: =(2317) at 0", "Insert MethodInvocation(2316) into Assignment: =(2317) at 1", "Insert SimpleName: ImmutableList(2865) into SimpleType: ImmutableList(2866) at 0", "Insert SimpleName: String(2867) into SimpleType: String(2868) at 0", "Insert MethodInvocation(2886) into Assignment: =(2887) at 1", "Insert SimpleName: String(498) into SimpleType: String(499) at 0", "Insert QualifiedName: tableEntry.sqls(994) into MethodInvocation(997) at 0", "Insert SimpleName: contains(995) into MethodInvocation(997) at 1", "Insert SimpleName: sql(996) into MethodInvocation(997) at 2", "Insert ReturnStatement(1005) into Block(1006) at 0", "Insert ThisExpression(2310) into FieldAccess(2312) at 0", "Insert SimpleName: sqls(2311) into FieldAccess(2312) at 1", "Insert SimpleName: Preconditions(2313) into MethodInvocation(2316) at 0", "Insert SimpleName: checkNotNull(2314) into MethodInvocation(2316) at 1", "Insert SimpleName: sqls(2315) into MethodInvocation(2316) at 2", "Insert SimpleName: Preconditions(2883) into MethodInvocation(2886) at 0", "Insert SimpleName: checkNotNull(2884) into MethodInvocation(2886) at 1", "Insert SimpleName: table(2885) into MethodInvocation(2886) at 2", "Insert MethodInvocation(1004) into ReturnStatement(1005) at 0", "Insert SimpleName: Pair(998) into MethodInvocation(1004) at 0", "Insert SimpleName: of(999) into MethodInvocation(1004) at 1", "Insert QualifiedName: tableEntry.name(1000) into MethodInvocation(1004) at 2", "Insert MethodInvocation(1003) into MethodInvocation(1004) at 3", "Insert SimpleName: tableEntry(1001) into MethodInvocation(1003) at 0", "Insert SimpleName: getTable(1002) into MethodInvocation(1003) at 1", "Delete SimpleName: table(2768)"]}}, {"Lattice_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 9", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: algorithmMaxMillis to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 9", "INS Modifier: public to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS PrimitiveType: long to FieldDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: algorithmMaxMillis to SingleVariableDeclaration at 1", "INS PrimitiveType: long to SingleVariableDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS StringLiteral: \"Measure: [agg: \" to InfixExpression: + at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS StringLiteral: \"]\" to InfixExpression: + at 4", "INS SimpleName: toString to MethodDeclaration at 3", "INS SimpleType: String to MethodDeclaration at 2", "INS StringLiteral: \", args: \" to InfixExpression: + at 2", "INS SimpleName: args to InfixExpression: + at 3", "INS SimpleName: agg to InfixExpression: + at 1", "INS ReturnStatement to Block at 0", "INS InfixExpression: + to ReturnStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to TypeDeclaration: class at 9"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 10", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 10", "INS PrefixExpression: - to VariableDeclarationFragment at 1", "INS Modifier: private to FieldDeclaration at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: algorithmMaxMillis to VariableDeclarationFragment at 0", "INS PrimitiveType: long to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS TextElement: Sets the \"algorithmMaxMillis\" attribute (default -1).  to TagElement at 0", "INS SimpleName: algorithmMaxMillis to Assignment: = at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: algorithmMaxMillis to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Builder to SimpleType: Builder at 0", "INS ReturnStatement to Block at 1", "INS SimpleType: Builder to MethodDeclaration at 2", "INS SimpleName: algorithmMaxMillis to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Block to MethodDeclaration at 5", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS TagElement to Javadoc at 0", "INS ThisExpression to ReturnStatement at 0", "INS SimpleName: algorithmMaxMillis to MethodDeclaration at 3", "INS Javadoc to MethodDeclaration at 0", "INS FieldAccess to Assignment: = at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 4", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: algorithmMaxMillis to Assignment: = at 1", "INS SimpleName: algorithmMaxMillis to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS IfStatement to Block at 4", "INS SimpleName: add to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: usedNodes to MethodInvocation at 0", "INS SimpleName: nodes to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS SimpleName: usedNodes to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 11", "operations": ["INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"()\" to MethodInvocation at 2", "INS SimpleName: groupBuf to MethodInvocation at 0", "INS IfStatement to Block at 11", "INS SimpleName: groupSet to MethodInvocation at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: isEmpty to MethodInvocation at 1"]}, {"root": "INS SimpleName: algorithmMaxMillis to ClassInstanceCreation at 4", "operations": ["INS SimpleName: algorithmMaxMillis to ClassInstanceCreation at 4"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV InstanceofExpression to InfixExpression: && at 0"]}, {"root": "INS MethodInvocation to InfixExpression: && at 1", "operations": ["INS MethodInvocation to InfixExpression: && at 1", "INS SimpleName: equals to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 2", "MOV FieldAccess to MethodInvocation at 0"]}, {"root": "DEL InfixExpression: &&", "operations": ["DEL InfixExpression: &&", "DEL InfixExpression: =="]}]}}, {"Lattice_diff": {"operations": ["Insert FieldDeclaration(171) into TypeDeclaration: class(3892) at 9", "Insert Modifier: public(166) into FieldDeclaration(171) at 0", "Insert Modifier: final(167) into FieldDeclaration(171) at 1", "Insert PrimitiveType: long(168) into FieldDeclaration(171) at 2", "Insert VariableDeclarationFragment(170) into FieldDeclaration(171) at 3", "Insert SingleVariableDeclaration(306) into MethodDeclaration(488) at 5", "Insert MethodDeclaration(2236) into TypeDeclaration: class(2440) at 9", "Insert FieldDeclaration(2684) into TypeDeclaration: class(3694) at 10", "Insert MethodDeclaration(3203) into TypeDeclaration: class(3694) at 16", "Insert SimpleName: algorithmMaxMillis(169) into VariableDeclarationFragment(170) at 0", "Insert PrimitiveType: long(304) into SingleVariableDeclaration(306) at 0", "Insert SimpleName: algorithmMaxMillis(305) into SingleVariableDeclaration(306) at 1", "Insert ExpressionStatement(367) into Block(487) at 4", "Insert IfStatement(1034) into Block(1419) at 4", "Insert IfStatement(1174) into Block(1419) at 11", "Insert MarkerAnnotation(2223) into MethodDeclaration(2236) at 0", "Insert Modifier: public(2224) into MethodDeclaration(2236) at 1", "Insert SimpleType: String(2226) into MethodDeclaration(2236) at 2", "Insert SimpleName: toString(2227) into MethodDeclaration(2236) at 3", "Insert Block(2235) into MethodDeclaration(2236) at 4", "Insert Modifier: private(2678) into FieldDeclaration(2684) at 0", "Insert PrimitiveType: long(2679) into FieldDeclaration(2684) at 1", "Insert VariableDeclarationFragment(2683) into FieldDeclaration(2684) at 2", "Insert Javadoc(3186) into MethodDeclaration(3203) at 0", "Insert Modifier: public(3187) into MethodDeclaration(3203) at 1", "Insert SimpleType: Builder(3189) into MethodDeclaration(3203) at 2", "Insert SimpleName: algorithmMaxMillis(3190) into MethodDeclaration(3203) at 3", "Insert SingleVariableDeclaration(3193) into MethodDeclaration(3203) at 4", "Insert Block(3202) into MethodDeclaration(3203) at 5", "Insert Assignment: =(366) into ExpressionStatement(367) at 0", "Insert MethodInvocation(1024) into IfStatement(1034) at 0", "Insert Block(1033) into IfStatement(1034) at 1", "Insert MethodInvocation(1167) into IfStatement(1174) at 0", "Insert Block(1173) into IfStatement(1174) at 1", "Insert SimpleName: Override(2222) into MarkerAnnotation(2223) at 0", "Insert SimpleName: String(2225) into SimpleType: String(2226) at 0", "Insert ReturnStatement(2234) into Block(2235) at 0", "Insert SimpleName: algorithmMaxMillis(2680) into VariableDeclarationFragment(2683) at 0", "Insert PrefixExpression: -(2682) into VariableDeclarationFragment(2683) at 1", "Insert TagElement(3185) into Javadoc(3186) at 0", "Insert SimpleName: Builder(3188) into SimpleType: Builder(3189) at 0", "Insert PrimitiveType: long(3191) into SingleVariableDeclaration(3193) at 0", "Insert SimpleName: algorithmMaxMillis(3192) into SingleVariableDeclaration(3193) at 1", "Insert ExpressionStatement(3199) into Block(3202) at 0", "Insert ReturnStatement(3201) into Block(3202) at 1", "Insert FieldAccess(364) into Assignment: =(366) at 0", "Insert SimpleName: algorithmMaxMillis(365) into Assignment: =(366) at 1", "Insert SimpleName: usedNodes(1022) into MethodInvocation(1024) at 0", "Insert SimpleName: isEmpty(1023) into MethodInvocation(1024) at 1", "Insert ExpressionStatement(1032) into Block(1033) at 0", "Insert SimpleName: groupSet(1165) into MethodInvocation(1167) at 0", "Insert SimpleName: isEmpty(1166) into MethodInvocation(1167) at 1", "Insert ExpressionStatement(1172) into Block(1173) at 0", "Insert InfixExpression: +(2233) into ReturnStatement(2234) at 0", "Insert NumberLiteral: 1(2681) into PrefixExpression: -(2682) at 0", "Insert TextElement: Sets the \"algorithmMaxMillis\" attribute (default -1). (3184) into TagElement(3185) at 0", "Insert Assignment: =(3198) into ExpressionStatement(3199) at 0", "Insert ThisExpression(3200) into ReturnStatement(3201) at 0", "Insert ThisExpression(362) into FieldAccess(364) at 0", "Insert SimpleName: algorithmMaxMillis(363) into FieldAccess(364) at 1", "Insert MethodInvocation(1031) into ExpressionStatement(1032) at 0", "Insert MethodInvocation(1171) into ExpressionStatement(1172) at 0", "Insert StringLiteral: \"Measure: [agg: \"(2228) into InfixExpression: +(2233) at 0", "Insert SimpleName: agg(2229) into InfixExpression: +(2233) at 1", "Insert StringLiteral: \", args: \"(2230) into InfixExpression: +(2233) at 2", "Insert SimpleName: args(2231) into InfixExpression: +(2233) at 3", "Insert StringLiteral: \"]\"(2232) into InfixExpression: +(2233) at 4", "Insert FieldAccess(3196) into Assignment: =(3198) at 0", "Insert SimpleName: algorithmMaxMillis(3197) into Assignment: =(3198) at 1", "Insert SimpleName: algorithmMaxMillis(3239) into ClassInstanceCreation(3248) at 4", "Insert SimpleName: usedNodes(1025) into MethodInvocation(1031) at 0", "Insert SimpleName: add(1026) into MethodInvocation(1031) at 1", "Insert MethodInvocation(1030) into MethodInvocation(1031) at 2", "Insert SimpleName: groupBuf(1168) into MethodInvocation(1171) at 0", "Insert SimpleName: append(1169) into MethodInvocation(1171) at 1", "Insert StringLiteral: \"()\"(1170) into MethodInvocation(1171) at 2", "Move InstanceofExpression(2212) into InfixExpression: &&(2290) at 0", "Insert MethodInvocation(2277) into InfixExpression: &&(2290) at 1", "Insert ThisExpression(3194) into FieldAccess(3196) at 0", "Insert SimpleName: algorithmMaxMillis(3195) into FieldAccess(3196) at 1", "Insert SimpleName: nodes(1027) into MethodInvocation(1030) at 0", "Insert SimpleName: get(1028) into MethodInvocation(1030) at 1", "Insert NumberLiteral: 0(1029) into MethodInvocation(1030) at 2", "Move FieldAccess(2215) into MethodInvocation(2277) at 0", "Insert SimpleName: equals(2269) into MethodInvocation(2277) at 1", "Move FieldAccess(2222) into MethodInvocation(2277) at 2", "Delete InfixExpression: ==(2223)", "Delete InfixExpression: &&(2224)"]}}, {"MaterializationActor_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS TextElement:  with no measures to represent a to TagElement at 2", "INS SimpleType: Multimap to ParameterizedType: Multimap<TileKey,TileKey> at 0", "INS TextElement: dimensionality.  to TagElement at 3", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleType: TileKey to ParameterizedType: Multimap<TileKey,TileKey> at 2", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS SimpleName: Multimap to SimpleType: Multimap at 0", "INS SimpleName: create to MethodInvocation at 1", "INS SimpleName: tilesByDimensionality to VariableDeclarationFragment at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS TagElement: @link to TagElement at 1", "INS SimpleName: HashMultimap to MethodInvocation at 0", "INS SimpleName: TileKey to TagElement: @link at 0", "INS Javadoc to FieldDeclaration at 0", "INS ParameterizedType: Multimap<TileKey,TileKey> to FieldDeclaration at 2", "INS SimpleType: TileKey to ParameterizedType: Multimap<TileKey,TileKey> at 1", "INS TextElement: Tiles grouped by dimensionality. We use a to TagElement at 0"]}, {"root": "UPDATE from List<MaterializationService.TileKey> to Map<TileKey,MaterializationKey>", "operations": ["UPD ParameterizedType: List<MaterializationService.TileKey> from List<MaterializationService.TileKey> to Map<TileKey,MaterializationKey>"]}, {"root": "UPDATE from List to Map", "operations": ["UPD SimpleType: List from List to Map", "UPD SimpleName: List from List to Map"]}, {"root": "INS SimpleType: TileKey to ParameterizedType: List<MaterializationService.TileKey> at 1", "operations": ["INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS SimpleType: TileKey to ParameterizedType: List<MaterializationService.TileKey> at 1"]}, {"root": "UPDATE from MaterializationService.TileKey to MaterializationKey", "operations": ["UPD SimpleType: MaterializationService.TileKey from MaterializationService.TileKey to MaterializationKey"]}, {"root": "UPDATE from tileKeys to keyByTile", "operations": ["UPD SimpleName: tileKeys from tileKeys to keyByTile"]}, {"root": "INS SimpleName: MaterializationKey to SimpleType: MaterializationService.TileKey at 0", "operations": ["INS SimpleName: MaterializationKey to SimpleType: MaterializationService.TileKey at 0"]}, {"root": "UPDATE from Lists to Maps", "operations": ["UPD SimpleName: Lists from Lists to Maps"]}, {"root": "UPDATE from newArrayList to newHashMap", "operations": ["UPD SimpleName: newArrayList from newArrayList to newHashMap"]}, {"root": "DEL QualifiedName: MaterializationService.TileKey", "operations": ["DEL QualifiedName: MaterializationService.TileKey"]}]}}, {"MaterializationActor_diff": {"operations": ["Insert FieldDeclaration(80) into TypeDeclaration: class(318) at 5", "Update ParameterizedType: List<MaterializationService.TileKey>(51) to Map<TileKey,MaterializationKey>", "Insert Javadoc(66) into FieldDeclaration(80) at 0", "Insert Modifier: final(67) into FieldDeclaration(80) at 1", "Insert ParameterizedType: Multimap<TileKey,TileKey>(74) into FieldDeclaration(80) at 2", "Insert VariableDeclarationFragment(79) into FieldDeclaration(80) at 3", "Update SimpleType: List(48) to Map", "Insert SimpleType: TileKey(50) into ParameterizedType: Map<TileKey,MaterializationKey>(53) at 1", "Update SimpleType: MaterializationService.TileKey(50) to MaterializationKey", "Update SimpleName: tileKeys(52) to keyByTile", "Insert TagElement(65) into Javadoc(66) at 0", "Insert SimpleType: Multimap(69) into ParameterizedType: Multimap<TileKey,TileKey>(74) at 0", "Insert SimpleType: TileKey(71) into ParameterizedType: Multimap<TileKey,TileKey>(74) at 1", "Insert SimpleType: TileKey(73) into ParameterizedType: Multimap<TileKey,TileKey>(74) at 2", "Insert SimpleName: tilesByDimensionality(75) into VariableDeclarationFragment(79) at 0", "Insert MethodInvocation(78) into VariableDeclarationFragment(79) at 1", "Update SimpleName: List(47) to Map", "Insert SimpleName: TileKey(49) into SimpleType: TileKey(50) at 0", "Insert SimpleName: MaterializationKey(51) into SimpleType: MaterializationKey(52) at 0", "Update SimpleName: Lists(53) to Maps", "Update SimpleName: newArrayList(54) to newHashMap", "Insert TextElement: Tiles grouped by dimensionality. We use a(60) into TagElement(65) at 0", "Insert TagElement: @link(62) into TagElement(65) at 1", "Insert TextElement:  with no measures to represent a(63) into TagElement(65) at 2", "Insert TextElement: dimensionality. (64) into TagElement(65) at 3", "Insert SimpleName: Multimap(68) into SimpleType: Multimap(69) at 0", "Insert SimpleName: TileKey(70) into SimpleType: TileKey(71) at 0", "Insert SimpleName: TileKey(72) into SimpleType: TileKey(73) at 0", "Insert SimpleName: HashMultimap(76) into MethodInvocation(78) at 0", "Insert SimpleName: create(77) into MethodInvocation(78) at 1", "Insert SimpleName: TileKey(61) into TagElement: @link(62) at 0", "Delete QualifiedName: MaterializationService.TileKey(49)"]}}, {"MaterializationService_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS QualifiedName: org.eigenbase.util.Util to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 18"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleName: o0 to SingleVariableDeclaration at 1", "INS SimpleType: Pair to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 0", "INS Block to MethodDeclaration at 5", "INS ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> to SingleVariableDeclaration at 0", "INS SimpleType: TileKey to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: c to InfixExpression: != at 0", "INS SimpleName: Comparator to SimpleType: Comparator at 0", "INS SimpleType: Comparator to ParameterizedType: Comparator<Pair<OptiqSchema.TableEntry,TileKey>> at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: C to VariableDeclarationFragment at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS ParameterizedType: Comparator<Pair<OptiqSchema.TableEntry,TileKey>> to FieldDeclaration at 3", "INS SimpleName: getTable to MethodInvocation at 1", "INS Modifier: private to FieldDeclaration at 0", "INS ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> to SingleVariableDeclaration at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleType: Pair to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 0", "INS SimpleType: OptiqSchema.TableEntry to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 1", "INS SimpleName: getTable to MethodInvocation at 1", "INS SimpleName: compareTo to MethodInvocation at 1", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS QualifiedName: OptiqSchema.TableEntry to SimpleType: OptiqSchema.TableEntry at 0", "INS SimpleName: o1 to SingleVariableDeclaration at 1", "INS SimpleType: Pair to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleType: OptiqSchema.TableEntry to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ParameterizedType: Comparator<Pair<OptiqSchema.TableEntry,TileKey>> to ClassInstanceCreation at 0", "INS SimpleType: Comparator to ParameterizedType: Comparator<Pair<OptiqSchema.TableEntry,TileKey>> at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS QualifiedName: o1.left.name to MethodInvocation at 2", "INS PrimitiveType: int to MethodDeclaration at 1", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS VariableDeclarationStatement to Block at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: t1 to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS QualifiedName: OptiqSchema.TableEntry to SimpleType: OptiqSchema.TableEntry at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS QualifiedName: o1.left to MethodInvocation at 0", "INS SimpleName: c to ReturnStatement at 0", "INS SimpleType: TileKey to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 2", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS Block to IfStatement at 1", "INS SimpleType: OptiqSchema.TableEntry to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 1", "INS SimpleType: TileKey to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 2", "INS SimpleType: Pair to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 0", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> to ParameterizedType: Comparator<Pair<OptiqSchema.TableEntry,TileKey>> at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleType: Table to VariableDeclarationStatement at 1", "INS SimpleName: compare to MethodDeclaration at 2", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> to ParameterizedType: Comparator<Pair<OptiqSchema.TableEntry,TileKey>> at 1", "INS SimpleType: TileKey to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 2", "INS SimpleName: t0 to VariableDeclarationFragment at 0", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS QualifiedName: o0.left to MethodInvocation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS VariableDeclarationStatement to Block at 1", "INS ReturnStatement to Block at 4", "INS ReturnStatement to Block at 0", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS QualifiedName: OptiqSchema.TableEntry to SimpleType: OptiqSchema.TableEntry at 0", "INS SimpleName: Table to SimpleType: Table at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS NumberLiteral: 0 to InfixExpression: != at 1", "INS SimpleName: Comparator to SimpleType: Comparator at 0", "INS QualifiedName: o0.left.name to MethodInvocation at 0", "INS SimpleType: OptiqSchema.TableEntry to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 1", "INS QualifiedName: OptiqSchema.TableEntry to SimpleType: OptiqSchema.TableEntry at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS IfStatement to Block at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: checkValid to MethodInvocation at 0", "INS SimpleName: create to PrefixExpression: ! at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: tableEntry to InfixExpression: != at 0", "INS QualifiedName: OptiqSchema.TableEntry to SimpleType: OptiqSchema.TableEntry at 0", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS SimpleName: entry to MethodInvocation at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS QualifiedName: OptiqSchema.TableEntry to SimpleType: OptiqSchema.TableEntry at 0", "INS SimpleName: tileKey1 to SingleVariableDeclaration at 1", "INS SimpleType: TileKey to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Map.Entry to ParameterizedType: Map.Entry<TileKey,MaterializationKey> at 0", "INS ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> to ParameterizedType: PriorityQueue<Pair<OptiqSchema.TableEntry,TileKey>> at 1", "INS NullLiteral to ReturnStatement at 0", "INS SimpleName: sql to MethodInvocation at 1", "INS EnhancedForStatement to Block at 1", "INS ExpressionStatement to Block at 1", "INS SimpleType: Pair to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 0", "INS SimpleName: materializationKey to MethodInvocation at 1", "INS SimpleName: defineTile to MethodDeclaration at 3", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS SimpleName: obsolete to MethodInvocation at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> to ParameterizedType: PriorityQueue<Pair<OptiqSchema.TableEntry,TileKey>> at 1", "INS NullLiteral to InfixExpression: != at 1", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: obsolete to VariableDeclarationFragment at 0", "INS SimpleName: groupSet to MethodInvocation at 2", "INS SimpleName: PriorityQueue to SimpleType: PriorityQueue at 0", "INS SimpleName: measureSet to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS VariableDeclarationStatement to Block at 13", "INS IfStatement to Block at 2", "INS InfixExpression: == to InfixExpression: && at 0", "INS ParameterizedType: PriorityQueue<Pair<OptiqSchema.TableEntry,TileKey>> to VariableDeclarationStatement at 1", "INS SimpleName: materializationKey to Assignment: = at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: queue to MethodInvocation at 0", "INS SimpleName: addAll to MethodInvocation at 1", "INS SimpleType: OptiqSchema.TableEntry to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 1", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS Block to MethodDeclaration at 10", "INS SimpleName: path to MethodInvocation at 1", "INS SimpleName: Sets to MethodInvocation at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS QualifiedName: pair.left to MethodInvocation at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS ReturnStatement to Block at 0", "INS QualifiedName: Map.Entry to SimpleType: Map.Entry at 0", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 9", "INS SimpleName: of to MethodInvocation at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: entry to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 9", "INS SimpleName: exact to PrefixExpression: ! at 0", "INS SimpleType: List to ParameterizedType: List<TileKey> at 0", "INS SimpleName: tileKey0 to MethodInvocation at 2", "INS SimpleName: tileKey1 to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: newLinkedHashSet to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Pair to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: groupSet to ClassInstanceCreation at 2", "INS NumberLiteral: 1 to ClassInstanceCreation at 1", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS ParameterizedType: LinkedHashSet<Lattice.Measure> to VariableDeclarationStatement at 1", "INS SimpleName: put to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: TileKey to VariableDeclarationStatement at 1", "INS SimpleName: getKey to MethodInvocation at 1", "INS Block to EnhancedForStatement at 2", "INS StringLiteral: \"table=\" to InfixExpression: + at 0", "INS ParameterizedType: List<TileKey> to VariableDeclarationStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getTable to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: addAll to MethodInvocation at 1", "INS SimpleName: getRowCount to MethodInvocation at 1", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: best to ReturnStatement at 0", "INS VariableDeclarationStatement to Block at 8", "INS SimpleName: groupSet to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 12", "INS InfixExpression: != to IfStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleType: MaterializationKey to ParameterizedType: Map.Entry<TileKey,MaterializationKey> at 2", "INS Block to IfStatement at 1", "INS SimpleType: OptiqSchema.TableEntry to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 1", "INS QualifiedName: OptiqSchema.TableEntry to SimpleType: OptiqSchema.TableEntry at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: obsolete to EnhancedForStatement at 1", "INS ParameterizedType: Map.Entry<TileKey,MaterializationKey> to SingleVariableDeclaration at 0", "INS EnhancedForStatement to Block at 10", "INS QualifiedName: OptiqSchema.TableEntry to SimpleType: OptiqSchema.TableEntry at 0", "INS ExpressionStatement to Block at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS EnhancedForStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to ClassInstanceCreation at 3", "INS SimpleName: tileKey0 to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: tableEntry to VariableDeclarationFragment at 0", "INS SimpleName: of to MethodInvocation at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS SimpleType: TileKey to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 2", "INS SimpleName: pair to SingleVariableDeclaration at 1", "INS SimpleName: measureSet to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \" \" to InfixExpression: + at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: lattice to MethodInvocation at 0", "INS SimpleType: String to VariableDeclarationStatement at 1", "INS SimpleName: best to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS EnhancedForStatement to Block at 1", "INS ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> to SingleVariableDeclaration at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: println to MethodInvocation at 1", "INS QualifiedName: newTileKey.measures to MethodInvocation at 3", "INS SimpleName: materializationKey to Assignment: = at 0", "INS SimpleName: sql to VariableDeclarationFragment at 0", "INS SimpleName: MaterializationKey to SimpleType: MaterializationKey at 0", "INS SimpleType: TileKey to SingleVariableDeclaration at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 1", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS QualifiedName: System.out to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS Block to EnhancedForStatement at 2", "INS SimpleName: remove to MethodInvocation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 0", "INS SimpleType: TileKey to SingleVariableDeclaration at 0", "INS QualifiedName: pair.left to MethodInvocation at 0", "INS SimpleType: TileKey to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 2", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: C to ClassInstanceCreation at 2", "INS SimpleType: OptiqSchema.TableEntry to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 1", "INS SimpleType: Pair to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 0", "INS SimpleName: tileKey1 to MethodInvocation at 3", "INS SimpleName: tableEntry to MethodInvocation at 2", "INS QualifiedName: tileKey2.dimensions to MethodInvocation at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS QualifiedName: OptiqSchema.TableEntry to SimpleType: OptiqSchema.TableEntry at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS InfixExpression: && to InfixExpression: && at 0", "INS IfStatement to Block at 7", "INS SimpleName: measureList to MethodInvocation at 2", "INS SimpleType: TileKey to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 2", "INS Block to IfStatement at 1", "INS SimpleName: PriorityQueue to SimpleType: PriorityQueue at 0", "INS SimpleName: tileKey0 to MethodInvocation at 2", "INS SimpleName: tileKey1 to SingleVariableDeclaration at 1", "INS SimpleName: tileKey2 to VariableDeclarationFragment at 0", "INS SimpleName: remove to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS QualifiedName: actor.tilesByDimensionality to MethodInvocation at 0", "INS SimpleType: TileKey to VariableDeclarationStatement at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: lattice to ClassInstanceCreation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleType: TileKey to ParameterizedType: Map.Entry<TileKey,MaterializationKey> at 1", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: add to MethodInvocation at 1", "INS InfixExpression: && to InfixExpression: && at 0", "INS SimpleName: tileKey1 to MethodInvocation at 2", "INS SimpleName: exact to SingleVariableDeclaration at 1", "INS SimpleName: getValue to MethodInvocation at 1", "INS SimpleType: TileKey to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 2", "INS SimpleType: Pair to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 0", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: measureSet to MethodInvocation at 2", "INS SimpleName: entry to SingleVariableDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS SimpleType: TileKey to ParameterizedType: List<TileKey> at 1", "INS ParameterizedType: PriorityQueue<Pair<OptiqSchema.TableEntry,TileKey>> to ClassInstanceCreation at 0", "INS InfixExpression: && to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: newTileKey to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS QualifiedName: tileKey2.lattice to InfixExpression: == at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS QualifiedName: actor.tilesByDimensionality to MethodInvocation at 0", "INS SimpleName: Lists to MethodInvocation at 0", "INS SimpleType: PriorityQueue to ParameterizedType: PriorityQueue<Pair<OptiqSchema.TableEntry,TileKey>> at 0", "INS SimpleName: peek to MethodInvocation at 1", "INS SimpleName: lattice to InfixExpression: == at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS QualifiedName: actor.tilesByDimensionality to MethodInvocation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 11", "INS Block to EnhancedForStatement at 2", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: OptiqSchema.TableEntry to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS QualifiedName: actor.keyByTile to MethodInvocation at 0", "INS SimpleName: queue to VariableDeclarationFragment at 0", "INS SimpleName: tileKey0 to VariableDeclarationFragment at 0", "INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: copyOf to MethodInvocation at 1", "INS SimpleName: newTileKey to MethodInvocation at 3", "INS SimpleName: materializationKey to InfixExpression: != at 0", "INS InfixExpression: != to IfStatement at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleType: Pair to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 0", "INS SimpleName: lattice to ClassInstanceCreation at 1", "INS MethodInvocation to ClassInstanceCreation at 3", "INS MethodInvocation to InfixExpression: + at 3", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 3", "INS SimpleName: groupSet to ClassInstanceCreation at 2", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: entrySet to MethodInvocation at 1", "INS SimpleName: queue to EnhancedForStatement at 1", "INS IfStatement to Block at 6", "INS Assignment: = to ExpressionStatement at 0", "INS ReturnStatement to Block at 2", "INS ExpressionStatement to Block at 2", "INS QualifiedName: actor.keyByTile to MethodInvocation at 0", "INS SimpleName: queue to MethodInvocation at 0", "INS SimpleType: PriorityQueue to ParameterizedType: PriorityQueue<Pair<OptiqSchema.TableEntry,TileKey>> at 0", "INS SimpleType: OptiqSchema.TableEntry to ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> at 1", "INS MethodInvocation to InfixExpression: + at 1", "INS QualifiedName: tileKey1.measures to MethodInvocation at 2", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: newTileKey to VariableDeclarationFragment at 0", "INS QualifiedName: actor.keyByTile to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: TileKey to ClassInstanceCreation at 0", "INS IfStatement to Block at 15", "INS SimpleName: getStatistic to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 8", "MOV VariableDeclarationStatement to Block at 11"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV Modifier: public to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 7", "MOV SingleVariableDeclaration to MethodDeclaration at 8", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey> to MethodDeclaration at 2"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from tableName to suggestedTableName", "operations": ["UPD SimpleName: tableName from tableName to suggestedTableName", "UPD SimpleName: tableName from tableName to suggestedTableName"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 11", "MOV VariableDeclarationStatement to Block at 9", "MOV IfStatement to Block at 8"]}, {"root": "INS VariableDeclarationStatement to Block at 10", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS SimpleName: tableEntry to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: viewSql to MethodInvocation at 2", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: of to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 10"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 16", "MOV VariableDeclarationStatement to Block at 1", "MOV EnhancedForStatement to Block at 5", "MOV IfStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 14"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Pair<String,Table> to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Table to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleType: String to VariableDeclarationStatement at 1", "operations": ["INS SimpleType: String to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: OptiqSchema.TableEntry to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: MaterializationKey to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to EnhancedForStatement at 1", "operations": ["INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: tileKey0 to MethodInvocation at 2", "INS QualifiedName: actor.tilesByDimensionality to MethodInvocation at 0"]}, {"root": "INS SimpleName: pair to VariableDeclarationFragment at 0", "operations": ["INS SimpleName: pair to VariableDeclarationFragment at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: getTableBySql to MethodInvocation at 1", "INS SimpleName: schema to MethodInvocation at 0", "INS SimpleName: viewSql to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from tableEntry to materializedTable", "operations": ["UPD SimpleName: tableEntry from tableEntry to materializedTable"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV ConditionalExpression to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from pair to tableName", "operations": ["UPD SimpleName: pair from pair to tableName"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: materializationKey to VariableDeclarationFragment at 0"]}, {"root": "INS SimpleType: TileKey to SingleVariableDeclaration at 0", "operations": ["INS SimpleName: TileKey to SimpleType: TileKey at 0", "INS SimpleType: TileKey to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from sql to tileKey1", "operations": ["UPD SimpleName: sql from sql to tileKey1", "UPD SimpleName: tileKey2 from tileKey2 to tileKey1", "UPD SimpleName: create from create to tileKey1"]}, {"root": "INS AssertStatement to Block at 0", "operations": ["INS QualifiedName: tileKey1.dimensions to MethodInvocation at 0", "INS SimpleName: groupSet to MethodInvocation at 2", "INS AssertStatement to Block at 0", "INS MethodInvocation to AssertStatement at 0", "INS SimpleName: equals to MethodInvocation at 1"]}, {"root": "UPDATE from ImmutableList to LinkedHashSet", "operations": ["UPD SimpleName: ImmutableList from ImmutableList to LinkedHashSet", "UPD SimpleType: ImmutableList from ImmutableList to LinkedHashSet"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleType: Lattice.Measure to MethodInvocation at 1", "MOV SimpleType: ImmutableList to ParameterizedType: LinkedHashSet<Lattice.Measure> at 0"]}, {"root": "MOVE from ParameterizedType: LinkedHashSet<Lattice.Measure>", "operations": ["MOV SimpleType: Lattice.Measure to ParameterizedType: LinkedHashSet<Lattice.Measure> at 1"]}, {"root": "UPDATE from measures to measureSet", "operations": ["UPD SimpleName: measures from measures to measureSet"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: measures to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from ImmutableList to String", "operations": ["UPD SimpleName: ImmutableList from ImmutableList to String"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: ImmutableList to SimpleType: String at 0"]}, {"root": "INS SimpleName: materializationKey to Assignment: = at 0", "operations": ["INS SimpleName: materializationKey to Assignment: = at 0"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS BooleanLiteral: true to MethodInvocation at 6", "INS SimpleName: defineMaterialization to MethodInvocation at 0", "INS SimpleName: sql to MethodInvocation at 3", "INS SimpleName: schema to MethodInvocation at 1", "INS SimpleName: newTileKey to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS SimpleName: Schemas to MethodInvocation at 0", "operations": ["INS SimpleName: Schemas to MethodInvocation at 0"]}, {"root": "INS SimpleName: uniqueTableName to MethodInvocation at 1", "operations": ["INS SimpleName: uniqueTableName to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: first to MethodInvocation at 1", "INS StringLiteral: \"m\" to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: tableName to MethodInvocation at 2", "MOV SimpleName: add to MethodInvocation at 1", "MOV SimpleName: materializedTable to MethodInvocation at 3", "MOV SimpleName: schema to MethodInvocation at 0"]}, {"root": "UPDATE from schema to get", "operations": ["UPD SimpleName: schema from schema to get", "UPD SimpleName: lattice from lattice to get"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: schema to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 4", "MOV InfixExpression: + to MethodInvocation at 5", "MOV SimpleName: tileKey to MethodInvocation at 2"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: TileKey to ClassInstanceCreation at 0"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS SimpleName: tileKey1 to MethodInvocation at 2", "INS SimpleName: allSatisfiable to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: measureList to MethodInvocation at 1"]}, {"root": "UPDATE from BitSet to List", "operations": ["UPD SimpleName: BitSet from BitSet to List"]}, {"root": "MOVE from SimpleType: List", "operations": ["MOV SimpleName: BitSet to SimpleType: List at 0"]}, {"root": "UPDATE from getTable to Util", "operations": ["UPD SimpleName: getTable from getTable to Util"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: tableName to MethodInvocation at 2", "MOV SimpleName: getTable to MethodInvocation at 0"]}, {"root": "UPDATE from actor.tileKeys to actor.keyByTile", "operations": ["UPD QualifiedName: actor.tileKeys from actor.tileKeys to actor.keyByTile"]}, {"root": "UPDATE from add to put", "operations": ["UPD SimpleName: add from add to put"]}, {"root": "INS QualifiedName: materialization.key to MethodInvocation at 3", "operations": ["INS QualifiedName: materialization.key to MethodInvocation at 3"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: tableEntry to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS QualifiedName: OptiqSchema.TableEntry to SimpleType: OptiqSchema.TableEntry at 0", "INS MethodInvocation to ReturnStatement at 0", "INS IfStatement to Block at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: materializationKey to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS IfStatement to Block at 1", "INS SimpleType: OptiqSchema.TableEntry to VariableDeclarationStatement at 1", "INS NullLiteral to InfixExpression: != at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS InfixExpression: != to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: materializationKey to MethodInvocation at 1", "INS SimpleName: tableEntry to InfixExpression: != at 0", "INS Block to IfStatement at 1"]}, {"root": "UPDATE from Lattice to TileKey", "operations": ["UPD SimpleName: Lattice from Lattice to TileKey"]}, {"root": "MOVE from SimpleType: TileKey", "operations": ["MOV SimpleName: Lattice to SimpleType: TileKey at 0"]}, {"root": "UPDATE from String to Table", "operations": ["UPD SimpleName: String from String to Table", "UPD SimpleType: String from String to Table"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 1", "MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: put to MethodInvocation at 1", "INS QualifiedName: actor.keyByTile to MethodInvocation at 0", "INS SimpleName: newTileKey to MethodInvocation at 2", "INS SimpleName: materializationKey to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from sql to c", "operations": ["UPD SimpleName: sql from sql to c"]}, {"root": "UPDATE from sql to materializationKey", "operations": ["UPD SimpleName: sql from sql to materializationKey"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV MethodInvocation to InfixExpression: && at 1", "MOV MethodInvocation to InfixExpression: && at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "UPDATE from lattice to Double", "operations": ["UPD SimpleName: lattice from lattice to Double"]}, {"root": "UPDATE from sql to compare", "operations": ["UPD SimpleName: sql from sql to compare"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: t0 to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getStatistic to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS SimpleName: t1 to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getStatistic to MethodInvocation at 1"]}, {"root": "INS QualifiedName: actor.keyByTile to MethodInvocation at 0", "operations": ["INS QualifiedName: actor.keyByTile to MethodInvocation at 0"]}, {"root": "UPDATE from Lattice to Pair", "operations": ["UPD SimpleName: Lattice from Lattice to Pair", "UPD SimpleName: sql from sql to Pair"]}, {"root": "MOVE from SimpleType: Pair", "operations": ["MOV SimpleName: Lattice to SimpleType: Pair at 0"]}, {"root": "UPDATE from measureList to getRowCount", "operations": ["UPD SimpleName: measureList from measureList to getRowCount", "UPD SimpleName: groupSet from groupSet to getRowCount"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: measureList to MethodInvocation at 1", "MOV SimpleName: groupSet to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: queue to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: add to MethodInvocation at 1"]}, {"root": "UPDATE from schema to checkValid", "operations": ["UPD SimpleName: schema from schema to checkValid"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: schema to MethodInvocation at 0", "MOV SimpleName: create to MethodInvocation at 3", "MOV SimpleName: sql to MethodInvocation at 0"]}, {"root": "UPDATE from schema to of", "operations": ["UPD SimpleName: schema from schema to of"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: path to MethodInvocation at 2", "MOV SimpleName: schema to MethodInvocation at 1"]}, {"root": "UPDATE from path to tableEntry", "operations": ["UPD SimpleName: path from path to tableEntry"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "DEL SimpleName: materializedTable", "operations": ["DEL SimpleName: materializedTable"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: tableName", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: add", "DEL SimpleName: materializedTable", "DEL SimpleName: schema"]}, {"root": "DEL BooleanLiteral: true", "operations": ["DEL BooleanLiteral: true"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: materializedTable", "DEL Block", "DEL SimpleName: tableEntry", "DEL NullLiteral", "DEL InfixExpression: !=", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL NullLiteral", "DEL SimpleName: tableName", "DEL Assignment: =", "DEL SimpleName: tableEntry", "DEL Block", "DEL IfStatement", "DEL Assignment: =", "DEL Assignment: ="]}, {"root": "DEL QualifiedName: actor.tileKeys", "operations": ["DEL QualifiedName: actor.tileKeys"]}, {"root": "DEL InfixExpression: &&", "operations": ["DEL InfixExpression: &&"]}, {"root": "DEL QualifiedName: tileKey2.dimensions", "operations": ["DEL QualifiedName: tileKey2.dimensions"]}, {"root": "DEL QualifiedName: tileKey2.measures", "operations": ["DEL QualifiedName: tileKey2.measures"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: tileKey2", "DEL QualifiedName: tileKey2.dimensions", "DEL SimpleName: materializationKey", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL Assignment: =", "DEL StringLiteral: \"m\"", "DEL SimpleName: defineMaterialization", "DEL NullLiteral", "DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL FieldAccess", "operations": ["DEL SimpleName: dimensions", "DEL ThisExpression", "DEL FieldAccess"]}, {"root": "DEL SimpleName: dimensions", "operations": ["DEL SimpleName: dimensions"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: measures", "DEL SimpleName: measures", "DEL ThisExpression", "DEL FieldAccess", "DEL Assignment: ="]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: defineTile", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: sql", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: defineMaterialization", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL SimpleName: create"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Block", "DEL TagElement: @link", "DEL VariableDeclarationFragment", "DEL ParameterizedType: ImmutableList<Lattice.Measure>", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL TypeDeclaration: class", "DEL FieldDeclaration", "DEL SimpleName: TileKey", "DEL TextElement:  but a lattice is", "DEL Modifier: public", "DEL Modifier: final", "DEL Assignment: =", "DEL Javadoc", "DEL SimpleType: Lattice", "DEL SimpleName: dimensions", "DEL SimpleType: BitSet", "DEL VariableDeclarationFragment", "DEL SimpleName: TileKey", "DEL SimpleName: lattice", "DEL SimpleName: measures", "DEL ThisExpression", "DEL Modifier: public", "DEL FieldAccess", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL ParameterizedType: ImmutableList<Lattice.Measure>", "DEL TextElement: <p>Holds similar information to a ", "DEL FieldDeclaration", "DEL SimpleName: lattice", "DEL SimpleType: ImmutableList", "DEL Modifier: static", "DEL Modifier: public", "DEL QualifiedName: Lattice.Tile", "DEL SimpleType: BitSet", "DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL Modifier: public", "DEL TagElement", "DEL SimpleType: Lattice", "DEL SimpleName: BitSet", "DEL TextElement: immutable and tiles are not added after their creation. ", "DEL SimpleName: lattice", "DEL SimpleName: lattice", "DEL FieldDeclaration", "DEL SingleVariableDeclaration", "DEL TextElement: Definition of a particular combination of dimensions and measures of a", "DEL SimpleName: dimensions", "DEL Modifier: final", "DEL TextElement: lattice that is the basis of a materialization."]}]}}, {"MaterializationService_diff": {"operations": ["Insert ImportDeclaration(37) into CompilationUnit(1277) at 18", "Insert QualifiedName: org.eigenbase.util.Util(36) into ImportDeclaration(37) at 0", "Insert FieldDeclaration(191) into TypeDeclaration: class(1276) at 5", "Insert MethodDeclaration(1109) into TypeDeclaration: class(1276) at 10", "Insert Modifier: private(94) into FieldDeclaration(191) at 0", "Insert Modifier: static(95) into FieldDeclaration(191) at 1", "Insert Modifier: final(96) into FieldDeclaration(191) at 2", "Insert ParameterizedType: Comparator<Pair<OptiqSchema.TableEntry,TileKey>>(106) into FieldDeclaration(191) at 3", "Insert VariableDeclarationFragment(190) into FieldDeclaration(191) at 4", "Move VariableDeclarationStatement(196) into Block(598) at 11", "Move VariableDeclarationStatement(207) into Block(598) at 8", "Move Javadoc(543) into MethodDeclaration(1109) at 0", "Insert Modifier: public(643) into MethodDeclaration(1109) at 1", "Move ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(551) into MethodDeclaration(1109) at 2", "Insert SimpleName: defineTile(651) into MethodDeclaration(1109) at 3", "Move SingleVariableDeclaration(556) into MethodDeclaration(1109) at 4", "Move SingleVariableDeclaration(560) into MethodDeclaration(1109) at 5", "Move SingleVariableDeclaration(567) into MethodDeclaration(1109) at 6", "Move SingleVariableDeclaration(571) into MethodDeclaration(1109) at 7", "Move SingleVariableDeclaration(574) into MethodDeclaration(1109) at 8", "Insert SingleVariableDeclaration(676) into MethodDeclaration(1109) at 9", "Insert Block(1108) into MethodDeclaration(1109) at 10", "Insert SimpleType: Comparator(98) into ParameterizedType: Comparator<Pair<OptiqSchema.TableEntry,TileKey>>(106) at 0", "Insert ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(105) into ParameterizedType: Comparator<Pair<OptiqSchema.TableEntry,TileKey>>(106) at 1", "Insert SimpleName: C(107) into VariableDeclarationFragment(190) at 0", "Insert ClassInstanceCreation(189) into VariableDeclarationFragment(190) at 1", "Insert Modifier: final(233) into SingleVariableDeclaration(237) at 0", "Update SimpleName: tableName(135) to suggestedTableName", "Move IfStatement(416) into Block(598) at 8", "Move VariableDeclarationStatement(231) into Block(598) at 9", "Insert VariableDeclarationStatement(520) into Block(598) at 10", "Move ExpressionStatement(429) into Block(598) at 11", "Insert PrimitiveType: boolean(674) into SingleVariableDeclaration(676) at 0", "Insert SimpleName: exact(675) into SingleVariableDeclaration(676) at 1", "Insert VariableDeclarationStatement(681) into Block(1108) at 0", "Move VariableDeclarationStatement(599) into Block(1108) at 1", "Insert ExpressionStatement(703) into Block(1108) at 2", "Move IfStatement(642) into Block(1108) at 3", "Insert VariableDeclarationStatement(744) into Block(1108) at 4", "Move EnhancedForStatement(705) into Block(1108) at 5", "Insert IfStatement(953) into Block(1108) at 6", "Insert IfStatement(959) into Block(1108) at 7", "Insert VariableDeclarationStatement(971) into Block(1108) at 8", "Insert VariableDeclarationStatement(983) into Block(1108) at 9", "Insert EnhancedForStatement(1003) into Block(1108) at 10", "Insert ExpressionStatement(1008) into Block(1108) at 11", "Insert VariableDeclarationStatement(1023) into Block(1108) at 12", "Insert VariableDeclarationStatement(1034) into Block(1108) at 13", "Move ExpressionStatement(940) into Block(1108) at 14", "Insert IfStatement(1105) into Block(1108) at 15", "Move ReturnStatement(707) into Block(1108) at 16", "Insert SimpleName: Comparator(97) into SimpleType: Comparator(98) at 0", "Insert SimpleType: Pair(100) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(105) at 0", "Insert SimpleType: OptiqSchema.TableEntry(102) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(105) at 1", "Insert SimpleType: TileKey(104) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(105) at 2", "Insert ParameterizedType: Comparator<Pair<OptiqSchema.TableEntry,TileKey>>(117) into ClassInstanceCreation(189) at 0", "Insert AnonymousClassDeclaration(188) into ClassInstanceCreation(189) at 1", "Insert Modifier: final(289) into VariableDeclarationStatement(303) at 0", "Move ParameterizedType: Pair<String,Table>(223) into VariableDeclarationStatement(303) at 1", "Move SimpleType: Table(198) into VariableDeclarationStatement(314) at 0", "Insert SimpleType: String(493) into VariableDeclarationStatement(505) at 1", "Insert Modifier: final(506) into VariableDeclarationStatement(520) at 0", "Move SimpleType: OptiqSchema.TableEntry(209) into VariableDeclarationStatement(520) at 1", "Insert VariableDeclarationFragment(519) into VariableDeclarationStatement(520) at 2", "Move SimpleType: MaterializationKey(601) into VariableDeclarationStatement(681) at 0", "Insert VariableDeclarationFragment(680) into VariableDeclarationStatement(681) at 1", "Insert Assignment: =(702) into ExpressionStatement(703) at 0", "Insert Modifier: final(729) into VariableDeclarationStatement(744) at 0", "Insert SimpleType: TileKey(731) into VariableDeclarationStatement(744) at 1", "Insert VariableDeclarationFragment(743) into VariableDeclarationStatement(744) at 2", "Insert MethodInvocation(752) into EnhancedForStatement(797) at 1", "Insert PrefixExpression: !(799) into IfStatement(953) at 0", "Insert Block(952) into IfStatement(953) at 1", "Insert PrefixExpression: !(955) into IfStatement(959) at 0", "Insert Block(958) into IfStatement(959) at 1", "Insert Modifier: final(960) into VariableDeclarationStatement(971) at 0", "Insert ParameterizedType: List<TileKey>(965) into VariableDeclarationStatement(971) at 1", "Insert VariableDeclarationFragment(970) into VariableDeclarationStatement(971) at 2", "Insert Modifier: final(972) into VariableDeclarationStatement(983) at 0", "Insert ParameterizedType: LinkedHashSet<Lattice.Measure>(977) into VariableDeclarationStatement(983) at 1", "Insert VariableDeclarationFragment(982) into VariableDeclarationStatement(983) at 2", "Insert SingleVariableDeclaration(987) into EnhancedForStatement(1003) at 0", "Insert MethodInvocation(991) into EnhancedForStatement(1003) at 1", "Insert Block(1002) into EnhancedForStatement(1003) at 2", "Insert MethodInvocation(1007) into ExpressionStatement(1008) at 0", "Insert Modifier: final(1009) into VariableDeclarationStatement(1023) at 0", "Insert SimpleType: TileKey(1011) into VariableDeclarationStatement(1023) at 1", "Insert VariableDeclarationFragment(1022) into VariableDeclarationStatement(1023) at 2", "Insert Modifier: final(1024) into VariableDeclarationStatement(1034) at 0", "Insert SimpleType: String(1026) into VariableDeclarationStatement(1034) at 1", "Insert VariableDeclarationFragment(1033) into VariableDeclarationStatement(1034) at 2", "Insert InfixExpression: !=(1053) into IfStatement(1105) at 0", "Insert Block(1104) into IfStatement(1105) at 1", "Insert SimpleName: Pair(99) into SimpleType: Pair(100) at 0", "Insert QualifiedName: OptiqSchema.TableEntry(101) into SimpleType: OptiqSchema.TableEntry(102) at 0", "Insert SimpleName: TileKey(103) into SimpleType: TileKey(104) at 0", "Insert SimpleType: Comparator(109) into ParameterizedType: Comparator<Pair<OptiqSchema.TableEntry,TileKey>>(117) at 0", "Insert ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(116) into ParameterizedType: Comparator<Pair<OptiqSchema.TableEntry,TileKey>>(117) at 1", "Insert MethodDeclaration(187) into AnonymousClassDeclaration(188) at 0", "Insert SimpleName: pair(297) into VariableDeclarationFragment(302) at 0", "Insert MethodInvocation(301) into VariableDeclarationFragment(302) at 1", "Update SimpleName: tableEntry(210) to materializedTable", "Move ConditionalExpression(238) into VariableDeclarationFragment(313) at 1", "Insert SimpleName: String(492) into SimpleType: String(493) at 0", "Update SimpleName: pair(224) to tableName", "Insert SimpleName: tableEntry(509) into VariableDeclarationFragment(519) at 0", "Insert MethodInvocation(518) into VariableDeclarationFragment(519) at 1", "Move SimpleName: materializationKey(602) into VariableDeclarationFragment(680) at 0", "Insert SimpleName: materializationKey(697) into Assignment: =(702) at 0", "Insert MethodInvocation(701) into Assignment: =(702) at 1", "Insert SimpleName: TileKey(730) into SimpleType: TileKey(731) at 0", "Insert SimpleName: tileKey0(732) into VariableDeclarationFragment(743) at 0", "Insert ClassInstanceCreation(742) into VariableDeclarationFragment(743) at 1", "Insert SimpleType: TileKey(746) into SingleVariableDeclaration(748) at 0", "Update SimpleName: tileKey2(645) to tileKey1", "Insert QualifiedName: actor.tilesByDimensionality(749) into MethodInvocation(752) at 0", "Insert SimpleName: get(750) into MethodInvocation(752) at 1", "Insert SimpleName: tileKey0(751) into MethodInvocation(752) at 2", "Insert AssertStatement(757) into Block(796) at 0", "Insert SimpleName: exact(798) into PrefixExpression: !(799) at 0", "Insert VariableDeclarationStatement(826) into Block(952) at 0", "Insert EnhancedForStatement(900) into Block(952) at 1", "Insert IfStatement(951) into Block(952) at 2", "Insert SimpleName: create(954) into PrefixExpression: !(955) at 0", "Insert ReturnStatement(957) into Block(958) at 0", "Insert SimpleType: List(962) into ParameterizedType: List<TileKey>(965) at 0", "Insert SimpleType: TileKey(964) into ParameterizedType: List<TileKey>(965) at 1", "Insert SimpleName: obsolete(966) into VariableDeclarationFragment(970) at 0", "Insert MethodInvocation(969) into VariableDeclarationFragment(970) at 1", "Update SimpleType: ImmutableList(905) to LinkedHashSet", "Move SimpleType: ImmutableList(905) into ParameterizedType: LinkedHashSet<Lattice.Measure>(977) at 0", "Move SimpleType: Lattice.Measure(925) into ParameterizedType: LinkedHashSet<Lattice.Measure>(977) at 1", "Update SimpleName: measures(909) to measureSet", "Move SimpleName: measures(909) into VariableDeclarationFragment(982) at 0", "Insert MethodInvocation(981) into VariableDeclarationFragment(982) at 1", "Insert SimpleType: TileKey(985) into SingleVariableDeclaration(987) at 0", "Insert SimpleName: tileKey1(986) into SingleVariableDeclaration(987) at 1", "Insert QualifiedName: actor.tilesByDimensionality(988) into MethodInvocation(991) at 0", "Insert SimpleName: get(989) into MethodInvocation(991) at 1", "Insert SimpleName: tileKey0(990) into MethodInvocation(991) at 2", "Insert ExpressionStatement(996) into Block(1002) at 0", "Insert ExpressionStatement(1001) into Block(1002) at 1", "Insert SimpleName: measureSet(1004) into MethodInvocation(1007) at 0", "Insert SimpleName: addAll(1005) into MethodInvocation(1007) at 1", "Insert SimpleName: measureList(1006) into MethodInvocation(1007) at 2", "Insert SimpleName: TileKey(1010) into SimpleType: TileKey(1011) at 0", "Insert SimpleName: newTileKey(1012) into VariableDeclarationFragment(1022) at 0", "Insert ClassInstanceCreation(1021) into VariableDeclarationFragment(1022) at 1", "Update SimpleName: ImmutableList(922) to String", "Move SimpleName: ImmutableList(922) into SimpleType: String(1026) at 0", "Insert SimpleName: sql(1027) into VariableDeclarationFragment(1033) at 0", "Insert MethodInvocation(1032) into VariableDeclarationFragment(1033) at 1", "Insert SimpleName: materializationKey(1035) into Assignment: =(1049) at 0", "Insert MethodInvocation(1048) into Assignment: =(1049) at 1", "Insert SimpleName: materializationKey(1051) into InfixExpression: !=(1053) at 0", "Insert NullLiteral(1052) into InfixExpression: !=(1053) at 1", "Insert VariableDeclarationStatement(1062) into Block(1104) at 0", "Insert IfStatement(1103) into Block(1104) at 1", "Insert SimpleName: Comparator(108) into SimpleType: Comparator(109) at 0", "Insert SimpleType: Pair(111) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(116) at 0", "Insert SimpleType: OptiqSchema.TableEntry(113) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(116) at 1", "Insert SimpleType: TileKey(115) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(116) at 2", "Move Modifier: public(544) into MethodDeclaration(187) at 0", "Insert PrimitiveType: int(119) into MethodDeclaration(187) at 1", "Insert SimpleName: compare(120) into MethodDeclaration(187) at 2", "Insert SingleVariableDeclaration(129) into MethodDeclaration(187) at 3", "Insert SingleVariableDeclaration(138) into MethodDeclaration(187) at 4", "Insert Block(186) into MethodDeclaration(187) at 5", "Insert SimpleName: schema(298) into MethodInvocation(301) at 0", "Insert SimpleName: getTableBySql(299) into MethodInvocation(301) at 1", "Insert SimpleName: viewSql(300) into MethodInvocation(301) at 2", "Insert SimpleName: Schemas(495) into MethodInvocation(503) at 0", "Insert SimpleName: uniqueTableName(496) into MethodInvocation(503) at 1", "Insert MethodInvocation(502) into MethodInvocation(503) at 3", "Move SimpleName: schema(418) into MethodInvocation(518) at 0", "Move SimpleName: add(419) into MethodInvocation(518) at 1", "Move SimpleName: tableName(420) into MethodInvocation(518) at 2", "Move SimpleName: materializedTable(421) into MethodInvocation(518) at 3", "Insert MethodInvocation(517) into MethodInvocation(518) at 4", "Insert QualifiedName: actor.keyByTile(698) into MethodInvocation(701) at 0", "Update SimpleName: schema(604) to get", "Move SimpleName: schema(604) into MethodInvocation(701) at 1", "Move SimpleName: tileKey(605) into MethodInvocation(701) at 2", "Move SimpleType: TileKey(644) into ClassInstanceCreation(742) at 0", "Insert SimpleName: lattice(735) into ClassInstanceCreation(742) at 1", "Insert SimpleName: groupSet(736) into ClassInstanceCreation(742) at 2", "Insert MethodInvocation(741) into ClassInstanceCreation(742) at 3", "Insert SimpleName: TileKey(745) into SimpleType: TileKey(746) at 0", "Insert MethodInvocation(756) into AssertStatement(757) at 0", "Insert MethodInvocation(761) into IfStatement(795) at 0", "Insert Modifier: final(800) into VariableDeclarationStatement(826) at 0", "Insert ParameterizedType: PriorityQueue<Pair<OptiqSchema.TableEntry,TileKey>>(810) into VariableDeclarationStatement(826) at 1", "Insert VariableDeclarationFragment(825) into VariableDeclarationStatement(826) at 2", "Insert SingleVariableDeclaration(835) into EnhancedForStatement(900) at 0", "Insert MethodInvocation(838) into EnhancedForStatement(900) at 1", "Insert Block(899) into EnhancedForStatement(900) at 2", "Insert PrefixExpression: !(904) into IfStatement(951) at 0", "Insert Block(950) into IfStatement(951) at 1", "Insert NullLiteral(956) into ReturnStatement(957) at 0", "Update SimpleName: BitSet(897) to List", "Move SimpleName: BitSet(897) into SimpleType: List(962) at 0", "Insert SimpleName: TileKey(963) into SimpleType: TileKey(964) at 0", "Insert SimpleName: Lists(967) into MethodInvocation(969) at 0", "Insert SimpleName: newArrayList(968) into MethodInvocation(969) at 1", "Update SimpleName: ImmutableList(904) to LinkedHashSet", "Insert SimpleName: Sets(979) into MethodInvocation(981) at 0", "Insert SimpleName: newLinkedHashSet(980) into MethodInvocation(981) at 1", "Insert SimpleName: TileKey(984) into SimpleType: TileKey(985) at 0", "Insert MethodInvocation(995) into ExpressionStatement(996) at 0", "Insert MethodInvocation(1000) into ExpressionStatement(1001) at 0", "Insert SimpleType: TileKey(1014) into ClassInstanceCreation(1021) at 0", "Insert SimpleName: lattice(1015) into ClassInstanceCreation(1021) at 1", "Insert SimpleName: groupSet(1016) into ClassInstanceCreation(1021) at 2", "Insert MethodInvocation(1020) into ClassInstanceCreation(1021) at 3", "Insert SimpleName: lattice(1028) into MethodInvocation(1032) at 0", "Insert SimpleName: sql(1029) into MethodInvocation(1032) at 1", "Insert SimpleName: groupSet(1030) into MethodInvocation(1032) at 2", "Insert QualifiedName: newTileKey.measures(1031) into MethodInvocation(1032) at 3", "Insert SimpleName: defineMaterialization(1036) into MethodInvocation(1048) at 0", "Insert SimpleName: schema(1037) into MethodInvocation(1048) at 1", "Insert SimpleName: newTileKey(1038) into MethodInvocation(1048) at 2", "Insert SimpleName: sql(1039) into MethodInvocation(1048) at 3", "Move MethodInvocation(610) into MethodInvocation(1048) at 4", "Move InfixExpression: +(613) into MethodInvocation(1048) at 5", "Insert BooleanLiteral: true(1047) into MethodInvocation(1048) at 6", "Insert Modifier: final(1054) into VariableDeclarationStatement(1062) at 0", "Insert SimpleType: OptiqSchema.TableEntry(1056) into VariableDeclarationStatement(1062) at 1", "Insert VariableDeclarationFragment(1061) into VariableDeclarationStatement(1062) at 2", "Insert InfixExpression: !=(1065) into IfStatement(1103) at 0", "Insert Block(1102) into IfStatement(1103) at 1", "Insert SimpleName: Pair(110) into SimpleType: Pair(111) at 0", "Insert QualifiedName: OptiqSchema.TableEntry(112) into SimpleType: OptiqSchema.TableEntry(113) at 0", "Insert SimpleName: TileKey(114) into SimpleType: TileKey(115) at 0", "Insert ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(127) into SingleVariableDeclaration(129) at 0", "Insert SimpleName: o0(128) into SingleVariableDeclaration(129) at 1", "Insert ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(136) into SingleVariableDeclaration(138) at 0", "Insert SimpleName: o1(137) into SingleVariableDeclaration(138) at 1", "Insert VariableDeclarationStatement(147) into Block(186) at 0", "Insert VariableDeclarationStatement(156) into Block(186) at 1", "Insert VariableDeclarationStatement(173) into Block(186) at 2", "Insert IfStatement(180) into Block(186) at 3", "Insert ReturnStatement(185) into Block(186) at 4", "Update SimpleName: getTable(226) to Util", "Move SimpleName: getTable(226) into MethodInvocation(502) at 0", "Insert SimpleName: first(499) into MethodInvocation(502) at 1", "Update SimpleName: tableName(227) to suggestedTableName", "Move SimpleName: tableName(227) into MethodInvocation(502) at 2", "Insert StringLiteral: \"m\"(501) into MethodInvocation(502) at 3", "Insert SimpleName: ImmutableList(514) into MethodInvocation(517) at 0", "Insert SimpleName: of(515) into MethodInvocation(517) at 1", "Insert SimpleName: viewSql(516) into MethodInvocation(517) at 2", "Update QualifiedName: actor.tileKeys(490) to actor.keyByTile", "Update SimpleName: add(491) to put", "Insert QualifiedName: materialization.key(591) into MethodInvocation(592) at 3", "Insert SimpleName: ImmutableList(737) into MethodInvocation(741) at 0", "Move SimpleType: Lattice.Measure(907) into MethodInvocation(741) at 1", "Insert SimpleName: of(740) into MethodInvocation(741) at 2", "Insert QualifiedName: tileKey1.dimensions(753) into MethodInvocation(756) at 0", "Insert SimpleName: equals(754) into MethodInvocation(756) at 1", "Insert SimpleName: groupSet(755) into MethodInvocation(756) at 2", "Insert SimpleName: allSatisfiable(758) into MethodInvocation(761) at 0", "Insert SimpleName: measureList(759) into MethodInvocation(761) at 1", "Insert SimpleName: tileKey1(760) into MethodInvocation(761) at 2", "Insert IfStatement(793) into Block(794) at 1", "Insert SimpleType: PriorityQueue(802) into ParameterizedType: PriorityQueue<Pair<OptiqSchema.TableEntry,TileKey>>(810) at 0", "Insert ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(809) into ParameterizedType: PriorityQueue<Pair<OptiqSchema.TableEntry,TileKey>>(810) at 1", "Insert SimpleName: queue(811) into VariableDeclarationFragment(825) at 0", "Insert ClassInstanceCreation(824) into VariableDeclarationFragment(825) at 1", "Insert ParameterizedType: Map.Entry<TileKey,MaterializationKey>(833) into SingleVariableDeclaration(835) at 0", "Insert SimpleName: entry(834) into SingleVariableDeclaration(835) at 1", "Insert QualifiedName: actor.keyByTile(836) into MethodInvocation(838) at 0", "Insert SimpleName: entrySet(837) into MethodInvocation(838) at 1", "Insert VariableDeclarationStatement(847) into Block(899) at 0", "Insert IfStatement(898) into Block(899) at 1", "Insert MethodInvocation(903) into PrefixExpression: !(904) at 0", "Insert VariableDeclarationStatement(918) into Block(950) at 0", "Insert EnhancedForStatement(947) into Block(950) at 1", "Insert ReturnStatement(949) into Block(950) at 2", "Insert SimpleName: measureSet(992) into MethodInvocation(995) at 0", "Insert SimpleName: addAll(993) into MethodInvocation(995) at 1", "Insert QualifiedName: tileKey1.measures(994) into MethodInvocation(995) at 2", "Insert SimpleName: obsolete(997) into MethodInvocation(1000) at 0", "Insert SimpleName: add(998) into MethodInvocation(1000) at 1", "Insert SimpleName: tileKey1(999) into MethodInvocation(1000) at 2", "Update SimpleName: Lattice(914) to TileKey", "Move SimpleName: Lattice(914) into SimpleType: TileKey(1014) at 0", "Insert SimpleName: ImmutableList(1017) into MethodInvocation(1020) at 0", "Insert SimpleName: copyOf(1018) into MethodInvocation(1020) at 1", "Insert SimpleName: measureSet(1019) into MethodInvocation(1020) at 2", "Insert QualifiedName: OptiqSchema.TableEntry(1055) into SimpleType: OptiqSchema.TableEntry(1056) at 0", "Insert SimpleName: tableEntry(1057) into VariableDeclarationFragment(1061) at 0", "Insert MethodInvocation(1060) into VariableDeclarationFragment(1061) at 1", "Insert SimpleName: tableEntry(1063) into InfixExpression: !=(1065) at 0", "Insert NullLiteral(1064) into InfixExpression: !=(1065) at 1", "Insert EnhancedForStatement(1083) into Block(1102) at 0", "Insert ExpressionStatement(1089) into Block(1102) at 1", "Move ExpressionStatement(946) into Block(1102) at 2", "Insert ReturnStatement(1101) into Block(1102) at 3", "Insert SimpleType: Pair(122) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(127) at 0", "Insert SimpleType: OptiqSchema.TableEntry(124) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(127) at 1", "Insert SimpleType: TileKey(126) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(127) at 2", "Insert SimpleType: Pair(131) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(136) at 0", "Insert SimpleType: OptiqSchema.TableEntry(133) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(136) at 1", "Insert SimpleType: TileKey(135) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(136) at 2", "Insert Modifier: final(139) into VariableDeclarationStatement(147) at 0", "Insert SimpleType: Table(141) into VariableDeclarationStatement(147) at 1", "Insert VariableDeclarationFragment(146) into VariableDeclarationStatement(147) at 2", "Insert Modifier: final(148) into VariableDeclarationStatement(156) at 0", "Update SimpleType: String(576) to Table", "Move SimpleType: String(576) into VariableDeclarationStatement(156) at 1", "Insert VariableDeclarationFragment(155) into VariableDeclarationStatement(156) at 2", "Insert PrimitiveType: int(157) into VariableDeclarationStatement(173) at 0", "Move VariableDeclarationFragment(583) into VariableDeclarationStatement(173) at 1", "Insert InfixExpression: !=(176) into IfStatement(180) at 0", "Insert Block(179) into IfStatement(180) at 1", "Insert MethodInvocation(184) into ReturnStatement(185) at 0", "Insert InfixExpression: !=(771) into IfStatement(793) at 0", "Insert Block(792) into IfStatement(793) at 1", "Insert SimpleName: PriorityQueue(801) into SimpleType: PriorityQueue(802) at 0", "Insert SimpleType: Pair(804) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(809) at 0", "Insert SimpleType: OptiqSchema.TableEntry(806) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(809) at 1", "Insert SimpleType: TileKey(808) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(809) at 2", "Insert ParameterizedType: PriorityQueue<Pair<OptiqSchema.TableEntry,TileKey>>(821) into ClassInstanceCreation(824) at 0", "Insert NumberLiteral: 1(822) into ClassInstanceCreation(824) at 1", "Insert SimpleName: C(823) into ClassInstanceCreation(824) at 2", "Insert SimpleType: Map.Entry(828) into ParameterizedType: Map.Entry<TileKey,MaterializationKey>(833) at 0", "Insert SimpleType: TileKey(830) into ParameterizedType: Map.Entry<TileKey,MaterializationKey>(833) at 1", "Insert SimpleType: MaterializationKey(832) into ParameterizedType: Map.Entry<TileKey,MaterializationKey>(833) at 2", "Insert Modifier: final(839) into VariableDeclarationStatement(847) at 0", "Insert SimpleType: TileKey(841) into VariableDeclarationStatement(847) at 1", "Insert VariableDeclarationFragment(846) into VariableDeclarationStatement(847) at 2", "Insert InfixExpression: &&(867) into IfStatement(898) at 0", "Insert Block(897) into IfStatement(898) at 1", "Insert SimpleName: queue(901) into MethodInvocation(903) at 0", "Insert SimpleName: isEmpty(902) into MethodInvocation(903) at 1", "Insert Modifier: final(905) into VariableDeclarationStatement(918) at 0", "Insert ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(912) into VariableDeclarationStatement(918) at 1", "Insert VariableDeclarationFragment(917) into VariableDeclarationStatement(918) at 2", "Insert SingleVariableDeclaration(927) into EnhancedForStatement(947) at 0", "Insert SimpleName: queue(928) into EnhancedForStatement(947) at 1", "Insert Block(946) into EnhancedForStatement(947) at 2", "Insert SimpleName: best(948) into ReturnStatement(949) at 0", "Insert SimpleName: checkValid(1058) into MethodInvocation(1060) at 0", "Insert SimpleName: materializationKey(1059) into MethodInvocation(1060) at 1", "Insert SingleVariableDeclaration(1069) into EnhancedForStatement(1083) at 0", "Insert SimpleName: obsolete(1070) into EnhancedForStatement(1083) at 1", "Insert Block(1082) into EnhancedForStatement(1083) at 2", "Insert MethodInvocation(1088) into ExpressionStatement(1089) at 0", "Insert MethodInvocation(1094) into ExpressionStatement(1095) at 0", "Insert MethodInvocation(1100) into ReturnStatement(1101) at 0", "Insert SimpleName: Pair(121) into SimpleType: Pair(122) at 0", "Insert QualifiedName: OptiqSchema.TableEntry(123) into SimpleType: OptiqSchema.TableEntry(124) at 0", "Insert SimpleName: TileKey(125) into SimpleType: TileKey(126) at 0", "Insert SimpleName: Pair(130) into SimpleType: Pair(131) at 0", "Insert QualifiedName: OptiqSchema.TableEntry(132) into SimpleType: OptiqSchema.TableEntry(133) at 0", "Insert SimpleName: TileKey(134) into SimpleType: TileKey(135) at 0", "Insert SimpleName: Table(140) into SimpleType: Table(141) at 0", "Insert SimpleName: t0(142) into VariableDeclarationFragment(146) at 0", "Insert MethodInvocation(145) into VariableDeclarationFragment(146) at 1", "Update SimpleName: String(575) to Table", "Insert SimpleName: t1(151) into VariableDeclarationFragment(155) at 0", "Insert MethodInvocation(154) into VariableDeclarationFragment(155) at 1", "Update SimpleName: sql(577) to c", "Insert SimpleName: c(174) into InfixExpression: !=(176) at 0", "Insert NumberLiteral: 0(175) into InfixExpression: !=(176) at 1", "Insert ReturnStatement(178) into Block(179) at 0", "Insert QualifiedName: o0.left.name(181) into MethodInvocation(184) at 0", "Insert SimpleName: compareTo(182) into MethodInvocation(184) at 1", "Insert QualifiedName: o1.left.name(183) into MethodInvocation(184) at 2", "Update SimpleName: sql(658) to materializationKey", "Insert SimpleName: materializationKey(769) into InfixExpression: !=(771) at 0", "Insert NullLiteral(770) into InfixExpression: !=(771) at 1", "Insert VariableDeclarationStatement(780) into Block(792) at 0", "Insert IfStatement(791) into Block(792) at 1", "Insert SimpleName: Pair(803) into SimpleType: Pair(804) at 0", "Insert QualifiedName: OptiqSchema.TableEntry(805) into SimpleType: OptiqSchema.TableEntry(806) at 0", "Insert SimpleName: TileKey(807) into SimpleType: TileKey(808) at 0", "Insert SimpleType: PriorityQueue(813) into ParameterizedType: PriorityQueue<Pair<OptiqSchema.TableEntry,TileKey>>(821) at 0", "Insert ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(820) into ParameterizedType: PriorityQueue<Pair<OptiqSchema.TableEntry,TileKey>>(821) at 1", "Insert QualifiedName: Map.Entry(827) into SimpleType: Map.Entry(828) at 0", "Insert SimpleName: TileKey(829) into SimpleType: TileKey(830) at 0", "Insert SimpleName: MaterializationKey(831) into SimpleType: MaterializationKey(832) at 0", "Insert SimpleName: TileKey(840) into SimpleType: TileKey(841) at 0", "Insert SimpleName: tileKey2(842) into VariableDeclarationFragment(846) at 0", "Insert MethodInvocation(845) into VariableDeclarationFragment(846) at 1", "Insert InfixExpression: &&(862) into InfixExpression: &&(867) at 0", "Move MethodInvocation(656) into InfixExpression: &&(867) at 1", "Insert ExpressionStatement(873) into Block(897) at 0", "Move VariableDeclarationStatement(690) into Block(897) at 1", "Move IfStatement(701) into Block(897) at 2", "Insert SimpleType: Pair(907) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(912) at 0", "Insert SimpleType: OptiqSchema.TableEntry(909) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(912) at 1", "Insert SimpleType: TileKey(911) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(912) at 2", "Insert SimpleName: best(913) into VariableDeclarationFragment(917) at 0", "Insert MethodInvocation(916) into VariableDeclarationFragment(917) at 1", "Insert ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(925) into SingleVariableDeclaration(927) at 0", "Insert SimpleName: pair(926) into SingleVariableDeclaration(927) at 1", "Insert ExpressionStatement(945) into Block(946) at 0", "Insert SimpleType: TileKey(1067) into SingleVariableDeclaration(1069) at 0", "Insert SimpleName: tileKey1(1068) into SingleVariableDeclaration(1069) at 1", "Insert ExpressionStatement(1076) into Block(1082) at 0", "Insert ExpressionStatement(1081) into Block(1082) at 1", "Insert QualifiedName: actor.tilesByDimensionality(1084) into MethodInvocation(1088) at 0", "Insert SimpleName: put(1085) into MethodInvocation(1088) at 1", "Insert SimpleName: tileKey0(1086) into MethodInvocation(1088) at 2", "Insert SimpleName: newTileKey(1087) into MethodInvocation(1088) at 3", "Insert QualifiedName: actor.keyByTile(1090) into MethodInvocation(1094) at 0", "Insert SimpleName: put(1091) into MethodInvocation(1094) at 1", "Insert SimpleName: newTileKey(1092) into MethodInvocation(1094) at 2", "Insert SimpleName: materializationKey(1093) into MethodInvocation(1094) at 3", "Insert SimpleName: Pair(1096) into MethodInvocation(1100) at 0", "Insert SimpleName: of(1097) into MethodInvocation(1100) at 1", "Insert SimpleName: tableEntry(1098) into MethodInvocation(1100) at 2", "Insert SimpleName: newTileKey(1099) into MethodInvocation(1100) at 3", "Insert QualifiedName: o0.left(143) into MethodInvocation(145) at 0", "Insert SimpleName: getTable(144) into MethodInvocation(145) at 1", "Insert QualifiedName: o1.left(152) into MethodInvocation(154) at 0", "Insert SimpleName: getTable(153) into MethodInvocation(154) at 1", "Update SimpleName: lattice(578) to Double", "Update SimpleName: sql(579) to compare", "Insert MethodInvocation(165) into MethodInvocation(171) at 2", "Insert MethodInvocation(170) into MethodInvocation(171) at 3", "Insert SimpleName: c(177) into ReturnStatement(178) at 0", "Insert QualifiedName: actor.keyByTile(763) into MethodInvocation(766) at 0", "Update SimpleName: lattice(659) to get", "Update SimpleName: sql(660) to tileKey1", "Insert Modifier: final(772) into VariableDeclarationStatement(780) at 0", "Insert SimpleType: OptiqSchema.TableEntry(774) into VariableDeclarationStatement(780) at 1", "Insert VariableDeclarationFragment(779) into VariableDeclarationStatement(780) at 2", "Insert InfixExpression: !=(783) into IfStatement(791) at 0", "Insert Block(790) into IfStatement(791) at 1", "Insert SimpleName: PriorityQueue(812) into SimpleType: PriorityQueue(813) at 0", "Insert SimpleType: Pair(815) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(820) at 0", "Insert SimpleType: OptiqSchema.TableEntry(817) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(820) at 1", "Insert SimpleType: TileKey(819) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(820) at 2", "Insert SimpleName: entry(843) into MethodInvocation(845) at 0", "Insert SimpleName: getKey(844) into MethodInvocation(845) at 1", "Insert InfixExpression: &&(856) into InfixExpression: &&(862) at 0", "Insert PrefixExpression: !(861) into InfixExpression: &&(862) at 1", "Insert Assignment: =(872) into ExpressionStatement(873) at 0", "Update SimpleName: Lattice(890) to Pair", "Move SimpleName: Lattice(890) into SimpleType: Pair(907) at 0", "Insert QualifiedName: OptiqSchema.TableEntry(908) into SimpleType: OptiqSchema.TableEntry(909) at 0", "Insert SimpleName: TileKey(910) into SimpleType: TileKey(911) at 0", "Insert SimpleName: queue(914) into MethodInvocation(916) at 0", "Insert SimpleName: peek(915) into MethodInvocation(916) at 1", "Insert SimpleType: Pair(920) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(925) at 0", "Insert SimpleType: OptiqSchema.TableEntry(922) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(925) at 1", "Insert SimpleType: TileKey(924) into ParameterizedType: Pair<OptiqSchema.TableEntry,TileKey>(925) at 2", "Insert MethodInvocation(944) into ExpressionStatement(945) at 0", "Insert SimpleName: TileKey(1066) into SimpleType: TileKey(1067) at 0", "Insert MethodInvocation(1075) into ExpressionStatement(1076) at 0", "Insert MethodInvocation(1080) into ExpressionStatement(1081) at 0", "Insert MethodInvocation(163) into MethodInvocation(165) at 0", "Update SimpleName: groupSet(580) to getRowCount", "Move SimpleName: groupSet(580) into MethodInvocation(165) at 1", "Insert MethodInvocation(168) into MethodInvocation(170) at 0", "Update SimpleName: measureList(581) to getRowCount", "Move SimpleName: measureList(581) into MethodInvocation(170) at 1", "Insert QualifiedName: OptiqSchema.TableEntry(773) into SimpleType: OptiqSchema.TableEntry(774) at 0", "Insert SimpleName: tableEntry(775) into VariableDeclarationFragment(779) at 0", "Insert MethodInvocation(778) into VariableDeclarationFragment(779) at 1", "Insert SimpleName: tableEntry(781) into InfixExpression: !=(783) at 0", "Insert NullLiteral(782) into InfixExpression: !=(783) at 1", "Insert ReturnStatement(789) into Block(790) at 0", "Insert SimpleName: Pair(814) into SimpleType: Pair(815) at 0", "Insert QualifiedName: OptiqSchema.TableEntry(816) into SimpleType: OptiqSchema.TableEntry(817) at 0", "Insert SimpleName: TileKey(818) into SimpleType: TileKey(819) at 0", "Insert InfixExpression: ==(850) into InfixExpression: &&(856) at 0", "Move MethodInvocation(652) into InfixExpression: &&(856) at 1", "Insert MethodInvocation(860) into PrefixExpression: !(861) at 0", "Insert SimpleName: materializationKey(868) into Assignment: =(872) at 0", "Insert MethodInvocation(871) into Assignment: =(872) at 1", "Insert ExpressionStatement(894) into Block(895) at 0", "Insert SimpleName: Pair(919) into SimpleType: Pair(920) at 0", "Insert QualifiedName: OptiqSchema.TableEntry(921) into SimpleType: OptiqSchema.TableEntry(922) at 0", "Insert SimpleName: TileKey(923) into SimpleType: TileKey(924) at 0", "Insert QualifiedName: System.out(929) into MethodInvocation(944) at 0", "Insert SimpleName: println(930) into MethodInvocation(944) at 1", "Insert InfixExpression: +(943) into MethodInvocation(944) at 2", "Insert QualifiedName: actor.tilesByDimensionality(1071) into MethodInvocation(1075) at 0", "Insert SimpleName: remove(1072) into MethodInvocation(1075) at 1", "Insert SimpleName: tileKey0(1073) into MethodInvocation(1075) at 2", "Insert SimpleName: tileKey1(1074) into MethodInvocation(1075) at 3", "Insert QualifiedName: actor.keyByTile(1077) into MethodInvocation(1080) at 0", "Insert SimpleName: remove(1078) into MethodInvocation(1080) at 1", "Insert SimpleName: tileKey1(1079) into MethodInvocation(1080) at 2", "Insert SimpleName: t0(161) into MethodInvocation(163) at 0", "Insert SimpleName: getStatistic(162) into MethodInvocation(163) at 1", "Insert SimpleName: t1(166) into MethodInvocation(168) at 0", "Insert SimpleName: getStatistic(167) into MethodInvocation(168) at 1", "Update SimpleName: schema(668) to checkValid", "Move SimpleName: schema(668) into MethodInvocation(778) at 0", "Insert SimpleName: materializationKey(777) into MethodInvocation(778) at 1", "Insert MethodInvocation(788) into ReturnStatement(789) at 0", "Insert QualifiedName: tileKey2.lattice(848) into InfixExpression: ==(850) at 0", "Insert SimpleName: lattice(849) into InfixExpression: ==(850) at 1", "Insert QualifiedName: tileKey2.dimensions(857) into MethodInvocation(860) at 0", "Insert SimpleName: equals(858) into MethodInvocation(860) at 1", "Insert SimpleName: groupSet(859) into MethodInvocation(860) at 2", "Insert SimpleName: entry(869) into MethodInvocation(871) at 0", "Insert SimpleName: getValue(870) into MethodInvocation(871) at 1", "Insert MethodInvocation(893) into ExpressionStatement(894) at 0", "Insert StringLiteral: \"table=\"(931) into InfixExpression: +(943) at 0", "Insert MethodInvocation(934) into InfixExpression: +(943) at 1", "Insert StringLiteral: \" \"(935) into InfixExpression: +(943) at 2", "Insert MethodInvocation(942) into InfixExpression: +(943) at 3", "Update SimpleName: sql(670) to Pair", "Move SimpleName: sql(670) into MethodInvocation(788) at 0", "Update SimpleName: schema(671) to of", "Move SimpleName: schema(671) into MethodInvocation(788) at 1", "Update SimpleName: path(672) to tableEntry", "Move SimpleName: path(672) into MethodInvocation(788) at 2", "Update SimpleName: create(678) to tileKey1", "Move SimpleName: create(678) into MethodInvocation(788) at 3", "Insert SimpleName: queue(886) into MethodInvocation(893) at 0", "Insert SimpleName: add(887) into MethodInvocation(893) at 1", "Move MethodInvocation(698) into MethodInvocation(893) at 2", "Insert QualifiedName: pair.left(932) into MethodInvocation(934) at 0", "Insert SimpleName: path(933) into MethodInvocation(934) at 1", "Insert MethodInvocation(940) into MethodInvocation(942) at 0", "Insert SimpleName: getRowCount(941) into MethodInvocation(942) at 1", "Insert MethodInvocation(938) into MethodInvocation(940) at 0", "Insert SimpleName: getStatistic(939) into MethodInvocation(940) at 1", "Insert QualifiedName: pair.left(936) into MethodInvocation(938) at 0", "Insert SimpleName: getTable(937) into MethodInvocation(938) at 1", "Delete SimpleName: materializedTable(199)", "Delete SimpleName: schema(409)", "Delete SimpleName: add(410)", "Delete SimpleName: tableName(411)", "Delete SimpleName: materializedTable(412)", "Delete MethodInvocation(413)", "Delete ExpressionStatement(414)", "Delete BooleanLiteral: true(228)", "Delete SimpleName: tableName(213)", "Delete NullLiteral(214)", "Delete InfixExpression: !=(215)", "Delete SimpleName: materializedTable(232)", "Delete Assignment: =(239)", "Delete ExpressionStatement(240)", "Delete SimpleName: tableEntry(417)", "Delete MethodInvocation(422)", "Delete Assignment: =(423)", "Delete ExpressionStatement(424)", "Delete Block(430)", "Delete SimpleName: tableEntry(431)", "Delete NullLiteral(432)", "Delete Assignment: =(433)", "Delete ExpressionStatement(434)", "Delete Block(435)", "Delete IfStatement(436)", "Delete QualifiedName: actor.tileKeys(647)", "Delete InfixExpression: &&(657)", "Delete QualifiedName: tileKey2.dimensions(661)", "Delete QualifiedName: tileKey2.measures(662)", "Delete SimpleName: materializationKey(666)", "Delete SimpleName: defineMaterialization(667)", "Delete SimpleName: tileKey2(669)", "Delete NullLiteral(673)", "Delete MethodInvocation(674)", "Delete StringLiteral: \"m\"(675)", "Delete QualifiedName: tileKey2.dimensions(676)", "Delete InfixExpression: +(677)", "Delete MethodInvocation(679)", "Delete Assignment: =(680)", "Delete ExpressionStatement(681)", "Delete ReturnStatement(699)", "Delete ThisExpression(935)", "Delete SimpleName: dimensions(936)", "Delete FieldAccess(937)", "Delete SimpleName: dimensions(938)", "Delete ThisExpression(941)", "Delete SimpleName: measures(942)", "Delete FieldAccess(943)", "Delete SimpleName: measures(944)", "Delete Assignment: =(945)", "Delete SimpleName: defineTile(552)", "Delete VariableDeclarationStatement(584)", "Delete SimpleName: defineMaterialization(603)", "Delete SimpleName: sql(606)", "Delete SimpleName: create(614)", "Delete MethodInvocation(615)", "Delete VariableDeclarationFragment(616)", "Delete VariableDeclarationStatement(617)", "Delete Block(708)", "Delete MethodDeclaration(709)", "Delete TextElement: Definition of a particular combination of dimensions and measures of a(876)", "Delete TextElement: lattice that is the basis of a materialization.(877)", "Delete TextElement: <p>Holds similar information to a (878)", "Delete QualifiedName: Lattice.Tile(879)", "Delete TagElement: @link(880)", "Delete TextElement:  but a lattice is(881)", "Delete TextElement: immutable and tiles are not added after their creation. (882)", "Delete TagElement(883)", "Delete Javadoc(884)", "Delete Modifier: public(885)", "Delete Modifier: static(886)", "Delete SimpleName: TileKey(887)", "Delete Modifier: public(888)", "Delete Modifier: final(889)", "Delete SimpleType: Lattice(891)", "Delete SimpleName: lattice(892)", "Delete VariableDeclarationFragment(893)", "Delete FieldDeclaration(894)", "Delete Modifier: public(895)", "Delete Modifier: final(896)", "Delete SimpleType: BitSet(898)", "Delete SimpleName: dimensions(899)", "Delete VariableDeclarationFragment(900)", "Delete FieldDeclaration(901)", "Delete Modifier: public(902)", "Delete Modifier: final(903)", "Delete ParameterizedType: ImmutableList<Lattice.Measure>(908)", "Delete VariableDeclarationFragment(910)", "Delete FieldDeclaration(911)", "Delete Modifier: public(912)", "Delete SimpleName: TileKey(913)", "Delete SimpleType: Lattice(915)", "Delete SimpleName: lattice(916)", "Delete SingleVariableDeclaration(917)", "Delete SimpleName: BitSet(918)", "Delete SimpleType: BitSet(919)", "Delete SimpleName: dimensions(920)", "Delete SingleVariableDeclaration(921)", "Delete SimpleType: ImmutableList(923)", "Delete ParameterizedType: ImmutableList<Lattice.Measure>(926)", "Delete SimpleName: measures(927)", "Delete SingleVariableDeclaration(928)", "Delete ThisExpression(929)", "Delete SimpleName: lattice(930)", "Delete FieldAccess(931)", "Delete SimpleName: lattice(932)", "Delete Assignment: =(933)", "Delete ExpressionStatement(934)", "Delete Block(947)", "Delete MethodDeclaration(948)", "Delete TypeDeclaration: class(949)"]}}, {"TileSuggester_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 5", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: builder to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS NumberLiteral: 1000L to InfixExpression: / at 1", "INS InfixExpression: >= to IfStatement at 0", "INS CastExpression to MethodInvocation at 3", "INS PrimitiveType: int to CastExpression at 0", "INS IfStatement to Block at 6", "INS QualifiedName: lattice.algorithmMaxMillis to InfixExpression: / at 0", "INS InfixExpression: / to ParenthesizedExpression at 0", "INS SimpleName: max to MethodInvocation at 1", "INS SimpleName: map to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 3", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS ParenthesizedExpression to CastExpression at 1", "INS QualifiedName: lattice.algorithmMaxMillis to InfixExpression: >= at 0", "INS Block to IfStatement at 1", "INS SimpleName: Math to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: map to MethodInvocation at 0", "INS ExpressionStatement to Block at 7"]}, {"root": "INS ExpressionStatement to Block at 8", "operations": ["INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: map to MethodInvocation at 0", "INS ExpressionStatement to Block at 8", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: ImmutableMap<Parameter,Object> to VariableDeclarationStatement at 1", "MOV Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from ImmutableMap<Parameter,Object> to ImmutableMap.Builder<Parameter,Object>", "operations": ["UPD ParameterizedType: ImmutableMap<Parameter,Object> from ImmutableMap<Parameter,Object> to ImmutableMap.Builder<Parameter,Object>"]}, {"root": "UPDATE from ImmutableMap to ImmutableMap.Builder", "operations": ["UPD SimpleType: ImmutableMap from ImmutableMap to ImmutableMap.Builder"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: map to VariableDeclarationFragment at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: ImmutableMap to MethodInvocation at 0", "MOV InfixExpression: * to MethodInvocation at 3", "MOV QualifiedName: Algorithm.ParameterEnum.timeLimitSeconds to MethodInvocation at 2", "MOV NumberLiteral: 3 to MethodInvocation at 3", "MOV NumberLiteral: 1 to MethodInvocation at 2", "MOV SimpleName: of to MethodInvocation at 1", "MOV QualifiedName: Algorithm.ParameterEnum.aggregateLimit to MethodInvocation at 2", "MOV QualifiedName: Algorithm.ParameterEnum.costLimit to MethodInvocation at 2"]}, {"root": "INS QualifiedName: ImmutableMap.Builder to SimpleType: ImmutableMap at 0", "operations": ["INS QualifiedName: ImmutableMap.Builder to SimpleType: ImmutableMap at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS SimpleName: build to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "UPDATE from of to put", "operations": ["UPD SimpleName: of from of to put"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: map to MethodInvocation at 0"]}, {"root": "DEL SimpleName: ImmutableMap", "operations": ["DEL SimpleName: ImmutableMap"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: Parameter", "DEL MethodInvocation", "DEL SimpleName: Parameter", "DEL SimpleName: Object", "DEL VariableDeclarationFragment", "DEL SimpleType: Object", "DEL VariableDeclarationStatement"]}]}}, {"TileSuggester_diff": {"operations": ["Insert VariableDeclarationStatement(177) into Block(274) at 5", "Insert IfStatement(197) into Block(274) at 6", "Insert ExpressionStatement(203) into Block(274) at 7", "Insert ExpressionStatement(211) into Block(274) at 8", "Move Modifier: final(164) into VariableDeclarationStatement(177) at 0", "Update ParameterizedType: ImmutableMap<Parameter,Object>(171) to ImmutableMap.Builder<Parameter,Object>", "Move ParameterizedType: ImmutableMap<Parameter,Object>(171) into VariableDeclarationStatement(177) at 1", "Insert VariableDeclarationFragment(176) into VariableDeclarationStatement(177) at 2", "Insert InfixExpression: >=(180) into IfStatement(197) at 0", "Insert Block(196) into IfStatement(197) at 1", "Insert MethodInvocation(202) into ExpressionStatement(203) at 0", "Insert MethodInvocation(210) into ExpressionStatement(211) at 0", "Update SimpleType: ImmutableMap(166) to ImmutableMap.Builder", "Move SimpleName: map(172) into VariableDeclarationFragment(176) at 0", "Insert MethodInvocation(175) into VariableDeclarationFragment(176) at 1", "Insert QualifiedName: lattice.algorithmMaxMillis(178) into InfixExpression: >=(180) at 0", "Insert NumberLiteral: 0(179) into InfixExpression: >=(180) at 1", "Insert ExpressionStatement(195) into Block(196) at 0", "Insert SimpleName: map(198) into MethodInvocation(202) at 0", "Insert SimpleName: put(199) into MethodInvocation(202) at 1", "Move QualifiedName: Algorithm.ParameterEnum.aggregateLimit(181) into MethodInvocation(202) at 2", "Move NumberLiteral: 3(182) into MethodInvocation(202) at 3", "Insert SimpleName: map(204) into MethodInvocation(210) at 0", "Insert SimpleName: put(205) into MethodInvocation(210) at 1", "Move QualifiedName: Algorithm.ParameterEnum.costLimit(183) into MethodInvocation(210) at 2", "Move InfixExpression: *(186) into MethodInvocation(210) at 3", "Insert QualifiedName: ImmutableMap.Builder(165) into SimpleType: ImmutableMap.Builder(166) at 0", "Move SimpleName: ImmutableMap(173) into MethodInvocation(175) at 0", "Insert SimpleName: builder(174) into MethodInvocation(175) at 1", "Insert MethodInvocation(194) into ExpressionStatement(195) at 0", "Insert MethodInvocation(232) into MethodInvocation(234) at 3", "Insert SimpleName: map(181) into MethodInvocation(194) at 0", "Update SimpleName: of(178) to put", "Move SimpleName: of(178) into MethodInvocation(194) at 1", "Move QualifiedName: Algorithm.ParameterEnum.timeLimitSeconds(179) into MethodInvocation(194) at 2", "Insert MethodInvocation(193) into MethodInvocation(194) at 3", "Move SimpleName: map(208) into MethodInvocation(232) at 0", "Insert SimpleName: build(231) into MethodInvocation(232) at 1", "Insert SimpleName: Math(184) into MethodInvocation(193) at 0", "Insert SimpleName: max(185) into MethodInvocation(193) at 1", "Move NumberLiteral: 1(180) into MethodInvocation(193) at 2", "Insert CastExpression(192) into MethodInvocation(193) at 3", "Insert PrimitiveType: int(187) into CastExpression(192) at 0", "Insert ParenthesizedExpression(191) into CastExpression(192) at 1", "Insert InfixExpression: /(190) into ParenthesizedExpression(191) at 0", "Insert QualifiedName: lattice.algorithmMaxMillis(188) into InfixExpression: /(190) at 0", "Insert NumberLiteral: 1000L(189) into InfixExpression: /(190) at 1", "Delete SimpleName: ImmutableMap(165)", "Delete SimpleName: Parameter(174)", "Delete SimpleType: Parameter(175)", "Delete SimpleName: Object(176)", "Delete SimpleType: Object(177)", "Delete MethodInvocation(187)", "Delete VariableDeclarationFragment(188)", "Delete VariableDeclarationStatement(189)"]}}, {"JsonLattice_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS PrimitiveType: long to FieldDeclaration at 2", "INS TextElement: Maximum time to run the algorithm. Default is -1, meaning no timeout.  to TagElement at 0", "INS SimpleName: algorithmMaxMillis to VariableDeclarationFragment at 0", "INS Javadoc to FieldDeclaration at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS TagElement to Javadoc at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS PrefixExpression: - to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS Modifier: public to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS TextElement: Returns the SQL query as a string, concatenating a list of lines if to TagElement at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS SimpleName: getSql to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS SimpleName: toString to MethodInvocation at 0", "INS SimpleName: sql to MethodInvocation at 1", "INS TextElement: necessary.  to TagElement at 1", "INS SimpleType: String to MethodDeclaration at 2", "INS TagElement to Javadoc at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS MethodInvocation to ConditionalExpression at 2", "INS CastExpression to MethodInvocation at 1", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: concatenate to MethodInvocation at 0", "INS ConditionalExpression to ConditionalExpression at 2", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS SimpleType: Object to SingleVariableDeclaration at 0", "INS NullLiteral to ConditionalExpression at 1", "INS NullLiteral to InfixExpression: == at 1", "INS InstanceofExpression to ConditionalExpression at 0", "INS TagElement to Javadoc at 0", "INS Modifier: static to MethodDeclaration at 1", "INS SimpleName: o to CastExpression at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: o to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: o to InfixExpression: == at 0", "INS CastExpression to ConditionalExpression at 1", "INS SimpleName: toString to MethodDeclaration at 3", "INS TextElement: Converts a string or a list of strings to a string. The list notation to TagElement at 0", "INS TextElement: is a convenient way of writing long multi-line strings in JSON.  to TagElement at 1", "INS ConditionalExpression to ReturnStatement at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: o to CastExpression at 1", "INS SimpleName: o to InstanceofExpression at 0", "INS SimpleType: String to CastExpression at 0", "INS InfixExpression: == to ConditionalExpression at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: List to CastExpression at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS SimpleType: Object to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: StringBuilder to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 1", "INS ThrowStatement to Block at 0", "INS StringLiteral: \"each element of a string list must be a string; found: \" to InfixExpression: + at 0", "INS SimpleName: o to SingleVariableDeclaration at 1", "INS SimpleName: buf to MethodInvocation at 0", "INS ReturnStatement to Block at 2", "INS SimpleType: String to InstanceofExpression at 1", "INS SimpleType: RuntimeException to ClassInstanceCreation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: buf to VariableDeclarationFragment at 0", "INS SimpleName: StringBuilder to SimpleType: StringBuilder at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: RuntimeException to SimpleType: RuntimeException at 0", "INS Block to IfStatement at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: list to SingleVariableDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleType: StringBuilder to VariableDeclarationStatement at 1", "INS StringLiteral: \"\\n\" to MethodInvocation at 2", "INS SimpleName: append to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS IfStatement to Block at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: String to CastExpression at 0", "INS SimpleType: List to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS SimpleName: buf to MethodInvocation at 0", "INS TextElement: Converts a list of strings into a multi-line string.  to TagElement at 0", "INS Block to MethodDeclaration at 6", "INS CastExpression to MethodInvocation at 2", "INS SimpleName: buf to MethodInvocation at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: concatenate to MethodDeclaration at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: o to InfixExpression: + at 1", "INS Modifier: static to MethodDeclaration at 2", "INS EnhancedForStatement to Block at 1", "INS SimpleType: String to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS ParenthesizedExpression to PrefixExpression: ! at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: o to InstanceofExpression at 0", "INS Block to EnhancedForStatement at 2", "INS PrefixExpression: ! to IfStatement at 0", "INS Modifier: private to MethodDeclaration at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: StringBuilder to SimpleType: StringBuilder at 0", "INS SimpleName: list to EnhancedForStatement at 1", "INS SimpleName: o to CastExpression at 1", "INS InstanceofExpression to ParenthesizedExpression at 0"]}, {"root": "INS Javadoc to FieldDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement: <p>Must be a string or a list of strings (which are concatenated separated to TagElement at 1", "INS Javadoc to FieldDeclaration at 0", "INS TextElement: SQL query that defines the lattice. to TagElement at 0", "INS TextElement: by newlines). to TagElement at 2"]}, {"root": "INS SimpleType: Object to FieldDeclaration at 2", "operations": ["INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: Object to FieldDeclaration at 2"]}, {"root": "INS MethodInvocation to InfixExpression: + at 3", "operations": ["INS SimpleName: getSql to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 3"]}, {"root": "MOVE from InstanceofExpression", "operations": ["MOV SimpleType: String to InstanceofExpression at 1"]}, {"root": "DEL SimpleName: sql", "operations": ["DEL SimpleName: sql"]}]}}, {"JsonLattice_diff": {"operations": ["Insert FieldDeclaration(62) into TypeDeclaration: class(277) at 7", "Insert MethodDeclaration(146) into TypeDeclaration: class(277) at 13", "Insert MethodDeclaration(181) into TypeDeclaration: class(277) at 14", "Insert MethodDeclaration(243) into TypeDeclaration: class(277) at 15", "Insert Javadoc(26) into FieldDeclaration(32) at 0", "Insert SimpleType: Object(29) into FieldDeclaration(32) at 2", "Insert Javadoc(55) into FieldDeclaration(62) at 0", "Insert Modifier: public(56) into FieldDeclaration(62) at 1", "Insert PrimitiveType: long(57) into FieldDeclaration(62) at 2", "Insert VariableDeclarationFragment(61) into FieldDeclaration(62) at 3", "Insert Javadoc(136) into MethodDeclaration(146) at 0", "Insert Modifier: public(137) into MethodDeclaration(146) at 1", "Insert SimpleType: String(139) into MethodDeclaration(146) at 2", "Insert SimpleName: getSql(140) into MethodDeclaration(146) at 3", "Insert Block(145) into MethodDeclaration(146) at 4", "Insert Javadoc(150) into MethodDeclaration(181) at 0", "Insert Modifier: static(151) into MethodDeclaration(181) at 1", "Insert SimpleType: String(153) into MethodDeclaration(181) at 2", "Insert SimpleName: toString(154) into MethodDeclaration(181) at 3", "Insert SingleVariableDeclaration(158) into MethodDeclaration(181) at 4", "Insert Block(180) into MethodDeclaration(181) at 5", "Insert Javadoc(184) into MethodDeclaration(243) at 0", "Insert Modifier: private(185) into MethodDeclaration(243) at 1", "Insert Modifier: static(186) into MethodDeclaration(243) at 2", "Insert SimpleType: String(188) into MethodDeclaration(243) at 3", "Insert SimpleName: concatenate(189) into MethodDeclaration(243) at 4", "Insert SingleVariableDeclaration(193) into MethodDeclaration(243) at 5", "Insert Block(242) into MethodDeclaration(243) at 6", "Insert TagElement(25) into Javadoc(26) at 0", "Insert SimpleName: Object(28) into SimpleType: Object(29) at 0", "Insert TagElement(54) into Javadoc(55) at 0", "Insert SimpleName: algorithmMaxMillis(58) into VariableDeclarationFragment(61) at 0", "Insert PrefixExpression: -(60) into VariableDeclarationFragment(61) at 1", "Insert TagElement(135) into Javadoc(136) at 0", "Insert SimpleName: String(138) into SimpleType: String(139) at 0", "Insert ReturnStatement(144) into Block(145) at 0", "Insert TagElement(149) into Javadoc(150) at 0", "Insert SimpleName: String(152) into SimpleType: String(153) at 0", "Insert SimpleType: Object(156) into SingleVariableDeclaration(158) at 0", "Insert SimpleName: o(157) into SingleVariableDeclaration(158) at 1", "Insert ReturnStatement(179) into Block(180) at 0", "Insert TagElement(183) into Javadoc(184) at 0", "Insert SimpleName: String(187) into SimpleType: String(188) at 0", "Insert SimpleType: List(191) into SingleVariableDeclaration(193) at 0", "Insert SimpleName: list(192) into SingleVariableDeclaration(193) at 1", "Insert VariableDeclarationStatement(202) into Block(242) at 0", "Insert EnhancedForStatement(237) into Block(242) at 1", "Insert ReturnStatement(241) into Block(242) at 2", "Insert TextElement: SQL query that defines the lattice.(22) into TagElement(25) at 0", "Insert TextElement: <p>Must be a string or a list of strings (which are concatenated separated(23) into TagElement(25) at 1", "Insert TextElement: by newlines).(24) into TagElement(25) at 2", "Insert TextElement: Maximum time to run the algorithm. Default is -1, meaning no timeout. (53) into TagElement(54) at 0", "Insert NumberLiteral: 1(59) into PrefixExpression: -(60) at 0", "Insert TextElement: Returns the SQL query as a string, concatenating a list of lines if(133) into TagElement(135) at 0", "Insert TextElement: necessary. (134) into TagElement(135) at 1", "Insert MethodInvocation(143) into ReturnStatement(144) at 0", "Insert TextElement: Converts a string or a list of strings to a string. The list notation(147) into TagElement(149) at 0", "Insert TextElement: is a convenient way of writing long multi-line strings in JSON. (148) into TagElement(149) at 1", "Insert SimpleName: Object(155) into SimpleType: Object(156) at 0", "Insert ConditionalExpression(178) into ReturnStatement(179) at 0", "Insert TextElement: Converts a list of strings into a multi-line string. (182) into TagElement(183) at 0", "Insert SimpleName: List(190) into SimpleType: List(191) at 0", "Insert Modifier: final(194) into VariableDeclarationStatement(202) at 0", "Insert SimpleType: StringBuilder(196) into VariableDeclarationStatement(202) at 1", "Insert VariableDeclarationFragment(201) into VariableDeclarationStatement(202) at 2", "Insert SingleVariableDeclaration(206) into EnhancedForStatement(237) at 0", "Insert SimpleName: list(207) into EnhancedForStatement(237) at 1", "Insert Block(236) into EnhancedForStatement(237) at 2", "Insert MethodInvocation(240) into ReturnStatement(241) at 0", "Insert MethodInvocation(127) into InfixExpression: +(129) at 3", "Insert SimpleName: toString(141) into MethodInvocation(143) at 0", "Insert SimpleName: sql(142) into MethodInvocation(143) at 1", "Insert InfixExpression: ==(161) into ConditionalExpression(178) at 0", "Insert NullLiteral(162) into ConditionalExpression(178) at 1", "Insert ConditionalExpression(177) into ConditionalExpression(178) at 2", "Insert SimpleName: StringBuilder(195) into SimpleType: StringBuilder(196) at 0", "Insert SimpleName: buf(197) into VariableDeclarationFragment(201) at 0", "Insert ClassInstanceCreation(200) into VariableDeclarationFragment(201) at 1", "Insert SimpleType: Object(204) into SingleVariableDeclaration(206) at 0", "Insert SimpleName: o(205) into SingleVariableDeclaration(206) at 1", "Insert IfStatement(222) into Block(236) at 0", "Insert ExpressionStatement(230) into Block(236) at 1", "Insert ExpressionStatement(235) into Block(236) at 2", "Insert SimpleName: buf(238) into MethodInvocation(240) at 0", "Insert SimpleName: toString(239) into MethodInvocation(240) at 1", "Insert SimpleName: getSql(126) into MethodInvocation(127) at 0", "Insert SimpleName: o(159) into InfixExpression: ==(161) at 0", "Insert NullLiteral(160) into InfixExpression: ==(161) at 1", "Insert InstanceofExpression(166) into ConditionalExpression(177) at 0", "Insert CastExpression(170) into ConditionalExpression(177) at 1", "Insert MethodInvocation(176) into ConditionalExpression(177) at 2", "Insert SimpleType: StringBuilder(199) into ClassInstanceCreation(200) at 0", "Insert SimpleName: Object(203) into SimpleType: Object(204) at 0", "Insert PrefixExpression: !(213) into IfStatement(222) at 0", "Insert Block(221) into IfStatement(222) at 1", "Insert MethodInvocation(229) into ExpressionStatement(230) at 0", "Insert MethodInvocation(234) into ExpressionStatement(235) at 0", "Insert SimpleName: o(163) into InstanceofExpression(166) at 0", "Move SimpleType: String(24) into InstanceofExpression(166) at 1", "Insert SimpleType: String(168) into CastExpression(170) at 0", "Insert SimpleName: o(169) into CastExpression(170) at 1", "Insert SimpleName: concatenate(171) into MethodInvocation(176) at 0", "Insert CastExpression(175) into MethodInvocation(176) at 1", "Insert SimpleName: StringBuilder(198) into SimpleType: StringBuilder(199) at 0", "Insert ParenthesizedExpression(212) into PrefixExpression: !(213) at 0", "Insert ThrowStatement(220) into Block(221) at 0", "Insert SimpleName: buf(223) into MethodInvocation(229) at 0", "Insert SimpleName: append(224) into MethodInvocation(229) at 1", "Insert CastExpression(228) into MethodInvocation(229) at 2", "Insert SimpleName: buf(231) into MethodInvocation(234) at 0", "Insert SimpleName: append(232) into MethodInvocation(234) at 1", "Insert StringLiteral: \"\\n\"(233) into MethodInvocation(234) at 2", "Insert SimpleName: String(167) into SimpleType: String(168) at 0", "Insert SimpleType: List(173) into CastExpression(175) at 0", "Insert SimpleName: o(174) into CastExpression(175) at 1", "Insert InstanceofExpression(211) into ParenthesizedExpression(212) at 0", "Insert ClassInstanceCreation(219) into ThrowStatement(220) at 0", "Insert SimpleType: String(226) into CastExpression(228) at 0", "Insert SimpleName: o(227) into CastExpression(228) at 1", "Insert SimpleName: List(172) into SimpleType: List(173) at 0", "Insert SimpleName: o(208) into InstanceofExpression(211) at 0", "Insert SimpleType: String(210) into InstanceofExpression(211) at 1", "Insert SimpleType: RuntimeException(215) into ClassInstanceCreation(219) at 0", "Insert InfixExpression: +(218) into ClassInstanceCreation(219) at 1", "Insert SimpleName: String(225) into SimpleType: String(226) at 0", "Insert SimpleName: String(209) into SimpleType: String(210) at 0", "Insert SimpleName: RuntimeException(214) into SimpleType: RuntimeException(215) at 0", "Insert StringLiteral: \"each element of a string list must be a string; found: \"(216) into InfixExpression: +(218) at 0", "Insert SimpleName: o(217) into InfixExpression: +(218) at 1", "Delete SimpleName: sql(111)"]}}, {"JsonMaterialization_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: JsonLattice to MethodInvocation at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: getSql to MethodDeclaration at 3", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: necessary.  to TagElement at 1", "INS ReturnStatement to Block at 0", "INS TagElement to Javadoc at 0", "INS MethodInvocation to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS Block to MethodDeclaration at 4", "INS SimpleName: sql to MethodInvocation at 2", "INS Modifier: public to MethodDeclaration at 1", "INS TextElement: Returns the SQL query as a string, concatenating a list of lines if to TagElement at 0"]}, {"root": "INS SimpleType: Object to FieldDeclaration at 1", "operations": ["INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: Object to FieldDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: String to MethodDeclaration at 2"]}]}}, {"JsonMaterialization_diff": {"operations": ["Insert MethodDeclaration(71) into TypeDeclaration: class(72) at 8", "Insert SimpleType: Object(24) into FieldDeclaration(27) at 1", "Insert Javadoc(60) into MethodDeclaration(71) at 0", "Insert Modifier: public(61) into MethodDeclaration(71) at 1", "Move SimpleType: String(24) into MethodDeclaration(71) at 2", "Insert SimpleName: getSql(64) into MethodDeclaration(71) at 3", "Insert Block(70) into MethodDeclaration(71) at 4", "Insert SimpleName: Object(23) into SimpleType: Object(24) at 0", "Insert TagElement(59) into Javadoc(60) at 0", "Insert ReturnStatement(69) into Block(70) at 0", "Insert TextElement: Returns the SQL query as a string, concatenating a list of lines if(57) into TagElement(59) at 0", "Insert TextElement: necessary. (58) into TagElement(59) at 1", "Insert MethodInvocation(68) into ReturnStatement(69) at 0", "Insert SimpleName: JsonLattice(65) into MethodInvocation(68) at 0", "Insert SimpleName: toString(66) into MethodInvocation(68) at 1", "Insert SimpleName: sql(67) into MethodInvocation(68) at 2"]}}, {"JsonRoot_cluster": {"actions": [{"root": "UPDATE from , per Jackson simple data binding.</p> to , per Jackson simple data", "operations": ["UPD TextElement: , per Jackson simple data binding.</p> from , per Jackson simple data binding.</p> to , per Jackson simple data"]}, {"root": "INS TextElement: binding.</p> to TagElement at 10", "operations": ["INS TextElement: binding.</p> to TagElement at 10"]}, {"root": "INS TagElement: @link to TagElement at 46", "operations": ["INS TagElement: @link to TagElement at 46", "INS SimpleName: JsonMaterialization to TagElement: @link at 0"]}, {"root": "INS TextElement:  (in collection  to TagElement at 47", "operations": ["INS TextElement:  (in collection  to TagElement at 47"]}, {"root": "INS TagElement: @link to TagElement at 48", "operations": ["INS SimpleName: materializations to MemberRef at 1", "INS MemberRef to TagElement: @link at 0", "INS TextElement:  materializations to TagElement: @link at 1", "INS TagElement: @link to TagElement at 48", "INS SimpleName: JsonSchema to MemberRef at 0"]}, {"root": "INS TextElement: ) to TagElement at 49", "operations": ["INS TextElement: ) to TagElement at 49"]}, {"root": "INS TextElement:  LinkedHashMap to TagElement: @link at 1", "operations": ["INS TextElement:  LinkedHashMap to TagElement: @link at 1"]}, {"root": "UPDATE from  column to  columns", "operations": ["UPD TextElement:  column from  column to  columns"]}, {"root": "INS TextElement:  lattices to TagElement: @link at 1", "operations": ["INS TextElement:  lattices to TagElement: @link at 1"]}, {"root": "INS TextElement:  defaultMeasures to TagElement: @link at 1", "operations": ["INS TextElement:  defaultMeasures to TagElement: @link at 1"]}, {"root": "INS TextElement:  tiles to TagElement: @link at 1", "operations": ["INS TextElement:  tiles to TagElement: @link at 1"]}, {"root": "INS TextElement:  measures to TagElement: @link at 1", "operations": ["INS TextElement:  measures to TagElement: @link at 1"]}]}}, {"JsonRoot_diff": {"operations": ["Update TextElement: , per Jackson simple data binding.</p>(19) to , per Jackson simple data", "Insert TextElement: binding.</p>(21) into TagElement(109) at 10", "Insert TagElement: @link(100) into TagElement(109) at 46", "Insert TextElement:  (in collection (101) into TagElement(109) at 47", "Insert TagElement: @link(106) into TagElement(109) at 48", "Insert TextElement: )(107) into TagElement(109) at 49", "Insert TextElement:  LinkedHashMap(18) into TagElement: @link(19) at 1", "Update TextElement:  column(48) to  columns", "Insert TextElement:  lattices(69) into TagElement: @link(70) at 1", "Insert TextElement:  defaultMeasures(78) into TagElement: @link(79) at 1", "Insert TextElement:  tiles(87) into TagElement: @link(88) at 1", "Insert TextElement:  measures(96) into TagElement: @link(97) at 1", "Insert SimpleName: JsonMaterialization(99) into TagElement: @link(100) at 0", "Insert MemberRef(104) into TagElement: @link(106) at 0", "Insert TextElement:  materializations(105) into TagElement: @link(106) at 1", "Insert SimpleName: JsonSchema(102) into MemberRef(104) at 0", "Insert SimpleName: materializations(103) into MemberRef(104) at 1"]}}, {"JsonView_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS MethodInvocation to ReturnStatement at 0", "INS TextElement: necessary.  to TagElement at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: getSql to MethodDeclaration at 3", "INS TagElement to Javadoc at 0", "INS TextElement: Returns the SQL query as a string, concatenating a list of lines if to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: sql to MethodInvocation at 2", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: JsonLattice to MethodInvocation at 0", "INS Block to MethodDeclaration at 4"]}, {"root": "INS SimpleType: Object to FieldDeclaration at 2", "operations": ["INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: Object to FieldDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: String to MethodDeclaration at 2"]}]}}, {"JsonView_diff": {"operations": ["Insert MethodDeclaration(77) into TypeDeclaration: class(78) at 8", "Insert SimpleType: Object(19) into FieldDeclaration(22) at 2", "Insert Javadoc(66) into MethodDeclaration(77) at 0", "Insert Modifier: public(67) into MethodDeclaration(77) at 1", "Move SimpleType: String(19) into MethodDeclaration(77) at 2", "Insert SimpleName: getSql(70) into MethodDeclaration(77) at 3", "Insert Block(76) into MethodDeclaration(77) at 4", "Insert SimpleName: Object(18) into SimpleType: Object(19) at 0", "Insert TagElement(65) into Javadoc(66) at 0", "Insert ReturnStatement(75) into Block(76) at 0", "Insert TextElement: Returns the SQL query as a string, concatenating a list of lines if(63) into TagElement(65) at 0", "Insert TextElement: necessary. (64) into TagElement(65) at 1", "Insert MethodInvocation(74) into ReturnStatement(75) at 0", "Insert SimpleName: JsonLattice(71) into MethodInvocation(74) at 0", "Insert SimpleName: toString(72) into MethodInvocation(74) at 1", "Insert SimpleName: sql(73) into MethodInvocation(74) at 2"]}}, {"ModelHandler_cluster": {"actions": [{"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS SimpleName: getSql to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: jsonMaterialization to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS SimpleName: jsonView to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getSql to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS SimpleName: jsonLattice to MethodInvocation at 0", "INS SimpleName: getSql to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "DEL QualifiedName: jsonMaterialization.sql", "operations": ["DEL QualifiedName: jsonMaterialization.sql"]}, {"root": "DEL QualifiedName: jsonLattice.sql", "operations": ["DEL QualifiedName: jsonLattice.sql"]}, {"root": "DEL QualifiedName: jsonView.sql", "operations": ["DEL QualifiedName: jsonView.sql"]}]}}, {"ModelHandler_diff": {"operations": ["Insert MethodInvocation(901) into MethodInvocation(904) at 3", "Insert MethodInvocation(1198) into MethodInvocation(1200) at 3", "Insert SimpleName: jsonMaterialization(899) into MethodInvocation(901) at 0", "Insert SimpleName: getSql(900) into MethodInvocation(901) at 1", "Insert SimpleName: jsonView(1196) into MethodInvocation(1198) at 0", "Insert SimpleName: getSql(1197) into MethodInvocation(1198) at 1", "Insert MethodInvocation(972) into MethodInvocation(973) at 3", "Insert SimpleName: jsonLattice(970) into MethodInvocation(972) at 0", "Insert SimpleName: getSql(971) into MethodInvocation(972) at 1", "Delete QualifiedName: jsonMaterialization.sql(899)", "Delete QualifiedName: jsonLattice.sql(968)", "Delete QualifiedName: jsonView.sql(1192)"]}}, {"AggregateStarTableRule_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 17"]}, {"root": "UPDATE from org.eigenbase.rel.Aggregation to org.eigenbase.sql.SqlAggFunction", "operations": ["UPD QualifiedName: org.eigenbase.rel.Aggregation from org.eigenbase.rel.Aggregation to org.eigenbase.sql.SqlAggFunction"]}, {"root": "UPDATE from net.hydromatic.optiq.materialize.MaterializationService to net.hydromatic.optiq.materialize.TileKey", "operations": ["UPD QualifiedName: net.hydromatic.optiq.materialize.MaterializationService from net.hydromatic.optiq.materialize.MaterializationService to net.hydromatic.optiq.materialize.TileKey"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: groupCount to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleType: RelNode to SingleVariableDeclaration at 0", "INS SimpleName: RelNode to SimpleType: RelNode at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: input to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from MaterializationService.TileKey to TileKey", "operations": ["UPD SimpleType: MaterializationService.TileKey from MaterializationService.TileKey to TileKey", "UPD SimpleType: MaterializationService.TileKey from MaterializationService.TileKey to TileKey", "UPD SimpleType: MaterializationService.TileKey from MaterializationService.TileKey to TileKey"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: aggregateCall to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS NullLiteral to ReturnStatement at 0", "INS SimpleName: isDistinct to MethodInvocation at 1", "INS ReturnStatement to Block at 0"]}, {"root": "UPDATE from Pair<Aggregation,List<Integer>> to Pair<SqlAggFunction,List<Integer>>", "operations": ["UPD ParameterizedType: Pair<Aggregation,List<Integer>> from Pair<Aggregation,List<Integer>> to Pair<SqlAggFunction,List<Integer>>", "UPD ParameterizedType: Pair<Aggregation,List<Integer>> from Pair<Aggregation,List<Integer>> to Pair<SqlAggFunction,List<Integer>>"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from Pair<OptiqSchema.TableEntry,MaterializationService.TileKey> to Pair<OptiqSchema.TableEntry,TileKey>", "operations": ["UPD ParameterizedType: Pair<OptiqSchema.TableEntry,MaterializationService.TileKey> from Pair<OptiqSchema.TableEntry,MaterializationService.TileKey> to Pair<OptiqSchema.TableEntry,TileKey>"]}, {"root": "INS SimpleName: TileKey to SimpleType: MaterializationService.TileKey at 0", "operations": ["INS SimpleName: TileKey to SimpleType: MaterializationService.TileKey at 0"]}, {"root": "UPDATE from AggregateCall to SqlAggFunction", "operations": ["UPD SimpleName: AggregateCall from AggregateCall to SqlAggFunction", "UPD SimpleType: Aggregation from Aggregation to SqlAggFunction", "UPD SimpleName: Aggregation from Aggregation to SqlAggFunction", "UPD SimpleName: Aggregation from Aggregation to SqlAggFunction", "UPD SimpleType: Aggregation from Aggregation to SqlAggFunction", "UPD SimpleName: Aggregation from Aggregation to SqlAggFunction", "UPD SimpleType: Aggregation from Aggregation to SqlAggFunction", "UPD SimpleName: Aggregation from Aggregation to SqlAggFunction", "UPD SimpleType: Aggregation from Aggregation to SqlAggFunction"]}, {"root": "INS SimpleName: TileKey to SimpleType: MaterializationService.TileKey at 0", "operations": ["INS SimpleName: TileKey to SimpleType: MaterializationService.TileKey at 0"]}, {"root": "MOVE from Block", "operations": ["MOV EnhancedForStatement to Block at 6"]}, {"root": "INS CastExpression to VariableDeclarationFragment at 1", "operations": ["INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleType: SqlAggFunction to CastExpression at 0", "INS SimpleName: SqlAggFunction to SimpleType: SqlAggFunction at 0"]}, {"root": "INS SimpleName: TileKey to SimpleType: MaterializationService.TileKey at 0", "operations": ["INS SimpleName: TileKey to SimpleType: MaterializationService.TileKey at 0"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: input to MethodInvocation at 6", "INS SimpleName: AggregateCall to MethodInvocation at 0", "INS NullLiteral to MethodInvocation at 7", "INS SimpleName: aggregation to CastExpression at 1", "INS SimpleName: groupCount to MethodInvocation at 5", "INS SimpleName: create to MethodInvocation at 1", "INS SimpleType: SqlAggFunction to CastExpression at 0", "INS CastExpression to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS BooleanLiteral: false to MethodInvocation at 3", "INS SimpleName: newArgs to MethodInvocation at 4", "INS QualifiedName: aggregateCall.name to MethodInvocation at 8"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS QualifiedName: aggregateCall.name to MethodInvocation at 8", "INS BooleanLiteral: false to MethodInvocation at 3", "INS SimpleName: create to MethodInvocation at 1", "INS SimpleName: roll to MethodInvocation at 2", "INS SimpleName: input to MethodInvocation at 6", "INS SimpleName: groupCount to MethodInvocation at 5", "INS NullLiteral to MethodInvocation at 7", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: AggregateCall to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 4"]}, {"root": "MOVE from SimpleType: SqlAggFunction", "operations": ["MOV SimpleName: AggregateCall to SimpleType: SqlAggFunction at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS SimpleName: cardinality to MethodInvocation at 1", "INS SimpleName: groupSet to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1"]}, {"root": "INS SimpleName: rel to MethodInvocation at 2", "operations": ["INS SimpleName: rel to MethodInvocation at 2"]}, {"root": "DEL QualifiedName: MaterializationService.TileKey", "operations": ["DEL QualifiedName: MaterializationService.TileKey"]}, {"root": "DEL QualifiedName: MaterializationService.TileKey", "operations": ["DEL QualifiedName: MaterializationService.TileKey"]}, {"root": "DEL QualifiedName: MaterializationService.TileKey", "operations": ["DEL QualifiedName: MaterializationService.TileKey"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: AggregateCall", "DEL QualifiedName: aggregateCall.type", "DEL SimpleName: roll", "DEL BooleanLiteral: false", "DEL SimpleType: AggregateCall", "DEL QualifiedName: aggregateCall.name", "DEL ClassInstanceCreation"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL QualifiedName: aggregateCall.name", "DEL BooleanLiteral: false", "DEL ClassInstanceCreation", "DEL SimpleName: aggregation", "DEL SimpleType: AggregateCall", "DEL SimpleName: newArgs", "DEL QualifiedName: aggregateCall.type"]}]}}, {"AggregateStarTableRule_diff": {"operations": ["Move ImportDeclaration(11) into CompilationUnit(991) at 17", "Update QualifiedName: org.eigenbase.rel.Aggregation(10) to org.eigenbase.sql.SqlAggFunction", "Update QualifiedName: net.hydromatic.optiq.materialize.MaterializationService(46) to net.hydromatic.optiq.materialize.TileKey", "Insert SingleVariableDeclaration(740) into MethodDeclaration(923) at 4", "Insert SingleVariableDeclaration(744) into MethodDeclaration(923) at 5", "Insert PrimitiveType: int(738) into SingleVariableDeclaration(740) at 0", "Insert SimpleName: groupCount(739) into SingleVariableDeclaration(740) at 1", "Insert SimpleType: RelNode(742) into SingleVariableDeclaration(744) at 0", "Insert SimpleName: input(743) into SingleVariableDeclaration(744) at 1", "Update SimpleType: MaterializationService.TileKey(738) to TileKey", "Insert IfStatement(759) into Block(922) at 0", "Update ParameterizedType: Pair<Aggregation,List<Integer>>(915) to Pair<SqlAggFunction,List<Integer>>", "Insert Modifier: final(360) into VariableDeclarationStatement(380) at 0", "Update ParameterizedType: Pair<OptiqSchema.TableEntry,MaterializationService.TileKey>(366) to Pair<OptiqSchema.TableEntry,TileKey>", "Update SimpleType: MaterializationService.TileKey(395) to TileKey", "Insert SimpleName: RelNode(741) into SimpleType: RelNode(742) at 0", "Insert SimpleName: TileKey(749) into SimpleType: TileKey(750) at 0", "Insert MethodInvocation(755) into IfStatement(759) at 0", "Insert Block(758) into IfStatement(759) at 1", "Update SimpleType: Aggregation(743) to SqlAggFunction", "Update ParameterizedType: Pair<Aggregation,List<Integer>>(760) to Pair<SqlAggFunction,List<Integer>>", "Update SimpleType: Aggregation(909) to SqlAggFunction", "Update SimpleType: MaterializationService.TileKey(365) to TileKey", "Insert SimpleName: TileKey(395) into SimpleType: TileKey(396) at 0", "Move EnhancedForStatement(547) into Block(595) at 6", "Insert SimpleName: aggregateCall(753) into MethodInvocation(755) at 0", "Insert SimpleName: isDistinct(754) into MethodInvocation(755) at 1", "Insert ReturnStatement(757) into Block(758) at 0", "Update SimpleName: Aggregation(742) to SqlAggFunction", "Insert CastExpression(769) into VariableDeclarationFragment(770) at 1", "Update SimpleType: Aggregation(754) to SqlAggFunction", "Update SimpleName: Aggregation(908) to SqlAggFunction", "Insert SimpleName: TileKey(365) into SimpleType: TileKey(366) at 0", "Insert NullLiteral(756) into ReturnStatement(757) at 0", "Insert SimpleType: SqlAggFunction(765) into CastExpression(769) at 0", "Move MethodInvocation(747) into CastExpression(769) at 1", "Update SimpleName: Aggregation(753) to SqlAggFunction", "Insert MethodInvocation(916) into ReturnStatement(917) at 0", "Insert SimpleName: SqlAggFunction(764) into SimpleType: SqlAggFunction(765) at 0", "Update SimpleType: Aggregation(804) to SqlAggFunction", "Insert MethodInvocation(855) into ReturnStatement(856) at 0", "Insert SimpleName: AggregateCall(904) into MethodInvocation(916) at 0", "Insert SimpleName: create(905) into MethodInvocation(916) at 1", "Insert CastExpression(909) into MethodInvocation(916) at 2", "Insert BooleanLiteral: false(910) into MethodInvocation(916) at 3", "Insert SimpleName: newArgs(911) into MethodInvocation(916) at 4", "Insert SimpleName: groupCount(912) into MethodInvocation(916) at 5", "Insert SimpleName: input(913) into MethodInvocation(916) at 6", "Insert NullLiteral(914) into MethodInvocation(916) at 7", "Insert QualifiedName: aggregateCall.name(915) into MethodInvocation(916) at 8", "Update SimpleName: Aggregation(803) to SqlAggFunction", "Insert SimpleName: AggregateCall(841) into MethodInvocation(855) at 0", "Insert SimpleName: create(842) into MethodInvocation(855) at 1", "Insert SimpleName: roll(843) into MethodInvocation(855) at 2", "Insert BooleanLiteral: false(844) into MethodInvocation(855) at 3", "Move MethodInvocation(828) into MethodInvocation(855) at 4", "Insert SimpleName: groupCount(851) into MethodInvocation(855) at 5", "Insert SimpleName: input(852) into MethodInvocation(855) at 6", "Insert NullLiteral(853) into MethodInvocation(855) at 7", "Insert QualifiedName: aggregateCall.name(854) into MethodInvocation(855) at 8", "Insert SimpleType: SqlAggFunction(907) into CastExpression(909) at 0", "Insert SimpleName: aggregation(908) into CastExpression(909) at 1", "Update SimpleName: AggregateCall(880) to SqlAggFunction", "Move SimpleName: AggregateCall(880) into SimpleType: SqlAggFunction(907) at 0", "Insert MethodInvocation(563) into MethodInvocation(567) at 1", "Insert SimpleName: rel(564) into MethodInvocation(567) at 2", "Insert SimpleName: groupSet(561) into MethodInvocation(563) at 0", "Insert SimpleName: cardinality(562) into MethodInvocation(563) at 1", "Delete QualifiedName: MaterializationService.TileKey(364)", "Delete QualifiedName: MaterializationService.TileKey(394)", "Delete QualifiedName: MaterializationService.TileKey(737)", "Delete SimpleName: AggregateCall(819)", "Delete SimpleType: AggregateCall(820)", "Delete SimpleName: roll(821)", "Delete BooleanLiteral: false(822)", "Delete QualifiedName: aggregateCall.type(829)", "Delete QualifiedName: aggregateCall.name(830)", "Delete ClassInstanceCreation(831)", "Delete SimpleType: AggregateCall(881)", "Delete SimpleName: aggregation(882)", "Delete BooleanLiteral: false(883)", "Delete SimpleName: newArgs(884)", "Delete QualifiedName: aggregateCall.type(885)", "Delete QualifiedName: aggregateCall.name(886)", "Delete ClassInstanceCreation(887)"]}}, {"PushAggregateThroughUnionRule_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: net.hydromatic.linq4j.Ord to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS QualifiedName: com.google.common.collect.ImmutableList to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: com.google.common.collect.Lists to ImportDeclaration at 0"]}, {"root": "UPDATE from RelDataTypeFactory to RelNode", "operations": ["UPD SimpleType: RelDataTypeFactory from RelDataTypeFactory to RelNode", "UPD SimpleName: RelDataTypeFactory from RelDataTypeFactory to RelNode"]}, {"root": "UPDATE from typeFactory to input", "operations": ["UPD SimpleName: typeFactory from typeFactory to input"]}, {"root": "UPDATE from nGroupCols to groupCount", "operations": ["UPD SimpleName: nGroupCols from nGroupCols to groupCount"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS SingleVariableDeclaration to EnhancedForStatement at 0", "operations": ["INS SimpleName: ord to SingleVariableDeclaration at 1", "INS SimpleType: Ord to ParameterizedType: Ord<AggregateCall> at 0", "INS ParameterizedType: Ord<AggregateCall> to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0"]}, {"root": "INS MethodInvocation to EnhancedForStatement at 1", "operations": ["INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: zip to MethodInvocation at 1"]}, {"root": "INS Block to EnhancedForStatement at 2", "operations": ["INS InfixExpression: == to IfStatement at 0", "INS SimpleName: aggFun to Assignment: = at 0", "INS QualifiedName: SqlStdOperatorTable.COUNT to InfixExpression: == at 1", "INS QualifiedName: SqlStdOperatorTable.SUM0 to Assignment: = at 1", "INS IfStatement to Block at 4", "INS Block to IfStatement at 1", "INS VariableDeclarationStatement to Block at 2", "INS ExpressionStatement to Block at 0", "INS Block to EnhancedForStatement at 2", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: Lists to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: newArrayList to MethodInvocation at 1"]}, {"root": "UPDATE from Aggregation to Ord", "operations": ["UPD SimpleName: Aggregation from Aggregation to Ord", "UPD SimpleName: equals from equals to Ord"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: equals to MethodInvocation at 0"]}, {"root": "UPDATE from origCall to origCalls", "operations": ["UPD SimpleName: origCall from origCall to origCalls"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: origCall to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 3", "MOV IfStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 5", "MOV ExpressionStatement to Block at 6"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: aggRel to MethodInvocation at 1"]}, {"root": "MOVE from ParameterizedType: Ord<AggregateCall>", "operations": ["MOV SimpleType: AggregateCall to ParameterizedType: Ord<AggregateCall> at 1"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AggregateCall to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: SqlAggFunction to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 2"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3", "MOV MethodInvocation to MethodInvocation at 8", "MOV SimpleType: AggregateCall to VariableDeclarationStatement at 0"]}, {"root": "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "operations": ["INS SimpleName: aggType to MethodInvocation at 7", "INS SimpleName: groupCount to MethodInvocation at 5", "INS SimpleName: groupCount to InfixExpression: + at 0", "INS SimpleName: create to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: newCall to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 4", "INS QualifiedName: ord.i to InfixExpression: + at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: input to MethodInvocation at 6", "INS SimpleName: aggFun to MethodInvocation at 2", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: AggregateCall to MethodInvocation at 0"]}, {"root": "MOVE from SimpleType: Ord", "operations": ["MOV SimpleName: Aggregation to SimpleType: Ord at 0"]}, {"root": "UPDATE from af to origCall", "operations": ["UPD SimpleName: af from af to origCall"]}, {"root": "INS QualifiedName: ord.e to VariableDeclarationFragment at 1", "operations": ["INS QualifiedName: ord.e to VariableDeclarationFragment at 1"]}, {"root": "MOVE from InfixExpression: ==", "operations": ["MOV MethodInvocation to InfixExpression: == at 0"]}, {"root": "INS NullLiteral to Assignment: = at 1", "operations": ["INS NullLiteral to Assignment: = at 1"]}, {"root": "INS CastExpression to Assignment: = at 1", "operations": ["INS CastExpression to Assignment: = at 1"]}, {"root": "UPDATE from Collections to ImmutableList", "operations": ["UPD SimpleName: Collections from Collections to ImmutableList"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: singletonList to MethodInvocation at 1", "MOV SimpleName: Collections to MethodInvocation at 0"]}, {"root": "UPDATE from singletonList to of", "operations": ["UPD SimpleName: singletonList from singletonList to of"]}, {"root": "MOVE from CastExpression", "operations": ["MOV SimpleType: SqlAggFunction to CastExpression at 0"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getCluster", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getTypeFactory"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ParameterizedType: ArrayList<AggregateCall>", "DEL SimpleName: ArrayList", "DEL ClassInstanceCreation", "DEL SimpleType: ArrayList"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: iInput", "DEL SimpleName: nGroupCols", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment"]}, {"root": "DEL CastExpression", "operations": ["DEL SimpleName: aggFun", "DEL CastExpression"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: inferReturnType", "DEL MethodInvocation", "DEL SimpleName: binding", "DEL SimpleName: af"]}, {"root": "DEL SimpleType: AggregateCall", "operations": ["DEL SimpleName: AggregateCall", "DEL SimpleType: AggregateCall"]}, {"root": "DEL VariableDeclarationFragment", "operations": ["DEL SimpleName: newCall", "DEL MethodInvocation", "DEL SimpleName: aggFun", "DEL ClassInstanceCreation", "DEL SimpleName: iInput", "DEL VariableDeclarationFragment", "DEL SimpleName: aggType"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: origCall"]}, {"root": "DEL SimpleName: origCalls", "operations": ["DEL SimpleName: origCalls"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: origCall", "DEL MethodInvocation", "DEL SimpleType: SqlSumEmptyIsZeroAggFunction", "DEL SimpleName: af", "DEL QualifiedName: AggregateRelBase.AggCallBinding", "DEL MethodInvocation", "DEL SimpleName: Collections", "DEL Assignment: =", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: getName", "DEL SimpleType: AggregateRelBase.AggCallBinding", "DEL SimpleName: iInput", "DEL Block", "DEL SimpleName: typeFactory", "DEL SimpleName: aggFun", "DEL ClassInstanceCreation", "DEL StringLiteral: \"COUNT\"", "DEL SimpleType: AggregateRelBase.AggCallBinding", "DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: getType", "DEL SimpleType: Aggregation", "DEL PrefixExpression: ++", "DEL SimpleName: getType", "DEL ClassInstanceCreation", "DEL SimpleName: binding", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: nGroupCols", "DEL VariableDeclarationStatement", "DEL SimpleName: singletonList", "DEL SimpleName: SqlSumEmptyIsZeroAggFunction", "DEL QualifiedName: AggregateRelBase.AggCallBinding", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement"]}]}}, {"PushAggregateThroughUnionRule_diff": {"operations": ["Insert ImportDeclaration(17) into CompilationUnit(449) at 8", "Insert ImportDeclaration(19) into CompilationUnit(449) at 9", "Insert ImportDeclaration(21) into CompilationUnit(449) at 10", "Insert QualifiedName: net.hydromatic.linq4j.Ord(16) into ImportDeclaration(17) at 0", "Insert QualifiedName: com.google.common.collect.ImmutableList(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: com.google.common.collect.Lists(20) into ImportDeclaration(21) at 0", "Update SimpleType: RelDataTypeFactory(308) to RelNode", "Update SimpleName: typeFactory(309) to input", "Update SimpleName: nGroupCols(312) to groupCount", "Update SimpleName: RelDataTypeFactory(307) to RelNode", "Insert Modifier: final(323) into VariableDeclarationStatement(334) at 0", "Insert SingleVariableDeclaration(341) into EnhancedForStatement(443) at 0", "Insert MethodInvocation(345) into EnhancedForStatement(443) at 1", "Insert Block(442) into EnhancedForStatement(443) at 2", "Insert MethodInvocation(332) into VariableDeclarationFragment(333) at 1", "Insert ParameterizedType: Ord<AggregateCall>(339) into SingleVariableDeclaration(341) at 0", "Insert SimpleName: ord(340) into SingleVariableDeclaration(341) at 1", "Update SimpleName: equals(377) to Ord", "Move SimpleName: equals(377) into MethodInvocation(345) at 0", "Insert SimpleName: zip(343) into MethodInvocation(345) at 1", "Update SimpleName: origCall(383) to origCalls", "Move SimpleName: origCall(383) into MethodInvocation(345) at 2", "Move VariableDeclarationStatement(397) into Block(442) at 0", "Move IfStatement(361) into Block(442) at 1", "Insert VariableDeclarationStatement(375) into Block(442) at 2", "Move VariableDeclarationStatement(371) into Block(442) at 3", "Insert IfStatement(412) into Block(442) at 4", "Move VariableDeclarationStatement(457) into Block(442) at 5", "Move ExpressionStatement(462) into Block(442) at 6", "Move SimpleName: aggRel(161) into MethodInvocation(176) at 1", "Insert SimpleName: Lists(330) into MethodInvocation(332) at 0", "Insert SimpleName: newArrayList(331) into MethodInvocation(332) at 1", "Insert SimpleType: Ord(336) into ParameterizedType: Ord<AggregateCall>(339) at 0", "Move SimpleType: AggregateCall(330) into ParameterizedType: Ord<AggregateCall>(339) at 1", "Insert Modifier: final(346) into VariableDeclarationStatement(352) at 0", "Move SimpleType: AggregateCall(341) into VariableDeclarationStatement(352) at 1", "Move Modifier: final(398) into VariableDeclarationStatement(375) at 0", "Move SimpleType: SqlAggFunction(390) into VariableDeclarationStatement(375) at 1", "Move VariableDeclarationFragment(365) into VariableDeclarationStatement(375) at 2", "Insert Modifier: final(376) into VariableDeclarationStatement(381) at 0", "Insert InfixExpression: ==(386) into IfStatement(412) at 0", "Insert Block(395) into IfStatement(412) at 1", "Move Block(436) into IfStatement(412) at 2", "Move SimpleType: AggregateCall(442) into VariableDeclarationStatement(436) at 0", "Insert VariableDeclarationFragment(435) into VariableDeclarationStatement(436) at 1", "Update SimpleName: Aggregation(362) to Ord", "Move SimpleName: Aggregation(362) into SimpleType: Ord(336) at 0", "Update SimpleName: af(391) to origCall", "Insert QualifiedName: ord.e(350) into VariableDeclarationFragment(351) at 1", "Move MethodInvocation(374) into InfixExpression: ==(386) at 0", "Insert QualifiedName: SqlStdOperatorTable.COUNT(385) into InfixExpression: ==(386) at 1", "Insert ExpressionStatement(390) into Block(395) at 0", "Move ExpressionStatement(422) into Block(395) at 1", "Insert SimpleName: newCall(415) into VariableDeclarationFragment(435) at 0", "Insert MethodInvocation(434) into VariableDeclarationFragment(435) at 1", "Insert Assignment: =(389) into ExpressionStatement(390) at 0", "Insert SimpleName: AggregateCall(416) into MethodInvocation(434) at 0", "Insert SimpleName: create(417) into MethodInvocation(434) at 1", "Insert SimpleName: aggFun(418) into MethodInvocation(434) at 2", "Move MethodInvocation(446) into MethodInvocation(434) at 3", "Insert MethodInvocation(427) into MethodInvocation(434) at 4", "Insert SimpleName: groupCount(428) into MethodInvocation(434) at 5", "Insert SimpleName: input(429) into MethodInvocation(434) at 6", "Insert SimpleName: aggType(430) into MethodInvocation(434) at 7", "Move MethodInvocation(454) into MethodInvocation(434) at 8", "Insert SimpleName: aggFun(387) into Assignment: =(389) at 0", "Insert QualifiedName: SqlStdOperatorTable.SUM0(388) into Assignment: =(389) at 1", "Insert NullLiteral(392) into Assignment: =(393) at 1", "Insert CastExpression(402) into Assignment: =(403) at 1", "Update SimpleName: Collections(447) to ImmutableList", "Move SimpleName: Collections(447) into MethodInvocation(427) at 0", "Update SimpleName: singletonList(448) to of", "Move SimpleName: singletonList(448) into MethodInvocation(427) at 1", "Insert InfixExpression: +(426) into MethodInvocation(427) at 2", "Move SimpleType: SqlAggFunction(393) into CastExpression(402) at 0", "Move MethodInvocation(427) into CastExpression(402) at 1", "Insert SimpleName: groupCount(424) into InfixExpression: +(426) at 0", "Insert QualifiedName: ord.i(425) into InfixExpression: +(426) at 1", "Delete SimpleName: getCluster(162)", "Delete MethodInvocation(163)", "Delete SimpleName: getTypeFactory(164)", "Delete MethodInvocation(165)", "Delete SimpleName: ArrayList(327)", "Delete SimpleType: ArrayList(328)", "Delete ParameterizedType: ArrayList<AggregateCall>(331)", "Delete ClassInstanceCreation(332)", "Delete PrimitiveType: int(335)", "Delete SimpleName: iInput(336)", "Delete SimpleName: nGroupCols(337)", "Delete VariableDeclarationFragment(338)", "Delete VariableDeclarationStatement(339)", "Delete SimpleName: aggFun(394)", "Delete CastExpression(395)", "Delete SimpleName: af(417)", "Delete SimpleName: inferReturnType(418)", "Delete SimpleName: binding(419)", "Delete MethodInvocation(420)", "Delete SimpleName: AggregateCall(438)", "Delete SimpleType: AggregateCall(439)", "Delete SimpleName: newCall(440)", "Delete SimpleName: aggFun(443)", "Delete SimpleName: iInput(449)", "Delete MethodInvocation(450)", "Delete SimpleName: aggType(451)", "Delete ClassInstanceCreation(455)", "Delete VariableDeclarationFragment(456)", "Delete SimpleName: origCall(342)", "Delete SingleVariableDeclaration(343)", "Delete SimpleName: origCalls(344)", "Delete SimpleType: Aggregation(363)", "Delete VariableDeclarationStatement(366)", "Delete SimpleName: getName(375)", "Delete MethodInvocation(376)", "Delete StringLiteral: \"COUNT\"(378)", "Delete MethodInvocation(379)", "Delete SimpleName: aggFun(380)", "Delete SimpleName: SqlSumEmptyIsZeroAggFunction(381)", "Delete SimpleType: SqlSumEmptyIsZeroAggFunction(382)", "Delete SimpleName: getType(384)", "Delete MethodInvocation(385)", "Delete ClassInstanceCreation(386)", "Delete Assignment: =(387)", "Delete ExpressionStatement(388)", "Delete QualifiedName: AggregateRelBase.AggCallBinding(399)", "Delete SimpleType: AggregateRelBase.AggCallBinding(400)", "Delete SimpleName: binding(401)", "Delete QualifiedName: AggregateRelBase.AggCallBinding(402)", "Delete SimpleType: AggregateRelBase.AggCallBinding(403)", "Delete SimpleName: typeFactory(404)", "Delete SimpleName: af(405)", "Delete SimpleName: Collections(406)", "Delete SimpleName: singletonList(407)", "Delete SimpleName: origCall(408)", "Delete SimpleName: getType(409)", "Delete MethodInvocation(410)", "Delete MethodInvocation(411)", "Delete SimpleName: nGroupCols(412)", "Delete ClassInstanceCreation(413)", "Delete VariableDeclarationFragment(414)", "Delete VariableDeclarationStatement(415)", "Delete Block(423)", "Delete IfStatement(437)", "Delete SimpleName: iInput(463)", "Delete PrefixExpression: ++(464)", "Delete ExpressionStatement(465)", "Delete Block(466)"]}}, {"ReduceAggregatesRule_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 16", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: setImportance to MethodInvocation at 1", "INS ExpressionStatement to Block at 16", "INS SimpleName: oldAggRel to MethodInvocation at 2", "INS NumberLiteral: 0d to MethodInvocation at 3", "INS SimpleName: getPlanner to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ruleCall to MethodInvocation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 8", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: SqlStdOperatorTable.COUNT to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 5", "INS VariableDeclarationStatement to Block at 8", "INS MethodInvocation to MethodInvocation at 6", "INS NullLiteral to MethodInvocation at 7", "INS SimpleName: AggregateCall to MethodInvocation at 0", "INS NullLiteral to MethodInvocation at 8", "INS SimpleName: countCall to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: create to MethodInvocation at 1", "INS SimpleName: oldAggRel to MethodInvocation at 0", "INS SimpleName: getGroupCount to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 8", "operations": ["INS SimpleName: create to MethodInvocation at 1", "INS SimpleName: countCall to VariableDeclarationFragment at 0", "INS SimpleName: oldAggRel to MethodInvocation at 6", "INS Modifier: final to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS NullLiteral to MethodInvocation at 7", "INS NullLiteral to MethodInvocation at 8", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: AggregateCall to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 8", "INS QualifiedName: SqlStdOperatorTable.COUNT to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 5"]}, {"root": "INS VariableDeclarationStatement to Block at 15", "operations": ["INS SimpleName: AggregateCall to MethodInvocation at 0", "INS SimpleName: oldAggRel to MethodInvocation at 0", "INS SimpleName: create to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 6", "INS MethodInvocation to MethodInvocation at 5", "INS VariableDeclarationStatement to Block at 15", "INS QualifiedName: SqlStdOperatorTable.COUNT to MethodInvocation at 2", "INS SimpleName: getGroupCount to MethodInvocation at 1", "INS NullLiteral to MethodInvocation at 7", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS NullLiteral to MethodInvocation at 8", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: countArgAggCall to VariableDeclarationFragment at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AggregateCall to VariableDeclarationStatement at 0"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AggregateCall to VariableDeclarationStatement at 1", "MOV MethodInvocation to MethodInvocation at 3", "MOV MethodInvocation to MethodInvocation at 4"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AggregateCall to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: AggregateCall to VariableDeclarationStatement at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3", "MOV MethodInvocation to MethodInvocation at 4"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: AggregateCall to ClassInstanceCreation at 0"]}, {"root": "INS QualifiedName: SqlStdOperatorTable.SUM0 to ClassInstanceCreation at 1", "operations": ["INS QualifiedName: SqlStdOperatorTable.SUM0 to ClassInstanceCreation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 4", "MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "UPDATE from countAgg to oldAggRel", "operations": ["UPD SimpleName: countAgg from countAgg to oldAggRel", "UPD SimpleName: countAgg from countAgg to oldAggRel", "UPD SimpleName: countAgg from countAgg to oldAggRel"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: countAgg to MethodInvocation at 0", "MOV SimpleName: getReturnType to MethodInvocation at 1"]}, {"root": "UPDATE from getReturnType to getChild", "operations": ["UPD SimpleName: getReturnType from getReturnType to getChild", "UPD SimpleName: getReturnType from getReturnType to getChild"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getReturnType to MethodInvocation at 1", "MOV SimpleName: countAgg to MethodInvocation at 0"]}, {"root": "UPDATE from getReturnType to getGroupCount", "operations": ["UPD SimpleName: getReturnType from getReturnType to getGroupCount"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: countAgg to MethodInvocation at 0", "MOV SimpleName: getReturnType to MethodInvocation at 1"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: SqlAggFunction", "DEL QualifiedName: SqlStdOperatorTable.COUNT", "DEL SimpleName: countAgg", "DEL SimpleType: SqlAggFunction"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: RelDataType", "DEL SimpleName: countType", "DEL VariableDeclarationStatement", "DEL SimpleType: RelDataType", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: typeFactory"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleType: AggregateCall", "DEL SimpleName: countCall", "DEL SimpleName: countAgg", "DEL SimpleName: countType", "DEL NullLiteral", "DEL ClassInstanceCreation", "DEL SimpleName: AggregateCall", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: sumZeroAgg", "DEL VariableDeclarationStatement", "DEL SimpleName: SqlSumEmptyIsZeroAggFunction", "DEL SimpleName: SqlAggFunction", "DEL SimpleType: SqlAggFunction", "DEL SimpleType: SqlSumEmptyIsZeroAggFunction", "DEL SimpleName: sumType"]}, {"root": "DEL SimpleName: sumZeroAgg", "operations": ["DEL SimpleName: sumZeroAgg"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL QualifiedName: SqlStdOperatorTable.COUNT", "DEL SimpleName: SqlAggFunction", "DEL SimpleName: countAgg", "DEL SimpleType: SqlAggFunction", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: countType", "DEL MethodInvocation", "DEL SimpleName: RelDataType", "DEL VariableDeclarationStatement", "DEL SimpleName: typeFactory", "DEL VariableDeclarationFragment", "DEL SimpleType: RelDataType"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: countCall", "DEL SimpleType: AggregateCall", "DEL NullLiteral", "DEL SimpleName: countAgg", "DEL SimpleName: countType", "DEL SimpleName: AggregateCall", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: countAgg", "DEL VariableDeclarationFragment", "DEL QualifiedName: SqlStdOperatorTable.COUNT", "DEL SimpleType: SqlAggFunction", "DEL SimpleName: SqlAggFunction"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleType: RelDataType", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: typeFactory", "DEL Modifier: final", "DEL SimpleName: countType", "DEL SimpleName: RelDataType"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL VariableDeclarationStatement", "DEL SimpleName: countAgg", "DEL SimpleType: AggregateCall", "DEL SimpleName: AggregateCall", "DEL SimpleName: countType", "DEL SimpleName: countArgAggCall", "DEL ClassInstanceCreation", "DEL NullLiteral"]}]}}, {"ReduceAggregatesRule_diff": {"operations": ["Insert ExpressionStatement(427) into Block(428) at 16", "Insert VariableDeclarationStatement(756) into Block(809) at 8", "Insert VariableDeclarationStatement(940) into Block(1001) at 7", "Insert VariableDeclarationStatement(1262) into Block(1427) at 15", "Insert MethodInvocation(426) into ExpressionStatement(427) at 0", "Move SimpleType: AggregateCall(742) into VariableDeclarationStatement(756) at 0", "Insert VariableDeclarationFragment(755) into VariableDeclarationStatement(756) at 1", "Insert Modifier: final(888) into VariableDeclarationStatement(900) at 0", "Insert Modifier: final(901) into VariableDeclarationStatement(918) at 0", "Move SimpleType: AggregateCall(946) into VariableDeclarationStatement(918) at 1", "Insert Modifier: final(919) into VariableDeclarationStatement(940) at 0", "Move SimpleType: AggregateCall(914) into VariableDeclarationStatement(940) at 1", "Insert VariableDeclarationFragment(939) into VariableDeclarationStatement(940) at 2", "Move Modifier: final(1257) into VariableDeclarationStatement(1262) at 0", "Move SimpleType: AggregateCall(1276) into VariableDeclarationStatement(1262) at 1", "Insert VariableDeclarationFragment(1261) into VariableDeclarationStatement(1262) at 2", "Insert MethodInvocation(422) into MethodInvocation(426) at 0", "Insert SimpleName: setImportance(423) into MethodInvocation(426) at 1", "Insert SimpleName: oldAggRel(424) into MethodInvocation(426) at 2", "Insert NumberLiteral: 0d(425) into MethodInvocation(426) at 3", "Insert SimpleName: countCall(736) into VariableDeclarationFragment(755) at 0", "Insert MethodInvocation(754) into VariableDeclarationFragment(755) at 1", "Insert SimpleName: countCall(922) into VariableDeclarationFragment(939) at 0", "Insert MethodInvocation(938) into VariableDeclarationFragment(939) at 1", "Insert SimpleName: countArgAggCall(1242) into VariableDeclarationFragment(1261) at 0", "Insert MethodInvocation(1260) into VariableDeclarationFragment(1261) at 1", "Insert SimpleName: ruleCall(420) into MethodInvocation(422) at 0", "Insert SimpleName: getPlanner(421) into MethodInvocation(422) at 1", "Insert SimpleName: AggregateCall(737) into MethodInvocation(754) at 0", "Insert SimpleName: create(738) into MethodInvocation(754) at 1", "Insert QualifiedName: SqlStdOperatorTable.COUNT(739) into MethodInvocation(754) at 2", "Move MethodInvocation(749) into MethodInvocation(754) at 3", "Move MethodInvocation(752) into MethodInvocation(754) at 4", "Insert MethodInvocation(748) into MethodInvocation(754) at 5", "Insert MethodInvocation(751) into MethodInvocation(754) at 6", "Insert NullLiteral(752) into MethodInvocation(754) at 7", "Insert NullLiteral(753) into MethodInvocation(754) at 8", "Move SimpleType: AggregateCall(911) into ClassInstanceCreation(916) at 0", "Insert QualifiedName: SqlStdOperatorTable.SUM0(907) into ClassInstanceCreation(916) at 1", "Insert SimpleName: AggregateCall(923) into MethodInvocation(938) at 0", "Insert SimpleName: create(924) into MethodInvocation(938) at 1", "Insert QualifiedName: SqlStdOperatorTable.COUNT(925) into MethodInvocation(938) at 2", "Move MethodInvocation(950) into MethodInvocation(938) at 3", "Move MethodInvocation(953) into MethodInvocation(938) at 4", "Insert MethodInvocation(934) into MethodInvocation(938) at 5", "Insert SimpleName: oldAggRel(935) into MethodInvocation(938) at 6", "Insert NullLiteral(936) into MethodInvocation(938) at 7", "Insert NullLiteral(937) into MethodInvocation(938) at 8", "Insert SimpleName: AggregateCall(1243) into MethodInvocation(1260) at 0", "Insert SimpleName: create(1244) into MethodInvocation(1260) at 1", "Insert QualifiedName: SqlStdOperatorTable.COUNT(1245) into MethodInvocation(1260) at 2", "Move MethodInvocation(1283) into MethodInvocation(1260) at 3", "Move MethodInvocation(1286) into MethodInvocation(1260) at 4", "Insert MethodInvocation(1254) into MethodInvocation(1260) at 5", "Insert MethodInvocation(1257) into MethodInvocation(1260) at 6", "Insert NullLiteral(1258) into MethodInvocation(1260) at 7", "Insert NullLiteral(1259) into MethodInvocation(1260) at 8", "Insert SimpleName: oldAggRel(746) into MethodInvocation(748) at 0", "Insert SimpleName: getGroupCount(747) into MethodInvocation(748) at 1", "Update SimpleName: countAgg(735) to oldAggRel", "Move SimpleName: countAgg(735) into MethodInvocation(751) at 0", "Update SimpleName: getReturnType(736) to getChild", "Move SimpleName: getReturnType(736) into MethodInvocation(751) at 1", "Update SimpleName: countAgg(936) to oldAggRel", "Move SimpleName: countAgg(936) into MethodInvocation(934) at 0", "Update SimpleName: getReturnType(937) to getGroupCount", "Move SimpleName: getReturnType(937) into MethodInvocation(934) at 1", "Insert SimpleName: oldAggRel(1252) into MethodInvocation(1254) at 0", "Insert SimpleName: getGroupCount(1253) into MethodInvocation(1254) at 1", "Update SimpleName: countAgg(1268) to oldAggRel", "Move SimpleName: countAgg(1268) into MethodInvocation(1257) at 0", "Update SimpleName: getReturnType(1269) to getChild", "Move SimpleName: getReturnType(1269) into MethodInvocation(1257) at 1", "Delete SimpleName: SqlAggFunction(726)", "Delete SimpleType: SqlAggFunction(727)", "Delete SimpleName: countAgg(728)", "Delete QualifiedName: SqlStdOperatorTable.COUNT(729)", "Delete VariableDeclarationFragment(730)", "Delete VariableDeclarationStatement(731)", "Delete SimpleName: RelDataType(732)", "Delete SimpleType: RelDataType(733)", "Delete SimpleName: countType(734)", "Delete SimpleName: typeFactory(737)", "Delete MethodInvocation(738)", "Delete VariableDeclarationFragment(739)", "Delete VariableDeclarationStatement(740)", "Delete SimpleName: countCall(743)", "Delete SimpleName: AggregateCall(744)", "Delete SimpleType: AggregateCall(745)", "Delete SimpleName: countAgg(746)", "Delete SimpleName: countType(753)", "Delete NullLiteral(754)", "Delete ClassInstanceCreation(755)", "Delete VariableDeclarationFragment(756)", "Delete VariableDeclarationStatement(757)", "Delete SimpleName: SqlAggFunction(901)", "Delete SimpleType: SqlAggFunction(902)", "Delete SimpleName: sumZeroAgg(903)", "Delete SimpleName: SqlSumEmptyIsZeroAggFunction(904)", "Delete SimpleType: SqlSumEmptyIsZeroAggFunction(905)", "Delete SimpleName: sumType(906)", "Delete ClassInstanceCreation(907)", "Delete VariableDeclarationFragment(908)", "Delete VariableDeclarationStatement(909)", "Delete SimpleName: sumZeroAgg(915)", "Delete SimpleName: SqlAggFunction(927)", "Delete SimpleType: SqlAggFunction(928)", "Delete SimpleName: countAgg(929)", "Delete QualifiedName: SqlStdOperatorTable.COUNT(930)", "Delete VariableDeclarationFragment(931)", "Delete VariableDeclarationStatement(932)", "Delete SimpleName: RelDataType(933)", "Delete SimpleType: RelDataType(934)", "Delete SimpleName: countType(935)", "Delete SimpleName: typeFactory(938)", "Delete MethodInvocation(939)", "Delete VariableDeclarationFragment(940)", "Delete VariableDeclarationStatement(941)", "Delete SimpleName: AggregateCall(942)", "Delete SimpleType: AggregateCall(943)", "Delete SimpleName: countCall(944)", "Delete SimpleName: countAgg(947)", "Delete SimpleName: countType(954)", "Delete NullLiteral(955)", "Delete ClassInstanceCreation(956)", "Delete VariableDeclarationFragment(957)", "Delete VariableDeclarationStatement(958)", "Delete SimpleName: SqlAggFunction(1258)", "Delete SimpleType: SqlAggFunction(1259)", "Delete SimpleName: countAgg(1260)", "Delete QualifiedName: SqlStdOperatorTable.COUNT(1261)", "Delete VariableDeclarationFragment(1262)", "Delete VariableDeclarationStatement(1263)", "Delete Modifier: final(1264)", "Delete SimpleName: RelDataType(1265)", "Delete SimpleType: RelDataType(1266)", "Delete SimpleName: countType(1267)", "Delete SimpleName: typeFactory(1270)", "Delete MethodInvocation(1271)", "Delete VariableDeclarationFragment(1272)", "Delete VariableDeclarationStatement(1273)", "Delete Modifier: final(1274)", "Delete SimpleName: countArgAggCall(1277)", "Delete SimpleName: AggregateCall(1278)", "Delete SimpleType: AggregateCall(1279)", "Delete SimpleName: countAgg(1280)", "Delete SimpleName: countType(1287)", "Delete NullLiteral(1288)", "Delete ClassInstanceCreation(1289)", "Delete VariableDeclarationFragment(1290)", "Delete VariableDeclarationStatement(1291)"]}}, {"SqlStdOperatorTable_cluster": {"actions": [{"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}]}}, {"SqlStdOperatorTable_diff": {"operations": ["Delete NullLiteral(1489)"]}}, {"SqlSumEmptyIsZeroAggFunction_cluster": {"actions": [{"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: RelDataType to MethodDeclaration at 1"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS QualifiedName: SqlTypeName.ANY to MethodInvocation at 2", "INS SimpleName: createSqlType to MethodInvocation at 1", "INS SimpleName: typeFactory to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS QualifiedName: SqlTypeName.ANY to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: createSqlType to MethodInvocation at 1"]}, {"root": "UPDATE from type to typeFactory", "operations": ["UPD SimpleName: type from type to typeFactory"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: type to MethodInvocation at 0"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL SimpleType: RelDataType", "DEL SimpleName: type", "DEL VariableDeclarationFragment", "DEL SimpleName: RelDataType", "DEL Modifier: final", "DEL Modifier: private"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: type", "DEL SimpleName: RelDataType", "DEL SimpleType: RelDataType"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL SimpleName: type", "DEL ThisExpression", "DEL SimpleName: type", "DEL ExpressionStatement", "DEL FieldAccess"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: type", "DEL SimpleName: getType", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL Block", "DEL Modifier: public"]}, {"root": "DEL SimpleType: RelDataType", "operations": ["DEL SimpleType: RelDataType", "DEL SimpleName: RelDataType"]}, {"root": "DEL SimpleName: type", "operations": ["DEL SimpleName: type"]}]}}, {"SqlSumEmptyIsZeroAggFunction_diff": {"operations": ["Move SimpleType: RelDataType(70) into MethodDeclaration(67) at 1", "Insert MethodInvocation(64) into ReturnStatement(65) at 0", "Insert MethodInvocation(48) into MethodInvocation(49) at 2", "Insert SimpleName: typeFactory(61) into MethodInvocation(64) at 0", "Insert SimpleName: createSqlType(62) into MethodInvocation(64) at 1", "Insert QualifiedName: SqlTypeName.ANY(63) into MethodInvocation(64) at 2", "Update SimpleName: type(63) to typeFactory", "Move SimpleName: type(63) into MethodInvocation(48) at 0", "Insert SimpleName: createSqlType(46) into MethodInvocation(48) at 1", "Insert QualifiedName: SqlTypeName.ANY(47) into MethodInvocation(48) at 2", "Delete Modifier: private(22)", "Delete Modifier: final(23)", "Delete SimpleName: RelDataType(24)", "Delete SimpleType: RelDataType(25)", "Delete SimpleName: type(26)", "Delete VariableDeclarationFragment(27)", "Delete FieldDeclaration(28)", "Delete Modifier: public(29)", "Delete SimpleName: RelDataType(31)", "Delete SimpleType: RelDataType(32)", "Delete SimpleName: type(33)", "Delete SingleVariableDeclaration(34)", "Delete ThisExpression(42)", "Delete SimpleName: type(43)", "Delete FieldAccess(44)", "Delete SimpleName: type(45)", "Delete Assignment: =(46)", "Delete ExpressionStatement(47)", "Delete Modifier: public(68)", "Delete SimpleName: getType(71)", "Delete SimpleName: type(72)", "Delete ReturnStatement(73)", "Delete Block(74)", "Delete MethodDeclaration(75)", "Delete SimpleName: RelDataType(77)", "Delete SimpleType: RelDataType(78)", "Delete SimpleName: type(84)"]}}, {"ArrayTable_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 5", "INS ReturnStatement to Block at 1", "INS Block to MethodDeclaration at 7", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS Block to MethodDeclaration at 4", "INS SimpleName: enumerator to MethodInvocation at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: content to MethodInvocation at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 22", "operations": ["INS TagElement to Javadoc at 0", "INS SimpleName: rowCount to SingleVariableDeclaration at 1", "INS Modifier: private to TypeDeclaration: class at 1", "INS SimpleName: Enumerator to SimpleType: Enumerator at 0", "INS PrefixExpression: - to Assignment: = at 1", "INS ParameterizedType: Enumerator<T> to CastExpression at 0", "INS SimpleName: T to SimpleType: T at 0", "INS ReturnStatement to Block at 0", "INS Modifier: private to TypeDeclaration: class at 1", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS Javadoc to TypeDeclaration: class at 0", "INS SimpleType: Column to ParameterizedType: List<Column> at 1", "INS Assignment: = to ExpressionStatement at 0", "INS TypeParameter to MethodDeclaration at 2", "INS Block to IfStatement at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleType: Representation to FieldDeclaration at 1", "INS TypeDeclaration: class to TypeDeclaration: class at 10", "INS SimpleName: columns to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS PrefixExpression: ++ to InfixExpression: < at 0", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS SimpleName: T to SimpleType: T at 0", "INS StringLiteral: \"unchecked\" to SingleMemberAnnotation at 1", "INS Modifier: final to FieldDeclaration at 0", "INS SimpleType: T to ParameterizedType: Enumerator<T> at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 22", "INS ParameterizedType: List<Column> to FieldDeclaration at 1", "INS SimpleName: T to TypeParameter at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS ClassInstanceCreation to CastExpression at 1", "INS SimpleType: List to ParameterizedType: List<Column> at 0", "INS SimpleName: close to MethodDeclaration at 2", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: ArrayEnumerator to SimpleType: ArrayEnumerator at 0", "INS TagElement to Javadoc at 0", "INS Modifier: final to FieldDeclaration at 0", "INS SimpleType: Column to SingleVariableDeclaration at 0", "INS SimpleName: representation to MethodInvocation at 0", "INS SimpleName: rowCount to Assignment: = at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: get to MethodInvocation at 1", "INS Javadoc to TypeDeclaration: class at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS ParameterizedType: Enumerator<T> to CastExpression at 0", "INS SimpleName: enumerator to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: current to MethodDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS Assignment: = to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: moveNext to MethodDeclaration at 2", "INS Modifier: static to TypeDeclaration: class at 2", "INS Block to MethodDeclaration at 3", "INS ThisExpression to FieldAccess at 0", "INS SimpleType: ArrayEnumerator to ClassInstanceCreation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: Object to MethodDeclaration at 1", "INS SimpleType: Enumerator to ParameterizedType: Enumerator<T> at 0", "INS ParameterizedType: Enumerator<T> to MethodDeclaration at 3", "INS SimpleName: Representation to SimpleType: Representation at 0", "INS SimpleName: column to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: Column to SimpleType: Column at 0", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS InfixExpression: < to ReturnStatement at 0", "INS SingleMemberAnnotation to MethodDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: dataSet to FieldAccess at 1", "INS SimpleType: T to ParameterizedType: Enumerator<T> at 1", "INS Block to MethodDeclaration at 3", "INS SimpleName: rowCount to InfixExpression: < at 1", "INS SimpleName: columns to MethodInvocation at 0", "INS CastExpression to ReturnStatement at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS ReturnStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: dataSet to VariableDeclarationFragment at 0", "INS SimpleName: List to SimpleType: List at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS ClassInstanceCreation to CastExpression at 1", "INS SimpleType: Object to ParameterizedType: Enumerator<Object> at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: ObjectEnumerator to TypeDeclaration: class at 3", "INS SimpleName: getObject to MethodInvocation at 1", "INS Block to IfStatement at 2", "INS SimpleName: representation to VariableDeclarationFragment at 0", "INS SimpleName: size to ClassInstanceCreation at 1", "INS SimpleType: Enumerator to ParameterizedType: Enumerator<T> at 0", "INS SimpleName: ObjectEnumerator to SimpleType: ObjectEnumerator at 0", "INS SimpleName: reset to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS SimpleName: representation to FieldAccess at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: Content to TypeDeclaration: class at 3", "INS SimpleName: size to ClassInstanceCreation at 1", "INS ThisExpression to FieldAccess at 0", "INS Block to MethodDeclaration at 3", "INS ParameterizedType: Enumerator<Object> to TypeDeclaration: class at 4", "INS SimpleName: Object to SimpleType: Object at 0", "INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS FieldAccess to Assignment: = at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SimpleName: columns to ClassInstanceCreation at 2", "INS TextElement: Enumerator over a table with more than one column; each element to TagElement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS TextElement: Enumerator over a table with a single column; each element to TagElement at 0", "INS SimpleType: ObjectEnumerator to ClassInstanceCreation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS PrimitiveType: int to FieldDeclaration at 1", "INS SimpleName: size to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: rowCount to FieldAccess at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: columns to FieldAccess at 1", "INS SimpleType: Enumerator to ParameterizedType: Enumerator<T> at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleName: i to Assignment: = at 0", "INS TextElement: returned is an object.  to TagElement at 1", "INS SimpleName: i to MethodInvocation at 3", "INS SimpleName: Enumerator to SimpleType: Enumerator at 0", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: columns to VariableDeclarationFragment at 0", "INS NumberLiteral: 1 to InfixExpression: == at 1", "INS SimpleName: Enumerator to SimpleType: Enumerator at 0", "INS IfStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS ExpressionStatement to Block at 1", "INS QualifiedName: column.dataSet to Assignment: = at 1", "INS CastExpression to ReturnStatement at 0", "INS SimpleType: Enumerator to ParameterizedType: Enumerator<Object> at 0", "INS SimpleName: dataSet to MethodInvocation at 2", "INS ParameterizedType: List<Column> to SingleVariableDeclaration at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS MethodInvocation to ClassInstanceCreation at 2", "INS TypeDeclaration: class to TypeDeclaration: class at 9", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS ExpressionStatement to Block at 2", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Modifier: final to FieldDeclaration at 0", "INS SimpleName: rowCount to Assignment: = at 1", "INS SimpleName: columns to Assignment: = at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS TextElement: returned is an array.  to TagElement at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: rowCount to FieldAccess at 1", "INS QualifiedName: column.representation to Assignment: = at 1", "INS SimpleType: Object to FieldDeclaration at 1", "INS SimpleName: columns to MethodInvocation at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: rowCount to SingleVariableDeclaration at 1", "INS SimpleType: T to ParameterizedType: Enumerator<T> at 1", "INS ReturnStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS Modifier: public to MethodDeclaration at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: ArrayEnumerator to TypeDeclaration: class at 3", "INS SimpleName: ArrayEnumerator to MethodDeclaration at 1", "INS SimpleName: i to PrefixExpression: ++ at 0", "INS Modifier: public to TypeDeclaration: class at 1", "INS Modifier: static to TypeDeclaration: class at 2", "INS SimpleName: Column to SimpleType: Column at 0", "INS SimpleName: ObjectEnumerator to MethodDeclaration at 1", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS Modifier: static to TypeDeclaration: class at 2", "INS Block to MethodDeclaration at 4", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: rowCount to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleType: List to ParameterizedType: List<Column> at 0", "INS SimpleName: Enumerator to SimpleType: Enumerator at 0", "INS PrefixExpression: - to VariableDeclarationFragment at 1", "INS SimpleName: i to VariableDeclarationFragment at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: Queryable<T> to MethodDeclaration at 2", "MOV SimpleName: asQueryable to MethodDeclaration at 3", "MOV TypeParameter to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV Modifier: public to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV Javadoc to TypeDeclaration: class at 0", "MOV FieldDeclaration to TypeDeclaration: class at 5", "MOV MethodDeclaration to TypeDeclaration: class at 7", "MOV FieldDeclaration to TypeDeclaration: class at 6", "MOV FieldDeclaration to TypeDeclaration: class at 4"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV SimpleType: Enumerator to TypeDeclaration: class at 4"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 7", "MOV MethodDeclaration to TypeDeclaration: class at 12", "MOV MethodDeclaration to TypeDeclaration: class at 10", "MOV MethodDeclaration to TypeDeclaration: class at 11"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV PrimitiveType: int to FieldDeclaration at 1", "MOV Modifier: final to FieldDeclaration at 0", "MOV VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV PrimitiveType: int to FieldDeclaration at 0", "MOV Modifier: final to FieldDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ArrayType: Object[] to MethodDeclaration at 1", "MOV Block to MethodDeclaration at 3", "MOV Modifier: public to MethodDeclaration at 0", "MOV SimpleName: current to MethodDeclaration at 2"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ParameterizedType: AbstractTableQueryable<T> to ClassInstanceCreation at 0", "MOV ThisExpression to ClassInstanceCreation at 3", "MOV SimpleName: queryProvider to ClassInstanceCreation at 1", "MOV SimpleName: tableName to ClassInstanceCreation at 4", "MOV SimpleName: schema to ClassInstanceCreation at 2"]}, {"root": "MOVE from ParameterizedType: List<Column>", "operations": ["MOV SimpleType: Column to ParameterizedType: List<Column> at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: Object[] to VariableDeclarationStatement at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleMemberAnnotation to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 1", "MOV SimpleName: enumerator to MethodDeclaration at 3", "MOV ParameterizedType: Enumerator<T> to MethodDeclaration at 2"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from ArrayCreation", "operations": ["MOV ArrayType: Object[] to ArrayCreation at 0"]}, {"root": "INS MethodInvocation to ArrayCreation at 1", "operations": ["INS MethodInvocation to ArrayCreation at 1", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: columns to MethodInvocation at 0"]}, {"root": "INS SimpleType: Column to VariableDeclarationStatement at 1", "operations": ["INS SimpleName: Column to SimpleType: Column at 0", "INS SimpleType: Column to VariableDeclarationStatement at 1"]}, {"root": "INS SimpleName: columns to MethodInvocation at 0", "operations": ["INS SimpleName: columns to MethodInvocation at 0"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ClassInstanceCreation", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL AnonymousClassDeclaration", "DEL SimpleName: size", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL SimpleName: columnCount", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL Block", "DEL QualifiedName: content.columns", "DEL FieldDeclaration", "DEL AnonymousClassDeclaration", "DEL Block"]}, {"root": "DEL QualifiedName: content.size", "operations": ["DEL QualifiedName: content.size"]}, {"root": "DEL SimpleName: columnCount", "operations": ["DEL SimpleName: columnCount"]}, {"root": "DEL QualifiedName: content.columns", "operations": ["DEL QualifiedName: content.columns"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Modifier: static", "DEL Modifier: public", "DEL SimpleName: Content", "DEL TypeDeclaration: class"]}]}}, {"ArrayTable_diff": {"operations": ["Insert MethodDeclaration(232) into TypeDeclaration: class(3486) at 8", "Insert TypeDeclaration: class(3485) into TypeDeclaration: class(3486) at 21", "Move Modifier: public(172) into MethodDeclaration(232) at 0", "Move TypeParameter(174) into MethodDeclaration(232) at 1", "Move ParameterizedType: Queryable<T>(179) into MethodDeclaration(232) at 2", "Move SimpleName: asQueryable(180) into MethodDeclaration(232) at 3", "Move SingleVariableDeclaration(185) into MethodDeclaration(232) at 4", "Move SingleVariableDeclaration(189) into MethodDeclaration(232) at 5", "Move SingleVariableDeclaration(193) into MethodDeclaration(232) at 6", "Insert Block(231) into MethodDeclaration(232) at 7", "Move Javadoc(3232) into TypeDeclaration: class(3485) at 0", "Insert Modifier: public(3132) into TypeDeclaration: class(3485) at 1", "Insert Modifier: static(3133) into TypeDeclaration: class(3485) at 2", "Insert SimpleName: Content(3134) into TypeDeclaration: class(3485) at 3", "Move FieldDeclaration(3245) into TypeDeclaration: class(3485) at 4", "Move FieldDeclaration(3251) into TypeDeclaration: class(3485) at 5", "Move FieldDeclaration(3257) into TypeDeclaration: class(3485) at 6", "Move MethodDeclaration(3296) into TypeDeclaration: class(3485) at 7", "Insert MethodDeclaration(3244) into TypeDeclaration: class(3485) at 8", "Insert TypeDeclaration: class(3346) into TypeDeclaration: class(3485) at 9", "Insert TypeDeclaration: class(3484) into TypeDeclaration: class(3485) at 10", "Insert ReturnStatement(230) into Block(231) at 0", "Insert SingleMemberAnnotation(3198) into MethodDeclaration(3244) at 0", "Insert Modifier: public(3199) into MethodDeclaration(3244) at 1", "Insert TypeParameter(3201) into MethodDeclaration(3244) at 2", "Insert ParameterizedType: Enumerator<T>(3206) into MethodDeclaration(3244) at 3", "Insert SimpleName: enumerator(3207) into MethodDeclaration(3244) at 4", "Insert Block(3243) into MethodDeclaration(3244) at 5", "Insert Javadoc(3248) into TypeDeclaration: class(3346) at 0", "Insert Modifier: private(3249) into TypeDeclaration: class(3346) at 1", "Insert Modifier: static(3250) into TypeDeclaration: class(3346) at 2", "Insert SimpleName: ObjectEnumerator(3251) into TypeDeclaration: class(3346) at 3", "Insert ParameterizedType: Enumerator<Object>(3256) into TypeDeclaration: class(3346) at 4", "Insert FieldDeclaration(3261) into TypeDeclaration: class(3346) at 5", "Insert FieldDeclaration(3267) into TypeDeclaration: class(3346) at 6", "Insert FieldDeclaration(3273) into TypeDeclaration: class(3346) at 7", "Insert FieldDeclaration(3279) into TypeDeclaration: class(3346) at 8", "Insert MethodDeclaration(3308) into TypeDeclaration: class(3346) at 9", "Insert MethodDeclaration(3320) into TypeDeclaration: class(3346) at 10", "Insert MethodDeclaration(3330) into TypeDeclaration: class(3346) at 11", "Insert MethodDeclaration(3340) into TypeDeclaration: class(3346) at 12", "Insert MethodDeclaration(3345) into TypeDeclaration: class(3346) at 13", "Insert Javadoc(3350) into TypeDeclaration: class(3484) at 0", "Insert Modifier: private(3351) into TypeDeclaration: class(3484) at 1", "Insert Modifier: static(3352) into TypeDeclaration: class(3484) at 2", "Insert SimpleName: ArrayEnumerator(3353) into TypeDeclaration: class(3484) at 3", "Move SimpleType: Enumerator(223) into TypeDeclaration: class(3484) at 4", "Insert FieldDeclaration(3360) into TypeDeclaration: class(3484) at 5", "Insert FieldDeclaration(3369) into TypeDeclaration: class(3484) at 6", "Move FieldDeclaration(243) into TypeDeclaration: class(3484) at 7", "Insert MethodDeclaration(3401) into TypeDeclaration: class(3484) at 8", "Insert MethodDeclaration(3458) into TypeDeclaration: class(3484) at 9", "Move MethodDeclaration(308) into TypeDeclaration: class(3484) at 10", "Move MethodDeclaration(318) into TypeDeclaration: class(3484) at 11", "Move MethodDeclaration(323) into TypeDeclaration: class(3484) at 12", "Insert ClassInstanceCreation(229) into ReturnStatement(230) at 0", "Insert SimpleName: SuppressWarnings(3196) into SingleMemberAnnotation(3198) at 0", "Insert StringLiteral: \"unchecked\"(3197) into SingleMemberAnnotation(3198) at 1", "Insert SimpleName: T(3200) into TypeParameter(3201) at 0", "Insert SimpleType: Enumerator(3203) into ParameterizedType: Enumerator<T>(3206) at 0", "Insert SimpleType: T(3205) into ParameterizedType: Enumerator<T>(3206) at 1", "Insert IfStatement(3242) into Block(3243) at 0", "Insert TagElement(3247) into Javadoc(3248) at 0", "Insert SimpleType: Enumerator(3253) into ParameterizedType: Enumerator<Object>(3256) at 0", "Insert SimpleType: Object(3255) into ParameterizedType: Enumerator<Object>(3256) at 1", "Move Modifier: final(224) into FieldDeclaration(3261) at 0", "Move PrimitiveType: int(225) into FieldDeclaration(3261) at 1", "Move VariableDeclarationFragment(228) into FieldDeclaration(3261) at 2", "Move Modifier: final(230) into FieldDeclaration(3267) at 0", "Insert SimpleType: Object(3264) into FieldDeclaration(3267) at 1", "Insert VariableDeclarationFragment(3266) into FieldDeclaration(3267) at 2", "Insert Modifier: final(3268) into FieldDeclaration(3273) at 0", "Insert SimpleType: Representation(3270) into FieldDeclaration(3273) at 1", "Insert VariableDeclarationFragment(3272) into FieldDeclaration(3273) at 2", "Move PrimitiveType: int(231) into FieldDeclaration(3279) at 0", "Insert VariableDeclarationFragment(3278) into FieldDeclaration(3279) at 1", "Insert Modifier: public(3280) into MethodDeclaration(3308) at 0", "Insert SimpleName: ObjectEnumerator(3281) into MethodDeclaration(3308) at 1", "Insert SingleVariableDeclaration(3284) into MethodDeclaration(3308) at 2", "Insert SingleVariableDeclaration(3288) into MethodDeclaration(3308) at 3", "Insert Block(3307) into MethodDeclaration(3308) at 4", "Insert Modifier: public(3309) into MethodDeclaration(3320) at 0", "Insert SimpleType: Object(3311) into MethodDeclaration(3320) at 1", "Insert SimpleName: current(3312) into MethodDeclaration(3320) at 2", "Insert Block(3319) into MethodDeclaration(3320) at 3", "Insert Modifier: public(3321) into MethodDeclaration(3330) at 0", "Insert PrimitiveType: boolean(3322) into MethodDeclaration(3330) at 1", "Insert SimpleName: moveNext(3323) into MethodDeclaration(3330) at 2", "Insert Block(3329) into MethodDeclaration(3330) at 3", "Insert Modifier: public(3331) into MethodDeclaration(3340) at 0", "Insert PrimitiveType: void(3332) into MethodDeclaration(3340) at 1", "Insert SimpleName: reset(3333) into MethodDeclaration(3340) at 2", "Insert Block(3339) into MethodDeclaration(3340) at 3", "Insert Modifier: public(3341) into MethodDeclaration(3345) at 0", "Insert PrimitiveType: void(3342) into MethodDeclaration(3345) at 1", "Insert SimpleName: close(3343) into MethodDeclaration(3345) at 2", "Insert Block(3344) into MethodDeclaration(3345) at 3", "Insert TagElement(3349) into Javadoc(3350) at 0", "Insert Modifier: final(3356) into FieldDeclaration(3360) at 0", "Insert PrimitiveType: int(3357) into FieldDeclaration(3360) at 1", "Insert VariableDeclarationFragment(3359) into FieldDeclaration(3360) at 2", "Insert Modifier: final(3361) into FieldDeclaration(3369) at 0", "Insert ParameterizedType: List<Column>(3366) into FieldDeclaration(3369) at 1", "Insert VariableDeclarationFragment(3368) into FieldDeclaration(3369) at 2", "Insert Modifier: public(3376) into MethodDeclaration(3401) at 0", "Insert SimpleName: ArrayEnumerator(3377) into MethodDeclaration(3401) at 1", "Insert SingleVariableDeclaration(3380) into MethodDeclaration(3401) at 2", "Insert SingleVariableDeclaration(3387) into MethodDeclaration(3401) at 3", "Insert Block(3400) into MethodDeclaration(3401) at 4", "Move Modifier: public(244) into MethodDeclaration(3458) at 0", "Move ArrayType: Object[](248) into MethodDeclaration(3458) at 1", "Move SimpleName: current(249) into MethodDeclaration(3458) at 2", "Move Block(297) into MethodDeclaration(3458) at 3", "Move ParameterizedType: AbstractTableQueryable<T>(198) into ClassInstanceCreation(229) at 0", "Move SimpleName: queryProvider(199) into ClassInstanceCreation(229) at 1", "Move SimpleName: schema(200) into ClassInstanceCreation(229) at 2", "Move ThisExpression(201) into ClassInstanceCreation(229) at 3", "Move SimpleName: tableName(202) into ClassInstanceCreation(229) at 4", "Insert AnonymousClassDeclaration(228) into ClassInstanceCreation(229) at 5", "Insert SimpleName: Enumerator(3202) into SimpleType: Enumerator(3203) at 0", "Insert SimpleName: T(3204) into SimpleType: T(3205) at 0", "Insert InfixExpression: ==(3212) into IfStatement(3242) at 0", "Insert Block(3228) into IfStatement(3242) at 1", "Insert Block(3241) into IfStatement(3242) at 2", "Insert TextElement: Enumerator over a table with a single column; each element(3245) into TagElement(3247) at 0", "Insert TextElement: returned is an object. (3246) into TagElement(3247) at 1", "Insert SimpleName: Enumerator(3252) into SimpleType: Enumerator(3253) at 0", "Insert SimpleName: Object(3254) into SimpleType: Object(3255) at 0", "Insert SimpleName: Object(3263) into SimpleType: Object(3264) at 0", "Insert SimpleName: dataSet(3265) into VariableDeclarationFragment(3266) at 0", "Insert SimpleName: Representation(3269) into SimpleType: Representation(3270) at 0", "Insert SimpleName: representation(3271) into VariableDeclarationFragment(3272) at 0", "Insert SimpleName: i(3275) into VariableDeclarationFragment(3278) at 0", "Insert PrefixExpression: -(3277) into VariableDeclarationFragment(3278) at 1", "Insert PrimitiveType: int(3282) into SingleVariableDeclaration(3284) at 0", "Insert SimpleName: rowCount(3283) into SingleVariableDeclaration(3284) at 1", "Insert SimpleType: Column(3286) into SingleVariableDeclaration(3288) at 0", "Insert SimpleName: column(3287) into SingleVariableDeclaration(3288) at 1", "Insert ExpressionStatement(3294) into Block(3307) at 0", "Insert ExpressionStatement(3300) into Block(3307) at 1", "Insert ExpressionStatement(3306) into Block(3307) at 2", "Insert SimpleName: Object(3310) into SimpleType: Object(3311) at 0", "Insert ReturnStatement(3318) into Block(3319) at 0", "Insert ReturnStatement(3328) into Block(3329) at 0", "Insert ExpressionStatement(3338) into Block(3339) at 0", "Insert TextElement: Enumerator over a table with more than one column; each element(3347) into TagElement(3349) at 0", "Insert TextElement: returned is an array. (3348) into TagElement(3349) at 1", "Insert SimpleName: rowCount(3358) into VariableDeclarationFragment(3359) at 0", "Insert SimpleType: List(3363) into ParameterizedType: List<Column>(3366) at 0", "Move SimpleType: Column(275) into ParameterizedType: List<Column>(3366) at 1", "Insert SimpleName: columns(3367) into VariableDeclarationFragment(3368) at 0", "Insert PrimitiveType: int(3378) into SingleVariableDeclaration(3380) at 0", "Insert SimpleName: rowCount(3379) into SingleVariableDeclaration(3380) at 1", "Insert ParameterizedType: List<Column>(3385) into SingleVariableDeclaration(3387) at 0", "Insert SimpleName: columns(3386) into SingleVariableDeclaration(3387) at 1", "Insert ExpressionStatement(3393) into Block(3400) at 0", "Insert ExpressionStatement(3399) into Block(3400) at 1", "Insert MethodDeclaration(227) into AnonymousClassDeclaration(228) at 0", "Insert MethodInvocation(3210) into InfixExpression: ==(3212) at 0", "Insert NumberLiteral: 1(3211) into InfixExpression: ==(3212) at 1", "Insert ReturnStatement(3227) into Block(3228) at 0", "Insert ReturnStatement(3240) into Block(3241) at 0", "Insert NumberLiteral: 1(3276) into PrefixExpression: -(3277) at 0", "Insert SimpleName: Column(3285) into SimpleType: Column(3286) at 0", "Insert Assignment: =(3293) into ExpressionStatement(3294) at 0", "Insert Assignment: =(3299) into ExpressionStatement(3300) at 0", "Insert Assignment: =(3305) into ExpressionStatement(3306) at 0", "Insert MethodInvocation(3317) into ReturnStatement(3318) at 0", "Insert InfixExpression: <(3327) into ReturnStatement(3328) at 0", "Insert Assignment: =(3337) into ExpressionStatement(3338) at 0", "Insert SimpleName: List(3362) into SimpleType: List(3363) at 0", "Insert SimpleType: List(3382) into ParameterizedType: List<Column>(3385) at 0", "Insert SimpleType: Column(3384) into ParameterizedType: List<Column>(3385) at 1", "Insert Assignment: =(3392) into ExpressionStatement(3393) at 0", "Insert Assignment: =(3398) into ExpressionStatement(3399) at 0", "Move ArrayType: Object[](258) into VariableDeclarationStatement(3422) at 0", "Move SingleMemberAnnotation(205) into MethodDeclaration(227) at 0", "Move Modifier: public(206) into MethodDeclaration(227) at 1", "Move ParameterizedType: Enumerator<T>(211) into MethodDeclaration(227) at 2", "Move SimpleName: enumerator(212) into MethodDeclaration(227) at 3", "Insert Block(226) into MethodDeclaration(227) at 4", "Insert SimpleName: columns(3208) into MethodInvocation(3210) at 0", "Insert SimpleName: size(3209) into MethodInvocation(3210) at 1", "Insert CastExpression(3226) into ReturnStatement(3227) at 0", "Insert CastExpression(3239) into ReturnStatement(3240) at 0", "Insert FieldAccess(3291) into Assignment: =(3293) at 0", "Insert SimpleName: rowCount(3292) into Assignment: =(3293) at 1", "Insert FieldAccess(3297) into Assignment: =(3299) at 0", "Insert QualifiedName: column.dataSet(3298) into Assignment: =(3299) at 1", "Insert FieldAccess(3303) into Assignment: =(3305) at 0", "Insert QualifiedName: column.representation(3304) into Assignment: =(3305) at 1", "Insert SimpleName: representation(3313) into MethodInvocation(3317) at 0", "Insert SimpleName: getObject(3314) into MethodInvocation(3317) at 1", "Insert SimpleName: dataSet(3315) into MethodInvocation(3317) at 2", "Insert SimpleName: i(3316) into MethodInvocation(3317) at 3", "Insert PrefixExpression: ++(3325) into InfixExpression: <(3327) at 0", "Insert SimpleName: rowCount(3326) into InfixExpression: <(3327) at 1", "Insert SimpleName: i(3334) into Assignment: =(3337) at 0", "Insert PrefixExpression: -(3336) into Assignment: =(3337) at 1", "Insert SimpleName: List(3381) into SimpleType: List(3382) at 0", "Insert SimpleName: Column(3383) into SimpleType: Column(3384) at 0", "Insert FieldAccess(3390) into Assignment: =(3392) at 0", "Insert SimpleName: rowCount(3391) into Assignment: =(3392) at 1", "Insert FieldAccess(3396) into Assignment: =(3398) at 0", "Insert SimpleName: columns(3397) into Assignment: =(3398) at 1", "Move VariableDeclarationStatement(221) into Block(226) at 0", "Insert ReturnStatement(225) into Block(226) at 1", "Insert ParameterizedType: Enumerator<T>(3217) into CastExpression(3226) at 0", "Insert ClassInstanceCreation(3225) into CastExpression(3226) at 1", "Insert ParameterizedType: Enumerator<T>(3233) into CastExpression(3239) at 0", "Insert ClassInstanceCreation(3238) into CastExpression(3239) at 1", "Insert ThisExpression(3289) into FieldAccess(3291) at 0", "Insert SimpleName: rowCount(3290) into FieldAccess(3291) at 1", "Insert ThisExpression(3295) into FieldAccess(3297) at 0", "Insert SimpleName: dataSet(3296) into FieldAccess(3297) at 1", "Insert ThisExpression(3301) into FieldAccess(3303) at 0", "Insert SimpleName: representation(3302) into FieldAccess(3303) at 1", "Insert SimpleName: i(3324) into PrefixExpression: ++(3325) at 0", "Insert NumberLiteral: 1(3335) into PrefixExpression: -(3336) at 0", "Insert ThisExpression(3388) into FieldAccess(3390) at 0", "Insert SimpleName: rowCount(3389) into FieldAccess(3390) at 1", "Insert ThisExpression(3394) into FieldAccess(3396) at 0", "Insert SimpleName: columns(3395) into FieldAccess(3396) at 1", "Move ArrayType: Object[](253) into ArrayCreation(3420) at 0", "Insert MethodInvocation(3419) into ArrayCreation(3420) at 1", "Insert SimpleType: Column(3435) into VariableDeclarationStatement(3442) at 1", "Insert MethodInvocation(224) into ReturnStatement(225) at 0", "Insert SimpleType: Enumerator(3214) into ParameterizedType: Enumerator<T>(3217) at 0", "Insert SimpleType: T(3216) into ParameterizedType: Enumerator<T>(3217) at 1", "Insert SimpleType: ObjectEnumerator(3219) into ClassInstanceCreation(3225) at 0", "Insert SimpleName: size(3220) into ClassInstanceCreation(3225) at 1", "Insert MethodInvocation(3224) into ClassInstanceCreation(3225) at 2", "Insert SimpleType: Enumerator(3230) into ParameterizedType: Enumerator<T>(3233) at 0", "Insert SimpleType: T(3232) into ParameterizedType: Enumerator<T>(3233) at 1", "Insert SimpleType: ArrayEnumerator(3235) into ClassInstanceCreation(3238) at 0", "Insert SimpleName: size(3236) into ClassInstanceCreation(3238) at 1", "Insert SimpleName: columns(3237) into ClassInstanceCreation(3238) at 2", "Insert SimpleName: columns(3417) into MethodInvocation(3419) at 0", "Insert SimpleName: size(3418) into MethodInvocation(3419) at 1", "Insert SimpleName: Column(3434) into SimpleType: Column(3435) at 0", "Insert SimpleName: content(222) into MethodInvocation(224) at 0", "Insert SimpleName: enumerator(223) into MethodInvocation(224) at 1", "Insert SimpleName: Enumerator(3213) into SimpleType: Enumerator(3214) at 0", "Insert SimpleName: T(3215) into SimpleType: T(3216) at 0", "Insert SimpleName: ObjectEnumerator(3218) into SimpleType: ObjectEnumerator(3219) at 0", "Insert SimpleName: columns(3221) into MethodInvocation(3224) at 0", "Insert SimpleName: get(3222) into MethodInvocation(3224) at 1", "Insert NumberLiteral: 0(3223) into MethodInvocation(3224) at 2", "Insert SimpleName: Enumerator(3229) into SimpleType: Enumerator(3230) at 0", "Insert SimpleName: T(3231) into SimpleType: T(3232) at 0", "Insert SimpleName: ArrayEnumerator(3234) into SimpleType: ArrayEnumerator(3235) at 0", "Insert SimpleName: columns(3437) into MethodInvocation(3440) at 0", "Delete FieldDeclaration(229)", "Delete SimpleName: columnCount(232)", "Delete QualifiedName: content.columns(233)", "Delete SimpleName: size(234)", "Delete MethodInvocation(235)", "Delete VariableDeclarationFragment(236)", "Delete FieldDeclaration(237)", "Delete MethodDeclaration(298)", "Delete AnonymousClassDeclaration(324)", "Delete ClassInstanceCreation(325)", "Delete ReturnStatement(326)", "Delete Block(327)", "Delete MethodDeclaration(328)", "Delete AnonymousClassDeclaration(329)", "Delete ClassInstanceCreation(330)", "Delete ReturnStatement(331)", "Delete Block(332)", "Delete MethodDeclaration(333)", "Delete QualifiedName: content.size(227)", "Delete SimpleName: columnCount(259)", "Delete QualifiedName: content.columns(277)", "Delete Modifier: public(3233)", "Delete Modifier: static(3234)", "Delete SimpleName: Content(3235)", "Delete TypeDeclaration: class(3297)"]}}, {"CloneSchema_cluster": {"actions": [{"root": "INS IfStatement to Block at 1", "operations": ["INS TypeLiteral to Assignment: = at 1", "INS SimpleName: repList to InfixExpression: != at 0", "INS SimpleName: typeFactory to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS Block to IfStatement at 2", "INS Block to IfStatement at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: elementType to Assignment: = at 0", "INS IfStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 0", "INS IfStatement to IfStatement at 2", "INS SimpleType: Object to TypeLiteral at 0", "INS FieldAccess to Assignment: = at 1", "INS InfixExpression: == to IfStatement at 0", "INS MethodInvocation to FieldAccess at 0", "INS SimpleName: clazz to FieldAccess at 1", "INS NumberLiteral: 1 to InfixExpression: == at 1", "INS SimpleName: repList to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: apply to MethodInvocation at 1", "INS SimpleName: getFieldCount to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS NullLiteral to InfixExpression: != at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: elementType to Assignment: = at 0", "INS SimpleName: elementType to Assignment: = at 0", "INS SimpleName: elementType to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: protoRowType to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InstanceofExpression to IfStatement at 0", "MOV TypeLiteral to Assignment: = at 1", "MOV MethodInvocation to Assignment: = at 1"]}, {"root": "DEL ConditionalExpression", "operations": ["DEL ConditionalExpression"]}]}}, {"CloneSchema_diff": {"operations": ["Insert IfStatement(296) into Block(344) at 1", "Move InstanceofExpression(242) into IfStatement(296) at 0", "Insert Block(255) into IfStatement(296) at 1", "Insert IfStatement(295) into IfStatement(296) at 2", "Insert ExpressionStatement(254) into Block(255) at 0", "Insert InfixExpression: ==(263) into IfStatement(295) at 0", "Insert Block(285) into IfStatement(295) at 1", "Insert Block(294) into IfStatement(295) at 2", "Insert Assignment: =(253) into ExpressionStatement(254) at 0", "Insert MethodInvocation(261) into InfixExpression: ==(263) at 0", "Insert NumberLiteral: 1(262) into InfixExpression: ==(263) at 1", "Insert IfStatement(284) into Block(285) at 0", "Insert ExpressionStatement(293) into Block(294) at 0", "Insert SimpleName: elementType(245) into Assignment: =(253) at 0", "Move MethodInvocation(249) into Assignment: =(253) at 1", "Insert MethodInvocation(259) into MethodInvocation(261) at 0", "Insert SimpleName: getFieldCount(260) into MethodInvocation(261) at 1", "Insert InfixExpression: !=(266) into IfStatement(284) at 0", "Insert Block(276) into IfStatement(284) at 1", "Insert Block(283) into IfStatement(284) at 2", "Insert Assignment: =(292) into ExpressionStatement(293) at 0", "Insert SimpleName: protoRowType(256) into MethodInvocation(259) at 0", "Insert SimpleName: apply(257) into MethodInvocation(259) at 1", "Insert SimpleName: typeFactory(258) into MethodInvocation(259) at 2", "Insert SimpleName: repList(264) into InfixExpression: !=(266) at 0", "Insert NullLiteral(265) into InfixExpression: !=(266) at 1", "Insert ExpressionStatement(275) into Block(276) at 0", "Insert ExpressionStatement(282) into Block(283) at 0", "Insert SimpleName: elementType(286) into Assignment: =(292) at 0", "Move TypeLiteral(254) into Assignment: =(292) at 1", "Insert Assignment: =(274) into ExpressionStatement(275) at 0", "Insert Assignment: =(281) into ExpressionStatement(282) at 0", "Insert SimpleName: elementType(267) into Assignment: =(274) at 0", "Insert FieldAccess(273) into Assignment: =(274) at 1", "Insert SimpleName: elementType(277) into Assignment: =(281) at 0", "Insert TypeLiteral(280) into Assignment: =(281) at 1", "Insert MethodInvocation(271) into FieldAccess(273) at 0", "Insert SimpleName: clazz(272) into FieldAccess(273) at 1", "Insert SimpleType: Object(279) into TypeLiteral(280) at 0", "Insert SimpleName: repList(268) into MethodInvocation(271) at 0", "Insert SimpleName: get(269) into MethodInvocation(271) at 1", "Insert NumberLiteral: 0(270) into MethodInvocation(271) at 2", "Insert SimpleName: Object(278) into SimpleType: Object(279) at 0", "Delete ConditionalExpression(255)"]}}, {"JdbcImplementor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: org.eigenbase.sql.fun.SqlSumEmptyIsZeroAggFunction to ImportDeclaration at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: op to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS QualifiedName: SqlStdOperatorTable.SUM to Assignment: = at 1", "INS IfStatement to Block at 1", "INS SimpleName: SqlSumEmptyIsZeroAggFunction to SimpleType: SqlSumEmptyIsZeroAggFunction at 0", "INS InstanceofExpression to IfStatement at 0", "INS SimpleName: op to InstanceofExpression at 0", "INS Block to IfStatement at 1", "INS SimpleType: SqlSumEmptyIsZeroAggFunction to InstanceofExpression at 1"]}]}}, {"JdbcImplementor_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(2178) at 10", "Insert QualifiedName: org.eigenbase.sql.fun.SqlSumEmptyIsZeroAggFunction(20) into ImportDeclaration(21) at 0", "Insert IfStatement(1191) into Block(1244) at 1", "Insert InstanceofExpression(1185) into IfStatement(1191) at 0", "Insert Block(1190) into IfStatement(1191) at 1", "Insert SimpleName: op(1182) into InstanceofExpression(1185) at 0", "Insert SimpleType: SqlSumEmptyIsZeroAggFunction(1184) into InstanceofExpression(1185) at 1", "Insert ExpressionStatement(1189) into Block(1190) at 0", "Insert SimpleName: SqlSumEmptyIsZeroAggFunction(1183) into SimpleType: SqlSumEmptyIsZeroAggFunction(1184) at 0", "Insert Assignment: =(1188) into ExpressionStatement(1189) at 0", "Insert SimpleName: op(1186) into Assignment: =(1188) at 0", "Insert QualifiedName: SqlStdOperatorTable.SUM(1187) into Assignment: =(1188) at 1"]}}], "commit_stats": [{"total_files": 35, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}