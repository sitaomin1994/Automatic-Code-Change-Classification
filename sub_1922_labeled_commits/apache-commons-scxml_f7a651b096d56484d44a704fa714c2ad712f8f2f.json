{"application": "apache-commons-scxml", "csha": "f7a651b096d56484d44a704fa714c2ad712f8f2f", "files": [{"EventDispatcher_cluster": {"actions": [{"root": "UPDATE from sendId to id", "operations": ["UPD SimpleName: sendId from sendId to id", "UPD SimpleName: sendId from sendId to id"]}]}}, {"EventDispatcher_diff": {"operations": ["Update SimpleName: sendId(64) to id", "Update SimpleName: sendId(31) to id"]}}, {"SCXMLSystemContext_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 14", "operations": ["INS Javadoc to FieldDeclaration at 0", "INS MethodRef to TagElement: @see at 0", "INS Modifier: private to FieldDeclaration at 1", "INS SimpleName: generateSessionId to MethodRef at 0", "INS SimpleName: nextSessionSequenceId to VariableDeclarationFragment at 0", "INS TagElement: @see to Javadoc at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS TagElement to Javadoc at 0", "INS FieldDeclaration to TypeDeclaration: class at 14", "INS PrimitiveType: long to FieldDeclaration at 2", "INS TextElement: The auto-generated next sessionId prefixed ID to TagElement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS SimpleType: String to MethodDeclaration at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: nextSessionSequenceId to PostfixExpression: ++ at 0", "INS PostfixExpression: ++ to InfixExpression: + at 2", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: generateSessionId to MethodDeclaration at 2", "INS MethodInvocation to InfixExpression: + at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"-\" to InfixExpression: + at 1", "INS InfixExpression: + to ReturnStatement at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: SESSIONID_KEY to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS SimpleName: getContext to MethodInvocation at 0"]}]}}, {"SCXMLSystemContext_diff": {"operations": ["Insert FieldDeclaration(158) into TypeDeclaration: class(406) at 14", "Insert MethodDeclaration(249) into TypeDeclaration: class(406) at 18", "Insert Javadoc(153) into FieldDeclaration(158) at 0", "Insert Modifier: private(154) into FieldDeclaration(158) at 1", "Insert PrimitiveType: long(155) into FieldDeclaration(158) at 2", "Insert VariableDeclarationFragment(157) into FieldDeclaration(158) at 3", "Insert Modifier: public(234) into MethodDeclaration(249) at 0", "Insert SimpleType: String(236) into MethodDeclaration(249) at 1", "Insert SimpleName: generateSessionId(237) into MethodDeclaration(249) at 2", "Insert Block(248) into MethodDeclaration(249) at 3", "Insert TagElement(149) into Javadoc(153) at 0", "Insert TagElement: @see(152) into Javadoc(153) at 1", "Insert SimpleName: nextSessionSequenceId(156) into VariableDeclarationFragment(157) at 0", "Insert SimpleName: String(235) into SimpleType: String(236) at 0", "Insert ReturnStatement(247) into Block(248) at 0", "Insert TextElement: The auto-generated next sessionId prefixed ID(148) into TagElement(149) at 0", "Insert MethodRef(151) into TagElement: @see(152) at 0", "Insert InfixExpression: +(246) into ReturnStatement(247) at 0", "Insert SimpleName: generateSessionId(150) into MethodRef(151) at 0", "Insert MethodInvocation(242) into InfixExpression: +(246) at 0", "Insert StringLiteral: \"-\"(243) into InfixExpression: +(246) at 1", "Insert PostfixExpression: ++(245) into InfixExpression: +(246) at 2", "Insert MethodInvocation(239) into MethodInvocation(242) at 0", "Insert SimpleName: get(240) into MethodInvocation(242) at 1", "Insert SimpleName: SESSIONID_KEY(241) into MethodInvocation(242) at 2", "Insert SimpleName: nextSessionSequenceId(244) into PostfixExpression: ++(245) at 0", "Insert SimpleName: getContext(238) into MethodInvocation(239) at 0"]}}, {"SimpleDispatcher_cluster": {"actions": [{"root": "UPDATE from sendId to id", "operations": ["UPD SimpleName: sendId from sendId to id", "UPD SimpleName: sendId from sendId to id"]}, {"root": "UPDATE from \"send ( sendId: \" to \"send ( id: \"", "operations": ["UPD StringLiteral: \"send ( sendId: \" from \"send ( sendId: \" to \"send ( id: \""]}]}}, {"SimpleDispatcher_diff": {"operations": ["Update SimpleName: sendId(126) to id", "Update SimpleName: sendId(186) to id", "Update StringLiteral: \"send ( sendId: \"(183) to \"send ( id: \""]}}, {"SimpleScheduler_cluster": {"actions": [{"root": "UPDATE from sendId to id", "operations": ["UPD SimpleName: sendId from sendId to id", "UPD SimpleName: sendId from sendId to id", "UPD SimpleName: sendId from sendId to id", "UPD SimpleName: sendId from sendId to id", "UPD SimpleName: sendId from sendId to id", "UPD SimpleName: sendId from sendId to id", "UPD SimpleName: sendId from sendId to id", "UPD SimpleName: sendId from sendId to id", "UPD SimpleName: sendId from sendId to id", "UPD SimpleName: sendId from sendId to id", "UPD SimpleName: sendId from sendId to id", "UPD SimpleName: sendId from sendId to id", "UPD SimpleName: sendId from sendId to id", "UPD SimpleName: sendId from sendId to id", "UPD SimpleName: sendId from sendId to id"]}, {"root": "UPDATE from \"send ( sendId: \" to \"send ( id: \"", "operations": ["UPD StringLiteral: \"send ( sendId: \" from \"send ( sendId: \" to \"send ( id: \""]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.scxml2.model.ModelException", "DEL ImportDeclaration"]}]}}, {"SimpleScheduler_diff": {"operations": ["Update SimpleName: sendId(247) to id", "Update SimpleName: sendId(523) to id", "Update SimpleName: sendId(562) to id", "Update SimpleName: sendId(591) to id", "Update SimpleName: sendId(551) to id", "Update SimpleName: sendId(569) to id", "Update SimpleName: sendId(577) to id", "Update SimpleName: sendId(612) to id", "Update SimpleName: sendId(639) to id", "Update SimpleName: sendId(307) to id", "Update SimpleName: sendId(610) to id", "Update StringLiteral: \"send ( sendId: \"(304) to \"send ( id: \"", "Update SimpleName: sendId(440) to id", "Update SimpleName: sendId(661) to id", "Update SimpleName: sendId(431) to id", "Update SimpleName: sendId(454) to id", "Delete QualifiedName: org.apache.commons.scxml2.model.ModelException(26)", "Delete ImportDeclaration(27)"]}}, {"SCXMLReader_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 53", "operations": ["INS SimpleName: ATTR_DELAYEXPR to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 53", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleType: String to FieldDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"delayexpr\" to VariableDeclarationFragment at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 55", "operations": ["INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"eventexpr\" to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 55", "INS SimpleName: ATTR_EVENTEXPR to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleType: String to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 60", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 60", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleType: String to FieldDeclaration at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"idlocation\" to VariableDeclarationFragment at 1", "INS SimpleName: ATTR_IDLOCATION to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 73", "operations": ["INS StringLiteral: \"targetexpr\" to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 73", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: String to FieldDeclaration at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: ATTR_TARGETEXPR to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 75", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: ATTR_TYPEEXPR to VariableDeclarationFragment at 0", "INS SimpleType: String to FieldDeclaration at 3", "INS StringLiteral: \"typeexpr\" to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS FieldDeclaration to TypeDeclaration: class at 75", "INS Modifier: static to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 130", "operations": ["INS TextElement:  if available and the class to TagElement at 2", "INS MethodInvocation to MethodInvocation at 0", "INS TextElement:  The element name. to TagElement: @param at 1", "INS MethodInvocation to InfixExpression: && at 1", "INS SimpleName: isSilent to MethodInvocation at 1", "INS TagElement: @throws to Javadoc at 6", "INS ThrowStatement to Block at 0", "INS SimpleName: XMLReporter to SimpleType: XMLReporter at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: element to SingleVariableDeclaration at 2", "INS TagElement: @link to TagElement: @param at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: Configuration to TagElement: @link at 0", "INS SimpleName: warn to MethodInvocation at 1", "INS TagElement: @param to Javadoc at 5", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: sb to MethodInvocation at 0", "INS SimpleName: log to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: element to TagElement: @param at 0", "INS SimpleType: ModelException to ClassInstanceCreation at 0", "INS TextElement:  The attribute with which a conflict is detected. to TagElement: @param at 1", "INS SimpleName: configuration to TagElement: @param at 0", "INS PrefixExpression: ! to InfixExpression: && at 0", "INS Block to IfStatement at 1", "INS SimpleType: StringBuilder to ClassInstanceCreation at 0", "INS Block to MethodDeclaration at 12", "INS PrimitiveType: void to MethodDeclaration at 3", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: element to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: SCXMLReader to TypeLiteral at 0", "INS TextElement:  An exception processing the underlying  to TagElement: @throws at 1", "INS NullLiteral to MethodInvocation at 4", "INS SimpleName: sb to VariableDeclarationFragment at 0", "INS SimpleName: report to MethodInvocation at 1", "INS QualifiedName: org.apache.commons.logging.Log to SimpleType: org.apache.commons.logging.Log at 0", "INS SimpleName: attr to MethodInvocation at 2", "INS TagElement: @param to Javadoc at 4", "INS TextElement:  to use while parsing. to TagElement: @param at 3", "INS SimpleName: StringBuilder to SimpleType: StringBuilder at 0", "INS SimpleName: getLocation to MethodInvocation at 1", "INS SimpleName: sb to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: XMLReporter to VariableDeclarationStatement at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 2", "INS TagElement: @link to TagElement at 3", "INS Modifier: final to SingleVariableDeclaration at 0", "INS StringLiteral: \"Ignoring <\" to MethodInvocation at 2", "INS SimpleName: Configuration to SimpleType: Configuration at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleType: XMLStreamReader to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: reader to SingleVariableDeclaration at 2", "INS StringLiteral: \"\\\" at \" to MethodInvocation at 2", "INS Modifier: private to MethodDeclaration at 1", "INS IfStatement to Block at 6", "INS Modifier: static to MethodDeclaration at 2", "INS SimpleName: conflictingAttr to SingleVariableDeclaration at 2", "INS SimpleName: StringBuilder to SimpleType: StringBuilder at 0", "INS SimpleName: append to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 5", "INS IfStatement to Block at 3", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: LogFactory to MethodInvocation at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 130", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: reader to TagElement: @param at 0", "INS SimpleName: conflictingAttr to TagElement: @param at 0", "INS ExpressionStatement to Block at 0", "INS TypeLiteral to MethodInvocation at 2", "INS TagElement: @param to Javadoc at 1", "INS TextElement: . to TagElement: @throws at 3", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: String to SingleVariableDeclaration at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: sb to MethodInvocation at 0", "INS TagElement: @throws to Javadoc at 7", "INS SimpleName: configuration to MethodInvocation at 0", "INS SimpleName: ModelException to TagElement: @throws at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: attr to SingleVariableDeclaration at 2", "INS TagElement: @link to TagElement: @param at 2", "INS TagElement: @link to TagElement at 1", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Block to IfStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS StringLiteral: \"> attribute \\\"\" to MethodInvocation at 2", "INS TextElement: errors in the SCXML document that may not be identified by the schema). to TagElement: @throws at 2", "INS InfixExpression: != to IfStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"COMMONS_SCXML\" to MethodInvocation at 3", "INS SimpleType: Configuration to SingleVariableDeclaration at 1", "INS SimpleName: log to MethodInvocation at 0", "INS SimpleName: XMLStreamException to SimpleType: XMLStreamException at 0", "INS TextElement:  The  to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 3", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: ModelException to SimpleType: ModelException at 0", "INS SimpleName: XMLStreamReader to TagElement: @link at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: reporter to VariableDeclarationFragment at 0", "INS SimpleType: XMLStreamException to MethodDeclaration at 10", "INS SimpleName: SCXMLReader to SimpleType: SCXMLReader at 0", "INS SimpleName: conflictingAttr to MethodInvocation at 2", "INS SimpleName: getLocation to MethodInvocation at 1", "INS TextElement:  The Commons SCXML object model is incomplete or inconsistent (includes to TagElement: @throws at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleType: String to SingleVariableDeclaration at 1", "INS Block to IfStatement at 1", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: sb to MethodInvocation at 0", "INS TextElement:  The  to TagElement: @param at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: reporter to MethodInvocation at 0", "INS TextElement:  The conflicting attribute to TagElement: @param at 1", "INS SimpleName: isStrict to MethodInvocation at 1", "INS SimpleName: ModelException to SimpleType: ModelException at 0", "INS MethodInvocation to MethodInvocation at 2", "INS QualifiedName: configuration.reporter to VariableDeclarationFragment at 1", "INS SimpleName: XMLReporter to TagElement: @link at 0", "INS TagElement: @link to TagElement: @throws at 2", "INS SimpleType: org.apache.commons.logging.Log to VariableDeclarationStatement at 0", "INS TextElement: . to TagElement at 4", "INS SimpleName: append to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: reportConflictingAttribute to MethodDeclaration at 4", "INS TextElement: Report a conflicting attribute via the  to TagElement at 0", "INS SimpleName: XMLStreamException to TagElement: @throws at 0", "INS SimpleType: StringBuilder to VariableDeclarationStatement at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleType: ModelException to MethodDeclaration at 11", "INS SimpleName: isWarnEnabled to MethodInvocation at 1", "INS SimpleName: reader to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS StringLiteral: \"\\\" which conflicts with already defined attribute \\\"\" to MethodInvocation at 2", "INS SimpleName: append to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: log to MethodInvocation at 0", "INS SimpleName: getLog to MethodInvocation at 1", "INS IfStatement to Block at 4", "INS MethodInvocation to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 9", "INS SimpleName: XMLStreamReader to SimpleType: XMLStreamReader at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: configuration to SingleVariableDeclaration at 2", "INS TextElement:  providing the SCXML document to parse. to TagElement: @param at 3", "INS SimpleName: String to SimpleType: String at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: String to SingleVariableDeclaration at 1", "INS SimpleName: attr to TagElement: @param at 0", "INS SimpleName: reader to MethodInvocation at 0", "INS SimpleName: configuration to MethodInvocation at 0", "INS QualifiedName: org.apache.commons.logging.Log to TagElement: @link at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: XMLStreamReader to TagElement: @link at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: reporter to InfixExpression: != at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleName: readAV to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: ATTR_IDLOCATION to MethodInvocation at 2", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: reader to MethodInvocation at 1", "INS SimpleName: attrValue to VariableDeclarationFragment at 0"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS SimpleName: send to MethodInvocation at 0", "INS SimpleName: ATTR_IDLOCATION to MethodInvocation at 5", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 2", "INS IfStatement to Block at 4", "INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: send to MethodInvocation at 0", "INS SimpleName: ATTR_ID to MethodInvocation at 4", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: attrValue to MethodInvocation at 2", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: configuration to MethodInvocation at 2", "INS SimpleName: setIdlocation to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: reader to MethodInvocation at 1", "INS SimpleName: getId to MethodInvocation at 1", "INS SimpleName: attrValue to InfixExpression: != at 0", "INS SimpleName: ELEM_SEND to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: reportConflictingAttribute to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to InfixExpression: != at 0"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS SimpleName: reader to MethodInvocation at 1", "INS SimpleName: attrValue to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: ATTR_DELAYEXPR to MethodInvocation at 2", "INS ExpressionStatement to Block at 6", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: readAV to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 7", "operations": ["INS SimpleName: setDelayexpr to MethodInvocation at 1", "INS SimpleName: ELEM_SEND to MethodInvocation at 3", "INS SimpleName: reportConflictingAttribute to MethodInvocation at 0", "INS SimpleName: attrValue to InfixExpression: != at 0", "INS InfixExpression: != to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: attrValue to MethodInvocation at 2", "INS SimpleName: ATTR_DELAYEXPR to MethodInvocation at 5", "INS SimpleName: ATTR_DELAY to MethodInvocation at 4", "INS SimpleName: getDelay to MethodInvocation at 1", "INS SimpleName: send to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS IfStatement to Block at 7", "INS ExpressionStatement to Block at 0", "INS NullLiteral to InfixExpression: != at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: send to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 2", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: configuration to MethodInvocation at 2", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: reader to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 9", "operations": ["INS SimpleName: attrValue to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: reader to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 9", "INS SimpleName: readAV to MethodInvocation at 0", "INS SimpleName: ATTR_EVENTEXPR to MethodInvocation at 2"]}, {"root": "INS IfStatement to Block at 10", "operations": ["INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 10", "INS SimpleName: setEventexpr to MethodInvocation at 1", "INS Block to IfStatement at 2", "INS SimpleName: getEvent to MethodInvocation at 1", "INS SimpleName: send to MethodInvocation at 0", "INS SimpleName: send to MethodInvocation at 0", "INS SimpleName: ATTR_EVENTEXPR to MethodInvocation at 5", "INS NullLiteral to InfixExpression: != at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: reader to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: attrValue to InfixExpression: != at 0", "INS SimpleName: reportConflictingAttribute to MethodInvocation at 0", "INS SimpleName: attrValue to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: ATTR_EVENT to MethodInvocation at 4", "INS IfStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS InfixExpression: != to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: ELEM_SEND to MethodInvocation at 3", "INS SimpleName: configuration to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 14", "operations": ["INS ExpressionStatement to Block at 14", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: attrValue to Assignment: = at 0", "INS SimpleName: readAV to MethodInvocation at 0", "INS SimpleName: ATTR_TARGETEXPR to MethodInvocation at 2", "INS SimpleName: reader to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS IfStatement to Block at 15", "operations": ["INS SimpleName: reportConflictingAttribute to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: attrValue to MethodInvocation at 2", "INS IfStatement to Block at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: ATTR_TARGETEXPR to MethodInvocation at 5", "INS InfixExpression: != to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 15", "INS SimpleName: getTarget to MethodInvocation at 1", "INS SimpleName: setTargetexpr to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ELEM_SEND to MethodInvocation at 3", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: configuration to MethodInvocation at 2", "INS SimpleName: attrValue to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: send to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ATTR_TARGET to MethodInvocation at 4", "INS Block to IfStatement at 1", "INS SimpleName: send to MethodInvocation at 0", "INS SimpleName: reader to MethodInvocation at 1", "INS Block to IfStatement at 2", "INS MethodInvocation to InfixExpression: != at 0"]}, {"root": "INS ExpressionStatement to Block at 17", "operations": ["INS SimpleName: readAV to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: attrValue to Assignment: = at 0", "INS SimpleName: reader to MethodInvocation at 1", "INS SimpleName: ATTR_TYPEEXPR to MethodInvocation at 2", "INS ExpressionStatement to Block at 17", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS IfStatement to Block at 18", "operations": ["INS SimpleName: send to MethodInvocation at 0", "INS IfStatement to Block at 18", "INS SimpleName: attrValue to InfixExpression: != at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: ATTR_TYPEEXPR to MethodInvocation at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ATTR_TYPE to MethodInvocation at 4", "INS SimpleName: reader to MethodInvocation at 1", "INS InfixExpression: != to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: reportConflictingAttribute to MethodInvocation at 0", "INS SimpleName: getType to MethodInvocation at 1", "INS SimpleName: ELEM_SEND to MethodInvocation at 3", "INS InfixExpression: != to IfStatement at 0", "INS IfStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: setTypeexpr to MethodInvocation at 1", "INS Block to IfStatement at 2", "INS SimpleName: send to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: configuration to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: attrValue to MethodInvocation at 2"]}, {"root": "UPDATE from setSendid to setId", "operations": ["UPD SimpleName: setSendid from setSendid to setId"]}, {"root": "UPDATE from ATTR_SENDID to ATTR_ID", "operations": ["UPD SimpleName: ATTR_SENDID from ATTR_SENDID to ATTR_ID"]}]}}, {"SCXMLReader_diff": {"operations": ["     *     http://www.w3.org/TR/2013/WD-scxml-20130801/#scxml<a> section 3.2.2(7197) to TextElement:  <a href=\"http://www.w3.org/TR/2013/WD-scxml-20130801/#scxml\">", "     *     http://www.w3.org/TR/2013/WD-scxml-20130801/#scxml<a> section 3.2.2(7409)", "Insert FieldDeclaration(714) into TypeDeclaration: class(11425) at 53", "Insert FieldDeclaration(732) into TypeDeclaration: class(11425) at 55", "Insert FieldDeclaration(777) into TypeDeclaration: class(11425) at 60", "Insert FieldDeclaration(894) into TypeDeclaration: class(11425) at 73", "Insert FieldDeclaration(912) into TypeDeclaration: class(11425) at 75", "Insert MethodDeclaration(9458) into TypeDeclaration: class(11425) at 130", "Insert Modifier: private(706) into FieldDeclaration(714) at 0", "Insert Modifier: static(707) into FieldDeclaration(714) at 1", "Insert Modifier: final(708) into FieldDeclaration(714) at 2", "Insert SimpleType: String(710) into FieldDeclaration(714) at 3", "Insert VariableDeclarationFragment(713) into FieldDeclaration(714) at 4", "Insert Modifier: private(724) into FieldDeclaration(732) at 0", "Insert Modifier: static(725) into FieldDeclaration(732) at 1", "Insert Modifier: final(726) into FieldDeclaration(732) at 2", "Insert SimpleType: String(728) into FieldDeclaration(732) at 3", "Insert VariableDeclarationFragment(731) into FieldDeclaration(732) at 4", "Insert Modifier: private(769) into FieldDeclaration(777) at 0", "Insert Modifier: static(770) into FieldDeclaration(777) at 1", "Insert Modifier: final(771) into FieldDeclaration(777) at 2", "Insert SimpleType: String(773) into FieldDeclaration(777) at 3", "Insert VariableDeclarationFragment(776) into FieldDeclaration(777) at 4", "Insert Modifier: private(886) into FieldDeclaration(894) at 0", "Insert Modifier: static(887) into FieldDeclaration(894) at 1", "Insert Modifier: final(888) into FieldDeclaration(894) at 2", "Insert SimpleType: String(890) into FieldDeclaration(894) at 3", "Insert VariableDeclarationFragment(893) into FieldDeclaration(894) at 4", "Insert Modifier: private(904) into FieldDeclaration(912) at 0", "Insert Modifier: static(905) into FieldDeclaration(912) at 1", "Insert Modifier: final(906) into FieldDeclaration(912) at 2", "Insert SimpleType: String(908) into FieldDeclaration(912) at 3", "Insert VariableDeclarationFragment(911) into FieldDeclaration(912) at 4", "Move ExpressionStatement(6892) into Block(7205) at 2", "Insert Javadoc(9324) into MethodDeclaration(9458) at 0", "Insert Modifier: private(9325) into MethodDeclaration(9458) at 1", "Insert Modifier: static(9326) into MethodDeclaration(9458) at 2", "Insert PrimitiveType: void(9327) into MethodDeclaration(9458) at 3", "Insert SimpleName: reportConflictingAttribute(9328) into MethodDeclaration(9458) at 4", "Insert SingleVariableDeclaration(9333) into MethodDeclaration(9458) at 5", "Insert SingleVariableDeclaration(9338) into MethodDeclaration(9458) at 6", "Insert SingleVariableDeclaration(9343) into MethodDeclaration(9458) at 7", "Insert SingleVariableDeclaration(9348) into MethodDeclaration(9458) at 8", "Insert SingleVariableDeclaration(9353) into MethodDeclaration(9458) at 9", "Insert SimpleType: XMLStreamException(9355) into MethodDeclaration(9458) at 10", "Insert SimpleType: ModelException(9357) into MethodDeclaration(9458) at 11", "Insert Block(9457) into MethodDeclaration(9458) at 12", "Insert SimpleName: String(709) into SimpleType: String(710) at 0", "Insert SimpleName: ATTR_DELAYEXPR(711) into VariableDeclarationFragment(713) at 0", "Insert StringLiteral: \"delayexpr\"(712) into VariableDeclarationFragment(713) at 1", "Insert SimpleName: String(727) into SimpleType: String(728) at 0", "Insert SimpleName: ATTR_EVENTEXPR(729) into VariableDeclarationFragment(731) at 0", "Insert StringLiteral: \"eventexpr\"(730) into VariableDeclarationFragment(731) at 1", "Insert SimpleName: String(772) into SimpleType: String(773) at 0", "Insert SimpleName: ATTR_IDLOCATION(774) into VariableDeclarationFragment(776) at 0", "Insert StringLiteral: \"idlocation\"(775) into VariableDeclarationFragment(776) at 1", "Insert SimpleName: String(889) into SimpleType: String(890) at 0", "Insert SimpleName: ATTR_TARGETEXPR(891) into VariableDeclarationFragment(893) at 0", "Insert StringLiteral: \"targetexpr\"(892) into VariableDeclarationFragment(893) at 1", "Insert SimpleName: String(907) into SimpleType: String(908) at 0", "Insert SimpleName: ATTR_TYPEEXPR(909) into VariableDeclarationFragment(911) at 0", "Insert StringLiteral: \"typeexpr\"(910) into VariableDeclarationFragment(911) at 1", "Insert VariableDeclarationStatement(6914) into Block(7205) at 3", "Insert IfStatement(6940) into Block(7205) at 4", "Insert ExpressionStatement(6955) into Block(7205) at 6", "Insert IfStatement(6981) into Block(7205) at 7", "Insert ExpressionStatement(6996) into Block(7205) at 9", "Insert IfStatement(7022) into Block(7205) at 10", "Insert ExpressionStatement(7053) into Block(7205) at 14", "Insert IfStatement(7079) into Block(7205) at 15", "Insert ExpressionStatement(7094) into Block(7205) at 17", "Insert IfStatement(7120) into Block(7205) at 18", "Insert TagElement(9292) into Javadoc(9324) at 0", "Insert TagElement: @param(9298) into Javadoc(9324) at 1", "Insert TagElement: @param(9304) into Javadoc(9324) at 2", "Insert TagElement: @param(9307) into Javadoc(9324) at 3", "Insert TagElement: @param(9310) into Javadoc(9324) at 4", "Insert TagElement: @param(9313) into Javadoc(9324) at 5", "Insert TagElement: @throws(9319) into Javadoc(9324) at 6", "Insert TagElement: @throws(9323) into Javadoc(9324) at 7", "Insert Modifier: final(9329) into SingleVariableDeclaration(9333) at 0", "Insert SimpleType: XMLStreamReader(9331) into SingleVariableDeclaration(9333) at 1", "Insert SimpleName: reader(9332) into SingleVariableDeclaration(9333) at 2", "Insert Modifier: final(9334) into SingleVariableDeclaration(9338) at 0", "Insert SimpleType: Configuration(9336) into SingleVariableDeclaration(9338) at 1", "Insert SimpleName: configuration(9337) into SingleVariableDeclaration(9338) at 2", "Insert Modifier: final(9339) into SingleVariableDeclaration(9343) at 0", "Insert SimpleType: String(9341) into SingleVariableDeclaration(9343) at 1", "Insert SimpleName: element(9342) into SingleVariableDeclaration(9343) at 2", "Insert Modifier: final(9344) into SingleVariableDeclaration(9348) at 0", "Insert SimpleType: String(9346) into SingleVariableDeclaration(9348) at 1", "Insert SimpleName: attr(9347) into SingleVariableDeclaration(9348) at 2", "Insert Modifier: final(9349) into SingleVariableDeclaration(9353) at 0", "Insert SimpleType: String(9351) into SingleVariableDeclaration(9353) at 1", "Insert SimpleName: conflictingAttr(9352) into SingleVariableDeclaration(9353) at 2", "Insert SimpleName: XMLStreamException(9354) into SimpleType: XMLStreamException(9355) at 0", "Insert SimpleName: ModelException(9356) into SimpleType: ModelException(9357) at 0", "Insert VariableDeclarationStatement(9368) into Block(9457) at 0", "Insert VariableDeclarationStatement(9376) into Block(9457) at 1", "Insert ExpressionStatement(9404) into Block(9457) at 2", "Insert IfStatement(9421) into Block(9457) at 3", "Insert IfStatement(9433) into Block(9457) at 4", "Insert VariableDeclarationStatement(9439) into Block(9457) at 5", "Insert IfStatement(9456) into Block(9457) at 6", "Insert SimpleType: String(6907) into VariableDeclarationStatement(6914) at 0", "Insert VariableDeclarationFragment(6913) into VariableDeclarationStatement(6914) at 1", "Insert InfixExpression: !=(6917) into IfStatement(6940) at 0", "Insert Block(6939) into IfStatement(6940) at 1", "Insert Assignment: =(6954) into ExpressionStatement(6955) at 0", "Insert InfixExpression: !=(6958) into IfStatement(6981) at 0", "Insert Block(6980) into IfStatement(6981) at 1", "Insert Assignment: =(6995) into ExpressionStatement(6996) at 0", "Insert InfixExpression: !=(6999) into IfStatement(7022) at 0", "Insert Block(7021) into IfStatement(7022) at 1", "Insert Assignment: =(7052) into ExpressionStatement(7053) at 0", "Insert InfixExpression: !=(7056) into IfStatement(7079) at 0", "Insert Block(7078) into IfStatement(7079) at 1", "Insert Assignment: =(7093) into ExpressionStatement(7094) at 0", "Insert InfixExpression: !=(7097) into IfStatement(7120) at 0", "Insert Block(7119) into IfStatement(7120) at 1", "Insert TextElement: Report a conflicting attribute via the (9285) into TagElement(9292) at 0", "Insert TagElement: @link(9287) into TagElement(9292) at 1", "Insert TextElement:  if available and the class(9288) into TagElement(9292) at 2", "Insert TagElement: @link(9290) into TagElement(9292) at 3", "Insert TextElement: .(9291) into TagElement(9292) at 4", "Insert SimpleName: reader(9293) into TagElement: @param(9298) at 0", "Insert TextElement:  The (9294) into TagElement: @param(9298) at 1", "Insert TagElement: @link(9296) into TagElement: @param(9298) at 2", "Insert TextElement:  providing the SCXML document to parse.(9297) into TagElement: @param(9298) at 3", "Insert SimpleName: configuration(9299) into TagElement: @param(9304) at 0", "Insert TextElement:  The (9300) into TagElement: @param(9304) at 1", "Insert TagElement: @link(9302) into TagElement: @param(9304) at 2", "Insert TextElement:  to use while parsing.(9303) into TagElement: @param(9304) at 3", "Insert SimpleName: element(9305) into TagElement: @param(9307) at 0", "Insert TextElement:  The element name.(9306) into TagElement: @param(9307) at 1", "Insert SimpleName: attr(9308) into TagElement: @param(9310) at 0", "Insert TextElement:  The attribute with which a conflict is detected.(9309) into TagElement: @param(9310) at 1", "Insert SimpleName: conflictingAttr(9311) into TagElement: @param(9313) at 0", "Insert TextElement:  The conflicting attribute(9312) into TagElement: @param(9313) at 1", "Insert SimpleName: XMLStreamException(9314) into TagElement: @throws(9319) at 0", "Insert TextElement:  An exception processing the underlying (9315) into TagElement: @throws(9319) at 1", "Insert TagElement: @link(9317) into TagElement: @throws(9319) at 2", "Insert TextElement: .(9318) into TagElement: @throws(9319) at 3", "Insert SimpleName: ModelException(9320) into TagElement: @throws(9323) at 0", "Insert TextElement:  The Commons SCXML object model is incomplete or inconsistent (includes(9321) into TagElement: @throws(9323) at 1", "Insert TextElement: errors in the SCXML document that may not be identified by the schema).(9322) into TagElement: @throws(9323) at 2", "Insert SimpleName: XMLStreamReader(9330) into SimpleType: XMLStreamReader(9331) at 0", "Insert SimpleName: Configuration(9335) into SimpleType: Configuration(9336) at 0", "Insert SimpleName: String(9340) into SimpleType: String(9341) at 0", "Insert SimpleName: String(9345) into SimpleType: String(9346) at 0", "Insert SimpleName: String(9350) into SimpleType: String(9351) at 0", "Insert SimpleType: org.apache.commons.logging.Log(9359) into VariableDeclarationStatement(9368) at 0", "Insert VariableDeclarationFragment(9367) into VariableDeclarationStatement(9368) at 1", "Insert SimpleType: StringBuilder(9370) into VariableDeclarationStatement(9376) at 0", "Insert VariableDeclarationFragment(9375) into VariableDeclarationStatement(9376) at 1", "Insert MethodInvocation(9403) into ExpressionStatement(9404) at 0", "Insert InfixExpression: &&(9412) into IfStatement(9421) at 0", "Insert Block(9420) into IfStatement(9421) at 1", "Insert MethodInvocation(9424) into IfStatement(9433) at 0", "Insert Block(9432) into IfStatement(9433) at 1", "Insert SimpleType: XMLReporter(9435) into VariableDeclarationStatement(9439) at 0", "Insert VariableDeclarationFragment(9438) into VariableDeclarationStatement(9439) at 1", "Insert InfixExpression: !=(9442) into IfStatement(9456) at 0", "Insert Block(9455) into IfStatement(9456) at 1", "Update SimpleName: setSendid(6886) to setId", "Insert SimpleName: String(6906) into SimpleType: String(6907) at 0", "Insert SimpleName: attrValue(6908) into VariableDeclarationFragment(6913) at 0", "Insert MethodInvocation(6912) into VariableDeclarationFragment(6913) at 1", "Insert SimpleName: attrValue(6915) into InfixExpression: !=(6917) at 0", "Insert NullLiteral(6916) into InfixExpression: !=(6917) at 1", "Insert IfStatement(6938) into Block(6939) at 0", "Insert SimpleName: attrValue(6949) into Assignment: =(6954) at 0", "Insert MethodInvocation(6953) into Assignment: =(6954) at 1", "Insert SimpleName: attrValue(6956) into InfixExpression: !=(6958) at 0", "Insert NullLiteral(6957) into InfixExpression: !=(6958) at 1", "Insert IfStatement(6979) into Block(6980) at 0", "Insert SimpleName: attrValue(6990) into Assignment: =(6995) at 0", "Insert MethodInvocation(6994) into Assignment: =(6995) at 1", "Insert SimpleName: attrValue(6997) into InfixExpression: !=(6999) at 0", "Insert NullLiteral(6998) into InfixExpression: !=(6999) at 1", "Insert IfStatement(7020) into Block(7021) at 0", "Insert SimpleName: attrValue(7047) into Assignment: =(7052) at 0", "Insert MethodInvocation(7051) into Assignment: =(7052) at 1", "Insert SimpleName: attrValue(7054) into InfixExpression: !=(7056) at 0", "Insert NullLiteral(7055) into InfixExpression: !=(7056) at 1", "Insert IfStatement(7077) into Block(7078) at 0", "Insert SimpleName: attrValue(7088) into Assignment: =(7093) at 0", "Insert MethodInvocation(7092) into Assignment: =(7093) at 1", "Insert SimpleName: attrValue(7095) into InfixExpression: !=(7097) at 0", "Insert NullLiteral(7096) into InfixExpression: !=(7097) at 1", "Insert IfStatement(7118) into Block(7119) at 0", "Insert SimpleName: XMLReporter(9286) into TagElement: @link(9287) at 0", "Insert QualifiedName: org.apache.commons.logging.Log(9289) into TagElement: @link(9290) at 0", "Insert SimpleName: XMLStreamReader(9295) into TagElement: @link(9296) at 0", "Insert SimpleName: Configuration(9301) into TagElement: @link(9302) at 0", "Insert SimpleName: XMLStreamReader(9316) into TagElement: @link(9317) at 0", "Insert QualifiedName: org.apache.commons.logging.Log(9358) into SimpleType: org.apache.commons.logging.Log(9359) at 0", "Insert SimpleName: log(9360) into VariableDeclarationFragment(9367) at 0", "Insert MethodInvocation(9366) into VariableDeclarationFragment(9367) at 1", "Insert SimpleName: StringBuilder(9369) into SimpleType: StringBuilder(9370) at 0", "Insert SimpleName: sb(9371) into VariableDeclarationFragment(9375) at 0", "Insert ClassInstanceCreation(9374) into VariableDeclarationFragment(9375) at 1", "Insert MethodInvocation(9398) into MethodInvocation(9403) at 0", "Insert SimpleName: append(9399) into MethodInvocation(9403) at 1", "Insert MethodInvocation(9402) into MethodInvocation(9403) at 2", "Insert PrefixExpression: !(9408) into InfixExpression: &&(9412) at 0", "Insert MethodInvocation(9411) into InfixExpression: &&(9412) at 1", "Insert ExpressionStatement(9419) into Block(9420) at 0", "Insert SimpleName: configuration(9422) into MethodInvocation(9424) at 0", "Insert SimpleName: isStrict(9423) into MethodInvocation(9424) at 1", "Insert ThrowStatement(9431) into Block(9432) at 0", "Insert SimpleName: XMLReporter(9434) into SimpleType: XMLReporter(9435) at 0", "Insert SimpleName: reporter(9436) into VariableDeclarationFragment(9438) at 0", "Insert QualifiedName: configuration.reporter(9437) into VariableDeclarationFragment(9438) at 1", "Insert SimpleName: reporter(9440) into InfixExpression: !=(9442) at 0", "Insert NullLiteral(9441) into InfixExpression: !=(9442) at 1", "Insert ExpressionStatement(9454) into Block(9455) at 0", "Update SimpleName: ATTR_SENDID(6889) to ATTR_ID", "Insert SimpleName: readAV(6909) into MethodInvocation(6912) at 0", "Insert SimpleName: reader(6910) into MethodInvocation(6912) at 1", "Insert SimpleName: ATTR_IDLOCATION(6911) into MethodInvocation(6912) at 2", "Insert InfixExpression: !=(6922) into IfStatement(6938) at 0", "Insert Block(6931) into IfStatement(6938) at 1", "Insert Block(6937) into IfStatement(6938) at 2", "Insert SimpleName: readAV(6950) into MethodInvocation(6953) at 0", "Insert SimpleName: reader(6951) into MethodInvocation(6953) at 1", "Insert SimpleName: ATTR_DELAYEXPR(6952) into MethodInvocation(6953) at 2", "Insert InfixExpression: !=(6963) into IfStatement(6979) at 0", "Insert Block(6972) into IfStatement(6979) at 1", "Insert Block(6978) into IfStatement(6979) at 2", "Insert SimpleName: readAV(6991) into MethodInvocation(6994) at 0", "Insert SimpleName: reader(6992) into MethodInvocation(6994) at 1", "Insert SimpleName: ATTR_EVENTEXPR(6993) into MethodInvocation(6994) at 2", "Insert InfixExpression: !=(7004) into IfStatement(7020) at 0", "Insert Block(7013) into IfStatement(7020) at 1", "Insert Block(7019) into IfStatement(7020) at 2", "Insert SimpleName: readAV(7048) into MethodInvocation(7051) at 0", "Insert SimpleName: reader(7049) into MethodInvocation(7051) at 1", "Insert SimpleName: ATTR_TARGETEXPR(7050) into MethodInvocation(7051) at 2", "Insert InfixExpression: !=(7061) into IfStatement(7077) at 0", "Insert Block(7070) into IfStatement(7077) at 1", "Insert Block(7076) into IfStatement(7077) at 2", "Insert SimpleName: readAV(7089) into MethodInvocation(7092) at 0", "Insert SimpleName: reader(7090) into MethodInvocation(7092) at 1", "Insert SimpleName: ATTR_TYPEEXPR(7091) into MethodInvocation(7092) at 2", "Insert InfixExpression: !=(7102) into IfStatement(7118) at 0", "Insert Block(7111) into IfStatement(7118) at 1", "Insert Block(7117) into IfStatement(7118) at 2", "Insert SimpleName: LogFactory(9361) into MethodInvocation(9366) at 0", "Insert SimpleName: getLog(9362) into MethodInvocation(9366) at 1", "Insert TypeLiteral(9365) into MethodInvocation(9366) at 2", "Insert SimpleType: StringBuilder(9373) into ClassInstanceCreation(9374) at 0", "Insert MethodInvocation(9395) into MethodInvocation(9398) at 0", "Insert SimpleName: append(9396) into MethodInvocation(9398) at 1", "Insert StringLiteral: \"\\\" at \"(9397) into MethodInvocation(9398) at 2", "Insert SimpleName: reader(9400) into MethodInvocation(9402) at 0", "Insert SimpleName: getLocation(9401) into MethodInvocation(9402) at 1", "Insert MethodInvocation(9407) into PrefixExpression: !(9408) at 0", "Insert SimpleName: log(9409) into MethodInvocation(9411) at 0", "Insert SimpleName: isWarnEnabled(9410) into MethodInvocation(9411) at 1", "Insert MethodInvocation(9418) into ExpressionStatement(9419) at 0", "Insert ClassInstanceCreation(9430) into ThrowStatement(9431) at 0", "Insert MethodInvocation(9453) into ExpressionStatement(9454) at 0", "Insert MethodInvocation(6920) into InfixExpression: !=(6922) at 0", "Insert NullLiteral(6921) into InfixExpression: !=(6922) at 1", "Insert ExpressionStatement(6930) into Block(6931) at 0", "Insert ExpressionStatement(6936) into Block(6937) at 0", "Insert MethodInvocation(6961) into InfixExpression: !=(6963) at 0", "Insert NullLiteral(6962) into InfixExpression: !=(6963) at 1", "Insert ExpressionStatement(6971) into Block(6972) at 0", "Insert ExpressionStatement(6977) into Block(6978) at 0", "Insert MethodInvocation(7002) into InfixExpression: !=(7004) at 0", "Insert NullLiteral(7003) into InfixExpression: !=(7004) at 1", "Insert ExpressionStatement(7012) into Block(7013) at 0", "Insert ExpressionStatement(7018) into Block(7019) at 0", "Insert MethodInvocation(7059) into InfixExpression: !=(7061) at 0", "Insert NullLiteral(7060) into InfixExpression: !=(7061) at 1", "Insert ExpressionStatement(7069) into Block(7070) at 0", "Insert ExpressionStatement(7075) into Block(7076) at 0", "Insert MethodInvocation(7100) into InfixExpression: !=(7102) at 0", "Insert NullLiteral(7101) into InfixExpression: !=(7102) at 1", "Insert ExpressionStatement(7110) into Block(7111) at 0", "Insert ExpressionStatement(7116) into Block(7117) at 0", "Insert SimpleType: SCXMLReader(9364) into TypeLiteral(9365) at 0", "Insert SimpleName: StringBuilder(9372) into SimpleType: StringBuilder(9373) at 0", "Insert MethodInvocation(9392) into MethodInvocation(9395) at 0", "Insert SimpleName: append(9393) into MethodInvocation(9395) at 1", "Insert SimpleName: attr(9394) into MethodInvocation(9395) at 2", "Insert SimpleName: configuration(9405) into MethodInvocation(9407) at 0", "Insert SimpleName: isSilent(9406) into MethodInvocation(9407) at 1", "Insert SimpleName: log(9413) into MethodInvocation(9418) at 0", "Insert SimpleName: warn(9414) into MethodInvocation(9418) at 1", "Insert MethodInvocation(9417) into MethodInvocation(9418) at 2", "Insert SimpleType: ModelException(9426) into ClassInstanceCreation(9430) at 0", "Insert MethodInvocation(9429) into ClassInstanceCreation(9430) at 1", "Insert SimpleName: reporter(9443) into MethodInvocation(9453) at 0", "Insert SimpleName: report(9444) into MethodInvocation(9453) at 1", "Insert MethodInvocation(9447) into MethodInvocation(9453) at 2", "Insert StringLiteral: \"COMMONS_SCXML\"(9448) into MethodInvocation(9453) at 3", "Insert NullLiteral(9449) into MethodInvocation(9453) at 4", "Insert MethodInvocation(9452) into MethodInvocation(9453) at 5", "Insert SimpleName: send(6918) into MethodInvocation(6920) at 0", "Insert SimpleName: getId(6919) into MethodInvocation(6920) at 1", "Insert MethodInvocation(6929) into ExpressionStatement(6930) at 0", "Insert MethodInvocation(6935) into ExpressionStatement(6936) at 0", "Insert SimpleName: send(6959) into MethodInvocation(6961) at 0", "Insert SimpleName: getDelay(6960) into MethodInvocation(6961) at 1", "Insert MethodInvocation(6970) into ExpressionStatement(6971) at 0", "Insert MethodInvocation(6976) into ExpressionStatement(6977) at 0", "Insert SimpleName: send(7000) into MethodInvocation(7002) at 0", "Insert SimpleName: getEvent(7001) into MethodInvocation(7002) at 1", "Insert MethodInvocation(7011) into ExpressionStatement(7012) at 0", "Insert MethodInvocation(7017) into ExpressionStatement(7018) at 0", "Insert SimpleName: send(7057) into MethodInvocation(7059) at 0", "Insert SimpleName: getTarget(7058) into MethodInvocation(7059) at 1", "Insert MethodInvocation(7068) into ExpressionStatement(7069) at 0", "Insert MethodInvocation(7074) into ExpressionStatement(7075) at 0", "Insert SimpleName: send(7098) into MethodInvocation(7100) at 0", "Insert SimpleName: getType(7099) into MethodInvocation(7100) at 1", "Insert MethodInvocation(7109) into ExpressionStatement(7110) at 0", "Insert MethodInvocation(7115) into ExpressionStatement(7116) at 0", "Insert SimpleName: SCXMLReader(9363) into SimpleType: SCXMLReader(9364) at 0", "Insert MethodInvocation(9389) into MethodInvocation(9392) at 0", "Insert SimpleName: append(9390) into MethodInvocation(9392) at 1", "Insert StringLiteral: \"\\\" which conflicts with already defined attribute \\\"\"(9391) into MethodInvocation(9392) at 2", "Insert SimpleName: sb(9415) into MethodInvocation(9417) at 0", "Insert SimpleName: toString(9416) into MethodInvocation(9417) at 1", "Insert SimpleName: ModelException(9425) into SimpleType: ModelException(9426) at 0", "Insert SimpleName: sb(9427) into MethodInvocation(9429) at 0", "Insert SimpleName: toString(9428) into MethodInvocation(9429) at 1", "Insert SimpleName: sb(9445) into MethodInvocation(9447) at 0", "Insert SimpleName: toString(9446) into MethodInvocation(9447) at 1", "Insert SimpleName: reader(9450) into MethodInvocation(9452) at 0", "Insert SimpleName: getLocation(9451) into MethodInvocation(9452) at 1", "Insert SimpleName: reportConflictingAttribute(6923) into MethodInvocation(6929) at 0", "Insert SimpleName: reader(6924) into MethodInvocation(6929) at 1", "Insert SimpleName: configuration(6925) into MethodInvocation(6929) at 2", "Insert SimpleName: ELEM_SEND(6926) into MethodInvocation(6929) at 3", "Insert SimpleName: ATTR_ID(6927) into MethodInvocation(6929) at 4", "Insert SimpleName: ATTR_IDLOCATION(6928) into MethodInvocation(6929) at 5", "Insert SimpleName: send(6932) into MethodInvocation(6935) at 0", "Insert SimpleName: setIdlocation(6933) into MethodInvocation(6935) at 1", "Insert SimpleName: attrValue(6934) into MethodInvocation(6935) at 2", "Insert SimpleName: reportConflictingAttribute(6964) into MethodInvocation(6970) at 0", "Insert SimpleName: reader(6965) into MethodInvocation(6970) at 1", "Insert SimpleName: configuration(6966) into MethodInvocation(6970) at 2", "Insert SimpleName: ELEM_SEND(6967) into MethodInvocation(6970) at 3", "Insert SimpleName: ATTR_DELAY(6968) into MethodInvocation(6970) at 4", "Insert SimpleName: ATTR_DELAYEXPR(6969) into MethodInvocation(6970) at 5", "Insert SimpleName: send(6973) into MethodInvocation(6976) at 0", "Insert SimpleName: setDelayexpr(6974) into MethodInvocation(6976) at 1", "Insert SimpleName: attrValue(6975) into MethodInvocation(6976) at 2", "Insert SimpleName: reportConflictingAttribute(7005) into MethodInvocation(7011) at 0", "Insert SimpleName: reader(7006) into MethodInvocation(7011) at 1", "Insert SimpleName: configuration(7007) into MethodInvocation(7011) at 2", "Insert SimpleName: ELEM_SEND(7008) into MethodInvocation(7011) at 3", "Insert SimpleName: ATTR_EVENT(7009) into MethodInvocation(7011) at 4", "Insert SimpleName: ATTR_EVENTEXPR(7010) into MethodInvocation(7011) at 5", "Insert SimpleName: send(7014) into MethodInvocation(7017) at 0", "Insert SimpleName: setEventexpr(7015) into MethodInvocation(7017) at 1", "Insert SimpleName: attrValue(7016) into MethodInvocation(7017) at 2", "Insert SimpleName: reportConflictingAttribute(7062) into MethodInvocation(7068) at 0", "Insert SimpleName: reader(7063) into MethodInvocation(7068) at 1", "Insert SimpleName: configuration(7064) into MethodInvocation(7068) at 2", "Insert SimpleName: ELEM_SEND(7065) into MethodInvocation(7068) at 3", "Insert SimpleName: ATTR_TARGET(7066) into MethodInvocation(7068) at 4", "Insert SimpleName: ATTR_TARGETEXPR(7067) into MethodInvocation(7068) at 5", "Insert SimpleName: send(7071) into MethodInvocation(7074) at 0", "Insert SimpleName: setTargetexpr(7072) into MethodInvocation(7074) at 1", "Insert SimpleName: attrValue(7073) into MethodInvocation(7074) at 2", "Insert SimpleName: reportConflictingAttribute(7103) into MethodInvocation(7109) at 0", "Insert SimpleName: reader(7104) into MethodInvocation(7109) at 1", "Insert SimpleName: configuration(7105) into MethodInvocation(7109) at 2", "Insert SimpleName: ELEM_SEND(7106) into MethodInvocation(7109) at 3", "Insert SimpleName: ATTR_TYPE(7107) into MethodInvocation(7109) at 4", "Insert SimpleName: ATTR_TYPEEXPR(7108) into MethodInvocation(7109) at 5", "Insert SimpleName: send(7112) into MethodInvocation(7115) at 0", "Insert SimpleName: setTypeexpr(7113) into MethodInvocation(7115) at 1", "Insert SimpleName: attrValue(7114) into MethodInvocation(7115) at 2", "Insert MethodInvocation(9386) into MethodInvocation(9389) at 0", "Insert SimpleName: append(9387) into MethodInvocation(9389) at 1", "Insert SimpleName: conflictingAttr(9388) into MethodInvocation(9389) at 2", "Insert MethodInvocation(9383) into MethodInvocation(9386) at 0", "Insert SimpleName: append(9384) into MethodInvocation(9386) at 1", "Insert StringLiteral: \"> attribute \\\"\"(9385) into MethodInvocation(9386) at 2", "Insert MethodInvocation(9380) into MethodInvocation(9383) at 0", "Insert SimpleName: append(9381) into MethodInvocation(9383) at 1", "Insert SimpleName: element(9382) into MethodInvocation(9383) at 2", "Insert SimpleName: sb(9377) into MethodInvocation(9380) at 0", "Insert SimpleName: append(9378) into MethodInvocation(9380) at 1", "Insert StringLiteral: \"Ignoring <\"(9379) into MethodInvocation(9380) at 2"]}}, {"SCXMLWriter_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 37", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: static to FieldDeclaration at 1", "INS StringLiteral: \"delayexpr\" to VariableDeclarationFragment at 1", "INS SimpleType: String to FieldDeclaration at 3", "INS SimpleName: ATTR_DELAYEXPR to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 37", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 39", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 39", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleType: String to FieldDeclaration at 3", "INS StringLiteral: \"eventexpr\" to VariableDeclarationFragment at 1", "INS SimpleName: ATTR_EVENTEXPR to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 44", "operations": ["INS SimpleName: ATTR_IDLOCATION to VariableDeclarationFragment at 0", "INS SimpleType: String to FieldDeclaration at 3", "INS Modifier: static to FieldDeclaration at 1", "INS StringLiteral: \"idlocation\" to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 44", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 57", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS StringLiteral: \"targetexpr\" to VariableDeclarationFragment at 1", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: ATTR_TARGETEXPR to VariableDeclarationFragment at 0", "INS SimpleType: String to FieldDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 57", "INS Modifier: final to FieldDeclaration at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 59", "operations": ["INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS FieldDeclaration to TypeDeclaration: class at 59", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: String to FieldDeclaration at 3", "INS SimpleName: ATTR_TYPEEXPR to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS StringLiteral: \"typeexpr\" to VariableDeclarationFragment at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: writer to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: getIdlocation to MethodInvocation at 1", "INS SimpleName: writeAV to MethodInvocation at 0", "INS SimpleName: ATTR_IDLOCATION to MethodInvocation at 2", "INS SimpleName: send to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS SimpleName: ATTR_EVENTEXPR to MethodInvocation at 2", "INS SimpleName: writeAV to MethodInvocation at 0", "INS SimpleName: getEventexpr to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: send to MethodInvocation at 0", "INS SimpleName: writer to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS ExpressionStatement to Block at 6", "INS SimpleName: send to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: writer to MethodInvocation at 1", "INS SimpleName: ATTR_TARGETEXPR to MethodInvocation at 2", "INS SimpleName: getTargetexpr to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: writeAV to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 8", "operations": ["INS SimpleName: send to MethodInvocation at 0", "INS SimpleName: ATTR_TYPEEXPR to MethodInvocation at 2", "INS SimpleName: writer to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getTypeexpr to MethodInvocation at 1", "INS SimpleName: writeAV to MethodInvocation at 0", "INS ExpressionStatement to Block at 8", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 10", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getDelayexpr to MethodInvocation at 1", "INS ExpressionStatement to Block at 10", "INS SimpleName: ATTR_DELAYEXPR to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: send to MethodInvocation at 0", "INS SimpleName: writer to MethodInvocation at 1", "INS SimpleName: writeAV to MethodInvocation at 0"]}, {"root": "UPDATE from ATTR_SENDID to ATTR_ID", "operations": ["UPD SimpleName: ATTR_SENDID from ATTR_SENDID to ATTR_ID"]}, {"root": "UPDATE from getSendid to getId", "operations": ["UPD SimpleName: getSendid from getSendid to getId"]}]}}, {"SCXMLWriter_diff": {"operations": ["Insert FieldDeclaration(462) into TypeDeclaration: class(5057) at 37", "Insert FieldDeclaration(480) into TypeDeclaration: class(5057) at 39", "Insert FieldDeclaration(525) into TypeDeclaration: class(5057) at 44", "Insert FieldDeclaration(642) into TypeDeclaration: class(5057) at 57", "Insert FieldDeclaration(660) into TypeDeclaration: class(5057) at 59", "Insert Modifier: private(454) into FieldDeclaration(462) at 0", "Insert Modifier: static(455) into FieldDeclaration(462) at 1", "Insert Modifier: final(456) into FieldDeclaration(462) at 2", "Insert SimpleType: String(458) into FieldDeclaration(462) at 3", "Insert VariableDeclarationFragment(461) into FieldDeclaration(462) at 4", "Insert Modifier: private(472) into FieldDeclaration(480) at 0", "Insert Modifier: static(473) into FieldDeclaration(480) at 1", "Insert Modifier: final(474) into FieldDeclaration(480) at 2", "Insert SimpleType: String(476) into FieldDeclaration(480) at 3", "Insert VariableDeclarationFragment(479) into FieldDeclaration(480) at 4", "Insert Modifier: private(517) into FieldDeclaration(525) at 0", "Insert Modifier: static(518) into FieldDeclaration(525) at 1", "Insert Modifier: final(519) into FieldDeclaration(525) at 2", "Insert SimpleType: String(521) into FieldDeclaration(525) at 3", "Insert VariableDeclarationFragment(524) into FieldDeclaration(525) at 4", "Insert Modifier: private(634) into FieldDeclaration(642) at 0", "Insert Modifier: static(635) into FieldDeclaration(642) at 1", "Insert Modifier: final(636) into FieldDeclaration(642) at 2", "Insert SimpleType: String(638) into FieldDeclaration(642) at 3", "Insert VariableDeclarationFragment(641) into FieldDeclaration(642) at 4", "Insert Modifier: private(652) into FieldDeclaration(660) at 0", "Insert Modifier: static(653) into FieldDeclaration(660) at 1", "Insert Modifier: final(654) into FieldDeclaration(660) at 2", "Insert SimpleType: String(656) into FieldDeclaration(660) at 3", "Insert VariableDeclarationFragment(659) into FieldDeclaration(660) at 4", "Insert SimpleName: String(457) into SimpleType: String(458) at 0", "Insert SimpleName: ATTR_DELAYEXPR(459) into VariableDeclarationFragment(461) at 0", "Insert StringLiteral: \"delayexpr\"(460) into VariableDeclarationFragment(461) at 1", "Insert SimpleName: String(475) into SimpleType: String(476) at 0", "Insert SimpleName: ATTR_EVENTEXPR(477) into VariableDeclarationFragment(479) at 0", "Insert StringLiteral: \"eventexpr\"(478) into VariableDeclarationFragment(479) at 1", "Insert SimpleName: String(520) into SimpleType: String(521) at 0", "Insert SimpleName: ATTR_IDLOCATION(522) into VariableDeclarationFragment(524) at 0", "Insert StringLiteral: \"idlocation\"(523) into VariableDeclarationFragment(524) at 1", "Insert SimpleName: String(637) into SimpleType: String(638) at 0", "Insert SimpleName: ATTR_TARGETEXPR(639) into VariableDeclarationFragment(641) at 0", "Insert StringLiteral: \"targetexpr\"(640) into VariableDeclarationFragment(641) at 1", "Insert SimpleName: String(655) into SimpleType: String(656) at 0", "Insert SimpleName: ATTR_TYPEEXPR(657) into VariableDeclarationFragment(659) at 0", "Insert StringLiteral: \"typeexpr\"(658) into VariableDeclarationFragment(659) at 1", "Insert ExpressionStatement(3605) into Block(3695) at 2", "Insert ExpressionStatement(3621) into Block(3695) at 4", "Insert ExpressionStatement(3637) into Block(3695) at 6", "Insert ExpressionStatement(3653) into Block(3695) at 8", "Insert ExpressionStatement(3669) into Block(3695) at 10", "Insert MethodInvocation(3604) into ExpressionStatement(3605) at 0", "Insert MethodInvocation(3620) into ExpressionStatement(3621) at 0", "Insert MethodInvocation(3636) into ExpressionStatement(3637) at 0", "Insert MethodInvocation(3652) into ExpressionStatement(3653) at 0", "Insert MethodInvocation(3668) into ExpressionStatement(3669) at 0", "Update SimpleName: ATTR_SENDID(3547) to ATTR_ID", "Insert SimpleName: writeAV(3598) into MethodInvocation(3604) at 0", "Insert SimpleName: writer(3599) into MethodInvocation(3604) at 1", "Insert SimpleName: ATTR_IDLOCATION(3600) into MethodInvocation(3604) at 2", "Insert MethodInvocation(3603) into MethodInvocation(3604) at 3", "Insert SimpleName: writeAV(3614) into MethodInvocation(3620) at 0", "Insert SimpleName: writer(3615) into MethodInvocation(3620) at 1", "Insert SimpleName: ATTR_EVENTEXPR(3616) into MethodInvocation(3620) at 2", "Insert MethodInvocation(3619) into MethodInvocation(3620) at 3", "Insert SimpleName: writeAV(3630) into MethodInvocation(3636) at 0", "Insert SimpleName: writer(3631) into MethodInvocation(3636) at 1", "Insert SimpleName: ATTR_TARGETEXPR(3632) into MethodInvocation(3636) at 2", "Insert MethodInvocation(3635) into MethodInvocation(3636) at 3", "Insert SimpleName: writeAV(3646) into MethodInvocation(3652) at 0", "Insert SimpleName: writer(3647) into MethodInvocation(3652) at 1", "Insert SimpleName: ATTR_TYPEEXPR(3648) into MethodInvocation(3652) at 2", "Insert MethodInvocation(3651) into MethodInvocation(3652) at 3", "Insert SimpleName: writeAV(3662) into MethodInvocation(3668) at 0", "Insert SimpleName: writer(3663) into MethodInvocation(3668) at 1", "Insert SimpleName: ATTR_DELAYEXPR(3664) into MethodInvocation(3668) at 2", "Insert MethodInvocation(3667) into MethodInvocation(3668) at 3", "Update SimpleName: getSendid(3549) to getId", "Insert SimpleName: send(3601) into MethodInvocation(3603) at 0", "Insert SimpleName: getIdlocation(3602) into MethodInvocation(3603) at 1", "Insert SimpleName: send(3617) into MethodInvocation(3619) at 0", "Insert SimpleName: getEventexpr(3618) into MethodInvocation(3619) at 1", "Insert SimpleName: send(3633) into MethodInvocation(3635) at 0", "Insert SimpleName: getTargetexpr(3634) into MethodInvocation(3635) at 1", "Insert SimpleName: send(3649) into MethodInvocation(3651) at 0", "Insert SimpleName: getTypeexpr(3650) into MethodInvocation(3651) at 1", "Insert SimpleName: send(3665) into MethodInvocation(3667) at 0", "Insert SimpleName: getDelayexpr(3666) into MethodInvocation(3667) at 1"]}}, {"Send_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS ImportDeclaration to CompilationUnit at 11", "INS QualifiedName: org.apache.commons.scxml2.SCXMLSystemContext to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS ImportDeclaration to CompilationUnit at 15", "INS QualifiedName: org.w3c.dom.Text to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS ImportDeclaration to CompilationUnit at 16", "INS QualifiedName: org.w3c.dom.CharacterData to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 14", "operations": ["INS SimpleName: idlocation to VariableDeclarationFragment at 0", "INS SimpleType: String to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 14", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement: Path expression evaluating to a location within a previously defined XML data tree. to TagElement at 0", "INS TagElement to Javadoc at 0", "INS Javadoc to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 15", "operations": ["INS Javadoc to FieldDeclaration at 0", "INS TextElement: The target location of the event. to TagElement at 0", "INS TagElement to Javadoc at 0", "INS FieldDeclaration to TypeDeclaration: class at 15", "INS Modifier: private to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 18", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 3", "INS TagElement to Javadoc at 0", "INS SimpleName: typeexpr to VariableDeclarationFragment at 0", "INS SimpleType: String to FieldDeclaration at 2", "INS Javadoc to FieldDeclaration at 0", "INS Modifier: private to FieldDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement: An expression defining the type of the Event I/O Processor that the event should be dispatched to. to TagElement at 0", "INS FieldDeclaration to TypeDeclaration: class at 18"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 20", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS Javadoc to FieldDeclaration at 0", "INS SimpleType: String to FieldDeclaration at 2", "INS SimpleName: delayexpr to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 20", "INS Modifier: private to FieldDeclaration at 1", "INS TextElement: An expression defining the delay the event is dispatched after. to TagElement at 0", "INS TagElement to Javadoc at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 25", "operations": ["INS TextElement: An expression defining the type of event being generated. to TagElement at 0", "INS FieldDeclaration to TypeDeclaration: class at 25", "INS Javadoc to FieldDeclaration at 0", "INS SimpleType: String to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: eventexpr to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 27", "operations": ["INS SimpleName: idlocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 4", "INS Javadoc to MethodDeclaration at 0", "INS TextElement:  the idlocation to TagElement: @return at 0", "INS SimpleName: getIdlocation to MethodDeclaration at 3", "INS TagElement: @return to Javadoc at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS MethodDeclaration to TypeDeclaration: class at 27", "INS SimpleType: String to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 28", "operations": ["INS TagElement to Javadoc at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS TextElement:  The idlocation expression to TagElement: @param at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleType: String to SingleVariableDeclaration at 1", "INS SimpleName: idlocation to FieldAccess at 1", "INS ExpressionStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: setIdlocation to MethodDeclaration at 3", "INS TagElement: @param to Javadoc at 1", "INS ThisExpression to FieldAccess at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TextElement: Set the idlocation expression to TagElement at 0", "INS Block to MethodDeclaration at 5", "INS Javadoc to MethodDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: idlocation to Assignment: = at 1", "INS MethodDeclaration to TypeDeclaration: class at 28", "INS SimpleName: idlocation to TagElement: @param at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: idlocation to SingleVariableDeclaration at 2", "INS FieldAccess to Assignment: = at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 31", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 31", "INS Javadoc to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS TagElement: @return to Javadoc at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: delayexpr to ReturnStatement at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS TextElement:  The delay expression to TagElement: @return at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: getDelayexpr to MethodDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 32", "operations": ["INS ThisExpression to FieldAccess at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS TagElement to Javadoc at 0", "INS TextElement:  The delay expression to set to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: delayexpr to SingleVariableDeclaration at 2", "INS TextElement: Set the delay expression to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: delayexpr to TagElement: @param at 0", "INS Block to MethodDeclaration at 5", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: delayexpr to Assignment: = at 1", "INS MethodDeclaration to TypeDeclaration: class at 32", "INS SimpleName: setDelayexpr to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: delayexpr to FieldAccess at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 42", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: targetexpr to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 42", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement:  The target expression to TagElement: @return at 0", "INS TagElement: @return to Javadoc at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: getTargetexpr to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 43", "operations": ["INS TextElement:  The target expression to set to TagElement: @param at 1", "INS MethodDeclaration to TypeDeclaration: class at 43", "INS TagElement to Javadoc at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS TextElement: Set the target expression to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS FieldAccess to Assignment: = at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: targetexpr to Assignment: = at 1", "INS SimpleType: String to SingleVariableDeclaration at 1", "INS SimpleName: setTargetexpr to MethodDeclaration at 3", "INS ThisExpression to FieldAccess at 0", "INS Block to MethodDeclaration at 5", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: targetexpr to TagElement: @param at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: targetexpr to SingleVariableDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: targetexpr to FieldAccess at 1", "INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 46", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS Javadoc to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: typeexpr to ReturnStatement at 0", "INS SimpleName: getTypeexpr to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 46", "INS SimpleName: String to SimpleType: String at 0", "INS Block to MethodDeclaration at 4", "INS TextElement:  The type expression to TagElement: @return at 0", "INS TagElement: @return to Javadoc at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 47", "operations": ["INS SimpleName: typeexpr to TagElement: @param at 0", "INS Javadoc to MethodDeclaration at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: typeexpr to FieldAccess at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 47", "INS ThisExpression to FieldAccess at 0", "INS TextElement:  The type expression to set to TagElement: @param at 1", "INS SimpleName: typeexpr to SingleVariableDeclaration at 2", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: setTypeexpr to MethodDeclaration at 3", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: typeexpr to Assignment: = at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: String to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement: Sets the type expression to TagElement at 0", "INS TagElement to Javadoc at 0", "INS ExpressionStatement to Block at 0", "INS TagElement: @param to Javadoc at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Block to MethodDeclaration at 5"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 50", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: eventexpr to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 50", "INS Javadoc to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS TextElement:  The event expression to TagElement: @return at 0", "INS SimpleName: getEventexpr to MethodDeclaration at 3", "INS TagElement: @return to Javadoc at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 51", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 51", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TextElement: Sets the event expression to TagElement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS TagElement: @param to Javadoc at 1", "INS TagElement to Javadoc at 0", "INS FieldAccess to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: String to SingleVariableDeclaration at 1", "INS SimpleName: eventexpr to FieldAccess at 1", "INS TextElement:  The event expression to set to TagElement: @param at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: eventexpr to TagElement: @param at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: setEventexpr to MethodDeclaration at 3", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: eventexpr to SingleVariableDeclaration at 2", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: eventexpr to Assignment: = at 1", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 54", "operations": ["INS SwitchCase to SwitchStatement at 13", "INS SimpleName: node to MethodInvocation at 0", "INS QualifiedName: Node.CDATA_SECTION_NODE to SwitchCase at 0", "INS IfStatement to Block at 0", "INS SwitchCase to SwitchStatement at 1", "INS SimpleType: Node to SingleVariableDeclaration at 1", "INS SimpleName: appendChild to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: createTextNode to MethodInvocation at 1", "INS SimpleName: value to MethodInvocation at 2", "INS SimpleName: node to MethodInvocation at 0", "INS TagElement: @param to Javadoc at 1", "INS SwitchStatement to Block at 0", "INS QualifiedName: Node.TEXT_NODE to SwitchCase at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SwitchCase to SwitchStatement at 9", "INS SimpleName: Node to SimpleType: Node at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: child to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: getFirstChild to MethodInvocation at 1", "INS SimpleName: child to Assignment: = at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: setNodeValue to MethodDeclaration at 3", "INS SimpleName: hasChildNodes to MethodInvocation at 1", "INS TextElement:  The new value to TagElement: @param at 1", "INS MethodDeclaration to TypeDeclaration: class at 54", "INS SimpleName: setNodeValue to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS NullLiteral to InfixExpression: != at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS BreakStatement to SwitchStatement at 12", "INS ParenthesizedExpression to MethodInvocation at 0", "INS QualifiedName: Node.ATTRIBUTE_NODE to SwitchCase at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: Node to VariableDeclarationStatement at 0", "INS SimpleName: node to CastExpression at 1", "INS SimpleName: node to MethodInvocation at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: node to MethodInvocation at 0", "INS SimpleType: Text to VariableDeclarationStatement at 0", "INS SimpleName: child to InfixExpression: != at 0", "INS VariableDeclarationStatement to SwitchStatement at 6", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getNextSibling to MethodInvocation at 1", "INS TextElement: Set node value, depending on its type, from a String. to TagElement at 0", "INS SwitchCase to SwitchStatement at 4", "INS ExpressionStatement to SwitchStatement at 11", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: child to MethodInvocation at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: IllegalArgumentException to ClassInstanceCreation at 0", "INS MethodInvocation to SwitchStatement at 0", "INS SimpleName: CharacterData to SimpleType: CharacterData at 0", "INS SimpleName: node to MethodInvocation at 0", "INS TextElement:  A Node whose value is to be set to TagElement: @param at 1", "INS SimpleType: CharacterData to CastExpression at 0", "INS SimpleType: String to SingleVariableDeclaration at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: Text to SimpleType: Text at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS ThrowStatement to SwitchStatement at 15", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to SwitchStatement at 14", "INS QualifiedName: Node.ELEMENT_NODE to SwitchCase at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: node to SingleVariableDeclaration at 2", "INS ExpressionStatement to SwitchStatement at 7", "INS StringLiteral: \"Trying to set value of a strange Node type: \" to InfixExpression: + at 0", "INS SimpleName: node to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS WhileStatement to Block at 1", "INS SimpleName: value to SingleVariableDeclaration at 2", "INS SimpleName: value to MethodInvocation at 2", "INS SimpleName: node to MethodInvocation at 0", "INS SimpleName: getNodeType to MethodInvocation at 1", "INS BreakStatement to SwitchStatement at 8", "INS SimpleName: setData to MethodInvocation at 1", "INS IfStatement to SwitchStatement at 5", "INS SimpleName: node to TagElement: @param at 0", "INS SimpleName: value to MethodInvocation at 2", "INS Modifier: final to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getOwnerDocument to MethodInvocation at 1", "INS SimpleName: value to TagElement: @param at 0", "INS SimpleName: child to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: getNodeType to MethodInvocation at 1", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: node to MethodInvocation at 0", "INS Block to WhileStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to SwitchStatement at 2", "INS SwitchCase to SwitchStatement at 10", "INS SimpleName: err to VariableDeclarationFragment at 0", "INS MethodInvocation to Assignment: = at 1", "INS Modifier: private to MethodDeclaration at 1", "INS SimpleName: txt to MethodInvocation at 2", "INS InfixExpression: != to WhileStatement at 0", "INS BreakStatement to SwitchStatement at 3", "INS SimpleName: getNodeType to MethodInvocation at 1", "INS SimpleName: removeChild to MethodInvocation at 1", "INS SimpleName: txt to VariableDeclarationFragment at 0", "INS SimpleName: child to MethodInvocation at 2", "INS QualifiedName: Node.TEXT_NODE to InfixExpression: == at 1", "INS Block to MethodDeclaration at 6", "INS SimpleName: IllegalArgumentException to SimpleType: IllegalArgumentException at 0", "INS SimpleName: Node to SimpleType: Node at 0", "INS SimpleName: err to ClassInstanceCreation at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 3", "MOV SimpleType: String to FieldDeclaration at 2"]}, {"root": "INS SimpleType: String to FieldDeclaration at 2", "operations": ["INS SimpleType: String to FieldDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS VariableDeclarationFragment to FieldDeclaration at 3", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: targetexpr to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from getSendid to getId", "operations": ["UPD SimpleName: getSendid from getSendid to getId"]}, {"root": "UPDATE from setSendid to setId", "operations": ["UPD SimpleName: setSendid from setSendid to setId"]}, {"root": "UPDATE from sendid to id", "operations": ["UPD SimpleName: sendid from sendid to id", "UPD SimpleName: sendid from sendid to id", "UPD SimpleName: sendid from sendid to id", "UPD SimpleName: sendid from sendid to id", "UPD SimpleName: sendid from sendid to id", "UPD SimpleName: sendid from sendid to id", "UPD SimpleName: sendid from sendid to id"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleType: String to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: String to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS IfStatement to Block at 1", "INS SimpleName: SCXMLSystemContext to SimpleType: SCXMLSystemContext at 0", "INS SimpleName: eval to MethodInvocation at 0", "INS MethodInvocation to CastExpression at 1", "INS InfixExpression: == to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: id to Assignment: = at 0", "INS SimpleName: ctx to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: location to InfixExpression: != at 0", "INS ThrowStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: evalLocation to MethodInvocation at 1", "INS SimpleName: ModelException to SimpleType: ModelException at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: location to VariableDeclarationFragment at 0", "INS InfixExpression: != to IfStatement at 0", "INS StringLiteral: \"<send>: idlocation does not point to a <data> node\" to ClassInstanceCreation at 1", "INS SimpleType: SCXMLSystemContext to CastExpression at 0", "INS Block to IfStatement at 2", "INS NullLiteral to InfixExpression: != at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: setNodeValue to MethodInvocation at 0", "INS SimpleName: id to InfixExpression: == at 0", "INS SimpleName: id to MethodInvocation at 2", "INS SimpleName: getParent to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS Block to IfStatement at 1", "INS SimpleName: location to MethodInvocation at 1", "INS SimpleName: exctx to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: Node to SimpleType: Node at 0", "INS SimpleName: generateSessionId to MethodInvocation at 1", "INS SimpleName: idlocation to InfixExpression: != at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to Assignment: = at 1", "INS InfixExpression: != to IfStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: idlocation to MethodInvocation at 3", "INS SimpleType: ModelException to ClassInstanceCreation at 0", "INS SimpleName: getGlobalContext to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 6", "INS ParenthesizedExpression to MethodInvocation at 0", "INS SimpleType: Node to VariableDeclarationStatement at 0"]}, {"root": "INS IfStatement to Block at 11", "operations": ["INS NullLiteral to InfixExpression: == at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: typeValue to InfixExpression: == at 0", "INS SimpleName: typeValue to Assignment: = at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 11", "INS PrefixExpression: ! to InfixExpression: && at 0", "INS InfixExpression: && to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: typeValue to MethodInvocation at 2", "INS SimpleName: TYPE_SCXML to Assignment: = at 1", "INS SimpleName: TYPE_SCXML to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS IfStatement to IfStatement at 2", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: == to IfStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 15", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: delayString to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 15", "INS SimpleName: delay to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 17", "operations": ["INS SimpleName: delayString to InfixExpression: != at 0", "INS InfixExpression: != to IfStatement at 0", "INS IfStatement to Block at 17", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "UPDATE from An expression returning the target location of the event. to An expression specifying the target location of the event.", "operations": ["UPD TextElement: An expression returning the target location of the event. from An expression returning the target location of the event. to An expression specifying the target location of the event."]}, {"root": "UPDATE from The type of the Event I/O Processor that the event. to The type of the Event I/O Processor that the event should be dispatched to.", "operations": ["UPD TextElement: The type of the Event I/O Processor that the event. from The type of the Event I/O Processor that the event. to The type of the Event I/O Processor that the event should be dispatched to."]}, {"root": "UPDATE from The event is dispatched after the delay interval elapses. to The delay the event is dispatched after.", "operations": ["UPD TextElement: The event is dispatched after the delay interval elapses. from The event is dispatched after the delay interval elapses. to The delay the event is dispatched after."]}, {"root": "UPDATE from  String Returns the sendid. to  String Returns the id.", "operations": ["UPD TextElement:  String Returns the sendid. from  String Returns the sendid. to  String Returns the id."]}, {"root": "UPDATE from  The sendid to set. to  The id to set.", "operations": ["UPD TextElement:  The sendid to set. from  The sendid to set. to  The id to set."]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: != to InfixExpression: && at 1", "INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: == to InfixExpression: && at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: targetValue to InfixExpression: == at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: == to InfixExpression: && at 0", "INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: != to InfixExpression: && at 1", "INS SimpleName: typeValue to InfixExpression: == at 0", "INS NullLiteral to InfixExpression: == at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: == to InfixExpression: && at 0", "INS SimpleName: delayString to InfixExpression: == at 0", "INS InfixExpression: != to InfixExpression: && at 1", "INS NullLiteral to InfixExpression: == at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: == to InfixExpression: && at 0", "INS SimpleName: eventValue to InfixExpression: == at 0", "INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: != to InfixExpression: && at 1"]}, {"root": "INS SimpleName: type to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: type to VariableDeclarationFragment at 1"]}, {"root": "INS MethodInvocation to InfixExpression: && at 1", "operations": ["INS MethodInvocation to InfixExpression: && at 1", "INS SimpleName: typeValue to MethodInvocation at 2", "INS SimpleName: TYPE_SCXML to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: eventValue to InfixExpression: == at 0", "INS InfixExpression: == to IfStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: ModelException to SimpleType: ModelException at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS ThrowStatement to Block at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS StringLiteral: \"Event parameter is required for <send> with type=\\\"scxml\\\"\" to ClassInstanceCreation at 1", "INS SimpleType: ModelException to ClassInstanceCreation at 0"]}, {"root": "UPDATE from target to targetexpr", "operations": ["UPD SimpleName: target from target to targetexpr", "UPD SimpleName: target from target to targetexpr", "UPD SimpleName: target from target to targetexpr"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV NullLiteral to InfixExpression: != at 1", "MOV SimpleName: target to InfixExpression: != at 0"]}, {"root": "UPDATE from type to typeexpr", "operations": ["UPD SimpleName: type from type to typeexpr", "UPD SimpleName: type from type to typeexpr", "UPD SimpleName: type from type to typeexpr"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV SimpleName: type to InfixExpression: != at 0", "MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV MethodInvocation to InfixExpression: && at 1"]}, {"root": "UPDATE from delay to delayexpr", "operations": ["UPD SimpleName: delay from delay to delayexpr"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV SimpleName: delay to InfixExpression: != at 0", "MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: delayString to Assignment: = at 0", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "UPDATE from event to eventexpr", "operations": ["UPD SimpleName: event from event to eventexpr", "UPD SimpleName: event from event to eventexpr", "UPD SimpleName: event from event to eventexpr"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV NullLiteral to InfixExpression: != at 1", "MOV SimpleName: event to InfixExpression: != at 0"]}, {"root": "INS ThrowStatement to Block at 0", "operations": ["INS SimpleName: SCXMLExpressionException to SimpleType: SCXMLExpressionException at 0", "INS SimpleType: SCXMLExpressionException to ClassInstanceCreation at 0", "INS ThrowStatement to Block at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS InfixExpression: + to ClassInstanceCreation at 1"]}, {"root": "MOVE from CastExpression", "operations": ["MOV SimpleType: String to CastExpression at 0"]}, {"root": "MOVE from CastExpression", "operations": ["MOV SimpleType: String to CastExpression at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV StringLiteral: \"\\\" evaluated to null or empty String\" to InfixExpression: + at 2", "MOV StringLiteral: \"<send>: event expression \\\"\" to InfixExpression: + at 0", "MOV SimpleName: event to InfixExpression: + at 1"]}, {"root": "DEL TextElement: should be dispatched to", "operations": ["DEL TextElement: should be dispatched to"]}, {"root": "DEL InfixExpression: !=", "operations": ["DEL InfixExpression: !="]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: exctx", "DEL SimpleName: getAppLog"]}, {"root": "DEL InfixExpression: !=", "operations": ["DEL InfixExpression: !="]}, {"root": "DEL InfixExpression: !=", "operations": ["DEL InfixExpression: !="]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: delayString"]}, {"root": "DEL InfixExpression: !=", "operations": ["DEL InfixExpression: !="]}, {"root": "DEL ExpressionStatement", "operations": ["DEL InfixExpression: +", "DEL SimpleName: warn", "DEL ExpressionStatement", "DEL MethodInvocation"]}]}}, {"Send_diff": {"operations": ["Insert ImportDeclaration(23) into CompilationUnit(1599) at 11", "Insert ImportDeclaration(31) into CompilationUnit(1599) at 15", "Insert ImportDeclaration(33) into CompilationUnit(1599) at 16", "Insert QualifiedName: org.apache.commons.scxml2.SCXMLSystemContext(22) into ImportDeclaration(23) at 0", "Insert QualifiedName: org.w3c.dom.Text(30) into ImportDeclaration(31) at 0", "Insert QualifiedName: org.w3c.dom.CharacterData(32) into ImportDeclaration(33) at 0", "Insert FieldDeclaration(155) into TypeDeclaration: class(1598) at 14", "Insert FieldDeclaration(164) into TypeDeclaration: class(1598) at 15", "Insert FieldDeclaration(191) into TypeDeclaration: class(1598) at 18", "Insert FieldDeclaration(209) into TypeDeclaration: class(1598) at 20", "Insert FieldDeclaration(258) into TypeDeclaration: class(1598) at 25", "Insert MethodDeclaration(288) into TypeDeclaration: class(1598) at 27", "Insert MethodDeclaration(310) into TypeDeclaration: class(1598) at 28", "Insert MethodDeclaration(358) into TypeDeclaration: class(1598) at 31", "Insert MethodDeclaration(380) into TypeDeclaration: class(1598) at 32", "Insert MethodDeclaration(556) into TypeDeclaration: class(1598) at 42", "Insert MethodDeclaration(578) into TypeDeclaration: class(1598) at 43", "Insert MethodDeclaration(626) into TypeDeclaration: class(1598) at 46", "Insert MethodDeclaration(648) into TypeDeclaration: class(1598) at 47", "Insert MethodDeclaration(696) into TypeDeclaration: class(1598) at 50", "Insert MethodDeclaration(718) into TypeDeclaration: class(1598) at 51", "Insert MethodDeclaration(1597) into TypeDeclaration: class(1598) at 54", "Insert Javadoc(149) into FieldDeclaration(155) at 0", "Insert Modifier: private(150) into FieldDeclaration(155) at 1", "Insert SimpleType: String(152) into FieldDeclaration(155) at 2", "Insert VariableDeclarationFragment(154) into FieldDeclaration(155) at 3", "Insert Javadoc(158) into FieldDeclaration(164) at 0", "Insert Modifier: private(159) into FieldDeclaration(164) at 1", "Move SimpleType: String(146) into FieldDeclaration(164) at 2", "Move VariableDeclarationFragment(148) into FieldDeclaration(164) at 3", "Insert SimpleType: String(170) into FieldDeclaration(173) at 2", "Insert VariableDeclarationFragment(172) into FieldDeclaration(173) at 3", "Insert Javadoc(185) into FieldDeclaration(191) at 0", "Insert Modifier: private(186) into FieldDeclaration(191) at 1", "Insert SimpleType: String(188) into FieldDeclaration(191) at 2", "Insert VariableDeclarationFragment(190) into FieldDeclaration(191) at 3", "Insert Javadoc(203) into FieldDeclaration(209) at 0", "Insert Modifier: private(204) into FieldDeclaration(209) at 1", "Insert SimpleType: String(206) into FieldDeclaration(209) at 2", "Insert VariableDeclarationFragment(208) into FieldDeclaration(209) at 3", "Insert Javadoc(252) into FieldDeclaration(258) at 0", "Insert Modifier: private(253) into FieldDeclaration(258) at 1", "Insert SimpleType: String(255) into FieldDeclaration(258) at 2", "Insert VariableDeclarationFragment(257) into FieldDeclaration(258) at 3", "Insert Javadoc(280) into MethodDeclaration(288) at 0", "Insert Modifier: public(281) into MethodDeclaration(288) at 1", "Insert SimpleType: String(283) into MethodDeclaration(288) at 2", "Insert SimpleName: getIdlocation(284) into MethodDeclaration(288) at 3", "Insert Block(287) into MethodDeclaration(288) at 4", "Insert Javadoc(294) into MethodDeclaration(310) at 0", "Insert Modifier: public(295) into MethodDeclaration(310) at 1", "Insert PrimitiveType: void(296) into MethodDeclaration(310) at 2", "Insert SimpleName: setIdlocation(297) into MethodDeclaration(310) at 3", "Insert SingleVariableDeclaration(302) into MethodDeclaration(310) at 4", "Insert Block(309) into MethodDeclaration(310) at 5", "Insert Javadoc(350) into MethodDeclaration(358) at 0", "Insert Modifier: public(351) into MethodDeclaration(358) at 1", "Insert SimpleType: String(353) into MethodDeclaration(358) at 2", "Insert SimpleName: getDelayexpr(354) into MethodDeclaration(358) at 3", "Insert Block(357) into MethodDeclaration(358) at 4", "Insert Javadoc(364) into MethodDeclaration(380) at 0", "Insert Modifier: public(365) into MethodDeclaration(380) at 1", "Insert PrimitiveType: void(366) into MethodDeclaration(380) at 2", "Insert SimpleName: setDelayexpr(367) into MethodDeclaration(380) at 3", "Insert SingleVariableDeclaration(372) into MethodDeclaration(380) at 4", "Insert Block(379) into MethodDeclaration(380) at 5", "Update SimpleName: getSendid(365) to getId", "Update SimpleName: setSendid(379) to setId", "Insert Javadoc(548) into MethodDeclaration(556) at 0", "Insert Modifier: public(549) into MethodDeclaration(556) at 1", "Insert SimpleType: String(551) into MethodDeclaration(556) at 2", "Insert SimpleName: getTargetexpr(552) into MethodDeclaration(556) at 3", "Insert Block(555) into MethodDeclaration(556) at 4", "Insert Javadoc(562) into MethodDeclaration(578) at 0", "Insert Modifier: public(563) into MethodDeclaration(578) at 1", "Insert PrimitiveType: void(564) into MethodDeclaration(578) at 2", "Insert SimpleName: setTargetexpr(565) into MethodDeclaration(578) at 3", "Insert SingleVariableDeclaration(570) into MethodDeclaration(578) at 4", "Insert Block(577) into MethodDeclaration(578) at 5", "Insert Javadoc(618) into MethodDeclaration(626) at 0", "Insert Modifier: public(619) into MethodDeclaration(626) at 1", "Insert SimpleType: String(621) into MethodDeclaration(626) at 2", "Insert SimpleName: getTypeexpr(622) into MethodDeclaration(626) at 3", "Insert Block(625) into MethodDeclaration(626) at 4", "Insert Javadoc(632) into MethodDeclaration(648) at 0", "Insert Modifier: public(633) into MethodDeclaration(648) at 1", "Insert PrimitiveType: void(634) into MethodDeclaration(648) at 2", "Insert SimpleName: setTypeexpr(635) into MethodDeclaration(648) at 3", "Insert SingleVariableDeclaration(640) into MethodDeclaration(648) at 4", "Insert Block(647) into MethodDeclaration(648) at 5", "Insert Javadoc(688) into MethodDeclaration(696) at 0", "Insert Modifier: public(689) into MethodDeclaration(696) at 1", "Insert SimpleType: String(691) into MethodDeclaration(696) at 2", "Insert SimpleName: getEventexpr(692) into MethodDeclaration(696) at 3", "Insert Block(695) into MethodDeclaration(696) at 4", "Insert Javadoc(702) into MethodDeclaration(718) at 0", "Insert Modifier: public(703) into MethodDeclaration(718) at 1", "Insert PrimitiveType: void(704) into MethodDeclaration(718) at 2", "Insert SimpleName: setEventexpr(705) into MethodDeclaration(718) at 3", "Insert SingleVariableDeclaration(710) into MethodDeclaration(718) at 4", "Insert Block(717) into MethodDeclaration(718) at 5", "Insert Javadoc(1485) into MethodDeclaration(1597) at 0", "Insert Modifier: private(1486) into MethodDeclaration(1597) at 1", "Insert PrimitiveType: void(1487) into MethodDeclaration(1597) at 2", "Insert SimpleName: setNodeValue(1488) into MethodDeclaration(1597) at 3", "Insert SingleVariableDeclaration(1493) into MethodDeclaration(1597) at 4", "Insert SingleVariableDeclaration(1498) into MethodDeclaration(1597) at 5", "Insert Block(1596) into MethodDeclaration(1597) at 6", "Update SimpleName: sendid(138) to id", "Insert TagElement(148) into Javadoc(149) at 0", "Insert SimpleName: String(151) into SimpleType: String(152) at 0", "Insert SimpleName: idlocation(153) into VariableDeclarationFragment(154) at 0", "Insert TagElement(157) into Javadoc(158) at 0", "Insert SimpleName: String(169) into SimpleType: String(170) at 0", "Insert SimpleName: targetexpr(171) into VariableDeclarationFragment(172) at 0", "Insert TagElement(184) into Javadoc(185) at 0", "Insert SimpleName: String(187) into SimpleType: String(188) at 0", "Insert SimpleName: typeexpr(189) into VariableDeclarationFragment(190) at 0", "Insert TagElement(202) into Javadoc(203) at 0", "Insert SimpleName: String(205) into SimpleType: String(206) at 0", "Insert SimpleName: delayexpr(207) into VariableDeclarationFragment(208) at 0", "Insert TagElement(251) into Javadoc(252) at 0", "Insert SimpleName: String(254) into SimpleType: String(255) at 0", "Insert SimpleName: eventexpr(256) into VariableDeclarationFragment(257) at 0", "Insert TagElement: @return(279) into Javadoc(280) at 0", "Insert SimpleName: String(282) into SimpleType: String(283) at 0", "Insert ReturnStatement(286) into Block(287) at 0", "Insert TagElement(290) into Javadoc(294) at 0", "Insert TagElement: @param(293) into Javadoc(294) at 1", "Insert Modifier: final(298) into SingleVariableDeclaration(302) at 0", "Insert SimpleType: String(300) into SingleVariableDeclaration(302) at 1", "Insert SimpleName: idlocation(301) into SingleVariableDeclaration(302) at 2", "Insert ExpressionStatement(308) into Block(309) at 0", "Insert TagElement: @return(349) into Javadoc(350) at 0", "Insert SimpleName: String(352) into SimpleType: String(353) at 0", "Insert ReturnStatement(356) into Block(357) at 0", "Insert TagElement(360) into Javadoc(364) at 0", "Insert TagElement: @param(363) into Javadoc(364) at 1", "Insert Modifier: final(368) into SingleVariableDeclaration(372) at 0", "Move SimpleType: String(382) into SingleVariableDeclaration(372) at 1", "Insert SimpleName: delayexpr(371) into SingleVariableDeclaration(372) at 2", "Insert ExpressionStatement(378) into Block(379) at 0", "Insert SimpleType: String(498) into SingleVariableDeclaration(500) at 1", "Update SimpleName: sendid(383) to id", "Insert TagElement: @return(547) into Javadoc(548) at 0", "Insert SimpleName: String(550) into SimpleType: String(551) at 0", "Insert ReturnStatement(554) into Block(555) at 0", "Insert TagElement(558) into Javadoc(562) at 0", "Insert TagElement: @param(561) into Javadoc(562) at 1", "Insert Modifier: final(566) into SingleVariableDeclaration(570) at 0", "Insert SimpleType: String(568) into SingleVariableDeclaration(570) at 1", "Insert SimpleName: targetexpr(569) into SingleVariableDeclaration(570) at 2", "Insert ExpressionStatement(576) into Block(577) at 0", "Insert TagElement: @return(617) into Javadoc(618) at 0", "Insert SimpleName: String(620) into SimpleType: String(621) at 0", "Insert ReturnStatement(624) into Block(625) at 0", "Insert TagElement(628) into Javadoc(632) at 0", "Insert TagElement: @param(631) into Javadoc(632) at 1", "Insert Modifier: final(636) into SingleVariableDeclaration(640) at 0", "Insert SimpleType: String(638) into SingleVariableDeclaration(640) at 1", "Insert SimpleName: typeexpr(639) into SingleVariableDeclaration(640) at 2", "Insert ExpressionStatement(646) into Block(647) at 0", "Insert TagElement: @return(687) into Javadoc(688) at 0", "Insert SimpleName: String(690) into SimpleType: String(691) at 0", "Insert ReturnStatement(694) into Block(695) at 0", "Insert TagElement(698) into Javadoc(702) at 0", "Insert TagElement: @param(701) into Javadoc(702) at 1", "Insert Modifier: final(706) into SingleVariableDeclaration(710) at 0", "Insert SimpleType: String(708) into SingleVariableDeclaration(710) at 1", "Insert SimpleName: eventexpr(709) into SingleVariableDeclaration(710) at 2", "Insert ExpressionStatement(716) into Block(717) at 0", "Insert IfStatement(835) into Block(1308) at 6", "Insert IfStatement(974) into Block(1308) at 11", "Insert VariableDeclarationStatement(1068) into Block(1308) at 15", "Insert IfStatement(1112) into Block(1308) at 17", "Insert TagElement(1478) into Javadoc(1485) at 0", "Insert TagElement: @param(1481) into Javadoc(1485) at 1", "Insert TagElement: @param(1484) into Javadoc(1485) at 2", "Insert Modifier: final(1489) into SingleVariableDeclaration(1493) at 0", "Insert SimpleType: Node(1491) into SingleVariableDeclaration(1493) at 1", "Insert SimpleName: node(1492) into SingleVariableDeclaration(1493) at 2", "Insert Modifier: final(1494) into SingleVariableDeclaration(1498) at 0", "Insert SimpleType: String(1496) into SingleVariableDeclaration(1498) at 1", "Insert SimpleName: value(1497) into SingleVariableDeclaration(1498) at 2", "Insert SwitchStatement(1595) into Block(1596) at 0", "Insert TextElement: Path expression evaluating to a location within a previously defined XML data tree.(147) into TagElement(148) at 0", "Insert TextElement: The target location of the event.(156) into TagElement(157) at 0", "Update TextElement: An expression returning the target location of the event.(141) to An expression specifying the target location of the event.", "Update TextElement: The type of the Event I/O Processor that the event.(150) to The type of the Event I/O Processor that the event should be dispatched to.", "Insert TextElement: An expression defining the type of the Event I/O Processor that the event should be dispatched to.(183) into TagElement(184) at 0", "Update TextElement: The event is dispatched after the delay interval elapses.(160) to The delay the event is dispatched after.", "Insert TextElement: An expression defining the delay the event is dispatched after.(201) into TagElement(202) at 0", "Insert TextElement: An expression defining the type of event being generated.(250) into TagElement(251) at 0", "Insert TextElement:  the idlocation(278) into TagElement: @return(279) at 0", "Insert SimpleName: idlocation(285) into ReturnStatement(286) at 0", "Insert TextElement: Set the idlocation expression(289) into TagElement(290) at 0", "Insert SimpleName: idlocation(291) into TagElement: @param(293) at 0", "Insert TextElement:  The idlocation expression(292) into TagElement: @param(293) at 1", "Insert SimpleName: String(299) into SimpleType: String(300) at 0", "Insert Assignment: =(307) into ExpressionStatement(308) at 0", "Insert TextElement:  The delay expression(348) into TagElement: @return(349) at 0", "Insert SimpleName: delayexpr(355) into ReturnStatement(356) at 0", "Insert TextElement: Set the delay expression(359) into TagElement(360) at 0", "Insert SimpleName: delayexpr(361) into TagElement: @param(363) at 0", "Insert TextElement:  The delay expression to set(362) into TagElement: @param(363) at 1", "Insert Assignment: =(377) into ExpressionStatement(378) at 0", "Update TextElement:  String Returns the sendid.(358) to  String Returns the id.", "Update SimpleName: sendid(366) to id", "Update SimpleName: sendid(372) to id", "Update TextElement:  The sendid to set.(373) to  The id to set.", "Insert SimpleName: String(497) into SimpleType: String(498) at 0", "Insert TextElement:  The target expression(546) into TagElement: @return(547) at 0", "Insert SimpleName: targetexpr(553) into ReturnStatement(554) at 0", "Insert TextElement: Set the target expression(557) into TagElement(558) at 0", "Insert SimpleName: targetexpr(559) into TagElement: @param(561) at 0", "Insert TextElement:  The target expression to set(560) into TagElement: @param(561) at 1", "Insert SimpleName: String(567) into SimpleType: String(568) at 0", "Insert Assignment: =(575) into ExpressionStatement(576) at 0", "Insert TextElement:  The type expression(616) into TagElement: @return(617) at 0", "Insert SimpleName: typeexpr(623) into ReturnStatement(624) at 0", "Insert TextElement: Sets the type expression(627) into TagElement(628) at 0", "Insert SimpleName: typeexpr(629) into TagElement: @param(631) at 0", "Insert TextElement:  The type expression to set(630) into TagElement: @param(631) at 1", "Insert SimpleName: String(637) into SimpleType: String(638) at 0", "Insert Assignment: =(645) into ExpressionStatement(646) at 0", "Insert TextElement:  The event expression(686) into TagElement: @return(687) at 0", "Insert SimpleName: eventexpr(693) into ReturnStatement(694) at 0", "Insert TextElement: Sets the event expression(697) into TagElement(698) at 0", "Insert SimpleName: eventexpr(699) into TagElement: @param(701) at 0", "Insert TextElement:  The event expression to set(700) into TagElement: @param(701) at 1", "Insert SimpleName: String(707) into SimpleType: String(708) at 0", "Insert Assignment: =(715) into ExpressionStatement(716) at 0", "Insert InfixExpression: ==(788) into IfStatement(835) at 0", "Insert Block(834) into IfStatement(835) at 1", "Insert InfixExpression: &&(848) into IfStatement(891) at 0", "Move SimpleType: String(784) into VariableDeclarationStatement(897) at 0", "Insert InfixExpression: &&(904) into IfStatement(947) at 0", "Insert InfixExpression: ==(950) into IfStatement(974) at 0", "Move Block(677) into IfStatement(974) at 1", "Insert IfStatement(973) into IfStatement(974) at 2", "Move SimpleType: String(624) into VariableDeclarationStatement(1068) at 0", "Insert VariableDeclarationFragment(1067) into VariableDeclarationStatement(1068) at 1", "Insert InfixExpression: &&(1075) into IfStatement(1098) at 0", "Insert InfixExpression: !=(1101) into IfStatement(1112) at 0", "Move Block(800) into IfStatement(1112) at 1", "Insert InfixExpression: &&(1125) into IfStatement(1166) at 0", "Insert TextElement: Set node value, depending on its type, from a String.(1477) into TagElement(1478) at 0", "Insert SimpleName: node(1479) into TagElement: @param(1481) at 0", "Insert TextElement:  A Node whose value is to be set(1480) into TagElement: @param(1481) at 1", "Insert SimpleName: value(1482) into TagElement: @param(1484) at 0", "Insert TextElement:  The new value(1483) into TagElement: @param(1484) at 1", "Insert SimpleName: Node(1490) into SimpleType: Node(1491) at 0", "Insert SimpleName: String(1495) into SimpleType: String(1496) at 0", "Insert MethodInvocation(1501) into SwitchStatement(1595) at 0", "Insert SwitchCase(1503) into SwitchStatement(1595) at 1", "Insert ExpressionStatement(1508) into SwitchStatement(1595) at 2", "Insert BreakStatement(1509) into SwitchStatement(1595) at 3", "Insert SwitchCase(1511) into SwitchStatement(1595) at 4", "Insert IfStatement(1547) into SwitchStatement(1595) at 5", "Insert VariableDeclarationStatement(1558) into SwitchStatement(1595) at 6", "Insert ExpressionStatement(1563) into SwitchStatement(1595) at 7", "Insert BreakStatement(1564) into SwitchStatement(1595) at 8", "Insert SwitchCase(1566) into SwitchStatement(1595) at 9", "Insert SwitchCase(1568) into SwitchStatement(1595) at 10", "Insert ExpressionStatement(1577) into SwitchStatement(1595) at 11", "Insert BreakStatement(1578) into SwitchStatement(1595) at 12", "Insert SwitchCase(1579) into SwitchStatement(1595) at 13", "Insert VariableDeclarationStatement(1589) into SwitchStatement(1595) at 14", "Insert ThrowStatement(1594) into SwitchStatement(1595) at 15", "Insert FieldAccess(305) into Assignment: =(307) at 0", "Insert SimpleName: idlocation(306) into Assignment: =(307) at 1", "Insert FieldAccess(375) into Assignment: =(377) at 0", "Insert SimpleName: delayexpr(376) into Assignment: =(377) at 1", "Update SimpleName: sendid(388) to id", "Insert FieldAccess(573) into Assignment: =(575) at 0", "Insert SimpleName: targetexpr(574) into Assignment: =(575) at 1", "Insert FieldAccess(643) into Assignment: =(645) at 0", "Insert SimpleName: typeexpr(644) into Assignment: =(645) at 1", "Insert FieldAccess(713) into Assignment: =(715) at 0", "Insert SimpleName: eventexpr(714) into Assignment: =(715) at 1", "Insert SimpleName: id(786) into InfixExpression: ==(788) at 0", "Insert NullLiteral(787) into InfixExpression: ==(788) at 1", "Insert ExpressionStatement(802) into Block(834) at 0", "Insert IfStatement(833) into Block(834) at 1", "Insert InfixExpression: ==(844) into InfixExpression: &&(848) at 0", "Insert InfixExpression: !=(847) into InfixExpression: &&(848) at 1", "Insert SimpleName: type(895) into VariableDeclarationFragment(896) at 1", "Insert InfixExpression: ==(900) into InfixExpression: &&(904) at 0", "Insert InfixExpression: !=(903) into InfixExpression: &&(904) at 1", "Insert SimpleName: typeValue(948) into InfixExpression: ==(950) at 0", "Insert NullLiteral(949) into InfixExpression: ==(950) at 1", "Insert InfixExpression: &&(967) into IfStatement(973) at 0", "Insert Block(972) into IfStatement(973) at 1", "Insert SimpleName: delayString(1065) into VariableDeclarationFragment(1067) at 0", "Insert SimpleName: delay(1066) into VariableDeclarationFragment(1067) at 1", "Insert InfixExpression: ==(1071) into InfixExpression: &&(1075) at 0", "Insert InfixExpression: !=(1074) into InfixExpression: &&(1075) at 1", "Insert SimpleName: delayString(1099) into InfixExpression: !=(1101) at 0", "Insert NullLiteral(1100) into InfixExpression: !=(1101) at 1", "Insert InfixExpression: ==(1121) into InfixExpression: &&(1125) at 0", "Insert InfixExpression: !=(1124) into InfixExpression: &&(1125) at 1", "Insert MethodInvocation(1173) into InfixExpression: &&(1174) at 1", "Insert IfStatement(1184) into Block(1262) at 0", "Update SimpleName: sendid(979) to id", "Insert SimpleName: node(1499) into MethodInvocation(1501) at 0", "Insert SimpleName: getNodeType(1500) into MethodInvocation(1501) at 1", "Insert QualifiedName: Node.ATTRIBUTE_NODE(1502) into SwitchCase(1503) at 0", "Insert MethodInvocation(1507) into ExpressionStatement(1508) at 0", "Insert QualifiedName: Node.ELEMENT_NODE(1510) into SwitchCase(1511) at 0", "Insert MethodInvocation(1514) into IfStatement(1547) at 0", "Insert Block(1546) into IfStatement(1547) at 1", "Insert SimpleType: Text(1549) into VariableDeclarationStatement(1558) at 0", "Insert VariableDeclarationFragment(1557) into VariableDeclarationStatement(1558) at 1", "Insert MethodInvocation(1562) into ExpressionStatement(1563) at 0", "Insert QualifiedName: Node.TEXT_NODE(1565) into SwitchCase(1566) at 0", "Insert QualifiedName: Node.CDATA_SECTION_NODE(1567) into SwitchCase(1568) at 0", "Insert MethodInvocation(1576) into ExpressionStatement(1577) at 0", "Insert SimpleType: String(1581) into VariableDeclarationStatement(1589) at 0", "Insert VariableDeclarationFragment(1588) into VariableDeclarationStatement(1589) at 1", "Insert ClassInstanceCreation(1593) into ThrowStatement(1594) at 0", "Insert ThisExpression(303) into FieldAccess(305) at 0", "Insert SimpleName: idlocation(304) into FieldAccess(305) at 1", "Insert ThisExpression(373) into FieldAccess(375) at 0", "Insert SimpleName: delayexpr(374) into FieldAccess(375) at 1", "Update SimpleName: sendid(386) to id", "Insert ThisExpression(571) into FieldAccess(573) at 0", "Insert SimpleName: targetexpr(572) into FieldAccess(573) at 1", "Insert ThisExpression(641) into FieldAccess(643) at 0", "Insert SimpleName: typeexpr(642) into FieldAccess(643) at 1", "Insert ThisExpression(711) into FieldAccess(713) at 0", "Insert SimpleName: eventexpr(712) into FieldAccess(713) at 1", "Insert Assignment: =(801) into ExpressionStatement(802) at 0", "Insert InfixExpression: !=(805) into IfStatement(833) at 0", "Insert Block(832) into IfStatement(833) at 1", "Insert SimpleName: targetValue(842) into InfixExpression: ==(844) at 0", "Insert NullLiteral(843) into InfixExpression: ==(844) at 1", "Update SimpleName: target(577) to targetexpr", "Move SimpleName: target(577) into InfixExpression: !=(847) at 0", "Move NullLiteral(578) into InfixExpression: !=(847) at 1", "Insert SimpleName: typeValue(898) into InfixExpression: ==(900) at 0", "Insert NullLiteral(899) into InfixExpression: ==(900) at 1", "Update SimpleName: type(628) to typeexpr", "Move SimpleName: type(628) into InfixExpression: !=(903) at 0", "Move NullLiteral(629) into InfixExpression: !=(903) at 1", "Insert PrefixExpression: !(960) into InfixExpression: &&(967) at 0", "Move MethodInvocation(864) into InfixExpression: &&(967) at 1", "Insert ExpressionStatement(971) into Block(972) at 0", "Insert SimpleName: delayString(1069) into InfixExpression: ==(1071) at 0", "Insert NullLiteral(1070) into InfixExpression: ==(1071) at 1", "Update SimpleName: delay(767) to delayexpr", "Move SimpleName: delay(767) into InfixExpression: !=(1074) at 0", "Move NullLiteral(768) into InfixExpression: !=(1074) at 1", "Insert Block(1095) into IfStatement(1096) at 1", "Insert SimpleName: eventValue(1119) into InfixExpression: ==(1121) at 0", "Insert NullLiteral(1120) into InfixExpression: ==(1121) at 1", "Update SimpleName: event(810) to eventexpr", "Move SimpleName: event(810) into InfixExpression: !=(1124) at 0", "Move NullLiteral(811) into InfixExpression: !=(1124) at 1", "Insert SimpleName: TYPE_SCXML(1170) into MethodInvocation(1173) at 0", "Insert SimpleName: equals(1171) into MethodInvocation(1173) at 1", "Insert SimpleName: typeValue(1172) into MethodInvocation(1173) at 2", "Insert InfixExpression: ==(1177) into IfStatement(1184) at 0", "Insert Block(1183) into IfStatement(1184) at 1", "Insert SimpleName: node(1504) into MethodInvocation(1507) at 0", "Insert SimpleName: setNodeValue(1505) into MethodInvocation(1507) at 1", "Insert SimpleName: value(1506) into MethodInvocation(1507) at 2", "Insert SimpleName: node(1512) into MethodInvocation(1514) at 0", "Insert SimpleName: hasChildNodes(1513) into MethodInvocation(1514) at 1", "Insert VariableDeclarationStatement(1522) into Block(1546) at 0", "Insert WhileStatement(1545) into Block(1546) at 1", "Insert SimpleName: Text(1548) into SimpleType: Text(1549) at 0", "Insert SimpleName: txt(1550) into VariableDeclarationFragment(1557) at 0", "Insert MethodInvocation(1556) into VariableDeclarationFragment(1557) at 1", "Insert SimpleName: node(1559) into MethodInvocation(1562) at 0", "Insert SimpleName: appendChild(1560) into MethodInvocation(1562) at 1", "Insert SimpleName: txt(1561) into MethodInvocation(1562) at 2", "Insert ParenthesizedExpression(1573) into MethodInvocation(1576) at 0", "Insert SimpleName: setData(1574) into MethodInvocation(1576) at 1", "Insert SimpleName: value(1575) into MethodInvocation(1576) at 2", "Insert SimpleName: String(1580) into SimpleType: String(1581) at 0", "Insert SimpleName: err(1582) into VariableDeclarationFragment(1588) at 0", "Insert InfixExpression: +(1587) into VariableDeclarationFragment(1588) at 1", "Insert SimpleType: IllegalArgumentException(1591) into ClassInstanceCreation(1593) at 0", "Insert SimpleName: err(1592) into ClassInstanceCreation(1593) at 1", "Insert SimpleName: id(789) into Assignment: =(801) at 0", "Insert MethodInvocation(800) into Assignment: =(801) at 1", "Insert SimpleName: idlocation(803) into InfixExpression: !=(805) at 0", "Insert NullLiteral(804) into InfixExpression: !=(805) at 1", "Insert VariableDeclarationStatement(815) into Block(832) at 0", "Insert IfStatement(831) into Block(832) at 1", "Insert MethodInvocation(959) into PrefixExpression: !(960) at 0", "Insert Assignment: =(970) into ExpressionStatement(971) at 0", "Insert ExpressionStatement(1094) into Block(1095) at 0", "Insert ThrowStatement(1162) into Block(1163) at 0", "Insert SimpleName: eventValue(1175) into InfixExpression: ==(1177) at 0", "Insert NullLiteral(1176) into InfixExpression: ==(1177) at 1", "Insert ThrowStatement(1182) into Block(1183) at 0", "Insert SimpleType: Node(1516) into VariableDeclarationStatement(1522) at 0", "Insert VariableDeclarationFragment(1521) into VariableDeclarationStatement(1522) at 1", "Insert InfixExpression: !=(1525) into WhileStatement(1545) at 0", "Insert Block(1544) into WhileStatement(1545) at 1", "Insert MethodInvocation(1553) into MethodInvocation(1556) at 0", "Insert SimpleName: createTextNode(1554) into MethodInvocation(1556) at 1", "Insert SimpleName: value(1555) into MethodInvocation(1556) at 2", "Insert CastExpression(1572) into ParenthesizedExpression(1573) at 0", "Insert StringLiteral: \"Trying to set value of a strange Node type: \"(1583) into InfixExpression: +(1587) at 0", "Insert MethodInvocation(1586) into InfixExpression: +(1587) at 1", "Insert SimpleName: IllegalArgumentException(1590) into SimpleType: IllegalArgumentException(1591) at 0", "Insert ParenthesizedExpression(798) into MethodInvocation(800) at 0", "Insert SimpleName: generateSessionId(799) into MethodInvocation(800) at 1", "Insert SimpleType: Node(807) into VariableDeclarationStatement(815) at 0", "Insert VariableDeclarationFragment(814) into VariableDeclarationStatement(815) at 1", "Insert InfixExpression: !=(818) into IfStatement(831) at 0", "Insert Block(824) into IfStatement(831) at 1", "Insert Block(830) into IfStatement(831) at 2", "Move SimpleType: String(815) into CastExpression(857) at 0", "Insert SimpleName: TYPE_SCXML(956) into MethodInvocation(959) at 0", "Insert SimpleName: equals(957) into MethodInvocation(959) at 1", "Insert SimpleName: typeValue(958) into MethodInvocation(959) at 2", "Insert SimpleName: typeValue(968) into Assignment: =(970) at 0", "Insert SimpleName: TYPE_SCXML(969) into Assignment: =(970) at 1", "Insert Assignment: =(1093) into ExpressionStatement(1094) at 0", "Move SimpleType: String(582) into CastExpression(1134) at 0", "Insert ClassInstanceCreation(1161) into ThrowStatement(1162) at 0", "Insert ClassInstanceCreation(1181) into ThrowStatement(1182) at 0", "Insert SimpleName: Node(1515) into SimpleType: Node(1516) at 0", "Insert SimpleName: child(1517) into VariableDeclarationFragment(1521) at 0", "Insert MethodInvocation(1520) into VariableDeclarationFragment(1521) at 1", "Insert SimpleName: child(1523) into InfixExpression: !=(1525) at 0", "Insert NullLiteral(1524) into InfixExpression: !=(1525) at 1", "Insert IfStatement(1537) into Block(1544) at 0", "Insert ExpressionStatement(1543) into Block(1544) at 1", "Insert SimpleName: node(1551) into MethodInvocation(1553) at 0", "Insert SimpleName: getOwnerDocument(1552) into MethodInvocation(1553) at 1", "Insert SimpleType: CharacterData(1570) into CastExpression(1572) at 0", "Insert SimpleName: node(1571) into CastExpression(1572) at 1", "Insert SimpleName: node(1584) into MethodInvocation(1586) at 0", "Insert SimpleName: getNodeType(1585) into MethodInvocation(1586) at 1", "Insert CastExpression(797) into ParenthesizedExpression(798) at 0", "Insert SimpleName: Node(806) into SimpleType: Node(807) at 0", "Insert SimpleName: location(808) into VariableDeclarationFragment(814) at 0", "Insert MethodInvocation(813) into VariableDeclarationFragment(814) at 1", "Insert SimpleName: location(816) into InfixExpression: !=(818) at 0", "Insert NullLiteral(817) into InfixExpression: !=(818) at 1", "Insert ExpressionStatement(823) into Block(824) at 0", "Insert ThrowStatement(829) into Block(830) at 0", "Update SimpleName: target(586) to targetexpr", "Move MethodInvocation(844) into MethodInvocation(886) at 0", "Update SimpleName: type(637) to typeexpr", "Insert SimpleName: delayString(1089) into Assignment: =(1093) at 0", "Move MethodInvocation(788) into Assignment: =(1093) at 1", "Update SimpleName: event(819) to eventexpr", "Insert SimpleType: SCXMLExpressionException(1156) into ClassInstanceCreation(1161) at 0", "Insert InfixExpression: +(1160) into ClassInstanceCreation(1161) at 1", "Insert SimpleType: ModelException(1179) into ClassInstanceCreation(1181) at 0", "Insert StringLiteral: \"Event parameter is required for <send> with type=\\\"scxml\\\"\"(1180) into ClassInstanceCreation(1181) at 1", "Insert SimpleName: node(1518) into MethodInvocation(1520) at 0", "Insert SimpleName: getFirstChild(1519) into MethodInvocation(1520) at 1", "Insert InfixExpression: ==(1530) into IfStatement(1537) at 0", "Insert Block(1536) into IfStatement(1537) at 1", "Insert Assignment: =(1542) into ExpressionStatement(1543) at 0", "Insert SimpleName: CharacterData(1569) into SimpleType: CharacterData(1570) at 0", "Insert SimpleType: SCXMLSystemContext(791) into CastExpression(797) at 0", "Insert MethodInvocation(796) into CastExpression(797) at 1", "Insert SimpleName: eval(809) into MethodInvocation(813) at 0", "Insert SimpleName: evalLocation(810) into MethodInvocation(813) at 1", "Insert SimpleName: ctx(811) into MethodInvocation(813) at 2", "Insert SimpleName: idlocation(812) into MethodInvocation(813) at 3", "Insert MethodInvocation(822) into ExpressionStatement(823) at 0", "Insert ClassInstanceCreation(828) into ThrowStatement(829) at 0", "Update SimpleName: target(614) to targetexpr", "Update SimpleName: type(665) to typeexpr", "Insert SimpleName: SCXMLExpressionException(1155) into SimpleType: SCXMLExpressionException(1156) at 0", "Move StringLiteral: \"<send>: event expression \\\"\"(846) into InfixExpression: +(1160) at 0", "Update SimpleName: event(847) to eventexpr", "Move SimpleName: event(847) into InfixExpression: +(1160) at 1", "Move StringLiteral: \"\\\" evaluated to null or empty String\"(848) into InfixExpression: +(1160) at 2", "Insert SimpleName: ModelException(1178) into SimpleType: ModelException(1179) at 0", "Insert MethodInvocation(1528) into InfixExpression: ==(1530) at 0", "Insert QualifiedName: Node.TEXT_NODE(1529) into InfixExpression: ==(1530) at 1", "Insert ExpressionStatement(1535) into Block(1536) at 0", "Insert SimpleName: child(1538) into Assignment: =(1542) at 0", "Insert MethodInvocation(1541) into Assignment: =(1542) at 1", "Insert SimpleName: SCXMLSystemContext(790) into SimpleType: SCXMLSystemContext(791) at 0", "Insert MethodInvocation(794) into MethodInvocation(796) at 0", "Insert SimpleName: getParent(795) into MethodInvocation(796) at 1", "Insert SimpleName: setNodeValue(819) into MethodInvocation(822) at 0", "Insert SimpleName: location(820) into MethodInvocation(822) at 1", "Insert SimpleName: id(821) into MethodInvocation(822) at 2", "Insert SimpleType: ModelException(826) into ClassInstanceCreation(828) at 0", "Insert StringLiteral: \"<send>: idlocation does not point to a <data> node\"(827) into ClassInstanceCreation(828) at 1", "Insert SimpleName: child(1526) into MethodInvocation(1528) at 0", "Insert SimpleName: getNodeType(1527) into MethodInvocation(1528) at 1", "Insert MethodInvocation(1534) into ExpressionStatement(1535) at 0", "Insert SimpleName: child(1539) into MethodInvocation(1541) at 0", "Insert SimpleName: getNextSibling(1540) into MethodInvocation(1541) at 1", "Insert SimpleName: exctx(792) into MethodInvocation(794) at 0", "Insert SimpleName: getGlobalContext(793) into MethodInvocation(794) at 1", "Insert SimpleName: ModelException(825) into SimpleType: ModelException(826) at 0", "Insert SimpleName: node(1531) into MethodInvocation(1534) at 0", "Insert SimpleName: removeChild(1532) into MethodInvocation(1534) at 1", "Insert SimpleName: child(1533) into MethodInvocation(1534) at 2", "Delete TextElement: should be dispatched to(151)", "Delete InfixExpression: !=(579)", "Delete SimpleName: exctx(609)", "Delete SimpleName: getAppLog(610)", "Delete MethodInvocation(611)", "Delete InfixExpression: !=(630)", "Delete InfixExpression: !=(769)", "Delete SimpleName: delayString(785)", "Delete VariableDeclarationFragment(789)", "Delete VariableDeclarationStatement(790)", "Delete InfixExpression: !=(812)", "Delete SimpleName: warn(845)", "Delete InfixExpression: +(849)", "Delete MethodInvocation(850)", "Delete ExpressionStatement(851)"]}}], "commit_stats": [{"total_files": 18, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}