{"application": "apache-phoenix", "csha": "11a76b297fad46cd7f51019810ba4d1a7b51b418", "files": [{"ProductMetricsIT_cluster": {"actions": [{"root": "UPDATE from parseDateTime to parseDate", "operations": ["UPD SimpleName: parseDateTime from parseDateTime to parseDate"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.text.Format", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.text.ParseException", "DEL ImportDeclaration"]}]}}, {"ProductMetricsIT_diff": {"operations": ["Update SimpleName: parseDateTime(331) to parseDate", "Delete QualifiedName: java.text.Format(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: java.text.ParseException(30)", "Delete ImportDeclaration(31)"]}}, {"ToDateFunctionIT_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 2", "MOV ImportDeclaration to CompilationUnit at 3", "MOV ImportDeclaration to CompilationUnit at 7", "MOV ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS QualifiedName: java.sql.Timestamp to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 11"]}, {"root": "UPDATE from org.apache.phoenix.util.DateUtil to java.sql.Time", "operations": ["UPD QualifiedName: org.apache.phoenix.util.DateUtil from org.apache.phoenix.util.DateUtil to java.sql.Time"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS CastExpression to ReturnStatement at 0", "INS SimpleName: Time to SimpleType: Time at 0", "INS SimpleType: Time to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Block to MethodDeclaration at 5", "INS SimpleName: Time to SimpleType: Time at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: conn to MethodInvocation at 1", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleType: SQLException to MethodDeclaration at 4", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: invocation to MethodInvocation at 2", "INS SimpleName: callToTimeFunction to MethodDeclaration at 2", "INS MethodInvocation to CastExpression at 1", "INS SimpleType: Time to CastExpression at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: invocation to SingleVariableDeclaration at 1", "INS SimpleName: callToDateFunction to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 9"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleType: SQLException to MethodDeclaration at 4", "INS SimpleType: Timestamp to MethodDeclaration at 1", "INS SimpleName: invocation to SingleVariableDeclaration at 1", "INS SimpleType: Timestamp to CastExpression at 0", "INS SimpleName: callToTimestampFunction to MethodDeclaration at 2", "INS CastExpression to ReturnStatement at 0", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleName: callToDateFunction to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: invocation to MethodInvocation at 2", "INS SimpleName: Timestamp to SimpleType: Timestamp at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ReturnStatement to Block at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: conn to MethodInvocation at 1", "INS SimpleName: Timestamp to SimpleType: Timestamp at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS StringLiteral: \"TO_TIME('2015-01-27T16:17:57Z')\" to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getTime to MethodInvocation at 1", "INS CatchClause to TryStatement at 1", "INS NumberLiteral: 0L to MethodInvocation at 1", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 3", "INS SimpleName: callToTimeFunction to MethodInvocation at 0", "INS ExpressionStatement to Block at 3", "INS StringLiteral: \"TO_TIME('1970-01-01 00:00:00.000')\" to MethodInvocation at 1", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS SimpleName: callToTimeFunction to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS SimpleType: SQLException to MethodDeclaration at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS TryStatement to Block at 4", "INS StringLiteral: \"TO_TIME('1970-01-01 00:00:00')\" to MethodInvocation at 1", "INS NumberLiteral: 0L to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS StringLiteral: \"TO_TIME('2015-01-27T16:17:57+00:00')\" to MethodInvocation at 1", "INS SimpleName: Test to MarkerAnnotation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"TO_TIME Parse ISO8601 Time Failed due to:\" to InfixExpression: + at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getTime to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS NumberLiteral: 0L to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: callToTimeFunction to MethodInvocation at 0", "INS StringLiteral: \"TO_TIME('2015-W05')\" to MethodInvocation at 1", "INS NumberLiteral: 0L to MethodInvocation at 1", "INS InfixExpression: + to MethodInvocation at 1", "INS SimpleName: testToTime_Default to MethodDeclaration at 3", "INS SimpleName: callToTimeFunction to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS ExpressionStatement to Block at 1", "INS Block to TryStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: fail to MethodInvocation at 0", "INS SimpleName: callToTimeFunction to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: callToTimeFunction to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS StringLiteral: \"TO_TIME('2015-W05-2')\" to MethodInvocation at 1", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getTime to MethodInvocation at 1", "INS StringLiteral: \"TO_TIME('1970/01/01','yyyy/MM/dd')\" to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: callToTimeFunction to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getTime to MethodInvocation at 1", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS StringLiteral: \"TO_TIME('1970-01-01')\" to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ex to InfixExpression: + at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: callToTimeFunction to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleName: assertEquals to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getTime to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"TO_TIMESTAMP Parse ISO8601 Time Failed due to:\" to InfixExpression: + at 0", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"TO_TIMESTAMP('2015-01-27T16:17:57Z')\" to MethodInvocation at 1", "INS NumberLiteral: 0L to MethodInvocation at 1", "INS StringLiteral: \"TO_TIMESTAMP('2015-W05')\" to MethodInvocation at 1", "INS SimpleName: callToTimestampFunction to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS TryStatement to Block at 4", "INS SimpleName: callToTimestampFunction to MethodInvocation at 0", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: callToTimestampFunction to MethodInvocation at 0", "INS SimpleName: fail to MethodInvocation at 0", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS StringLiteral: \"TO_TIMESTAMP('2015-01-27T16:17:57+00:00')\" to MethodInvocation at 1", "INS StringLiteral: \"TO_TIMESTAMP('1970/01/01','yyyy/MM/dd')\" to MethodInvocation at 1", "INS SimpleName: callToTimestampFunction to MethodInvocation at 0", "INS StringLiteral: \"TO_TIMESTAMP('1970-01-01 00:00:00.000')\" to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Test to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: getTime to MethodInvocation at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Block to TryStatement at 0", "INS SimpleName: callToTimestampFunction to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: SQLException to MethodDeclaration at 4", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: testToTimestamp_Default to MethodDeclaration at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to MethodInvocation at 2", "INS StringLiteral: \"TO_TIMESTAMP('1970-01-01 00:00:00')\" to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: callToTimestampFunction to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS SimpleName: getTime to MethodInvocation at 1", "INS StringLiteral: \"TO_TIMESTAMP('1970-01-01')\" to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: callToTimestampFunction to MethodInvocation at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS StringLiteral: \"TO_TIMESTAMP('2015-W05-2')\" to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: callToTimestampFunction to MethodInvocation at 0", "INS NumberLiteral: 0L to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: getTime to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS ExpressionStatement to Block at 2", "INS NumberLiteral: 0L to MethodInvocation at 1", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 1", "INS NumberLiteral: 0L to MethodInvocation at 1", "INS CatchClause to TryStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ex to InfixExpression: + at 1"]}, {"root": "UPDATE from Date to java.util.Date", "operations": ["UPD SimpleType: Date from Date to java.util.Date"]}, {"root": "INS QualifiedName: java.util.Date to SimpleType: Date at 0", "operations": ["INS QualifiedName: java.util.Date to SimpleType: Date at 0"]}, {"root": "INS SimpleType: java.util.Date to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: java.util.Date to VariableDeclarationStatement at 0", "INS QualifiedName: java.util.Date to SimpleType: java.util.Date at 0"]}, {"root": "INS CastExpression to ReturnStatement at 0", "operations": ["INS CastExpression to ReturnStatement at 0"]}, {"root": "INS CastExpression to VariableDeclarationFragment at 1", "operations": ["INS QualifiedName: java.util.Date to SimpleType: java.util.Date at 0", "INS SimpleType: java.util.Date to CastExpression at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS MethodInvocation to CastExpression at 1"]}, {"root": "MOVE from CastExpression", "operations": ["MOV SimpleType: Date to CastExpression at 0"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1"]}, {"root": "UPDATE from \"SELECT %s FROM SYSTEM.CATALOG\" to \"SELECT %s FROM SYSTEM.CATALOG LIMIT 1\"", "operations": ["UPD StringLiteral: \"SELECT %s FROM SYSTEM.CATALOG\" from \"SELECT %s FROM SYSTEM.CATALOG\" to \"SELECT %s FROM SYSTEM.CATALOG LIMIT 1\""]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV NumberLiteral: 1 to MethodInvocation at 2", "MOV SimpleName: rs to MethodInvocation at 0", "MOV SimpleName: getDate to MethodInvocation at 1"]}, {"root": "UPDATE from getDate to getObject", "operations": ["UPD SimpleName: getDate from getDate to getObject"]}, {"root": "UPDATE from \"TO_DATE('1970-01-01 00:00:00')\" to \"TO_DATE('1970-01-01 00:00:00.000')\"", "operations": ["UPD StringLiteral: \"TO_DATE('1970-01-01 00:00:00')\" from \"TO_DATE('1970-01-01 00:00:00')\" to \"TO_DATE('1970-01-01 00:00:00.000')\""]}, {"root": "DEL SimpleName: Date", "operations": ["DEL SimpleName: Date"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}]}}, {"ToDateFunctionIT_diff": {"operations": ["Move ImportDeclaration(19) into CompilationUnit(583) at 7", "Move ImportDeclaration(27) into CompilationUnit(583) at 1", "Move ImportDeclaration(29) into CompilationUnit(583) at 2", "Move ImportDeclaration(31) into CompilationUnit(583) at 3", "Insert ImportDeclaration(23) into CompilationUnit(583) at 11", "Update QualifiedName: org.apache.phoenix.util.DateUtil(18) to java.sql.Time", "Insert QualifiedName: java.sql.Timestamp(22) into ImportDeclaration(23) at 0", "Insert MethodDeclaration(190) into TypeDeclaration: class(582) at 9", "Insert MethodDeclaration(210) into TypeDeclaration: class(582) at 10", "Insert MethodDeclaration(360) into TypeDeclaration: class(582) at 12", "Insert MethodDeclaration(435) into TypeDeclaration: class(582) at 13", "Update SimpleType: Date(86) to java.util.Date", "Insert Modifier: private(171) into MethodDeclaration(190) at 0", "Insert SimpleType: Time(173) into MethodDeclaration(190) at 1", "Insert SimpleName: callToTimeFunction(174) into MethodDeclaration(190) at 2", "Insert SingleVariableDeclaration(178) into MethodDeclaration(190) at 3", "Insert SimpleType: SQLException(180) into MethodDeclaration(190) at 4", "Insert Block(189) into MethodDeclaration(190) at 5", "Insert Modifier: private(191) into MethodDeclaration(210) at 0", "Insert SimpleType: Timestamp(193) into MethodDeclaration(210) at 1", "Insert SimpleName: callToTimestampFunction(194) into MethodDeclaration(210) at 2", "Insert SingleVariableDeclaration(198) into MethodDeclaration(210) at 3", "Insert SimpleType: SQLException(200) into MethodDeclaration(210) at 4", "Insert Block(209) into MethodDeclaration(210) at 5", "Insert MarkerAnnotation(287) into MethodDeclaration(360) at 0", "Insert Modifier: public(288) into MethodDeclaration(360) at 1", "Insert PrimitiveType: void(289) into MethodDeclaration(360) at 2", "Insert SimpleName: testToTime_Default(290) into MethodDeclaration(360) at 3", "Insert SimpleType: SQLException(292) into MethodDeclaration(360) at 4", "Insert Block(359) into MethodDeclaration(360) at 5", "Insert MarkerAnnotation(362) into MethodDeclaration(435) at 0", "Insert Modifier: public(363) into MethodDeclaration(435) at 1", "Insert PrimitiveType: void(364) into MethodDeclaration(435) at 2", "Insert SimpleName: testToTimestamp_Default(365) into MethodDeclaration(435) at 3", "Insert SimpleType: SQLException(367) into MethodDeclaration(435) at 4", "Insert Block(434) into MethodDeclaration(435) at 5", "Insert QualifiedName: java.util.Date(87) into SimpleType: java.util.Date(88) at 0", "Insert SimpleName: Time(172) into SimpleType: Time(173) at 0", "Insert SimpleType: String(176) into SingleVariableDeclaration(178) at 0", "Insert SimpleName: invocation(177) into SingleVariableDeclaration(178) at 1", "Insert SimpleName: SQLException(179) into SimpleType: SQLException(180) at 0", "Insert ReturnStatement(188) into Block(189) at 0", "Insert SimpleName: Timestamp(192) into SimpleType: Timestamp(193) at 0", "Insert SimpleType: String(196) into SingleVariableDeclaration(198) at 0", "Insert SimpleName: invocation(197) into SingleVariableDeclaration(198) at 1", "Insert SimpleName: SQLException(199) into SimpleType: SQLException(200) at 0", "Insert ReturnStatement(208) into Block(209) at 0", "Insert SimpleName: Test(286) into MarkerAnnotation(287) at 0", "Insert SimpleName: SQLException(291) into SimpleType: SQLException(292) at 0", "Insert ExpressionStatement(301) into Block(359) at 0", "Insert ExpressionStatement(310) into Block(359) at 1", "Insert ExpressionStatement(319) into Block(359) at 2", "Insert ExpressionStatement(328) into Block(359) at 3", "Insert TryStatement(358) into Block(359) at 4", "Insert SimpleName: Test(361) into MarkerAnnotation(362) at 0", "Insert SimpleName: SQLException(366) into SimpleType: SQLException(367) at 0", "Insert ExpressionStatement(376) into Block(434) at 0", "Insert ExpressionStatement(385) into Block(434) at 1", "Insert ExpressionStatement(394) into Block(434) at 2", "Insert ExpressionStatement(403) into Block(434) at 3", "Insert TryStatement(433) into Block(434) at 4", "Insert SimpleType: java.util.Date(128) into VariableDeclarationStatement(138) at 0", "Insert CastExpression(167) into ReturnStatement(168) at 0", "Insert SimpleName: String(175) into SimpleType: String(176) at 0", "Insert CastExpression(187) into ReturnStatement(188) at 0", "Insert SimpleName: String(195) into SimpleType: String(196) at 0", "Insert CastExpression(207) into ReturnStatement(208) at 0", "Insert MethodInvocation(300) into ExpressionStatement(301) at 0", "Insert MethodInvocation(309) into ExpressionStatement(310) at 0", "Insert MethodInvocation(318) into ExpressionStatement(319) at 0", "Insert MethodInvocation(327) into ExpressionStatement(328) at 0", "Insert Block(345) into TryStatement(358) at 0", "Insert CatchClause(357) into TryStatement(358) at 1", "Insert MethodInvocation(375) into ExpressionStatement(376) at 0", "Insert MethodInvocation(384) into ExpressionStatement(385) at 0", "Insert MethodInvocation(393) into ExpressionStatement(394) at 0", "Insert MethodInvocation(402) into ExpressionStatement(403) at 0", "Insert Block(420) into TryStatement(433) at 0", "Insert CatchClause(432) into TryStatement(433) at 1", "Insert QualifiedName: java.util.Date(127) into SimpleType: java.util.Date(128) at 0", "Insert CastExpression(136) into VariableDeclarationFragment(137) at 1", "Move SimpleType: Date(126) into CastExpression(167) at 0", "Move MethodInvocation(159) into CastExpression(167) at 1", "Insert SimpleType: Time(182) into CastExpression(187) at 0", "Insert MethodInvocation(186) into CastExpression(187) at 1", "Insert SimpleType: Timestamp(202) into CastExpression(207) at 0", "Insert MethodInvocation(206) into CastExpression(207) at 1", "Insert SimpleName: assertEquals(293) into MethodInvocation(300) at 0", "Insert NumberLiteral: 0L(294) into MethodInvocation(300) at 1", "Insert MethodInvocation(299) into MethodInvocation(300) at 2", "Insert SimpleName: assertEquals(302) into MethodInvocation(309) at 0", "Insert NumberLiteral: 0L(303) into MethodInvocation(309) at 1", "Insert MethodInvocation(308) into MethodInvocation(309) at 2", "Insert SimpleName: assertEquals(311) into MethodInvocation(318) at 0", "Insert NumberLiteral: 0L(312) into MethodInvocation(318) at 1", "Insert MethodInvocation(317) into MethodInvocation(318) at 2", "Insert SimpleName: assertEquals(320) into MethodInvocation(327) at 0", "Insert NumberLiteral: 0L(321) into MethodInvocation(327) at 1", "Insert MethodInvocation(326) into MethodInvocation(327) at 2", "Insert ExpressionStatement(332) into Block(345) at 0", "Insert ExpressionStatement(336) into Block(345) at 1", "Insert ExpressionStatement(340) into Block(345) at 2", "Insert ExpressionStatement(344) into Block(345) at 3", "Insert SingleVariableDeclaration(349) into CatchClause(357) at 0", "Insert Block(356) into CatchClause(357) at 1", "Insert SimpleName: assertEquals(368) into MethodInvocation(375) at 0", "Insert NumberLiteral: 0L(369) into MethodInvocation(375) at 1", "Insert MethodInvocation(374) into MethodInvocation(375) at 2", "Insert SimpleName: assertEquals(377) into MethodInvocation(384) at 0", "Insert NumberLiteral: 0L(378) into MethodInvocation(384) at 1", "Insert MethodInvocation(383) into MethodInvocation(384) at 2", "Insert SimpleName: assertEquals(386) into MethodInvocation(393) at 0", "Insert NumberLiteral: 0L(387) into MethodInvocation(393) at 1", "Insert MethodInvocation(392) into MethodInvocation(393) at 2", "Insert SimpleName: assertEquals(395) into MethodInvocation(402) at 0", "Insert NumberLiteral: 0L(396) into MethodInvocation(402) at 1", "Insert MethodInvocation(401) into MethodInvocation(402) at 2", "Insert ExpressionStatement(407) into Block(420) at 0", "Insert ExpressionStatement(411) into Block(420) at 1", "Insert ExpressionStatement(415) into Block(420) at 2", "Insert ExpressionStatement(419) into Block(420) at 3", "Insert SingleVariableDeclaration(424) into CatchClause(432) at 0", "Insert Block(431) into CatchClause(432) at 1", "Insert SimpleType: java.util.Date(131) into CastExpression(136) at 0", "Insert MethodInvocation(135) into CastExpression(136) at 1", "Insert SimpleName: Time(181) into SimpleType: Time(182) at 0", "Insert SimpleName: callToDateFunction(183) into MethodInvocation(186) at 0", "Insert SimpleName: conn(184) into MethodInvocation(186) at 1", "Insert SimpleName: invocation(185) into MethodInvocation(186) at 2", "Insert SimpleName: Timestamp(201) into SimpleType: Timestamp(202) at 0", "Insert SimpleName: callToDateFunction(203) into MethodInvocation(206) at 0", "Insert SimpleName: conn(204) into MethodInvocation(206) at 1", "Insert SimpleName: invocation(205) into MethodInvocation(206) at 2", "Insert MethodInvocation(297) into MethodInvocation(299) at 0", "Insert SimpleName: getTime(298) into MethodInvocation(299) at 1", "Insert MethodInvocation(306) into MethodInvocation(308) at 0", "Insert SimpleName: getTime(307) into MethodInvocation(308) at 1", "Insert MethodInvocation(315) into MethodInvocation(317) at 0", "Insert SimpleName: getTime(316) into MethodInvocation(317) at 1", "Insert MethodInvocation(324) into MethodInvocation(326) at 0", "Insert SimpleName: getTime(325) into MethodInvocation(326) at 1", "Insert MethodInvocation(331) into ExpressionStatement(332) at 0", "Insert MethodInvocation(335) into ExpressionStatement(336) at 0", "Insert MethodInvocation(339) into ExpressionStatement(340) at 0", "Insert MethodInvocation(343) into ExpressionStatement(344) at 0", "Insert SimpleType: Exception(347) into SingleVariableDeclaration(349) at 0", "Insert SimpleName: ex(348) into SingleVariableDeclaration(349) at 1", "Insert ExpressionStatement(355) into Block(356) at 0", "Insert MethodInvocation(372) into MethodInvocation(374) at 0", "Insert SimpleName: getTime(373) into MethodInvocation(374) at 1", "Insert MethodInvocation(381) into MethodInvocation(383) at 0", "Insert SimpleName: getTime(382) into MethodInvocation(383) at 1", "Insert MethodInvocation(390) into MethodInvocation(392) at 0", "Insert SimpleName: getTime(391) into MethodInvocation(392) at 1", "Insert MethodInvocation(399) into MethodInvocation(401) at 0", "Insert SimpleName: getTime(400) into MethodInvocation(401) at 1", "Insert MethodInvocation(406) into ExpressionStatement(407) at 0", "Insert MethodInvocation(410) into ExpressionStatement(411) at 0", "Insert MethodInvocation(414) into ExpressionStatement(415) at 0", "Insert MethodInvocation(418) into ExpressionStatement(419) at 0", "Insert SimpleType: Exception(422) into SingleVariableDeclaration(424) at 0", "Insert SimpleName: ex(423) into SingleVariableDeclaration(424) at 1", "Insert ExpressionStatement(430) into Block(431) at 0", "Update StringLiteral: \"SELECT %s FROM SYSTEM.CATALOG\"(113) to \"SELECT %s FROM SYSTEM.CATALOG LIMIT 1\"", "Insert QualifiedName: java.util.Date(130) into SimpleType: java.util.Date(131) at 0", "Move SimpleName: rs(128) into MethodInvocation(135) at 0", "Update SimpleName: getDate(129) to getObject", "Move SimpleName: getDate(129) into MethodInvocation(135) at 1", "Move NumberLiteral: 1(130) into MethodInvocation(135) at 2", "Insert SimpleName: callToTimeFunction(295) into MethodInvocation(297) at 0", "Insert StringLiteral: \"TO_TIME('1970-01-01 00:00:00')\"(296) into MethodInvocation(297) at 1", "Insert SimpleName: callToTimeFunction(304) into MethodInvocation(306) at 0", "Insert StringLiteral: \"TO_TIME('1970-01-01 00:00:00.000')\"(305) into MethodInvocation(306) at 1", "Insert SimpleName: callToTimeFunction(313) into MethodInvocation(315) at 0", "Insert StringLiteral: \"TO_TIME('1970-01-01')\"(314) into MethodInvocation(315) at 1", "Insert SimpleName: callToTimeFunction(322) into MethodInvocation(324) at 0", "Insert StringLiteral: \"TO_TIME('1970/01/01','yyyy/MM/dd')\"(323) into MethodInvocation(324) at 1", "Insert SimpleName: callToTimeFunction(329) into MethodInvocation(331) at 0", "Insert StringLiteral: \"TO_TIME('2015-01-27T16:17:57+00:00')\"(330) into MethodInvocation(331) at 1", "Insert SimpleName: callToTimeFunction(333) into MethodInvocation(335) at 0", "Insert StringLiteral: \"TO_TIME('2015-01-27T16:17:57Z')\"(334) into MethodInvocation(335) at 1", "Insert SimpleName: callToTimeFunction(337) into MethodInvocation(339) at 0", "Insert StringLiteral: \"TO_TIME('2015-W05')\"(338) into MethodInvocation(339) at 1", "Insert SimpleName: callToTimeFunction(341) into MethodInvocation(343) at 0", "Insert StringLiteral: \"TO_TIME('2015-W05-2')\"(342) into MethodInvocation(343) at 1", "Insert SimpleName: Exception(346) into SimpleType: Exception(347) at 0", "Insert MethodInvocation(354) into ExpressionStatement(355) at 0", "Insert SimpleName: callToTimestampFunction(370) into MethodInvocation(372) at 0", "Insert StringLiteral: \"TO_TIMESTAMP('1970-01-01 00:00:00')\"(371) into MethodInvocation(372) at 1", "Insert SimpleName: callToTimestampFunction(379) into MethodInvocation(381) at 0", "Insert StringLiteral: \"TO_TIMESTAMP('1970-01-01 00:00:00.000')\"(380) into MethodInvocation(381) at 1", "Insert SimpleName: callToTimestampFunction(388) into MethodInvocation(390) at 0", "Insert StringLiteral: \"TO_TIMESTAMP('1970-01-01')\"(389) into MethodInvocation(390) at 1", "Insert SimpleName: callToTimestampFunction(397) into MethodInvocation(399) at 0", "Insert StringLiteral: \"TO_TIMESTAMP('1970/01/01','yyyy/MM/dd')\"(398) into MethodInvocation(399) at 1", "Insert SimpleName: callToTimestampFunction(404) into MethodInvocation(406) at 0", "Insert StringLiteral: \"TO_TIMESTAMP('2015-01-27T16:17:57+00:00')\"(405) into MethodInvocation(406) at 1", "Insert SimpleName: callToTimestampFunction(408) into MethodInvocation(410) at 0", "Insert StringLiteral: \"TO_TIMESTAMP('2015-01-27T16:17:57Z')\"(409) into MethodInvocation(410) at 1", "Insert SimpleName: callToTimestampFunction(412) into MethodInvocation(414) at 0", "Insert StringLiteral: \"TO_TIMESTAMP('2015-W05')\"(413) into MethodInvocation(414) at 1", "Insert SimpleName: callToTimestampFunction(416) into MethodInvocation(418) at 0", "Insert StringLiteral: \"TO_TIMESTAMP('2015-W05-2')\"(417) into MethodInvocation(418) at 1", "Insert SimpleName: Exception(421) into SimpleType: Exception(422) at 0", "Insert MethodInvocation(429) into ExpressionStatement(430) at 0", "Update StringLiteral: \"TO_DATE('1970-01-01 00:00:00')\"(331) to \"TO_DATE('1970-01-01 00:00:00.000')\"", "Insert SimpleName: fail(350) into MethodInvocation(354) at 0", "Insert InfixExpression: +(353) into MethodInvocation(354) at 1", "Insert SimpleName: fail(425) into MethodInvocation(429) at 0", "Insert InfixExpression: +(428) into MethodInvocation(429) at 1", "Insert StringLiteral: \"TO_TIME Parse ISO8601 Time Failed due to:\"(351) into InfixExpression: +(353) at 0", "Insert SimpleName: ex(352) into InfixExpression: +(353) at 1", "Insert StringLiteral: \"TO_TIMESTAMP Parse ISO8601 Time Failed due to:\"(426) into InfixExpression: +(428) at 0", "Insert SimpleName: ex(427) into InfixExpression: +(428) at 1", "Delete SimpleName: Date(85)", "Delete MethodInvocation(131)"]}}, {"TruncateFunctionIT_cluster": {"actions": [{"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0"]}, {"root": "UPDATE from parseDateTime to parseDate", "operations": ["UPD SimpleName: parseDateTime from parseDateTime to parseDate"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: s to MethodInvocation at 2", "MOV SimpleName: parseDateTime to MethodInvocation at 1", "MOV SimpleName: DateUtil to MethodInvocation at 0"]}, {"root": "UPDATE from parseDateTime to parseTimestamp", "operations": ["UPD SimpleName: parseDateTime from parseDateTime to parseTimestamp"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.text.Format"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: Timestamp", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL SimpleName: getTime", "DEL SimpleName: Timestamp"]}]}}, {"TruncateFunctionIT_diff": {"operations": ["Insert MethodInvocation(103) into ReturnStatement(104) at 0", "Update SimpleName: parseDateTime(85) to parseDate", "Move SimpleName: DateUtil(104) into MethodInvocation(103) at 0", "Update SimpleName: parseDateTime(105) to parseTimestamp", "Move SimpleName: parseDateTime(105) into MethodInvocation(103) at 1", "Move SimpleName: s(106) into MethodInvocation(103) at 2", "Delete QualifiedName: java.text.Format(30)", "Delete ImportDeclaration(31)", "Delete SimpleName: Timestamp(102)", "Delete SimpleType: Timestamp(103)", "Delete MethodInvocation(107)", "Delete ParenthesizedExpression(108)", "Delete SimpleName: getTime(109)", "Delete MethodInvocation(110)", "Delete ClassInstanceCreation(111)"]}}, {"UpsertValuesIT_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 18"]}, {"root": "UPDATE from \"2013-06-08 00:00:00\" to \"2013-06-08 00:00:00.000\"", "operations": ["UPD StringLiteral: \"2013-06-08 00:00:00\" from \"2013-06-08 00:00:00\" to \"2013-06-08 00:00:00.000\""]}, {"root": "UPDATE from parseDateTime to parseDate", "operations": ["UPD SimpleName: parseDateTime from parseDateTime to parseDate"]}]}}, {"UpsertValuesIT_diff": {"operations": ["Move ImportDeclaration(33) into CompilationUnit(3471) at 18", "Update StringLiteral: \"2013-06-08 00:00:00\"(786) to \"2013-06-08 00:00:00.000\"", "Update SimpleName: parseDateTime(2984) to parseDate"]}}, {"VariableLengthPKIT_cluster": {"actions": [{"root": "UPDATE from parseDateTime to parseDate", "operations": ["UPD SimpleName: parseDateTime from parseDateTime to parseDate"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.text.ParseException"]}]}}, {"VariableLengthPKIT_diff": {"operations": ["Update SimpleName: parseDateTime(92) to parseDate", "Delete QualifiedName: java.text.ParseException(42)", "Delete ImportDeclaration(43)"]}}, {"CsvBulkLoadToolIT_cluster": {"actions": [{"root": "UPDATE from parseDateTime to parseDate", "operations": ["UPD SimpleName: parseDateTime from parseDateTime to parseDate", "UPD SimpleName: parseDateTime from parseDateTime to parseDate"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.phoenix.query.BaseTest.setUpConfigForMiniCluster"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.junit.Assert.assertArrayEquals", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.junit.Assert.assertEquals", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.junit.Assert.assertFalse", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.junit.Assert.assertTrue", "DEL ImportDeclaration"]}]}}, {"CsvBulkLoadToolIT_diff": {"operations": ["Update SimpleName: parseDateTime(345) to parseDate", "Update SimpleName: parseDateTime(378) to parseDate", "Delete QualifiedName: org.apache.phoenix.query.BaseTest.setUpConfigForMiniCluster(50)", "Delete ImportDeclaration(51)", "Delete QualifiedName: org.junit.Assert.assertArrayEquals(52)", "Delete ImportDeclaration(53)", "Delete QualifiedName: org.junit.Assert.assertEquals(54)", "Delete ImportDeclaration(55)", "Delete QualifiedName: org.junit.Assert.assertFalse(56)", "Delete ImportDeclaration(57)", "Delete QualifiedName: org.junit.Assert.assertTrue(58)", "Delete ImportDeclaration(59)"]}}, {"StatementContext_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 11"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 10", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 10", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleType: String to FieldDeclaration at 2", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: timeFormat to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 11", "INS SimpleName: timeFormatter to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: Format to FieldDeclaration at 2", "INS SimpleName: Format to SimpleType: Format at 0", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 12", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: timestampFormat to VariableDeclarationFragment at 0", "INS SimpleType: String to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 12", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 13", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 13", "INS SimpleType: Format to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: Format to SimpleType: Format at 0", "INS SimpleName: timestampFormatter to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 36", "operations": ["INS Block to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodDeclaration to TypeDeclaration: class at 36", "INS SimpleName: getTimeFormat to MethodDeclaration at 2", "INS SimpleName: timeFormat to ReturnStatement at 0", "INS SimpleType: String to MethodDeclaration at 1", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 37", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 37", "INS SimpleName: timeFormatter to ReturnStatement at 0", "INS SimpleType: Format to MethodDeclaration at 1", "INS SimpleName: Format to SimpleType: Format at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: getTimeFormatter to MethodDeclaration at 2", "INS Block to MethodDeclaration at 3", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 38", "operations": ["INS SimpleType: String to MethodDeclaration at 1", "INS SimpleName: timestampFormat to ReturnStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: getTimestampFormat to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 38"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 39", "operations": ["INS SimpleName: Format to SimpleType: Format at 0", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: getTimestampFormatter to MethodDeclaration at 2", "INS SimpleName: timestampFormatter to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 39", "INS SimpleType: Format to MethodDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 11"]}, {"root": "INS ExpressionStatement to Block at 10", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: timeFormat to FieldAccess at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: getProps to MethodInvocation at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: getQueryServices to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 10", "INS QualifiedName: QueryServices.TIME_FORMAT_ATTRIB to MethodInvocation at 2", "INS SimpleName: connection to MethodInvocation at 0", "INS FieldAccess to Assignment: = at 0", "INS QualifiedName: DateUtil.DEFAULT_TIME_FORMAT to MethodInvocation at 3"]}, {"root": "INS ExpressionStatement to Block at 11", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: DateUtil to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: timeFormatter to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: getTimeFormatter to MethodInvocation at 1", "INS ExpressionStatement to Block at 11", "INS SimpleName: timeFormat to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 12", "operations": ["INS QualifiedName: QueryServices.TIMESTAMP_FORMAT_ATTRIB to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: getProps to MethodInvocation at 1", "INS SimpleName: timestampFormat to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: getQueryServices to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS QualifiedName: DateUtil.DEFAULT_TIMESTAMP_FORMAT to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0", "INS ExpressionStatement to Block at 12", "INS SimpleName: connection to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 13", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 13", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: getTimestampFormatter to MethodInvocation at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: timestampFormat to MethodInvocation at 2", "INS SimpleName: timestampFormatter to FieldAccess at 1", "INS SimpleName: DateUtil to MethodInvocation at 0"]}]}}, {"StatementContext_diff": {"operations": ["Move FieldDeclaration(105) into TypeDeclaration: class(1034) at 11", "Insert FieldDeclaration(112) into TypeDeclaration: class(1034) at 10", "Insert FieldDeclaration(119) into TypeDeclaration: class(1034) at 11", "Insert FieldDeclaration(126) into TypeDeclaration: class(1034) at 12", "Insert FieldDeclaration(133) into TypeDeclaration: class(1034) at 13", "Insert MethodDeclaration(663) into TypeDeclaration: class(1034) at 36", "Insert MethodDeclaration(671) into TypeDeclaration: class(1034) at 37", "Insert MethodDeclaration(679) into TypeDeclaration: class(1034) at 38", "Insert MethodDeclaration(687) into TypeDeclaration: class(1034) at 39", "Insert Modifier: private(106) into FieldDeclaration(112) at 0", "Insert Modifier: final(107) into FieldDeclaration(112) at 1", "Insert SimpleType: String(109) into FieldDeclaration(112) at 2", "Insert VariableDeclarationFragment(111) into FieldDeclaration(112) at 3", "Insert Modifier: private(113) into FieldDeclaration(119) at 0", "Insert Modifier: final(114) into FieldDeclaration(119) at 1", "Insert SimpleType: Format(116) into FieldDeclaration(119) at 2", "Insert VariableDeclarationFragment(118) into FieldDeclaration(119) at 3", "Insert Modifier: private(120) into FieldDeclaration(126) at 0", "Insert Modifier: final(121) into FieldDeclaration(126) at 1", "Insert SimpleType: String(123) into FieldDeclaration(126) at 2", "Insert VariableDeclarationFragment(125) into FieldDeclaration(126) at 3", "Insert Modifier: private(127) into FieldDeclaration(133) at 0", "Insert Modifier: final(128) into FieldDeclaration(133) at 1", "Insert SimpleType: Format(130) into FieldDeclaration(133) at 2", "Insert VariableDeclarationFragment(132) into FieldDeclaration(133) at 3", "Move ExpressionStatement(370) into Block(554) at 11", "Insert Modifier: public(656) into MethodDeclaration(663) at 0", "Insert SimpleType: String(658) into MethodDeclaration(663) at 1", "Insert SimpleName: getTimeFormat(659) into MethodDeclaration(663) at 2", "Insert Block(662) into MethodDeclaration(663) at 3", "Insert Modifier: public(664) into MethodDeclaration(671) at 0", "Insert SimpleType: Format(666) into MethodDeclaration(671) at 1", "Insert SimpleName: getTimeFormatter(667) into MethodDeclaration(671) at 2", "Insert Block(670) into MethodDeclaration(671) at 3", "Insert Modifier: public(672) into MethodDeclaration(679) at 0", "Insert SimpleType: String(674) into MethodDeclaration(679) at 1", "Insert SimpleName: getTimestampFormat(675) into MethodDeclaration(679) at 2", "Insert Block(678) into MethodDeclaration(679) at 3", "Insert Modifier: public(680) into MethodDeclaration(687) at 0", "Insert SimpleType: Format(682) into MethodDeclaration(687) at 1", "Insert SimpleName: getTimestampFormatter(683) into MethodDeclaration(687) at 2", "Insert Block(686) into MethodDeclaration(687) at 3", "Insert SimpleName: String(108) into SimpleType: String(109) at 0", "Insert SimpleName: timeFormat(110) into VariableDeclarationFragment(111) at 0", "Insert SimpleName: Format(115) into SimpleType: Format(116) at 0", "Insert SimpleName: timeFormatter(117) into VariableDeclarationFragment(118) at 0", "Insert SimpleName: String(122) into SimpleType: String(123) at 0", "Insert SimpleName: timestampFormat(124) into VariableDeclarationFragment(125) at 0", "Insert SimpleName: Format(129) into SimpleType: Format(130) at 0", "Insert SimpleName: timestampFormatter(131) into VariableDeclarationFragment(132) at 0", "Insert ExpressionStatement(404) into Block(554) at 10", "Insert ExpressionStatement(413) into Block(554) at 11", "Insert ExpressionStatement(427) into Block(554) at 12", "Insert ExpressionStatement(436) into Block(554) at 13", "Insert SimpleName: String(657) into SimpleType: String(658) at 0", "Insert ReturnStatement(661) into Block(662) at 0", "Insert SimpleName: Format(665) into SimpleType: Format(666) at 0", "Insert ReturnStatement(669) into Block(670) at 0", "Insert SimpleName: String(673) into SimpleType: String(674) at 0", "Insert ReturnStatement(677) into Block(678) at 0", "Insert SimpleName: Format(681) into SimpleType: Format(682) at 0", "Insert ReturnStatement(685) into Block(686) at 0", "Insert Assignment: =(403) into ExpressionStatement(404) at 0", "Insert Assignment: =(412) into ExpressionStatement(413) at 0", "Insert Assignment: =(426) into ExpressionStatement(427) at 0", "Insert Assignment: =(435) into ExpressionStatement(436) at 0", "Insert SimpleName: timeFormat(660) into ReturnStatement(661) at 0", "Insert SimpleName: timeFormatter(668) into ReturnStatement(669) at 0", "Insert SimpleName: timestampFormat(676) into ReturnStatement(677) at 0", "Insert SimpleName: timestampFormatter(684) into ReturnStatement(685) at 0", "Insert FieldAccess(393) into Assignment: =(403) at 0", "Insert MethodInvocation(402) into Assignment: =(403) at 1", "Insert FieldAccess(407) into Assignment: =(412) at 0", "Insert MethodInvocation(411) into Assignment: =(412) at 1", "Insert FieldAccess(416) into Assignment: =(426) at 0", "Insert MethodInvocation(425) into Assignment: =(426) at 1", "Insert FieldAccess(430) into Assignment: =(435) at 0", "Insert MethodInvocation(434) into Assignment: =(435) at 1", "Insert ThisExpression(391) into FieldAccess(393) at 0", "Insert SimpleName: timeFormat(392) into FieldAccess(393) at 1", "Insert MethodInvocation(398) into MethodInvocation(402) at 0", "Insert SimpleName: get(399) into MethodInvocation(402) at 1", "Insert QualifiedName: QueryServices.TIME_FORMAT_ATTRIB(400) into MethodInvocation(402) at 2", "Insert QualifiedName: DateUtil.DEFAULT_TIME_FORMAT(401) into MethodInvocation(402) at 3", "Insert ThisExpression(405) into FieldAccess(407) at 0", "Insert SimpleName: timeFormatter(406) into FieldAccess(407) at 1", "Insert SimpleName: DateUtil(408) into MethodInvocation(411) at 0", "Insert SimpleName: getTimeFormatter(409) into MethodInvocation(411) at 1", "Insert SimpleName: timeFormat(410) into MethodInvocation(411) at 2", "Insert ThisExpression(414) into FieldAccess(416) at 0", "Insert SimpleName: timestampFormat(415) into FieldAccess(416) at 1", "Insert MethodInvocation(421) into MethodInvocation(425) at 0", "Insert SimpleName: get(422) into MethodInvocation(425) at 1", "Insert QualifiedName: QueryServices.TIMESTAMP_FORMAT_ATTRIB(423) into MethodInvocation(425) at 2", "Insert QualifiedName: DateUtil.DEFAULT_TIMESTAMP_FORMAT(424) into MethodInvocation(425) at 3", "Insert ThisExpression(428) into FieldAccess(430) at 0", "Insert SimpleName: timestampFormatter(429) into FieldAccess(430) at 1", "Insert SimpleName: DateUtil(431) into MethodInvocation(434) at 0", "Insert SimpleName: getTimestampFormatter(432) into MethodInvocation(434) at 1", "Insert SimpleName: timestampFormat(433) into MethodInvocation(434) at 2", "Insert MethodInvocation(396) into MethodInvocation(398) at 0", "Insert SimpleName: getProps(397) into MethodInvocation(398) at 1", "Insert MethodInvocation(419) into MethodInvocation(421) at 0", "Insert SimpleName: getProps(420) into MethodInvocation(421) at 1", "Insert SimpleName: connection(394) into MethodInvocation(396) at 0", "Insert SimpleName: getQueryServices(395) into MethodInvocation(396) at 1", "Insert SimpleName: connection(417) into MethodInvocation(419) at 0", "Insert SimpleName: getQueryServices(418) into MethodInvocation(419) at 1"]}}, {"ExpressionType_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 59", "operations": ["INS ImportDeclaration to CompilationUnit at 59", "INS QualifiedName: org.apache.phoenix.expression.function.ToTimeFunction to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 60", "operations": ["INS ImportDeclaration to CompilationUnit at 60", "INS QualifiedName: org.apache.phoenix.expression.function.ToTimestampFunction to ImportDeclaration at 0"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 96", "operations": ["INS EnumConstantDeclaration to EnumDeclaration at 96", "INS SimpleName: ToTimeFunction to EnumConstantDeclaration at 0", "INS SimpleType: ToTimeFunction to TypeLiteral at 0", "INS SimpleName: ToTimeFunction to SimpleType: ToTimeFunction at 0", "INS TypeLiteral to EnumConstantDeclaration at 1"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 97", "operations": ["INS TypeLiteral to EnumConstantDeclaration at 1", "INS SimpleName: ToTimestampFunction to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 97", "INS SimpleType: ToTimestampFunction to TypeLiteral at 0", "INS SimpleName: ToTimestampFunction to SimpleType: ToTimestampFunction at 0"]}]}}, {"ExpressionType_diff": {"operations": ["Move ImportDeclaration(47) into CompilationUnit(794) at 4", "Insert ImportDeclaration(119) into CompilationUnit(794) at 59", "Insert ImportDeclaration(121) into CompilationUnit(794) at 60", "Insert QualifiedName: org.apache.phoenix.expression.function.ToTimeFunction(118) into ImportDeclaration(119) at 0", "Insert QualifiedName: org.apache.phoenix.expression.function.ToTimestampFunction(120) into ImportDeclaration(121) at 0", "Insert EnumConstantDeclaration(608) into EnumDeclaration(793) at 96", "Insert EnumConstantDeclaration(613) into EnumDeclaration(793) at 97", "Insert SimpleName: ToTimeFunction(604) into EnumConstantDeclaration(608) at 0", "Insert TypeLiteral(607) into EnumConstantDeclaration(608) at 1", "Insert SimpleName: ToTimestampFunction(609) into EnumConstantDeclaration(613) at 0", "Insert TypeLiteral(612) into EnumConstantDeclaration(613) at 1", "Insert SimpleType: ToTimeFunction(606) into TypeLiteral(607) at 0", "Insert SimpleType: ToTimestampFunction(611) into TypeLiteral(612) at 0", "Insert SimpleName: ToTimeFunction(605) into SimpleType: ToTimeFunction(606) at 0", "Insert SimpleName: ToTimestampFunction(610) into SimpleType: ToTimestampFunction(611) at 0"]}}, {"PhoenixConnection_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 18", "operations": ["INS SimpleType: String to FieldDeclaration at 2", "INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS FieldDeclaration to TypeDeclaration: class at 18", "INS SimpleName: timePattern to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 19", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleType: String to FieldDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0", "INS FieldDeclaration to TypeDeclaration: class at 19", "INS SimpleName: timestampPattern to VariableDeclarationFragment at 0"]}, {"root": "INS ExpressionStatement to Block at 9", "operations": ["INS ExpressionStatement to Block at 9", "INS MethodInvocation to MethodInvocation at 0", "INS QualifiedName: DateUtil.DEFAULT_TIME_FORMAT to MethodInvocation at 3", "INS SimpleName: getProps to MethodInvocation at 1", "INS SimpleName: services to FieldAccess at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: timePattern to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 0", "INS QualifiedName: QueryServices.TIME_FORMAT_ATTRIB to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 10", "operations": ["INS ExpressionStatement to Block at 10", "INS QualifiedName: DateUtil.DEFAULT_TIMESTAMP_FORMAT to MethodInvocation at 3", "INS MethodInvocation to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: services to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: getProps to MethodInvocation at 1", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS QualifiedName: QueryServices.TIMESTAMP_FORMAT_ATTRIB to MethodInvocation at 2", "INS SimpleName: timestampPattern to Assignment: = at 0", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 14", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Format to VariableDeclarationStatement at 0", "INS SimpleName: timePattern to MethodInvocation at 2", "INS SimpleName: timeFormat to VariableDeclarationFragment at 0", "INS SimpleName: DateUtil to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 14", "INS SimpleName: Format to SimpleType: Format at 0", "INS SimpleName: getDateFormatter to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 15", "operations": ["INS SimpleName: DateUtil to MethodInvocation at 0", "INS SimpleName: getDateFormatter to MethodInvocation at 1", "INS SimpleType: Format to VariableDeclarationStatement at 0", "INS SimpleName: timestampPattern to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Format to SimpleType: Format at 0", "INS VariableDeclarationStatement to Block at 15", "INS SimpleName: timestampFormat to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from dateTimeFormat to dateFormat", "operations": ["UPD SimpleName: dateTimeFormat from dateTimeFormat to dateFormat", "UPD SimpleName: dateTimeFormat from dateTimeFormat to dateFormat", "UPD SimpleName: dateTimeFormat from dateTimeFormat to dateFormat"]}, {"root": "UPDATE from dateTimeFormat to timeFormat", "operations": ["UPD SimpleName: dateTimeFormat from dateTimeFormat to timeFormat", "UPD SimpleName: dateTimeFormat from dateTimeFormat to timeFormat"]}, {"root": "UPDATE from dateTimeFormat to timestampFormat", "operations": ["UPD SimpleName: dateTimeFormat from dateTimeFormat to timestampFormat", "UPD SimpleName: dateTimeFormat from dateTimeFormat to timestampFormat"]}]}}, {"PhoenixConnection_diff": {"operations": ["Insert FieldDeclaration(285) into TypeDeclaration: class(3033) at 18", "Insert FieldDeclaration(292) into TypeDeclaration: class(3033) at 19", "Insert Modifier: private(279) into FieldDeclaration(285) at 0", "Insert Modifier: final(280) into FieldDeclaration(285) at 1", "Insert SimpleType: String(282) into FieldDeclaration(285) at 2", "Insert VariableDeclarationFragment(284) into FieldDeclaration(285) at 3", "Insert Modifier: private(286) into FieldDeclaration(292) at 0", "Insert Modifier: final(287) into FieldDeclaration(292) at 1", "Insert SimpleType: String(289) into FieldDeclaration(292) at 2", "Insert VariableDeclarationFragment(291) into FieldDeclaration(292) at 3", "Insert SimpleName: String(281) into SimpleType: String(282) at 0", "Insert SimpleName: timePattern(283) into VariableDeclarationFragment(284) at 0", "Insert SimpleName: String(288) into SimpleType: String(289) at 0", "Insert SimpleName: timestampPattern(290) into VariableDeclarationFragment(291) at 0", "Insert ExpressionStatement(767) into Block(968) at 9", "Insert ExpressionStatement(779) into Block(968) at 10", "Insert VariableDeclarationStatement(824) into Block(968) at 14", "Insert VariableDeclarationStatement(833) into Block(968) at 15", "Insert Assignment: =(766) into ExpressionStatement(767) at 0", "Insert Assignment: =(778) into ExpressionStatement(779) at 0", "Insert SimpleType: Format(817) into VariableDeclarationStatement(824) at 0", "Insert VariableDeclarationFragment(823) into VariableDeclarationStatement(824) at 1", "Insert SimpleType: Format(826) into VariableDeclarationStatement(833) at 0", "Insert VariableDeclarationFragment(832) into VariableDeclarationStatement(833) at 1", "Insert SimpleName: timePattern(756) into Assignment: =(766) at 0", "Insert MethodInvocation(765) into Assignment: =(766) at 1", "Insert SimpleName: timestampPattern(768) into Assignment: =(778) at 0", "Insert MethodInvocation(777) into Assignment: =(778) at 1", "Update SimpleName: dateTimeFormat(771) to dateFormat", "Insert SimpleName: Format(816) into SimpleType: Format(817) at 0", "Insert SimpleName: timeFormat(818) into VariableDeclarationFragment(823) at 0", "Insert MethodInvocation(822) into VariableDeclarationFragment(823) at 1", "Insert SimpleName: Format(825) into SimpleType: Format(826) at 0", "Insert SimpleName: timestampFormat(827) into VariableDeclarationFragment(832) at 0", "Insert MethodInvocation(831) into VariableDeclarationFragment(832) at 1", "Update SimpleName: dateTimeFormat(781) to dateFormat", "Update SimpleName: dateTimeFormat(787) to timeFormat", "Update SimpleName: dateTimeFormat(793) to timestampFormat", "Update SimpleName: dateTimeFormat(799) to dateFormat", "Update SimpleName: dateTimeFormat(805) to timeFormat", "Update SimpleName: dateTimeFormat(811) to timestampFormat", "Insert MethodInvocation(761) into MethodInvocation(765) at 0", "Insert SimpleName: get(762) into MethodInvocation(765) at 1", "Insert QualifiedName: QueryServices.TIME_FORMAT_ATTRIB(763) into MethodInvocation(765) at 2", "Insert QualifiedName: DateUtil.DEFAULT_TIME_FORMAT(764) into MethodInvocation(765) at 3", "Insert MethodInvocation(773) into MethodInvocation(777) at 0", "Insert SimpleName: get(774) into MethodInvocation(777) at 1", "Insert QualifiedName: QueryServices.TIMESTAMP_FORMAT_ATTRIB(775) into MethodInvocation(777) at 2", "Insert QualifiedName: DateUtil.DEFAULT_TIMESTAMP_FORMAT(776) into MethodInvocation(777) at 3", "Insert SimpleName: DateUtil(819) into MethodInvocation(822) at 0", "Insert SimpleName: getDateFormatter(820) into MethodInvocation(822) at 1", "Insert SimpleName: timePattern(821) into MethodInvocation(822) at 2", "Insert SimpleName: DateUtil(828) into MethodInvocation(831) at 0", "Insert SimpleName: getDateFormatter(829) into MethodInvocation(831) at 1", "Insert SimpleName: timestampPattern(830) into MethodInvocation(831) at 2", "Insert FieldAccess(759) into MethodInvocation(761) at 0", "Insert SimpleName: getProps(760) into MethodInvocation(761) at 1", "Insert FieldAccess(771) into MethodInvocation(773) at 0", "Insert SimpleName: getProps(772) into MethodInvocation(773) at 1", "Insert ThisExpression(757) into FieldAccess(759) at 0", "Insert SimpleName: services(758) into FieldAccess(759) at 1", "Insert ThisExpression(769) into FieldAccess(771) at 0", "Insert SimpleName: services(770) into FieldAccess(771) at 1"]}}, {"ToDateParseNode_cluster": {"actions": [{"root": "UPDATE from dateParser to timeZoneId", "operations": ["UPD SimpleName: dateParser from dateParser to timeZoneId"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.text.Format"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.TimeZone"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.phoenix.util.DateUtil"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: timeZoneId", "DEL SimpleName: DateUtil", "DEL QualifiedName: DateUtil.DateTimeParser", "DEL SimpleType: DateUtil.DateTimeParser", "DEL SimpleName: dateParser", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: getDateParser", "DEL SimpleName: dateFormat"]}]}}, {"ToDateParseNode_diff": {"operations": ["Update SimpleName: dateParser(142) to timeZoneId", "Delete QualifiedName: java.text.Format(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.util.TimeZone(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: org.apache.phoenix.util.DateUtil(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: DateUtil.DateTimeParser(128)", "Delete SimpleType: DateUtil.DateTimeParser(129)", "Delete SimpleName: dateParser(130)", "Delete SimpleName: DateUtil(131)", "Delete SimpleName: getDateParser(132)", "Delete SimpleName: dateFormat(133)", "Delete SimpleName: timeZoneId(134)", "Delete MethodInvocation(135)", "Delete VariableDeclarationFragment(136)", "Delete VariableDeclarationStatement(137)"]}}, {"QueryServices_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: interface at 22", "operations": ["INS FieldDeclaration to TypeDeclaration: interface at 22", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleType: String to FieldDeclaration at 3", "INS Modifier: public to FieldDeclaration at 0", "INS StringLiteral: \"phoenix.query.timeFormat\" to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: TIME_FORMAT_ATTRIB to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4"]}, {"root": "INS FieldDeclaration to TypeDeclaration: interface at 23", "operations": ["INS Modifier: static to FieldDeclaration at 1", "INS StringLiteral: \"phoenix.query.timestampFormat\" to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS FieldDeclaration to TypeDeclaration: interface at 23", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleType: String to FieldDeclaration at 3", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: TIMESTAMP_FORMAT_ATTRIB to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 2"]}]}}, {"QueryServices_diff": {"operations": ["Insert FieldDeclaration(213) into TypeDeclaration: interface(778) at 22", "Insert FieldDeclaration(222) into TypeDeclaration: interface(778) at 23", "Insert Modifier: public(205) into FieldDeclaration(213) at 0", "Insert Modifier: static(206) into FieldDeclaration(213) at 1", "Insert Modifier: final(207) into FieldDeclaration(213) at 2", "Insert SimpleType: String(209) into FieldDeclaration(213) at 3", "Insert VariableDeclarationFragment(212) into FieldDeclaration(213) at 4", "Insert Modifier: public(214) into FieldDeclaration(222) at 0", "Insert Modifier: static(215) into FieldDeclaration(222) at 1", "Insert Modifier: final(216) into FieldDeclaration(222) at 2", "Insert SimpleType: String(218) into FieldDeclaration(222) at 3", "Insert VariableDeclarationFragment(221) into FieldDeclaration(222) at 4", "Insert SimpleName: String(208) into SimpleType: String(209) at 0", "Insert SimpleName: TIME_FORMAT_ATTRIB(210) into VariableDeclarationFragment(212) at 0", "Insert StringLiteral: \"phoenix.query.timeFormat\"(211) into VariableDeclarationFragment(212) at 1", "Insert SimpleName: String(217) into SimpleType: String(218) at 0", "Insert SimpleName: TIMESTAMP_FORMAT_ATTRIB(219) into VariableDeclarationFragment(221) at 0", "Insert StringLiteral: \"phoenix.query.timestampFormat\"(220) into VariableDeclarationFragment(221) at 1"]}}, {"ToDateFunction_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 5", "MOV ImportDeclaration to CompilationUnit at 15", "MOV ImportDeclaration to CompilationUnit at 13", "MOV ImportDeclaration to CompilationUnit at 10", "MOV ImportDeclaration to CompilationUnit at 13"]}, {"root": "UPDATE from java.io to java.io.DataInput", "operations": ["UPD QualifiedName: java.io from java.io to java.io.DataInput"]}, {"root": "UPDATE from java.text.Format to java.io.DataOutput", "operations": ["UPD QualifiedName: java.text.Format from java.text.Format to java.io.DataOutput"]}, {"root": "UPDATE from java.text.ParseException to java.io.IOException", "operations": ["UPD QualifiedName: java.text.ParseException from java.text.ParseException to java.io.IOException"]}, {"root": "UPDATE from org.apache.commons.lang.StringUtils to org.apache.phoenix.expression.LiteralExpression", "operations": ["UPD QualifiedName: org.apache.commons.lang.StringUtils from org.apache.commons.lang.StringUtils to org.apache.phoenix.expression.LiteralExpression"]}, {"root": "UPDATE from org.apache.phoenix.parse to org.apache.phoenix.parse.ToDateParseNode", "operations": ["UPD QualifiedName: org.apache.phoenix.parse from org.apache.phoenix.parse to org.apache.phoenix.parse.ToDateParseNode"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 8", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: timeZoneId to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: timeZoneId to MethodInvocation at 2", "INS SimpleName: timeZoneId to SingleVariableDeclaration at 1", "INS SimpleName: dateFormat to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: children to SuperConstructorInvocation at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: init to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SuperConstructorInvocation to Block at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS Modifier: private to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: timeZoneId to SingleVariableDeclaration at 1", "INS SimpleName: init to MethodDeclaration at 2", "INS SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS MethodInvocation to CastExpression at 1", "INS ConditionalExpression to ReturnStatement at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS Modifier: private to MethodDeclaration at 0", "INS InfixExpression: < to ConditionalExpression at 0", "INS NullLiteral to ConditionalExpression at 1", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS CastExpression to ConditionalExpression at 2", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to CastExpression at 1", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: getTimeZoneIdArg to MethodDeclaration at 2", "INS SimpleType: String to CastExpression at 0", "INS SimpleName: children to MethodInvocation at 0", "INS Block to MethodDeclaration at 3", "INS MethodInvocation to InfixExpression: < at 0", "INS SimpleType: String to MethodDeclaration at 1", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleType: LiteralExpression to CastExpression at 0", "INS NumberLiteral: 2 to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: getValue to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: LiteralExpression to SimpleType: LiteralExpression at 0", "INS NumberLiteral: 3 to InfixExpression: < at 1", "INS SimpleName: children to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS NumberLiteral: 1 to MethodInvocation at 2", "INS SimpleType: LiteralExpression to CastExpression at 0", "INS SimpleName: getDateFormatArg to MethodDeclaration at 2", "INS InfixExpression: < to ConditionalExpression at 0", "INS ConditionalExpression to ReturnStatement at 0", "INS SimpleName: children to MethodInvocation at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: size to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS SimpleName: getValue to MethodInvocation at 1", "INS SimpleType: String to CastExpression at 0", "INS SimpleType: String to MethodDeclaration at 1", "INS SimpleName: children to MethodInvocation at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: String to SimpleType: String at 0", "INS CastExpression to ConditionalExpression at 2", "INS NumberLiteral: 2 to InfixExpression: < at 1", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to CastExpression at 1", "INS MethodInvocation to InfixExpression: < at 0", "INS NullLiteral to ConditionalExpression at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: LiteralExpression to SimpleType: LiteralExpression at 0", "INS ReturnStatement to Block at 0", "INS CastExpression to ParenthesizedExpression at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV Block to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SimpleType: SQLException to MethodDeclaration at 5", "MOV Modifier: public to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 2", "MOV SimpleName: ToDateFunction to MethodDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: equalsIgnoreCase to MethodInvocation at 1", "INS ExpressionStatement to Block at 4", "INS SimpleName: init to MethodInvocation at 0", "INS QualifiedName: DateUtil.DEFAULT_TIME_ZONE_ID to Assignment: = at 1", "INS SimpleName: timeZoneId to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1", "INS QualifiedName: DateUtil.LOCAL_TIME_ZONE_ID to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS SimpleName: WritableUtils to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: || at 1", "INS SimpleName: input to MethodInvocation at 2", "INS SimpleName: children to MethodInvocation at 0", "INS SimpleName: nChildren to InfixExpression: == at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: timeZoneId to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS NumberLiteral: 1 to InfixExpression: == at 1", "INS Block to IfStatement at 2", "INS SimpleName: nChildren to InfixExpression: == at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: WritableUtils to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS IfStatement to IfStatement at 2", "INS SimpleName: dateFormat to VariableDeclarationFragment at 0", "INS SimpleName: timeZoneId to VariableDeclarationFragment at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS VariableDeclarationStatement to Block at 1", "INS NumberLiteral: 0 to InfixExpression: != at 1", "INS ExpressionStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: readString to MethodInvocation at 1", "INS SimpleName: readString to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: getTimeZoneIdArg to MethodInvocation at 0", "INS SimpleName: getTimeZoneIdArg to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: getDateFormatArg to MethodInvocation at 0", "INS InfixExpression: == to InfixExpression: || at 0", "INS MethodInvocation to Assignment: = at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: dateFormat to Assignment: = at 0", "INS Block to IfStatement at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: length to MethodInvocation at 1", "INS InfixExpression: == to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: dateFormat to MethodInvocation at 1", "INS SimpleName: timeZoneId to Assignment: = at 0", "INS NumberLiteral: 2 to InfixExpression: == at 1", "INS SimpleName: dateFormat to MethodInvocation at 0", "INS SimpleName: nChildren to VariableDeclarationFragment at 0", "INS SimpleName: timeZoneId to Assignment: = at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: || to IfStatement at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: getDateFormatArg to MethodInvocation at 0", "INS SimpleName: dateFormat to Assignment: = at 0", "INS VariableDeclarationStatement to Block at 0", "INS IfStatement to Block at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: input to MethodInvocation at 2"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS IfStatement to Block at 3", "INS SimpleName: nChildren to InfixExpression: == at 0", "INS SimpleName: getTimeZoneIdArg to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS QualifiedName: DateUtil.LOCAL_TIME_ZONE_ID to MethodInvocation at 0", "INS NumberLiteral: 2 to InfixExpression: == at 1", "INS SimpleName: equalsIgnoreCase to MethodInvocation at 1", "INS SimpleName: output to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: nChildren to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: nChildren to InfixExpression: == at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: writeString to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: || at 1", "INS InfixExpression: == to IfStatement at 0", "INS InfixExpression: == to InfixExpression: || at 0", "INS SimpleName: WritableUtils to MethodInvocation at 0", "INS SimpleName: writeString to MethodInvocation at 1", "INS SimpleName: writeString to MethodInvocation at 1", "INS SimpleName: children to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS IfStatement to IfStatement at 2", "INS StringLiteral: \"\" to MethodInvocation at 3", "INS SimpleName: WritableUtils to MethodInvocation at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: timeZoneId to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: output to MethodInvocation at 2", "INS SimpleName: output to MethodInvocation at 2", "INS NumberLiteral: 1 to InfixExpression: == at 1", "INS SimpleName: WritableUtils to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: timeZoneId to MethodInvocation at 3"]}, {"root": "UPDATE from DateUtil.DateTimeParser to String", "operations": ["UPD SimpleType: DateUtil.DateTimeParser from DateUtil.DateTimeParser to String"]}, {"root": "UPDATE from dateParser to dateFormat", "operations": ["UPD SimpleName: dateParser from dateParser to dateFormat", "UPD SimpleName: subList from subList to dateFormat"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getDateTimeParser to MethodInvocation at 1", "INS SimpleName: timeZoneId to MethodInvocation at 4", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: getDataType to MethodInvocation at 0", "INS ExpressionStatement to Block at 2"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS InfixExpression: != to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS Block to IfStatement at 1", "INS SimpleName: dateFormat to InfixExpression: == at 0", "INS IfStatement to Block at 0", "INS IfStatement to Block at 5", "INS InfixExpression: == to IfStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS QualifiedName: other.dateFormat to InfixExpression: != at 0"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS NullLiteral to InfixExpression: == at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS ReturnStatement to IfStatement at 1", "INS QualifiedName: other.timeZoneId to InfixExpression: != at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS Block to IfStatement at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: timeZoneId to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS IfStatement to Block at 6", "INS InfixExpression: == to IfStatement at 0", "INS IfStatement to IfStatement at 2", "INS ReturnStatement to IfStatement at 1", "INS IfStatement to Block at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS QualifiedName: other.timeZoneId to MethodInvocation at 2", "INS SimpleName: timeZoneId to InfixExpression: == at 0", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 5", "operations": ["INS SimpleType: PDataType to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: PDataType to SimpleType: PDataType at 0", "INS SimpleName: returnType to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: returnType to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: byteValue to MethodInvocation at 3", "INS ExpressionStatement to Block at 7", "INS NumberLiteral: 0 to MethodInvocation at 4", "INS SimpleName: encodeLong to MethodInvocation at 1", "INS SimpleName: epochTime to MethodInvocation at 2", "INS SimpleName: getCodec to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS SimpleName: String to SimpleType: DateUtil.DateTimeParser at 0", "operations": ["INS SimpleName: String to SimpleType: DateUtil.DateTimeParser at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "INS PrimitiveType: long to VariableDeclarationStatement at 0", "operations": ["INS PrimitiveType: long to VariableDeclarationStatement at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0"]}, {"root": "INS FieldAccess to Assignment: = at 0", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: timeZoneId to FieldAccess at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: getID to MethodInvocation at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: dateParser to FieldAccess at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getTimeZone to MethodInvocation at 1"]}, {"root": "INS SuperMethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: hashCode to SuperMethodInvocation at 0", "INS SuperMethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from value to epochTime", "operations": ["UPD SimpleName: value from value to epochTime"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1", "MOV SimpleName: toBytes to MethodInvocation at 0", "MOV SimpleName: value to MethodInvocation at 1"]}, {"root": "INS ArrayCreation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to ArrayCreation at 1", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Dimension to ArrayType: byte[] at 1", "INS ArrayType: byte[] to ArrayCreation at 0"]}, {"root": "UPDATE from children to DateUtil", "operations": ["UPD SimpleName: children from children to DateUtil"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: subList to MethodInvocation at 2", "MOV SimpleName: children to MethodInvocation at 0"]}, {"root": "INS ParenthesizedExpression to InfixExpression: + at 1", "operations": ["INS SimpleName: dateFormat to InfixExpression: == at 0", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS NullLiteral to InfixExpression: == at 1", "INS ParenthesizedExpression to InfixExpression: + at 1", "INS InfixExpression: == to ParenthesizedExpression at 0", "INS NumberLiteral: 0 to ConditionalExpression at 1", "INS ConditionalExpression to ParenthesizedExpression at 0"]}, {"root": "INS ParenthesizedExpression to InfixExpression: + at 1", "operations": ["INS NumberLiteral: 0 to ConditionalExpression at 1", "INS ConditionalExpression to ParenthesizedExpression at 0", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS SimpleName: timeZoneId to InfixExpression: == at 0", "INS ParenthesizedExpression to InfixExpression: + at 1", "INS MethodInvocation to ConditionalExpression at 2", "INS InfixExpression: == to ParenthesizedExpression at 0", "INS NullLiteral to InfixExpression: == at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV ReturnStatement to IfStatement at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getChildren to MethodInvocation at 1", "INS ThisExpression to MethodInvocation at 0"]}, {"root": "UPDATE from getExpression to get", "operations": ["UPD SimpleName: getExpression from getExpression to get", "UPD SimpleName: getExpression from getExpression to get"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 2", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getChildren to MethodInvocation at 1"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 3", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 3"]}, {"root": "UPDATE from toBytes to returnType", "operations": ["UPD SimpleName: toBytes from toBytes to returnType"]}, {"root": "UPDATE from value to getByteSize", "operations": ["UPD SimpleName: value from value to getByteSize"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV MethodInvocation to ConditionalExpression at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: other to MethodInvocation at 0"]}, {"root": "UPDATE from getExpression to timeZoneId", "operations": ["UPD SimpleName: getExpression from getExpression to timeZoneId", "UPD SimpleName: dateParser from dateParser to timeZoneId"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getExpression to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: hashCode to MethodInvocation at 1"]}, {"root": "UPDATE from DateUtil to WritableUtils", "operations": ["UPD SimpleName: DateUtil from DateUtil to WritableUtils"]}, {"root": "UPDATE from getDateParser to readString", "operations": ["UPD SimpleName: getDateParser from getDateParser to readString"]}, {"root": "UPDATE from dateFormat to input", "operations": ["UPD SimpleName: dateFormat from dateFormat to input"]}, {"root": "DEL TagElement: @since", "operations": ["DEL TagElement: @since", "DEL TextElement:  0.1"]}, {"root": "DEL QualifiedName: DateUtil.DateTimeParser", "operations": ["DEL QualifiedName: DateUtil.DateTimeParser"]}, {"root": "DEL SuperConstructorInvocation", "operations": ["DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL NumberLiteral: 1", "DEL SuperConstructorInvocation"]}, {"root": "DEL SimpleName: dateParser", "operations": ["DEL SimpleName: dateParser"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration"]}, {"root": "DEL NumberLiteral: 1", "operations": ["DEL NumberLiteral: 1"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL IfStatement", "operations": ["DEL NullLiteral", "DEL SimpleName: obj", "DEL InfixExpression: ==", "DEL IfStatement"]}, {"root": "DEL SimpleType: Object", "operations": ["DEL SimpleType: Object", "DEL SimpleName: Object"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"ToDateFunction_diff": {"operations": ["Move ImportDeclaration(5) into CompilationUnit(724) at 5", "Move ImportDeclaration(13) into CompilationUnit(724) at 10", "Move ImportDeclaration(21) into CompilationUnit(724) at 13", "Move ImportDeclaration(27) into CompilationUnit(724) at 15", "Move ImportDeclaration(33) into CompilationUnit(724) at 13", "Update QualifiedName: java.io(2) to java.io.DataInput", "Update QualifiedName: java.text.Format(6) to java.io.DataOutput", "Update QualifiedName: java.text.ParseException(8) to java.io.IOException", "Update QualifiedName: org.apache.commons.lang.StringUtils(12) to org.apache.phoenix.expression.LiteralExpression", "Update QualifiedName: org.apache.phoenix.parse(20) to org.apache.phoenix.parse.ToDateParseNode", "Insert FieldDeclaration(125) into TypeDeclaration: class(723) at 8", "Insert MethodDeclaration(157) into TypeDeclaration: class(723) at 10", "Insert MethodDeclaration(200) into TypeDeclaration: class(723) at 11", "Insert MethodDeclaration(502) into TypeDeclaration: class(723) at 17", "Insert MethodDeclaration(529) into TypeDeclaration: class(723) at 18", "Insert Modifier: private(120) into FieldDeclaration(125) at 0", "Insert SimpleType: String(122) into FieldDeclaration(125) at 1", "Insert VariableDeclarationFragment(124) into FieldDeclaration(125) at 2", "Move Modifier: public(126) into MethodDeclaration(157) at 0", "Move SimpleName: ToDateFunction(127) into MethodDeclaration(157) at 1", "Move SingleVariableDeclaration(134) into MethodDeclaration(157) at 2", "Move SingleVariableDeclaration(138) into MethodDeclaration(157) at 3", "Insert SingleVariableDeclaration(146) into MethodDeclaration(157) at 4", "Move SimpleType: SQLException(144) into MethodDeclaration(157) at 5", "Insert Block(156) into MethodDeclaration(157) at 6", "Insert Modifier: private(158) into MethodDeclaration(200) at 0", "Insert PrimitiveType: void(159) into MethodDeclaration(200) at 1", "Insert SimpleName: init(160) into MethodDeclaration(200) at 2", "Move SingleVariableDeclaration(142) into MethodDeclaration(200) at 3", "Insert SingleVariableDeclaration(168) into MethodDeclaration(200) at 4", "Move Block(163) into MethodDeclaration(200) at 5", "Insert Modifier: private(476) into MethodDeclaration(502) at 0", "Insert SimpleType: String(478) into MethodDeclaration(502) at 1", "Insert SimpleName: getTimeZoneIdArg(479) into MethodDeclaration(502) at 2", "Insert Block(501) into MethodDeclaration(502) at 3", "Insert Modifier: private(503) into MethodDeclaration(529) at 0", "Insert SimpleType: String(505) into MethodDeclaration(529) at 1", "Insert SimpleName: getDateFormatArg(506) into MethodDeclaration(529) at 2", "Insert Block(528) into MethodDeclaration(529) at 3", "Insert Block(636) into MethodDeclaration(637) at 6", "Insert Block(700) into MethodDeclaration(701) at 6", "Insert SimpleName: String(121) into SimpleType: String(122) at 0", "Insert SimpleName: timeZoneId(123) into VariableDeclarationFragment(124) at 0", "Insert SimpleType: String(144) into SingleVariableDeclaration(146) at 0", "Insert SimpleName: timeZoneId(145) into SingleVariableDeclaration(146) at 1", "Insert SuperConstructorInvocation(150) into Block(156) at 0", "Insert ExpressionStatement(155) into Block(156) at 1", "Update SimpleType: DateUtil.DateTimeParser(140) to String", "Update SimpleName: dateParser(141) to dateFormat", "Insert SimpleType: String(166) into SingleVariableDeclaration(168) at 0", "Insert SimpleName: timeZoneId(167) into SingleVariableDeclaration(168) at 1", "Insert ExpressionStatement(186) into Block(199) at 1", "Insert IfStatement(325) into Block(347) at 4", "Insert IfStatement(344) into Block(347) at 5", "Insert VariableDeclarationStatement(422) into Block(452) at 5", "Insert ExpressionStatement(444) into Block(452) at 7", "Insert SimpleName: String(477) into SimpleType: String(478) at 0", "Insert ReturnStatement(500) into Block(501) at 0", "Insert SimpleName: String(504) into SimpleType: String(505) at 0", "Insert ReturnStatement(527) into Block(528) at 0", "Move ExpressionStatement(392) into Block(636) at 0", "Insert VariableDeclarationStatement(549) into Block(636) at 1", "Insert VariableDeclarationStatement(558) into Block(636) at 2", "Insert IfStatement(630) into Block(636) at 3", "Insert ExpressionStatement(635) into Block(636) at 4", "Move ExpressionStatement(423) into Block(700) at 0", "Insert ExpressionStatement(658) into Block(700) at 1", "Insert VariableDeclarationStatement(665) into Block(700) at 2", "Insert IfStatement(699) into Block(700) at 3", "Insert SimpleName: String(143) into SimpleType: String(144) at 0", "Insert SimpleName: children(149) into SuperConstructorInvocation(150) at 0", "Insert MethodInvocation(154) into ExpressionStatement(155) at 0", "Insert SimpleName: String(161) into SimpleType: String(162) at 0", "Insert SimpleName: String(165) into SimpleType: String(166) at 0", "Insert Assignment: =(185) into ExpressionStatement(186) at 0", "Insert InfixExpression: ==(309) into IfStatement(325) at 0", "Insert Block(316) into IfStatement(325) at 1", "Move IfStatement(263) into IfStatement(325) at 2", "Insert InfixExpression: ==(328) into IfStatement(344) at 0", "Insert Block(335) into IfStatement(344) at 1", "Insert IfStatement(343) into IfStatement(344) at 2", "Insert PrimitiveType: long(408) into VariableDeclarationStatement(415) at 0", "Insert SimpleType: PDataType(417) into VariableDeclarationStatement(422) at 0", "Insert VariableDeclarationFragment(421) into VariableDeclarationStatement(422) at 1", "Insert MethodInvocation(443) into ExpressionStatement(444) at 0", "Insert ConditionalExpression(499) into ReturnStatement(500) at 0", "Insert ConditionalExpression(526) into ReturnStatement(527) at 0", "Insert SimpleType: String(546) into VariableDeclarationStatement(549) at 0", "Insert VariableDeclarationFragment(548) into VariableDeclarationStatement(549) at 1", "Insert SimpleType: String(551) into VariableDeclarationStatement(558) at 0", "Insert VariableDeclarationFragment(557) into VariableDeclarationStatement(558) at 1", "Insert InfixExpression: !=(563) into IfStatement(630) at 0", "Insert Block(568) into IfStatement(630) at 1", "Insert Block(629) into IfStatement(630) at 2", "Insert MethodInvocation(634) into ExpressionStatement(635) at 0", "Insert MethodInvocation(657) into ExpressionStatement(658) at 0", "Insert PrimitiveType: int(659) into VariableDeclarationStatement(665) at 0", "Insert VariableDeclarationFragment(664) into VariableDeclarationStatement(665) at 1", "Insert InfixExpression: ==(668) into IfStatement(699) at 0", "Insert Block(681) into IfStatement(699) at 1", "Insert IfStatement(698) into IfStatement(699) at 2", "Insert SimpleName: init(151) into MethodInvocation(154) at 0", "Insert SimpleName: dateFormat(152) into MethodInvocation(154) at 1", "Insert SimpleName: timeZoneId(153) into MethodInvocation(154) at 2", "Move FieldAccess(159) into Assignment: =(185) at 0", "Insert MethodInvocation(184) into Assignment: =(185) at 1", "Insert FieldAccess(189) into Assignment: =(197) at 0", "Insert MethodInvocation(196) into Assignment: =(197) at 1", "Insert SuperMethodInvocation(215) into VariableDeclarationFragment(216) at 1", "Insert SimpleName: dateFormat(307) into InfixExpression: ==(309) at 0", "Insert NullLiteral(308) into InfixExpression: ==(309) at 1", "Insert IfStatement(315) into Block(316) at 0", "Insert SimpleName: timeZoneId(326) into InfixExpression: ==(328) at 0", "Insert NullLiteral(327) into InfixExpression: ==(328) at 1", "Insert IfStatement(334) into Block(335) at 0", "Insert PrefixExpression: !(340) into IfStatement(343) at 0", "Insert ReturnStatement(342) into IfStatement(343) at 1", "Update SimpleName: value(329) to epochTime", "Insert SimpleName: PDataType(416) into SimpleType: PDataType(417) at 0", "Insert SimpleName: returnType(418) into VariableDeclarationFragment(421) at 0", "Move MethodInvocation(341) into VariableDeclarationFragment(421) at 1", "Insert ArrayCreation(433) into VariableDeclarationFragment(434) at 1", "Insert MethodInvocation(438) into MethodInvocation(443) at 0", "Insert SimpleName: encodeLong(439) into MethodInvocation(443) at 1", "Insert SimpleName: epochTime(440) into MethodInvocation(443) at 2", "Insert SimpleName: byteValue(441) into MethodInvocation(443) at 3", "Insert NumberLiteral: 0(442) into MethodInvocation(443) at 4", "Insert InfixExpression: <(484) into ConditionalExpression(499) at 0", "Insert NullLiteral(485) into ConditionalExpression(499) at 1", "Insert CastExpression(498) into ConditionalExpression(499) at 2", "Insert InfixExpression: <(511) into ConditionalExpression(526) at 0", "Insert NullLiteral(512) into ConditionalExpression(526) at 1", "Insert CastExpression(525) into ConditionalExpression(526) at 2", "Insert SimpleName: String(545) into SimpleType: String(546) at 0", "Insert SimpleName: timeZoneId(547) into VariableDeclarationFragment(548) at 0", "Insert SimpleName: String(550) into SimpleType: String(551) at 0", "Insert SimpleName: dateFormat(552) into VariableDeclarationFragment(557) at 0", "Insert MethodInvocation(556) into VariableDeclarationFragment(557) at 1", "Insert MethodInvocation(561) into InfixExpression: !=(563) at 0", "Insert NumberLiteral: 0(562) into InfixExpression: !=(563) at 1", "Insert ExpressionStatement(567) into Block(568) at 0", "Insert VariableDeclarationStatement(575) into Block(629) at 0", "Insert IfStatement(628) into Block(629) at 1", "Insert SimpleName: init(631) into MethodInvocation(634) at 0", "Insert SimpleName: dateFormat(632) into MethodInvocation(634) at 1", "Insert SimpleName: timeZoneId(633) into MethodInvocation(634) at 2", "Insert SimpleName: WritableUtils(653) into MethodInvocation(657) at 0", "Insert SimpleName: writeString(654) into MethodInvocation(657) at 1", "Insert SimpleName: output(655) into MethodInvocation(657) at 2", "Insert StringLiteral: \"\"(656) into MethodInvocation(657) at 3", "Insert SimpleName: nChildren(660) into VariableDeclarationFragment(664) at 0", "Insert MethodInvocation(663) into VariableDeclarationFragment(664) at 1", "Insert SimpleName: nChildren(666) into InfixExpression: ==(668) at 0", "Insert NumberLiteral: 1(667) into InfixExpression: ==(668) at 1", "Move ExpressionStatement(429) into Block(681) at 0", "Insert ExpressionStatement(680) into Block(681) at 1", "Insert InfixExpression: ||(690) into IfStatement(698) at 0", "Insert Block(697) into IfStatement(698) at 1", "Update SimpleName: children(145) to DateUtil", "Move SimpleName: children(145) into MethodInvocation(184) at 0", "Insert SimpleName: getDateTimeParser(179) into MethodInvocation(184) at 1", "Update SimpleName: subList(146) to dateFormat", "Move SimpleName: subList(146) into MethodInvocation(184) at 2", "Insert MethodInvocation(182) into MethodInvocation(184) at 3", "Insert SimpleName: timeZoneId(183) into MethodInvocation(184) at 4", "Insert ThisExpression(187) into FieldAccess(189) at 0", "Insert SimpleName: timeZoneId(188) into FieldAccess(189) at 1", "Insert MethodInvocation(194) into MethodInvocation(196) at 0", "Insert SimpleName: getID(195) into MethodInvocation(196) at 1", "Insert SimpleName: hashCode(214) into SuperMethodInvocation(215) at 0", "Insert ParenthesizedExpression(231) into InfixExpression: +(232) at 1", "Insert ParenthesizedExpression(248) into InfixExpression: +(249) at 1", "Insert InfixExpression: !=(312) into IfStatement(315) at 0", "Move ReturnStatement(225) into IfStatement(315) at 1", "Insert InfixExpression: !=(331) into IfStatement(334) at 0", "Insert ReturnStatement(333) into IfStatement(334) at 1", "Insert MethodInvocation(339) into PrefixExpression: !(340) at 0", "Insert BooleanLiteral: false(341) into ReturnStatement(342) at 0", "Insert ArrayType: byte[](429) into ArrayCreation(433) at 0", "Insert MethodInvocation(432) into ArrayCreation(433) at 1", "Insert SimpleName: returnType(436) into MethodInvocation(438) at 0", "Insert SimpleName: getCodec(437) into MethodInvocation(438) at 1", "Insert MethodInvocation(482) into InfixExpression: <(484) at 0", "Insert NumberLiteral: 3(483) into InfixExpression: <(484) at 1", "Insert SimpleType: String(487) into CastExpression(498) at 0", "Insert MethodInvocation(497) into CastExpression(498) at 1", "Insert MethodInvocation(509) into InfixExpression: <(511) at 0", "Insert NumberLiteral: 2(510) into InfixExpression: <(511) at 1", "Insert SimpleType: String(514) into CastExpression(525) at 0", "Insert MethodInvocation(524) into CastExpression(525) at 1", "Insert SimpleName: WritableUtils(553) into MethodInvocation(556) at 0", "Insert SimpleName: readString(554) into MethodInvocation(556) at 1", "Insert SimpleName: input(555) into MethodInvocation(556) at 2", "Insert SimpleName: dateFormat(559) into MethodInvocation(561) at 0", "Insert SimpleName: length(560) into MethodInvocation(561) at 1", "Insert Assignment: =(566) into ExpressionStatement(567) at 0", "Insert PrimitiveType: int(569) into VariableDeclarationStatement(575) at 0", "Insert VariableDeclarationFragment(574) into VariableDeclarationStatement(575) at 1", "Insert InfixExpression: ==(578) into IfStatement(628) at 0", "Insert Block(593) into IfStatement(628) at 1", "Insert IfStatement(627) into IfStatement(628) at 2", "Insert SimpleName: children(661) into MethodInvocation(663) at 0", "Insert SimpleName: size(662) into MethodInvocation(663) at 1", "Insert MethodInvocation(679) into ExpressionStatement(680) at 0", "Insert InfixExpression: ==(684) into InfixExpression: ||(690) at 0", "Insert MethodInvocation(689) into InfixExpression: ||(690) at 1", "Insert ExpressionStatement(696) into Block(697) at 0", "Insert SimpleName: getDataType(181) into MethodInvocation(182) at 0", "Insert FieldAccess(192) into MethodInvocation(194) at 0", "Insert SimpleName: getTimeZone(193) into MethodInvocation(194) at 1", "Insert ConditionalExpression(230) into ParenthesizedExpression(231) at 0", "Insert ConditionalExpression(247) into ParenthesizedExpression(248) at 0", "Insert MethodInvocation(291) into MethodInvocation(294) at 0", "Update SimpleName: getExpression(245) to get", "Insert NumberLiteral: 0(293) into MethodInvocation(294) at 2", "Insert MethodInvocation(298) into MethodInvocation(301) at 0", "Update SimpleName: getExpression(249) to get", "Insert NumberLiteral: 0(300) into MethodInvocation(301) at 2", "Insert QualifiedName: other.dateFormat(310) into InfixExpression: !=(312) at 0", "Insert NullLiteral(311) into InfixExpression: !=(312) at 1", "Insert QualifiedName: other.timeZoneId(329) into InfixExpression: !=(331) at 0", "Insert NullLiteral(330) into InfixExpression: !=(331) at 1", "Insert BooleanLiteral: false(332) into ReturnStatement(333) at 0", "Insert SimpleName: timeZoneId(336) into MethodInvocation(339) at 0", "Insert SimpleName: equals(337) into MethodInvocation(339) at 1", "Insert QualifiedName: other.timeZoneId(338) into MethodInvocation(339) at 2", "Insert PrimitiveType: byte(427) into ArrayType: byte[](429) at 0", "Insert Dimension(428) into ArrayType: byte[](429) at 1", "Update SimpleName: toBytes(342) to returnType", "Move SimpleName: toBytes(342) into MethodInvocation(432) at 0", "Update SimpleName: value(343) to getByteSize", "Move SimpleName: value(343) into MethodInvocation(432) at 1", "Insert SimpleName: children(480) into MethodInvocation(482) at 0", "Insert SimpleName: size(481) into MethodInvocation(482) at 1", "Insert SimpleName: String(486) into SimpleType: String(487) at 0", "Insert ParenthesizedExpression(495) into MethodInvocation(497) at 0", "Insert SimpleName: getValue(496) into MethodInvocation(497) at 1", "Insert SimpleName: children(507) into MethodInvocation(509) at 0", "Insert SimpleName: size(508) into MethodInvocation(509) at 1", "Insert SimpleName: String(513) into SimpleType: String(514) at 0", "Insert ParenthesizedExpression(522) into MethodInvocation(524) at 0", "Insert SimpleName: getValue(523) into MethodInvocation(524) at 1", "Insert SimpleName: timeZoneId(564) into Assignment: =(566) at 0", "Insert QualifiedName: DateUtil.DEFAULT_TIME_ZONE_ID(565) into Assignment: =(566) at 1", "Insert SimpleName: nChildren(570) into VariableDeclarationFragment(574) at 0", "Insert MethodInvocation(573) into VariableDeclarationFragment(574) at 1", "Insert SimpleName: nChildren(576) into InfixExpression: ==(578) at 0", "Insert NumberLiteral: 1(577) into InfixExpression: ==(578) at 1", "Move ExpressionStatement(399) into Block(593) at 0", "Move ExpressionStatement(406) into Block(593) at 1", "Insert InfixExpression: ||(602) into IfStatement(627) at 0", "Insert Block(615) into IfStatement(627) at 1", "Insert Block(626) into IfStatement(627) at 2", "Insert SimpleName: WritableUtils(675) into MethodInvocation(679) at 0", "Insert SimpleName: writeString(676) into MethodInvocation(679) at 1", "Insert SimpleName: output(677) into MethodInvocation(679) at 2", "Insert SimpleName: timeZoneId(678) into MethodInvocation(679) at 3", "Insert SimpleName: nChildren(682) into InfixExpression: ==(684) at 0", "Insert NumberLiteral: 2(683) into InfixExpression: ==(684) at 1", "Insert QualifiedName: DateUtil.LOCAL_TIME_ZONE_ID(685) into MethodInvocation(689) at 0", "Insert SimpleName: equalsIgnoreCase(686) into MethodInvocation(689) at 1", "Insert MethodInvocation(688) into MethodInvocation(689) at 2", "Insert MethodInvocation(695) into ExpressionStatement(696) at 0", "Insert ThisExpression(190) into FieldAccess(192) at 0", "Insert SimpleName: dateParser(191) into FieldAccess(192) at 1", "Insert ParenthesizedExpression(225) into ConditionalExpression(230) at 0", "Insert NumberLiteral: 0(226) into ConditionalExpression(230) at 1", "Move MethodInvocation(187) into ConditionalExpression(230) at 2", "Insert ParenthesizedExpression(242) into ConditionalExpression(247) at 0", "Insert NumberLiteral: 0(243) into ConditionalExpression(247) at 1", "Insert MethodInvocation(246) into ConditionalExpression(247) at 2", "Insert ThisExpression(289) into MethodInvocation(291) at 0", "Insert SimpleName: getChildren(290) into MethodInvocation(291) at 1", "Move SimpleName: other(248) into MethodInvocation(298) at 0", "Insert SimpleName: getChildren(297) into MethodInvocation(298) at 1", "Insert CastExpression(494) into ParenthesizedExpression(495) at 0", "Insert CastExpression(521) into ParenthesizedExpression(522) at 0", "Insert SimpleName: children(571) into MethodInvocation(573) at 0", "Insert SimpleName: size(572) into MethodInvocation(573) at 1", "Insert InfixExpression: ==(596) into InfixExpression: ||(602) at 0", "Insert MethodInvocation(601) into InfixExpression: ||(602) at 1", "Insert ExpressionStatement(607) into Block(615) at 0", "Insert ExpressionStatement(614) into Block(615) at 1", "Insert ExpressionStatement(620) into Block(626) at 0", "Insert ExpressionStatement(625) into Block(626) at 1", "Insert SimpleName: getTimeZoneIdArg(687) into MethodInvocation(688) at 0", "Insert SimpleName: WritableUtils(691) into MethodInvocation(695) at 0", "Insert SimpleName: writeString(692) into MethodInvocation(695) at 1", "Insert SimpleName: output(693) into MethodInvocation(695) at 2", "Insert SimpleName: timeZoneId(694) into MethodInvocation(695) at 3", "Insert InfixExpression: ==(224) into ParenthesizedExpression(225) at 0", "Insert InfixExpression: ==(241) into ParenthesizedExpression(242) at 0", "Update SimpleName: getExpression(195) to timeZoneId", "Move SimpleName: getExpression(195) into MethodInvocation(246) at 0", "Move SimpleName: hashCode(197) into MethodInvocation(246) at 1", "Insert SimpleType: LiteralExpression(489) into CastExpression(494) at 0", "Insert MethodInvocation(493) into CastExpression(494) at 1", "Insert SimpleType: LiteralExpression(516) into CastExpression(521) at 0", "Insert MethodInvocation(520) into CastExpression(521) at 1", "Update SimpleName: dateParser(400) to timeZoneId", "Insert SimpleName: nChildren(594) into InfixExpression: ==(596) at 0", "Insert NumberLiteral: 2(595) into InfixExpression: ==(596) at 1", "Insert QualifiedName: DateUtil.LOCAL_TIME_ZONE_ID(597) into MethodInvocation(601) at 0", "Insert SimpleName: equalsIgnoreCase(598) into MethodInvocation(601) at 1", "Insert MethodInvocation(600) into MethodInvocation(601) at 2", "Insert Assignment: =(606) into ExpressionStatement(607) at 0", "Insert Assignment: =(613) into ExpressionStatement(614) at 0", "Insert Assignment: =(619) into ExpressionStatement(620) at 0", "Insert Assignment: =(624) into ExpressionStatement(625) at 0", "Insert SimpleName: dateFormat(222) into InfixExpression: ==(224) at 0", "Insert NullLiteral(223) into InfixExpression: ==(224) at 1", "Insert SimpleName: timeZoneId(239) into InfixExpression: ==(241) at 0", "Insert NullLiteral(240) into InfixExpression: ==(241) at 1", "Insert SimpleName: LiteralExpression(488) into SimpleType: LiteralExpression(489) at 0", "Insert SimpleName: children(490) into MethodInvocation(493) at 0", "Insert SimpleName: get(491) into MethodInvocation(493) at 1", "Insert NumberLiteral: 2(492) into MethodInvocation(493) at 2", "Insert SimpleName: LiteralExpression(515) into SimpleType: LiteralExpression(516) at 0", "Insert SimpleName: children(517) into MethodInvocation(520) at 0", "Insert SimpleName: get(518) into MethodInvocation(520) at 1", "Insert NumberLiteral: 1(519) into MethodInvocation(520) at 2", "Update SimpleName: DateUtil(401) to WritableUtils", "Update SimpleName: getDateParser(402) to readString", "Update SimpleName: dateFormat(403) to input", "Insert SimpleName: getTimeZoneIdArg(599) into MethodInvocation(600) at 0", "Insert SimpleName: dateFormat(603) into Assignment: =(606) at 0", "Insert MethodInvocation(605) into Assignment: =(606) at 1", "Insert SimpleName: timeZoneId(608) into Assignment: =(613) at 0", "Insert MethodInvocation(612) into Assignment: =(613) at 1", "Insert SimpleName: dateFormat(616) into Assignment: =(619) at 0", "Insert MethodInvocation(618) into Assignment: =(619) at 1", "Insert SimpleName: timeZoneId(621) into Assignment: =(624) at 0", "Insert MethodInvocation(623) into Assignment: =(624) at 1", "Insert SimpleName: getDateFormatArg(604) into MethodInvocation(605) at 0", "Insert SimpleName: WritableUtils(609) into MethodInvocation(612) at 0", "Insert SimpleName: readString(610) into MethodInvocation(612) at 1", "Insert SimpleName: input(611) into MethodInvocation(612) at 2", "Insert SimpleName: getDateFormatArg(617) into MethodInvocation(618) at 0", "Insert SimpleName: getTimeZoneIdArg(622) into MethodInvocation(623) at 0", "Delete TextElement:  0.1(45)", "Delete TagElement: @since(46)", "Delete QualifiedName: DateUtil.DateTimeParser(139)", "Delete NumberLiteral: 0(147)", "Delete NumberLiteral: 1(148)", "Delete MethodInvocation(149)", "Delete SuperConstructorInvocation(150)", "Delete SimpleName: dateParser(160)", "Delete MethodDeclaration(164)", "Delete NumberLiteral: 1(178)", "Delete MethodInvocation(196)", "Delete MethodInvocation(198)", "Delete SimpleName: obj(221)", "Delete NullLiteral(222)", "Delete InfixExpression: ==(223)", "Delete IfStatement(226)", "Delete SimpleName: Object(327)", "Delete SimpleType: Object(328)", "Delete MethodInvocation(344)", "Delete Block(407)", "Delete Block(430)"]}}, {"PDate_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 9", "MOV ImportDeclaration to CompilationUnit at 9", "MOV ImportDeclaration to CompilationUnit at 9", "MOV ImportDeclaration to CompilationUnit at 9"]}, {"root": "UPDATE from parseDateTime to parseDate", "operations": ["UPD SimpleName: parseDateTime from parseDateTime to parseDate"]}]}}, {"PDate_diff": {"operations": ["Move ImportDeclaration(3) into CompilationUnit(785) at 9", "Move ImportDeclaration(5) into CompilationUnit(785) at 9", "Move ImportDeclaration(7) into CompilationUnit(785) at 9", "Move ImportDeclaration(9) into CompilationUnit(785) at 9", "Update SimpleName: parseDateTime(238) to parseDate"]}}, {"PTime_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 8", "MOV ImportDeclaration to CompilationUnit at 8", "MOV ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: == at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 0", "INS QualifiedName: DateUtil.DEFAULT_TIME_FORMATTER to Assignment: = at 1", "INS SimpleName: formatter to InfixExpression: == at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: formatter to Assignment: = at 0"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS ReturnStatement to Block at 1", "INS InfixExpression: + to ReturnStatement at 0", "INS StringLiteral: \"'\" to InfixExpression: + at 0", "INS SimpleName: b to SuperMethodInvocation at 1", "INS StringLiteral: \"'\" to InfixExpression: + at 2", "INS SimpleName: length to SuperMethodInvocation at 3", "INS SimpleName: offset to SuperMethodInvocation at 2", "INS SuperMethodInvocation to InfixExpression: + at 1", "INS SimpleName: toStringLiteral to SuperMethodInvocation at 0", "INS SimpleName: formatter to SuperMethodInvocation at 4"]}, {"root": "UPDATE from parseDateTime to parseTime", "operations": ["UPD SimpleName: parseDateTime from parseDateTime to parseTime"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: toStringLiteral", "DEL MethodInvocation", "DEL SimpleName: offset", "DEL QualifiedName: PDate.INSTANCE", "DEL SimpleName: length", "DEL SimpleName: formatter", "DEL ReturnStatement", "DEL SimpleName: b"]}]}}, {"PTime_diff": {"operations": ["Move ImportDeclaration(3) into CompilationUnit(530) at 8", "Move ImportDeclaration(5) into CompilationUnit(530) at 8", "Move ImportDeclaration(7) into CompilationUnit(530) at 8", "Insert IfStatement(488) into Block(499) at 0", "Insert ReturnStatement(498) into Block(499) at 1", "Insert InfixExpression: ==(482) into IfStatement(488) at 0", "Insert Block(487) into IfStatement(488) at 1", "Insert InfixExpression: +(497) into ReturnStatement(498) at 0", "Insert SimpleName: formatter(480) into InfixExpression: ==(482) at 0", "Insert NullLiteral(481) into InfixExpression: ==(482) at 1", "Insert ExpressionStatement(486) into Block(487) at 0", "Insert StringLiteral: \"'\"(489) into InfixExpression: +(497) at 0", "Insert SuperMethodInvocation(495) into InfixExpression: +(497) at 1", "Insert StringLiteral: \"'\"(496) into InfixExpression: +(497) at 2", "Insert Assignment: =(485) into ExpressionStatement(486) at 0", "Insert SimpleName: toStringLiteral(490) into SuperMethodInvocation(495) at 0", "Insert SimpleName: b(491) into SuperMethodInvocation(495) at 1", "Insert SimpleName: offset(492) into SuperMethodInvocation(495) at 2", "Insert SimpleName: length(493) into SuperMethodInvocation(495) at 3", "Insert SimpleName: formatter(494) into SuperMethodInvocation(495) at 4", "Insert SimpleName: formatter(483) into Assignment: =(485) at 0", "Insert QualifiedName: DateUtil.DEFAULT_TIME_FORMATTER(484) into Assignment: =(485) at 1", "Update SimpleName: parseDateTime(290) to parseTime", "Delete QualifiedName: PDate.INSTANCE(480)", "Delete SimpleName: toStringLiteral(481)", "Delete SimpleName: b(482)", "Delete SimpleName: offset(483)", "Delete SimpleName: length(484)", "Delete SimpleName: formatter(485)", "Delete MethodInvocation(486)", "Delete ReturnStatement(487)"]}}, {"PTimestamp_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 4", "MOV ImportDeclaration to CompilationUnit at 2", "MOV ImportDeclaration to CompilationUnit at 1", "MOV ImportDeclaration to CompilationUnit at 3"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "UPDATE from DateUtil.DEFAULT_MS_DATE_FORMATTER to DateUtil.DEFAULT_TIMESTAMP_FORMATTER", "operations": ["UPD QualifiedName: DateUtil.DEFAULT_MS_DATE_FORMATTER from DateUtil.DEFAULT_MS_DATE_FORMATTER to DateUtil.DEFAULT_TIMESTAMP_FORMATTER"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV MethodInvocation to ReturnStatement at 0"]}, {"root": "UPDATE from parseDateTime to parseTimestamp", "operations": ["UPD SimpleName: parseDateTime from parseDateTime to parseTimestamp"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: getTime", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleType: Timestamp", "DEL SimpleName: Timestamp"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL QualifiedName: java.sql.Timestamp", "DEL QualifiedName: java.sql.Timestamp", "DEL SimpleType: java.sql.Timestamp", "DEL SimpleName: b", "DEL CastExpression", "DEL SimpleName: length", "DEL SimpleName: value", "DEL SimpleName: offset", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleType: java.sql.Timestamp", "DEL SimpleName: toObject"]}, {"root": "DEL InfixExpression: ||", "operations": ["DEL InfixExpression: ||", "DEL SimpleName: formatter", "DEL InfixExpression: ==", "DEL QualifiedName: DateUtil.DEFAULT_DATE_FORMATTER"]}, {"root": "DEL StringLiteral: \".\"", "operations": ["DEL StringLiteral: \".\""]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: value", "DEL MethodInvocation", "DEL SimpleName: getNanos"]}]}}, {"PTimestamp_diff": {"operations": ["Move ImportDeclaration(13) into CompilationUnit(859) at 1", "Move ImportDeclaration(15) into CompilationUnit(859) at 2", "Move ImportDeclaration(17) into CompilationUnit(859) at 3", "Move ImportDeclaration(19) into CompilationUnit(859) at 4", "Move InfixExpression: ==(759) into IfStatement(747) at 0", "Update QualifiedName: DateUtil.DEFAULT_MS_DATE_FORMATTER(765) to DateUtil.DEFAULT_TIMESTAMP_FORMATTER", "Move MethodInvocation(275) into ReturnStatement(274) at 0", "Update SimpleName: parseDateTime(270) to parseTimestamp", "Delete SimpleName: Timestamp(267)", "Delete SimpleType: Timestamp(268)", "Delete SimpleName: getTime(276)", "Delete MethodInvocation(277)", "Delete ClassInstanceCreation(278)", "Delete QualifiedName: java.sql.Timestamp(744)", "Delete SimpleType: java.sql.Timestamp(745)", "Delete SimpleName: value(746)", "Delete QualifiedName: java.sql.Timestamp(747)", "Delete SimpleType: java.sql.Timestamp(748)", "Delete SimpleName: toObject(749)", "Delete SimpleName: b(750)", "Delete SimpleName: offset(751)", "Delete SimpleName: length(752)", "Delete MethodInvocation(753)", "Delete CastExpression(754)", "Delete VariableDeclarationFragment(755)", "Delete VariableDeclarationStatement(756)", "Delete SimpleName: formatter(760)", "Delete QualifiedName: DateUtil.DEFAULT_DATE_FORMATTER(761)", "Delete InfixExpression: ==(762)", "Delete InfixExpression: ||(763)", "Delete StringLiteral: \".\"(777)", "Delete SimpleName: value(778)", "Delete SimpleName: getNanos(779)", "Delete MethodInvocation(780)"]}}], "commit_stats": [{"total_files": 24, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}