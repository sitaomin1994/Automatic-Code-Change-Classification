{"application": "google-closure-compiler", "csha": "120d1c7a8d96d9c81a92e6600e1c0e2c7cbdcb98", "files": [{"ReferenceCollectingCallback_cluster": {"actions": [{"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL StringLiteral: \"arguments\"", "DEL SimpleName: t", "DEL Assignment: =", "DEL Assignment: =", "DEL SimpleName: getArgumentsVar", "DEL ExpressionStatement", "DEL SimpleName: v", "DEL SimpleName: equals", "DEL Block", "DEL SimpleName: v", "DEL ExpressionStatement", "DEL SimpleName: getScope", "DEL IfStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: n", "DEL SimpleName: getString", "DEL MethodInvocation", "DEL MethodInvocation"]}]}}, {"ReferenceCollectingCallback_diff": {"operations": ["Move MethodInvocation(508) into VariableDeclarationFragment(491) at 1", "Delete SimpleName: n(485)", "Delete SimpleName: getString(486)", "Delete MethodInvocation(487)", "Delete SimpleName: equals(488)", "Delete StringLiteral: \"arguments\"(489)", "Delete MethodInvocation(490)", "Delete SimpleName: v(491)", "Delete SimpleName: t(492)", "Delete SimpleName: getScope(493)", "Delete MethodInvocation(494)", "Delete SimpleName: getArgumentsVar(495)", "Delete MethodInvocation(496)", "Delete Assignment: =(497)", "Delete ExpressionStatement(498)", "Delete Block(499)", "Delete SimpleName: v(500)", "Delete Assignment: =(509)", "Delete ExpressionStatement(510)", "Delete Block(511)", "Delete IfStatement(512)"]}}, {"Scope_cluster": {"actions": [{"root": "INS Block to MethodDeclaration at 4", "operations": ["INS Block to MethodDeclaration at 4", "INS SimpleName: getArgumentsVar to MethodInvocation at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS InfixExpression: || to IfStatement at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: isModuleScope to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS InfixExpression: || to IfStatement at 0", "INS ThrowStatement to Block at 0", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: isArrowFunction to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to InfixExpression: || at 0", "INS MethodInvocation to InfixExpression: || at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS PrefixExpression: ! to InfixExpression: || at 0", "INS SimpleName: isFunctionScope to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to InfixExpression: || at 1", "INS IfStatement to Block at 1", "INS SimpleName: parent to MethodInvocation at 0", "INS ThisExpression to InfixExpression: + at 1", "INS StringLiteral: \"No arguments var for scope: \" to InfixExpression: + at 0", "INS SimpleName: rootNode to MethodInvocation at 0", "INS SimpleName: isGlobal to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 2", "MOV ReturnStatement to Block at 3"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"Scope_diff": {"operations": ["Insert Block(551) into MethodDeclaration(552) at 4", "Insert IfStatement(523) into Block(551) at 0", "Insert IfStatement(536) into Block(551) at 1", "Move IfStatement(521) into Block(551) at 2", "Move ReturnStatement(523) into Block(551) at 3", "Insert InfixExpression: ||(514) into IfStatement(523) at 0", "Insert Block(522) into IfStatement(523) at 1", "Insert InfixExpression: ||(530) into IfStatement(536) at 0", "Insert Block(535) into IfStatement(536) at 1", "Insert MethodInvocation(511) into InfixExpression: ||(514) at 0", "Insert MethodInvocation(513) into InfixExpression: ||(514) at 1", "Insert ThrowStatement(521) into Block(522) at 0", "Insert PrefixExpression: !(526) into InfixExpression: ||(530) at 0", "Insert MethodInvocation(529) into InfixExpression: ||(530) at 1", "Insert ReturnStatement(534) into Block(535) at 0", "Insert SimpleName: isGlobal(510) into MethodInvocation(511) at 0", "Insert SimpleName: isModuleScope(512) into MethodInvocation(513) at 0", "Insert ClassInstanceCreation(520) into ThrowStatement(521) at 0", "Insert MethodInvocation(525) into PrefixExpression: !(526) at 0", "Insert SimpleName: rootNode(527) into MethodInvocation(529) at 0", "Insert SimpleName: isArrowFunction(528) into MethodInvocation(529) at 1", "Insert MethodInvocation(533) into ReturnStatement(534) at 0", "Insert SimpleType: IllegalStateException(516) into ClassInstanceCreation(520) at 0", "Insert InfixExpression: +(519) into ClassInstanceCreation(520) at 1", "Insert SimpleName: isFunctionScope(524) into MethodInvocation(525) at 0", "Insert SimpleName: parent(531) into MethodInvocation(533) at 0", "Insert SimpleName: getArgumentsVar(532) into MethodInvocation(533) at 1", "Insert SimpleName: IllegalStateException(515) into SimpleType: IllegalStateException(516) at 0", "Insert StringLiteral: \"No arguments var for scope: \"(517) into InfixExpression: +(519) at 0", "Insert ThisExpression(518) into InfixExpression: +(519) at 1", "Delete Block(524)"]}}], "commit_stats": [{"total_files": 5, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}