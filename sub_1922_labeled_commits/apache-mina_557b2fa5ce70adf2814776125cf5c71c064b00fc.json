{"application": "apache-mina", "csha": "557b2fa5ce70adf2814776125cf5c71c064b00fc", "files": [{"package-info_cluster": {"actions": [{"root": "INS Javadoc to PackageDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement: org.apache.mina.transport. to TagElement at 4", "INS TextElement: For running an  to TagElement at 1", "INS Javadoc to PackageDeclaration at 0", "INS TextElement: Base API for the MINA library. All those interface and API are the contract with the framework. to TagElement at 0", "INS TagElement: @link to TagElement at 2", "INS QualifiedName: org.apache.mina.api.IoService to TagElement: @link at 0", "INS TextElement:  you need to choose a concrete implementation in to TagElement at 3"]}]}}, {"package-info_diff": {"operations": ["Insert Javadoc(7) into PackageDeclaration(9) at 0", "Insert TagElement(6) into Javadoc(7) at 0", "Insert TextElement: Base API for the MINA library. All those interface and API are the contract with the framework.(0) into TagElement(6) at 0", "Insert TextElement: For running an (1) into TagElement(6) at 1", "Insert TagElement: @link(3) into TagElement(6) at 2", "Insert TextElement:  you need to choose a concrete implementation in(4) into TagElement(6) at 3", "Insert TextElement: org.apache.mina.transport.(5) into TagElement(6) at 4", "Insert QualifiedName: org.apache.mina.api.IoService(2) into TagElement: @link(3) at 0"]}}, {"LoggingFilter_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS Block to IfStatement at 2", "INS IfStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS SimpleName: logger to Assignment: = at 0", "operations": ["INS SimpleName: logger to Assignment: = at 0"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: LoggerFactory to MethodInvocation at 0", "INS SimpleName: getLogger to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleName: name to MethodInvocation at 2", "operations": ["INS SimpleName: name to MethodInvocation at 2"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Javadoc", "DEL SimpleType: String", "DEL SimpleName: name", "DEL FieldDeclaration", "DEL TextElement: The logger name ", "DEL Modifier: private", "DEL SimpleName: String", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL TagElement"]}, {"root": "DEL FieldAccess", "operations": ["DEL FieldAccess", "DEL ThisExpression", "DEL SimpleName: name"]}, {"root": "DEL SimpleName: name", "operations": ["DEL SimpleName: name"]}, {"root": "DEL FieldAccess", "operations": ["DEL ThisExpression", "DEL FieldAccess", "DEL SimpleName: name"]}, {"root": "DEL IfStatement", "operations": ["DEL Assignment: =", "DEL FieldAccess", "DEL ExpressionStatement", "DEL IfStatement", "DEL SimpleName: name", "DEL ThisExpression", "DEL Block"]}]}}, {"LoggingFilter_diff": {"operations": ["Insert IfStatement(171) into Block(172) at 0", "Move InfixExpression: ==(160) into IfStatement(171) at 0", "Move Block(178) into IfStatement(171) at 1", "Insert Block(170) into IfStatement(171) at 2", "Move ExpressionStatement(188) into Block(170) at 0", "Insert SimpleName: logger(151) into Assignment: =(160) at 0", "Insert MethodInvocation(159) into Assignment: =(160) at 1", "Insert SimpleName: LoggerFactory(152) into MethodInvocation(159) at 0", "Insert SimpleName: getLogger(153) into MethodInvocation(159) at 1", "Move MethodInvocation(168) into MethodInvocation(159) at 2", "Insert SimpleName: name(166) into MethodInvocation(167) at 2", "Delete TextElement: The logger name (31)", "Delete TagElement(32)", "Delete Javadoc(33)", "Delete Modifier: private(34)", "Delete Modifier: final(35)", "Delete SimpleName: String(36)", "Delete SimpleType: String(37)", "Delete SimpleName: name(38)", "Delete VariableDeclarationFragment(39)", "Delete FieldDeclaration(40)", "Delete ThisExpression(172)", "Delete SimpleName: name(173)", "Delete FieldAccess(174)", "Delete SimpleName: name(175)", "Delete ThisExpression(183)", "Delete SimpleName: name(184)", "Delete FieldAccess(185)", "Delete ThisExpression(161)", "Delete SimpleName: name(162)", "Delete FieldAccess(163)", "Delete Assignment: =(169)", "Delete ExpressionStatement(170)", "Delete Block(171)", "Delete IfStatement(179)"]}}, {"NioEchoClient_cluster": {"actions": [{"root": "UPDATE from A basic client test to A simple TCP client, write back to the client every received messages.", "operations": ["UPD TextElement: A basic client test from A basic client test to A simple TCP client, write back to the client every received messages."]}]}}, {"NioEchoClient_diff": {"operations": ["Update TextElement: A basic client test(22) to A simple TCP client, write back to the client every received messages."]}}, {"NioEchoServer_cluster": {"actions": [{"root": "UPDATE from A basic Server test to A simple TCP server, write back to the client every received messages.", "operations": ["UPD TextElement: A basic Server test from A basic Server test to A simple TCP server, write back to the client every received messages."]}, {"root": "INS MethodDeclaration to AnonymousClassDeclaration at 1", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: messageReceived to MethodDeclaration at 3", "INS MethodDeclaration to AnonymousClassDeclaration at 1", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: message to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: session to SingleVariableDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Block to MethodDeclaration at 6"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: IoSession to SingleVariableDeclaration at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: Object to SingleVariableDeclaration at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.mina.api.IdleStatus"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.mina.api.IoFilter"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.mina.filterchain.ReadFilterChainController"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.mina.filterchain.WriteFilterChainController", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.mina.session.WriteRequest", "DEL ImportDeclaration"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL MarkerAnnotation", "DEL Modifier: final", "DEL SimpleName: session", "DEL SimpleName: session", "DEL SingleVariableDeclaration", "DEL Block", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL SimpleName: status", "DEL SimpleName: info", "DEL Modifier: final", "DEL SimpleName: session", "DEL SimpleName: info", "DEL PrimitiveType: void", "DEL ExpressionStatement", "DEL Modifier: final", "DEL SimpleName: controller", "DEL SimpleType: IoSession", "DEL Modifier: public", "DEL StringLiteral: \"session {} open\"", "DEL SimpleName: ReadFilterChainController", "DEL Block", "DEL SimpleName: sessionIdle", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: IoSession", "DEL PrimitiveType: void", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL AnonymousClassDeclaration", "DEL SimpleName: IoSession", "DEL SimpleName: controller", "DEL Modifier: final", "DEL Modifier: final", "DEL Block", "DEL SimpleName: session", "DEL SimpleType: IoSession", "DEL SimpleName: IoSession", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleName: LOG", "DEL StringLiteral: \"message {} sent\"", "DEL SimpleName: IoSession", "DEL StringLiteral: \"session {} open\"", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: sessionClosed", "DEL SingleVariableDeclaration", "DEL SimpleName: Override", "DEL PrimitiveType: void", "DEL SimpleType: IdleStatus", "DEL StringLiteral: \"session {} idle\"", "DEL SimpleName: messageReceived", "DEL SimpleName: messageSent", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL SingleVariableDeclaration", "DEL Block", "DEL MarkerAnnotation", "DEL SimpleType: IoSession", "DEL SimpleName: sessionOpened", "DEL SingleVariableDeclaration", "DEL SimpleName: session", "DEL SimpleName: IdleStatus", "DEL MarkerAnnotation", "DEL SimpleName: messageWriting", "DEL MarkerAnnotation", "DEL PrimitiveType: void", "DEL SimpleName: message", "DEL SimpleType: WriteFilterChainController", "DEL SimpleType: IoFilter", "DEL ExpressionStatement", "DEL SimpleName: WriteRequest", "DEL SimpleName: Override", "DEL SimpleType: IoSession", "DEL SingleVariableDeclaration", "DEL MarkerAnnotation", "DEL SimpleName: session", "DEL SimpleName: info", "DEL SimpleName: callWriteNextFilter", "DEL SimpleName: Override", "DEL Modifier: public", "DEL SimpleName: controller", "DEL SimpleName: session", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL SimpleName: info", "DEL Modifier: final", "DEL SimpleType: IoSession", "DEL ClassInstanceCreation", "DEL Modifier: public", "DEL Modifier: final", "DEL ExpressionStatement", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleType: ReadFilterChainController", "DEL MethodDeclaration", "DEL Modifier: public", "DEL Modifier: final", "DEL SimpleName: LOG", "DEL PrimitiveType: void", "DEL SingleVariableDeclaration", "DEL SimpleName: message", "DEL SimpleName: Override", "DEL SimpleName: message", "DEL SingleVariableDeclaration", "DEL Modifier: final", "DEL SimpleName: message", "DEL SingleVariableDeclaration", "DEL SimpleName: message", "DEL SimpleName: session", "DEL SimpleName: session", "DEL SimpleName: Object", "DEL SimpleName: IoFilter", "DEL MethodDeclaration", "DEL SimpleType: WriteRequest", "DEL SimpleType: Object", "DEL Modifier: final", "DEL SimpleName: WriteFilterChainController", "DEL SimpleName: IoSession", "DEL SimpleName: LOG", "DEL SimpleName: LOG"]}]}}, {"NioEchoServer_diff": {"operations": ["Update TextElement: A basic Server test(30) to A simple TCP server, write back to the client every received messages.", "Insert MethodDeclaration(161) into AnonymousClassDeclaration(162) at 1", "Move MarkerAnnotation(170) into MethodDeclaration(161) at 0", "Insert Modifier: public(133) into MethodDeclaration(161) at 1", "Insert PrimitiveType: void(134) into MethodDeclaration(161) at 2", "Insert SimpleName: messageReceived(135) into MethodDeclaration(161) at 3", "Insert SingleVariableDeclaration(139) into MethodDeclaration(161) at 4", "Insert SingleVariableDeclaration(143) into MethodDeclaration(161) at 5", "Move Block(205) into MethodDeclaration(161) at 6", "Move SimpleType: IoSession(132) into SingleVariableDeclaration(139) at 0", "Insert SimpleName: session(138) into SingleVariableDeclaration(139) at 1", "Move SimpleType: Object(181) into SingleVariableDeclaration(143) at 0", "Insert SimpleName: message(142) into SingleVariableDeclaration(143) at 1", "Delete QualifiedName: org.apache.mina.api.IdleStatus(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.mina.api.IoFilter(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.apache.mina.filterchain.ReadFilterChainController(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.mina.filterchain.WriteFilterChainController(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.mina.session.WriteRequest(22)", "Delete ImportDeclaration(23)", "Delete SimpleName: IoFilter(82)", "Delete SimpleType: IoFilter(83)", "Delete SimpleName: Override(84)", "Delete MarkerAnnotation(85)", "Delete Modifier: public(86)", "Delete PrimitiveType: void(87)", "Delete SimpleName: sessionOpened(88)", "Delete Modifier: final(89)", "Delete SimpleName: IoSession(90)", "Delete SimpleType: IoSession(91)", "Delete SimpleName: session(92)", "Delete SingleVariableDeclaration(93)", "Delete SimpleName: LOG(94)", "Delete SimpleName: info(95)", "Delete StringLiteral: \"session {} open\"(96)", "Delete SimpleName: session(97)", "Delete MethodInvocation(98)", "Delete ExpressionStatement(99)", "Delete Block(100)", "Delete MethodDeclaration(101)", "Delete SimpleName: Override(102)", "Delete MarkerAnnotation(103)", "Delete Modifier: public(104)", "Delete PrimitiveType: void(105)", "Delete SimpleName: sessionIdle(106)", "Delete Modifier: final(107)", "Delete SimpleName: IoSession(108)", "Delete SimpleType: IoSession(109)", "Delete SimpleName: session(110)", "Delete SingleVariableDeclaration(111)", "Delete Modifier: final(112)", "Delete SimpleName: IdleStatus(113)", "Delete SimpleType: IdleStatus(114)", "Delete SimpleName: status(115)", "Delete SingleVariableDeclaration(116)", "Delete SimpleName: LOG(117)", "Delete SimpleName: info(118)", "Delete StringLiteral: \"session {} idle\"(119)", "Delete SimpleName: session(120)", "Delete MethodInvocation(121)", "Delete ExpressionStatement(122)", "Delete Block(123)", "Delete MethodDeclaration(124)", "Delete SimpleName: Override(125)", "Delete MarkerAnnotation(126)", "Delete Modifier: public(127)", "Delete PrimitiveType: void(128)", "Delete SimpleName: sessionClosed(129)", "Delete Modifier: final(130)", "Delete SimpleName: session(133)", "Delete SingleVariableDeclaration(134)", "Delete SimpleName: LOG(135)", "Delete SimpleName: info(136)", "Delete StringLiteral: \"session {} open\"(137)", "Delete SimpleName: session(138)", "Delete MethodInvocation(139)", "Delete ExpressionStatement(140)", "Delete Block(141)", "Delete MethodDeclaration(142)", "Delete SimpleName: Override(143)", "Delete MarkerAnnotation(144)", "Delete Modifier: public(145)", "Delete PrimitiveType: void(146)", "Delete SimpleName: messageWriting(147)", "Delete Modifier: final(148)", "Delete SimpleName: IoSession(149)", "Delete SimpleType: IoSession(150)", "Delete SimpleName: session(151)", "Delete SingleVariableDeclaration(152)", "Delete SimpleName: WriteRequest(153)", "Delete SimpleType: WriteRequest(154)", "Delete SimpleName: message(155)", "Delete SingleVariableDeclaration(156)", "Delete Modifier: final(157)", "Delete SimpleName: WriteFilterChainController(158)", "Delete SimpleType: WriteFilterChainController(159)", "Delete SimpleName: controller(160)", "Delete SingleVariableDeclaration(161)", "Delete SimpleName: controller(162)", "Delete SimpleName: callWriteNextFilter(163)", "Delete SimpleName: message(164)", "Delete MethodInvocation(165)", "Delete ExpressionStatement(166)", "Delete Block(167)", "Delete MethodDeclaration(168)", "Delete Modifier: public(171)", "Delete PrimitiveType: void(172)", "Delete SimpleName: messageReceived(173)", "Delete Modifier: final(174)", "Delete SimpleName: IoSession(175)", "Delete SimpleType: IoSession(176)", "Delete SimpleName: session(177)", "Delete SingleVariableDeclaration(178)", "Delete Modifier: final(179)", "Delete SimpleName: message(182)", "Delete SingleVariableDeclaration(183)", "Delete Modifier: final(184)", "Delete SimpleName: ReadFilterChainController(185)", "Delete SimpleType: ReadFilterChainController(186)", "Delete SimpleName: controller(187)", "Delete SingleVariableDeclaration(188)", "Delete MethodDeclaration(206)", "Delete SimpleName: Override(207)", "Delete MarkerAnnotation(208)", "Delete Modifier: public(209)", "Delete PrimitiveType: void(210)", "Delete SimpleName: messageSent(211)", "Delete Modifier: final(212)", "Delete SimpleName: IoSession(213)", "Delete SimpleType: IoSession(214)", "Delete SimpleName: session(215)", "Delete SingleVariableDeclaration(216)", "Delete Modifier: final(217)", "Delete SimpleName: Object(218)", "Delete SimpleType: Object(219)", "Delete SimpleName: message(220)", "Delete SingleVariableDeclaration(221)", "Delete SimpleName: LOG(222)", "Delete SimpleName: info(223)", "Delete StringLiteral: \"message {} sent\"(224)", "Delete SimpleName: message(225)", "Delete MethodInvocation(226)", "Delete ExpressionStatement(227)", "Delete Block(228)", "Delete MethodDeclaration(229)", "Delete AnonymousClassDeclaration(230)", "Delete ClassInstanceCreation(231)"]}}], "commit_stats": [{"total_files": 9, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}