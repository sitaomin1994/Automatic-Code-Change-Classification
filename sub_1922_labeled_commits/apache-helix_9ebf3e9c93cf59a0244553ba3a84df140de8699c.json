{"application": "apache-helix", "csha": "9ebf3e9c93cf59a0244553ba3a84df140de8699c", "files": [{"HelixDataAccessor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: org.apache.helix.model.LiveInstance to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: org.apache.helix.model.Message to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: org.apache.helix.model.PauseSignal to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: org.apache.helix.model.StateModelDefinition to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 3", "operations": ["INS PrimitiveType: boolean to MethodDeclaration at 0", "INS SimpleName: createStateModelDef to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: interface at 3", "INS SimpleType: StateModelDefinition to SingleVariableDeclaration at 0", "INS SimpleName: StateModelDefinition to SimpleType: StateModelDefinition at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: stateModelDef to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 4", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 4", "INS PrimitiveType: boolean to MethodDeclaration at 0", "INS SimpleName: createControllerMessage to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleType: Message to SingleVariableDeclaration at 0", "INS SimpleName: message to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 5", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 5"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 6", "operations": ["INS SimpleName: createPause to MethodDeclaration at 1", "INS PrimitiveType: boolean to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: interface at 6"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: createProperty to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 2", "MOV PrimitiveType: boolean to MethodDeclaration at 0"]}, {"root": "UPDATE from createProperty to createControllerLeader", "operations": ["UPD SimpleName: createProperty from createProperty to createControllerLeader"]}, {"root": "UPDATE from PropertyKey to LiveInstance", "operations": ["UPD SimpleName: PropertyKey from PropertyKey to LiveInstance", "UPD SimpleType: PropertyKey from PropertyKey to LiveInstance"]}, {"root": "UPDATE from key to leader", "operations": ["UPD SimpleName: key from key to leader"]}, {"root": "UPDATE from T to PauseSignal", "operations": ["UPD SimpleType: T from T to PauseSignal", "UPD SimpleName: T from T to PauseSignal"]}, {"root": "UPDATE from value to pauseSignal", "operations": ["UPD SimpleName: value from value to pauseSignal"]}, {"root": "UPDATE from HelixProperty to Message", "operations": ["UPD SimpleName: HelixProperty from HelixProperty to Message"]}, {"root": "MOVE from SimpleType: Message", "operations": ["MOV SimpleName: HelixProperty to SimpleType: Message at 0"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TagElement", "DEL TagElement: @param", "DEL Javadoc", "DEL TagElement: @param", "DEL MethodDeclaration", "DEL TextElement: Create a helix property only if it does not exist.", "DEL TextElement:  true if creation was successful. False if already exists or if it", "DEL SimpleName: key", "DEL SimpleName: T", "DEL TypeParameter", "DEL TagElement: @return", "DEL SimpleType: HelixProperty", "DEL SimpleName: value", "DEL TextElement: failed to create"]}]}}, {"HelixDataAccessor_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(358) at 4", "Insert ImportDeclaration(11) into CompilationUnit(358) at 5", "Insert ImportDeclaration(13) into CompilationUnit(358) at 6", "Insert ImportDeclaration(15) into CompilationUnit(358) at 7", "Insert QualifiedName: org.apache.helix.model.LiveInstance(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.helix.model.Message(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.helix.model.PauseSignal(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: org.apache.helix.model.StateModelDefinition(14) into ImportDeclaration(15) at 0", "Insert MethodDeclaration(32) into TypeDeclaration: interface(357) at 3", "Insert MethodDeclaration(39) into TypeDeclaration: interface(357) at 4", "Insert MethodDeclaration(46) into TypeDeclaration: interface(357) at 5", "Insert MethodDeclaration(53) into TypeDeclaration: interface(357) at 6", "Insert PrimitiveType: boolean(26) into MethodDeclaration(32) at 0", "Insert SimpleName: createStateModelDef(27) into MethodDeclaration(32) at 1", "Insert SingleVariableDeclaration(31) into MethodDeclaration(32) at 2", "Insert PrimitiveType: boolean(33) into MethodDeclaration(39) at 0", "Insert SimpleName: createControllerMessage(34) into MethodDeclaration(39) at 1", "Insert SingleVariableDeclaration(38) into MethodDeclaration(39) at 2", "Move PrimitiveType: boolean(32) into MethodDeclaration(46) at 0", "Update SimpleName: createProperty(33) to createControllerLeader", "Move SimpleName: createProperty(33) into MethodDeclaration(46) at 1", "Move SingleVariableDeclaration(37) into MethodDeclaration(46) at 2", "Insert PrimitiveType: boolean(47) into MethodDeclaration(53) at 0", "Insert SimpleName: createPause(48) into MethodDeclaration(53) at 1", "Move SingleVariableDeclaration(41) into MethodDeclaration(53) at 2", "Insert SimpleType: StateModelDefinition(29) into SingleVariableDeclaration(31) at 0", "Insert SimpleName: stateModelDef(30) into SingleVariableDeclaration(31) at 1", "Insert SimpleType: Message(36) into SingleVariableDeclaration(38) at 0", "Insert SimpleName: message(37) into SingleVariableDeclaration(38) at 1", "Update SimpleType: PropertyKey(35) to LiveInstance", "Update SimpleName: key(36) to leader", "Update SimpleType: T(39) to PauseSignal", "Update SimpleName: value(40) to pauseSignal", "Insert SimpleName: StateModelDefinition(28) into SimpleType: StateModelDefinition(29) at 0", "Update SimpleName: HelixProperty(29) to Message", "Move SimpleName: HelixProperty(29) into SimpleType: Message(36) at 0", "Update SimpleName: PropertyKey(34) to LiveInstance", "Update SimpleName: T(38) to PauseSignal", "Delete TextElement: Create a helix property only if it does not exist.(18)", "Delete TagElement(19)", "Delete SimpleName: key(20)", "Delete TagElement: @param(21)", "Delete SimpleName: value(22)", "Delete TagElement: @param(23)", "Delete TextElement:  true if creation was successful. False if already exists or if it(24)", "Delete TextElement: failed to create(25)", "Delete TagElement: @return(26)", "Delete Javadoc(27)", "Delete SimpleName: T(28)", "Delete SimpleType: HelixProperty(30)", "Delete TypeParameter(31)", "Delete MethodDeclaration(42)"]}}, {"PropertyPathBuilder_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 34", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 34", "INS SimpleName: clusterName to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: messageId to MethodInvocation at 4", "INS SimpleName: controllerMessage to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: String to MethodInvocation at 0", "INS SimpleName: messageId to SingleVariableDeclaration at 1", "INS SimpleName: clusterName to MethodInvocation at 3", "INS SimpleName: format to MethodInvocation at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS StringLiteral: \"/%s/CONTROLLER/MESSAGES/%s\" to MethodInvocation at 2", "INS Block to MethodDeclaration at 6", "INS Modifier: static to MethodDeclaration at 1"]}]}}, {"PropertyPathBuilder_diff": {"operations": ["Insert MethodDeclaration(1269) into TypeDeclaration: class(1348) at 34", "Insert Modifier: public(1248) into MethodDeclaration(1269) at 0", "Insert Modifier: static(1249) into MethodDeclaration(1269) at 1", "Insert SimpleType: String(1251) into MethodDeclaration(1269) at 2", "Insert SimpleName: controllerMessage(1252) into MethodDeclaration(1269) at 3", "Insert SingleVariableDeclaration(1256) into MethodDeclaration(1269) at 4", "Insert SingleVariableDeclaration(1260) into MethodDeclaration(1269) at 5", "Insert Block(1268) into MethodDeclaration(1269) at 6", "Insert SimpleName: String(1250) into SimpleType: String(1251) at 0", "Insert SimpleType: String(1254) into SingleVariableDeclaration(1256) at 0", "Insert SimpleName: clusterName(1255) into SingleVariableDeclaration(1256) at 1", "Insert SimpleType: String(1258) into SingleVariableDeclaration(1260) at 0", "Insert SimpleName: messageId(1259) into SingleVariableDeclaration(1260) at 1", "Insert ReturnStatement(1267) into Block(1268) at 0", "Insert SimpleName: String(1253) into SimpleType: String(1254) at 0", "Insert SimpleName: String(1257) into SimpleType: String(1258) at 0", "Insert MethodInvocation(1266) into ReturnStatement(1267) at 0", "Insert SimpleName: String(1261) into MethodInvocation(1266) at 0", "Insert SimpleName: format(1262) into MethodInvocation(1266) at 1", "Insert StringLiteral: \"/%s/CONTROLLER/MESSAGES/%s\"(1263) into MethodInvocation(1266) at 2", "Insert SimpleName: clusterName(1264) into MethodInvocation(1266) at 3", "Insert SimpleName: messageId(1265) into MethodInvocation(1266) at 4"]}}, {"DistributedLeaderElection_cluster": {"actions": [{"root": "UPDATE from controllerLeader to createControllerLeader", "operations": ["UPD SimpleName: controllerLeader from controllerLeader to createControllerLeader"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: controllerLeader to MethodInvocation at 1"]}, {"root": "DEL SimpleName: createProperty", "operations": ["DEL SimpleName: createProperty"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: keyBuilder"]}]}}, {"DistributedLeaderElection_diff": {"operations": ["Update SimpleName: controllerLeader(392) to createControllerLeader", "Move SimpleName: controllerLeader(392) into MethodInvocation(392) at 1", "Delete SimpleName: createProperty(390)", "Delete SimpleName: keyBuilder(391)", "Delete MethodInvocation(393)"]}}, {"ZKHelixAdmin_cluster": {"actions": [{"root": "UPDATE from createProperty to createPause", "operations": ["UPD SimpleName: createProperty from createProperty to createPause"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.helix.model.HelixConfigScope.ConfigScopeProperty"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: pause", "DEL SimpleName: keyBuilder"]}]}}, {"ZKHelixAdmin_diff": {"operations": ["Update SimpleName: createProperty(1282) to createPause", "Delete QualifiedName: org.apache.helix.model.HelixConfigScope.ConfigScopeProperty(80)", "Delete ImportDeclaration(81)", "Delete SimpleName: keyBuilder(1283)", "Delete SimpleName: pause(1284)", "Delete MethodInvocation(1285)"]}}, {"ZKHelixDataAccessor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 17", "operations": ["INS QualifiedName: org.apache.helix.PropertyPathBuilder to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 17"]}, {"root": "INS ImportDeclaration to CompilationUnit at 23", "operations": ["INS ImportDeclaration to CompilationUnit at 23", "INS QualifiedName: org.apache.helix.model.LiveInstance to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 24", "operations": ["INS QualifiedName: org.apache.helix.model.Message to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 24"]}, {"root": "INS ImportDeclaration to CompilationUnit at 25", "operations": ["INS ImportDeclaration to CompilationUnit at 25", "INS QualifiedName: org.apache.helix.model.PauseSignal to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 26", "operations": ["INS ImportDeclaration to CompilationUnit at 26", "INS QualifiedName: org.apache.helix.model.StateModelDefinition to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: StateModelDefinition to SimpleType: StateModelDefinition at 0", "INS InfixExpression: && to ReturnStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: path to VariableDeclarationFragment at 0", "INS ReturnStatement to Block at 3", "INS SimpleName: stateModelDef to MethodInvocation at 1", "INS SimpleName: _clusterName to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: && at 1", "INS SimpleName: set to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleType: StateModelDefinition to ClassInstanceCreation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: _baseDataAccessor to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS QualifiedName: AccessOption.PERSISTENT to MethodInvocation at 4", "INS SimpleName: property to InfixExpression: != at 0", "INS VariableDeclarationStatement to Block at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS IfStatement to Block at 2", "INS IfStatement to Block at 0", "INS SimpleName: path to MethodInvocation at 2", "INS ReturnStatement to Block at 0", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to InfixExpression: && at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: PropertyPathBuilder to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: stateModelDef to MethodInvocation at 0", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: stateModelDef to MethodInvocation at 2", "INS SimpleName: isValid to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: _clusterName to MethodInvocation at 2", "INS SimpleType: Message to SingleVariableDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS MethodInvocation to ReturnStatement at 0", "INS Block to MethodDeclaration at 5", "INS ReturnStatement to Block at 0", "INS SimpleName: Message to SimpleType: Message at 0", "INS QualifiedName: AccessOption.PERSISTENT to MethodInvocation at 4", "INS SimpleName: controllerMessage to MethodInvocation at 1", "INS SimpleName: message to SingleVariableDeclaration at 1", "INS SimpleName: createControllerMessage to MethodDeclaration at 3", "INS SimpleName: getRecord to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS MarkerAnnotation to MethodDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS SimpleType: LiveInstance to SingleVariableDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: createControllerLeader to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: LiveInstance to SimpleType: LiveInstance at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: leader to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: create to MethodInvocation at 1", "INS SimpleName: _baseDataAccessor to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS SimpleName: PropertyPathBuilder to MethodInvocation at 0", "INS SimpleName: pause to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: getRecord to MethodInvocation at 1", "INS QualifiedName: AccessOption.PERSISTENT to MethodInvocation at 4", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS MethodInvocation to MethodInvocation at 3", "INS MethodInvocation to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: pauseSignal to MethodInvocation at 0", "INS SimpleName: pauseSignal to SingleVariableDeclaration at 1", "INS SimpleName: _clusterName to MethodInvocation at 2", "INS Block to MethodDeclaration at 5", "INS SimpleName: PauseSignal to SimpleType: PauseSignal at 0", "INS SimpleName: createPause to MethodDeclaration at 3", "INS SimpleType: PauseSignal to SingleVariableDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV PrimitiveType: boolean to MethodDeclaration at 2", "MOV Modifier: public to MethodDeclaration at 1", "MOV SimpleName: createProperty to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "UPDATE from createProperty to createStateModelDef", "operations": ["UPD SimpleName: createProperty from createProperty to createStateModelDef"]}, {"root": "UPDATE from PropertyKey to StateModelDefinition", "operations": ["UPD SimpleName: PropertyKey from PropertyKey to StateModelDefinition", "UPD SimpleType: PropertyKey from PropertyKey to StateModelDefinition"]}, {"root": "UPDATE from value to stateModelDef", "operations": ["UPD SimpleName: value from value to stateModelDef", "UPD SimpleName: key from key to stateModelDef", "UPD SimpleName: value from value to stateModelDef", "UPD SimpleName: key from key to stateModelDef"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: HelixProperty to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 2"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: PropertyPathBuilder to MethodInvocation at 0", "INS QualifiedName: AccessOption.EPHEMERAL to MethodInvocation at 4", "INS SimpleName: controllerLeader to MethodInvocation at 1", "INS SimpleName: create to MethodInvocation at 1", "INS SimpleName: _clusterName to MethodInvocation at 2", "INS SimpleName: getRecord to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: _baseDataAccessor to MethodInvocation at 0", "INS SimpleName: leader to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "UPDATE from path to property", "operations": ["UPD SimpleName: path from path to property", "UPD SimpleName: constructOptions from constructOptions to property"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS SimpleName: isValid to MethodInvocation at 1", "INS SimpleName: stateModelDef to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: && at 0", "INS InfixExpression: && to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS MethodInvocation to InfixExpression: && at 1", "INS QualifiedName: AccessOption.PERSISTENT to MethodInvocation at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: create to MethodInvocation at 1", "MOV SimpleName: options to MethodInvocation at 0", "MOV SimpleName: _baseDataAccessor to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 3", "MOV SimpleName: path to MethodInvocation at 0"]}, {"root": "UPDATE from key to getProperty", "operations": ["UPD SimpleName: key from key to getProperty"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS ClassInstanceCreation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: stateModelDef to MethodInvocation at 0", "INS SimpleName: _clusterName to ClassInstanceCreation at 1", "INS QualifiedName: PropertyKey.Builder to SimpleType: PropertyKey.Builder at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: PropertyKey.Builder to ClassInstanceCreation at 0", "INS SimpleName: stateModelDef to MethodInvocation at 1"]}, {"root": "UPDATE from path to PropertyPathBuilder", "operations": ["UPD SimpleName: path from path to PropertyPathBuilder"]}, {"root": "UPDATE from options to message", "operations": ["UPD SimpleName: options from options to message", "UPD SimpleName: value from value to message"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getType to MethodInvocation at 1", "MOV SimpleName: key to MethodInvocation at 0"]}, {"root": "UPDATE from getType to getId", "operations": ["UPD SimpleName: getType from getType to getId", "UPD SimpleName: getPath from getPath to getId"]}, {"root": "UPDATE from getRecord to getMsgId", "operations": ["UPD SimpleName: getRecord from getRecord to getMsgId"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getPath to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: create to MethodInvocation at 1", "MOV SimpleName: path to MethodInvocation at 2", "MOV MethodInvocation to MethodInvocation at 3", "MOV SimpleName: _baseDataAccessor to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: constructOptions to MethodInvocation at 0", "MOV SimpleName: type to MethodInvocation at 1"]}, {"root": "UPDATE from type to getRecord", "operations": ["UPD SimpleName: type from type to getRecord", "UPD SimpleName: isValid from isValid to getRecord"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: value to MethodInvocation at 0", "MOV SimpleName: isValid to MethodInvocation at 1"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: success", "DEL SimpleName: options", "DEL ExpressionStatement", "DEL Assignment: ="]}, {"root": "DEL SimpleName: success", "operations": ["DEL SimpleName: success"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL PrimitiveType: boolean", "DEL SwitchCase", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL BreakStatement", "DEL TypeParameter", "DEL VariableDeclarationFragment", "DEL SimpleType: T", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL SwitchCase", "DEL SimpleName: type", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: success", "DEL SimpleName: T", "DEL SimpleType: PropertyType", "DEL MethodInvocation", "DEL SimpleName: T", "DEL SimpleName: options", "DEL SimpleName: STATEMODELDEFS", "DEL MethodInvocation", "DEL SimpleName: PropertyType", "DEL BooleanLiteral: false", "DEL SimpleName: value", "DEL MethodInvocation", "DEL SimpleName: type", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL BreakStatement", "DEL Block", "DEL SimpleName: success", "DEL SwitchStatement", "DEL IfStatement"]}]}}, {"ZKHelixDataAccessor_diff": {"operations": ["Insert ImportDeclaration(35) into CompilationUnit(2249) at 17", "Insert ImportDeclaration(47) into CompilationUnit(2249) at 23", "Insert ImportDeclaration(49) into CompilationUnit(2249) at 24", "Insert ImportDeclaration(51) into CompilationUnit(2249) at 25", "Insert ImportDeclaration(53) into CompilationUnit(2249) at 26", "Insert QualifiedName: org.apache.helix.PropertyPathBuilder(34) into ImportDeclaration(35) at 0", "Insert QualifiedName: org.apache.helix.model.LiveInstance(46) into ImportDeclaration(47) at 0", "Insert QualifiedName: org.apache.helix.model.Message(48) into ImportDeclaration(49) at 0", "Insert QualifiedName: org.apache.helix.model.PauseSignal(50) into ImportDeclaration(51) at 0", "Insert QualifiedName: org.apache.helix.model.StateModelDefinition(52) into ImportDeclaration(53) at 0", "Insert MethodDeclaration(262) into TypeDeclaration: class(2248) at 12", "Insert MethodDeclaration(288) into TypeDeclaration: class(2248) at 13", "Insert MethodDeclaration(311) into TypeDeclaration: class(2248) at 14", "Insert MethodDeclaration(334) into TypeDeclaration: class(2248) at 15", "Move MarkerAnnotation(169) into MethodDeclaration(262) at 0", "Move Modifier: public(170) into MethodDeclaration(262) at 1", "Move PrimitiveType: boolean(175) into MethodDeclaration(262) at 2", "Update SimpleName: createProperty(176) to createStateModelDef", "Move SimpleName: createProperty(176) into MethodDeclaration(262) at 3", "Move SingleVariableDeclaration(180) into MethodDeclaration(262) at 4", "Insert Block(261) into MethodDeclaration(262) at 5", "Insert MarkerAnnotation(264) into MethodDeclaration(288) at 0", "Insert Modifier: public(265) into MethodDeclaration(288) at 1", "Insert PrimitiveType: boolean(266) into MethodDeclaration(288) at 2", "Insert SimpleName: createControllerMessage(267) into MethodDeclaration(288) at 3", "Insert SingleVariableDeclaration(271) into MethodDeclaration(288) at 4", "Insert Block(287) into MethodDeclaration(288) at 5", "Insert MarkerAnnotation(290) into MethodDeclaration(311) at 0", "Insert Modifier: public(291) into MethodDeclaration(311) at 1", "Insert PrimitiveType: boolean(292) into MethodDeclaration(311) at 2", "Insert SimpleName: createControllerLeader(293) into MethodDeclaration(311) at 3", "Insert SingleVariableDeclaration(297) into MethodDeclaration(311) at 4", "Insert Block(310) into MethodDeclaration(311) at 5", "Insert MarkerAnnotation(313) into MethodDeclaration(334) at 0", "Insert Modifier: public(314) into MethodDeclaration(334) at 1", "Insert PrimitiveType: boolean(315) into MethodDeclaration(334) at 2", "Insert SimpleName: createPause(316) into MethodDeclaration(334) at 3", "Insert SingleVariableDeclaration(320) into MethodDeclaration(334) at 4", "Insert Block(333) into MethodDeclaration(334) at 5", "Update SimpleType: PropertyKey(178) to StateModelDefinition", "Update SimpleName: key(179) to stateModelDef", "Insert VariableDeclarationStatement(198) into Block(261) at 0", "Move VariableDeclarationStatement(200) into Block(261) at 1", "Insert IfStatement(258) into Block(261) at 2", "Insert ReturnStatement(260) into Block(261) at 3", "Insert SimpleName: Override(263) into MarkerAnnotation(264) at 0", "Insert SimpleType: Message(269) into SingleVariableDeclaration(271) at 0", "Insert SimpleName: message(270) into SingleVariableDeclaration(271) at 1", "Insert ReturnStatement(286) into Block(287) at 0", "Insert SimpleName: Override(289) into MarkerAnnotation(290) at 0", "Insert SimpleType: LiveInstance(295) into SingleVariableDeclaration(297) at 0", "Insert SimpleName: leader(296) into SingleVariableDeclaration(297) at 1", "Move ReturnStatement(248) into Block(310) at 0", "Insert SimpleName: Override(312) into MarkerAnnotation(313) at 0", "Insert SimpleType: PauseSignal(318) into SingleVariableDeclaration(320) at 0", "Insert SimpleName: pauseSignal(319) into SingleVariableDeclaration(320) at 1", "Insert ReturnStatement(332) into Block(333) at 0", "Update SimpleName: PropertyKey(177) to StateModelDefinition", "Move SimpleType: String(194) into VariableDeclarationStatement(198) at 0", "Insert VariableDeclarationFragment(197) into VariableDeclarationStatement(198) at 1", "Move SimpleType: HelixProperty(173) into VariableDeclarationStatement(214) at 0", "Insert InfixExpression: !=(217) into IfStatement(258) at 0", "Insert Block(243) into IfStatement(258) at 1", "Move Block(230) into IfStatement(258) at 2", "Insert BooleanLiteral: true(259) into ReturnStatement(260) at 0", "Insert SimpleName: Message(268) into SimpleType: Message(269) at 0", "Insert MethodInvocation(285) into ReturnStatement(286) at 0", "Insert SimpleName: LiveInstance(294) into SimpleType: LiveInstance(295) at 0", "Insert MethodInvocation(308) into ReturnStatement(309) at 0", "Insert SimpleName: PauseSignal(317) into SimpleType: PauseSignal(318) at 0", "Insert MethodInvocation(331) into ReturnStatement(332) at 0", "Insert SimpleName: path(189) into VariableDeclarationFragment(197) at 0", "Insert MethodInvocation(196) into VariableDeclarationFragment(197) at 1", "Update SimpleName: path(195) to property", "Insert SimpleName: property(215) into InfixExpression: !=(217) at 0", "Insert NullLiteral(216) into InfixExpression: !=(217) at 1", "Insert IfStatement(242) into Block(243) at 0", "Insert ReturnStatement(256) into Block(257) at 0", "Move SimpleName: _baseDataAccessor(235) into MethodInvocation(285) at 0", "Move SimpleName: create(236) into MethodInvocation(285) at 1", "Insert MethodInvocation(280) into MethodInvocation(285) at 2", "Insert MethodInvocation(283) into MethodInvocation(285) at 3", "Insert QualifiedName: AccessOption.PERSISTENT(284) into MethodInvocation(285) at 4", "Insert SimpleName: _baseDataAccessor(298) into MethodInvocation(308) at 0", "Insert SimpleName: create(299) into MethodInvocation(308) at 1", "Insert MethodInvocation(303) into MethodInvocation(308) at 2", "Insert MethodInvocation(306) into MethodInvocation(308) at 3", "Insert QualifiedName: AccessOption.EPHEMERAL(307) into MethodInvocation(308) at 4", "Insert SimpleName: _baseDataAccessor(321) into MethodInvocation(331) at 0", "Insert SimpleName: create(322) into MethodInvocation(331) at 1", "Insert MethodInvocation(326) into MethodInvocation(331) at 2", "Insert MethodInvocation(329) into MethodInvocation(331) at 3", "Insert QualifiedName: AccessOption.PERSISTENT(330) into MethodInvocation(331) at 4", "Insert SimpleName: PropertyPathBuilder(190) into MethodInvocation(196) at 0", "Insert SimpleName: stateModelDef(191) into MethodInvocation(196) at 1", "Insert SimpleName: _clusterName(192) into MethodInvocation(196) at 2", "Insert MethodInvocation(195) into MethodInvocation(196) at 3", "Update SimpleName: key(196) to getProperty", "Insert MethodInvocation(211) into MethodInvocation(212) at 1", "Insert PrefixExpression: !(227) into IfStatement(242) at 0", "Insert Block(241) into IfStatement(242) at 1", "Insert InfixExpression: &&(255) into ReturnStatement(256) at 0", "Update SimpleName: path(237) to PropertyPathBuilder", "Move SimpleName: path(237) into MethodInvocation(280) at 0", "Insert SimpleName: controllerMessage(275) into MethodInvocation(280) at 1", "Insert SimpleName: _clusterName(276) into MethodInvocation(280) at 2", "Move MethodInvocation(240) into MethodInvocation(280) at 3", "Update SimpleName: options(241) to message", "Move SimpleName: options(241) into MethodInvocation(283) at 0", "Insert SimpleName: getRecord(282) into MethodInvocation(283) at 1", "Insert SimpleName: PropertyPathBuilder(300) into MethodInvocation(303) at 0", "Insert SimpleName: controllerLeader(301) into MethodInvocation(303) at 1", "Insert SimpleName: _clusterName(302) into MethodInvocation(303) at 2", "Insert SimpleName: leader(304) into MethodInvocation(306) at 0", "Insert SimpleName: getRecord(305) into MethodInvocation(306) at 1", "Insert SimpleName: PropertyPathBuilder(323) into MethodInvocation(326) at 0", "Insert SimpleName: pause(324) into MethodInvocation(326) at 1", "Insert SimpleName: _clusterName(325) into MethodInvocation(326) at 2", "Insert SimpleName: pauseSignal(327) into MethodInvocation(329) at 0", "Insert SimpleName: getRecord(328) into MethodInvocation(329) at 1", "Update SimpleName: key(188) to stateModelDef", "Move SimpleName: key(188) into MethodInvocation(195) at 0", "Update SimpleName: getType(189) to getId", "Move SimpleName: getType(189) into MethodInvocation(195) at 1", "Insert ClassInstanceCreation(206) into MethodInvocation(211) at 0", "Insert SimpleName: stateModelDef(207) into MethodInvocation(211) at 1", "Insert MethodInvocation(210) into MethodInvocation(211) at 2", "Insert MethodInvocation(226) into PrefixExpression: !(227) at 0", "Insert ReturnStatement(240) into Block(241) at 0", "Insert MethodInvocation(246) into InfixExpression: &&(255) at 0", "Insert MethodInvocation(254) into InfixExpression: &&(255) at 1", "Update SimpleName: value(238) to message", "Update SimpleName: getRecord(239) to getMsgId", "Insert SimpleType: PropertyKey.Builder(204) into ClassInstanceCreation(206) at 0", "Insert SimpleName: _clusterName(205) into ClassInstanceCreation(206) at 1", "Insert SimpleName: stateModelDef(208) into MethodInvocation(210) at 0", "Update SimpleName: getPath(197) to getId", "Move SimpleName: getPath(197) into MethodInvocation(210) at 1", "Insert ClassInstanceCreation(223) into MethodInvocation(226) at 0", "Insert SimpleName: equals(224) into MethodInvocation(226) at 1", "Insert SimpleName: stateModelDef(225) into MethodInvocation(226) at 2", "Insert InfixExpression: &&(239) into ReturnStatement(240) at 0", "Insert SimpleName: stateModelDef(244) into MethodInvocation(246) at 0", "Insert SimpleName: isValid(245) into MethodInvocation(246) at 1", "Move SimpleName: _baseDataAccessor(220) into MethodInvocation(254) at 0", "Move SimpleName: create(221) into MethodInvocation(254) at 1", "Move SimpleName: path(222) into MethodInvocation(254) at 2", "Move MethodInvocation(225) into MethodInvocation(254) at 3", "Insert QualifiedName: AccessOption.PERSISTENT(253) into MethodInvocation(254) at 4", "Insert QualifiedName: PropertyKey.Builder(203) into SimpleType: PropertyKey.Builder(204) at 0", "Insert SimpleType: StateModelDefinition(219) into ClassInstanceCreation(223) at 0", "Insert MethodInvocation(222) into ClassInstanceCreation(223) at 1", "Insert MethodInvocation(230) into InfixExpression: &&(239) at 0", "Insert MethodInvocation(238) into InfixExpression: &&(239) at 1", "Update SimpleName: value(223) to stateModelDef", "Insert SimpleName: StateModelDefinition(218) into SimpleType: StateModelDefinition(219) at 0", "Update SimpleName: constructOptions(203) to property", "Move SimpleName: constructOptions(203) into MethodInvocation(222) at 0", "Update SimpleName: type(204) to getRecord", "Move SimpleName: type(204) into MethodInvocation(222) at 1", "Insert SimpleName: stateModelDef(228) into MethodInvocation(230) at 0", "Insert SimpleName: isValid(229) into MethodInvocation(230) at 1", "Insert SimpleName: _baseDataAccessor(231) into MethodInvocation(238) at 0", "Insert SimpleName: set(232) into MethodInvocation(238) at 1", "Insert SimpleName: path(233) into MethodInvocation(238) at 2", "Insert MethodInvocation(236) into MethodInvocation(238) at 3", "Insert QualifiedName: AccessOption.PERSISTENT(237) into MethodInvocation(238) at 4", "Update SimpleName: value(216) to stateModelDef", "Move SimpleName: value(216) into MethodInvocation(236) at 0", "Update SimpleName: isValid(217) to getRecord", "Move SimpleName: isValid(217) into MethodInvocation(236) at 1", "Delete SimpleName: success(219)", "Delete SimpleName: options(226)", "Delete MethodInvocation(227)", "Delete Assignment: =(228)", "Delete ExpressionStatement(229)", "Delete SimpleName: success(247)", "Delete SimpleName: T(171)", "Delete TypeParameter(174)", "Delete SimpleName: T(181)", "Delete SimpleType: T(182)", "Delete SimpleName: value(183)", "Delete SingleVariableDeclaration(184)", "Delete SimpleName: PropertyType(185)", "Delete SimpleType: PropertyType(186)", "Delete SimpleName: type(187)", "Delete MethodInvocation(190)", "Delete VariableDeclarationFragment(191)", "Delete VariableDeclarationStatement(192)", "Delete PrimitiveType: int(201)", "Delete SimpleName: options(202)", "Delete MethodInvocation(205)", "Delete VariableDeclarationFragment(206)", "Delete VariableDeclarationStatement(207)", "Delete PrimitiveType: boolean(208)", "Delete SimpleName: success(209)", "Delete BooleanLiteral: false(210)", "Delete VariableDeclarationFragment(211)", "Delete VariableDeclarationStatement(212)", "Delete SimpleName: type(213)", "Delete SimpleName: STATEMODELDEFS(214)", "Delete SwitchCase(215)", "Delete MethodInvocation(218)", "Delete IfStatement(231)", "Delete BreakStatement(232)", "Delete SwitchCase(233)", "Delete SimpleName: success(234)", "Delete MethodInvocation(242)", "Delete Assignment: =(243)", "Delete ExpressionStatement(244)", "Delete BreakStatement(245)", "Delete SwitchStatement(246)", "Delete Block(249)", "Delete MethodDeclaration(250)"]}}, {"ZKHelixManager_cluster": {"actions": [{"root": "INS Block to EnhancedForStatement at 2", "operations": ["INS Block to EnhancedForStatement at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from _baseDataAccessor to _dataAccessor", "operations": ["UPD SimpleName: _baseDataAccessor from _baseDataAccessor to _dataAccessor"]}, {"root": "UPDATE from getStateModelDefinition to createStateModelDef", "operations": ["UPD SimpleName: getStateModelDefinition from getStateModelDefinition to createStateModelDef"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getStateModelDefinition to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "DEL SimpleName: set", "operations": ["DEL SimpleName: set"]}, {"root": "DEL SimpleName: path", "operations": ["DEL SimpleName: path"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: def", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getRecord"]}, {"root": "DEL QualifiedName: AccessOption.PERSISTENT", "operations": ["DEL QualifiedName: AccessOption.PERSISTENT"]}, {"root": "DEL Block", "operations": ["DEL QualifiedName: AccessOption.PERSISTENT", "DEL VariableDeclarationStatement", "DEL QualifiedName: PropertyKey.Builder", "DEL MethodInvocation", "DEL SimpleName: def", "DEL VariableDeclarationFragment", "DEL SimpleName: getRecord", "DEL SimpleName: String", "DEL SimpleName: property", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: property", "DEL SimpleName: def", "DEL Block", "DEL SimpleType: HelixProperty", "DEL MethodInvocation", "DEL SimpleName: HelixProperty", "DEL VariableDeclarationFragment", "DEL SimpleName: getId", "DEL SimpleName: getStateModelDefinition", "DEL SimpleName: format", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL SimpleName: getStateModelDefinition", "DEL MethodInvocation", "DEL SimpleName: _clusterName", "DEL MethodInvocation", "DEL SimpleName: equals", "DEL MethodInvocation", "DEL SimpleName: create", "DEL MethodInvocation", "DEL SimpleName: _clusterName", "DEL SimpleName: def", "DEL SimpleName: _baseDataAccessor", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleType: String", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: getStateModelDefinition", "DEL SimpleName: _dataAccessor", "DEL MethodInvocation", "DEL SimpleName: getProperty", "DEL Block", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL SimpleType: PropertyKey.Builder", "DEL SimpleName: property", "DEL SimpleName: getId", "DEL Block", "DEL IfStatement", "DEL StringLiteral: \"/%s/STATEMODELDEFS/%s\"", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: path", "DEL NullLiteral", "DEL SimpleName: getRecord", "DEL SimpleName: StateModelDefinition", "DEL InfixExpression: !=", "DEL SimpleName: stateModelDef", "DEL Block", "DEL SimpleName: path", "DEL SimpleType: StateModelDefinition"]}]}}, {"ZKHelixManager_diff": {"operations": ["Insert Block(1532) into EnhancedForStatement(1533) at 2", "Move ExpressionStatement(1584) into Block(1532) at 0", "Update SimpleName: _baseDataAccessor(1574) to _dataAccessor", "Update SimpleName: getStateModelDefinition(1578) to createStateModelDef", "Move SimpleName: getStateModelDefinition(1578) into MethodInvocation(1530) at 1", "Move MethodInvocation(1571) into MethodInvocation(1530) at 2", "Delete SimpleName: set(1575)", "Delete SimpleName: path(1576)", "Delete SimpleName: def(1577)", "Delete MethodInvocation(1579)", "Delete SimpleName: getRecord(1580)", "Delete MethodInvocation(1581)", "Delete QualifiedName: AccessOption.PERSISTENT(1582)", "Delete SimpleName: String(1525)", "Delete SimpleType: String(1526)", "Delete SimpleName: path(1527)", "Delete SimpleName: String(1528)", "Delete SimpleName: format(1529)", "Delete StringLiteral: \"/%s/STATEMODELDEFS/%s\"(1530)", "Delete SimpleName: _clusterName(1531)", "Delete SimpleName: def(1532)", "Delete SimpleName: getStateModelDefinition(1533)", "Delete MethodInvocation(1534)", "Delete SimpleName: getId(1535)", "Delete MethodInvocation(1536)", "Delete MethodInvocation(1537)", "Delete VariableDeclarationFragment(1538)", "Delete VariableDeclarationStatement(1539)", "Delete SimpleName: HelixProperty(1540)", "Delete SimpleType: HelixProperty(1541)", "Delete SimpleName: property(1542)", "Delete SimpleName: _dataAccessor(1543)", "Delete SimpleName: getProperty(1544)", "Delete QualifiedName: PropertyKey.Builder(1545)", "Delete SimpleType: PropertyKey.Builder(1546)", "Delete SimpleName: _clusterName(1547)", "Delete ClassInstanceCreation(1548)", "Delete SimpleName: stateModelDef(1549)", "Delete SimpleName: def(1550)", "Delete SimpleName: getStateModelDefinition(1551)", "Delete MethodInvocation(1552)", "Delete SimpleName: getId(1553)", "Delete MethodInvocation(1554)", "Delete MethodInvocation(1555)", "Delete MethodInvocation(1556)", "Delete VariableDeclarationFragment(1557)", "Delete VariableDeclarationStatement(1558)", "Delete SimpleName: property(1559)", "Delete NullLiteral(1560)", "Delete InfixExpression: !=(1561)", "Delete SimpleName: StateModelDefinition(1562)", "Delete SimpleType: StateModelDefinition(1563)", "Delete SimpleName: property(1564)", "Delete SimpleName: getRecord(1565)", "Delete MethodInvocation(1566)", "Delete ClassInstanceCreation(1567)", "Delete SimpleName: equals(1568)", "Delete MethodInvocation(1572)", "Delete PrefixExpression: !(1573)", "Delete Block(1585)", "Delete IfStatement(1586)", "Delete Block(1587)", "Delete SimpleName: _baseDataAccessor(1588)", "Delete SimpleName: create(1589)", "Delete SimpleName: path(1590)", "Delete SimpleName: def(1591)", "Delete SimpleName: getStateModelDefinition(1592)", "Delete MethodInvocation(1593)", "Delete SimpleName: getRecord(1594)", "Delete MethodInvocation(1595)", "Delete QualifiedName: AccessOption.PERSISTENT(1596)", "Delete MethodInvocation(1597)", "Delete ExpressionStatement(1598)", "Delete Block(1599)", "Delete IfStatement(1600)", "Delete Block(1601)"]}}], "commit_stats": [{"total_files": 9, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}