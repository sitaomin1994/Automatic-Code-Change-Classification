{"application": "apache-calcite", "csha": "316a05872b358e8388890c04dee48adc45812f71", "files": [{"MaterializedViewSubstitutionVisitor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: org.apache.calcite.rel.mutable.MutableFilter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: org.apache.calcite.rel.mutable.MutableProject to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.calcite.rel.mutable.MutableRel to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.calcite.rel.mutable.MutableRels to ImportDeclaration at 0"]}, {"root": "INS SimpleName: MutableProject to TagElement: @link at 0", "operations": ["INS SimpleName: MutableProject to TagElement: @link at 0"]}, {"root": "INS SimpleName: MutableProject to TagElement: @link at 0", "operations": ["INS SimpleName: MutableProject to TagElement: @link at 0"]}, {"root": "INS SimpleName: MutableFilter to TagElement: @link at 0", "operations": ["INS SimpleName: MutableFilter to TagElement: @link at 0"]}, {"root": "INS SimpleName: MutableFilter to TagElement: @link at 0", "operations": ["INS SimpleName: MutableFilter to TagElement: @link at 0"]}, {"root": "INS SimpleName: MutableFilter to TagElement: @link at 0", "operations": ["INS SimpleName: MutableFilter to TagElement: @link at 0"]}, {"root": "INS SimpleName: MutableProject to TagElement: @link at 0", "operations": ["INS SimpleName: MutableProject to TagElement: @link at 0"]}, {"root": "INS SimpleName: MutableFilter to TagElement: @link at 0", "operations": ["INS SimpleName: MutableFilter to TagElement: @link at 0"]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS FieldAccess to MethodInvocation at 0", "INS SimpleName: rowType to FieldAccess at 1"]}, {"root": "UPDATE from call.target to call.target.rowType", "operations": ["UPD QualifiedName: call.target from call.target to call.target.rowType", "UPD QualifiedName: call.target from call.target to call.target.rowType"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV QualifiedName: call.target to MethodInvocation at 0"]}, {"root": "INS QualifiedName: query.rowType to MethodInvocation at 2", "operations": ["INS QualifiedName: query.rowType to MethodInvocation at 2"]}, {"root": "INS QualifiedName: query.condition to MethodInvocation at 3", "operations": ["INS QualifiedName: query.condition to MethodInvocation at 3"]}, {"root": "INS QualifiedName: query.rowType to MethodInvocation at 0", "operations": ["INS QualifiedName: query.rowType to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV QualifiedName: call.target to MethodInvocation at 0"]}, {"root": "INS QualifiedName: query.rowType to MethodInvocation at 2", "operations": ["INS QualifiedName: query.rowType to MethodInvocation at 2"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV MethodInvocation to FieldAccess at 0"]}, {"root": "INS QualifiedName: query.projects to MethodInvocation at 1", "operations": ["INS QualifiedName: query.projects to MethodInvocation at 1"]}, {"root": "INS QualifiedName: query.rowType to MethodInvocation at 2", "operations": ["INS QualifiedName: query.rowType to MethodInvocation at 2"]}, {"root": "INS QualifiedName: filter.condition to MethodInvocation at 1", "operations": ["INS QualifiedName: filter.condition to MethodInvocation at 1"]}, {"root": "INS QualifiedName: innerFilter.condition to MethodInvocation at 1", "operations": ["INS QualifiedName: innerFilter.condition to MethodInvocation at 1"]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS FieldAccess to MethodInvocation at 0", "INS SimpleName: rowType to FieldAccess at 1"]}, {"root": "INS QualifiedName: target.rowType to MethodInvocation at 0", "operations": ["INS QualifiedName: target.rowType to MethodInvocation at 0"]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS FieldAccess to MethodInvocation at 0", "INS SimpleName: rowType to FieldAccess at 1"]}, {"root": "INS QualifiedName: target.rowType to MethodInvocation at 0", "operations": ["INS QualifiedName: target.rowType to MethodInvocation at 0"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV MethodInvocation to FieldAccess at 0"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV MethodInvocation to FieldAccess at 0"]}, {"root": "DEL QualifiedName: SubstitutionVisitor.MutableProject", "operations": ["DEL QualifiedName: SubstitutionVisitor.MutableProject"]}, {"root": "DEL QualifiedName: SubstitutionVisitor.MutableProject", "operations": ["DEL QualifiedName: SubstitutionVisitor.MutableProject"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getRowType"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getRowType"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: query", "DEL MethodInvocation", "DEL SimpleName: getProjects"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: query", "DEL SimpleName: getRowType"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: innerFilter", "DEL MethodInvocation", "DEL SimpleName: getCondition"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getRowType", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getRowType", "DEL MethodInvocation", "DEL SimpleName: target"]}, {"root": "DEL QualifiedName: SubstitutionVisitor.MutableFilter", "operations": ["DEL QualifiedName: SubstitutionVisitor.MutableFilter"]}, {"root": "DEL QualifiedName: SubstitutionVisitor.MutableFilter", "operations": ["DEL QualifiedName: SubstitutionVisitor.MutableFilter"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: query", "DEL MethodInvocation", "DEL SimpleName: getCondition"]}, {"root": "DEL QualifiedName: SubstitutionVisitor.MutableFilter", "operations": ["DEL QualifiedName: SubstitutionVisitor.MutableFilter"]}, {"root": "DEL QualifiedName: SubstitutionVisitor.MutableProject", "operations": ["DEL QualifiedName: SubstitutionVisitor.MutableProject"]}, {"root": "DEL QualifiedName: SubstitutionVisitor.MutableFilter", "operations": ["DEL QualifiedName: SubstitutionVisitor.MutableFilter"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: query", "DEL MethodInvocation", "DEL SimpleName: getRowType"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getRowType"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getRowType", "DEL SimpleName: query", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: query", "DEL SimpleName: getRowType"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getCondition", "DEL MethodInvocation", "DEL SimpleName: filter"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getRowType", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: target", "DEL SimpleName: getRowType", "DEL MethodInvocation"]}]}}, {"MaterializedViewSubstitutionVisitor_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(1030) at 2", "Insert ImportDeclaration(7) into CompilationUnit(1030) at 3", "Insert ImportDeclaration(9) into CompilationUnit(1030) at 4", "Insert ImportDeclaration(11) into CompilationUnit(1030) at 5", "Insert QualifiedName: org.apache.calcite.rel.mutable.MutableFilter(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: org.apache.calcite.rel.mutable.MutableProject(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: org.apache.calcite.rel.mutable.MutableRel(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.calcite.rel.mutable.MutableRels(10) into ImportDeclaration(11) at 0", "Insert SimpleName: MutableProject(101) into TagElement: @link(102) at 0", "Insert SimpleName: MutableProject(104) into TagElement: @link(105) at 0", "Insert SimpleName: MutableFilter(405) into TagElement: @link(406) at 0", "Insert SimpleName: MutableFilter(408) into TagElement: @link(409) at 0", "Insert SimpleName: MutableFilter(565) into TagElement: @link(566) at 0", "Insert SimpleName: MutableProject(568) into TagElement: @link(569) at 0", "Insert SimpleName: MutableFilter(571) into TagElement: @link(572) at 0", "Insert FieldAccess(189) into MethodInvocation(191) at 0", "Update QualifiedName: call.target(193) to call.target.rowType", "Move QualifiedName: call.target(193) into MethodInvocation(203) at 0", "Insert QualifiedName: query.rowType(238) into MethodInvocation(241) at 2", "Insert QualifiedName: query.condition(494) into MethodInvocation(495) at 3", "Insert QualifiedName: query.rowType(651) into MethodInvocation(653) at 0", "Update QualifiedName: call.target(669) to call.target.rowType", "Move QualifiedName: call.target(669) into MethodInvocation(665) at 0", "Insert QualifiedName: query.rowType(713) into MethodInvocation(716) at 2", "Move MethodInvocation(179) into FieldAccess(189) at 0", "Insert SimpleName: rowType(188) into FieldAccess(189) at 1", "Insert QualifiedName: query.projects(216) into MethodInvocation(219) at 1", "Insert QualifiedName: query.rowType(689) into MethodInvocation(690) at 2", "Insert QualifiedName: filter.condition(802) into MethodInvocation(813) at 1", "Insert QualifiedName: innerFilter.condition(342) into MethodInvocation(353) at 1", "Insert FieldAccess(807) into MethodInvocation(809) at 0", "Insert QualifiedName: target.rowType(810) into MethodInvocation(812) at 0", "Insert FieldAccess(347) into MethodInvocation(349) at 0", "Insert QualifiedName: target.rowType(350) into MethodInvocation(352) at 0", "Move MethodInvocation(819) into FieldAccess(807) at 0", "Insert SimpleName: rowType(806) into FieldAccess(807) at 1", "Move MethodInvocation(345) into FieldAccess(347) at 0", "Insert SimpleName: rowType(346) into FieldAccess(347) at 1", "Delete QualifiedName: SubstitutionVisitor.MutableProject(93)", "Delete QualifiedName: SubstitutionVisitor.MutableProject(96)", "Delete SimpleName: getRowType(180)", "Delete MethodInvocation(181)", "Delete SimpleName: getRowType(194)", "Delete MethodInvocation(195)", "Delete SimpleName: query(210)", "Delete SimpleName: getProjects(211)", "Delete MethodInvocation(212)", "Delete SimpleName: query(234)", "Delete SimpleName: getRowType(235)", "Delete MethodInvocation(236)", "Delete SimpleName: innerFilter(340)", "Delete SimpleName: getCondition(341)", "Delete MethodInvocation(342)", "Delete SimpleName: getRowType(346)", "Delete MethodInvocation(347)", "Delete SimpleName: target(350)", "Delete SimpleName: getRowType(351)", "Delete MethodInvocation(352)", "Delete QualifiedName: SubstitutionVisitor.MutableFilter(407)", "Delete QualifiedName: SubstitutionVisitor.MutableFilter(410)", "Delete SimpleName: query(496)", "Delete SimpleName: getCondition(497)", "Delete MethodInvocation(498)", "Delete QualifiedName: SubstitutionVisitor.MutableFilter(569)", "Delete QualifiedName: SubstitutionVisitor.MutableProject(572)", "Delete QualifiedName: SubstitutionVisitor.MutableFilter(575)", "Delete SimpleName: query(655)", "Delete SimpleName: getRowType(656)", "Delete MethodInvocation(657)", "Delete SimpleName: getRowType(670)", "Delete MethodInvocation(671)", "Delete SimpleName: query(697)", "Delete SimpleName: getRowType(698)", "Delete MethodInvocation(699)", "Delete SimpleName: query(723)", "Delete SimpleName: getRowType(724)", "Delete MethodInvocation(725)", "Delete SimpleName: filter(814)", "Delete SimpleName: getCondition(815)", "Delete MethodInvocation(816)", "Delete SimpleName: getRowType(820)", "Delete MethodInvocation(821)", "Delete SimpleName: target(824)", "Delete SimpleName: getRowType(825)", "Delete MethodInvocation(826)"]}}, {"SubstitutionVisitor_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 9", "MOV ImportDeclaration to CompilationUnit at 8", "MOV ImportDeclaration to CompilationUnit at 7", "MOV ImportDeclaration to CompilationUnit at 9"]}, {"root": "UPDATE from org.apache.calcite.rel.RelCollation to org.apache.calcite.rel.mutable.Holder", "operations": ["UPD QualifiedName: org.apache.calcite.rel.RelCollation from org.apache.calcite.rel.RelCollation to org.apache.calcite.rel.mutable.Holder"]}, {"root": "UPDATE from org.apache.calcite.rel.SingleRel to org.apache.calcite.rel.mutable.MutableAggregate", "operations": ["UPD QualifiedName: org.apache.calcite.rel.SingleRel from org.apache.calcite.rel.SingleRel to org.apache.calcite.rel.mutable.MutableAggregate"]}, {"root": "UPDATE from org.apache.calcite.rel.core.Filter to org.apache.calcite.rel.mutable.MutableFilter", "operations": ["UPD QualifiedName: org.apache.calcite.rel.core.Filter from org.apache.calcite.rel.core.Filter to org.apache.calcite.rel.mutable.MutableFilter"]}, {"root": "UPDATE from org.apache.calcite.rel.core.Project to org.apache.calcite.rel.mutable.MutableProject", "operations": ["UPD QualifiedName: org.apache.calcite.rel.core.Project from org.apache.calcite.rel.core.Project to org.apache.calcite.rel.mutable.MutableProject"]}, {"root": "UPDATE from org.apache.calcite.rel.core.Sort to org.apache.calcite.rel.mutable.MutableRel", "operations": ["UPD QualifiedName: org.apache.calcite.rel.core.Sort from org.apache.calcite.rel.core.Sort to org.apache.calcite.rel.mutable.MutableRel"]}, {"root": "UPDATE from org.apache.calcite.rel.core.TableScan to org.apache.calcite.rel.mutable.MutableRelVisitor", "operations": ["UPD QualifiedName: org.apache.calcite.rel.core.TableScan from org.apache.calcite.rel.core.TableScan to org.apache.calcite.rel.mutable.MutableRelVisitor"]}, {"root": "UPDATE from org.apache.calcite.rel.core.Values to org.apache.calcite.rel.mutable.MutableRels", "operations": ["UPD QualifiedName: org.apache.calcite.rel.core.Values from org.apache.calcite.rel.core.Values to org.apache.calcite.rel.mutable.MutableRels"]}, {"root": "UPDATE from org.apache.calcite.rel.logical.LogicalJoin to org.apache.calcite.rel.mutable.MutableScan", "operations": ["UPD QualifiedName: org.apache.calcite.rel.logical.LogicalJoin from org.apache.calcite.rel.logical.LogicalJoin to org.apache.calcite.rel.mutable.MutableScan"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 29", "MOV MethodDeclaration to TypeDeclaration: class at 79", "MOV MethodDeclaration to TypeDeclaration: class at 30"]}, {"root": "INS QualifiedName: target.projects to EnhancedForStatement at 1", "operations": ["INS QualifiedName: target.projects to EnhancedForStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: RexImplicationChecker to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleName: MutableRels to MethodInvocation at 0", "operations": ["INS SimpleName: MutableRels to MethodInvocation at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: MutableProject to VariableDeclarationStatement at 1"]}, {"root": "INS QualifiedName: query.groupSet to MethodInvocation at 0", "operations": ["INS QualifiedName: query.groupSet to MethodInvocation at 0"]}, {"root": "INS QualifiedName: target.groupSet to MethodInvocation at 3", "operations": ["INS QualifiedName: target.groupSet to MethodInvocation at 3"]}, {"root": "INS QualifiedName: query.rowType to MethodInvocation at 3", "operations": ["INS QualifiedName: query.rowType to MethodInvocation at 3"]}, {"root": "INS FieldAccess to MethodInvocation at 2", "operations": ["INS FieldAccess to MethodInvocation at 2", "INS SimpleName: condition to FieldAccess at 1"]}, {"root": "INS FieldAccess to MethodInvocation at 3", "operations": ["INS FieldAccess to MethodInvocation at 3", "INS SimpleName: condition to FieldAccess at 1"]}, {"root": "INS QualifiedName: rel0.rowType to MethodInvocation at 3", "operations": ["INS QualifiedName: rel0.rowType to MethodInvocation at 3"]}, {"root": "INS QualifiedName: rel1.rowType to MethodInvocation at 6", "operations": ["INS QualifiedName: rel1.rowType to MethodInvocation at 6"]}, {"root": "INS SimpleName: MutableRels to MethodInvocation at 0", "operations": ["INS SimpleName: MutableRels to MethodInvocation at 0"]}, {"root": "INS SimpleName: MutableRels to MethodInvocation at 0", "operations": ["INS SimpleName: MutableRels to MethodInvocation at 0"]}, {"root": "INS SimpleName: MutableRels to MethodInvocation at 0", "operations": ["INS SimpleName: MutableRels to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: getInput to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: query to MethodInvocation at 0"]}, {"root": "INS QualifiedName: model.rowType to MethodInvocation at 0", "operations": ["INS QualifiedName: model.rowType to MethodInvocation at 0"]}, {"root": "INS QualifiedName: project.projects to MethodInvocation at 2", "operations": ["INS QualifiedName: project.projects to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to InstanceofExpression at 0", "operations": ["INS SimpleName: getParent to MethodInvocation at 1", "INS MethodInvocation to InstanceofExpression at 0", "INS QualifiedName: call.query to MethodInvocation at 0"]}, {"root": "INS QualifiedName: aggregate.groupSet to MethodInvocation at 3", "operations": ["INS QualifiedName: aggregate.groupSet to MethodInvocation at 3"]}, {"root": "INS QualifiedName: aggregate.groupSets to MethodInvocation at 3", "operations": ["INS QualifiedName: aggregate.groupSets to MethodInvocation at 3"]}, {"root": "INS QualifiedName: aggregate.aggCalls to MethodInvocation at 2", "operations": ["INS QualifiedName: aggregate.aggCalls to MethodInvocation at 2"]}, {"root": "INS QualifiedName: query.aggCalls to EnhancedForStatement at 1", "operations": ["INS QualifiedName: query.aggCalls to EnhancedForStatement at 1"]}, {"root": "INS QualifiedName: query.groupSet to EnhancedForStatement at 1", "operations": ["INS QualifiedName: query.groupSet to EnhancedForStatement at 1"]}, {"root": "INS QualifiedName: query.aggCalls to EnhancedForStatement at 1", "operations": ["INS QualifiedName: query.aggCalls to EnhancedForStatement at 1"]}, {"root": "INS QualifiedName: rel.rowType to MethodInvocation at 0", "operations": ["INS QualifiedName: rel.rowType to MethodInvocation at 0"]}, {"root": "INS QualifiedName: rel0.rowType to MethodInvocation at 3", "operations": ["INS QualifiedName: rel0.rowType to MethodInvocation at 3"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: RexImplicationChecker to ClassInstanceCreation at 0"]}, {"root": "INS QualifiedName: rel.rowType to ClassInstanceCreation at 3", "operations": ["INS QualifiedName: rel.rowType to ClassInstanceCreation at 3"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV ParenthesizedExpression to FieldAccess at 0"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV ParenthesizedExpression to FieldAccess at 0"]}, {"root": "INS SimpleName: MutableRels to MethodInvocation at 0", "operations": ["INS SimpleName: MutableRels to MethodInvocation at 0"]}, {"root": "INS SimpleName: MutableRels to MethodInvocation at 0", "operations": ["INS SimpleName: MutableRels to MethodInvocation at 0"]}, {"root": "INS QualifiedName: query.rowType to MethodInvocation at 2", "operations": ["INS QualifiedName: query.rowType to MethodInvocation at 2"]}, {"root": "INS QualifiedName: query.rowType to MethodInvocation at 2", "operations": ["INS QualifiedName: query.rowType to MethodInvocation at 2"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1"]}, {"root": "INS QualifiedName: project.projects to MethodInvocation at 0", "operations": ["INS QualifiedName: project.projects to MethodInvocation at 0"]}, {"root": "INS QualifiedName: model.rowType to MethodInvocation at 0", "operations": ["INS QualifiedName: model.rowType to MethodInvocation at 0"]}, {"root": "INS QualifiedName: query.condition to MethodInvocation at 2", "operations": ["INS QualifiedName: query.condition to MethodInvocation at 2"]}, {"root": "INS QualifiedName: target.condition to MethodInvocation at 3", "operations": ["INS QualifiedName: target.condition to MethodInvocation at 3"]}, {"root": "INS QualifiedName: target.groupSet to MethodInvocation at 0", "operations": ["INS QualifiedName: target.groupSet to MethodInvocation at 0"]}, {"root": "INS QualifiedName: query.groupSet to MethodInvocation at 3", "operations": ["INS QualifiedName: query.groupSet to MethodInvocation at 3"]}, {"root": "INS SimpleName: MutableRels to MethodInvocation at 0", "operations": ["INS SimpleName: MutableRels to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: query to MethodInvocation at 0", "INS SimpleName: getInput to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to InstanceofExpression at 0", "operations": ["INS SimpleName: query to MethodInvocation at 0", "INS MethodInvocation to InstanceofExpression at 0", "INS SimpleName: getParent to MethodInvocation at 1"]}, {"root": "MOVE from InstanceofExpression", "operations": ["MOV SimpleType: MutableProject to InstanceofExpression at 1"]}, {"root": "INS QualifiedName: query.groupSet to MethodInvocation at 0", "operations": ["INS QualifiedName: query.groupSet to MethodInvocation at 0"]}, {"root": "INS QualifiedName: target.groupSet to MethodInvocation at 0", "operations": ["INS QualifiedName: target.groupSet to MethodInvocation at 0"]}, {"root": "INS QualifiedName: query.projects to MethodInvocation at 2", "operations": ["INS QualifiedName: query.projects to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: getParent to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from call.query.parent to call.query", "operations": ["UPD QualifiedName: call.query.parent from call.query.parent to call.query"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV QualifiedName: call.query.parent to MethodInvocation at 0"]}, {"root": "INS QualifiedName: target.aggCalls to MethodInvocation at 0", "operations": ["INS QualifiedName: target.aggCalls to MethodInvocation at 0"]}, {"root": "INS QualifiedName: target.aggCalls to MethodInvocation at 0", "operations": ["INS QualifiedName: target.aggCalls to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS QualifiedName: query.rowType to MethodInvocation at 2", "operations": ["INS QualifiedName: query.rowType to MethodInvocation at 2"]}, {"root": "INS QualifiedName: query.condition to MethodInvocation at 0", "operations": ["INS QualifiedName: query.condition to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: getParent to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: query to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to CastExpression at 1", "operations": ["INS MethodInvocation to CastExpression at 1", "INS SimpleName: getParent to MethodInvocation at 1", "INS SimpleName: query to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: getInput to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: query to MethodInvocation at 0"]}, {"root": "INS SimpleName: clone to MethodInvocation at 2", "operations": ["INS SimpleName: clone to MethodInvocation at 2"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.calcite.avatica.util.Spaces", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.calcite.rel.core.CorrelationId"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.calcite.rel.core.Join", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.calcite.rel.core.JoinRelType"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.calcite.rel.logical.LogicalAggregate", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.calcite.rel.logical.LogicalSort", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.calcite.rel.logical.LogicalUnion", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.calcite.sql.validate.SqlValidatorUtil", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.base.Equivalence"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.collect.ImmutableSet", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.AbstractList"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Collections", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Objects"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: hashCode", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleType: Object", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL Modifier: protected", "DEL SimpleName: o", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL SimpleName: Object", "DEL Modifier: private", "DEL SimpleName: o", "DEL MarkerAnnotation", "DEL SimpleName: o", "DEL SimpleName: o", "DEL SimpleName: doEquivalent", "DEL SimpleName: toString", "DEL MethodInvocation", "DEL SimpleName: Equivalence", "DEL SingleVariableDeclaration", "DEL Modifier: static", "DEL AnonymousClassDeclaration", "DEL TagElement", "DEL MethodInvocation", "DEL MarkerAnnotation", "DEL SimpleName: Object", "DEL Javadoc", "DEL FieldDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: o2", "DEL TagElement: @link", "DEL SimpleName: toString", "DEL SimpleType: Object", "DEL SimpleName: Override", "DEL SimpleType: Equivalence", "DEL SimpleName: Equivalence", "DEL Block", "DEL SimpleName: Override", "DEL ParameterizedType: Equivalence<Object>", "DEL MethodRef", "DEL Modifier: protected", "DEL TextElement: Equivalence that compares objects by their ", "DEL SimpleType: Object", "DEL SimpleType: Equivalence", "DEL Modifier: final", "DEL Block", "DEL SimpleName: equals", "DEL ClassInstanceCreation", "DEL SimpleName: o2", "DEL SimpleName: Object", "DEL SimpleName: doHash", "DEL SimpleName: Object", "DEL PrimitiveType: boolean", "DEL SimpleName: Object", "DEL TextElement: method. ", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: STRING_EQUIVALENCE", "DEL SimpleType: Object", "DEL SimpleName: toString", "DEL SimpleName: Object", "DEL PrimitiveType: int", "DEL ReturnStatement", "DEL SimpleName: toString", "DEL ParameterizedType: Equivalence<Object>", "DEL SimpleType: Object"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL StringLiteral: \"unchecked\"", "DEL SimpleName: Object", "DEL SimpleType: List", "DEL WildcardType: ?", "DEL Modifier: static", "DEL CastExpression", "DEL SimpleName: Lists", "DEL TextElement: s by the", "DEL SimpleName: toString", "DEL ParameterizedType: List<?>", "DEL SimpleName: List", "DEL VariableDeclarationFragment", "DEL SimpleName: Equivalence", "DEL Javadoc", "DEL MethodRef", "DEL SimpleType: Equivalence", "DEL TextElement:  of their elements. ", "DEL SimpleName: Equivalence", "DEL SimpleName: SuppressWarnings", "DEL TagElement: @link", "DEL SimpleType: Equivalence", "DEL ParameterizedType: Equivalence<List<?>>", "DEL SimpleName: PAIRWISE_STRING_EQUIVALENCE", "DEL TagElement: @link", "DEL Modifier: private", "DEL TextElement: Equivalence that compares ", "DEL Modifier: final", "DEL SimpleName: pairwise", "DEL SimpleName: STRING_EQUIVALENCE", "DEL TagElement", "DEL SingleMemberAnnotation", "DEL MethodInvocation", "DEL FieldDeclaration"]}, {"root": "DEL QualifiedName: node.parent", "operations": ["DEL QualifiedName: node.parent"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: aggregate", "DEL MethodInvocation", "DEL SimpleName: rel", "DEL SimpleName: input", "DEL MethodInvocation", "DEL SimpleName: getRight", "DEL SimpleType: Join", "DEL SimpleName: input", "DEL SimpleName: MutableFilter", "DEL SimpleName: aggregate", "DEL MethodInvocation", "DEL SimpleName: MutableSort", "DEL SimpleType: RuntimeException", "DEL SimpleName: getAggCallList", "DEL Modifier: private", "DEL SimpleType: MutableRel", "DEL SimpleName: Values", "DEL SimpleName: getGroupSet", "DEL CastExpression", "DEL SimpleName: toMutable", "DEL SimpleName: toMutable", "DEL Block", "DEL Modifier: final", "DEL MethodInvocation", "DEL StringLiteral: \" to MutableRel\"", "DEL ReturnStatement", "DEL SimpleType: MutableRel", "DEL Block", "DEL SimpleName: input", "DEL SimpleName: TableScan", "DEL Block", "DEL SimpleName: getFieldNames", "DEL SimpleName: rel", "DEL SimpleName: rel", "DEL IfStatement", "DEL SimpleName: right", "DEL CastExpression", "DEL SimpleName: getRowType", "DEL IfStatement", "DEL SimpleName: Aggregate", "DEL SimpleName: getLeft", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: MutableRel", "DEL SimpleName: join", "DEL SimpleName: MutableScan", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Block", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: RuntimeException", "DEL InstanceofExpression", "DEL SimpleName: getInput", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: Join", "DEL SimpleName: Sort", "DEL SimpleName: rel", "DEL SimpleName: Filter", "DEL MethodInvocation", "DEL SimpleName: MutableRel", "DEL SimpleName: getVariablesSet", "DEL VariableDeclarationStatement", "DEL SimpleName: project", "DEL SimpleName: join", "DEL SimpleName: join", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleType: MutableRel", "DEL SimpleType: Aggregate", "DEL SimpleName: MutableRel", "DEL Modifier: final", "DEL SimpleName: toMutable", "DEL SimpleName: rel", "DEL SimpleName: Project", "DEL SimpleName: input", "DEL SimpleName: rel", "DEL MethodInvocation", "DEL SimpleName: of", "DEL IfStatement", "DEL SimpleName: sort", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleType: Project", "DEL Modifier: final", "DEL SimpleName: aggregate", "DEL SimpleName: Sort", "DEL IfStatement", "DEL SimpleName: toMutable", "DEL SimpleName: MutableRel", "DEL VariableDeclarationFragment", "DEL SimpleName: toMutable", "DEL SimpleName: of", "DEL VariableDeclarationStatement", "DEL SimpleName: getProjects", "DEL SimpleName: getGroupSets", "DEL VariableDeclarationStatement", "DEL SimpleName: getCondition", "DEL Block", "DEL SimpleName: rel", "DEL ReturnStatement", "DEL SimpleName: project", "DEL Modifier: final", "DEL SimpleName: input", "DEL SimpleName: rel", "DEL VariableDeclarationFragment", "DEL SimpleName: MutableJoin", "DEL MethodInvocation", "DEL SimpleType: MutableRel", "DEL InstanceofExpression", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: getCondition", "DEL SimpleName: rel", "DEL SimpleName: getInput", "DEL SimpleName: input", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL ReturnStatement", "DEL QualifiedName: sort.fetch", "DEL SimpleName: Sort", "DEL SimpleName: input", "DEL VariableDeclarationFragment", "DEL SimpleType: Values", "DEL SimpleName: join", "DEL SimpleType: Filter", "DEL SimpleName: join", "DEL SimpleType: Filter", "DEL SimpleName: project", "DEL CastExpression", "DEL MethodInvocation", "DEL SimpleName: Join", "DEL SimpleName: Aggregate", "DEL VariableDeclarationFragment", "DEL SimpleName: join", "DEL StringLiteral: \"cannot translate \"", "DEL SimpleName: sort", "DEL CastExpression", "DEL SimpleName: MutableRel", "DEL SimpleType: Project", "DEL Modifier: final", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: Aggregate", "DEL SimpleName: project", "DEL SimpleName: RelNode", "DEL MethodDeclaration", "DEL SimpleType: Project", "DEL SimpleType: Sort", "DEL InstanceofExpression", "DEL QualifiedName: sort.offset", "DEL InstanceofExpression", "DEL InfixExpression: +", "DEL SimpleName: rel", "DEL ReturnStatement", "DEL Modifier: final", "DEL SimpleType: RelNode", "DEL MethodInvocation", "DEL QualifiedName: aggregate.indicator", "DEL MethodInvocation", "DEL SimpleName: Project", "DEL MethodInvocation", "DEL SimpleName: sort", "DEL SimpleName: rel", "DEL SimpleName: MutableRel", "DEL Modifier: final", "DEL SimpleName: rel", "DEL MethodInvocation", "DEL SimpleName: TableScan", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleName: getJoinType", "DEL SimpleName: input", "DEL CastExpression", "DEL SimpleType: TableScan", "DEL SimpleType: Join", "DEL SimpleName: Values", "DEL SimpleName: getInput", "DEL SimpleType: MutableRel", "DEL SimpleName: Filter", "DEL ThrowStatement", "DEL CastExpression", "DEL VariableDeclarationFragment", "DEL SimpleName: left", "DEL Modifier: final", "DEL SimpleName: of", "DEL SimpleName: filter", "DEL SimpleType: Join", "DEL SimpleType: Sort", "DEL SimpleName: MutableValues", "DEL VariableDeclarationStatement", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: aggregate", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: left", "DEL SimpleType: Filter", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleType: MutableRel", "DEL Modifier: final", "DEL InstanceofExpression", "DEL SimpleName: toMutable", "DEL SimpleName: rel", "DEL SimpleName: MutableAggregate", "DEL SimpleType: MutableRel", "DEL SimpleName: rel", "DEL SimpleName: join", "DEL Modifier: static", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL SimpleName: getInput", "DEL SimpleName: rel", "DEL IfStatement", "DEL SimpleName: of", "DEL InstanceofExpression", "DEL ReturnStatement", "DEL SimpleName: Filter", "DEL VariableDeclarationFragment", "DEL SimpleName: right", "DEL SimpleName: getCollation", "DEL VariableDeclarationStatement", "DEL SimpleName: Join", "DEL SimpleName: MutableRel", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: rel", "DEL SimpleType: Aggregate", "DEL MethodInvocation", "DEL SimpleName: toMutable", "DEL Modifier: final", "DEL InstanceofExpression", "DEL SimpleName: of", "DEL SimpleName: filter", "DEL SimpleType: Aggregate", "DEL SimpleType: Sort", "DEL SimpleName: Project", "DEL IfStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: TableScan", "DEL SimpleName: MutableProject", "DEL SimpleName: aggregate", "DEL SimpleName: of", "DEL SimpleType: Values", "DEL SimpleName: filter", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: of", "DEL SimpleName: getCluster", "DEL CastExpression", "DEL Modifier: final"]}, {"root": "DEL SimpleName: MutableRels", "operations": ["DEL SimpleName: MutableRels"]}, {"root": "DEL QualifiedName: query.input", "operations": ["DEL QualifiedName: query.input"]}, {"root": "DEL SimpleName: MutableRels", "operations": ["DEL SimpleName: MutableRels"]}, {"root": "DEL SimpleName: MutableRels", "operations": ["DEL SimpleName: MutableRels"]}, {"root": "DEL QualifiedName: query.input", "operations": ["DEL QualifiedName: query.input"]}, {"root": "DEL SimpleName: copyMutable", "operations": ["DEL SimpleName: copyMutable"]}, {"root": "DEL Modifier: private", "operations": ["DEL Modifier: private"]}, {"root": "DEL QualifiedName: query.input", "operations": ["DEL QualifiedName: query.input"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: static", "DEL SimpleName: Function", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL SimpleName: MutableRel", "DEL SimpleType: RelNode", "DEL SimpleName: MutableRel", "DEL ParameterizedType: List<MutableRel>", "DEL SimpleName: transform", "DEL ClassInstanceCreation", "DEL SimpleName: List", "DEL SimpleName: MutableRel", "DEL ParameterizedType: Function<MutableRel,RelNode>", "DEL Block", "DEL AnonymousClassDeclaration", "DEL SimpleType: MutableRel", "DEL SimpleName: fromMutable", "DEL SimpleType: RelNode", "DEL SimpleType: List", "DEL SimpleName: Lists", "DEL Modifier: public", "DEL SimpleType: MutableRel", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL SimpleName: fromMutables", "DEL SimpleName: List", "DEL SimpleName: apply", "DEL SimpleName: mutableRel", "DEL SimpleType: RelNode", "DEL MethodInvocation", "DEL SimpleName: RelNode", "DEL ParameterizedType: List<RelNode>", "DEL SimpleType: List", "DEL MethodInvocation", "DEL SimpleName: nodes", "DEL SingleVariableDeclaration", "DEL SimpleName: nodes", "DEL SingleVariableDeclaration", "DEL SimpleName: RelNode", "DEL SimpleType: MutableRel", "DEL SimpleType: Function", "DEL SimpleName: RelNode", "DEL Block", "DEL SimpleName: mutableRel", "DEL Modifier: private"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: getCondition", "DEL SimpleName: PROJECT", "DEL SimpleName: fromMutable", "DEL SimpleName: MutableLeafRel", "DEL SimpleType: RelNode", "DEL SimpleName: fromMutable", "DEL QualifiedName: aggregate.input", "DEL VariableDeclarationFragment", "DEL SimpleName: LogicalJoin", "DEL SimpleName: node", "DEL SimpleName: node", "DEL SimpleName: project", "DEL CastExpression", "DEL SimpleType: MutableSort", "DEL SimpleName: node", "DEL QualifiedName: sort.input", "DEL MethodInvocation", "DEL QualifiedName: aggregate.indicator", "DEL SimpleName: getVariablesSet", "DEL SimpleName: aggregate", "DEL Modifier: private", "DEL VariableDeclarationStatement", "DEL Modifier: final", "DEL QualifiedName: project.input", "DEL SwitchCase", "DEL MethodInvocation", "DEL SwitchCase", "DEL SimpleType: MutableUnion", "DEL ParenthesizedExpression", "DEL SimpleName: node", "DEL QualifiedName: union.inputs", "DEL VariableDeclarationFragment", "DEL SimpleName: fromMutable", "DEL SimpleType: MutableUnion", "DEL QualifiedName: project.projects", "DEL SimpleName: LogicalAggregate", "DEL SwitchCase", "DEL SimpleName: MutableFilter", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: MutableJoin", "DEL SimpleName: MutableRel", "DEL SimpleName: node", "DEL SimpleName: join", "DEL SimpleName: join", "DEL ReturnStatement", "DEL QualifiedName: union.all", "DEL SwitchCase", "DEL SimpleName: fromMutable", "DEL ThrowStatement", "DEL SimpleName: join", "DEL SimpleName: create", "DEL SimpleName: AssertionError", "DEL SimpleType: MutableJoin", "DEL Modifier: final", "DEL MethodInvocation", "DEL SwitchCase", "DEL VariableDeclarationFragment", "DEL CastExpression", "DEL MethodInvocation", "DEL SimpleName: node", "DEL SimpleName: LogicalProject", "DEL SimpleName: sort", "DEL SimpleName: fromMutable", "DEL ReturnStatement", "DEL SimpleName: fromMutable", "DEL QualifiedName: filter.condition", "DEL CastExpression", "DEL SimpleName: join", "DEL Modifier: final", "DEL SimpleName: MutableJoin", "DEL MethodInvocation", "DEL SimpleName: LogicalFilter", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: MutableAggregate", "DEL QualifiedName: aggregate.groupSets", "DEL SimpleName: MutableProject", "DEL SimpleType: MutableFilter", "DEL SimpleName: node", "DEL VariableDeclarationFragment", "DEL SimpleType: MutableRel", "DEL SimpleName: create", "DEL Modifier: final", "DEL MethodDeclaration", "DEL SwitchStatement", "DEL CastExpression", "DEL Modifier: final", "DEL SwitchCase", "DEL SimpleName: fromMutables", "DEL SwitchCase", "DEL SimpleName: node", "DEL SimpleName: RelNode", "DEL SimpleName: join", "DEL SimpleName: SCAN", "DEL Modifier: final", "DEL MethodInvocation", "DEL SimpleType: AssertionError", "DEL SimpleName: fromMutable", "DEL SimpleName: filter", "DEL SwitchCase", "DEL VariableDeclarationFragment", "DEL SimpleType: MutableJoin", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: LogicalSort", "DEL MethodInvocation", "DEL SimpleName: AGGREGATE", "DEL CastExpression", "DEL SimpleName: SORT", "DEL FieldAccess", "DEL ReturnStatement", "DEL SimpleName: UNION", "DEL SimpleName: create", "DEL SimpleName: join", "DEL SimpleName: create", "DEL SimpleName: FILTER", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL QualifiedName: project.rowType", "DEL SimpleName: getRight", "DEL VariableDeclarationStatement", "DEL ReturnStatement", "DEL SimpleName: MutableProject", "DEL QualifiedName: sort.fetch", "DEL MethodInvocation", "DEL SimpleName: rel", "DEL QualifiedName: filter.input", "DEL VariableDeclarationStatement", "DEL SimpleType: MutableFilter", "DEL SimpleType: MutableAggregate", "DEL SimpleName: VALUES", "DEL QualifiedName: sort.offset", "DEL SwitchCase", "DEL SimpleName: MutableAggregate", "DEL SimpleName: MutableUnion", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: getJoinType", "DEL QualifiedName: aggregate.aggCalls", "DEL SimpleName: getLeft", "DEL SimpleName: create", "DEL SimpleName: node", "DEL MethodInvocation", "DEL SimpleName: MutableUnion", "DEL SimpleType: MutableAggregate", "DEL QualifiedName: aggregate.groupSet", "DEL SimpleName: create", "DEL SimpleType: MutableSort", "DEL Block", "DEL QualifiedName: sort.collation", "DEL SimpleType: MutableProject", "DEL SimpleType: MutableProject", "DEL ReturnStatement", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL SimpleName: deep", "DEL MethodInvocation", "DEL Modifier: static", "DEL ReturnStatement", "DEL QualifiedName: node.type", "DEL SimpleName: MutableFilter", "DEL SimpleName: MutableSort", "DEL SimpleName: JOIN", "DEL SimpleName: MutableSort", "DEL SimpleName: union", "DEL MethodInvocation", "DEL MethodInvocation", "DEL CastExpression", "DEL SimpleType: MutableLeafRel", "DEL CastExpression", "DEL SingleVariableDeclaration", "DEL SimpleName: LogicalUnion"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: copyMutables", "DEL ParameterizedType: List<MutableRel>", "DEL SimpleType: MutableRel", "DEL SimpleName: mutableRel", "DEL MethodInvocation", "DEL SimpleType: MutableRel", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL SimpleName: transform", "DEL ClassInstanceCreation", "DEL SimpleName: MutableRel", "DEL SimpleName: copyMutable", "DEL Block", "DEL SimpleName: mutableRel", "DEL SimpleType: MutableRel", "DEL SingleVariableDeclaration", "DEL SimpleType: List", "DEL SimpleType: Function", "DEL Modifier: public", "DEL SimpleType: MutableRel", "DEL ParameterizedType: List<MutableRel>", "DEL SimpleName: MutableRel", "DEL SimpleName: MutableRel", "DEL Modifier: private", "DEL ReturnStatement", "DEL SimpleName: nodes", "DEL SingleVariableDeclaration", "DEL Block", "DEL Modifier: static", "DEL AnonymousClassDeclaration", "DEL SimpleName: MutableRel", "DEL SimpleName: Function", "DEL SimpleName: List", "DEL SimpleName: List", "DEL ParameterizedType: Function<MutableRel,MutableRel>", "DEL SimpleName: MutableRel", "DEL SimpleType: MutableRel", "DEL SimpleName: MutableRel", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: Lists", "DEL SimpleType: List", "DEL SimpleName: nodes", "DEL SimpleName: apply", "DEL SimpleType: MutableRel"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: VALUES", "DEL CastExpression", "DEL SwitchCase", "DEL SimpleName: aggregate", "DEL SwitchCase", "DEL SimpleName: MutableFilter", "DEL CastExpression", "DEL SimpleName: SCAN", "DEL SimpleName: copyMutable", "DEL SimpleName: MutableFilter", "DEL ThrowStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL QualifiedName: sort.input", "DEL SimpleName: getVariablesSet", "DEL SimpleName: MutableAggregate", "DEL MethodInvocation", "DEL SimpleName: sort", "DEL SimpleName: TableScan", "DEL SimpleName: PROJECT", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: join", "DEL SimpleName: MutableJoin", "DEL SimpleName: of", "DEL SimpleName: JOIN", "DEL QualifiedName: union.all", "DEL SimpleName: node", "DEL SimpleName: node", "DEL Modifier: private", "DEL VariableDeclarationStatement", "DEL Modifier: final", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: join", "DEL VariableDeclarationFragment", "DEL SimpleType: Values", "DEL SimpleType: MutableProject", "DEL QualifiedName: sort.offset", "DEL SwitchCase", "DEL SimpleName: Values", "DEL CastExpression", "DEL MethodInvocation", "DEL MethodInvocation", "DEL QualifiedName: union.inputs", "DEL SimpleName: AssertionError", "DEL VariableDeclarationStatement", "DEL QualifiedName: aggregate.indicator", "DEL QualifiedName: project.rowType", "DEL SimpleType: MutableJoin", "DEL SimpleName: rel", "DEL MethodInvocation", "DEL SwitchCase", "DEL SimpleName: node", "DEL MethodInvocation", "DEL QualifiedName: aggregate.groupSet", "DEL SimpleName: copyMutable", "DEL SimpleName: copyMutable", "DEL SimpleName: join", "DEL CastExpression", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: MutableJoin", "DEL SimpleName: getJoinType", "DEL MethodInvocation", "DEL QualifiedName: filter.input", "DEL ReturnStatement", "DEL CastExpression", "DEL MethodInvocation", "DEL SimpleName: MutableValues", "DEL SimpleType: MutableValues", "DEL SimpleName: MutableSort", "DEL SimpleName: MutableUnion", "DEL SimpleName: node", "DEL SimpleName: project", "DEL SimpleName: MutableUnion", "DEL SimpleName: MutableProject", "DEL SimpleType: TableScan", "DEL SimpleType: MutableRel", "DEL SimpleType: MutableSort", "DEL SimpleName: MutableProject", "DEL Modifier: final", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL SimpleName: of", "DEL SimpleName: MutableRel", "DEL QualifiedName: sort.fetch", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: join", "DEL SimpleName: getLeft", "DEL SimpleType: MutableSort", "DEL QualifiedName: sort.collation", "DEL SimpleType: MutableJoin", "DEL SimpleName: copyMutable", "DEL FieldAccess", "DEL SimpleName: node", "DEL MethodInvocation", "DEL SimpleName: AGGREGATE", "DEL SimpleType: AssertionError", "DEL SimpleName: copyMutables", "DEL SimpleName: node", "DEL SwitchCase", "DEL ReturnStatement", "DEL SimpleName: UNION", "DEL SimpleName: FILTER", "DEL ReturnStatement", "DEL SimpleType: MutableAggregate", "DEL Modifier: static", "DEL VariableDeclarationStatement", "DEL SimpleName: getCondition", "DEL QualifiedName: project.input", "DEL SimpleName: deep", "DEL ParenthesizedExpression", "DEL SimpleType: MutableUnion", "DEL VariableDeclarationFragment", "DEL SimpleName: getRight", "DEL SimpleName: MutableUnion", "DEL ReturnStatement", "DEL SimpleType: MutableRel", "DEL SimpleName: of", "DEL SimpleName: node", "DEL SimpleName: filter", "DEL SimpleName: MutableScan", "DEL CastExpression", "DEL SwitchCase", "DEL MethodInvocation", "DEL SimpleName: MutableJoin", "DEL SimpleName: MutableSort", "DEL CastExpression", "DEL SimpleType: MutableFilter", "DEL SwitchStatement", "DEL ReturnStatement", "DEL FieldAccess", "DEL SwitchCase", "DEL QualifiedName: filter.condition", "DEL SimpleName: SORT", "DEL QualifiedName: node.type", "DEL SimpleName: MutableAggregate", "DEL QualifiedName: project.projects", "DEL QualifiedName: aggregate.groupSets", "DEL SimpleType: MutableAggregate", "DEL CastExpression", "DEL SimpleName: copyMutable", "DEL QualifiedName: join.cluster", "DEL SimpleName: of", "DEL SimpleName: copyMutable", "DEL Modifier: final", "DEL SimpleName: MutableScan", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL CastExpression", "DEL SingleVariableDeclaration", "DEL SimpleName: join", "DEL SimpleName: of", "DEL QualifiedName: aggregate.input", "DEL SimpleName: MutableValues", "DEL SimpleName: of", "DEL SimpleName: join", "DEL SimpleName: MutableSort", "DEL QualifiedName: aggregate.aggCalls", "DEL SwitchCase", "DEL ReturnStatement", "DEL SimpleName: MutableAggregate", "DEL SimpleName: of", "DEL CastExpression", "DEL VariableDeclarationFragment", "DEL SimpleName: rel", "DEL SimpleType: MutableScan", "DEL Modifier: final", "DEL SimpleName: MutableFilter", "DEL Modifier: final", "DEL MethodInvocation", "DEL SimpleType: MutableUnion", "DEL SimpleName: node", "DEL SimpleName: MutableRel", "DEL VariableDeclarationStatement", "DEL SwitchCase", "DEL MethodInvocation", "DEL SimpleName: node", "DEL SimpleName: of", "DEL Block", "DEL SimpleName: node", "DEL SimpleType: MutableFilter", "DEL ParenthesizedExpression", "DEL SimpleName: union", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleName: copyMutable"]}, {"root": "DEL SimpleName: MutableRels", "operations": ["DEL SimpleName: MutableRels"]}, {"root": "DEL SimpleName: MutableRels", "operations": ["DEL SimpleName: MutableRels"]}, {"root": "DEL SimpleName: MutableRels", "operations": ["DEL SimpleName: MutableRels"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: query", "DEL MethodInvocation", "DEL SimpleName: getRowType"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getRowType", "DEL MethodInvocation", "DEL SimpleName: query"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: query", "DEL SimpleName: getProjects"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: query", "DEL SimpleName: getRowType", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getCondition", "DEL SimpleName: query", "DEL MethodInvocation"]}, {"root": "DEL QualifiedName: query.parent", "operations": ["DEL QualifiedName: query.parent"]}, {"root": "DEL SimpleType: MutableProject", "operations": ["DEL SimpleName: MutableProject", "DEL SimpleType: MutableProject"]}, {"root": "DEL QualifiedName: query.parent", "operations": ["DEL QualifiedName: query.parent"]}, {"root": "DEL QualifiedName: query.parent", "operations": ["DEL QualifiedName: query.parent"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getProjects", "DEL SimpleName: project"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: model", "DEL SimpleName: getRowType"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getRowType", "DEL MethodInvocation", "DEL SimpleName: model"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: project", "DEL SimpleName: getProjects", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getCondition", "DEL SimpleName: query"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getCondition", "DEL SimpleName: target"]}, {"root": "DEL QualifiedName: call.query.parent", "operations": ["DEL QualifiedName: call.query.parent"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: target", "DEL MethodInvocation", "DEL SimpleName: getGroupSet"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: query", "DEL SimpleName: getGroupSet"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: aggregate", "DEL MethodInvocation", "DEL SimpleName: getGroupSet"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: aggregate", "DEL SimpleName: getGroupSets", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getAggCallList", "DEL MethodInvocation", "DEL SimpleName: aggregate"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getGroupSet", "DEL SimpleName: query"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getGroupSet", "DEL SimpleName: target", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: query", "DEL SimpleName: getGroupSet", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getAggCallList", "DEL SimpleName: query"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getAggCallList", "DEL SimpleName: target", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getGroupSet", "DEL SimpleName: target"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getGroupSet", "DEL SimpleName: query", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getAggCallList", "DEL SimpleName: query"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getAggCallList", "DEL SimpleName: target"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getRowType", "DEL SimpleName: query", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getProjects", "DEL SimpleName: target"]}, {"root": "DEL EnumDeclaration", "operations": ["DEL TagElement", "DEL SimpleName: VALUES", "DEL SimpleName: JOIN", "DEL TextElement:  MutableRel", "DEL SimpleName: PROJECT", "DEL EnumDeclaration", "DEL SimpleName: SORT", "DEL SimpleName: MutableRelType", "DEL SimpleName: AGGREGATE", "DEL SimpleName: FILTER", "DEL EnumConstantDeclaration", "DEL SimpleName: HOLDER", "DEL EnumConstantDeclaration", "DEL EnumConstantDeclaration", "DEL TagElement: @code", "DEL Modifier: private", "DEL EnumConstantDeclaration", "DEL EnumConstantDeclaration", "DEL EnumConstantDeclaration", "DEL EnumConstantDeclaration", "DEL Javadoc", "DEL EnumConstantDeclaration", "DEL SimpleName: SCAN", "DEL TextElement: . ", "DEL TextElement: Type of ", "DEL SimpleName: UNION", "DEL EnumConstantDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleType: MutableRel", "DEL MethodInvocation", "DEL SimpleName: root", "DEL ThisExpression", "DEL TypeDeclaration: class", "DEL FieldDeclaration", "DEL Assignment: =", "DEL SingleVariableDeclaration", "DEL SimpleType: MutableRel", "DEL Block", "DEL FieldAccess", "DEL SimpleName: visit", "DEL SimpleName: MutableRelVisitor", "DEL Modifier: public", "DEL SimpleName: go", "DEL SimpleName: node", "DEL SimpleName: childrenAccept", "DEL SimpleName: p", "DEL TextElement: . ", "DEL SimpleType: MutableRel", "DEL ThisExpression", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL SimpleName: root", "DEL SimpleName: MutableRel", "DEL SimpleName: MutableRel", "DEL Modifier: private", "DEL Modifier: public", "DEL SimpleName: node", "DEL Javadoc", "DEL SimpleName: MutableRel", "DEL SingleVariableDeclaration", "DEL TagElement", "DEL SimpleName: MutableRel", "DEL SimpleType: MutableRel", "DEL PrimitiveType: void", "DEL Modifier: static", "DEL TagElement: @link", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: visit", "DEL Block", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: MutableRel", "DEL SimpleName: p", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleName: p", "DEL TextElement: Visitor over ", "DEL SimpleName: root"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleType: StringBuilder", "DEL FieldDeclaration", "DEL TextElement: .", "DEL PrimitiveType: void", "DEL Modifier: public", "DEL TextElement:  are less efficient", "DEL TextElement:  MutableRel", "DEL ThisExpression", "DEL Modifier: final", "DEL SimpleType: MutableRel", "DEL SimpleName: cluster", "DEL Modifier: final", "DEL FieldAccess", "DEL PrimitiveType: int", "DEL ThisExpression", "DEL SimpleType: MutableRel", "DEL TextElement: operations, and transcribe back to ", "DEL SingleVariableDeclaration", "DEL SimpleType: RelDataType", "DEL SimpleName: ordinalInParent", "DEL SimpleName: RelDataType", "DEL TagElement: @code", "DEL TextElement:  MutableRel", "DEL MethodDeclaration", "DEL SimpleName: List", "DEL SimpleName: RelOptCluster", "DEL Modifier: public", "DEL SimpleType: MutableRelVisitor", "DEL MethodInvocation", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: child", "DEL SimpleType: MutableRel", "DEL Modifier: abstract", "DEL IfStatement", "DEL SimpleName: deep", "DEL Assignment: =", "DEL TagElement: @code", "DEL SimpleName: buf", "DEL TagElement: @code", "DEL SimpleName: setInput", "DEL SimpleName: MutableRelType", "DEL Modifier: abstract", "DEL FieldDeclaration", "DEL ThisExpression", "DEL Block", "DEL SimpleName: toString", "DEL ReturnStatement", "DEL MethodInvocation", "DEL TextElement: For this reason, you should use ", "DEL Modifier: final", "DEL SimpleName: apply", "DEL ExpressionStatement", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL InfixExpression: !=", "DEL SimpleName: ordinalInParent", "DEL SimpleName: rowType", "DEL ExpressionStatement", "DEL SimpleName: MutableRel", "DEL SimpleName: parent", "DEL SimpleType: MutableRel", "DEL Modifier: private", "DEL FieldAccess", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL IfStatement", "DEL InfixExpression: !=", "DEL SingleVariableDeclaration", "DEL TypeDeclaration: class", "DEL TextElement:  The parent", "DEL SimpleName: parent", "DEL SimpleType: RelOptCluster", "DEL MethodDeclaration", "DEL NullLiteral", "DEL SimpleName: type", "DEL TextElement:  for short-lived", "DEL VariableDeclarationFragment", "DEL SimpleName: RelOptCluster", "DEL SimpleName: MutableRel", "DEL Modifier: final", "DEL SimpleName: input", "DEL SimpleName: MutableRel", "DEL TextElement:  must be an orphan (have null parent)", "DEL SimpleName: getParent", "DEL SimpleName: type", "DEL SimpleType: MutableRel", "DEL Modifier: public", "DEL SimpleType: MutableRel", "DEL TagElement: @code", "DEL ClassInstanceCreation", "DEL TextElement:  #hashCode", "DEL Block", "DEL FieldDeclaration", "DEL TextElement:  is an orphan.", "DEL ReturnStatement", "DEL TextElement: <p>Each node has mutable state, and keeps track of its parent and position", "DEL SimpleName: MutableRelType", "DEL MethodDeclaration", "DEL SimpleType: MutableRel", "DEL TextElement: Replaces this ", "DEL SimpleName: parent", "DEL Modifier: public", "DEL ThisExpression", "DEL MethodDeclaration", "DEL TextElement:  when you are done.</p>", "DEL FieldDeclaration", "DEL TagElement: @code", "DEL MethodDeclaration", "DEL SimpleType: MutableRelType", "DEL SimpleName: type", "DEL ThisExpression", "DEL TextElement: It doesn't make sense to canonize ", "DEL SimpleName: parent", "DEL TagElement: @code", "DEL SimpleName: parent", "DEL SimpleName: cluster", "DEL SimpleType: String", "DEL Modifier: abstract", "DEL SimpleName: ordinalInParent", "DEL SimpleName: String", "DEL Block", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL FieldAccess", "DEL SimpleName: getRowType", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL TextElement: otherwise one node could end up with multiple parents.", "DEL PrimitiveType: void", "DEL SimpleName: rowType", "DEL SimpleName: RelNode", "DEL MethodDeclaration", "DEL SimpleName: Override", "DEL SimpleType: RelOptCluster", "DEL ThisExpression", "DEL MethodDeclaration", "DEL Modifier: public", "DEL TagElement", "DEL SimpleName: child", "DEL TextElement:  in order to change it.", "DEL ParameterizedType: List<MutableRel>", "DEL Assignment: =", "DEL FieldAccess", "DEL SimpleName: digest", "DEL SimpleName: MutableRel", "DEL SimpleType: List", "DEL SimpleName: visitor", "DEL TextElement:  in its parent with another node at the", "DEL Modifier: public", "DEL ThisExpression", "DEL SimpleName: ordinalInParent", "DEL TextElement:  MutableRels", "DEL Modifier: abstract", "DEL VariableDeclarationStatement", "DEL TextElement:  MutableRel", "DEL TextElement:  child", "DEL TextElement: It follows that ", "DEL FieldAccess", "DEL SimpleName: deep", "DEL Assignment: =", "DEL SimpleName: MutableRelVisitor", "DEL TextElement: <p>Before the method, ", "DEL MarkerAnnotation", "DEL Modifier: static", "DEL TextElement:  MutableRel", "DEL SimpleName: RelDataType", "DEL Block", "DEL SimpleName: setInput", "DEL Modifier: public", "DEL TextElement:  and ", "DEL SimpleName: MutableRelDumper", "DEL SingleVariableDeclaration", "DEL TextElement: Mutable equivalent of ", "DEL Block", "DEL TextElement:  RelNode", "DEL PrimitiveType: int", "DEL Assignment: =", "DEL SingleVariableDeclaration", "DEL SimpleName: parent", "DEL FieldDeclaration", "DEL SimpleName: rowType", "DEL MethodInvocation", "DEL SimpleName: childrenAccept", "DEL TagElement: @link", "DEL Block", "DEL TextElement:  counterparts.", "DEL SimpleName: rowType", "DEL TextElement: within parent.", "DEL SimpleName: MutableRel", "DEL Modifier: final", "DEL SimpleName: child", "DEL NullLiteral", "DEL SimpleName: MutableRel", "DEL TextElement: But, you don't need to copy a ", "DEL Modifier: protected", "DEL Block", "DEL SimpleName: StringBuilder", "DEL ReturnStatement", "DEL TextElement:  RelNode", "DEL SimpleName: MutableRel", "DEL Modifier: public", "DEL SimpleName: parent", "DEL ReturnStatement", "DEL SimpleType: RelDataType", "DEL Javadoc", "DEL SimpleName: replaceInParent", "DEL Modifier: public", "DEL TagElement: @code", "DEL TagElement: @code", "DEL ThisExpression", "DEL SimpleType: StringBuilder", "DEL ExpressionStatement", "DEL TagElement: @code", "DEL SingleVariableDeclaration", "DEL SimpleName: RelDataType", "DEL SingleVariableDeclaration", "DEL TagElement", "DEL TagElement: @return", "DEL NumberLiteral: 0", "DEL TextElement: ,", "DEL MethodDeclaration", "DEL SimpleName: StringBuilder", "DEL SingleVariableDeclaration", "DEL SimpleName: cluster", "DEL Modifier: public", "DEL TextElement: and after this method, this ", "DEL SimpleName: cluster", "DEL SingleVariableDeclaration", "DEL TextElement: same position.", "DEL ReturnStatement", "DEL TagElement: @code", "DEL Javadoc", "DEL SimpleName: getInputs", "DEL SimpleName: MutableRel", "DEL SimpleName: type", "DEL FieldAccess", "DEL Modifier: abstract", "DEL TextElement:  #equals", "DEL SimpleName: MutableRel", "DEL SimpleType: MutableRelDumper", "DEL MethodDeclaration", "DEL SimpleName: parent", "DEL SimpleType: RelDataType", "DEL SimpleName: rowType", "DEL TextElement: than their ", "DEL SimpleType: MutableRelType"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: buf", "DEL SimpleName: rowType", "DEL SimpleType: MutableRelType", "DEL MethodDeclaration", "DEL SimpleType: Holder", "DEL SimpleName: input", "DEL QualifiedName: MutableRelType.HOLDER", "DEL SimpleName: type", "DEL StringLiteral: \"Holder\"", "DEL SimpleName: MutableSingleRel", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: digest", "DEL SimpleName: StringBuilder", "DEL MethodInvocation", "DEL SimpleName: Holder", "DEL TextElement: child. Used as the root of a tree. ", "DEL ReturnStatement", "DEL Modifier: static", "DEL TagElement", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleName: Holder", "DEL SimpleName: append", "DEL SingleVariableDeclaration", "DEL SimpleType: MutableRel", "DEL SimpleType: MutableRel", "DEL TypeDeclaration: class", "DEL SimpleName: buf", "DEL SimpleName: RelDataType", "DEL SimpleType: StringBuilder", "DEL MethodDeclaration", "DEL SimpleType: Holder", "DEL SimpleName: MutableRel", "DEL SimpleName: MutableRelType", "DEL Modifier: static", "DEL SimpleName: Override", "DEL SimpleName: input", "DEL TextElement:  whose only purpose is to have a", "DEL TagElement: @link", "DEL SimpleName: input", "DEL TextElement: Implementation of ", "DEL SimpleType: MutableSingleRel", "DEL Block", "DEL MethodDeclaration", "DEL SimpleName: StringBuilder", "DEL SimpleType: RelDataType", "DEL SimpleName: Holder", "DEL SimpleName: type", "DEL SimpleName: MutableRel", "DEL ReturnStatement", "DEL Javadoc", "DEL SimpleName: Holder", "DEL SuperConstructorInvocation", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleType: StringBuilder", "DEL MarkerAnnotation", "DEL Modifier: private", "DEL SimpleName: rowType", "DEL QualifiedName: input.rowType", "DEL Modifier: private", "DEL ClassInstanceCreation", "DEL SimpleName: of", "DEL SimpleName: input", "DEL SimpleName: MutableRel"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Modifier: final", "DEL SimpleType: MutableRel", "DEL PrimitiveType: int", "DEL TagElement", "DEL ExpressionStatement", "DEL ThrowStatement", "DEL MethodInvocation", "DEL TypeDeclaration: class", "DEL SimpleName: rel", "DEL SimpleName: MutableLeafRel", "DEL MethodInvocation", "DEL SimpleName: MutableRel", "DEL VariableDeclarationFragment", "DEL Modifier: protected", "DEL SimpleName: RelNode", "DEL MethodDeclaration", "DEL Modifier: protected", "DEL SimpleName: childrenAccept", "DEL Block", "DEL SimpleName: ordinalInParent", "DEL SimpleName: MutableRel", "DEL SuperConstructorInvocation", "DEL SimpleType: MutableRel", "DEL PrimitiveType: void", "DEL SimpleName: RelNode", "DEL SimpleName: getInputs", "DEL SimpleType: MutableRel", "DEL SimpleName: getRowType", "DEL SimpleName: rel", "DEL SimpleName: visitor", "DEL Modifier: public", "DEL ReturnStatement", "DEL Modifier: static", "DEL SimpleName: setInput", "DEL SimpleName: rel", "DEL SingleVariableDeclaration", "DEL SimpleName: of", "DEL FieldDeclaration", "DEL SimpleName: IllegalArgumentException", "DEL PrimitiveType: void", "DEL TagElement: @link", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: IllegalArgumentException", "DEL SimpleName: rel", "DEL SimpleName: MutableRel", "DEL SimpleType: MutableRelType", "DEL SimpleName: ImmutableList", "DEL TextElement:  that have", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: input", "DEL ClassInstanceCreation", "DEL SimpleName: MutableRelVisitor", "DEL SimpleName: rel", "DEL Modifier: abstract", "DEL MethodDeclaration", "DEL SimpleName: rel", "DEL ParameterizedType: List<MutableRel>", "DEL Modifier: public", "DEL SimpleName: type", "DEL MethodDeclaration", "DEL Block", "DEL SimpleType: RelNode", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL SimpleName: MutableRelType", "DEL SimpleName: MutableRel", "DEL TextElement: Abstract base class for implementations of ", "DEL SimpleName: type", "DEL SimpleName: List", "DEL SimpleName: getCluster", "DEL ThisExpression", "DEL SimpleType: List", "DEL Assignment: =", "DEL SimpleName: MutableLeafRel", "DEL Block", "DEL TextElement: no inputs. ", "DEL SimpleType: RelNode", "DEL SimpleType: MutableRelVisitor", "DEL FieldAccess", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SuperConstructorInvocation", "DEL SimpleName: List", "DEL SimpleName: visitor", "DEL IfStatement", "DEL TagElement", "DEL SimpleName: input", "DEL Block", "DEL SimpleName: MutableRelVisitor", "DEL QualifiedName: input.cluster", "DEL SimpleName: visit", "DEL FieldAccess", "DEL SimpleName: ordinalInParent", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SimpleName: input", "DEL TagElement: @link", "DEL TypeDeclaration: class", "DEL Modifier: protected", "DEL SingleVariableDeclaration", "DEL QualifiedName: input.parent", "DEL SimpleName: MutableSingleRel", "DEL SimpleName: MutableRel", "DEL SimpleName: rowType", "DEL Modifier: public", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: ImmutableList", "DEL Modifier: public", "DEL Block", "DEL TextElement: Mutable equivalent of ", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: input", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: input", "DEL SimpleName: childrenAccept", "DEL SimpleName: ordinalInParent", "DEL SimpleName: IllegalArgumentException", "DEL ExpressionStatement", "DEL SimpleName: input", "DEL IfStatement", "DEL SimpleName: MutableRel", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: MutableRelType", "DEL Assignment: =", "DEL Modifier: protected", "DEL Assignment: =", "DEL NullLiteral", "DEL SimpleType: MutableRel", "DEL SimpleType: List", "DEL Assignment: =", "DEL SimpleName: MutableRel", "DEL SimpleName: MutableRel", "DEL SimpleName: input", "DEL SimpleName: input", "DEL Assignment: =", "DEL ThisExpression", "DEL NumberLiteral: 0", "DEL NumberLiteral: 0", "DEL SimpleType: IllegalArgumentException", "DEL SimpleName: MutableRel", "DEL InfixExpression: >=", "DEL MethodDeclaration", "DEL FieldAccess", "DEL PrimitiveType: void", "DEL ClassInstanceCreation", "DEL SimpleName: getInputs", "DEL ExpressionStatement", "DEL Modifier: static", "DEL NumberLiteral: 1", "DEL ThisExpression", "DEL TextElement: . ", "DEL PrimitiveType: int", "DEL ThisExpression", "DEL SimpleName: visitor", "DEL Modifier: public", "DEL QualifiedName: input.parent", "DEL ExpressionStatement", "DEL QualifiedName: input.ordinalInParent", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: input", "DEL SimpleName: MutableRel", "DEL SimpleType: MutableRel", "DEL ParameterizedType: List<MutableRel>", "DEL Block", "DEL SimpleName: setInput", "DEL SimpleType: MutableRel", "DEL ThisExpression", "DEL Modifier: abstract", "DEL SimpleName: SingleRel", "DEL SimpleName: input", "DEL InfixExpression: !=", "DEL SimpleName: getInput", "DEL SingleVariableDeclaration", "DEL ThrowStatement", "DEL ReturnStatement", "DEL PrimitiveType: void", "DEL SimpleType: MutableRel", "DEL SimpleName: type", "DEL QualifiedName: input.ordinalInParent", "DEL SimpleType: RelDataType", "DEL Block", "DEL Assignment: =", "DEL ReturnStatement", "DEL SimpleName: input", "DEL SimpleName: type", "DEL SimpleName: rowType", "DEL Block", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleType: MutableRelVisitor", "DEL SimpleType: MutableRelType", "DEL SimpleName: MutableSingleRel", "DEL MethodDeclaration", "DEL FieldDeclaration", "DEL SimpleName: RelDataType", "DEL SimpleName: input", "DEL SimpleName: of", "DEL MethodDeclaration", "DEL SimpleType: MutableRel", "DEL SimpleType: MutableRel"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: MutableScan", "DEL SimpleName: rel", "DEL SimpleName: MutableScan", "DEL MethodInvocation", "DEL SimpleType: MutableScan", "DEL SimpleName: rel", "DEL StringLiteral: \")\"", "DEL Modifier: static", "DEL SimpleName: hashCode", "DEL TagElement: @link", "DEL TextElement: . ", "DEL InfixExpression: ||", "DEL SimpleName: getTable", "DEL SimpleName: StringBuilder", "DEL SimpleName: getQualifiedName", "DEL Block", "DEL SimpleName: append", "DEL CastExpression", "DEL SimpleName: obj", "DEL SimpleName: Override", "DEL SimpleType: MutableScan", "DEL QualifiedName: MutableRelType.SCAN", "DEL SimpleName: Override", "DEL SimpleName: buf", "DEL SimpleType: Object", "DEL SimpleName: MutableScan", "DEL QualifiedName: org.apache.calcite.rel.logical.LogicalTableScan", "DEL Modifier: public", "DEL Modifier: private", "DEL SimpleName: Object", "DEL Block", "DEL SimpleName: rel", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL SimpleName: rel", "DEL MarkerAnnotation", "DEL MethodInvocation", "DEL Block", "DEL Modifier: protected", "DEL Modifier: static", "DEL SimpleType: StringBuilder", "DEL SingleVariableDeclaration", "DEL MarkerAnnotation", "DEL SimpleName: MutableScan", "DEL SimpleName: MutableScan", "DEL TextElement: Mutable equivalent of", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL SimpleType: TableScan", "DEL SimpleName: TableScan", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL InfixExpression: &&", "DEL SimpleName: obj", "DEL MethodDeclaration", "DEL MarkerAnnotation", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL SimpleName: digest", "DEL SimpleName: hashCode", "DEL SimpleName: TableScan", "DEL SimpleType: MutableLeafRel", "DEL SimpleName: obj", "DEL TagElement", "DEL Block", "DEL MethodDeclaration", "DEL SimpleType: StringBuilder", "DEL ThisExpression", "DEL SimpleName: rel", "DEL Modifier: public", "DEL ParenthesizedExpression", "DEL ClassInstanceCreation", "DEL SimpleName: append", "DEL SimpleName: equals", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL SimpleType: MutableScan", "DEL SimpleName: MutableLeafRel", "DEL Block", "DEL SimpleName: rel", "DEL SimpleType: TableScan", "DEL SimpleName: rel", "DEL PrimitiveType: boolean", "DEL SimpleName: MutableScan", "DEL SimpleName: equals", "DEL SimpleName: append", "DEL ReturnStatement", "DEL SimpleName: buf", "DEL PrimitiveType: int", "DEL SuperConstructorInvocation", "DEL SimpleName: of", "DEL SimpleName: obj", "DEL SimpleName: Override", "DEL StringLiteral: \"Scan(table: \"", "DEL MethodDeclaration", "DEL FieldAccess", "DEL SimpleName: StringBuilder", "DEL SimpleName: rel", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleType: MutableScan", "DEL Javadoc", "DEL TypeDeclaration: class", "DEL InstanceofExpression", "DEL MethodInvocation"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: obj", "DEL CastExpression", "DEL ReturnStatement", "DEL Modifier: public", "DEL SimpleName: append", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: MutableValues", "DEL SimpleName: Values", "DEL MethodInvocation", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: buf", "DEL InfixExpression: ==", "DEL InstanceofExpression", "DEL SimpleName: Values", "DEL SimpleType: MutableValues", "DEL SimpleName: MutableValues", "DEL SimpleName: buf", "DEL SimpleName: append", "DEL PrimitiveType: int", "DEL Modifier: public", "DEL SimpleName: rel", "DEL SimpleType: Values", "DEL MethodInvocation", "DEL SimpleName: of", "DEL SimpleName: Override", "DEL SimpleType: Values", "DEL SimpleType: Values", "DEL StringLiteral: \")\"", "DEL SimpleName: MutableValues", "DEL PrimitiveType: boolean", "DEL Modifier: public", "DEL Block", "DEL TagElement: @link", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL SimpleName: MutableValues", "DEL SimpleName: rel", "DEL QualifiedName: org.apache.calcite.rel.core.Values", "DEL InfixExpression: &&", "DEL SingleVariableDeclaration", "DEL ThisExpression", "DEL SimpleType: Object", "DEL CastExpression", "DEL SuperConstructorInvocation", "DEL ParenthesizedExpression", "DEL SimpleName: hashCode", "DEL SimpleName: Object", "DEL InfixExpression: ==", "DEL SimpleName: Values", "DEL MarkerAnnotation", "DEL SimpleName: equals", "DEL MethodInvocation", "DEL SimpleName: obj", "DEL SimpleName: MutableValues", "DEL SimpleName: Override", "DEL SimpleName: getTuples", "DEL Modifier: static", "DEL QualifiedName: MutableRelType.VALUES", "DEL SimpleName: append", "DEL SimpleName: StringBuilder", "DEL SimpleName: rel", "DEL SimpleName: hashCode", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: rel", "DEL MethodInvocation", "DEL SimpleType: MutableValues", "DEL InfixExpression: ||", "DEL SimpleName: StringBuilder", "DEL MarkerAnnotation", "DEL ReturnStatement", "DEL FieldAccess", "DEL SimpleName: rel", "DEL SimpleName: rel", "DEL SimpleType: StringBuilder", "DEL MarkerAnnotation", "DEL SimpleName: Override", "DEL SimpleName: obj", "DEL TagElement", "DEL TextElement: . ", "DEL TypeDeclaration: class", "DEL ReturnStatement", "DEL ParenthesizedExpression", "DEL MethodDeclaration", "DEL SimpleName: rel", "DEL SimpleName: MutableValues", "DEL TextElement: Mutable equivalent of ", "DEL Block", "DEL Modifier: protected", "DEL MethodDeclaration", "DEL SimpleName: rel", "DEL SimpleType: MutableValues", "DEL SimpleName: digest", "DEL SimpleType: StringBuilder", "DEL Modifier: static", "DEL Javadoc", "DEL Modifier: private", "DEL SimpleType: MutableValues", "DEL MethodInvocation", "DEL SimpleName: MutableLeafRel", "DEL SimpleName: obj", "DEL StringLiteral: \"Values(tuples: \"", "DEL SimpleType: MutableLeafRel", "DEL ReturnStatement", "DEL SingleVariableDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Block", "DEL SimpleName: RexNode", "DEL Block", "DEL SimpleName: input", "DEL Javadoc", "DEL SimpleName: List", "DEL SimpleType: java.util.List", "DEL ReturnStatement", "DEL SimpleType: List", "DEL Javadoc", "DEL SimpleName: MutableRel", "DEL SimpleType: MutableRel", "DEL SimpleName: input", "DEL SingleVariableDeclaration", "DEL SimpleName: List", "DEL SimpleName: rowType", "DEL SimpleName: RexNode", "DEL MethodInvocation", "DEL SimpleName: fieldNameList", "DEL SimpleName: List", "DEL QualifiedName: org.apache.calcite.rel.logical.LogicalProject", "DEL TagElement", "DEL SimpleName: projects", "DEL PrimitiveType: int", "DEL SimpleName: Override", "DEL SimpleName: Pair", "DEL SimpleName: Override", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL Modifier: public", "DEL SimpleName: rowType", "DEL SimpleType: Mappings.TargetMapping", "DEL MethodInvocation", "DEL TextElement: Mutable equivalent of", "DEL SimpleName: obj", "DEL SimpleType: RexNode", "DEL SimpleType: java.util.List", "DEL SimpleType: RelDataType", "DEL CastExpression", "DEL SimpleType: StringBuilder", "DEL SimpleName: rowType", "DEL QualifiedName: org.apache.calcite.rel.RelNode", "DEL SimpleName: MutableProject", "DEL SimpleName: projects", "DEL SimpleName: projects", "DEL SimpleName: projects", "DEL SimpleName: MutableRel", "DEL SimpleName: MutableProject", "DEL SimpleType: List", "DEL ReturnStatement", "DEL SimpleType: RexNode", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL ParameterizedType: List<RexNode>", "DEL SimpleName: append", "DEL SimpleName: input", "DEL ParenthesizedExpression", "DEL SimpleName: rowType", "DEL SingleVariableDeclaration", "DEL SimpleName: buf", "DEL TypeDeclaration: class", "DEL VariableDeclarationStatement", "DEL ReturnStatement", "DEL SimpleName: RelDataType", "DEL SimpleName: obj", "DEL SimpleType: RexNode", "DEL SimpleType: org.apache.calcite.rel.RelNode", "DEL SimpleName: List", "DEL SimpleName: Pair", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL CastExpression", "DEL SimpleName: projects", "DEL MarkerAnnotation", "DEL SimpleName: input", "DEL SimpleName: hashCode", "DEL SimpleType: RexNode", "DEL SimpleName: getFieldNames", "DEL ParameterizedType: List<Pair<RexNode,String>>", "DEL SimpleName: RelOptUtil", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: MutableProject", "DEL SimpleName: hash", "DEL SimpleName: projects", "DEL SimpleType: MutableRel", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL Modifier: protected", "DEL SimpleName: RexNode", "DEL ThisExpression", "DEL MethodRef", "DEL SimpleName: RexNode", "DEL SimpleName: projects", "DEL SimpleName: MutableProject", "DEL SimpleType: MutableRel", "DEL Modifier: final", "DEL SimpleName: StringBuilder", "DEL SimpleName: RelDataType", "DEL SimpleName: Object", "DEL Modifier: public", "DEL SimpleName: createProject", "DEL SimpleName: getProjects", "DEL SimpleName: StringBuilder", "DEL SimpleName: getTypeFactory", "DEL SimpleName: digest", "DEL ParameterizedType: List<String>", "DEL SimpleName: input", "DEL QualifiedName: java.util.List", "DEL SimpleName: getMapping", "DEL SimpleName: zip", "DEL QualifiedName: java.util.List", "DEL MethodInvocation", "DEL InfixExpression: &&", "DEL Assignment: =", "DEL Modifier: public", "DEL ParameterizedType: List<RexNode>", "DEL Modifier: public", "DEL Block", "DEL SimpleName: exprList", "DEL SimpleType: StringBuilder", "DEL Block", "DEL SimpleName: MutableRel", "DEL MethodInvocation", "DEL SimpleName: projects", "DEL QualifiedName: SqlValidatorUtil.F_SUGGESTER", "DEL SimpleName: projects", "DEL ParameterizedType: Pair<RexNode,String>", "DEL SimpleName: child", "DEL SimpleName: getProjects", "DEL TagElement", "DEL SingleVariableDeclaration", "DEL TextElement: Returns a list of (expression, name) pairs. ", "DEL FieldAccess", "DEL SingleVariableDeclaration", "DEL ParameterizedType: List<RexNode>", "DEL SimpleType: String", "DEL ReturnStatement", "DEL SimpleName: getRowType", "DEL ParameterizedType: List<RexNode>", "DEL SimpleType: MutableRel", "DEL SimpleName: List", "DEL TagElement: @link", "DEL SimpleType: RexNode", "DEL SimpleName: rowType", "DEL SimpleName: createStructType", "DEL SingleVariableDeclaration", "DEL SimpleType: List", "DEL SimpleName: List", "DEL SimpleName: Objects", "DEL PrimitiveType: boolean", "DEL SimpleName: of", "DEL MethodInvocation", "DEL SimpleType: List", "DEL SimpleName: exprList", "DEL SingleVariableDeclaration", "DEL ParameterizedType: List<RexNode>", "DEL MethodRefParameter", "DEL MethodInvocation", "DEL SimpleName: MutableProject", "DEL QualifiedName: child.cluster", "DEL MethodInvocation", "DEL QualifiedName: Litmus.THROW", "DEL SimpleName: List", "DEL SimpleName: RexUtil", "DEL SimpleName: equals", "DEL SimpleName: obj", "DEL SimpleType: MutableProject", "DEL Javadoc", "DEL MethodDeclaration", "DEL SimpleName: getFieldCount", "DEL Modifier: public", "DEL SimpleName: hash", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL Block", "DEL Modifier: final", "DEL SimpleName: PAIRWISE_STRING_EQUIVALENCE", "DEL Modifier: private", "DEL SimpleName: MutableProject", "DEL SimpleName: String", "DEL SimpleType: MutableProject", "DEL SimpleType: MutableSingleRel", "DEL MethodRefParameter", "DEL SimpleName: RelDataType", "DEL SimpleName: projects", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL SimpleName: input", "DEL SimpleName: PAIRWISE_STRING_EQUIVALENCE", "DEL SimpleName: append", "DEL SimpleType: MutableProject", "DEL SimpleName: String", "DEL ThisExpression", "DEL MethodRefParameter", "DEL MethodInvocation", "DEL AssertStatement", "DEL SimpleName: RexNode", "DEL ReturnStatement", "DEL FieldDeclaration", "DEL SimpleName: obj", "DEL Block", "DEL TextElement: . ", "DEL SimpleName: compatibleTypes", "DEL Modifier: public", "DEL QualifiedName: MutableRelType.PROJECT", "DEL Modifier: static", "DEL MethodInvocation", "DEL SimpleName: getNamedProjects", "DEL MethodInvocation", "DEL ReturnStatement", "DEL QualifiedName: Mappings.TargetMapping", "DEL FieldAccess", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleType: Pair", "DEL SimpleName: projects", "DEL TagElement: @link", "DEL MethodDeclaration", "DEL SimpleName: of", "DEL StringLiteral: \"Project(projects: \"", "DEL FieldAccess", "DEL SimpleName: Project", "DEL SimpleType: MutableProject", "DEL Modifier: private", "DEL SimpleName: RexNode", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: getMapping", "DEL SimpleType: Object", "DEL SimpleType: RelDataType", "DEL SimpleType: RexNode", "DEL Block", "DEL MethodDeclaration", "DEL SimpleType: MutableProject", "DEL MethodInvocation", "DEL SimpleName: buf", "DEL SimpleType: List", "DEL SimpleType: List", "DEL Modifier: final", "DEL Modifier: static", "DEL Block", "DEL SimpleName: RexUtil", "DEL TagElement: @link", "DEL SimpleName: MutableProject", "DEL SimpleName: input", "DEL SimpleName: rowType", "DEL SimpleName: Override", "DEL SimpleName: projects", "DEL SimpleName: child", "DEL SimpleName: obj", "DEL TextElement: . ", "DEL SimpleName: projects", "DEL Modifier: static", "DEL SimpleName: input", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleType: RelDataType", "DEL MethodInvocation", "DEL MarkerAnnotation", "DEL SimpleName: MutableSingleRel", "DEL TextElement: Equivalent to", "DEL MethodDeclaration", "DEL SimpleName: equivalent", "DEL SimpleName: fieldNameList", "DEL SimpleName: MutableRel", "DEL StringLiteral: \")\"", "DEL SimpleName: append", "DEL SimpleType: List", "DEL InstanceofExpression", "DEL ExpressionStatement", "DEL SimpleName: of", "DEL ParenthesizedExpression", "DEL TextElement: for ", "DEL TagElement", "DEL ReturnStatement", "DEL SimpleName: equals", "DEL MethodInvocation", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL InfixExpression: ||", "DEL SuperConstructorInvocation", "DEL MarkerAnnotation", "DEL SimpleName: MutableRel", "DEL Modifier: public", "DEL SimpleName: getRowType", "DEL SimpleName: rowType", "DEL SimpleName: exprList"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Modifier: private", "DEL SimpleName: condition", "DEL SimpleName: MutableFilter", "DEL InfixExpression: &&", "DEL SimpleName: buf", "DEL SimpleName: obj", "DEL Block", "DEL PrimitiveType: int", "DEL SimpleName: hashCode", "DEL SingleVariableDeclaration", "DEL SimpleType: Object", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: Override", "DEL MethodDeclaration", "DEL SimpleName: Override", "DEL InfixExpression: ==", "DEL SingleVariableDeclaration", "DEL SimpleName: MutableFilter", "DEL MethodDeclaration", "DEL SimpleName: condition", "DEL MethodInvocation", "DEL SimpleType: MutableFilter", "DEL CastExpression", "DEL MethodDeclaration", "DEL SimpleName: condition", "DEL ThisExpression", "DEL SimpleName: condition", "DEL MethodInvocation", "DEL SimpleName: MutableFilter", "DEL SimpleName: input", "DEL PrimitiveType: boolean", "DEL SimpleName: RexNode", "DEL Modifier: static", "DEL ReturnStatement", "DEL SimpleName: input", "DEL StringLiteral: \"Filter(condition: \"", "DEL SimpleName: MutableRel", "DEL MethodInvocation", "DEL SimpleType: RexNode", "DEL FieldAccess", "DEL SimpleName: StringBuilder", "DEL SingleVariableDeclaration", "DEL SimpleName: MutableFilter", "DEL FieldDeclaration", "DEL Block", "DEL Modifier: public", "DEL SimpleName: MutableRel", "DEL Javadoc", "DEL SimpleName: RexNode", "DEL SimpleType: MutableFilter", "DEL MethodInvocation", "DEL SimpleName: StringBuilder", "DEL ReturnStatement", "DEL SimpleName: toString", "DEL SimpleName: append", "DEL SimpleName: condition", "DEL QualifiedName: MutableRelType.FILTER", "DEL Modifier: static", "DEL ParenthesizedExpression", "DEL MarkerAnnotation", "DEL SimpleName: RexNode", "DEL SuperConstructorInvocation", "DEL SimpleType: MutableRel", "DEL SimpleName: getCondition", "DEL SimpleName: Objects", "DEL SimpleName: input", "DEL SimpleType: MutableSingleRel", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL SimpleType: StringBuilder", "DEL Modifier: final", "DEL Modifier: public", "DEL Assignment: =", "DEL MethodDeclaration", "DEL SimpleType: RexNode", "DEL MarkerAnnotation", "DEL SimpleName: MutableFilter", "DEL SimpleName: equals", "DEL SimpleName: MutableFilter", "DEL ReturnStatement", "DEL SimpleType: MutableRel", "DEL SimpleType: MutableFilter", "DEL SimpleName: toString", "DEL MethodInvocation", "DEL SimpleName: obj", "DEL SimpleName: append", "DEL TextElement: Mutable equivalent of", "DEL SimpleName: equals", "DEL SimpleName: condition", "DEL ThisExpression", "DEL SimpleType: MutableFilter", "DEL QualifiedName: input.rowType", "DEL SimpleName: toString", "DEL Block", "DEL MethodInvocation", "DEL SimpleType: RexNode", "DEL ParenthesizedExpression", "DEL Block", "DEL SimpleName: condition", "DEL SimpleName: condition", "DEL MethodDeclaration", "DEL TypeDeclaration: class", "DEL Modifier: private", "DEL MarkerAnnotation", "DEL SimpleType: RexNode", "DEL FieldAccess", "DEL TagElement: @link", "DEL SimpleName: input", "DEL SimpleName: buf", "DEL QualifiedName: org.apache.calcite.rel.logical.LogicalFilter", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SimpleName: input", "DEL SimpleName: hash", "DEL FieldAccess", "DEL MethodDeclaration", "DEL SimpleName: equals", "DEL SimpleName: append", "DEL SimpleType: StringBuilder", "DEL InfixExpression: ||", "DEL Modifier: protected", "DEL SimpleName: obj", "DEL SimpleName: obj", "DEL SimpleName: condition", "DEL MethodInvocation", "DEL SimpleName: input", "DEL CastExpression", "DEL InstanceofExpression", "DEL SimpleName: of", "DEL SimpleName: input", "DEL SimpleName: Object", "DEL TagElement", "DEL ReturnStatement", "DEL SimpleName: condition", "DEL SimpleType: MutableFilter", "DEL MethodInvocation", "DEL Block", "DEL ReturnStatement", "DEL MethodInvocation", "DEL TextElement: . ", "DEL SimpleName: Override", "DEL SingleVariableDeclaration", "DEL SimpleName: MutableFilter", "DEL SimpleName: obj", "DEL SimpleName: digest", "DEL ClassInstanceCreation", "DEL SimpleName: MutableSingleRel", "DEL Modifier: public", "DEL SimpleName: RexNode", "DEL ExpressionStatement", "DEL StringLiteral: \")\"", "DEL SimpleName: condition"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Modifier: static", "DEL SimpleName: MutableAggregate", "DEL InfixExpression: ==", "DEL SimpleName: input", "DEL SimpleType: RelDataType", "DEL FieldAccess", "DEL SimpleName: groupSet", "DEL SimpleName: groupSets", "DEL SimpleName: Override", "DEL SimpleType: AggregateCall", "DEL SimpleName: MutableAggregate", "DEL SimpleType: AggregateCall", "DEL SingleVariableDeclaration", "DEL SimpleName: deriveRowType", "DEL SimpleName: obj", "DEL SimpleName: input", "DEL SimpleType: StringBuilder", "DEL SimpleName: append", "DEL MethodInvocation", "DEL SimpleName: getRowType", "DEL SimpleName: equals", "DEL SimpleName: ImmutableList", "DEL SimpleType: ImmutableBitSet", "DEL SimpleType: ImmutableList", "DEL ReturnStatement", "DEL SimpleName: ImmutableBitSet", "DEL SimpleName: MutableAggregate", "DEL InfixExpression: &&", "DEL SimpleType: ImmutableList", "DEL ParenthesizedExpression", "DEL SimpleName: buf", "DEL SimpleType: ImmutableBitSet", "DEL ParameterizedType: ImmutableList<ImmutableBitSet>", "DEL SimpleType: List", "DEL SimpleType: List", "DEL SimpleType: MutableRel", "DEL SimpleName: getGroupType", "DEL SimpleName: List", "DEL ReturnStatement", "DEL MethodInvocation", "DEL TagElement: @link", "DEL SingleVariableDeclaration", "DEL SimpleName: append", "DEL ParameterizedType: List<ImmutableBitSet>", "DEL SimpleType: AggregateCall", "DEL SimpleName: obj", "DEL SimpleName: indicator", "DEL SimpleName: ImmutableBitSet", "DEL SingleVariableDeclaration", "DEL SimpleType: List", "DEL SimpleName: Object", "DEL FieldAccess", "DEL ThisExpression", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL SimpleName: groupSets", "DEL Modifier: public", "DEL SimpleName: input", "DEL FieldDeclaration", "DEL SimpleName: input", "DEL SimpleName: groupSets", "DEL QualifiedName: input.cluster", "DEL StringLiteral: \")\"", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SimpleName: of", "DEL SingleVariableDeclaration", "DEL SimpleName: append", "DEL ParenthesizedExpression", "DEL SimpleName: append", "DEL SimpleName: aggCalls", "DEL SimpleName: MutableAggregate", "DEL SimpleType: StringBuilder", "DEL SimpleName: List", "DEL SimpleType: MutableAggregate", "DEL SimpleName: indicator", "DEL SimpleName: groupSets", "DEL ThisExpression", "DEL ReturnStatement", "DEL SimpleName: AggregateCall", "DEL SimpleName: MutableSingleRel", "DEL SimpleName: equals", "DEL SimpleName: obj", "DEL TagElement", "DEL SimpleName: groupSets", "DEL SimpleType: MutableRel", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL SimpleName: aggCalls", "DEL SingleVariableDeclaration", "DEL SimpleName: groupSets", "DEL SimpleType: RelDataType", "DEL SimpleName: aggCalls", "DEL SimpleName: buf", "DEL MethodInvocation", "DEL SimpleName: MutableAggregate", "DEL SimpleName: rowType", "DEL MethodInvocation", "DEL QualifiedName: Aggregate.Group", "DEL SimpleName: AggregateCall", "DEL MethodInvocation", "DEL CastExpression", "DEL SimpleName: groupSets", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL Block", "DEL SimpleName: StringBuilder", "DEL MethodInvocation", "DEL SimpleName: getAggCallList", "DEL PrimitiveType: boolean", "DEL SimpleName: indicator", "DEL Modifier: public", "DEL SimpleName: RelDataType", "DEL SimpleType: Aggregate.Group", "DEL ClassInstanceCreation", "DEL SimpleType: ImmutableBitSet", "DEL SimpleName: input", "DEL SimpleName: groupSets", "DEL InstanceofExpression", "DEL ReturnStatement", "DEL SimpleName: aggCalls", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleType: ImmutableBitSet", "DEL SimpleName: Override", "DEL SimpleName: groupSet", "DEL SimpleName: aggCalls", "DEL SimpleName: groupSet", "DEL VariableDeclarationFragment", "DEL FieldAccess", "DEL SimpleName: ImmutableList", "DEL QualifiedName: MutableRelType.AGGREGATE", "DEL ParenthesizedExpression", "DEL SimpleName: aggCalls", "DEL Modifier: private", "DEL StringLiteral: \", groupSets: \"", "DEL ReturnStatement", "DEL SimpleType: List", "DEL ExpressionStatement", "DEL SimpleName: MutableRel", "DEL Block", "DEL SimpleName: groupSet", "DEL Block", "DEL SimpleType: ImmutableBitSet", "DEL Modifier: public", "DEL SimpleName: indicator", "DEL SimpleName: append", "DEL SimpleType: MutableAggregate", "DEL PrimitiveType: boolean", "DEL ReturnStatement", "DEL PrimitiveType: boolean", "DEL MethodInvocation", "DEL SimpleName: of", "DEL SimpleType: MutableAggregate", "DEL SimpleType: MutableAggregate", "DEL TextElement: . ", "DEL SimpleName: groupSet", "DEL InfixExpression: ==", "DEL SuperConstructorInvocation", "DEL MethodInvocation", "DEL Assignment: =", "DEL MarkerAnnotation", "DEL Modifier: public", "DEL TypeDeclaration: class", "DEL SingleVariableDeclaration", "DEL SimpleName: RelDataType", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: ImmutableBitSet", "DEL ThisExpression", "DEL MethodDeclaration", "DEL SimpleType: ImmutableBitSet", "DEL Block", "DEL ConditionalExpression", "DEL ExpressionStatement", "DEL QualifiedName: Aggregate.Group", "DEL SimpleName: ImmutableList", "DEL MarkerAnnotation", "DEL Block", "DEL SimpleName: groupSet", "DEL ParameterizedType: List<AggregateCall>", "DEL MethodInvocation", "DEL SimpleName: input", "DEL Modifier: protected", "DEL MethodDeclaration", "DEL SimpleName: StringBuilder", "DEL SimpleName: aggCalls", "DEL FieldAccess", "DEL SimpleName: ImmutableBitSet", "DEL SimpleName: indicator", "DEL ThisExpression", "DEL SimpleName: Override", "DEL SimpleName: obj", "DEL Modifier: final", "DEL SimpleName: groupSet", "DEL SingleVariableDeclaration", "DEL SimpleName: ImmutableBitSet", "DEL SimpleName: groupSet", "DEL Block", "DEL SimpleName: ImmutableList", "DEL SimpleName: Objects", "DEL SimpleName: obj", "DEL SimpleType: MutableAggregate", "DEL SimpleName: hash", "DEL SimpleName: groupSet", "DEL Modifier: final", "DEL MethodInvocation", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL FieldDeclaration", "DEL SingleVariableDeclaration", "DEL NullLiteral", "DEL MethodInvocation", "DEL SimpleName: MutableAggregate", "DEL MethodDeclaration", "DEL ParameterizedType: List<AggregateCall>", "DEL SimpleName: induce", "DEL SimpleName: rowType", "DEL Modifier: final", "DEL SimpleName: MutableRel", "DEL MethodInvocation", "DEL SimpleName: getGroupSets", "DEL Block", "DEL Javadoc", "DEL FieldDeclaration", "DEL SimpleName: getTypeFactory", "DEL SimpleName: AggregateCall", "DEL SimpleName: indicator", "DEL SimpleType: ImmutableBitSet", "DEL SimpleName: equals", "DEL Block", "DEL StringLiteral: \", calls: \"", "DEL Assignment: =", "DEL ThisExpression", "DEL ReturnStatement", "DEL Modifier: static", "DEL SimpleName: equals", "DEL SimpleName: MutableAggregate", "DEL MethodDeclaration", "DEL SimpleName: append", "DEL ParameterizedType: ImmutableList<ImmutableBitSet>", "DEL MarkerAnnotation", "DEL MethodDeclaration", "DEL SimpleName: groupSet", "DEL Block", "DEL SimpleType: List", "DEL SimpleName: Aggregate", "DEL Modifier: public", "DEL ParameterizedType: ImmutableList<ImmutableBitSet>", "DEL FieldDeclaration", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL SimpleName: aggCalls", "DEL SimpleName: groupSet", "DEL VariableDeclarationFragment", "DEL SimpleName: ImmutableList", "DEL FieldAccess", "DEL SimpleName: rowType", "DEL Modifier: public", "DEL SimpleName: groupSets", "DEL SimpleName: MutableAggregate", "DEL SimpleType: MutableAggregate", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleName: input", "DEL Modifier: private", "DEL FieldAccess", "DEL SimpleName: ImmutableBitSet", "DEL Modifier: private", "DEL SingleVariableDeclaration", "DEL SimpleName: input", "DEL SimpleName: append", "DEL QualifiedName: org.apache.calcite.rel.logical.LogicalAggregate", "DEL MethodInvocation", "DEL SimpleName: List", "DEL SimpleName: aggCalls", "DEL SimpleType: Object", "DEL SimpleName: aggCalls", "DEL SimpleName: indicator", "DEL CastExpression", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL SimpleName: List", "DEL SimpleType: AggregateCall", "DEL CastExpression", "DEL FieldAccess", "DEL SimpleName: groupSet", "DEL SimpleName: aggCalls", "DEL ParameterizedType: List<AggregateCall>", "DEL SimpleName: AggregateCall", "DEL SimpleName: hashCode", "DEL SimpleName: List", "DEL TextElement: Mutable equivalent of", "DEL SimpleName: digest", "DEL SimpleName: groupSets", "DEL SimpleName: ImmutableBitSet", "DEL SimpleType: ImmutableBitSet", "DEL SimpleType: ImmutableList", "DEL SimpleName: groupSet", "DEL SimpleName: rowType", "DEL SimpleName: groupSets", "DEL SimpleName: getGroupSet", "DEL SimpleName: aggCalls", "DEL SimpleName: groupSet", "DEL ParameterizedType: List<AggregateCall>", "DEL SimpleName: copyOf", "DEL InfixExpression: ||", "DEL StringLiteral: \"Aggregate(groupSet: \"", "DEL SimpleType: MutableSingleRel", "DEL Modifier: public", "DEL SimpleName: obj", "DEL SimpleName: ImmutableBitSet", "DEL PrimitiveType: boolean", "DEL Assignment: ="]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: StringBuilder", "DEL Modifier: public", "DEL SimpleName: equals", "DEL Block", "DEL StringLiteral: \"Sort(collation: \"", "DEL SimpleType: MutableSort", "DEL SimpleName: RexNode", "DEL SimpleType: StringBuilder", "DEL SimpleName: append", "DEL SimpleName: equals", "DEL SimpleName: obj", "DEL TextElement: . ", "DEL SimpleName: offset", "DEL SimpleName: Objects", "DEL SimpleName: fetch", "DEL SimpleName: Override", "DEL SimpleName: hashCode", "DEL SimpleName: collation", "DEL MethodInvocation", "DEL SimpleType: RexNode", "DEL SimpleName: MutableSort", "DEL SingleVariableDeclaration", "DEL SimpleName: obj", "DEL SimpleName: fetch", "DEL FieldAccess", "DEL SimpleName: offset", "DEL SimpleType: MutableRel", "DEL SimpleType: MutableSort", "DEL SimpleName: offset", "DEL SimpleName: fetch", "DEL TagElement", "DEL Block", "DEL TypeDeclaration: class", "DEL SingleVariableDeclaration", "DEL FieldDeclaration", "DEL SimpleName: RelCollation", "DEL Modifier: public", "DEL SimpleName: MutableRel", "DEL SimpleName: obj", "DEL FieldAccess", "DEL SimpleName: equals", "DEL FieldAccess", "DEL ParenthesizedExpression", "DEL SimpleType: MutableSingleRel", "DEL SimpleName: offset", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: input", "DEL SimpleName: buf", "DEL MethodDeclaration", "DEL SimpleName: obj", "DEL SimpleName: input", "DEL SimpleName: input", "DEL SimpleName: offset", "DEL SimpleName: MutableSingleRel", "DEL FieldDeclaration", "DEL SimpleName: RexNode", "DEL Modifier: final", "DEL MethodInvocation", "DEL CastExpression", "DEL SimpleName: MutableSort", "DEL ThisExpression", "DEL Modifier: public", "DEL ExpressionStatement", "DEL SimpleName: buf", "DEL SimpleName: fetch", "DEL SimpleType: Object", "DEL MethodInvocation", "DEL SimpleType: MutableSort", "DEL Modifier: static", "DEL Javadoc", "DEL SimpleName: equals", "DEL SimpleName: input", "DEL MethodInvocation", "DEL Modifier: private", "DEL ExpressionStatement", "DEL SimpleType: RexNode", "DEL SimpleType: RexNode", "DEL QualifiedName: org.apache.calcite.rel.core.Sort", "DEL SimpleType: RexNode", "DEL MethodInvocation", "DEL SimpleName: input", "DEL InfixExpression: !=", "DEL TagElement: @link", "DEL SimpleName: input", "DEL NullLiteral", "DEL QualifiedName: MutableRelType.SORT", "DEL SimpleName: RexNode", "DEL IfStatement", "DEL ReturnStatement", "DEL SimpleName: StringBuilder", "DEL SimpleType: RelCollation", "DEL SimpleType: MutableRel", "DEL VariableDeclarationFragment", "DEL SimpleName: input", "DEL SimpleType: MutableSort", "DEL ReturnStatement", "DEL QualifiedName: input.rowType", "DEL FieldAccess", "DEL SimpleName: collation", "DEL SimpleName: offset", "DEL ParenthesizedExpression", "DEL SimpleName: fetch", "DEL SimpleName: RexNode", "DEL SingleVariableDeclaration", "DEL SimpleName: append", "DEL SimpleName: RexNode", "DEL StringLiteral: \", offset: \"", "DEL SimpleName: MutableRel", "DEL InfixExpression: !=", "DEL SimpleName: append", "DEL SimpleName: Objects", "DEL SingleVariableDeclaration", "DEL SimpleName: collation", "DEL SimpleName: collation", "DEL Modifier: private", "DEL ThisExpression", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleType: RexNode", "DEL SimpleName: of", "DEL FieldAccess", "DEL MarkerAnnotation", "DEL Modifier: final", "DEL SimpleName: fetch", "DEL InfixExpression: &&", "DEL ReturnStatement", "DEL SimpleName: fetch", "DEL SimpleName: buf", "DEL ExpressionStatement", "DEL CastExpression", "DEL SimpleName: StringBuilder", "DEL SimpleName: append", "DEL SimpleName: MutableSort", "DEL SimpleName: MutableSort", "DEL InfixExpression: ==", "DEL SimpleType: RelCollation", "DEL VariableDeclarationFragment", "DEL FieldAccess", "DEL MarkerAnnotation", "DEL MethodDeclaration", "DEL SimpleName: Override", "DEL SimpleName: MutableSort", "DEL SimpleName: Objects", "DEL SimpleName: RexNode", "DEL MarkerAnnotation", "DEL ClassInstanceCreation", "DEL SimpleName: MutableSort", "DEL IfStatement", "DEL SimpleName: fetch", "DEL SimpleName: buf", "DEL SimpleName: collation", "DEL SimpleName: offset", "DEL Assignment: =", "DEL TextElement: Mutable equivalent of ", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: digest", "DEL SimpleName: obj", "DEL SimpleName: collation", "DEL CastExpression", "DEL SingleVariableDeclaration", "DEL SimpleType: MutableSort", "DEL Modifier: private", "DEL StringLiteral: \", fetch: \"", "DEL VariableDeclarationFragment", "DEL SimpleName: offset", "DEL SimpleName: MutableSort", "DEL SimpleName: obj", "DEL SimpleName: offset", "DEL MethodDeclaration", "DEL FieldAccess", "DEL SimpleName: collation", "DEL SimpleName: offset", "DEL SimpleName: RelCollation", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL PrimitiveType: boolean", "DEL Block", "DEL InstanceofExpression", "DEL Block", "DEL ThisExpression", "DEL SimpleName: collation", "DEL Modifier: protected", "DEL MethodInvocation", "DEL ParenthesizedExpression", "DEL SimpleName: collation", "DEL ExpressionStatement", "DEL SimpleName: RelCollation", "DEL MethodInvocation", "DEL SimpleType: MutableSort", "DEL InfixExpression: ||", "DEL SimpleName: fetch", "DEL NullLiteral", "DEL SimpleName: equals", "DEL SimpleName: fetch", "DEL SimpleType: MutableSort", "DEL MethodDeclaration", "DEL Modifier: private", "DEL SimpleName: buf", "DEL FieldDeclaration", "DEL SimpleName: hash", "DEL SimpleName: append", "DEL SimpleName: obj", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: offset", "DEL Modifier: final", "DEL ThisExpression", "DEL PrimitiveType: int", "DEL ExpressionStatement", "DEL SimpleName: MutableSort", "DEL ParenthesizedExpression", "DEL SimpleName: Override", "DEL SimpleName: MutableSort", "DEL SimpleType: RexNode", "DEL SimpleName: Object", "DEL SuperConstructorInvocation", "DEL SimpleType: RelCollation", "DEL Assignment: =", "DEL CastExpression", "DEL SimpleName: collation", "DEL Modifier: static", "DEL SimpleName: append", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL StringLiteral: \")\"", "DEL Assignment: =", "DEL SimpleName: fetch", "DEL SimpleName: append"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleType: MutableRel", "DEL SimpleName: input", "DEL SimpleName: inputs", "DEL Modifier: public", "DEL Modifier: protected", "DEL Modifier: private", "DEL SimpleName: input", "DEL SimpleName: MutableRel", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL PrimitiveType: void", "DEL SimpleType: MutableRel", "DEL PrimitiveType: int", "DEL Modifier: public", "DEL Block", "DEL Assignment: =", "DEL SimpleName: inputs", "DEL MethodInvocation", "DEL Javadoc", "DEL FieldDeclaration", "DEL SimpleName: visitor", "DEL TypeDeclaration: class", "DEL IfStatement", "DEL NullLiteral", "DEL SimpleName: visit", "DEL SimpleName: MutableRel", "DEL SimpleName: MutableSetOp", "DEL SimpleType: RelDataType", "DEL SimpleName: RelOptCluster", "DEL InfixExpression: !=", "DEL SimpleName: inputs", "DEL SimpleName: MutableSetOp", "DEL SimpleName: input", "DEL SimpleName: rowType", "DEL SimpleName: input", "DEL SingleVariableDeclaration", "DEL SimpleName: type", "DEL SimpleName: List", "DEL Modifier: public", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: MutableRelType", "DEL ExpressionStatement", "DEL SimpleName: inputs", "DEL SimpleName: input", "DEL TextElement: Base class for set-operations. ", "DEL SimpleName: Override", "DEL SimpleName: visitor", "DEL Block", "DEL ThisExpression", "DEL SimpleType: MutableRel", "DEL SimpleName: MutableRelType", "DEL QualifiedName: input.parent", "DEL Assignment: =", "DEL SimpleName: setInput", "DEL SimpleType: MutableRelVisitor", "DEL SimpleName: List", "DEL SimpleType: MutableRel", "DEL SimpleName: inputs", "DEL SimpleType: List", "DEL SimpleType: MutableRel", "DEL SimpleName: ordinalInParent", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: getInputs", "DEL Modifier: static", "DEL SimpleName: childrenAccept", "DEL Modifier: abstract", "DEL SimpleName: rowType", "DEL SimpleName: RelDataType", "DEL PrimitiveType: void", "DEL Block", "DEL MethodDeclaration", "DEL SimpleName: ordinalInParent", "DEL SimpleName: set", "DEL ParameterizedType: List<MutableRel>", "DEL SimpleType: List", "DEL SimpleType: MutableRel", "DEL FieldAccess", "DEL SimpleName: MutableRel", "DEL VariableDeclarationFragment", "DEL SimpleName: MutableRelVisitor", "DEL SingleVariableDeclaration", "DEL SimpleName: Override", "DEL SingleVariableDeclaration", "DEL MarkerAnnotation", "DEL MethodDeclaration", "DEL SimpleName: inputs", "DEL SimpleName: type", "DEL ParameterizedType: List<MutableRel>", "DEL TagElement", "DEL SimpleName: List", "DEL ExpressionStatement", "DEL SimpleName: MutableRel", "DEL SingleVariableDeclaration", "DEL SimpleType: List", "DEL ExpressionStatement", "DEL SimpleName: cluster", "DEL MarkerAnnotation", "DEL SuperConstructorInvocation", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL SimpleName: cluster", "DEL SimpleName: ordinalInParent", "DEL SimpleType: RelOptCluster", "DEL Modifier: protected", "DEL ParameterizedType: List<MutableRel>", "DEL SimpleName: MutableRel", "DEL SimpleName: inputs", "DEL SingleVariableDeclaration", "DEL SimpleName: MutableRel", "DEL ExpressionStatement", "DEL Block", "DEL MarkerAnnotation", "DEL ThisExpression", "DEL SimpleName: Override", "DEL Modifier: final", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL QualifiedName: input.ordinalInParent", "DEL MethodDeclaration", "DEL EnhancedForStatement"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: append", "DEL PrimitiveType: int", "DEL SimpleName: all", "DEL SimpleName: Override", "DEL SimpleType: MutableUnion", "DEL MethodInvocation", "DEL SimpleName: inputs", "DEL SingleVariableDeclaration", "DEL SimpleName: Object", "DEL ClassInstanceCreation", "DEL Block", "DEL InstanceofExpression", "DEL SimpleName: inputs", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SimpleName: size", "DEL SimpleName: obj", "DEL Javadoc", "DEL SimpleType: MutableUnion", "DEL SimpleType: MutableUnion", "DEL SimpleName: equals", "DEL ExpressionStatement", "DEL SimpleType: Object", "DEL SimpleName: MutableRel", "DEL SimpleName: List", "DEL MethodInvocation", "DEL Block", "DEL ReturnStatement", "DEL PrimitiveType: boolean", "DEL SimpleName: obj", "DEL TagElement", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: input0", "DEL SimpleType: MutableSetOp", "DEL SimpleName: RelDataType", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL SimpleName: buf", "DEL InfixExpression: &&", "DEL MethodInvocation", "DEL MarkerAnnotation", "DEL MarkerAnnotation", "DEL SimpleType: List", "DEL QualifiedName: org.apache.calcite.rel.logical.LogicalUnion", "DEL SimpleName: Override", "DEL SimpleName: List", "DEL SuperConstructorInvocation", "DEL ParameterizedType: List<MutableRel>", "DEL TextElement: Mutable equivalent of", "DEL TagElement: @link", "DEL SimpleName: rowType", "DEL Modifier: static", "DEL Modifier: public", "DEL SimpleName: digest", "DEL InfixExpression: ||", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL SimpleType: MutableRel", "DEL SimpleName: cluster", "DEL QualifiedName: MutableRelType.UNION", "DEL Modifier: final", "DEL QualifiedName: input0.rowType", "DEL SimpleName: all", "DEL MarkerAnnotation", "DEL InfixExpression: >=", "DEL SimpleType: RelDataType", "DEL SimpleName: StringBuilder", "DEL SimpleName: all", "DEL SimpleType: StringBuilder", "DEL SimpleName: MutableUnion", "DEL SimpleName: RelOptCluster", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SimpleType: StringBuilder", "DEL SimpleName: MutableUnion", "DEL SimpleName: MutableUnion", "DEL FieldAccess", "DEL SimpleName: MutableUnion", "DEL SimpleType: MutableRel", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL SimpleName: all", "DEL SimpleType: MutableUnion", "DEL SimpleName: all", "DEL SingleVariableDeclaration", "DEL SimpleType: List", "DEL QualifiedName: input0.cluster", "DEL SingleVariableDeclaration", "DEL SimpleName: hash", "DEL MethodDeclaration", "DEL SimpleName: get", "DEL PrimitiveType: boolean", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL SimpleName: MutableRel", "DEL NumberLiteral: 2", "DEL SimpleName: inputs", "DEL SimpleName: inputs", "DEL SimpleName: rowType", "DEL MethodDeclaration", "DEL FieldDeclaration", "DEL TextElement: . ", "DEL SimpleName: equals", "DEL VariableDeclarationFragment", "DEL Block", "DEL PrimitiveType: boolean", "DEL ParenthesizedExpression", "DEL TypeDeclaration: class", "DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: inputs", "DEL ThisExpression", "DEL InfixExpression: ==", "DEL CastExpression", "DEL ReturnStatement", "DEL Modifier: private", "DEL SingleVariableDeclaration", "DEL SimpleName: Override", "DEL Block", "DEL SimpleName: of", "DEL MethodDeclaration", "DEL AssertStatement", "DEL SimpleName: MutableSetOp", "DEL SimpleName: hashCode", "DEL SimpleName: obj", "DEL SimpleName: type", "DEL SimpleName: MutableUnion", "DEL SimpleName: Objects", "DEL StringLiteral: \"Union\"", "DEL Modifier: static", "DEL SimpleName: obj", "DEL ReturnStatement", "DEL SimpleName: MutableRel", "DEL SimpleName: MutableUnion", "DEL PrimitiveType: boolean", "DEL Modifier: protected", "DEL SimpleName: inputs", "DEL SimpleName: StringBuilder", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleName: all", "DEL ParameterizedType: List<MutableRel>", "DEL SimpleType: RelOptCluster", "DEL SimpleType: MutableRel", "DEL SimpleName: cluster", "DEL VariableDeclarationStatement", "DEL SimpleName: inputs", "DEL SimpleName: inputs", "DEL SimpleName: buf", "DEL SimpleName: getInputs"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Modifier: public", "DEL SuperConstructorInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: List", "DEL Block", "DEL TextElement: Base Class for relations with two inputs ", "DEL MethodDeclaration", "DEL SimpleType: MutableRelType", "DEL SimpleName: visitor", "DEL SimpleName: MutableRel", "DEL QualifiedName: right.ordinalInParent", "DEL SimpleName: childrenAccept", "DEL MethodDeclaration", "DEL Assignment: =", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: right", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleType: MutableRel", "DEL Assignment: =", "DEL SimpleName: type", "DEL SimpleName: ordinalInParent", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL SimpleName: rowType", "DEL FieldDeclaration", "DEL SimpleName: right", "DEL NumberLiteral: 0", "DEL SimpleName: MutableBiRel", "DEL SimpleType: MutableRel", "DEL SimpleType: MutableRel", "DEL SimpleName: MutableRelVisitor", "DEL SimpleName: input", "DEL ExpressionStatement", "DEL FieldAccess", "DEL SimpleName: MutableRel", "DEL QualifiedName: left.parent", "DEL SimpleName: left", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: MutableRel", "DEL TypeDeclaration: class", "DEL Block", "DEL SimpleType: List", "DEL ExpressionStatement", "DEL SimpleName: ordinalInParent", "DEL Javadoc", "DEL PrimitiveType: void", "DEL SimpleName: visit", "DEL IfStatement", "DEL SimpleName: right", "DEL ExpressionStatement", "DEL FieldDeclaration", "DEL Modifier: protected", "DEL Assignment: =", "DEL QualifiedName: right.parent", "DEL PrimitiveType: int", "DEL SimpleName: ordinalInParent", "DEL Assignment: =", "DEL SimpleName: right", "DEL Assignment: =", "DEL IfStatement", "DEL InfixExpression: ==", "DEL ThrowStatement", "DEL ExpressionStatement", "DEL ThisExpression", "DEL SimpleName: visit", "DEL MethodDeclaration", "DEL SimpleType: MutableRel", "DEL ParameterizedType: List<MutableRel>", "DEL ThisExpression", "DEL Block", "DEL SimpleName: visitor", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: input", "DEL SimpleName: right", "DEL FieldAccess", "DEL SimpleType: RelDataType", "DEL SimpleType: MutableRel", "DEL SimpleName: getRight", "DEL SimpleName: right", "DEL ExpressionStatement", "DEL SimpleName: getInputs", "DEL SimpleName: MutableRel", "DEL Assignment: =", "DEL SimpleType: MutableRel", "DEL Block", "DEL Assignment: =", "DEL NullLiteral", "DEL SimpleName: MutableRel", "DEL Block", "DEL SimpleType: MutableRel", "DEL SimpleType: RelOptCluster", "DEL Modifier: public", "DEL SimpleName: cluster", "DEL VariableDeclarationFragment", "DEL SimpleType: MutableRel", "DEL SimpleName: MutableRel", "DEL QualifiedName: left.ordinalInParent", "DEL SimpleName: ImmutableList", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL Block", "DEL ThisExpression", "DEL Modifier: public", "DEL InfixExpression: !=", "DEL NumberLiteral: 1", "DEL SimpleName: of", "DEL SimpleName: MutableRel", "DEL SingleVariableDeclaration", "DEL FieldAccess", "DEL Modifier: static", "DEL SimpleName: input", "DEL InfixExpression: >", "DEL Block", "DEL PrimitiveType: void", "DEL SimpleName: getLeft", "DEL SimpleName: right", "DEL ThisExpression", "DEL SimpleName: right", "DEL ReturnStatement", "DEL Modifier: private", "DEL SimpleName: MutableRelType", "DEL SimpleName: RelOptCluster", "DEL Block", "DEL ThisExpression", "DEL ThisExpression", "DEL ExpressionStatement", "DEL Modifier: public", "DEL ReturnStatement", "DEL SimpleName: ordinalInParent", "DEL SimpleName: setInput", "DEL ExpressionStatement", "DEL SimpleName: IllegalArgumentException", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL ThisExpression", "DEL SimpleName: left", "DEL SimpleName: visitor", "DEL SimpleName: type", "DEL NumberLiteral: 1", "DEL TagElement", "DEL Modifier: public", "DEL SimpleName: MutableBiRel", "DEL SingleVariableDeclaration", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: MutableRel", "DEL SingleVariableDeclaration", "DEL FieldAccess", "DEL SingleVariableDeclaration", "DEL SimpleType: MutableRel", "DEL SimpleType: MutableRelVisitor", "DEL Assignment: =", "DEL SimpleName: left", "DEL SimpleName: MutableRel", "DEL SimpleName: left", "DEL SimpleName: left", "DEL SingleVariableDeclaration", "DEL SimpleName: RelDataType", "DEL SimpleName: cluster", "DEL QualifiedName: input.parent", "DEL QualifiedName: input.ordinalInParent", "DEL SimpleName: left", "DEL SimpleName: left", "DEL ExpressionStatement", "DEL Modifier: protected", "DEL SimpleType: IllegalArgumentException", "DEL SimpleName: rowType", "DEL SimpleName: left", "DEL MethodDeclaration", "DEL Modifier: abstract", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL NumberLiteral: 0", "DEL SimpleName: input"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: buf", "DEL SimpleName: joinType", "DEL Modifier: static", "DEL QualifiedName: MutableRelType.JOIN", "DEL SimpleName: joinType", "DEL SingleVariableDeclaration", "DEL ThisExpression", "DEL StringLiteral: \")\"", "DEL Modifier: public", "DEL SimpleName: JoinRelType", "DEL SimpleName: fieldList", "DEL SimpleName: toString", "DEL SimpleName: MutableJoin", "DEL Assignment: =", "DEL SimpleName: variablesSet", "DEL SimpleType: JoinRelType", "DEL SingleVariableDeclaration", "DEL SimpleType: JoinRelType", "DEL SimpleName: equals", "DEL SimpleName: JoinRelType", "DEL MethodInvocation", "DEL SimpleName: RelDataType", "DEL SimpleName: rowType", "DEL SimpleName: MutableJoin", "DEL MethodInvocation", "DEL SimpleName: MutableJoin", "DEL SimpleType: Set", "DEL SimpleName: left", "DEL StringLiteral: \"Join(left: \"", "DEL SimpleName: left", "DEL ReturnStatement", "DEL SimpleName: List", "DEL SimpleName: StringBuilder", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: getCondition", "DEL Javadoc", "DEL Block", "DEL SimpleName: MutableRel", "DEL ThisExpression", "DEL SimpleName: Set", "DEL SimpleName: left", "DEL SimpleName: RelOptCluster", "DEL SimpleName: obj", "DEL SimpleName: obj", "DEL SimpleName: MutableJoin", "DEL SingleVariableDeclaration", "DEL ThisExpression", "DEL SimpleName: append", "DEL TextElement: Mutable equivalent of", "DEL SimpleName: MutableJoin", "DEL SingleVariableDeclaration", "DEL SimpleName: cluster", "DEL TagElement: @link", "DEL MethodInvocation", "DEL SimpleName: joinType", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL CastExpression", "DEL SimpleName: right", "DEL SimpleType: MutableJoin", "DEL ReturnStatement", "DEL SimpleName: copyOf", "DEL SimpleName: append", "DEL SimpleName: joinType", "DEL InfixExpression: ==", "DEL ParameterizedType: ImmutableSet<CorrelationId>", "DEL SimpleName: right", "DEL SimpleName: rowType", "DEL SimpleName: cluster", "DEL SimpleName: MutableJoin", "DEL SimpleType: MutableJoin", "DEL SimpleName: variablesStopped", "DEL SimpleName: ImmutableSet", "DEL InfixExpression: ||", "DEL SimpleName: variablesSet", "DEL QualifiedName: left.cluster", "DEL SimpleName: condition", "DEL SimpleType: StringBuilder", "DEL SimpleName: ImmutableSet", "DEL FieldAccess", "DEL FieldAccess", "DEL SimpleName: emptyList", "DEL SimpleName: right", "DEL SimpleName: equals", "DEL MethodInvocation", "DEL SimpleName: getRowType", "DEL VariableDeclarationStatement", "DEL SimpleName: RexNode", "DEL MethodInvocation", "DEL TextElement:  is disallowed.", "DEL MethodInvocation", "DEL CastExpression", "DEL SimpleName: checkNotNull", "DEL SimpleName: left", "DEL Block", "DEL ThisExpression", "DEL SimpleName: condition", "DEL MethodInvocation", "DEL SimpleType: RelDataType", "DEL SimpleType: JoinRelType", "DEL SingleVariableDeclaration", "DEL SimpleName: hash", "DEL MethodInvocation", "DEL ParenthesizedExpression", "DEL ParameterizedType: ImmutableSet<CorrelationId>", "DEL ParameterizedType: Set<CorrelationId>", "DEL SimpleName: CorrelationId", "DEL Modifier: public", "DEL SimpleName: append", "DEL ExpressionStatement", "DEL MarkerAnnotation", "DEL FieldAccess", "DEL ParenthesizedExpression", "DEL SimpleName: JoinRelType", "DEL Assignment: =", "DEL FieldDeclaration", "DEL SimpleName: Override", "DEL SingleVariableDeclaration", "DEL SimpleName: equals", "DEL TextElement: , except that", "DEL SimpleName: right", "DEL MemberRef", "DEL QualifiedName: org.apache.calcite.rel.logical.LogicalJoin", "DEL ReturnStatement", "DEL SimpleName: toString", "DEL SimpleType: RexNode", "DEL SimpleType: List", "DEL InstanceofExpression", "DEL SimpleName: joinType", "DEL SimpleName: RIGHT", "DEL Modifier: protected", "DEL TextElement: . ", "DEL SimpleType: JoinRelType", "DEL InfixExpression: ==", "DEL Modifier: public", "DEL SimpleName: deriveJoinRowType", "DEL SimpleName: joinType", "DEL SimpleName: left", "DEL MethodDeclaration", "DEL SimpleName: joinType", "DEL SimpleName: RelDataTypeField", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: MutableRel", "DEL SimpleName: left", "DEL Modifier: public", "DEL SimpleName: obj", "DEL SimpleName: append", "DEL SimpleName: rowType", "DEL MethodInvocation", "DEL SimpleType: CorrelationId", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL Modifier: private", "DEL SimpleName: MutableRel", "DEL SimpleType: RexNode", "DEL SimpleType: MutableJoin", "DEL InfixExpression: &&", "DEL SimpleName: joinType", "DEL SimpleType: RelDataTypeField", "DEL TagElement: @link", "DEL CastExpression", "DEL FieldAccess", "DEL Modifier: public", "DEL MethodDeclaration", "DEL SimpleType: CorrelationId", "DEL SimpleName: obj", "DEL SimpleName: RexNode", "DEL SimpleName: CorrelationId", "DEL FieldDeclaration", "DEL SimpleType: MutableRel", "DEL ReturnStatement", "DEL SimpleName: condition", "DEL SimpleType: Object", "DEL SimpleName: joinType", "DEL SimpleName: MutableRel", "DEL Block", "DEL SimpleName: condition", "DEL SimpleName: getVariablesSet", "DEL SimpleName: Object", "DEL SimpleName: equals", "DEL TagElement", "DEL SingleVariableDeclaration", "DEL SimpleName: right", "DEL SimpleName: of", "DEL MethodDeclaration", "DEL InfixExpression: &&", "DEL SimpleName: left", "DEL CastExpression", "DEL Modifier: final", "DEL Modifier: static", "DEL Javadoc", "DEL VariableDeclarationStatement", "DEL SimpleName: MutableJoin", "DEL SimpleName: Preconditions", "DEL SimpleType: MutableJoin", "DEL SimpleName: joinType", "DEL SimpleType: StringBuilder", "DEL Block", "DEL MethodInvocation", "DEL ParameterizedType: List<RelDataTypeField>", "DEL StringLiteral: \", right:\"", "DEL SimpleName: ImmutableSet", "DEL Modifier: protected", "DEL SimpleName: right", "DEL MethodDeclaration", "DEL FieldAccess", "DEL SimpleType: RelDataType", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL SimpleName: variablesSet", "DEL Modifier: public", "DEL SimpleName: condition", "DEL SimpleType: MutableJoin", "DEL SimpleName: joinType", "DEL SimpleType: ImmutableSet", "DEL SimpleName: MutableBiRel", "DEL SimpleType: MutableRel", "DEL SimpleName: MutableJoin", "DEL SimpleName: condition", "DEL SimpleName: StringBuilder", "DEL ParenthesizedExpression", "DEL SimpleName: checkNotNull", "DEL SimpleName: right", "DEL SimpleType: MutableJoin", "DEL SingleVariableDeclaration", "DEL SimpleName: Objects", "DEL SimpleType: MutableRel", "DEL SimpleName: rowType", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL SimpleName: variablesStopped", "DEL MethodDeclaration", "DEL PrimitiveType: boolean", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL TypeDeclaration: class", "DEL SimpleName: digest", "DEL MarkerAnnotation", "DEL FieldDeclaration", "DEL InfixExpression: &&", "DEL SimpleType: MutableJoin", "DEL SimpleName: toString", "DEL SimpleType: ImmutableSet", "DEL SimpleName: condition", "DEL TagElement", "DEL SingleVariableDeclaration", "DEL Block", "DEL MethodInvocation", "DEL TextElement: Values must be of enumeration ", "DEL SimpleName: Set", "DEL InfixExpression: &&", "DEL SimpleName: condition", "DEL Modifier: private", "DEL SimpleName: MutableRel", "DEL SimpleName: append", "DEL SimpleName: Preconditions", "DEL SimpleName: Collections", "DEL ReturnStatement", "DEL SimpleName: JoinRelType", "DEL SimpleName: obj", "DEL MethodDeclaration", "DEL SimpleName: fieldList", "DEL SimpleName: hashCode", "DEL SimpleName: variablesSet", "DEL TagElement: @link", "DEL SimpleName: RexNode", "DEL SimpleName: obj", "DEL SimpleName: CorrelationId", "DEL SingleVariableDeclaration", "DEL SimpleName: left", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL SimpleName: obj", "DEL SimpleType: CorrelationId", "DEL SimpleName: getRowType", "DEL SingleVariableDeclaration", "DEL SimpleName: getTypeFactory", "DEL SimpleType: RexNode", "DEL Block", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL SimpleName: JoinRelType", "DEL SimpleName: buf", "DEL FieldAccess", "DEL ParenthesizedExpression", "DEL MethodDeclaration", "DEL SimpleName: MutableJoin", "DEL Block", "DEL SimpleType: CorrelationId", "DEL SimpleName: RelDataType", "DEL SimpleName: getJoinType", "DEL SimpleName: SqlValidatorUtil", "DEL ReturnStatement", "DEL ClassInstanceCreation", "DEL SimpleName: right", "DEL SimpleName: JoinRelType", "DEL MethodInvocation", "DEL MarkerAnnotation", "DEL MethodInvocation", "DEL SimpleType: RexNode", "DEL SimpleName: left", "DEL SimpleName: condition", "DEL SimpleName: RexNode", "DEL MethodInvocation", "DEL SimpleType: RelOptCluster", "DEL SimpleName: right", "DEL SimpleType: MutableBiRel", "DEL SuperConstructorInvocation", "DEL SimpleName: Override", "DEL ParameterizedType: Set<CorrelationId>", "DEL MethodInvocation", "DEL FieldAccess", "DEL VariableDeclarationFragment", "DEL SimpleName: CorrelationId", "DEL SimpleName: condition", "DEL Modifier: protected", "DEL PrimitiveType: int", "DEL SimpleName: variablesSet", "DEL SimpleType: Set"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: strip", "DEL SimpleName: parent", "DEL ParameterizedType: List<Integer>", "DEL VariableDeclarationFragment", "DEL SimpleName: parent", "DEL SimpleName: MutableRel", "DEL SimpleName: RexNode", "DEL SimpleName: input", "DEL SingleVariableDeclaration", "DEL SimpleType: List", "DEL SimpleName: rowType", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: MutableRel", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: list", "DEL SimpleName: MutableProject", "DEL SimpleType: String", "DEL TextElement: . ", "DEL SimpleName: node", "DEL Modifier: final", "DEL SimpleName: rel", "DEL Modifier: protected", "DEL SimpleName: list", "DEL QualifiedName: Util.FoundOne.NULL", "DEL SimpleType: MutableRel", "DEL TagElement: @link", "DEL TagElement: @link", "DEL SimpleName: pos", "DEL SimpleType: List", "DEL SimpleName: MutableRel", "DEL MethodInvocation", "DEL ParameterizedType: List<MutableRel>", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL ParameterizedType: List<MutableRel>", "DEL MethodRefParameter", "DEL SimpleName: MutableRel", "DEL SimpleName: rename", "DEL Block", "DEL SimpleType: MutableRel", "DEL Modifier: static", "DEL BooleanLiteral: true", "DEL SimpleName: castRowType", "DEL IfStatement", "DEL MethodInvocation", "DEL ParameterizedType: List<RexNode>", "DEL Javadoc", "DEL ThrowStatement", "DEL IfStatement", "DEL SimpleType: Integer", "DEL Modifier: final", "DEL SimpleName: project", "DEL Modifier: final", "DEL SimpleType: List", "DEL SimpleName: parent", "DEL SimpleName: project", "DEL MethodInvocation", "DEL Modifier: static", "DEL SimpleName: castRowType", "DEL Modifier: static", "DEL SimpleType: MutableProject", "DEL InfixExpression: +", "DEL SimpleName: MutableRel", "DEL AnonymousClassDeclaration", "DEL SimpleName: list", "DEL SimpleName: RelDataType", "DEL TagElement: @link", "DEL SimpleType: MutableRel", "DEL SimpleName: MutableRel", "DEL SimpleName: areRowTypesEqual", "DEL SimpleName: rel", "DEL SimpleName: e", "DEL SimpleName: ArrayList", "DEL SimpleName: rowType", "DEL MethodInvocation", "DEL SimpleName: childRowType", "DEL QualifiedName: org.apache.calcite.plan.RelOptUtil", "DEL SimpleName: pos", "DEL QualifiedName: child.cluster", "DEL SimpleName: target", "DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL Javadoc", "DEL Modifier: static", "DEL Block", "DEL MemberRef", "DEL PrimitiveType: boolean", "DEL SimpleName: MutableRel", "DEL TextElement: . ", "DEL MethodDeclaration", "DEL SimpleName: MutableRel", "DEL Block", "DEL SimpleType: MutableRel", "DEL SimpleName: query", "DEL SimpleName: list", "DEL TextElement: Equivalent to", "DEL MethodInvocation", "DEL ParameterizedType: List<MutableRel>", "DEL SimpleName: project", "DEL SimpleName: add", "DEL SimpleName: size", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: index", "DEL TypeDeclaration: class", "DEL SimpleName: Integer", "DEL SimpleName: descendantsRecurse", "DEL AnonymousClassDeclaration", "DEL MethodInvocation", "DEL TextElement: Based on", "DEL SimpleName: getProjects", "DEL SimpleName: get", "DEL PrimitiveType: int", "DEL SimpleName: getInput", "DEL SimpleName: project", "DEL SimpleType: Util.FoundOne", "DEL SimpleType: MutableRel", "DEL SuperMethodInvocation", "DEL Modifier: static", "DEL ConditionalExpression", "DEL MethodInvocation", "DEL SimpleName: getFieldNames", "DEL PrimitiveType: void", "DEL SimpleType: RexNode", "DEL SimpleType: MutableRel", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: MutableRel", "DEL MethodDeclaration", "DEL SimpleName: ancestor", "DEL ReturnStatement", "DEL SimpleName: Mappings", "DEL MethodDeclaration", "DEL SimpleName: List", "DEL SimpleType: MutableRel", "DEL SingleVariableDeclaration", "DEL SimpleName: MutableRel", "DEL SimpleType: MutableProject", "DEL VariableDeclarationStatement", "DEL SimpleName: castRowType", "DEL SimpleName: rowType", "DEL Assignment: =", "DEL SimpleName: rowType", "DEL SimpleName: getParent", "DEL SimpleType: MutableRel", "DEL SimpleName: getRexBuilder", "DEL Modifier: private", "DEL VariableDeclarationStatement", "DEL QualifiedName: node.ordinalInParent", "DEL TextElement: . ", "DEL SimpleName: List", "DEL SimpleName: ordinal", "DEL Block", "DEL TagElement", "DEL MemberRef", "DEL VariableDeclarationFragment", "DEL SimpleName: of", "DEL SimpleName: RexNode", "DEL ReturnStatement", "DEL SimpleName: of", "DEL SimpleName: createCastRel", "DEL SimpleName: RexInputRef", "DEL TagElement", "DEL SimpleName: MutableRel", "DEL TagElement: @link", "DEL SimpleName: MutableRel", "DEL PrimitiveType: boolean", "DEL SingleVariableDeclaration", "DEL SimpleName: MutableRel", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Modifier: static", "DEL SimpleName: posList", "DEL SimpleName: isTrivial", "DEL ReturnStatement", "DEL SimpleName: child", "DEL Assignment: =", "DEL SimpleName: getFieldNames", "DEL SimpleName: isIdentity", "DEL SimpleName: RexUtil", "DEL SimpleName: project", "DEL InfixExpression: +", "DEL SimpleName: getInputs", "DEL SimpleType: MutableRelVisitor", "DEL ParameterizedType: ArrayList<>", "DEL Block", "DEL MethodInvocation", "DEL NullLiteral", "DEL SingleVariableDeclaration", "DEL SimpleName: descendants", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleName: MutableProject", "DEL SimpleName: ordinal", "DEL SimpleName: bijection", "DEL VariableDeclarationFragment", "DEL SimpleName: fieldNames", "DEL SingleVariableDeclaration", "DEL SimpleName: MutableRel", "DEL SingleVariableDeclaration", "DEL Block", "DEL InfixExpression: !=", "DEL ExpressionStatement", "DEL SimpleName: MutableRel", "DEL SimpleName: fieldNames", "DEL TextElement: . ", "DEL MethodInvocation", "DEL SimpleName: equals", "DEL Block", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL SimpleName: isIdentity", "DEL Modifier: final", "DEL Block", "DEL SimpleName: childRowType", "DEL QualifiedName: Util.FoundOne", "DEL MethodInvocation", "DEL SimpleName: rel", "DEL Modifier: static", "DEL Block", "DEL SimpleName: rel", "DEL SimpleName: posList", "DEL SimpleName: String", "DEL SimpleName: preOrderTraverseNext", "DEL ReturnStatement", "DEL Block", "DEL Modifier: public", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL Block", "DEL MethodInvocation", "DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL SimpleName: RelOptUtil", "DEL ConditionalExpression", "DEL SimpleName: visit", "DEL SimpleType: List", "DEL SimpleName: rowType", "DEL SimpleName: List", "DEL EnhancedForStatement", "DEL SimpleType: RexNode", "DEL SimpleType: AbstractList", "DEL SimpleName: index", "DEL QualifiedName: node.ordinalInParent", "DEL SimpleName: List", "DEL MethodInvocation", "DEL QualifiedName: org.apache.calcite.rel.RelNode", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL MethodInvocation", "DEL QualifiedName: org.apache.calcite.rel.core.Project", "DEL SimpleName: castExps", "DEL TagElement: @link", "DEL SingleVariableDeclaration", "DEL SimpleName: parent", "DEL Block", "DEL SimpleType: MutableRel", "DEL SimpleName: MutableRel", "DEL PrimitiveType: int", "DEL SimpleName: get", "DEL NumberLiteral: 1", "DEL SimpleName: RelDataType", "DEL SimpleType: List", "DEL ParameterizedType: AbstractList<RexNode>", "DEL SimpleType: RelDataType", "DEL SimpleName: posList", "DEL ReturnStatement", "DEL SimpleName: RexNode", "DEL SimpleType: MutableRel", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: ordinal", "DEL SimpleName: descendantsRecurse", "DEL SimpleName: rowType", "DEL Modifier: static", "DEL SimpleType: MutableRel", "DEL SimpleName: getRowType", "DEL ClassInstanceCreation", "DEL PrimitiveType: int", "DEL ReturnStatement", "DEL QualifiedName: java.util.List", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL SimpleType: org.apache.calcite.rel.RelNode", "DEL SimpleName: list", "DEL SimpleName: target", "DEL SimpleName: Override", "DEL ReturnStatement", "DEL SimpleName: target", "DEL QualifiedName: org.apache.calcite.rel.rules.ProjectRemoveRule", "DEL SimpleName: permute", "DEL Block", "DEL SimpleName: isTrivial", "DEL MethodDeclaration", "DEL TagElement", "DEL Modifier: static", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL BooleanLiteral: false", "DEL SimpleName: createProject", "DEL TagElement", "DEL MethodInvocation", "DEL TextElement: for ", "DEL ExpressionStatement", "DEL SimpleName: child", "DEL SimpleName: strip", "DEL SingleVariableDeclaration", "DEL SimpleName: parent", "DEL VariableDeclarationStatement", "DEL Modifier: public", "DEL SimpleName: getRowType", "DEL SimpleName: rename", "DEL SimpleName: isTrivial", "DEL SimpleName: List", "DEL Block", "DEL WhileStatement", "DEL SimpleName: posList", "DEL SimpleName: child", "DEL SimpleName: parent", "DEL SimpleType: List", "DEL SimpleName: MutableProject", "DEL SimpleName: get", "DEL SimpleName: child", "DEL QualifiedName: org.apache.calcite.rel.rules.ProjectRemoveRule", "DEL SimpleName: rel", "DEL SimpleName: RelDataType", "DEL SimpleName: AbstractList", "DEL MarkerAnnotation", "DEL Block", "DEL SimpleName: RelDataType", "DEL SimpleName: createProject", "DEL SimpleName: getInputs", "DEL TextElement: Based on", "DEL ExpressionStatement", "DEL SimpleType: MutableRel", "DEL SimpleName: project", "DEL SimpleName: size", "DEL SimpleName: MutableRel", "DEL NullLiteral", "DEL SimpleType: MutableRel", "DEL SimpleName: MutableRel", "DEL SimpleType: MutableRel", "DEL MethodRef", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: query", "DEL BooleanLiteral: true", "DEL SimpleName: node", "DEL MethodInvocation", "DEL Modifier: final", "DEL TagElement: @link", "DEL MethodDeclaration", "DEL Block", "DEL TextElement: s. ", "DEL IfStatement", "DEL SimpleName: node", "DEL TagElement: @link", "DEL SimpleName: MutableProject", "DEL SimpleName: list", "DEL VariableDeclarationStatement", "DEL SimpleName: Mappings", "DEL VariableDeclarationFragment", "DEL SimpleName: child", "DEL SimpleName: MutableRel", "DEL SingleVariableDeclaration", "DEL SimpleName: getRowType", "DEL SimpleName: MutableRels", "DEL Modifier: private", "DEL MethodInvocation", "DEL ReturnStatement", "DEL MethodInvocation", "DEL ReturnStatement", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleType: MutableRel", "DEL SimpleName: node", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL QualifiedName: rel.cluster", "DEL ReturnStatement", "DEL SimpleName: createCastRel", "DEL Block", "DEL SimpleName: ancestor", "DEL SimpleName: contains", "DEL VariableDeclarationStatement", "DEL SimpleName: visit", "DEL SimpleName: rowType", "DEL SimpleName: List", "DEL MethodInvocation", "DEL SimpleName: go", "DEL ExpressionStatement", "DEL SimpleName: RexUtil", "DEL CatchClause", "DEL Modifier: public", "DEL MethodRef", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: RelDataType", "DEL InfixExpression: >", "DEL SimpleType: RelDataType", "DEL NumberLiteral: 1", "DEL PrimitiveType: boolean", "DEL ParameterizedType: List<String>", "DEL IfStatement", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL Javadoc", "DEL TextElement: for ", "DEL Block", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL SimpleName: rowType", "DEL SimpleName: of", "DEL SimpleName: getFieldCount", "DEL SimpleName: input", "DEL SingleVariableDeclaration", "DEL SimpleName: getInputs", "DEL TagElement", "DEL SimpleName: posList", "DEL MethodInvocation", "DEL SimpleName: rel", "DEL MethodInvocation", "DEL SimpleName: castExps", "DEL ClassInstanceCreation", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL SimpleName: child", "DEL SimpleName: project", "DEL ExpressionStatement", "DEL SimpleName: MutableRel", "DEL TextElement: Equivalence to ", "DEL MethodInvocation", "DEL SimpleType: RexNode", "DEL SimpleName: rel", "DEL SimpleName: MutableRelVisitor", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleType: ArrayList", "DEL SimpleName: equals", "DEL SimpleType: RelDataType", "DEL ClassInstanceCreation", "DEL SimpleName: descendantsRecurse", "DEL Block", "DEL SimpleType: java.util.List", "DEL ReturnStatement", "DEL SimpleName: generateCastExpressions", "DEL SimpleName: castRowType", "DEL SimpleType: MutableRel", "DEL Assignment: =", "DEL SimpleName: node", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: RelOptUtil", "DEL SingleVariableDeclaration", "DEL SimpleName: ancestor", "DEL MethodRefParameter", "DEL SimpleType: org.apache.calcite.rel.core.Project", "DEL SimpleName: size", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL SimpleName: ordinal", "DEL SimpleName: rename", "DEL Modifier: public", "DEL SimpleType: MutableRel", "DEL SimpleName: MutableRel", "DEL Javadoc", "DEL VariableDeclarationFragment", "DEL MethodRefParameter", "DEL TextElement: Utilities for dealing with ", "DEL SimpleName: node", "DEL Modifier: final", "DEL SimpleName: getTypeFactory", "DEL SimpleName: MutableRel", "DEL SimpleName: RelOptUtil", "DEL SimpleName: getInput", "DEL SingleVariableDeclaration", "DEL TryStatement"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: apply", "DEL SimpleName: node", "DEL ExpressionStatement", "DEL TagElement", "DEL SingleVariableDeclaration", "DEL SimpleType: MutableRel", "DEL Block", "DEL InfixExpression: *", "DEL StringLiteral: \"null\"", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: StringBuilder", "DEL TextElement: s. ", "DEL PrimitiveType: int", "DEL PrimitiveType: void", "DEL SimpleName: String", "DEL SimpleName: go", "DEL SimpleType: MutableRel", "DEL SimpleName: buf", "DEL ReturnStatement", "DEL SimpleName: Spaces", "DEL ExpressionStatement", "DEL SimpleName: node", "DEL MethodDeclaration", "DEL SimpleName: level", "DEL ExpressionStatement", "DEL Modifier: public", "DEL SimpleName: StringBuilder", "DEL Block", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL Modifier: final", "DEL MethodInvocation", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL SimpleName: Override", "DEL InfixExpression: ==", "DEL NullLiteral", "DEL ExpressionStatement", "DEL SimpleName: buf", "DEL SimpleName: MutableRelVisitor", "DEL VariableDeclarationFragment", "DEL SimpleName: level", "DEL SimpleName: MutableRel", "DEL SimpleName: level", "DEL MethodInvocation", "DEL Block", "DEL IfStatement", "DEL PrefixExpression: --", "DEL SingleVariableDeclaration", "DEL SimpleName: append", "DEL SimpleName: buf", "DEL Javadoc", "DEL MethodInvocation", "DEL SimpleType: StringBuilder", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: buf", "DEL SimpleName: rel", "DEL FieldDeclaration", "DEL SimpleName: MutableRel", "DEL ExpressionStatement", "DEL NumberLiteral: 2", "DEL SuperMethodInvocation", "DEL Modifier: static", "DEL SimpleName: toString", "DEL Modifier: private", "DEL SimpleName: MutableRel", "DEL SimpleName: level", "DEL PrefixExpression: ++", "DEL SimpleName: buf", "DEL SimpleType: MutableRelVisitor", "DEL SimpleName: append", "DEL SimpleName: StringBuilder", "DEL Modifier: public", "DEL SimpleName: visit", "DEL SimpleName: visit", "DEL SimpleName: MutableRelDumper", "DEL TagElement: @link", "DEL FieldDeclaration", "DEL SimpleName: digest", "DEL TextElement: Visitor that prints an indented tree of ", "DEL SimpleName: buf", "DEL MethodInvocation", "DEL StringLiteral: \"\\n\"", "DEL SimpleName: append", "DEL SimpleName: node", "DEL MarkerAnnotation", "DEL MethodDeclaration", "DEL Modifier: private", "DEL TypeDeclaration: class", "DEL Modifier: protected", "DEL SimpleName: node", "DEL SimpleName: rel"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getRowType", "DEL SimpleName: rel", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getRowType", "DEL MethodInvocation", "DEL SimpleName: rel0"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: rel", "DEL MethodInvocation", "DEL SimpleName: getRowType"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getCondition"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getCondition", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: rel0", "DEL SimpleName: getRowType"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: rel1", "DEL SimpleName: getRowType", "DEL MethodInvocation"]}]}}, {"SubstitutionVisitor_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(5834) at 9", "Move ImportDeclaration(13) into CompilationUnit(5834) at 9", "Move ImportDeclaration(37) into CompilationUnit(5834) at 7", "Move ImportDeclaration(41) into CompilationUnit(5834) at 8", "Update QualifiedName: org.apache.calcite.rel.RelCollation(8) to org.apache.calcite.rel.mutable.Holder", "Update QualifiedName: org.apache.calcite.rel.SingleRel(12) to org.apache.calcite.rel.mutable.MutableAggregate", "Update QualifiedName: org.apache.calcite.rel.core.Filter(20) to org.apache.calcite.rel.mutable.MutableFilter", "Update QualifiedName: org.apache.calcite.rel.core.Project(26) to org.apache.calcite.rel.mutable.MutableProject", "Update QualifiedName: org.apache.calcite.rel.core.Sort(28) to org.apache.calcite.rel.mutable.MutableRel", "Update QualifiedName: org.apache.calcite.rel.core.TableScan(30) to org.apache.calcite.rel.mutable.MutableRelVisitor", "Update QualifiedName: org.apache.calcite.rel.core.Values(32) to org.apache.calcite.rel.mutable.MutableRels", "Update QualifiedName: org.apache.calcite.rel.logical.LogicalJoin(38) to org.apache.calcite.rel.mutable.MutableScan", "Move MethodDeclaration(8495) into TypeDeclaration: class(5833) at 29", "Move MethodDeclaration(8566) into TypeDeclaration: class(5833) at 30", "Move MethodDeclaration(8440) into TypeDeclaration: class(5833) at 79", "Insert QualifiedName: target.projects(4743) into EnhancedForStatement(4755) at 1", "Move SimpleType: RexImplicationChecker(9056) into VariableDeclarationStatement(4966) at 0", "Insert SimpleName: MutableRels(971) into MethodInvocation(974) at 0", "Move CatchClause(4092) into TryStatement(3095) at 1", "Move SimpleType: MutableProject(2381) into VariableDeclarationStatement(3107) at 1", "Insert QualifiedName: query.groupSet(4274) into MethodInvocation(4277) at 0", "Insert QualifiedName: target.groupSet(4276) into MethodInvocation(4277) at 2", "Insert QualifiedName: query.rowType(4486) into MethodInvocation(4488) at 3", "Insert FieldAccess(4975) into MethodInvocation(4983) at 2", "Insert FieldAccess(4982) into MethodInvocation(4983) at 3", "Insert QualifiedName: rel0.rowType(5017) into MethodInvocation(5021) at 3", "Insert QualifiedName: rel1.rowType(5019) into MethodInvocation(5021) at 5", "Insert SimpleName: MutableRels(423) into MethodInvocation(426) at 0", "Insert SimpleName: MutableRels(890) into MethodInvocation(893) at 0", "Insert SimpleName: MutableRels(1035) into MethodInvocation(1040) at 0", "Insert MethodInvocation(1039) into MethodInvocation(1040) at 2", "Insert QualifiedName: model.rowType(3646) into MethodInvocation(3648) at 0", "Insert QualifiedName: project.projects(3670) into MethodInvocation(3671) at 2", "Insert MethodInvocation(3928) into InstanceofExpression(3931) at 0", "Insert QualifiedName: aggregate.groupSet(4136) into MethodInvocation(4137) at 3", "Insert QualifiedName: aggregate.groupSets(4149) into MethodInvocation(4150) at 3", "Insert QualifiedName: aggregate.aggCalls(4161) into MethodInvocation(4162) at 2", "Insert QualifiedName: query.aggCalls(4319) into EnhancedForStatement(4343) at 1", "Insert QualifiedName: query.groupSet(4377) into EnhancedForStatement(4399) at 1", "Insert QualifiedName: query.aggCalls(4416) into EnhancedForStatement(4467) at 1", "Insert QualifiedName: rel.rowType(4889) into MethodInvocation(4892) at 0", "Insert QualifiedName: rel0.rowType(4891) into MethodInvocation(4892) at 2", "Move SimpleType: RexImplicationChecker(9053) into ClassInstanceCreation(4964) at 0", "Insert QualifiedName: rel.rowType(4963) into ClassInstanceCreation(4964) at 3", "Move ParenthesizedExpression(9073) into FieldAccess(4975) at 0", "Insert SimpleName: condition(4974) into FieldAccess(4975) at 1", "Move ParenthesizedExpression(9080) into FieldAccess(4982) at 0", "Insert SimpleName: condition(4981) into FieldAccess(4982) at 1", "Insert SimpleName: MutableRels(413) into MethodInvocation(416) at 0", "Insert SimpleName: MutableRels(1006) into MethodInvocation(1009) at 0", "Insert SimpleName: query(1037) into MethodInvocation(1039) at 0", "Insert SimpleName: getInput(1038) into MethodInvocation(1039) at 1", "Insert QualifiedName: query.rowType(3102) into MethodInvocation(3105) at 2", "Insert QualifiedName: query.rowType(3242) into MethodInvocation(3245) at 2", "Move CatchClause(3804) into TryStatement(3375) at 1", "Insert QualifiedName: project.projects(3609) into MethodInvocation(3611) at 0", "Insert QualifiedName: model.rowType(3612) into MethodInvocation(3614) at 0", "Insert QualifiedName: query.condition(3840) into MethodInvocation(3842) at 2", "Insert QualifiedName: target.condition(3841) into MethodInvocation(3842) at 3", "Insert QualifiedName: call.query(3926) into MethodInvocation(3928) at 0", "Insert SimpleName: getParent(3927) into MethodInvocation(3928) at 1", "Insert QualifiedName: target.groupSet(4080) into MethodInvocation(4083) at 0", "Insert QualifiedName: query.groupSet(4082) into MethodInvocation(4083) at 2", "Insert SimpleName: MutableRels(1798) into MethodInvocation(1803) at 0", "Insert MethodInvocation(1802) into MethodInvocation(1803) at 2", "Insert MethodInvocation(3389) into InstanceofExpression(3392) at 0", "Move SimpleType: MutableProject(3808) into InstanceofExpression(3392) at 1", "Insert QualifiedName: query.groupSet(4293) into MethodInvocation(4295) at 0", "Insert QualifiedName: target.groupSet(4369) into MethodInvocation(4371) at 0", "Insert SimpleName: query(1800) into MethodInvocation(1802) at 0", "Insert SimpleName: getInput(1801) into MethodInvocation(1802) at 1", "Insert QualifiedName: query.projects(3222) into MethodInvocation(3223) at 2", "Insert SimpleName: query(3387) into MethodInvocation(3389) at 0", "Insert SimpleName: getParent(3388) into MethodInvocation(3389) at 1", "Insert MethodInvocation(3940) into MethodInvocation(3941) at 2", "Update QualifiedName: call.query.parent(4660) to call.query", "Move QualifiedName: call.query.parent(4660) into MethodInvocation(3940) at 0", "Insert SimpleName: getParent(3939) into MethodInvocation(3940) at 1", "Insert QualifiedName: target.aggCalls(4322) into MethodInvocation(4325) at 0", "Insert QualifiedName: target.aggCalls(4426) into MethodInvocation(4429) at 0", "Move MethodInvocation(8278) into MethodInvocation(472) at 2", "Insert QualifiedName: query.rowType(3080) into MethodInvocation(3081) at 2", "Insert QualifiedName: query.condition(3360) into MethodInvocation(3363) at 0", "Insert MethodInvocation(3416) into MethodInvocation(3417) at 2", "Insert SimpleName: query(3414) into MethodInvocation(3416) at 0", "Insert SimpleName: getParent(3415) into MethodInvocation(3416) at 1", "Insert MethodInvocation(3402) into CastExpression(3403) at 1", "Insert SimpleName: query(3400) into MethodInvocation(3402) at 0", "Insert SimpleName: getParent(3401) into MethodInvocation(3402) at 1", "Insert MethodInvocation(1401) into MethodInvocation(1406) at 1", "Insert SimpleName: query(1399) into MethodInvocation(1401) at 0", "Insert SimpleName: getInput(1400) into MethodInvocation(1401) at 1", "Insert SimpleName: clone(1404) into MethodInvocation(1405) at 1", "Delete QualifiedName: org.apache.calcite.avatica.util.Spaces(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: org.apache.calcite.rel.core.CorrelationId(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.calcite.rel.core.Join(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.calcite.rel.core.JoinRelType(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: org.apache.calcite.rel.logical.LogicalAggregate(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.calcite.rel.logical.LogicalSort(42)", "Delete ImportDeclaration(43)", "Delete QualifiedName: org.apache.calcite.rel.logical.LogicalUnion(44)", "Delete ImportDeclaration(45)", "Delete QualifiedName: org.apache.calcite.sql.validate.SqlValidatorUtil(72)", "Delete ImportDeclaration(73)", "Delete QualifiedName: com.google.common.base.Equivalence(94)", "Delete ImportDeclaration(95)", "Delete QualifiedName: com.google.common.collect.ImmutableSet(104)", "Delete ImportDeclaration(105)", "Delete QualifiedName: java.util.AbstractList(118)", "Delete ImportDeclaration(119)", "Delete QualifiedName: java.util.Collections(124)", "Delete ImportDeclaration(125)", "Delete QualifiedName: java.util.Objects(132)", "Delete ImportDeclaration(133)", "Delete TextElement: Equivalence that compares objects by their (223)", "Delete SimpleName: Object(224)", "Delete SimpleName: toString(225)", "Delete MethodRef(226)", "Delete TagElement: @link(227)", "Delete TextElement: method. (228)", "Delete TagElement(229)", "Delete Javadoc(230)", "Delete Modifier: private(231)", "Delete Modifier: static(232)", "Delete Modifier: final(233)", "Delete SimpleName: Equivalence(234)", "Delete SimpleType: Equivalence(235)", "Delete SimpleName: Object(236)", "Delete SimpleType: Object(237)", "Delete ParameterizedType: Equivalence<Object>(238)", "Delete SimpleName: STRING_EQUIVALENCE(239)", "Delete SimpleName: Equivalence(240)", "Delete SimpleType: Equivalence(241)", "Delete SimpleName: Object(242)", "Delete SimpleType: Object(243)", "Delete ParameterizedType: Equivalence<Object>(244)", "Delete SimpleName: Override(245)", "Delete MarkerAnnotation(246)", "Delete Modifier: protected(247)", "Delete PrimitiveType: boolean(248)", "Delete SimpleName: doEquivalent(249)", "Delete SimpleName: Object(250)", "Delete SimpleType: Object(251)", "Delete SimpleName: o(252)", "Delete SingleVariableDeclaration(253)", "Delete SimpleName: Object(254)", "Delete SimpleType: Object(255)", "Delete SimpleName: o2(256)", "Delete SingleVariableDeclaration(257)", "Delete SimpleName: o(258)", "Delete SimpleName: toString(259)", "Delete MethodInvocation(260)", "Delete SimpleName: equals(261)", "Delete SimpleName: o2(262)", "Delete SimpleName: toString(263)", "Delete MethodInvocation(264)", "Delete MethodInvocation(265)", "Delete ReturnStatement(266)", "Delete Block(267)", "Delete MethodDeclaration(268)", "Delete SimpleName: Override(269)", "Delete MarkerAnnotation(270)", "Delete Modifier: protected(271)", "Delete PrimitiveType: int(272)", "Delete SimpleName: doHash(273)", "Delete SimpleName: Object(274)", "Delete SimpleType: Object(275)", "Delete SimpleName: o(276)", "Delete SingleVariableDeclaration(277)", "Delete SimpleName: o(278)", "Delete SimpleName: toString(279)", "Delete MethodInvocation(280)", "Delete SimpleName: hashCode(281)", "Delete MethodInvocation(282)", "Delete ReturnStatement(283)", "Delete Block(284)", "Delete MethodDeclaration(285)", "Delete AnonymousClassDeclaration(286)", "Delete ClassInstanceCreation(287)", "Delete VariableDeclarationFragment(288)", "Delete FieldDeclaration(289)", "Delete TextElement: Equivalence that compares (290)", "Delete SimpleName: Lists(291)", "Delete TagElement: @link(292)", "Delete TextElement: s by the(293)", "Delete SimpleName: Object(294)", "Delete SimpleName: toString(295)", "Delete MethodRef(296)", "Delete TagElement: @link(297)", "Delete TextElement:  of their elements. (298)", "Delete TagElement(299)", "Delete Javadoc(300)", "Delete SimpleName: SuppressWarnings(301)", "Delete StringLiteral: \"unchecked\"(302)", "Delete SingleMemberAnnotation(303)", "Delete Modifier: private(304)", "Delete Modifier: static(305)", "Delete Modifier: final(306)", "Delete SimpleName: Equivalence(307)", "Delete SimpleType: Equivalence(308)", "Delete SimpleName: List(309)", "Delete SimpleType: List(310)", "Delete WildcardType: ?(311)", "Delete ParameterizedType: List<?>(312)", "Delete ParameterizedType: Equivalence<List<?>>(313)", "Delete SimpleName: PAIRWISE_STRING_EQUIVALENCE(314)", "Delete SimpleName: Equivalence(315)", "Delete SimpleType: Equivalence(316)", "Delete SimpleName: STRING_EQUIVALENCE(317)", "Delete SimpleName: pairwise(318)", "Delete MethodInvocation(319)", "Delete CastExpression(320)", "Delete VariableDeclarationFragment(321)", "Delete FieldDeclaration(322)", "Delete QualifiedName: node.parent(593)", "Delete Modifier: private(655)", "Delete Modifier: static(656)", "Delete SimpleName: MutableRel(657)", "Delete SimpleType: MutableRel(658)", "Delete SimpleName: toMutable(659)", "Delete SimpleName: RelNode(660)", "Delete SimpleType: RelNode(661)", "Delete SimpleName: rel(662)", "Delete SingleVariableDeclaration(663)", "Delete SimpleName: rel(664)", "Delete SimpleName: TableScan(665)", "Delete SimpleType: TableScan(666)", "Delete InstanceofExpression(667)", "Delete SimpleName: MutableScan(668)", "Delete SimpleName: of(669)", "Delete SimpleName: TableScan(670)", "Delete SimpleType: TableScan(671)", "Delete SimpleName: rel(672)", "Delete CastExpression(673)", "Delete MethodInvocation(674)", "Delete ReturnStatement(675)", "Delete Block(676)", "Delete IfStatement(677)", "Delete SimpleName: rel(678)", "Delete SimpleName: Values(679)", "Delete SimpleType: Values(680)", "Delete InstanceofExpression(681)", "Delete SimpleName: MutableValues(682)", "Delete SimpleName: of(683)", "Delete SimpleName: Values(684)", "Delete SimpleType: Values(685)", "Delete SimpleName: rel(686)", "Delete CastExpression(687)", "Delete MethodInvocation(688)", "Delete ReturnStatement(689)", "Delete Block(690)", "Delete IfStatement(691)", "Delete SimpleName: rel(692)", "Delete SimpleName: Project(693)", "Delete SimpleType: Project(694)", "Delete InstanceofExpression(695)", "Delete Modifier: final(696)", "Delete SimpleName: Project(697)", "Delete SimpleType: Project(698)", "Delete SimpleName: project(699)", "Delete SimpleName: Project(700)", "Delete SimpleType: Project(701)", "Delete SimpleName: rel(702)", "Delete CastExpression(703)", "Delete VariableDeclarationFragment(704)", "Delete VariableDeclarationStatement(705)", "Delete Modifier: final(706)", "Delete SimpleName: MutableRel(707)", "Delete SimpleType: MutableRel(708)", "Delete SimpleName: input(709)", "Delete SimpleName: toMutable(710)", "Delete SimpleName: project(711)", "Delete SimpleName: getInput(712)", "Delete MethodInvocation(713)", "Delete MethodInvocation(714)", "Delete VariableDeclarationFragment(715)", "Delete VariableDeclarationStatement(716)", "Delete SimpleName: MutableProject(717)", "Delete SimpleName: of(718)", "Delete SimpleName: input(719)", "Delete SimpleName: project(720)", "Delete SimpleName: getProjects(721)", "Delete MethodInvocation(722)", "Delete SimpleName: project(723)", "Delete SimpleName: getRowType(724)", "Delete MethodInvocation(725)", "Delete SimpleName: getFieldNames(726)", "Delete MethodInvocation(727)", "Delete MethodInvocation(728)", "Delete ReturnStatement(729)", "Delete Block(730)", "Delete IfStatement(731)", "Delete SimpleName: rel(732)", "Delete SimpleName: Filter(733)", "Delete SimpleType: Filter(734)", "Delete InstanceofExpression(735)", "Delete Modifier: final(736)", "Delete SimpleName: Filter(737)", "Delete SimpleType: Filter(738)", "Delete SimpleName: filter(739)", "Delete SimpleName: Filter(740)", "Delete SimpleType: Filter(741)", "Delete SimpleName: rel(742)", "Delete CastExpression(743)", "Delete VariableDeclarationFragment(744)", "Delete VariableDeclarationStatement(745)", "Delete Modifier: final(746)", "Delete SimpleName: MutableRel(747)", "Delete SimpleType: MutableRel(748)", "Delete SimpleName: input(749)", "Delete SimpleName: toMutable(750)", "Delete SimpleName: filter(751)", "Delete SimpleName: getInput(752)", "Delete MethodInvocation(753)", "Delete MethodInvocation(754)", "Delete VariableDeclarationFragment(755)", "Delete VariableDeclarationStatement(756)", "Delete SimpleName: MutableFilter(757)", "Delete SimpleName: of(758)", "Delete SimpleName: input(759)", "Delete SimpleName: filter(760)", "Delete SimpleName: getCondition(761)", "Delete MethodInvocation(762)", "Delete MethodInvocation(763)", "Delete ReturnStatement(764)", "Delete Block(765)", "Delete IfStatement(766)", "Delete SimpleName: rel(767)", "Delete SimpleName: Aggregate(768)", "Delete SimpleType: Aggregate(769)", "Delete InstanceofExpression(770)", "Delete Modifier: final(771)", "Delete SimpleName: Aggregate(772)", "Delete SimpleType: Aggregate(773)", "Delete SimpleName: aggregate(774)", "Delete SimpleName: Aggregate(775)", "Delete SimpleType: Aggregate(776)", "Delete SimpleName: rel(777)", "Delete CastExpression(778)", "Delete VariableDeclarationFragment(779)", "Delete VariableDeclarationStatement(780)", "Delete Modifier: final(781)", "Delete SimpleName: MutableRel(782)", "Delete SimpleType: MutableRel(783)", "Delete SimpleName: input(784)", "Delete SimpleName: toMutable(785)", "Delete SimpleName: aggregate(786)", "Delete SimpleName: getInput(787)", "Delete MethodInvocation(788)", "Delete MethodInvocation(789)", "Delete VariableDeclarationFragment(790)", "Delete VariableDeclarationStatement(791)", "Delete SimpleName: MutableAggregate(792)", "Delete SimpleName: of(793)", "Delete SimpleName: input(794)", "Delete QualifiedName: aggregate.indicator(795)", "Delete SimpleName: aggregate(796)", "Delete SimpleName: getGroupSet(797)", "Delete MethodInvocation(798)", "Delete SimpleName: aggregate(799)", "Delete SimpleName: getGroupSets(800)", "Delete MethodInvocation(801)", "Delete SimpleName: aggregate(802)", "Delete SimpleName: getAggCallList(803)", "Delete MethodInvocation(804)", "Delete MethodInvocation(805)", "Delete ReturnStatement(806)", "Delete Block(807)", "Delete IfStatement(808)", "Delete SimpleName: rel(809)", "Delete SimpleName: Join(810)", "Delete SimpleType: Join(811)", "Delete InstanceofExpression(812)", "Delete Modifier: final(813)", "Delete SimpleName: Join(814)", "Delete SimpleType: Join(815)", "Delete SimpleName: join(816)", "Delete SimpleName: Join(817)", "Delete SimpleType: Join(818)", "Delete SimpleName: rel(819)", "Delete CastExpression(820)", "Delete VariableDeclarationFragment(821)", "Delete VariableDeclarationStatement(822)", "Delete Modifier: final(823)", "Delete SimpleName: MutableRel(824)", "Delete SimpleType: MutableRel(825)", "Delete SimpleName: left(826)", "Delete SimpleName: toMutable(827)", "Delete SimpleName: join(828)", "Delete SimpleName: getLeft(829)", "Delete MethodInvocation(830)", "Delete MethodInvocation(831)", "Delete VariableDeclarationFragment(832)", "Delete VariableDeclarationStatement(833)", "Delete Modifier: final(834)", "Delete SimpleName: MutableRel(835)", "Delete SimpleType: MutableRel(836)", "Delete SimpleName: right(837)", "Delete SimpleName: toMutable(838)", "Delete SimpleName: join(839)", "Delete SimpleName: getRight(840)", "Delete MethodInvocation(841)", "Delete MethodInvocation(842)", "Delete VariableDeclarationFragment(843)", "Delete VariableDeclarationStatement(844)", "Delete SimpleName: MutableJoin(845)", "Delete SimpleName: of(846)", "Delete SimpleName: join(847)", "Delete SimpleName: getCluster(848)", "Delete MethodInvocation(849)", "Delete SimpleName: left(850)", "Delete SimpleName: right(851)", "Delete SimpleName: join(852)", "Delete SimpleName: getCondition(853)", "Delete MethodInvocation(854)", "Delete SimpleName: join(855)", "Delete SimpleName: getJoinType(856)", "Delete MethodInvocation(857)", "Delete SimpleName: join(858)", "Delete SimpleName: getVariablesSet(859)", "Delete MethodInvocation(860)", "Delete MethodInvocation(861)", "Delete ReturnStatement(862)", "Delete Block(863)", "Delete IfStatement(864)", "Delete SimpleName: rel(865)", "Delete SimpleName: Sort(866)", "Delete SimpleType: Sort(867)", "Delete InstanceofExpression(868)", "Delete Modifier: final(869)", "Delete SimpleName: Sort(870)", "Delete SimpleType: Sort(871)", "Delete SimpleName: sort(872)", "Delete SimpleName: Sort(873)", "Delete SimpleType: Sort(874)", "Delete SimpleName: rel(875)", "Delete CastExpression(876)", "Delete VariableDeclarationFragment(877)", "Delete VariableDeclarationStatement(878)", "Delete Modifier: final(879)", "Delete SimpleName: MutableRel(880)", "Delete SimpleType: MutableRel(881)", "Delete SimpleName: input(882)", "Delete SimpleName: toMutable(883)", "Delete SimpleName: sort(884)", "Delete SimpleName: getInput(885)", "Delete MethodInvocation(886)", "Delete MethodInvocation(887)", "Delete VariableDeclarationFragment(888)", "Delete VariableDeclarationStatement(889)", "Delete SimpleName: MutableSort(890)", "Delete SimpleName: of(891)", "Delete SimpleName: input(892)", "Delete SimpleName: sort(893)", "Delete SimpleName: getCollation(894)", "Delete MethodInvocation(895)", "Delete QualifiedName: sort.offset(896)", "Delete QualifiedName: sort.fetch(897)", "Delete MethodInvocation(898)", "Delete ReturnStatement(899)", "Delete Block(900)", "Delete IfStatement(901)", "Delete SimpleName: RuntimeException(902)", "Delete SimpleType: RuntimeException(903)", "Delete StringLiteral: \"cannot translate \"(904)", "Delete SimpleName: rel(905)", "Delete StringLiteral: \" to MutableRel\"(906)", "Delete InfixExpression: +(907)", "Delete ClassInstanceCreation(908)", "Delete ThrowStatement(909)", "Delete Block(910)", "Delete MethodDeclaration(911)", "Delete SimpleName: MutableRels(1274)", "Delete QualifiedName: query.input(1413)", "Delete SimpleName: MutableRels(1452)", "Delete SimpleName: MutableRels(1773)", "Delete QualifiedName: query.input(1775)", "Delete SimpleName: copyMutable(1777)", "Delete Modifier: private(1863)", "Delete QualifiedName: query.input(2048)", "Delete Modifier: private(2071)", "Delete Modifier: static(2072)", "Delete SimpleName: List(2073)", "Delete SimpleType: List(2074)", "Delete SimpleName: RelNode(2075)", "Delete SimpleType: RelNode(2076)", "Delete ParameterizedType: List<RelNode>(2077)", "Delete SimpleName: fromMutables(2078)", "Delete SimpleName: List(2079)", "Delete SimpleType: List(2080)", "Delete SimpleName: MutableRel(2081)", "Delete SimpleType: MutableRel(2082)", "Delete ParameterizedType: List<MutableRel>(2083)", "Delete SimpleName: nodes(2084)", "Delete SingleVariableDeclaration(2085)", "Delete SimpleName: Lists(2086)", "Delete SimpleName: transform(2087)", "Delete SimpleName: nodes(2088)", "Delete SimpleName: Function(2089)", "Delete SimpleType: Function(2090)", "Delete SimpleName: MutableRel(2091)", "Delete SimpleType: MutableRel(2092)", "Delete SimpleName: RelNode(2093)", "Delete SimpleType: RelNode(2094)", "Delete ParameterizedType: Function<MutableRel,RelNode>(2095)", "Delete Modifier: public(2096)", "Delete SimpleName: RelNode(2097)", "Delete SimpleType: RelNode(2098)", "Delete SimpleName: apply(2099)", "Delete SimpleName: MutableRel(2100)", "Delete SimpleType: MutableRel(2101)", "Delete SimpleName: mutableRel(2102)", "Delete SingleVariableDeclaration(2103)", "Delete SimpleName: fromMutable(2104)", "Delete SimpleName: mutableRel(2105)", "Delete MethodInvocation(2106)", "Delete ReturnStatement(2107)", "Delete Block(2108)", "Delete MethodDeclaration(2109)", "Delete AnonymousClassDeclaration(2110)", "Delete ClassInstanceCreation(2111)", "Delete MethodInvocation(2112)", "Delete ReturnStatement(2113)", "Delete Block(2114)", "Delete MethodDeclaration(2115)", "Delete Modifier: private(2116)", "Delete Modifier: static(2117)", "Delete SimpleName: RelNode(2118)", "Delete SimpleType: RelNode(2119)", "Delete SimpleName: fromMutable(2120)", "Delete SimpleName: MutableRel(2121)", "Delete SimpleType: MutableRel(2122)", "Delete SimpleName: node(2123)", "Delete SingleVariableDeclaration(2124)", "Delete QualifiedName: node.type(2125)", "Delete SimpleName: SCAN(2126)", "Delete SwitchCase(2127)", "Delete SimpleName: VALUES(2128)", "Delete SwitchCase(2129)", "Delete SimpleName: MutableLeafRel(2130)", "Delete SimpleType: MutableLeafRel(2131)", "Delete SimpleName: node(2132)", "Delete CastExpression(2133)", "Delete ParenthesizedExpression(2134)", "Delete SimpleName: rel(2135)", "Delete FieldAccess(2136)", "Delete ReturnStatement(2137)", "Delete SimpleName: PROJECT(2138)", "Delete SwitchCase(2139)", "Delete Modifier: final(2140)", "Delete SimpleName: MutableProject(2141)", "Delete SimpleType: MutableProject(2142)", "Delete SimpleName: project(2143)", "Delete SimpleName: MutableProject(2144)", "Delete SimpleType: MutableProject(2145)", "Delete SimpleName: node(2146)", "Delete CastExpression(2147)", "Delete VariableDeclarationFragment(2148)", "Delete VariableDeclarationStatement(2149)", "Delete SimpleName: LogicalProject(2150)", "Delete SimpleName: create(2151)", "Delete SimpleName: fromMutable(2152)", "Delete QualifiedName: project.input(2153)", "Delete MethodInvocation(2154)", "Delete QualifiedName: project.projects(2155)", "Delete QualifiedName: project.rowType(2156)", "Delete MethodInvocation(2157)", "Delete ReturnStatement(2158)", "Delete SimpleName: FILTER(2159)", "Delete SwitchCase(2160)", "Delete Modifier: final(2161)", "Delete SimpleName: MutableFilter(2162)", "Delete SimpleType: MutableFilter(2163)", "Delete SimpleName: filter(2164)", "Delete SimpleName: MutableFilter(2165)", "Delete SimpleType: MutableFilter(2166)", "Delete SimpleName: node(2167)", "Delete CastExpression(2168)", "Delete VariableDeclarationFragment(2169)", "Delete VariableDeclarationStatement(2170)", "Delete SimpleName: LogicalFilter(2171)", "Delete SimpleName: create(2172)", "Delete SimpleName: fromMutable(2173)", "Delete QualifiedName: filter.input(2174)", "Delete MethodInvocation(2175)", "Delete QualifiedName: filter.condition(2176)", "Delete MethodInvocation(2177)", "Delete ReturnStatement(2178)", "Delete SimpleName: AGGREGATE(2179)", "Delete SwitchCase(2180)", "Delete Modifier: final(2181)", "Delete SimpleName: MutableAggregate(2182)", "Delete SimpleType: MutableAggregate(2183)", "Delete SimpleName: aggregate(2184)", "Delete SimpleName: MutableAggregate(2185)", "Delete SimpleType: MutableAggregate(2186)", "Delete SimpleName: node(2187)", "Delete CastExpression(2188)", "Delete VariableDeclarationFragment(2189)", "Delete VariableDeclarationStatement(2190)", "Delete SimpleName: LogicalAggregate(2191)", "Delete SimpleName: create(2192)", "Delete SimpleName: fromMutable(2193)", "Delete QualifiedName: aggregate.input(2194)", "Delete MethodInvocation(2195)", "Delete QualifiedName: aggregate.indicator(2196)", "Delete QualifiedName: aggregate.groupSet(2197)", "Delete QualifiedName: aggregate.groupSets(2198)", "Delete QualifiedName: aggregate.aggCalls(2199)", "Delete MethodInvocation(2200)", "Delete ReturnStatement(2201)", "Delete SimpleName: SORT(2202)", "Delete SwitchCase(2203)", "Delete Modifier: final(2204)", "Delete SimpleName: MutableSort(2205)", "Delete SimpleType: MutableSort(2206)", "Delete SimpleName: sort(2207)", "Delete SimpleName: MutableSort(2208)", "Delete SimpleType: MutableSort(2209)", "Delete SimpleName: node(2210)", "Delete CastExpression(2211)", "Delete VariableDeclarationFragment(2212)", "Delete VariableDeclarationStatement(2213)", "Delete SimpleName: LogicalSort(2214)", "Delete SimpleName: create(2215)", "Delete SimpleName: fromMutable(2216)", "Delete QualifiedName: sort.input(2217)", "Delete MethodInvocation(2218)", "Delete QualifiedName: sort.collation(2219)", "Delete QualifiedName: sort.offset(2220)", "Delete QualifiedName: sort.fetch(2221)", "Delete MethodInvocation(2222)", "Delete ReturnStatement(2223)", "Delete SimpleName: UNION(2224)", "Delete SwitchCase(2225)", "Delete Modifier: final(2226)", "Delete SimpleName: MutableUnion(2227)", "Delete SimpleType: MutableUnion(2228)", "Delete SimpleName: union(2229)", "Delete SimpleName: MutableUnion(2230)", "Delete SimpleType: MutableUnion(2231)", "Delete SimpleName: node(2232)", "Delete CastExpression(2233)", "Delete VariableDeclarationFragment(2234)", "Delete VariableDeclarationStatement(2235)", "Delete SimpleName: LogicalUnion(2236)", "Delete SimpleName: create(2237)", "Delete SimpleName: fromMutables(2238)", "Delete QualifiedName: union.inputs(2239)", "Delete MethodInvocation(2240)", "Delete QualifiedName: union.all(2241)", "Delete MethodInvocation(2242)", "Delete ReturnStatement(2243)", "Delete SimpleName: JOIN(2244)", "Delete SwitchCase(2245)", "Delete Modifier: final(2246)", "Delete SimpleName: MutableJoin(2247)", "Delete SimpleType: MutableJoin(2248)", "Delete SimpleName: join(2249)", "Delete SimpleName: MutableJoin(2250)", "Delete SimpleType: MutableJoin(2251)", "Delete SimpleName: node(2252)", "Delete CastExpression(2253)", "Delete VariableDeclarationFragment(2254)", "Delete VariableDeclarationStatement(2255)", "Delete SimpleName: LogicalJoin(2256)", "Delete SimpleName: create(2257)", "Delete SimpleName: fromMutable(2258)", "Delete SimpleName: join(2259)", "Delete SimpleName: getLeft(2260)", "Delete MethodInvocation(2261)", "Delete MethodInvocation(2262)", "Delete SimpleName: fromMutable(2263)", "Delete SimpleName: join(2264)", "Delete SimpleName: getRight(2265)", "Delete MethodInvocation(2266)", "Delete MethodInvocation(2267)", "Delete SimpleName: join(2268)", "Delete SimpleName: getCondition(2269)", "Delete MethodInvocation(2270)", "Delete SimpleName: join(2271)", "Delete SimpleName: getVariablesSet(2272)", "Delete MethodInvocation(2273)", "Delete SimpleName: join(2274)", "Delete SimpleName: getJoinType(2275)", "Delete MethodInvocation(2276)", "Delete MethodInvocation(2277)", "Delete ReturnStatement(2278)", "Delete SwitchCase(2279)", "Delete SimpleName: AssertionError(2280)", "Delete SimpleType: AssertionError(2281)", "Delete SimpleName: node(2282)", "Delete SimpleName: deep(2283)", "Delete MethodInvocation(2284)", "Delete ClassInstanceCreation(2285)", "Delete ThrowStatement(2286)", "Delete SwitchStatement(2287)", "Delete Block(2288)", "Delete MethodDeclaration(2289)", "Delete Modifier: private(2290)", "Delete Modifier: static(2291)", "Delete SimpleName: List(2292)", "Delete SimpleType: List(2293)", "Delete SimpleName: MutableRel(2294)", "Delete SimpleType: MutableRel(2295)", "Delete ParameterizedType: List<MutableRel>(2296)", "Delete SimpleName: copyMutables(2297)", "Delete SimpleName: List(2298)", "Delete SimpleType: List(2299)", "Delete SimpleName: MutableRel(2300)", "Delete SimpleType: MutableRel(2301)", "Delete ParameterizedType: List<MutableRel>(2302)", "Delete SimpleName: nodes(2303)", "Delete SingleVariableDeclaration(2304)", "Delete SimpleName: Lists(2305)", "Delete SimpleName: transform(2306)", "Delete SimpleName: nodes(2307)", "Delete SimpleName: Function(2308)", "Delete SimpleType: Function(2309)", "Delete SimpleName: MutableRel(2310)", "Delete SimpleType: MutableRel(2311)", "Delete SimpleName: MutableRel(2312)", "Delete SimpleType: MutableRel(2313)", "Delete ParameterizedType: Function<MutableRel,MutableRel>(2314)", "Delete Modifier: public(2315)", "Delete SimpleName: MutableRel(2316)", "Delete SimpleType: MutableRel(2317)", "Delete SimpleName: apply(2318)", "Delete SimpleName: MutableRel(2319)", "Delete SimpleType: MutableRel(2320)", "Delete SimpleName: mutableRel(2321)", "Delete SingleVariableDeclaration(2322)", "Delete SimpleName: copyMutable(2323)", "Delete SimpleName: mutableRel(2324)", "Delete MethodInvocation(2325)", "Delete ReturnStatement(2326)", "Delete Block(2327)", "Delete MethodDeclaration(2328)", "Delete AnonymousClassDeclaration(2329)", "Delete ClassInstanceCreation(2330)", "Delete MethodInvocation(2331)", "Delete ReturnStatement(2332)", "Delete Block(2333)", "Delete MethodDeclaration(2334)", "Delete Modifier: private(2335)", "Delete Modifier: static(2336)", "Delete SimpleName: MutableRel(2337)", "Delete SimpleType: MutableRel(2338)", "Delete SimpleName: copyMutable(2339)", "Delete SimpleName: MutableRel(2340)", "Delete SimpleType: MutableRel(2341)", "Delete SimpleName: node(2342)", "Delete SingleVariableDeclaration(2343)", "Delete QualifiedName: node.type(2344)", "Delete SimpleName: SCAN(2345)", "Delete SwitchCase(2346)", "Delete SimpleName: MutableScan(2347)", "Delete SimpleName: of(2348)", "Delete SimpleName: TableScan(2349)", "Delete SimpleType: TableScan(2350)", "Delete SimpleName: MutableScan(2351)", "Delete SimpleType: MutableScan(2352)", "Delete SimpleName: node(2353)", "Delete CastExpression(2354)", "Delete ParenthesizedExpression(2355)", "Delete SimpleName: rel(2356)", "Delete FieldAccess(2357)", "Delete CastExpression(2358)", "Delete MethodInvocation(2359)", "Delete ReturnStatement(2360)", "Delete SimpleName: VALUES(2361)", "Delete SwitchCase(2362)", "Delete SimpleName: MutableValues(2363)", "Delete SimpleName: of(2364)", "Delete SimpleName: Values(2365)", "Delete SimpleType: Values(2366)", "Delete SimpleName: MutableValues(2367)", "Delete SimpleType: MutableValues(2368)", "Delete SimpleName: node(2369)", "Delete CastExpression(2370)", "Delete ParenthesizedExpression(2371)", "Delete SimpleName: rel(2372)", "Delete FieldAccess(2373)", "Delete CastExpression(2374)", "Delete MethodInvocation(2375)", "Delete ReturnStatement(2376)", "Delete SimpleName: PROJECT(2377)", "Delete SwitchCase(2378)", "Delete Modifier: final(2379)", "Delete SimpleName: project(2382)", "Delete SimpleName: MutableProject(2383)", "Delete SimpleType: MutableProject(2384)", "Delete SimpleName: node(2385)", "Delete CastExpression(2386)", "Delete VariableDeclarationFragment(2387)", "Delete VariableDeclarationStatement(2388)", "Delete SimpleName: MutableProject(2389)", "Delete SimpleName: of(2390)", "Delete QualifiedName: project.rowType(2391)", "Delete SimpleName: copyMutable(2392)", "Delete QualifiedName: project.input(2393)", "Delete MethodInvocation(2394)", "Delete QualifiedName: project.projects(2395)", "Delete MethodInvocation(2396)", "Delete ReturnStatement(2397)", "Delete SimpleName: FILTER(2398)", "Delete SwitchCase(2399)", "Delete Modifier: final(2400)", "Delete SimpleName: MutableFilter(2401)", "Delete SimpleType: MutableFilter(2402)", "Delete SimpleName: filter(2403)", "Delete SimpleName: MutableFilter(2404)", "Delete SimpleType: MutableFilter(2405)", "Delete SimpleName: node(2406)", "Delete CastExpression(2407)", "Delete VariableDeclarationFragment(2408)", "Delete VariableDeclarationStatement(2409)", "Delete SimpleName: MutableFilter(2410)", "Delete SimpleName: of(2411)", "Delete SimpleName: copyMutable(2412)", "Delete QualifiedName: filter.input(2413)", "Delete MethodInvocation(2414)", "Delete QualifiedName: filter.condition(2415)", "Delete MethodInvocation(2416)", "Delete ReturnStatement(2417)", "Delete SimpleName: AGGREGATE(2418)", "Delete SwitchCase(2419)", "Delete Modifier: final(2420)", "Delete SimpleName: MutableAggregate(2421)", "Delete SimpleType: MutableAggregate(2422)", "Delete SimpleName: aggregate(2423)", "Delete SimpleName: MutableAggregate(2424)", "Delete SimpleType: MutableAggregate(2425)", "Delete SimpleName: node(2426)", "Delete CastExpression(2427)", "Delete VariableDeclarationFragment(2428)", "Delete VariableDeclarationStatement(2429)", "Delete SimpleName: MutableAggregate(2430)", "Delete SimpleName: of(2431)", "Delete SimpleName: copyMutable(2432)", "Delete QualifiedName: aggregate.input(2433)", "Delete MethodInvocation(2434)", "Delete QualifiedName: aggregate.indicator(2435)", "Delete QualifiedName: aggregate.groupSet(2436)", "Delete QualifiedName: aggregate.groupSets(2437)", "Delete QualifiedName: aggregate.aggCalls(2438)", "Delete MethodInvocation(2439)", "Delete ReturnStatement(2440)", "Delete SimpleName: SORT(2441)", "Delete SwitchCase(2442)", "Delete Modifier: final(2443)", "Delete SimpleName: MutableSort(2444)", "Delete SimpleType: MutableSort(2445)", "Delete SimpleName: sort(2446)", "Delete SimpleName: MutableSort(2447)", "Delete SimpleType: MutableSort(2448)", "Delete SimpleName: node(2449)", "Delete CastExpression(2450)", "Delete VariableDeclarationFragment(2451)", "Delete VariableDeclarationStatement(2452)", "Delete SimpleName: MutableSort(2453)", "Delete SimpleName: of(2454)", "Delete SimpleName: copyMutable(2455)", "Delete QualifiedName: sort.input(2456)", "Delete MethodInvocation(2457)", "Delete QualifiedName: sort.collation(2458)", "Delete QualifiedName: sort.offset(2459)", "Delete QualifiedName: sort.fetch(2460)", "Delete MethodInvocation(2461)", "Delete ReturnStatement(2462)", "Delete SimpleName: UNION(2463)", "Delete SwitchCase(2464)", "Delete Modifier: final(2465)", "Delete SimpleName: MutableUnion(2466)", "Delete SimpleType: MutableUnion(2467)", "Delete SimpleName: union(2468)", "Delete SimpleName: MutableUnion(2469)", "Delete SimpleType: MutableUnion(2470)", "Delete SimpleName: node(2471)", "Delete CastExpression(2472)", "Delete VariableDeclarationFragment(2473)", "Delete VariableDeclarationStatement(2474)", "Delete SimpleName: MutableUnion(2475)", "Delete SimpleName: of(2476)", "Delete SimpleName: copyMutables(2477)", "Delete QualifiedName: union.inputs(2478)", "Delete MethodInvocation(2479)", "Delete QualifiedName: union.all(2480)", "Delete MethodInvocation(2481)", "Delete ReturnStatement(2482)", "Delete SimpleName: JOIN(2483)", "Delete SwitchCase(2484)", "Delete Modifier: final(2485)", "Delete SimpleName: MutableJoin(2486)", "Delete SimpleType: MutableJoin(2487)", "Delete SimpleName: join(2488)", "Delete SimpleName: MutableJoin(2489)", "Delete SimpleType: MutableJoin(2490)", "Delete SimpleName: node(2491)", "Delete CastExpression(2492)", "Delete VariableDeclarationFragment(2493)", "Delete VariableDeclarationStatement(2494)", "Delete SimpleName: MutableJoin(2495)", "Delete SimpleName: of(2496)", "Delete QualifiedName: join.cluster(2497)", "Delete SimpleName: copyMutable(2498)", "Delete SimpleName: join(2499)", "Delete SimpleName: getLeft(2500)", "Delete MethodInvocation(2501)", "Delete MethodInvocation(2502)", "Delete SimpleName: copyMutable(2503)", "Delete SimpleName: join(2504)", "Delete SimpleName: getRight(2505)", "Delete MethodInvocation(2506)", "Delete MethodInvocation(2507)", "Delete SimpleName: join(2508)", "Delete SimpleName: getCondition(2509)", "Delete MethodInvocation(2510)", "Delete SimpleName: join(2511)", "Delete SimpleName: getJoinType(2512)", "Delete MethodInvocation(2513)", "Delete SimpleName: join(2514)", "Delete SimpleName: getVariablesSet(2515)", "Delete MethodInvocation(2516)", "Delete MethodInvocation(2517)", "Delete ReturnStatement(2518)", "Delete SwitchCase(2519)", "Delete SimpleName: AssertionError(2520)", "Delete SimpleType: AssertionError(2521)", "Delete SimpleName: node(2522)", "Delete SimpleName: deep(2523)", "Delete MethodInvocation(2524)", "Delete ClassInstanceCreation(2525)", "Delete ThrowStatement(2526)", "Delete SwitchStatement(2527)", "Delete Block(2528)", "Delete MethodDeclaration(2529)", "Delete SimpleName: MutableRels(3274)", "Delete SimpleName: MutableRels(3297)", "Delete SimpleName: MutableRels(3411)", "Delete SimpleName: query(3788)", "Delete SimpleName: getRowType(3789)", "Delete MethodInvocation(3790)", "Delete SimpleName: query(3812)", "Delete SimpleName: getRowType(3813)", "Delete MethodInvocation(3814)", "Delete SimpleName: query(3934)", "Delete SimpleName: getProjects(3935)", "Delete MethodInvocation(3936)", "Delete SimpleName: query(3956)", "Delete SimpleName: getRowType(3957)", "Delete MethodInvocation(3958)", "Delete SimpleName: query(4076)", "Delete SimpleName: getCondition(4077)", "Delete MethodInvocation(4078)", "Delete QualifiedName: query.parent(4105)", "Delete SimpleName: MutableProject(4106)", "Delete SimpleType: MutableProject(4107)", "Delete QualifiedName: query.parent(4116)", "Delete QualifiedName: query.parent(4128)", "Delete SimpleName: project(4321)", "Delete SimpleName: getProjects(4322)", "Delete MethodInvocation(4323)", "Delete SimpleName: model(4326)", "Delete SimpleName: getRowType(4327)", "Delete MethodInvocation(4328)", "Delete SimpleName: model(4362)", "Delete SimpleName: getRowType(4363)", "Delete MethodInvocation(4364)", "Delete SimpleName: project(4388)", "Delete SimpleName: getProjects(4389)", "Delete MethodInvocation(4390)", "Delete SimpleName: query(4560)", "Delete SimpleName: getCondition(4561)", "Delete MethodInvocation(4562)", "Delete SimpleName: target(4563)", "Delete SimpleName: getCondition(4564)", "Delete MethodInvocation(4565)", "Delete QualifiedName: call.query.parent(4650)", "Delete SimpleName: target(4800)", "Delete SimpleName: getGroupSet(4801)", "Delete MethodInvocation(4802)", "Delete SimpleName: query(4804)", "Delete SimpleName: getGroupSet(4805)", "Delete MethodInvocation(4806)", "Delete SimpleName: aggregate(4860)", "Delete SimpleName: getGroupSet(4861)", "Delete MethodInvocation(4862)", "Delete SimpleName: aggregate(4875)", "Delete SimpleName: getGroupSets(4876)", "Delete MethodInvocation(4877)", "Delete SimpleName: aggregate(4889)", "Delete SimpleName: getAggCallList(4890)", "Delete MethodInvocation(4891)", "Delete SimpleName: query(5004)", "Delete SimpleName: getGroupSet(5005)", "Delete MethodInvocation(5006)", "Delete SimpleName: target(5008)", "Delete SimpleName: getGroupSet(5009)", "Delete MethodInvocation(5010)", "Delete SimpleName: query(5027)", "Delete SimpleName: getGroupSet(5028)", "Delete MethodInvocation(5029)", "Delete SimpleName: query(5055)", "Delete SimpleName: getAggCallList(5056)", "Delete MethodInvocation(5057)", "Delete SimpleName: target(5060)", "Delete SimpleName: getAggCallList(5061)", "Delete MethodInvocation(5062)", "Delete SimpleName: target(5109)", "Delete SimpleName: getGroupSet(5110)", "Delete MethodInvocation(5111)", "Delete SimpleName: query(5119)", "Delete SimpleName: getGroupSet(5120)", "Delete MethodInvocation(5121)", "Delete SimpleName: query(5160)", "Delete SimpleName: getAggCallList(5161)", "Delete MethodInvocation(5162)", "Delete SimpleName: target(5172)", "Delete SimpleName: getAggCallList(5173)", "Delete MethodInvocation(5174)", "Delete SimpleName: query(5234)", "Delete SimpleName: getRowType(5235)", "Delete MethodInvocation(5236)", "Delete SimpleName: target(5493)", "Delete SimpleName: getProjects(5494)", "Delete MethodInvocation(5495)", "Delete TextElement: Type of (5595)", "Delete TextElement:  MutableRel(5596)", "Delete TagElement: @code(5597)", "Delete TextElement: . (5598)", "Delete TagElement(5599)", "Delete Javadoc(5600)", "Delete Modifier: private(5601)", "Delete SimpleName: MutableRelType(5602)", "Delete SimpleName: SCAN(5603)", "Delete EnumConstantDeclaration(5604)", "Delete SimpleName: PROJECT(5605)", "Delete EnumConstantDeclaration(5606)", "Delete SimpleName: FILTER(5607)", "Delete EnumConstantDeclaration(5608)", "Delete SimpleName: AGGREGATE(5609)", "Delete EnumConstantDeclaration(5610)", "Delete SimpleName: SORT(5611)", "Delete EnumConstantDeclaration(5612)", "Delete SimpleName: UNION(5613)", "Delete EnumConstantDeclaration(5614)", "Delete SimpleName: JOIN(5615)", "Delete EnumConstantDeclaration(5616)", "Delete SimpleName: HOLDER(5617)", "Delete EnumConstantDeclaration(5618)", "Delete SimpleName: VALUES(5619)", "Delete EnumConstantDeclaration(5620)", "Delete EnumDeclaration(5621)", "Delete TextElement: Visitor over (5622)", "Delete SimpleName: MutableRel(5623)", "Delete TagElement: @link(5624)", "Delete TextElement: . (5625)", "Delete TagElement(5626)", "Delete Javadoc(5627)", "Delete Modifier: private(5628)", "Delete Modifier: static(5629)", "Delete SimpleName: MutableRelVisitor(5630)", "Delete Modifier: private(5631)", "Delete SimpleName: MutableRel(5632)", "Delete SimpleType: MutableRel(5633)", "Delete SimpleName: root(5634)", "Delete VariableDeclarationFragment(5635)", "Delete FieldDeclaration(5636)", "Delete Modifier: public(5637)", "Delete PrimitiveType: void(5638)", "Delete SimpleName: visit(5639)", "Delete SimpleName: MutableRel(5640)", "Delete SimpleType: MutableRel(5641)", "Delete SimpleName: node(5642)", "Delete SingleVariableDeclaration(5643)", "Delete SimpleName: node(5644)", "Delete SimpleName: childrenAccept(5645)", "Delete ThisExpression(5646)", "Delete MethodInvocation(5647)", "Delete ExpressionStatement(5648)", "Delete Block(5649)", "Delete MethodDeclaration(5650)", "Delete Modifier: public(5651)", "Delete SimpleName: MutableRel(5652)", "Delete SimpleType: MutableRel(5653)", "Delete SimpleName: go(5654)", "Delete SimpleName: MutableRel(5655)", "Delete SimpleType: MutableRel(5656)", "Delete SimpleName: p(5657)", "Delete SingleVariableDeclaration(5658)", "Delete ThisExpression(5659)", "Delete SimpleName: root(5660)", "Delete FieldAccess(5661)", "Delete SimpleName: p(5662)", "Delete Assignment: =(5663)", "Delete ExpressionStatement(5664)", "Delete SimpleName: visit(5665)", "Delete SimpleName: p(5666)", "Delete MethodInvocation(5667)", "Delete ExpressionStatement(5668)", "Delete SimpleName: root(5669)", "Delete ReturnStatement(5670)", "Delete Block(5671)", "Delete MethodDeclaration(5672)", "Delete TypeDeclaration: class(5673)", "Delete TextElement: Mutable equivalent of (5674)", "Delete SimpleName: RelNode(5675)", "Delete TagElement: @link(5676)", "Delete TextElement: .(5677)", "Delete TextElement: <p>Each node has mutable state, and keeps track of its parent and position(5678)", "Delete TextElement: within parent.(5679)", "Delete TextElement: It doesn't make sense to canonize (5680)", "Delete TextElement:  MutableRels(5681)", "Delete TagElement: @code(5682)", "Delete TextElement: ,(5683)", "Delete TextElement: otherwise one node could end up with multiple parents.(5684)", "Delete TextElement: It follows that (5685)", "Delete TextElement:  #hashCode(5686)", "Delete TagElement: @code(5687)", "Delete TextElement:  and (5688)", "Delete TextElement:  #equals(5689)", "Delete TagElement: @code(5690)", "Delete TextElement:  are less efficient(5691)", "Delete TextElement: than their (5692)", "Delete TextElement:  RelNode(5693)", "Delete TagElement: @code(5694)", "Delete TextElement:  counterparts.(5695)", "Delete TextElement: But, you don't need to copy a (5696)", "Delete TextElement:  MutableRel(5697)", "Delete TagElement: @code(5698)", "Delete TextElement:  in order to change it.(5699)", "Delete TextElement: For this reason, you should use (5700)", "Delete TextElement:  MutableRel(5701)", "Delete TagElement: @code(5702)", "Delete TextElement:  for short-lived(5703)", "Delete TextElement: operations, and transcribe back to (5704)", "Delete TextElement:  RelNode(5705)", "Delete TagElement: @code(5706)", "Delete TextElement:  when you are done.</p>(5707)", "Delete TagElement(5708)", "Delete Javadoc(5709)", "Delete Modifier: protected(5710)", "Delete Modifier: abstract(5711)", "Delete Modifier: static(5712)", "Delete SimpleName: MutableRel(5713)", "Delete SimpleName: MutableRel(5714)", "Delete SimpleType: MutableRel(5715)", "Delete SimpleName: parent(5716)", "Delete VariableDeclarationFragment(5717)", "Delete FieldDeclaration(5718)", "Delete PrimitiveType: int(5719)", "Delete SimpleName: ordinalInParent(5720)", "Delete VariableDeclarationFragment(5721)", "Delete FieldDeclaration(5722)", "Delete Modifier: public(5723)", "Delete Modifier: final(5724)", "Delete SimpleName: RelOptCluster(5725)", "Delete SimpleType: RelOptCluster(5726)", "Delete SimpleName: cluster(5727)", "Delete VariableDeclarationFragment(5728)", "Delete FieldDeclaration(5729)", "Delete Modifier: final(5730)", "Delete SimpleName: RelDataType(5731)", "Delete SimpleType: RelDataType(5732)", "Delete SimpleName: rowType(5733)", "Delete VariableDeclarationFragment(5734)", "Delete FieldDeclaration(5735)", "Delete Modifier: final(5736)", "Delete SimpleName: MutableRelType(5737)", "Delete SimpleType: MutableRelType(5738)", "Delete SimpleName: type(5739)", "Delete VariableDeclarationFragment(5740)", "Delete FieldDeclaration(5741)", "Delete Modifier: private(5742)", "Delete SimpleName: MutableRel(5743)", "Delete SimpleName: RelOptCluster(5744)", "Delete SimpleType: RelOptCluster(5745)", "Delete SimpleName: cluster(5746)", "Delete SingleVariableDeclaration(5747)", "Delete SimpleName: RelDataType(5748)", "Delete SimpleType: RelDataType(5749)", "Delete SimpleName: rowType(5750)", "Delete SingleVariableDeclaration(5751)", "Delete SimpleName: MutableRelType(5752)", "Delete SimpleType: MutableRelType(5753)", "Delete SimpleName: type(5754)", "Delete SingleVariableDeclaration(5755)", "Delete ThisExpression(5756)", "Delete SimpleName: cluster(5757)", "Delete FieldAccess(5758)", "Delete SimpleName: cluster(5759)", "Delete Assignment: =(5760)", "Delete ExpressionStatement(5761)", "Delete ThisExpression(5762)", "Delete SimpleName: rowType(5763)", "Delete FieldAccess(5764)", "Delete SimpleName: rowType(5765)", "Delete Assignment: =(5766)", "Delete ExpressionStatement(5767)", "Delete ThisExpression(5768)", "Delete SimpleName: type(5769)", "Delete FieldAccess(5770)", "Delete SimpleName: type(5771)", "Delete Assignment: =(5772)", "Delete ExpressionStatement(5773)", "Delete Block(5774)", "Delete MethodDeclaration(5775)", "Delete Modifier: public(5776)", "Delete SimpleName: RelDataType(5777)", "Delete SimpleType: RelDataType(5778)", "Delete SimpleName: getRowType(5779)", "Delete SimpleName: rowType(5780)", "Delete ReturnStatement(5781)", "Delete Block(5782)", "Delete MethodDeclaration(5783)", "Delete Modifier: public(5784)", "Delete Modifier: abstract(5785)", "Delete PrimitiveType: void(5786)", "Delete SimpleName: setInput(5787)", "Delete PrimitiveType: int(5788)", "Delete SimpleName: ordinalInParent(5789)", "Delete SingleVariableDeclaration(5790)", "Delete SimpleName: MutableRel(5791)", "Delete SimpleType: MutableRel(5792)", "Delete SimpleName: input(5793)", "Delete SingleVariableDeclaration(5794)", "Delete MethodDeclaration(5795)", "Delete Modifier: public(5796)", "Delete Modifier: abstract(5797)", "Delete SimpleName: List(5798)", "Delete SimpleType: List(5799)", "Delete SimpleName: MutableRel(5800)", "Delete SimpleType: MutableRel(5801)", "Delete ParameterizedType: List<MutableRel>(5802)", "Delete SimpleName: getInputs(5803)", "Delete MethodDeclaration(5804)", "Delete Modifier: public(5805)", "Delete Modifier: abstract(5806)", "Delete PrimitiveType: void(5807)", "Delete SimpleName: childrenAccept(5808)", "Delete SimpleName: MutableRelVisitor(5809)", "Delete SimpleType: MutableRelVisitor(5810)", "Delete SimpleName: visitor(5811)", "Delete SingleVariableDeclaration(5812)", "Delete MethodDeclaration(5813)", "Delete TextElement: Replaces this (5814)", "Delete TextElement:  MutableRel(5815)", "Delete TagElement: @code(5816)", "Delete TextElement:  in its parent with another node at the(5817)", "Delete TextElement: same position.(5818)", "Delete TextElement: <p>Before the method, (5819)", "Delete TextElement:  child(5820)", "Delete TagElement: @code(5821)", "Delete TextElement:  must be an orphan (have null parent)(5822)", "Delete TextElement: and after this method, this (5823)", "Delete TextElement:  MutableRel(5824)", "Delete TagElement: @code(5825)", "Delete TextElement:  is an orphan.(5826)", "Delete TagElement(5827)", "Delete TextElement:  The parent(5828)", "Delete TagElement: @return(5829)", "Delete Javadoc(5830)", "Delete Modifier: public(5831)", "Delete SimpleName: MutableRel(5832)", "Delete SimpleType: MutableRel(5833)", "Delete SimpleName: replaceInParent(5834)", "Delete SimpleName: MutableRel(5835)", "Delete SimpleType: MutableRel(5836)", "Delete SimpleName: child(5837)", "Delete SingleVariableDeclaration(5838)", "Delete Modifier: final(5839)", "Delete SimpleName: MutableRel(5840)", "Delete SimpleType: MutableRel(5841)", "Delete SimpleName: parent(5842)", "Delete ThisExpression(5843)", "Delete SimpleName: parent(5844)", "Delete FieldAccess(5845)", "Delete VariableDeclarationFragment(5846)", "Delete VariableDeclarationStatement(5847)", "Delete ThisExpression(5848)", "Delete SimpleName: child(5849)", "Delete InfixExpression: !=(5850)", "Delete SimpleName: parent(5851)", "Delete NullLiteral(5852)", "Delete InfixExpression: !=(5853)", "Delete SimpleName: parent(5854)", "Delete SimpleName: setInput(5855)", "Delete SimpleName: ordinalInParent(5856)", "Delete SimpleName: child(5857)", "Delete MethodInvocation(5858)", "Delete ExpressionStatement(5859)", "Delete ThisExpression(5860)", "Delete SimpleName: parent(5861)", "Delete FieldAccess(5862)", "Delete NullLiteral(5863)", "Delete Assignment: =(5864)", "Delete ExpressionStatement(5865)", "Delete ThisExpression(5866)", "Delete SimpleName: ordinalInParent(5867)", "Delete FieldAccess(5868)", "Delete NumberLiteral: 0(5869)", "Delete Assignment: =(5870)", "Delete ExpressionStatement(5871)", "Delete Block(5872)", "Delete IfStatement(5873)", "Delete Block(5874)", "Delete IfStatement(5875)", "Delete SimpleName: parent(5876)", "Delete ReturnStatement(5877)", "Delete Block(5878)", "Delete MethodDeclaration(5879)", "Delete Modifier: public(5880)", "Delete Modifier: abstract(5881)", "Delete SimpleName: StringBuilder(5882)", "Delete SimpleType: StringBuilder(5883)", "Delete SimpleName: digest(5884)", "Delete SimpleName: StringBuilder(5885)", "Delete SimpleType: StringBuilder(5886)", "Delete SimpleName: buf(5887)", "Delete SingleVariableDeclaration(5888)", "Delete MethodDeclaration(5889)", "Delete Modifier: public(5890)", "Delete Modifier: final(5891)", "Delete SimpleName: String(5892)", "Delete SimpleType: String(5893)", "Delete SimpleName: deep(5894)", "Delete SimpleName: MutableRelDumper(5895)", "Delete SimpleType: MutableRelDumper(5896)", "Delete ClassInstanceCreation(5897)", "Delete SimpleName: apply(5898)", "Delete ThisExpression(5899)", "Delete MethodInvocation(5900)", "Delete ReturnStatement(5901)", "Delete Block(5902)", "Delete MethodDeclaration(5903)", "Delete SimpleName: Override(5904)", "Delete MarkerAnnotation(5905)", "Delete Modifier: public(5906)", "Delete Modifier: final(5907)", "Delete SimpleName: String(5908)", "Delete SimpleType: String(5909)", "Delete SimpleName: toString(5910)", "Delete SimpleName: deep(5911)", "Delete MethodInvocation(5912)", "Delete ReturnStatement(5913)", "Delete Block(5914)", "Delete MethodDeclaration(5915)", "Delete Modifier: public(5916)", "Delete SimpleName: MutableRel(5917)", "Delete SimpleType: MutableRel(5918)", "Delete SimpleName: getParent(5919)", "Delete SimpleName: parent(5920)", "Delete ReturnStatement(5921)", "Delete Block(5922)", "Delete MethodDeclaration(5923)", "Delete TypeDeclaration: class(5924)", "Delete TextElement: Implementation of (5925)", "Delete SimpleName: MutableRel(5926)", "Delete TagElement: @link(5927)", "Delete TextElement:  whose only purpose is to have a(5928)", "Delete TextElement: child. Used as the root of a tree. (5929)", "Delete TagElement(5930)", "Delete Javadoc(5931)", "Delete Modifier: private(5932)", "Delete Modifier: static(5933)", "Delete SimpleName: Holder(5934)", "Delete SimpleName: MutableSingleRel(5935)", "Delete SimpleType: MutableSingleRel(5936)", "Delete Modifier: private(5937)", "Delete SimpleName: Holder(5938)", "Delete SimpleName: MutableRelType(5939)", "Delete SimpleType: MutableRelType(5940)", "Delete SimpleName: type(5941)", "Delete SingleVariableDeclaration(5942)", "Delete SimpleName: RelDataType(5943)", "Delete SimpleType: RelDataType(5944)", "Delete SimpleName: rowType(5945)", "Delete SingleVariableDeclaration(5946)", "Delete SimpleName: MutableRel(5947)", "Delete SimpleType: MutableRel(5948)", "Delete SimpleName: input(5949)", "Delete SingleVariableDeclaration(5950)", "Delete SimpleName: type(5951)", "Delete SimpleName: rowType(5952)", "Delete SimpleName: input(5953)", "Delete SuperConstructorInvocation(5954)", "Delete Block(5955)", "Delete MethodDeclaration(5956)", "Delete Modifier: static(5957)", "Delete SimpleName: Holder(5958)", "Delete SimpleType: Holder(5959)", "Delete SimpleName: of(5960)", "Delete SimpleName: MutableRel(5961)", "Delete SimpleType: MutableRel(5962)", "Delete SimpleName: input(5963)", "Delete SingleVariableDeclaration(5964)", "Delete SimpleName: Holder(5965)", "Delete SimpleType: Holder(5966)", "Delete QualifiedName: MutableRelType.HOLDER(5967)", "Delete QualifiedName: input.rowType(5968)", "Delete SimpleName: input(5969)", "Delete ClassInstanceCreation(5970)", "Delete ReturnStatement(5971)", "Delete Block(5972)", "Delete MethodDeclaration(5973)", "Delete SimpleName: Override(5974)", "Delete MarkerAnnotation(5975)", "Delete Modifier: public(5976)", "Delete SimpleName: StringBuilder(5977)", "Delete SimpleType: StringBuilder(5978)", "Delete SimpleName: digest(5979)", "Delete SimpleName: StringBuilder(5980)", "Delete SimpleType: StringBuilder(5981)", "Delete SimpleName: buf(5982)", "Delete SingleVariableDeclaration(5983)", "Delete SimpleName: buf(5984)", "Delete SimpleName: append(5985)", "Delete StringLiteral: \"Holder\"(5986)", "Delete MethodInvocation(5987)", "Delete ReturnStatement(5988)", "Delete Block(5989)", "Delete MethodDeclaration(5990)", "Delete TypeDeclaration: class(5991)", "Delete TextElement: Abstract base class for implementations of (5992)", "Delete SimpleName: MutableRel(5993)", "Delete TagElement: @link(5994)", "Delete TextElement:  that have(5995)", "Delete TextElement: no inputs. (5996)", "Delete TagElement(5997)", "Delete Javadoc(5998)", "Delete Modifier: protected(5999)", "Delete Modifier: abstract(6000)", "Delete Modifier: static(6001)", "Delete SimpleName: MutableLeafRel(6002)", "Delete SimpleName: MutableRel(6003)", "Delete SimpleType: MutableRel(6004)", "Delete Modifier: protected(6005)", "Delete Modifier: final(6006)", "Delete SimpleName: RelNode(6007)", "Delete SimpleType: RelNode(6008)", "Delete SimpleName: rel(6009)", "Delete VariableDeclarationFragment(6010)", "Delete FieldDeclaration(6011)", "Delete SimpleName: MutableLeafRel(6012)", "Delete SimpleName: MutableRelType(6013)", "Delete SimpleType: MutableRelType(6014)", "Delete SimpleName: type(6015)", "Delete SingleVariableDeclaration(6016)", "Delete SimpleName: RelNode(6017)", "Delete SimpleType: RelNode(6018)", "Delete SimpleName: rel(6019)", "Delete SingleVariableDeclaration(6020)", "Delete SimpleName: rel(6021)", "Delete SimpleName: getCluster(6022)", "Delete MethodInvocation(6023)", "Delete SimpleName: rel(6024)", "Delete SimpleName: getRowType(6025)", "Delete MethodInvocation(6026)", "Delete SimpleName: type(6027)", "Delete SuperConstructorInvocation(6028)", "Delete ThisExpression(6029)", "Delete SimpleName: rel(6030)", "Delete FieldAccess(6031)", "Delete SimpleName: rel(6032)", "Delete Assignment: =(6033)", "Delete ExpressionStatement(6034)", "Delete Block(6035)", "Delete MethodDeclaration(6036)", "Delete Modifier: public(6037)", "Delete PrimitiveType: void(6038)", "Delete SimpleName: setInput(6039)", "Delete PrimitiveType: int(6040)", "Delete SimpleName: ordinalInParent(6041)", "Delete SingleVariableDeclaration(6042)", "Delete SimpleName: MutableRel(6043)", "Delete SimpleType: MutableRel(6044)", "Delete SimpleName: input(6045)", "Delete SingleVariableDeclaration(6046)", "Delete SimpleName: IllegalArgumentException(6047)", "Delete SimpleType: IllegalArgumentException(6048)", "Delete ClassInstanceCreation(6049)", "Delete ThrowStatement(6050)", "Delete Block(6051)", "Delete MethodDeclaration(6052)", "Delete Modifier: public(6053)", "Delete SimpleName: List(6054)", "Delete SimpleType: List(6055)", "Delete SimpleName: MutableRel(6056)", "Delete SimpleType: MutableRel(6057)", "Delete ParameterizedType: List<MutableRel>(6058)", "Delete SimpleName: getInputs(6059)", "Delete SimpleName: ImmutableList(6060)", "Delete SimpleName: of(6061)", "Delete MethodInvocation(6062)", "Delete ReturnStatement(6063)", "Delete Block(6064)", "Delete MethodDeclaration(6065)", "Delete Modifier: public(6066)", "Delete PrimitiveType: void(6067)", "Delete SimpleName: childrenAccept(6068)", "Delete SimpleName: MutableRelVisitor(6069)", "Delete SimpleType: MutableRelVisitor(6070)", "Delete SimpleName: visitor(6071)", "Delete SingleVariableDeclaration(6072)", "Delete Block(6073)", "Delete MethodDeclaration(6074)", "Delete TypeDeclaration: class(6075)", "Delete TextElement: Mutable equivalent of (6076)", "Delete SimpleName: SingleRel(6077)", "Delete TagElement: @link(6078)", "Delete TextElement: . (6079)", "Delete TagElement(6080)", "Delete Javadoc(6081)", "Delete Modifier: protected(6082)", "Delete Modifier: abstract(6083)", "Delete Modifier: static(6084)", "Delete SimpleName: MutableSingleRel(6085)", "Delete SimpleName: MutableRel(6086)", "Delete SimpleType: MutableRel(6087)", "Delete Modifier: protected(6088)", "Delete SimpleName: MutableRel(6089)", "Delete SimpleType: MutableRel(6090)", "Delete SimpleName: input(6091)", "Delete VariableDeclarationFragment(6092)", "Delete FieldDeclaration(6093)", "Delete SimpleName: MutableSingleRel(6094)", "Delete SimpleName: MutableRelType(6095)", "Delete SimpleType: MutableRelType(6096)", "Delete SimpleName: type(6097)", "Delete SingleVariableDeclaration(6098)", "Delete SimpleName: RelDataType(6099)", "Delete SimpleType: RelDataType(6100)", "Delete SimpleName: rowType(6101)", "Delete SingleVariableDeclaration(6102)", "Delete SimpleName: MutableRel(6103)", "Delete SimpleType: MutableRel(6104)", "Delete SimpleName: input(6105)", "Delete SingleVariableDeclaration(6106)", "Delete QualifiedName: input.cluster(6107)", "Delete SimpleName: rowType(6108)", "Delete SimpleName: type(6109)", "Delete SuperConstructorInvocation(6110)", "Delete ThisExpression(6111)", "Delete SimpleName: input(6112)", "Delete FieldAccess(6113)", "Delete SimpleName: input(6114)", "Delete Assignment: =(6115)", "Delete ExpressionStatement(6116)", "Delete QualifiedName: input.parent(6117)", "Delete ThisExpression(6118)", "Delete Assignment: =(6119)", "Delete ExpressionStatement(6120)", "Delete QualifiedName: input.ordinalInParent(6121)", "Delete NumberLiteral: 0(6122)", "Delete Assignment: =(6123)", "Delete ExpressionStatement(6124)", "Delete Block(6125)", "Delete MethodDeclaration(6126)", "Delete Modifier: public(6127)", "Delete PrimitiveType: void(6128)", "Delete SimpleName: setInput(6129)", "Delete PrimitiveType: int(6130)", "Delete SimpleName: ordinalInParent(6131)", "Delete SingleVariableDeclaration(6132)", "Delete SimpleName: MutableRel(6133)", "Delete SimpleType: MutableRel(6134)", "Delete SimpleName: input(6135)", "Delete SingleVariableDeclaration(6136)", "Delete SimpleName: ordinalInParent(6137)", "Delete NumberLiteral: 1(6138)", "Delete InfixExpression: >=(6139)", "Delete SimpleName: IllegalArgumentException(6140)", "Delete SimpleType: IllegalArgumentException(6141)", "Delete ClassInstanceCreation(6142)", "Delete ThrowStatement(6143)", "Delete Block(6144)", "Delete IfStatement(6145)", "Delete ThisExpression(6146)", "Delete SimpleName: input(6147)", "Delete FieldAccess(6148)", "Delete SimpleName: input(6149)", "Delete Assignment: =(6150)", "Delete ExpressionStatement(6151)", "Delete SimpleName: input(6152)", "Delete NullLiteral(6153)", "Delete InfixExpression: !=(6154)", "Delete QualifiedName: input.parent(6155)", "Delete ThisExpression(6156)", "Delete Assignment: =(6157)", "Delete ExpressionStatement(6158)", "Delete QualifiedName: input.ordinalInParent(6159)", "Delete NumberLiteral: 0(6160)", "Delete Assignment: =(6161)", "Delete ExpressionStatement(6162)", "Delete Block(6163)", "Delete IfStatement(6164)", "Delete Block(6165)", "Delete MethodDeclaration(6166)", "Delete Modifier: public(6167)", "Delete SimpleName: List(6168)", "Delete SimpleType: List(6169)", "Delete SimpleName: MutableRel(6170)", "Delete SimpleType: MutableRel(6171)", "Delete ParameterizedType: List<MutableRel>(6172)", "Delete SimpleName: getInputs(6173)", "Delete SimpleName: ImmutableList(6174)", "Delete SimpleName: of(6175)", "Delete SimpleName: input(6176)", "Delete MethodInvocation(6177)", "Delete ReturnStatement(6178)", "Delete Block(6179)", "Delete MethodDeclaration(6180)", "Delete Modifier: public(6181)", "Delete PrimitiveType: void(6182)", "Delete SimpleName: childrenAccept(6183)", "Delete SimpleName: MutableRelVisitor(6184)", "Delete SimpleType: MutableRelVisitor(6185)", "Delete SimpleName: visitor(6186)", "Delete SingleVariableDeclaration(6187)", "Delete SimpleName: visitor(6188)", "Delete SimpleName: visit(6189)", "Delete SimpleName: input(6190)", "Delete MethodInvocation(6191)", "Delete ExpressionStatement(6192)", "Delete Block(6193)", "Delete MethodDeclaration(6194)", "Delete Modifier: public(6195)", "Delete SimpleName: MutableRel(6196)", "Delete SimpleType: MutableRel(6197)", "Delete SimpleName: getInput(6198)", "Delete SimpleName: input(6199)", "Delete ReturnStatement(6200)", "Delete Block(6201)", "Delete MethodDeclaration(6202)", "Delete TypeDeclaration: class(6203)", "Delete TextElement: Mutable equivalent of(6204)", "Delete QualifiedName: org.apache.calcite.rel.logical.LogicalTableScan(6205)", "Delete TagElement: @link(6206)", "Delete TextElement: . (6207)", "Delete TagElement(6208)", "Delete Javadoc(6209)", "Delete Modifier: protected(6210)", "Delete Modifier: static(6211)", "Delete SimpleName: MutableScan(6212)", "Delete SimpleName: MutableLeafRel(6213)", "Delete SimpleType: MutableLeafRel(6214)", "Delete Modifier: private(6215)", "Delete SimpleName: MutableScan(6216)", "Delete SimpleName: TableScan(6217)", "Delete SimpleType: TableScan(6218)", "Delete SimpleName: rel(6219)", "Delete SingleVariableDeclaration(6220)", "Delete QualifiedName: MutableRelType.SCAN(6221)", "Delete SimpleName: rel(6222)", "Delete SuperConstructorInvocation(6223)", "Delete Block(6224)", "Delete MethodDeclaration(6225)", "Delete Modifier: static(6226)", "Delete SimpleName: MutableScan(6227)", "Delete SimpleType: MutableScan(6228)", "Delete SimpleName: of(6229)", "Delete SimpleName: TableScan(6230)", "Delete SimpleType: TableScan(6231)", "Delete SimpleName: rel(6232)", "Delete SingleVariableDeclaration(6233)", "Delete SimpleName: MutableScan(6234)", "Delete SimpleType: MutableScan(6235)", "Delete SimpleName: rel(6236)", "Delete ClassInstanceCreation(6237)", "Delete ReturnStatement(6238)", "Delete Block(6239)", "Delete MethodDeclaration(6240)", "Delete SimpleName: Override(6241)", "Delete MarkerAnnotation(6242)", "Delete Modifier: public(6243)", "Delete PrimitiveType: boolean(6244)", "Delete SimpleName: equals(6245)", "Delete SimpleName: Object(6246)", "Delete SimpleType: Object(6247)", "Delete SimpleName: obj(6248)", "Delete SingleVariableDeclaration(6249)", "Delete SimpleName: obj(6250)", "Delete ThisExpression(6251)", "Delete InfixExpression: ==(6252)", "Delete SimpleName: obj(6253)", "Delete SimpleName: MutableScan(6254)", "Delete SimpleType: MutableScan(6255)", "Delete InstanceofExpression(6256)", "Delete SimpleName: rel(6257)", "Delete SimpleName: equals(6258)", "Delete SimpleName: MutableScan(6259)", "Delete SimpleType: MutableScan(6260)", "Delete SimpleName: obj(6261)", "Delete CastExpression(6262)", "Delete ParenthesizedExpression(6263)", "Delete SimpleName: rel(6264)", "Delete FieldAccess(6265)", "Delete MethodInvocation(6266)", "Delete InfixExpression: &&(6267)", "Delete InfixExpression: ||(6268)", "Delete ReturnStatement(6269)", "Delete Block(6270)", "Delete MethodDeclaration(6271)", "Delete SimpleName: Override(6272)", "Delete MarkerAnnotation(6273)", "Delete Modifier: public(6274)", "Delete PrimitiveType: int(6275)", "Delete SimpleName: hashCode(6276)", "Delete SimpleName: rel(6277)", "Delete SimpleName: hashCode(6278)", "Delete MethodInvocation(6279)", "Delete ReturnStatement(6280)", "Delete Block(6281)", "Delete MethodDeclaration(6282)", "Delete SimpleName: Override(6283)", "Delete MarkerAnnotation(6284)", "Delete Modifier: public(6285)", "Delete SimpleName: StringBuilder(6286)", "Delete SimpleType: StringBuilder(6287)", "Delete SimpleName: digest(6288)", "Delete SimpleName: StringBuilder(6289)", "Delete SimpleType: StringBuilder(6290)", "Delete SimpleName: buf(6291)", "Delete SingleVariableDeclaration(6292)", "Delete SimpleName: buf(6293)", "Delete SimpleName: append(6294)", "Delete StringLiteral: \"Scan(table: \"(6295)", "Delete MethodInvocation(6296)", "Delete SimpleName: append(6297)", "Delete SimpleName: rel(6298)", "Delete SimpleName: getTable(6299)", "Delete MethodInvocation(6300)", "Delete SimpleName: getQualifiedName(6301)", "Delete MethodInvocation(6302)", "Delete MethodInvocation(6303)", "Delete SimpleName: append(6304)", "Delete StringLiteral: \")\"(6305)", "Delete MethodInvocation(6306)", "Delete ReturnStatement(6307)", "Delete Block(6308)", "Delete MethodDeclaration(6309)", "Delete TypeDeclaration: class(6310)", "Delete TextElement: Mutable equivalent of (6311)", "Delete QualifiedName: org.apache.calcite.rel.core.Values(6312)", "Delete TagElement: @link(6313)", "Delete TextElement: . (6314)", "Delete TagElement(6315)", "Delete Javadoc(6316)", "Delete Modifier: protected(6317)", "Delete Modifier: static(6318)", "Delete SimpleName: MutableValues(6319)", "Delete SimpleName: MutableLeafRel(6320)", "Delete SimpleType: MutableLeafRel(6321)", "Delete Modifier: private(6322)", "Delete SimpleName: MutableValues(6323)", "Delete SimpleName: Values(6324)", "Delete SimpleType: Values(6325)", "Delete SimpleName: rel(6326)", "Delete SingleVariableDeclaration(6327)", "Delete QualifiedName: MutableRelType.VALUES(6328)", "Delete SimpleName: rel(6329)", "Delete SuperConstructorInvocation(6330)", "Delete Block(6331)", "Delete MethodDeclaration(6332)", "Delete Modifier: static(6333)", "Delete SimpleName: MutableValues(6334)", "Delete SimpleType: MutableValues(6335)", "Delete SimpleName: of(6336)", "Delete SimpleName: Values(6337)", "Delete SimpleType: Values(6338)", "Delete SimpleName: rel(6339)", "Delete SingleVariableDeclaration(6340)", "Delete SimpleName: MutableValues(6341)", "Delete SimpleType: MutableValues(6342)", "Delete SimpleName: rel(6343)", "Delete ClassInstanceCreation(6344)", "Delete ReturnStatement(6345)", "Delete Block(6346)", "Delete MethodDeclaration(6347)", "Delete SimpleName: Override(6348)", "Delete MarkerAnnotation(6349)", "Delete Modifier: public(6350)", "Delete PrimitiveType: boolean(6351)", "Delete SimpleName: equals(6352)", "Delete SimpleName: Object(6353)", "Delete SimpleType: Object(6354)", "Delete SimpleName: obj(6355)", "Delete SingleVariableDeclaration(6356)", "Delete SimpleName: obj(6357)", "Delete ThisExpression(6358)", "Delete InfixExpression: ==(6359)", "Delete SimpleName: obj(6360)", "Delete SimpleName: MutableValues(6361)", "Delete SimpleType: MutableValues(6362)", "Delete InstanceofExpression(6363)", "Delete SimpleName: rel(6364)", "Delete SimpleName: MutableValues(6365)", "Delete SimpleType: MutableValues(6366)", "Delete SimpleName: obj(6367)", "Delete CastExpression(6368)", "Delete ParenthesizedExpression(6369)", "Delete SimpleName: rel(6370)", "Delete FieldAccess(6371)", "Delete InfixExpression: ==(6372)", "Delete InfixExpression: &&(6373)", "Delete InfixExpression: ||(6374)", "Delete ReturnStatement(6375)", "Delete Block(6376)", "Delete MethodDeclaration(6377)", "Delete SimpleName: Override(6378)", "Delete MarkerAnnotation(6379)", "Delete Modifier: public(6380)", "Delete PrimitiveType: int(6381)", "Delete SimpleName: hashCode(6382)", "Delete SimpleName: rel(6383)", "Delete SimpleName: hashCode(6384)", "Delete MethodInvocation(6385)", "Delete ReturnStatement(6386)", "Delete Block(6387)", "Delete MethodDeclaration(6388)", "Delete SimpleName: Override(6389)", "Delete MarkerAnnotation(6390)", "Delete Modifier: public(6391)", "Delete SimpleName: StringBuilder(6392)", "Delete SimpleType: StringBuilder(6393)", "Delete SimpleName: digest(6394)", "Delete SimpleName: StringBuilder(6395)", "Delete SimpleType: StringBuilder(6396)", "Delete SimpleName: buf(6397)", "Delete SingleVariableDeclaration(6398)", "Delete SimpleName: buf(6399)", "Delete SimpleName: append(6400)", "Delete StringLiteral: \"Values(tuples: \"(6401)", "Delete MethodInvocation(6402)", "Delete SimpleName: append(6403)", "Delete SimpleName: Values(6404)", "Delete SimpleType: Values(6405)", "Delete SimpleName: rel(6406)", "Delete CastExpression(6407)", "Delete ParenthesizedExpression(6408)", "Delete SimpleName: getTuples(6409)", "Delete MethodInvocation(6410)", "Delete MethodInvocation(6411)", "Delete SimpleName: append(6412)", "Delete StringLiteral: \")\"(6413)", "Delete MethodInvocation(6414)", "Delete ReturnStatement(6415)", "Delete Block(6416)", "Delete MethodDeclaration(6417)", "Delete TypeDeclaration: class(6418)", "Delete TextElement: Mutable equivalent of(6419)", "Delete QualifiedName: org.apache.calcite.rel.logical.LogicalProject(6420)", "Delete TagElement: @link(6421)", "Delete TextElement: . (6422)", "Delete TagElement(6423)", "Delete Javadoc(6424)", "Delete Modifier: protected(6425)", "Delete Modifier: static(6426)", "Delete SimpleName: MutableProject(6427)", "Delete SimpleName: MutableSingleRel(6428)", "Delete SimpleType: MutableSingleRel(6429)", "Delete Modifier: private(6430)", "Delete Modifier: final(6431)", "Delete SimpleName: List(6432)", "Delete SimpleType: List(6433)", "Delete SimpleName: RexNode(6434)", "Delete SimpleType: RexNode(6435)", "Delete ParameterizedType: List<RexNode>(6436)", "Delete SimpleName: projects(6437)", "Delete VariableDeclarationFragment(6438)", "Delete FieldDeclaration(6439)", "Delete Modifier: private(6440)", "Delete SimpleName: MutableProject(6441)", "Delete SimpleName: RelDataType(6442)", "Delete SimpleType: RelDataType(6443)", "Delete SimpleName: rowType(6444)", "Delete SingleVariableDeclaration(6445)", "Delete SimpleName: MutableRel(6446)", "Delete SimpleType: MutableRel(6447)", "Delete SimpleName: input(6448)", "Delete SingleVariableDeclaration(6449)", "Delete SimpleName: List(6450)", "Delete SimpleType: List(6451)", "Delete SimpleName: RexNode(6452)", "Delete SimpleType: RexNode(6453)", "Delete ParameterizedType: List<RexNode>(6454)", "Delete SimpleName: projects(6455)", "Delete SingleVariableDeclaration(6456)", "Delete QualifiedName: MutableRelType.PROJECT(6457)", "Delete SimpleName: rowType(6458)", "Delete SimpleName: input(6459)", "Delete SuperConstructorInvocation(6460)", "Delete ThisExpression(6461)", "Delete SimpleName: projects(6462)", "Delete FieldAccess(6463)", "Delete SimpleName: projects(6464)", "Delete Assignment: =(6465)", "Delete ExpressionStatement(6466)", "Delete SimpleName: RexUtil(6467)", "Delete SimpleName: compatibleTypes(6468)", "Delete SimpleName: projects(6469)", "Delete SimpleName: rowType(6470)", "Delete QualifiedName: Litmus.THROW(6471)", "Delete MethodInvocation(6472)", "Delete AssertStatement(6473)", "Delete Block(6474)", "Delete MethodDeclaration(6475)", "Delete Modifier: public(6476)", "Delete Modifier: static(6477)", "Delete SimpleName: MutableProject(6478)", "Delete SimpleType: MutableProject(6479)", "Delete SimpleName: of(6480)", "Delete SimpleName: RelDataType(6481)", "Delete SimpleType: RelDataType(6482)", "Delete SimpleName: rowType(6483)", "Delete SingleVariableDeclaration(6484)", "Delete SimpleName: MutableRel(6485)", "Delete SimpleType: MutableRel(6486)", "Delete SimpleName: input(6487)", "Delete SingleVariableDeclaration(6488)", "Delete SimpleName: List(6489)", "Delete SimpleType: List(6490)", "Delete SimpleName: RexNode(6491)", "Delete SimpleType: RexNode(6492)", "Delete ParameterizedType: List<RexNode>(6493)", "Delete SimpleName: projects(6494)", "Delete SingleVariableDeclaration(6495)", "Delete SimpleName: MutableProject(6496)", "Delete SimpleType: MutableProject(6497)", "Delete SimpleName: rowType(6498)", "Delete SimpleName: input(6499)", "Delete SimpleName: projects(6500)", "Delete ClassInstanceCreation(6501)", "Delete ReturnStatement(6502)", "Delete Block(6503)", "Delete MethodDeclaration(6504)", "Delete TextElement: Equivalent to(6505)", "Delete SimpleName: RelOptUtil(6506)", "Delete SimpleName: createProject(6507)", "Delete QualifiedName: org.apache.calcite.rel.RelNode(6508)", "Delete SimpleType: org.apache.calcite.rel.RelNode(6509)", "Delete MethodRefParameter(6510)", "Delete QualifiedName: java.util.List(6511)", "Delete SimpleType: java.util.List(6512)", "Delete MethodRefParameter(6513)", "Delete QualifiedName: java.util.List(6514)", "Delete SimpleType: java.util.List(6515)", "Delete MethodRefParameter(6516)", "Delete MethodRef(6517)", "Delete TagElement: @link(6518)", "Delete TextElement: for (6519)", "Delete SimpleName: MutableRel(6520)", "Delete TagElement: @link(6521)", "Delete TextElement: . (6522)", "Delete TagElement(6523)", "Delete Javadoc(6524)", "Delete Modifier: public(6525)", "Delete Modifier: static(6526)", "Delete SimpleName: MutableRel(6527)", "Delete SimpleType: MutableRel(6528)", "Delete SimpleName: of(6529)", "Delete SimpleName: MutableRel(6530)", "Delete SimpleType: MutableRel(6531)", "Delete SimpleName: child(6532)", "Delete SingleVariableDeclaration(6533)", "Delete SimpleName: List(6534)", "Delete SimpleType: List(6535)", "Delete SimpleName: RexNode(6536)", "Delete SimpleType: RexNode(6537)", "Delete ParameterizedType: List<RexNode>(6538)", "Delete SimpleName: exprList(6539)", "Delete SingleVariableDeclaration(6540)", "Delete SimpleName: List(6541)", "Delete SimpleType: List(6542)", "Delete SimpleName: String(6543)", "Delete SimpleType: String(6544)", "Delete ParameterizedType: List<String>(6545)", "Delete SimpleName: fieldNameList(6546)", "Delete SingleVariableDeclaration(6547)", "Delete Modifier: final(6548)", "Delete SimpleName: RelDataType(6549)", "Delete SimpleType: RelDataType(6550)", "Delete SimpleName: rowType(6551)", "Delete SimpleName: RexUtil(6552)", "Delete SimpleName: createStructType(6553)", "Delete QualifiedName: child.cluster(6554)", "Delete SimpleName: getTypeFactory(6555)", "Delete MethodInvocation(6556)", "Delete SimpleName: exprList(6557)", "Delete SimpleName: fieldNameList(6558)", "Delete QualifiedName: SqlValidatorUtil.F_SUGGESTER(6559)", "Delete MethodInvocation(6560)", "Delete VariableDeclarationFragment(6561)", "Delete VariableDeclarationStatement(6562)", "Delete SimpleName: of(6563)", "Delete SimpleName: rowType(6564)", "Delete SimpleName: child(6565)", "Delete SimpleName: exprList(6566)", "Delete MethodInvocation(6567)", "Delete ReturnStatement(6568)", "Delete Block(6569)", "Delete MethodDeclaration(6570)", "Delete SimpleName: Override(6571)", "Delete MarkerAnnotation(6572)", "Delete Modifier: public(6573)", "Delete PrimitiveType: boolean(6574)", "Delete SimpleName: equals(6575)", "Delete SimpleName: Object(6576)", "Delete SimpleType: Object(6577)", "Delete SimpleName: obj(6578)", "Delete SingleVariableDeclaration(6579)", "Delete SimpleName: obj(6580)", "Delete ThisExpression(6581)", "Delete InfixExpression: ==(6582)", "Delete SimpleName: obj(6583)", "Delete SimpleName: MutableProject(6584)", "Delete SimpleType: MutableProject(6585)", "Delete InstanceofExpression(6586)", "Delete SimpleName: PAIRWISE_STRING_EQUIVALENCE(6587)", "Delete SimpleName: equivalent(6588)", "Delete SimpleName: projects(6589)", "Delete SimpleName: MutableProject(6590)", "Delete SimpleType: MutableProject(6591)", "Delete SimpleName: obj(6592)", "Delete CastExpression(6593)", "Delete ParenthesizedExpression(6594)", "Delete SimpleName: projects(6595)", "Delete FieldAccess(6596)", "Delete MethodInvocation(6597)", "Delete SimpleName: input(6598)", "Delete SimpleName: equals(6599)", "Delete SimpleName: MutableProject(6600)", "Delete SimpleType: MutableProject(6601)", "Delete SimpleName: obj(6602)", "Delete CastExpression(6603)", "Delete ParenthesizedExpression(6604)", "Delete SimpleName: input(6605)", "Delete FieldAccess(6606)", "Delete MethodInvocation(6607)", "Delete InfixExpression: &&(6608)", "Delete InfixExpression: ||(6609)", "Delete ReturnStatement(6610)", "Delete Block(6611)", "Delete MethodDeclaration(6612)", "Delete SimpleName: Override(6613)", "Delete MarkerAnnotation(6614)", "Delete Modifier: public(6615)", "Delete PrimitiveType: int(6616)", "Delete SimpleName: hashCode(6617)", "Delete SimpleName: Objects(6618)", "Delete SimpleName: hash(6619)", "Delete SimpleName: input(6620)", "Delete SimpleName: PAIRWISE_STRING_EQUIVALENCE(6621)", "Delete SimpleName: hash(6622)", "Delete SimpleName: projects(6623)", "Delete MethodInvocation(6624)", "Delete MethodInvocation(6625)", "Delete ReturnStatement(6626)", "Delete Block(6627)", "Delete MethodDeclaration(6628)", "Delete SimpleName: Override(6629)", "Delete MarkerAnnotation(6630)", "Delete Modifier: public(6631)", "Delete SimpleName: StringBuilder(6632)", "Delete SimpleType: StringBuilder(6633)", "Delete SimpleName: digest(6634)", "Delete SimpleName: StringBuilder(6635)", "Delete SimpleType: StringBuilder(6636)", "Delete SimpleName: buf(6637)", "Delete SingleVariableDeclaration(6638)", "Delete SimpleName: buf(6639)", "Delete SimpleName: append(6640)", "Delete StringLiteral: \"Project(projects: \"(6641)", "Delete MethodInvocation(6642)", "Delete SimpleName: append(6643)", "Delete SimpleName: projects(6644)", "Delete MethodInvocation(6645)", "Delete SimpleName: append(6646)", "Delete StringLiteral: \")\"(6647)", "Delete MethodInvocation(6648)", "Delete ReturnStatement(6649)", "Delete Block(6650)", "Delete MethodDeclaration(6651)", "Delete Modifier: public(6652)", "Delete SimpleName: List(6653)", "Delete SimpleType: List(6654)", "Delete SimpleName: RexNode(6655)", "Delete SimpleType: RexNode(6656)", "Delete ParameterizedType: List<RexNode>(6657)", "Delete SimpleName: getProjects(6658)", "Delete SimpleName: projects(6659)", "Delete ReturnStatement(6660)", "Delete Block(6661)", "Delete MethodDeclaration(6662)", "Delete TextElement: Returns a list of (expression, name) pairs. (6663)", "Delete TagElement(6664)", "Delete Javadoc(6665)", "Delete Modifier: public(6666)", "Delete Modifier: final(6667)", "Delete SimpleName: List(6668)", "Delete SimpleType: List(6669)", "Delete SimpleName: Pair(6670)", "Delete SimpleType: Pair(6671)", "Delete SimpleName: RexNode(6672)", "Delete SimpleType: RexNode(6673)", "Delete SimpleName: String(6674)", "Delete SimpleType: String(6675)", "Delete ParameterizedType: Pair<RexNode,String>(6676)", "Delete ParameterizedType: List<Pair<RexNode,String>>(6677)", "Delete SimpleName: getNamedProjects(6678)", "Delete SimpleName: Pair(6679)", "Delete SimpleName: zip(6680)", "Delete SimpleName: getProjects(6681)", "Delete MethodInvocation(6682)", "Delete SimpleName: getRowType(6683)", "Delete MethodInvocation(6684)", "Delete SimpleName: getFieldNames(6685)", "Delete MethodInvocation(6686)", "Delete MethodInvocation(6687)", "Delete ReturnStatement(6688)", "Delete Block(6689)", "Delete MethodDeclaration(6690)", "Delete Modifier: public(6691)", "Delete QualifiedName: Mappings.TargetMapping(6692)", "Delete SimpleType: Mappings.TargetMapping(6693)", "Delete SimpleName: getMapping(6694)", "Delete SimpleName: Project(6695)", "Delete SimpleName: getMapping(6696)", "Delete SimpleName: input(6697)", "Delete SimpleName: getRowType(6698)", "Delete MethodInvocation(6699)", "Delete SimpleName: getFieldCount(6700)", "Delete MethodInvocation(6701)", "Delete SimpleName: projects(6702)", "Delete MethodInvocation(6703)", "Delete ReturnStatement(6704)", "Delete Block(6705)", "Delete MethodDeclaration(6706)", "Delete TypeDeclaration: class(6707)", "Delete TextElement: Mutable equivalent of(6708)", "Delete QualifiedName: org.apache.calcite.rel.logical.LogicalFilter(6709)", "Delete TagElement: @link(6710)", "Delete TextElement: . (6711)", "Delete TagElement(6712)", "Delete Javadoc(6713)", "Delete Modifier: protected(6714)", "Delete Modifier: static(6715)", "Delete SimpleName: MutableFilter(6716)", "Delete SimpleName: MutableSingleRel(6717)", "Delete SimpleType: MutableSingleRel(6718)", "Delete Modifier: private(6719)", "Delete Modifier: final(6720)", "Delete SimpleName: RexNode(6721)", "Delete SimpleType: RexNode(6722)", "Delete SimpleName: condition(6723)", "Delete VariableDeclarationFragment(6724)", "Delete FieldDeclaration(6725)", "Delete Modifier: private(6726)", "Delete SimpleName: MutableFilter(6727)", "Delete SimpleName: MutableRel(6728)", "Delete SimpleType: MutableRel(6729)", "Delete SimpleName: input(6730)", "Delete SingleVariableDeclaration(6731)", "Delete SimpleName: RexNode(6732)", "Delete SimpleType: RexNode(6733)", "Delete SimpleName: condition(6734)", "Delete SingleVariableDeclaration(6735)", "Delete QualifiedName: MutableRelType.FILTER(6736)", "Delete QualifiedName: input.rowType(6737)", "Delete SimpleName: input(6738)", "Delete SuperConstructorInvocation(6739)", "Delete ThisExpression(6740)", "Delete SimpleName: condition(6741)", "Delete FieldAccess(6742)", "Delete SimpleName: condition(6743)", "Delete Assignment: =(6744)", "Delete ExpressionStatement(6745)", "Delete Block(6746)", "Delete MethodDeclaration(6747)", "Delete Modifier: public(6748)", "Delete Modifier: static(6749)", "Delete SimpleName: MutableFilter(6750)", "Delete SimpleType: MutableFilter(6751)", "Delete SimpleName: of(6752)", "Delete SimpleName: MutableRel(6753)", "Delete SimpleType: MutableRel(6754)", "Delete SimpleName: input(6755)", "Delete SingleVariableDeclaration(6756)", "Delete SimpleName: RexNode(6757)", "Delete SimpleType: RexNode(6758)", "Delete SimpleName: condition(6759)", "Delete SingleVariableDeclaration(6760)", "Delete SimpleName: MutableFilter(6761)", "Delete SimpleType: MutableFilter(6762)", "Delete SimpleName: input(6763)", "Delete SimpleName: condition(6764)", "Delete ClassInstanceCreation(6765)", "Delete ReturnStatement(6766)", "Delete Block(6767)", "Delete MethodDeclaration(6768)", "Delete SimpleName: Override(6769)", "Delete MarkerAnnotation(6770)", "Delete Modifier: public(6771)", "Delete PrimitiveType: boolean(6772)", "Delete SimpleName: equals(6773)", "Delete SimpleName: Object(6774)", "Delete SimpleType: Object(6775)", "Delete SimpleName: obj(6776)", "Delete SingleVariableDeclaration(6777)", "Delete SimpleName: obj(6778)", "Delete ThisExpression(6779)", "Delete InfixExpression: ==(6780)", "Delete SimpleName: obj(6781)", "Delete SimpleName: MutableFilter(6782)", "Delete SimpleType: MutableFilter(6783)", "Delete InstanceofExpression(6784)", "Delete SimpleName: condition(6785)", "Delete SimpleName: toString(6786)", "Delete MethodInvocation(6787)", "Delete SimpleName: equals(6788)", "Delete SimpleName: MutableFilter(6789)", "Delete SimpleType: MutableFilter(6790)", "Delete SimpleName: obj(6791)", "Delete CastExpression(6792)", "Delete ParenthesizedExpression(6793)", "Delete SimpleName: condition(6794)", "Delete FieldAccess(6795)", "Delete SimpleName: toString(6796)", "Delete MethodInvocation(6797)", "Delete MethodInvocation(6798)", "Delete SimpleName: input(6799)", "Delete SimpleName: equals(6800)", "Delete SimpleName: MutableFilter(6801)", "Delete SimpleType: MutableFilter(6802)", "Delete SimpleName: obj(6803)", "Delete CastExpression(6804)", "Delete ParenthesizedExpression(6805)", "Delete SimpleName: input(6806)", "Delete FieldAccess(6807)", "Delete MethodInvocation(6808)", "Delete InfixExpression: &&(6809)", "Delete InfixExpression: ||(6810)", "Delete ReturnStatement(6811)", "Delete Block(6812)", "Delete MethodDeclaration(6813)", "Delete SimpleName: Override(6814)", "Delete MarkerAnnotation(6815)", "Delete Modifier: public(6816)", "Delete PrimitiveType: int(6817)", "Delete SimpleName: hashCode(6818)", "Delete SimpleName: Objects(6819)", "Delete SimpleName: hash(6820)", "Delete SimpleName: input(6821)", "Delete SimpleName: condition(6822)", "Delete SimpleName: toString(6823)", "Delete MethodInvocation(6824)", "Delete MethodInvocation(6825)", "Delete ReturnStatement(6826)", "Delete Block(6827)", "Delete MethodDeclaration(6828)", "Delete SimpleName: Override(6829)", "Delete MarkerAnnotation(6830)", "Delete Modifier: public(6831)", "Delete SimpleName: StringBuilder(6832)", "Delete SimpleType: StringBuilder(6833)", "Delete SimpleName: digest(6834)", "Delete SimpleName: StringBuilder(6835)", "Delete SimpleType: StringBuilder(6836)", "Delete SimpleName: buf(6837)", "Delete SingleVariableDeclaration(6838)", "Delete SimpleName: buf(6839)", "Delete SimpleName: append(6840)", "Delete StringLiteral: \"Filter(condition: \"(6841)", "Delete MethodInvocation(6842)", "Delete SimpleName: append(6843)", "Delete SimpleName: condition(6844)", "Delete MethodInvocation(6845)", "Delete SimpleName: append(6846)", "Delete StringLiteral: \")\"(6847)", "Delete MethodInvocation(6848)", "Delete ReturnStatement(6849)", "Delete Block(6850)", "Delete MethodDeclaration(6851)", "Delete Modifier: public(6852)", "Delete SimpleName: RexNode(6853)", "Delete SimpleType: RexNode(6854)", "Delete SimpleName: getCondition(6855)", "Delete SimpleName: condition(6856)", "Delete ReturnStatement(6857)", "Delete Block(6858)", "Delete MethodDeclaration(6859)", "Delete TypeDeclaration: class(6860)", "Delete TextElement: Mutable equivalent of(6861)", "Delete QualifiedName: org.apache.calcite.rel.logical.LogicalAggregate(6862)", "Delete TagElement: @link(6863)", "Delete TextElement: . (6864)", "Delete TagElement(6865)", "Delete Javadoc(6866)", "Delete Modifier: protected(6867)", "Delete Modifier: static(6868)", "Delete SimpleName: MutableAggregate(6869)", "Delete SimpleName: MutableSingleRel(6870)", "Delete SimpleType: MutableSingleRel(6871)", "Delete Modifier: public(6872)", "Delete Modifier: final(6873)", "Delete PrimitiveType: boolean(6874)", "Delete SimpleName: indicator(6875)", "Delete VariableDeclarationFragment(6876)", "Delete FieldDeclaration(6877)", "Delete Modifier: private(6878)", "Delete Modifier: final(6879)", "Delete SimpleName: ImmutableBitSet(6880)", "Delete SimpleType: ImmutableBitSet(6881)", "Delete SimpleName: groupSet(6882)", "Delete VariableDeclarationFragment(6883)", "Delete FieldDeclaration(6884)", "Delete Modifier: private(6885)", "Delete Modifier: final(6886)", "Delete SimpleName: ImmutableList(6887)", "Delete SimpleType: ImmutableList(6888)", "Delete SimpleName: ImmutableBitSet(6889)", "Delete SimpleType: ImmutableBitSet(6890)", "Delete ParameterizedType: ImmutableList<ImmutableBitSet>(6891)", "Delete SimpleName: groupSets(6892)", "Delete VariableDeclarationFragment(6893)", "Delete FieldDeclaration(6894)", "Delete Modifier: private(6895)", "Delete Modifier: final(6896)", "Delete SimpleName: List(6897)", "Delete SimpleType: List(6898)", "Delete SimpleName: AggregateCall(6899)", "Delete SimpleType: AggregateCall(6900)", "Delete ParameterizedType: List<AggregateCall>(6901)", "Delete SimpleName: aggCalls(6902)", "Delete VariableDeclarationFragment(6903)", "Delete FieldDeclaration(6904)", "Delete Modifier: private(6905)", "Delete SimpleName: MutableAggregate(6906)", "Delete SimpleName: MutableRel(6907)", "Delete SimpleType: MutableRel(6908)", "Delete SimpleName: input(6909)", "Delete SingleVariableDeclaration(6910)", "Delete SimpleName: RelDataType(6911)", "Delete SimpleType: RelDataType(6912)", "Delete SimpleName: rowType(6913)", "Delete SingleVariableDeclaration(6914)", "Delete PrimitiveType: boolean(6915)", "Delete SimpleName: indicator(6916)", "Delete SingleVariableDeclaration(6917)", "Delete SimpleName: ImmutableBitSet(6918)", "Delete SimpleType: ImmutableBitSet(6919)", "Delete SimpleName: groupSet(6920)", "Delete SingleVariableDeclaration(6921)", "Delete SimpleName: List(6922)", "Delete SimpleType: List(6923)", "Delete SimpleName: ImmutableBitSet(6924)", "Delete SimpleType: ImmutableBitSet(6925)", "Delete ParameterizedType: List<ImmutableBitSet>(6926)", "Delete SimpleName: groupSets(6927)", "Delete SingleVariableDeclaration(6928)", "Delete SimpleName: List(6929)", "Delete SimpleType: List(6930)", "Delete SimpleName: AggregateCall(6931)", "Delete SimpleType: AggregateCall(6932)", "Delete ParameterizedType: List<AggregateCall>(6933)", "Delete SimpleName: aggCalls(6934)", "Delete SingleVariableDeclaration(6935)", "Delete QualifiedName: MutableRelType.AGGREGATE(6936)", "Delete SimpleName: rowType(6937)", "Delete SimpleName: input(6938)", "Delete SuperConstructorInvocation(6939)", "Delete ThisExpression(6940)", "Delete SimpleName: indicator(6941)", "Delete FieldAccess(6942)", "Delete SimpleName: indicator(6943)", "Delete Assignment: =(6944)", "Delete ExpressionStatement(6945)", "Delete ThisExpression(6946)", "Delete SimpleName: groupSet(6947)", "Delete FieldAccess(6948)", "Delete SimpleName: groupSet(6949)", "Delete Assignment: =(6950)", "Delete ExpressionStatement(6951)", "Delete ThisExpression(6952)", "Delete SimpleName: groupSets(6953)", "Delete FieldAccess(6954)", "Delete SimpleName: groupSets(6955)", "Delete NullLiteral(6956)", "Delete InfixExpression: ==(6957)", "Delete SimpleName: ImmutableList(6958)", "Delete SimpleName: of(6959)", "Delete SimpleName: groupSet(6960)", "Delete MethodInvocation(6961)", "Delete SimpleName: ImmutableList(6962)", "Delete SimpleName: copyOf(6963)", "Delete SimpleName: groupSets(6964)", "Delete MethodInvocation(6965)", "Delete ConditionalExpression(6966)", "Delete Assignment: =(6967)", "Delete ExpressionStatement(6968)", "Delete ThisExpression(6969)", "Delete SimpleName: aggCalls(6970)", "Delete FieldAccess(6971)", "Delete SimpleName: aggCalls(6972)", "Delete Assignment: =(6973)", "Delete ExpressionStatement(6974)", "Delete Block(6975)", "Delete MethodDeclaration(6976)", "Delete Modifier: static(6977)", "Delete SimpleName: MutableAggregate(6978)", "Delete SimpleType: MutableAggregate(6979)", "Delete SimpleName: of(6980)", "Delete SimpleName: MutableRel(6981)", "Delete SimpleType: MutableRel(6982)", "Delete SimpleName: input(6983)", "Delete SingleVariableDeclaration(6984)", "Delete PrimitiveType: boolean(6985)", "Delete SimpleName: indicator(6986)", "Delete SingleVariableDeclaration(6987)", "Delete SimpleName: ImmutableBitSet(6988)", "Delete SimpleType: ImmutableBitSet(6989)", "Delete SimpleName: groupSet(6990)", "Delete SingleVariableDeclaration(6991)", "Delete SimpleName: ImmutableList(6992)", "Delete SimpleType: ImmutableList(6993)", "Delete SimpleName: ImmutableBitSet(6994)", "Delete SimpleType: ImmutableBitSet(6995)", "Delete ParameterizedType: ImmutableList<ImmutableBitSet>(6996)", "Delete SimpleName: groupSets(6997)", "Delete SingleVariableDeclaration(6998)", "Delete SimpleName: List(6999)", "Delete SimpleType: List(7000)", "Delete SimpleName: AggregateCall(7001)", "Delete SimpleType: AggregateCall(7002)", "Delete ParameterizedType: List<AggregateCall>(7003)", "Delete SimpleName: aggCalls(7004)", "Delete SingleVariableDeclaration(7005)", "Delete SimpleName: RelDataType(7006)", "Delete SimpleType: RelDataType(7007)", "Delete SimpleName: rowType(7008)", "Delete SimpleName: Aggregate(7009)", "Delete SimpleName: deriveRowType(7010)", "Delete QualifiedName: input.cluster(7011)", "Delete SimpleName: getTypeFactory(7012)", "Delete MethodInvocation(7013)", "Delete SimpleName: input(7014)", "Delete SimpleName: getRowType(7015)", "Delete MethodInvocation(7016)", "Delete SimpleName: indicator(7017)", "Delete SimpleName: groupSet(7018)", "Delete SimpleName: groupSets(7019)", "Delete SimpleName: aggCalls(7020)", "Delete MethodInvocation(7021)", "Delete VariableDeclarationFragment(7022)", "Delete VariableDeclarationStatement(7023)", "Delete SimpleName: MutableAggregate(7024)", "Delete SimpleType: MutableAggregate(7025)", "Delete SimpleName: input(7026)", "Delete SimpleName: rowType(7027)", "Delete SimpleName: indicator(7028)", "Delete SimpleName: groupSet(7029)", "Delete SimpleName: groupSets(7030)", "Delete SimpleName: aggCalls(7031)", "Delete ClassInstanceCreation(7032)", "Delete ReturnStatement(7033)", "Delete Block(7034)", "Delete MethodDeclaration(7035)", "Delete SimpleName: Override(7036)", "Delete MarkerAnnotation(7037)", "Delete Modifier: public(7038)", "Delete PrimitiveType: boolean(7039)", "Delete SimpleName: equals(7040)", "Delete SimpleName: Object(7041)", "Delete SimpleType: Object(7042)", "Delete SimpleName: obj(7043)", "Delete SingleVariableDeclaration(7044)", "Delete SimpleName: obj(7045)", "Delete ThisExpression(7046)", "Delete InfixExpression: ==(7047)", "Delete SimpleName: obj(7048)", "Delete SimpleName: MutableAggregate(7049)", "Delete SimpleType: MutableAggregate(7050)", "Delete InstanceofExpression(7051)", "Delete SimpleName: groupSet(7052)", "Delete SimpleName: equals(7053)", "Delete SimpleName: MutableAggregate(7054)", "Delete SimpleType: MutableAggregate(7055)", "Delete SimpleName: obj(7056)", "Delete CastExpression(7057)", "Delete ParenthesizedExpression(7058)", "Delete SimpleName: groupSet(7059)", "Delete FieldAccess(7060)", "Delete MethodInvocation(7061)", "Delete SimpleName: aggCalls(7062)", "Delete SimpleName: equals(7063)", "Delete SimpleName: MutableAggregate(7064)", "Delete SimpleType: MutableAggregate(7065)", "Delete SimpleName: obj(7066)", "Delete CastExpression(7067)", "Delete ParenthesizedExpression(7068)", "Delete SimpleName: aggCalls(7069)", "Delete FieldAccess(7070)", "Delete MethodInvocation(7071)", "Delete SimpleName: input(7072)", "Delete SimpleName: equals(7073)", "Delete SimpleName: MutableAggregate(7074)", "Delete SimpleType: MutableAggregate(7075)", "Delete SimpleName: obj(7076)", "Delete CastExpression(7077)", "Delete ParenthesizedExpression(7078)", "Delete SimpleName: input(7079)", "Delete FieldAccess(7080)", "Delete MethodInvocation(7081)", "Delete InfixExpression: &&(7082)", "Delete InfixExpression: ||(7083)", "Delete ReturnStatement(7084)", "Delete Block(7085)", "Delete MethodDeclaration(7086)", "Delete SimpleName: Override(7087)", "Delete MarkerAnnotation(7088)", "Delete Modifier: public(7089)", "Delete PrimitiveType: int(7090)", "Delete SimpleName: hashCode(7091)", "Delete SimpleName: Objects(7092)", "Delete SimpleName: hash(7093)", "Delete SimpleName: input(7094)", "Delete SimpleName: groupSet(7095)", "Delete SimpleName: aggCalls(7096)", "Delete MethodInvocation(7097)", "Delete ReturnStatement(7098)", "Delete Block(7099)", "Delete MethodDeclaration(7100)", "Delete SimpleName: Override(7101)", "Delete MarkerAnnotation(7102)", "Delete Modifier: public(7103)", "Delete SimpleName: StringBuilder(7104)", "Delete SimpleType: StringBuilder(7105)", "Delete SimpleName: digest(7106)", "Delete SimpleName: StringBuilder(7107)", "Delete SimpleType: StringBuilder(7108)", "Delete SimpleName: buf(7109)", "Delete SingleVariableDeclaration(7110)", "Delete SimpleName: buf(7111)", "Delete SimpleName: append(7112)", "Delete StringLiteral: \"Aggregate(groupSet: \"(7113)", "Delete MethodInvocation(7114)", "Delete SimpleName: append(7115)", "Delete SimpleName: groupSet(7116)", "Delete MethodInvocation(7117)", "Delete SimpleName: append(7118)", "Delete StringLiteral: \", groupSets: \"(7119)", "Delete MethodInvocation(7120)", "Delete SimpleName: append(7121)", "Delete SimpleName: groupSets(7122)", "Delete MethodInvocation(7123)", "Delete SimpleName: append(7124)", "Delete StringLiteral: \", calls: \"(7125)", "Delete MethodInvocation(7126)", "Delete SimpleName: append(7127)", "Delete SimpleName: aggCalls(7128)", "Delete MethodInvocation(7129)", "Delete SimpleName: append(7130)", "Delete StringLiteral: \")\"(7131)", "Delete MethodInvocation(7132)", "Delete ReturnStatement(7133)", "Delete Block(7134)", "Delete MethodDeclaration(7135)", "Delete Modifier: public(7136)", "Delete SimpleName: ImmutableBitSet(7137)", "Delete SimpleType: ImmutableBitSet(7138)", "Delete SimpleName: getGroupSet(7139)", "Delete SimpleName: groupSet(7140)", "Delete ReturnStatement(7141)", "Delete Block(7142)", "Delete MethodDeclaration(7143)", "Delete Modifier: public(7144)", "Delete SimpleName: ImmutableList(7145)", "Delete SimpleType: ImmutableList(7146)", "Delete SimpleName: ImmutableBitSet(7147)", "Delete SimpleType: ImmutableBitSet(7148)", "Delete ParameterizedType: ImmutableList<ImmutableBitSet>(7149)", "Delete SimpleName: getGroupSets(7150)", "Delete SimpleName: groupSets(7151)", "Delete ReturnStatement(7152)", "Delete Block(7153)", "Delete MethodDeclaration(7154)", "Delete Modifier: public(7155)", "Delete SimpleName: List(7156)", "Delete SimpleType: List(7157)", "Delete SimpleName: AggregateCall(7158)", "Delete SimpleType: AggregateCall(7159)", "Delete ParameterizedType: List<AggregateCall>(7160)", "Delete SimpleName: getAggCallList(7161)", "Delete SimpleName: aggCalls(7162)", "Delete ReturnStatement(7163)", "Delete Block(7164)", "Delete MethodDeclaration(7165)", "Delete Modifier: public(7166)", "Delete QualifiedName: Aggregate.Group(7167)", "Delete SimpleType: Aggregate.Group(7168)", "Delete SimpleName: getGroupType(7169)", "Delete QualifiedName: Aggregate.Group(7170)", "Delete SimpleName: induce(7171)", "Delete SimpleName: groupSet(7172)", "Delete SimpleName: groupSets(7173)", "Delete MethodInvocation(7174)", "Delete ReturnStatement(7175)", "Delete Block(7176)", "Delete MethodDeclaration(7177)", "Delete TypeDeclaration: class(7178)", "Delete TextElement: Mutable equivalent of (7179)", "Delete QualifiedName: org.apache.calcite.rel.core.Sort(7180)", "Delete TagElement: @link(7181)", "Delete TextElement: . (7182)", "Delete TagElement(7183)", "Delete Javadoc(7184)", "Delete Modifier: protected(7185)", "Delete Modifier: static(7186)", "Delete SimpleName: MutableSort(7187)", "Delete SimpleName: MutableSingleRel(7188)", "Delete SimpleType: MutableSingleRel(7189)", "Delete Modifier: private(7190)", "Delete Modifier: final(7191)", "Delete SimpleName: RelCollation(7192)", "Delete SimpleType: RelCollation(7193)", "Delete SimpleName: collation(7194)", "Delete VariableDeclarationFragment(7195)", "Delete FieldDeclaration(7196)", "Delete Modifier: private(7197)", "Delete Modifier: final(7198)", "Delete SimpleName: RexNode(7199)", "Delete SimpleType: RexNode(7200)", "Delete SimpleName: offset(7201)", "Delete VariableDeclarationFragment(7202)", "Delete FieldDeclaration(7203)", "Delete Modifier: private(7204)", "Delete Modifier: final(7205)", "Delete SimpleName: RexNode(7206)", "Delete SimpleType: RexNode(7207)", "Delete SimpleName: fetch(7208)", "Delete VariableDeclarationFragment(7209)", "Delete FieldDeclaration(7210)", "Delete Modifier: private(7211)", "Delete SimpleName: MutableSort(7212)", "Delete SimpleName: MutableRel(7213)", "Delete SimpleType: MutableRel(7214)", "Delete SimpleName: input(7215)", "Delete SingleVariableDeclaration(7216)", "Delete SimpleName: RelCollation(7217)", "Delete SimpleType: RelCollation(7218)", "Delete SimpleName: collation(7219)", "Delete SingleVariableDeclaration(7220)", "Delete SimpleName: RexNode(7221)", "Delete SimpleType: RexNode(7222)", "Delete SimpleName: offset(7223)", "Delete SingleVariableDeclaration(7224)", "Delete SimpleName: RexNode(7225)", "Delete SimpleType: RexNode(7226)", "Delete SimpleName: fetch(7227)", "Delete SingleVariableDeclaration(7228)", "Delete QualifiedName: MutableRelType.SORT(7229)", "Delete QualifiedName: input.rowType(7230)", "Delete SimpleName: input(7231)", "Delete SuperConstructorInvocation(7232)", "Delete ThisExpression(7233)", "Delete SimpleName: collation(7234)", "Delete FieldAccess(7235)", "Delete SimpleName: collation(7236)", "Delete Assignment: =(7237)", "Delete ExpressionStatement(7238)", "Delete ThisExpression(7239)", "Delete SimpleName: offset(7240)", "Delete FieldAccess(7241)", "Delete SimpleName: offset(7242)", "Delete Assignment: =(7243)", "Delete ExpressionStatement(7244)", "Delete ThisExpression(7245)", "Delete SimpleName: fetch(7246)", "Delete FieldAccess(7247)", "Delete SimpleName: fetch(7248)", "Delete Assignment: =(7249)", "Delete ExpressionStatement(7250)", "Delete Block(7251)", "Delete MethodDeclaration(7252)", "Delete Modifier: static(7253)", "Delete SimpleName: MutableSort(7254)", "Delete SimpleType: MutableSort(7255)", "Delete SimpleName: of(7256)", "Delete SimpleName: MutableRel(7257)", "Delete SimpleType: MutableRel(7258)", "Delete SimpleName: input(7259)", "Delete SingleVariableDeclaration(7260)", "Delete SimpleName: RelCollation(7261)", "Delete SimpleType: RelCollation(7262)", "Delete SimpleName: collation(7263)", "Delete SingleVariableDeclaration(7264)", "Delete SimpleName: RexNode(7265)", "Delete SimpleType: RexNode(7266)", "Delete SimpleName: offset(7267)", "Delete SingleVariableDeclaration(7268)", "Delete SimpleName: RexNode(7269)", "Delete SimpleType: RexNode(7270)", "Delete SimpleName: fetch(7271)", "Delete SingleVariableDeclaration(7272)", "Delete SimpleName: MutableSort(7273)", "Delete SimpleType: MutableSort(7274)", "Delete SimpleName: input(7275)", "Delete SimpleName: collation(7276)", "Delete SimpleName: offset(7277)", "Delete SimpleName: fetch(7278)", "Delete ClassInstanceCreation(7279)", "Delete ReturnStatement(7280)", "Delete Block(7281)", "Delete MethodDeclaration(7282)", "Delete SimpleName: Override(7283)", "Delete MarkerAnnotation(7284)", "Delete Modifier: public(7285)", "Delete PrimitiveType: boolean(7286)", "Delete SimpleName: equals(7287)", "Delete SimpleName: Object(7288)", "Delete SimpleType: Object(7289)", "Delete SimpleName: obj(7290)", "Delete SingleVariableDeclaration(7291)", "Delete SimpleName: obj(7292)", "Delete ThisExpression(7293)", "Delete InfixExpression: ==(7294)", "Delete SimpleName: obj(7295)", "Delete SimpleName: MutableSort(7296)", "Delete SimpleType: MutableSort(7297)", "Delete InstanceofExpression(7298)", "Delete SimpleName: collation(7299)", "Delete SimpleName: equals(7300)", "Delete SimpleName: MutableSort(7301)", "Delete SimpleType: MutableSort(7302)", "Delete SimpleName: obj(7303)", "Delete CastExpression(7304)", "Delete ParenthesizedExpression(7305)", "Delete SimpleName: collation(7306)", "Delete FieldAccess(7307)", "Delete MethodInvocation(7308)", "Delete SimpleName: Objects(7309)", "Delete SimpleName: equals(7310)", "Delete SimpleName: offset(7311)", "Delete SimpleName: MutableSort(7312)", "Delete SimpleType: MutableSort(7313)", "Delete SimpleName: obj(7314)", "Delete CastExpression(7315)", "Delete ParenthesizedExpression(7316)", "Delete SimpleName: offset(7317)", "Delete FieldAccess(7318)", "Delete MethodInvocation(7319)", "Delete SimpleName: Objects(7320)", "Delete SimpleName: equals(7321)", "Delete SimpleName: fetch(7322)", "Delete SimpleName: MutableSort(7323)", "Delete SimpleType: MutableSort(7324)", "Delete SimpleName: obj(7325)", "Delete CastExpression(7326)", "Delete ParenthesizedExpression(7327)", "Delete SimpleName: fetch(7328)", "Delete FieldAccess(7329)", "Delete MethodInvocation(7330)", "Delete SimpleName: input(7331)", "Delete SimpleName: equals(7332)", "Delete SimpleName: MutableSort(7333)", "Delete SimpleType: MutableSort(7334)", "Delete SimpleName: obj(7335)", "Delete CastExpression(7336)", "Delete ParenthesizedExpression(7337)", "Delete SimpleName: input(7338)", "Delete FieldAccess(7339)", "Delete MethodInvocation(7340)", "Delete InfixExpression: &&(7341)", "Delete InfixExpression: ||(7342)", "Delete ReturnStatement(7343)", "Delete Block(7344)", "Delete MethodDeclaration(7345)", "Delete SimpleName: Override(7346)", "Delete MarkerAnnotation(7347)", "Delete Modifier: public(7348)", "Delete PrimitiveType: int(7349)", "Delete SimpleName: hashCode(7350)", "Delete SimpleName: Objects(7351)", "Delete SimpleName: hash(7352)", "Delete SimpleName: input(7353)", "Delete SimpleName: collation(7354)", "Delete SimpleName: offset(7355)", "Delete SimpleName: fetch(7356)", "Delete MethodInvocation(7357)", "Delete ReturnStatement(7358)", "Delete Block(7359)", "Delete MethodDeclaration(7360)", "Delete SimpleName: Override(7361)", "Delete MarkerAnnotation(7362)", "Delete Modifier: public(7363)", "Delete SimpleName: StringBuilder(7364)", "Delete SimpleType: StringBuilder(7365)", "Delete SimpleName: digest(7366)", "Delete SimpleName: StringBuilder(7367)", "Delete SimpleType: StringBuilder(7368)", "Delete SimpleName: buf(7369)", "Delete SingleVariableDeclaration(7370)", "Delete SimpleName: buf(7371)", "Delete SimpleName: append(7372)", "Delete StringLiteral: \"Sort(collation: \"(7373)", "Delete MethodInvocation(7374)", "Delete SimpleName: append(7375)", "Delete SimpleName: collation(7376)", "Delete MethodInvocation(7377)", "Delete ExpressionStatement(7378)", "Delete SimpleName: offset(7379)", "Delete NullLiteral(7380)", "Delete InfixExpression: !=(7381)", "Delete SimpleName: buf(7382)", "Delete SimpleName: append(7383)", "Delete StringLiteral: \", offset: \"(7384)", "Delete MethodInvocation(7385)", "Delete SimpleName: append(7386)", "Delete SimpleName: offset(7387)", "Delete MethodInvocation(7388)", "Delete ExpressionStatement(7389)", "Delete Block(7390)", "Delete IfStatement(7391)", "Delete SimpleName: fetch(7392)", "Delete NullLiteral(7393)", "Delete InfixExpression: !=(7394)", "Delete SimpleName: buf(7395)", "Delete SimpleName: append(7396)", "Delete StringLiteral: \", fetch: \"(7397)", "Delete MethodInvocation(7398)", "Delete SimpleName: append(7399)", "Delete SimpleName: fetch(7400)", "Delete MethodInvocation(7401)", "Delete ExpressionStatement(7402)", "Delete Block(7403)", "Delete IfStatement(7404)", "Delete SimpleName: buf(7405)", "Delete SimpleName: append(7406)", "Delete StringLiteral: \")\"(7407)", "Delete MethodInvocation(7408)", "Delete ReturnStatement(7409)", "Delete Block(7410)", "Delete MethodDeclaration(7411)", "Delete TypeDeclaration: class(7412)", "Delete TextElement: Base class for set-operations. (7413)", "Delete TagElement(7414)", "Delete Javadoc(7415)", "Delete Modifier: protected(7416)", "Delete Modifier: abstract(7417)", "Delete Modifier: static(7418)", "Delete SimpleName: MutableSetOp(7419)", "Delete SimpleName: MutableRel(7420)", "Delete SimpleType: MutableRel(7421)", "Delete Modifier: protected(7422)", "Delete Modifier: final(7423)", "Delete SimpleName: List(7424)", "Delete SimpleType: List(7425)", "Delete SimpleName: MutableRel(7426)", "Delete SimpleType: MutableRel(7427)", "Delete ParameterizedType: List<MutableRel>(7428)", "Delete SimpleName: inputs(7429)", "Delete VariableDeclarationFragment(7430)", "Delete FieldDeclaration(7431)", "Delete Modifier: private(7432)", "Delete SimpleName: MutableSetOp(7433)", "Delete SimpleName: RelOptCluster(7434)", "Delete SimpleType: RelOptCluster(7435)", "Delete SimpleName: cluster(7436)", "Delete SingleVariableDeclaration(7437)", "Delete SimpleName: RelDataType(7438)", "Delete SimpleType: RelDataType(7439)", "Delete SimpleName: rowType(7440)", "Delete SingleVariableDeclaration(7441)", "Delete SimpleName: MutableRelType(7442)", "Delete SimpleType: MutableRelType(7443)", "Delete SimpleName: type(7444)", "Delete SingleVariableDeclaration(7445)", "Delete SimpleName: List(7446)", "Delete SimpleType: List(7447)", "Delete SimpleName: MutableRel(7448)", "Delete SimpleType: MutableRel(7449)", "Delete ParameterizedType: List<MutableRel>(7450)", "Delete SimpleName: inputs(7451)", "Delete SingleVariableDeclaration(7452)", "Delete SimpleName: cluster(7453)", "Delete SimpleName: rowType(7454)", "Delete SimpleName: type(7455)", "Delete SuperConstructorInvocation(7456)", "Delete ThisExpression(7457)", "Delete SimpleName: inputs(7458)", "Delete FieldAccess(7459)", "Delete SimpleName: inputs(7460)", "Delete Assignment: =(7461)", "Delete ExpressionStatement(7462)", "Delete Block(7463)", "Delete MethodDeclaration(7464)", "Delete SimpleName: Override(7465)", "Delete MarkerAnnotation(7466)", "Delete Modifier: public(7467)", "Delete PrimitiveType: void(7468)", "Delete SimpleName: setInput(7469)", "Delete PrimitiveType: int(7470)", "Delete SimpleName: ordinalInParent(7471)", "Delete SingleVariableDeclaration(7472)", "Delete SimpleName: MutableRel(7473)", "Delete SimpleType: MutableRel(7474)", "Delete SimpleName: input(7475)", "Delete SingleVariableDeclaration(7476)", "Delete SimpleName: inputs(7477)", "Delete SimpleName: set(7478)", "Delete SimpleName: ordinalInParent(7479)", "Delete SimpleName: input(7480)", "Delete MethodInvocation(7481)", "Delete ExpressionStatement(7482)", "Delete SimpleName: input(7483)", "Delete NullLiteral(7484)", "Delete InfixExpression: !=(7485)", "Delete QualifiedName: input.parent(7486)", "Delete ThisExpression(7487)", "Delete Assignment: =(7488)", "Delete ExpressionStatement(7489)", "Delete QualifiedName: input.ordinalInParent(7490)", "Delete SimpleName: ordinalInParent(7491)", "Delete Assignment: =(7492)", "Delete ExpressionStatement(7493)", "Delete Block(7494)", "Delete IfStatement(7495)", "Delete Block(7496)", "Delete MethodDeclaration(7497)", "Delete SimpleName: Override(7498)", "Delete MarkerAnnotation(7499)", "Delete Modifier: public(7500)", "Delete SimpleName: List(7501)", "Delete SimpleType: List(7502)", "Delete SimpleName: MutableRel(7503)", "Delete SimpleType: MutableRel(7504)", "Delete ParameterizedType: List<MutableRel>(7505)", "Delete SimpleName: getInputs(7506)", "Delete SimpleName: inputs(7507)", "Delete ReturnStatement(7508)", "Delete Block(7509)", "Delete MethodDeclaration(7510)", "Delete SimpleName: Override(7511)", "Delete MarkerAnnotation(7512)", "Delete Modifier: public(7513)", "Delete PrimitiveType: void(7514)", "Delete SimpleName: childrenAccept(7515)", "Delete SimpleName: MutableRelVisitor(7516)", "Delete SimpleType: MutableRelVisitor(7517)", "Delete SimpleName: visitor(7518)", "Delete SingleVariableDeclaration(7519)", "Delete SimpleName: MutableRel(7520)", "Delete SimpleType: MutableRel(7521)", "Delete SimpleName: input(7522)", "Delete SingleVariableDeclaration(7523)", "Delete SimpleName: inputs(7524)", "Delete SimpleName: visitor(7525)", "Delete SimpleName: visit(7526)", "Delete SimpleName: input(7527)", "Delete MethodInvocation(7528)", "Delete ExpressionStatement(7529)", "Delete Block(7530)", "Delete EnhancedForStatement(7531)", "Delete Block(7532)", "Delete MethodDeclaration(7533)", "Delete TypeDeclaration: class(7534)", "Delete TextElement: Mutable equivalent of(7535)", "Delete QualifiedName: org.apache.calcite.rel.logical.LogicalUnion(7536)", "Delete TagElement: @link(7537)", "Delete TextElement: . (7538)", "Delete TagElement(7539)", "Delete Javadoc(7540)", "Delete Modifier: protected(7541)", "Delete Modifier: static(7542)", "Delete SimpleName: MutableUnion(7543)", "Delete SimpleName: MutableSetOp(7544)", "Delete SimpleType: MutableSetOp(7545)", "Delete Modifier: public(7546)", "Delete PrimitiveType: boolean(7547)", "Delete SimpleName: all(7548)", "Delete VariableDeclarationFragment(7549)", "Delete FieldDeclaration(7550)", "Delete Modifier: private(7551)", "Delete SimpleName: MutableUnion(7552)", "Delete SimpleName: RelOptCluster(7553)", "Delete SimpleType: RelOptCluster(7554)", "Delete SimpleName: cluster(7555)", "Delete SingleVariableDeclaration(7556)", "Delete SimpleName: RelDataType(7557)", "Delete SimpleType: RelDataType(7558)", "Delete SimpleName: rowType(7559)", "Delete SingleVariableDeclaration(7560)", "Delete SimpleName: List(7561)", "Delete SimpleType: List(7562)", "Delete SimpleName: MutableRel(7563)", "Delete SimpleType: MutableRel(7564)", "Delete ParameterizedType: List<MutableRel>(7565)", "Delete SimpleName: inputs(7566)", "Delete SingleVariableDeclaration(7567)", "Delete PrimitiveType: boolean(7568)", "Delete SimpleName: all(7569)", "Delete SingleVariableDeclaration(7570)", "Delete SimpleName: cluster(7571)", "Delete SimpleName: rowType(7572)", "Delete QualifiedName: MutableRelType.UNION(7573)", "Delete SimpleName: inputs(7574)", "Delete SuperConstructorInvocation(7575)", "Delete ThisExpression(7576)", "Delete SimpleName: all(7577)", "Delete FieldAccess(7578)", "Delete SimpleName: all(7579)", "Delete Assignment: =(7580)", "Delete ExpressionStatement(7581)", "Delete Block(7582)", "Delete MethodDeclaration(7583)", "Delete Modifier: static(7584)", "Delete SimpleName: MutableUnion(7585)", "Delete SimpleType: MutableUnion(7586)", "Delete SimpleName: of(7587)", "Delete SimpleName: List(7588)", "Delete SimpleType: List(7589)", "Delete SimpleName: MutableRel(7590)", "Delete SimpleType: MutableRel(7591)", "Delete ParameterizedType: List<MutableRel>(7592)", "Delete SimpleName: inputs(7593)", "Delete SingleVariableDeclaration(7594)", "Delete PrimitiveType: boolean(7595)", "Delete SimpleName: all(7596)", "Delete SingleVariableDeclaration(7597)", "Delete SimpleName: inputs(7598)", "Delete SimpleName: size(7599)", "Delete MethodInvocation(7600)", "Delete NumberLiteral: 2(7601)", "Delete InfixExpression: >=(7602)", "Delete AssertStatement(7603)", "Delete Modifier: final(7604)", "Delete SimpleName: MutableRel(7605)", "Delete SimpleType: MutableRel(7606)", "Delete SimpleName: input0(7607)", "Delete SimpleName: inputs(7608)", "Delete SimpleName: get(7609)", "Delete NumberLiteral: 0(7610)", "Delete MethodInvocation(7611)", "Delete VariableDeclarationFragment(7612)", "Delete VariableDeclarationStatement(7613)", "Delete SimpleName: MutableUnion(7614)", "Delete SimpleType: MutableUnion(7615)", "Delete QualifiedName: input0.cluster(7616)", "Delete QualifiedName: input0.rowType(7617)", "Delete SimpleName: inputs(7618)", "Delete SimpleName: all(7619)", "Delete ClassInstanceCreation(7620)", "Delete ReturnStatement(7621)", "Delete Block(7622)", "Delete MethodDeclaration(7623)", "Delete SimpleName: Override(7624)", "Delete MarkerAnnotation(7625)", "Delete Modifier: public(7626)", "Delete PrimitiveType: boolean(7627)", "Delete SimpleName: equals(7628)", "Delete SimpleName: Object(7629)", "Delete SimpleType: Object(7630)", "Delete SimpleName: obj(7631)", "Delete SingleVariableDeclaration(7632)", "Delete SimpleName: obj(7633)", "Delete ThisExpression(7634)", "Delete InfixExpression: ==(7635)", "Delete SimpleName: obj(7636)", "Delete SimpleName: MutableUnion(7637)", "Delete SimpleType: MutableUnion(7638)", "Delete InstanceofExpression(7639)", "Delete SimpleName: inputs(7640)", "Delete SimpleName: equals(7641)", "Delete SimpleName: MutableUnion(7642)", "Delete SimpleType: MutableUnion(7643)", "Delete SimpleName: obj(7644)", "Delete CastExpression(7645)", "Delete ParenthesizedExpression(7646)", "Delete SimpleName: getInputs(7647)", "Delete MethodInvocation(7648)", "Delete MethodInvocation(7649)", "Delete InfixExpression: &&(7650)", "Delete InfixExpression: ||(7651)", "Delete ReturnStatement(7652)", "Delete Block(7653)", "Delete MethodDeclaration(7654)", "Delete SimpleName: Override(7655)", "Delete MarkerAnnotation(7656)", "Delete Modifier: public(7657)", "Delete PrimitiveType: int(7658)", "Delete SimpleName: hashCode(7659)", "Delete SimpleName: Objects(7660)", "Delete SimpleName: hash(7661)", "Delete SimpleName: type(7662)", "Delete SimpleName: inputs(7663)", "Delete MethodInvocation(7664)", "Delete ReturnStatement(7665)", "Delete Block(7666)", "Delete MethodDeclaration(7667)", "Delete SimpleName: Override(7668)", "Delete MarkerAnnotation(7669)", "Delete Modifier: public(7670)", "Delete SimpleName: StringBuilder(7671)", "Delete SimpleType: StringBuilder(7672)", "Delete SimpleName: digest(7673)", "Delete SimpleName: StringBuilder(7674)", "Delete SimpleType: StringBuilder(7675)", "Delete SimpleName: buf(7676)", "Delete SingleVariableDeclaration(7677)", "Delete SimpleName: buf(7678)", "Delete SimpleName: append(7679)", "Delete StringLiteral: \"Union\"(7680)", "Delete MethodInvocation(7681)", "Delete ReturnStatement(7682)", "Delete Block(7683)", "Delete MethodDeclaration(7684)", "Delete TypeDeclaration: class(7685)", "Delete TextElement: Base Class for relations with two inputs (7686)", "Delete TagElement(7687)", "Delete Javadoc(7688)", "Delete Modifier: private(7689)", "Delete Modifier: abstract(7690)", "Delete Modifier: static(7691)", "Delete SimpleName: MutableBiRel(7692)", "Delete SimpleName: MutableRel(7693)", "Delete SimpleType: MutableRel(7694)", "Delete Modifier: protected(7695)", "Delete SimpleName: MutableRel(7696)", "Delete SimpleType: MutableRel(7697)", "Delete SimpleName: left(7698)", "Delete VariableDeclarationFragment(7699)", "Delete FieldDeclaration(7700)", "Delete Modifier: protected(7701)", "Delete SimpleName: MutableRel(7702)", "Delete SimpleType: MutableRel(7703)", "Delete SimpleName: right(7704)", "Delete VariableDeclarationFragment(7705)", "Delete FieldDeclaration(7706)", "Delete SimpleName: MutableBiRel(7707)", "Delete SimpleName: MutableRelType(7708)", "Delete SimpleType: MutableRelType(7709)", "Delete SimpleName: type(7710)", "Delete SingleVariableDeclaration(7711)", "Delete SimpleName: RelOptCluster(7712)", "Delete SimpleType: RelOptCluster(7713)", "Delete SimpleName: cluster(7714)", "Delete SingleVariableDeclaration(7715)", "Delete SimpleName: RelDataType(7716)", "Delete SimpleType: RelDataType(7717)", "Delete SimpleName: rowType(7718)", "Delete SingleVariableDeclaration(7719)", "Delete SimpleName: MutableRel(7720)", "Delete SimpleType: MutableRel(7721)", "Delete SimpleName: left(7722)", "Delete SingleVariableDeclaration(7723)", "Delete SimpleName: MutableRel(7724)", "Delete SimpleType: MutableRel(7725)", "Delete SimpleName: right(7726)", "Delete SingleVariableDeclaration(7727)", "Delete SimpleName: cluster(7728)", "Delete SimpleName: rowType(7729)", "Delete SimpleName: type(7730)", "Delete SuperConstructorInvocation(7731)", "Delete ThisExpression(7732)", "Delete SimpleName: left(7733)", "Delete FieldAccess(7734)", "Delete SimpleName: left(7735)", "Delete Assignment: =(7736)", "Delete ExpressionStatement(7737)", "Delete QualifiedName: left.parent(7738)", "Delete ThisExpression(7739)", "Delete Assignment: =(7740)", "Delete ExpressionStatement(7741)", "Delete QualifiedName: left.ordinalInParent(7742)", "Delete NumberLiteral: 0(7743)", "Delete Assignment: =(7744)", "Delete ExpressionStatement(7745)", "Delete ThisExpression(7746)", "Delete SimpleName: right(7747)", "Delete FieldAccess(7748)", "Delete SimpleName: right(7749)", "Delete Assignment: =(7750)", "Delete ExpressionStatement(7751)", "Delete QualifiedName: right.parent(7752)", "Delete ThisExpression(7753)", "Delete Assignment: =(7754)", "Delete ExpressionStatement(7755)", "Delete QualifiedName: right.ordinalInParent(7756)", "Delete NumberLiteral: 1(7757)", "Delete Assignment: =(7758)", "Delete ExpressionStatement(7759)", "Delete Block(7760)", "Delete MethodDeclaration(7761)", "Delete Modifier: public(7762)", "Delete PrimitiveType: void(7763)", "Delete SimpleName: setInput(7764)", "Delete PrimitiveType: int(7765)", "Delete SimpleName: ordinalInParent(7766)", "Delete SingleVariableDeclaration(7767)", "Delete SimpleName: MutableRel(7768)", "Delete SimpleType: MutableRel(7769)", "Delete SimpleName: input(7770)", "Delete SingleVariableDeclaration(7771)", "Delete SimpleName: ordinalInParent(7772)", "Delete NumberLiteral: 1(7773)", "Delete InfixExpression: >(7774)", "Delete SimpleName: IllegalArgumentException(7775)", "Delete SimpleType: IllegalArgumentException(7776)", "Delete ClassInstanceCreation(7777)", "Delete ThrowStatement(7778)", "Delete Block(7779)", "Delete IfStatement(7780)", "Delete SimpleName: ordinalInParent(7781)", "Delete NumberLiteral: 0(7782)", "Delete InfixExpression: ==(7783)", "Delete ThisExpression(7784)", "Delete SimpleName: left(7785)", "Delete FieldAccess(7786)", "Delete SimpleName: input(7787)", "Delete Assignment: =(7788)", "Delete ExpressionStatement(7789)", "Delete Block(7790)", "Delete ThisExpression(7791)", "Delete SimpleName: right(7792)", "Delete FieldAccess(7793)", "Delete SimpleName: input(7794)", "Delete Assignment: =(7795)", "Delete ExpressionStatement(7796)", "Delete Block(7797)", "Delete IfStatement(7798)", "Delete SimpleName: input(7799)", "Delete NullLiteral(7800)", "Delete InfixExpression: !=(7801)", "Delete QualifiedName: input.parent(7802)", "Delete ThisExpression(7803)", "Delete Assignment: =(7804)", "Delete ExpressionStatement(7805)", "Delete QualifiedName: input.ordinalInParent(7806)", "Delete SimpleName: ordinalInParent(7807)", "Delete Assignment: =(7808)", "Delete ExpressionStatement(7809)", "Delete Block(7810)", "Delete IfStatement(7811)", "Delete Block(7812)", "Delete MethodDeclaration(7813)", "Delete Modifier: public(7814)", "Delete SimpleName: List(7815)", "Delete SimpleType: List(7816)", "Delete SimpleName: MutableRel(7817)", "Delete SimpleType: MutableRel(7818)", "Delete ParameterizedType: List<MutableRel>(7819)", "Delete SimpleName: getInputs(7820)", "Delete SimpleName: ImmutableList(7821)", "Delete SimpleName: of(7822)", "Delete SimpleName: left(7823)", "Delete SimpleName: right(7824)", "Delete MethodInvocation(7825)", "Delete ReturnStatement(7826)", "Delete Block(7827)", "Delete MethodDeclaration(7828)", "Delete Modifier: public(7829)", "Delete SimpleName: MutableRel(7830)", "Delete SimpleType: MutableRel(7831)", "Delete SimpleName: getLeft(7832)", "Delete SimpleName: left(7833)", "Delete ReturnStatement(7834)", "Delete Block(7835)", "Delete MethodDeclaration(7836)", "Delete Modifier: public(7837)", "Delete SimpleName: MutableRel(7838)", "Delete SimpleType: MutableRel(7839)", "Delete SimpleName: getRight(7840)", "Delete SimpleName: right(7841)", "Delete ReturnStatement(7842)", "Delete Block(7843)", "Delete MethodDeclaration(7844)", "Delete Modifier: public(7845)", "Delete PrimitiveType: void(7846)", "Delete SimpleName: childrenAccept(7847)", "Delete SimpleName: MutableRelVisitor(7848)", "Delete SimpleType: MutableRelVisitor(7849)", "Delete SimpleName: visitor(7850)", "Delete SingleVariableDeclaration(7851)", "Delete SimpleName: visitor(7852)", "Delete SimpleName: visit(7853)", "Delete SimpleName: left(7854)", "Delete MethodInvocation(7855)", "Delete ExpressionStatement(7856)", "Delete SimpleName: visitor(7857)", "Delete SimpleName: visit(7858)", "Delete SimpleName: right(7859)", "Delete MethodInvocation(7860)", "Delete ExpressionStatement(7861)", "Delete Block(7862)", "Delete MethodDeclaration(7863)", "Delete TypeDeclaration: class(7864)", "Delete TextElement: Mutable equivalent of(7865)", "Delete QualifiedName: org.apache.calcite.rel.logical.LogicalJoin(7866)", "Delete TagElement: @link(7867)", "Delete TextElement: . (7868)", "Delete TagElement(7869)", "Delete Javadoc(7870)", "Delete Modifier: private(7871)", "Delete Modifier: static(7872)", "Delete SimpleName: MutableJoin(7873)", "Delete SimpleName: MutableBiRel(7874)", "Delete SimpleType: MutableBiRel(7875)", "Delete Modifier: protected(7876)", "Delete Modifier: final(7877)", "Delete SimpleName: RexNode(7878)", "Delete SimpleType: RexNode(7879)", "Delete SimpleName: condition(7880)", "Delete VariableDeclarationFragment(7881)", "Delete FieldDeclaration(7882)", "Delete Modifier: protected(7883)", "Delete Modifier: final(7884)", "Delete SimpleName: ImmutableSet(7885)", "Delete SimpleType: ImmutableSet(7886)", "Delete SimpleName: CorrelationId(7887)", "Delete SimpleType: CorrelationId(7888)", "Delete ParameterizedType: ImmutableSet<CorrelationId>(7889)", "Delete SimpleName: variablesSet(7890)", "Delete VariableDeclarationFragment(7891)", "Delete FieldDeclaration(7892)", "Delete TextElement: Values must be of enumeration (7893)", "Delete SimpleName: JoinRelType(7894)", "Delete TagElement: @link(7895)", "Delete TextElement: , except that(7896)", "Delete SimpleName: JoinRelType(7897)", "Delete SimpleName: RIGHT(7898)", "Delete MemberRef(7899)", "Delete TagElement: @link(7900)", "Delete TextElement:  is disallowed.(7901)", "Delete TagElement(7902)", "Delete Javadoc(7903)", "Delete Modifier: protected(7904)", "Delete SimpleName: JoinRelType(7905)", "Delete SimpleType: JoinRelType(7906)", "Delete SimpleName: joinType(7907)", "Delete VariableDeclarationFragment(7908)", "Delete FieldDeclaration(7909)", "Delete Modifier: private(7910)", "Delete SimpleName: MutableJoin(7911)", "Delete SimpleName: RelDataType(7912)", "Delete SimpleType: RelDataType(7913)", "Delete SimpleName: rowType(7914)", "Delete SingleVariableDeclaration(7915)", "Delete SimpleName: MutableRel(7916)", "Delete SimpleType: MutableRel(7917)", "Delete SimpleName: left(7918)", "Delete SingleVariableDeclaration(7919)", "Delete SimpleName: MutableRel(7920)", "Delete SimpleType: MutableRel(7921)", "Delete SimpleName: right(7922)", "Delete SingleVariableDeclaration(7923)", "Delete SimpleName: RexNode(7924)", "Delete SimpleType: RexNode(7925)", "Delete SimpleName: condition(7926)", "Delete SingleVariableDeclaration(7927)", "Delete SimpleName: JoinRelType(7928)", "Delete SimpleType: JoinRelType(7929)", "Delete SimpleName: joinType(7930)", "Delete SingleVariableDeclaration(7931)", "Delete SimpleName: Set(7932)", "Delete SimpleType: Set(7933)", "Delete SimpleName: CorrelationId(7934)", "Delete SimpleType: CorrelationId(7935)", "Delete ParameterizedType: Set<CorrelationId>(7936)", "Delete SimpleName: variablesSet(7937)", "Delete SingleVariableDeclaration(7938)", "Delete QualifiedName: MutableRelType.JOIN(7939)", "Delete QualifiedName: left.cluster(7940)", "Delete SimpleName: rowType(7941)", "Delete SimpleName: left(7942)", "Delete SimpleName: right(7943)", "Delete SuperConstructorInvocation(7944)", "Delete ThisExpression(7945)", "Delete SimpleName: condition(7946)", "Delete FieldAccess(7947)", "Delete SimpleName: Preconditions(7948)", "Delete SimpleName: checkNotNull(7949)", "Delete SimpleName: condition(7950)", "Delete MethodInvocation(7951)", "Delete Assignment: =(7952)", "Delete ExpressionStatement(7953)", "Delete ThisExpression(7954)", "Delete SimpleName: variablesSet(7955)", "Delete FieldAccess(7956)", "Delete SimpleName: ImmutableSet(7957)", "Delete SimpleName: copyOf(7958)", "Delete SimpleName: variablesSet(7959)", "Delete MethodInvocation(7960)", "Delete Assignment: =(7961)", "Delete ExpressionStatement(7962)", "Delete ThisExpression(7963)", "Delete SimpleName: joinType(7964)", "Delete FieldAccess(7965)", "Delete SimpleName: Preconditions(7966)", "Delete SimpleName: checkNotNull(7967)", "Delete SimpleName: joinType(7968)", "Delete MethodInvocation(7969)", "Delete Assignment: =(7970)", "Delete ExpressionStatement(7971)", "Delete Block(7972)", "Delete MethodDeclaration(7973)", "Delete Modifier: public(7974)", "Delete SimpleName: RexNode(7975)", "Delete SimpleType: RexNode(7976)", "Delete SimpleName: getCondition(7977)", "Delete SimpleName: condition(7978)", "Delete ReturnStatement(7979)", "Delete Block(7980)", "Delete MethodDeclaration(7981)", "Delete Modifier: public(7982)", "Delete SimpleName: JoinRelType(7983)", "Delete SimpleType: JoinRelType(7984)", "Delete SimpleName: getJoinType(7985)", "Delete SimpleName: joinType(7986)", "Delete ReturnStatement(7987)", "Delete Block(7988)", "Delete MethodDeclaration(7989)", "Delete Modifier: public(7990)", "Delete SimpleName: ImmutableSet(7991)", "Delete SimpleType: ImmutableSet(7992)", "Delete SimpleName: CorrelationId(7993)", "Delete SimpleType: CorrelationId(7994)", "Delete ParameterizedType: ImmutableSet<CorrelationId>(7995)", "Delete SimpleName: getVariablesSet(7996)", "Delete SimpleName: variablesSet(7997)", "Delete ReturnStatement(7998)", "Delete Block(7999)", "Delete MethodDeclaration(8000)", "Delete Modifier: static(8001)", "Delete SimpleName: MutableJoin(8002)", "Delete SimpleType: MutableJoin(8003)", "Delete SimpleName: of(8004)", "Delete SimpleName: RelOptCluster(8005)", "Delete SimpleType: RelOptCluster(8006)", "Delete SimpleName: cluster(8007)", "Delete SingleVariableDeclaration(8008)", "Delete SimpleName: MutableRel(8009)", "Delete SimpleType: MutableRel(8010)", "Delete SimpleName: left(8011)", "Delete SingleVariableDeclaration(8012)", "Delete SimpleName: MutableRel(8013)", "Delete SimpleType: MutableRel(8014)", "Delete SimpleName: right(8015)", "Delete SingleVariableDeclaration(8016)", "Delete SimpleName: RexNode(8017)", "Delete SimpleType: RexNode(8018)", "Delete SimpleName: condition(8019)", "Delete SingleVariableDeclaration(8020)", "Delete SimpleName: JoinRelType(8021)", "Delete SimpleType: JoinRelType(8022)", "Delete SimpleName: joinType(8023)", "Delete SingleVariableDeclaration(8024)", "Delete SimpleName: Set(8025)", "Delete SimpleType: Set(8026)", "Delete SimpleName: CorrelationId(8027)", "Delete SimpleType: CorrelationId(8028)", "Delete ParameterizedType: Set<CorrelationId>(8029)", "Delete SimpleName: variablesStopped(8030)", "Delete SingleVariableDeclaration(8031)", "Delete SimpleName: List(8032)", "Delete SimpleType: List(8033)", "Delete SimpleName: RelDataTypeField(8034)", "Delete SimpleType: RelDataTypeField(8035)", "Delete ParameterizedType: List<RelDataTypeField>(8036)", "Delete SimpleName: fieldList(8037)", "Delete SimpleName: Collections(8038)", "Delete SimpleName: emptyList(8039)", "Delete MethodInvocation(8040)", "Delete VariableDeclarationFragment(8041)", "Delete VariableDeclarationStatement(8042)", "Delete SimpleName: RelDataType(8043)", "Delete SimpleType: RelDataType(8044)", "Delete SimpleName: rowType(8045)", "Delete SimpleName: SqlValidatorUtil(8046)", "Delete SimpleName: deriveJoinRowType(8047)", "Delete SimpleName: left(8048)", "Delete SimpleName: getRowType(8049)", "Delete MethodInvocation(8050)", "Delete SimpleName: right(8051)", "Delete SimpleName: getRowType(8052)", "Delete MethodInvocation(8053)", "Delete SimpleName: joinType(8054)", "Delete SimpleName: cluster(8055)", "Delete SimpleName: getTypeFactory(8056)", "Delete MethodInvocation(8057)", "Delete NullLiteral(8058)", "Delete SimpleName: fieldList(8059)", "Delete MethodInvocation(8060)", "Delete VariableDeclarationFragment(8061)", "Delete VariableDeclarationStatement(8062)", "Delete SimpleName: MutableJoin(8063)", "Delete SimpleType: MutableJoin(8064)", "Delete SimpleName: rowType(8065)", "Delete SimpleName: left(8066)", "Delete SimpleName: right(8067)", "Delete SimpleName: condition(8068)", "Delete SimpleName: joinType(8069)", "Delete SimpleName: variablesStopped(8070)", "Delete ClassInstanceCreation(8071)", "Delete ReturnStatement(8072)", "Delete Block(8073)", "Delete MethodDeclaration(8074)", "Delete SimpleName: Override(8075)", "Delete MarkerAnnotation(8076)", "Delete Modifier: public(8077)", "Delete PrimitiveType: boolean(8078)", "Delete SimpleName: equals(8079)", "Delete SimpleName: Object(8080)", "Delete SimpleType: Object(8081)", "Delete SimpleName: obj(8082)", "Delete SingleVariableDeclaration(8083)", "Delete SimpleName: obj(8084)", "Delete ThisExpression(8085)", "Delete InfixExpression: ==(8086)", "Delete SimpleName: obj(8087)", "Delete SimpleName: MutableJoin(8088)", "Delete SimpleType: MutableJoin(8089)", "Delete InstanceofExpression(8090)", "Delete SimpleName: joinType(8091)", "Delete SimpleName: MutableJoin(8092)", "Delete SimpleType: MutableJoin(8093)", "Delete SimpleName: obj(8094)", "Delete CastExpression(8095)", "Delete ParenthesizedExpression(8096)", "Delete SimpleName: joinType(8097)", "Delete FieldAccess(8098)", "Delete InfixExpression: ==(8099)", "Delete InfixExpression: &&(8100)", "Delete SimpleName: condition(8101)", "Delete SimpleName: toString(8102)", "Delete MethodInvocation(8103)", "Delete SimpleName: equals(8104)", "Delete SimpleName: MutableJoin(8105)", "Delete SimpleType: MutableJoin(8106)", "Delete SimpleName: obj(8107)", "Delete CastExpression(8108)", "Delete ParenthesizedExpression(8109)", "Delete SimpleName: condition(8110)", "Delete FieldAccess(8111)", "Delete SimpleName: toString(8112)", "Delete MethodInvocation(8113)", "Delete MethodInvocation(8114)", "Delete InfixExpression: &&(8115)", "Delete SimpleName: left(8116)", "Delete SimpleName: equals(8117)", "Delete SimpleName: MutableJoin(8118)", "Delete SimpleType: MutableJoin(8119)", "Delete SimpleName: obj(8120)", "Delete CastExpression(8121)", "Delete ParenthesizedExpression(8122)", "Delete SimpleName: left(8123)", "Delete FieldAccess(8124)", "Delete MethodInvocation(8125)", "Delete InfixExpression: &&(8126)", "Delete SimpleName: right(8127)", "Delete SimpleName: equals(8128)", "Delete SimpleName: MutableJoin(8129)", "Delete SimpleType: MutableJoin(8130)", "Delete SimpleName: obj(8131)", "Delete CastExpression(8132)", "Delete ParenthesizedExpression(8133)", "Delete SimpleName: right(8134)", "Delete FieldAccess(8135)", "Delete MethodInvocation(8136)", "Delete InfixExpression: &&(8137)", "Delete InfixExpression: ||(8138)", "Delete ReturnStatement(8139)", "Delete Block(8140)", "Delete MethodDeclaration(8141)", "Delete SimpleName: Override(8142)", "Delete MarkerAnnotation(8143)", "Delete Modifier: public(8144)", "Delete PrimitiveType: int(8145)", "Delete SimpleName: hashCode(8146)", "Delete SimpleName: Objects(8147)", "Delete SimpleName: hash(8148)", "Delete SimpleName: left(8149)", "Delete SimpleName: right(8150)", "Delete SimpleName: condition(8151)", "Delete SimpleName: toString(8152)", "Delete MethodInvocation(8153)", "Delete SimpleName: joinType(8154)", "Delete MethodInvocation(8155)", "Delete ReturnStatement(8156)", "Delete Block(8157)", "Delete MethodDeclaration(8158)", "Delete SimpleName: Override(8159)", "Delete MarkerAnnotation(8160)", "Delete Modifier: public(8161)", "Delete SimpleName: StringBuilder(8162)", "Delete SimpleType: StringBuilder(8163)", "Delete SimpleName: digest(8164)", "Delete SimpleName: StringBuilder(8165)", "Delete SimpleType: StringBuilder(8166)", "Delete SimpleName: buf(8167)", "Delete SingleVariableDeclaration(8168)", "Delete SimpleName: buf(8169)", "Delete SimpleName: append(8170)", "Delete StringLiteral: \"Join(left: \"(8171)", "Delete MethodInvocation(8172)", "Delete SimpleName: append(8173)", "Delete SimpleName: left(8174)", "Delete MethodInvocation(8175)", "Delete SimpleName: append(8176)", "Delete StringLiteral: \", right:\"(8177)", "Delete MethodInvocation(8178)", "Delete SimpleName: append(8179)", "Delete SimpleName: right(8180)", "Delete MethodInvocation(8181)", "Delete SimpleName: append(8182)", "Delete StringLiteral: \")\"(8183)", "Delete MethodInvocation(8184)", "Delete ReturnStatement(8185)", "Delete Block(8186)", "Delete MethodDeclaration(8187)", "Delete TypeDeclaration: class(8188)", "Delete TextElement: Utilities for dealing with (8189)", "Delete SimpleName: MutableRel(8190)", "Delete TagElement: @link(8191)", "Delete TextElement: s. (8192)", "Delete TagElement(8193)", "Delete Javadoc(8194)", "Delete Modifier: protected(8195)", "Delete Modifier: static(8196)", "Delete SimpleName: MutableRels(8197)", "Delete Modifier: public(8198)", "Delete Modifier: static(8199)", "Delete PrimitiveType: boolean(8200)", "Delete SimpleName: contains(8201)", "Delete SimpleName: MutableRel(8202)", "Delete SimpleType: MutableRel(8203)", "Delete SimpleName: ancestor(8204)", "Delete SingleVariableDeclaration(8205)", "Delete Modifier: final(8206)", "Delete SimpleName: MutableRel(8207)", "Delete SimpleType: MutableRel(8208)", "Delete SimpleName: target(8209)", "Delete SingleVariableDeclaration(8210)", "Delete SimpleName: ancestor(8211)", "Delete SimpleName: equals(8212)", "Delete SimpleName: target(8213)", "Delete MethodInvocation(8214)", "Delete BooleanLiteral: true(8215)", "Delete ReturnStatement(8216)", "Delete Block(8217)", "Delete IfStatement(8218)", "Delete SimpleName: MutableRelVisitor(8219)", "Delete SimpleType: MutableRelVisitor(8220)", "Delete SimpleName: Override(8221)", "Delete MarkerAnnotation(8222)", "Delete Modifier: public(8223)", "Delete PrimitiveType: void(8224)", "Delete SimpleName: visit(8225)", "Delete SimpleName: MutableRel(8226)", "Delete SimpleType: MutableRel(8227)", "Delete SimpleName: node(8228)", "Delete SingleVariableDeclaration(8229)", "Delete SimpleName: node(8230)", "Delete SimpleName: equals(8231)", "Delete SimpleName: target(8232)", "Delete MethodInvocation(8233)", "Delete QualifiedName: Util.FoundOne.NULL(8234)", "Delete ThrowStatement(8235)", "Delete Block(8236)", "Delete IfStatement(8237)", "Delete SimpleName: visit(8238)", "Delete SimpleName: node(8239)", "Delete SuperMethodInvocation(8240)", "Delete ExpressionStatement(8241)", "Delete Block(8242)", "Delete MethodDeclaration(8243)", "Delete AnonymousClassDeclaration(8244)", "Delete ClassInstanceCreation(8245)", "Delete SimpleName: go(8246)", "Delete SimpleName: ancestor(8247)", "Delete MethodInvocation(8248)", "Delete ExpressionStatement(8249)", "Delete BooleanLiteral: false(8250)", "Delete ReturnStatement(8251)", "Delete Block(8252)", "Delete QualifiedName: Util.FoundOne(8253)", "Delete SimpleType: Util.FoundOne(8254)", "Delete SimpleName: e(8255)", "Delete SingleVariableDeclaration(8256)", "Delete BooleanLiteral: true(8257)", "Delete ReturnStatement(8258)", "Delete Block(8259)", "Delete CatchClause(8260)", "Delete TryStatement(8261)", "Delete Block(8262)", "Delete MethodDeclaration(8263)", "Delete Modifier: public(8264)", "Delete Modifier: static(8265)", "Delete SimpleName: MutableRel(8266)", "Delete SimpleType: MutableRel(8267)", "Delete SimpleName: preOrderTraverseNext(8268)", "Delete SimpleName: MutableRel(8269)", "Delete SimpleType: MutableRel(8270)", "Delete SimpleName: node(8271)", "Delete SingleVariableDeclaration(8272)", "Delete SimpleName: MutableRel(8273)", "Delete SimpleType: MutableRel(8274)", "Delete SimpleName: parent(8275)", "Delete VariableDeclarationFragment(8279)", "Delete VariableDeclarationStatement(8280)", "Delete PrimitiveType: int(8281)", "Delete SimpleName: ordinal(8282)", "Delete QualifiedName: node.ordinalInParent(8283)", "Delete NumberLiteral: 1(8284)", "Delete InfixExpression: +(8285)", "Delete VariableDeclarationFragment(8286)", "Delete VariableDeclarationStatement(8287)", "Delete SimpleName: parent(8288)", "Delete NullLiteral(8289)", "Delete InfixExpression: !=(8290)", "Delete SimpleName: parent(8291)", "Delete SimpleName: getInputs(8292)", "Delete MethodInvocation(8293)", "Delete SimpleName: size(8294)", "Delete MethodInvocation(8295)", "Delete SimpleName: ordinal(8296)", "Delete InfixExpression: >(8297)", "Delete SimpleName: parent(8298)", "Delete SimpleName: getInputs(8299)", "Delete MethodInvocation(8300)", "Delete SimpleName: get(8301)", "Delete SimpleName: ordinal(8302)", "Delete MethodInvocation(8303)", "Delete ReturnStatement(8304)", "Delete Block(8305)", "Delete IfStatement(8306)", "Delete SimpleName: node(8307)", "Delete SimpleName: parent(8308)", "Delete Assignment: =(8309)", "Delete ExpressionStatement(8310)", "Delete SimpleName: parent(8311)", "Delete SimpleName: node(8312)", "Delete SimpleName: getParent(8313)", "Delete MethodInvocation(8314)", "Delete Assignment: =(8315)", "Delete ExpressionStatement(8316)", "Delete SimpleName: ordinal(8317)", "Delete QualifiedName: node.ordinalInParent(8318)", "Delete NumberLiteral: 1(8319)", "Delete InfixExpression: +(8320)", "Delete Assignment: =(8321)", "Delete ExpressionStatement(8322)", "Delete Block(8323)", "Delete WhileStatement(8324)", "Delete NullLiteral(8325)", "Delete ReturnStatement(8326)", "Delete Block(8327)", "Delete MethodDeclaration(8328)", "Delete Modifier: private(8329)", "Delete Modifier: static(8330)", "Delete SimpleName: List(8331)", "Delete SimpleType: List(8332)", "Delete SimpleName: MutableRel(8333)", "Delete SimpleType: MutableRel(8334)", "Delete ParameterizedType: List<MutableRel>(8335)", "Delete SimpleName: descendants(8336)", "Delete SimpleName: MutableRel(8337)", "Delete SimpleType: MutableRel(8338)", "Delete SimpleName: query(8339)", "Delete SingleVariableDeclaration(8340)", "Delete Modifier: final(8341)", "Delete SimpleName: List(8342)", "Delete SimpleType: List(8343)", "Delete SimpleName: MutableRel(8344)", "Delete SimpleType: MutableRel(8345)", "Delete ParameterizedType: List<MutableRel>(8346)", "Delete SimpleName: list(8347)", "Delete SimpleName: ArrayList(8348)", "Delete SimpleType: ArrayList(8349)", "Delete ParameterizedType: ArrayList<>(8350)", "Delete ClassInstanceCreation(8351)", "Delete VariableDeclarationFragment(8352)", "Delete VariableDeclarationStatement(8353)", "Delete SimpleName: descendantsRecurse(8354)", "Delete SimpleName: list(8355)", "Delete SimpleName: query(8356)", "Delete MethodInvocation(8357)", "Delete ExpressionStatement(8358)", "Delete SimpleName: list(8359)", "Delete ReturnStatement(8360)", "Delete Block(8361)", "Delete MethodDeclaration(8362)", "Delete Modifier: private(8363)", "Delete Modifier: static(8364)", "Delete PrimitiveType: void(8365)", "Delete SimpleName: descendantsRecurse(8366)", "Delete SimpleName: List(8367)", "Delete SimpleType: List(8368)", "Delete SimpleName: MutableRel(8369)", "Delete SimpleType: MutableRel(8370)", "Delete ParameterizedType: List<MutableRel>(8371)", "Delete SimpleName: list(8372)", "Delete SingleVariableDeclaration(8373)", "Delete SimpleName: MutableRel(8374)", "Delete SimpleType: MutableRel(8375)", "Delete SimpleName: rel(8376)", "Delete SingleVariableDeclaration(8377)", "Delete SimpleName: list(8378)", "Delete SimpleName: add(8379)", "Delete SimpleName: rel(8380)", "Delete MethodInvocation(8381)", "Delete ExpressionStatement(8382)", "Delete SimpleName: MutableRel(8383)", "Delete SimpleType: MutableRel(8384)", "Delete SimpleName: input(8385)", "Delete SingleVariableDeclaration(8386)", "Delete SimpleName: rel(8387)", "Delete SimpleName: getInputs(8388)", "Delete MethodInvocation(8389)", "Delete SimpleName: descendantsRecurse(8390)", "Delete SimpleName: list(8391)", "Delete SimpleName: input(8392)", "Delete MethodInvocation(8393)", "Delete ExpressionStatement(8394)", "Delete Block(8395)", "Delete EnhancedForStatement(8396)", "Delete Block(8397)", "Delete MethodDeclaration(8398)", "Delete TextElement: Based on(8567)", "Delete QualifiedName: org.apache.calcite.rel.rules.ProjectRemoveRule(8568)", "Delete SimpleName: strip(8569)", "Delete MemberRef(8570)", "Delete TagElement: @link(8571)", "Delete TextElement: . (8572)", "Delete TagElement(8573)", "Delete Javadoc(8574)", "Delete Modifier: public(8575)", "Delete Modifier: static(8576)", "Delete SimpleName: MutableRel(8577)", "Delete SimpleType: MutableRel(8578)", "Delete SimpleName: strip(8579)", "Delete SimpleName: MutableProject(8580)", "Delete SimpleType: MutableProject(8581)", "Delete SimpleName: project(8582)", "Delete SingleVariableDeclaration(8583)", "Delete SimpleName: isTrivial(8584)", "Delete SimpleName: project(8585)", "Delete MethodInvocation(8586)", "Delete SimpleName: project(8587)", "Delete SimpleName: getInput(8588)", "Delete MethodInvocation(8589)", "Delete SimpleName: project(8590)", "Delete ConditionalExpression(8591)", "Delete ReturnStatement(8592)", "Delete Block(8593)", "Delete MethodDeclaration(8594)", "Delete TextElement: Based on(8595)", "Delete QualifiedName: org.apache.calcite.rel.rules.ProjectRemoveRule(8596)", "Delete SimpleName: isTrivial(8597)", "Delete QualifiedName: org.apache.calcite.rel.core.Project(8598)", "Delete SimpleType: org.apache.calcite.rel.core.Project(8599)", "Delete MethodRefParameter(8600)", "Delete MethodRef(8601)", "Delete TagElement: @link(8602)", "Delete TextElement: . (8603)", "Delete TagElement(8604)", "Delete Javadoc(8605)", "Delete Modifier: public(8606)", "Delete Modifier: static(8607)", "Delete PrimitiveType: boolean(8608)", "Delete SimpleName: isTrivial(8609)", "Delete SimpleName: MutableProject(8610)", "Delete SimpleType: MutableProject(8611)", "Delete SimpleName: project(8612)", "Delete SingleVariableDeclaration(8613)", "Delete SimpleName: MutableRel(8614)", "Delete SimpleType: MutableRel(8615)", "Delete SimpleName: child(8616)", "Delete SimpleName: project(8617)", "Delete SimpleName: getInput(8618)", "Delete MethodInvocation(8619)", "Delete VariableDeclarationFragment(8620)", "Delete VariableDeclarationStatement(8621)", "Delete Modifier: final(8622)", "Delete SimpleName: RelDataType(8623)", "Delete SimpleType: RelDataType(8624)", "Delete SimpleName: childRowType(8625)", "Delete SimpleName: child(8626)", "Delete SimpleName: getRowType(8627)", "Delete MethodInvocation(8628)", "Delete VariableDeclarationFragment(8629)", "Delete VariableDeclarationStatement(8630)", "Delete SimpleName: RexUtil(8631)", "Delete SimpleName: isIdentity(8632)", "Delete SimpleName: project(8633)", "Delete SimpleName: getProjects(8634)", "Delete MethodInvocation(8635)", "Delete SimpleName: childRowType(8636)", "Delete MethodInvocation(8637)", "Delete ReturnStatement(8638)", "Delete Block(8639)", "Delete MethodDeclaration(8640)", "Delete TextElement: Equivalent to(8641)", "Delete SimpleName: RelOptUtil(8642)", "Delete SimpleName: createProject(8643)", "Delete QualifiedName: org.apache.calcite.rel.RelNode(8644)", "Delete SimpleType: org.apache.calcite.rel.RelNode(8645)", "Delete MethodRefParameter(8646)", "Delete QualifiedName: java.util.List(8647)", "Delete SimpleType: java.util.List(8648)", "Delete MethodRefParameter(8649)", "Delete MethodRef(8650)", "Delete TagElement: @link(8651)", "Delete TextElement: for (8652)", "Delete SimpleName: MutableRel(8653)", "Delete TagElement: @link(8654)", "Delete TextElement: . (8655)", "Delete TagElement(8656)", "Delete Javadoc(8657)", "Delete Modifier: public(8658)", "Delete Modifier: static(8659)", "Delete SimpleName: MutableRel(8660)", "Delete SimpleType: MutableRel(8661)", "Delete SimpleName: createProject(8662)", "Delete Modifier: final(8663)", "Delete SimpleName: MutableRel(8664)", "Delete SimpleType: MutableRel(8665)", "Delete SimpleName: child(8666)", "Delete SingleVariableDeclaration(8667)", "Delete Modifier: final(8668)", "Delete SimpleName: List(8669)", "Delete SimpleType: List(8670)", "Delete SimpleName: Integer(8671)", "Delete SimpleType: Integer(8672)", "Delete ParameterizedType: List<Integer>(8673)", "Delete SimpleName: posList(8674)", "Delete SingleVariableDeclaration(8675)", "Delete Modifier: final(8676)", "Delete SimpleName: RelDataType(8677)", "Delete SimpleType: RelDataType(8678)", "Delete SimpleName: rowType(8679)", "Delete SimpleName: child(8680)", "Delete SimpleName: getRowType(8681)", "Delete MethodInvocation(8682)", "Delete VariableDeclarationFragment(8683)", "Delete VariableDeclarationStatement(8684)", "Delete SimpleName: Mappings(8685)", "Delete SimpleName: isIdentity(8686)", "Delete SimpleName: posList(8687)", "Delete SimpleName: rowType(8688)", "Delete SimpleName: getFieldCount(8689)", "Delete MethodInvocation(8690)", "Delete MethodInvocation(8691)", "Delete SimpleName: child(8692)", "Delete ReturnStatement(8693)", "Delete Block(8694)", "Delete IfStatement(8695)", "Delete SimpleName: MutableProject(8696)", "Delete SimpleName: of(8697)", "Delete SimpleName: RelOptUtil(8698)", "Delete SimpleName: permute(8699)", "Delete QualifiedName: child.cluster(8700)", "Delete SimpleName: getTypeFactory(8701)", "Delete MethodInvocation(8702)", "Delete SimpleName: rowType(8703)", "Delete SimpleName: Mappings(8704)", "Delete SimpleName: bijection(8705)", "Delete SimpleName: posList(8706)", "Delete MethodInvocation(8707)", "Delete MethodInvocation(8708)", "Delete SimpleName: child(8709)", "Delete SimpleName: AbstractList(8710)", "Delete SimpleType: AbstractList(8711)", "Delete SimpleName: RexNode(8712)", "Delete SimpleType: RexNode(8713)", "Delete ParameterizedType: AbstractList<RexNode>(8714)", "Delete Modifier: public(8715)", "Delete PrimitiveType: int(8716)", "Delete SimpleName: size(8717)", "Delete SimpleName: posList(8718)", "Delete SimpleName: size(8719)", "Delete MethodInvocation(8720)", "Delete ReturnStatement(8721)", "Delete Block(8722)", "Delete MethodDeclaration(8723)", "Delete Modifier: public(8724)", "Delete SimpleName: RexNode(8725)", "Delete SimpleType: RexNode(8726)", "Delete SimpleName: get(8727)", "Delete PrimitiveType: int(8728)", "Delete SimpleName: index(8729)", "Delete SingleVariableDeclaration(8730)", "Delete Modifier: final(8731)", "Delete PrimitiveType: int(8732)", "Delete SimpleName: pos(8733)", "Delete SimpleName: posList(8734)", "Delete SimpleName: get(8735)", "Delete SimpleName: index(8736)", "Delete MethodInvocation(8737)", "Delete VariableDeclarationFragment(8738)", "Delete VariableDeclarationStatement(8739)", "Delete SimpleName: RexInputRef(8740)", "Delete SimpleName: of(8741)", "Delete SimpleName: pos(8742)", "Delete SimpleName: rowType(8743)", "Delete MethodInvocation(8744)", "Delete ReturnStatement(8745)", "Delete Block(8746)", "Delete MethodDeclaration(8747)", "Delete AnonymousClassDeclaration(8748)", "Delete ClassInstanceCreation(8749)", "Delete MethodInvocation(8750)", "Delete ReturnStatement(8751)", "Delete Block(8752)", "Delete MethodDeclaration(8753)", "Delete TextElement: Equivalence to (8754)", "Delete QualifiedName: org.apache.calcite.plan.RelOptUtil(8755)", "Delete SimpleName: createCastRel(8756)", "Delete MemberRef(8757)", "Delete TagElement: @link(8758)", "Delete TextElement: for (8759)", "Delete SimpleName: MutableRel(8760)", "Delete TagElement: @link(8761)", "Delete TextElement: . (8762)", "Delete TagElement(8763)", "Delete Javadoc(8764)", "Delete Modifier: public(8765)", "Delete Modifier: static(8766)", "Delete SimpleName: MutableRel(8767)", "Delete SimpleType: MutableRel(8768)", "Delete SimpleName: createCastRel(8769)", "Delete SimpleName: MutableRel(8770)", "Delete SimpleType: MutableRel(8771)", "Delete SimpleName: rel(8772)", "Delete SingleVariableDeclaration(8773)", "Delete SimpleName: RelDataType(8774)", "Delete SimpleType: RelDataType(8775)", "Delete SimpleName: castRowType(8776)", "Delete SingleVariableDeclaration(8777)", "Delete PrimitiveType: boolean(8778)", "Delete SimpleName: rename(8779)", "Delete SingleVariableDeclaration(8780)", "Delete SimpleName: RelDataType(8781)", "Delete SimpleType: RelDataType(8782)", "Delete SimpleName: rowType(8783)", "Delete SimpleName: rel(8784)", "Delete SimpleName: getRowType(8785)", "Delete MethodInvocation(8786)", "Delete VariableDeclarationFragment(8787)", "Delete VariableDeclarationStatement(8788)", "Delete SimpleName: RelOptUtil(8789)", "Delete SimpleName: areRowTypesEqual(8790)", "Delete SimpleName: rowType(8791)", "Delete SimpleName: castRowType(8792)", "Delete SimpleName: rename(8793)", "Delete MethodInvocation(8794)", "Delete SimpleName: rel(8795)", "Delete ReturnStatement(8796)", "Delete Block(8797)", "Delete IfStatement(8798)", "Delete SimpleName: List(8799)", "Delete SimpleType: List(8800)", "Delete SimpleName: RexNode(8801)", "Delete SimpleType: RexNode(8802)", "Delete ParameterizedType: List<RexNode>(8803)", "Delete SimpleName: castExps(8804)", "Delete SimpleName: RexUtil(8805)", "Delete SimpleName: generateCastExpressions(8806)", "Delete QualifiedName: rel.cluster(8807)", "Delete SimpleName: getRexBuilder(8808)", "Delete MethodInvocation(8809)", "Delete SimpleName: castRowType(8810)", "Delete SimpleName: rowType(8811)", "Delete MethodInvocation(8812)", "Delete VariableDeclarationFragment(8813)", "Delete VariableDeclarationStatement(8814)", "Delete Modifier: final(8815)", "Delete SimpleName: List(8816)", "Delete SimpleType: List(8817)", "Delete SimpleName: String(8818)", "Delete SimpleType: String(8819)", "Delete ParameterizedType: List<String>(8820)", "Delete SimpleName: fieldNames(8821)", "Delete SimpleName: rename(8822)", "Delete SimpleName: castRowType(8823)", "Delete SimpleName: getFieldNames(8824)", "Delete MethodInvocation(8825)", "Delete SimpleName: rowType(8826)", "Delete SimpleName: getFieldNames(8827)", "Delete MethodInvocation(8828)", "Delete ConditionalExpression(8829)", "Delete VariableDeclarationFragment(8830)", "Delete VariableDeclarationStatement(8831)", "Delete SimpleName: MutableProject(8832)", "Delete SimpleName: of(8833)", "Delete SimpleName: rel(8834)", "Delete SimpleName: castExps(8835)", "Delete SimpleName: fieldNames(8836)", "Delete MethodInvocation(8837)", "Delete ReturnStatement(8838)", "Delete Block(8839)", "Delete MethodDeclaration(8840)", "Delete TypeDeclaration: class(8841)", "Delete TextElement: Visitor that prints an indented tree of (8842)", "Delete SimpleName: MutableRel(8843)", "Delete TagElement: @link(8844)", "Delete TextElement: s. (8845)", "Delete TagElement(8846)", "Delete Javadoc(8847)", "Delete Modifier: protected(8848)", "Delete Modifier: static(8849)", "Delete SimpleName: MutableRelDumper(8850)", "Delete SimpleName: MutableRelVisitor(8851)", "Delete SimpleType: MutableRelVisitor(8852)", "Delete Modifier: private(8853)", "Delete Modifier: final(8854)", "Delete SimpleName: StringBuilder(8855)", "Delete SimpleType: StringBuilder(8856)", "Delete SimpleName: buf(8857)", "Delete SimpleName: StringBuilder(8858)", "Delete SimpleType: StringBuilder(8859)", "Delete ClassInstanceCreation(8860)", "Delete VariableDeclarationFragment(8861)", "Delete FieldDeclaration(8862)", "Delete Modifier: private(8863)", "Delete PrimitiveType: int(8864)", "Delete SimpleName: level(8865)", "Delete VariableDeclarationFragment(8866)", "Delete FieldDeclaration(8867)", "Delete SimpleName: Override(8868)", "Delete MarkerAnnotation(8869)", "Delete Modifier: public(8870)", "Delete PrimitiveType: void(8871)", "Delete SimpleName: visit(8872)", "Delete SimpleName: MutableRel(8873)", "Delete SimpleType: MutableRel(8874)", "Delete SimpleName: node(8875)", "Delete SingleVariableDeclaration(8876)", "Delete SimpleName: Spaces(8877)", "Delete SimpleName: append(8878)", "Delete SimpleName: buf(8879)", "Delete SimpleName: level(8880)", "Delete NumberLiteral: 2(8881)", "Delete InfixExpression: *(8882)", "Delete MethodInvocation(8883)", "Delete ExpressionStatement(8884)", "Delete SimpleName: node(8885)", "Delete NullLiteral(8886)", "Delete InfixExpression: ==(8887)", "Delete SimpleName: buf(8888)", "Delete SimpleName: append(8889)", "Delete StringLiteral: \"null\"(8890)", "Delete MethodInvocation(8891)", "Delete ExpressionStatement(8892)", "Delete Block(8893)", "Delete SimpleName: node(8894)", "Delete SimpleName: digest(8895)", "Delete SimpleName: buf(8896)", "Delete MethodInvocation(8897)", "Delete ExpressionStatement(8898)", "Delete SimpleName: buf(8899)", "Delete SimpleName: append(8900)", "Delete StringLiteral: \"\\n\"(8901)", "Delete MethodInvocation(8902)", "Delete ExpressionStatement(8903)", "Delete SimpleName: level(8904)", "Delete PrefixExpression: ++(8905)", "Delete ExpressionStatement(8906)", "Delete SimpleName: visit(8907)", "Delete SimpleName: node(8908)", "Delete SuperMethodInvocation(8909)", "Delete ExpressionStatement(8910)", "Delete SimpleName: level(8911)", "Delete PrefixExpression: --(8912)", "Delete ExpressionStatement(8913)", "Delete Block(8914)", "Delete IfStatement(8915)", "Delete Block(8916)", "Delete MethodDeclaration(8917)", "Delete Modifier: public(8918)", "Delete SimpleName: String(8919)", "Delete SimpleType: String(8920)", "Delete SimpleName: apply(8921)", "Delete SimpleName: MutableRel(8922)", "Delete SimpleType: MutableRel(8923)", "Delete SimpleName: rel(8924)", "Delete SingleVariableDeclaration(8925)", "Delete SimpleName: go(8926)", "Delete SimpleName: rel(8927)", "Delete MethodInvocation(8928)", "Delete ExpressionStatement(8929)", "Delete SimpleName: buf(8930)", "Delete SimpleName: toString(8931)", "Delete MethodInvocation(8932)", "Delete ReturnStatement(8933)", "Delete Block(8934)", "Delete MethodDeclaration(8935)", "Delete TypeDeclaration: class(8936)", "Delete SimpleName: rel(8983)", "Delete SimpleName: getRowType(8984)", "Delete MethodInvocation(8985)", "Delete SimpleName: rel0(8987)", "Delete SimpleName: getRowType(8988)", "Delete MethodInvocation(8989)", "Delete SimpleName: rel(9061)", "Delete SimpleName: getRowType(9062)", "Delete MethodInvocation(9063)", "Delete SimpleName: getCondition(9074)", "Delete MethodInvocation(9075)", "Delete SimpleName: getCondition(9081)", "Delete MethodInvocation(9082)", "Delete SimpleName: rel0(8429)", "Delete SimpleName: getRowType(8430)", "Delete MethodInvocation(8431)", "Delete SimpleName: rel1(8433)", "Delete SimpleName: getRowType(8434)", "Delete MethodInvocation(8435)"]}}], "commit_stats": [{"total_files": 36, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}