{"application": "google-guava", "csha": "212b62566935763aeb4d0dd9082b1238b4b6cb58", "files": [{"ConfigurableGraph_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.graph.Graphs.checkNonNegative", "DEL ImportDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL SimpleName: edgeCount", "DEL Modifier: protected", "DEL PrimitiveType: long"]}, {"root": "DEL NumberLiteral: 0L", "operations": ["DEL NumberLiteral: 0L"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: edgeCount", "DEL SingleVariableDeclaration", "DEL PrimitiveType: long"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ThisExpression", "DEL FieldAccess", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: edgeCount", "DEL Assignment: =", "DEL SimpleName: checkNonNegative", "DEL SimpleName: edgeCount"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL Block", "DEL ReturnStatement", "DEL MarkerAnnotation", "DEL SimpleName: Override", "DEL PrimitiveType: long", "DEL Modifier: protected", "DEL SimpleName: edgeCount", "DEL SimpleName: edgeCount"]}]}}, {"ConfigurableGraph_diff": {"operations": ["Delete QualifiedName: com.google.common.graph.Graphs.checkNonNegative(12)", "Delete ImportDeclaration(13)", "Delete Modifier: protected(124)", "Delete PrimitiveType: long(125)", "Delete SimpleName: edgeCount(126)", "Delete VariableDeclarationFragment(127)", "Delete FieldDeclaration(128)", "Delete NumberLiteral: 0L(161)", "Delete PrimitiveType: long(195)", "Delete SimpleName: edgeCount(196)", "Delete SingleVariableDeclaration(197)", "Delete ThisExpression(257)", "Delete SimpleName: edgeCount(258)", "Delete FieldAccess(259)", "Delete SimpleName: checkNonNegative(260)", "Delete SimpleName: edgeCount(261)", "Delete MethodInvocation(262)", "Delete Assignment: =(263)", "Delete ExpressionStatement(264)", "Delete SimpleName: Override(463)", "Delete MarkerAnnotation(464)", "Delete Modifier: protected(465)", "Delete PrimitiveType: long(466)", "Delete SimpleName: edgeCount(467)", "Delete SimpleName: edgeCount(468)", "Delete ReturnStatement(469)", "Delete Block(470)", "Delete MethodDeclaration(471)"]}}, {"ConfigurableMutableGraph_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS PrimitiveType: long to FieldDeclaration at 1", "INS SimpleName: edgeCount to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS NumberLiteral: 0L to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 7"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: edgeCount to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: edgeCount to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS Modifier: protected to MethodDeclaration at 1", "INS PrimitiveType: long to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4"]}]}}, {"ConfigurableMutableGraph_diff": {"operations": ["Insert FieldDeclaration(75) into TypeDeclaration: class(566) at 7", "Insert MethodDeclaration(103) into TypeDeclaration: class(566) at 9", "Insert Modifier: private(70) into FieldDeclaration(75) at 0", "Insert PrimitiveType: long(71) into FieldDeclaration(75) at 1", "Insert VariableDeclarationFragment(74) into FieldDeclaration(75) at 2", "Insert MarkerAnnotation(96) into MethodDeclaration(103) at 0", "Insert Modifier: protected(97) into MethodDeclaration(103) at 1", "Insert PrimitiveType: long(98) into MethodDeclaration(103) at 2", "Insert SimpleName: edgeCount(99) into MethodDeclaration(103) at 3", "Insert Block(102) into MethodDeclaration(103) at 4", "Insert SimpleName: edgeCount(72) into VariableDeclarationFragment(74) at 0", "Insert NumberLiteral: 0L(73) into VariableDeclarationFragment(74) at 1", "Insert SimpleName: Override(95) into MarkerAnnotation(96) at 0", "Insert ReturnStatement(101) into Block(102) at 0", "Insert SimpleName: edgeCount(100) into ReturnStatement(101) at 0"]}}, {"ImmutableBasicGraph_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: com.google.common.collect.ImmutableCollection to ImportDeclaration at 0"]}, {"root": "INS TextElement: <p>This class generally provides all of the same guarantees as  to TagElement at 6", "operations": ["INS TextElement: <p>This class generally provides all of the same guarantees as  to TagElement at 6"]}, {"root": "INS TagElement: @link to TagElement at 7", "operations": ["INS SimpleName: ImmutableCollection to TagElement: @link at 0", "INS TagElement: @link to TagElement at 7"]}, {"root": "INS TextElement: (despite not extending  to TagElement at 8", "operations": ["INS TextElement: (despite not extending  to TagElement at 8"]}, {"root": "INS TagElement: @link to TagElement at 9", "operations": ["INS SimpleName: ImmutableCollection to TagElement: @link at 0", "INS TagElement: @link to TagElement at 9"]}, {"root": "INS TextElement:  itself), including guaranteed thread-safety. to TagElement at 10", "operations": ["INS TextElement:  itself), including guaranteed thread-safety. to TagElement at 10"]}, {"root": "UPDATE from To ensure the immutability contract is maintained, there must be no public constructors. to To ensure the immutability contract is maintained, there must be no public constructors. ", "operations": ["UPD TextElement: To ensure the immutability contract is maintained, there must be no public constructors. from To ensure the immutability contract is maintained, there must be no public constructors. to To ensure the immutability contract is maintained, there must be no public constructors. "]}, {"root": "UPDATE from . to . ", "operations": ["UPD TextElement: . from . to . "]}]}}, {"ImmutableBasicGraph_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(155) at 3", "Insert QualifiedName: com.google.common.collect.ImmutableCollection(6) into ImportDeclaration(7) at 0", "Insert TextElement: <p>This class generally provides all of the same guarantees as (22) into TagElement(29) at 6", "Insert TagElement: @link(24) into TagElement(29) at 7", "Insert TextElement: (despite not extending (25) into TagElement(29) at 8", "Insert TagElement: @link(27) into TagElement(29) at 9", "Insert TextElement:  itself), including guaranteed thread-safety.(28) into TagElement(29) at 10", "Insert SimpleName: ImmutableCollection(23) into TagElement: @link(24) at 0", "Insert SimpleName: ImmutableCollection(26) into TagElement: @link(27) at 0", "Update TextElement: To ensure the immutability contract is maintained, there must be no public constructors.(53) to To ensure the immutability contract is maintained, there must be no public constructors. ", "Update TextElement: .(72) to . "]}}, {"ImmutableGraph_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: com.google.common.graph.Graphs.checkNonNegative to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: com.google.common.collect.ImmutableCollection to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS PrimitiveType: long to FieldDeclaration at 2", "INS SimpleName: edgeCount to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS Block to MethodDeclaration at 4", "INS Modifier: protected to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS PrimitiveType: long to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: edgeCount to ReturnStatement at 0", "INS SimpleName: edgeCount to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "UPDATE from  whose elements and structural relationships will never change. Instances of to  whose elements and structural relationships will never change. Instances of this", "operations": ["UPD TextElement:  whose elements and structural relationships will never change. Instances of from  whose elements and structural relationships will never change. Instances of to  whose elements and structural relationships will never change. Instances of this"]}, {"root": "UPDATE from this class may be obtained with  to class may be obtained with ", "operations": ["UPD TextElement: this class may be obtained with  from this class may be obtained with  to class may be obtained with "]}, {"root": "INS TextElement: <p>This class generally provides all of the same guarantees as  to TagElement at 6", "operations": ["INS TextElement: <p>This class generally provides all of the same guarantees as  to TagElement at 6"]}, {"root": "INS TagElement: @link to TagElement at 7", "operations": ["INS TagElement: @link to TagElement at 7", "INS SimpleName: ImmutableCollection to TagElement: @link at 0"]}, {"root": "INS TextElement: (despite not extending  to TagElement at 8", "operations": ["INS TextElement: (despite not extending  to TagElement at 8"]}, {"root": "INS TagElement: @link to TagElement at 9", "operations": ["INS TagElement: @link to TagElement at 9", "INS SimpleName: ImmutableCollection to TagElement: @link at 0"]}, {"root": "INS TextElement:  itself), including guaranteed thread-safety. to TagElement at 10", "operations": ["INS TextElement:  itself), including guaranteed thread-safety. to TagElement at 10"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS FieldAccess to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: edgeCount to FieldAccess at 1", "INS SimpleName: checkNonNegative to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "UPDATE from To ensure the immutability contract is maintained, there must be no public constructors. to To ensure the immutability contract is maintained, there must be no public constructors. ", "operations": ["UPD TextElement: To ensure the immutability contract is maintained, there must be no public constructors. from To ensure the immutability contract is maintained, there must be no public constructors. to To ensure the immutability contract is maintained, there must be no public constructors. "]}, {"root": "UPDATE from . to . ", "operations": ["UPD TextElement: . from . to . "]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1"]}]}}, {"ImmutableGraph_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(378) at 2", "Insert ImportDeclaration(11) into CompilationUnit(378) at 5", "Insert QualifiedName: com.google.common.graph.Graphs.checkNonNegative(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: com.google.common.collect.ImmutableCollection(10) into ImportDeclaration(11) at 0", "Insert FieldDeclaration(71) into TypeDeclaration: class(377) at 7", "Insert MethodDeclaration(376) into TypeDeclaration: class(377) at 13", "Insert Modifier: private(66) into FieldDeclaration(71) at 0", "Insert Modifier: final(67) into FieldDeclaration(71) at 1", "Insert PrimitiveType: long(68) into FieldDeclaration(71) at 2", "Insert VariableDeclarationFragment(70) into FieldDeclaration(71) at 3", "Insert MarkerAnnotation(369) into MethodDeclaration(376) at 0", "Insert Modifier: protected(370) into MethodDeclaration(376) at 1", "Insert PrimitiveType: long(371) into MethodDeclaration(376) at 2", "Insert SimpleName: edgeCount(372) into MethodDeclaration(376) at 3", "Insert Block(375) into MethodDeclaration(376) at 4", "Update TextElement:  whose elements and structural relationships will never change. Instances of(15) to  whose elements and structural relationships will never change. Instances of this", "Update TextElement: this class may be obtained with (16) to class may be obtained with ", "Insert TextElement: <p>This class generally provides all of the same guarantees as (28) into TagElement(35) at 6", "Insert TagElement: @link(30) into TagElement(35) at 7", "Insert TextElement: (despite not extending (31) into TagElement(35) at 8", "Insert TagElement: @link(33) into TagElement(35) at 9", "Insert TextElement:  itself), including guaranteed thread-safety.(34) into TagElement(35) at 10", "Insert SimpleName: edgeCount(69) into VariableDeclarationFragment(70) at 0", "Insert ExpressionStatement(104) into Block(105) at 1", "Insert SimpleName: Override(368) into MarkerAnnotation(369) at 0", "Insert ReturnStatement(374) into Block(375) at 0", "Insert SimpleName: ImmutableCollection(29) into TagElement: @link(30) at 0", "Insert SimpleName: ImmutableCollection(32) into TagElement: @link(33) at 0", "Update TextElement: To ensure the immutability contract is maintained, there must be no public constructors.(55) to To ensure the immutability contract is maintained, there must be no public constructors. ", "Insert Assignment: =(103) into ExpressionStatement(104) at 0", "Update TextElement: .(86) to . ", "Insert SimpleName: edgeCount(373) into ReturnStatement(374) at 0", "Insert FieldAccess(95) into Assignment: =(103) at 0", "Insert MethodInvocation(102) into Assignment: =(103) at 1", "Insert ThisExpression(93) into FieldAccess(95) at 0", "Insert SimpleName: edgeCount(94) into FieldAccess(95) at 1", "Insert SimpleName: checkNonNegative(96) into MethodInvocation(102) at 0", "Move MethodInvocation(79) into MethodInvocation(102) at 1"]}}, {"ImmutableNetwork_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: com.google.common.collect.ImmutableCollection to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS TextElement: <p>This class generally provides all of the same guarantees as  to TagElement at 6", "operations": ["INS TextElement: <p>This class generally provides all of the same guarantees as  to TagElement at 6"]}, {"root": "INS TagElement: @link to TagElement at 7", "operations": ["INS TagElement: @link to TagElement at 7", "INS SimpleName: ImmutableCollection to TagElement: @link at 0"]}, {"root": "INS TextElement: (despite not extending  to TagElement at 8", "operations": ["INS TextElement: (despite not extending  to TagElement at 8"]}, {"root": "INS TagElement: @link to TagElement at 9", "operations": ["INS TagElement: @link to TagElement at 9", "INS SimpleName: ImmutableCollection to TagElement: @link at 0"]}, {"root": "INS TextElement:  itself), including guaranteed thread-safety. to TagElement at 10", "operations": ["INS TextElement:  itself), including guaranteed thread-safety. to TagElement at 10"]}, {"root": "UPDATE from To ensure the immutability contract is maintained, there must be no public constructors. to To ensure the immutability contract is maintained, there must be no public constructors. ", "operations": ["UPD TextElement: To ensure the immutability contract is maintained, there must be no public constructors. from To ensure the immutability contract is maintained, there must be no public constructors. to To ensure the immutability contract is maintained, there must be no public constructors. "]}, {"root": "UPDATE from . to . ", "operations": ["UPD TextElement: . from . to . "]}]}}, {"ImmutableNetwork_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(630) at 4", "Insert QualifiedName: com.google.common.collect.ImmutableCollection(8) into ImportDeclaration(9) at 0", "Insert TextElement: <p>This class generally provides all of the same guarantees as (28) into TagElement(35) at 6", "Insert TagElement: @link(30) into TagElement(35) at 7", "Insert TextElement: (despite not extending (31) into TagElement(35) at 8", "Insert TagElement: @link(33) into TagElement(35) at 9", "Insert TextElement:  itself), including guaranteed thread-safety.(34) into TagElement(35) at 10", "Insert SimpleName: ImmutableCollection(29) into TagElement: @link(30) at 0", "Insert SimpleName: ImmutableCollection(32) into TagElement: @link(33) at 0", "Update TextElement: To ensure the immutability contract is maintained, there must be no public constructors.(61) to To ensure the immutability contract is maintained, there must be no public constructors. ", "Update TextElement: .(91) to . "]}}], "commit_stats": [{"total_files": 5, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}