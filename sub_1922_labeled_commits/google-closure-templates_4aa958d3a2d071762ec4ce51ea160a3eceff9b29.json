{"application": "google-closure-templates", "csha": "4aa958d3a2d071762ec4ce51ea160a3eceff9b29", "files": [{"AppendableExpression_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 6", "MOV ImportDeclaration to CompilationUnit at 6"]}, {"root": "UPDATE from com.google.template.soy.jbcsrc.api.AdvisingStringBuilder to com.google.template.soy.jbcsrc.BytecodeUtils.ADVISING_APPENDABLE_TYPE", "operations": ["UPD QualifiedName: com.google.template.soy.jbcsrc.api.AdvisingStringBuilder from com.google.template.soy.jbcsrc.api.AdvisingStringBuilder to com.google.template.soy.jbcsrc.BytecodeUtils.ADVISING_APPENDABLE_TYPE"]}, {"root": "UPDATE from org.objectweb.asm.Type to com.google.template.soy.jbcsrc.BytecodeUtils.ADVISING_BUILDER_TYPE", "operations": ["UPD QualifiedName: org.objectweb.asm.Type from org.objectweb.asm.Type to com.google.template.soy.jbcsrc.BytecodeUtils.ADVISING_BUILDER_TYPE"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL Modifier: static", "DEL SimpleName: getType", "DEL FieldDeclaration", "DEL SimpleType: Type", "DEL SimpleName: Type", "DEL VariableDeclarationFragment", "DEL SimpleName: ADVISING_APPENDABLE_TYPE", "DEL TypeLiteral", "DEL SimpleName: AdvisingAppendable", "DEL MethodInvocation", "DEL SimpleType: AdvisingAppendable", "DEL SimpleName: Type", "DEL Modifier: final"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL SimpleType: Type", "DEL TypeLiteral", "DEL SimpleName: Type", "DEL SimpleName: ADVISING_BUILDER_TYPE", "DEL SimpleName: getType", "DEL Modifier: static", "DEL SimpleName: Type", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL Modifier: final", "DEL MethodInvocation", "DEL SimpleType: AdvisingStringBuilder", "DEL SimpleName: AdvisingStringBuilder"]}]}}, {"AppendableExpression_diff": {"operations": ["Move ImportDeclaration(5) into CompilationUnit(366) at 6", "Move ImportDeclaration(9) into CompilationUnit(366) at 6", "Update QualifiedName: com.google.template.soy.jbcsrc.api.AdvisingStringBuilder(6) to com.google.template.soy.jbcsrc.BytecodeUtils.ADVISING_APPENDABLE_TYPE", "Update QualifiedName: org.objectweb.asm.Type(10) to com.google.template.soy.jbcsrc.BytecodeUtils.ADVISING_BUILDER_TYPE", "Delete Modifier: private(78)", "Delete Modifier: static(79)", "Delete Modifier: final(80)", "Delete SimpleName: Type(81)", "Delete SimpleType: Type(82)", "Delete SimpleName: ADVISING_APPENDABLE_TYPE(83)", "Delete SimpleName: Type(84)", "Delete SimpleName: getType(85)", "Delete SimpleName: AdvisingAppendable(86)", "Delete SimpleType: AdvisingAppendable(87)", "Delete TypeLiteral(88)", "Delete MethodInvocation(89)", "Delete VariableDeclarationFragment(90)", "Delete FieldDeclaration(91)", "Delete Modifier: private(92)", "Delete Modifier: static(93)", "Delete Modifier: final(94)", "Delete SimpleName: Type(95)", "Delete SimpleType: Type(96)", "Delete SimpleName: ADVISING_BUILDER_TYPE(97)", "Delete SimpleName: Type(98)", "Delete SimpleName: getType(99)", "Delete SimpleName: AdvisingStringBuilder(100)", "Delete SimpleType: AdvisingStringBuilder(101)", "Delete TypeLiteral(102)", "Delete MethodInvocation(103)", "Delete VariableDeclarationFragment(104)", "Delete FieldDeclaration(105)"]}}, {"BytecodeCompiler_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: isLoggable to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: logger to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 0", "INS QualifiedName: Level.FINE to MethodInvocation at 2"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS QualifiedName: Flags.DEBUG to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 5"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}]}}, {"BytecodeCompiler_diff": {"operations": ["Insert IfStatement(513) into Block(543) at 0", "Insert IfStatement(537) into Block(543) at 4", "Insert MethodInvocation(486) into IfStatement(513) at 0", "Insert Block(512) into IfStatement(513) at 1", "Insert QualifiedName: Flags.DEBUG(531) into IfStatement(537) at 0", "Insert Block(536) into IfStatement(537) at 1", "Insert SimpleName: logger(483) into MethodInvocation(486) at 0", "Insert SimpleName: isLoggable(484) into MethodInvocation(486) at 1", "Insert QualifiedName: Level.FINE(485) into MethodInvocation(486) at 2", "Move ExpressionStatement(507) into Block(512) at 0", "Move ExpressionStatement(528) into Block(536) at 0"]}}, {"BytecodeProducer_cluster": {"actions": [{"root": "INS ConditionalExpression to VariableDeclarationFragment at 1", "operations": ["INS ConditionalExpression to VariableDeclarationFragment at 1", "INS QualifiedName: Flags.DEBUG to ConditionalExpression at 0", "INS NullLiteral to ConditionalExpression at 2"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV ClassInstanceCreation to ConditionalExpression at 1"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS QualifiedName: Flags.DEBUG to InfixExpression: && at 0", "INS InfixExpression: && to IfStatement at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS QualifiedName: Flags.DEBUG to InfixExpression: && at 0", "INS InfixExpression: && to IfStatement at 0"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV MethodInvocation to InfixExpression: && at 1"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV PrefixExpression: ! to InfixExpression: && at 1"]}]}}, {"BytecodeProducer_diff": {"operations": ["Insert ConditionalExpression(64) into VariableDeclarationFragment(65) at 1", "Insert QualifiedName: Flags.DEBUG(45) into ConditionalExpression(64) at 0", "Move ClassInstanceCreation(61) into ConditionalExpression(64) at 1", "Insert NullLiteral(63) into ConditionalExpression(64) at 2", "Insert InfixExpression: &&(123) into IfStatement(130) at 0", "Insert InfixExpression: &&(159) into IfStatement(170) at 0", "Insert QualifiedName: Flags.DEBUG(119) into InfixExpression: &&(123) at 0", "Move MethodInvocation(118) into InfixExpression: &&(123) at 1", "Insert QualifiedName: Flags.DEBUG(154) into InfixExpression: &&(159) at 0", "Move PrefixExpression: !(152) into InfixExpression: &&(159) at 1"]}}, {"ClassData_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: com.google.common.base.Preconditions.checkNotNull to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "UPDATE from com.google.auto.value.AutoValue to com.google.common.base.Preconditions.checkState", "operations": ["UPD QualifiedName: com.google.auto.value.AutoValue from com.google.auto.value.AutoValue to com.google.common.base.Preconditions.checkState"]}, {"root": "UPDATE from abstract to final", "operations": ["UPD Modifier: abstract from abstract to final"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleName: type to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 5"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS SimpleName: data to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1", "INS Dimension to ArrayType: byte[] at 1", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS ArrayType: byte[] to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 7", "INS SimpleName: numberOfFields to VariableDeclarationFragment at 0", "INS PrimitiveType: int to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS Block to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS ReturnStatement to Block at 0", "INS SimpleName: type to ReturnStatement at 0", "INS SimpleName: type to MethodDeclaration at 1", "INS SimpleType: TypeInfo to MethodDeclaration at 0", "INS SimpleName: TypeInfo to SimpleType: TypeInfo at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: Caution, this returns the underlying array and is mutable. to TagElement at 0", "INS TagElement to Javadoc at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: data to MethodDeclaration at 2", "INS SimpleName: data to ReturnStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS PrimitiveType: int to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 2", "INS SimpleName: numberOfFields to MethodDeclaration at 1", "INS SimpleName: numberOfFields to ReturnStatement at 0"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV SimpleType: TypeInfo to FieldDeclaration at 2"]}, {"root": "UPDATE from abstract to private", "operations": ["UPD Modifier: abstract from abstract to private"]}, {"root": "INS SimpleName: ClassData to MethodDeclaration at 1", "operations": ["INS SimpleName: ClassData to MethodDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 2", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleType: TypeInfo to SingleVariableDeclaration at 0", "INS SimpleName: type to SingleVariableDeclaration at 1", "INS SimpleName: TypeInfo to SimpleType: TypeInfo at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: data to SingleVariableDeclaration at 1", "INS ArrayType: byte[] to SingleVariableDeclaration at 0", "INS Dimension to ArrayType: byte[] at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: numberOfFields to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: int to SingleVariableDeclaration at 0"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS ExpressionStatement to Block at 1", "INS SimpleName: numberOfFields to Assignment: = at 1", "INS SimpleName: type to MethodInvocation at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: numberOfFields to FieldAccess at 1", "INS SimpleName: type to FieldAccess at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: checkNotNull to MethodInvocation at 0", "INS FieldAccess to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: checkNotNull to MethodInvocation at 0", "INS FieldAccess to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to Assignment: = at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: data to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS Assignment: = to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: data to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ArrayType: byte[] to MethodDeclaration at 1"]}, {"root": "INS TextElement: <p>Note: not using an @AutoValue since it copies to TagElement at 1", "operations": ["INS TextElement: <p>Note: not using an @AutoValue since it copies to TagElement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleName: ClassNode to SimpleType: ClassNode at 0", "INS SimpleName: cv to VariableDeclarationFragment at 0", "INS SimpleType: ClassNode to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS QualifiedName: cv.name to MethodInvocation at 2", "INS SimpleName: checkState to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: internalName to MethodInvocation at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: type to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ExpressionStatement to Block at 3", "INS MethodInvocation to InfixExpression: == at 1", "INS SimpleName: numberOfFields to InfixExpression: == at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: cv.fields to MethodInvocation at 0", "INS InfixExpression: == to MethodInvocation at 1", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: checkState to MethodInvocation at 0"]}, {"root": "UPDATE from AutoValue_ClassData to ClassData", "operations": ["UPD SimpleType: AutoValue_ClassData from AutoValue_ClassData to ClassData", "UPD SimpleName: AutoValue_ClassData from AutoValue_ClassData to ClassData"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ClassReader to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: data to ClassInstanceCreation at 1", "operations": ["INS SimpleName: data to ClassInstanceCreation at 1"]}, {"root": "INS SimpleName: cv to ClassInstanceCreation at 1", "operations": ["INS SimpleName: cv to ClassInstanceCreation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ClassReader to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: data to ClassInstanceCreation at 1", "operations": ["INS SimpleName: data to ClassInstanceCreation at 1"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL MarkerAnnotation", "DEL SimpleName: AutoValue"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL Modifier: abstract", "DEL SimpleName: type"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: abstract", "DEL MethodDeclaration", "DEL SimpleName: data"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL SimpleName: numberOfFields", "operations": ["DEL SimpleName: numberOfFields"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: data"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: data", "DEL MethodInvocation"]}]}}, {"ClassData_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(227) at 1", "Insert QualifiedName: com.google.common.base.Preconditions.checkNotNull(2) into ImportDeclaration(3) at 0", "Update QualifiedName: com.google.auto.value.AutoValue(2) to com.google.common.base.Preconditions.checkState", "Update Modifier: abstract(23) to final", "Insert FieldDeclaration(57) into TypeDeclaration: class(226) at 4", "Insert FieldDeclaration(65) into TypeDeclaration: class(226) at 5", "Insert FieldDeclaration(71) into TypeDeclaration: class(226) at 6", "Insert MethodDeclaration(116) into TypeDeclaration: class(226) at 8", "Insert MethodDeclaration(127) into TypeDeclaration: class(226) at 9", "Insert MethodDeclaration(133) into TypeDeclaration: class(226) at 10", "Insert Modifier: private(51) into FieldDeclaration(57) at 0", "Insert Modifier: final(52) into FieldDeclaration(57) at 1", "Move SimpleType: TypeInfo(52) into FieldDeclaration(57) at 2", "Insert VariableDeclarationFragment(56) into FieldDeclaration(57) at 3", "Insert Modifier: private(58) into FieldDeclaration(65) at 0", "Insert Modifier: final(59) into FieldDeclaration(65) at 1", "Insert ArrayType: byte[](62) into FieldDeclaration(65) at 2", "Insert VariableDeclarationFragment(64) into FieldDeclaration(65) at 3", "Insert Modifier: private(66) into FieldDeclaration(71) at 0", "Insert Modifier: final(67) into FieldDeclaration(71) at 1", "Insert PrimitiveType: int(68) into FieldDeclaration(71) at 2", "Insert VariableDeclarationFragment(70) into FieldDeclaration(71) at 3", "Update Modifier: abstract(61) to private", "Insert SimpleName: ClassData(73) into MethodDeclaration(109) at 1", "Insert SingleVariableDeclaration(77) into MethodDeclaration(109) at 2", "Insert SingleVariableDeclaration(82) into MethodDeclaration(109) at 3", "Insert SingleVariableDeclaration(85) into MethodDeclaration(109) at 4", "Insert Block(108) into MethodDeclaration(109) at 5", "Insert SimpleType: TypeInfo(111) into MethodDeclaration(116) at 0", "Insert SimpleName: type(112) into MethodDeclaration(116) at 1", "Insert Block(115) into MethodDeclaration(116) at 2", "Insert Javadoc(119) into MethodDeclaration(127) at 0", "Move ArrayType: byte[](58) into MethodDeclaration(127) at 1", "Insert SimpleName: data(123) into MethodDeclaration(127) at 2", "Insert Block(126) into MethodDeclaration(127) at 3", "Insert PrimitiveType: int(128) into MethodDeclaration(133) at 0", "Insert SimpleName: numberOfFields(129) into MethodDeclaration(133) at 1", "Insert Block(132) into MethodDeclaration(133) at 2", "Insert TextElement: <p>Note: not using an @AutoValue since it copies(21) into TagElement(22) at 1", "Insert SimpleName: type(55) into VariableDeclarationFragment(56) at 0", "Insert PrimitiveType: byte(60) into ArrayType: byte[](62) at 0", "Insert Dimension(61) into ArrayType: byte[](62) at 1", "Insert SimpleName: data(63) into VariableDeclarationFragment(64) at 0", "Insert SimpleName: numberOfFields(69) into VariableDeclarationFragment(70) at 0", "Insert SimpleType: TypeInfo(75) into SingleVariableDeclaration(77) at 0", "Insert SimpleName: type(76) into SingleVariableDeclaration(77) at 1", "Insert ArrayType: byte[](80) into SingleVariableDeclaration(82) at 0", "Insert SimpleName: data(81) into SingleVariableDeclaration(82) at 1", "Insert PrimitiveType: int(83) into SingleVariableDeclaration(85) at 0", "Insert SimpleName: numberOfFields(84) into SingleVariableDeclaration(85) at 1", "Insert ExpressionStatement(93) into Block(108) at 0", "Insert ExpressionStatement(101) into Block(108) at 1", "Insert ExpressionStatement(107) into Block(108) at 2", "Insert SimpleName: TypeInfo(110) into SimpleType: TypeInfo(111) at 0", "Insert ReturnStatement(114) into Block(115) at 0", "Insert TagElement(118) into Javadoc(119) at 0", "Insert ReturnStatement(125) into Block(126) at 0", "Insert ReturnStatement(131) into Block(132) at 0", "Insert VariableDeclarationStatement(154) into Block(185) at 0", "Insert ExpressionStatement(176) into Block(185) at 2", "Insert ExpressionStatement(184) into Block(185) at 3", "Insert SimpleName: TypeInfo(74) into SimpleType: TypeInfo(75) at 0", "Insert PrimitiveType: byte(78) into ArrayType: byte[](80) at 0", "Insert Dimension(79) into ArrayType: byte[](80) at 1", "Insert Assignment: =(92) into ExpressionStatement(93) at 0", "Insert Assignment: =(100) into ExpressionStatement(101) at 0", "Insert Assignment: =(106) into ExpressionStatement(107) at 0", "Insert SimpleName: type(113) into ReturnStatement(114) at 0", "Insert TextElement: Caution, this returns the underlying array and is mutable.(117) into TagElement(118) at 0", "Insert SimpleName: data(124) into ReturnStatement(125) at 0", "Insert SimpleName: numberOfFields(130) into ReturnStatement(131) at 0", "Insert SimpleType: ClassNode(148) into VariableDeclarationStatement(154) at 0", "Insert VariableDeclarationFragment(153) into VariableDeclarationStatement(154) at 1", "Insert MethodInvocation(175) into ExpressionStatement(176) at 0", "Insert MethodInvocation(183) into ExpressionStatement(184) at 0", "Update SimpleType: AutoValue_ClassData(42) to ClassData", "Insert FieldAccess(88) into Assignment: =(92) at 0", "Insert MethodInvocation(91) into Assignment: =(92) at 1", "Insert FieldAccess(96) into Assignment: =(100) at 0", "Insert MethodInvocation(99) into Assignment: =(100) at 1", "Insert FieldAccess(104) into Assignment: =(106) at 0", "Insert SimpleName: numberOfFields(105) into Assignment: =(106) at 1", "Insert SimpleName: ClassNode(147) into SimpleType: ClassNode(148) at 0", "Insert SimpleName: cv(149) into VariableDeclarationFragment(153) at 0", "Move ClassInstanceCreation(88) into VariableDeclarationFragment(153) at 1", "Insert SimpleName: checkState(168) into MethodInvocation(175) at 0", "Insert MethodInvocation(174) into MethodInvocation(175) at 1", "Insert SimpleName: checkState(177) into MethodInvocation(183) at 0", "Insert InfixExpression: ==(182) into MethodInvocation(183) at 1", "Update SimpleName: AutoValue_ClassData(41) to ClassData", "Insert ThisExpression(86) into FieldAccess(88) at 0", "Insert SimpleName: type(87) into FieldAccess(88) at 1", "Insert SimpleName: checkNotNull(89) into MethodInvocation(91) at 0", "Insert SimpleName: type(90) into MethodInvocation(91) at 1", "Insert ThisExpression(94) into FieldAccess(96) at 0", "Insert SimpleName: data(95) into FieldAccess(96) at 1", "Insert SimpleName: checkNotNull(97) into MethodInvocation(99) at 0", "Insert SimpleName: data(98) into MethodInvocation(99) at 1", "Insert ThisExpression(102) into FieldAccess(104) at 0", "Insert SimpleName: numberOfFields(103) into FieldAccess(104) at 1", "Move SimpleType: ClassReader(111) into ClassInstanceCreation(158) at 0", "Insert SimpleName: data(157) into ClassInstanceCreation(158) at 1", "Insert SimpleName: cv(162) into ClassInstanceCreation(164) at 1", "Insert MethodInvocation(171) into MethodInvocation(174) at 0", "Insert SimpleName: equals(172) into MethodInvocation(174) at 1", "Insert QualifiedName: cv.name(173) into MethodInvocation(174) at 2", "Insert SimpleName: numberOfFields(178) into InfixExpression: ==(182) at 0", "Insert MethodInvocation(181) into InfixExpression: ==(182) at 1", "Move SimpleType: ClassReader(79) into ClassInstanceCreation(204) at 0", "Insert SimpleName: data(203) into ClassInstanceCreation(204) at 1", "Insert SimpleName: type(169) into MethodInvocation(171) at 0", "Insert SimpleName: internalName(170) into MethodInvocation(171) at 1", "Insert QualifiedName: cv.fields(179) into MethodInvocation(181) at 0", "Insert SimpleName: size(180) into MethodInvocation(181) at 1", "Delete SimpleName: AutoValue(21)", "Delete MarkerAnnotation(22)", "Delete Modifier: abstract(50)", "Delete SimpleName: type(53)", "Delete MethodDeclaration(54)", "Delete Modifier: abstract(55)", "Delete SimpleName: data(59)", "Delete MethodDeclaration(60)", "Delete PrimitiveType: int(62)", "Delete SimpleName: numberOfFields(63)", "Delete SimpleName: data(80)", "Delete MethodInvocation(81)", "Delete SimpleName: data(112)", "Delete MethodInvocation(113)"]}}, {"CompiledTemplateMetadata_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 3"]}, {"root": "UPDATE from com.google.template.soy.data.SoyRecord to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_RECORD_TYPE", "operations": ["UPD QualifiedName: com.google.template.soy.data.SoyRecord from com.google.template.soy.data.SoyRecord to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_RECORD_TYPE"]}, {"root": "INS SimpleName: SOY_RECORD_TYPE to MethodInvocation at 3", "operations": ["INS SimpleName: SOY_RECORD_TYPE to MethodInvocation at 3"]}, {"root": "INS SimpleName: SOY_RECORD_TYPE to MethodInvocation at 4", "operations": ["INS SimpleName: SOY_RECORD_TYPE to MethodInvocation at 4"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleType: SoyRecord", "DEL SimpleName: getType", "DEL SimpleName: SoyRecord", "DEL SimpleName: Type", "DEL MethodInvocation", "DEL TypeLiteral"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleType: SoyRecord", "DEL SimpleName: getType", "DEL TypeLiteral", "DEL SimpleName: Type", "DEL SimpleName: SoyRecord", "DEL MethodInvocation"]}]}}, {"CompiledTemplateMetadata_diff": {"operations": ["Move ImportDeclaration(3) into CompilationUnit(218) at 3", "Update QualifiedName: com.google.template.soy.data.SoyRecord(4) to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_RECORD_TYPE", "Insert SimpleName: SOY_RECORD_TYPE(50) into MethodInvocation(52) at 3", "Insert SimpleName: SOY_RECORD_TYPE(51) into MethodInvocation(52) at 4", "Delete SimpleName: Type(50)", "Delete SimpleName: getType(51)", "Delete SimpleName: SoyRecord(52)", "Delete SimpleType: SoyRecord(53)", "Delete TypeLiteral(54)", "Delete MethodInvocation(55)", "Delete SimpleName: Type(56)", "Delete SimpleName: getType(57)", "Delete SimpleName: SoyRecord(58)", "Delete SimpleType: SoyRecord(59)", "Delete TypeLiteral(60)", "Delete MethodInvocation(61)"]}}, {"DetachState_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 8", "MOV ImportDeclaration to CompilationUnit at 8", "MOV ImportDeclaration to CompilationUnit at 8"]}, {"root": "UPDATE from com.google.template.soy.data.SoyValue to com.google.template.soy.jbcsrc.BytecodeUtils.RENDER_RESULT_TYPE", "operations": ["UPD QualifiedName: com.google.template.soy.data.SoyValue from com.google.template.soy.data.SoyValue to com.google.template.soy.jbcsrc.BytecodeUtils.RENDER_RESULT_TYPE"]}, {"root": "UPDATE from com.google.template.soy.data.SoyValueProvider to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_VALUE_PROVIDER_TYPE", "operations": ["UPD QualifiedName: com.google.template.soy.data.SoyValueProvider from com.google.template.soy.data.SoyValueProvider to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_VALUE_PROVIDER_TYPE"]}, {"root": "UPDATE from com.google.template.soy.jbcsrc.api.RenderResult to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_VALUE_TYPE", "operations": ["UPD QualifiedName: com.google.template.soy.jbcsrc.api.RenderResult from com.google.template.soy.jbcsrc.api.RenderResult to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_VALUE_TYPE"]}, {"root": "INS SimpleName: SOY_VALUE_PROVIDER_TYPE to MethodInvocation at 2", "operations": ["INS SimpleName: SOY_VALUE_PROVIDER_TYPE to MethodInvocation at 2"]}, {"root": "INS SimpleName: SOY_VALUE_TYPE to ClassInstanceCreation at 1", "operations": ["INS SimpleName: SOY_VALUE_TYPE to ClassInstanceCreation at 1"]}, {"root": "INS SimpleName: RENDER_RESULT_TYPE to MethodInvocation at 2", "operations": ["INS SimpleName: RENDER_RESULT_TYPE to MethodInvocation at 2"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleType: SoyValueProvider", "DEL SimpleName: Type", "DEL TypeLiteral", "DEL SimpleName: SoyValueProvider", "DEL SimpleName: getType"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: SoyValue", "DEL SimpleName: Type", "DEL MethodInvocation", "DEL TypeLiteral", "DEL SimpleName: getType", "DEL SimpleType: SoyValue"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleType: RenderResult", "DEL MethodInvocation", "DEL SimpleName: Type", "DEL SimpleName: RenderResult", "DEL SimpleName: getType", "DEL TypeLiteral"]}]}}, {"DetachState_diff": {"operations": ["Move ImportDeclaration(5) into CompilationUnit(956) at 8", "Move ImportDeclaration(7) into CompilationUnit(956) at 8", "Move ImportDeclaration(13) into CompilationUnit(956) at 8", "Update QualifiedName: com.google.template.soy.data.SoyValue(8) to com.google.template.soy.jbcsrc.BytecodeUtils.RENDER_RESULT_TYPE", "Update QualifiedName: com.google.template.soy.data.SoyValueProvider(10) to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_VALUE_PROVIDER_TYPE", "Update QualifiedName: com.google.template.soy.jbcsrc.api.RenderResult(14) to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_VALUE_TYPE", "Insert SimpleName: SOY_VALUE_PROVIDER_TYPE(210) into MethodInvocation(211) at 2", "Insert SimpleName: SOY_VALUE_TYPE(215) into ClassInstanceCreation(287) at 1", "Insert SimpleName: RENDER_RESULT_TYPE(554) into MethodInvocation(555) at 2", "Delete SimpleName: Type(210)", "Delete SimpleName: getType(211)", "Delete SimpleName: SoyValueProvider(212)", "Delete SimpleType: SoyValueProvider(213)", "Delete TypeLiteral(214)", "Delete MethodInvocation(215)", "Delete SimpleName: Type(220)", "Delete SimpleName: getType(221)", "Delete SimpleName: SoyValue(222)", "Delete SimpleType: SoyValue(223)", "Delete TypeLiteral(224)", "Delete MethodInvocation(225)", "Delete SimpleName: Type(564)", "Delete SimpleName: getType(565)", "Delete SimpleName: RenderResult(566)", "Delete SimpleType: RenderResult(567)", "Delete TypeLiteral(568)", "Delete MethodInvocation(569)"]}}, {"Expression_cluster": {"actions": [{"root": "INS Block to MethodDeclaration at 6", "operations": ["INS Block to MethodDeclaration at 6", "INS IfStatement to Block at 0", "INS QualifiedName: Flags.DEBUG to IfStatement at 0"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS IfStatement to Block at 0", "INS Block to MethodDeclaration at 6", "INS QualifiedName: Flags.DEBUG to IfStatement at 0"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS QualifiedName: Flags.DEBUG to IfStatement at 0", "INS Block to MethodDeclaration at 5", "INS IfStatement to Block at 0"]}, {"root": "INS Block to MethodDeclaration at 7", "operations": ["INS IfStatement to Block at 0", "INS QualifiedName: Flags.DEBUG to IfStatement at 0", "INS Block to MethodDeclaration at 7"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"Expression_diff": {"operations": ["Insert Block(445) into MethodDeclaration(446) at 6", "Insert Block(517) into MethodDeclaration(518) at 6", "Insert Block(702) into MethodDeclaration(703) at 5", "Insert Block(771) into MethodDeclaration(772) at 7", "Insert IfStatement(444) into Block(445) at 0", "Insert IfStatement(516) into Block(517) at 0", "Insert IfStatement(701) into Block(702) at 0", "Insert IfStatement(770) into Block(771) at 0", "Insert QualifiedName: Flags.DEBUG(434) into IfStatement(444) at 0", "Move Block(442) into IfStatement(444) at 1", "Insert QualifiedName: Flags.DEBUG(468) into IfStatement(516) at 0", "Move Block(511) into IfStatement(516) at 1", "Insert QualifiedName: Flags.DEBUG(694) into IfStatement(701) at 0", "Move Block(693) into IfStatement(701) at 1", "Insert QualifiedName: Flags.DEBUG(725) into IfStatement(770) at 0", "Move Block(759) into IfStatement(770) at 1"]}}, {"ExpressionCompiler_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.NULL_POINTER_EXCEPTION_TYPE to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS SimpleName: NULL_POINTER_EXCEPTION_TYPE to MethodInvocation at 2", "operations": ["INS SimpleName: NULL_POINTER_EXCEPTION_TYPE to MethodInvocation at 2"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: NullPointerException", "DEL SimpleName: Type", "DEL SimpleType: NullPointerException", "DEL TypeLiteral", "DEL SimpleName: getType"]}]}}, {"ExpressionCompiler_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(3999) at 2", "Insert QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.NULL_POINTER_EXCEPTION_TYPE(4) into ImportDeclaration(5) at 0", "Insert SimpleName: NULL_POINTER_EXCEPTION_TYPE(3342) into MethodInvocation(3349) at 2", "Delete SimpleName: Type(3340)", "Delete SimpleName: getType(3341)", "Delete SimpleName: NullPointerException(3342)", "Delete SimpleType: NullPointerException(3343)", "Delete TypeLiteral(3344)", "Delete MethodInvocation(3345)"]}}, {"ExpressionDetacher_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 2"]}, {"root": "UPDATE from com.google.template.soy.data.SoyValue to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_VALUE_PROVIDER_TYPE", "operations": ["UPD QualifiedName: com.google.template.soy.data.SoyValue from com.google.template.soy.data.SoyValue to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_VALUE_PROVIDER_TYPE"]}, {"root": "UPDATE from org.objectweb.asm.Type to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_VALUE_TYPE", "operations": ["UPD QualifiedName: org.objectweb.asm.Type from org.objectweb.asm.Type to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_VALUE_TYPE"]}, {"root": "INS SimpleName: SOY_VALUE_PROVIDER_TYPE to MethodInvocation at 2", "operations": ["INS SimpleName: SOY_VALUE_PROVIDER_TYPE to MethodInvocation at 2"]}, {"root": "INS SimpleName: SOY_VALUE_TYPE to ClassInstanceCreation at 1", "operations": ["INS SimpleName: SOY_VALUE_TYPE to ClassInstanceCreation at 1"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL TypeLiteral", "DEL SimpleType: SoyValueProvider", "DEL SimpleName: SoyValueProvider", "DEL SimpleName: Type", "DEL SimpleName: getType"]}, {"root": "DEL MethodInvocation", "operations": ["DEL TypeLiteral", "DEL MethodInvocation", "DEL SimpleName: Type", "DEL SimpleName: getType", "DEL SimpleType: SoyValue", "DEL SimpleName: SoyValue"]}]}}, {"ExpressionDetacher_diff": {"operations": ["Move ImportDeclaration(13) into CompilationUnit(194) at 2", "Update QualifiedName: com.google.template.soy.data.SoyValue(2) to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_VALUE_PROVIDER_TYPE", "Update QualifiedName: org.objectweb.asm.Type(12) to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_VALUE_TYPE", "Insert SimpleName: SOY_VALUE_PROVIDER_TYPE(116) into MethodInvocation(117) at 2", "Insert SimpleName: SOY_VALUE_TYPE(121) into ClassInstanceCreation(188) at 1", "Delete SimpleName: Type(116)", "Delete SimpleName: getType(117)", "Delete SimpleName: SoyValueProvider(118)", "Delete SimpleType: SoyValueProvider(119)", "Delete TypeLiteral(120)", "Delete MethodInvocation(121)", "Delete SimpleName: Type(126)", "Delete SimpleName: getType(127)", "Delete SimpleName: SoyValue(128)", "Delete SimpleType: SoyValue(129)", "Delete TypeLiteral(130)", "Delete MethodInvocation(131)"]}}, {"LazyClosureCompiler_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.ADVISING_APPENDABLE_TYPE to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.CONTENT_KIND_TYPE to ImportDeclaration at 0"]}, {"root": "INS SimpleName: ADVISING_APPENDABLE_TYPE to MethodInvocation at 3", "operations": ["INS SimpleName: ADVISING_APPENDABLE_TYPE to MethodInvocation at 3"]}, {"root": "INS SimpleName: CONTENT_KIND_TYPE to MethodInvocation at 2", "operations": ["INS SimpleName: CONTENT_KIND_TYPE to MethodInvocation at 2"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: Type", "DEL MethodInvocation", "DEL SimpleType: AdvisingAppendable", "DEL SimpleName: AdvisingAppendable", "DEL TypeLiteral", "DEL SimpleName: getType"]}, {"root": "DEL TypeLiteral", "operations": ["DEL SimpleType: ContentKind", "DEL SimpleName: ContentKind", "DEL TypeLiteral"]}]}}, {"LazyClosureCompiler_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(2250) at 2", "Insert ImportDeclaration(7) into CompilationUnit(2250) at 3", "Insert QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.ADVISING_APPENDABLE_TYPE(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.CONTENT_KIND_TYPE(6) into ImportDeclaration(7) at 0", "Insert SimpleName: ADVISING_APPENDABLE_TYPE(1127) into MethodInvocation(1130) at 3", "Insert SimpleName: CONTENT_KIND_TYPE(1272) into MethodInvocation(1273) at 2", "Delete SimpleName: Type(1123)", "Delete SimpleName: getType(1124)", "Delete SimpleName: AdvisingAppendable(1125)", "Delete SimpleType: AdvisingAppendable(1126)", "Delete TypeLiteral(1127)", "Delete MethodInvocation(1128)", "Delete SimpleName: ContentKind(1273)", "Delete SimpleType: ContentKind(1274)", "Delete TypeLiteral(1275)"]}}, {"SoyClassWriter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.OBJECT to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ConditionalExpression to SuperConstructorInvocation at 1", "operations": ["INS SimpleName: writer to ConditionalExpression at 2", "INS QualifiedName: Flags.DEBUG to ConditionalExpression at 0", "INS ConditionalExpression to SuperConstructorInvocation at 1"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV ClassInstanceCreation to ConditionalExpression at 1"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: final", "DEL FieldDeclaration", "DEL Modifier: static", "DEL SimpleName: OBJECT", "DEL MethodInvocation", "DEL SimpleName: Object", "DEL VariableDeclarationFragment", "DEL SimpleName: TypeInfo", "DEL SimpleName: TypeInfo", "DEL SimpleType: TypeInfo", "DEL SimpleName: create", "DEL TypeLiteral", "DEL SimpleType: Object"]}]}}, {"SoyClassWriter_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(448) at 2", "Insert QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.OBJECT(4) into ImportDeclaration(5) at 0", "Insert ConditionalExpression(244) into SuperConstructorInvocation(245) at 1", "Insert QualifiedName: Flags.DEBUG(237) into ConditionalExpression(244) at 0", "Move ClassInstanceCreation(252) into ConditionalExpression(244) at 1", "Insert SimpleName: writer(243) into ConditionalExpression(244) at 2", "Delete Modifier: static(39)", "Delete Modifier: final(40)", "Delete SimpleName: TypeInfo(41)", "Delete SimpleType: TypeInfo(42)", "Delete SimpleName: OBJECT(43)", "Delete SimpleName: TypeInfo(44)", "Delete SimpleName: create(45)", "Delete SimpleName: Object(46)", "Delete SimpleType: Object(47)", "Delete TypeLiteral(48)", "Delete MethodInvocation(49)", "Delete VariableDeclarationFragment(50)", "Delete FieldDeclaration(51)"]}}, {"SoyExpression_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.SOY_LIST_TYPE to ImportDeclaration at 0"]}, {"root": "UPDATE from com.google.template.soy.data.SoyList to com.google.template.soy.jbcsrc.BytecodeUtils.OBJECT", "operations": ["UPD QualifiedName: com.google.template.soy.data.SoyList from com.google.template.soy.data.SoyList to com.google.template.soy.jbcsrc.BytecodeUtils.OBJECT"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 44", "operations": ["INS SimpleName: Optional to MethodInvocation at 0", "INS SimpleName: ATTRIBUTES to SwitchCase at 0", "INS TypeLiteral to MethodInvocation at 1", "INS SwitchCase to SwitchStatement at 25", "INS TextElement: A generic unbox operator.  Doesn't always work since not every type has a canonical unboxed to TagElement at 0", "INS ReturnStatement to SwitchStatement at 15", "INS Block to MethodDeclaration at 3", "INS TextElement: representation and we don't always have enough type information. to TagElement at 1", "INS SimpleName: of to MethodInvocation at 1", "INS SimpleName: soyType to MethodInvocation at 0", "INS SimpleName: AssertionError to SimpleType: AssertionError at 0", "INS SimpleName: ENUM to SwitchCase at 0", "INS SimpleName: isBoxed to MethodInvocation at 0", "INS SimpleName: absent to MethodInvocation at 1", "INS SwitchCase to SwitchStatement at 10", "INS SimpleName: CSS to SwitchCase at 0", "INS SimpleName: INT to SwitchCase at 0", "INS SimpleName: FLOAT to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 3", "INS ThrowStatement to SwitchStatement at 29", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: unboxAs to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 44", "INS ReturnStatement to SwitchStatement at 6", "INS TypeLiteral to MethodInvocation at 1", "INS SimpleName: MAP to SwitchCase at 0", "INS MethodInvocation to ReturnStatement at 0", "INS TypeLiteral to MethodInvocation at 1", "INS SimpleName: of to MethodInvocation at 1", "INS SimpleName: UNION to SwitchCase at 0", "INS SimpleName: of to MethodInvocation at 1", "INS SimpleType: AssertionError to ClassInstanceCreation at 0", "INS SimpleName: HTML to SwitchCase at 0", "INS SimpleName: tryUnbox to MethodDeclaration at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SwitchCase to SwitchStatement at 16", "INS SimpleName: SoyExpression to SimpleType: SoyExpression at 0", "INS SwitchCase to SwitchStatement at 17", "INS SwitchCase to SwitchStatement at 7", "INS PrimitiveType: boolean to TypeLiteral at 0", "INS TypeLiteral to MethodInvocation at 1", "INS SimpleName: Optional to MethodInvocation at 0", "INS SwitchCase to SwitchStatement at 12", "INS SimpleName: absent to MethodInvocation at 1", "INS ThisExpression to MethodInvocation at 2", "INS SimpleName: ANY to SwitchCase at 0", "INS ReturnStatement to SwitchStatement at 13", "INS SimpleName: getKind to MethodInvocation at 1", "INS SimpleName: unboxAs to MethodInvocation at 0", "INS SwitchCase to SwitchStatement at 14", "INS SimpleName: of to MethodInvocation at 1", "INS TypeLiteral to MethodInvocation at 1", "INS TagElement to Javadoc at 0", "INS MethodInvocation to SwitchStatement at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: BOOL to SwitchCase at 0", "INS SimpleName: ERROR to SwitchCase at 0", "INS SimpleName: unboxAs to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SwitchCase to SwitchStatement at 4", "INS SimpleName: Optional to MethodInvocation at 0", "INS SimpleName: LIST to SwitchCase at 0", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: Optional to SimpleType: Optional at 0", "INS ReturnStatement to SwitchStatement at 24", "INS SwitchCase to SwitchStatement at 11", "INS SimpleName: JS to SwitchCase at 0", "INS TextElement: <p>For example, unboxed 'int' is always a java  to TagElement at 2", "INS SwitchCase to SwitchStatement at 2", "INS SimpleType: String to TypeLiteral at 0", "INS SimpleName: String to SimpleType: String at 0", "INS TagElement: @code to TagElement at 3", "INS SimpleName: RECORD to SwitchCase at 0", "INS SimpleName: of to MethodInvocation at 1", "INS SwitchCase to SwitchStatement at 19", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: UNKNOWN to SwitchCase at 0", "INS SimpleName: Optional to MethodInvocation at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS SwitchStatement to Block at 1", "INS SwitchCase to SwitchStatement at 5", "INS ReturnStatement to SwitchStatement at 18", "INS SwitchCase to SwitchStatement at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: URI to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 23", "INS SimpleName: Optional to MethodInvocation at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: NULL to SwitchCase at 0", "INS Block to IfStatement at 1", "INS SimpleName: unboxAs to MethodInvocation at 0", "INS SwitchCase to SwitchStatement at 27", "INS SimpleName: of to MethodInvocation at 1", "INS SimpleType: List to TypeLiteral at 0", "INS IfStatement to Block at 0", "INS Javadoc to MethodDeclaration at 0", "INS SwitchCase to SwitchStatement at 8", "INS SwitchCase to SwitchStatement at 28", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: SoyExpression to ParameterizedType: Optional<SoyExpression> at 1", "INS SimpleName: NULL to MethodInvocation at 2", "INS SimpleName: Optional to MethodInvocation at 0", "INS ReturnStatement to SwitchStatement at 22", "INS SimpleType: Optional to ParameterizedType: Optional<SoyExpression> at 0", "INS ReturnStatement to SwitchStatement at 26", "INS TextElement: , but unboxed '?' is undefined. to TagElement at 4", "INS ParameterizedType: Optional<SoyExpression> to MethodDeclaration at 1", "INS SimpleName: Optional to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: STRING to SwitchCase at 0", "INS PrimitiveType: long to TypeLiteral at 0", "INS SimpleName: OBJECT to SwitchCase at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SwitchCase to SwitchStatement at 9", "INS SimpleName: unboxAs to MethodInvocation at 0", "INS ReturnStatement to SwitchStatement at 20", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: Optional to MethodInvocation at 0", "INS SwitchCase to SwitchStatement at 21", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: Optional to MethodInvocation at 0", "INS TextElement:  long to TagElement: @code at 0", "INS SimpleName: of to MethodInvocation at 1", "INS PrimitiveType: double to TypeLiteral at 0"]}, {"root": "UPDATE from Type to OBJECT", "operations": ["UPD SimpleName: Type from Type to OBJECT"]}, {"root": "UPDATE from getType to type", "operations": ["UPD SimpleName: getType from getType to type"]}, {"root": "INS SimpleName: SOY_LIST_TYPE to MethodInvocation at 2", "operations": ["INS SimpleName: SOY_LIST_TYPE to MethodInvocation at 2"]}, {"root": "DEL TypeLiteral", "operations": ["DEL SimpleName: Object", "DEL SimpleType: Object", "DEL TypeLiteral"]}, {"root": "DEL MethodInvocation", "operations": ["DEL TypeLiteral", "DEL MethodInvocation", "DEL SimpleType: SoyList", "DEL SimpleName: SoyList", "DEL SimpleName: Type", "DEL SimpleName: getType"]}]}}, {"SoyExpression_diff": {"operations": ["Move ImportDeclaration(19) into CompilationUnit(2319) at 2", "Insert ImportDeclaration(7) into CompilationUnit(2319) at 3", "Update QualifiedName: com.google.template.soy.data.SoyList(18) to com.google.template.soy.jbcsrc.BytecodeUtils.OBJECT", "Insert QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.SOY_LIST_TYPE(6) into ImportDeclaration(7) at 0", "Insert MethodDeclaration(1992) into TypeDeclaration: class(2318) at 44", "Insert Javadoc(1872) into MethodDeclaration(1992) at 0", "Insert ParameterizedType: Optional<SoyExpression>(1877) into MethodDeclaration(1992) at 1", "Insert SimpleName: tryUnbox(1878) into MethodDeclaration(1992) at 2", "Insert Block(1991) into MethodDeclaration(1992) at 3", "Insert TagElement(1871) into Javadoc(1872) at 0", "Insert SimpleType: Optional(1874) into ParameterizedType: Optional<SoyExpression>(1877) at 0", "Insert SimpleType: SoyExpression(1876) into ParameterizedType: Optional<SoyExpression>(1877) at 1", "Insert IfStatement(1888) into Block(1991) at 0", "Insert SwitchStatement(1990) into Block(1991) at 1", "Insert TextElement: A generic unbox operator.  Doesn't always work since not every type has a canonical unboxed(1865) into TagElement(1871) at 0", "Insert TextElement: representation and we don't always have enough type information.(1866) into TagElement(1871) at 1", "Insert TextElement: <p>For example, unboxed 'int' is always a java (1867) into TagElement(1871) at 2", "Insert TagElement: @code(1869) into TagElement(1871) at 3", "Insert TextElement: , but unboxed '?' is undefined.(1870) into TagElement(1871) at 4", "Insert SimpleName: Optional(1873) into SimpleType: Optional(1874) at 0", "Insert SimpleName: SoyExpression(1875) into SimpleType: SoyExpression(1876) at 0", "Insert PrefixExpression: !(1881) into IfStatement(1888) at 0", "Insert Block(1887) into IfStatement(1888) at 1", "Insert MethodInvocation(1891) into SwitchStatement(1990) at 0", "Insert SwitchCase(1893) into SwitchStatement(1990) at 1", "Insert SwitchCase(1895) into SwitchStatement(1990) at 2", "Insert SwitchCase(1897) into SwitchStatement(1990) at 3", "Insert SwitchCase(1899) into SwitchStatement(1990) at 4", "Insert SwitchCase(1901) into SwitchStatement(1990) at 5", "Insert ReturnStatement(1905) into SwitchStatement(1990) at 6", "Insert SwitchCase(1907) into SwitchStatement(1990) at 7", "Insert SwitchCase(1909) into SwitchStatement(1990) at 8", "Insert SwitchCase(1911) into SwitchStatement(1990) at 9", "Insert SwitchCase(1913) into SwitchStatement(1990) at 10", "Insert SwitchCase(1915) into SwitchStatement(1990) at 11", "Insert SwitchCase(1917) into SwitchStatement(1990) at 12", "Insert ReturnStatement(1926) into SwitchStatement(1990) at 13", "Insert SwitchCase(1928) into SwitchStatement(1990) at 14", "Insert ReturnStatement(1936) into SwitchStatement(1990) at 15", "Insert SwitchCase(1938) into SwitchStatement(1990) at 16", "Insert SwitchCase(1940) into SwitchStatement(1990) at 17", "Insert ReturnStatement(1948) into SwitchStatement(1990) at 18", "Insert SwitchCase(1950) into SwitchStatement(1990) at 19", "Insert ReturnStatement(1954) into SwitchStatement(1990) at 20", "Insert SwitchCase(1956) into SwitchStatement(1990) at 21", "Insert ReturnStatement(1964) into SwitchStatement(1990) at 22", "Insert SwitchCase(1966) into SwitchStatement(1990) at 23", "Insert ReturnStatement(1975) into SwitchStatement(1990) at 24", "Insert SwitchCase(1977) into SwitchStatement(1990) at 25", "Insert ReturnStatement(1982) into SwitchStatement(1990) at 26", "Insert SwitchCase(1984) into SwitchStatement(1990) at 27", "Insert SwitchCase(1985) into SwitchStatement(1990) at 28", "Insert ThrowStatement(1989) into SwitchStatement(1990) at 29", "Insert TextElement:  long(1868) into TagElement: @code(1869) at 0", "Insert MethodInvocation(1880) into PrefixExpression: !(1881) at 0", "Insert ReturnStatement(1886) into Block(1887) at 0", "Insert SimpleName: soyType(1889) into MethodInvocation(1891) at 0", "Insert SimpleName: getKind(1890) into MethodInvocation(1891) at 1", "Insert SimpleName: OBJECT(1892) into SwitchCase(1893) at 0", "Insert SimpleName: RECORD(1894) into SwitchCase(1895) at 0", "Insert SimpleName: UNKNOWN(1896) into SwitchCase(1897) at 0", "Insert SimpleName: ANY(1898) into SwitchCase(1899) at 0", "Insert SimpleName: MAP(1900) into SwitchCase(1901) at 0", "Insert MethodInvocation(1904) into ReturnStatement(1905) at 0", "Insert SimpleName: CSS(1906) into SwitchCase(1907) at 0", "Insert SimpleName: ATTRIBUTES(1908) into SwitchCase(1909) at 0", "Insert SimpleName: HTML(1910) into SwitchCase(1911) at 0", "Insert SimpleName: JS(1912) into SwitchCase(1913) at 0", "Insert SimpleName: URI(1914) into SwitchCase(1915) at 0", "Insert SimpleName: STRING(1916) into SwitchCase(1917) at 0", "Insert MethodInvocation(1925) into ReturnStatement(1926) at 0", "Insert SimpleName: BOOL(1927) into SwitchCase(1928) at 0", "Insert MethodInvocation(1935) into ReturnStatement(1936) at 0", "Insert SimpleName: ENUM(1937) into SwitchCase(1938) at 0", "Insert SimpleName: INT(1939) into SwitchCase(1940) at 0", "Insert MethodInvocation(1947) into ReturnStatement(1948) at 0", "Insert SimpleName: UNION(1949) into SwitchCase(1950) at 0", "Insert MethodInvocation(1953) into ReturnStatement(1954) at 0", "Insert SimpleName: FLOAT(1955) into SwitchCase(1956) at 0", "Insert MethodInvocation(1963) into ReturnStatement(1964) at 0", "Insert SimpleName: LIST(1965) into SwitchCase(1966) at 0", "Insert MethodInvocation(1974) into ReturnStatement(1975) at 0", "Insert SimpleName: NULL(1976) into SwitchCase(1977) at 0", "Insert MethodInvocation(1981) into ReturnStatement(1982) at 0", "Insert SimpleName: ERROR(1983) into SwitchCase(1984) at 0", "Insert ClassInstanceCreation(1988) into ThrowStatement(1989) at 0", "Update SimpleName: Type(324) to OBJECT", "Update SimpleName: getType(325) to type", "Insert SimpleName: isBoxed(1879) into MethodInvocation(1880) at 0", "Insert MethodInvocation(1885) into ReturnStatement(1886) at 0", "Insert SimpleName: Optional(1902) into MethodInvocation(1904) at 0", "Insert SimpleName: absent(1903) into MethodInvocation(1904) at 1", "Insert SimpleName: Optional(1918) into MethodInvocation(1925) at 0", "Insert SimpleName: of(1919) into MethodInvocation(1925) at 1", "Insert MethodInvocation(1924) into MethodInvocation(1925) at 2", "Insert SimpleName: Optional(1929) into MethodInvocation(1935) at 0", "Insert SimpleName: of(1930) into MethodInvocation(1935) at 1", "Insert MethodInvocation(1934) into MethodInvocation(1935) at 2", "Insert SimpleName: Optional(1941) into MethodInvocation(1947) at 0", "Insert SimpleName: of(1942) into MethodInvocation(1947) at 1", "Insert MethodInvocation(1946) into MethodInvocation(1947) at 2", "Insert SimpleName: Optional(1951) into MethodInvocation(1953) at 0", "Insert SimpleName: absent(1952) into MethodInvocation(1953) at 1", "Insert SimpleName: Optional(1957) into MethodInvocation(1963) at 0", "Insert SimpleName: of(1958) into MethodInvocation(1963) at 1", "Insert MethodInvocation(1962) into MethodInvocation(1963) at 2", "Insert SimpleName: Optional(1967) into MethodInvocation(1974) at 0", "Insert SimpleName: of(1968) into MethodInvocation(1974) at 1", "Insert MethodInvocation(1973) into MethodInvocation(1974) at 2", "Insert SimpleName: Optional(1978) into MethodInvocation(1981) at 0", "Insert SimpleName: of(1979) into MethodInvocation(1981) at 1", "Insert SimpleName: NULL(1980) into MethodInvocation(1981) at 2", "Insert SimpleType: AssertionError(1987) into ClassInstanceCreation(1988) at 0", "Insert SimpleName: SOY_LIST_TYPE(1728) into MethodInvocation(1729) at 2", "Insert SimpleName: Optional(1882) into MethodInvocation(1885) at 0", "Insert SimpleName: of(1883) into MethodInvocation(1885) at 1", "Insert ThisExpression(1884) into MethodInvocation(1885) at 2", "Insert SimpleName: unboxAs(1920) into MethodInvocation(1924) at 0", "Insert TypeLiteral(1923) into MethodInvocation(1924) at 1", "Insert SimpleName: unboxAs(1931) into MethodInvocation(1934) at 0", "Insert TypeLiteral(1933) into MethodInvocation(1934) at 1", "Insert SimpleName: unboxAs(1943) into MethodInvocation(1946) at 0", "Insert TypeLiteral(1945) into MethodInvocation(1946) at 1", "Insert SimpleName: unboxAs(1959) into MethodInvocation(1962) at 0", "Insert TypeLiteral(1961) into MethodInvocation(1962) at 1", "Insert SimpleName: unboxAs(1969) into MethodInvocation(1973) at 0", "Insert TypeLiteral(1972) into MethodInvocation(1973) at 1", "Insert SimpleName: AssertionError(1986) into SimpleType: AssertionError(1987) at 0", "Insert SimpleType: String(1922) into TypeLiteral(1923) at 0", "Insert PrimitiveType: boolean(1932) into TypeLiteral(1933) at 0", "Insert PrimitiveType: long(1944) into TypeLiteral(1945) at 0", "Insert PrimitiveType: double(1960) into TypeLiteral(1961) at 0", "Insert SimpleType: List(1971) into TypeLiteral(1972) at 0", "Insert SimpleName: String(1921) into SimpleType: String(1922) at 0", "Insert SimpleName: List(1970) into SimpleType: List(1971) at 0", "Delete SimpleName: Object(326)", "Delete SimpleType: Object(327)", "Delete TypeLiteral(328)", "Delete SimpleName: Type(1729)", "Delete SimpleName: getType(1730)", "Delete SimpleName: SoyList(1731)", "Delete SimpleType: SoyList(1732)", "Delete TypeLiteral(1733)", "Delete MethodInvocation(1734)"]}}, {"SoyNodeCompiler_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 3", "MOV ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.SOY_VALUE_PROVIDER_TYPE to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "UPDATE from com.google.template.soy.data.SoyValueProvider to com.google.template.soy.jbcsrc.BytecodeUtils.COMPILED_TEMPLATE_TYPE", "operations": ["UPD QualifiedName: com.google.template.soy.data.SoyValueProvider from com.google.template.soy.data.SoyValueProvider to com.google.template.soy.jbcsrc.BytecodeUtils.COMPILED_TEMPLATE_TYPE"]}, {"root": "UPDATE from com.google.template.soy.jbcsrc.api.CompiledTemplate to com.google.template.soy.jbcsrc.BytecodeUtils.CONTENT_KIND_TYPE", "operations": ["UPD QualifiedName: com.google.template.soy.jbcsrc.api.CompiledTemplate from com.google.template.soy.jbcsrc.api.CompiledTemplate to com.google.template.soy.jbcsrc.BytecodeUtils.CONTENT_KIND_TYPE"]}, {"root": "INS SimpleName: SOY_VALUE_PROVIDER_TYPE to MethodInvocation at 2", "operations": ["INS SimpleName: SOY_VALUE_PROVIDER_TYPE to MethodInvocation at 2"]}, {"root": "INS SimpleName: SOY_VALUE_PROVIDER_TYPE to MethodInvocation at 1", "operations": ["INS SimpleName: SOY_VALUE_PROVIDER_TYPE to MethodInvocation at 1"]}, {"root": "INS SimpleName: COMPILED_TEMPLATE_TYPE to MethodInvocation at 2", "operations": ["INS SimpleName: COMPILED_TEMPLATE_TYPE to MethodInvocation at 2"]}, {"root": "INS SimpleName: CONTENT_KIND_TYPE to MethodInvocation at 2", "operations": ["INS SimpleName: CONTENT_KIND_TYPE to MethodInvocation at 2"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: Type", "DEL SimpleName: getType", "DEL TypeLiteral", "DEL SimpleType: SoyValueProvider", "DEL MethodInvocation", "DEL SimpleName: SoyValueProvider"]}, {"root": "DEL TypeLiteral", "operations": ["DEL SimpleName: SoyValueProvider", "DEL TypeLiteral", "DEL SimpleType: SoyValueProvider"]}, {"root": "DEL TypeLiteral", "operations": ["DEL SimpleType: ContentKind", "DEL SimpleName: ContentKind", "DEL TypeLiteral"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral", "DEL SimpleName: CompiledTemplate", "DEL SimpleType: CompiledTemplate"]}]}}, {"SoyNodeCompiler_diff": {"operations": ["Move ImportDeclaration(27) into CompilationUnit(3331) at 2", "Move ImportDeclaration(49) into CompilationUnit(3331) at 3", "Insert ImportDeclaration(9) into CompilationUnit(3331) at 4", "Update QualifiedName: com.google.template.soy.data.SoyValueProvider(26) to com.google.template.soy.jbcsrc.BytecodeUtils.COMPILED_TEMPLATE_TYPE", "Update QualifiedName: com.google.template.soy.jbcsrc.api.CompiledTemplate(48) to com.google.template.soy.jbcsrc.BytecodeUtils.CONTENT_KIND_TYPE", "Insert QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.SOY_VALUE_PROVIDER_TYPE(8) into ImportDeclaration(9) at 0", "Insert SimpleName: SOY_VALUE_PROVIDER_TYPE(1652) into MethodInvocation(1653) at 2", "Insert SimpleName: SOY_VALUE_PROVIDER_TYPE(2108) into MethodInvocation(2109) at 1", "Insert SimpleName: COMPILED_TEMPLATE_TYPE(2772) into MethodInvocation(2773) at 2", "Insert SimpleName: CONTENT_KIND_TYPE(2712) into MethodInvocation(2713) at 2", "Delete SimpleName: Type(1650)", "Delete SimpleName: getType(1651)", "Delete SimpleName: SoyValueProvider(1652)", "Delete SimpleType: SoyValueProvider(1653)", "Delete TypeLiteral(1654)", "Delete MethodInvocation(1655)", "Delete SimpleName: SoyValueProvider(2111)", "Delete SimpleType: SoyValueProvider(2112)", "Delete TypeLiteral(2113)", "Delete SimpleName: ContentKind(2717)", "Delete SimpleType: ContentKind(2718)", "Delete TypeLiteral(2719)", "Delete SimpleName: CompiledTemplate(2779)", "Delete SimpleType: CompiledTemplate(2780)", "Delete TypeLiteral(2781)"]}}, {"Statement_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.THROWABLE_TYPE to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: java.io.IOException to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 4", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: private to FieldDeclaration at 0", "INS MethodInvocation to ArrayInitializer at 0", "INS SimpleName: getType to MethodInvocation at 1", "INS Modifier: final to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS SimpleName: IO_EXCEPTION_ARRAY to VariableDeclarationFragment at 0", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS SimpleName: Type to MethodInvocation at 0", "INS SimpleType: IOException to TypeLiteral at 0", "INS SimpleType: Type to ArrayType: Type[] at 0", "INS SimpleName: Type to SimpleType: Type at 0", "INS TypeLiteral to MethodInvocation at 2", "INS ArrayType: Type[] to FieldDeclaration at 3", "INS Dimension to ArrayType: Type[] at 1", "INS ArrayInitializer to ArrayCreation at 1", "INS Modifier: static to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS Modifier: final to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: writeIOExceptionMethod to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 13"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV Block to MethodDeclaration at 7"]}, {"root": "MOVE from ArrayCreation", "operations": ["MOV ArrayType: Type[] to ArrayCreation at 0"]}, {"root": "UPDATE from Type to THROWABLE_TYPE", "operations": ["UPD SimpleName: Type from Type to THROWABLE_TYPE"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Type to MethodInvocation at 2"]}, {"root": "INS SimpleName: IO_EXCEPTION_ARRAY to ClassInstanceCreation at 3", "operations": ["INS SimpleName: IO_EXCEPTION_ARRAY to ClassInstanceCreation at 3"]}, {"root": "UPDATE from Throwable to IOException", "operations": ["UPD SimpleName: Throwable from Throwable to IOException"]}, {"root": "MOVE from SimpleType: IOException", "operations": ["MOV SimpleName: Throwable to SimpleType: IOException at 0"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getType", "DEL SimpleType: Throwable", "DEL TypeLiteral", "DEL MethodInvocation", "DEL SimpleName: Throwable"]}, {"root": "DEL TagElement: @param", "operations": ["DEL SimpleName: exception", "DEL TextElement:  A checked exception to add to the method signature", "DEL TagElement: @param"]}, {"root": "DEL ArrayCreation", "operations": ["DEL SimpleName: exception", "DEL SimpleName: Type", "DEL ArrayInitializer", "DEL MethodInvocation", "DEL SimpleName: getType", "DEL ArrayCreation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ParameterizedType: Class<? extends Throwable>", "DEL SingleVariableDeclaration", "DEL SimpleType: Throwable", "DEL SimpleName: Class", "DEL MethodDeclaration", "DEL PrimitiveType: void", "DEL SimpleName: exception", "DEL WildcardType: ? extends Throwable", "DEL SimpleName: writeMethod", "DEL SimpleType: Class", "DEL Modifier: final"]}]}}, {"Statement_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(470) at 2", "Insert ImportDeclaration(17) into CompilationUnit(470) at 8", "Insert QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.THROWABLE_TYPE(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: java.io.IOException(16) into ImportDeclaration(17) at 0", "Insert FieldDeclaration(59) into TypeDeclaration: class(469) at 4", "Insert MethodDeclaration(328) into TypeDeclaration: class(469) at 13", "Insert Modifier: private(38) into FieldDeclaration(59) at 0", "Insert Modifier: static(39) into FieldDeclaration(59) at 1", "Insert Modifier: final(40) into FieldDeclaration(59) at 2", "Insert ArrayType: Type[](44) into FieldDeclaration(59) at 3", "Insert VariableDeclarationFragment(58) into FieldDeclaration(59) at 4", "Move Javadoc(284) into MethodDeclaration(328) at 0", "Insert Modifier: final(303) into MethodDeclaration(328) at 1", "Insert PrimitiveType: void(304) into MethodDeclaration(328) at 2", "Insert SimpleName: writeIOExceptionMethod(305) into MethodDeclaration(328) at 3", "Move SingleVariableDeclaration(290) into MethodDeclaration(328) at 4", "Move SingleVariableDeclaration(294) into MethodDeclaration(328) at 5", "Move SingleVariableDeclaration(306) into MethodDeclaration(328) at 6", "Move Block(326) into MethodDeclaration(328) at 7", "Insert SimpleType: Type(42) into ArrayType: Type[](44) at 0", "Insert Dimension(43) into ArrayType: Type[](44) at 1", "Insert SimpleName: IO_EXCEPTION_ARRAY(45) into VariableDeclarationFragment(58) at 0", "Insert ArrayCreation(57) into VariableDeclarationFragment(58) at 1", "Insert SimpleName: Type(41) into SimpleType: Type(42) at 0", "Move ArrayType: Type[](315) into ArrayCreation(57) at 0", "Insert ArrayInitializer(56) into ArrayCreation(57) at 1", "Insert MethodInvocation(55) into ArrayInitializer(56) at 0", "Update SimpleName: Type(110) to THROWABLE_TYPE", "Move SimpleName: Type(110) into MethodInvocation(137) at 2", "Insert SimpleName: Type(50) into MethodInvocation(55) at 0", "Insert SimpleName: getType(51) into MethodInvocation(55) at 1", "Insert TypeLiteral(54) into MethodInvocation(55) at 2", "Insert SimpleName: IO_EXCEPTION_ARRAY(322) into ClassInstanceCreation(324) at 3", "Insert SimpleType: IOException(53) into TypeLiteral(54) at 0", "Update SimpleName: Throwable(297) to IOException", "Move SimpleName: Throwable(297) into SimpleType: IOException(53) at 0", "Delete SimpleName: getType(111)", "Delete SimpleName: Throwable(112)", "Delete SimpleType: Throwable(113)", "Delete TypeLiteral(114)", "Delete MethodInvocation(115)", "Delete SimpleName: exception(278)", "Delete TextElement:  A checked exception to add to the method signature(279)", "Delete TagElement: @param(280)", "Delete SimpleName: Type(316)", "Delete SimpleName: getType(317)", "Delete SimpleName: exception(318)", "Delete MethodInvocation(319)", "Delete ArrayInitializer(320)", "Delete ArrayCreation(321)", "Delete Modifier: final(285)", "Delete PrimitiveType: void(286)", "Delete SimpleName: writeMethod(287)", "Delete SimpleName: Class(295)", "Delete SimpleType: Class(296)", "Delete SimpleType: Throwable(298)", "Delete WildcardType: ? extends Throwable(299)", "Delete ParameterizedType: Class<? extends Throwable>(300)", "Delete SimpleName: exception(301)", "Delete SingleVariableDeclaration(302)", "Delete MethodDeclaration(327)"]}}, {"TemplateCompiler_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 2", "MOV ImportDeclaration to CompilationUnit at 3", "MOV ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.ADVISING_APPENDABLE_TYPE to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.SOY_RECORD_TYPE to ImportDeclaration at 0"]}, {"root": "UPDATE from com.google.template.soy.jbcsrc.api.AdvisingAppendable to com.google.template.soy.jbcsrc.BytecodeUtils.NULLARY_INIT", "operations": ["UPD QualifiedName: com.google.template.soy.jbcsrc.api.AdvisingAppendable from com.google.template.soy.jbcsrc.api.AdvisingAppendable to com.google.template.soy.jbcsrc.BytecodeUtils.NULLARY_INIT"]}, {"root": "UPDATE from com.google.template.soy.jbcsrc.api.RenderContext to com.google.template.soy.jbcsrc.BytecodeUtils.OBJECT", "operations": ["UPD QualifiedName: com.google.template.soy.jbcsrc.api.RenderContext from com.google.template.soy.jbcsrc.api.RenderContext to com.google.template.soy.jbcsrc.BytecodeUtils.OBJECT"]}, {"root": "UPDATE from java.io.IOException to com.google.template.soy.jbcsrc.BytecodeUtils.RENDER_CONTEXT_TYPE", "operations": ["UPD QualifiedName: java.io.IOException from java.io.IOException to com.google.template.soy.jbcsrc.BytecodeUtils.RENDER_CONTEXT_TYPE"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 3", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 3", "INS Modifier: final to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 4"]}, {"root": "UPDATE from annotationWriter to TEMPLATE_METADATA_DESCRIPTOR", "operations": ["UPD SimpleName: annotationWriter from annotationWriter to TEMPLATE_METADATA_DESCRIPTOR"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: TEMPLATE_METADATA_DESCRIPTOR to MethodInvocation at 2", "INS SimpleName: writer to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS BooleanLiteral: true to MethodInvocation at 3", "INS SimpleName: annotationWriter to VariableDeclarationFragment at 0", "INS SimpleName: visitAnnotation to MethodInvocation at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: LocalVariable to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: LocalVariable to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from writeMethod to writeIOExceptionMethod", "operations": ["UPD SimpleName: writeMethod from writeMethod to writeIOExceptionMethod"]}, {"root": "INS SimpleName: SOY_RECORD_TYPE to MethodInvocation at 3", "operations": ["INS SimpleName: SOY_RECORD_TYPE to MethodInvocation at 3"]}, {"root": "INS SimpleName: SOY_RECORD_TYPE to MethodInvocation at 3", "operations": ["INS SimpleName: SOY_RECORD_TYPE to MethodInvocation at 3"]}, {"root": "INS SimpleName: ADVISING_APPENDABLE_TYPE to MethodInvocation at 3", "operations": ["INS SimpleName: ADVISING_APPENDABLE_TYPE to MethodInvocation at 3"]}, {"root": "INS SimpleName: RENDER_CONTEXT_TYPE to MethodInvocation at 3", "operations": ["INS SimpleName: RENDER_CONTEXT_TYPE to MethodInvocation at 3"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleName: NULLARY_INIT to MethodInvocation at 3", "operations": ["INS SimpleName: NULLARY_INIT to MethodInvocation at 3"]}, {"root": "UPDATE from Type to OBJECT", "operations": ["UPD SimpleName: Type from Type to OBJECT"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Type to MethodInvocation at 0", "MOV SimpleName: getType to MethodInvocation at 1"]}, {"root": "UPDATE from getType to type", "operations": ["UPD SimpleName: getType from getType to type"]}, {"root": "DEL MethodInvocation", "operations": ["DEL BooleanLiteral: true", "DEL SimpleName: visitAnnotation", "DEL SimpleName: writer", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: AdvisingAppendable", "DEL SimpleName: Type", "DEL SimpleName: getType", "DEL TypeLiteral", "DEL MethodInvocation", "DEL SimpleType: AdvisingAppendable"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getType", "DEL SimpleName: Type", "DEL MethodInvocation", "DEL SimpleName: RenderContext", "DEL TypeLiteral", "DEL SimpleType: RenderContext"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral", "DEL SimpleName: IOException", "DEL SimpleType: IOException"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleType: SoyRecord", "DEL TypeLiteral", "DEL SimpleName: getType", "DEL SimpleName: SoyRecord", "DEL MethodInvocation", "DEL SimpleName: Type"]}, {"root": "DEL MethodInvocation", "operations": ["DEL TypeLiteral", "DEL SimpleType: SoyRecord", "DEL SimpleName: Type", "DEL MethodInvocation", "DEL SimpleName: getType", "DEL SimpleName: SoyRecord"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleType: Object", "DEL TypeLiteral", "DEL SimpleName: Object"]}, {"root": "DEL QualifiedName: BytecodeUtils.NULLARY_INIT", "operations": ["DEL QualifiedName: BytecodeUtils.NULLARY_INIT"]}]}}, {"TemplateCompiler_diff": {"operations": ["Move ImportDeclaration(25) into CompilationUnit(1209) at 1", "Move ImportDeclaration(29) into CompilationUnit(1209) at 2", "Move ImportDeclaration(55) into CompilationUnit(1209) at 3", "Insert ImportDeclaration(3) into CompilationUnit(1209) at 1", "Insert ImportDeclaration(11) into CompilationUnit(1209) at 5", "Insert QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.ADVISING_APPENDABLE_TYPE(2) into ImportDeclaration(3) at 0", "Update QualifiedName: com.google.template.soy.jbcsrc.api.AdvisingAppendable(24) to com.google.template.soy.jbcsrc.BytecodeUtils.NULLARY_INIT", "Update QualifiedName: com.google.template.soy.jbcsrc.api.RenderContext(28) to com.google.template.soy.jbcsrc.BytecodeUtils.OBJECT", "Update QualifiedName: java.io.IOException(54) to com.google.template.soy.jbcsrc.BytecodeUtils.RENDER_CONTEXT_TYPE", "Insert QualifiedName: com.google.template.soy.jbcsrc.BytecodeUtils.SOY_RECORD_TYPE(10) into ImportDeclaration(11) at 0", "Insert FieldDeclaration(86) into TypeDeclaration: class(1208) at 3", "Insert Modifier: private(73) into FieldDeclaration(86) at 0", "Insert Modifier: static(74) into FieldDeclaration(86) at 1", "Insert Modifier: final(75) into FieldDeclaration(86) at 2", "Insert SimpleType: String(77) into FieldDeclaration(86) at 3", "Move VariableDeclarationFragment(505) into FieldDeclaration(86) at 4", "Insert SimpleName: String(76) into SimpleType: String(77) at 0", "Update SimpleName: annotationWriter(494) to TEMPLATE_METADATA_DESCRIPTOR", "Move MethodInvocation(502) into VariableDeclarationFragment(85) at 1", "Insert VariableDeclarationFragment(518) into VariableDeclarationStatement(519) at 1", "Move SimpleType: LocalVariable(597) into VariableDeclarationStatement(602) at 1", "Move SimpleType: LocalVariable(577) into VariableDeclarationStatement(617) at 1", "Insert SimpleName: annotationWriter(512) into VariableDeclarationFragment(518) at 0", "Insert MethodInvocation(517) into VariableDeclarationFragment(518) at 1", "Update SimpleName: writeMethod(742) to writeIOExceptionMethod", "Insert SimpleName: writer(513) into MethodInvocation(517) at 0", "Insert SimpleName: visitAnnotation(514) into MethodInvocation(517) at 1", "Insert SimpleName: TEMPLATE_METADATA_DESCRIPTOR(515) into MethodInvocation(517) at 2", "Insert BooleanLiteral: true(516) into MethodInvocation(517) at 3", "Insert SimpleName: SOY_RECORD_TYPE(815) into MethodInvocation(818) at 3", "Insert SimpleName: SOY_RECORD_TYPE(828) into MethodInvocation(831) at 3", "Insert SimpleName: ADVISING_APPENDABLE_TYPE(595) into MethodInvocation(598) at 3", "Insert SimpleName: RENDER_CONTEXT_TYPE(610) into MethodInvocation(613) at 3", "Insert MethodInvocation(933) into MethodInvocation(935) at 2", "Insert SimpleName: NULLARY_INIT(934) into MethodInvocation(935) at 3", "Update SimpleName: Type(941) to OBJECT", "Move SimpleName: Type(941) into MethodInvocation(933) at 0", "Update SimpleName: getType(942) to type", "Move SimpleName: getType(942) into MethodInvocation(933) at 1", "Delete SimpleName: writer(495)", "Delete SimpleName: visitAnnotation(496)", "Delete BooleanLiteral: true(503)", "Delete MethodInvocation(504)", "Delete SimpleName: Type(582)", "Delete SimpleName: getType(583)", "Delete SimpleName: AdvisingAppendable(584)", "Delete SimpleType: AdvisingAppendable(585)", "Delete TypeLiteral(586)", "Delete MethodInvocation(587)", "Delete SimpleName: Type(602)", "Delete SimpleName: getType(603)", "Delete SimpleName: RenderContext(604)", "Delete SimpleType: RenderContext(605)", "Delete TypeLiteral(606)", "Delete MethodInvocation(607)", "Delete SimpleName: IOException(749)", "Delete SimpleType: IOException(750)", "Delete TypeLiteral(751)", "Delete SimpleName: Type(815)", "Delete SimpleName: getType(816)", "Delete SimpleName: SoyRecord(817)", "Delete SimpleType: SoyRecord(818)", "Delete TypeLiteral(819)", "Delete MethodInvocation(820)", "Delete SimpleName: Type(833)", "Delete SimpleName: getType(834)", "Delete SimpleName: SoyRecord(835)", "Delete SimpleType: SoyRecord(836)", "Delete TypeLiteral(837)", "Delete MethodInvocation(838)", "Delete SimpleName: Object(943)", "Delete SimpleType: Object(944)", "Delete TypeLiteral(945)", "Delete MethodInvocation(946)", "Delete QualifiedName: BytecodeUtils.NULLARY_INIT(947)"]}}, {"TemplateFactoryCompiler_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 1"]}, {"root": "UPDATE from org.objectweb.asm.Type to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_RECORD_TYPE", "operations": ["UPD QualifiedName: org.objectweb.asm.Type from org.objectweb.asm.Type to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_RECORD_TYPE"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS QualifiedName: Flags.DEBUG to IfStatement at 0", "INS Block to MethodDeclaration at 5", "INS IfStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS SimpleName: SOY_RECORD_TYPE to MethodInvocation at 3", "operations": ["INS SimpleName: SOY_RECORD_TYPE to MethodInvocation at 3"]}, {"root": "INS SimpleName: SOY_RECORD_TYPE to MethodInvocation at 3", "operations": ["INS SimpleName: SOY_RECORD_TYPE to MethodInvocation at 3"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getType", "DEL SimpleType: SoyRecord", "DEL TypeLiteral", "DEL SimpleName: Type", "DEL SimpleName: SoyRecord", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL TypeLiteral", "DEL SimpleName: getType", "DEL SimpleType: SoyRecord", "DEL SimpleName: Type", "DEL SimpleName: SoyRecord", "DEL MethodInvocation"]}]}}, {"TemplateFactoryCompiler_diff": {"operations": ["Move ImportDeclaration(21) into CompilationUnit(424) at 1", "Update QualifiedName: org.objectweb.asm.Type(20) to com.google.template.soy.jbcsrc.BytecodeUtils.SOY_RECORD_TYPE", "Insert Block(274) into MethodDeclaration(275) at 5", "Insert IfStatement(273) into Block(274) at 0", "Insert QualifiedName: Flags.DEBUG(231) into IfStatement(273) at 0", "Move Block(271) into IfStatement(273) at 1", "Insert SimpleName: SOY_RECORD_TYPE(336) into MethodInvocation(339) at 3", "Insert SimpleName: SOY_RECORD_TYPE(349) into MethodInvocation(352) at 3", "Delete SimpleName: Type(333)", "Delete SimpleName: getType(334)", "Delete SimpleName: SoyRecord(335)", "Delete SimpleType: SoyRecord(336)", "Delete TypeLiteral(337)", "Delete MethodInvocation(338)", "Delete SimpleName: Type(351)", "Delete SimpleName: getType(352)", "Delete SimpleName: SoyRecord(353)", "Delete SimpleType: SoyRecord(354)", "Delete TypeLiteral(355)", "Delete MethodInvocation(356)"]}}], "commit_stats": [{"total_files": 21, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "True"}]}