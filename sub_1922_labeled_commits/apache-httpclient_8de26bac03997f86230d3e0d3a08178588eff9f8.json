{"application": "apache-httpclient", "csha": "8de26bac03997f86230d3e0d3a08178588eff9f8", "files": [{"ClientConnectionOperator_cluster": {"actions": [{"root": "UPDATE from org.apache.http.conn.scheme.SocketFactory to org.apache.http.conn.scheme.SchemeSocketFactory", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.SocketFactory from org.apache.http.conn.scheme.SocketFactory to org.apache.http.conn.scheme.SchemeSocketFactory"]}, {"root": "UPDATE from SocketFactory to SchemeSocketFactory", "operations": ["UPD SimpleName: SocketFactory from SocketFactory to SchemeSocketFactory"]}]}}, {"ClientConnectionOperator_diff": {"operations": ["Update QualifiedName: org.apache.http.conn.scheme.SocketFactory(10) to org.apache.http.conn.scheme.SchemeSocketFactory", "Update SimpleName: SocketFactory(24) to SchemeSocketFactory"]}}, {"MultihomePlainSocketFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS QualifiedName: org.apache.http.conn.scheme.SchemeSocketFactory to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 11"]}, {"root": "INS MarkerAnnotation to TypeDeclaration: class at 1", "operations": ["INS MarkerAnnotation to TypeDeclaration: class at 1", "INS SimpleName: Deprecated to MarkerAnnotation at 0"]}, {"root": "INS TagElement: @deprecated to Javadoc at 2", "operations": ["INS TextElement:  Do not use. For multihome support socket factories must implement to TagElement: @deprecated at 0", "INS TagElement: @link to TagElement: @deprecated at 1", "INS SimpleName: SchemeSocketFactory to TagElement: @link at 0", "INS TagElement: @deprecated to Javadoc at 2", "INS TextElement:  interface. to TagElement: @deprecated at 2"]}]}}, {"MultihomePlainSocketFactory_diff": {"operations": ["Insert ImportDeclaration(23) into CompilationUnit(423) at 11", "Insert QualifiedName: org.apache.http.conn.scheme.SchemeSocketFactory(22) into ImportDeclaration(23) at 0", "Insert MarkerAnnotation(70) into TypeDeclaration: class(422) at 1", "Insert TagElement: @deprecated(67) into Javadoc(68) at 2", "Insert SimpleName: Deprecated(69) into MarkerAnnotation(70) at 0", "Insert TextElement:  Do not use. For multihome support socket factories must implement(63) into TagElement: @deprecated(67) at 0", "Insert TagElement: @link(65) into TagElement: @deprecated(67) at 1", "Insert TextElement:  interface.(66) into TagElement: @deprecated(67) at 2", "Insert SimpleName: SchemeSocketFactory(64) into TagElement: @link(65) at 0"]}}, {"HostNameResolver_cluster": {"actions": [{"root": "INS MarkerAnnotation to TypeDeclaration: interface at 1", "operations": ["INS MarkerAnnotation to TypeDeclaration: interface at 1", "INS SimpleName: Deprecated to MarkerAnnotation at 0"]}, {"root": "INS TagElement: @deprecated to Javadoc at 2", "operations": ["INS TagElement: @deprecated to Javadoc at 2", "INS TextElement:  Do not use to TagElement: @deprecated at 0"]}]}}, {"HostNameResolver_diff": {"operations": ["Insert MarkerAnnotation(14) into TypeDeclaration: interface(37) at 1", "Insert TagElement: @deprecated(11) into Javadoc(12) at 2", "Insert SimpleName: Deprecated(13) into MarkerAnnotation(14) at 0", "Insert TextElement:  Do not use(10) into TagElement: @deprecated(11) at 0"]}}, {"LayeredSocketFactory_cluster": {"actions": [{"root": "INS MarkerAnnotation to TypeDeclaration: interface at 1", "operations": ["INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS MarkerAnnotation to TypeDeclaration: interface at 1"]}, {"root": "INS TagElement: @deprecated to Javadoc at 2", "operations": ["INS TagElement: @deprecated to Javadoc at 2", "INS TagElement: @link to TagElement: @deprecated at 1", "INS SimpleName: SchemeSocketFactory to TagElement: @link at 0", "INS TextElement:  use  to TagElement: @deprecated at 0"]}]}}, {"LayeredSocketFactory_diff": {"operations": ["Insert MarkerAnnotation(23) into TypeDeclaration: interface(77) at 1", "Insert TagElement: @deprecated(20) into Javadoc(21) at 2", "Insert SimpleName: Deprecated(22) into MarkerAnnotation(23) at 0", "Insert TextElement:  use (17) into TagElement: @deprecated(20) at 0", "Insert TagElement: @link(19) into TagElement: @deprecated(20) at 1", "Insert SimpleName: SchemeSocketFactory(18) into TagElement: @link(19) at 0"]}}, {"PlainSocketFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: java.net.UnknownHostException to ImportDeclaration at 0"]}, {"root": "INS SingleMemberAnnotation to TypeDeclaration: class at 1", "operations": ["INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS SingleMemberAnnotation to TypeDeclaration: class at 1", "INS StringLiteral: \"deprecation\" to SingleMemberAnnotation at 1"]}, {"root": "INS SimpleType: SchemeSocketFactory to TypeDeclaration: class at 7", "operations": ["INS SimpleType: SchemeSocketFactory to TypeDeclaration: class at 7", "INS SimpleName: SchemeSocketFactory to SimpleType: SchemeSocketFactory at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: Socket to SimpleType: Socket at 0", "INS IfStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: port to ClassInstanceCreation at 2", "INS SimpleName: socket to SingleVariableDeclaration at 2", "INS SimpleName: connectSocket to MethodInvocation at 0", "INS SimpleName: localAddress to InfixExpression: != at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: IOException to MethodDeclaration at 11", "INS Block to MethodDeclaration at 14", "INS InfixExpression: != to InfixExpression: || at 0", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: UnknownHostException to SimpleType: UnknownHostException at 0", "INS SimpleName: remoteAddress to Assignment: = at 0", "INS SimpleType: UnknownHostException to MethodDeclaration at 12", "INS SimpleName: remote to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: local to MethodInvocation at 3", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: InetSocketAddress to ClassInstanceCreation at 0", "INS TagElement: @deprecated to Javadoc at 0", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS IfStatement to Block at 3", "INS SimpleName: connectSocket to MethodRef at 0", "INS TagElement: @link to TagElement: @deprecated at 1", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS SimpleName: local to VariableDeclarationFragment at 0", "INS SimpleName: InetAddress to MethodInvocation at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: getByName to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS TextElement:  Use  to TagElement: @deprecated at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: Socket to SingleVariableDeclaration at 1", "INS SimpleName: InetAddress to SimpleType: InetAddress at 0", "INS SimpleType: ConnectTimeoutException to MethodDeclaration at 13", "INS VariableDeclarationStatement to Block at 2", "INS MethodRefParameter to MethodRef at 3", "INS SimpleName: connectSocket to MethodDeclaration at 4", "INS Block to IfStatement at 1", "INS SimpleType: HttpParams to SingleVariableDeclaration at 1", "INS SimpleType: InetAddress to SingleVariableDeclaration at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: Socket to MethodRefParameter at 0", "INS SimpleName: Socket to SimpleType: Socket at 0", "INS SimpleName: localAddress to SingleVariableDeclaration at 2", "INS SimpleName: socket to MethodInvocation at 1", "INS SimpleType: Socket to MethodDeclaration at 3", "INS VariableDeclarationStatement to Block at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: remoteAddress to ClassInstanceCreation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: local to Assignment: = at 0", "INS Javadoc to MethodDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ReturnStatement to Block at 5", "INS MethodInvocation to Assignment: = at 1", "INS MethodRefParameter to MethodRef at 1", "INS SingleVariableDeclaration to MethodDeclaration at 10", "INS Assignment: = to ExpressionStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: params to MethodInvocation at 4", "INS SimpleName: InetSocketAddress to SimpleType: InetSocketAddress at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: HttpParams to SimpleType: HttpParams at 0", "INS SimpleName: params to SingleVariableDeclaration at 2", "INS Block to IfStatement at 2", "INS MethodRefParameter to MethodRef at 2", "INS InfixExpression: || to IfStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS SimpleName: ConnectTimeoutException to SimpleType: ConnectTimeoutException at 0", "INS MethodRefParameter to MethodRef at 4", "INS SimpleName: host to MethodInvocation at 2", "INS SimpleName: host to SingleVariableDeclaration at 2", "INS SimpleName: Socket to SimpleType: Socket at 0", "INS SimpleName: remote to VariableDeclarationFragment at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Deprecated to MarkerAnnotation at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement: @since to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS TextElement:  4.1 to TagElement: @since at 0"]}, {"root": "INS SimpleType: ConnectTimeoutException to MethodDeclaration at 11", "operations": ["INS SimpleType: ConnectTimeoutException to MethodDeclaration at 11", "INS SimpleName: ConnectTimeoutException to SimpleType: ConnectTimeoutException at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 9", "MOV SingleVariableDeclaration to MethodDeclaration at 7"]}, {"root": "INS SuperConstructorInvocation to Block at 0", "operations": ["INS SuperConstructorInvocation to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS NullLiteral to Assignment: = at 1", "INS FieldAccess to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: nameResolver to FieldAccess at 1", "INS ExpressionStatement to Block at 1"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: Socket to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: Socket to SingleVariableDeclaration at 1", "INS SimpleName: Socket to SimpleType: Socket at 0"]}, {"root": "UPDATE from sock to socket", "operations": ["UPD SimpleName: sock from sock to socket"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: InetSocketAddress to SingleVariableDeclaration at 1", "operations": ["INS SimpleType: InetSocketAddress to SingleVariableDeclaration at 1", "INS SimpleName: InetSocketAddress to SimpleType: InetSocketAddress at 0"]}, {"root": "INS SimpleName: remoteAddress to SingleVariableDeclaration at 2", "operations": ["INS SimpleName: remoteAddress to SingleVariableDeclaration at 2"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: InetSocketAddress to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: InetSocketAddress to SimpleType: InetSocketAddress at 0", "INS SimpleType: InetSocketAddress to SingleVariableDeclaration at 1"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: HttpParams to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: HttpParams to SimpleType: HttpParams at 0", "INS SimpleType: HttpParams to SingleVariableDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0", "MOV ExpressionStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 2"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS IfStatement to Block at 4", "INS Block to IfStatement at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Socket to VariableDeclarationStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: InetSocketAddress to VariableDeclarationStatement at 0", "MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: InetAddress to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: InetSocketAddress to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from params to remoteAddress", "operations": ["UPD SimpleName: params from params to remoteAddress"]}, {"root": "UPDATE from host to params", "operations": ["UPD SimpleName: host from host to params"]}, {"root": "UPDATE from isa to sock", "operations": ["UPD SimpleName: isa from isa to sock"]}, {"root": "INS SimpleName: socket to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: socket to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: > to InfixExpression: || at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "UPDATE from \"Parameters may not be null.\" to \"Remote address may not be null\"", "operations": ["UPD StringLiteral: \"Parameters may not be null.\" from \"Parameters may not be null.\" to \"Remote address may not be null\""]}, {"root": "UPDATE from \"Target host may not be null.\" to \"HTTP parameters may not be null\"", "operations": ["UPD StringLiteral: \"Target host may not be null.\" from \"Target host may not be null.\" to \"HTTP parameters may not be null\""]}, {"root": "UPDATE from isa to localAddress", "operations": ["UPD SimpleName: isa from isa to localAddress"]}, {"root": "MOVE from MethodRefParameter", "operations": ["MOV SimpleType: InetSocketAddress to MethodRefParameter at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1", "MOV SimpleType: InetSocketAddress to MethodRefParameter at 0"]}, {"root": "MOVE from MethodRefParameter", "operations": ["MOV SimpleType: HttpParams to MethodRefParameter at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV ClassInstanceCreation to Assignment: = at 1"]}, {"root": "INS MethodInvocation to InfixExpression: + at 1", "operations": ["INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: remoteAddress to MethodInvocation at 0", "INS SimpleName: getHostName to MethodInvocation at 1"]}, {"root": "INS StringLiteral: \"/\" to InfixExpression: + at 2", "operations": ["INS StringLiteral: \"/\" to InfixExpression: + at 2"]}, {"root": "INS MethodInvocation to InfixExpression: + at 3", "operations": ["INS SimpleName: remoteAddress to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 3", "INS SimpleName: getAddress to MethodInvocation at 1"]}, {"root": "DEL ConstructorInvocation", "operations": ["DEL NullLiteral", "DEL ConstructorInvocation"]}, {"root": "DEL SimpleName: host", "operations": ["DEL SimpleName: host"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL IfStatement", "DEL ParenthesizedExpression", "DEL ParenthesizedExpression", "DEL InfixExpression: ||"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL Assignment: =", "DEL ExpressionStatement", "DEL IfStatement", "DEL SimpleName: host", "DEL SimpleName: remoteAddress", "DEL ClassInstanceCreation", "DEL SimpleName: port", "DEL Block"]}, {"root": "DEL SimpleName: remoteAddress", "operations": ["DEL SimpleName: remoteAddress"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: port", "DEL ClassInstanceCreation"]}]}}, {"PlainSocketFactory_diff": {"operations": ["Insert ImportDeclaration(13) into CompilationUnit(426) at 6", "Insert QualifiedName: java.net.UnknownHostException(12) into ImportDeclaration(13) at 0", "Insert SingleMemberAnnotation(40) into TypeDeclaration: class(425) at 1", "Insert SimpleType: SchemeSocketFactory(49) into TypeDeclaration: class(425) at 7", "Insert MethodDeclaration(424) into TypeDeclaration: class(425) at 16", "Insert SimpleName: SuppressWarnings(38) into SingleMemberAnnotation(40) at 0", "Insert StringLiteral: \"deprecation\"(39) into SingleMemberAnnotation(40) at 1", "Insert SimpleName: SchemeSocketFactory(48) into SimpleType: SchemeSocketFactory(49) at 0", "Insert MarkerAnnotation(87) into MethodDeclaration(103) at 0", "Insert Javadoc(127) into MethodDeclaration(241) at 0", "Insert SimpleType: ConnectTimeoutException(155) into MethodDeclaration(241) at 9", "Move IfStatement(148) into Block(240) at 2", "Insert Javadoc(306) into MethodDeclaration(424) at 0", "Insert MarkerAnnotation(308) into MethodDeclaration(424) at 1", "Insert Modifier: public(309) into MethodDeclaration(424) at 2", "Insert SimpleType: Socket(311) into MethodDeclaration(424) at 3", "Insert SimpleName: connectSocket(312) into MethodDeclaration(424) at 4", "Insert SingleVariableDeclaration(317) into MethodDeclaration(424) at 5", "Insert SingleVariableDeclaration(322) into MethodDeclaration(424) at 6", "Move SingleVariableDeclaration(125) into MethodDeclaration(424) at 7", "Insert SingleVariableDeclaration(330) into MethodDeclaration(424) at 8", "Move SingleVariableDeclaration(132) into MethodDeclaration(424) at 9", "Insert SingleVariableDeclaration(338) into MethodDeclaration(424) at 10", "Insert SimpleType: IOException(340) into MethodDeclaration(424) at 11", "Insert SimpleType: UnknownHostException(342) into MethodDeclaration(424) at 12", "Insert SimpleType: ConnectTimeoutException(344) into MethodDeclaration(424) at 13", "Insert Block(423) into MethodDeclaration(424) at 14", "Insert SimpleName: Deprecated(86) into MarkerAnnotation(87) at 0", "Insert SuperConstructorInvocation(106) into Block(113) at 0", "Insert ExpressionStatement(112) into Block(113) at 1", "Insert TagElement: @since(126) into Javadoc(127) at 0", "Insert Modifier: final(132) into SingleVariableDeclaration(136) at 0", "Insert SimpleType: Socket(134) into SingleVariableDeclaration(136) at 1", "Update SimpleName: sock(117) to socket", "Insert Modifier: final(137) into SingleVariableDeclaration(141) at 0", "Insert SimpleType: InetSocketAddress(139) into SingleVariableDeclaration(141) at 1", "Insert SimpleName: remoteAddress(140) into SingleVariableDeclaration(141) at 2", "Insert Modifier: final(142) into SingleVariableDeclaration(146) at 0", "Insert SimpleType: InetSocketAddress(144) into SingleVariableDeclaration(146) at 1", "Insert Modifier: final(147) into SingleVariableDeclaration(151) at 0", "Insert SimpleType: HttpParams(149) into SingleVariableDeclaration(151) at 1", "Insert SimpleName: ConnectTimeoutException(154) into SimpleType: ConnectTimeoutException(155) at 0", "Move VariableDeclarationStatement(194) into Block(240) at 2", "Insert IfStatement(201) into Block(240) at 4", "Insert TagElement: @deprecated(305) into Javadoc(306) at 0", "Insert SimpleName: Deprecated(307) into MarkerAnnotation(308) at 0", "Insert SimpleName: Socket(310) into SimpleType: Socket(311) at 0", "Insert Modifier: final(313) into SingleVariableDeclaration(317) at 0", "Insert SimpleType: Socket(315) into SingleVariableDeclaration(317) at 1", "Insert SimpleName: socket(316) into SingleVariableDeclaration(317) at 2", "Insert Modifier: final(318) into SingleVariableDeclaration(322) at 0", "Move SimpleType: String(120) into SingleVariableDeclaration(322) at 1", "Insert SimpleName: host(321) into SingleVariableDeclaration(322) at 2", "Insert Modifier: final(326) into SingleVariableDeclaration(330) at 0", "Insert SimpleType: InetAddress(328) into SingleVariableDeclaration(330) at 1", "Insert SimpleName: localAddress(329) into SingleVariableDeclaration(330) at 2", "Insert Modifier: final(334) into SingleVariableDeclaration(338) at 0", "Insert SimpleType: HttpParams(336) into SingleVariableDeclaration(338) at 1", "Insert SimpleName: params(337) into SingleVariableDeclaration(338) at 2", "Insert SimpleName: IOException(339) into SimpleType: IOException(340) at 0", "Insert SimpleName: UnknownHostException(341) into SimpleType: UnknownHostException(342) at 0", "Insert SimpleName: ConnectTimeoutException(343) into SimpleType: ConnectTimeoutException(344) at 0", "Insert VariableDeclarationStatement(350) into Block(423) at 0", "Insert IfStatement(376) into Block(423) at 1", "Insert VariableDeclarationStatement(381) into Block(423) at 2", "Insert IfStatement(405) into Block(423) at 3", "Insert VariableDeclarationStatement(415) into Block(423) at 4", "Insert ReturnStatement(422) into Block(423) at 5", "Insert Assignment: =(111) into ExpressionStatement(112) at 0", "Insert TextElement:  4.1(125) into TagElement: @since(126) at 0", "Insert SimpleName: Socket(133) into SimpleType: Socket(134) at 0", "Insert SimpleName: InetSocketAddress(138) into SimpleType: InetSocketAddress(139) at 0", "Insert SimpleName: InetSocketAddress(143) into SimpleType: InetSocketAddress(144) at 0", "Insert SimpleName: HttpParams(148) into SimpleType: HttpParams(149) at 0", "Move SimpleType: Socket(116) into VariableDeclarationStatement(181) at 0", "Insert Block(190) into IfStatement(191) at 1", "Move InfixExpression: !=(170) into IfStatement(201) at 0", "Insert Block(200) into IfStatement(201) at 1", "Insert TextElement:  Use (289) into TagElement: @deprecated(305) at 0", "Insert TagElement: @link(304) into TagElement: @deprecated(305) at 1", "Insert SimpleName: Socket(314) into SimpleType: Socket(315) at 0", "Insert SimpleName: InetAddress(327) into SimpleType: InetAddress(328) at 0", "Insert SimpleName: HttpParams(335) into SimpleType: HttpParams(336) at 0", "Move SimpleType: InetSocketAddress(211) into VariableDeclarationStatement(350) at 0", "Insert VariableDeclarationFragment(349) into VariableDeclarationStatement(350) at 1", "Insert InfixExpression: ||(357) into IfStatement(376) at 0", "Insert Block(375) into IfStatement(376) at 1", "Move SimpleType: InetAddress(127) into VariableDeclarationStatement(381) at 0", "Move VariableDeclarationFragment(213) into VariableDeclarationStatement(381) at 1", "Move InfixExpression: !=(219) into IfStatement(405) at 0", "Move Block(233) into IfStatement(405) at 1", "Insert Block(404) into IfStatement(405) at 2", "Move SimpleType: InetSocketAddress(186) into VariableDeclarationStatement(415) at 0", "Insert VariableDeclarationFragment(414) into VariableDeclarationStatement(415) at 1", "Insert MethodInvocation(421) into ReturnStatement(422) at 0", "Insert FieldAccess(109) into Assignment: =(111) at 0", "Insert NullLiteral(110) into Assignment: =(111) at 1", "Update SimpleName: params(149) to remoteAddress", "Update SimpleName: host(139) to params", "Update SimpleName: isa(187) to sock", "Insert SimpleName: socket(179) into VariableDeclarationFragment(180) at 1", "Move ExpressionStatement(166) into Block(190) at 0", "Move ExpressionStatement(199) into Block(200) at 0", "Insert MethodRef(303) into TagElement: @link(304) at 0", "Insert SimpleName: local(347) into VariableDeclarationFragment(349) at 0", "Insert NullLiteral(348) into VariableDeclarationFragment(349) at 1", "Insert InfixExpression: !=(353) into InfixExpression: ||(357) at 0", "Move InfixExpression: >(174) into InfixExpression: ||(357) at 1", "Move IfStatement(184) into Block(375) at 0", "Insert ExpressionStatement(374) into Block(375) at 1", "Insert ExpressionStatement(403) into Block(404) at 0", "Insert SimpleName: remote(408) into VariableDeclarationFragment(414) at 0", "Insert ClassInstanceCreation(413) into VariableDeclarationFragment(414) at 1", "Insert SimpleName: connectSocket(416) into MethodInvocation(421) at 0", "Insert SimpleName: socket(417) into MethodInvocation(421) at 1", "Insert SimpleName: remote(418) into MethodInvocation(421) at 2", "Insert SimpleName: local(419) into MethodInvocation(421) at 3", "Insert SimpleName: params(420) into MethodInvocation(421) at 4", "Insert ThisExpression(107) into FieldAccess(109) at 0", "Insert SimpleName: nameResolver(108) into FieldAccess(109) at 1", "Insert SimpleName: connectSocket(290) into MethodRef(303) at 0", "Insert MethodRefParameter(293) into MethodRef(303) at 1", "Insert MethodRefParameter(296) into MethodRef(303) at 2", "Insert MethodRefParameter(299) into MethodRef(303) at 3", "Insert MethodRefParameter(302) into MethodRef(303) at 4", "Insert SimpleName: localAddress(351) into InfixExpression: !=(353) at 0", "Insert NullLiteral(352) into InfixExpression: !=(353) at 1", "Insert Block(365) into IfStatement(366) at 1", "Insert Assignment: =(373) into ExpressionStatement(374) at 0", "Insert Assignment: =(402) into ExpressionStatement(403) at 0", "Insert SimpleType: InetSocketAddress(410) into ClassInstanceCreation(413) at 0", "Insert SimpleName: remoteAddress(411) into ClassInstanceCreation(413) at 1", "Insert SimpleName: port(412) into ClassInstanceCreation(413) at 2", "Update StringLiteral: \"Parameters may not be null.\"(154) to \"Remote address may not be null\"", "Update StringLiteral: \"Target host may not be null.\"(144) to \"HTTP parameters may not be null\"", "Update SimpleName: isa(197) to localAddress", "Insert SimpleType: Socket(292) into MethodRefParameter(293) at 0", "Move SimpleType: InetSocketAddress(236) into MethodRefParameter(296) at 0", "Move SimpleType: InetSocketAddress(222) into MethodRefParameter(299) at 0", "Move SimpleType: HttpParams(134) into MethodRefParameter(302) at 0", "Move ExpressionStatement(183) into Block(365) at 0", "Insert SimpleName: local(367) into Assignment: =(373) at 0", "Move ClassInstanceCreation(192) into Assignment: =(373) at 1", "Move MethodInvocation(228) into Assignment: =(394) at 1", "Insert SimpleName: remoteAddress(397) into Assignment: =(402) at 0", "Insert MethodInvocation(401) into Assignment: =(402) at 1", "Insert SimpleName: InetSocketAddress(409) into SimpleType: InetSocketAddress(410) at 0", "Insert SimpleName: Socket(291) into SimpleType: Socket(292) at 0", "Insert SimpleName: InetAddress(398) into MethodInvocation(401) at 0", "Insert SimpleName: getByName(399) into MethodInvocation(401) at 1", "Insert SimpleName: host(400) into MethodInvocation(401) at 2", "Insert MethodInvocation(226) into InfixExpression: +(232) at 1", "Insert StringLiteral: \"/\"(227) into InfixExpression: +(232) at 2", "Insert MethodInvocation(230) into InfixExpression: +(232) at 3", "Insert SimpleName: remoteAddress(224) into MethodInvocation(226) at 0", "Insert SimpleName: getHostName(225) into MethodInvocation(226) at 1", "Insert SimpleName: remoteAddress(228) into MethodInvocation(230) at 0", "Insert SimpleName: getAddress(229) into MethodInvocation(230) at 1", "Delete NullLiteral(97)", "Delete ConstructorInvocation(98)", "Delete SimpleName: host(121)", "Delete ParenthesizedExpression(171)", "Delete ParenthesizedExpression(175)", "Delete InfixExpression: ||(176)", "Delete Block(200)", "Delete IfStatement(201)", "Delete VariableDeclarationStatement(214)", "Delete SimpleName: remoteAddress(234)", "Delete SimpleName: host(237)", "Delete SimpleName: port(238)", "Delete ClassInstanceCreation(239)", "Delete Assignment: =(240)", "Delete ExpressionStatement(241)", "Delete Block(242)", "Delete IfStatement(243)", "Delete SimpleName: remoteAddress(258)", "Delete SimpleName: port(229)", "Delete ClassInstanceCreation(230)"]}}, {"Scheme_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS FieldAccess to Assignment: = at 0", "INS SimpleName: name to InfixExpression: == at 0", "INS SimpleName: name to MethodInvocation at 0", "INS SimpleName: SchemeSocketFactoryAdaptor to SimpleType: SchemeSocketFactoryAdaptor at 0", "INS MethodRef to TagElement: @link at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS QualifiedName: Locale.ENGLISH to MethodInvocation at 2", "INS Javadoc to MethodDeclaration at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: port to Assignment: = at 1", "INS TagElement: @param to Javadoc at 1", "INS ThisExpression to FieldAccess at 0", "INS MethodRefParameter to MethodRef at 3", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: socketFactory to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleType: SchemeSocketFactory to MethodRefParameter at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: factory to ClassInstanceCreation at 1", "INS SimpleName: name to TagElement: @param at 0", "INS SimpleName: port to InfixExpression: > at 0", "INS SimpleType: IllegalArgumentException to ClassInstanceCreation at 0", "INS IfStatement to Block at 1", "INS IfStatement to Block at 2", "INS IfStatement to Block at 4", "INS ThisExpression to FieldAccess at 0", "INS PrimitiveType: int to MethodRefParameter at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: LayeredSocketFactory to SimpleType: LayeredSocketFactory at 0", "INS ExpressionStatement to Block at 1", "INS NumberLiteral: 0xffff to InfixExpression: > at 1", "INS Block to IfStatement at 2", "INS Assignment: = to ExpressionStatement at 0", "INS StringLiteral: \"Port is invalid: \" to InfixExpression: + at 0", "INS IfStatement to Block at 0", "INS SimpleName: Scheme to MethodDeclaration at 3", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: socketFactory to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: String to MethodRefParameter at 0", "INS MethodRefParameter to MethodRef at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: layered to FieldAccess at 1", "INS ExpressionStatement to Block at 1", "INS BooleanLiteral: false to Assignment: = at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: factory to InfixExpression: == at 0", "INS SimpleName: port to InfixExpression: <= at 0", "INS Block to IfStatement at 1", "INS InfixExpression: > to ParenthesizedExpression at 0", "INS SimpleName: toLowerCase to MethodInvocation at 1", "INS SimpleName: name to FieldAccess at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS ThrowStatement to Block at 0", "INS SimpleType: SchemeSocketFactoryAdaptor to ClassInstanceCreation at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS InfixExpression: <= to ParenthesizedExpression at 0", "INS NumberLiteral: 0 to InfixExpression: <= at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: IllegalArgumentException to SimpleType: IllegalArgumentException at 0", "INS SimpleName: port to InfixExpression: + at 1", "INS FieldAccess to Assignment: = at 0", "INS Block to IfStatement at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: Scheme to MethodRef at 0", "INS ThrowStatement to Block at 0", "INS ParenthesizedExpression to InfixExpression: || at 0", "INS StringLiteral: \"Scheme name may not be null\" to ClassInstanceCreation at 1", "INS TextElement: Creates a new scheme. to TagElement at 0", "INS SimpleName: IllegalArgumentException to SimpleType: IllegalArgumentException at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: String to SingleVariableDeclaration at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: layered to FieldAccess at 1", "INS SimpleName: LayeredSchemeSocketFactoryAdaptor to SimpleType: LayeredSchemeSocketFactoryAdaptor at 0", "INS TextElement:  Use  to TagElement: @deprecated at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS CastExpression to ClassInstanceCreation at 1", "INS StringLiteral: \"Socket factory may not be null\" to ClassInstanceCreation at 1", "INS TextElement: depends on the class of <code>factory</code>. to TagElement at 2", "INS ExpressionStatement to Block at 3", "INS ExpressionStatement to Block at 0", "INS TagElement: @link to TagElement: @deprecated at 1", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS ThrowStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: IllegalArgumentException to SimpleType: IllegalArgumentException at 0", "INS SimpleName: defaultPort to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleType: IllegalArgumentException to ClassInstanceCreation at 0", "INS FieldAccess to Assignment: = at 0", "INS Block to IfStatement at 1", "INS TextElement:       the scheme name, for example \"http\". to TagElement: @param at 1", "INS InfixExpression: || to IfStatement at 0", "INS ParenthesizedExpression to InfixExpression: || at 1", "INS SimpleName: SchemeSocketFactory to SimpleType: SchemeSocketFactory at 0", "INS TagElement: @deprecated to Javadoc at 4", "INS BooleanLiteral: true to Assignment: = at 1", "INS SimpleName: factory to CastExpression at 1", "INS MethodRefParameter to MethodRef at 2", "INS InfixExpression: == to IfStatement at 0", "INS SimpleType: LayeredSchemeSocketFactoryAdaptor to ClassInstanceCreation at 0", "INS SimpleType: LayeredSocketFactory to CastExpression at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: IllegalArgumentException to ClassInstanceCreation at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement: Whether the created scheme allows for layered connections to TagElement at 1", "INS SimpleName: name to SingleVariableDeclaration at 2", "INS NullLiteral to InfixExpression: == at 1", "INS ExpressionStatement to Block at 5", "INS TextElement: The name will be converted to lowercase. to TagElement: @param at 2", "INS ClassInstanceCreation to Assignment: = at 1", "INS NullLiteral to InfixExpression: == at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS SimpleName: SchemeSocketFactory to SimpleType: SchemeSocketFactory at 0", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS SimpleType: SchemeSocketFactory to MethodDeclaration at 3", "INS SimpleName: getSchemeSocketFactory to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS SimpleName: socketFactory to FieldAccess at 1", "INS Block to MethodDeclaration at 5", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to ReturnStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 19", "INS Block to IfStatement at 2", "INS Block to MethodDeclaration at 6", "INS Block to IfStatement at 1", "INS Modifier: public to MethodDeclaration at 1", "INS Modifier: final to MethodDeclaration at 2", "INS IfStatement to Block at 2"]}, {"root": "UPDATE from SocketFactory to SchemeSocketFactory", "operations": ["UPD SimpleName: SocketFactory from SocketFactory to SchemeSocketFactory", "UPD SimpleType: SocketFactory from SocketFactory to SchemeSocketFactory"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: port to SingleVariableDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: factory to SingleVariableDeclaration at 2", "INS SimpleType: SchemeSocketFactory to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: SchemeSocketFactory to SimpleType: SchemeSocketFactory at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Deprecated to MarkerAnnotation at 0"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS FieldAccess to IfStatement at 0", "INS SimpleType: LayeredSchemeSocketFactory to CastExpression at 0", "INS Block to IfStatement at 2", "INS ClassInstanceCreation to ReturnStatement at 0", "INS FieldAccess to CastExpression at 1", "INS Block to IfStatement at 1", "INS ThisExpression to FieldAccess at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: socketFactory to FieldAccess at 1", "INS FieldAccess to InstanceofExpression at 0", "INS SimpleName: layered to FieldAccess at 1", "INS FieldAccess to ClassInstanceCreation at 1", "INS SimpleName: socketFactory to FieldAccess at 1", "INS SimpleName: socketFactory to FieldAccess at 1", "INS SimpleType: SocketFactoryAdaptor to ClassInstanceCreation at 0", "INS ThisExpression to FieldAccess at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: SocketFactoryAdaptor to SimpleType: SocketFactoryAdaptor at 0", "INS ReturnStatement to Block at 0", "INS IfStatement to Block at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleType: SchemeSocketFactoryAdaptor to InstanceofExpression at 1", "INS SimpleType: LayeredSocketFactoryAdaptor to ClassInstanceCreation at 0", "INS CastExpression to ClassInstanceCreation at 1", "INS SimpleName: LayeredSchemeSocketFactory to SimpleType: LayeredSchemeSocketFactory at 0", "INS SimpleName: LayeredSocketFactoryAdaptor to SimpleType: LayeredSocketFactoryAdaptor at 0", "INS ThisExpression to FieldAccess at 0", "INS Block to IfStatement at 1", "INS SimpleName: SchemeSocketFactoryAdaptor to SimpleType: SchemeSocketFactoryAdaptor at 0", "INS ThisExpression to FieldAccess at 0", "INS IfStatement to Block at 0", "INS InstanceofExpression to IfStatement at 0", "INS Block to IfStatement at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Modifier: final to MethodDeclaration at 2", "MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV Modifier: public to MethodDeclaration at 1", "MOV PrimitiveType: boolean to MethodDeclaration at 3", "MOV SimpleName: equals to MethodDeclaration at 4"]}, {"root": "UPDATE from Encapsulates specifics of a protocol scheme such as \"http\" or \"https\". to Encapsulates specifics of a protocol scheme such as \"http\" or \"https\". Schemes are identified ", "operations": ["UPD TextElement: Encapsulates specifics of a protocol scheme such as \"http\" or \"https\". from Encapsulates specifics of a protocol scheme such as \"http\" or \"https\". to Encapsulates specifics of a protocol scheme such as \"http\" or \"https\". Schemes are identified "]}, {"root": "UPDATE from Supported schemes are typically collected in a to by lowercase names. Supported schemes are typically collected in a ", "operations": ["UPD TextElement: Supported schemes are typically collected in a from Supported schemes are typically collected in a to by lowercase names. Supported schemes are typically collected in a "]}, {"root": "UPDATE from For example, to configure support for \"https://\" URLs, to For example, to configure support for \"https://\" URLs, you could write code like the following:", "operations": ["UPD TextElement: For example, to configure support for \"https://\" URLs, from For example, to configure support for \"https://\" URLs, to For example, to configure support for \"https://\" URLs, you could write code like the following:"]}, {"root": "UPDATE from Scheme https = new Scheme(\"https\", new MySecureSocketFactory(), 443); to Scheme https = new Scheme(\"https\", 443, new MySecureSocketFactory());", "operations": ["UPD TextElement: Scheme https = new Scheme(\"https\", new MySecureSocketFactory(), 443); from Scheme https = new Scheme(\"https\", new MySecureSocketFactory(), 443); to Scheme https = new Scheme(\"https\", 443, new MySecureSocketFactory());"]}, {"root": "INS TagElement: @param to Javadoc at 2", "operations": ["INS SimpleName: port to TagElement: @param at 0", "INS TextElement:       the default port for this scheme to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 2"]}, {"root": "INS TagElement: @param to Javadoc at 3", "operations": ["INS TextElement: with this scheme to TagElement: @param at 2", "INS TagElement: @param to Javadoc at 3", "INS SimpleName: factory to TagElement: @param at 0", "INS TextElement:    the factory for creating sockets for communication to TagElement: @param at 1"]}, {"root": "INS TagElement: @since to Javadoc at 4", "operations": ["INS TextElement:  4.1 to TagElement: @since at 0", "INS TagElement: @since to Javadoc at 4"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @param to Javadoc at 2", "MOV TagElement: @param to Javadoc at 3"]}, {"root": "INS TagElement: @deprecated to Javadoc at 2", "operations": ["INS TagElement: @link to TagElement: @deprecated at 1", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: getSchemeSocketFactory to MethodRef at 0", "INS TextElement:  Use  to TagElement: @deprecated at 0", "INS TagElement: @deprecated to Javadoc at 2"]}, {"root": "INS TagElement to Javadoc at 0", "operations": ["INS TagElement to Javadoc at 0", "INS MemberRef to TagElement: @link at 0", "INS TextElement: , the factory implements to TagElement at 3", "INS TextElement: Obtains the socket factory. to TagElement at 0", "INS TagElement: @link to TagElement at 2", "INS TextElement: . to TagElement at 5", "INS TextElement: If this scheme is  to TagElement at 1", "INS TagElement: @link to TagElement at 4", "INS SimpleName: isLayered to MemberRef at 0"]}, {"root": "INS TagElement: @since to Javadoc at 4", "operations": ["INS TagElement: @since to Javadoc at 4", "INS TextElement:  4.1 to TagElement: @since at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0", "MOV IfStatement to Block at 0", "MOV IfStatement to Block at 1"]}, {"root": "INS TextElement:   to TagElement: @link at 1", "operations": ["INS TextElement:   to TagElement: @link at 1"]}, {"root": "UPDATE from  SchemeRegistry to SchemeRegistry", "operations": ["UPD TextElement:  SchemeRegistry from  SchemeRegistry to SchemeRegistry"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InstanceofExpression to IfStatement at 0"]}, {"root": "UPDATE from   <code>true</code> iff the argument is equal to this scheme to   the socket factory for this scheme", "operations": ["UPD TextElement:   <code>true</code> iff the argument is equal to this scheme from   <code>true</code> iff the argument is equal to this scheme to   the socket factory for this scheme"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InstanceofExpression to IfStatement at 0"]}, {"root": "INS InstanceofExpression to Assignment: = at 1", "operations": ["INS SimpleType: LayeredSchemeSocketFactory to InstanceofExpression at 1", "INS SimpleName: factory to InstanceofExpression at 0", "INS InstanceofExpression to Assignment: = at 1", "INS SimpleName: LayeredSchemeSocketFactory to SimpleType: LayeredSchemeSocketFactory at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "UPDATE from Compares this scheme to an object. to  layered", "operations": ["UPD TextElement: Compares this scheme to an object. from Compares this scheme to an object. to  layered"]}, {"root": "MOVE from TagElement: @link", "operations": ["MOV TextElement: Compares this scheme to an object. to TagElement: @link at 1"]}, {"root": "UPDATE from obj to LayeredSocketFactory", "operations": ["UPD SimpleName: obj from obj to LayeredSocketFactory"]}, {"root": "MOVE from TagElement: @link", "operations": ["MOV TextElement:        the object to compare with to TagElement: @link at 1", "MOV SimpleName: obj to TagElement: @link at 0"]}, {"root": "UPDATE from        the object to compare with to  LayeredSchemeSocketFactory", "operations": ["UPD TextElement:        the object to compare with from        the object to compare with to  LayeredSchemeSocketFactory"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS ParenthesizedExpression to MethodInvocation at 0", "INS SimpleName: socketFactory to FieldAccess at 1", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: SchemeSocketFactoryAdaptor to SimpleType: SchemeSocketFactoryAdaptor at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleType: SchemeSocketFactoryAdaptor to CastExpression at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getFactory to MethodInvocation at 1", "INS FieldAccess to CastExpression at 1"]}, {"root": "INS InfixExpression: && to ReturnStatement at 0", "operations": ["INS InfixExpression: && to ReturnStatement at 0"]}, {"root": "UPDATE from s to that", "operations": ["UPD SimpleName: s from s to that"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV MethodInvocation to InfixExpression: && at 1", "MOV InfixExpression: && to InfixExpression: && at 0"]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS SimpleName: socketFactory to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "UPDATE from s.socketFactory to that.socketFactory", "operations": ["UPD QualifiedName: s.socketFactory from s.socketFactory to that.socketFactory"]}, {"root": "INS FieldAccess to InfixExpression: == at 0", "operations": ["INS FieldAccess to InfixExpression: == at 0", "INS SimpleName: layered to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "UPDATE from s.layered to that.layered", "operations": ["UPD QualifiedName: s.layered from s.layered to that.layered"]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS SimpleName: name to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 0"]}, {"root": "UPDATE from s.name to that.name", "operations": ["UPD QualifiedName: s.name from s.name to that.name"]}, {"root": "INS FieldAccess to InfixExpression: == at 0", "operations": ["INS ThisExpression to FieldAccess at 0", "INS SimpleName: defaultPort to FieldAccess at 1", "INS FieldAccess to InfixExpression: == at 0"]}, {"root": "UPDATE from s.defaultPort to that.defaultPort", "operations": ["UPD QualifiedName: s.defaultPort from s.defaultPort to that.defaultPort"]}, {"root": "DEL TextElement: Schemes are identified by lowercase names.", "operations": ["DEL TextElement: Schemes are identified by lowercase names."]}, {"root": "DEL TextElement: you could write code like the following:", "operations": ["DEL TextElement: you could write code like the following:"]}, {"root": "DEL TextElement: </p>", "operations": ["DEL TextElement: </p>"]}, {"root": "DEL ParenthesizedExpression", "operations": ["DEL ParenthesizedExpression"]}, {"root": "DEL SimpleName: socketFactory", "operations": ["DEL SimpleName: socketFactory"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL TagElement", "operations": ["DEL TagElement"]}, {"root": "DEL TagElement: @param", "operations": ["DEL TagElement: @param"]}, {"root": "DEL SimpleName: name", "operations": ["DEL SimpleName: name"]}, {"root": "DEL SimpleName: defaultPort", "operations": ["DEL SimpleName: defaultPort"]}, {"root": "DEL SimpleName: layered", "operations": ["DEL SimpleName: layered"]}, {"root": "DEL SimpleName: socketFactory", "operations": ["DEL SimpleName: socketFactory"]}, {"root": "DEL ParenthesizedExpression", "operations": ["DEL InfixExpression: &&", "DEL ParenthesizedExpression"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL Block", "DEL ParenthesizedExpression", "DEL IfStatement", "DEL PrefixExpression: !"]}, {"root": "DEL Javadoc", "operations": ["DEL TagElement: @return", "DEL Javadoc", "DEL TagElement", "DEL TextElement:   the hash code", "DEL TextElement: Obtains a hash code for this scheme."]}]}}, {"Scheme_diff": {"operations": ["Insert MethodDeclaration(327) into TypeDeclaration: class(673) at 11", "Insert MethodDeclaration(439) into TypeDeclaration: class(673) at 14", "Insert MethodDeclaration(618) into TypeDeclaration: class(673) at 19", "Update SimpleType: SocketFactory(48) to SchemeSocketFactory", "Insert SingleVariableDeclaration(110) into MethodDeclaration(185) at 4", "Insert SingleVariableDeclaration(115) into MethodDeclaration(185) at 5", "Move IfStatement(135) into Block(184) at 3", "Insert Javadoc(214) into MethodDeclaration(327) at 0", "Insert MarkerAnnotation(216) into MethodDeclaration(327) at 1", "Insert Modifier: public(217) into MethodDeclaration(327) at 2", "Insert SimpleName: Scheme(218) into MethodDeclaration(327) at 3", "Insert SingleVariableDeclaration(223) into MethodDeclaration(327) at 4", "Move SingleVariableDeclaration(111) into MethodDeclaration(327) at 5", "Move SingleVariableDeclaration(115) into MethodDeclaration(327) at 6", "Insert Block(326) into MethodDeclaration(327) at 7", "Insert MarkerAnnotation(362) into MethodDeclaration(411) at 1", "Insert Block(410) into MethodDeclaration(411) at 6", "Move Javadoc(342) into MethodDeclaration(439) at 0", "Move Modifier: public(345) into MethodDeclaration(439) at 1", "Move Modifier: final(346) into MethodDeclaration(439) at 2", "Insert SimpleType: SchemeSocketFactory(432) into MethodDeclaration(439) at 3", "Insert SimpleName: getSchemeSocketFactory(433) into MethodDeclaration(439) at 4", "Insert Block(438) into MethodDeclaration(439) at 5", "Move MarkerAnnotation(344) into MethodDeclaration(618) at 0", "Insert Modifier: public(553) into MethodDeclaration(618) at 1", "Insert Modifier: final(554) into MethodDeclaration(618) at 2", "Move PrimitiveType: boolean(347) into MethodDeclaration(618) at 3", "Move SimpleName: equals(348) into MethodDeclaration(618) at 4", "Move SingleVariableDeclaration(352) into MethodDeclaration(618) at 5", "Insert Block(617) into MethodDeclaration(618) at 6", "Update TextElement: Encapsulates specifics of a protocol scheme such as \"http\" or \"https\".(8) to Encapsulates specifics of a protocol scheme such as \"http\" or \"https\". Schemes are identified ", "Update TextElement: Supported schemes are typically collected in a(10) to by lowercase names. Supported schemes are typically collected in a ", "Update TextElement: For example, to configure support for \"https://\" URLs,(16) to For example, to configure support for \"https://\" URLs, you could write code like the following:", "Update TextElement: Scheme https = new Scheme(\"https\", new MySecureSocketFactory(), 443);(20) to Scheme https = new Scheme(\"https\", 443, new MySecureSocketFactory());", "Update SimpleName: SocketFactory(47) to SchemeSocketFactory", "Insert TagElement: @param(92) into Javadoc(99) at 2", "Insert TagElement: @param(96) into Javadoc(99) at 3", "Insert TagElement: @since(98) into Javadoc(99) at 4", "Insert Modifier: final(107) into SingleVariableDeclaration(110) at 0", "Insert PrimitiveType: int(108) into SingleVariableDeclaration(110) at 1", "Insert SimpleName: port(109) into SingleVariableDeclaration(110) at 2", "Insert Modifier: final(111) into SingleVariableDeclaration(115) at 0", "Insert SimpleType: SchemeSocketFactory(113) into SingleVariableDeclaration(115) at 1", "Insert SimpleName: factory(114) into SingleVariableDeclaration(115) at 2", "Insert TagElement(189) into Javadoc(214) at 0", "Insert TagElement: @param(193) into Javadoc(214) at 1", "Move TagElement: @param(95) into Javadoc(214) at 2", "Move TagElement: @param(98) into Javadoc(214) at 3", "Insert TagElement: @deprecated(213) into Javadoc(214) at 4", "Insert SimpleName: Deprecated(215) into MarkerAnnotation(216) at 0", "Insert Modifier: final(219) into SingleVariableDeclaration(223) at 0", "Insert SimpleType: String(221) into SingleVariableDeclaration(223) at 1", "Insert SimpleName: name(222) into SingleVariableDeclaration(223) at 2", "Insert IfStatement(242) into Block(326) at 0", "Insert IfStatement(252) into Block(326) at 1", "Insert IfStatement(270) into Block(326) at 2", "Insert ExpressionStatement(279) into Block(326) at 3", "Insert IfStatement(319) into Block(326) at 4", "Insert ExpressionStatement(325) into Block(326) at 5", "Insert TagElement: @deprecated(359) into Javadoc(360) at 2", "Insert SimpleName: Deprecated(361) into MarkerAnnotation(362) at 0", "Insert IfStatement(409) into Block(410) at 0", "Insert TagElement(423) into Javadoc(428) at 0", "Insert TagElement: @since(427) into Javadoc(428) at 2", "Insert SimpleName: SchemeSocketFactory(431) into SimpleType: SchemeSocketFactory(432) at 0", "Insert ReturnStatement(437) into Block(438) at 0", "Move IfStatement(358) into Block(617) at 0", "Move IfStatement(364) into Block(617) at 1", "Insert IfStatement(616) into Block(617) at 2", "Insert TextElement:  (11) into TagElement: @link(13) at 1", "Update TextElement:  SchemeRegistry(12) to SchemeRegistry", "Insert SimpleName: port(90) into TagElement: @param(92) at 0", "Insert TextElement:       the default port for this scheme(91) into TagElement: @param(92) at 1", "Insert SimpleName: factory(93) into TagElement: @param(96) at 0", "Insert TextElement:    the factory for creating sockets for communication(94) into TagElement: @param(96) at 1", "Insert TextElement: with this scheme(95) into TagElement: @param(96) at 2", "Insert TextElement:  4.1(97) into TagElement: @since(98) at 0", "Insert SimpleName: SchemeSocketFactory(112) into SimpleType: SchemeSocketFactory(113) at 0", "Insert TextElement: Creates a new scheme.(186) into TagElement(189) at 0", "Insert TextElement: Whether the created scheme allows for layered connections(187) into TagElement(189) at 1", "Insert TextElement: depends on the class of <code>factory</code>.(188) into TagElement(189) at 2", "Insert SimpleName: name(190) into TagElement: @param(193) at 0", "Insert TextElement:       the scheme name, for example \"http\".(191) into TagElement: @param(193) at 1", "Insert TextElement: The name will be converted to lowercase.(192) into TagElement: @param(193) at 2", "Insert TextElement:  Use (201) into TagElement: @deprecated(213) at 0", "Insert TagElement: @link(212) into TagElement: @deprecated(213) at 1", "Insert SimpleName: String(220) into SimpleType: String(221) at 0", "Insert InfixExpression: ==(235) into IfStatement(242) at 0", "Insert Block(241) into IfStatement(242) at 1", "Insert InfixExpression: ==(245) into IfStatement(252) at 0", "Insert Block(251) into IfStatement(252) at 1", "Insert InfixExpression: ||(261) into IfStatement(270) at 0", "Insert Block(269) into IfStatement(270) at 1", "Insert Assignment: =(278) into ExpressionStatement(279) at 0", "Move InstanceofExpression(181) into IfStatement(319) at 0", "Insert Block(302) into IfStatement(319) at 1", "Insert Block(318) into IfStatement(319) at 2", "Insert Assignment: =(324) into ExpressionStatement(325) at 0", "Insert TextElement:  Use (355) into TagElement: @deprecated(359) at 0", "Insert TagElement: @link(358) into TagElement: @deprecated(359) at 1", "Insert InstanceofExpression(373) into IfStatement(409) at 0", "Insert Block(384) into IfStatement(409) at 1", "Insert Block(408) into IfStatement(409) at 2", "Insert TextElement: Obtains the socket factory.(412) into TagElement(423) at 0", "Insert TextElement: If this scheme is (413) into TagElement(423) at 1", "Insert TagElement: @link(417) into TagElement(423) at 2", "Insert TextElement: , the factory implements(418) into TagElement(423) at 3", "Insert TagElement: @link(421) into TagElement(423) at 4", "Insert TextElement: .(422) into TagElement(423) at 5", "Update TextElement:   <code>true</code> iff the argument is equal to this scheme(340) to   the socket factory for this scheme", "Insert TextElement:  4.1(426) into TagElement: @since(427) at 0", "Insert FieldAccess(436) into ReturnStatement(437) at 0", "Move InstanceofExpression(368) into IfStatement(616) at 0", "Insert Block(612) into IfStatement(616) at 1", "Insert Block(615) into IfStatement(616) at 2", "Insert InstanceofExpression(181) into Assignment: =(182) at 1", "Insert MethodRef(211) into TagElement: @link(212) at 0", "Insert SimpleName: name(233) into InfixExpression: ==(235) at 0", "Insert NullLiteral(234) into InfixExpression: ==(235) at 1", "Insert ThrowStatement(240) into Block(241) at 0", "Insert SimpleName: factory(243) into InfixExpression: ==(245) at 0", "Insert NullLiteral(244) into InfixExpression: ==(245) at 1", "Insert ThrowStatement(250) into Block(251) at 0", "Insert ParenthesizedExpression(256) into InfixExpression: ||(261) at 0", "Insert ParenthesizedExpression(260) into InfixExpression: ||(261) at 1", "Insert ThrowStatement(268) into Block(269) at 0", "Insert FieldAccess(273) into Assignment: =(278) at 0", "Insert MethodInvocation(277) into Assignment: =(278) at 1", "Insert ExpressionStatement(295) into Block(302) at 0", "Insert ExpressionStatement(301) into Block(302) at 1", "Insert ExpressionStatement(311) into Block(318) at 0", "Insert ExpressionStatement(317) into Block(318) at 1", "Insert FieldAccess(322) into Assignment: =(324) at 0", "Insert SimpleName: port(323) into Assignment: =(324) at 1", "Insert MethodRef(357) into TagElement: @link(358) at 0", "Insert FieldAccess(370) into InstanceofExpression(373) at 0", "Insert SimpleType: SchemeSocketFactoryAdaptor(372) into InstanceofExpression(373) at 1", "Move ReturnStatement(221) into Block(384) at 0", "Insert IfStatement(407) into Block(408) at 0", "Insert MemberRef(415) into TagElement: @link(417) at 0", "Update TextElement: Compares this scheme to an object.(335) to  layered", "Move TextElement: Compares this scheme to an object.(335) into TagElement: @link(417) at 1", "Update SimpleName: obj(337) to LayeredSocketFactory", "Move SimpleName: obj(337) into TagElement: @link(421) at 0", "Update TextElement:        the object to compare with(338) to  LayeredSchemeSocketFactory", "Move TextElement:        the object to compare with(338) into TagElement: @link(421) at 1", "Insert ThisExpression(434) into FieldAccess(436) at 0", "Insert SimpleName: socketFactory(435) into FieldAccess(436) at 1", "Move VariableDeclarationStatement(382) into Block(612) at 0", "Move ReturnStatement(401) into Block(612) at 1", "Move ReturnStatement(372) into Block(615) at 0", "Insert SimpleName: factory(178) into InstanceofExpression(181) at 0", "Insert SimpleType: LayeredSchemeSocketFactory(180) into InstanceofExpression(181) at 1", "Insert SimpleName: Scheme(202) into MethodRef(211) at 0", "Insert MethodRefParameter(205) into MethodRef(211) at 1", "Insert MethodRefParameter(207) into MethodRef(211) at 2", "Insert MethodRefParameter(210) into MethodRef(211) at 3", "Insert ClassInstanceCreation(239) into ThrowStatement(240) at 0", "Insert ClassInstanceCreation(249) into ThrowStatement(250) at 0", "Insert InfixExpression: <=(255) into ParenthesizedExpression(256) at 0", "Insert InfixExpression: >(259) into ParenthesizedExpression(260) at 0", "Insert ClassInstanceCreation(267) into ThrowStatement(268) at 0", "Insert ThisExpression(271) into FieldAccess(273) at 0", "Insert SimpleName: name(272) into FieldAccess(273) at 1", "Insert SimpleName: name(274) into MethodInvocation(277) at 0", "Insert SimpleName: toLowerCase(275) into MethodInvocation(277) at 1", "Insert QualifiedName: Locale.ENGLISH(276) into MethodInvocation(277) at 2", "Insert Assignment: =(294) into ExpressionStatement(295) at 0", "Insert Assignment: =(300) into ExpressionStatement(301) at 0", "Insert Assignment: =(310) into ExpressionStatement(311) at 0", "Insert Assignment: =(316) into ExpressionStatement(317) at 0", "Insert ThisExpression(320) into FieldAccess(322) at 0", "Insert SimpleName: defaultPort(321) into FieldAccess(322) at 1", "Insert SimpleName: getSchemeSocketFactory(356) into MethodRef(357) at 0", "Insert ThisExpression(368) into FieldAccess(370) at 0", "Insert SimpleName: socketFactory(369) into FieldAccess(370) at 1", "Insert SimpleName: SchemeSocketFactoryAdaptor(371) into SimpleType: SchemeSocketFactoryAdaptor(372) at 0", "Insert MethodInvocation(382) into ReturnStatement(383) at 0", "Insert FieldAccess(387) into IfStatement(407) at 0", "Insert Block(398) into IfStatement(407) at 1", "Insert Block(406) into IfStatement(407) at 2", "Insert SimpleName: isLayered(414) into MemberRef(415) at 0", "Insert InfixExpression: &&(610) into ReturnStatement(611) at 0", "Insert SimpleName: LayeredSchemeSocketFactory(179) into SimpleType: LayeredSchemeSocketFactory(180) at 0", "Insert SimpleType: String(204) into MethodRefParameter(205) at 0", "Insert PrimitiveType: int(206) into MethodRefParameter(207) at 0", "Insert SimpleType: SchemeSocketFactory(209) into MethodRefParameter(210) at 0", "Insert SimpleType: IllegalArgumentException(237) into ClassInstanceCreation(239) at 0", "Insert StringLiteral: \"Scheme name may not be null\"(238) into ClassInstanceCreation(239) at 1", "Insert SimpleType: IllegalArgumentException(247) into ClassInstanceCreation(249) at 0", "Insert StringLiteral: \"Socket factory may not be null\"(248) into ClassInstanceCreation(249) at 1", "Insert SimpleName: port(253) into InfixExpression: <=(255) at 0", "Insert NumberLiteral: 0(254) into InfixExpression: <=(255) at 1", "Insert SimpleName: port(257) into InfixExpression: >(259) at 0", "Insert NumberLiteral: 0xffff(258) into InfixExpression: >(259) at 1", "Insert SimpleType: IllegalArgumentException(263) into ClassInstanceCreation(267) at 0", "Insert InfixExpression: +(266) into ClassInstanceCreation(267) at 1", "Insert FieldAccess(286) into Assignment: =(294) at 0", "Insert ClassInstanceCreation(293) into Assignment: =(294) at 1", "Insert FieldAccess(298) into Assignment: =(300) at 0", "Insert BooleanLiteral: true(299) into Assignment: =(300) at 1", "Insert FieldAccess(305) into Assignment: =(310) at 0", "Insert ClassInstanceCreation(309) into Assignment: =(310) at 1", "Insert FieldAccess(314) into Assignment: =(316) at 0", "Insert BooleanLiteral: false(315) into Assignment: =(316) at 1", "Insert ParenthesizedExpression(380) into MethodInvocation(382) at 0", "Insert SimpleName: getFactory(381) into MethodInvocation(382) at 1", "Insert ThisExpression(385) into FieldAccess(387) at 0", "Insert SimpleName: layered(386) into FieldAccess(387) at 1", "Insert ReturnStatement(397) into Block(398) at 0", "Insert ReturnStatement(405) into Block(406) at 0", "Update SimpleName: s(376) to that", "Move InfixExpression: &&(394) into InfixExpression: &&(610) at 0", "Move MethodInvocation(398) into InfixExpression: &&(610) at 1", "Insert SimpleName: String(203) into SimpleType: String(204) at 0", "Insert SimpleName: SchemeSocketFactory(208) into SimpleType: SchemeSocketFactory(209) at 0", "Insert SimpleName: IllegalArgumentException(236) into SimpleType: IllegalArgumentException(237) at 0", "Insert SimpleName: IllegalArgumentException(246) into SimpleType: IllegalArgumentException(247) at 0", "Insert SimpleName: IllegalArgumentException(262) into SimpleType: IllegalArgumentException(263) at 0", "Insert StringLiteral: \"Port is invalid: \"(264) into InfixExpression: +(266) at 0", "Insert SimpleName: port(265) into InfixExpression: +(266) at 1", "Insert ThisExpression(284) into FieldAccess(286) at 0", "Insert SimpleName: socketFactory(285) into FieldAccess(286) at 1", "Insert SimpleType: LayeredSchemeSocketFactoryAdaptor(288) into ClassInstanceCreation(293) at 0", "Insert CastExpression(292) into ClassInstanceCreation(293) at 1", "Insert ThisExpression(296) into FieldAccess(298) at 0", "Insert SimpleName: layered(297) into FieldAccess(298) at 1", "Insert ThisExpression(303) into FieldAccess(305) at 0", "Insert SimpleName: socketFactory(304) into FieldAccess(305) at 1", "Insert SimpleType: SchemeSocketFactoryAdaptor(307) into ClassInstanceCreation(309) at 0", "Insert SimpleName: factory(308) into ClassInstanceCreation(309) at 1", "Insert ThisExpression(312) into FieldAccess(314) at 0", "Insert SimpleName: layered(313) into FieldAccess(314) at 1", "Insert CastExpression(379) into ParenthesizedExpression(380) at 0", "Insert ClassInstanceCreation(396) into ReturnStatement(397) at 0", "Insert ClassInstanceCreation(404) into ReturnStatement(405) at 0", "Insert FieldAccess(606) into MethodInvocation(609) at 0", "Update QualifiedName: s.socketFactory(397) to that.socketFactory", "Insert SimpleName: LayeredSchemeSocketFactoryAdaptor(287) into SimpleType: LayeredSchemeSocketFactoryAdaptor(288) at 0", "Insert SimpleType: LayeredSocketFactory(290) into CastExpression(292) at 0", "Insert SimpleName: factory(291) into CastExpression(292) at 1", "Insert SimpleName: SchemeSocketFactoryAdaptor(306) into SimpleType: SchemeSocketFactoryAdaptor(307) at 0", "Insert SimpleType: SchemeSocketFactoryAdaptor(375) into CastExpression(379) at 0", "Insert FieldAccess(378) into CastExpression(379) at 1", "Insert SimpleType: LayeredSocketFactoryAdaptor(389) into ClassInstanceCreation(396) at 0", "Insert CastExpression(395) into ClassInstanceCreation(396) at 1", "Insert SimpleType: SocketFactoryAdaptor(400) into ClassInstanceCreation(404) at 0", "Insert FieldAccess(403) into ClassInstanceCreation(404) at 1", "Insert FieldAccess(600) into InfixExpression: ==(602) at 0", "Update QualifiedName: s.layered(392) to that.layered", "Insert ThisExpression(604) into FieldAccess(606) at 0", "Insert SimpleName: socketFactory(605) into FieldAccess(606) at 1", "Insert SimpleName: LayeredSocketFactory(289) into SimpleType: LayeredSocketFactory(290) at 0", "Insert SimpleName: SchemeSocketFactoryAdaptor(374) into SimpleType: SchemeSocketFactoryAdaptor(375) at 0", "Insert ThisExpression(376) into FieldAccess(378) at 0", "Insert SimpleName: socketFactory(377) into FieldAccess(378) at 1", "Insert SimpleName: LayeredSocketFactoryAdaptor(388) into SimpleType: LayeredSocketFactoryAdaptor(389) at 0", "Insert SimpleType: LayeredSchemeSocketFactory(391) into CastExpression(395) at 0", "Insert FieldAccess(394) into CastExpression(395) at 1", "Insert SimpleName: SocketFactoryAdaptor(399) into SimpleType: SocketFactoryAdaptor(400) at 0", "Insert ThisExpression(401) into FieldAccess(403) at 0", "Insert SimpleName: socketFactory(402) into FieldAccess(403) at 1", "Insert FieldAccess(588) into MethodInvocation(591) at 0", "Update QualifiedName: s.name(385) to that.name", "Insert FieldAccess(594) into InfixExpression: ==(596) at 0", "Update QualifiedName: s.defaultPort(388) to that.defaultPort", "Insert ThisExpression(598) into FieldAccess(600) at 0", "Insert SimpleName: layered(599) into FieldAccess(600) at 1", "Insert SimpleName: LayeredSchemeSocketFactory(390) into SimpleType: LayeredSchemeSocketFactory(391) at 0", "Insert ThisExpression(392) into FieldAccess(394) at 0", "Insert SimpleName: socketFactory(393) into FieldAccess(394) at 1", "Insert ThisExpression(586) into FieldAccess(588) at 0", "Insert SimpleName: name(587) into FieldAccess(588) at 1", "Insert ThisExpression(592) into FieldAccess(594) at 0", "Insert SimpleName: defaultPort(593) into FieldAccess(594) at 1", "Delete TextElement: Schemes are identified by lowercase names.(9)", "Delete TextElement: you could write code like the following:(17)", "Delete TextElement: </p>(18)", "Delete ParenthesizedExpression(182)", "Delete SimpleName: socketFactory(220)", "Delete Block(222)", "Delete TagElement(336)", "Delete TagElement: @param(339)", "Delete SimpleName: name(383)", "Delete SimpleName: defaultPort(387)", "Delete SimpleName: layered(391)", "Delete SimpleName: socketFactory(395)", "Delete InfixExpression: &&(399)", "Delete ParenthesizedExpression(400)", "Delete ParenthesizedExpression(369)", "Delete PrefixExpression: !(370)", "Delete IfStatement(373)", "Delete Block(402)", "Delete MethodDeclaration(403)", "Delete TextElement: Obtains a hash code for this scheme.(404)", "Delete TagElement(405)", "Delete TextElement:   the hash code(406)", "Delete TagElement: @return(407)", "Delete Javadoc(408)"]}}, {"SocketFactory_cluster": {"actions": [{"root": "INS MarkerAnnotation to TypeDeclaration: interface at 1", "operations": ["INS MarkerAnnotation to TypeDeclaration: interface at 1", "INS SimpleName: Deprecated to MarkerAnnotation at 0"]}, {"root": "INS TagElement: @deprecated to Javadoc at 2", "operations": ["INS SimpleName: SchemeSocketFactory to TagElement: @link at 0", "INS TagElement: @link to TagElement: @deprecated at 1", "INS TagElement: @deprecated to Javadoc at 2", "INS TextElement:  use  to TagElement: @deprecated at 0"]}]}}, {"SocketFactory_diff": {"operations": ["Insert MarkerAnnotation(25) into TypeDeclaration: interface(172) at 1", "Insert TagElement: @deprecated(22) into Javadoc(23) at 2", "Insert SimpleName: Deprecated(24) into MarkerAnnotation(25) at 0", "Insert TextElement:  use (19) into TagElement: @deprecated(22) at 0", "Insert TagElement: @link(21) into TagElement: @deprecated(22) at 1", "Insert SimpleName: SchemeSocketFactory(20) into TagElement: @link(21) at 0"]}}, {"SSLSocketFactory_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.http.conn.scheme.LayeredSchemeSocketFactory to ImportDeclaration at 0"]}, {"root": "UPDATE from org.apache.http.annotation.NotThreadSafe to org.apache.http.annotation.ThreadSafe", "operations": ["UPD QualifiedName: org.apache.http.annotation.NotThreadSafe from org.apache.http.annotation.NotThreadSafe to org.apache.http.annotation.ThreadSafe"]}, {"root": "INS SingleMemberAnnotation to TypeDeclaration: class at 1", "operations": ["INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS StringLiteral: \"deprecation\" to SingleMemberAnnotation at 1", "INS SingleMemberAnnotation to TypeDeclaration: class at 1"]}, {"root": "INS SimpleType: LayeredSchemeSocketFactory to TypeDeclaration: class at 5", "operations": ["INS SimpleType: LayeredSchemeSocketFactory to TypeDeclaration: class at 5", "INS SimpleName: LayeredSchemeSocketFactory to SimpleType: LayeredSchemeSocketFactory at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS NullLiteral to ConstructorInvocation at 4", "INS ConstructorInvocation to Block at 0", "INS SimpleName: SSLSocketFactory to MethodDeclaration at 1", "INS SimpleName: keystorePassword to ConstructorInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS SimpleName: TLS to ConstructorInvocation at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: keystore to ConstructorInvocation at 1", "INS SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER to ConstructorInvocation at 5", "INS Block to MethodDeclaration at 9", "INS SimpleName: truststore to ConstructorInvocation at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 26", "operations": ["INS Block to MethodDeclaration at 3", "INS ConstructorInvocation to Block at 0", "INS SimpleName: SSLSocketFactory to MethodDeclaration at 1", "INS SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER to ConstructorInvocation at 1", "INS SimpleName: sslContext to ConstructorInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 26", "INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 36", "operations": ["INS SimpleName: remote to MethodInvocation at 2", "INS SimpleName: connectSocket to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: InetSocketAddress to SimpleType: InetSocketAddress at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: local to VariableDeclarationFragment at 0", "INS SimpleName: HttpParams to SimpleType: HttpParams at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS ExpressionStatement to Block at 1", "INS Block to IfStatement at 2", "INS MethodRefParameter to MethodRef at 3", "INS InfixExpression: || to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: Socket to SingleVariableDeclaration at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: socket to SingleVariableDeclaration at 2", "INS SimpleName: port to SingleVariableDeclaration at 1", "INS VariableDeclarationStatement to Block at 2", "INS Assignment: = to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Block to IfStatement at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: InetSocketAddress to ClassInstanceCreation at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: InetAddress to SimpleType: InetAddress at 0", "INS SimpleName: localAddress to InfixExpression: != at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS TagElement: @deprecated to Javadoc at 0", "INS IfStatement to Block at 1", "INS SimpleName: remoteAddress to ClassInstanceCreation at 1", "INS MethodRefParameter to MethodRef at 4", "INS MethodRefParameter to MethodRef at 2", "INS SimpleName: local to Assignment: = at 0", "INS ReturnStatement to Block at 5", "INS SimpleName: remote to VariableDeclarationFragment at 0", "INS SimpleName: host to MethodInvocation at 2", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: HttpParams to SimpleType: HttpParams at 0", "INS IfStatement to Block at 3", "INS VariableDeclarationStatement to Block at 4", "INS SimpleType: ConnectTimeoutException to MethodDeclaration at 13", "INS InfixExpression: != to InfixExpression: || at 0", "INS SimpleName: params to MethodInvocation at 4", "INS SimpleType: Socket to MethodDeclaration at 3", "INS MethodInvocation to ReturnStatement at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: IOException to MethodDeclaration at 11", "INS NullLiteral to VariableDeclarationFragment at 1", "INS MethodInvocation to Assignment: = at 1", "INS TextElement:  Use  to TagElement: @deprecated at 0", "INS SimpleName: Socket to SimpleType: Socket at 0", "INS MethodDeclaration to TypeDeclaration: class at 36", "INS SimpleName: UnknownHostException to SimpleType: UnknownHostException at 0", "INS SimpleName: getByName to MethodInvocation at 1", "INS SimpleName: Socket to SimpleType: Socket at 0", "INS Modifier: public to MethodDeclaration at 2", "INS SimpleType: UnknownHostException to MethodDeclaration at 12", "INS Block to MethodDeclaration at 14", "INS TagElement: @link to TagElement: @deprecated at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: ConnectTimeoutException to SimpleType: ConnectTimeoutException at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: InetAddress to MethodInvocation at 0", "INS SimpleType: InetAddress to VariableDeclarationStatement at 0", "INS SimpleName: local to MethodInvocation at 3", "INS SimpleName: port to ClassInstanceCreation at 2", "INS SimpleName: connectSocket to MethodInvocation at 0", "INS SimpleName: socket to MethodInvocation at 1", "INS SimpleType: HttpParams to MethodRefParameter at 0", "INS SimpleName: connectSocket to MethodRef at 0", "INS SimpleType: HttpParams to SingleVariableDeclaration at 1", "INS SimpleName: remoteAddress to Assignment: = at 0", "INS SingleVariableDeclaration to MethodDeclaration at 10", "INS SimpleName: params to SingleVariableDeclaration at 2", "INS MethodRefParameter to MethodRef at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 37", "operations": ["INS SimpleName: port to MethodInvocation at 3", "INS SimpleName: Socket to SimpleType: Socket at 0", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS SimpleName: createSocket to MethodDeclaration at 4", "INS SimpleName: UnknownHostException to SimpleType: UnknownHostException at 0", "INS SimpleType: String to MethodRefParameter at 0", "INS SimpleName: Socket to SimpleType: Socket at 0", "INS MethodDeclaration to TypeDeclaration: class at 37", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ReturnStatement to Block at 0", "INS PrimitiveType: boolean to MethodRefParameter at 0", "INS SimpleType: Socket to MethodRefParameter at 0", "INS SimpleName: createLayeredSocket to MethodInvocation at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: createLayeredSocket to MethodRef at 0", "INS TextElement:  Use  to TagElement: @deprecated at 0", "INS MethodRefParameter to MethodRef at 2", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: String to SingleVariableDeclaration at 1", "INS SimpleType: IOException to MethodDeclaration at 9", "INS SimpleName: host to MethodInvocation at 2", "INS TagElement: @deprecated to Javadoc at 0", "INS SimpleName: socket to MethodInvocation at 1", "INS SimpleName: port to SingleVariableDeclaration at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: Socket to MethodDeclaration at 3", "INS SimpleType: UnknownHostException to MethodDeclaration at 10", "INS MethodRefParameter to MethodRef at 3", "INS SimpleName: host to SingleVariableDeclaration at 2", "INS MethodRef to TagElement: @link at 0", "INS Modifier: public to MethodDeclaration at 2", "INS PrimitiveType: int to MethodRefParameter at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: Socket to SimpleType: Socket at 0", "INS TagElement: @link to TagElement: @deprecated at 1", "INS MethodRefParameter to MethodRef at 1", "INS SimpleName: socket to SingleVariableDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: autoClose to MethodInvocation at 4", "INS Block to MethodDeclaration at 11", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS SimpleName: String to SimpleType: String at 0", "INS MethodRefParameter to MethodRef at 4", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleType: Socket to SingleVariableDeclaration at 1", "INS SimpleName: autoClose to SingleVariableDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "UPDATE from NotThreadSafe to ThreadSafe", "operations": ["UPD SimpleName: NotThreadSafe from NotThreadSafe to ThreadSafe"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS MethodRefParameter to MethodRef at 3", "INS SimpleType: KeyStore to MethodRefParameter at 0", "INS SimpleName: SecureRandom to SimpleType: SecureRandom at 0", "INS TextElement:  Use  to TagElement: @deprecated at 0", "INS SimpleName: KeyStore to SimpleType: KeyStore at 0", "INS SimpleType: String to MethodRefParameter at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: X509HostnameVerifier to SimpleType: X509HostnameVerifier at 0", "INS SimpleName: SSLSocketFactory to MethodRef at 0", "INS MethodRef to TagElement: @link at 0", "INS SimpleType: String to MethodRefParameter at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodRefParameter to MethodRef at 5", "INS MethodRefParameter to MethodRef at 6", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: X509HostnameVerifier to MethodRefParameter at 0", "INS SimpleName: KeyStore to SimpleType: KeyStore at 0", "INS TagElement: @link to TagElement: @deprecated at 1", "INS MethodRefParameter to MethodRef at 2", "INS MethodRefParameter to MethodRef at 4", "INS SimpleType: KeyStore to MethodRefParameter at 0", "INS SimpleType: SecureRandom to MethodRefParameter at 0", "INS TagElement: @deprecated to Javadoc at 0", "INS MethodRefParameter to MethodRef at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: algorithm to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: KeyStore to SingleVariableDeclaration at 1", "INS SimpleName: keystore to SingleVariableDeclaration at 2", "INS SimpleName: KeyStore to SimpleType: KeyStore at 0", "INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleName: keystorePassword to SingleVariableDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleType: String to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleType: KeyStore to SingleVariableDeclaration at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: KeyStore to SimpleType: KeyStore at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: truststore to SingleVariableDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 8", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 8", "INS SimpleName: random to SingleVariableDeclaration at 2", "INS SimpleType: SecureRandom to SingleVariableDeclaration at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: SecureRandom to SimpleType: SecureRandom at 0"]}, {"root": "INS SimpleType: NoSuchAlgorithmException to MethodDeclaration at 15", "operations": ["INS SimpleType: NoSuchAlgorithmException to MethodDeclaration at 15", "INS SimpleName: NoSuchAlgorithmException to SimpleType: NoSuchAlgorithmException at 0"]}, {"root": "INS SimpleType: KeyManagementException to MethodDeclaration at 16", "operations": ["INS SimpleType: KeyManagementException to MethodDeclaration at 16", "INS SimpleName: KeyManagementException to SimpleType: KeyManagementException at 0"]}, {"root": "INS SimpleType: KeyStoreException to MethodDeclaration at 17", "operations": ["INS SimpleType: KeyStoreException to MethodDeclaration at 17", "INS SimpleName: KeyStoreException to SimpleType: KeyStoreException at 0"]}, {"root": "INS SimpleType: UnrecoverableKeyException to MethodDeclaration at 18", "operations": ["INS SimpleName: UnrecoverableKeyException to SimpleType: UnrecoverableKeyException at 0", "INS SimpleType: UnrecoverableKeyException to MethodDeclaration at 18"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TagElement: @since to Javadoc at 0", "INS TextElement:  4.1 to TagElement: @since at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SimpleType: KeyManagementException to MethodDeclaration at 10", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 7", "MOV SimpleType: NoSuchAlgorithmException to MethodDeclaration at 9", "MOV SimpleType: KeyStoreException to MethodDeclaration at 11", "MOV SimpleType: UnrecoverableKeyException to MethodDeclaration at 12"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 8", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: X509HostnameVerifier to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS SimpleName: X509HostnameVerifier to SimpleType: X509HostnameVerifier at 0", "INS SimpleName: hostnameVerifier to SingleVariableDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleType: NoSuchAlgorithmException to MethodDeclaration at 5", "MOV SimpleType: KeyManagementException to MethodDeclaration at 6", "MOV SimpleType: UnrecoverableKeyException to MethodDeclaration at 8", "MOV SimpleType: KeyStoreException to MethodDeclaration at 7", "MOV SingleVariableDeclaration to MethodDeclaration at 2"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS SimpleType: SSLContext to MethodRefParameter at 0", "INS TagElement: @deprecated to Javadoc at 0", "INS TagElement: @link to TagElement: @deprecated at 1", "INS MethodRef to TagElement: @link at 0", "INS TextElement:  Use  to TagElement: @deprecated at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: SSLSocketFactory to MethodRef at 0", "INS MethodRefParameter to MethodRef at 1", "INS SimpleName: SSLContext to SimpleType: SSLContext at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: SSLContext to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: SSLContext to SimpleType: SSLContext at 0", "INS SimpleName: sslContext to SingleVariableDeclaration at 2"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TextElement:  4.1 to TagElement: @since at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @since to Javadoc at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: hostnameVerifier to SingleVariableDeclaration at 2", "INS SimpleType: X509HostnameVerifier to SingleVariableDeclaration at 1", "INS SimpleName: X509HostnameVerifier to SimpleType: X509HostnameVerifier at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 2"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TagElement: @since to Javadoc at 0", "INS TextElement:  4.1 to TagElement: @since at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleName: localAddress to SingleVariableDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleType: InetSocketAddress to SingleVariableDeclaration at 1", "INS SimpleName: InetSocketAddress to SimpleType: InetSocketAddress at 0", "INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: UnknownHostException to MethodDeclaration at 12", "operations": ["INS SimpleName: UnknownHostException to SimpleType: UnknownHostException at 0", "INS SimpleType: UnknownHostException to MethodDeclaration at 12"]}, {"root": "INS SimpleType: ConnectTimeoutException to MethodDeclaration at 13", "operations": ["INS SimpleName: ConnectTimeoutException to SimpleType: ConnectTimeoutException at 0", "INS SimpleType: ConnectTimeoutException to MethodDeclaration at 13"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TextElement:  4.1 to TagElement: @since at 0", "INS TagElement: @since to Javadoc at 0"]}, {"root": "UPDATE from createSocket to createLayeredSocket", "operations": ["UPD SimpleName: createSocket from createSocket to createLayeredSocket"]}, {"root": "INS Block to MethodDeclaration at 10", "operations": ["INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: hostnameVerifier to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS IfStatement to Block at 1", "INS Block to MethodDeclaration at 10", "INS FieldAccess to InfixExpression: != at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Deprecated to MarkerAnnotation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 8", "MOV SingleVariableDeclaration to MethodDeclaration at 9", "MOV SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "INS ExpressionStatement to Block at 9", "operations": ["INS ExpressionStatement to Block at 9", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER to Assignment: = at 1", "INS SimpleName: hostnameVerifier to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS SuperConstructorInvocation to Block at 0", "operations": ["INS SuperConstructorInvocation to Block at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS InfixExpression: == to IfStatement at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: algorithm to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to Block at 1", "INS SimpleName: algorithm to InfixExpression: == at 0", "INS SimpleName: TLS to Assignment: = at 1", "INS NullLiteral to InfixExpression: == at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS Dimension to ArrayType: KeyManager[] at 1", "INS SimpleName: KeyManager to SimpleType: KeyManager at 0", "INS ArrayType: KeyManager[] to VariableDeclarationStatement at 0", "INS SimpleType: KeyManager to ArrayType: KeyManager[] at 0", "INS SimpleName: keymanagers to VariableDeclarationFragment at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 2"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS SimpleName: createKeyManagers to MethodInvocation at 0", "INS SimpleName: keystore to MethodInvocation at 1", "INS SimpleName: keymanagers to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to Assignment: = at 1", "INS NullLiteral to InfixExpression: != at 1", "INS IfStatement to Block at 3", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: keystorePassword to MethodInvocation at 2", "INS SimpleName: keystore to InfixExpression: != at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS SimpleName: trustmanagers to VariableDeclarationFragment at 0", "INS ArrayType: TrustManager[] to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 4", "INS Dimension to ArrayType: TrustManager[] at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: TrustManager to ArrayType: TrustManager[] at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: TrustManager to SimpleType: TrustManager at 0"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: createTrustManagers to MethodInvocation at 0", "INS SimpleName: truststore to InfixExpression: != at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to Assignment: = at 1", "INS IfStatement to Block at 5", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: trustmanagers to Assignment: = at 0", "INS SimpleName: truststore to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS ExpressionStatement to Block at 6", "INS SimpleName: algorithm to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: getInstance to MethodInvocation at 1", "INS SimpleName: sslcontext to FieldAccess at 1", "INS SimpleName: SSLContext to MethodInvocation at 0", "INS FieldAccess to Assignment: = at 0"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS FieldAccess to MethodInvocation at 0", "INS SimpleName: random to MethodInvocation at 4", "INS SimpleName: trustmanagers to MethodInvocation at 3", "INS SimpleName: init to MethodInvocation at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: keymanagers to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 7", "INS SimpleName: sslcontext to FieldAccess at 1"]}, {"root": "INS ExpressionStatement to Block at 8", "operations": ["INS SimpleName: socketfactory to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: getSocketFactory to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 8", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: sslcontext to FieldAccess at 1"]}, {"root": "INS ExpressionStatement to Block at 9", "operations": ["INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 9", "INS SimpleName: hostnameVerifier to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: hostnameVerifier to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS ExpressionStatement to Block at 10", "operations": ["INS NullLiteral to Assignment: = at 1", "INS ExpressionStatement to Block at 10", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: nameResolver to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0"]}, {"root": "INS SuperConstructorInvocation to Block at 0", "operations": ["INS SuperConstructorInvocation to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ExpressionStatement to Block at 3", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: hostnameVerifier to FieldAccess at 1"]}, {"root": "INS SuperConstructorInvocation to Block at 0", "operations": ["INS SuperConstructorInvocation to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: sslContext to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: sslcontext to FieldAccess at 1", "INS ExpressionStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS FieldAccess to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: sslcontext to FieldAccess at 1", "INS SimpleName: socketfactory to FieldAccess at 1", "INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: getSocketFactory to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ExpressionStatement to Block at 3", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: hostnameVerifier to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: hostnameVerifier to Assignment: = at 1"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS NullLiteral to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: nameResolver to FieldAccess at 1"]}, {"root": "INS SimpleType: InetSocketAddress to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: InetSocketAddress to SimpleType: InetSocketAddress at 0", "INS SimpleType: InetSocketAddress to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleName: remoteAddress to SingleVariableDeclaration at 2", "operations": ["INS SimpleName: remoteAddress to SingleVariableDeclaration at 2"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 11", "operations": ["INS ThisExpression to FieldAccess at 0", "INS SimpleName: hostnameVerifier to FieldAccess at 1", "INS Block to IfStatement at 1", "INS InfixExpression: != to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS FieldAccess to InfixExpression: != at 0", "INS IfStatement to Block at 11"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: Socket to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: Socket to SimpleType: Socket at 0", "INS SimpleType: Socket to SingleVariableDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 2", "MOV TryStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER to ConstructorInvocation at 5", "operations": ["INS SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER to ConstructorInvocation at 5"]}, {"root": "INS SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER to ConstructorInvocation at 5", "operations": ["INS SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER to ConstructorInvocation at 5"]}, {"root": "INS InfixExpression: == to IfStatement at 0", "operations": ["INS SimpleName: remoteAddress to InfixExpression: == at 0", "INS InfixExpression: == to IfStatement at 0", "INS NullLiteral to InfixExpression: == at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "INS FieldAccess to ReturnStatement at 0", "operations": ["INS SimpleName: hostnameVerifier to FieldAccess at 1", "INS FieldAccess to ReturnStatement at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1", "MOV SimpleType: InetSocketAddress to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV InfixExpression: != to IfStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: InetSocketAddress to VariableDeclarationStatement at 0"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: > to InfixExpression: || at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "UPDATE from \"Socket is closed.\" to \"Remote address may not be null\"", "operations": ["UPD StringLiteral: \"Socket is closed.\" from \"Socket is closed.\" to \"Remote address may not be null\""]}, {"root": "UPDATE from \"Socket not created by this factory.\" to \"HTTP parameters may not be null\"", "operations": ["UPD StringLiteral: \"Socket not created by this factory.\" from \"Socket not created by this factory.\" to \"HTTP parameters may not be null\""]}, {"root": "UPDATE from isa to localAddress", "operations": ["UPD SimpleName: isa from isa to localAddress"]}, {"root": "UPDATE from \"Socket may not be null.\" to \"Socket may not be null\"", "operations": ["UPD StringLiteral: \"Socket may not be null.\" from \"Socket may not be null.\" to \"Socket may not be null\""]}, {"root": "UPDATE from \"Parameters may not be null.\" to \"Socket not created by this factory\"", "operations": ["UPD StringLiteral: \"Parameters may not be null.\" from \"Parameters may not be null.\" to \"Socket not created by this factory\""]}, {"root": "UPDATE from \"Target host may not be null.\" to \"Socket is closed\"", "operations": ["UPD StringLiteral: \"Target host may not be null.\" from \"Target host may not be null.\" to \"Socket is closed\""]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: hostnameVerifier to FieldAccess at 1"]}, {"root": "MOVE from MethodRefParameter", "operations": ["MOV SimpleType: Socket to MethodRefParameter at 0"]}, {"root": "MOVE from MethodRefParameter", "operations": ["MOV SimpleType: InetSocketAddress to MethodRefParameter at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1", "MOV SimpleType: InetSocketAddress to MethodRefParameter at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV ClassInstanceCreation to Assignment: = at 1"]}, {"root": "MOVE from ConditionalExpression", "operations": ["MOV InfixExpression: != to ConditionalExpression at 0"]}, {"root": "INS MethodInvocation to InfixExpression: + at 1", "operations": ["INS SimpleName: getHostName to MethodInvocation at 1", "INS SimpleName: remoteAddress to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 1"]}, {"root": "INS StringLiteral: \"/\" to InfixExpression: + at 2", "operations": ["INS StringLiteral: \"/\" to InfixExpression: + at 2"]}, {"root": "INS MethodInvocation to InfixExpression: + at 3", "operations": ["INS SimpleName: getAddress to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: + at 3", "INS SimpleName: remoteAddress to MethodInvocation at 0"]}, {"root": "INS FieldAccess to MethodInvocation at 0", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: hostnameVerifier to FieldAccess at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: remoteAddress to MethodInvocation at 0"]}, {"root": "UPDATE from host to getHostName", "operations": ["UPD SimpleName: host from host to getHostName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: host to MethodInvocation at 1"]}, {"root": "DEL SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER", "operations": ["DEL SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER"]}, {"root": "DEL ConstructorInvocation", "operations": ["DEL SimpleName: keystore", "DEL NullLiteral", "DEL ConstructorInvocation", "DEL SimpleName: TLS", "DEL SimpleName: truststore", "DEL NullLiteral", "DEL SimpleName: keystorePassword"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL ConstructorInvocation", "operations": ["DEL SimpleName: sslContext", "DEL ConstructorInvocation", "DEL NullLiteral"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL SimpleName: port", "operations": ["DEL SimpleName: port"]}, {"root": "DEL ParenthesizedExpression", "operations": ["DEL ParenthesizedExpression"]}, {"root": "DEL InfixExpression: ||", "operations": ["DEL ParenthesizedExpression", "DEL InfixExpression: ||", "DEL ParenthesizedExpression"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: isa", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: remoteAddress", "DEL SimpleName: port", "DEL ExpressionStatement", "DEL SimpleName: host", "DEL Assignment: =", "DEL IfStatement", "DEL Block"]}, {"root": "DEL SimpleName: remoteAddress", "operations": ["DEL SimpleName: remoteAddress"]}, {"root": "DEL SimpleName: hostnameVerifier", "operations": ["DEL SimpleName: hostnameVerifier"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL InfixExpression: ==", "DEL NullLiteral", "DEL SimpleName: host"]}, {"root": "DEL SimpleName: hostnameVerifier", "operations": ["DEL SimpleName: hostnameVerifier"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL SimpleName: hostnameVerifier", "operations": ["DEL SimpleName: hostnameVerifier"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: port", "DEL ClassInstanceCreation"]}]}}, {"SSLSocketFactory_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(1460) at 4", "Update QualifiedName: org.apache.http.annotation.NotThreadSafe(2) to org.apache.http.annotation.ThreadSafe", "Insert QualifiedName: org.apache.http.conn.scheme.LayeredSchemeSocketFactory(8) into ImportDeclaration(9) at 0", "Insert SingleMemberAnnotation(157) into TypeDeclaration: class(1459) at 1", "Insert SimpleType: LayeredSchemeSocketFactory(163) into TypeDeclaration: class(1459) at 5", "Insert MethodDeclaration(605) into TypeDeclaration: class(1459) at 21", "Insert MethodDeclaration(770) into TypeDeclaration: class(1459) at 26", "Insert MethodDeclaration(1407) into TypeDeclaration: class(1459) at 36", "Insert MethodDeclaration(1458) into TypeDeclaration: class(1459) at 37", "Insert SimpleName: SuppressWarnings(155) into SingleMemberAnnotation(157) at 0", "Insert StringLiteral: \"deprecation\"(156) into SingleMemberAnnotation(157) at 1", "Update SimpleName: NotThreadSafe(153) to ThreadSafe", "Insert SimpleName: LayeredSchemeSocketFactory(162) into SimpleType: LayeredSchemeSocketFactory(163) at 0", "Insert Javadoc(306) into MethodDeclaration(438) at 0", "Insert MarkerAnnotation(308) into MethodDeclaration(438) at 1", "Insert SingleVariableDeclaration(314) into MethodDeclaration(438) at 4", "Insert SingleVariableDeclaration(319) into MethodDeclaration(438) at 5", "Insert SingleVariableDeclaration(324) into MethodDeclaration(438) at 6", "Insert SingleVariableDeclaration(329) into MethodDeclaration(438) at 7", "Insert SingleVariableDeclaration(334) into MethodDeclaration(438) at 8", "Insert SimpleType: NoSuchAlgorithmException(341) into MethodDeclaration(438) at 10", "Insert SimpleType: KeyManagementException(343) into MethodDeclaration(438) at 11", "Insert SimpleType: KeyStoreException(345) into MethodDeclaration(438) at 12", "Insert SimpleType: UnrecoverableKeyException(347) into MethodDeclaration(438) at 13", "Insert Javadoc(441) into MethodDeclaration(571) at 0", "Move SingleVariableDeclaration(282) into MethodDeclaration(571) at 3", "Move SingleVariableDeclaration(287) into MethodDeclaration(571) at 4", "Move SingleVariableDeclaration(292) into MethodDeclaration(571) at 5", "Move SingleVariableDeclaration(297) into MethodDeclaration(571) at 6", "Move SingleVariableDeclaration(302) into MethodDeclaration(571) at 7", "Insert SingleVariableDeclaration(472) into MethodDeclaration(571) at 8", "Move SimpleType: NoSuchAlgorithmException(309) into MethodDeclaration(571) at 9", "Move SimpleType: KeyManagementException(311) into MethodDeclaration(571) at 10", "Move SimpleType: KeyStoreException(313) into MethodDeclaration(571) at 11", "Move SimpleType: UnrecoverableKeyException(315) into MethodDeclaration(571) at 12", "Insert Modifier: public(572) into MethodDeclaration(605) at 0", "Insert SimpleName: SSLSocketFactory(573) into MethodDeclaration(605) at 1", "Move SingleVariableDeclaration(441) into MethodDeclaration(605) at 2", "Move SingleVariableDeclaration(446) into MethodDeclaration(605) at 3", "Move SingleVariableDeclaration(417) into MethodDeclaration(605) at 4", "Move SimpleType: NoSuchAlgorithmException(419) into MethodDeclaration(605) at 5", "Move SimpleType: KeyManagementException(421) into MethodDeclaration(605) at 6", "Move SimpleType: KeyStoreException(423) into MethodDeclaration(605) at 7", "Move SimpleType: UnrecoverableKeyException(425) into MethodDeclaration(605) at 8", "Insert Block(604) into MethodDeclaration(605) at 9", "Move SingleVariableDeclaration(407) into MethodDeclaration(634) at 2", "Move SingleVariableDeclaration(412) into MethodDeclaration(634) at 3", "Insert Javadoc(667) into MethodDeclaration(712) at 0", "Insert MarkerAnnotation(669) into MethodDeclaration(712) at 1", "Insert SingleVariableDeclaration(676) into MethodDeclaration(712) at 4", "Insert Javadoc(715) into MethodDeclaration(758) at 0", "Move SingleVariableDeclaration(494) into MethodDeclaration(758) at 3", "Insert SingleVariableDeclaration(727) into MethodDeclaration(758) at 4", "Insert Modifier: public(759) into MethodDeclaration(770) at 0", "Insert SimpleName: SSLSocketFactory(760) into MethodDeclaration(770) at 1", "Move SingleVariableDeclaration(530) into MethodDeclaration(770) at 2", "Insert Block(769) into MethodDeclaration(770) at 3", "Insert Javadoc(938) into MethodDeclaration(1106) at 0", "Insert SingleVariableDeclaration(957) into MethodDeclaration(1106) at 6", "Insert SimpleType: UnknownHostException(966) into MethodDeclaration(1106) at 9", "Insert SimpleType: ConnectTimeoutException(968) into MethodDeclaration(1106) at 10", "Insert Javadoc(1172) into MethodDeclaration(1234) at 0", "Update SimpleName: createSocket(979) to createLayeredSocket", "Insert Block(1233) into MethodDeclaration(1234) at 10", "Insert MarkerAnnotation(1236) into MethodDeclaration(1261) at 0", "Insert Javadoc(1289) into MethodDeclaration(1407) at 0", "Insert MarkerAnnotation(1291) into MethodDeclaration(1407) at 1", "Insert Modifier: public(1292) into MethodDeclaration(1407) at 2", "Insert SimpleType: Socket(1294) into MethodDeclaration(1407) at 3", "Insert SimpleName: connectSocket(1295) into MethodDeclaration(1407) at 4", "Insert SingleVariableDeclaration(1300) into MethodDeclaration(1407) at 5", "Move SingleVariableDeclaration(714) into MethodDeclaration(1407) at 6", "Insert SingleVariableDeclaration(1308) into MethodDeclaration(1407) at 7", "Move SingleVariableDeclaration(723) into MethodDeclaration(1407) at 8", "Move SingleVariableDeclaration(726) into MethodDeclaration(1407) at 9", "Insert SingleVariableDeclaration(1321) into MethodDeclaration(1407) at 10", "Insert SimpleType: IOException(1323) into MethodDeclaration(1407) at 11", "Insert SimpleType: UnknownHostException(1325) into MethodDeclaration(1407) at 12", "Insert SimpleType: ConnectTimeoutException(1327) into MethodDeclaration(1407) at 13", "Insert Block(1406) into MethodDeclaration(1407) at 14", "Insert Javadoc(1423) into MethodDeclaration(1458) at 0", "Insert MarkerAnnotation(1425) into MethodDeclaration(1458) at 1", "Insert Modifier: public(1426) into MethodDeclaration(1458) at 2", "Insert SimpleType: Socket(1428) into MethodDeclaration(1458) at 3", "Insert SimpleName: createSocket(1429) into MethodDeclaration(1458) at 4", "Insert SingleVariableDeclaration(1434) into MethodDeclaration(1458) at 5", "Insert SingleVariableDeclaration(1439) into MethodDeclaration(1458) at 6", "Insert SingleVariableDeclaration(1442) into MethodDeclaration(1458) at 7", "Insert SingleVariableDeclaration(1445) into MethodDeclaration(1458) at 8", "Insert SimpleType: IOException(1447) into MethodDeclaration(1458) at 9", "Insert SimpleType: UnknownHostException(1449) into MethodDeclaration(1458) at 10", "Insert Block(1457) into MethodDeclaration(1458) at 11", "Insert TagElement: @deprecated(305) into Javadoc(306) at 0", "Insert SimpleName: Deprecated(307) into MarkerAnnotation(308) at 0", "Insert SimpleType: String(312) into SingleVariableDeclaration(314) at 0", "Insert SimpleName: algorithm(313) into SingleVariableDeclaration(314) at 1", "Insert Modifier: final(315) into SingleVariableDeclaration(319) at 0", "Insert SimpleType: KeyStore(317) into SingleVariableDeclaration(319) at 1", "Insert SimpleName: keystore(318) into SingleVariableDeclaration(319) at 2", "Insert Modifier: final(320) into SingleVariableDeclaration(324) at 0", "Insert SimpleType: String(322) into SingleVariableDeclaration(324) at 1", "Insert SimpleName: keystorePassword(323) into SingleVariableDeclaration(324) at 2", "Insert Modifier: final(325) into SingleVariableDeclaration(329) at 0", "Insert SimpleType: KeyStore(327) into SingleVariableDeclaration(329) at 1", "Insert SimpleName: truststore(328) into SingleVariableDeclaration(329) at 2", "Insert Modifier: final(330) into SingleVariableDeclaration(334) at 0", "Insert SimpleType: SecureRandom(332) into SingleVariableDeclaration(334) at 1", "Insert SimpleName: random(333) into SingleVariableDeclaration(334) at 2", "Insert SimpleName: NoSuchAlgorithmException(340) into SimpleType: NoSuchAlgorithmException(341) at 0", "Insert SimpleName: KeyManagementException(342) into SimpleType: KeyManagementException(343) at 0", "Insert SimpleName: KeyStoreException(344) into SimpleType: KeyStoreException(345) at 0", "Insert SimpleName: UnrecoverableKeyException(346) into SimpleType: UnrecoverableKeyException(347) at 0", "Insert ExpressionStatement(430) into Block(437) at 9", "Insert TagElement: @since(440) into Javadoc(441) at 0", "Insert Modifier: final(468) into SingleVariableDeclaration(472) at 0", "Insert SimpleType: X509HostnameVerifier(470) into SingleVariableDeclaration(472) at 1", "Insert SimpleName: hostnameVerifier(471) into SingleVariableDeclaration(472) at 2", "Insert SuperConstructorInvocation(481) into Block(570) at 0", "Insert IfStatement(490) into Block(570) at 1", "Insert VariableDeclarationStatement(498) into Block(570) at 2", "Insert IfStatement(510) into Block(570) at 3", "Insert VariableDeclarationStatement(518) into Block(570) at 4", "Insert IfStatement(529) into Block(570) at 5", "Insert ExpressionStatement(538) into Block(570) at 6", "Insert ExpressionStatement(547) into Block(570) at 7", "Insert ExpressionStatement(557) into Block(570) at 8", "Insert ExpressionStatement(563) into Block(570) at 9", "Insert ExpressionStatement(569) into Block(570) at 10", "Insert ConstructorInvocation(603) into Block(604) at 0", "Insert TagElement: @deprecated(666) into Javadoc(667) at 0", "Insert SimpleName: Deprecated(668) into MarkerAnnotation(669) at 0", "Insert Modifier: final(672) into SingleVariableDeclaration(676) at 0", "Insert SimpleType: SSLContext(674) into SingleVariableDeclaration(676) at 1", "Insert SimpleName: sslContext(675) into SingleVariableDeclaration(676) at 2", "Insert SuperConstructorInvocation(682) into Block(711) at 0", "Insert ExpressionStatement(704) into Block(711) at 3", "Insert TagElement: @since(714) into Javadoc(715) at 0", "Insert Modifier: final(723) into SingleVariableDeclaration(727) at 0", "Insert SimpleType: X509HostnameVerifier(725) into SingleVariableDeclaration(727) at 1", "Insert SimpleName: hostnameVerifier(726) into SingleVariableDeclaration(727) at 2", "Insert SuperConstructorInvocation(728) into Block(757) at 0", "Insert ExpressionStatement(734) into Block(757) at 1", "Insert ExpressionStatement(744) into Block(757) at 2", "Insert ExpressionStatement(750) into Block(757) at 3", "Insert ExpressionStatement(756) into Block(757) at 4", "Insert ConstructorInvocation(768) into Block(769) at 0", "Insert TagElement: @since(937) into Javadoc(938) at 0", "Insert SimpleType: InetSocketAddress(950) into SingleVariableDeclaration(952) at 1", "Insert SimpleName: remoteAddress(951) into SingleVariableDeclaration(952) at 2", "Insert Modifier: final(953) into SingleVariableDeclaration(957) at 0", "Insert SimpleType: InetSocketAddress(955) into SingleVariableDeclaration(957) at 1", "Insert SimpleName: localAddress(956) into SingleVariableDeclaration(957) at 2", "Insert SimpleName: UnknownHostException(965) into SimpleType: UnknownHostException(966) at 0", "Insert SimpleName: ConnectTimeoutException(967) into SimpleType: ConnectTimeoutException(968) at 0", "Move IfStatement(971) into Block(1105) at 0", "Insert IfStatement(1102) into Block(1105) at 8", "Insert Modifier: final(1126) into SingleVariableDeclaration(1130) at 0", "Insert SimpleType: Socket(1128) into SingleVariableDeclaration(1130) at 1", "Move IfStatement(743) into Block(1168) at 2", "Insert TagElement: @since(1171) into Javadoc(1172) at 0", "Move VariableDeclarationStatement(1018) into Block(1233) at 0", "Insert IfStatement(1230) into Block(1233) at 1", "Move ReturnStatement(1026) into Block(1233) at 2", "Insert SimpleName: Deprecated(1235) into MarkerAnnotation(1236) at 0", "Insert TagElement: @deprecated(1288) into Javadoc(1289) at 0", "Insert SimpleName: Deprecated(1290) into MarkerAnnotation(1291) at 0", "Insert SimpleName: Socket(1293) into SimpleType: Socket(1294) at 0", "Insert Modifier: final(1296) into SingleVariableDeclaration(1300) at 0", "Insert SimpleType: Socket(1298) into SingleVariableDeclaration(1300) at 1", "Insert SimpleName: socket(1299) into SingleVariableDeclaration(1300) at 2", "Insert PrimitiveType: int(1306) into SingleVariableDeclaration(1308) at 0", "Insert SimpleName: port(1307) into SingleVariableDeclaration(1308) at 1", "Insert Modifier: final(1317) into SingleVariableDeclaration(1321) at 0", "Insert SimpleType: HttpParams(1319) into SingleVariableDeclaration(1321) at 1", "Insert SimpleName: params(1320) into SingleVariableDeclaration(1321) at 2", "Insert SimpleName: IOException(1322) into SimpleType: IOException(1323) at 0", "Insert SimpleName: UnknownHostException(1324) into SimpleType: UnknownHostException(1325) at 0", "Insert SimpleName: ConnectTimeoutException(1326) into SimpleType: ConnectTimeoutException(1327) at 0", "Insert VariableDeclarationStatement(1333) into Block(1406) at 0", "Insert IfStatement(1359) into Block(1406) at 1", "Insert VariableDeclarationStatement(1364) into Block(1406) at 2", "Insert IfStatement(1388) into Block(1406) at 3", "Insert VariableDeclarationStatement(1398) into Block(1406) at 4", "Insert ReturnStatement(1405) into Block(1406) at 5", "Insert TagElement: @deprecated(1422) into Javadoc(1423) at 0", "Insert SimpleName: Deprecated(1424) into MarkerAnnotation(1425) at 0", "Insert SimpleName: Socket(1427) into SimpleType: Socket(1428) at 0", "Insert Modifier: final(1430) into SingleVariableDeclaration(1434) at 0", "Insert SimpleType: Socket(1432) into SingleVariableDeclaration(1434) at 1", "Insert SimpleName: socket(1433) into SingleVariableDeclaration(1434) at 2", "Insert Modifier: final(1435) into SingleVariableDeclaration(1439) at 0", "Insert SimpleType: String(1437) into SingleVariableDeclaration(1439) at 1", "Insert SimpleName: host(1438) into SingleVariableDeclaration(1439) at 2", "Insert PrimitiveType: int(1440) into SingleVariableDeclaration(1442) at 0", "Insert SimpleName: port(1441) into SingleVariableDeclaration(1442) at 1", "Insert PrimitiveType: boolean(1443) into SingleVariableDeclaration(1445) at 0", "Insert SimpleName: autoClose(1444) into SingleVariableDeclaration(1445) at 1", "Insert SimpleName: IOException(1446) into SimpleType: IOException(1447) at 0", "Insert SimpleName: UnknownHostException(1448) into SimpleType: UnknownHostException(1449) at 0", "Insert ReturnStatement(1456) into Block(1457) at 0", "Insert TextElement:  Use (283) into TagElement: @deprecated(305) at 0", "Insert TagElement: @link(304) into TagElement: @deprecated(305) at 1", "Insert SimpleName: String(311) into SimpleType: String(312) at 0", "Insert SimpleName: KeyStore(316) into SimpleType: KeyStore(317) at 0", "Insert SimpleName: String(321) into SimpleType: String(322) at 0", "Insert SimpleName: KeyStore(326) into SimpleType: KeyStore(327) at 0", "Insert SimpleName: SecureRandom(331) into SimpleType: SecureRandom(332) at 0", "Insert Assignment: =(429) into ExpressionStatement(430) at 0", "Insert TextElement:  4.1(439) into TagElement: @since(440) at 0", "Insert SimpleName: X509HostnameVerifier(469) into SimpleType: X509HostnameVerifier(470) at 0", "Insert InfixExpression: ==(484) into IfStatement(490) at 0", "Insert Block(489) into IfStatement(490) at 1", "Insert ArrayType: KeyManager[](494) into VariableDeclarationStatement(498) at 0", "Insert VariableDeclarationFragment(497) into VariableDeclarationStatement(498) at 1", "Insert InfixExpression: !=(501) into IfStatement(510) at 0", "Insert Block(509) into IfStatement(510) at 1", "Insert ArrayType: TrustManager[](514) into VariableDeclarationStatement(518) at 0", "Insert VariableDeclarationFragment(517) into VariableDeclarationStatement(518) at 1", "Insert InfixExpression: !=(521) into IfStatement(529) at 0", "Insert Block(528) into IfStatement(529) at 1", "Insert Assignment: =(537) into ExpressionStatement(538) at 0", "Insert MethodInvocation(546) into ExpressionStatement(547) at 0", "Insert Assignment: =(556) into ExpressionStatement(557) at 0", "Insert Assignment: =(562) into ExpressionStatement(563) at 0", "Insert Assignment: =(568) into ExpressionStatement(569) at 0", "Insert SimpleName: TLS(597) into ConstructorInvocation(603) at 0", "Insert SimpleName: keystore(598) into ConstructorInvocation(603) at 1", "Insert SimpleName: keystorePassword(599) into ConstructorInvocation(603) at 2", "Insert SimpleName: truststore(600) into ConstructorInvocation(603) at 3", "Insert NullLiteral(601) into ConstructorInvocation(603) at 4", "Insert SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER(602) into ConstructorInvocation(603) at 5", "Insert SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER(631) into ConstructorInvocation(632) at 5", "Insert SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER(655) into ConstructorInvocation(656) at 5", "Insert TextElement:  Use (659) into TagElement: @deprecated(666) at 0", "Insert TagElement: @link(665) into TagElement: @deprecated(666) at 1", "Insert SimpleName: SSLContext(673) into SimpleType: SSLContext(674) at 0", "Insert Assignment: =(703) into ExpressionStatement(704) at 0", "Insert TextElement:  4.1(713) into TagElement: @since(714) at 0", "Insert SimpleName: X509HostnameVerifier(724) into SimpleType: X509HostnameVerifier(725) at 0", "Insert Assignment: =(733) into ExpressionStatement(734) at 0", "Insert Assignment: =(743) into ExpressionStatement(744) at 0", "Insert Assignment: =(749) into ExpressionStatement(750) at 0", "Insert Assignment: =(755) into ExpressionStatement(756) at 0", "Insert SimpleName: sslContext(766) into ConstructorInvocation(768) at 0", "Insert SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER(767) into ConstructorInvocation(768) at 1", "Insert TextElement:  4.1(936) into TagElement: @since(937) at 0", "Insert SimpleName: InetSocketAddress(949) into SimpleType: InetSocketAddress(950) at 0", "Insert SimpleName: InetSocketAddress(954) into SimpleType: InetSocketAddress(955) at 0", "Insert InfixExpression: ==(971) into IfStatement(978) at 0", "Move Block(960) into IfStatement(988) at 1", "Move InfixExpression: !=(773) into IfStatement(1014) at 0", "Insert InfixExpression: !=(1068) into IfStatement(1102) at 0", "Insert Block(1101) into IfStatement(1102) at 1", "Insert SimpleName: Socket(1127) into SimpleType: Socket(1128) at 0", "Move Block(752) into IfStatement(1155) at 1", "Move MethodInvocation(964) into IfStatement(1165) at 0", "Insert TextElement:  4.1(1170) into TagElement: @since(1171) at 0", "Insert InfixExpression: !=(1220) into IfStatement(1230) at 0", "Insert Block(1229) into IfStatement(1230) at 1", "Insert FieldAccess(1268) into ReturnStatement(1269) at 0", "Insert TextElement:  Use (1272) into TagElement: @deprecated(1288) at 0", "Insert TagElement: @link(1287) into TagElement: @deprecated(1288) at 1", "Insert SimpleName: Socket(1297) into SimpleType: Socket(1298) at 0", "Insert SimpleName: HttpParams(1318) into SimpleType: HttpParams(1319) at 0", "Move SimpleType: InetSocketAddress(822) into VariableDeclarationStatement(1333) at 0", "Insert VariableDeclarationFragment(1332) into VariableDeclarationStatement(1333) at 1", "Insert InfixExpression: ||(1340) into IfStatement(1359) at 0", "Insert Block(1358) into IfStatement(1359) at 1", "Insert SimpleType: InetAddress(1361) into VariableDeclarationStatement(1364) at 0", "Move VariableDeclarationFragment(824) into VariableDeclarationStatement(1364) at 1", "Move InfixExpression: !=(830) into IfStatement(1388) at 0", "Move Block(844) into IfStatement(1388) at 1", "Insert Block(1387) into IfStatement(1388) at 2", "Move SimpleType: InetSocketAddress(789) into VariableDeclarationStatement(1398) at 0", "Insert VariableDeclarationFragment(1397) into VariableDeclarationStatement(1398) at 1", "Insert MethodInvocation(1404) into ReturnStatement(1405) at 0", "Insert TextElement:  Use (1408) into TagElement: @deprecated(1422) at 0", "Insert TagElement: @link(1421) into TagElement: @deprecated(1422) at 1", "Insert SimpleName: Socket(1431) into SimpleType: Socket(1432) at 0", "Insert SimpleName: String(1436) into SimpleType: String(1437) at 0", "Insert MethodInvocation(1455) into ReturnStatement(1456) at 0", "Insert MethodRef(303) into TagElement: @link(304) at 0", "Insert FieldAccess(427) into Assignment: =(429) at 0", "Insert SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER(428) into Assignment: =(429) at 1", "Insert SimpleName: algorithm(482) into InfixExpression: ==(484) at 0", "Insert NullLiteral(483) into InfixExpression: ==(484) at 1", "Insert ExpressionStatement(488) into Block(489) at 0", "Insert SimpleType: KeyManager(492) into ArrayType: KeyManager[](494) at 0", "Insert Dimension(493) into ArrayType: KeyManager[](494) at 1", "Insert SimpleName: keymanagers(495) into VariableDeclarationFragment(497) at 0", "Insert NullLiteral(496) into VariableDeclarationFragment(497) at 1", "Insert SimpleName: keystore(499) into InfixExpression: !=(501) at 0", "Insert NullLiteral(500) into InfixExpression: !=(501) at 1", "Insert ExpressionStatement(508) into Block(509) at 0", "Insert SimpleType: TrustManager(512) into ArrayType: TrustManager[](514) at 0", "Insert Dimension(513) into ArrayType: TrustManager[](514) at 1", "Insert SimpleName: trustmanagers(515) into VariableDeclarationFragment(517) at 0", "Insert NullLiteral(516) into VariableDeclarationFragment(517) at 1", "Insert SimpleName: truststore(519) into InfixExpression: !=(521) at 0", "Insert NullLiteral(520) into InfixExpression: !=(521) at 1", "Insert ExpressionStatement(527) into Block(528) at 0", "Insert FieldAccess(532) into Assignment: =(537) at 0", "Insert MethodInvocation(536) into Assignment: =(537) at 1", "Insert FieldAccess(541) into MethodInvocation(546) at 0", "Insert SimpleName: init(542) into MethodInvocation(546) at 1", "Insert SimpleName: keymanagers(543) into MethodInvocation(546) at 2", "Insert SimpleName: trustmanagers(544) into MethodInvocation(546) at 3", "Insert SimpleName: random(545) into MethodInvocation(546) at 4", "Insert FieldAccess(550) into Assignment: =(556) at 0", "Insert MethodInvocation(555) into Assignment: =(556) at 1", "Insert FieldAccess(560) into Assignment: =(562) at 0", "Insert SimpleName: hostnameVerifier(561) into Assignment: =(562) at 1", "Insert FieldAccess(566) into Assignment: =(568) at 0", "Insert NullLiteral(567) into Assignment: =(568) at 1", "Insert MethodRef(664) into TagElement: @link(665) at 0", "Insert FieldAccess(701) into Assignment: =(703) at 0", "Insert SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER(702) into Assignment: =(703) at 1", "Insert FieldAccess(731) into Assignment: =(733) at 0", "Insert SimpleName: sslContext(732) into Assignment: =(733) at 1", "Insert FieldAccess(737) into Assignment: =(743) at 0", "Insert MethodInvocation(742) into Assignment: =(743) at 1", "Insert FieldAccess(747) into Assignment: =(749) at 0", "Insert SimpleName: hostnameVerifier(748) into Assignment: =(749) at 1", "Insert FieldAccess(753) into Assignment: =(755) at 0", "Insert NullLiteral(754) into Assignment: =(755) at 1", "Insert SimpleName: remoteAddress(969) into InfixExpression: ==(971) at 0", "Insert NullLiteral(970) into InfixExpression: ==(971) at 1", "Insert FieldAccess(1066) into InfixExpression: !=(1068) at 0", "Insert NullLiteral(1067) into InfixExpression: !=(1068) at 1", "Move TryStatement(909) into Block(1101) at 0", "Insert FieldAccess(1218) into InfixExpression: !=(1220) at 0", "Insert NullLiteral(1219) into InfixExpression: !=(1220) at 1", "Move ExpressionStatement(1024) into Block(1229) at 0", "Insert ThisExpression(1266) into FieldAccess(1268) at 0", "Insert SimpleName: hostnameVerifier(1267) into FieldAccess(1268) at 1", "Insert MethodRef(1286) into TagElement: @link(1287) at 0", "Insert SimpleName: local(1330) into VariableDeclarationFragment(1332) at 0", "Insert NullLiteral(1331) into VariableDeclarationFragment(1332) at 1", "Insert InfixExpression: !=(1336) into InfixExpression: ||(1340) at 0", "Move InfixExpression: >(777) into InfixExpression: ||(1340) at 1", "Move IfStatement(787) into Block(1358) at 0", "Insert ExpressionStatement(1357) into Block(1358) at 1", "Insert SimpleName: InetAddress(1360) into SimpleType: InetAddress(1361) at 0", "Insert ExpressionStatement(1386) into Block(1387) at 0", "Insert SimpleName: remote(1391) into VariableDeclarationFragment(1397) at 0", "Insert ClassInstanceCreation(1396) into VariableDeclarationFragment(1397) at 1", "Insert SimpleName: connectSocket(1399) into MethodInvocation(1404) at 0", "Insert SimpleName: socket(1400) into MethodInvocation(1404) at 1", "Insert SimpleName: remote(1401) into MethodInvocation(1404) at 2", "Insert SimpleName: local(1402) into MethodInvocation(1404) at 3", "Insert SimpleName: params(1403) into MethodInvocation(1404) at 4", "Insert MethodRef(1420) into TagElement: @link(1421) at 0", "Insert SimpleName: createLayeredSocket(1450) into MethodInvocation(1455) at 0", "Insert SimpleName: socket(1451) into MethodInvocation(1455) at 1", "Insert SimpleName: host(1452) into MethodInvocation(1455) at 2", "Insert SimpleName: port(1453) into MethodInvocation(1455) at 3", "Insert SimpleName: autoClose(1454) into MethodInvocation(1455) at 4", "Insert SimpleName: SSLSocketFactory(284) into MethodRef(303) at 0", "Insert MethodRefParameter(287) into MethodRef(303) at 1", "Insert MethodRefParameter(290) into MethodRef(303) at 2", "Insert MethodRefParameter(293) into MethodRef(303) at 3", "Insert MethodRefParameter(296) into MethodRef(303) at 4", "Insert MethodRefParameter(299) into MethodRef(303) at 5", "Insert MethodRefParameter(302) into MethodRef(303) at 6", "Insert ThisExpression(425) into FieldAccess(427) at 0", "Insert SimpleName: hostnameVerifier(426) into FieldAccess(427) at 1", "Insert Assignment: =(487) into ExpressionStatement(488) at 0", "Insert SimpleName: KeyManager(491) into SimpleType: KeyManager(492) at 0", "Insert Assignment: =(507) into ExpressionStatement(508) at 0", "Insert SimpleName: TrustManager(511) into SimpleType: TrustManager(512) at 0", "Insert Assignment: =(526) into ExpressionStatement(527) at 0", "Insert ThisExpression(530) into FieldAccess(532) at 0", "Insert SimpleName: sslcontext(531) into FieldAccess(532) at 1", "Insert SimpleName: SSLContext(533) into MethodInvocation(536) at 0", "Insert SimpleName: getInstance(534) into MethodInvocation(536) at 1", "Insert SimpleName: algorithm(535) into MethodInvocation(536) at 2", "Insert ThisExpression(539) into FieldAccess(541) at 0", "Insert SimpleName: sslcontext(540) into FieldAccess(541) at 1", "Insert ThisExpression(548) into FieldAccess(550) at 0", "Insert SimpleName: socketfactory(549) into FieldAccess(550) at 1", "Insert FieldAccess(553) into MethodInvocation(555) at 0", "Insert SimpleName: getSocketFactory(554) into MethodInvocation(555) at 1", "Insert ThisExpression(558) into FieldAccess(560) at 0", "Insert SimpleName: hostnameVerifier(559) into FieldAccess(560) at 1", "Insert ThisExpression(564) into FieldAccess(566) at 0", "Insert SimpleName: nameResolver(565) into FieldAccess(566) at 1", "Insert SimpleName: SSLSocketFactory(660) into MethodRef(664) at 0", "Insert MethodRefParameter(663) into MethodRef(664) at 1", "Insert ThisExpression(699) into FieldAccess(701) at 0", "Insert SimpleName: hostnameVerifier(700) into FieldAccess(701) at 1", "Insert ThisExpression(729) into FieldAccess(731) at 0", "Insert SimpleName: sslcontext(730) into FieldAccess(731) at 1", "Insert ThisExpression(735) into FieldAccess(737) at 0", "Insert SimpleName: socketfactory(736) into FieldAccess(737) at 1", "Insert FieldAccess(740) into MethodInvocation(742) at 0", "Insert SimpleName: getSocketFactory(741) into MethodInvocation(742) at 1", "Insert ThisExpression(745) into FieldAccess(747) at 0", "Insert SimpleName: hostnameVerifier(746) into FieldAccess(747) at 1", "Insert ThisExpression(751) into FieldAccess(753) at 0", "Insert SimpleName: nameResolver(752) into FieldAccess(753) at 1", "Insert ThisExpression(1064) into FieldAccess(1066) at 0", "Insert SimpleName: hostnameVerifier(1065) into FieldAccess(1066) at 1", "Insert ThisExpression(1216) into FieldAccess(1218) at 0", "Insert SimpleName: hostnameVerifier(1217) into FieldAccess(1218) at 1", "Insert SimpleName: connectSocket(1273) into MethodRef(1286) at 0", "Insert MethodRefParameter(1276) into MethodRef(1286) at 1", "Insert MethodRefParameter(1279) into MethodRef(1286) at 2", "Insert MethodRefParameter(1282) into MethodRef(1286) at 3", "Insert MethodRefParameter(1285) into MethodRef(1286) at 4", "Insert SimpleName: localAddress(1334) into InfixExpression: !=(1336) at 0", "Insert NullLiteral(1335) into InfixExpression: !=(1336) at 1", "Insert Block(1348) into IfStatement(1349) at 1", "Insert Assignment: =(1356) into ExpressionStatement(1357) at 0", "Insert Assignment: =(1385) into ExpressionStatement(1386) at 0", "Insert SimpleType: InetSocketAddress(1393) into ClassInstanceCreation(1396) at 0", "Insert SimpleName: remoteAddress(1394) into ClassInstanceCreation(1396) at 1", "Insert SimpleName: port(1395) into ClassInstanceCreation(1396) at 2", "Insert SimpleName: createLayeredSocket(1409) into MethodRef(1420) at 0", "Insert MethodRefParameter(1412) into MethodRef(1420) at 1", "Insert MethodRefParameter(1415) into MethodRef(1420) at 2", "Insert MethodRefParameter(1417) into MethodRef(1420) at 3", "Insert MethodRefParameter(1419) into MethodRef(1420) at 4", "Insert SimpleType: String(286) into MethodRefParameter(287) at 0", "Insert SimpleType: KeyStore(289) into MethodRefParameter(290) at 0", "Insert SimpleType: String(292) into MethodRefParameter(293) at 0", "Insert SimpleType: KeyStore(295) into MethodRefParameter(296) at 0", "Insert SimpleType: SecureRandom(298) into MethodRefParameter(299) at 0", "Insert SimpleType: X509HostnameVerifier(301) into MethodRefParameter(302) at 0", "Insert SimpleName: algorithm(485) into Assignment: =(487) at 0", "Insert SimpleName: TLS(486) into Assignment: =(487) at 1", "Insert SimpleName: keymanagers(502) into Assignment: =(507) at 0", "Insert MethodInvocation(506) into Assignment: =(507) at 1", "Insert SimpleName: trustmanagers(522) into Assignment: =(526) at 0", "Insert MethodInvocation(525) into Assignment: =(526) at 1", "Insert ThisExpression(551) into FieldAccess(553) at 0", "Insert SimpleName: sslcontext(552) into FieldAccess(553) at 1", "Insert SimpleType: SSLContext(662) into MethodRefParameter(663) at 0", "Insert ThisExpression(738) into FieldAccess(740) at 0", "Insert SimpleName: sslcontext(739) into FieldAccess(740) at 1", "Update StringLiteral: \"Socket is closed.\"(967) to \"Remote address may not be null\"", "Update StringLiteral: \"Socket not created by this factory.\"(957) to \"HTTP parameters may not be null\"", "Update SimpleName: isa(800) to localAddress", "Update StringLiteral: \"Socket may not be null.\"(944) to \"Socket may not be null\"", "Update StringLiteral: \"Parameters may not be null.\"(749) to \"Socket not created by this factory\"", "Update StringLiteral: \"Target host may not be null.\"(739) to \"Socket is closed\"", "Insert FieldAccess(1223) into MethodInvocation(1227) at 0", "Move SimpleType: Socket(934) into MethodRefParameter(1276) at 0", "Move SimpleType: InetSocketAddress(847) into MethodRefParameter(1279) at 0", "Move SimpleType: InetSocketAddress(833) into MethodRefParameter(1282) at 0", "Insert SimpleType: HttpParams(1284) into MethodRefParameter(1285) at 0", "Move ExpressionStatement(786) into Block(1348) at 0", "Insert SimpleName: local(1350) into Assignment: =(1356) at 0", "Move ClassInstanceCreation(795) into Assignment: =(1356) at 1", "Move MethodInvocation(839) into Assignment: =(1377) at 1", "Insert SimpleName: remoteAddress(1380) into Assignment: =(1385) at 0", "Insert MethodInvocation(1384) into Assignment: =(1385) at 1", "Insert SimpleName: InetSocketAddress(1392) into SimpleType: InetSocketAddress(1393) at 0", "Insert SimpleType: Socket(1411) into MethodRefParameter(1412) at 0", "Insert SimpleType: String(1414) into MethodRefParameter(1415) at 0", "Insert PrimitiveType: int(1416) into MethodRefParameter(1417) at 0", "Insert PrimitiveType: boolean(1418) into MethodRefParameter(1419) at 0", "Insert SimpleName: String(285) into SimpleType: String(286) at 0", "Insert SimpleName: KeyStore(288) into SimpleType: KeyStore(289) at 0", "Insert SimpleName: String(291) into SimpleType: String(292) at 0", "Insert SimpleName: KeyStore(294) into SimpleType: KeyStore(295) at 0", "Insert SimpleName: SecureRandom(297) into SimpleType: SecureRandom(298) at 0", "Insert SimpleName: X509HostnameVerifier(300) into SimpleType: X509HostnameVerifier(301) at 0", "Insert SimpleName: createKeyManagers(503) into MethodInvocation(506) at 0", "Insert SimpleName: keystore(504) into MethodInvocation(506) at 1", "Insert SimpleName: keystorePassword(505) into MethodInvocation(506) at 2", "Insert SimpleName: createTrustManagers(523) into MethodInvocation(525) at 0", "Insert SimpleName: truststore(524) into MethodInvocation(525) at 1", "Insert SimpleName: SSLContext(661) into SimpleType: SSLContext(662) at 0", "Move InfixExpression: !=(761) into ConditionalExpression(1000) at 0", "Insert ThisExpression(1221) into FieldAccess(1223) at 0", "Insert SimpleName: hostnameVerifier(1222) into FieldAccess(1223) at 1", "Insert SimpleName: HttpParams(1283) into SimpleType: HttpParams(1284) at 0", "Insert SimpleName: InetAddress(1381) into MethodInvocation(1384) at 0", "Insert SimpleName: getByName(1382) into MethodInvocation(1384) at 1", "Insert SimpleName: host(1383) into MethodInvocation(1384) at 2", "Insert SimpleName: Socket(1410) into SimpleType: Socket(1411) at 0", "Insert SimpleName: String(1413) into SimpleType: String(1414) at 0", "Insert MethodInvocation(1047) into InfixExpression: +(1053) at 1", "Insert StringLiteral: \"/\"(1048) into InfixExpression: +(1053) at 2", "Insert MethodInvocation(1051) into InfixExpression: +(1053) at 3", "Insert FieldAccess(1071) into MethodInvocation(1077) at 0", "Insert MethodInvocation(1075) into MethodInvocation(1077) at 2", "Insert SimpleName: remoteAddress(1045) into MethodInvocation(1047) at 0", "Insert SimpleName: getHostName(1046) into MethodInvocation(1047) at 1", "Insert SimpleName: remoteAddress(1049) into MethodInvocation(1051) at 0", "Insert SimpleName: getAddress(1050) into MethodInvocation(1051) at 1", "Insert ThisExpression(1069) into FieldAccess(1071) at 0", "Insert SimpleName: hostnameVerifier(1070) into FieldAccess(1071) at 1", "Insert SimpleName: remoteAddress(1073) into MethodInvocation(1075) at 0", "Update SimpleName: host(884) to getHostName", "Move SimpleName: host(884) into MethodInvocation(1075) at 1", "Delete SimpleName: BROWSER_COMPATIBLE_HOSTNAME_VERIFIER(274)", "Delete SimpleName: TLS(426)", "Delete SimpleName: keystore(427)", "Delete SimpleName: keystorePassword(428)", "Delete SimpleName: truststore(429)", "Delete NullLiteral(430)", "Delete NullLiteral(431)", "Delete ConstructorInvocation(432)", "Delete NullLiteral(460)", "Delete NullLiteral(484)", "Delete SimpleName: sslContext(531)", "Delete NullLiteral(532)", "Delete ConstructorInvocation(533)", "Delete PrimitiveType: int(716)", "Delete SimpleName: port(717)", "Delete ParenthesizedExpression(762)", "Delete ParenthesizedExpression(774)", "Delete ParenthesizedExpression(778)", "Delete InfixExpression: ||(779)", "Delete SimpleName: isa(790)", "Delete VariableDeclarationFragment(796)", "Delete VariableDeclarationStatement(797)", "Delete VariableDeclarationStatement(825)", "Delete SimpleName: remoteAddress(845)", "Delete SimpleName: host(848)", "Delete SimpleName: port(849)", "Delete ClassInstanceCreation(850)", "Delete Assignment: =(851)", "Delete ExpressionStatement(852)", "Delete Block(853)", "Delete IfStatement(854)", "Delete SimpleName: remoteAddress(869)", "Delete SimpleName: hostnameVerifier(882)", "Delete SimpleName: host(734)", "Delete NullLiteral(735)", "Delete InfixExpression: ==(736)", "Delete SimpleName: hostnameVerifier(1019)", "Delete Block(1027)", "Delete SimpleName: hostnameVerifier(1058)", "Delete SimpleName: port(840)", "Delete ClassInstanceCreation(841)"]}}, {"DefaultHttpClient_cluster": {"actions": [{"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 4"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 4"]}]}}, {"DefaultHttpClient_diff": {"operations": ["Move MethodInvocation(548) into ClassInstanceCreation(550) at 4", "Move MethodInvocation(560) into ClassInstanceCreation(562) at 4"]}}, {"RedirectLocations_cluster": {"actions": [{"root": "UPDATE from @Link to @link", "operations": ["UPD TagElement: @Link from @Link to @link"]}, {"root": "INS SimpleName: URI to TagElement: @Link at 0", "operations": ["INS SimpleName: URI to TagElement: @Link at 0"]}, {"root": "DEL TextElement:  URI", "operations": ["DEL TextElement:  URI"]}]}}, {"RedirectLocations_diff": {"operations": ["Update TagElement: @Link(188) to @link", "Insert SimpleName: URI(187) into TagElement: @link(188) at 0", "Delete TextElement:  URI(187)"]}}, {"DefaultClientConnectionOperator_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: java.net.InetSocketAddress to ImportDeclaration at 0"]}, {"root": "UPDATE from org.apache.http.conn.scheme.LayeredSocketFactory to org.apache.http.conn.scheme.LayeredSchemeSocketFactory", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.LayeredSocketFactory from org.apache.http.conn.scheme.LayeredSocketFactory to org.apache.http.conn.scheme.LayeredSchemeSocketFactory"]}, {"root": "UPDATE from org.apache.http.conn.scheme.SocketFactory to org.apache.http.conn.scheme.SchemeSocketFactory", "operations": ["UPD QualifiedName: org.apache.http.conn.scheme.SocketFactory from org.apache.http.conn.scheme.SocketFactory to org.apache.http.conn.scheme.SchemeSocketFactory"]}, {"root": "INS VariableDeclarationStatement to Block at 8", "operations": ["INS VariableDeclarationStatement to Block at 8", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getByName to MethodInvocation at 1", "INS SimpleName: InetAddress to SimpleType: InetAddress at 0", "INS SimpleName: InetAddress to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: InetAddress to VariableDeclarationStatement at 0", "INS SimpleName: address to VariableDeclarationFragment at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 9", "operations": ["INS VariableDeclarationStatement to Block at 9", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: port to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 10", "operations": ["INS SimpleName: port to ClassInstanceCreation at 2", "INS SimpleName: InetSocketAddress to SimpleType: InetSocketAddress at 0", "INS SimpleName: remoteAddress to VariableDeclarationFragment at 0", "INS SimpleType: InetSocketAddress to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 10", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: InetSocketAddress to ClassInstanceCreation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: InetSocketAddress to SimpleType: InetSocketAddress at 0", "INS SimpleName: address to ClassInstanceCreation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 11", "operations": ["INS SimpleName: localAddress to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 11", "INS SimpleType: InetSocketAddress to VariableDeclarationStatement at 0", "INS SimpleName: InetSocketAddress to SimpleType: InetSocketAddress at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS IfStatement to Block at 12", "operations": ["INS ClassInstanceCreation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 12", "INS SimpleName: InetSocketAddress to SimpleType: InetSocketAddress at 0", "INS SimpleName: localAddress to Assignment: = at 0", "INS NumberLiteral: 0 to ClassInstanceCreation at 2", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: local to ClassInstanceCreation at 1", "INS SimpleName: local to InfixExpression: != at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleType: InetSocketAddress to ClassInstanceCreation at 0"]}, {"root": "UPDATE from SocketFactory to SchemeSocketFactory", "operations": ["UPD SimpleType: SocketFactory from SocketFactory to SchemeSocketFactory", "UPD SimpleName: SocketFactory from SocketFactory to SchemeSocketFactory", "UPD SimpleName: SocketFactory from SocketFactory to SchemeSocketFactory"]}, {"root": "UPDATE from LayeredSocketFactory to LayeredSchemeSocketFactory", "operations": ["UPD SimpleType: LayeredSocketFactory from LayeredSocketFactory to LayeredSchemeSocketFactory", "UPD SimpleType: LayeredSocketFactory from LayeredSocketFactory to LayeredSchemeSocketFactory", "UPD SimpleName: LayeredSocketFactory from LayeredSocketFactory to LayeredSchemeSocketFactory", "UPD SimpleName: LayeredSocketFactory from LayeredSocketFactory to LayeredSchemeSocketFactory", "UPD SimpleType: LayeredSocketFactory from LayeredSocketFactory to LayeredSchemeSocketFactory", "UPD SimpleName: LayeredSocketFactory from LayeredSocketFactory to LayeredSchemeSocketFactory"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from getSocketFactory to getSchemeSocketFactory", "operations": ["UPD SimpleName: getSocketFactory from getSocketFactory to getSchemeSocketFactory", "UPD SimpleName: getSocketFactory from getSocketFactory to getSchemeSocketFactory", "UPD SimpleName: getSocketFactory from getSocketFactory to getSchemeSocketFactory"]}, {"root": "INS SimpleName: remoteAddress to MethodInvocation at 3", "operations": ["INS SimpleName: remoteAddress to MethodInvocation at 3"]}, {"root": "UPDATE from local to localAddress", "operations": ["UPD SimpleName: local from local to localAddress"]}, {"root": "UPDATE from createSocket to createLayeredSocket", "operations": ["UPD SimpleName: createSocket from createSocket to createLayeredSocket"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL NumberLiteral: 0", "operations": ["DEL NumberLiteral: 0"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}]}}, {"DefaultClientConnectionOperator_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(583) at 3", "Insert QualifiedName: java.net.InetSocketAddress(6) into ImportDeclaration(7) at 0", "Update QualifiedName: org.apache.http.conn.scheme.LayeredSocketFactory(26) to org.apache.http.conn.scheme.LayeredSchemeSocketFactory", "Update QualifiedName: org.apache.http.conn.scheme.SocketFactory(32) to org.apache.http.conn.scheme.SchemeSocketFactory", "Insert VariableDeclarationStatement(254) into Block(350) at 8", "Insert VariableDeclarationStatement(264) into Block(350) at 9", "Insert VariableDeclarationStatement(274) into Block(350) at 10", "Insert VariableDeclarationStatement(280) into Block(350) at 11", "Insert IfStatement(293) into Block(350) at 12", "Update SimpleName: SocketFactory(42) to SchemeSocketFactory", "Update SimpleType: SocketFactory(223) to SchemeSocketFactory", "Insert SimpleType: InetAddress(245) into VariableDeclarationStatement(254) at 0", "Insert VariableDeclarationFragment(253) into VariableDeclarationStatement(254) at 1", "Insert PrimitiveType: int(255) into VariableDeclarationStatement(264) at 0", "Insert VariableDeclarationFragment(263) into VariableDeclarationStatement(264) at 1", "Insert SimpleType: InetSocketAddress(266) into VariableDeclarationStatement(274) at 0", "Insert VariableDeclarationFragment(273) into VariableDeclarationStatement(274) at 1", "Insert SimpleType: InetSocketAddress(276) into VariableDeclarationStatement(280) at 0", "Insert VariableDeclarationFragment(279) into VariableDeclarationStatement(280) at 1", "Insert InfixExpression: !=(283) into IfStatement(293) at 0", "Insert Block(292) into IfStatement(293) at 1", "Update SimpleType: LayeredSocketFactory(407) to LayeredSchemeSocketFactory", "Update SimpleName: SocketFactory(222) to SchemeSocketFactory", "Insert SimpleName: InetAddress(244) into SimpleType: InetAddress(245) at 0", "Insert SimpleName: address(246) into VariableDeclarationFragment(253) at 0", "Insert MethodInvocation(252) into VariableDeclarationFragment(253) at 1", "Insert SimpleName: port(256) into VariableDeclarationFragment(263) at 0", "Move MethodInvocation(258) into VariableDeclarationFragment(263) at 1", "Insert SimpleName: InetSocketAddress(265) into SimpleType: InetSocketAddress(266) at 0", "Insert SimpleName: remoteAddress(267) into VariableDeclarationFragment(273) at 0", "Insert ClassInstanceCreation(272) into VariableDeclarationFragment(273) at 1", "Insert SimpleName: InetSocketAddress(275) into SimpleType: InetSocketAddress(276) at 0", "Insert SimpleName: localAddress(277) into VariableDeclarationFragment(279) at 0", "Insert NullLiteral(278) into VariableDeclarationFragment(279) at 1", "Insert SimpleName: local(281) into InfixExpression: !=(283) at 0", "Insert NullLiteral(282) into InfixExpression: !=(283) at 1", "Insert ExpressionStatement(291) into Block(292) at 0", "Update SimpleName: LayeredSocketFactory(406) to LayeredSchemeSocketFactory", "Update SimpleName: getSocketFactory(226) to getSchemeSocketFactory", "Insert SimpleName: InetAddress(247) into MethodInvocation(252) at 0", "Insert SimpleName: getByName(248) into MethodInvocation(252) at 1", "Move MethodInvocation(252) into MethodInvocation(252) at 2", "Insert SimpleType: InetSocketAddress(269) into ClassInstanceCreation(272) at 0", "Insert SimpleName: address(270) into ClassInstanceCreation(272) at 1", "Insert SimpleName: port(271) into ClassInstanceCreation(272) at 2", "Insert Assignment: =(290) into ExpressionStatement(291) at 0", "Update SimpleType: LayeredSocketFactory(410) to LayeredSchemeSocketFactory", "Insert SimpleName: InetSocketAddress(268) into SimpleType: InetSocketAddress(269) at 0", "Insert SimpleName: localAddress(284) into Assignment: =(290) at 0", "Insert ClassInstanceCreation(289) into Assignment: =(290) at 1", "Update SimpleType: LayeredSocketFactory(389) to LayeredSchemeSocketFactory", "Update SimpleName: LayeredSocketFactory(409) to LayeredSchemeSocketFactory", "Update SimpleName: getSocketFactory(412) to getSchemeSocketFactory", "Insert SimpleType: InetSocketAddress(286) into ClassInstanceCreation(289) at 0", "Insert SimpleName: local(287) into ClassInstanceCreation(289) at 1", "Insert NumberLiteral: 0(288) into ClassInstanceCreation(289) at 2", "Insert SimpleName: remoteAddress(300) into MethodInvocation(303) at 3", "Update SimpleName: local(259) to localAddress", "Update SimpleName: getSocketFactory(386) to getSchemeSocketFactory", "Update SimpleName: LayeredSocketFactory(388) to LayeredSchemeSocketFactory", "Update SimpleName: createSocket(425) to createLayeredSocket", "Insert SimpleName: InetSocketAddress(285) into SimpleType: InetSocketAddress(286) at 0", "Delete Modifier: final(209)", "Delete Modifier: final(221)", "Delete NumberLiteral: 0(260)", "Delete Modifier: final(405)", "Delete Modifier: final(417)"]}}, {"ThreadSafeClientConnManager_cluster": {"actions": [{"root": "DEL MethodRefParameter", "operations": ["DEL SimpleType: ConnPerRouteBean", "DEL MethodRefParameter", "DEL SimpleName: ConnPerRouteBean"]}]}}, {"ThreadSafeClientConnManager_diff": {"operations": ["Delete SimpleName: ConnPerRouteBean(305)", "Delete SimpleType: ConnPerRouteBean(306)", "Delete MethodRefParameter(307)"]}}], "commit_stats": [{"total_files": 33, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}