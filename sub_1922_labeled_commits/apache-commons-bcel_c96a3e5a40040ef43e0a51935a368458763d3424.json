{"application": "apache-commons-bcel", "csha": "c96a3e5a40040ef43e0a51935a368458763d3424", "files": [{"MethodGen_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS ImportDeclaration to CompilationUnit at 18", "INS QualifiedName: org.apache.bcel.classfile.LocalVariableTypeTable to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS SimpleType: LocalVariableTable to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: local_variable_table to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: LocalVariableTable to SimpleType: LocalVariableTable at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 12", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: LocalVariableTypeTable to SimpleType: LocalVariableTypeTable at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS NullLiteral to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 12", "INS SimpleName: local_variable_type_table to VariableDeclarationFragment at 0", "INS SimpleType: LocalVariableTypeTable to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 52", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleType: LocalVariableTable to SingleVariableDeclaration at 0", "INS SimpleName: LocalVariableTable to SimpleType: LocalVariableTable at 0", "INS MethodDeclaration to TypeDeclaration: class at 52", "INS SimpleName: a to SingleVariableDeclaration at 1", "INS SimpleName: updateLocalVariableTable to MethodDeclaration at 2", "INS Modifier: private to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 53", "operations": ["INS SimpleType: LocalVariable to ArrayType: LocalVariable[] at 0", "INS EnhancedForStatement to Block at 0", "INS SimpleName: getName to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: lv to VariableDeclarationFragment at 0", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 2", "INS SimpleName: adjustLocalVariableLength to MethodDeclaration at 2", "INS SimpleName: i to ArrayAccess at 1", "INS SimpleName: i to InfixExpression: < at 0", "INS MethodInvocation to MethodInvocation at 2", "INS ArrayAccess to MethodInvocation at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: lvt to SingleVariableDeclaration at 1", "INS SimpleName: getName to MethodInvocation at 1", "INS SimpleName: setLength to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: == at 0", "INS SimpleType: LocalVariableTable to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: lvg to ArrayAccess at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: getIndex to MethodInvocation at 1", "INS SimpleType: LocalVariable to SingleVariableDeclaration at 0", "INS SimpleName: LocalVariableTable to SimpleType: LocalVariableTable at 0", "INS SimpleName: l to MethodInvocation at 0", "INS SimpleName: l to MethodInvocation at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS ArrayType: LocalVariable[] to VariableDeclarationStatement at 0", "INS SimpleName: LocalVariable to SimpleType: LocalVariable at 0", "INS ArrayAccess to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS BreakStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: lvg to ArrayAccess at 0", "INS Block to ForStatement at 3", "INS PostfixExpression: ++ to ForStatement at 2", "INS SimpleType: LocalVariable to ArrayType: LocalVariable[] at 0", "INS VariableDeclarationStatement to Block at 0", "INS InfixExpression: && to IfStatement at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS IfStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: local_variable_type_table to MethodInvocation at 0", "INS SimpleName: lvg to ArrayAccess at 0", "INS Block to IfStatement at 1", "INS InfixExpression: < to ForStatement at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: length to VariableDeclarationFragment at 0", "INS MethodInvocation to InfixExpression: && at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Dimension to ArrayType: LocalVariable[] at 1", "INS SimpleName: lvg to VariableDeclarationFragment at 0", "INS SimpleName: lv to EnhancedForStatement at 1", "INS MethodInvocation to InfixExpression: == at 1", "INS SimpleName: length to InfixExpression: < at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ArrayAccess to MethodInvocation at 0", "INS SimpleName: getLocalVariableTypeTable to MethodInvocation at 1", "INS InfixExpression: == to InfixExpression: && at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: i to ArrayAccess at 1", "INS SimpleName: l to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 53", "INS SimpleName: getIndex to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS QualifiedName: lvg.length to VariableDeclarationFragment at 1", "INS SimpleName: LocalVariable to SimpleType: LocalVariable at 0", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS SimpleName: lvt to MethodInvocation at 0", "INS SimpleName: getLocalVariableTable to MethodInvocation at 1", "INS SimpleName: l to MethodInvocation at 0", "INS Modifier: private to MethodDeclaration at 0", "INS ArrayType: LocalVariable[] to VariableDeclarationStatement at 0", "INS SimpleName: LocalVariable to SimpleType: LocalVariable at 0", "INS ForStatement to Block at 2", "INS Dimension to ArrayType: LocalVariable[] at 1", "INS SimpleName: getLength to MethodInvocation at 1", "INS SimpleName: i to ArrayAccess at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InstanceofExpression to IfStatement at 0", "MOV Block to MethodDeclaration at 4"]}, {"root": "INS IfStatement to Block at 9", "operations": ["INS IfStatement to Block at 9", "INS Block to IfStatement at 1", "INS SimpleName: local_variable_type_table to InfixExpression: != at 0", "INS SimpleName: lvt to InfixExpression: != at 0", "INS ExpressionStatement to Block at 1", "INS IfStatement to Block at 0", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: addCodeAttribute to MethodInvocation at 0", "INS SimpleName: local_variable_type_table to MethodInvocation at 1", "INS SimpleName: adjustLocalVariableLength to MethodInvocation at 0", "INS SimpleName: lvt to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: local_variable_table to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS SimpleName: a to MethodInvocation at 0", "operations": ["INS SimpleName: a to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: updateLocalVariableTable to MethodInvocation at 0", "INS SimpleName: local_variable_table to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS FieldAccess to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: local_variable_table to FieldAccess at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: local_variable_table to FieldAccess at 1", "INS SimpleName: updateLocalVariableTable to MethodInvocation at 0", "INS IfStatement to IfStatement at 2", "INS ExpressionStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to Block at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV InstanceofExpression to IfStatement at 0", "MOV IfStatement to IfStatement at 2"]}, {"root": "INS InstanceofExpression to IfStatement at 0", "operations": ["INS InstanceofExpression to IfStatement at 0", "INS SimpleName: LocalVariableTypeTable to SimpleType: LocalVariableTypeTable at 0", "INS SimpleType: LocalVariableTypeTable to InstanceofExpression at 1", "INS SimpleName: a to InstanceofExpression at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS SimpleName: local_variable_type_table to FieldAccess at 1", "INS SimpleType: LocalVariableTypeTable to CastExpression at 0", "INS SimpleName: LocalVariableTypeTable to SimpleType: LocalVariableTypeTable at 0", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: a to CastExpression at 1", "INS CastExpression to Assignment: = at 1", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV CastExpression to Assignment: = at 1"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement"]}, {"root": "DEL ParenthesizedExpression", "operations": ["DEL ParenthesizedExpression"]}]}}, {"MethodGen_diff": {"operations": ["Insert ImportDeclaration(37) into CompilationUnit(4521) at 18", "Insert QualifiedName: org.apache.bcel.classfile.LocalVariableTypeTable(36) into ImportDeclaration(37) at 0", "Insert FieldDeclaration(118) into TypeDeclaration: class(4520) at 11", "Insert FieldDeclaration(125) into TypeDeclaration: class(4520) at 12", "Insert MethodDeclaration(2691) into TypeDeclaration: class(4520) at 52", "Insert MethodDeclaration(2774) into TypeDeclaration: class(4520) at 53", "Insert Modifier: private(112) into FieldDeclaration(118) at 0", "Insert SimpleType: LocalVariableTable(114) into FieldDeclaration(118) at 1", "Insert VariableDeclarationFragment(117) into FieldDeclaration(118) at 2", "Insert Modifier: private(119) into FieldDeclaration(125) at 0", "Insert SimpleType: LocalVariableTypeTable(121) into FieldDeclaration(125) at 1", "Insert VariableDeclarationFragment(124) into FieldDeclaration(125) at 2", "Insert Modifier: private(2596) into MethodDeclaration(2691) at 0", "Insert PrimitiveType: void(2597) into MethodDeclaration(2691) at 1", "Insert SimpleName: updateLocalVariableTable(2598) into MethodDeclaration(2691) at 2", "Insert SingleVariableDeclaration(2602) into MethodDeclaration(2691) at 3", "Move Block(1002) into MethodDeclaration(2691) at 4", "Insert Modifier: private(2692) into MethodDeclaration(2774) at 0", "Insert PrimitiveType: void(2693) into MethodDeclaration(2774) at 1", "Insert SimpleName: adjustLocalVariableLength(2694) into MethodDeclaration(2774) at 2", "Insert SingleVariableDeclaration(2698) into MethodDeclaration(2774) at 3", "Insert Block(2773) into MethodDeclaration(2774) at 4", "Insert SimpleName: LocalVariableTable(113) into SimpleType: LocalVariableTable(114) at 0", "Insert SimpleName: local_variable_table(115) into VariableDeclarationFragment(117) at 0", "Insert NullLiteral(116) into VariableDeclarationFragment(117) at 1", "Insert SimpleName: LocalVariableTypeTable(120) into SimpleType: LocalVariableTypeTable(121) at 0", "Insert SimpleName: local_variable_type_table(122) into VariableDeclarationFragment(124) at 0", "Insert NullLiteral(123) into VariableDeclarationFragment(124) at 1", "Insert IfStatement(2364) into Block(2594) at 9", "Insert SimpleType: LocalVariableTable(2600) into SingleVariableDeclaration(2602) at 0", "Insert SimpleName: a(2601) into SingleVariableDeclaration(2602) at 1", "Insert SimpleType: LocalVariableTable(2696) into SingleVariableDeclaration(2698) at 0", "Insert SimpleName: lvt(2697) into SingleVariableDeclaration(2698) at 1", "Insert VariableDeclarationStatement(2708) into Block(2773) at 0", "Insert VariableDeclarationStatement(2718) into Block(2773) at 1", "Insert ForStatement(2772) into Block(2773) at 2", "Insert Block(2345) into IfStatement(2346) at 1", "Insert InfixExpression: !=(2349) into IfStatement(2364) at 0", "Insert Block(2363) into IfStatement(2364) at 1", "Insert SimpleName: LocalVariableTable(2599) into SimpleType: LocalVariableTable(2600) at 0", "Insert SimpleName: LocalVariableTable(2695) into SimpleType: LocalVariableTable(2696) at 0", "Insert ArrayType: LocalVariable[](2702) into VariableDeclarationStatement(2708) at 0", "Insert VariableDeclarationFragment(2707) into VariableDeclarationStatement(2708) at 1", "Insert ArrayType: LocalVariable[](2712) into VariableDeclarationStatement(2718) at 0", "Insert VariableDeclarationFragment(2717) into VariableDeclarationStatement(2718) at 1", "Insert VariableDeclarationExpression(2726) into ForStatement(2772) at 0", "Insert InfixExpression: <(2729) into ForStatement(2772) at 1", "Insert PostfixExpression: ++(2731) into ForStatement(2772) at 2", "Insert Block(2771) into ForStatement(2772) at 3", "Insert IfStatement(2336) into Block(2345) at 0", "Move ExpressionStatement(2380) into Block(2345) at 1", "Insert SimpleName: local_variable_type_table(2347) into InfixExpression: !=(2349) at 0", "Insert NullLiteral(2348) into InfixExpression: !=(2349) at 1", "Insert IfStatement(2358) into Block(2363) at 0", "Insert ExpressionStatement(2362) into Block(2363) at 1", "Insert SimpleType: LocalVariable(2700) into ArrayType: LocalVariable[](2702) at 0", "Insert Dimension(2701) into ArrayType: LocalVariable[](2702) at 1", "Insert SimpleName: lv(2703) into VariableDeclarationFragment(2707) at 0", "Insert MethodInvocation(2706) into VariableDeclarationFragment(2707) at 1", "Insert SimpleType: LocalVariable(2710) into ArrayType: LocalVariable[](2712) at 0", "Insert Dimension(2711) into ArrayType: LocalVariable[](2712) at 1", "Insert SimpleName: lvg(2713) into VariableDeclarationFragment(2717) at 0", "Insert MethodInvocation(2716) into VariableDeclarationFragment(2717) at 1", "Insert PrimitiveType: int(2719) into VariableDeclarationExpression(2726) at 0", "Insert VariableDeclarationFragment(2722) into VariableDeclarationExpression(2726) at 1", "Insert VariableDeclarationFragment(2725) into VariableDeclarationExpression(2726) at 2", "Insert SimpleName: i(2727) into InfixExpression: <(2729) at 0", "Insert SimpleName: length(2728) into InfixExpression: <(2729) at 1", "Insert SimpleName: i(2730) into PostfixExpression: ++(2731) at 0", "Insert EnhancedForStatement(2770) into Block(2771) at 0", "Insert InfixExpression: !=(2330) into IfStatement(2336) at 0", "Move Block(2381) into IfStatement(2336) at 1", "Insert InfixExpression: !=(2352) into IfStatement(2358) at 0", "Insert Block(2357) into IfStatement(2358) at 1", "Insert MethodInvocation(2361) into ExpressionStatement(2362) at 0", "Insert SimpleName: a(2609) into MethodInvocation(2611) at 0", "Insert SimpleName: LocalVariable(2699) into SimpleType: LocalVariable(2700) at 0", "Insert SimpleName: lvt(2704) into MethodInvocation(2706) at 0", "Insert SimpleName: getLocalVariableTable(2705) into MethodInvocation(2706) at 1", "Insert SimpleName: LocalVariable(2709) into SimpleType: LocalVariable(2710) at 0", "Insert SimpleName: local_variable_type_table(2714) into MethodInvocation(2716) at 0", "Insert SimpleName: getLocalVariableTypeTable(2715) into MethodInvocation(2716) at 1", "Insert SimpleName: i(2720) into VariableDeclarationFragment(2722) at 0", "Insert NumberLiteral: 0(2721) into VariableDeclarationFragment(2722) at 1", "Insert SimpleName: length(2723) into VariableDeclarationFragment(2725) at 0", "Insert QualifiedName: lvg.length(2724) into VariableDeclarationFragment(2725) at 1", "Insert SingleVariableDeclaration(2735) into EnhancedForStatement(2770) at 0", "Insert SimpleName: lv(2736) into EnhancedForStatement(2770) at 1", "Insert Block(2769) into EnhancedForStatement(2770) at 2", "Insert SimpleName: local_variable_table(2328) into InfixExpression: !=(2330) at 0", "Insert NullLiteral(2329) into InfixExpression: !=(2330) at 1", "Insert ExpressionStatement(2334) into Block(2335) at 0", "Insert SimpleName: lvt(2350) into InfixExpression: !=(2352) at 0", "Insert NullLiteral(2351) into InfixExpression: !=(2352) at 1", "Insert ExpressionStatement(2356) into Block(2357) at 0", "Insert SimpleName: addCodeAttribute(2359) into MethodInvocation(2361) at 0", "Insert SimpleName: local_variable_type_table(2360) into MethodInvocation(2361) at 1", "Insert SimpleType: LocalVariable(2733) into SingleVariableDeclaration(2735) at 0", "Insert SimpleName: l(2734) into SingleVariableDeclaration(2735) at 1", "Insert IfStatement(2768) into Block(2769) at 0", "Insert MethodInvocation(2333) into ExpressionStatement(2334) at 0", "Insert MethodInvocation(2355) into ExpressionStatement(2356) at 0", "Insert SimpleName: LocalVariable(2732) into SimpleType: LocalVariable(2733) at 0", "Insert InfixExpression: &&(2756) into IfStatement(2768) at 0", "Insert Block(2767) into IfStatement(2768) at 1", "Insert IfStatement(964) into Block(965) at 1", "Insert SimpleName: updateLocalVariableTable(2331) into MethodInvocation(2333) at 0", "Insert SimpleName: local_variable_table(2332) into MethodInvocation(2333) at 1", "Insert SimpleName: adjustLocalVariableLength(2353) into MethodInvocation(2355) at 0", "Insert SimpleName: lvt(2354) into MethodInvocation(2355) at 1", "Insert MethodInvocation(2746) into InfixExpression: &&(2756) at 0", "Insert InfixExpression: ==(2755) into InfixExpression: &&(2756) at 1", "Insert ExpressionStatement(2765) into Block(2767) at 0", "Insert BreakStatement(2766) into Block(2767) at 1", "Move InstanceofExpression(858) into IfStatement(964) at 0", "Move Block(906) into IfStatement(964) at 1", "Insert IfStatement(963) into IfStatement(964) at 2", "Insert MethodInvocation(2741) into MethodInvocation(2746) at 0", "Insert SimpleName: equals(2742) into MethodInvocation(2746) at 1", "Insert MethodInvocation(2745) into MethodInvocation(2746) at 2", "Insert MethodInvocation(2751) into InfixExpression: ==(2755) at 0", "Insert MethodInvocation(2754) into InfixExpression: ==(2755) at 1", "Insert MethodInvocation(2764) into ExpressionStatement(2765) at 0", "Move InstanceofExpression(910) into IfStatement(963) at 0", "Insert Block(942) into IfStatement(963) at 1", "Move IfStatement(1008) into IfStatement(963) at 2", "Insert ArrayAccess(2739) into MethodInvocation(2741) at 0", "Insert SimpleName: getName(2740) into MethodInvocation(2741) at 1", "Insert SimpleName: l(2743) into MethodInvocation(2745) at 0", "Insert SimpleName: getName(2744) into MethodInvocation(2745) at 1", "Insert ArrayAccess(2749) into MethodInvocation(2751) at 0", "Insert SimpleName: getIndex(2750) into MethodInvocation(2751) at 1", "Insert SimpleName: l(2752) into MethodInvocation(2754) at 0", "Insert SimpleName: getIndex(2753) into MethodInvocation(2754) at 1", "Insert ArrayAccess(2759) into MethodInvocation(2764) at 0", "Insert SimpleName: setLength(2760) into MethodInvocation(2764) at 1", "Insert MethodInvocation(2763) into MethodInvocation(2764) at 2", "Insert ExpressionStatement(935) into Block(942) at 0", "Insert ExpressionStatement(941) into Block(942) at 1", "Insert InstanceofExpression(946) into IfStatement(962) at 0", "Insert Block(956) into IfStatement(962) at 1", "Insert SimpleName: lvg(2737) into ArrayAccess(2739) at 0", "Insert SimpleName: i(2738) into ArrayAccess(2739) at 1", "Insert SimpleName: lvg(2747) into ArrayAccess(2749) at 0", "Insert SimpleName: i(2748) into ArrayAccess(2749) at 1", "Insert SimpleName: lvg(2757) into ArrayAccess(2759) at 0", "Insert SimpleName: i(2758) into ArrayAccess(2759) at 1", "Insert SimpleName: l(2761) into MethodInvocation(2763) at 0", "Insert SimpleName: getLength(2762) into MethodInvocation(2763) at 1", "Insert Assignment: =(934) into ExpressionStatement(935) at 0", "Insert MethodInvocation(940) into ExpressionStatement(941) at 0", "Insert SimpleName: a(943) into InstanceofExpression(946) at 0", "Insert SimpleType: LocalVariableTypeTable(945) into InstanceofExpression(946) at 1", "Insert ExpressionStatement(955) into Block(956) at 0", "Insert FieldAccess(929) into Assignment: =(934) at 0", "Move CastExpression(920) into Assignment: =(934) at 1", "Insert SimpleName: updateLocalVariableTable(936) into MethodInvocation(940) at 0", "Insert FieldAccess(939) into MethodInvocation(940) at 1", "Insert SimpleName: LocalVariableTypeTable(944) into SimpleType: LocalVariableTypeTable(945) at 0", "Insert Assignment: =(954) into ExpressionStatement(955) at 0", "Insert ThisExpression(927) into FieldAccess(929) at 0", "Insert SimpleName: local_variable_table(928) into FieldAccess(929) at 1", "Insert ThisExpression(937) into FieldAccess(939) at 0", "Insert SimpleName: local_variable_table(938) into FieldAccess(939) at 1", "Insert FieldAccess(949) into Assignment: =(954) at 0", "Insert CastExpression(953) into Assignment: =(954) at 1", "Insert ThisExpression(947) into FieldAccess(949) at 0", "Insert SimpleName: local_variable_type_table(948) into FieldAccess(949) at 1", "Insert SimpleType: LocalVariableTypeTable(951) into CastExpression(953) at 0", "Insert SimpleName: a(952) into CastExpression(953) at 1", "Insert SimpleName: LocalVariableTypeTable(950) into SimpleType: LocalVariableTypeTable(951) at 0", "Delete IfStatement(1009)", "Delete ParenthesizedExpression(921)"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}