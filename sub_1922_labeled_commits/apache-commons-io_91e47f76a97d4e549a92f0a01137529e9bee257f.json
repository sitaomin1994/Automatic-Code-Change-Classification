{"application": "apache-commons-io", "csha": "91e47f76a97d4e549a92f0a01137529e9bee257f", "files": [{"TeeInputStream_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleName: closeBranch to VariableDeclarationFragment at 0", "INS TextElement: Flag for closing also the associated output stream when this to TagElement at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: final to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS TextElement: stream is closed. to TagElement at 1", "INS PrimitiveType: boolean to FieldDeclaration at 3", "INS TagElement to Javadoc at 0", "INS Modifier: private to FieldDeclaration at 1", "INS Javadoc to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS TextElement: output stream will be closed when this stream gets closed if the to TagElement at 5", "INS TextElement: stream is closed to TagElement: @param at 2", "INS TextElement:  flag for closing also the output stream when this to TagElement: @param at 1", "INS TagElement: @link to TagElement at 1", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: input to TagElement: @param at 0", "INS SimpleName: InputStream to TagElement: @link at 0", "INS TextElement: . The given to TagElement at 4", "INS Modifier: public to MethodDeclaration at 1", "INS TextElement: and copies all read bytes to the given  to TagElement at 2", "INS TextElement: Creates a TeeInputStream that proxies the given  to TagElement at 0", "INS SimpleName: closeBranch to TagElement: @param at 0", "INS SimpleName: OutputStream to TagElement: @link at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS TagElement: @param to Javadoc at 2", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @link to TagElement at 3", "INS TextElement: closeBranch parameter is <code>true</code>. to TagElement at 6", "INS SimpleName: closeBranch to SingleVariableDeclaration at 1", "INS SimpleName: TeeInputStream to MethodDeclaration at 2", "INS TextElement:  output stream that will receive a copy of all bytes read to TagElement: @param at 1", "INS SimpleName: branch to TagElement: @param at 0", "INS TagElement to Javadoc at 0", "INS TextElement:  input stream to be proxied to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 3", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 7"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: close to SuperMethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS TextElement: closing of the other stream. to TagElement at 2", "INS SimpleName: closeBranch to IfStatement at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS Block to MethodDeclaration at 5", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Javadoc to MethodDeclaration at 0", "INS TextElement:  if either of the streams could not be closed to TagElement: @throws at 1", "INS SimpleName: close to MethodInvocation at 1", "INS SimpleType: IOException to MethodDeclaration at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS TextElement: Closes the proxied input stream and, if so configured, the associated to TagElement at 0", "INS TagElement: @throws to Javadoc at 1", "INS TagElement to Javadoc at 0", "INS TextElement: output stream. An exception thrown from one stream will not prevent to TagElement at 1", "INS Block to TryStatement at 0", "INS SimpleName: IOException to TagElement: @throws at 0", "INS ExpressionStatement to Block at 0", "INS SuperMethodInvocation to ExpressionStatement at 0", "INS TryStatement to Block at 0", "INS Block to TryStatement at 1", "INS SimpleName: close to MethodDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: branch to MethodInvocation at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: input to SingleVariableDeclaration at 1", "INS SimpleType: InputStream to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: InputStream to SimpleType: InputStream at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleType: OutputStream to SingleVariableDeclaration at 0", "INS SimpleName: OutputStream to SimpleType: OutputStream at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: branch to SingleVariableDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS Block to MethodDeclaration at 5", "INS BooleanLiteral: false to ConstructorInvocation at 2", "INS SimpleName: input to ConstructorInvocation at 0", "INS SimpleName: branch to ConstructorInvocation at 1", "INS ConstructorInvocation to Block at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV Block to MethodDeclaration at 6"]}, {"root": "UPDATE from Unlike the proxied input stream (that gets closed when  to The proxied input stream is closed when the ", "operations": ["UPD TextElement: Unlike the proxied input stream (that gets closed when  from Unlike the proxied input stream (that gets closed when  to The proxied input stream is closed when the "]}, {"root": "INS TextElement:  method is to TagElement at 13", "operations": ["INS TextElement:  method is to TagElement at 13"]}, {"root": "UPDATE from is called), the associated output stream is never closed by this class.  to called on this proxy. It is configurable whether the associated output", "operations": ["UPD TextElement: is called), the associated output stream is never closed by this class.  from is called), the associated output stream is never closed by this class.  to called on this proxy. It is configurable whether the associated output"]}, {"root": "INS TextElement: stream will also closed. to TagElement at 15", "operations": ["INS TextElement: stream will also closed. to TagElement at 15"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ThisExpression to FieldAccess at 0", "INS SimpleName: closeBranch to Assignment: = at 1", "INS SimpleName: closeBranch to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 2", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "UPDATE from . to . The given", "operations": ["UPD TextElement: . from . to . The given"]}, {"root": "INS TextElement: output stream will not be closed when this stream gets closed. to TagElement at 5", "operations": ["INS TextElement: output stream will not be closed when this stream gets closed. to TagElement at 5"]}]}}, {"TeeInputStream_diff": {"operations": ["Insert FieldDeclaration(64) into TypeDeclaration: class(316) at 5", "Insert MethodDeclaration(146) into TypeDeclaration: class(316) at 7", "Insert MethodDeclaration(174) into TypeDeclaration: class(316) at 8", "Insert Javadoc(58) into FieldDeclaration(64) at 0", "Insert Modifier: private(59) into FieldDeclaration(64) at 1", "Insert Modifier: final(60) into FieldDeclaration(64) at 2", "Insert PrimitiveType: boolean(61) into FieldDeclaration(64) at 3", "Insert VariableDeclarationFragment(63) into FieldDeclaration(64) at 4", "Insert SingleVariableDeclaration(86) into MethodDeclaration(96) at 3", "Insert SingleVariableDeclaration(90) into MethodDeclaration(96) at 4", "Insert Block(95) into MethodDeclaration(96) at 5", "Insert Javadoc(117) into MethodDeclaration(146) at 0", "Insert Modifier: public(118) into MethodDeclaration(146) at 1", "Insert SimpleName: TeeInputStream(119) into MethodDeclaration(146) at 2", "Move SingleVariableDeclaration(73) into MethodDeclaration(146) at 3", "Move SingleVariableDeclaration(77) into MethodDeclaration(146) at 4", "Insert SingleVariableDeclaration(130) into MethodDeclaration(146) at 5", "Move Block(86) into MethodDeclaration(146) at 6", "Insert Javadoc(154) into MethodDeclaration(174) at 0", "Insert Modifier: public(155) into MethodDeclaration(174) at 1", "Insert PrimitiveType: void(156) into MethodDeclaration(174) at 2", "Insert SimpleName: close(157) into MethodDeclaration(174) at 3", "Insert SimpleType: IOException(159) into MethodDeclaration(174) at 4", "Insert Block(173) into MethodDeclaration(174) at 5", "Update TextElement: Unlike the proxied input stream (that gets closed when (29) to The proxied input stream is closed when the ", "Insert TextElement:  method is(33) into TagElement(36) at 13", "Update TextElement: is called), the associated output stream is never closed by this class. (33) to called on this proxy. It is configurable whether the associated output", "Insert TextElement: stream will also closed.(35) into TagElement(36) at 15", "Insert TagElement(57) into Javadoc(58) at 0", "Insert SimpleName: closeBranch(62) into VariableDeclarationFragment(63) at 0", "Insert SimpleType: InputStream(84) into SingleVariableDeclaration(86) at 0", "Insert SimpleName: input(85) into SingleVariableDeclaration(86) at 1", "Insert SimpleType: OutputStream(88) into SingleVariableDeclaration(90) at 0", "Insert SimpleName: branch(89) into SingleVariableDeclaration(90) at 1", "Insert ConstructorInvocation(94) into Block(95) at 0", "Insert TagElement(106) into Javadoc(117) at 0", "Insert TagElement: @param(109) into Javadoc(117) at 1", "Insert TagElement: @param(112) into Javadoc(117) at 2", "Insert TagElement: @param(116) into Javadoc(117) at 3", "Insert PrimitiveType: boolean(128) into SingleVariableDeclaration(130) at 0", "Insert SimpleName: closeBranch(129) into SingleVariableDeclaration(130) at 1", "Insert ExpressionStatement(144) into Block(145) at 2", "Insert TagElement(150) into Javadoc(154) at 0", "Insert TagElement: @throws(153) into Javadoc(154) at 1", "Insert SimpleName: IOException(158) into SimpleType: IOException(159) at 0", "Insert TryStatement(172) into Block(173) at 0", "Insert TextElement: Flag for closing also the associated output stream when this(55) into TagElement(57) at 0", "Insert TextElement: stream is closed.(56) into TagElement(57) at 1", "Update TextElement: .(59) to . The given", "Insert TextElement: output stream will not be closed when this stream gets closed.(72) into TagElement(73) at 5", "Insert SimpleName: InputStream(83) into SimpleType: InputStream(84) at 0", "Insert SimpleName: OutputStream(87) into SimpleType: OutputStream(88) at 0", "Insert SimpleName: input(91) into ConstructorInvocation(94) at 0", "Insert SimpleName: branch(92) into ConstructorInvocation(94) at 1", "Insert BooleanLiteral: false(93) into ConstructorInvocation(94) at 2", "Insert TextElement: Creates a TeeInputStream that proxies the given (97) into TagElement(106) at 0", "Insert TagElement: @link(99) into TagElement(106) at 1", "Insert TextElement: and copies all read bytes to the given (100) into TagElement(106) at 2", "Insert TagElement: @link(102) into TagElement(106) at 3", "Insert TextElement: . The given(103) into TagElement(106) at 4", "Insert TextElement: output stream will be closed when this stream gets closed if the(104) into TagElement(106) at 5", "Insert TextElement: closeBranch parameter is <code>true</code>.(105) into TagElement(106) at 6", "Insert SimpleName: input(107) into TagElement: @param(109) at 0", "Insert TextElement:  input stream to be proxied(108) into TagElement: @param(109) at 1", "Insert SimpleName: branch(110) into TagElement: @param(112) at 0", "Insert TextElement:  output stream that will receive a copy of all bytes read(111) into TagElement: @param(112) at 1", "Insert SimpleName: closeBranch(113) into TagElement: @param(116) at 0", "Insert TextElement:  flag for closing also the output stream when this(114) into TagElement: @param(116) at 1", "Insert TextElement: stream is closed(115) into TagElement: @param(116) at 2", "Insert Assignment: =(143) into ExpressionStatement(144) at 0", "Insert TextElement: Closes the proxied input stream and, if so configured, the associated(147) into TagElement(150) at 0", "Insert TextElement: output stream. An exception thrown from one stream will not prevent(148) into TagElement(150) at 1", "Insert TextElement: closing of the other stream.(149) into TagElement(150) at 2", "Insert SimpleName: IOException(151) into TagElement: @throws(153) at 0", "Insert TextElement:  if either of the streams could not be closed(152) into TagElement: @throws(153) at 1", "Insert Block(163) into TryStatement(172) at 0", "Insert Block(171) into TryStatement(172) at 1", "Insert SimpleName: InputStream(98) into TagElement: @link(99) at 0", "Insert SimpleName: OutputStream(101) into TagElement: @link(102) at 0", "Insert FieldAccess(141) into Assignment: =(143) at 0", "Insert SimpleName: closeBranch(142) into Assignment: =(143) at 1", "Insert ExpressionStatement(162) into Block(163) at 0", "Insert IfStatement(170) into Block(171) at 0", "Insert ThisExpression(139) into FieldAccess(141) at 0", "Insert SimpleName: closeBranch(140) into FieldAccess(141) at 1", "Insert SuperMethodInvocation(161) into ExpressionStatement(162) at 0", "Insert SimpleName: closeBranch(164) into IfStatement(170) at 0", "Insert Block(169) into IfStatement(170) at 1", "Insert SimpleName: close(160) into SuperMethodInvocation(161) at 0", "Insert ExpressionStatement(168) into Block(169) at 0", "Insert MethodInvocation(167) into ExpressionStatement(168) at 0", "Insert SimpleName: branch(165) into MethodInvocation(167) at 0", "Insert SimpleName: close(166) into MethodInvocation(167) at 1"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}