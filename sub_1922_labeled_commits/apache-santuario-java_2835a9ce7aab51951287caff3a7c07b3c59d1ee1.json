{"application": "apache-santuario-java", "csha": "2835a9ce7aab51951287caff3a7c07b3c59d1ee1", "files": [{"Init_cluster": {"actions": [{"root": "INS TryStatement to Block at 2", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: repoolDocumentBuilder to MethodInvocation at 1", "INS SimpleName: db to Assignment: = at 0", "INS SimpleName: db to MethodInvocation at 2", "INS NullLiteral to Assignment: = at 1", "INS TryStatement to Block at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: XMLUtils to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: doc to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS Block to TryStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to TryStatement at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}]}}, {"Init_diff": {"operations": ["Insert TryStatement(345) into Block(1217) at 2", "Insert Block(334) into TryStatement(345) at 0", "Insert Block(344) into TryStatement(345) at 1", "Insert ExpressionStatement(333) into Block(334) at 0", "Insert ExpressionStatement(339) into Block(344) at 0", "Insert ExpressionStatement(343) into Block(344) at 1", "Insert Assignment: =(332) into ExpressionStatement(333) at 0", "Insert MethodInvocation(338) into ExpressionStatement(339) at 0", "Insert Assignment: =(342) into ExpressionStatement(343) at 0", "Insert SimpleName: doc(327) into Assignment: =(332) at 0", "Move MethodInvocation(328) into Assignment: =(332) at 1", "Insert SimpleName: XMLUtils(335) into MethodInvocation(338) at 0", "Insert SimpleName: repoolDocumentBuilder(336) into MethodInvocation(338) at 1", "Insert SimpleName: db(337) into MethodInvocation(338) at 2", "Insert SimpleName: db(340) into Assignment: =(342) at 0", "Insert NullLiteral(341) into Assignment: =(342) at 1"]}}, {"Canonicalizer_cluster": {"actions": [{"root": "INS TryStatement to Block at 5", "operations": ["INS Block to TryStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: db to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: document to Assignment: = at 0", "INS TryStatement to Block at 5", "INS ExpressionStatement to Block at 0", "INS Block to TryStatement at 0", "INS SimpleName: XMLUtils to MethodInvocation at 0", "INS SimpleName: repoolDocumentBuilder to MethodInvocation at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}]}}, {"Canonicalizer_diff": {"operations": ["Insert TryStatement(665) into Block(671) at 5", "Insert Block(658) into TryStatement(665) at 0", "Insert Block(664) into TryStatement(665) at 1", "Insert ExpressionStatement(657) into Block(658) at 0", "Insert ExpressionStatement(663) into Block(664) at 0", "Insert Assignment: =(656) into ExpressionStatement(657) at 0", "Insert MethodInvocation(662) into ExpressionStatement(663) at 0", "Insert SimpleName: document(651) into Assignment: =(656) at 0", "Move MethodInvocation(652) into Assignment: =(656) at 1", "Insert SimpleName: XMLUtils(659) into MethodInvocation(662) at 0", "Insert SimpleName: repoolDocumentBuilder(660) into MethodInvocation(662) at 1", "Insert SimpleName: db(661) into MethodInvocation(662) at 2"]}}, {"CanonicalizerSpi_cluster": {"actions": [{"root": "INS TryStatement to Block at 4", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS Block to TryStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: XMLUtils to MethodInvocation at 0", "INS TryStatement to Block at 4", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: document to Assignment: = at 0", "INS Block to TryStatement at 1", "INS SimpleName: repoolDocumentBuilder to MethodInvocation at 1", "INS SimpleName: db to MethodInvocation at 2"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}]}}, {"CanonicalizerSpi_diff": {"operations": ["Insert TryStatement(138) into Block(144) at 4", "Insert Block(131) into TryStatement(138) at 0", "Insert Block(137) into TryStatement(138) at 1", "Insert ExpressionStatement(130) into Block(131) at 0", "Insert ExpressionStatement(136) into Block(137) at 0", "Insert Assignment: =(129) into ExpressionStatement(130) at 0", "Insert MethodInvocation(135) into ExpressionStatement(136) at 0", "Insert SimpleName: document(124) into Assignment: =(129) at 0", "Move MethodInvocation(125) into Assignment: =(129) at 1", "Insert SimpleName: XMLUtils(132) into MethodInvocation(135) at 0", "Insert SimpleName: repoolDocumentBuilder(133) into MethodInvocation(135) at 1", "Insert SimpleName: db(134) into MethodInvocation(135) at 2"]}}, {"DocumentSerializer_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: db to VariableDeclarationFragment at 0", "INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: DocumentBuilder to VariableDeclarationStatement at 0"]}, {"root": "INS Block to TryStatement at 4", "operations": ["INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: db to MethodInvocation at 2", "INS SimpleName: repoolDocumentBuilder to MethodInvocation at 1", "INS Block to TryStatement at 4", "INS SimpleName: XMLUtils to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: db to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS Block to IfStatement at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: db to Assignment: = at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: db", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement"]}]}}, {"DocumentSerializer_diff": {"operations": ["Insert VariableDeclarationStatement(169) into Block(317) at 0", "Move SimpleType: DocumentBuilder(165) into VariableDeclarationStatement(169) at 0", "Insert VariableDeclarationFragment(168) into VariableDeclarationStatement(169) at 1", "Insert Block(315) into TryStatement(316) at 4", "Insert SimpleName: db(166) into VariableDeclarationFragment(168) at 0", "Insert NullLiteral(167) into VariableDeclarationFragment(168) at 1", "Insert ExpressionStatement(177) into Block(268) at 0", "Insert IfStatement(314) into Block(315) at 0", "Insert Assignment: =(176) into ExpressionStatement(177) at 0", "Insert InfixExpression: !=(307) into IfStatement(314) at 0", "Insert Block(313) into IfStatement(314) at 1", "Insert SimpleName: db(170) into Assignment: =(176) at 0", "Move MethodInvocation(171) into Assignment: =(176) at 1", "Insert SimpleName: db(305) into InfixExpression: !=(307) at 0", "Insert NullLiteral(306) into InfixExpression: !=(307) at 1", "Insert ExpressionStatement(312) into Block(313) at 0", "Insert MethodInvocation(311) into ExpressionStatement(312) at 0", "Insert SimpleName: XMLUtils(308) into MethodInvocation(311) at 0", "Insert SimpleName: repoolDocumentBuilder(309) into MethodInvocation(311) at 1", "Insert SimpleName: db(310) into MethodInvocation(311) at 2", "Delete SimpleName: db(166)", "Delete VariableDeclarationFragment(172)", "Delete VariableDeclarationStatement(173)"]}}, {"SignedInfo_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS TryStatement to Block at 4", "operations": ["INS Block to TryStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: db to MethodInvocation at 2", "INS SimpleName: repoolDocumentBuilder to MethodInvocation at 1", "INS Block to TryStatement at 1", "INS TryStatement to Block at 4", "INS SimpleName: XMLUtils to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 1", "MOV ReturnStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 0"]}]}}, {"SignedInfo_diff": {"operations": ["     * Answer</A>(365) to TextElement:  <A HREF=\"http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001OctDec/0054.html\">", "     * Answer</A>(365)", "     * Question</A>(363) to TextElement:  <A HREF=\"http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001OctDec/0033.html\">", "     * Question</A>(363)", "     * Answer</A>(406) to TextElement:  <A HREF=\"http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001OctDec/0054.html\">", "     * Answer</A>(406)", "     * Question</A>(404) to TextElement:  <A HREF=\"http://lists.w3.org/Archives/Public/w3c-ietf-xmldsig/2001OctDec/0033.html\">", "     * Question</A>(404)", "Move ImportDeclaration(45) into CompilationUnit(1075) at 12", "Insert TryStatement(606) into Block(607) at 4", "Insert Block(599) into TryStatement(606) at 0", "Insert Block(605) into TryStatement(606) at 1", "Move VariableDeclarationStatement(571) into Block(599) at 0", "Move VariableDeclarationStatement(585) into Block(599) at 1", "Move ExpressionStatement(593) into Block(599) at 2", "Move ReturnStatement(598) into Block(599) at 3", "Insert ExpressionStatement(604) into Block(605) at 0", "Insert MethodInvocation(603) into ExpressionStatement(604) at 0", "Insert SimpleName: XMLUtils(600) into MethodInvocation(603) at 0", "Insert SimpleName: repoolDocumentBuilder(601) into MethodInvocation(603) at 1", "Insert SimpleName: db(602) into MethodInvocation(603) at 2"]}}, {"XMLSignatureInput_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 16", "MOV ImportDeclaration to CompilationUnit at 15"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: XMLUtils to MethodInvocation at 0", "INS SimpleName: db to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: repoolDocumentBuilder to MethodInvocation at 1"]}]}}, {"XMLSignatureInput_diff": {"operations": ["Move ImportDeclaration(43) into CompilationUnit(1462) at 16", "Move ImportDeclaration(45) into CompilationUnit(1462) at 15", "Insert ExpressionStatement(1410) into Block(1436) at 0", "Insert MethodInvocation(1409) into ExpressionStatement(1410) at 0", "Insert SimpleName: XMLUtils(1406) into MethodInvocation(1409) at 0", "Insert SimpleName: repoolDocumentBuilder(1407) into MethodInvocation(1409) at 1", "Insert SimpleName: db(1408) into MethodInvocation(1409) at 2"]}}, {"KeyResolverSpi_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.io.ByteArrayInputStream to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: java.io.IOException to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: javax.xml.parsers.DocumentBuilder to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS ImportDeclaration to CompilationUnit at 9", "INS QualifiedName: javax.xml.parsers.ParserConfigurationException to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS ImportDeclaration to CompilationUnit at 11", "INS QualifiedName: org.apache.xml.security.utils.XMLUtils to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: org.w3c.dom.Document to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: org.xml.sax.SAXException to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS Block to CatchClause at 1", "INS SimpleName: doc to VariableDeclarationFragment at 0", "INS SimpleName: ex to ClassInstanceCreation at 2", "INS SimpleName: XMLUtils to MethodInvocation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: KeyResolverException to SimpleType: KeyResolverException at 0", "INS SimpleName: KeyResolverException to SimpleType: KeyResolverException at 0", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS TryStatement to Block at 1", "INS SimpleName: ex to ClassInstanceCreation at 2", "INS StringLiteral: \"empty\" to ClassInstanceCreation at 1", "INS SimpleName: getDocFromBytes to MethodDeclaration at 4", "INS TagElement: @return to Javadoc at 2", "INS Javadoc to MethodDeclaration at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: bytes to SingleVariableDeclaration at 1", "INS SimpleName: DocumentBuilder to SimpleType: DocumentBuilder at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS ArrayType: byte[] to SingleVariableDeclaration at 0", "INS SimpleName: doc to MethodInvocation at 0", "INS SimpleName: db to VariableDeclarationFragment at 0", "INS SimpleType: KeyResolverException to ClassInstanceCreation at 0", "INS SimpleName: db to Assignment: = at 0", "INS TextElement: Parses a byte array and returns the parsed Element. to TagElement at 0", "INS Block to CatchClause at 1", "INS ThrowStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Block to TryStatement at 0", "INS SimpleName: parse to MethodInvocation at 1", "INS SimpleName: bytes to ClassInstanceCreation at 1", "INS CatchClause to TryStatement at 3", "INS TagElement: @throws to Javadoc at 3", "INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to Block at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: ex to ClassInstanceCreation at 2", "INS SimpleName: secureValidation to MethodInvocation at 3", "INS StringLiteral: \"empty\" to ClassInstanceCreation at 1", "INS SimpleName: ByteArrayInputStream to SimpleType: ByteArrayInputStream at 0", "INS ExpressionStatement to Block at 0", "INS CatchClause to TryStatement at 2", "INS Block to MethodDeclaration at 8", "INS SimpleName: Document to SimpleType: Document at 0", "INS StringLiteral: \"empty\" to ClassInstanceCreation at 1", "INS SimpleName: db to InfixExpression: != at 0", "INS SimpleType: ParserConfigurationException to SingleVariableDeclaration at 0", "INS SimpleType: KeyResolverException to MethodDeclaration at 7", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: createDocumentBuilder to MethodInvocation at 1", "INS TextElement:  if something goes wrong to TagElement: @throws at 1", "INS SimpleName: KeyResolverException to SimpleType: KeyResolverException at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: KeyResolverException to TagElement: @throws at 0", "INS ReturnStatement to Block at 2", "INS NullLiteral to InfixExpression: != at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Block to CatchClause at 1", "INS Block to IfStatement at 1", "INS SimpleName: db to MethodInvocation at 2", "INS Modifier: static to MethodDeclaration at 2", "INS SimpleType: KeyResolverException to ClassInstanceCreation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS SimpleName: bytes to TagElement: @param at 0", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: SAXException to SingleVariableDeclaration at 0", "INS SimpleName: db to MethodInvocation at 0", "INS SimpleType: DocumentBuilder to VariableDeclarationStatement at 0", "INS Block to TryStatement at 4", "INS SimpleName: KeyResolverException to SimpleType: KeyResolverException at 0", "INS ThrowStatement to Block at 0", "INS SimpleType: ByteArrayInputStream to ClassInstanceCreation at 0", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: ParserConfigurationException to SimpleType: ParserConfigurationException at 0", "INS SimpleName: getDocumentElement to MethodInvocation at 1", "INS SimpleName: repoolDocumentBuilder to MethodInvocation at 1", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: Element to SimpleType: Element at 0", "INS SimpleName: XMLUtils to MethodInvocation at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: SAXException to SimpleType: SAXException at 0", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS Modifier: protected to MethodDeclaration at 1", "INS BooleanLiteral: false to MethodInvocation at 2", "INS TextElement:  the Document Element after parsing bytes  to TagElement: @return at 0", "INS SimpleType: KeyResolverException to ClassInstanceCreation at 0", "INS SimpleType: Document to VariableDeclarationStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: secureValidation to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleType: Element to MethodDeclaration at 3", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to ReturnStatement at 0", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationStatement to Block at 1", "INS SingleVariableDeclaration to CatchClause at 0"]}]}}, {"KeyResolverSpi_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(727) at 1", "Insert ImportDeclaration(21) into CompilationUnit(727) at 2", "Insert ImportDeclaration(33) into CompilationUnit(727) at 8", "Insert ImportDeclaration(35) into CompilationUnit(727) at 9", "Insert ImportDeclaration(39) into CompilationUnit(727) at 11", "Insert ImportDeclaration(41) into CompilationUnit(727) at 12", "Insert ImportDeclaration(45) into CompilationUnit(727) at 14", "Insert QualifiedName: java.io.ByteArrayInputStream(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: java.io.IOException(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: javax.xml.parsers.DocumentBuilder(32) into ImportDeclaration(33) at 0", "Insert QualifiedName: javax.xml.parsers.ParserConfigurationException(34) into ImportDeclaration(35) at 0", "Insert QualifiedName: org.apache.xml.security.utils.XMLUtils(38) into ImportDeclaration(39) at 0", "Insert QualifiedName: org.w3c.dom.Document(40) into ImportDeclaration(41) at 0", "Insert QualifiedName: org.xml.sax.SAXException(44) into ImportDeclaration(45) at 0", "Insert MethodDeclaration(725) into TypeDeclaration: class(726) at 21", "Insert Javadoc(629) into MethodDeclaration(725) at 0", "Insert Modifier: protected(630) into MethodDeclaration(725) at 1", "Insert Modifier: static(631) into MethodDeclaration(725) at 2", "Insert SimpleType: Element(633) into MethodDeclaration(725) at 3", "Insert SimpleName: getDocFromBytes(634) into MethodDeclaration(725) at 4", "Insert SingleVariableDeclaration(639) into MethodDeclaration(725) at 5", "Insert SingleVariableDeclaration(642) into MethodDeclaration(725) at 6", "Insert SimpleType: KeyResolverException(644) into MethodDeclaration(725) at 7", "Insert Block(724) into MethodDeclaration(725) at 8", "Insert TagElement(621) into Javadoc(629) at 0", "Insert TagElement: @param(623) into Javadoc(629) at 1", "Insert TagElement: @return(625) into Javadoc(629) at 2", "Insert TagElement: @throws(628) into Javadoc(629) at 3", "Insert SimpleName: Element(632) into SimpleType: Element(633) at 0", "Insert ArrayType: byte[](637) into SingleVariableDeclaration(639) at 0", "Insert SimpleName: bytes(638) into SingleVariableDeclaration(639) at 1", "Insert PrimitiveType: boolean(640) into SingleVariableDeclaration(642) at 0", "Insert SimpleName: secureValidation(641) into SingleVariableDeclaration(642) at 1", "Insert SimpleName: KeyResolverException(643) into SimpleType: KeyResolverException(644) at 0", "Insert VariableDeclarationStatement(650) into Block(724) at 0", "Insert TryStatement(723) into Block(724) at 1", "Insert TextElement: Parses a byte array and returns the parsed Element.(620) into TagElement(621) at 0", "Insert SimpleName: bytes(622) into TagElement: @param(623) at 0", "Insert TextElement:  the Document Element after parsing bytes (624) into TagElement: @return(625) at 0", "Insert SimpleName: KeyResolverException(626) into TagElement: @throws(628) at 0", "Insert TextElement:  if something goes wrong(627) into TagElement: @throws(628) at 1", "Insert PrimitiveType: byte(635) into ArrayType: byte[](637) at 0", "Insert Dimension(636) into ArrayType: byte[](637) at 1", "Insert SimpleType: DocumentBuilder(646) into VariableDeclarationStatement(650) at 0", "Insert VariableDeclarationFragment(649) into VariableDeclarationStatement(650) at 1", "Insert Block(675) into TryStatement(723) at 0", "Insert CatchClause(687) into TryStatement(723) at 1", "Insert CatchClause(699) into TryStatement(723) at 2", "Insert CatchClause(711) into TryStatement(723) at 3", "Insert Block(722) into TryStatement(723) at 4", "Insert SimpleName: DocumentBuilder(645) into SimpleType: DocumentBuilder(646) at 0", "Insert SimpleName: db(647) into VariableDeclarationFragment(649) at 0", "Insert NullLiteral(648) into VariableDeclarationFragment(649) at 1", "Insert ExpressionStatement(658) into Block(675) at 0", "Insert VariableDeclarationStatement(670) into Block(675) at 1", "Insert ReturnStatement(674) into Block(675) at 2", "Insert SingleVariableDeclaration(679) into CatchClause(687) at 0", "Insert Block(686) into CatchClause(687) at 1", "Insert SingleVariableDeclaration(691) into CatchClause(699) at 0", "Insert Block(698) into CatchClause(699) at 1", "Insert SingleVariableDeclaration(703) into CatchClause(711) at 0", "Insert Block(710) into CatchClause(711) at 1", "Insert IfStatement(721) into Block(722) at 0", "Insert Assignment: =(657) into ExpressionStatement(658) at 0", "Insert SimpleType: Document(660) into VariableDeclarationStatement(670) at 0", "Insert VariableDeclarationFragment(669) into VariableDeclarationStatement(670) at 1", "Insert MethodInvocation(673) into ReturnStatement(674) at 0", "Insert SimpleType: SAXException(677) into SingleVariableDeclaration(679) at 0", "Insert SimpleName: ex(678) into SingleVariableDeclaration(679) at 1", "Insert ThrowStatement(685) into Block(686) at 0", "Insert SimpleType: IOException(689) into SingleVariableDeclaration(691) at 0", "Insert SimpleName: ex(690) into SingleVariableDeclaration(691) at 1", "Insert ThrowStatement(697) into Block(698) at 0", "Insert SimpleType: ParserConfigurationException(701) into SingleVariableDeclaration(703) at 0", "Insert SimpleName: ex(702) into SingleVariableDeclaration(703) at 1", "Insert ThrowStatement(709) into Block(710) at 0", "Insert InfixExpression: !=(714) into IfStatement(721) at 0", "Insert Block(720) into IfStatement(721) at 1", "Insert SimpleName: db(651) into Assignment: =(657) at 0", "Insert MethodInvocation(656) into Assignment: =(657) at 1", "Insert SimpleName: Document(659) into SimpleType: Document(660) at 0", "Insert SimpleName: doc(661) into VariableDeclarationFragment(669) at 0", "Insert MethodInvocation(668) into VariableDeclarationFragment(669) at 1", "Insert SimpleName: doc(671) into MethodInvocation(673) at 0", "Insert SimpleName: getDocumentElement(672) into MethodInvocation(673) at 1", "Insert SimpleName: SAXException(676) into SimpleType: SAXException(677) at 0", "Insert ClassInstanceCreation(684) into ThrowStatement(685) at 0", "Insert SimpleName: IOException(688) into SimpleType: IOException(689) at 0", "Insert ClassInstanceCreation(696) into ThrowStatement(697) at 0", "Insert SimpleName: ParserConfigurationException(700) into SimpleType: ParserConfigurationException(701) at 0", "Insert ClassInstanceCreation(708) into ThrowStatement(709) at 0", "Insert SimpleName: db(712) into InfixExpression: !=(714) at 0", "Insert NullLiteral(713) into InfixExpression: !=(714) at 1", "Insert ExpressionStatement(719) into Block(720) at 0", "Insert SimpleName: XMLUtils(652) into MethodInvocation(656) at 0", "Insert SimpleName: createDocumentBuilder(653) into MethodInvocation(656) at 1", "Insert BooleanLiteral: false(654) into MethodInvocation(656) at 2", "Insert SimpleName: secureValidation(655) into MethodInvocation(656) at 3", "Insert SimpleName: db(662) into MethodInvocation(668) at 0", "Insert SimpleName: parse(663) into MethodInvocation(668) at 1", "Insert ClassInstanceCreation(667) into MethodInvocation(668) at 2", "Insert SimpleType: KeyResolverException(681) into ClassInstanceCreation(684) at 0", "Insert StringLiteral: \"empty\"(682) into ClassInstanceCreation(684) at 1", "Insert SimpleName: ex(683) into ClassInstanceCreation(684) at 2", "Insert SimpleType: KeyResolverException(693) into ClassInstanceCreation(696) at 0", "Insert StringLiteral: \"empty\"(694) into ClassInstanceCreation(696) at 1", "Insert SimpleName: ex(695) into ClassInstanceCreation(696) at 2", "Insert SimpleType: KeyResolverException(705) into ClassInstanceCreation(708) at 0", "Insert StringLiteral: \"empty\"(706) into ClassInstanceCreation(708) at 1", "Insert SimpleName: ex(707) into ClassInstanceCreation(708) at 2", "Insert MethodInvocation(718) into ExpressionStatement(719) at 0", "Insert SimpleType: ByteArrayInputStream(665) into ClassInstanceCreation(667) at 0", "Insert SimpleName: bytes(666) into ClassInstanceCreation(667) at 1", "Insert SimpleName: KeyResolverException(680) into SimpleType: KeyResolverException(681) at 0", "Insert SimpleName: KeyResolverException(692) into SimpleType: KeyResolverException(693) at 0", "Insert SimpleName: KeyResolverException(704) into SimpleType: KeyResolverException(705) at 0", "Insert SimpleName: XMLUtils(715) into MethodInvocation(718) at 0", "Insert SimpleName: repoolDocumentBuilder(716) into MethodInvocation(718) at 1", "Insert SimpleName: db(717) into MethodInvocation(718) at 2", "Insert SimpleName: ByteArrayInputStream(664) into SimpleType: ByteArrayInputStream(665) at 0"]}}, {"DOMRetrievalMethod_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: java.util.ArrayList to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: java.util.Collections to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: java.util.Iterator to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: javax.xml.crypto.MarshalException to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS QualifiedName: javax.xml.crypto.NodeSetData to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 11"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: javax.xml.crypto.URIDereferencer to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS QualifiedName: javax.xml.crypto.URIReferenceException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 13"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS QualifiedName: javax.xml.crypto.XMLCryptoContext to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 14"]}, {"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS ImportDeclaration to CompilationUnit at 15", "INS QualifiedName: javax.xml.crypto.XMLStructure to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS QualifiedName: javax.xml.crypto.dsig.XMLSignature to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 18"]}, {"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS QualifiedName: org.apache.xml.security.utils.XMLUtils to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 21"]}, {"root": "UPDATE from java.util to java.util.List", "operations": ["UPD QualifiedName: java.util from java.util to java.util.List"]}, {"root": "UPDATE from javax.xml.crypto to javax.xml.crypto.Data", "operations": ["UPD QualifiedName: javax.xml.crypto from javax.xml.crypto to javax.xml.crypto.Data"]}, {"root": "UPDATE from javax.xml.crypto.dsig to javax.xml.crypto.dsig.Transform", "operations": ["UPD QualifiedName: javax.xml.crypto.dsig from javax.xml.crypto.dsig to javax.xml.crypto.dsig.Transform"]}, {"root": "UPDATE from javax.xml.parsers to javax.xml.parsers.DocumentBuilder", "operations": ["UPD QualifiedName: javax.xml.parsers from javax.xml.parsers to javax.xml.parsers.DocumentBuilder"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: db to VariableDeclarationFragment at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: DocumentBuilder to VariableDeclarationStatement at 0"]}, {"root": "INS Block to TryStatement at 2", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: XMLUtils to MethodInvocation at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: db to InfixExpression: != at 0", "INS Block to TryStatement at 2", "INS SimpleName: db to MethodInvocation at 2", "INS SimpleName: repoolDocumentBuilder to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: XMLUtils to MethodInvocation at 0", "INS SimpleName: db to Assignment: = at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV BooleanLiteral: false to MethodInvocation at 2", "MOV SimpleName: createDocumentBuilder to MethodInvocation at 1", "MOV SimpleName: secVal to MethodInvocation at 3"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: db", "DEL QualifiedName: org.apache.xml.security.utils.XMLUtils"]}]}}, {"DOMRetrievalMethod_diff": {"operations": ["Move ImportDeclaration(31) into CompilationUnit(1032) at 9", "Insert ImportDeclaration(27) into CompilationUnit(1032) at 5", "Insert ImportDeclaration(29) into CompilationUnit(1032) at 6", "Insert ImportDeclaration(31) into CompilationUnit(1032) at 7", "Insert ImportDeclaration(37) into CompilationUnit(1032) at 10", "Insert ImportDeclaration(39) into CompilationUnit(1032) at 11", "Insert ImportDeclaration(41) into CompilationUnit(1032) at 12", "Insert ImportDeclaration(43) into CompilationUnit(1032) at 13", "Insert ImportDeclaration(45) into CompilationUnit(1032) at 14", "Insert ImportDeclaration(47) into CompilationUnit(1032) at 15", "Insert ImportDeclaration(53) into CompilationUnit(1032) at 18", "Insert ImportDeclaration(59) into CompilationUnit(1032) at 21", "Insert QualifiedName: java.util.ArrayList(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: java.util.Collections(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: java.util.Iterator(30) into ImportDeclaration(31) at 0", "Update QualifiedName: java.util(26) to java.util.List", "Update QualifiedName: javax.xml.crypto(28) to javax.xml.crypto.Data", "Insert QualifiedName: javax.xml.crypto.MarshalException(36) into ImportDeclaration(37) at 0", "Insert QualifiedName: javax.xml.crypto.NodeSetData(38) into ImportDeclaration(39) at 0", "Insert QualifiedName: javax.xml.crypto.URIDereferencer(40) into ImportDeclaration(41) at 0", "Insert QualifiedName: javax.xml.crypto.URIReferenceException(42) into ImportDeclaration(43) at 0", "Insert QualifiedName: javax.xml.crypto.XMLCryptoContext(44) into ImportDeclaration(45) at 0", "Insert QualifiedName: javax.xml.crypto.XMLStructure(46) into ImportDeclaration(47) at 0", "Update QualifiedName: javax.xml.crypto.dsig(30) to javax.xml.crypto.dsig.Transform", "Insert QualifiedName: javax.xml.crypto.dsig.XMLSignature(52) into ImportDeclaration(53) at 0", "Update QualifiedName: javax.xml.parsers(36) to javax.xml.parsers.DocumentBuilder", "Insert QualifiedName: org.apache.xml.security.utils.XMLUtils(58) into ImportDeclaration(59) at 0", "Insert VariableDeclarationStatement(810) into Block(909) at 0", "Move VariableDeclarationStatement(801) into Block(909) at 1", "Move SimpleType: DocumentBuilder(803) into VariableDeclarationStatement(810) at 0", "Insert VariableDeclarationFragment(809) into VariableDeclarationStatement(810) at 1", "Insert Block(907) into TryStatement(908) at 2", "Insert SimpleName: db(807) into VariableDeclarationFragment(809) at 0", "Insert NullLiteral(808) into VariableDeclarationFragment(809) at 1", "Insert ExpressionStatement(837) into Block(885) at 1", "Insert IfStatement(906) into Block(907) at 0", "Insert Assignment: =(836) into ExpressionStatement(837) at 0", "Insert InfixExpression: !=(899) into IfStatement(906) at 0", "Insert Block(905) into IfStatement(906) at 1", "Insert SimpleName: db(830) into Assignment: =(836) at 0", "Insert MethodInvocation(835) into Assignment: =(836) at 1", "Insert SimpleName: db(897) into InfixExpression: !=(899) at 0", "Insert NullLiteral(898) into InfixExpression: !=(899) at 1", "Insert ExpressionStatement(904) into Block(905) at 0", "Insert SimpleName: XMLUtils(831) into MethodInvocation(835) at 0", "Move SimpleName: createDocumentBuilder(806) into MethodInvocation(835) at 1", "Move BooleanLiteral: false(807) into MethodInvocation(835) at 2", "Move SimpleName: secVal(808) into MethodInvocation(835) at 3", "Insert MethodInvocation(903) into ExpressionStatement(904) at 0", "Insert SimpleName: XMLUtils(900) into MethodInvocation(903) at 0", "Insert SimpleName: repoolDocumentBuilder(901) into MethodInvocation(903) at 1", "Insert SimpleName: db(902) into MethodInvocation(903) at 2", "Delete SimpleName: db(804)", "Delete QualifiedName: org.apache.xml.security.utils.XMLUtils(805)", "Delete MethodInvocation(809)", "Delete VariableDeclarationFragment(810)", "Delete VariableDeclarationStatement(811)"]}}, {"KeyInfoReferenceResolver_cluster": {"actions": [{"root": "INS FieldAccess to MethodInvocation at 2", "operations": ["INS FieldAccess to MethodInvocation at 2", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: secureValidation to FieldAccess at 1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.ByteArrayInputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: javax.xml.parsers.DocumentBuilder", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.w3c.dom.Document", "DEL ImportDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: Document", "DEL SimpleName: KeyResolverException", "DEL SimpleType: KeyResolverException", "DEL SimpleType: KeyResolverException", "DEL SimpleName: ex", "DEL TagElement: @param", "DEL Block", "DEL SimpleName: db", "DEL SimpleName: parse", "DEL SimpleName: ParserConfigurationException", "DEL CatchClause", "DEL VariableDeclarationStatement", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL SimpleType: ByteArrayInputStream", "DEL SimpleName: bytes", "DEL SimpleName: KeyResolverException", "DEL SimpleType: DocumentBuilder", "DEL TagElement", "DEL SimpleName: SAXException", "DEL ThrowStatement", "DEL SimpleName: secureValidation", "DEL TagElement: @return", "DEL StringLiteral: \"empty\"", "DEL SimpleType: SAXException", "DEL ThrowStatement", "DEL MethodInvocation", "DEL SimpleName: XMLUtils", "DEL SimpleName: ex", "DEL SimpleName: getDocumentElement", "DEL SimpleType: KeyResolverException", "DEL SimpleName: IOException", "DEL SimpleType: Document", "DEL TextElement: Parses a byte array and returns the parsed Element.", "DEL SimpleName: doc", "DEL SimpleType: KeyResolverException", "DEL SimpleName: bytes", "DEL SimpleType: IOException", "DEL TextElement:  if something goes wrong", "DEL CatchClause", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL SimpleName: KeyResolverException", "DEL SingleVariableDeclaration", "DEL ThrowStatement", "DEL Javadoc", "DEL Block", "DEL TextElement:  the Document Element after parsing bytes ", "DEL MethodDeclaration", "DEL Block", "DEL ClassInstanceCreation", "DEL SimpleType: Element", "DEL CatchClause", "DEL SimpleName: DocumentBuilder", "DEL ArrayType: byte[]", "DEL TagElement: @throws", "DEL SingleVariableDeclaration", "DEL Modifier: private", "DEL BooleanLiteral: false", "DEL SimpleName: ex", "DEL SimpleName: db", "DEL SimpleName: ex", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: ex", "DEL ReturnStatement", "DEL PrimitiveType: byte", "DEL MethodInvocation", "DEL SimpleName: KeyResolverException", "DEL SimpleName: ex", "DEL TryStatement", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL StringLiteral: \"empty\"", "DEL StringLiteral: \"empty\"", "DEL SimpleName: ByteArrayInputStream", "DEL SimpleType: ParserConfigurationException", "DEL Dimension", "DEL SimpleName: KeyResolverException", "DEL SingleVariableDeclaration", "DEL SimpleName: createDocumentBuilder", "DEL Block", "DEL SimpleName: doc", "DEL SimpleName: Element", "DEL SimpleName: bytes", "DEL SimpleName: getDocFromBytes"]}]}}, {"KeyInfoReferenceResolver_diff": {"operations": ["Insert FieldAccess(798) into MethodInvocation(799) at 2", "Insert ThisExpression(796) into FieldAccess(798) at 0", "Insert SimpleName: secureValidation(797) into FieldAccess(798) at 1", "Delete QualifiedName: java.io.ByteArrayInputStream(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: javax.xml.parsers.DocumentBuilder(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.w3c.dom.Document(60)", "Delete ImportDeclaration(61)", "Delete TextElement: Parses a byte array and returns the parsed Element.(812)", "Delete TagElement(813)", "Delete SimpleName: bytes(814)", "Delete TagElement: @param(815)", "Delete TextElement:  the Document Element after parsing bytes (816)", "Delete TagElement: @return(817)", "Delete SimpleName: KeyResolverException(818)", "Delete TextElement:  if something goes wrong(819)", "Delete TagElement: @throws(820)", "Delete Javadoc(821)", "Delete Modifier: private(822)", "Delete SimpleName: Element(823)", "Delete SimpleType: Element(824)", "Delete SimpleName: getDocFromBytes(825)", "Delete PrimitiveType: byte(826)", "Delete Dimension(827)", "Delete ArrayType: byte[](828)", "Delete SimpleName: bytes(829)", "Delete SingleVariableDeclaration(830)", "Delete SimpleName: KeyResolverException(831)", "Delete SimpleType: KeyResolverException(832)", "Delete SimpleName: DocumentBuilder(833)", "Delete SimpleType: DocumentBuilder(834)", "Delete SimpleName: db(835)", "Delete SimpleName: XMLUtils(836)", "Delete SimpleName: createDocumentBuilder(837)", "Delete BooleanLiteral: false(838)", "Delete SimpleName: secureValidation(839)", "Delete MethodInvocation(840)", "Delete VariableDeclarationFragment(841)", "Delete VariableDeclarationStatement(842)", "Delete SimpleName: Document(843)", "Delete SimpleType: Document(844)", "Delete SimpleName: doc(845)", "Delete SimpleName: db(846)", "Delete SimpleName: parse(847)", "Delete SimpleName: ByteArrayInputStream(848)", "Delete SimpleType: ByteArrayInputStream(849)", "Delete SimpleName: bytes(850)", "Delete ClassInstanceCreation(851)", "Delete MethodInvocation(852)", "Delete VariableDeclarationFragment(853)", "Delete VariableDeclarationStatement(854)", "Delete SimpleName: doc(855)", "Delete SimpleName: getDocumentElement(856)", "Delete MethodInvocation(857)", "Delete ReturnStatement(858)", "Delete Block(859)", "Delete SimpleName: SAXException(860)", "Delete SimpleType: SAXException(861)", "Delete SimpleName: ex(862)", "Delete SingleVariableDeclaration(863)", "Delete SimpleName: KeyResolverException(864)", "Delete SimpleType: KeyResolverException(865)", "Delete StringLiteral: \"empty\"(866)", "Delete SimpleName: ex(867)", "Delete ClassInstanceCreation(868)", "Delete ThrowStatement(869)", "Delete Block(870)", "Delete CatchClause(871)", "Delete SimpleName: IOException(872)", "Delete SimpleType: IOException(873)", "Delete SimpleName: ex(874)", "Delete SingleVariableDeclaration(875)", "Delete SimpleName: KeyResolverException(876)", "Delete SimpleType: KeyResolverException(877)", "Delete StringLiteral: \"empty\"(878)", "Delete SimpleName: ex(879)", "Delete ClassInstanceCreation(880)", "Delete ThrowStatement(881)", "Delete Block(882)", "Delete CatchClause(883)", "Delete SimpleName: ParserConfigurationException(884)", "Delete SimpleType: ParserConfigurationException(885)", "Delete SimpleName: ex(886)", "Delete SingleVariableDeclaration(887)", "Delete SimpleName: KeyResolverException(888)", "Delete SimpleType: KeyResolverException(889)", "Delete StringLiteral: \"empty\"(890)", "Delete SimpleName: ex(891)", "Delete ClassInstanceCreation(892)", "Delete ThrowStatement(893)", "Delete Block(894)", "Delete CatchClause(895)", "Delete TryStatement(896)", "Delete Block(897)", "Delete MethodDeclaration(898)"]}}, {"RetrievalMethodResolver_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: javax.xml.parsers.DocumentBuilder"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.w3c.dom.Document"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: Element", "DEL TagElement", "DEL SimpleType: Document", "DEL SimpleName: ByteArrayInputStream", "DEL TextElement:  the Document Element after parsing bytes ", "DEL SimpleName: DocumentBuilder", "DEL SimpleName: createDocumentBuilder", "DEL SimpleName: doc", "DEL Dimension", "DEL SimpleName: bytes", "DEL StringLiteral: \"empty\"", "DEL SimpleName: db", "DEL MethodInvocation", "DEL SimpleType: Element", "DEL MethodDeclaration", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL SimpleType: ParserConfigurationException", "DEL MethodInvocation", "DEL SimpleName: Document", "DEL TagElement: @throws", "DEL Block", "DEL SimpleName: KeyResolverException", "DEL SimpleName: doc", "DEL TextElement:  if something goes wrong", "DEL SimpleType: SAXException", "DEL SingleVariableDeclaration", "DEL BooleanLiteral: false", "DEL SimpleType: DocumentBuilder", "DEL SimpleType: KeyResolverException", "DEL SimpleName: KeyResolverException", "DEL Modifier: private", "DEL CatchClause", "DEL ThrowStatement", "DEL SimpleName: bytes", "DEL VariableDeclarationFragment", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL SimpleName: ex", "DEL SimpleName: IOException", "DEL TextElement: Parses a byte array and returns the parsed Element.", "DEL SingleVariableDeclaration", "DEL ThrowStatement", "DEL SimpleType: KeyResolverException", "DEL SimpleName: SAXException", "DEL ClassInstanceCreation", "DEL SimpleName: getDocFromBytes", "DEL MethodInvocation", "DEL SimpleName: KeyResolverException", "DEL Block", "DEL Block", "DEL SimpleName: parse", "DEL SimpleName: db", "DEL SimpleName: getDocumentElement", "DEL ArrayType: byte[]", "DEL SimpleName: ex", "DEL TagElement: @return", "DEL SimpleType: KeyResolverException", "DEL Block", "DEL SimpleName: bytes", "DEL SimpleName: KeyResolverException", "DEL Block", "DEL StringLiteral: \"empty\"", "DEL SimpleType: ByteArrayInputStream", "DEL CatchClause", "DEL SimpleName: secureValidation", "DEL TagElement: @param", "DEL PrimitiveType: byte", "DEL SimpleName: ex", "DEL VariableDeclarationStatement", "DEL ThrowStatement", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: ParserConfigurationException", "DEL PrimitiveType: boolean", "DEL SimpleName: KeyResolverException", "DEL SimpleType: IOException", "DEL Modifier: static", "DEL SimpleType: KeyResolverException", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL SimpleName: ex", "DEL SimpleName: ex", "DEL SimpleName: ex", "DEL StringLiteral: \"empty\"", "DEL TryStatement", "DEL SimpleName: XMLUtils", "DEL SimpleName: secureValidation", "DEL CatchClause"]}]}}, {"RetrievalMethodResolver_diff": {"operations": ["Delete QualifiedName: javax.xml.parsers.DocumentBuilder(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.w3c.dom.Document(72)", "Delete ImportDeclaration(73)", "Delete TextElement: Parses a byte array and returns the parsed Element.(999)", "Delete TagElement(1000)", "Delete SimpleName: bytes(1001)", "Delete TagElement: @param(1002)", "Delete TextElement:  the Document Element after parsing bytes (1003)", "Delete TagElement: @return(1004)", "Delete SimpleName: KeyResolverException(1005)", "Delete TextElement:  if something goes wrong(1006)", "Delete TagElement: @throws(1007)", "Delete Javadoc(1008)", "Delete Modifier: private(1009)", "Delete Modifier: static(1010)", "Delete SimpleName: Element(1011)", "Delete SimpleType: Element(1012)", "Delete SimpleName: getDocFromBytes(1013)", "Delete PrimitiveType: byte(1014)", "Delete Dimension(1015)", "Delete ArrayType: byte[](1016)", "Delete SimpleName: bytes(1017)", "Delete SingleVariableDeclaration(1018)", "Delete PrimitiveType: boolean(1019)", "Delete SimpleName: secureValidation(1020)", "Delete SingleVariableDeclaration(1021)", "Delete SimpleName: KeyResolverException(1022)", "Delete SimpleType: KeyResolverException(1023)", "Delete SimpleName: DocumentBuilder(1024)", "Delete SimpleType: DocumentBuilder(1025)", "Delete SimpleName: db(1026)", "Delete SimpleName: XMLUtils(1027)", "Delete SimpleName: createDocumentBuilder(1028)", "Delete BooleanLiteral: false(1029)", "Delete SimpleName: secureValidation(1030)", "Delete MethodInvocation(1031)", "Delete VariableDeclarationFragment(1032)", "Delete VariableDeclarationStatement(1033)", "Delete SimpleName: Document(1034)", "Delete SimpleType: Document(1035)", "Delete SimpleName: doc(1036)", "Delete SimpleName: db(1037)", "Delete SimpleName: parse(1038)", "Delete SimpleName: ByteArrayInputStream(1039)", "Delete SimpleType: ByteArrayInputStream(1040)", "Delete SimpleName: bytes(1041)", "Delete ClassInstanceCreation(1042)", "Delete MethodInvocation(1043)", "Delete VariableDeclarationFragment(1044)", "Delete VariableDeclarationStatement(1045)", "Delete SimpleName: doc(1046)", "Delete SimpleName: getDocumentElement(1047)", "Delete MethodInvocation(1048)", "Delete ReturnStatement(1049)", "Delete Block(1050)", "Delete SimpleName: SAXException(1051)", "Delete SimpleType: SAXException(1052)", "Delete SimpleName: ex(1053)", "Delete SingleVariableDeclaration(1054)", "Delete SimpleName: KeyResolverException(1055)", "Delete SimpleType: KeyResolverException(1056)", "Delete StringLiteral: \"empty\"(1057)", "Delete SimpleName: ex(1058)", "Delete ClassInstanceCreation(1059)", "Delete ThrowStatement(1060)", "Delete Block(1061)", "Delete CatchClause(1062)", "Delete SimpleName: IOException(1063)", "Delete SimpleType: IOException(1064)", "Delete SimpleName: ex(1065)", "Delete SingleVariableDeclaration(1066)", "Delete SimpleName: KeyResolverException(1067)", "Delete SimpleType: KeyResolverException(1068)", "Delete StringLiteral: \"empty\"(1069)", "Delete SimpleName: ex(1070)", "Delete ClassInstanceCreation(1071)", "Delete ThrowStatement(1072)", "Delete Block(1073)", "Delete CatchClause(1074)", "Delete SimpleName: ParserConfigurationException(1075)", "Delete SimpleType: ParserConfigurationException(1076)", "Delete SimpleName: ex(1077)", "Delete SingleVariableDeclaration(1078)", "Delete SimpleName: KeyResolverException(1079)", "Delete SimpleType: KeyResolverException(1080)", "Delete StringLiteral: \"empty\"(1081)", "Delete SimpleName: ex(1082)", "Delete ClassInstanceCreation(1083)", "Delete ThrowStatement(1084)", "Delete Block(1085)", "Delete CatchClause(1086)", "Delete TryStatement(1087)", "Delete Block(1088)", "Delete MethodDeclaration(1089)"]}}], "commit_stats": [{"total_files": 11, "deleted_files": 0, "testing": "False", "maintenance": "True", "build": "False"}]}