{"application": "apache-ranger", "csha": "e250f0291a23775a8f18f2a34f401575ddf2ed91", "files": [{"ServiceDBStore_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 5", "operations": ["INS SimpleName: setIsEnabled to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 5", "INS SimpleName: getIsEnabled to MethodInvocation at 1", "INS SimpleName: xPolicyItem to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: policyItem to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: policyItem to MethodInvocation at 0", "INS SimpleName: getComments to MethodInvocation at 1", "INS ExpressionStatement to Block at 6", "INS SimpleName: xPolicyItem to MethodInvocation at 0", "INS SimpleName: setComments to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}]}}, {"ServiceDBStore_diff": {"operations": ["Insert ExpressionStatement(8907) into Block(9421) at 5", "Insert ExpressionStatement(8914) into Block(9421) at 6", "Insert MethodInvocation(8906) into ExpressionStatement(8907) at 0", "Insert MethodInvocation(8913) into ExpressionStatement(8914) at 0", "Insert SimpleName: xPolicyItem(8901) into MethodInvocation(8906) at 0", "Insert SimpleName: setIsEnabled(8902) into MethodInvocation(8906) at 1", "Insert MethodInvocation(8905) into MethodInvocation(8906) at 2", "Insert SimpleName: xPolicyItem(8908) into MethodInvocation(8913) at 0", "Insert SimpleName: setComments(8909) into MethodInvocation(8913) at 1", "Insert MethodInvocation(8912) into MethodInvocation(8913) at 2", "Insert SimpleName: policyItem(8903) into MethodInvocation(8905) at 0", "Insert SimpleName: getIsEnabled(8904) into MethodInvocation(8905) at 1", "Insert SimpleName: policyItem(8910) into MethodInvocation(8912) at 0", "Insert SimpleName: getComments(8911) into MethodInvocation(8912) at 1"]}}, {"TagDBStore_cluster": {"actions": [{"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 5"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS ExpressionStatement to Block at 6", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 5"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 6"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 5"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 6"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: tagDef to MethodInvocation at 0", "MOV SimpleName: getCreatedBy to MethodInvocation at 1"]}, {"root": "UPDATE from getCreatedBy to setVersion", "operations": ["UPD SimpleName: getCreatedBy from getCreatedBy to setVersion", "UPD SimpleName: getCreatedBy from getCreatedBy to setVersion", "UPD SimpleName: getCreatedBy from getCreatedBy to setVersion"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getCreatedBy to MethodInvocation at 1", "MOV SimpleName: tag to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getCreatedBy to MethodInvocation at 1", "MOV SimpleName: resource to MethodInvocation at 0"]}, {"root": "UPDATE from StringUtils to existing", "operations": ["UPD SimpleName: StringUtils from StringUtils to existing", "UPD SimpleName: StringUtils from StringUtils to existing", "UPD SimpleName: tag from tag to existing"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: StringUtils to MethodInvocation at 0"]}, {"root": "UPDATE from getGuid to getVersion", "operations": ["UPD SimpleName: getGuid from getGuid to getVersion", "UPD SimpleName: getGuid from getGuid to getVersion", "UPD SimpleName: getGuid from getGuid to getVersion"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getGuid to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: StringUtils to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getGuid to MethodInvocation at 1"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: StringUtils", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: isEmpty", "DEL MethodInvocation", "DEL IfStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: tagDef", "DEL InfixExpression: ==", "DEL IfStatement", "DEL SimpleName: getCreateTime", "DEL NullLiteral", "DEL Block"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL SimpleName: tagDef", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: isEmpty", "DEL IfStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL SimpleName: StringUtils", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: isEmpty", "DEL MethodInvocation"]}, {"root": "DEL IfStatement", "operations": ["DEL MethodInvocation", "DEL NullLiteral", "DEL InfixExpression: ==", "DEL Block", "DEL SimpleName: getCreateTime", "DEL SimpleName: tag", "DEL IfStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL Block", "DEL SimpleName: StringUtils", "DEL SimpleName: isEmpty", "DEL MethodInvocation"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: isEmpty", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: StringUtils", "DEL Block", "DEL MethodInvocation"]}, {"root": "DEL IfStatement", "operations": ["DEL InfixExpression: ==", "DEL IfStatement", "DEL SimpleName: resource", "DEL Block", "DEL SimpleName: getCreateTime", "DEL MethodInvocation", "DEL NullLiteral"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: resource", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: isEmpty"]}]}}, {"TagDBStore_diff": {"operations": ["Move ExpressionStatement(309) into Block(374) at 3", "Move ExpressionStatement(323) into Block(374) at 4", "Move ExpressionStatement(338) into Block(374) at 5", "Insert ExpressionStatement(324) into Block(374) at 6", "Move ExpressionStatement(968) into Block(1017) at 3", "Move ExpressionStatement(982) into Block(1017) at 4", "Move ExpressionStatement(997) into Block(1017) at 5", "Insert ExpressionStatement(967) into Block(1017) at 6", "Move ExpressionStatement(1707) into Block(1736) at 3", "Move ExpressionStatement(1721) into Block(1736) at 4", "Move ExpressionStatement(1736) into Block(1736) at 5", "Insert ExpressionStatement(1690) into Block(1736) at 6", "Insert MethodInvocation(323) into ExpressionStatement(324) at 0", "Insert MethodInvocation(966) into ExpressionStatement(967) at 0", "Insert MethodInvocation(1689) into ExpressionStatement(1690) at 0", "Move SimpleName: tagDef(299) into MethodInvocation(323) at 0", "Update SimpleName: getCreatedBy(300) to setVersion", "Move SimpleName: getCreatedBy(300) into MethodInvocation(323) at 1", "Insert MethodInvocation(322) into MethodInvocation(323) at 2", "Move SimpleName: tag(958) into MethodInvocation(966) at 0", "Update SimpleName: getCreatedBy(959) to setVersion", "Move SimpleName: getCreatedBy(959) into MethodInvocation(966) at 1", "Move MethodInvocation(989) into MethodInvocation(966) at 2", "Move SimpleName: resource(1697) into MethodInvocation(1689) at 0", "Update SimpleName: getCreatedBy(1698) to setVersion", "Move SimpleName: getCreatedBy(1698) into MethodInvocation(1689) at 1", "Insert MethodInvocation(1688) into MethodInvocation(1689) at 2", "Update SimpleName: StringUtils(326) to existing", "Move SimpleName: StringUtils(326) into MethodInvocation(322) at 0", "Update SimpleName: getGuid(329) to getVersion", "Move SimpleName: getGuid(329) into MethodInvocation(322) at 1", "Update SimpleName: tag(987) to existing", "Update SimpleName: getGuid(988) to getVersion", "Update SimpleName: StringUtils(1724) to existing", "Move SimpleName: StringUtils(1724) into MethodInvocation(1688) at 0", "Update SimpleName: getGuid(1727) to getVersion", "Move SimpleName: getGuid(1727) into MethodInvocation(1688) at 1", "Delete SimpleName: StringUtils(297)", "Delete SimpleName: isEmpty(298)", "Delete MethodInvocation(301)", "Delete MethodInvocation(302)", "Delete Block(310)", "Delete IfStatement(311)", "Delete SimpleName: tagDef(312)", "Delete SimpleName: getCreateTime(313)", "Delete MethodInvocation(314)", "Delete NullLiteral(315)", "Delete InfixExpression: ==(316)", "Delete Block(324)", "Delete IfStatement(325)", "Delete SimpleName: isEmpty(327)", "Delete SimpleName: tagDef(328)", "Delete MethodInvocation(330)", "Delete MethodInvocation(331)", "Delete Block(339)", "Delete IfStatement(340)", "Delete SimpleName: StringUtils(956)", "Delete SimpleName: isEmpty(957)", "Delete MethodInvocation(960)", "Delete MethodInvocation(961)", "Delete Block(969)", "Delete IfStatement(970)", "Delete SimpleName: tag(971)", "Delete SimpleName: getCreateTime(972)", "Delete MethodInvocation(973)", "Delete NullLiteral(974)", "Delete InfixExpression: ==(975)", "Delete Block(983)", "Delete IfStatement(984)", "Delete SimpleName: StringUtils(985)", "Delete SimpleName: isEmpty(986)", "Delete MethodInvocation(990)", "Delete Block(998)", "Delete IfStatement(999)", "Delete SimpleName: StringUtils(1695)", "Delete SimpleName: isEmpty(1696)", "Delete MethodInvocation(1699)", "Delete MethodInvocation(1700)", "Delete Block(1708)", "Delete IfStatement(1709)", "Delete SimpleName: resource(1710)", "Delete SimpleName: getCreateTime(1711)", "Delete MethodInvocation(1712)", "Delete NullLiteral(1713)", "Delete InfixExpression: ==(1714)", "Delete Block(1722)", "Delete IfStatement(1723)", "Delete SimpleName: isEmpty(1725)", "Delete SimpleName: resource(1726)", "Delete MethodInvocation(1728)", "Delete MethodInvocation(1729)", "Delete Block(1737)", "Delete IfStatement(1738)"]}}, {"XXPolicyItem_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 14", "operations": ["INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS TextElement: </ul> to TagElement at 2", "INS TextElement: <ul> to TagElement at 1", "INS Javadoc to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 14", "INS MemberValuePair to NormalAnnotation at 1", "INS SimpleType: Boolean to FieldDeclaration at 3", "INS Modifier: protected to FieldDeclaration at 2", "INS StringLiteral: \"is_enabled\" to MemberValuePair at 1", "INS TagElement to Javadoc at 0", "INS NormalAnnotation to FieldDeclaration at 1", "INS SimpleName: name to MemberValuePair at 0", "INS SimpleName: isEnabled to VariableDeclarationFragment at 0", "INS SimpleName: Column to NormalAnnotation at 0", "INS TextElement: isEnabled of the XXPolicyItem to TagElement at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 15", "operations": ["INS TagElement to Javadoc at 0", "INS SimpleType: String to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 15", "INS TextElement: comments of the XXPolicyItem to TagElement at 0", "INS TextElement: <ul> to TagElement at 1", "INS MemberValuePair to NormalAnnotation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS NormalAnnotation to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: protected to FieldDeclaration at 2", "INS TextElement: </ul> to TagElement at 2", "INS SimpleName: name to MemberValuePair at 0", "INS StringLiteral: \"comments\" to MemberValuePair at 1", "INS SimpleName: comments to VariableDeclarationFragment at 0", "INS SimpleName: Column to NormalAnnotation at 0", "INS Javadoc to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 27", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 27", "INS TextElement: cannot set null to the attribute. to TagElement at 1", "INS TextElement: Value to set member attribute <b> isEnabled</b> to TagElement: @param at 1", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS SimpleName: isEnabled to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: isEnabled to FieldAccess at 1", "INS Modifier: public to MethodDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: setIsEnabled to MethodDeclaration at 3", "INS SimpleName: isEnabled to TagElement: @param at 0", "INS TextElement: This method sets the value to the member attribute <b> isEnabled</b> . You to TagElement at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS TagElement: @param to Javadoc at 1", "INS SimpleType: Boolean to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 5", "INS FieldAccess to Assignment: = at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: isEnabled to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 28", "operations": ["INS ReturnStatement to Block at 0", "INS TextElement:  Boolean - value of member attribute <b>isEnabled</b> . to TagElement: @return at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS SimpleType: Boolean to MethodDeclaration at 2", "INS TagElement to Javadoc at 0", "INS SimpleName: isEnabled to FieldAccess at 1", "INS SimpleName: getIsEnabled to MethodDeclaration at 3", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS FieldAccess to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 28", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @return to Javadoc at 1", "INS TextElement: Returns the value for the member attribute <b>isEnabled</b> to TagElement at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 29", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2", "INS Assignment: = to ExpressionStatement at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: setComments to MethodDeclaration at 3", "INS ThisExpression to FieldAccess at 0", "INS Block to MethodDeclaration at 5", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 29", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: comments to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: comments to Assignment: = at 1", "INS TextElement: cannot set null to the attribute. to TagElement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement: Value to set member attribute <b> comments</b> to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 1", "INS TagElement to Javadoc at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: comments to FieldAccess at 1", "INS TextElement: This method sets the value to the member attribute <b> comments</b> . You to TagElement at 0", "INS SimpleName: comments to TagElement: @param at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 30", "operations": ["INS SimpleType: String to MethodDeclaration at 2", "INS TagElement: @return to Javadoc at 1", "INS ReturnStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS TextElement: Returns the value for the member attribute <b>comments</b> to TagElement at 0", "INS SimpleName: comments to FieldAccess at 1", "INS TextElement:  Boolean - value of member attribute <b>comments</b> . to TagElement: @return at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: getComments to MethodDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS MethodDeclaration to TypeDeclaration: class at 30", "INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS FieldAccess to ReturnStatement at 0"]}, {"root": "INS IfStatement to Block at 11", "operations": ["INS SimpleName: isEnabled to MethodInvocation at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: != to IfStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: isEnabled to InfixExpression: == at 0", "INS QualifiedName: other.isEnabled to InfixExpression: != at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS IfStatement to Block at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS IfStatement to Block at 11", "INS IfStatement to IfStatement at 2", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS QualifiedName: other.isEnabled to MethodInvocation at 2", "INS MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "INS IfStatement to Block at 12", "operations": ["INS Block to IfStatement at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS QualifiedName: other.comments to MethodInvocation at 2", "INS IfStatement to Block at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS QualifiedName: other.comments to InfixExpression: != at 0", "INS ReturnStatement to Block at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS InfixExpression: != to IfStatement at 0", "INS IfStatement to Block at 12", "INS SimpleName: comments to InfixExpression: == at 0", "INS ReturnStatement to Block at 0", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS NullLiteral to InfixExpression: == at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: comments to MethodInvocation at 0", "INS IfStatement to IfStatement at 2"]}]}}, {"XXPolicyItem_diff": {"operations": ["Insert FieldDeclaration(157) into TypeDeclaration: class(712) at 14", "Insert FieldDeclaration(173) into TypeDeclaration: class(712) at 15", "Insert MethodDeclaration(387) into TypeDeclaration: class(712) at 27", "Insert MethodDeclaration(402) into TypeDeclaration: class(712) at 28", "Insert MethodDeclaration(424) into TypeDeclaration: class(712) at 29", "Insert MethodDeclaration(439) into TypeDeclaration: class(712) at 30", "Insert Javadoc(146) into FieldDeclaration(157) at 0", "Insert NormalAnnotation(151) into FieldDeclaration(157) at 1", "Insert Modifier: protected(152) into FieldDeclaration(157) at 2", "Insert SimpleType: Boolean(154) into FieldDeclaration(157) at 3", "Insert VariableDeclarationFragment(156) into FieldDeclaration(157) at 4", "Insert Javadoc(162) into FieldDeclaration(173) at 0", "Insert NormalAnnotation(167) into FieldDeclaration(173) at 1", "Insert Modifier: protected(168) into FieldDeclaration(173) at 2", "Insert SimpleType: String(170) into FieldDeclaration(173) at 3", "Insert VariableDeclarationFragment(172) into FieldDeclaration(173) at 4", "Insert Javadoc(372) into MethodDeclaration(387) at 0", "Insert Modifier: public(373) into MethodDeclaration(387) at 1", "Insert PrimitiveType: void(374) into MethodDeclaration(387) at 2", "Insert SimpleName: setIsEnabled(375) into MethodDeclaration(387) at 3", "Insert SingleVariableDeclaration(379) into MethodDeclaration(387) at 4", "Insert Block(386) into MethodDeclaration(387) at 5", "Insert Javadoc(392) into MethodDeclaration(402) at 0", "Insert Modifier: public(393) into MethodDeclaration(402) at 1", "Insert SimpleType: Boolean(395) into MethodDeclaration(402) at 2", "Insert SimpleName: getIsEnabled(396) into MethodDeclaration(402) at 3", "Insert Block(401) into MethodDeclaration(402) at 4", "Insert Javadoc(409) into MethodDeclaration(424) at 0", "Insert Modifier: public(410) into MethodDeclaration(424) at 1", "Insert PrimitiveType: void(411) into MethodDeclaration(424) at 2", "Insert SimpleName: setComments(412) into MethodDeclaration(424) at 3", "Insert SingleVariableDeclaration(416) into MethodDeclaration(424) at 4", "Insert Block(423) into MethodDeclaration(424) at 5", "Insert Javadoc(429) into MethodDeclaration(439) at 0", "Insert Modifier: public(430) into MethodDeclaration(439) at 1", "Insert SimpleType: String(432) into MethodDeclaration(439) at 2", "Insert SimpleName: getComments(433) into MethodDeclaration(439) at 3", "Insert Block(438) into MethodDeclaration(439) at 4", "Insert TagElement(145) into Javadoc(146) at 0", "Insert SimpleName: Column(147) into NormalAnnotation(151) at 0", "Insert MemberValuePair(150) into NormalAnnotation(151) at 1", "Insert SimpleName: Boolean(153) into SimpleType: Boolean(154) at 0", "Insert SimpleName: isEnabled(155) into VariableDeclarationFragment(156) at 0", "Insert TagElement(161) into Javadoc(162) at 0", "Insert SimpleName: Column(163) into NormalAnnotation(167) at 0", "Insert MemberValuePair(166) into NormalAnnotation(167) at 1", "Insert SimpleName: String(169) into SimpleType: String(170) at 0", "Insert SimpleName: comments(171) into VariableDeclarationFragment(172) at 0", "Insert TagElement(368) into Javadoc(372) at 0", "Insert TagElement: @param(371) into Javadoc(372) at 1", "Insert SimpleType: Boolean(377) into SingleVariableDeclaration(379) at 0", "Insert SimpleName: isEnabled(378) into SingleVariableDeclaration(379) at 1", "Insert ExpressionStatement(385) into Block(386) at 0", "Insert TagElement(389) into Javadoc(392) at 0", "Insert TagElement: @return(391) into Javadoc(392) at 1", "Insert SimpleName: Boolean(394) into SimpleType: Boolean(395) at 0", "Insert ReturnStatement(400) into Block(401) at 0", "Insert TagElement(405) into Javadoc(409) at 0", "Insert TagElement: @param(408) into Javadoc(409) at 1", "Insert SimpleType: String(414) into SingleVariableDeclaration(416) at 0", "Insert SimpleName: comments(415) into SingleVariableDeclaration(416) at 1", "Insert ExpressionStatement(422) into Block(423) at 0", "Insert TagElement(426) into Javadoc(429) at 0", "Insert TagElement: @return(428) into Javadoc(429) at 1", "Insert SimpleName: String(431) into SimpleType: String(432) at 0", "Insert ReturnStatement(437) into Block(438) at 0", "Insert IfStatement(660) into Block(684) at 11", "Insert IfStatement(681) into Block(684) at 12", "Insert TextElement: isEnabled of the XXPolicyItem(142) into TagElement(145) at 0", "Insert TextElement: <ul>(143) into TagElement(145) at 1", "Insert TextElement: </ul>(144) into TagElement(145) at 2", "Insert SimpleName: name(148) into MemberValuePair(150) at 0", "Insert StringLiteral: \"is_enabled\"(149) into MemberValuePair(150) at 1", "Insert TextElement: comments of the XXPolicyItem(158) into TagElement(161) at 0", "Insert TextElement: <ul>(159) into TagElement(161) at 1", "Insert TextElement: </ul>(160) into TagElement(161) at 2", "Insert SimpleName: name(164) into MemberValuePair(166) at 0", "Insert StringLiteral: \"comments\"(165) into MemberValuePair(166) at 1", "Insert TextElement: This method sets the value to the member attribute <b> isEnabled</b> . You(366) into TagElement(368) at 0", "Insert TextElement: cannot set null to the attribute.(367) into TagElement(368) at 1", "Insert SimpleName: isEnabled(369) into TagElement: @param(371) at 0", "Insert TextElement: Value to set member attribute <b> isEnabled</b>(370) into TagElement: @param(371) at 1", "Insert SimpleName: Boolean(376) into SimpleType: Boolean(377) at 0", "Insert Assignment: =(384) into ExpressionStatement(385) at 0", "Insert TextElement: Returns the value for the member attribute <b>isEnabled</b>(388) into TagElement(389) at 0", "Insert TextElement:  Boolean - value of member attribute <b>isEnabled</b> .(390) into TagElement: @return(391) at 0", "Insert FieldAccess(399) into ReturnStatement(400) at 0", "Insert TextElement: This method sets the value to the member attribute <b> comments</b> . You(403) into TagElement(405) at 0", "Insert TextElement: cannot set null to the attribute.(404) into TagElement(405) at 1", "Insert SimpleName: comments(406) into TagElement: @param(408) at 0", "Insert TextElement: Value to set member attribute <b> comments</b>(407) into TagElement: @param(408) at 1", "Insert SimpleName: String(413) into SimpleType: String(414) at 0", "Insert Assignment: =(421) into ExpressionStatement(422) at 0", "Insert TextElement: Returns the value for the member attribute <b>comments</b>(425) into TagElement(426) at 0", "Insert TextElement:  Boolean - value of member attribute <b>comments</b> .(427) into TagElement: @return(428) at 0", "Insert FieldAccess(436) into ReturnStatement(437) at 0", "Insert InfixExpression: ==(642) into IfStatement(660) at 0", "Insert Block(650) into IfStatement(660) at 1", "Insert IfStatement(659) into IfStatement(660) at 2", "Insert InfixExpression: ==(663) into IfStatement(681) at 0", "Insert Block(671) into IfStatement(681) at 1", "Insert IfStatement(680) into IfStatement(681) at 2", "Insert FieldAccess(382) into Assignment: =(384) at 0", "Insert SimpleName: isEnabled(383) into Assignment: =(384) at 1", "Insert ThisExpression(397) into FieldAccess(399) at 0", "Insert SimpleName: isEnabled(398) into FieldAccess(399) at 1", "Insert FieldAccess(419) into Assignment: =(421) at 0", "Insert SimpleName: comments(420) into Assignment: =(421) at 1", "Insert ThisExpression(434) into FieldAccess(436) at 0", "Insert SimpleName: comments(435) into FieldAccess(436) at 1", "Insert SimpleName: isEnabled(640) into InfixExpression: ==(642) at 0", "Insert NullLiteral(641) into InfixExpression: ==(642) at 1", "Insert IfStatement(649) into Block(650) at 0", "Insert PrefixExpression: !(655) into IfStatement(659) at 0", "Insert Block(658) into IfStatement(659) at 1", "Insert SimpleName: comments(661) into InfixExpression: ==(663) at 0", "Insert NullLiteral(662) into InfixExpression: ==(663) at 1", "Insert IfStatement(670) into Block(671) at 0", "Insert PrefixExpression: !(676) into IfStatement(680) at 0", "Insert Block(679) into IfStatement(680) at 1", "Insert ThisExpression(380) into FieldAccess(382) at 0", "Insert SimpleName: isEnabled(381) into FieldAccess(382) at 1", "Insert ThisExpression(417) into FieldAccess(419) at 0", "Insert SimpleName: comments(418) into FieldAccess(419) at 1", "Insert InfixExpression: !=(645) into IfStatement(649) at 0", "Insert Block(648) into IfStatement(649) at 1", "Insert MethodInvocation(654) into PrefixExpression: !(655) at 0", "Insert ReturnStatement(657) into Block(658) at 0", "Insert InfixExpression: !=(666) into IfStatement(670) at 0", "Insert Block(669) into IfStatement(670) at 1", "Insert MethodInvocation(675) into PrefixExpression: !(676) at 0", "Insert ReturnStatement(678) into Block(679) at 0", "Insert QualifiedName: other.isEnabled(643) into InfixExpression: !=(645) at 0", "Insert NullLiteral(644) into InfixExpression: !=(645) at 1", "Insert ReturnStatement(647) into Block(648) at 0", "Insert SimpleName: isEnabled(651) into MethodInvocation(654) at 0", "Insert SimpleName: equals(652) into MethodInvocation(654) at 1", "Insert QualifiedName: other.isEnabled(653) into MethodInvocation(654) at 2", "Insert BooleanLiteral: false(656) into ReturnStatement(657) at 0", "Insert QualifiedName: other.comments(664) into InfixExpression: !=(666) at 0", "Insert NullLiteral(665) into InfixExpression: !=(666) at 1", "Insert ReturnStatement(668) into Block(669) at 0", "Insert SimpleName: comments(672) into MethodInvocation(675) at 0", "Insert SimpleName: equals(673) into MethodInvocation(675) at 1", "Insert QualifiedName: other.comments(674) into MethodInvocation(675) at 2", "Insert BooleanLiteral: false(677) into ReturnStatement(678) at 0", "Insert BooleanLiteral: false(646) into ReturnStatement(647) at 0", "Insert BooleanLiteral: false(667) into ReturnStatement(668) at 0"]}}, {"XXServiceResource_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: javax.persistence.Version to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS MarkerAnnotation to FieldDeclaration at 0", "operations": ["INS SimpleName: Version to MarkerAnnotation at 0", "INS MarkerAnnotation to FieldDeclaration at 0"]}]}}, {"XXServiceResource_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(736) at 10", "Insert QualifiedName: javax.persistence.Version(20) into ImportDeclaration(21) at 0", "Insert MarkerAnnotation(104) into FieldDeclaration(115) at 0", "Insert SimpleName: Version(103) into MarkerAnnotation(104) at 0"]}}, {"XXTag_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: javax.persistence.Version to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS NormalAnnotation to FieldDeclaration at 1", "INS SimpleName: Long to SimpleType: Long at 0", "INS SimpleName: Version to MarkerAnnotation at 0", "INS SimpleType: Long to FieldDeclaration at 3", "INS SimpleName: version to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS MarkerAnnotation to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS Modifier: protected to FieldDeclaration at 2", "INS MemberValuePair to NormalAnnotation at 1", "INS StringLiteral: \"version\" to MemberValuePair at 1", "INS SimpleName: Column to NormalAnnotation at 0", "INS SimpleName: name to MemberValuePair at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS SimpleName: version to ReturnStatement at 0", "INS SimpleName: Long to SimpleType: Long at 0", "INS TextElement:  the version to TagElement: @return at 0", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS ReturnStatement to Block at 0", "INS SimpleName: getVersion to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS SimpleType: Long to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS TagElement: @return to Javadoc at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: Long to SimpleType: Long at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: version to FieldAccess at 1", "INS SimpleName: version to Assignment: = at 1", "INS SimpleType: Long to SingleVariableDeclaration at 0", "INS Javadoc to MethodDeclaration at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: version to SingleVariableDeclaration at 1", "INS TextElement: the version to set to TagElement: @param at 1", "INS Modifier: public to MethodDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Block to MethodDeclaration at 5", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: version to TagElement: @param at 0", "INS SimpleName: setVersion to MethodDeclaration at 3", "INS TagElement: @param to Javadoc at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ParenthesizedExpression to InfixExpression: + at 1", "INS InfixExpression: == to ParenthesizedExpression at 0", "INS InfixExpression: * to InfixExpression: + at 0", "INS SimpleName: hashCode to MethodInvocation at 1", "INS SimpleName: result to Assignment: = at 0", "INS InfixExpression: + to Assignment: = at 1", "INS NumberLiteral: 0 to ConditionalExpression at 1", "INS SimpleName: version to InfixExpression: == at 0", "INS ConditionalExpression to ParenthesizedExpression at 0", "INS SimpleName: prime to InfixExpression: * at 0", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: version to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ConditionalExpression at 2", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: result to InfixExpression: * at 1"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS PrefixExpression: ! to IfStatement at 0", "INS ReturnStatement to IfStatement at 1", "INS QualifiedName: other.version to MethodInvocation at 2", "INS BooleanLiteral: false to ReturnStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS ReturnStatement to IfStatement at 1", "INS SimpleName: version to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: version to InfixExpression: == at 0", "INS InfixExpression: != to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS QualifiedName: other.version to InfixExpression: != at 0", "INS IfStatement to Block at 4", "INS MethodInvocation to PrefixExpression: ! at 0", "INS InfixExpression: == to IfStatement at 0", "INS IfStatement to IfStatement at 2", "INS BooleanLiteral: false to ReturnStatement at 0"]}]}}, {"XXTag_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(549) at 10", "Insert QualifiedName: javax.persistence.Version(20) into ImportDeclaration(21) at 0", "Insert FieldDeclaration(115) into TypeDeclaration: class(548) at 11", "Insert MethodDeclaration(194) into TypeDeclaration: class(548) at 17", "Insert MethodDeclaration(213) into TypeDeclaration: class(548) at 18", "Insert MarkerAnnotation(104) into FieldDeclaration(115) at 0", "Insert NormalAnnotation(109) into FieldDeclaration(115) at 1", "Insert Modifier: protected(110) into FieldDeclaration(115) at 2", "Insert SimpleType: Long(112) into FieldDeclaration(115) at 3", "Insert VariableDeclarationFragment(114) into FieldDeclaration(115) at 4", "Insert Javadoc(186) into MethodDeclaration(194) at 0", "Insert Modifier: public(187) into MethodDeclaration(194) at 1", "Insert SimpleType: Long(189) into MethodDeclaration(194) at 2", "Insert SimpleName: getVersion(190) into MethodDeclaration(194) at 3", "Insert Block(193) into MethodDeclaration(194) at 4", "Insert Javadoc(198) into MethodDeclaration(213) at 0", "Insert Modifier: public(199) into MethodDeclaration(213) at 1", "Insert PrimitiveType: void(200) into MethodDeclaration(213) at 2", "Insert SimpleName: setVersion(201) into MethodDeclaration(213) at 3", "Insert SingleVariableDeclaration(205) into MethodDeclaration(213) at 4", "Insert Block(212) into MethodDeclaration(213) at 5", "Insert SimpleName: Version(103) into MarkerAnnotation(104) at 0", "Insert SimpleName: Column(105) into NormalAnnotation(109) at 0", "Insert MemberValuePair(108) into NormalAnnotation(109) at 1", "Insert SimpleName: Long(111) into SimpleType: Long(112) at 0", "Insert SimpleName: version(113) into VariableDeclarationFragment(114) at 0", "Insert TagElement: @return(185) into Javadoc(186) at 0", "Insert SimpleName: Long(188) into SimpleType: Long(189) at 0", "Insert ReturnStatement(192) into Block(193) at 0", "Insert TagElement: @param(197) into Javadoc(198) at 0", "Insert SimpleType: Long(203) into SingleVariableDeclaration(205) at 0", "Insert SimpleName: version(204) into SingleVariableDeclaration(205) at 1", "Insert ExpressionStatement(211) into Block(212) at 0", "Insert ExpressionStatement(285) into Block(339) at 2", "Insert IfStatement(399) into Block(459) at 4", "Insert SimpleName: name(106) into MemberValuePair(108) at 0", "Insert StringLiteral: \"version\"(107) into MemberValuePair(108) at 1", "Insert TextElement:  the version(184) into TagElement: @return(185) at 0", "Insert SimpleName: version(191) into ReturnStatement(192) at 0", "Insert SimpleName: version(195) into TagElement: @param(197) at 0", "Insert TextElement: the version to set(196) into TagElement: @param(197) at 1", "Insert SimpleName: Long(202) into SimpleType: Long(203) at 0", "Insert Assignment: =(210) into ExpressionStatement(211) at 0", "Insert Assignment: =(284) into ExpressionStatement(285) at 0", "Insert InfixExpression: ==(383) into IfStatement(399) at 0", "Insert Block(390) into IfStatement(399) at 1", "Insert IfStatement(398) into IfStatement(399) at 2", "Insert FieldAccess(208) into Assignment: =(210) at 0", "Insert SimpleName: version(209) into Assignment: =(210) at 1", "Insert SimpleName: result(269) into Assignment: =(284) at 0", "Insert InfixExpression: +(283) into Assignment: =(284) at 1", "Insert SimpleName: version(381) into InfixExpression: ==(383) at 0", "Insert NullLiteral(382) into InfixExpression: ==(383) at 1", "Insert IfStatement(389) into Block(390) at 0", "Insert PrefixExpression: !(395) into IfStatement(398) at 0", "Insert ReturnStatement(397) into IfStatement(398) at 1", "Insert ThisExpression(206) into FieldAccess(208) at 0", "Insert SimpleName: version(207) into FieldAccess(208) at 1", "Insert InfixExpression: *(272) into InfixExpression: +(283) at 0", "Insert ParenthesizedExpression(282) into InfixExpression: +(283) at 1", "Insert InfixExpression: !=(386) into IfStatement(389) at 0", "Insert ReturnStatement(388) into IfStatement(389) at 1", "Insert MethodInvocation(394) into PrefixExpression: !(395) at 0", "Insert BooleanLiteral: false(396) into ReturnStatement(397) at 0", "Insert SimpleName: prime(270) into InfixExpression: *(272) at 0", "Insert SimpleName: result(271) into InfixExpression: *(272) at 1", "Insert ConditionalExpression(281) into ParenthesizedExpression(282) at 0", "Insert QualifiedName: other.version(384) into InfixExpression: !=(386) at 0", "Insert NullLiteral(385) into InfixExpression: !=(386) at 1", "Insert BooleanLiteral: false(387) into ReturnStatement(388) at 0", "Insert SimpleName: version(391) into MethodInvocation(394) at 0", "Insert SimpleName: equals(392) into MethodInvocation(394) at 1", "Insert QualifiedName: other.version(393) into MethodInvocation(394) at 2", "Insert ParenthesizedExpression(276) into ConditionalExpression(281) at 0", "Insert NumberLiteral: 0(277) into ConditionalExpression(281) at 1", "Insert MethodInvocation(280) into ConditionalExpression(281) at 2", "Insert InfixExpression: ==(275) into ParenthesizedExpression(276) at 0", "Insert SimpleName: version(278) into MethodInvocation(280) at 0", "Insert SimpleName: hashCode(279) into MethodInvocation(280) at 1", "Insert SimpleName: version(273) into InfixExpression: ==(275) at 0", "Insert NullLiteral(274) into InfixExpression: ==(275) at 1"]}}, {"XXTagDef_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: javax.persistence.Version to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS MarkerAnnotation to FieldDeclaration at 0", "operations": ["INS SimpleName: Version to MarkerAnnotation at 0", "INS MarkerAnnotation to FieldDeclaration at 0"]}]}}, {"XXTagDef_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(736) at 10", "Insert QualifiedName: javax.persistence.Version(20) into ImportDeclaration(21) at 0", "Insert MarkerAnnotation(104) into FieldDeclaration(115) at 0", "Insert SimpleName: Version(103) into MarkerAnnotation(104) at 0"]}}, {"ServiceREST_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.ranger.plugin.store.ServiceStore"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.ranger.security.context.RangerPreAuthSecurityHandler", "DEL ImportDeclaration"]}]}}, {"ServiceREST_diff": {"operations": ["Delete QualifiedName: org.apache.ranger.plugin.store.ServiceStore(116)", "Delete ImportDeclaration(117)", "Delete QualifiedName: org.apache.ranger.security.context.RangerPreAuthSecurityHandler(128)", "Delete ImportDeclaration(129)"]}}, {"RangerPolicyServiceBase_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 15", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getIsEnabled to MethodInvocation at 1", "INS ExpressionStatement to Block at 15", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: rangerPolItem to MethodInvocation at 0", "INS SimpleName: xPolItem to MethodInvocation at 0", "INS SimpleName: setIsEnabled to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 16", "operations": ["INS SimpleName: getComments to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: rangerPolItem to MethodInvocation at 0", "INS SimpleName: setComments to MethodInvocation at 1", "INS SimpleName: xPolItem to MethodInvocation at 0", "INS ExpressionStatement to Block at 16", "INS MethodInvocation to MethodInvocation at 2"]}]}}, {"RangerPolicyServiceBase_diff": {"operations": ["Insert ExpressionStatement(1007) into Block(1017) at 15", "Insert ExpressionStatement(1014) into Block(1017) at 16", "Insert MethodInvocation(1006) into ExpressionStatement(1007) at 0", "Insert MethodInvocation(1013) into ExpressionStatement(1014) at 0", "Insert SimpleName: rangerPolItem(1001) into MethodInvocation(1006) at 0", "Insert SimpleName: setIsEnabled(1002) into MethodInvocation(1006) at 1", "Insert MethodInvocation(1005) into MethodInvocation(1006) at 2", "Insert SimpleName: rangerPolItem(1008) into MethodInvocation(1013) at 0", "Insert SimpleName: setComments(1009) into MethodInvocation(1013) at 1", "Insert MethodInvocation(1012) into MethodInvocation(1013) at 2", "Insert SimpleName: xPolItem(1003) into MethodInvocation(1005) at 0", "Insert SimpleName: getIsEnabled(1004) into MethodInvocation(1005) at 1", "Insert SimpleName: xPolItem(1010) into MethodInvocation(1012) at 0", "Insert SimpleName: getComments(1011) into MethodInvocation(1012) at 1"]}}, {"RangerPolicy_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 10", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 10", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: Boolean to FieldDeclaration at 1", "INS QualifiedName: Boolean.TRUE to VariableDeclarationFragment at 1", "INS SimpleName: isEnabled to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: Boolean to SimpleType: Boolean at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 11", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: comments to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS SimpleName: isEnabled to ReturnStatement at 0", "INS TagElement: @return to Javadoc at 0", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS SimpleType: Boolean to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS SimpleName: getIsEnabled to MethodDeclaration at 3", "INS TextElement:  the isEnabled to TagElement: @return at 0", "INS Javadoc to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: isEnabled to InfixExpression: == at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS InfixExpression: == to ConditionalExpression at 0", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TagElement: @param to Javadoc at 0", "INS SimpleName: isEnabled to ConditionalExpression at 2", "INS SimpleName: isEnabled to FieldAccess at 1", "INS SimpleType: Boolean to SingleVariableDeclaration at 0", "INS TextElement:  the isEnabled to set to TagElement: @param at 1", "INS NullLiteral to InfixExpression: == at 1", "INS ConditionalExpression to Assignment: = at 1", "INS QualifiedName: Boolean.TRUE to ConditionalExpression at 1", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS MethodDeclaration to TypeDeclaration: class at 25", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: setIsEnabled to MethodDeclaration at 3", "INS SimpleName: isEnabled to TagElement: @param at 0", "INS SimpleName: isEnabled to SingleVariableDeclaration at 1", "INS FieldAccess to Assignment: = at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 26", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: comments to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS TextElement:  the comments to TagElement: @return at 0", "INS Javadoc to MethodDeclaration at 0", "INS Block to MethodDeclaration at 4", "INS TagElement: @return to Javadoc at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 26", "INS SimpleName: getComments to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 27", "operations": ["INS SimpleName: comments to TagElement: @param at 0", "INS TextElement:  the comments to set to TagElement: @param at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TagElement: @param to Javadoc at 0", "INS MethodDeclaration to TypeDeclaration: class at 27", "INS Javadoc to MethodDeclaration at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: setComments to MethodDeclaration at 3", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: comments to SingleVariableDeclaration at 1", "INS SimpleName: comments to Assignment: = at 1", "INS SimpleName: comments to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS ExpressionStatement to Block at 14", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: sb to MethodInvocation at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: append to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: isEnabled to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"} \" to MethodInvocation at 2", "INS SimpleName: append to MethodInvocation at 1", "INS ExpressionStatement to Block at 14", "INS StringLiteral: \"isEnabled={\" to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 15", "operations": ["INS SimpleName: append to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: sb to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: comments to MethodInvocation at 2", "INS SimpleName: append to MethodInvocation at 1", "INS StringLiteral: \"} \" to MethodInvocation at 2", "INS StringLiteral: \"comments={\" to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS ExpressionStatement to Block at 15"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS ExpressionStatement to Block at 5", "INS SimpleName: hashCode to MethodInvocation at 1", "INS SimpleName: result to Assignment: = at 0", "INS MethodInvocation to ConditionalExpression at 2", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS InfixExpression: + to Assignment: = at 1", "INS ConditionalExpression to ParenthesizedExpression at 0", "INS SimpleName: result to InfixExpression: * at 1", "INS ParenthesizedExpression to InfixExpression: + at 1", "INS SimpleName: prime to InfixExpression: * at 0", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: == to ParenthesizedExpression at 0", "INS InfixExpression: * to InfixExpression: + at 0", "INS NumberLiteral: 0 to ConditionalExpression at 1", "INS SimpleName: isEnabled to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: isEnabled to InfixExpression: == at 0"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS ConditionalExpression to ParenthesizedExpression at 0", "INS SimpleName: result to InfixExpression: * at 1", "INS InfixExpression: == to ParenthesizedExpression at 0", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS NumberLiteral: 0 to ConditionalExpression at 1", "INS InfixExpression: + to Assignment: = at 1", "INS ExpressionStatement to Block at 6", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: * to InfixExpression: + at 0", "INS SimpleName: result to Assignment: = at 0", "INS ParenthesizedExpression to InfixExpression: + at 1", "INS MethodInvocation to ConditionalExpression at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: hashCode to MethodInvocation at 1", "INS SimpleName: comments to InfixExpression: == at 0", "INS SimpleName: prime to InfixExpression: * at 0", "INS SimpleName: comments to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 7", "operations": ["INS NullLiteral to InfixExpression: != at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: isEnabled to MethodInvocation at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS QualifiedName: other.isEnabled to InfixExpression: != at 0", "INS IfStatement to Block at 7", "INS BooleanLiteral: false to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS ReturnStatement to IfStatement at 1", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS ReturnStatement to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: isEnabled to InfixExpression: == at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS IfStatement to IfStatement at 2", "INS QualifiedName: other.isEnabled to MethodInvocation at 2"]}, {"root": "INS IfStatement to Block at 8", "operations": ["INS NullLiteral to InfixExpression: != at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS QualifiedName: other.comments to MethodInvocation at 2", "INS PrefixExpression: ! to IfStatement at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS InfixExpression: != to IfStatement at 0", "INS IfStatement to IfStatement at 2", "INS Block to IfStatement at 1", "INS InfixExpression: == to IfStatement at 0", "INS ReturnStatement to IfStatement at 1", "INS QualifiedName: other.comments to InfixExpression: != at 0", "INS IfStatement to Block at 0", "INS IfStatement to Block at 8", "INS ReturnStatement to IfStatement at 1", "INS SimpleName: comments to InfixExpression: == at 0", "INS SimpleName: comments to MethodInvocation at 0"]}]}}, {"RangerPolicy_diff": {"operations": ["Insert FieldDeclaration(1919) into TypeDeclaration: class(2921) at 10", "Insert FieldDeclaration(1926) into TypeDeclaration: class(2921) at 11", "Insert MethodDeclaration(2338) into TypeDeclaration: class(2921) at 24", "Insert MethodDeclaration(2362) into TypeDeclaration: class(2921) at 25", "Insert MethodDeclaration(2373) into TypeDeclaration: class(2921) at 26", "Insert MethodDeclaration(2392) into TypeDeclaration: class(2921) at 27", "Insert Modifier: private(1913) into FieldDeclaration(1919) at 0", "Insert SimpleType: Boolean(1915) into FieldDeclaration(1919) at 1", "Insert VariableDeclarationFragment(1918) into FieldDeclaration(1919) at 2", "Insert Modifier: private(1920) into FieldDeclaration(1926) at 0", "Insert SimpleType: String(1922) into FieldDeclaration(1926) at 1", "Insert VariableDeclarationFragment(1925) into FieldDeclaration(1926) at 2", "Insert Javadoc(2330) into MethodDeclaration(2338) at 0", "Insert Modifier: public(2331) into MethodDeclaration(2338) at 1", "Insert SimpleType: Boolean(2333) into MethodDeclaration(2338) at 2", "Insert SimpleName: getIsEnabled(2334) into MethodDeclaration(2338) at 3", "Insert Block(2337) into MethodDeclaration(2338) at 4", "Insert Javadoc(2342) into MethodDeclaration(2362) at 0", "Insert Modifier: public(2343) into MethodDeclaration(2362) at 1", "Insert PrimitiveType: void(2344) into MethodDeclaration(2362) at 2", "Insert SimpleName: setIsEnabled(2345) into MethodDeclaration(2362) at 3", "Insert SingleVariableDeclaration(2349) into MethodDeclaration(2362) at 4", "Insert Block(2361) into MethodDeclaration(2362) at 5", "Insert Javadoc(2365) into MethodDeclaration(2373) at 0", "Insert Modifier: public(2366) into MethodDeclaration(2373) at 1", "Insert SimpleType: String(2368) into MethodDeclaration(2373) at 2", "Insert SimpleName: getComments(2369) into MethodDeclaration(2373) at 3", "Insert Block(2372) into MethodDeclaration(2373) at 4", "Insert Javadoc(2377) into MethodDeclaration(2392) at 0", "Insert Modifier: public(2378) into MethodDeclaration(2392) at 1", "Insert PrimitiveType: void(2379) into MethodDeclaration(2392) at 2", "Insert SimpleName: setComments(2380) into MethodDeclaration(2392) at 3", "Insert SingleVariableDeclaration(2384) into MethodDeclaration(2392) at 4", "Insert Block(2391) into MethodDeclaration(2392) at 5", "Insert SimpleName: Boolean(1914) into SimpleType: Boolean(1915) at 0", "Insert SimpleName: isEnabled(1916) into VariableDeclarationFragment(1918) at 0", "Insert QualifiedName: Boolean.TRUE(1917) into VariableDeclarationFragment(1918) at 1", "Insert SimpleName: String(1921) into SimpleType: String(1922) at 0", "Insert SimpleName: comments(1923) into VariableDeclarationFragment(1925) at 0", "Insert NullLiteral(1924) into VariableDeclarationFragment(1925) at 1", "Insert TagElement: @return(2329) into Javadoc(2330) at 0", "Insert SimpleName: Boolean(2332) into SimpleType: Boolean(2333) at 0", "Insert ReturnStatement(2336) into Block(2337) at 0", "Insert TagElement: @param(2341) into Javadoc(2342) at 0", "Insert SimpleType: Boolean(2347) into SingleVariableDeclaration(2349) at 0", "Insert SimpleName: isEnabled(2348) into SingleVariableDeclaration(2349) at 1", "Insert ExpressionStatement(2360) into Block(2361) at 0", "Insert TagElement: @return(2364) into Javadoc(2365) at 0", "Insert SimpleName: String(2367) into SimpleType: String(2368) at 0", "Insert ReturnStatement(2371) into Block(2372) at 0", "Insert TagElement: @param(2376) into Javadoc(2377) at 0", "Insert SimpleType: String(2382) into SingleVariableDeclaration(2384) at 0", "Insert SimpleName: comments(2383) into SingleVariableDeclaration(2384) at 1", "Insert ExpressionStatement(2390) into Block(2391) at 0", "Insert ExpressionStatement(2585) into Block(2604) at 14", "Insert ExpressionStatement(2596) into Block(2604) at 15", "Insert ExpressionStatement(2689) into Block(2743) at 5", "Insert ExpressionStatement(2706) into Block(2743) at 6", "Insert IfStatement(2859) into Block(2919) at 7", "Insert IfStatement(2878) into Block(2919) at 8", "Insert TextElement:  the isEnabled(2328) into TagElement: @return(2329) at 0", "Insert SimpleName: isEnabled(2335) into ReturnStatement(2336) at 0", "Insert SimpleName: isEnabled(2339) into TagElement: @param(2341) at 0", "Insert TextElement:  the isEnabled to set(2340) into TagElement: @param(2341) at 1", "Insert SimpleName: Boolean(2346) into SimpleType: Boolean(2347) at 0", "Insert Assignment: =(2359) into ExpressionStatement(2360) at 0", "Insert TextElement:  the comments(2363) into TagElement: @return(2364) at 0", "Insert SimpleName: comments(2370) into ReturnStatement(2371) at 0", "Insert SimpleName: comments(2374) into TagElement: @param(2376) at 0", "Insert TextElement:  the comments to set(2375) into TagElement: @param(2376) at 1", "Insert SimpleName: String(2381) into SimpleType: String(2382) at 0", "Insert Assignment: =(2389) into ExpressionStatement(2390) at 0", "Insert MethodInvocation(2584) into ExpressionStatement(2585) at 0", "Insert MethodInvocation(2595) into ExpressionStatement(2596) at 0", "Insert Assignment: =(2688) into ExpressionStatement(2689) at 0", "Insert Assignment: =(2705) into ExpressionStatement(2706) at 0", "Insert InfixExpression: ==(2843) into IfStatement(2859) at 0", "Insert Block(2850) into IfStatement(2859) at 1", "Insert IfStatement(2858) into IfStatement(2859) at 2", "Insert InfixExpression: ==(2862) into IfStatement(2878) at 0", "Insert Block(2869) into IfStatement(2878) at 1", "Insert IfStatement(2877) into IfStatement(2878) at 2", "Insert FieldAccess(2352) into Assignment: =(2359) at 0", "Insert ConditionalExpression(2358) into Assignment: =(2359) at 1", "Insert FieldAccess(2387) into Assignment: =(2389) at 0", "Insert SimpleName: comments(2388) into Assignment: =(2389) at 1", "Insert MethodInvocation(2581) into MethodInvocation(2584) at 0", "Insert SimpleName: append(2582) into MethodInvocation(2584) at 1", "Insert StringLiteral: \"} \"(2583) into MethodInvocation(2584) at 2", "Insert MethodInvocation(2592) into MethodInvocation(2595) at 0", "Insert SimpleName: append(2593) into MethodInvocation(2595) at 1", "Insert StringLiteral: \"} \"(2594) into MethodInvocation(2595) at 2", "Insert SimpleName: result(2673) into Assignment: =(2688) at 0", "Insert InfixExpression: +(2687) into Assignment: =(2688) at 1", "Insert SimpleName: result(2690) into Assignment: =(2705) at 0", "Insert InfixExpression: +(2704) into Assignment: =(2705) at 1", "Insert SimpleName: isEnabled(2841) into InfixExpression: ==(2843) at 0", "Insert NullLiteral(2842) into InfixExpression: ==(2843) at 1", "Insert IfStatement(2849) into Block(2850) at 0", "Insert PrefixExpression: !(2855) into IfStatement(2858) at 0", "Insert ReturnStatement(2857) into IfStatement(2858) at 1", "Insert SimpleName: comments(2860) into InfixExpression: ==(2862) at 0", "Insert NullLiteral(2861) into InfixExpression: ==(2862) at 1", "Insert IfStatement(2868) into Block(2869) at 0", "Insert PrefixExpression: !(2874) into IfStatement(2877) at 0", "Insert ReturnStatement(2876) into IfStatement(2877) at 1", "Insert ThisExpression(2350) into FieldAccess(2352) at 0", "Insert SimpleName: isEnabled(2351) into FieldAccess(2352) at 1", "Insert InfixExpression: ==(2355) into ConditionalExpression(2358) at 0", "Insert QualifiedName: Boolean.TRUE(2356) into ConditionalExpression(2358) at 1", "Insert SimpleName: isEnabled(2357) into ConditionalExpression(2358) at 2", "Insert ThisExpression(2385) into FieldAccess(2387) at 0", "Insert SimpleName: comments(2386) into FieldAccess(2387) at 1", "Insert MethodInvocation(2578) into MethodInvocation(2581) at 0", "Insert SimpleName: append(2579) into MethodInvocation(2581) at 1", "Insert SimpleName: isEnabled(2580) into MethodInvocation(2581) at 2", "Insert MethodInvocation(2589) into MethodInvocation(2592) at 0", "Insert SimpleName: append(2590) into MethodInvocation(2592) at 1", "Insert SimpleName: comments(2591) into MethodInvocation(2592) at 2", "Insert InfixExpression: *(2676) into InfixExpression: +(2687) at 0", "Insert ParenthesizedExpression(2686) into InfixExpression: +(2687) at 1", "Insert InfixExpression: *(2693) into InfixExpression: +(2704) at 0", "Insert ParenthesizedExpression(2703) into InfixExpression: +(2704) at 1", "Insert InfixExpression: !=(2846) into IfStatement(2849) at 0", "Insert ReturnStatement(2848) into IfStatement(2849) at 1", "Insert MethodInvocation(2854) into PrefixExpression: !(2855) at 0", "Insert BooleanLiteral: false(2856) into ReturnStatement(2857) at 0", "Insert InfixExpression: !=(2865) into IfStatement(2868) at 0", "Insert ReturnStatement(2867) into IfStatement(2868) at 1", "Insert MethodInvocation(2873) into PrefixExpression: !(2874) at 0", "Insert BooleanLiteral: false(2875) into ReturnStatement(2876) at 0", "Insert SimpleName: isEnabled(2353) into InfixExpression: ==(2355) at 0", "Insert NullLiteral(2354) into InfixExpression: ==(2355) at 1", "Insert SimpleName: sb(2575) into MethodInvocation(2578) at 0", "Insert SimpleName: append(2576) into MethodInvocation(2578) at 1", "Insert StringLiteral: \"isEnabled={\"(2577) into MethodInvocation(2578) at 2", "Insert SimpleName: sb(2586) into MethodInvocation(2589) at 0", "Insert SimpleName: append(2587) into MethodInvocation(2589) at 1", "Insert StringLiteral: \"comments={\"(2588) into MethodInvocation(2589) at 2", "Insert SimpleName: prime(2674) into InfixExpression: *(2676) at 0", "Insert SimpleName: result(2675) into InfixExpression: *(2676) at 1", "Insert ConditionalExpression(2685) into ParenthesizedExpression(2686) at 0", "Insert SimpleName: prime(2691) into InfixExpression: *(2693) at 0", "Insert SimpleName: result(2692) into InfixExpression: *(2693) at 1", "Insert ConditionalExpression(2702) into ParenthesizedExpression(2703) at 0", "Insert QualifiedName: other.isEnabled(2844) into InfixExpression: !=(2846) at 0", "Insert NullLiteral(2845) into InfixExpression: !=(2846) at 1", "Insert BooleanLiteral: false(2847) into ReturnStatement(2848) at 0", "Insert SimpleName: isEnabled(2851) into MethodInvocation(2854) at 0", "Insert SimpleName: equals(2852) into MethodInvocation(2854) at 1", "Insert QualifiedName: other.isEnabled(2853) into MethodInvocation(2854) at 2", "Insert QualifiedName: other.comments(2863) into InfixExpression: !=(2865) at 0", "Insert NullLiteral(2864) into InfixExpression: !=(2865) at 1", "Insert BooleanLiteral: false(2866) into ReturnStatement(2867) at 0", "Insert SimpleName: comments(2870) into MethodInvocation(2873) at 0", "Insert SimpleName: equals(2871) into MethodInvocation(2873) at 1", "Insert QualifiedName: other.comments(2872) into MethodInvocation(2873) at 2", "Insert ParenthesizedExpression(2680) into ConditionalExpression(2685) at 0", "Insert NumberLiteral: 0(2681) into ConditionalExpression(2685) at 1", "Insert MethodInvocation(2684) into ConditionalExpression(2685) at 2", "Insert ParenthesizedExpression(2697) into ConditionalExpression(2702) at 0", "Insert NumberLiteral: 0(2698) into ConditionalExpression(2702) at 1", "Insert MethodInvocation(2701) into ConditionalExpression(2702) at 2", "Insert InfixExpression: ==(2679) into ParenthesizedExpression(2680) at 0", "Insert SimpleName: isEnabled(2682) into MethodInvocation(2684) at 0", "Insert SimpleName: hashCode(2683) into MethodInvocation(2684) at 1", "Insert InfixExpression: ==(2696) into ParenthesizedExpression(2697) at 0", "Insert SimpleName: comments(2699) into MethodInvocation(2701) at 0", "Insert SimpleName: hashCode(2700) into MethodInvocation(2701) at 1", "Insert SimpleName: isEnabled(2677) into InfixExpression: ==(2679) at 0", "Insert NullLiteral(2678) into InfixExpression: ==(2679) at 1", "Insert SimpleName: comments(2694) into InfixExpression: ==(2696) at 0", "Insert NullLiteral(2695) into InfixExpression: ==(2696) at 1"]}}, {"RangerAbstractPolicyItemEvaluator_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS ReturnStatement to Block at 0", "INS InfixExpression: == to ConditionalExpression at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: getComments to MethodDeclaration at 3", "INS NullLiteral to ConditionalExpression at 1", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS SimpleName: policyItem to MethodInvocation at 0", "INS SimpleName: getComments to MethodInvocation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ConditionalExpression to ReturnStatement at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: policyItem to InfixExpression: == at 0", "INS Modifier: public to MethodDeclaration at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: String to SimpleType: String at 0"]}]}}, {"RangerAbstractPolicyItemEvaluator_diff": {"operations": ["Insert MethodDeclaration(259) into TypeDeclaration: class(487) at 22", "Insert MarkerAnnotation(244) into MethodDeclaration(259) at 0", "Insert Modifier: public(245) into MethodDeclaration(259) at 1", "Insert SimpleType: String(247) into MethodDeclaration(259) at 2", "Insert SimpleName: getComments(248) into MethodDeclaration(259) at 3", "Insert Block(258) into MethodDeclaration(259) at 4", "Insert SimpleName: Override(243) into MarkerAnnotation(244) at 0", "Insert SimpleName: String(246) into SimpleType: String(247) at 0", "Insert ReturnStatement(257) into Block(258) at 0", "Insert ConditionalExpression(256) into ReturnStatement(257) at 0", "Insert InfixExpression: ==(251) into ConditionalExpression(256) at 0", "Insert NullLiteral(252) into ConditionalExpression(256) at 1", "Insert MethodInvocation(255) into ConditionalExpression(256) at 2", "Insert SimpleName: policyItem(249) into InfixExpression: ==(251) at 0", "Insert NullLiteral(250) into InfixExpression: ==(251) at 1", "Insert SimpleName: policyItem(253) into MethodInvocation(255) at 0", "Insert SimpleName: getComments(254) into MethodInvocation(255) at 1"]}}, {"RangerDefaultPolicyEvaluator_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: matchedPolicyItem to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: result to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getComments to MethodInvocation at 1", "INS SimpleName: setReason to MethodInvocation at 1", "INS ExpressionStatement to Block at 2"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: matchedPolicyItem to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: setReason to MethodInvocation at 1", "INS SimpleName: getComments to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: result to MethodInvocation at 0"]}]}}, {"RangerDefaultPolicyEvaluator_diff": {"operations": ["Insert ExpressionStatement(549) into Block(550) at 2", "Insert MethodInvocation(548) into ExpressionStatement(549) at 0", "Insert ExpressionStatement(527) into Block(528) at 2", "Insert SimpleName: result(543) into MethodInvocation(548) at 0", "Insert SimpleName: setReason(544) into MethodInvocation(548) at 1", "Insert MethodInvocation(547) into MethodInvocation(548) at 2", "Insert MethodInvocation(526) into ExpressionStatement(527) at 0", "Insert SimpleName: matchedPolicyItem(545) into MethodInvocation(547) at 0", "Insert SimpleName: getComments(546) into MethodInvocation(547) at 1", "Insert SimpleName: result(521) into MethodInvocation(526) at 0", "Insert SimpleName: setReason(522) into MethodInvocation(526) at 1", "Insert MethodInvocation(525) into MethodInvocation(526) at 2", "Insert SimpleName: matchedPolicyItem(523) into MethodInvocation(525) at 0", "Insert SimpleName: getComments(524) into MethodInvocation(525) at 1"]}}, {"RangerPolicyItemEvaluator_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 10", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: getComments to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: interface at 10", "INS SimpleType: String to MethodDeclaration at 0"]}]}}, {"RangerPolicyItemEvaluator_diff": {"operations": ["Insert MethodDeclaration(64) into TypeDeclaration: interface(110) at 10", "Insert SimpleType: String(62) into MethodDeclaration(64) at 0", "Insert SimpleName: getComments(63) into MethodDeclaration(64) at 1", "Insert SimpleName: String(61) into SimpleType: String(62) at 0"]}}], "commit_stats": [{"total_files": 13, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}