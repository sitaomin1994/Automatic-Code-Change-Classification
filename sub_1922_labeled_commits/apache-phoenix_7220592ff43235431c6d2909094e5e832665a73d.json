{"application": "apache-phoenix", "csha": "7220592ff43235431c6d2909094e5e832665a73d", "files": [{"AlterTableIT_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 20", "operations": ["INS InfixExpression: + to Assignment: = at 1", "INS SimpleName: ddl to Assignment: = at 0", "INS SimpleName: viewFullName to InfixExpression: + at 1", "INS StringLiteral: \" SET THROW_INDEX_WRITE_FAILURE = FALSE\" to InfixExpression: + at 2", "INS ExpressionStatement to Block at 20", "INS Assignment: = to ExpressionStatement at 0", "INS StringLiteral: \"ALTER VIEW \" to InfixExpression: + at 0"]}, {"root": "INS TryStatement to Block at 21", "operations": ["INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS Block to CatchClause at 1", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS QualifiedName: SQLExceptionCode.VIEW_WITH_PROPERTIES to MethodInvocation at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: getErrorCode to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS TryStatement to Block at 21", "INS SimpleName: fail to MethodInvocation at 0", "INS SimpleName: conn1 to MethodInvocation at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: getErrorCode to MethodInvocation at 1", "INS SimpleName: ddl to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: createStatement to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleType: SQLException to SingleVariableDeclaration at 0", "INS SimpleName: execute to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: e to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS Block to TryStatement at 0"]}]}}, {"AlterTableIT_diff": {"operations": ["Insert ExpressionStatement(6808) into Block(6836) at 20", "Insert TryStatement(6835) into Block(6836) at 21", "Insert Assignment: =(6807) into ExpressionStatement(6808) at 0", "Insert Block(6819) into TryStatement(6835) at 0", "Insert CatchClause(6834) into TryStatement(6835) at 1", "Insert SimpleName: ddl(6802) into Assignment: =(6807) at 0", "Insert InfixExpression: +(6806) into Assignment: =(6807) at 1", "Insert ExpressionStatement(6815) into Block(6819) at 0", "Insert ExpressionStatement(6818) into Block(6819) at 1", "Insert SingleVariableDeclaration(6823) into CatchClause(6834) at 0", "Insert Block(6833) into CatchClause(6834) at 1", "Insert StringLiteral: \"ALTER VIEW \"(6803) into InfixExpression: +(6806) at 0", "Insert SimpleName: viewFullName(6804) into InfixExpression: +(6806) at 1", "Insert StringLiteral: \" SET THROW_INDEX_WRITE_FAILURE = FALSE\"(6805) into InfixExpression: +(6806) at 2", "Insert MethodInvocation(6814) into ExpressionStatement(6815) at 0", "Insert MethodInvocation(6817) into ExpressionStatement(6818) at 0", "Insert SimpleType: SQLException(6821) into SingleVariableDeclaration(6823) at 0", "Insert SimpleName: e(6822) into SingleVariableDeclaration(6823) at 1", "Insert ExpressionStatement(6832) into Block(6833) at 0", "Insert MethodInvocation(6811) into MethodInvocation(6814) at 0", "Insert SimpleName: execute(6812) into MethodInvocation(6814) at 1", "Insert SimpleName: ddl(6813) into MethodInvocation(6814) at 2", "Insert SimpleName: fail(6816) into MethodInvocation(6817) at 0", "Insert SimpleName: SQLException(6820) into SimpleType: SQLException(6821) at 0", "Insert MethodInvocation(6831) into ExpressionStatement(6832) at 0", "Insert SimpleName: conn1(6809) into MethodInvocation(6811) at 0", "Insert SimpleName: createStatement(6810) into MethodInvocation(6811) at 1", "Insert SimpleName: assertEquals(6824) into MethodInvocation(6831) at 0", "Insert MethodInvocation(6827) into MethodInvocation(6831) at 1", "Insert MethodInvocation(6830) into MethodInvocation(6831) at 2", "Insert QualifiedName: SQLExceptionCode.VIEW_WITH_PROPERTIES(6825) into MethodInvocation(6827) at 0", "Insert SimpleName: getErrorCode(6826) into MethodInvocation(6827) at 1", "Insert SimpleName: e(6828) into MethodInvocation(6830) at 0", "Insert SimpleName: getErrorCode(6829) into MethodInvocation(6830) at 1"]}}, {"CreateTableIT_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 31", "operations": ["INS ImportDeclaration to CompilationUnit at 31", "INS QualifiedName: org.apache.phoenix.util.PhoenixRuntime to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 32", "operations": ["INS QualifiedName: org.apache.phoenix.util.PropertiesUtil to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 32"]}, {"root": "INS ImportDeclaration to CompilationUnit at 33", "operations": ["INS ImportDeclaration to CompilationUnit at 33", "INS QualifiedName: org.apache.phoenix.util.QueryUtil to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 34", "operations": ["INS ImportDeclaration to CompilationUnit at 34", "INS QualifiedName: org.apache.phoenix.util.SchemaUtil to ImportDeclaration at 0"]}, {"root": "UPDATE from org.apache.phoenix.util to org.apache.phoenix.util.TestUtil", "operations": ["UPD QualifiedName: org.apache.phoenix.util from org.apache.phoenix.util to org.apache.phoenix.util.TestUtil"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS VariableDeclarationStatement to Block at 8", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: dataTableFullName to InfixExpression: + at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: Test to MarkerAnnotation at 0", "INS SimpleName: close to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: createStatement to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS InfixExpression: + to Assignment: = at 1", "INS SimpleName: DriverManager to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS StringLiteral: \"LAST_USED DATE,\\n\" to InfixExpression: + at 7", "INS SimpleName: getUrl to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getErrorCode to MethodInvocation at 1", "INS SimpleName: ddl to MethodInvocation at 2", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS SimpleName: ts to InfixExpression: + at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getUrl to MethodInvocation at 0", "INS SimpleName: Connection to SimpleType: Connection at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleType: Exception to MethodDeclaration at 4", "INS SimpleName: dataTableFullName to InfixExpression: + at 3", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 5", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: execute to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: conn1 to MethodInvocation at 0", "INS StringLiteral: \"ID1 VARCHAR(15) NOT NULL,\\n\" to InfixExpression: + at 3", "INS ExpressionStatement to Block at 7", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS SimpleName: nextTimestamp to MethodInvocation at 0", "INS ExpressionStatement to Block at 13", "INS VariableDeclarationStatement to Block at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: ts to VariableDeclarationFragment at 0", "INS SimpleType: Connection to VariableDeclarationStatement at 0", "INS SimpleName: ddl to VariableDeclarationFragment at 0", "INS SimpleName: props to MethodInvocation at 0", "INS SimpleType: Connection to VariableDeclarationStatement at 0", "INS SimpleName: setProperty to MethodInvocation at 1", "INS SimpleName: conn1 to VariableDeclarationFragment at 0", "INS SimpleName: generateUniqueName to MethodInvocation at 0", "INS SimpleName: getConnection to MethodInvocation at 1", "INS StringLiteral: \"CREATE TABLE \" to InfixExpression: + at 0", "INS QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB to MethodInvocation at 2", "INS Block to CatchClause at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: testSetHTableDescriptorPropertyOnView to MethodDeclaration at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Properties to ClassInstanceCreation at 0", "INS SimpleName: execute to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: props to MethodInvocation at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Properties to VariableDeclarationStatement at 0", "INS SimpleType: String to VariableDeclarationStatement at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: fail to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: createStatement to MethodInvocation at 1", "INS SimpleName: getConnection to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 3", "INS NumberLiteral: 10 to InfixExpression: + at 1", "INS SimpleName: generateUniqueName to MethodInvocation at 0", "INS TryStatement to Block at 12", "INS ExpressionStatement to Block at 6", "INS MethodInvocation to MethodInvocation at 3", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: ddl to Assignment: = at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: Long to MethodInvocation at 0", "INS SimpleName: Properties to SimpleType: Properties at 0", "INS StringLiteral: \"CONSTRAINT PK PRIMARY KEY (ID1, ID2)) \" to InfixExpression: + at 8", "INS SimpleType: SQLException to SingleVariableDeclaration at 0", "INS Block to TryStatement at 0", "INS StringLiteral: \" AS SELECT * FROM \" to InfixExpression: + at 2", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: setProperty to MethodInvocation at 1", "INS SimpleName: Connection to SimpleType: Connection at 0", "INS SimpleName: conn2 to VariableDeclarationFragment at 0", "INS StringLiteral: \" WHERE CREATION_TIME = 1 THROW_INDEX_WRITE_FAILURE = FALSE\" to InfixExpression: + at 4", "INS QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB to MethodInvocation at 2", "INS SimpleName: viewFullName to InfixExpression: + at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: ts to MethodInvocation at 2", "INS SimpleName: Properties to SimpleType: Properties at 0", "INS CatchClause to TryStatement at 1", "INS ExpressionStatement to Block at 11", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: dataTableFullName to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: conn2 to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS StringLiteral: \" (\\n\" to InfixExpression: + at 2", "INS SimpleName: props to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 10", "INS MethodInvocation to MethodInvocation at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: DriverManager to MethodInvocation at 0", "INS ExpressionStatement to Block at 9", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: close to MethodInvocation at 1", "INS SimpleName: Long to MethodInvocation at 0", "INS SimpleName: conn2 to MethodInvocation at 0", "INS StringLiteral: \"CREATED_DATE DATE,\\n\" to InfixExpression: + at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS StringLiteral: \"CREATION_TIME BIGINT,\\n\" to InfixExpression: + at 6", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS SimpleName: props to MethodInvocation at 0", "INS SimpleType: String to VariableDeclarationStatement at 1", "INS QualifiedName: SQLExceptionCode.VIEW_WITH_PROPERTIES to MethodInvocation at 0", "INS SimpleName: viewFullName to VariableDeclarationFragment at 0", "INS SimpleName: e to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getErrorCode to MethodInvocation at 1", "INS StringLiteral: \"CREATE VIEW \" to InfixExpression: + at 0", "INS SimpleName: props to MethodInvocation at 3", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: conn1 to MethodInvocation at 0", "INS SimpleName: ddl to MethodInvocation at 2", "INS StringLiteral: \"ID2 VARCHAR(15) NOT NULL,\\n\" to InfixExpression: + at 4"]}]}}, {"CreateTableIT_diff": {"operations": ["Insert ImportDeclaration(63) into CompilationUnit(3561) at 31", "Insert ImportDeclaration(65) into CompilationUnit(3561) at 32", "Insert ImportDeclaration(67) into CompilationUnit(3561) at 33", "Insert ImportDeclaration(69) into CompilationUnit(3561) at 34", "Insert QualifiedName: org.apache.phoenix.util.PhoenixRuntime(62) into ImportDeclaration(63) at 0", "Insert QualifiedName: org.apache.phoenix.util.PropertiesUtil(64) into ImportDeclaration(65) at 0", "Insert QualifiedName: org.apache.phoenix.util.QueryUtil(66) into ImportDeclaration(67) at 0", "Insert QualifiedName: org.apache.phoenix.util.SchemaUtil(68) into ImportDeclaration(69) at 0", "Update QualifiedName: org.apache.phoenix.util(62) to org.apache.phoenix.util.TestUtil", "Insert MethodDeclaration(3559) into TypeDeclaration: class(3560) at 24", "Insert MarkerAnnotation(3414) into MethodDeclaration(3559) at 0", "Insert Modifier: public(3415) into MethodDeclaration(3559) at 1", "Insert PrimitiveType: void(3416) into MethodDeclaration(3559) at 2", "Insert SimpleName: testSetHTableDescriptorPropertyOnView(3417) into MethodDeclaration(3559) at 3", "Insert SimpleType: Exception(3419) into MethodDeclaration(3559) at 4", "Insert Block(3558) into MethodDeclaration(3559) at 5", "Insert SimpleName: Test(3413) into MarkerAnnotation(3414) at 0", "Insert SimpleName: Exception(3418) into SimpleType: Exception(3419) at 0", "Insert VariableDeclarationStatement(3425) into Block(3558) at 0", "Insert VariableDeclarationStatement(3433) into Block(3558) at 1", "Insert ExpressionStatement(3442) into Block(3558) at 2", "Insert VariableDeclarationStatement(3450) into Block(3558) at 3", "Insert VariableDeclarationStatement(3465) into Block(3558) at 4", "Insert VariableDeclarationStatement(3476) into Block(3558) at 5", "Insert ExpressionStatement(3483) into Block(3558) at 6", "Insert ExpressionStatement(3487) into Block(3558) at 7", "Insert VariableDeclarationStatement(3495) into Block(3558) at 8", "Insert ExpressionStatement(3506) into Block(3558) at 9", "Insert VariableDeclarationStatement(3517) into Block(3558) at 10", "Insert ExpressionStatement(3526) into Block(3558) at 11", "Insert TryStatement(3553) into Block(3558) at 12", "Insert ExpressionStatement(3557) into Block(3558) at 13", "Insert PrimitiveType: long(3420) into VariableDeclarationStatement(3425) at 0", "Insert VariableDeclarationFragment(3424) into VariableDeclarationStatement(3425) at 1", "Insert SimpleType: Properties(3427) into VariableDeclarationStatement(3433) at 0", "Insert VariableDeclarationFragment(3432) into VariableDeclarationStatement(3433) at 1", "Insert MethodInvocation(3441) into ExpressionStatement(3442) at 0", "Insert Modifier: final(3443) into VariableDeclarationStatement(3450) at 0", "Insert SimpleType: String(3445) into VariableDeclarationStatement(3450) at 1", "Insert VariableDeclarationFragment(3449) into VariableDeclarationStatement(3450) at 2", "Insert SimpleType: String(3452) into VariableDeclarationStatement(3465) at 0", "Insert VariableDeclarationFragment(3464) into VariableDeclarationStatement(3465) at 1", "Insert SimpleType: Connection(3467) into VariableDeclarationStatement(3476) at 0", "Insert VariableDeclarationFragment(3475) into VariableDeclarationStatement(3476) at 1", "Insert MethodInvocation(3482) into ExpressionStatement(3483) at 0", "Insert MethodInvocation(3486) into ExpressionStatement(3487) at 0", "Insert Modifier: final(3488) into VariableDeclarationStatement(3495) at 0", "Insert SimpleType: String(3490) into VariableDeclarationStatement(3495) at 1", "Insert VariableDeclarationFragment(3494) into VariableDeclarationStatement(3495) at 2", "Insert MethodInvocation(3505) into ExpressionStatement(3506) at 0", "Insert SimpleType: Connection(3508) into VariableDeclarationStatement(3517) at 0", "Insert VariableDeclarationFragment(3516) into VariableDeclarationStatement(3517) at 1", "Insert Assignment: =(3525) into ExpressionStatement(3526) at 0", "Insert Block(3537) into TryStatement(3553) at 0", "Insert CatchClause(3552) into TryStatement(3553) at 1", "Insert MethodInvocation(3556) into ExpressionStatement(3557) at 0", "Insert SimpleName: ts(3421) into VariableDeclarationFragment(3424) at 0", "Insert MethodInvocation(3423) into VariableDeclarationFragment(3424) at 1", "Insert SimpleName: Properties(3426) into SimpleType: Properties(3427) at 0", "Insert SimpleName: props(3428) into VariableDeclarationFragment(3432) at 0", "Insert ClassInstanceCreation(3431) into VariableDeclarationFragment(3432) at 1", "Insert SimpleName: props(3434) into MethodInvocation(3441) at 0", "Insert SimpleName: setProperty(3435) into MethodInvocation(3441) at 1", "Insert QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB(3436) into MethodInvocation(3441) at 2", "Insert MethodInvocation(3440) into MethodInvocation(3441) at 3", "Insert SimpleName: String(3444) into SimpleType: String(3445) at 0", "Insert SimpleName: dataTableFullName(3446) into VariableDeclarationFragment(3449) at 0", "Insert MethodInvocation(3448) into VariableDeclarationFragment(3449) at 1", "Insert SimpleName: String(3451) into SimpleType: String(3452) at 0", "Insert SimpleName: ddl(3453) into VariableDeclarationFragment(3464) at 0", "Insert InfixExpression: +(3463) into VariableDeclarationFragment(3464) at 1", "Insert SimpleName: Connection(3466) into SimpleType: Connection(3467) at 0", "Insert SimpleName: conn1(3468) into VariableDeclarationFragment(3475) at 0", "Insert MethodInvocation(3474) into VariableDeclarationFragment(3475) at 1", "Insert MethodInvocation(3479) into MethodInvocation(3482) at 0", "Insert SimpleName: execute(3480) into MethodInvocation(3482) at 1", "Insert SimpleName: ddl(3481) into MethodInvocation(3482) at 2", "Insert SimpleName: conn1(3484) into MethodInvocation(3486) at 0", "Insert SimpleName: close(3485) into MethodInvocation(3486) at 1", "Insert SimpleName: String(3489) into SimpleType: String(3490) at 0", "Insert SimpleName: viewFullName(3491) into VariableDeclarationFragment(3494) at 0", "Insert MethodInvocation(3493) into VariableDeclarationFragment(3494) at 1", "Insert SimpleName: props(3496) into MethodInvocation(3505) at 0", "Insert SimpleName: setProperty(3497) into MethodInvocation(3505) at 1", "Insert QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB(3498) into MethodInvocation(3505) at 2", "Insert MethodInvocation(3504) into MethodInvocation(3505) at 3", "Insert SimpleName: Connection(3507) into SimpleType: Connection(3508) at 0", "Insert SimpleName: conn2(3509) into VariableDeclarationFragment(3516) at 0", "Insert MethodInvocation(3515) into VariableDeclarationFragment(3516) at 1", "Insert SimpleName: ddl(3518) into Assignment: =(3525) at 0", "Insert InfixExpression: +(3524) into Assignment: =(3525) at 1", "Insert ExpressionStatement(3533) into Block(3537) at 0", "Insert ExpressionStatement(3536) into Block(3537) at 1", "Insert SingleVariableDeclaration(3541) into CatchClause(3552) at 0", "Insert Block(3551) into CatchClause(3552) at 1", "Insert SimpleName: conn2(3554) into MethodInvocation(3556) at 0", "Insert SimpleName: close(3555) into MethodInvocation(3556) at 1", "Insert SimpleName: nextTimestamp(3422) into MethodInvocation(3423) at 0", "Insert SimpleType: Properties(3430) into ClassInstanceCreation(3431) at 0", "Insert SimpleName: Long(3437) into MethodInvocation(3440) at 0", "Insert SimpleName: toString(3438) into MethodInvocation(3440) at 1", "Insert SimpleName: ts(3439) into MethodInvocation(3440) at 2", "Insert SimpleName: generateUniqueName(3447) into MethodInvocation(3448) at 0", "Insert StringLiteral: \"CREATE TABLE \"(3454) into InfixExpression: +(3463) at 0", "Insert SimpleName: dataTableFullName(3455) into InfixExpression: +(3463) at 1", "Insert StringLiteral: \" (\\n\"(3456) into InfixExpression: +(3463) at 2", "Insert StringLiteral: \"ID1 VARCHAR(15) NOT NULL,\\n\"(3457) into InfixExpression: +(3463) at 3", "Insert StringLiteral: \"ID2 VARCHAR(15) NOT NULL,\\n\"(3458) into InfixExpression: +(3463) at 4", "Insert StringLiteral: \"CREATED_DATE DATE,\\n\"(3459) into InfixExpression: +(3463) at 5", "Insert StringLiteral: \"CREATION_TIME BIGINT,\\n\"(3460) into InfixExpression: +(3463) at 6", "Insert StringLiteral: \"LAST_USED DATE,\\n\"(3461) into InfixExpression: +(3463) at 7", "Insert StringLiteral: \"CONSTRAINT PK PRIMARY KEY (ID1, ID2)) \"(3462) into InfixExpression: +(3463) at 8", "Insert SimpleName: DriverManager(3469) into MethodInvocation(3474) at 0", "Insert SimpleName: getConnection(3470) into MethodInvocation(3474) at 1", "Insert MethodInvocation(3472) into MethodInvocation(3474) at 2", "Insert SimpleName: props(3473) into MethodInvocation(3474) at 3", "Insert SimpleName: conn1(3477) into MethodInvocation(3479) at 0", "Insert SimpleName: createStatement(3478) into MethodInvocation(3479) at 1", "Insert SimpleName: generateUniqueName(3492) into MethodInvocation(3493) at 0", "Insert SimpleName: Long(3499) into MethodInvocation(3504) at 0", "Insert SimpleName: toString(3500) into MethodInvocation(3504) at 1", "Insert InfixExpression: +(3503) into MethodInvocation(3504) at 2", "Insert SimpleName: DriverManager(3510) into MethodInvocation(3515) at 0", "Insert SimpleName: getConnection(3511) into MethodInvocation(3515) at 1", "Insert MethodInvocation(3513) into MethodInvocation(3515) at 2", "Insert SimpleName: props(3514) into MethodInvocation(3515) at 3", "Insert StringLiteral: \"CREATE VIEW \"(3519) into InfixExpression: +(3524) at 0", "Insert SimpleName: viewFullName(3520) into InfixExpression: +(3524) at 1", "Insert StringLiteral: \" AS SELECT * FROM \"(3521) into InfixExpression: +(3524) at 2", "Insert SimpleName: dataTableFullName(3522) into InfixExpression: +(3524) at 3", "Insert StringLiteral: \" WHERE CREATION_TIME = 1 THROW_INDEX_WRITE_FAILURE = FALSE\"(3523) into InfixExpression: +(3524) at 4", "Insert MethodInvocation(3532) into ExpressionStatement(3533) at 0", "Insert MethodInvocation(3535) into ExpressionStatement(3536) at 0", "Insert SimpleType: SQLException(3539) into SingleVariableDeclaration(3541) at 0", "Insert SimpleName: e(3540) into SingleVariableDeclaration(3541) at 1", "Insert ExpressionStatement(3550) into Block(3551) at 0", "Insert SimpleName: Properties(3429) into SimpleType: Properties(3430) at 0", "Insert SimpleName: getUrl(3471) into MethodInvocation(3472) at 0", "Insert SimpleName: ts(3501) into InfixExpression: +(3503) at 0", "Insert NumberLiteral: 10(3502) into InfixExpression: +(3503) at 1", "Insert SimpleName: getUrl(3512) into MethodInvocation(3513) at 0", "Insert MethodInvocation(3529) into MethodInvocation(3532) at 0", "Insert SimpleName: execute(3530) into MethodInvocation(3532) at 1", "Insert SimpleName: ddl(3531) into MethodInvocation(3532) at 2", "Insert SimpleName: fail(3534) into MethodInvocation(3535) at 0", "Insert SimpleName: SQLException(3538) into SimpleType: SQLException(3539) at 0", "Insert MethodInvocation(3549) into ExpressionStatement(3550) at 0", "Insert SimpleName: conn2(3527) into MethodInvocation(3529) at 0", "Insert SimpleName: createStatement(3528) into MethodInvocation(3529) at 1", "Insert SimpleName: assertEquals(3542) into MethodInvocation(3549) at 0", "Insert MethodInvocation(3545) into MethodInvocation(3549) at 1", "Insert MethodInvocation(3548) into MethodInvocation(3549) at 2", "Insert QualifiedName: SQLExceptionCode.VIEW_WITH_PROPERTIES(3543) into MethodInvocation(3545) at 0", "Insert SimpleName: getErrorCode(3544) into MethodInvocation(3545) at 1", "Insert SimpleName: e(3546) into MethodInvocation(3548) at 0", "Insert SimpleName: getErrorCode(3547) into MethodInvocation(3548) at 1"]}}, {"PhoenixIndexFailurePolicy_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS Modifier: public to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: final to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS StringLiteral: \"THROW_INDEX_WRITE_FAILURE\" to VariableDeclarationFragment at 1", "INS SimpleType: String to FieldDeclaration at 3", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: THROW_INDEX_WRITE_FAILURE to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 13", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 13", "INS PrimitiveType: boolean to FieldDeclaration at 1", "INS SimpleName: throwIndexWriteFailure to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "INS ExpressionStatement to Block at 9", "operations": ["INS ExpressionStatement to Block at 9", "INS SimpleName: value to Assignment: = at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS SimpleName: htd to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: THROW_INDEX_WRITE_FAILURE to MethodInvocation at 2"]}, {"root": "INS IfStatement to Block at 10", "operations": ["INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: parseBoolean to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS QualifiedName: QueryServicesOptions.DEFAULT_INDEX_FAILURE_THROW_EXCEPTION to MethodInvocation at 3", "INS SimpleName: value to MethodInvocation at 2", "INS IfStatement to Block at 10", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: Boolean to MethodInvocation at 0", "INS SimpleName: getBoolean to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: throwIndexWriteFailure to Assignment: = at 0", "INS SimpleName: value to InfixExpression: == at 0", "INS Block to IfStatement at 2", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: env to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: throwIndexWriteFailure to Assignment: = at 0", "INS QualifiedName: QueryServices.INDEX_FAILURE_THROW_EXCEPTION_ATTRIB to MethodInvocation at 2", "INS SimpleName: getConfiguration to MethodInvocation at 1"]}, {"root": "INS Block to TryStatement at 2", "operations": ["INS SimpleType: IOException to VariableDeclarationStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS IfStatement to Block at 0", "INS VariableDeclarationStatement to Block at 0", "INS Block to TryStatement at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: ioException to VariableDeclarationFragment at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV PrefixExpression: ! to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1"]}, {"root": "INS SimpleName: throwIndexWriteFailure to IfStatement at 0", "operations": ["INS SimpleName: throwIndexWriteFailure to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 2", "operations": ["INS SimpleName: warn to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS StringLiteral: \"Swallowing index write failure\" to MethodInvocation at 2", "INS SimpleName: ioException to MethodInvocation at 3"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: ioException to ThrowStatement at 0", "operations": ["INS SimpleName: ioException to ThrowStatement at 0"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"PhoenixIndexFailurePolicy_diff": {"operations": ["Insert FieldDeclaration(113) into TypeDeclaration: class(1130) at 5", "Insert FieldDeclaration(166) into TypeDeclaration: class(1130) at 13", "Insert Modifier: public(105) into FieldDeclaration(113) at 0", "Insert Modifier: static(106) into FieldDeclaration(113) at 1", "Insert Modifier: final(107) into FieldDeclaration(113) at 2", "Insert SimpleType: String(109) into FieldDeclaration(113) at 3", "Insert VariableDeclarationFragment(112) into FieldDeclaration(113) at 4", "Insert Modifier: private(162) into FieldDeclaration(166) at 0", "Insert PrimitiveType: boolean(163) into FieldDeclaration(166) at 1", "Insert VariableDeclarationFragment(165) into FieldDeclaration(166) at 2", "Insert SimpleName: String(108) into SimpleType: String(109) at 0", "Insert SimpleName: THROW_INDEX_WRITE_FAILURE(110) into VariableDeclarationFragment(112) at 0", "Insert StringLiteral: \"THROW_INDEX_WRITE_FAILURE\"(111) into VariableDeclarationFragment(112) at 1", "Insert SimpleName: throwIndexWriteFailure(164) into VariableDeclarationFragment(165) at 0", "Insert ExpressionStatement(311) into Block(335) at 9", "Insert IfStatement(334) into Block(335) at 10", "Insert Assignment: =(310) into ExpressionStatement(311) at 0", "Insert InfixExpression: ==(314) into IfStatement(334) at 0", "Insert Block(325) into IfStatement(334) at 1", "Insert Block(333) into IfStatement(334) at 2", "Insert Block(445) into TryStatement(446) at 2", "Insert SimpleName: value(305) into Assignment: =(310) at 0", "Insert MethodInvocation(309) into Assignment: =(310) at 1", "Insert SimpleName: value(312) into InfixExpression: ==(314) at 0", "Insert NullLiteral(313) into InfixExpression: ==(314) at 1", "Insert ExpressionStatement(324) into Block(325) at 0", "Insert ExpressionStatement(332) into Block(333) at 0", "Insert IfStatement(444) into Block(445) at 0", "Insert SimpleName: htd(306) into MethodInvocation(309) at 0", "Insert SimpleName: getValue(307) into MethodInvocation(309) at 1", "Insert SimpleName: THROW_INDEX_WRITE_FAILURE(308) into MethodInvocation(309) at 2", "Insert Assignment: =(323) into ExpressionStatement(324) at 0", "Insert Assignment: =(331) into ExpressionStatement(332) at 0", "Move PrefixExpression: !(371) into IfStatement(444) at 0", "Insert Block(443) into IfStatement(444) at 1", "Insert SimpleName: throwIndexWriteFailure(315) into Assignment: =(323) at 0", "Insert MethodInvocation(322) into Assignment: =(323) at 1", "Insert SimpleName: throwIndexWriteFailure(326) into Assignment: =(331) at 0", "Insert MethodInvocation(330) into Assignment: =(331) at 1", "Insert VariableDeclarationStatement(430) into Block(443) at 0", "Move IfStatement(384) into Block(443) at 1", "Insert MethodInvocation(318) into MethodInvocation(322) at 0", "Insert SimpleName: getBoolean(319) into MethodInvocation(322) at 1", "Insert QualifiedName: QueryServices.INDEX_FAILURE_THROW_EXCEPTION_ATTRIB(320) into MethodInvocation(322) at 2", "Insert QualifiedName: QueryServicesOptions.DEFAULT_INDEX_FAILURE_THROW_EXCEPTION(321) into MethodInvocation(322) at 3", "Insert SimpleName: Boolean(327) into MethodInvocation(330) at 0", "Insert SimpleName: parseBoolean(328) into MethodInvocation(330) at 1", "Insert SimpleName: value(329) into MethodInvocation(330) at 2", "Insert SimpleType: IOException(417) into VariableDeclarationStatement(430) at 0", "Insert VariableDeclarationFragment(429) into VariableDeclarationStatement(430) at 1", "Insert SimpleName: throwIndexWriteFailure(431) into IfStatement(442) at 0", "Insert Block(441) into IfStatement(442) at 2", "Insert SimpleName: env(316) into MethodInvocation(318) at 0", "Insert SimpleName: getConfiguration(317) into MethodInvocation(318) at 1", "Insert SimpleName: IOException(416) into SimpleType: IOException(417) at 0", "Insert SimpleName: ioException(418) into VariableDeclarationFragment(429) at 0", "Move MethodInvocation(381) into VariableDeclarationFragment(429) at 1", "Insert ExpressionStatement(440) into Block(441) at 0", "Insert SimpleName: ioException(432) into ThrowStatement(433) at 0", "Insert MethodInvocation(439) into ExpressionStatement(440) at 0", "Insert SimpleName: LOG(435) into MethodInvocation(439) at 0", "Insert SimpleName: warn(436) into MethodInvocation(439) at 1", "Insert StringLiteral: \"Swallowing index write failure\"(437) into MethodInvocation(439) at 2", "Insert SimpleName: ioException(438) into MethodInvocation(439) at 3", "Delete Block(385)"]}}, {"QueryServices_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: interface at 76", "operations": ["INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: public to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: interface at 76", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: INDEX_FAILURE_THROW_EXCEPTION_ATTRIB to VariableDeclarationFragment at 0", "INS SimpleType: String to FieldDeclaration at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS StringLiteral: \"phoenix.index.failure.throw.exception\" to VariableDeclarationFragment at 1"]}]}}, {"QueryServices_diff": {"operations": ["Insert FieldDeclaration(703) into TypeDeclaration: interface(1522) at 76", "Insert Modifier: public(695) into FieldDeclaration(703) at 0", "Insert Modifier: static(696) into FieldDeclaration(703) at 1", "Insert Modifier: final(697) into FieldDeclaration(703) at 2", "Insert SimpleType: String(699) into FieldDeclaration(703) at 3", "Insert VariableDeclarationFragment(702) into FieldDeclaration(703) at 4", "Insert SimpleName: String(698) into SimpleType: String(699) at 0", "Insert SimpleName: INDEX_FAILURE_THROW_EXCEPTION_ATTRIB(700) into VariableDeclarationFragment(702) at 0", "Insert StringLiteral: \"phoenix.index.failure.throw.exception\"(701) into VariableDeclarationFragment(702) at 1"]}}, {"QueryServicesOptions_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 51", "operations": ["INS BooleanLiteral: true to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: DEFAULT_INDEX_FAILURE_THROW_EXCEPTION to VariableDeclarationFragment at 0", "INS Modifier: public to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 51", "INS PrimitiveType: boolean to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1"]}]}}, {"QueryServicesOptions_diff": {"operations": ["Insert FieldDeclaration(619) into TypeDeclaration: class(2960) at 51", "Insert Modifier: public(612) into FieldDeclaration(619) at 0", "Insert Modifier: static(613) into FieldDeclaration(619) at 1", "Insert Modifier: final(614) into FieldDeclaration(619) at 2", "Insert PrimitiveType: boolean(615) into FieldDeclaration(619) at 3", "Insert VariableDeclarationFragment(618) into FieldDeclaration(619) at 4", "Insert SimpleName: DEFAULT_INDEX_FAILURE_THROW_EXCEPTION(616) into VariableDeclarationFragment(618) at 0", "Insert BooleanLiteral: true(617) into VariableDeclarationFragment(618) at 1"]}}, {"MutableIndexFailureIT_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 19", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 19", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS PrimitiveType: boolean to FieldDeclaration at 2", "INS SimpleName: failRebuildTask to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 20", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS PrimitiveType: boolean to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 20", "INS SimpleName: throwIndexWriteFailure to VariableDeclarationFragment at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 7"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 8", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 8", "INS SimpleType: Boolean to SingleVariableDeclaration at 0", "INS SimpleName: throwIndexWriteFailure to SingleVariableDeclaration at 1", "INS SimpleName: Boolean to SimpleType: Boolean at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from helpTestWriteFailureDisablesIndex to testIndexWriteFailure", "operations": ["UPD SimpleName: helpTestWriteFailureDisablesIndex from helpTestWriteFailureDisablesIndex to testIndexWriteFailure"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS Block to MethodDeclaration at 6"]}, {"root": "INS ExpressionStatement to Block at 10", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: failRebuildTask to Assignment: = at 1", "INS ExpressionStatement to Block at 10", "INS SimpleName: failRebuildTask to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0"]}, {"root": "INS ExpressionStatement to Block at 11", "operations": ["INS QualifiedName: Boolean.FALSE to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: throwIndexWriteFailure to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: throwIndexWriteFailure to MethodInvocation at 2", "INS ExpressionStatement to Block at 11", "INS PrefixExpression: ! to Assignment: = at 1", "INS SimpleName: equals to MethodInvocation at 1"]}, {"root": "INS TryStatement to Block at 12", "operations": ["INS IfStatement to Block at 1", "INS PrefixExpression: ! to InfixExpression: || at 1", "INS FieldAccess to InfixExpression: && at 2", "INS ThisExpression to FieldAccess at 0", "INS InfixExpression: || to IfStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: throwIndexWriteFailure to FieldAccess at 1", "INS InfixExpression: && to IfStatement at 0", "INS FieldAccess to PrefixExpression: ! at 0", "INS Block to CatchClause at 1", "INS IfStatement to Block at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: commitShouldFail to InfixExpression: && at 0", "INS SimpleName: throwIndexWriteFailure to FieldAccess at 1", "INS Block to TryStatement at 0", "INS TryStatement to Block at 12"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 3", "MOV ExpressionStatement to Block at 4"]}, {"root": "MOVE from Block", "operations": ["MOV TryStatement to Block at 5"]}, {"root": "UPDATE from \"MutableIndexFailureIT_transactional={0},localIndex={1},isNamespaceMapped={2},disableIndexOnWriteFailure={3},rebuildIndexOnWriteFailure={4}\" to \"MutableIndexFailureIT_transactional={0},localIndex={1},isNamespaceMapped={2},disableIndexOnWriteFailure={3},rebuildIndexOnWriteFailure={4},failRebuildTask={5},throwIndexWriteFailure={6}\"", "operations": ["UPD StringLiteral: \"MutableIndexFailureIT_transactional={0},localIndex={1},isNamespaceMapped={2},disableIndexOnWriteFailure={3},rebuildIndexOnWriteFailure={4}\" from \"MutableIndexFailureIT_transactional={0},localIndex={1},isNamespaceMapped={2},disableIndexOnWriteFailure={3},rebuildIndexOnWriteFailure={4}\" to \"MutableIndexFailureIT_transactional={0},localIndex={1},isNamespaceMapped={2},disableIndexOnWriteFailure={3},rebuildIndexOnWriteFailure={4},failRebuildTask={5},throwIndexWriteFailure={6}\""]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 45"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "INS ParenthesizedExpression to InfixExpression: + at 4", "operations": ["INS ParenthesizedExpression to InfixExpression: + at 4", "INS QualifiedName: PhoenixIndexFailurePolicy.THROW_INDEX_WRITE_FAILURE to InfixExpression: + at 1", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: + to ParenthesizedExpression at 0", "INS InfixExpression: == to ConditionalExpression at 0", "INS StringLiteral: \"\" to ConditionalExpression at 1", "INS SimpleName: throwIndexWriteFailure to InfixExpression: + at 3", "INS ConditionalExpression to ParenthesizedExpression at 0", "INS ParenthesizedExpression to ConditionalExpression at 2", "INS SimpleName: throwIndexWriteFailure to InfixExpression: == at 0", "INS StringLiteral: \"=\" to InfixExpression: + at 2", "INS StringLiteral: \", \" to InfixExpression: + at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV PrefixExpression: ! to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "INS ArrayInitializer to ArrayInitializer at 0", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 6", "INS BooleanLiteral: false to ArrayInitializer at 5", "INS BooleanLiteral: false to ArrayInitializer at 2", "INS BooleanLiteral: true to ArrayInitializer at 4", "INS BooleanLiteral: false to ArrayInitializer at 0", "INS BooleanLiteral: false to ArrayInitializer at 1", "INS ArrayInitializer to ArrayInitializer at 0", "INS BooleanLiteral: true to ArrayInitializer at 3"]}, {"root": "INS ArrayInitializer to ArrayInitializer at 2", "operations": ["INS BooleanLiteral: true to ArrayInitializer at 2", "INS BooleanLiteral: false to ArrayInitializer at 5", "INS BooleanLiteral: true to ArrayInitializer at 4", "INS BooleanLiteral: true to ArrayInitializer at 6", "INS BooleanLiteral: false to ArrayInitializer at 0", "INS BooleanLiteral: false to ArrayInitializer at 1", "INS ArrayInitializer to ArrayInitializer at 2", "INS BooleanLiteral: true to ArrayInitializer at 3"]}, {"root": "INS ArrayInitializer to ArrayInitializer at 17", "operations": ["INS BooleanLiteral: true to ArrayInitializer at 3", "INS BooleanLiteral: false to ArrayInitializer at 0", "INS BooleanLiteral: false to ArrayInitializer at 1", "INS NullLiteral to ArrayInitializer at 6", "INS BooleanLiteral: false to ArrayInitializer at 2", "INS BooleanLiteral: true to ArrayInitializer at 5", "INS BooleanLiteral: true to ArrayInitializer at 4", "INS ArrayInitializer to ArrayInitializer at 17"]}, {"root": "INS ArrayInitializer to ArrayInitializer at 18", "operations": ["INS NullLiteral to ArrayInitializer at 6", "INS BooleanLiteral: false to ArrayInitializer at 0", "INS ArrayInitializer to ArrayInitializer at 18", "INS BooleanLiteral: true to ArrayInitializer at 5", "INS BooleanLiteral: true to ArrayInitializer at 2", "INS BooleanLiteral: true to ArrayInitializer at 4", "INS BooleanLiteral: false to ArrayInitializer at 1", "INS BooleanLiteral: true to ArrayInitializer at 3"]}, {"root": "INS ArrayInitializer to ArrayInitializer at 19", "operations": ["INS ArrayInitializer to ArrayInitializer at 19", "INS BooleanLiteral: true to ArrayInitializer at 4", "INS BooleanLiteral: true to ArrayInitializer at 5", "INS BooleanLiteral: false to ArrayInitializer at 6", "INS BooleanLiteral: false to ArrayInitializer at 1", "INS BooleanLiteral: false to ArrayInitializer at 2", "INS BooleanLiteral: true to ArrayInitializer at 3", "INS BooleanLiteral: false to ArrayInitializer at 0"]}, {"root": "INS ArrayInitializer to ArrayInitializer at 20", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 0", "INS BooleanLiteral: true to ArrayInitializer at 3", "INS BooleanLiteral: false to ArrayInitializer at 6", "INS BooleanLiteral: true to ArrayInitializer at 2", "INS BooleanLiteral: false to ArrayInitializer at 1", "INS BooleanLiteral: true to ArrayInitializer at 4", "INS BooleanLiteral: true to ArrayInitializer at 5", "INS ArrayInitializer to ArrayInitializer at 20"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV PrefixExpression: ! to InfixExpression: && at 1"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV PrefixExpression: ! to InfixExpression: || at 0", "MOV Block to IfStatement at 1"]}, {"root": "INS FieldAccess to InfixExpression: && at 2", "operations": ["INS FieldAccess to InfixExpression: && at 2", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: throwIndexWriteFailure to FieldAccess at 1"]}, {"root": "INS InfixExpression: || to IfStatement at 0", "operations": ["INS PrefixExpression: ! to InfixExpression: || at 1", "INS FieldAccess to PrefixExpression: ! at 0", "INS SimpleName: throwIndexWriteFailure to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS InfixExpression: || to IfStatement at 0"]}, {"root": "INS BooleanLiteral: false to ArrayInitializer at 5", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 5"]}, {"root": "INS NullLiteral to ArrayInitializer at 6", "operations": ["INS NullLiteral to ArrayInitializer at 6"]}, {"root": "INS BooleanLiteral: false to ArrayInitializer at 5", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 5"]}, {"root": "INS NullLiteral to ArrayInitializer at 6", "operations": ["INS NullLiteral to ArrayInitializer at 6"]}, {"root": "INS BooleanLiteral: false to ArrayInitializer at 5", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 5"]}, {"root": "INS NullLiteral to ArrayInitializer at 6", "operations": ["INS NullLiteral to ArrayInitializer at 6"]}, {"root": "INS BooleanLiteral: false to ArrayInitializer at 5", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 5"]}, {"root": "INS NullLiteral to ArrayInitializer at 6", "operations": ["INS NullLiteral to ArrayInitializer at 6"]}, {"root": "INS BooleanLiteral: false to ArrayInitializer at 5", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 5"]}, {"root": "INS NullLiteral to ArrayInitializer at 6", "operations": ["INS NullLiteral to ArrayInitializer at 6"]}, {"root": "INS BooleanLiteral: false to ArrayInitializer at 5", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 5"]}, {"root": "INS NullLiteral to ArrayInitializer at 6", "operations": ["INS NullLiteral to ArrayInitializer at 6"]}, {"root": "INS BooleanLiteral: false to ArrayInitializer at 5", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 5"]}, {"root": "INS NullLiteral to ArrayInitializer at 6", "operations": ["INS NullLiteral to ArrayInitializer at 6"]}, {"root": "INS BooleanLiteral: false to ArrayInitializer at 5", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 5"]}, {"root": "INS NullLiteral to ArrayInitializer at 6", "operations": ["INS NullLiteral to ArrayInitializer at 6"]}, {"root": "INS BooleanLiteral: false to ArrayInitializer at 5", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 5"]}, {"root": "INS NullLiteral to ArrayInitializer at 6", "operations": ["INS NullLiteral to ArrayInitializer at 6"]}, {"root": "INS BooleanLiteral: false to ArrayInitializer at 5", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 5"]}, {"root": "INS NullLiteral to ArrayInitializer at 6", "operations": ["INS NullLiteral to ArrayInitializer at 6"]}, {"root": "INS BooleanLiteral: false to ArrayInitializer at 5", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 5"]}, {"root": "INS NullLiteral to ArrayInitializer at 6", "operations": ["INS NullLiteral to ArrayInitializer at 6"]}, {"root": "INS BooleanLiteral: false to ArrayInitializer at 5", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 5"]}, {"root": "INS NullLiteral to ArrayInitializer at 6", "operations": ["INS NullLiteral to ArrayInitializer at 6"]}, {"root": "INS BooleanLiteral: false to ArrayInitializer at 5", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 5"]}, {"root": "INS NullLiteral to ArrayInitializer at 6", "operations": ["INS NullLiteral to ArrayInitializer at 6"]}, {"root": "INS BooleanLiteral: false to ArrayInitializer at 5", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 5"]}, {"root": "INS NullLiteral to ArrayInitializer at 6", "operations": ["INS NullLiteral to ArrayInitializer at 6"]}, {"root": "INS BooleanLiteral: false to ArrayInitializer at 5", "operations": ["INS BooleanLiteral: false to ArrayInitializer at 5"]}, {"root": "INS NullLiteral to ArrayInitializer at 6", "operations": ["INS NullLiteral to ArrayInitializer at 6"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV PrefixExpression: ! to InfixExpression: || at 0"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: helpTestWriteFailureDisablesIndex", "DEL SimpleName: testWriteFailureDisablesIndex", "DEL PrimitiveType: void", "DEL SimpleType: Exception", "DEL ExpressionStatement", "DEL SimpleName: Test", "DEL Block", "DEL MethodDeclaration", "DEL SimpleName: Exception", "DEL BooleanLiteral: false", "DEL Modifier: public", "DEL MethodInvocation", "DEL MarkerAnnotation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleType: Exception", "DEL SimpleName: Exception", "DEL MethodInvocation", "DEL SimpleName: helpTestWriteFailureDisablesIndex", "DEL Modifier: public", "DEL BooleanLiteral: true", "DEL PrimitiveType: void", "DEL SimpleName: testRebuildTaskFailureMarksIndexDisabled", "DEL Block", "DEL ExpressionStatement"]}, {"root": "DEL InfixExpression: &&", "operations": ["DEL InfixExpression: &&", "DEL PrefixExpression: !", "DEL SimpleName: transactional", "DEL SimpleName: localIndex", "DEL PrefixExpression: !", "DEL SimpleName: leaveIndexActiveOnFailure", "DEL PrefixExpression: !", "DEL SimpleName: rebuildIndexOnWriteFailure"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL Block"]}, {"root": "DEL Block", "operations": ["DEL IfStatement", "DEL TryStatement", "DEL CatchClause", "DEL InfixExpression: &&", "DEL Block", "DEL Block", "DEL SimpleName: commitShouldFail", "DEL Block", "DEL IfStatement"]}]}}, {"MutableIndexFailureIT_diff": {"operations": ["Insert FieldDeclaration(219) into TypeDeclaration: class(2582) at 19", "Insert FieldDeclaration(225) into TypeDeclaration: class(2582) at 20", "Insert Modifier: private(214) into FieldDeclaration(219) at 0", "Insert Modifier: final(215) into FieldDeclaration(219) at 1", "Insert PrimitiveType: boolean(216) into FieldDeclaration(219) at 2", "Insert VariableDeclarationFragment(218) into FieldDeclaration(219) at 3", "Insert Modifier: private(220) into FieldDeclaration(225) at 0", "Insert Modifier: final(221) into FieldDeclaration(225) at 1", "Insert PrimitiveType: boolean(222) into FieldDeclaration(225) at 2", "Insert VariableDeclarationFragment(224) into FieldDeclaration(225) at 3", "Move SingleVariableDeclaration(649) into MethodDeclaration(410) at 7", "Insert SingleVariableDeclaration(271) into MethodDeclaration(410) at 8", "Move MarkerAnnotation(632) into MethodDeclaration(1497) at 0", "Update SimpleName: helpTestWriteFailureDisablesIndex(646) to testIndexWriteFailure", "Insert Block(2313) into MethodDeclaration(2314) at 6", "Insert SimpleName: failRebuildTask(217) into VariableDeclarationFragment(218) at 0", "Insert SimpleName: throwIndexWriteFailure(223) into VariableDeclarationFragment(224) at 0", "Insert SimpleType: Boolean(269) into SingleVariableDeclaration(271) at 0", "Insert SimpleName: throwIndexWriteFailure(270) into SingleVariableDeclaration(271) at 1", "Insert ExpressionStatement(398) into Block(409) at 10", "Insert ExpressionStatement(408) into Block(409) at 11", "Insert TryStatement(2224) into Block(2225) at 12", "Move VariableDeclarationStatement(2154) into Block(2313) at 0", "Move ExpressionStatement(2160) into Block(2313) at 1", "Move ExpressionStatement(2166) into Block(2313) at 2", "Move ExpressionStatement(2172) into Block(2313) at 3", "Move ExpressionStatement(2176) into Block(2313) at 4", "Move TryStatement(2128) into Block(2313) at 5", "Insert SimpleName: Boolean(268) into SimpleType: Boolean(269) at 0", "Insert Assignment: =(397) into ExpressionStatement(398) at 0", "Insert Assignment: =(407) into ExpressionStatement(408) at 0", "Update StringLiteral: \"MutableIndexFailureIT_transactional={0},localIndex={1},isNamespaceMapped={2},disableIndexOnWriteFailure={3},rebuildIndexOnWriteFailure={4}\"(502) to \"MutableIndexFailureIT_transactional={0},localIndex={1},isNamespaceMapped={2},disableIndexOnWriteFailure={3},rebuildIndexOnWriteFailure={4},failRebuildTask={5},throwIndexWriteFailure={6}\"", "Insert Block(2201) into TryStatement(2224) at 0", "Insert CatchClause(2223) into TryStatement(2224) at 1", "Insert FieldAccess(395) into Assignment: =(397) at 0", "Insert SimpleName: failRebuildTask(396) into Assignment: =(397) at 1", "Insert FieldAccess(401) into Assignment: =(407) at 0", "Insert PrefixExpression: !(406) into Assignment: =(407) at 1", "Move IfStatement(1398) into Block(1489) at 45", "Move ExpressionStatement(2180) into Block(2201) at 0", "Insert IfStatement(2200) into Block(2201) at 1", "Move SingleVariableDeclaration(2194) into CatchClause(2223) at 0", "Insert Block(2222) into CatchClause(2223) at 1", "Insert ParenthesizedExpression(328) into InfixExpression: +(329) at 4", "Insert ThisExpression(393) into FieldAccess(395) at 0", "Insert SimpleName: failRebuildTask(394) into FieldAccess(395) at 1", "Insert ThisExpression(399) into FieldAccess(401) at 0", "Insert SimpleName: throwIndexWriteFailure(400) into FieldAccess(401) at 1", "Insert MethodInvocation(405) into PrefixExpression: !(406) at 0", "Move PrefixExpression: !(1254) into IfStatement(1488) at 0", "Move Block(1316) into IfStatement(1488) at 1", "Insert InfixExpression: &&(2195) into IfStatement(2200) at 0", "Move Block(2188) into IfStatement(2200) at 1", "Insert IfStatement(2216) into Block(2222) at 0", "Move ExpressionStatement(2205) into Block(2222) at 1", "Insert ConditionalExpression(327) into ParenthesizedExpression(328) at 0", "Insert QualifiedName: Boolean.FALSE(402) into MethodInvocation(405) at 0", "Insert SimpleName: equals(403) into MethodInvocation(405) at 1", "Insert SimpleName: throwIndexWriteFailure(404) into MethodInvocation(405) at 2", "Insert ArrayInitializer(576) into ArrayInitializer(737) at 0", "Insert ArrayInitializer(592) into ArrayInitializer(737) at 2", "Insert ArrayInitializer(712) into ArrayInitializer(737) at 17", "Insert ArrayInitializer(720) into ArrayInitializer(737) at 18", "Insert ArrayInitializer(728) into ArrayInitializer(737) at 19", "Insert ArrayInitializer(736) into ArrayInitializer(737) at 20", "Insert SimpleName: commitShouldFail(2189) into InfixExpression: &&(2195) at 0", "Move PrefixExpression: !(2183) into InfixExpression: &&(2195) at 1", "Insert FieldAccess(2194) into InfixExpression: &&(2195) at 2", "Insert InfixExpression: ||(2212) into IfStatement(2216) at 0", "Move Block(2199) into IfStatement(2216) at 1", "Insert FieldAccess(2282) into InfixExpression: &&(2283) at 2", "Insert InfixExpression: ||(2300) into IfStatement(2304) at 0", "Insert InfixExpression: ==(319) into ConditionalExpression(327) at 0", "Insert StringLiteral: \"\"(320) into ConditionalExpression(327) at 1", "Insert ParenthesizedExpression(326) into ConditionalExpression(327) at 2", "Insert BooleanLiteral: false(569) into ArrayInitializer(576) at 0", "Insert BooleanLiteral: false(570) into ArrayInitializer(576) at 1", "Insert BooleanLiteral: false(571) into ArrayInitializer(576) at 2", "Insert BooleanLiteral: true(572) into ArrayInitializer(576) at 3", "Insert BooleanLiteral: true(573) into ArrayInitializer(576) at 4", "Insert BooleanLiteral: false(574) into ArrayInitializer(576) at 5", "Insert BooleanLiteral: false(575) into ArrayInitializer(576) at 6", "Insert BooleanLiteral: false(582) into ArrayInitializer(584) at 5", "Insert NullLiteral(583) into ArrayInitializer(584) at 6", "Insert BooleanLiteral: false(585) into ArrayInitializer(592) at 0", "Insert BooleanLiteral: false(586) into ArrayInitializer(592) at 1", "Insert BooleanLiteral: true(587) into ArrayInitializer(592) at 2", "Insert BooleanLiteral: true(588) into ArrayInitializer(592) at 3", "Insert BooleanLiteral: true(589) into ArrayInitializer(592) at 4", "Insert BooleanLiteral: false(590) into ArrayInitializer(592) at 5", "Insert BooleanLiteral: true(591) into ArrayInitializer(592) at 6", "Insert BooleanLiteral: false(598) into ArrayInitializer(600) at 5", "Insert NullLiteral(599) into ArrayInitializer(600) at 6", "Insert BooleanLiteral: false(606) into ArrayInitializer(608) at 5", "Insert NullLiteral(607) into ArrayInitializer(608) at 6", "Insert BooleanLiteral: false(614) into ArrayInitializer(616) at 5", "Insert NullLiteral(615) into ArrayInitializer(616) at 6", "Insert BooleanLiteral: false(622) into ArrayInitializer(624) at 5", "Insert NullLiteral(623) into ArrayInitializer(624) at 6", "Insert BooleanLiteral: false(630) into ArrayInitializer(632) at 5", "Insert NullLiteral(631) into ArrayInitializer(632) at 6", "Insert BooleanLiteral: false(638) into ArrayInitializer(640) at 5", "Insert NullLiteral(639) into ArrayInitializer(640) at 6", "Insert BooleanLiteral: false(646) into ArrayInitializer(648) at 5", "Insert NullLiteral(647) into ArrayInitializer(648) at 6", "Insert BooleanLiteral: false(654) into ArrayInitializer(656) at 5", "Insert NullLiteral(655) into ArrayInitializer(656) at 6", "Insert BooleanLiteral: false(662) into ArrayInitializer(664) at 5", "Insert NullLiteral(663) into ArrayInitializer(664) at 6", "Insert BooleanLiteral: false(670) into ArrayInitializer(672) at 5", "Insert NullLiteral(671) into ArrayInitializer(672) at 6", "Insert BooleanLiteral: false(678) into ArrayInitializer(680) at 5", "Insert NullLiteral(679) into ArrayInitializer(680) at 6", "Insert BooleanLiteral: false(686) into ArrayInitializer(688) at 5", "Insert NullLiteral(687) into ArrayInitializer(688) at 6", "Insert BooleanLiteral: false(694) into ArrayInitializer(696) at 5", "Insert NullLiteral(695) into ArrayInitializer(696) at 6", "Insert BooleanLiteral: false(702) into ArrayInitializer(704) at 5", "Insert NullLiteral(703) into ArrayInitializer(704) at 6", "Insert BooleanLiteral: false(705) into ArrayInitializer(712) at 0", "Insert BooleanLiteral: false(706) into ArrayInitializer(712) at 1", "Insert BooleanLiteral: false(707) into ArrayInitializer(712) at 2", "Insert BooleanLiteral: true(708) into ArrayInitializer(712) at 3", "Insert BooleanLiteral: true(709) into ArrayInitializer(712) at 4", "Insert BooleanLiteral: true(710) into ArrayInitializer(712) at 5", "Insert NullLiteral(711) into ArrayInitializer(712) at 6", "Insert BooleanLiteral: false(713) into ArrayInitializer(720) at 0", "Insert BooleanLiteral: false(714) into ArrayInitializer(720) at 1", "Insert BooleanLiteral: true(715) into ArrayInitializer(720) at 2", "Insert BooleanLiteral: true(716) into ArrayInitializer(720) at 3", "Insert BooleanLiteral: true(717) into ArrayInitializer(720) at 4", "Insert BooleanLiteral: true(718) into ArrayInitializer(720) at 5", "Insert NullLiteral(719) into ArrayInitializer(720) at 6", "Insert BooleanLiteral: false(721) into ArrayInitializer(728) at 0", "Insert BooleanLiteral: false(722) into ArrayInitializer(728) at 1", "Insert BooleanLiteral: false(723) into ArrayInitializer(728) at 2", "Insert BooleanLiteral: true(724) into ArrayInitializer(728) at 3", "Insert BooleanLiteral: true(725) into ArrayInitializer(728) at 4", "Insert BooleanLiteral: true(726) into ArrayInitializer(728) at 5", "Insert BooleanLiteral: false(727) into ArrayInitializer(728) at 6", "Insert BooleanLiteral: false(729) into ArrayInitializer(736) at 0", "Insert BooleanLiteral: false(730) into ArrayInitializer(736) at 1", "Insert BooleanLiteral: true(731) into ArrayInitializer(736) at 2", "Insert BooleanLiteral: true(732) into ArrayInitializer(736) at 3", "Insert BooleanLiteral: true(733) into ArrayInitializer(736) at 4", "Insert BooleanLiteral: true(734) into ArrayInitializer(736) at 5", "Insert BooleanLiteral: false(735) into ArrayInitializer(736) at 6", "Insert ThisExpression(2192) into FieldAccess(2194) at 0", "Insert SimpleName: throwIndexWriteFailure(2193) into FieldAccess(2194) at 1", "Move PrefixExpression: !(2196) into InfixExpression: ||(2212) at 0", "Insert PrefixExpression: !(2211) into InfixExpression: ||(2212) at 1", "Insert ThisExpression(2280) into FieldAccess(2282) at 0", "Insert SimpleName: throwIndexWriteFailure(2281) into FieldAccess(2282) at 1", "Move PrefixExpression: !(2116) into InfixExpression: ||(2300) at 0", "Insert PrefixExpression: !(2299) into InfixExpression: ||(2300) at 1", "Insert SimpleName: throwIndexWriteFailure(317) into InfixExpression: ==(319) at 0", "Insert NullLiteral(318) into InfixExpression: ==(319) at 1", "Insert InfixExpression: +(325) into ParenthesizedExpression(326) at 0", "Insert FieldAccess(2210) into PrefixExpression: !(2211) at 0", "Insert FieldAccess(2298) into PrefixExpression: !(2299) at 0", "Insert StringLiteral: \", \"(321) into InfixExpression: +(325) at 0", "Insert QualifiedName: PhoenixIndexFailurePolicy.THROW_INDEX_WRITE_FAILURE(322) into InfixExpression: +(325) at 1", "Insert StringLiteral: \"=\"(323) into InfixExpression: +(325) at 2", "Insert SimpleName: throwIndexWriteFailure(324) into InfixExpression: +(325) at 3", "Insert ThisExpression(2208) into FieldAccess(2210) at 0", "Insert SimpleName: throwIndexWriteFailure(2209) into FieldAccess(2210) at 1", "Insert ThisExpression(2296) into FieldAccess(2298) at 0", "Insert SimpleName: throwIndexWriteFailure(2297) into FieldAccess(2298) at 1", "Delete SimpleName: Test(618)", "Delete MarkerAnnotation(619)", "Delete Modifier: public(620)", "Delete PrimitiveType: void(621)", "Delete SimpleName: testWriteFailureDisablesIndex(622)", "Delete SimpleName: Exception(623)", "Delete SimpleType: Exception(624)", "Delete SimpleName: helpTestWriteFailureDisablesIndex(625)", "Delete BooleanLiteral: false(626)", "Delete MethodInvocation(627)", "Delete ExpressionStatement(628)", "Delete Block(629)", "Delete MethodDeclaration(630)", "Delete Modifier: public(633)", "Delete PrimitiveType: void(634)", "Delete SimpleName: testRebuildTaskFailureMarksIndexDisabled(635)", "Delete SimpleName: Exception(636)", "Delete SimpleType: Exception(637)", "Delete SimpleName: helpTestWriteFailureDisablesIndex(638)", "Delete BooleanLiteral: true(639)", "Delete MethodInvocation(640)", "Delete ExpressionStatement(641)", "Delete Block(642)", "Delete MethodDeclaration(643)", "Delete SimpleName: rebuildIndexOnWriteFailure(1317)", "Delete SimpleName: transactional(1318)", "Delete PrefixExpression: !(1319)", "Delete SimpleName: leaveIndexActiveOnFailure(1320)", "Delete PrefixExpression: !(1321)", "Delete SimpleName: localIndex(1322)", "Delete PrefixExpression: !(1323)", "Delete InfixExpression: &&(1324)", "Delete Block(1399)", "Delete IfStatement(1400)", "Delete SimpleName: commitShouldFail(2181)", "Delete InfixExpression: &&(2184)", "Delete IfStatement(2189)", "Delete Block(2190)", "Delete IfStatement(2200)", "Delete Block(2206)", "Delete CatchClause(2207)", "Delete TryStatement(2208)", "Delete Block(2209)"]}}], "commit_stats": [{"total_files": 6, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}