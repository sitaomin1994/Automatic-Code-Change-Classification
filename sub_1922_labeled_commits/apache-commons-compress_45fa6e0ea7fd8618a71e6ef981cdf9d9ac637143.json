{"application": "apache-commons-compress", "csha": "45fa6e0ea7fd8618a71e6ef981cdf9d9ac637143", "files": [{"TarArchiveInputStream_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.io.BufferedReader to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: java.io.InputStreamReader to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: java.util.HashMap to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: java.util.Iterator to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: java.util.Map to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: java.util.Map.Entry to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: read to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleType: StringBuffer to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: setUserName to MethodInvocation at 1", "INS ArrayType: char[] to VariableDeclarationStatement at 0", "INS IfStatement to Block at 3", "INS SimpleName: setUserId to MethodInvocation at 1", "INS SimpleName: cbuf to ClassInstanceCreation at 1", "INS Block to WhileStatement at 1", "INS SimpleName: ch to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: getNextEntry to MethodInvocation at 0", "INS SimpleName: parseInt to MethodInvocation at 1", "INS SimpleName: sb to MethodInvocation at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ParenthesizedExpression to InfixExpression: + at 1", "INS InfixExpression: == to IfStatement at 0", "INS Block to WhileStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: read to InfixExpression: - at 1", "INS Assignment: = to ParenthesizedExpression at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: read to PostfixExpression: ++ at 0", "INS SimpleName: paxHeaders to MethodDeclaration at 2", "INS SimpleName: equals to MethodInvocation at 1", "INS Dimension to ArrayType: char[] at 1", "INS VariableDeclarationStatement to Block at 0", "INS ArrayType: char[] to ArrayCreation at 0", "INS SimpleName: ch to InfixExpression: - at 0", "INS PrimitiveType: char to CastExpression at 0", "INS SimpleType: Map to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: got to InfixExpression: + at 3", "INS PostfixExpression: ++ to ExpressionStatement at 0", "INS SimpleName: read to VariableDeclarationFragment at 0", "INS BreakStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: read to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ch to InfixExpression: == at 0", "INS BreakStatement to Block at 6", "INS InfixExpression: - to ArrayCreation at 1", "INS SimpleName: ent to MethodInvocation at 0", "INS SimpleName: read to InfixExpression: - at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS ParenthesizedExpression to InfixExpression: != at 0", "INS SimpleName: value to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS ThisExpression to ClassInstanceCreation at 1", "INS InfixExpression: == to IfStatement at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: len to InfixExpression: - at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: key to MethodInvocation at 2", "INS ExpressionStatement to Block at 2", "INS StringLiteral: \"path\" to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS IfStatement to IfStatement at 2", "INS SimpleName: put to MethodInvocation at 1", "INS IfStatement to Block at 3", "INS SimpleName: cbuf to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS IfStatement to IfStatement at 2", "INS Assignment: = to ParenthesizedExpression at 0", "INS WhileStatement to Block at 2", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS InfixExpression: != to WhileStatement at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: StringBuffer to SimpleType: StringBuffer at 0", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Integer to MethodInvocation at 0", "INS NumberLiteral: 10 to Assignment: *= at 1", "INS NumberLiteral: 1 to InfixExpression: - at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: setSize to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 4", "INS SimpleType: String to CastExpression at 0", "INS SimpleName: br to VariableDeclarationFragment at 0", "INS NumberLiteral: 0 to ClassInstanceCreation at 2", "INS SimpleName: hdrs to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 4", "INS MethodInvocation to CastExpression at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: BufferedReader to SimpleType: BufferedReader at 0", "INS PostfixExpression: ++ to ExpressionStatement at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: val to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: headers to MethodInvocation at 0", "INS InfixExpression: - to ParenthesizedExpression at 0", "INS SimpleName: br to MethodInvocation at 0", "INS StringLiteral: \"Failed to read Paxheader. Expected \" to InfixExpression: + at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS PrefixExpression: - to InfixExpression: == at 1", "INS SimpleName: read to PostfixExpression: ++ at 0", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: hasNext to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SimpleType: Entry to VariableDeclarationStatement at 0", "INS StringLiteral: \"uname\" to MethodInvocation at 0", "INS SimpleName: cbuf to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: setGroupId to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: currEntry to MethodInvocation at 0", "INS SimpleType: IOException to ClassInstanceCreation at 0", "INS IfStatement to IfStatement at 2", "INS VariableDeclarationStatement to Block at 2", "INS ExpressionStatement to Block at 3", "INS SimpleName: keyword to MethodInvocation at 2", "INS ClassInstanceCreation to ClassInstanceCreation at 1", "INS Assignment: += to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS InfixExpression: != to WhileStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Block to WhileStatement at 1", "INS SimpleName: InputStreamReader to SimpleType: InputStreamReader at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: key to MethodInvocation at 2", "INS IfStatement to IfStatement at 2", "INS VariableDeclarationStatement to Block at 2", "INS MethodInvocation to WhileStatement at 0", "INS SimpleName: got to VariableDeclarationFragment at 0", "INS WhileStatement to Block at 5", "INS MethodInvocation to Assignment: = at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: key to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: headers to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: key to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: sb to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: parseInt to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: ch to Assignment: = at 0", "INS SimpleName: br to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS StringLiteral: \"size\" to MethodInvocation at 0", "INS SimpleName: br to MethodInvocation at 0", "INS SimpleName: setLinkName to MethodInvocation at 1", "INS SimpleName: ch to CastExpression at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: hdrs to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: key to MethodInvocation at 2", "INS SimpleName: len to Assignment: += at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS Dimension to ArrayType: char[] at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: currEntry to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: currEntry to MethodInvocation at 0", "INS SimpleName: key to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: read to InfixExpression: - at 1", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: currEntry to MethodInvocation at 0", "INS SimpleName: currEntry to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS BreakStatement to Block at 2", "INS ExpressionStatement to Block at 3", "INS SimpleName: getKey to MethodInvocation at 1", "INS SimpleName: Integer to MethodInvocation at 0", "INS SimpleName: read to MethodInvocation at 1", "INS SimpleName: parseLong to MethodInvocation at 1", "INS ParenthesizedExpression to InfixExpression: != at 0", "INS SimpleType: InputStreamReader to ClassInstanceCreation at 0", "INS MethodInvocation to CastExpression at 1", "INS MethodInvocation to CastExpression at 1", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS PrefixExpression: - to InfixExpression: != at 1", "INS Block to IfStatement at 1", "INS SimpleName: ch to InfixExpression: == at 0", "INS SimpleName: val to VariableDeclarationFragment at 0", "INS SimpleName: key to VariableDeclarationFragment at 0", "INS SimpleName: sb to VariableDeclarationFragment at 0", "INS SimpleName: BufferedReader to SimpleType: BufferedReader at 0", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS StringLiteral: \"UTF-8\" to ClassInstanceCreation at 2", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleType: Entry to CastExpression at 0", "INS SimpleName: next to MethodInvocation at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: currEntry to MethodInvocation at 0", "INS BooleanLiteral: true to WhileStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: String to CastExpression at 0", "INS CharacterLiteral: ' ' to InfixExpression: == at 1", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: val to MethodInvocation at 2", "INS SimpleName: currEntry to MethodInvocation at 0", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS SimpleName: value to VariableDeclarationFragment at 0", "INS SimpleName: val to MethodInvocation at 2", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS SimpleName: iterator to MethodInvocation at 1", "INS SimpleName: len to VariableDeclarationFragment at 0", "INS SimpleName: read to InfixExpression: - at 1", "INS CastExpression to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 1", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS CharacterLiteral: '0' to InfixExpression: - at 1", "INS SimpleName: got to InfixExpression: != at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS Block to WhileStatement at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleType: IOException to MethodDeclaration at 3", "INS SimpleName: val to MethodInvocation at 2", "INS InfixExpression: == to IfStatement at 0", "INS ExpressionStatement to Block at 5", "INS SimpleType: BufferedReader to VariableDeclarationStatement at 0", "INS SimpleName: Entry to SimpleType: Entry at 0", "INS IfStatement to IfStatement at 2", "INS SimpleType: HashMap to ClassInstanceCreation at 0", "INS SimpleName: append to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"gid\" to MethodInvocation at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleType: Iterator to VariableDeclarationStatement at 0", "INS SimpleName: setGroupName to MethodInvocation at 1", "INS SimpleType: BufferedReader to ClassInstanceCreation at 0", "INS SimpleName: Long to MethodInvocation at 0", "INS InfixExpression: - to InfixExpression: != at 1", "INS SimpleName: hdrs to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: ch to InfixExpression: == at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: keyword to VariableDeclarationFragment at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SimpleName: StringBuffer to SimpleType: StringBuffer at 0", "INS SimpleName: len to InfixExpression: - at 0", "INS SimpleName: setName to MethodInvocation at 1", "INS SimpleName: val to MethodInvocation at 2", "INS StringLiteral: \"linkpath\" to MethodInvocation at 0", "INS SimpleName: key to MethodInvocation at 2", "INS PrimitiveType: char to ArrayType: char[] at 0", "INS WhileStatement to Block at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: ch to Assignment: = at 0", "INS CharacterLiteral: '=' to InfixExpression: == at 1", "INS VariableDeclarationStatement to Block at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: headers to VariableDeclarationFragment at 0", "INS Assignment: *= to ExpressionStatement at 0", "INS WhileStatement to Block at 3", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS SimpleName: len to InfixExpression: - at 0", "INS SimpleType: StringBuffer to ClassInstanceCreation at 0", "INS PrefixExpression: - to InfixExpression: != at 1", "INS StringLiteral: \" chars, read \" to InfixExpression: + at 2", "INS InfixExpression: - to ClassInstanceCreation at 3", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Block to IfStatement at 1", "INS PrimitiveType: char to ArrayType: char[] at 0", "INS SimpleName: len to Assignment: *= at 0", "INS SimpleName: val to MethodInvocation at 2", "INS SimpleType: String to ClassInstanceCreation at 0", "INS SimpleName: len to InfixExpression: - at 0", "INS SimpleName: val to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 1", "INS SimpleName: ent to MethodInvocation at 0", "INS IfStatement to IfStatement at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: entrySet to MethodInvocation at 1", "INS SimpleName: ent to VariableDeclarationFragment at 0", "INS StringLiteral: \"uid\" to MethodInvocation at 0", "INS InfixExpression: - to Assignment: += at 1", "INS StringLiteral: \"gname\" to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS SimpleName: currEntry to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: isPaxHeader to MethodInvocation at 1", "INS InfixExpression: != to InfixExpression: && at 0", "INS MethodInvocation to InfixExpression: && at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 6", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: currEntry to InfixExpression: != at 0", "INS SimpleName: paxHeaders to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1"]}]}}, {"TarArchiveInputStream_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(1298) at 1", "Insert ImportDeclaration(9) into CompilationUnit(1298) at 4", "Insert ImportDeclaration(11) into CompilationUnit(1298) at 5", "Insert ImportDeclaration(13) into CompilationUnit(1298) at 6", "Insert ImportDeclaration(15) into CompilationUnit(1298) at 7", "Insert ImportDeclaration(17) into CompilationUnit(1298) at 8", "Insert QualifiedName: java.io.BufferedReader(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: java.io.InputStreamReader(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: java.util.HashMap(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: java.util.Iterator(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: java.util.Map(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: java.util.Map.Entry(16) into ImportDeclaration(17) at 0", "Insert MethodDeclaration(894) into TypeDeclaration: class(1297) at 21", "Insert Modifier: private(573) into MethodDeclaration(894) at 0", "Insert PrimitiveType: void(574) into MethodDeclaration(894) at 1", "Insert SimpleName: paxHeaders(575) into MethodDeclaration(894) at 2", "Insert SimpleType: IOException(577) into MethodDeclaration(894) at 3", "Insert Block(893) into MethodDeclaration(894) at 4", "Insert IfStatement(568) into Block(571) at 6", "Insert SimpleName: IOException(576) into SimpleType: IOException(577) at 0", "Insert VariableDeclarationStatement(590) into Block(893) at 0", "Insert VariableDeclarationStatement(598) into Block(893) at 1", "Insert WhileStatement(755) into Block(893) at 2", "Insert ExpressionStatement(758) into Block(893) at 3", "Insert VariableDeclarationStatement(768) into Block(893) at 4", "Insert WhileStatement(892) into Block(893) at 5", "Insert InfixExpression: &&(563) into IfStatement(568) at 0", "Insert Block(567) into IfStatement(568) at 1", "Insert SimpleType: BufferedReader(579) into VariableDeclarationStatement(590) at 0", "Insert VariableDeclarationFragment(589) into VariableDeclarationStatement(590) at 1", "Insert SimpleType: Map(592) into VariableDeclarationStatement(598) at 0", "Insert VariableDeclarationFragment(597) into VariableDeclarationStatement(598) at 1", "Insert BooleanLiteral: true(599) into WhileStatement(755) at 0", "Insert Block(754) into WhileStatement(755) at 1", "Insert MethodInvocation(757) into ExpressionStatement(758) at 0", "Insert SimpleType: Iterator(760) into VariableDeclarationStatement(768) at 0", "Insert VariableDeclarationFragment(767) into VariableDeclarationStatement(768) at 1", "Insert MethodInvocation(771) into WhileStatement(892) at 0", "Insert Block(891) into WhileStatement(892) at 1", "Insert InfixExpression: !=(559) into InfixExpression: &&(563) at 0", "Insert MethodInvocation(562) into InfixExpression: &&(563) at 1", "Insert ExpressionStatement(566) into Block(567) at 0", "Insert SimpleName: BufferedReader(578) into SimpleType: BufferedReader(579) at 0", "Insert SimpleName: br(580) into VariableDeclarationFragment(589) at 0", "Insert ClassInstanceCreation(588) into VariableDeclarationFragment(589) at 1", "Insert SimpleName: Map(591) into SimpleType: Map(592) at 0", "Insert SimpleName: headers(593) into VariableDeclarationFragment(597) at 0", "Insert ClassInstanceCreation(596) into VariableDeclarationFragment(597) at 1", "Insert VariableDeclarationStatement(603) into Block(754) at 0", "Insert VariableDeclarationStatement(608) into Block(754) at 1", "Insert VariableDeclarationStatement(613) into Block(754) at 2", "Insert WhileStatement(746) into Block(754) at 3", "Insert IfStatement(753) into Block(754) at 4", "Insert SimpleName: getNextEntry(756) into MethodInvocation(757) at 0", "Insert SimpleName: Iterator(759) into SimpleType: Iterator(760) at 0", "Insert SimpleName: hdrs(761) into VariableDeclarationFragment(767) at 0", "Insert MethodInvocation(766) into VariableDeclarationFragment(767) at 1", "Insert SimpleName: hdrs(769) into MethodInvocation(771) at 0", "Insert SimpleName: hasNext(770) into MethodInvocation(771) at 1", "Insert VariableDeclarationStatement(782) into Block(891) at 0", "Insert VariableDeclarationStatement(793) into Block(891) at 1", "Insert VariableDeclarationStatement(804) into Block(891) at 2", "Insert IfStatement(890) into Block(891) at 3", "Insert SimpleName: currEntry(557) into InfixExpression: !=(559) at 0", "Insert NullLiteral(558) into InfixExpression: !=(559) at 1", "Insert SimpleName: currEntry(560) into MethodInvocation(562) at 0", "Insert SimpleName: isPaxHeader(561) into MethodInvocation(562) at 1", "Insert MethodInvocation(565) into ExpressionStatement(566) at 0", "Insert SimpleType: BufferedReader(582) into ClassInstanceCreation(588) at 0", "Insert ClassInstanceCreation(587) into ClassInstanceCreation(588) at 1", "Insert SimpleType: HashMap(595) into ClassInstanceCreation(596) at 0", "Insert PrimitiveType: int(600) into VariableDeclarationStatement(603) at 0", "Insert VariableDeclarationFragment(602) into VariableDeclarationStatement(603) at 1", "Insert PrimitiveType: int(604) into VariableDeclarationStatement(608) at 0", "Insert VariableDeclarationFragment(607) into VariableDeclarationStatement(608) at 1", "Insert PrimitiveType: int(609) into VariableDeclarationStatement(613) at 0", "Insert VariableDeclarationFragment(612) into VariableDeclarationStatement(613) at 1", "Insert InfixExpression: !=(622) into WhileStatement(746) at 0", "Insert Block(745) into WhileStatement(746) at 1", "Insert InfixExpression: ==(750) into IfStatement(753) at 0", "Insert Block(752) into IfStatement(753) at 1", "Insert MethodInvocation(764) into MethodInvocation(766) at 0", "Insert SimpleName: iterator(765) into MethodInvocation(766) at 1", "Insert SimpleType: Entry(773) into VariableDeclarationStatement(782) at 0", "Insert VariableDeclarationFragment(781) into VariableDeclarationStatement(782) at 1", "Insert SimpleType: String(784) into VariableDeclarationStatement(793) at 0", "Insert VariableDeclarationFragment(792) into VariableDeclarationStatement(793) at 1", "Insert SimpleType: String(795) into VariableDeclarationStatement(804) at 0", "Insert VariableDeclarationFragment(803) into VariableDeclarationStatement(804) at 1", "Insert MethodInvocation(808) into IfStatement(890) at 0", "Insert Block(814) into IfStatement(890) at 1", "Insert IfStatement(889) into IfStatement(890) at 2", "Insert SimpleName: paxHeaders(564) into MethodInvocation(565) at 0", "Insert SimpleName: BufferedReader(581) into SimpleType: BufferedReader(582) at 0", "Insert SimpleType: InputStreamReader(584) into ClassInstanceCreation(587) at 0", "Insert ThisExpression(585) into ClassInstanceCreation(587) at 1", "Insert StringLiteral: \"UTF-8\"(586) into ClassInstanceCreation(587) at 2", "Insert SimpleName: HashMap(594) into SimpleType: HashMap(595) at 0", "Insert SimpleName: ch(601) into VariableDeclarationFragment(602) at 0", "Insert SimpleName: len(605) into VariableDeclarationFragment(607) at 0", "Insert NumberLiteral: 0(606) into VariableDeclarationFragment(607) at 1", "Insert SimpleName: read(610) into VariableDeclarationFragment(612) at 0", "Insert NumberLiteral: 0(611) into VariableDeclarationFragment(612) at 1", "Insert ParenthesizedExpression(619) into InfixExpression: !=(622) at 0", "Insert PrefixExpression: -(621) into InfixExpression: !=(622) at 1", "Insert ExpressionStatement(625) into Block(745) at 0", "Insert IfStatement(734) into Block(745) at 1", "Insert ExpressionStatement(738) into Block(745) at 2", "Insert ExpressionStatement(744) into Block(745) at 3", "Insert SimpleName: ch(747) into InfixExpression: ==(750) at 0", "Insert PrefixExpression: -(749) into InfixExpression: ==(750) at 1", "Insert BreakStatement(751) into Block(752) at 0", "Insert SimpleName: headers(762) into MethodInvocation(764) at 0", "Insert SimpleName: entrySet(763) into MethodInvocation(764) at 1", "Insert SimpleName: Entry(772) into SimpleType: Entry(773) at 0", "Insert SimpleName: ent(774) into VariableDeclarationFragment(781) at 0", "Insert CastExpression(780) into VariableDeclarationFragment(781) at 1", "Insert SimpleName: String(783) into SimpleType: String(784) at 0", "Insert SimpleName: key(785) into VariableDeclarationFragment(792) at 0", "Insert CastExpression(791) into VariableDeclarationFragment(792) at 1", "Insert SimpleName: String(794) into SimpleType: String(795) at 0", "Insert SimpleName: val(796) into VariableDeclarationFragment(803) at 0", "Insert CastExpression(802) into VariableDeclarationFragment(803) at 1", "Insert StringLiteral: \"path\"(805) into MethodInvocation(808) at 0", "Insert SimpleName: equals(806) into MethodInvocation(808) at 1", "Insert SimpleName: key(807) into MethodInvocation(808) at 2", "Insert ExpressionStatement(813) into Block(814) at 0", "Insert MethodInvocation(818) into IfStatement(889) at 0", "Insert Block(824) into IfStatement(889) at 1", "Insert IfStatement(888) into IfStatement(889) at 2", "Insert SimpleName: InputStreamReader(583) into SimpleType: InputStreamReader(584) at 0", "Insert Assignment: =(618) into ParenthesizedExpression(619) at 0", "Insert NumberLiteral: 1(620) into PrefixExpression: -(621) at 0", "Insert PostfixExpression: ++(624) into ExpressionStatement(625) at 0", "Insert InfixExpression: ==(628) into IfStatement(734) at 0", "Insert Block(733) into IfStatement(734) at 1", "Insert Assignment: *=(737) into ExpressionStatement(738) at 0", "Insert Assignment: +=(743) into ExpressionStatement(744) at 0", "Insert NumberLiteral: 1(748) into PrefixExpression: -(749) at 0", "Insert SimpleType: Entry(776) into CastExpression(780) at 0", "Insert MethodInvocation(779) into CastExpression(780) at 1", "Insert SimpleType: String(787) into CastExpression(791) at 0", "Insert MethodInvocation(790) into CastExpression(791) at 1", "Insert SimpleType: String(798) into CastExpression(802) at 0", "Insert MethodInvocation(801) into CastExpression(802) at 1", "Insert MethodInvocation(812) into ExpressionStatement(813) at 0", "Insert StringLiteral: \"linkpath\"(815) into MethodInvocation(818) at 0", "Insert SimpleName: equals(816) into MethodInvocation(818) at 1", "Insert SimpleName: key(817) into MethodInvocation(818) at 2", "Insert ExpressionStatement(823) into Block(824) at 0", "Insert MethodInvocation(828) into IfStatement(888) at 0", "Insert Block(837) into IfStatement(888) at 1", "Insert IfStatement(887) into IfStatement(888) at 2", "Insert SimpleName: ch(614) into Assignment: =(618) at 0", "Insert MethodInvocation(617) into Assignment: =(618) at 1", "Insert SimpleName: read(623) into PostfixExpression: ++(624) at 0", "Insert SimpleName: ch(626) into InfixExpression: ==(628) at 0", "Insert CharacterLiteral: ' '(627) into InfixExpression: ==(628) at 1", "Insert VariableDeclarationStatement(636) into Block(733) at 0", "Insert WhileStatement(731) into Block(733) at 1", "Insert BreakStatement(732) into Block(733) at 2", "Insert SimpleName: len(735) into Assignment: *=(737) at 0", "Insert NumberLiteral: 10(736) into Assignment: *=(737) at 1", "Insert SimpleName: len(739) into Assignment: +=(743) at 0", "Insert InfixExpression: -(742) into Assignment: +=(743) at 1", "Insert SimpleName: Entry(775) into SimpleType: Entry(776) at 0", "Insert SimpleName: hdrs(777) into MethodInvocation(779) at 0", "Insert SimpleName: next(778) into MethodInvocation(779) at 1", "Insert SimpleName: String(786) into SimpleType: String(787) at 0", "Insert SimpleName: ent(788) into MethodInvocation(790) at 0", "Insert SimpleName: getKey(789) into MethodInvocation(790) at 1", "Insert SimpleName: String(797) into SimpleType: String(798) at 0", "Insert SimpleName: ent(799) into MethodInvocation(801) at 0", "Insert SimpleName: getValue(800) into MethodInvocation(801) at 1", "Insert SimpleName: currEntry(809) into MethodInvocation(812) at 0", "Insert SimpleName: setName(810) into MethodInvocation(812) at 1", "Insert SimpleName: val(811) into MethodInvocation(812) at 2", "Insert MethodInvocation(822) into ExpressionStatement(823) at 0", "Insert StringLiteral: \"gid\"(825) into MethodInvocation(828) at 0", "Insert SimpleName: equals(826) into MethodInvocation(828) at 1", "Insert SimpleName: key(827) into MethodInvocation(828) at 2", "Insert ExpressionStatement(836) into Block(837) at 0", "Insert MethodInvocation(841) into IfStatement(887) at 0", "Insert Block(847) into IfStatement(887) at 1", "Insert IfStatement(886) into IfStatement(887) at 2", "Insert SimpleName: br(615) into MethodInvocation(617) at 0", "Insert SimpleName: read(616) into MethodInvocation(617) at 1", "Insert SimpleType: StringBuffer(630) into VariableDeclarationStatement(636) at 0", "Insert VariableDeclarationFragment(635) into VariableDeclarationStatement(636) at 1", "Insert InfixExpression: !=(645) into WhileStatement(731) at 0", "Insert Block(730) into WhileStatement(731) at 1", "Insert SimpleName: ch(740) into InfixExpression: -(742) at 0", "Insert CharacterLiteral: '0'(741) into InfixExpression: -(742) at 1", "Insert SimpleName: currEntry(819) into MethodInvocation(822) at 0", "Insert SimpleName: setLinkName(820) into MethodInvocation(822) at 1", "Insert SimpleName: val(821) into MethodInvocation(822) at 2", "Insert MethodInvocation(835) into ExpressionStatement(836) at 0", "Insert StringLiteral: \"gname\"(838) into MethodInvocation(841) at 0", "Insert SimpleName: equals(839) into MethodInvocation(841) at 1", "Insert SimpleName: key(840) into MethodInvocation(841) at 2", "Insert ExpressionStatement(846) into Block(847) at 0", "Insert MethodInvocation(851) into IfStatement(886) at 0", "Insert Block(860) into IfStatement(886) at 1", "Insert IfStatement(885) into IfStatement(886) at 2", "Insert SimpleName: StringBuffer(629) into SimpleType: StringBuffer(630) at 0", "Insert SimpleName: sb(631) into VariableDeclarationFragment(635) at 0", "Insert ClassInstanceCreation(634) into VariableDeclarationFragment(635) at 1", "Insert ParenthesizedExpression(642) into InfixExpression: !=(645) at 0", "Insert PrefixExpression: -(644) into InfixExpression: !=(645) at 1", "Insert ExpressionStatement(648) into Block(730) at 0", "Insert IfStatement(722) into Block(730) at 1", "Insert ExpressionStatement(729) into Block(730) at 2", "Insert SimpleName: currEntry(829) into MethodInvocation(835) at 0", "Insert SimpleName: setGroupId(830) into MethodInvocation(835) at 1", "Insert MethodInvocation(834) into MethodInvocation(835) at 2", "Insert MethodInvocation(845) into ExpressionStatement(846) at 0", "Insert StringLiteral: \"uid\"(848) into MethodInvocation(851) at 0", "Insert SimpleName: equals(849) into MethodInvocation(851) at 1", "Insert SimpleName: key(850) into MethodInvocation(851) at 2", "Insert ExpressionStatement(859) into Block(860) at 0", "Insert MethodInvocation(864) into IfStatement(885) at 0", "Insert Block(870) into IfStatement(885) at 1", "Insert IfStatement(884) into IfStatement(885) at 2", "Insert SimpleType: StringBuffer(633) into ClassInstanceCreation(634) at 0", "Insert Assignment: =(641) into ParenthesizedExpression(642) at 0", "Insert NumberLiteral: 1(643) into PrefixExpression: -(644) at 0", "Insert PostfixExpression: ++(647) into ExpressionStatement(648) at 0", "Insert InfixExpression: ==(651) into IfStatement(722) at 0", "Insert Block(721) into IfStatement(722) at 1", "Insert MethodInvocation(728) into ExpressionStatement(729) at 0", "Insert SimpleName: Integer(831) into MethodInvocation(834) at 0", "Insert SimpleName: parseInt(832) into MethodInvocation(834) at 1", "Insert SimpleName: val(833) into MethodInvocation(834) at 2", "Insert SimpleName: currEntry(842) into MethodInvocation(845) at 0", "Insert SimpleName: setGroupName(843) into MethodInvocation(845) at 1", "Insert SimpleName: val(844) into MethodInvocation(845) at 2", "Insert MethodInvocation(858) into ExpressionStatement(859) at 0", "Insert StringLiteral: \"uname\"(861) into MethodInvocation(864) at 0", "Insert SimpleName: equals(862) into MethodInvocation(864) at 1", "Insert SimpleName: key(863) into MethodInvocation(864) at 2", "Insert ExpressionStatement(869) into Block(870) at 0", "Insert MethodInvocation(874) into IfStatement(884) at 0", "Insert Block(883) into IfStatement(884) at 1", "Insert SimpleName: StringBuffer(632) into SimpleType: StringBuffer(633) at 0", "Insert SimpleName: ch(637) into Assignment: =(641) at 0", "Insert MethodInvocation(640) into Assignment: =(641) at 1", "Insert SimpleName: read(646) into PostfixExpression: ++(647) at 0", "Insert SimpleName: ch(649) into InfixExpression: ==(651) at 0", "Insert CharacterLiteral: '='(650) into InfixExpression: ==(651) at 1", "Insert VariableDeclarationStatement(659) into Block(721) at 0", "Insert VariableDeclarationStatement(672) into Block(721) at 1", "Insert VariableDeclarationStatement(680) into Block(721) at 2", "Insert IfStatement(699) into Block(721) at 3", "Insert VariableDeclarationStatement(713) into Block(721) at 4", "Insert ExpressionStatement(719) into Block(721) at 5", "Insert BreakStatement(720) into Block(721) at 6", "Insert SimpleName: sb(723) into MethodInvocation(728) at 0", "Insert SimpleName: append(724) into MethodInvocation(728) at 1", "Insert CastExpression(727) into MethodInvocation(728) at 2", "Insert SimpleName: currEntry(852) into MethodInvocation(858) at 0", "Insert SimpleName: setUserId(853) into MethodInvocation(858) at 1", "Insert MethodInvocation(857) into MethodInvocation(858) at 2", "Insert MethodInvocation(868) into ExpressionStatement(869) at 0", "Insert StringLiteral: \"size\"(871) into MethodInvocation(874) at 0", "Insert SimpleName: equals(872) into MethodInvocation(874) at 1", "Insert SimpleName: key(873) into MethodInvocation(874) at 2", "Insert ExpressionStatement(882) into Block(883) at 0", "Insert SimpleName: br(638) into MethodInvocation(640) at 0", "Insert SimpleName: read(639) into MethodInvocation(640) at 1", "Insert SimpleType: String(653) into VariableDeclarationStatement(659) at 0", "Insert VariableDeclarationFragment(658) into VariableDeclarationStatement(659) at 1", "Insert ArrayType: char[](662) into VariableDeclarationStatement(672) at 0", "Insert VariableDeclarationFragment(671) into VariableDeclarationStatement(672) at 1", "Insert PrimitiveType: int(673) into VariableDeclarationStatement(680) at 0", "Insert VariableDeclarationFragment(679) into VariableDeclarationStatement(680) at 1", "Insert InfixExpression: !=(685) into IfStatement(699) at 0", "Insert Block(698) into IfStatement(699) at 1", "Insert SimpleType: String(701) into VariableDeclarationStatement(713) at 0", "Insert VariableDeclarationFragment(712) into VariableDeclarationStatement(713) at 1", "Insert MethodInvocation(718) into ExpressionStatement(719) at 0", "Insert PrimitiveType: char(725) into CastExpression(727) at 0", "Insert SimpleName: ch(726) into CastExpression(727) at 1", "Insert SimpleName: Integer(854) into MethodInvocation(857) at 0", "Insert SimpleName: parseInt(855) into MethodInvocation(857) at 1", "Insert SimpleName: val(856) into MethodInvocation(857) at 2", "Insert SimpleName: currEntry(865) into MethodInvocation(868) at 0", "Insert SimpleName: setUserName(866) into MethodInvocation(868) at 1", "Insert SimpleName: val(867) into MethodInvocation(868) at 2", "Insert MethodInvocation(881) into ExpressionStatement(882) at 0", "Insert SimpleName: String(652) into SimpleType: String(653) at 0", "Insert SimpleName: keyword(654) into VariableDeclarationFragment(658) at 0", "Insert MethodInvocation(657) into VariableDeclarationFragment(658) at 1", "Insert PrimitiveType: char(660) into ArrayType: char[](662) at 0", "Insert Dimension(661) into ArrayType: char[](662) at 1", "Insert SimpleName: cbuf(663) into VariableDeclarationFragment(671) at 0", "Insert ArrayCreation(670) into VariableDeclarationFragment(671) at 1", "Insert SimpleName: got(674) into VariableDeclarationFragment(679) at 0", "Insert MethodInvocation(678) into VariableDeclarationFragment(679) at 1", "Insert SimpleName: got(681) into InfixExpression: !=(685) at 0", "Insert InfixExpression: -(684) into InfixExpression: !=(685) at 1", "Insert ThrowStatement(697) into Block(698) at 0", "Insert SimpleName: String(700) into SimpleType: String(701) at 0", "Insert SimpleName: value(702) into VariableDeclarationFragment(712) at 0", "Insert ClassInstanceCreation(711) into VariableDeclarationFragment(712) at 1", "Insert SimpleName: headers(714) into MethodInvocation(718) at 0", "Insert SimpleName: put(715) into MethodInvocation(718) at 1", "Insert SimpleName: keyword(716) into MethodInvocation(718) at 2", "Insert SimpleName: value(717) into MethodInvocation(718) at 3", "Insert SimpleName: currEntry(875) into MethodInvocation(881) at 0", "Insert SimpleName: setSize(876) into MethodInvocation(881) at 1", "Insert MethodInvocation(880) into MethodInvocation(881) at 2", "Insert SimpleName: sb(655) into MethodInvocation(657) at 0", "Insert SimpleName: toString(656) into MethodInvocation(657) at 1", "Insert ArrayType: char[](666) into ArrayCreation(670) at 0", "Insert InfixExpression: -(669) into ArrayCreation(670) at 1", "Insert SimpleName: br(675) into MethodInvocation(678) at 0", "Insert SimpleName: read(676) into MethodInvocation(678) at 1", "Insert SimpleName: cbuf(677) into MethodInvocation(678) at 2", "Insert SimpleName: len(682) into InfixExpression: -(684) at 0", "Insert SimpleName: read(683) into InfixExpression: -(684) at 1", "Insert ClassInstanceCreation(696) into ThrowStatement(697) at 0", "Insert SimpleType: String(704) into ClassInstanceCreation(711) at 0", "Insert SimpleName: cbuf(705) into ClassInstanceCreation(711) at 1", "Insert NumberLiteral: 0(706) into ClassInstanceCreation(711) at 2", "Insert InfixExpression: -(710) into ClassInstanceCreation(711) at 3", "Insert SimpleName: Long(877) into MethodInvocation(880) at 0", "Insert SimpleName: parseLong(878) into MethodInvocation(880) at 1", "Insert SimpleName: val(879) into MethodInvocation(880) at 2", "Insert PrimitiveType: char(664) into ArrayType: char[](666) at 0", "Insert Dimension(665) into ArrayType: char[](666) at 1", "Insert SimpleName: len(667) into InfixExpression: -(669) at 0", "Insert SimpleName: read(668) into InfixExpression: -(669) at 1", "Insert SimpleType: IOException(687) into ClassInstanceCreation(696) at 0", "Insert InfixExpression: +(695) into ClassInstanceCreation(696) at 1", "Insert SimpleName: String(703) into SimpleType: String(704) at 0", "Insert SimpleName: len(707) into InfixExpression: -(710) at 0", "Insert SimpleName: read(708) into InfixExpression: -(710) at 1", "Insert NumberLiteral: 1(709) into InfixExpression: -(710) at 2", "Insert SimpleName: IOException(686) into SimpleType: IOException(687) at 0", "Insert StringLiteral: \"Failed to read Paxheader. Expected \"(688) into InfixExpression: +(695) at 0", "Insert ParenthesizedExpression(692) into InfixExpression: +(695) at 1", "Insert StringLiteral: \" chars, read \"(693) into InfixExpression: +(695) at 2", "Insert SimpleName: got(694) into InfixExpression: +(695) at 3", "Insert InfixExpression: -(691) into ParenthesizedExpression(692) at 0", "Insert SimpleName: len(689) into InfixExpression: -(691) at 0", "Insert SimpleName: read(690) into InfixExpression: -(691) at 1"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}