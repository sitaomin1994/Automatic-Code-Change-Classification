{"application": "apache-avro", "csha": "fa0059c55a31813634188eb85e53b68e33644489", "files": [{"GuavaClasses_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: com.google.common.cache.CacheBuilder to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: com.google.common.cache.CacheLoader to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: com.google.common.cache.LoadingCache to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getName to MethodInvocation at 1", "INS SimpleType: LoadingCache to TypeLiteral at 0", "INS SimpleName: LoadingCache to SimpleType: LoadingCache at 0", "INS TypeLiteral to MethodInvocation at 0", "INS ExpressionStatement to Block at 2"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS TypeLiteral to MethodInvocation at 0", "INS SimpleName: getName to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: CacheBuilder to SimpleType: CacheBuilder at 0", "INS ExpressionStatement to Block at 3", "INS SimpleType: CacheBuilder to TypeLiteral at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS TypeLiteral to MethodInvocation at 0", "INS SimpleType: CacheLoader to TypeLiteral at 0", "INS ExpressionStatement to Block at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getName to MethodInvocation at 1", "INS SimpleName: CacheLoader to SimpleType: CacheLoader at 0"]}]}}, {"GuavaClasses_diff": {"operations": ["Insert ImportDeclaration(18) into CompilationUnit(62) at 1", "Insert ImportDeclaration(20) into CompilationUnit(62) at 2", "Insert ImportDeclaration(22) into CompilationUnit(62) at 3", "Insert QualifiedName: com.google.common.cache.CacheBuilder(17) into ImportDeclaration(18) at 0", "Insert QualifiedName: com.google.common.cache.CacheLoader(19) into ImportDeclaration(20) at 0", "Insert QualifiedName: com.google.common.cache.LoadingCache(21) into ImportDeclaration(22) at 0", "Insert ExpressionStatement(46) into Block(59) at 2", "Insert ExpressionStatement(52) into Block(59) at 3", "Insert ExpressionStatement(58) into Block(59) at 4", "Insert MethodInvocation(45) into ExpressionStatement(46) at 0", "Insert MethodInvocation(51) into ExpressionStatement(52) at 0", "Insert MethodInvocation(57) into ExpressionStatement(58) at 0", "Insert TypeLiteral(43) into MethodInvocation(45) at 0", "Insert SimpleName: getName(44) into MethodInvocation(45) at 1", "Insert TypeLiteral(49) into MethodInvocation(51) at 0", "Insert SimpleName: getName(50) into MethodInvocation(51) at 1", "Insert TypeLiteral(55) into MethodInvocation(57) at 0", "Insert SimpleName: getName(56) into MethodInvocation(57) at 1", "Insert SimpleType: LoadingCache(42) into TypeLiteral(43) at 0", "Insert SimpleType: CacheBuilder(48) into TypeLiteral(49) at 0", "Insert SimpleType: CacheLoader(54) into TypeLiteral(55) at 0", "Insert SimpleName: LoadingCache(41) into SimpleType: LoadingCache(42) at 0", "Insert SimpleName: CacheBuilder(47) into SimpleType: CacheBuilder(48) at 0", "Insert SimpleName: CacheLoader(53) into SimpleType: CacheLoader(54) at 0"]}}, {"SpecificData_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 15"]}, {"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS ImportDeclaration to CompilationUnit at 15", "INS QualifiedName: com.google.common.cache.CacheLoader to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS ImportDeclaration to CompilationUnit at 16", "INS QualifiedName: com.google.common.cache.LoadingCache to ImportDeclaration at 0"]}, {"root": "UPDATE from java.util.WeakHashMap to com.google.common.cache.CacheBuilder", "operations": ["UPD QualifiedName: java.util.WeakHashMap from java.util.WeakHashMap to com.google.common.cache.CacheBuilder"]}, {"root": "UPDATE from WeakHashMap<java.lang.reflect.Type,Schema> to LoadingCache<java.lang.reflect.Type,Schema>", "operations": ["UPD ParameterizedType: WeakHashMap<java.lang.reflect.Type,Schema> from WeakHashMap<java.lang.reflect.Type,Schema> to LoadingCache<java.lang.reflect.Type,Schema>"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Schema to MethodDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS QualifiedName: java.lang.reflect.Type to SimpleType: java.lang.reflect.Type at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: java.lang.reflect.Type to SingleVariableDeclaration at 0", "INS SimpleName: type to SingleVariableDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS CastExpression to ConditionalExpression at 1", "INS InstanceofExpression to ParenthesizedExpression at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: e to InstanceofExpression at 0", "INS Block to TryStatement at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS Block to CatchClause at 1", "INS SimpleType: AvroRuntimeException to InstanceofExpression at 1", "INS SimpleName: AvroRuntimeException to SimpleType: AvroRuntimeException at 0", "INS ReturnStatement to Block at 0", "INS TryStatement to Block at 0", "INS ClassInstanceCreation to ConditionalExpression at 2", "INS SimpleType: AvroRuntimeException to ClassInstanceCreation at 0", "INS SimpleName: getCause to MethodInvocation at 1", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: e to MethodInvocation at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: e to ClassInstanceCreation at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: AvroRuntimeException to SimpleType: AvroRuntimeException at 0", "INS CatchClause to TryStatement at 1", "INS SimpleType: AvroRuntimeException to CastExpression at 0", "INS SimpleName: AvroRuntimeException to SimpleType: AvroRuntimeException at 0", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS ConditionalExpression to ThrowStatement at 0"]}, {"root": "UPDATE from WeakHashMap to LoadingCache", "operations": ["UPD SimpleType: WeakHashMap from WeakHashMap to LoadingCache", "UPD SimpleName: WeakHashMap from WeakHashMap to LoadingCache"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: build to MethodInvocation at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: weakKeys to MethodInvocation at 1", "INS SimpleName: CacheBuilder to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: AvroRuntimeException to SimpleType: AvroRuntimeException at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: AvroRuntimeException to MethodDeclaration at 4", "INS SimpleName: newBuilder to MethodInvocation at 1", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: load to MethodDeclaration at 2"]}, {"root": "UPDATE from WeakHashMap<java.lang.reflect.Type,Schema> to CacheLoader<java.lang.reflect.Type,Schema>", "operations": ["UPD ParameterizedType: WeakHashMap<java.lang.reflect.Type,Schema> from WeakHashMap<java.lang.reflect.Type,Schema> to CacheLoader<java.lang.reflect.Type,Schema>"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ParameterizedType: WeakHashMap<java.lang.reflect.Type,Schema> to ClassInstanceCreation at 0"]}, {"root": "UPDATE from WeakHashMap to CacheLoader", "operations": ["UPD SimpleType: WeakHashMap from WeakHashMap to CacheLoader", "UPD SimpleName: WeakHashMap from WeakHashMap to CacheLoader"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Schema to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 5"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS ReturnStatement to Block at 0"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV MethodInvocation to ReturnStatement at 0"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: schema", "DEL ExpressionStatement", "DEL Assignment: ="]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: schemaCache", "DEL SimpleName: put", "DEL SimpleName: schema", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: type"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation"]}, {"root": "DEL Block", "operations": ["DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL ReturnStatement", "DEL InfixExpression: ==", "DEL IfStatement", "DEL Block", "DEL SimpleName: schema", "DEL SimpleName: schema", "DEL SimpleName: schema", "DEL VariableDeclarationStatement"]}]}}, {"SpecificData_diff": {"operations": ["Move ImportDeclaration(30) into CompilationUnit(1834) at 15", "Insert ImportDeclaration(46) into CompilationUnit(1834) at 15", "Insert ImportDeclaration(48) into CompilationUnit(1834) at 16", "Update QualifiedName: java.util.WeakHashMap(29) to com.google.common.cache.CacheBuilder", "Insert QualifiedName: com.google.common.cache.CacheLoader(45) into ImportDeclaration(46) at 0", "Insert QualifiedName: com.google.common.cache.LoadingCache(47) into ImportDeclaration(48) at 0", "Update ParameterizedType: WeakHashMap<java.lang.reflect.Type,Schema>(873) to LoadingCache<java.lang.reflect.Type,Schema>", "Move SimpleType: Schema(897) into MethodDeclaration(963) at 2", "Insert SingleVariableDeclaration(931) into MethodDeclaration(963) at 4", "Insert Block(962) into MethodDeclaration(963) at 5", "Update SimpleType: WeakHashMap(868) to LoadingCache", "Insert MethodInvocation(918) into VariableDeclarationFragment(919) at 1", "Insert SimpleType: java.lang.reflect.Type(929) into SingleVariableDeclaration(931) at 0", "Insert SimpleName: type(930) into SingleVariableDeclaration(931) at 1", "Insert TryStatement(961) into Block(962) at 0", "Update SimpleName: WeakHashMap(867) to LoadingCache", "Insert MethodInvocation(883) into MethodInvocation(918) at 0", "Insert SimpleName: build(884) into MethodInvocation(918) at 1", "Insert ClassInstanceCreation(917) into MethodInvocation(918) at 2", "Insert QualifiedName: java.lang.reflect.Type(928) into SimpleType: java.lang.reflect.Type(929) at 0", "Insert Block(937) into TryStatement(961) at 0", "Insert CatchClause(960) into TryStatement(961) at 1", "Insert MethodInvocation(881) into MethodInvocation(883) at 0", "Insert SimpleName: weakKeys(882) into MethodInvocation(883) at 1", "Update ParameterizedType: WeakHashMap<java.lang.reflect.Type,Schema>(881) to CacheLoader<java.lang.reflect.Type,Schema>", "Move ParameterizedType: WeakHashMap<java.lang.reflect.Type,Schema>(881) into ClassInstanceCreation(917) at 0", "Insert AnonymousClassDeclaration(916) into ClassInstanceCreation(917) at 1", "Insert ReturnStatement(936) into Block(937) at 0", "Insert SingleVariableDeclaration(941) into CatchClause(960) at 0", "Insert Block(959) into CatchClause(960) at 1", "Insert SimpleName: CacheBuilder(879) into MethodInvocation(881) at 0", "Insert SimpleName: newBuilder(880) into MethodInvocation(881) at 1", "Update SimpleType: WeakHashMap(876) to CacheLoader", "Insert MethodDeclaration(915) into AnonymousClassDeclaration(916) at 0", "Move MethodInvocation(902) into ReturnStatement(936) at 0", "Insert SimpleType: Exception(939) into SingleVariableDeclaration(941) at 0", "Insert SimpleName: e(940) into SingleVariableDeclaration(941) at 1", "Insert ThrowStatement(958) into Block(959) at 0", "Update SimpleName: WeakHashMap(875) to CacheLoader", "Insert Modifier: public(892) into MethodDeclaration(915) at 0", "Move SimpleType: Schema(890) into MethodDeclaration(915) at 1", "Insert SimpleName: load(895) into MethodDeclaration(915) at 2", "Move SingleVariableDeclaration(895) into MethodDeclaration(915) at 3", "Insert SimpleType: AvroRuntimeException(901) into MethodDeclaration(915) at 4", "Move Block(928) into MethodDeclaration(915) at 5", "Insert SimpleName: Exception(938) into SimpleType: Exception(939) at 0", "Insert ConditionalExpression(957) into ThrowStatement(958) at 0", "Insert SimpleName: AvroRuntimeException(900) into SimpleType: AvroRuntimeException(901) at 0", "Insert ReturnStatement(913) into Block(914) at 0", "Insert ParenthesizedExpression(946) into ConditionalExpression(957) at 0", "Insert CastExpression(952) into ConditionalExpression(957) at 1", "Insert ClassInstanceCreation(956) into ConditionalExpression(957) at 2", "Move MethodInvocation(919) into ReturnStatement(913) at 0", "Insert InstanceofExpression(945) into ParenthesizedExpression(946) at 0", "Insert SimpleType: AvroRuntimeException(948) into CastExpression(952) at 0", "Insert MethodInvocation(951) into CastExpression(952) at 1", "Insert SimpleType: AvroRuntimeException(954) into ClassInstanceCreation(956) at 0", "Insert SimpleName: e(955) into ClassInstanceCreation(956) at 1", "Insert SimpleName: e(942) into InstanceofExpression(945) at 0", "Insert SimpleType: AvroRuntimeException(944) into InstanceofExpression(945) at 1", "Insert SimpleName: AvroRuntimeException(947) into SimpleType: AvroRuntimeException(948) at 0", "Insert SimpleName: e(949) into MethodInvocation(951) at 0", "Insert SimpleName: getCause(950) into MethodInvocation(951) at 1", "Insert SimpleName: AvroRuntimeException(953) into SimpleType: AvroRuntimeException(954) at 0", "Insert SimpleName: AvroRuntimeException(943) into SimpleType: AvroRuntimeException(944) at 0", "Delete SimpleName: schema(908)", "Delete Assignment: =(920)", "Delete ExpressionStatement(921)", "Delete SimpleName: schemaCache(922)", "Delete SimpleName: put(923)", "Delete SimpleName: type(924)", "Delete SimpleName: schema(925)", "Delete MethodInvocation(926)", "Delete ExpressionStatement(927)", "Delete ClassInstanceCreation(882)", "Delete SimpleName: schema(898)", "Delete VariableDeclarationFragment(903)", "Delete VariableDeclarationStatement(904)", "Delete SimpleName: schema(905)", "Delete NullLiteral(906)", "Delete InfixExpression: ==(907)", "Delete IfStatement(929)", "Delete SimpleName: schema(930)", "Delete ReturnStatement(931)", "Delete Block(932)"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}