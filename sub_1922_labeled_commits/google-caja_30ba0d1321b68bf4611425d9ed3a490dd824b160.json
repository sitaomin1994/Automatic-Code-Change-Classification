{"application": "google-caja", "csha": "30ba0d1321b68bf4611425d9ed3a490dd824b160", "files": [{"AbstractParseTreeNode_cluster": {"actions": [{"root": "UPDATE from Visitor to ParseTreeNodeVisitor", "operations": ["UPD SimpleType: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleName: Visitor from Visitor to ParseTreeNodeVisitor"]}, {"root": "INS EnhancedForStatement to Block at 2", "operations": ["INS SimpleType: ParseTreeNode to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: getImmutableFacet to MethodInvocation at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: child to SingleVariableDeclaration at 1", "INS EnhancedForStatement to Block at 2", "INS SimpleName: children to MethodInvocation at 0", "INS SimpleName: ParseTreeNode to SimpleType: ParseTreeNode at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV BreakStatement to SwitchStatement at 9"]}, {"root": "INS ThisExpression to MethodInvocation at 2", "operations": ["INS ThisExpression to MethodInvocation at 2"]}, {"root": "INS SimpleName: child to MethodInvocation at 0", "operations": ["INS SimpleName: child to MethodInvocation at 0"]}, {"root": "UPDATE from visitChildren to visitPreOrder", "operations": ["UPD SimpleName: visitChildren from visitChildren to visitPreOrder"]}, {"root": "DEL EnumConstantDeclaration", "operations": ["DEL SimpleName: PREORDER_RO", "DEL EnumConstantDeclaration"]}, {"root": "DEL SwitchCase", "operations": ["DEL SimpleName: PREORDER_RO", "DEL SwitchCase"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: child", "DEL SimpleName: ancestors", "DEL ExpressionStatement", "DEL SimpleName: v", "DEL MethodInvocation", "DEL SimpleName: visitPreOrder"]}, {"root": "DEL BreakStatement", "operations": ["DEL BreakStatement"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL ParameterizedType: AncestorChain<?>", "DEL SimpleName: ancestors", "DEL SimpleName: AncestorChain", "DEL SimpleType: AncestorChain", "DEL WildcardType: ?"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: instance", "DEL ExpressionStatement", "DEL SimpleName: ancestors", "DEL MethodInvocation", "DEL ThisExpression", "DEL Assignment: =", "DEL SimpleName: ancestors", "DEL SimpleName: AncestorChain"]}, {"root": "DEL SimpleName: ancestors", "operations": ["DEL SimpleName: ancestors"]}, {"root": "DEL SimpleName: ancestors", "operations": ["DEL SimpleName: ancestors"]}, {"root": "DEL QualifiedName: TraversalType.PREORDER_RO", "operations": ["DEL QualifiedName: TraversalType.PREORDER_RO"]}]}}, {"AbstractParseTreeNode_diff": {"operations": ["Update SimpleType: Visitor(1610) to ParseTreeNodeVisitor", "Insert EnhancedForStatement(1624) into Block(1627) at 1", "Update SimpleName: Visitor(1609) to ParseTreeNodeVisitor", "Insert SingleVariableDeclaration(1614) into EnhancedForStatement(1624) at 0", "Insert MethodInvocation(1617) into EnhancedForStatement(1624) at 1", "Insert Block(1623) into EnhancedForStatement(1624) at 2", "Insert SimpleType: ParseTreeNode(1612) into SingleVariableDeclaration(1614) at 0", "Insert SimpleName: child(1613) into SingleVariableDeclaration(1614) at 1", "Insert SimpleName: children(1615) into MethodInvocation(1617) at 0", "Insert SimpleName: getImmutableFacet(1616) into MethodInvocation(1617) at 1", "Move ExpressionStatement(1641) into Block(1623) at 0", "Move BreakStatement(1462) into SwitchStatement(1469) at 9", "Insert ThisExpression(1604) into MethodInvocation(1605) at 2", "Insert SimpleName: ParseTreeNode(1611) into SimpleType: ParseTreeNode(1612) at 0", "Insert SimpleName: child(1618) into MethodInvocation(1621) at 0", "Update SimpleName: visitChildren(1636) to visitPreOrder", "Delete SimpleName: PREORDER_RO(1198)", "Delete EnumConstantDeclaration(1199)", "Delete SimpleName: PREORDER_RO(1454)", "Delete SwitchCase(1455)", "Delete SimpleName: child(1456)", "Delete SimpleName: visitPreOrder(1457)", "Delete SimpleName: v(1458)", "Delete SimpleName: ancestors(1459)", "Delete MethodInvocation(1460)", "Delete ExpressionStatement(1461)", "Delete BreakStatement(1479)", "Delete SimpleName: AncestorChain(1613)", "Delete SimpleType: AncestorChain(1614)", "Delete WildcardType: ?(1615)", "Delete ParameterizedType: AncestorChain<?>(1616)", "Delete SimpleName: ancestors(1617)", "Delete SingleVariableDeclaration(1618)", "Delete SimpleName: ancestors(1619)", "Delete SimpleName: AncestorChain(1620)", "Delete SimpleName: instance(1621)", "Delete SimpleName: ancestors(1622)", "Delete ThisExpression(1623)", "Delete MethodInvocation(1624)", "Delete Assignment: =(1625)", "Delete ExpressionStatement(1626)", "Delete SimpleName: ancestors(1629)", "Delete SimpleName: ancestors(1638)", "Delete QualifiedName: TraversalType.PREORDER_RO(1639)"]}}, {"ParseTreeNode_cluster": {"actions": [{"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 1", "operations": ["INS MarkerAnnotation to MethodDeclaration at 1", "INS SimpleName: Deprecated to MarkerAnnotation at 0"]}, {"root": "INS TagElement: @return to Javadoc at 1", "operations": ["INS TagElement: @return to Javadoc at 1", "INS TextElement:  false iff visit returns false for this node. to TagElement: @return at 0"]}, {"root": "UPDATE from Visitor to ParseTreeNodeVisitor", "operations": ["UPD SimpleName: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleType: Visitor from Visitor to ParseTreeNodeVisitor"]}, {"root": "INS TextElement: <p> to TagElement at 5", "operations": ["INS TextElement: <p> to TagElement at 5"]}, {"root": "INS TextElement: This is deprecated because it needs O(n**2) time and O(n) space, though to TagElement at 6", "operations": ["INS TextElement: This is deprecated because it needs O(n**2) time and O(n) space, though to TagElement at 6"]}, {"root": "INS TextElement: we don't have a replacement for all cases yet. to TagElement at 7", "operations": ["INS TextElement: we don't have a replacement for all cases yet. to TagElement at 7"]}, {"root": "UPDATE from Like  to Call ", "operations": ["UPD TextElement: Like  from Like  to Call "]}, {"root": "UPDATE from @link to @code", "operations": ["UPD TagElement: @link from @link to @code"]}, {"root": "UPDATE from , but assumes the Visitor does not to  on every node in the tree in pre-order.", "operations": ["UPD TextElement: , but assumes the Visitor does not from , but assumes the Visitor does not to  on every node in the tree in pre-order."]}, {"root": "INS TextElement: The visit function is allowed to modify node and its children, to TagElement at 3", "operations": ["INS TextElement: The visit function is allowed to modify node and its children, to TagElement at 3"]}, {"root": "UPDATE from modify the tree. to but it shouldn't modify node's parent or siblings.", "operations": ["UPD TextElement: modify the tree. from modify the tree. to but it shouldn't modify node's parent or siblings."]}, {"root": "INS TextElement: If visit returns false, traversal skips the node's children. to TagElement at 5", "operations": ["INS TextElement: If visit returns false, traversal skips the node's children. to TagElement at 5"]}, {"root": "INS TextElement:  visit(node) to TagElement: @link at 0", "operations": ["INS TextElement:  visit(node) to TagElement: @link at 0"]}, {"root": "DEL MemberRef", "operations": ["DEL SimpleName: acceptPreOrder", "DEL MemberRef"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: ancestors", "DEL WildcardType: ?", "DEL ParameterizedType: AncestorChain<?>", "DEL SimpleType: AncestorChain", "DEL SingleVariableDeclaration", "DEL SimpleName: AncestorChain"]}]}}, {"ParseTreeNode_diff": {"operations": ["Insert MarkerAnnotation(135) into MethodDeclaration(148) at 1", "Insert MarkerAnnotation(165) into MethodDeclaration(178) at 1", "Insert SimpleName: Deprecated(134) into MarkerAnnotation(135) at 0", "Insert SimpleName: Deprecated(164) into MarkerAnnotation(165) at 0", "Insert TagElement: @return(188) into Javadoc(189) at 1", "Update SimpleType: Visitor(183) to ParseTreeNodeVisitor", "Insert TextElement: <p>(121) into TagElement(124) at 5", "Insert TextElement: This is deprecated because it needs O(n**2) time and O(n) space, though(122) into TagElement(124) at 6", "Insert TextElement: we don't have a replacement for all cases yet.(123) into TagElement(124) at 7", "Update TextElement: Like (172) to Call ", "Update TagElement: @link(175) to @code", "Update TextElement: , but assumes the Visitor does not(176) to  on every node in the tree in pre-order.", "Insert TextElement: The visit function is allowed to modify node and its children,(183) into TagElement(186) at 3", "Update TextElement: modify the tree.(177) to but it shouldn't modify node's parent or siblings.", "Insert TextElement: If visit returns false, traversal skips the node's children.(185) into TagElement(186) at 5", "Insert TextElement:  false iff visit returns false for this node.(187) into TagElement: @return(188) at 0", "Update SimpleName: Visitor(182) to ParseTreeNodeVisitor", "Insert TextElement:  visit(node)(180) into TagElement: @code(181) at 0", "Delete SimpleName: acceptPreOrder(173)", "Delete MemberRef(174)", "Delete SimpleName: AncestorChain(186)", "Delete SimpleType: AncestorChain(187)", "Delete WildcardType: ?(188)", "Delete ParameterizedType: AncestorChain<?>(189)", "Delete SimpleName: ancestors(190)", "Delete SingleVariableDeclaration(191)"]}}, {"CssRewriter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: com.google.caja.parser.ParseTreeNodeVisitor to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "UPDATE from acceptPreOrder to visitPreOrder", "operations": ["UPD SimpleName: acceptPreOrder from acceptPreOrder to visitPreOrder", "UPD SimpleName: acceptPreOrder from acceptPreOrder to visitPreOrder", "UPD SimpleName: acceptPreOrder from acceptPreOrder to visitPreOrder", "UPD SimpleName: acceptPreOrder from acceptPreOrder to visitPreOrder", "UPD SimpleName: acceptPreOrder from acceptPreOrder to visitPreOrder", "UPD SimpleName: acceptPreOrder from acceptPreOrder to visitPreOrder"]}, {"root": "UPDATE from Visitor to ParseTreeNodeVisitor", "operations": ["UPD SimpleName: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleType: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleType: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleType: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleName: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleType: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleName: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleName: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleType: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleType: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleName: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleName: Visitor from Visitor to ParseTreeNodeVisitor"]}, {"root": "INS SimpleType: ParseTreeNode to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: ParseTreeNode to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from chain to node", "operations": ["UPD SimpleName: chain from chain to node", "UPD SimpleName: ancestors from ancestors to node"]}, {"root": "INS SimpleType: ParseTreeNode to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: ParseTreeNode to SingleVariableDeclaration at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: ParseTreeNode to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: node to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: node to SingleVariableDeclaration at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: ParseTreeNode to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: node to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: node to SingleVariableDeclaration at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: ParseTreeNode to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: node to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: node to SingleVariableDeclaration at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: ParseTreeNode to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: node to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: node to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from AncestorChain to ParseTreeNode", "operations": ["UPD SimpleName: AncestorChain from AncestorChain to ParseTreeNode", "UPD SimpleName: AncestorChain from AncestorChain to ParseTreeNode"]}, {"root": "MOVE from SimpleType: ParseTreeNode", "operations": ["MOV SimpleName: AncestorChain to SimpleType: ParseTreeNode at 0"]}, {"root": "MOVE from SimpleType: ParseTreeNode", "operations": ["MOV SimpleName: AncestorChain to SimpleType: ParseTreeNode at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: CssTree.Term to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleName: node to InstanceofExpression at 0", "operations": ["INS SimpleName: node to InstanceofExpression at 0"]}, {"root": "MOVE from CastExpression", "operations": ["MOV SimpleType: CssTree.Term to CastExpression at 0"]}, {"root": "INS SimpleName: node to CastExpression at 1", "operations": ["INS SimpleName: node to CastExpression at 1"]}, {"root": "INS SimpleName: node to InstanceofExpression at 0", "operations": ["INS SimpleName: node to InstanceofExpression at 0"]}, {"root": "INS SimpleName: node to MethodInvocation at 0", "operations": ["INS SimpleName: node to MethodInvocation at 0"]}, {"root": "DEL ParameterizedType: AncestorChain<?>", "operations": ["DEL WildcardType: ?", "DEL SimpleType: AncestorChain", "DEL ParameterizedType: AncestorChain<?>"]}, {"root": "DEL QualifiedName: chain.node", "operations": ["DEL QualifiedName: chain.node"]}, {"root": "DEL QualifiedName: chain.node", "operations": ["DEL QualifiedName: chain.node"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL ParameterizedType: AncestorChain<?>", "operations": ["DEL WildcardType: ?", "DEL SimpleType: AncestorChain", "DEL ParameterizedType: AncestorChain<?>"]}, {"root": "DEL QualifiedName: ancestors.node", "operations": ["DEL QualifiedName: ancestors.node"]}, {"root": "DEL QualifiedName: ancestors.node", "operations": ["DEL QualifiedName: ancestors.node"]}, {"root": "DEL QualifiedName: t.parent", "operations": ["DEL QualifiedName: t.parent"]}, {"root": "DEL ParameterizedType: AncestorChain<?>", "operations": ["DEL SimpleType: AncestorChain", "DEL ParameterizedType: AncestorChain<?>", "DEL WildcardType: ?", "DEL SimpleName: AncestorChain"]}, {"root": "DEL SimpleName: ancestors", "operations": ["DEL SimpleName: ancestors"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL QualifiedName: ancestors.node", "DEL VariableDeclarationFragment", "DEL SimpleName: node"]}, {"root": "DEL QualifiedName: t.parent", "operations": ["DEL QualifiedName: t.parent"]}, {"root": "DEL ParameterizedType: AncestorChain<?>", "operations": ["DEL SimpleType: AncestorChain", "DEL WildcardType: ?", "DEL SimpleName: AncestorChain", "DEL ParameterizedType: AncestorChain<?>"]}, {"root": "DEL SimpleName: ancestors", "operations": ["DEL SimpleName: ancestors"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: node", "DEL VariableDeclarationStatement", "DEL QualifiedName: ancestors.node", "DEL VariableDeclarationFragment"]}, {"root": "DEL QualifiedName: t.parent", "operations": ["DEL QualifiedName: t.parent"]}, {"root": "DEL ParameterizedType: AncestorChain<?>", "operations": ["DEL SimpleType: AncestorChain", "DEL ParameterizedType: AncestorChain<?>", "DEL SimpleName: AncestorChain", "DEL WildcardType: ?"]}, {"root": "DEL SimpleName: ancestors", "operations": ["DEL SimpleName: ancestors"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL QualifiedName: ancestors.node", "DEL VariableDeclarationStatement", "DEL SimpleName: node", "DEL VariableDeclarationFragment"]}, {"root": "DEL QualifiedName: t.parent", "operations": ["DEL QualifiedName: t.parent"]}, {"root": "DEL ParameterizedType: AncestorChain<?>", "operations": ["DEL SimpleName: AncestorChain", "DEL SimpleType: AncestorChain", "DEL ParameterizedType: AncestorChain<?>", "DEL WildcardType: ?"]}, {"root": "DEL SimpleName: ancestors", "operations": ["DEL SimpleName: ancestors"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: node", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL QualifiedName: ancestors.node"]}, {"root": "DEL QualifiedName: t.parent", "operations": ["DEL QualifiedName: t.parent"]}]}}, {"CssRewriter_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(4599) at 10", "Insert QualifiedName: com.google.caja.parser.ParseTreeNodeVisitor(20) into ImportDeclaration(21) at 0", "Update SimpleName: acceptPreOrder(741) to visitPreOrder", "Update SimpleName: acceptPreOrder(1244) to visitPreOrder", "Update SimpleName: acceptPreOrder(1957) to visitPreOrder", "Update SimpleName: acceptPreOrder(2075) to visitPreOrder", "Update SimpleName: acceptPreOrder(2319) to visitPreOrder", "Update SimpleName: acceptPreOrder(3087) to visitPreOrder", "Update SimpleType: Visitor(743) to ParseTreeNodeVisitor", "Update SimpleType: Visitor(1246) to ParseTreeNodeVisitor", "Update SimpleType: Visitor(1959) to ParseTreeNodeVisitor", "Update SimpleType: Visitor(2077) to ParseTreeNodeVisitor", "Update SimpleType: Visitor(2321) to ParseTreeNodeVisitor", "Update SimpleType: Visitor(3089) to ParseTreeNodeVisitor", "Update SimpleName: Visitor(742) to ParseTreeNodeVisitor", "Update SimpleName: Visitor(1245) to ParseTreeNodeVisitor", "Update SimpleName: Visitor(1958) to ParseTreeNodeVisitor", "Update SimpleName: Visitor(2076) to ParseTreeNodeVisitor", "Update SimpleName: Visitor(2320) to ParseTreeNodeVisitor", "Update SimpleName: Visitor(3088) to ParseTreeNodeVisitor", "Insert SimpleType: ParseTreeNode(750) into SingleVariableDeclaration(752) at 0", "Update SimpleName: chain(751) to node", "Insert SimpleType: ParseTreeNode(1250) into SingleVariableDeclaration(1252) at 0", "Update SimpleName: ancestors(1254) to node", "Move SimpleType: ParseTreeNode(1970) into SingleVariableDeclaration(1962) at 0", "Insert SimpleName: node(1961) into SingleVariableDeclaration(1962) at 1", "Move SimpleType: ParseTreeNode(2088) into SingleVariableDeclaration(2071) at 0", "Insert SimpleName: node(2070) into SingleVariableDeclaration(2071) at 1", "Move SimpleType: ParseTreeNode(2332) into SingleVariableDeclaration(2306) at 0", "Insert SimpleName: node(2305) into SingleVariableDeclaration(2306) at 1", "Move SimpleType: ParseTreeNode(3100) into SingleVariableDeclaration(3065) at 0", "Insert SimpleName: node(3064) into SingleVariableDeclaration(3065) at 1", "Update SimpleName: AncestorChain(747) to ParseTreeNode", "Move SimpleName: AncestorChain(747) into SimpleType: ParseTreeNode(750) at 0", "Update SimpleName: AncestorChain(1250) to ParseTreeNode", "Move SimpleName: AncestorChain(1250) into SimpleType: ParseTreeNode(1250) at 0", "Move SimpleType: CssTree.Term(1270) into VariableDeclarationStatement(1271) at 0", "Insert SimpleName: node(753) into InstanceofExpression(756) at 0", "Move SimpleType: CssTree.Term(1267) into CastExpression(1269) at 0", "Insert SimpleName: node(1268) into CastExpression(1269) at 1", "Insert SimpleName: node(1253) into InstanceofExpression(1256) at 0", "Insert SimpleName: node(762) into MethodInvocation(764) at 0", "Delete SimpleType: AncestorChain(748)", "Delete WildcardType: ?(749)", "Delete ParameterizedType: AncestorChain<?>(750)", "Delete QualifiedName: chain.node(753)", "Delete QualifiedName: chain.node(762)", "Delete NullLiteral(813)", "Delete SimpleType: AncestorChain(1251)", "Delete WildcardType: ?(1252)", "Delete ParameterizedType: AncestorChain<?>(1253)", "Delete QualifiedName: ancestors.node(1256)", "Delete QualifiedName: ancestors.node(1271)", "Delete QualifiedName: t.parent(1485)", "Delete SimpleName: AncestorChain(1963)", "Delete SimpleType: AncestorChain(1964)", "Delete WildcardType: ?(1965)", "Delete ParameterizedType: AncestorChain<?>(1966)", "Delete SimpleName: ancestors(1967)", "Delete SimpleName: node(1971)", "Delete QualifiedName: ancestors.node(1972)", "Delete VariableDeclarationFragment(1973)", "Delete VariableDeclarationStatement(1974)", "Delete QualifiedName: t.parent(2058)", "Delete SimpleName: AncestorChain(2081)", "Delete SimpleType: AncestorChain(2082)", "Delete WildcardType: ?(2083)", "Delete ParameterizedType: AncestorChain<?>(2084)", "Delete SimpleName: ancestors(2085)", "Delete SimpleName: node(2089)", "Delete QualifiedName: ancestors.node(2090)", "Delete VariableDeclarationFragment(2091)", "Delete VariableDeclarationStatement(2092)", "Delete QualifiedName: t.parent(2256)", "Delete SimpleName: AncestorChain(2325)", "Delete SimpleType: AncestorChain(2326)", "Delete WildcardType: ?(2327)", "Delete ParameterizedType: AncestorChain<?>(2328)", "Delete SimpleName: ancestors(2329)", "Delete SimpleName: node(2333)", "Delete QualifiedName: ancestors.node(2334)", "Delete VariableDeclarationFragment(2335)", "Delete VariableDeclarationStatement(2336)", "Delete QualifiedName: t.parent(2421)", "Delete SimpleName: AncestorChain(3093)", "Delete SimpleType: AncestorChain(3094)", "Delete WildcardType: ?(3095)", "Delete ParameterizedType: AncestorChain<?>(3096)", "Delete SimpleName: ancestors(3097)", "Delete SimpleName: node(3101)", "Delete QualifiedName: ancestors.node(3102)", "Delete VariableDeclarationFragment(3103)", "Delete VariableDeclarationStatement(3104)", "Delete QualifiedName: t.parent(3293)"]}}, {"CssValidator_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 9"]}, {"root": "UPDATE from com.google.caja.parser.Visitor to com.google.caja.parser.ParseTreeNodeVisitor", "operations": ["UPD QualifiedName: com.google.caja.parser.Visitor from com.google.caja.parser.Visitor to com.google.caja.parser.ParseTreeNodeVisitor"]}, {"root": "UPDATE from acceptPreOrder to visitPreOrder", "operations": ["UPD SimpleName: acceptPreOrder from acceptPreOrder to visitPreOrder"]}, {"root": "UPDATE from Visitor to ParseTreeNodeVisitor", "operations": ["UPD SimpleName: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleType: Visitor from Visitor to ParseTreeNodeVisitor"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleType: ParseTreeNode to SingleVariableDeclaration at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS Block to MethodDeclaration at 4"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from SimpleType: ParseTreeNode", "operations": ["MOV SimpleName: ParseTreeNode to SimpleType: ParseTreeNode at 0"]}, {"root": "UPDATE from n to node", "operations": ["UPD SimpleName: n from n to node"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleType: AncestorChain", "DEL ParameterizedType: AncestorChain<?>", "DEL SimpleName: ancestors", "DEL WildcardType: ?", "DEL SimpleName: AncestorChain"]}, {"root": "DEL Block", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleType: ParseTreeNode", "DEL QualifiedName: ancestors.node", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleName: n"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}]}}, {"CssValidator_diff": {"operations": ["Move ImportDeclaration(15) into CompilationUnit(5622) at 9", "Update QualifiedName: com.google.caja.parser.Visitor(16) to com.google.caja.parser.ParseTreeNodeVisitor", "Update SimpleName: acceptPreOrder(5516) to visitPreOrder", "Update SimpleType: Visitor(5518) to ParseTreeNodeVisitor", "Update SimpleName: Visitor(5517) to ParseTreeNodeVisitor", "Insert SingleVariableDeclaration(5525) into MethodDeclaration(5541) at 3", "Insert Block(5540) into MethodDeclaration(5541) at 4", "Insert SimpleType: ParseTreeNode(5523) into SingleVariableDeclaration(5525) at 0", "Insert SimpleName: node(5524) into SingleVariableDeclaration(5525) at 1", "Move ExpressionStatement(5545) into Block(5540) at 0", "Move ReturnStatement(5547) into Block(5540) at 1", "Move SimpleName: ParseTreeNode(5528) into SimpleType: ParseTreeNode(5523) at 0", "Update SimpleName: n(5534) to node", "Delete SimpleName: AncestorChain(5522)", "Delete SimpleType: AncestorChain(5523)", "Delete WildcardType: ?(5524)", "Delete ParameterizedType: AncestorChain<?>(5525)", "Delete SimpleName: ancestors(5526)", "Delete SingleVariableDeclaration(5527)", "Delete SimpleType: ParseTreeNode(5529)", "Delete SimpleName: n(5530)", "Delete QualifiedName: ancestors.node(5531)", "Delete VariableDeclarationFragment(5532)", "Delete VariableDeclarationStatement(5533)", "Delete Block(5548)", "Delete NullLiteral(5552)"]}}, {"ExpressionSanitizerCaja_cluster": {"actions": [{"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}]}}, {"ExpressionSanitizerCaja_diff": {"operations": ["Delete NullLiteral(200)"]}}, {"CssPropertySignature_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: com.google.caja.parser.ParseTreeNodeVisitor to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 35"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: children to EnhancedForStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: CssPropertySignature to SingleVariableDeclaration at 0", "INS SimpleName: v to MethodInvocation at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS Block to EnhancedForStatement at 2", "INS ReturnStatement to Block at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: visit to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 5", "INS IfStatement to Block at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: child to MethodInvocation at 0", "INS EnhancedForStatement to Block at 1", "INS ThisExpression to MethodInvocation at 2"]}, {"root": "UPDATE from Visitor to ParseTreeNodeVisitor", "operations": ["UPD SimpleType: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleName: Visitor from Visitor to ParseTreeNodeVisitor"]}, {"root": "UPDATE from ancestors to child", "operations": ["UPD SimpleName: ancestors from ancestors to child"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleName: ancestors to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from AncestorChain to CssPropertySignature", "operations": ["UPD SimpleName: AncestorChain from AncestorChain to CssPropertySignature"]}, {"root": "MOVE from SimpleType: CssPropertySignature", "operations": ["MOV SimpleName: AncestorChain to SimpleType: CssPropertySignature at 0"]}, {"root": "UPDATE from acceptPreOrder to visitPreOrder", "operations": ["UPD SimpleName: acceptPreOrder from acceptPreOrder to visitPreOrder"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: acceptPreOrder to MethodInvocation at 1", "MOV SimpleName: v to MethodInvocation at 2"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL WildcardType: ?", "DEL ParameterizedType: AncestorChain<?>", "DEL SimpleType: AncestorChain"]}, {"root": "DEL Block", "operations": ["DEL ReturnStatement", "DEL SimpleName: ancestors", "DEL MethodInvocation", "DEL Block"]}]}}, {"CssPropertySignature_diff": {"operations": ["Insert ImportDeclaration(13) into CompilationUnit(3150) at 6", "Move MethodDeclaration(1503) into TypeDeclaration: class(3149) at 35", "Insert QualifiedName: com.google.caja.parser.ParseTreeNodeVisitor(12) into ImportDeclaration(13) at 0", "Insert Block(1562) into MethodDeclaration(1563) at 5", "Update SimpleType: Visitor(1488) to ParseTreeNodeVisitor", "Insert IfStatement(1547) into Block(1562) at 0", "Insert EnhancedForStatement(1559) into Block(1562) at 1", "Insert ReturnStatement(1561) into Block(1562) at 2", "Update SimpleName: Visitor(1487) to ParseTreeNodeVisitor", "Insert PrefixExpression: !(1543) into IfStatement(1547) at 0", "Insert Block(1546) into IfStatement(1547) at 1", "Insert SingleVariableDeclaration(1551) into EnhancedForStatement(1559) at 0", "Insert SimpleName: children(1552) into EnhancedForStatement(1559) at 1", "Insert Block(1558) into EnhancedForStatement(1559) at 2", "Insert BooleanLiteral: true(1560) into ReturnStatement(1561) at 0", "Insert MethodInvocation(1542) into PrefixExpression: !(1543) at 0", "Insert ReturnStatement(1545) into Block(1546) at 0", "Insert SimpleType: CssPropertySignature(1549) into SingleVariableDeclaration(1551) at 0", "Update SimpleName: ancestors(1495) to child", "Move SimpleName: ancestors(1495) into SingleVariableDeclaration(1551) at 1", "Insert ExpressionStatement(1557) into Block(1558) at 0", "Insert SimpleName: v(1539) into MethodInvocation(1542) at 0", "Insert SimpleName: visit(1540) into MethodInvocation(1542) at 1", "Insert ThisExpression(1541) into MethodInvocation(1542) at 2", "Insert BooleanLiteral: false(1544) into ReturnStatement(1545) at 0", "Update SimpleName: AncestorChain(1491) to CssPropertySignature", "Move SimpleName: AncestorChain(1491) into SimpleType: CssPropertySignature(1549) at 0", "Insert MethodInvocation(1556) into ExpressionStatement(1557) at 0", "Insert SimpleName: child(1553) into MethodInvocation(1556) at 0", "Update SimpleName: acceptPreOrder(1497) to visitPreOrder", "Move SimpleName: acceptPreOrder(1497) into MethodInvocation(1556) at 1", "Move SimpleName: v(1498) into MethodInvocation(1556) at 2", "Delete SimpleType: AncestorChain(1492)", "Delete WildcardType: ?(1493)", "Delete ParameterizedType: AncestorChain<?>(1494)", "Delete SingleVariableDeclaration(1496)", "Delete SimpleName: ancestors(1499)", "Delete MethodInvocation(1500)", "Delete ReturnStatement(1501)", "Delete Block(1502)"]}}, {"NonAsciiCheckVisitor_cluster": {"actions": [{"root": "UPDATE from com.google.caja.parser.AncestorChain to com.google.caja.parser.ParseTreeNodeVisitor", "operations": ["UPD QualifiedName: com.google.caja.parser.AncestorChain from com.google.caja.parser.AncestorChain to com.google.caja.parser.ParseTreeNodeVisitor"]}, {"root": "UPDATE from com.google.caja.parser.Visitor to com.google.caja.parser.ParseTreeNode", "operations": ["UPD QualifiedName: com.google.caja.parser.Visitor from com.google.caja.parser.Visitor to com.google.caja.parser.ParseTreeNode"]}, {"root": "UPDATE from Visitor to ParseTreeNodeVisitor", "operations": ["UPD SimpleType: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleName: Visitor from Visitor to ParseTreeNodeVisitor"]}, {"root": "INS SimpleType: ParseTreeNode to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: ParseTreeNode to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from ac to node", "operations": ["UPD SimpleName: ac from ac to node"]}, {"root": "UPDATE from AncestorChain to ParseTreeNode", "operations": ["UPD SimpleName: AncestorChain from AncestorChain to ParseTreeNode"]}, {"root": "MOVE from SimpleType: ParseTreeNode", "operations": ["MOV SimpleName: AncestorChain to SimpleType: ParseTreeNode at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Identifier to VariableDeclarationStatement at 0"]}, {"root": "MOVE from CastExpression", "operations": ["MOV SimpleType: Identifier to CastExpression at 0"]}, {"root": "INS SimpleName: node to CastExpression at 1", "operations": ["INS SimpleName: node to CastExpression at 1"]}, {"root": "INS SimpleName: node to InstanceofExpression at 0", "operations": ["INS SimpleName: node to InstanceofExpression at 0"]}, {"root": "INS SimpleName: node to MethodInvocation at 4", "operations": ["INS SimpleName: node to MethodInvocation at 4"]}, {"root": "INS SimpleName: node to MethodInvocation at 0", "operations": ["INS SimpleName: node to MethodInvocation at 0"]}, {"root": "DEL ParameterizedType: AncestorChain<?>", "operations": ["DEL SimpleType: AncestorChain", "DEL ParameterizedType: AncestorChain<?>", "DEL WildcardType: ?"]}, {"root": "DEL QualifiedName: ac.node", "operations": ["DEL QualifiedName: ac.node"]}, {"root": "DEL QualifiedName: ac.node", "operations": ["DEL QualifiedName: ac.node"]}, {"root": "DEL QualifiedName: ac.node", "operations": ["DEL QualifiedName: ac.node"]}, {"root": "DEL QualifiedName: ac.node", "operations": ["DEL QualifiedName: ac.node"]}]}}, {"NonAsciiCheckVisitor_diff": {"operations": ["Update QualifiedName: com.google.caja.parser.AncestorChain(2) to com.google.caja.parser.ParseTreeNodeVisitor", "Update QualifiedName: com.google.caja.parser.Visitor(4) to com.google.caja.parser.ParseTreeNode", "Update SimpleType: Visitor(22) to ParseTreeNodeVisitor", "Update SimpleName: Visitor(21) to ParseTreeNodeVisitor", "Insert SimpleType: ParseTreeNode(51) into SingleVariableDeclaration(53) at 0", "Update SimpleName: ac(54) to node", "Update SimpleName: AncestorChain(50) to ParseTreeNode", "Move SimpleName: AncestorChain(50) into SimpleType: ParseTreeNode(51) at 0", "Move SimpleType: Identifier(70) into VariableDeclarationStatement(72) at 0", "Move SimpleType: Identifier(67) into CastExpression(70) at 0", "Insert SimpleName: node(69) into CastExpression(70) at 1", "Insert SimpleName: node(54) into InstanceofExpression(57) at 0", "Insert SimpleName: node(102) into MethodInvocation(103) at 4", "Insert SimpleName: node(99) into MethodInvocation(101) at 0", "Delete SimpleType: AncestorChain(51)", "Delete WildcardType: ?(52)", "Delete ParameterizedType: AncestorChain<?>(53)", "Delete QualifiedName: ac.node(56)", "Delete QualifiedName: ac.node(71)", "Delete QualifiedName: ac.node(101)", "Delete QualifiedName: ac.node(104)"]}}, {"HtmlAttributeRewriter_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 11"]}, {"root": "UPDATE from com.google.caja.parser.Visitor to com.google.caja.parser.ParseTreeNodeVisitor", "operations": ["UPD QualifiedName: com.google.caja.parser.Visitor from com.google.caja.parser.Visitor to com.google.caja.parser.ParseTreeNodeVisitor"]}, {"root": "UPDATE from acceptPreOrder to visitPreOrder", "operations": ["UPD SimpleName: acceptPreOrder from acceptPreOrder to visitPreOrder"]}, {"root": "UPDATE from Visitor to ParseTreeNodeVisitor", "operations": ["UPD SimpleType: Visitor from Visitor to ParseTreeNodeVisitor", "UPD SimpleName: Visitor from Visitor to ParseTreeNodeVisitor"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: ParseTreeNode to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: node to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: node to SingleVariableDeclaration at 1"]}, {"root": "DEL ParameterizedType: AncestorChain<?>", "operations": ["DEL WildcardType: ?", "DEL SimpleName: AncestorChain", "DEL ParameterizedType: AncestorChain<?>", "DEL SimpleType: AncestorChain"]}, {"root": "DEL SimpleName: ancestors", "operations": ["DEL SimpleName: ancestors"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: node", "DEL QualifiedName: ancestors.node"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}]}}, {"HtmlAttributeRewriter_diff": {"operations": ["Move ImportDeclaration(27) into CompilationUnit(2105) at 11", "Update QualifiedName: com.google.caja.parser.Visitor(26) to com.google.caja.parser.ParseTreeNodeVisitor", "Update SimpleName: acceptPreOrder(1791) to visitPreOrder", "Update SimpleType: Visitor(1793) to ParseTreeNodeVisitor", "Update SimpleName: Visitor(1792) to ParseTreeNodeVisitor", "Move SimpleType: ParseTreeNode(1804) into SingleVariableDeclaration(1800) at 0", "Insert SimpleName: node(1799) into SingleVariableDeclaration(1800) at 1", "Delete SimpleName: AncestorChain(1797)", "Delete SimpleType: AncestorChain(1798)", "Delete WildcardType: ?(1799)", "Delete ParameterizedType: AncestorChain<?>(1800)", "Delete SimpleName: ancestors(1801)", "Delete SimpleName: node(1805)", "Delete QualifiedName: ancestors.node(1806)", "Delete VariableDeclarationFragment(1807)", "Delete VariableDeclarationStatement(1808)", "Delete NullLiteral(1879)"]}}], "commit_stats": [{"total_files": 11, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}