{"application": "apache-nutch", "csha": "7d9727f031d8c5d0d0aa91455b9de9e8184319d7", "files": [{"CrawlDb_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS SimpleName: setJobName to MethodInvocation at 1", "INS SimpleName: crawlDb to InfixExpression: + at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"crawldb \" to InfixExpression: + at 0", "INS SimpleName: job to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2"]}]}}, {"CrawlDb_diff": {"operations": ["Insert ExpressionStatement(197) into Block(263) at 2", "Insert MethodInvocation(196) into ExpressionStatement(197) at 0", "Insert SimpleName: job(191) into MethodInvocation(196) at 0", "Insert SimpleName: setJobName(192) into MethodInvocation(196) at 1", "Insert InfixExpression: +(195) into MethodInvocation(196) at 2", "Insert StringLiteral: \"crawldb \"(193) into InfixExpression: +(195) at 0", "Insert SimpleName: crawlDb(194) into InfixExpression: +(195) at 1"]}}, {"CrawlDbReader_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 3", "operations": ["INS StringLiteral: \"stats \" to InfixExpression: + at 0", "INS ExpressionStatement to Block at 3", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: job to MethodInvocation at 0", "INS SimpleName: crawlDb to InfixExpression: + at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setJobName to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: job to MethodInvocation at 0", "INS SimpleName: crawlDb to InfixExpression: + at 1", "INS ExpressionStatement to Block at 4", "INS StringLiteral: \"dump \" to InfixExpression: + at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: setJobName to MethodInvocation at 1"]}]}}, {"CrawlDbReader_diff": {"operations": ["Insert ExpressionStatement(648) into Block(1063) at 3", "Insert ExpressionStatement(1217) into Block(1279) at 4", "Insert MethodInvocation(647) into ExpressionStatement(648) at 0", "Insert MethodInvocation(1216) into ExpressionStatement(1217) at 0", "Insert SimpleName: job(642) into MethodInvocation(647) at 0", "Insert SimpleName: setJobName(643) into MethodInvocation(647) at 1", "Insert InfixExpression: +(646) into MethodInvocation(647) at 2", "Insert SimpleName: job(1211) into MethodInvocation(1216) at 0", "Insert SimpleName: setJobName(1212) into MethodInvocation(1216) at 1", "Insert InfixExpression: +(1215) into MethodInvocation(1216) at 2", "Insert StringLiteral: \"stats \"(644) into InfixExpression: +(646) at 0", "Insert SimpleName: crawlDb(645) into InfixExpression: +(646) at 1", "Insert StringLiteral: \"dump \"(1213) into InfixExpression: +(1215) at 0", "Insert SimpleName: crawlDb(1214) into InfixExpression: +(1215) at 1"]}}, {"Generator_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 7", "operations": ["INS SimpleName: setJobName to MethodInvocation at 1", "INS SimpleName: segment to InfixExpression: + at 1", "INS SimpleName: job to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 7", "INS InfixExpression: + to MethodInvocation at 2", "INS StringLiteral: \"generate: select \" to InfixExpression: + at 0"]}, {"root": "INS ExpressionStatement to Block at 25", "operations": ["INS SimpleName: setJobName to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: job to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS ExpressionStatement to Block at 25", "INS SimpleName: segment to InfixExpression: + at 1", "INS StringLiteral: \"generate: partition \" to InfixExpression: + at 0"]}]}}, {"Generator_diff": {"operations": ["Insert ExpressionStatement(800) into Block(1038) at 7", "Insert ExpressionStatement(926) into Block(1038) at 25", "Insert MethodInvocation(799) into ExpressionStatement(800) at 0", "Insert MethodInvocation(925) into ExpressionStatement(926) at 0", "Insert SimpleName: job(794) into MethodInvocation(799) at 0", "Insert SimpleName: setJobName(795) into MethodInvocation(799) at 1", "Insert InfixExpression: +(798) into MethodInvocation(799) at 2", "Insert SimpleName: job(920) into MethodInvocation(925) at 0", "Insert SimpleName: setJobName(921) into MethodInvocation(925) at 1", "Insert InfixExpression: +(924) into MethodInvocation(925) at 2", "Insert StringLiteral: \"generate: select \"(796) into InfixExpression: +(798) at 0", "Insert SimpleName: segment(797) into InfixExpression: +(798) at 1", "Insert StringLiteral: \"generate: partition \"(922) into InfixExpression: +(924) at 0", "Insert SimpleName: segment(923) into InfixExpression: +(924) at 1"]}}, {"Injector_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 6", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setJobName to MethodInvocation at 1", "INS SimpleName: urlDir to InfixExpression: + at 1", "INS SimpleName: sortJob to MethodInvocation at 0", "INS StringLiteral: \"inject \" to InfixExpression: + at 0", "INS ExpressionStatement to Block at 6", "INS InfixExpression: + to MethodInvocation at 2"]}]}}, {"Injector_diff": {"operations": ["Insert ExpressionStatement(373) into Block(478) at 6", "Insert MethodInvocation(372) into ExpressionStatement(373) at 0", "Insert SimpleName: sortJob(367) into MethodInvocation(372) at 0", "Insert SimpleName: setJobName(368) into MethodInvocation(372) at 1", "Insert InfixExpression: +(371) into MethodInvocation(372) at 2", "Insert StringLiteral: \"inject \"(369) into InfixExpression: +(371) at 0", "Insert SimpleName: urlDir(370) into InfixExpression: +(371) at 1"]}}, {"LinkDb_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: job to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS ExpressionStatement to Block at 2", "INS SimpleName: setJobName to MethodInvocation at 1", "INS StringLiteral: \"linkdb \" to InfixExpression: + at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: linkDb to InfixExpression: + at 1"]}]}}, {"LinkDb_diff": {"operations": ["Insert ExpressionStatement(660) into Block(730) at 2", "Insert MethodInvocation(659) into ExpressionStatement(660) at 0", "Insert SimpleName: job(654) into MethodInvocation(659) at 0", "Insert SimpleName: setJobName(655) into MethodInvocation(659) at 1", "Insert InfixExpression: +(658) into MethodInvocation(659) at 2", "Insert StringLiteral: \"linkdb \"(656) into InfixExpression: +(658) at 0", "Insert SimpleName: linkDb(657) into InfixExpression: +(658) at 1"]}}, {"LinkDbReader_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 4", "operations": ["INS ExpressionStatement to Block at 4", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: setJobName to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: job to MethodInvocation at 0", "INS SimpleName: linkdb to InfixExpression: + at 1", "INS StringLiteral: \"read \" to InfixExpression: + at 0"]}]}}, {"LinkDbReader_diff": {"operations": ["Insert ExpressionStatement(296) into Block(358) at 4", "Insert MethodInvocation(295) into ExpressionStatement(296) at 0", "Insert SimpleName: job(290) into MethodInvocation(295) at 0", "Insert SimpleName: setJobName(291) into MethodInvocation(295) at 1", "Insert InfixExpression: +(294) into MethodInvocation(295) at 2", "Insert StringLiteral: \"read \"(292) into InfixExpression: +(294) at 0", "Insert SimpleName: linkdb(293) into InfixExpression: +(294) at 1"]}}, {"Fetcher_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 3", "operations": ["INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: setJobName to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"fetch \" to InfixExpression: + at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: job to MethodInvocation at 0", "INS SimpleName: segment to InfixExpression: + at 1"]}]}}, {"Fetcher_diff": {"operations": ["Insert ExpressionStatement(1386) into Block(1486) at 3", "Insert MethodInvocation(1385) into ExpressionStatement(1386) at 0", "Insert SimpleName: job(1380) into MethodInvocation(1385) at 0", "Insert SimpleName: setJobName(1381) into MethodInvocation(1385) at 1", "Insert InfixExpression: +(1384) into MethodInvocation(1385) at 2", "Insert StringLiteral: \"fetch \"(1382) into InfixExpression: +(1384) at 0", "Insert SimpleName: segment(1383) into InfixExpression: +(1384) at 1"]}}, {"FetcherOutputFormat_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 4", "operations": ["INS SimpleName: checkOutputSpecs to MethodDeclaration at 2", "INS SimpleName: job to SingleVariableDeclaration at 1", "INS SimpleType: JobConf to SingleVariableDeclaration at 0", "INS SimpleName: JobConf to SimpleType: JobConf at 0", "INS SimpleName: getOutputDir to MethodInvocation at 1", "INS StringLiteral: \"Segment already fetched!\" to ClassInstanceCreation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleType: IOException to ClassInstanceCreation at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS SimpleName: fs to SingleVariableDeclaration at 1", "INS ThrowStatement to IfStatement at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleType: File to ClassInstanceCreation at 0", "INS IfStatement to Block at 0", "INS SimpleType: FileSystem to SingleVariableDeclaration at 0", "INS SimpleName: FileSystem to SimpleType: FileSystem at 0", "INS SimpleName: fs to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to MethodDeclaration at 6", "INS QualifiedName: CrawlDatum.FETCH_DIR_NAME to ClassInstanceCreation at 2", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleName: job to MethodInvocation at 0", "INS SimpleName: exists to MethodInvocation at 1", "INS SimpleType: IOException to MethodDeclaration at 5", "INS SimpleName: IOException to SimpleType: IOException at 0"]}]}}, {"FetcherOutputFormat_diff": {"operations": ["Insert MethodDeclaration(79) into TypeDeclaration: class(310) at 4", "Insert Modifier: public(49) into MethodDeclaration(79) at 0", "Insert PrimitiveType: void(50) into MethodDeclaration(79) at 1", "Insert SimpleName: checkOutputSpecs(51) into MethodDeclaration(79) at 2", "Insert SingleVariableDeclaration(55) into MethodDeclaration(79) at 3", "Insert SingleVariableDeclaration(59) into MethodDeclaration(79) at 4", "Insert SimpleType: IOException(61) into MethodDeclaration(79) at 5", "Insert Block(78) into MethodDeclaration(79) at 6", "Insert SimpleType: FileSystem(53) into SingleVariableDeclaration(55) at 0", "Insert SimpleName: fs(54) into SingleVariableDeclaration(55) at 1", "Insert SimpleType: JobConf(57) into SingleVariableDeclaration(59) at 0", "Insert SimpleName: job(58) into SingleVariableDeclaration(59) at 1", "Insert SimpleName: IOException(60) into SimpleType: IOException(61) at 0", "Insert IfStatement(77) into Block(78) at 0", "Insert SimpleName: FileSystem(52) into SimpleType: FileSystem(53) at 0", "Insert SimpleName: JobConf(56) into SimpleType: JobConf(57) at 0", "Insert MethodInvocation(71) into IfStatement(77) at 0", "Insert ThrowStatement(76) into IfStatement(77) at 1", "Insert SimpleName: fs(62) into MethodInvocation(71) at 0", "Insert SimpleName: exists(63) into MethodInvocation(71) at 1", "Insert ClassInstanceCreation(70) into MethodInvocation(71) at 2", "Insert ClassInstanceCreation(75) into ThrowStatement(76) at 0", "Insert SimpleType: File(65) into ClassInstanceCreation(70) at 0", "Insert MethodInvocation(68) into ClassInstanceCreation(70) at 1", "Insert QualifiedName: CrawlDatum.FETCH_DIR_NAME(69) into ClassInstanceCreation(70) at 2", "Insert SimpleType: IOException(73) into ClassInstanceCreation(75) at 0", "Insert StringLiteral: \"Segment already fetched!\"(74) into ClassInstanceCreation(75) at 1", "Insert SimpleName: File(64) into SimpleType: File(65) at 0", "Insert SimpleName: job(66) into MethodInvocation(68) at 0", "Insert SimpleName: getOutputDir(67) into MethodInvocation(68) at 1", "Insert SimpleName: IOException(72) into SimpleType: IOException(73) at 0"]}}, {"DeleteDuplicates_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS SimpleName: FileSystem to SimpleType: FileSystem at 0", "INS SimpleType: FileSystem to SingleVariableDeclaration at 0", "INS SimpleName: checkOutputSpecs to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 5", "INS SimpleType: JobConf to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: job to SingleVariableDeclaration at 1", "INS SimpleName: JobConf to SimpleType: JobConf at 0", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: fs to SingleVariableDeclaration at 1"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS StringLiteral: \"dedup phase 1\" to MethodInvocation at 2", "INS SimpleName: setJobName to MethodInvocation at 1", "INS ExpressionStatement to Block at 4", "INS SimpleName: job to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 17", "operations": ["INS SimpleName: setJobName to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"dedup phase 2\" to MethodInvocation at 2", "INS ExpressionStatement to Block at 17", "INS SimpleName: job to MethodInvocation at 0"]}]}}, {"DeleteDuplicates_diff": {"operations": ["Insert MethodDeclaration(1159) into TypeDeclaration: class(1490) at 22", "Insert Modifier: public(1147) into MethodDeclaration(1159) at 0", "Insert PrimitiveType: void(1148) into MethodDeclaration(1159) at 1", "Insert SimpleName: checkOutputSpecs(1149) into MethodDeclaration(1159) at 2", "Insert SingleVariableDeclaration(1153) into MethodDeclaration(1159) at 3", "Insert SingleVariableDeclaration(1157) into MethodDeclaration(1159) at 4", "Insert Block(1158) into MethodDeclaration(1159) at 5", "Insert SimpleType: FileSystem(1151) into SingleVariableDeclaration(1153) at 0", "Insert SimpleName: fs(1152) into SingleVariableDeclaration(1153) at 1", "Insert SimpleType: JobConf(1155) into SingleVariableDeclaration(1157) at 0", "Insert SimpleName: job(1156) into SingleVariableDeclaration(1157) at 1", "Insert ExpressionStatement(1237) into Block(1411) at 4", "Insert ExpressionStatement(1322) into Block(1411) at 17", "Insert SimpleName: FileSystem(1150) into SimpleType: FileSystem(1151) at 0", "Insert SimpleName: JobConf(1154) into SimpleType: JobConf(1155) at 0", "Insert MethodInvocation(1236) into ExpressionStatement(1237) at 0", "Insert MethodInvocation(1321) into ExpressionStatement(1322) at 0", "Insert SimpleName: job(1233) into MethodInvocation(1236) at 0", "Insert SimpleName: setJobName(1234) into MethodInvocation(1236) at 1", "Insert StringLiteral: \"dedup phase 1\"(1235) into MethodInvocation(1236) at 2", "Insert SimpleName: job(1318) into MethodInvocation(1321) at 0", "Insert SimpleName: setJobName(1319) into MethodInvocation(1321) at 1", "Insert StringLiteral: \"dedup phase 2\"(1320) into MethodInvocation(1321) at 2"]}}, {"Indexer_cluster": {"actions": [{"root": "UPDATE from org.apache.hadoop.mapred.OutputFormat to org.apache.hadoop.mapred.OutputFormatBase", "operations": ["UPD SimpleType: org.apache.hadoop.mapred.OutputFormat from org.apache.hadoop.mapred.OutputFormat to org.apache.hadoop.mapred.OutputFormatBase", "UPD QualifiedName: org.apache.hadoop.mapred.OutputFormat from org.apache.hadoop.mapred.OutputFormat to org.apache.hadoop.mapred.OutputFormatBase"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: setJobName to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: indexDir to InfixExpression: + at 1", "INS SimpleName: job to MethodInvocation at 0", "INS StringLiteral: \"index \" to InfixExpression: + at 0", "INS ExpressionStatement to Block at 3", "INS InfixExpression: + to MethodInvocation at 2"]}]}}, {"Indexer_diff": {"operations": ["Update SimpleType: org.apache.hadoop.mapred.OutputFormat(200) to org.apache.hadoop.mapred.OutputFormatBase", "Update QualifiedName: org.apache.hadoop.mapred.OutputFormat(199) to org.apache.hadoop.mapred.OutputFormatBase", "Insert ExpressionStatement(979) into Block(1116) at 3", "Insert MethodInvocation(978) into ExpressionStatement(979) at 0", "Insert SimpleName: job(973) into MethodInvocation(978) at 0", "Insert SimpleName: setJobName(974) into MethodInvocation(978) at 1", "Insert InfixExpression: +(977) into MethodInvocation(978) at 2", "Insert StringLiteral: \"index \"(975) into InfixExpression: +(977) at 0", "Insert SimpleName: indexDir(976) into InfixExpression: +(977) at 1"]}}, {"ParseOutputFormat_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 6", "operations": ["INS SimpleName: File to SimpleType: File at 0", "INS SimpleType: File to ClassInstanceCreation at 0", "INS SimpleName: fs to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS IfStatement to Block at 0", "INS SimpleName: FileSystem to SimpleType: FileSystem at 0", "INS ThrowStatement to IfStatement at 1", "INS SimpleType: IOException to ClassInstanceCreation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: job to MethodInvocation at 0", "INS SimpleType: FileSystem to SingleVariableDeclaration at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: getOutputDir to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleType: JobConf to SingleVariableDeclaration at 0", "INS SimpleName: checkOutputSpecs to MethodDeclaration at 2", "INS SimpleName: fs to SingleVariableDeclaration at 1", "INS SimpleName: exists to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: JobConf to SimpleType: JobConf at 0", "INS QualifiedName: CrawlDatum.PARSE_DIR_NAME to ClassInstanceCreation at 2", "INS SimpleType: IOException to MethodDeclaration at 5", "INS ClassInstanceCreation to MethodInvocation at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS StringLiteral: \"Segment already parsed!\" to ClassInstanceCreation at 1", "INS SimpleName: job to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 6", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS MethodInvocation to ClassInstanceCreation at 1"]}]}}, {"ParseOutputFormat_diff": {"operations": ["Insert MethodDeclaration(84) into TypeDeclaration: class(563) at 6", "Insert Modifier: public(54) into MethodDeclaration(84) at 0", "Insert PrimitiveType: void(55) into MethodDeclaration(84) at 1", "Insert SimpleName: checkOutputSpecs(56) into MethodDeclaration(84) at 2", "Insert SingleVariableDeclaration(60) into MethodDeclaration(84) at 3", "Insert SingleVariableDeclaration(64) into MethodDeclaration(84) at 4", "Insert SimpleType: IOException(66) into MethodDeclaration(84) at 5", "Insert Block(83) into MethodDeclaration(84) at 6", "Insert SimpleType: FileSystem(58) into SingleVariableDeclaration(60) at 0", "Insert SimpleName: fs(59) into SingleVariableDeclaration(60) at 1", "Insert SimpleType: JobConf(62) into SingleVariableDeclaration(64) at 0", "Insert SimpleName: job(63) into SingleVariableDeclaration(64) at 1", "Insert SimpleName: IOException(65) into SimpleType: IOException(66) at 0", "Insert IfStatement(82) into Block(83) at 0", "Insert SimpleName: FileSystem(57) into SimpleType: FileSystem(58) at 0", "Insert SimpleName: JobConf(61) into SimpleType: JobConf(62) at 0", "Insert MethodInvocation(76) into IfStatement(82) at 0", "Insert ThrowStatement(81) into IfStatement(82) at 1", "Insert SimpleName: fs(67) into MethodInvocation(76) at 0", "Insert SimpleName: exists(68) into MethodInvocation(76) at 1", "Insert ClassInstanceCreation(75) into MethodInvocation(76) at 2", "Insert ClassInstanceCreation(80) into ThrowStatement(81) at 0", "Insert SimpleType: File(70) into ClassInstanceCreation(75) at 0", "Insert MethodInvocation(73) into ClassInstanceCreation(75) at 1", "Insert QualifiedName: CrawlDatum.PARSE_DIR_NAME(74) into ClassInstanceCreation(75) at 2", "Insert SimpleType: IOException(78) into ClassInstanceCreation(80) at 0", "Insert StringLiteral: \"Segment already parsed!\"(79) into ClassInstanceCreation(80) at 1", "Insert SimpleName: File(69) into SimpleType: File(70) at 0", "Insert SimpleName: job(71) into MethodInvocation(73) at 0", "Insert SimpleName: getOutputDir(72) into MethodInvocation(73) at 1", "Insert SimpleName: IOException(77) into SimpleType: IOException(78) at 0"]}}, {"ParseSegment_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: setJobName to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: job to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"parse \" to InfixExpression: + at 0", "INS SimpleName: segment to InfixExpression: + at 1"]}]}}, {"ParseSegment_diff": {"operations": ["Insert ExpressionStatement(301) into Block(382) at 3", "Insert MethodInvocation(300) into ExpressionStatement(301) at 0", "Insert SimpleName: job(295) into MethodInvocation(300) at 0", "Insert SimpleName: setJobName(296) into MethodInvocation(300) at 1", "Insert InfixExpression: +(299) into MethodInvocation(300) at 2", "Insert StringLiteral: \"parse \"(297) into InfixExpression: +(299) at 0", "Insert SimpleName: segment(298) into InfixExpression: +(299) at 1"]}}, {"SegmentReader_cluster": {"actions": [{"root": "UPDATE from org.apache.hadoop.mapred.OutputFormat to org.apache.hadoop.mapred.OutputFormatBase", "operations": ["UPD QualifiedName: org.apache.hadoop.mapred.OutputFormat from org.apache.hadoop.mapred.OutputFormat to org.apache.hadoop.mapred.OutputFormatBase", "UPD SimpleType: org.apache.hadoop.mapred.OutputFormat from org.apache.hadoop.mapred.OutputFormat to org.apache.hadoop.mapred.OutputFormatBase"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: job to MethodInvocation at 0", "INS StringLiteral: \"read \" to InfixExpression: + at 0", "INS SimpleName: setJobName to MethodInvocation at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS ExpressionStatement to Block at 2", "INS SimpleName: segment to InfixExpression: + at 1"]}]}}, {"SegmentReader_diff": {"operations": ["Update SimpleType: org.apache.hadoop.mapred.OutputFormat(237) to org.apache.hadoop.mapred.OutputFormatBase", "Update QualifiedName: org.apache.hadoop.mapred.OutputFormat(236) to org.apache.hadoop.mapred.OutputFormatBase", "Insert ExpressionStatement(586) into Block(856) at 2", "Insert MethodInvocation(585) into ExpressionStatement(586) at 0", "Insert SimpleName: job(580) into MethodInvocation(585) at 0", "Insert SimpleName: setJobName(581) into MethodInvocation(585) at 1", "Insert InfixExpression: +(584) into MethodInvocation(585) at 2", "Insert StringLiteral: \"read \"(582) into InfixExpression: +(584) at 0", "Insert SimpleName: segment(583) into InfixExpression: +(584) at 1"]}}], "commit_stats": [{"total_files": 14, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}