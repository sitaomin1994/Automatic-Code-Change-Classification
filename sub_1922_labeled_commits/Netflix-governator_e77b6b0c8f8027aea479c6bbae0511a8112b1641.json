{"application": "Netflix-governator", "csha": "e77b6b0c8f8027aea479c6bbae0511a8112b1641", "files": [{"RequiredAsset_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: com.netflix.governator.lifecycle.AssetLoader to ImportDeclaration at 0"]}, {"root": "INS AnnotationTypeMemberDeclaration to AnnotationTypeDeclaration at 6", "operations": ["INS ParameterizedType: Class<? extends AssetLoader> to AnnotationTypeMemberDeclaration at 0", "INS SimpleName: Class to SimpleType: Class at 0", "INS WildcardType: ? extends AssetLoader to ParameterizedType: Class<? extends AssetLoader> at 1", "INS SimpleName: AssetLoader to SimpleType: AssetLoader at 0", "INS AnnotationTypeMemberDeclaration to AnnotationTypeDeclaration at 6", "INS SimpleType: AssetLoader to WildcardType: ? extends AssetLoader at 0", "INS SimpleName: loader to AnnotationTypeMemberDeclaration at 1", "INS TypeLiteral to AnnotationTypeMemberDeclaration at 2", "INS SimpleName: AssetLoader to SimpleType: AssetLoader at 0", "INS SimpleType: Class to ParameterizedType: Class<? extends AssetLoader> at 0", "INS SimpleType: AssetLoader to TypeLiteral at 0"]}]}}, {"RequiredAsset_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(36) at 1", "Insert QualifiedName: com.netflix.governator.lifecycle.AssetLoader(2) into ImportDeclaration(3) at 0", "Insert AnnotationTypeMemberDeclaration(34) into AnnotationTypeDeclaration(35) at 6", "Insert ParameterizedType: Class<? extends AssetLoader>(29) into AnnotationTypeMemberDeclaration(34) at 0", "Insert SimpleName: loader(30) into AnnotationTypeMemberDeclaration(34) at 1", "Insert TypeLiteral(33) into AnnotationTypeMemberDeclaration(34) at 2", "Insert SimpleType: Class(25) into ParameterizedType: Class<? extends AssetLoader>(29) at 0", "Insert WildcardType: ? extends AssetLoader(28) into ParameterizedType: Class<? extends AssetLoader>(29) at 1", "Insert SimpleType: AssetLoader(32) into TypeLiteral(33) at 0", "Insert SimpleName: Class(24) into SimpleType: Class(25) at 0", "Insert SimpleType: AssetLoader(27) into WildcardType: ? extends AssetLoader(28) at 0", "Insert SimpleName: AssetLoader(31) into SimpleType: AssetLoader(32) at 0", "Insert SimpleName: AssetLoader(26) into SimpleType: AssetLoader(27) at 0"]}}, {"ClasspathScanner_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 9", "MOV ImportDeclaration to CompilationUnit at 6", "MOV ImportDeclaration to CompilationUnit at 10", "MOV ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: org.apache.xbean.finder.archive.Archive to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: org.apache.xbean.finder.archive.CompositeArchive to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: org.apache.xbean.finder.archive.FileArchive to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS ImportDeclaration to CompilationUnit at 9", "INS QualifiedName: org.apache.xbean.finder.archive.JarArchive to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: org.slf4j.Logger to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS ImportDeclaration to CompilationUnit at 11", "INS QualifiedName: org.slf4j.LoggerFactory to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 17", "operations": ["INS ImportDeclaration to CompilationUnit at 17", "INS QualifiedName: java.util.Enumeration to ImportDeclaration at 0"]}, {"root": "UPDATE from com.google.common.base.Predicate to com.google.common.collect.Sets", "operations": ["UPD QualifiedName: com.google.common.base.Predicate from com.google.common.base.Predicate to com.google.common.collect.Sets"]}, {"root": "UPDATE from com.google.common.collect.Iterables to org.apache.xbean.finder.AnnotationFinder", "operations": ["UPD QualifiedName: com.google.common.collect.Iterables from com.google.common.collect.Iterables to org.apache.xbean.finder.AnnotationFinder"]}, {"root": "UPDATE from com.netflix.governator.annotations.AutoBindSingleton to java.io.IOException", "operations": ["UPD QualifiedName: com.netflix.governator.annotations.AutoBindSingleton from com.netflix.governator.annotations.AutoBindSingleton to java.io.IOException"]}, {"root": "UPDATE from com.sun.jersey.server.impl.container.config.AnnotatedClassScanner to java.net.URL", "operations": ["UPD QualifiedName: com.sun.jersey.server.impl.container.config.AnnotatedClassScanner from com.sun.jersey.server.impl.container.config.AnnotatedClassScanner to java.net.URL"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 2", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Logger to FieldDeclaration at 3", "INS Modifier: static to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 2", "INS Modifier: final to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: log to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: isJarURL to MethodDeclaration at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: URL to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: protocol to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS Modifier: private to MethodDeclaration at 0", "INS StringLiteral: \"jar\" to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: url to MethodInvocation at 0", "INS StringLiteral: \"zip\" to MethodInvocation at 0", "INS ReturnStatement to Block at 1", "INS InfixExpression: || to ReturnStatement at 0", "INS MethodInvocation to InfixExpression: || at 0", "INS SimpleName: url to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleName: getProtocol to MethodInvocation at 1", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleName: protocol to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to InfixExpression: || at 1", "INS SimpleName: URL to SimpleType: URL at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: protocol to VariableDeclarationFragment at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 2", "operations": ["INS SimpleType: String to ParameterizedType: Collection<String> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS ParameterizedType: Collection<String> to SingleVariableDeclaration at 0", "INS SimpleName: basePackages to SingleVariableDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 4"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: annotations to SingleVariableDeclaration at 2", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "UPDATE from List to Logger", "operations": ["UPD SimpleName: List from List to Logger"]}, {"root": "MOVE from SimpleType: Logger", "operations": ["MOV SimpleName: List to SimpleType: Logger at 0"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from Collection<Class<? extends Annotation>> to Collection<String>", "operations": ["UPD ParameterizedType: Collection<Class<? extends Annotation>> from Collection<Class<? extends Annotation>> to Collection<String>"]}, {"root": "UPDATE from annotations to basePackages", "operations": ["UPD SimpleName: annotations from annotations to basePackages"]}, {"root": "UPDATE from List<Class<? extends Annotation>> to Collection<Class<? extends Annotation>>", "operations": ["UPD ParameterizedType: List<Class<? extends Annotation>> from List<Class<? extends Annotation>> to Collection<Class<? extends Annotation>>"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ParameterizedType: List<Class<? extends Annotation>> to SingleVariableDeclaration at 1", "MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: log to MethodInvocation at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"Starting classpath scanning...\" to MethodInvocation at 2", "INS ExpressionStatement to Block at 2"]}, {"root": "INS TryStatement to Block at 4", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: resources to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: CompositeArchive to SimpleType: CompositeArchive at 0", "INS Block to TryStatement at 0", "INS SimpleName: annotations to EnhancedForStatement at 1", "INS SimpleType: CompositeArchive to ClassInstanceCreation at 0", "INS MethodInvocation to IfStatement at 0", "INS VariableDeclarationStatement to Block at 2", "INS MethodInvocation to WhileStatement at 0", "INS SimpleType: RuntimeException to ClassInstanceCreation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS EnhancedForStatement to Block at 4", "INS SimpleName: Archive to SimpleType: Archive at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS CatchClause to TryStatement at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: e to ClassInstanceCreation at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 2", "INS TryStatement to Block at 4", "INS SimpleType: URL to VariableDeclarationStatement at 0", "INS SimpleType: CompositeArchive to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS Block to CatchClause at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS EnhancedForStatement to Block at 2", "INS SimpleName: store to MethodInvocation at 0", "INS SimpleName: annotation to SingleVariableDeclaration at 1", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: thisUrl to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS SimpleName: URL to SimpleType: URL at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleType: Archive to ParameterizedType: List<Archive> at 1", "INS SimpleName: archives to ClassInstanceCreation at 1", "INS SimpleType: AnnotationFinder to VariableDeclarationStatement at 0", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS ParameterizedType: List<Archive> to VariableDeclarationStatement at 0", "INS SimpleName: annotationFinder to VariableDeclarationFragment at 0", "INS SimpleName: resources to MethodInvocation at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: basePackage to SingleVariableDeclaration at 1", "INS SimpleName: isJarURL to MethodInvocation at 0", "INS SimpleName: basePackages to EnhancedForStatement at 1", "INS Block to WhileStatement at 1", "INS SimpleName: compositeArchive to ClassInstanceCreation at 1", "INS SimpleType: AnnotationFinder to ClassInstanceCreation at 0", "INS SimpleName: compositeArchive to VariableDeclarationFragment at 0", "INS SimpleName: archives to MethodInvocation at 0", "INS WhileStatement to Block at 1", "INS SimpleType: GovernatorFileArchive to ClassInstanceCreation at 0", "INS SimpleName: basePackage to ClassInstanceCreation at 3", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: nextElement to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS Block to IfStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: hasMoreElements to MethodInvocation at 1", "INS SimpleName: contextClassLoader to ClassInstanceCreation at 1", "INS SimpleName: AnnotationFinder to SimpleType: AnnotationFinder at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: thisUrl to ClassInstanceCreation at 2"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 5"]}, {"root": "INS ExpressionStatement to Block at 13", "operations": ["INS ExpressionStatement to Block at 13", "INS SimpleName: debug to MethodInvocation at 1", "INS SimpleName: log to MethodInvocation at 0", "INS StringLiteral: \"Classpath scanning done\" to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from annotations to LoggerFactory", "operations": ["UPD SimpleName: annotations from annotations to LoggerFactory"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: add to MethodInvocation at 1", "MOV TypeLiteral to MethodInvocation at 2", "MOV SimpleName: annotations to MethodInvocation at 0"]}, {"root": "UPDATE from add to getLogger", "operations": ["UPD SimpleName: add from add to getLogger"]}, {"root": "UPDATE from Class to Collection", "operations": ["UPD SimpleName: Class from Class to Collection", "UPD SimpleType: Class from Class to Collection"]}, {"root": "MOVE from ParameterizedType: Collection<String>", "operations": ["MOV SimpleType: Class to ParameterizedType: Collection<String> at 0"]}, {"root": "INS SimpleName: basePackages to ConstructorInvocation at 0", "operations": ["INS SimpleName: basePackages to ConstructorInvocation at 0"]}, {"root": "INS SimpleName: annotations to ConstructorInvocation at 1", "operations": ["INS SimpleName: annotations to ConstructorInvocation at 1"]}, {"root": "UPDATE from Class to String", "operations": ["UPD SimpleType: Class from Class to String", "UPD SimpleName: Class from Class to String"]}, {"root": "MOVE from ParameterizedType: Collection<Class<? extends Annotation>>", "operations": ["MOV SimpleType: Class to ParameterizedType: Collection<Class<? extends Annotation>> at 1"]}, {"root": "INS SimpleType: Collection to ParameterizedType: List<Class<? extends Annotation>> at 0", "operations": ["INS SimpleType: Collection to ParameterizedType: List<Class<? extends Annotation>> at 0", "INS SimpleName: Collection to SimpleType: Collection at 0"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from Iterable<Class<?>> to Set<Class<?>>", "operations": ["UPD ParameterizedType: Iterable<Class<?>> from Iterable<Class<?>> to Set<Class<?>>"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Iterable<Class<?>> to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from AutoBindSingleton to ClasspathScanner", "operations": ["UPD SimpleName: AutoBindSingleton from AutoBindSingleton to ClasspathScanner", "UPD SimpleType: AutoBindSingleton from AutoBindSingleton to ClasspathScanner"]}, {"root": "UPDATE from Iterable to Set", "operations": ["UPD SimpleName: Iterable from Iterable to Set", "UPD SimpleType: Iterable from Iterable to Set"]}, {"root": "UPDATE from ignoreClasses to store", "operations": ["UPD SimpleName: ignoreClasses from ignoreClasses to store", "UPD SimpleName: filtered from filtered to store", "UPD SimpleName: classPath from classPath to store"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: clazz to MethodInvocation at 2", "MOV SimpleName: ignoreClasses to MethodInvocation at 0", "MOV SimpleName: contains to MethodInvocation at 1"]}, {"root": "UPDATE from contains to removeAll", "operations": ["UPD SimpleName: contains from contains to removeAll"]}, {"root": "UPDATE from clazz to ignoreClasses", "operations": ["UPD SimpleName: clazz from clazz to ignoreClasses"]}, {"root": "UPDATE from System to Sets", "operations": ["UPD SimpleName: System from System to Sets"]}, {"root": "UPDATE from getProperty to newHashSet", "operations": ["UPD SimpleName: getProperty from getProperty to newHashSet"]}, {"root": "INS SimpleType: ClassLoader to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: ClassLoader to VariableDeclarationStatement at 0", "INS SimpleName: ClassLoader to SimpleType: ClassLoader at 0"]}, {"root": "MOVE from ParameterizedType: List<Archive>", "operations": ["MOV SimpleType: List to ParameterizedType: List<Archive> at 0"]}, {"root": "UPDATE from annotations to archives", "operations": ["UPD SimpleName: annotations from annotations to archives"]}, {"root": "UPDATE from paths to contextClassLoader", "operations": ["UPD SimpleName: paths from paths to contextClassLoader"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from Predicate to IOException", "operations": ["UPD SimpleName: Predicate from Predicate to IOException"]}, {"root": "MOVE from SimpleType: IOException", "operations": ["MOV SimpleName: Predicate to SimpleType: IOException at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS SimpleName: Thread to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from split to getContextClassLoader", "operations": ["UPD SimpleName: split from split to getContextClassLoader"]}, {"root": "INS ParameterizedType: Enumeration<URL> to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: Enumeration to ParameterizedType: Enumeration<URL> at 0", "INS SimpleType: URL to ParameterizedType: Enumeration<URL> at 1", "INS SimpleName: URL to SimpleType: URL at 0", "INS ParameterizedType: Enumeration<URL> to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from classPath to currentThread", "operations": ["UPD SimpleName: classPath from classPath to currentThread"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: classPath to MethodInvocation at 1"]}, {"root": "UPDATE from roots to resources", "operations": ["UPD SimpleName: roots from roots to resources"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: basePackage to MethodInvocation at 0", "INS SimpleName: contextClassLoader to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS StringLiteral: \"/\" to MethodInvocation at 3", "INS SimpleName: getResources to MethodInvocation at 1", "INS StringLiteral: \".\" to MethodInvocation at 2", "INS SimpleName: replace to MethodInvocation at 1"]}, {"root": "UPDATE from AnnotatedClassScanner to CompositeArchive", "operations": ["UPD SimpleName: AnnotatedClassScanner from AnnotatedClassScanner to CompositeArchive"]}, {"root": "MOVE from SimpleType: CompositeArchive", "operations": ["MOV SimpleName: AnnotatedClassScanner to SimpleType: CompositeArchive at 0"]}, {"root": "UPDATE from Class to AnnotationFinder", "operations": ["UPD SimpleName: Class from Class to AnnotationFinder"]}, {"root": "MOVE from SimpleType: AnnotationFinder", "operations": ["MOV SimpleName: Class to SimpleType: AnnotationFinder at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ParameterizedType: Class<? extends Annotation> to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from Class to RuntimeException", "operations": ["UPD SimpleName: Class from Class to RuntimeException"]}, {"root": "MOVE from SimpleType: RuntimeException", "operations": ["MOV SimpleName: Class to SimpleType: RuntimeException at 0"]}, {"root": "UPDATE from File to Enumeration", "operations": ["UPD SimpleName: File from File to Enumeration"]}, {"root": "MOVE from SimpleType: Enumeration", "operations": ["MOV SimpleName: File to SimpleType: Enumeration at 0"]}, {"root": "UPDATE from i to thisUrl", "operations": ["UPD SimpleName: i from i to thisUrl"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: i to VariableDeclarationFragment at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from Iterables to addAll", "operations": ["UPD SimpleName: Iterables from Iterables to addAll"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: Iterables to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: archives to MethodInvocation at 0", "INS SimpleName: add to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: contextClassLoader to ClassInstanceCreation at 1", "INS SimpleName: thisUrl to ClassInstanceCreation at 2", "INS ClassInstanceCreation to MethodInvocation at 2"]}, {"root": "UPDATE from scanner to annotationFinder", "operations": ["UPD SimpleName: scanner from scanner to annotationFinder"]}, {"root": "UPDATE from getMatchingClasses to findAnnotatedClasses", "operations": ["UPD SimpleName: getMatchingClasses from getMatchingClasses to findAnnotatedClasses"]}, {"root": "INS SimpleName: annotation to MethodInvocation at 2", "operations": ["INS SimpleName: annotation to MethodInvocation at 2"]}, {"root": "UPDATE from File to JarArchive", "operations": ["UPD SimpleName: File from File to JarArchive", "UPD SimpleType: File from File to JarArchive"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: File to ClassInstanceCreation at 0"]}, {"root": "UPDATE from AnnotatedClassScanner to GovernatorFileArchive", "operations": ["UPD SimpleName: AnnotatedClassScanner from AnnotatedClassScanner to GovernatorFileArchive"]}, {"root": "MOVE from SimpleType: GovernatorFileArchive", "operations": ["MOV SimpleName: AnnotatedClassScanner to SimpleType: GovernatorFileArchive at 0"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL Block", "DEL SimpleType: List", "DEL SimpleName: annotations", "DEL Modifier: public", "DEL SimpleName: getDefaultAnnotations", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL ParameterizedType: List<Class<? extends Annotation>>", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL Modifier: static"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL SimpleName: ClasspathScanner", "DEL MethodDeclaration"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getDefaultAnnotations", "DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL WildcardType: ?", "DEL SimpleName: newArrayList", "DEL SimpleName: Lists", "DEL MethodInvocation", "DEL ParameterizedType: Class<?>", "DEL SimpleName: annotations", "DEL ConstructorInvocation", "DEL Block"]}, {"root": "DEL ParameterizedType: Class<? extends Annotation>", "operations": ["DEL SimpleType: Annotation", "DEL WildcardType: ? extends Annotation", "DEL ParameterizedType: Class<? extends Annotation>", "DEL SimpleName: Annotation"]}, {"root": "DEL StringLiteral: \"java.class.path\"", "operations": ["DEL StringLiteral: \"java.class.path\""]}, {"root": "DEL ArrayType: String[]", "operations": ["DEL ArrayType: String[]", "DEL Dimension"]}, {"root": "DEL QualifiedName: File.pathSeparator", "operations": ["DEL QualifiedName: File.pathSeparator"]}, {"root": "DEL ArrayType: File[]", "operations": ["DEL ArrayType: File[]", "DEL SimpleType: File", "DEL Dimension"]}, {"root": "DEL ArrayCreation", "operations": ["DEL ArrayCreation", "DEL QualifiedName: paths.length", "DEL ArrayType: File[]", "DEL SimpleName: File", "DEL SimpleType: File", "DEL Dimension"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: paths", "DEL ArrayAccess", "DEL Assignment: =", "DEL SimpleName: i", "DEL SimpleName: roots", "DEL SimpleName: i", "DEL ClassInstanceCreation", "DEL ArrayAccess"]}, {"root": "DEL ForStatement", "operations": ["DEL Block", "DEL ForStatement", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL PostfixExpression: ++", "DEL QualifiedName: paths.length", "DEL VariableDeclarationExpression", "DEL SimpleName: i", "DEL NumberLiteral: 0", "DEL PrimitiveType: int", "DEL InfixExpression: <"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: size", "DEL SimpleType: AnnotatedClassScanner", "DEL SimpleName: annotations", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: toArray", "DEL Dimension", "DEL ArrayType: Class[]", "DEL SimpleName: annotations", "DEL SimpleName: scanner", "DEL SimpleType: Class", "DEL ArrayCreation", "DEL VariableDeclarationStatement", "DEL SimpleType: AnnotatedClassScanner", "DEL ClassInstanceCreation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: scanner", "DEL SimpleName: roots", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: scan"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: Override", "DEL AnonymousClassDeclaration", "DEL SimpleType: Predicate", "DEL MethodInvocation", "DEL ParameterizedType: Class<?>", "DEL ReturnStatement", "DEL SimpleName: clazz", "DEL WildcardType: ?", "DEL ParameterizedType: Class<?>", "DEL SimpleType: Class", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL WildcardType: ?", "DEL SimpleName: filter", "DEL MarkerAnnotation", "DEL PrimitiveType: boolean", "DEL PrefixExpression: !", "DEL SimpleName: apply", "DEL ClassInstanceCreation", "DEL Block", "DEL SimpleType: Class", "DEL VariableDeclarationStatement", "DEL MethodDeclaration", "DEL ParameterizedType: Predicate<Class<?>>", "DEL SimpleName: Class", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: filtered"]}]}}, {"ClasspathScanner_diff": {"operations": ["Move ImportDeclaration(5) into CompilationUnit(355) at 6", "Move ImportDeclaration(9) into CompilationUnit(355) at 6", "Move ImportDeclaration(13) into CompilationUnit(355) at 9", "Move ImportDeclaration(15) into CompilationUnit(355) at 10", "Insert ImportDeclaration(13) into CompilationUnit(355) at 6", "Insert ImportDeclaration(15) into CompilationUnit(355) at 7", "Insert ImportDeclaration(17) into CompilationUnit(355) at 8", "Insert ImportDeclaration(19) into CompilationUnit(355) at 9", "Insert ImportDeclaration(21) into CompilationUnit(355) at 10", "Insert ImportDeclaration(23) into CompilationUnit(355) at 11", "Insert ImportDeclaration(35) into CompilationUnit(355) at 17", "Update QualifiedName: com.google.common.base.Predicate(4) to com.google.common.collect.Sets", "Update QualifiedName: com.google.common.collect.Iterables(8) to org.apache.xbean.finder.AnnotationFinder", "Insert QualifiedName: org.apache.xbean.finder.archive.Archive(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: org.apache.xbean.finder.archive.CompositeArchive(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: org.apache.xbean.finder.archive.FileArchive(16) into ImportDeclaration(17) at 0", "Insert QualifiedName: org.apache.xbean.finder.archive.JarArchive(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: org.slf4j.Logger(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: org.slf4j.LoggerFactory(22) into ImportDeclaration(23) at 0", "Update QualifiedName: com.netflix.governator.annotations.AutoBindSingleton(12) to java.io.IOException", "Update QualifiedName: com.sun.jersey.server.impl.container.config.AnnotatedClassScanner(14) to java.net.URL", "Insert QualifiedName: java.util.Enumeration(34) into ImportDeclaration(35) at 0", "Insert FieldDeclaration(55) into TypeDeclaration: class(354) at 2", "Insert MethodDeclaration(340) into TypeDeclaration: class(354) at 6", "Insert Modifier: private(42) into FieldDeclaration(55) at 0", "Insert Modifier: static(43) into FieldDeclaration(55) at 1", "Insert Modifier: final(44) into FieldDeclaration(55) at 2", "Insert SimpleType: Logger(46) into FieldDeclaration(55) at 3", "Insert VariableDeclarationFragment(54) into FieldDeclaration(55) at 4", "Insert SingleVariableDeclaration(76) into MethodDeclaration(99) at 2", "Move Block(90) into MethodDeclaration(99) at 4", "Insert SingleVariableDeclaration(121) into MethodDeclaration(313) at 3", "Insert Modifier: private(314) into MethodDeclaration(340) at 0", "Insert PrimitiveType: boolean(315) into MethodDeclaration(340) at 1", "Insert SimpleName: isJarURL(316) into MethodDeclaration(340) at 2", "Insert SingleVariableDeclaration(320) into MethodDeclaration(340) at 3", "Insert Block(339) into MethodDeclaration(340) at 4", "Update SimpleName: List(42) to Logger", "Move SimpleName: List(42) into SimpleType: Logger(46) at 0", "Insert SimpleName: log(47) into VariableDeclarationFragment(54) at 0", "Insert MethodInvocation(53) into VariableDeclarationFragment(54) at 1", "Insert ParameterizedType: Collection<String>(74) into SingleVariableDeclaration(76) at 0", "Insert SimpleName: basePackages(75) into SingleVariableDeclaration(76) at 1", "Insert Modifier: final(102) into SingleVariableDeclaration(109) at 0", "Update ParameterizedType: Collection<Class<? extends Annotation>>(126) to Collection<String>", "Update SimpleName: annotations(127) to basePackages", "Insert Modifier: final(110) into SingleVariableDeclaration(121) at 0", "Update ParameterizedType: List<Class<? extends Annotation>>(60) to Collection<Class<? extends Annotation>>", "Move ParameterizedType: List<Class<? extends Annotation>>(60) into SingleVariableDeclaration(121) at 1", "Insert SimpleName: annotations(120) into SingleVariableDeclaration(121) at 2", "Insert ExpressionStatement(148) into Block(312) at 2", "Insert TryStatement(294) into Block(312) at 4", "Insert ExpressionStatement(299) into Block(312) at 5", "Insert ExpressionStatement(311) into Block(312) at 7", "Insert SimpleType: URL(318) into SingleVariableDeclaration(320) at 0", "Insert SimpleName: url(319) into SingleVariableDeclaration(320) at 1", "Insert VariableDeclarationStatement(328) into Block(339) at 0", "Insert ReturnStatement(338) into Block(339) at 1", "Update SimpleName: annotations(67) to LoggerFactory", "Move SimpleName: annotations(67) into MethodInvocation(53) at 0", "Update SimpleName: add(68) to getLogger", "Move SimpleName: add(68) into MethodInvocation(53) at 1", "Move TypeLiteral(71) into MethodInvocation(53) at 2", "Update SimpleType: Class(108) to Collection", "Move SimpleType: Class(108) into ParameterizedType: Collection<String>(74) at 0", "Insert SimpleType: String(73) into ParameterizedType: Collection<String>(74) at 1", "Insert SimpleName: basePackages(88) into ConstructorInvocation(97) at 0", "Insert SimpleName: annotations(89) into ConstructorInvocation(97) at 1", "Update SimpleType: Class(121) to String", "Move SimpleType: Class(121) into ParameterizedType: Collection<String>(107) at 1", "Insert SimpleType: Collection(112) into ParameterizedType: Collection<Class<? extends Annotation>>(119) at 0", "Insert MethodInvocation(147) into ExpressionStatement(148) at 0", "Insert Modifier: final(149) into VariableDeclarationStatement(162) at 0", "Update ParameterizedType: Iterable<Class<?>>(237) to Set<Class<?>>", "Move ParameterizedType: Iterable<Class<?>>(237) into VariableDeclarationStatement(162) at 1", "Insert Block(282) into TryStatement(294) at 0", "Insert CatchClause(293) into TryStatement(294) at 1", "Insert MethodInvocation(298) into ExpressionStatement(299) at 0", "Insert MethodInvocation(310) into ExpressionStatement(311) at 0", "Insert SimpleName: URL(317) into SimpleType: URL(318) at 0", "Move SimpleType: String(152) into VariableDeclarationStatement(328) at 0", "Insert VariableDeclarationFragment(327) into VariableDeclarationStatement(328) at 1", "Insert InfixExpression: ||(337) into ReturnStatement(338) at 0", "Update SimpleType: AutoBindSingleton(70) to ClasspathScanner", "Update SimpleName: Class(107) to Collection", "Insert SimpleName: String(72) into SimpleType: String(73) at 0", "Update SimpleName: Class(120) to String", "Insert SimpleName: Collection(111) into SimpleType: Collection(112) at 0", "Insert SimpleName: log(144) into MethodInvocation(147) at 0", "Insert SimpleName: debug(145) into MethodInvocation(147) at 1", "Insert StringLiteral: \"Starting classpath scanning...\"(146) into MethodInvocation(147) at 2", "Update SimpleType: Iterable(232) to Set", "Update SimpleName: classPath(153) to store", "Insert VariableDeclarationStatement(173) into Block(282) at 0", "Move VariableDeclarationStatement(170) into Block(282) at 1", "Insert EnhancedForStatement(281) into Block(282) at 2", "Insert SingleVariableDeclaration(286) into CatchClause(293) at 0", "Insert Block(292) into CatchClause(293) at 1", "Update SimpleName: ignoreClasses(262) to store", "Move SimpleName: ignoreClasses(262) into MethodInvocation(298) at 0", "Update SimpleName: contains(263) to removeAll", "Move SimpleName: contains(263) into MethodInvocation(298) at 1", "Update SimpleName: clazz(264) to ignoreClasses", "Move SimpleName: clazz(264) into MethodInvocation(298) at 2", "Insert SimpleName: log(307) into MethodInvocation(310) at 0", "Insert SimpleName: debug(308) into MethodInvocation(310) at 1", "Insert StringLiteral: \"Classpath scanning done\"(309) into MethodInvocation(310) at 2", "Insert SimpleName: protocol(323) into VariableDeclarationFragment(327) at 0", "Insert MethodInvocation(326) into VariableDeclarationFragment(327) at 1", "Insert MethodInvocation(332) into InfixExpression: ||(337) at 0", "Insert MethodInvocation(336) into InfixExpression: ||(337) at 1", "Update SimpleName: AutoBindSingleton(69) to ClasspathScanner", "Update SimpleName: Iterable(231) to Set", "Update SimpleName: System(154) to Sets", "Update SimpleName: getProperty(155) to newHashSet", "Insert ParameterizedType: List<Archive>(167) into VariableDeclarationStatement(173) at 0", "Move VariableDeclarationFragment(65) into VariableDeclarationStatement(173) at 1", "Insert SimpleType: ClassLoader(175) into VariableDeclarationStatement(183) at 0", "Insert SingleVariableDeclaration(187) into EnhancedForStatement(281) at 0", "Insert SimpleName: basePackages(188) into EnhancedForStatement(281) at 1", "Insert Block(280) into EnhancedForStatement(281) at 2", "Insert SimpleType: IOException(284) into SingleVariableDeclaration(286) at 0", "Insert SimpleName: e(285) into SingleVariableDeclaration(286) at 1", "Insert ThrowStatement(291) into Block(292) at 0", "Update SimpleName: filtered(278) to store", "Insert SimpleName: url(324) into MethodInvocation(326) at 0", "Insert SimpleName: getProtocol(325) into MethodInvocation(326) at 1", "Insert StringLiteral: \"zip\"(329) into MethodInvocation(332) at 0", "Insert SimpleName: equals(330) into MethodInvocation(332) at 1", "Insert SimpleName: protocol(331) into MethodInvocation(332) at 2", "Insert StringLiteral: \"jar\"(333) into MethodInvocation(336) at 0", "Insert SimpleName: equals(334) into MethodInvocation(336) at 1", "Insert SimpleName: protocol(335) into MethodInvocation(336) at 2", "Move SimpleType: List(53) into ParameterizedType: List<Archive>(167) at 0", "Insert SimpleType: Archive(166) into ParameterizedType: List<Archive>(167) at 1", "Update SimpleName: annotations(61) to archives", "Insert SimpleName: ClassLoader(174) into SimpleType: ClassLoader(175) at 0", "Update SimpleName: paths(164) to contextClassLoader", "Move SimpleType: String(161) into SingleVariableDeclaration(187) at 0", "Insert SimpleName: basePackage(186) into SingleVariableDeclaration(187) at 1", "Move VariableDeclarationStatement(183) into Block(280) at 0", "Insert WhileStatement(242) into Block(280) at 1", "Insert VariableDeclarationStatement(251) into Block(280) at 2", "Insert VariableDeclarationStatement(260) into Block(280) at 3", "Insert EnhancedForStatement(279) into Block(280) at 4", "Update SimpleName: Predicate(244) to IOException", "Move SimpleName: Predicate(244) into SimpleType: IOException(284) at 0", "Insert ClassInstanceCreation(290) into ThrowStatement(291) at 0", "Insert SimpleName: Archive(165) into SimpleType: Archive(166) at 0", "Insert MethodInvocation(179) into MethodInvocation(181) at 0", "Update SimpleName: split(166) to getContextClassLoader", "Insert ParameterizedType: Enumeration<URL>(193) into VariableDeclarationStatement(204) at 0", "Insert MethodInvocation(207) into WhileStatement(242) at 0", "Insert Block(241) into WhileStatement(242) at 1", "Insert SimpleType: CompositeArchive(244) into VariableDeclarationStatement(251) at 0", "Insert VariableDeclarationFragment(250) into VariableDeclarationStatement(251) at 1", "Insert SimpleType: AnnotationFinder(253) into VariableDeclarationStatement(260) at 0", "Insert VariableDeclarationFragment(259) into VariableDeclarationStatement(260) at 1", "Insert SingleVariableDeclaration(268) into EnhancedForStatement(279) at 0", "Insert SimpleName: annotations(269) into EnhancedForStatement(279) at 1", "Insert Block(278) into EnhancedForStatement(279) at 2", "Insert SimpleType: RuntimeException(288) into ClassInstanceCreation(290) at 0", "Insert SimpleName: e(289) into ClassInstanceCreation(290) at 1", "Insert SimpleName: Thread(177) into MethodInvocation(179) at 0", "Update SimpleName: classPath(165) to currentThread", "Move SimpleName: classPath(165) into MethodInvocation(179) at 1", "Insert SimpleType: Enumeration(190) into ParameterizedType: Enumeration<URL>(193) at 0", "Insert SimpleType: URL(192) into ParameterizedType: Enumeration<URL>(193) at 1", "Update SimpleName: roots(175) to resources", "Insert MethodInvocation(202) into VariableDeclarationFragment(203) at 1", "Insert SimpleName: resources(205) into MethodInvocation(207) at 0", "Insert SimpleName: hasMoreElements(206) into MethodInvocation(207) at 1", "Insert VariableDeclarationStatement(215) into Block(241) at 0", "Insert IfStatement(240) into Block(241) at 1", "Update SimpleName: AnnotatedClassScanner(210) to CompositeArchive", "Move SimpleName: AnnotatedClassScanner(210) into SimpleType: CompositeArchive(244) at 0", "Insert SimpleName: compositeArchive(245) into VariableDeclarationFragment(250) at 0", "Insert ClassInstanceCreation(249) into VariableDeclarationFragment(250) at 1", "Update SimpleName: Class(214) to AnnotationFinder", "Move SimpleName: Class(214) into SimpleType: AnnotationFinder(253) at 0", "Insert SimpleName: annotationFinder(254) into VariableDeclarationFragment(259) at 0", "Insert ClassInstanceCreation(258) into VariableDeclarationFragment(259) at 1", "Move ParameterizedType: Class<? extends Annotation>(49) into SingleVariableDeclaration(268) at 0", "Insert SimpleName: annotation(267) into SingleVariableDeclaration(268) at 1", "Insert ExpressionStatement(277) into Block(278) at 0", "Update SimpleName: Class(256) to RuntimeException", "Move SimpleName: Class(256) into SimpleType: RuntimeException(288) at 0", "Update SimpleName: File(171) to Enumeration", "Move SimpleName: File(171) into SimpleType: Enumeration(190) at 0", "Insert SimpleName: URL(191) into SimpleType: URL(192) at 0", "Insert SimpleName: contextClassLoader(195) into MethodInvocation(202) at 0", "Insert SimpleName: getResources(196) into MethodInvocation(202) at 1", "Insert MethodInvocation(201) into MethodInvocation(202) at 2", "Insert SimpleType: URL(209) into VariableDeclarationStatement(215) at 0", "Insert VariableDeclarationFragment(214) into VariableDeclarationStatement(215) at 1", "Insert MethodInvocation(218) into IfStatement(240) at 0", "Insert Block(228) into IfStatement(240) at 1", "Insert Block(239) into IfStatement(240) at 2", "Insert SimpleType: CompositeArchive(247) into ClassInstanceCreation(249) at 0", "Insert SimpleName: archives(248) into ClassInstanceCreation(249) at 1", "Insert SimpleType: AnnotationFinder(256) into ClassInstanceCreation(258) at 0", "Insert SimpleName: compositeArchive(257) into ClassInstanceCreation(258) at 1", "Insert MethodInvocation(276) into ExpressionStatement(277) at 0", "Insert SimpleName: basePackage(197) into MethodInvocation(201) at 0", "Insert SimpleName: replace(198) into MethodInvocation(201) at 1", "Insert StringLiteral: \".\"(199) into MethodInvocation(201) at 2", "Insert StringLiteral: \"/\"(200) into MethodInvocation(201) at 3", "Insert SimpleName: URL(208) into SimpleType: URL(209) at 0", "Update SimpleName: i(185) to thisUrl", "Move SimpleName: i(185) into VariableDeclarationFragment(214) at 0", "Insert MethodInvocation(213) into VariableDeclarationFragment(214) at 1", "Insert SimpleName: isJarURL(216) into MethodInvocation(218) at 0", "Insert SimpleName: thisUrl(217) into MethodInvocation(218) at 1", "Move ExpressionStatement(204) into Block(228) at 0", "Insert ExpressionStatement(238) into Block(239) at 0", "Insert SimpleName: CompositeArchive(246) into SimpleType: CompositeArchive(247) at 0", "Insert SimpleName: AnnotationFinder(255) into SimpleType: AnnotationFinder(256) at 0", "Insert SimpleName: store(270) into MethodInvocation(276) at 0", "Update SimpleName: Iterables(239) to addAll", "Move SimpleName: Iterables(239) into MethodInvocation(276) at 1", "Move MethodInvocation(243) into MethodInvocation(276) at 2", "Insert SimpleName: resources(211) into MethodInvocation(213) at 0", "Insert SimpleName: nextElement(212) into MethodInvocation(213) at 1", "Insert MethodInvocation(226) into ExpressionStatement(227) at 0", "Insert MethodInvocation(237) into ExpressionStatement(238) at 0", "Update SimpleName: scanner(241) to annotationFinder", "Insert SimpleName: annotation(274) into MethodInvocation(275) at 2", "Insert SimpleName: archives(219) into MethodInvocation(226) at 0", "Insert SimpleName: add(220) into MethodInvocation(226) at 1", "Insert ClassInstanceCreation(225) into MethodInvocation(226) at 2", "Insert SimpleName: archives(229) into MethodInvocation(237) at 0", "Insert SimpleName: add(230) into MethodInvocation(237) at 1", "Insert ClassInstanceCreation(236) into MethodInvocation(237) at 2", "Update SimpleType: File(198) to JarArchive", "Move SimpleType: File(198) into ClassInstanceCreation(225) at 0", "Insert SimpleName: contextClassLoader(223) into ClassInstanceCreation(225) at 1", "Insert SimpleName: thisUrl(224) into ClassInstanceCreation(225) at 2", "Insert SimpleType: GovernatorFileArchive(232) into ClassInstanceCreation(236) at 0", "Insert SimpleName: contextClassLoader(233) into ClassInstanceCreation(236) at 1", "Insert SimpleName: thisUrl(234) into ClassInstanceCreation(236) at 2", "Insert SimpleName: basePackage(235) into ClassInstanceCreation(236) at 3", "Update SimpleName: File(197) to JarArchive", "Update SimpleName: AnnotatedClassScanner(207) to GovernatorFileArchive", "Move SimpleName: AnnotatedClassScanner(207) into SimpleType: GovernatorFileArchive(232) at 0", "Delete Modifier: public(40)", "Delete Modifier: static(41)", "Delete SimpleType: List(43)", "Delete ParameterizedType: List<Class<? extends Annotation>>(50)", "Delete SimpleName: getDefaultAnnotations(51)", "Delete VariableDeclarationStatement(66)", "Delete MethodInvocation(72)", "Delete ExpressionStatement(73)", "Delete SimpleName: annotations(74)", "Delete ReturnStatement(75)", "Delete Block(76)", "Delete MethodDeclaration(77)", "Delete Modifier: public(78)", "Delete SimpleName: ClasspathScanner(79)", "Delete MethodDeclaration(91)", "Delete SimpleName: getDefaultAnnotations(80)", "Delete MethodInvocation(81)", "Delete SimpleName: annotations(105)", "Delete SimpleName: Lists(106)", "Delete WildcardType: ?(109)", "Delete ParameterizedType: Class<?>(110)", "Delete SimpleName: newArrayList(111)", "Delete MethodInvocation(112)", "Delete ConstructorInvocation(113)", "Delete Block(114)", "Delete SimpleName: Annotation(122)", "Delete SimpleType: Annotation(123)", "Delete WildcardType: ? extends Annotation(124)", "Delete ParameterizedType: Class<? extends Annotation>(125)", "Delete StringLiteral: \"java.class.path\"(156)", "Delete Dimension(162)", "Delete ArrayType: String[](163)", "Delete QualifiedName: File.pathSeparator(167)", "Delete SimpleType: File(172)", "Delete Dimension(173)", "Delete ArrayType: File[](174)", "Delete SimpleName: File(176)", "Delete SimpleType: File(177)", "Delete Dimension(178)", "Delete ArrayType: File[](179)", "Delete QualifiedName: paths.length(180)", "Delete ArrayCreation(181)", "Delete SimpleName: roots(194)", "Delete SimpleName: i(195)", "Delete ArrayAccess(196)", "Delete SimpleName: paths(199)", "Delete SimpleName: i(200)", "Delete ArrayAccess(201)", "Delete ClassInstanceCreation(202)", "Delete Assignment: =(203)", "Delete PrimitiveType: int(184)", "Delete NumberLiteral: 0(186)", "Delete VariableDeclarationFragment(187)", "Delete VariableDeclarationExpression(188)", "Delete SimpleName: i(189)", "Delete QualifiedName: paths.length(190)", "Delete InfixExpression: <(191)", "Delete SimpleName: i(192)", "Delete PostfixExpression: ++(193)", "Delete Block(205)", "Delete ForStatement(206)", "Delete SimpleType: AnnotatedClassScanner(208)", "Delete SimpleName: scanner(209)", "Delete SimpleType: AnnotatedClassScanner(211)", "Delete SimpleName: annotations(212)", "Delete SimpleName: toArray(213)", "Delete SimpleType: Class(215)", "Delete Dimension(216)", "Delete ArrayType: Class[](217)", "Delete SimpleName: annotations(218)", "Delete SimpleName: size(219)", "Delete MethodInvocation(220)", "Delete ArrayCreation(221)", "Delete MethodInvocation(222)", "Delete ClassInstanceCreation(223)", "Delete VariableDeclarationFragment(224)", "Delete VariableDeclarationStatement(225)", "Delete SimpleName: scanner(226)", "Delete SimpleName: scan(227)", "Delete SimpleName: roots(228)", "Delete MethodInvocation(229)", "Delete ExpressionStatement(230)", "Delete SimpleName: filtered(238)", "Delete SimpleName: filter(240)", "Delete SimpleType: Predicate(245)", "Delete SimpleName: Class(246)", "Delete SimpleType: Class(247)", "Delete WildcardType: ?(248)", "Delete ParameterizedType: Class<?>(249)", "Delete ParameterizedType: Predicate<Class<?>>(250)", "Delete SimpleName: Override(251)", "Delete MarkerAnnotation(252)", "Delete Modifier: public(253)", "Delete PrimitiveType: boolean(254)", "Delete SimpleName: apply(255)", "Delete SimpleType: Class(257)", "Delete WildcardType: ?(258)", "Delete ParameterizedType: Class<?>(259)", "Delete SimpleName: clazz(260)", "Delete SingleVariableDeclaration(261)", "Delete MethodInvocation(265)", "Delete PrefixExpression: !(266)", "Delete ReturnStatement(267)", "Delete Block(268)", "Delete MethodDeclaration(269)", "Delete AnonymousClassDeclaration(270)", "Delete ClassInstanceCreation(271)", "Delete MethodInvocation(272)", "Delete VariableDeclarationFragment(273)", "Delete VariableDeclarationStatement(274)"]}}, {"LifecycleInjector_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: com.netflix.governator.annotations.RequiredAssets to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS ImportDeclaration to CompilationUnit at 16", "INS QualifiedName: java.util.Arrays to ImportDeclaration at 0"]}, {"root": "UPDATE from com.google.inject.multibindings.MapBinder to com.netflix.governator.annotations.RequiredAsset", "operations": ["UPD QualifiedName: com.google.inject.multibindings.MapBinder from com.google.inject.multibindings.MapBinder to com.netflix.governator.annotations.RequiredAsset"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: LifecycleManager to SimpleType: LifecycleManager at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: lifecycleManager to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleType: LifecycleManager to FieldDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleType: LifecycleManager to MethodDeclaration at 1", "INS SimpleName: getLifecycleManager to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: LifecycleManager to SimpleType: LifecycleManager at 0", "INS Block to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS ReturnStatement to Block at 0", "INS SimpleName: lifecycleManager to ReturnStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 12", "INS SimpleName: createChildInjector to MethodInvocation at 0", "INS SimpleType: Module to SingleVariableDeclaration at 0", "INS SimpleName: asList to MethodInvocation at 1", "INS SimpleName: modules to SingleVariableDeclaration at 1", "INS MethodInvocation to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: Arrays to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: createChildInjector to MethodDeclaration at 2", "INS SimpleName: Injector to SimpleType: Injector at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: Injector to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: modules to MethodInvocation at 2", "INS SimpleName: Module to SimpleType: Module at 0", "INS MethodInvocation to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleName: createChildInjector to MethodDeclaration at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Module to ParameterizedType: Collection<Module> at 1", "INS SimpleName: localModules to MethodInvocation at 0", "INS ParameterizedType: Collection<Module> to SingleVariableDeclaration at 0", "INS SimpleName: Injector to SimpleType: Injector at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Module to SimpleType: Module at 0", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: Module to SimpleType: Module at 0", "INS SimpleType: Module to ParameterizedType: List<Module> at 1", "INS SimpleName: Lists to MethodInvocation at 0", "INS SimpleName: add to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: lifecycleManager to ClassInstanceCreation at 1", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: modules to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: modules to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS ParameterizedType: List<Module> to VariableDeclarationStatement at 0", "INS SimpleType: List to ParameterizedType: List<Module> at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: Injector to MethodDeclaration at 1", "INS SimpleName: localModules to VariableDeclarationFragment at 0", "INS SimpleType: Collection to ParameterizedType: Collection<Module> at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS SimpleName: loader to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleType: Binder to SingleVariableDeclaration at 0", "INS SimpleName: binder to SingleVariableDeclaration at 1", "INS SimpleName: Binder to SimpleType: Binder at 0", "INS SimpleName: requiredAsset to MethodInvocation at 0", "INS SimpleName: bindRequiredAsset to MethodDeclaration at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: requiredAsset to SingleVariableDeclaration at 1", "INS SimpleName: RequiredAsset to SimpleType: RequiredAsset at 0", "INS MethodInvocation to MethodInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: RequiredAsset to SingleVariableDeclaration at 0", "INS Block to IfStatement at 1", "INS SimpleName: loader to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: value to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to MethodInvocation at 3", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: requiredAsset to MethodInvocation at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: to to MethodInvocation at 1", "INS SimpleName: RequiredAssetBinder to MethodInvocation at 0", "INS SimpleName: binder to MethodInvocation at 2", "INS SimpleName: bindRequiredAsset to MethodInvocation at 1", "INS SimpleName: requiredAsset to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS Block to MethodDeclaration at 5"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS StringLiteral: \"org\" to MethodInvocation at 3", "INS ParameterizedType: Collection<String> to FieldDeclaration at 1", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS StringLiteral: \"com\" to MethodInvocation at 2", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleType: Collection to ParameterizedType: Collection<String> at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Lists to MethodInvocation at 0", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleName: basePackages to VariableDeclarationFragment at 0", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: Collection<String> at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleName: basePackages to MethodInvocation at 2", "INS SimpleName: Arrays to MethodInvocation at 0", "INS SimpleName: usingBasePackages to MethodInvocation at 0", "INS SimpleName: basePackages to SingleVariableDeclaration at 1", "INS SimpleName: usingBasePackages to MethodDeclaration at 2", "INS SimpleName: asList to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: Builder to SimpleType: Builder at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS SimpleType: Builder to MethodDeclaration at 1", "INS MethodInvocation to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS SimpleType: Builder to MethodDeclaration at 1", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS SimpleName: basePackages to MethodInvocation at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS ThisExpression to ReturnStatement at 0", "INS SimpleName: usingBasePackages to MethodDeclaration at 2", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: Lists to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: String to ParameterizedType: Collection<String> at 1", "INS MethodInvocation to Assignment: = at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ReturnStatement to Block at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: Builder to SimpleType: Builder at 0", "INS SimpleName: basePackages to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SimpleType: Collection to ParameterizedType: Collection<String> at 0", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: basePackages to FieldAccess at 1", "INS ParameterizedType: Collection<String> to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleName: basePackages to SingleVariableDeclaration at 1", "INS SimpleType: Collection to ParameterizedType: Collection<String> at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS ParameterizedType: Collection<String> to SingleVariableDeclaration at 0", "INS SimpleName: Collection to SimpleType: Collection at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2"]}, {"root": "INS ReturnStatement to Block at 2", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: createChildInjector to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS SimpleType: RequiredAsset to TypeLiteral at 0", "INS ExpressionStatement to Block at 5", "INS TypeLiteral to MethodInvocation at 2", "INS SimpleName: RequiredAsset to SimpleType: RequiredAsset at 0", "INS SimpleName: annotations to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: add to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS SimpleName: annotations to MethodInvocation at 0", "INS ExpressionStatement to Block at 6", "INS TypeLiteral to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: RequiredAssets to SimpleType: RequiredAssets at 0", "INS SimpleType: RequiredAssets to TypeLiteral at 0", "INS SimpleName: add to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 9", "operations": ["INS ExpressionStatement to Block at 9", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: lifecycleManager to Assignment: = at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "MOVE from ParameterizedType: Collection<String>", "operations": ["MOV SimpleType: String to ParameterizedType: Collection<String> at 1"]}, {"root": "INS Block to EnhancedForStatement at 2", "operations": ["INS Block to EnhancedForStatement at 2", "INS MethodInvocation to EnhancedForStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: RequiredAssets to SimpleType: RequiredAssets at 0", "INS SimpleName: requiredAsset to VariableDeclarationFragment at 0", "INS SimpleName: AutoBindSingleton to SimpleType: AutoBindSingleton at 0", "INS EnhancedForStatement to Block at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: bindRequiredAsset to MethodInvocation at 0", "INS SimpleName: requiredAssets to VariableDeclarationFragment at 0", "INS SimpleName: clazz to MethodInvocation at 0", "INS SimpleName: value to MethodInvocation at 1", "INS SimpleType: RequiredAsset to VariableDeclarationStatement at 0", "INS SimpleName: getAnnotation to MethodInvocation at 1", "INS SimpleName: RequiredAsset to SimpleType: RequiredAsset at 0", "INS SimpleName: requiredAssets to MethodInvocation at 0", "INS SimpleName: requiredAsset to MethodInvocation at 2", "INS SimpleName: getAnnotation to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS Block to IfStatement at 1", "INS SimpleName: isAnnotationPresent to MethodInvocation at 1", "INS SimpleType: RequiredAsset to TypeLiteral at 0", "INS SimpleType: RequiredAssets to VariableDeclarationStatement at 0", "INS SimpleName: RequiredAsset to SimpleType: RequiredAsset at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: RequiredAssets to SimpleType: RequiredAssets at 0", "INS SimpleName: clazz to MethodInvocation at 0", "INS SimpleName: isAnnotationPresent to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS TypeLiteral to MethodInvocation at 2", "INS TypeLiteral to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS TypeLiteral to MethodInvocation at 2", "INS SimpleName: clazz to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS IfStatement to IfStatement at 2", "INS SimpleName: bindRequiredAsset to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: requiredAsset to SingleVariableDeclaration at 1", "INS SimpleType: RequiredAsset to SingleVariableDeclaration at 0", "INS MethodInvocation to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: requiredAsset to MethodInvocation at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleType: RequiredAsset to TypeLiteral at 0", "INS TypeLiteral to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: isAnnotationPresent to MethodInvocation at 1", "INS SimpleType: RequiredAssets to TypeLiteral at 0", "INS SimpleName: clazz to MethodInvocation at 0", "INS SimpleName: binder to MethodInvocation at 1", "INS SimpleName: RequiredAsset to SimpleType: RequiredAsset at 0", "INS SimpleType: AutoBindSingleton to TypeLiteral at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: RequiredAsset to SimpleType: RequiredAsset at 0", "INS TypeLiteral to MethodInvocation at 2", "INS SimpleName: clazz to MethodInvocation at 0", "INS SimpleType: RequiredAssets to TypeLiteral at 0", "INS SimpleName: binder to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: RequiredAssets to SimpleType: RequiredAssets at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: localModules to MethodInvocation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: InternalLifecycleModule to ClassInstanceCreation at 0", "MOV MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV TypeLiteral to InfixExpression: != at 1"]}, {"root": "INS SimpleName: basePackages to ClassInstanceCreation at 5", "operations": ["INS SimpleName: basePackages to ClassInstanceCreation at 5"]}, {"root": "INS SimpleName: basePackages to ClassInstanceCreation at 1", "operations": ["INS SimpleName: basePackages to ClassInstanceCreation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "UPDATE from mapBinder to RequiredAssetBinder", "operations": ["UPD SimpleName: mapBinder from mapBinder to RequiredAssetBinder"]}, {"root": "INS SimpleName: bindRequiredAsset to MethodInvocation at 1", "operations": ["INS SimpleName: bindRequiredAsset to MethodInvocation at 1"]}, {"root": "UPDATE from addBinding to binder", "operations": ["UPD SimpleName: addBinding from addBinding to binder"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: add"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: AssetLoader", "DEL TypeLiteral", "DEL SimpleName: binder", "DEL SimpleType: MapBinder", "DEL SimpleName: mapBinder", "DEL SimpleName: newMapBinder", "DEL VariableDeclarationStatement", "DEL SimpleName: MapBinder", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleType: AssetLoader", "DEL ParameterizedType: MapBinder<String,AssetLoader>", "DEL SimpleName: MapBinder"]}]}}, {"LifecycleInjector_diff": {"operations": ["Move ImportDeclaration(17) into CompilationUnit(836) at 10", "Insert ImportDeclaration(21) into CompilationUnit(836) at 10", "Insert ImportDeclaration(33) into CompilationUnit(836) at 16", "Update QualifiedName: com.google.inject.multibindings.MapBinder(16) to com.netflix.governator.annotations.RequiredAsset", "Insert QualifiedName: com.netflix.governator.annotations.RequiredAssets(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: java.util.Arrays(32) into ImportDeclaration(33) at 0", "Insert FieldDeclaration(103) into TypeDeclaration: class(835) at 8", "Insert MethodDeclaration(354) into TypeDeclaration: class(835) at 11", "Insert MethodDeclaration(371) into TypeDeclaration: class(835) at 12", "Insert MethodDeclaration(409) into TypeDeclaration: class(835) at 13", "Insert MethodDeclaration(834) into TypeDeclaration: class(835) at 17", "Insert Modifier: private(97) into FieldDeclaration(103) at 0", "Insert Modifier: final(98) into FieldDeclaration(103) at 1", "Insert SimpleType: LifecycleManager(100) into FieldDeclaration(103) at 2", "Insert VariableDeclarationFragment(102) into FieldDeclaration(103) at 3", "Insert FieldDeclaration(157) into TypeDeclaration: class(346) at 5", "Insert MethodDeclaration(291) into TypeDeclaration: class(346) at 13", "Insert MethodDeclaration(315) into TypeDeclaration: class(346) at 14", "Insert Modifier: public(347) into MethodDeclaration(354) at 0", "Insert SimpleType: LifecycleManager(349) into MethodDeclaration(354) at 1", "Insert SimpleName: getLifecycleManager(350) into MethodDeclaration(354) at 2", "Insert Block(353) into MethodDeclaration(354) at 3", "Insert Modifier: public(355) into MethodDeclaration(371) at 0", "Insert SimpleType: Injector(357) into MethodDeclaration(371) at 1", "Insert SimpleName: createChildInjector(358) into MethodDeclaration(371) at 2", "Insert SingleVariableDeclaration(362) into MethodDeclaration(371) at 3", "Insert Block(370) into MethodDeclaration(371) at 4", "Insert Modifier: public(372) into MethodDeclaration(409) at 0", "Insert SimpleType: Injector(374) into MethodDeclaration(409) at 1", "Insert SimpleName: createChildInjector(375) into MethodDeclaration(409) at 2", "Insert SingleVariableDeclaration(382) into MethodDeclaration(409) at 3", "Insert Block(408) into MethodDeclaration(409) at 4", "Insert SingleVariableDeclaration(502) into MethodDeclaration(629) at 6", "Insert Modifier: private(800) into MethodDeclaration(834) at 0", "Insert PrimitiveType: void(801) into MethodDeclaration(834) at 1", "Insert SimpleName: bindRequiredAsset(802) into MethodDeclaration(834) at 2", "Insert SingleVariableDeclaration(806) into MethodDeclaration(834) at 3", "Insert SingleVariableDeclaration(810) into MethodDeclaration(834) at 4", "Insert Block(833) into MethodDeclaration(834) at 5", "Insert SimpleName: LifecycleManager(99) into SimpleType: LifecycleManager(100) at 0", "Insert SimpleName: lifecycleManager(101) into VariableDeclarationFragment(102) at 0", "Insert Modifier: private(144) into FieldDeclaration(157) at 0", "Insert ParameterizedType: Collection<String>(149) into FieldDeclaration(157) at 1", "Insert VariableDeclarationFragment(156) into FieldDeclaration(157) at 2", "Insert Modifier: public(275) into MethodDeclaration(291) at 0", "Insert SimpleType: Builder(277) into MethodDeclaration(291) at 1", "Insert SimpleName: usingBasePackages(278) into MethodDeclaration(291) at 2", "Insert SingleVariableDeclaration(282) into MethodDeclaration(291) at 3", "Insert Block(290) into MethodDeclaration(291) at 4", "Insert Modifier: public(292) into MethodDeclaration(315) at 0", "Insert SimpleType: Builder(294) into MethodDeclaration(315) at 1", "Insert SimpleName: usingBasePackages(295) into MethodDeclaration(315) at 2", "Insert SingleVariableDeclaration(302) into MethodDeclaration(315) at 3", "Insert Block(314) into MethodDeclaration(315) at 4", "Insert SimpleName: LifecycleManager(348) into SimpleType: LifecycleManager(349) at 0", "Insert ReturnStatement(352) into Block(353) at 0", "Insert SimpleName: Injector(356) into SimpleType: Injector(357) at 0", "Insert SimpleType: Module(360) into SingleVariableDeclaration(362) at 0", "Insert SimpleName: modules(361) into SingleVariableDeclaration(362) at 1", "Insert ReturnStatement(369) into Block(370) at 0", "Insert SimpleName: Injector(373) into SimpleType: Injector(374) at 0", "Insert ParameterizedType: Collection<Module>(380) into SingleVariableDeclaration(382) at 0", "Insert SimpleName: modules(381) into SingleVariableDeclaration(382) at 1", "Insert VariableDeclarationStatement(394) into Block(408) at 0", "Insert ExpressionStatement(402) into Block(408) at 1", "Move ReturnStatement(350) into Block(408) at 2", "Insert ReturnStatement(466) into Block(467) at 2", "Insert ParameterizedType: Collection<String>(500) into SingleVariableDeclaration(502) at 0", "Insert SimpleName: basePackages(501) into SingleVariableDeclaration(502) at 1", "Insert ExpressionStatement(555) into Block(628) at 5", "Insert ExpressionStatement(562) into Block(628) at 6", "Insert ExpressionStatement(627) into Block(628) at 9", "Insert SimpleType: Binder(804) into SingleVariableDeclaration(806) at 0", "Insert SimpleName: binder(805) into SingleVariableDeclaration(806) at 1", "Insert SimpleType: RequiredAsset(808) into SingleVariableDeclaration(810) at 0", "Insert SimpleName: requiredAsset(809) into SingleVariableDeclaration(810) at 1", "Insert IfStatement(832) into Block(833) at 0", "Insert SimpleType: Collection(146) into ParameterizedType: Collection<String>(149) at 0", "Insert SimpleType: String(148) into ParameterizedType: Collection<String>(149) at 1", "Insert SimpleName: basePackages(150) into VariableDeclarationFragment(156) at 0", "Insert MethodInvocation(155) into VariableDeclarationFragment(156) at 1", "Insert SimpleName: Builder(276) into SimpleType: Builder(277) at 0", "Move SimpleType: String(517) into SingleVariableDeclaration(282) at 0", "Insert SimpleName: basePackages(281) into SingleVariableDeclaration(282) at 1", "Insert ReturnStatement(289) into Block(290) at 0", "Insert SimpleName: Builder(293) into SimpleType: Builder(294) at 0", "Insert ParameterizedType: Collection<String>(300) into SingleVariableDeclaration(302) at 0", "Insert SimpleName: basePackages(301) into SingleVariableDeclaration(302) at 1", "Insert ExpressionStatement(311) into Block(314) at 0", "Insert ReturnStatement(313) into Block(314) at 1", "Insert SimpleName: lifecycleManager(351) into ReturnStatement(352) at 0", "Insert SimpleName: Module(359) into SimpleType: Module(360) at 0", "Insert MethodInvocation(368) into ReturnStatement(369) at 0", "Insert SimpleType: Collection(377) into ParameterizedType: Collection<Module>(380) at 0", "Insert SimpleType: Module(379) into ParameterizedType: Collection<Module>(380) at 1", "Insert ParameterizedType: List<Module>(387) into VariableDeclarationStatement(394) at 0", "Insert VariableDeclarationFragment(393) into VariableDeclarationStatement(394) at 1", "Insert MethodInvocation(401) into ExpressionStatement(402) at 0", "Insert MethodInvocation(465) into ReturnStatement(466) at 0", "Insert SimpleType: Collection(497) into ParameterizedType: Collection<String>(500) at 0", "Move SimpleType: String(508) into ParameterizedType: Collection<String>(500) at 1", "Insert MethodInvocation(554) into ExpressionStatement(555) at 0", "Insert MethodInvocation(561) into ExpressionStatement(562) at 0", "Insert Assignment: =(626) into ExpressionStatement(627) at 0", "Insert Block(796) into EnhancedForStatement(797) at 2", "Insert SimpleName: Binder(803) into SimpleType: Binder(804) at 0", "Insert SimpleName: RequiredAsset(807) into SimpleType: RequiredAsset(808) at 0", "Insert InfixExpression: !=(817) into IfStatement(832) at 0", "Insert Block(831) into IfStatement(832) at 1", "Insert SimpleName: Collection(145) into SimpleType: Collection(146) at 0", "Insert SimpleName: String(147) into SimpleType: String(148) at 0", "Insert SimpleName: Lists(151) into MethodInvocation(155) at 0", "Insert SimpleName: newArrayList(152) into MethodInvocation(155) at 1", "Insert StringLiteral: \"com\"(153) into MethodInvocation(155) at 2", "Insert StringLiteral: \"org\"(154) into MethodInvocation(155) at 3", "Insert MethodInvocation(288) into ReturnStatement(289) at 0", "Insert SimpleType: Collection(297) into ParameterizedType: Collection<String>(300) at 0", "Insert SimpleType: String(299) into ParameterizedType: Collection<String>(300) at 1", "Insert Assignment: =(310) into ExpressionStatement(311) at 0", "Insert ThisExpression(312) into ReturnStatement(313) at 0", "Insert SimpleName: createChildInjector(363) into MethodInvocation(368) at 0", "Insert MethodInvocation(367) into MethodInvocation(368) at 1", "Insert SimpleName: Collection(376) into SimpleType: Collection(377) at 0", "Insert SimpleName: Module(378) into SimpleType: Module(379) at 0", "Insert SimpleType: List(384) into ParameterizedType: List<Module>(387) at 0", "Insert SimpleType: Module(386) into ParameterizedType: List<Module>(387) at 1", "Insert SimpleName: localModules(388) into VariableDeclarationFragment(393) at 0", "Insert MethodInvocation(392) into VariableDeclarationFragment(393) at 1", "Insert SimpleName: localModules(395) into MethodInvocation(401) at 0", "Insert SimpleName: add(396) into MethodInvocation(401) at 1", "Insert ClassInstanceCreation(400) into MethodInvocation(401) at 2", "Insert SimpleName: createChildInjector(463) into MethodInvocation(465) at 0", "Move SimpleName: localModules(333) into MethodInvocation(465) at 1", "Insert SimpleName: Collection(496) into SimpleType: Collection(497) at 0", "Insert SimpleName: annotations(549) into MethodInvocation(554) at 0", "Insert SimpleName: add(550) into MethodInvocation(554) at 1", "Insert TypeLiteral(553) into MethodInvocation(554) at 2", "Insert SimpleName: annotations(556) into MethodInvocation(561) at 0", "Insert SimpleName: add(557) into MethodInvocation(561) at 1", "Insert TypeLiteral(560) into MethodInvocation(561) at 2", "Insert SimpleName: lifecycleManager(619) into Assignment: =(626) at 0", "Move MethodInvocation(342) into Assignment: =(626) at 1", "Insert IfStatement(702) into Block(796) at 0", "Insert IfStatement(795) into Block(796) at 1", "Insert MethodInvocation(813) into InfixExpression: !=(817) at 0", "Move TypeLiteral(521) into InfixExpression: !=(817) at 1", "Insert ExpressionStatement(830) into Block(831) at 0", "Insert SimpleName: usingBasePackages(283) into MethodInvocation(288) at 0", "Insert MethodInvocation(287) into MethodInvocation(288) at 1", "Insert SimpleName: Collection(296) into SimpleType: Collection(297) at 0", "Insert SimpleName: String(298) into SimpleType: String(299) at 0", "Insert FieldAccess(305) into Assignment: =(310) at 0", "Insert MethodInvocation(309) into Assignment: =(310) at 1", "Insert SimpleName: basePackages(326) into ClassInstanceCreation(327) at 5", "Insert SimpleName: Arrays(364) into MethodInvocation(367) at 0", "Insert SimpleName: asList(365) into MethodInvocation(367) at 1", "Insert SimpleName: modules(366) into MethodInvocation(367) at 2", "Insert SimpleName: List(383) into SimpleType: List(384) at 0", "Insert SimpleName: Module(385) into SimpleType: Module(386) at 0", "Insert SimpleName: Lists(389) into MethodInvocation(392) at 0", "Insert SimpleName: newArrayList(390) into MethodInvocation(392) at 1", "Insert SimpleName: modules(391) into MethodInvocation(392) at 2", "Move SimpleType: InternalLifecycleModule(336) into ClassInstanceCreation(400) at 0", "Insert SimpleName: lifecycleManager(399) into ClassInstanceCreation(400) at 1", "Insert SimpleType: RequiredAsset(552) into TypeLiteral(553) at 0", "Insert SimpleType: RequiredAssets(559) into TypeLiteral(560) at 0", "Insert SimpleName: basePackages(566) into ClassInstanceCreation(568) at 1", "Insert MethodInvocation(651) into IfStatement(702) at 0", "Insert Block(668) into IfStatement(702) at 1", "Insert IfStatement(701) into IfStatement(702) at 2", "Insert MethodInvocation(708) into IfStatement(795) at 0", "Move Block(603) into IfStatement(795) at 1", "Insert SimpleName: requiredAsset(811) into MethodInvocation(813) at 0", "Insert SimpleName: loader(812) into MethodInvocation(813) at 1", "Insert MethodInvocation(829) into ExpressionStatement(830) at 0", "Insert SimpleName: Arrays(284) into MethodInvocation(287) at 0", "Insert SimpleName: asList(285) into MethodInvocation(287) at 1", "Insert SimpleName: basePackages(286) into MethodInvocation(287) at 2", "Insert ThisExpression(303) into FieldAccess(305) at 0", "Insert SimpleName: basePackages(304) into FieldAccess(305) at 1", "Insert SimpleName: Lists(306) into MethodInvocation(309) at 0", "Insert SimpleName: newArrayList(307) into MethodInvocation(309) at 1", "Insert SimpleName: basePackages(308) into MethodInvocation(309) at 2", "Insert SimpleName: RequiredAsset(551) into SimpleType: RequiredAsset(552) at 0", "Insert SimpleName: RequiredAssets(558) into SimpleType: RequiredAssets(559) at 0", "Insert SimpleName: clazz(646) into MethodInvocation(651) at 0", "Insert SimpleName: isAnnotationPresent(647) into MethodInvocation(651) at 1", "Insert TypeLiteral(650) into MethodInvocation(651) at 2", "Insert VariableDeclarationStatement(662) into Block(668) at 0", "Insert ExpressionStatement(667) into Block(668) at 1", "Insert MethodInvocation(674) into IfStatement(701) at 0", "Insert Block(700) into IfStatement(701) at 1", "Insert SimpleName: clazz(703) into MethodInvocation(708) at 0", "Insert SimpleName: isAnnotationPresent(704) into MethodInvocation(708) at 1", "Insert TypeLiteral(707) into MethodInvocation(708) at 2", "Insert MethodInvocation(824) into MethodInvocation(829) at 0", "Insert SimpleName: to(825) into MethodInvocation(829) at 1", "Insert MethodInvocation(828) into MethodInvocation(829) at 2", "Insert SimpleType: RequiredAsset(649) into TypeLiteral(650) at 0", "Insert SimpleType: RequiredAsset(653) into VariableDeclarationStatement(662) at 0", "Insert VariableDeclarationFragment(661) into VariableDeclarationStatement(662) at 1", "Insert MethodInvocation(666) into ExpressionStatement(667) at 0", "Insert SimpleName: clazz(669) into MethodInvocation(674) at 0", "Insert SimpleName: isAnnotationPresent(670) into MethodInvocation(674) at 1", "Insert TypeLiteral(673) into MethodInvocation(674) at 2", "Insert VariableDeclarationStatement(685) into Block(700) at 0", "Insert EnhancedForStatement(699) into Block(700) at 1", "Insert SimpleType: AutoBindSingleton(706) into TypeLiteral(707) at 0", "Insert SimpleName: RequiredAssetBinder(818) into MethodInvocation(824) at 0", "Insert SimpleName: bindRequiredAsset(819) into MethodInvocation(824) at 1", "Insert SimpleName: binder(820) into MethodInvocation(824) at 2", "Insert MethodInvocation(823) into MethodInvocation(824) at 3", "Insert SimpleName: requiredAsset(826) into MethodInvocation(828) at 0", "Insert SimpleName: loader(827) into MethodInvocation(828) at 1", "Insert SimpleName: RequiredAsset(648) into SimpleType: RequiredAsset(649) at 0", "Insert SimpleName: RequiredAsset(652) into SimpleType: RequiredAsset(653) at 0", "Insert SimpleName: requiredAsset(654) into VariableDeclarationFragment(661) at 0", "Insert MethodInvocation(660) into VariableDeclarationFragment(661) at 1", "Insert SimpleName: bindRequiredAsset(663) into MethodInvocation(666) at 0", "Insert SimpleName: binder(664) into MethodInvocation(666) at 1", "Insert SimpleName: requiredAsset(665) into MethodInvocation(666) at 2", "Insert SimpleType: RequiredAssets(672) into TypeLiteral(673) at 0", "Insert SimpleType: RequiredAssets(676) into VariableDeclarationStatement(685) at 0", "Insert VariableDeclarationFragment(684) into VariableDeclarationStatement(685) at 1", "Insert SingleVariableDeclaration(689) into EnhancedForStatement(699) at 0", "Insert MethodInvocation(692) into EnhancedForStatement(699) at 1", "Insert Block(698) into EnhancedForStatement(699) at 2", "Insert SimpleName: AutoBindSingleton(705) into SimpleType: AutoBindSingleton(706) at 0", "Insert SimpleName: requiredAsset(821) into MethodInvocation(823) at 0", "Insert SimpleName: value(822) into MethodInvocation(823) at 1", "Insert SimpleName: clazz(655) into MethodInvocation(660) at 0", "Insert SimpleName: getAnnotation(656) into MethodInvocation(660) at 1", "Insert TypeLiteral(659) into MethodInvocation(660) at 2", "Insert SimpleName: RequiredAssets(671) into SimpleType: RequiredAssets(672) at 0", "Insert SimpleName: RequiredAssets(675) into SimpleType: RequiredAssets(676) at 0", "Insert SimpleName: requiredAssets(677) into VariableDeclarationFragment(684) at 0", "Insert MethodInvocation(683) into VariableDeclarationFragment(684) at 1", "Insert SimpleType: RequiredAsset(687) into SingleVariableDeclaration(689) at 0", "Insert SimpleName: requiredAsset(688) into SingleVariableDeclaration(689) at 1", "Insert SimpleName: requiredAssets(690) into MethodInvocation(692) at 0", "Insert SimpleName: value(691) into MethodInvocation(692) at 1", "Insert ExpressionStatement(697) into Block(698) at 0", "Insert SimpleType: RequiredAsset(658) into TypeLiteral(659) at 0", "Insert SimpleName: clazz(678) into MethodInvocation(683) at 0", "Insert SimpleName: getAnnotation(679) into MethodInvocation(683) at 1", "Insert TypeLiteral(682) into MethodInvocation(683) at 2", "Insert SimpleName: RequiredAsset(686) into SimpleType: RequiredAsset(687) at 0", "Insert MethodInvocation(696) into ExpressionStatement(697) at 0", "Insert SimpleName: RequiredAsset(657) into SimpleType: RequiredAsset(658) at 0", "Insert SimpleType: RequiredAssets(681) into TypeLiteral(682) at 0", "Insert SimpleName: bindRequiredAsset(693) into MethodInvocation(696) at 0", "Insert SimpleName: binder(694) into MethodInvocation(696) at 1", "Insert SimpleName: requiredAsset(695) into MethodInvocation(696) at 2", "Update SimpleName: mapBinder(545) to RequiredAssetBinder", "Insert SimpleName: bindRequiredAsset(736) into MethodInvocation(739) at 1", "Update SimpleName: addBinding(546) to binder", "Insert SimpleName: RequiredAssets(680) into SimpleType: RequiredAssets(681) at 0", "Delete SimpleName: add(334)", "Delete ClassInstanceCreation(343)", "Delete MethodInvocation(344)", "Delete ExpressionStatement(345)", "Delete SimpleName: MapBinder(505)", "Delete SimpleType: MapBinder(506)", "Delete SimpleName: AssetLoader(509)", "Delete SimpleType: AssetLoader(510)", "Delete ParameterizedType: MapBinder<String,AssetLoader>(511)", "Delete SimpleName: mapBinder(512)", "Delete SimpleName: MapBinder(513)", "Delete SimpleName: newMapBinder(514)", "Delete SimpleName: binder(515)", "Delete TypeLiteral(518)", "Delete MethodInvocation(522)", "Delete VariableDeclarationFragment(523)", "Delete VariableDeclarationStatement(524)"]}}, {"RequiredAssetBinder_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: bindRequiredAsset to MethodInvocation at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS Block to MethodDeclaration at 4", "INS SimpleName: LinkedBindingBuilder to SimpleType: LinkedBindingBuilder at 0", "INS SimpleName: binder to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: AssetLoader to SimpleType: AssetLoader at 0", "INS SimpleType: LinkedBindingBuilder to ParameterizedType: LinkedBindingBuilder<AssetLoader> at 0", "INS SimpleName: bindRequiredAsset to MethodDeclaration at 2", "INS SimpleName: requiredAssetValue to SingleVariableDeclaration at 1", "INS ParameterizedType: LinkedBindingBuilder<AssetLoader> to MethodDeclaration at 1", "INS SimpleName: requiredAssetValue to MethodInvocation at 2", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: AssetLoader to ParameterizedType: LinkedBindingBuilder<AssetLoader> at 1", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS Modifier: static to MethodDeclaration at 1", "operations": ["INS Modifier: static to MethodDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: binder to SingleVariableDeclaration at 1", "INS SimpleType: Binder to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Binder to SimpleType: Binder at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.inject.Key", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.inject.TypeLiteral", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.inject.binder.AnnotatedBindingBuilder", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.inject.multibindings.Multibinder", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.netflix.governator.configuration.ConfigurationProvider"]}]}}, {"RequiredAssetBinder_diff": {"operations": ["Insert MethodDeclaration(89) into TypeDeclaration: class(103) at 4", "Insert Modifier: static(22) into MethodDeclaration(71) at 1", "Insert SingleVariableDeclaration(32) into MethodDeclaration(71) at 4", "Insert Modifier: public(72) into MethodDeclaration(89) at 0", "Insert ParameterizedType: LinkedBindingBuilder<AssetLoader>(77) into MethodDeclaration(89) at 1", "Insert SimpleName: bindRequiredAsset(78) into MethodDeclaration(89) at 2", "Insert SingleVariableDeclaration(82) into MethodDeclaration(89) at 3", "Insert Block(88) into MethodDeclaration(89) at 4", "Insert SimpleType: Binder(30) into SingleVariableDeclaration(32) at 0", "Insert SimpleName: binder(31) into SingleVariableDeclaration(32) at 1", "Insert SimpleType: LinkedBindingBuilder(74) into ParameterizedType: LinkedBindingBuilder<AssetLoader>(77) at 0", "Insert SimpleType: AssetLoader(76) into ParameterizedType: LinkedBindingBuilder<AssetLoader>(77) at 1", "Insert SimpleType: String(80) into SingleVariableDeclaration(82) at 0", "Insert SimpleName: requiredAssetValue(81) into SingleVariableDeclaration(82) at 1", "Insert ReturnStatement(87) into Block(88) at 0", "Insert SimpleName: Binder(29) into SimpleType: Binder(30) at 0", "Insert SimpleName: LinkedBindingBuilder(73) into SimpleType: LinkedBindingBuilder(74) at 0", "Insert SimpleName: AssetLoader(75) into SimpleType: AssetLoader(76) at 0", "Insert SimpleName: String(79) into SimpleType: String(80) at 0", "Insert MethodInvocation(86) into ReturnStatement(87) at 0", "Insert SimpleName: bindRequiredAsset(83) into MethodInvocation(86) at 0", "Insert SimpleName: binder(84) into MethodInvocation(86) at 1", "Insert SimpleName: requiredAssetValue(85) into MethodInvocation(86) at 2", "Delete QualifiedName: com.google.inject.Key(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: com.google.inject.TypeLiteral(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: com.google.inject.binder.AnnotatedBindingBuilder(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: com.google.inject.multibindings.Multibinder(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: com.netflix.governator.configuration.ConfigurationProvider(18)", "Delete ImportDeclaration(19)"]}}], "commit_stats": [{"total_files": 6, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "True"}]}