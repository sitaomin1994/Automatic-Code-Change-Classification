{"application": "apache-giraph", "csha": "f5b685efa09b539b1f95925405723f7ac7b1dcea", "files": [{"ServerData_cluster": {"actions": [{"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: workerServer to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: WorkerServer to SingleVariableDeclaration at 0", "INS SimpleName: WorkerServer to SimpleType: WorkerServer at 0"]}, {"root": "INS TagElement: @param to Javadoc at 2", "operations": ["INS TextElement:  Worker server to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: workerServer to TagElement: @param at 0"]}, {"root": "INS SimpleName: workerServer to ClassInstanceCreation at 3", "operations": ["INS SimpleName: workerServer to ClassInstanceCreation at 3"]}]}}, {"ServerData_diff": {"operations": ["Insert SingleVariableDeclaration(428) into MethodDeclaration(614) at 4", "Insert TagElement: @param(404) into Javadoc(411) at 2", "Insert SimpleType: WorkerServer(426) into SingleVariableDeclaration(428) at 0", "Insert SimpleName: workerServer(427) into SingleVariableDeclaration(428) at 1", "Insert SimpleName: workerServer(402) into TagElement: @param(404) at 0", "Insert TextElement:  Worker server(403) into TagElement: @param(404) at 1", "Insert SimpleName: WorkerServer(425) into SimpleType: WorkerServer(426) at 0", "Insert SimpleName: workerServer(540) into ClassInstanceCreation(541) at 3"]}}, {"WorkerServer_cluster": {"actions": [{"root": "INS SimpleType: NetworkMetrics to TypeDeclaration: interface at 7", "operations": ["INS SimpleName: NetworkMetrics to SimpleType: NetworkMetrics at 0", "INS SimpleType: NetworkMetrics to TypeDeclaration: interface at 7"]}]}}, {"WorkerServer_diff": {"operations": ["Insert SimpleType: NetworkMetrics(48) into TypeDeclaration: interface(110) at 7", "Insert SimpleName: NetworkMetrics(47) into SimpleType: NetworkMetrics(48) at 0"]}}, {"GiraphConstants_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 61"]}, {"root": "UPDATE from org.apache.giraph.ooc.policy.ThresholdBasedOracle to org.apache.giraph.ooc.policy.MemoryEstimatorOracle", "operations": ["UPD QualifiedName: org.apache.giraph.ooc.policy.ThresholdBasedOracle from org.apache.giraph.ooc.policy.ThresholdBasedOracle to org.apache.giraph.ooc.policy.MemoryEstimatorOracle"]}, {"root": "UPDATE from ThresholdBasedOracle to MemoryEstimatorOracle", "operations": ["UPD SimpleType: ThresholdBasedOracle from ThresholdBasedOracle to MemoryEstimatorOracle", "UPD SimpleName: ThresholdBasedOracle from ThresholdBasedOracle to MemoryEstimatorOracle"]}]}}, {"GiraphConstants_diff": {"operations": ["Move ImportDeclaration(119) into CompilationUnit(3281) at 61", "Update QualifiedName: org.apache.giraph.ooc.policy.ThresholdBasedOracle(120) to org.apache.giraph.ooc.policy.MemoryEstimatorOracle", "Update SimpleType: ThresholdBasedOracle(2675) to MemoryEstimatorOracle", "Update SimpleName: ThresholdBasedOracle(2674) to MemoryEstimatorOracle"]}}, {"AbstractEdgeStore_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: org.apache.giraph.utils.ProgressCounter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: org.apache.giraph.utils.ThreadLocalProgressCounter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleType: ThreadLocalProgressCounter to FieldDeclaration at 4", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS SimpleType: ThreadLocalProgressCounter to ClassInstanceCreation at 0", "INS SimpleName: PROGRESS_COUNTER to VariableDeclarationFragment at 0", "INS Javadoc to FieldDeclaration at 0", "INS TextElement: Used to keep track of progress during the move-edges process  to TagElement at 0", "INS SimpleName: ThreadLocalProgressCounter to SimpleType: ThreadLocalProgressCounter at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS Modifier: static to FieldDeclaration at 2", "INS SimpleName: ThreadLocalProgressCounter to SimpleType: ThreadLocalProgressCounter at 0", "INS Modifier: final to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS TagElement to Javadoc at 0", "INS Modifier: public to FieldDeclaration at 1"]}, {"root": "INS Modifier: volatile to FieldDeclaration at 2", "operations": ["INS Modifier: volatile to FieldDeclaration at 2"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 4"]}, {"root": "UPDATE from Integer to ProgressCounter", "operations": ["UPD SimpleName: Integer from Integer to ProgressCounter", "UPD SimpleType: Integer from Integer to ProgressCounter"]}, {"root": "UPDATE from partitionId to numVerticesProcessed", "operations": ["UPD SimpleName: partitionId from partitionId to numVerticesProcessed"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: PROGRESS_COUNTER to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS ExpressionStatement to Block at 6", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: inc to MethodInvocation at 1", "INS SimpleName: numVerticesProcessed to MethodInvocation at 0"]}]}}, {"AbstractEdgeStore_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(1328) at 10", "Insert ImportDeclaration(25) into CompilationUnit(1328) at 12", "Insert QualifiedName: org.apache.giraph.utils.ProgressCounter(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: org.apache.giraph.utils.ThreadLocalProgressCounter(24) into ImportDeclaration(25) at 0", "Insert FieldDeclaration(135) into TypeDeclaration: class(1327) at 11", "Insert Javadoc(124) into FieldDeclaration(135) at 0", "Insert Modifier: public(125) into FieldDeclaration(135) at 1", "Insert Modifier: static(126) into FieldDeclaration(135) at 2", "Insert Modifier: final(127) into FieldDeclaration(135) at 3", "Insert SimpleType: ThreadLocalProgressCounter(129) into FieldDeclaration(135) at 4", "Insert VariableDeclarationFragment(134) into FieldDeclaration(135) at 5", "Insert Modifier: volatile(246) into FieldDeclaration(251) at 2", "Insert TagElement(123) into Javadoc(124) at 0", "Insert SimpleName: ThreadLocalProgressCounter(128) into SimpleType: ThreadLocalProgressCounter(129) at 0", "Insert SimpleName: PROGRESS_COUNTER(130) into VariableDeclarationFragment(134) at 0", "Insert ClassInstanceCreation(133) into VariableDeclarationFragment(134) at 1", "Insert TextElement: Used to keep track of progress during the move-edges process (122) into TagElement(123) at 0", "Insert SimpleType: ThreadLocalProgressCounter(132) into ClassInstanceCreation(133) at 0", "Insert SimpleName: ThreadLocalProgressCounter(131) into SimpleType: ThreadLocalProgressCounter(132) at 0", "Move VariableDeclarationStatement(985) into Block(1290) at 4", "Update SimpleType: Integer(982) to ProgressCounter", "Update SimpleName: Integer(981) to ProgressCounter", "Update SimpleName: partitionId(983) to numVerticesProcessed", "Insert MethodInvocation(1032) into VariableDeclarationFragment(1033) at 1", "Insert SimpleName: PROGRESS_COUNTER(1030) into MethodInvocation(1032) at 0", "Insert SimpleName: get(1031) into MethodInvocation(1032) at 1", "Insert ExpressionStatement(1263) into Block(1268) at 6", "Insert MethodInvocation(1262) into ExpressionStatement(1263) at 0", "Insert SimpleName: numVerticesProcessed(1260) into MethodInvocation(1262) at 0", "Insert SimpleName: inc(1261) into MethodInvocation(1262) at 1"]}}, {"OutOfCoreEngine_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.giraph.comm.NetworkMetrics to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: org.apache.giraph.comm.flow_control.CreditBasedFlowControl to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 21", "operations": ["INS PrimitiveType: short to FieldDeclaration at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: private to FieldDeclaration at 1", "INS Modifier: final to FieldDeclaration at 2", "INS TagElement to Javadoc at 0", "INS SimpleName: maxRequestsCredit to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 21", "INS Javadoc to FieldDeclaration at 0", "INS TextElement: Cached value for NettyClient.MAX_NUM_OF_OPEN_REQUESTS_PER_WORKER (max to TagElement at 0", "INS TextElement: credit used for credit-based flow-control mechanism) to TagElement at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 24", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 24", "INS SimpleName: networkMetrics to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 1", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: NetworkMetrics to SimpleType: NetworkMetrics at 0", "INS TextElement: Provides statistics about network traffic (e.g. received bytes per to TagElement at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleType: NetworkMetrics to FieldDeclaration at 3", "INS TagElement to Javadoc at 0", "INS TextElement: superstep etc). to TagElement at 1", "INS Javadoc to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 44", "operations": ["INS SimpleName: updateRequestsCreditFraction to MethodDeclaration at 3", "INS SimpleName: fraction to InfixExpression: * at 1", "INS SimpleName: isInfoEnabled to MethodInvocation at 1", "INS SimpleName: fraction to TagElement: @param at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS TagElement: @param to Javadoc at 1", "INS PrimitiveType: short to CastExpression at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 2", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: newCredit to InfixExpression: + at 1", "INS VariableDeclarationStatement to Block at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: flowControl to InfixExpression: != at 0", "INS SimpleName: fraction to InfixExpression: <= at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleType: CreditBasedFlowControl to CastExpression at 0", "INS StringLiteral: \"updateRequestsCreditFraction: updating the credit to \" to InfixExpression: + at 0", "INS Javadoc to MethodDeclaration at 0", "INS InfixExpression: <= to InfixExpression: && at 1", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: checkState to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: CreditBasedFlowControl to SimpleType: CreditBasedFlowControl at 0", "INS SimpleName: fraction to InfixExpression: >= at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS InfixExpression: >= to InfixExpression: && at 0", "INS PrimitiveType: short to VariableDeclarationStatement at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS ParenthesizedExpression to CastExpression at 1", "INS Block to IfStatement at 1", "INS SimpleName: updateCredit to MethodInvocation at 1", "INS SimpleName: fraction to SingleVariableDeclaration at 1", "INS InfixExpression: && to MethodInvocation at 1", "INS CastExpression to ParenthesizedExpression at 0", "INS TextElement: Update the credit announced for this worker in Netty. The lower the credit to TagElement at 0", "INS TextElement: take. to TagElement at 3", "INS SimpleName: maxRequestsCredit to InfixExpression: * at 0", "INS TagElement to Javadoc at 0", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TextElement: is, the lower rate incoming messages arrive at this worker. Thus, credit to TagElement at 1", "INS NumberLiteral: 1 to InfixExpression: <= at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: info to MethodInvocation at 1", "INS SimpleName: newCredit to VariableDeclarationFragment at 0", "INS MethodDeclaration to TypeDeclaration: class at 44", "INS InfixExpression: * to ParenthesizedExpression at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS TextElement: is an indirect way of controlling amount of memory incoming messages would to TagElement at 2", "INS Block to MethodDeclaration at 5", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: flowControl to CastExpression at 1", "INS TextElement:  the fraction of max credits others can use to send requests to TagElement: @param at 1", "INS TextElement: to this worker to TagElement: @param at 2", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 3", "INS SimpleName: newCredit to MethodInvocation at 2", "INS PrimitiveType: double to SingleVariableDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 52", "operations": ["INS SimpleName: networkMetrics to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 52", "INS SimpleName: getNetworkMetrics to MethodDeclaration at 2", "INS SimpleName: NetworkMetrics to SimpleType: NetworkMetrics at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: NetworkMetrics to MethodDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: NetworkMetrics to SimpleType: NetworkMetrics at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: networkMetrics to SingleVariableDeclaration at 1", "INS SimpleType: NetworkMetrics to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV TryStatement to Block at 18"]}, {"root": "INS TagElement: @param to Javadoc at 3", "operations": ["INS TextElement:  Interface for network stats to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 3", "INS SimpleName: networkMetrics to TagElement: @param at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: networkMetrics to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: networkMetrics to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 15", "operations": ["INS CastExpression to Assignment: = at 1", "INS MethodInvocation to CastExpression at 1", "INS ExpressionStatement to Block at 15", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: conf to MethodInvocation at 2", "INS PrimitiveType: short to CastExpression at 0", "INS QualifiedName: CreditBasedFlowControl.MAX_NUM_OF_OPEN_REQUESTS_PER_WORKER to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: maxRequestsCredit to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: get to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: oracle to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: startIteration to MethodInvocation at 1", "INS ExpressionStatement to Block at 0"]}]}}, {"OutOfCoreEngine_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(1426) at 5", "Insert ImportDeclaration(15) into CompilationUnit(1426) at 7", "Insert QualifiedName: org.apache.giraph.comm.NetworkMetrics(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.giraph.comm.flow_control.CreditBasedFlowControl(14) into ImportDeclaration(15) at 0", "Insert FieldDeclaration(272) into TypeDeclaration: class(1425) at 21", "Insert FieldDeclaration(329) into TypeDeclaration: class(1425) at 24", "Insert MethodDeclaration(1291) into TypeDeclaration: class(1425) at 44", "Insert MethodDeclaration(1424) into TypeDeclaration: class(1425) at 52", "Insert Javadoc(266) into FieldDeclaration(272) at 0", "Insert Modifier: private(267) into FieldDeclaration(272) at 1", "Insert Modifier: final(268) into FieldDeclaration(272) at 2", "Insert PrimitiveType: short(269) into FieldDeclaration(272) at 3", "Insert VariableDeclarationFragment(271) into FieldDeclaration(272) at 4", "Insert Javadoc(322) into FieldDeclaration(329) at 0", "Insert Modifier: private(323) into FieldDeclaration(329) at 1", "Insert Modifier: final(324) into FieldDeclaration(329) at 2", "Insert SimpleType: NetworkMetrics(326) into FieldDeclaration(329) at 3", "Insert VariableDeclarationFragment(328) into FieldDeclaration(329) at 4", "Insert SingleVariableDeclaration(363) into MethodDeclaration(644) at 5", "Move TryStatement(549) into Block(643) at 18", "Insert Javadoc(1237) into MethodDeclaration(1291) at 0", "Insert Modifier: public(1238) into MethodDeclaration(1291) at 1", "Insert PrimitiveType: void(1239) into MethodDeclaration(1291) at 2", "Insert SimpleName: updateRequestsCreditFraction(1240) into MethodDeclaration(1291) at 3", "Insert SingleVariableDeclaration(1243) into MethodDeclaration(1291) at 4", "Insert Block(1290) into MethodDeclaration(1291) at 5", "Insert Modifier: public(1417) into MethodDeclaration(1424) at 0", "Insert SimpleType: NetworkMetrics(1419) into MethodDeclaration(1424) at 1", "Insert SimpleName: getNetworkMetrics(1420) into MethodDeclaration(1424) at 2", "Insert Block(1423) into MethodDeclaration(1424) at 3", "Insert TagElement(265) into Javadoc(266) at 0", "Insert SimpleName: maxRequestsCredit(270) into VariableDeclarationFragment(271) at 0", "Insert TagElement(321) into Javadoc(322) at 0", "Insert SimpleName: NetworkMetrics(325) into SimpleType: NetworkMetrics(326) at 0", "Insert SimpleName: networkMetrics(327) into VariableDeclarationFragment(328) at 0", "Insert TagElement: @param(340) into Javadoc(341) at 3", "Insert SimpleType: NetworkMetrics(361) into SingleVariableDeclaration(363) at 0", "Insert SimpleName: networkMetrics(362) into SingleVariableDeclaration(363) at 1", "Insert ExpressionStatement(375) into Block(643) at 1", "Insert ExpressionStatement(571) into Block(643) at 15", "Insert ExpressionStatement(911) into Block(979) at 0", "Insert TagElement(1232) into Javadoc(1237) at 0", "Insert TagElement: @param(1236) into Javadoc(1237) at 1", "Insert PrimitiveType: double(1241) into SingleVariableDeclaration(1243) at 0", "Insert SimpleName: fraction(1242) into SingleVariableDeclaration(1243) at 1", "Insert ExpressionStatement(1253) into Block(1290) at 0", "Insert VariableDeclarationStatement(1263) into Block(1290) at 1", "Insert IfStatement(1275) into Block(1290) at 2", "Insert IfStatement(1289) into Block(1290) at 3", "Insert SimpleName: NetworkMetrics(1418) into SimpleType: NetworkMetrics(1419) at 0", "Insert ReturnStatement(1422) into Block(1423) at 0", "Insert TextElement: Cached value for NettyClient.MAX_NUM_OF_OPEN_REQUESTS_PER_WORKER (max(263) into TagElement(265) at 0", "Insert TextElement: credit used for credit-based flow-control mechanism)(264) into TagElement(265) at 1", "Insert TextElement: Provides statistics about network traffic (e.g. received bytes per(319) into TagElement(321) at 0", "Insert TextElement: superstep etc).(320) into TagElement(321) at 1", "Insert SimpleName: networkMetrics(338) into TagElement: @param(340) at 0", "Insert TextElement:  Interface for network stats(339) into TagElement: @param(340) at 1", "Insert SimpleName: NetworkMetrics(360) into SimpleType: NetworkMetrics(361) at 0", "Insert Assignment: =(374) into ExpressionStatement(375) at 0", "Insert Assignment: =(570) into ExpressionStatement(571) at 0", "Insert MethodInvocation(910) into ExpressionStatement(911) at 0", "Insert TextElement: Update the credit announced for this worker in Netty. The lower the credit(1228) into TagElement(1232) at 0", "Insert TextElement: is, the lower rate incoming messages arrive at this worker. Thus, credit(1229) into TagElement(1232) at 1", "Insert TextElement: is an indirect way of controlling amount of memory incoming messages would(1230) into TagElement(1232) at 2", "Insert TextElement: take.(1231) into TagElement(1232) at 3", "Insert SimpleName: fraction(1233) into TagElement: @param(1236) at 0", "Insert TextElement:  the fraction of max credits others can use to send requests(1234) into TagElement: @param(1236) at 1", "Insert TextElement: to this worker(1235) into TagElement: @param(1236) at 2", "Insert MethodInvocation(1252) into ExpressionStatement(1253) at 0", "Insert PrimitiveType: short(1254) into VariableDeclarationStatement(1263) at 0", "Insert VariableDeclarationFragment(1262) into VariableDeclarationStatement(1263) at 1", "Insert MethodInvocation(1266) into IfStatement(1275) at 0", "Insert Block(1274) into IfStatement(1275) at 1", "Insert InfixExpression: !=(1278) into IfStatement(1289) at 0", "Insert Block(1288) into IfStatement(1289) at 1", "Insert SimpleName: networkMetrics(1421) into ReturnStatement(1422) at 0", "Insert FieldAccess(372) into Assignment: =(374) at 0", "Insert SimpleName: networkMetrics(373) into Assignment: =(374) at 1", "Insert FieldAccess(563) into Assignment: =(570) at 0", "Insert CastExpression(569) into Assignment: =(570) at 1", "Insert SimpleName: oracle(908) into MethodInvocation(910) at 0", "Insert SimpleName: startIteration(909) into MethodInvocation(910) at 1", "Insert SimpleName: checkState(1244) into MethodInvocation(1252) at 0", "Insert InfixExpression: &&(1251) into MethodInvocation(1252) at 1", "Insert SimpleName: newCredit(1255) into VariableDeclarationFragment(1262) at 0", "Insert CastExpression(1261) into VariableDeclarationFragment(1262) at 1", "Insert SimpleName: LOG(1264) into MethodInvocation(1266) at 0", "Insert SimpleName: isInfoEnabled(1265) into MethodInvocation(1266) at 1", "Insert ExpressionStatement(1273) into Block(1274) at 0", "Insert SimpleName: flowControl(1276) into InfixExpression: !=(1278) at 0", "Insert NullLiteral(1277) into InfixExpression: !=(1278) at 1", "Insert ExpressionStatement(1287) into Block(1288) at 0", "Insert ThisExpression(370) into FieldAccess(372) at 0", "Insert SimpleName: networkMetrics(371) into FieldAccess(372) at 1", "Insert ThisExpression(561) into FieldAccess(563) at 0", "Insert SimpleName: maxRequestsCredit(562) into FieldAccess(563) at 1", "Insert PrimitiveType: short(564) into CastExpression(569) at 0", "Insert MethodInvocation(568) into CastExpression(569) at 1", "Insert InfixExpression: >=(1247) into InfixExpression: &&(1251) at 0", "Insert InfixExpression: <=(1250) into InfixExpression: &&(1251) at 1", "Insert PrimitiveType: short(1256) into CastExpression(1261) at 0", "Insert ParenthesizedExpression(1260) into CastExpression(1261) at 1", "Insert MethodInvocation(1272) into ExpressionStatement(1273) at 0", "Insert MethodInvocation(1286) into ExpressionStatement(1287) at 0", "Insert QualifiedName: CreditBasedFlowControl.MAX_NUM_OF_OPEN_REQUESTS_PER_WORKER(565) into MethodInvocation(568) at 0", "Insert SimpleName: get(566) into MethodInvocation(568) at 1", "Insert SimpleName: conf(567) into MethodInvocation(568) at 2", "Insert SimpleName: fraction(1245) into InfixExpression: >=(1247) at 0", "Insert NumberLiteral: 0(1246) into InfixExpression: >=(1247) at 1", "Insert SimpleName: fraction(1248) into InfixExpression: <=(1250) at 0", "Insert NumberLiteral: 1(1249) into InfixExpression: <=(1250) at 1", "Insert InfixExpression: *(1259) into ParenthesizedExpression(1260) at 0", "Insert SimpleName: LOG(1267) into MethodInvocation(1272) at 0", "Insert SimpleName: info(1268) into MethodInvocation(1272) at 1", "Insert InfixExpression: +(1271) into MethodInvocation(1272) at 2", "Insert ParenthesizedExpression(1283) into MethodInvocation(1286) at 0", "Insert SimpleName: updateCredit(1284) into MethodInvocation(1286) at 1", "Insert SimpleName: newCredit(1285) into MethodInvocation(1286) at 2", "Insert SimpleName: maxRequestsCredit(1257) into InfixExpression: *(1259) at 0", "Insert SimpleName: fraction(1258) into InfixExpression: *(1259) at 1", "Insert StringLiteral: \"updateRequestsCreditFraction: updating the credit to \"(1269) into InfixExpression: +(1271) at 0", "Insert SimpleName: newCredit(1270) into InfixExpression: +(1271) at 1", "Insert CastExpression(1282) into ParenthesizedExpression(1283) at 0", "Insert SimpleType: CreditBasedFlowControl(1280) into CastExpression(1282) at 0", "Insert SimpleName: flowControl(1281) into CastExpression(1282) at 1", "Insert SimpleName: CreditBasedFlowControl(1279) into SimpleType: CreditBasedFlowControl(1280) at 0"]}}, {"BspServiceWorker_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 6", "operations": ["INS SimpleName: resetBytesReceivedPerSuperstep to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 6", "INS SimpleName: workerServer to MethodInvocation at 0"]}]}}, {"BspServiceWorker_diff": {"operations": ["Insert ExpressionStatement(2200) into Block(2271) at 6", "Insert MethodInvocation(2199) into ExpressionStatement(2200) at 0", "Insert SimpleName: workerServer(2197) into MethodInvocation(2199) at 0", "Insert SimpleName: resetBytesReceivedPerSuperstep(2198) into MethodInvocation(2199) at 1"]}}, {"CreditBasedFlowControl_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 6", "MOV ImportDeclaration to CompilationUnit at 9", "MOV ImportDeclaration to CompilationUnit at 4", "MOV ImportDeclaration to CompilationUnit at 5", "MOV ImportDeclaration to CompilationUnit at 5", "MOV ImportDeclaration to CompilationUnit at 3", "MOV ImportDeclaration to CompilationUnit at 12", "MOV ImportDeclaration to CompilationUnit at 10", "MOV ImportDeclaration to CompilationUnit at 7", "MOV ImportDeclaration to CompilationUnit at 11", "MOV ImportDeclaration to CompilationUnit at 3", "MOV ImportDeclaration to CompilationUnit at 4", "MOV ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: exceptionHandler to SingleVariableDeclaration at 1", "INS SimpleType: Thread.UncaughtExceptionHandler to SingleVariableDeclaration at 0", "INS QualifiedName: Thread.UncaughtExceptionHandler to SimpleType: Thread.UncaughtExceptionHandler at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS TagElement: @param to Javadoc at 3", "operations": ["INS SimpleName: exceptionHandler to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 3", "INS TextElement:  Exception handler to TagElement: @param at 1"]}, {"root": "INS ExpressionStatement to Block at 8", "operations": ["INS ExpressionStatement to Block at 8", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: exceptionHandler to MethodInvocation at 2", "INS SimpleName: thread to MethodInvocation at 0", "INS SimpleName: setUncaughtExceptionHandler to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 9", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 9"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS IfStatement to Block at 0", "INS SimpleName: warn to MethodInvocation at 1", "INS StringLiteral: \"for worker \" to InfixExpression: + at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS ReturnStatement to Block at 1", "INS SimpleName: workerId to InfixExpression: + at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \" is still 0\" to InfixExpression: + at 2", "INS InfixExpression: + to InfixExpression: + at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS StringLiteral: \"sendResumeSignal: method called while the max open requests \" to InfixExpression: + at 0", "INS Block to IfStatement at 1", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: maxOpenRequestsPerWorker to InfixExpression: == at 0"]}, {"root": "INS SimpleType: Thread to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: Thread to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS BooleanLiteral: true to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from Void to Thread", "operations": ["UPD SimpleName: Void from Void to Thread", "UPD SimpleName: Void from Void to Thread"]}, {"root": "MOVE from SimpleType: Thread", "operations": ["MOV SimpleName: Void to SimpleType: Thread at 0"]}, {"root": "UPDATE from callableFactory to thread", "operations": ["UPD SimpleName: callableFactory from callableFactory to thread", "UPD SimpleName: ThreadUtils from ThreadUtils to thread", "UPD SimpleName: executor from executor to thread", "UPD SimpleName: executor from executor to thread"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: createThreadFactory to MethodInvocation at 1", "MOV SimpleName: ThreadUtils to MethodInvocation at 0", "MOV StringLiteral: \"resume-sender\" to MethodInvocation at 2"]}, {"root": "UPDATE from createThreadFactory to setName", "operations": ["UPD SimpleName: createThreadFactory from createThreadFactory to setName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: executor to MethodInvocation at 0", "MOV SimpleName: submit to MethodInvocation at 1"]}, {"root": "UPDATE from submit to setDaemon", "operations": ["UPD SimpleName: submit from submit to setDaemon"]}, {"root": "UPDATE from shutdown to start", "operations": ["UPD SimpleName: shutdown from shutdown to start"]}, {"root": "INS SimpleType: Thread to ClassInstanceCreation at 0", "operations": ["INS SimpleType: Thread to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ClassInstanceCreation to ClassInstanceCreation at 1"]}, {"root": "MOVE from SimpleType: Thread", "operations": ["MOV SimpleName: Void to SimpleType: Thread at 0"]}, {"root": "INS SimpleType: Runnable to ClassInstanceCreation at 0", "operations": ["INS SimpleType: Runnable to ClassInstanceCreation at 0"]}, {"root": "UPDATE from Callable to Runnable", "operations": ["UPD SimpleName: Callable from Callable to Runnable"]}, {"root": "MOVE from SimpleType: Runnable", "operations": ["MOV SimpleName: Callable to SimpleType: Runnable at 0"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS SimpleName: run to MethodDeclaration at 3", "operations": ["INS SimpleName: run to MethodDeclaration at 3"]}, {"root": "UPDATE from \"call: caught exception \" to \"run: caught exception \"", "operations": ["UPD StringLiteral: \"call: caught exception \" from \"call: caught exception \" to \"run: caught exception \""]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.concurrent.Callable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.ExecutionException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.ExecutorService", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.Executors", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.Future", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.giraph.utils.CallableFactory"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.giraph.utils.LogStacktraceCallable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.giraph.utils.ThreadUtils"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL TextElement: Result of execution for the thread responsible for sending resume signals", "DEL SimpleName: Future", "DEL VariableDeclarationFragment", "DEL ParameterizedType: Future<Void>", "DEL SimpleName: resumeThreadResult", "DEL FieldDeclaration", "DEL SimpleName: Void", "DEL TagElement", "DEL Javadoc", "DEL Modifier: final", "DEL Modifier: private", "DEL SimpleType: Future", "DEL SimpleType: Void"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: shouldTerminate", "DEL TagElement", "DEL FieldDeclaration", "DEL Modifier: volatile", "DEL TextElement: Whether we are shutting down the execution ", "DEL Javadoc", "DEL Modifier: private", "DEL PrimitiveType: boolean"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL BooleanLiteral: false", "DEL Assignment: =", "DEL ExpressionStatement", "DEL SimpleName: shouldTerminate"]}, {"root": "DEL ParameterizedType: CallableFactory<Void>", "operations": ["DEL SimpleName: CallableFactory", "DEL SimpleType: Void", "DEL SimpleType: CallableFactory", "DEL ParameterizedType: CallableFactory<Void>"]}, {"root": "DEL ParameterizedType: Callable<Void>", "operations": ["DEL ParameterizedType: Callable<Void>", "DEL SimpleType: Callable", "DEL SimpleName: Void", "DEL SimpleType: Void"]}, {"root": "DEL SimpleType: Void", "operations": ["DEL SimpleName: Void", "DEL SimpleType: Void"]}, {"root": "DEL SimpleName: call", "operations": ["DEL SimpleName: call"]}, {"root": "DEL SimpleType: Exception", "operations": ["DEL SimpleName: Exception", "DEL SimpleType: Exception"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL BreakStatement", "DEL IfStatement", "DEL SimpleName: shouldTerminate"]}, {"root": "DEL ReturnStatement", "operations": ["DEL NullLiteral", "DEL ReturnStatement"]}, {"root": "DEL ParameterizedType: CallableFactory<Void>", "operations": ["DEL SimpleName: CallableFactory", "DEL SimpleType: CallableFactory", "DEL SimpleType: Void", "DEL ParameterizedType: CallableFactory<Void>"]}, {"root": "DEL AnonymousClassDeclaration", "operations": ["DEL SimpleName: callableId", "DEL ReturnStatement", "DEL Block", "DEL AnonymousClassDeclaration", "DEL SimpleName: newCallable", "DEL ParameterizedType: Callable<Void>", "DEL SingleVariableDeclaration", "DEL SimpleName: Void", "DEL SimpleName: Callable", "DEL SimpleType: Callable", "DEL SimpleName: Override", "DEL MethodDeclaration", "DEL MarkerAnnotation", "DEL Modifier: public", "DEL PrimitiveType: int", "DEL SimpleType: Void"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: ExecutorService", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: executor", "DEL SimpleType: ExecutorService", "DEL SimpleName: Executors", "DEL SimpleName: newSingleThreadExecutor"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: resumeThreadResult", "DEL MethodInvocation", "DEL SimpleType: LogStacktraceCallable", "DEL ParameterizedType: LogStacktraceCallable<>", "DEL SimpleName: callableFactory", "DEL NumberLiteral: 0", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL SimpleName: LogStacktraceCallable", "DEL MethodInvocation", "DEL SimpleName: newCallable"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL SimpleName: ExecutionException", "DEL MethodInvocation", "DEL SimpleName: get", "DEL Block", "DEL TryStatement", "DEL PrimitiveType: void", "DEL ExpressionStatement", "DEL BooleanLiteral: true", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: InterruptedException", "DEL StringLiteral: \"getting result of resume-sender thread\"", "DEL SimpleName: shouldTerminate", "DEL SimpleName: notifyAll", "DEL SimpleType: InterruptedException", "DEL MarkerAnnotation", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: shutdown", "DEL InfixExpression: +", "DEL SimpleType: ExecutionException", "DEL UnionType: InterruptedException|ExecutionException", "DEL StringLiteral: \"shutdown: caught exception while\"", "DEL SimpleName: workersToResume", "DEL ThrowStatement", "DEL Assignment: =", "DEL SimpleType: IllegalStateException", "DEL SimpleName: IllegalStateException", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL SimpleName: workersToResume", "DEL ClassInstanceCreation", "DEL SimpleName: Override", "DEL SynchronizedStatement", "DEL CatchClause", "DEL Block", "DEL SimpleName: resumeThreadResult", "DEL Modifier: public"]}]}}, {"CreditBasedFlowControl_diff": {"operations": ["Move ImportDeclaration(39) into CompilationUnit(1741) at 3", "Move ImportDeclaration(41) into CompilationUnit(1741) at 4", "Move ImportDeclaration(43) into CompilationUnit(1741) at 5", "Move ImportDeclaration(45) into CompilationUnit(1741) at 6", "Move ImportDeclaration(47) into CompilationUnit(1741) at 7", "Move ImportDeclaration(49) into CompilationUnit(1741) at 8", "Move ImportDeclaration(51) into CompilationUnit(1741) at 9", "Move ImportDeclaration(53) into CompilationUnit(1741) at 10", "Move ImportDeclaration(55) into CompilationUnit(1741) at 11", "Move ImportDeclaration(63) into CompilationUnit(1741) at 12", "Move ImportDeclaration(65) into CompilationUnit(1741) at 3", "Move ImportDeclaration(67) into CompilationUnit(1741) at 4", "Move ImportDeclaration(69) into CompilationUnit(1741) at 5", "Insert SingleVariableDeclaration(363) into MethodDeclaration(502) at 5", "Insert TagElement: @param(348) into Javadoc(349) at 3", "Insert SimpleType: Thread.UncaughtExceptionHandler(361) into SingleVariableDeclaration(363) at 0", "Insert SimpleName: exceptionHandler(362) into SingleVariableDeclaration(363) at 1", "Insert ExpressionStatement(486) into Block(501) at 7", "Insert ExpressionStatement(491) into Block(501) at 8", "Insert IfStatement(530) into Block(583) at 0", "Insert SimpleName: exceptionHandler(346) into TagElement: @param(348) at 0", "Insert TextElement:  Exception handler(347) into TagElement: @param(348) at 1", "Insert QualifiedName: Thread.UncaughtExceptionHandler(360) into SimpleType: Thread.UncaughtExceptionHandler(361) at 0", "Insert SimpleType: Thread(420) into VariableDeclarationStatement(481) at 0", "Insert MethodInvocation(485) into ExpressionStatement(486) at 0", "Insert MethodInvocation(490) into ExpressionStatement(491) at 0", "Insert MethodInvocation(495) into ExpressionStatement(496) at 0", "Insert InfixExpression: ==(517) into IfStatement(530) at 0", "Insert Block(529) into IfStatement(530) at 1", "Update SimpleName: Void(456) to Thread", "Move SimpleName: Void(456) into SimpleType: Thread(420) at 0", "Update SimpleName: callableFactory(459) to thread", "Insert SimpleName: thread(482) into MethodInvocation(485) at 0", "Insert SimpleName: setUncaughtExceptionHandler(483) into MethodInvocation(485) at 1", "Insert SimpleName: exceptionHandler(484) into MethodInvocation(485) at 2", "Update SimpleName: ThreadUtils(556) to thread", "Move SimpleName: ThreadUtils(556) into MethodInvocation(490) at 0", "Update SimpleName: createThreadFactory(557) to setName", "Move SimpleName: createThreadFactory(557) into MethodInvocation(490) at 1", "Move StringLiteral: \"resume-sender\"(558) into MethodInvocation(490) at 2", "Update SimpleName: executor(564) to thread", "Move SimpleName: executor(564) into MethodInvocation(495) at 0", "Update SimpleName: submit(565) to setDaemon", "Move SimpleName: submit(565) into MethodInvocation(495) at 1", "Insert BooleanLiteral: true(494) into MethodInvocation(495) at 2", "Update SimpleName: executor(577) to thread", "Update SimpleName: shutdown(578) to start", "Insert SimpleName: maxOpenRequestsPerWorker(515) into InfixExpression: ==(517) at 0", "Insert NumberLiteral: 0(516) into InfixExpression: ==(517) at 1", "Insert ExpressionStatement(527) into Block(529) at 0", "Insert ReturnStatement(528) into Block(529) at 1", "Insert SimpleType: Thread(423) into ClassInstanceCreation(479) at 0", "Move ClassInstanceCreation(543) into ClassInstanceCreation(479) at 1", "Insert MethodInvocation(526) into ExpressionStatement(527) at 0", "Update SimpleName: Void(462) to Thread", "Move SimpleName: Void(462) into SimpleType: Thread(423) at 0", "Insert SimpleType: Runnable(425) into ClassInstanceCreation(478) at 0", "Insert SimpleName: LOG(518) into MethodInvocation(526) at 0", "Insert SimpleName: warn(519) into MethodInvocation(526) at 1", "Insert InfixExpression: +(525) into MethodInvocation(526) at 2", "Update SimpleName: Callable(477) to Runnable", "Move SimpleName: Callable(477) into SimpleType: Runnable(425) at 0", "Insert InfixExpression: +(522) into InfixExpression: +(525) at 0", "Insert SimpleName: workerId(523) into InfixExpression: +(525) at 1", "Insert StringLiteral: \" is still 0\"(524) into InfixExpression: +(525) at 2", "Insert PrimitiveType: void(429) into MethodDeclaration(476) at 2", "Insert SimpleName: run(430) into MethodDeclaration(476) at 3", "Insert StringLiteral: \"sendResumeSignal: method called while the max open requests \"(520) into InfixExpression: +(522) at 0", "Insert StringLiteral: \"for worker \"(521) into InfixExpression: +(522) at 1", "Update StringLiteral: \"call: caught exception \"(525) to \"run: caught exception \"", "Delete QualifiedName: java.util.concurrent.Callable(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: java.util.concurrent.ExecutionException(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: java.util.concurrent.ExecutorService(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: java.util.concurrent.Executors(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: java.util.concurrent.Future(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: org.apache.giraph.utils.CallableFactory(56)", "Delete ImportDeclaration(57)", "Delete QualifiedName: org.apache.giraph.utils.LogStacktraceCallable(58)", "Delete ImportDeclaration(59)", "Delete QualifiedName: org.apache.giraph.utils.ThreadUtils(60)", "Delete ImportDeclaration(61)", "Delete TextElement: Result of execution for the thread responsible for sending resume signals(354)", "Delete TagElement(355)", "Delete Javadoc(356)", "Delete Modifier: private(357)", "Delete Modifier: final(358)", "Delete SimpleName: Future(359)", "Delete SimpleType: Future(360)", "Delete SimpleName: Void(361)", "Delete SimpleType: Void(362)", "Delete ParameterizedType: Future<Void>(363)", "Delete SimpleName: resumeThreadResult(364)", "Delete VariableDeclarationFragment(365)", "Delete FieldDeclaration(366)", "Delete TextElement: Whether we are shutting down the execution (367)", "Delete TagElement(368)", "Delete Javadoc(369)", "Delete Modifier: private(370)", "Delete Modifier: volatile(371)", "Delete PrimitiveType: boolean(372)", "Delete SimpleName: shouldTerminate(373)", "Delete VariableDeclarationFragment(374)", "Delete FieldDeclaration(375)", "Delete SimpleName: shouldTerminate(450)", "Delete BooleanLiteral: false(451)", "Delete Assignment: =(452)", "Delete ExpressionStatement(453)", "Delete SimpleName: CallableFactory(454)", "Delete SimpleType: CallableFactory(455)", "Delete SimpleType: Void(457)", "Delete ParameterizedType: CallableFactory<Void>(458)", "Delete SimpleType: Callable(478)", "Delete SimpleName: Void(479)", "Delete SimpleType: Void(480)", "Delete ParameterizedType: Callable<Void>(481)", "Delete SimpleName: Void(485)", "Delete SimpleType: Void(486)", "Delete SimpleName: call(487)", "Delete SimpleName: Exception(488)", "Delete SimpleType: Exception(489)", "Delete SimpleName: shouldTerminate(492)", "Delete BreakStatement(493)", "Delete Block(494)", "Delete IfStatement(495)", "Delete NullLiteral(538)", "Delete ReturnStatement(539)", "Delete SimpleName: CallableFactory(460)", "Delete SimpleType: CallableFactory(461)", "Delete SimpleType: Void(463)", "Delete ParameterizedType: CallableFactory<Void>(464)", "Delete SimpleName: Override(465)", "Delete MarkerAnnotation(466)", "Delete Modifier: public(467)", "Delete SimpleName: Callable(468)", "Delete SimpleType: Callable(469)", "Delete SimpleName: Void(470)", "Delete SimpleType: Void(471)", "Delete ParameterizedType: Callable<Void>(472)", "Delete SimpleName: newCallable(473)", "Delete PrimitiveType: int(474)", "Delete SimpleName: callableId(475)", "Delete SingleVariableDeclaration(476)", "Delete ReturnStatement(544)", "Delete Block(545)", "Delete MethodDeclaration(546)", "Delete AnonymousClassDeclaration(547)", "Delete SimpleName: ExecutorService(551)", "Delete SimpleType: ExecutorService(552)", "Delete SimpleName: executor(553)", "Delete SimpleName: Executors(554)", "Delete SimpleName: newSingleThreadExecutor(555)", "Delete MethodInvocation(559)", "Delete MethodInvocation(560)", "Delete VariableDeclarationFragment(561)", "Delete VariableDeclarationStatement(562)", "Delete SimpleName: resumeThreadResult(563)", "Delete SimpleName: LogStacktraceCallable(566)", "Delete SimpleType: LogStacktraceCallable(567)", "Delete ParameterizedType: LogStacktraceCallable<>(568)", "Delete SimpleName: callableFactory(569)", "Delete SimpleName: newCallable(570)", "Delete NumberLiteral: 0(571)", "Delete MethodInvocation(572)", "Delete ClassInstanceCreation(573)", "Delete MethodInvocation(574)", "Delete Assignment: =(575)", "Delete SimpleName: Override(1045)", "Delete MarkerAnnotation(1046)", "Delete Modifier: public(1047)", "Delete PrimitiveType: void(1048)", "Delete SimpleName: shutdown(1049)", "Delete SimpleName: workersToResume(1050)", "Delete SimpleName: shouldTerminate(1051)", "Delete BooleanLiteral: true(1052)", "Delete Assignment: =(1053)", "Delete ExpressionStatement(1054)", "Delete SimpleName: workersToResume(1055)", "Delete SimpleName: notifyAll(1056)", "Delete MethodInvocation(1057)", "Delete ExpressionStatement(1058)", "Delete Block(1059)", "Delete SynchronizedStatement(1060)", "Delete SimpleName: resumeThreadResult(1061)", "Delete SimpleName: get(1062)", "Delete MethodInvocation(1063)", "Delete ExpressionStatement(1064)", "Delete Block(1065)", "Delete SimpleName: InterruptedException(1066)", "Delete SimpleType: InterruptedException(1067)", "Delete SimpleName: ExecutionException(1068)", "Delete SimpleType: ExecutionException(1069)", "Delete UnionType: InterruptedException|ExecutionException(1070)", "Delete SimpleName: e(1071)", "Delete SingleVariableDeclaration(1072)", "Delete SimpleName: IllegalStateException(1073)", "Delete SimpleType: IllegalStateException(1074)", "Delete StringLiteral: \"shutdown: caught exception while\"(1075)", "Delete StringLiteral: \"getting result of resume-sender thread\"(1076)", "Delete InfixExpression: +(1077)", "Delete ClassInstanceCreation(1078)", "Delete ThrowStatement(1079)", "Delete Block(1080)", "Delete CatchClause(1081)", "Delete TryStatement(1082)", "Delete Block(1083)", "Delete MethodDeclaration(1084)"]}}, {"FlowControl_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL TextElement: Shutdown the flow control policy", "DEL Javadoc", "DEL TagElement", "DEL MethodDeclaration", "DEL PrimitiveType: void", "DEL SimpleName: shutdown"]}]}}, {"FlowControl_diff": {"operations": ["Delete TextElement: Shutdown the flow control policy(115)", "Delete TagElement(116)", "Delete Javadoc(117)", "Delete PrimitiveType: void(118)", "Delete SimpleName: shutdown(119)", "Delete MethodDeclaration(120)"]}}, {"NoOpFlowControl_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleName: shutdown", "DEL Block", "DEL SimpleName: Override", "DEL Modifier: public", "DEL PrimitiveType: void", "DEL MarkerAnnotation"]}]}}, {"NoOpFlowControl_diff": {"operations": ["Delete SimpleName: Override(133)", "Delete MarkerAnnotation(134)", "Delete Modifier: public(135)", "Delete PrimitiveType: void(136)", "Delete SimpleName: shutdown(137)", "Delete Block(138)", "Delete MethodDeclaration(139)"]}}, {"StaticFlowControl_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL MarkerAnnotation", "DEL PrimitiveType: void", "DEL Block", "DEL SimpleName: Override", "DEL Modifier: public", "DEL SimpleName: shutdown", "DEL MethodDeclaration"]}]}}, {"StaticFlowControl_diff": {"operations": ["Delete SimpleName: Override(426)", "Delete MarkerAnnotation(427)", "Delete Modifier: public(428)", "Delete PrimitiveType: void(429)", "Delete SimpleName: shutdown(430)", "Delete Block(431)", "Delete MethodDeclaration(432)"]}}, {"ByteCounterDelegate_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleType: AtomicLong to FieldDeclaration at 3", "INS SimpleType: AtomicLong to ClassInstanceCreation at 0", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS TagElement to Javadoc at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS Javadoc to FieldDeclaration at 0", "INS SimpleName: bytesProcessedPerSuperstep to VariableDeclarationFragment at 0", "INS SimpleName: AtomicLong to SimpleType: AtomicLong at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS TextElement: Aggregate bytes per superstep  to TagElement at 0", "INS SimpleName: AtomicLong to SimpleType: AtomicLong at 0", "INS Modifier: private to FieldDeclaration at 1", "INS Modifier: final to FieldDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS Block to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS Javadoc to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS Modifier: public to MethodDeclaration at 1", "INS TagElement to Javadoc at 0", "INS TagElement: @return to Javadoc at 1", "INS SimpleName: getBytesProcessedPerSuperstep to MethodDeclaration at 3", "INS TextElement: Returns bytes processed per superstep. to TagElement at 0", "INS PrimitiveType: long to MethodDeclaration at 2", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: bytesProcessedPerSuperstep to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS TextElement:  Number of bytes. to TagElement: @return at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 22", "INS SimpleName: bytesProcessedPerSuperstep to MethodInvocation at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: resetBytesProcessedPerSuperstep to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS TextElement: Set bytes processed per superstep to 0. to TagElement at 0", "INS SimpleName: set to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS TagElement to Javadoc at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: bytesProcessedPerSuperstep to MethodInvocation at 0", "INS SimpleName: processedBytes to MethodInvocation at 2", "INS SimpleName: addAndGet to MethodInvocation at 1"]}, {"root": "UPDATE from All bytes ever processed  to Bytes processed during the most recent time interval ", "operations": ["UPD TextElement: All bytes ever processed  from All bytes ever processed  to Bytes processed during the most recent time interval "]}]}}, {"ByteCounterDelegate_diff": {"operations": ["Insert FieldDeclaration(101) into TypeDeclaration: class(576) at 8", "Insert MethodDeclaration(344) into TypeDeclaration: class(576) at 21", "Insert MethodDeclaration(357) into TypeDeclaration: class(576) at 22", "Insert Javadoc(91) into FieldDeclaration(101) at 0", "Insert Modifier: private(92) into FieldDeclaration(101) at 1", "Insert Modifier: final(93) into FieldDeclaration(101) at 2", "Insert SimpleType: AtomicLong(95) into FieldDeclaration(101) at 3", "Insert VariableDeclarationFragment(100) into FieldDeclaration(101) at 4", "Insert Javadoc(335) into MethodDeclaration(344) at 0", "Insert Modifier: public(336) into MethodDeclaration(344) at 1", "Insert PrimitiveType: long(337) into MethodDeclaration(344) at 2", "Insert SimpleName: getBytesProcessedPerSuperstep(338) into MethodDeclaration(344) at 3", "Insert Block(343) into MethodDeclaration(344) at 4", "Insert Javadoc(347) into MethodDeclaration(357) at 0", "Insert Modifier: public(348) into MethodDeclaration(357) at 1", "Insert PrimitiveType: void(349) into MethodDeclaration(357) at 2", "Insert SimpleName: resetBytesProcessedPerSuperstep(350) into MethodDeclaration(357) at 3", "Insert Block(356) into MethodDeclaration(357) at 4", "Insert TagElement(90) into Javadoc(91) at 0", "Insert SimpleName: AtomicLong(94) into SimpleType: AtomicLong(95) at 0", "Insert SimpleName: bytesProcessedPerSuperstep(96) into VariableDeclarationFragment(100) at 0", "Insert ClassInstanceCreation(99) into VariableDeclarationFragment(100) at 1", "Insert ExpressionStatement(267) into Block(283) at 2", "Insert TagElement(332) into Javadoc(335) at 0", "Insert TagElement: @return(334) into Javadoc(335) at 1", "Insert ReturnStatement(342) into Block(343) at 0", "Insert TagElement(346) into Javadoc(347) at 0", "Insert ExpressionStatement(355) into Block(356) at 0", "Update TextElement: All bytes ever processed (76) to Bytes processed during the most recent time interval ", "Insert TextElement: Aggregate bytes per superstep (89) into TagElement(90) at 0", "Insert SimpleType: AtomicLong(98) into ClassInstanceCreation(99) at 0", "Insert MethodInvocation(266) into ExpressionStatement(267) at 0", "Insert TextElement: Returns bytes processed per superstep.(331) into TagElement(332) at 0", "Insert TextElement:  Number of bytes.(333) into TagElement: @return(334) at 0", "Insert MethodInvocation(341) into ReturnStatement(342) at 0", "Insert TextElement: Set bytes processed per superstep to 0.(345) into TagElement(346) at 0", "Insert MethodInvocation(354) into ExpressionStatement(355) at 0", "Insert SimpleName: AtomicLong(97) into SimpleType: AtomicLong(98) at 0", "Insert SimpleName: bytesProcessedPerSuperstep(263) into MethodInvocation(266) at 0", "Insert SimpleName: addAndGet(264) into MethodInvocation(266) at 1", "Insert SimpleName: processedBytes(265) into MethodInvocation(266) at 2", "Insert SimpleName: bytesProcessedPerSuperstep(339) into MethodInvocation(341) at 0", "Insert SimpleName: get(340) into MethodInvocation(341) at 1", "Insert SimpleName: bytesProcessedPerSuperstep(351) into MethodInvocation(354) at 0", "Insert SimpleName: set(352) into MethodInvocation(354) at 1", "Insert NumberLiteral: 0(353) into MethodInvocation(354) at 2"]}}, {"InboundByteCounter_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS TextElement: Returns bytes received per superstep. to TagElement at 0", "INS SimpleName: getBytesReceivedPerSuperstep to MethodDeclaration at 3", "INS TagElement to Javadoc at 0", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: getBytesProcessedPerSuperstep to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS Javadoc to MethodDeclaration at 0", "INS TextElement:  Number of bytes. to TagElement: @return at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS PrimitiveType: long to MethodDeclaration at 2", "INS TagElement: @return to Javadoc at 1", "INS SimpleName: delegate to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS Block to MethodDeclaration at 4", "INS ExpressionStatement to Block at 0", "INS SimpleName: resetBytesProcessedPerSuperstep to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: resetBytesReceivedPerSuperstep to MethodDeclaration at 3", "INS TextElement: Set bytes received per superstep to 0. to TagElement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: delegate to MethodInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS MethodDeclaration to TypeDeclaration: class at 12"]}]}}, {"InboundByteCounter_diff": {"operations": ["Insert MethodDeclaration(99) into TypeDeclaration: class(246) at 11", "Insert MethodDeclaration(111) into TypeDeclaration: class(246) at 12", "Insert Javadoc(90) into MethodDeclaration(99) at 0", "Insert Modifier: public(91) into MethodDeclaration(99) at 1", "Insert PrimitiveType: long(92) into MethodDeclaration(99) at 2", "Insert SimpleName: getBytesReceivedPerSuperstep(93) into MethodDeclaration(99) at 3", "Insert Block(98) into MethodDeclaration(99) at 4", "Insert Javadoc(102) into MethodDeclaration(111) at 0", "Insert Modifier: public(103) into MethodDeclaration(111) at 1", "Insert PrimitiveType: void(104) into MethodDeclaration(111) at 2", "Insert SimpleName: resetBytesReceivedPerSuperstep(105) into MethodDeclaration(111) at 3", "Insert Block(110) into MethodDeclaration(111) at 4", "Insert TagElement(87) into Javadoc(90) at 0", "Insert TagElement: @return(89) into Javadoc(90) at 1", "Insert ReturnStatement(97) into Block(98) at 0", "Insert TagElement(101) into Javadoc(102) at 0", "Insert ExpressionStatement(109) into Block(110) at 0", "Insert TextElement: Returns bytes received per superstep.(86) into TagElement(87) at 0", "Insert TextElement:  Number of bytes.(88) into TagElement: @return(89) at 0", "Insert MethodInvocation(96) into ReturnStatement(97) at 0", "Insert TextElement: Set bytes received per superstep to 0.(100) into TagElement(101) at 0", "Insert MethodInvocation(108) into ExpressionStatement(109) at 0", "Insert SimpleName: delegate(94) into MethodInvocation(96) at 0", "Insert SimpleName: getBytesProcessedPerSuperstep(95) into MethodInvocation(96) at 1", "Insert SimpleName: delegate(106) into MethodInvocation(108) at 0", "Insert SimpleName: resetBytesProcessedPerSuperstep(107) into MethodInvocation(108) at 1"]}}, {"NettyClient_cluster": {"actions": [{"root": "INS SimpleName: exceptionHandler to ClassInstanceCreation at 3", "operations": ["INS SimpleName: exceptionHandler to ClassInstanceCreation at 3"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: flowControl", "DEL SimpleName: shutdown", "DEL MethodInvocation", "DEL ExpressionStatement"]}]}}, {"NettyClient_diff": {"operations": ["Insert SimpleName: exceptionHandler(694) into ClassInstanceCreation(695) at 3", "Delete SimpleName: flowControl(2018)", "Delete SimpleName: shutdown(2019)", "Delete MethodInvocation(2020)", "Delete ExpressionStatement(2021)"]}}, {"NettyServer_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 30", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 30", "INS Modifier: public to MethodDeclaration at 1", "INS TagElement to Javadoc at 0", "INS TagElement: @link to TagElement: @return at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: getInByteCounter to MethodDeclaration at 3", "INS TextElement:  The  to TagElement: @return at 0", "INS SimpleName: inByteCounter to ReturnStatement at 0", "INS TagElement: @return to Javadoc at 1", "INS SimpleName: InboundByteCounter to SimpleType: InboundByteCounter at 0", "INS SimpleName: InboundByteCounter to TagElement: @link at 0", "INS Block to MethodDeclaration at 4", "INS TextElement: Returns a handle on the in-bound byte counter. to TagElement at 0", "INS TextElement:  object for this server. to TagElement: @return at 2", "INS SimpleType: InboundByteCounter to MethodDeclaration at 2"]}]}}, {"NettyServer_diff": {"operations": ["Insert MethodDeclaration(655) into TypeDeclaration: class(1367) at 30", "Insert Javadoc(647) into MethodDeclaration(655) at 0", "Insert Modifier: public(648) into MethodDeclaration(655) at 1", "Insert SimpleType: InboundByteCounter(650) into MethodDeclaration(655) at 2", "Insert SimpleName: getInByteCounter(651) into MethodDeclaration(655) at 3", "Insert Block(654) into MethodDeclaration(655) at 4", "Insert TagElement(641) into Javadoc(647) at 0", "Insert TagElement: @return(646) into Javadoc(647) at 1", "Insert SimpleName: InboundByteCounter(649) into SimpleType: InboundByteCounter(650) at 0", "Insert ReturnStatement(653) into Block(654) at 0", "Insert TextElement: Returns a handle on the in-bound byte counter.(640) into TagElement(641) at 0", "Insert TextElement:  The (642) into TagElement: @return(646) at 0", "Insert TagElement: @link(644) into TagElement: @return(646) at 1", "Insert TextElement:  object for this server.(645) into TagElement: @return(646) at 2", "Insert SimpleName: inByteCounter(652) into ReturnStatement(653) at 0", "Insert SimpleName: InboundByteCounter(643) into TagElement: @link(644) at 0"]}}, {"NettyWorkerServer_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS SimpleName: getBytesReceivedPerSuperstep to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: nettyServer to MethodInvocation at 0", "INS SimpleName: getBytesReceivedPerSuperstep to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS SimpleName: getInByteCounter to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ReturnStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS PrimitiveType: long to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: resetBytesReceivedPerSuperstep to MethodDeclaration at 3", "INS SimpleName: resetBytesReceivedPerSuperstep to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: nettyServer to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getInByteCounter to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS ExpressionStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 23", "operations": ["INS SimpleName: getInByteCounter to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 23", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getBytesReceived to MethodInvocation at 1", "INS SimpleName: getBytesReceived to MethodDeclaration at 3", "INS SimpleName: nettyServer to MethodInvocation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: long to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 4"]}, {"root": "INS ThisExpression to ClassInstanceCreation at 2", "operations": ["INS ThisExpression to ClassInstanceCreation at 2"]}]}}, {"NettyWorkerServer_diff": {"operations": ["Insert MethodDeclaration(379) into TypeDeclaration: class(406) at 21", "Insert MethodDeclaration(392) into TypeDeclaration: class(406) at 22", "Insert MethodDeclaration(405) into TypeDeclaration: class(406) at 23", "Insert MarkerAnnotation(368) into MethodDeclaration(379) at 0", "Insert Modifier: public(369) into MethodDeclaration(379) at 1", "Insert PrimitiveType: long(370) into MethodDeclaration(379) at 2", "Insert SimpleName: getBytesReceivedPerSuperstep(371) into MethodDeclaration(379) at 3", "Insert Block(378) into MethodDeclaration(379) at 4", "Insert MarkerAnnotation(381) into MethodDeclaration(392) at 0", "Insert Modifier: public(382) into MethodDeclaration(392) at 1", "Insert PrimitiveType: void(383) into MethodDeclaration(392) at 2", "Insert SimpleName: resetBytesReceivedPerSuperstep(384) into MethodDeclaration(392) at 3", "Insert Block(391) into MethodDeclaration(392) at 4", "Insert MarkerAnnotation(394) into MethodDeclaration(405) at 0", "Insert Modifier: public(395) into MethodDeclaration(405) at 1", "Insert PrimitiveType: long(396) into MethodDeclaration(405) at 2", "Insert SimpleName: getBytesReceived(397) into MethodDeclaration(405) at 3", "Insert Block(404) into MethodDeclaration(405) at 4", "Insert SimpleName: Override(367) into MarkerAnnotation(368) at 0", "Insert ReturnStatement(377) into Block(378) at 0", "Insert SimpleName: Override(380) into MarkerAnnotation(381) at 0", "Insert ExpressionStatement(390) into Block(391) at 0", "Insert SimpleName: Override(393) into MarkerAnnotation(394) at 0", "Insert ReturnStatement(403) into Block(404) at 0", "Insert MethodInvocation(376) into ReturnStatement(377) at 0", "Insert MethodInvocation(389) into ExpressionStatement(390) at 0", "Insert MethodInvocation(402) into ReturnStatement(403) at 0", "Insert MethodInvocation(374) into MethodInvocation(376) at 0", "Insert SimpleName: getBytesReceivedPerSuperstep(375) into MethodInvocation(376) at 1", "Insert MethodInvocation(387) into MethodInvocation(389) at 0", "Insert SimpleName: resetBytesReceivedPerSuperstep(388) into MethodInvocation(389) at 1", "Insert MethodInvocation(400) into MethodInvocation(402) at 0", "Insert SimpleName: getBytesReceived(401) into MethodInvocation(402) at 1", "Insert ThisExpression(253) into ClassInstanceCreation(256) at 2", "Insert SimpleName: nettyServer(372) into MethodInvocation(374) at 0", "Insert SimpleName: getInByteCounter(373) into MethodInvocation(374) at 1", "Insert SimpleName: nettyServer(385) into MethodInvocation(387) at 0", "Insert SimpleName: getInByteCounter(386) into MethodInvocation(387) at 1", "Insert SimpleName: nettyServer(398) into MethodInvocation(400) at 0", "Insert SimpleName: getInByteCounter(399) into MethodInvocation(400) at 1"]}}, {"MetaPartitionManager_cluster": {"actions": [{"root": "INS NullLiteral to MethodInvocation at 4", "operations": ["INS NullLiteral to MethodInvocation at 4"]}, {"root": "INS NullLiteral to MethodInvocation at 4", "operations": ["INS NullLiteral to MethodInvocation at 4"]}, {"root": "INS NullLiteral to MethodInvocation at 4", "operations": ["INS NullLiteral to MethodInvocation at 4"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}]}}, {"MetaPartitionManager_diff": {"operations": ["Insert NullLiteral(1458) into MethodInvocation(1460) at 4", "Insert NullLiteral(1480) into MethodInvocation(1482) at 4", "Insert NullLiteral(1502) into MethodInvocation(1504) at 4", "Delete NullLiteral(1459)", "Delete NullLiteral(1481)", "Delete NullLiteral(1503)"]}}, {"LocalDiskDataAccessor_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleName: jobDirectory to VariableDeclarationFragment at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS SimpleName: file to VariableDeclarationFragment at 0", "INS SimpleName: jobDirectory to ClassInstanceCreation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: File to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV InfixExpression: + to VariableDeclarationFragment at 1"]}, {"root": "INS InfixExpression: + to Assignment: = at 1", "operations": ["INS StringLiteral: \"/\" to InfixExpression: + at 1", "INS SimpleName: jobDirectory to InfixExpression: + at 0", "INS InfixExpression: + to Assignment: = at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: File to ClassInstanceCreation at 0"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: file", "DEL SimpleName: exists", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL IfStatement", "DEL Block"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: getParentFile", "DEL ClassInstanceCreation", "DEL SimpleName: file", "DEL MethodInvocation", "DEL SimpleName: path", "DEL VariableDeclarationStatement"]}]}}, {"LocalDiskDataAccessor_diff": {"operations": ["Insert VariableDeclarationStatement(222) into Block(255) at 0", "Insert VariableDeclarationStatement(231) into Block(255) at 1", "Move ExpressionStatement(238) into Block(255) at 2", "Move VariableDeclarationStatement(222) into Block(347) at 0", "Insert SimpleType: String(215) into VariableDeclarationStatement(222) at 0", "Insert VariableDeclarationFragment(221) into VariableDeclarationStatement(222) at 1", "Move SimpleType: File(299) into VariableDeclarationStatement(231) at 0", "Insert VariableDeclarationFragment(230) into VariableDeclarationStatement(231) at 1", "Insert SimpleName: String(214) into SimpleType: String(215) at 0", "Insert SimpleName: jobDirectory(216) into VariableDeclarationFragment(221) at 0", "Move InfixExpression: +(247) into VariableDeclarationFragment(221) at 1", "Insert SimpleName: file(225) into VariableDeclarationFragment(230) at 0", "Insert ClassInstanceCreation(229) into VariableDeclarationFragment(230) at 1", "Insert InfixExpression: +(249) into Assignment: =(250) at 1", "Move SimpleType: File(296) into ClassInstanceCreation(229) at 0", "Insert SimpleName: jobDirectory(228) into ClassInstanceCreation(229) at 1", "Insert SimpleName: jobDirectory(247) into InfixExpression: +(249) at 0", "Insert StringLiteral: \"/\"(248) into InfixExpression: +(249) at 1", "Delete SimpleName: file(223)", "Delete SimpleName: exists(224)", "Delete MethodInvocation(225)", "Delete PrefixExpression: !(226)", "Delete Block(239)", "Delete IfStatement(240)", "Delete SimpleName: file(297)", "Delete SimpleName: path(300)", "Delete ClassInstanceCreation(301)", "Delete SimpleName: getParentFile(302)", "Delete MethodInvocation(303)", "Delete VariableDeclarationFragment(304)", "Delete VariableDeclarationStatement(305)"]}}, {"FixedPartitionsOracle_cluster": {"actions": [{"root": "UPDATE from shutdown to startIteration", "operations": ["UPD SimpleName: shutdown from shutdown to startIteration"]}]}}, {"FixedPartitionsOracle_diff": {"operations": ["Update SimpleName: shutdown(343) to startIteration"]}}, {"OutOfCoreOracle_cluster": {"actions": [{"root": "UPDATE from shutdown to startIteration", "operations": ["UPD SimpleName: shutdown from shutdown to startIteration"]}, {"root": "UPDATE from out-of-core oracle is using additional monitoring threads. to Called at the beginning of a superstep.", "operations": ["UPD TextElement: out-of-core oracle is using additional monitoring threads. from out-of-core oracle is using additional monitoring threads. to Called at the beginning of a superstep."]}, {"root": "DEL TextElement: Shut down the out-of-core oracle. Necessary specifically for cases where", "operations": ["DEL TextElement: Shut down the out-of-core oracle. Necessary specifically for cases where"]}]}}, {"OutOfCoreOracle_diff": {"operations": ["Update SimpleName: shutdown(147) to startIteration", "Update TextElement: out-of-core oracle is using additional monitoring threads.(143) to Called at the beginning of a superstep.", "Delete TextElement: Shut down the out-of-core oracle. Necessary specifically for cases where(142)"]}}, {"SimpleGCMonitoringOracle_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 13"]}, {"root": "UPDATE from shutdown to startIteration", "operations": ["UPD SimpleName: shutdown from shutdown to startIteration"]}]}}, {"SimpleGCMonitoringOracle_diff": {"operations": ["Move MethodDeclaration(804) into TypeDeclaration: class(1099) at 13", "Update SimpleName: shutdown(802) to startIteration"]}}, {"ThresholdBasedOracle_cluster": {"actions": [{"root": "INS SimpleName: startIteration to MethodDeclaration at 3", "operations": ["INS SimpleName: startIteration to MethodDeclaration at 3"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS Block to MethodDeclaration at 4"]}, {"root": "INS ExpressionStatement to Block at 15", "operations": ["INS SimpleName: thread to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getServiceWorker to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getGraphTaskManager to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: oocEngine to MethodInvocation at 0", "INS ExpressionStatement to Block at 15"]}, {"root": "INS ExpressionStatement to Block at 16", "operations": ["INS ExpressionStatement to Block at 16", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from \"giraph.memory.failPressure\" to \"giraph.threshold.failPressure\"", "operations": ["UPD StringLiteral: \"giraph.memory.failPressure\" from \"giraph.memory.failPressure\" to \"giraph.threshold.failPressure\""]}, {"root": "UPDATE from \"giraph.memory.emergencyPressure\" to \"giraph.threshold.emergencyPressure\"", "operations": ["UPD StringLiteral: \"giraph.memory.emergencyPressure\" from \"giraph.memory.emergencyPressure\" to \"giraph.threshold.emergencyPressure\""]}, {"root": "UPDATE from \"giraph.memory.highPressure\" to \"giraph.threshold.highPressure\"", "operations": ["UPD StringLiteral: \"giraph.memory.highPressure\" from \"giraph.memory.highPressure\" to \"giraph.threshold.highPressure\""]}, {"root": "UPDATE from \"giraph.memory.optimalPressure\" to \"giraph.threshold.optimalPressure\"", "operations": ["UPD StringLiteral: \"giraph.memory.optimalPressure\" from \"giraph.memory.optimalPressure\" to \"giraph.threshold.optimalPressure\""]}, {"root": "UPDATE from \"giraph.memory.lowPressure\" to \"giraph.threshold.lowPressure\"", "operations": ["UPD StringLiteral: \"giraph.memory.lowPressure\" from \"giraph.memory.lowPressure\" to \"giraph.threshold.lowPressure\""]}, {"root": "UPDATE from \"giraph.checkMemoryInterval\" to \"giraph.threshold.checkMemoryInterval\"", "operations": ["UPD StringLiteral: \"giraph.checkMemoryInterval\" from \"giraph.checkMemoryInterval\" to \"giraph.threshold.checkMemoryInterval\""]}, {"root": "UPDATE from \"giraph.lastGcCallInterval\" to \"giraph.threshold.lastGcCallInterval\"", "operations": ["UPD StringLiteral: \"giraph.lastGcCallInterval\" from \"giraph.lastGcCallInterval\" to \"giraph.threshold.lastGcCallInterval\""]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleType: Thread to VariableDeclarationStatement at 1", "operations": ["INS SimpleType: Thread to VariableDeclarationStatement at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS BooleanLiteral: true to MethodInvocation at 2"]}, {"root": "UPDATE from Void to Thread", "operations": ["UPD SimpleName: Void from Void to Thread", "UPD SimpleName: Void from Void to Thread", "UPD SimpleName: shouldTerminate from shouldTerminate to Thread"]}, {"root": "MOVE from SimpleType: Thread", "operations": ["MOV SimpleName: Void to SimpleType: Thread at 0"]}, {"root": "UPDATE from ThreadUtils to thread", "operations": ["UPD SimpleName: ThreadUtils from ThreadUtils to thread", "UPD SimpleName: executor from executor to thread", "UPD SimpleName: executor from executor to thread", "UPD SimpleName: callableFactory from callableFactory to thread"]}, {"root": "UPDATE from get to setUncaughtExceptionHandler", "operations": ["UPD SimpleName: get from get to setUncaughtExceptionHandler"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"check-memory\" to MethodInvocation at 2", "MOV SimpleName: createThreadFactory to MethodInvocation at 1", "MOV SimpleName: ThreadUtils to MethodInvocation at 0"]}, {"root": "UPDATE from createThreadFactory to setName", "operations": ["UPD SimpleName: createThreadFactory from createThreadFactory to setName"]}, {"root": "UPDATE from \"check-memory\" to \"memory-checker\"", "operations": ["UPD StringLiteral: \"check-memory\" from \"check-memory\" to \"memory-checker\""]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: executor to MethodInvocation at 0", "MOV SimpleName: submit to MethodInvocation at 1"]}, {"root": "UPDATE from submit to setDaemon", "operations": ["UPD SimpleName: submit from submit to setDaemon"]}, {"root": "UPDATE from shutdown to start", "operations": ["UPD SimpleName: shutdown from shutdown to start"]}, {"root": "INS SimpleType: Thread to ClassInstanceCreation at 0", "operations": ["INS SimpleType: Thread to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV ClassInstanceCreation to ClassInstanceCreation at 1"]}, {"root": "UPDATE from newSingleThreadExecutor to createUncaughtExceptionHandler", "operations": ["UPD SimpleName: newSingleThreadExecutor from newSingleThreadExecutor to createUncaughtExceptionHandler"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: newSingleThreadExecutor to MethodInvocation at 1"]}, {"root": "MOVE from SimpleType: Thread", "operations": ["MOV SimpleName: Void to SimpleType: Thread at 0"]}, {"root": "INS SimpleType: Runnable to ClassInstanceCreation at 0", "operations": ["INS SimpleType: Runnable to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: oocEngine to MethodInvocation at 0", "operations": ["INS SimpleName: oocEngine to MethodInvocation at 0"]}, {"root": "UPDATE from updateRequestsCredit to updateRequestsCreditFraction", "operations": ["UPD SimpleName: updateRequestsCredit from updateRequestsCredit to updateRequestsCreditFraction", "UPD SimpleName: maxRequestsCredit from maxRequestsCredit to updateRequestsCreditFraction"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 2", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 2"]}, {"root": "UPDATE from Callable to Runnable", "operations": ["UPD SimpleName: Callable from Callable to Runnable"]}, {"root": "MOVE from SimpleType: Runnable", "operations": ["MOV SimpleName: Callable to SimpleType: Runnable at 0"]}, {"root": "UPDATE from updateRequestsCredit to oocEngine", "operations": ["UPD SimpleName: updateRequestsCredit from updateRequestsCredit to oocEngine", "UPD SimpleName: updateRequestsCredit from updateRequestsCredit to oocEngine"]}, {"root": "INS NumberLiteral: 1 to MethodInvocation at 2", "operations": ["INS NumberLiteral: 1 to MethodInvocation at 2"]}, {"root": "INS SimpleName: updateRequestsCreditFraction to MethodInvocation at 1", "operations": ["INS SimpleName: updateRequestsCreditFraction to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: - to MethodInvocation at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "INS SimpleName: run to MethodDeclaration at 3", "operations": ["INS SimpleName: run to MethodDeclaration at 3"]}, {"root": "INS TryStatement to Block at 6", "operations": ["INS Block to TryStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: warn to MethodInvocation at 1", "INS SimpleName: e to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS CatchClause to TryStatement at 1", "INS ReturnStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"run: exception occurred!\" to MethodInvocation at 2", "INS Block to CatchClause at 1", "INS TryStatement to Block at 6", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: InterruptedException to SingleVariableDeclaration at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: shouldTerminate to MethodInvocation at 0", "MOV SimpleName: await to MethodInvocation at 1", "MOV SimpleName: checkMemoryInterval to MethodInvocation at 2"]}, {"root": "UPDATE from await to sleep", "operations": ["UPD SimpleName: await from await to sleep"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.giraph.comm.flow_control.CreditBasedFlowControl"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.giraph.comm.flow_control.FlowControl"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.giraph.utils.CallableFactory", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.giraph.utils.LogStacktraceCallable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.giraph.utils.ThreadUtils"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.Callable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.CountDownLatch", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.concurrent.ExecutionException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.concurrent.ExecutorService"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.Executors", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.concurrent.Future"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.TimeUnit", "DEL ImportDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: maxRequestsCredit", "DEL Javadoc", "DEL PrimitiveType: short", "DEL TextElement: Cached value for NettyClient.MAX_NUM_OF_OPEN_REQUESTS_PER_WORKER (max", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL TextElement: credit used for credit-based flow-control mechanism)", "DEL TagElement", "DEL FieldDeclaration", "DEL Modifier: final"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL TextElement: Whether the job is shutting down. Used for terminating the memory", "DEL Javadoc", "DEL TextElement: observer thread.", "DEL TagElement", "DEL SimpleName: CountDownLatch", "DEL SimpleName: shouldTerminate", "DEL SimpleType: CountDownLatch", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL FieldDeclaration", "DEL Modifier: final"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: checkMemoryThreadResult", "DEL SimpleName: Future", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL TextElement: Result of memory observer thread ", "DEL ParameterizedType: Future<Void>", "DEL Javadoc", "DEL SimpleType: Void", "DEL Modifier: final", "DEL TagElement", "DEL SimpleType: Future", "DEL Modifier: private", "DEL SimpleName: Void"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL QualifiedName: CreditBasedFlowControl.MAX_NUM_OF_OPEN_REQUESTS_PER_WORKER", "DEL ExpressionStatement", "DEL SimpleName: maxRequestsCredit", "DEL CastExpression", "DEL FieldAccess", "DEL ThisExpression", "DEL SimpleName: conf", "DEL Assignment: =", "DEL MethodInvocation", "DEL PrimitiveType: short"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL NumberLiteral: 1", "DEL SimpleName: shouldTerminate", "DEL SimpleType: CountDownLatch", "DEL ExpressionStatement", "DEL Assignment: =", "DEL ThisExpression", "DEL ClassInstanceCreation", "DEL FieldAccess", "DEL SimpleName: CountDownLatch"]}, {"root": "DEL ParameterizedType: CallableFactory<Void>", "operations": ["DEL ParameterizedType: CallableFactory<Void>", "DEL SimpleType: Void", "DEL SimpleName: CallableFactory", "DEL SimpleType: CallableFactory"]}, {"root": "DEL ParameterizedType: Callable<Void>", "operations": ["DEL SimpleName: Void", "DEL ParameterizedType: Callable<Void>", "DEL SimpleType: Void", "DEL SimpleType: Callable"]}, {"root": "DEL SimpleType: Void", "operations": ["DEL SimpleName: Void", "DEL SimpleType: Void"]}, {"root": "DEL SimpleName: call", "operations": ["DEL SimpleName: call"]}, {"root": "DEL SimpleType: Exception", "operations": ["DEL SimpleType: Exception", "DEL SimpleName: Exception"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL PrimitiveType: boolean", "DEL MethodInvocation", "DEL QualifiedName: TimeUnit.MILLISECONDS", "DEL SimpleName: done"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL SimpleName: done", "DEL BreakStatement", "DEL IfStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL NullLiteral"]}, {"root": "DEL ParameterizedType: CallableFactory<Void>", "operations": ["DEL SimpleName: CallableFactory", "DEL SimpleType: Void", "DEL SimpleType: CallableFactory", "DEL ParameterizedType: CallableFactory<Void>"]}, {"root": "DEL AnonymousClassDeclaration", "operations": ["DEL PrimitiveType: int", "DEL AnonymousClassDeclaration", "DEL SimpleType: Callable", "DEL SingleVariableDeclaration", "DEL SimpleName: Callable", "DEL MarkerAnnotation", "DEL ReturnStatement", "DEL SimpleName: newCallable", "DEL SimpleName: callableId", "DEL SimpleName: Override", "DEL SimpleType: Void", "DEL SimpleName: Void", "DEL MethodDeclaration", "DEL Modifier: public", "DEL Block", "DEL ParameterizedType: Callable<Void>"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: ExecutorService", "DEL VariableDeclarationFragment", "DEL SimpleName: Executors", "DEL SimpleName: executor", "DEL SimpleType: ExecutorService", "DEL MethodInvocation"]}, {"root": "DEL Assignment: =", "operations": ["DEL ClassInstanceCreation", "DEL ParameterizedType: LogStacktraceCallable<>", "DEL NumberLiteral: 0", "DEL SimpleName: LogStacktraceCallable", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: newCallable", "DEL MethodInvocation", "DEL SimpleName: callableFactory", "DEL FieldAccess", "DEL SimpleType: LogStacktraceCallable", "DEL SimpleName: checkMemoryThreadResult", "DEL ThisExpression"]}, {"root": "DEL CastExpression", "operations": ["DEL NumberLiteral: 0", "DEL PrimitiveType: short", "DEL CastExpression"]}, {"root": "DEL CastExpression", "operations": ["DEL ParenthesizedExpression", "DEL ParenthesizedExpression", "DEL SimpleName: maxRequestsCredit", "DEL PrimitiveType: short", "DEL CastExpression", "DEL InfixExpression: *"]}, {"root": "DEL SimpleName: shutdown", "operations": ["DEL SimpleName: shutdown"]}, {"root": "DEL Block", "operations": ["DEL ExpressionStatement", "DEL SimpleType: ExecutionException", "DEL Block", "DEL TryStatement", "DEL SimpleName: LOG", "DEL Block", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleName: shouldTerminate", "DEL SimpleName: info", "DEL SimpleName: isInfoEnabled", "DEL SimpleName: ExecutionException", "DEL UnionType: InterruptedException|ExecutionException", "DEL StringLiteral: \"shutdown: caught exception while waiting on check-memory \"", "DEL SimpleName: IllegalStateException", "DEL StringLiteral: \"shutdown: ThresholdBasedOracle shutdown complete!\"", "DEL MethodInvocation", "DEL SimpleType: IllegalStateException", "DEL SimpleName: e", "DEL SimpleName: checkMemoryThreadResult", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL CatchClause", "DEL SimpleName: error", "DEL SimpleName: LOG", "DEL SimpleName: get", "DEL ThrowStatement", "DEL ExpressionStatement", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: LOG", "DEL SimpleName: countDown", "DEL ExpressionStatement", "DEL StringLiteral: \"thread to terminate!\"", "DEL ExpressionStatement", "DEL Block", "DEL IfStatement", "DEL MethodInvocation", "DEL InfixExpression: +"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: newCredit", "DEL IfStatement", "DEL SimpleType: FlowControl", "DEL SimpleName: updateCredit", "DEL ExpressionStatement", "DEL Javadoc", "DEL SimpleName: isInfoEnabled", "DEL VariableDeclarationStatement", "DEL TextElement: take.", "DEL Block", "DEL TagElement: @param", "DEL InfixExpression: !=", "DEL ExpressionStatement", "DEL TagElement", "DEL SimpleName: info", "DEL InfixExpression: +", "DEL Block", "DEL CastExpression", "DEL SimpleName: updateRequestsCredit", "DEL SimpleName: getFlowControl", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: LOG", "DEL MethodInvocation", "DEL PrimitiveType: short", "DEL Block", "DEL SimpleName: flowControl", "DEL SingleVariableDeclaration", "DEL SimpleName: CreditBasedFlowControl", "DEL MethodDeclaration", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL TextElement: is an indirect way of controlling amount of memory incoming messages would", "DEL StringLiteral: \"updateRequestsCredit: updating the credit to \"", "DEL SimpleName: flowControl", "DEL SimpleName: flowControl", "DEL NullLiteral", "DEL SimpleName: newCredit", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL SimpleName: newCredit", "DEL SimpleName: FlowControl", "DEL SimpleName: LOG", "DEL SimpleType: CreditBasedFlowControl", "DEL SimpleName: oocEngine", "DEL TextElement: is, the lower rate incoming messages arrive at this worker. Thus, credit", "DEL SimpleName: newCredit", "DEL TextElement:  the new credit to announce to other workers", "DEL Modifier: private", "DEL PrimitiveType: void", "DEL TextElement: Update the credit announced for this worker in Netty. The lower the credit"]}]}}, {"ThresholdBasedOracle_diff": {"operations": ["Insert SimpleName: startIteration(871) into MethodDeclaration(873) at 3", "Insert Block(872) into MethodDeclaration(873) at 4", "Insert ExpressionStatement(599) into Block(614) at 13", "Insert ExpressionStatement(604) into Block(614) at 14", "Update StringLiteral: \"giraph.memory.failPressure\"(102) to \"giraph.threshold.failPressure\"", "Update StringLiteral: \"giraph.memory.emergencyPressure\"(123) to \"giraph.threshold.emergencyPressure\"", "Update StringLiteral: \"giraph.memory.highPressure\"(143) to \"giraph.threshold.highPressure\"", "Update StringLiteral: \"giraph.memory.optimalPressure\"(163) to \"giraph.threshold.optimalPressure\"", "Update StringLiteral: \"giraph.memory.lowPressure\"(183) to \"giraph.threshold.lowPressure\"", "Update StringLiteral: \"giraph.checkMemoryInterval\"(202) to \"giraph.threshold.checkMemoryInterval\"", "Update StringLiteral: \"giraph.lastGcCallInterval\"(223) to \"giraph.threshold.lastGcCallInterval\"", "Insert Modifier: final(430) into VariableDeclarationStatement(588) at 0", "Insert SimpleType: Thread(432) into VariableDeclarationStatement(588) at 1", "Insert MethodInvocation(598) into ExpressionStatement(599) at 0", "Insert MethodInvocation(603) into ExpressionStatement(604) at 0", "Insert MethodInvocation(608) into ExpressionStatement(609) at 0", "Update SimpleName: Void(510) to Thread", "Move SimpleName: Void(510) into SimpleType: Thread(432) at 0", "Update SimpleName: callableFactory(513) to thread", "Insert SimpleName: thread(589) into MethodInvocation(598) at 0", "Update SimpleName: get(460) to setUncaughtExceptionHandler", "Move SimpleName: get(460) into MethodInvocation(598) at 1", "Insert MethodInvocation(597) into MethodInvocation(598) at 2", "Update SimpleName: ThreadUtils(694) to thread", "Move SimpleName: ThreadUtils(694) into MethodInvocation(603) at 0", "Update SimpleName: createThreadFactory(695) to setName", "Move SimpleName: createThreadFactory(695) into MethodInvocation(603) at 1", "Update StringLiteral: \"check-memory\"(696) to \"memory-checker\"", "Move StringLiteral: \"check-memory\"(696) into MethodInvocation(603) at 2", "Update SimpleName: executor(704) to thread", "Move SimpleName: executor(704) into MethodInvocation(608) at 0", "Update SimpleName: submit(705) to setDaemon", "Move SimpleName: submit(705) into MethodInvocation(608) at 1", "Insert BooleanLiteral: true(607) into MethodInvocation(608) at 2", "Update SimpleName: executor(717) to thread", "Update SimpleName: shutdown(718) to start", "Insert SimpleType: Thread(435) into ClassInstanceCreation(586) at 0", "Move ClassInstanceCreation(681) into ClassInstanceCreation(586) at 1", "Insert MethodInvocation(595) into MethodInvocation(597) at 0", "Update SimpleName: newSingleThreadExecutor(693) to createUncaughtExceptionHandler", "Move SimpleName: newSingleThreadExecutor(693) into MethodInvocation(597) at 1", "Update SimpleName: Void(516) to Thread", "Move SimpleName: Void(516) into SimpleType: Thread(435) at 0", "Insert SimpleType: Runnable(437) into ClassInstanceCreation(585) at 0", "Insert MethodInvocation(593) into MethodInvocation(595) at 0", "Insert SimpleName: getGraphTaskManager(594) into MethodInvocation(595) at 1", "Insert SimpleName: oocEngine(668) into MethodInvocation(671) at 0", "Update SimpleName: updateRequestsCredit(775) to updateRequestsCreditFraction", "Insert NumberLiteral: 0(670) into MethodInvocation(671) at 2", "Update SimpleName: Callable(531) to Runnable", "Move SimpleName: Callable(531) into SimpleType: Runnable(437) at 0", "Insert SimpleName: oocEngine(591) into MethodInvocation(593) at 0", "Insert SimpleName: getServiceWorker(592) into MethodInvocation(593) at 1", "Update SimpleName: updateRequestsCredit(785) to oocEngine", "Update SimpleName: maxRequestsCredit(786) to updateRequestsCreditFraction", "Insert NumberLiteral: 1(679) into MethodInvocation(680) at 2", "Update SimpleName: updateRequestsCredit(790) to oocEngine", "Insert SimpleName: updateRequestsCreditFraction(684) into MethodInvocation(696) at 1", "Move InfixExpression: -(803) into MethodInvocation(696) at 2", "Insert PrimitiveType: void(441) into MethodDeclaration(583) at 2", "Insert SimpleName: run(442) into MethodDeclaration(583) at 3", "Insert TryStatement(579) into Block(580) at 4", "Insert Block(565) into TryStatement(579) at 0", "Insert CatchClause(578) into TryStatement(579) at 1", "Insert ExpressionStatement(564) into Block(565) at 0", "Insert SingleVariableDeclaration(569) into CatchClause(578) at 0", "Insert Block(577) into CatchClause(578) at 1", "Insert MethodInvocation(563) into ExpressionStatement(564) at 0", "Move SimpleType: InterruptedException(994) into SingleVariableDeclaration(569) at 0", "Insert SimpleName: e(568) into SingleVariableDeclaration(569) at 1", "Insert ExpressionStatement(575) into Block(577) at 0", "Insert ReturnStatement(576) into Block(577) at 1", "Update SimpleName: shouldTerminate(547) to Thread", "Move SimpleName: shouldTerminate(547) into MethodInvocation(563) at 0", "Update SimpleName: await(548) to sleep", "Move SimpleName: await(548) into MethodInvocation(563) at 1", "Move SimpleName: checkMemoryInterval(549) into MethodInvocation(563) at 2", "Insert MethodInvocation(574) into ExpressionStatement(575) at 0", "Insert SimpleName: LOG(570) into MethodInvocation(574) at 0", "Insert SimpleName: warn(571) into MethodInvocation(574) at 1", "Insert StringLiteral: \"run: exception occurred!\"(572) into MethodInvocation(574) at 2", "Insert SimpleName: e(573) into MethodInvocation(574) at 3", "Delete QualifiedName: org.apache.giraph.comm.flow_control.CreditBasedFlowControl(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: org.apache.giraph.comm.flow_control.FlowControl(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.giraph.utils.CallableFactory(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.giraph.utils.LogStacktraceCallable(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: org.apache.giraph.utils.ThreadUtils(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: java.util.concurrent.Callable(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: java.util.concurrent.CountDownLatch(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: java.util.concurrent.ExecutionException(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: java.util.concurrent.ExecutorService(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: java.util.concurrent.Executors(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: java.util.concurrent.Future(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: java.util.concurrent.TimeUnit(42)", "Delete ImportDeclaration(43)", "Delete TextElement: Cached value for NettyClient.MAX_NUM_OF_OPEN_REQUESTS_PER_WORKER (max(311)", "Delete TextElement: credit used for credit-based flow-control mechanism)(312)", "Delete TagElement(313)", "Delete Javadoc(314)", "Delete Modifier: private(315)", "Delete Modifier: final(316)", "Delete PrimitiveType: short(317)", "Delete SimpleName: maxRequestsCredit(318)", "Delete VariableDeclarationFragment(319)", "Delete FieldDeclaration(320)", "Delete TextElement: Whether the job is shutting down. Used for terminating the memory(321)", "Delete TextElement: observer thread.(322)", "Delete TagElement(323)", "Delete Javadoc(324)", "Delete Modifier: private(325)", "Delete Modifier: final(326)", "Delete SimpleName: CountDownLatch(327)", "Delete SimpleType: CountDownLatch(328)", "Delete SimpleName: shouldTerminate(329)", "Delete VariableDeclarationFragment(330)", "Delete FieldDeclaration(331)", "Delete TextElement: Result of memory observer thread (332)", "Delete TagElement(333)", "Delete Javadoc(334)", "Delete Modifier: private(335)", "Delete Modifier: final(336)", "Delete SimpleName: Future(337)", "Delete SimpleType: Future(338)", "Delete SimpleName: Void(339)", "Delete SimpleType: Void(340)", "Delete ParameterizedType: Future<Void>(341)", "Delete SimpleName: checkMemoryThreadResult(342)", "Delete VariableDeclarationFragment(343)", "Delete FieldDeclaration(344)", "Delete ThisExpression(455)", "Delete SimpleName: maxRequestsCredit(456)", "Delete FieldAccess(457)", "Delete PrimitiveType: short(458)", "Delete QualifiedName: CreditBasedFlowControl.MAX_NUM_OF_OPEN_REQUESTS_PER_WORKER(459)", "Delete SimpleName: conf(461)", "Delete MethodInvocation(462)", "Delete CastExpression(463)", "Delete Assignment: =(464)", "Delete ExpressionStatement(465)", "Delete ThisExpression(487)", "Delete SimpleName: shouldTerminate(488)", "Delete FieldAccess(489)", "Delete SimpleName: CountDownLatch(490)", "Delete SimpleType: CountDownLatch(491)", "Delete NumberLiteral: 1(492)", "Delete ClassInstanceCreation(493)", "Delete Assignment: =(494)", "Delete ExpressionStatement(495)", "Delete SimpleName: CallableFactory(508)", "Delete SimpleType: CallableFactory(509)", "Delete SimpleType: Void(511)", "Delete ParameterizedType: CallableFactory<Void>(512)", "Delete SimpleType: Callable(532)", "Delete SimpleName: Void(533)", "Delete SimpleType: Void(534)", "Delete ParameterizedType: Callable<Void>(535)", "Delete SimpleName: Void(539)", "Delete SimpleType: Void(540)", "Delete SimpleName: call(541)", "Delete SimpleName: Exception(542)", "Delete SimpleType: Exception(543)", "Delete PrimitiveType: boolean(545)", "Delete SimpleName: done(546)", "Delete QualifiedName: TimeUnit.MILLISECONDS(550)", "Delete MethodInvocation(551)", "Delete VariableDeclarationFragment(552)", "Delete VariableDeclarationStatement(553)", "Delete SimpleName: done(554)", "Delete BreakStatement(555)", "Delete Block(556)", "Delete IfStatement(557)", "Delete NullLiteral(676)", "Delete ReturnStatement(677)", "Delete SimpleName: CallableFactory(514)", "Delete SimpleType: CallableFactory(515)", "Delete SimpleType: Void(517)", "Delete ParameterizedType: CallableFactory<Void>(518)", "Delete SimpleName: Override(519)", "Delete MarkerAnnotation(520)", "Delete Modifier: public(521)", "Delete SimpleName: Callable(522)", "Delete SimpleType: Callable(523)", "Delete SimpleName: Void(524)", "Delete SimpleType: Void(525)", "Delete ParameterizedType: Callable<Void>(526)", "Delete SimpleName: newCallable(527)", "Delete PrimitiveType: int(528)", "Delete SimpleName: callableId(529)", "Delete SingleVariableDeclaration(530)", "Delete ReturnStatement(682)", "Delete Block(683)", "Delete MethodDeclaration(684)", "Delete AnonymousClassDeclaration(685)", "Delete SimpleName: ExecutorService(689)", "Delete SimpleType: ExecutorService(690)", "Delete SimpleName: executor(691)", "Delete SimpleName: Executors(692)", "Delete MethodInvocation(697)", "Delete MethodInvocation(698)", "Delete VariableDeclarationFragment(699)", "Delete VariableDeclarationStatement(700)", "Delete ThisExpression(701)", "Delete SimpleName: checkMemoryThreadResult(702)", "Delete FieldAccess(703)", "Delete SimpleName: LogStacktraceCallable(706)", "Delete SimpleType: LogStacktraceCallable(707)", "Delete ParameterizedType: LogStacktraceCallable<>(708)", "Delete SimpleName: callableFactory(709)", "Delete SimpleName: newCallable(710)", "Delete NumberLiteral: 0(711)", "Delete MethodInvocation(712)", "Delete ClassInstanceCreation(713)", "Delete MethodInvocation(714)", "Delete Assignment: =(715)", "Delete PrimitiveType: short(776)", "Delete NumberLiteral: 0(777)", "Delete CastExpression(778)", "Delete PrimitiveType: short(791)", "Delete SimpleName: maxRequestsCredit(792)", "Delete ParenthesizedExpression(804)", "Delete InfixExpression: *(805)", "Delete ParenthesizedExpression(806)", "Delete CastExpression(807)", "Delete SimpleName: shutdown(983)", "Delete SimpleName: shouldTerminate(984)", "Delete SimpleName: countDown(985)", "Delete MethodInvocation(986)", "Delete ExpressionStatement(987)", "Delete SimpleName: checkMemoryThreadResult(988)", "Delete SimpleName: get(989)", "Delete MethodInvocation(990)", "Delete ExpressionStatement(991)", "Delete Block(992)", "Delete SimpleName: ExecutionException(995)", "Delete SimpleType: ExecutionException(996)", "Delete UnionType: InterruptedException|ExecutionException(997)", "Delete SimpleName: e(998)", "Delete SingleVariableDeclaration(999)", "Delete SimpleName: LOG(1000)", "Delete SimpleName: error(1001)", "Delete StringLiteral: \"shutdown: caught exception while waiting on check-memory \"(1002)", "Delete StringLiteral: \"thread to terminate!\"(1003)", "Delete InfixExpression: +(1004)", "Delete MethodInvocation(1005)", "Delete ExpressionStatement(1006)", "Delete SimpleName: IllegalStateException(1007)", "Delete SimpleType: IllegalStateException(1008)", "Delete SimpleName: e(1009)", "Delete ClassInstanceCreation(1010)", "Delete ThrowStatement(1011)", "Delete Block(1012)", "Delete CatchClause(1013)", "Delete TryStatement(1014)", "Delete SimpleName: LOG(1015)", "Delete SimpleName: isInfoEnabled(1016)", "Delete MethodInvocation(1017)", "Delete SimpleName: LOG(1018)", "Delete SimpleName: info(1019)", "Delete StringLiteral: \"shutdown: ThresholdBasedOracle shutdown complete!\"(1020)", "Delete MethodInvocation(1021)", "Delete ExpressionStatement(1022)", "Delete Block(1023)", "Delete IfStatement(1024)", "Delete Block(1025)", "Delete TextElement: Update the credit announced for this worker in Netty. The lower the credit(1027)", "Delete TextElement: is, the lower rate incoming messages arrive at this worker. Thus, credit(1028)", "Delete TextElement: is an indirect way of controlling amount of memory incoming messages would(1029)", "Delete TextElement: take.(1030)", "Delete TagElement(1031)", "Delete SimpleName: newCredit(1032)", "Delete TextElement:  the new credit to announce to other workers(1033)", "Delete TagElement: @param(1034)", "Delete Javadoc(1035)", "Delete Modifier: private(1036)", "Delete PrimitiveType: void(1037)", "Delete SimpleName: updateRequestsCredit(1038)", "Delete PrimitiveType: short(1039)", "Delete SimpleName: newCredit(1040)", "Delete SingleVariableDeclaration(1041)", "Delete SimpleName: LOG(1042)", "Delete SimpleName: isInfoEnabled(1043)", "Delete MethodInvocation(1044)", "Delete SimpleName: LOG(1045)", "Delete SimpleName: info(1046)", "Delete StringLiteral: \"updateRequestsCredit: updating the credit to \"(1047)", "Delete SimpleName: newCredit(1048)", "Delete InfixExpression: +(1049)", "Delete MethodInvocation(1050)", "Delete ExpressionStatement(1051)", "Delete Block(1052)", "Delete IfStatement(1053)", "Delete SimpleName: FlowControl(1054)", "Delete SimpleType: FlowControl(1055)", "Delete SimpleName: flowControl(1056)", "Delete SimpleName: oocEngine(1057)", "Delete SimpleName: getFlowControl(1058)", "Delete MethodInvocation(1059)", "Delete VariableDeclarationFragment(1060)", "Delete VariableDeclarationStatement(1061)", "Delete SimpleName: flowControl(1062)", "Delete NullLiteral(1063)", "Delete InfixExpression: !=(1064)", "Delete SimpleName: CreditBasedFlowControl(1065)", "Delete SimpleType: CreditBasedFlowControl(1066)", "Delete SimpleName: flowControl(1067)", "Delete CastExpression(1068)", "Delete ParenthesizedExpression(1069)", "Delete SimpleName: updateCredit(1070)", "Delete SimpleName: newCredit(1071)", "Delete MethodInvocation(1072)", "Delete ExpressionStatement(1073)", "Delete Block(1074)", "Delete IfStatement(1075)", "Delete Block(1076)", "Delete MethodDeclaration(1077)"]}}], "commit_stats": [{"total_files": 25, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "True"}]}