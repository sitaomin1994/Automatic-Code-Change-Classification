{"application": "apache-helix", "csha": "80e9c4a9866d5a72cdbcf8509d74a86b5091253a", "files": [{"HelixAdmin_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 40", "operations": ["INS TagElement: @return to Javadoc at 3", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS TagElement: @param to Javadoc at 0", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: instanceNames to SingleVariableDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: clusterName to SingleVariableDeclaration at 1", "INS SimpleName: clusterName to TagElement: @param at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: IdealState to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: interface at 40", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ParameterizedType: List<String> to SingleVariableDeclaration at 0", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS SimpleName: instanceNames to TagElement: @param at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: List to SimpleType: List at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: currentIdealState to TagElement: @param at 0", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: IdealState to SimpleType: IdealState at 0", "INS SimpleName: currentIdealState to SingleVariableDeclaration at 1", "INS SimpleName: rebalance to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 41", "operations": ["INS TagElement: @param to Javadoc at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS TagElement: @param to Javadoc at 1", "INS TagElement: @param to Javadoc at 3", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: clusterName to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 2", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS MethodDeclaration to TypeDeclaration: interface at 41", "INS SimpleName: resourceName to SingleVariableDeclaration at 1", "INS ParameterizedType: List<String> to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: clusterName to SingleVariableDeclaration at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS Javadoc to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: rebalance to MethodDeclaration at 2", "INS SimpleName: replica to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: instances to TagElement: @param at 0", "INS SimpleName: resourceName to TagElement: @param at 0", "INS SimpleName: instances to SingleVariableDeclaration at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: replica to TagElement: @param at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 42", "operations": ["INS TagElement: @param to Javadoc at 0", "INS SimpleName: rebalance to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: replica to SingleVariableDeclaration at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: clusterName to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: resourceName to SingleVariableDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: interface at 42", "INS TagElement: @param to Javadoc at 3", "INS SimpleName: clusterName to TagElement: @param at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: keyPrefix to TagElement: @param at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: resourceName to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS TagElement: @param to Javadoc at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: replica to TagElement: @param at 0", "INS SimpleName: keyPrefix to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}]}}, {"HelixAdmin_diff": {"operations": ["Insert MethodDeclaration(900) into TypeDeclaration: interface(958) at 40", "Insert MethodDeclaration(930) into TypeDeclaration: interface(958) at 41", "Insert MethodDeclaration(957) into TypeDeclaration: interface(958) at 42", "Insert Javadoc(882) into MethodDeclaration(900) at 0", "Insert PrimitiveType: void(883) into MethodDeclaration(900) at 1", "Insert SimpleName: rebalance(884) into MethodDeclaration(900) at 2", "Insert SingleVariableDeclaration(888) into MethodDeclaration(900) at 3", "Insert SingleVariableDeclaration(892) into MethodDeclaration(900) at 4", "Insert SingleVariableDeclaration(899) into MethodDeclaration(900) at 5", "Insert Javadoc(909) into MethodDeclaration(930) at 0", "Insert PrimitiveType: void(910) into MethodDeclaration(930) at 1", "Insert SimpleName: rebalance(911) into MethodDeclaration(930) at 2", "Insert SingleVariableDeclaration(915) into MethodDeclaration(930) at 3", "Insert SingleVariableDeclaration(919) into MethodDeclaration(930) at 4", "Insert SingleVariableDeclaration(922) into MethodDeclaration(930) at 5", "Insert SingleVariableDeclaration(929) into MethodDeclaration(930) at 6", "Insert Javadoc(939) into MethodDeclaration(957) at 0", "Insert PrimitiveType: void(940) into MethodDeclaration(957) at 1", "Insert SimpleName: rebalance(941) into MethodDeclaration(957) at 2", "Insert SingleVariableDeclaration(945) into MethodDeclaration(957) at 3", "Insert SingleVariableDeclaration(949) into MethodDeclaration(957) at 4", "Insert SingleVariableDeclaration(952) into MethodDeclaration(957) at 5", "Insert SingleVariableDeclaration(956) into MethodDeclaration(957) at 6", "Insert TagElement: @param(876) into Javadoc(882) at 0", "Insert TagElement: @param(878) into Javadoc(882) at 1", "Insert TagElement: @param(880) into Javadoc(882) at 2", "Insert TagElement: @return(881) into Javadoc(882) at 3", "Insert SimpleType: String(886) into SingleVariableDeclaration(888) at 0", "Insert SimpleName: clusterName(887) into SingleVariableDeclaration(888) at 1", "Insert SimpleType: IdealState(890) into SingleVariableDeclaration(892) at 0", "Insert SimpleName: currentIdealState(891) into SingleVariableDeclaration(892) at 1", "Insert ParameterizedType: List<String>(897) into SingleVariableDeclaration(899) at 0", "Insert SimpleName: instanceNames(898) into SingleVariableDeclaration(899) at 1", "Insert TagElement: @param(902) into Javadoc(909) at 0", "Insert TagElement: @param(904) into Javadoc(909) at 1", "Insert TagElement: @param(906) into Javadoc(909) at 2", "Insert TagElement: @param(908) into Javadoc(909) at 3", "Insert SimpleType: String(913) into SingleVariableDeclaration(915) at 0", "Insert SimpleName: clusterName(914) into SingleVariableDeclaration(915) at 1", "Insert SimpleType: String(917) into SingleVariableDeclaration(919) at 0", "Insert SimpleName: resourceName(918) into SingleVariableDeclaration(919) at 1", "Insert PrimitiveType: int(920) into SingleVariableDeclaration(922) at 0", "Insert SimpleName: replica(921) into SingleVariableDeclaration(922) at 1", "Insert ParameterizedType: List<String>(927) into SingleVariableDeclaration(929) at 0", "Insert SimpleName: instances(928) into SingleVariableDeclaration(929) at 1", "Insert TagElement: @param(932) into Javadoc(939) at 0", "Insert TagElement: @param(934) into Javadoc(939) at 1", "Insert TagElement: @param(936) into Javadoc(939) at 2", "Insert TagElement: @param(938) into Javadoc(939) at 3", "Insert SimpleType: String(943) into SingleVariableDeclaration(945) at 0", "Insert SimpleName: clusterName(944) into SingleVariableDeclaration(945) at 1", "Insert SimpleType: String(947) into SingleVariableDeclaration(949) at 0", "Insert SimpleName: resourceName(948) into SingleVariableDeclaration(949) at 1", "Insert PrimitiveType: int(950) into SingleVariableDeclaration(952) at 0", "Insert SimpleName: replica(951) into SingleVariableDeclaration(952) at 1", "Insert SimpleType: String(954) into SingleVariableDeclaration(956) at 0", "Insert SimpleName: keyPrefix(955) into SingleVariableDeclaration(956) at 1", "Insert SimpleName: clusterName(875) into TagElement: @param(876) at 0", "Insert SimpleName: currentIdealState(877) into TagElement: @param(878) at 0", "Insert SimpleName: instanceNames(879) into TagElement: @param(880) at 0", "Insert SimpleName: String(885) into SimpleType: String(886) at 0", "Insert SimpleName: IdealState(889) into SimpleType: IdealState(890) at 0", "Insert SimpleType: List(894) into ParameterizedType: List<String>(897) at 0", "Insert SimpleType: String(896) into ParameterizedType: List<String>(897) at 1", "Insert SimpleName: clusterName(901) into TagElement: @param(902) at 0", "Insert SimpleName: resourceName(903) into TagElement: @param(904) at 0", "Insert SimpleName: replica(905) into TagElement: @param(906) at 0", "Insert SimpleName: instances(907) into TagElement: @param(908) at 0", "Insert SimpleName: String(912) into SimpleType: String(913) at 0", "Insert SimpleName: String(916) into SimpleType: String(917) at 0", "Insert SimpleType: List(924) into ParameterizedType: List<String>(927) at 0", "Insert SimpleType: String(926) into ParameterizedType: List<String>(927) at 1", "Insert SimpleName: clusterName(931) into TagElement: @param(932) at 0", "Insert SimpleName: resourceName(933) into TagElement: @param(934) at 0", "Insert SimpleName: replica(935) into TagElement: @param(936) at 0", "Insert SimpleName: keyPrefix(937) into TagElement: @param(938) at 0", "Insert SimpleName: String(942) into SimpleType: String(943) at 0", "Insert SimpleName: String(946) into SimpleType: String(947) at 0", "Insert SimpleName: String(953) into SimpleType: String(954) at 0", "Insert SimpleName: List(893) into SimpleType: List(894) at 0", "Insert SimpleName: String(895) into SimpleType: String(896) at 0", "Insert SimpleName: List(923) into SimpleType: List(924) at 0", "Insert SimpleName: String(925) into SimpleType: String(926) at 0"]}}, {"ClusterSetup_cluster": {"actions": [{"root": "INS PrimitiveType: void to MethodDeclaration at 1", "operations": ["INS PrimitiveType: void to MethodDeclaration at 1"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 1", "operations": ["INS PrimitiveType: void to MethodDeclaration at 1"]}, {"root": "UPDATE from newIdealStateRecord to rebalanceResource", "operations": ["UPD SimpleName: newIdealStateRecord from newIdealStateRecord to rebalanceResource", "UPD SimpleName: buildInternalIdealState from buildInternalIdealState to rebalanceResource"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleName: instanceNames to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 7"]}, {"root": "INS Block to MethodDeclaration at 8", "operations": ["INS Block to MethodDeclaration at 8"]}, {"root": "UPDATE from state to idealState", "operations": ["UPD SimpleName: state from state to idealState"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ParameterizedType: List<String> to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getSimpleFields to MethodInvocation at 1", "MOV SimpleName: newIdealStateRecord to MethodInvocation at 0"]}, {"root": "UPDATE from getResourceName to clusterName", "operations": ["UPD SimpleName: getResourceName from getResourceName to clusterName", "UPD SimpleName: getSimpleFields from getSimpleFields to clusterName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: idealState to MethodInvocation at 2"]}, {"root": "UPDATE from getSimpleFields to instanceNames", "operations": ["UPD SimpleName: getSimpleFields from getSimpleFields to instanceNames", "UPD SimpleName: i from i to instanceNames"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getSimpleFields to MethodInvocation at 3"]}, {"root": "UPDATE from reversePartitionIndex to _admin", "operations": ["UPD SimpleName: reversePartitionIndex from reversePartitionIndex to _admin"]}, {"root": "UPDATE from setResourceIdealState to rebalance", "operations": ["UPD SimpleName: setResourceIdealState from setResourceIdealState to rebalance", "UPD SimpleName: state from state to rebalance"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: state to MethodInvocation at 1", "MOV SimpleName: getResourceName to MethodInvocation at 2"]}, {"root": "INS SimpleName: idealState to MethodInvocation at 3", "operations": ["INS SimpleName: idealState to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: i to MethodInvocation at 4"]}, {"root": "UPDATE from idealState to replica", "operations": ["UPD SimpleName: idealState from idealState to replica"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: IdealState", "DEL VariableDeclarationStatement", "DEL SimpleName: IdealState", "DEL VariableDeclarationFragment", "DEL SimpleName: newIdealState"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: clusterName", "DEL SimpleName: setResourceIdealState", "DEL SimpleName: resourceName", "DEL SimpleName: _admin", "DEL SimpleName: newIdealState"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: HelixException", "DEL MethodInvocation", "DEL SimpleName: masterStateValue", "DEL StringLiteral: \"N\"", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: masterStateValue", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL ArrayType: String[]", "DEL ArrayAccess", "DEL Assignment: =", "DEL ExpressionStatement", "DEL Block", "DEL InfixExpression: ==", "DEL NullLiteral", "DEL SimpleName: result", "DEL VariableDeclarationFragment", "DEL Dimension", "DEL SimpleType: StateModelDefinition", "DEL SimpleName: slaveStateValue", "DEL ClassInstanceCreation", "DEL ReturnStatement", "DEL SimpleType: String", "DEL SimpleName: state", "DEL IfStatement", "DEL SimpleName: masterStateValue", "DEL SimpleType: String", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL NullLiteral", "DEL ExpressionStatement", "DEL Block", "DEL NullLiteral", "DEL MethodInvocation", "DEL SimpleName: slaveStateValue", "DEL SimpleName: state", "DEL VariableDeclarationFragment", "DEL InfixExpression: !=", "DEL SimpleName: equalsIgnoreCase", "DEL SimpleName: state", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: masterStateValue", "DEL VariableDeclarationFragment", "DEL InfixExpression: ==", "DEL ThrowStatement", "DEL ThrowStatement", "DEL InfixExpression: ==", "DEL SimpleType: String", "DEL SimpleName: slaveStateValue", "DEL IfStatement", "DEL Assignment: =", "DEL VariableDeclarationStatement", "DEL InfixExpression: ==", "DEL ExpressionStatement", "DEL SimpleName: getStatesPriorityList", "DEL NullLiteral", "DEL StringLiteral: \"Invalid or unsupported state model definition\"", "DEL Assignment: =", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: count", "DEL NullLiteral", "DEL SimpleType: HelixException", "DEL SimpleName: String", "DEL Assignment: =", "DEL StringLiteral: \"Invalid or unsupported state model definition\"", "DEL Block", "DEL EnhancedForStatement", "DEL VariableDeclarationStatement", "DEL ArrayAccess", "DEL SimpleName: _admin", "DEL InfixExpression: ==", "DEL IfStatement", "DEL StringLiteral: \"Invalid or unsupported state model definition\"", "DEL SimpleName: equalsIgnoreCase", "DEL NullLiteral", "DEL IfStatement", "DEL SimpleName: slaveStateValue", "DEL SimpleName: stateModelName", "DEL ArrayType: String[]", "DEL ClassInstanceCreation", "DEL NullLiteral", "DEL Block", "DEL NullLiteral", "DEL SimpleName: count", "DEL SimpleName: String", "DEL StringLiteral: \"Invalid or unsupported state model definition\"", "DEL PrefixExpression: !", "DEL SimpleType: HelixException", "DEL Assignment: =", "DEL ThrowStatement", "DEL SimpleName: state", "DEL SimpleName: String", "DEL StringLiteral: \"R\"", "DEL MethodInvocation", "DEL IfStatement", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: count", "DEL SimpleName: slaveStateValue", "DEL ArrayType: String[]", "DEL InfixExpression: ==", "DEL SimpleName: stateModelName", "DEL SimpleName: getStateModelDef", "DEL SimpleName: getNumInstancesPerState", "DEL Dimension", "DEL SimpleName: HelixException", "DEL VariableDeclarationFragment", "DEL ThrowStatement", "DEL SimpleName: stateModDef", "DEL SimpleName: HelixException", "DEL SimpleName: HelixException", "DEL SimpleName: parseStates", "DEL SimpleName: slaveStateValue", "DEL SimpleName: masterStateValue", "DEL SimpleName: equals", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SimpleName: result", "DEL SimpleName: stateModelName", "DEL SimpleType: String", "DEL InfixExpression: &&", "DEL Assignment: =", "DEL MethodDeclaration", "DEL SimpleName: masterStateValue", "DEL ThrowStatement", "DEL SimpleName: count", "DEL ClassInstanceCreation", "DEL SimpleName: String", "DEL SimpleName: statePriorityList", "DEL NumberLiteral: 1", "DEL Dimension", "DEL SingleVariableDeclaration", "DEL InfixExpression: +", "DEL Block", "DEL SimpleName: state", "DEL SimpleName: result", "DEL SimpleName: stateModDef", "DEL IfStatement", "DEL SimpleName: slaveStateValue", "DEL SimpleName: String", "DEL SimpleName: result", "DEL StringLiteral: \"1\"", "DEL SimpleName: HelixException", "DEL SimpleName: HelixException", "DEL Block", "DEL SimpleName: masterStateValue", "DEL ClassInstanceCreation", "DEL SimpleName: stateModDef", "DEL NumberLiteral: 2", "DEL InfixExpression: !=", "DEL ArrayCreation", "DEL SimpleName: masterStateValue", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleType: HelixException", "DEL NullLiteral", "DEL IfStatement", "DEL Modifier: public", "DEL SimpleName: masterStateValue", "DEL StringLiteral: \"cannot find state model: \"", "DEL SimpleName: StateModelDefinition", "DEL SimpleName: stateModDef", "DEL Assignment: =", "DEL SimpleType: String", "DEL InfixExpression: &&", "DEL SimpleType: String", "DEL Block", "DEL SimpleName: slaveStateValue", "DEL ParenthesizedExpression", "DEL SimpleType: HelixException", "DEL SimpleName: statePriorityList", "DEL IfStatement", "DEL IfStatement", "DEL Block", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: clusterName", "DEL NullLiteral"]}, {"root": "DEL SimpleType: IdealState", "operations": ["DEL SimpleName: IdealState", "DEL SimpleType: IdealState"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: activeInstances", "DEL SimpleName: HashSet", "DEL ParameterizedType: Set<String>", "DEL VariableDeclarationFragment", "DEL SimpleType: Set", "DEL VariableDeclarationStatement", "DEL SimpleType: String", "DEL SimpleName: String", "DEL ClassInstanceCreation", "DEL SimpleName: String", "DEL SimpleType: HashSet", "DEL SimpleName: Set", "DEL SimpleType: String", "DEL ParameterizedType: HashSet<String>"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL SimpleName: addAll", "DEL EnhancedForStatement", "DEL MethodInvocation", "DEL SimpleName: partition", "DEL MethodInvocation", "DEL SimpleName: idealState", "DEL SimpleName: String", "DEL SimpleName: activeInstances", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: getRecord", "DEL SingleVariableDeclaration", "DEL SimpleName: getPartitionSet", "DEL SimpleType: String", "DEL SimpleName: getListField", "DEL MethodInvocation", "DEL SimpleName: partition", "DEL SimpleName: idealState", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: removeAll", "DEL SimpleName: activeInstances", "DEL SimpleName: instanceNames", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: String", "DEL ParameterizedType: Map<String,Object>", "DEL SimpleName: Object", "DEL SimpleName: Map", "DEL VariableDeclarationStatement", "DEL SimpleType: Object", "DEL SimpleName: buildInternalIdealState", "DEL SimpleName: String", "DEL SimpleName: idealState", "DEL SimpleType: Map", "DEL SimpleName: previousIdealState", "DEL VariableDeclarationFragment", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleType: Object", "DEL SimpleName: balancedRecord", "DEL SimpleName: calculateNextIdealState", "DEL MethodInvocation", "DEL ParameterizedType: Map<String,Object>", "DEL SimpleName: IdealStateCalculatorForStorageNode", "DEL SimpleType: Map", "DEL SimpleName: Object", "DEL SimpleName: instanceNames", "DEL SimpleType: String", "DEL SimpleName: previousIdealState", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL SimpleName: Map"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: clusterName", "DEL MethodInvocation", "DEL SimpleName: idealState", "DEL SimpleName: parseStates", "DEL ArrayType: String[]", "DEL SimpleType: String", "DEL SimpleName: getStateModelDefRef", "DEL VariableDeclarationStatement", "DEL SimpleName: states", "DEL SimpleName: String", "DEL Dimension", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: IdealStateCalculatorForStorageNode", "DEL VariableDeclarationFragment", "DEL SimpleName: getResourceName", "DEL NumberLiteral: 1", "DEL NumberLiteral: 0", "DEL VariableDeclarationStatement", "DEL SimpleName: idealState", "DEL SimpleType: ZNRecord", "DEL SimpleName: newIdealStateRecord", "DEL SimpleName: convertToZNRecord", "DEL SimpleName: states", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: states", "DEL ArrayAccess", "DEL SimpleName: balancedRecord", "DEL ArrayAccess", "DEL SimpleName: ZNRecord"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL ParameterizedType: Set<String>", "DEL SimpleName: partitionSet", "DEL SimpleName: Set", "DEL SimpleType: Set", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL SimpleType: String", "DEL SimpleName: String", "DEL ClassInstanceCreation", "DEL SimpleType: HashSet", "DEL ParameterizedType: HashSet<String>", "DEL VariableDeclarationStatement", "DEL SimpleName: HashSet", "DEL SimpleType: String"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: getMapFields", "DEL MethodInvocation", "DEL SimpleName: addAll", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: keySet", "DEL SimpleName: partitionSet", "DEL ExpressionStatement", "DEL SimpleName: newIdealStateRecord"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: getListFields", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: partitionSet", "DEL MethodInvocation", "DEL SimpleName: keySet", "DEL SimpleName: newIdealStateRecord", "DEL SimpleName: addAll", "DEL ExpressionStatement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: String", "DEL SimpleName: Map", "DEL SimpleName: String", "DEL StringLiteral: \"reversePartitionIndex\"", "DEL SimpleName: reversePartitionIndex", "DEL SimpleType: String", "DEL CastExpression", "DEL SimpleName: Map", "DEL ParameterizedType: Map<String,String>", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL SimpleName: get", "DEL ParameterizedType: Map<String,String>", "DEL SimpleType: Map", "DEL SimpleName: balancedRecord", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: String", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleType: Map"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL SimpleName: partition", "DEL MethodInvocation", "DEL SimpleName: newIdealStateRecord", "DEL SimpleName: partition", "DEL ContinueStatement", "DEL SimpleName: reversePartitionIndex", "DEL ExpressionStatement", "DEL SimpleName: partitionSet", "DEL MethodInvocation", "DEL SimpleName: partition", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL SimpleName: partition", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getMapFields", "DEL Block", "DEL SimpleName: containsKey", "DEL SimpleName: put", "DEL Block", "DEL SimpleName: getListFields", "DEL MethodInvocation", "DEL SimpleName: originPartitionName", "DEL ExpressionStatement", "DEL SimpleName: getListFields", "DEL SimpleType: String", "DEL SimpleName: partition", "DEL Block", "DEL SimpleName: newIdealStateRecord", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL SimpleName: partition", "DEL MethodInvocation", "DEL SimpleName: originPartitionName", "DEL SimpleName: newIdealStateRecord", "DEL SimpleName: String", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: getMapField", "DEL SimpleName: partition", "DEL SimpleName: getMapFields", "DEL ExpressionStatement", "DEL SimpleName: reversePartitionIndex", "DEL SimpleName: originPartitionName", "DEL SimpleName: getListField", "DEL MethodInvocation", "DEL SimpleName: remove", "DEL SimpleName: remove", "DEL SimpleName: newIdealStateRecord", "DEL SimpleName: String", "DEL MethodInvocation", "DEL MethodInvocation", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: newIdealStateRecord", "DEL SimpleName: put", "DEL SimpleName: newIdealStateRecord", "DEL SimpleName: get", "DEL IfStatement", "DEL SimpleName: equals", "DEL SimpleName: partition", "DEL SimpleName: originPartitionName"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL SimpleName: putAll", "operations": ["DEL SimpleName: putAll"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getRecord", "DEL MethodInvocation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: newIdealStateRecord", "DEL SimpleName: IdealState", "DEL SimpleType: IdealState", "DEL ReturnStatement"]}, {"root": "DEL Modifier: static", "operations": ["DEL Modifier: static"]}, {"root": "DEL ParameterizedType: Map<String,Object>", "operations": ["DEL SimpleName: Map", "DEL SimpleName: String", "DEL SimpleType: String", "DEL ParameterizedType: Map<String,Object>", "DEL SimpleType: Object", "DEL SimpleName: Object", "DEL SimpleType: Map"]}, {"root": "DEL SimpleName: put", "operations": ["DEL SimpleName: put"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL InfixExpression: +", "DEL StringLiteral: \"_\"", "DEL MethodInvocation", "DEL SimpleName: i"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: partitions", "DEL SimpleName: get", "DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL SimpleType: String", "DEL SimpleName: String", "DEL ClassInstanceCreation", "DEL SimpleName: TreeMap", "DEL MethodInvocation", "DEL SimpleName: nodeMasterAssignmentMap", "DEL SimpleName: String", "DEL SimpleType: ArrayList", "DEL SimpleType: String", "DEL Block", "DEL SimpleName: String", "DEL MethodInvocation", "DEL SimpleName: Integer", "DEL SimpleType: TreeMap", "DEL SimpleName: partitionIndex", "DEL VariableDeclarationStatement", "DEL SimpleType: Map", "DEL SimpleName: partitionId", "DEL BooleanLiteral: false", "DEL SimpleType: String", "DEL Block", "DEL SimpleType: List", "DEL SimpleName: put", "DEL SimpleType: HashMap", "DEL VariableDeclarationExpression", "DEL SimpleName: get", "DEL VariableDeclarationFragment", "DEL SimpleName: get", "DEL SimpleType: Integer", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: Object", "DEL VariableDeclarationFragment", "DEL SimpleType: String", "DEL SimpleName: partitions", "DEL MethodInvocation", "DEL SimpleName: containsKey", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: master", "DEL SimpleType: TreeMap", "DEL SimpleName: Integer", "DEL SimpleName: nodeMasterAssignmentMap", "DEL Block", "DEL SimpleType: List", "DEL PostfixExpression: ++", "DEL SimpleName: partitionIndex", "DEL InfixExpression: <", "DEL SimpleName: reversePartitionIndex", "DEL SimpleName: partition", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: result", "DEL InfixExpression: <", "DEL ExpressionStatement", "DEL SimpleName: clear", "DEL SimpleType: Map", "DEL PrimitiveType: int", "DEL CatchClause", "DEL ExpressionStatement", "DEL TryStatement", "DEL EnhancedForStatement", "DEL SimpleName: slaveMap", "DEL SimpleName: i", "DEL SimpleName: Map", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: partitionId", "DEL SimpleName: lastPos", "DEL ClassInstanceCreation", "DEL ParameterizedType: Map<String,List<Integer>>", "DEL VariableDeclarationStatement", "DEL SimpleName: List", "DEL SimpleName: lastPos", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL SimpleType: TreeMap", "DEL ParameterizedType: List<Integer>", "DEL SimpleName: add", "DEL SimpleName: Map", "DEL SimpleName: size", "DEL ParameterizedType: ArrayList<String>", "DEL SimpleType: Map", "DEL SimpleName: String", "DEL SimpleType: Integer", "DEL SimpleType: Map", "DEL SimpleName: partitionIndex", "DEL SimpleName: partition", "DEL SimpleName: size", "DEL MethodInvocation", "DEL SimpleName: state", "DEL SimpleType: String", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL SimpleName: Map", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: result", "DEL SimpleType: List", "DEL SimpleName: master", "DEL SimpleType: ArrayList", "DEL SimpleName: String", "DEL SimpleType: Integer", "DEL VariableDeclarationFragment", "DEL SimpleName: parseInt", "DEL SimpleName: result", "DEL SimpleName: getReplicas", "DEL MethodInvocation", "DEL SimpleName: Integer", "DEL MethodInvocation", "DEL SimpleName: state", "DEL SimpleName: partitions", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: lastIndexOf", "DEL SimpleName: Integer", "DEL SimpleName: HashMap", "DEL ParameterizedType: ArrayList<Integer>", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: get", "DEL VariableDeclarationStatement", "DEL SimpleName: Integer", "DEL ParameterizedType: List<String>", "DEL SimpleName: master", "DEL SimpleName: partition", "DEL ClassInstanceCreation", "DEL SimpleName: Collections", "DEL SimpleName: state", "DEL SimpleType: Map", "DEL SimpleName: put", "DEL VariableDeclarationFragment", "DEL SimpleName: put", "DEL SimpleName: put", "DEL SimpleName: instance", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL SimpleName: instances", "DEL SimpleType: Integer", "DEL SimpleType: ArrayList", "DEL MethodInvocation", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL SimpleType: String", "DEL SimpleName: put", "DEL SimpleName: String", "DEL BreakStatement", "DEL BreakStatement", "DEL Assignment: =", "DEL VariableDeclarationStatement", "DEL SimpleName: put", "DEL SimpleName: sort", "DEL SimpleType: Map", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: List", "DEL SimpleName: nodeMasterAssignmentMap", "DEL SimpleName: put", "DEL SimpleName: state", "DEL SimpleName: partitions", "DEL SimpleName: i", "DEL SimpleType: Exception", "DEL SimpleName: instance", "DEL SimpleName: String", "DEL SimpleName: partitionIndex", "DEL IfStatement", "DEL SimpleName: add", "DEL SimpleName: instances", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL SimpleName: partitionId", "DEL ExpressionStatement", "DEL SimpleType: List", "DEL ExpressionStatement", "DEL SimpleName: Exception", "DEL BooleanLiteral: true", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SimpleName: HashMap", "DEL SimpleName: partitionId", "DEL SimpleType: Map", "DEL ParameterizedType: TreeMap<String,Object>", "DEL SimpleName: lastPos", "DEL SimpleName: i", "DEL ParameterizedType: List<Integer>", "DEL PrefixExpression: !", "DEL SimpleName: nodeMasterAssignmentMap", "DEL SimpleName: get", "DEL SimpleName: getPartitionSet", "DEL ParameterizedType: List<Integer>", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleType: String", "DEL ParameterizedType: Map<String,Map<String,List<Integer>>>", "DEL VariableDeclarationStatement", "DEL ParameterizedType: Map<String,Object>", "DEL ExpressionStatement", "DEL ParameterizedType: Map<String,String>", "DEL SimpleName: partitionIndex", "DEL SimpleName: indexInPartitionName", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleType: TreeMap", "DEL SimpleName: ArrayList", "DEL SimpleType: Integer", "DEL SimpleName: partitions", "DEL Block", "DEL SimpleName: getResourceName", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: get", "DEL StringLiteral: \"partitions\"", "DEL SimpleName: containsKey", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: nodeMasterAssignmentMap", "DEL SimpleName: partitionIndex", "DEL SimpleName: idStr", "DEL SimpleName: getPartitionSet", "DEL SimpleName: TreeMap", "DEL SimpleType: String", "DEL SimpleName: ArrayList", "DEL SimpleName: i", "DEL SimpleType: String", "DEL ParameterizedType: ArrayList<Integer>", "DEL MethodInvocation", "DEL SimpleName: List", "DEL SimpleName: combinedNodeSlaveAssignmentMap", "DEL SimpleName: Integer", "DEL SimpleName: Map", "DEL SimpleType: Integer", "DEL ParameterizedType: Map<String,List<Integer>>", "DEL SimpleName: String", "DEL IfStatement", "DEL SimpleName: String", "DEL ParameterizedType: List<String>", "DEL SimpleName: combinedNodeSlaveAssignmentMap", "DEL StringLiteral: \"_\"", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: addAll", "DEL SimpleName: Map", "DEL SimpleName: partition", "DEL MethodInvocation", "DEL SimpleName: String", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL SimpleName: instance", "DEL SimpleName: partition", "DEL InfixExpression: <", "DEL Block", "DEL BooleanLiteral: false", "DEL SimpleName: reversePartitionIndex", "DEL SimpleName: Integer", "DEL VariableDeclarationStatement", "DEL SimpleName: List", "DEL Block", "DEL SimpleName: Integer", "DEL SimpleName: state", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: Map", "DEL SimpleName: master", "DEL ParameterizedType: HashMap<String,Integer>", "DEL SimpleName: combinedNodeSlaveAssignmentMap", "DEL SimpleName: master", "DEL MethodInvocation", "DEL SimpleName: Integer", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleType: String", "DEL SimpleType: Map", "DEL SimpleName: state", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SimpleName: state", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL SimpleName: Integer", "DEL SimpleName: put", "DEL ExpressionStatement", "DEL SimpleName: indexInPartitionName", "DEL SimpleType: String", "DEL SimpleName: Integer", "DEL SimpleName: i", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL ParameterizedType: TreeMap<String,List<Integer>>", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL SimpleName: Map", "DEL SimpleName: instances", "DEL SimpleName: String", "DEL SimpleName: instances", "DEL SimpleName: substring", "DEL SimpleName: size", "DEL SimpleName: getRecord", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: List", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: result", "DEL SimpleName: i", "DEL SimpleName: combinedNodeSlaveAssignmentMap", "DEL InfixExpression: ==", "DEL ForStatement", "DEL SimpleName: partitions", "DEL SimpleName: get", "DEL SimpleName: master", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: slaveMap", "DEL SimpleType: Integer", "DEL SimpleName: String", "DEL ParameterizedType: Map<String,List<Integer>>", "DEL MethodInvocation", "DEL SimpleName: Map", "DEL PrefixExpression: !", "DEL SimpleName: String", "DEL SimpleType: List", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"reversePartitionIndex\"", "DEL SimpleName: reversePartitionIndex", "DEL SimpleName: put", "DEL SimpleType: Integer", "DEL SimpleName: TreeMap", "DEL SimpleName: idStr", "DEL SimpleName: getListField", "DEL SimpleName: clear", "DEL SimpleName: ArrayList", "DEL ParameterizedType: Map<String,List<Integer>>", "DEL SimpleType: List", "DEL SimpleName: Integer", "DEL ParameterizedType: HashMap<String,String>", "DEL IfStatement", "DEL VariableDeclarationStatement", "DEL SimpleType: Object", "DEL SimpleName: put", "DEL MethodInvocation", "DEL SimpleName: containsKey", "DEL InfixExpression: +", "DEL ParameterizedType: TreeMap<String,List<Integer>>", "DEL ClassInstanceCreation", "DEL SimpleType: String", "DEL SimpleName: String", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: partitionId", "DEL SimpleName: master", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: result", "DEL SimpleType: String", "DEL SimpleName: partition", "DEL SimpleType: Object", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL VariableDeclarationExpression", "DEL SimpleName: List", "DEL SimpleType: List", "DEL ParameterizedType: List<Integer>", "DEL SimpleName: get", "DEL SimpleName: slaveMap", "DEL VariableDeclarationStatement", "DEL ParameterizedType: Map<String,Integer>", "DEL MethodInvocation", "DEL SimpleType: String", "DEL ClassInstanceCreation", "DEL SimpleName: String", "DEL SimpleName: partition", "DEL ParameterizedType: TreeMap<String,Map<String,List<Integer>>>", "DEL SimpleName: result", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleType: List", "DEL SimpleType: Integer", "DEL SimpleType: String", "DEL SimpleName: getListFields", "DEL ParameterizedType: List<Integer>", "DEL MethodInvocation", "DEL ParameterizedType: List<Integer>", "DEL SimpleName: combinedNodeSlaveAssignmentMap", "DEL SimpleName: Integer", "DEL SimpleName: List", "DEL StringLiteral: \"MasterAssignmentMap\"", "DEL SimpleName: i", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: getPartitionSet", "DEL Assignment: =", "DEL SimpleName: indexInPartitionName", "DEL PrimitiveType: int", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL NumberLiteral: 0", "DEL SimpleName: slaveMap", "DEL SimpleName: parseInt", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: String", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: indexInPartitionName", "DEL SimpleName: result", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL SimpleName: List", "DEL Block", "DEL SimpleName: i", "DEL SimpleName: String", "DEL SimpleType: HashMap", "DEL SimpleName: String", "DEL StringLiteral: \"SlaveAssignmentMap\"", "DEL SimpleName: put", "DEL SimpleName: reversePartitionIndex", "DEL SimpleType: Integer", "DEL SimpleName: instance", "DEL PostfixExpression: ++", "DEL SimpleName: TreeMap", "DEL SimpleName: String", "DEL BooleanLiteral: false", "DEL SimpleName: getRecord", "DEL PrimitiveType: boolean", "DEL MethodInvocation", "DEL StringLiteral: \"replicas\"", "DEL VariableDeclarationStatement", "DEL SimpleType: Integer", "DEL StringLiteral: \"_\"", "DEL ForStatement", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL NumberLiteral: 1", "DEL SimpleType: String", "DEL SimpleName: Object", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: List", "DEL SimpleName: getInstancesInCluster", "DEL SimpleName: InstanceNames", "DEL SimpleName: List", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: _admin", "DEL SimpleName: clusterName", "DEL ParameterizedType: List<String>", "DEL SimpleType: String", "DEL SimpleName: String", "DEL VariableDeclarationFragment"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: Collections", "DEL SimpleName: sort", "DEL SimpleName: InstanceNames", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: resourceName", "DEL SimpleName: getResourceIdealState", "DEL SimpleType: IdealState", "DEL SimpleName: clusterName", "DEL VariableDeclarationFragment", "DEL SimpleName: _admin", "DEL SimpleName: IdealState", "DEL SimpleName: idealState", "DEL MethodInvocation", "DEL VariableDeclarationStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: idealState", "DEL SimpleType: HelixException", "DEL ThrowStatement", "DEL InfixExpression: ==", "DEL Block", "DEL SimpleName: HelixException", "DEL SimpleName: resourceName", "DEL StringLiteral: \" has NOT been added yet\"", "DEL ClassInstanceCreation", "DEL InfixExpression: +", "DEL IfStatement", "DEL NullLiteral", "DEL StringLiteral: \"Resource: \""]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: setReplicas", "DEL MethodInvocation", "DEL SimpleName: replica", "DEL SimpleName: Integer", "DEL SimpleName: toString", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: idealState"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: idealState", "DEL MethodInvocation", "DEL SimpleName: getNumPartitions", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement", "DEL SimpleName: partitions"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: String", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: stateModelName", "DEL SimpleName: idealState", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL SimpleName: getStateModelDefRef"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: StateModelDefinition", "DEL MethodInvocation", "DEL SimpleName: stateModelName", "DEL SimpleType: StateModelDefinition", "DEL SimpleName: getStateModelDef", "DEL SimpleName: clusterName", "DEL SimpleName: stateModDef", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: _admin"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: stateModelName", "DEL SimpleName: HelixException", "DEL NullLiteral", "DEL ClassInstanceCreation", "DEL StringLiteral: \"cannot find state model: \"", "DEL SimpleName: stateModDef", "DEL ThrowStatement", "DEL InfixExpression: ==", "DEL IfStatement", "DEL Block", "DEL SimpleType: HelixException", "DEL InfixExpression: +"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL SimpleName: statePriorityList", "DEL SimpleName: getStatesPriorityList", "DEL SimpleName: List", "DEL SimpleType: List", "DEL VariableDeclarationFragment", "DEL ParameterizedType: List<String>", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: stateModDef"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL NullLiteral", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL SimpleType: String", "DEL VariableDeclarationStatement", "DEL SimpleName: masterStateValue"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: String", "DEL SimpleName: slaveStateValue", "DEL VariableDeclarationFragment", "DEL NullLiteral", "DEL SimpleType: String", "DEL VariableDeclarationStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: replica", "DEL PostfixExpression: --", "DEL ExpressionStatement"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL InfixExpression: -", "DEL SimpleName: count", "DEL InfixExpression: !=", "DEL StringLiteral: \"1\"", "DEL ThrowStatement", "DEL SimpleName: String", "DEL SimpleName: state", "DEL ThrowStatement", "DEL SimpleName: replica", "DEL SimpleName: state", "DEL Assignment: =", "DEL Block", "DEL IfStatement", "DEL SimpleName: slaveStateValue", "DEL IfStatement", "DEL NullLiteral", "DEL MethodInvocation", "DEL StringLiteral: \"N\"", "DEL MethodInvocation", "DEL Block", "DEL SimpleType: HelixException", "DEL Block", "DEL NullLiteral", "DEL ClassInstanceCreation", "DEL SimpleName: slaveStateValue", "DEL MethodInvocation", "DEL SimpleType: HelixException", "DEL ExpressionStatement", "DEL SimpleName: stateModDef", "DEL VariableDeclarationStatement", "DEL SimpleName: masterStateValue", "DEL ExpressionStatement", "DEL SimpleName: masterStateValue", "DEL PrefixExpression: !", "DEL SimpleType: HelixException", "DEL SimpleName: getNumInstancesPerState", "DEL ParenthesizedExpression", "DEL SimpleName: count", "DEL SimpleName: equalsIgnoreCase", "DEL Block", "DEL SimpleName: InstanceNames", "DEL SimpleName: slaveStateValue", "DEL ExpressionStatement", "DEL InfixExpression: !=", "DEL SimpleName: HelixException", "DEL Assignment: =", "DEL Block", "DEL IfStatement", "DEL SimpleName: statePriorityList", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: equals", "DEL Assignment: =", "DEL NumberLiteral: 1", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: count", "DEL ClassInstanceCreation", "DEL SimpleName: slaveStateValue", "DEL InfixExpression: &&", "DEL SimpleName: state", "DEL SimpleName: state", "DEL IfStatement", "DEL SimpleName: HelixException", "DEL SimpleName: count", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL SimpleName: masterStateValue", "DEL SimpleType: String", "DEL InfixExpression: ==", "DEL StringLiteral: \"Invalid or unsupported state model definition\"", "DEL SimpleType: String", "DEL SimpleName: state", "DEL NullLiteral", "DEL SimpleName: size", "DEL SimpleName: String", "DEL Block", "DEL IfStatement", "DEL SimpleName: HelixException", "DEL SimpleName: masterStateValue", "DEL SimpleName: equalsIgnoreCase", "DEL IfStatement", "DEL StringLiteral: \"Invalid or unsupported state model definition\"", "DEL ExpressionStatement", "DEL EnhancedForStatement", "DEL StringLiteral: \"R\"", "DEL NullLiteral", "DEL ThrowStatement", "DEL StringLiteral: \"Invalid or unsupported state model definition\""]}, {"root": "DEL IfStatement", "operations": ["DEL InfixExpression: ==", "DEL SimpleName: masterStateValue", "DEL InfixExpression: &&", "DEL NullLiteral", "DEL Block", "DEL SimpleType: HelixException", "DEL SimpleName: slaveStateValue", "DEL SimpleName: HelixException", "DEL ClassInstanceCreation", "DEL InfixExpression: ==", "DEL IfStatement", "DEL NullLiteral", "DEL StringLiteral: \"Invalid or unsupported state model definition\"", "DEL ThrowStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: masterStateValue", "DEL InfixExpression: ==", "DEL NullLiteral", "DEL SimpleName: slaveStateValue", "DEL Assignment: =", "DEL SimpleName: masterStateValue", "DEL IfStatement", "DEL Block", "DEL ExpressionStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: IdealStateCalculatorForStorageNode", "DEL SimpleType: HashMap", "DEL SimpleName: setListField", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: getIdealStateMode", "DEL IfStatement", "DEL SimpleType: String", "DEL SimpleName: partitionName", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: InstanceNames", "DEL SimpleName: i", "DEL InfixExpression: ==", "DEL SimpleName: idealState", "DEL SimpleName: keyPrefix", "DEL SimpleName: idealState", "DEL SimpleName: idealState", "DEL SimpleName: HashMap", "DEL SimpleName: idealState", "DEL SimpleType: ArrayList", "DEL IfStatement", "DEL SimpleName: calculateIdealState", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: idealState", "DEL SimpleName: keyPrefix", "DEL InfixExpression: !=", "DEL SimpleName: idealState", "DEL QualifiedName: IdealStateModeProperty.AUTO_REBALANCE", "DEL SimpleName: String", "DEL ForStatement", "DEL InfixExpression: <", "DEL SimpleName: newIdealState", "DEL IfStatement", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL SimpleName: setListFields", "DEL SimpleName: getRecord", "DEL SimpleName: idealState", "DEL SimpleName: partitions", "DEL MethodInvocation", "DEL SimpleName: getRecord", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: partitions", "DEL SimpleName: ArrayList", "DEL VariableDeclarationFragment", "DEL SimpleName: setMapField", "DEL SimpleName: i", "DEL Block", "DEL StringLiteral: \"_\"", "DEL SimpleName: partitionName", "DEL SimpleName: getMapFields", "DEL SimpleName: getIdealStateMode", "DEL SimpleName: newIdealState", "DEL QualifiedName: IdealStateModeProperty.CUSTOMIZED", "DEL SimpleName: masterStateValue", "DEL SimpleName: getMapFields", "DEL SimpleName: ZNRecord", "DEL PostfixExpression: ++", "DEL PrimitiveType: int", "DEL SimpleName: replica", "DEL SimpleName: getListFields", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: i", "DEL VariableDeclarationExpression", "DEL SimpleName: getRecord", "DEL Block", "DEL ParameterizedType: HashMap<String,String>", "DEL MethodInvocation", "DEL SimpleName: setMapFields", "DEL SimpleName: String", "DEL MethodInvocation", "DEL SimpleName: slaveStateValue", "DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: getIdealStateMode", "DEL SimpleName: newIdealState", "DEL SimpleType: ZNRecord", "DEL ParameterizedType: ArrayList<String>", "DEL MethodInvocation", "DEL SimpleType: String", "DEL QualifiedName: IdealStateModeProperty.AUTO", "DEL NumberLiteral: 0", "DEL SimpleName: i", "DEL ExpressionStatement", "DEL SimpleName: getRecord", "DEL MethodInvocation", "DEL SimpleName: newIdealState", "DEL ExpressionStatement", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: partitionName", "DEL SimpleName: setMapFields", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: getRecord", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: idealState"]}]}}, {"ClusterSetup_diff": {"operations": ["Insert PrimitiveType: void(1854) into MethodDeclaration(1883) at 1", "Update Modifier: public(2314) to private", "Insert PrimitiveType: void(1885) into MethodDeclaration(1910) at 1", "Update SimpleName: buildInternalIdealState(2323) to rebalanceResource", "Move SingleVariableDeclaration(1873) into MethodDeclaration(1910) at 5", "Insert SingleVariableDeclaration(1901) into MethodDeclaration(1910) at 5", "Insert Block(1909) into MethodDeclaration(1910) at 6", "Update SimpleName: state(2326) to idealState", "Move ParameterizedType: List<String>(1926) into SingleVariableDeclaration(1901) at 0", "Insert SimpleName: instanceNames(1900) into SingleVariableDeclaration(1901) at 1", "Move ExpressionStatement(2516) into Block(1909) at 0", "Move MethodInvocation(1819) into ExpressionStatement(1817) at 0", "Update SimpleName: newIdealStateRecord(2296) to rebalanceResource", "Move SimpleName: newIdealStateRecord(2296) into MethodInvocation(1880) at 0", "Update SimpleName: getSimpleFields(2297) to clusterName", "Move SimpleName: getSimpleFields(2297) into MethodInvocation(1880) at 1", "Move SimpleName: idealState(2300) into MethodInvocation(1880) at 2", "Update SimpleName: getSimpleFields(2303) to instanceNames", "Move SimpleName: getSimpleFields(2303) into MethodInvocation(1880) at 3", "Update SimpleName: reversePartitionIndex(2503) to _admin", "Update SimpleName: state(2505) to rebalance", "Move SimpleName: state(2505) into MethodInvocation(1907) at 1", "Update SimpleName: getResourceName(2506) to clusterName", "Move SimpleName: getResourceName(2506) into MethodInvocation(1907) at 2", "Insert SimpleName: idealState(1905) into MethodInvocation(1907) at 3", "Update SimpleName: i(2513) to instanceNames", "Move SimpleName: i(2513) into MethodInvocation(1907) at 4", "Update SimpleName: setResourceIdealState(3155) to rebalance", "Update SimpleName: idealState(3158) to replica", "Delete SimpleName: IdealState(1813)", "Delete SimpleType: IdealState(1814)", "Delete SimpleName: newIdealState(1815)", "Delete VariableDeclarationFragment(1820)", "Delete VariableDeclarationStatement(1821)", "Delete SimpleName: _admin(1822)", "Delete SimpleName: setResourceIdealState(1823)", "Delete SimpleName: clusterName(1824)", "Delete SimpleName: resourceName(1825)", "Delete SimpleName: newIdealState(1826)", "Delete MethodInvocation(1827)", "Delete Modifier: public(1864)", "Delete SimpleName: String(1865)", "Delete SimpleType: String(1866)", "Delete Dimension(1867)", "Delete ArrayType: String[](1868)", "Delete SimpleName: parseStates(1869)", "Delete SimpleName: String(1874)", "Delete SimpleType: String(1875)", "Delete SimpleName: stateModelName(1876)", "Delete SingleVariableDeclaration(1877)", "Delete SimpleName: String(1878)", "Delete SimpleType: String(1879)", "Delete Dimension(1880)", "Delete ArrayType: String[](1881)", "Delete SimpleName: result(1882)", "Delete SimpleName: String(1883)", "Delete SimpleType: String(1884)", "Delete Dimension(1885)", "Delete ArrayType: String[](1886)", "Delete NumberLiteral: 2(1887)", "Delete ArrayCreation(1888)", "Delete VariableDeclarationFragment(1889)", "Delete VariableDeclarationStatement(1890)", "Delete SimpleName: String(1891)", "Delete SimpleType: String(1892)", "Delete SimpleName: masterStateValue(1893)", "Delete NullLiteral(1894)", "Delete VariableDeclarationFragment(1895)", "Delete SimpleName: slaveStateValue(1896)", "Delete NullLiteral(1897)", "Delete VariableDeclarationFragment(1898)", "Delete VariableDeclarationStatement(1899)", "Delete SimpleName: StateModelDefinition(1900)", "Delete SimpleType: StateModelDefinition(1901)", "Delete SimpleName: stateModDef(1902)", "Delete SimpleName: _admin(1903)", "Delete SimpleName: getStateModelDef(1904)", "Delete SimpleName: clusterName(1905)", "Delete SimpleName: stateModelName(1906)", "Delete MethodInvocation(1907)", "Delete VariableDeclarationFragment(1908)", "Delete VariableDeclarationStatement(1909)", "Delete SimpleName: stateModDef(1910)", "Delete NullLiteral(1911)", "Delete InfixExpression: ==(1912)", "Delete SimpleName: HelixException(1913)", "Delete SimpleType: HelixException(1914)", "Delete StringLiteral: \"cannot find state model: \"(1915)", "Delete SimpleName: stateModelName(1916)", "Delete InfixExpression: +(1917)", "Delete ClassInstanceCreation(1918)", "Delete ThrowStatement(1919)", "Delete Block(1920)", "Delete IfStatement(1921)", "Delete SimpleName: statePriorityList(1927)", "Delete SimpleName: stateModDef(1928)", "Delete SimpleName: getStatesPriorityList(1929)", "Delete MethodInvocation(1930)", "Delete VariableDeclarationFragment(1931)", "Delete VariableDeclarationStatement(1932)", "Delete SimpleName: String(1933)", "Delete SimpleType: String(1934)", "Delete SimpleName: state(1935)", "Delete SingleVariableDeclaration(1936)", "Delete SimpleName: statePriorityList(1937)", "Delete SimpleName: String(1938)", "Delete SimpleType: String(1939)", "Delete SimpleName: count(1940)", "Delete SimpleName: stateModDef(1941)", "Delete SimpleName: getNumInstancesPerState(1942)", "Delete SimpleName: state(1943)", "Delete MethodInvocation(1944)", "Delete VariableDeclarationFragment(1945)", "Delete VariableDeclarationStatement(1946)", "Delete SimpleName: count(1947)", "Delete SimpleName: equals(1948)", "Delete StringLiteral: \"1\"(1949)", "Delete MethodInvocation(1950)", "Delete SimpleName: masterStateValue(1951)", "Delete NullLiteral(1952)", "Delete InfixExpression: !=(1953)", "Delete SimpleName: HelixException(1954)", "Delete SimpleType: HelixException(1955)", "Delete StringLiteral: \"Invalid or unsupported state model definition\"(1956)", "Delete ClassInstanceCreation(1957)", "Delete ThrowStatement(1958)", "Delete Block(1959)", "Delete IfStatement(1960)", "Delete SimpleName: masterStateValue(1961)", "Delete SimpleName: state(1962)", "Delete Assignment: =(1963)", "Delete ExpressionStatement(1964)", "Delete Block(1965)", "Delete SimpleName: count(1966)", "Delete SimpleName: equalsIgnoreCase(1967)", "Delete StringLiteral: \"R\"(1968)", "Delete MethodInvocation(1969)", "Delete SimpleName: slaveStateValue(1970)", "Delete NullLiteral(1971)", "Delete InfixExpression: !=(1972)", "Delete SimpleName: HelixException(1973)", "Delete SimpleType: HelixException(1974)", "Delete StringLiteral: \"Invalid or unsupported state model definition\"(1975)", "Delete ClassInstanceCreation(1976)", "Delete ThrowStatement(1977)", "Delete Block(1978)", "Delete IfStatement(1979)", "Delete SimpleName: slaveStateValue(1980)", "Delete SimpleName: state(1981)", "Delete Assignment: =(1982)", "Delete ExpressionStatement(1983)", "Delete Block(1984)", "Delete SimpleName: count(1985)", "Delete SimpleName: equalsIgnoreCase(1986)", "Delete StringLiteral: \"N\"(1987)", "Delete MethodInvocation(1988)", "Delete SimpleName: masterStateValue(1989)", "Delete NullLiteral(1990)", "Delete InfixExpression: ==(1991)", "Delete SimpleName: slaveStateValue(1992)", "Delete NullLiteral(1993)", "Delete InfixExpression: ==(1994)", "Delete InfixExpression: &&(1995)", "Delete ParenthesizedExpression(1996)", "Delete PrefixExpression: !(1997)", "Delete SimpleName: HelixException(1998)", "Delete SimpleType: HelixException(1999)", "Delete StringLiteral: \"Invalid or unsupported state model definition\"(2000)", "Delete ClassInstanceCreation(2001)", "Delete ThrowStatement(2002)", "Delete Block(2003)", "Delete IfStatement(2004)", "Delete SimpleName: masterStateValue(2005)", "Delete SimpleName: slaveStateValue(2006)", "Delete SimpleName: state(2007)", "Delete Assignment: =(2008)", "Delete Assignment: =(2009)", "Delete ExpressionStatement(2010)", "Delete Block(2011)", "Delete IfStatement(2012)", "Delete IfStatement(2013)", "Delete IfStatement(2014)", "Delete Block(2015)", "Delete EnhancedForStatement(2016)", "Delete SimpleName: masterStateValue(2017)", "Delete NullLiteral(2018)", "Delete InfixExpression: ==(2019)", "Delete SimpleName: slaveStateValue(2020)", "Delete NullLiteral(2021)", "Delete InfixExpression: ==(2022)", "Delete InfixExpression: &&(2023)", "Delete SimpleName: HelixException(2024)", "Delete SimpleType: HelixException(2025)", "Delete StringLiteral: \"Invalid or unsupported state model definition\"(2026)", "Delete ClassInstanceCreation(2027)", "Delete ThrowStatement(2028)", "Delete Block(2029)", "Delete IfStatement(2030)", "Delete SimpleName: masterStateValue(2031)", "Delete NullLiteral(2032)", "Delete InfixExpression: ==(2033)", "Delete SimpleName: masterStateValue(2034)", "Delete SimpleName: slaveStateValue(2035)", "Delete Assignment: =(2036)", "Delete ExpressionStatement(2037)", "Delete Block(2038)", "Delete IfStatement(2039)", "Delete SimpleName: result(2040)", "Delete NumberLiteral: 0(2041)", "Delete ArrayAccess(2042)", "Delete SimpleName: masterStateValue(2043)", "Delete Assignment: =(2044)", "Delete ExpressionStatement(2045)", "Delete SimpleName: result(2046)", "Delete NumberLiteral: 1(2047)", "Delete ArrayAccess(2048)", "Delete SimpleName: slaveStateValue(2049)", "Delete Assignment: =(2050)", "Delete ExpressionStatement(2051)", "Delete SimpleName: result(2052)", "Delete ReturnStatement(2053)", "Delete Block(2054)", "Delete MethodDeclaration(2055)", "Delete SimpleName: IdealState(2057)", "Delete SimpleType: IdealState(2058)", "Delete SimpleName: Set(2080)", "Delete SimpleType: Set(2081)", "Delete SimpleName: String(2082)", "Delete SimpleType: String(2083)", "Delete ParameterizedType: Set<String>(2084)", "Delete SimpleName: activeInstances(2085)", "Delete SimpleName: HashSet(2086)", "Delete SimpleType: HashSet(2087)", "Delete SimpleName: String(2088)", "Delete SimpleType: String(2089)", "Delete ParameterizedType: HashSet<String>(2090)", "Delete ClassInstanceCreation(2091)", "Delete VariableDeclarationFragment(2092)", "Delete VariableDeclarationStatement(2093)", "Delete SimpleName: String(2094)", "Delete SimpleType: String(2095)", "Delete SimpleName: partition(2096)", "Delete SingleVariableDeclaration(2097)", "Delete SimpleName: idealState(2098)", "Delete SimpleName: getPartitionSet(2099)", "Delete MethodInvocation(2100)", "Delete SimpleName: activeInstances(2101)", "Delete SimpleName: addAll(2102)", "Delete SimpleName: idealState(2103)", "Delete SimpleName: getRecord(2104)", "Delete MethodInvocation(2105)", "Delete SimpleName: getListField(2106)", "Delete SimpleName: partition(2107)", "Delete MethodInvocation(2108)", "Delete MethodInvocation(2109)", "Delete ExpressionStatement(2110)", "Delete Block(2111)", "Delete EnhancedForStatement(2112)", "Delete SimpleName: instanceNames(2113)", "Delete SimpleName: removeAll(2114)", "Delete SimpleName: activeInstances(2115)", "Delete MethodInvocation(2116)", "Delete ExpressionStatement(2117)", "Delete SimpleName: Map(2118)", "Delete SimpleType: Map(2119)", "Delete SimpleName: String(2120)", "Delete SimpleType: String(2121)", "Delete SimpleName: Object(2122)", "Delete SimpleType: Object(2123)", "Delete ParameterizedType: Map<String,Object>(2124)", "Delete SimpleName: previousIdealState(2125)", "Delete SimpleName: buildInternalIdealState(2126)", "Delete SimpleName: idealState(2127)", "Delete MethodInvocation(2128)", "Delete VariableDeclarationFragment(2129)", "Delete VariableDeclarationStatement(2130)", "Delete SimpleName: Map(2131)", "Delete SimpleType: Map(2132)", "Delete SimpleName: String(2133)", "Delete SimpleType: String(2134)", "Delete SimpleName: Object(2135)", "Delete SimpleType: Object(2136)", "Delete ParameterizedType: Map<String,Object>(2137)", "Delete SimpleName: balancedRecord(2138)", "Delete SimpleName: IdealStateCalculatorForStorageNode(2139)", "Delete SimpleName: calculateNextIdealState(2140)", "Delete SimpleName: instanceNames(2141)", "Delete SimpleName: previousIdealState(2142)", "Delete MethodInvocation(2143)", "Delete VariableDeclarationFragment(2144)", "Delete VariableDeclarationStatement(2145)", "Delete SimpleName: String(2146)", "Delete SimpleType: String(2147)", "Delete Dimension(2148)", "Delete ArrayType: String[](2149)", "Delete SimpleName: states(2150)", "Delete SimpleName: parseStates(2151)", "Delete SimpleName: clusterName(2152)", "Delete SimpleName: idealState(2153)", "Delete SimpleName: getStateModelDefRef(2154)", "Delete MethodInvocation(2155)", "Delete MethodInvocation(2156)", "Delete VariableDeclarationFragment(2157)", "Delete VariableDeclarationStatement(2158)", "Delete SimpleName: ZNRecord(2159)", "Delete SimpleType: ZNRecord(2160)", "Delete SimpleName: newIdealStateRecord(2161)", "Delete SimpleName: IdealStateCalculatorForStorageNode(2162)", "Delete SimpleName: convertToZNRecord(2163)", "Delete SimpleName: balancedRecord(2164)", "Delete SimpleName: idealState(2165)", "Delete SimpleName: getResourceName(2166)", "Delete MethodInvocation(2167)", "Delete SimpleName: states(2168)", "Delete NumberLiteral: 0(2169)", "Delete ArrayAccess(2170)", "Delete SimpleName: states(2171)", "Delete NumberLiteral: 1(2172)", "Delete ArrayAccess(2173)", "Delete MethodInvocation(2174)", "Delete VariableDeclarationFragment(2175)", "Delete VariableDeclarationStatement(2176)", "Delete SimpleName: Set(2177)", "Delete SimpleType: Set(2178)", "Delete SimpleName: String(2179)", "Delete SimpleType: String(2180)", "Delete ParameterizedType: Set<String>(2181)", "Delete SimpleName: partitionSet(2182)", "Delete SimpleName: HashSet(2183)", "Delete SimpleType: HashSet(2184)", "Delete SimpleName: String(2185)", "Delete SimpleType: String(2186)", "Delete ParameterizedType: HashSet<String>(2187)", "Delete ClassInstanceCreation(2188)", "Delete VariableDeclarationFragment(2189)", "Delete VariableDeclarationStatement(2190)", "Delete SimpleName: partitionSet(2191)", "Delete SimpleName: addAll(2192)", "Delete SimpleName: newIdealStateRecord(2193)", "Delete SimpleName: getMapFields(2194)", "Delete MethodInvocation(2195)", "Delete SimpleName: keySet(2196)", "Delete MethodInvocation(2197)", "Delete MethodInvocation(2198)", "Delete ExpressionStatement(2199)", "Delete SimpleName: partitionSet(2200)", "Delete SimpleName: addAll(2201)", "Delete SimpleName: newIdealStateRecord(2202)", "Delete SimpleName: getListFields(2203)", "Delete MethodInvocation(2204)", "Delete SimpleName: keySet(2205)", "Delete MethodInvocation(2206)", "Delete MethodInvocation(2207)", "Delete ExpressionStatement(2208)", "Delete SimpleName: Map(2209)", "Delete SimpleType: Map(2210)", "Delete SimpleName: String(2211)", "Delete SimpleType: String(2212)", "Delete SimpleName: String(2213)", "Delete SimpleType: String(2214)", "Delete ParameterizedType: Map<String,String>(2215)", "Delete SimpleName: reversePartitionIndex(2216)", "Delete SimpleName: Map(2217)", "Delete SimpleType: Map(2218)", "Delete SimpleName: String(2219)", "Delete SimpleType: String(2220)", "Delete SimpleName: String(2221)", "Delete SimpleType: String(2222)", "Delete ParameterizedType: Map<String,String>(2223)", "Delete SimpleName: balancedRecord(2224)", "Delete SimpleName: get(2225)", "Delete StringLiteral: \"reversePartitionIndex\"(2226)", "Delete MethodInvocation(2227)", "Delete CastExpression(2228)", "Delete VariableDeclarationFragment(2229)", "Delete VariableDeclarationStatement(2230)", "Delete SimpleName: String(2231)", "Delete SimpleType: String(2232)", "Delete SimpleName: partition(2233)", "Delete SingleVariableDeclaration(2234)", "Delete SimpleName: partitionSet(2235)", "Delete SimpleName: reversePartitionIndex(2236)", "Delete SimpleName: containsKey(2237)", "Delete SimpleName: partition(2238)", "Delete MethodInvocation(2239)", "Delete SimpleName: String(2240)", "Delete SimpleType: String(2241)", "Delete SimpleName: originPartitionName(2242)", "Delete SimpleName: reversePartitionIndex(2243)", "Delete SimpleName: get(2244)", "Delete SimpleName: partition(2245)", "Delete MethodInvocation(2246)", "Delete VariableDeclarationFragment(2247)", "Delete VariableDeclarationStatement(2248)", "Delete SimpleName: partition(2249)", "Delete SimpleName: equals(2250)", "Delete SimpleName: originPartitionName(2251)", "Delete MethodInvocation(2252)", "Delete ContinueStatement(2253)", "Delete Block(2254)", "Delete IfStatement(2255)", "Delete SimpleName: newIdealStateRecord(2256)", "Delete SimpleName: getMapFields(2257)", "Delete MethodInvocation(2258)", "Delete SimpleName: put(2259)", "Delete SimpleName: originPartitionName(2260)", "Delete SimpleName: newIdealStateRecord(2261)", "Delete SimpleName: getMapField(2262)", "Delete SimpleName: partition(2263)", "Delete MethodInvocation(2264)", "Delete MethodInvocation(2265)", "Delete ExpressionStatement(2266)", "Delete SimpleName: newIdealStateRecord(2267)", "Delete SimpleName: getMapFields(2268)", "Delete MethodInvocation(2269)", "Delete SimpleName: remove(2270)", "Delete SimpleName: partition(2271)", "Delete MethodInvocation(2272)", "Delete ExpressionStatement(2273)", "Delete SimpleName: newIdealStateRecord(2274)", "Delete SimpleName: getListFields(2275)", "Delete MethodInvocation(2276)", "Delete SimpleName: put(2277)", "Delete SimpleName: originPartitionName(2278)", "Delete SimpleName: newIdealStateRecord(2279)", "Delete SimpleName: getListField(2280)", "Delete SimpleName: partition(2281)", "Delete MethodInvocation(2282)", "Delete MethodInvocation(2283)", "Delete ExpressionStatement(2284)", "Delete SimpleName: newIdealStateRecord(2285)", "Delete SimpleName: getListFields(2286)", "Delete MethodInvocation(2287)", "Delete SimpleName: remove(2288)", "Delete SimpleName: partition(2289)", "Delete MethodInvocation(2290)", "Delete ExpressionStatement(2291)", "Delete Block(2292)", "Delete IfStatement(2293)", "Delete Block(2294)", "Delete EnhancedForStatement(2295)", "Delete MethodInvocation(2298)", "Delete SimpleName: putAll(2299)", "Delete SimpleName: getRecord(2301)", "Delete MethodInvocation(2302)", "Delete MethodInvocation(2304)", "Delete SimpleName: IdealState(2307)", "Delete SimpleType: IdealState(2308)", "Delete SimpleName: newIdealStateRecord(2309)", "Delete ClassInstanceCreation(2310)", "Delete ReturnStatement(2311)", "Delete Modifier: static(2315)", "Delete SimpleName: Map(2316)", "Delete SimpleType: Map(2317)", "Delete SimpleName: String(2318)", "Delete SimpleType: String(2319)", "Delete SimpleName: Object(2320)", "Delete SimpleType: Object(2321)", "Delete ParameterizedType: Map<String,Object>(2322)", "Delete SimpleName: put(2504)", "Delete MethodInvocation(2507)", "Delete StringLiteral: \"_\"(2508)", "Delete SimpleName: i(2509)", "Delete InfixExpression: +(2510)", "Delete SimpleName: partitions(2511)", "Delete SimpleName: get(2512)", "Delete MethodInvocation(2514)", "Delete SimpleName: Map(2328)", "Delete SimpleType: Map(2329)", "Delete SimpleName: String(2330)", "Delete SimpleType: String(2331)", "Delete SimpleName: Integer(2332)", "Delete SimpleType: Integer(2333)", "Delete ParameterizedType: Map<String,Integer>(2334)", "Delete SimpleName: partitionIndex(2335)", "Delete SimpleName: HashMap(2336)", "Delete SimpleType: HashMap(2337)", "Delete SimpleName: String(2338)", "Delete SimpleType: String(2339)", "Delete SimpleName: Integer(2340)", "Delete SimpleType: Integer(2341)", "Delete ParameterizedType: HashMap<String,Integer>(2342)", "Delete ClassInstanceCreation(2343)", "Delete VariableDeclarationFragment(2344)", "Delete VariableDeclarationStatement(2345)", "Delete SimpleName: Map(2346)", "Delete SimpleType: Map(2347)", "Delete SimpleName: String(2348)", "Delete SimpleType: String(2349)", "Delete SimpleName: String(2350)", "Delete SimpleType: String(2351)", "Delete ParameterizedType: Map<String,String>(2352)", "Delete SimpleName: reversePartitionIndex(2353)", "Delete SimpleName: HashMap(2354)", "Delete SimpleType: HashMap(2355)", "Delete SimpleName: String(2356)", "Delete SimpleType: String(2357)", "Delete SimpleName: String(2358)", "Delete SimpleType: String(2359)", "Delete ParameterizedType: HashMap<String,String>(2360)", "Delete ClassInstanceCreation(2361)", "Delete VariableDeclarationFragment(2362)", "Delete VariableDeclarationStatement(2363)", "Delete PrimitiveType: boolean(2364)", "Delete SimpleName: indexInPartitionName(2365)", "Delete BooleanLiteral: true(2366)", "Delete VariableDeclarationFragment(2367)", "Delete VariableDeclarationStatement(2368)", "Delete SimpleName: String(2369)", "Delete SimpleType: String(2370)", "Delete SimpleName: partitionId(2371)", "Delete SingleVariableDeclaration(2372)", "Delete SimpleName: state(2373)", "Delete SimpleName: getPartitionSet(2374)", "Delete MethodInvocation(2375)", "Delete PrimitiveType: int(2376)", "Delete SimpleName: lastPos(2377)", "Delete SimpleName: partitionId(2378)", "Delete SimpleName: lastIndexOf(2379)", "Delete StringLiteral: \"_\"(2380)", "Delete MethodInvocation(2381)", "Delete VariableDeclarationFragment(2382)", "Delete VariableDeclarationStatement(2383)", "Delete SimpleName: lastPos(2384)", "Delete NumberLiteral: 0(2385)", "Delete InfixExpression: <(2386)", "Delete SimpleName: indexInPartitionName(2387)", "Delete BooleanLiteral: false(2388)", "Delete Assignment: =(2389)", "Delete ExpressionStatement(2390)", "Delete BreakStatement(2391)", "Delete Block(2392)", "Delete IfStatement(2393)", "Delete SimpleName: String(2394)", "Delete SimpleType: String(2395)", "Delete SimpleName: idStr(2396)", "Delete SimpleName: partitionId(2397)", "Delete SimpleName: substring(2398)", "Delete SimpleName: lastPos(2399)", "Delete NumberLiteral: 1(2400)", "Delete InfixExpression: +(2401)", "Delete MethodInvocation(2402)", "Delete VariableDeclarationFragment(2403)", "Delete VariableDeclarationStatement(2404)", "Delete PrimitiveType: int(2405)", "Delete SimpleName: partition(2406)", "Delete SimpleName: Integer(2407)", "Delete SimpleName: parseInt(2408)", "Delete SimpleName: idStr(2409)", "Delete MethodInvocation(2410)", "Delete VariableDeclarationFragment(2411)", "Delete VariableDeclarationStatement(2412)", "Delete SimpleName: partitionIndex(2413)", "Delete SimpleName: put(2414)", "Delete SimpleName: partitionId(2415)", "Delete SimpleName: partition(2416)", "Delete MethodInvocation(2417)", "Delete ExpressionStatement(2418)", "Delete SimpleName: reversePartitionIndex(2419)", "Delete SimpleName: put(2420)", "Delete SimpleName: state(2421)", "Delete SimpleName: getResourceName(2422)", "Delete MethodInvocation(2423)", "Delete StringLiteral: \"_\"(2424)", "Delete SimpleName: partition(2425)", "Delete InfixExpression: +(2426)", "Delete SimpleName: partitionId(2427)", "Delete MethodInvocation(2428)", "Delete ExpressionStatement(2429)", "Delete Block(2430)", "Delete SimpleName: Exception(2431)", "Delete SimpleType: Exception(2432)", "Delete SimpleName: e(2433)", "Delete SingleVariableDeclaration(2434)", "Delete SimpleName: indexInPartitionName(2435)", "Delete BooleanLiteral: false(2436)", "Delete Assignment: =(2437)", "Delete ExpressionStatement(2438)", "Delete SimpleName: partitionIndex(2439)", "Delete SimpleName: clear(2440)", "Delete MethodInvocation(2441)", "Delete ExpressionStatement(2442)", "Delete SimpleName: reversePartitionIndex(2443)", "Delete SimpleName: clear(2444)", "Delete MethodInvocation(2445)", "Delete ExpressionStatement(2446)", "Delete BreakStatement(2447)", "Delete Block(2448)", "Delete CatchClause(2449)", "Delete TryStatement(2450)", "Delete Block(2451)", "Delete EnhancedForStatement(2452)", "Delete SimpleName: indexInPartitionName(2453)", "Delete BooleanLiteral: false(2454)", "Delete InfixExpression: ==(2455)", "Delete SimpleName: List(2456)", "Delete SimpleType: List(2457)", "Delete SimpleName: String(2458)", "Delete SimpleType: String(2459)", "Delete ParameterizedType: List<String>(2460)", "Delete SimpleName: partitions(2461)", "Delete SimpleName: ArrayList(2462)", "Delete SimpleType: ArrayList(2463)", "Delete SimpleName: String(2464)", "Delete SimpleType: String(2465)", "Delete ParameterizedType: ArrayList<String>(2466)", "Delete ClassInstanceCreation(2467)", "Delete VariableDeclarationFragment(2468)", "Delete VariableDeclarationStatement(2469)", "Delete SimpleName: partitions(2470)", "Delete SimpleName: addAll(2471)", "Delete SimpleName: state(2472)", "Delete SimpleName: getPartitionSet(2473)", "Delete MethodInvocation(2474)", "Delete MethodInvocation(2475)", "Delete ExpressionStatement(2476)", "Delete SimpleName: Collections(2477)", "Delete SimpleName: sort(2478)", "Delete SimpleName: partitions(2479)", "Delete MethodInvocation(2480)", "Delete ExpressionStatement(2481)", "Delete PrimitiveType: int(2482)", "Delete SimpleName: i(2483)", "Delete NumberLiteral: 0(2484)", "Delete VariableDeclarationFragment(2485)", "Delete VariableDeclarationExpression(2486)", "Delete SimpleName: i(2487)", "Delete SimpleName: partitions(2488)", "Delete SimpleName: size(2489)", "Delete MethodInvocation(2490)", "Delete InfixExpression: <(2491)", "Delete SimpleName: i(2492)", "Delete PostfixExpression: ++(2493)", "Delete SimpleName: partitionIndex(2494)", "Delete SimpleName: put(2495)", "Delete SimpleName: partitions(2496)", "Delete SimpleName: get(2497)", "Delete SimpleName: i(2498)", "Delete MethodInvocation(2499)", "Delete SimpleName: i(2500)", "Delete MethodInvocation(2501)", "Delete ExpressionStatement(2502)", "Delete Block(2517)", "Delete ForStatement(2518)", "Delete Block(2519)", "Delete IfStatement(2520)", "Delete SimpleName: Map(2521)", "Delete SimpleType: Map(2522)", "Delete SimpleName: String(2523)", "Delete SimpleType: String(2524)", "Delete SimpleName: List(2525)", "Delete SimpleType: List(2526)", "Delete SimpleName: Integer(2527)", "Delete SimpleType: Integer(2528)", "Delete ParameterizedType: List<Integer>(2529)", "Delete ParameterizedType: Map<String,List<Integer>>(2530)", "Delete SimpleName: nodeMasterAssignmentMap(2531)", "Delete SimpleName: TreeMap(2532)", "Delete SimpleType: TreeMap(2533)", "Delete SimpleName: String(2534)", "Delete SimpleType: String(2535)", "Delete SimpleName: List(2536)", "Delete SimpleType: List(2537)", "Delete SimpleName: Integer(2538)", "Delete SimpleType: Integer(2539)", "Delete ParameterizedType: List<Integer>(2540)", "Delete ParameterizedType: TreeMap<String,List<Integer>>(2541)", "Delete ClassInstanceCreation(2542)", "Delete VariableDeclarationFragment(2543)", "Delete VariableDeclarationStatement(2544)", "Delete SimpleName: Map(2545)", "Delete SimpleType: Map(2546)", "Delete SimpleName: String(2547)", "Delete SimpleType: String(2548)", "Delete SimpleName: Map(2549)", "Delete SimpleType: Map(2550)", "Delete SimpleName: String(2551)", "Delete SimpleType: String(2552)", "Delete SimpleName: List(2553)", "Delete SimpleType: List(2554)", "Delete SimpleName: Integer(2555)", "Delete SimpleType: Integer(2556)", "Delete ParameterizedType: List<Integer>(2557)", "Delete ParameterizedType: Map<String,List<Integer>>(2558)", "Delete ParameterizedType: Map<String,Map<String,List<Integer>>>(2559)", "Delete SimpleName: combinedNodeSlaveAssignmentMap(2560)", "Delete SimpleName: TreeMap(2561)", "Delete SimpleType: TreeMap(2562)", "Delete SimpleName: String(2563)", "Delete SimpleType: String(2564)", "Delete SimpleName: Map(2565)", "Delete SimpleType: Map(2566)", "Delete SimpleName: String(2567)", "Delete SimpleType: String(2568)", "Delete SimpleName: List(2569)", "Delete SimpleType: List(2570)", "Delete SimpleName: Integer(2571)", "Delete SimpleType: Integer(2572)", "Delete ParameterizedType: List<Integer>(2573)", "Delete ParameterizedType: Map<String,List<Integer>>(2574)", "Delete ParameterizedType: TreeMap<String,Map<String,List<Integer>>>(2575)", "Delete ClassInstanceCreation(2576)", "Delete VariableDeclarationFragment(2577)", "Delete VariableDeclarationStatement(2578)", "Delete SimpleName: String(2579)", "Delete SimpleType: String(2580)", "Delete SimpleName: partition(2581)", "Delete SingleVariableDeclaration(2582)", "Delete SimpleName: state(2583)", "Delete SimpleName: getPartitionSet(2584)", "Delete MethodInvocation(2585)", "Delete SimpleName: List(2586)", "Delete SimpleType: List(2587)", "Delete SimpleName: String(2588)", "Delete SimpleType: String(2589)", "Delete ParameterizedType: List<String>(2590)", "Delete SimpleName: instances(2591)", "Delete SimpleName: state(2592)", "Delete SimpleName: getRecord(2593)", "Delete MethodInvocation(2594)", "Delete SimpleName: getListField(2595)", "Delete SimpleName: partition(2596)", "Delete MethodInvocation(2597)", "Delete VariableDeclarationFragment(2598)", "Delete VariableDeclarationStatement(2599)", "Delete SimpleName: String(2600)", "Delete SimpleType: String(2601)", "Delete SimpleName: master(2602)", "Delete SimpleName: instances(2603)", "Delete SimpleName: get(2604)", "Delete NumberLiteral: 0(2605)", "Delete MethodInvocation(2606)", "Delete VariableDeclarationFragment(2607)", "Delete VariableDeclarationStatement(2608)", "Delete SimpleName: nodeMasterAssignmentMap(2609)", "Delete SimpleName: containsKey(2610)", "Delete SimpleName: master(2611)", "Delete MethodInvocation(2612)", "Delete PrefixExpression: !(2613)", "Delete SimpleName: nodeMasterAssignmentMap(2614)", "Delete SimpleName: put(2615)", "Delete SimpleName: master(2616)", "Delete SimpleName: ArrayList(2617)", "Delete SimpleType: ArrayList(2618)", "Delete SimpleName: Integer(2619)", "Delete SimpleType: Integer(2620)", "Delete ParameterizedType: ArrayList<Integer>(2621)", "Delete ClassInstanceCreation(2622)", "Delete MethodInvocation(2623)", "Delete ExpressionStatement(2624)", "Delete Block(2625)", "Delete IfStatement(2626)", "Delete SimpleName: combinedNodeSlaveAssignmentMap(2627)", "Delete SimpleName: containsKey(2628)", "Delete SimpleName: master(2629)", "Delete MethodInvocation(2630)", "Delete PrefixExpression: !(2631)", "Delete SimpleName: combinedNodeSlaveAssignmentMap(2632)", "Delete SimpleName: put(2633)", "Delete SimpleName: master(2634)", "Delete SimpleName: TreeMap(2635)", "Delete SimpleType: TreeMap(2636)", "Delete SimpleName: String(2637)", "Delete SimpleType: String(2638)", "Delete SimpleName: List(2639)", "Delete SimpleType: List(2640)", "Delete SimpleName: Integer(2641)", "Delete SimpleType: Integer(2642)", "Delete ParameterizedType: List<Integer>(2643)", "Delete ParameterizedType: TreeMap<String,List<Integer>>(2644)", "Delete ClassInstanceCreation(2645)", "Delete MethodInvocation(2646)", "Delete ExpressionStatement(2647)", "Delete Block(2648)", "Delete IfStatement(2649)", "Delete SimpleName: nodeMasterAssignmentMap(2650)", "Delete SimpleName: get(2651)", "Delete SimpleName: master(2652)", "Delete MethodInvocation(2653)", "Delete SimpleName: add(2654)", "Delete SimpleName: partitionIndex(2655)", "Delete SimpleName: get(2656)", "Delete SimpleName: partition(2657)", "Delete MethodInvocation(2658)", "Delete MethodInvocation(2659)", "Delete ExpressionStatement(2660)", "Delete PrimitiveType: int(2661)", "Delete SimpleName: i(2662)", "Delete NumberLiteral: 1(2663)", "Delete VariableDeclarationFragment(2664)", "Delete VariableDeclarationExpression(2665)", "Delete SimpleName: i(2666)", "Delete SimpleName: instances(2667)", "Delete SimpleName: size(2668)", "Delete MethodInvocation(2669)", "Delete InfixExpression: <(2670)", "Delete SimpleName: i(2671)", "Delete PostfixExpression: ++(2672)", "Delete SimpleName: String(2673)", "Delete SimpleType: String(2674)", "Delete SimpleName: instance(2675)", "Delete SimpleName: instances(2676)", "Delete SimpleName: get(2677)", "Delete SimpleName: i(2678)", "Delete MethodInvocation(2679)", "Delete VariableDeclarationFragment(2680)", "Delete VariableDeclarationStatement(2681)", "Delete SimpleName: Map(2682)", "Delete SimpleType: Map(2683)", "Delete SimpleName: String(2684)", "Delete SimpleType: String(2685)", "Delete SimpleName: List(2686)", "Delete SimpleType: List(2687)", "Delete SimpleName: Integer(2688)", "Delete SimpleType: Integer(2689)", "Delete ParameterizedType: List<Integer>(2690)", "Delete ParameterizedType: Map<String,List<Integer>>(2691)", "Delete SimpleName: slaveMap(2692)", "Delete SimpleName: combinedNodeSlaveAssignmentMap(2693)", "Delete SimpleName: get(2694)", "Delete SimpleName: master(2695)", "Delete MethodInvocation(2696)", "Delete VariableDeclarationFragment(2697)", "Delete VariableDeclarationStatement(2698)", "Delete SimpleName: slaveMap(2699)", "Delete SimpleName: containsKey(2700)", "Delete SimpleName: instance(2701)", "Delete MethodInvocation(2702)", "Delete PrefixExpression: !(2703)", "Delete SimpleName: slaveMap(2704)", "Delete SimpleName: put(2705)", "Delete SimpleName: instance(2706)", "Delete SimpleName: ArrayList(2707)", "Delete SimpleType: ArrayList(2708)", "Delete SimpleName: Integer(2709)", "Delete SimpleType: Integer(2710)", "Delete ParameterizedType: ArrayList<Integer>(2711)", "Delete ClassInstanceCreation(2712)", "Delete MethodInvocation(2713)", "Delete ExpressionStatement(2714)", "Delete Block(2715)", "Delete IfStatement(2716)", "Delete SimpleName: slaveMap(2717)", "Delete SimpleName: get(2718)", "Delete SimpleName: instance(2719)", "Delete MethodInvocation(2720)", "Delete SimpleName: add(2721)", "Delete SimpleName: partitionIndex(2722)", "Delete SimpleName: get(2723)", "Delete SimpleName: partition(2724)", "Delete MethodInvocation(2725)", "Delete MethodInvocation(2726)", "Delete ExpressionStatement(2727)", "Delete Block(2728)", "Delete ForStatement(2729)", "Delete Block(2730)", "Delete EnhancedForStatement(2731)", "Delete SimpleName: Map(2732)", "Delete SimpleType: Map(2733)", "Delete SimpleName: String(2734)", "Delete SimpleType: String(2735)", "Delete SimpleName: Object(2736)", "Delete SimpleType: Object(2737)", "Delete ParameterizedType: Map<String,Object>(2738)", "Delete SimpleName: result(2739)", "Delete SimpleName: TreeMap(2740)", "Delete SimpleType: TreeMap(2741)", "Delete SimpleName: String(2742)", "Delete SimpleType: String(2743)", "Delete SimpleName: Object(2744)", "Delete SimpleType: Object(2745)", "Delete ParameterizedType: TreeMap<String,Object>(2746)", "Delete ClassInstanceCreation(2747)", "Delete VariableDeclarationFragment(2748)", "Delete VariableDeclarationStatement(2749)", "Delete SimpleName: result(2750)", "Delete SimpleName: put(2751)", "Delete StringLiteral: \"MasterAssignmentMap\"(2752)", "Delete SimpleName: nodeMasterAssignmentMap(2753)", "Delete MethodInvocation(2754)", "Delete ExpressionStatement(2755)", "Delete SimpleName: result(2756)", "Delete SimpleName: put(2757)", "Delete StringLiteral: \"SlaveAssignmentMap\"(2758)", "Delete SimpleName: combinedNodeSlaveAssignmentMap(2759)", "Delete MethodInvocation(2760)", "Delete ExpressionStatement(2761)", "Delete SimpleName: result(2762)", "Delete SimpleName: put(2763)", "Delete StringLiteral: \"replicas\"(2764)", "Delete SimpleName: Integer(2765)", "Delete SimpleName: parseInt(2766)", "Delete SimpleName: state(2767)", "Delete SimpleName: getReplicas(2768)", "Delete MethodInvocation(2769)", "Delete MethodInvocation(2770)", "Delete MethodInvocation(2771)", "Delete ExpressionStatement(2772)", "Delete SimpleName: result(2773)", "Delete SimpleName: put(2774)", "Delete StringLiteral: \"partitions\"(2775)", "Delete SimpleName: Integer(2776)", "Delete SimpleType: Integer(2777)", "Delete SimpleName: state(2778)", "Delete SimpleName: getRecord(2779)", "Delete MethodInvocation(2780)", "Delete SimpleName: getListFields(2781)", "Delete MethodInvocation(2782)", "Delete SimpleName: size(2783)", "Delete MethodInvocation(2784)", "Delete ClassInstanceCreation(2785)", "Delete MethodInvocation(2786)", "Delete ExpressionStatement(2787)", "Delete SimpleName: result(2788)", "Delete SimpleName: put(2789)", "Delete StringLiteral: \"reversePartitionIndex\"(2790)", "Delete SimpleName: reversePartitionIndex(2791)", "Delete MethodInvocation(2792)", "Delete ExpressionStatement(2793)", "Delete SimpleName: result(2794)", "Delete ReturnStatement(2795)", "Delete Block(2796)", "Delete SimpleName: List(2816)", "Delete SimpleType: List(2817)", "Delete SimpleName: String(2818)", "Delete SimpleType: String(2819)", "Delete ParameterizedType: List<String>(2820)", "Delete SimpleName: InstanceNames(2821)", "Delete SimpleName: _admin(2822)", "Delete SimpleName: getInstancesInCluster(2823)", "Delete SimpleName: clusterName(2824)", "Delete MethodInvocation(2825)", "Delete VariableDeclarationFragment(2826)", "Delete VariableDeclarationStatement(2827)", "Delete SimpleName: Collections(2828)", "Delete SimpleName: sort(2829)", "Delete SimpleName: InstanceNames(2830)", "Delete MethodInvocation(2831)", "Delete ExpressionStatement(2832)", "Delete SimpleName: IdealState(2833)", "Delete SimpleType: IdealState(2834)", "Delete SimpleName: idealState(2835)", "Delete SimpleName: _admin(2836)", "Delete SimpleName: getResourceIdealState(2837)", "Delete SimpleName: clusterName(2838)", "Delete SimpleName: resourceName(2839)", "Delete MethodInvocation(2840)", "Delete VariableDeclarationFragment(2841)", "Delete VariableDeclarationStatement(2842)", "Delete SimpleName: idealState(2843)", "Delete NullLiteral(2844)", "Delete InfixExpression: ==(2845)", "Delete SimpleName: HelixException(2846)", "Delete SimpleType: HelixException(2847)", "Delete StringLiteral: \"Resource: \"(2848)", "Delete SimpleName: resourceName(2849)", "Delete StringLiteral: \" has NOT been added yet\"(2850)", "Delete InfixExpression: +(2851)", "Delete ClassInstanceCreation(2852)", "Delete ThrowStatement(2853)", "Delete Block(2854)", "Delete IfStatement(2855)", "Delete SimpleName: idealState(2856)", "Delete SimpleName: setReplicas(2857)", "Delete SimpleName: Integer(2858)", "Delete SimpleName: toString(2859)", "Delete SimpleName: replica(2860)", "Delete MethodInvocation(2861)", "Delete MethodInvocation(2862)", "Delete ExpressionStatement(2863)", "Delete PrimitiveType: int(2864)", "Delete SimpleName: partitions(2865)", "Delete SimpleName: idealState(2866)", "Delete SimpleName: getNumPartitions(2867)", "Delete MethodInvocation(2868)", "Delete VariableDeclarationFragment(2869)", "Delete VariableDeclarationStatement(2870)", "Delete SimpleName: String(2871)", "Delete SimpleType: String(2872)", "Delete SimpleName: stateModelName(2873)", "Delete SimpleName: idealState(2874)", "Delete SimpleName: getStateModelDefRef(2875)", "Delete MethodInvocation(2876)", "Delete VariableDeclarationFragment(2877)", "Delete VariableDeclarationStatement(2878)", "Delete SimpleName: StateModelDefinition(2879)", "Delete SimpleType: StateModelDefinition(2880)", "Delete SimpleName: stateModDef(2881)", "Delete SimpleName: _admin(2882)", "Delete SimpleName: getStateModelDef(2883)", "Delete SimpleName: clusterName(2884)", "Delete SimpleName: stateModelName(2885)", "Delete MethodInvocation(2886)", "Delete VariableDeclarationFragment(2887)", "Delete VariableDeclarationStatement(2888)", "Delete SimpleName: stateModDef(2889)", "Delete NullLiteral(2890)", "Delete InfixExpression: ==(2891)", "Delete SimpleName: HelixException(2892)", "Delete SimpleType: HelixException(2893)", "Delete StringLiteral: \"cannot find state model: \"(2894)", "Delete SimpleName: stateModelName(2895)", "Delete InfixExpression: +(2896)", "Delete ClassInstanceCreation(2897)", "Delete ThrowStatement(2898)", "Delete Block(2899)", "Delete IfStatement(2900)", "Delete SimpleName: List(2901)", "Delete SimpleType: List(2902)", "Delete SimpleName: String(2903)", "Delete SimpleType: String(2904)", "Delete ParameterizedType: List<String>(2905)", "Delete SimpleName: statePriorityList(2906)", "Delete SimpleName: stateModDef(2907)", "Delete SimpleName: getStatesPriorityList(2908)", "Delete MethodInvocation(2909)", "Delete VariableDeclarationFragment(2910)", "Delete VariableDeclarationStatement(2911)", "Delete SimpleName: String(2912)", "Delete SimpleType: String(2913)", "Delete SimpleName: masterStateValue(2914)", "Delete NullLiteral(2915)", "Delete VariableDeclarationFragment(2916)", "Delete VariableDeclarationStatement(2917)", "Delete SimpleName: String(2918)", "Delete SimpleType: String(2919)", "Delete SimpleName: slaveStateValue(2920)", "Delete NullLiteral(2921)", "Delete VariableDeclarationFragment(2922)", "Delete VariableDeclarationStatement(2923)", "Delete SimpleName: replica(2924)", "Delete PostfixExpression: --(2925)", "Delete ExpressionStatement(2926)", "Delete SimpleName: String(2927)", "Delete SimpleType: String(2928)", "Delete SimpleName: state(2929)", "Delete SingleVariableDeclaration(2930)", "Delete SimpleName: statePriorityList(2931)", "Delete SimpleName: String(2932)", "Delete SimpleType: String(2933)", "Delete SimpleName: count(2934)", "Delete SimpleName: stateModDef(2935)", "Delete SimpleName: getNumInstancesPerState(2936)", "Delete SimpleName: state(2937)", "Delete MethodInvocation(2938)", "Delete VariableDeclarationFragment(2939)", "Delete VariableDeclarationStatement(2940)", "Delete SimpleName: count(2941)", "Delete SimpleName: equals(2942)", "Delete StringLiteral: \"1\"(2943)", "Delete MethodInvocation(2944)", "Delete SimpleName: masterStateValue(2945)", "Delete NullLiteral(2946)", "Delete InfixExpression: !=(2947)", "Delete SimpleName: HelixException(2948)", "Delete SimpleType: HelixException(2949)", "Delete StringLiteral: \"Invalid or unsupported state model definition\"(2950)", "Delete ClassInstanceCreation(2951)", "Delete ThrowStatement(2952)", "Delete Block(2953)", "Delete IfStatement(2954)", "Delete SimpleName: masterStateValue(2955)", "Delete SimpleName: state(2956)", "Delete Assignment: =(2957)", "Delete ExpressionStatement(2958)", "Delete Block(2959)", "Delete SimpleName: count(2960)", "Delete SimpleName: equalsIgnoreCase(2961)", "Delete StringLiteral: \"R\"(2962)", "Delete MethodInvocation(2963)", "Delete SimpleName: slaveStateValue(2964)", "Delete NullLiteral(2965)", "Delete InfixExpression: !=(2966)", "Delete SimpleName: HelixException(2967)", "Delete SimpleType: HelixException(2968)", "Delete StringLiteral: \"Invalid or unsupported state model definition\"(2969)", "Delete ClassInstanceCreation(2970)", "Delete ThrowStatement(2971)", "Delete Block(2972)", "Delete IfStatement(2973)", "Delete SimpleName: slaveStateValue(2974)", "Delete SimpleName: state(2975)", "Delete Assignment: =(2976)", "Delete ExpressionStatement(2977)", "Delete Block(2978)", "Delete SimpleName: count(2979)", "Delete SimpleName: equalsIgnoreCase(2980)", "Delete StringLiteral: \"N\"(2981)", "Delete MethodInvocation(2982)", "Delete SimpleName: masterStateValue(2983)", "Delete NullLiteral(2984)", "Delete InfixExpression: ==(2985)", "Delete SimpleName: slaveStateValue(2986)", "Delete NullLiteral(2987)", "Delete InfixExpression: ==(2988)", "Delete InfixExpression: &&(2989)", "Delete ParenthesizedExpression(2990)", "Delete PrefixExpression: !(2991)", "Delete SimpleName: HelixException(2992)", "Delete SimpleType: HelixException(2993)", "Delete StringLiteral: \"Invalid or unsupported state model definition\"(2994)", "Delete ClassInstanceCreation(2995)", "Delete ThrowStatement(2996)", "Delete Block(2997)", "Delete IfStatement(2998)", "Delete SimpleName: replica(2999)", "Delete SimpleName: InstanceNames(3000)", "Delete SimpleName: size(3001)", "Delete MethodInvocation(3002)", "Delete NumberLiteral: 1(3003)", "Delete InfixExpression: -(3004)", "Delete Assignment: =(3005)", "Delete ExpressionStatement(3006)", "Delete SimpleName: masterStateValue(3007)", "Delete SimpleName: slaveStateValue(3008)", "Delete SimpleName: state(3009)", "Delete Assignment: =(3010)", "Delete Assignment: =(3011)", "Delete ExpressionStatement(3012)", "Delete Block(3013)", "Delete IfStatement(3014)", "Delete IfStatement(3015)", "Delete IfStatement(3016)", "Delete Block(3017)", "Delete EnhancedForStatement(3018)", "Delete SimpleName: masterStateValue(3019)", "Delete NullLiteral(3020)", "Delete InfixExpression: ==(3021)", "Delete SimpleName: slaveStateValue(3022)", "Delete NullLiteral(3023)", "Delete InfixExpression: ==(3024)", "Delete InfixExpression: &&(3025)", "Delete SimpleName: HelixException(3026)", "Delete SimpleType: HelixException(3027)", "Delete StringLiteral: \"Invalid or unsupported state model definition\"(3028)", "Delete ClassInstanceCreation(3029)", "Delete ThrowStatement(3030)", "Delete Block(3031)", "Delete IfStatement(3032)", "Delete SimpleName: masterStateValue(3033)", "Delete NullLiteral(3034)", "Delete InfixExpression: ==(3035)", "Delete SimpleName: masterStateValue(3036)", "Delete SimpleName: slaveStateValue(3037)", "Delete Assignment: =(3038)", "Delete ExpressionStatement(3039)", "Delete Block(3040)", "Delete IfStatement(3041)", "Delete SimpleName: idealState(3042)", "Delete SimpleName: getIdealStateMode(3043)", "Delete MethodInvocation(3044)", "Delete QualifiedName: IdealStateModeProperty.AUTO_REBALANCE(3045)", "Delete InfixExpression: !=(3046)", "Delete SimpleName: ZNRecord(3047)", "Delete SimpleType: ZNRecord(3048)", "Delete SimpleName: newIdealState(3049)", "Delete SimpleName: IdealStateCalculatorForStorageNode(3050)", "Delete SimpleName: calculateIdealState(3051)", "Delete SimpleName: InstanceNames(3052)", "Delete SimpleName: partitions(3053)", "Delete SimpleName: replica(3054)", "Delete SimpleName: keyPrefix(3055)", "Delete SimpleName: masterStateValue(3056)", "Delete SimpleName: slaveStateValue(3057)", "Delete MethodInvocation(3058)", "Delete VariableDeclarationFragment(3059)", "Delete VariableDeclarationStatement(3060)", "Delete SimpleName: idealState(3061)", "Delete SimpleName: getIdealStateMode(3062)", "Delete MethodInvocation(3063)", "Delete QualifiedName: IdealStateModeProperty.AUTO(3064)", "Delete InfixExpression: ==(3065)", "Delete SimpleName: idealState(3066)", "Delete SimpleName: getRecord(3067)", "Delete MethodInvocation(3068)", "Delete SimpleName: setListFields(3069)", "Delete SimpleName: newIdealState(3070)", "Delete SimpleName: getListFields(3071)", "Delete MethodInvocation(3072)", "Delete MethodInvocation(3073)", "Delete ExpressionStatement(3074)", "Delete SimpleName: idealState(3075)", "Delete SimpleName: getRecord(3076)", "Delete MethodInvocation(3077)", "Delete SimpleName: setMapFields(3078)", "Delete SimpleName: newIdealState(3079)", "Delete SimpleName: getMapFields(3080)", "Delete MethodInvocation(3081)", "Delete MethodInvocation(3082)", "Delete ExpressionStatement(3083)", "Delete Block(3084)", "Delete IfStatement(3085)", "Delete SimpleName: idealState(3086)", "Delete SimpleName: getIdealStateMode(3087)", "Delete MethodInvocation(3088)", "Delete QualifiedName: IdealStateModeProperty.CUSTOMIZED(3089)", "Delete InfixExpression: ==(3090)", "Delete SimpleName: idealState(3091)", "Delete SimpleName: getRecord(3092)", "Delete MethodInvocation(3093)", "Delete SimpleName: setMapFields(3094)", "Delete SimpleName: newIdealState(3095)", "Delete SimpleName: getMapFields(3096)", "Delete MethodInvocation(3097)", "Delete MethodInvocation(3098)", "Delete ExpressionStatement(3099)", "Delete Block(3100)", "Delete IfStatement(3101)", "Delete Block(3102)", "Delete PrimitiveType: int(3103)", "Delete SimpleName: i(3104)", "Delete NumberLiteral: 0(3105)", "Delete VariableDeclarationFragment(3106)", "Delete VariableDeclarationExpression(3107)", "Delete SimpleName: i(3108)", "Delete SimpleName: partitions(3109)", "Delete InfixExpression: <(3110)", "Delete SimpleName: i(3111)", "Delete PostfixExpression: ++(3112)", "Delete SimpleName: String(3113)", "Delete SimpleType: String(3114)", "Delete SimpleName: partitionName(3115)", "Delete SimpleName: keyPrefix(3116)", "Delete StringLiteral: \"_\"(3117)", "Delete SimpleName: i(3118)", "Delete InfixExpression: +(3119)", "Delete VariableDeclarationFragment(3120)", "Delete VariableDeclarationStatement(3121)", "Delete SimpleName: idealState(3122)", "Delete SimpleName: getRecord(3123)", "Delete MethodInvocation(3124)", "Delete SimpleName: setMapField(3125)", "Delete SimpleName: partitionName(3126)", "Delete SimpleName: HashMap(3127)", "Delete SimpleType: HashMap(3128)", "Delete SimpleName: String(3129)", "Delete SimpleType: String(3130)", "Delete SimpleName: String(3131)", "Delete SimpleType: String(3132)", "Delete ParameterizedType: HashMap<String,String>(3133)", "Delete ClassInstanceCreation(3134)", "Delete MethodInvocation(3135)", "Delete ExpressionStatement(3136)", "Delete SimpleName: idealState(3137)", "Delete SimpleName: getRecord(3138)", "Delete MethodInvocation(3139)", "Delete SimpleName: setListField(3140)", "Delete SimpleName: partitionName(3141)", "Delete SimpleName: ArrayList(3142)", "Delete SimpleType: ArrayList(3143)", "Delete SimpleName: String(3144)", "Delete SimpleType: String(3145)", "Delete ParameterizedType: ArrayList<String>(3146)", "Delete ClassInstanceCreation(3147)", "Delete MethodInvocation(3148)", "Delete ExpressionStatement(3149)", "Delete Block(3150)", "Delete ForStatement(3151)", "Delete Block(3152)", "Delete IfStatement(3153)"]}}, {"ZKHelixAdmin_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 52", "operations": ["INS QualifiedName: org.apache.helix.util.RebalanceUtil to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 52"]}, {"root": "UPDATE from org.apache.helix.tools.IdealStateCalculatorForStorageNode to org.apache.helix.tools.DefaultIdealStateCalculator", "operations": ["UPD QualifiedName: org.apache.helix.tools.IdealStateCalculatorForStorageNode from org.apache.helix.tools.IdealStateCalculatorForStorageNode to org.apache.helix.tools.DefaultIdealStateCalculator"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 43", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 43", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: clusterName to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 8", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: instances to MethodInvocation at 5", "INS SimpleName: clusterName to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: resourceName to MethodInvocation at 2", "INS SimpleName: rebalance to MethodDeclaration at 3", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: resourceName to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: keyPrefix to MethodInvocation at 4", "INS SimpleName: rebalance to MethodInvocation at 0", "INS SimpleName: keyPrefix to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: replica to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: replica to MethodInvocation at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 44", "operations": ["INS SimpleName: List to SimpleType: List at 0", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: instances to MethodInvocation at 5", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: replica to SingleVariableDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 44", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: resourceName to MethodInvocation at 2", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: rebalance to MethodDeclaration at 3", "INS SimpleName: rebalance to MethodInvocation at 0", "INS ParameterizedType: List<String> to SingleVariableDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: replica to MethodInvocation at 3", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 8", "INS SimpleName: clusterName to SingleVariableDeclaration at 1", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS SimpleName: resourceName to MethodInvocation at 4", "INS SimpleName: clusterName to MethodInvocation at 1", "INS SimpleName: resourceName to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: instances to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 50", "operations": ["INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS SimpleType: Set to ParameterizedType: Set<String> at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: newIdealStateRecord to ClassInstanceCreation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: states to ArrayAccess at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getSimpleFields to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: getRecord to MethodInvocation at 1", "INS SimpleName: partition to MethodInvocation at 2", "INS IfStatement to Block at 1", "INS SimpleName: newIdealStateRecord to MethodInvocation at 0", "INS SimpleName: parseStates to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: StateModelDefinition to SimpleType: StateModelDefinition at 0", "INS SimpleName: buildInternalIdealState to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: DefaultIdealStateCalculator to MethodInvocation at 0", "INS SimpleName: partition to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: currentIdealState to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS SimpleType: String to ParameterizedType: Map<String,Object> at 1", "INS SimpleName: partition to SingleVariableDeclaration at 1", "INS SimpleName: Set to SimpleType: Set at 0", "INS SimpleName: originPartitionName to MethodInvocation at 2", "INS SimpleName: getListFields to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS ParameterizedType: Map<String,String> to CastExpression at 0", "INS VariableDeclarationStatement to Block at 7", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 1", "INS VariableDeclarationStatement to Block at 15", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 12", "INS SimpleName: instanceNames to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS StringLiteral: \"reversePartitionIndex\" to MethodInvocation at 2", "INS ParameterizedType: Map<String,Object> to VariableDeclarationStatement at 0", "INS SimpleName: convertToZNRecord to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: partition to MethodInvocation at 2", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS TextElement: the partition movement is minimized. The partitions are redistributed among the instances provided. to TagElement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: newIdealStateRecord to MethodInvocation at 0", "INS SimpleName: previousIdealState to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: instanceNames to TagElement: @param at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: partition to MethodInvocation at 0", "INS SimpleName: IdealState to SimpleType: IdealState at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: newIdealStateRecord to MethodInvocation at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: String to SimpleType: String at 0", "INS EnhancedForStatement to Block at 1", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: previousIdealState to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: remove to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: HashSet<String> at 1", "INS SimpleName: getSimpleFields to MethodInvocation at 1", "INS SimpleName: reversePartitionIndex to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: partitionSet to EnhancedForStatement at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleName: clusterName to MethodInvocation at 2", "INS ExpressionStatement to Block at 14", "INS SimpleName: Map to SimpleType: Map at 0", "INS NumberLiteral: 1 to ArrayAccess at 1", "INS SimpleName: partition to MethodInvocation at 2", "INS SimpleName: stateModDef to VariableDeclarationFragment at 0", "INS SimpleName: reversePartitionIndex to MethodInvocation at 0", "INS SimpleName: originPartitionName to MethodInvocation at 2", "INS SimpleName: partitionSet to VariableDeclarationFragment at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ArrayAccess to MethodInvocation at 4", "INS SimpleName: newIdealStateRecord to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: removeAll to MethodInvocation at 1", "INS ArrayAccess to MethodInvocation at 5", "INS ParameterizedType: Map<String,Object> to VariableDeclarationStatement at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ThisExpression to MethodInvocation at 0", "INS SimpleName: currentIdealState to MethodInvocation at 0", "INS SimpleName: clusterName to MethodInvocation at 1", "INS SimpleName: getStateModelDef to MethodInvocation at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS ExpressionStatement to Block at 5", "INS TagElement: @param to Javadoc at 3", "INS ExpressionStatement to Block at 2", "INS SimpleName: clusterName to MethodInvocation at 2", "INS ParameterizedType: Set<String> to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS TextElement:   to TagElement: @param at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: instanceNames to MethodInvocation at 2", "INS SimpleName: partition to MethodInvocation at 2", "INS ContinueStatement to Block at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleType: String to ParameterizedType: Set<String> at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS Block to IfStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ExpressionStatement to Block at 3", "INS SimpleType: String to ParameterizedType: HashSet<String> at 1", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: RebalanceUtil to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: partitionSet to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SimpleName: currentIdealState to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: addAll to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: HelixException to ClassInstanceCreation at 0", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: newIdealStateRecord to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getListFields to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 5", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: put to MethodInvocation at 1", "INS IfStatement to Block at 6", "INS SimpleName: String to SimpleType: String at 0", "INS ArrayType: String[] to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 4", "INS SimpleName: partition to MethodInvocation at 2", "INS SimpleName: currentIdealState to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: Map to SimpleType: Map at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: ZNRecord to SimpleType: ZNRecord at 0", "INS SimpleName: getRecord to MethodInvocation at 1", "INS SimpleName: Set to SimpleType: Set at 0", "INS SimpleName: currentIdealState to MethodInvocation at 0", "INS SimpleType: Set to ParameterizedType: Set<String> at 0", "INS SimpleName: balancedRecord to MethodInvocation at 0", "INS StringLiteral: \"cannot find state model: \" to InfixExpression: + at 0", "INS SimpleName: getListField to MethodInvocation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: getStateModelDefRef to MethodInvocation at 1", "INS ThrowStatement to Block at 0", "INS ExpressionStatement to Block at 11", "INS ParameterizedType: Set<String> to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: putAll to MethodInvocation at 1", "INS SimpleType: StateModelDefinition to VariableDeclarationStatement at 0", "INS SimpleName: HelixException to SimpleType: HelixException at 0", "INS SimpleName: setResourceIdealState to MethodInvocation at 0", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS SimpleType: ZNRecord to VariableDeclarationStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS TextElement: Takes the existing idealstate as input and computes newIdealState such that  to TagElement at 0", "INS SimpleName: newIdealStateRecord to MethodInvocation at 0", "INS SimpleName: clusterName to SingleVariableDeclaration at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: clusterName to TagElement: @param at 0", "INS SimpleName: String to SimpleType: String at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: getListFields to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 0", "INS SimpleType: HashSet to ParameterizedType: HashSet<String> at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: remove to MethodInvocation at 1", "INS SimpleName: IdealState to SimpleType: IdealState at 0", "INS SimpleName: currentIdealState to MethodInvocation at 2", "INS EnhancedForStatement to Block at 13", "INS SimpleName: balancedRecord to MethodInvocation at 2", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS VariableDeclarationStatement to Block at 9", "INS SimpleName: states to ArrayAccess at 0", "INS SimpleName: containsKey to MethodInvocation at 1", "INS ParameterizedType: List<String> to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 8", "INS VariableDeclarationStatement to Block at 8", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: IdealState to ClassInstanceCreation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: getStateModelDefRef to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: newIdealStateRecord to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: instanceNames to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: stateModDef to InfixExpression: == at 0", "INS SimpleName: newIdealState to MethodInvocation at 3", "INS SimpleName: getMapFields to MethodInvocation at 1", "INS SimpleType: IdealState to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: keySet to MethodInvocation at 1", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS SimpleName: newIdealStateRecord to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: stateModDef to MethodInvocation at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ParameterizedType: HashSet<String> to ClassInstanceCreation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: partition to MethodInvocation at 2", "INS SimpleType: IdealState to SingleVariableDeclaration at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: addAll to MethodInvocation at 1", "INS SimpleName: RebalanceUtil to MethodInvocation at 0", "INS SimpleName: getResourceName to MethodInvocation at 1", "INS ParameterizedType: HashSet<String> to ClassInstanceCreation at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getId to MethodInvocation at 1", "INS Dimension to ArrayType: String[] at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: rebalance to MethodDeclaration at 4", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: originPartitionName to VariableDeclarationFragment at 0", "INS SimpleName: addAll to MethodInvocation at 1", "INS TagElement to Javadoc at 0", "INS SimpleType: HashSet to ParameterizedType: HashSet<String> at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: String to ParameterizedType: Set<String> at 1", "INS SimpleName: currentIdealState to SingleVariableDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 10", "INS SimpleName: activeInstances to MethodInvocation at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: DefaultIdealStateCalculator to MethodInvocation at 0", "INS SimpleName: keySet to MethodInvocation at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleType: Map to ParameterizedType: Map<String,Object> at 0", "INS SimpleName: states to VariableDeclarationFragment at 0", "INS SimpleName: currentIdealState to TagElement: @param at 0", "INS SimpleName: partition to SingleVariableDeclaration at 1", "INS SimpleType: Object to ParameterizedType: Map<String,Object> at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: calculateNextIdealState to MethodInvocation at 1", "INS SimpleName: originPartitionName to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getMapField to MethodInvocation at 1", "INS SimpleName: getPartitionSet to MethodInvocation at 1", "INS SimpleName: partitionSet to MethodInvocation at 0", "INS SimpleName: balancedRecord to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS Modifier: public to MethodDeclaration at 2", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: getListField to MethodInvocation at 1", "INS SimpleName: newIdealStateRecord to MethodInvocation at 0", "INS ExpressionStatement to Block at 16", "INS SimpleName: activeInstances to MethodInvocation at 2", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: newIdealStateRecord to MethodInvocation at 0", "INS SimpleName: newIdealStateRecord to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: activeInstances to VariableDeclarationFragment at 0", "INS MethodDeclaration to TypeDeclaration: class at 50", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: reversePartitionIndex to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS TagElement: @return to Javadoc at 4", "INS SimpleName: IdealState to SimpleType: IdealState at 0", "INS SimpleName: getMapFields to MethodInvocation at 1", "INS SimpleName: getMapFields to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS PrimitiveType: void to MethodDeclaration at 3", "INS SimpleName: newIdealState to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: currentIdealState to MethodInvocation at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS ParameterizedType: List<String> to SingleVariableDeclaration at 0", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: instanceNames to SingleVariableDeclaration at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: instanceNames to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS SimpleName: getInstancesInCluster to MethodInvocation at 0", "INS ParameterizedType: List<String> to VariableDeclarationStatement at 0", "INS SimpleName: clusterName to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "INS SimpleName: instanceNames to MethodInvocation at 5", "operations": ["INS SimpleName: instanceNames to MethodInvocation at 5"]}, {"root": "UPDATE from InstanceNames to instanceNames", "operations": ["UPD SimpleName: InstanceNames from InstanceNames to instanceNames", "UPD SimpleName: InstanceNames from InstanceNames to instanceNames", "UPD SimpleName: InstanceNames from InstanceNames to instanceNames", "UPD SimpleName: InstanceNames from InstanceNames to instanceNames"]}, {"root": "UPDATE from IdealStateCalculatorForStorageNode to DefaultIdealStateCalculator", "operations": ["UPD SimpleName: IdealStateCalculatorForStorageNode from IdealStateCalculatorForStorageNode to DefaultIdealStateCalculator"]}]}}, {"ZKHelixAdmin_diff": {"operations": ["Insert ImportDeclaration(105) into CompilationUnit(5220) at 52", "Update QualifiedName: org.apache.helix.tools.IdealStateCalculatorForStorageNode(100) to org.apache.helix.tools.DefaultIdealStateCalculator", "Insert QualifiedName: org.apache.helix.util.RebalanceUtil(104) into ImportDeclaration(105) at 0", "Insert MethodDeclaration(4118) into TypeDeclaration: class(5219) at 43", "Insert MethodDeclaration(4151) into TypeDeclaration: class(5219) at 44", "Insert MethodDeclaration(5218) into TypeDeclaration: class(5219) at 50", "Insert MarkerAnnotation(4079) into MethodDeclaration(4118) at 0", "Insert Modifier: public(4080) into MethodDeclaration(4118) at 1", "Insert PrimitiveType: void(4081) into MethodDeclaration(4118) at 2", "Insert SimpleName: rebalance(4082) into MethodDeclaration(4118) at 3", "Insert SingleVariableDeclaration(4086) into MethodDeclaration(4118) at 4", "Insert SingleVariableDeclaration(4090) into MethodDeclaration(4118) at 5", "Insert SingleVariableDeclaration(4093) into MethodDeclaration(4118) at 6", "Insert SingleVariableDeclaration(4097) into MethodDeclaration(4118) at 7", "Insert Block(4117) into MethodDeclaration(4118) at 8", "Insert MarkerAnnotation(4120) into MethodDeclaration(4151) at 0", "Insert Modifier: public(4121) into MethodDeclaration(4151) at 1", "Insert PrimitiveType: void(4122) into MethodDeclaration(4151) at 2", "Insert SimpleName: rebalance(4123) into MethodDeclaration(4151) at 3", "Insert SingleVariableDeclaration(4127) into MethodDeclaration(4151) at 4", "Insert SingleVariableDeclaration(4131) into MethodDeclaration(4151) at 5", "Insert SingleVariableDeclaration(4134) into MethodDeclaration(4151) at 6", "Insert SingleVariableDeclaration(4141) into MethodDeclaration(4151) at 7", "Insert Block(4150) into MethodDeclaration(4151) at 8", "Insert SingleVariableDeclaration(4175) into MethodDeclaration(4507) at 6", "Insert Javadoc(4926) into MethodDeclaration(5218) at 0", "Insert MarkerAnnotation(4928) into MethodDeclaration(5218) at 1", "Insert Modifier: public(4929) into MethodDeclaration(5218) at 2", "Insert PrimitiveType: void(4930) into MethodDeclaration(5218) at 3", "Insert SimpleName: rebalance(4931) into MethodDeclaration(5218) at 4", "Insert SingleVariableDeclaration(4935) into MethodDeclaration(5218) at 5", "Insert SingleVariableDeclaration(4939) into MethodDeclaration(5218) at 6", "Insert SingleVariableDeclaration(4946) into MethodDeclaration(5218) at 7", "Insert Block(5217) into MethodDeclaration(5218) at 8", "Insert VariableDeclarationStatement(4067) into Block(4076) at 0", "Insert SimpleName: Override(4078) into MarkerAnnotation(4079) at 0", "Insert SimpleType: String(4084) into SingleVariableDeclaration(4086) at 0", "Insert SimpleName: clusterName(4085) into SingleVariableDeclaration(4086) at 1", "Insert SimpleType: String(4088) into SingleVariableDeclaration(4090) at 0", "Insert SimpleName: resourceName(4089) into SingleVariableDeclaration(4090) at 1", "Insert PrimitiveType: int(4091) into SingleVariableDeclaration(4093) at 0", "Insert SimpleName: replica(4092) into SingleVariableDeclaration(4093) at 1", "Insert SimpleType: String(4095) into SingleVariableDeclaration(4097) at 0", "Insert SimpleName: keyPrefix(4096) into SingleVariableDeclaration(4097) at 1", "Move VariableDeclarationStatement(4091) into Block(4117) at 0", "Insert ExpressionStatement(4116) into Block(4117) at 1", "Insert SimpleName: Override(4119) into MarkerAnnotation(4120) at 0", "Insert SimpleType: String(4125) into SingleVariableDeclaration(4127) at 0", "Insert SimpleName: clusterName(4126) into SingleVariableDeclaration(4127) at 1", "Insert SimpleType: String(4129) into SingleVariableDeclaration(4131) at 0", "Insert SimpleName: resourceName(4130) into SingleVariableDeclaration(4131) at 1", "Insert PrimitiveType: int(4132) into SingleVariableDeclaration(4134) at 0", "Insert SimpleName: replica(4133) into SingleVariableDeclaration(4134) at 1", "Insert ParameterizedType: List<String>(4139) into SingleVariableDeclaration(4141) at 0", "Insert SimpleName: instances(4140) into SingleVariableDeclaration(4141) at 1", "Insert ExpressionStatement(4149) into Block(4150) at 0", "Insert ParameterizedType: List<String>(4173) into SingleVariableDeclaration(4175) at 0", "Insert SimpleName: instanceNames(4174) into SingleVariableDeclaration(4175) at 1", "Insert TagElement(4917) into Javadoc(4926) at 0", "Insert TagElement: @param(4920) into Javadoc(4926) at 1", "Insert TagElement: @param(4922) into Javadoc(4926) at 2", "Insert TagElement: @param(4924) into Javadoc(4926) at 3", "Insert TagElement: @return(4925) into Javadoc(4926) at 4", "Insert SimpleName: Override(4927) into MarkerAnnotation(4928) at 0", "Insert SimpleType: String(4933) into SingleVariableDeclaration(4935) at 0", "Insert SimpleName: clusterName(4934) into SingleVariableDeclaration(4935) at 1", "Insert SimpleType: IdealState(4937) into SingleVariableDeclaration(4939) at 0", "Insert SimpleName: currentIdealState(4938) into SingleVariableDeclaration(4939) at 1", "Insert ParameterizedType: List<String>(4944) into SingleVariableDeclaration(4946) at 0", "Insert SimpleName: instanceNames(4945) into SingleVariableDeclaration(4946) at 1", "Insert VariableDeclarationStatement(4960) into Block(5217) at 0", "Insert EnhancedForStatement(4979) into Block(5217) at 1", "Insert ExpressionStatement(4984) into Block(5217) at 2", "Insert VariableDeclarationStatement(4998) into Block(5217) at 3", "Insert VariableDeclarationStatement(5013) into Block(5217) at 4", "Insert VariableDeclarationStatement(5025) into Block(5217) at 5", "Insert IfStatement(5039) into Block(5217) at 6", "Insert VariableDeclarationStatement(5051) into Block(5217) at 7", "Insert VariableDeclarationStatement(5069) into Block(5217) at 8", "Insert VariableDeclarationStatement(5083) into Block(5217) at 9", "Insert ExpressionStatement(5092) into Block(5217) at 10", "Insert ExpressionStatement(5101) into Block(5217) at 11", "Insert VariableDeclarationStatement(5123) into Block(5217) at 12", "Insert EnhancedForStatement(5188) into Block(5217) at 13", "Insert ExpressionStatement(5199) into Block(5217) at 14", "Insert VariableDeclarationStatement(5208) into Block(5217) at 15", "Insert ExpressionStatement(5216) into Block(5217) at 16", "Insert ParameterizedType: List<String>(4061) into VariableDeclarationStatement(4067) at 0", "Insert VariableDeclarationFragment(4066) into VariableDeclarationStatement(4067) at 1", "Insert SimpleName: String(4083) into SimpleType: String(4084) at 0", "Insert SimpleName: String(4087) into SimpleType: String(4088) at 0", "Insert SimpleName: String(4094) into SimpleType: String(4095) at 0", "Insert MethodInvocation(4115) into ExpressionStatement(4116) at 0", "Insert SimpleName: String(4124) into SimpleType: String(4125) at 0", "Insert SimpleName: String(4128) into SimpleType: String(4129) at 0", "Insert SimpleType: List(4136) into ParameterizedType: List<String>(4139) at 0", "Insert SimpleType: String(4138) into ParameterizedType: List<String>(4139) at 1", "Insert MethodInvocation(4148) into ExpressionStatement(4149) at 0", "Insert SimpleType: List(4170) into ParameterizedType: List<String>(4173) at 0", "Insert SimpleType: String(4172) into ParameterizedType: List<String>(4173) at 1", "Insert TextElement: Takes the existing idealstate as input and computes newIdealState such that (4915) into TagElement(4917) at 0", "Insert TextElement: the partition movement is minimized. The partitions are redistributed among the instances provided.(4916) into TagElement(4917) at 1", "Insert SimpleName: clusterName(4918) into TagElement: @param(4920) at 0", "Insert TextElement:  (4919) into TagElement: @param(4920) at 1", "Insert SimpleName: currentIdealState(4921) into TagElement: @param(4922) at 0", "Insert SimpleName: instanceNames(4923) into TagElement: @param(4924) at 0", "Insert SimpleName: String(4932) into SimpleType: String(4933) at 0", "Insert SimpleName: IdealState(4936) into SimpleType: IdealState(4937) at 0", "Insert SimpleType: List(4941) into ParameterizedType: List<String>(4944) at 0", "Insert SimpleType: String(4943) into ParameterizedType: List<String>(4944) at 1", "Insert ParameterizedType: Set<String>(4951) into VariableDeclarationStatement(4960) at 0", "Insert VariableDeclarationFragment(4959) into VariableDeclarationStatement(4960) at 1", "Insert SingleVariableDeclaration(4964) into EnhancedForStatement(4979) at 0", "Insert MethodInvocation(4967) into EnhancedForStatement(4979) at 1", "Insert Block(4978) into EnhancedForStatement(4979) at 2", "Insert MethodInvocation(4983) into ExpressionStatement(4984) at 0", "Insert ParameterizedType: Map<String,Object>(4991) into VariableDeclarationStatement(4998) at 0", "Insert VariableDeclarationFragment(4997) into VariableDeclarationStatement(4998) at 1", "Insert ParameterizedType: Map<String,Object>(5005) into VariableDeclarationStatement(5013) at 0", "Insert VariableDeclarationFragment(5012) into VariableDeclarationStatement(5013) at 1", "Insert SimpleType: StateModelDefinition(5015) into VariableDeclarationStatement(5025) at 0", "Insert VariableDeclarationFragment(5024) into VariableDeclarationStatement(5025) at 1", "Insert InfixExpression: ==(5028) into IfStatement(5039) at 0", "Insert Block(5038) into IfStatement(5039) at 1", "Insert ArrayType: String[](5043) into VariableDeclarationStatement(5051) at 0", "Insert VariableDeclarationFragment(5050) into VariableDeclarationStatement(5051) at 1", "Insert SimpleType: ZNRecord(5053) into VariableDeclarationStatement(5069) at 0", "Insert VariableDeclarationFragment(5068) into VariableDeclarationStatement(5069) at 1", "Insert ParameterizedType: Set<String>(5074) into VariableDeclarationStatement(5083) at 0", "Insert VariableDeclarationFragment(5082) into VariableDeclarationStatement(5083) at 1", "Insert MethodInvocation(5091) into ExpressionStatement(5092) at 0", "Insert MethodInvocation(5100) into ExpressionStatement(5101) at 0", "Insert ParameterizedType: Map<String,String>(5108) into VariableDeclarationStatement(5123) at 0", "Insert VariableDeclarationFragment(5122) into VariableDeclarationStatement(5123) at 1", "Insert SingleVariableDeclaration(5127) into EnhancedForStatement(5188) at 0", "Insert SimpleName: partitionSet(5128) into EnhancedForStatement(5188) at 1", "Insert Block(5187) into EnhancedForStatement(5188) at 2", "Insert MethodInvocation(5198) into ExpressionStatement(5199) at 0", "Insert SimpleType: IdealState(5201) into VariableDeclarationStatement(5208) at 0", "Insert VariableDeclarationFragment(5207) into VariableDeclarationStatement(5208) at 1", "Insert MethodInvocation(5215) into ExpressionStatement(5216) at 0", "Insert SimpleType: List(4058) into ParameterizedType: List<String>(4061) at 0", "Insert SimpleType: String(4060) into ParameterizedType: List<String>(4061) at 1", "Insert SimpleName: instanceNames(4062) into VariableDeclarationFragment(4066) at 0", "Insert MethodInvocation(4065) into VariableDeclarationFragment(4066) at 1", "Insert SimpleName: instanceNames(4073) into MethodInvocation(4074) at 5", "Update SimpleName: InstanceNames(4086) to instanceNames", "Insert SimpleName: rebalance(4109) into MethodInvocation(4115) at 0", "Insert SimpleName: clusterName(4110) into MethodInvocation(4115) at 1", "Insert SimpleName: resourceName(4111) into MethodInvocation(4115) at 2", "Insert SimpleName: replica(4112) into MethodInvocation(4115) at 3", "Insert SimpleName: keyPrefix(4113) into MethodInvocation(4115) at 4", "Insert SimpleName: instances(4114) into MethodInvocation(4115) at 5", "Insert SimpleName: List(4135) into SimpleType: List(4136) at 0", "Insert SimpleName: String(4137) into SimpleType: String(4138) at 0", "Insert SimpleName: rebalance(4142) into MethodInvocation(4148) at 0", "Insert SimpleName: clusterName(4143) into MethodInvocation(4148) at 1", "Insert SimpleName: resourceName(4144) into MethodInvocation(4148) at 2", "Insert SimpleName: replica(4145) into MethodInvocation(4148) at 3", "Insert SimpleName: resourceName(4146) into MethodInvocation(4148) at 4", "Insert SimpleName: instances(4147) into MethodInvocation(4148) at 5", "Insert SimpleName: List(4169) into SimpleType: List(4170) at 0", "Insert SimpleName: String(4171) into SimpleType: String(4172) at 0", "Update SimpleName: InstanceNames(4094) to instanceNames", "Insert SimpleName: List(4940) into SimpleType: List(4941) at 0", "Insert SimpleName: String(4942) into SimpleType: String(4943) at 0", "Insert SimpleType: Set(4948) into ParameterizedType: Set<String>(4951) at 0", "Insert SimpleType: String(4950) into ParameterizedType: Set<String>(4951) at 1", "Insert SimpleName: activeInstances(4952) into VariableDeclarationFragment(4959) at 0", "Insert ClassInstanceCreation(4958) into VariableDeclarationFragment(4959) at 1", "Insert SimpleType: String(4962) into SingleVariableDeclaration(4964) at 0", "Insert SimpleName: partition(4963) into SingleVariableDeclaration(4964) at 1", "Insert SimpleName: currentIdealState(4965) into MethodInvocation(4967) at 0", "Insert SimpleName: getPartitionSet(4966) into MethodInvocation(4967) at 1", "Insert ExpressionStatement(4977) into Block(4978) at 0", "Insert SimpleName: instanceNames(4980) into MethodInvocation(4983) at 0", "Insert SimpleName: removeAll(4981) into MethodInvocation(4983) at 1", "Insert SimpleName: activeInstances(4982) into MethodInvocation(4983) at 2", "Insert SimpleType: Map(4986) into ParameterizedType: Map<String,Object>(4991) at 0", "Insert SimpleType: String(4988) into ParameterizedType: Map<String,Object>(4991) at 1", "Insert SimpleType: Object(4990) into ParameterizedType: Map<String,Object>(4991) at 2", "Insert SimpleName: previousIdealState(4992) into VariableDeclarationFragment(4997) at 0", "Insert MethodInvocation(4996) into VariableDeclarationFragment(4997) at 1", "Insert SimpleType: Map(5000) into ParameterizedType: Map<String,Object>(5005) at 0", "Insert SimpleType: String(5002) into ParameterizedType: Map<String,Object>(5005) at 1", "Insert SimpleType: Object(5004) into ParameterizedType: Map<String,Object>(5005) at 2", "Insert SimpleName: balancedRecord(5006) into VariableDeclarationFragment(5012) at 0", "Insert MethodInvocation(5011) into VariableDeclarationFragment(5012) at 1", "Insert SimpleName: StateModelDefinition(5014) into SimpleType: StateModelDefinition(5015) at 0", "Insert SimpleName: stateModDef(5016) into VariableDeclarationFragment(5024) at 0", "Insert MethodInvocation(5023) into VariableDeclarationFragment(5024) at 1", "Insert SimpleName: stateModDef(5026) into InfixExpression: ==(5028) at 0", "Insert NullLiteral(5027) into InfixExpression: ==(5028) at 1", "Insert ThrowStatement(5037) into Block(5038) at 0", "Insert SimpleType: String(5041) into ArrayType: String[](5043) at 0", "Insert Dimension(5042) into ArrayType: String[](5043) at 1", "Insert SimpleName: states(5044) into VariableDeclarationFragment(5050) at 0", "Insert MethodInvocation(5049) into VariableDeclarationFragment(5050) at 1", "Insert SimpleName: ZNRecord(5052) into SimpleType: ZNRecord(5053) at 0", "Insert SimpleName: newIdealStateRecord(5054) into VariableDeclarationFragment(5068) at 0", "Insert MethodInvocation(5067) into VariableDeclarationFragment(5068) at 1", "Insert SimpleType: Set(5071) into ParameterizedType: Set<String>(5074) at 0", "Insert SimpleType: String(5073) into ParameterizedType: Set<String>(5074) at 1", "Insert SimpleName: partitionSet(5075) into VariableDeclarationFragment(5082) at 0", "Insert ClassInstanceCreation(5081) into VariableDeclarationFragment(5082) at 1", "Insert SimpleName: partitionSet(5084) into MethodInvocation(5091) at 0", "Insert SimpleName: addAll(5085) into MethodInvocation(5091) at 1", "Insert MethodInvocation(5090) into MethodInvocation(5091) at 2", "Insert SimpleName: partitionSet(5093) into MethodInvocation(5100) at 0", "Insert SimpleName: addAll(5094) into MethodInvocation(5100) at 1", "Insert MethodInvocation(5099) into MethodInvocation(5100) at 2", "Insert SimpleType: Map(5103) into ParameterizedType: Map<String,String>(5108) at 0", "Insert SimpleType: String(5105) into ParameterizedType: Map<String,String>(5108) at 1", "Insert SimpleType: String(5107) into ParameterizedType: Map<String,String>(5108) at 2", "Insert SimpleName: reversePartitionIndex(5109) into VariableDeclarationFragment(5122) at 0", "Insert CastExpression(5121) into VariableDeclarationFragment(5122) at 1", "Insert SimpleType: String(5125) into SingleVariableDeclaration(5127) at 0", "Insert SimpleName: partition(5126) into SingleVariableDeclaration(5127) at 1", "Insert IfStatement(5186) into Block(5187) at 0", "Insert MethodInvocation(5191) into MethodInvocation(5198) at 0", "Insert SimpleName: putAll(5192) into MethodInvocation(5198) at 1", "Insert MethodInvocation(5197) into MethodInvocation(5198) at 2", "Insert SimpleName: IdealState(5200) into SimpleType: IdealState(5201) at 0", "Insert SimpleName: newIdealState(5202) into VariableDeclarationFragment(5207) at 0", "Insert ClassInstanceCreation(5206) into VariableDeclarationFragment(5207) at 1", "Insert SimpleName: setResourceIdealState(5209) into MethodInvocation(5215) at 0", "Insert SimpleName: clusterName(5210) into MethodInvocation(5215) at 1", "Insert MethodInvocation(5213) into MethodInvocation(5215) at 2", "Insert SimpleName: newIdealState(5214) into MethodInvocation(5215) at 3", "Insert SimpleName: List(4057) into SimpleType: List(4058) at 0", "Insert SimpleName: String(4059) into SimpleType: String(4060) at 0", "Insert SimpleName: getInstancesInCluster(4063) into MethodInvocation(4065) at 0", "Insert SimpleName: clusterName(4064) into MethodInvocation(4065) at 1", "Insert SimpleName: Set(4947) into SimpleType: Set(4948) at 0", "Insert SimpleName: String(4949) into SimpleType: String(4950) at 0", "Insert ParameterizedType: HashSet<String>(4957) into ClassInstanceCreation(4958) at 0", "Insert SimpleName: String(4961) into SimpleType: String(4962) at 0", "Insert MethodInvocation(4976) into ExpressionStatement(4977) at 0", "Insert SimpleName: Map(4985) into SimpleType: Map(4986) at 0", "Insert SimpleName: String(4987) into SimpleType: String(4988) at 0", "Insert SimpleName: Object(4989) into SimpleType: Object(4990) at 0", "Insert SimpleName: RebalanceUtil(4993) into MethodInvocation(4996) at 0", "Insert SimpleName: buildInternalIdealState(4994) into MethodInvocation(4996) at 1", "Insert SimpleName: currentIdealState(4995) into MethodInvocation(4996) at 2", "Insert SimpleName: Map(4999) into SimpleType: Map(5000) at 0", "Insert SimpleName: String(5001) into SimpleType: String(5002) at 0", "Insert SimpleName: Object(5003) into SimpleType: Object(5004) at 0", "Insert SimpleName: DefaultIdealStateCalculator(5007) into MethodInvocation(5011) at 0", "Insert SimpleName: calculateNextIdealState(5008) into MethodInvocation(5011) at 1", "Insert SimpleName: instanceNames(5009) into MethodInvocation(5011) at 2", "Insert SimpleName: previousIdealState(5010) into MethodInvocation(5011) at 3", "Insert ThisExpression(5017) into MethodInvocation(5023) at 0", "Insert SimpleName: getStateModelDef(5018) into MethodInvocation(5023) at 1", "Insert SimpleName: clusterName(5019) into MethodInvocation(5023) at 2", "Insert MethodInvocation(5022) into MethodInvocation(5023) at 3", "Insert ClassInstanceCreation(5036) into ThrowStatement(5037) at 0", "Insert SimpleName: String(5040) into SimpleType: String(5041) at 0", "Insert SimpleName: RebalanceUtil(5045) into MethodInvocation(5049) at 0", "Insert SimpleName: parseStates(5046) into MethodInvocation(5049) at 1", "Insert SimpleName: clusterName(5047) into MethodInvocation(5049) at 2", "Insert SimpleName: stateModDef(5048) into MethodInvocation(5049) at 3", "Insert SimpleName: DefaultIdealStateCalculator(5055) into MethodInvocation(5067) at 0", "Insert SimpleName: convertToZNRecord(5056) into MethodInvocation(5067) at 1", "Insert SimpleName: balancedRecord(5057) into MethodInvocation(5067) at 2", "Insert MethodInvocation(5060) into MethodInvocation(5067) at 3", "Insert ArrayAccess(5063) into MethodInvocation(5067) at 4", "Insert ArrayAccess(5066) into MethodInvocation(5067) at 5", "Insert SimpleName: Set(5070) into SimpleType: Set(5071) at 0", "Insert SimpleName: String(5072) into SimpleType: String(5073) at 0", "Insert ParameterizedType: HashSet<String>(5080) into ClassInstanceCreation(5081) at 0", "Insert MethodInvocation(5088) into MethodInvocation(5090) at 0", "Insert SimpleName: keySet(5089) into MethodInvocation(5090) at 1", "Insert MethodInvocation(5097) into MethodInvocation(5099) at 0", "Insert SimpleName: keySet(5098) into MethodInvocation(5099) at 1", "Insert SimpleName: Map(5102) into SimpleType: Map(5103) at 0", "Insert SimpleName: String(5104) into SimpleType: String(5105) at 0", "Insert SimpleName: String(5106) into SimpleType: String(5107) at 0", "Insert ParameterizedType: Map<String,String>(5116) into CastExpression(5121) at 0", "Insert MethodInvocation(5120) into CastExpression(5121) at 1", "Insert SimpleName: String(5124) into SimpleType: String(5125) at 0", "Insert MethodInvocation(5132) into IfStatement(5186) at 0", "Insert Block(5185) into IfStatement(5186) at 1", "Insert SimpleName: newIdealStateRecord(5189) into MethodInvocation(5191) at 0", "Insert SimpleName: getSimpleFields(5190) into MethodInvocation(5191) at 1", "Insert MethodInvocation(5195) into MethodInvocation(5197) at 0", "Insert SimpleName: getSimpleFields(5196) into MethodInvocation(5197) at 1", "Insert SimpleType: IdealState(5204) into ClassInstanceCreation(5206) at 0", "Insert SimpleName: newIdealStateRecord(5205) into ClassInstanceCreation(5206) at 1", "Insert SimpleName: newIdealStateRecord(5211) into MethodInvocation(5213) at 0", "Insert SimpleName: getId(5212) into MethodInvocation(5213) at 1", "Insert SimpleType: HashSet(4954) into ParameterizedType: HashSet<String>(4957) at 0", "Insert SimpleType: String(4956) into ParameterizedType: HashSet<String>(4957) at 1", "Insert SimpleName: activeInstances(4968) into MethodInvocation(4976) at 0", "Insert SimpleName: addAll(4969) into MethodInvocation(4976) at 1", "Insert MethodInvocation(4975) into MethodInvocation(4976) at 2", "Insert SimpleName: currentIdealState(5020) into MethodInvocation(5022) at 0", "Insert SimpleName: getStateModelDefRef(5021) into MethodInvocation(5022) at 1", "Insert SimpleType: HelixException(5030) into ClassInstanceCreation(5036) at 0", "Insert InfixExpression: +(5035) into ClassInstanceCreation(5036) at 1", "Insert SimpleName: currentIdealState(5058) into MethodInvocation(5060) at 0", "Insert SimpleName: getResourceName(5059) into MethodInvocation(5060) at 1", "Insert SimpleName: states(5061) into ArrayAccess(5063) at 0", "Insert NumberLiteral: 0(5062) into ArrayAccess(5063) at 1", "Insert SimpleName: states(5064) into ArrayAccess(5066) at 0", "Insert NumberLiteral: 1(5065) into ArrayAccess(5066) at 1", "Insert SimpleType: HashSet(5077) into ParameterizedType: HashSet<String>(5080) at 0", "Insert SimpleType: String(5079) into ParameterizedType: HashSet<String>(5080) at 1", "Insert SimpleName: newIdealStateRecord(5086) into MethodInvocation(5088) at 0", "Insert SimpleName: getMapFields(5087) into MethodInvocation(5088) at 1", "Insert SimpleName: newIdealStateRecord(5095) into MethodInvocation(5097) at 0", "Insert SimpleName: getListFields(5096) into MethodInvocation(5097) at 1", "Insert SimpleType: Map(5111) into ParameterizedType: Map<String,String>(5116) at 0", "Insert SimpleType: String(5113) into ParameterizedType: Map<String,String>(5116) at 1", "Insert SimpleType: String(5115) into ParameterizedType: Map<String,String>(5116) at 2", "Insert SimpleName: balancedRecord(5117) into MethodInvocation(5120) at 0", "Insert SimpleName: get(5118) into MethodInvocation(5120) at 1", "Insert StringLiteral: \"reversePartitionIndex\"(5119) into MethodInvocation(5120) at 2", "Insert SimpleName: reversePartitionIndex(5129) into MethodInvocation(5132) at 0", "Insert SimpleName: containsKey(5130) into MethodInvocation(5132) at 1", "Insert SimpleName: partition(5131) into MethodInvocation(5132) at 2", "Insert VariableDeclarationStatement(5141) into Block(5185) at 0", "Insert IfStatement(5148) into Block(5185) at 1", "Insert ExpressionStatement(5159) into Block(5185) at 2", "Insert ExpressionStatement(5166) into Block(5185) at 3", "Insert ExpressionStatement(5177) into Block(5185) at 4", "Insert ExpressionStatement(5184) into Block(5185) at 5", "Insert SimpleName: currentIdealState(5193) into MethodInvocation(5195) at 0", "Insert SimpleName: getRecord(5194) into MethodInvocation(5195) at 1", "Insert SimpleName: IdealState(5203) into SimpleType: IdealState(5204) at 0", "Update SimpleName: IdealStateCalculatorForStorageNode(4312) to DefaultIdealStateCalculator", "Update SimpleName: InstanceNames(4314) to instanceNames", "Insert SimpleName: HashSet(4953) into SimpleType: HashSet(4954) at 0", "Insert SimpleName: String(4955) into SimpleType: String(4956) at 0", "Insert MethodInvocation(4972) into MethodInvocation(4975) at 0", "Insert SimpleName: getListField(4973) into MethodInvocation(4975) at 1", "Insert SimpleName: partition(4974) into MethodInvocation(4975) at 2", "Insert SimpleName: HelixException(5029) into SimpleType: HelixException(5030) at 0", "Insert StringLiteral: \"cannot find state model: \"(5031) into InfixExpression: +(5035) at 0", "Insert MethodInvocation(5034) into InfixExpression: +(5035) at 1", "Insert SimpleName: HashSet(5076) into SimpleType: HashSet(5077) at 0", "Insert SimpleName: String(5078) into SimpleType: String(5079) at 0", "Insert SimpleName: Map(5110) into SimpleType: Map(5111) at 0", "Insert SimpleName: String(5112) into SimpleType: String(5113) at 0", "Insert SimpleName: String(5114) into SimpleType: String(5115) at 0", "Insert SimpleType: String(5134) into VariableDeclarationStatement(5141) at 0", "Insert VariableDeclarationFragment(5140) into VariableDeclarationStatement(5141) at 1", "Insert MethodInvocation(5145) into IfStatement(5148) at 0", "Insert Block(5147) into IfStatement(5148) at 1", "Insert MethodInvocation(5158) into ExpressionStatement(5159) at 0", "Insert MethodInvocation(5165) into ExpressionStatement(5166) at 0", "Insert MethodInvocation(5176) into ExpressionStatement(5177) at 0", "Insert MethodInvocation(5183) into ExpressionStatement(5184) at 0", "Insert SimpleName: currentIdealState(4970) into MethodInvocation(4972) at 0", "Insert SimpleName: getRecord(4971) into MethodInvocation(4972) at 1", "Insert SimpleName: currentIdealState(5032) into MethodInvocation(5034) at 0", "Insert SimpleName: getStateModelDefRef(5033) into MethodInvocation(5034) at 1", "Insert SimpleName: String(5133) into SimpleType: String(5134) at 0", "Insert SimpleName: originPartitionName(5135) into VariableDeclarationFragment(5140) at 0", "Insert MethodInvocation(5139) into VariableDeclarationFragment(5140) at 1", "Insert SimpleName: partition(5142) into MethodInvocation(5145) at 0", "Insert SimpleName: equals(5143) into MethodInvocation(5145) at 1", "Insert SimpleName: originPartitionName(5144) into MethodInvocation(5145) at 2", "Insert ContinueStatement(5146) into Block(5147) at 0", "Insert MethodInvocation(5151) into MethodInvocation(5158) at 0", "Insert SimpleName: put(5152) into MethodInvocation(5158) at 1", "Insert SimpleName: originPartitionName(5153) into MethodInvocation(5158) at 2", "Insert MethodInvocation(5157) into MethodInvocation(5158) at 3", "Insert MethodInvocation(5162) into MethodInvocation(5165) at 0", "Insert SimpleName: remove(5163) into MethodInvocation(5165) at 1", "Insert SimpleName: partition(5164) into MethodInvocation(5165) at 2", "Insert MethodInvocation(5169) into MethodInvocation(5176) at 0", "Insert SimpleName: put(5170) into MethodInvocation(5176) at 1", "Insert SimpleName: originPartitionName(5171) into MethodInvocation(5176) at 2", "Insert MethodInvocation(5175) into MethodInvocation(5176) at 3", "Insert MethodInvocation(5180) into MethodInvocation(5183) at 0", "Insert SimpleName: remove(5181) into MethodInvocation(5183) at 1", "Insert SimpleName: partition(5182) into MethodInvocation(5183) at 2", "Insert SimpleName: reversePartitionIndex(5136) into MethodInvocation(5139) at 0", "Insert SimpleName: get(5137) into MethodInvocation(5139) at 1", "Insert SimpleName: partition(5138) into MethodInvocation(5139) at 2", "Insert SimpleName: newIdealStateRecord(5149) into MethodInvocation(5151) at 0", "Insert SimpleName: getMapFields(5150) into MethodInvocation(5151) at 1", "Insert SimpleName: newIdealStateRecord(5154) into MethodInvocation(5157) at 0", "Insert SimpleName: getMapField(5155) into MethodInvocation(5157) at 1", "Insert SimpleName: partition(5156) into MethodInvocation(5157) at 2", "Insert SimpleName: newIdealStateRecord(5160) into MethodInvocation(5162) at 0", "Insert SimpleName: getMapFields(5161) into MethodInvocation(5162) at 1", "Insert SimpleName: newIdealStateRecord(5167) into MethodInvocation(5169) at 0", "Insert SimpleName: getListFields(5168) into MethodInvocation(5169) at 1", "Insert SimpleName: newIdealStateRecord(5172) into MethodInvocation(5175) at 0", "Insert SimpleName: getListField(5173) into MethodInvocation(5175) at 1", "Insert SimpleName: partition(5174) into MethodInvocation(5175) at 2", "Insert SimpleName: newIdealStateRecord(5178) into MethodInvocation(5180) at 0", "Insert SimpleName: getListFields(5179) into MethodInvocation(5180) at 1", "Update SimpleName: InstanceNames(4262) to instanceNames"]}}], "commit_stats": [{"total_files": 16, "deleted_files": 1, "testing": "True", "maintenance": "True", "build": "False"}]}