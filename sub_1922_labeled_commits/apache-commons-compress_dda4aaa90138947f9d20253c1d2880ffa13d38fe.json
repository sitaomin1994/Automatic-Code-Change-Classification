{"application": "apache-commons-compress", "csha": "dda4aaa90138947f9d20253c1d2880ffa13d38fe", "files": [{"ZipArchiveOutputStream_cluster": {"actions": [{"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: ze to MethodInvocation at 0", "INS SimpleName: ze to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to IfStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: removeExtraField to MethodInvocation at 1", "INS SimpleName: ze to MethodInvocation at 0", "INS SimpleName: hasZip64Extra to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setExtra to MethodInvocation at 1", "INS QualifiedName: Zip64ExtendedInformationExtraField.HEADER_ID to MethodInvocation at 2", "INS IfStatement to IfStatement at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS QualifiedName: ZipLong.ZIP64_MAGIC to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS IfStatement to Block at 2", "INS PrefixExpression: ! to IfStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: getBytes to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: size to Assignment: = at 0", "INS MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "INS InfixExpression: || to InfixExpression: || at 0", "operations": ["INS InfixExpression: == to InfixExpression: || at 0", "INS InfixExpression: || to InfixExpression: || at 0", "INS QualifiedName: Zip64Mode.Always to InfixExpression: == at 1", "INS SimpleName: zip64Mode to InfixExpression: == at 0"]}, {"root": "INS InfixExpression: || to InfixExpression: || at 0", "operations": ["INS InfixExpression: == to InfixExpression: || at 0", "INS QualifiedName: Zip64Mode.Always to InfixExpression: == at 1", "INS InfixExpression: || to InfixExpression: || at 0", "INS SimpleName: zip64Mode to InfixExpression: == at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ArrayType: byte[] to VariableDeclarationStatement at 0"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: >= to InfixExpression: || at 1"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: >= to InfixExpression: || at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: size to VariableDeclarationFragment at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getBytes to MethodInvocation at 1"]}, {"root": "UPDATE from Math to hasZip64Extra", "operations": ["UPD SimpleName: Math from Math to hasZip64Extra"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: ZIP64_MAGIC to MethodInvocation at 0", "MOV SimpleName: min to MethodInvocation at 1", "MOV SimpleName: Math to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from min to ze", "operations": ["UPD SimpleName: min from min to ze"]}, {"root": "UPDATE from ZIP64_MAGIC to ZipLong", "operations": ["UPD SimpleName: ZIP64_MAGIC from ZIP64_MAGIC to ZipLong"]}, {"root": "DEL InfixExpression: &&", "operations": ["DEL InfixExpression: ==", "DEL SimpleName: DEFLATED", "DEL SimpleName: zipMethod", "DEL InfixExpression: &&"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: ZipLong", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL VariableDeclarationStatement"]}]}}, {"ZipArchiveOutputStream_diff": {"operations": ["Move ExpressionStatement(2351) into Block(2368) at 4", "Insert IfStatement(2703) into IfStatement(2704) at 2", "Insert VariableDeclarationStatement(2344) into Block(2368) at 1", "Insert IfStatement(2359) into Block(2368) at 2", "Insert MethodInvocation(2692) into IfStatement(2703) at 0", "Insert Block(2702) into IfStatement(2703) at 1", "Insert InfixExpression: ||(1149) into InfixExpression: ||(1155) at 0", "Insert InfixExpression: ||(1499) into InfixExpression: ||(1505) at 0", "Move MethodInvocation(2297) into IfStatement(2325) at 0", "Move ArrayType: byte[](2334) into VariableDeclarationStatement(2344) at 0", "Insert VariableDeclarationFragment(2343) into VariableDeclarationStatement(2344) at 1", "Insert PrefixExpression: !(2348) into IfStatement(2359) at 0", "Insert Block(2358) into IfStatement(2359) at 1", "Insert SimpleName: hasZip64Extra(2690) into MethodInvocation(2692) at 0", "Insert SimpleName: ze(2691) into MethodInvocation(2692) at 1", "Insert ExpressionStatement(2697) into Block(2702) at 0", "Insert ExpressionStatement(2701) into Block(2702) at 1", "Insert InfixExpression: ==(1143) into InfixExpression: ||(1149) at 0", "Move InfixExpression: >=(1145) into InfixExpression: ||(1149) at 1", "Insert InfixExpression: ==(1493) into InfixExpression: ||(1499) at 0", "Move InfixExpression: >=(1491) into InfixExpression: ||(1499) at 1", "Move SimpleName: size(2335) into VariableDeclarationFragment(2343) at 0", "Insert MethodInvocation(2342) into VariableDeclarationFragment(2343) at 1", "Insert MethodInvocation(2347) into PrefixExpression: !(2348) at 0", "Insert ExpressionStatement(2357) into Block(2358) at 0", "Insert MethodInvocation(2696) into ExpressionStatement(2697) at 0", "Insert MethodInvocation(2700) into ExpressionStatement(2701) at 0", "Insert SimpleName: zip64Mode(1141) into InfixExpression: ==(1143) at 0", "Insert QualifiedName: Zip64Mode.Always(1142) into InfixExpression: ==(1143) at 1", "Insert SimpleName: zip64Mode(1491) into InfixExpression: ==(1493) at 0", "Insert QualifiedName: Zip64Mode.Always(1492) into InfixExpression: ==(1493) at 1", "Insert QualifiedName: ZipLong.ZIP64_MAGIC(2340) into MethodInvocation(2342) at 0", "Move SimpleName: getBytes(2337) into MethodInvocation(2342) at 1", "Update SimpleName: Math(2338) to hasZip64Extra", "Move SimpleName: Math(2338) into MethodInvocation(2347) at 0", "Update SimpleName: min(2339) to ze", "Move SimpleName: min(2339) into MethodInvocation(2347) at 1", "Insert Assignment: =(2356) into ExpressionStatement(2357) at 0", "Insert SimpleName: ze(2693) into MethodInvocation(2696) at 0", "Insert SimpleName: removeExtraField(2694) into MethodInvocation(2696) at 1", "Insert QualifiedName: Zip64ExtendedInformationExtraField.HEADER_ID(2695) into MethodInvocation(2696) at 2", "Insert SimpleName: ze(2698) into MethodInvocation(2700) at 0", "Insert SimpleName: setExtra(2699) into MethodInvocation(2700) at 1", "Insert SimpleName: size(2349) into Assignment: =(2356) at 0", "Insert MethodInvocation(2355) into Assignment: =(2356) at 1", "Update SimpleName: ZIP64_MAGIC(2343) to ZipLong", "Move SimpleName: ZIP64_MAGIC(2343) into MethodInvocation(2355) at 0", "Insert SimpleName: getBytes(2351) into MethodInvocation(2355) at 1", "Move MethodInvocation(2342) into MethodInvocation(2355) at 2", "Delete SimpleName: zipMethod(2292)", "Delete SimpleName: DEFLATED(2293)", "Delete InfixExpression: ==(2294)", "Delete InfixExpression: &&(2298)", "Delete SimpleName: ZipLong(2336)", "Delete MethodInvocation(2344)", "Delete MethodInvocation(2345)", "Delete VariableDeclarationFragment(2346)", "Delete VariableDeclarationStatement(2347)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}