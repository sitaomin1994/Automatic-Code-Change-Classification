{"application": "apache-hama", "csha": "a4ed985111dce4cb3b6d1a3f91f9c1ef62a47987", "files": [{"DenseMatrix_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 24"]}, {"root": "UPDATE from org.apache.hadoop.hbase.util.Bytes to org.apache.hama.mapred.BlockingMapRed", "operations": ["UPD QualifiedName: org.apache.hadoop.hbase.util.Bytes from org.apache.hadoop.hbase.util.Bytes to org.apache.hama.mapred.BlockingMapRed"]}, {"root": "UPDATE from blocking to blocking_mapred", "operations": ["UPD SimpleName: blocking from blocking to blocking_mapred"]}, {"root": "UPDATE from protected to public", "operations": ["UPD Modifier: protected from protected to public"]}, {"root": "INS TagElement: @param to Javadoc at 1", "operations": ["INS TagElement: @param to Javadoc at 1", "INS SimpleName: blockNum to TagElement: @param at 0"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @throws to Javadoc at 2"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS StringLiteral: \"Blocking MR job\" to InfixExpression: + at 0", "INS SimpleName: jobConf to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS ExpressionStatement to Block at 3", "INS SimpleName: setJobName to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setNumMapTasks to MethodInvocation at 1", "INS SimpleName: jobConf to MethodInvocation at 0", "INS SimpleName: getNumMapTasks to MethodInvocation at 1", "INS SimpleName: config to MethodInvocation at 0", "INS ExpressionStatement to Block at 4", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS ExpressionStatement to Block at 5", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS ExpressionStatement to Block at 6", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: initJob to MethodInvocation at 1", "INS SimpleName: jobConf to MethodInvocation at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 7"]}, {"root": "UPDATE from The type of the Matrix to be blocked, must be dense. to Using a map/reduce job to block a dense matrix.", "operations": ["UPD TextElement: The type of the Matrix to be blocked, must be dense. from The type of the Matrix to be blocked, must be dense. to Using a map/reduce job to block a dense matrix."]}, {"root": "INS SimpleType: JobConf to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: JobConf to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from String to JobConf", "operations": ["UPD SimpleName: String from String to JobConf", "UPD SimpleName: String from String to JobConf"]}, {"root": "MOVE from SimpleType: JobConf", "operations": ["MOV SimpleName: String to SimpleType: JobConf at 0"]}, {"root": "UPDATE from blockC to jobConf", "operations": ["UPD SimpleName: blockC from blockC to jobConf", "UPD SimpleName: columns from columns to jobConf", "UPD SimpleName: Bytes from Bytes to jobConf"]}, {"root": "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: config to ClassInstanceCreation at 1", "INS SimpleType: JobConf to ClassInstanceCreation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Bytes to MethodInvocation at 0", "MOV SimpleName: toString to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from toString to setNumReduceTasks", "operations": ["UPD SimpleName: toString from toString to setNumReduceTasks"]}, {"root": "UPDATE from split to BlockingMapRed", "operations": ["UPD SimpleName: split from split to BlockingMapRed"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: split to MethodInvocation at 0"]}, {"root": "UPDATE from blockMatrix to JobManager", "operations": ["UPD SimpleName: blockMatrix from blockMatrix to JobManager"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: blockC to MethodInvocation at 2", "MOV SimpleName: blockR to MethodInvocation at 1", "MOV SimpleName: blockMatrix to MethodInvocation at 0"]}, {"root": "UPDATE from blockR to execute", "operations": ["UPD SimpleName: blockR from blockR to execute"]}, {"root": "UPDATE from row to config", "operations": ["UPD SimpleName: row from row to config"]}, {"root": "UPDATE from getRow to getNumReduceTasks", "operations": ["UPD SimpleName: getRow from getRow to getNumReduceTasks"]}, {"root": "UPDATE from Integer to getPath", "operations": ["UPD SimpleName: Integer from Integer to getPath", "UPD SimpleName: getScanner from getScanner to getPath"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Integer to MethodInvocation at 0"]}, {"root": "MOVE from SimpleType: JobConf", "operations": ["MOV SimpleName: String to SimpleType: JobConf at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getScanner to MethodInvocation at 0"]}, {"root": "DEL TextElement: TODO: it should be work on map/reduce", "operations": ["DEL TextElement: TODO: it should be work on map/reduce"]}, {"root": "DEL ArrayType: String[]", "operations": ["DEL SimpleType: String", "DEL Dimension", "DEL ArrayType: String[]"]}, {"root": "DEL ArrayCreation", "operations": ["DEL ArrayType: String[]", "DEL ArrayCreation", "DEL QualifiedName: Constants.BLOCK_ENDCOLUMN", "DEL SimpleType: String", "DEL QualifiedName: Constants.BLOCK_STARTROW", "DEL QualifiedName: Constants.BLOCK_ENDROW", "DEL QualifiedName: Constants.BLOCK_STARTCOLUMN", "DEL Dimension", "DEL ArrayInitializer"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: setBlock", "DEL SimpleName: blockR", "DEL SimpleName: blockC", "DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: scan", "DEL SimpleName: columns", "DEL MethodInvocation", "DEL SimpleType: Scanner", "DEL SimpleName: table", "DEL SimpleName: Scanner"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL SimpleName: parseInt", "DEL SimpleName: RowResult", "DEL VariableDeclarationStatement", "DEL Dimension", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL NumberLiteral: 1", "DEL SimpleName: scan", "DEL VariableDeclarationFragment", "DEL SimpleType: RowResult", "DEL ArrayAccess", "DEL SimpleName: Integer", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleName: blockC", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SimpleName: blockR", "DEL MethodInvocation", "DEL SimpleName: parseInt", "DEL SimpleName: key", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL ArrayAccess", "DEL NumberLiteral: 0", "DEL SimpleType: String", "DEL SimpleName: key", "DEL EnhancedForStatement", "DEL ArrayType: String[]", "DEL PrimitiveType: int", "DEL StringLiteral: \"[,]\"", "DEL MethodInvocation", "DEL SimpleName: key", "DEL SimpleName: row"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: pos", "DEL Modifier: protected", "DEL SingleVariableDeclaration", "DEL SimpleName: subMatrix", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL Dimension", "DEL SimpleName: getBlockPosition", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL NumberLiteral: 3", "DEL SimpleName: i", "DEL ArrayType: int[]", "DEL SimpleName: pos", "DEL ArrayAccess", "DEL PrimitiveType: int", "DEL SimpleName: pos", "DEL ArrayAccess", "DEL Block", "DEL Javadoc", "DEL NumberLiteral: 1", "DEL SimpleName: pos", "DEL PrimitiveType: int", "DEL TextElement:  the sub matrix", "DEL SimpleName: j", "DEL ArrayAccess", "DEL TagElement: @return", "DEL SimpleName: j", "DEL SimpleName: IOException", "DEL ReturnStatement", "DEL TagElement: @param", "DEL SimpleType: IOException", "DEL NumberLiteral: 2", "DEL SimpleName: j", "DEL MethodDeclaration", "DEL PrimitiveType: int", "DEL TagElement: @param", "DEL SimpleName: i", "DEL SimpleType: SubMatrix", "DEL SimpleName: blockMatrix", "DEL SimpleName: SubMatrix", "DEL SimpleName: pos", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL ArrayAccess", "DEL SimpleName: i"]}]}}, {"DenseMatrix_diff": {"operations": ["Move ImportDeclaration(35) into CompilationUnit(1827) at 24", "Update QualifiedName: org.apache.hadoop.hbase.util.Bytes(34) to org.apache.hama.mapred.BlockingMapRed", "Update SimpleName: blocking(1352) to blocking_mapred", "Update Modifier: protected(1557) to public", "Insert TagElement: @param(1349) into Javadoc(1352) at 1", "Move TagElement: @throws(1865) into Javadoc(1352) at 2", "Insert ExpressionStatement(1385) into Block(1412) at 3", "Insert ExpressionStatement(1392) into Block(1412) at 4", "Insert ExpressionStatement(1399) into Block(1412) at 5", "Insert ExpressionStatement(1406) into Block(1412) at 6", "Move ExpressionStatement(1441) into Block(1412) at 7", "Update TextElement: The type of the Matrix to be blocked, must be dense.(1346) to Using a map/reduce job to block a dense matrix.", "Insert SimpleName: blockNum(1348) into TagElement: @param(1349) at 0", "Insert SimpleType: JobConf(1370) into VariableDeclarationStatement(1377) at 0", "Insert MethodInvocation(1384) into ExpressionStatement(1385) at 0", "Insert MethodInvocation(1391) into ExpressionStatement(1392) at 0", "Insert MethodInvocation(1398) into ExpressionStatement(1399) at 0", "Insert MethodInvocation(1405) into ExpressionStatement(1406) at 0", "Insert MethodInvocation(1410) into ExpressionStatement(1411) at 0", "Update SimpleName: String(1366) to JobConf", "Move SimpleName: String(1366) into SimpleType: JobConf(1370) at 0", "Update SimpleName: columns(1370) to jobConf", "Insert ClassInstanceCreation(1375) into VariableDeclarationFragment(1376) at 1", "Insert SimpleName: jobConf(1378) into MethodInvocation(1384) at 0", "Insert SimpleName: setJobName(1379) into MethodInvocation(1384) at 1", "Insert InfixExpression: +(1383) into MethodInvocation(1384) at 2", "Insert SimpleName: jobConf(1386) into MethodInvocation(1391) at 0", "Insert SimpleName: setNumMapTasks(1387) into MethodInvocation(1391) at 1", "Insert MethodInvocation(1390) into MethodInvocation(1391) at 2", "Update SimpleName: Bytes(1402) to jobConf", "Move SimpleName: Bytes(1402) into MethodInvocation(1398) at 0", "Update SimpleName: toString(1403) to setNumReduceTasks", "Move SimpleName: toString(1403) into MethodInvocation(1398) at 1", "Move MethodInvocation(1406) into MethodInvocation(1398) at 2", "Update SimpleName: split(1408) to BlockingMapRed", "Move SimpleName: split(1408) into MethodInvocation(1405) at 0", "Insert SimpleName: initJob(1401) into MethodInvocation(1405) at 1", "Insert MethodInvocation(1403) into MethodInvocation(1405) at 2", "Insert SimpleName: jobConf(1404) into MethodInvocation(1405) at 3", "Update SimpleName: blockMatrix(1436) to JobManager", "Move SimpleName: blockMatrix(1436) into MethodInvocation(1410) at 0", "Update SimpleName: blockR(1437) to execute", "Move SimpleName: blockR(1437) into MethodInvocation(1410) at 1", "Update SimpleName: blockC(1438) to jobConf", "Move SimpleName: blockC(1438) into MethodInvocation(1410) at 2", "Insert SimpleType: JobConf(1373) into ClassInstanceCreation(1375) at 0", "Insert SimpleName: config(1374) into ClassInstanceCreation(1375) at 1", "Insert StringLiteral: \"Blocking MR job\"(1380) into InfixExpression: +(1383) at 0", "Insert MethodInvocation(1382) into InfixExpression: +(1383) at 1", "Insert SimpleName: config(1388) into MethodInvocation(1390) at 0", "Insert SimpleName: getNumMapTasks(1389) into MethodInvocation(1390) at 1", "Update SimpleName: row(1404) to config", "Update SimpleName: getRow(1405) to getNumReduceTasks", "Update SimpleName: Integer(1415) to getPath", "Move SimpleName: Integer(1415) into MethodInvocation(1403) at 0", "Update SimpleName: String(1371) to JobConf", "Move SimpleName: String(1371) into SimpleType: JobConf(1373) at 0", "Update SimpleName: getScanner(1387) to getPath", "Move SimpleName: getScanner(1387) into MethodInvocation(1382) at 0", "Delete TextElement: TODO: it should be work on map/reduce(1347)", "Delete SimpleType: String(1367)", "Delete Dimension(1368)", "Delete ArrayType: String[](1369)", "Delete SimpleType: String(1372)", "Delete Dimension(1373)", "Delete ArrayType: String[](1374)", "Delete QualifiedName: Constants.BLOCK_STARTROW(1375)", "Delete QualifiedName: Constants.BLOCK_ENDROW(1376)", "Delete QualifiedName: Constants.BLOCK_STARTCOLUMN(1377)", "Delete QualifiedName: Constants.BLOCK_ENDCOLUMN(1378)", "Delete ArrayInitializer(1379)", "Delete ArrayCreation(1380)", "Delete SimpleName: setBlock(1433)", "Delete SimpleName: blockR(1434)", "Delete SimpleName: blockC(1435)", "Delete MethodInvocation(1439)", "Delete MethodInvocation(1440)", "Delete SimpleName: Scanner(1383)", "Delete SimpleType: Scanner(1384)", "Delete SimpleName: scan(1385)", "Delete SimpleName: table(1386)", "Delete SimpleName: columns(1388)", "Delete MethodInvocation(1389)", "Delete VariableDeclarationFragment(1390)", "Delete VariableDeclarationStatement(1391)", "Delete SimpleName: RowResult(1392)", "Delete SimpleType: RowResult(1393)", "Delete SimpleName: row(1394)", "Delete SingleVariableDeclaration(1395)", "Delete SimpleName: scan(1396)", "Delete SimpleName: String(1397)", "Delete SimpleType: String(1398)", "Delete Dimension(1399)", "Delete ArrayType: String[](1400)", "Delete SimpleName: key(1401)", "Delete MethodInvocation(1407)", "Delete StringLiteral: \"[,]\"(1409)", "Delete MethodInvocation(1410)", "Delete VariableDeclarationFragment(1411)", "Delete VariableDeclarationStatement(1412)", "Delete PrimitiveType: int(1413)", "Delete SimpleName: blockR(1414)", "Delete SimpleName: parseInt(1416)", "Delete SimpleName: key(1417)", "Delete NumberLiteral: 0(1418)", "Delete ArrayAccess(1419)", "Delete MethodInvocation(1420)", "Delete VariableDeclarationFragment(1421)", "Delete VariableDeclarationStatement(1422)", "Delete PrimitiveType: int(1423)", "Delete SimpleName: blockC(1424)", "Delete SimpleName: Integer(1425)", "Delete SimpleName: parseInt(1426)", "Delete SimpleName: key(1427)", "Delete NumberLiteral: 1(1428)", "Delete ArrayAccess(1429)", "Delete MethodInvocation(1430)", "Delete VariableDeclarationFragment(1431)", "Delete VariableDeclarationStatement(1432)", "Delete Block(1442)", "Delete EnhancedForStatement(1443)", "Delete SimpleName: i(1858)", "Delete TagElement: @param(1859)", "Delete SimpleName: j(1860)", "Delete TagElement: @param(1861)", "Delete TextElement:  the sub matrix(1862)", "Delete TagElement: @return(1863)", "Delete Javadoc(1866)", "Delete Modifier: protected(1867)", "Delete SimpleName: SubMatrix(1868)", "Delete SimpleType: SubMatrix(1869)", "Delete SimpleName: blockMatrix(1870)", "Delete PrimitiveType: int(1871)", "Delete SimpleName: i(1872)", "Delete SingleVariableDeclaration(1873)", "Delete PrimitiveType: int(1874)", "Delete SimpleName: j(1875)", "Delete SingleVariableDeclaration(1876)", "Delete SimpleName: IOException(1877)", "Delete SimpleType: IOException(1878)", "Delete PrimitiveType: int(1879)", "Delete Dimension(1880)", "Delete ArrayType: int[](1881)", "Delete SimpleName: pos(1882)", "Delete SimpleName: getBlockPosition(1883)", "Delete SimpleName: i(1884)", "Delete SimpleName: j(1885)", "Delete MethodInvocation(1886)", "Delete VariableDeclarationFragment(1887)", "Delete VariableDeclarationStatement(1888)", "Delete SimpleName: subMatrix(1889)", "Delete SimpleName: pos(1890)", "Delete NumberLiteral: 0(1891)", "Delete ArrayAccess(1892)", "Delete SimpleName: pos(1893)", "Delete NumberLiteral: 1(1894)", "Delete ArrayAccess(1895)", "Delete SimpleName: pos(1896)", "Delete NumberLiteral: 2(1897)", "Delete ArrayAccess(1898)", "Delete SimpleName: pos(1899)", "Delete NumberLiteral: 3(1900)", "Delete ArrayAccess(1901)", "Delete MethodInvocation(1902)", "Delete ReturnStatement(1903)", "Delete Block(1904)", "Delete MethodDeclaration(1905)"]}}, {"MatrixMultiplication_cluster": {"actions": [{"root": "UPDATE from blocking to blocking_mapred", "operations": ["UPD SimpleName: blocking from blocking to blocking_mapred", "UPD SimpleName: blocking from blocking to blocking_mapred"]}]}}, {"MatrixMultiplication_diff": {"operations": ["Update SimpleName: blocking(114) to blocking_mapred", "Update SimpleName: blocking(126) to blocking_mapred"]}}, {"BlockID_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS InfixExpression: + to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS InfixExpression: * to InfixExpression: + at 0", "INS SimpleName: column to InfixExpression: + at 1", "INS SimpleName: hashCode to MethodDeclaration at 3", "INS PrimitiveType: int to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS SimpleName: row to InfixExpression: * at 0", "INS ReturnStatement to Block at 0", "INS NumberLiteral: 37 to InfixExpression: * at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement: Make BlockID's string representation be same format. to TagElement at 0", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "UPDATE from write to writeInt", "operations": ["UPD SimpleName: write from write to writeInt"]}, {"root": "UPDATE from \", \" to \",\"", "operations": ["UPD StringLiteral: \", \" from \", \" to \",\""]}]}}, {"BlockID_diff": {"operations": ["Insert MethodDeclaration(171) into TypeDeclaration: class(366) at 14", "Insert Javadoc(147) into MethodDeclaration(158) at 0", "Insert MarkerAnnotation(160) into MethodDeclaration(171) at 0", "Insert Modifier: public(161) into MethodDeclaration(171) at 1", "Insert PrimitiveType: int(162) into MethodDeclaration(171) at 2", "Insert SimpleName: hashCode(163) into MethodDeclaration(171) at 3", "Insert Block(170) into MethodDeclaration(171) at 4", "Insert TagElement(146) into Javadoc(147) at 0", "Insert SimpleName: Override(159) into MarkerAnnotation(160) at 0", "Insert ReturnStatement(169) into Block(170) at 0", "Insert TextElement: Make BlockID's string representation be same format.(145) into TagElement(146) at 0", "Insert InfixExpression: +(168) into ReturnStatement(169) at 0", "Update SimpleName: write(139) to writeInt", "Update StringLiteral: \", \"(150) to \",\"", "Insert InfixExpression: *(166) into InfixExpression: +(168) at 0", "Insert SimpleName: column(167) into InfixExpression: +(168) at 1", "Insert SimpleName: row(164) into InfixExpression: *(166) at 0", "Insert NumberLiteral: 37(165) into InfixExpression: *(166) at 1"]}}], "commit_stats": [{"total_files": 8, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}