{"application": "google-error-prone", "csha": "1c728e44f048356a4a3619523a529df67f0f00d5", "files": [{"NonCanonicalStaticImport_cluster": {"actions": [{"root": "UPDATE from com.google.errorprone.bugpatterns.UnnecessaryStaticImport.StaticTypeImportInfo to com.google.errorprone.bugpatterns.StaticImports.StaticImportInfo", "operations": ["UPD QualifiedName: com.google.errorprone.bugpatterns.UnnecessaryStaticImport.StaticTypeImportInfo from com.google.errorprone.bugpatterns.UnnecessaryStaticImport.StaticTypeImportInfo to com.google.errorprone.bugpatterns.StaticImports.StaticImportInfo"]}, {"root": "UPDATE from StaticTypeImportInfo to StaticImportInfo", "operations": ["UPD SimpleName: StaticTypeImportInfo from StaticTypeImportInfo to StaticImportInfo", "UPD SimpleType: StaticTypeImportInfo from StaticTypeImportInfo to StaticImportInfo"]}, {"root": "INS InfixExpression: || to IfStatement at 0", "operations": ["INS InfixExpression: || to IfStatement at 0", "INS SimpleName: importInfo to MethodInvocation at 0", "INS SimpleName: member to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: || at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: isPresent to MethodInvocation at 1"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: || to InfixExpression: || at 0"]}, {"root": "UPDATE from StaticTypeImportInfo to StaticImports", "operations": ["UPD SimpleName: StaticTypeImportInfo from StaticTypeImportInfo to StaticImports"]}]}}, {"NonCanonicalStaticImport_diff": {"operations": ["Update QualifiedName: com.google.errorprone.bugpatterns.UnnecessaryStaticImport.StaticTypeImportInfo(14) to com.google.errorprone.bugpatterns.StaticImports.StaticImportInfo", "Update SimpleType: StaticTypeImportInfo(65) to StaticImportInfo", "Insert InfixExpression: ||(86) into IfStatement(90) at 0", "Update SimpleName: StaticTypeImportInfo(64) to StaticImportInfo", "Move InfixExpression: ||(80) into InfixExpression: ||(86) at 0", "Insert MethodInvocation(85) into InfixExpression: ||(86) at 1", "Update SimpleName: StaticTypeImportInfo(67) to StaticImports", "Insert MethodInvocation(83) into MethodInvocation(85) at 0", "Insert SimpleName: isPresent(84) into MethodInvocation(85) at 1", "Insert SimpleName: importInfo(81) into MethodInvocation(83) at 0", "Insert SimpleName: member(82) into MethodInvocation(83) at 1"]}}, {"UnnecessaryStaticImport_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 8"]}, {"root": "UPDATE from com.google.auto.value.AutoValue to com.google.errorprone.bugpatterns.StaticImports.StaticImportInfo", "operations": ["UPD QualifiedName: com.google.auto.value.AutoValue from com.google.auto.value.AutoValue to com.google.errorprone.bugpatterns.StaticImports.StaticImportInfo"]}, {"root": "UPDATE from StaticTypeImportInfo to StaticImportInfo", "operations": ["UPD SimpleName: StaticTypeImportInfo from StaticTypeImportInfo to StaticImportInfo", "UPD SimpleType: StaticTypeImportInfo from StaticTypeImportInfo to StaticImportInfo"]}, {"root": "INS InfixExpression: || to IfStatement at 0", "operations": ["INS InfixExpression: || to IfStatement at 0", "INS SimpleName: member to MethodInvocation at 1", "INS SimpleName: isPresent to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: || at 1", "INS SimpleName: importInfo to MethodInvocation at 0"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: == to InfixExpression: || at 0"]}, {"root": "UPDATE from StaticTypeImportInfo to StaticImports", "operations": ["UPD SimpleName: StaticTypeImportInfo from StaticTypeImportInfo to StaticImports"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.sun.tools.javac.code.Type", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: javax.annotation.Nullable"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL VariableDeclarationStatement", "DEL TextElement: Represents a static single-type import.", "DEL TagElement", "DEL SimpleName: getQualifiedIdentifier", "DEL SimpleName: StaticTypeImportInfo", "DEL SimpleName: type", "DEL SimpleType: StaticTypeImportInfo", "DEL TextElement:  otherwise, e.g. because the import is non-static, or an on-demand", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: tree", "DEL TagElement: @return", "DEL SimpleType: String", "DEL SimpleName: AutoValue", "DEL SimpleType: Type", "DEL TextElement:  null", "DEL SingleVariableDeclaration", "DEL SimpleName: erasure", "DEL Javadoc", "DEL TextElement: Returns ", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL IfStatement", "DEL TextElement: Returns a ", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL Javadoc", "DEL SimpleName: canonicalName", "DEL VariableDeclarationStatement", "DEL Block", "DEL Block", "DEL NullLiteral", "DEL MethodDeclaration", "DEL TagElement: @return", "DEL SimpleName: importedName", "DEL IfStatement", "DEL SimpleName: canonicalName", "DEL SimpleType: String", "DEL TextElement: Builds the canonical import statement for the type. ", "DEL SingleVariableDeclaration", "DEL TextElement: import, or statically imports a field or method.", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: String", "DEL SimpleName: Nullable", "DEL Block", "DEL SimpleName: String", "DEL Block", "DEL SimpleType: Type", "DEL Javadoc", "DEL SimpleName: tryCreate", "DEL SimpleName: isStatic", "DEL TagElement: @link", "DEL ReturnStatement", "DEL SimpleName: result", "DEL SimpleName: canonicalName", "DEL Block", "DEL MarkerAnnotation", "DEL ReturnStatement", "DEL SimpleName: getTypes", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Modifier: abstract", "DEL TextElement:  if the given import is a static single-type import.", "DEL MethodInvocation", "DEL SimpleName: result", "DEL MethodDeclaration", "DEL Javadoc", "DEL SimpleType: VisitorState", "DEL PrefixExpression: !", "DEL SimpleName: ImportTree", "DEL Modifier: abstract", "DEL SimpleName: state", "DEL SimpleType: AutoValue_UnnecessaryStaticImport_StaticTypeImportInfo", "DEL Modifier: static", "DEL SimpleName: getTypeFromString", "DEL TextElement:  the fully-qualified canonical name of the type ", "DEL MethodInvocation", "DEL SimpleName: tree", "DEL NullLiteral", "DEL SimpleName: canonicalName", "DEL SimpleName: Type", "DEL TextElement:  the imported type ", "DEL MethodInvocation", "DEL NullLiteral", "DEL MethodInvocation", "DEL SimpleName: importStatement", "DEL TextElement: type matches the scopes it was declared in.", "DEL SimpleName: VisitorState", "DEL SimpleName: tree", "DEL SimpleName: AutoValue_UnnecessaryStaticImport_StaticTypeImportInfo", "DEL Modifier: abstract", "DEL SimpleName: String", "DEL SimpleType: String", "DEL ReturnStatement", "DEL ReturnStatement", "DEL SimpleName: toString", "DEL Modifier: abstract", "DEL InfixExpression: ==", "DEL SimpleName: importedName", "DEL VariableDeclarationFragment", "DEL Block", "DEL Javadoc", "DEL PrimitiveType: boolean", "DEL TagElement", "DEL SimpleName: String", "DEL StringLiteral: \"import %s;\"", "DEL TagElement", "DEL SimpleName: StaticTypeImportInfo", "DEL TagElement: @code", "DEL Javadoc", "DEL SimpleName: canonicalName", "DEL MarkerAnnotation", "DEL SimpleName: state", "DEL SimpleName: importedName", "DEL ReturnStatement", "DEL SimpleName: result", "DEL SimpleName: String", "DEL SimpleName: result", "DEL Modifier: static", "DEL SimpleName: state", "DEL SimpleName: importedName", "DEL TagElement: @return", "DEL SimpleName: isCanonical", "DEL SimpleName: String", "DEL SimpleName: format", "DEL SimpleName: Type", "DEL TypeDeclaration: class", "DEL MethodInvocation", "DEL SimpleName: equals", "DEL ReturnStatement", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL Javadoc", "DEL SimpleType: String", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL TagElement", "DEL SimpleType: ImportTree", "DEL SimpleName: StaticTypeImportInfo", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL SimpleName: toString", "DEL NullLiteral", "DEL TextElement:  the fully qualified name used to import the type (possibly non-canonical) ", "DEL TextElement: Returns true if the import is canonical, i.e. the fully qualified name used to import the", "DEL SimpleName: importedName", "DEL SimpleName: canonicalName", "DEL MethodDeclaration"]}]}}, {"UnnecessaryStaticImport_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(106) at 8", "Update QualifiedName: com.google.auto.value.AutoValue(8) to com.google.errorprone.bugpatterns.StaticImports.StaticImportInfo", "Update SimpleType: StaticTypeImportInfo(74) to StaticImportInfo", "Insert InfixExpression: ||(87) into IfStatement(91) at 0", "Update SimpleName: StaticTypeImportInfo(73) to StaticImportInfo", "Move InfixExpression: ==(85) into InfixExpression: ||(87) at 0", "Insert MethodInvocation(86) into InfixExpression: ||(87) at 1", "Update SimpleName: StaticTypeImportInfo(76) to StaticImports", "Insert MethodInvocation(84) into MethodInvocation(86) at 0", "Insert SimpleName: isPresent(85) into MethodInvocation(86) at 1", "Insert SimpleName: importInfo(82) into MethodInvocation(84) at 0", "Insert SimpleName: member(83) into MethodInvocation(84) at 1", "Delete QualifiedName: com.sun.tools.javac.code.Type(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: javax.annotation.Nullable(24)", "Delete ImportDeclaration(25)", "Delete TextElement: Represents a static single-type import.(103)", "Delete TagElement(104)", "Delete Javadoc(105)", "Delete SimpleName: AutoValue(106)", "Delete MarkerAnnotation(107)", "Delete Modifier: abstract(108)", "Delete Modifier: static(109)", "Delete SimpleName: StaticTypeImportInfo(110)", "Delete TextElement:  the imported type (111)", "Delete TagElement: @return(112)", "Delete Javadoc(113)", "Delete Modifier: abstract(114)", "Delete SimpleName: Type(115)", "Delete SimpleType: Type(116)", "Delete SimpleName: type(117)", "Delete MethodDeclaration(118)", "Delete TextElement:  the fully qualified name used to import the type (possibly non-canonical) (119)", "Delete TagElement: @return(120)", "Delete Javadoc(121)", "Delete Modifier: abstract(122)", "Delete SimpleName: String(123)", "Delete SimpleType: String(124)", "Delete SimpleName: importedName(125)", "Delete MethodDeclaration(126)", "Delete TextElement:  the fully-qualified canonical name of the type (127)", "Delete TagElement: @return(128)", "Delete Javadoc(129)", "Delete Modifier: abstract(130)", "Delete SimpleName: String(131)", "Delete SimpleType: String(132)", "Delete SimpleName: canonicalName(133)", "Delete MethodDeclaration(134)", "Delete TextElement: Returns true if the import is canonical, i.e. the fully qualified name used to import the(135)", "Delete TextElement: type matches the scopes it was declared in.(136)", "Delete TagElement(137)", "Delete Javadoc(138)", "Delete PrimitiveType: boolean(139)", "Delete SimpleName: isCanonical(140)", "Delete SimpleName: canonicalName(141)", "Delete MethodInvocation(142)", "Delete SimpleName: equals(143)", "Delete SimpleName: importedName(144)", "Delete MethodInvocation(145)", "Delete MethodInvocation(146)", "Delete ReturnStatement(147)", "Delete Block(148)", "Delete MethodDeclaration(149)", "Delete TextElement: Builds the canonical import statement for the type. (150)", "Delete TagElement(151)", "Delete Javadoc(152)", "Delete SimpleName: String(153)", "Delete SimpleType: String(154)", "Delete SimpleName: importStatement(155)", "Delete SimpleName: String(156)", "Delete SimpleName: format(157)", "Delete StringLiteral: \"import %s;\"(158)", "Delete SimpleName: canonicalName(159)", "Delete MethodInvocation(160)", "Delete MethodInvocation(161)", "Delete ReturnStatement(162)", "Delete Block(163)", "Delete MethodDeclaration(164)", "Delete TextElement: Returns a (165)", "Delete SimpleName: StaticTypeImportInfo(166)", "Delete TagElement: @link(167)", "Delete TextElement:  if the given import is a static single-type import.(168)", "Delete TextElement: Returns (169)", "Delete TextElement:  null(170)", "Delete TagElement: @code(171)", "Delete TextElement:  otherwise, e.g. because the import is non-static, or an on-demand(172)", "Delete TextElement: import, or statically imports a field or method.(173)", "Delete TagElement(174)", "Delete Javadoc(175)", "Delete SimpleName: Nullable(176)", "Delete MarkerAnnotation(177)", "Delete Modifier: static(178)", "Delete SimpleName: StaticTypeImportInfo(179)", "Delete SimpleType: StaticTypeImportInfo(180)", "Delete SimpleName: tryCreate(181)", "Delete SimpleName: ImportTree(182)", "Delete SimpleType: ImportTree(183)", "Delete SimpleName: tree(184)", "Delete SingleVariableDeclaration(185)", "Delete SimpleName: VisitorState(186)", "Delete SimpleType: VisitorState(187)", "Delete SimpleName: state(188)", "Delete SingleVariableDeclaration(189)", "Delete SimpleName: tree(190)", "Delete SimpleName: isStatic(191)", "Delete MethodInvocation(192)", "Delete PrefixExpression: !(193)", "Delete NullLiteral(194)", "Delete ReturnStatement(195)", "Delete Block(196)", "Delete IfStatement(197)", "Delete SimpleName: String(198)", "Delete SimpleType: String(199)", "Delete SimpleName: importedName(200)", "Delete SimpleName: tree(201)", "Delete SimpleName: getQualifiedIdentifier(202)", "Delete MethodInvocation(203)", "Delete SimpleName: toString(204)", "Delete MethodInvocation(205)", "Delete VariableDeclarationFragment(206)", "Delete VariableDeclarationStatement(207)", "Delete SimpleName: Type(208)", "Delete SimpleType: Type(209)", "Delete SimpleName: result(210)", "Delete SimpleName: state(211)", "Delete SimpleName: getTypeFromString(212)", "Delete SimpleName: importedName(213)", "Delete MethodInvocation(214)", "Delete VariableDeclarationFragment(215)", "Delete VariableDeclarationStatement(216)", "Delete SimpleName: result(217)", "Delete NullLiteral(218)", "Delete InfixExpression: ==(219)", "Delete NullLiteral(220)", "Delete ReturnStatement(221)", "Delete Block(222)", "Delete IfStatement(223)", "Delete SimpleName: String(224)", "Delete SimpleType: String(225)", "Delete SimpleName: canonicalName(226)", "Delete SimpleName: state(227)", "Delete SimpleName: getTypes(228)", "Delete MethodInvocation(229)", "Delete SimpleName: erasure(230)", "Delete SimpleName: result(231)", "Delete MethodInvocation(232)", "Delete SimpleName: toString(233)", "Delete MethodInvocation(234)", "Delete VariableDeclarationFragment(235)", "Delete VariableDeclarationStatement(236)", "Delete SimpleName: canonicalName(237)", "Delete NullLiteral(238)", "Delete InfixExpression: ==(239)", "Delete NullLiteral(240)", "Delete ReturnStatement(241)", "Delete Block(242)", "Delete IfStatement(243)", "Delete SimpleName: AutoValue_UnnecessaryStaticImport_StaticTypeImportInfo(244)", "Delete SimpleType: AutoValue_UnnecessaryStaticImport_StaticTypeImportInfo(245)", "Delete SimpleName: result(246)", "Delete SimpleName: importedName(247)", "Delete SimpleName: canonicalName(248)", "Delete ClassInstanceCreation(249)", "Delete ReturnStatement(250)", "Delete Block(251)", "Delete MethodDeclaration(252)", "Delete TypeDeclaration: class(253)"]}}, {"BuiltInCheckerSuppliers_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 70", "operations": ["INS ImportDeclaration to CompilationUnit at 70", "INS QualifiedName: com.google.errorprone.bugpatterns.NonCanonicalStaticMemberImport to ImportDeclaration at 0"]}, {"root": "INS TypeLiteral to MethodInvocation at 35", "operations": ["INS SimpleName: NonCanonicalStaticMemberImport to SimpleType: NonCanonicalStaticMemberImport at 0", "INS SimpleType: NonCanonicalStaticMemberImport to TypeLiteral at 0", "INS TypeLiteral to MethodInvocation at 35"]}]}}, {"BuiltInCheckerSuppliers_diff": {"operations": ["Insert ImportDeclaration(141) into CompilationUnit(730) at 70", "Insert QualifiedName: com.google.errorprone.bugpatterns.NonCanonicalStaticMemberImport(140) into ImportDeclaration(141) at 0", "Insert TypeLiteral(679) into MethodInvocation(722) at 35", "Insert SimpleType: NonCanonicalStaticMemberImport(678) into TypeLiteral(679) at 0", "Insert SimpleName: NonCanonicalStaticMemberImport(677) into SimpleType: NonCanonicalStaticMemberImport(678) at 0"]}}], "commit_stats": [{"total_files": 7, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}