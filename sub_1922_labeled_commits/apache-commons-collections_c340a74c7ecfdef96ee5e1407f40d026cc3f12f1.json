{"application": "apache-commons-collections", "csha": "c340a74c7ecfdef96ee5e1407f40d026cc3f12f1", "files": [{"SynchronizedList_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.collections.list", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Collection", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.List", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.ListIterator"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.commons.collections.collection.SynchronizedCollection"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Modifier: final", "DEL PrimitiveType: int", "DEL ReturnStatement", "DEL SimpleName: list", "DEL Modifier: final", "DEL SimpleName: index", "DEL PrimitiveType: int", "DEL SingleVariableDeclaration", "DEL SimpleType: SynchronizedList", "DEL SimpleName: addAll", "DEL TextElement: ListIterator it = coll.listIterator(3);", "DEL SimpleName: T", "DEL Modifier: public", "DEL Modifier: public", "DEL SynchronizedStatement", "DEL Modifier: private", "DEL Block", "DEL Block", "DEL FieldDeclaration", "DEL Block", "DEL SimpleName: SynchronizedList", "DEL SimpleType: List", "DEL Javadoc", "DEL SimpleName: E", "DEL MethodInvocation", "DEL Modifier: final", "DEL ParameterizedType: SynchronizedList<T>", "DEL SynchronizedStatement", "DEL Block", "DEL MethodInvocation", "DEL TypeParameter", "DEL SimpleName: T", "DEL SimpleType: Object", "DEL SimpleName: list", "DEL SimpleName: coll", "DEL WildcardType: ? extends E", "DEL SimpleName: List", "DEL SynchronizedStatement", "DEL MethodInvocation", "DEL TextElement:  an iterator that must be manually synchronized on the collection", "DEL ReturnStatement", "DEL Modifier: public", "DEL SimpleName: E", "DEL SimpleName: E", "DEL CastExpression", "DEL SimpleName: remove", "DEL SimpleName: object", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SimpleName: list", "DEL TextElement:   the list to decorate, must not be null", "DEL Block", "DEL SimpleType: E", "DEL SingleVariableDeclaration", "DEL TagElement", "DEL SimpleName: object", "DEL SimpleName: E", "DEL SimpleType: E", "DEL SimpleName: index", "DEL SimpleName: index", "DEL SynchronizedStatement", "DEL SimpleName: synchronizedList", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL TextElement: // do stuff with iterator", "DEL SimpleName: index", "DEL SingleVariableDeclaration", "DEL TextElement: Methods are synchronized, then forwarded to the decorated list.", "DEL PrimitiveType: int", "DEL ClassInstanceCreation", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL TagElement", "DEL SimpleName: index", "DEL SimpleName: SynchronizedList", "DEL SimpleName: List", "DEL SimpleName: ListIterator", "DEL SimpleName: collection", "DEL MethodDeclaration", "DEL SimpleName: lock", "DEL Block", "DEL SimpleName: T", "DEL SimpleName: indexOf", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL Modifier: public", "DEL PrimitiveType: int", "DEL SimpleType: E", "DEL SimpleName: index", "DEL TextElement:  $Id$", "DEL Javadoc", "DEL Modifier: final", "DEL SimpleName: E", "DEL TagElement: @param", "DEL SimpleName: list", "DEL SingleVariableDeclaration", "DEL SimpleType: E", "DEL Modifier: static", "DEL Modifier: final", "DEL Modifier: final", "DEL SimpleName: getList", "DEL SimpleName: listIterator", "DEL NumberLiteral: 1403835447328619437L", "DEL SimpleType: List", "DEL SimpleName: index", "DEL TagElement: @throws", "DEL SimpleName: Object", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: list", "DEL SimpleName: listIterator", "DEL SimpleName: List", "DEL ReturnStatement", "DEL Modifier: public", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: lock", "DEL SimpleName: T", "DEL SimpleName: getList", "DEL Modifier: final", "DEL ParameterizedType: List<E>", "DEL Modifier: final", "DEL MethodDeclaration", "DEL TextElement: This class is Serializable from Commons Collections 3.1.", "DEL VariableDeclarationFragment", "DEL TagElement: @throws", "DEL SimpleName: getList", "DEL SimpleName: lock", "DEL Modifier: final", "DEL TextElement: synchronized (coll) {", "DEL SimpleName: get", "DEL SimpleName: set", "DEL TagElement: @param", "DEL MethodInvocation", "DEL ParameterizedType: Collection<? extends E>", "DEL SimpleName: List", "DEL ReturnStatement", "DEL Modifier: final", "DEL ParameterizedType: SynchronizedList<E>", "DEL SimpleType: List", "DEL Modifier: protected", "DEL SimpleType: E", "DEL TagElement", "DEL TagElement: @return", "DEL Block", "DEL SimpleName: object", "DEL ReturnStatement", "DEL SimpleType: Object", "DEL SynchronizedStatement", "DEL SimpleType: Object", "DEL MethodDeclaration", "DEL TextElement:   the list to decorate, must not be null", "DEL SimpleType: T", "DEL TextElement:  if list is null", "DEL TagElement: @param", "DEL SimpleType: List", "DEL SimpleType: E", "DEL SimpleType: List", "DEL Block", "DEL PrimitiveType: long", "DEL ParameterizedType: ListIterator<E>", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL TextElement: }", "DEL SimpleType: E", "DEL SimpleName: E", "DEL Modifier: final", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL TextElement: Gets the decorated list.", "DEL SimpleName: indexOf", "DEL TextElement: ListIterator it = coll.listIterator();", "DEL Modifier: public", "DEL TextElement: <pre>", "DEL SimpleName: SynchronizedCollection", "DEL TagElement: @param", "DEL SuperConstructorInvocation", "DEL SimpleName: list", "DEL MethodInvocation", "DEL Block", "DEL TextElement: Iterators must be manually synchronized.", "DEL MethodDeclaration", "DEL Block", "DEL TextElement: <p>", "DEL TypeDeclaration: class", "DEL TextElement:  an iterator that must be manually synchronized on the collection", "DEL SimpleName: lock", "DEL TagElement", "DEL SimpleName: List", "DEL SimpleType: T", "DEL TextElement:  if list is null", "DEL SimpleName: Collection", "DEL MethodDeclaration", "DEL SynchronizedStatement", "DEL SimpleType: E", "DEL SimpleName: E", "DEL SimpleName: getList", "DEL SuperConstructorInvocation", "DEL TextElement:   the lock to use, must not be null", "DEL Modifier: final", "DEL SimpleType: E", "DEL SimpleName: index", "DEL ParameterizedType: List<E>", "DEL SimpleType: E", "DEL Javadoc", "DEL SimpleName: set", "DEL PrimitiveType: boolean", "DEL SimpleName: add", "DEL TextElement: Constructor that wraps (not copies).", "DEL ClassInstanceCreation", "DEL Modifier: protected", "DEL Modifier: final", "DEL SimpleName: get", "DEL Modifier: public", "DEL SimpleName: add", "DEL SimpleType: E", "DEL SimpleName: getList", "DEL SimpleType: ListIterator", "DEL SimpleName: object", "DEL SingleVariableDeclaration", "DEL SimpleName: subList", "DEL SimpleType: E", "DEL TagElement: @version", "DEL SynchronizedStatement", "DEL ParameterizedType: List<E>", "DEL SimpleName: List", "DEL SimpleName: index", "DEL SimpleName: serialVersionUID", "DEL MethodInvocation", "DEL SimpleType: Collection", "DEL SimpleName: list", "DEL SimpleName: object", "DEL MethodDeclaration", "DEL TagElement: @return", "DEL SimpleName: E", "DEL TagElement", "DEL SimpleName: E", "DEL SimpleName: getList", "DEL SimpleName: getList", "DEL SimpleType: SynchronizedList", "DEL Modifier: static", "DEL SimpleName: list", "DEL Modifier: final", "DEL TextElement: <", "DEL MethodDeclaration", "DEL TextElement:  the decorated list", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL Block", "DEL MethodInvocation", "DEL SimpleType: E", "DEL SimpleName: list", "DEL TextElement: Constructor that wraps (not copies).", "DEL Modifier: final", "DEL MethodInvocation", "DEL SimpleName: getList", "DEL Block", "DEL SimpleName: index", "DEL SimpleName: listIterator", "DEL ParameterizedType: List<E>", "DEL Modifier: public", "DEL SimpleName: E", "DEL SimpleName: E", "DEL Block", "DEL SimpleName: lock", "DEL SimpleType: E", "DEL SimpleName: lock", "DEL TextElement: Decorates another <code>List</code> to synchronize its behaviour", "DEL MethodInvocation", "DEL SimpleName: fromIndex", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL PrimitiveType: int", "DEL SimpleName: index", "DEL ExpressionStatement", "DEL SimpleName: getList", "DEL SimpleType: List", "DEL SimpleName: Object", "DEL SimpleName: T", "DEL MethodDeclaration", "DEL PrimitiveType: int", "DEL SimpleName: SynchronizedList", "DEL SimpleName: E", "DEL TagElement: @param", "DEL TextElement: >", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL SimpleName: object", "DEL SimpleName: E", "DEL TagElement: @throws", "DEL ReturnStatement", "DEL PrefixExpression: -", "DEL Modifier: public", "DEL ParameterizedType: List<T>", "DEL SimpleName: Object", "DEL SimpleName: lock", "DEL SimpleName: lock", "DEL TextElement: for a multi-threaded environment.", "DEL Block", "DEL TextElement:   index of first element to be returned by this list iterator", "DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL Block", "DEL TagElement: @param", "DEL SimpleType: E", "DEL TagElement", "DEL Javadoc", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SynchronizedStatement", "DEL TextElement: // do stuff with iterator", "DEL SimpleName: getList", "DEL ParameterizedType: SynchronizedCollection<E>", "DEL Javadoc", "DEL PrimitiveType: int", "DEL Javadoc", "DEL SimpleName: List", "DEL ReturnStatement", "DEL Modifier: public", "DEL ParameterizedType: ListIterator<E>", "DEL MethodInvocation", "DEL SimpleName: E", "DEL ReturnStatement", "DEL SimpleType: E", "DEL SimpleType: T", "DEL SimpleName: remove", "DEL ParameterizedType: List<E>", "DEL TextElement:  a new synchronized list", "DEL SimpleName: IllegalArgumentException", "DEL SimpleName: SynchronizedList", "DEL SimpleName: coll", "DEL Block", "DEL SimpleName: fromIndex", "DEL SimpleName: getList", "DEL MethodDeclaration", "DEL SimpleName: addAll", "DEL SimpleName: object", "DEL TextElement:  if list is null", "DEL Block", "DEL TagElement", "DEL TextElement: synchronized (coll) {", "DEL SimpleName: listIterator", "DEL SimpleName: SynchronizedList", "DEL SimpleName: lock", "DEL SimpleType: ListIterator", "DEL SingleVariableDeclaration", "DEL SimpleName: E", "DEL TagElement: @since", "DEL Modifier: final", "DEL SimpleName: IllegalArgumentException", "DEL SimpleName: lock", "DEL ParameterizedType: SynchronizedList<T>", "DEL SimpleName: list", "DEL SimpleName: E", "DEL SimpleType: List", "DEL ParameterizedType: List<E>", "DEL SimpleName: object", "DEL MethodInvocation", "DEL SimpleType: SynchronizedCollection", "DEL SimpleName: E", "DEL SimpleName: toIndex", "DEL Block", "DEL TypeParameter", "DEL SimpleName: lastIndexOf", "DEL SimpleType: SynchronizedList", "DEL TextElement: Iterators must be manually synchronized.", "DEL ParameterizedType: List<E>", "DEL SimpleName: lock", "DEL SimpleName: index", "DEL PrimitiveType: int", "DEL SimpleName: E", "DEL SimpleName: SynchronizedList", "DEL VariableDeclarationFragment", "DEL Modifier: final", "DEL TextElement:  3.0", "DEL Modifier: public", "DEL MethodInvocation", "DEL Modifier: protected", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: List", "DEL SimpleName: subList", "DEL TextElement: <pre>", "DEL SimpleName: toIndex", "DEL Block", "DEL TagElement: @return", "DEL SimpleName: index", "DEL TextElement: <p>", "DEL Modifier: final", "DEL Block", "DEL SimpleName: list", "DEL TextElement:  the type of the elements in the list", "DEL SimpleName: lock", "DEL MethodInvocation", "DEL SimpleName: ListIterator", "DEL MethodInvocation", "DEL TextElement: Serialization version ", "DEL TagElement", "DEL MethodDeclaration", "DEL SimpleName: lastIndexOf", "DEL TagElement: @return", "DEL TextElement: Factory method to create a synchronized list.", "DEL PrimitiveType: int", "DEL SingleVariableDeclaration", "DEL TextElement:   the list to decorate, must not be null", "DEL SimpleName: IllegalArgumentException", "DEL SingleVariableDeclaration", "DEL TextElement: }", "DEL Javadoc", "DEL SimpleType: List", "DEL SimpleType: E"]}]}}, {"SynchronizedList_diff": {"operations": ["Delete QualifiedName: org.apache.commons.collections.list(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.util.Collection(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.util.List(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.util.ListIterator(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.commons.collections.collection.SynchronizedCollection(8)", "Delete ImportDeclaration(9)", "Delete TextElement: Decorates another <code>List</code> to synchronize its behaviour(10)", "Delete TextElement: for a multi-threaded environment.(11)", "Delete TextElement: <p>(12)", "Delete TextElement: Methods are synchronized, then forwarded to the decorated list.(13)", "Delete TextElement: <p>(14)", "Delete TextElement: This class is Serializable from Commons Collections 3.1.(15)", "Delete TagElement(16)", "Delete TextElement:  3.0(17)", "Delete TagElement: @since(18)", "Delete TextElement:  $Id$(19)", "Delete TagElement: @version(20)", "Delete Javadoc(21)", "Delete Modifier: public(22)", "Delete SimpleName: SynchronizedList(23)", "Delete SimpleName: E(24)", "Delete TypeParameter(25)", "Delete SimpleName: SynchronizedCollection(26)", "Delete SimpleType: SynchronizedCollection(27)", "Delete SimpleName: E(28)", "Delete SimpleType: E(29)", "Delete ParameterizedType: SynchronizedCollection<E>(30)", "Delete SimpleName: List(31)", "Delete SimpleType: List(32)", "Delete SimpleName: E(33)", "Delete SimpleType: E(34)", "Delete ParameterizedType: List<E>(35)", "Delete TextElement: Serialization version (36)", "Delete TagElement(37)", "Delete Javadoc(38)", "Delete Modifier: private(39)", "Delete Modifier: static(40)", "Delete Modifier: final(41)", "Delete PrimitiveType: long(42)", "Delete SimpleName: serialVersionUID(43)", "Delete NumberLiteral: 1403835447328619437L(44)", "Delete PrefixExpression: -(45)", "Delete VariableDeclarationFragment(46)", "Delete FieldDeclaration(47)", "Delete TextElement: Factory method to create a synchronized list.(48)", "Delete TagElement(49)", "Delete TextElement: <(50)", "Delete SimpleName: T(51)", "Delete TextElement: >(52)", "Delete TextElement:  the type of the elements in the list(53)", "Delete TagElement: @param(54)", "Delete SimpleName: list(55)", "Delete TextElement:   the list to decorate, must not be null(56)", "Delete TagElement: @param(57)", "Delete TextElement:  a new synchronized list(58)", "Delete TagElement: @return(59)", "Delete SimpleName: IllegalArgumentException(60)", "Delete TextElement:  if list is null(61)", "Delete TagElement: @throws(62)", "Delete Javadoc(63)", "Delete Modifier: public(64)", "Delete Modifier: static(65)", "Delete SimpleName: T(66)", "Delete TypeParameter(67)", "Delete SimpleName: SynchronizedList(68)", "Delete SimpleType: SynchronizedList(69)", "Delete SimpleName: T(70)", "Delete SimpleType: T(71)", "Delete ParameterizedType: SynchronizedList<T>(72)", "Delete SimpleName: synchronizedList(73)", "Delete Modifier: final(74)", "Delete SimpleName: List(75)", "Delete SimpleType: List(76)", "Delete SimpleName: T(77)", "Delete SimpleType: T(78)", "Delete ParameterizedType: List<T>(79)", "Delete SimpleName: list(80)", "Delete SingleVariableDeclaration(81)", "Delete SimpleName: SynchronizedList(82)", "Delete SimpleType: SynchronizedList(83)", "Delete SimpleName: T(84)", "Delete SimpleType: T(85)", "Delete ParameterizedType: SynchronizedList<T>(86)", "Delete SimpleName: list(87)", "Delete ClassInstanceCreation(88)", "Delete ReturnStatement(89)", "Delete Block(90)", "Delete MethodDeclaration(91)", "Delete TextElement: Constructor that wraps (not copies).(92)", "Delete TagElement(93)", "Delete SimpleName: list(94)", "Delete TextElement:   the list to decorate, must not be null(95)", "Delete TagElement: @param(96)", "Delete SimpleName: IllegalArgumentException(97)", "Delete TextElement:  if list is null(98)", "Delete TagElement: @throws(99)", "Delete Javadoc(100)", "Delete Modifier: protected(101)", "Delete SimpleName: SynchronizedList(102)", "Delete Modifier: final(103)", "Delete SimpleName: List(104)", "Delete SimpleType: List(105)", "Delete SimpleName: E(106)", "Delete SimpleType: E(107)", "Delete ParameterizedType: List<E>(108)", "Delete SimpleName: list(109)", "Delete SingleVariableDeclaration(110)", "Delete SimpleName: list(111)", "Delete SuperConstructorInvocation(112)", "Delete Block(113)", "Delete MethodDeclaration(114)", "Delete TextElement: Constructor that wraps (not copies).(115)", "Delete TagElement(116)", "Delete SimpleName: list(117)", "Delete TextElement:   the list to decorate, must not be null(118)", "Delete TagElement: @param(119)", "Delete SimpleName: lock(120)", "Delete TextElement:   the lock to use, must not be null(121)", "Delete TagElement: @param(122)", "Delete SimpleName: IllegalArgumentException(123)", "Delete TextElement:  if list is null(124)", "Delete TagElement: @throws(125)", "Delete Javadoc(126)", "Delete Modifier: protected(127)", "Delete SimpleName: SynchronizedList(128)", "Delete Modifier: final(129)", "Delete SimpleName: List(130)", "Delete SimpleType: List(131)", "Delete SimpleName: E(132)", "Delete SimpleType: E(133)", "Delete ParameterizedType: List<E>(134)", "Delete SimpleName: list(135)", "Delete SingleVariableDeclaration(136)", "Delete Modifier: final(137)", "Delete SimpleName: Object(138)", "Delete SimpleType: Object(139)", "Delete SimpleName: lock(140)", "Delete SingleVariableDeclaration(141)", "Delete SimpleName: list(142)", "Delete SimpleName: lock(143)", "Delete SuperConstructorInvocation(144)", "Delete Block(145)", "Delete MethodDeclaration(146)", "Delete TextElement: Gets the decorated list.(147)", "Delete TagElement(148)", "Delete TextElement:  the decorated list(149)", "Delete TagElement: @return(150)", "Delete Javadoc(151)", "Delete Modifier: protected(152)", "Delete SimpleName: List(153)", "Delete SimpleType: List(154)", "Delete SimpleName: E(155)", "Delete SimpleType: E(156)", "Delete ParameterizedType: List<E>(157)", "Delete SimpleName: getList(158)", "Delete SimpleName: List(159)", "Delete SimpleType: List(160)", "Delete SimpleName: E(161)", "Delete SimpleType: E(162)", "Delete ParameterizedType: List<E>(163)", "Delete SimpleName: collection(164)", "Delete CastExpression(165)", "Delete ReturnStatement(166)", "Delete Block(167)", "Delete MethodDeclaration(168)", "Delete Modifier: public(169)", "Delete PrimitiveType: void(170)", "Delete SimpleName: add(171)", "Delete Modifier: final(172)", "Delete PrimitiveType: int(173)", "Delete SimpleName: index(174)", "Delete SingleVariableDeclaration(175)", "Delete Modifier: final(176)", "Delete SimpleName: E(177)", "Delete SimpleType: E(178)", "Delete SimpleName: object(179)", "Delete SingleVariableDeclaration(180)", "Delete SimpleName: lock(181)", "Delete SimpleName: getList(182)", "Delete MethodInvocation(183)", "Delete SimpleName: add(184)", "Delete SimpleName: index(185)", "Delete SimpleName: object(186)", "Delete MethodInvocation(187)", "Delete ExpressionStatement(188)", "Delete Block(189)", "Delete SynchronizedStatement(190)", "Delete Block(191)", "Delete MethodDeclaration(192)", "Delete Modifier: public(193)", "Delete PrimitiveType: boolean(194)", "Delete SimpleName: addAll(195)", "Delete Modifier: final(196)", "Delete PrimitiveType: int(197)", "Delete SimpleName: index(198)", "Delete SingleVariableDeclaration(199)", "Delete Modifier: final(200)", "Delete SimpleName: Collection(201)", "Delete SimpleType: Collection(202)", "Delete SimpleName: E(203)", "Delete SimpleType: E(204)", "Delete WildcardType: ? extends E(205)", "Delete ParameterizedType: Collection<? extends E>(206)", "Delete SimpleName: coll(207)", "Delete SingleVariableDeclaration(208)", "Delete SimpleName: lock(209)", "Delete SimpleName: getList(210)", "Delete MethodInvocation(211)", "Delete SimpleName: addAll(212)", "Delete SimpleName: index(213)", "Delete SimpleName: coll(214)", "Delete MethodInvocation(215)", "Delete ReturnStatement(216)", "Delete Block(217)", "Delete SynchronizedStatement(218)", "Delete Block(219)", "Delete MethodDeclaration(220)", "Delete Modifier: public(221)", "Delete SimpleName: E(222)", "Delete SimpleType: E(223)", "Delete SimpleName: get(224)", "Delete Modifier: final(225)", "Delete PrimitiveType: int(226)", "Delete SimpleName: index(227)", "Delete SingleVariableDeclaration(228)", "Delete SimpleName: lock(229)", "Delete SimpleName: getList(230)", "Delete MethodInvocation(231)", "Delete SimpleName: get(232)", "Delete SimpleName: index(233)", "Delete MethodInvocation(234)", "Delete ReturnStatement(235)", "Delete Block(236)", "Delete SynchronizedStatement(237)", "Delete Block(238)", "Delete MethodDeclaration(239)", "Delete Modifier: public(240)", "Delete PrimitiveType: int(241)", "Delete SimpleName: indexOf(242)", "Delete Modifier: final(243)", "Delete SimpleName: Object(244)", "Delete SimpleType: Object(245)", "Delete SimpleName: object(246)", "Delete SingleVariableDeclaration(247)", "Delete SimpleName: lock(248)", "Delete SimpleName: getList(249)", "Delete MethodInvocation(250)", "Delete SimpleName: indexOf(251)", "Delete SimpleName: object(252)", "Delete MethodInvocation(253)", "Delete ReturnStatement(254)", "Delete Block(255)", "Delete SynchronizedStatement(256)", "Delete Block(257)", "Delete MethodDeclaration(258)", "Delete Modifier: public(259)", "Delete PrimitiveType: int(260)", "Delete SimpleName: lastIndexOf(261)", "Delete Modifier: final(262)", "Delete SimpleName: Object(263)", "Delete SimpleType: Object(264)", "Delete SimpleName: object(265)", "Delete SingleVariableDeclaration(266)", "Delete SimpleName: lock(267)", "Delete SimpleName: getList(268)", "Delete MethodInvocation(269)", "Delete SimpleName: lastIndexOf(270)", "Delete SimpleName: object(271)", "Delete MethodInvocation(272)", "Delete ReturnStatement(273)", "Delete Block(274)", "Delete SynchronizedStatement(275)", "Delete Block(276)", "Delete MethodDeclaration(277)", "Delete TextElement: Iterators must be manually synchronized.(278)", "Delete TextElement: <pre>(279)", "Delete TextElement: synchronized (coll) {(280)", "Delete TextElement: ListIterator it = coll.listIterator();(281)", "Delete TextElement: // do stuff with iterator(282)", "Delete TextElement: }(283)", "Delete TagElement(284)", "Delete TextElement:  an iterator that must be manually synchronized on the collection(285)", "Delete TagElement: @return(286)", "Delete Javadoc(287)", "Delete Modifier: public(288)", "Delete SimpleName: ListIterator(289)", "Delete SimpleType: ListIterator(290)", "Delete SimpleName: E(291)", "Delete SimpleType: E(292)", "Delete ParameterizedType: ListIterator<E>(293)", "Delete SimpleName: listIterator(294)", "Delete SimpleName: getList(295)", "Delete MethodInvocation(296)", "Delete SimpleName: listIterator(297)", "Delete MethodInvocation(298)", "Delete ReturnStatement(299)", "Delete Block(300)", "Delete MethodDeclaration(301)", "Delete TextElement: Iterators must be manually synchronized.(302)", "Delete TextElement: <pre>(303)", "Delete TextElement: synchronized (coll) {(304)", "Delete TextElement: ListIterator it = coll.listIterator(3);(305)", "Delete TextElement: // do stuff with iterator(306)", "Delete TextElement: }(307)", "Delete TagElement(308)", "Delete SimpleName: index(309)", "Delete TextElement:   index of first element to be returned by this list iterator(310)", "Delete TagElement: @param(311)", "Delete TextElement:  an iterator that must be manually synchronized on the collection(312)", "Delete TagElement: @return(313)", "Delete Javadoc(314)", "Delete Modifier: public(315)", "Delete SimpleName: ListIterator(316)", "Delete SimpleType: ListIterator(317)", "Delete SimpleName: E(318)", "Delete SimpleType: E(319)", "Delete ParameterizedType: ListIterator<E>(320)", "Delete SimpleName: listIterator(321)", "Delete Modifier: final(322)", "Delete PrimitiveType: int(323)", "Delete SimpleName: index(324)", "Delete SingleVariableDeclaration(325)", "Delete SimpleName: getList(326)", "Delete MethodInvocation(327)", "Delete SimpleName: listIterator(328)", "Delete SimpleName: index(329)", "Delete MethodInvocation(330)", "Delete ReturnStatement(331)", "Delete Block(332)", "Delete MethodDeclaration(333)", "Delete Modifier: public(334)", "Delete SimpleName: E(335)", "Delete SimpleType: E(336)", "Delete SimpleName: remove(337)", "Delete Modifier: final(338)", "Delete PrimitiveType: int(339)", "Delete SimpleName: index(340)", "Delete SingleVariableDeclaration(341)", "Delete SimpleName: lock(342)", "Delete SimpleName: getList(343)", "Delete MethodInvocation(344)", "Delete SimpleName: remove(345)", "Delete SimpleName: index(346)", "Delete MethodInvocation(347)", "Delete ReturnStatement(348)", "Delete Block(349)", "Delete SynchronizedStatement(350)", "Delete Block(351)", "Delete MethodDeclaration(352)", "Delete Modifier: public(353)", "Delete SimpleName: E(354)", "Delete SimpleType: E(355)", "Delete SimpleName: set(356)", "Delete Modifier: final(357)", "Delete PrimitiveType: int(358)", "Delete SimpleName: index(359)", "Delete SingleVariableDeclaration(360)", "Delete Modifier: final(361)", "Delete SimpleName: E(362)", "Delete SimpleType: E(363)", "Delete SimpleName: object(364)", "Delete SingleVariableDeclaration(365)", "Delete SimpleName: lock(366)", "Delete SimpleName: getList(367)", "Delete MethodInvocation(368)", "Delete SimpleName: set(369)", "Delete SimpleName: index(370)", "Delete SimpleName: object(371)", "Delete MethodInvocation(372)", "Delete ReturnStatement(373)", "Delete Block(374)", "Delete SynchronizedStatement(375)", "Delete Block(376)", "Delete MethodDeclaration(377)", "Delete Modifier: public(378)", "Delete SimpleName: List(379)", "Delete SimpleType: List(380)", "Delete SimpleName: E(381)", "Delete SimpleType: E(382)", "Delete ParameterizedType: List<E>(383)", "Delete SimpleName: subList(384)", "Delete Modifier: final(385)", "Delete PrimitiveType: int(386)", "Delete SimpleName: fromIndex(387)", "Delete SingleVariableDeclaration(388)", "Delete Modifier: final(389)", "Delete PrimitiveType: int(390)", "Delete SimpleName: toIndex(391)", "Delete SingleVariableDeclaration(392)", "Delete SimpleName: lock(393)", "Delete Modifier: final(394)", "Delete SimpleName: List(395)", "Delete SimpleType: List(396)", "Delete SimpleName: E(397)", "Delete SimpleType: E(398)", "Delete ParameterizedType: List<E>(399)", "Delete SimpleName: list(400)", "Delete SimpleName: getList(401)", "Delete MethodInvocation(402)", "Delete SimpleName: subList(403)", "Delete SimpleName: fromIndex(404)", "Delete SimpleName: toIndex(405)", "Delete MethodInvocation(406)", "Delete VariableDeclarationFragment(407)", "Delete VariableDeclarationStatement(408)", "Delete SimpleName: SynchronizedList(409)", "Delete SimpleType: SynchronizedList(410)", "Delete SimpleName: E(411)", "Delete SimpleType: E(412)", "Delete ParameterizedType: SynchronizedList<E>(413)", "Delete SimpleName: list(414)", "Delete SimpleName: lock(415)", "Delete ClassInstanceCreation(416)", "Delete ReturnStatement(417)", "Delete Block(418)", "Delete SynchronizedStatement(419)", "Delete Block(420)", "Delete MethodDeclaration(421)", "Delete TypeDeclaration: class(422)"]}}, {"package-info_cluster": {"actions": [{"root": "DEL TextElement: <li>Synchronized - synchronizes method access for multi-threaded environments</li>", "operations": ["DEL TextElement: <li>Synchronized - synchronizes method access for multi-threaded environments</li>"]}]}}, {"package-info_diff": {"operations": ["Delete TextElement: <li>Synchronized - synchronizes method access for multi-threaded environments</li>(15)"]}}, {"SynchronizedSet_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.collections.set", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Set"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.collections.collection.SynchronizedCollection", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: synchronizedSet", "DEL SimpleName: E", "DEL ParameterizedType: SynchronizedSet<E>", "DEL SimpleName: set", "DEL Modifier: final", "DEL SimpleName: lock", "DEL ParameterizedType: SynchronizedSet<E>", "DEL Javadoc", "DEL SimpleName: E", "DEL CastExpression", "DEL ParameterizedType: Set<E>", "DEL Block", "DEL SimpleType: Set", "DEL Javadoc", "DEL MethodDeclaration", "DEL SimpleName: E", "DEL SimpleName: E", "DEL SimpleType: SynchronizedSet", "DEL SimpleName: SynchronizedSet", "DEL TextElement: Constructor that wraps (not copies).", "DEL SimpleType: E", "DEL SimpleName: Set", "DEL Javadoc", "DEL SimpleName: set", "DEL SimpleName: set", "DEL TextElement:  if set is null", "DEL TextElement: This class is Serializable from Commons Collections 3.1.", "DEL TagElement: @throws", "DEL TagElement: @return", "DEL SimpleName: getSet", "DEL TagElement: @param", "DEL ParameterizedType: Set<E>", "DEL Block", "DEL Modifier: public", "DEL SimpleType: Set", "DEL TagElement", "DEL ParameterizedType: Set<E>", "DEL TagElement", "DEL TypeDeclaration: class", "DEL SimpleName: IllegalArgumentException", "DEL Modifier: static", "DEL ParameterizedType: SynchronizedCollection<E>", "DEL TextElement: <", "DEL SimpleType: Set", "DEL Modifier: protected", "DEL Javadoc", "DEL ReturnStatement", "DEL TypeParameter", "DEL NumberLiteral: 8304417378626543635L", "DEL Modifier: final", "DEL SimpleName: lock", "DEL ClassInstanceCreation", "DEL SimpleName: SynchronizedSet", "DEL SimpleName: Set", "DEL VariableDeclarationFragment", "DEL SimpleName: serialVersionUID", "DEL SuperConstructorInvocation", "DEL SimpleName: E", "DEL Javadoc", "DEL SimpleName: E", "DEL SimpleType: Object", "DEL TextElement:  if set is null", "DEL SimpleName: collection", "DEL SimpleName: Set", "DEL TextElement: >", "DEL SimpleName: IllegalArgumentException", "DEL TypeParameter", "DEL TextElement:  3.0", "DEL SimpleName: SynchronizedSet", "DEL SimpleType: Set", "DEL Modifier: final", "DEL TagElement", "DEL TextElement: Serialization version ", "DEL TextElement: Gets the decorated set.", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL TextElement:   the lock object to use, must not be null", "DEL TextElement:  $Id$", "DEL PrimitiveType: long", "DEL SimpleName: Set", "DEL MethodDeclaration", "DEL Modifier: final", "DEL MethodDeclaration", "DEL TextElement: Factory method to create a synchronized set.", "DEL SimpleName: set", "DEL SuperConstructorInvocation", "DEL TagElement: @throws", "DEL Block", "DEL TextElement:  the decorated set", "DEL Modifier: final", "DEL SimpleName: E", "DEL MethodDeclaration", "DEL SimpleType: E", "DEL SimpleType: E", "DEL SimpleType: Set", "DEL SimpleType: SynchronizedCollection", "DEL SimpleType: SynchronizedSet", "DEL TagElement: @throws", "DEL TagElement: @version", "DEL TagElement: @param", "DEL SimpleName: E", "DEL TagElement: @param", "DEL ParameterizedType: Set<E>", "DEL SimpleType: E", "DEL SimpleName: E", "DEL TagElement", "DEL SimpleName: set", "DEL SimpleName: E", "DEL TextElement: Constructor that wraps (not copies).", "DEL FieldDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleType: E", "DEL Modifier: private", "DEL PrefixExpression: -", "DEL TextElement:  if set is null", "DEL Block", "DEL SimpleType: E", "DEL TextElement: multi-threaded environment.", "DEL Modifier: protected", "DEL TextElement:  a new synchronized set", "DEL SimpleName: set", "DEL SimpleType: E", "DEL TagElement: @param", "DEL TextElement: <p>", "DEL SimpleName: E", "DEL TagElement", "DEL ParameterizedType: Set<E>", "DEL TextElement:   the set to decorate, must not be null", "DEL TextElement:   the set to decorate, must not be null", "DEL SimpleName: SynchronizedSet", "DEL TextElement: Methods are synchronized, then forwarded to the decorated set.", "DEL TagElement: @since", "DEL TagElement: @param", "DEL Javadoc", "DEL SimpleType: E", "DEL TextElement: Decorates another <code>Set</code> to synchronize its behaviour for a", "DEL SimpleName: set", "DEL SimpleName: SynchronizedSet", "DEL SimpleName: E", "DEL Modifier: static", "DEL TextElement:   the set to decorate, must not be null", "DEL SimpleName: lock", "DEL SimpleName: Set", "DEL TagElement", "DEL TagElement: @return", "DEL SimpleType: Set", "DEL ParameterizedType: Set<E>", "DEL SimpleName: IllegalArgumentException", "DEL SimpleName: SynchronizedCollection", "DEL SimpleName: set", "DEL SimpleName: Object", "DEL SingleVariableDeclaration", "DEL TextElement:  the element type", "DEL Modifier: public", "DEL TextElement: <p>", "DEL Modifier: protected", "DEL SimpleType: E", "DEL SingleVariableDeclaration", "DEL SimpleName: Set", "DEL SimpleName: set"]}]}}, {"SynchronizedSet_diff": {"operations": ["Delete QualifiedName: org.apache.commons.collections.set(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.util.Set(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: org.apache.commons.collections.collection.SynchronizedCollection(4)", "Delete ImportDeclaration(5)", "Delete TextElement: Decorates another <code>Set</code> to synchronize its behaviour for a(6)", "Delete TextElement: multi-threaded environment.(7)", "Delete TextElement: <p>(8)", "Delete TextElement: Methods are synchronized, then forwarded to the decorated set.(9)", "Delete TextElement: <p>(10)", "Delete TextElement: This class is Serializable from Commons Collections 3.1.(11)", "Delete TagElement(12)", "Delete TextElement:  3.0(13)", "Delete TagElement: @since(14)", "Delete TextElement:  $Id$(15)", "Delete TagElement: @version(16)", "Delete Javadoc(17)", "Delete Modifier: public(18)", "Delete SimpleName: SynchronizedSet(19)", "Delete SimpleName: E(20)", "Delete TypeParameter(21)", "Delete SimpleName: SynchronizedCollection(22)", "Delete SimpleType: SynchronizedCollection(23)", "Delete SimpleName: E(24)", "Delete SimpleType: E(25)", "Delete ParameterizedType: SynchronizedCollection<E>(26)", "Delete SimpleName: Set(27)", "Delete SimpleType: Set(28)", "Delete SimpleName: E(29)", "Delete SimpleType: E(30)", "Delete ParameterizedType: Set<E>(31)", "Delete TextElement: Serialization version (32)", "Delete TagElement(33)", "Delete Javadoc(34)", "Delete Modifier: private(35)", "Delete Modifier: static(36)", "Delete Modifier: final(37)", "Delete PrimitiveType: long(38)", "Delete SimpleName: serialVersionUID(39)", "Delete NumberLiteral: 8304417378626543635L(40)", "Delete PrefixExpression: -(41)", "Delete VariableDeclarationFragment(42)", "Delete FieldDeclaration(43)", "Delete TextElement: Factory method to create a synchronized set.(44)", "Delete TagElement(45)", "Delete TextElement: <(46)", "Delete SimpleName: E(47)", "Delete TextElement: >(48)", "Delete TextElement:  the element type(49)", "Delete TagElement: @param(50)", "Delete SimpleName: set(51)", "Delete TextElement:   the set to decorate, must not be null(52)", "Delete TagElement: @param(53)", "Delete TextElement:  a new synchronized set(54)", "Delete TagElement: @return(55)", "Delete SimpleName: IllegalArgumentException(56)", "Delete TextElement:  if set is null(57)", "Delete TagElement: @throws(58)", "Delete Javadoc(59)", "Delete Modifier: public(60)", "Delete Modifier: static(61)", "Delete SimpleName: E(62)", "Delete TypeParameter(63)", "Delete SimpleName: SynchronizedSet(64)", "Delete SimpleType: SynchronizedSet(65)", "Delete SimpleName: E(66)", "Delete SimpleType: E(67)", "Delete ParameterizedType: SynchronizedSet<E>(68)", "Delete SimpleName: synchronizedSet(69)", "Delete Modifier: final(70)", "Delete SimpleName: Set(71)", "Delete SimpleType: Set(72)", "Delete SimpleName: E(73)", "Delete SimpleType: E(74)", "Delete ParameterizedType: Set<E>(75)", "Delete SimpleName: set(76)", "Delete SingleVariableDeclaration(77)", "Delete SimpleName: SynchronizedSet(78)", "Delete SimpleType: SynchronizedSet(79)", "Delete SimpleName: E(80)", "Delete SimpleType: E(81)", "Delete ParameterizedType: SynchronizedSet<E>(82)", "Delete SimpleName: set(83)", "Delete ClassInstanceCreation(84)", "Delete ReturnStatement(85)", "Delete Block(86)", "Delete MethodDeclaration(87)", "Delete TextElement: Constructor that wraps (not copies).(88)", "Delete TagElement(89)", "Delete SimpleName: set(90)", "Delete TextElement:   the set to decorate, must not be null(91)", "Delete TagElement: @param(92)", "Delete SimpleName: IllegalArgumentException(93)", "Delete TextElement:  if set is null(94)", "Delete TagElement: @throws(95)", "Delete Javadoc(96)", "Delete Modifier: protected(97)", "Delete SimpleName: SynchronizedSet(98)", "Delete Modifier: final(99)", "Delete SimpleName: Set(100)", "Delete SimpleType: Set(101)", "Delete SimpleName: E(102)", "Delete SimpleType: E(103)", "Delete ParameterizedType: Set<E>(104)", "Delete SimpleName: set(105)", "Delete SingleVariableDeclaration(106)", "Delete SimpleName: set(107)", "Delete SuperConstructorInvocation(108)", "Delete Block(109)", "Delete MethodDeclaration(110)", "Delete TextElement: Constructor that wraps (not copies).(111)", "Delete TagElement(112)", "Delete SimpleName: set(113)", "Delete TextElement:   the set to decorate, must not be null(114)", "Delete TagElement: @param(115)", "Delete SimpleName: lock(116)", "Delete TextElement:   the lock object to use, must not be null(117)", "Delete TagElement: @param(118)", "Delete SimpleName: IllegalArgumentException(119)", "Delete TextElement:  if set is null(120)", "Delete TagElement: @throws(121)", "Delete Javadoc(122)", "Delete Modifier: protected(123)", "Delete SimpleName: SynchronizedSet(124)", "Delete Modifier: final(125)", "Delete SimpleName: Set(126)", "Delete SimpleType: Set(127)", "Delete SimpleName: E(128)", "Delete SimpleType: E(129)", "Delete ParameterizedType: Set<E>(130)", "Delete SimpleName: set(131)", "Delete SingleVariableDeclaration(132)", "Delete Modifier: final(133)", "Delete SimpleName: Object(134)", "Delete SimpleType: Object(135)", "Delete SimpleName: lock(136)", "Delete SingleVariableDeclaration(137)", "Delete SimpleName: set(138)", "Delete SimpleName: lock(139)", "Delete SuperConstructorInvocation(140)", "Delete Block(141)", "Delete MethodDeclaration(142)", "Delete TextElement: Gets the decorated set.(143)", "Delete TagElement(144)", "Delete TextElement:  the decorated set(145)", "Delete TagElement: @return(146)", "Delete Javadoc(147)", "Delete Modifier: protected(148)", "Delete SimpleName: Set(149)", "Delete SimpleType: Set(150)", "Delete SimpleName: E(151)", "Delete SimpleType: E(152)", "Delete ParameterizedType: Set<E>(153)", "Delete SimpleName: getSet(154)", "Delete SimpleName: Set(155)", "Delete SimpleType: Set(156)", "Delete SimpleName: E(157)", "Delete SimpleType: E(158)", "Delete ParameterizedType: Set<E>(159)", "Delete SimpleName: collection(160)", "Delete CastExpression(161)", "Delete ReturnStatement(162)", "Delete Block(163)", "Delete MethodDeclaration(164)", "Delete TypeDeclaration: class(165)"]}}, {"SynchronizedSortedSet_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.collections.set", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Comparator", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.SortedSet"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.commons.collections.collection.SynchronizedCollection", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SingleVariableDeclaration", "DEL TextElement:  if set is null", "DEL VariableDeclarationFragment", "DEL SimpleType: E", "DEL SimpleName: E", "DEL Modifier: protected", "DEL SimpleName: SortedSet", "DEL SimpleName: first", "DEL ParameterizedType: SortedSet<E>", "DEL SimpleName: set", "DEL SimpleName: E", "DEL SimpleName: SynchronizedSortedSet", "DEL SimpleName: lock", "DEL SimpleName: synchronizedSortedSet", "DEL Block", "DEL SimpleType: SynchronizedSortedSet", "DEL TextElement: <p>", "DEL SimpleType: SortedSet", "DEL ParameterizedType: SortedSet<E>", "DEL NumberLiteral: 2775582861954500111L", "DEL TextElement: <p>", "DEL ParameterizedType: SynchronizedCollection<E>", "DEL SimpleName: E", "DEL TagElement: @param", "DEL MethodDeclaration", "DEL Javadoc", "DEL ParameterizedType: SortedSet<E>", "DEL SynchronizedStatement", "DEL SimpleName: set", "DEL TagElement: @version", "DEL SimpleType: E", "DEL TextElement:   the set to decorate, must not be null", "DEL TextElement: This class is Serializable from Commons Collections 3.1.", "DEL SimpleName: subSet", "DEL SimpleName: getSortedSet", "DEL Block", "DEL SimpleName: getSortedSet", "DEL SimpleName: headSet", "DEL SimpleName: E", "DEL SimpleName: set", "DEL MethodDeclaration", "DEL SimpleName: getSortedSet", "DEL MethodInvocation", "DEL SimpleName: lock", "DEL MethodInvocation", "DEL SimpleName: SortedSet", "DEL SimpleName: lock", "DEL SimpleType: SynchronizedSortedSet", "DEL SimpleName: getSortedSet", "DEL MethodDeclaration", "DEL SimpleName: lock", "DEL SimpleName: E", "DEL SuperConstructorInvocation", "DEL SynchronizedStatement", "DEL SimpleType: SynchronizedSortedSet", "DEL SimpleType: E", "DEL Javadoc", "DEL TextElement: <", "DEL TagElement", "DEL ParameterizedType: SynchronizedSortedSet<E>", "DEL TextElement: for a multi-threaded environment.", "DEL SimpleType: E", "DEL SimpleType: E", "DEL SimpleType: SynchronizedCollection", "DEL TextElement:   the set to decorate, must not be null", "DEL SimpleName: set", "DEL TypeParameter", "DEL Modifier: final", "DEL SimpleType: SortedSet", "DEL ReturnStatement", "DEL SimpleName: set", "DEL TextElement:  the decorated set", "DEL SimpleName: E", "DEL SimpleName: lock", "DEL ParameterizedType: SortedSet<E>", "DEL ParameterizedType: SortedSet<E>", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL SimpleName: E", "DEL SimpleType: E", "DEL TextElement:  a new synchronized sorted set", "DEL SimpleType: E", "DEL SimpleType: E", "DEL SimpleName: toElement", "DEL Modifier: final", "DEL ParameterizedType: SortedSet<E>", "DEL SimpleName: SynchronizedSortedSet", "DEL Block", "DEL SimpleName: IllegalArgumentException", "DEL SimpleName: set", "DEL SimpleName: IllegalArgumentException", "DEL SimpleName: toElement", "DEL SimpleName: set", "DEL SimpleType: E", "DEL TextElement:  if set is null", "DEL TextElement:   the set to decorate, must not be null", "DEL SimpleName: SynchronizedSortedSet", "DEL ParameterizedType: Comparator<? super E>", "DEL SimpleName: SortedSet", "DEL SimpleName: E", "DEL SynchronizedStatement", "DEL SimpleName: lock", "DEL MethodInvocation", "DEL SimpleType: SortedSet", "DEL SimpleType: E", "DEL ReturnStatement", "DEL SimpleName: SortedSet", "DEL MethodDeclaration", "DEL TextElement: Constructor that wraps (not copies).", "DEL SimpleName: E", "DEL TextElement:   the lock object to use, must not be null", "DEL SimpleName: serialVersionUID", "DEL TextElement: >", "DEL SimpleName: SortedSet", "DEL Modifier: public", "DEL SimpleType: Comparator", "DEL SimpleType: E", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL SimpleType: E", "DEL ParameterizedType: SortedSet<E>", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleName: lock", "DEL Modifier: final", "DEL SimpleName: set", "DEL SimpleName: E", "DEL SimpleName: E", "DEL SimpleName: SortedSet", "DEL ParameterizedType: SynchronizedSortedSet<E>", "DEL SimpleType: E", "DEL SimpleName: set", "DEL MethodDeclaration", "DEL Modifier: final", "DEL ParameterizedType: SortedSet<E>", "DEL Block", "DEL SimpleName: fromElement", "DEL SimpleName: E", "DEL SimpleName: E", "DEL SimpleName: set", "DEL SynchronizedStatement", "DEL SimpleName: E", "DEL SimpleName: last", "DEL TextElement: Factory method to create a synchronized set.", "DEL TextElement:  if set is null", "DEL TypeParameter", "DEL TagElement", "DEL SimpleName: SynchronizedSortedSet", "DEL ParameterizedType: SortedSet<E>", "DEL SimpleName: E", "DEL Block", "DEL PrimitiveType: long", "DEL SimpleName: SynchronizedSortedSet", "DEL SimpleName: E", "DEL SimpleName: E", "DEL SingleVariableDeclaration", "DEL TagElement", "DEL SimpleName: SortedSet", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SynchronizedStatement", "DEL TagElement", "DEL WildcardType: ? super E", "DEL Modifier: public", "DEL ReturnStatement", "DEL SimpleName: tailSet", "DEL Modifier: final", "DEL FieldDeclaration", "DEL Block", "DEL SimpleType: E", "DEL SimpleType: E", "DEL ParameterizedType: SynchronizedSortedSet<E>", "DEL TagElement: @throws", "DEL SimpleType: SortedSet", "DEL MethodDeclaration", "DEL TextElement:  3.0", "DEL VariableDeclarationFragment", "DEL SimpleName: SynchronizedSortedSet", "DEL Block", "DEL ReturnStatement", "DEL Modifier: protected", "DEL SimpleType: SortedSet", "DEL VariableDeclarationStatement", "DEL ClassInstanceCreation", "DEL SynchronizedStatement", "DEL SimpleName: E", "DEL SimpleType: SortedSet", "DEL Javadoc", "DEL SimpleName: lock", "DEL SimpleType: SortedSet", "DEL SimpleName: SortedSet", "DEL SimpleName: E", "DEL SimpleName: E", "DEL SingleVariableDeclaration", "DEL TagElement: @throws", "DEL SimpleType: E", "DEL MethodInvocation", "DEL SimpleName: set", "DEL TextElement: Constructor that wraps (not copies).", "DEL SimpleType: E", "DEL Modifier: final", "DEL SimpleName: toElement", "DEL Modifier: private", "DEL VariableDeclarationStatement", "DEL SimpleType: SortedSet", "DEL TextElement: Methods are synchronized, then forwarded to the decorated set.", "DEL SimpleName: fromElement", "DEL Modifier: final", "DEL MethodInvocation", "DEL TagElement: @return", "DEL SimpleName: E", "DEL ParameterizedType: SortedSet<E>", "DEL Javadoc", "DEL Block", "DEL SimpleName: fromElement", "DEL TagElement", "DEL SimpleName: E", "DEL SimpleName: headSet", "DEL ReturnStatement", "DEL Javadoc", "DEL SimpleName: E", "DEL SimpleType: SynchronizedSortedSet", "DEL MethodInvocation", "DEL SimpleName: toElement", "DEL SimpleName: E", "DEL SimpleName: set", "DEL SimpleName: SortedSet", "DEL SimpleName: set", "DEL SimpleName: subSet", "DEL SimpleName: comparator", "DEL Block", "DEL TextElement: Serialization version ", "DEL SimpleType: SortedSet", "DEL Modifier: static", "DEL SimpleName: fromElement", "DEL TagElement: @since", "DEL SimpleName: E", "DEL SimpleType: E", "DEL Modifier: final", "DEL SimpleType: E", "DEL MethodDeclaration", "DEL SimpleName: first", "DEL SimpleType: SortedSet", "DEL Modifier: protected", "DEL ParameterizedType: SortedSet<E>", "DEL TypeDeclaration: class", "DEL SimpleType: SortedSet", "DEL SimpleName: SortedSet", "DEL MethodInvocation", "DEL SimpleName: SynchronizedCollection", "DEL SimpleType: SynchronizedSortedSet", "DEL MethodInvocation", "DEL SimpleName: set", "DEL Modifier: public", "DEL ParameterizedType: SortedSet<E>", "DEL SimpleName: lock", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL Block", "DEL TagElement", "DEL Modifier: final", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: SynchronizedSortedSet", "DEL SimpleType: E", "DEL ParameterizedType: SynchronizedSortedSet<E>", "DEL SimpleName: collection", "DEL MethodDeclaration", "DEL SimpleName: E", "DEL SimpleType: E", "DEL TextElement: Gets the decorated set.", "DEL SimpleName: tailSet", "DEL SimpleType: E", "DEL ClassInstanceCreation", "DEL SimpleName: SynchronizedSortedSet", "DEL Block", "DEL SimpleName: set", "DEL CastExpression", "DEL TagElement: @param", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL SimpleName: E", "DEL SimpleName: SortedSet", "DEL SimpleName: last", "DEL SimpleName: getSortedSet", "DEL TagElement: @param", "DEL Javadoc", "DEL SimpleName: SortedSet", "DEL Modifier: static", "DEL Block", "DEL Modifier: final", "DEL SimpleName: comparator", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: lock", "DEL SimpleName: Object", "DEL SimpleName: Comparator", "DEL TextElement: Decorates another <code>SortedSet</code> to synchronize its behaviour", "DEL TagElement: @return", "DEL Modifier: final", "DEL SuperConstructorInvocation", "DEL Block", "DEL TextElement:  $Id$", "DEL TagElement: @param", "DEL SimpleName: E", "DEL SimpleType: Object", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL SimpleType: E", "DEL ReturnStatement", "DEL SimpleType: E", "DEL SingleVariableDeclaration", "DEL TextElement:  the element type", "DEL Modifier: public", "DEL SimpleType: SortedSet", "DEL Block", "DEL ParameterizedType: SynchronizedSortedSet<E>", "DEL SimpleName: IllegalArgumentException", "DEL Modifier: final", "DEL Modifier: public", "DEL SimpleType: E", "DEL SimpleName: lock", "DEL SimpleName: lock", "DEL Block", "DEL SimpleName: getSortedSet", "DEL SimpleName: getSortedSet", "DEL TagElement: @throws", "DEL Block"]}]}}, {"SynchronizedSortedSet_diff": {"operations": ["Delete QualifiedName: org.apache.commons.collections.set(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: java.util.Comparator(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.util.SortedSet(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: org.apache.commons.collections.collection.SynchronizedCollection(6)", "Delete ImportDeclaration(7)", "Delete TextElement: Decorates another <code>SortedSet</code> to synchronize its behaviour(8)", "Delete TextElement: for a multi-threaded environment.(9)", "Delete TextElement: <p>(10)", "Delete TextElement: Methods are synchronized, then forwarded to the decorated set.(11)", "Delete TextElement: <p>(12)", "Delete TextElement: This class is Serializable from Commons Collections 3.1.(13)", "Delete TagElement(14)", "Delete TextElement:  3.0(15)", "Delete TagElement: @since(16)", "Delete TextElement:  $Id$(17)", "Delete TagElement: @version(18)", "Delete Javadoc(19)", "Delete Modifier: public(20)", "Delete SimpleName: SynchronizedSortedSet(21)", "Delete SimpleName: E(22)", "Delete TypeParameter(23)", "Delete SimpleName: SynchronizedCollection(24)", "Delete SimpleType: SynchronizedCollection(25)", "Delete SimpleName: E(26)", "Delete SimpleType: E(27)", "Delete ParameterizedType: SynchronizedCollection<E>(28)", "Delete SimpleName: SortedSet(29)", "Delete SimpleType: SortedSet(30)", "Delete SimpleName: E(31)", "Delete SimpleType: E(32)", "Delete ParameterizedType: SortedSet<E>(33)", "Delete TextElement: Serialization version (34)", "Delete TagElement(35)", "Delete Javadoc(36)", "Delete Modifier: private(37)", "Delete Modifier: static(38)", "Delete Modifier: final(39)", "Delete PrimitiveType: long(40)", "Delete SimpleName: serialVersionUID(41)", "Delete NumberLiteral: 2775582861954500111L(42)", "Delete VariableDeclarationFragment(43)", "Delete FieldDeclaration(44)", "Delete TextElement: Factory method to create a synchronized set.(45)", "Delete TagElement(46)", "Delete TextElement: <(47)", "Delete SimpleName: E(48)", "Delete TextElement: >(49)", "Delete TextElement:  the element type(50)", "Delete TagElement: @param(51)", "Delete SimpleName: set(52)", "Delete TextElement:   the set to decorate, must not be null(53)", "Delete TagElement: @param(54)", "Delete TextElement:  a new synchronized sorted set(55)", "Delete TagElement: @return(56)", "Delete SimpleName: IllegalArgumentException(57)", "Delete TextElement:  if set is null(58)", "Delete TagElement: @throws(59)", "Delete Javadoc(60)", "Delete Modifier: public(61)", "Delete Modifier: static(62)", "Delete SimpleName: E(63)", "Delete TypeParameter(64)", "Delete SimpleName: SynchronizedSortedSet(65)", "Delete SimpleType: SynchronizedSortedSet(66)", "Delete SimpleName: E(67)", "Delete SimpleType: E(68)", "Delete ParameterizedType: SynchronizedSortedSet<E>(69)", "Delete SimpleName: synchronizedSortedSet(70)", "Delete Modifier: final(71)", "Delete SimpleName: SortedSet(72)", "Delete SimpleType: SortedSet(73)", "Delete SimpleName: E(74)", "Delete SimpleType: E(75)", "Delete ParameterizedType: SortedSet<E>(76)", "Delete SimpleName: set(77)", "Delete SingleVariableDeclaration(78)", "Delete SimpleName: SynchronizedSortedSet(79)", "Delete SimpleType: SynchronizedSortedSet(80)", "Delete SimpleName: E(81)", "Delete SimpleType: E(82)", "Delete ParameterizedType: SynchronizedSortedSet<E>(83)", "Delete SimpleName: set(84)", "Delete ClassInstanceCreation(85)", "Delete ReturnStatement(86)", "Delete Block(87)", "Delete MethodDeclaration(88)", "Delete TextElement: Constructor that wraps (not copies).(89)", "Delete TagElement(90)", "Delete SimpleName: set(91)", "Delete TextElement:   the set to decorate, must not be null(92)", "Delete TagElement: @param(93)", "Delete SimpleName: IllegalArgumentException(94)", "Delete TextElement:  if set is null(95)", "Delete TagElement: @throws(96)", "Delete Javadoc(97)", "Delete Modifier: protected(98)", "Delete SimpleName: SynchronizedSortedSet(99)", "Delete Modifier: final(100)", "Delete SimpleName: SortedSet(101)", "Delete SimpleType: SortedSet(102)", "Delete SimpleName: E(103)", "Delete SimpleType: E(104)", "Delete ParameterizedType: SortedSet<E>(105)", "Delete SimpleName: set(106)", "Delete SingleVariableDeclaration(107)", "Delete SimpleName: set(108)", "Delete SuperConstructorInvocation(109)", "Delete Block(110)", "Delete MethodDeclaration(111)", "Delete TextElement: Constructor that wraps (not copies).(112)", "Delete TagElement(113)", "Delete SimpleName: set(114)", "Delete TextElement:   the set to decorate, must not be null(115)", "Delete TagElement: @param(116)", "Delete SimpleName: lock(117)", "Delete TextElement:   the lock object to use, must not be null(118)", "Delete TagElement: @param(119)", "Delete SimpleName: IllegalArgumentException(120)", "Delete TextElement:  if set is null(121)", "Delete TagElement: @throws(122)", "Delete Javadoc(123)", "Delete Modifier: protected(124)", "Delete SimpleName: SynchronizedSortedSet(125)", "Delete Modifier: final(126)", "Delete SimpleName: SortedSet(127)", "Delete SimpleType: SortedSet(128)", "Delete SimpleName: E(129)", "Delete SimpleType: E(130)", "Delete ParameterizedType: SortedSet<E>(131)", "Delete SimpleName: set(132)", "Delete SingleVariableDeclaration(133)", "Delete Modifier: final(134)", "Delete SimpleName: Object(135)", "Delete SimpleType: Object(136)", "Delete SimpleName: lock(137)", "Delete SingleVariableDeclaration(138)", "Delete SimpleName: set(139)", "Delete SimpleName: lock(140)", "Delete SuperConstructorInvocation(141)", "Delete Block(142)", "Delete MethodDeclaration(143)", "Delete TextElement: Gets the decorated set.(144)", "Delete TagElement(145)", "Delete TextElement:  the decorated set(146)", "Delete TagElement: @return(147)", "Delete Javadoc(148)", "Delete Modifier: protected(149)", "Delete SimpleName: SortedSet(150)", "Delete SimpleType: SortedSet(151)", "Delete SimpleName: E(152)", "Delete SimpleType: E(153)", "Delete ParameterizedType: SortedSet<E>(154)", "Delete SimpleName: getSortedSet(155)", "Delete SimpleName: SortedSet(156)", "Delete SimpleType: SortedSet(157)", "Delete SimpleName: E(158)", "Delete SimpleType: E(159)", "Delete ParameterizedType: SortedSet<E>(160)", "Delete SimpleName: collection(161)", "Delete CastExpression(162)", "Delete ReturnStatement(163)", "Delete Block(164)", "Delete MethodDeclaration(165)", "Delete Modifier: public(166)", "Delete SimpleName: SortedSet(167)", "Delete SimpleType: SortedSet(168)", "Delete SimpleName: E(169)", "Delete SimpleType: E(170)", "Delete ParameterizedType: SortedSet<E>(171)", "Delete SimpleName: subSet(172)", "Delete Modifier: final(173)", "Delete SimpleName: E(174)", "Delete SimpleType: E(175)", "Delete SimpleName: fromElement(176)", "Delete SingleVariableDeclaration(177)", "Delete Modifier: final(178)", "Delete SimpleName: E(179)", "Delete SimpleType: E(180)", "Delete SimpleName: toElement(181)", "Delete SingleVariableDeclaration(182)", "Delete SimpleName: lock(183)", "Delete Modifier: final(184)", "Delete SimpleName: SortedSet(185)", "Delete SimpleType: SortedSet(186)", "Delete SimpleName: E(187)", "Delete SimpleType: E(188)", "Delete ParameterizedType: SortedSet<E>(189)", "Delete SimpleName: set(190)", "Delete SimpleName: getSortedSet(191)", "Delete MethodInvocation(192)", "Delete SimpleName: subSet(193)", "Delete SimpleName: fromElement(194)", "Delete SimpleName: toElement(195)", "Delete MethodInvocation(196)", "Delete VariableDeclarationFragment(197)", "Delete VariableDeclarationStatement(198)", "Delete SimpleName: SynchronizedSortedSet(199)", "Delete SimpleType: SynchronizedSortedSet(200)", "Delete SimpleName: E(201)", "Delete SimpleType: E(202)", "Delete ParameterizedType: SynchronizedSortedSet<E>(203)", "Delete SimpleName: set(204)", "Delete SimpleName: lock(205)", "Delete ClassInstanceCreation(206)", "Delete ReturnStatement(207)", "Delete Block(208)", "Delete SynchronizedStatement(209)", "Delete Block(210)", "Delete MethodDeclaration(211)", "Delete Modifier: public(212)", "Delete SimpleName: SortedSet(213)", "Delete SimpleType: SortedSet(214)", "Delete SimpleName: E(215)", "Delete SimpleType: E(216)", "Delete ParameterizedType: SortedSet<E>(217)", "Delete SimpleName: headSet(218)", "Delete Modifier: final(219)", "Delete SimpleName: E(220)", "Delete SimpleType: E(221)", "Delete SimpleName: toElement(222)", "Delete SingleVariableDeclaration(223)", "Delete SimpleName: lock(224)", "Delete Modifier: final(225)", "Delete SimpleName: SortedSet(226)", "Delete SimpleType: SortedSet(227)", "Delete SimpleName: E(228)", "Delete SimpleType: E(229)", "Delete ParameterizedType: SortedSet<E>(230)", "Delete SimpleName: set(231)", "Delete SimpleName: getSortedSet(232)", "Delete MethodInvocation(233)", "Delete SimpleName: headSet(234)", "Delete SimpleName: toElement(235)", "Delete MethodInvocation(236)", "Delete VariableDeclarationFragment(237)", "Delete VariableDeclarationStatement(238)", "Delete SimpleName: SynchronizedSortedSet(239)", "Delete SimpleType: SynchronizedSortedSet(240)", "Delete SimpleName: E(241)", "Delete SimpleType: E(242)", "Delete ParameterizedType: SynchronizedSortedSet<E>(243)", "Delete SimpleName: set(244)", "Delete SimpleName: lock(245)", "Delete ClassInstanceCreation(246)", "Delete ReturnStatement(247)", "Delete Block(248)", "Delete SynchronizedStatement(249)", "Delete Block(250)", "Delete MethodDeclaration(251)", "Delete Modifier: public(252)", "Delete SimpleName: SortedSet(253)", "Delete SimpleType: SortedSet(254)", "Delete SimpleName: E(255)", "Delete SimpleType: E(256)", "Delete ParameterizedType: SortedSet<E>(257)", "Delete SimpleName: tailSet(258)", "Delete Modifier: final(259)", "Delete SimpleName: E(260)", "Delete SimpleType: E(261)", "Delete SimpleName: fromElement(262)", "Delete SingleVariableDeclaration(263)", "Delete SimpleName: lock(264)", "Delete Modifier: final(265)", "Delete SimpleName: SortedSet(266)", "Delete SimpleType: SortedSet(267)", "Delete SimpleName: E(268)", "Delete SimpleType: E(269)", "Delete ParameterizedType: SortedSet<E>(270)", "Delete SimpleName: set(271)", "Delete SimpleName: getSortedSet(272)", "Delete MethodInvocation(273)", "Delete SimpleName: tailSet(274)", "Delete SimpleName: fromElement(275)", "Delete MethodInvocation(276)", "Delete VariableDeclarationFragment(277)", "Delete VariableDeclarationStatement(278)", "Delete SimpleName: SynchronizedSortedSet(279)", "Delete SimpleType: SynchronizedSortedSet(280)", "Delete SimpleName: E(281)", "Delete SimpleType: E(282)", "Delete ParameterizedType: SynchronizedSortedSet<E>(283)", "Delete SimpleName: set(284)", "Delete SimpleName: lock(285)", "Delete ClassInstanceCreation(286)", "Delete ReturnStatement(287)", "Delete Block(288)", "Delete SynchronizedStatement(289)", "Delete Block(290)", "Delete MethodDeclaration(291)", "Delete Modifier: public(292)", "Delete SimpleName: E(293)", "Delete SimpleType: E(294)", "Delete SimpleName: first(295)", "Delete SimpleName: lock(296)", "Delete SimpleName: getSortedSet(297)", "Delete MethodInvocation(298)", "Delete SimpleName: first(299)", "Delete MethodInvocation(300)", "Delete ReturnStatement(301)", "Delete Block(302)", "Delete SynchronizedStatement(303)", "Delete Block(304)", "Delete MethodDeclaration(305)", "Delete Modifier: public(306)", "Delete SimpleName: E(307)", "Delete SimpleType: E(308)", "Delete SimpleName: last(309)", "Delete SimpleName: lock(310)", "Delete SimpleName: getSortedSet(311)", "Delete MethodInvocation(312)", "Delete SimpleName: last(313)", "Delete MethodInvocation(314)", "Delete ReturnStatement(315)", "Delete Block(316)", "Delete SynchronizedStatement(317)", "Delete Block(318)", "Delete MethodDeclaration(319)", "Delete Modifier: public(320)", "Delete SimpleName: Comparator(321)", "Delete SimpleType: Comparator(322)", "Delete SimpleName: E(323)", "Delete SimpleType: E(324)", "Delete WildcardType: ? super E(325)", "Delete ParameterizedType: Comparator<? super E>(326)", "Delete SimpleName: comparator(327)", "Delete SimpleName: lock(328)", "Delete SimpleName: getSortedSet(329)", "Delete MethodInvocation(330)", "Delete SimpleName: comparator(331)", "Delete MethodInvocation(332)", "Delete ReturnStatement(333)", "Delete Block(334)", "Delete SynchronizedStatement(335)", "Delete Block(336)", "Delete MethodDeclaration(337)", "Delete TypeDeclaration: class(338)"]}}, {"package-info_cluster": {"actions": [{"root": "DEL TextElement: <li>Synchronized - synchronizes method access for multi-threaded environments</li>", "operations": ["DEL TextElement: <li>Synchronized - synchronizes method access for multi-threaded environments</li>"]}]}}, {"package-info_diff": {"operations": ["Delete TextElement: <li>Synchronized - synchronizes method access for multi-threaded environments</li>(15)"]}}, {"SynchronizedTrie_cluster": {"actions": [{"root": "UPDATE from SynchronizedSet to Collections", "operations": ["UPD SimpleName: SynchronizedSet from SynchronizedSet to Collections", "UPD SimpleName: SynchronizedSet from SynchronizedSet to Collections"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.commons.collections.set.SynchronizedSet"]}]}}, {"SynchronizedTrie_diff": {"operations": ["Update SimpleName: SynchronizedSet(296) to Collections", "Update SimpleName: SynchronizedSet(313) to Collections", "Delete QualifiedName: org.apache.commons.collections.set.SynchronizedSet(20)", "Delete ImportDeclaration(21)"]}}], "commit_stats": [{"total_files": 17, "deleted_files": 12, "testing": "True", "maintenance": "True", "build": "False"}]}