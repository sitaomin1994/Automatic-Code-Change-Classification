{"application": "google-sagetv", "csha": "08749a2bb21b1715e380e9349c9923b1f9eed416", "files": [{"Agent_cluster": {"actions": [{"root": "MOVE from InfixExpression: ||", "operations": ["MOV PrefixExpression: ! to InfixExpression: || at 1"]}, {"root": "INS InfixExpression: && to InfixExpression: && at 0", "operations": ["INS InfixExpression: != to InfixExpression: && at 1", "INS InfixExpression: && to InfixExpression: && at 0", "INS QualifiedName: s.language.name to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: title to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV QualifiedName: s.title to MethodInvocation at 3"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV InfixExpression: != to InfixExpression: && at 0"]}, {"root": "INS QualifiedName: s.language to MethodInvocation at 0", "operations": ["INS QualifiedName: s.language to MethodInvocation at 0"]}, {"root": "INS SimpleName: equalsIgnoreCase to MethodInvocation at 1", "operations": ["INS SimpleName: equalsIgnoreCase to MethodInvocation at 1"]}, {"root": "INS QualifiedName: s.language to MethodInvocation at 0", "operations": ["INS QualifiedName: s.language to MethodInvocation at 0"]}, {"root": "INS StringLiteral: \"english\" to MethodInvocation at 3", "operations": ["INS StringLiteral: \"english\" to MethodInvocation at 3"]}, {"root": "UPDATE from equalsIgnoreCase to person", "operations": ["UPD SimpleName: equalsIgnoreCase from equalsIgnoreCase to person"]}, {"root": "INS SimpleName: equalsIgnoreCase to MethodInvocation at 2", "operations": ["INS SimpleName: equalsIgnoreCase to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ArrayAccess to MethodInvocation at 3"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: toString"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: toString"]}, {"root": "DEL ParenthesizedExpression", "operations": ["DEL InfixExpression: !=", "DEL NullLiteral", "DEL QualifiedName: s.title", "DEL InfixExpression: &&", "DEL InfixExpression: !=", "DEL SimpleName: title", "DEL ParenthesizedExpression", "DEL InfixExpression: &&", "DEL QualifiedName: s.title"]}, {"root": "DEL QualifiedName: person.name", "operations": ["DEL QualifiedName: person.name"]}, {"root": "DEL FieldAccess", "operations": ["DEL FieldAccess", "DEL SimpleName: name"]}, {"root": "DEL StringLiteral: \"English\"", "operations": ["DEL StringLiteral: \"English\""]}, {"root": "DEL QualifiedName: s.language.name", "operations": ["DEL QualifiedName: s.language.name"]}, {"root": "DEL SimpleName: equalsIgnoreCase", "operations": ["DEL SimpleName: equalsIgnoreCase"]}, {"root": "DEL QualifiedName: s.language.name", "operations": ["DEL QualifiedName: s.language.name"]}]}}, {"Agent_diff": {"operations": ["Move PrefixExpression: !(3013) into InfixExpression: ||(3003) at 1", "Insert InfixExpression: &&(3294) into InfixExpression: &&(3300) at 0", "Move SimpleName: title(3005) into MethodInvocation(3001) at 0", "Move QualifiedName: s.title(3009) into MethodInvocation(3001) at 3", "Move InfixExpression: !=(3305) into InfixExpression: &&(3294) at 0", "Insert InfixExpression: !=(3293) into InfixExpression: &&(3294) at 1", "Insert QualifiedName: s.language(3301) into MethodInvocation(3304) at 0", "Insert SimpleName: equalsIgnoreCase(3302) into MethodInvocation(3304) at 1", "Insert QualifiedName: s.language.name(3291) into InfixExpression: !=(3293) at 0", "Insert NullLiteral(3292) into InfixExpression: !=(3293) at 1", "Insert QualifiedName: s.language(3295) into MethodInvocation(3298) at 0", "Insert StringLiteral: \"english\"(3297) into MethodInvocation(3298) at 2", "Update SimpleName: equalsIgnoreCase(3068) to person", "Insert SimpleName: equalsIgnoreCase(3055) into MethodInvocation(3059) at 1", "Move ArrayAccess(3071) into MethodInvocation(3059) at 3", "Delete SimpleName: toString(3006)", "Delete MethodInvocation(3007)", "Delete SimpleName: toString(3010)", "Delete MethodInvocation(3011)", "Delete QualifiedName: s.title(2998)", "Delete NullLiteral(2999)", "Delete InfixExpression: !=(3000)", "Delete SimpleName: title(3001)", "Delete QualifiedName: s.title(3002)", "Delete InfixExpression: !=(3003)", "Delete InfixExpression: &&(3004)", "Delete InfixExpression: &&(3014)", "Delete ParenthesizedExpression(3015)", "Delete QualifiedName: person.name(3067)", "Delete SimpleName: name(3072)", "Delete FieldAccess(3073)", "Delete StringLiteral: \"English\"(3306)", "Delete QualifiedName: s.language.name(3308)", "Delete SimpleName: equalsIgnoreCase(3313)", "Delete QualifiedName: s.language.name(3314)"]}}, {"Airing_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS SimpleName: getShowID to MethodDeclaration at 2", "INS Block to MethodDeclaration at 3", "INS SimpleName: showID to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS Modifier: public to MethodDeclaration at 0", "INS PrimitiveType: int to MethodDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 122", "operations": ["INS ConditionalExpression to ReturnStatement at 0", "INS NumberLiteral: 1 to ReturnStatement at 0", "INS Modifier: public to FieldDeclaration at 1", "INS SimpleName: Comparator to SimpleType: Comparator at 0", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS ParenthesizedExpression to MethodInvocation at 0", "INS Modifier: static to FieldDeclaration at 2", "INS ExpressionStatement to IfStatement at 1", "INS InstanceofExpression to IfStatement at 0", "INS Javadoc to FieldDeclaration at 0", "INS SimpleName: a1 to SingleVariableDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 122", "INS QualifiedName: a2.stationID to InfixExpression: - at 1", "INS SimpleType: Airing to SingleVariableDeclaration at 0", "INS ReturnStatement to IfStatement at 1", "INS InfixExpression: - to ConditionalExpression at 1", "INS ReturnStatement to Block at 5", "INS QualifiedName: ManualRecord.FakeAiring to SimpleType: ManualRecord.FakeAiring at 0", "INS VariableDeclarationStatement to Block at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Airing to SimpleType: Airing at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SimpleName: a2 to CastExpression at 1", "INS SimpleName: a1 to Assignment: = at 0", "INS Modifier: final to FieldDeclaration at 3", "INS InfixExpression: - to MethodInvocation at 2", "INS IfStatement to Block at 0", "INS SimpleType: ManualRecord.FakeAiring to CastExpression at 0", "INS PrefixExpression: - to ReturnStatement at 0", "INS QualifiedName: ManualRecord.FakeAiring to SimpleType: ManualRecord.FakeAiring at 0", "INS SimpleName: s2 to VariableDeclarationFragment at 0", "INS ReturnStatement to IfStatement at 1", "INS SimpleName: a2 to InstanceofExpression at 0", "INS QualifiedName: ManualRecord.FakeAiring to SimpleType: ManualRecord.FakeAiring at 0", "INS SimpleName: a2 to Assignment: = at 0", "INS IfStatement to IfStatement at 2", "INS NullLiteral to InfixExpression: == at 1", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS SimpleName: a1 to CastExpression at 1", "INS SimpleType: Comparator to ParameterizedType: Comparator<Airing> at 0", "INS InstanceofExpression to IfStatement at 0", "INS SimpleName: getContentAiring to MethodInvocation at 1", "INS SimpleName: getContentAiring to MethodInvocation at 1", "INS SimpleName: s2 to InfixExpression: - at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: a1 to InstanceofExpression at 0", "INS SimpleType: Comparator to ParameterizedType: Comparator<Airing> at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: s1 to InfixExpression: - at 0", "INS SimpleName: a1 to InfixExpression: == at 0", "INS SimpleName: a2 to InfixExpression: == at 0", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: Long to MethodInvocation at 0", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS SimpleType: Airing to ParameterizedType: Comparator<Airing> at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: getSchedulingStart to MethodInvocation at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: compare to MethodDeclaration at 2", "INS SimpleName: a1 to InfixExpression: == at 0", "INS Block to MethodDeclaration at 5", "INS TextElement: If scheduling start times are the same, sort by station ID. If the scheduling start times are to TagElement at 0", "INS QualifiedName: ManualRecord.FakeAiring to SimpleType: ManualRecord.FakeAiring at 0", "INS MethodInvocation to Assignment: = at 1", "INS InfixExpression: == to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: signum to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to Block at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ExpressionStatement to IfStatement at 1", "INS SimpleName: a2 to SingleVariableDeclaration at 1", "INS SimpleName: Airing to SimpleType: Airing at 0", "INS SimpleType: Airing to SingleVariableDeclaration at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleType: ManualRecord.FakeAiring to InstanceofExpression at 1", "INS SimpleName: Airing to SimpleType: Airing at 0", "INS NumberLiteral: 0 to ReturnStatement at 0", "INS PrimitiveType: int to MethodDeclaration at 1", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleName: getManualRecord to MethodInvocation at 1", "INS IfStatement to IfStatement at 2", "INS SimpleName: s1 to InfixExpression: == at 0", "INS IfStatement to Block at 1", "INS SimpleType: Airing to ParameterizedType: Comparator<Airing> at 1", "INS SimpleName: getSchedulingStart to MethodInvocation at 1", "INS SimpleName: s2 to InfixExpression: == at 1", "INS MethodInvocation to MethodInvocation at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleType: ManualRecord.FakeAiring to InstanceofExpression at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS InfixExpression: == to IfStatement at 0", "INS InfixExpression: == to ParenthesizedExpression at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ReturnStatement to IfStatement at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: a2 to MethodInvocation at 0", "INS SimpleName: Comparator to SimpleType: Comparator at 0", "INS SimpleType: ManualRecord.FakeAiring to CastExpression at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: s1 to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: Airing to SimpleType: Airing at 0", "INS SimpleName: a2 to InfixExpression: == at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: getManualRecord to MethodInvocation at 1", "INS TextElement: different, sort by scheduling start time. Sorting is low to high. to TagElement at 1", "INS ParameterizedType: Comparator<Airing> to ClassInstanceCreation at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS SimpleName: a1 to MethodInvocation at 0", "INS QualifiedName: a1.stationID to InfixExpression: - at 0", "INS ParameterizedType: Comparator<Airing> to FieldDeclaration at 4", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: SCHEDULE_CHANNEL_COMPARATOR to VariableDeclarationFragment at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TextElement:  Adjusted starting time for this airing to TagElement: @return at 0", "INS TextElement: Get adjusted the starting time for this airing. to TagElement at 0", "INS TagElement: @return to Javadoc at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement: @return to Javadoc at 1", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: Get adjusted the full duration of this airing. to TagElement at 0", "INS TagElement to Javadoc at 0", "INS TextElement:  Adjusted full duration time of this airing to TagElement: @return at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TextElement:  Adjusted ending time for this airing to TagElement: @return at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @return to Javadoc at 1", "INS TextElement: Get adjusted the ending time for this airing. to TagElement at 0", "INS TagElement to Javadoc at 0"]}, {"root": "INS Javadoc to FieldDeclaration at 0", "operations": ["INS Javadoc to FieldDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TextElement: If start times are the same, sort by station ID. If the start times are different, sort by to TagElement at 0", "INS TextElement: start time. Sorting is low to high. to TagElement at 1"]}, {"root": "INS Javadoc to FieldDeclaration at 0", "operations": ["INS Javadoc to FieldDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TextElement: If station ID's are the same, the sort by start time. If station ID's are different, sort by to TagElement at 0", "INS TextElement: station ID. Sorting is low to high. to TagElement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 4"]}, {"root": "INS PrefixExpression: ! to InfixExpression: && at 0", "operations": ["INS PrefixExpression: ! to InfixExpression: && at 0", "INS QualifiedName: SeekerSelector.USE_BETA_SEEKER to PrefixExpression: ! at 0"]}, {"root": "INS PrefixExpression: ! to InfixExpression: && at 0", "operations": ["INS QualifiedName: SeekerSelector.USE_BETA_SEEKER to PrefixExpression: ! at 0", "INS PrefixExpression: ! to InfixExpression: && at 0"]}, {"root": "INS PrefixExpression: ! to InfixExpression: && at 0", "operations": ["INS PrefixExpression: ! to InfixExpression: && at 0", "INS QualifiedName: SeekerSelector.USE_BETA_SEEKER to PrefixExpression: ! at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.UnsupportedEncodingException"]}]}}, {"Airing_diff": {"operations": ["Insert MethodDeclaration(1366) into TypeDeclaration: class(5931) at 21", "Insert FieldDeclaration(5861) into TypeDeclaration: class(5931) at 122", "Insert Javadoc(796) into MethodDeclaration(866) at 0", "Insert Javadoc(1008) into MethodDeclaration(1085) at 0", "Insert Javadoc(1090) into MethodDeclaration(1162) at 0", "Insert Modifier: public(1360) into MethodDeclaration(1366) at 0", "Insert PrimitiveType: int(1361) into MethodDeclaration(1366) at 1", "Insert SimpleName: getShowID(1362) into MethodDeclaration(1366) at 2", "Insert Block(1365) into MethodDeclaration(1366) at 3", "Insert Javadoc(5679) into FieldDeclaration(5744) at 0", "Insert Javadoc(5748) into FieldDeclaration(5861) at 0", "Insert Modifier: public(5749) into FieldDeclaration(5861) at 1", "Insert Modifier: static(5750) into FieldDeclaration(5861) at 2", "Insert Modifier: final(5751) into FieldDeclaration(5861) at 3", "Insert ParameterizedType: Comparator<Airing>(5756) into FieldDeclaration(5861) at 4", "Insert VariableDeclarationFragment(5860) into FieldDeclaration(5861) at 5", "Insert Javadoc(5865) into FieldDeclaration(5930) at 0", "Insert TagElement(793) into Javadoc(796) at 0", "Insert TagElement: @return(795) into Javadoc(796) at 1", "Move IfStatement(853) into Block(865) at 4", "Insert TagElement(1005) into Javadoc(1008) at 0", "Insert TagElement: @return(1007) into Javadoc(1008) at 1", "Insert TagElement(1087) into Javadoc(1090) at 0", "Insert TagElement: @return(1089) into Javadoc(1090) at 1", "Insert ReturnStatement(1364) into Block(1365) at 0", "Insert TagElement(5678) into Javadoc(5679) at 0", "Insert TagElement(5747) into Javadoc(5748) at 0", "Insert SimpleType: Comparator(5753) into ParameterizedType: Comparator<Airing>(5756) at 0", "Insert SimpleType: Airing(5755) into ParameterizedType: Comparator<Airing>(5756) at 1", "Insert SimpleName: SCHEDULE_CHANNEL_COMPARATOR(5757) into VariableDeclarationFragment(5860) at 0", "Insert ClassInstanceCreation(5859) into VariableDeclarationFragment(5860) at 1", "Insert TagElement(5864) into Javadoc(5865) at 0", "Insert TextElement: Get adjusted the starting time for this airing.(792) into TagElement(793) at 0", "Insert TextElement:  Adjusted starting time for this airing(794) into TagElement: @return(795) at 0", "Insert TextElement: Get adjusted the full duration of this airing.(1004) into TagElement(1005) at 0", "Insert TextElement:  Adjusted full duration time of this airing(1006) into TagElement: @return(1007) at 0", "Insert TextElement: Get adjusted the ending time for this airing.(1086) into TagElement(1087) at 0", "Insert TextElement:  Adjusted ending time for this airing(1088) into TagElement: @return(1089) at 0", "Insert SimpleName: showID(1363) into ReturnStatement(1364) at 0", "Insert TextElement: If start times are the same, sort by station ID. If the start times are different, sort by(5676) into TagElement(5678) at 0", "Insert TextElement: start time. Sorting is low to high.(5677) into TagElement(5678) at 1", "Insert TextElement: If scheduling start times are the same, sort by station ID. If the scheduling start times are(5745) into TagElement(5747) at 0", "Insert TextElement: different, sort by scheduling start time. Sorting is low to high.(5746) into TagElement(5747) at 1", "Insert SimpleName: Comparator(5752) into SimpleType: Comparator(5753) at 0", "Insert SimpleName: Airing(5754) into SimpleType: Airing(5755) at 0", "Insert ParameterizedType: Comparator<Airing>(5762) into ClassInstanceCreation(5859) at 0", "Insert AnonymousClassDeclaration(5858) into ClassInstanceCreation(5859) at 1", "Insert TextElement: If station ID's are the same, the sort by start time. If station ID's are different, sort by(5862) into TagElement(5864) at 0", "Insert TextElement: station ID. Sorting is low to high.(5863) into TagElement(5864) at 1", "Insert PrefixExpression: !(841) into InfixExpression: &&(853) at 0", "Insert PrefixExpression: !(1056) into InfixExpression: &&(1068) at 0", "Insert SimpleType: Comparator(5759) into ParameterizedType: Comparator<Airing>(5762) at 0", "Insert SimpleType: Airing(5761) into ParameterizedType: Comparator<Airing>(5762) at 1", "Insert MethodDeclaration(5857) into AnonymousClassDeclaration(5858) at 0", "Insert QualifiedName: SeekerSelector.USE_BETA_SEEKER(840) into PrefixExpression: !(841) at 0", "Insert QualifiedName: SeekerSelector.USE_BETA_SEEKER(1055) into PrefixExpression: !(1056) at 0", "Insert PrefixExpression: !(1136) into InfixExpression: &&(1148) at 0", "Insert SimpleName: Comparator(5758) into SimpleType: Comparator(5759) at 0", "Insert SimpleName: Airing(5760) into SimpleType: Airing(5761) at 0", "Insert Modifier: public(5763) into MethodDeclaration(5857) at 0", "Insert PrimitiveType: int(5764) into MethodDeclaration(5857) at 1", "Insert SimpleName: compare(5765) into MethodDeclaration(5857) at 2", "Insert SingleVariableDeclaration(5769) into MethodDeclaration(5857) at 3", "Insert SingleVariableDeclaration(5773) into MethodDeclaration(5857) at 4", "Insert Block(5856) into MethodDeclaration(5857) at 5", "Insert QualifiedName: SeekerSelector.USE_BETA_SEEKER(1135) into PrefixExpression: !(1136) at 0", "Insert SimpleType: Airing(5767) into SingleVariableDeclaration(5769) at 0", "Insert SimpleName: a1(5768) into SingleVariableDeclaration(5769) at 1", "Insert SimpleType: Airing(5771) into SingleVariableDeclaration(5773) at 0", "Insert SimpleName: a2(5772) into SingleVariableDeclaration(5773) at 1", "Insert IfStatement(5792) into Block(5856) at 0", "Insert IfStatement(5809) into Block(5856) at 1", "Insert IfStatement(5826) into Block(5856) at 2", "Insert VariableDeclarationStatement(5833) into Block(5856) at 3", "Insert VariableDeclarationStatement(5840) into Block(5856) at 4", "Insert ReturnStatement(5855) into Block(5856) at 5", "Insert SimpleName: Airing(5766) into SimpleType: Airing(5767) at 0", "Insert SimpleName: Airing(5770) into SimpleType: Airing(5771) at 0", "Insert InfixExpression: ==(5776) into IfStatement(5792) at 0", "Insert ReturnStatement(5778) into IfStatement(5792) at 1", "Insert IfStatement(5791) into IfStatement(5792) at 2", "Insert InstanceofExpression(5796) into IfStatement(5809) at 0", "Insert ExpressionStatement(5808) into IfStatement(5809) at 1", "Insert InstanceofExpression(5813) into IfStatement(5826) at 0", "Insert ExpressionStatement(5825) into IfStatement(5826) at 1", "Insert PrimitiveType: long(5827) into VariableDeclarationStatement(5833) at 0", "Insert VariableDeclarationFragment(5832) into VariableDeclarationStatement(5833) at 1", "Insert PrimitiveType: long(5834) into VariableDeclarationStatement(5840) at 0", "Insert VariableDeclarationFragment(5839) into VariableDeclarationStatement(5840) at 1", "Insert ConditionalExpression(5854) into ReturnStatement(5855) at 0", "Insert SimpleName: a1(5774) into InfixExpression: ==(5776) at 0", "Insert SimpleName: a2(5775) into InfixExpression: ==(5776) at 1", "Insert NumberLiteral: 0(5777) into ReturnStatement(5778) at 0", "Insert InfixExpression: ==(5781) into IfStatement(5791) at 0", "Insert ReturnStatement(5783) into IfStatement(5791) at 1", "Insert IfStatement(5790) into IfStatement(5791) at 2", "Insert SimpleName: a1(5793) into InstanceofExpression(5796) at 0", "Insert SimpleType: ManualRecord.FakeAiring(5795) into InstanceofExpression(5796) at 1", "Insert Assignment: =(5807) into ExpressionStatement(5808) at 0", "Insert SimpleName: a2(5810) into InstanceofExpression(5813) at 0", "Insert SimpleType: ManualRecord.FakeAiring(5812) into InstanceofExpression(5813) at 1", "Insert Assignment: =(5824) into ExpressionStatement(5825) at 0", "Insert SimpleName: s1(5828) into VariableDeclarationFragment(5832) at 0", "Insert MethodInvocation(5831) into VariableDeclarationFragment(5832) at 1", "Insert SimpleName: s2(5835) into VariableDeclarationFragment(5839) at 0", "Insert MethodInvocation(5838) into VariableDeclarationFragment(5839) at 1", "Insert ParenthesizedExpression(5844) into ConditionalExpression(5854) at 0", "Insert InfixExpression: -(5847) into ConditionalExpression(5854) at 1", "Insert MethodInvocation(5853) into ConditionalExpression(5854) at 2", "Insert SimpleName: a1(5779) into InfixExpression: ==(5781) at 0", "Insert NullLiteral(5780) into InfixExpression: ==(5781) at 1", "Insert NumberLiteral: 1(5782) into ReturnStatement(5783) at 0", "Insert InfixExpression: ==(5786) into IfStatement(5790) at 0", "Insert ReturnStatement(5789) into IfStatement(5790) at 1", "Insert QualifiedName: ManualRecord.FakeAiring(5794) into SimpleType: ManualRecord.FakeAiring(5795) at 0", "Insert SimpleName: a1(5797) into Assignment: =(5807) at 0", "Insert MethodInvocation(5806) into Assignment: =(5807) at 1", "Insert QualifiedName: ManualRecord.FakeAiring(5811) into SimpleType: ManualRecord.FakeAiring(5812) at 0", "Insert SimpleName: a2(5814) into Assignment: =(5824) at 0", "Insert MethodInvocation(5823) into Assignment: =(5824) at 1", "Insert SimpleName: a1(5829) into MethodInvocation(5831) at 0", "Insert SimpleName: getSchedulingStart(5830) into MethodInvocation(5831) at 1", "Insert SimpleName: a2(5836) into MethodInvocation(5838) at 0", "Insert SimpleName: getSchedulingStart(5837) into MethodInvocation(5838) at 1", "Insert InfixExpression: ==(5843) into ParenthesizedExpression(5844) at 0", "Insert QualifiedName: a1.stationID(5845) into InfixExpression: -(5847) at 0", "Insert QualifiedName: a2.stationID(5846) into InfixExpression: -(5847) at 1", "Insert SimpleName: Long(5848) into MethodInvocation(5853) at 0", "Insert SimpleName: signum(5849) into MethodInvocation(5853) at 1", "Insert InfixExpression: -(5852) into MethodInvocation(5853) at 2", "Insert SimpleName: a2(5784) into InfixExpression: ==(5786) at 0", "Insert NullLiteral(5785) into InfixExpression: ==(5786) at 1", "Insert PrefixExpression: -(5788) into ReturnStatement(5789) at 0", "Insert MethodInvocation(5804) into MethodInvocation(5806) at 0", "Insert SimpleName: getContentAiring(5805) into MethodInvocation(5806) at 1", "Insert MethodInvocation(5821) into MethodInvocation(5823) at 0", "Insert SimpleName: getContentAiring(5822) into MethodInvocation(5823) at 1", "Insert SimpleName: s1(5841) into InfixExpression: ==(5843) at 0", "Insert SimpleName: s2(5842) into InfixExpression: ==(5843) at 1", "Insert SimpleName: s1(5850) into InfixExpression: -(5852) at 0", "Insert SimpleName: s2(5851) into InfixExpression: -(5852) at 1", "Insert NumberLiteral: 1(5787) into PrefixExpression: -(5788) at 0", "Insert ParenthesizedExpression(5802) into MethodInvocation(5804) at 0", "Insert SimpleName: getManualRecord(5803) into MethodInvocation(5804) at 1", "Insert ParenthesizedExpression(5819) into MethodInvocation(5821) at 0", "Insert SimpleName: getManualRecord(5820) into MethodInvocation(5821) at 1", "Insert CastExpression(5801) into ParenthesizedExpression(5802) at 0", "Insert CastExpression(5818) into ParenthesizedExpression(5819) at 0", "Insert SimpleType: ManualRecord.FakeAiring(5799) into CastExpression(5801) at 0", "Insert SimpleName: a1(5800) into CastExpression(5801) at 1", "Insert SimpleType: ManualRecord.FakeAiring(5816) into CastExpression(5818) at 0", "Insert SimpleName: a2(5817) into CastExpression(5818) at 1", "Insert QualifiedName: ManualRecord.FakeAiring(5798) into SimpleType: ManualRecord.FakeAiring(5799) at 0", "Insert QualifiedName: ManualRecord.FakeAiring(5815) into SimpleType: ManualRecord.FakeAiring(5816) at 0", "Delete QualifiedName: java.io.UnsupportedEncodingException(8)", "Delete ImportDeclaration(9)"]}}, {"BigBrother_cluster": {"actions": [{"root": "UPDATE from Scheduler to SchedulerSelector", "operations": ["UPD SimpleName: Scheduler from Scheduler to SchedulerSelector"]}, {"root": "INS MethodInvocation to InfixExpression: || at 0", "operations": ["INS MethodInvocation to InfixExpression: || at 0"]}, {"root": "INS MethodInvocation to InfixExpression: || at 1", "operations": ["INS StringLiteral: \"sports\" to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: || at 1"]}, {"root": "INS MethodInvocation to InfixExpression: || at 0", "operations": ["INS MethodInvocation to InfixExpression: || at 0"]}, {"root": "INS MethodInvocation to InfixExpression: || at 1", "operations": ["INS MethodInvocation to InfixExpression: || at 1", "INS StringLiteral: \"sports\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getCategory to MethodInvocation at 1", "MOV SimpleName: s to MethodInvocation at 0"]}, {"root": "UPDATE from getCategory to isCategory", "operations": ["UPD SimpleName: getCategory from getCategory to isCategory", "UPD SimpleName: getCategory from getCategory to isCategory", "UPD SimpleName: getCategory from getCategory to isCategory", "UPD SimpleName: getCategory from getCategory to isCategory"]}, {"root": "UPDATE from \"sports\" to \"movie\"", "operations": ["UPD StringLiteral: \"sports\" from \"sports\" to \"movie\"", "UPD StringLiteral: \"sports\" from \"sports\" to \"movie\""]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"sports\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: s to MethodInvocation at 0", "MOV SimpleName: getCategory to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: s to MethodInvocation at 0", "MOV SimpleName: getCategory to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"sports\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: s to MethodInvocation at 0", "MOV SimpleName: getCategory to MethodInvocation at 1"]}, {"root": "DEL MethodInvocation", "operations": ["DEL StringLiteral: \"movie\"", "DEL MethodInvocation", "DEL SimpleName: equalsIgnoreCase", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: equalsIgnoreCase", "DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL StringLiteral: \"movie\"", "DEL SimpleName: equalsIgnoreCase", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: equalsIgnoreCase", "DEL MethodInvocation"]}]}}, {"BigBrother_diff": {"operations": ["Update SimpleName: Scheduler(818) to SchedulerSelector", "Insert MethodInvocation(1941) into InfixExpression: ||(1949) at 0", "Insert MethodInvocation(1945) into InfixExpression: ||(1949) at 1", "Insert MethodInvocation(2101) into InfixExpression: ||(2109) at 0", "Insert MethodInvocation(2105) into InfixExpression: ||(2109) at 1", "Move SimpleName: s(1940) into MethodInvocation(1941) at 0", "Update SimpleName: getCategory(1941) to isCategory", "Move SimpleName: getCategory(1941) into MethodInvocation(1941) at 1", "Update StringLiteral: \"sports\"(1944) to \"movie\"", "Move StringLiteral: \"sports\"(1944) into MethodInvocation(1941) at 2", "Move SimpleName: s(1946) into MethodInvocation(1945) at 0", "Update SimpleName: getCategory(1947) to isCategory", "Move SimpleName: getCategory(1947) into MethodInvocation(1945) at 1", "Insert StringLiteral: \"sports\"(1944) into MethodInvocation(1945) at 2", "Move SimpleName: s(2104) into MethodInvocation(2101) at 0", "Update SimpleName: getCategory(2105) to isCategory", "Move SimpleName: getCategory(2105) into MethodInvocation(2101) at 1", "Update StringLiteral: \"sports\"(2108) to \"movie\"", "Move StringLiteral: \"sports\"(2108) into MethodInvocation(2101) at 2", "Move SimpleName: s(2110) into MethodInvocation(2105) at 0", "Update SimpleName: getCategory(2111) to isCategory", "Move SimpleName: getCategory(2111) into MethodInvocation(2105) at 1", "Insert StringLiteral: \"sports\"(2104) into MethodInvocation(2105) at 2", "Delete StringLiteral: \"movie\"(1938)", "Delete SimpleName: equalsIgnoreCase(1939)", "Delete MethodInvocation(1942)", "Delete MethodInvocation(1943)", "Delete SimpleName: equalsIgnoreCase(1945)", "Delete MethodInvocation(1948)", "Delete MethodInvocation(1949)", "Delete StringLiteral: \"movie\"(2102)", "Delete SimpleName: equalsIgnoreCase(2103)", "Delete MethodInvocation(2106)", "Delete MethodInvocation(2107)", "Delete SimpleName: equalsIgnoreCase(2109)", "Delete MethodInvocation(2112)", "Delete MethodInvocation(2113)"]}}, {"EPG_cluster": {"actions": [{"root": "UPDATE from Scheduler to SchedulerSelector", "operations": ["UPD SimpleName: Scheduler from Scheduler to SchedulerSelector", "UPD SimpleName: Scheduler from Scheduler to SchedulerSelector"]}]}}, {"EPG_diff": {"operations": ["Update SimpleName: Scheduler(1791) to SchedulerSelector", "Update SimpleName: Scheduler(2587) to SchedulerSelector"]}}, {"EPGDataSource_cluster": {"actions": [{"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"EPGDataSource_diff": {"operations": ["Update SimpleName: Seeker(739) to SeekerSelector", "Update SimpleName: Seeker(1208) to SeekerSelector", "Update SimpleName: Seeker(1054) to SeekerSelector", "Update SimpleName: Seeker(632) to SeekerSelector", "Update SimpleName: Seeker(3260) to SeekerSelector"]}}, {"FSManager_cluster": {"actions": [{"root": "UPDATE from Seeker to Hunter", "operations": ["UPD SimpleType: Seeker from Seeker to Hunter", "UPD SimpleName: Seeker from Seeker to Hunter"]}, {"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS ExpressionStatement to IfStatement at 1", "INS QualifiedName: SeekerSelector.USE_BETA_SEEKER to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Library to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS SimpleName: addIgnoreFile to MethodInvocation at 1", "INS SimpleName: getInstance to MethodInvocation at 1", "INS SimpleName: newF to MethodInvocation at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV ExpressionStatement to IfStatement at 2"]}]}}, {"FSManager_diff": {"operations": ["Update SimpleType: Seeker(368) to Hunter", "Update SimpleName: Seeker(367) to Hunter", "Update SimpleName: Seeker(370) to SeekerSelector", "Insert IfStatement(145) into Block(146) at 1", "Insert QualifiedName: SeekerSelector.USE_BETA_SEEKER(130) into IfStatement(145) at 0", "Insert ExpressionStatement(137) into IfStatement(145) at 1", "Move ExpressionStatement(136) into IfStatement(145) at 2", "Insert MethodInvocation(136) into ExpressionStatement(137) at 0", "Update SimpleName: Seeker(1081) to SeekerSelector", "Insert MethodInvocation(133) into MethodInvocation(136) at 0", "Insert SimpleName: addIgnoreFile(134) into MethodInvocation(136) at 1", "Insert SimpleName: newF(135) into MethodInvocation(136) at 2", "Update SimpleName: Seeker(2443) to SeekerSelector", "Insert SimpleName: Library(131) into MethodInvocation(133) at 0", "Insert SimpleName: getInstance(132) into MethodInvocation(133) at 1", "Update SimpleName: Seeker(2172) to SeekerSelector"]}}, {"FileTransfer_cluster": {"actions": [{"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"FileTransfer_diff": {"operations": ["Update SimpleName: Seeker(762) to SeekerSelector", "Update SimpleName: Seeker(799) to SeekerSelector", "Update SimpleName: Seeker(1692) to SeekerSelector", "Update SimpleName: Seeker(834) to SeekerSelector", "Update SimpleName: Seeker(788) to SeekerSelector", "Update SimpleName: Seeker(802) to SeekerSelector", "Update SimpleName: Seeker(808) to SeekerSelector"]}}, {"MMC_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: sage.nio.Splitter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: java.util.Set to ImportDeclaration at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: returnValue to ReturnStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: returnValue to VariableDeclarationFragment at 0", "INS InfixExpression: != to IfStatement at 0", "INS QualifiedName: SeekerSelector.USE_BETA_SEEKER to IfStatement at 0", "INS SimpleName: getInstance to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS IfStatement to Block at 1", "INS SimpleName: returnValue to InfixExpression: != at 0", "INS PrefixExpression: - to InfixExpression: != at 1", "INS ReturnStatement to IfStatement at 1", "INS SimpleName: recordingFile to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS IfStatement to Block at 0", "INS SimpleName: Splitter to MethodInvocation at 0", "INS SimpleName: getBytesStreamed to MethodInvocation at 1", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS Block to IfStatement at 1"]}, {"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}, {"root": "UPDATE from Scheduler to SchedulerSelector", "operations": ["UPD SimpleName: Scheduler from Scheduler to SchedulerSelector", "UPD SimpleName: Scheduler from Scheduler to SchedulerSelector"]}]}}, {"MMC_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(2613) at 1", "Insert ImportDeclaration(5) into CompilationUnit(2613) at 2", "Insert QualifiedName: sage.nio.Splitter(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: java.util.Set(4) into ImportDeclaration(5) at 0", "Insert IfStatement(1788) into Block(1855) at 0", "Insert QualifiedName: SeekerSelector.USE_BETA_SEEKER(1769) into IfStatement(1788) at 0", "Insert Block(1787) into IfStatement(1788) at 1", "Insert VariableDeclarationStatement(1779) into Block(1787) at 0", "Insert IfStatement(1786) into Block(1787) at 1", "Update SimpleName: Seeker(544) to SeekerSelector", "Update SimpleName: Scheduler(550) to SchedulerSelector", "Update SimpleName: Seeker(635) to SeekerSelector", "Update SimpleName: Scheduler(641) to SchedulerSelector", "Insert PrimitiveType: long(1770) into VariableDeclarationStatement(1779) at 0", "Insert VariableDeclarationFragment(1778) into VariableDeclarationStatement(1779) at 1", "Insert InfixExpression: !=(1783) into IfStatement(1786) at 0", "Insert ReturnStatement(1785) into IfStatement(1786) at 1", "Insert SimpleName: returnValue(1771) into VariableDeclarationFragment(1778) at 0", "Insert MethodInvocation(1777) into VariableDeclarationFragment(1778) at 1", "Insert SimpleName: returnValue(1780) into InfixExpression: !=(1783) at 0", "Insert PrefixExpression: -(1782) into InfixExpression: !=(1783) at 1", "Insert SimpleName: returnValue(1784) into ReturnStatement(1785) at 0", "Insert MethodInvocation(1774) into MethodInvocation(1777) at 0", "Insert SimpleName: getBytesStreamed(1775) into MethodInvocation(1777) at 1", "Insert SimpleName: recordingFile(1776) into MethodInvocation(1777) at 2", "Insert NumberLiteral: 1(1781) into PrefixExpression: -(1782) at 0", "Insert SimpleName: Splitter(1772) into MethodInvocation(1774) at 0", "Insert SimpleName: getInstance(1773) into MethodInvocation(1774) at 1"]}}, {"ManualRecord_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 22", "INS Block to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: stationID to ReturnStatement at 0", "INS PrimitiveType: int to MethodDeclaration at 1", "INS SimpleName: getStationID to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 35", "operations": ["INS Block to MethodDeclaration at 3", "INS SimpleName: duration to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS PrimitiveType: long to MethodDeclaration at 1", "INS SimpleName: getDuration to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 35"]}, {"root": "INS Modifier: public to MethodDeclaration at 0", "operations": ["INS Modifier: public to MethodDeclaration at 0"]}]}}, {"ManualRecord_diff": {"operations": ["Insert MethodDeclaration(689) into TypeDeclaration: class(3752) at 22", "Insert MethodDeclaration(1193) into TypeDeclaration: class(3752) at 35", "Insert Modifier: public(683) into MethodDeclaration(689) at 0", "Insert PrimitiveType: int(684) into MethodDeclaration(689) at 1", "Insert SimpleName: getStationID(685) into MethodDeclaration(689) at 2", "Insert Block(688) into MethodDeclaration(689) at 3", "Insert Modifier: public(690) into MethodDeclaration(709) at 0", "Insert Modifier: public(1187) into MethodDeclaration(1193) at 0", "Insert PrimitiveType: long(1188) into MethodDeclaration(1193) at 1", "Insert SimpleName: getDuration(1189) into MethodDeclaration(1193) at 2", "Insert Block(1192) into MethodDeclaration(1193) at 3", "Insert ReturnStatement(687) into Block(688) at 0", "Insert ReturnStatement(1191) into Block(1192) at 0", "Insert SimpleName: stationID(686) into ReturnStatement(687) at 0", "Insert SimpleName: duration(1190) into ReturnStatement(1191) at 0"]}}, {"MediaFile_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 60", "operations": ["INS SimpleName: CaptureDeviceInput to SimpleType: CaptureDeviceInput at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Modifier: static to MethodDeclaration at 0", "INS SimpleName: liveFileMap to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS SimpleName: cdi to MethodInvocation at 2", "INS SimpleName: file to MethodInvocation at 3", "INS SimpleType: MediaFile to MethodDeclaration at 1", "INS SimpleType: CaptureDeviceInput to SingleVariableDeclaration at 0", "INS SimpleName: MediaFile to SimpleType: MediaFile at 0", "INS SimpleName: put to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 60", "INS SimpleName: putLiveMediaFileForInput to MethodDeclaration at 2", "INS SimpleName: MediaFile to SimpleType: MediaFile at 0", "INS SimpleName: cdi to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: file to SingleVariableDeclaration at 1", "INS SimpleType: MediaFile to SingleVariableDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 62", "operations": ["INS SimpleName: putLiveBufferedMediaFileForInput to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 62", "INS SimpleName: liveBuffFileMap to MethodInvocation at 0", "INS SimpleName: CaptureDeviceInput to SimpleType: CaptureDeviceInput at 0", "INS SimpleName: cdi to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleType: CaptureDeviceInput to SingleVariableDeclaration at 0", "INS SimpleName: file to MethodInvocation at 3", "INS SimpleName: file to SingleVariableDeclaration at 1", "INS SimpleName: MediaFile to SimpleType: MediaFile at 0", "INS SimpleType: MediaFile to MethodDeclaration at 1", "INS SimpleName: cdi to SingleVariableDeclaration at 1", "INS SimpleName: MediaFile to SimpleType: MediaFile at 0", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 5", "INS Modifier: static to MethodDeclaration at 0", "INS SimpleType: MediaFile to SingleVariableDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 90", "operations": ["INS SimpleName: getInfoAiringID to MethodDeclaration at 1", "INS SimpleName: infoAiringID to ReturnStatement at 0", "INS PrimitiveType: int to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 90", "INS Block to MethodDeclaration at 2", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 113", "operations": ["INS Block to MethodDeclaration at 5", "INS TextElement: <p/> to TagElement at 8", "INS TextElement: You can only get one of these at a time. You must pass the  to TagElement at 2", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: NextSegmentGuarantee to TagElement: @link at 0", "INS NullLiteral to ConditionalExpression at 2", "INS InfixExpression: != to ConditionalExpression at 0", "INS SimpleName: File to SimpleType: File at 0", "INS MethodDeclaration to TypeDeclaration: class at 113", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS TextElement:  <code>null</code> if your request was denied. to TagElement: @return at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: NextSegmentGuarantee to ClassInstanceCreation at 0", "INS TextElement: <p/> to TagElement at 1", "INS SimpleName: currTime to ClassInstanceCreation at 2", "INS TextElement: Returns a new file name that can be guaranteed to be able to be used on this media file shortly. to TagElement at 0", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: nextFileName to ClassInstanceCreation at 1", "INS TagElement: @link to TagElement at 5", "INS TextElement: new segment before you can call this and get a new segment. to TagElement at 7", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS VariableDeclarationStatement to Block at 1", "INS ReturnStatement to IfStatement at 1", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: nextFileName to VariableDeclarationFragment at 0", "INS Assignment: = to ConditionalExpression at 1", "INS TextElement: playback. to TagElement at 10", "INS TextElement: returned from here to  to TagElement at 4", "INS SimpleName: NextSegmentGuarantee to SimpleType: NextSegmentGuarantee at 0", "INS ConditionalExpression to ReturnStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS TagElement: @link to TagElement at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS NullLiteral to ReturnStatement at 0", "INS MethodRefParameter to MethodRef at 1", "INS SimpleType: File to VariableDeclarationStatement at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: NextSegmentGuarantee to SimpleType: NextSegmentGuarantee at 0", "INS SimpleName: nextSegmentGuarantee to Assignment: = at 0", "INS SimpleType: NextSegmentGuarantee to MethodRefParameter at 0", "INS SimpleName: nextSegmentGuarantee to InfixExpression: != at 0", "INS SimpleName: rollGuaranteedSegment to MethodRef at 0", "INS SimpleName: currTime to SingleVariableDeclaration at 1", "INS IfStatement to Block at 0", "INS SimpleType: NextSegmentGuarantee to MethodDeclaration at 2", "INS SimpleName: NextSegmentGuarantee to SimpleType: NextSegmentGuarantee at 0", "INS InfixExpression: != to IfStatement at 0", "INS TextElement: This is only to be used when recording and transitioning between file segments during live to TagElement at 9", "INS SimpleName: getNextSegment to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS ReturnStatement to Block at 2", "INS Modifier: synchronized to MethodDeclaration at 1", "INS SimpleName: nextFileName to InfixExpression: != at 0", "INS SimpleName: startGuaranteedSegment to MethodDeclaration at 3", "INS TagElement: @return to Javadoc at 1", "INS BooleanLiteral: false to MethodInvocation at 1", "INS TextElement:  to start a to TagElement at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 114", "operations": ["INS SimpleName: nextSegment to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: nextSegment to TagElement: @param at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS NumberLiteral: 1 to InfixExpression: + at 1", "INS TextElement: Start a new segment with the file from a  to TagElement at 0", "INS MethodInvocation to MethodInvocation at 3", "INS Block to TryStatement at 0", "INS SimpleName: getStartTime to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TryStatement to Block at 2", "INS TagElement: @link to TagElement: @param at 6", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NullLiteral to MethodInvocation at 2", "INS ThisExpression to InfixExpression: + at 3", "INS InfixExpression: + to MethodInvocation at 1", "INS SimpleName: NextSegmentGuarantee to TagElement: @link at 0", "INS SimpleName: rollGuaranteedSegment to MethodDeclaration at 3", "INS SimpleName: nextSegment to InfixExpression: != at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Wizard to SimpleType: Wizard at 0", "INS TextElement:  The  to TagElement: @param at 1", "INS SimpleName: getInstance to MethodInvocation at 1", "INS TextElement: . to TagElement: @param at 7", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS QualifiedName: Sage.DBG to IfStatement at 0", "INS SimpleName: Wizard to MethodInvocation at 0", "INS StringLiteral: \" \" to InfixExpression: + at 2", "INS SimpleType: NextSegmentGuarantee to SingleVariableDeclaration at 0", "INS SimpleName: wiz to MethodInvocation at 0", "INS SimpleName: getStartTime to MethodInvocation at 1", "INS SimpleName: nextSegment to SingleVariableDeclaration at 1", "INS MethodInvocation to InfixExpression: + at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: MediaFile to TagElement: @link at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: startGuaranteedSegment to MethodRef at 0", "INS PrimitiveType: long to MethodRefParameter at 0", "INS SimpleName: releaseWriteLock to MethodInvocation at 1", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: wiz to MethodInvocation at 0", "INS SimpleName: acquireWriteLock to MethodInvocation at 1", "INS SimpleName: nextSegmentGuarantee to InfixExpression: == at 0", "INS MethodDeclaration to TypeDeclaration: class at 114", "INS QualifiedName: Wizard.MEDIAFILE_CODE to MethodInvocation at 2", "INS ExpressionStatement to IfStatement at 1", "INS BooleanLiteral: true to ReturnStatement at 0", "INS TextElement:  for this  to TagElement: @param at 5", "INS Modifier: synchronized to MethodDeclaration at 1", "INS IfStatement to Block at 0", "INS TagElement: @link to TagElement at 1", "INS QualifiedName: Wizard.MEDIAFILE_CODE to MethodInvocation at 2", "INS MethodRefParameter to MethodRef at 1", "INS TextElement:  object. to TagElement at 2", "INS SimpleName: wiz to VariableDeclarationFragment at 0", "INS SimpleName: nextSegmentGuarantee to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS TextElement: playback. to TagElement at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS TagElement: @return to Javadoc at 2", "INS InfixExpression: != to InfixExpression: || at 1", "INS SimpleName: NextSegmentGuarantee to TagElement: @link at 0", "INS SimpleName: startSegment to MethodInvocation at 0", "INS Javadoc to MethodDeclaration at 0", "INS ReturnStatement to Block at 5", "INS TextElement: <p/> to TagElement at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to TryStatement at 1", "INS StringLiteral: \"MediaFile transitioned to subfile:\" to InfixExpression: + at 0", "INS SimpleType: Wizard to VariableDeclarationStatement at 0", "INS IfStatement to Block at 3", "INS TagElement to Javadoc at 0", "INS TagElement: @link to TagElement: @param at 2", "INS SimpleName: getNextSegment to MethodInvocation at 1", "INS TagElement: @link to TagElement: @param at 4", "INS InfixExpression: || to IfStatement at 0", "INS QualifiedName: System.out to MethodInvocation at 0", "INS TextElement:  <code>true</code> if the segment change was successful. to TagElement: @return at 0", "INS MethodRef to TagElement: @link at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: nextSegmentGuarantee to MethodInvocation at 0", "INS SimpleName: println to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 1", "INS InfixExpression: == to InfixExpression: || at 0", "INS NullLiteral to Assignment: = at 1", "INS SimpleName: endSegment to MethodInvocation at 0", "INS TextElement: This is only to be used when recording and transitioning between file segments during live to TagElement at 4", "INS SimpleName: nextSegmentGuarantee to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS ReturnStatement to IfStatement at 1", "INS SimpleName: nextSegmentGuarantee to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS Block to MethodDeclaration at 5", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: nextSegmentGuarantee to InfixExpression: != at 1", "INS SimpleName: getNewSegment to MethodInvocation at 1", "INS TextElement:  object provided by to TagElement: @param at 3", "INS SimpleName: NextSegmentGuarantee to SimpleType: NextSegmentGuarantee at 0", "INS ExpressionStatement to Block at 4", "INS MethodInvocation to InfixExpression: + at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 115", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 115", "INS TagElement to Javadoc at 0", "INS TextElement: <p/> to TagElement at 7", "INS TagElement: @link to TagElement: @param at 4", "INS SimpleType: NextSegmentGuarantee to SingleVariableDeclaration at 0", "INS TextElement: You cannot release the guarantee without the correct  to TagElement at 2", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: NextSegmentGuarantee to SimpleType: NextSegmentGuarantee at 0", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS TextElement: <p/> to TagElement at 1", "INS TextElement:  for this  to TagElement: @param at 5", "INS Modifier: synchronized to MethodDeclaration at 1", "INS TagElement: @link to TagElement: @param at 2", "INS TextElement:  The  to TagElement: @param at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: startGuaranteedSegment to MethodRef at 0", "INS TextElement:  Set <code>true</code> to clear the segment regardless of if nextSegment is correct. to TagElement: @param at 1", "INS SimpleName: releaseGuaranteedSegment to MethodDeclaration at 3", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: force to SingleVariableDeclaration at 1", "INS TagElement: @link to TagElement at 5", "INS MethodRefParameter to MethodRef at 1", "INS SimpleName: nextSegmentGuarantee to Assignment: = at 0", "INS SimpleName: force to TagElement: @param at 0", "INS PrimitiveType: long to MethodRefParameter at 0", "INS Javadoc to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to IfStatement at 1", "INS SimpleName: nextSegment to InfixExpression: == at 0", "INS MethodRef to TagElement: @link at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: nextSegmentGuarantee to InfixExpression: == at 1", "INS TextElement: Release a guaranteed new file segment. to TagElement at 0", "INS SimpleName: MediaFile to TagElement: @link at 0", "INS TextElement:  unless the <code>force</code> parameter is get to <code>true</code>. to TagElement at 6", "INS SimpleName: nextSegment to TagElement: @param at 0", "INS SimpleName: force to InfixExpression: || at 1", "INS TagElement: @link to TagElement at 3", "INS TagElement: @link to TagElement: @param at 6", "INS SimpleName: MediaFile to TagElement: @link at 0", "INS IfStatement to Block at 0", "INS TextElement: playback. to TagElement at 9", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: NextSegmentGuarantee to TagElement: @link at 0", "INS SimpleName: NextSegmentGuarantee to TagElement: @link at 0", "INS Block to MethodDeclaration at 6", "INS TextElement:  object provided by to TagElement: @param at 3", "INS NullLiteral to Assignment: = at 1", "INS TextElement: . to TagElement: @param at 7", "INS TextElement: This is only to be used when recording and transitioning between file segments during live to TagElement at 8", "INS InfixExpression: == to InfixExpression: || at 0", "INS SimpleName: nextSegment to SingleVariableDeclaration at 1", "INS TextElement:  for this to TagElement at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 116", "operations": ["INS SimpleName: startSegment to MethodInvocation at 0", "INS SimpleName: newEncodedBy to SingleVariableDeclaration at 1", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SimpleName: startSegment to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 116", "INS Modifier: synchronized to MethodDeclaration at 0", "INS SimpleName: newEncodedBy to MethodInvocation at 2", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: startTime to MethodInvocation at 1", "INS SimpleName: startTime to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS NullLiteral to MethodInvocation at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 202", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 202", "INS SimpleName: videoDirectory to ReturnStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: getVideoDirectory to MethodDeclaration at 2", "INS Block to MethodDeclaration at 3", "INS SimpleType: String to MethodDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 228", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 228", "INS SimpleType: NextSegmentGuarantee to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: nextSegmentGuarantee to VariableDeclarationFragment at 0", "INS SimpleName: NextSegmentGuarantee to SimpleType: NextSegmentGuarantee at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 232", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: currTime to VariableDeclarationFragment at 0", "INS SimpleName: nextSegment to VariableDeclarationFragment at 0", "INS SimpleName: currTime to SingleVariableDeclaration at 1", "INS SimpleName: nextSegment to FieldAccess at 1", "INS SimpleName: getNextSegment to MethodDeclaration at 2", "INS SimpleType: File to MethodDeclaration at 1", "INS Modifier: public to TypeDeclaration: class at 0", "INS SimpleName: NextSegmentGuarantee to MethodDeclaration at 1", "INS SimpleName: NextSegmentGuarantee to TypeDeclaration: class at 1", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SimpleType: File to FieldDeclaration at 2", "INS SimpleName: File to SimpleType: File at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleName: nextSegment to MethodInvocation at 0", "INS Block to MethodDeclaration at 3", "INS FieldAccess to Assignment: = at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: nextSegment to ReturnStatement at 0", "INS SimpleName: currTime to Assignment: = at 1", "INS SimpleName: File to SimpleType: File at 0", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleType: File to SingleVariableDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: getStartTime to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS ReturnStatement to Block at 0", "INS SimpleName: nextSegment to SingleVariableDeclaration at 1", "INS SimpleName: currTime to ReturnStatement at 0", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1", "INS Modifier: private to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS Block to MethodDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS Block to MethodDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 2", "INS ThisExpression to FieldAccess at 0", "INS PrimitiveType: long to FieldDeclaration at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: nextSegment to Assignment: = at 1", "INS SimpleType: String to MethodDeclaration at 1", "INS ExpressionStatement to Block at 1", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS ReturnStatement to Block at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: getNewSegment to MethodDeclaration at 2", "INS SimpleName: currTime to FieldAccess at 1", "INS TypeDeclaration: class to TypeDeclaration: class at 232", "INS FieldDeclaration to TypeDeclaration: class at 3", "INS PrimitiveType: long to MethodDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 4"]}, {"root": "INS Modifier: private to MethodDeclaration at 0", "operations": ["INS Modifier: private to MethodDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: guaranteedFile to SingleVariableDeclaration at 1", "INS SimpleType: File to SingleVariableDeclaration at 0", "INS SimpleName: File to SimpleType: File at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TextElement: Use with care. to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS SimpleName: guaranteedFile to InfixExpression: != at 0", "INS SimpleName: guaranteedFile to MethodInvocation at 2", "INS ExpressionStatement to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: addElement to MethodInvocation at 1", "INS IfStatement to Block at 5", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: files to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV ExpressionStatement to IfStatement at 2"]}, {"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}, {"root": "INS ParenthesizedExpression to InfixExpression: || at 2", "operations": ["INS InfixExpression: && to ParenthesizedExpression at 0", "INS SimpleName: nextSegmentGuarantee to InfixExpression: != at 0", "INS SimpleName: nextSegmentGuarantee to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: rv to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getNewSegment to MethodInvocation at 1", "INS NullLiteral to InfixExpression: != at 1", "INS ParenthesizedExpression to InfixExpression: || at 2", "INS MethodInvocation to InfixExpression: && at 1", "INS InfixExpression: != to InfixExpression: && at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS SimpleName: name to MethodInvocation at 0", "INS SimpleName: hashCode to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS QualifiedName: theShow.title.ignoreCaseHash to Assignment: = at 0", "INS SimpleName: toLowerCase to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: sage.media.format.MPEGParser", "DEL ImportDeclaration"]}]}}, {"MediaFile_diff": {"operations": ["Insert MethodDeclaration(706) into TypeDeclaration: class(28124) at 60", "Insert MethodDeclaration(742) into TypeDeclaration: class(28124) at 62", "Insert MethodDeclaration(15196) into TypeDeclaration: class(28124) at 90", "Insert MethodDeclaration(17186) into TypeDeclaration: class(28124) at 113", "Insert MethodDeclaration(17289) into TypeDeclaration: class(28124) at 114", "Insert MethodDeclaration(17343) into TypeDeclaration: class(28124) at 115", "Insert MethodDeclaration(17361) into TypeDeclaration: class(28124) at 116", "Insert MethodDeclaration(27086) into TypeDeclaration: class(28124) at 202", "Insert FieldDeclaration(27257) into TypeDeclaration: class(28124) at 228", "Insert TypeDeclaration: class(28123) into TypeDeclaration: class(28124) at 232", "Insert Modifier: static(687) into MethodDeclaration(706) at 0", "Insert SimpleType: MediaFile(689) into MethodDeclaration(706) at 1", "Insert SimpleName: putLiveMediaFileForInput(690) into MethodDeclaration(706) at 2", "Insert SingleVariableDeclaration(694) into MethodDeclaration(706) at 3", "Insert SingleVariableDeclaration(698) into MethodDeclaration(706) at 4", "Insert Block(705) into MethodDeclaration(706) at 5", "Insert Modifier: static(723) into MethodDeclaration(742) at 0", "Insert SimpleType: MediaFile(725) into MethodDeclaration(742) at 1", "Insert SimpleName: putLiveBufferedMediaFileForInput(726) into MethodDeclaration(742) at 2", "Insert SingleVariableDeclaration(730) into MethodDeclaration(742) at 3", "Insert SingleVariableDeclaration(734) into MethodDeclaration(742) at 4", "Insert Block(741) into MethodDeclaration(742) at 5", "Insert PrimitiveType: int(15191) into MethodDeclaration(15196) at 0", "Insert SimpleName: getInfoAiringID(15192) into MethodDeclaration(15196) at 1", "Insert Block(15195) into MethodDeclaration(15196) at 2", "Insert Javadoc(17150) into MethodDeclaration(17186) at 0", "Insert Modifier: synchronized(17151) into MethodDeclaration(17186) at 1", "Insert SimpleType: NextSegmentGuarantee(17153) into MethodDeclaration(17186) at 2", "Insert SimpleName: startGuaranteedSegment(17154) into MethodDeclaration(17186) at 3", "Insert SingleVariableDeclaration(17157) into MethodDeclaration(17186) at 4", "Insert Block(17185) into MethodDeclaration(17186) at 5", "Insert Javadoc(17212) into MethodDeclaration(17289) at 0", "Insert Modifier: synchronized(17213) into MethodDeclaration(17289) at 1", "Insert PrimitiveType: boolean(17214) into MethodDeclaration(17289) at 2", "Insert SimpleName: rollGuaranteedSegment(17215) into MethodDeclaration(17289) at 3", "Insert SingleVariableDeclaration(17219) into MethodDeclaration(17289) at 4", "Insert Block(17288) into MethodDeclaration(17289) at 5", "Insert Javadoc(17321) into MethodDeclaration(17343) at 0", "Insert Modifier: synchronized(17322) into MethodDeclaration(17343) at 1", "Insert PrimitiveType: void(17323) into MethodDeclaration(17343) at 2", "Insert SimpleName: releaseGuaranteedSegment(17324) into MethodDeclaration(17343) at 3", "Insert SingleVariableDeclaration(17328) into MethodDeclaration(17343) at 4", "Insert SingleVariableDeclaration(17331) into MethodDeclaration(17343) at 5", "Insert Block(17342) into MethodDeclaration(17343) at 6", "Insert Modifier: synchronized(17344) into MethodDeclaration(17361) at 0", "Insert PrimitiveType: void(17345) into MethodDeclaration(17361) at 1", "Insert SimpleName: startSegment(17346) into MethodDeclaration(17361) at 2", "Insert SingleVariableDeclaration(17349) into MethodDeclaration(17361) at 3", "Insert SingleVariableDeclaration(17353) into MethodDeclaration(17361) at 4", "Insert Block(17360) into MethodDeclaration(17361) at 5", "Insert Modifier: private(17362) into MethodDeclaration(17546) at 0", "Insert SingleVariableDeclaration(17376) into MethodDeclaration(17546) at 6", "Insert Javadoc(19952) into MethodDeclaration(19995) at 0", "Insert Modifier: public(27079) into MethodDeclaration(27086) at 0", "Insert SimpleType: String(27081) into MethodDeclaration(27086) at 1", "Insert SimpleName: getVideoDirectory(27082) into MethodDeclaration(27086) at 2", "Insert Block(27085) into MethodDeclaration(27086) at 3", "Insert Modifier: private(27252) into FieldDeclaration(27257) at 0", "Insert SimpleType: NextSegmentGuarantee(27254) into FieldDeclaration(27257) at 1", "Insert VariableDeclarationFragment(27256) into FieldDeclaration(27257) at 2", "Insert Modifier: public(28060) into TypeDeclaration: class(28123) at 0", "Insert SimpleName: NextSegmentGuarantee(28061) into TypeDeclaration: class(28123) at 1", "Insert FieldDeclaration(28068) into TypeDeclaration: class(28123) at 2", "Insert FieldDeclaration(28074) into TypeDeclaration: class(28123) at 3", "Insert MethodDeclaration(28097) into TypeDeclaration: class(28123) at 4", "Insert MethodDeclaration(28105) into TypeDeclaration: class(28123) at 5", "Insert MethodDeclaration(28115) into TypeDeclaration: class(28123) at 6", "Insert MethodDeclaration(28122) into TypeDeclaration: class(28123) at 7", "Insert SimpleName: MediaFile(688) into SimpleType: MediaFile(689) at 0", "Insert SimpleType: CaptureDeviceInput(692) into SingleVariableDeclaration(694) at 0", "Insert SimpleName: cdi(693) into SingleVariableDeclaration(694) at 1", "Insert SimpleType: MediaFile(696) into SingleVariableDeclaration(698) at 0", "Insert SimpleName: file(697) into SingleVariableDeclaration(698) at 1", "Insert ReturnStatement(704) into Block(705) at 0", "Insert SimpleName: MediaFile(724) into SimpleType: MediaFile(725) at 0", "Insert SimpleType: CaptureDeviceInput(728) into SingleVariableDeclaration(730) at 0", "Insert SimpleName: cdi(729) into SingleVariableDeclaration(730) at 1", "Insert SimpleType: MediaFile(732) into SingleVariableDeclaration(734) at 0", "Insert SimpleName: file(733) into SingleVariableDeclaration(734) at 1", "Insert ReturnStatement(740) into Block(741) at 0", "Insert ReturnStatement(15194) into Block(15195) at 0", "Insert TagElement(17147) into Javadoc(17150) at 0", "Insert TagElement: @return(17149) into Javadoc(17150) at 1", "Insert SimpleName: NextSegmentGuarantee(17152) into SimpleType: NextSegmentGuarantee(17153) at 0", "Insert PrimitiveType: long(17155) into SingleVariableDeclaration(17157) at 0", "Insert SimpleName: currTime(17156) into SingleVariableDeclaration(17157) at 1", "Insert IfStatement(17163) into Block(17185) at 0", "Insert VariableDeclarationStatement(17171) into Block(17185) at 1", "Insert ReturnStatement(17184) into Block(17185) at 2", "Insert TagElement(17194) into Javadoc(17212) at 0", "Insert TagElement: @param(17209) into Javadoc(17212) at 1", "Insert TagElement: @return(17211) into Javadoc(17212) at 2", "Insert SimpleType: NextSegmentGuarantee(17217) into SingleVariableDeclaration(17219) at 0", "Insert SimpleName: nextSegment(17218) into SingleVariableDeclaration(17219) at 1", "Insert IfStatement(17229) into Block(17288) at 0", "Insert VariableDeclarationStatement(17237) into Block(17288) at 1", "Insert TryStatement(17268) into Block(17288) at 2", "Insert IfStatement(17281) into Block(17288) at 3", "Insert ExpressionStatement(17285) into Block(17288) at 4", "Insert ReturnStatement(17287) into Block(17288) at 5", "Insert TagElement(17302) into Javadoc(17321) at 0", "Insert TagElement: @param(17317) into Javadoc(17321) at 1", "Insert TagElement: @param(17320) into Javadoc(17321) at 2", "Insert SimpleType: NextSegmentGuarantee(17326) into SingleVariableDeclaration(17328) at 0", "Insert SimpleName: nextSegment(17327) into SingleVariableDeclaration(17328) at 1", "Insert PrimitiveType: boolean(17329) into SingleVariableDeclaration(17331) at 0", "Insert SimpleName: force(17330) into SingleVariableDeclaration(17331) at 1", "Insert IfStatement(17341) into Block(17342) at 0", "Insert PrimitiveType: long(17347) into SingleVariableDeclaration(17349) at 0", "Insert SimpleName: startTime(17348) into SingleVariableDeclaration(17349) at 1", "Insert SimpleType: String(17351) into SingleVariableDeclaration(17353) at 0", "Insert SimpleName: newEncodedBy(17352) into SingleVariableDeclaration(17353) at 1", "Insert ExpressionStatement(17359) into Block(17360) at 0", "Insert SimpleType: File(17374) into SingleVariableDeclaration(17376) at 0", "Insert SimpleName: guaranteedFile(17375) into SingleVariableDeclaration(17376) at 1", "Insert TagElement(19951) into Javadoc(19952) at 0", "Insert SimpleName: String(27080) into SimpleType: String(27081) at 0", "Insert ReturnStatement(27084) into Block(27085) at 0", "Insert SimpleName: NextSegmentGuarantee(27253) into SimpleType: NextSegmentGuarantee(27254) at 0", "Insert SimpleName: nextSegmentGuarantee(27255) into VariableDeclarationFragment(27256) at 0", "Insert Modifier: private(28062) into FieldDeclaration(28068) at 0", "Insert Modifier: final(28063) into FieldDeclaration(28068) at 1", "Insert SimpleType: File(28065) into FieldDeclaration(28068) at 2", "Insert VariableDeclarationFragment(28067) into FieldDeclaration(28068) at 3", "Insert Modifier: private(28069) into FieldDeclaration(28074) at 0", "Insert Modifier: final(28070) into FieldDeclaration(28074) at 1", "Insert PrimitiveType: long(28071) into FieldDeclaration(28074) at 2", "Insert VariableDeclarationFragment(28073) into FieldDeclaration(28074) at 3", "Insert Modifier: private(28075) into MethodDeclaration(28097) at 0", "Insert SimpleName: NextSegmentGuarantee(28076) into MethodDeclaration(28097) at 1", "Insert SingleVariableDeclaration(28080) into MethodDeclaration(28097) at 2", "Insert SingleVariableDeclaration(28083) into MethodDeclaration(28097) at 3", "Insert Block(28096) into MethodDeclaration(28097) at 4", "Insert Modifier: public(28098) into MethodDeclaration(28105) at 0", "Insert SimpleType: File(28100) into MethodDeclaration(28105) at 1", "Insert SimpleName: getNewSegment(28101) into MethodDeclaration(28105) at 2", "Insert Block(28104) into MethodDeclaration(28105) at 3", "Insert Modifier: public(28106) into MethodDeclaration(28115) at 0", "Insert SimpleType: String(28108) into MethodDeclaration(28115) at 1", "Insert SimpleName: getNextSegment(28109) into MethodDeclaration(28115) at 2", "Insert Block(28114) into MethodDeclaration(28115) at 3", "Insert Modifier: public(28116) into MethodDeclaration(28122) at 0", "Insert PrimitiveType: long(28117) into MethodDeclaration(28122) at 1", "Insert SimpleName: getStartTime(28118) into MethodDeclaration(28122) at 2", "Insert Block(28121) into MethodDeclaration(28122) at 3", "Insert SimpleName: CaptureDeviceInput(691) into SimpleType: CaptureDeviceInput(692) at 0", "Insert SimpleName: MediaFile(695) into SimpleType: MediaFile(696) at 0", "Insert MethodInvocation(703) into ReturnStatement(704) at 0", "Insert SimpleName: CaptureDeviceInput(727) into SimpleType: CaptureDeviceInput(728) at 0", "Insert SimpleName: MediaFile(731) into SimpleType: MediaFile(732) at 0", "Insert MethodInvocation(739) into ReturnStatement(740) at 0", "Insert SimpleName: infoAiringID(15193) into ReturnStatement(15194) at 0", "Insert TextElement: Returns a new file name that can be guaranteed to be able to be used on this media file shortly.(17130) into TagElement(17147) at 0", "Insert TextElement: <p/>(17131) into TagElement(17147) at 1", "Insert TextElement: You can only get one of these at a time. You must pass the (17132) into TagElement(17147) at 2", "Insert TagElement: @link(17134) into TagElement(17147) at 3", "Insert TextElement: returned from here to (17135) into TagElement(17147) at 4", "Insert TagElement: @link(17141) into TagElement(17147) at 5", "Insert TextElement:  to start a(17142) into TagElement(17147) at 6", "Insert TextElement: new segment before you can call this and get a new segment.(17143) into TagElement(17147) at 7", "Insert TextElement: <p/>(17144) into TagElement(17147) at 8", "Insert TextElement: This is only to be used when recording and transitioning between file segments during live(17145) into TagElement(17147) at 9", "Insert TextElement: playback.(17146) into TagElement(17147) at 10", "Insert TextElement:  <code>null</code> if your request was denied.(17148) into TagElement: @return(17149) at 0", "Insert InfixExpression: !=(17160) into IfStatement(17163) at 0", "Insert ReturnStatement(17162) into IfStatement(17163) at 1", "Insert SimpleType: File(17165) into VariableDeclarationStatement(17171) at 0", "Insert VariableDeclarationFragment(17170) into VariableDeclarationStatement(17171) at 1", "Insert ConditionalExpression(17183) into ReturnStatement(17184) at 0", "Insert TextElement: Start a new segment with the file from a (17187) into TagElement(17194) at 0", "Insert TagElement: @link(17189) into TagElement(17194) at 1", "Insert TextElement:  object.(17190) into TagElement(17194) at 2", "Insert TextElement: <p/>(17191) into TagElement(17194) at 3", "Insert TextElement: This is only to be used when recording and transitioning between file segments during live(17192) into TagElement(17194) at 4", "Insert TextElement: playback.(17193) into TagElement(17194) at 5", "Insert SimpleName: nextSegment(17195) into TagElement: @param(17209) at 0", "Insert TextElement:  The (17196) into TagElement: @param(17209) at 1", "Insert TagElement: @link(17198) into TagElement: @param(17209) at 2", "Insert TextElement:  object provided by(17199) into TagElement: @param(17209) at 3", "Insert TagElement: @link(17204) into TagElement: @param(17209) at 4", "Insert TextElement:  for this (17205) into TagElement: @param(17209) at 5", "Insert TagElement: @link(17207) into TagElement: @param(17209) at 6", "Insert TextElement: .(17208) into TagElement: @param(17209) at 7", "Insert TextElement:  <code>true</code> if the segment change was successful.(17210) into TagElement: @return(17211) at 0", "Insert SimpleName: NextSegmentGuarantee(17216) into SimpleType: NextSegmentGuarantee(17217) at 0", "Insert InfixExpression: ||(17226) into IfStatement(17229) at 0", "Insert ReturnStatement(17228) into IfStatement(17229) at 1", "Insert SimpleType: Wizard(17231) into VariableDeclarationStatement(17237) at 0", "Insert VariableDeclarationFragment(17236) into VariableDeclarationStatement(17237) at 1", "Insert Block(17261) into TryStatement(17268) at 0", "Insert Block(17267) into TryStatement(17268) at 1", "Insert QualifiedName: Sage.DBG(17269) into IfStatement(17281) at 0", "Insert ExpressionStatement(17280) into IfStatement(17281) at 1", "Insert Assignment: =(17284) into ExpressionStatement(17285) at 0", "Insert BooleanLiteral: true(17286) into ReturnStatement(17287) at 0", "Insert TextElement: Release a guaranteed new file segment.(17290) into TagElement(17302) at 0", "Insert TextElement: <p/>(17291) into TagElement(17302) at 1", "Insert TextElement: You cannot release the guarantee without the correct (17292) into TagElement(17302) at 2", "Insert TagElement: @link(17294) into TagElement(17302) at 3", "Insert TextElement:  for this(17295) into TagElement(17302) at 4", "Insert TagElement: @link(17297) into TagElement(17302) at 5", "Insert TextElement:  unless the <code>force</code> parameter is get to <code>true</code>.(17298) into TagElement(17302) at 6", "Insert TextElement: <p/>(17299) into TagElement(17302) at 7", "Insert TextElement: This is only to be used when recording and transitioning between file segments during live(17300) into TagElement(17302) at 8", "Insert TextElement: playback.(17301) into TagElement(17302) at 9", "Insert SimpleName: nextSegment(17303) into TagElement: @param(17317) at 0", "Insert TextElement:  The (17304) into TagElement: @param(17317) at 1", "Insert TagElement: @link(17306) into TagElement: @param(17317) at 2", "Insert TextElement:  object provided by(17307) into TagElement: @param(17317) at 3", "Insert TagElement: @link(17312) into TagElement: @param(17317) at 4", "Insert TextElement:  for this (17313) into TagElement: @param(17317) at 5", "Insert TagElement: @link(17315) into TagElement: @param(17317) at 6", "Insert TextElement: .(17316) into TagElement: @param(17317) at 7", "Insert SimpleName: force(17318) into TagElement: @param(17320) at 0", "Insert TextElement:  Set <code>true</code> to clear the segment regardless of if nextSegment is correct.(17319) into TagElement: @param(17320) at 1", "Insert SimpleName: NextSegmentGuarantee(17325) into SimpleType: NextSegmentGuarantee(17326) at 0", "Insert InfixExpression: ||(17336) into IfStatement(17341) at 0", "Insert ExpressionStatement(17340) into IfStatement(17341) at 1", "Insert SimpleName: String(17350) into SimpleType: String(17351) at 0", "Insert MethodInvocation(17358) into ExpressionStatement(17359) at 0", "Insert SimpleName: File(17373) into SimpleType: File(17374) at 0", "Insert TextElement: Use with care.(19950) into TagElement(19951) at 0", "Insert SimpleName: videoDirectory(27083) into ReturnStatement(27084) at 0", "Insert SimpleName: File(28064) into SimpleType: File(28065) at 0", "Insert SimpleName: nextSegment(28066) into VariableDeclarationFragment(28067) at 0", "Insert SimpleName: currTime(28072) into VariableDeclarationFragment(28073) at 0", "Insert SimpleType: File(28078) into SingleVariableDeclaration(28080) at 0", "Insert SimpleName: nextSegment(28079) into SingleVariableDeclaration(28080) at 1", "Insert PrimitiveType: long(28081) into SingleVariableDeclaration(28083) at 0", "Insert SimpleName: currTime(28082) into SingleVariableDeclaration(28083) at 1", "Insert ExpressionStatement(28089) into Block(28096) at 0", "Insert ExpressionStatement(28095) into Block(28096) at 1", "Insert SimpleName: File(28099) into SimpleType: File(28100) at 0", "Insert ReturnStatement(28103) into Block(28104) at 0", "Insert SimpleName: String(28107) into SimpleType: String(28108) at 0", "Insert ReturnStatement(28113) into Block(28114) at 0", "Insert ReturnStatement(28120) into Block(28121) at 0", "Insert SimpleName: liveFileMap(699) into MethodInvocation(703) at 0", "Insert SimpleName: put(700) into MethodInvocation(703) at 1", "Insert SimpleName: cdi(701) into MethodInvocation(703) at 2", "Insert SimpleName: file(702) into MethodInvocation(703) at 3", "Insert SimpleName: liveBuffFileMap(735) into MethodInvocation(739) at 0", "Insert SimpleName: put(736) into MethodInvocation(739) at 1", "Insert SimpleName: cdi(737) into MethodInvocation(739) at 2", "Insert SimpleName: file(738) into MethodInvocation(739) at 3", "Insert SimpleName: NextSegmentGuarantee(17133) into TagElement: @link(17134) at 0", "Insert MethodRef(17140) into TagElement: @link(17141) at 0", "Insert SimpleName: nextSegmentGuarantee(17158) into InfixExpression: !=(17160) at 0", "Insert NullLiteral(17159) into InfixExpression: !=(17160) at 1", "Insert NullLiteral(17161) into ReturnStatement(17162) at 0", "Insert SimpleName: File(17164) into SimpleType: File(17165) at 0", "Insert SimpleName: nextFileName(17166) into VariableDeclarationFragment(17170) at 0", "Insert MethodInvocation(17169) into VariableDeclarationFragment(17170) at 1", "Insert InfixExpression: !=(17174) into ConditionalExpression(17183) at 0", "Insert Assignment: =(17181) into ConditionalExpression(17183) at 1", "Insert NullLiteral(17182) into ConditionalExpression(17183) at 2", "Insert SimpleName: NextSegmentGuarantee(17188) into TagElement: @link(17189) at 0", "Insert SimpleName: NextSegmentGuarantee(17197) into TagElement: @link(17198) at 0", "Insert MethodRef(17203) into TagElement: @link(17204) at 0", "Insert SimpleName: MediaFile(17206) into TagElement: @link(17207) at 0", "Insert InfixExpression: ==(17222) into InfixExpression: ||(17226) at 0", "Insert InfixExpression: !=(17225) into InfixExpression: ||(17226) at 1", "Insert BooleanLiteral: false(17227) into ReturnStatement(17228) at 0", "Insert SimpleName: Wizard(17230) into SimpleType: Wizard(17231) at 0", "Insert SimpleName: wiz(17232) into VariableDeclarationFragment(17236) at 0", "Insert MethodInvocation(17235) into VariableDeclarationFragment(17236) at 1", "Insert ExpressionStatement(17242) into Block(17261) at 0", "Insert ExpressionStatement(17248) into Block(17261) at 1", "Insert ExpressionStatement(17260) into Block(17261) at 2", "Insert ExpressionStatement(17266) into Block(17267) at 0", "Insert MethodInvocation(17279) into ExpressionStatement(17280) at 0", "Insert SimpleName: nextSegmentGuarantee(17282) into Assignment: =(17284) at 0", "Insert NullLiteral(17283) into Assignment: =(17284) at 1", "Insert SimpleName: NextSegmentGuarantee(17293) into TagElement: @link(17294) at 0", "Insert SimpleName: MediaFile(17296) into TagElement: @link(17297) at 0", "Insert SimpleName: NextSegmentGuarantee(17305) into TagElement: @link(17306) at 0", "Insert MethodRef(17311) into TagElement: @link(17312) at 0", "Insert SimpleName: MediaFile(17314) into TagElement: @link(17315) at 0", "Insert InfixExpression: ==(17334) into InfixExpression: ||(17336) at 0", "Insert SimpleName: force(17335) into InfixExpression: ||(17336) at 1", "Insert Assignment: =(17339) into ExpressionStatement(17340) at 0", "Insert SimpleName: startSegment(17354) into MethodInvocation(17358) at 0", "Insert SimpleName: startTime(17355) into MethodInvocation(17358) at 1", "Insert SimpleName: newEncodedBy(17356) into MethodInvocation(17358) at 2", "Insert NullLiteral(17357) into MethodInvocation(17358) at 3", "Insert IfStatement(17456) into Block(17537) at 5", "Insert SimpleName: File(28077) into SimpleType: File(28078) at 0", "Insert Assignment: =(28088) into ExpressionStatement(28089) at 0", "Insert Assignment: =(28094) into ExpressionStatement(28095) at 0", "Insert SimpleName: nextSegment(28102) into ReturnStatement(28103) at 0", "Insert MethodInvocation(28112) into ReturnStatement(28113) at 0", "Insert SimpleName: currTime(28119) into ReturnStatement(28120) at 0", "Insert SimpleName: rollGuaranteedSegment(17136) into MethodRef(17140) at 0", "Insert MethodRefParameter(17139) into MethodRef(17140) at 1", "Insert SimpleName: getNextSegment(17167) into MethodInvocation(17169) at 0", "Insert BooleanLiteral: false(17168) into MethodInvocation(17169) at 1", "Insert SimpleName: nextFileName(17172) into InfixExpression: !=(17174) at 0", "Insert NullLiteral(17173) into InfixExpression: !=(17174) at 1", "Insert SimpleName: nextSegmentGuarantee(17175) into Assignment: =(17181) at 0", "Insert ClassInstanceCreation(17180) into Assignment: =(17181) at 1", "Insert SimpleName: startGuaranteedSegment(17200) into MethodRef(17203) at 0", "Insert MethodRefParameter(17202) into MethodRef(17203) at 1", "Insert SimpleName: nextSegmentGuarantee(17220) into InfixExpression: ==(17222) at 0", "Insert NullLiteral(17221) into InfixExpression: ==(17222) at 1", "Insert SimpleName: nextSegment(17223) into InfixExpression: !=(17225) at 0", "Insert SimpleName: nextSegmentGuarantee(17224) into InfixExpression: !=(17225) at 1", "Insert SimpleName: Wizard(17233) into MethodInvocation(17235) at 0", "Insert SimpleName: getInstance(17234) into MethodInvocation(17235) at 1", "Insert MethodInvocation(17241) into ExpressionStatement(17242) at 0", "Insert MethodInvocation(17247) into ExpressionStatement(17248) at 0", "Insert MethodInvocation(17259) into ExpressionStatement(17260) at 0", "Insert MethodInvocation(17265) into ExpressionStatement(17266) at 0", "Insert QualifiedName: System.out(17270) into MethodInvocation(17279) at 0", "Insert SimpleName: println(17271) into MethodInvocation(17279) at 1", "Insert InfixExpression: +(17278) into MethodInvocation(17279) at 2", "Insert SimpleName: startGuaranteedSegment(17308) into MethodRef(17311) at 0", "Insert MethodRefParameter(17310) into MethodRef(17311) at 1", "Insert SimpleName: nextSegment(17332) into InfixExpression: ==(17334) at 0", "Insert SimpleName: nextSegmentGuarantee(17333) into InfixExpression: ==(17334) at 1", "Insert SimpleName: nextSegmentGuarantee(17337) into Assignment: =(17339) at 0", "Insert NullLiteral(17338) into Assignment: =(17339) at 1", "Insert InfixExpression: !=(17443) into IfStatement(17456) at 0", "Insert ExpressionStatement(17448) into IfStatement(17456) at 1", "Move ExpressionStatement(17158) into IfStatement(17456) at 2", "Insert FieldAccess(28086) into Assignment: =(28088) at 0", "Insert SimpleName: nextSegment(28087) into Assignment: =(28088) at 1", "Insert FieldAccess(28092) into Assignment: =(28094) at 0", "Insert SimpleName: currTime(28093) into Assignment: =(28094) at 1", "Insert SimpleName: nextSegment(28110) into MethodInvocation(28112) at 0", "Insert SimpleName: toString(28111) into MethodInvocation(28112) at 1", "Update SimpleName: Seeker(2523) to SeekerSelector", "Insert SimpleType: NextSegmentGuarantee(17138) into MethodRefParameter(17139) at 0", "Insert SimpleType: NextSegmentGuarantee(17177) into ClassInstanceCreation(17180) at 0", "Insert SimpleName: nextFileName(17178) into ClassInstanceCreation(17180) at 1", "Insert SimpleName: currTime(17179) into ClassInstanceCreation(17180) at 2", "Insert PrimitiveType: long(17201) into MethodRefParameter(17202) at 0", "Insert SimpleName: wiz(17238) into MethodInvocation(17241) at 0", "Insert SimpleName: acquireWriteLock(17239) into MethodInvocation(17241) at 1", "Insert QualifiedName: Wizard.MEDIAFILE_CODE(17240) into MethodInvocation(17241) at 2", "Insert SimpleName: endSegment(17243) into MethodInvocation(17247) at 0", "Insert MethodInvocation(17246) into MethodInvocation(17247) at 1", "Insert SimpleName: startSegment(17249) into MethodInvocation(17259) at 0", "Insert InfixExpression: +(17254) into MethodInvocation(17259) at 1", "Insert NullLiteral(17255) into MethodInvocation(17259) at 2", "Insert MethodInvocation(17258) into MethodInvocation(17259) at 3", "Insert SimpleName: wiz(17262) into MethodInvocation(17265) at 0", "Insert SimpleName: releaseWriteLock(17263) into MethodInvocation(17265) at 1", "Insert QualifiedName: Wizard.MEDIAFILE_CODE(17264) into MethodInvocation(17265) at 2", "Insert StringLiteral: \"MediaFile transitioned to subfile:\"(17272) into InfixExpression: +(17278) at 0", "Insert MethodInvocation(17275) into InfixExpression: +(17278) at 1", "Insert StringLiteral: \" \"(17276) into InfixExpression: +(17278) at 2", "Insert ThisExpression(17277) into InfixExpression: +(17278) at 3", "Insert PrimitiveType: long(17309) into MethodRefParameter(17310) at 0", "Insert SimpleName: guaranteedFile(17441) into InfixExpression: !=(17443) at 0", "Insert NullLiteral(17442) into InfixExpression: !=(17443) at 1", "Insert MethodInvocation(17447) into ExpressionStatement(17448) at 0", "Insert ParenthesizedExpression(19618) into InfixExpression: ||(19619) at 2", "Insert ThisExpression(28084) into FieldAccess(28086) at 0", "Insert SimpleName: nextSegment(28085) into FieldAccess(28086) at 1", "Insert ThisExpression(28090) into FieldAccess(28092) at 0", "Insert SimpleName: currTime(28091) into FieldAccess(28092) at 1", "Insert SimpleName: NextSegmentGuarantee(17137) into SimpleType: NextSegmentGuarantee(17138) at 0", "Insert SimpleName: NextSegmentGuarantee(17176) into SimpleType: NextSegmentGuarantee(17177) at 0", "Insert SimpleName: nextSegmentGuarantee(17244) into MethodInvocation(17246) at 0", "Insert SimpleName: getStartTime(17245) into MethodInvocation(17246) at 1", "Insert MethodInvocation(17252) into InfixExpression: +(17254) at 0", "Insert NumberLiteral: 1(17253) into InfixExpression: +(17254) at 1", "Insert SimpleName: nextSegment(17256) into MethodInvocation(17258) at 0", "Insert SimpleName: getNewSegment(17257) into MethodInvocation(17258) at 1", "Insert SimpleName: nextSegmentGuarantee(17273) into MethodInvocation(17275) at 0", "Insert SimpleName: getNextSegment(17274) into MethodInvocation(17275) at 1", "Insert SimpleName: files(17444) into MethodInvocation(17447) at 0", "Insert SimpleName: addElement(17445) into MethodInvocation(17447) at 1", "Insert SimpleName: guaranteedFile(17446) into MethodInvocation(17447) at 2", "Insert InfixExpression: &&(19617) into ParenthesizedExpression(19618) at 0", "Insert SimpleName: nextSegmentGuarantee(17250) into MethodInvocation(17252) at 0", "Insert SimpleName: getStartTime(17251) into MethodInvocation(17252) at 1", "Insert InfixExpression: !=(19610) into InfixExpression: &&(19617) at 0", "Insert MethodInvocation(19616) into InfixExpression: &&(19617) at 1", "Insert SimpleName: nextSegmentGuarantee(19608) into InfixExpression: !=(19610) at 0", "Insert NullLiteral(19609) into InfixExpression: !=(19610) at 1", "Insert SimpleName: rv(19611) into MethodInvocation(19616) at 0", "Insert SimpleName: equals(19612) into MethodInvocation(19616) at 1", "Insert MethodInvocation(19615) into MethodInvocation(19616) at 2", "Insert ExpressionStatement(15619) into Block(15620) at 1", "Insert SimpleName: nextSegmentGuarantee(19613) into MethodInvocation(19615) at 0", "Insert SimpleName: getNewSegment(19614) into MethodInvocation(19615) at 1", "Insert Assignment: =(15618) into ExpressionStatement(15619) at 0", "Insert QualifiedName: theShow.title.ignoreCaseHash(15612) into Assignment: =(15618) at 0", "Insert MethodInvocation(15617) into Assignment: =(15618) at 1", "Insert MethodInvocation(15615) into MethodInvocation(15617) at 0", "Insert SimpleName: hashCode(15616) into MethodInvocation(15617) at 1", "Insert SimpleName: name(15613) into MethodInvocation(15615) at 0", "Insert SimpleName: toLowerCase(15614) into MethodInvocation(15615) at 1", "Update SimpleName: Seeker(17207) to SeekerSelector", "Delete QualifiedName: sage.media.format.MPEGParser(14)", "Delete ImportDeclaration(15)"]}}, {"MiniPlayer_cluster": {"actions": [{"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"MiniPlayer_diff": {"operations": ["Update SimpleName: Seeker(7117) to SeekerSelector", "Update SimpleName: Seeker(7102) to SeekerSelector", "Update SimpleName: Seeker(6406) to SeekerSelector", "Update SimpleName: Seeker(6391) to SeekerSelector"]}}, {"Ministry_cluster": {"actions": [{"root": "UPDATE from Seeker to Hunter", "operations": ["UPD SimpleType: Seeker from Seeker to Hunter", "UPD SimpleName: Seeker from Seeker to Hunter"]}, {"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"Ministry_diff": {"operations": ["Update SimpleType: Seeker(985) to Hunter", "Update SimpleName: Seeker(984) to Hunter", "Update SimpleName: Seeker(987) to SeekerSelector", "Update SimpleName: Seeker(1337) to SeekerSelector", "Update SimpleName: Seeker(1663) to SeekerSelector"]}}, {"NetworkClient_cluster": {"actions": [{"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}, {"root": "UPDATE from Scheduler to SchedulerSelector", "operations": ["UPD SimpleName: Scheduler from Scheduler to SchedulerSelector"]}]}}, {"NetworkClient_diff": {"operations": ["Update SimpleName: Seeker(1441) to SeekerSelector", "Update SimpleName: Scheduler(905) to SchedulerSelector", "Update SimpleName: Seeker(1344) to SeekerSelector"]}}, {"NewStorageDeviceDetector_cluster": {"actions": [{"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"NewStorageDeviceDetector_diff": {"operations": ["Update SimpleName: Seeker(738) to SeekerSelector", "Update SimpleName: Seeker(2541) to SeekerSelector", "Update SimpleName: Seeker(492) to SeekerSelector", "Update SimpleName: Seeker(510) to SeekerSelector", "Update SimpleName: Seeker(2193) to SeekerSelector", "Update SimpleName: Seeker(2206) to SeekerSelector", "Update SimpleName: Seeker(2356) to SeekerSelector", "Update SimpleName: Seeker(1401) to SeekerSelector", "Update SimpleName: Seeker(1419) to SeekerSelector", "Update SimpleName: Seeker(2334) to SeekerSelector"]}}, {"Person_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS InfixExpression: == to InfixExpression: || at 1", "INS SimpleName: compare to SingleVariableDeclaration at 1", "INS SimpleName: ignoreCaseHash to InfixExpression: == at 0", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: compare to MethodInvocation at 0", "INS SimpleName: toString to MethodInvocation at 0", "INS ReturnStatement to Block at 1", "INS QualifiedName: compare.ignoreCaseHash to InfixExpression: == at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS SimpleName: equalsIgnoreCase to MethodDeclaration at 2", "INS SimpleName: toString to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: equalsIgnoreCase to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS SimpleName: Person to SimpleType: Person at 0", "INS QualifiedName: compare.ignoreCaseHash to InfixExpression: == at 0", "INS InfixExpression: && to ReturnStatement at 0", "INS SimpleName: compare to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: ignoreCaseHash to InfixExpression: == at 1", "INS MethodInvocation to InfixExpression: && at 1", "INS InfixExpression: == to InfixExpression: || at 0", "INS Modifier: public to MethodDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS ReturnStatement to IfStatement at 1", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: Person to SingleVariableDeclaration at 0", "INS InfixExpression: || to IfStatement at 0", "INS InfixExpression: == to InfixExpression: && at 0", "INS SimpleName: equalsIgnoreCase to MethodInvocation at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 47", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 47", "INS Modifier: transient to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS PrimitiveType: int to FieldDeclaration at 1", "INS SimpleName: ignoreCaseHash to VariableDeclarationFragment at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: ignoreCaseHash to Assignment: = at 0", "INS SimpleName: hashCode to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: toLowerCase to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: name to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: name to MethodInvocation at 0", "INS SimpleName: ignoreCaseHash to Assignment: = at 0", "INS SimpleName: hashCode to MethodInvocation at 1", "INS SimpleName: toLowerCase to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0"]}]}}, {"Person_diff": {"operations": ["Insert MethodDeclaration(983) into TypeDeclaration: class(1692) at 22", "Insert FieldDeclaration(1560) into TypeDeclaration: class(1692) at 47", "Insert Modifier: public(947) into MethodDeclaration(983) at 0", "Insert PrimitiveType: boolean(948) into MethodDeclaration(983) at 1", "Insert SimpleName: equalsIgnoreCase(949) into MethodDeclaration(983) at 2", "Insert SingleVariableDeclaration(953) into MethodDeclaration(983) at 3", "Insert Block(982) into MethodDeclaration(983) at 4", "Insert Modifier: transient(1556) into FieldDeclaration(1560) at 0", "Insert PrimitiveType: int(1557) into FieldDeclaration(1560) at 1", "Insert VariableDeclarationFragment(1559) into FieldDeclaration(1560) at 2", "Insert ExpressionStatement(126) into Block(339) at 2", "Insert ExpressionStatement(573) into Block(610) at 2", "Insert SimpleType: Person(951) into SingleVariableDeclaration(953) at 0", "Insert SimpleName: compare(952) into SingleVariableDeclaration(953) at 1", "Insert IfStatement(969) into Block(982) at 0", "Insert ReturnStatement(981) into Block(982) at 1", "Insert SimpleName: ignoreCaseHash(1558) into VariableDeclarationFragment(1559) at 0", "Insert Assignment: =(125) into ExpressionStatement(126) at 0", "Insert Assignment: =(572) into ExpressionStatement(573) at 0", "Insert SimpleName: Person(950) into SimpleType: Person(951) at 0", "Insert InfixExpression: ||(960) into IfStatement(969) at 0", "Insert ReturnStatement(968) into IfStatement(969) at 1", "Insert InfixExpression: &&(980) into ReturnStatement(981) at 0", "Insert SimpleName: ignoreCaseHash(119) into Assignment: =(125) at 0", "Insert MethodInvocation(124) into Assignment: =(125) at 1", "Insert SimpleName: ignoreCaseHash(566) into Assignment: =(572) at 0", "Insert MethodInvocation(571) into Assignment: =(572) at 1", "Insert InfixExpression: ==(956) into InfixExpression: ||(960) at 0", "Insert InfixExpression: ==(959) into InfixExpression: ||(960) at 1", "Insert MethodInvocation(967) into ReturnStatement(968) at 0", "Insert InfixExpression: ==(972) into InfixExpression: &&(980) at 0", "Insert MethodInvocation(979) into InfixExpression: &&(980) at 1", "Insert MethodInvocation(122) into MethodInvocation(124) at 0", "Insert SimpleName: hashCode(123) into MethodInvocation(124) at 1", "Insert MethodInvocation(569) into MethodInvocation(571) at 0", "Insert SimpleName: hashCode(570) into MethodInvocation(571) at 1", "Insert SimpleName: ignoreCaseHash(954) into InfixExpression: ==(956) at 0", "Insert NumberLiteral: 0(955) into InfixExpression: ==(956) at 1", "Insert QualifiedName: compare.ignoreCaseHash(957) into InfixExpression: ==(959) at 0", "Insert NumberLiteral: 0(958) into InfixExpression: ==(959) at 1", "Insert MethodInvocation(962) into MethodInvocation(967) at 0", "Insert SimpleName: equalsIgnoreCase(963) into MethodInvocation(967) at 1", "Insert MethodInvocation(966) into MethodInvocation(967) at 2", "Insert QualifiedName: compare.ignoreCaseHash(970) into InfixExpression: ==(972) at 0", "Insert SimpleName: ignoreCaseHash(971) into InfixExpression: ==(972) at 1", "Insert MethodInvocation(974) into MethodInvocation(979) at 0", "Insert SimpleName: equalsIgnoreCase(975) into MethodInvocation(979) at 1", "Insert MethodInvocation(978) into MethodInvocation(979) at 2", "Insert SimpleName: name(120) into MethodInvocation(122) at 0", "Insert SimpleName: toLowerCase(121) into MethodInvocation(122) at 1", "Insert SimpleName: name(567) into MethodInvocation(569) at 0", "Insert SimpleName: toLowerCase(568) into MethodInvocation(569) at 1", "Insert SimpleName: toString(961) into MethodInvocation(962) at 0", "Insert SimpleName: compare(964) into MethodInvocation(966) at 0", "Insert SimpleName: toString(965) into MethodInvocation(966) at 1", "Insert SimpleName: toString(973) into MethodInvocation(974) at 0", "Insert SimpleName: compare(976) into MethodInvocation(978) at 0", "Insert SimpleName: toString(977) into MethodInvocation(978) at 1"]}}, {"Playlist_cluster": {"actions": [{"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"Playlist_diff": {"operations": ["Update SimpleName: Seeker(4000) to SeekerSelector"]}}, {"Pooler_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 17", "operations": ["INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: EMPTY_MEDIA_FILE_ARRAY to VariableDeclarationFragment at 0", "INS SimpleType: MediaFile to ArrayType: MediaFile[] at 0", "INS SimpleType: MediaFile to ArrayType: MediaFile[] at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS ArrayType: MediaFile[] to FieldDeclaration at 3", "INS NumberLiteral: 0 to ArrayCreation at 1", "INS Dimension to ArrayType: MediaFile[] at 1", "INS Modifier: public to FieldDeclaration at 0", "INS Dimension to ArrayType: MediaFile[] at 1", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: MediaFile to SimpleType: MediaFile at 0", "INS ArrayType: MediaFile[] to ArrayCreation at 0", "INS SimpleName: MediaFile to SimpleType: MediaFile at 0", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 17"]}]}}, {"Pooler_diff": {"operations": ["Insert FieldDeclaration(229) into TypeDeclaration: class(1140) at 17", "Insert Modifier: public(214) into FieldDeclaration(229) at 0", "Insert Modifier: static(215) into FieldDeclaration(229) at 1", "Insert Modifier: final(216) into FieldDeclaration(229) at 2", "Insert ArrayType: MediaFile[](220) into FieldDeclaration(229) at 3", "Insert VariableDeclarationFragment(228) into FieldDeclaration(229) at 4", "Insert SimpleType: MediaFile(218) into ArrayType: MediaFile[](220) at 0", "Insert Dimension(219) into ArrayType: MediaFile[](220) at 1", "Insert SimpleName: EMPTY_MEDIA_FILE_ARRAY(221) into VariableDeclarationFragment(228) at 0", "Insert ArrayCreation(227) into VariableDeclarationFragment(228) at 1", "Insert SimpleName: MediaFile(217) into SimpleType: MediaFile(218) at 0", "Insert ArrayType: MediaFile[](225) into ArrayCreation(227) at 0", "Insert NumberLiteral: 0(226) into ArrayCreation(227) at 1", "Insert SimpleType: MediaFile(223) into ArrayType: MediaFile[](225) at 0", "Insert Dimension(224) into ArrayType: MediaFile[](225) at 1", "Insert SimpleName: MediaFile(222) into SimpleType: MediaFile(223) at 0"]}}, {"Ripper_cluster": {"actions": [{"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"Ripper_diff": {"operations": ["Update SimpleName: Seeker(432) to SeekerSelector"]}}, {"Sage_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 13", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: rez to MethodInvocation at 1", "INS ExpressionStatement to Block at 13", "INS SimpleName: Sage to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS StringLiteral: \"Movie\" to MethodInvocation at 2", "INS QualifiedName: Show.movieString to Assignment: = at 0"]}, {"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector"]}, {"root": "DEL Modifier: synchronized", "operations": ["DEL Modifier: synchronized"]}]}}, {"Sage_diff": {"operations": ["Insert ExpressionStatement(6376) into Block(6415) at 13", "Insert Assignment: =(6375) into ExpressionStatement(6376) at 0", "Insert QualifiedName: Show.movieString(6370) into Assignment: =(6375) at 0", "Insert MethodInvocation(6374) into Assignment: =(6375) at 1", "Insert SimpleName: Sage(6371) into MethodInvocation(6374) at 0", "Insert SimpleName: rez(6372) into MethodInvocation(6374) at 1", "Insert StringLiteral: \"Movie\"(6373) into MethodInvocation(6374) at 2", "Update SimpleName: Seeker(2767) to SeekerSelector", "Delete Modifier: synchronized(3810)"]}}, {"SageTV_cluster": {"actions": [{"root": "UPDATE from Seeker to Hunter", "operations": ["UPD SimpleType: Seeker from Seeker to Hunter", "UPD SimpleName: Seeker from Seeker to Hunter"]}, {"root": "UPDATE from Scheduler to SchedulerInterface", "operations": ["UPD SimpleType: Scheduler from Scheduler to SchedulerInterface", "UPD SimpleName: Scheduler from Scheduler to SchedulerInterface"]}, {"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}, {"root": "UPDATE from Scheduler to SchedulerSelector", "operations": ["UPD SimpleName: Scheduler from Scheduler to SchedulerSelector", "UPD SimpleName: Scheduler from Scheduler to SchedulerSelector", "UPD SimpleName: Scheduler from Scheduler to SchedulerSelector"]}]}}, {"SageTV_diff": {"operations": ["Update SimpleType: Seeker(5521) to Hunter", "Update SimpleType: Scheduler(5528) to SchedulerInterface", "Update SimpleName: Seeker(5520) to Hunter", "Update SimpleName: Scheduler(5527) to SchedulerInterface", "Update SimpleName: Seeker(1896) to SeekerSelector", "Update SimpleName: Scheduler(2193) to SchedulerSelector", "Update SimpleName: Scheduler(4553) to SchedulerSelector", "Update SimpleName: Seeker(4560) to SeekerSelector", "Update SimpleName: Seeker(4632) to SeekerSelector", "Update SimpleName: Scheduler(4638) to SchedulerSelector"]}}, {"SageTVConnection_cluster": {"actions": [{"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}, {"root": "UPDATE from Scheduler to SchedulerSelector", "operations": ["UPD SimpleName: Scheduler from Scheduler to SchedulerSelector", "UPD SimpleName: Scheduler from Scheduler to SchedulerSelector"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: sage.plugin.PluginEventManager"]}]}}, {"SageTVConnection_diff": {"operations": ["Update SimpleName: Seeker(4180) to SeekerSelector", "Update SimpleName: Scheduler(5142) to SchedulerSelector", "Update SimpleName: Seeker(4248) to SeekerSelector", "Update SimpleName: Seeker(4863) to SeekerSelector", "Update SimpleName: Seeker(4980) to SeekerSelector", "Update SimpleName: Seeker(5092) to SeekerSelector", "Update SimpleName: Seeker(5373) to SeekerSelector", "Update SimpleName: Seeker(5474) to SeekerSelector", "Update SimpleName: Seeker(3925) to SeekerSelector", "Update SimpleName: Seeker(4075) to SeekerSelector", "Update SimpleName: Seeker(4530) to SeekerSelector", "Update SimpleName: Seeker(4567) to SeekerSelector", "Update SimpleName: Seeker(5631) to SeekerSelector", "Update SimpleName: Seeker(5650) to SeekerSelector", "Update SimpleName: Seeker(4602) to SeekerSelector", "Update SimpleName: Seeker(4556) to SeekerSelector", "Update SimpleName: Seeker(4570) to SeekerSelector", "Update SimpleName: Scheduler(13263) to SchedulerSelector", "Update SimpleName: Seeker(4576) to SeekerSelector", "Delete QualifiedName: sage.plugin.PluginEventManager(2)", "Delete ImportDeclaration(3)"]}}, {"Scheduler_cluster": {"actions": [{"root": "INS SimpleType: SchedulerInterface to TypeDeclaration: class at 3", "operations": ["INS SimpleName: SchedulerInterface to SimpleType: SchedulerInterface at 0", "INS SimpleType: SchedulerInterface to TypeDeclaration: class at 3"]}, {"root": "INS Modifier: public to MethodDeclaration at 0", "operations": ["INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS Modifier: public to MethodDeclaration at 0", "operations": ["INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS Modifier: public to MethodDeclaration at 0", "operations": ["INS Modifier: public to MethodDeclaration at 0"]}, {"root": "UPDATE from Vector<Airing> to List<Airing>", "operations": ["UPD ParameterizedType: Vector<Airing> from Vector<Airing> to List<Airing>"]}, {"root": "UPDATE from Vector to List", "operations": ["UPD SimpleName: Vector from Vector to List", "UPD SimpleType: Vector from Vector to List"]}, {"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"Scheduler_diff": {"operations": ["Insert SimpleType: SchedulerInterface(41) into TypeDeclaration: class(13489) at 3", "Insert SimpleName: SchedulerInterface(40) into SimpleType: SchedulerInterface(41) at 0", "Insert Modifier: public(256) into MethodDeclaration(262) at 0", "Insert Modifier: public(1458) into MethodDeclaration(1469) at 0", "Insert Modifier: public(1767) into MethodDeclaration(1798) at 0", "Update ParameterizedType: Vector<Airing>(11360) to List<Airing>", "Update SimpleType: Vector(11357) to List", "Update SimpleName: Vector(11356) to List", "Update SimpleName: Seeker(3733) to SeekerSelector"]}}, {"Seeker_cluster": {"actions": [{"root": "UPDATE from Runnable to Hunter", "operations": ["UPD SimpleName: Runnable from Runnable to Hunter", "UPD SimpleType: Runnable from Runnable to Hunter"]}, {"root": "INS Modifier: public to MethodDeclaration at 0", "operations": ["INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS Modifier: public to MethodDeclaration at 0", "operations": ["INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS Modifier: public to MethodDeclaration at 0", "operations": ["INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS Modifier: public to MethodDeclaration at 0", "operations": ["INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS SynchronizedStatement to Block at 13", "operations": ["INS SimpleName: autoImportAddedNetPaths to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to SynchronizedStatement at 1", "INS SimpleName: array to VariableDeclarationFragment at 0", "INS SimpleName: toArray to MethodInvocation at 1", "INS SimpleName: array to MethodInvocation at 2", "INS SimpleName: asList to MethodInvocation at 1", "INS SimpleName: autoImportAddedNetPaths to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: Arrays to MethodInvocation at 0", "INS SimpleName: clear to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: autoImportAddedNetPaths to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SynchronizedStatement to Block at 13", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 2", "INS SimpleName: addAll to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: String to SimpleType: String at 0", "INS QualifiedName: Pooler.EMPTY_STRING_ARRAY to MethodInvocation at 2", "INS SimpleName: autoImportAddedNetPaths to SynchronizedStatement at 0", "INS Dimension to VariableDeclarationFragment at 1"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}]}}, {"Seeker_diff": {"operations": ["Update SimpleType: Runnable(47) to Hunter", "Update SimpleName: Runnable(46) to Hunter", "Insert Modifier: public(7878) into MethodDeclaration(7892) at 0", "Insert Modifier: public(19195) into MethodDeclaration(19277) at 0", "Insert Modifier: public(21215) into MethodDeclaration(21303) at 0", "Insert Modifier: public(21580) into MethodDeclaration(22422) at 0", "Insert SynchronizedStatement(5752) into Block(6578) at 13", "Insert SimpleName: autoImportAddedNetPaths(5728) into SynchronizedStatement(5752) at 0", "Insert Block(5751) into SynchronizedStatement(5752) at 1", "Insert VariableDeclarationStatement(5738) into Block(5751) at 0", "Insert ExpressionStatement(5742) into Block(5751) at 1", "Insert ExpressionStatement(5750) into Block(5751) at 2", "Insert SimpleType: String(5730) into VariableDeclarationStatement(5738) at 0", "Insert VariableDeclarationFragment(5737) into VariableDeclarationStatement(5738) at 1", "Insert MethodInvocation(5741) into ExpressionStatement(5742) at 0", "Insert MethodInvocation(5749) into ExpressionStatement(5750) at 0", "Insert SimpleName: String(5729) into SimpleType: String(5730) at 0", "Insert SimpleName: array(5731) into VariableDeclarationFragment(5737) at 0", "Insert Dimension(5732) into VariableDeclarationFragment(5737) at 1", "Insert MethodInvocation(5736) into VariableDeclarationFragment(5737) at 2", "Insert SimpleName: autoImportAddedNetPaths(5739) into MethodInvocation(5741) at 0", "Insert SimpleName: clear(5740) into MethodInvocation(5741) at 1", "Insert SimpleName: autoImportAddedNetPaths(5743) into MethodInvocation(5749) at 0", "Insert SimpleName: addAll(5744) into MethodInvocation(5749) at 1", "Insert MethodInvocation(5748) into MethodInvocation(5749) at 2", "Insert SimpleName: autoImportAddedNetPaths(5733) into MethodInvocation(5736) at 0", "Insert SimpleName: toArray(5734) into MethodInvocation(5736) at 1", "Insert QualifiedName: Pooler.EMPTY_STRING_ARRAY(5735) into MethodInvocation(5736) at 2", "Insert SimpleName: Arrays(5745) into MethodInvocation(5748) at 0", "Insert SimpleName: asList(5746) into MethodInvocation(5748) at 1", "Insert SimpleName: array(5747) into MethodInvocation(5748) at 2", "Delete NullLiteral(17737)"]}}, {"ServerPowerManagement_cluster": {"actions": [{"root": "UPDATE from Scheduler to SchedulerSelector", "operations": ["UPD SimpleName: Scheduler from Scheduler to SchedulerSelector"]}, {"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"ServerPowerManagement_diff": {"operations": ["Update SimpleName: Scheduler(193) to SchedulerSelector", "Update SimpleName: Seeker(101) to SeekerSelector"]}}, {"SystemTask_cluster": {"actions": [{"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"SystemTask_diff": {"operations": ["Update SimpleName: Seeker(566) to SeekerSelector", "Update SimpleName: Seeker(557) to SeekerSelector", "Update SimpleName: Seeker(184) to SeekerSelector"]}}, {"TranscodeJob_cluster": {"actions": [{"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"TranscodeJob_diff": {"operations": ["Update SimpleName: Seeker(1167) to SeekerSelector", "Update SimpleName: Seeker(1211) to SeekerSelector", "Update SimpleName: Seeker(1252) to SeekerSelector"]}}, {"UIManager_cluster": {"actions": [{"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"UIManager_diff": {"operations": ["Update SimpleName: Seeker(9001) to SeekerSelector", "Update SimpleName: Seeker(6323) to SeekerSelector"]}}, {"VideoFrame_cluster": {"actions": [{"root": "UPDATE from Seeker to Hunter", "operations": ["UPD SimpleName: Seeker from Seeker to Hunter", "UPD SimpleType: Seeker from Seeker to Hunter"]}, {"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"VideoFrame_diff": {"operations": ["Update SimpleType: Seeker(21843) to Hunter", "Update SimpleName: Seeker(21842) to Hunter", "Update SimpleName: Seeker(3018) to SeekerSelector", "Update SimpleName: Seeker(19908) to SeekerSelector", "Update SimpleName: Seeker(19537) to SeekerSelector"]}}, {"WarlockRipper_cluster": {"actions": [{"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"WarlockRipper_diff": {"operations": ["Update SimpleName: Seeker(1244) to SeekerSelector"]}}, {"Wizard_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 328"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: toLowerCase to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 3", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: name to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS QualifiedName: person.ignoreCaseHash to Assignment: = at 0", "INS SimpleName: hashCode to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: name to MethodInvocation at 0", "INS SimpleName: toLowerCase to MethodInvocation at 1", "INS ExpressionStatement to Block at 5", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: hashCode to MethodInvocation at 1", "INS QualifiedName: rv.ignoreCaseHash to Assignment: = at 0"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: name to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: toLowerCase to MethodInvocation at 1", "INS QualifiedName: rv.ignoreCaseHash to Assignment: = at 0", "INS ExpressionStatement to Block at 3", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: hashCode to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2", "INS QualifiedName: rv.ignoreCaseHash to Assignment: = at 0", "INS SimpleName: name to MethodInvocation at 0", "INS SimpleName: hashCode to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: toLowerCase to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS MethodInvocation to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: toLowerCase to MethodInvocation at 1", "INS SimpleName: name to MethodInvocation at 0", "INS QualifiedName: rv.ignoreCaseHash to Assignment: = at 0", "INS SimpleName: hashCode to MethodInvocation at 1"]}, {"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"Wizard_diff": {"operations": ["Move MethodDeclaration(2642) into TypeDeclaration: class(43266) at 328", "Insert ExpressionStatement(24112) into Block(24263) at 3", "Insert ExpressionStatement(36446) into Block(36461) at 5", "Insert Assignment: =(24111) into ExpressionStatement(24112) at 0", "Insert Assignment: =(36445) into ExpressionStatement(36446) at 0", "Insert QualifiedName: person.ignoreCaseHash(24105) into Assignment: =(24111) at 0", "Insert MethodInvocation(24110) into Assignment: =(24111) at 1", "Insert ExpressionStatement(24526) into Block(24592) at 3", "Insert ExpressionStatement(24896) into Block(24915) at 2", "Insert ExpressionStatement(35970) into Block(35982) at 2", "Insert QualifiedName: rv.ignoreCaseHash(36439) into Assignment: =(36445) at 0", "Insert MethodInvocation(36444) into Assignment: =(36445) at 1", "Insert MethodInvocation(24108) into MethodInvocation(24110) at 0", "Insert SimpleName: hashCode(24109) into MethodInvocation(24110) at 1", "Insert Assignment: =(24525) into ExpressionStatement(24526) at 0", "Insert Assignment: =(24895) into ExpressionStatement(24896) at 0", "Insert Assignment: =(35969) into ExpressionStatement(35970) at 0", "Insert MethodInvocation(36442) into MethodInvocation(36444) at 0", "Insert SimpleName: hashCode(36443) into MethodInvocation(36444) at 1", "Insert SimpleName: name(24106) into MethodInvocation(24108) at 0", "Insert SimpleName: toLowerCase(24107) into MethodInvocation(24108) at 1", "Insert QualifiedName: rv.ignoreCaseHash(24519) into Assignment: =(24525) at 0", "Insert MethodInvocation(24524) into Assignment: =(24525) at 1", "Insert QualifiedName: rv.ignoreCaseHash(24889) into Assignment: =(24895) at 0", "Insert MethodInvocation(24894) into Assignment: =(24895) at 1", "Insert QualifiedName: rv.ignoreCaseHash(35963) into Assignment: =(35969) at 0", "Insert MethodInvocation(35968) into Assignment: =(35969) at 1", "Insert SimpleName: name(36440) into MethodInvocation(36442) at 0", "Insert SimpleName: toLowerCase(36441) into MethodInvocation(36442) at 1", "Insert MethodInvocation(24522) into MethodInvocation(24524) at 0", "Insert SimpleName: hashCode(24523) into MethodInvocation(24524) at 1", "Insert MethodInvocation(24892) into MethodInvocation(24894) at 0", "Insert SimpleName: hashCode(24893) into MethodInvocation(24894) at 1", "Insert MethodInvocation(35966) into MethodInvocation(35968) at 0", "Insert SimpleName: hashCode(35967) into MethodInvocation(35968) at 1", "Insert SimpleName: name(24520) into MethodInvocation(24522) at 0", "Insert SimpleName: toLowerCase(24521) into MethodInvocation(24522) at 1", "Insert SimpleName: name(24890) into MethodInvocation(24892) at 0", "Insert SimpleName: toLowerCase(24891) into MethodInvocation(24892) at 1", "Insert SimpleName: name(35964) into MethodInvocation(35966) at 0", "Insert SimpleName: toLowerCase(35965) into MethodInvocation(35966) at 1", "Update SimpleName: Seeker(2317) to SeekerSelector"]}}, {"AiringAPI_cluster": {"actions": [{"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}, {"root": "UPDATE from Scheduler to SchedulerSelector", "operations": ["UPD SimpleName: Scheduler from Scheduler to SchedulerSelector"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: sage.UIManager"]}]}}, {"AiringAPI_diff": {"operations": ["Update SimpleName: Seeker(3201) to SeekerSelector", "Update SimpleName: Scheduler(2761) to SchedulerSelector", "Update SimpleName: Seeker(3112) to SeekerSelector", "Update SimpleName: Seeker(2958) to SeekerSelector", "Update SimpleName: Seeker(2981) to SeekerSelector", "Delete QualifiedName: sage.UIManager(4)", "Delete ImportDeclaration(5)"]}}, {"CaptureDeviceAPI_cluster": {"actions": [{"root": "UPDATE from Scheduler to SchedulerSelector", "operations": ["UPD SimpleName: Scheduler from Scheduler to SchedulerSelector"]}, {"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"CaptureDeviceAPI_diff": {"operations": ["Update SimpleName: Scheduler(260) to SchedulerSelector", "Update SimpleName: Seeker(575) to SeekerSelector", "Update SimpleName: Seeker(309) to SeekerSelector"]}}, {"CaptureDeviceInputAPI_cluster": {"actions": [{"root": "UPDATE from Scheduler to SchedulerSelector", "operations": ["UPD SimpleName: Scheduler from Scheduler to SchedulerSelector", "UPD SimpleName: Scheduler from Scheduler to SchedulerSelector", "UPD SimpleName: Scheduler from Scheduler to SchedulerSelector"]}, {"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"CaptureDeviceInputAPI_diff": {"operations": ["Update SimpleName: Scheduler(2042) to SchedulerSelector", "Update SimpleName: Scheduler(2192) to SchedulerSelector", "Update SimpleName: Scheduler(2248) to SchedulerSelector", "Update SimpleName: Seeker(2389) to SeekerSelector"]}}, {"Configuration_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS QualifiedName: sage.SchedulerSelector to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 13"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: sage.SeekerSelector to ImportDeclaration at 0"]}, {"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}, {"root": "UPDATE from Scheduler to SchedulerSelector", "operations": ["UPD SimpleName: Scheduler from Scheduler to SchedulerSelector"]}]}}, {"Configuration_diff": {"operations": ["Insert ImportDeclaration(27) into CompilationUnit(14076) at 13", "Insert ImportDeclaration(29) into CompilationUnit(14076) at 14", "Insert QualifiedName: sage.SchedulerSelector(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: sage.SeekerSelector(28) into ImportDeclaration(29) at 0", "Update SimpleName: Seeker(6374) to SeekerSelector", "Update SimpleName: Seeker(148) to SeekerSelector", "Update SimpleName: Seeker(185) to SeekerSelector", "Update SimpleName: Seeker(222) to SeekerSelector", "Update SimpleName: Seeker(259) to SeekerSelector", "Update SimpleName: Seeker(3413) to SeekerSelector", "Update SimpleName: Seeker(3989) to SeekerSelector", "Update SimpleName: Seeker(4039) to SeekerSelector", "Update SimpleName: Seeker(4092) to SeekerSelector", "Update SimpleName: Seeker(6011) to SeekerSelector", "Update SimpleName: Seeker(6059) to SeekerSelector", "Update SimpleName: Seeker(6162) to SeekerSelector", "Update SimpleName: Seeker(6240) to SeekerSelector", "Update SimpleName: Seeker(6331) to SeekerSelector", "Update SimpleName: Seeker(299) to SeekerSelector", "Update SimpleName: Seeker(3451) to SeekerSelector", "Update SimpleName: Seeker(3509) to SeekerSelector", "Update SimpleName: Seeker(3571) to SeekerSelector", "Update SimpleName: Seeker(3633) to SeekerSelector", "Update SimpleName: Seeker(3695) to SeekerSelector", "Update SimpleName: Seeker(3756) to SeekerSelector", "Update SimpleName: Seeker(3817) to SeekerSelector", "Update SimpleName: Seeker(3878) to SeekerSelector", "Update SimpleName: Seeker(3939) to SeekerSelector", "Update SimpleName: Scheduler(5796) to SchedulerSelector", "Update SimpleName: Seeker(6111) to SeekerSelector"]}}, {"Database_cluster": {"actions": [{"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"Database_diff": {"operations": ["Update SimpleName: Seeker(7576) to SeekerSelector"]}}, {"FavoriteAPI_cluster": {"actions": [{"root": "UPDATE from Scheduler to SchedulerSelector", "operations": ["UPD SimpleName: Scheduler from Scheduler to SchedulerSelector", "UPD SimpleName: Scheduler from Scheduler to SchedulerSelector"]}]}}, {"FavoriteAPI_diff": {"operations": ["Update SimpleName: Scheduler(1940) to SchedulerSelector", "Update SimpleName: Scheduler(2317) to SchedulerSelector"]}}, {"Global_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS QualifiedName: sage.SchedulerSelector to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 11"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS ImportDeclaration to CompilationUnit at 12", "INS QualifiedName: sage.SeekerSelector to ImportDeclaration at 0"]}, {"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}, {"root": "UPDATE from Scheduler to SchedulerSelector", "operations": ["UPD SimpleName: Scheduler from Scheduler to SchedulerSelector", "UPD SimpleName: Scheduler from Scheduler to SchedulerSelector", "UPD SimpleName: Scheduler from Scheduler to SchedulerSelector", "UPD SimpleName: Scheduler from Scheduler to SchedulerSelector"]}]}}, {"Global_diff": {"operations": ["Insert ImportDeclaration(23) into CompilationUnit(12508) at 11", "Insert ImportDeclaration(25) into CompilationUnit(12508) at 12", "Insert QualifiedName: sage.SchedulerSelector(22) into ImportDeclaration(23) at 0", "Insert QualifiedName: sage.SeekerSelector(24) into ImportDeclaration(25) at 0", "Update SimpleName: Seeker(1502) to SeekerSelector", "Update SimpleName: Seeker(1541) to SeekerSelector", "Update SimpleName: Seeker(1577) to SeekerSelector", "Update SimpleName: Seeker(1624) to SeekerSelector", "Update SimpleName: Seeker(1685) to SeekerSelector", "Update SimpleName: Seeker(1758) to SeekerSelector", "Update SimpleName: Seeker(1810) to SeekerSelector", "Update SimpleName: Seeker(1862) to SeekerSelector", "Update SimpleName: Scheduler(2102) to SchedulerSelector", "Update SimpleName: Seeker(11699) to SeekerSelector", "Update SimpleName: Scheduler(638) to SchedulerSelector", "Update SimpleName: Seeker(715) to SeekerSelector", "Update SimpleName: Seeker(754) to SeekerSelector", "Update SimpleName: Seeker(793) to SeekerSelector", "Update SimpleName: Seeker(832) to SeekerSelector", "Update SimpleName: Seeker(871) to SeekerSelector", "Update SimpleName: Seeker(11403) to SeekerSelector", "Update SimpleName: Scheduler(6811) to SchedulerSelector", "Update SimpleName: Scheduler(6816) to SchedulerSelector", "Update SimpleName: Seeker(7701) to SeekerSelector"]}}, {"MediaFileAPI_cluster": {"actions": [{"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"MediaFileAPI_diff": {"operations": ["Update SimpleName: Seeker(2339) to SeekerSelector", "Update SimpleName: Seeker(2450) to SeekerSelector"]}}, {"LocatorRegistrationClient_cluster": {"actions": [{"root": "UPDATE from sage.Seeker to sage.SeekerSelector", "operations": ["UPD QualifiedName: sage.Seeker from sage.Seeker to sage.SeekerSelector", "UPD QualifiedName: sage.Seeker from sage.Seeker to sage.SeekerSelector", "UPD QualifiedName: sage.Seeker from sage.Seeker to sage.SeekerSelector"]}]}}, {"LocatorRegistrationClient_diff": {"operations": ["Update QualifiedName: sage.Seeker(5268) to sage.SeekerSelector", "Update QualifiedName: sage.Seeker(5280) to sage.SeekerSelector", "Update QualifiedName: sage.Seeker(5289) to sage.SeekerSelector"]}}, {"MsgManager_cluster": {"actions": [{"root": "UPDATE from sage.Seeker to sage.SeekerSelector", "operations": ["UPD QualifiedName: sage.Seeker from sage.Seeker to sage.SeekerSelector", "UPD QualifiedName: sage.Seeker from sage.Seeker to sage.SeekerSelector"]}]}}, {"MsgManager_diff": {"operations": ["Update QualifiedName: sage.Seeker(1300) to sage.SeekerSelector", "Update QualifiedName: sage.Seeker(1037) to sage.SeekerSelector"]}}, {"FilesystemMediaNode_cluster": {"actions": [{"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"FilesystemMediaNode_diff": {"operations": ["Update SimpleName: Seeker(353) to SeekerSelector"]}}, {"SDRecommended_cluster": {"actions": [{"root": "UPDATE from sage.Seeker to sage.SeekerSelector", "operations": ["UPD QualifiedName: sage.Seeker from sage.Seeker to sage.SeekerSelector"]}, {"root": "UPDATE from Seeker to SeekerSelector", "operations": ["UPD SimpleName: Seeker from Seeker to SeekerSelector", "UPD SimpleName: Seeker from Seeker to SeekerSelector"]}]}}, {"SDRecommended_diff": {"operations": ["Update QualifiedName: sage.Seeker(14) to sage.SeekerSelector", "Update SimpleName: Seeker(1061) to SeekerSelector", "Update SimpleName: Seeker(1083) to SeekerSelector"]}}, {"MediaMaskFilter_cluster": {"actions": [{"root": "UPDATE from sage.Seeker to sage.SeekerSelector", "operations": ["UPD QualifiedName: sage.Seeker from sage.Seeker to sage.SeekerSelector"]}]}}, {"MediaMaskFilter_diff": {"operations": ["Update QualifiedName: sage.Seeker(95) to sage.SeekerSelector"]}}, {"IntelligentSorter_cluster": {"actions": [{"root": "UPDATE from sage.Seeker to sage.SeekerSelector", "operations": ["UPD QualifiedName: sage.Seeker from sage.Seeker to sage.SeekerSelector"]}]}}, {"IntelligentSorter_diff": {"operations": ["Update QualifiedName: sage.Seeker(22) to sage.SeekerSelector"]}}], "commit_stats": [{"total_files": 52, "deleted_files": 0, "testing": "False", "maintenance": "True", "build": "False"}]}