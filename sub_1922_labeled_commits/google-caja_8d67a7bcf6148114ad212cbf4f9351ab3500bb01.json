{"application": "google-caja", "csha": "8d67a7bcf6148114ad212cbf4f9351ab3500bb01", "files": [{"Linter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS ImportDeclaration to CompilationUnit at 11", "INS QualifiedName: com.google.caja.parser.js.ArrayConstructor to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 25", "operations": ["INS ImportDeclaration to CompilationUnit at 25", "INS QualifiedName: com.google.caja.parser.js.ObjectConstructor to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 43", "operations": ["INS QualifiedName: com.google.caja.util.Charsets to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 43"]}, {"root": "INS ImportDeclaration to CompilationUnit at 53", "operations": ["INS QualifiedName: java.io.OutputStreamWriter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 53"]}, {"root": "INS ImportDeclaration to CompilationUnit at 54", "operations": ["INS ImportDeclaration to CompilationUnit at 54", "INS QualifiedName: java.io.Writer to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 55", "operations": ["INS ImportDeclaration to CompilationUnit at 55", "INS QualifiedName: java.util.Arrays to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 60", "operations": ["INS ImportDeclaration to CompilationUnit at 60", "INS QualifiedName: java.util.ListIterator to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 4", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: env to VariableDeclarationFragment at 0", "INS SimpleType: Environment to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS SimpleName: Environment to SimpleType: Environment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleName: Linter to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS ConstructorInvocation to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 6", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: env to SingleVariableDeclaration at 1", "INS SimpleName: env to FieldAccess at 1", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS SimpleType: Environment to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: Environment to SimpleType: Environment at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: env to Assignment: = at 1", "INS SimpleName: Linter to MethodDeclaration at 1"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: mc to MethodInvocation at 3", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: result to ReturnStatement at 0", "INS SimpleName: reportOut to VariableDeclarationFragment at 0", "INS SimpleType: Writer to VariableDeclarationStatement at 0", "INS SimpleType: FileOutputStream to ClassInstanceCreation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: reportOut to MethodInvocation at 5", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 3", "INS CatchClause to TryStatement at 1", "INS TryStatement to Block at 2", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: < to Assignment: = at 1", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS TryStatement to Block at 0", "INS Block to TryStatement at 1", "INS SimpleName: ErrorReporter to MethodInvocation at 0", "INS SimpleName: OutputStreamWriter to SimpleType: OutputStreamWriter at 0", "INS NumberLiteral: 0 to InfixExpression: < at 1", "INS SimpleName: compareTo to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: reportErrors to MethodInvocation at 1", "INS SimpleName: getName to MethodInvocation at 1", "INS SimpleName: contentMap to MethodInvocation at 2", "INS SimpleName: endsWith to MethodInvocation at 1", "INS SimpleName: output to MethodInvocation at 0", "INS SimpleType: OutputStreamWriter to ClassInstanceCreation at 0", "INS SimpleName: Writer to SimpleType: Writer at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: FileOutputStream to SimpleType: FileOutputStream at 0", "INS SimpleName: close to MethodInvocation at 1", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS Block to TryStatement at 0", "INS SimpleName: result to Assignment: = at 0", "INS MethodInvocation to InfixExpression: < at 0", "INS IfStatement to Block at 5", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to CatchClause at 1", "INS SimpleName: mq to MethodInvocation at 4", "INS SimpleName: reportOut to MethodInvocation at 0", "INS SimpleName: result to Assignment: = at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS MethodInvocation to IfStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS Block to IfStatement at 2", "INS Block to TryStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: output to ClassInstanceCreation at 1", "INS ExpressionStatement to Block at 0", "INS QualifiedName: Charsets.UTF_8 to ClassInstanceCreation at 2", "INS BooleanLiteral: false to Assignment: = at 1", "INS QualifiedName: MessageLevel.WARNING to MethodInvocation at 2", "INS ClassInstanceCreation to ClassInstanceCreation at 1", "INS StringLiteral: \".stamp\" to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS ParameterizedType: ListIterator<String> to VariableDeclarationStatement at 0", "INS SimpleName: Arrays to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: ListIterator to ParameterizedType: ListIterator<String> at 0", "INS SimpleName: args to MethodInvocation at 2", "INS SimpleName: argIt to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: listIterator to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to ParameterizedType: ListIterator<String> at 1", "INS SimpleName: ListIterator to SimpleType: ListIterator at 0", "INS SimpleName: asList to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: outDir to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS QualifiedName: BROWSER_ENVIRONMENT.outers to MethodInvocation at 2", "INS SimpleName: Set to SimpleType: Set at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleType: Set to ParameterizedType: Set<String> at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: String to ParameterizedType: Set<String> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: Set<String> to VariableDeclarationStatement at 0", "INS SimpleName: outers to VariableDeclarationFragment at 0", "INS SimpleName: Sets to MethodInvocation at 0", "INS SimpleName: newLinkedHashSet to MethodInvocation at 1"]}, {"root": "INS WhileStatement to Block at 4", "operations": ["INS MethodInvocation to IfStatement at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: argIt to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS StringLiteral: \"Unrecognized command line flag \" to InfixExpression: + at 0", "INS StringLiteral: \"-\" to MethodInvocation at 2", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS IfStatement to IfStatement at 2", "INS SimpleName: outers to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS Block to IfStatement at 1", "INS SimpleName: argIt to MethodInvocation at 0", "INS IfStatement to IfStatement at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: add to MethodInvocation at 1", "INS WhileStatement to Block at 4", "INS SimpleName: equals to MethodInvocation at 1", "INS Block to WhileStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: startsWith to MethodInvocation at 1", "INS BreakStatement to Block at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: argIt to MethodInvocation at 0", "INS SimpleType: IOException to ClassInstanceCreation at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: arg to InfixExpression: + at 1", "INS IfStatement to Block at 1", "INS SimpleName: arg to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"--builtin\" to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: next to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"--\" to MethodInvocation at 0", "INS SimpleName: argIt to MethodInvocation at 0", "INS SimpleName: hasNext to MethodInvocation at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: arg to MethodInvocation at 2", "INS StringLiteral: \"--out\" to MethodInvocation at 0", "INS SimpleName: arg to VariableDeclarationFragment at 0", "INS SimpleName: previous to MethodInvocation at 1", "INS SimpleName: next to MethodInvocation at 1", "INS BreakStatement to Block at 1", "INS Block to IfStatement at 2", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: arg to MethodInvocation at 2", "INS SimpleName: outDir to Assignment: = at 0", "INS SimpleName: arg to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: argIt to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to WhileStatement at 0", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS WhileStatement to Block at 5", "operations": ["INS MethodInvocation to WhileStatement at 0", "INS Block to WhileStatement at 1", "INS SimpleName: argIt to MethodInvocation at 0", "INS SimpleName: hasNext to MethodInvocation at 1", "INS WhileStatement to Block at 5"]}, {"root": "INS IfStatement to Block at 9", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 2", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"jslint.txt\" to ClassInstanceCreation at 2", "INS NullLiteral to InfixExpression: == at 1", "INS IfStatement to Block at 9", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: outDir to InfixExpression: == at 0", "INS SimpleName: out to Assignment: = at 0", "INS SimpleType: File to ClassInstanceCreation at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleName: File to SimpleType: File at 0", "INS SimpleName: out to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: outDir to ClassInstanceCreation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 10", "operations": ["INS SimpleType: Environment to VariableDeclarationStatement at 0", "INS SimpleType: Environment to ClassInstanceCreation at 0", "INS SimpleName: Environment to SimpleType: Environment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: Environment to SimpleType: Environment at 0", "INS SimpleName: outers to ClassInstanceCreation at 1", "INS VariableDeclarationStatement to Block at 10", "INS SimpleName: env to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from ConstructorInvocation", "operations": ["MOV ClassInstanceCreation to ConstructorInvocation at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: File to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleName: env to MethodInvocation at 2", "operations": ["INS SimpleName: env to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "INS StringLiteral: \"JSON\" to MethodInvocation at 16", "operations": ["INS StringLiteral: \"JSON\" to MethodInvocation at 16"]}, {"root": "INS InstanceofExpression to InfixExpression: || at 2", "operations": ["INS SimpleName: e to InstanceofExpression at 0", "INS SimpleName: ArrayConstructor to SimpleType: ArrayConstructor at 0", "INS InstanceofExpression to InfixExpression: || at 2", "INS SimpleType: ArrayConstructor to InstanceofExpression at 1"]}, {"root": "INS InstanceofExpression to InfixExpression: || at 3", "operations": ["INS SimpleName: e to InstanceofExpression at 0", "INS SimpleName: ObjectConstructor to SimpleType: ObjectConstructor at 0", "INS InstanceofExpression to InfixExpression: || at 3", "INS SimpleType: ObjectConstructor to InstanceofExpression at 1"]}, {"root": "INS InstanceofExpression to InfixExpression: || at 4", "operations": ["INS InstanceofExpression to InfixExpression: || at 4", "INS SimpleName: e to InstanceofExpression at 0", "INS SimpleType: FunctionConstructor to InstanceofExpression at 1", "INS SimpleName: FunctionConstructor to SimpleType: FunctionConstructor at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "INS SimpleName: env to ClassInstanceCreation at 1", "operations": ["INS SimpleName: env to ClassInstanceCreation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: File to ClassInstanceCreation at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: argIt to MethodInvocation at 0", "INS SimpleName: next to MethodInvocation at 1"]}, {"root": "DEL SimpleName: arg", "operations": ["DEL SimpleName: arg"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: arg", "DEL EnhancedForStatement", "DEL SimpleName: args", "DEL Block"]}]}}, {"Linter_diff": {"operations": ["Insert ImportDeclaration(23) into CompilationUnit(3098) at 11", "Insert ImportDeclaration(51) into CompilationUnit(3098) at 25", "Insert ImportDeclaration(87) into CompilationUnit(3098) at 43", "Insert ImportDeclaration(107) into CompilationUnit(3098) at 53", "Insert ImportDeclaration(109) into CompilationUnit(3098) at 54", "Insert ImportDeclaration(111) into CompilationUnit(3098) at 55", "Insert ImportDeclaration(121) into CompilationUnit(3098) at 60", "Insert QualifiedName: com.google.caja.parser.js.ArrayConstructor(22) into ImportDeclaration(23) at 0", "Insert QualifiedName: com.google.caja.parser.js.ObjectConstructor(50) into ImportDeclaration(51) at 0", "Insert QualifiedName: com.google.caja.util.Charsets(86) into ImportDeclaration(87) at 0", "Insert QualifiedName: java.io.OutputStreamWriter(106) into ImportDeclaration(107) at 0", "Insert QualifiedName: java.io.Writer(108) into ImportDeclaration(109) at 0", "Insert QualifiedName: java.util.Arrays(110) into ImportDeclaration(111) at 0", "Insert QualifiedName: java.util.ListIterator(120) into ImportDeclaration(121) at 0", "Insert FieldDeclaration(143) into TypeDeclaration: class(3097) at 4", "Insert MethodDeclaration(156) into TypeDeclaration: class(3097) at 5", "Insert MethodDeclaration(170) into TypeDeclaration: class(3097) at 6", "Insert Modifier: private(137) into FieldDeclaration(143) at 0", "Insert Modifier: final(138) into FieldDeclaration(143) at 1", "Insert SimpleType: Environment(140) into FieldDeclaration(143) at 2", "Insert VariableDeclarationFragment(142) into FieldDeclaration(143) at 3", "Insert Modifier: public(144) into MethodDeclaration(156) at 0", "Insert SimpleName: Linter(145) into MethodDeclaration(156) at 1", "Insert Block(155) into MethodDeclaration(156) at 2", "Insert Modifier: public(157) into MethodDeclaration(170) at 0", "Insert SimpleName: Linter(158) into MethodDeclaration(170) at 1", "Insert SingleVariableDeclaration(162) into MethodDeclaration(170) at 2", "Insert Block(169) into MethodDeclaration(170) at 3", "Insert SimpleName: Environment(139) into SimpleType: Environment(140) at 0", "Insert SimpleName: env(141) into VariableDeclarationFragment(142) at 0", "Insert ConstructorInvocation(154) into Block(155) at 0", "Insert SimpleType: Environment(160) into SingleVariableDeclaration(162) at 0", "Insert SimpleName: env(161) into SingleVariableDeclaration(162) at 1", "Insert ExpressionStatement(168) into Block(169) at 0", "Insert IfStatement(331) into Block(332) at 5", "Insert VariableDeclarationStatement(2826) into Block(2998) at 0", "Insert VariableDeclarationStatement(2843) into Block(2998) at 2", "Insert VariableDeclarationStatement(2855) into Block(2998) at 3", "Insert WhileStatement(2920) into Block(2998) at 4", "Insert WhileStatement(2935) into Block(2998) at 5", "Insert IfStatement(2977) into Block(2998) at 8", "Insert VariableDeclarationStatement(2986) into Block(2998) at 9", "Move ClassInstanceCreation(198) into ConstructorInvocation(154) at 0", "Insert SimpleName: Environment(159) into SimpleType: Environment(160) at 0", "Insert Assignment: =(167) into ExpressionStatement(168) at 0", "Insert MethodInvocation(248) into IfStatement(331) at 0", "Insert Block(276) into IfStatement(331) at 1", "Insert Block(330) into IfStatement(331) at 2", "Insert ParameterizedType: ListIterator<String>(2817) into VariableDeclarationStatement(2826) at 0", "Insert VariableDeclarationFragment(2825) into VariableDeclarationStatement(2826) at 1", "Move SimpleType: String(2709) into VariableDeclarationStatement(2843) at 0", "Insert VariableDeclarationFragment(2842) into VariableDeclarationStatement(2843) at 1", "Insert ParameterizedType: Set<String>(2848) into VariableDeclarationStatement(2855) at 0", "Insert VariableDeclarationFragment(2854) into VariableDeclarationStatement(2855) at 1", "Insert MethodInvocation(2858) into WhileStatement(2920) at 0", "Insert Block(2919) into WhileStatement(2920) at 1", "Insert MethodInvocation(2923) into WhileStatement(2935) at 0", "Insert Block(2934) into WhileStatement(2935) at 1", "Move SimpleType: File(2716) into VariableDeclarationStatement(2951) at 0", "Insert InfixExpression: ==(2954) into IfStatement(2977) at 0", "Insert Block(2967) into IfStatement(2977) at 1", "Insert Block(2976) into IfStatement(2977) at 2", "Insert SimpleType: Environment(2979) into VariableDeclarationStatement(2986) at 0", "Insert VariableDeclarationFragment(2985) into VariableDeclarationStatement(2986) at 1", "Insert FieldAccess(165) into Assignment: =(167) at 0", "Insert SimpleName: env(166) into Assignment: =(167) at 1", "Insert SimpleName: env(239) into MethodInvocation(241) at 2", "Insert MethodInvocation(245) into MethodInvocation(248) at 0", "Insert SimpleName: endsWith(246) into MethodInvocation(248) at 1", "Insert StringLiteral: \".stamp\"(247) into MethodInvocation(248) at 2", "Move IfStatement(228) into Block(276) at 0", "Insert VariableDeclarationStatement(289) into Block(330) at 0", "Insert VariableDeclarationStatement(293) into Block(330) at 1", "Insert TryStatement(327) into Block(330) at 2", "Insert ReturnStatement(329) into Block(330) at 3", "Insert StringLiteral: \"JSON\"(2280) into MethodInvocation(2281) at 16", "Insert InstanceofExpression(2523) into InfixExpression: ||(2532) at 2", "Insert InstanceofExpression(2527) into InfixExpression: ||(2532) at 3", "Insert InstanceofExpression(2531) into InfixExpression: ||(2532) at 4", "Insert SimpleType: ListIterator(2814) into ParameterizedType: ListIterator<String>(2817) at 0", "Insert SimpleType: String(2816) into ParameterizedType: ListIterator<String>(2817) at 1", "Insert SimpleName: argIt(2818) into VariableDeclarationFragment(2825) at 0", "Insert MethodInvocation(2824) into VariableDeclarationFragment(2825) at 1", "Insert SimpleName: outDir(2840) into VariableDeclarationFragment(2842) at 0", "Insert NullLiteral(2841) into VariableDeclarationFragment(2842) at 1", "Insert SimpleType: Set(2845) into ParameterizedType: Set<String>(2848) at 0", "Insert SimpleType: String(2847) into ParameterizedType: Set<String>(2848) at 1", "Insert SimpleName: outers(2849) into VariableDeclarationFragment(2854) at 0", "Insert MethodInvocation(2853) into VariableDeclarationFragment(2854) at 1", "Insert SimpleName: argIt(2856) into MethodInvocation(2858) at 0", "Insert SimpleName: hasNext(2857) into MethodInvocation(2858) at 1", "Insert VariableDeclarationStatement(2866) into Block(2919) at 0", "Insert IfStatement(2918) into Block(2919) at 1", "Insert SimpleName: argIt(2921) into MethodInvocation(2923) at 0", "Insert SimpleName: hasNext(2922) into MethodInvocation(2923) at 1", "Move ExpressionStatement(2720) into Block(2934) at 0", "Insert SimpleName: outDir(2952) into InfixExpression: ==(2954) at 0", "Insert NullLiteral(2953) into InfixExpression: ==(2954) at 1", "Insert ExpressionStatement(2966) into Block(2967) at 0", "Insert ExpressionStatement(2975) into Block(2976) at 0", "Insert SimpleName: Environment(2978) into SimpleType: Environment(2979) at 0", "Insert SimpleName: env(2980) into VariableDeclarationFragment(2985) at 0", "Insert ClassInstanceCreation(2984) into VariableDeclarationFragment(2985) at 1", "Insert ThisExpression(163) into FieldAccess(165) at 0", "Insert SimpleName: env(164) into FieldAccess(165) at 1", "Insert SimpleName: output(243) into MethodInvocation(245) at 0", "Insert SimpleName: getName(244) into MethodInvocation(245) at 1", "Insert SimpleType: Writer(278) into VariableDeclarationStatement(289) at 0", "Insert VariableDeclarationFragment(288) into VariableDeclarationStatement(289) at 1", "Insert PrimitiveType: boolean(290) into VariableDeclarationStatement(293) at 0", "Insert VariableDeclarationFragment(292) into VariableDeclarationStatement(293) at 1", "Insert Block(309) into TryStatement(327) at 0", "Insert Block(326) into TryStatement(327) at 1", "Insert SimpleName: result(328) into ReturnStatement(329) at 0", "Insert SimpleName: e(2520) into InstanceofExpression(2523) at 0", "Insert SimpleType: ArrayConstructor(2522) into InstanceofExpression(2523) at 1", "Insert SimpleName: e(2524) into InstanceofExpression(2527) at 0", "Insert SimpleType: ObjectConstructor(2526) into InstanceofExpression(2527) at 1", "Insert SimpleName: e(2528) into InstanceofExpression(2531) at 0", "Insert SimpleType: FunctionConstructor(2530) into InstanceofExpression(2531) at 1", "Insert SimpleName: ListIterator(2813) into SimpleType: ListIterator(2814) at 0", "Insert SimpleName: String(2815) into SimpleType: String(2816) at 0", "Insert MethodInvocation(2822) into MethodInvocation(2824) at 0", "Insert SimpleName: listIterator(2823) into MethodInvocation(2824) at 1", "Insert SimpleName: Set(2844) into SimpleType: Set(2845) at 0", "Insert SimpleName: String(2846) into SimpleType: String(2847) at 0", "Insert SimpleName: Sets(2850) into MethodInvocation(2853) at 0", "Insert SimpleName: newLinkedHashSet(2851) into MethodInvocation(2853) at 1", "Insert QualifiedName: BROWSER_ENVIRONMENT.outers(2852) into MethodInvocation(2853) at 2", "Insert SimpleType: String(2860) into VariableDeclarationStatement(2866) at 0", "Insert VariableDeclarationFragment(2865) into VariableDeclarationStatement(2866) at 1", "Insert PrefixExpression: !(2871) into IfStatement(2918) at 0", "Insert Block(2877) into IfStatement(2918) at 1", "Insert IfStatement(2917) into IfStatement(2918) at 2", "Insert Assignment: =(2965) into ExpressionStatement(2966) at 0", "Insert Assignment: =(2974) into ExpressionStatement(2975) at 0", "Insert SimpleType: Environment(2982) into ClassInstanceCreation(2984) at 0", "Insert SimpleName: outers(2983) into ClassInstanceCreation(2984) at 1", "Insert SimpleName: Writer(277) into SimpleType: Writer(278) at 0", "Insert SimpleName: reportOut(279) into VariableDeclarationFragment(288) at 0", "Insert ClassInstanceCreation(287) into VariableDeclarationFragment(288) at 1", "Insert SimpleName: result(291) into VariableDeclarationFragment(292) at 0", "Insert ExpressionStatement(308) into Block(309) at 0", "Insert TryStatement(325) into Block(326) at 0", "Insert SimpleName: ArrayConstructor(2521) into SimpleType: ArrayConstructor(2522) at 0", "Insert SimpleName: ObjectConstructor(2525) into SimpleType: ObjectConstructor(2526) at 0", "Insert SimpleName: FunctionConstructor(2529) into SimpleType: FunctionConstructor(2530) at 0", "Insert SimpleName: Arrays(2819) into MethodInvocation(2822) at 0", "Insert SimpleName: asList(2820) into MethodInvocation(2822) at 1", "Insert SimpleName: args(2821) into MethodInvocation(2822) at 2", "Insert SimpleName: String(2859) into SimpleType: String(2860) at 0", "Insert SimpleName: arg(2861) into VariableDeclarationFragment(2865) at 0", "Insert MethodInvocation(2864) into VariableDeclarationFragment(2865) at 1", "Insert MethodInvocation(2870) into PrefixExpression: !(2871) at 0", "Insert ExpressionStatement(2875) into Block(2877) at 0", "Insert BreakStatement(2876) into Block(2877) at 1", "Insert MethodInvocation(2881) into IfStatement(2917) at 0", "Insert Block(2888) into IfStatement(2917) at 1", "Insert IfStatement(2916) into IfStatement(2917) at 2", "Insert SimpleName: out(2955) into Assignment: =(2965) at 0", "Move MethodInvocation(2745) into Assignment: =(2965) at 1", "Insert SimpleName: out(2968) into Assignment: =(2974) at 0", "Insert ClassInstanceCreation(2973) into Assignment: =(2974) at 1", "Insert SimpleName: Environment(2981) into SimpleType: Environment(2982) at 0", "Insert SimpleName: env(2989) into ClassInstanceCreation(2990) at 1", "Insert SimpleType: OutputStreamWriter(281) into ClassInstanceCreation(287) at 0", "Insert ClassInstanceCreation(285) into ClassInstanceCreation(287) at 1", "Insert QualifiedName: Charsets.UTF_8(286) into ClassInstanceCreation(287) at 2", "Insert Assignment: =(307) into ExpressionStatement(308) at 0", "Insert Block(314) into TryStatement(325) at 0", "Insert CatchClause(324) into TryStatement(325) at 1", "Insert SimpleName: argIt(2862) into MethodInvocation(2864) at 0", "Insert SimpleName: next(2863) into MethodInvocation(2864) at 1", "Insert SimpleName: arg(2867) into MethodInvocation(2870) at 0", "Insert SimpleName: startsWith(2868) into MethodInvocation(2870) at 1", "Insert StringLiteral: \"-\"(2869) into MethodInvocation(2870) at 2", "Insert MethodInvocation(2874) into ExpressionStatement(2875) at 0", "Insert StringLiteral: \"--out\"(2878) into MethodInvocation(2881) at 0", "Insert SimpleName: equals(2879) into MethodInvocation(2881) at 1", "Insert SimpleName: arg(2880) into MethodInvocation(2881) at 2", "Insert ExpressionStatement(2887) into Block(2888) at 0", "Insert MethodInvocation(2892) into IfStatement(2916) at 0", "Insert Block(2900) into IfStatement(2916) at 1", "Insert IfStatement(2915) into IfStatement(2916) at 2", "Move SimpleType: File(2735) into ClassInstanceCreation(2931) at 0", "Insert MethodInvocation(2930) into ClassInstanceCreation(2931) at 1", "Insert SimpleType: File(2970) into ClassInstanceCreation(2973) at 0", "Insert SimpleName: outDir(2971) into ClassInstanceCreation(2973) at 1", "Insert StringLiteral: \"jslint.txt\"(2972) into ClassInstanceCreation(2973) at 2", "Insert SimpleName: OutputStreamWriter(280) into SimpleType: OutputStreamWriter(281) at 0", "Insert SimpleType: FileOutputStream(283) into ClassInstanceCreation(285) at 0", "Insert SimpleName: output(284) into ClassInstanceCreation(285) at 1", "Insert SimpleName: result(294) into Assignment: =(307) at 0", "Insert InfixExpression: <(306) into Assignment: =(307) at 1", "Insert ExpressionStatement(313) into Block(314) at 0", "Insert SingleVariableDeclaration(318) into CatchClause(324) at 0", "Insert Block(323) into CatchClause(324) at 1", "Insert SimpleName: argIt(2872) into MethodInvocation(2874) at 0", "Insert SimpleName: previous(2873) into MethodInvocation(2874) at 1", "Insert Assignment: =(2886) into ExpressionStatement(2887) at 0", "Insert StringLiteral: \"--builtin\"(2889) into MethodInvocation(2892) at 0", "Insert SimpleName: equals(2890) into MethodInvocation(2892) at 1", "Insert SimpleName: arg(2891) into MethodInvocation(2892) at 2", "Insert ExpressionStatement(2899) into Block(2900) at 0", "Insert MethodInvocation(2904) into IfStatement(2915) at 0", "Insert Block(2906) into IfStatement(2915) at 1", "Insert Block(2914) into IfStatement(2915) at 2", "Insert SimpleName: argIt(2928) into MethodInvocation(2930) at 0", "Insert SimpleName: next(2929) into MethodInvocation(2930) at 1", "Insert SimpleName: File(2969) into SimpleType: File(2970) at 0", "Insert SimpleName: FileOutputStream(282) into SimpleType: FileOutputStream(283) at 0", "Insert MethodInvocation(304) into InfixExpression: <(306) at 0", "Insert NumberLiteral: 0(305) into InfixExpression: <(306) at 1", "Insert MethodInvocation(312) into ExpressionStatement(313) at 0", "Insert SimpleType: IOException(316) into SingleVariableDeclaration(318) at 0", "Insert SimpleName: ex(317) into SingleVariableDeclaration(318) at 1", "Insert ExpressionStatement(322) into Block(323) at 0", "Insert SimpleName: outDir(2882) into Assignment: =(2886) at 0", "Insert MethodInvocation(2885) into Assignment: =(2886) at 1", "Insert MethodInvocation(2898) into ExpressionStatement(2899) at 0", "Insert StringLiteral: \"--\"(2901) into MethodInvocation(2904) at 0", "Insert SimpleName: equals(2902) into MethodInvocation(2904) at 1", "Insert SimpleName: arg(2903) into MethodInvocation(2904) at 2", "Insert BreakStatement(2905) into Block(2906) at 0", "Insert ThrowStatement(2913) into Block(2914) at 0", "Insert MethodInvocation(301) into MethodInvocation(304) at 0", "Insert SimpleName: compareTo(302) into MethodInvocation(304) at 1", "Insert QualifiedName: MessageLevel.WARNING(303) into MethodInvocation(304) at 2", "Insert SimpleName: reportOut(310) into MethodInvocation(312) at 0", "Insert SimpleName: close(311) into MethodInvocation(312) at 1", "Insert SimpleName: IOException(315) into SimpleType: IOException(316) at 0", "Insert Assignment: =(321) into ExpressionStatement(322) at 0", "Insert SimpleName: argIt(2883) into MethodInvocation(2885) at 0", "Insert SimpleName: next(2884) into MethodInvocation(2885) at 1", "Insert SimpleName: outers(2893) into MethodInvocation(2898) at 0", "Insert SimpleName: add(2894) into MethodInvocation(2898) at 1", "Insert MethodInvocation(2897) into MethodInvocation(2898) at 2", "Insert ClassInstanceCreation(2912) into ThrowStatement(2913) at 0", "Insert SimpleName: ErrorReporter(295) into MethodInvocation(301) at 0", "Insert SimpleName: reportErrors(296) into MethodInvocation(301) at 1", "Insert SimpleName: contentMap(297) into MethodInvocation(301) at 2", "Insert SimpleName: mc(298) into MethodInvocation(301) at 3", "Insert SimpleName: mq(299) into MethodInvocation(301) at 4", "Insert SimpleName: reportOut(300) into MethodInvocation(301) at 5", "Insert SimpleName: result(319) into Assignment: =(321) at 0", "Insert BooleanLiteral: false(320) into Assignment: =(321) at 1", "Insert SimpleName: argIt(2895) into MethodInvocation(2897) at 0", "Insert SimpleName: next(2896) into MethodInvocation(2897) at 1", "Insert SimpleType: IOException(2908) into ClassInstanceCreation(2912) at 0", "Insert InfixExpression: +(2911) into ClassInstanceCreation(2912) at 1", "Insert SimpleName: IOException(2907) into SimpleType: IOException(2908) at 0", "Insert StringLiteral: \"Unrecognized command line flag \"(2909) into InfixExpression: +(2911) at 0", "Insert SimpleName: arg(2910) into InfixExpression: +(2911) at 1", "Delete SimpleName: arg(2717)", "Delete SimpleName: arg(2710)", "Delete SingleVariableDeclaration(2711)", "Delete SimpleName: args(2712)", "Delete Block(2721)", "Delete EnhancedForStatement(2722)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}