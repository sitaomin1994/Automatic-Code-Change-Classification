{"application": "Netflix-hollow", "csha": "690e1973a33d3ef003849f67449bbf0d3142ee48", "files": [{"HollowProducer_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: com.netflix.hollow.api.consumer.HollowConsumer.AnnouncementWatcher.NO_ANNOUNCEMENT_AVAILABLE to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "UPDATE from void to long", "operations": ["UPD PrimitiveType: void from void to long", "UPD PrimitiveType: boolean from boolean to long"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TextElement: at an optimal state. to TagElement at 2", "INS TagElement to Javadoc at 0", "INS TextElement: reorganized so that ordinal holes are filled.  This may need to be run multiple times to arrive to TagElement at 1", "INS SimpleName: config to TagElement: @param at 0", "INS TextElement:  specifies what criteria to use to determine whether a compaction is necessary to TagElement: @param at 1", "INS TextElement: Run a compaction cycle, will produce a data state with exactly the same data as currently, but  to TagElement at 0", "INS TagElement: @param to Javadoc at 1", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @return to Javadoc at 2", "INS TextElement:  the version identifier of the produced state, or AnnouncementWatcher.NO_ANNOUNCEMENT_AVAILABLE if compaction was unnecessary. to TagElement: @return at 0"]}, {"root": "INS TagElement: @return to Javadoc at 1", "operations": ["INS TextElement:  the version identifier of the produced state. to TagElement: @return at 0", "INS TagElement: @return to Javadoc at 1"]}, {"root": "INS ReturnStatement to Block at 4", "operations": ["INS SimpleName: toVersion to ReturnStatement at 0", "INS ReturnStatement to Block at 4"]}, {"root": "INS SimpleName: NO_ANNOUNCEMENT_AVAILABLE to ReturnStatement at 0", "operations": ["INS SimpleName: NO_ANNOUNCEMENT_AVAILABLE to ReturnStatement at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: RuntimeException to SimpleType: RuntimeException at 0", "INS IfStatement to Block at 2", "INS CastExpression to ThrowStatement at 0", "INS SimpleName: RuntimeException to SimpleType: RuntimeException at 0", "INS ThrowStatement to IfStatement at 1", "INS InstanceofExpression to IfStatement at 0", "INS SimpleName: th to InstanceofExpression at 0", "INS SimpleType: RuntimeException to InstanceofExpression at 1", "INS SimpleName: th to CastExpression at 1", "INS SimpleType: RuntimeException to CastExpression at 0"]}, {"root": "INS ThrowStatement to Block at 3", "operations": ["INS ThrowStatement to Block at 3", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleType: RuntimeException to ClassInstanceCreation at 0", "INS SimpleName: RuntimeException to SimpleType: RuntimeException at 0", "INS SimpleName: th to ClassInstanceCreation at 1"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV MethodInvocation to ReturnStatement at 0"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}, {"root": "DEL BooleanLiteral: true", "operations": ["DEL BooleanLiteral: true"]}, {"root": "DEL BooleanLiteral: false", "operations": ["DEL BooleanLiteral: false"]}]}}, {"HollowProducer_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(3075) at 1", "Insert QualifiedName: com.netflix.hollow.api.consumer.HollowConsumer.AnnouncementWatcher.NO_ANNOUNCEMENT_AVAILABLE(2) into ImportDeclaration(3) at 0", "Update PrimitiveType: void(690) to long", "Insert Javadoc(753) into MethodDeclaration(819) at 0", "Update PrimitiveType: boolean(739) to long", "Insert TagElement: @return(691) into Javadoc(692) at 1", "Insert ReturnStatement(741) into Block(742) at 4", "Insert TagElement(747) into Javadoc(753) at 0", "Insert TagElement: @param(750) into Javadoc(753) at 1", "Insert TagElement: @return(752) into Javadoc(753) at 2", "Insert TextElement:  the version identifier of the produced state.(690) into TagElement: @return(691) at 0", "Insert SimpleName: toVersion(740) into ReturnStatement(741) at 0", "Insert TextElement: Run a compaction cycle, will produce a data state with exactly the same data as currently, but (744) into TagElement(747) at 0", "Insert TextElement: reorganized so that ordinal holes are filled.  This may need to be run multiple times to arrive(745) into TagElement(747) at 1", "Insert TextElement: at an optimal state.(746) into TagElement(747) at 2", "Insert SimpleName: config(748) into TagElement: @param(750) at 0", "Insert TextElement:  specifies what criteria to use to determine whether a compaction is necessary(749) into TagElement: @param(750) at 1", "Insert TextElement:  the version identifier of the produced state, or AnnouncementWatcher.NO_ANNOUNCEMENT_AVAILABLE if compaction was unnecessary.(751) into TagElement: @return(752) at 0", "Insert SimpleName: NO_ANNOUNCEMENT_AVAILABLE(816) into ReturnStatement(817) at 0", "Insert IfStatement(1000) into Block(1006) at 2", "Insert ThrowStatement(1005) into Block(1006) at 3", "Insert InstanceofExpression(994) into IfStatement(1000) at 0", "Insert ThrowStatement(999) into IfStatement(1000) at 1", "Insert ClassInstanceCreation(1004) into ThrowStatement(1005) at 0", "Move MethodInvocation(794) into ReturnStatement(811) at 0", "Insert SimpleName: th(991) into InstanceofExpression(994) at 0", "Insert SimpleType: RuntimeException(993) into InstanceofExpression(994) at 1", "Insert CastExpression(998) into ThrowStatement(999) at 0", "Insert SimpleType: RuntimeException(1002) into ClassInstanceCreation(1004) at 0", "Insert SimpleName: th(1003) into ClassInstanceCreation(1004) at 1", "Insert SimpleName: RuntimeException(992) into SimpleType: RuntimeException(993) at 0", "Insert SimpleType: RuntimeException(996) into CastExpression(998) at 0", "Insert SimpleName: th(997) into CastExpression(998) at 1", "Insert SimpleName: RuntimeException(1001) into SimpleType: RuntimeException(1002) at 0", "Insert SimpleName: RuntimeException(995) into SimpleType: RuntimeException(996) at 0", "Delete ExpressionStatement(795)", "Delete BooleanLiteral: true(796)", "Delete BooleanLiteral: false(802)"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}