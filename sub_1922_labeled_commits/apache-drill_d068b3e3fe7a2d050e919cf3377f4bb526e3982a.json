{"application": "apache-drill", "csha": "d068b3e3fe7a2d050e919cf3377f4bb526e3982a", "files": [{"BasicClient_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV TypeParameter to TypeDeclaration: class at 7"]}, {"root": "INS Javadoc to TypeDeclaration: class at 0", "operations": ["INS TextElement: < to TagElement: @param at 0", "INS TextElement: < to TagElement: @param at 0", "INS SimpleName: T to TagElement: @param at 1", "INS SimpleName: HS to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 1", "INS TextElement:  Handshake receive type to TagElement: @param at 3", "INS TextElement: > to TagElement: @param at 2", "INS TagElement: @param to Javadoc at 3", "INS TagElement: @param to Javadoc at 2", "INS TagElement: @param to Javadoc at 0", "INS TextElement:  handshake rpc type to TagElement: @param at 3", "INS TextElement: > to TagElement: @param at 2", "INS TextElement: < to TagElement: @param at 0", "INS TextElement: < to TagElement: @param at 0", "INS TextElement:  Client connection type to TagElement: @param at 3", "INS TextElement: > to TagElement: @param at 2", "INS TextElement:  Handshake send type to TagElement: @param at 3", "INS Javadoc to TypeDeclaration: class at 0", "INS SimpleName: HR to TagElement: @param at 1", "INS TextElement: > to TagElement: @param at 2", "INS SimpleName: CC to TagElement: @param at 1"]}, {"root": "UPDATE from RpcBus<T,R> to RpcBus<T,CC>", "operations": ["UPD ParameterizedType: RpcBus<T,R> from RpcBus<T,R> to RpcBus<T,CC>"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 27", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: CC to SimpleType: CC at 0", "INS SimpleName: RpcCommand to SimpleType: RpcCommand at 0", "INS SimpleType: CC to ParameterizedType: RpcCommand<M,CC> at 2", "INS Block to MethodDeclaration at 5", "INS SimpleType: M to ParameterizedType: RpcCommand<M,CC> at 1", "INS SimpleName: M to SimpleType: M at 0", "INS Modifier: protected to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 27", "INS SimpleName: command to ReturnStatement at 0", "INS SimpleName: RpcCommand to SimpleType: RpcCommand at 0", "INS SimpleType: CC to ParameterizedType: RpcCommand<M,CC> at 2", "INS SimpleName: MessageLite to SimpleType: MessageLite at 0", "INS SimpleName: M to TypeParameter at 0", "INS ParameterizedType: RpcCommand<M,CC> to MethodDeclaration at 2", "INS SimpleName: getInitialCommand to MethodDeclaration at 3", "INS SimpleType: MessageLite to TypeParameter at 1", "INS SimpleName: M to SimpleType: M at 0", "INS SimpleType: RpcCommand to ParameterizedType: RpcCommand<M,CC> at 0", "INS ParameterizedType: RpcCommand<M,CC> to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS TypeParameter to MethodDeclaration at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: M to ParameterizedType: RpcCommand<M,CC> at 1", "INS SimpleName: CC to SimpleType: CC at 0", "INS SimpleType: RpcCommand to ParameterizedType: RpcCommand<M,CC> at 0", "INS SimpleName: command to SingleVariableDeclaration at 2"]}, {"root": "UPDATE from R to CC", "operations": ["UPD SimpleType: R from R to CC", "UPD SimpleType: R from R to CC", "UPD SimpleType: R from R to CC", "UPD SimpleName: R from R to CC", "UPD SimpleName: R from R to CC", "UPD SimpleType: R from R to CC", "UPD SimpleType: R from R to CC", "UPD SimpleName: R from R to CC", "UPD SimpleType: R from R to CC", "UPD SimpleName: R from R to CC", "UPD SimpleType: R from R to CC", "UPD SimpleName: R from R to CC", "UPD SimpleType: R from R to CC", "UPD SimpleName: R from R to CC", "UPD SimpleName: R from R to CC", "UPD SimpleName: R from R to CC", "UPD SimpleName: R from R to CC", "UPD SimpleName: R from R to CC", "UPD SimpleType: R from R to CC", "UPD SimpleName: R from R to CC", "UPD SimpleType: R from R to CC"]}, {"root": "UPDATE from RemoteConnection to ClientConnection", "operations": ["UPD SimpleName: RemoteConnection from RemoteConnection to ClientConnection", "UPD SimpleType: RemoteConnection from RemoteConnection to ClientConnection"]}, {"root": "UPDATE from HANDSHAKE_SEND to HS", "operations": ["UPD SimpleType: HANDSHAKE_SEND from HANDSHAKE_SEND to HS", "UPD SimpleName: HANDSHAKE_SEND from HANDSHAKE_SEND to HS", "UPD SimpleName: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HS", "UPD SimpleName: HANDSHAKE_SEND from HANDSHAKE_SEND to HS", "UPD SimpleName: HANDSHAKE_SEND from HANDSHAKE_SEND to HS", "UPD SimpleType: HANDSHAKE_SEND from HANDSHAKE_SEND to HS", "UPD SimpleType: HANDSHAKE_SEND from HANDSHAKE_SEND to HS"]}, {"root": "UPDATE from HANDSHAKE_RESPONSE to HR", "operations": ["UPD SimpleName: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleType: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleName: HANDSHAKE_SEND from HANDSHAKE_SEND to HR", "UPD SimpleType: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleName: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleName: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleType: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleType: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleName: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleType: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleName: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleType: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleType: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleName: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleName: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleType: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleName: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleType: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleType: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleType: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleName: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleName: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR", "UPD SimpleName: HANDSHAKE_RESPONSE from HANDSHAKE_RESPONSE to HR"]}, {"root": "UPDATE from Class<HANDSHAKE_RESPONSE> to Class<HR>", "operations": ["UPD ParameterizedType: Class<HANDSHAKE_RESPONSE> from Class<HANDSHAKE_RESPONSE> to Class<HR>", "UPD ParameterizedType: Class<HANDSHAKE_RESPONSE> from Class<HANDSHAKE_RESPONSE> to Class<HR>"]}, {"root": "UPDATE from Parser<HANDSHAKE_RESPONSE> to Parser<HR>", "operations": ["UPD ParameterizedType: Parser<HANDSHAKE_RESPONSE> from Parser<HANDSHAKE_RESPONSE> to Parser<HR>", "UPD ParameterizedType: Parser<HANDSHAKE_RESPONSE> from Parser<HANDSHAKE_RESPONSE> to Parser<HR>"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "UPDATE from public to protected", "operations": ["UPD Modifier: public from public to protected"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS Block to MethodDeclaration at 6"]}, {"root": "UPDATE from AbstractHandshakeHandler<HANDSHAKE_RESPONSE> to AbstractHandshakeHandler<HR>", "operations": ["UPD ParameterizedType: AbstractHandshakeHandler<HANDSHAKE_RESPONSE> from AbstractHandshakeHandler<HANDSHAKE_RESPONSE> to AbstractHandshakeHandler<HR>"]}, {"root": "UPDATE from RpcConnectionHandler<R> to RpcConnectionHandler<CC>", "operations": ["UPD ParameterizedType: RpcConnectionHandler<R> from RpcConnectionHandler<R> to RpcConnectionHandler<CC>", "UPD ParameterizedType: RpcConnectionHandler<R> from RpcConnectionHandler<R> to RpcConnectionHandler<CC>", "UPD ParameterizedType: RpcConnectionHandler<R> from RpcConnectionHandler<R> to RpcConnectionHandler<CC>"]}, {"root": "UPDATE from RpcOutcomeListener<HANDSHAKE_RESPONSE> to RpcOutcomeListener<HR>", "operations": ["UPD ParameterizedType: RpcOutcomeListener<HANDSHAKE_RESPONSE> from RpcOutcomeListener<HANDSHAKE_RESPONSE> to RpcOutcomeListener<HR>"]}, {"root": "MOVE from ParameterizedType: RpcConnectionHandler<R>", "operations": ["MOV SimpleType: RpcConnectionHandler to ParameterizedType: RpcConnectionHandler<R> at 0"]}, {"root": "MOVE from ParameterizedType: RpcConnectionHandler<R>", "operations": ["MOV SimpleType: RpcConnectionHandler to ParameterizedType: RpcConnectionHandler<R> at 0"]}, {"root": "MOVE from ParameterizedType: RpcConnectionHandler<R>", "operations": ["MOV SimpleType: RpcConnectionHandler to ParameterizedType: RpcConnectionHandler<R> at 0"]}, {"root": "UPDATE from RpcOutcome<HANDSHAKE_RESPONSE> to RpcOutcome<HR>", "operations": ["UPD ParameterizedType: RpcOutcome<HANDSHAKE_RESPONSE> from RpcOutcome<HANDSHAKE_RESPONSE> to RpcOutcome<HR>"]}, {"root": "UPDATE from RpcException to Exception", "operations": ["UPD SimpleType: RpcException from RpcException to Exception", "UPD SimpleName: RpcException from RpcException to Exception"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS StringLiteral: \"Failure while validating handshake\" to MethodInvocation at 2", "INS SimpleName: logger to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: ex to MethodInvocation at 3"]}, {"root": "UPDATE from RpcExceptionHandler<R> to RpcExceptionHandler<CC>", "operations": ["UPD ParameterizedType: RpcExceptionHandler<R> from RpcExceptionHandler<R> to RpcExceptionHandler<CC>"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: limitations under the License.", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TagElement", "DEL Javadoc", "DEL TextElement: See the License for the specific language governing permissions and"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.ExecutionException", "DEL ImportDeclaration"]}, {"root": "DEL Modifier: abstract", "operations": ["DEL Modifier: abstract"]}, {"root": "DEL ThisExpression", "operations": ["DEL ThisExpression", "DEL SimpleName: BasicClient"]}, {"root": "DEL ThisExpression", "operations": ["DEL SimpleName: BasicClient", "DEL ThisExpression"]}]}}, {"BasicClient_diff": {"operations": ["Move TypeParameter(81) into TypeDeclaration: class(1249) at 7", "Insert Javadoc(70) into TypeDeclaration: class(1249) at 0", "Update ParameterizedType: RpcBus<T,R>(92) to RpcBus<T,CC>", "Insert MethodDeclaration(739) into TypeDeclaration: class(1249) at 27", "Insert TagElement: @param(54) into Javadoc(70) at 0", "Insert TagElement: @param(59) into Javadoc(70) at 1", "Insert TagElement: @param(64) into Javadoc(70) at 2", "Insert TagElement: @param(69) into Javadoc(70) at 3", "Update SimpleName: R(74) to CC", "Update SimpleType: RemoteConnection(76) to ClientConnection", "Update SimpleName: HANDSHAKE_RESPONSE(82) to HS", "Update SimpleName: HANDSHAKE_SEND(78) to HR", "Update SimpleType: R(91) to CC", "Update SimpleType: R(124) to CC", "Update ParameterizedType: Class<HANDSHAKE_RESPONSE>(141) to Class<HR>", "Update ParameterizedType: Parser<HANDSHAKE_RESPONSE>(151) to Parser<HR>", "Insert MarkerAnnotation(423) into MethodDeclaration(447) at 0", "Update Modifier: public(418) to protected", "Update SimpleType: R(420) to CC", "Insert Block(619) into MethodDeclaration(620) at 5", "Insert Modifier: protected(713) into MethodDeclaration(739) at 0", "Insert TypeParameter(717) into MethodDeclaration(739) at 1", "Insert ParameterizedType: RpcCommand<M,CC>(724) into MethodDeclaration(739) at 2", "Insert SimpleName: getInitialCommand(725) into MethodDeclaration(739) at 3", "Insert SingleVariableDeclaration(735) into MethodDeclaration(739) at 4", "Insert Block(738) into MethodDeclaration(739) at 5", "Update ParameterizedType: AbstractHandshakeHandler<HANDSHAKE_RESPONSE>(1104) to AbstractHandshakeHandler<HR>", "Insert TextElement: <(50) into TagElement: @param(54) at 0", "Insert SimpleName: T(51) into TagElement: @param(54) at 1", "Insert TextElement: >(52) into TagElement: @param(54) at 2", "Insert TextElement:  handshake rpc type(53) into TagElement: @param(54) at 3", "Insert TextElement: <(55) into TagElement: @param(59) at 0", "Insert SimpleName: CC(56) into TagElement: @param(59) at 1", "Insert TextElement: >(57) into TagElement: @param(59) at 2", "Insert TextElement:  Client connection type(58) into TagElement: @param(59) at 3", "Insert TextElement: <(60) into TagElement: @param(64) at 0", "Insert SimpleName: HS(61) into TagElement: @param(64) at 1", "Insert TextElement: >(62) into TagElement: @param(64) at 2", "Insert TextElement:  Handshake send type(63) into TagElement: @param(64) at 3", "Insert TextElement: <(65) into TagElement: @param(69) at 0", "Insert SimpleName: HR(66) into TagElement: @param(69) at 1", "Insert TextElement: >(67) into TagElement: @param(69) at 2", "Insert TextElement:  Handshake receive type(68) into TagElement: @param(69) at 3", "Update SimpleName: RemoteConnection(75) to ClientConnection", "Update SimpleName: R(90) to CC", "Update SimpleName: R(123) to CC", "Update SimpleType: HANDSHAKE_RESPONSE(140) to HR", "Update SimpleType: HANDSHAKE_RESPONSE(150) to HR", "Update ParameterizedType: Class<HANDSHAKE_RESPONSE>(184) to Class<HR>", "Update ParameterizedType: Parser<HANDSHAKE_RESPONSE>(191) to Parser<HR>", "Insert SimpleName: Override(422) into MarkerAnnotation(423) at 0", "Update SimpleName: R(419) to CC", "Update SimpleType: HANDSHAKE_RESPONSE(596) to HR", "Update SimpleType: HANDSHAKE_RESPONSE(607) to HR", "Update SimpleType: R(611) to CC", "Insert SimpleName: M(714) into TypeParameter(717) at 0", "Insert SimpleType: MessageLite(716) into TypeParameter(717) at 1", "Insert SimpleType: RpcCommand(719) into ParameterizedType: RpcCommand<M,CC>(724) at 0", "Insert SimpleType: M(721) into ParameterizedType: RpcCommand<M,CC>(724) at 1", "Insert SimpleType: CC(723) into ParameterizedType: RpcCommand<M,CC>(724) at 2", "Insert Modifier: final(726) into SingleVariableDeclaration(735) at 0", "Insert ParameterizedType: RpcCommand<M,CC>(733) into SingleVariableDeclaration(735) at 1", "Insert SimpleName: command(734) into SingleVariableDeclaration(735) at 2", "Insert ReturnStatement(737) into Block(738) at 0", "Update ParameterizedType: RpcConnectionHandler<R>(714) to RpcConnectionHandler<CC>", "Update SimpleType: HANDSHAKE_SEND(718) to HS", "Update ParameterizedType: RpcConnectionHandler<R>(757) to RpcConnectionHandler<CC>", "Update SimpleType: HANDSHAKE_SEND(764) to HS", "Update ParameterizedType: RpcOutcomeListener<HANDSHAKE_RESPONSE>(1001) to RpcOutcomeListener<HR>", "Update SimpleType: HANDSHAKE_RESPONSE(1103) to HR", "Update SimpleType: R(1108) to CC", "Update SimpleName: HANDSHAKE_RESPONSE(139) to HR", "Update SimpleName: HANDSHAKE_RESPONSE(149) to HR", "Update SimpleType: HANDSHAKE_RESPONSE(183) to HR", "Update SimpleType: HANDSHAKE_RESPONSE(190) to HR", "Update SimpleName: HANDSHAKE_RESPONSE(595) to HR", "Update SimpleName: HANDSHAKE_RESPONSE(606) to HR", "Update SimpleName: R(610) to CC", "Insert SimpleName: MessageLite(715) into SimpleType: MessageLite(716) at 0", "Insert SimpleName: RpcCommand(718) into SimpleType: RpcCommand(719) at 0", "Insert SimpleName: M(720) into SimpleType: M(721) at 0", "Insert SimpleName: CC(722) into SimpleType: CC(723) at 0", "Insert SimpleType: RpcCommand(728) into ParameterizedType: RpcCommand<M,CC>(733) at 0", "Insert SimpleType: M(730) into ParameterizedType: RpcCommand<M,CC>(733) at 1", "Insert SimpleType: CC(732) into ParameterizedType: RpcCommand<M,CC>(733) at 2", "Insert SimpleName: command(736) into ReturnStatement(737) at 0", "Move SimpleType: RpcConnectionHandler(754) into ParameterizedType: RpcConnectionHandler<CC>(747) at 0", "Update SimpleType: R(713) to CC", "Update SimpleName: HANDSHAKE_SEND(717) to HS", "Move SimpleType: RpcConnectionHandler(771) into ParameterizedType: RpcConnectionHandler<CC>(790) at 0", "Update SimpleType: R(756) to CC", "Update SimpleName: HANDSHAKE_SEND(763) to HS", "Update ParameterizedType: RpcConnectionHandler<R>(774) to RpcConnectionHandler<CC>", "Update SimpleType: HANDSHAKE_SEND(778) to HS", "Update SimpleType: HANDSHAKE_RESPONSE(1000) to HR", "Update SimpleName: HANDSHAKE_RESPONSE(1102) to HR", "Update SimpleName: R(1107) to CC", "Update SimpleType: R(1115) to CC", "Update SimpleType: HANDSHAKE_RESPONSE(1151) to HR", "Update SimpleName: HANDSHAKE_RESPONSE(182) to HR", "Update SimpleName: HANDSHAKE_RESPONSE(189) to HR", "Insert SimpleName: RpcCommand(727) into SimpleType: RpcCommand(728) at 0", "Insert SimpleName: M(729) into SimpleType: M(730) at 0", "Insert SimpleName: CC(731) into SimpleType: CC(732) at 0", "Update SimpleName: R(712) to CC", "Update SimpleName: R(755) to CC", "Move SimpleType: RpcConnectionHandler(711) into ParameterizedType: RpcConnectionHandler<CC>(807) at 0", "Update SimpleType: R(773) to CC", "Update SimpleName: HANDSHAKE_SEND(777) to HS", "Update SimpleName: HANDSHAKE_RESPONSE(999) to HR", "Update SimpleType: HANDSHAKE_RESPONSE(1031) to HR", "Update SimpleName: R(1114) to CC", "Update SimpleName: HANDSHAKE_RESPONSE(1150) to HR", "Update ParameterizedType: RpcOutcome<HANDSHAKE_RESPONSE>(1161) to RpcOutcome<HR>", "Update SimpleName: R(772) to CC", "Update SimpleName: HANDSHAKE_RESPONSE(1030) to HR", "Update SimpleType: HANDSHAKE_RESPONSE(1160) to HR", "Update SimpleName: HANDSHAKE_RESPONSE(1159) to HR", "Update SimpleType: RpcException(1058) to Exception", "Insert ExpressionStatement(1095) into Block(1102) at 0", "Update SimpleName: RpcException(1057) to Exception", "Insert MethodInvocation(1094) into ExpressionStatement(1095) at 0", "Insert SimpleName: logger(1090) into MethodInvocation(1094) at 0", "Insert SimpleName: debug(1091) into MethodInvocation(1094) at 1", "Insert StringLiteral: \"Failure while validating handshake\"(1092) into MethodInvocation(1094) at 2", "Insert SimpleName: ex(1093) into MethodInvocation(1094) at 3", "Update ParameterizedType: RpcExceptionHandler<R>(404) to RpcExceptionHandler<CC>", "Update SimpleType: R(403) to CC", "Update SimpleName: R(402) to CC", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete QualifiedName: java.util.concurrent.ExecutionException(49)", "Delete ImportDeclaration(50)", "Delete Modifier: abstract(603)", "Delete SimpleName: BasicClient(1038)", "Delete ThisExpression(1039)", "Delete SimpleName: BasicClient(1044)", "Delete ThisExpression(1045)"]}}, {"BasicClientWithConnection_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL PackageDeclaration", "DEL QualifiedName: org.apache.drill.exec.rpc", "DEL Javadoc", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TagElement", "DEL TextElement: limitations under the License.", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: io.netty.buffer.ByteBuf", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: io.netty.channel.EventLoopGroup"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: io.netty.channel.socket.SocketChannel"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.memory.BufferAllocator", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.rpc.BasicClientWithConnection.ServerConnection", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.protobuf.Internal.EnumLite", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.protobuf.MessageLite"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.protobuf.Parser", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleType: HANDSHAKE_RESPONSE", "DEL SimpleName: Response", "DEL SimpleName: alloc", "DEL SimpleType: ByteBuf", "DEL SimpleName: Response", "DEL SimpleName: throttle", "DEL SimpleName: HANDSHAKE_RESPONSE", "DEL ThisExpression", "DEL SingleVariableDeclaration", "DEL SimpleName: MessageLite", "DEL SimpleName: eventLoopGroup", "DEL TypeParameter", "DEL SimpleType: RpcException", "DEL QualifiedName: org.slf4j.LoggerFactory", "DEL SingleVariableDeclaration", "DEL SimpleName: alloc", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: Override", "DEL SimpleName: connectionName", "DEL SimpleName: rpcMapping", "DEL SimpleName: Override", "DEL SingleVariableDeclaration", "DEL SimpleName: connection", "DEL ReturnStatement", "DEL SimpleName: alloc", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL SimpleName: alloc", "DEL SimpleName: BasicClientWithConnection", "DEL Modifier: protected", "DEL SimpleName: channel", "DEL SimpleName: MessageLite", "DEL SimpleName: ServerConnection", "DEL SimpleName: ByteBuf", "DEL SimpleName: connectionName", "DEL Modifier: private", "DEL SimpleName: alloc", "DEL SingleVariableDeclaration", "DEL SimpleName: dBody", "DEL SimpleName: dBody", "DEL TypeParameter", "DEL SingleVariableDeclaration", "DEL SimpleName: connectionName", "DEL TypeDeclaration: class", "DEL SimpleType: BufferAllocator", "DEL SimpleName: ByteBuf", "DEL SimpleName: RemoteConnection", "DEL SimpleName: String", "DEL SimpleName: rpcType", "DEL SimpleName: ServerConnection", "DEL MethodDeclaration", "DEL SimpleName: handshakeParser", "DEL SimpleName: getAllocator", "DEL SimpleType: MessageLite", "DEL SimpleName: EnumLite", "DEL SimpleType: ServerConnection", "DEL SimpleType: HANDSHAKE_RESPONSE", "DEL SimpleName: channel", "DEL SingleVariableDeclaration", "DEL SimpleName: channel", "DEL SimpleType: ServerConnection", "DEL FieldAccess", "DEL Modifier: public", "DEL TypeParameter", "DEL SimpleName: handleReponse", "DEL Modifier: abstract", "DEL SimpleName: BufferAllocator", "DEL SimpleType: String", "DEL Modifier: final", "DEL SimpleType: String", "DEL Modifier: abstract", "DEL Modifier: protected", "DEL SuperMethodInvocation", "DEL SimpleName: BufferAllocator", "DEL SimpleName: HANDSHAKE_RESPONSE", "DEL SimpleName: ByteBuf", "DEL PrimitiveType: int", "DEL Block", "DEL SimpleName: HANDSHAKE_RESPONSE", "DEL SimpleType: RpcConfig", "DEL SimpleName: alloc", "DEL ParameterizedType: BasicClient<T,ServerConnection,HANDSHAKE_SEND,HANDSHAKE_RESPONSE>", "DEL FieldAccess", "DEL SimpleType: Class", "DEL MarkerAnnotation", "DEL SimpleType: EventLoopGroup", "DEL SimpleName: dBody", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleType: BufferAllocator", "DEL SimpleName: name", "DEL Modifier: public", "DEL SuperConstructorInvocation", "DEL SimpleName: T", "DEL SimpleName: rpcMapping", "DEL SingleVariableDeclaration", "DEL SimpleName: String", "DEL Modifier: public", "DEL SimpleName: HANDSHAKE_SEND", "DEL SimpleName: RpcConfig", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: ConnectionThrottle", "DEL SimpleName: Class", "DEL SimpleName: pBody", "DEL SimpleName: HANDSHAKE_RESPONSE", "DEL MarkerAnnotation", "DEL SingleVariableDeclaration", "DEL SimpleType: Response", "DEL SimpleType: BufferAllocator", "DEL SimpleName: T", "DEL Modifier: public", "DEL ExpressionStatement", "DEL Modifier: static", "DEL SimpleType: ServerConnection", "DEL SimpleType: MessageLite", "DEL SimpleName: BufferAllocator", "DEL SimpleName: alloc", "DEL SimpleName: HANDSHAKE_SEND", "DEL SimpleName: getAsByteBufAllocator", "DEL FieldDeclaration", "DEL ParameterizedType: Class<HANDSHAKE_RESPONSE>", "DEL SimpleName: alloc", "DEL SimpleName: ServerConnection", "DEL QualifiedName: org.slf4j.Logger", "DEL SingleVariableDeclaration", "DEL FieldDeclaration", "DEL SimpleName: String", "DEL SimpleName: Override", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL SimpleName: channel", "DEL MethodInvocation", "DEL CastExpression", "DEL SimpleName: initRemoteConnection", "DEL VariableDeclarationFragment", "DEL ReturnStatement", "DEL SimpleType: EnumLite", "DEL SimpleName: connectionName", "DEL SimpleType: org.slf4j.Logger", "DEL SimpleType: Response", "DEL SimpleName: BufferAllocator", "DEL SimpleName: alloc", "DEL SingleVariableDeclaration", "DEL SimpleName: rpcType", "DEL MethodDeclaration", "DEL SimpleName: pBody", "DEL Block", "DEL SimpleType: T", "DEL SimpleType: RemoteConnection", "DEL PrimitiveType: int", "DEL MarkerAnnotation", "DEL SimpleName: logger", "DEL SuperConstructorInvocation", "DEL FieldAccess", "DEL SimpleName: name", "DEL SingleVariableDeclaration", "DEL SimpleName: ServerConnection", "DEL SimpleName: RpcException", "DEL SimpleName: Parser", "DEL SimpleType: ByteBuf", "DEL SimpleName: ServerConnection", "DEL SimpleName: alloc", "DEL Assignment: =", "DEL ReturnStatement", "DEL FieldDeclaration", "DEL Modifier: static", "DEL MethodInvocation", "DEL ThisExpression", "DEL SimpleType: HANDSHAKE_SEND", "DEL SimpleName: ByteBuf", "DEL SimpleName: connection", "DEL SimpleType: ByteBuf", "DEL SimpleName: SocketChannel", "DEL TypeDeclaration: class", "DEL Modifier: final", "DEL SimpleType: BasicClient", "DEL SimpleName: getLogger", "DEL SimpleName: pBody", "DEL VariableDeclarationFragment", "DEL SimpleName: ServerConnection", "DEL SimpleName: ConnectionThrottle", "DEL SimpleName: handshakeType", "DEL SimpleName: handshakeType", "DEL SimpleType: SocketChannel", "DEL SingleVariableDeclaration", "DEL SimpleName: responseClass", "DEL SimpleName: responseClass", "DEL SimpleName: alloc", "DEL SimpleName: channel", "DEL ExpressionStatement", "DEL SimpleType: BufferAllocator", "DEL SimpleType: ServerConnection", "DEL Block", "DEL Assignment: =", "DEL Modifier: final", "DEL SimpleName: BasicClientWithConnection", "DEL Assignment: =", "DEL SimpleName: BasicClientWithConnection", "DEL SimpleName: EventLoopGroup", "DEL Modifier: public", "DEL SimpleName: eventLoopGroup", "DEL SimpleName: handle", "DEL SimpleName: BasicClient", "DEL FieldDeclaration", "DEL SimpleType: HANDSHAKE_RESPONSE", "DEL SimpleName: SocketChannel", "DEL ExpressionStatement", "DEL ParameterizedType: Parser<HANDSHAKE_RESPONSE>", "DEL SingleVariableDeclaration", "DEL SimpleType: ConnectionThrottle", "DEL SimpleType: Parser", "DEL SimpleName: rpcType", "DEL ClassInstanceCreation", "DEL Modifier: private", "DEL SimpleName: handshakeParser", "DEL SimpleName: handleReponse", "DEL SimpleType: RpcException", "DEL SimpleName: RpcException", "DEL SimpleType: BufferAllocator", "DEL SimpleType: SocketChannel", "DEL Modifier: private", "DEL ThisExpression", "DEL SimpleName: T", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL SimpleType: BasicClientWithConnection", "DEL SimpleName: connectionName", "DEL SimpleName: BufferAllocator", "DEL SingleVariableDeclaration", "DEL SimpleType: ByteBuf", "DEL SimpleName: initRemoteConnection", "DEL SimpleType: T", "DEL VariableDeclarationFragment", "DEL TypeLiteral", "DEL SimpleType: ConnectionThrottle", "DEL MethodDeclaration"]}]}}, {"BasicClientWithConnection_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete QualifiedName: org.apache.drill.exec.rpc(15)", "Delete PackageDeclaration(16)", "Delete QualifiedName: io.netty.buffer.ByteBuf(17)", "Delete ImportDeclaration(18)", "Delete QualifiedName: io.netty.channel.EventLoopGroup(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: io.netty.channel.socket.SocketChannel(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: org.apache.drill.exec.memory.BufferAllocator(23)", "Delete ImportDeclaration(24)", "Delete QualifiedName: org.apache.drill.exec.rpc.BasicClientWithConnection.ServerConnection(25)", "Delete ImportDeclaration(26)", "Delete QualifiedName: com.google.protobuf.Internal.EnumLite(27)", "Delete ImportDeclaration(28)", "Delete QualifiedName: com.google.protobuf.MessageLite(29)", "Delete ImportDeclaration(30)", "Delete QualifiedName: com.google.protobuf.Parser(31)", "Delete ImportDeclaration(32)", "Delete Modifier: public(33)", "Delete Modifier: abstract(34)", "Delete SimpleName: BasicClientWithConnection(35)", "Delete SimpleName: T(36)", "Delete SimpleName: EnumLite(37)", "Delete SimpleType: EnumLite(38)", "Delete TypeParameter(39)", "Delete SimpleName: HANDSHAKE_SEND(40)", "Delete SimpleName: MessageLite(41)", "Delete SimpleType: MessageLite(42)", "Delete TypeParameter(43)", "Delete SimpleName: HANDSHAKE_RESPONSE(44)", "Delete SimpleName: MessageLite(45)", "Delete SimpleType: MessageLite(46)", "Delete TypeParameter(47)", "Delete SimpleName: BasicClient(48)", "Delete SimpleType: BasicClient(49)", "Delete SimpleName: T(50)", "Delete SimpleType: T(51)", "Delete SimpleName: ServerConnection(52)", "Delete SimpleType: ServerConnection(53)", "Delete SimpleName: HANDSHAKE_SEND(54)", "Delete SimpleType: HANDSHAKE_SEND(55)", "Delete SimpleName: HANDSHAKE_RESPONSE(56)", "Delete SimpleType: HANDSHAKE_RESPONSE(57)", "Delete ParameterizedType: BasicClient<T,ServerConnection,HANDSHAKE_SEND,HANDSHAKE_RESPONSE>(58)", "Delete Modifier: static(59)", "Delete Modifier: final(60)", "Delete QualifiedName: org.slf4j.Logger(61)", "Delete SimpleType: org.slf4j.Logger(62)", "Delete SimpleName: logger(63)", "Delete QualifiedName: org.slf4j.LoggerFactory(64)", "Delete SimpleName: getLogger(65)", "Delete SimpleName: BasicClientWithConnection(66)", "Delete SimpleType: BasicClientWithConnection(67)", "Delete TypeLiteral(68)", "Delete MethodInvocation(69)", "Delete VariableDeclarationFragment(70)", "Delete FieldDeclaration(71)", "Delete Modifier: private(72)", "Delete SimpleName: BufferAllocator(73)", "Delete SimpleType: BufferAllocator(74)", "Delete SimpleName: alloc(75)", "Delete VariableDeclarationFragment(76)", "Delete FieldDeclaration(77)", "Delete Modifier: private(78)", "Delete Modifier: final(79)", "Delete SimpleName: String(80)", "Delete SimpleType: String(81)", "Delete SimpleName: connectionName(82)", "Delete VariableDeclarationFragment(83)", "Delete FieldDeclaration(84)", "Delete Modifier: public(85)", "Delete SimpleName: BasicClientWithConnection(86)", "Delete SimpleName: RpcConfig(87)", "Delete SimpleType: RpcConfig(88)", "Delete SimpleName: rpcMapping(89)", "Delete SingleVariableDeclaration(90)", "Delete SimpleName: BufferAllocator(91)", "Delete SimpleType: BufferAllocator(92)", "Delete SimpleName: alloc(93)", "Delete SingleVariableDeclaration(94)", "Delete SimpleName: EventLoopGroup(95)", "Delete SimpleType: EventLoopGroup(96)", "Delete SimpleName: eventLoopGroup(97)", "Delete SingleVariableDeclaration(98)", "Delete SimpleName: T(99)", "Delete SimpleType: T(100)", "Delete SimpleName: handshakeType(101)", "Delete SingleVariableDeclaration(102)", "Delete SimpleName: Class(103)", "Delete SimpleType: Class(104)", "Delete SimpleName: HANDSHAKE_RESPONSE(105)", "Delete SimpleType: HANDSHAKE_RESPONSE(106)", "Delete ParameterizedType: Class<HANDSHAKE_RESPONSE>(107)", "Delete SimpleName: responseClass(108)", "Delete SingleVariableDeclaration(109)", "Delete SimpleName: Parser(110)", "Delete SimpleType: Parser(111)", "Delete SimpleName: HANDSHAKE_RESPONSE(112)", "Delete SimpleType: HANDSHAKE_RESPONSE(113)", "Delete ParameterizedType: Parser<HANDSHAKE_RESPONSE>(114)", "Delete SimpleName: handshakeParser(115)", "Delete SingleVariableDeclaration(116)", "Delete SimpleName: String(117)", "Delete SimpleType: String(118)", "Delete SimpleName: connectionName(119)", "Delete SingleVariableDeclaration(120)", "Delete SimpleName: rpcMapping(121)", "Delete SimpleName: alloc(122)", "Delete SimpleName: getAsByteBufAllocator(123)", "Delete MethodInvocation(124)", "Delete SimpleName: eventLoopGroup(125)", "Delete SimpleName: handshakeType(126)", "Delete SimpleName: responseClass(127)", "Delete SimpleName: handshakeParser(128)", "Delete SuperConstructorInvocation(129)", "Delete ThisExpression(130)", "Delete SimpleName: alloc(131)", "Delete FieldAccess(132)", "Delete SimpleName: alloc(133)", "Delete Assignment: =(134)", "Delete ExpressionStatement(135)", "Delete ThisExpression(136)", "Delete SimpleName: connectionName(137)", "Delete FieldAccess(138)", "Delete SimpleName: connectionName(139)", "Delete Assignment: =(140)", "Delete ExpressionStatement(141)", "Delete Block(142)", "Delete MethodDeclaration(143)", "Delete SimpleName: Override(144)", "Delete MarkerAnnotation(145)", "Delete Modifier: protected(146)", "Delete SimpleName: Response(147)", "Delete SimpleType: Response(148)", "Delete SimpleName: handle(149)", "Delete SimpleName: ServerConnection(150)", "Delete SimpleType: ServerConnection(151)", "Delete SimpleName: connection(152)", "Delete SingleVariableDeclaration(153)", "Delete PrimitiveType: int(154)", "Delete SimpleName: rpcType(155)", "Delete SingleVariableDeclaration(156)", "Delete SimpleName: ByteBuf(157)", "Delete SimpleType: ByteBuf(158)", "Delete SimpleName: pBody(159)", "Delete SingleVariableDeclaration(160)", "Delete SimpleName: ByteBuf(161)", "Delete SimpleType: ByteBuf(162)", "Delete SimpleName: dBody(163)", "Delete SingleVariableDeclaration(164)", "Delete SimpleName: RpcException(165)", "Delete SimpleType: RpcException(166)", "Delete SimpleName: handleReponse(167)", "Delete SimpleName: ConnectionThrottle(168)", "Delete SimpleType: ConnectionThrottle(169)", "Delete SimpleName: connection(170)", "Delete CastExpression(171)", "Delete SimpleName: rpcType(172)", "Delete SimpleName: pBody(173)", "Delete SimpleName: dBody(174)", "Delete MethodInvocation(175)", "Delete ReturnStatement(176)", "Delete Block(177)", "Delete MethodDeclaration(178)", "Delete Modifier: protected(179)", "Delete Modifier: abstract(180)", "Delete SimpleName: Response(181)", "Delete SimpleType: Response(182)", "Delete SimpleName: handleReponse(183)", "Delete SimpleName: ConnectionThrottle(184)", "Delete SimpleType: ConnectionThrottle(185)", "Delete SimpleName: throttle(186)", "Delete SingleVariableDeclaration(187)", "Delete PrimitiveType: int(188)", "Delete SimpleName: rpcType(189)", "Delete SingleVariableDeclaration(190)", "Delete SimpleName: ByteBuf(191)", "Delete SimpleType: ByteBuf(192)", "Delete SimpleName: pBody(193)", "Delete SingleVariableDeclaration(194)", "Delete SimpleName: ByteBuf(195)", "Delete SimpleType: ByteBuf(196)", "Delete SimpleName: dBody(197)", "Delete SingleVariableDeclaration(198)", "Delete SimpleName: RpcException(199)", "Delete SimpleType: RpcException(200)", "Delete MethodDeclaration(201)", "Delete SimpleName: Override(202)", "Delete MarkerAnnotation(203)", "Delete Modifier: public(204)", "Delete SimpleName: ServerConnection(205)", "Delete SimpleType: ServerConnection(206)", "Delete SimpleName: initRemoteConnection(207)", "Delete SimpleName: SocketChannel(208)", "Delete SimpleType: SocketChannel(209)", "Delete SimpleName: channel(210)", "Delete SingleVariableDeclaration(211)", "Delete SimpleName: initRemoteConnection(212)", "Delete SimpleName: channel(213)", "Delete SuperMethodInvocation(214)", "Delete ExpressionStatement(215)", "Delete SimpleName: ServerConnection(216)", "Delete SimpleType: ServerConnection(217)", "Delete SimpleName: connectionName(218)", "Delete SimpleName: channel(219)", "Delete SimpleName: alloc(220)", "Delete ClassInstanceCreation(221)", "Delete ReturnStatement(222)", "Delete Block(223)", "Delete MethodDeclaration(224)", "Delete Modifier: public(225)", "Delete Modifier: static(226)", "Delete SimpleName: ServerConnection(227)", "Delete SimpleName: RemoteConnection(228)", "Delete SimpleType: RemoteConnection(229)", "Delete Modifier: private(230)", "Delete Modifier: final(231)", "Delete SimpleName: BufferAllocator(232)", "Delete SimpleType: BufferAllocator(233)", "Delete SimpleName: alloc(234)", "Delete VariableDeclarationFragment(235)", "Delete FieldDeclaration(236)", "Delete Modifier: public(237)", "Delete SimpleName: ServerConnection(238)", "Delete SimpleName: String(239)", "Delete SimpleType: String(240)", "Delete SimpleName: name(241)", "Delete SingleVariableDeclaration(242)", "Delete SimpleName: SocketChannel(243)", "Delete SimpleType: SocketChannel(244)", "Delete SimpleName: channel(245)", "Delete SingleVariableDeclaration(246)", "Delete SimpleName: BufferAllocator(247)", "Delete SimpleType: BufferAllocator(248)", "Delete SimpleName: alloc(249)", "Delete SingleVariableDeclaration(250)", "Delete SimpleName: channel(251)", "Delete SimpleName: name(252)", "Delete SuperConstructorInvocation(253)", "Delete ThisExpression(254)", "Delete SimpleName: alloc(255)", "Delete FieldAccess(256)", "Delete SimpleName: alloc(257)", "Delete Assignment: =(258)", "Delete ExpressionStatement(259)", "Delete Block(260)", "Delete MethodDeclaration(261)", "Delete SimpleName: Override(262)", "Delete MarkerAnnotation(263)", "Delete Modifier: public(264)", "Delete SimpleName: BufferAllocator(265)", "Delete SimpleType: BufferAllocator(266)", "Delete SimpleName: getAllocator(267)", "Delete SimpleName: alloc(268)", "Delete ReturnStatement(269)", "Delete Block(270)", "Delete MethodDeclaration(271)", "Delete TypeDeclaration: class(272)", "Delete TypeDeclaration: class(273)"]}}, {"BasicServer_cluster": {"actions": [{"root": "UPDATE from RpcBus<T,C> to RpcBus<T,SC>", "operations": ["UPD ParameterizedType: RpcBus<T,C> from RpcBus<T,C> to RpcBus<T,SC>"]}, {"root": "INS TagElement: @param to Javadoc at 1", "operations": ["INS TextElement: > to TagElement: @param at 2", "INS TextElement:  RPC type to TagElement: @param at 3", "INS SimpleName: T to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 1", "INS TextElement: < to TagElement: @param at 0"]}, {"root": "INS TagElement: @param to Javadoc at 2", "operations": ["INS TextElement:  server connection type to TagElement: @param at 3", "INS TextElement: < to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: SC to TagElement: @param at 1", "INS TextElement: > to TagElement: @param at 2"]}, {"root": "UPDATE from C to SC", "operations": ["UPD SimpleName: C from C to SC", "UPD SimpleType: C from C to SC", "UPD SimpleType: C from C to SC", "UPD SimpleName: C from C to SC", "UPD SimpleType: C from C to SC", "UPD SimpleName: C from C to SC", "UPD SimpleName: C from C to SC", "UPD SimpleName: C from C to SC", "UPD SimpleType: C from C to SC", "UPD SimpleName: C from C to SC", "UPD SimpleType: C from C to SC", "UPD SimpleType: C from C to SC", "UPD SimpleType: C from C to SC", "UPD SimpleName: C from C to SC", "UPD SimpleName: C from C to SC"]}, {"root": "INS ParameterizedType: ServerConnection<SC> to TypeParameter at 1", "operations": ["INS ParameterizedType: ServerConnection<SC> to TypeParameter at 1", "INS SimpleType: SC to ParameterizedType: ServerConnection<SC> at 1", "INS SimpleType: ServerConnection to ParameterizedType: ServerConnection<SC> at 0", "INS SimpleName: SC to SimpleType: SC at 0"]}, {"root": "INS Modifier: final to FieldDeclaration at 1", "operations": ["INS Modifier: final to FieldDeclaration at 1"]}, {"root": "UPDATE from LogggingReadTimeoutHandler to LoggingReadTimeoutHandler", "operations": ["UPD SimpleName: LogggingReadTimeoutHandler from LogggingReadTimeoutHandler to LoggingReadTimeoutHandler", "UPD SimpleType: LogggingReadTimeoutHandler from LogggingReadTimeoutHandler to LoggingReadTimeoutHandler", "UPD SimpleName: LogggingReadTimeoutHandler from LogggingReadTimeoutHandler to LoggingReadTimeoutHandler", "UPD SimpleName: LogggingReadTimeoutHandler from LogggingReadTimeoutHandler to LoggingReadTimeoutHandler"]}, {"root": "UPDATE from public to protected", "operations": ["UPD Modifier: public from public to protected", "UPD Modifier: public from public to protected", "UPD Modifier: public from public to protected", "UPD Modifier: public from public to protected"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 2", "operations": ["INS Modifier: abstract to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 9", "MOV SimpleType: RpcException to MethodDeclaration at 15", "MOV SingleVariableDeclaration to MethodDeclaration at 10", "MOV SingleVariableDeclaration to MethodDeclaration at 11", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from send to handle", "operations": ["UPD SimpleName: send from send to handle"]}, {"root": "UPDATE from A server is bound to a port and is responsible for responding to various type of requests. In some cases, the inbound to A server is bound to a port and is responsible for responding to various type of requests. In some cases,", "operations": ["UPD TextElement: A server is bound to a port and is responsible for responding to various type of requests. In some cases, the inbound from A server is bound to a port and is responsible for responding to various type of requests. In some cases, the inbound to A server is bound to a port and is responsible for responding to various type of requests. In some cases,"]}, {"root": "UPDATE from requests will generate more than one outbound request. to the inbound requests will generate more than one outbound request.", "operations": ["UPD TextElement: requests will generate more than one outbound request. from requests will generate more than one outbound request. to the inbound requests will generate more than one outbound request."]}, {"root": "INS SimpleType: ResponseSender to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: ResponseSender to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from clazz to sender", "operations": ["UPD SimpleName: clazz from clazz to sender"]}, {"root": "UPDATE from RemoteConnection to ServerConnection", "operations": ["UPD SimpleName: RemoteConnection from RemoteConnection to ServerConnection"]}, {"root": "MOVE from SimpleType: ServerConnection", "operations": ["MOV SimpleName: RemoteConnection to SimpleType: ServerConnection at 0"]}, {"root": "UPDATE from RECEIVE to ResponseSender", "operations": ["UPD SimpleName: RECEIVE from RECEIVE to ResponseSender"]}, {"root": "MOVE from SimpleType: ResponseSender", "operations": ["MOV SimpleName: RECEIVE to SimpleType: ResponseSender at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: sender to MethodInvocation at 6", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: pBody to MethodInvocation at 4", "INS SimpleName: dBody to MethodInvocation at 5", "INS SimpleName: connection to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getCurrentHandler to MethodInvocation at 1", "INS SimpleName: handle to MethodInvocation at 1", "INS SimpleName: rpcType to MethodInvocation at 3", "INS SimpleName: connection to MethodInvocation at 0"]}, {"root": "UPDATE from RpcExceptionHandler<C> to RpcExceptionHandler<>", "operations": ["UPD ParameterizedType: RpcExceptionHandler<C> from RpcExceptionHandler<C> to RpcExceptionHandler<>"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: with the License.  You may obtain a copy of the License at", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: or more contributor license agreements.  See the NOTICE file", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL Javadoc", "DEL TagElement", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: regarding copyright ownership.  The ASF licenses this file", "DEL TextElement: limitations under the License."]}, {"root": "DEL SimpleType: RemoteConnection", "operations": ["DEL SimpleType: RemoteConnection"]}, {"root": "DEL SimpleType: C", "operations": ["DEL SimpleName: C", "DEL SimpleType: C"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL Modifier: protected", "DEL MethodDeclaration", "DEL PrimitiveType: void", "DEL SimpleName: removeTimeoutHandler"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL SimpleName: Override", "DEL MarkerAnnotation"]}, {"root": "DEL Block", "operations": ["DEL NullLiteral", "DEL ReturnStatement", "DEL Block"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleType: Response", "DEL SimpleName: C", "DEL ReturnStatement", "DEL SingleVariableDeclaration", "DEL SimpleType: C", "DEL SimpleName: connection", "DEL SimpleName: handle", "DEL Block", "DEL SimpleName: Response", "DEL NullLiteral", "DEL Modifier: protected"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: clazz", "DEL ParameterizedType: DrillRpcFuture<RECEIVE>", "DEL SimpleName: MessageLite", "DEL SimpleName: rpcType", "DEL SimpleType: MessageLite", "DEL TypeParameter", "DEL Modifier: public", "DEL Block", "DEL TypeParameter", "DEL SingleVariableDeclaration", "DEL SimpleType: RECEIVE", "DEL SimpleName: T", "DEL SimpleName: ByteBuf", "DEL SimpleName: SEND", "DEL MarkerAnnotation", "DEL SimpleName: C", "DEL SimpleName: RECEIVE", "DEL SingleVariableDeclaration", "DEL SimpleType: RECEIVE", "DEL ParameterizedType: Class<RECEIVE>", "DEL SimpleName: dataBodies", "DEL SimpleName: connection", "DEL SimpleName: RECEIVE", "DEL SimpleType: ByteBuf", "DEL SimpleType: SEND", "DEL SimpleName: send", "DEL SingleVariableDeclaration", "DEL SimpleName: protobufBody", "DEL SingleVariableDeclaration", "DEL SimpleName: MessageLite", "DEL SimpleType: C", "DEL SimpleName: send", "DEL ReturnStatement", "DEL SingleVariableDeclaration", "DEL SimpleType: MessageLite", "DEL SimpleName: protobufBody", "DEL SimpleName: connection", "DEL SimpleName: SEND", "DEL SimpleName: Override", "DEL SimpleType: Class", "DEL SimpleType: T", "DEL SimpleName: DrillRpcFuture", "DEL SimpleName: dataBodies", "DEL SimpleType: DrillRpcFuture", "DEL MethodDeclaration", "DEL SuperMethodInvocation", "DEL SimpleName: Class", "DEL SimpleName: RECEIVE", "DEL SimpleName: rpcType", "DEL SimpleName: clazz"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL MarkerAnnotation", "DEL SimpleName: Override"]}, {"root": "DEL TypeParameter", "operations": ["DEL SimpleType: MessageLite", "DEL TypeParameter", "DEL SimpleName: MessageLite", "DEL SimpleName: SEND"]}, {"root": "DEL TypeParameter", "operations": ["DEL TypeParameter", "DEL SimpleName: MessageLite", "DEL SimpleName: RECEIVE", "DEL SimpleType: MessageLite"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: RECEIVE", "DEL SimpleType: RpcOutcomeListener", "DEL ParameterizedType: RpcOutcomeListener<RECEIVE>", "DEL SimpleName: RpcOutcomeListener", "DEL SingleVariableDeclaration", "DEL SimpleName: listener", "DEL SimpleType: RECEIVE"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: T", "DEL SingleVariableDeclaration", "DEL SimpleName: rpcType", "DEL SimpleName: T"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: protobufBody", "DEL SimpleName: SEND", "DEL SingleVariableDeclaration", "DEL SimpleType: SEND"]}, {"root": "DEL ParameterizedType: Class<RECEIVE>", "operations": ["DEL SimpleType: RECEIVE", "DEL SimpleName: Class", "DEL SimpleType: Class", "DEL ParameterizedType: Class<RECEIVE>"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: ByteBuf", "DEL SingleVariableDeclaration", "DEL SimpleName: dataBodies", "DEL SimpleName: ByteBuf"]}, {"root": "DEL SuperMethodInvocation", "operations": ["DEL SuperMethodInvocation", "DEL SimpleName: send", "DEL SimpleName: rpcType", "DEL SimpleName: listener", "DEL SimpleName: dataBodies", "DEL SimpleName: protobufBody", "DEL SimpleName: connection", "DEL SimpleName: clazz"]}]}}, {"BasicServer_diff": {"operations": ["Update ParameterizedType: RpcBus<T,C>(82) to RpcBus<T,SC>", "Insert TagElement: @param(53) into Javadoc(59) at 1", "Insert TagElement: @param(58) into Javadoc(59) at 2", "Update SimpleName: C(72) to SC", "Insert ParameterizedType: ServerConnection<SC>(72) into TypeParameter(73) at 1", "Update SimpleType: C(81) to SC", "Insert Modifier: final(103) into FieldDeclaration(108) at 1", "Update SimpleName: LogggingReadTimeoutHandler(335) to LoggingReadTimeoutHandler", "Update Modifier: public(403) to protected", "Update Modifier: public(416) to protected", "Insert Modifier: abstract(517) into MethodDeclaration(526) at 1", "Move MarkerAnnotation(540) into MethodDeclaration(565) at 0", "Update Modifier: public(618) to protected", "Update SimpleName: send(628) to handle", "Move SingleVariableDeclaration(551) into MethodDeclaration(565) at 9", "Move SingleVariableDeclaration(555) into MethodDeclaration(565) at 10", "Move SingleVariableDeclaration(559) into MethodDeclaration(565) at 11", "Move SimpleType: RpcException(561) into MethodDeclaration(565) at 15", "Update Modifier: public(672) to protected", "Update SimpleType: C(674) to SC", "Update TextElement: A server is bound to a port and is responsible for responding to various type of requests. In some cases, the inbound(61) to A server is bound to a port and is responsible for responding to various type of requests. In some cases,", "Update TextElement: requests will generate more than one outbound request.(62) to the inbound requests will generate more than one outbound request.", "Insert TextElement: <(49) into TagElement: @param(53) at 0", "Insert SimpleName: T(50) into TagElement: @param(53) at 1", "Insert TextElement: >(51) into TagElement: @param(53) at 2", "Insert TextElement:  RPC type(52) into TagElement: @param(53) at 3", "Insert TextElement: <(54) into TagElement: @param(58) at 0", "Insert SimpleName: SC(55) into TagElement: @param(58) at 1", "Insert TextElement: >(56) into TagElement: @param(58) at 2", "Insert TextElement:  server connection type(57) into TagElement: @param(58) at 3", "Insert SimpleType: ServerConnection(69) into ParameterizedType: ServerConnection<SC>(72) at 0", "Insert SimpleType: SC(71) into ParameterizedType: ServerConnection<SC>(72) at 1", "Update SimpleName: C(80) to SC", "Update SimpleType: C(341) to SC", "Update SimpleName: LogggingReadTimeoutHandler(352) to LoggingReadTimeoutHandler", "Update SimpleType: C(438) to SC", "Update SimpleType: C(637) to SC", "Insert SimpleType: ResponseSender(548) into SingleVariableDeclaration(550) at 0", "Update SimpleName: clazz(653) to sender", "Update SimpleName: C(673) to SC", "Update SimpleName: RemoteConnection(73) to ServerConnection", "Move SimpleName: RemoteConnection(73) into SimpleType: ServerConnection(69) at 0", "Insert SimpleName: SC(70) into SimpleType: SC(71) at 0", "Update SimpleName: C(340) to SC", "Update SimpleType: C(354) to SC", "Update SimpleName: C(437) to SC", "Update SimpleName: C(636) to SC", "Update SimpleName: RECEIVE(650) to ResponseSender", "Move SimpleName: RECEIVE(650) into SimpleType: ResponseSender(548) at 0", "Insert MethodInvocation(562) into ExpressionStatement(563) at 0", "Update SimpleName: C(353) to SC", "Insert MethodInvocation(555) into MethodInvocation(562) at 0", "Insert SimpleName: handle(556) into MethodInvocation(562) at 1", "Insert SimpleName: connection(557) into MethodInvocation(562) at 2", "Insert SimpleName: rpcType(558) into MethodInvocation(562) at 3", "Insert SimpleName: pBody(559) into MethodInvocation(562) at 4", "Insert SimpleName: dBody(560) into MethodInvocation(562) at 5", "Insert SimpleName: sender(561) into MethodInvocation(562) at 6", "Insert SimpleName: connection(553) into MethodInvocation(555) at 0", "Insert SimpleName: getCurrentHandler(554) into MethodInvocation(555) at 1", "Update SimpleType: C(211) to SC", "Update SimpleName: C(210) to SC", "Update ParameterizedType: RpcExceptionHandler<C>(316) to RpcExceptionHandler<>", "Update SimpleType: LogggingReadTimeoutHandler(290) to LoggingReadTimeoutHandler", "Update SimpleName: LogggingReadTimeoutHandler(289) to LoggingReadTimeoutHandler", "Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements.  See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership.  The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License.  You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(8)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(9)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(10)", "Delete TextElement: See the License for the specific language governing permissions and(11)", "Delete TextElement: limitations under the License.(12)", "Delete TagElement(13)", "Delete Javadoc(14)", "Delete SimpleType: RemoteConnection(74)", "Delete SimpleName: C(314)", "Delete SimpleType: C(315)", "Delete Modifier: protected(411)", "Delete PrimitiveType: void(412)", "Delete SimpleName: removeTimeoutHandler(413)", "Delete Block(414)", "Delete MethodDeclaration(415)", "Delete SimpleName: Override(524)", "Delete MarkerAnnotation(525)", "Delete NullLiteral(535)", "Delete ReturnStatement(536)", "Delete Block(537)", "Delete Modifier: protected(541)", "Delete SimpleName: Response(542)", "Delete SimpleType: Response(543)", "Delete SimpleName: handle(544)", "Delete SimpleName: C(545)", "Delete SimpleType: C(546)", "Delete SimpleName: connection(547)", "Delete SingleVariableDeclaration(548)", "Delete NullLiteral(562)", "Delete ReturnStatement(563)", "Delete Block(564)", "Delete MethodDeclaration(565)", "Delete SimpleName: Override(566)", "Delete MarkerAnnotation(567)", "Delete Modifier: public(568)", "Delete SimpleName: SEND(569)", "Delete SimpleName: MessageLite(570)", "Delete SimpleType: MessageLite(571)", "Delete TypeParameter(572)", "Delete SimpleName: RECEIVE(573)", "Delete SimpleName: MessageLite(574)", "Delete SimpleType: MessageLite(575)", "Delete TypeParameter(576)", "Delete SimpleName: DrillRpcFuture(577)", "Delete SimpleType: DrillRpcFuture(578)", "Delete SimpleName: RECEIVE(579)", "Delete SimpleType: RECEIVE(580)", "Delete ParameterizedType: DrillRpcFuture<RECEIVE>(581)", "Delete SimpleName: send(582)", "Delete SimpleName: C(583)", "Delete SimpleType: C(584)", "Delete SimpleName: connection(585)", "Delete SingleVariableDeclaration(586)", "Delete SimpleName: T(587)", "Delete SimpleType: T(588)", "Delete SimpleName: rpcType(589)", "Delete SingleVariableDeclaration(590)", "Delete SimpleName: SEND(591)", "Delete SimpleType: SEND(592)", "Delete SimpleName: protobufBody(593)", "Delete SingleVariableDeclaration(594)", "Delete SimpleName: Class(595)", "Delete SimpleType: Class(596)", "Delete SimpleName: RECEIVE(597)", "Delete SimpleType: RECEIVE(598)", "Delete ParameterizedType: Class<RECEIVE>(599)", "Delete SimpleName: clazz(600)", "Delete SingleVariableDeclaration(601)", "Delete SimpleName: ByteBuf(602)", "Delete SimpleType: ByteBuf(603)", "Delete SimpleName: dataBodies(604)", "Delete SingleVariableDeclaration(605)", "Delete SimpleName: send(606)", "Delete SimpleName: connection(607)", "Delete SimpleName: rpcType(608)", "Delete SimpleName: protobufBody(609)", "Delete SimpleName: clazz(610)", "Delete SimpleName: dataBodies(611)", "Delete SuperMethodInvocation(612)", "Delete ReturnStatement(613)", "Delete Block(614)", "Delete MethodDeclaration(615)", "Delete SimpleName: Override(616)", "Delete MarkerAnnotation(617)", "Delete SimpleName: SEND(619)", "Delete SimpleName: MessageLite(620)", "Delete SimpleType: MessageLite(621)", "Delete TypeParameter(622)", "Delete SimpleName: RECEIVE(623)", "Delete SimpleName: MessageLite(624)", "Delete SimpleType: MessageLite(625)", "Delete TypeParameter(626)", "Delete SimpleName: RpcOutcomeListener(629)", "Delete SimpleType: RpcOutcomeListener(630)", "Delete SimpleName: RECEIVE(631)", "Delete SimpleType: RECEIVE(632)", "Delete ParameterizedType: RpcOutcomeListener<RECEIVE>(633)", "Delete SimpleName: listener(634)", "Delete SingleVariableDeclaration(635)", "Delete SimpleName: T(640)", "Delete SimpleType: T(641)", "Delete SimpleName: rpcType(642)", "Delete SingleVariableDeclaration(643)", "Delete SimpleName: SEND(644)", "Delete SimpleType: SEND(645)", "Delete SimpleName: protobufBody(646)", "Delete SingleVariableDeclaration(647)", "Delete SimpleName: Class(648)", "Delete SimpleType: Class(649)", "Delete SimpleType: RECEIVE(651)", "Delete ParameterizedType: Class<RECEIVE>(652)", "Delete SimpleName: ByteBuf(655)", "Delete SimpleType: ByteBuf(656)", "Delete SimpleName: dataBodies(657)", "Delete SingleVariableDeclaration(658)", "Delete SimpleName: send(659)", "Delete SimpleName: listener(660)", "Delete SimpleName: connection(661)", "Delete SimpleName: rpcType(662)", "Delete SimpleName: protobufBody(663)", "Delete SimpleName: clazz(664)", "Delete SimpleName: dataBodies(665)", "Delete SuperMethodInvocation(666)"]}}, {"ReconnectingConnection_cluster": {"actions": [{"root": "UPDATE from CONNECTION_TYPE to C", "operations": ["UPD SimpleType: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleType: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleType: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleName: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleType: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleType: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleName: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleType: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleName: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleType: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleName: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleName: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleType: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleName: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleName: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleName: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleType: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleName: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleName: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleType: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleName: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleName: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleName: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleType: CONNECTION_TYPE from CONNECTION_TYPE to C", "UPD SimpleType: CONNECTION_TYPE from CONNECTION_TYPE to C"]}, {"root": "UPDATE from RemoteConnection to ClientConnection", "operations": ["UPD SimpleType: RemoteConnection from RemoteConnection to ClientConnection", "UPD SimpleName: RemoteConnection from RemoteConnection to ClientConnection"]}, {"root": "UPDATE from OUTBOUND_HANDSHAKE to HS", "operations": ["UPD SimpleType: OUTBOUND_HANDSHAKE from OUTBOUND_HANDSHAKE to HS", "UPD SimpleName: OUTBOUND_HANDSHAKE from OUTBOUND_HANDSHAKE to HS", "UPD SimpleType: OUTBOUND_HANDSHAKE from OUTBOUND_HANDSHAKE to HS", "UPD SimpleType: OUTBOUND_HANDSHAKE from OUTBOUND_HANDSHAKE to HS", "UPD SimpleName: OUTBOUND_HANDSHAKE from OUTBOUND_HANDSHAKE to HS", "UPD SimpleType: CONNECTION_TYPE from CONNECTION_TYPE to HS", "UPD SimpleName: OUTBOUND_HANDSHAKE from OUTBOUND_HANDSHAKE to HS", "UPD SimpleName: OUTBOUND_HANDSHAKE from OUTBOUND_HANDSHAKE to HS", "UPD SimpleName: CONNECTION_TYPE from CONNECTION_TYPE to HS"]}, {"root": "UPDATE from AtomicReference<CONNECTION_TYPE> to AtomicReference<C>", "operations": ["UPD ParameterizedType: AtomicReference<CONNECTION_TYPE> from AtomicReference<CONNECTION_TYPE> to AtomicReference<C>", "UPD ParameterizedType: AtomicReference<CONNECTION_TYPE> from AtomicReference<CONNECTION_TYPE> to AtomicReference<C>"]}, {"root": "UPDATE from BasicClient<?,CONNECTION_TYPE,OUTBOUND_HANDSHAKE,?> to BasicClient<?,C,HS,?>", "operations": ["UPD ParameterizedType: BasicClient<?,CONNECTION_TYPE,OUTBOUND_HANDSHAKE,?> from BasicClient<?,CONNECTION_TYPE,OUTBOUND_HANDSHAKE,?> to BasicClient<?,C,HS,?>", "UPD ParameterizedType: BasicClient<?,CONNECTION_TYPE,OUTBOUND_HANDSHAKE,?> from BasicClient<?,CONNECTION_TYPE,OUTBOUND_HANDSHAKE,?> to BasicClient<?,C,HS,?>"]}, {"root": "UPDATE from AbstractFuture<CONNECTION_TYPE> to AbstractFuture<C>", "operations": ["UPD ParameterizedType: AbstractFuture<CONNECTION_TYPE> from AbstractFuture<CONNECTION_TYPE> to AbstractFuture<C>"]}, {"root": "UPDATE from RpcConnectionHandler<CONNECTION_TYPE> to RpcConnectionHandler<C>", "operations": ["UPD ParameterizedType: RpcConnectionHandler<CONNECTION_TYPE> from RpcConnectionHandler<CONNECTION_TYPE> to RpcConnectionHandler<C>"]}, {"root": "UPDATE from R to T", "operations": ["UPD SimpleName: R from R to T", "UPD SimpleType: R from R to T", "UPD SimpleName: R from R to T"]}, {"root": "UPDATE from C to R", "operations": ["UPD SimpleName: C from C to R"]}, {"root": "UPDATE from RpcCommand<R,CONNECTION_TYPE> to RpcCommand<T,C>", "operations": ["UPD ParameterizedType: RpcCommand<R,CONNECTION_TYPE> from RpcCommand<R,CONNECTION_TYPE> to RpcCommand<T,C>"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: R to SingleVariableDeclaration at 0"]}, {"root": "MOVE from ParameterizedType: RpcConnectionHandler<CONNECTION_TYPE>", "operations": ["MOV SimpleType: C to ParameterizedType: RpcConnectionHandler<CONNECTION_TYPE> at 1"]}, {"root": "UPDATE from RpcCommand<R,CONNECTION_TYPE> to RpcCommand<R,C>", "operations": ["UPD ParameterizedType: RpcCommand<R,CONNECTION_TYPE> from RpcCommand<R,CONNECTION_TYPE> to RpcCommand<R,C>"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV ParameterizedType: RpcCommand<R,CONNECTION_TYPE> to FieldDeclaration at 1"]}, {"root": "INS SimpleType: T to ParameterizedType: RpcCommand<R,CONNECTION_TYPE> at 1", "operations": ["INS SimpleName: T to SimpleType: T at 0", "INS SimpleType: T to ParameterizedType: RpcCommand<R,CONNECTION_TYPE> at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: C to VariableDeclarationStatement at 0"]}, {"root": "MOVE from ParameterizedType: RpcCommand<R,CONNECTION_TYPE>", "operations": ["MOV SimpleType: C to ParameterizedType: RpcCommand<R,CONNECTION_TYPE> at 2", "MOV SimpleType: R to ParameterizedType: RpcCommand<R,C> at 1"]}, {"root": "INS ParameterizedType: RpcCommand<R,C> to SingleVariableDeclaration at 0", "operations": ["INS ParameterizedType: RpcCommand<R,C> to SingleVariableDeclaration at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: C to ParameterizedType: RpcCommand<R,C> at 2", "INS SimpleName: RpcCommand to SimpleType: RpcCommand at 0", "INS SimpleType: RpcCommand to ParameterizedType: RpcCommand<R,C> at 0"]}, {"root": "UPDATE from org.apache.drill.exec.rpc.RpcConnectionHandler.FailureType to FailureType", "operations": ["UPD SimpleType: org.apache.drill.exec.rpc.RpcConnectionHandler.FailureType from org.apache.drill.exec.rpc.RpcConnectionHandler.FailureType to FailureType"]}, {"root": "INS SimpleName: FailureType to SimpleType: org.apache.drill.exec.rpc.RpcConnectionHandler.FailureType at 0", "operations": ["INS SimpleName: FailureType to SimpleType: org.apache.drill.exec.rpc.RpcConnectionHandler.FailureType at 0"]}, {"root": "UPDATE from ConnectionListeningFuture<R,C> to ConnectionListeningFuture<T>", "operations": ["UPD ParameterizedType: ConnectionListeningFuture<R,C> from ConnectionListeningFuture<R,C> to ConnectionListeningFuture<T>"]}, {"root": "MOVE from ParameterizedType: BasicClient<?,CONNECTION_TYPE,OUTBOUND_HANDSHAKE,?>", "operations": ["MOV SimpleType: C to ParameterizedType: BasicClient<?,CONNECTION_TYPE,OUTBOUND_HANDSHAKE,?> at 2"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: C to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from ConnectionListeningFuture<R,C> to ConnectionListeningFuture<>", "operations": ["UPD ParameterizedType: ConnectionListeningFuture<R,C> from ConnectionListeningFuture<R,C> to ConnectionListeningFuture<>"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: client to MethodInvocation at 0", "INS SimpleName: getInitialCommand to MethodInvocation at 1", "INS SimpleName: cmd to MethodInvocation at 2"]}, {"root": "DEL SimpleType: CONNECTION_TYPE", "operations": ["DEL SimpleType: CONNECTION_TYPE", "DEL SimpleName: CONNECTION_TYPE"]}, {"root": "DEL SimpleType: OUTBOUND_HANDSHAKE", "operations": ["DEL SimpleName: OUTBOUND_HANDSHAKE", "DEL SimpleType: OUTBOUND_HANDSHAKE"]}, {"root": "DEL SimpleName: cmd", "operations": ["DEL SimpleName: cmd"]}, {"root": "DEL TypeParameter", "operations": ["DEL SimpleName: C", "DEL TypeParameter"]}, {"root": "DEL SimpleType: CONNECTION_TYPE", "operations": ["DEL SimpleName: CONNECTION_TYPE", "DEL SimpleType: CONNECTION_TYPE"]}, {"root": "DEL SimpleType: CONNECTION_TYPE", "operations": ["DEL SimpleName: CONNECTION_TYPE", "DEL SimpleType: CONNECTION_TYPE"]}, {"root": "DEL SimpleType: CONNECTION_TYPE", "operations": ["DEL SimpleType: CONNECTION_TYPE", "DEL SimpleName: CONNECTION_TYPE"]}, {"root": "DEL QualifiedName: org.apache.drill.exec.rpc.RpcConnectionHandler.FailureType", "operations": ["DEL QualifiedName: org.apache.drill.exec.rpc.RpcConnectionHandler.FailureType"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL PrimitiveType: void", "DEL Assignment: =", "DEL ExpressionStatement", "DEL TextElement: Decorate a connection creation so that we capture a success and keep it available for future requests. If we have", "DEL SimpleName: connection", "DEL MethodInvocation", "DEL MarkerAnnotation", "DEL SimpleName: t", "DEL ThisExpression", "DEL SimpleName: RpcConnectionHandler", "DEL Block", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL BreakStatement", "DEL SimpleType: CONNECTION_TYPE", "DEL SimpleName: connection", "DEL TypeDeclaration: class", "DEL Assignment: =", "DEL SimpleName: connectionHolder", "DEL Block", "DEL SimpleName: debug", "DEL SimpleName: getChannel", "DEL Modifier: final", "DEL SimpleName: Override", "DEL SimpleName: CONNECTION_TYPE", "DEL SimpleName: Override", "DEL SimpleName: type", "DEL SimpleType: RpcConnectionHandler", "DEL SimpleType: CONNECTION_TYPE", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL BreakStatement", "DEL SimpleType: RpcConnectionHandler", "DEL SimpleName: connectionSucceeded", "DEL ExpressionStatement", "DEL SimpleName: RpcConnectionHandler", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: CONNECTION_TYPE", "DEL SimpleName: connection", "DEL InfixExpression: !=", "DEL SimpleName: incoming", "DEL ParameterizedType: RpcConnectionHandler<CONNECTION_TYPE>", "DEL PrimitiveType: boolean", "DEL SimpleName: delegate", "DEL InfixExpression: ==", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleType: RpcConnectionHandler", "DEL SimpleName: t", "DEL ExpressionStatement", "DEL Modifier: public", "DEL SimpleName: ConnectionListeningDecorator", "DEL PrimitiveType: void", "DEL SimpleName: connectionFailed", "DEL IfStatement", "DEL IfStatement", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleName: delegate", "DEL SimpleName: delegate", "DEL SingleVariableDeclaration", "DEL SimpleName: connectionSucceeded", "DEL SimpleName: ConnectionListeningDecorator", "DEL TagElement", "DEL SimpleName: delegate", "DEL SimpleName: incoming", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: setted", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: connectionFailed", "DEL SimpleName: RpcConnectionHandler", "DEL Modifier: private", "DEL SimpleName: Throwable", "DEL NullLiteral", "DEL ParameterizedType: RpcConnectionHandler<CONNECTION_TYPE>", "DEL TextElement: raced and another is already available... we return that one and close things down on this one.", "DEL Modifier: public", "DEL MarkerAnnotation", "DEL VariableDeclarationFragment", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: type", "DEL Javadoc", "DEL StringLiteral: \"Closing incoming connection because a connection was already set.\"", "DEL IfStatement", "DEL ExpressionStatement", "DEL FieldAccess", "DEL Assignment: =", "DEL SimpleName: incoming", "DEL SimpleName: CONNECTION_TYPE", "DEL MethodInvocation", "DEL SimpleName: connection", "DEL SimpleType: CONNECTION_TYPE", "DEL SimpleType: CONNECTION_TYPE", "DEL MethodInvocation", "DEL SimpleName: get", "DEL WhileStatement", "DEL SimpleName: connectionHolder", "DEL SimpleName: connectionSucceeded", "DEL SimpleName: logger", "DEL SimpleName: incoming", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: setted", "DEL VariableDeclarationStatement", "DEL SimpleName: connection", "DEL SimpleType: CONNECTION_TYPE", "DEL SimpleName: connection", "DEL SimpleName: compareAndSet", "DEL Modifier: public", "DEL SimpleName: CONNECTION_TYPE", "DEL SimpleName: delegate", "DEL ExpressionStatement", "DEL QualifiedName: org.apache.drill.exec.rpc.RpcConnectionHandler.FailureType", "DEL BooleanLiteral: true", "DEL SimpleName: get", "DEL SimpleName: close", "DEL SimpleName: connectionHolder", "DEL SimpleType: Throwable", "DEL MethodDeclaration", "DEL SimpleName: connection", "DEL ParameterizedType: RpcConnectionHandler<CONNECTION_TYPE>", "DEL SimpleName: delegate", "DEL ExpressionStatement", "DEL SimpleName: incoming", "DEL SimpleType: org.apache.drill.exec.rpc.RpcConnectionHandler.FailureType", "DEL SimpleName: delegate", "DEL NullLiteral", "DEL Block", "DEL FieldDeclaration", "DEL Block", "DEL SimpleName: CONNECTION_TYPE", "DEL Modifier: private"]}]}}, {"ReconnectingConnection_diff": {"operations": ["Update SimpleName: CONNECTION_TYPE(43) to C", "Update SimpleType: RemoteConnection(45) to ClientConnection", "Update SimpleName: OUTBOUND_HANDSHAKE(47) to HS", "Update ParameterizedType: AtomicReference<CONNECTION_TYPE>(72) to AtomicReference<C>", "Update SimpleType: OUTBOUND_HANDSHAKE(98) to HS", "Update ParameterizedType: BasicClient<?,CONNECTION_TYPE,OUTBOUND_HANDSHAKE,?>(157) to BasicClient<?,C,HS,?>", "Update ParameterizedType: AbstractFuture<CONNECTION_TYPE>(298) to AbstractFuture<C>", "Update ParameterizedType: RpcConnectionHandler<CONNECTION_TYPE>(303) to RpcConnectionHandler<C>", "Update SimpleName: RemoteConnection(44) to ClientConnection", "Update SimpleType: CONNECTION_TYPE(71) to C", "Update SimpleName: OUTBOUND_HANDSHAKE(97) to HS", "Update SimpleType: OUTBOUND_HANDSHAKE(105) to HS", "Update SimpleType: CONNECTION_TYPE(153) to C", "Update SimpleType: OUTBOUND_HANDSHAKE(155) to HS", "Update SimpleName: R(161) to T", "Update SimpleName: C(165) to R", "Update ParameterizedType: RpcCommand<R,CONNECTION_TYPE>(172) to RpcCommand<T,C>", "Move SimpleType: R(169) into SingleVariableDeclaration(179) at 0", "Update SimpleType: CONNECTION_TYPE(297) to C", "Move SimpleType: C(306) into ParameterizedType: RpcConnectionHandler<C>(291) at 1", "Update ParameterizedType: RpcCommand<R,CONNECTION_TYPE>(292) to RpcCommand<R,C>", "Move ParameterizedType: RpcCommand<R,CONNECTION_TYPE>(292) into FieldDeclaration(302) at 1", "Update SimpleType: CONNECTION_TYPE(588) to C", "Update SimpleType: CONNECTION_TYPE(668) to C", "Update SimpleName: CONNECTION_TYPE(70) to C", "Update ParameterizedType: AtomicReference<CONNECTION_TYPE>(78) to AtomicReference<C>", "Update SimpleName: OUTBOUND_HANDSHAKE(104) to HS", "Update SimpleName: CONNECTION_TYPE(152) to C", "Update SimpleName: OUTBOUND_HANDSHAKE(154) to HS", "Insert SimpleType: T(169) into ParameterizedType: RpcCommand<T,C>(172) at 1", "Update SimpleType: CONNECTION_TYPE(171) to C", "Move SimpleType: C(177) into VariableDeclarationStatement(187) at 0", "Update SimpleName: CONNECTION_TYPE(296) to C", "Move SimpleType: C(254) into ParameterizedType: RpcCommand<R,C>(299) at 2", "Insert ParameterizedType: RpcCommand<R,C>(311) into SingleVariableDeclaration(313) at 0", "Update SimpleType: org.apache.drill.exec.rpc.RpcConnectionHandler.FailureType(453) to FailureType", "Update SimpleType: CONNECTION_TYPE(478) to C", "Update SimpleType: CONNECTION_TYPE(557) to C", "Update SimpleName: CONNECTION_TYPE(587) to C", "Update SimpleType: CONNECTION_TYPE(604) to C", "Update SimpleName: CONNECTION_TYPE(667) to C", "Update SimpleType: CONNECTION_TYPE(687) to C", "Update SimpleType: CONNECTION_TYPE(77) to C", "Insert SimpleName: T(168) into SimpleType: T(169) at 0", "Update SimpleName: CONNECTION_TYPE(170) to C", "Insert SimpleType: RpcCommand(306) into ParameterizedType: RpcCommand<R,C>(311) at 0", "Move SimpleType: R(252) into ParameterizedType: RpcCommand<R,C>(311) at 1", "Insert SimpleType: C(310) into ParameterizedType: RpcCommand<R,C>(311) at 2", "Insert SimpleName: FailureType(450) into SimpleType: FailureType(451) at 0", "Update SimpleName: CONNECTION_TYPE(477) to C", "Update SimpleType: CONNECTION_TYPE(482) to C", "Update SimpleName: CONNECTION_TYPE(556) to C", "Update SimpleName: CONNECTION_TYPE(603) to C", "Update SimpleName: CONNECTION_TYPE(686) to C", "Update SimpleName: CONNECTION_TYPE(76) to C", "Insert SimpleName: RpcCommand(305) into SimpleType: RpcCommand(306) at 0", "Insert SimpleName: C(309) into SimpleType: C(310) at 0", "Update SimpleName: CONNECTION_TYPE(481) to C", "Update ParameterizedType: BasicClient<?,CONNECTION_TYPE,OUTBOUND_HANDSHAKE,?>(235) to BasicClient<?,C,HS,?>", "Update ParameterizedType: ConnectionListeningFuture<R,C>(247) to ConnectionListeningFuture<T>", "Move SimpleType: C(246) into ParameterizedType: BasicClient<?,C,HS,?>(235) at 2", "Update SimpleType: CONNECTION_TYPE(231) to HS", "Update SimpleType: R(244) to T", "Move SimpleType: C(313) into VariableDeclarationStatement(356) at 0", "Update SimpleName: CONNECTION_TYPE(230) to HS", "Update SimpleName: R(243) to T", "Update ParameterizedType: ConnectionListeningFuture<R,C>(255) to ConnectionListeningFuture<>", "Insert MethodInvocation(253) into ClassInstanceCreation(254) at 1", "Insert SimpleName: client(250) into MethodInvocation(253) at 0", "Insert SimpleName: getInitialCommand(251) into MethodInvocation(253) at 1", "Insert SimpleName: cmd(252) into MethodInvocation(253) at 2", "Delete SimpleName: CONNECTION_TYPE(180)", "Delete SimpleType: CONNECTION_TYPE(181)", "Delete SimpleName: OUTBOUND_HANDSHAKE(232)", "Delete SimpleType: OUTBOUND_HANDSHAKE(233)", "Delete SimpleName: cmd(256)", "Delete SimpleName: C(285)", "Delete TypeParameter(293)", "Delete SimpleName: CONNECTION_TYPE(301)", "Delete SimpleType: CONNECTION_TYPE(302)", "Delete SimpleName: CONNECTION_TYPE(290)", "Delete SimpleType: CONNECTION_TYPE(291)", "Delete SimpleName: CONNECTION_TYPE(349)", "Delete SimpleType: CONNECTION_TYPE(350)", "Delete QualifiedName: org.apache.drill.exec.rpc.RpcConnectionHandler.FailureType(452)", "Delete TextElement: Decorate a connection creation so that we capture a success and keep it available for future requests. If we have(708)", "Delete TextElement: raced and another is already available... we return that one and close things down on this one.(709)", "Delete TagElement(710)", "Delete Javadoc(711)", "Delete Modifier: private(712)", "Delete SimpleName: ConnectionListeningDecorator(713)", "Delete SimpleName: RpcConnectionHandler(714)", "Delete SimpleType: RpcConnectionHandler(715)", "Delete SimpleName: CONNECTION_TYPE(716)", "Delete SimpleType: CONNECTION_TYPE(717)", "Delete ParameterizedType: RpcConnectionHandler<CONNECTION_TYPE>(718)", "Delete Modifier: private(719)", "Delete Modifier: final(720)", "Delete SimpleName: RpcConnectionHandler(721)", "Delete SimpleType: RpcConnectionHandler(722)", "Delete SimpleName: CONNECTION_TYPE(723)", "Delete SimpleType: CONNECTION_TYPE(724)", "Delete ParameterizedType: RpcConnectionHandler<CONNECTION_TYPE>(725)", "Delete SimpleName: delegate(726)", "Delete VariableDeclarationFragment(727)", "Delete FieldDeclaration(728)", "Delete Modifier: public(729)", "Delete SimpleName: ConnectionListeningDecorator(730)", "Delete SimpleName: RpcConnectionHandler(731)", "Delete SimpleType: RpcConnectionHandler(732)", "Delete SimpleName: CONNECTION_TYPE(733)", "Delete SimpleType: CONNECTION_TYPE(734)", "Delete ParameterizedType: RpcConnectionHandler<CONNECTION_TYPE>(735)", "Delete SimpleName: delegate(736)", "Delete SingleVariableDeclaration(737)", "Delete ThisExpression(738)", "Delete SimpleName: delegate(739)", "Delete FieldAccess(740)", "Delete SimpleName: delegate(741)", "Delete Assignment: =(742)", "Delete ExpressionStatement(743)", "Delete Block(744)", "Delete MethodDeclaration(745)", "Delete SimpleName: Override(746)", "Delete MarkerAnnotation(747)", "Delete Modifier: public(748)", "Delete PrimitiveType: void(749)", "Delete SimpleName: connectionSucceeded(750)", "Delete SimpleName: CONNECTION_TYPE(751)", "Delete SimpleType: CONNECTION_TYPE(752)", "Delete SimpleName: incoming(753)", "Delete SingleVariableDeclaration(754)", "Delete SimpleName: CONNECTION_TYPE(755)", "Delete SimpleType: CONNECTION_TYPE(756)", "Delete SimpleName: connection(757)", "Delete SimpleName: connectionHolder(758)", "Delete SimpleName: get(759)", "Delete MethodInvocation(760)", "Delete VariableDeclarationFragment(761)", "Delete VariableDeclarationStatement(762)", "Delete BooleanLiteral: true(763)", "Delete PrimitiveType: boolean(764)", "Delete SimpleName: setted(765)", "Delete SimpleName: connectionHolder(766)", "Delete SimpleName: compareAndSet(767)", "Delete NullLiteral(768)", "Delete SimpleName: incoming(769)", "Delete MethodInvocation(770)", "Delete VariableDeclarationFragment(771)", "Delete VariableDeclarationStatement(772)", "Delete SimpleName: setted(773)", "Delete SimpleName: connection(774)", "Delete SimpleName: incoming(775)", "Delete Assignment: =(776)", "Delete ExpressionStatement(777)", "Delete BreakStatement(778)", "Delete Block(779)", "Delete IfStatement(780)", "Delete SimpleName: connection(781)", "Delete SimpleName: connectionHolder(782)", "Delete SimpleName: get(783)", "Delete MethodInvocation(784)", "Delete Assignment: =(785)", "Delete ExpressionStatement(786)", "Delete SimpleName: connection(787)", "Delete NullLiteral(788)", "Delete InfixExpression: !=(789)", "Delete BreakStatement(790)", "Delete Block(791)", "Delete IfStatement(792)", "Delete Block(793)", "Delete WhileStatement(794)", "Delete SimpleName: connection(795)", "Delete SimpleName: incoming(796)", "Delete InfixExpression: ==(797)", "Delete SimpleName: delegate(798)", "Delete SimpleName: connectionSucceeded(799)", "Delete SimpleName: connection(800)", "Delete MethodInvocation(801)", "Delete ExpressionStatement(802)", "Delete Block(803)", "Delete SimpleName: logger(804)", "Delete SimpleName: debug(805)", "Delete StringLiteral: \"Closing incoming connection because a connection was already set.\"(806)", "Delete MethodInvocation(807)", "Delete ExpressionStatement(808)", "Delete SimpleName: incoming(809)", "Delete SimpleName: getChannel(810)", "Delete MethodInvocation(811)", "Delete SimpleName: close(812)", "Delete MethodInvocation(813)", "Delete ExpressionStatement(814)", "Delete SimpleName: delegate(815)", "Delete SimpleName: connectionSucceeded(816)", "Delete SimpleName: connection(817)", "Delete MethodInvocation(818)", "Delete ExpressionStatement(819)", "Delete Block(820)", "Delete IfStatement(821)", "Delete Block(822)", "Delete MethodDeclaration(823)", "Delete SimpleName: Override(824)", "Delete MarkerAnnotation(825)", "Delete Modifier: public(826)", "Delete PrimitiveType: void(827)", "Delete SimpleName: connectionFailed(828)", "Delete QualifiedName: org.apache.drill.exec.rpc.RpcConnectionHandler.FailureType(829)", "Delete SimpleType: org.apache.drill.exec.rpc.RpcConnectionHandler.FailureType(830)", "Delete SimpleName: type(831)", "Delete SingleVariableDeclaration(832)", "Delete SimpleName: Throwable(833)", "Delete SimpleType: Throwable(834)", "Delete SimpleName: t(835)", "Delete SingleVariableDeclaration(836)", "Delete SimpleName: delegate(837)", "Delete SimpleName: connectionFailed(838)", "Delete SimpleName: type(839)", "Delete SimpleName: t(840)", "Delete MethodInvocation(841)", "Delete ExpressionStatement(842)", "Delete Block(843)", "Delete MethodDeclaration(844)", "Delete TypeDeclaration: class(845)"]}}, {"RemoteConnection_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 8"]}, {"root": "UPDATE from class to interface", "operations": ["UPD TypeDeclaration: class from class to interface"]}, {"root": "UPDATE from io.netty.channel.socket.SocketChannel to java.net.SocketAddress", "operations": ["UPD QualifiedName: io.netty.channel.socket.SocketChannel from io.netty.channel.socket.SocketChannel to java.net.SocketAddress"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: String to MethodDeclaration at 0"]}, {"root": "INS SimpleType: SocketAddress to MethodDeclaration at 0", "operations": ["INS SimpleName: SocketAddress to SimpleType: SocketAddress at 0", "INS SimpleType: SocketAddress to MethodDeclaration at 0"]}, {"root": "INS SimpleName: getRemoteAddress to MethodDeclaration at 1", "operations": ["INS SimpleName: getRemoteAddress to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: io.netty.channel.ChannelHandlerContext"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: io.netty.channel.ChannelInboundHandlerAdapter", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.concurrent.ExecutionException"]}, {"root": "DEL Modifier: abstract", "operations": ["DEL Modifier: abstract"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: RemoteConnection", "DEL SimpleName: getLogger", "DEL FieldDeclaration", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL TypeLiteral", "DEL MethodInvocation", "DEL SimpleType: org.slf4j.Logger", "DEL SimpleName: logger", "DEL Modifier: static", "DEL QualifiedName: org.slf4j.LoggerFactory", "DEL SimpleType: RemoteConnection", "DEL QualifiedName: org.slf4j.Logger"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: Channel", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL SimpleName: channel", "DEL Modifier: final", "DEL SimpleType: Channel"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: WriteManager", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL Modifier: private", "DEL SimpleName: WriteManager", "DEL SimpleName: writeManager"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: RequestIdMap", "DEL SimpleType: RequestIdMap", "DEL Modifier: final", "DEL SimpleName: requestIdMap", "DEL SimpleType: RequestIdMap", "DEL ClassInstanceCreation", "DEL Modifier: private", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: RequestIdMap"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL SimpleName: clientName", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL Modifier: final", "DEL SimpleName: String", "DEL SimpleType: String"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: name", "DEL Modifier: private", "DEL SimpleName: String", "DEL FieldDeclaration", "DEL SimpleType: String"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL Block", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: channel", "DEL SimpleName: eventLoop", "DEL SimpleName: inEventLoop"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: clientName", "DEL SimpleType: WriteManager", "DEL SimpleName: channel", "DEL Modifier: public", "DEL Block", "DEL SimpleType: BackPressureHandler", "DEL SimpleName: pipeline", "DEL SimpleName: name", "DEL SimpleName: RemoteConnection", "DEL ExpressionStatement", "DEL FieldAccess", "DEL SimpleName: channel", "DEL ClassInstanceCreation", "DEL SimpleName: name", "DEL ThisExpression", "DEL SimpleName: BackPressureHandler", "DEL SingleVariableDeclaration", "DEL SimpleName: addLast", "DEL Assignment: =", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL SimpleName: channel", "DEL SimpleName: channel", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL ThisExpression", "DEL ExpressionStatement", "DEL FieldAccess", "DEL SuperConstructorInvocation", "DEL FieldAccess", "DEL MethodInvocation", "DEL SimpleName: writeManager", "DEL ThisExpression", "DEL SimpleName: WriteManager", "DEL SimpleType: SocketChannel", "DEL Assignment: =", "DEL SimpleName: SocketChannel", "DEL ExpressionStatement", "DEL ExpressionStatement"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleType: String", "DEL SimpleName: String"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: localAddress", "DEL SimpleName: name", "DEL ExpressionStatement", "DEL Assignment: =", "DEL Block", "DEL SimpleName: remoteAddress", "DEL SimpleName: name", "DEL ReturnStatement", "DEL IfStatement", "DEL NullLiteral", "DEL SimpleName: channel", "DEL InfixExpression: ==", "DEL SimpleName: clientName", "DEL MethodInvocation", "DEL StringLiteral: \"%s <--> %s (%s)\"", "DEL Block", "DEL SimpleName: String", "DEL SimpleName: format", "DEL MethodInvocation", "DEL SimpleName: channel", "DEL SimpleName: name", "DEL MethodInvocation"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL Modifier: abstract", "operations": ["DEL Modifier: abstract"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL Block", "operations": ["DEL ReturnStatement", "DEL SimpleName: channel", "DEL Block"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: e", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: InterruptedException", "DEL Block", "DEL Block", "DEL SimpleName: Thread", "DEL SimpleName: listener", "DEL TryStatement", "DEL ReturnStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: currentThread", "DEL BooleanLiteral: false", "DEL SimpleName: waitForWritable", "DEL SimpleName: interrupt", "DEL CatchClause", "DEL BooleanLiteral: true", "DEL ReturnStatement", "DEL SimpleName: interrupted", "DEL SingleVariableDeclaration", "DEL Modifier: final", "DEL SimpleType: InterruptedException", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: writeManager", "DEL SimpleName: e"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: setAutoRead", "DEL MethodDeclaration", "DEL PrimitiveType: boolean", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: enableAutoRead", "DEL Modifier: public", "DEL PrimitiveType: void", "DEL SimpleName: channel", "DEL SimpleName: setAutoRead", "DEL SingleVariableDeclaration", "DEL SimpleName: enableAutoRead", "DEL ExpressionStatement", "DEL SimpleName: config", "DEL MethodInvocation"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL Block", "operations": ["DEL ParenthesizedExpression", "DEL InfixExpression: !=", "DEL InfixExpression: &&", "DEL NullLiteral", "DEL SimpleName: channel", "DEL SimpleName: channel", "DEL MethodInvocation", "DEL SimpleName: isActive", "DEL Block", "DEL ReturnStatement"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL MethodDeclaration", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL Block", "DEL Block", "DEL SimpleName: disabled", "DEL SimpleName: isWritable", "DEL SimpleName: closeBarrier", "DEL SimpleName: waitForWritable", "DEL PrimitiveType: void", "DEL PrimitiveType: void", "DEL SimpleName: barrier", "DEL TextElement: be sent. It controls whether or not to block a sender if we have tcp", "DEL PrimitiveType: boolean", "DEL SimpleType: ResettableBarrier", "DEL Modifier: private", "DEL Modifier: public", "DEL MethodInvocation", "DEL Block", "DEL SingleVariableDeclaration", "DEL Modifier: private", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: barrier", "DEL SimpleName: WriteManager", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL SimpleName: isWritable", "DEL SimpleName: disabled", "DEL SimpleName: barrier", "DEL TextElement: backpressure on the receive side.", "DEL MethodInvocation", "DEL SimpleName: disabled", "DEL Modifier: final", "DEL MethodDeclaration", "DEL PrimitiveType: void", "DEL Block", "DEL SimpleName: InterruptedException", "DEL MethodDeclaration", "DEL SimpleName: setWritable", "DEL IfStatement", "DEL BooleanLiteral: true", "DEL PrimitiveType: boolean", "DEL TagElement", "DEL SimpleName: ResettableBarrier", "DEL SimpleType: ResettableBarrier", "DEL Assignment: =", "DEL SimpleName: disable", "DEL BooleanLiteral: false", "DEL SimpleName: WriteManager", "DEL ExpressionStatement", "DEL SimpleName: await", "DEL Modifier: private", "DEL Block", "DEL SimpleName: barrier", "DEL Modifier: volatile", "DEL SimpleName: openBarrier", "DEL ExpressionStatement", "DEL TypeDeclaration: class", "DEL SimpleName: ResettableBarrier", "DEL Javadoc", "DEL SimpleName: barrier", "DEL Modifier: public", "DEL PrefixExpression: !", "DEL TextElement: The write manager is responsible for controlling whether or not a write can", "DEL FieldDeclaration", "DEL SimpleName: openBarrier", "DEL SimpleType: InterruptedException", "DEL MethodInvocation", "DEL Modifier: public", "DEL IfStatement", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: ctx", "DEL SimpleType: Exception", "DEL SimpleName: channelWritabilityChanged", "DEL SimpleType: ChannelInboundHandlerAdapter", "DEL SimpleName: ctx", "DEL MethodDeclaration", "DEL PrimitiveType: void", "DEL SimpleName: writeManager", "DEL SimpleName: ChannelHandlerContext", "DEL SimpleName: fireChannelWritabilityChanged", "DEL MethodInvocation", "DEL SimpleName: isWritable", "DEL SimpleType: ChannelHandlerContext", "DEL SimpleName: Exception", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Modifier: private", "DEL SimpleName: BackPressureHandler", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: channel", "DEL Modifier: public", "DEL Block", "DEL SimpleName: ctx", "DEL SimpleName: setWritable", "DEL TypeDeclaration: class", "DEL SimpleName: ChannelInboundHandlerAdapter"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: creation. CoordinationId's are recycled so they will show up once we run through all 4B of them.", "DEL SimpleName: coordinationId", "DEL TextElement:  An RpcOutcome associated with the provided coordinationId.", "DEL SimpleName: rpcType", "DEL TextElement:  The rpc type associated with the coordination.", "DEL TagElement: @param", "DEL TextElement:  The coordination id that was returned with the listener was created.", "DEL TagElement: @return", "DEL Javadoc", "DEL SimpleName: clazz", "DEL TextElement: For incoming messages, remove the outcome listener and return it. Can only be done once per coordinationId", "DEL TagElement: @param", "DEL TextElement:  The class that is expected in response.", "DEL TagElement", "DEL TagElement: @param"]}, {"root": "DEL Block", "operations": ["DEL ReturnStatement", "DEL SimpleName: rpcType", "DEL Block", "DEL SimpleName: requestIdMap", "DEL MethodInvocation", "DEL SimpleName: coordinationId", "DEL SimpleName: clazz", "DEL SimpleName: getAndRemoveRpcOutcome"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement:  The new listener. Also carries the coordination id for use in the rpc message.", "DEL TagElement: @param", "DEL TagElement: @return", "DEL SimpleName: handler", "DEL TagElement: @param", "DEL TextElement: Create a new rpc listener that will be notified when the response is returned.", "DEL TextElement:  The outcome handler to be notified when the response arrives.", "DEL TextElement:  The Class associated with the response object.", "DEL Javadoc", "DEL SimpleName: clazz", "DEL TagElement"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: clazz", "DEL SimpleName: requestIdMap", "DEL ThisExpression", "DEL SimpleName: handler", "DEL Block", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: createNewRpcListener"]}, {"root": "DEL Javadoc", "operations": ["DEL SimpleName: failure", "DEL SimpleName: coordinationId", "DEL TextElement:  The id that failed.", "DEL TextElement:  The failure that occurred.", "DEL TagElement", "DEL TextElement: Inform the local outcome listener that the remote operation could not be handled.", "DEL Javadoc", "DEL TagElement: @param", "DEL TagElement: @param"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: requestIdMap", "DEL Block", "DEL SimpleName: failure", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: recordRemoteFailure", "DEL SimpleName: coordinationId"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: Called from the RpcBus's channel close handler to close all remaining", "DEL TagElement", "DEL TextElement: The exception that caused the channel to close.", "DEL Javadoc", "DEL TextElement: back-pressure items are also unblocked so they can be thrown away.", "DEL SimpleName: ex", "DEL TextElement: resources associated with this connection. Ensures that any pending", "DEL TagElement: @param"]}, {"root": "DEL Block", "operations": ["DEL BooleanLiteral: true", "DEL SimpleName: ex", "DEL SimpleName: writeManager", "DEL ExpressionStatement", "DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: requestIdMap", "DEL SimpleName: channelClosed", "DEL ExpressionStatement", "DEL SimpleName: writeManager", "DEL SimpleName: disable", "DEL SimpleName: setWritable", "DEL MethodInvocation"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: Closes all resources connected with current session.", "DEL TagElement", "DEL Javadoc", "DEL TextElement: By default has no implementation."]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL PrimitiveType: void", "operations": ["DEL PrimitiveType: void"]}, {"root": "DEL SimpleName: closeSession", "operations": ["DEL SimpleName: closeSession"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL Javadoc", "operations": ["DEL Javadoc", "DEL TextElement: address.", "DEL TextElement: </li>", "DEL TextElement: to close in both the scenarios. A channel is in OPEN state when a socket is created for it before binding to an", "DEL TextElement: <li>", "DEL TextElement: <p>", "DEL TextElement: Connection consumer wants to close connection. Initiate connection close", "DEL TextElement: will be triggered which will call channelClosed() above. The latter will", "DEL TagElement", "DEL TextElement: happen in a separate thread while this method is blocking.", "DEL TextElement: For connection oriented transport protocol channel moves to ACTIVE state when a connection is established", "DEL TextElement: The check for isActive is not required here since channel can be in OPEN state without being active. We want", "DEL TextElement: remote endpoint.", "DEL TextElement: <li>", "DEL TextElement: </p>", "DEL TextElement: For connectionless transport protocol a sender can send data as soon as channel moves to OPEN state.", "DEL TextElement: using this channel. We need to have channel in ACTIVE state NOT OPEN before we can send any message to", "DEL TextElement: </li>", "DEL TextElement: and complete. This is a blocking call that ensures that the connection is", "DEL TextElement: closed before returning. As part of this call, the channel close handler"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL SimpleName: Override", "DEL MarkerAnnotation"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: warn", "DEL SimpleName: ExecutionException", "DEL TryStatement", "DEL SimpleType: InterruptedException", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: close", "DEL SimpleName: Thread", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleName: get", "DEL SimpleName: channel", "DEL SimpleName: InterruptedException", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL UnionType: InterruptedException|ExecutionException", "DEL SimpleType: ExecutionException", "DEL MethodInvocation", "DEL Block", "DEL ExpressionStatement", "DEL StringLiteral: \"Caught exception while closing channel.\"", "DEL ExpressionStatement", "DEL Block", "DEL Block", "DEL SimpleName: e", "DEL SimpleName: logger", "DEL SimpleName: interrupt", "DEL CatchClause", "DEL SimpleName: currentThread", "DEL MethodInvocation", "DEL SimpleName: e"]}]}}, {"RemoteConnection_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(112) at 8", "Update TypeDeclaration: class(550) to interface", "Update QualifiedName: io.netty.channel.socket.SocketChannel(8) to java.net.SocketAddress", "Move SimpleType: String(91) into MethodDeclaration(22) at 0", "Insert SimpleType: SocketAddress(103) into MethodDeclaration(105) at 0", "Insert SimpleName: getRemoteAddress(104) into MethodDeclaration(105) at 1", "Move MarkerAnnotation(318) into MethodDeclaration(110) at 0", "Insert SimpleName: SocketAddress(102) into SimpleType: SocketAddress(103) at 0", "Delete QualifiedName: io.netty.channel.ChannelHandlerContext(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: io.netty.channel.ChannelInboundHandlerAdapter(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: java.util.concurrent.ExecutionException(10)", "Delete ImportDeclaration(11)", "Delete Modifier: abstract(17)", "Delete Modifier: static(23)", "Delete Modifier: final(24)", "Delete QualifiedName: org.slf4j.Logger(25)", "Delete SimpleType: org.slf4j.Logger(26)", "Delete SimpleName: logger(27)", "Delete QualifiedName: org.slf4j.LoggerFactory(28)", "Delete SimpleName: getLogger(29)", "Delete SimpleName: RemoteConnection(30)", "Delete SimpleType: RemoteConnection(31)", "Delete TypeLiteral(32)", "Delete MethodInvocation(33)", "Delete VariableDeclarationFragment(34)", "Delete FieldDeclaration(35)", "Delete Modifier: private(36)", "Delete Modifier: final(37)", "Delete SimpleName: Channel(38)", "Delete SimpleType: Channel(39)", "Delete SimpleName: channel(40)", "Delete VariableDeclarationFragment(41)", "Delete FieldDeclaration(42)", "Delete Modifier: private(43)", "Delete Modifier: final(44)", "Delete SimpleName: WriteManager(45)", "Delete SimpleType: WriteManager(46)", "Delete SimpleName: writeManager(47)", "Delete VariableDeclarationFragment(48)", "Delete FieldDeclaration(49)", "Delete Modifier: private(50)", "Delete Modifier: final(51)", "Delete SimpleName: RequestIdMap(52)", "Delete SimpleType: RequestIdMap(53)", "Delete SimpleName: requestIdMap(54)", "Delete SimpleName: RequestIdMap(55)", "Delete SimpleType: RequestIdMap(56)", "Delete ClassInstanceCreation(57)", "Delete VariableDeclarationFragment(58)", "Delete FieldDeclaration(59)", "Delete Modifier: private(60)", "Delete Modifier: final(61)", "Delete SimpleName: String(62)", "Delete SimpleType: String(63)", "Delete SimpleName: clientName(64)", "Delete VariableDeclarationFragment(65)", "Delete FieldDeclaration(66)", "Delete Modifier: private(67)", "Delete SimpleName: String(68)", "Delete SimpleType: String(69)", "Delete SimpleName: name(70)", "Delete VariableDeclarationFragment(71)", "Delete FieldDeclaration(72)", "Delete Modifier: public(73)", "Delete SimpleName: channel(76)", "Delete SimpleName: eventLoop(77)", "Delete MethodInvocation(78)", "Delete SimpleName: inEventLoop(79)", "Delete MethodInvocation(80)", "Delete ReturnStatement(81)", "Delete Block(82)", "Delete Modifier: public(84)", "Delete SimpleName: RemoteConnection(85)", "Delete SimpleName: SocketChannel(86)", "Delete SimpleType: SocketChannel(87)", "Delete SimpleName: channel(88)", "Delete SingleVariableDeclaration(89)", "Delete SimpleName: name(92)", "Delete SingleVariableDeclaration(93)", "Delete SuperConstructorInvocation(94)", "Delete ThisExpression(95)", "Delete SimpleName: channel(96)", "Delete FieldAccess(97)", "Delete SimpleName: channel(98)", "Delete Assignment: =(99)", "Delete ExpressionStatement(100)", "Delete ThisExpression(101)", "Delete SimpleName: clientName(102)", "Delete FieldAccess(103)", "Delete SimpleName: name(104)", "Delete Assignment: =(105)", "Delete ExpressionStatement(106)", "Delete ThisExpression(107)", "Delete SimpleName: writeManager(108)", "Delete FieldAccess(109)", "Delete SimpleName: WriteManager(110)", "Delete SimpleType: WriteManager(111)", "Delete ClassInstanceCreation(112)", "Delete Assignment: =(113)", "Delete ExpressionStatement(114)", "Delete SimpleName: channel(115)", "Delete SimpleName: pipeline(116)", "Delete MethodInvocation(117)", "Delete SimpleName: addLast(118)", "Delete SimpleName: BackPressureHandler(119)", "Delete SimpleType: BackPressureHandler(120)", "Delete ClassInstanceCreation(121)", "Delete MethodInvocation(122)", "Delete ExpressionStatement(123)", "Delete Block(124)", "Delete MethodDeclaration(125)", "Delete Modifier: public(126)", "Delete SimpleName: String(127)", "Delete SimpleType: String(128)", "Delete SimpleName: name(130)", "Delete NullLiteral(131)", "Delete InfixExpression: ==(132)", "Delete SimpleName: name(133)", "Delete SimpleName: String(134)", "Delete SimpleName: format(135)", "Delete StringLiteral: \"%s <--> %s (%s)\"(136)", "Delete SimpleName: channel(137)", "Delete SimpleName: localAddress(138)", "Delete MethodInvocation(139)", "Delete SimpleName: channel(140)", "Delete SimpleName: remoteAddress(141)", "Delete MethodInvocation(142)", "Delete SimpleName: clientName(143)", "Delete MethodInvocation(144)", "Delete Assignment: =(145)", "Delete ExpressionStatement(146)", "Delete Block(147)", "Delete IfStatement(148)", "Delete SimpleName: name(149)", "Delete ReturnStatement(150)", "Delete Block(151)", "Delete Modifier: public(153)", "Delete Modifier: abstract(154)", "Delete Modifier: public(159)", "Delete Modifier: final(160)", "Delete SimpleName: channel(164)", "Delete ReturnStatement(165)", "Delete Block(166)", "Delete Modifier: public(168)", "Delete SimpleName: writeManager(177)", "Delete SimpleName: waitForWritable(178)", "Delete MethodInvocation(179)", "Delete ExpressionStatement(180)", "Delete BooleanLiteral: true(181)", "Delete ReturnStatement(182)", "Delete Block(183)", "Delete Modifier: final(184)", "Delete SimpleName: InterruptedException(185)", "Delete SimpleType: InterruptedException(186)", "Delete SimpleName: e(187)", "Delete SingleVariableDeclaration(188)", "Delete SimpleName: listener(189)", "Delete SimpleName: interrupted(190)", "Delete SimpleName: e(191)", "Delete MethodInvocation(192)", "Delete ExpressionStatement(193)", "Delete SimpleName: Thread(194)", "Delete SimpleName: currentThread(195)", "Delete MethodInvocation(196)", "Delete SimpleName: interrupt(197)", "Delete MethodInvocation(198)", "Delete ExpressionStatement(199)", "Delete BooleanLiteral: false(200)", "Delete ReturnStatement(201)", "Delete Block(202)", "Delete CatchClause(203)", "Delete TryStatement(204)", "Delete Block(205)", "Delete Modifier: public(207)", "Delete PrimitiveType: void(208)", "Delete SimpleName: setAutoRead(209)", "Delete PrimitiveType: boolean(210)", "Delete SimpleName: enableAutoRead(211)", "Delete SingleVariableDeclaration(212)", "Delete SimpleName: channel(213)", "Delete SimpleName: config(214)", "Delete MethodInvocation(215)", "Delete SimpleName: setAutoRead(216)", "Delete SimpleName: enableAutoRead(217)", "Delete MethodInvocation(218)", "Delete ExpressionStatement(219)", "Delete Block(220)", "Delete MethodDeclaration(221)", "Delete Modifier: public(222)", "Delete SimpleName: channel(225)", "Delete NullLiteral(226)", "Delete InfixExpression: !=(227)", "Delete ParenthesizedExpression(228)", "Delete SimpleName: channel(229)", "Delete SimpleName: isActive(230)", "Delete MethodInvocation(231)", "Delete InfixExpression: &&(232)", "Delete ReturnStatement(233)", "Delete Block(234)", "Delete TextElement: The write manager is responsible for controlling whether or not a write can(236)", "Delete TextElement: be sent. It controls whether or not to block a sender if we have tcp(237)", "Delete TextElement: backpressure on the receive side.(238)", "Delete TagElement(239)", "Delete Javadoc(240)", "Delete Modifier: private(241)", "Delete Modifier: static(242)", "Delete SimpleName: WriteManager(243)", "Delete Modifier: private(244)", "Delete Modifier: final(245)", "Delete SimpleName: ResettableBarrier(246)", "Delete SimpleType: ResettableBarrier(247)", "Delete SimpleName: barrier(248)", "Delete SimpleName: ResettableBarrier(249)", "Delete SimpleType: ResettableBarrier(250)", "Delete ClassInstanceCreation(251)", "Delete VariableDeclarationFragment(252)", "Delete FieldDeclaration(253)", "Delete Modifier: private(254)", "Delete Modifier: volatile(255)", "Delete PrimitiveType: boolean(256)", "Delete SimpleName: disabled(257)", "Delete BooleanLiteral: false(258)", "Delete VariableDeclarationFragment(259)", "Delete FieldDeclaration(260)", "Delete Modifier: public(261)", "Delete SimpleName: WriteManager(262)", "Delete SimpleName: barrier(263)", "Delete SimpleName: openBarrier(264)", "Delete MethodInvocation(265)", "Delete ExpressionStatement(266)", "Delete Block(267)", "Delete MethodDeclaration(268)", "Delete Modifier: public(269)", "Delete PrimitiveType: void(270)", "Delete SimpleName: waitForWritable(271)", "Delete SimpleName: InterruptedException(272)", "Delete SimpleType: InterruptedException(273)", "Delete SimpleName: barrier(274)", "Delete SimpleName: await(275)", "Delete MethodInvocation(276)", "Delete ExpressionStatement(277)", "Delete Block(278)", "Delete MethodDeclaration(279)", "Delete Modifier: public(280)", "Delete PrimitiveType: void(281)", "Delete SimpleName: setWritable(282)", "Delete PrimitiveType: boolean(283)", "Delete SimpleName: isWritable(284)", "Delete SingleVariableDeclaration(285)", "Delete SimpleName: isWritable(286)", "Delete SimpleName: barrier(287)", "Delete SimpleName: openBarrier(288)", "Delete MethodInvocation(289)", "Delete ExpressionStatement(290)", "Delete Block(291)", "Delete SimpleName: disabled(292)", "Delete PrefixExpression: !(293)", "Delete SimpleName: barrier(294)", "Delete SimpleName: closeBarrier(295)", "Delete MethodInvocation(296)", "Delete ExpressionStatement(297)", "Delete Block(298)", "Delete IfStatement(299)", "Delete IfStatement(300)", "Delete Block(301)", "Delete MethodDeclaration(302)", "Delete Modifier: public(303)", "Delete PrimitiveType: void(304)", "Delete SimpleName: disable(305)", "Delete SimpleName: disabled(306)", "Delete BooleanLiteral: true(307)", "Delete Assignment: =(308)", "Delete ExpressionStatement(309)", "Delete Block(310)", "Delete MethodDeclaration(311)", "Delete TypeDeclaration: class(312)", "Delete Modifier: private(313)", "Delete SimpleName: BackPressureHandler(314)", "Delete SimpleName: ChannelInboundHandlerAdapter(315)", "Delete SimpleType: ChannelInboundHandlerAdapter(316)", "Delete Modifier: public(319)", "Delete PrimitiveType: void(320)", "Delete SimpleName: channelWritabilityChanged(321)", "Delete SimpleName: ChannelHandlerContext(322)", "Delete SimpleType: ChannelHandlerContext(323)", "Delete SimpleName: ctx(324)", "Delete SingleVariableDeclaration(325)", "Delete SimpleName: Exception(326)", "Delete SimpleType: Exception(327)", "Delete SimpleName: writeManager(328)", "Delete SimpleName: setWritable(329)", "Delete SimpleName: ctx(330)", "Delete SimpleName: channel(331)", "Delete MethodInvocation(332)", "Delete SimpleName: isWritable(333)", "Delete MethodInvocation(334)", "Delete MethodInvocation(335)", "Delete ExpressionStatement(336)", "Delete SimpleName: ctx(337)", "Delete SimpleName: fireChannelWritabilityChanged(338)", "Delete MethodInvocation(339)", "Delete ExpressionStatement(340)", "Delete Block(341)", "Delete MethodDeclaration(342)", "Delete TypeDeclaration: class(343)", "Delete TextElement: For incoming messages, remove the outcome listener and return it. Can only be done once per coordinationId(344)", "Delete TextElement: creation. CoordinationId's are recycled so they will show up once we run through all 4B of them.(345)", "Delete TagElement(346)", "Delete SimpleName: rpcType(347)", "Delete TextElement:  The rpc type associated with the coordination.(348)", "Delete TagElement: @param(349)", "Delete SimpleName: coordinationId(350)", "Delete TextElement:  The coordination id that was returned with the listener was created.(351)", "Delete TagElement: @param(352)", "Delete SimpleName: clazz(353)", "Delete TextElement:  The class that is expected in response.(354)", "Delete TagElement: @param(355)", "Delete TextElement:  An RpcOutcome associated with the provided coordinationId.(356)", "Delete TagElement: @return(357)", "Delete Javadoc(358)", "Delete SimpleName: requestIdMap(380)", "Delete SimpleName: getAndRemoveRpcOutcome(381)", "Delete SimpleName: rpcType(382)", "Delete SimpleName: coordinationId(383)", "Delete SimpleName: clazz(384)", "Delete MethodInvocation(385)", "Delete ReturnStatement(386)", "Delete Block(387)", "Delete TextElement: Create a new rpc listener that will be notified when the response is returned.(389)", "Delete TagElement(390)", "Delete SimpleName: handler(391)", "Delete TextElement:  The outcome handler to be notified when the response arrives.(392)", "Delete TagElement: @param(393)", "Delete SimpleName: clazz(394)", "Delete TextElement:  The Class associated with the response object.(395)", "Delete TagElement: @param(396)", "Delete TextElement:  The new listener. Also carries the coordination id for use in the rpc message.(397)", "Delete TagElement: @return(398)", "Delete Javadoc(399)", "Delete SimpleName: requestIdMap(419)", "Delete SimpleName: createNewRpcListener(420)", "Delete SimpleName: handler(421)", "Delete SimpleName: clazz(422)", "Delete ThisExpression(423)", "Delete MethodInvocation(424)", "Delete ReturnStatement(425)", "Delete Block(426)", "Delete TextElement: Inform the local outcome listener that the remote operation could not be handled.(428)", "Delete TagElement(429)", "Delete SimpleName: coordinationId(430)", "Delete TextElement:  The id that failed.(431)", "Delete TagElement: @param(432)", "Delete SimpleName: failure(433)", "Delete TextElement:  The failure that occurred.(434)", "Delete TagElement: @param(435)", "Delete Javadoc(436)", "Delete SimpleName: requestIdMap(446)", "Delete SimpleName: recordRemoteFailure(447)", "Delete SimpleName: coordinationId(448)", "Delete SimpleName: failure(449)", "Delete MethodInvocation(450)", "Delete ExpressionStatement(451)", "Delete Block(452)", "Delete TextElement: Called from the RpcBus's channel close handler to close all remaining(454)", "Delete TextElement: resources associated with this connection. Ensures that any pending(455)", "Delete TextElement: back-pressure items are also unblocked so they can be thrown away.(456)", "Delete TagElement(457)", "Delete SimpleName: ex(458)", "Delete TextElement: The exception that caused the channel to close.(459)", "Delete TagElement: @param(460)", "Delete Javadoc(461)", "Delete SimpleName: writeManager(468)", "Delete SimpleName: disable(469)", "Delete MethodInvocation(470)", "Delete ExpressionStatement(471)", "Delete SimpleName: writeManager(472)", "Delete SimpleName: setWritable(473)", "Delete BooleanLiteral: true(474)", "Delete MethodInvocation(475)", "Delete ExpressionStatement(476)", "Delete SimpleName: requestIdMap(477)", "Delete SimpleName: channelClosed(478)", "Delete SimpleName: ex(479)", "Delete MethodInvocation(480)", "Delete ExpressionStatement(481)", "Delete Block(482)", "Delete TextElement: Closes all resources connected with current session.(484)", "Delete TextElement: By default has no implementation.(485)", "Delete TagElement(486)", "Delete Javadoc(487)", "Delete Modifier: public(488)", "Delete PrimitiveType: void(489)", "Delete SimpleName: closeSession(490)", "Delete Block(491)", "Delete TextElement: Connection consumer wants to close connection. Initiate connection close(493)", "Delete TextElement: and complete. This is a blocking call that ensures that the connection is(494)", "Delete TextElement: closed before returning. As part of this call, the channel close handler(495)", "Delete TextElement: will be triggered which will call channelClosed() above. The latter will(496)", "Delete TextElement: happen in a separate thread while this method is blocking.(497)", "Delete TextElement: <p>(498)", "Delete TextElement: The check for isActive is not required here since channel can be in OPEN state without being active. We want(499)", "Delete TextElement: to close in both the scenarios. A channel is in OPEN state when a socket is created for it before binding to an(500)", "Delete TextElement: address.(501)", "Delete TextElement: <li>(502)", "Delete TextElement: For connection oriented transport protocol channel moves to ACTIVE state when a connection is established(503)", "Delete TextElement: using this channel. We need to have channel in ACTIVE state NOT OPEN before we can send any message to(504)", "Delete TextElement: remote endpoint.(505)", "Delete TextElement: </li>(506)", "Delete TextElement: <li>(507)", "Delete TextElement: For connectionless transport protocol a sender can send data as soon as channel moves to OPEN state.(508)", "Delete TextElement: </li>(509)", "Delete TextElement: </p>(510)", "Delete TagElement(511)", "Delete Javadoc(512)", "Delete SimpleName: Override(513)", "Delete MarkerAnnotation(514)", "Delete Modifier: public(515)", "Delete SimpleName: channel(518)", "Delete SimpleName: close(519)", "Delete MethodInvocation(520)", "Delete SimpleName: get(521)", "Delete MethodInvocation(522)", "Delete ExpressionStatement(523)", "Delete Block(524)", "Delete Modifier: final(525)", "Delete SimpleName: InterruptedException(526)", "Delete SimpleType: InterruptedException(527)", "Delete SimpleName: ExecutionException(528)", "Delete SimpleType: ExecutionException(529)", "Delete UnionType: InterruptedException|ExecutionException(530)", "Delete SimpleName: e(531)", "Delete SingleVariableDeclaration(532)", "Delete SimpleName: logger(533)", "Delete SimpleName: warn(534)", "Delete StringLiteral: \"Caught exception while closing channel.\"(535)", "Delete SimpleName: e(536)", "Delete MethodInvocation(537)", "Delete ExpressionStatement(538)", "Delete SimpleName: Thread(539)", "Delete SimpleName: currentThread(540)", "Delete MethodInvocation(541)", "Delete SimpleName: interrupt(542)", "Delete MethodInvocation(543)", "Delete ExpressionStatement(544)", "Delete Block(545)", "Delete CatchClause(546)", "Delete TryStatement(547)", "Delete Block(548)"]}}, {"RpcBus_cluster": {"actions": [{"root": "INS TagElement: @param to Javadoc at 2", "operations": ["INS TextElement: > to TagElement: @param at 2", "INS SimpleName: C to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 2", "INS TextElement: < to TagElement: @param at 0", "INS TextElement:  Remote connection type to TagElement: @param at 3"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 1", "operations": ["INS Modifier: abstract to MethodDeclaration at 1"]}, {"root": "INS Modifier: public to MethodDeclaration at 0", "operations": ["INS Modifier: public to MethodDeclaration at 0"]}, {"root": "UPDATE from public to protected", "operations": ["UPD Modifier: public from public to protected"]}, {"root": "INS TextElement:  RPC type to TagElement: @param at 3", "operations": ["INS TextElement:  RPC type to TagElement: @param at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: pBody", "DEL SimpleName: rpcType", "DEL SimpleName: send", "DEL SimpleName: sender", "DEL SimpleName: handle", "DEL SimpleName: dBody", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: connection", "DEL Block", "DEL ExpressionStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: Response", "DEL SimpleName: connection", "DEL SimpleName: RpcException", "DEL Modifier: abstract", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL SimpleName: rpcType", "DEL SimpleType: ByteBuf", "DEL SimpleName: ByteBuf", "DEL SingleVariableDeclaration", "DEL SimpleName: pBody", "DEL Modifier: protected", "DEL SimpleName: dBody", "DEL SimpleName: handle", "DEL SingleVariableDeclaration", "DEL SimpleName: ByteBuf", "DEL SingleVariableDeclaration", "DEL SimpleType: C", "DEL MethodDeclaration", "DEL SimpleType: ByteBuf", "DEL SimpleType: RpcException", "DEL SimpleType: Response", "DEL SimpleName: C"]}, {"root": "DEL TryStatement", "operations": ["DEL ExpressionStatement", "DEL TryStatement", "DEL SimpleName: clientConnection", "DEL Block", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: closeSession"]}]}}, {"RpcBus_diff": {"operations": ["Insert TagElement: @param(66) into Javadoc(67) at 2", "Insert Modifier: abstract(134) into MethodDeclaration(158) at 1", "Insert Modifier: public(219) into MethodDeclaration(284) at 0", "Update Modifier: public(567) to protected", "Insert TextElement:  RPC type(60) into TagElement: @param(61) at 3", "Insert TextElement: <(62) into TagElement: @param(66) at 0", "Insert SimpleName: C(63) into TagElement: @param(66) at 1", "Insert TextElement: >(64) into TagElement: @param(66) at 2", "Insert TextElement:  Remote connection type(65) into TagElement: @param(66) at 3", "Move ExpressionStatement(702) into Block(672) at 3", "Delete SimpleName: sender(151)", "Delete SimpleName: send(152)", "Delete SimpleName: handle(153)", "Delete SimpleName: connection(154)", "Delete SimpleName: rpcType(155)", "Delete SimpleName: pBody(156)", "Delete SimpleName: dBody(157)", "Delete MethodInvocation(158)", "Delete MethodInvocation(159)", "Delete ExpressionStatement(160)", "Delete Block(161)", "Delete Modifier: protected(163)", "Delete Modifier: abstract(164)", "Delete SimpleName: Response(165)", "Delete SimpleType: Response(166)", "Delete SimpleName: handle(167)", "Delete SimpleName: C(168)", "Delete SimpleType: C(169)", "Delete SimpleName: connection(170)", "Delete SingleVariableDeclaration(171)", "Delete PrimitiveType: int(172)", "Delete SimpleName: rpcType(173)", "Delete SingleVariableDeclaration(174)", "Delete SimpleName: ByteBuf(175)", "Delete SimpleType: ByteBuf(176)", "Delete SimpleName: pBody(177)", "Delete SingleVariableDeclaration(178)", "Delete SimpleName: ByteBuf(179)", "Delete SimpleType: ByteBuf(180)", "Delete SimpleName: dBody(181)", "Delete SingleVariableDeclaration(182)", "Delete SimpleName: RpcException(183)", "Delete SimpleType: RpcException(184)", "Delete MethodDeclaration(185)", "Delete SimpleName: clientConnection(693)", "Delete SimpleName: closeSession(694)", "Delete MethodInvocation(695)", "Delete ExpressionStatement(696)", "Delete Block(697)", "Delete Block(703)", "Delete TryStatement(704)"]}}, {"RpcConnectionHandler_cluster": {"actions": [{"root": "INS EnumConstantDeclaration to EnumDeclaration at 6", "operations": ["INS EnumConstantDeclaration to EnumDeclaration at 6", "INS SimpleName: AUTHENTICATION to EnumConstantDeclaration at 0"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL Modifier: static", "DEL SimpleType: org.slf4j.Logger", "DEL SimpleName: RpcConnectionHandler", "DEL QualifiedName: org.slf4j.Logger", "DEL SimpleName: getLogger", "DEL QualifiedName: org.slf4j.LoggerFactory", "DEL MethodInvocation", "DEL SimpleType: RpcConnectionHandler", "DEL VariableDeclarationFragment", "DEL TypeLiteral", "DEL SimpleName: logger", "DEL Modifier: final"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL Modifier: static", "operations": ["DEL Modifier: static"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}, {"root": "DEL Modifier: public", "operations": ["DEL Modifier: public"]}]}}, {"RpcConnectionHandler_diff": {"operations": ["Insert EnumConstantDeclaration(31) into EnumDeclaration(32) at 4", "Insert SimpleName: AUTHENTICATION(30) into EnumConstantDeclaration(31) at 0", "Delete Modifier: static(23)", "Delete Modifier: final(24)", "Delete QualifiedName: org.slf4j.Logger(25)", "Delete SimpleType: org.slf4j.Logger(26)", "Delete SimpleName: logger(27)", "Delete QualifiedName: org.slf4j.LoggerFactory(28)", "Delete SimpleName: getLogger(29)", "Delete SimpleName: RpcConnectionHandler(30)", "Delete SimpleType: RpcConnectionHandler(31)", "Delete TypeLiteral(32)", "Delete MethodInvocation(33)", "Delete VariableDeclarationFragment(34)", "Delete FieldDeclaration(35)", "Delete Modifier: public(36)", "Delete Modifier: static(37)", "Delete Modifier: public(46)", "Delete Modifier: public(54)"]}}, {"FragmentManager_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.rpc.RemoteConnection", "DEL ImportDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: addConnection", "DEL SingleVariableDeclaration", "DEL SimpleType: RemoteConnection", "DEL MethodDeclaration", "DEL PrimitiveType: void", "DEL SimpleName: connection", "DEL SimpleName: RemoteConnection"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TagElement: @param", "DEL SimpleName: setAutoRead", "DEL SimpleName: autoRead", "DEL TextElement: Sets autoRead property on all connections", "DEL Javadoc", "DEL PrimitiveType: boolean", "DEL TagElement", "DEL PrimitiveType: void", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: autoRead"]}]}}, {"FragmentManager_diff": {"operations": ["Delete QualifiedName: org.apache.drill.exec.rpc.RemoteConnection(25)", "Delete ImportDeclaration(26)", "Delete PrimitiveType: void(93)", "Delete SimpleName: addConnection(94)", "Delete SimpleName: RemoteConnection(95)", "Delete SimpleType: RemoteConnection(96)", "Delete SimpleName: connection(97)", "Delete SingleVariableDeclaration(98)", "Delete MethodDeclaration(99)", "Delete TextElement: Sets autoRead property on all connections(108)", "Delete TagElement(109)", "Delete SimpleName: autoRead(110)", "Delete TagElement: @param(111)", "Delete Javadoc(112)", "Delete PrimitiveType: void(113)", "Delete SimpleName: setAutoRead(114)", "Delete PrimitiveType: boolean(115)", "Delete SimpleName: autoRead(116)", "Delete SingleVariableDeclaration(117)", "Delete MethodDeclaration(118)"]}}, {"NonRootFragmentManager_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.List"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.concurrent.CopyOnWriteArrayList"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.drill.exec.rpc.RemoteConnection", "DEL ImportDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL ParameterizedType: CopyOnWriteArrayList<>", "DEL SimpleName: RemoteConnection", "DEL ParameterizedType: List<RemoteConnection>", "DEL SimpleType: RemoteConnection", "DEL SimpleName: connections", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: List", "DEL SimpleType: CopyOnWriteArrayList", "DEL FieldDeclaration", "DEL Modifier: private", "DEL SimpleType: List", "DEL SimpleName: CopyOnWriteArrayList", "DEL Modifier: final"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodInvocation", "DEL SimpleName: addConnection", "DEL SimpleName: connection", "DEL SimpleName: connections", "DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL SimpleType: RemoteConnection", "DEL SimpleName: add", "DEL ExpressionStatement", "DEL Modifier: public", "DEL SimpleName: connection", "DEL MarkerAnnotation", "DEL MethodDeclaration", "DEL SimpleName: RemoteConnection", "DEL SimpleName: Override", "DEL PrimitiveType: void", "DEL Block"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleName: Override", "DEL EnhancedForStatement", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: c", "DEL SimpleName: setAutoRead", "DEL Modifier: public", "DEL Modifier: final", "DEL PrimitiveType: boolean", "DEL SimpleName: connections", "DEL Block", "DEL SimpleName: autoRead", "DEL SimpleName: RemoteConnection", "DEL SingleVariableDeclaration", "DEL SimpleName: c", "DEL SimpleName: setAutoRead", "DEL MarkerAnnotation", "DEL SimpleName: autoRead", "DEL Modifier: final", "DEL PrimitiveType: void", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleType: RemoteConnection"]}]}}, {"NonRootFragmentManager_diff": {"operations": ["Delete QualifiedName: java.util.List(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: java.util.concurrent.CopyOnWriteArrayList(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: org.apache.drill.exec.rpc.RemoteConnection(33)", "Delete ImportDeclaration(34)", "Delete Modifier: private(87)", "Delete Modifier: final(88)", "Delete SimpleName: List(89)", "Delete SimpleType: List(90)", "Delete SimpleName: RemoteConnection(91)", "Delete SimpleType: RemoteConnection(92)", "Delete ParameterizedType: List<RemoteConnection>(93)", "Delete SimpleName: connections(94)", "Delete SimpleName: CopyOnWriteArrayList(95)", "Delete SimpleType: CopyOnWriteArrayList(96)", "Delete ParameterizedType: CopyOnWriteArrayList<>(97)", "Delete ClassInstanceCreation(98)", "Delete VariableDeclarationFragment(99)", "Delete FieldDeclaration(100)", "Delete SimpleName: Override(349)", "Delete MarkerAnnotation(350)", "Delete Modifier: public(351)", "Delete PrimitiveType: void(352)", "Delete SimpleName: addConnection(353)", "Delete Modifier: final(354)", "Delete SimpleName: RemoteConnection(355)", "Delete SimpleType: RemoteConnection(356)", "Delete SimpleName: connection(357)", "Delete SingleVariableDeclaration(358)", "Delete SimpleName: connections(359)", "Delete SimpleName: add(360)", "Delete SimpleName: connection(361)", "Delete MethodInvocation(362)", "Delete ExpressionStatement(363)", "Delete Block(364)", "Delete MethodDeclaration(365)", "Delete SimpleName: Override(366)", "Delete MarkerAnnotation(367)", "Delete Modifier: public(368)", "Delete PrimitiveType: void(369)", "Delete SimpleName: setAutoRead(370)", "Delete Modifier: final(371)", "Delete PrimitiveType: boolean(372)", "Delete SimpleName: autoRead(373)", "Delete SingleVariableDeclaration(374)", "Delete Modifier: final(375)", "Delete SimpleName: RemoteConnection(376)", "Delete SimpleType: RemoteConnection(377)", "Delete SimpleName: c(378)", "Delete SingleVariableDeclaration(379)", "Delete SimpleName: connections(380)", "Delete SimpleName: c(381)", "Delete SimpleName: setAutoRead(382)", "Delete SimpleName: autoRead(383)", "Delete MethodInvocation(384)", "Delete ExpressionStatement(385)", "Delete Block(386)", "Delete EnhancedForStatement(387)", "Delete Block(388)", "Delete MethodDeclaration(389)"]}}, {"RootFragmentManager_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.List", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.CopyOnWriteArrayList", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.drill.exec.rpc.RemoteConnection"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL ParameterizedType: List<RemoteConnection>", "DEL SimpleName: List", "DEL SimpleType: CopyOnWriteArrayList", "DEL Modifier: private", "DEL ParameterizedType: CopyOnWriteArrayList<>", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleName: RemoteConnection", "DEL SimpleName: connections", "DEL SimpleName: CopyOnWriteArrayList", "DEL SimpleType: List", "DEL SimpleType: RemoteConnection"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: final", "DEL SimpleName: add", "DEL Modifier: public", "DEL MarkerAnnotation", "DEL PrimitiveType: void", "DEL Block", "DEL SimpleName: Override", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: connection", "DEL SimpleName: connection", "DEL SimpleName: RemoteConnection", "DEL MethodInvocation", "DEL SimpleType: RemoteConnection", "DEL SimpleName: addConnection", "DEL SimpleName: connections", "DEL ExpressionStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: autoRead", "DEL SimpleName: RemoteConnection", "DEL SimpleName: connections", "DEL PrimitiveType: void", "DEL SingleVariableDeclaration", "DEL EnhancedForStatement", "DEL ExpressionStatement", "DEL PrimitiveType: boolean", "DEL SimpleName: setAutoRead", "DEL SimpleName: c", "DEL SimpleName: autoRead", "DEL MarkerAnnotation", "DEL Block", "DEL Block", "DEL SimpleName: Override", "DEL Modifier: public", "DEL MethodInvocation", "DEL SimpleName: c", "DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL SimpleName: setAutoRead", "DEL MethodDeclaration", "DEL SimpleType: RemoteConnection", "DEL Modifier: final"]}]}}, {"RootFragmentManager_diff": {"operations": ["Delete QualifiedName: java.util.List(19)", "Delete ImportDeclaration(20)", "Delete QualifiedName: java.util.concurrent.CopyOnWriteArrayList(21)", "Delete ImportDeclaration(22)", "Delete QualifiedName: org.apache.drill.exec.rpc.RemoteConnection(29)", "Delete ImportDeclaration(30)", "Delete Modifier: private(67)", "Delete Modifier: final(68)", "Delete SimpleName: List(69)", "Delete SimpleType: List(70)", "Delete SimpleName: RemoteConnection(71)", "Delete SimpleType: RemoteConnection(72)", "Delete ParameterizedType: List<RemoteConnection>(73)", "Delete SimpleName: connections(74)", "Delete SimpleName: CopyOnWriteArrayList(75)", "Delete SimpleType: CopyOnWriteArrayList(76)", "Delete ParameterizedType: CopyOnWriteArrayList<>(77)", "Delete ClassInstanceCreation(78)", "Delete VariableDeclarationFragment(79)", "Delete FieldDeclaration(80)", "Delete SimpleName: Override(237)", "Delete MarkerAnnotation(238)", "Delete Modifier: public(239)", "Delete PrimitiveType: void(240)", "Delete SimpleName: addConnection(241)", "Delete Modifier: final(242)", "Delete SimpleName: RemoteConnection(243)", "Delete SimpleType: RemoteConnection(244)", "Delete SimpleName: connection(245)", "Delete SingleVariableDeclaration(246)", "Delete SimpleName: connections(247)", "Delete SimpleName: add(248)", "Delete SimpleName: connection(249)", "Delete MethodInvocation(250)", "Delete ExpressionStatement(251)", "Delete Block(252)", "Delete MethodDeclaration(253)", "Delete SimpleName: Override(254)", "Delete MarkerAnnotation(255)", "Delete Modifier: public(256)", "Delete PrimitiveType: void(257)", "Delete SimpleName: setAutoRead(258)", "Delete Modifier: final(259)", "Delete PrimitiveType: boolean(260)", "Delete SimpleName: autoRead(261)", "Delete SingleVariableDeclaration(262)", "Delete Modifier: final(263)", "Delete SimpleName: RemoteConnection(264)", "Delete SimpleType: RemoteConnection(265)", "Delete SimpleName: c(266)", "Delete SingleVariableDeclaration(267)", "Delete SimpleName: connections(268)", "Delete SimpleName: c(269)", "Delete SimpleName: setAutoRead(270)", "Delete SimpleName: autoRead(271)", "Delete MethodInvocation(272)", "Delete ExpressionStatement(273)", "Delete Block(274)", "Delete EnhancedForStatement(275)", "Delete Block(276)", "Delete MethodDeclaration(277)"]}}], "commit_stats": [{"total_files": 15, "deleted_files": 2, "testing": "False", "maintenance": "False", "build": "False"}]}