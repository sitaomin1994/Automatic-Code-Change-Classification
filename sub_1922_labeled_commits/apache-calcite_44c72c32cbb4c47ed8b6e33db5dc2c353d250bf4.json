{"application": "apache-calcite", "csha": "44c72c32cbb4c47ed8b6e33db5dc2c353d250bf4", "files": [{"FilterAggregateTransposeRule_cluster": {"actions": [{"root": "MOVE from Block", "operations": ["MOV EnhancedForStatement to Block at 10"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 10", "MOV ExpressionStatement to Block at 14"]}, {"root": "INS IfStatement to Block at 11", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 11", "INS ReturnStatement to Block at 0", "INS SimpleName: aggRel to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: == at 1", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: rel to InfixExpression: == at 0", "INS SimpleName: getInput to MethodInvocation at 1", "INS InfixExpression: == to IfStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 12", "operations": ["INS ExpressionStatement to Block at 12", "INS SimpleName: rel to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS ExpressionStatement to Block at 13", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: rel to MethodInvocation at 2", "INS SimpleName: remainingConditions to MethodInvocation at 3", "INS SimpleName: createFilter to MethodInvocation at 1", "INS SimpleName: rel to Assignment: = at 0", "INS ExpressionStatement to Block at 13", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: filterFactory to MethodInvocation at 4", "INS SimpleName: RelOptUtil to MethodInvocation at 0"]}, {"root": "INS ParameterizedType: List<RexNode> to VariableDeclarationStatement at 1", "operations": ["INS SimpleName: List to SimpleType: List at 0", "INS ParameterizedType: List<RexNode> to VariableDeclarationStatement at 1", "INS SimpleType: List to ParameterizedType: List<RexNode> at 0"]}, {"root": "MOVE from ParameterizedType: List<RexNode>", "operations": ["MOV SimpleType: RexNode to ParameterizedType: List<RexNode> at 1"]}, {"root": "UPDATE from pushedCondition to remainingConditions", "operations": ["UPD SimpleName: pushedCondition from pushedCondition to remainingConditions"]}, {"root": "UPDATE from newFilterRel to rel", "operations": ["UPD SimpleName: newFilterRel from newFilterRel to rel", "UPD SimpleName: newFilterRel from newFilterRel to rel", "UPD SimpleName: newAggRel from newAggRel to rel"]}, {"root": "UPDATE from RexUtil to Lists", "operations": ["UPD SimpleName: RexUtil from RexUtil to Lists"]}, {"root": "UPDATE from composeConjunction to newArrayList", "operations": ["UPD SimpleName: composeConjunction from composeConjunction to newArrayList"]}, {"root": "INS Block to IfStatement at 2", "operations": ["INS Block to IfStatement at 2", "INS SimpleName: remainingConditions to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: condition to MethodInvocation at 2"]}, {"root": "UPDATE from filterFactory to RelOptUtil", "operations": ["UPD SimpleName: filterFactory from filterFactory to RelOptUtil"]}, {"root": "UPDATE from pushedCondition to pushedConditions", "operations": ["UPD SimpleName: pushedCondition from pushedCondition to pushedConditions"]}, {"root": "INS SimpleName: filterFactory to MethodInvocation at 4", "operations": ["INS SimpleName: filterFactory to MethodInvocation at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: copy to MethodInvocation at 1", "MOV SimpleName: aggRel to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "DEL SimpleName: rexBuilder", "operations": ["DEL SimpleName: rexBuilder"]}, {"root": "DEL SimpleName: pushedConditions", "operations": ["DEL SimpleName: pushedConditions"]}, {"root": "DEL BooleanLiteral: true", "operations": ["DEL BooleanLiteral: true"]}, {"root": "DEL IfStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: newAggRel", "DEL SimpleName: pushedCondition", "DEL SimpleType: RelNode", "DEL NullLiteral", "DEL InfixExpression: !=", "DEL Block", "DEL VariableDeclarationFragment", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: RelNode"]}]}}, {"FilterAggregateTransposeRule_diff": {"operations": ["Move EnhancedForStatement(262) into Block(331) at 10", "Move VariableDeclarationStatement(290) into Block(331) at 10", "Insert IfStatement(303) into Block(331) at 11", "Insert ExpressionStatement(316) into Block(331) at 12", "Insert ExpressionStatement(325) into Block(331) at 13", "Move ExpressionStatement(310) into Block(331) at 14", "Insert ParameterizedType: List<RexNode>(224) into VariableDeclarationStatement(230) at 1", "Insert InfixExpression: ==(300) into IfStatement(303) at 0", "Insert Block(302) into IfStatement(303) at 1", "Insert Assignment: =(315) into ExpressionStatement(316) at 0", "Insert Assignment: =(324) into ExpressionStatement(325) at 0", "Insert SimpleType: List(221) into ParameterizedType: List<RexNode>(224) at 0", "Move SimpleType: RexNode(265) into ParameterizedType: List<RexNode>(224) at 1", "Update SimpleName: pushedCondition(266) to remainingConditions", "Update SimpleName: newFilterRel(280) to rel", "Insert SimpleName: rel(295) into InfixExpression: ==(300) at 0", "Insert MethodInvocation(299) into InfixExpression: ==(300) at 1", "Insert ReturnStatement(301) into Block(302) at 0", "Insert SimpleName: rel(304) into Assignment: =(315) at 0", "Insert MethodInvocation(314) into Assignment: =(315) at 1", "Insert SimpleName: rel(317) into Assignment: =(324) at 0", "Insert MethodInvocation(323) into Assignment: =(324) at 1", "Update SimpleName: newAggRel(308) to rel", "Insert SimpleName: List(220) into SimpleType: List(221) at 0", "Update SimpleName: RexUtil(267) to Lists", "Update SimpleName: composeConjunction(268) to newArrayList", "Insert Block(277) into IfStatement(278) at 2", "Update SimpleName: filterFactory(281) to RelOptUtil", "Update SimpleName: pushedCondition(287) to pushedConditions", "Insert SimpleName: filterFactory(291) into MethodInvocation(292) at 4", "Insert SimpleName: aggRel(296) into MethodInvocation(299) at 0", "Insert SimpleName: getInput(297) into MethodInvocation(299) at 1", "Insert NumberLiteral: 0(298) into MethodInvocation(299) at 2", "Move SimpleName: aggRel(294) into MethodInvocation(314) at 0", "Move SimpleName: copy(295) into MethodInvocation(314) at 1", "Move MethodInvocation(298) into MethodInvocation(314) at 2", "Move MethodInvocation(302) into MethodInvocation(314) at 3", "Insert SimpleName: RelOptUtil(318) into MethodInvocation(323) at 0", "Insert SimpleName: createFilter(319) into MethodInvocation(323) at 1", "Insert SimpleName: rel(320) into MethodInvocation(323) at 2", "Insert SimpleName: remainingConditions(321) into MethodInvocation(323) at 3", "Insert SimpleName: filterFactory(322) into MethodInvocation(323) at 4", "Insert ExpressionStatement(276) into Block(277) at 0", "Update SimpleName: newFilterRel(301) to rel", "Insert MethodInvocation(275) into ExpressionStatement(276) at 0", "Insert SimpleName: remainingConditions(272) into MethodInvocation(275) at 0", "Insert SimpleName: add(273) into MethodInvocation(275) at 1", "Insert SimpleName: condition(274) into MethodInvocation(275) at 2", "Delete SimpleName: rexBuilder(269)", "Delete SimpleName: pushedConditions(270)", "Delete BooleanLiteral: true(271)", "Delete SimpleName: pushedCondition(275)", "Delete NullLiteral(276)", "Delete InfixExpression: !=(277)", "Delete SimpleName: RelNode(291)", "Delete SimpleType: RelNode(292)", "Delete SimpleName: newAggRel(293)", "Delete MethodInvocation(303)", "Delete VariableDeclarationFragment(304)", "Delete VariableDeclarationStatement(305)", "Delete Block(311)", "Delete IfStatement(312)"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}