{"application": "apache-drill", "csha": "1601a7c5e9a2bb3772f12f0650e13935ab5ba563", "files": [{"FixedValueVectors_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: allocationSizeInBytes to Assignment: = at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: INITIAL_VALUE_ALLOCATION to Assignment: = at 1", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: allocationMonitor to Assignment: = at 0", "INS SimpleName: reset to SuperMethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: reset to MethodDeclaration at 3", "INS NumberLiteral: 0 to Assignment: = at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: zeroVector to MethodInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ExpressionStatement to Block at 2", "INS SuperMethodInvocation to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS Modifier: public to MethodDeclaration at 1"]}]}}, {"FixedValueVectors_diff": {"operations": ["Insert MethodDeclaration(253) into TypeDeclaration: class(1957) at 22", "Insert MarkerAnnotation(234) into MethodDeclaration(253) at 0", "Insert Modifier: public(235) into MethodDeclaration(253) at 1", "Insert PrimitiveType: void(236) into MethodDeclaration(253) at 2", "Insert SimpleName: reset(237) into MethodDeclaration(253) at 3", "Insert Block(252) into MethodDeclaration(253) at 4", "Insert SimpleName: Override(233) into MarkerAnnotation(234) at 0", "Insert ExpressionStatement(241) into Block(252) at 0", "Insert ExpressionStatement(245) into Block(252) at 1", "Insert ExpressionStatement(248) into Block(252) at 2", "Insert ExpressionStatement(251) into Block(252) at 3", "Insert Assignment: =(240) into ExpressionStatement(241) at 0", "Insert Assignment: =(244) into ExpressionStatement(245) at 0", "Insert MethodInvocation(247) into ExpressionStatement(248) at 0", "Insert SuperMethodInvocation(250) into ExpressionStatement(251) at 0", "Insert SimpleName: allocationSizeInBytes(238) into Assignment: =(240) at 0", "Insert SimpleName: INITIAL_VALUE_ALLOCATION(239) into Assignment: =(240) at 1", "Insert SimpleName: allocationMonitor(242) into Assignment: =(244) at 0", "Insert NumberLiteral: 0(243) into Assignment: =(244) at 1", "Insert SimpleName: zeroVector(246) into MethodInvocation(247) at 0", "Insert SimpleName: reset(249) into SuperMethodInvocation(250) at 0"]}}, {"NullableValueVectors_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 45", "MOV FieldDeclaration to TypeDeclaration: class at 61", "MOV MethodDeclaration to TypeDeclaration: class at 60", "MOV Initializer to TypeDeclaration: class at 61", "MOV Initializer to TypeDeclaration: class at 56", "MOV Initializer to TypeDeclaration: class at 47", "MOV FieldDeclaration to TypeDeclaration: class at 47"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 33", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 33", "INS SimpleName: reset to SuperMethodInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: mutator to MethodInvocation at 0", "INS SimpleName: zeroVector to MethodInvocation at 1", "INS SimpleName: reset to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: reset to MethodDeclaration at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: bits to MethodInvocation at 0", "INS SimpleName: accessor to MethodInvocation at 0", "INS SimpleName: reset to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS ExpressionStatement to Block at 2", "INS SuperMethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 37", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: reset to MethodDeclaration at 3", "INS ExpressionStatement to Block at 2", "INS SimpleName: bits to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: reset to SuperMethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 37", "INS ExpressionStatement to Block at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: zeroVector to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: mutator to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SuperMethodInvocation to ExpressionStatement at 0", "INS SimpleName: reset to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: reset to MethodInvocation at 1", "INS SimpleName: accessor to MethodInvocation at 0"]}]}}, {"NullableValueVectors_diff": {"operations": ["Move FieldDeclaration(630) into TypeDeclaration: class(1405) at 47", "Move Initializer(632) into TypeDeclaration: class(1405) at 47", "Move MethodDeclaration(643) into TypeDeclaration: class(1405) at 45", "Move FieldDeclaration(782) into TypeDeclaration: class(1405) at 61", "Move Initializer(809) into TypeDeclaration: class(1405) at 56", "Move MethodDeclaration(820) into TypeDeclaration: class(1405) at 60", "Move Initializer(827) into TypeDeclaration: class(1405) at 61", "Insert MethodDeclaration(434) into TypeDeclaration: class(1405) at 33", "Insert MethodDeclaration(525) into TypeDeclaration: class(1405) at 37", "Insert Modifier: public(415) into MethodDeclaration(434) at 0", "Insert PrimitiveType: void(416) into MethodDeclaration(434) at 1", "Insert SimpleName: reset(417) into MethodDeclaration(434) at 2", "Insert Block(433) into MethodDeclaration(434) at 3", "Insert MarkerAnnotation(505) into MethodDeclaration(525) at 0", "Insert Modifier: public(506) into MethodDeclaration(525) at 1", "Insert PrimitiveType: void(507) into MethodDeclaration(525) at 2", "Insert SimpleName: reset(508) into MethodDeclaration(525) at 3", "Insert Block(524) into MethodDeclaration(525) at 4", "Insert ExpressionStatement(421) into Block(433) at 0", "Insert ExpressionStatement(425) into Block(433) at 1", "Insert ExpressionStatement(429) into Block(433) at 2", "Insert ExpressionStatement(432) into Block(433) at 3", "Insert SimpleName: Override(504) into MarkerAnnotation(505) at 0", "Insert ExpressionStatement(512) into Block(524) at 0", "Insert ExpressionStatement(516) into Block(524) at 1", "Insert ExpressionStatement(520) into Block(524) at 2", "Insert ExpressionStatement(523) into Block(524) at 3", "Insert MethodInvocation(420) into ExpressionStatement(421) at 0", "Insert MethodInvocation(424) into ExpressionStatement(425) at 0", "Insert MethodInvocation(428) into ExpressionStatement(429) at 0", "Insert SuperMethodInvocation(431) into ExpressionStatement(432) at 0", "Insert MethodInvocation(511) into ExpressionStatement(512) at 0", "Insert MethodInvocation(515) into ExpressionStatement(516) at 0", "Insert MethodInvocation(519) into ExpressionStatement(520) at 0", "Insert SuperMethodInvocation(522) into ExpressionStatement(523) at 0", "Insert SimpleName: bits(418) into MethodInvocation(420) at 0", "Insert SimpleName: zeroVector(419) into MethodInvocation(420) at 1", "Insert SimpleName: mutator(422) into MethodInvocation(424) at 0", "Insert SimpleName: reset(423) into MethodInvocation(424) at 1", "Insert SimpleName: accessor(426) into MethodInvocation(428) at 0", "Insert SimpleName: reset(427) into MethodInvocation(428) at 1", "Insert SimpleName: reset(430) into SuperMethodInvocation(431) at 0", "Insert SimpleName: bits(509) into MethodInvocation(511) at 0", "Insert SimpleName: zeroVector(510) into MethodInvocation(511) at 1", "Insert SimpleName: mutator(513) into MethodInvocation(515) at 0", "Insert SimpleName: reset(514) into MethodInvocation(515) at 1", "Insert SimpleName: accessor(517) into MethodInvocation(519) at 0", "Insert SimpleName: reset(518) into MethodInvocation(519) at 1", "Insert SimpleName: reset(521) into SuperMethodInvocation(522) at 0"]}}, {"VariableLengthVectors_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 56", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS ExpressionStatement to Block at 3", "INS SuperMethodInvocation to ExpressionStatement at 0", "INS SimpleName: INITIAL_BYTE_COUNT to Assignment: = at 1", "INS SimpleName: allocationMonitor to Assignment: = at 0", "INS ExpressionStatement to Block at 2", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: offsetVector to MethodInvocation at 0", "INS SimpleName: data to MethodInvocation at 0", "INS SimpleName: zeroVector to MethodInvocation at 1", "INS SimpleName: allocationSizeInBytes to Assignment: = at 0", "INS SimpleName: readerIndex to MethodInvocation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: reset to SuperMethodInvocation at 0", "INS SimpleName: reset to MethodDeclaration at 3", "INS NumberLiteral: 0 to Assignment: = at 1", "INS Block to MethodDeclaration at 4", "INS ExpressionStatement to Block at 4", "INS MethodDeclaration to TypeDeclaration: class at 56", "INS Assignment: = to ExpressionStatement at 0"]}]}}, {"VariableLengthVectors_diff": {"operations": ["Insert MethodDeclaration(902) into TypeDeclaration: class(1967) at 56", "Insert MarkerAnnotation(877) into MethodDeclaration(902) at 0", "Insert Modifier: public(878) into MethodDeclaration(902) at 1", "Insert PrimitiveType: void(879) into MethodDeclaration(902) at 2", "Insert SimpleName: reset(880) into MethodDeclaration(902) at 3", "Insert Block(901) into MethodDeclaration(902) at 4", "Insert SimpleName: Override(876) into MarkerAnnotation(877) at 0", "Insert ExpressionStatement(884) into Block(901) at 0", "Insert ExpressionStatement(888) into Block(901) at 1", "Insert ExpressionStatement(893) into Block(901) at 2", "Insert ExpressionStatement(897) into Block(901) at 3", "Insert ExpressionStatement(900) into Block(901) at 4", "Insert Assignment: =(883) into ExpressionStatement(884) at 0", "Insert Assignment: =(887) into ExpressionStatement(888) at 0", "Insert MethodInvocation(892) into ExpressionStatement(893) at 0", "Insert MethodInvocation(896) into ExpressionStatement(897) at 0", "Insert SuperMethodInvocation(899) into ExpressionStatement(900) at 0", "Insert SimpleName: allocationSizeInBytes(881) into Assignment: =(883) at 0", "Insert SimpleName: INITIAL_BYTE_COUNT(882) into Assignment: =(883) at 1", "Insert SimpleName: allocationMonitor(885) into Assignment: =(887) at 0", "Insert NumberLiteral: 0(886) into Assignment: =(887) at 1", "Insert SimpleName: data(889) into MethodInvocation(892) at 0", "Insert SimpleName: readerIndex(890) into MethodInvocation(892) at 1", "Insert NumberLiteral: 0(891) into MethodInvocation(892) at 2", "Insert SimpleName: offsetVector(894) into MethodInvocation(896) at 0", "Insert SimpleName: zeroVector(895) into MethodInvocation(896) at 1", "Insert SimpleName: reset(898) into SuperMethodInvocation(899) at 0"]}}, {"BaseDataValueVector_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS TagElement to Javadoc at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS TextElement: This method has a similar effect of allocateNew() without actually clearing and reallocating to TagElement at 0", "INS TextElement: the value vector. The purpose is to move the value vector to a \"mutate\" state to TagElement at 1", "INS SimpleName: reset to MethodDeclaration at 3"]}]}}, {"BaseDataValueVector_diff": {"operations": ["Insert MethodDeclaration(224) into TypeDeclaration: class(225) at 12", "Insert Javadoc(219) into MethodDeclaration(224) at 0", "Insert Modifier: public(220) into MethodDeclaration(224) at 1", "Insert PrimitiveType: void(221) into MethodDeclaration(224) at 2", "Insert SimpleName: reset(222) into MethodDeclaration(224) at 3", "Insert Block(223) into MethodDeclaration(224) at 4", "Insert TagElement(218) into Javadoc(219) at 0", "Insert TextElement: This method has a similar effect of allocateNew() without actually clearing and reallocating(216) into TagElement(218) at 0", "Insert TextElement: the value vector. The purpose is to move the value vector to a \"mutate\" state(217) into TagElement(218) at 1"]}}, {"BitVector_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: allocationMonitor to Assignment: = at 0", "INS SimpleName: valueCount to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: INITIAL_VALUE_ALLOCATION to Assignment: = at 1", "INS Modifier: public to MethodDeclaration at 1", "INS NumberLiteral: 0 to Assignment: = at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SuperMethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ExpressionStatement to Block at 4", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS ExpressionStatement to Block at 2", "INS NumberLiteral: 0 to Assignment: = at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: allocationSizeInBytes to Assignment: = at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: zeroVector to MethodInvocation at 0", "INS SimpleName: reset to MethodDeclaration at 3", "INS SimpleName: reset to SuperMethodInvocation at 0"]}]}}, {"BitVector_diff": {"operations": ["Insert MethodDeclaration(324) into TypeDeclaration: class(1504) at 22", "Insert MarkerAnnotation(301) into MethodDeclaration(324) at 0", "Insert Modifier: public(302) into MethodDeclaration(324) at 1", "Insert PrimitiveType: void(303) into MethodDeclaration(324) at 2", "Insert SimpleName: reset(304) into MethodDeclaration(324) at 3", "Insert Block(323) into MethodDeclaration(324) at 4", "Insert SimpleName: Override(300) into MarkerAnnotation(301) at 0", "Insert ExpressionStatement(308) into Block(323) at 0", "Insert ExpressionStatement(312) into Block(323) at 1", "Insert ExpressionStatement(316) into Block(323) at 2", "Insert ExpressionStatement(319) into Block(323) at 3", "Insert ExpressionStatement(322) into Block(323) at 4", "Insert Assignment: =(307) into ExpressionStatement(308) at 0", "Insert Assignment: =(311) into ExpressionStatement(312) at 0", "Insert Assignment: =(315) into ExpressionStatement(316) at 0", "Insert MethodInvocation(318) into ExpressionStatement(319) at 0", "Insert SuperMethodInvocation(321) into ExpressionStatement(322) at 0", "Insert SimpleName: valueCount(305) into Assignment: =(307) at 0", "Insert NumberLiteral: 0(306) into Assignment: =(307) at 1", "Insert SimpleName: allocationSizeInBytes(309) into Assignment: =(311) at 0", "Insert SimpleName: INITIAL_VALUE_ALLOCATION(310) into Assignment: =(311) at 1", "Insert SimpleName: allocationMonitor(313) into Assignment: =(315) at 0", "Insert NumberLiteral: 0(314) into Assignment: =(315) at 1", "Insert SimpleName: zeroVector(317) into MethodInvocation(318) at 0", "Insert SimpleName: reset(320) into SuperMethodInvocation(321) at 0"]}}, {"ValueVector_cluster": {"actions": [{"root": "INS TextElement: There are a few \"rules\" around vectors: to TagElement at 11", "operations": ["INS TextElement: There are a few \"rules\" around vectors: to TagElement at 11"]}, {"root": "INS TextElement: <ul> to TagElement at 12", "operations": ["INS TextElement: <ul> to TagElement at 12"]}, {"root": "INS TextElement: <li>values need to be written in order (e.g. index 0, 1, 2, 5)</li> to TagElement at 13", "operations": ["INS TextElement: <li>values need to be written in order (e.g. index 0, 1, 2, 5)</li> to TagElement at 13"]}, {"root": "INS TextElement: <li>null vectors start with all values as null before writing anything</li> to TagElement at 14", "operations": ["INS TextElement: <li>null vectors start with all values as null before writing anything</li> to TagElement at 14"]}, {"root": "INS TextElement: <li>for variable width types, the offset vector should be all zeros before writing</li> to TagElement at 15", "operations": ["INS TextElement: <li>for variable width types, the offset vector should be all zeros before writing</li> to TagElement at 15"]}, {"root": "INS TextElement: <li>you must call setValueCount before a vector can be read</li> to TagElement at 16", "operations": ["INS TextElement: <li>you must call setValueCount before a vector can be read</li> to TagElement at 16"]}, {"root": "INS TextElement: <li>you should never write to a vector once it has been read.</li> to TagElement at 17", "operations": ["INS TextElement: <li>you should never write to a vector once it has been read.</li> to TagElement at 17"]}, {"root": "INS TextElement: </ul> to TagElement at 18", "operations": ["INS TextElement: </ul> to TagElement at 18"]}, {"root": "INS TextElement: Please note that the current implementation doesn't enfore those rules, hence we may find few places that to TagElement at 19", "operations": ["INS TextElement: Please note that the current implementation doesn't enfore those rules, hence we may find few places that to TagElement at 19"]}, {"root": "INS TextElement: deviate from these rules (e.g. offset vectors in Variable Length and Repeated vector) to TagElement at 20", "operations": ["INS TextElement: deviate from these rules (e.g. offset vectors in Variable Length and Repeated vector) to TagElement at 20"]}, {"root": "INS TextElement: This interface \"should\" strive to guarantee this order of operation: to TagElement at 21", "operations": ["INS TextElement: This interface \"should\" strive to guarantee this order of operation: to TagElement at 21"]}, {"root": "INS TextElement: <blockquote> to TagElement at 22", "operations": ["INS TextElement: <blockquote> to TagElement at 22"]}, {"root": "INS TextElement: allocate > mutate > setvaluecount > access > clear (or allocate to start the process over). to TagElement at 23", "operations": ["INS TextElement: allocate > mutate > setvaluecount > access > clear (or allocate to start the process over). to TagElement at 23"]}, {"root": "INS TextElement: </blockquote> to TagElement at 24", "operations": ["INS TextElement: </blockquote> to TagElement at 24"]}]}}, {"ValueVector_diff": {"operations": ["Insert TextElement: There are a few \"rules\" around vectors:(50) into TagElement(64) at 11", "Insert TextElement: <ul>(51) into TagElement(64) at 12", "Insert TextElement: <li>values need to be written in order (e.g. index 0, 1, 2, 5)</li>(52) into TagElement(64) at 13", "Insert TextElement: <li>null vectors start with all values as null before writing anything</li>(53) into TagElement(64) at 14", "Insert TextElement: <li>for variable width types, the offset vector should be all zeros before writing</li>(54) into TagElement(64) at 15", "Insert TextElement: <li>you must call setValueCount before a vector can be read</li>(55) into TagElement(64) at 16", "Insert TextElement: <li>you should never write to a vector once it has been read.</li>(56) into TagElement(64) at 17", "Insert TextElement: </ul>(57) into TagElement(64) at 18", "Insert TextElement: Please note that the current implementation doesn't enfore those rules, hence we may find few places that(58) into TagElement(64) at 19", "Insert TextElement: deviate from these rules (e.g. offset vectors in Variable Length and Repeated vector)(59) into TagElement(64) at 20", "Insert TextElement: This interface \"should\" strive to guarantee this order of operation:(60) into TagElement(64) at 21", "Insert TextElement: <blockquote>(61) into TagElement(64) at 22", "Insert TextElement: allocate > mutate > setvaluecount > access > clear (or allocate to start the process over).(62) into TagElement(64) at 23", "Insert TextElement: </blockquote>(63) into TagElement(64) at 24"]}}, {"DefaultFrameTemplate_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: org.apache.drill.exec.vector.BaseDataValueVector to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS QualifiedName: org.apache.drill.exec.vector.BaseValueVector to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS Block to MethodDeclaration at 3", "operations": ["INS ParenthesizedExpression to MethodInvocation at 0", "INS SimpleName: getValueVector to MethodInvocation at 1", "INS SimpleName: VectorWrapper to SimpleType: VectorWrapper at 0", "INS SimpleName: reset to MethodInvocation at 1", "INS Block to MethodDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS Block to EnhancedForStatement at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: internal to EnhancedForStatement at 1", "INS SimpleName: vw to SingleVariableDeclaration at 1", "INS SimpleName: vw to MethodInvocation at 0", "INS ParameterizedType: VectorWrapper<?> to SingleVariableDeclaration at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to InstanceofExpression at 0", "INS EnhancedForStatement to Block at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: BaseDataValueVector to SimpleType: BaseDataValueVector at 0", "INS SimpleType: BaseDataValueVector to InstanceofExpression at 1", "INS SimpleType: BaseDataValueVector to CastExpression at 0", "INS SimpleType: VectorWrapper to ParameterizedType: VectorWrapper<?> at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: BaseDataValueVector to SimpleType: BaseDataValueVector at 0", "INS WildcardType: ? to ParameterizedType: VectorWrapper<?> at 1", "INS ParenthesizedExpression to IfStatement at 0", "INS SimpleName: getValueVector to MethodInvocation at 1", "INS InstanceofExpression to ParenthesizedExpression at 0", "INS SimpleName: vw to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 3", "MOV ExpressionStatement to Block at 0"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"DefaultFrameTemplate_diff": {"operations": ["Insert ImportDeclaration(32) into CompilationUnit(1550) at 8", "Insert ImportDeclaration(34) into CompilationUnit(1550) at 9", "Insert QualifiedName: org.apache.drill.exec.vector.BaseDataValueVector(31) into ImportDeclaration(32) at 0", "Insert QualifiedName: org.apache.drill.exec.vector.BaseValueVector(33) into ImportDeclaration(34) at 0", "Insert Block(466) into MethodDeclaration(467) at 3", "Move ExpressionStatement(426) into Block(466) at 0", "Move ExpressionStatement(429) into Block(466) at 1", "Insert EnhancedForStatement(461) into Block(466) at 2", "Move ExpressionStatement(433) into Block(466) at 3", "Insert SingleVariableDeclaration(439) into EnhancedForStatement(461) at 0", "Insert SimpleName: internal(440) into EnhancedForStatement(461) at 1", "Insert Block(460) into EnhancedForStatement(461) at 2", "Insert ParameterizedType: VectorWrapper<?>(437) into SingleVariableDeclaration(439) at 0", "Insert SimpleName: vw(438) into SingleVariableDeclaration(439) at 1", "Insert IfStatement(459) into Block(460) at 0", "Insert SimpleType: VectorWrapper(435) into ParameterizedType: VectorWrapper<?>(437) at 0", "Insert WildcardType: ?(436) into ParameterizedType: VectorWrapper<?>(437) at 1", "Insert ParenthesizedExpression(447) into IfStatement(459) at 0", "Insert Block(458) into IfStatement(459) at 1", "Insert SimpleName: VectorWrapper(434) into SimpleType: VectorWrapper(435) at 0", "Insert InstanceofExpression(446) into ParenthesizedExpression(447) at 0", "Insert ExpressionStatement(457) into Block(458) at 0", "Insert MethodInvocation(443) into InstanceofExpression(446) at 0", "Insert SimpleType: BaseDataValueVector(445) into InstanceofExpression(446) at 1", "Insert MethodInvocation(456) into ExpressionStatement(457) at 0", "Insert SimpleName: vw(441) into MethodInvocation(443) at 0", "Insert SimpleName: getValueVector(442) into MethodInvocation(443) at 1", "Insert SimpleName: BaseDataValueVector(444) into SimpleType: BaseDataValueVector(445) at 0", "Insert ParenthesizedExpression(454) into MethodInvocation(456) at 0", "Insert SimpleName: reset(455) into MethodInvocation(456) at 1", "Insert CastExpression(453) into ParenthesizedExpression(454) at 0", "Insert SimpleType: BaseDataValueVector(449) into CastExpression(453) at 0", "Insert MethodInvocation(452) into CastExpression(453) at 1", "Insert SimpleName: BaseDataValueVector(448) into SimpleType: BaseDataValueVector(449) at 0", "Insert SimpleName: vw(450) into MethodInvocation(452) at 0", "Insert SimpleName: getValueVector(451) into MethodInvocation(452) at 1", "Delete Block(434)"]}}], "commit_stats": [{"total_files": 10, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}