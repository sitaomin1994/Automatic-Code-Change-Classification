{"application": "apache-calcite", "csha": "feff5964bf36d2e5aa311fcd7777b159aa4a8a1e", "files": [{"SqlKind_cluster": {"actions": [{"root": "INS EnumConstantDeclaration to EnumDeclaration at 51", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement: The \"CONTAINS\" operator for periods. to TagElement at 0", "INS SimpleName: CONTAINS to EnumConstantDeclaration at 1", "INS Javadoc to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 51"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 52", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement: The \"PRECEDES\" operator for periods. to TagElement at 0", "INS Javadoc to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 52", "INS SimpleName: PRECEDES to EnumConstantDeclaration at 1"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 53", "operations": ["INS Javadoc to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 53", "INS SimpleName: IMMEDIATELY_PRECEDES to EnumConstantDeclaration at 1", "INS TextElement: The \"IMMEDIATELY PRECEDES\" operator for periods. to TagElement at 0", "INS StringLiteral: \"IMMEDIATELY PRECEDES\" to EnumConstantDeclaration at 2", "INS TagElement to Javadoc at 0"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 54", "operations": ["INS TextElement: The \"SUCCEEDS\" operator for periods. to TagElement at 0", "INS TagElement to Javadoc at 0", "INS Javadoc to EnumConstantDeclaration at 0", "INS SimpleName: SUCCEEDS to EnumConstantDeclaration at 1", "INS EnumConstantDeclaration to EnumDeclaration at 54"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 55", "operations": ["INS TagElement to Javadoc at 0", "INS SimpleName: IMMEDIATELY_SUCCEEDS to EnumConstantDeclaration at 1", "INS EnumConstantDeclaration to EnumDeclaration at 55", "INS TextElement: The \"IMMEDIATELY SUCCEEDS\" operator for periods. to TagElement at 0", "INS StringLiteral: \"IMMEDIATELY SUCCEEDS\" to EnumConstantDeclaration at 2", "INS Javadoc to EnumConstantDeclaration at 0"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 56", "operations": ["INS EnumConstantDeclaration to EnumDeclaration at 56", "INS TextElement: The \"EQUALS\" operator for periods. to TagElement at 0", "INS Javadoc to EnumConstantDeclaration at 0", "INS StringLiteral: \"EQUALS\" to EnumConstantDeclaration at 2", "INS TagElement to Javadoc at 0", "INS SimpleName: PERIOD_EQUALS to EnumConstantDeclaration at 1"]}, {"root": "INS FieldDeclaration to EnumDeclaration at 203", "operations": ["INS SimpleType: String to FieldDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: sql to VariableDeclarationFragment at 0", "INS FieldDeclaration to EnumDeclaration at 203", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to EnumDeclaration at 204", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: SqlKind to MethodDeclaration at 0", "INS MethodInvocation to Assignment: = at 1", "INS Block to MethodDeclaration at 1", "INS SimpleName: sql to Assignment: = at 0", "INS MethodDeclaration to EnumDeclaration at 204", "INS ExpressionStatement to Block at 0", "INS SimpleName: name to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to EnumDeclaration at 205", "operations": ["INS SimpleName: sql to FieldAccess at 1", "INS Block to MethodDeclaration at 2", "INS MethodDeclaration to EnumDeclaration at 205", "INS SimpleName: sql to SingleVariableDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 1", "INS SimpleName: SqlKind to MethodDeclaration at 0", "INS SimpleName: sql to Assignment: = at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ExpressionStatement to Block at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "UPDATE from The \"OVERLAPS\" operator. to The \"OVERLAPS\" operator for periods.", "operations": ["UPD TextElement: The \"OVERLAPS\" operator. from The \"OVERLAPS\" operator. to The \"OVERLAPS\" operator for periods."]}]}}, {"SqlKind_diff": {"operations": ["Insert EnumConstantDeclaration(402) into EnumDeclaration(2091) at 51", "Insert EnumConstantDeclaration(407) into EnumDeclaration(2091) at 52", "Insert EnumConstantDeclaration(413) into EnumDeclaration(2091) at 53", "Insert EnumConstantDeclaration(418) into EnumDeclaration(2091) at 54", "Insert EnumConstantDeclaration(424) into EnumDeclaration(2091) at 55", "Insert EnumConstantDeclaration(430) into EnumDeclaration(2091) at 56", "Insert FieldDeclaration(1842) into EnumDeclaration(2091) at 203", "Insert MethodDeclaration(1850) into EnumDeclaration(2091) at 204", "Insert MethodDeclaration(1863) into EnumDeclaration(2091) at 205", "Insert Javadoc(400) into EnumConstantDeclaration(402) at 0", "Insert SimpleName: CONTAINS(401) into EnumConstantDeclaration(402) at 1", "Insert Javadoc(405) into EnumConstantDeclaration(407) at 0", "Insert SimpleName: PRECEDES(406) into EnumConstantDeclaration(407) at 1", "Insert Javadoc(410) into EnumConstantDeclaration(413) at 0", "Insert SimpleName: IMMEDIATELY_PRECEDES(411) into EnumConstantDeclaration(413) at 1", "Insert StringLiteral: \"IMMEDIATELY PRECEDES\"(412) into EnumConstantDeclaration(413) at 2", "Insert Javadoc(416) into EnumConstantDeclaration(418) at 0", "Insert SimpleName: SUCCEEDS(417) into EnumConstantDeclaration(418) at 1", "Insert Javadoc(421) into EnumConstantDeclaration(424) at 0", "Insert SimpleName: IMMEDIATELY_SUCCEEDS(422) into EnumConstantDeclaration(424) at 1", "Insert StringLiteral: \"IMMEDIATELY SUCCEEDS\"(423) into EnumConstantDeclaration(424) at 2", "Insert Javadoc(427) into EnumConstantDeclaration(430) at 0", "Insert SimpleName: PERIOD_EQUALS(428) into EnumConstantDeclaration(430) at 1", "Insert StringLiteral: \"EQUALS\"(429) into EnumConstantDeclaration(430) at 2", "Insert Modifier: public(1836) into FieldDeclaration(1842) at 0", "Insert Modifier: final(1837) into FieldDeclaration(1842) at 1", "Insert SimpleType: String(1839) into FieldDeclaration(1842) at 2", "Insert VariableDeclarationFragment(1841) into FieldDeclaration(1842) at 3", "Insert SimpleName: SqlKind(1843) into MethodDeclaration(1850) at 0", "Insert Block(1849) into MethodDeclaration(1850) at 1", "Insert SimpleName: SqlKind(1851) into MethodDeclaration(1863) at 0", "Insert SingleVariableDeclaration(1855) into MethodDeclaration(1863) at 1", "Insert Block(1862) into MethodDeclaration(1863) at 2", "Insert TagElement(399) into Javadoc(400) at 0", "Insert TagElement(404) into Javadoc(405) at 0", "Insert TagElement(409) into Javadoc(410) at 0", "Insert TagElement(415) into Javadoc(416) at 0", "Insert TagElement(420) into Javadoc(421) at 0", "Insert TagElement(426) into Javadoc(427) at 0", "Insert SimpleName: String(1838) into SimpleType: String(1839) at 0", "Insert SimpleName: sql(1840) into VariableDeclarationFragment(1841) at 0", "Insert ExpressionStatement(1848) into Block(1849) at 0", "Insert SimpleType: String(1853) into SingleVariableDeclaration(1855) at 0", "Insert SimpleName: sql(1854) into SingleVariableDeclaration(1855) at 1", "Insert ExpressionStatement(1861) into Block(1862) at 0", "Update TextElement: The \"OVERLAPS\" operator.(393) to The \"OVERLAPS\" operator for periods.", "Insert TextElement: The \"CONTAINS\" operator for periods.(398) into TagElement(399) at 0", "Insert TextElement: The \"PRECEDES\" operator for periods.(403) into TagElement(404) at 0", "Insert TextElement: The \"IMMEDIATELY PRECEDES\" operator for periods.(408) into TagElement(409) at 0", "Insert TextElement: The \"SUCCEEDS\" operator for periods.(414) into TagElement(415) at 0", "Insert TextElement: The \"IMMEDIATELY SUCCEEDS\" operator for periods.(419) into TagElement(420) at 0", "Insert TextElement: The \"EQUALS\" operator for periods.(425) into TagElement(426) at 0", "Insert Assignment: =(1847) into ExpressionStatement(1848) at 0", "Insert SimpleName: String(1852) into SimpleType: String(1853) at 0", "Insert Assignment: =(1860) into ExpressionStatement(1861) at 0", "Insert SimpleName: sql(1844) into Assignment: =(1847) at 0", "Insert MethodInvocation(1846) into Assignment: =(1847) at 1", "Insert FieldAccess(1858) into Assignment: =(1860) at 0", "Insert SimpleName: sql(1859) into Assignment: =(1860) at 1", "Insert SimpleName: name(1845) into MethodInvocation(1846) at 0", "Insert ThisExpression(1856) into FieldAccess(1858) at 0", "Insert SimpleName: sql(1857) into FieldAccess(1858) at 1"]}}, {"StandardConvertletTable_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 55"]}, {"root": "UPDATE from org.apache.calcite.sql.SqlBasicCall to org.apache.calcite.util.Pair", "operations": ["UPD QualifiedName: org.apache.calcite.sql.SqlBasicCall from org.apache.calcite.sql.SqlBasicCall to org.apache.calcite.util.Pair"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleName: RexBuilder to SimpleType: RexBuilder at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 6", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS SimpleName: rexBuilder to MethodInvocation at 0", "INS SimpleName: eq to MethodDeclaration at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: a1 to MethodInvocation at 4", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: a1 to SingleVariableDeclaration at 1", "INS SimpleName: a0 to MethodInvocation at 3", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: RexBuilder to SingleVariableDeclaration at 0", "INS SimpleName: makeCall to MethodInvocation at 1", "INS SimpleType: RexNode to MethodDeclaration at 1", "INS SimpleName: rexBuilder to SingleVariableDeclaration at 1", "INS QualifiedName: SqlStdOperatorTable.EQUALS to MethodInvocation at 2", "INS SimpleName: a0 to SingleVariableDeclaration at 1", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: RexNode to SingleVariableDeclaration at 0", "INS SimpleType: RexNode to SingleVariableDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 44", "operations": ["INS SimpleName: e0 to MethodInvocation at 2", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS SwitchCase to SwitchStatement at 13", "INS SimpleName: s1 to MethodInvocation at 3", "INS SimpleName: CONTAINS to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 7", "INS SwitchCase to SwitchStatement at 3", "INS AssertStatement to Block at 0", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS SwitchCase to SwitchStatement at 5", "INS SimpleName: rexBuilder to MethodInvocation at 1", "INS SimpleName: s1 to MethodInvocation at 3", "INS SimpleName: OVERLAPS to SwitchCase at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS ReturnStatement to SwitchStatement at 10", "INS SimpleName: s1 to MethodInvocation at 3", "INS SimpleName: rexBuilder to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodDeclaration to TypeDeclaration: class at 44", "INS SimpleName: le to MethodInvocation at 0", "INS QualifiedName: right.left to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS VariableDeclarationStatement to Block at 8", "INS SwitchCase to SwitchStatement at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: rexBuilder to MethodInvocation at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: rexBuilder to MethodInvocation at 1", "INS SimpleName: rightSwap to VariableDeclarationFragment at 0", "INS SimpleName: le to MethodInvocation at 0", "INS SimpleName: PRECEDES to SwitchCase at 0", "INS SimpleName: getOperandList to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: RexNode to VariableDeclarationStatement at 0", "INS ReturnStatement to SwitchStatement at 6", "INS SimpleName: op to ClassInstanceCreation at 1", "INS Block to MethodDeclaration at 7", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS SimpleName: call to MethodInvocation at 0", "INS SimpleType: RexNode to VariableDeclarationStatement at 0", "INS SimpleName: and to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: e1 to MethodInvocation at 3", "INS SimpleName: rexBuilder to MethodInvocation at 1", "INS SimpleName: eq to MethodInvocation at 0", "INS SimpleName: rexBuilder to MethodInvocation at 1", "INS ThrowStatement to SwitchStatement at 16", "INS SimpleName: rexBuilder to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS VariableDeclarationStatement to Block at 6", "INS SimpleName: s0 to MethodInvocation at 2", "INS SimpleType: RexNode to VariableDeclarationStatement at 1", "INS SimpleName: eq to MethodInvocation at 0", "INS SimpleName: e0 to MethodInvocation at 2", "INS SimpleName: s1 to MethodInvocation at 3", "INS VariableDeclarationStatement to Block at 10", "INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: rexBuilder to MethodInvocation at 1", "INS QualifiedName: op.kind to SwitchStatement at 0", "INS QualifiedName: right.right to VariableDeclarationFragment at 1", "INS SimpleName: r0 to VariableDeclarationFragment at 0", "INS SimpleName: PERIOD_EQUALS to SwitchCase at 0", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to SwitchStatement at 14", "INS VariableDeclarationStatement to Block at 5", "INS Modifier: final to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: e0 to MethodInvocation at 2", "INS SimpleName: s0 to MethodInvocation at 2", "INS InfixExpression: == to AssertStatement at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 11", "INS SimpleName: s0 to MethodInvocation at 2", "INS SimpleName: e0 to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NumberLiteral: 2 to InfixExpression: == at 1", "INS SimpleName: e1 to MethodInvocation at 3", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: SUCCEEDS to SwitchCase at 0", "INS SimpleName: leftSwap to MethodInvocation at 2", "INS SimpleName: ge to MethodInvocation at 0", "INS SimpleType: AssertionError to ClassInstanceCreation at 0", "INS SimpleName: e1 to MethodInvocation at 3", "INS SimpleName: ge to MethodInvocation at 0", "INS SimpleName: eq to MethodInvocation at 0", "INS SimpleName: r3 to VariableDeclarationFragment at 0", "INS SimpleName: r2 to VariableDeclarationFragment at 0", "INS QualifiedName: left.left to VariableDeclarationFragment at 1", "INS SimpleName: IMMEDIATELY_SUCCEEDS to SwitchCase at 0", "INS SimpleName: rexBuilder to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to SwitchStatement at 4", "INS SimpleName: leftSwap to VariableDeclarationFragment at 0", "INS SwitchStatement to Block at 14", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: IMMEDIATELY_PRECEDES to SwitchCase at 0", "INS VariableDeclarationStatement to Block at 2", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: e1 to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: rexBuilder to MethodInvocation at 1", "INS SimpleName: AssertionError to SimpleType: AssertionError at 0", "INS SimpleName: s0 to MethodInvocation at 2", "INS SwitchCase to SwitchStatement at 9", "INS SimpleName: e0 to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: eq to MethodInvocation at 0", "INS SwitchCase to SwitchStatement at 11", "INS SimpleName: and to MethodInvocation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS ReturnStatement to SwitchStatement at 8", "INS SwitchCase to SwitchStatement at 15", "INS ReturnStatement to SwitchStatement at 12"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 45", "operations": ["INS SwitchCase to SwitchStatement at 7", "INS Modifier: final to VariableDeclarationStatement at 0", "INS ExpressionStatement to SwitchStatement at 8", "INS SimpleName: r1 to VariableDeclarationFragment at 0", "INS SimpleName: operand to Assignment: = at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: a1 to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS IfStatement to SwitchStatement at 5", "INS SimpleName: a1 to Assignment: = at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to SwitchStatement at 2", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: a10 to Assignment: = at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: a0 to Assignment: = at 0", "INS SimpleName: operand to SingleVariableDeclaration at 1", "INS SimpleType: SqlNode to VariableDeclarationStatement at 1", "INS SimpleName: SqlCall to SimpleType: SqlCall at 0", "INS MethodInvocation to Assignment: = at 1", "INS Block to MethodDeclaration at 6", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS BreakStatement to SwitchStatement at 6", "INS VariableDeclarationStatement to SwitchStatement at 3", "INS MethodDeclaration to TypeDeclaration: class at 45", "INS VariableDeclarationStatement to Block at 4", "INS Block to IfStatement at 2", "INS SimpleName: SqlNode to SimpleType: SqlNode at 0", "INS SimpleName: a1 to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to SwitchStatement at 0", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS SimpleType: SqlNode to VariableDeclarationStatement at 1", "INS SimpleName: a0 to Assignment: = at 0", "INS SimpleName: SqlRexContext to SimpleType: SqlRexContext at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: ROW to SwitchCase at 0", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: a0 to VariableDeclarationFragment at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: operand to Assignment: = at 1", "INS SwitchStatement to Block at 2", "INS SwitchCase to SwitchStatement at 1", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: SqlNode to SimpleType: SqlNode at 0", "INS SimpleName: getKind to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: SqlNode to SimpleType: SqlNode at 0", "INS Block to IfStatement at 1", "INS SimpleName: convertOverlapsOperand to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS ParameterizedType: Pair<RexNode,RexNode> to MethodDeclaration at 1", "INS SimpleType: RexNode to ParameterizedType: Pair<RexNode,RexNode> at 2", "INS SimpleName: cx to SingleVariableDeclaration at 1", "INS SimpleName: a1 to VariableDeclarationFragment at 0", "INS ExpressionStatement to SwitchStatement at 9", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ParenthesizedExpression to MethodInvocation at 0", "INS SimpleName: operand to MethodInvocation at 1", "INS SimpleType: RexNode to VariableDeclarationStatement at 1", "INS ReturnStatement to Block at 5", "INS VariableDeclarationStatement to SwitchStatement at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS CastExpression to ParenthesizedExpression at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: pos to SingleVariableDeclaration at 1", "INS SimpleType: SqlCall to CastExpression at 0", "INS SimpleName: operand to CastExpression at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleType: SqlNode to VariableDeclarationStatement at 1", "INS SimpleType: Pair to ParameterizedType: Pair<RexNode,RexNode> at 0", "INS SimpleName: operand to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: SqlRexContext to SingleVariableDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: RexNode to MethodDeclaration at 2", "MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV Modifier: public to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV SimpleName: convertOverlaps to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 4", "MOV ReturnStatement to SwitchStatement at 2", "MOV VariableDeclarationStatement to Block at 7", "MOV VariableDeclarationStatement to Block at 13", "MOV VariableDeclarationStatement to Block at 12", "MOV VariableDeclarationStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 9"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV Modifier: final to VariableDeclarationStatement at 0", "MOV SimpleType: RexNode to ParameterizedType: Pair<RexNode,RexNode> at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: SqlParserPos to SingleVariableDeclaration at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: SqlNode to SingleVariableDeclaration at 0"]}, {"root": "INS ParameterizedType: Pair<RexNode,RexNode> to VariableDeclarationStatement at 1", "operations": ["INS SimpleType: RexNode to ParameterizedType: Pair<RexNode,RexNode> at 1", "INS SimpleType: RexNode to ParameterizedType: Pair<RexNode,RexNode> at 2", "INS SimpleType: Pair to ParameterizedType: Pair<RexNode,RexNode> at 0", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS SimpleName: Pair to SimpleType: Pair at 0", "INS ParameterizedType: Pair<RexNode,RexNode> to VariableDeclarationStatement at 1"]}, {"root": "INS SimpleType: RexNode to VariableDeclarationStatement at 1", "operations": ["INS SimpleType: RexNode to VariableDeclarationStatement at 1", "INS SimpleName: RexNode to SimpleType: RexNode at 0"]}, {"root": "INS ParameterizedType: Pair<RexNode,RexNode> to VariableDeclarationStatement at 1", "operations": ["INS SimpleType: Pair to ParameterizedType: Pair<RexNode,RexNode> at 0", "INS ParameterizedType: Pair<RexNode,RexNode> to VariableDeclarationStatement at 1", "INS SimpleType: RexNode to ParameterizedType: Pair<RexNode,RexNode> at 2", "INS SimpleName: Pair to SimpleType: Pair at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: RexNode to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: RexNode to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: RexNode to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: RexNode to VariableDeclarationStatement at 1", "MOV Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: RexNode to VariableDeclarationStatement at 1", "MOV VariableDeclarationFragment to VariableDeclarationStatement at 2", "MOV Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV Modifier: final to VariableDeclarationStatement at 0", "MOV SimpleType: RexNode to VariableDeclarationStatement at 1"]}, {"root": "INS SimpleType: RexNode to VariableDeclarationStatement at 1", "operations": ["INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS SimpleType: RexNode to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from operands to left", "operations": ["UPD SimpleName: operands from operands to left"]}, {"root": "UPDATE from pos to r1", "operations": ["UPD SimpleName: pos from pos to r1", "UPD SimpleName: r2 from r2 to r1", "UPD SimpleName: plus from plus to r1"]}, {"root": "INS QualifiedName: left.right to VariableDeclarationFragment at 1", "operations": ["INS QualifiedName: left.right to VariableDeclarationFragment at 1"]}, {"root": "MOVE from ParameterizedType: Pair<RexNode,RexNode>", "operations": ["MOV SimpleType: RexNode to ParameterizedType: Pair<RexNode,RexNode> at 1"]}, {"root": "UPDATE from t1 to right", "operations": ["UPD SimpleName: t1 from t1 to right"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from t3 to s0", "operations": ["UPD SimpleName: t3 from t3 to s0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from r0 to s1", "operations": ["UPD SimpleName: r0 from r0 to s1"]}, {"root": "UPDATE from r1 to e1", "operations": ["UPD SimpleName: r1 from r1 to e1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: RelDataType to VariableDeclarationStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "UPDATE from pos to r0", "operations": ["UPD SimpleName: pos from pos to r0", "UPD SimpleName: s1 from s1 to r0", "UPD SimpleName: r3 from r3 to r0"]}, {"root": "UPDATE from r2 to Pair", "operations": ["UPD SimpleName: r2 from r2 to Pair"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: r2 to MethodInvocation at 0", "MOV SimpleName: r3 to MethodInvocation at 1", "MOV SimpleName: le to MethodInvocation at 1", "MOV SimpleName: rexBuilder to MethodInvocation at 2"]}, {"root": "UPDATE from r3 to of", "operations": ["UPD SimpleName: r3 from r3 to of"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: rexBuilder to MethodInvocation at 0", "MOV SimpleName: r2 to MethodInvocation at 3", "MOV SimpleName: r3 to MethodInvocation at 2"]}, {"root": "INS SimpleName: convertOverlapsOperand to MethodInvocation at 0", "operations": ["INS SimpleName: convertOverlapsOperand to MethodInvocation at 0"]}, {"root": "INS SimpleName: cx to MethodInvocation at 1", "operations": ["INS SimpleName: cx to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: call to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "UPDATE from RelDataType to RexNode", "operations": ["UPD SimpleName: RelDataType from RelDataType to RexNode"]}, {"root": "MOVE from SimpleType: RexNode", "operations": ["MOV SimpleName: RelDataType to SimpleType: RexNode at 0"]}, {"root": "INS SimpleName: convertOverlapsOperand to MethodInvocation at 0", "operations": ["INS SimpleName: convertOverlapsOperand to MethodInvocation at 0"]}, {"root": "INS SimpleName: cx to MethodInvocation at 1", "operations": ["INS SimpleName: cx to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS NumberLiteral: 1 to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: operand to MethodInvocation at 1"]}, {"root": "UPDATE from getValidatedNodeType to case_", "operations": ["UPD SimpleName: getValidatedNodeType from getValidatedNodeType to case_", "UPD SimpleName: isInterval from isInterval to case_", "UPD SimpleName: cx from cx to case_", "UPD SimpleName: cx from cx to case_"]}, {"root": "INS SimpleName: rexBuilder to MethodInvocation at 2", "operations": ["INS SimpleName: rexBuilder to MethodInvocation at 2"]}, {"root": "INS SimpleName: leftSwap to MethodInvocation at 3", "operations": ["INS SimpleName: leftSwap to MethodInvocation at 3"]}, {"root": "INS SimpleName: r0 to MethodInvocation at 4", "operations": ["INS SimpleName: r0 to MethodInvocation at 4"]}, {"root": "INS SimpleName: r1 to MethodInvocation at 5", "operations": ["INS SimpleName: r1 to MethodInvocation at 5"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: t3 to MethodInvocation at 1", "MOV SimpleName: isInterval to MethodInvocation at 0"]}, {"root": "UPDATE from t3 to rexBuilder", "operations": ["UPD SimpleName: t3 from t3 to rexBuilder", "UPD SimpleName: convertExpression from convertExpression to rexBuilder", "UPD SimpleName: convertExpression from convertExpression to rexBuilder"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: plus to MethodInvocation at 3", "MOV SimpleName: pos to MethodInvocation at 4"]}, {"root": "INS SimpleName: rightSwap to MethodInvocation at 2", "operations": ["INS SimpleName: rightSwap to MethodInvocation at 2"]}, {"root": "INS SimpleName: r2 to MethodInvocation at 3", "operations": ["INS SimpleName: r2 to MethodInvocation at 3"]}, {"root": "INS SimpleName: r3 to MethodInvocation at 4", "operations": ["INS SimpleName: r3 to MethodInvocation at 4"]}, {"root": "INS SimpleName: rightSwap to MethodInvocation at 2", "operations": ["INS SimpleName: rightSwap to MethodInvocation at 2"]}, {"root": "INS SimpleName: r3 to MethodInvocation at 3", "operations": ["INS SimpleName: r3 to MethodInvocation at 3"]}, {"root": "INS SimpleName: r2 to MethodInvocation at 4", "operations": ["INS SimpleName: r2 to MethodInvocation at 4"]}, {"root": "UPDATE from r1 to a10", "operations": ["UPD SimpleName: r1 from r1 to a10", "UPD SimpleName: rexBuilder from rexBuilder to a10", "UPD SimpleName: s0 from s0 to a10"]}, {"root": "UPDATE from e0 to t1", "operations": ["UPD SimpleName: e0 from e0 to t1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: e0 to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from rexBuilder to cx", "operations": ["UPD SimpleName: rexBuilder from rexBuilder to cx", "UPD SimpleName: case_ from case_ to cx"]}, {"root": "UPDATE from rexBuilder to convertExpression", "operations": ["UPD SimpleName: rexBuilder from rexBuilder to convertExpression", "UPD SimpleName: le from le to convertExpression"]}, {"root": "UPDATE from r0 to a0", "operations": ["UPD SimpleName: r0 from r0 to a0", "UPD SimpleName: r2 from r2 to a0"]}, {"root": "UPDATE from rexBuilder to a1", "operations": ["UPD SimpleName: rexBuilder from rexBuilder to a1"]}, {"root": "UPDATE from r0 to operand", "operations": ["UPD SimpleName: r0 from r0 to operand", "UPD SimpleName: getOperands from getOperands to operand"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getOperands to MethodInvocation at 1"]}, {"root": "UPDATE from cx to call", "operations": ["UPD SimpleName: cx from cx to call", "UPD SimpleName: getValidatedNodeType from getValidatedNodeType to call"]}, {"root": "UPDATE from getValidator to getParserPosition", "operations": ["UPD SimpleName: getValidator from getValidator to getParserPosition"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getValidatedNodeType to MethodInvocation at 0"]}, {"root": "INS ParenthesizedExpression to MethodInvocation at 0", "operations": ["INS ParenthesizedExpression to MethodInvocation at 0", "INS SimpleName: SqlCall to SimpleType: SqlCall at 0", "INS SimpleName: operand to CastExpression at 1", "INS SimpleType: SqlCall to CastExpression at 0", "INS CastExpression to ParenthesizedExpression at 0"]}, {"root": "INS NumberLiteral: 1 to MethodInvocation at 4", "operations": ["INS NumberLiteral: 1 to MethodInvocation at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from case_ to getValidatedNodeType", "operations": ["UPD SimpleName: case_ from case_ to getValidatedNodeType"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: rexBuilder to MethodInvocation at 2", "MOV SimpleName: case_ to MethodInvocation at 1"]}, {"root": "UPDATE from le to plus", "operations": ["UPD SimpleName: le from le to plus"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: r0 to MethodInvocation at 2", "MOV SimpleName: r1 to MethodInvocation at 3", "MOV SimpleName: le to MethodInvocation at 0", "MOV SimpleName: rexBuilder to MethodInvocation at 1"]}, {"root": "UPDATE from rexBuilder to pos", "operations": ["UPD SimpleName: rexBuilder from rexBuilder to pos"]}, {"root": "DEL ArrayType: SqlNode[]", "operations": ["DEL ArrayType: SqlNode[]", "DEL Dimension"]}, {"root": "DEL ParenthesizedExpression", "operations": ["DEL CastExpression", "DEL SimpleName: call", "DEL ParenthesizedExpression", "DEL SimpleName: SqlBasicCall", "DEL SimpleType: SqlBasicCall"]}, {"root": "DEL SimpleType: RelDataType", "operations": ["DEL SimpleType: RelDataType"]}, {"root": "DEL ArrayAccess", "operations": ["DEL ArrayAccess", "DEL SimpleName: operands", "DEL NumberLiteral: 1"]}, {"root": "DEL ArrayAccess", "operations": ["DEL NumberLiteral: 3", "DEL ArrayAccess", "DEL SimpleName: operands"]}, {"root": "DEL ArrayAccess", "operations": ["DEL NumberLiteral: 0", "DEL SimpleName: operands", "DEL ArrayAccess"]}, {"root": "DEL ArrayAccess", "operations": ["DEL ArrayAccess", "DEL SimpleName: operands", "DEL NumberLiteral: 1"]}, {"root": "DEL SimpleName: case_", "operations": ["DEL SimpleName: case_"]}, {"root": "DEL SimpleName: rexBuilder", "operations": ["DEL SimpleName: rexBuilder"]}, {"root": "DEL SimpleName: r1", "operations": ["DEL SimpleName: r1"]}, {"root": "DEL SimpleName: r3", "operations": ["DEL SimpleName: r3"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: operands", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: operands", "DEL SimpleName: convertExpression", "DEL ArrayAccess", "DEL MethodInvocation", "DEL MethodInvocation", "DEL NumberLiteral: 3", "DEL NumberLiteral: 2", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: operands", "DEL MethodDeclaration", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 3", "DEL MethodInvocation", "DEL SimpleName: operands", "DEL Assignment: =", "DEL SimpleName: operands", "DEL SimpleName: r2", "DEL Assignment: =", "DEL QualifiedName: operands.length", "DEL SimpleName: operands", "DEL Block", "DEL ArrayAccess", "DEL MethodInvocation", "DEL SimpleName: r3", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: case_", "DEL SimpleName: pos", "DEL SimpleName: cx", "DEL ArrayAccess", "DEL ExpressionStatement", "DEL ArrayAccess", "DEL SimpleName: convertExpression", "DEL IfStatement", "DEL SimpleName: r0", "DEL AssertStatement", "DEL SimpleName: e1", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL InfixExpression: ==", "DEL SimpleName: r1", "DEL NumberLiteral: 1", "DEL NumberLiteral: 2", "DEL ArrayAccess", "DEL SimpleName: cx", "DEL VariableDeclarationFragment", "DEL SimpleName: operands", "DEL NumberLiteral: 1", "DEL VariableDeclarationFragment", "DEL SimpleName: operands", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: SqlTypeUtil", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL ArrayAccess", "DEL VariableDeclarationStatement", "DEL SimpleName: plus", "DEL NumberLiteral: 4", "DEL NumberLiteral: 3", "DEL Modifier: final", "DEL ArrayAccess", "DEL ArrayAccess"]}]}}, {"StandardConvertletTable_diff": {"operations": ["Move ImportDeclaration(35) into CompilationUnit(6143) at 55", "Update QualifiedName: org.apache.calcite.sql.SqlBasicCall(34) to org.apache.calcite.util.Pair", "Insert MethodDeclaration(1091) into TypeDeclaration: class(6142) at 7", "Insert MethodDeclaration(4825) into TypeDeclaration: class(6142) at 44", "Insert MethodDeclaration(4958) into TypeDeclaration: class(6142) at 45", "Insert Modifier: private(1067) into MethodDeclaration(1091) at 0", "Insert SimpleType: RexNode(1069) into MethodDeclaration(1091) at 1", "Insert SimpleName: eq(1070) into MethodDeclaration(1091) at 2", "Insert SingleVariableDeclaration(1074) into MethodDeclaration(1091) at 3", "Insert SingleVariableDeclaration(1078) into MethodDeclaration(1091) at 4", "Insert SingleVariableDeclaration(1082) into MethodDeclaration(1091) at 5", "Insert Block(1090) into MethodDeclaration(1091) at 6", "Move Javadoc(4539) into MethodDeclaration(4825) at 0", "Move Modifier: public(4540) into MethodDeclaration(4825) at 1", "Move SimpleType: RexNode(4542) into MethodDeclaration(4825) at 2", "Move SimpleName: convertOverlaps(4543) into MethodDeclaration(4825) at 3", "Move SingleVariableDeclaration(4547) into MethodDeclaration(4825) at 4", "Move SingleVariableDeclaration(4551) into MethodDeclaration(4825) at 5", "Move SingleVariableDeclaration(4555) into MethodDeclaration(4825) at 6", "Insert Block(4824) into MethodDeclaration(4825) at 7", "Insert Modifier: private(4826) into MethodDeclaration(4958) at 0", "Insert ParameterizedType: Pair<RexNode,RexNode>(4833) into MethodDeclaration(4958) at 1", "Insert SimpleName: convertOverlapsOperand(4834) into MethodDeclaration(4958) at 2", "Insert SingleVariableDeclaration(4838) into MethodDeclaration(4958) at 3", "Insert SingleVariableDeclaration(4842) into MethodDeclaration(4958) at 4", "Insert SingleVariableDeclaration(4846) into MethodDeclaration(4958) at 5", "Insert Block(4957) into MethodDeclaration(4958) at 6", "Insert SimpleName: RexNode(1068) into SimpleType: RexNode(1069) at 0", "Insert SimpleType: RexBuilder(1072) into SingleVariableDeclaration(1074) at 0", "Insert SimpleName: rexBuilder(1073) into SingleVariableDeclaration(1074) at 1", "Insert SimpleType: RexNode(1076) into SingleVariableDeclaration(1078) at 0", "Insert SimpleName: a0(1077) into SingleVariableDeclaration(1078) at 1", "Insert SimpleType: RexNode(1080) into SingleVariableDeclaration(1082) at 0", "Insert SimpleName: a1(1081) into SingleVariableDeclaration(1082) at 1", "Insert ReturnStatement(1089) into Block(1090) at 0", "Insert AssertStatement(4588) into Block(4824) at 0", "Move VariableDeclarationStatement(4570) into Block(4824) at 1", "Insert VariableDeclarationStatement(4616) into Block(4824) at 2", "Move VariableDeclarationStatement(4583) into Block(4824) at 3", "Move VariableDeclarationStatement(4597) into Block(4824) at 4", "Insert VariableDeclarationStatement(4651) into Block(4824) at 5", "Insert VariableDeclarationStatement(4658) into Block(4824) at 6", "Move VariableDeclarationStatement(4708) into Block(4824) at 7", "Insert VariableDeclarationStatement(4677) into Block(4824) at 8", "Move VariableDeclarationStatement(4631) into Block(4824) at 9", "Insert VariableDeclarationStatement(4701) into Block(4824) at 10", "Insert VariableDeclarationStatement(4711) into Block(4824) at 11", "Move VariableDeclarationStatement(4663) into Block(4824) at 12", "Move VariableDeclarationStatement(4675) into Block(4824) at 13", "Insert SwitchStatement(4823) into Block(4824) at 14", "Insert SimpleType: Pair(4828) into ParameterizedType: Pair<RexNode,RexNode>(4833) at 0", "Move SimpleType: RexNode(4759) into ParameterizedType: Pair<RexNode,RexNode>(4833) at 1", "Insert SimpleType: RexNode(4832) into ParameterizedType: Pair<RexNode,RexNode>(4833) at 2", "Insert SimpleType: SqlRexContext(4836) into SingleVariableDeclaration(4838) at 0", "Insert SimpleName: cx(4837) into SingleVariableDeclaration(4838) at 1", "Move SimpleType: SqlParserPos(4577) into SingleVariableDeclaration(4842) at 0", "Insert SimpleName: pos(4841) into SingleVariableDeclaration(4842) at 1", "Move SimpleType: SqlNode(4558) into SingleVariableDeclaration(4846) at 0", "Insert SimpleName: operand(4845) into SingleVariableDeclaration(4846) at 1", "Insert VariableDeclarationStatement(4852) into Block(4957) at 0", "Insert VariableDeclarationStatement(4858) into Block(4957) at 1", "Insert SwitchStatement(4930) into Block(4957) at 2", "Move VariableDeclarationStatement(4756) into Block(4957) at 3", "Insert VariableDeclarationStatement(4950) into Block(4957) at 4", "Insert ReturnStatement(4956) into Block(4957) at 5", "Insert SimpleName: RexBuilder(1071) into SimpleType: RexBuilder(1072) at 0", "Insert SimpleName: RexNode(1075) into SimpleType: RexNode(1076) at 0", "Insert SimpleName: RexNode(1079) into SimpleType: RexNode(1080) at 0", "Insert MethodInvocation(1088) into ReturnStatement(1089) at 0", "Insert InfixExpression: ==(4587) into AssertStatement(4588) at 0", "Insert ParameterizedType: Pair<RexNode,RexNode>(4596) into VariableDeclarationStatement(4609) at 1", "Insert Modifier: final(4610) into VariableDeclarationStatement(4616) at 0", "Insert SimpleType: RexNode(4612) into VariableDeclarationStatement(4616) at 1", "Insert VariableDeclarationFragment(4615) into VariableDeclarationStatement(4616) at 2", "Insert SimpleType: RexNode(4619) into VariableDeclarationStatement(4623) at 1", "Insert ParameterizedType: Pair<RexNode,RexNode>(4631) into VariableDeclarationStatement(4644) at 1", "Insert Modifier: final(4645) into VariableDeclarationStatement(4651) at 0", "Move SimpleType: RexNode(4666) into VariableDeclarationStatement(4651) at 1", "Insert VariableDeclarationFragment(4650) into VariableDeclarationStatement(4651) at 2", "Insert Modifier: final(4652) into VariableDeclarationStatement(4658) at 0", "Move SimpleType: RexNode(4654) into VariableDeclarationStatement(4658) at 1", "Insert VariableDeclarationFragment(4657) into VariableDeclarationStatement(4658) at 2", "Insert SimpleType: RexNode(4669) into VariableDeclarationStatement(4677) at 0", "Insert VariableDeclarationFragment(4676) into VariableDeclarationStatement(4677) at 1", "Move SimpleType: RexNode(4678) into VariableDeclarationStatement(4689) at 1", "Insert Modifier: final(4690) into VariableDeclarationStatement(4701) at 0", "Move SimpleType: RexNode(4690) into VariableDeclarationStatement(4701) at 1", "Insert VariableDeclarationFragment(4700) into VariableDeclarationStatement(4701) at 2", "Insert SimpleType: RexNode(4703) into VariableDeclarationStatement(4711) at 0", "Insert VariableDeclarationFragment(4710) into VariableDeclarationStatement(4711) at 1", "Move SimpleType: RexNode(4711) into VariableDeclarationStatement(4723) at 1", "Move SimpleType: RexNode(4727) into VariableDeclarationStatement(4735) at 1", "Insert QualifiedName: op.kind(4736) into SwitchStatement(4823) at 0", "Insert SwitchCase(4738) into SwitchStatement(4823) at 1", "Move ReturnStatement(4786) into SwitchStatement(4823) at 2", "Insert SwitchCase(4754) into SwitchStatement(4823) at 3", "Insert ReturnStatement(4768) into SwitchStatement(4823) at 4", "Insert SwitchCase(4770) into SwitchStatement(4823) at 5", "Insert ReturnStatement(4784) into SwitchStatement(4823) at 6", "Insert SwitchCase(4786) into SwitchStatement(4823) at 7", "Insert ReturnStatement(4792) into SwitchStatement(4823) at 8", "Insert SwitchCase(4794) into SwitchStatement(4823) at 9", "Insert ReturnStatement(4800) into SwitchStatement(4823) at 10", "Insert SwitchCase(4802) into SwitchStatement(4823) at 11", "Insert ReturnStatement(4808) into SwitchStatement(4823) at 12", "Insert SwitchCase(4810) into SwitchStatement(4823) at 13", "Insert ReturnStatement(4816) into SwitchStatement(4823) at 14", "Insert SwitchCase(4817) into SwitchStatement(4823) at 15", "Insert ThrowStatement(4822) into SwitchStatement(4823) at 16", "Insert SimpleName: Pair(4827) into SimpleType: Pair(4828) at 0", "Insert SimpleName: RexNode(4831) into SimpleType: RexNode(4832) at 0", "Insert SimpleName: SqlRexContext(4835) into SimpleType: SqlRexContext(4836) at 0", "Move Modifier: final(4688) into VariableDeclarationStatement(4852) at 0", "Insert SimpleType: SqlNode(4849) into VariableDeclarationStatement(4852) at 1", "Insert VariableDeclarationFragment(4851) into VariableDeclarationStatement(4852) at 2", "Insert Modifier: final(4853) into VariableDeclarationStatement(4858) at 0", "Insert SimpleType: SqlNode(4855) into VariableDeclarationStatement(4858) at 1", "Insert VariableDeclarationFragment(4857) into VariableDeclarationStatement(4858) at 2", "Insert MethodInvocation(4861) into SwitchStatement(4930) at 0", "Insert SwitchCase(4863) into SwitchStatement(4930) at 1", "Insert ExpressionStatement(4874) into SwitchStatement(4930) at 2", "Insert VariableDeclarationStatement(4888) into SwitchStatement(4930) at 3", "Insert VariableDeclarationStatement(4900) into SwitchStatement(4930) at 4", "Insert IfStatement(4919) into SwitchStatement(4930) at 5", "Insert BreakStatement(4920) into SwitchStatement(4930) at 6", "Insert SwitchCase(4921) into SwitchStatement(4930) at 7", "Insert ExpressionStatement(4925) into SwitchStatement(4930) at 8", "Insert ExpressionStatement(4929) into SwitchStatement(4930) at 9", "Insert SimpleType: RexNode(4933) into VariableDeclarationStatement(4940) at 1", "Move Modifier: final(4757) into VariableDeclarationStatement(4950) at 0", "Insert SimpleType: RexNode(4943) into VariableDeclarationStatement(4950) at 1", "Insert VariableDeclarationFragment(4949) into VariableDeclarationStatement(4950) at 2", "Insert MethodInvocation(4955) into ReturnStatement(4956) at 0", "Insert SimpleName: rexBuilder(1083) into MethodInvocation(1088) at 0", "Insert SimpleName: makeCall(1084) into MethodInvocation(1088) at 1", "Insert QualifiedName: SqlStdOperatorTable.EQUALS(1085) into MethodInvocation(1088) at 2", "Insert SimpleName: a0(1086) into MethodInvocation(1088) at 3", "Insert SimpleName: a1(1087) into MethodInvocation(1088) at 4", "Insert MethodInvocation(4585) into InfixExpression: ==(4587) at 0", "Insert NumberLiteral: 2(4586) into InfixExpression: ==(4587) at 1", "Insert SimpleType: Pair(4591) into ParameterizedType: Pair<RexNode,RexNode>(4596) at 0", "Insert SimpleType: RexNode(4593) into ParameterizedType: Pair<RexNode,RexNode>(4596) at 1", "Insert SimpleType: RexNode(4595) into ParameterizedType: Pair<RexNode,RexNode>(4596) at 2", "Update SimpleName: operands(4561) to left", "Insert SimpleName: RexNode(4611) into SimpleType: RexNode(4612) at 0", "Insert SimpleName: r0(4613) into VariableDeclarationFragment(4615) at 0", "Insert QualifiedName: left.left(4614) into VariableDeclarationFragment(4615) at 1", "Insert SimpleName: RexNode(4618) into SimpleType: RexNode(4619) at 0", "Update SimpleName: pos(4578) to r1", "Insert QualifiedName: left.right(4621) into VariableDeclarationFragment(4622) at 1", "Insert SimpleType: Pair(4626) into ParameterizedType: Pair<RexNode,RexNode>(4631) at 0", "Move SimpleType: RexNode(4743) into ParameterizedType: Pair<RexNode,RexNode>(4631) at 1", "Insert SimpleType: RexNode(4630) into ParameterizedType: Pair<RexNode,RexNode>(4631) at 2", "Update SimpleName: t1(4587) to right", "Insert SimpleName: r2(4648) into VariableDeclarationFragment(4650) at 0", "Insert QualifiedName: right.left(4649) into VariableDeclarationFragment(4650) at 1", "Insert SimpleName: r3(4655) into VariableDeclarationFragment(4657) at 0", "Insert QualifiedName: right.right(4656) into VariableDeclarationFragment(4657) at 1", "Insert SimpleName: RexNode(4668) into SimpleType: RexNode(4669) at 0", "Insert SimpleName: leftSwap(4670) into VariableDeclarationFragment(4676) at 0", "Move MethodInvocation(4719) into VariableDeclarationFragment(4676) at 1", "Update SimpleName: t3(4621) to s0", "Insert SimpleName: e0(4693) into VariableDeclarationFragment(4700) at 0", "Insert MethodInvocation(4699) into VariableDeclarationFragment(4700) at 1", "Insert SimpleName: RexNode(4702) into SimpleType: RexNode(4703) at 0", "Insert SimpleName: rightSwap(4704) into VariableDeclarationFragment(4710) at 0", "Move MethodInvocation(4751) into VariableDeclarationFragment(4710) at 1", "Update SimpleName: r0(4655) to s1", "Update SimpleName: r1(4667) to e1", "Insert SimpleName: OVERLAPS(4737) into SwitchCase(4738) at 0", "Insert SimpleName: CONTAINS(4753) into SwitchCase(4754) at 0", "Insert MethodInvocation(4767) into ReturnStatement(4768) at 0", "Insert SimpleName: PERIOD_EQUALS(4769) into SwitchCase(4770) at 0", "Insert MethodInvocation(4783) into ReturnStatement(4784) at 0", "Insert SimpleName: PRECEDES(4785) into SwitchCase(4786) at 0", "Insert MethodInvocation(4791) into ReturnStatement(4792) at 0", "Insert SimpleName: IMMEDIATELY_PRECEDES(4793) into SwitchCase(4794) at 0", "Insert MethodInvocation(4799) into ReturnStatement(4800) at 0", "Insert SimpleName: SUCCEEDS(4801) into SwitchCase(4802) at 0", "Insert MethodInvocation(4807) into ReturnStatement(4808) at 0", "Insert SimpleName: IMMEDIATELY_SUCCEEDS(4809) into SwitchCase(4810) at 0", "Insert MethodInvocation(4815) into ReturnStatement(4816) at 0", "Insert ClassInstanceCreation(4821) into ThrowStatement(4822) at 0", "Insert SimpleName: SqlNode(4848) into SimpleType: SqlNode(4849) at 0", "Insert SimpleName: a0(4850) into VariableDeclarationFragment(4851) at 0", "Insert SimpleName: SqlNode(4854) into SimpleType: SqlNode(4855) at 0", "Insert SimpleName: a1(4856) into VariableDeclarationFragment(4857) at 0", "Insert SimpleName: operand(4859) into MethodInvocation(4861) at 0", "Insert SimpleName: getKind(4860) into MethodInvocation(4861) at 1", "Insert SimpleName: ROW(4862) into SwitchCase(4863) at 0", "Insert Assignment: =(4873) into ExpressionStatement(4874) at 0", "Move Modifier: final(4709) into VariableDeclarationStatement(4888) at 0", "Insert SimpleType: SqlNode(4877) into VariableDeclarationStatement(4888) at 1", "Move VariableDeclarationFragment(4723) into VariableDeclarationStatement(4888) at 2", "Move Modifier: final(4725) into VariableDeclarationStatement(4900) at 0", "Move SimpleType: RelDataType(4620) into VariableDeclarationStatement(4900) at 1", "Insert VariableDeclarationFragment(4899) into VariableDeclarationStatement(4900) at 2", "Move MethodInvocation(4601) into IfStatement(4919) at 0", "Insert Block(4913) into IfStatement(4919) at 1", "Insert Block(4918) into IfStatement(4919) at 2", "Insert Assignment: =(4924) into ExpressionStatement(4925) at 0", "Insert Assignment: =(4928) into ExpressionStatement(4929) at 0", "Insert SimpleName: RexNode(4932) into SimpleType: RexNode(4933) at 0", "Update SimpleName: s1(4744) to r0", "Insert SimpleName: RexNode(4942) into SimpleType: RexNode(4943) at 0", "Insert SimpleName: r1(4944) into VariableDeclarationFragment(4949) at 0", "Insert MethodInvocation(4948) into VariableDeclarationFragment(4949) at 1", "Update SimpleName: r2(4765) to Pair", "Move SimpleName: r2(4765) into MethodInvocation(4955) at 0", "Update SimpleName: r3(4766) to of", "Move SimpleName: r3(4766) into MethodInvocation(4955) at 1", "Update SimpleName: r3(4768) to r0", "Move SimpleName: r3(4768) into MethodInvocation(4955) at 2", "Update SimpleName: r2(4769) to r1", "Move SimpleName: r2(4769) into MethodInvocation(4955) at 3", "Insert MethodInvocation(4583) into MethodInvocation(4585) at 0", "Insert SimpleName: size(4584) into MethodInvocation(4585) at 1", "Insert SimpleName: Pair(4590) into SimpleType: Pair(4591) at 0", "Insert SimpleName: RexNode(4592) into SimpleType: RexNode(4593) at 0", "Insert SimpleName: RexNode(4594) into SimpleType: RexNode(4595) at 0", "Insert SimpleName: convertOverlapsOperand(4598) into MethodInvocation(4607) at 0", "Insert SimpleName: cx(4599) into MethodInvocation(4607) at 1", "Move MethodInvocation(4581) into MethodInvocation(4607) at 2", "Insert MethodInvocation(4606) into MethodInvocation(4607) at 3", "Insert SimpleName: Pair(4625) into SimpleType: Pair(4626) at 0", "Update SimpleName: RelDataType(4585) to RexNode", "Move SimpleName: RelDataType(4585) into SimpleType: RexNode(4630) at 0", "Insert SimpleName: convertOverlapsOperand(4633) into MethodInvocation(4642) at 0", "Insert SimpleName: cx(4634) into MethodInvocation(4642) at 1", "Insert MethodInvocation(4641) into MethodInvocation(4642) at 3", "Update SimpleName: getValidatedNodeType(4625) to case_", "Insert SimpleName: rexBuilder(4683) into MethodInvocation(4687) at 1", "Insert SimpleName: leftSwap(4684) into MethodInvocation(4687) at 2", "Insert SimpleName: r0(4685) into MethodInvocation(4687) at 3", "Insert SimpleName: r1(4686) into MethodInvocation(4687) at 4", "Update SimpleName: isInterval(4633) to case_", "Move SimpleName: isInterval(4633) into MethodInvocation(4699) at 0", "Update SimpleName: t3(4634) to rexBuilder", "Move SimpleName: t3(4634) into MethodInvocation(4699) at 1", "Insert SimpleName: leftSwap(4696) into MethodInvocation(4699) at 2", "Update SimpleName: plus(4639) to r1", "Move SimpleName: plus(4639) into MethodInvocation(4699) at 3", "Update SimpleName: pos(4640) to r0", "Move SimpleName: pos(4640) into MethodInvocation(4699) at 4", "Update SimpleName: cx(4656) to case_", "Update SimpleName: convertExpression(4657) to rexBuilder", "Insert SimpleName: rightSwap(4718) into MethodInvocation(4721) at 2", "Insert SimpleName: r2(4719) into MethodInvocation(4721) at 3", "Insert SimpleName: r3(4720) into MethodInvocation(4721) at 4", "Update SimpleName: cx(4668) to case_", "Update SimpleName: convertExpression(4669) to rexBuilder", "Insert SimpleName: rightSwap(4730) into MethodInvocation(4733) at 2", "Insert SimpleName: r3(4731) into MethodInvocation(4733) at 3", "Insert SimpleName: r2(4732) into MethodInvocation(4733) at 4", "Insert SimpleName: and(4755) into MethodInvocation(4767) at 0", "Insert SimpleName: rexBuilder(4756) into MethodInvocation(4767) at 1", "Insert MethodInvocation(4761) into MethodInvocation(4767) at 2", "Insert MethodInvocation(4766) into MethodInvocation(4767) at 3", "Insert SimpleName: and(4771) into MethodInvocation(4783) at 0", "Insert SimpleName: rexBuilder(4772) into MethodInvocation(4783) at 1", "Insert MethodInvocation(4777) into MethodInvocation(4783) at 2", "Insert MethodInvocation(4782) into MethodInvocation(4783) at 3", "Insert SimpleName: le(4787) into MethodInvocation(4791) at 0", "Insert SimpleName: rexBuilder(4788) into MethodInvocation(4791) at 1", "Insert SimpleName: e0(4789) into MethodInvocation(4791) at 2", "Insert SimpleName: s1(4790) into MethodInvocation(4791) at 3", "Insert SimpleName: eq(4795) into MethodInvocation(4799) at 0", "Insert SimpleName: rexBuilder(4796) into MethodInvocation(4799) at 1", "Insert SimpleName: e0(4797) into MethodInvocation(4799) at 2", "Insert SimpleName: s1(4798) into MethodInvocation(4799) at 3", "Insert SimpleName: ge(4803) into MethodInvocation(4807) at 0", "Insert SimpleName: rexBuilder(4804) into MethodInvocation(4807) at 1", "Insert SimpleName: s0(4805) into MethodInvocation(4807) at 2", "Insert SimpleName: e1(4806) into MethodInvocation(4807) at 3", "Insert SimpleName: eq(4811) into MethodInvocation(4815) at 0", "Insert SimpleName: rexBuilder(4812) into MethodInvocation(4815) at 1", "Insert SimpleName: s0(4813) into MethodInvocation(4815) at 2", "Insert SimpleName: e1(4814) into MethodInvocation(4815) at 3", "Insert SimpleType: AssertionError(4819) into ClassInstanceCreation(4821) at 0", "Insert SimpleName: op(4820) into ClassInstanceCreation(4821) at 1", "Insert SimpleName: a0(4864) into Assignment: =(4873) at 0", "Insert MethodInvocation(4872) into Assignment: =(4873) at 1", "Insert SimpleName: SqlNode(4876) into SimpleType: SqlNode(4877) at 0", "Update SimpleName: s0(4712) to a10", "Update SimpleName: e0(4728) to t1", "Move SimpleName: e0(4728) into VariableDeclarationFragment(4899) at 0", "Insert MethodInvocation(4898) into VariableDeclarationFragment(4899) at 1", "Insert ExpressionStatement(4912) into Block(4913) at 0", "Insert ExpressionStatement(4917) into Block(4918) at 0", "Insert SimpleName: a0(4922) into Assignment: =(4924) at 0", "Insert SimpleName: operand(4923) into Assignment: =(4924) at 1", "Insert SimpleName: a1(4926) into Assignment: =(4928) at 0", "Insert SimpleName: operand(4927) into Assignment: =(4928) at 1", "Update SimpleName: case_(4745) to cx", "Update SimpleName: rexBuilder(4746) to convertExpression", "Update SimpleName: r2(4752) to a0", "Update SimpleName: rexBuilder(4762) to cx", "Move SimpleName: rexBuilder(4762) into MethodInvocation(4948) at 0", "Update SimpleName: le(4763) to convertExpression", "Move SimpleName: le(4763) into MethodInvocation(4948) at 1", "Update SimpleName: rexBuilder(4764) to a1", "Move SimpleName: rexBuilder(4764) into MethodInvocation(4948) at 2", "Insert SimpleName: call(4581) into MethodInvocation(4583) at 0", "Insert SimpleName: getOperandList(4582) into MethodInvocation(4583) at 1", "Insert SimpleName: call(4603) into MethodInvocation(4606) at 0", "Update SimpleName: getOperands(4567) to operand", "Move SimpleName: getOperands(4567) into MethodInvocation(4606) at 1", "Insert NumberLiteral: 0(4605) into MethodInvocation(4606) at 2", "Update SimpleName: cx(4588) to call", "Update SimpleName: getValidator(4589) to getParserPosition", "Update SimpleName: getValidatedNodeType(4591) to call", "Move SimpleName: getValidatedNodeType(4591) into MethodInvocation(4641) at 0", "Insert SimpleName: operand(4639) into MethodInvocation(4641) at 1", "Insert NumberLiteral: 1(4640) into MethodInvocation(4641) at 2", "Insert SimpleName: le(4757) into MethodInvocation(4761) at 0", "Insert SimpleName: rexBuilder(4758) into MethodInvocation(4761) at 1", "Insert SimpleName: s0(4759) into MethodInvocation(4761) at 2", "Insert SimpleName: s1(4760) into MethodInvocation(4761) at 3", "Insert SimpleName: ge(4762) into MethodInvocation(4766) at 0", "Insert SimpleName: rexBuilder(4763) into MethodInvocation(4766) at 1", "Insert SimpleName: e0(4764) into MethodInvocation(4766) at 2", "Insert SimpleName: e1(4765) into MethodInvocation(4766) at 3", "Insert SimpleName: eq(4773) into MethodInvocation(4777) at 0", "Insert SimpleName: rexBuilder(4774) into MethodInvocation(4777) at 1", "Insert SimpleName: s0(4775) into MethodInvocation(4777) at 2", "Insert SimpleName: s1(4776) into MethodInvocation(4777) at 3", "Insert SimpleName: eq(4778) into MethodInvocation(4782) at 0", "Insert SimpleName: rexBuilder(4779) into MethodInvocation(4782) at 1", "Insert SimpleName: e0(4780) into MethodInvocation(4782) at 2", "Insert SimpleName: e1(4781) into MethodInvocation(4782) at 3", "Insert SimpleName: AssertionError(4818) into SimpleType: AssertionError(4819) at 0", "Insert ParenthesizedExpression(4869) into MethodInvocation(4872) at 0", "Insert SimpleName: operand(4870) into MethodInvocation(4872) at 1", "Insert NumberLiteral: 0(4871) into MethodInvocation(4872) at 2", "Insert ParenthesizedExpression(4883) into MethodInvocation(4886) at 0", "Update SimpleName: r0(4720) to operand", "Insert NumberLiteral: 1(4885) into MethodInvocation(4886) at 2", "Move MethodInvocation(4624) into MethodInvocation(4898) at 0", "Update SimpleName: case_(4729) to getValidatedNodeType", "Move SimpleName: case_(4729) into MethodInvocation(4898) at 1", "Update SimpleName: rexBuilder(4730) to a10", "Move SimpleName: rexBuilder(4730) into MethodInvocation(4898) at 2", "Insert Assignment: =(4911) into ExpressionStatement(4912) at 0", "Insert Assignment: =(4916) into ExpressionStatement(4917) at 0", "Insert CastExpression(4868) into ParenthesizedExpression(4869) at 0", "Insert CastExpression(4882) into ParenthesizedExpression(4883) at 0", "Insert SimpleName: a1(4905) into Assignment: =(4911) at 0", "Insert MethodInvocation(4910) into Assignment: =(4911) at 1", "Insert SimpleName: a1(4914) into Assignment: =(4916) at 0", "Insert SimpleName: a10(4915) into Assignment: =(4916) at 1", "Insert SimpleType: SqlCall(4866) into CastExpression(4868) at 0", "Insert SimpleName: operand(4867) into CastExpression(4868) at 1", "Insert SimpleType: SqlCall(4880) into CastExpression(4882) at 0", "Insert SimpleName: operand(4881) into CastExpression(4882) at 1", "Update SimpleName: le(4731) to plus", "Move SimpleName: le(4731) into MethodInvocation(4910) at 0", "Update SimpleName: rexBuilder(4732) to pos", "Move SimpleName: rexBuilder(4732) into MethodInvocation(4910) at 1", "Update SimpleName: r0(4733) to a0", "Move SimpleName: r0(4733) into MethodInvocation(4910) at 2", "Update SimpleName: r1(4734) to a10", "Move SimpleName: r1(4734) into MethodInvocation(4910) at 3", "Insert SimpleName: SqlCall(4865) into SimpleType: SqlCall(4866) at 0", "Insert SimpleName: SqlCall(4879) into SimpleType: SqlCall(4880) at 0", "Delete Dimension(4559)", "Delete ArrayType: SqlNode[](4560)", "Delete SimpleName: SqlBasicCall(4562)", "Delete SimpleType: SqlBasicCall(4563)", "Delete SimpleName: call(4564)", "Delete CastExpression(4565)", "Delete ParenthesizedExpression(4566)", "Delete SimpleType: RelDataType(4586)", "Delete SimpleName: operands(4592)", "Delete NumberLiteral: 1(4593)", "Delete ArrayAccess(4594)", "Delete SimpleName: operands(4626)", "Delete NumberLiteral: 3(4627)", "Delete ArrayAccess(4628)", "Delete SimpleName: operands(4658)", "Delete NumberLiteral: 0(4659)", "Delete ArrayAccess(4660)", "Delete SimpleName: operands(4670)", "Delete NumberLiteral: 1(4671)", "Delete ArrayAccess(4672)", "Delete SimpleName: case_(4713)", "Delete SimpleName: rexBuilder(4714)", "Delete SimpleName: r1(4721)", "Delete SimpleName: r3(4753)", "Delete QualifiedName: operands.length(4571)", "Delete NumberLiteral: 4(4572)", "Delete InfixExpression: ==(4573)", "Delete AssertStatement(4574)", "Delete SimpleName: operands(4602)", "Delete NumberLiteral: 1(4603)", "Delete ArrayAccess(4604)", "Delete SimpleName: plus(4605)", "Delete SimpleName: pos(4606)", "Delete SimpleName: operands(4607)", "Delete NumberLiteral: 0(4608)", "Delete ArrayAccess(4609)", "Delete SimpleName: operands(4610)", "Delete NumberLiteral: 1(4611)", "Delete ArrayAccess(4612)", "Delete MethodInvocation(4613)", "Delete Assignment: =(4614)", "Delete ExpressionStatement(4615)", "Delete Block(4616)", "Delete IfStatement(4617)", "Delete SimpleName: SqlTypeUtil(4632)", "Delete MethodInvocation(4635)", "Delete SimpleName: operands(4636)", "Delete NumberLiteral: 3(4637)", "Delete ArrayAccess(4638)", "Delete SimpleName: operands(4641)", "Delete NumberLiteral: 2(4642)", "Delete ArrayAccess(4643)", "Delete SimpleName: operands(4644)", "Delete NumberLiteral: 3(4645)", "Delete ArrayAccess(4646)", "Delete MethodInvocation(4647)", "Delete Assignment: =(4648)", "Delete ExpressionStatement(4649)", "Delete Block(4650)", "Delete IfStatement(4651)", "Delete Modifier: final(4676)", "Delete SimpleName: r2(4679)", "Delete SimpleName: cx(4680)", "Delete SimpleName: convertExpression(4681)", "Delete SimpleName: operands(4682)", "Delete NumberLiteral: 2(4683)", "Delete ArrayAccess(4684)", "Delete MethodInvocation(4685)", "Delete VariableDeclarationFragment(4686)", "Delete VariableDeclarationStatement(4687)", "Delete SimpleName: r3(4691)", "Delete SimpleName: cx(4692)", "Delete SimpleName: convertExpression(4693)", "Delete SimpleName: operands(4694)", "Delete NumberLiteral: 3(4695)", "Delete ArrayAccess(4696)", "Delete MethodInvocation(4697)", "Delete VariableDeclarationFragment(4698)", "Delete VariableDeclarationStatement(4699)", "Delete VariableDeclarationStatement(4724)", "Delete MethodInvocation(4735)", "Delete SimpleName: r1(4736)", "Delete SimpleName: r0(4737)", "Delete MethodInvocation(4738)", "Delete VariableDeclarationFragment(4739)", "Delete VariableDeclarationStatement(4740)", "Delete SimpleName: e1(4760)", "Delete SimpleName: case_(4761)", "Delete MethodInvocation(4767)", "Delete MethodInvocation(4770)", "Delete VariableDeclarationFragment(4771)", "Delete VariableDeclarationStatement(4772)", "Delete Block(4787)", "Delete MethodDeclaration(4788)"]}}, {"SqlOverlapsOperator_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 2", "MOV ImportDeclaration to CompilationUnit at 15"]}, {"root": "UPDATE from org.apache.calcite.sql.SqlSpecialOperator to org.apache.calcite.sql.SqlBinaryOperator", "operations": ["UPD QualifiedName: org.apache.calcite.sql.SqlSpecialOperator from org.apache.calcite.sql.SqlSpecialOperator to org.apache.calcite.sql.SqlBinaryOperator"]}, {"root": "UPDATE from org.apache.calcite.sql.validate.SqlValidator to org.apache.calcite.sql.type.SqlSingleOperandTypeChecker", "operations": ["UPD QualifiedName: org.apache.calcite.sql.validate.SqlValidator from org.apache.calcite.sql.validate.SqlValidator to org.apache.calcite.sql.type.SqlSingleOperandTypeChecker"]}, {"root": "UPDATE from SqlSpecialOperator to SqlBinaryOperator", "operations": ["UPD SimpleType: SqlSpecialOperator from SqlSpecialOperator to SqlBinaryOperator", "UPD SimpleName: SqlSpecialOperator from SqlSpecialOperator to SqlBinaryOperator"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 1", "INS SimpleName: SqlKind to SimpleType: SqlKind at 0", "INS SimpleName: kind to SingleVariableDeclaration at 1", "INS SimpleName: SqlOverlapsOperator to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS SimpleType: SqlKind to SingleVariableDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 5", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: writer to MethodInvocation at 1", "INS SimpleName: arg to MethodInvocation at 0", "INS SimpleName: rightPrec to MethodInvocation at 4", "INS NumberLiteral: 1 to MethodInvocation at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 8", "INS SimpleName: call to MethodInvocation at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS ExpressionStatement to Block at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 6", "operations": ["INS SimpleName: isCallTo to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 2", "INS StringLiteral: \"PERIOD\" to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Block to MethodDeclaration at 7", "INS SimpleName: operand to MethodInvocation at 1", "INS SimpleName: SqlUtil to MethodInvocation at 0", "INS SimpleName: writer to MethodInvocation at 0", "INS SimpleName: keyword to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SimpleName: writer to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: leftPrec to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS Block to IfStatement at 1", "INS SimpleName: arg to MethodDeclaration at 1", "INS SimpleName: operand to MethodInvocation at 1", "INS SimpleName: rightPrec to SingleVariableDeclaration at 1", "INS SimpleName: i to MethodInvocation at 2", "INS SimpleName: SqlWriter to SimpleType: SqlWriter at 0", "INS SimpleName: call to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: row to VariableDeclarationFragment at 0", "INS PrimitiveType: void to MethodDeclaration at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: SqlCall to SimpleType: SqlCall at 0", "INS IfStatement to Block at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: call to SingleVariableDeclaration at 1", "INS SimpleName: i to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleType: SqlWriter to SingleVariableDeclaration at 0", "INS SimpleName: SqlCall to SimpleType: SqlCall at 0", "INS QualifiedName: SqlStdOperatorTable.ROW to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: SqlCall to VariableDeclarationStatement at 0", "INS SimpleType: SqlCall to SingleVariableDeclaration at 0", "INS SimpleName: call to MethodInvocation at 0", "INS SimpleName: i to SingleVariableDeclaration at 1", "INS VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV Modifier: public to MethodDeclaration at 1", "MOV PrimitiveType: void to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 7", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV SimpleName: unparse to MethodDeclaration at 3"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 4", "MOV ExpressionStatement to Block at 5", "MOV ExpressionStatement to Block at 4", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 6", "MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 3", "MOV ExpressionStatement to Block at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleType: SqlSingleOperandTypeChecker to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: SqlSingleOperandTypeChecker to SimpleType: SqlSingleOperandTypeChecker at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: rightChecker to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2"]}, {"root": "INS SwitchStatement to Block at 4", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS BreakStatement to SwitchStatement at 6", "INS SimpleName: rightChecker to Assignment: = at 0", "INS ExpressionStatement to SwitchStatement at 5", "INS SimpleName: CONTAINS to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 4", "INS SwitchStatement to Block at 4", "INS SimpleName: kind to SwitchStatement at 0", "INS QualifiedName: OperandTypes.PERIOD_OR_DATETIME to Assignment: = at 1", "INS QualifiedName: OperandTypes.PERIOD to Assignment: = at 1", "INS ExpressionStatement to SwitchStatement at 2", "INS SwitchCase to SwitchStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: rightChecker to Assignment: = at 0", "INS BreakStatement to SwitchStatement at 3"]}, {"root": "INS IfStatement to Block at 8", "operations": ["INS IfStatement to Block at 8", "INS Block to IfStatement at 1", "INS PrefixExpression: ! to IfStatement at 0"]}, {"root": "UPDATE from SqlKind.OVERLAPS to kind.sql", "operations": ["UPD QualifiedName: SqlKind.OVERLAPS from SqlKind.OVERLAPS to kind.sql"]}, {"root": "INS SimpleName: kind to SuperConstructorInvocation at 2", "operations": ["INS SimpleName: kind to SuperConstructorInvocation at 2"]}, {"root": "INS MethodInvocation to SuperConstructorInvocation at 7", "operations": ["INS MethodInvocation to SuperConstructorInvocation at 7", "INS QualifiedName: kind.sql to InfixExpression: + at 1", "INS StringLiteral: \" <PERIOD>'\" to InfixExpression: + at 2", "INS QualifiedName: OperandTypes.PERIOD to MethodInvocation at 4", "INS QualifiedName: OperandTypes.PERIOD to MethodInvocation at 3", "INS SimpleName: OperandTypes to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: sequence to MethodInvocation at 1", "INS StringLiteral: \"'<PERIOD> \" to InfixExpression: + at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: RelDataType to VariableDeclarationStatement at 1"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: RelDataType to VariableDeclarationStatement at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV NumberLiteral: 0 to MethodInvocation at 5", "MOV SimpleName: operand to MethodInvocation at 3", "MOV SimpleName: call to MethodInvocation at 2"]}, {"root": "UPDATE from operand to leftPrec", "operations": ["UPD SimpleName: operand from operand to leftPrec"]}, {"root": "UPDATE from unparse to arg", "operations": ["UPD SimpleName: unparse from unparse to arg"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: leftPrec to MethodInvocation at 3", "MOV SimpleName: rightPrec to MethodInvocation at 4", "MOV SimpleName: writer to MethodInvocation at 1", "MOV SimpleName: unparse to MethodInvocation at 0"]}, {"root": "UPDATE from 4 to 2", "operations": ["UPD NumberLiteral: 4 from 4 to 2"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 2"]}, {"root": "INS QualifiedName: SqlWriter.FrameTypeEnum.SIMPLE to MethodInvocation at 2", "operations": ["INS QualifiedName: SqlWriter.FrameTypeEnum.SIMPLE to MethodInvocation at 2"]}, {"root": "UPDATE from OperandTypes.DATETIME to OperandTypes.PERIOD", "operations": ["UPD QualifiedName: OperandTypes.DATETIME from OperandTypes.DATETIME to OperandTypes.PERIOD"]}, {"root": "UPDATE from checkSingleOperandType to rightChecker", "operations": ["UPD SimpleName: checkSingleOperandType from checkSingleOperandType to rightChecker"]}, {"root": "UPDATE from callBinding to checkSingleOperandType", "operations": ["UPD SimpleName: callBinding from callBinding to checkSingleOperandType"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: callBinding to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: callBinding to MethodInvocation at 0", "MOV SimpleName: operand to MethodInvocation at 1", "MOV NumberLiteral: 0 to MethodInvocation at 2"]}, {"root": "UPDATE from operand to getOperandType", "operations": ["UPD SimpleName: operand from operand to getOperandType", "UPD SimpleName: deriveType from deriveType to getOperandType"]}, {"root": "UPDATE from validator to callBinding", "operations": ["UPD SimpleName: validator from validator to callBinding"]}, {"root": "INS NumberLiteral: 1 to MethodInvocation at 2", "operations": ["INS NumberLiteral: 1 to MethodInvocation at 2"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: RelDataType to VariableDeclarationStatement at 1"]}, {"root": "INS Modifier: final to VariableDeclarationStatement at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: RelDataType to VariableDeclarationStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "UPDATE from t0 to t00", "operations": ["UPD SimpleName: t0 from t0 to t00", "UPD SimpleName: t2 from t2 to t00"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getType to MethodInvocation at 1"]}, {"root": "UPDATE from t1 to t10", "operations": ["UPD SimpleName: t1 from t1 to t10", "UPD SimpleName: t3 from t3 to t10"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getType to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from call to row", "operations": ["UPD SimpleName: call from call to row", "UPD SimpleName: call from call to row"]}, {"root": "UPDATE from 3 to 0", "operations": ["UPD NumberLiteral: 3 from 3 to 0", "UPD NumberLiteral: 1 from 1 to 0", "UPD NumberLiteral: 2 from 2 to 0"]}, {"root": "UPDATE from 2 to 1", "operations": ["UPD NumberLiteral: 2 from 2 to 1"]}, {"root": "INS SimpleName: i to MethodInvocation at 2", "operations": ["INS SimpleName: i to MethodInvocation at 2"]}, {"root": "UPDATE from scope to get", "operations": ["UPD SimpleName: scope from scope to get", "UPD SimpleName: scope from scope to get"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: deriveType to MethodInvocation at 1", "MOV SimpleName: scope to MethodInvocation at 1", "MOV SimpleName: validator to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV NumberLiteral: 2 to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: scope to MethodInvocation at 1", "MOV SimpleName: deriveType to MethodInvocation at 1", "MOV SimpleName: validator to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV NumberLiteral: 3 to MethodInvocation at 2"]}, {"root": "UPDATE from validator to t0", "operations": ["UPD SimpleName: validator from validator to t0"]}, {"root": "UPDATE from deriveType to getFieldList", "operations": ["UPD SimpleName: deriveType from deriveType to getFieldList", "UPD SimpleName: deriveType from deriveType to getFieldList"]}, {"root": "UPDATE from validator to t1", "operations": ["UPD SimpleName: validator from validator to t1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.calcite.sql.validate.SqlValidatorScope"]}, {"root": "DEL StringLiteral: \"OVERLAPS\"", "operations": ["DEL StringLiteral: \"OVERLAPS\""]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL SimpleName: FRAME_TYPE", "operations": ["DEL SimpleName: FRAME_TYPE"]}, {"root": "DEL StringLiteral: \"(\"", "operations": ["DEL StringLiteral: \"(\""]}, {"root": "DEL StringLiteral: \")\"", "operations": ["DEL StringLiteral: \")\""]}, {"root": "DEL NumberLiteral: 3", "operations": ["DEL NumberLiteral: 3"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: SqlWriter.FrameType", "DEL QualifiedName: SqlWriter.FrameType", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL StringLiteral: \"OVERLAPS\"", "DEL SimpleName: create", "DEL Modifier: static", "DEL SimpleName: FRAME_TYPE", "DEL Modifier: private", "DEL QualifiedName: SqlWriter.FrameTypeEnum", "DEL Modifier: final", "DEL VariableDeclarationFragment"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL SimpleName: SqlOverlapsOperator", "DEL MethodDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL StringLiteral: \",\"", "DEL BooleanLiteral: true", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: sep", "DEL MethodInvocation", "DEL SimpleName: writer", "DEL Block", "DEL ExpressionStatement", "DEL ExpressionStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: String", "DEL MethodDeclaration", "DEL InfixExpression: ==", "DEL SingleVariableDeclaration", "DEL SimpleName: operandsCount", "DEL Modifier: public", "DEL SimpleType: String", "DEL SimpleName: getSignatureTemplate", "DEL Block", "DEL ReturnStatement", "DEL StringLiteral: \"({1}, {2}) {0} ({3}, {4})\"", "DEL SimpleName: operandsCount", "DEL AssertStatement", "DEL PrimitiveType: int", "DEL NumberLiteral: 4"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: SqlValidator", "DEL SimpleName: getValidator", "DEL VariableDeclarationFragment", "DEL SimpleType: SqlValidator", "DEL SimpleName: validator", "DEL MethodInvocation", "DEL SimpleName: callBinding", "DEL VariableDeclarationStatement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: scope", "DEL SimpleType: SqlValidatorScope", "DEL SimpleName: SqlValidatorScope", "DEL SimpleName: callBinding", "DEL SimpleName: getScope"]}, {"root": "DEL QualifiedName: OperandTypes.DATETIME", "operations": ["DEL QualifiedName: OperandTypes.DATETIME"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL NumberLiteral: 2", "DEL SimpleName: operand"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: validator", "DEL MethodInvocation", "DEL SimpleName: deriveType", "DEL SimpleName: scope", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: scope", "operations": ["DEL SimpleName: scope"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: callBinding", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: operand"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: callBinding", "DEL MethodInvocation", "DEL SimpleName: operand", "DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL MethodInvocation", "DEL ReturnStatement", "DEL BooleanLiteral: false", "DEL Block", "DEL Block", "DEL ThrowStatement", "DEL SimpleName: newValidationSignatureError", "DEL SimpleName: throwOnFailure", "DEL IfStatement", "DEL SimpleName: callBinding"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: t2", "DEL SimpleName: newValidationSignatureError", "DEL IfStatement", "DEL PrefixExpression: !", "DEL ReturnStatement", "DEL SimpleName: callBinding", "DEL BooleanLiteral: false", "DEL MethodInvocation", "DEL SimpleName: sameNamedType", "DEL SimpleName: throwOnFailure", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: SqlTypeUtil", "DEL ThrowStatement", "DEL SimpleName: t0", "DEL IfStatement", "DEL Block"]}, {"root": "DEL IfStatement", "operations": ["DEL PrefixExpression: !", "DEL MethodInvocation", "DEL SimpleName: SqlTypeUtil", "DEL SimpleName: isInterval", "DEL IfStatement", "DEL IfStatement", "DEL SimpleName: t1", "DEL Block"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL Block", "DEL SimpleName: t3", "DEL SimpleName: SqlTypeUtil", "DEL SimpleName: sameNamedType", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: SqlTypeUtil", "DEL ReturnStatement", "DEL SimpleName: callBinding", "DEL SimpleName: newValidationSignatureError", "DEL SimpleName: newValidationSignatureError", "DEL IfStatement", "DEL SimpleName: isInterval", "DEL MethodInvocation", "DEL SimpleName: SqlTypeUtil", "DEL Block", "DEL SimpleName: t3", "DEL PrefixExpression: !", "DEL SimpleName: throwOnFailure", "DEL Block", "DEL SimpleName: callBinding", "DEL PrefixExpression: !", "DEL Block", "DEL Block", "DEL SimpleName: t2", "DEL ThrowStatement", "DEL ThrowStatement", "DEL BooleanLiteral: false", "DEL IfStatement", "DEL SimpleName: isDatetime", "DEL IfStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: throwOnFailure", "DEL SimpleName: t3", "DEL ReturnStatement", "DEL BooleanLiteral: false", "DEL MethodInvocation"]}]}}, {"SqlOverlapsOperator_diff": {"operations": ["Move ImportDeclaration(13) into CompilationUnit(463) at 2", "Move ImportDeclaration(27) into CompilationUnit(463) at 15", "Update QualifiedName: org.apache.calcite.sql.SqlSpecialOperator(12) to org.apache.calcite.sql.SqlBinaryOperator", "Update QualifiedName: org.apache.calcite.sql.validate.SqlValidator(28) to org.apache.calcite.sql.type.SqlSingleOperandTypeChecker", "Update SimpleType: SqlSpecialOperator(43) to SqlBinaryOperator", "Insert MethodDeclaration(64) into TypeDeclaration: class(462) at 4", "Insert MethodDeclaration(122) into TypeDeclaration: class(462) at 5", "Insert MethodDeclaration(216) into TypeDeclaration: class(462) at 6", "Update SimpleName: SqlSpecialOperator(42) to SqlBinaryOperator", "Insert SimpleName: SqlOverlapsOperator(42) into MethodDeclaration(64) at 0", "Insert SingleVariableDeclaration(46) into MethodDeclaration(64) at 1", "Move Block(66) into MethodDeclaration(64) at 2", "Insert MarkerAnnotation(66) into MethodDeclaration(122) at 0", "Move Modifier: public(68) into MethodDeclaration(122) at 1", "Move PrimitiveType: void(69) into MethodDeclaration(122) at 2", "Move SimpleName: unparse(70) into MethodDeclaration(122) at 3", "Move SingleVariableDeclaration(74) into MethodDeclaration(122) at 4", "Move SingleVariableDeclaration(78) into MethodDeclaration(122) at 5", "Move SingleVariableDeclaration(81) into MethodDeclaration(122) at 6", "Move SingleVariableDeclaration(84) into MethodDeclaration(122) at 7", "Insert Block(121) into MethodDeclaration(122) at 8", "Insert PrimitiveType: void(123) into MethodDeclaration(216) at 0", "Insert SimpleName: arg(124) into MethodDeclaration(216) at 1", "Insert SingleVariableDeclaration(128) into MethodDeclaration(216) at 2", "Insert SingleVariableDeclaration(132) into MethodDeclaration(216) at 3", "Insert SingleVariableDeclaration(135) into MethodDeclaration(216) at 4", "Insert SingleVariableDeclaration(138) into MethodDeclaration(216) at 5", "Insert SingleVariableDeclaration(141) into MethodDeclaration(216) at 6", "Insert Block(215) into MethodDeclaration(216) at 7", "Insert SimpleType: SqlKind(44) into SingleVariableDeclaration(46) at 0", "Insert SimpleName: kind(45) into SingleVariableDeclaration(46) at 1", "Insert SimpleName: Override(65) into MarkerAnnotation(66) at 0", "Move VariableDeclarationStatement(96) into Block(121) at 0", "Insert ExpressionStatement(101) into Block(121) at 1", "Move ExpressionStatement(134) into Block(121) at 2", "Insert ExpressionStatement(115) into Block(121) at 3", "Move ExpressionStatement(171) into Block(121) at 4", "Insert SimpleType: SqlWriter(126) into SingleVariableDeclaration(128) at 0", "Insert SimpleName: writer(127) into SingleVariableDeclaration(128) at 1", "Insert SimpleType: SqlCall(130) into SingleVariableDeclaration(132) at 0", "Insert SimpleName: call(131) into SingleVariableDeclaration(132) at 1", "Insert PrimitiveType: int(133) into SingleVariableDeclaration(135) at 0", "Insert SimpleName: leftPrec(134) into SingleVariableDeclaration(135) at 1", "Insert PrimitiveType: int(136) into SingleVariableDeclaration(138) at 0", "Insert SimpleName: rightPrec(137) into SingleVariableDeclaration(138) at 1", "Insert PrimitiveType: int(139) into SingleVariableDeclaration(141) at 0", "Insert SimpleName: i(140) into SingleVariableDeclaration(141) at 1", "Insert IfStatement(214) into Block(215) at 0", "Insert VariableDeclarationStatement(355) into Block(460) at 1", "Insert SwitchStatement(370) into Block(460) at 2", "Insert IfStatement(457) into Block(460) at 6", "Insert SimpleName: SqlKind(43) into SimpleType: SqlKind(44) at 0", "Update QualifiedName: SqlKind.OVERLAPS(59) to kind.sql", "Insert SimpleName: kind(48) into SuperConstructorInvocation(62) at 1", "Insert MethodInvocation(61) into SuperConstructorInvocation(62) at 6", "Insert MethodInvocation(100) into ExpressionStatement(101) at 0", "Insert MethodInvocation(114) into ExpressionStatement(115) at 0", "Insert SimpleName: SqlWriter(125) into SimpleType: SqlWriter(126) at 0", "Insert SimpleName: SqlCall(129) into SimpleType: SqlCall(130) at 0", "Insert MethodInvocation(149) into IfStatement(214) at 0", "Insert Block(202) into IfStatement(214) at 1", "Insert Block(213) into IfStatement(214) at 2", "Move Block(351) into IfStatement(349) at 1", "Insert Modifier: final(350) into VariableDeclarationStatement(355) at 0", "Insert SimpleType: SqlSingleOperandTypeChecker(352) into VariableDeclarationStatement(355) at 1", "Insert VariableDeclarationFragment(354) into VariableDeclarationStatement(355) at 2", "Insert SimpleName: kind(356) into SwitchStatement(370) at 0", "Insert SwitchCase(358) into SwitchStatement(370) at 1", "Insert ExpressionStatement(362) into SwitchStatement(370) at 2", "Insert BreakStatement(363) into SwitchStatement(370) at 3", "Insert SwitchCase(364) into SwitchStatement(370) at 4", "Insert ExpressionStatement(368) into SwitchStatement(370) at 5", "Insert BreakStatement(369) into SwitchStatement(370) at 6", "Move Block(336) into IfStatement(385) at 1", "Insert Modifier: final(386) into VariableDeclarationStatement(395) at 0", "Move SimpleType: RelDataType(393) into VariableDeclarationStatement(395) at 1", "Insert Modifier: final(396) into VariableDeclarationStatement(405) at 0", "Move SimpleType: RelDataType(380) into VariableDeclarationStatement(405) at 1", "Insert PrefixExpression: !(410) into IfStatement(457) at 0", "Insert Block(456) into IfStatement(457) at 1", "Insert SimpleName: OperandTypes(53) into MethodInvocation(61) at 0", "Insert SimpleName: sequence(54) into MethodInvocation(61) at 1", "Insert InfixExpression: +(58) into MethodInvocation(61) at 2", "Insert QualifiedName: OperandTypes.PERIOD(59) into MethodInvocation(61) at 3", "Insert QualifiedName: OperandTypes.PERIOD(60) into MethodInvocation(61) at 4", "Insert SimpleName: arg(94) into MethodInvocation(100) at 0", "Insert SimpleName: writer(95) into MethodInvocation(100) at 1", "Move SimpleName: call(97) into MethodInvocation(100) at 2", "Update SimpleName: operand(98) to leftPrec", "Move SimpleName: operand(98) into MethodInvocation(100) at 3", "Insert SimpleName: rightPrec(98) into MethodInvocation(100) at 4", "Move NumberLiteral: 0(99) into MethodInvocation(100) at 5", "Update SimpleName: unparse(101) to arg", "Move SimpleName: unparse(101) into MethodInvocation(114) at 0", "Move SimpleName: writer(102) into MethodInvocation(114) at 1", "Insert SimpleName: call(110) into MethodInvocation(114) at 2", "Move SimpleName: leftPrec(103) into MethodInvocation(114) at 3", "Move SimpleName: rightPrec(104) into MethodInvocation(114) at 4", "Insert NumberLiteral: 1(113) into MethodInvocation(114) at 5", "Insert SimpleName: SqlUtil(142) into MethodInvocation(149) at 0", "Insert SimpleName: isCallTo(143) into MethodInvocation(149) at 1", "Insert MethodInvocation(147) into MethodInvocation(149) at 2", "Insert QualifiedName: SqlStdOperatorTable.ROW(148) into MethodInvocation(149) at 3", "Insert VariableDeclarationStatement(158) into Block(202) at 0", "Insert ExpressionStatement(163) into Block(202) at 1", "Move ExpressionStatement(140) into Block(202) at 2", "Move ExpressionStatement(122) into Block(202) at 3", "Move ExpressionStatement(112) into Block(202) at 4", "Move ExpressionStatement(150) into Block(202) at 5", "Move ExpressionStatement(128) into Block(202) at 6", "Move ExpressionStatement(166) into Block(213) at 0", "Update NumberLiteral: 4(180) to 2", "Insert SimpleName: SqlSingleOperandTypeChecker(351) into SimpleType: SqlSingleOperandTypeChecker(352) at 0", "Insert SimpleName: rightChecker(353) into VariableDeclarationFragment(354) at 0", "Insert SimpleName: CONTAINS(357) into SwitchCase(358) at 0", "Insert Assignment: =(361) into ExpressionStatement(362) at 0", "Insert Assignment: =(367) into ExpressionStatement(368) at 0", "Insert MethodInvocation(393) into VariableDeclarationFragment(394) at 1", "Move MethodInvocation(425) into PrefixExpression: !(410) at 0", "Move VariableDeclarationStatement(391) into Block(456) at 0", "Move VariableDeclarationStatement(404) into Block(456) at 1", "Move IfStatement(442) into Block(456) at 2", "Insert StringLiteral: \"'<PERIOD> \"(55) into InfixExpression: +(58) at 0", "Insert QualifiedName: kind.sql(56) into InfixExpression: +(58) at 1", "Insert StringLiteral: \" <PERIOD>'\"(57) into InfixExpression: +(58) at 2", "Insert QualifiedName: SqlWriter.FrameTypeEnum.SIMPLE(90) into MethodInvocation(91) at 2", "Insert SimpleName: call(144) into MethodInvocation(147) at 0", "Insert SimpleName: operand(145) into MethodInvocation(147) at 1", "Insert SimpleName: i(146) into MethodInvocation(147) at 2", "Insert SimpleType: SqlCall(151) into VariableDeclarationStatement(158) at 0", "Insert VariableDeclarationFragment(157) into VariableDeclarationStatement(158) at 1", "Insert MethodInvocation(162) into ExpressionStatement(163) at 0", "Update QualifiedName: OperandTypes.DATETIME(323) to OperandTypes.PERIOD", "Insert SimpleName: rightChecker(359) into Assignment: =(361) at 0", "Insert QualifiedName: OperandTypes.PERIOD_OR_DATETIME(360) into Assignment: =(361) at 1", "Insert SimpleName: rightChecker(365) into Assignment: =(367) at 0", "Insert QualifiedName: OperandTypes.PERIOD(366) into Assignment: =(367) at 1", "Update SimpleName: checkSingleOperandType(339) to rightChecker", "Update SimpleName: callBinding(340) to checkSingleOperandType", "Move SimpleName: callBinding(341) into MethodInvocation(380) at 3", "Move MethodInvocation(375) into MethodInvocation(380) at 4", "Move SimpleName: callBinding(359) into MethodInvocation(393) at 0", "Update SimpleName: operand(360) to getOperandType", "Move SimpleName: operand(360) into MethodInvocation(393) at 1", "Move NumberLiteral: 0(361) into MethodInvocation(393) at 2", "Update SimpleName: validator(369) to callBinding", "Update SimpleName: deriveType(370) to getOperandType", "Insert NumberLiteral: 1(402) into MethodInvocation(403) at 2", "Insert Modifier: final(411) into VariableDeclarationStatement(424) at 0", "Move SimpleType: RelDataType(367) into VariableDeclarationStatement(424) at 1", "Insert Modifier: final(425) into VariableDeclarationStatement(438) at 0", "Move SimpleType: RelDataType(354) into VariableDeclarationStatement(438) at 1", "Move Block(458) into IfStatement(455) at 1", "Insert SimpleName: SqlCall(150) into SimpleType: SqlCall(151) at 0", "Insert SimpleName: row(152) into VariableDeclarationFragment(157) at 0", "Insert MethodInvocation(156) into VariableDeclarationFragment(157) at 1", "Insert SimpleName: writer(159) into MethodInvocation(162) at 0", "Insert SimpleName: keyword(160) into MethodInvocation(162) at 1", "Insert StringLiteral: \"PERIOD\"(161) into MethodInvocation(162) at 2", "Update SimpleName: t2(381) to t00", "Insert MethodInvocation(422) into VariableDeclarationFragment(423) at 1", "Update SimpleName: t3(394) to t10", "Insert MethodInvocation(436) into VariableDeclarationFragment(437) at 1", "Insert SimpleName: call(153) into MethodInvocation(156) at 0", "Insert SimpleName: operand(154) into MethodInvocation(156) at 1", "Insert SimpleName: i(155) into MethodInvocation(156) at 2", "Update SimpleName: call(113) to row", "Update NumberLiteral: 1(115) to 0", "Update SimpleName: call(141) to row", "Update NumberLiteral: 2(143) to 1", "Insert SimpleName: i(205) into MethodInvocation(206) at 2", "Insert MethodInvocation(420) into MethodInvocation(422) at 0", "Insert SimpleName: getType(421) into MethodInvocation(422) at 1", "Insert MethodInvocation(434) into MethodInvocation(436) at 0", "Insert SimpleName: getType(435) into MethodInvocation(436) at 1", "Update SimpleName: t0(428) to t00", "Update SimpleName: t1(429) to t10", "Insert MethodInvocation(417) into MethodInvocation(420) at 0", "Update SimpleName: scope(384) to get", "Move SimpleName: scope(384) into MethodInvocation(420) at 1", "Update NumberLiteral: 2(387) to 0", "Move NumberLiteral: 2(387) into MethodInvocation(420) at 2", "Insert MethodInvocation(431) into MethodInvocation(434) at 0", "Update SimpleName: scope(397) to get", "Move SimpleName: scope(397) into MethodInvocation(434) at 1", "Update NumberLiteral: 3(400) to 0", "Move NumberLiteral: 3(400) into MethodInvocation(434) at 2", "Update SimpleName: validator(382) to t0", "Move SimpleName: validator(382) into MethodInvocation(417) at 0", "Update SimpleName: deriveType(383) to getFieldList", "Move SimpleName: deriveType(383) into MethodInvocation(417) at 1", "Update SimpleName: validator(395) to t1", "Move SimpleName: validator(395) into MethodInvocation(431) at 0", "Update SimpleName: deriveType(396) to getFieldList", "Move SimpleName: deriveType(396) into MethodInvocation(431) at 1", "Delete QualifiedName: org.apache.calcite.sql.validate.SqlValidatorScope(30)", "Delete ImportDeclaration(31)", "Delete StringLiteral: \"OVERLAPS\"(58)", "Delete NullLiteral(64)", "Delete SimpleName: FRAME_TYPE(91)", "Delete StringLiteral: \"(\"(92)", "Delete StringLiteral: \")\"(93)", "Delete NumberLiteral: 3(159)", "Delete Modifier: private(44)", "Delete Modifier: static(45)", "Delete Modifier: final(46)", "Delete QualifiedName: SqlWriter.FrameType(47)", "Delete SimpleType: SqlWriter.FrameType(48)", "Delete SimpleName: FRAME_TYPE(49)", "Delete QualifiedName: SqlWriter.FrameTypeEnum(50)", "Delete SimpleName: create(51)", "Delete StringLiteral: \"OVERLAPS\"(52)", "Delete MethodInvocation(53)", "Delete VariableDeclarationFragment(54)", "Delete FieldDeclaration(55)", "Delete Modifier: public(56)", "Delete SimpleName: SqlOverlapsOperator(57)", "Delete MethodDeclaration(67)", "Delete MethodInvocation(100)", "Delete MethodInvocation(105)", "Delete ExpressionStatement(106)", "Delete SimpleName: writer(151)", "Delete SimpleName: sep(152)", "Delete StringLiteral: \",\"(153)", "Delete BooleanLiteral: true(154)", "Delete MethodInvocation(155)", "Delete ExpressionStatement(156)", "Delete Block(172)", "Delete MethodDeclaration(173)", "Delete Modifier: public(185)", "Delete SimpleName: String(186)", "Delete SimpleType: String(187)", "Delete SimpleName: getSignatureTemplate(188)", "Delete PrimitiveType: int(189)", "Delete SimpleName: operandsCount(190)", "Delete SingleVariableDeclaration(191)", "Delete NumberLiteral: 4(192)", "Delete SimpleName: operandsCount(193)", "Delete InfixExpression: ==(194)", "Delete AssertStatement(195)", "Delete StringLiteral: \"({1}, {2}) {0} ({3}, {4})\"(196)", "Delete ReturnStatement(197)", "Delete Block(198)", "Delete MethodDeclaration(199)", "Delete SimpleName: SqlValidator(307)", "Delete SimpleType: SqlValidator(308)", "Delete SimpleName: validator(309)", "Delete SimpleName: callBinding(310)", "Delete SimpleName: getValidator(311)", "Delete MethodInvocation(312)", "Delete VariableDeclarationFragment(313)", "Delete VariableDeclarationStatement(314)", "Delete SimpleName: SqlValidatorScope(315)", "Delete SimpleType: SqlValidatorScope(316)", "Delete SimpleName: scope(317)", "Delete SimpleName: callBinding(318)", "Delete SimpleName: getScope(319)", "Delete MethodInvocation(320)", "Delete VariableDeclarationFragment(321)", "Delete VariableDeclarationStatement(322)", "Delete QualifiedName: OperandTypes.DATETIME(338)", "Delete SimpleName: operand(342)", "Delete NumberLiteral: 2(343)", "Delete MethodInvocation(344)", "Delete SimpleName: validator(356)", "Delete SimpleName: deriveType(357)", "Delete SimpleName: scope(358)", "Delete MethodInvocation(362)", "Delete MethodInvocation(363)", "Delete SimpleName: scope(371)", "Delete SimpleName: callBinding(385)", "Delete SimpleName: operand(386)", "Delete MethodInvocation(388)", "Delete MethodInvocation(389)", "Delete SimpleName: callBinding(398)", "Delete SimpleName: operand(399)", "Delete MethodInvocation(401)", "Delete MethodInvocation(402)", "Delete SimpleName: throwOnFailure(432)", "Delete SimpleName: callBinding(433)", "Delete SimpleName: newValidationSignatureError(434)", "Delete MethodInvocation(435)", "Delete ThrowStatement(436)", "Delete Block(437)", "Delete IfStatement(438)", "Delete BooleanLiteral: false(439)", "Delete ReturnStatement(440)", "Delete Block(441)", "Delete SimpleName: SqlTypeUtil(405)", "Delete SimpleName: sameNamedType(406)", "Delete SimpleName: t0(407)", "Delete SimpleName: t2(408)", "Delete MethodInvocation(409)", "Delete PrefixExpression: !(410)", "Delete SimpleName: throwOnFailure(411)", "Delete SimpleName: callBinding(412)", "Delete SimpleName: newValidationSignatureError(413)", "Delete MethodInvocation(414)", "Delete ThrowStatement(415)", "Delete Block(416)", "Delete IfStatement(417)", "Delete BooleanLiteral: false(418)", "Delete ReturnStatement(419)", "Delete Block(420)", "Delete IfStatement(421)", "Delete Block(443)", "Delete SimpleName: SqlTypeUtil(444)", "Delete SimpleName: isInterval(445)", "Delete SimpleName: t1(446)", "Delete MethodInvocation(447)", "Delete PrefixExpression: !(448)", "Delete IfStatement(459)", "Delete IfStatement(460)", "Delete SimpleName: SqlTypeUtil(461)", "Delete SimpleName: isDatetime(462)", "Delete SimpleName: t3(463)", "Delete MethodInvocation(464)", "Delete SimpleName: SqlTypeUtil(465)", "Delete SimpleName: sameNamedType(466)", "Delete SimpleName: t2(467)", "Delete SimpleName: t3(468)", "Delete MethodInvocation(469)", "Delete PrefixExpression: !(470)", "Delete SimpleName: throwOnFailure(471)", "Delete SimpleName: callBinding(472)", "Delete SimpleName: newValidationSignatureError(473)", "Delete MethodInvocation(474)", "Delete ThrowStatement(475)", "Delete Block(476)", "Delete IfStatement(477)", "Delete BooleanLiteral: false(478)", "Delete ReturnStatement(479)", "Delete Block(480)", "Delete IfStatement(481)", "Delete Block(482)", "Delete SimpleName: SqlTypeUtil(483)", "Delete SimpleName: isInterval(484)", "Delete SimpleName: t3(485)", "Delete MethodInvocation(486)", "Delete PrefixExpression: !(487)", "Delete SimpleName: throwOnFailure(488)", "Delete SimpleName: callBinding(489)", "Delete SimpleName: newValidationSignatureError(490)", "Delete MethodInvocation(491)", "Delete ThrowStatement(492)", "Delete Block(493)", "Delete IfStatement(494)", "Delete BooleanLiteral: false(495)", "Delete ReturnStatement(496)", "Delete Block(497)", "Delete IfStatement(498)", "Delete IfStatement(499)"]}}, {"SqlStdOperatorTable_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 115", "operations": ["INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS Modifier: static to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 115", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: SqlOverlapsOperator to SimpleType: SqlOverlapsOperator at 0", "INS SimpleType: SqlOverlapsOperator to ClassInstanceCreation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS QualifiedName: SqlKind.CONTAINS to ClassInstanceCreation at 1", "INS SimpleName: SqlOverlapsOperator to SimpleType: SqlOverlapsOperator at 0", "INS SimpleName: CONTAINS to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleType: SqlOverlapsOperator to FieldDeclaration at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 116", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 116", "INS SimpleName: SqlOverlapsOperator to SimpleType: SqlOverlapsOperator at 0", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: PRECEDES to VariableDeclarationFragment at 0", "INS SimpleType: SqlOverlapsOperator to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 2", "INS QualifiedName: SqlKind.PRECEDES to ClassInstanceCreation at 1", "INS SimpleName: SqlOverlapsOperator to SimpleType: SqlOverlapsOperator at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleType: SqlOverlapsOperator to ClassInstanceCreation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS Modifier: static to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 117", "operations": ["INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: IMMEDIATELY_PRECEDES to VariableDeclarationFragment at 0", "INS SimpleName: SqlOverlapsOperator to SimpleType: SqlOverlapsOperator at 0", "INS FieldDeclaration to TypeDeclaration: class at 117", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: SqlOverlapsOperator to ClassInstanceCreation at 0", "INS Modifier: final to FieldDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleType: SqlOverlapsOperator to FieldDeclaration at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS QualifiedName: SqlKind.IMMEDIATELY_PRECEDES to ClassInstanceCreation at 1", "INS SimpleName: SqlOverlapsOperator to SimpleType: SqlOverlapsOperator at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 118", "operations": ["INS SimpleType: SqlOverlapsOperator to FieldDeclaration at 3", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS QualifiedName: SqlKind.SUCCEEDS to ClassInstanceCreation at 1", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: SqlOverlapsOperator to SimpleType: SqlOverlapsOperator at 0", "INS Modifier: static to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: SqlOverlapsOperator to SimpleType: SqlOverlapsOperator at 0", "INS SimpleType: SqlOverlapsOperator to ClassInstanceCreation at 0", "INS FieldDeclaration to TypeDeclaration: class at 118", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: SUCCEEDS to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 119", "operations": ["INS SimpleType: SqlOverlapsOperator to ClassInstanceCreation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: IMMEDIATELY_SUCCEEDS to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS QualifiedName: SqlKind.IMMEDIATELY_SUCCEEDS to ClassInstanceCreation at 1", "INS FieldDeclaration to TypeDeclaration: class at 119", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleType: SqlOverlapsOperator to FieldDeclaration at 3", "INS SimpleName: SqlOverlapsOperator to SimpleType: SqlOverlapsOperator at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: SqlOverlapsOperator to SimpleType: SqlOverlapsOperator at 0", "INS Modifier: static to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 120", "operations": ["INS Modifier: final to FieldDeclaration at 2", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: SqlOverlapsOperator to SimpleType: SqlOverlapsOperator at 0", "INS FieldDeclaration to TypeDeclaration: class at 120", "INS SimpleName: PERIOD_EQUALS to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleType: SqlOverlapsOperator to FieldDeclaration at 3", "INS Modifier: public to FieldDeclaration at 0", "INS QualifiedName: SqlKind.PERIOD_EQUALS to ClassInstanceCreation at 1", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: SqlOverlapsOperator to SimpleType: SqlOverlapsOperator at 0", "INS SimpleType: SqlOverlapsOperator to ClassInstanceCreation at 0"]}, {"root": "INS QualifiedName: SqlKind.OVERLAPS to ClassInstanceCreation at 1", "operations": ["INS QualifiedName: SqlKind.OVERLAPS to ClassInstanceCreation at 1"]}]}}, {"SqlStdOperatorTable_diff": {"operations": ["Insert FieldDeclaration(2260) into TypeDeclaration: class(5001) at 115", "Insert FieldDeclaration(2272) into TypeDeclaration: class(5001) at 116", "Insert FieldDeclaration(2284) into TypeDeclaration: class(5001) at 117", "Insert FieldDeclaration(2296) into TypeDeclaration: class(5001) at 118", "Insert FieldDeclaration(2308) into TypeDeclaration: class(5001) at 119", "Insert FieldDeclaration(2320) into TypeDeclaration: class(5001) at 120", "Insert Modifier: public(2249) into FieldDeclaration(2260) at 0", "Insert Modifier: static(2250) into FieldDeclaration(2260) at 1", "Insert Modifier: final(2251) into FieldDeclaration(2260) at 2", "Insert SimpleType: SqlOverlapsOperator(2253) into FieldDeclaration(2260) at 3", "Insert VariableDeclarationFragment(2259) into FieldDeclaration(2260) at 4", "Insert Modifier: public(2261) into FieldDeclaration(2272) at 0", "Insert Modifier: static(2262) into FieldDeclaration(2272) at 1", "Insert Modifier: final(2263) into FieldDeclaration(2272) at 2", "Insert SimpleType: SqlOverlapsOperator(2265) into FieldDeclaration(2272) at 3", "Insert VariableDeclarationFragment(2271) into FieldDeclaration(2272) at 4", "Insert Modifier: public(2273) into FieldDeclaration(2284) at 0", "Insert Modifier: static(2274) into FieldDeclaration(2284) at 1", "Insert Modifier: final(2275) into FieldDeclaration(2284) at 2", "Insert SimpleType: SqlOverlapsOperator(2277) into FieldDeclaration(2284) at 3", "Insert VariableDeclarationFragment(2283) into FieldDeclaration(2284) at 4", "Insert Modifier: public(2285) into FieldDeclaration(2296) at 0", "Insert Modifier: static(2286) into FieldDeclaration(2296) at 1", "Insert Modifier: final(2287) into FieldDeclaration(2296) at 2", "Insert SimpleType: SqlOverlapsOperator(2289) into FieldDeclaration(2296) at 3", "Insert VariableDeclarationFragment(2295) into FieldDeclaration(2296) at 4", "Insert Modifier: public(2297) into FieldDeclaration(2308) at 0", "Insert Modifier: static(2298) into FieldDeclaration(2308) at 1", "Insert Modifier: final(2299) into FieldDeclaration(2308) at 2", "Insert SimpleType: SqlOverlapsOperator(2301) into FieldDeclaration(2308) at 3", "Insert VariableDeclarationFragment(2307) into FieldDeclaration(2308) at 4", "Insert Modifier: public(2309) into FieldDeclaration(2320) at 0", "Insert Modifier: static(2310) into FieldDeclaration(2320) at 1", "Insert Modifier: final(2311) into FieldDeclaration(2320) at 2", "Insert SimpleType: SqlOverlapsOperator(2313) into FieldDeclaration(2320) at 3", "Insert VariableDeclarationFragment(2319) into FieldDeclaration(2320) at 4", "Insert SimpleName: SqlOverlapsOperator(2252) into SimpleType: SqlOverlapsOperator(2253) at 0", "Insert SimpleName: CONTAINS(2254) into VariableDeclarationFragment(2259) at 0", "Insert ClassInstanceCreation(2258) into VariableDeclarationFragment(2259) at 1", "Insert SimpleName: SqlOverlapsOperator(2264) into SimpleType: SqlOverlapsOperator(2265) at 0", "Insert SimpleName: PRECEDES(2266) into VariableDeclarationFragment(2271) at 0", "Insert ClassInstanceCreation(2270) into VariableDeclarationFragment(2271) at 1", "Insert SimpleName: SqlOverlapsOperator(2276) into SimpleType: SqlOverlapsOperator(2277) at 0", "Insert SimpleName: IMMEDIATELY_PRECEDES(2278) into VariableDeclarationFragment(2283) at 0", "Insert ClassInstanceCreation(2282) into VariableDeclarationFragment(2283) at 1", "Insert SimpleName: SqlOverlapsOperator(2288) into SimpleType: SqlOverlapsOperator(2289) at 0", "Insert SimpleName: SUCCEEDS(2290) into VariableDeclarationFragment(2295) at 0", "Insert ClassInstanceCreation(2294) into VariableDeclarationFragment(2295) at 1", "Insert SimpleName: SqlOverlapsOperator(2300) into SimpleType: SqlOverlapsOperator(2301) at 0", "Insert SimpleName: IMMEDIATELY_SUCCEEDS(2302) into VariableDeclarationFragment(2307) at 0", "Insert ClassInstanceCreation(2306) into VariableDeclarationFragment(2307) at 1", "Insert SimpleName: SqlOverlapsOperator(2312) into SimpleType: SqlOverlapsOperator(2313) at 0", "Insert SimpleName: PERIOD_EQUALS(2314) into VariableDeclarationFragment(2319) at 0", "Insert ClassInstanceCreation(2318) into VariableDeclarationFragment(2319) at 1", "Insert QualifiedName: SqlKind.OVERLAPS(2245) into ClassInstanceCreation(2246) at 1", "Insert SimpleType: SqlOverlapsOperator(2256) into ClassInstanceCreation(2258) at 0", "Insert QualifiedName: SqlKind.CONTAINS(2257) into ClassInstanceCreation(2258) at 1", "Insert SimpleType: SqlOverlapsOperator(2268) into ClassInstanceCreation(2270) at 0", "Insert QualifiedName: SqlKind.PRECEDES(2269) into ClassInstanceCreation(2270) at 1", "Insert SimpleType: SqlOverlapsOperator(2280) into ClassInstanceCreation(2282) at 0", "Insert QualifiedName: SqlKind.IMMEDIATELY_PRECEDES(2281) into ClassInstanceCreation(2282) at 1", "Insert SimpleType: SqlOverlapsOperator(2292) into ClassInstanceCreation(2294) at 0", "Insert QualifiedName: SqlKind.SUCCEEDS(2293) into ClassInstanceCreation(2294) at 1", "Insert SimpleType: SqlOverlapsOperator(2304) into ClassInstanceCreation(2306) at 0", "Insert QualifiedName: SqlKind.IMMEDIATELY_SUCCEEDS(2305) into ClassInstanceCreation(2306) at 1", "Insert SimpleType: SqlOverlapsOperator(2316) into ClassInstanceCreation(2318) at 0", "Insert QualifiedName: SqlKind.PERIOD_EQUALS(2317) into ClassInstanceCreation(2318) at 1", "Insert SimpleName: SqlOverlapsOperator(2255) into SimpleType: SqlOverlapsOperator(2256) at 0", "Insert SimpleName: SqlOverlapsOperator(2267) into SimpleType: SqlOverlapsOperator(2268) at 0", "Insert SimpleName: SqlOverlapsOperator(2279) into SimpleType: SqlOverlapsOperator(2280) at 0", "Insert SimpleName: SqlOverlapsOperator(2291) into SimpleType: SqlOverlapsOperator(2292) at 0", "Insert SimpleName: SqlOverlapsOperator(2303) into SimpleType: SqlOverlapsOperator(2304) at 0", "Insert SimpleName: SqlOverlapsOperator(2315) into SimpleType: SqlOverlapsOperator(2316) at 0"]}}, {"OperandTypes_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 32", "operations": ["INS SimpleName: SqlSingleOperandTypeChecker to SimpleType: SqlSingleOperandTypeChecker at 0", "INS SimpleType: SqlSingleOperandTypeChecker to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 32", "INS Modifier: static to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleType: PeriodOperandTypeChecker to ClassInstanceCreation at 0", "INS SimpleName: PERIOD to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: PeriodOperandTypeChecker to SimpleType: PeriodOperandTypeChecker at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 33", "operations": ["INS SimpleName: PERIOD_OR_DATETIME to VariableDeclarationFragment at 0", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: DATETIME to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: or to MethodInvocation at 0", "INS Modifier: public to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 33", "INS SimpleName: PERIOD to MethodInvocation at 1", "INS SimpleType: SqlSingleOperandTypeChecker to FieldDeclaration at 3", "INS SimpleName: SqlSingleOperandTypeChecker to SimpleType: SqlSingleOperandTypeChecker at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 79", "operations": ["INS NumberLiteral: 1 to MethodInvocation at 2", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: valid to VariableDeclarationFragment at 0", "INS Modifier: public to MethodDeclaration at 0", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: callBinding to MethodInvocation at 0", "INS TextElement: [ROW] (DATETIME, DATETIME) to TagElement at 3", "INS SimpleName: i to SingleVariableDeclaration at 1", "INS SimpleType: SqlSingleOperandTypeChecker to TypeDeclaration: class at 4", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS Modifier: public to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: SqlCallBinding to SimpleType: SqlCallBinding at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleType: SqlNode to SingleVariableDeclaration at 0", "INS SimpleType: RelDataType to VariableDeclarationStatement at 0", "INS Block to MethodDeclaration at 5", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleName: newValidationSignatureError to MethodInvocation at 1", "INS SimpleName: t1 to MethodInvocation at 2", "INS Block to MethodDeclaration at 3", "INS SimpleName: t1 to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SimpleType: SqlOperandCountRange to MethodDeclaration at 1", "INS TextElement: [ROW] (DATETIME, INTERVAL)  to TagElement at 4", "INS SimpleName: getType to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: callBinding to MethodInvocation at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS ReturnStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: callBinding to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getFieldList to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: isOptional to MethodDeclaration at 2", "INS SimpleName: iFormalOperand to SingleVariableDeclaration at 1", "INS SimpleName: t1 to VariableDeclarationFragment at 0", "INS SimpleName: throwOnFailure to MethodInvocation at 4", "INS ReturnStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: SqlTypeUtil to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: type to MethodInvocation at 0", "INS SimpleName: getOperandCountRange to MethodDeclaration at 2", "INS SimpleName: opName to SingleVariableDeclaration at 1", "INS SimpleType: SqlCallBinding to SingleVariableDeclaration at 0", "INS SimpleName: callBinding to MethodInvocation at 0", "INS Modifier: private to TypeDeclaration: class at 1", "INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: valid to Assignment: = at 0", "INS SimpleType: RelDataType to VariableDeclarationStatement at 1", "INS SimpleName: callBinding to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: deriveType to MethodInvocation at 1", "INS SimpleType: RelDataType to VariableDeclarationStatement at 1", "INS TextElement: Operand type checker that accepts period types: to TagElement at 0", "INS ReturnStatement to Block at 5", "INS SimpleName: of to MethodInvocation at 1", "INS SimpleName: SqlSingleOperandTypeChecker to SimpleType: SqlSingleOperandTypeChecker at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: type to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: getConsistency to MethodDeclaration at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: throwOnFailure to SingleVariableDeclaration at 1", "INS SimpleName: SqlUtil to MethodInvocation at 0", "INS SimpleName: type to MethodInvocation at 0", "INS SimpleName: operand to MethodInvocation at 1", "INS SimpleName: PeriodOperandTypeChecker to TypeDeclaration: class at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 1", "INS IfStatement to Block at 3", "INS ThrowStatement to Block at 0", "INS IfStatement to Block at 4", "INS SimpleName: SqlOperandCountRange to SimpleType: SqlOperandCountRange at 0", "INS SimpleName: SqlCallBinding to SimpleType: SqlCallBinding at 0", "INS NumberLiteral: 0 to InfixExpression: == at 0", "INS TextElement: PERIOD (DATETIME, INTERVAL) to TagElement at 2", "INS Javadoc to TypeDeclaration: class at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: SqlOperandCountRanges to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: SqlTypeUtil to MethodInvocation at 0", "INS SimpleName: getScope to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS IfStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS Block to IfStatement at 1", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS SimpleName: sameNamedType to MethodInvocation at 1", "INS NumberLiteral: 2 to InfixExpression: == at 1", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isInterval to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to IfStatement at 1", "INS Block to IfStatement at 1", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS BooleanLiteral: true to Assignment: = at 1", "INS Block to IfStatement at 1", "INS SimpleType: SqlCallBinding to SingleVariableDeclaration at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS IfStatement to Block at 0", "INS VariableDeclarationStatement to Block at 1", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleType: SqlOperator to SingleVariableDeclaration at 0", "INS MethodInvocation to ThrowStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: RelDataType to SimpleType: RelDataType at 0", "INS InfixExpression: && to IfStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: String to MethodDeclaration at 1", "INS IfStatement to IfStatement at 2", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SimpleName: isDatetime to MethodInvocation at 1", "INS SimpleName: RelDataType to SimpleType: RelDataType at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS Modifier: static to TypeDeclaration: class at 2", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: callBinding to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: throwOnFailure to SingleVariableDeclaration at 1", "INS SimpleName: SqlTypeUtil to MethodInvocation at 0", "INS SimpleName: t1 to MethodInvocation at 3", "INS SimpleType: Consistency to MethodDeclaration at 1", "INS StringLiteral: \"PERIOD (DATETIME, INTERVAL)\" to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 7", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: op to SingleVariableDeclaration at 1", "INS SimpleName: checkSingleOperandType to MethodInvocation at 0", "INS SimpleName: callBinding to MethodInvocation at 1", "INS SimpleName: SqlNode to SimpleType: SqlNode at 0", "INS VariableDeclarationStatement to Block at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: getType to MethodInvocation at 1", "INS NumberLiteral: 0 to MethodInvocation at 3", "INS SimpleName: iFormalOperand to InfixExpression: == at 1", "INS SimpleName: t0 to MethodInvocation at 2", "INS SimpleName: Consistency to SimpleType: Consistency at 0", "INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: of to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: isDatetime to MethodInvocation at 1", "INS SimpleName: t0 to MethodInvocation at 2", "INS BooleanLiteral: true to Assignment: = at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: op to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: SqlOperator to SimpleType: SqlOperator at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getAllowedSignatures to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS StringLiteral: \"PERIOD (DATETIME, DATETIME)\" to MethodInvocation at 3", "INS SimpleName: SqlTypeUtil to MethodInvocation at 0", "INS InfixExpression: == to InfixExpression: && at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: getFieldList to MethodInvocation at 1", "INS AssertStatement to Block at 0", "INS SimpleName: valid to Assignment: = at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS TypeDeclaration: class to TypeDeclaration: class at 79", "INS IfStatement to Block at 0", "INS SimpleName: isStruct to MethodInvocation at 1", "INS SimpleName: getAliasedSignature to MethodInvocation at 1", "INS TextElement: PERIOD (DATETIME, DATETIME) to TagElement at 1", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: checkSingleOperandType to MethodDeclaration at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: get to MethodInvocation at 1", "INS Block to MethodDeclaration at 3", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getValidator to MethodInvocation at 1", "INS QualifiedName: Consistency.NONE to ReturnStatement at 0", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: checkOperandTypes to MethodDeclaration at 2", "INS SimpleName: RelDataType to SimpleType: RelDataType at 0", "INS InfixExpression: == to AssertStatement at 0", "INS SimpleName: type to MethodInvocation at 0", "INS SimpleName: valid to PrefixExpression: ! at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: throwOnFailure to InfixExpression: && at 1", "INS SimpleName: opName to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getFieldList to MethodInvocation at 1", "INS SimpleName: node to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleName: type to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: valid to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: t0 to VariableDeclarationFragment at 0", "INS PrefixExpression: ! to InfixExpression: && at 0", "INS MethodInvocation to InfixExpression: && at 0"]}]}}, {"OperandTypes_diff": {"operations": ["Insert FieldDeclaration(602) into TypeDeclaration: class(2007) at 32", "Insert FieldDeclaration(614) into TypeDeclaration: class(2007) at 33", "Insert TypeDeclaration: class(2006) into TypeDeclaration: class(2007) at 79", "Insert Modifier: public(592) into FieldDeclaration(602) at 0", "Insert Modifier: static(593) into FieldDeclaration(602) at 1", "Insert Modifier: final(594) into FieldDeclaration(602) at 2", "Insert SimpleType: SqlSingleOperandTypeChecker(596) into FieldDeclaration(602) at 3", "Insert VariableDeclarationFragment(601) into FieldDeclaration(602) at 4", "Insert Modifier: public(603) into FieldDeclaration(614) at 0", "Insert Modifier: static(604) into FieldDeclaration(614) at 1", "Insert Modifier: final(605) into FieldDeclaration(614) at 2", "Insert SimpleType: SqlSingleOperandTypeChecker(607) into FieldDeclaration(614) at 3", "Insert VariableDeclarationFragment(613) into FieldDeclaration(614) at 4", "Insert Javadoc(1796) into TypeDeclaration: class(2006) at 0", "Insert Modifier: private(1797) into TypeDeclaration: class(2006) at 1", "Insert Modifier: static(1798) into TypeDeclaration: class(2006) at 2", "Insert SimpleName: PeriodOperandTypeChecker(1799) into TypeDeclaration: class(2006) at 3", "Insert SimpleType: SqlSingleOperandTypeChecker(1801) into TypeDeclaration: class(2006) at 4", "Insert MethodDeclaration(1929) into TypeDeclaration: class(2006) at 5", "Insert MethodDeclaration(1951) into TypeDeclaration: class(2006) at 6", "Insert MethodDeclaration(1962) into TypeDeclaration: class(2006) at 7", "Insert MethodDeclaration(1987) into TypeDeclaration: class(2006) at 8", "Insert MethodDeclaration(1997) into TypeDeclaration: class(2006) at 9", "Insert MethodDeclaration(2005) into TypeDeclaration: class(2006) at 10", "Insert SimpleName: SqlSingleOperandTypeChecker(595) into SimpleType: SqlSingleOperandTypeChecker(596) at 0", "Insert SimpleName: PERIOD(597) into VariableDeclarationFragment(601) at 0", "Insert ClassInstanceCreation(600) into VariableDeclarationFragment(601) at 1", "Insert SimpleName: SqlSingleOperandTypeChecker(606) into SimpleType: SqlSingleOperandTypeChecker(607) at 0", "Insert SimpleName: PERIOD_OR_DATETIME(608) into VariableDeclarationFragment(613) at 0", "Insert MethodInvocation(612) into VariableDeclarationFragment(613) at 1", "Insert TagElement(1795) into Javadoc(1796) at 0", "Insert SimpleName: SqlSingleOperandTypeChecker(1800) into SimpleType: SqlSingleOperandTypeChecker(1801) at 0", "Insert Modifier: public(1802) into MethodDeclaration(1929) at 0", "Insert PrimitiveType: boolean(1803) into MethodDeclaration(1929) at 1", "Insert SimpleName: checkSingleOperandType(1804) into MethodDeclaration(1929) at 2", "Insert SingleVariableDeclaration(1808) into MethodDeclaration(1929) at 3", "Insert SingleVariableDeclaration(1812) into MethodDeclaration(1929) at 4", "Insert SingleVariableDeclaration(1815) into MethodDeclaration(1929) at 5", "Insert SingleVariableDeclaration(1818) into MethodDeclaration(1929) at 6", "Insert Block(1928) into MethodDeclaration(1929) at 7", "Insert Modifier: public(1930) into MethodDeclaration(1951) at 0", "Insert PrimitiveType: boolean(1931) into MethodDeclaration(1951) at 1", "Insert SimpleName: checkOperandTypes(1932) into MethodDeclaration(1951) at 2", "Insert SingleVariableDeclaration(1936) into MethodDeclaration(1951) at 3", "Insert SingleVariableDeclaration(1939) into MethodDeclaration(1951) at 4", "Insert Block(1950) into MethodDeclaration(1951) at 5", "Insert Modifier: public(1952) into MethodDeclaration(1962) at 0", "Insert SimpleType: SqlOperandCountRange(1954) into MethodDeclaration(1962) at 1", "Insert SimpleName: getOperandCountRange(1955) into MethodDeclaration(1962) at 2", "Insert Block(1961) into MethodDeclaration(1962) at 3", "Insert Modifier: public(1963) into MethodDeclaration(1987) at 0", "Insert SimpleType: String(1965) into MethodDeclaration(1987) at 1", "Insert SimpleName: getAllowedSignatures(1966) into MethodDeclaration(1987) at 2", "Insert SingleVariableDeclaration(1970) into MethodDeclaration(1987) at 3", "Insert SingleVariableDeclaration(1974) into MethodDeclaration(1987) at 4", "Insert Block(1986) into MethodDeclaration(1987) at 5", "Insert Modifier: public(1988) into MethodDeclaration(1997) at 0", "Insert PrimitiveType: boolean(1989) into MethodDeclaration(1997) at 1", "Insert SimpleName: isOptional(1990) into MethodDeclaration(1997) at 2", "Insert SingleVariableDeclaration(1993) into MethodDeclaration(1997) at 3", "Insert Block(1996) into MethodDeclaration(1997) at 4", "Insert Modifier: public(1998) into MethodDeclaration(2005) at 0", "Insert SimpleType: Consistency(2000) into MethodDeclaration(2005) at 1", "Insert SimpleName: getConsistency(2001) into MethodDeclaration(2005) at 2", "Insert Block(2004) into MethodDeclaration(2005) at 3", "Insert SimpleType: PeriodOperandTypeChecker(599) into ClassInstanceCreation(600) at 0", "Insert SimpleName: or(609) into MethodInvocation(612) at 0", "Insert SimpleName: PERIOD(610) into MethodInvocation(612) at 1", "Insert SimpleName: DATETIME(611) into MethodInvocation(612) at 2", "Insert TextElement: Operand type checker that accepts period types:(1790) into TagElement(1795) at 0", "Insert TextElement: PERIOD (DATETIME, DATETIME)(1791) into TagElement(1795) at 1", "Insert TextElement: PERIOD (DATETIME, INTERVAL)(1792) into TagElement(1795) at 2", "Insert TextElement: [ROW] (DATETIME, DATETIME)(1793) into TagElement(1795) at 3", "Insert TextElement: [ROW] (DATETIME, INTERVAL) (1794) into TagElement(1795) at 4", "Insert SimpleType: SqlCallBinding(1806) into SingleVariableDeclaration(1808) at 0", "Insert SimpleName: callBinding(1807) into SingleVariableDeclaration(1808) at 1", "Insert SimpleType: SqlNode(1810) into SingleVariableDeclaration(1812) at 0", "Insert SimpleName: node(1811) into SingleVariableDeclaration(1812) at 1", "Insert PrimitiveType: int(1813) into SingleVariableDeclaration(1815) at 0", "Insert SimpleName: iFormalOperand(1814) into SingleVariableDeclaration(1815) at 1", "Insert PrimitiveType: boolean(1816) into SingleVariableDeclaration(1818) at 0", "Insert SimpleName: throwOnFailure(1817) into SingleVariableDeclaration(1818) at 1", "Insert AssertStatement(1822) into Block(1928) at 0", "Insert VariableDeclarationStatement(1836) into Block(1928) at 1", "Insert VariableDeclarationStatement(1841) into Block(1928) at 2", "Insert IfStatement(1915) into Block(1928) at 3", "Insert IfStatement(1925) into Block(1928) at 4", "Insert ReturnStatement(1927) into Block(1928) at 5", "Insert SimpleType: SqlCallBinding(1934) into SingleVariableDeclaration(1936) at 0", "Insert SimpleName: callBinding(1935) into SingleVariableDeclaration(1936) at 1", "Insert PrimitiveType: boolean(1937) into SingleVariableDeclaration(1939) at 0", "Insert SimpleName: throwOnFailure(1938) into SingleVariableDeclaration(1939) at 1", "Insert ReturnStatement(1949) into Block(1950) at 0", "Insert SimpleName: SqlOperandCountRange(1953) into SimpleType: SqlOperandCountRange(1954) at 0", "Insert ReturnStatement(1960) into Block(1961) at 0", "Insert SimpleName: String(1964) into SimpleType: String(1965) at 0", "Insert SimpleType: SqlOperator(1968) into SingleVariableDeclaration(1970) at 0", "Insert SimpleName: op(1969) into SingleVariableDeclaration(1970) at 1", "Insert SimpleType: String(1972) into SingleVariableDeclaration(1974) at 0", "Insert SimpleName: opName(1973) into SingleVariableDeclaration(1974) at 1", "Insert ReturnStatement(1985) into Block(1986) at 0", "Insert PrimitiveType: int(1991) into SingleVariableDeclaration(1993) at 0", "Insert SimpleName: i(1992) into SingleVariableDeclaration(1993) at 1", "Insert ReturnStatement(1995) into Block(1996) at 0", "Insert SimpleName: Consistency(1999) into SimpleType: Consistency(2000) at 0", "Insert ReturnStatement(2003) into Block(2004) at 0", "Insert SimpleName: PeriodOperandTypeChecker(598) into SimpleType: PeriodOperandTypeChecker(599) at 0", "Insert SimpleName: SqlCallBinding(1805) into SimpleType: SqlCallBinding(1806) at 0", "Insert SimpleName: SqlNode(1809) into SimpleType: SqlNode(1810) at 0", "Insert InfixExpression: ==(1821) into AssertStatement(1822) at 0", "Insert SimpleType: RelDataType(1824) into VariableDeclarationStatement(1836) at 0", "Insert VariableDeclarationFragment(1835) into VariableDeclarationStatement(1836) at 1", "Insert PrimitiveType: boolean(1837) into VariableDeclarationStatement(1841) at 0", "Insert VariableDeclarationFragment(1840) into VariableDeclarationStatement(1841) at 1", "Insert InfixExpression: &&(1852) into IfStatement(1915) at 0", "Insert Block(1914) into IfStatement(1915) at 1", "Insert InfixExpression: &&(1919) into IfStatement(1925) at 0", "Insert Block(1924) into IfStatement(1925) at 1", "Insert SimpleName: valid(1926) into ReturnStatement(1927) at 0", "Insert SimpleName: SqlCallBinding(1933) into SimpleType: SqlCallBinding(1934) at 0", "Insert MethodInvocation(1948) into ReturnStatement(1949) at 0", "Insert MethodInvocation(1959) into ReturnStatement(1960) at 0", "Insert SimpleName: SqlOperator(1967) into SimpleType: SqlOperator(1968) at 0", "Insert SimpleName: String(1971) into SimpleType: String(1972) at 0", "Insert MethodInvocation(1984) into ReturnStatement(1985) at 0", "Insert BooleanLiteral: false(1994) into ReturnStatement(1995) at 0", "Insert QualifiedName: Consistency.NONE(2002) into ReturnStatement(2003) at 0", "Insert NumberLiteral: 0(1819) into InfixExpression: ==(1821) at 0", "Insert SimpleName: iFormalOperand(1820) into InfixExpression: ==(1821) at 1", "Insert SimpleName: RelDataType(1823) into SimpleType: RelDataType(1824) at 0", "Insert SimpleName: type(1825) into VariableDeclarationFragment(1835) at 0", "Insert MethodInvocation(1834) into VariableDeclarationFragment(1835) at 1", "Insert SimpleName: valid(1838) into VariableDeclarationFragment(1840) at 0", "Insert BooleanLiteral: false(1839) into VariableDeclarationFragment(1840) at 1", "Insert MethodInvocation(1844) into InfixExpression: &&(1852) at 0", "Insert InfixExpression: ==(1851) into InfixExpression: &&(1852) at 1", "Insert VariableDeclarationStatement(1866) into Block(1914) at 0", "Insert VariableDeclarationStatement(1880) into Block(1914) at 1", "Insert IfStatement(1913) into Block(1914) at 2", "Insert PrefixExpression: !(1917) into InfixExpression: &&(1919) at 0", "Insert SimpleName: throwOnFailure(1918) into InfixExpression: &&(1919) at 1", "Insert ThrowStatement(1923) into Block(1924) at 0", "Insert SimpleName: checkSingleOperandType(1940) into MethodInvocation(1948) at 0", "Insert SimpleName: callBinding(1941) into MethodInvocation(1948) at 1", "Insert MethodInvocation(1945) into MethodInvocation(1948) at 2", "Insert NumberLiteral: 0(1946) into MethodInvocation(1948) at 3", "Insert SimpleName: throwOnFailure(1947) into MethodInvocation(1948) at 4", "Insert SimpleName: SqlOperandCountRanges(1956) into MethodInvocation(1959) at 0", "Insert SimpleName: of(1957) into MethodInvocation(1959) at 1", "Insert NumberLiteral: 1(1958) into MethodInvocation(1959) at 2", "Insert SimpleName: SqlUtil(1975) into MethodInvocation(1984) at 0", "Insert SimpleName: getAliasedSignature(1976) into MethodInvocation(1984) at 1", "Insert SimpleName: op(1977) into MethodInvocation(1984) at 2", "Insert SimpleName: opName(1978) into MethodInvocation(1984) at 3", "Insert MethodInvocation(1983) into MethodInvocation(1984) at 4", "Insert MethodInvocation(1828) into MethodInvocation(1834) at 0", "Insert SimpleName: deriveType(1829) into MethodInvocation(1834) at 1", "Insert MethodInvocation(1832) into MethodInvocation(1834) at 2", "Insert SimpleName: node(1833) into MethodInvocation(1834) at 3", "Insert SimpleName: type(1842) into MethodInvocation(1844) at 0", "Insert SimpleName: isStruct(1843) into MethodInvocation(1844) at 1", "Insert MethodInvocation(1849) into InfixExpression: ==(1851) at 0", "Insert NumberLiteral: 2(1850) into InfixExpression: ==(1851) at 1", "Insert Modifier: final(1853) into VariableDeclarationStatement(1866) at 0", "Insert SimpleType: RelDataType(1855) into VariableDeclarationStatement(1866) at 1", "Insert VariableDeclarationFragment(1865) into VariableDeclarationStatement(1866) at 2", "Insert Modifier: final(1867) into VariableDeclarationStatement(1880) at 0", "Insert SimpleType: RelDataType(1869) into VariableDeclarationStatement(1880) at 1", "Insert VariableDeclarationFragment(1879) into VariableDeclarationStatement(1880) at 2", "Insert MethodInvocation(1884) into IfStatement(1913) at 0", "Insert Block(1912) into IfStatement(1913) at 1", "Insert SimpleName: valid(1916) into PrefixExpression: !(1917) at 0", "Insert MethodInvocation(1922) into ThrowStatement(1923) at 0", "Insert SimpleName: callBinding(1942) into MethodInvocation(1945) at 0", "Insert SimpleName: operand(1943) into MethodInvocation(1945) at 1", "Insert NumberLiteral: 0(1944) into MethodInvocation(1945) at 2", "Insert SimpleName: ImmutableList(1979) into MethodInvocation(1983) at 0", "Insert SimpleName: of(1980) into MethodInvocation(1983) at 1", "Insert StringLiteral: \"PERIOD (DATETIME, INTERVAL)\"(1981) into MethodInvocation(1983) at 2", "Insert StringLiteral: \"PERIOD (DATETIME, DATETIME)\"(1982) into MethodInvocation(1983) at 3", "Insert SimpleName: callBinding(1826) into MethodInvocation(1828) at 0", "Insert SimpleName: getValidator(1827) into MethodInvocation(1828) at 1", "Insert SimpleName: callBinding(1830) into MethodInvocation(1832) at 0", "Insert SimpleName: getScope(1831) into MethodInvocation(1832) at 1", "Insert MethodInvocation(1847) into MethodInvocation(1849) at 0", "Insert SimpleName: size(1848) into MethodInvocation(1849) at 1", "Insert SimpleName: RelDataType(1854) into SimpleType: RelDataType(1855) at 0", "Insert SimpleName: t0(1856) into VariableDeclarationFragment(1865) at 0", "Insert MethodInvocation(1864) into VariableDeclarationFragment(1865) at 1", "Insert SimpleName: RelDataType(1868) into SimpleType: RelDataType(1869) at 0", "Insert SimpleName: t1(1870) into VariableDeclarationFragment(1879) at 0", "Insert MethodInvocation(1878) into VariableDeclarationFragment(1879) at 1", "Insert SimpleName: SqlTypeUtil(1881) into MethodInvocation(1884) at 0", "Insert SimpleName: isDatetime(1882) into MethodInvocation(1884) at 1", "Insert SimpleName: t0(1883) into MethodInvocation(1884) at 2", "Insert IfStatement(1911) into Block(1912) at 0", "Insert SimpleName: callBinding(1920) into MethodInvocation(1922) at 0", "Insert SimpleName: newValidationSignatureError(1921) into MethodInvocation(1922) at 1", "Insert SimpleName: type(1845) into MethodInvocation(1847) at 0", "Insert SimpleName: getFieldList(1846) into MethodInvocation(1847) at 1", "Insert MethodInvocation(1862) into MethodInvocation(1864) at 0", "Insert SimpleName: getType(1863) into MethodInvocation(1864) at 1", "Insert MethodInvocation(1876) into MethodInvocation(1878) at 0", "Insert SimpleName: getType(1877) into MethodInvocation(1878) at 1", "Insert MethodInvocation(1888) into IfStatement(1911) at 0", "Insert Block(1900) into IfStatement(1911) at 1", "Insert IfStatement(1910) into IfStatement(1911) at 2", "Insert MethodInvocation(1859) into MethodInvocation(1862) at 0", "Insert SimpleName: get(1860) into MethodInvocation(1862) at 1", "Insert NumberLiteral: 0(1861) into MethodInvocation(1862) at 2", "Insert MethodInvocation(1873) into MethodInvocation(1876) at 0", "Insert SimpleName: get(1874) into MethodInvocation(1876) at 1", "Insert NumberLiteral: 1(1875) into MethodInvocation(1876) at 2", "Insert SimpleName: SqlTypeUtil(1885) into MethodInvocation(1888) at 0", "Insert SimpleName: isDatetime(1886) into MethodInvocation(1888) at 1", "Insert SimpleName: t1(1887) into MethodInvocation(1888) at 2", "Insert IfStatement(1899) into Block(1900) at 0", "Insert MethodInvocation(1904) into IfStatement(1910) at 0", "Insert Block(1909) into IfStatement(1910) at 1", "Insert SimpleName: type(1857) into MethodInvocation(1859) at 0", "Insert SimpleName: getFieldList(1858) into MethodInvocation(1859) at 1", "Insert SimpleName: type(1871) into MethodInvocation(1873) at 0", "Insert SimpleName: getFieldList(1872) into MethodInvocation(1873) at 1", "Insert MethodInvocation(1893) into IfStatement(1899) at 0", "Insert Block(1898) into IfStatement(1899) at 1", "Insert SimpleName: SqlTypeUtil(1901) into MethodInvocation(1904) at 0", "Insert SimpleName: isInterval(1902) into MethodInvocation(1904) at 1", "Insert SimpleName: t1(1903) into MethodInvocation(1904) at 2", "Insert ExpressionStatement(1908) into Block(1909) at 0", "Insert SimpleName: SqlTypeUtil(1889) into MethodInvocation(1893) at 0", "Insert SimpleName: sameNamedType(1890) into MethodInvocation(1893) at 1", "Insert SimpleName: t0(1891) into MethodInvocation(1893) at 2", "Insert SimpleName: t1(1892) into MethodInvocation(1893) at 3", "Insert ExpressionStatement(1897) into Block(1898) at 0", "Insert Assignment: =(1907) into ExpressionStatement(1908) at 0", "Insert Assignment: =(1896) into ExpressionStatement(1897) at 0", "Insert SimpleName: valid(1905) into Assignment: =(1907) at 0", "Insert BooleanLiteral: true(1906) into Assignment: =(1907) at 1", "Insert SimpleName: valid(1894) into Assignment: =(1896) at 0", "Insert BooleanLiteral: true(1895) into Assignment: =(1896) at 1"]}}], "commit_stats": [{"total_files": 13, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}