{"application": "google-closure-templates", "csha": "1c764795a818fa140676e803a2767c5218866cd9", "files": [{"Operator_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 2", "MOV ImportDeclaration to CompilationUnit at 9", "MOV ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: com.google.template.soy.base.SourceLocation to ImportDeclaration at 0"]}, {"root": "UPDATE from com.google.common.collect.Maps to com.google.template.soy.exprtree.Operator.Associativity.LEFT", "operations": ["UPD QualifiedName: com.google.common.collect.Maps from com.google.common.collect.Maps to com.google.template.soy.exprtree.Operator.Associativity.LEFT"]}, {"root": "UPDATE from com.google.template.soy.internal.base.Pair to com.google.template.soy.exprtree.Operator.Associativity.RIGHT", "operations": ["UPD QualifiedName: com.google.template.soy.internal.base.Pair from com.google.template.soy.internal.base.Pair to com.google.template.soy.exprtree.Operator.Associativity.RIGHT"]}, {"root": "UPDATE from java.util.Collections to com.google.common.collect.ImmutableTable", "operations": ["UPD QualifiedName: java.util.Collections from java.util.Collections to com.google.common.collect.ImmutableTable"]}, {"root": "UPDATE from java.util.Map to javax.annotation.Nullable", "operations": ["UPD QualifiedName: java.util.Map from java.util.Map to javax.annotation.Nullable"]}, {"root": "INS SimpleName: RIGHT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: RIGHT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 6", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: location to ClassInstanceCreation at 1", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: OperatorNode to SimpleType: OperatorNode at 0", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS SimpleType: OperatorNode to MethodDeclaration at 2", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 6", "INS SimpleName: createNode to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS ReturnStatement to Block at 0"]}, {"root": "INS SimpleName: RIGHT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: RIGHT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS SimpleName: location to ClassInstanceCreation at 1", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: OperatorNode to SimpleType: OperatorNode at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: createNode to MethodDeclaration at 3", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleType: OperatorNode to MethodDeclaration at 2"]}, {"root": "INS SimpleName: LEFT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: LEFT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "operations": ["INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: OperatorNode to SimpleType: OperatorNode at 0", "INS SimpleType: OperatorNode to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: createNode to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: location to ClassInstanceCreation at 1", "INS ClassInstanceCreation to ReturnStatement at 0"]}, {"root": "INS SimpleName: LEFT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: LEFT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "operations": ["INS SimpleType: OperatorNode to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: location to ClassInstanceCreation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 5", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS SimpleName: createNode to MethodDeclaration at 3", "INS SimpleName: OperatorNode to SimpleType: OperatorNode at 0", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS SimpleName: LEFT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: LEFT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "INS SimpleName: createNode to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleType: OperatorNode to MethodDeclaration at 2", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS SimpleName: location to ClassInstanceCreation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS SimpleName: OperatorNode to SimpleType: OperatorNode at 0"]}, {"root": "INS SimpleName: LEFT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: LEFT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "operations": ["INS SimpleType: OperatorNode to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: OperatorNode to SimpleType: OperatorNode at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS SimpleName: createNode to MethodDeclaration at 3", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS SimpleName: location to ClassInstanceCreation at 1", "INS Block to MethodDeclaration at 5", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS SimpleName: LEFT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: LEFT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 6", "operations": ["INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS SimpleType: OperatorNode to MethodDeclaration at 2", "INS SimpleName: createNode to MethodDeclaration at 3", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS SimpleName: location to ClassInstanceCreation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 6", "INS Block to MethodDeclaration at 5", "INS SimpleName: OperatorNode to SimpleType: OperatorNode at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS SimpleName: LEFT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: LEFT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "operations": ["INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS ReturnStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: OperatorNode to SimpleType: OperatorNode at 0", "INS SimpleName: location to ClassInstanceCreation at 1", "INS Block to MethodDeclaration at 5", "INS SimpleType: OperatorNode to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: createNode to MethodDeclaration at 3", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0"]}, {"root": "INS SimpleName: LEFT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: LEFT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "operations": ["INS SimpleName: location to SingleVariableDeclaration at 1", "INS SimpleName: createNode to MethodDeclaration at 3", "INS SimpleType: OperatorNode to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: OperatorNode to SimpleType: OperatorNode at 0", "INS SimpleName: location to ClassInstanceCreation at 1"]}, {"root": "INS SimpleName: LEFT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: LEFT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "operations": ["INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: createNode to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS SimpleName: location to ClassInstanceCreation at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: OperatorNode to SimpleType: OperatorNode at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "INS SimpleType: OperatorNode to MethodDeclaration at 2", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: LEFT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: LEFT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "operations": ["INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: location to ClassInstanceCreation at 1", "INS SimpleName: OperatorNode to SimpleType: OperatorNode at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: createNode to MethodDeclaration at 3", "INS Block to MethodDeclaration at 5", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS ReturnStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: OperatorNode to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4"]}, {"root": "INS SimpleName: LEFT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: LEFT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: location to ClassInstanceCreation at 1", "INS SimpleType: OperatorNode to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS SimpleName: createNode to MethodDeclaration at 3", "INS SimpleName: OperatorNode to SimpleType: OperatorNode at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "INS SimpleName: LEFT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: LEFT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "operations": ["INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: location to ClassInstanceCreation at 1", "INS SimpleType: OperatorNode to MethodDeclaration at 2", "INS Block to MethodDeclaration at 5", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: OperatorNode to SimpleType: OperatorNode at 0", "INS SimpleName: createNode to MethodDeclaration at 3"]}, {"root": "INS SimpleName: LEFT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: LEFT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS SimpleName: location to ClassInstanceCreation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: createNode to MethodDeclaration at 3", "INS ReturnStatement to Block at 0"]}, {"root": "INS SimpleName: LEFT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: LEFT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 5", "INS SimpleName: createNode to MethodDeclaration at 3", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: location to ClassInstanceCreation at 1", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS SimpleName: RIGHT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: RIGHT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "operations": ["INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: createNode to MethodDeclaration at 3", "INS Block to MethodDeclaration at 5", "INS SimpleName: location to ClassInstanceCreation at 1", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS SimpleName: RIGHT to EnumConstantDeclaration at 3", "operations": ["INS SimpleName: RIGHT to EnumConstantDeclaration at 3"]}, {"root": "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "operations": ["INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleName: createNode to MethodDeclaration at 3", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS SimpleName: location to ClassInstanceCreation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS AnonymousClassDeclaration to EnumConstantDeclaration at 4", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS Block to MethodDeclaration at 5"]}, {"root": "UPDATE from Map<Pair<String,Integer>,Operator> to ImmutableTable<String,Integer,Operator>", "operations": ["UPD ParameterizedType: Map<Pair<String,Integer>,Operator> from Map<Pair<String,Integer>,Operator> to ImmutableTable<String,Integer,Operator>"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 2", "operations": ["INS Modifier: abstract to MethodDeclaration at 2"]}, {"root": "INS SimpleType: OperatorNode to MethodDeclaration at 3", "operations": ["INS SimpleType: OperatorNode to MethodDeclaration at 3"]}, {"root": "UPDATE from getNodeClass to createNode", "operations": ["UPD SimpleName: getNodeClass from getNodeClass to createNode"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS SimpleName: location to SingleVariableDeclaration at 1", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from Map to ImmutableTable", "operations": ["UPD SimpleType: Map from Map to ImmutableTable", "UPD SimpleName: Maps from Maps to ImmutableTable", "UPD SimpleName: Map from Map to ImmutableTable"]}, {"root": "MOVE from ParameterizedType: Map<Pair<String,Integer>,Operator>", "operations": ["MOV SimpleType: String to ParameterizedType: Map<Pair<String,Integer>,Operator> at 1", "MOV SimpleType: Integer to ParameterizedType: Map<Pair<String,Integer>,Operator> at 2", "MOV SimpleType: Pair to ParameterizedType: Map<Pair<String,Integer>,Operator> at 0"]}, {"root": "MOVE from ParameterizedType: Map<Pair<String,Integer>,Operator>", "operations": ["MOV SimpleType: Operator to ParameterizedType: Map<Pair<String,Integer>,Operator> at 3"]}, {"root": "UPDATE from FETCH_MAP to OPERATOR_TABLE", "operations": ["UPD SimpleName: FETCH_MAP from FETCH_MAP to OPERATOR_TABLE", "UPD SimpleName: FETCH_MAP from FETCH_MAP to OPERATOR_TABLE", "UPD SimpleName: FETCH_MAP from FETCH_MAP to OPERATOR_TABLE"]}, {"root": "INS MarkerAnnotation to SingleVariableDeclaration at 0", "operations": ["INS SimpleName: Nullable to MarkerAnnotation at 0", "INS MarkerAnnotation to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from Class to OperatorNode", "operations": ["UPD SimpleName: Class from Class to OperatorNode"]}, {"root": "MOVE from SimpleType: OperatorNode", "operations": ["MOV SimpleName: Class to SimpleType: OperatorNode at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: OperatorNode to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: OperatorNode to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: OperatorNode to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: OperatorNode to MethodDeclaration at 2"]}, {"root": "UPDATE from Map<Pair<String,Integer>,Operator> to ImmutableTable.Builder<String,Integer,Operator>", "operations": ["UPD ParameterizedType: Map<Pair<String,Integer>,Operator> from Map<Pair<String,Integer>,Operator> to ImmutableTable.Builder<String,Integer,Operator>"]}, {"root": "UPDATE from Returns the corresponding node class representing this operator.  to Creates a node representing this operator. ", "operations": ["UPD TextElement: Returns the corresponding node class representing this operator.  from Returns the corresponding node class representing this operator.  to Creates a node representing this operator. "]}, {"root": "UPDATE from Pair to ImmutableTable.Builder", "operations": ["UPD SimpleType: Pair from Pair to ImmutableTable.Builder"]}, {"root": "MOVE from ParameterizedType: Map<Pair<String,Integer>,Operator>", "operations": ["MOV SimpleType: String to ParameterizedType: Map<Pair<String,Integer>,Operator> at 1", "MOV SimpleType: Integer to ParameterizedType: Map<Pair<String,Integer>,Operator> at 2"]}, {"root": "MOVE from ParameterizedType: Map<Pair<String,Integer>,Operator>", "operations": ["MOV SimpleType: Operator to ParameterizedType: Map<Pair<String,Integer>,Operator> at 3"]}, {"root": "UPDATE from fetchMap to builder", "operations": ["UPD SimpleName: fetchMap from fetchMap to builder", "UPD SimpleName: newHashMap from newHashMap to builder", "UPD SimpleName: Pair from Pair to builder", "UPD SimpleName: Collections from Collections to builder"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS SimpleName: syntax to MethodInvocation at 2", "INS SimpleName: copyOf to MethodInvocation at 1"]}, {"root": "INS QualifiedName: ImmutableTable.Builder to SimpleType: Pair at 0", "operations": ["INS QualifiedName: ImmutableTable.Builder to SimpleType: Pair at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: of to MethodInvocation at 4"]}, {"root": "UPDATE from unmodifiableMap to build", "operations": ["UPD SimpleName: unmodifiableMap from unmodifiableMap to build"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: numOperands to MethodInvocation at 3", "MOV SimpleName: tokenString to MethodInvocation at 2"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: NegativeOpNode to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: NotOpNode to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: TimesOpNode to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: DivideByOpNode to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ModOpNode to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: PlusOpNode to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: MinusOpNode to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: LessThanOpNode to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: GreaterThanOpNode to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: LessThanOrEqualOpNode to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: GreaterThanOrEqualOpNode to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: EqualOpNode to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: NotEqualOpNode to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: AndOpNode to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: OrOpNode to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: NullCoalescingOpNode to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ConditionalOpNode to ClassInstanceCreation at 0"]}, {"root": "INS SimpleName: put to MethodInvocation at 1", "operations": ["INS SimpleName: put to MethodInvocation at 1"]}, {"root": "UPDATE from of to op", "operations": ["UPD SimpleName: of from of to op"]}, {"root": "DEL QualifiedName: Associativity.RIGHT", "operations": ["DEL QualifiedName: Associativity.RIGHT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL QualifiedName: Associativity.RIGHT", "operations": ["DEL QualifiedName: Associativity.RIGHT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL QualifiedName: Associativity.LEFT", "operations": ["DEL QualifiedName: Associativity.LEFT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL QualifiedName: Associativity.LEFT", "operations": ["DEL QualifiedName: Associativity.LEFT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL QualifiedName: Associativity.LEFT", "operations": ["DEL QualifiedName: Associativity.LEFT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL QualifiedName: Associativity.LEFT", "operations": ["DEL QualifiedName: Associativity.LEFT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL QualifiedName: Associativity.LEFT", "operations": ["DEL QualifiedName: Associativity.LEFT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL QualifiedName: Associativity.LEFT", "operations": ["DEL QualifiedName: Associativity.LEFT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL QualifiedName: Associativity.LEFT", "operations": ["DEL QualifiedName: Associativity.LEFT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL QualifiedName: Associativity.LEFT", "operations": ["DEL QualifiedName: Associativity.LEFT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL QualifiedName: Associativity.LEFT", "operations": ["DEL QualifiedName: Associativity.LEFT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL QualifiedName: Associativity.LEFT", "operations": ["DEL QualifiedName: Associativity.LEFT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL QualifiedName: Associativity.LEFT", "operations": ["DEL QualifiedName: Associativity.LEFT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL QualifiedName: Associativity.LEFT", "operations": ["DEL QualifiedName: Associativity.LEFT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL QualifiedName: Associativity.LEFT", "operations": ["DEL QualifiedName: Associativity.LEFT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL QualifiedName: Associativity.RIGHT", "operations": ["DEL QualifiedName: Associativity.RIGHT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL QualifiedName: Associativity.RIGHT", "operations": ["DEL QualifiedName: Associativity.RIGHT"]}, {"root": "DEL TypeLiteral", "operations": ["DEL TypeLiteral"]}, {"root": "DEL ParameterizedType: Pair<String,Integer>", "operations": ["DEL SimpleName: Pair", "DEL SimpleType: Pair", "DEL ParameterizedType: Pair<String,Integer>"]}, {"root": "DEL SimpleName: Pair", "operations": ["DEL SimpleName: Pair"]}, {"root": "DEL SimpleType: Map", "operations": ["DEL SimpleName: Map", "DEL SimpleType: Map"]}, {"root": "DEL ParameterizedType: Pair<String,Integer>", "operations": ["DEL ParameterizedType: Pair<String,Integer>"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: op", "DEL SimpleName: fetchMap", "DEL SimpleName: put"]}, {"root": "DEL SimpleName: fetchMap", "operations": ["DEL SimpleName: fetchMap"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: of", "DEL MethodInvocation", "DEL SimpleName: Pair"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: Class", "DEL FieldDeclaration", "DEL SimpleName: Class", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL WildcardType: ? extends OperatorNode", "DEL TextElement: The corresponding node class representing this operator. ", "DEL Javadoc", "DEL ParameterizedType: Class<? extends OperatorNode>", "DEL Modifier: final", "DEL SimpleName: nodeClass", "DEL TagElement"]}, {"root": "DEL TagElement: @param", "operations": ["DEL TagElement: @param", "DEL SimpleName: nodeClass", "DEL TextElement:  The corresponding node class representing this operator."]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: Class", "DEL WildcardType: ? extends OperatorNode", "DEL SingleVariableDeclaration", "DEL ParameterizedType: Class<? extends OperatorNode>", "DEL SimpleName: nodeClass", "DEL SimpleName: Class"]}, {"root": "DEL SimpleName: nodeClass", "operations": ["DEL SimpleName: nodeClass"]}, {"root": "DEL TagElement: @param", "operations": ["DEL TagElement: @param", "DEL TextElement:  The corresponding node class representing this operator.", "DEL SimpleName: nodeClass"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: Class", "DEL SimpleType: Class", "DEL SimpleName: nodeClass", "DEL ParameterizedType: Class<? extends OperatorNode>", "DEL WildcardType: ? extends OperatorNode", "DEL SingleVariableDeclaration"]}, {"root": "DEL SimpleName: syntax", "operations": ["DEL SimpleName: syntax"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL FieldAccess", "DEL Assignment: =", "DEL ThisExpression", "DEL SimpleName: nodeClass", "DEL SimpleName: nodeClass"]}, {"root": "DEL ParameterizedType: Class<? extends OperatorNode>", "operations": ["DEL WildcardType: ? extends OperatorNode", "DEL ParameterizedType: Class<? extends OperatorNode>", "DEL SimpleType: Class"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: nodeClass", "DEL Block", "DEL ReturnStatement"]}]}}, {"Operator_diff": {"operations": ["Move ImportDeclaration(15) into CompilationUnit(1247) at 1", "Move ImportDeclaration(53) into CompilationUnit(1247) at 2", "Move ImportDeclaration(55) into CompilationUnit(1247) at 9", "Insert ImportDeclaration(21) into CompilationUnit(1247) at 10", "Update QualifiedName: com.google.common.collect.Maps(14) to com.google.template.soy.exprtree.Operator.Associativity.LEFT", "Update QualifiedName: com.google.template.soy.internal.base.Pair(52) to com.google.template.soy.exprtree.Operator.Associativity.RIGHT", "Update QualifiedName: java.util.Collections(54) to com.google.common.collect.ImmutableTable", "Insert QualifiedName: com.google.template.soy.base.SourceLocation(20) into ImportDeclaration(21) at 0", "Update QualifiedName: java.util.Map(58) to javax.annotation.Nullable", "Insert SimpleName: RIGHT(78) into EnumConstantDeclaration(98) at 3", "Insert AnonymousClassDeclaration(97) into EnumConstantDeclaration(98) at 5", "Insert SimpleName: RIGHT(110) into EnumConstantDeclaration(129) at 3", "Insert AnonymousClassDeclaration(128) into EnumConstantDeclaration(129) at 4", "Insert SimpleName: LEFT(143) into EnumConstantDeclaration(162) at 3", "Insert AnonymousClassDeclaration(161) into EnumConstantDeclaration(162) at 4", "Insert SimpleName: LEFT(176) into EnumConstantDeclaration(195) at 3", "Insert AnonymousClassDeclaration(194) into EnumConstantDeclaration(195) at 4", "Insert SimpleName: LEFT(209) into EnumConstantDeclaration(228) at 3", "Insert AnonymousClassDeclaration(227) into EnumConstantDeclaration(228) at 4", "Insert SimpleName: LEFT(242) into EnumConstantDeclaration(261) at 3", "Insert AnonymousClassDeclaration(260) into EnumConstantDeclaration(261) at 4", "Insert SimpleName: LEFT(275) into EnumConstantDeclaration(295) at 3", "Insert AnonymousClassDeclaration(294) into EnumConstantDeclaration(295) at 5", "Insert SimpleName: LEFT(309) into EnumConstantDeclaration(328) at 3", "Insert AnonymousClassDeclaration(327) into EnumConstantDeclaration(328) at 4", "Insert SimpleName: LEFT(342) into EnumConstantDeclaration(361) at 3", "Insert AnonymousClassDeclaration(360) into EnumConstantDeclaration(361) at 4", "Insert SimpleName: LEFT(375) into EnumConstantDeclaration(394) at 3", "Insert AnonymousClassDeclaration(393) into EnumConstantDeclaration(394) at 4", "Insert SimpleName: LEFT(408) into EnumConstantDeclaration(427) at 3", "Insert AnonymousClassDeclaration(426) into EnumConstantDeclaration(427) at 4", "Insert SimpleName: LEFT(441) into EnumConstantDeclaration(460) at 3", "Insert AnonymousClassDeclaration(459) into EnumConstantDeclaration(460) at 4", "Insert SimpleName: LEFT(474) into EnumConstantDeclaration(493) at 3", "Insert AnonymousClassDeclaration(492) into EnumConstantDeclaration(493) at 4", "Insert SimpleName: LEFT(507) into EnumConstantDeclaration(526) at 3", "Insert AnonymousClassDeclaration(525) into EnumConstantDeclaration(526) at 4", "Insert SimpleName: LEFT(540) into EnumConstantDeclaration(559) at 3", "Insert AnonymousClassDeclaration(558) into EnumConstantDeclaration(559) at 4", "Insert SimpleName: RIGHT(573) into EnumConstantDeclaration(592) at 3", "Insert AnonymousClassDeclaration(591) into EnumConstantDeclaration(592) at 4", "Insert SimpleName: RIGHT(613) into EnumConstantDeclaration(632) at 3", "Insert AnonymousClassDeclaration(631) into EnumConstantDeclaration(632) at 4", "Update ParameterizedType: Map<Pair<String,Integer>,Operator>(442) to ImmutableTable<String,Integer,Operator>", "Insert Modifier: abstract(1121) into MethodDeclaration(1129) at 2", "Insert SimpleType: OperatorNode(1123) into MethodDeclaration(1129) at 3", "Update SimpleName: getNodeClass(921) to createNode", "Insert SingleVariableDeclaration(1128) into MethodDeclaration(1129) at 5", "Insert MethodDeclaration(96) into AnonymousClassDeclaration(97) at 0", "Insert MethodDeclaration(127) into AnonymousClassDeclaration(128) at 0", "Insert MethodDeclaration(160) into AnonymousClassDeclaration(161) at 0", "Insert MethodDeclaration(193) into AnonymousClassDeclaration(194) at 0", "Insert MethodDeclaration(226) into AnonymousClassDeclaration(227) at 0", "Insert MethodDeclaration(259) into AnonymousClassDeclaration(260) at 0", "Insert MethodDeclaration(293) into AnonymousClassDeclaration(294) at 0", "Insert MethodDeclaration(326) into AnonymousClassDeclaration(327) at 0", "Insert MethodDeclaration(359) into AnonymousClassDeclaration(360) at 0", "Insert MethodDeclaration(392) into AnonymousClassDeclaration(393) at 0", "Insert MethodDeclaration(425) into AnonymousClassDeclaration(426) at 0", "Insert MethodDeclaration(458) into AnonymousClassDeclaration(459) at 0", "Insert MethodDeclaration(491) into AnonymousClassDeclaration(492) at 0", "Insert MethodDeclaration(524) into AnonymousClassDeclaration(525) at 0", "Insert MethodDeclaration(557) into AnonymousClassDeclaration(558) at 0", "Insert MethodDeclaration(590) into AnonymousClassDeclaration(591) at 0", "Insert MethodDeclaration(630) into AnonymousClassDeclaration(631) at 0", "Update SimpleType: Map(432) to ImmutableTable", "Move SimpleType: String(452) into ParameterizedType: ImmutableTable<String,Integer,Operator>(696) at 1", "Move SimpleType: Integer(454) into ParameterizedType: ImmutableTable<String,Integer,Operator>(696) at 2", "Move SimpleType: Operator(457) into ParameterizedType: ImmutableTable<String,Integer,Operator>(696) at 3", "Update SimpleName: FETCH_MAP(443) to OPERATOR_TABLE", "Insert MarkerAnnotation(924) into SingleVariableDeclaration(928) at 0", "Update SimpleName: Class(915) to OperatorNode", "Move SimpleName: Class(915) into SimpleType: OperatorNode(1123) at 0", "Insert SimpleType: SourceLocation(1126) into SingleVariableDeclaration(1128) at 0", "Insert SimpleName: location(1127) into SingleVariableDeclaration(1128) at 1", "Insert MarkerAnnotation(81) into MethodDeclaration(96) at 0", "Insert Modifier: public(82) into MethodDeclaration(96) at 1", "Insert SimpleType: OperatorNode(84) into MethodDeclaration(96) at 2", "Insert SimpleName: createNode(85) into MethodDeclaration(96) at 3", "Insert SingleVariableDeclaration(89) into MethodDeclaration(96) at 4", "Insert Block(95) into MethodDeclaration(96) at 5", "Insert MarkerAnnotation(112) into MethodDeclaration(127) at 0", "Insert Modifier: public(113) into MethodDeclaration(127) at 1", "Insert SimpleType: OperatorNode(115) into MethodDeclaration(127) at 2", "Insert SimpleName: createNode(116) into MethodDeclaration(127) at 3", "Insert SingleVariableDeclaration(120) into MethodDeclaration(127) at 4", "Insert Block(126) into MethodDeclaration(127) at 5", "Insert MarkerAnnotation(145) into MethodDeclaration(160) at 0", "Insert Modifier: public(146) into MethodDeclaration(160) at 1", "Insert SimpleType: OperatorNode(148) into MethodDeclaration(160) at 2", "Insert SimpleName: createNode(149) into MethodDeclaration(160) at 3", "Insert SingleVariableDeclaration(153) into MethodDeclaration(160) at 4", "Insert Block(159) into MethodDeclaration(160) at 5", "Insert MarkerAnnotation(178) into MethodDeclaration(193) at 0", "Insert Modifier: public(179) into MethodDeclaration(193) at 1", "Insert SimpleType: OperatorNode(181) into MethodDeclaration(193) at 2", "Insert SimpleName: createNode(182) into MethodDeclaration(193) at 3", "Insert SingleVariableDeclaration(186) into MethodDeclaration(193) at 4", "Insert Block(192) into MethodDeclaration(193) at 5", "Insert MarkerAnnotation(211) into MethodDeclaration(226) at 0", "Insert Modifier: public(212) into MethodDeclaration(226) at 1", "Insert SimpleType: OperatorNode(214) into MethodDeclaration(226) at 2", "Insert SimpleName: createNode(215) into MethodDeclaration(226) at 3", "Insert SingleVariableDeclaration(219) into MethodDeclaration(226) at 4", "Insert Block(225) into MethodDeclaration(226) at 5", "Insert MarkerAnnotation(244) into MethodDeclaration(259) at 0", "Insert Modifier: public(245) into MethodDeclaration(259) at 1", "Insert SimpleType: OperatorNode(247) into MethodDeclaration(259) at 2", "Insert SimpleName: createNode(248) into MethodDeclaration(259) at 3", "Insert SingleVariableDeclaration(252) into MethodDeclaration(259) at 4", "Insert Block(258) into MethodDeclaration(259) at 5", "Insert MarkerAnnotation(278) into MethodDeclaration(293) at 0", "Insert Modifier: public(279) into MethodDeclaration(293) at 1", "Insert SimpleType: OperatorNode(281) into MethodDeclaration(293) at 2", "Insert SimpleName: createNode(282) into MethodDeclaration(293) at 3", "Insert SingleVariableDeclaration(286) into MethodDeclaration(293) at 4", "Insert Block(292) into MethodDeclaration(293) at 5", "Insert MarkerAnnotation(311) into MethodDeclaration(326) at 0", "Insert Modifier: public(312) into MethodDeclaration(326) at 1", "Insert SimpleType: OperatorNode(314) into MethodDeclaration(326) at 2", "Insert SimpleName: createNode(315) into MethodDeclaration(326) at 3", "Insert SingleVariableDeclaration(319) into MethodDeclaration(326) at 4", "Insert Block(325) into MethodDeclaration(326) at 5", "Insert MarkerAnnotation(344) into MethodDeclaration(359) at 0", "Insert Modifier: public(345) into MethodDeclaration(359) at 1", "Insert SimpleType: OperatorNode(347) into MethodDeclaration(359) at 2", "Insert SimpleName: createNode(348) into MethodDeclaration(359) at 3", "Insert SingleVariableDeclaration(352) into MethodDeclaration(359) at 4", "Insert Block(358) into MethodDeclaration(359) at 5", "Insert MarkerAnnotation(377) into MethodDeclaration(392) at 0", "Insert Modifier: public(378) into MethodDeclaration(392) at 1", "Insert SimpleType: OperatorNode(380) into MethodDeclaration(392) at 2", "Insert SimpleName: createNode(381) into MethodDeclaration(392) at 3", "Insert SingleVariableDeclaration(385) into MethodDeclaration(392) at 4", "Insert Block(391) into MethodDeclaration(392) at 5", "Insert MarkerAnnotation(410) into MethodDeclaration(425) at 0", "Insert Modifier: public(411) into MethodDeclaration(425) at 1", "Insert SimpleType: OperatorNode(413) into MethodDeclaration(425) at 2", "Insert SimpleName: createNode(414) into MethodDeclaration(425) at 3", "Insert SingleVariableDeclaration(418) into MethodDeclaration(425) at 4", "Insert Block(424) into MethodDeclaration(425) at 5", "Insert MarkerAnnotation(443) into MethodDeclaration(458) at 0", "Insert Modifier: public(444) into MethodDeclaration(458) at 1", "Insert SimpleType: OperatorNode(446) into MethodDeclaration(458) at 2", "Insert SimpleName: createNode(447) into MethodDeclaration(458) at 3", "Insert SingleVariableDeclaration(451) into MethodDeclaration(458) at 4", "Insert Block(457) into MethodDeclaration(458) at 5", "Insert MarkerAnnotation(476) into MethodDeclaration(491) at 0", "Insert Modifier: public(477) into MethodDeclaration(491) at 1", "Insert SimpleType: OperatorNode(479) into MethodDeclaration(491) at 2", "Insert SimpleName: createNode(480) into MethodDeclaration(491) at 3", "Insert SingleVariableDeclaration(484) into MethodDeclaration(491) at 4", "Insert Block(490) into MethodDeclaration(491) at 5", "Insert MarkerAnnotation(509) into MethodDeclaration(524) at 0", "Insert Modifier: public(510) into MethodDeclaration(524) at 1", "Move SimpleType: OperatorNode(918) into MethodDeclaration(524) at 2", "Insert SimpleName: createNode(513) into MethodDeclaration(524) at 3", "Insert SingleVariableDeclaration(517) into MethodDeclaration(524) at 4", "Insert Block(523) into MethodDeclaration(524) at 5", "Insert MarkerAnnotation(542) into MethodDeclaration(557) at 0", "Insert Modifier: public(543) into MethodDeclaration(557) at 1", "Move SimpleType: OperatorNode(715) into MethodDeclaration(557) at 2", "Insert SimpleName: createNode(546) into MethodDeclaration(557) at 3", "Insert SingleVariableDeclaration(550) into MethodDeclaration(557) at 4", "Insert Block(556) into MethodDeclaration(557) at 5", "Insert MarkerAnnotation(575) into MethodDeclaration(590) at 0", "Insert Modifier: public(576) into MethodDeclaration(590) at 1", "Move SimpleType: OperatorNode(661) into MethodDeclaration(590) at 2", "Insert SimpleName: createNode(579) into MethodDeclaration(590) at 3", "Insert SingleVariableDeclaration(583) into MethodDeclaration(590) at 4", "Insert Block(589) into MethodDeclaration(590) at 5", "Insert MarkerAnnotation(615) into MethodDeclaration(630) at 0", "Insert Modifier: public(616) into MethodDeclaration(630) at 1", "Move SimpleType: OperatorNode(621) into MethodDeclaration(630) at 2", "Insert SimpleName: createNode(619) into MethodDeclaration(630) at 3", "Insert SingleVariableDeclaration(623) into MethodDeclaration(630) at 4", "Insert Block(629) into MethodDeclaration(630) at 5", "Update SimpleName: Map(431) to ImmutableTable", "Update ParameterizedType: Map<Pair<String,Integer>,Operator>(458) to ImmutableTable.Builder<String,Integer,Operator>", "Insert SimpleName: Nullable(923) into MarkerAnnotation(924) at 0", "Update TextElement: Returns the corresponding node class representing this operator. (911) to Creates a node representing this operator. ", "Insert SimpleName: SourceLocation(1125) into SimpleType: SourceLocation(1126) at 0", "Insert SimpleName: Override(80) into MarkerAnnotation(81) at 0", "Insert SimpleName: OperatorNode(83) into SimpleType: OperatorNode(84) at 0", "Insert SimpleType: SourceLocation(87) into SingleVariableDeclaration(89) at 0", "Insert SimpleName: location(88) into SingleVariableDeclaration(89) at 1", "Insert ReturnStatement(94) into Block(95) at 0", "Insert SimpleName: Override(111) into MarkerAnnotation(112) at 0", "Insert SimpleName: OperatorNode(114) into SimpleType: OperatorNode(115) at 0", "Insert SimpleType: SourceLocation(118) into SingleVariableDeclaration(120) at 0", "Insert SimpleName: location(119) into SingleVariableDeclaration(120) at 1", "Insert ReturnStatement(125) into Block(126) at 0", "Insert SimpleName: Override(144) into MarkerAnnotation(145) at 0", "Insert SimpleName: OperatorNode(147) into SimpleType: OperatorNode(148) at 0", "Insert SimpleType: SourceLocation(151) into SingleVariableDeclaration(153) at 0", "Insert SimpleName: location(152) into SingleVariableDeclaration(153) at 1", "Insert ReturnStatement(158) into Block(159) at 0", "Insert SimpleName: Override(177) into MarkerAnnotation(178) at 0", "Insert SimpleName: OperatorNode(180) into SimpleType: OperatorNode(181) at 0", "Insert SimpleType: SourceLocation(184) into SingleVariableDeclaration(186) at 0", "Insert SimpleName: location(185) into SingleVariableDeclaration(186) at 1", "Insert ReturnStatement(191) into Block(192) at 0", "Insert SimpleName: Override(210) into MarkerAnnotation(211) at 0", "Insert SimpleName: OperatorNode(213) into SimpleType: OperatorNode(214) at 0", "Insert SimpleType: SourceLocation(217) into SingleVariableDeclaration(219) at 0", "Insert SimpleName: location(218) into SingleVariableDeclaration(219) at 1", "Insert ReturnStatement(224) into Block(225) at 0", "Insert SimpleName: Override(243) into MarkerAnnotation(244) at 0", "Insert SimpleName: OperatorNode(246) into SimpleType: OperatorNode(247) at 0", "Insert SimpleType: SourceLocation(250) into SingleVariableDeclaration(252) at 0", "Insert SimpleName: location(251) into SingleVariableDeclaration(252) at 1", "Insert ReturnStatement(257) into Block(258) at 0", "Insert SimpleName: Override(277) into MarkerAnnotation(278) at 0", "Insert SimpleName: OperatorNode(280) into SimpleType: OperatorNode(281) at 0", "Insert SimpleType: SourceLocation(284) into SingleVariableDeclaration(286) at 0", "Insert SimpleName: location(285) into SingleVariableDeclaration(286) at 1", "Insert ReturnStatement(291) into Block(292) at 0", "Insert SimpleName: Override(310) into MarkerAnnotation(311) at 0", "Insert SimpleName: OperatorNode(313) into SimpleType: OperatorNode(314) at 0", "Insert SimpleType: SourceLocation(317) into SingleVariableDeclaration(319) at 0", "Insert SimpleName: location(318) into SingleVariableDeclaration(319) at 1", "Insert ReturnStatement(324) into Block(325) at 0", "Insert SimpleName: Override(343) into MarkerAnnotation(344) at 0", "Insert SimpleName: OperatorNode(346) into SimpleType: OperatorNode(347) at 0", "Insert SimpleType: SourceLocation(350) into SingleVariableDeclaration(352) at 0", "Insert SimpleName: location(351) into SingleVariableDeclaration(352) at 1", "Insert ReturnStatement(357) into Block(358) at 0", "Insert SimpleName: Override(376) into MarkerAnnotation(377) at 0", "Insert SimpleName: OperatorNode(379) into SimpleType: OperatorNode(380) at 0", "Insert SimpleType: SourceLocation(383) into SingleVariableDeclaration(385) at 0", "Insert SimpleName: location(384) into SingleVariableDeclaration(385) at 1", "Insert ReturnStatement(390) into Block(391) at 0", "Insert SimpleName: Override(409) into MarkerAnnotation(410) at 0", "Insert SimpleName: OperatorNode(412) into SimpleType: OperatorNode(413) at 0", "Insert SimpleType: SourceLocation(416) into SingleVariableDeclaration(418) at 0", "Insert SimpleName: location(417) into SingleVariableDeclaration(418) at 1", "Insert ReturnStatement(423) into Block(424) at 0", "Insert SimpleName: Override(442) into MarkerAnnotation(443) at 0", "Insert SimpleName: OperatorNode(445) into SimpleType: OperatorNode(446) at 0", "Insert SimpleType: SourceLocation(449) into SingleVariableDeclaration(451) at 0", "Insert SimpleName: location(450) into SingleVariableDeclaration(451) at 1", "Insert ReturnStatement(456) into Block(457) at 0", "Insert SimpleName: Override(475) into MarkerAnnotation(476) at 0", "Insert SimpleName: OperatorNode(478) into SimpleType: OperatorNode(479) at 0", "Insert SimpleType: SourceLocation(482) into SingleVariableDeclaration(484) at 0", "Insert SimpleName: location(483) into SingleVariableDeclaration(484) at 1", "Insert ReturnStatement(489) into Block(490) at 0", "Insert SimpleName: Override(508) into MarkerAnnotation(509) at 0", "Insert SimpleType: SourceLocation(515) into SingleVariableDeclaration(517) at 0", "Insert SimpleName: location(516) into SingleVariableDeclaration(517) at 1", "Insert ReturnStatement(522) into Block(523) at 0", "Insert SimpleName: Override(541) into MarkerAnnotation(542) at 0", "Insert SimpleType: SourceLocation(548) into SingleVariableDeclaration(550) at 0", "Insert SimpleName: location(549) into SingleVariableDeclaration(550) at 1", "Insert ReturnStatement(555) into Block(556) at 0", "Insert SimpleName: Override(574) into MarkerAnnotation(575) at 0", "Insert SimpleType: SourceLocation(581) into SingleVariableDeclaration(583) at 0", "Insert SimpleName: location(582) into SingleVariableDeclaration(583) at 1", "Insert ReturnStatement(588) into Block(589) at 0", "Insert SimpleName: Override(614) into MarkerAnnotation(615) at 0", "Insert SimpleType: SourceLocation(621) into SingleVariableDeclaration(623) at 0", "Insert SimpleName: location(622) into SingleVariableDeclaration(623) at 1", "Insert ReturnStatement(628) into Block(629) at 0", "Update SimpleType: Pair(450) to ImmutableTable.Builder", "Move SimpleType: Pair(450) into ParameterizedType: ImmutableTable.Builder<String,Integer,Operator>(709) at 0", "Move SimpleType: String(436) into ParameterizedType: ImmutableTable.Builder<String,Integer,Operator>(709) at 1", "Move SimpleType: Integer(438) into ParameterizedType: ImmutableTable.Builder<String,Integer,Operator>(709) at 2", "Move SimpleType: Operator(441) into ParameterizedType: ImmutableTable.Builder<String,Integer,Operator>(709) at 3", "Update SimpleName: fetchMap(459) to builder", "Update SimpleName: FETCH_MAP(488) to OPERATOR_TABLE", "Insert MethodInvocation(935) into Assignment: =(936) at 1", "Insert SimpleName: SourceLocation(86) into SimpleType: SourceLocation(87) at 0", "Insert ClassInstanceCreation(93) into ReturnStatement(94) at 0", "Insert SimpleName: SourceLocation(117) into SimpleType: SourceLocation(118) at 0", "Insert ClassInstanceCreation(124) into ReturnStatement(125) at 0", "Insert SimpleName: SourceLocation(150) into SimpleType: SourceLocation(151) at 0", "Insert ClassInstanceCreation(157) into ReturnStatement(158) at 0", "Insert SimpleName: SourceLocation(183) into SimpleType: SourceLocation(184) at 0", "Insert ClassInstanceCreation(190) into ReturnStatement(191) at 0", "Insert SimpleName: SourceLocation(216) into SimpleType: SourceLocation(217) at 0", "Insert ClassInstanceCreation(223) into ReturnStatement(224) at 0", "Insert SimpleName: SourceLocation(249) into SimpleType: SourceLocation(250) at 0", "Insert ClassInstanceCreation(256) into ReturnStatement(257) at 0", "Insert SimpleName: SourceLocation(283) into SimpleType: SourceLocation(284) at 0", "Insert ClassInstanceCreation(290) into ReturnStatement(291) at 0", "Insert SimpleName: SourceLocation(316) into SimpleType: SourceLocation(317) at 0", "Insert ClassInstanceCreation(323) into ReturnStatement(324) at 0", "Insert SimpleName: SourceLocation(349) into SimpleType: SourceLocation(350) at 0", "Insert ClassInstanceCreation(356) into ReturnStatement(357) at 0", "Insert SimpleName: SourceLocation(382) into SimpleType: SourceLocation(383) at 0", "Insert ClassInstanceCreation(389) into ReturnStatement(390) at 0", "Insert SimpleName: SourceLocation(415) into SimpleType: SourceLocation(416) at 0", "Insert ClassInstanceCreation(422) into ReturnStatement(423) at 0", "Insert SimpleName: SourceLocation(448) into SimpleType: SourceLocation(449) at 0", "Insert ClassInstanceCreation(455) into ReturnStatement(456) at 0", "Insert SimpleName: SourceLocation(481) into SimpleType: SourceLocation(482) at 0", "Insert ClassInstanceCreation(488) into ReturnStatement(489) at 0", "Insert SimpleName: SourceLocation(514) into SimpleType: SourceLocation(515) at 0", "Insert ClassInstanceCreation(521) into ReturnStatement(522) at 0", "Insert SimpleName: SourceLocation(547) into SimpleType: SourceLocation(548) at 0", "Insert ClassInstanceCreation(554) into ReturnStatement(555) at 0", "Insert SimpleName: SourceLocation(580) into SimpleType: SourceLocation(581) at 0", "Insert ClassInstanceCreation(587) into ReturnStatement(588) at 0", "Insert SimpleName: SourceLocation(620) into SimpleType: SourceLocation(621) at 0", "Insert ClassInstanceCreation(627) into ReturnStatement(628) at 0", "Insert QualifiedName: ImmutableTable.Builder(701) into SimpleType: ImmutableTable.Builder(702) at 0", "Update SimpleName: Maps(460) to ImmutableTable", "Update SimpleName: newHashMap(461) to builder", "Move MethodInvocation(482) into ExpressionStatement(733) at 0", "Move SimpleName: of(475) into MethodInvocation(732) at 4", "Update SimpleName: Collections(489) to builder", "Update SimpleName: unmodifiableMap(490) to build", "Update SimpleName: FETCH_MAP(527) to OPERATOR_TABLE", "Move SimpleName: tokenString(531) into MethodInvocation(778) at 2", "Move SimpleName: numOperands(532) into MethodInvocation(778) at 3", "Insert SimpleName: ImmutableList(932) into MethodInvocation(935) at 0", "Insert SimpleName: copyOf(933) into MethodInvocation(935) at 1", "Insert SimpleName: syntax(934) into MethodInvocation(935) at 2", "Move SimpleType: NegativeOpNode(79) into ClassInstanceCreation(93) at 0", "Insert SimpleName: location(92) into ClassInstanceCreation(93) at 1", "Move SimpleType: NotOpNode(95) into ClassInstanceCreation(124) at 0", "Insert SimpleName: location(123) into ClassInstanceCreation(124) at 1", "Move SimpleType: TimesOpNode(113) into ClassInstanceCreation(157) at 0", "Insert SimpleName: location(156) into ClassInstanceCreation(157) at 1", "Move SimpleType: DivideByOpNode(131) into ClassInstanceCreation(190) at 0", "Insert SimpleName: location(189) into ClassInstanceCreation(190) at 1", "Move SimpleType: ModOpNode(149) into ClassInstanceCreation(223) at 0", "Insert SimpleName: location(222) into ClassInstanceCreation(223) at 1", "Move SimpleType: PlusOpNode(167) into ClassInstanceCreation(256) at 0", "Insert SimpleName: location(255) into ClassInstanceCreation(256) at 1", "Move SimpleType: MinusOpNode(186) into ClassInstanceCreation(290) at 0", "Insert SimpleName: location(289) into ClassInstanceCreation(290) at 1", "Move SimpleType: LessThanOpNode(204) into ClassInstanceCreation(323) at 0", "Insert SimpleName: location(322) into ClassInstanceCreation(323) at 1", "Move SimpleType: GreaterThanOpNode(222) into ClassInstanceCreation(356) at 0", "Insert SimpleName: location(355) into ClassInstanceCreation(356) at 1", "Move SimpleType: LessThanOrEqualOpNode(240) into ClassInstanceCreation(389) at 0", "Insert SimpleName: location(388) into ClassInstanceCreation(389) at 1", "Move SimpleType: GreaterThanOrEqualOpNode(258) into ClassInstanceCreation(422) at 0", "Insert SimpleName: location(421) into ClassInstanceCreation(422) at 1", "Move SimpleType: EqualOpNode(276) into ClassInstanceCreation(455) at 0", "Insert SimpleName: location(454) into ClassInstanceCreation(455) at 1", "Move SimpleType: NotEqualOpNode(294) into ClassInstanceCreation(488) at 0", "Insert SimpleName: location(487) into ClassInstanceCreation(488) at 1", "Move SimpleType: AndOpNode(312) into ClassInstanceCreation(521) at 0", "Insert SimpleName: location(520) into ClassInstanceCreation(521) at 1", "Move SimpleType: OrOpNode(330) into ClassInstanceCreation(554) at 0", "Insert SimpleName: location(553) into ClassInstanceCreation(554) at 1", "Move SimpleType: NullCoalescingOpNode(348) into ClassInstanceCreation(587) at 0", "Insert SimpleName: location(586) into ClassInstanceCreation(587) at 1", "Move SimpleType: ConditionalOpNode(373) into ClassInstanceCreation(627) at 0", "Insert SimpleName: location(626) into ClassInstanceCreation(627) at 1", "Update SimpleName: Pair(474) to builder", "Insert SimpleName: put(724) into MethodInvocation(732) at 1", "Update SimpleName: of(475) to op", "Delete QualifiedName: Associativity.RIGHT(76)", "Delete TypeLiteral(80)", "Delete QualifiedName: Associativity.RIGHT(93)", "Delete TypeLiteral(96)", "Delete QualifiedName: Associativity.LEFT(111)", "Delete TypeLiteral(114)", "Delete QualifiedName: Associativity.LEFT(129)", "Delete TypeLiteral(132)", "Delete QualifiedName: Associativity.LEFT(147)", "Delete TypeLiteral(150)", "Delete QualifiedName: Associativity.LEFT(165)", "Delete TypeLiteral(168)", "Delete QualifiedName: Associativity.LEFT(183)", "Delete TypeLiteral(187)", "Delete QualifiedName: Associativity.LEFT(202)", "Delete TypeLiteral(205)", "Delete QualifiedName: Associativity.LEFT(220)", "Delete TypeLiteral(223)", "Delete QualifiedName: Associativity.LEFT(238)", "Delete TypeLiteral(241)", "Delete QualifiedName: Associativity.LEFT(256)", "Delete TypeLiteral(259)", "Delete QualifiedName: Associativity.LEFT(274)", "Delete TypeLiteral(277)", "Delete QualifiedName: Associativity.LEFT(292)", "Delete TypeLiteral(295)", "Delete QualifiedName: Associativity.LEFT(310)", "Delete TypeLiteral(313)", "Delete QualifiedName: Associativity.LEFT(328)", "Delete TypeLiteral(331)", "Delete QualifiedName: Associativity.RIGHT(346)", "Delete TypeLiteral(349)", "Delete QualifiedName: Associativity.RIGHT(371)", "Delete TypeLiteral(374)", "Delete SimpleName: Pair(433)", "Delete SimpleType: Pair(434)", "Delete ParameterizedType: Pair<String,Integer>(439)", "Delete SimpleName: Pair(449)", "Delete SimpleName: Map(447)", "Delete SimpleType: Map(448)", "Delete ParameterizedType: Pair<String,Integer>(455)", "Delete SimpleName: fetchMap(472)", "Delete SimpleName: put(473)", "Delete SimpleName: op(483)", "Delete MethodInvocation(484)", "Delete SimpleName: fetchMap(491)", "Delete SimpleName: Pair(529)", "Delete SimpleName: of(530)", "Delete MethodInvocation(533)", "Delete TextElement: The corresponding node class representing this operator. (613)", "Delete TagElement(614)", "Delete Javadoc(615)", "Delete Modifier: private(616)", "Delete Modifier: final(617)", "Delete SimpleName: Class(618)", "Delete SimpleType: Class(619)", "Delete WildcardType: ? extends OperatorNode(622)", "Delete ParameterizedType: Class<? extends OperatorNode>(623)", "Delete SimpleName: nodeClass(624)", "Delete VariableDeclarationFragment(625)", "Delete FieldDeclaration(626)", "Delete SimpleName: nodeClass(638)", "Delete TextElement:  The corresponding node class representing this operator.(639)", "Delete TagElement: @param(640)", "Delete SimpleName: Class(658)", "Delete SimpleType: Class(659)", "Delete WildcardType: ? extends OperatorNode(662)", "Delete ParameterizedType: Class<? extends OperatorNode>(663)", "Delete SimpleName: nodeClass(664)", "Delete SingleVariableDeclaration(665)", "Delete SimpleName: nodeClass(670)", "Delete SimpleName: nodeClass(688)", "Delete TextElement:  The corresponding node class representing this operator.(689)", "Delete TagElement: @param(690)", "Delete SimpleName: Class(712)", "Delete SimpleType: Class(713)", "Delete WildcardType: ? extends OperatorNode(716)", "Delete ParameterizedType: Class<? extends OperatorNode>(717)", "Delete SimpleName: nodeClass(718)", "Delete SingleVariableDeclaration(719)", "Delete SimpleName: syntax(723)", "Delete ThisExpression(835)", "Delete SimpleName: nodeClass(836)", "Delete FieldAccess(837)", "Delete SimpleName: nodeClass(838)", "Delete Assignment: =(839)", "Delete ExpressionStatement(840)", "Delete SimpleType: Class(916)", "Delete WildcardType: ? extends OperatorNode(919)", "Delete ParameterizedType: Class<? extends OperatorNode>(920)", "Delete SimpleName: nodeClass(922)", "Delete ReturnStatement(923)", "Delete Block(924)"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}