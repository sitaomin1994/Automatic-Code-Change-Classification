{"application": "apache-parquet-mr", "csha": "3dd2210e79a8eb84378c370b32652f9a53f87a93", "files": [{"ColumnChunkPageWriteStore_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: java.util.List to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 15", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleType: Encoding to ParameterizedType: Set<Encoding> at 1", "INS SimpleName: dlEncodings to VariableDeclarationFragment at 0", "INS SimpleName: Encoding to SimpleType: Encoding at 0", "INS SimpleName: Encoding to SimpleType: Encoding at 0", "INS SimpleType: Encoding to ParameterizedType: HashSet<Encoding> at 1", "INS SimpleName: Set to SimpleType: Set at 0", "INS ParameterizedType: HashSet<Encoding> to ClassInstanceCreation at 0", "INS Modifier: private to FieldDeclaration at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ParameterizedType: Set<Encoding> to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 15", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS SimpleType: Set to ParameterizedType: Set<Encoding> at 0", "INS SimpleType: HashSet to ParameterizedType: HashSet<Encoding> at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 16", "operations": ["INS SimpleType: Encoding to ParameterizedType: List<Encoding> at 1", "INS ParameterizedType: List<Encoding> to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleType: List to ParameterizedType: List<Encoding> at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: Encoding to SimpleType: Encoding at 0", "INS FieldDeclaration to TypeDeclaration: class at 16", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: dataEncodings to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from encodings to rlEncodings", "operations": ["UPD SimpleName: encodings from encodings to rlEncodings", "UPD SimpleName: encodings from encodings to rlEncodings", "UPD SimpleName: encodings from encodings to rlEncodings"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS ExpressionStatement to Block at 6", "INS SimpleName: clear to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: dlEncodings to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: dataEncodings to MethodInvocation at 0", "INS ExpressionStatement to Block at 7", "INS SimpleName: clear to MethodInvocation at 1"]}, {"root": "UPDATE from encodings to dlEncodings", "operations": ["UPD SimpleName: encodings from encodings to dlEncodings"]}, {"root": "UPDATE from encodings to dataEncodings", "operations": ["UPD SimpleName: encodings from encodings to dataEncodings", "UPD SimpleName: encodings from encodings to dataEncodings"]}, {"root": "INS SimpleName: rlEncodings to MethodInvocation at 6", "operations": ["INS SimpleName: rlEncodings to MethodInvocation at 6"]}, {"root": "INS SimpleName: dlEncodings to MethodInvocation at 7", "operations": ["INS SimpleName: dlEncodings to MethodInvocation at 7"]}, {"root": "INS SimpleName: dataEncodings to MethodInvocation at 8", "operations": ["INS SimpleName: dataEncodings to MethodInvocation at 8"]}, {"root": "INS ClassInstanceCreation to MethodInvocation at 9", "operations": ["INS ClassInstanceCreation to MethodInvocation at 9", "INS SimpleType: HashSet to ParameterizedType: HashSet<Encoding> at 0", "INS SimpleType: Encoding to ParameterizedType: HashSet<Encoding> at 1", "INS SimpleName: dataEncodings to ClassInstanceCreation at 1", "INS ParameterizedType: HashSet<Encoding> to ClassInstanceCreation at 0", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS SimpleName: Encoding to SimpleType: Encoding at 0"]}, {"root": "DEL SimpleName: encodings", "operations": ["DEL SimpleName: encodings"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: dictionaryPage", "DEL SimpleName: add", "DEL SimpleName: encodings", "DEL ExpressionStatement", "DEL SimpleName: getEncoding", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: encodings", "operations": ["DEL SimpleName: encodings"]}]}}, {"ColumnChunkPageWriteStore_diff": {"operations": ["Insert ImportDeclaration(17) into CompilationUnit(942) at 8", "Insert QualifiedName: java.util.List(16) into ImportDeclaration(17) at 0", "Insert FieldDeclaration(169) into TypeDeclaration: class(820) at 15", "Insert FieldDeclaration(184) into TypeDeclaration: class(820) at 16", "Insert Modifier: private(155) into FieldDeclaration(169) at 0", "Insert ParameterizedType: Set<Encoding>(160) into FieldDeclaration(169) at 1", "Insert VariableDeclarationFragment(168) into FieldDeclaration(169) at 2", "Insert Modifier: private(170) into FieldDeclaration(184) at 0", "Insert ParameterizedType: List<Encoding>(175) into FieldDeclaration(184) at 1", "Insert VariableDeclarationFragment(183) into FieldDeclaration(184) at 2", "Update SimpleName: encodings(144) to rlEncodings", "Insert SimpleType: Set(157) into ParameterizedType: Set<Encoding>(160) at 0", "Insert SimpleType: Encoding(159) into ParameterizedType: Set<Encoding>(160) at 1", "Insert SimpleName: dlEncodings(161) into VariableDeclarationFragment(168) at 0", "Insert ClassInstanceCreation(167) into VariableDeclarationFragment(168) at 1", "Insert SimpleType: List(172) into ParameterizedType: List<Encoding>(175) at 0", "Insert SimpleType: Encoding(174) into ParameterizedType: List<Encoding>(175) at 1", "Insert SimpleName: dataEncodings(176) into VariableDeclarationFragment(183) at 0", "Move ClassInstanceCreation(628) into VariableDeclarationFragment(183) at 1", "Insert ExpressionStatement(709) into Block(718) at 6", "Insert ExpressionStatement(713) into Block(718) at 7", "Insert SimpleName: Set(156) into SimpleType: Set(157) at 0", "Insert SimpleName: Encoding(158) into SimpleType: Encoding(159) at 0", "Insert ParameterizedType: HashSet<Encoding>(166) into ClassInstanceCreation(167) at 0", "Insert SimpleName: List(171) into SimpleType: List(172) at 0", "Insert SimpleName: Encoding(173) into SimpleType: Encoding(174) at 0", "Insert MethodInvocation(708) into ExpressionStatement(709) at 0", "Insert MethodInvocation(712) into ExpressionStatement(713) at 0", "Insert SimpleType: HashSet(163) into ParameterizedType: HashSet<Encoding>(166) at 0", "Insert SimpleType: Encoding(165) into ParameterizedType: HashSet<Encoding>(166) at 1", "Update SimpleName: encodings(360) to rlEncodings", "Update SimpleName: encodings(365) to dlEncodings", "Update SimpleName: encodings(370) to dataEncodings", "Update SimpleName: encodings(537) to dataEncodings", "Insert SimpleName: rlEncodings(647) into MethodInvocation(650) at 6", "Insert SimpleName: dlEncodings(648) into MethodInvocation(650) at 7", "Insert SimpleName: dataEncodings(649) into MethodInvocation(650) at 8", "Update SimpleName: encodings(675) to rlEncodings", "Insert SimpleName: dlEncodings(706) into MethodInvocation(708) at 0", "Insert SimpleName: clear(707) into MethodInvocation(708) at 1", "Insert SimpleName: dataEncodings(710) into MethodInvocation(712) at 0", "Insert SimpleName: clear(711) into MethodInvocation(712) at 1", "Insert SimpleName: HashSet(162) into SimpleType: HashSet(163) at 0", "Insert SimpleName: Encoding(164) into SimpleType: Encoding(165) at 0", "Insert ClassInstanceCreation(676) into MethodInvocation(677) at 9", "Insert ParameterizedType: HashSet<Encoding>(674) into ClassInstanceCreation(676) at 0", "Insert SimpleName: dataEncodings(675) into ClassInstanceCreation(676) at 1", "Insert SimpleType: HashSet(671) into ParameterizedType: HashSet<Encoding>(674) at 0", "Insert SimpleType: Encoding(673) into ParameterizedType: HashSet<Encoding>(674) at 1", "Insert SimpleName: HashSet(670) into SimpleType: HashSet(671) at 0", "Insert SimpleName: Encoding(672) into SimpleType: Encoding(673) at 0", "Delete SimpleName: encodings(627)", "Delete SimpleName: encodings(607)", "Delete SimpleName: add(608)", "Delete SimpleName: dictionaryPage(609)", "Delete SimpleName: getEncoding(610)", "Delete MethodInvocation(611)", "Delete MethodInvocation(612)", "Delete ExpressionStatement(613)", "Delete SimpleName: encodings(649)"]}}, {"DictionaryPageReader_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.parquet.column.EncodingStats to ImportDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: EncodingStats to SimpleType: EncodingStats at 0", "INS SimpleName: column to MethodInvocation at 0", "INS SimpleName: stats to VariableDeclarationFragment at 0", "INS SimpleName: getEncodingStats to MethodInvocation at 1", "INS SimpleType: EncodingStats to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: stats to InfixExpression: != at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to InfixExpression: && at 0", "INS IfStatement to Block at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: hasDictionaryPages to MethodInvocation at 1", "INS InfixExpression: && to ReturnStatement at 0", "INS SimpleName: stats to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: stats to MethodInvocation at 0", "INS SimpleName: hasDictionaryEncodedPages to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: && at 1", "INS InfixExpression: != to IfStatement at 0"]}]}}, {"DictionaryPageReader_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(336) at 4", "Insert QualifiedName: org.apache.parquet.column.EncodingStats(8) into ImportDeclaration(9) at 0", "Insert VariableDeclarationStatement(297) into Block(333) at 0", "Insert IfStatement(310) into Block(333) at 1", "Insert SimpleType: EncodingStats(291) into VariableDeclarationStatement(297) at 0", "Insert VariableDeclarationFragment(296) into VariableDeclarationStatement(297) at 1", "Insert InfixExpression: !=(300) into IfStatement(310) at 0", "Insert Block(309) into IfStatement(310) at 1", "Insert SimpleName: EncodingStats(290) into SimpleType: EncodingStats(291) at 0", "Insert SimpleName: stats(292) into VariableDeclarationFragment(296) at 0", "Insert MethodInvocation(295) into VariableDeclarationFragment(296) at 1", "Insert SimpleName: stats(298) into InfixExpression: !=(300) at 0", "Insert NullLiteral(299) into InfixExpression: !=(300) at 1", "Insert ReturnStatement(308) into Block(309) at 0", "Insert SimpleName: column(293) into MethodInvocation(295) at 0", "Insert SimpleName: getEncodingStats(294) into MethodInvocation(295) at 1", "Insert InfixExpression: &&(307) into ReturnStatement(308) at 0", "Insert MethodInvocation(303) into InfixExpression: &&(307) at 0", "Insert MethodInvocation(306) into InfixExpression: &&(307) at 1", "Insert SimpleName: stats(301) into MethodInvocation(303) at 0", "Insert SimpleName: hasDictionaryPages(302) into MethodInvocation(303) at 1", "Insert SimpleName: stats(304) into MethodInvocation(306) at 0", "Insert SimpleName: hasDictionaryEncodedPages(305) into MethodInvocation(306) at 1"]}}, {"ParquetFileWriter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 29", "operations": ["INS ImportDeclaration to CompilationUnit at 29", "INS QualifiedName: org.apache.parquet.column.EncodingStats to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 21", "operations": ["INS SimpleType: EncodingStats.Builder to FieldDeclaration at 1", "INS QualifiedName: EncodingStats.Builder to SimpleType: EncodingStats.Builder at 0", "INS SimpleName: encodingStatsBuilder to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 21", "INS VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 7", "INS ParameterizedType: Set<Encoding> to SingleVariableDeclaration at 0", "INS SimpleType: Set to ParameterizedType: Set<Encoding> at 0", "INS SimpleType: Encoding to ParameterizedType: Set<Encoding> at 1", "INS SimpleName: Set to SimpleType: Set at 0", "INS SimpleName: Encoding to SimpleType: Encoding at 0", "INS SimpleName: rlEncodings to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 8", "operations": ["INS SimpleName: dlEncodings to SingleVariableDeclaration at 1", "INS ParameterizedType: Set<Encoding> to SingleVariableDeclaration at 0", "INS SimpleName: Encoding to SimpleType: Encoding at 0", "INS SimpleType: Set to ParameterizedType: Set<Encoding> at 0", "INS SimpleType: Encoding to ParameterizedType: Set<Encoding> at 1", "INS SimpleName: Set to SimpleType: Set at 0", "INS SingleVariableDeclaration to MethodDeclaration at 8"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS SimpleName: encodingStatsBuilder to FieldAccess at 1", "INS ExpressionStatement to Block at 5", "INS ClassInstanceCreation to Assignment: = at 1", "INS ThisExpression to FieldAccess at 0", "INS QualifiedName: EncodingStats.Builder to SimpleType: EncodingStats.Builder at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: EncodingStats.Builder to ClassInstanceCreation at 0", "INS FieldAccess to Assignment: = at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS ClassInstanceCreation to Assignment: = at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: encodingStatsBuilder to FieldAccess at 1", "INS SimpleType: EncodingStats.Builder to ClassInstanceCreation at 0", "INS ThisExpression to FieldAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 4", "INS QualifiedName: EncodingStats.Builder to SimpleType: EncodingStats.Builder at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: encodingStatsBuilder to MethodInvocation at 0", "INS SimpleName: clear to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 11", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: encodingStatsBuilder to MethodInvocation at 0", "INS SimpleName: dictionaryPage to MethodInvocation at 0", "INS ExpressionStatement to Block at 11", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: addDictEncoding to MethodInvocation at 1", "INS SimpleName: getEncoding to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 10", "operations": ["INS ExpressionStatement to Block at 10", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: valuesEncoding to MethodInvocation at 2", "INS SimpleName: addDataEncoding to MethodInvocation at 1", "INS SimpleName: encodingStatsBuilder to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 11", "operations": ["INS SimpleName: addDataEncoding to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: valuesEncoding to MethodInvocation at 2", "INS ExpressionStatement to Block at 11", "INS SimpleName: encodingStatsBuilder to MethodInvocation at 0"]}, {"root": "UPDATE from encodings to dataEncodings", "operations": ["UPD SimpleName: encodings from encodings to dataEncodings"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS ExpressionStatement to Block at 7", "INS SimpleName: addDataEncodings to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: encodingStatsBuilder to MethodInvocation at 0", "INS SimpleName: dataEncodings to MethodInvocation at 2"]}, {"root": "INS IfStatement to Block at 8", "operations": ["INS IfStatement to Block at 8", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS SimpleName: encodingStatsBuilder to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: rlEncodings to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: withV2Pages to MethodInvocation at 1", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 10", "operations": ["INS SimpleName: currentEncodings to MethodInvocation at 0", "INS ExpressionStatement to Block at 10", "INS SimpleName: addAll to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: dlEncodings to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 11", "operations": ["INS SimpleName: dataEncodings to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 11", "INS SimpleName: currentEncodings to MethodInvocation at 0", "INS SimpleName: addAll to MethodInvocation at 1"]}, {"root": "UPDATE from encodings to rlEncodings", "operations": ["UPD SimpleName: encodings from encodings to rlEncodings"]}, {"root": "INS MethodInvocation to MethodInvocation at 5", "operations": ["INS MethodInvocation to MethodInvocation at 5", "INS SimpleName: encodingStatsBuilder to MethodInvocation at 0", "INS SimpleName: build to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 5", "operations": ["INS MethodInvocation to MethodInvocation at 5", "INS SimpleName: getEncodingStats to MethodInvocation at 1", "INS SimpleName: chunk to MethodInvocation at 0"]}]}}, {"ParquetFileWriter_diff": {"operations": ["Insert ImportDeclaration(59) into CompilationUnit(3640) at 29", "Insert QualifiedName: org.apache.parquet.column.EncodingStats(58) into ImportDeclaration(59) at 0", "Insert FieldDeclaration(293) into TypeDeclaration: class(3639) at 21", "Insert Modifier: private(288) into FieldDeclaration(293) at 0", "Insert SimpleType: EncodingStats.Builder(290) into FieldDeclaration(293) at 1", "Insert VariableDeclarationFragment(292) into FieldDeclaration(293) at 2", "Insert SingleVariableDeclaration(1510) into MethodDeclaration(1619) at 7", "Insert SingleVariableDeclaration(1517) into MethodDeclaration(1619) at 8", "Insert QualifiedName: EncodingStats.Builder(289) into SimpleType: EncodingStats.Builder(290) at 0", "Insert SimpleName: encodingStatsBuilder(291) into VariableDeclarationFragment(292) at 0", "Insert ExpressionStatement(745) into Block(746) at 5", "Insert ExpressionStatement(836) into Block(837) at 4", "Insert ExpressionStatement(961) into Block(1015) at 1", "Insert ExpressionStatement(1140) into Block(1148) at 11", "Insert ExpressionStatement(1290) into Block(1306) at 10", "Insert ExpressionStatement(1456) into Block(1472) at 11", "Insert ParameterizedType: Set<Encoding>(1508) into SingleVariableDeclaration(1510) at 0", "Insert SimpleName: rlEncodings(1509) into SingleVariableDeclaration(1510) at 1", "Insert ParameterizedType: Set<Encoding>(1515) into SingleVariableDeclaration(1517) at 0", "Insert SimpleName: dlEncodings(1516) into SingleVariableDeclaration(1517) at 1", "Update SimpleName: encodings(1464) to dataEncodings", "Insert ExpressionStatement(1589) into Block(1618) at 7", "Insert IfStatement(1598) into Block(1618) at 8", "Insert ExpressionStatement(1608) into Block(1618) at 10", "Insert ExpressionStatement(1613) into Block(1618) at 11", "Insert Assignment: =(744) into ExpressionStatement(745) at 0", "Insert Assignment: =(835) into ExpressionStatement(836) at 0", "Insert MethodInvocation(960) into ExpressionStatement(961) at 0", "Insert MethodInvocation(1139) into ExpressionStatement(1140) at 0", "Insert MethodInvocation(1289) into ExpressionStatement(1290) at 0", "Insert MethodInvocation(1455) into ExpressionStatement(1456) at 0", "Insert SimpleType: Set(1505) into ParameterizedType: Set<Encoding>(1508) at 0", "Insert SimpleType: Encoding(1507) into ParameterizedType: Set<Encoding>(1508) at 1", "Insert SimpleType: Set(1512) into ParameterizedType: Set<Encoding>(1515) at 0", "Insert SimpleType: Encoding(1514) into ParameterizedType: Set<Encoding>(1515) at 1", "Insert MethodInvocation(1588) into ExpressionStatement(1589) at 0", "Insert MethodInvocation(1592) into IfStatement(1598) at 0", "Insert Block(1597) into IfStatement(1598) at 1", "Insert MethodInvocation(1607) into ExpressionStatement(1608) at 0", "Insert MethodInvocation(1612) into ExpressionStatement(1613) at 0", "Insert FieldAccess(740) into Assignment: =(744) at 0", "Insert ClassInstanceCreation(743) into Assignment: =(744) at 1", "Insert FieldAccess(831) into Assignment: =(835) at 0", "Insert ClassInstanceCreation(834) into Assignment: =(835) at 1", "Insert SimpleName: encodingStatsBuilder(958) into MethodInvocation(960) at 0", "Insert SimpleName: clear(959) into MethodInvocation(960) at 1", "Insert SimpleName: encodingStatsBuilder(1134) into MethodInvocation(1139) at 0", "Insert SimpleName: addDictEncoding(1135) into MethodInvocation(1139) at 1", "Insert MethodInvocation(1138) into MethodInvocation(1139) at 2", "Insert SimpleName: encodingStatsBuilder(1286) into MethodInvocation(1289) at 0", "Insert SimpleName: addDataEncoding(1287) into MethodInvocation(1289) at 1", "Insert SimpleName: valuesEncoding(1288) into MethodInvocation(1289) at 2", "Insert SimpleName: encodingStatsBuilder(1452) into MethodInvocation(1455) at 0", "Insert SimpleName: addDataEncoding(1453) into MethodInvocation(1455) at 1", "Insert SimpleName: valuesEncoding(1454) into MethodInvocation(1455) at 2", "Insert SimpleName: Set(1504) into SimpleType: Set(1505) at 0", "Insert SimpleName: Encoding(1506) into SimpleType: Encoding(1507) at 0", "Insert SimpleName: Set(1511) into SimpleType: Set(1512) at 0", "Insert SimpleName: Encoding(1513) into SimpleType: Encoding(1514) at 0", "Insert SimpleName: encodingStatsBuilder(1585) into MethodInvocation(1588) at 0", "Insert SimpleName: addDataEncodings(1586) into MethodInvocation(1588) at 1", "Insert SimpleName: dataEncodings(1587) into MethodInvocation(1588) at 2", "Insert SimpleName: rlEncodings(1590) into MethodInvocation(1592) at 0", "Insert SimpleName: isEmpty(1591) into MethodInvocation(1592) at 1", "Insert ExpressionStatement(1596) into Block(1597) at 0", "Update SimpleName: encodings(1528) to rlEncodings", "Insert SimpleName: currentEncodings(1604) into MethodInvocation(1607) at 0", "Insert SimpleName: addAll(1605) into MethodInvocation(1607) at 1", "Insert SimpleName: dlEncodings(1606) into MethodInvocation(1607) at 2", "Insert SimpleName: currentEncodings(1609) into MethodInvocation(1612) at 0", "Insert SimpleName: addAll(1610) into MethodInvocation(1612) at 1", "Insert SimpleName: dataEncodings(1611) into MethodInvocation(1612) at 2", "Insert ThisExpression(738) into FieldAccess(740) at 0", "Insert SimpleName: encodingStatsBuilder(739) into FieldAccess(740) at 1", "Insert SimpleType: EncodingStats.Builder(742) into ClassInstanceCreation(743) at 0", "Insert ThisExpression(829) into FieldAccess(831) at 0", "Insert SimpleName: encodingStatsBuilder(830) into FieldAccess(831) at 1", "Insert SimpleType: EncodingStats.Builder(833) into ClassInstanceCreation(834) at 0", "Insert SimpleName: dictionaryPage(1136) into MethodInvocation(1138) at 0", "Insert SimpleName: getEncoding(1137) into MethodInvocation(1138) at 1", "Insert MethodInvocation(1595) into ExpressionStatement(1596) at 0", "Insert MethodInvocation(1656) into MethodInvocation(1664) at 5", "Insert QualifiedName: EncodingStats.Builder(741) into SimpleType: EncodingStats.Builder(742) at 0", "Insert QualifiedName: EncodingStats.Builder(832) into SimpleType: EncodingStats.Builder(833) at 0", "Insert SimpleName: encodingStatsBuilder(1593) into MethodInvocation(1595) at 0", "Insert SimpleName: withV2Pages(1594) into MethodInvocation(1595) at 1", "Insert SimpleName: encodingStatsBuilder(1654) into MethodInvocation(1656) at 0", "Insert SimpleName: build(1655) into MethodInvocation(1656) at 1", "Insert MethodInvocation(2061) into MethodInvocation(2079) at 5", "Insert SimpleName: chunk(2059) into MethodInvocation(2061) at 0", "Insert SimpleName: getEncodingStats(2060) into MethodInvocation(2061) at 1"]}}, {"DictionaryFilter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: org.apache.parquet.column.EncodingStats to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: stats to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: EncodingStats to VariableDeclarationStatement at 0", "INS SimpleName: EncodingStats to SimpleType: EncodingStats at 0", "INS SimpleName: meta to MethodInvocation at 0", "INS SimpleName: getEncodingStats to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: stats to MethodInvocation at 0", "INS SimpleName: stats to InfixExpression: != at 0", "INS IfStatement to Block at 1", "INS SimpleName: hasNonDictionaryEncodedPages to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to ReturnStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1"]}]}}, {"DictionaryFilter_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(1281) at 5", "Insert QualifiedName: org.apache.parquet.column.EncodingStats(10) into ImportDeclaration(11) at 0", "Insert VariableDeclarationStatement(1223) into Block(1278) at 0", "Insert IfStatement(1232) into Block(1278) at 1", "Insert SimpleType: EncodingStats(1217) into VariableDeclarationStatement(1223) at 0", "Insert VariableDeclarationFragment(1222) into VariableDeclarationStatement(1223) at 1", "Insert InfixExpression: !=(1226) into IfStatement(1232) at 0", "Insert Block(1231) into IfStatement(1232) at 1", "Insert SimpleName: EncodingStats(1216) into SimpleType: EncodingStats(1217) at 0", "Insert SimpleName: stats(1218) into VariableDeclarationFragment(1222) at 0", "Insert MethodInvocation(1221) into VariableDeclarationFragment(1222) at 1", "Insert SimpleName: stats(1224) into InfixExpression: !=(1226) at 0", "Insert NullLiteral(1225) into InfixExpression: !=(1226) at 1", "Insert ReturnStatement(1230) into Block(1231) at 0", "Insert SimpleName: meta(1219) into MethodInvocation(1221) at 0", "Insert SimpleName: getEncodingStats(1220) into MethodInvocation(1221) at 1", "Insert MethodInvocation(1229) into ReturnStatement(1230) at 0", "Insert SimpleName: stats(1227) into MethodInvocation(1229) at 0", "Insert SimpleName: hasNonDictionaryEncodedPages(1228) into MethodInvocation(1229) at 1"]}}, {"ParquetMetadataConverter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 19", "operations": ["INS QualifiedName: org.apache.parquet.format.PageEncodingStats to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 19"]}, {"root": "INS ImportDeclaration to CompilationUnit at 40", "operations": ["INS ImportDeclaration to CompilationUnit at 40", "INS QualifiedName: org.apache.parquet.column.EncodingStats to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: stat to SingleVariableDeclaration at 1", "INS SwitchCase to SwitchStatement at 3", "INS SimpleName: PageEncodingStats to SimpleType: PageEncodingStats at 0", "INS SimpleType: PageEncodingStats to SingleVariableDeclaration at 0", "INS BreakStatement to SwitchStatement at 5", "INS SimpleType: EncodingStats.Builder to VariableDeclarationStatement at 0", "INS SimpleName: getEncoding to MethodInvocation at 1", "INS SimpleName: convertEncodingStats to MethodDeclaration at 2", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: addDataEncoding to MethodInvocation at 1", "INS SimpleName: getEncoding to MethodInvocation at 1", "INS NullLiteral to ReturnStatement at 0", "INS SimpleName: getPage_type to MethodInvocation at 1", "INS BreakStatement to SwitchStatement at 8", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: DATA_PAGE to SwitchCase at 0", "INS ExpressionStatement to SwitchStatement at 4", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: builder to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: addDictEncoding to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS Block to MethodDeclaration at 4", "INS NullLiteral to InfixExpression: == at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: stat to MethodInvocation at 0", "INS SimpleName: withV2Pages to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 1", "INS Block to IfStatement at 1", "INS SimpleName: stat to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: PageEncodingStats to ParameterizedType: List<PageEncodingStats> at 1", "INS SimpleName: stat to MethodInvocation at 0", "INS SimpleName: stat to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS ExpressionStatement to SwitchStatement at 2", "INS EnhancedForStatement to Block at 2", "INS ReturnStatement to Block at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: stat to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: EncodingStats to MethodDeclaration at 1", "INS SimpleName: PageEncodingStats to SimpleType: PageEncodingStats at 0", "INS MethodInvocation to SwitchStatement at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: EncodingStats to SimpleType: EncodingStats at 0", "INS SimpleName: List to SimpleType: List at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SwitchStatement to Block at 0", "INS QualifiedName: EncodingStats.Builder to SimpleType: EncodingStats.Builder at 0", "INS SimpleName: DATA_PAGE_V2 to SwitchCase at 0", "INS InfixExpression: == to IfStatement at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SwitchCase to SwitchStatement at 6", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getCount to MethodInvocation at 1", "INS SwitchCase to SwitchStatement at 1", "INS SimpleType: List to ParameterizedType: List<PageEncodingStats> at 0", "INS SimpleName: DICTIONARY_PAGE to SwitchCase at 0", "INS ParameterizedType: List<PageEncodingStats> to SingleVariableDeclaration at 0", "INS SimpleName: getEncoding to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: stats to EnhancedForStatement at 1", "INS MethodInvocation to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: EncodingStats.Builder to SimpleType: EncodingStats.Builder at 0", "INS SimpleName: getCount to MethodInvocation at 1", "INS ExpressionStatement to SwitchStatement at 7", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS SimpleType: EncodingStats.Builder to ClassInstanceCreation at 0", "INS SimpleName: stats to SingleVariableDeclaration at 1", "INS SimpleName: getEncoding to MethodInvocation at 0", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: stats to InfixExpression: == at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: dataPageType to VariableDeclarationFragment at 0", "INS SimpleName: EncodingStats to SimpleType: EncodingStats at 0", "INS ParameterizedType: ArrayList<PageEncodingStats> to ClassInstanceCreation at 0", "INS SimpleName: encoding to MethodInvocation at 1", "INS SimpleName: PageEncodingStats to SimpleType: PageEncodingStats at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: formatStats to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: add to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: stats to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<PageEncodingStats> at 0", "INS SimpleName: stats to MethodInvocation at 0", "INS SimpleName: encoding to SingleVariableDeclaration at 1", "INS SimpleName: getDictionaryEncodings to MethodInvocation at 1", "INS SimpleName: getEncoding to MethodInvocation at 0", "INS SimpleType: EncodingStats to SingleVariableDeclaration at 0", "INS InfixExpression: == to IfStatement at 0", "INS QualifiedName: PageType.DICTIONARY_PAGE to ClassInstanceCreation at 1", "INS SimpleName: encoding to MethodInvocation at 2", "INS SimpleName: formatStats to MethodInvocation at 0", "INS SimpleName: PageType to SimpleType: PageType at 0", "INS SimpleName: stats to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to ClassInstanceCreation at 3", "INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: getEncoding to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS SimpleType: PageEncodingStats to ParameterizedType: List<PageEncodingStats> at 1", "INS QualifiedName: org.apache.parquet.column.Encoding to SimpleType: org.apache.parquet.column.Encoding at 0", "INS SimpleType: PageEncodingStats to ClassInstanceCreation at 0", "INS SimpleName: formatStats to VariableDeclarationFragment at 0", "INS MethodInvocation to ConditionalExpression at 0", "INS SimpleType: List to ParameterizedType: List<PageEncodingStats> at 0", "INS MethodInvocation to ClassInstanceCreation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: stats to InfixExpression: == at 0", "INS ExpressionStatement to Block at 0", "INS ConditionalExpression to ParenthesizedExpression at 0", "INS QualifiedName: PageType.DATA_PAGE to ConditionalExpression at 2", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: List to SimpleType: List at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS EnhancedForStatement to Block at 2", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: dataPageType to ClassInstanceCreation at 1", "INS SimpleName: formatStats to ReturnStatement at 0", "INS SimpleName: stats to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: getDataEncodings to MethodInvocation at 1", "INS SimpleType: PageEncodingStats to ClassInstanceCreation at 0", "INS ParameterizedType: List<PageEncodingStats> to MethodDeclaration at 1", "INS SimpleName: add to MethodInvocation at 1", "INS ParameterizedType: List<PageEncodingStats> to VariableDeclarationStatement at 0", "INS SimpleType: PageEncodingStats to ParameterizedType: ArrayList<PageEncodingStats> at 1", "INS SimpleName: PageEncodingStats to SimpleType: PageEncodingStats at 0", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS NullLiteral to ReturnStatement at 0", "INS SimpleName: PageEncodingStats to SimpleType: PageEncodingStats at 0", "INS SimpleName: stats to MethodInvocation at 0", "INS SimpleName: getNumDataPagesEncodedAs to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: usesV2Pages to MethodInvocation at 1", "INS SimpleType: List to ParameterizedType: List<PageEncodingStats> at 0", "INS SimpleName: stats to SingleVariableDeclaration at 1", "INS SimpleType: PageType to VariableDeclarationStatement at 0", "INS MethodInvocation to ClassInstanceCreation at 3", "INS SimpleType: org.apache.parquet.column.Encoding to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: encoding to MethodInvocation at 1", "INS ParenthesizedExpression to VariableDeclarationFragment at 1", "INS SimpleName: encoding to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS NullLiteral to InfixExpression: == at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: PageEncodingStats to SimpleType: PageEncodingStats at 0", "INS SimpleName: encoding to MethodInvocation at 2", "INS EnhancedForStatement to Block at 4", "INS SimpleName: PageEncodingStats to SimpleType: PageEncodingStats at 0", "INS ReturnStatement to Block at 5", "INS SimpleType: PageEncodingStats to ParameterizedType: List<PageEncodingStats> at 1", "INS SimpleName: convertEncodingStats to MethodDeclaration at 2", "INS SimpleName: getNumDictionaryPagesEncodedAs to MethodInvocation at 1", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleType: org.apache.parquet.column.Encoding to SingleVariableDeclaration at 0", "INS QualifiedName: org.apache.parquet.column.Encoding to SimpleType: org.apache.parquet.column.Encoding at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS QualifiedName: PageType.DATA_PAGE_V2 to ConditionalExpression at 1"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS SimpleName: columnMetaData to MethodInvocation at 0", "INS QualifiedName: columnChunk.meta_data to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: setEncoding_stats to MethodInvocation at 1", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: columnMetaData to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getEncodingStats to MethodInvocation at 1", "INS SimpleName: getEncodingStats to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS IfStatement to Block at 5", "INS SimpleName: convertEncodingStats to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 5", "operations": ["INS SimpleName: convertEncodingStats to MethodInvocation at 0", "INS SimpleName: metaData to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 5", "INS SimpleName: getEncoding_stats to MethodInvocation at 1"]}]}}, {"ParquetMetadataConverter_diff": {"operations": ["Insert ImportDeclaration(39) into CompilationUnit(3261) at 19", "Insert ImportDeclaration(81) into CompilationUnit(3261) at 40", "Insert QualifiedName: org.apache.parquet.format.PageEncodingStats(38) into ImportDeclaration(39) at 0", "Insert QualifiedName: org.apache.parquet.column.EncodingStats(80) into ImportDeclaration(81) at 0", "Insert MethodDeclaration(1003) into TypeDeclaration: class(3260) at 14", "Insert MethodDeclaration(1099) into TypeDeclaration: class(3260) at 15", "Insert Modifier: public(925) into MethodDeclaration(1003) at 0", "Insert SimpleType: EncodingStats(927) into MethodDeclaration(1003) at 1", "Insert SimpleName: convertEncodingStats(928) into MethodDeclaration(1003) at 2", "Insert SingleVariableDeclaration(935) into MethodDeclaration(1003) at 3", "Insert Block(1002) into MethodDeclaration(1003) at 4", "Insert Modifier: public(1004) into MethodDeclaration(1099) at 0", "Insert ParameterizedType: List<PageEncodingStats>(1009) into MethodDeclaration(1099) at 1", "Insert SimpleName: convertEncodingStats(1010) into MethodDeclaration(1099) at 2", "Insert SingleVariableDeclaration(1014) into MethodDeclaration(1099) at 3", "Insert Block(1098) into MethodDeclaration(1099) at 4", "Insert SimpleName: EncodingStats(926) into SimpleType: EncodingStats(927) at 0", "Insert ParameterizedType: List<PageEncodingStats>(933) into SingleVariableDeclaration(935) at 0", "Insert SimpleName: stats(934) into SingleVariableDeclaration(935) at 1", "Insert IfStatement(942) into Block(1002) at 0", "Insert VariableDeclarationStatement(950) into Block(1002) at 1", "Insert EnhancedForStatement(997) into Block(1002) at 2", "Insert ReturnStatement(1001) into Block(1002) at 3", "Insert SimpleType: List(1006) into ParameterizedType: List<PageEncodingStats>(1009) at 0", "Insert SimpleType: PageEncodingStats(1008) into ParameterizedType: List<PageEncodingStats>(1009) at 1", "Insert SimpleType: EncodingStats(1012) into SingleVariableDeclaration(1014) at 0", "Insert SimpleName: stats(1013) into SingleVariableDeclaration(1014) at 1", "Insert IfStatement(1021) into Block(1098) at 0", "Insert VariableDeclarationStatement(1035) into Block(1098) at 1", "Insert EnhancedForStatement(1059) into Block(1098) at 2", "Insert VariableDeclarationStatement(1071) into Block(1098) at 3", "Insert EnhancedForStatement(1095) into Block(1098) at 4", "Insert ReturnStatement(1097) into Block(1098) at 5", "Insert SimpleType: List(930) into ParameterizedType: List<PageEncodingStats>(933) at 0", "Insert SimpleType: PageEncodingStats(932) into ParameterizedType: List<PageEncodingStats>(933) at 1", "Insert InfixExpression: ==(938) into IfStatement(942) at 0", "Insert Block(941) into IfStatement(942) at 1", "Insert SimpleType: EncodingStats.Builder(944) into VariableDeclarationStatement(950) at 0", "Insert VariableDeclarationFragment(949) into VariableDeclarationStatement(950) at 1", "Insert SingleVariableDeclaration(954) into EnhancedForStatement(997) at 0", "Insert SimpleName: stats(955) into EnhancedForStatement(997) at 1", "Insert Block(996) into EnhancedForStatement(997) at 2", "Insert MethodInvocation(1000) into ReturnStatement(1001) at 0", "Insert SimpleName: List(1005) into SimpleType: List(1006) at 0", "Insert SimpleName: PageEncodingStats(1007) into SimpleType: PageEncodingStats(1008) at 0", "Insert SimpleName: EncodingStats(1011) into SimpleType: EncodingStats(1012) at 0", "Insert InfixExpression: ==(1017) into IfStatement(1021) at 0", "Insert Block(1020) into IfStatement(1021) at 1", "Insert ParameterizedType: List<PageEncodingStats>(1026) into VariableDeclarationStatement(1035) at 0", "Insert VariableDeclarationFragment(1034) into VariableDeclarationStatement(1035) at 1", "Insert SingleVariableDeclaration(1039) into EnhancedForStatement(1059) at 0", "Insert MethodInvocation(1042) into EnhancedForStatement(1059) at 1", "Insert Block(1058) into EnhancedForStatement(1059) at 2", "Insert SimpleType: PageType(1061) into VariableDeclarationStatement(1071) at 0", "Insert VariableDeclarationFragment(1070) into VariableDeclarationStatement(1071) at 1", "Insert SingleVariableDeclaration(1075) into EnhancedForStatement(1095) at 0", "Insert MethodInvocation(1078) into EnhancedForStatement(1095) at 1", "Insert Block(1094) into EnhancedForStatement(1095) at 2", "Insert SimpleName: formatStats(1096) into ReturnStatement(1097) at 0", "Insert IfStatement(738) into Block(744) at 5", "Insert SimpleName: List(929) into SimpleType: List(930) at 0", "Insert SimpleName: PageEncodingStats(931) into SimpleType: PageEncodingStats(932) at 0", "Insert SimpleName: stats(936) into InfixExpression: ==(938) at 0", "Insert NullLiteral(937) into InfixExpression: ==(938) at 1", "Insert ReturnStatement(940) into Block(941) at 0", "Insert QualifiedName: EncodingStats.Builder(943) into SimpleType: EncodingStats.Builder(944) at 0", "Insert SimpleName: builder(945) into VariableDeclarationFragment(949) at 0", "Insert ClassInstanceCreation(948) into VariableDeclarationFragment(949) at 1", "Insert SimpleType: PageEncodingStats(952) into SingleVariableDeclaration(954) at 0", "Insert SimpleName: stat(953) into SingleVariableDeclaration(954) at 1", "Insert SwitchStatement(995) into Block(996) at 0", "Insert SimpleName: builder(998) into MethodInvocation(1000) at 0", "Insert SimpleName: build(999) into MethodInvocation(1000) at 1", "Insert SimpleName: stats(1015) into InfixExpression: ==(1017) at 0", "Insert NullLiteral(1016) into InfixExpression: ==(1017) at 1", "Insert ReturnStatement(1019) into Block(1020) at 0", "Insert SimpleType: List(1023) into ParameterizedType: List<PageEncodingStats>(1026) at 0", "Insert SimpleType: PageEncodingStats(1025) into ParameterizedType: List<PageEncodingStats>(1026) at 1", "Insert SimpleName: formatStats(1027) into VariableDeclarationFragment(1034) at 0", "Insert ClassInstanceCreation(1033) into VariableDeclarationFragment(1034) at 1", "Insert SimpleType: org.apache.parquet.column.Encoding(1037) into SingleVariableDeclaration(1039) at 0", "Insert SimpleName: encoding(1038) into SingleVariableDeclaration(1039) at 1", "Insert SimpleName: stats(1040) into MethodInvocation(1042) at 0", "Insert SimpleName: getDictionaryEncodings(1041) into MethodInvocation(1042) at 1", "Insert ExpressionStatement(1057) into Block(1058) at 0", "Insert SimpleName: PageType(1060) into SimpleType: PageType(1061) at 0", "Insert SimpleName: dataPageType(1062) into VariableDeclarationFragment(1070) at 0", "Insert ParenthesizedExpression(1069) into VariableDeclarationFragment(1070) at 1", "Insert SimpleType: org.apache.parquet.column.Encoding(1073) into SingleVariableDeclaration(1075) at 0", "Insert SimpleName: encoding(1074) into SingleVariableDeclaration(1075) at 1", "Insert SimpleName: stats(1076) into MethodInvocation(1078) at 0", "Insert SimpleName: getDataEncodings(1077) into MethodInvocation(1078) at 1", "Insert ExpressionStatement(1093) into Block(1094) at 0", "Insert InfixExpression: !=(727) into IfStatement(738) at 0", "Insert Block(737) into IfStatement(738) at 1", "Insert NullLiteral(939) into ReturnStatement(940) at 0", "Insert SimpleType: EncodingStats.Builder(947) into ClassInstanceCreation(948) at 0", "Insert SimpleName: PageEncodingStats(951) into SimpleType: PageEncodingStats(952) at 0", "Insert MethodInvocation(958) into SwitchStatement(995) at 0", "Insert SwitchCase(960) into SwitchStatement(995) at 1", "Insert ExpressionStatement(964) into SwitchStatement(995) at 2", "Insert SwitchCase(966) into SwitchStatement(995) at 3", "Insert ExpressionStatement(978) into SwitchStatement(995) at 4", "Insert BreakStatement(979) into SwitchStatement(995) at 5", "Insert SwitchCase(981) into SwitchStatement(995) at 6", "Insert ExpressionStatement(993) into SwitchStatement(995) at 7", "Insert BreakStatement(994) into SwitchStatement(995) at 8", "Insert NullLiteral(1018) into ReturnStatement(1019) at 0", "Insert SimpleName: List(1022) into SimpleType: List(1023) at 0", "Insert SimpleName: PageEncodingStats(1024) into SimpleType: PageEncodingStats(1025) at 0", "Insert ParameterizedType: ArrayList<PageEncodingStats>(1032) into ClassInstanceCreation(1033) at 0", "Insert QualifiedName: org.apache.parquet.column.Encoding(1036) into SimpleType: org.apache.parquet.column.Encoding(1037) at 0", "Insert MethodInvocation(1056) into ExpressionStatement(1057) at 0", "Insert ConditionalExpression(1068) into ParenthesizedExpression(1069) at 0", "Insert QualifiedName: org.apache.parquet.column.Encoding(1072) into SimpleType: org.apache.parquet.column.Encoding(1073) at 0", "Insert MethodInvocation(1092) into ExpressionStatement(1093) at 0", "Insert MethodInvocation(725) into InfixExpression: !=(727) at 0", "Insert NullLiteral(726) into InfixExpression: !=(727) at 1", "Insert ExpressionStatement(736) into Block(737) at 0", "Insert QualifiedName: EncodingStats.Builder(946) into SimpleType: EncodingStats.Builder(947) at 0", "Insert SimpleName: stat(956) into MethodInvocation(958) at 0", "Insert SimpleName: getPage_type(957) into MethodInvocation(958) at 1", "Insert SimpleName: DATA_PAGE_V2(959) into SwitchCase(960) at 0", "Insert MethodInvocation(963) into ExpressionStatement(964) at 0", "Insert SimpleName: DATA_PAGE(965) into SwitchCase(966) at 0", "Insert MethodInvocation(977) into ExpressionStatement(978) at 0", "Insert SimpleName: DICTIONARY_PAGE(980) into SwitchCase(981) at 0", "Insert MethodInvocation(992) into ExpressionStatement(993) at 0", "Insert SimpleType: ArrayList(1029) into ParameterizedType: ArrayList<PageEncodingStats>(1032) at 0", "Insert SimpleType: PageEncodingStats(1031) into ParameterizedType: ArrayList<PageEncodingStats>(1032) at 1", "Insert SimpleName: formatStats(1043) into MethodInvocation(1056) at 0", "Insert SimpleName: add(1044) into MethodInvocation(1056) at 1", "Insert ClassInstanceCreation(1055) into MethodInvocation(1056) at 2", "Insert MethodInvocation(1065) into ConditionalExpression(1068) at 0", "Insert QualifiedName: PageType.DATA_PAGE_V2(1066) into ConditionalExpression(1068) at 1", "Insert QualifiedName: PageType.DATA_PAGE(1067) into ConditionalExpression(1068) at 2", "Insert SimpleName: formatStats(1079) into MethodInvocation(1092) at 0", "Insert SimpleName: add(1080) into MethodInvocation(1092) at 1", "Insert ClassInstanceCreation(1091) into MethodInvocation(1092) at 2", "Insert SimpleName: columnMetaData(723) into MethodInvocation(725) at 0", "Insert SimpleName: getEncodingStats(724) into MethodInvocation(725) at 1", "Insert MethodInvocation(735) into ExpressionStatement(736) at 0", "Insert SimpleName: builder(961) into MethodInvocation(963) at 0", "Insert SimpleName: withV2Pages(962) into MethodInvocation(963) at 1", "Insert SimpleName: builder(967) into MethodInvocation(977) at 0", "Insert SimpleName: addDataEncoding(968) into MethodInvocation(977) at 1", "Insert MethodInvocation(973) into MethodInvocation(977) at 2", "Insert MethodInvocation(976) into MethodInvocation(977) at 3", "Insert SimpleName: builder(982) into MethodInvocation(992) at 0", "Insert SimpleName: addDictEncoding(983) into MethodInvocation(992) at 1", "Insert MethodInvocation(988) into MethodInvocation(992) at 2", "Insert MethodInvocation(991) into MethodInvocation(992) at 3", "Insert SimpleName: ArrayList(1028) into SimpleType: ArrayList(1029) at 0", "Insert SimpleName: PageEncodingStats(1030) into SimpleType: PageEncodingStats(1031) at 0", "Insert SimpleType: PageEncodingStats(1046) into ClassInstanceCreation(1055) at 0", "Insert QualifiedName: PageType.DICTIONARY_PAGE(1047) into ClassInstanceCreation(1055) at 1", "Insert MethodInvocation(1050) into ClassInstanceCreation(1055) at 2", "Insert MethodInvocation(1054) into ClassInstanceCreation(1055) at 3", "Insert SimpleName: stats(1063) into MethodInvocation(1065) at 0", "Insert SimpleName: usesV2Pages(1064) into MethodInvocation(1065) at 1", "Insert SimpleType: PageEncodingStats(1082) into ClassInstanceCreation(1091) at 0", "Insert SimpleName: dataPageType(1083) into ClassInstanceCreation(1091) at 1", "Insert MethodInvocation(1086) into ClassInstanceCreation(1091) at 2", "Insert MethodInvocation(1090) into ClassInstanceCreation(1091) at 3", "Insert QualifiedName: columnChunk.meta_data(728) into MethodInvocation(735) at 0", "Insert SimpleName: setEncoding_stats(729) into MethodInvocation(735) at 1", "Insert MethodInvocation(734) into MethodInvocation(735) at 2", "Insert SimpleName: getEncoding(969) into MethodInvocation(973) at 0", "Insert MethodInvocation(972) into MethodInvocation(973) at 1", "Insert SimpleName: stat(974) into MethodInvocation(976) at 0", "Insert SimpleName: getCount(975) into MethodInvocation(976) at 1", "Insert SimpleName: getEncoding(984) into MethodInvocation(988) at 0", "Insert MethodInvocation(987) into MethodInvocation(988) at 1", "Insert SimpleName: stat(989) into MethodInvocation(991) at 0", "Insert SimpleName: getCount(990) into MethodInvocation(991) at 1", "Insert SimpleName: PageEncodingStats(1045) into SimpleType: PageEncodingStats(1046) at 0", "Insert SimpleName: getEncoding(1048) into MethodInvocation(1050) at 0", "Insert SimpleName: encoding(1049) into MethodInvocation(1050) at 1", "Insert SimpleName: stats(1051) into MethodInvocation(1054) at 0", "Insert SimpleName: getNumDictionaryPagesEncodedAs(1052) into MethodInvocation(1054) at 1", "Insert SimpleName: encoding(1053) into MethodInvocation(1054) at 2", "Insert SimpleName: PageEncodingStats(1081) into SimpleType: PageEncodingStats(1082) at 0", "Insert SimpleName: getEncoding(1084) into MethodInvocation(1086) at 0", "Insert SimpleName: encoding(1085) into MethodInvocation(1086) at 1", "Insert SimpleName: stats(1087) into MethodInvocation(1090) at 0", "Insert SimpleName: getNumDataPagesEncodedAs(1088) into MethodInvocation(1090) at 1", "Insert SimpleName: encoding(1089) into MethodInvocation(1090) at 2", "Insert SimpleName: convertEncodingStats(730) into MethodInvocation(734) at 0", "Insert MethodInvocation(733) into MethodInvocation(734) at 1", "Insert SimpleName: stat(970) into MethodInvocation(972) at 0", "Insert SimpleName: getEncoding(971) into MethodInvocation(972) at 1", "Insert SimpleName: stat(985) into MethodInvocation(987) at 0", "Insert SimpleName: getEncoding(986) into MethodInvocation(987) at 1", "Insert SimpleName: columnMetaData(731) into MethodInvocation(733) at 0", "Insert SimpleName: getEncodingStats(732) into MethodInvocation(733) at 1", "Insert MethodInvocation(2524) into MethodInvocation(2549) at 5", "Insert SimpleName: convertEncodingStats(2520) into MethodInvocation(2524) at 0", "Insert MethodInvocation(2523) into MethodInvocation(2524) at 1", "Insert SimpleName: metaData(2521) into MethodInvocation(2523) at 0", "Insert SimpleName: getEncoding_stats(2522) into MethodInvocation(2523) at 1"]}}, {"ColumnChunkMetaData_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.apache.parquet.column.EncodingStats to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 4", "operations": ["INS NullLiteral to MethodInvocation at 4", "INS MethodInvocation to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 4", "INS SimpleName: valueCount to MethodInvocation at 9", "INS SimpleName: codec to MethodInvocation at 3", "INS SimpleName: totalUncompressedSize to MethodInvocation at 11", "INS SimpleName: dictionaryPageOffset to MethodInvocation at 8", "INS SimpleName: path to MethodInvocation at 1", "INS SimpleName: type to MethodInvocation at 2", "INS Block to MethodDeclaration at 14", "INS SimpleName: totalSize to MethodInvocation at 10", "INS SimpleName: encodings to MethodInvocation at 5", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 5", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 15", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: type to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: Deprecated to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: ColumnPath to SingleVariableDeclaration at 0", "INS SimpleName: ColumnChunkMetaData to SimpleType: ColumnChunkMetaData at 0", "INS SimpleType: ColumnChunkMetaData to MethodDeclaration at 3", "INS Modifier: static to MethodDeclaration at 2", "INS SimpleType: CompressionCodecName to SingleVariableDeclaration at 0", "INS SimpleName: get to MethodDeclaration at 4", "INS SimpleName: path to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: CompressionCodecName to SimpleType: CompressionCodecName at 0", "INS SimpleName: ColumnPath to SimpleType: ColumnPath at 0", "INS SimpleName: PrimitiveTypeName to SimpleType: PrimitiveTypeName at 0", "INS SimpleType: PrimitiveTypeName to SingleVariableDeclaration at 0", "INS SimpleName: codec to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 6", "operations": ["INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SimpleName: encodings to SingleVariableDeclaration at 1", "INS SimpleName: totalSize to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 12", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SingleVariableDeclaration to MethodDeclaration at 13", "INS SimpleName: firstDataPage to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 11", "INS SimpleName: totalUncompressedSize to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SimpleType: Statistics to SingleVariableDeclaration at 0", "INS SimpleType: Encoding to ParameterizedType: Set<Encoding> at 1", "INS SimpleName: get to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: Set to ParameterizedType: Set<Encoding> at 0", "INS ParameterizedType: Set<Encoding> to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 14", "INS SimpleName: dictionaryPageOffset to SingleVariableDeclaration at 1", "INS SimpleName: valueCount to SingleVariableDeclaration at 1", "INS SimpleName: encodingStats to SingleVariableDeclaration at 1", "INS SimpleName: Encoding to SimpleType: Encoding at 0", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 10", "INS SimpleName: statistics to SingleVariableDeclaration at 1", "INS SimpleType: EncodingStats to SingleVariableDeclaration at 0", "INS SimpleName: Set to SimpleType: Set at 0", "INS SingleVariableDeclaration to MethodDeclaration at 9", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS Modifier: static to MethodDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS SimpleName: encodingStats to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: EncodingStats to FieldDeclaration at 2", "INS SimpleName: EncodingStats to SimpleType: EncodingStats at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS SimpleName: EncodingStats to SimpleType: EncodingStats at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS SimpleType: EncodingStats to SingleVariableDeclaration at 0", "INS SimpleName: encodingStats to SingleVariableDeclaration at 1", "INS SimpleName: ColumnChunkMetaData to MethodDeclaration at 1", "INS Modifier: protected to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS SimpleType: EncodingStats to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 25", "INS SimpleName: EncodingStats to SimpleType: EncodingStats at 0", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: getEncodingStats to MethodDeclaration at 2", "INS SimpleName: encodingStats to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 7", "MOV SimpleType: ColumnChunkMetaData to MethodDeclaration at 3", "MOV Modifier: public to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 10", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 8", "MOV SingleVariableDeclaration to MethodDeclaration at 9", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 11", "MOV Modifier: static to MethodDeclaration at 2", "MOV SimpleName: get to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 12", "MOV SingleVariableDeclaration to MethodDeclaration at 13"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 13", "MOV Block to MethodDeclaration at 15", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleType: ColumnChunkMetaData to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 10", "MOV SingleVariableDeclaration to MethodDeclaration at 14", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 9", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 8", "MOV SingleVariableDeclaration to MethodDeclaration at 11", "MOV SingleVariableDeclaration to MethodDeclaration at 12"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 2", "operations": ["INS SimpleName: ColumnChunkProperties to SimpleType: ColumnChunkProperties at 0", "INS SimpleName: columnChunkProperties to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleType: ColumnChunkProperties to SingleVariableDeclaration at 0"]}, {"root": "INS Block to MethodDeclaration at 3", "operations": ["INS ConstructorInvocation to Block at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: columnChunkProperties to ConstructorInvocation at 1", "INS NullLiteral to ConstructorInvocation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: encodingStats to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: EncodingStats to SimpleType: EncodingStats at 0", "INS SimpleType: EncodingStats to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: encodingStats to SingleVariableDeclaration at 1", "INS SimpleType: EncodingStats to SingleVariableDeclaration at 0", "INS SimpleName: EncodingStats to SimpleType: EncodingStats at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: encodingStats to Assignment: = at 1", "INS SimpleName: encodingStats to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: statistics to MethodInvocation at 6", "INS NullLiteral to MethodInvocation at 4", "INS SimpleName: type to MethodInvocation at 2", "INS SimpleName: totalUncompressedSize to MethodInvocation at 11", "INS SimpleName: totalSize to MethodInvocation at 10", "INS SimpleName: valueCount to MethodInvocation at 9", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: codec to MethodInvocation at 3", "INS SimpleName: encodings to MethodInvocation at 5", "INS SimpleName: firstDataPage to MethodInvocation at 7", "INS SimpleName: dictionaryPageOffset to MethodInvocation at 8", "INS SimpleName: path to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 0"]}, {"root": "UPDATE from LongColumnChunkMetaData to EncodingStats", "operations": ["UPD SimpleName: LongColumnChunkMetaData from LongColumnChunkMetaData to EncodingStats"]}, {"root": "MOVE from SimpleType: EncodingStats", "operations": ["MOV SimpleName: LongColumnChunkMetaData to SimpleType: EncodingStats at 0"]}, {"root": "UPDATE from BooleanStatistics to Statistics", "operations": ["UPD SimpleName: BooleanStatistics from BooleanStatistics to Statistics"]}, {"root": "MOVE from SimpleType: Statistics", "operations": ["MOV SimpleName: BooleanStatistics to SimpleType: Statistics at 0"]}, {"root": "INS SimpleName: encodingStats to SuperConstructorInvocation at 0", "operations": ["INS SimpleName: encodingStats to SuperConstructorInvocation at 0"]}, {"root": "INS SimpleName: encodingStats to SuperConstructorInvocation at 0", "operations": ["INS SimpleName: encodingStats to SuperConstructorInvocation at 0"]}, {"root": "UPDATE from positiveLongFitsInAnInt to get", "operations": ["UPD SimpleName: positiveLongFitsInAnInt from positiveLongFitsInAnInt to get"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: positiveLongFitsInAnInt to MethodInvocation at 0", "MOV SimpleName: firstDataPage to MethodInvocation at 7"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 6"]}, {"root": "INS SimpleName: encodingStats to ClassInstanceCreation at 4", "operations": ["INS SimpleName: encodingStats to ClassInstanceCreation at 4"]}, {"root": "INS SimpleName: encodingStats to ClassInstanceCreation at 4", "operations": ["INS SimpleName: encodingStats to ClassInstanceCreation at 4"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: IntColumnChunkMetaData", "DEL SimpleName: dictionaryPageOffset", "DEL ClassInstanceCreation", "DEL SimpleName: type", "DEL SimpleName: firstDataPage", "DEL SimpleName: IntColumnChunkMetaData", "DEL SimpleName: path", "DEL SimpleName: valueCount", "DEL SimpleName: codec", "DEL SimpleName: encodings", "DEL SimpleName: totalSize", "DEL SimpleName: totalUncompressedSize"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: firstDataPage", "DEL InfixExpression: &&", "DEL SimpleName: totalSize", "DEL SimpleType: BooleanStatistics", "DEL ClassInstanceCreation", "DEL SimpleName: positiveLongFitsInAnInt", "DEL SimpleName: encodings", "DEL SimpleType: LongColumnChunkMetaData", "DEL ClassInstanceCreation", "DEL SimpleName: dictionaryPageOffset", "DEL SimpleName: positiveLongFitsInAnInt", "DEL SimpleName: path", "DEL SimpleName: totalUncompressedSize", "DEL SimpleName: positiveLongFitsInAnInt", "DEL MethodInvocation", "DEL SimpleName: totalSize", "DEL ReturnStatement", "DEL Block", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: valueCount", "DEL Block", "DEL Block", "DEL SimpleName: type", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: dictionaryPageOffset", "DEL SimpleName: positiveLongFitsInAnInt", "DEL SimpleName: codec", "DEL SimpleName: valueCount", "DEL MethodInvocation", "DEL SimpleName: totalUncompressedSize"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: get", "DEL Modifier: public", "DEL Modifier: static", "DEL MethodDeclaration"]}]}}, {"ColumnChunkMetaData_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(984) at 3", "Insert QualifiedName: org.apache.parquet.column.EncodingStats(6) into ImportDeclaration(7) at 0", "Insert MethodDeclaration(80) into TypeDeclaration: class(478) at 4", "Insert MethodDeclaration(141) into TypeDeclaration: class(478) at 5", "Insert MethodDeclaration(239) into TypeDeclaration: class(478) at 6", "Insert FieldDeclaration(308) into TypeDeclaration: class(478) at 9", "Insert MethodDeclaration(350) into TypeDeclaration: class(478) at 12", "Insert MethodDeclaration(459) into TypeDeclaration: class(478) at 23", "Move MarkerAnnotation(21) into MethodDeclaration(80) at 0", "Move Modifier: public(22) into MethodDeclaration(80) at 1", "Move Modifier: static(23) into MethodDeclaration(80) at 2", "Move SimpleType: ColumnChunkMetaData(25) into MethodDeclaration(80) at 3", "Move SimpleName: get(26) into MethodDeclaration(80) at 4", "Move SingleVariableDeclaration(30) into MethodDeclaration(80) at 5", "Move SingleVariableDeclaration(34) into MethodDeclaration(80) at 6", "Move SingleVariableDeclaration(38) into MethodDeclaration(80) at 7", "Move SingleVariableDeclaration(45) into MethodDeclaration(80) at 8", "Move SingleVariableDeclaration(48) into MethodDeclaration(80) at 9", "Move SingleVariableDeclaration(51) into MethodDeclaration(80) at 10", "Move SingleVariableDeclaration(54) into MethodDeclaration(80) at 11", "Move SingleVariableDeclaration(57) into MethodDeclaration(80) at 12", "Move SingleVariableDeclaration(60) into MethodDeclaration(80) at 13", "Insert Block(79) into MethodDeclaration(80) at 14", "Insert MarkerAnnotation(82) into MethodDeclaration(141) at 0", "Insert Modifier: public(83) into MethodDeclaration(141) at 1", "Insert Modifier: static(84) into MethodDeclaration(141) at 2", "Insert SimpleType: ColumnChunkMetaData(86) into MethodDeclaration(141) at 3", "Insert SimpleName: get(87) into MethodDeclaration(141) at 4", "Insert SingleVariableDeclaration(91) into MethodDeclaration(141) at 5", "Insert SingleVariableDeclaration(95) into MethodDeclaration(141) at 6", "Insert SingleVariableDeclaration(99) into MethodDeclaration(141) at 7", "Move SingleVariableDeclaration(137) into MethodDeclaration(141) at 8", "Move SingleVariableDeclaration(141) into MethodDeclaration(141) at 9", "Move SingleVariableDeclaration(144) into MethodDeclaration(141) at 10", "Move SingleVariableDeclaration(147) into MethodDeclaration(141) at 11", "Move SingleVariableDeclaration(150) into MethodDeclaration(141) at 12", "Move SingleVariableDeclaration(153) into MethodDeclaration(141) at 13", "Move SingleVariableDeclaration(156) into MethodDeclaration(141) at 14", "Insert Block(140) into MethodDeclaration(141) at 15", "Insert Modifier: public(142) into MethodDeclaration(239) at 0", "Insert Modifier: static(143) into MethodDeclaration(239) at 1", "Move SimpleType: ColumnChunkMetaData(117) into MethodDeclaration(239) at 2", "Insert SimpleName: get(146) into MethodDeclaration(239) at 3", "Move SingleVariableDeclaration(122) into MethodDeclaration(239) at 4", "Move SingleVariableDeclaration(126) into MethodDeclaration(239) at 5", "Move SingleVariableDeclaration(130) into MethodDeclaration(239) at 6", "Insert SingleVariableDeclaration(162) into MethodDeclaration(239) at 7", "Insert SingleVariableDeclaration(169) into MethodDeclaration(239) at 8", "Insert SingleVariableDeclaration(173) into MethodDeclaration(239) at 9", "Insert SingleVariableDeclaration(176) into MethodDeclaration(239) at 10", "Insert SingleVariableDeclaration(179) into MethodDeclaration(239) at 11", "Insert SingleVariableDeclaration(182) into MethodDeclaration(239) at 12", "Insert SingleVariableDeclaration(185) into MethodDeclaration(239) at 13", "Insert SingleVariableDeclaration(188) into MethodDeclaration(239) at 14", "Move Block(204) into MethodDeclaration(239) at 15", "Insert Modifier: private(302) into FieldDeclaration(308) at 0", "Insert Modifier: final(303) into FieldDeclaration(308) at 1", "Insert SimpleType: EncodingStats(305) into FieldDeclaration(308) at 2", "Insert VariableDeclarationFragment(307) into FieldDeclaration(308) at 3", "Insert SingleVariableDeclaration(321) into MethodDeclaration(326) at 2", "Insert Block(325) into MethodDeclaration(326) at 3", "Insert Modifier: protected(327) into MethodDeclaration(350) at 0", "Insert SimpleName: ColumnChunkMetaData(328) into MethodDeclaration(350) at 1", "Insert SingleVariableDeclaration(332) into MethodDeclaration(350) at 2", "Move SingleVariableDeclaration(280) into MethodDeclaration(350) at 3", "Move Block(287) into MethodDeclaration(350) at 4", "Insert Modifier: public(452) into MethodDeclaration(459) at 0", "Insert SimpleType: EncodingStats(454) into MethodDeclaration(459) at 1", "Insert SimpleName: getEncodingStats(455) into MethodDeclaration(459) at 2", "Insert Block(458) into MethodDeclaration(459) at 3", "Insert SingleVariableDeclaration(558) into MethodDeclaration(641) at 5", "Insert SingleVariableDeclaration(848) into MethodDeclaration(921) at 5", "Insert ReturnStatement(78) into Block(79) at 0", "Insert SimpleName: Deprecated(81) into MarkerAnnotation(82) at 0", "Insert SimpleName: ColumnChunkMetaData(85) into SimpleType: ColumnChunkMetaData(86) at 0", "Insert SimpleType: ColumnPath(89) into SingleVariableDeclaration(91) at 0", "Insert SimpleName: path(90) into SingleVariableDeclaration(91) at 1", "Insert SimpleType: PrimitiveTypeName(93) into SingleVariableDeclaration(95) at 0", "Insert SimpleName: type(94) into SingleVariableDeclaration(95) at 1", "Insert SimpleType: CompressionCodecName(97) into SingleVariableDeclaration(99) at 0", "Insert SimpleName: codec(98) into SingleVariableDeclaration(99) at 1", "Move ReturnStatement(92) into Block(140) at 0", "Insert SimpleType: EncodingStats(160) into SingleVariableDeclaration(162) at 0", "Insert SimpleName: encodingStats(161) into SingleVariableDeclaration(162) at 1", "Insert ParameterizedType: Set<Encoding>(167) into SingleVariableDeclaration(169) at 0", "Insert SimpleName: encodings(168) into SingleVariableDeclaration(169) at 1", "Insert SimpleType: Statistics(171) into SingleVariableDeclaration(173) at 0", "Insert SimpleName: statistics(172) into SingleVariableDeclaration(173) at 1", "Insert PrimitiveType: long(174) into SingleVariableDeclaration(176) at 0", "Insert SimpleName: firstDataPage(175) into SingleVariableDeclaration(176) at 1", "Insert PrimitiveType: long(177) into SingleVariableDeclaration(179) at 0", "Insert SimpleName: dictionaryPageOffset(178) into SingleVariableDeclaration(179) at 1", "Insert PrimitiveType: long(180) into SingleVariableDeclaration(182) at 0", "Insert SimpleName: valueCount(181) into SingleVariableDeclaration(182) at 1", "Insert PrimitiveType: long(183) into SingleVariableDeclaration(185) at 0", "Insert SimpleName: totalSize(184) into SingleVariableDeclaration(185) at 1", "Insert PrimitiveType: long(186) into SingleVariableDeclaration(188) at 0", "Insert SimpleName: totalUncompressedSize(187) into SingleVariableDeclaration(188) at 1", "Insert SimpleName: EncodingStats(304) into SimpleType: EncodingStats(305) at 0", "Insert SimpleName: encodingStats(306) into VariableDeclarationFragment(307) at 0", "Insert SimpleType: ColumnChunkProperties(319) into SingleVariableDeclaration(321) at 0", "Insert SimpleName: columnChunkProperties(320) into SingleVariableDeclaration(321) at 1", "Insert ConstructorInvocation(324) into Block(325) at 0", "Insert SimpleType: EncodingStats(330) into SingleVariableDeclaration(332) at 0", "Insert SimpleName: encodingStats(331) into SingleVariableDeclaration(332) at 1", "Insert ExpressionStatement(342) into Block(349) at 0", "Insert SimpleName: EncodingStats(453) into SimpleType: EncodingStats(454) at 0", "Insert ReturnStatement(457) into Block(458) at 0", "Insert SimpleType: EncodingStats(556) into SingleVariableDeclaration(558) at 0", "Insert SimpleName: encodingStats(557) into SingleVariableDeclaration(558) at 1", "Insert SimpleType: EncodingStats(846) into SingleVariableDeclaration(848) at 0", "Insert SimpleName: encodingStats(847) into SingleVariableDeclaration(848) at 1", "Insert MethodInvocation(77) into ReturnStatement(78) at 0", "Insert SimpleName: ColumnPath(88) into SimpleType: ColumnPath(89) at 0", "Insert SimpleName: PrimitiveTypeName(92) into SimpleType: PrimitiveTypeName(93) at 0", "Insert SimpleName: CompressionCodecName(96) into SimpleType: CompressionCodecName(97) at 0", "Insert MethodInvocation(138) into ReturnStatement(139) at 0", "Update SimpleName: LongColumnChunkMetaData(94) to EncodingStats", "Move SimpleName: LongColumnChunkMetaData(94) into SimpleType: EncodingStats(160) at 0", "Insert SimpleType: Set(164) into ParameterizedType: Set<Encoding>(167) at 0", "Insert SimpleType: Encoding(166) into ParameterizedType: Set<Encoding>(167) at 1", "Update SimpleName: BooleanStatistics(100) to Statistics", "Move SimpleName: BooleanStatistics(100) into SimpleType: Statistics(171) at 0", "Insert SimpleName: ColumnChunkProperties(318) into SimpleType: ColumnChunkProperties(319) at 0", "Insert NullLiteral(322) into ConstructorInvocation(324) at 0", "Insert SimpleName: columnChunkProperties(323) into ConstructorInvocation(324) at 1", "Insert SimpleName: EncodingStats(329) into SimpleType: EncodingStats(330) at 0", "Insert Assignment: =(341) into ExpressionStatement(342) at 0", "Insert SimpleName: encodingStats(456) into ReturnStatement(457) at 0", "Insert SimpleName: EncodingStats(555) into SimpleType: EncodingStats(556) at 0", "Insert SimpleName: encodingStats(585) into SuperConstructorInvocation(593) at 0", "Insert SimpleName: EncodingStats(845) into SimpleType: EncodingStats(846) at 0", "Insert SimpleName: encodingStats(875) into SuperConstructorInvocation(883) at 0", "Update SimpleName: positiveLongFitsInAnInt(61) to get", "Move SimpleName: positiveLongFitsInAnInt(61) into MethodInvocation(77) at 0", "Insert SimpleName: path(64) into MethodInvocation(77) at 1", "Insert SimpleName: type(65) into MethodInvocation(77) at 2", "Insert SimpleName: codec(66) into MethodInvocation(77) at 3", "Insert NullLiteral(67) into MethodInvocation(77) at 4", "Insert SimpleName: encodings(68) into MethodInvocation(77) at 5", "Move ClassInstanceCreation(85) into MethodInvocation(77) at 6", "Move SimpleName: firstDataPage(62) into MethodInvocation(77) at 7", "Insert SimpleName: dictionaryPageOffset(73) into MethodInvocation(77) at 8", "Insert SimpleName: valueCount(74) into MethodInvocation(77) at 9", "Insert SimpleName: totalSize(75) into MethodInvocation(77) at 10", "Insert SimpleName: totalUncompressedSize(76) into MethodInvocation(77) at 11", "Insert SimpleName: get(126) into MethodInvocation(138) at 0", "Insert SimpleName: path(127) into MethodInvocation(138) at 1", "Insert SimpleName: type(128) into MethodInvocation(138) at 2", "Insert SimpleName: codec(129) into MethodInvocation(138) at 3", "Insert NullLiteral(130) into MethodInvocation(138) at 4", "Insert SimpleName: encodings(131) into MethodInvocation(138) at 5", "Insert SimpleName: statistics(132) into MethodInvocation(138) at 6", "Insert SimpleName: firstDataPage(133) into MethodInvocation(138) at 7", "Insert SimpleName: dictionaryPageOffset(134) into MethodInvocation(138) at 8", "Insert SimpleName: valueCount(135) into MethodInvocation(138) at 9", "Insert SimpleName: totalSize(136) into MethodInvocation(138) at 10", "Insert SimpleName: totalUncompressedSize(137) into MethodInvocation(138) at 11", "Insert SimpleName: Set(163) into SimpleType: Set(164) at 0", "Insert SimpleName: Encoding(165) into SimpleType: Encoding(166) at 0", "Insert FieldAccess(339) into Assignment: =(341) at 0", "Insert SimpleName: encodingStats(340) into Assignment: =(341) at 1", "Insert ThisExpression(337) into FieldAccess(339) at 0", "Insert SimpleName: encodingStats(338) into FieldAccess(339) at 1", "Insert SimpleName: encodingStats(210) into ClassInstanceCreation(218) at 4", "Insert SimpleName: encodingStats(226) into ClassInstanceCreation(234) at 4", "Delete SimpleName: IntColumnChunkMetaData(77)", "Delete SimpleType: IntColumnChunkMetaData(78)", "Delete SimpleName: path(79)", "Delete SimpleName: type(80)", "Delete SimpleName: codec(81)", "Delete SimpleName: encodings(82)", "Delete SimpleName: firstDataPage(86)", "Delete SimpleName: dictionaryPageOffset(87)", "Delete SimpleName: valueCount(88)", "Delete SimpleName: totalSize(89)", "Delete SimpleName: totalUncompressedSize(90)", "Delete ClassInstanceCreation(91)", "Delete MethodInvocation(63)", "Delete SimpleName: positiveLongFitsInAnInt(64)", "Delete SimpleName: dictionaryPageOffset(65)", "Delete MethodInvocation(66)", "Delete SimpleName: positiveLongFitsInAnInt(67)", "Delete SimpleName: valueCount(68)", "Delete MethodInvocation(69)", "Delete SimpleName: positiveLongFitsInAnInt(70)", "Delete SimpleName: totalSize(71)", "Delete MethodInvocation(72)", "Delete SimpleName: positiveLongFitsInAnInt(73)", "Delete SimpleName: totalUncompressedSize(74)", "Delete MethodInvocation(75)", "Delete InfixExpression: &&(76)", "Delete Block(93)", "Delete SimpleType: LongColumnChunkMetaData(95)", "Delete SimpleName: path(96)", "Delete SimpleName: type(97)", "Delete SimpleName: codec(98)", "Delete SimpleName: encodings(99)", "Delete SimpleType: BooleanStatistics(101)", "Delete ClassInstanceCreation(102)", "Delete SimpleName: firstDataPage(103)", "Delete SimpleName: dictionaryPageOffset(104)", "Delete SimpleName: valueCount(105)", "Delete SimpleName: totalSize(106)", "Delete SimpleName: totalUncompressedSize(107)", "Delete ClassInstanceCreation(108)", "Delete ReturnStatement(109)", "Delete Block(110)", "Delete IfStatement(111)", "Delete Block(112)", "Delete MethodDeclaration(113)", "Delete Modifier: public(114)", "Delete Modifier: static(115)", "Delete SimpleName: get(118)", "Delete MethodDeclaration(205)"]}}], "commit_stats": [{"total_files": 9, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}