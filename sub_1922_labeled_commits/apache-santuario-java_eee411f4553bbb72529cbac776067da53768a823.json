{"application": "apache-santuario-java", "csha": "eee411f4553bbb72529cbac776067da53768a823", "files": [{"Init_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS QualifiedName: org.apache.xml.security.transforms.TransformSpi to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 13"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: org.apache.xml.security.transforms.Transforms to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS QualifiedName: org.apache.xml.security.transforms.implementations.TransformBase64Decode to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 15"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS ImportDeclaration to CompilationUnit at 16", "INS QualifiedName: org.apache.xml.security.transforms.implementations.TransformC14N to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 17", "operations": ["INS ImportDeclaration to CompilationUnit at 17", "INS QualifiedName: org.apache.xml.security.transforms.implementations.TransformC14N11 to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS ImportDeclaration to CompilationUnit at 18", "INS QualifiedName: org.apache.xml.security.transforms.implementations.TransformC14N11_WithComments to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 19", "operations": ["INS QualifiedName: org.apache.xml.security.transforms.implementations.TransformC14NExclusive to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 19"]}, {"root": "INS ImportDeclaration to CompilationUnit at 20", "operations": ["INS ImportDeclaration to CompilationUnit at 20", "INS QualifiedName: org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS QualifiedName: org.apache.xml.security.transforms.implementations.TransformC14NWithComments to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 21"]}, {"root": "INS ImportDeclaration to CompilationUnit at 22", "operations": ["INS ImportDeclaration to CompilationUnit at 22", "INS QualifiedName: org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 23", "operations": ["INS ImportDeclaration to CompilationUnit at 23", "INS QualifiedName: org.apache.xml.security.transforms.implementations.TransformXPath to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 24", "operations": ["INS ImportDeclaration to CompilationUnit at 24", "INS QualifiedName: org.apache.xml.security.transforms.implementations.TransformXPath2Filter to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 25", "operations": ["INS QualifiedName: org.apache.xml.security.transforms.implementations.TransformXSLT to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 25"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS SimpleType: Class to ParameterizedType: Class<? extends TransformSpi> at 0", "INS SimpleType: TransformSpi to WildcardType: ? extends TransformSpi at 0", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: String to ParameterizedType: HashMap<String,Class<? extends TransformSpi>> at 1", "INS ParameterizedType: Class<? extends TransformSpi> to ParameterizedType: HashMap<String,Class<? extends TransformSpi>> at 2", "INS SimpleName: Class to SimpleType: Class at 0", "INS SimpleType: Map to ParameterizedType: Map<String,Class<? extends TransformSpi>> at 0", "INS WildcardType: ? extends TransformSpi to ParameterizedType: Class<? extends TransformSpi> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: Class<? extends TransformSpi> to ParameterizedType: Map<String,Class<? extends TransformSpi>> at 2", "INS SimpleName: TransformSpi to SimpleType: TransformSpi at 0", "INS Modifier: static to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,Class<? extends TransformSpi>> at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: defaultTransforms to VariableDeclarationFragment at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: TransformSpi to SimpleType: TransformSpi at 0", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS ParameterizedType: Map<String,Class<? extends TransformSpi>> to FieldDeclaration at 2", "INS SimpleType: TransformSpi to WildcardType: ? extends TransformSpi at 0", "INS ParameterizedType: HashMap<String,Class<? extends TransformSpi>> to ClassInstanceCreation at 0", "INS SimpleName: Class to SimpleType: Class at 0", "INS SimpleType: Class to ParameterizedType: Class<? extends TransformSpi> at 0", "INS WildcardType: ? extends TransformSpi to ParameterizedType: Class<? extends TransformSpi> at 1", "INS SimpleType: String to ParameterizedType: Map<String,Class<? extends TransformSpi>> at 1"]}, {"root": "INS SingleMemberAnnotation to MethodDeclaration at 1", "operations": ["INS StringLiteral: \"unchecked\" to SingleMemberAnnotation at 1", "INS SingleMemberAnnotation to MethodDeclaration at 1", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: TransformBase64Decode to SimpleType: TransformBase64Decode at 0", "INS SimpleName: defaultTransforms to MethodInvocation at 0", "INS TypeLiteral to MethodInvocation at 3", "INS SimpleType: TransformBase64Decode to TypeLiteral at 0", "INS ExpressionStatement to Block at 7", "INS SimpleName: put to MethodInvocation at 1", "INS QualifiedName: Transforms.TRANSFORM_BASE64_DECODE to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 8", "operations": ["INS ExpressionStatement to Block at 8", "INS QualifiedName: Transforms.TRANSFORM_C14N_OMIT_COMMENTS to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS TypeLiteral to MethodInvocation at 3", "INS SimpleName: defaultTransforms to MethodInvocation at 0", "INS SimpleType: TransformC14N to TypeLiteral at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: TransformC14N to SimpleType: TransformC14N at 0"]}, {"root": "INS ExpressionStatement to Block at 9", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: TransformC14NWithComments to TypeLiteral at 0", "INS ExpressionStatement to Block at 9", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: TransformC14NWithComments to SimpleType: TransformC14NWithComments at 0", "INS SimpleName: defaultTransforms to MethodInvocation at 0", "INS TypeLiteral to MethodInvocation at 3", "INS QualifiedName: Transforms.TRANSFORM_C14N_WITH_COMMENTS to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 10", "operations": ["INS SimpleName: defaultTransforms to MethodInvocation at 0", "INS QualifiedName: Transforms.TRANSFORM_C14N11_OMIT_COMMENTS to MethodInvocation at 2", "INS ExpressionStatement to Block at 10", "INS TypeLiteral to MethodInvocation at 3", "INS SimpleType: TransformC14N11 to TypeLiteral at 0", "INS SimpleName: TransformC14N11 to SimpleType: TransformC14N11 at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: put to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 11", "operations": ["INS SimpleType: TransformC14N11_WithComments to TypeLiteral at 0", "INS SimpleName: TransformC14N11_WithComments to SimpleType: TransformC14N11_WithComments at 0", "INS SimpleName: put to MethodInvocation at 1", "INS ExpressionStatement to Block at 11", "INS TypeLiteral to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: defaultTransforms to MethodInvocation at 0", "INS QualifiedName: Transforms.TRANSFORM_C14N11_WITH_COMMENTS to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 12", "operations": ["INS ExpressionStatement to Block at 12", "INS SimpleType: TransformC14NExclusive to TypeLiteral at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: defaultTransforms to MethodInvocation at 0", "INS QualifiedName: Transforms.TRANSFORM_C14N_EXCL_OMIT_COMMENTS to MethodInvocation at 2", "INS TypeLiteral to MethodInvocation at 3", "INS SimpleName: TransformC14NExclusive to SimpleType: TransformC14NExclusive at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 13", "operations": ["INS QualifiedName: Transforms.TRANSFORM_C14N_EXCL_WITH_COMMENTS to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: defaultTransforms to MethodInvocation at 0", "INS TypeLiteral to MethodInvocation at 3", "INS SimpleName: TransformC14NExclusiveWithComments to SimpleType: TransformC14NExclusiveWithComments at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: TransformC14NExclusiveWithComments to TypeLiteral at 0", "INS ExpressionStatement to Block at 13"]}, {"root": "INS ExpressionStatement to Block at 14", "operations": ["INS ExpressionStatement to Block at 14", "INS TypeLiteral to MethodInvocation at 3", "INS SimpleType: TransformXPath to TypeLiteral at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: defaultTransforms to MethodInvocation at 0", "INS QualifiedName: Transforms.TRANSFORM_XPATH to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: TransformXPath to SimpleType: TransformXPath at 0"]}, {"root": "INS ExpressionStatement to Block at 15", "operations": ["INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: TransformEnvelopedSignature to SimpleType: TransformEnvelopedSignature at 0", "INS SimpleName: defaultTransforms to MethodInvocation at 0", "INS ExpressionStatement to Block at 15", "INS SimpleType: TransformEnvelopedSignature to TypeLiteral at 0", "INS QualifiedName: Transforms.TRANSFORM_ENVELOPED_SIGNATURE to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS TypeLiteral to MethodInvocation at 3"]}, {"root": "INS ExpressionStatement to Block at 16", "operations": ["INS TypeLiteral to MethodInvocation at 3", "INS SimpleType: TransformXSLT to TypeLiteral at 0", "INS QualifiedName: Transforms.TRANSFORM_XSLT to MethodInvocation at 2", "INS ExpressionStatement to Block at 16", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: TransformXSLT to SimpleType: TransformXSLT at 0", "INS SimpleName: defaultTransforms to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 17", "operations": ["INS ExpressionStatement to Block at 17", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: TransformXPath2Filter to SimpleType: TransformXPath2Filter at 0", "INS SimpleType: TransformXPath2Filter to TypeLiteral at 0", "INS TypeLiteral to MethodInvocation at 3", "INS SimpleName: defaultTransforms to MethodInvocation at 0", "INS QualifiedName: Transforms.TRANSFORM_XPATH2FILTER to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 18", "operations": ["INS SimpleName: TransformXPath2Filter to SimpleType: TransformXPath2Filter at 0", "INS SimpleName: put to MethodInvocation at 1", "INS ExpressionStatement to Block at 18", "INS SimpleName: defaultTransforms to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: Transforms.TRANSFORM_XPATH2FILTER04 to MethodInvocation at 2", "INS TypeLiteral to MethodInvocation at 3", "INS SimpleType: TransformXPath2Filter to TypeLiteral at 0"]}, {"root": "INS Block to TryStatement at 0", "operations": ["INS SimpleName: key to SingleVariableDeclaration at 1", "INS SimpleName: keySet to MethodInvocation at 1", "INS EnhancedForStatement to Block at 1", "INS Block to TryStatement at 0", "INS SimpleName: key to MethodInvocation at 2", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS CastExpression to MethodInvocation at 3", "INS Block to EnhancedForStatement at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: key to MethodInvocation at 2", "INS SimpleName: defaultTransforms to MethodInvocation at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: Class to SimpleType: Class at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: register to MethodInvocation at 1", "INS SimpleName: defaultTransforms to MethodInvocation at 0", "INS SimpleName: Transform to MethodInvocation at 0", "INS SimpleType: Class to ParameterizedType: Class<TransformSpi> at 0", "INS ParameterizedType: Class<TransformSpi> to CastExpression at 0", "INS SimpleType: TransformSpi to ParameterizedType: Class<TransformSpi> at 1", "INS SimpleName: TransformSpi to SimpleType: TransformSpi at 0"]}, {"root": "MOVE from Block", "operations": ["MOV EnhancedForStatement to Block at 0"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"Init_diff": {"operations": ["Insert ImportDeclaration(27) into CompilationUnit(1299) at 13", "Insert ImportDeclaration(29) into CompilationUnit(1299) at 14", "Insert ImportDeclaration(31) into CompilationUnit(1299) at 15", "Insert ImportDeclaration(33) into CompilationUnit(1299) at 16", "Insert ImportDeclaration(35) into CompilationUnit(1299) at 17", "Insert ImportDeclaration(37) into CompilationUnit(1299) at 18", "Insert ImportDeclaration(39) into CompilationUnit(1299) at 19", "Insert ImportDeclaration(41) into CompilationUnit(1299) at 20", "Insert ImportDeclaration(43) into CompilationUnit(1299) at 21", "Insert ImportDeclaration(45) into CompilationUnit(1299) at 22", "Insert ImportDeclaration(47) into CompilationUnit(1299) at 23", "Insert ImportDeclaration(49) into CompilationUnit(1299) at 24", "Insert ImportDeclaration(51) into CompilationUnit(1299) at 25", "Insert QualifiedName: org.apache.xml.security.transforms.TransformSpi(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: org.apache.xml.security.transforms.Transforms(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: org.apache.xml.security.transforms.implementations.TransformBase64Decode(30) into ImportDeclaration(31) at 0", "Insert QualifiedName: org.apache.xml.security.transforms.implementations.TransformC14N(32) into ImportDeclaration(33) at 0", "Insert QualifiedName: org.apache.xml.security.transforms.implementations.TransformC14N11(34) into ImportDeclaration(35) at 0", "Insert QualifiedName: org.apache.xml.security.transforms.implementations.TransformC14N11_WithComments(36) into ImportDeclaration(37) at 0", "Insert QualifiedName: org.apache.xml.security.transforms.implementations.TransformC14NExclusive(38) into ImportDeclaration(39) at 0", "Insert QualifiedName: org.apache.xml.security.transforms.implementations.TransformC14NExclusiveWithComments(40) into ImportDeclaration(41) at 0", "Insert QualifiedName: org.apache.xml.security.transforms.implementations.TransformC14NWithComments(42) into ImportDeclaration(43) at 0", "Insert QualifiedName: org.apache.xml.security.transforms.implementations.TransformEnvelopedSignature(44) into ImportDeclaration(45) at 0", "Insert QualifiedName: org.apache.xml.security.transforms.implementations.TransformXPath(46) into ImportDeclaration(47) at 0", "Insert QualifiedName: org.apache.xml.security.transforms.implementations.TransformXPath2Filter(48) into ImportDeclaration(49) at 0", "Insert QualifiedName: org.apache.xml.security.transforms.implementations.TransformXSLT(50) into ImportDeclaration(51) at 0", "Insert FieldDeclaration(168) into TypeDeclaration: class(1298) at 7", "Insert Modifier: private(141) into FieldDeclaration(168) at 0", "Insert Modifier: static(142) into FieldDeclaration(168) at 1", "Insert ParameterizedType: Map<String,Class<? extends TransformSpi>>(153) into FieldDeclaration(168) at 2", "Insert VariableDeclarationFragment(167) into FieldDeclaration(168) at 3", "Insert SingleMemberAnnotation(1221) into MethodDeclaration(1297) at 1", "Insert SimpleType: Map(144) into ParameterizedType: Map<String,Class<? extends TransformSpi>>(153) at 0", "Insert SimpleType: String(146) into ParameterizedType: Map<String,Class<? extends TransformSpi>>(153) at 1", "Insert ParameterizedType: Class<? extends TransformSpi>(152) into ParameterizedType: Map<String,Class<? extends TransformSpi>>(153) at 2", "Insert SimpleName: defaultTransforms(154) into VariableDeclarationFragment(167) at 0", "Insert ClassInstanceCreation(166) into VariableDeclarationFragment(167) at 1", "Insert ExpressionStatement(219) into Block(308) at 7", "Insert ExpressionStatement(227) into Block(308) at 8", "Insert ExpressionStatement(235) into Block(308) at 9", "Insert ExpressionStatement(243) into Block(308) at 10", "Insert ExpressionStatement(251) into Block(308) at 11", "Insert ExpressionStatement(259) into Block(308) at 12", "Insert ExpressionStatement(267) into Block(308) at 13", "Insert ExpressionStatement(275) into Block(308) at 14", "Insert ExpressionStatement(283) into Block(308) at 15", "Insert ExpressionStatement(291) into Block(308) at 16", "Insert ExpressionStatement(299) into Block(308) at 17", "Insert ExpressionStatement(307) into Block(308) at 18", "Insert SimpleName: SuppressWarnings(1219) into SingleMemberAnnotation(1221) at 0", "Insert StringLiteral: \"unchecked\"(1220) into SingleMemberAnnotation(1221) at 1", "Insert SimpleName: Map(143) into SimpleType: Map(144) at 0", "Insert SimpleName: String(145) into SimpleType: String(146) at 0", "Insert SimpleType: Class(148) into ParameterizedType: Class<? extends TransformSpi>(152) at 0", "Insert WildcardType: ? extends TransformSpi(151) into ParameterizedType: Class<? extends TransformSpi>(152) at 1", "Insert ParameterizedType: HashMap<String,Class<? extends TransformSpi>>(165) into ClassInstanceCreation(166) at 0", "Insert MethodInvocation(218) into ExpressionStatement(219) at 0", "Insert MethodInvocation(226) into ExpressionStatement(227) at 0", "Insert MethodInvocation(234) into ExpressionStatement(235) at 0", "Insert MethodInvocation(242) into ExpressionStatement(243) at 0", "Insert MethodInvocation(250) into ExpressionStatement(251) at 0", "Insert MethodInvocation(258) into ExpressionStatement(259) at 0", "Insert MethodInvocation(266) into ExpressionStatement(267) at 0", "Insert MethodInvocation(274) into ExpressionStatement(275) at 0", "Insert MethodInvocation(282) into ExpressionStatement(283) at 0", "Insert MethodInvocation(290) into ExpressionStatement(291) at 0", "Insert MethodInvocation(298) into ExpressionStatement(299) at 0", "Insert MethodInvocation(306) into ExpressionStatement(307) at 0", "Insert Block(1279) into TryStatement(1295) at 0", "Insert SimpleName: Class(147) into SimpleType: Class(148) at 0", "Insert SimpleType: TransformSpi(150) into WildcardType: ? extends TransformSpi(151) at 0", "Insert SimpleType: HashMap(156) into ParameterizedType: HashMap<String,Class<? extends TransformSpi>>(165) at 0", "Insert SimpleType: String(158) into ParameterizedType: HashMap<String,Class<? extends TransformSpi>>(165) at 1", "Insert ParameterizedType: Class<? extends TransformSpi>(164) into ParameterizedType: HashMap<String,Class<? extends TransformSpi>>(165) at 2", "Insert SimpleName: defaultTransforms(212) into MethodInvocation(218) at 0", "Insert SimpleName: put(213) into MethodInvocation(218) at 1", "Insert QualifiedName: Transforms.TRANSFORM_BASE64_DECODE(214) into MethodInvocation(218) at 2", "Insert TypeLiteral(217) into MethodInvocation(218) at 3", "Insert SimpleName: defaultTransforms(220) into MethodInvocation(226) at 0", "Insert SimpleName: put(221) into MethodInvocation(226) at 1", "Insert QualifiedName: Transforms.TRANSFORM_C14N_OMIT_COMMENTS(222) into MethodInvocation(226) at 2", "Insert TypeLiteral(225) into MethodInvocation(226) at 3", "Insert SimpleName: defaultTransforms(228) into MethodInvocation(234) at 0", "Insert SimpleName: put(229) into MethodInvocation(234) at 1", "Insert QualifiedName: Transforms.TRANSFORM_C14N_WITH_COMMENTS(230) into MethodInvocation(234) at 2", "Insert TypeLiteral(233) into MethodInvocation(234) at 3", "Insert SimpleName: defaultTransforms(236) into MethodInvocation(242) at 0", "Insert SimpleName: put(237) into MethodInvocation(242) at 1", "Insert QualifiedName: Transforms.TRANSFORM_C14N11_OMIT_COMMENTS(238) into MethodInvocation(242) at 2", "Insert TypeLiteral(241) into MethodInvocation(242) at 3", "Insert SimpleName: defaultTransforms(244) into MethodInvocation(250) at 0", "Insert SimpleName: put(245) into MethodInvocation(250) at 1", "Insert QualifiedName: Transforms.TRANSFORM_C14N11_WITH_COMMENTS(246) into MethodInvocation(250) at 2", "Insert TypeLiteral(249) into MethodInvocation(250) at 3", "Insert SimpleName: defaultTransforms(252) into MethodInvocation(258) at 0", "Insert SimpleName: put(253) into MethodInvocation(258) at 1", "Insert QualifiedName: Transforms.TRANSFORM_C14N_EXCL_OMIT_COMMENTS(254) into MethodInvocation(258) at 2", "Insert TypeLiteral(257) into MethodInvocation(258) at 3", "Insert SimpleName: defaultTransforms(260) into MethodInvocation(266) at 0", "Insert SimpleName: put(261) into MethodInvocation(266) at 1", "Insert QualifiedName: Transforms.TRANSFORM_C14N_EXCL_WITH_COMMENTS(262) into MethodInvocation(266) at 2", "Insert TypeLiteral(265) into MethodInvocation(266) at 3", "Insert SimpleName: defaultTransforms(268) into MethodInvocation(274) at 0", "Insert SimpleName: put(269) into MethodInvocation(274) at 1", "Insert QualifiedName: Transforms.TRANSFORM_XPATH(270) into MethodInvocation(274) at 2", "Insert TypeLiteral(273) into MethodInvocation(274) at 3", "Insert SimpleName: defaultTransforms(276) into MethodInvocation(282) at 0", "Insert SimpleName: put(277) into MethodInvocation(282) at 1", "Insert QualifiedName: Transforms.TRANSFORM_ENVELOPED_SIGNATURE(278) into MethodInvocation(282) at 2", "Insert TypeLiteral(281) into MethodInvocation(282) at 3", "Insert SimpleName: defaultTransforms(284) into MethodInvocation(290) at 0", "Insert SimpleName: put(285) into MethodInvocation(290) at 1", "Insert QualifiedName: Transforms.TRANSFORM_XSLT(286) into MethodInvocation(290) at 2", "Insert TypeLiteral(289) into MethodInvocation(290) at 3", "Insert SimpleName: defaultTransforms(292) into MethodInvocation(298) at 0", "Insert SimpleName: put(293) into MethodInvocation(298) at 1", "Insert QualifiedName: Transforms.TRANSFORM_XPATH2FILTER(294) into MethodInvocation(298) at 2", "Insert TypeLiteral(297) into MethodInvocation(298) at 3", "Insert SimpleName: defaultTransforms(300) into MethodInvocation(306) at 0", "Insert SimpleName: put(301) into MethodInvocation(306) at 1", "Insert QualifiedName: Transforms.TRANSFORM_XPATH2FILTER04(302) into MethodInvocation(306) at 2", "Insert TypeLiteral(305) into MethodInvocation(306) at 3", "Move EnhancedForStatement(1101) into Block(1279) at 0", "Insert EnhancedForStatement(1278) into Block(1279) at 1", "Insert SimpleName: TransformSpi(149) into SimpleType: TransformSpi(150) at 0", "Insert SimpleName: HashMap(155) into SimpleType: HashMap(156) at 0", "Insert SimpleName: String(157) into SimpleType: String(158) at 0", "Insert SimpleType: Class(160) into ParameterizedType: Class<? extends TransformSpi>(164) at 0", "Insert WildcardType: ? extends TransformSpi(163) into ParameterizedType: Class<? extends TransformSpi>(164) at 1", "Insert SimpleType: TransformBase64Decode(216) into TypeLiteral(217) at 0", "Insert SimpleType: TransformC14N(224) into TypeLiteral(225) at 0", "Insert SimpleType: TransformC14NWithComments(232) into TypeLiteral(233) at 0", "Insert SimpleType: TransformC14N11(240) into TypeLiteral(241) at 0", "Insert SimpleType: TransformC14N11_WithComments(248) into TypeLiteral(249) at 0", "Insert SimpleType: TransformC14NExclusive(256) into TypeLiteral(257) at 0", "Insert SimpleType: TransformC14NExclusiveWithComments(264) into TypeLiteral(265) at 0", "Insert SimpleType: TransformXPath(272) into TypeLiteral(273) at 0", "Insert SimpleType: TransformEnvelopedSignature(280) into TypeLiteral(281) at 0", "Insert SimpleType: TransformXSLT(288) into TypeLiteral(289) at 0", "Insert SimpleType: TransformXPath2Filter(296) into TypeLiteral(297) at 0", "Insert SimpleType: TransformXPath2Filter(304) into TypeLiteral(305) at 0", "Insert SingleVariableDeclaration(1258) into EnhancedForStatement(1278) at 0", "Insert MethodInvocation(1261) into EnhancedForStatement(1278) at 1", "Insert Block(1277) into EnhancedForStatement(1278) at 2", "Insert SimpleName: Class(159) into SimpleType: Class(160) at 0", "Insert SimpleType: TransformSpi(162) into WildcardType: ? extends TransformSpi(163) at 0", "Insert SimpleName: TransformBase64Decode(215) into SimpleType: TransformBase64Decode(216) at 0", "Insert SimpleName: TransformC14N(223) into SimpleType: TransformC14N(224) at 0", "Insert SimpleName: TransformC14NWithComments(231) into SimpleType: TransformC14NWithComments(232) at 0", "Insert SimpleName: TransformC14N11(239) into SimpleType: TransformC14N11(240) at 0", "Insert SimpleName: TransformC14N11_WithComments(247) into SimpleType: TransformC14N11_WithComments(248) at 0", "Insert SimpleName: TransformC14NExclusive(255) into SimpleType: TransformC14NExclusive(256) at 0", "Insert SimpleName: TransformC14NExclusiveWithComments(263) into SimpleType: TransformC14NExclusiveWithComments(264) at 0", "Insert SimpleName: TransformXPath(271) into SimpleType: TransformXPath(272) at 0", "Insert SimpleName: TransformEnvelopedSignature(279) into SimpleType: TransformEnvelopedSignature(280) at 0", "Insert SimpleName: TransformXSLT(287) into SimpleType: TransformXSLT(288) at 0", "Insert SimpleName: TransformXPath2Filter(295) into SimpleType: TransformXPath2Filter(296) at 0", "Insert SimpleName: TransformXPath2Filter(303) into SimpleType: TransformXPath2Filter(304) at 0", "Insert SimpleType: String(1256) into SingleVariableDeclaration(1258) at 0", "Insert SimpleName: key(1257) into SingleVariableDeclaration(1258) at 1", "Insert SimpleName: defaultTransforms(1259) into MethodInvocation(1261) at 0", "Insert SimpleName: keySet(1260) into MethodInvocation(1261) at 1", "Insert ExpressionStatement(1276) into Block(1277) at 0", "Insert SimpleName: TransformSpi(161) into SimpleType: TransformSpi(162) at 0", "Insert SimpleName: String(1255) into SimpleType: String(1256) at 0", "Insert MethodInvocation(1275) into ExpressionStatement(1276) at 0", "Insert SimpleName: Transform(1262) into MethodInvocation(1275) at 0", "Insert SimpleName: register(1263) into MethodInvocation(1275) at 1", "Insert SimpleName: key(1264) into MethodInvocation(1275) at 2", "Insert CastExpression(1274) into MethodInvocation(1275) at 3", "Insert ParameterizedType: Class<TransformSpi>(1269) into CastExpression(1274) at 0", "Insert MethodInvocation(1273) into CastExpression(1274) at 1", "Insert SimpleType: Class(1266) into ParameterizedType: Class<TransformSpi>(1269) at 0", "Insert SimpleType: TransformSpi(1268) into ParameterizedType: Class<TransformSpi>(1269) at 1", "Insert SimpleName: defaultTransforms(1270) into MethodInvocation(1273) at 0", "Insert SimpleName: get(1271) into MethodInvocation(1273) at 1", "Insert SimpleName: key(1272) into MethodInvocation(1273) at 2", "Insert SimpleName: Class(1265) into SimpleType: Class(1266) at 0", "Insert SimpleName: TransformSpi(1267) into SimpleType: TransformSpi(1268) at 0", "Delete Block(1102)"]}}, {"XMLCipher_cluster": {"actions": []}}, {"XMLCipher_diff": {"operations": []}}, {"MissingResourceFailureException_cluster": {"actions": [{"root": "INS Modifier: private to FieldDeclaration at 1", "operations": ["INS Modifier: private to FieldDeclaration at 1"]}]}}, {"MissingResourceFailureException_diff": {"operations": ["Insert Modifier: private(34) into FieldDeclaration(40) at 1"]}}, {"Transform_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 18", "MOV MethodDeclaration to TypeDeclaration: class at 12"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleType: TransformSpi to ParameterizedType: Class<TransformSpi> at 1", "INS ParameterizedType: Class<TransformSpi> to VariableDeclarationStatement at 0", "INS TextElement: <code>Transform algorithm</code> will be specified as parameter of  to TagElement: @param at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: Class to ParameterizedType: Class<TransformSpi> at 0", "INS TextElement: is already registered to TagElement: @throws at 2", "INS SimpleName: String to SimpleType: String at 0", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: AlgorithmAlreadyRegisteredException to TagElement: @throws at 0", "INS SimpleName: implementingClass to TagElement: @param at 0", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS TagElement to Javadoc at 0", "INS TextElement: class of  to TagElement: @param at 2", "INS TagElement: @param to Javadoc at 2", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: getInstance to MethodRef at 0", "INS TextElement:  <code>implementingClass</code> the implementing  to TagElement: @param at 1", "INS TextElement: , when generate. </br> to TagElement: @param at 4", "INS SimpleName: transformSpiHash to MethodInvocation at 0", "INS SimpleName: implementingClass to MethodInvocation at 3", "INS SimpleType: Document to MethodRefParameter at 0", "INS Modifier: static to MethodDeclaration at 2", "INS SimpleName: TransformSpi to TagElement: @link at 0", "INS TagElement: @throws to Javadoc at 3", "INS SimpleType: Class to ParameterizedType: Class<TransformSpi> at 0", "INS MethodRefParameter to MethodRef at 2", "INS Modifier: public to MethodDeclaration at 1", "INS TagElement: @link to TagElement: @param at 3", "INS SimpleType: AlgorithmAlreadyRegisteredException to MethodDeclaration at 7", "INS ParameterizedType: Class<TransformSpi> to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 8", "INS SimpleName: algorithmURI to TagElement: @param at 0", "INS PrimitiveType: void to MethodDeclaration at 3", "INS SimpleName: algorithmURI to MethodInvocation at 2", "INS SimpleType: String to MethodRefParameter at 0", "INS SimpleName: register to MethodDeclaration at 4", "INS TagElement: @link to TagElement: @param at 3", "INS TextElement: Registers implementing class of the Transform algorithm with algorithmURI to TagElement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Javadoc to MethodDeclaration at 0", "INS TextElement:  if specified algorithmURI  to TagElement: @throws at 1", "INS ExpressionStatement to Block at 2", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS IfStatement to Block at 1", "INS SimpleName: Class to SimpleType: Class at 0", "INS MethodRefParameter to MethodRef at 1", "INS TextElement:  algorithmURI URI representation of  to TagElement: @param at 1", "INS Block to IfStatement at 1", "INS SimpleName: put to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS SimpleName: performTransform to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS Block to MethodDeclaration at 9"]}, {"root": "UPDATE from Map<String,TransformSpi> to Map<String,Class<TransformSpi>>", "operations": ["UPD ParameterizedType: Map<String,TransformSpi> from Map<String,TransformSpi> to Map<String,Class<TransformSpi>>"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @param to Javadoc at 3"]}, {"root": "INS SimpleName: Transform to MethodDeclaration at 2", "operations": ["INS SimpleName: Transform to MethodDeclaration at 2"]}, {"root": "INS SimpleName: Transform to MethodDeclaration at 2", "operations": ["INS SimpleName: Transform to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0"]}, {"root": "INS SimpleName: Transform to MethodDeclaration at 3", "operations": ["INS SimpleName: Transform to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 8", "operations": ["INS SimpleName: algorithmURI to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: InvalidCanonicalizerException to MethodDeclaration at 7", "MOV SimpleType: TransformationException to MethodDeclaration at 8", "MOV SimpleType: IOException to MethodDeclaration at 5", "MOV Javadoc to MethodDeclaration at 0", "MOV SimpleType: XMLSignatureInput to MethodDeclaration at 2", "MOV SimpleType: CanonicalizationException to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TextElement: Initialize the transform object. to TagElement at 0", "INS TagElement to Javadoc at 0"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "UPDATE from getInstance to initializeTransform", "operations": ["UPD SimpleName: getInstance from getInstance to initializeTransform", "UPD SimpleName: Transform from Transform to initializeTransform"]}, {"root": "INS ParameterizedType: Class<TransformSpi> to ParameterizedType: Map<String,TransformSpi> at 2", "operations": ["INS ParameterizedType: Class<TransformSpi> to ParameterizedType: Map<String,TransformSpi> at 2", "INS SimpleType: Class to ParameterizedType: Class<TransformSpi> at 0", "INS SimpleName: Class to SimpleType: Class at 0"]}, {"root": "INS ConstructorInvocation to Block at 0", "operations": ["INS SimpleName: doc to ConstructorInvocation at 0", "INS SimpleName: algorithmURI to ConstructorInvocation at 1", "INS ConstructorInvocation to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV SuperConstructorInvocation to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ExpressionStatement to Block at 3", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS SuperConstructorInvocation to Block at 0", "operations": ["INS SimpleName: doc to SuperConstructorInvocation at 0", "INS SuperConstructorInvocation to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: initializeTransform to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: doc to MethodInvocation at 1", "INS SimpleName: algorithmURI to MethodInvocation at 2", "INS SimpleName: contextNodes to MethodInvocation at 3"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Class to ParameterizedType: Class<TransformSpi> at 0", "INS SimpleType: TransformSpi to ParameterizedType: Class<TransformSpi> at 1", "INS SimpleName: Class to SimpleType: Class at 0", "INS ParameterizedType: Class<TransformSpi> to VariableDeclarationStatement at 0", "INS SimpleName: TransformSpi to SimpleType: TransformSpi at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: transformSpiClass to VariableDeclarationFragment at 0"]}, {"root": "INS TryStatement to Block at 6", "operations": ["INS TryStatement to Block at 6", "INS Block to TryStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: TransformSpi to SimpleType: TransformSpi at 0", "INS SimpleName: transformSpi to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: Class to ParameterizedType: Class<TransformSpi> at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ParameterizedType: Class<TransformSpi> to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: TransformSpi to ParameterizedType: Class<TransformSpi> at 1", "INS SimpleName: Class to SimpleType: Class at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS InfixExpression: != to IfStatement at 0", "INS IfStatement to Block at 1", "INS SimpleName: transformSpi to InfixExpression: != at 0", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 2"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: transformSpiHash to MethodInvocation at 0", "INS SimpleName: transformSpiClass to MethodInvocation at 3", "INS SimpleName: algorithmURI to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 3"]}, {"root": "UPDATE from ex to implementingClass", "operations": ["UPD SimpleName: ex from ex to implementingClass"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleName: ex to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from InvalidTransformException to AlgorithmAlreadyRegisteredException", "operations": ["UPD SimpleName: InvalidTransformException from InvalidTransformException to AlgorithmAlreadyRegisteredException", "UPD SimpleName: CanonicalizationException from CanonicalizationException to AlgorithmAlreadyRegisteredException", "UPD SimpleType: InvalidTransformException from InvalidTransformException to AlgorithmAlreadyRegisteredException"]}, {"root": "MOVE from SimpleType: AlgorithmAlreadyRegisteredException", "operations": ["MOV SimpleName: CanonicalizationException to SimpleType: AlgorithmAlreadyRegisteredException at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleName: transformSpiClass to VariableDeclarationFragment at 0", "INS SimpleType: Class to ParameterizedType: Class<TransformSpi> at 0", "INS SimpleType: TransformSpi to ParameterizedType: Class<TransformSpi> at 1", "INS SimpleName: Class to SimpleType: Class at 0", "INS ParameterizedType: Class<TransformSpi> to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: TransformSpi to SimpleType: TransformSpi at 0", "INS VariableDeclarationStatement to Block at 1"]}, {"root": "INS TryStatement to Block at 4", "operations": ["INS Block to TryStatement at 0", "INS SimpleType: IllegalAccessException to SingleVariableDeclaration at 0", "INS SimpleName: ex to ClassInstanceCreation at 3", "INS VariableDeclarationStatement to Block at 0", "INS Dimension to VariableDeclarationFragment at 1", "INS SimpleName: algorithmURI to ArrayInitializer at 0", "INS CatchClause to TryStatement at 2", "INS ThrowStatement to Block at 1", "INS SimpleName: algorithmURI to ArrayInitializer at 0", "INS ArrayInitializer to VariableDeclarationFragment at 2", "INS SimpleType: Object to VariableDeclarationStatement at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: InvalidTransformException to SimpleType: InvalidTransformException at 0", "INS VariableDeclarationStatement to Block at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: exArgs to ClassInstanceCreation at 2", "INS SimpleName: exArgs to VariableDeclarationFragment at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS ArrayInitializer to VariableDeclarationFragment at 2", "INS Dimension to VariableDeclarationFragment at 1", "INS SimpleName: exArgs to ClassInstanceCreation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: InstantiationException to SimpleType: InstantiationException at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: InvalidTransformException to SimpleType: InvalidTransformException at 0", "INS TryStatement to Block at 4", "INS SimpleType: InvalidTransformException to ClassInstanceCreation at 0", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS SimpleType: InstantiationException to SingleVariableDeclaration at 0", "INS SimpleType: Object to VariableDeclarationStatement at 0", "INS SimpleName: IllegalAccessException to SimpleType: IllegalAccessException at 0", "INS StringLiteral: \"signature.Transform.UnknownTransform\" to ClassInstanceCreation at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: exArgs to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS Block to CatchClause at 1", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS SimpleType: InvalidTransformException to ClassInstanceCreation at 0", "INS SimpleName: ex to ClassInstanceCreation at 3", "INS CatchClause to TryStatement at 1", "INS Block to CatchClause at 1", "INS ThrowStatement to Block at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS StringLiteral: \"signature.Transform.UnknownTransform\" to ClassInstanceCreation at 1"]}, {"root": "MOVE from ParameterizedType: Class<TransformSpi>", "operations": ["MOV SimpleType: TransformSpi to ParameterizedType: Class<TransformSpi> at 1"]}, {"root": "UPDATE from ConcurrentHashMap<String,TransformSpi> to ConcurrentHashMap<String,Class<TransformSpi>>", "operations": ["UPD ParameterizedType: ConcurrentHashMap<String,TransformSpi> from ConcurrentHashMap<String,TransformSpi> to ConcurrentHashMap<String,Class<TransformSpi>>"]}, {"root": "MOVE from ConstructorInvocation", "operations": ["MOV CastExpression to ConstructorInvocation at 2"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 2", "MOV CatchClause to TryStatement at 1"]}, {"root": "MOVE from ParameterizedType: Class<TransformSpi>", "operations": ["MOV SimpleType: TransformSpi to ParameterizedType: Class<TransformSpi> at 1", "MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: performTransform to MethodInvocation at 0", "INS SimpleName: input to MethodInvocation at 1", "INS NullLiteral to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS ParameterizedType: Class<TransformSpi> to ParameterizedType: ConcurrentHashMap<String,TransformSpi> at 2", "operations": ["INS SimpleType: Class to ParameterizedType: Class<TransformSpi> at 0", "INS SimpleName: Class to SimpleType: Class at 0", "INS ParameterizedType: Class<TransformSpi> to ParameterizedType: ConcurrentHashMap<String,TransformSpi> at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: algorithmURI to MethodInvocation at 2", "MOV SimpleName: contextNodes to MethodInvocation at 3", "MOV SimpleName: getInstance to MethodInvocation at 0", "MOV SimpleName: doc to MethodInvocation at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from transformSpi to transformSpiClass", "operations": ["UPD SimpleName: transformSpi from transformSpi to transformSpiClass", "UPD SimpleName: transformSpi from transformSpi to transformSpiClass"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ThrowStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "UPDATE from ParserConfigurationException to Class", "operations": ["UPD SimpleName: ParserConfigurationException from ParserConfigurationException to Class"]}, {"root": "MOVE from SimpleType: Class", "operations": ["MOV SimpleName: ParserConfigurationException to SimpleType: Class at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ThrowStatement to Block at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from ParameterizedType: Class<TransformSpi>", "operations": ["MOV SimpleType: TransformSpi to ParameterizedType: Class<TransformSpi> at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: exArgs to VariableDeclarationFragment at 0", "INS ArrayInitializer to VariableDeclarationFragment at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: algorithmURI to ArrayInitializer at 0", "INS Dimension to VariableDeclarationFragment at 1"]}, {"root": "INS ThrowStatement to Block at 1", "operations": ["INS ThrowStatement to Block at 1", "INS SimpleType: InvalidTransformException to ClassInstanceCreation at 0", "INS SimpleName: exArgs to ClassInstanceCreation at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS StringLiteral: \"signature.Transform.UnknownTransform\" to ClassInstanceCreation at 1", "INS SimpleName: InvalidTransformException to SimpleType: InvalidTransformException at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1", "MOV SimpleName: transformSpiHash to MethodInvocation at 0", "MOV SimpleName: put to MethodInvocation at 1", "MOV SimpleName: algorithmURI to MethodInvocation at 2"]}, {"root": "UPDATE from put to get", "operations": ["UPD SimpleName: put from put to get"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Object to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from SAXException to TransformSpi", "operations": ["UPD SimpleName: SAXException from SAXException to TransformSpi"]}, {"root": "MOVE from SimpleType: TransformSpi", "operations": ["MOV SimpleName: SAXException to SimpleType: TransformSpi at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Object to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Object to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from \"signature.Transform.UnknownTransform\" to \"algorithm.alreadyRegistered\"", "operations": ["UPD StringLiteral: \"signature.Transform.UnknownTransform\" from \"signature.Transform.UnknownTransform\" to \"algorithm.alreadyRegistered\""]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: newInstance to MethodInvocation at 1", "INS SimpleName: transformSpiClass to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleName: ex to ClassInstanceCreation at 3"]}, {"root": "INS SimpleName: transformSpi to ArrayInitializer at 1", "operations": ["INS SimpleName: transformSpi to ArrayInitializer at 1"]}, {"root": "UPDATE from XMLSignatureInput to Document", "operations": ["UPD SimpleName: XMLSignatureInput from XMLSignatureInput to Document"]}, {"root": "MOVE from SimpleType: Document", "operations": ["MOV SimpleName: XMLSignatureInput to SimpleType: Document at 0"]}, {"root": "INS SimpleName: algorithmURI to ArrayInitializer at 0", "operations": ["INS SimpleName: algorithmURI to ArrayInitializer at 0"]}, {"root": "INS SimpleName: transformSpi to ArrayInitializer at 1", "operations": ["INS SimpleName: transformSpi to ArrayInitializer at 1"]}, {"root": "DEL Modifier: static", "operations": ["DEL Modifier: static"]}, {"root": "DEL SimpleType: Transform", "operations": ["DEL SimpleType: Transform", "DEL SimpleName: Transform"]}, {"root": "DEL SimpleName: getInstance", "operations": ["DEL SimpleName: getInstance"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: algorithmURI", "DEL ReturnStatement", "DEL SimpleName: getInstance", "DEL MethodInvocation", "DEL SimpleName: doc"]}, {"root": "DEL Modifier: static", "operations": ["DEL Modifier: static"]}, {"root": "DEL SimpleType: Transform", "operations": ["DEL SimpleName: Transform", "DEL SimpleType: Transform"]}, {"root": "DEL SimpleName: getInstance", "operations": ["DEL SimpleName: getInstance"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL MethodInvocation"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement:  <code>Transform algorithm</code> URI form, such as ", "DEL SimpleName: doc", "DEL TextElement:  the child node list of <code>Transform</code> element", "DEL TextElement:  the proxy ", "DEL TextElement:  <code>", "DEL TagElement: @link", "DEL TextElement: <code>Transform algorithm</code> URI.", "DEL SimpleName: InvalidTransformException", "DEL SimpleName: Document", "DEL Javadoc", "DEL TagElement: @link", "DEL TagElement: @param", "DEL TextElement: specified in <a href=http://www.w3.org/TR/xmldsig-core/#sec-TransformAlg>", "DEL TagElement: @param", "DEL TagElement: @throws", "DEL TextElement: Transform algorithm </a>", "DEL TagElement", "DEL SimpleName: algorithmURI", "DEL TextElement: Generates a Transform object that implements the specified ", "DEL TagElement: @param", "DEL SimpleName: Transform", "DEL SimpleName: contextNodes", "DEL TagElement: @return", "DEL TextElement: </code> object"]}, {"root": "DEL Modifier: static", "operations": ["DEL Modifier: static"]}, {"root": "DEL SimpleType: Transform", "operations": ["DEL SimpleName: Transform", "DEL SimpleType: Transform"]}, {"root": "DEL SimpleName: getInstance", "operations": ["DEL SimpleName: getInstance"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: Transform", "DEL SimpleName: contextNodes", "DEL ReturnStatement", "DEL SimpleName: algorithmURI", "DEL ClassInstanceCreation", "DEL SimpleType: Transform", "DEL SimpleName: doc"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleName: algorithmURI", "DEL SimpleName: getClass", "DEL Dimension", "DEL SimpleName: transformSpi", "DEL SimpleName: exArgs", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL ArrayInitializer", "DEL IfStatement", "DEL ParenthesizedExpression"]}, {"root": "DEL TryStatement", "operations": ["DEL ExpressionStatement", "DEL TryStatement", "DEL Block", "DEL MethodInvocation"]}, {"root": "DEL SimpleType: Object", "operations": ["DEL SimpleType: Object", "DEL SimpleName: Object"]}, {"root": "DEL MethodInvocation", "operations": ["DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: getURI"]}, {"root": "DEL StringLiteral: \"SAXException\"", "operations": ["DEL StringLiteral: \"SAXException\""]}, {"root": "DEL SimpleName: result", "operations": ["DEL SimpleName: result"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: exArgs", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL StringLiteral: \"signature.Transform.ErrorDuringTransform\"", "DEL VariableDeclarationFragment", "DEL SimpleName: input", "DEL SimpleType: SAXException", "DEL Block", "DEL ThrowStatement", "DEL SimpleType: ParserConfigurationException", "DEL StringLiteral: \"ParserConfigurationException\"", "DEL SingleVariableDeclaration", "DEL SimpleType: CanonicalizationException", "DEL SimpleName: ex", "DEL MethodInvocation", "DEL Modifier: public", "DEL ThisExpression", "DEL ThisExpression", "DEL CatchClause", "DEL VariableDeclarationFragment", "DEL SimpleName: performTransform", "DEL SingleVariableDeclaration", "DEL SimpleName: result", "DEL Dimension", "DEL Block", "DEL SimpleType: XMLSignatureInput", "DEL ClassInstanceCreation", "DEL SimpleName: ex", "DEL Block", "DEL SimpleName: enginePerformTransform", "DEL StringLiteral: \"signature.Transform.ErrorDuringTransform\"", "DEL SimpleName: CanonicalizationException", "DEL MethodInvocation", "DEL SimpleName: getURI", "DEL ArrayInitializer", "DEL SimpleName: transformSpi", "DEL SimpleName: ex", "DEL Assignment: =", "DEL SimpleType: CanonicalizationException", "DEL ThrowStatement", "DEL CatchClause", "DEL SimpleName: exArgs", "DEL NullLiteral", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleName: exArgs", "DEL Block", "DEL TryStatement", "DEL SimpleName: result", "DEL VariableDeclarationStatement"]}]}}, {"Transform_diff": {"operations": ["Move MethodDeclaration(247) into TypeDeclaration: class(1006) at 18", "Move MethodDeclaration(343) into TypeDeclaration: class(1006) at 12", "Insert MethodDeclaration(638) into TypeDeclaration: class(1006) at 13", "Insert MethodDeclaration(707) into TypeDeclaration: class(1006) at 15", "Update ParameterizedType: Map<String,TransformSpi>(88) to Map<String,Class<TransformSpi>>", "Move TagElement: @param(351) into Javadoc(132) at 3", "Insert SimpleName: Transform(134) into MethodDeclaration(153) at 2", "Insert SimpleName: Transform(179) into MethodDeclaration(237) at 2", "Move Javadoc(136) into MethodDeclaration(294) at 0", "Insert SimpleName: Transform(270) into MethodDeclaration(294) at 2", "Insert SingleVariableDeclaration(278) into MethodDeclaration(294) at 4", "Insert Javadoc(581) into MethodDeclaration(638) at 0", "Insert Modifier: public(582) into MethodDeclaration(638) at 1", "Insert Modifier: static(583) into MethodDeclaration(638) at 2", "Insert PrimitiveType: void(584) into MethodDeclaration(638) at 3", "Insert SimpleName: register(585) into MethodDeclaration(638) at 4", "Move SingleVariableDeclaration(512) into MethodDeclaration(638) at 5", "Insert SingleVariableDeclaration(596) into MethodDeclaration(638) at 6", "Insert SimpleType: AlgorithmAlreadyRegisteredException(598) into MethodDeclaration(638) at 7", "Insert Block(637) into MethodDeclaration(638) at 8", "Move Javadoc(728) into MethodDeclaration(707) at 0", "Insert Modifier: public(685) into MethodDeclaration(707) at 1", "Move SimpleType: XMLSignatureInput(731) into MethodDeclaration(707) at 2", "Insert SimpleName: performTransform(688) into MethodDeclaration(707) at 3", "Move SingleVariableDeclaration(736) into MethodDeclaration(707) at 4", "Move SimpleType: IOException(738) into MethodDeclaration(707) at 5", "Move SimpleType: CanonicalizationException(740) into MethodDeclaration(707) at 6", "Move SimpleType: InvalidCanonicalizerException(742) into MethodDeclaration(707) at 7", "Move SimpleType: TransformationException(744) into MethodDeclaration(707) at 8", "Insert Block(706) into MethodDeclaration(707) at 9", "Insert Javadoc(840) into MethodDeclaration(1005) at 0", "Update Modifier: public(137) to private", "Insert PrimitiveType: void(842) into MethodDeclaration(1005) at 2", "Update SimpleName: Transform(138) to initializeTransform", "Insert ParameterizedType: Class<TransformSpi>(90) into ParameterizedType: Map<String,Class<TransformSpi>>(91) at 2", "Insert ConstructorInvocation(151) into Block(152) at 0", "Move SuperConstructorInvocation(154) into Block(236) at 0", "Insert ExpressionStatement(235) into Block(236) at 3", "Insert SimpleType: String(276) into SingleVariableDeclaration(278) at 0", "Insert SimpleName: algorithmURI(277) into SingleVariableDeclaration(278) at 1", "Insert SuperConstructorInvocation(286) into Block(293) at 0", "Insert ExpressionStatement(292) into Block(293) at 1", "Insert VariableDeclarationStatement(374) into Block(444) at 3", "Insert TryStatement(443) into Block(444) at 5", "Insert VariableDeclarationStatement(505) into Block(553) at 0", "Insert IfStatement(525) into Block(553) at 1", "Move VariableDeclarationStatement(628) into Block(553) at 2", "Insert ExpressionStatement(552) into Block(553) at 3", "Insert TagElement(556) into Javadoc(581) at 0", "Insert TagElement: @param(570) into Javadoc(581) at 1", "Insert TagElement: @param(576) into Javadoc(581) at 2", "Insert TagElement: @throws(580) into Javadoc(581) at 3", "Insert ParameterizedType: Class<TransformSpi>(594) into SingleVariableDeclaration(596) at 0", "Update SimpleName: ex(762) to implementingClass", "Move SimpleName: ex(762) into SingleVariableDeclaration(596) at 1", "Update SimpleName: CanonicalizationException(775) to AlgorithmAlreadyRegisteredException", "Move SimpleName: CanonicalizationException(775) into SimpleType: AlgorithmAlreadyRegisteredException(598) at 0", "Insert VariableDeclarationStatement(610) into Block(637) at 0", "Insert IfStatement(630) into Block(637) at 1", "Insert ExpressionStatement(636) into Block(637) at 2", "Move ReturnStatement(810) into Block(706) at 0", "Insert TagElement(839) into Javadoc(840) at 0", "Insert VariableDeclarationStatement(878) into Block(1004) at 1", "Insert TryStatement(947) into Block(1004) at 3", "Insert SimpleType: Class(87) into ParameterizedType: Class<TransformSpi>(90) at 0", "Move SimpleType: TransformSpi(87) into ParameterizedType: Class<TransformSpi>(90) at 1", "Update ParameterizedType: ConcurrentHashMap<String,TransformSpi>(96) to ConcurrentHashMap<String,Class<TransformSpi>>", "Insert SimpleName: doc(145) into ConstructorInvocation(151) at 0", "Insert SimpleName: algorithmURI(146) into ConstructorInvocation(151) at 1", "Move CastExpression(386) into ConstructorInvocation(151) at 2", "Insert MethodInvocation(234) into ExpressionStatement(235) at 0", "Insert SimpleName: String(275) into SimpleType: String(276) at 0", "Insert SimpleName: doc(285) into SuperConstructorInvocation(286) at 0", "Insert MethodInvocation(291) into ExpressionStatement(292) at 0", "Insert ParameterizedType: Class<TransformSpi>(367) into VariableDeclarationStatement(374) at 0", "Insert VariableDeclarationFragment(373) into VariableDeclarationStatement(374) at 1", "Insert Block(400) into TryStatement(443) at 0", "Move CatchClause(658) into TryStatement(443) at 1", "Move CatchClause(679) into TryStatement(443) at 2", "Insert ParameterizedType: Class<TransformSpi>(498) into VariableDeclarationStatement(505) at 0", "Insert VariableDeclarationFragment(504) into VariableDeclarationStatement(505) at 1", "Insert InfixExpression: !=(508) into IfStatement(525) at 0", "Insert Block(524) into IfStatement(525) at 1", "Insert MethodInvocation(551) into ExpressionStatement(552) at 0", "Insert TextElement: Registers implementing class of the Transform algorithm with algorithmURI(555) into TagElement(556) at 0", "Insert SimpleName: algorithmURI(557) into TagElement: @param(570) at 0", "Insert TextElement:  algorithmURI URI representation of (558) into TagElement: @param(570) at 1", "Insert TextElement: <code>Transform algorithm</code> will be specified as parameter of (559) into TagElement: @param(570) at 2", "Insert TagElement: @link(568) into TagElement: @param(570) at 3", "Insert TextElement: , when generate. </br>(569) into TagElement: @param(570) at 4", "Insert SimpleName: implementingClass(571) into TagElement: @param(576) at 0", "Insert TextElement:  <code>implementingClass</code> the implementing (572) into TagElement: @param(576) at 1", "Insert TextElement: class of (573) into TagElement: @param(576) at 2", "Insert TagElement: @link(575) into TagElement: @param(576) at 3", "Insert SimpleName: AlgorithmAlreadyRegisteredException(577) into TagElement: @throws(580) at 0", "Insert TextElement:  if specified algorithmURI (578) into TagElement: @throws(580) at 1", "Insert TextElement: is already registered(579) into TagElement: @throws(580) at 2", "Insert SimpleType: Class(591) into ParameterizedType: Class<TransformSpi>(594) at 0", "Move SimpleType: TransformSpi(577) into ParameterizedType: Class<TransformSpi>(594) at 1", "Insert ParameterizedType: Class<TransformSpi>(603) into VariableDeclarationStatement(610) at 0", "Move VariableDeclarationFragment(583) into VariableDeclarationStatement(610) at 1", "Move InfixExpression: !=(587) into IfStatement(630) at 0", "Insert Block(629) into IfStatement(630) at 1", "Insert MethodInvocation(635) into ExpressionStatement(636) at 0", "Insert MethodInvocation(704) into ReturnStatement(705) at 0", "Insert TextElement: Initialize the transform object.(838) into TagElement(839) at 0", "Insert ParameterizedType: Class<TransformSpi>(871) into VariableDeclarationStatement(878) at 0", "Insert VariableDeclarationFragment(877) into VariableDeclarationStatement(878) at 1", "Insert Block(904) into TryStatement(947) at 0", "Insert CatchClause(925) into TryStatement(947) at 1", "Insert CatchClause(946) into TryStatement(947) at 2", "Insert SimpleName: Class(86) into SimpleType: Class(87) at 0", "Insert ParameterizedType: Class<TransformSpi>(101) into ParameterizedType: ConcurrentHashMap<String,Class<TransformSpi>>(102) at 2", "Update SimpleName: getInstance(468) to initializeTransform", "Move SimpleName: getInstance(468) into MethodInvocation(234) at 0", "Move SimpleName: doc(469) into MethodInvocation(234) at 1", "Move SimpleName: algorithmURI(470) into MethodInvocation(234) at 2", "Move SimpleName: contextNodes(471) into MethodInvocation(234) at 3", "Insert SimpleName: initializeTransform(287) into MethodInvocation(291) at 0", "Insert SimpleName: doc(288) into MethodInvocation(291) at 1", "Insert SimpleName: algorithmURI(289) into MethodInvocation(291) at 2", "Insert SimpleName: contextNodes(290) into MethodInvocation(291) at 3", "Insert SimpleType: Class(364) into ParameterizedType: Class<TransformSpi>(367) at 0", "Insert SimpleType: TransformSpi(366) into ParameterizedType: Class<TransformSpi>(367) at 1", "Insert SimpleName: transformSpiClass(368) into VariableDeclarationFragment(373) at 0", "Move MethodInvocation(320) into VariableDeclarationFragment(373) at 1", "Update SimpleName: transformSpi(323) to transformSpiClass", "Move ExpressionStatement(322) into Block(400) at 0", "Insert SimpleType: Class(495) into ParameterizedType: Class<TransformSpi>(498) at 0", "Insert SimpleType: TransformSpi(497) into ParameterizedType: Class<TransformSpi>(498) at 1", "Insert SimpleName: transformSpi(499) into VariableDeclarationFragment(504) at 0", "Insert MethodInvocation(503) into VariableDeclarationFragment(504) at 1", "Insert SimpleName: transformSpi(506) into InfixExpression: !=(508) at 0", "Insert NullLiteral(507) into InfixExpression: !=(508) at 1", "Move VariableDeclarationStatement(649) into Block(524) at 0", "Move ThrowStatement(656) into Block(524) at 1", "Insert SimpleName: transformSpiHash(547) into MethodInvocation(551) at 0", "Insert SimpleName: put(548) into MethodInvocation(551) at 1", "Insert SimpleName: algorithmURI(549) into MethodInvocation(551) at 2", "Insert SimpleName: transformSpiClass(550) into MethodInvocation(551) at 3", "Insert MethodRef(567) into TagElement: @link(568) at 0", "Insert SimpleName: TransformSpi(574) into TagElement: @link(575) at 0", "Update SimpleName: ParserConfigurationException(760) to Class", "Move SimpleName: ParserConfigurationException(760) into SimpleType: Class(591) at 0", "Insert SimpleType: Class(600) into ParameterizedType: Class<TransformSpi>(603) at 0", "Insert SimpleType: TransformSpi(602) into ParameterizedType: Class<TransformSpi>(603) at 1", "Move VariableDeclarationStatement(798) into Block(629) at 0", "Move ThrowStatement(605) into Block(629) at 1", "Insert SimpleName: transformSpiHash(631) into MethodInvocation(635) at 0", "Insert SimpleName: put(632) into MethodInvocation(635) at 1", "Insert SimpleName: algorithmURI(633) into MethodInvocation(635) at 2", "Insert SimpleName: implementingClass(634) into MethodInvocation(635) at 3", "Insert SimpleName: performTransform(701) into MethodInvocation(704) at 0", "Insert SimpleName: input(702) into MethodInvocation(704) at 1", "Insert NullLiteral(703) into MethodInvocation(704) at 2", "Insert SimpleType: Class(868) into ParameterizedType: Class<TransformSpi>(871) at 0", "Insert SimpleType: TransformSpi(870) into ParameterizedType: Class<TransformSpi>(871) at 1", "Insert SimpleName: transformSpiClass(872) into VariableDeclarationFragment(877) at 0", "Move MethodInvocation(168) into VariableDeclarationFragment(877) at 1", "Update SimpleName: transformSpi(171) to transformSpiClass", "Move ExpressionStatement(170) into Block(904) at 0", "Insert SingleVariableDeclaration(908) into CatchClause(925) at 0", "Insert Block(924) into CatchClause(925) at 1", "Insert SingleVariableDeclaration(929) into CatchClause(946) at 0", "Insert Block(945) into CatchClause(946) at 1", "Insert SimpleType: Class(98) into ParameterizedType: Class<TransformSpi>(101) at 0", "Move SimpleType: TransformSpi(95) into ParameterizedType: Class<TransformSpi>(101) at 1", "Insert SimpleName: Class(363) into SimpleType: Class(364) at 0", "Insert SimpleName: TransformSpi(365) into SimpleType: TransformSpi(366) at 0", "Insert VariableDeclarationStatement(412) into Block(420) at 0", "Insert ThrowStatement(419) into Block(420) at 1", "Insert SimpleName: Class(494) into SimpleType: Class(495) at 0", "Insert SimpleName: TransformSpi(496) into SimpleType: TransformSpi(497) at 0", "Move SimpleName: transformSpiHash(629) into MethodInvocation(503) at 0", "Update SimpleName: put(630) to get", "Move SimpleName: put(630) into MethodInvocation(503) at 1", "Move SimpleName: algorithmURI(631) into MethodInvocation(503) at 2", "Move SimpleType: Object(765) into VariableDeclarationStatement(517) at 0", "Insert SimpleName: getInstance(560) into MethodRef(567) at 0", "Insert MethodRefParameter(563) into MethodRef(567) at 1", "Insert MethodRefParameter(566) into MethodRef(567) at 2", "Insert SimpleName: Class(599) into SimpleType: Class(600) at 0", "Update SimpleName: SAXException(784) to TransformSpi", "Move SimpleName: SAXException(784) into SimpleType: TransformSpi(602) at 0", "Move SimpleType: Object(590) into VariableDeclarationStatement(622) at 0", "Insert SimpleName: Class(867) into SimpleType: Class(868) at 0", "Insert SimpleName: TransformSpi(869) into SimpleType: TransformSpi(870) at 0", "Insert SimpleType: InstantiationException(906) into SingleVariableDeclaration(908) at 0", "Insert SimpleName: ex(907) into SingleVariableDeclaration(908) at 1", "Insert VariableDeclarationStatement(916) into Block(924) at 0", "Insert ThrowStatement(923) into Block(924) at 1", "Insert SimpleType: IllegalAccessException(927) into SingleVariableDeclaration(929) at 0", "Insert SimpleName: ex(928) into SingleVariableDeclaration(929) at 1", "Insert VariableDeclarationStatement(937) into Block(945) at 0", "Insert ThrowStatement(944) into Block(945) at 1", "Insert SimpleName: Class(97) into SimpleType: Class(98) at 0", "Move MethodInvocation(634) into Assignment: =(398) at 1", "Move SimpleType: Object(643) into VariableDeclarationStatement(412) at 0", "Insert VariableDeclarationFragment(411) into VariableDeclarationStatement(412) at 1", "Insert ClassInstanceCreation(418) into ThrowStatement(419) at 0", "Update SimpleType: InvalidTransformException(651) to AlgorithmAlreadyRegisteredException", "Update StringLiteral: \"signature.Transform.UnknownTransform\"(652) to \"algorithm.alreadyRegistered\"", "Insert SimpleType: Document(562) into MethodRefParameter(563) at 0", "Insert SimpleType: String(565) into MethodRefParameter(566) at 0", "Insert MethodInvocation(901) into Assignment: =(902) at 1", "Insert SimpleName: InstantiationException(905) into SimpleType: InstantiationException(906) at 0", "Insert SimpleType: Object(910) into VariableDeclarationStatement(916) at 0", "Insert VariableDeclarationFragment(915) into VariableDeclarationStatement(916) at 1", "Insert ClassInstanceCreation(922) into ThrowStatement(923) at 0", "Insert SimpleName: IllegalAccessException(926) into SimpleType: IllegalAccessException(927) at 0", "Insert SimpleType: Object(931) into VariableDeclarationStatement(937) at 0", "Insert VariableDeclarationFragment(936) into VariableDeclarationStatement(937) at 1", "Insert ClassInstanceCreation(943) into ThrowStatement(944) at 0", "Insert SimpleName: exArgs(407) into VariableDeclarationFragment(411) at 0", "Insert Dimension(408) into VariableDeclarationFragment(411) at 1", "Insert ArrayInitializer(410) into VariableDeclarationFragment(411) at 2", "Insert SimpleType: InvalidTransformException(414) into ClassInstanceCreation(418) at 0", "Insert StringLiteral: \"signature.Transform.UnknownTransform\"(415) into ClassInstanceCreation(418) at 1", "Insert SimpleName: exArgs(416) into ClassInstanceCreation(418) at 2", "Move SimpleName: ex(654) into ClassInstanceCreation(418) at 3", "Insert SimpleName: transformSpi(514) into ArrayInitializer(515) at 1", "Update SimpleName: InvalidTransformException(650) to AlgorithmAlreadyRegisteredException", "Update SimpleName: XMLSignatureInput(745) to Document", "Move SimpleName: XMLSignatureInput(745) into SimpleType: Document(562) at 0", "Insert SimpleName: String(564) into SimpleType: String(565) at 0", "Insert SimpleName: algorithmURI(618) into ArrayInitializer(620) at 0", "Insert SimpleName: transformSpi(619) into ArrayInitializer(620) at 1", "Insert SimpleName: transformSpiClass(899) into MethodInvocation(901) at 0", "Insert SimpleName: newInstance(900) into MethodInvocation(901) at 1", "Insert SimpleName: Object(909) into SimpleType: Object(910) at 0", "Insert SimpleName: exArgs(911) into VariableDeclarationFragment(915) at 0", "Insert Dimension(912) into VariableDeclarationFragment(915) at 1", "Insert ArrayInitializer(914) into VariableDeclarationFragment(915) at 2", "Insert SimpleType: InvalidTransformException(918) into ClassInstanceCreation(922) at 0", "Insert StringLiteral: \"signature.Transform.UnknownTransform\"(919) into ClassInstanceCreation(922) at 1", "Insert SimpleName: exArgs(920) into ClassInstanceCreation(922) at 2", "Insert SimpleName: ex(921) into ClassInstanceCreation(922) at 3", "Insert SimpleName: Object(930) into SimpleType: Object(931) at 0", "Insert SimpleName: exArgs(932) into VariableDeclarationFragment(936) at 0", "Insert Dimension(933) into VariableDeclarationFragment(936) at 1", "Insert ArrayInitializer(935) into VariableDeclarationFragment(936) at 2", "Insert SimpleType: InvalidTransformException(939) into ClassInstanceCreation(943) at 0", "Insert StringLiteral: \"signature.Transform.UnknownTransform\"(940) into ClassInstanceCreation(943) at 1", "Insert SimpleName: exArgs(941) into ClassInstanceCreation(943) at 2", "Insert SimpleName: ex(942) into ClassInstanceCreation(943) at 3", "Insert SimpleName: algorithmURI(409) into ArrayInitializer(410) at 0", "Insert SimpleName: InvalidTransformException(413) into SimpleType: InvalidTransformException(414) at 0", "Insert SimpleName: algorithmURI(913) into ArrayInitializer(914) at 0", "Insert SimpleName: InvalidTransformException(917) into SimpleType: InvalidTransformException(918) at 0", "Insert SimpleName: algorithmURI(934) into ArrayInitializer(935) at 0", "Insert SimpleName: InvalidTransformException(938) into SimpleType: InvalidTransformException(939) at 0", "Delete Modifier: static(366)", "Delete SimpleName: Transform(367)", "Delete SimpleType: Transform(368)", "Delete SimpleName: getInstance(369)", "Delete SimpleName: getInstance(380)", "Delete SimpleName: doc(381)", "Delete SimpleName: algorithmURI(382)", "Delete MethodInvocation(387)", "Delete ReturnStatement(388)", "Delete Modifier: static(416)", "Delete SimpleName: Transform(417)", "Delete SimpleType: Transform(418)", "Delete SimpleName: getInstance(419)", "Delete MethodInvocation(472)", "Delete ReturnStatement(473)", "Delete TextElement: Generates a Transform object that implements the specified (476)", "Delete TextElement: <code>Transform algorithm</code> URI.(477)", "Delete TagElement(478)", "Delete SimpleName: algorithmURI(479)", "Delete TextElement:  <code>Transform algorithm</code> URI form, such as (480)", "Delete TextElement: specified in <a href=http://www.w3.org/TR/xmldsig-core/#sec-TransformAlg>(481)", "Delete TextElement: Transform algorithm </a>(482)", "Delete TagElement: @param(483)", "Delete SimpleName: contextNodes(484)", "Delete TextElement:  the child node list of <code>Transform</code> element(485)", "Delete TagElement: @param(486)", "Delete SimpleName: doc(487)", "Delete TextElement:  the proxy (488)", "Delete SimpleName: Document(489)", "Delete TagElement: @link(490)", "Delete TagElement: @param(491)", "Delete TextElement:  <code>(492)", "Delete SimpleName: Transform(493)", "Delete TagElement: @link(494)", "Delete TextElement: </code> object(495)", "Delete TagElement: @return(496)", "Delete SimpleName: InvalidTransformException(497)", "Delete TagElement: @throws(498)", "Delete Javadoc(499)", "Delete Modifier: static(501)", "Delete SimpleName: Transform(502)", "Delete SimpleType: Transform(503)", "Delete SimpleName: getInstance(504)", "Delete SimpleName: Transform(519)", "Delete SimpleType: Transform(520)", "Delete SimpleName: doc(521)", "Delete SimpleName: algorithmURI(522)", "Delete SimpleName: contextNodes(523)", "Delete ClassInstanceCreation(524)", "Delete ReturnStatement(525)", "Delete VariableDeclarationStatement(584)", "Delete ParenthesizedExpression(588)", "Delete SimpleName: exArgs(591)", "Delete Dimension(592)", "Delete SimpleName: algorithmURI(593)", "Delete SimpleName: transformSpi(594)", "Delete SimpleName: getClass(595)", "Delete MethodInvocation(596)", "Delete ArrayInitializer(597)", "Delete VariableDeclarationFragment(598)", "Delete VariableDeclarationStatement(599)", "Delete Block(606)", "Delete IfStatement(607)", "Delete MethodInvocation(635)", "Delete ExpressionStatement(636)", "Delete Block(637)", "Delete TryStatement(680)", "Delete SimpleName: Object(788)", "Delete SimpleType: Object(789)", "Delete ThisExpression(792)", "Delete SimpleName: getURI(793)", "Delete MethodInvocation(794)", "Delete StringLiteral: \"SAXException\"(795)", "Delete SimpleName: result(809)", "Delete Modifier: public(729)", "Delete SimpleName: performTransform(732)", "Delete SimpleType: XMLSignatureInput(746)", "Delete SimpleName: result(747)", "Delete NullLiteral(748)", "Delete VariableDeclarationFragment(749)", "Delete VariableDeclarationStatement(750)", "Delete SimpleName: result(751)", "Delete SimpleName: transformSpi(752)", "Delete SimpleName: enginePerformTransform(753)", "Delete SimpleName: input(754)", "Delete ThisExpression(755)", "Delete MethodInvocation(756)", "Delete Assignment: =(757)", "Delete ExpressionStatement(758)", "Delete Block(759)", "Delete SimpleType: ParserConfigurationException(761)", "Delete SingleVariableDeclaration(763)", "Delete SimpleName: exArgs(766)", "Delete Dimension(767)", "Delete ThisExpression(768)", "Delete SimpleName: getURI(769)", "Delete MethodInvocation(770)", "Delete StringLiteral: \"ParserConfigurationException\"(771)", "Delete ArrayInitializer(772)", "Delete VariableDeclarationFragment(773)", "Delete VariableDeclarationStatement(774)", "Delete SimpleType: CanonicalizationException(776)", "Delete StringLiteral: \"signature.Transform.ErrorDuringTransform\"(777)", "Delete SimpleName: exArgs(778)", "Delete SimpleName: ex(779)", "Delete ClassInstanceCreation(780)", "Delete ThrowStatement(781)", "Delete Block(782)", "Delete CatchClause(783)", "Delete SimpleType: SAXException(785)", "Delete SimpleName: ex(786)", "Delete SingleVariableDeclaration(787)", "Delete SimpleName: CanonicalizationException(799)", "Delete SimpleType: CanonicalizationException(800)", "Delete StringLiteral: \"signature.Transform.ErrorDuringTransform\"(801)", "Delete SimpleName: exArgs(802)", "Delete SimpleName: ex(803)", "Delete ClassInstanceCreation(804)", "Delete ThrowStatement(805)", "Delete Block(806)", "Delete CatchClause(807)", "Delete TryStatement(808)", "Delete Block(811)", "Delete MethodDeclaration(812)"]}}, {"TransformParam_cluster": {"actions": [{"root": "DEL Javadoc", "operations": ["DEL TagElement: @author", "DEL Javadoc", "DEL TextElement:  $Author$"]}]}}, {"TransformParam_diff": {"operations": ["Delete TextElement:  $Author$(2)", "Delete TagElement: @author(3)", "Delete Javadoc(4)"]}}, {"TransformSpi_cluster": {"actions": [{"root": "INS Block to MethodDeclaration at 12", "operations": ["INS Block to MethodDeclaration at 12"]}, {"root": "MOVE from Block", "operations": ["MOV ThrowStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS SimpleName: enginePerformTransform to MethodInvocation at 0", "INS NullLiteral to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: input to MethodInvocation at 1"]}, {"root": "UPDATE from _transformObject to transformObject", "operations": ["UPD SimpleName: _transformObject from _transformObject to transformObject"]}, {"root": "UPDATE from  the Transform to  the Transform object", "operations": ["UPD TextElement:  the Transform from  the Transform to  the Transform object", "UPD TextElement:  the Transform from  the Transform to  the Transform object"]}, {"root": "INS NullLiteral to MethodInvocation at 3", "operations": ["INS NullLiteral to MethodInvocation at 3"]}, {"root": "INS SimpleName: transformObject to MethodInvocation at 4", "operations": ["INS SimpleName: transformObject to MethodInvocation at 4"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL TagElement: @deprecated", "DEL SimpleType: Transform", "DEL NullLiteral", "DEL SimpleName: transformObject", "DEL TextElement: For API compatibility not thread safe.", "DEL Javadoc", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL TagElement", "DEL Modifier: protected", "DEL SimpleName: Transform"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: protected", "DEL ExpressionStatement", "DEL FieldAccess", "DEL Block", "DEL ThisExpression", "DEL TagElement: @deprecated", "DEL SimpleName: setTransform", "DEL SimpleName: transform", "DEL TextElement: Set the transform object. ", "DEL SimpleName: transform", "DEL TextElement: Deprecated For API compatibility.", "DEL PrimitiveType: void", "DEL SingleVariableDeclaration", "DEL SimpleType: Transform", "DEL TextElement:  the Transform", "DEL Assignment: =", "DEL SimpleName: transform", "DEL Javadoc", "DEL MethodDeclaration", "DEL SimpleName: transformObject", "DEL TagElement", "DEL SimpleName: Transform", "DEL TagElement: @param"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: transformObject", "DEL SimpleName: enginePerformTransform", "DEL SimpleName: input", "DEL ReturnStatement"]}, {"root": "DEL SimpleName: tmp", "operations": ["DEL SimpleName: tmp"]}, {"root": "DEL Block", "operations": ["DEL VariableDeclarationFragment", "DEL CatchClause", "DEL SimpleName: newInstance", "DEL SingleVariableDeclaration", "DEL SimpleName: TransformationException", "DEL Block", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleName: e", "DEL Block", "DEL Block", "DEL SimpleName: e", "DEL VariableDeclarationStatement", "DEL SimpleType: TransformSpi", "DEL Block", "DEL ClassInstanceCreation", "DEL SimpleName: TransformationException", "DEL StringLiteral: \"\"", "DEL SimpleType: TransformSpi", "DEL SimpleName: InstantiationException", "DEL SimpleName: TransformSpi", "DEL ThrowStatement", "DEL TryStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: TransformSpi", "DEL CastExpression", "DEL SingleVariableDeclaration", "DEL SimpleName: getClass", "DEL CatchClause", "DEL StringLiteral: \"\"", "DEL SimpleType: TransformationException", "DEL SimpleName: transformObject", "DEL SimpleName: tmp", "DEL ThrowStatement", "DEL SimpleName: IllegalAccessException", "DEL SimpleType: TransformationException", "DEL SimpleName: setTransform", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL SimpleName: tmp", "DEL SimpleType: IllegalAccessException", "DEL SimpleType: InstantiationException", "DEL SimpleName: e"]}, {"root": "DEL TagElement: @deprecated", "operations": ["DEL TagElement: @deprecated"]}]}}, {"TransformSpi_diff": {"operations": ["Insert Block(164) into MethodDeclaration(165) at 12", "Move ThrowStatement(293) into Block(99) at 0", "Move ReturnStatement(214) into Block(164) at 0", "Insert ReturnStatement(216) into Block(217) at 0", "Update SimpleName: _transformObject(80) to transformObject", "Update TextElement:  the Transform(81) to  the Transform object", "Update TextElement:  the Transform(149) to  the Transform object", "Insert MethodInvocation(215) into ReturnStatement(216) at 0", "Insert NullLiteral(160) into MethodInvocation(162) at 2", "Insert SimpleName: transformObject(161) into MethodInvocation(162) at 3", "Insert SimpleName: enginePerformTransform(212) into MethodInvocation(215) at 0", "Insert SimpleName: input(213) into MethodInvocation(215) at 1", "Insert NullLiteral(214) into MethodInvocation(215) at 2", "Delete TextElement: For API compatibility not thread safe.(35)", "Delete TagElement(36)", "Delete TagElement: @deprecated(37)", "Delete Javadoc(38)", "Delete Modifier: protected(39)", "Delete SimpleName: Transform(40)", "Delete SimpleType: Transform(41)", "Delete SimpleName: transformObject(42)", "Delete NullLiteral(43)", "Delete VariableDeclarationFragment(44)", "Delete FieldDeclaration(45)", "Delete TextElement: Set the transform object. (46)", "Delete TextElement: Deprecated For API compatibility.(47)", "Delete TagElement(48)", "Delete SimpleName: transform(49)", "Delete TextElement:  the Transform(50)", "Delete TagElement: @param(51)", "Delete TagElement: @deprecated(52)", "Delete Javadoc(53)", "Delete Modifier: protected(54)", "Delete PrimitiveType: void(55)", "Delete SimpleName: setTransform(56)", "Delete SimpleName: Transform(57)", "Delete SimpleType: Transform(58)", "Delete SimpleName: transform(59)", "Delete SingleVariableDeclaration(60)", "Delete ThisExpression(61)", "Delete SimpleName: transformObject(62)", "Delete FieldAccess(63)", "Delete SimpleName: transform(64)", "Delete Assignment: =(65)", "Delete ExpressionStatement(66)", "Delete Block(67)", "Delete MethodDeclaration(68)", "Delete SimpleName: enginePerformTransform(129)", "Delete SimpleName: input(130)", "Delete SimpleName: transformObject(131)", "Delete MethodInvocation(132)", "Delete ReturnStatement(133)", "Delete SimpleName: tmp(210)", "Delete SimpleName: TransformSpi(193)", "Delete SimpleType: TransformSpi(194)", "Delete SimpleName: tmp(195)", "Delete SimpleName: TransformSpi(196)", "Delete SimpleType: TransformSpi(197)", "Delete SimpleName: getClass(198)", "Delete MethodInvocation(199)", "Delete SimpleName: newInstance(200)", "Delete MethodInvocation(201)", "Delete CastExpression(202)", "Delete VariableDeclarationFragment(203)", "Delete VariableDeclarationStatement(204)", "Delete SimpleName: tmp(205)", "Delete SimpleName: setTransform(206)", "Delete SimpleName: transformObject(207)", "Delete MethodInvocation(208)", "Delete ExpressionStatement(209)", "Delete Block(215)", "Delete SimpleName: InstantiationException(216)", "Delete SimpleType: InstantiationException(217)", "Delete SimpleName: e(218)", "Delete SingleVariableDeclaration(219)", "Delete SimpleName: TransformationException(220)", "Delete SimpleType: TransformationException(221)", "Delete StringLiteral: \"\"(222)", "Delete SimpleName: e(223)", "Delete ClassInstanceCreation(224)", "Delete ThrowStatement(225)", "Delete Block(226)", "Delete CatchClause(227)", "Delete SimpleName: IllegalAccessException(228)", "Delete SimpleType: IllegalAccessException(229)", "Delete SimpleName: e(230)", "Delete SingleVariableDeclaration(231)", "Delete SimpleName: TransformationException(232)", "Delete SimpleType: TransformationException(233)", "Delete StringLiteral: \"\"(234)", "Delete SimpleName: e(235)", "Delete ClassInstanceCreation(236)", "Delete ThrowStatement(237)", "Delete Block(238)", "Delete CatchClause(239)", "Delete TryStatement(240)", "Delete Block(241)", "Delete TagElement: @deprecated(245)"]}}, {"Transforms_cluster": {"actions": [{"root": "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "operations": ["INS SimpleType: Transform to ClassInstanceCreation at 0", "INS SimpleName: Transform to SimpleType: Transform at 0", "INS SimpleName: transformURI to ClassInstanceCreation at 2", "INS ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "operations": ["INS SimpleType: Transform to ClassInstanceCreation at 0", "INS SimpleName: contextElement to ClassInstanceCreation at 3", "INS SimpleName: Transform to SimpleType: Transform at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: transformURI to ClassInstanceCreation at 2"]}, {"root": "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "operations": ["INS SimpleType: Transform to ClassInstanceCreation at 0", "INS SimpleName: contextNodes to ClassInstanceCreation at 3", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: Transform to SimpleType: Transform at 0", "INS SimpleName: transformURI to ClassInstanceCreation at 2"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV FieldAccess to ClassInstanceCreation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV FieldAccess to ClassInstanceCreation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV FieldAccess to ClassInstanceCreation at 1"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: transformURI", "DEL SimpleName: getInstance", "DEL MethodInvocation", "DEL SimpleName: Transform"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: transformURI", "DEL SimpleName: Transform", "DEL SimpleName: contextElement", "DEL MethodInvocation", "DEL SimpleName: getInstance"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: transformURI", "DEL MethodInvocation", "DEL SimpleName: Transform", "DEL SimpleName: getInstance", "DEL SimpleName: contextNodes"]}]}}, {"Transforms_diff": {"operations": ["Insert ClassInstanceCreation(404) into VariableDeclarationFragment(405) at 1", "Insert ClassInstanceCreation(492) into VariableDeclarationFragment(493) at 1", "Insert ClassInstanceCreation(567) into VariableDeclarationFragment(568) at 1", "Insert SimpleType: Transform(399) into ClassInstanceCreation(404) at 0", "Move FieldAccess(402) into ClassInstanceCreation(404) at 1", "Insert SimpleName: transformURI(403) into ClassInstanceCreation(404) at 2", "Insert SimpleType: Transform(486) into ClassInstanceCreation(492) at 0", "Move FieldAccess(489) into ClassInstanceCreation(492) at 1", "Insert SimpleName: transformURI(490) into ClassInstanceCreation(492) at 2", "Insert SimpleName: contextElement(491) into ClassInstanceCreation(492) at 3", "Insert SimpleType: Transform(561) into ClassInstanceCreation(567) at 0", "Move FieldAccess(564) into ClassInstanceCreation(567) at 1", "Insert SimpleName: transformURI(565) into ClassInstanceCreation(567) at 2", "Insert SimpleName: contextNodes(566) into ClassInstanceCreation(567) at 3", "Insert SimpleName: Transform(398) into SimpleType: Transform(399) at 0", "Insert SimpleName: Transform(485) into SimpleType: Transform(486) at 0", "Insert SimpleName: Transform(560) into SimpleType: Transform(561) at 0", "Delete SimpleName: Transform(398)", "Delete SimpleName: getInstance(399)", "Delete SimpleName: transformURI(403)", "Delete MethodInvocation(404)", "Delete SimpleName: Transform(485)", "Delete SimpleName: getInstance(486)", "Delete SimpleName: transformURI(490)", "Delete SimpleName: contextElement(491)", "Delete MethodInvocation(492)", "Delete SimpleName: Transform(560)", "Delete SimpleName: getInstance(561)", "Delete SimpleName: transformURI(565)", "Delete SimpleName: contextNodes(566)", "Delete MethodInvocation(567)"]}}, {"KeyResolverSpi_cluster": {"actions": [{"root": "UPDATE from _properties to properties", "operations": ["UPD SimpleName: _properties from _properties to properties", "UPD SimpleName: _properties from _properties to properties", "UPD SimpleName: _properties from _properties to properties", "UPD SimpleName: _properties from _properties to properties", "UPD SimpleName: _properties from _properties to properties"]}, {"root": "UPDATE from Field _properties  to Field properties ", "operations": ["UPD TextElement: Field _properties  from Field _properties  to Field properties "]}, {"root": "INS SimpleName: properties to MethodInvocation at 0", "operations": ["INS SimpleName: properties to MethodInvocation at 0"]}, {"root": "INS SimpleName: properties to MethodInvocation at 0", "operations": ["INS SimpleName: properties to MethodInvocation at 0"]}, {"root": "INS SimpleName: properties to MethodInvocation at 0", "operations": ["INS SimpleName: properties to MethodInvocation at 0"]}, {"root": "DEL FieldAccess", "operations": ["DEL ThisExpression", "DEL FieldAccess", "DEL SimpleName: _properties"]}, {"root": "DEL FieldAccess", "operations": ["DEL SimpleName: _properties", "DEL FieldAccess", "DEL ThisExpression"]}, {"root": "DEL FieldAccess", "operations": ["DEL FieldAccess", "DEL ThisExpression", "DEL SimpleName: _properties"]}]}}, {"KeyResolverSpi_diff": {"operations": ["Update SimpleName: _properties(39) to properties", "Update TextElement: Field _properties (28) to Field properties ", "Update SimpleName: _properties(473) to properties", "Insert SimpleName: properties(489) into MethodInvocation(493) at 0", "Update SimpleName: _properties(514) to properties", "Update SimpleName: _properties(547) to properties", "Insert SimpleName: properties(521) into MethodInvocation(524) at 0", "Insert SimpleName: properties(550) into MethodInvocation(553) at 0", "Update SimpleName: _properties(476) to properties", "Delete ThisExpression(489)", "Delete SimpleName: _properties(490)", "Delete FieldAccess(491)", "Delete ThisExpression(523)", "Delete SimpleName: _properties(524)", "Delete FieldAccess(525)", "Delete ThisExpression(554)", "Delete SimpleName: _properties(555)", "Delete FieldAccess(556)"]}}, {"StorageResolver_cluster": {"actions": [{"root": "INS Modifier: private to FieldDeclaration at 1", "operations": ["INS Modifier: private to FieldDeclaration at 1"]}]}}, {"StorageResolver_diff": {"operations": ["Insert Modifier: private(46) into FieldDeclaration(55) at 1"]}}, {"StorageResolverException_cluster": {"actions": [{"root": "DEL Javadoc", "operations": ["DEL TextElement:  $Author$", "DEL Javadoc", "DEL TagElement: @author"]}]}}, {"StorageResolverException_diff": {"operations": ["Delete TextElement:  $Author$(4)", "Delete TagElement: @author(5)", "Delete Javadoc(6)"]}}, {"TransformC14N_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL MethodInvocation", "DEL SimpleName: input", "DEL SingleVariableDeclaration", "DEL TextElement:  ", "DEL SimpleName: enginePerformTransform", "DEL SimpleName: XMLSignatureInput", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL SimpleType: CanonicalizationException", "DEL TagElement: @inheritDoc", "DEL SimpleName: enginePerformTransform", "DEL SimpleType: Transform", "DEL MethodDeclaration", "DEL NullLiteral", "DEL SimpleType: XMLSignatureInput", "DEL SimpleName: CanonicalizationException", "DEL SimpleName: XMLSignatureInput", "DEL SimpleName: transformObject", "DEL SimpleName: input", "DEL SimpleType: XMLSignatureInput", "DEL SimpleName: Transform", "DEL SimpleName: transformObject", "DEL Block", "DEL Modifier: protected", "DEL ReturnStatement"]}]}}, {"TransformC14N_diff": {"operations": ["Delete TextElement:  (49)", "Delete TagElement: @inheritDoc(50)", "Delete Javadoc(51)", "Delete Modifier: protected(52)", "Delete SimpleName: XMLSignatureInput(53)", "Delete SimpleType: XMLSignatureInput(54)", "Delete SimpleName: enginePerformTransform(55)", "Delete SimpleName: XMLSignatureInput(56)", "Delete SimpleType: XMLSignatureInput(57)", "Delete SimpleName: input(58)", "Delete SingleVariableDeclaration(59)", "Delete SimpleName: Transform(60)", "Delete SimpleType: Transform(61)", "Delete SimpleName: transformObject(62)", "Delete SingleVariableDeclaration(63)", "Delete SimpleName: CanonicalizationException(64)", "Delete SimpleType: CanonicalizationException(65)", "Delete SimpleName: enginePerformTransform(66)", "Delete SimpleName: input(67)", "Delete NullLiteral(68)", "Delete SimpleName: transformObject(69)", "Delete MethodInvocation(70)", "Delete ReturnStatement(71)", "Delete Block(72)", "Delete MethodDeclaration(73)"]}}, {"TransformC14N11_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: XMLSignatureInput", "DEL Modifier: protected", "DEL SimpleName: enginePerformTransform", "DEL SimpleName: transform", "DEL SimpleType: XMLSignatureInput", "DEL SimpleName: transform", "DEL Block", "DEL SingleVariableDeclaration", "DEL NullLiteral", "DEL SingleVariableDeclaration", "DEL SimpleName: CanonicalizationException", "DEL SimpleName: XMLSignatureInput", "DEL MethodDeclaration", "DEL SimpleType: Transform", "DEL SimpleName: enginePerformTransform", "DEL MethodInvocation", "DEL SimpleName: XMLSignatureInput", "DEL SimpleName: input", "DEL SimpleName: Transform", "DEL ReturnStatement", "DEL SimpleName: input", "DEL SimpleType: CanonicalizationException"]}]}}, {"TransformC14N11_diff": {"operations": ["Delete Modifier: protected(34)", "Delete SimpleName: XMLSignatureInput(35)", "Delete SimpleType: XMLSignatureInput(36)", "Delete SimpleName: enginePerformTransform(37)", "Delete SimpleName: XMLSignatureInput(38)", "Delete SimpleType: XMLSignatureInput(39)", "Delete SimpleName: input(40)", "Delete SingleVariableDeclaration(41)", "Delete SimpleName: Transform(42)", "Delete SimpleType: Transform(43)", "Delete SimpleName: transform(44)", "Delete SingleVariableDeclaration(45)", "Delete SimpleName: CanonicalizationException(46)", "Delete SimpleType: CanonicalizationException(47)", "Delete SimpleName: enginePerformTransform(48)", "Delete SimpleName: input(49)", "Delete NullLiteral(50)", "Delete SimpleName: transform(51)", "Delete MethodInvocation(52)", "Delete ReturnStatement(53)", "Delete Block(54)", "Delete MethodDeclaration(55)"]}}, {"TransformC14N11_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: XMLSignatureInput", "DEL Modifier: protected", "DEL SimpleName: enginePerformTransform", "DEL SimpleName: transform", "DEL SimpleType: XMLSignatureInput", "DEL SimpleName: transform", "DEL Block", "DEL SingleVariableDeclaration", "DEL NullLiteral", "DEL SingleVariableDeclaration", "DEL SimpleName: CanonicalizationException", "DEL SimpleName: XMLSignatureInput", "DEL MethodDeclaration", "DEL SimpleType: Transform", "DEL SimpleName: enginePerformTransform", "DEL MethodInvocation", "DEL SimpleName: XMLSignatureInput", "DEL SimpleName: input", "DEL SimpleName: Transform", "DEL ReturnStatement", "DEL SimpleName: input", "DEL SimpleType: CanonicalizationException"]}]}}, {"TransformC14N11_diff": {"operations": ["Delete Modifier: protected(34)", "Delete SimpleName: XMLSignatureInput(35)", "Delete SimpleType: XMLSignatureInput(36)", "Delete SimpleName: enginePerformTransform(37)", "Delete SimpleName: XMLSignatureInput(38)", "Delete SimpleType: XMLSignatureInput(39)", "Delete SimpleName: input(40)", "Delete SingleVariableDeclaration(41)", "Delete SimpleName: Transform(42)", "Delete SimpleType: Transform(43)", "Delete SimpleName: transform(44)", "Delete SingleVariableDeclaration(45)", "Delete SimpleName: CanonicalizationException(46)", "Delete SimpleType: CanonicalizationException(47)", "Delete SimpleName: enginePerformTransform(48)", "Delete SimpleName: input(49)", "Delete NullLiteral(50)", "Delete SimpleName: transform(51)", "Delete MethodInvocation(52)", "Delete ReturnStatement(53)", "Delete Block(54)", "Delete MethodDeclaration(55)"]}}, {"TransformC14NExclusive_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL SimpleType: XMLSignatureInput", "DEL SimpleName: transformObject", "DEL SingleVariableDeclaration", "DEL NullLiteral", "DEL TextElement:  the transformed of the input", "DEL SimpleName: XMLSignatureInput", "DEL SimpleName: input", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: enginePerformTransform", "DEL TextElement: Method enginePerformTransform", "DEL SimpleType: CanonicalizationException", "DEL TagElement", "DEL TagElement: @throws", "DEL SimpleName: CanonicalizationException", "DEL SimpleName: input", "DEL SimpleName: input", "DEL Modifier: protected", "DEL SimpleType: Transform", "DEL SimpleName: Transform", "DEL SimpleName: XMLSignatureInput", "DEL SimpleName: CanonicalizationException", "DEL SimpleName: transformObject", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL TagElement: @return", "DEL TagElement: @param", "DEL SimpleName: enginePerformTransform", "DEL SimpleType: XMLSignatureInput"]}]}}, {"TransformC14NExclusive_diff": {"operations": ["Delete TextElement: Method enginePerformTransform(56)", "Delete TagElement(57)", "Delete SimpleName: input(58)", "Delete TagElement: @param(59)", "Delete TextElement:  the transformed of the input(60)", "Delete TagElement: @return(61)", "Delete SimpleName: CanonicalizationException(62)", "Delete TagElement: @throws(63)", "Delete Javadoc(64)", "Delete Modifier: protected(65)", "Delete SimpleName: XMLSignatureInput(66)", "Delete SimpleType: XMLSignatureInput(67)", "Delete SimpleName: enginePerformTransform(68)", "Delete SimpleName: XMLSignatureInput(69)", "Delete SimpleType: XMLSignatureInput(70)", "Delete SimpleName: input(71)", "Delete SingleVariableDeclaration(72)", "Delete SimpleName: Transform(73)", "Delete SimpleType: Transform(74)", "Delete SimpleName: transformObject(75)", "Delete SingleVariableDeclaration(76)", "Delete SimpleName: CanonicalizationException(77)", "Delete SimpleType: CanonicalizationException(78)", "Delete SimpleName: enginePerformTransform(79)", "Delete SimpleName: input(80)", "Delete NullLiteral(81)", "Delete SimpleName: transformObject(82)", "Delete MethodInvocation(83)", "Delete ReturnStatement(84)", "Delete Block(85)", "Delete MethodDeclaration(86)"]}}, {"TransformC14NExclusiveWithComments_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: input", "DEL SimpleType: XMLSignatureInput", "DEL SimpleType: CanonicalizationException", "DEL MethodDeclaration", "DEL Modifier: protected", "DEL TagElement: @inheritDoc", "DEL SingleVariableDeclaration", "DEL SimpleName: XMLSignatureInput", "DEL SimpleName: CanonicalizationException", "DEL SimpleType: XMLSignatureInput", "DEL NullLiteral", "DEL SimpleName: XMLSignatureInput", "DEL SimpleName: enginePerformTransform", "DEL SimpleName: enginePerformTransform", "DEL ReturnStatement", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL SimpleType: Transform", "DEL SimpleName: transformObject", "DEL TextElement:  ", "DEL MethodInvocation", "DEL SimpleName: Transform", "DEL Block", "DEL SimpleName: transformObject", "DEL SimpleName: input"]}]}}, {"TransformC14NExclusiveWithComments_diff": {"operations": ["Delete TextElement:  (59)", "Delete TagElement: @inheritDoc(60)", "Delete Javadoc(61)", "Delete Modifier: protected(62)", "Delete SimpleName: XMLSignatureInput(63)", "Delete SimpleType: XMLSignatureInput(64)", "Delete SimpleName: enginePerformTransform(65)", "Delete SimpleName: XMLSignatureInput(66)", "Delete SimpleType: XMLSignatureInput(67)", "Delete SimpleName: input(68)", "Delete SingleVariableDeclaration(69)", "Delete SimpleName: Transform(70)", "Delete SimpleType: Transform(71)", "Delete SimpleName: transformObject(72)", "Delete SingleVariableDeclaration(73)", "Delete SimpleName: CanonicalizationException(74)", "Delete SimpleType: CanonicalizationException(75)", "Delete SimpleName: enginePerformTransform(76)", "Delete SimpleName: input(77)", "Delete NullLiteral(78)", "Delete SimpleName: transformObject(79)", "Delete MethodInvocation(80)", "Delete ReturnStatement(81)", "Delete Block(82)", "Delete MethodDeclaration(83)"]}}, {"TransformC14NWithComments_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: CanonicalizationException", "DEL SimpleName: enginePerformTransform", "DEL Modifier: protected", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL Javadoc", "DEL SimpleName: input", "DEL Block", "DEL SimpleType: Transform", "DEL SimpleName: Transform", "DEL TagElement: @inheritDoc", "DEL SingleVariableDeclaration", "DEL SimpleName: XMLSignatureInput", "DEL SimpleName: input", "DEL SingleVariableDeclaration", "DEL SimpleType: CanonicalizationException", "DEL TextElement:  ", "DEL ReturnStatement", "DEL SimpleType: XMLSignatureInput", "DEL SimpleName: transformObject", "DEL SimpleName: transformObject", "DEL SimpleType: XMLSignatureInput", "DEL NullLiteral", "DEL SimpleName: enginePerformTransform", "DEL SimpleName: XMLSignatureInput"]}]}}, {"TransformC14NWithComments_diff": {"operations": ["Delete TextElement:  (49)", "Delete TagElement: @inheritDoc(50)", "Delete Javadoc(51)", "Delete Modifier: protected(52)", "Delete SimpleName: XMLSignatureInput(53)", "Delete SimpleType: XMLSignatureInput(54)", "Delete SimpleName: enginePerformTransform(55)", "Delete SimpleName: XMLSignatureInput(56)", "Delete SimpleType: XMLSignatureInput(57)", "Delete SimpleName: input(58)", "Delete SingleVariableDeclaration(59)", "Delete SimpleName: Transform(60)", "Delete SimpleType: Transform(61)", "Delete SimpleName: transformObject(62)", "Delete SingleVariableDeclaration(63)", "Delete SimpleName: CanonicalizationException(64)", "Delete SimpleType: CanonicalizationException(65)", "Delete SimpleName: enginePerformTransform(66)", "Delete SimpleName: input(67)", "Delete NullLiteral(68)", "Delete SimpleName: transformObject(69)", "Delete MethodInvocation(70)", "Delete ReturnStatement(71)", "Delete Block(72)", "Delete MethodDeclaration(73)"]}}, {"TransformEnvelopedSignature_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.io.OutputStream to ImportDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: os to SingleVariableDeclaration at 1", "INS SimpleType: OutputStream to SingleVariableDeclaration at 0", "INS SimpleName: OutputStream to SimpleType: OutputStream at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}]}}, {"TransformEnvelopedSignature_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(273) at 1", "Insert QualifiedName: java.io.OutputStream(2) into ImportDeclaration(3) at 0", "Insert SingleVariableDeclaration(71) into MethodDeclaration(108) at 5", "Insert SimpleType: OutputStream(69) into SingleVariableDeclaration(71) at 0", "Insert SimpleName: os(70) into SingleVariableDeclaration(71) at 1", "Insert SimpleName: OutputStream(68) into SimpleType: OutputStream(69) at 0"]}}, {"TransformXPath_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.io.OutputStream to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleType: OutputStream to SingleVariableDeclaration at 0", "INS SimpleName: OutputStream to SimpleType: OutputStream at 0", "INS SimpleName: os to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}]}}, {"TransformXPath_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(423) at 1", "Insert QualifiedName: java.io.OutputStream(2) into ImportDeclaration(3) at 0", "Insert SingleVariableDeclaration(94) into MethodDeclaration(215) at 5", "Insert SimpleType: OutputStream(92) into SingleVariableDeclaration(94) at 0", "Insert SimpleName: os(93) into SingleVariableDeclaration(94) at 1", "Insert SimpleName: OutputStream(91) into SimpleType: OutputStream(92) at 0"]}}, {"TransformXPath2Filter_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 2"]}, {"root": "UPDATE from java.util.Iterator to java.io.OutputStream", "operations": ["UPD QualifiedName: java.util.Iterator from java.util.Iterator to java.io.OutputStream"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleType: OutputStream to SingleVariableDeclaration at 0", "INS SimpleName: os to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: OutputStream to SimpleType: OutputStream at 0"]}]}}, {"TransformXPath2Filter_diff": {"operations": [" * (editors copy)</a>(60) to TextElement:  <a HREF=\"http://www.w3.org/Signature/Drafts/xmldsig-xfilter2/\">XPath Filter v2.0 ", " * (editors copy)</a>(60)", "Move ImportDeclaration(9) into CompilationUnit(969) at 2", "Update QualifiedName: java.util.Iterator(8) to java.io.OutputStream", "Insert SingleVariableDeclaration(110) into MethodDeclaration(466) at 5", "Insert SimpleType: OutputStream(108) into SingleVariableDeclaration(110) at 0", "Insert SimpleName: os(109) into SingleVariableDeclaration(110) at 1", "Insert SimpleName: OutputStream(107) into SimpleType: OutputStream(108) at 0"]}}, {"TransformXPointer_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.io.OutputStream to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: os to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: OutputStream to SimpleType: OutputStream at 0", "INS SimpleType: OutputStream to SingleVariableDeclaration at 0"]}]}}, {"TransformXPointer_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(93) at 1", "Insert QualifiedName: java.io.OutputStream(2) into ImportDeclaration(3) at 0", "Insert SingleVariableDeclaration(69) into MethodDeclaration(91) at 5", "Insert SimpleType: OutputStream(67) into SingleVariableDeclaration(69) at 0", "Insert SimpleName: os(68) into SingleVariableDeclaration(69) at 1", "Insert SimpleName: OutputStream(66) into SimpleType: OutputStream(67) at 0"]}}, {"TransformXSLT_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: input", "DEL SingleVariableDeclaration", "DEL SimpleName: transformObject", "DEL SimpleName: enginePerformTransform", "DEL SimpleType: TransformationException", "DEL SimpleType: XMLSignatureInput", "DEL Block", "DEL TagElement: @param", "DEL SimpleName: input", "DEL TextElement:  the result of this Transform", "DEL TagElement", "DEL TagElement: @return", "DEL TagElement: @throws", "DEL SimpleName: TransformationException", "DEL SimpleName: Transform", "DEL SimpleName: XMLSignatureInput", "DEL SimpleName: XMLSignatureInput", "DEL SimpleType: Transform", "DEL SimpleType: XMLSignatureInput", "DEL SimpleType: IOException", "DEL SimpleName: IOException", "DEL Modifier: protected", "DEL Javadoc", "DEL TagElement: @throws", "DEL TextElement: Method enginePerformTransform", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL NullLiteral", "DEL SimpleName: input", "DEL SimpleName: IOException", "DEL SimpleName: TransformationException", "DEL SimpleName: enginePerformTransform", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL TextElement:  the input for this transform", "DEL SimpleName: transformObject"]}]}}, {"TransformXSLT_diff": {"operations": ["Delete TextElement: Method enginePerformTransform(114)", "Delete TagElement(115)", "Delete SimpleName: input(116)", "Delete TextElement:  the input for this transform(117)", "Delete TagElement: @param(118)", "Delete TextElement:  the result of this Transform(119)", "Delete TagElement: @return(120)", "Delete SimpleName: IOException(121)", "Delete TagElement: @throws(122)", "Delete SimpleName: TransformationException(123)", "Delete TagElement: @throws(124)", "Delete Javadoc(125)", "Delete Modifier: protected(126)", "Delete SimpleName: XMLSignatureInput(127)", "Delete SimpleType: XMLSignatureInput(128)", "Delete SimpleName: enginePerformTransform(129)", "Delete SimpleName: XMLSignatureInput(130)", "Delete SimpleType: XMLSignatureInput(131)", "Delete SimpleName: input(132)", "Delete SingleVariableDeclaration(133)", "Delete SimpleName: Transform(134)", "Delete SimpleType: Transform(135)", "Delete SimpleName: transformObject(136)", "Delete SingleVariableDeclaration(137)", "Delete SimpleName: IOException(138)", "Delete SimpleType: IOException(139)", "Delete SimpleName: TransformationException(140)", "Delete SimpleType: TransformationException(141)", "Delete SimpleName: enginePerformTransform(142)", "Delete SimpleName: input(143)", "Delete NullLiteral(144)", "Delete SimpleName: transformObject(145)", "Delete MethodInvocation(146)", "Delete ReturnStatement(147)", "Delete Block(148)", "Delete MethodDeclaration(149)"]}}, {"ApacheCanonicalizer_cluster": {"actions": [{"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: Transform to ClassInstanceCreation at 0", "INS SimpleName: ownerDoc to ClassInstanceCreation at 1", "INS SimpleName: Transform to SimpleType: Transform at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 2", "MOV MethodInvocation to ClassInstanceCreation at 3"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: ownerDoc", "DEL MethodInvocation", "DEL SimpleName: Transform", "DEL SimpleName: getInstance"]}]}}, {"ApacheCanonicalizer_diff": {"operations": ["Insert ClassInstanceCreation(622) into Assignment: =(623) at 1", "Insert SimpleType: Transform(615) into ClassInstanceCreation(622) at 0", "Insert SimpleName: ownerDoc(616) into ClassInstanceCreation(622) at 1", "Move MethodInvocation(618) into ClassInstanceCreation(622) at 2", "Move MethodInvocation(621) into ClassInstanceCreation(622) at 3", "Insert SimpleName: Transform(614) into SimpleType: Transform(615) at 0", "Delete SimpleName: Transform(614)", "Delete SimpleName: getInstance(615)", "Delete SimpleName: ownerDoc(616)", "Delete MethodInvocation(622)"]}}, {"ApacheTransform_cluster": {"actions": [{"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: Transform to ClassInstanceCreation at 0", "INS SimpleName: ownerDoc to ClassInstanceCreation at 1", "INS SimpleName: Transform to SimpleType: Transform at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 2", "MOV MethodInvocation to ClassInstanceCreation at 3"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getInstance", "DEL SimpleName: Transform", "DEL SimpleName: ownerDoc"]}]}}, {"ApacheTransform_diff": {"operations": ["Insert ClassInstanceCreation(319) into Assignment: =(320) at 1", "Insert SimpleType: Transform(312) into ClassInstanceCreation(319) at 0", "Insert SimpleName: ownerDoc(313) into ClassInstanceCreation(319) at 1", "Move MethodInvocation(315) into ClassInstanceCreation(319) at 2", "Move MethodInvocation(318) into ClassInstanceCreation(319) at 3", "Insert SimpleName: Transform(311) into SimpleType: Transform(312) at 0", "Delete SimpleName: Transform(311)", "Delete SimpleName: getInstance(312)", "Delete SimpleName: ownerDoc(313)", "Delete MethodInvocation(319)"]}}, {"RSAKeyValueResolver_cluster": {"actions": []}}, {"RSAKeyValueResolver_diff": {"operations": []}}, {"X509SKIResolver_cluster": {"actions": []}}, {"X509SKIResolver_diff": {"operations": []}}, {"X509SubjectNameResolver_cluster": {"actions": []}}, {"X509SubjectNameResolver_diff": {"operations": []}}, {"CertsInFilesystemDirectoryResolver_cluster": {"actions": [{"root": "INS Modifier: private to FieldDeclaration at 1", "operations": ["INS Modifier: private to FieldDeclaration at 1"]}]}}, {"CertsInFilesystemDirectoryResolver_diff": {"operations": ["Insert Modifier: private(72) into FieldDeclaration(78) at 1"]}}, {"KeyStoreResolver_cluster": {"actions": [{"root": "INS Modifier: private to FieldDeclaration at 1", "operations": ["INS Modifier: private to FieldDeclaration at 1"]}]}}, {"KeyStoreResolver_diff": {"operations": ["Insert Modifier: private(34) into FieldDeclaration(40) at 1"]}}, {"SingleCertificateResolver_cluster": {"actions": [{"root": "INS Modifier: private to FieldDeclaration at 1", "operations": ["INS Modifier: private to FieldDeclaration at 1"]}]}}, {"SingleCertificateResolver_diff": {"operations": ["Insert Modifier: private(31) into FieldDeclaration(37) at 1"]}}], "commit_stats": [{"total_files": 33, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}