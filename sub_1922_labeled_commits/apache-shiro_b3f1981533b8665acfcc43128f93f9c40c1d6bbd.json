{"application": "apache-shiro", "csha": "b3f1981533b8665acfcc43128f93f9c40c1d6bbd", "files": [{"AnnotationMethodInterceptor_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS TagElement to Javadoc at 0", "INS Modifier: private to FieldDeclaration at 1", "INS SimpleType: AnnotationResolver to FieldDeclaration at 2", "INS SimpleName: resolver to VariableDeclarationFragment at 0", "INS TextElement:  1.1 to TagElement: @since at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleName: AnnotationResolver to SimpleType: AnnotationResolver at 0", "INS TextElement: The resolver to use to find annotations on intercepted methods. to TagElement at 0", "INS Javadoc to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS TagElement: @since to Javadoc at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS ConditionalExpression to MethodInvocation at 1", "INS TextElement:   the handler to use to process any discovered annotation to TagElement: @param at 1", "INS SimpleName: setResolver to MethodInvocation at 0", "INS TextElement:  1.1 to TagElement: @since at 0", "INS SimpleType: DefaultAnnotationResolver to ClassInstanceCreation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: resolver to ConditionalExpression at 1", "INS TextElement:  to acquire annotations to TagElement at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: AnnotationMethodInterceptor to MethodDeclaration at 2", "INS TagElement: @link to TagElement at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleName: resolver to SingleVariableDeclaration at 1", "INS SimpleType: AnnotationResolver to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 2", "INS TextElement:  the resolver to use to locate/acquire the annotation to TagElement: @param at 1", "INS TextElement: corresponding type, using the specified  to TagElement at 3", "INS SimpleName: AnnotationHandler to TagElement: @link at 0", "INS TagElement: @code to TagElement at 4", "INS TextElement: at runtime. to TagElement at 6", "INS TagElement: @since to Javadoc at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TagElement: @param to Javadoc at 1", "INS TextElement:  AnnotationResolver to TagElement: @code at 0", "INS SimpleType: AnnotationHandler to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: handler to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS TextElement:  that will be used to process annotations of a to TagElement at 2", "INS TextElement: Constructs an <code>AnnotationMethodInterceptor</code> with the to TagElement at 0", "INS SimpleName: handler to TagElement: @param at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: DefaultAnnotationResolver to SimpleType: DefaultAnnotationResolver at 0", "INS SimpleName: AnnotationHandler to SimpleType: AnnotationHandler at 0", "INS TextElement:  AnnotationHandler to TagElement: @link at 1", "INS InfixExpression: != to ConditionalExpression at 0", "INS SimpleName: resolver to TagElement: @param at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: resolver to InfixExpression: != at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: AnnotationResolver to SimpleType: AnnotationResolver at 0", "INS ClassInstanceCreation to ConditionalExpression at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: getResolver to MethodDeclaration at 3", "INS SimpleName: resolver to ReturnStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: resolver to TagElement: @param at 0", "INS TextElement:  to use to acquire annotations from intercepted to TagElement: @param at 3", "INS MemberRef to TagElement: @link at 0", "INS SimpleName: resolver to SingleVariableDeclaration at 1", "INS SimpleName: resolver to Assignment: = at 1", "INS SimpleType: AnnotationResolver to SingleVariableDeclaration at 0", "INS TextElement:  to use to acquire annotations from intercepted to TagElement at 2", "INS SimpleName: resolver to FieldAccess at 1", "INS TextElement:  the  to TagElement: @param at 1", "INS SimpleName: getHandler to MemberRef at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @param to Javadoc at 1", "INS TextElement: perform authorization logic. to TagElement at 6", "INS TextElement:  handler to TagElement: @link at 1", "INS TextElement:  AnnotationResolver to TagElement: @code at 0", "INS TextElement: methods at runtime. to TagElement: @param at 4", "INS Assignment: = to ExpressionStatement at 0", "INS TagElement: @code to TagElement: @param at 2", "INS ExpressionStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS TextElement: Returns the  to TagElement at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @since to Javadoc at 2", "INS TextElement:  1.1 to TagElement: @since at 0", "INS TextElement: methods at runtime.  The annotation is then used by the  to TagElement at 3", "INS TextElement:  AnnotationResolver to TagElement: @code at 0", "INS SimpleName: setResolver to MethodDeclaration at 3", "INS ThisExpression to FieldAccess at 0", "INS Modifier: public to MethodDeclaration at 1", "INS TagElement: @code to TagElement at 1", "INS TagElement: @link to TagElement at 4", "INS TextElement:  to to TagElement at 5", "INS Block to MethodDeclaration at 5", "INS FieldAccess to Assignment: = at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS SimpleName: getAnnotation to MethodDeclaration at 3", "INS TextElement: The default implementation acquires the annotation using an annotation to TagElement at 2", "INS TextElement:  resolver to TagElement: @link at 1", "INS SimpleName: getResolver to MemberRef at 0", "INS TagElement: @link to TagElement at 5", "INS MemberRef to TagElement: @link at 0", "INS TextElement:  using the internal annotation  to TagElement at 4", "INS TextElement: Returns the Annotation that this interceptor will process for the specified method invocation. to TagElement at 0", "INS SimpleName: getHandler to MemberRef at 0", "INS TextElement: <p/> to TagElement at 1", "INS MemberRef to TagElement: @link at 0", "INS Block to MethodDeclaration at 5", "INS Javadoc to MethodDeclaration at 0", "INS Modifier: protected to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS TagElement: @link to TagElement at 3", "INS TextElement:  handler to TagElement: @link at 1", "INS TextElement: . to TagElement at 8", "INS TextElement: 's to TagElement at 6", "INS TagElement to Javadoc at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement:  used to perform authorization behavior based on to TagElement at 2", "INS TextElement: an annotation discovered at runtime. to TagElement at 3", "INS TextElement:  the  to TagElement: @return at 0", "INS TextElement:  AnnotationHandler to TagElement: @code at 0", "INS TextElement:  used to perform authorization behavior based on to TagElement: @return at 2", "INS TagElement: @code to TagElement at 1", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: an annotation discovered at runtime. to TagElement: @return at 3", "INS TextElement:  AnnotationHandler to TagElement: @code at 0", "INS TextElement: Returns the  to TagElement at 0", "INS TagElement: @code to TagElement: @return at 1", "INS TagElement: @return to Javadoc at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement: @code to TagElement at 1", "INS TextElement: an annotation discovered at runtime. to TagElement: @param at 4", "INS TagElement: @code to TagElement: @param at 2", "INS TextElement: an annotation discovered at runtime. to TagElement at 3", "INS TextElement:  used to perform authorization behavior based on to TagElement at 2", "INS TagElement to Javadoc at 0", "INS TagElement: @param to Javadoc at 1", "INS TextElement:  AnnotationHandler to TagElement: @code at 0", "INS Javadoc to MethodDeclaration at 0", "INS TextElement:  AnnotationHandler to TagElement: @code at 0", "INS TextElement:  used to perform authorization behavior based on to TagElement: @param at 3", "INS TextElement: Sets the  to TagElement at 0", "INS TextElement:  the  to TagElement: @param at 1", "INS SimpleName: handler to TagElement: @param at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleType: Annotation to MethodDeclaration at 2", "MOV Modifier: protected to MethodDeclaration at 1", "MOV SimpleType: IllegalArgumentException to MethodDeclaration at 2"]}, {"root": "UPDATE from protected to public", "operations": ["UPD Modifier: protected from protected to public"]}, {"root": "UPDATE from IllegalArgumentException to AnnotationResolver", "operations": ["UPD SimpleType: IllegalArgumentException from IllegalArgumentException to AnnotationResolver", "UPD SimpleName: IllegalArgumentException from IllegalArgumentException to AnnotationResolver", "UPD SimpleName: String from String to AnnotationResolver"]}, {"root": "INS TextElement: </p> to TagElement at 2", "operations": ["INS TextElement: </p> to TagElement at 2"]}, {"root": "INS TextElement: The annotation is acquired from the  to TagElement at 3", "operations": ["INS TextElement: The annotation is acquired from the  to TagElement at 3"]}, {"root": "INS TagElement: @link to TagElement at 4", "operations": ["INS TextElement:  MethodInvocation to TagElement: @link at 1", "INS TagElement: @link to TagElement at 4", "INS SimpleName: MethodInvocation to TagElement: @link at 0"]}, {"root": "INS TextElement:  via a to TagElement at 5", "operations": ["INS TextElement:  via a to TagElement at 5"]}, {"root": "INS TagElement: @link to TagElement at 6", "operations": ["INS TagElement: @link to TagElement at 6", "INS SimpleName: AnnotationResolver to TagElement: @link at 0", "INS TextElement:  AnnotationResolver to TagElement: @link at 1"]}, {"root": "INS TextElement:  instance that may be configured.  Unless to TagElement at 7", "operations": ["INS TextElement:  instance that may be configured.  Unless to TagElement at 7"]}, {"root": "INS TextElement: overridden, the default  to TagElement at 8", "operations": ["INS TextElement: overridden, the default  to TagElement at 8"]}, {"root": "INS TagElement: @code to TagElement at 9", "operations": ["INS TextElement:  AnnotationResolver to TagElement: @code at 0", "INS TagElement: @code to TagElement at 9"]}, {"root": "INS TextElement:  is a to TagElement at 10", "operations": ["INS TextElement:  is a to TagElement at 10"]}, {"root": "INS ConstructorInvocation to Block at 0", "operations": ["INS ConstructorInvocation to Block at 0", "INS SimpleName: DefaultAnnotationResolver to SimpleType: DefaultAnnotationResolver at 0", "INS SimpleName: handler to ConstructorInvocation at 0", "INS ClassInstanceCreation to ConstructorInvocation at 1", "INS SimpleType: DefaultAnnotationResolver to ClassInstanceCreation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0", "MOV IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "INS TagElement to Javadoc at 0", "operations": ["INS TextElement:  to use to acquire annotations from intercepted to TagElement at 2", "INS TagElement to Javadoc at 0", "INS TagElement: @code to TagElement at 1"]}, {"root": "INS TagElement: @return to Javadoc at 1", "operations": ["INS TagElement: @return to Javadoc at 1"]}, {"root": "UPDATE from @throws to @since", "operations": ["UPD TagElement: @throws from @throws to @since"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @return to Javadoc at 2", "MOV TagElement: @param to Javadoc at 1"]}, {"root": "UPDATE from  that will be used to process annotations of a corresponding to  that will be used to process annotations of a", "operations": ["UPD TextElement:  that will be used to process annotations of a corresponding from  that will be used to process annotations of a corresponding to  that will be used to process annotations of a"]}, {"root": "UPDATE from type. to corresponding type.", "operations": ["UPD TextElement: type. from type. to corresponding type."]}, {"root": "UPDATE from Returns the Annotation that this interceptor will process for the specified method invocation. to Returns the ", "operations": ["UPD TextElement: Returns the Annotation that this interceptor will process for the specified method invocation. from Returns the Annotation that this interceptor will process for the specified method invocation. to Returns the "]}, {"root": "MOVE from TagElement", "operations": ["MOV TextElement: Returns the Annotation that this interceptor will process for the specified method invocation. to TagElement at 0", "MOV TextElement: The default implementation merely gets the underlying  to TagElement at 3", "MOV TextElement: <p/> to TagElement: @return at 0", "MOV TextElement:  from the supplied to TagElement at 5", "MOV TextElement: ( to TagElement: @return at 2", "MOV TagElement: @link to TagElement: @return at 1", "MOV TextElement: );</code> to TagElement: @return at 3", "MOV TagElement: @link to TagElement at 4", "MOV TextElement: <code>MethodInvocation</code> argument, and returns: to TagElement at 6", "MOV TagElement: @link to TagElement at 7", "MOV TextElement: <p/> to TagElement: @code at 0"]}, {"root": "UPDATE from The default implementation merely gets the underlying  to methods at runtime.  The annotation is then used by the ", "operations": ["UPD TextElement: The default implementation merely gets the underlying  from The default implementation merely gets the underlying  to methods at runtime.  The annotation is then used by the "]}, {"root": "UPDATE from  from the supplied to  to", "operations": ["UPD TextElement:  from the supplied from  from the supplied to  to"]}, {"root": "UPDATE from <code>MethodInvocation</code> argument, and returns: to perform authorization logic.", "operations": ["UPD TextElement: <code>MethodInvocation</code> argument, and returns: from <code>MethodInvocation</code> argument, and returns: to perform authorization logic."]}, {"root": "UPDATE from <p/> to  the ", "operations": ["UPD TextElement: <p/> from <p/> to  the "]}, {"root": "UPDATE from @link to @code", "operations": ["UPD TagElement: @link from @link to @code"]}, {"root": "UPDATE from ( to  to use to acquire annotations from intercepted", "operations": ["UPD TextElement: ( from ( to  to use to acquire annotations from intercepted"]}, {"root": "UPDATE from );</code> to methods at runtime.", "operations": ["UPD TextElement: );</code> from );</code> to methods at runtime."]}, {"root": "UPDATE from  if the supplied <code>MethodInvocation</code> argument is <code>null</code> or to  1.1", "operations": ["UPD TextElement:  if the supplied <code>MethodInvocation</code> argument is <code>null</code> or from  if the supplied <code>MethodInvocation</code> argument is <code>null</code> or to  1.1"]}, {"root": "MOVE from SimpleType: AnnotationResolver", "operations": ["MOV SimpleName: String to SimpleType: AnnotationResolver at 0"]}, {"root": "UPDATE from mi to handler", "operations": ["UPD SimpleName: mi from mi to handler"]}, {"root": "UPDATE from <p/> to  AnnotationResolver", "operations": ["UPD TextElement: <p/> from <p/> to  AnnotationResolver", "UPD TextElement:  getAnnotation from  getAnnotation to  AnnotationResolver"]}, {"root": "INS MemberRef to TagElement: @link at 0", "operations": ["INS MemberRef to TagElement: @link at 0", "INS SimpleName: getHandler to MemberRef at 0"]}, {"root": "UPDATE from  Method to  handler", "operations": ["UPD TextElement:  Method from  Method to  handler"]}, {"root": "UPDATE from  handler.getAnnotationClass() to  annotationClass", "operations": ["UPD TextElement:  handler.getAnnotationClass() from  handler.getAnnotationClass() to  annotationClass"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS SimpleName: mi to MethodInvocation at 3", "operations": ["INS SimpleName: mi to MethodInvocation at 3"]}, {"root": "UPDATE from m to getResolver", "operations": ["UPD SimpleName: m from m to getResolver"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: m to MethodInvocation at 0"]}, {"root": "UPDATE from \"method argument cannot be null\" to \"AnnotationHandler argument cannot be null.\"", "operations": ["UPD StringLiteral: \"method argument cannot be null\" from \"method argument cannot be null\" to \"AnnotationHandler argument cannot be null.\""]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.lang.reflect.Method", "DEL ImportDeclaration"]}, {"root": "DEL SimpleName: Method", "operations": ["DEL SimpleName: Method"]}, {"root": "DEL MethodRef", "operations": ["DEL SimpleType: Class", "DEL SimpleName: Method", "DEL MethodRef", "DEL MethodRefParameter", "DEL SimpleName: getAnnotation", "DEL SimpleName: Class"]}, {"root": "DEL TagElement", "operations": ["DEL TagElement", "DEL TextElement: <code>mi."]}, {"root": "DEL SimpleName: IllegalArgumentException", "operations": ["DEL SimpleName: IllegalArgumentException"]}, {"root": "DEL TextElement: its underlying <code>Method</code> is <code>null</code>.", "operations": ["DEL TextElement: its underlying <code>Method</code> is <code>null</code>."]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TypeLiteral", "DEL InfixExpression: +", "DEL SimpleName: getName", "DEL SimpleType: String", "DEL SimpleName: getMethod", "DEL SimpleName: msg", "DEL SimpleName: Method", "DEL StringLiteral: \" parameter incorrectly constructed.  getMethod() returned null\"", "DEL SimpleName: m", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: msg", "DEL NullLiteral", "DEL SimpleType: IllegalArgumentException", "DEL SimpleType: MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: getAnnotation", "DEL SimpleType: Method", "DEL VariableDeclarationStatement", "DEL SimpleName: mi", "DEL IfStatement", "DEL SimpleName: IllegalArgumentException", "DEL InfixExpression: ==", "DEL VariableDeclarationFragment", "DEL SimpleName: MethodInvocation", "DEL Block", "DEL VariableDeclarationStatement", "DEL ThrowStatement", "DEL ClassInstanceCreation", "DEL MethodDeclaration", "DEL SimpleName: m"]}]}}, {"AnnotationMethodInterceptor_diff": {"operations": ["Insert FieldDeclaration(45) into TypeDeclaration: class(326) at 6", "Insert MethodDeclaration(126) into TypeDeclaration: class(326) at 8", "Insert MethodDeclaration(205) into TypeDeclaration: class(326) at 11", "Insert MethodDeclaration(242) into TypeDeclaration: class(326) at 12", "Insert MethodDeclaration(325) into TypeDeclaration: class(326) at 14", "Insert Javadoc(39) into FieldDeclaration(45) at 0", "Insert Modifier: private(40) into FieldDeclaration(45) at 1", "Insert SimpleType: AnnotationResolver(42) into FieldDeclaration(45) at 2", "Insert VariableDeclarationFragment(44) into FieldDeclaration(45) at 3", "Insert Javadoc(89) into MethodDeclaration(126) at 0", "Insert Modifier: public(90) into MethodDeclaration(126) at 1", "Insert SimpleName: AnnotationMethodInterceptor(91) into MethodDeclaration(126) at 2", "Insert SingleVariableDeclaration(95) into MethodDeclaration(126) at 3", "Insert SingleVariableDeclaration(99) into MethodDeclaration(126) at 4", "Insert Block(125) into MethodDeclaration(126) at 5", "Insert Javadoc(139) into MethodDeclaration(147) at 0", "Insert Javadoc(161) into MethodDeclaration(176) at 0", "Move Javadoc(141) into MethodDeclaration(205) at 0", "Update Modifier: protected(142) to public", "Move Modifier: protected(142) into MethodDeclaration(205) at 1", "Update SimpleType: IllegalArgumentException(151) to AnnotationResolver", "Move SimpleType: IllegalArgumentException(151) into MethodDeclaration(205) at 2", "Insert SimpleName: getResolver(201) into MethodDeclaration(205) at 3", "Insert Block(204) into MethodDeclaration(205) at 4", "Insert Javadoc(227) into MethodDeclaration(242) at 0", "Insert Modifier: public(228) into MethodDeclaration(242) at 1", "Insert PrimitiveType: void(229) into MethodDeclaration(242) at 2", "Insert SimpleName: setResolver(230) into MethodDeclaration(242) at 3", "Insert SingleVariableDeclaration(234) into MethodDeclaration(242) at 4", "Insert Block(241) into MethodDeclaration(242) at 5", "Insert Javadoc(305) into MethodDeclaration(325) at 0", "Insert Modifier: protected(306) into MethodDeclaration(325) at 1", "Move SimpleType: Annotation(144) into MethodDeclaration(325) at 2", "Insert SimpleName: getAnnotation(309) into MethodDeclaration(325) at 3", "Move SingleVariableDeclaration(149) into MethodDeclaration(325) at 4", "Insert Block(324) into MethodDeclaration(325) at 5", "Insert TextElement: </p>(6) into TagElement(20) at 2", "Insert TextElement: The annotation is acquired from the (7) into TagElement(20) at 3", "Insert TagElement: @link(10) into TagElement(20) at 4", "Insert TextElement:  via a(11) into TagElement(20) at 5", "Insert TagElement: @link(14) into TagElement(20) at 6", "Insert TextElement:  instance that may be configured.  Unless(15) into TagElement(20) at 7", "Insert TextElement: overridden, the default (16) into TagElement(20) at 8", "Insert TagElement: @code(18) into TagElement(20) at 9", "Insert TextElement:  is a(19) into TagElement(20) at 10", "Insert TagElement(36) into Javadoc(39) at 0", "Insert TagElement: @since(38) into Javadoc(39) at 1", "Insert SimpleName: AnnotationResolver(41) into SimpleType: AnnotationResolver(42) at 0", "Insert SimpleName: resolver(43) into VariableDeclarationFragment(44) at 0", "Insert ConstructorInvocation(67) into Block(68) at 0", "Insert TagElement(80) into Javadoc(89) at 0", "Insert TagElement: @param(83) into Javadoc(89) at 1", "Insert TagElement: @param(86) into Javadoc(89) at 2", "Insert TagElement: @since(88) into Javadoc(89) at 3", "Insert SimpleType: AnnotationHandler(93) into SingleVariableDeclaration(95) at 0", "Insert SimpleName: handler(94) into SingleVariableDeclaration(95) at 1", "Insert SimpleType: AnnotationResolver(97) into SingleVariableDeclaration(99) at 0", "Insert SimpleName: resolver(98) into SingleVariableDeclaration(99) at 1", "Move IfStatement(161) into Block(125) at 0", "Move ExpressionStatement(43) into Block(125) at 1", "Insert ExpressionStatement(124) into Block(125) at 2", "Insert TagElement(132) into Javadoc(139) at 0", "Insert TagElement: @return(138) into Javadoc(139) at 1", "Insert TagElement(153) into Javadoc(161) at 0", "Insert TagElement: @param(160) into Javadoc(161) at 1", "Insert TagElement(188) into Javadoc(197) at 0", "Insert TagElement: @return(194) into Javadoc(197) at 1", "Update TagElement: @throws(140) to @since", "Update SimpleName: IllegalArgumentException(150) to AnnotationResolver", "Insert ReturnStatement(203) into Block(204) at 0", "Insert TagElement(217) into Javadoc(227) at 0", "Insert TagElement: @param(224) into Javadoc(227) at 1", "Insert TagElement: @since(226) into Javadoc(227) at 2", "Insert SimpleType: AnnotationResolver(232) into SingleVariableDeclaration(234) at 0", "Insert SimpleName: resolver(233) into SingleVariableDeclaration(234) at 1", "Insert ExpressionStatement(240) into Block(241) at 0", "Insert TagElement(299) into Javadoc(305) at 0", "Move TagElement: @param(134) into Javadoc(305) at 1", "Move TagElement: @return(136) into Javadoc(305) at 2", "Move ReturnStatement(199) into Block(324) at 0", "Insert SimpleName: MethodInvocation(8) into TagElement: @link(10) at 0", "Insert TextElement:  MethodInvocation(9) into TagElement: @link(10) at 1", "Insert SimpleName: AnnotationResolver(12) into TagElement: @link(14) at 0", "Insert TextElement:  AnnotationResolver(13) into TagElement: @link(14) at 1", "Insert TextElement:  AnnotationResolver(17) into TagElement: @code(18) at 0", "Insert TextElement: The resolver to use to find annotations on intercepted methods.(35) into TagElement(36) at 0", "Insert TextElement:  1.1(37) into TagElement: @since(38) at 0", "Update TextElement:  that will be used to process annotations of a corresponding(27) to  that will be used to process annotations of a", "Update TextElement: type.(28) to corresponding type.", "Insert SimpleName: handler(63) into ConstructorInvocation(67) at 0", "Insert ClassInstanceCreation(66) into ConstructorInvocation(67) at 1", "Insert TextElement: Constructs an <code>AnnotationMethodInterceptor</code> with the(70) into TagElement(80) at 0", "Insert TagElement: @link(73) into TagElement(80) at 1", "Insert TextElement:  that will be used to process annotations of a(74) into TagElement(80) at 2", "Insert TextElement: corresponding type, using the specified (75) into TagElement(80) at 3", "Insert TagElement: @code(77) into TagElement(80) at 4", "Insert TextElement:  to acquire annotations(78) into TagElement(80) at 5", "Insert TextElement: at runtime.(79) into TagElement(80) at 6", "Insert SimpleName: handler(81) into TagElement: @param(83) at 0", "Insert TextElement:   the handler to use to process any discovered annotation(82) into TagElement: @param(83) at 1", "Insert SimpleName: resolver(84) into TagElement: @param(86) at 0", "Insert TextElement:  the resolver to use to locate/acquire the annotation(85) into TagElement: @param(86) at 1", "Insert TextElement:  1.1(87) into TagElement: @since(88) at 0", "Insert SimpleName: AnnotationHandler(92) into SimpleType: AnnotationHandler(93) at 0", "Insert SimpleName: AnnotationResolver(96) into SimpleType: AnnotationResolver(97) at 0", "Insert MethodInvocation(123) into ExpressionStatement(124) at 0", "Insert TextElement: Returns the (127) into TagElement(132) at 0", "Insert TagElement: @code(129) into TagElement(132) at 1", "Insert TextElement:  used to perform authorization behavior based on(130) into TagElement(132) at 2", "Insert TextElement: an annotation discovered at runtime.(131) into TagElement(132) at 3", "Insert TextElement:  the (133) into TagElement: @return(138) at 0", "Insert TagElement: @code(135) into TagElement: @return(138) at 1", "Insert TextElement:  used to perform authorization behavior based on(136) into TagElement: @return(138) at 2", "Insert TextElement: an annotation discovered at runtime.(137) into TagElement: @return(138) at 3", "Insert TextElement: Sets the (148) into TagElement(153) at 0", "Insert TagElement: @code(150) into TagElement(153) at 1", "Insert TextElement:  used to perform authorization behavior based on(151) into TagElement(153) at 2", "Insert TextElement: an annotation discovered at runtime.(152) into TagElement(153) at 3", "Insert SimpleName: handler(154) into TagElement: @param(160) at 0", "Insert TextElement:  the (155) into TagElement: @param(160) at 1", "Insert TagElement: @code(157) into TagElement: @param(160) at 2", "Insert TextElement:  used to perform authorization behavior based on(158) into TagElement: @param(160) at 3", "Insert TextElement: an annotation discovered at runtime.(159) into TagElement: @param(160) at 4", "Update TextElement: Returns the Annotation that this interceptor will process for the specified method invocation.(106) to Returns the ", "Move TextElement: Returns the Annotation that this interceptor will process for the specified method invocation.(106) into TagElement(188) at 0", "Insert TagElement: @code(179) into TagElement(188) at 1", "Insert TextElement:  to use to acquire annotations from intercepted(180) into TagElement(188) at 2", "Update TextElement: The default implementation merely gets the underlying (108) to methods at runtime.  The annotation is then used by the ", "Move TextElement: The default implementation merely gets the underlying (108) into TagElement(188) at 3", "Move TagElement: @link(111) into TagElement(188) at 4", "Update TextElement:  from the supplied(112) to  to", "Move TextElement:  from the supplied(112) into TagElement(188) at 5", "Update TextElement: <code>MethodInvocation</code> argument, and returns:(113) to perform authorization logic.", "Move TextElement: <code>MethodInvocation</code> argument, and returns:(113) into TagElement(188) at 6", "Update TextElement: <p/>(114) to  the ", "Move TextElement: <p/>(114) into TagElement: @return(194) at 0", "Update TagElement: @link(123) to @code", "Move TagElement: @link(123) into TagElement: @return(194) at 1", "Update TextElement: ((124) to  to use to acquire annotations from intercepted", "Move TextElement: ((124) into TagElement: @return(194) at 2", "Update TextElement: );</code>(130) to methods at runtime.", "Move TextElement: );</code>(130) into TagElement: @return(194) at 3", "Update TextElement:  if the supplied <code>MethodInvocation</code> argument is <code>null</code> or(138) to  1.1", "Insert SimpleName: resolver(202) into ReturnStatement(203) at 0", "Insert TextElement: Returns the (206) into TagElement(217) at 0", "Insert TagElement: @code(208) into TagElement(217) at 1", "Insert TextElement:  to use to acquire annotations from intercepted(209) into TagElement(217) at 2", "Insert TextElement: methods at runtime.  The annotation is then used by the (210) into TagElement(217) at 3", "Insert TagElement: @link(214) into TagElement(217) at 4", "Insert TextElement:  to(215) into TagElement(217) at 5", "Insert TextElement: perform authorization logic.(216) into TagElement(217) at 6", "Insert SimpleName: resolver(218) into TagElement: @param(224) at 0", "Insert TextElement:  the (219) into TagElement: @param(224) at 1", "Insert TagElement: @code(221) into TagElement: @param(224) at 2", "Insert TextElement:  to use to acquire annotations from intercepted(222) into TagElement: @param(224) at 3", "Insert TextElement: methods at runtime.(223) into TagElement: @param(224) at 4", "Insert TextElement:  1.1(225) into TagElement: @since(226) at 0", "Update SimpleName: String(173) to AnnotationResolver", "Move SimpleName: String(173) into SimpleType: AnnotationResolver(232) at 0", "Insert Assignment: =(239) into ExpressionStatement(240) at 0", "Insert TextElement: Returns the Annotation that this interceptor will process for the specified method invocation.(280) into TagElement(299) at 0", "Insert TextElement: <p/>(281) into TagElement(299) at 1", "Insert TextElement: The default implementation acquires the annotation using an annotation(282) into TagElement(299) at 2", "Insert TagElement: @link(286) into TagElement(299) at 3", "Insert TextElement:  using the internal annotation (287) into TagElement(299) at 4", "Insert TagElement: @link(291) into TagElement(299) at 5", "Insert TextElement: 's(292) into TagElement(299) at 6", "Move TagElement: @link(129) into TagElement(299) at 7", "Insert TextElement: .(298) into TagElement(299) at 8", "Insert SimpleType: DefaultAnnotationResolver(65) into ClassInstanceCreation(66) at 0", "Insert SimpleName: AnnotationHandler(71) into TagElement: @link(73) at 0", "Insert TextElement:  AnnotationHandler(72) into TagElement: @link(73) at 1", "Insert TextElement:  AnnotationResolver(76) into TagElement: @code(77) at 0", "Update SimpleName: mi(152) to handler", "Insert SimpleName: setResolver(114) into MethodInvocation(123) at 0", "Insert ConditionalExpression(122) into MethodInvocation(123) at 1", "Insert TextElement:  AnnotationHandler(128) into TagElement: @code(129) at 0", "Insert TextElement:  AnnotationHandler(134) into TagElement: @code(135) at 0", "Insert TextElement:  AnnotationHandler(149) into TagElement: @code(150) at 0", "Insert TextElement:  AnnotationHandler(156) into TagElement: @code(157) at 0", "Update TextElement: <p/>(107) to  AnnotationResolver", "Move TextElement: <p/>(107) into TagElement: @code(179) at 0", "Insert MemberRef(183) into TagElement: @link(185) at 0", "Update TextElement:  Method(110) to  handler", "Update TextElement:  getAnnotation(122) to  AnnotationResolver", "Insert TextElement:  AnnotationResolver(207) into TagElement: @code(208) at 0", "Insert MemberRef(212) into TagElement: @link(214) at 0", "Insert TextElement:  handler(213) into TagElement: @link(214) at 1", "Insert TextElement:  AnnotationResolver(220) into TagElement: @code(221) at 0", "Insert FieldAccess(237) into Assignment: =(239) at 0", "Insert SimpleName: resolver(238) into Assignment: =(239) at 1", "Insert MemberRef(284) into TagElement: @link(286) at 0", "Insert TextElement:  resolver(285) into TagElement: @link(286) at 1", "Insert MemberRef(289) into TagElement: @link(291) at 0", "Insert TextElement:  handler(290) into TagElement: @link(291) at 1", "Update TextElement:  handler.getAnnotationClass()(128) to  annotationClass", "Insert MethodInvocation(315) into MethodInvocation(322) at 0", "Insert SimpleName: mi(317) into MethodInvocation(322) at 2", "Insert SimpleName: DefaultAnnotationResolver(64) into SimpleType: DefaultAnnotationResolver(65) at 0", "Insert InfixExpression: !=(117) into ConditionalExpression(122) at 0", "Insert SimpleName: resolver(118) into ConditionalExpression(122) at 1", "Insert ClassInstanceCreation(121) into ConditionalExpression(122) at 2", "Insert SimpleName: getHandler(182) into MemberRef(183) at 0", "Insert SimpleName: getHandler(211) into MemberRef(212) at 0", "Insert ThisExpression(235) into FieldAccess(237) at 0", "Insert SimpleName: resolver(236) into FieldAccess(237) at 1", "Insert SimpleName: getResolver(283) into MemberRef(284) at 0", "Insert SimpleName: getHandler(288) into MemberRef(289) at 0", "Update SimpleName: m(192) to getResolver", "Move SimpleName: m(192) into MethodInvocation(315) at 0", "Update StringLiteral: \"method argument cannot be null\"(157) to \"AnnotationHandler argument cannot be null.\"", "Insert SimpleName: resolver(115) into InfixExpression: !=(117) at 0", "Insert NullLiteral(116) into InfixExpression: !=(117) at 1", "Insert SimpleType: DefaultAnnotationResolver(120) into ClassInstanceCreation(121) at 0", "Insert SimpleName: DefaultAnnotationResolver(119) into SimpleType: DefaultAnnotationResolver(120) at 0", "Delete QualifiedName: java.lang.reflect.Method(4)", "Delete ImportDeclaration(5)", "Delete SimpleName: Method(109)", "Delete SimpleName: Method(116)", "Delete SimpleName: getAnnotation(117)", "Delete SimpleName: Class(118)", "Delete SimpleType: Class(119)", "Delete MethodRefParameter(120)", "Delete MethodRef(121)", "Delete TextElement: <code>mi.(115)", "Delete TagElement(131)", "Delete SimpleName: IllegalArgumentException(137)", "Delete TextElement: its underlying <code>Method</code> is <code>null</code>.(139)", "Delete SimpleName: getAnnotation(145)", "Delete SimpleName: Method(162)", "Delete SimpleType: Method(163)", "Delete SimpleName: m(164)", "Delete SimpleName: mi(165)", "Delete SimpleName: getMethod(166)", "Delete MethodInvocation(167)", "Delete VariableDeclarationFragment(168)", "Delete VariableDeclarationStatement(169)", "Delete SimpleName: m(170)", "Delete NullLiteral(171)", "Delete InfixExpression: ==(172)", "Delete SimpleType: String(174)", "Delete SimpleName: msg(175)", "Delete SimpleName: MethodInvocation(176)", "Delete SimpleType: MethodInvocation(177)", "Delete TypeLiteral(178)", "Delete SimpleName: getName(179)", "Delete MethodInvocation(180)", "Delete StringLiteral: \" parameter incorrectly constructed.  getMethod() returned null\"(181)", "Delete InfixExpression: +(182)", "Delete VariableDeclarationFragment(183)", "Delete VariableDeclarationStatement(184)", "Delete SimpleName: IllegalArgumentException(185)", "Delete SimpleType: IllegalArgumentException(186)", "Delete SimpleName: msg(187)", "Delete ClassInstanceCreation(188)", "Delete ThrowStatement(189)", "Delete Block(190)", "Delete IfStatement(191)", "Delete Block(200)", "Delete MethodDeclaration(201)"]}}, {"AuthenticatedAnnotationMethodInterceptor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: org.apache.shiro.aop.AnnotationResolver to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 5", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS TagElement: @param to Javadoc at 0", "INS SimpleName: AuthenticatedAnnotationMethodInterceptor to MethodDeclaration at 2", "INS SimpleType: AuthenticatedAnnotationHandler to ClassInstanceCreation at 0", "INS SimpleName: AuthenticatedAnnotationHandler to SimpleType: AuthenticatedAnnotationHandler at 0", "INS SuperConstructorInvocation to Block at 0", "INS SimpleName: AnnotationResolver to SimpleType: AnnotationResolver at 0", "INS Javadoc to MethodDeclaration at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: resolver to TagElement: @param at 0", "INS SimpleName: resolver to SuperConstructorInvocation at 1", "INS TagElement: @since to Javadoc at 1", "INS ClassInstanceCreation to SuperConstructorInvocation at 0", "INS SimpleType: AnnotationResolver to SingleVariableDeclaration at 0", "INS TextElement:  1.1 to TagElement: @since at 0", "INS SimpleName: resolver to SingleVariableDeclaration at 1"]}]}}, {"AuthenticatedAnnotationMethodInterceptor_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(61) at 1", "Insert QualifiedName: org.apache.shiro.aop.AnnotationResolver(2) into ImportDeclaration(3) at 0", "Insert MethodDeclaration(59) into TypeDeclaration: class(60) at 5", "Insert Javadoc(46) into MethodDeclaration(59) at 0", "Insert Modifier: public(47) into MethodDeclaration(59) at 1", "Insert SimpleName: AuthenticatedAnnotationMethodInterceptor(48) into MethodDeclaration(59) at 2", "Insert SingleVariableDeclaration(52) into MethodDeclaration(59) at 3", "Insert Block(58) into MethodDeclaration(59) at 4", "Insert TagElement: @param(43) into Javadoc(46) at 0", "Insert TagElement: @since(45) into Javadoc(46) at 1", "Insert SimpleType: AnnotationResolver(50) into SingleVariableDeclaration(52) at 0", "Insert SimpleName: resolver(51) into SingleVariableDeclaration(52) at 1", "Insert SuperConstructorInvocation(57) into Block(58) at 0", "Insert SimpleName: resolver(42) into TagElement: @param(43) at 0", "Insert TextElement:  1.1(44) into TagElement: @since(45) at 0", "Insert SimpleName: AnnotationResolver(49) into SimpleType: AnnotationResolver(50) at 0", "Insert ClassInstanceCreation(55) into SuperConstructorInvocation(57) at 0", "Insert SimpleName: resolver(56) into SuperConstructorInvocation(57) at 1", "Insert SimpleType: AuthenticatedAnnotationHandler(54) into ClassInstanceCreation(55) at 0", "Insert SimpleName: AuthenticatedAnnotationHandler(53) into SimpleType: AuthenticatedAnnotationHandler(54) at 0"]}}, {"AuthorizingAnnotationMethodInterceptor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: org.apache.shiro.aop.AnnotationHandler to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: org.apache.shiro.aop.AnnotationResolver to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 6", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: resolver to SuperConstructorInvocation at 1", "INS SimpleName: handler to SuperConstructorInvocation at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: handler to SingleVariableDeclaration at 1", "INS SimpleName: resolver to TagElement: @param at 0", "INS SimpleName: AuthorizingAnnotationMethodInterceptor to MethodDeclaration at 2", "INS TextElement:  1.1 to TagElement: @since at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: handler to TagElement: @param at 0", "INS SimpleName: AuthorizingAnnotationHandler to SimpleType: AuthorizingAnnotationHandler at 0", "INS SimpleName: resolver to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: AnnotationResolver to SingleVariableDeclaration at 0", "INS TagElement: @param to Javadoc at 0", "INS SuperConstructorInvocation to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 5", "INS SimpleName: AnnotationResolver to SimpleType: AnnotationResolver at 0", "INS TagElement: @since to Javadoc at 2", "INS SimpleType: AuthorizingAnnotationHandler to SingleVariableDeclaration at 0"]}]}}, {"AuthorizingAnnotationMethodInterceptor_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(168) at 1", "Insert ImportDeclaration(7) into CompilationUnit(168) at 3", "Insert QualifiedName: org.apache.shiro.aop.AnnotationHandler(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: org.apache.shiro.aop.AnnotationResolver(6) into ImportDeclaration(7) at 0", "Insert MethodDeclaration(62) into TypeDeclaration: class(167) at 6", "Insert Javadoc(47) into MethodDeclaration(62) at 0", "Insert Modifier: public(48) into MethodDeclaration(62) at 1", "Insert SimpleName: AuthorizingAnnotationMethodInterceptor(49) into MethodDeclaration(62) at 2", "Insert SingleVariableDeclaration(53) into MethodDeclaration(62) at 3", "Insert SingleVariableDeclaration(57) into MethodDeclaration(62) at 4", "Insert Block(61) into MethodDeclaration(62) at 5", "Insert TagElement: @param(42) into Javadoc(47) at 0", "Insert TagElement: @param(44) into Javadoc(47) at 1", "Insert TagElement: @since(46) into Javadoc(47) at 2", "Insert SimpleType: AuthorizingAnnotationHandler(51) into SingleVariableDeclaration(53) at 0", "Insert SimpleName: handler(52) into SingleVariableDeclaration(53) at 1", "Insert SimpleType: AnnotationResolver(55) into SingleVariableDeclaration(57) at 0", "Insert SimpleName: resolver(56) into SingleVariableDeclaration(57) at 1", "Insert SuperConstructorInvocation(60) into Block(61) at 0", "Insert SimpleName: handler(41) into TagElement: @param(42) at 0", "Insert SimpleName: resolver(43) into TagElement: @param(44) at 0", "Insert TextElement:  1.1(45) into TagElement: @since(46) at 0", "Insert SimpleName: AuthorizingAnnotationHandler(50) into SimpleType: AuthorizingAnnotationHandler(51) at 0", "Insert SimpleName: AnnotationResolver(54) into SimpleType: AnnotationResolver(55) at 0", "Insert SimpleName: handler(58) into SuperConstructorInvocation(60) at 0", "Insert SimpleName: resolver(59) into SuperConstructorInvocation(60) at 1"]}}, {"GuestAnnotationMethodInterceptor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: org.apache.shiro.aop.AnnotationResolver to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleName: resolver to TagElement: @param at 0", "INS SimpleName: GuestAnnotationHandler to SimpleType: GuestAnnotationHandler at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SuperConstructorInvocation to Block at 0", "INS TagElement: @param to Javadoc at 0", "INS ClassInstanceCreation to SuperConstructorInvocation at 0", "INS SimpleName: GuestAnnotationMethodInterceptor to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleType: GuestAnnotationHandler to ClassInstanceCreation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: AnnotationResolver to SingleVariableDeclaration at 0", "INS TagElement: @since to Javadoc at 1", "INS SimpleName: resolver to SingleVariableDeclaration at 1", "INS SimpleName: resolver to SuperConstructorInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS TextElement:  1.1 to TagElement: @since at 0", "INS SimpleName: AnnotationResolver to SimpleType: AnnotationResolver at 0", "INS Javadoc to MethodDeclaration at 0"]}]}}, {"GuestAnnotationMethodInterceptor_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(68) at 1", "Insert QualifiedName: org.apache.shiro.aop.AnnotationResolver(2) into ImportDeclaration(3) at 0", "Insert MethodDeclaration(66) into TypeDeclaration: class(67) at 5", "Insert Javadoc(53) into MethodDeclaration(66) at 0", "Insert Modifier: public(54) into MethodDeclaration(66) at 1", "Insert SimpleName: GuestAnnotationMethodInterceptor(55) into MethodDeclaration(66) at 2", "Insert SingleVariableDeclaration(59) into MethodDeclaration(66) at 3", "Insert Block(65) into MethodDeclaration(66) at 4", "Insert TagElement: @param(50) into Javadoc(53) at 0", "Insert TagElement: @since(52) into Javadoc(53) at 1", "Insert SimpleType: AnnotationResolver(57) into SingleVariableDeclaration(59) at 0", "Insert SimpleName: resolver(58) into SingleVariableDeclaration(59) at 1", "Insert SuperConstructorInvocation(64) into Block(65) at 0", "Insert SimpleName: resolver(49) into TagElement: @param(50) at 0", "Insert TextElement:  1.1(51) into TagElement: @since(52) at 0", "Insert SimpleName: AnnotationResolver(56) into SimpleType: AnnotationResolver(57) at 0", "Insert ClassInstanceCreation(62) into SuperConstructorInvocation(64) at 0", "Insert SimpleName: resolver(63) into SuperConstructorInvocation(64) at 1", "Insert SimpleType: GuestAnnotationHandler(61) into ClassInstanceCreation(62) at 0", "Insert SimpleName: GuestAnnotationHandler(60) into SimpleType: GuestAnnotationHandler(61) at 0"]}}, {"PermissionAnnotationMethodInterceptor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: org.apache.shiro.aop.AnnotationResolver to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 5", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS SimpleType: AnnotationResolver to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SimpleName: PermissionAnnotationHandler to SimpleType: PermissionAnnotationHandler at 0", "INS SimpleName: AnnotationResolver to SimpleType: AnnotationResolver at 0", "INS SimpleName: resolver to TagElement: @param at 0", "INS TextElement:  1.1 to TagElement: @since at 0", "INS TagElement: @param to Javadoc at 0", "INS SuperConstructorInvocation to Block at 0", "INS SimpleName: resolver to SuperConstructorInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS TagElement: @since to Javadoc at 1", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS ClassInstanceCreation to SuperConstructorInvocation at 0", "INS SimpleType: PermissionAnnotationHandler to ClassInstanceCreation at 0", "INS SimpleName: PermissionAnnotationMethodInterceptor to MethodDeclaration at 2", "INS SimpleName: resolver to SingleVariableDeclaration at 1"]}]}}, {"PermissionAnnotationMethodInterceptor_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(52) at 1", "Insert QualifiedName: org.apache.shiro.aop.AnnotationResolver(2) into ImportDeclaration(3) at 0", "Insert MethodDeclaration(50) into TypeDeclaration: class(51) at 5", "Insert Javadoc(37) into MethodDeclaration(50) at 0", "Insert Modifier: public(38) into MethodDeclaration(50) at 1", "Insert SimpleName: PermissionAnnotationMethodInterceptor(39) into MethodDeclaration(50) at 2", "Insert SingleVariableDeclaration(43) into MethodDeclaration(50) at 3", "Insert Block(49) into MethodDeclaration(50) at 4", "Insert TagElement: @param(34) into Javadoc(37) at 0", "Insert TagElement: @since(36) into Javadoc(37) at 1", "Insert SimpleType: AnnotationResolver(41) into SingleVariableDeclaration(43) at 0", "Insert SimpleName: resolver(42) into SingleVariableDeclaration(43) at 1", "Insert SuperConstructorInvocation(48) into Block(49) at 0", "Insert SimpleName: resolver(33) into TagElement: @param(34) at 0", "Insert TextElement:  1.1(35) into TagElement: @since(36) at 0", "Insert SimpleName: AnnotationResolver(40) into SimpleType: AnnotationResolver(41) at 0", "Insert ClassInstanceCreation(46) into SuperConstructorInvocation(48) at 0", "Insert SimpleName: resolver(47) into SuperConstructorInvocation(48) at 1", "Insert SimpleType: PermissionAnnotationHandler(45) into ClassInstanceCreation(46) at 0", "Insert SimpleName: PermissionAnnotationHandler(44) into SimpleType: PermissionAnnotationHandler(45) at 0"]}}, {"RoleAnnotationMethodInterceptor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: org.apache.shiro.aop.AnnotationResolver to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 5", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS SimpleType: AnnotationResolver to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SimpleName: RoleAnnotationHandler to SimpleType: RoleAnnotationHandler at 0", "INS SimpleName: AnnotationResolver to SimpleType: AnnotationResolver at 0", "INS SimpleName: resolver to TagElement: @param at 0", "INS TextElement:  1.1 to TagElement: @since at 0", "INS TagElement: @param to Javadoc at 0", "INS SuperConstructorInvocation to Block at 0", "INS SimpleName: resolver to SuperConstructorInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS TagElement: @since to Javadoc at 1", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS ClassInstanceCreation to SuperConstructorInvocation at 0", "INS SimpleType: RoleAnnotationHandler to ClassInstanceCreation at 0", "INS SimpleName: RoleAnnotationMethodInterceptor to MethodDeclaration at 2", "INS SimpleName: resolver to SingleVariableDeclaration at 1"]}]}}, {"RoleAnnotationMethodInterceptor_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(54) at 1", "Insert QualifiedName: org.apache.shiro.aop.AnnotationResolver(2) into ImportDeclaration(3) at 0", "Insert MethodDeclaration(52) into TypeDeclaration: class(53) at 5", "Insert Javadoc(39) into MethodDeclaration(52) at 0", "Insert Modifier: public(40) into MethodDeclaration(52) at 1", "Insert SimpleName: RoleAnnotationMethodInterceptor(41) into MethodDeclaration(52) at 2", "Insert SingleVariableDeclaration(45) into MethodDeclaration(52) at 3", "Insert Block(51) into MethodDeclaration(52) at 4", "Insert TagElement: @param(36) into Javadoc(39) at 0", "Insert TagElement: @since(38) into Javadoc(39) at 1", "Insert SimpleType: AnnotationResolver(43) into SingleVariableDeclaration(45) at 0", "Insert SimpleName: resolver(44) into SingleVariableDeclaration(45) at 1", "Insert SuperConstructorInvocation(50) into Block(51) at 0", "Insert SimpleName: resolver(35) into TagElement: @param(36) at 0", "Insert TextElement:  1.1(37) into TagElement: @since(38) at 0", "Insert SimpleName: AnnotationResolver(42) into SimpleType: AnnotationResolver(43) at 0", "Insert ClassInstanceCreation(48) into SuperConstructorInvocation(50) at 0", "Insert SimpleName: resolver(49) into SuperConstructorInvocation(50) at 1", "Insert SimpleType: RoleAnnotationHandler(47) into ClassInstanceCreation(48) at 0", "Insert SimpleName: RoleAnnotationHandler(46) into SimpleType: RoleAnnotationHandler(47) at 0"]}}, {"UserAnnotationMethodInterceptor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: org.apache.shiro.aop.AnnotationResolver to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleName: resolver to TagElement: @param at 0", "INS SimpleName: UserAnnotationHandler to SimpleType: UserAnnotationHandler at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SuperConstructorInvocation to Block at 0", "INS TagElement: @param to Javadoc at 0", "INS ClassInstanceCreation to SuperConstructorInvocation at 0", "INS SimpleName: UserAnnotationMethodInterceptor to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleType: UserAnnotationHandler to ClassInstanceCreation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: AnnotationResolver to SingleVariableDeclaration at 0", "INS TagElement: @since to Javadoc at 1", "INS SimpleName: resolver to SingleVariableDeclaration at 1", "INS SimpleName: resolver to SuperConstructorInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS TextElement:  1.1 to TagElement: @since at 0", "INS SimpleName: AnnotationResolver to SimpleType: AnnotationResolver at 0", "INS Javadoc to MethodDeclaration at 0"]}]}}, {"UserAnnotationMethodInterceptor_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(68) at 1", "Insert QualifiedName: org.apache.shiro.aop.AnnotationResolver(2) into ImportDeclaration(3) at 0", "Insert MethodDeclaration(66) into TypeDeclaration: class(67) at 5", "Insert Javadoc(53) into MethodDeclaration(66) at 0", "Insert Modifier: public(54) into MethodDeclaration(66) at 1", "Insert SimpleName: UserAnnotationMethodInterceptor(55) into MethodDeclaration(66) at 2", "Insert SingleVariableDeclaration(59) into MethodDeclaration(66) at 3", "Insert Block(65) into MethodDeclaration(66) at 4", "Insert TagElement: @param(50) into Javadoc(53) at 0", "Insert TagElement: @since(52) into Javadoc(53) at 1", "Insert SimpleType: AnnotationResolver(57) into SingleVariableDeclaration(59) at 0", "Insert SimpleName: resolver(58) into SingleVariableDeclaration(59) at 1", "Insert SuperConstructorInvocation(64) into Block(65) at 0", "Insert SimpleName: resolver(49) into TagElement: @param(50) at 0", "Insert TextElement:  1.1(51) into TagElement: @since(52) at 0", "Insert SimpleName: AnnotationResolver(56) into SimpleType: AnnotationResolver(57) at 0", "Insert ClassInstanceCreation(62) into SuperConstructorInvocation(64) at 0", "Insert SimpleName: resolver(63) into SuperConstructorInvocation(64) at 1", "Insert SimpleType: UserAnnotationHandler(61) into ClassInstanceCreation(62) at 0", "Insert SimpleName: UserAnnotationHandler(60) into SimpleType: UserAnnotationHandler(61) at 0"]}}, {"ShiroAnnotationAuthorizingAspect_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 5", "operations": ["INS SingleMemberAnnotation to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: Pointcut to SingleMemberAnnotation at 0", "INS SimpleName: pointCupExpression to SingleMemberAnnotation at 1", "INS SimpleName: anyShiroAnnotatedMethod to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS Modifier: public to MethodDeclaration at 1"]}]}}, {"ShiroAnnotationAuthorizingAspect_diff": {"operations": ["Insert MethodDeclaration(38) into TypeDeclaration: class(78) at 5", "Insert SingleMemberAnnotation(33) into MethodDeclaration(38) at 0", "Insert Modifier: public(34) into MethodDeclaration(38) at 1", "Insert PrimitiveType: void(35) into MethodDeclaration(38) at 2", "Insert SimpleName: anyShiroAnnotatedMethod(36) into MethodDeclaration(38) at 3", "Insert Block(37) into MethodDeclaration(38) at 4", "Insert SimpleName: Pointcut(31) into SingleMemberAnnotation(33) at 0", "Insert SimpleName: pointCupExpression(32) into SingleMemberAnnotation(33) at 1"]}}, {"AopAllianceAnnotationsAuthorizingMethodInterceptor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.shiro.authz.aop to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.shiro.spring.aop.SpringAnnotationResolver to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: java.util.ArrayList to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: java.util.List to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "UPDATE from org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor to org.apache.shiro.aop.AnnotationResolver", "operations": ["UPD QualifiedName: org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor from org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor to org.apache.shiro.aop.AnnotationResolver"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 5", "operations": ["INS SimpleType: AnnotationResolver to VariableDeclarationStatement at 0", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: resolver to VariableDeclarationFragment at 0", "INS ParameterizedType: List<AuthorizingAnnotationMethodInterceptor> to VariableDeclarationStatement at 0", "INS SimpleName: UserAnnotationMethodInterceptor to SimpleType: UserAnnotationMethodInterceptor at 0", "INS SimpleName: interceptors to MethodInvocation at 0", "INS SimpleType: AuthenticatedAnnotationMethodInterceptor to ClassInstanceCreation at 0", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: add to MethodInvocation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: resolver to ClassInstanceCreation at 1", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SimpleType: GuestAnnotationMethodInterceptor to ClassInstanceCreation at 0", "INS SimpleName: resolver to ClassInstanceCreation at 1", "INS SimpleType: AuthorizingAnnotationMethodInterceptor to ParameterizedType: List<AuthorizingAnnotationMethodInterceptor> at 1", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS ExpressionStatement to Block at 4", "INS ParameterizedType: ArrayList<AuthorizingAnnotationMethodInterceptor> to ClassInstanceCreation at 0", "INS SimpleName: AuthenticatedAnnotationMethodInterceptor to SimpleType: AuthenticatedAnnotationMethodInterceptor at 0", "INS SimpleName: AuthorizingAnnotationMethodInterceptor to SimpleType: AuthorizingAnnotationMethodInterceptor at 0", "INS SimpleName: AuthorizingAnnotationMethodInterceptor to SimpleType: AuthorizingAnnotationMethodInterceptor at 0", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<AuthorizingAnnotationMethodInterceptor> at 0", "INS SimpleName: RoleAnnotationMethodInterceptor to SimpleType: RoleAnnotationMethodInterceptor at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 7", "INS SimpleName: interceptors to MethodInvocation at 0", "INS ExpressionStatement to Block at 6", "INS SimpleName: AopAllianceAnnotationsAuthorizingMethodInterceptor to MethodDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: resolver to ClassInstanceCreation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: interceptors to MethodInvocation at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleType: SpringAnnotationResolver to ClassInstanceCreation at 0", "INS SimpleName: interceptors to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS ExpressionStatement to Block at 5", "INS ClassInstanceCreation to MethodInvocation at 2", "INS ExpressionStatement to Block at 2", "INS ExpressionStatement to Block at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: interceptors to MethodInvocation at 0", "INS SimpleName: add to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: GuestAnnotationMethodInterceptor to SimpleType: GuestAnnotationMethodInterceptor at 0", "INS Modifier: public to MethodDeclaration at 0", "INS NumberLiteral: 5 to ClassInstanceCreation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: UserAnnotationMethodInterceptor to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 0", "INS Block to MethodDeclaration at 2", "INS SimpleName: resolver to ClassInstanceCreation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: setMethodInterceptors to MethodInvocation at 0", "INS SimpleName: AnnotationResolver to SimpleType: AnnotationResolver at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleType: RoleAnnotationMethodInterceptor to ClassInstanceCreation at 0", "INS SimpleType: AuthorizingAnnotationMethodInterceptor to ParameterizedType: ArrayList<AuthorizingAnnotationMethodInterceptor> at 1", "INS SimpleName: SpringAnnotationResolver to SimpleType: SpringAnnotationResolver at 0", "INS SimpleName: add to MethodInvocation at 1", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: List to SimpleType: List at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: interceptors to MethodInvocation at 0", "INS SimpleName: PermissionAnnotationMethodInterceptor to SimpleType: PermissionAnnotationMethodInterceptor at 0", "INS SimpleType: PermissionAnnotationMethodInterceptor to ClassInstanceCreation at 0", "INS SimpleName: resolver to ClassInstanceCreation at 1", "INS SimpleType: List to ParameterizedType: List<AuthorizingAnnotationMethodInterceptor> at 0", "INS SimpleName: interceptors to MethodInvocation at 1"]}]}}, {"AopAllianceAnnotationsAuthorizingMethodInterceptor_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(310) at 4", "Insert ImportDeclaration(11) into CompilationUnit(310) at 5", "Insert ImportDeclaration(15) into CompilationUnit(310) at 7", "Insert ImportDeclaration(17) into CompilationUnit(310) at 8", "Update QualifiedName: org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor(6) to org.apache.shiro.aop.AnnotationResolver", "Insert QualifiedName: org.apache.shiro.authz.aop(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.shiro.spring.aop.SpringAnnotationResolver(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: java.util.ArrayList(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: java.util.List(16) into ImportDeclaration(17) at 0", "Insert MethodDeclaration(100) into TypeDeclaration: class(309) at 5", "Insert Modifier: public(30) into MethodDeclaration(100) at 0", "Insert SimpleName: AopAllianceAnnotationsAuthorizingMethodInterceptor(31) into MethodDeclaration(100) at 1", "Insert Block(99) into MethodDeclaration(100) at 2", "Insert VariableDeclarationStatement(46) into Block(99) at 0", "Insert VariableDeclarationStatement(54) into Block(99) at 1", "Insert ExpressionStatement(62) into Block(99) at 2", "Insert ExpressionStatement(70) into Block(99) at 3", "Insert ExpressionStatement(78) into Block(99) at 4", "Insert ExpressionStatement(86) into Block(99) at 5", "Insert ExpressionStatement(94) into Block(99) at 6", "Insert ExpressionStatement(98) into Block(99) at 7", "Insert ParameterizedType: List<AuthorizingAnnotationMethodInterceptor>(36) into VariableDeclarationStatement(46) at 0", "Insert VariableDeclarationFragment(45) into VariableDeclarationStatement(46) at 1", "Insert SimpleType: AnnotationResolver(48) into VariableDeclarationStatement(54) at 0", "Insert VariableDeclarationFragment(53) into VariableDeclarationStatement(54) at 1", "Insert MethodInvocation(61) into ExpressionStatement(62) at 0", "Insert MethodInvocation(69) into ExpressionStatement(70) at 0", "Insert MethodInvocation(77) into ExpressionStatement(78) at 0", "Insert MethodInvocation(85) into ExpressionStatement(86) at 0", "Insert MethodInvocation(93) into ExpressionStatement(94) at 0", "Insert MethodInvocation(97) into ExpressionStatement(98) at 0", "Insert SimpleType: List(33) into ParameterizedType: List<AuthorizingAnnotationMethodInterceptor>(36) at 0", "Insert SimpleType: AuthorizingAnnotationMethodInterceptor(35) into ParameterizedType: List<AuthorizingAnnotationMethodInterceptor>(36) at 1", "Insert SimpleName: interceptors(37) into VariableDeclarationFragment(45) at 0", "Insert ClassInstanceCreation(44) into VariableDeclarationFragment(45) at 1", "Insert SimpleName: AnnotationResolver(47) into SimpleType: AnnotationResolver(48) at 0", "Insert SimpleName: resolver(49) into VariableDeclarationFragment(53) at 0", "Insert ClassInstanceCreation(52) into VariableDeclarationFragment(53) at 1", "Insert SimpleName: interceptors(55) into MethodInvocation(61) at 0", "Insert SimpleName: add(56) into MethodInvocation(61) at 1", "Insert ClassInstanceCreation(60) into MethodInvocation(61) at 2", "Insert SimpleName: interceptors(63) into MethodInvocation(69) at 0", "Insert SimpleName: add(64) into MethodInvocation(69) at 1", "Insert ClassInstanceCreation(68) into MethodInvocation(69) at 2", "Insert SimpleName: interceptors(71) into MethodInvocation(77) at 0", "Insert SimpleName: add(72) into MethodInvocation(77) at 1", "Insert ClassInstanceCreation(76) into MethodInvocation(77) at 2", "Insert SimpleName: interceptors(79) into MethodInvocation(85) at 0", "Insert SimpleName: add(80) into MethodInvocation(85) at 1", "Insert ClassInstanceCreation(84) into MethodInvocation(85) at 2", "Insert SimpleName: interceptors(87) into MethodInvocation(93) at 0", "Insert SimpleName: add(88) into MethodInvocation(93) at 1", "Insert ClassInstanceCreation(92) into MethodInvocation(93) at 2", "Insert SimpleName: setMethodInterceptors(95) into MethodInvocation(97) at 0", "Insert SimpleName: interceptors(96) into MethodInvocation(97) at 1", "Insert SimpleName: List(32) into SimpleType: List(33) at 0", "Insert SimpleName: AuthorizingAnnotationMethodInterceptor(34) into SimpleType: AuthorizingAnnotationMethodInterceptor(35) at 0", "Insert ParameterizedType: ArrayList<AuthorizingAnnotationMethodInterceptor>(42) into ClassInstanceCreation(44) at 0", "Insert NumberLiteral: 5(43) into ClassInstanceCreation(44) at 1", "Insert SimpleType: SpringAnnotationResolver(51) into ClassInstanceCreation(52) at 0", "Insert SimpleType: RoleAnnotationMethodInterceptor(58) into ClassInstanceCreation(60) at 0", "Insert SimpleName: resolver(59) into ClassInstanceCreation(60) at 1", "Insert SimpleType: PermissionAnnotationMethodInterceptor(66) into ClassInstanceCreation(68) at 0", "Insert SimpleName: resolver(67) into ClassInstanceCreation(68) at 1", "Insert SimpleType: AuthenticatedAnnotationMethodInterceptor(74) into ClassInstanceCreation(76) at 0", "Insert SimpleName: resolver(75) into ClassInstanceCreation(76) at 1", "Insert SimpleType: UserAnnotationMethodInterceptor(82) into ClassInstanceCreation(84) at 0", "Insert SimpleName: resolver(83) into ClassInstanceCreation(84) at 1", "Insert SimpleType: GuestAnnotationMethodInterceptor(90) into ClassInstanceCreation(92) at 0", "Insert SimpleName: resolver(91) into ClassInstanceCreation(92) at 1", "Insert SimpleType: ArrayList(39) into ParameterizedType: ArrayList<AuthorizingAnnotationMethodInterceptor>(42) at 0", "Insert SimpleType: AuthorizingAnnotationMethodInterceptor(41) into ParameterizedType: ArrayList<AuthorizingAnnotationMethodInterceptor>(42) at 1", "Insert SimpleName: SpringAnnotationResolver(50) into SimpleType: SpringAnnotationResolver(51) at 0", "Insert SimpleName: RoleAnnotationMethodInterceptor(57) into SimpleType: RoleAnnotationMethodInterceptor(58) at 0", "Insert SimpleName: PermissionAnnotationMethodInterceptor(65) into SimpleType: PermissionAnnotationMethodInterceptor(66) at 0", "Insert SimpleName: AuthenticatedAnnotationMethodInterceptor(73) into SimpleType: AuthenticatedAnnotationMethodInterceptor(74) at 0", "Insert SimpleName: UserAnnotationMethodInterceptor(81) into SimpleType: UserAnnotationMethodInterceptor(82) at 0", "Insert SimpleName: GuestAnnotationMethodInterceptor(89) into SimpleType: GuestAnnotationMethodInterceptor(90) at 0", "Insert SimpleName: ArrayList(38) into SimpleType: ArrayList(39) at 0", "Insert SimpleName: AuthorizingAnnotationMethodInterceptor(40) into SimpleType: AuthorizingAnnotationMethodInterceptor(41) at 0"]}}, {"AuthorizationAttributeSourceAdvisor_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 11", "MOV ImportDeclaration to CompilationUnit at 5", "MOV ImportDeclaration to CompilationUnit at 1", "MOV ImportDeclaration to CompilationUnit at 2"]}, {"root": "UPDATE from org.apache.shiro.authz.annotation.RequiresGuest to org.apache.shiro.authz.annotation", "operations": ["UPD QualifiedName: org.apache.shiro.authz.annotation.RequiresGuest from org.apache.shiro.authz.annotation.RequiresGuest to org.apache.shiro.authz.annotation"]}, {"root": "UPDATE from org.apache.shiro.authz.annotation.RequiresPermissions to org.springframework.core.annotation.AnnotationUtils", "operations": ["UPD QualifiedName: org.apache.shiro.authz.annotation.RequiresPermissions from org.apache.shiro.authz.annotation.RequiresPermissions to org.springframework.core.annotation.AnnotationUtils"]}, {"root": "UPDATE from org.apache.shiro.authz.annotation.RequiresUser to java.lang.annotation.Annotation", "operations": ["UPD QualifiedName: org.apache.shiro.authz.annotation.RequiresUser from org.apache.shiro.authz.annotation.RequiresUser to java.lang.annotation.Annotation"]}, {"root": "INS SingleMemberAnnotation to TypeDeclaration: class at 1", "operations": ["INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS StringLiteral: \"unchecked\" to ArrayInitializer at 0", "INS SingleMemberAnnotation to TypeDeclaration: class at 1", "INS ArrayInitializer to SingleMemberAnnotation at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS Dimension to ArrayType: Class[] at 1", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS SimpleName: AUTHZ_ANNOTATION_CLASSES to VariableDeclarationFragment at 0", "INS SimpleName: Class to SimpleType: Class at 0", "INS SimpleName: Class to SimpleType: Class at 0", "INS WildcardType: ? extends Annotation to ParameterizedType: Class<? extends Annotation> at 1", "INS SimpleType: Class to ParameterizedType: Class<? extends Annotation> at 0", "INS Dimension to ArrayType: Class<? extends Annotation>[] at 1", "INS ParameterizedType: Class<? extends Annotation> to ArrayType: Class<? extends Annotation>[] at 0", "INS ArrayInitializer to ArrayCreation at 1", "INS Modifier: private to FieldDeclaration at 0", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS Modifier: final to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleType: Annotation to WildcardType: ? extends Annotation at 0", "INS ArrayType: Class[] to ArrayCreation at 0", "INS Modifier: static to FieldDeclaration at 1", "INS ArrayType: Class<? extends Annotation>[] to FieldDeclaration at 3", "INS SimpleType: Class to ArrayType: Class[] at 0"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private"]}, {"root": "UPDATE from void to boolean", "operations": ["UPD PrimitiveType: void from void to boolean"]}, {"root": "UPDATE from getAnnotation to isAuthzAnnotationPresent", "operations": ["UPD SimpleName: getAnnotation from getAnnotation to isAuthzAnnotationPresent", "UPD SimpleName: afterPropertiesSet from afterPropertiesSet to isAuthzAnnotationPresent", "UPD SimpleName: method from method to isAuthzAnnotationPresent"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleType: Method to SingleVariableDeclaration at 0", "INS SimpleName: method to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS SimpleName: annClass to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 1", "INS IfStatement to Block at 1", "INS EnhancedForStatement to Block at 0", "INS InfixExpression: != to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: a to VariableDeclarationFragment at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: findAnnotation to MethodInvocation at 1", "INS WildcardType: ? extends Annotation to ParameterizedType: Class<? extends Annotation> at 1", "INS ParameterizedType: Class<? extends Annotation> to SingleVariableDeclaration at 0", "INS SimpleName: Class to SimpleType: Class at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: Annotation to SimpleType: Annotation at 0", "INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: AnnotationUtils to MethodInvocation at 0", "INS SimpleName: AUTHZ_ANNOTATION_CLASSES to EnhancedForStatement at 1", "INS SimpleType: Class to ParameterizedType: Class<? extends Annotation> at 0", "INS SimpleType: Annotation to VariableDeclarationStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleType: Annotation to WildcardType: ? extends Annotation at 0", "INS Block to EnhancedForStatement at 2", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: a to InfixExpression: != at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setAdvice to MethodInvocation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleType: Method to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: m to VariableDeclarationFragment at 0", "INS SimpleName: Method to SimpleType: Method at 0", "INS SimpleName: method to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: m to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS ReturnStatement to Block at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: NoSuchMethodException to SimpleType: NoSuchMethodException at 0", "INS IfStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: m to Assignment: = at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleType: NoSuchMethodException to SingleVariableDeclaration at 0", "INS TryStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: targetClass to InfixExpression: != at 0", "INS SimpleName: getMethod to MethodInvocation at 1", "INS BooleanLiteral: true to ReturnStatement at 0", "INS Block to CatchClause at 1", "INS ReturnStatement to Block at 0", "INS Block to TryStatement at 0", "INS SimpleName: ignored to SingleVariableDeclaration at 1", "INS SimpleName: targetClass to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1", "INS InfixExpression: != to IfStatement at 0", "INS CatchClause to TryStatement at 1", "INS IfStatement to Block at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ReturnStatement to Block at 3", "operations": ["INS ReturnStatement to Block at 3", "INS BooleanLiteral: false to ReturnStatement at 0"]}, {"root": "UPDATE from Exception to Method", "operations": ["UPD SimpleName: Exception from Exception to Method"]}, {"root": "MOVE from SimpleType: Method", "operations": ["MOV SimpleName: Exception to SimpleType: Method at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAnnotation to MethodInvocation at 0", "MOV TypeLiteral to ArrayInitializer at 0"]}, {"root": "MOVE from ArrayInitializer", "operations": ["MOV TypeLiteral to ArrayInitializer at 1"]}, {"root": "MOVE from ArrayInitializer", "operations": ["MOV TypeLiteral to ArrayInitializer at 2", "MOV SimpleName: method to MethodInvocation at 0", "MOV SimpleName: getAnnotation to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getAnnotation to MethodInvocation at 1", "MOV SimpleName: method to MethodInvocation at 0", "MOV TypeLiteral to ArrayInitializer at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: method to MethodInvocation at 0", "MOV SimpleName: getAnnotation to MethodInvocation at 1", "MOV TypeLiteral to ArrayInitializer at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV ClassInstanceCreation to MethodInvocation at 1"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "UPDATE from AopAllianceAnnotationsAuthorizingMethodInterceptor to Annotation", "operations": ["UPD SimpleName: AopAllianceAnnotationsAuthorizingMethodInterceptor from AopAllianceAnnotationsAuthorizingMethodInterceptor to Annotation", "UPD SimpleName: InitializingBean from InitializingBean to Annotation"]}, {"root": "MOVE from SimpleType: Annotation", "operations": ["MOV SimpleName: InitializingBean to SimpleType: Annotation at 0"]}, {"root": "MOVE from SimpleType: Annotation", "operations": ["MOV SimpleName: AopAllianceAnnotationsAuthorizingMethodInterceptor to SimpleType: Annotation at 0"]}, {"root": "UPDATE from setAdvice to method", "operations": ["UPD SimpleName: setAdvice from setAdvice to method"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: interceptor to MethodInvocation at 3", "MOV SimpleName: setAdvice to MethodInvocation at 2"]}, {"root": "UPDATE from interceptor to annClass", "operations": ["UPD SimpleName: interceptor from interceptor to annClass"]}, {"root": "UPDATE from method to m", "operations": ["UPD SimpleName: method from method to m", "UPD SimpleName: getAnnotation from getAnnotation to m", "UPD SimpleName: method from method to m"]}, {"root": "UPDATE from getAnnotation to getName", "operations": ["UPD SimpleName: getAnnotation from getAnnotation to getName"]}, {"root": "UPDATE from getAnnotation to getParameterTypes", "operations": ["UPD SimpleName: getAnnotation from getAnnotation to getParameterTypes"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.springframework.beans.factory.InitializingBean"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.shiro.authz.annotation.RequiresAuthentication"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.shiro.authz.annotation.RequiresRoles"]}, {"root": "DEL SimpleType: InitializingBean", "operations": ["DEL SimpleType: InitializingBean"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ParenthesizedExpression", "DEL ReturnStatement", "DEL NullLiteral", "DEL ParenthesizedExpression", "DEL InfixExpression: !=", "DEL InfixExpression: !=", "DEL InfixExpression: ||", "DEL NullLiteral", "DEL SimpleName: method", "DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL ParenthesizedExpression", "DEL ParenthesizedExpression", "DEL ParenthesizedExpression", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL ParenthesizedExpression", "DEL NullLiteral", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: method", "DEL SimpleName: getAnnotation"]}, {"root": "DEL SimpleType: Exception", "operations": ["DEL SimpleType: Exception"]}, {"root": "DEL Block", "operations": ["DEL MethodInvocation", "DEL SimpleType: AopAllianceAnnotationsAuthorizingMethodInterceptor", "DEL Block", "DEL StringLiteral: \"No authorization advice explicitly configured via the 'advice' \"", "DEL MethodInvocation", "DEL SimpleName: trace", "DEL Block", "DEL InfixExpression: +", "DEL SimpleName: isTraceEnabled", "DEL SimpleType: AopAllianceAnnotationsAuthorizingMethodInterceptor", "DEL IfStatement", "DEL IfStatement", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL InfixExpression: ==", "DEL NullLiteral", "DEL StringLiteral: \"property.  Attempting to set \"", "DEL TypeLiteral", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: log", "DEL SimpleName: interceptor", "DEL SimpleName: getAdvice", "DEL VariableDeclarationStatement", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: getName", "DEL MethodInvocation", "DEL SimpleName: log", "DEL StringLiteral: \"]\"", "DEL SimpleName: AopAllianceAnnotationsAuthorizingMethodInterceptor", "DEL StringLiteral: \"default instance of type [\"", "DEL InfixExpression: +"]}]}}, {"AuthorizationAttributeSourceAdvisor_diff": {"operations": ["Move ImportDeclaration(3) into CompilationUnit(272) at 11", "Move ImportDeclaration(5) into CompilationUnit(272) at 5", "Move ImportDeclaration(15) into CompilationUnit(272) at 1", "Move ImportDeclaration(23) into CompilationUnit(272) at 2", "Update QualifiedName: org.apache.shiro.authz.annotation.RequiresGuest(14) to org.apache.shiro.authz.annotation", "Update QualifiedName: org.apache.shiro.authz.annotation.RequiresPermissions(16) to org.springframework.core.annotation.AnnotationUtils", "Update QualifiedName: org.apache.shiro.authz.annotation.RequiresUser(20) to java.lang.annotation.Annotation", "Insert SingleMemberAnnotation(26) into TypeDeclaration: class(271) at 1", "Insert FieldDeclaration(79) into TypeDeclaration: class(271) at 6", "Insert SimpleName: SuppressWarnings(23) into SingleMemberAnnotation(26) at 0", "Insert ArrayInitializer(25) into SingleMemberAnnotation(26) at 1", "Insert Modifier: private(45) into FieldDeclaration(79) at 0", "Insert Modifier: static(46) into FieldDeclaration(79) at 1", "Insert Modifier: final(47) into FieldDeclaration(79) at 2", "Insert ArrayType: Class<? extends Annotation>[](55) into FieldDeclaration(79) at 3", "Insert VariableDeclarationFragment(78) into FieldDeclaration(79) at 4", "Update Modifier: public(196) to private", "Update PrimitiveType: void(197) to boolean", "Update SimpleName: afterPropertiesSet(198) to isAuthzAnnotationPresent", "Insert SingleVariableDeclaration(238) into MethodDeclaration(270) at 3", "Insert Block(269) into MethodDeclaration(270) at 4", "Insert StringLiteral: \"unchecked\"(24) into ArrayInitializer(25) at 0", "Insert ParameterizedType: Class<? extends Annotation>(53) into ArrayType: Class<? extends Annotation>[](55) at 0", "Insert Dimension(54) into ArrayType: Class<? extends Annotation>[](55) at 1", "Insert SimpleName: AUTHZ_ANNOTATION_CLASSES(56) into VariableDeclarationFragment(78) at 0", "Insert ArrayCreation(77) into VariableDeclarationFragment(78) at 1", "Insert ExpressionStatement(97) into Block(98) at 0", "Insert VariableDeclarationStatement(188) into Block(230) at 0", "Insert IfStatement(195) into Block(230) at 1", "Insert IfStatement(227) into Block(230) at 2", "Insert ReturnStatement(229) into Block(230) at 3", "Insert SimpleType: Method(236) into SingleVariableDeclaration(238) at 0", "Insert SimpleName: method(237) into SingleVariableDeclaration(238) at 1", "Insert EnhancedForStatement(266) into Block(269) at 0", "Insert ReturnStatement(268) into Block(269) at 1", "Insert SimpleType: Class(49) into ParameterizedType: Class<? extends Annotation>(53) at 0", "Insert WildcardType: ? extends Annotation(52) into ParameterizedType: Class<? extends Annotation>(53) at 1", "Insert ArrayType: Class[](60) into ArrayCreation(77) at 0", "Insert ArrayInitializer(76) into ArrayCreation(77) at 1", "Insert MethodInvocation(96) into ExpressionStatement(97) at 0", "Insert SimpleType: Method(184) into VariableDeclarationStatement(188) at 0", "Insert VariableDeclarationFragment(187) into VariableDeclarationStatement(188) at 1", "Insert MethodInvocation(191) into IfStatement(195) at 0", "Insert Block(194) into IfStatement(195) at 1", "Insert InfixExpression: !=(198) into IfStatement(227) at 0", "Insert Block(226) into IfStatement(227) at 1", "Insert BooleanLiteral: false(228) into ReturnStatement(229) at 0", "Update SimpleName: Exception(199) to Method", "Move SimpleName: Exception(199) into SimpleType: Method(236) at 0", "Insert SingleVariableDeclaration(246) into EnhancedForStatement(266) at 0", "Insert SimpleName: AUTHZ_ANNOTATION_CLASSES(247) into EnhancedForStatement(266) at 1", "Insert Block(265) into EnhancedForStatement(266) at 2", "Insert BooleanLiteral: false(267) into ReturnStatement(268) at 0", "Insert SimpleName: Class(48) into SimpleType: Class(49) at 0", "Insert SimpleType: Annotation(51) into WildcardType: ? extends Annotation(52) at 0", "Insert SimpleType: Class(58) into ArrayType: Class[](60) at 0", "Insert Dimension(59) into ArrayType: Class[](60) at 1", "Move TypeLiteral(150) into ArrayInitializer(76) at 0", "Move TypeLiteral(159) into ArrayInitializer(76) at 1", "Move TypeLiteral(168) into ArrayInitializer(76) at 2", "Move TypeLiteral(177) into ArrayInitializer(76) at 3", "Move TypeLiteral(186) into ArrayInitializer(76) at 4", "Insert SimpleName: setAdvice(92) into MethodInvocation(96) at 0", "Move ClassInstanceCreation(230) into MethodInvocation(96) at 1", "Insert SimpleName: Method(183) into SimpleType: Method(184) at 0", "Insert SimpleName: m(185) into VariableDeclarationFragment(187) at 0", "Insert SimpleName: method(186) into VariableDeclarationFragment(187) at 1", "Update SimpleName: getAnnotation(147) to isAuthzAnnotationPresent", "Move SimpleName: getAnnotation(147) into MethodInvocation(191) at 0", "Insert SimpleName: m(190) into MethodInvocation(191) at 1", "Insert ReturnStatement(193) into Block(194) at 0", "Insert SimpleName: targetClass(196) into InfixExpression: !=(198) at 0", "Move NullLiteral(161) into InfixExpression: !=(198) at 1", "Insert TryStatement(225) into Block(226) at 0", "Insert ParameterizedType: Class<? extends Annotation>(244) into SingleVariableDeclaration(246) at 0", "Insert SimpleName: annClass(245) into SingleVariableDeclaration(246) at 1", "Insert VariableDeclarationStatement(257) into Block(265) at 0", "Insert IfStatement(264) into Block(265) at 1", "Update SimpleName: InitializingBean(33) to Annotation", "Move SimpleName: InitializingBean(33) into SimpleType: Annotation(51) at 0", "Insert SimpleName: Class(57) into SimpleType: Class(58) at 0", "Insert BooleanLiteral: true(192) into ReturnStatement(193) at 0", "Insert Block(218) into TryStatement(225) at 0", "Insert CatchClause(224) into TryStatement(225) at 1", "Insert SimpleType: Class(240) into ParameterizedType: Class<? extends Annotation>(244) at 0", "Insert WildcardType: ? extends Annotation(243) into ParameterizedType: Class<? extends Annotation>(244) at 1", "Insert SimpleType: Annotation(249) into VariableDeclarationStatement(257) at 0", "Insert VariableDeclarationFragment(256) into VariableDeclarationStatement(257) at 1", "Insert InfixExpression: !=(260) into IfStatement(264) at 0", "Insert Block(263) into IfStatement(264) at 1", "Insert ExpressionStatement(210) into Block(218) at 0", "Insert IfStatement(217) into Block(218) at 1", "Insert SingleVariableDeclaration(222) into CatchClause(224) at 0", "Insert Block(223) into CatchClause(224) at 1", "Insert SimpleName: Class(239) into SimpleType: Class(240) at 0", "Insert SimpleType: Annotation(242) into WildcardType: ? extends Annotation(243) at 0", "Update SimpleName: AopAllianceAnnotationsAuthorizingMethodInterceptor(214) to Annotation", "Move SimpleName: AopAllianceAnnotationsAuthorizingMethodInterceptor(214) into SimpleType: Annotation(249) at 0", "Insert SimpleName: a(250) into VariableDeclarationFragment(256) at 0", "Insert MethodInvocation(255) into VariableDeclarationFragment(256) at 1", "Insert SimpleName: a(258) into InfixExpression: !=(260) at 0", "Insert NullLiteral(259) into InfixExpression: !=(260) at 1", "Insert ReturnStatement(262) into Block(263) at 0", "Insert Assignment: =(209) into ExpressionStatement(210) at 0", "Insert MethodInvocation(213) into IfStatement(217) at 0", "Insert Block(216) into IfStatement(217) at 1", "Insert SimpleType: NoSuchMethodException(220) into SingleVariableDeclaration(222) at 0", "Insert SimpleName: ignored(221) into SingleVariableDeclaration(222) at 1", "Insert SimpleName: Annotation(241) into SimpleType: Annotation(242) at 0", "Insert SimpleName: AnnotationUtils(251) into MethodInvocation(255) at 0", "Insert SimpleName: findAnnotation(252) into MethodInvocation(255) at 1", "Update SimpleName: setAdvice(233) to method", "Move SimpleName: setAdvice(233) into MethodInvocation(255) at 2", "Update SimpleName: interceptor(234) to annClass", "Move SimpleName: interceptor(234) into MethodInvocation(255) at 3", "Insert BooleanLiteral: true(261) into ReturnStatement(262) at 0", "Insert SimpleName: m(199) into Assignment: =(209) at 0", "Insert MethodInvocation(208) into Assignment: =(209) at 1", "Update SimpleName: method(182) to isAuthzAnnotationPresent", "Move SimpleName: method(182) into MethodInvocation(213) at 0", "Update SimpleName: getAnnotation(183) to m", "Move SimpleName: getAnnotation(183) into MethodInvocation(213) at 1", "Insert ReturnStatement(215) into Block(216) at 0", "Insert SimpleName: NoSuchMethodException(219) into SimpleType: NoSuchMethodException(220) at 0", "Insert SimpleName: targetClass(200) into MethodInvocation(208) at 0", "Insert SimpleName: getMethod(201) into MethodInvocation(208) at 1", "Insert MethodInvocation(204) into MethodInvocation(208) at 2", "Insert MethodInvocation(207) into MethodInvocation(208) at 3", "Insert BooleanLiteral: true(214) into ReturnStatement(215) at 0", "Update SimpleName: method(164) to m", "Move SimpleName: method(164) into MethodInvocation(204) at 0", "Update SimpleName: getAnnotation(165) to getName", "Move SimpleName: getAnnotation(165) into MethodInvocation(204) at 1", "Update SimpleName: method(173) to m", "Move SimpleName: method(173) into MethodInvocation(207) at 0", "Update SimpleName: getAnnotation(174) to getParameterTypes", "Move SimpleName: getAnnotation(174) into MethodInvocation(207) at 1", "Delete QualifiedName: org.springframework.beans.factory.InitializingBean(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.shiro.authz.annotation.RequiresAuthentication(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: org.apache.shiro.authz.annotation.RequiresRoles(18)", "Delete ImportDeclaration(19)", "Delete SimpleType: InitializingBean(34)", "Delete SimpleName: method(146)", "Delete MethodInvocation(151)", "Delete NullLiteral(152)", "Delete InfixExpression: !=(153)", "Delete ParenthesizedExpression(154)", "Delete SimpleName: method(155)", "Delete SimpleName: getAnnotation(156)", "Delete MethodInvocation(160)", "Delete InfixExpression: !=(162)", "Delete ParenthesizedExpression(163)", "Delete MethodInvocation(169)", "Delete NullLiteral(170)", "Delete InfixExpression: !=(171)", "Delete ParenthesizedExpression(172)", "Delete MethodInvocation(178)", "Delete NullLiteral(179)", "Delete InfixExpression: !=(180)", "Delete ParenthesizedExpression(181)", "Delete MethodInvocation(187)", "Delete NullLiteral(188)", "Delete InfixExpression: !=(189)", "Delete ParenthesizedExpression(190)", "Delete InfixExpression: ||(191)", "Delete ParenthesizedExpression(192)", "Delete ReturnStatement(193)", "Delete SimpleType: Exception(200)", "Delete SimpleName: getAdvice(201)", "Delete MethodInvocation(202)", "Delete NullLiteral(203)", "Delete InfixExpression: ==(204)", "Delete SimpleName: log(205)", "Delete SimpleName: isTraceEnabled(206)", "Delete MethodInvocation(207)", "Delete SimpleName: log(208)", "Delete SimpleName: trace(209)", "Delete StringLiteral: \"No authorization advice explicitly configured via the 'advice' \"(210)", "Delete StringLiteral: \"property.  Attempting to set \"(211)", "Delete StringLiteral: \"default instance of type [\"(212)", "Delete InfixExpression: +(213)", "Delete SimpleType: AopAllianceAnnotationsAuthorizingMethodInterceptor(215)", "Delete TypeLiteral(216)", "Delete SimpleName: getName(217)", "Delete MethodInvocation(218)", "Delete StringLiteral: \"]\"(219)", "Delete InfixExpression: +(220)", "Delete MethodInvocation(221)", "Delete ExpressionStatement(222)", "Delete Block(223)", "Delete IfStatement(224)", "Delete SimpleName: AopAllianceAnnotationsAuthorizingMethodInterceptor(225)", "Delete SimpleType: AopAllianceAnnotationsAuthorizingMethodInterceptor(226)", "Delete SimpleName: interceptor(227)", "Delete VariableDeclarationFragment(231)", "Delete VariableDeclarationStatement(232)", "Delete MethodInvocation(235)", "Delete ExpressionStatement(236)", "Delete Block(237)", "Delete IfStatement(238)", "Delete Block(239)"]}}], "commit_stats": [{"total_files": 23, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "True"}]}