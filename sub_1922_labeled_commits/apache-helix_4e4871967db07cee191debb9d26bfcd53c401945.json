{"application": "apache-helix", "csha": "4e4871967db07cee191debb9d26bfcd53c401945", "files": [{"ConfigAccessor_cluster": {"actions": [{"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 6"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 6"]}, {"root": "INS TextElement: <<<<<<< HEAD to TagElement at 0", "operations": ["INS TextElement: <<<<<<< HEAD to TagElement at 0"]}, {"root": "UPDATE from zkClient to getConfigZnRecord", "operations": ["UPD SimpleName: zkClient from zkClient to getConfigZnRecord"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: scope to MethodInvocation at 1"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL SimpleName: scope", "DEL SimpleName: clusterName", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: getClusterName", "DEL SimpleType: String"]}, {"root": "DEL IfStatement", "operations": ["DEL StringLiteral: \"fail to get configs. cluster \"", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL StringLiteral: \" is not setup yet\"", "DEL SimpleName: clusterName", "DEL ThrowStatement", "DEL SimpleName: clusterName", "DEL IfStatement", "DEL Block", "DEL SimpleName: HelixException", "DEL SimpleName: isClusterSetup", "DEL SimpleName: zkClient", "DEL SimpleType: HelixException", "DEL PrefixExpression: !", "DEL SimpleName: ZKUtil"]}, {"root": "DEL SimpleName: readData", "operations": ["DEL SimpleName: readData"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getZkPath"]}, {"root": "DEL BooleanLiteral: true", "operations": ["DEL BooleanLiteral: true"]}]}}, {"ConfigAccessor_diff": {"operations": ["Move VariableDeclarationStatement(576) into Block(675) at 6", "Move VariableDeclarationStatement(1216) into Block(1249) at 6", "Insert TextElement: <<<<<<< HEAD(2475) into TagElement(2479) at 0", "Update SimpleName: zkClient(580) to getConfigZnRecord", "Move SimpleName: scope(582) into MethodInvocation(540) at 1", "Delete SimpleName: String(535)", "Delete SimpleType: String(536)", "Delete SimpleName: clusterName(537)", "Delete SimpleName: scope(538)", "Delete SimpleName: getClusterName(539)", "Delete MethodInvocation(540)", "Delete VariableDeclarationFragment(541)", "Delete VariableDeclarationStatement(542)", "Delete SimpleName: ZKUtil(543)", "Delete SimpleName: isClusterSetup(544)", "Delete SimpleName: clusterName(545)", "Delete SimpleName: zkClient(546)", "Delete MethodInvocation(547)", "Delete PrefixExpression: !(548)", "Delete SimpleName: HelixException(549)", "Delete SimpleType: HelixException(550)", "Delete StringLiteral: \"fail to get configs. cluster \"(551)", "Delete SimpleName: clusterName(552)", "Delete StringLiteral: \" is not setup yet\"(553)", "Delete InfixExpression: +(554)", "Delete ClassInstanceCreation(555)", "Delete ThrowStatement(556)", "Delete Block(557)", "Delete IfStatement(558)", "Delete SimpleName: readData(581)", "Delete SimpleName: getZkPath(583)", "Delete MethodInvocation(584)", "Delete BooleanLiteral: true(585)"]}}, {"ClusterConfig_cluster": {"actions": [{"root": "MOVE from EnumDeclaration", "operations": ["MOV EnumConstantDeclaration to EnumDeclaration at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS BooleanLiteral: false to MethodInvocation at 3", "INS SimpleName: toString to MethodInvocation at 1", "INS QualifiedName: ClusterConfigProperty.PERSIST_INTERMEDIATE_ASSIGNMENT to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: isPersistIntermediateAssignment to MethodDeclaration at 3", "INS TagElement: @return to Javadoc at 1", "INS SimpleName: getBooleanField to MethodInvocation at 1", "INS Javadoc to MethodDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS TextElement: Whether to persist IntermediateAssignment in a resource's idealstate. to TagElement at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: Boolean to MethodDeclaration at 2", "INS TagElement to Javadoc at 0", "INS SimpleName: _record to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 10"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: enable to SingleVariableDeclaration at 1", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: enable to InfixExpression: == at 0", "INS TextElement: Enable/Disable persist IntermediateAssignment in a resource's idealstate. to TagElement at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: enable to MethodInvocation at 3", "INS SimpleName: setPersistIntermediateAssignment to MethodDeclaration at 3", "INS SimpleName: setBooleanField to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: toString to MethodInvocation at 1", "INS TagElement: @return to Javadoc at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS SimpleName: _record to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS Javadoc to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 2", "INS IfStatement to Block at 0", "INS SimpleName: getSimpleFields to MethodInvocation at 1", "INS Block to IfStatement at 2", "INS Block to MethodDeclaration at 5", "INS QualifiedName: ClusterConfigProperty.PERSIST_INTERMEDIATE_ASSIGNMENT to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: _record to MethodInvocation at 0", "INS NullLiteral to InfixExpression: == at 1", "INS QualifiedName: ClusterConfigProperty.PERSIST_INTERMEDIATE_ASSIGNMENT to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: Boolean to SingleVariableDeclaration at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: remove to MethodInvocation at 1"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 5", "operations": ["INS SimpleName: PERSIST_INTERMEDIATE_ASSIGNMENT to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 5"]}, {"root": "DEL Javadoc", "operations": ["DEL Javadoc", "DEL TagElement: @return"]}]}}, {"ClusterConfig_diff": {"operations": ["Move EnumConstantDeclaration(29) into EnumDeclaration(46) at 6", "Insert MethodDeclaration(158) into TypeDeclaration: class(512) at 10", "Insert MethodDeclaration(194) into TypeDeclaration: class(512) at 11", "Insert EnumConstantDeclaration(31) into EnumDeclaration(46) at 5", "Insert Javadoc(144) into MethodDeclaration(158) at 0", "Insert Modifier: public(145) into MethodDeclaration(158) at 1", "Insert SimpleType: Boolean(147) into MethodDeclaration(158) at 2", "Insert SimpleName: isPersistIntermediateAssignment(148) into MethodDeclaration(158) at 3", "Insert Block(157) into MethodDeclaration(158) at 4", "Insert Javadoc(162) into MethodDeclaration(194) at 0", "Insert Modifier: public(163) into MethodDeclaration(194) at 1", "Insert PrimitiveType: void(164) into MethodDeclaration(194) at 2", "Insert SimpleName: setPersistIntermediateAssignment(165) into MethodDeclaration(194) at 3", "Insert SingleVariableDeclaration(169) into MethodDeclaration(194) at 4", "Insert Block(193) into MethodDeclaration(194) at 5", "Insert SimpleName: PERSIST_INTERMEDIATE_ASSIGNMENT(30) into EnumConstantDeclaration(31) at 0", "Insert TagElement(142) into Javadoc(144) at 0", "Insert TagElement: @return(143) into Javadoc(144) at 1", "Insert SimpleName: Boolean(146) into SimpleType: Boolean(147) at 0", "Insert ReturnStatement(156) into Block(157) at 0", "Insert TagElement(160) into Javadoc(162) at 0", "Insert TagElement: @return(161) into Javadoc(162) at 1", "Insert SimpleType: Boolean(167) into SingleVariableDeclaration(169) at 0", "Insert SimpleName: enable(168) into SingleVariableDeclaration(169) at 1", "Insert IfStatement(192) into Block(193) at 0", "Insert TextElement: Whether to persist IntermediateAssignment in a resource's idealstate.(141) into TagElement(142) at 0", "Insert MethodInvocation(155) into ReturnStatement(156) at 0", "Insert TextElement: Enable/Disable persist IntermediateAssignment in a resource's idealstate.(159) into TagElement(160) at 0", "Insert SimpleName: Boolean(166) into SimpleType: Boolean(167) at 0", "Insert InfixExpression: ==(172) into IfStatement(192) at 0", "Insert Block(182) into IfStatement(192) at 1", "Insert Block(191) into IfStatement(192) at 2", "Insert SimpleName: _record(149) into MethodInvocation(155) at 0", "Insert SimpleName: getBooleanField(150) into MethodInvocation(155) at 1", "Insert MethodInvocation(153) into MethodInvocation(155) at 2", "Insert BooleanLiteral: false(154) into MethodInvocation(155) at 3", "Insert SimpleName: enable(170) into InfixExpression: ==(172) at 0", "Insert NullLiteral(171) into InfixExpression: ==(172) at 1", "Insert ExpressionStatement(181) into Block(182) at 0", "Insert ExpressionStatement(190) into Block(191) at 0", "Insert QualifiedName: ClusterConfigProperty.PERSIST_INTERMEDIATE_ASSIGNMENT(151) into MethodInvocation(153) at 0", "Insert SimpleName: toString(152) into MethodInvocation(153) at 1", "Insert MethodInvocation(180) into ExpressionStatement(181) at 0", "Insert MethodInvocation(189) into ExpressionStatement(190) at 0", "Insert MethodInvocation(175) into MethodInvocation(180) at 0", "Insert SimpleName: remove(176) into MethodInvocation(180) at 1", "Insert MethodInvocation(179) into MethodInvocation(180) at 2", "Insert SimpleName: _record(183) into MethodInvocation(189) at 0", "Insert SimpleName: setBooleanField(184) into MethodInvocation(189) at 1", "Insert MethodInvocation(187) into MethodInvocation(189) at 2", "Insert SimpleName: enable(188) into MethodInvocation(189) at 3", "Insert SimpleName: _record(173) into MethodInvocation(175) at 0", "Insert SimpleName: getSimpleFields(174) into MethodInvocation(175) at 1", "Insert QualifiedName: ClusterConfigProperty.PERSIST_INTERMEDIATE_ASSIGNMENT(177) into MethodInvocation(179) at 0", "Insert SimpleName: toString(178) into MethodInvocation(179) at 1", "Insert QualifiedName: ClusterConfigProperty.PERSIST_INTERMEDIATE_ASSIGNMENT(185) into MethodInvocation(187) at 0", "Insert SimpleName: toString(186) into MethodInvocation(187) at 1", "Delete TagElement: @return(139)", "Delete Javadoc(140)"]}}, {"ClusterExternalViewVerifier_cluster": {"actions": [{"root": "UPDATE from This class is deprecated, please use BestPossibleExternalViewVerifier in tools.ClusterVerifiers instead. to This class is deprecated, please use BestPossibleExternalViewVerifier in tools.ClusterVerifiers", "operations": ["UPD TextElement: This class is deprecated, please use BestPossibleExternalViewVerifier in tools.ClusterVerifiers instead. from This class is deprecated, please use BestPossibleExternalViewVerifier in tools.ClusterVerifiers instead. to This class is deprecated, please use BestPossibleExternalViewVerifier in tools.ClusterVerifiers"]}, {"root": "INS TextElement: instead. to TagElement at 1", "operations": ["INS TextElement: instead. to TagElement at 1"]}]}}, {"ClusterExternalViewVerifier_diff": {"operations": ["Update TextElement: This class is deprecated, please use BestPossibleExternalViewVerifier in tools.ClusterVerifiers instead.(6) to This class is deprecated, please use BestPossibleExternalViewVerifier in tools.ClusterVerifiers", "Insert TextElement: instead.(7) into TagElement(8) at 1"]}}, {"ClusterStateVerifier_cluster": {"actions": []}}, {"ClusterStateVerifier_diff": {"operations": []}}, {"StateTransitionThrottleConfig_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 9"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 5", "operations": ["INS EnumConstantDeclaration to EnumDeclaration at 5", "INS SimpleName: MAX_PARTITION_IN_TRANSITION to EnumConstantDeclaration at 0"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV SimpleType: Long to FieldDeclaration at 0"]}, {"root": "INS SimpleName: StateTransitionThrottleConfig to MethodDeclaration at 2", "operations": ["INS SimpleName: StateTransitionThrottleConfig to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS SimpleType: RebalanceType to MethodDeclaration at 2", "operations": ["INS SimpleType: RebalanceType to MethodDeclaration at 2"]}, {"root": "INS SimpleName: getRebalanceType to MethodDeclaration at 3", "operations": ["INS SimpleName: getRebalanceType to MethodDeclaration at 3"]}, {"root": "UPDATE from StateTransitionThrottleConfig to ThrottleScope", "operations": ["UPD SimpleType: StateTransitionThrottleConfig from StateTransitionThrottleConfig to ThrottleScope", "UPD SimpleName: StateTransitionThrottleConfig from StateTransitionThrottleConfig to ThrottleScope"]}, {"root": "UPDATE from addThrottleFromAnyState to getThrottleScope", "operations": ["UPD SimpleName: addThrottleFromAnyState from addThrottleFromAnyState to getThrottleScope"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Long to MethodDeclaration at 2"]}, {"root": "INS SimpleName: getMaxPartitionInTransition to MethodDeclaration at 3", "operations": ["INS SimpleName: getMaxPartitionInTransition to MethodDeclaration at 3"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS Block to MethodDeclaration at 6"]}, {"root": "UPDATE from e to _maxPartitionInTransition", "operations": ["UPD SimpleName: e from e to _maxPartitionInTransition", "UPD SimpleName: _maxPendingStateTransitionMap from _maxPendingStateTransitionMap to _maxPartitionInTransition"]}, {"root": "UPDATE from maxPendingStateTransition to maxPartitionInTransition", "operations": ["UPD SimpleName: maxPendingStateTransition from maxPendingStateTransition to maxPartitionInTransition"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from StateTransitionType to RebalanceType", "operations": ["UPD SimpleName: StateTransitionType from StateTransitionType to RebalanceType"]}, {"root": "MOVE from SimpleType: RebalanceType", "operations": ["MOV SimpleName: StateTransitionType to SimpleType: RebalanceType at 0"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: _rebalanceType to ReturnStatement at 0"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: _throttleScope to ReturnStatement at 0"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: _maxPartitionInTransition to ReturnStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 3", "MOV TryStatement to Block at 2", "MOV IfStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: _maxPartitionInTransition to Assignment: = at 0", "INS SimpleName: maxPartitionInTransition to Assignment: = at 1"]}, {"root": "UPDATE from  StateTransitionThrottleConfig or null if the given configs map is not a valid StateTransitionThrottleConfig. to  StateTransitionThrottleConfig or null if the given configs map is not a valid", "operations": ["UPD TextElement:  StateTransitionThrottleConfig or null if the given configs map is not a valid StateTransitionThrottleConfig. from  StateTransitionThrottleConfig or null if the given configs map is not a valid StateTransitionThrottleConfig. to  StateTransitionThrottleConfig or null if the given configs map is not a valid"]}, {"root": "INS TextElement: StateTransitionThrottleConfig. to TagElement: @return at 1", "operations": ["INS TextElement: StateTransitionThrottleConfig. to TagElement: @return at 1"]}, {"root": "UPDATE from configsMap to configMap", "operations": ["UPD SimpleName: configsMap from configsMap to configMap", "UPD SimpleName: configsMap from configsMap to configMap", "UPD SimpleName: configsMap from configsMap to configMap", "UPD SimpleName: configsMap from configsMap to configMap", "UPD SimpleName: configsMap from configsMap to configMap", "UPD SimpleName: configsMap from configsMap to configMap"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: valueOf to MethodInvocation at 1", "INS SimpleName: Long to MethodInvocation at 0", "INS SimpleName: maxPartition to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: name to MethodInvocation at 1", "INS SimpleName: configsMap to MethodInvocation at 0", "INS QualifiedName: ConfigProperty.MAX_PARTITION_IN_TRANSITION to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: get to MethodInvocation at 1"]}, {"root": "INS QualifiedName: ConfigProperty.MAX_PARTITION_IN_TRANSITION to MethodInvocation at 0", "operations": ["INS QualifiedName: ConfigProperty.MAX_PARTITION_IN_TRANSITION to MethodInvocation at 0"]}, {"root": "UPDATE from e to name", "operations": ["UPD SimpleName: e from e to name"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: e to MethodInvocation at 2"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: Long to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleName: maxPartition to ClassInstanceCreation at 3", "operations": ["INS SimpleName: maxPartition to ClassInstanceCreation at 3"]}, {"root": "DEL EnumConstantDeclaration", "operations": ["DEL EnumConstantDeclaration", "DEL SimpleName: PARTITION"]}, {"root": "DEL EnumConstantDeclaration", "operations": ["DEL SimpleName: ANY", "DEL EnumConstantDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: StateTransitionType", "DEL StringLiteral: \"*\"", "DEL ReturnStatement", "DEL SimpleType: String", "DEL ClassInstanceCreation", "DEL StringLiteral: \"to\"", "DEL SimpleName: _fromState", "DEL SimpleName: states", "DEL SimpleName: String", "DEL NumberLiteral: 2", "DEL SimpleName: stateTransTypeStr", "DEL NullLiteral", "DEL SimpleName: fromState", "DEL Modifier: final", "DEL SimpleName: String", "DEL SimpleName: _toState", "DEL Modifier: static", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL SimpleName: parseFromString", "DEL PrefixExpression: !", "DEL FieldDeclaration", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL Modifier: static", "DEL NumberLiteral: 3", "DEL SimpleType: StateTransitionType", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: states", "DEL FieldDeclaration", "DEL SimpleType: String", "DEL SimpleName: states", "DEL StringLiteral: \"from\"", "DEL StringLiteral: \".\"", "DEL NumberLiteral: 4", "DEL SimpleType: String", "DEL ArrayAccess", "DEL SimpleName: String", "DEL ReturnStatement", "DEL Modifier: final", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: stateTransTypeStr", "DEL SimpleName: String", "DEL StringLiteral: \".\"", "DEL ArrayAccess", "DEL SimpleName: TO_KEY", "DEL SimpleName: String", "DEL ArrayAccess", "DEL Dimension", "DEL PrefixExpression: !", "DEL SimpleName: String", "DEL StringLiteral: \".\"", "DEL SimpleType: String", "DEL SimpleName: toString", "DEL SimpleName: states", "DEL SimpleName: fromState", "DEL ArrayAccess", "DEL SimpleName: FROM_KEY", "DEL Assignment: =", "DEL FieldDeclaration", "DEL SimpleName: _toState", "DEL SimpleName: String", "DEL SimpleName: String", "DEL SimpleName: _fromState", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL SimpleName: String", "DEL IfStatement", "DEL Block", "DEL Modifier: static", "DEL MethodDeclaration", "DEL SimpleName: ANY_STATE", "DEL SimpleName: split", "DEL VariableDeclarationFragment", "DEL SimpleName: equalsIgnoreCase", "DEL Modifier: public", "DEL MarkerAnnotation", "DEL SimpleName: TO_KEY", "DEL InfixExpression: ||", "DEL Block", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleType: String", "DEL NumberLiteral: 1", "DEL SimpleName: toState", "DEL SimpleName: _toState", "DEL SimpleName: _fromState", "DEL SimpleName: TO_KEY", "DEL StringLiteral: \".\"", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL QualifiedName: states.length", "DEL FieldDeclaration", "DEL Modifier: final", "DEL SimpleType: String", "DEL SimpleName: toState", "DEL SingleVariableDeclaration", "DEL SimpleName: Override", "DEL MethodInvocation", "DEL SimpleName: FROM_KEY", "DEL SimpleName: StateTransitionType", "DEL TypeDeclaration: class", "DEL Modifier: static", "DEL VariableDeclarationStatement", "DEL SimpleName: StateTransitionType", "DEL InfixExpression: +", "DEL SimpleName: FROM_KEY", "DEL SimpleName: states", "DEL Modifier: public", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL InfixExpression: <", "DEL Modifier: public", "DEL NumberLiteral: 0", "DEL Assignment: =", "DEL SingleVariableDeclaration", "DEL SimpleName: equalsIgnoreCase", "DEL SimpleName: StateTransitionType", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleType: StateTransitionType", "DEL MethodDeclaration", "DEL SimpleType: String", "DEL InfixExpression: ||"]}, {"root": "DEL Modifier: private", "operations": ["DEL Modifier: private"]}, {"root": "DEL Modifier: private", "operations": ["DEL Modifier: private"]}, {"root": "DEL Modifier: private", "operations": ["DEL Modifier: private"]}, {"root": "DEL ParameterizedType: Map<StateTransitionType,Long>", "operations": ["DEL SimpleType: StateTransitionType", "DEL SimpleType: Map", "DEL SimpleName: StateTransitionType", "DEL SimpleName: Map", "DEL ParameterizedType: Map<StateTransitionType,Long>"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: HashMap", "DEL SimpleName: StateTransitionThrottleConfig", "DEL SimpleName: HashMap", "DEL Modifier: public", "DEL Block", "DEL MethodDeclaration", "DEL ParameterizedType: HashMap<StateTransitionType,Long>", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL Assignment: =", "DEL SimpleType: StateTransitionType", "DEL SimpleName: _maxPendingStateTransitionMap", "DEL SimpleName: StateTransitionType"]}, {"root": "DEL Javadoc", "operations": ["DEL TagElement", "DEL SimpleName: fromState", "DEL SimpleName: maxPendingStateTransition", "DEL Javadoc", "DEL TextElement: Add a max pending transition from given from state to the specified to state.", "DEL TagElement: @return", "DEL TagElement: @param", "DEL TagElement: @param", "DEL TagElement: @param", "DEL SimpleName: toState"]}, {"root": "DEL SimpleType: StateTransitionThrottleConfig", "operations": ["DEL SimpleName: StateTransitionThrottleConfig", "DEL SimpleType: StateTransitionThrottleConfig"]}, {"root": "DEL SimpleName: addThrottle", "operations": ["DEL SimpleName: addThrottle"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: String", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL SimpleName: fromState"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: String", "DEL SimpleName: toState", "DEL SimpleType: String"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: fromState", "DEL SimpleName: toState", "DEL ClassInstanceCreation", "DEL SimpleName: _maxPendingStateTransitionMap", "DEL MethodInvocation", "DEL SimpleName: StateTransitionType", "DEL SimpleName: put", "DEL SimpleName: maxPendingStateTransition", "DEL SimpleType: StateTransitionType"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL ThisExpression"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TagElement: @return", "DEL ClassInstanceCreation", "DEL Block", "DEL SimpleType: StateTransitionType", "DEL SimpleType: StateTransitionThrottleConfig", "DEL SimpleName: maxPendingStateTransition", "DEL ExpressionStatement", "DEL Modifier: public", "DEL QualifiedName: StateTransitionType.ANY_STATE", "DEL PrimitiveType: long", "DEL ReturnStatement", "DEL SimpleName: addThrottle", "DEL SimpleName: StateTransitionType", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL QualifiedName: StateTransitionType.ANY_STATE", "DEL SimpleName: maxPendingStateTransition", "DEL ThisExpression", "DEL SimpleName: StateTransitionThrottleConfig", "DEL SimpleName: put", "DEL TextElement: Add a max pending transition from ANY state to ANY state.", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: _maxPendingStateTransitionMap", "DEL TagElement", "DEL Javadoc", "DEL SimpleName: maxPendingStateTransition"]}, {"root": "DEL Javadoc", "operations": ["DEL TagElement: @param", "DEL TagElement", "DEL TextElement: Add a max pending transition for a given state transition type.", "DEL Javadoc", "DEL SimpleName: maxPendingStateTransition", "DEL TagElement: @param", "DEL SimpleName: stateTransitionType", "DEL TagElement: @return"]}, {"root": "DEL SimpleType: StateTransitionThrottleConfig", "operations": ["DEL SimpleType: StateTransitionThrottleConfig", "DEL SimpleName: StateTransitionThrottleConfig"]}, {"root": "DEL SimpleName: addThrottle", "operations": ["DEL SimpleName: addThrottle"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleType: StateTransitionType", "DEL SimpleName: stateTransitionType"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: maxPendingStateTransition", "DEL SingleVariableDeclaration", "DEL PrimitiveType: long"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: _maxPendingStateTransitionMap", "DEL SimpleName: put", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: maxPendingStateTransition", "DEL SimpleName: stateTransitionType"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL ThisExpression"]}, {"root": "DEL Javadoc", "operations": ["DEL TagElement: @return", "DEL SimpleName: toState", "DEL Javadoc", "DEL TagElement", "DEL TagElement: @param", "DEL SimpleName: maxPendingStateTransition", "DEL TextElement: Add a max pending transition from ANY state to the specified state.", "DEL TagElement: @param"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: String", "DEL SimpleName: toState", "DEL SingleVariableDeclaration", "DEL SimpleType: String"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: maxPendingStateTransition", "DEL PrimitiveType: long", "DEL SingleVariableDeclaration"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: maxPendingStateTransition", "DEL SimpleName: StateTransitionType", "DEL SimpleName: put", "DEL SimpleName: _maxPendingStateTransitionMap", "DEL QualifiedName: StateTransitionType.ANY_STATE", "DEL SimpleType: StateTransitionType", "DEL ClassInstanceCreation", "DEL SimpleName: toState"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL ThisExpression"]}, {"root": "DEL Javadoc", "operations": ["DEL Javadoc", "DEL TagElement: @param", "DEL TagElement: @return", "DEL SimpleName: fromState", "DEL TagElement: @param", "DEL TextElement: Add a max pending transition from given state to ANY state.", "DEL SimpleName: maxPendingStateTransition", "DEL TagElement"]}, {"root": "DEL SimpleType: StateTransitionThrottleConfig", "operations": ["DEL SimpleType: StateTransitionThrottleConfig", "DEL SimpleName: StateTransitionThrottleConfig"]}, {"root": "DEL SimpleName: addThrottleToAnyState", "operations": ["DEL SimpleName: addThrottleToAnyState"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL SimpleName: fromState", "DEL SimpleName: String"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: maxPendingStateTransition", "DEL PrimitiveType: long", "DEL SingleVariableDeclaration"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: maxPendingStateTransition", "DEL SimpleType: StateTransitionType", "DEL SimpleName: StateTransitionType", "DEL SimpleName: _maxPendingStateTransitionMap", "DEL SimpleName: put", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL QualifiedName: StateTransitionType.ANY_STATE", "DEL SimpleName: fromState"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL ThisExpression"]}, {"root": "DEL SimpleName: getKey", "operations": ["DEL SimpleName: getKey"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: toString"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getValue", "DEL MethodInvocation"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL SimpleName: StateTransitionType", "DEL MethodInvocation", "DEL SimpleType: StateTransitionType", "DEL EnhancedForStatement", "DEL SimpleName: e", "DEL Block", "DEL SimpleType: Map.Entry", "DEL SingleVariableDeclaration", "DEL QualifiedName: Map.Entry", "DEL ParameterizedType: Map.Entry<StateTransitionType,Long>", "DEL SimpleName: entrySet", "DEL SimpleName: _maxPendingStateTransitionMap"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: configsMap", "DEL StringLiteral: \"Invalid config entry, key=%s, value=%s\"", "DEL SimpleName: value", "DEL SimpleName: configKey", "DEL SimpleName: configsMap", "DEL ExpressionStatement", "DEL Block", "DEL VariableDeclarationStatement", "DEL Block", "DEL Block", "DEL SimpleName: StateTransitionType", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: Long", "DEL SimpleName: String", "DEL SimpleName: get", "DEL SingleVariableDeclaration", "DEL SimpleName: NumberFormatException", "DEL SimpleName: ex", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: logger", "DEL IfStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: get", "DEL SimpleName: String", "DEL SimpleName: value", "DEL SimpleName: transitionType", "DEL SimpleName: StateTransitionType", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: warn", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: parseFromString", "DEL SimpleName: configKey", "DEL SimpleType: String", "DEL SimpleName: keySet", "DEL SimpleName: configKey", "DEL CatchClause", "DEL MethodInvocation", "DEL SimpleName: configKey", "DEL EnhancedForStatement", "DEL Block", "DEL NullLiteral", "DEL TryStatement", "DEL SimpleType: NumberFormatException", "DEL SimpleName: transitionType", "DEL SimpleName: addThrottle", "DEL PrimitiveType: long", "DEL SimpleName: configKey", "DEL SimpleName: valueOf", "DEL SimpleName: configsMap", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: config", "DEL SimpleType: StateTransitionType", "DEL SimpleName: format", "DEL SimpleName: transitionType"]}]}}, {"StateTransitionThrottleConfig_diff": {"operations": ["Move FieldDeclaration(196) into TypeDeclaration: class(419) at 9", "Insert EnumConstantDeclaration(43) into EnumDeclaration(44) at 5", "Move SimpleType: Long(238) into FieldDeclaration(75) at 0", "Insert SimpleName: StateTransitionThrottleConfig(77) into MethodDeclaration(102) at 1", "Move SingleVariableDeclaration(219) into MethodDeclaration(102) at 3", "Move SingleVariableDeclaration(223) into MethodDeclaration(102) at 4", "Insert SimpleType: RebalanceType(105) into MethodDeclaration(110) at 1", "Insert SimpleName: getRebalanceType(106) into MethodDeclaration(110) at 2", "Update SimpleType: StateTransitionThrottleConfig(350) to ThrottleScope", "Update SimpleName: addThrottleFromAnyState(351) to getThrottleScope", "Move SimpleType: Long(209) into MethodDeclaration(126) at 2", "Insert SimpleName: getMaxPartitionInTransition(122) into MethodDeclaration(126) at 2", "Insert Block(417) into MethodDeclaration(418) at 6", "Insert SimpleName: MAX_PARTITION_IN_TRANSITION(42) into EnumConstantDeclaration(43) at 0", "Update SimpleName: _maxPendingStateTransitionMap(211) to _maxPartitionInTransition", "Update SimpleName: maxPendingStateTransition(268) to maxPartitionInTransition", "Move ExpressionStatement(227) into Block(101) at 0", "Move ExpressionStatement(231) into Block(101) at 1", "Update SimpleName: StateTransitionType(323) to RebalanceType", "Move SimpleName: StateTransitionType(323) into SimpleType: RebalanceType(105) at 0", "Insert ReturnStatement(108) into Block(109) at 0", "Update SimpleName: StateTransitionThrottleConfig(349) to ThrottleScope", "Insert ReturnStatement(116) into Block(117) at 0", "Insert ReturnStatement(124) into Block(125) at 0", "Move ExpressionStatement(490) into Block(234) at 3", "Move IfStatement(644) into Block(417) at 0", "Move VariableDeclarationStatement(649) into Block(417) at 1", "Move TryStatement(695) into Block(417) at 2", "Move ReturnStatement(758) into Block(417) at 3", "Insert Assignment: =(99) into ExpressionStatement(100) at 0", "Insert SimpleName: _rebalanceType(107) into ReturnStatement(108) at 0", "Insert SimpleName: _throttleScope(115) into ReturnStatement(116) at 0", "Insert SimpleName: _maxPartitionInTransition(123) into ReturnStatement(124) at 0", "Update TextElement:  StateTransitionThrottleConfig or null if the given configs map is not a valid StateTransitionThrottleConfig.(609) to  StateTransitionThrottleConfig or null if the given configs map is not a valid", "Insert TextElement: StateTransitionThrottleConfig.(313) into TagElement: @return(314) at 1", "Insert SimpleName: _maxPartitionInTransition(97) into Assignment: =(99) at 0", "Insert SimpleName: maxPartitionInTransition(98) into Assignment: =(99) at 1", "Update SimpleName: configsMap(433) to configMap", "Update SimpleName: configsMap(444) to configMap", "Update SimpleName: configsMap(454) to configMap", "Update SimpleName: configsMap(476) to configMap", "Move MethodInvocation(480) into MethodInvocation(194) at 2", "Insert VariableDeclarationStatement(395) into Block(405) at 2", "Insert QualifiedName: ConfigProperty.MAX_PARTITION_IN_TRANSITION(187) into MethodInvocation(189) at 0", "Update SimpleName: e(478) to name", "Update SimpleName: e(485) to _maxPartitionInTransition", "Move SimpleName: e(485) into MethodInvocation(193) at 2", "Move SimpleType: Long(469) into VariableDeclarationStatement(395) at 0", "Insert VariableDeclarationFragment(394) into VariableDeclarationStatement(395) at 1", "Insert SimpleName: maxPartition(384) into VariableDeclarationFragment(394) at 0", "Insert MethodInvocation(393) into VariableDeclarationFragment(394) at 1", "Update SimpleName: configsMap(510) to configMap", "Insert SimpleName: Long(385) into MethodInvocation(393) at 0", "Insert SimpleName: valueOf(386) into MethodInvocation(393) at 1", "Insert MethodInvocation(392) into MethodInvocation(393) at 2", "Insert SimpleName: maxPartition(401) into ClassInstanceCreation(402) at 3", "Update SimpleName: configsMap(522) to configMap", "Insert SimpleName: configsMap(387) into MethodInvocation(392) at 0", "Insert SimpleName: get(388) into MethodInvocation(392) at 1", "Insert MethodInvocation(391) into MethodInvocation(392) at 2", "Insert QualifiedName: ConfigProperty.MAX_PARTITION_IN_TRANSITION(389) into MethodInvocation(391) at 0", "Insert SimpleName: name(390) into MethodInvocation(391) at 1", "Delete SimpleName: PARTITION(51)", "Delete EnumConstantDeclaration(52)", "Delete SimpleName: ANY(60)", "Delete EnumConstantDeclaration(61)", "Delete Modifier: public(63)", "Delete Modifier: static(64)", "Delete SimpleName: StateTransitionType(65)", "Delete Modifier: final(66)", "Delete Modifier: static(67)", "Delete SimpleName: String(68)", "Delete SimpleType: String(69)", "Delete SimpleName: ANY_STATE(70)", "Delete StringLiteral: \"*\"(71)", "Delete VariableDeclarationFragment(72)", "Delete FieldDeclaration(73)", "Delete Modifier: final(74)", "Delete Modifier: static(75)", "Delete SimpleName: String(76)", "Delete SimpleType: String(77)", "Delete SimpleName: FROM_KEY(78)", "Delete StringLiteral: \"from\"(79)", "Delete VariableDeclarationFragment(80)", "Delete FieldDeclaration(81)", "Delete Modifier: final(82)", "Delete Modifier: static(83)", "Delete SimpleName: String(84)", "Delete SimpleType: String(85)", "Delete SimpleName: TO_KEY(86)", "Delete StringLiteral: \"to\"(87)", "Delete VariableDeclarationFragment(88)", "Delete FieldDeclaration(89)", "Delete SimpleName: String(90)", "Delete SimpleType: String(91)", "Delete SimpleName: _fromState(92)", "Delete VariableDeclarationFragment(93)", "Delete FieldDeclaration(94)", "Delete SimpleName: String(95)", "Delete SimpleType: String(96)", "Delete SimpleName: _toState(97)", "Delete VariableDeclarationFragment(98)", "Delete FieldDeclaration(99)", "Delete SimpleName: StateTransitionType(100)", "Delete SimpleName: String(101)", "Delete SimpleType: String(102)", "Delete SimpleName: fromState(103)", "Delete SingleVariableDeclaration(104)", "Delete SimpleName: String(105)", "Delete SimpleType: String(106)", "Delete SimpleName: toState(107)", "Delete SingleVariableDeclaration(108)", "Delete SimpleName: _fromState(109)", "Delete SimpleName: fromState(110)", "Delete Assignment: =(111)", "Delete ExpressionStatement(112)", "Delete SimpleName: _toState(113)", "Delete SimpleName: toState(114)", "Delete Assignment: =(115)", "Delete ExpressionStatement(116)", "Delete Block(117)", "Delete MethodDeclaration(118)", "Delete SimpleName: Override(119)", "Delete MarkerAnnotation(120)", "Delete Modifier: public(121)", "Delete SimpleName: String(122)", "Delete SimpleType: String(123)", "Delete SimpleName: toString(124)", "Delete SimpleName: FROM_KEY(125)", "Delete StringLiteral: \".\"(126)", "Delete SimpleName: _fromState(127)", "Delete StringLiteral: \".\"(128)", "Delete SimpleName: TO_KEY(129)", "Delete StringLiteral: \".\"(130)", "Delete SimpleName: _toState(131)", "Delete InfixExpression: +(132)", "Delete ReturnStatement(133)", "Delete Block(134)", "Delete MethodDeclaration(135)", "Delete Modifier: public(136)", "Delete Modifier: static(137)", "Delete SimpleName: StateTransitionType(138)", "Delete SimpleType: StateTransitionType(139)", "Delete SimpleName: parseFromString(140)", "Delete SimpleName: String(141)", "Delete SimpleType: String(142)", "Delete SimpleName: stateTransTypeStr(143)", "Delete SingleVariableDeclaration(144)", "Delete SimpleName: String(145)", "Delete SimpleType: String(146)", "Delete SimpleName: states(147)", "Delete Dimension(148)", "Delete SimpleName: stateTransTypeStr(149)", "Delete SimpleName: split(150)", "Delete StringLiteral: \".\"(151)", "Delete MethodInvocation(152)", "Delete VariableDeclarationFragment(153)", "Delete VariableDeclarationStatement(154)", "Delete QualifiedName: states.length(155)", "Delete NumberLiteral: 4(156)", "Delete InfixExpression: <(157)", "Delete SimpleName: states(158)", "Delete NumberLiteral: 0(159)", "Delete ArrayAccess(160)", "Delete SimpleName: equalsIgnoreCase(161)", "Delete SimpleName: FROM_KEY(162)", "Delete MethodInvocation(163)", "Delete PrefixExpression: !(164)", "Delete InfixExpression: ||(165)", "Delete SimpleName: states(166)", "Delete NumberLiteral: 2(167)", "Delete ArrayAccess(168)", "Delete SimpleName: equalsIgnoreCase(169)", "Delete SimpleName: TO_KEY(170)", "Delete MethodInvocation(171)", "Delete PrefixExpression: !(172)", "Delete InfixExpression: ||(173)", "Delete NullLiteral(174)", "Delete ReturnStatement(175)", "Delete Block(176)", "Delete IfStatement(177)", "Delete SimpleName: StateTransitionType(178)", "Delete SimpleType: StateTransitionType(179)", "Delete SimpleName: states(180)", "Delete NumberLiteral: 1(181)", "Delete ArrayAccess(182)", "Delete SimpleName: states(183)", "Delete NumberLiteral: 3(184)", "Delete ArrayAccess(185)", "Delete ClassInstanceCreation(186)", "Delete ReturnStatement(187)", "Delete Block(188)", "Delete MethodDeclaration(189)", "Delete TypeDeclaration: class(190)", "Delete Modifier: private(197)", "Delete Modifier: private(191)", "Delete Modifier: private(203)", "Delete SimpleName: Map(204)", "Delete SimpleType: Map(205)", "Delete SimpleName: StateTransitionType(206)", "Delete SimpleType: StateTransitionType(207)", "Delete ParameterizedType: Map<StateTransitionType,Long>(210)", "Delete Modifier: public(214)", "Delete SimpleName: StateTransitionThrottleConfig(215)", "Delete SimpleName: _maxPendingStateTransitionMap(232)", "Delete SimpleName: HashMap(233)", "Delete SimpleType: HashMap(234)", "Delete SimpleName: StateTransitionType(235)", "Delete SimpleType: StateTransitionType(236)", "Delete ParameterizedType: HashMap<StateTransitionType,Long>(239)", "Delete ClassInstanceCreation(240)", "Delete Assignment: =(241)", "Delete ExpressionStatement(242)", "Delete Block(243)", "Delete MethodDeclaration(244)", "Delete TextElement: Add a max pending transition from given from state to the specified to state.(245)", "Delete TagElement(246)", "Delete SimpleName: fromState(247)", "Delete TagElement: @param(248)", "Delete SimpleName: toState(249)", "Delete TagElement: @param(250)", "Delete SimpleName: maxPendingStateTransition(251)", "Delete TagElement: @param(252)", "Delete TagElement: @return(253)", "Delete Javadoc(254)", "Delete SimpleName: StateTransitionThrottleConfig(256)", "Delete SimpleType: StateTransitionThrottleConfig(257)", "Delete SimpleName: addThrottle(258)", "Delete SimpleName: String(259)", "Delete SimpleType: String(260)", "Delete SimpleName: fromState(261)", "Delete SingleVariableDeclaration(262)", "Delete SimpleName: String(263)", "Delete SimpleType: String(264)", "Delete SimpleName: toState(265)", "Delete SingleVariableDeclaration(266)", "Delete SimpleName: _maxPendingStateTransitionMap(270)", "Delete SimpleName: put(271)", "Delete SimpleName: StateTransitionType(272)", "Delete SimpleType: StateTransitionType(273)", "Delete SimpleName: fromState(274)", "Delete SimpleName: toState(275)", "Delete ClassInstanceCreation(276)", "Delete SimpleName: maxPendingStateTransition(277)", "Delete MethodInvocation(278)", "Delete ThisExpression(280)", "Delete ReturnStatement(281)", "Delete TextElement: Add a max pending transition from ANY state to ANY state.(284)", "Delete TagElement(285)", "Delete SimpleName: maxPendingStateTransition(286)", "Delete TagElement: @param(287)", "Delete TagElement: @return(288)", "Delete Javadoc(289)", "Delete Modifier: public(290)", "Delete SimpleName: StateTransitionThrottleConfig(291)", "Delete SimpleType: StateTransitionThrottleConfig(292)", "Delete SimpleName: addThrottle(293)", "Delete PrimitiveType: long(294)", "Delete SimpleName: maxPendingStateTransition(295)", "Delete SingleVariableDeclaration(296)", "Delete SimpleName: _maxPendingStateTransitionMap(297)", "Delete SimpleName: put(298)", "Delete SimpleName: StateTransitionType(299)", "Delete SimpleType: StateTransitionType(300)", "Delete QualifiedName: StateTransitionType.ANY_STATE(301)", "Delete QualifiedName: StateTransitionType.ANY_STATE(302)", "Delete ClassInstanceCreation(303)", "Delete SimpleName: maxPendingStateTransition(304)", "Delete MethodInvocation(305)", "Delete ExpressionStatement(306)", "Delete ThisExpression(307)", "Delete ReturnStatement(308)", "Delete Block(309)", "Delete MethodDeclaration(310)", "Delete TextElement: Add a max pending transition for a given state transition type.(311)", "Delete TagElement(312)", "Delete SimpleName: stateTransitionType(313)", "Delete TagElement: @param(314)", "Delete SimpleName: maxPendingStateTransition(315)", "Delete TagElement: @param(316)", "Delete TagElement: @return(317)", "Delete Javadoc(318)", "Delete SimpleName: StateTransitionThrottleConfig(320)", "Delete SimpleType: StateTransitionThrottleConfig(321)", "Delete SimpleName: addThrottle(322)", "Delete SimpleType: StateTransitionType(324)", "Delete SimpleName: stateTransitionType(325)", "Delete SingleVariableDeclaration(326)", "Delete PrimitiveType: long(327)", "Delete SimpleName: maxPendingStateTransition(328)", "Delete SingleVariableDeclaration(329)", "Delete SimpleName: _maxPendingStateTransitionMap(330)", "Delete SimpleName: put(331)", "Delete SimpleName: stateTransitionType(332)", "Delete SimpleName: maxPendingStateTransition(333)", "Delete MethodInvocation(334)", "Delete ExpressionStatement(335)", "Delete ThisExpression(336)", "Delete ReturnStatement(337)", "Delete TextElement: Add a max pending transition from ANY state to the specified state.(340)", "Delete TagElement(341)", "Delete SimpleName: toState(342)", "Delete TagElement: @param(343)", "Delete SimpleName: maxPendingStateTransition(344)", "Delete TagElement: @param(345)", "Delete TagElement: @return(346)", "Delete Javadoc(347)", "Delete SimpleName: String(352)", "Delete SimpleType: String(353)", "Delete SimpleName: toState(354)", "Delete SingleVariableDeclaration(355)", "Delete PrimitiveType: long(356)", "Delete SimpleName: maxPendingStateTransition(357)", "Delete SingleVariableDeclaration(358)", "Delete SimpleName: _maxPendingStateTransitionMap(359)", "Delete SimpleName: put(360)", "Delete SimpleName: StateTransitionType(361)", "Delete SimpleType: StateTransitionType(362)", "Delete QualifiedName: StateTransitionType.ANY_STATE(363)", "Delete SimpleName: toState(364)", "Delete ClassInstanceCreation(365)", "Delete SimpleName: maxPendingStateTransition(366)", "Delete MethodInvocation(367)", "Delete ExpressionStatement(368)", "Delete ThisExpression(369)", "Delete ReturnStatement(370)", "Delete TextElement: Add a max pending transition from given state to ANY state.(373)", "Delete TagElement(374)", "Delete SimpleName: fromState(375)", "Delete TagElement: @param(376)", "Delete SimpleName: maxPendingStateTransition(377)", "Delete TagElement: @param(378)", "Delete TagElement: @return(379)", "Delete Javadoc(380)", "Delete SimpleName: StateTransitionThrottleConfig(382)", "Delete SimpleType: StateTransitionThrottleConfig(383)", "Delete SimpleName: addThrottleToAnyState(384)", "Delete SimpleName: String(385)", "Delete SimpleType: String(386)", "Delete SimpleName: fromState(387)", "Delete SingleVariableDeclaration(388)", "Delete PrimitiveType: long(389)", "Delete SimpleName: maxPendingStateTransition(390)", "Delete SingleVariableDeclaration(391)", "Delete SimpleName: _maxPendingStateTransitionMap(392)", "Delete SimpleName: put(393)", "Delete SimpleName: StateTransitionType(394)", "Delete SimpleType: StateTransitionType(395)", "Delete SimpleName: fromState(396)", "Delete QualifiedName: StateTransitionType.ANY_STATE(397)", "Delete ClassInstanceCreation(398)", "Delete SimpleName: maxPendingStateTransition(399)", "Delete MethodInvocation(400)", "Delete ExpressionStatement(401)", "Delete ThisExpression(402)", "Delete ReturnStatement(403)", "Delete SimpleName: getKey(479)", "Delete SimpleName: toString(481)", "Delete MethodInvocation(482)", "Delete SimpleName: getValue(486)", "Delete MethodInvocation(487)", "Delete QualifiedName: Map.Entry(464)", "Delete SimpleType: Map.Entry(465)", "Delete SimpleName: StateTransitionType(466)", "Delete SimpleType: StateTransitionType(467)", "Delete ParameterizedType: Map.Entry<StateTransitionType,Long>(470)", "Delete SimpleName: e(471)", "Delete SingleVariableDeclaration(472)", "Delete SimpleName: _maxPendingStateTransitionMap(473)", "Delete SimpleName: entrySet(474)", "Delete MethodInvocation(475)", "Delete Block(491)", "Delete EnhancedForStatement(492)", "Delete SimpleName: String(696)", "Delete SimpleType: String(697)", "Delete SimpleName: configKey(698)", "Delete SingleVariableDeclaration(699)", "Delete SimpleName: configsMap(700)", "Delete SimpleName: keySet(701)", "Delete MethodInvocation(702)", "Delete SimpleName: StateTransitionType(703)", "Delete SimpleType: StateTransitionType(704)", "Delete SimpleName: transitionType(705)", "Delete SimpleName: StateTransitionType(706)", "Delete SimpleName: parseFromString(707)", "Delete SimpleName: configKey(708)", "Delete MethodInvocation(709)", "Delete VariableDeclarationFragment(710)", "Delete VariableDeclarationStatement(711)", "Delete SimpleName: transitionType(712)", "Delete NullLiteral(713)", "Delete InfixExpression: !=(714)", "Delete PrimitiveType: long(715)", "Delete SimpleName: value(716)", "Delete SimpleName: Long(717)", "Delete SimpleName: valueOf(718)", "Delete SimpleName: configsMap(719)", "Delete SimpleName: get(720)", "Delete SimpleName: configKey(721)", "Delete MethodInvocation(722)", "Delete MethodInvocation(723)", "Delete VariableDeclarationFragment(724)", "Delete VariableDeclarationStatement(725)", "Delete SimpleName: config(726)", "Delete SimpleName: addThrottle(727)", "Delete SimpleName: transitionType(728)", "Delete SimpleName: value(729)", "Delete MethodInvocation(730)", "Delete ExpressionStatement(731)", "Delete Block(732)", "Delete SimpleName: NumberFormatException(733)", "Delete SimpleType: NumberFormatException(734)", "Delete SimpleName: ex(735)", "Delete SingleVariableDeclaration(736)", "Delete SimpleName: logger(737)", "Delete SimpleName: warn(738)", "Delete SimpleName: String(739)", "Delete SimpleName: format(740)", "Delete StringLiteral: \"Invalid config entry, key=%s, value=%s\"(741)", "Delete SimpleName: configKey(742)", "Delete SimpleName: configsMap(743)", "Delete SimpleName: get(744)", "Delete SimpleName: configKey(745)", "Delete MethodInvocation(746)", "Delete MethodInvocation(747)", "Delete MethodInvocation(748)", "Delete ExpressionStatement(749)", "Delete Block(750)", "Delete CatchClause(751)", "Delete TryStatement(752)", "Delete Block(753)", "Delete IfStatement(754)", "Delete Block(755)", "Delete EnhancedForStatement(756)", "Delete Block(759)"]}}, {"BestPossibleStateCalcStage_cluster": {"actions": [{"root": "UPDATE from toString to name", "operations": ["UPD SimpleName: toString from toString to name", "UPD SimpleName: toString from toString to name"]}]}}, {"BestPossibleStateCalcStage_diff": {"operations": ["Update SimpleName: toString(101) to name", "Update SimpleName: toString(117) to name"]}}, {"BestPossibleStateOutput_cluster": {"actions": []}}, {"BestPossibleStateOutput_diff": {"operations": []}}, {"CurrentStateComputationStage_cluster": {"actions": [{"root": "UPDATE from toString to name", "operations": ["UPD SimpleName: toString from toString to name", "UPD SimpleName: toString from toString to name"]}]}}, {"CurrentStateComputationStage_diff": {"operations": ["Update SimpleName: toString(460) to name", "Update SimpleName: toString(62) to name"]}}, {"ExternalViewComputeStage_cluster": {"actions": [{"root": "UPDATE from toString to name", "operations": ["UPD SimpleName: toString from toString to name", "UPD SimpleName: toString from toString to name"]}]}}, {"ExternalViewComputeStage_diff": {"operations": ["Update SimpleName: toString(120) to name", "Update SimpleName: toString(177) to name"]}}, {"IntermediateStateCalcStage_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.util.HashMap to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: java.util.HashSet to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: java.util.Iterator to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.helix.HelixDefinedState to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: org.apache.helix.api.config.StateTransitionThrottleConfig to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.helix.controller.common.PartitionStateMap to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS ImportDeclaration to CompilationUnit at 9", "INS QualifiedName: org.apache.helix.model.IdealState to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: org.apache.helix.model.Partition to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: org.apache.helix.model.StateModelDefinition to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: java.util.List to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS QualifiedName: java.util.Set to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 16"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 6", "operations": ["INS SimpleName: setState to MethodInvocation at 1", "INS SimpleName: resourceMap to MethodInvocation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS Block to MethodDeclaration at 7", "INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: resourceMap to MethodInvocation at 0", "INS SimpleName: throttleController to MethodInvocation at 6", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ClassInstanceCreation at 3", "INS SimpleName: dataCache to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: keySet to MethodInvocation at 1", "INS SimpleName: intermediatePartitionStateMap to MethodInvocation at 3", "INS SimpleName: intermediatePartitionStateMap to VariableDeclarationFragment at 0", "INS EnhancedForStatement to Block at 2", "INS SimpleName: PartitionStateMap to SimpleType: PartitionStateMap at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: getLiveInstances to MethodInvocation at 1", "INS SimpleName: throttleController to VariableDeclarationFragment at 0", "INS SimpleName: StateTransitionThrottleController to SimpleType: StateTransitionThrottleController at 0", "INS SimpleName: resourceName to MethodInvocation at 2", "INS SimpleName: output to MethodInvocation at 0", "INS SimpleName: dataCache to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: StateTransitionThrottleController to ClassInstanceCreation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getClusterConfig to MethodInvocation at 1", "INS SimpleName: dataCache to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: dataCache to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: computeIntermediatePartitionState to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: currentStateOutput to MethodInvocation at 4", "INS SimpleType: PartitionStateMap to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: getIdealState to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: resourceName to MethodInvocation at 2", "INS SimpleType: StateTransitionThrottleController to VariableDeclarationStatement at 0", "INS SimpleName: StateTransitionThrottleController to SimpleType: StateTransitionThrottleController at 0", "INS SimpleName: keySet to MethodInvocation at 1", "INS SimpleName: resourceName to MethodInvocation at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: resource to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 19", "INS IfStatement to Block at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: getCurrentStateMap to MethodInvocation at 1", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,String> at 0", "INS SimpleName: getPartitions to MethodInvocation at 1", "INS SimpleName: intermediateMap to VariableDeclarationFragment at 0", "INS SimpleType: Partition to SingleVariableDeclaration at 0", "INS InfixExpression: > to IfStatement at 0", "INS SimpleName: logger to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: output to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: idealState to SingleVariableDeclaration at 1", "INS SimpleName: bestPossiblePartitionStateMap to MethodInvocation at 0", "INS SimpleName: stateModelDef to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Block to EnhancedForStatement at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: resourceName to InfixExpression: + at 1", "INS QualifiedName: StateTransitionThrottleConfig.RebalanceType.RECOVERY_BALANCE to Assignment: = at 1", "INS SimpleName: getPartitionMap to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Resource to SimpleType: Resource at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: partition to MethodInvocation at 3", "INS SimpleName: needRecoveryRebalance to MethodInvocation at 0", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: loadbalanceNeededCount to Assignment: = at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: String to ParameterizedType: Set<String> at 1", "INS ExpressionStatement to Block at 1", "INS QualifiedName: StateTransitionThrottleConfig.RebalanceType to SimpleType: StateTransitionThrottleConfig.RebalanceType at 0", "INS SimpleName: intermediateMap to MethodInvocation at 3", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: chargeCluster to MethodInvocation at 1", "INS SimpleName: rebalanceType to Assignment: = at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \" skip computing intermediate partition state.\" to InfixExpression: + at 2", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS SimpleType: Partition to ParameterizedType: Set<Partition> at 1", "INS SimpleName: bestPossiblePartitionStateMap to MethodInvocation at 8", "INS SimpleName: getPartitions to MethodInvocation at 1", "INS SimpleType: PartitionStateMap to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 10", "INS InfixExpression: + to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: stateModelDef to MethodInvocation at 2", "INS SimpleName: Map to SimpleType: Map at 0", "INS ExpressionStatement to Block at 2", "INS ExpressionStatement to Block at 1", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS IfStatement to IfStatement at 2", "INS SimpleName: loadbalanceNeededCount to MethodInvocation at 5", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS SimpleName: logger to MethodInvocation at 0", "INS SimpleName: currentStateMap to VariableDeclarationFragment at 0", "INS SimpleName: keySet to MethodInvocation at 1", "INS SimpleName: pendingMap to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: putAll to MethodInvocation at 1", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS ParameterizedType: HashSet<Partition> to ClassInstanceCreation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS SimpleName: pendingRecoveryRebalance to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 16", "INS SimpleName: recoveryNeededCount to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS IfStatement to Block at 4", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "INS SimpleName: bestPossibleMap to MethodInvocation at 2", "INS ReturnStatement to Block at 20", "INS SimpleName: logger to MethodInvocation at 0", "INS SimpleName: throttleController to MethodInvocation at 0", "INS SimpleName: pendingRecoveryRebalance to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ExpressionStatement to Block at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: recoveryNeededCount to MethodInvocation at 3", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: chargeInstance to MethodInvocation at 1", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: partitionsNeedLoadbalance to MethodInvocation at 5", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: output to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 6", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: bestPossibleMap to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS VariableDeclarationStatement to Block at 11", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: setState to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Partition to SingleVariableDeclaration at 0", "INS SimpleName: partitionsNeedRecovery to VariableDeclarationFragment at 0", "INS SimpleName: partition to MethodInvocation at 2", "INS ExpressionStatement to Block at 3", "INS SimpleName: pendingRecoveryRebalance to Assignment: = at 0", "INS SimpleName: rebalanceType to VariableDeclarationFragment at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: currentStateOutput to SingleVariableDeclaration at 1", "INS SimpleName: allInstances to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1", "INS Block to IfStatement at 1", "INS SimpleName: format to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: PartitionStateMap to SimpleType: PartitionStateMap at 0", "INS SimpleType: Set to ParameterizedType: Set<Partition> at 0", "INS MethodInvocation to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: currentStateMap to VariableDeclarationFragment at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS SimpleName: intermediateMap to MethodInvocation at 0", "INS ParameterizedType: HashSet<Partition> to ClassInstanceCreation at 0", "INS SimpleName: currentStateOutput to MethodInvocation at 0", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS SimpleName: resourceName to MethodInvocation at 2", "INS SimpleName: output to MethodInvocation at 9", "INS SimpleName: getStateModelDefRef to MethodInvocation at 1", "INS EnhancedForStatement to Block at 8", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: add to MethodInvocation at 1", "INS ParameterizedType: Set<Partition> to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleType: Set to ParameterizedType: Set<Partition> at 0", "INS SimpleName: pendingRecoveryRebalance to PrefixExpression: ! at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: cache to SingleVariableDeclaration at 1", "INS SimpleName: StateTransitionThrottleController to SimpleType: StateTransitionThrottleController at 0", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS SimpleName: stateModelDef to MethodInvocation at 2", "INS MethodInvocation to PrefixExpression: ! at 0", "INS EnhancedForStatement to Block at 6", "INS SimpleName: getPartitionMap to MethodInvocation at 1", "INS SimpleType: HashSet to ClassInstanceCreation at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: getPartitions to MethodInvocation at 1", "INS SimpleName: resourceName to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: bestPossibleMap to MethodInvocation at 1", "INS SimpleType: Partition to ParameterizedType: Set<Partition> at 1", "INS IfStatement to Block at 3", "INS SimpleName: info to MethodInvocation at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS IfStatement to Block at 18", "INS SimpleType: String to ParameterizedType: HashMap<String,String> at 2", "INS SimpleName: IdealState to SimpleType: IdealState at 0", "INS SimpleType: String to ParameterizedType: HashSet<String> at 1", "INS ExpressionStatement to Block at 17", "INS SimpleType: StateModelDefinition to VariableDeclarationStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: StateModelDefinition to SimpleType: StateModelDefinition at 0", "INS Modifier: public to MethodDeclaration at 0", "INS IfStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: partitionsNeedRecovery to MethodInvocation at 0", "INS SimpleName: partitionsNeedLoadbalance to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 8", "INS SimpleName: info to MethodInvocation at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: partitionsLoadbalanceThrottled to MethodInvocation at 6", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Set to SimpleType: Set at 0", "INS ParameterizedType: HashSet<Partition> to ClassInstanceCreation at 0", "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: partitionsNeedLoadbalance to MethodInvocation at 0", "INS SimpleName: bestPossibleMap to VariableDeclarationFragment at 0", "INS SimpleName: throttleController to MethodInvocation at 0", "INS SimpleName: bestPossibleMap to VariableDeclarationFragment at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: output to ReturnStatement at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: resourceName to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: HashSet to ParameterizedType: HashSet<String> at 0", "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "INS SimpleName: partition to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: partition to SingleVariableDeclaration at 1", "INS SimpleName: currentStateOutput to MethodInvocation at 7", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS SimpleType: Partition to ParameterizedType: HashSet<Partition> at 1", "INS SimpleName: bestPossibleMap to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS ParameterizedType: Set<String> to VariableDeclarationStatement at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS MethodInvocation to MethodInvocation at 2", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: getPendingStateMap to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS ReturnStatement to Block at 1", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: rebalanceType to MethodInvocation at 2", "INS SimpleName: currentStateOutput to MethodInvocation at 0", "INS SimpleName: addAll to MethodInvocation at 1", "INS SimpleName: partition to MethodInvocation at 3", "INS SimpleName: currentState to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS EnhancedForStatement to Block at 14", "INS SimpleType: HashSet to ParameterizedType: HashSet<Partition> at 0", "INS Block to IfStatement at 1", "INS SimpleName: currentStateMap to MethodInvocation at 3", "INS Block to EnhancedForStatement at 2", "INS ExpressionStatement to Block at 15", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS SimpleName: bestPossiblePartitionStateMap to SingleVariableDeclaration at 1", "INS SimpleName: PartitionStateMap to SimpleType: PartitionStateMap at 0", "INS SimpleName: partition to MethodInvocation at 3", "INS SimpleType: PartitionStateMap to SingleVariableDeclaration at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: computeIntermediatePartitionState to MethodDeclaration at 2", "INS SimpleName: idealState to MethodInvocation at 0", "INS SimpleName: rebalanceType to MethodInvocation at 2", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: loadbalanceNeededCount to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: HashSet to ParameterizedType: HashSet<Partition> at 0", "INS SimpleName: partitionsRecoveryThrotted to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: PartitionStateMap to SimpleType: PartitionStateMap at 0", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS BooleanLiteral: true to Assignment: = at 1", "INS ParameterizedType: Set<Partition> to VariableDeclarationStatement at 0", "INS SimpleName: ins to SingleVariableDeclaration at 1", "INS SimpleName: rebalanceType to MethodInvocation at 2", "INS SimpleType: String to ParameterizedType: HashMap<String,String> at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleName: partition to MethodInvocation at 2", "INS SimpleName: getCurrentStateMap to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: logParitionMapState to MethodInvocation at 0", "INS SimpleName: bestPossiblePartitionStateMap to ReturnStatement at 0", "INS SimpleName: loadbalanceThrottledCount to VariableDeclarationFragment at 0", "INS SimpleType: Set to ParameterizedType: Set<Partition> at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS SimpleName: Set to SimpleType: Set at 0", "INS SimpleName: PartitionStateMap to SimpleType: PartitionStateMap at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: pendingState to InfixExpression: != at 0", "INS ParameterizedType: Set<Partition> to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: StateTransitionThrottleController to SingleVariableDeclaration at 0", "INS Block to IfStatement at 1", "INS SimpleName: throttleController to SingleVariableDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: logger to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS MethodInvocation to InfixExpression: > at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS VariableDeclarationStatement to Block at 12", "INS QualifiedName: StateTransitionThrottleConfig.RebalanceType.LOAD_BALANCE to Assignment: = at 1", "INS SimpleName: keySet to MethodInvocation at 1", "INS ParameterizedType: HashSet<Partition> to ClassInstanceCreation at 0", "INS SimpleType: HashSet to ParameterizedType: HashSet<Partition> at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS Block to MethodDeclaration at 9", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS SimpleName: add to MethodInvocation at 1", "INS StringLiteral: \"RecoveryNeeded: %d, RecoveryThrottled: %d, loadbalanceNeeded: %d, loadbalanceThrottled: %d\" to MethodInvocation at 2", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 2", "INS SimpleName: partitionsRecoveryThrotted to MethodInvocation at 4", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS SimpleName: bestPossiblePartitionStateMap to MethodInvocation at 0", "INS SimpleName: cache to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: partitionsNeedLoadbalance to MethodInvocation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: Partition to ParameterizedType: HashSet<Partition> at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: currentStateMap to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: Partition to ParameterizedType: Set<Partition> at 1", "INS SimpleName: pendingMap to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: ins to MethodInvocation at 2", "INS SimpleName: isThrottleEnabled to MethodInvocation at 1", "INS SimpleName: stateModelDefName to MethodInvocation at 2", "INS SimpleName: throttleController to MethodInvocation at 0", "INS SimpleType: Set to ParameterizedType: Set<String> at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS StringLiteral: \"None of any type of transition throttling is set for resource \" to InfixExpression: + at 0", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: Set to SimpleType: Set at 0", "INS SimpleName: String to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 13", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: putAll to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: pendingState to MethodInvocation at 0", "INS SimpleName: bestPossibleMap to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: partition to MethodInvocation at 2", "INS SimpleName: recoveryThrottledCount to MethodInvocation at 4", "INS SimpleName: resourceName to ClassInstanceCreation at 1", "INS Block to IfStatement at 1", "INS SimpleType: Partition to ParameterizedType: HashSet<Partition> at 1", "INS SimpleName: chargeResource to MethodInvocation at 1", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: resource to MethodInvocation at 0", "INS SimpleName: pendingMap to MethodInvocation at 0", "INS SimpleName: resource to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleName: needRecoveryRebalance to MethodInvocation at 0", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS SimpleName: partition to SingleVariableDeclaration at 1", "INS SimpleName: recoveryNeededCount to PostfixExpression: ++ at 0", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS SimpleType: IdealState to SingleVariableDeclaration at 0", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: partitionsLoadbalanceThrottled to VariableDeclarationFragment at 0", "INS SimpleName: throttleController to MethodInvocation at 0", "INS Block to IfStatement at 2", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS VariableDeclarationStatement to Block at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Set to SimpleType: Set at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: resourceName to VariableDeclarationFragment at 0", "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationStatement to Block at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: currentStateMap to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: getStateModelDef to MethodInvocation at 1", "INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Set to ParameterizedType: Set<Partition> at 0", "INS SimpleName: pendingState to VariableDeclarationFragment at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: resourceName to MethodInvocation at 3", "INS IfStatement to Block at 2", "INS SimpleName: ins to MethodInvocation at 3", "INS SimpleName: pendingMap to MethodInvocation at 0", "INS SimpleType: ClusterDataCache to SingleVariableDeclaration at 0", "INS StringLiteral: \"End processing resource:\" to InfixExpression: + at 0", "INS SimpleName: recoveryThrottledCount to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: partition to MethodInvocation at 2", "INS ParameterizedType: Set<Partition> to VariableDeclarationStatement at 0", "INS SimpleName: allInstances to EnhancedForStatement at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: CurrentStateOutput to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: PartitionStateMap to MethodDeclaration at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleType: Partition to ParameterizedType: Set<Partition> at 1", "INS SimpleName: logger to MethodInvocation at 0", "INS SimpleName: loadbalanceThrottledCount to MethodInvocation at 6", "INS PostfixExpression: ++ to ExpressionStatement at 0", "INS SimpleName: stateModelDefName to VariableDeclarationFragment at 0", "INS SimpleName: resource to MethodInvocation at 0", "INS SimpleType: PartitionStateMap to ClassInstanceCreation at 0", "INS SimpleType: HashSet to ParameterizedType: HashSet<Partition> at 0", "INS SimpleName: resourceName to InfixExpression: + at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: partitionsNeedRecovery to MethodInvocation at 3", "INS SimpleType: Partition to ParameterizedType: HashSet<Partition> at 1", "INS ParameterizedType: HashSet<String> to ClassInstanceCreation at 0", "INS SimpleName: intermediateMap to MethodInvocation at 0", "INS SimpleName: currentState to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: allInstances to MethodInvocation at 0", "INS ParameterizedType: HashMap<String,String> to ClassInstanceCreation at 0", "INS SimpleName: info to MethodInvocation at 1", "INS SimpleName: getResourceName to MethodInvocation at 1", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS SimpleType: Resource to SingleVariableDeclaration at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: currentStateOutput to MethodInvocation at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 7", "INS SimpleName: Set to SimpleType: Set at 0", "INS VariableDeclarationStatement to Block at 9", "INS SimpleName: resource to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: currentStateMap to MethodInvocation at 0", "INS SimpleName: CurrentStateOutput to SimpleType: CurrentStateOutput at 0", "INS SimpleName: info to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: rebalanceType to Assignment: = at 0", "INS SimpleName: currentStateMap to MethodInvocation at 3", "INS SimpleName: ClusterDataCache to SimpleType: ClusterDataCache at 0", "INS SimpleName: resourceName to MethodInvocation at 2", "INS ExpressionStatement to Block at 7", "INS SimpleName: ins to MethodInvocation at 2", "INS SimpleType: StateTransitionThrottleConfig.RebalanceType to VariableDeclarationStatement at 0", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS StringLiteral: \"Load balance throttled on resource for \" to InfixExpression: + at 0", "INS StringLiteral: \" \" to InfixExpression: + at 2", "INS Block to IfStatement at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: partition to InfixExpression: + at 0", "INS SimpleName: partition to InfixExpression: + at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: getPartitionName to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: recoveryPartitions to InfixExpression: + at 1", "INS StringLiteral: \"Partitions need loadbalance: \" to InfixExpression: + at 0", "INS SimpleName: partition to InfixExpression: + at 0", "INS SimpleName: partition to MethodInvocation at 2", "INS SimpleName: partition to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: logger to MethodInvocation at 0", "INS SimpleName: partition to MethodInvocation at 2", "INS ParameterizedType: Set<Partition> to SingleVariableDeclaration at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS SimpleName: partition to MethodInvocation at 2", "INS SimpleName: debug to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS StringLiteral: \"Recovery balance throttled on resource for \" to InfixExpression: + at 0", "INS SimpleName: allPartitions to EnhancedForStatement at 1", "INS SimpleName: debug to MethodInvocation at 1", "INS ParameterizedType: Set<Partition> to SingleVariableDeclaration at 0", "INS MethodInvocation to InfixExpression: + at 2", "INS Block to IfStatement at 1", "INS StringLiteral: \"no balance needed for \" to InfixExpression: + at 0", "INS SimpleName: currentStateOutput to SingleVariableDeclaration at 1", "INS SimpleName: Set to SimpleType: Set at 0", "INS SimpleName: logParitionMapState to MethodDeclaration at 2", "INS SimpleName: intermediateStateMap to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: partition to InfixExpression: + at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \": Intermediate state: \" to InfixExpression: + at 1", "INS SimpleType: PartitionStateMap to SingleVariableDeclaration at 0", "INS StringLiteral: \"\\nPartitions get throttled on load-balance: \" to InfixExpression: + at 2", "INS SimpleName: recoveryThrottledPartitions to SingleVariableDeclaration at 1", "INS SimpleName: debug to MethodInvocation at 1", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS SimpleName: resource to InfixExpression: + at 1", "INS SimpleName: bestPossibleStateMap to SingleVariableDeclaration at 1", "INS StringLiteral: \" \" to InfixExpression: + at 2", "INS SimpleName: loadbalanceThrottledPartitions to SingleVariableDeclaration at 1", "INS SimpleType: Partition to ParameterizedType: Set<Partition> at 1", "INS StringLiteral: \"Partitions need recovery: \" to InfixExpression: + at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS SimpleType: Partition to ParameterizedType: Set<Partition> at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 3", "INS StringLiteral: \" \" to InfixExpression: + at 2", "INS SimpleType: Set to ParameterizedType: Set<Partition> at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleType: CurrentStateOutput to SingleVariableDeclaration at 0", "INS MethodInvocation to IfStatement at 0", "INS EnhancedForStatement to Block at 2", "INS SimpleName: Set to SimpleType: Set at 0", "INS SimpleName: loadbalancePartitions to InfixExpression: + at 1", "INS SimpleName: partition to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: recoveryPartitions to MethodInvocation at 0", "INS SimpleName: partition to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS ParameterizedType: Set<Partition> to SingleVariableDeclaration at 0", "INS SimpleName: partition to MethodInvocation at 2", "INS SimpleName: debug to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: resource to MethodInvocation at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS StringLiteral: \" \" to InfixExpression: + at 2", "INS MethodInvocation to IfStatement at 0", "INS StringLiteral: \": Current State: \" to InfixExpression: + at 1", "INS SimpleName: PartitionStateMap to SimpleType: PartitionStateMap at 0", "INS MethodInvocation to InfixExpression: + at 3", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: logger to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: Partition to SingleVariableDeclaration at 0", "INS IfStatement to IfStatement at 2", "INS IfStatement to Block at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS SimpleType: Partition to ParameterizedType: Set<Partition> at 1", "INS ExpressionStatement to Block at 4", "INS SimpleName: contains to MethodInvocation at 1", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to InfixExpression: + at 3", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: currentStateOutput to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 3", "INS SimpleName: resource to InfixExpression: + at 1", "INS SimpleName: loadbalanceThrottledPartitions to InfixExpression: + at 3", "INS SimpleType: Set to ParameterizedType: Set<Partition> at 0", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS SimpleName: contains to MethodInvocation at 1", "INS SimpleName: partition to MethodInvocation at 2", "INS SimpleName: debug to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleName: allPartitions to SingleVariableDeclaration at 1", "INS SimpleName: partition to MethodInvocation at 2", "INS SimpleName: loadbalancePartitions to MethodInvocation at 0", "INS SimpleName: resource to InfixExpression: + at 1", "INS SimpleType: PartitionStateMap to SingleVariableDeclaration at 0", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: resource to MethodInvocation at 2", "INS SimpleName: logger to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: recoveryPartitions to SingleVariableDeclaration at 1", "INS SimpleName: Set to SimpleType: Set at 0", "INS SimpleName: contains to MethodInvocation at 1", "INS SimpleName: PartitionStateMap to SimpleType: PartitionStateMap at 0", "INS SimpleName: logger to MethodInvocation at 0", "INS SimpleName: getPartitionName to MethodInvocation at 1", "INS SimpleName: debug to MethodInvocation at 1", "INS SimpleName: getCurrentStateMap to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: resource to InfixExpression: + at 1", "INS SimpleName: getPartitionMap to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: resource to SingleVariableDeclaration at 1", "INS SimpleName: contains to MethodInvocation at 1", "INS ParameterizedType: Set<Partition> to SingleVariableDeclaration at 0", "INS SimpleName: logger to MethodInvocation at 0", "INS SimpleName: partition to MethodInvocation at 0", "INS StringLiteral: \" \" to InfixExpression: + at 2", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: CurrentStateOutput to SimpleType: CurrentStateOutput at 0", "INS MethodInvocation to InfixExpression: + at 2", "INS IfStatement to Block at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: getPartitionMap to MethodInvocation at 1", "INS SimpleName: getPartitionName to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: + at 3", "INS SimpleName: logger to MethodInvocation at 0", "INS SimpleName: loadbalanceThrottledPartitions to MethodInvocation at 0", "INS SimpleName: logger to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: partition to MethodInvocation at 0", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS StringLiteral: \"load balance needed for \" to InfixExpression: + at 0", "INS SimpleName: loadbalancePartitions to SingleVariableDeclaration at 1", "INS SimpleName: partition to MethodInvocation at 0", "INS SimpleType: Partition to ParameterizedType: Set<Partition> at 1", "INS SimpleName: recoveryThrottledPartitions to MethodInvocation at 0", "INS SimpleName: logger to MethodInvocation at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: Set to ParameterizedType: Set<Partition> at 0", "INS SimpleName: intermediateStateMap to MethodInvocation at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS SimpleName: Set to SimpleType: Set at 0", "INS SimpleName: bestPossibleStateMap to MethodInvocation at 0", "INS SimpleName: partition to MethodInvocation at 3", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: getPartitionName to MethodInvocation at 1", "INS StringLiteral: \": Best possible map: \" to InfixExpression: + at 1", "INS SimpleName: currentStateOutput to MethodInvocation at 0", "INS SimpleName: recoveryThrottledPartitions to InfixExpression: + at 3", "INS SimpleName: getPartitionName to MethodInvocation at 1", "INS SimpleType: Partition to ParameterizedType: Set<Partition> at 1", "INS SimpleName: Set to SimpleType: Set at 0", "INS ParameterizedType: Set<Partition> to SingleVariableDeclaration at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: Set to ParameterizedType: Set<Partition> at 0", "INS Modifier: private to MethodDeclaration at 0", "INS MethodInvocation to InfixExpression: + at 2", "INS SimpleName: partition to SingleVariableDeclaration at 1", "INS SimpleName: resource to InfixExpression: + at 1", "INS SingleVariableDeclaration to MethodDeclaration at 11", "INS SingleVariableDeclaration to MethodDeclaration at 9", "INS Block to IfStatement at 2", "INS StringLiteral: \"recovery balance needed for \" to InfixExpression: + at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: logger to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 10", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 12", "INS SimpleName: logger to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to InfixExpression: + at 3", "INS IfStatement to Block at 1", "INS MethodInvocation to InfixExpression: + at 2", "INS StringLiteral: \": Pending state: \" to InfixExpression: + at 1", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS SimpleType: Set to ParameterizedType: Set<Partition> at 0", "INS ExpressionStatement to Block at 2", "INS StringLiteral: \"\\nPartitions get throttled on recovery: \" to InfixExpression: + at 2", "INS SimpleName: getPendingMessageMap to MethodInvocation at 1", "INS SimpleName: logger to MethodInvocation at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleName: bestPossibleCount to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: Map to ParameterizedType: Map<String,Long> at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: Map<String,String> to SingleVariableDeclaration at 0", "INS SimpleName: currentStateMap to SingleVariableDeclaration at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationStatement to Block at 2", "INS InfixExpression: || to InfixExpression: || at 0", "INS SimpleName: currentStateMap to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS BooleanLiteral: true to Assignment: = at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: currentStateCounts to MethodInvocation at 0", "INS SimpleName: currentStateCounts to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: recoveryBalanceNeeded to ReturnStatement at 0", "INS SimpleType: Long to VariableDeclarationStatement at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: stateModelDef to MethodInvocation at 0", "INS IfStatement to IfStatement at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: Long to SimpleType: Long at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS IfStatement to Block at 2", "INS SimpleName: bestPossibleStateCounts to MethodInvocation at 0", "INS ParameterizedType: Map<String,String> to SingleVariableDeclaration at 0", "INS SimpleName: get to MethodInvocation at 1", "INS QualifiedName: HelixDefinedState.ERROR to MethodInvocation at 0", "INS SimpleName: bestPossibleMap to MethodInvocation at 1", "INS SimpleName: StateModelDefinition to SimpleType: StateModelDefinition at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleType: String to ParameterizedType: Map<String,Long> at 1", "INS SimpleName: state to MethodInvocation at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS VariableDeclarationStatement to Block at 3", "INS ReturnStatement to Block at 5", "INS SimpleName: name to MethodInvocation at 1", "INS SimpleName: state to MethodInvocation at 2", "INS SimpleName: bestPossibleCount to InfixExpression: == at 0", "INS VariableDeclarationStatement to Block at 1", "INS ParameterizedType: Map<String,Long> to VariableDeclarationStatement at 0", "INS InfixExpression: == to InfixExpression: && at 1", "INS Assignment: = to ExpressionStatement at 0", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: Long to SimpleType: Long at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS Block to EnhancedForStatement at 2", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to PrefixExpression: ! at 0", "INS Block to MethodDeclaration at 6", "INS ParameterizedType: Map<String,Long> to VariableDeclarationStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS BreakStatement to Block at 1", "INS EnhancedForStatement to Block at 4", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: bestPossibleMap to SingleVariableDeclaration at 1", "INS InfixExpression: || to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS SimpleName: recoveryBalanceNeeded to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Long to SimpleType: Long at 0", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS SimpleName: Long to SimpleType: Long at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: state to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleName: states to EnhancedForStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Map to SimpleType: Map at 0", "INS PrefixExpression: ! to InfixExpression: && at 2", "INS PrefixExpression: ! to InfixExpression: || at 1", "INS ParameterizedType: List<String> to VariableDeclarationStatement at 0", "INS SimpleName: recoveryBalanceNeeded to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS SimpleType: Long to ParameterizedType: Map<String,Long> at 2", "INS PrefixExpression: ! to InfixExpression: && at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: currentCount to InfixExpression: == at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getInitialState to MethodInvocation at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS Block to IfStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: currentCount to MethodInvocation at 2", "INS SimpleName: stateModelDef to SingleVariableDeclaration at 1", "INS SimpleName: bestPossibleCount to VariableDeclarationFragment at 0", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: state to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: == to InfixExpression: && at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: state to SingleVariableDeclaration at 1", "INS InfixExpression: == to InfixExpression: || at 1", "INS SimpleType: String to ParameterizedType: Map<String,Long> at 1", "INS SimpleName: Map to SimpleType: Map at 0", "INS Block to IfStatement at 1", "INS SimpleName: getStatesPriorityList to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS IfStatement to Block at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: name to MethodInvocation at 1", "INS ContinueStatement to Block at 0", "INS SimpleType: Map to ParameterizedType: Map<String,Long> at 0", "INS SimpleName: List to SimpleType: List at 0", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: needRecoveryRebalance to MethodDeclaration at 2", "INS SimpleName: getStateCounts to MethodInvocation at 0", "INS SimpleName: states to VariableDeclarationFragment at 0", "INS SimpleName: currentCount to VariableDeclarationFragment at 0", "INS SimpleName: getStateCounts to MethodInvocation at 0", "INS SimpleName: bestPossibleCount to InfixExpression: == at 0", "INS SimpleName: currentCount to InfixExpression: == at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: stateModelDef to MethodInvocation at 0", "INS SimpleType: StateModelDefinition to SingleVariableDeclaration at 0", "INS SimpleType: Long to VariableDeclarationStatement at 0", "INS SimpleName: bestPossibleStateCounts to VariableDeclarationFragment at 0", "INS SimpleName: state to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS QualifiedName: HelixDefinedState.DROPPED to MethodInvocation at 0", "INS SimpleType: Long to ParameterizedType: Map<String,Long> at 2", "INS SimpleName: Map to SimpleType: Map at 0", "INS InfixExpression: == to InfixExpression: || at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS SimpleType: Map to ParameterizedType: Map<String,Long> at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: put to MethodInvocation at 1", "INS Modifier: private to MethodDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,Long> at 0", "INS SimpleName: stateCounts to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS SimpleType: Map to ParameterizedType: Map<String,Long> at 0", "INS ParameterizedType: Map<String,Long> to VariableDeclarationStatement at 0", "INS NumberLiteral: 0L to MethodInvocation at 3", "INS SimpleName: state to MethodInvocation at 2", "INS SimpleName: stateCounts to ReturnStatement at 0", "INS SimpleName: stateCounts to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 3", "INS SimpleType: Long to ParameterizedType: Map<String,Long> at 2", "INS ReturnStatement to Block at 2", "INS SimpleName: state to MethodInvocation at 2", "INS SimpleName: getStateCounts to MethodDeclaration at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS ParameterizedType: HashMap<String,Long> to ClassInstanceCreation at 0", "INS Block to IfStatement at 1", "INS SimpleType: Long to ParameterizedType: HashMap<String,Long> at 2", "INS SimpleName: Long to SimpleType: Long at 0", "INS SimpleName: stateCounts to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: stateCounts to VariableDeclarationFragment at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: state to SingleVariableDeclaration at 1", "INS SimpleName: containsKey to MethodInvocation at 1", "INS ParameterizedType: Map<String,String> to SingleVariableDeclaration at 0", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ParameterizedType: Map<String,Long> to MethodDeclaration at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleName: Long to SimpleType: Long at 0", "INS SimpleType: String to ParameterizedType: Map<String,Long> at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: stateCounts to MethodInvocation at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: Long to SimpleType: Long at 0", "INS SimpleType: String to ParameterizedType: Map<String,Long> at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 4", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS NumberLiteral: 1 to InfixExpression: + at 1", "INS SimpleName: values to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS EnhancedForStatement to Block at 1", "INS SimpleName: stateMap to MethodInvocation at 0", "INS SimpleType: Long to ParameterizedType: Map<String,Long> at 2", "INS SimpleName: stateMap to SingleVariableDeclaration at 1", "INS SimpleName: state to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: HashMap<String,Long> at 1", "INS SimpleName: state to MethodInvocation at 2", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS MethodInvocation to InfixExpression: + at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: compute to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV Modifier: private to MethodDeclaration at 0", "MOV SimpleType: IntermediateStateOutput to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "UPDATE from For partition compute the Intermediate State (instance,state) pair based on to For partition compute the Intermediate State (instance,state) pair based on the BestPossible", "operations": ["UPD TextElement: For partition compute the Intermediate State (instance,state) pair based on from For partition compute the Intermediate State (instance,state) pair based on to For partition compute the Intermediate State (instance,state) pair based on the BestPossible"]}, {"root": "UPDATE from the BestPossible State and Current State, with all constraints applied (such as state transition throttling). to State and Current State, with all constraints applied (such as state transition throttling).", "operations": ["UPD TextElement: the BestPossible State and Current State, with all constraints applied (such as state transition throttling). from the BestPossible State and Current State, with all constraints applied (such as state transition throttling). to State and Current State, with all constraints applied (such as state transition throttling)."]}, {"root": "UPDATE from ClusterEvent to ClusterDataCache", "operations": ["UPD SimpleName: ClusterEvent from ClusterEvent to ClusterDataCache", "UPD SimpleType: ClusterEvent from ClusterEvent to ClusterDataCache"]}, {"root": "UPDATE from event to dataCache", "operations": ["UPD SimpleName: event from event to dataCache"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 0", "MOV EnhancedForStatement to Block at 0"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV SingleVariableDeclaration to EnhancedForStatement at 0", "MOV MethodInvocation to EnhancedForStatement at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 2"]}, {"root": "UPDATE from event to cache", "operations": ["UPD SimpleName: event from event to cache"]}, {"root": "INS SingleVariableDeclaration to EnhancedForStatement at 0", "operations": ["INS SimpleName: partition to SingleVariableDeclaration at 1", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleType: Partition to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: partitionsNeedLoadbalance to EnhancedForStatement at 1", "operations": ["INS SimpleName: partitionsNeedLoadbalance to EnhancedForStatement at 1"]}, {"root": "UPDATE from toString to name", "operations": ["UPD SimpleName: toString from toString to name", "UPD SimpleName: toString from toString to name", "UPD SimpleName: toString from toString to name"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: currentStateMap to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: partition to MethodInvocation at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "INS SimpleName: getCurrentStateMap to MethodInvocation at 1", "INS SimpleName: currentStateOutput to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: resourceName to MethodInvocation at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS SimpleName: bestPossiblePartitionStateMap to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: bestPossibleMap to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleName: partition to MethodInvocation at 2", "INS SimpleName: getPartitionMap to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS SimpleType: String to ParameterizedType: HashMap<String,String> at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: HashMap to ParameterizedType: HashMap<String,String> at 0", "INS SimpleName: HashMap to SimpleType: HashMap at 0", "INS ParameterizedType: HashMap<String,String> to ClassInstanceCreation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: intermediateMap to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleType: String to ParameterizedType: HashMap<String,String> at 2", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 2"]}, {"root": "INS EmptyStatement to Block at 3", "operations": ["INS EmptyStatement to Block at 3"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS ParameterizedType: Set<String> to VariableDeclarationStatement at 0", "INS SimpleName: currentStateMap to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: HashSet to ParameterizedType: HashSet<String> at 0", "INS SimpleName: HashSet to SimpleType: HashSet at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleType: String to ParameterizedType: Set<String> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: keySet to MethodInvocation at 1", "INS SimpleName: allInstances to VariableDeclarationFragment at 0", "INS SimpleType: Set to ParameterizedType: Set<String> at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Set to SimpleType: Set at 0", "INS ParameterizedType: HashSet<String> to ClassInstanceCreation at 0", "INS SimpleType: String to ParameterizedType: HashSet<String> at 1"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS SimpleName: addAll to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: bestPossibleMap to MethodInvocation at 0", "INS SimpleName: allInstances to MethodInvocation at 0", "INS SimpleName: keySet to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 6", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 6", "INS SimpleName: throttled to VariableDeclarationFragment at 0"]}, {"root": "INS IfStatement to Block at 7", "operations": ["INS PrefixExpression: ! to InfixExpression: && at 1", "INS IfStatement to Block at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to InfixExpression: + at 5", "INS SimpleName: String to SimpleType: String at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS Block to IfStatement at 1", "INS SimpleName: bestPossibleMap to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS BooleanLiteral: true to Assignment: = at 1", "INS SimpleName: ins to MethodInvocation at 2", "INS SimpleName: throttleController to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: allInstances to EnhancedForStatement at 1", "INS IfStatement to Block at 7", "INS StringLiteral: \" for \" to InfixExpression: + at 2", "INS SimpleName: equals to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: currentStateMap to MethodInvocation at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS QualifiedName: StateTransitionThrottleConfig.RebalanceType.LOAD_BALANCE to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: throttled to Assignment: = at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: throttleController to MethodInvocation at 0", "INS StringLiteral: \" \" to InfixExpression: + at 4", "INS SimpleName: partition to MethodInvocation at 0", "INS SimpleName: bestPossibleState to InfixExpression: != at 0", "INS IfStatement to Block at 2", "INS SimpleName: ins to MethodInvocation at 3", "INS SimpleName: ins to MethodInvocation at 2", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: currentState to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS Block to EnhancedForStatement at 2", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: ins to InfixExpression: + at 1", "INS SimpleName: ins to SingleVariableDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: bestPossibleState to VariableDeclarationFragment at 0", "INS SimpleName: logger to MethodInvocation at 0", "INS SimpleName: throttled to Assignment: = at 0", "INS SimpleName: throttleforResource to MethodInvocation at 1", "INS SimpleName: resourceName to InfixExpression: + at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: bestPossibleState to MethodInvocation at 0", "INS SimpleName: resourceName to MethodInvocation at 3", "INS MethodInvocation to IfStatement at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: throttleForInstance to MethodInvocation at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS StringLiteral: \"Load balance throttled because instance \" to InfixExpression: + at 0", "INS SimpleName: getPartitionName to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS Block to IfStatement at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: StateTransitionThrottleConfig.RebalanceType.LOAD_BALANCE to MethodInvocation at 2", "INS EnhancedForStatement to Block at 0", "INS SimpleName: currentState to VariableDeclarationFragment at 0", "INS SimpleName: debug to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 8", "operations": ["INS SimpleName: currentState to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: partitionsLoadbalanceThrottled to MethodInvocation at 0", "INS SimpleName: partition to MethodInvocation at 2", "INS MethodInvocation to PrefixExpression: ! at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: bestPossibleState to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ExpressionStatement to Block at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: allInstances to EnhancedForStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 8", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: resourceName to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: bestPossibleMap to MethodInvocation at 0", "INS SimpleName: currentStateMap to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: throttleController to MethodInvocation at 0", "INS SimpleName: throttleController to MethodInvocation at 0", "INS SimpleName: intermediateMap to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: currentState to MethodInvocation at 2", "INS SimpleName: bestPossibleState to MethodInvocation at 0", "INS SimpleName: chargeInstance to MethodInvocation at 1", "INS SimpleName: ins to MethodInvocation at 3", "INS QualifiedName: StateTransitionThrottleConfig.RebalanceType.LOAD_BALANCE to MethodInvocation at 2", "INS SimpleName: ins to MethodInvocation at 2", "INS ExpressionStatement to Block at 2", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS QualifiedName: StateTransitionThrottleConfig.RebalanceType.LOAD_BALANCE to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: currentStateMap to MethodInvocation at 0", "INS SimpleName: putAll to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS QualifiedName: StateTransitionThrottleConfig.RebalanceType.LOAD_BALANCE to MethodInvocation at 2", "INS SimpleName: chargeCluster to MethodInvocation at 1", "INS SimpleName: throttleController to MethodInvocation at 0", "INS SimpleName: putAll to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS ExpressionStatement to Block at 1", "INS PostfixExpression: ++ to ExpressionStatement at 0", "INS SimpleName: ins to MethodInvocation at 2", "INS SimpleName: throttled to PrefixExpression: ! at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: intermediateMap to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: chargeResource to MethodInvocation at 1", "INS SimpleName: bestPossibleMap to MethodInvocation at 2", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS EnhancedForStatement to Block at 1", "INS SimpleName: ins to SingleVariableDeclaration at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: loadbalanceThrottledCount to PostfixExpression: ++ at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: bestPossibleState to InfixExpression: != at 0", "INS Block to IfStatement at 2", "INS IfStatement to Block at 2", "INS InfixExpression: != to InfixExpression: && at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 5"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from resourceName to partition", "operations": ["UPD SimpleName: resourceName from resourceName to partition"]}, {"root": "INS SimpleName: intermediateMap to MethodInvocation at 3", "operations": ["INS SimpleName: intermediateMap to MethodInvocation at 3"]}, {"root": "INS InfixExpression: + to MethodInvocation at 2", "operations": ["INS SimpleName: resourceName to InfixExpression: + at 1", "INS SimpleName: partition to MethodInvocation at 0", "INS StringLiteral: \"Load balance throttled on resource for \" to InfixExpression: + at 0", "INS SimpleName: getPartitionName to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: + at 3", "INS InfixExpression: + to MethodInvocation at 2", "INS StringLiteral: \" \" to InfixExpression: + at 2"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL MethodDeclaration"]}]}}, {"IntermediateStateCalcStage_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(1447) at 1", "Insert ImportDeclaration(5) into CompilationUnit(1447) at 2", "Insert ImportDeclaration(7) into CompilationUnit(1447) at 3", "Insert ImportDeclaration(9) into CompilationUnit(1447) at 4", "Insert ImportDeclaration(11) into CompilationUnit(1447) at 5", "Insert ImportDeclaration(13) into CompilationUnit(1447) at 6", "Insert ImportDeclaration(19) into CompilationUnit(1447) at 9", "Insert ImportDeclaration(21) into CompilationUnit(1447) at 10", "Insert ImportDeclaration(25) into CompilationUnit(1447) at 12", "Insert ImportDeclaration(29) into CompilationUnit(1447) at 14", "Insert ImportDeclaration(33) into CompilationUnit(1447) at 16", "Insert QualifiedName: java.util.HashMap(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: java.util.HashSet(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: java.util.Iterator(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: org.apache.helix.HelixDefinedState(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.helix.api.config.StateTransitionThrottleConfig(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.helix.controller.common.PartitionStateMap(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: org.apache.helix.model.IdealState(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: org.apache.helix.model.Partition(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: org.apache.helix.model.StateModelDefinition(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: java.util.List(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: java.util.Set(32) into ImportDeclaration(33) at 0", "Insert MethodDeclaration(284) into TypeDeclaration: class(1446) at 6", "Insert MethodDeclaration(1015) into TypeDeclaration: class(1446) at 7", "Insert MethodDeclaration(1222) into TypeDeclaration: class(1446) at 8", "Insert MethodDeclaration(1372) into TypeDeclaration: class(1446) at 9", "Insert MethodDeclaration(1445) into TypeDeclaration: class(1446) at 10", "Move Modifier: private(170) into MethodDeclaration(284) at 0", "Move SimpleType: IntermediateStateOutput(172) into MethodDeclaration(284) at 1", "Move SimpleName: compute(173) into MethodDeclaration(284) at 2", "Move SingleVariableDeclaration(177) into MethodDeclaration(284) at 3", "Move SingleVariableDeclaration(186) into MethodDeclaration(284) at 4", "Move SingleVariableDeclaration(190) into MethodDeclaration(284) at 5", "Move SingleVariableDeclaration(194) into MethodDeclaration(284) at 6", "Insert Block(283) into MethodDeclaration(284) at 7", "Insert Modifier: public(285) into MethodDeclaration(1015) at 0", "Insert SimpleType: PartitionStateMap(287) into MethodDeclaration(1015) at 1", "Insert SimpleName: computeIntermediatePartitionState(288) into MethodDeclaration(1015) at 2", "Insert SingleVariableDeclaration(292) into MethodDeclaration(1015) at 3", "Insert SingleVariableDeclaration(296) into MethodDeclaration(1015) at 4", "Insert SingleVariableDeclaration(300) into MethodDeclaration(1015) at 5", "Insert SingleVariableDeclaration(304) into MethodDeclaration(1015) at 6", "Insert SingleVariableDeclaration(308) into MethodDeclaration(1015) at 7", "Insert SingleVariableDeclaration(312) into MethodDeclaration(1015) at 8", "Insert Block(1014) into MethodDeclaration(1015) at 9", "Insert Modifier: private(1016) into MethodDeclaration(1222) at 0", "Insert PrimitiveType: void(1017) into MethodDeclaration(1222) at 1", "Insert SimpleName: logParitionMapState(1018) into MethodDeclaration(1222) at 2", "Insert SingleVariableDeclaration(1022) into MethodDeclaration(1222) at 3", "Insert SingleVariableDeclaration(1029) into MethodDeclaration(1222) at 4", "Insert SingleVariableDeclaration(1036) into MethodDeclaration(1222) at 5", "Insert SingleVariableDeclaration(1043) into MethodDeclaration(1222) at 6", "Insert SingleVariableDeclaration(1050) into MethodDeclaration(1222) at 7", "Insert SingleVariableDeclaration(1057) into MethodDeclaration(1222) at 8", "Insert SingleVariableDeclaration(1061) into MethodDeclaration(1222) at 9", "Insert SingleVariableDeclaration(1065) into MethodDeclaration(1222) at 10", "Insert SingleVariableDeclaration(1069) into MethodDeclaration(1222) at 11", "Insert Block(1221) into MethodDeclaration(1222) at 12", "Insert Modifier: private(1223) into MethodDeclaration(1372) at 0", "Insert PrimitiveType: boolean(1224) into MethodDeclaration(1372) at 1", "Insert SimpleName: needRecoveryRebalance(1225) into MethodDeclaration(1372) at 2", "Insert SingleVariableDeclaration(1234) into MethodDeclaration(1372) at 3", "Insert SingleVariableDeclaration(1238) into MethodDeclaration(1372) at 4", "Insert SingleVariableDeclaration(1247) into MethodDeclaration(1372) at 5", "Insert Block(1371) into MethodDeclaration(1372) at 6", "Insert Modifier: private(1373) into MethodDeclaration(1445) at 0", "Insert ParameterizedType: Map<String,Long>(1380) into MethodDeclaration(1445) at 1", "Insert SimpleName: getStateCounts(1381) into MethodDeclaration(1445) at 2", "Insert SingleVariableDeclaration(1390) into MethodDeclaration(1445) at 3", "Insert Block(1444) into MethodDeclaration(1445) at 4", "Update TextElement: For partition compute the Intermediate State (instance,state) pair based on(12) to For partition compute the Intermediate State (instance,state) pair based on the BestPossible", "Update TextElement: the BestPossible State and Current State, with all constraints applied (such as state transition throttling).(13) to State and Current State, with all constraints applied (such as state transition throttling).", "Update SimpleType: ClusterEvent(175) to ClusterDataCache", "Update SimpleName: event(176) to dataCache", "Move VariableDeclarationStatement(202) into Block(283) at 0", "Insert VariableDeclarationStatement(243) into Block(283) at 1", "Insert EnhancedForStatement(280) into Block(283) at 2", "Move ReturnStatement(229) into Block(283) at 3", "Insert SimpleName: PartitionStateMap(286) into SimpleType: PartitionStateMap(287) at 0", "Insert SimpleType: ClusterDataCache(290) into SingleVariableDeclaration(292) at 0", "Insert SimpleName: cache(291) into SingleVariableDeclaration(292) at 1", "Insert SimpleType: IdealState(294) into SingleVariableDeclaration(296) at 0", "Insert SimpleName: idealState(295) into SingleVariableDeclaration(296) at 1", "Insert SimpleType: Resource(298) into SingleVariableDeclaration(300) at 0", "Insert SimpleName: resource(299) into SingleVariableDeclaration(300) at 1", "Insert SimpleType: CurrentStateOutput(302) into SingleVariableDeclaration(304) at 0", "Insert SimpleName: currentStateOutput(303) into SingleVariableDeclaration(304) at 1", "Insert SimpleType: PartitionStateMap(306) into SingleVariableDeclaration(308) at 0", "Insert SimpleName: bestPossiblePartitionStateMap(307) into SingleVariableDeclaration(308) at 1", "Insert SimpleType: StateTransitionThrottleController(310) into SingleVariableDeclaration(312) at 0", "Insert SimpleName: throttleController(311) into SingleVariableDeclaration(312) at 1", "Insert VariableDeclarationStatement(320) into Block(1014) at 0", "Insert ExpressionStatement(327) into Block(1014) at 1", "Insert IfStatement(343) into Block(1014) at 2", "Insert VariableDeclarationStatement(351) into Block(1014) at 3", "Insert VariableDeclarationStatement(360) into Block(1014) at 4", "Insert VariableDeclarationStatement(365) into Block(1014) at 5", "Insert EnhancedForStatement(527) into Block(1014) at 6", "Insert VariableDeclarationStatement(536) into Block(1014) at 7", "Insert VariableDeclarationStatement(544) into Block(1014) at 8", "Insert VariableDeclarationStatement(552) into Block(1014) at 9", "Insert VariableDeclarationStatement(566) into Block(1014) at 10", "Insert VariableDeclarationStatement(580) into Block(1014) at 11", "Insert VariableDeclarationStatement(594) into Block(1014) at 12", "Insert VariableDeclarationStatement(608) into Block(1014) at 13", "Insert EnhancedForStatement(711) into Block(1014) at 14", "Insert ExpressionStatement(717) into Block(1014) at 15", "Insert IfStatement(970) into Block(1014) at 16", "Insert ExpressionStatement(982) into Block(1014) at 17", "Insert IfStatement(1004) into Block(1014) at 18", "Insert ExpressionStatement(1011) into Block(1014) at 19", "Insert ReturnStatement(1013) into Block(1014) at 20", "Insert SimpleType: String(1020) into SingleVariableDeclaration(1022) at 0", "Insert SimpleName: resource(1021) into SingleVariableDeclaration(1022) at 1", "Insert ParameterizedType: Set<Partition>(1027) into SingleVariableDeclaration(1029) at 0", "Insert SimpleName: allPartitions(1028) into SingleVariableDeclaration(1029) at 1", "Insert ParameterizedType: Set<Partition>(1034) into SingleVariableDeclaration(1036) at 0", "Insert SimpleName: recoveryPartitions(1035) into SingleVariableDeclaration(1036) at 1", "Insert ParameterizedType: Set<Partition>(1041) into SingleVariableDeclaration(1043) at 0", "Insert SimpleName: recoveryThrottledPartitions(1042) into SingleVariableDeclaration(1043) at 1", "Insert ParameterizedType: Set<Partition>(1048) into SingleVariableDeclaration(1050) at 0", "Insert SimpleName: loadbalancePartitions(1049) into SingleVariableDeclaration(1050) at 1", "Insert ParameterizedType: Set<Partition>(1055) into SingleVariableDeclaration(1057) at 0", "Insert SimpleName: loadbalanceThrottledPartitions(1056) into SingleVariableDeclaration(1057) at 1", "Insert SimpleType: CurrentStateOutput(1059) into SingleVariableDeclaration(1061) at 0", "Insert SimpleName: currentStateOutput(1060) into SingleVariableDeclaration(1061) at 1", "Insert SimpleType: PartitionStateMap(1063) into SingleVariableDeclaration(1065) at 0", "Insert SimpleName: bestPossibleStateMap(1064) into SingleVariableDeclaration(1065) at 1", "Insert SimpleType: PartitionStateMap(1067) into SingleVariableDeclaration(1069) at 0", "Insert SimpleName: intermediateStateMap(1068) into SingleVariableDeclaration(1069) at 1", "Insert ExpressionStatement(1078) into Block(1221) at 0", "Insert ExpressionStatement(1087) into Block(1221) at 1", "Insert EnhancedForStatement(1220) into Block(1221) at 2", "Insert ParameterizedType: Map<String,String>(1232) into SingleVariableDeclaration(1234) at 0", "Insert SimpleName: bestPossibleMap(1233) into SingleVariableDeclaration(1234) at 1", "Insert SimpleType: StateModelDefinition(1236) into SingleVariableDeclaration(1238) at 0", "Insert SimpleName: stateModelDef(1237) into SingleVariableDeclaration(1238) at 1", "Insert ParameterizedType: Map<String,String>(1245) into SingleVariableDeclaration(1247) at 0", "Insert SimpleName: currentStateMap(1246) into SingleVariableDeclaration(1247) at 1", "Insert VariableDeclarationStatement(1252) into Block(1371) at 0", "Insert VariableDeclarationStatement(1263) into Block(1371) at 1", "Insert VariableDeclarationStatement(1276) into Block(1371) at 2", "Insert VariableDeclarationStatement(1289) into Block(1371) at 3", "Insert EnhancedForStatement(1368) into Block(1371) at 4", "Insert ReturnStatement(1370) into Block(1371) at 5", "Insert SimpleType: Map(1375) into ParameterizedType: Map<String,Long>(1380) at 0", "Insert SimpleType: String(1377) into ParameterizedType: Map<String,Long>(1380) at 1", "Insert SimpleType: Long(1379) into ParameterizedType: Map<String,Long>(1380) at 2", "Insert ParameterizedType: Map<String,String>(1388) into SingleVariableDeclaration(1390) at 0", "Insert SimpleName: stateMap(1389) into SingleVariableDeclaration(1390) at 1", "Insert VariableDeclarationStatement(1408) into Block(1444) at 0", "Insert EnhancedForStatement(1441) into Block(1444) at 1", "Insert ReturnStatement(1443) into Block(1444) at 2", "Update SimpleName: ClusterEvent(174) to ClusterDataCache", "Insert SimpleType: StateTransitionThrottleController(226) into VariableDeclarationStatement(243) at 0", "Insert VariableDeclarationFragment(242) into VariableDeclarationStatement(243) at 1", "Move SingleVariableDeclaration(206) into EnhancedForStatement(280) at 0", "Move MethodInvocation(209) into EnhancedForStatement(280) at 1", "Insert Block(279) into EnhancedForStatement(280) at 2", "Insert SimpleName: ClusterDataCache(289) into SimpleType: ClusterDataCache(290) at 0", "Insert SimpleName: IdealState(293) into SimpleType: IdealState(294) at 0", "Insert SimpleName: Resource(297) into SimpleType: Resource(298) at 0", "Insert SimpleName: CurrentStateOutput(301) into SimpleType: CurrentStateOutput(302) at 0", "Insert SimpleName: PartitionStateMap(305) into SimpleType: PartitionStateMap(306) at 0", "Insert SimpleName: StateTransitionThrottleController(309) into SimpleType: StateTransitionThrottleController(310) at 0", "Insert SimpleType: String(314) into VariableDeclarationStatement(320) at 0", "Insert VariableDeclarationFragment(319) into VariableDeclarationStatement(320) at 1", "Insert MethodInvocation(326) into ExpressionStatement(327) at 0", "Insert PrefixExpression: !(331) into IfStatement(343) at 0", "Insert Block(342) into IfStatement(343) at 1", "Insert SimpleType: String(345) into VariableDeclarationStatement(351) at 0", "Insert VariableDeclarationFragment(350) into VariableDeclarationStatement(351) at 1", "Insert SimpleType: StateModelDefinition(353) into VariableDeclarationStatement(360) at 0", "Insert VariableDeclarationFragment(359) into VariableDeclarationStatement(360) at 1", "Insert PrimitiveType: boolean(361) into VariableDeclarationStatement(365) at 0", "Insert VariableDeclarationFragment(364) into VariableDeclarationStatement(365) at 1", "Insert SingleVariableDeclaration(369) into EnhancedForStatement(527) at 0", "Insert MethodInvocation(372) into EnhancedForStatement(527) at 1", "Insert Block(526) into EnhancedForStatement(527) at 2", "Insert SimpleType: PartitionStateMap(529) into VariableDeclarationStatement(536) at 0", "Insert VariableDeclarationFragment(535) into VariableDeclarationStatement(536) at 1", "Insert PrimitiveType: int(537) into VariableDeclarationStatement(544) at 0", "Insert VariableDeclarationFragment(540) into VariableDeclarationStatement(544) at 1", "Insert VariableDeclarationFragment(543) into VariableDeclarationStatement(544) at 2", "Insert PrimitiveType: int(545) into VariableDeclarationStatement(552) at 0", "Insert VariableDeclarationFragment(548) into VariableDeclarationStatement(552) at 1", "Insert VariableDeclarationFragment(551) into VariableDeclarationStatement(552) at 2", "Insert ParameterizedType: Set<Partition>(557) into VariableDeclarationStatement(566) at 0", "Insert VariableDeclarationFragment(565) into VariableDeclarationStatement(566) at 1", "Insert ParameterizedType: Set<Partition>(571) into VariableDeclarationStatement(580) at 0", "Insert VariableDeclarationFragment(579) into VariableDeclarationStatement(580) at 1", "Insert ParameterizedType: Set<Partition>(585) into VariableDeclarationStatement(594) at 0", "Insert VariableDeclarationFragment(593) into VariableDeclarationStatement(594) at 1", "Insert ParameterizedType: Set<Partition>(599) into VariableDeclarationStatement(608) at 0", "Insert VariableDeclarationFragment(607) into VariableDeclarationStatement(608) at 1", "Insert SingleVariableDeclaration(612) into EnhancedForStatement(711) at 0", "Insert MethodInvocation(615) into EnhancedForStatement(711) at 1", "Insert Block(710) into EnhancedForStatement(711) at 2", "Insert Assignment: =(716) into ExpressionStatement(717) at 0", "Insert PrefixExpression: !(719) into IfStatement(970) at 0", "Insert Block(969) into IfStatement(970) at 1", "Insert MethodInvocation(981) into ExpressionStatement(982) at 0", "Insert MethodInvocation(985) into IfStatement(1004) at 0", "Insert Block(1003) into IfStatement(1004) at 1", "Insert MethodInvocation(1010) into ExpressionStatement(1011) at 0", "Insert SimpleName: output(1012) into ReturnStatement(1013) at 0", "Insert SimpleName: String(1019) into SimpleType: String(1020) at 0", "Insert SimpleType: Set(1024) into ParameterizedType: Set<Partition>(1027) at 0", "Insert SimpleType: Partition(1026) into ParameterizedType: Set<Partition>(1027) at 1", "Insert SimpleType: Set(1031) into ParameterizedType: Set<Partition>(1034) at 0", "Insert SimpleType: Partition(1033) into ParameterizedType: Set<Partition>(1034) at 1", "Insert SimpleType: Set(1038) into ParameterizedType: Set<Partition>(1041) at 0", "Insert SimpleType: Partition(1040) into ParameterizedType: Set<Partition>(1041) at 1", "Insert SimpleType: Set(1045) into ParameterizedType: Set<Partition>(1048) at 0", "Insert SimpleType: Partition(1047) into ParameterizedType: Set<Partition>(1048) at 1", "Insert SimpleType: Set(1052) into ParameterizedType: Set<Partition>(1055) at 0", "Insert SimpleType: Partition(1054) into ParameterizedType: Set<Partition>(1055) at 1", "Insert SimpleName: CurrentStateOutput(1058) into SimpleType: CurrentStateOutput(1059) at 0", "Insert SimpleName: PartitionStateMap(1062) into SimpleType: PartitionStateMap(1063) at 0", "Insert SimpleName: PartitionStateMap(1066) into SimpleType: PartitionStateMap(1067) at 0", "Insert MethodInvocation(1077) into ExpressionStatement(1078) at 0", "Insert MethodInvocation(1086) into ExpressionStatement(1087) at 0", "Insert SingleVariableDeclaration(1091) into EnhancedForStatement(1220) at 0", "Insert SimpleName: allPartitions(1092) into EnhancedForStatement(1220) at 1", "Insert Block(1219) into EnhancedForStatement(1220) at 2", "Insert SimpleType: Map(1227) into ParameterizedType: Map<String,String>(1232) at 0", "Insert SimpleType: String(1229) into ParameterizedType: Map<String,String>(1232) at 1", "Insert SimpleType: String(1231) into ParameterizedType: Map<String,String>(1232) at 2", "Insert SimpleName: StateModelDefinition(1235) into SimpleType: StateModelDefinition(1236) at 0", "Insert SimpleType: Map(1240) into ParameterizedType: Map<String,String>(1245) at 0", "Insert SimpleType: String(1242) into ParameterizedType: Map<String,String>(1245) at 1", "Insert SimpleType: String(1244) into ParameterizedType: Map<String,String>(1245) at 2", "Insert PrimitiveType: boolean(1248) into VariableDeclarationStatement(1252) at 0", "Insert VariableDeclarationFragment(1251) into VariableDeclarationStatement(1252) at 1", "Insert ParameterizedType: List<String>(1257) into VariableDeclarationStatement(1263) at 0", "Insert VariableDeclarationFragment(1262) into VariableDeclarationStatement(1263) at 1", "Insert ParameterizedType: Map<String,Long>(1270) into VariableDeclarationStatement(1276) at 0", "Insert VariableDeclarationFragment(1275) into VariableDeclarationStatement(1276) at 1", "Insert ParameterizedType: Map<String,Long>(1283) into VariableDeclarationStatement(1289) at 0", "Insert VariableDeclarationFragment(1288) into VariableDeclarationStatement(1289) at 1", "Insert SingleVariableDeclaration(1293) into EnhancedForStatement(1368) at 0", "Insert SimpleName: states(1294) into EnhancedForStatement(1368) at 1", "Insert Block(1367) into EnhancedForStatement(1368) at 2", "Insert SimpleName: recoveryBalanceNeeded(1369) into ReturnStatement(1370) at 0", "Insert SimpleName: Map(1374) into SimpleType: Map(1375) at 0", "Insert SimpleName: String(1376) into SimpleType: String(1377) at 0", "Insert SimpleName: Long(1378) into SimpleType: Long(1379) at 0", "Insert SimpleType: Map(1383) into ParameterizedType: Map<String,String>(1388) at 0", "Insert SimpleType: String(1385) into ParameterizedType: Map<String,String>(1388) at 1", "Insert SimpleType: String(1387) into ParameterizedType: Map<String,String>(1388) at 2", "Insert ParameterizedType: Map<String,Long>(1397) into VariableDeclarationStatement(1408) at 0", "Insert VariableDeclarationFragment(1407) into VariableDeclarationStatement(1408) at 1", "Insert SingleVariableDeclaration(1412) into EnhancedForStatement(1441) at 0", "Insert MethodInvocation(1415) into EnhancedForStatement(1441) at 1", "Insert Block(1440) into EnhancedForStatement(1441) at 2", "Insert SimpleName: stateCounts(1442) into ReturnStatement(1443) at 0", "Insert SimpleName: StateTransitionThrottleController(225) into SimpleType: StateTransitionThrottleController(226) at 0", "Insert SimpleName: throttleController(227) into VariableDeclarationFragment(242) at 0", "Insert ClassInstanceCreation(241) into VariableDeclarationFragment(242) at 1", "Insert VariableDeclarationStatement(272) into Block(279) at 0", "Insert ExpressionStatement(278) into Block(279) at 1", "Insert SimpleName: String(313) into SimpleType: String(314) at 0", "Insert SimpleName: resourceName(315) into VariableDeclarationFragment(319) at 0", "Insert MethodInvocation(318) into VariableDeclarationFragment(319) at 1", "Insert SimpleName: logger(321) into MethodInvocation(326) at 0", "Insert SimpleName: info(322) into MethodInvocation(326) at 1", "Move InfixExpression: +(214) into MethodInvocation(326) at 2", "Insert MethodInvocation(330) into PrefixExpression: !(331) at 0", "Insert ExpressionStatement(339) into Block(342) at 0", "Insert ReturnStatement(341) into Block(342) at 1", "Insert SimpleName: String(344) into SimpleType: String(345) at 0", "Insert SimpleName: stateModelDefName(346) into VariableDeclarationFragment(350) at 0", "Insert MethodInvocation(349) into VariableDeclarationFragment(350) at 1", "Insert SimpleName: StateModelDefinition(352) into SimpleType: StateModelDefinition(353) at 0", "Insert SimpleName: stateModelDef(354) into VariableDeclarationFragment(359) at 0", "Insert MethodInvocation(358) into VariableDeclarationFragment(359) at 1", "Insert SimpleName: pendingRecoveryRebalance(362) into VariableDeclarationFragment(364) at 0", "Insert BooleanLiteral: false(363) into VariableDeclarationFragment(364) at 1", "Insert SimpleType: Partition(367) into SingleVariableDeclaration(369) at 0", "Insert SimpleName: partition(368) into SingleVariableDeclaration(369) at 1", "Insert SimpleName: resource(370) into MethodInvocation(372) at 0", "Insert SimpleName: getPartitions(371) into MethodInvocation(372) at 1", "Insert VariableDeclarationStatement(387) into Block(526) at 0", "Insert VariableDeclarationStatement(402) into Block(526) at 1", "Insert VariableDeclarationStatement(416) into Block(526) at 2", "Insert VariableDeclarationStatement(421) into Block(526) at 3", "Insert IfStatement(441) into Block(526) at 4", "Insert IfStatement(459) into Block(526) at 5", "Insert VariableDeclarationStatement(476) into Block(526) at 6", "Insert ExpressionStatement(483) into Block(526) at 7", "Insert EnhancedForStatement(525) into Block(526) at 8", "Insert SimpleName: PartitionStateMap(528) into SimpleType: PartitionStateMap(529) at 0", "Insert SimpleName: output(530) into VariableDeclarationFragment(535) at 0", "Insert ClassInstanceCreation(534) into VariableDeclarationFragment(535) at 1", "Insert SimpleName: recoveryNeededCount(538) into VariableDeclarationFragment(540) at 0", "Insert NumberLiteral: 0(539) into VariableDeclarationFragment(540) at 1", "Insert SimpleName: recoveryThrottledCount(541) into VariableDeclarationFragment(543) at 0", "Insert NumberLiteral: 0(542) into VariableDeclarationFragment(543) at 1", "Insert SimpleName: loadbalanceNeededCount(546) into VariableDeclarationFragment(548) at 0", "Insert NumberLiteral: 0(547) into VariableDeclarationFragment(548) at 1", "Insert SimpleName: loadbalanceThrottledCount(549) into VariableDeclarationFragment(551) at 0", "Insert NumberLiteral: 0(550) into VariableDeclarationFragment(551) at 1", "Insert SimpleType: Set(554) into ParameterizedType: Set<Partition>(557) at 0", "Insert SimpleType: Partition(556) into ParameterizedType: Set<Partition>(557) at 1", "Insert SimpleName: partitionsNeedRecovery(558) into VariableDeclarationFragment(565) at 0", "Insert ClassInstanceCreation(564) into VariableDeclarationFragment(565) at 1", "Insert SimpleType: Set(568) into ParameterizedType: Set<Partition>(571) at 0", "Insert SimpleType: Partition(570) into ParameterizedType: Set<Partition>(571) at 1", "Insert SimpleName: partitionsNeedLoadbalance(572) into VariableDeclarationFragment(579) at 0", "Insert ClassInstanceCreation(578) into VariableDeclarationFragment(579) at 1", "Insert SimpleType: Set(582) into ParameterizedType: Set<Partition>(585) at 0", "Insert SimpleType: Partition(584) into ParameterizedType: Set<Partition>(585) at 1", "Insert SimpleName: partitionsRecoveryThrotted(586) into VariableDeclarationFragment(593) at 0", "Insert ClassInstanceCreation(592) into VariableDeclarationFragment(593) at 1", "Insert SimpleType: Set(596) into ParameterizedType: Set<Partition>(599) at 0", "Insert SimpleType: Partition(598) into ParameterizedType: Set<Partition>(599) at 1", "Insert SimpleName: partitionsLoadbalanceThrottled(600) into VariableDeclarationFragment(607) at 0", "Insert ClassInstanceCreation(606) into VariableDeclarationFragment(607) at 1", "Insert SimpleType: Partition(610) into SingleVariableDeclaration(612) at 0", "Insert SimpleName: partition(611) into SingleVariableDeclaration(612) at 1", "Insert SimpleName: resource(613) into MethodInvocation(615) at 0", "Insert SimpleName: getPartitions(614) into MethodInvocation(615) at 1", "Insert VariableDeclarationStatement(630) into Block(710) at 0", "Insert VariableDeclarationStatement(644) into Block(710) at 1", "Insert VariableDeclarationStatement(662) into Block(710) at 2", "Insert IfStatement(703) into Block(710) at 3", "Insert ExpressionStatement(709) into Block(710) at 4", "Insert SimpleName: loadbalanceNeededCount(712) into Assignment: =(716) at 0", "Insert MethodInvocation(715) into Assignment: =(716) at 1", "Insert SimpleName: pendingRecoveryRebalance(718) into PrefixExpression: !(719) at 0", "Move EnhancedForStatement(227) into Block(969) at 0", "Insert SimpleName: logger(971) into MethodInvocation(981) at 0", "Insert SimpleName: info(972) into MethodInvocation(981) at 1", "Insert MethodInvocation(980) into MethodInvocation(981) at 2", "Insert SimpleName: logger(983) into MethodInvocation(985) at 0", "Insert SimpleName: isDebugEnabled(984) into MethodInvocation(985) at 1", "Insert ExpressionStatement(1002) into Block(1003) at 0", "Insert SimpleName: logger(1005) into MethodInvocation(1010) at 0", "Insert SimpleName: info(1006) into MethodInvocation(1010) at 1", "Insert InfixExpression: +(1009) into MethodInvocation(1010) at 2", "Insert SimpleName: Set(1023) into SimpleType: Set(1024) at 0", "Insert SimpleName: Partition(1025) into SimpleType: Partition(1026) at 0", "Insert SimpleName: Set(1030) into SimpleType: Set(1031) at 0", "Insert SimpleName: Partition(1032) into SimpleType: Partition(1033) at 0", "Insert SimpleName: Set(1037) into SimpleType: Set(1038) at 0", "Insert SimpleName: Partition(1039) into SimpleType: Partition(1040) at 0", "Insert SimpleName: Set(1044) into SimpleType: Set(1045) at 0", "Insert SimpleName: Partition(1046) into SimpleType: Partition(1047) at 0", "Insert SimpleName: Set(1051) into SimpleType: Set(1052) at 0", "Insert SimpleName: Partition(1053) into SimpleType: Partition(1054) at 0", "Insert SimpleName: logger(1070) into MethodInvocation(1077) at 0", "Insert SimpleName: debug(1071) into MethodInvocation(1077) at 1", "Insert InfixExpression: +(1076) into MethodInvocation(1077) at 2", "Insert SimpleName: logger(1079) into MethodInvocation(1086) at 0", "Insert SimpleName: debug(1080) into MethodInvocation(1086) at 1", "Insert InfixExpression: +(1085) into MethodInvocation(1086) at 2", "Insert SimpleType: Partition(1089) into SingleVariableDeclaration(1091) at 0", "Insert SimpleName: partition(1090) into SingleVariableDeclaration(1091) at 1", "Insert IfStatement(1172) into Block(1219) at 0", "Insert ExpressionStatement(1183) into Block(1219) at 1", "Insert ExpressionStatement(1195) into Block(1219) at 2", "Insert ExpressionStatement(1207) into Block(1219) at 3", "Insert ExpressionStatement(1218) into Block(1219) at 4", "Insert SimpleName: Map(1226) into SimpleType: Map(1227) at 0", "Insert SimpleName: String(1228) into SimpleType: String(1229) at 0", "Insert SimpleName: String(1230) into SimpleType: String(1231) at 0", "Insert SimpleName: Map(1239) into SimpleType: Map(1240) at 0", "Insert SimpleName: String(1241) into SimpleType: String(1242) at 0", "Insert SimpleName: String(1243) into SimpleType: String(1244) at 0", "Insert SimpleName: recoveryBalanceNeeded(1249) into VariableDeclarationFragment(1251) at 0", "Insert BooleanLiteral: false(1250) into VariableDeclarationFragment(1251) at 1", "Insert SimpleType: List(1254) into ParameterizedType: List<String>(1257) at 0", "Insert SimpleType: String(1256) into ParameterizedType: List<String>(1257) at 1", "Insert SimpleName: states(1258) into VariableDeclarationFragment(1262) at 0", "Insert MethodInvocation(1261) into VariableDeclarationFragment(1262) at 1", "Insert SimpleType: Map(1265) into ParameterizedType: Map<String,Long>(1270) at 0", "Insert SimpleType: String(1267) into ParameterizedType: Map<String,Long>(1270) at 1", "Insert SimpleType: Long(1269) into ParameterizedType: Map<String,Long>(1270) at 2", "Insert SimpleName: bestPossibleStateCounts(1271) into VariableDeclarationFragment(1275) at 0", "Insert MethodInvocation(1274) into VariableDeclarationFragment(1275) at 1", "Insert SimpleType: Map(1278) into ParameterizedType: Map<String,Long>(1283) at 0", "Insert SimpleType: String(1280) into ParameterizedType: Map<String,Long>(1283) at 1", "Insert SimpleType: Long(1282) into ParameterizedType: Map<String,Long>(1283) at 2", "Insert SimpleName: currentStateCounts(1284) into VariableDeclarationFragment(1288) at 0", "Insert MethodInvocation(1287) into VariableDeclarationFragment(1288) at 1", "Insert SimpleType: String(1291) into SingleVariableDeclaration(1293) at 0", "Insert SimpleName: state(1292) into SingleVariableDeclaration(1293) at 1", "Insert VariableDeclarationStatement(1303) into Block(1367) at 0", "Insert VariableDeclarationStatement(1312) into Block(1367) at 1", "Insert IfStatement(1366) into Block(1367) at 2", "Insert SimpleName: Map(1382) into SimpleType: Map(1383) at 0", "Insert SimpleName: String(1384) into SimpleType: String(1385) at 0", "Insert SimpleName: String(1386) into SimpleType: String(1387) at 0", "Insert SimpleType: Map(1392) into ParameterizedType: Map<String,Long>(1397) at 0", "Insert SimpleType: String(1394) into ParameterizedType: Map<String,Long>(1397) at 1", "Insert SimpleType: Long(1396) into ParameterizedType: Map<String,Long>(1397) at 2", "Insert SimpleName: stateCounts(1398) into VariableDeclarationFragment(1407) at 0", "Insert ClassInstanceCreation(1406) into VariableDeclarationFragment(1407) at 1", "Insert SimpleType: String(1410) into SingleVariableDeclaration(1412) at 0", "Insert SimpleName: state(1411) into SingleVariableDeclaration(1412) at 1", "Insert SimpleName: stateMap(1413) into MethodInvocation(1415) at 0", "Insert SimpleName: values(1414) into MethodInvocation(1415) at 1", "Insert IfStatement(1428) into Block(1440) at 0", "Insert ExpressionStatement(1439) into Block(1440) at 1", "Update SimpleName: event(135) to cache", "Insert SimpleType: StateTransitionThrottleController(229) into ClassInstanceCreation(241) at 0", "Insert MethodInvocation(232) into ClassInstanceCreation(241) at 1", "Insert MethodInvocation(235) into ClassInstanceCreation(241) at 2", "Insert MethodInvocation(240) into ClassInstanceCreation(241) at 3", "Insert SimpleType: PartitionStateMap(252) into VariableDeclarationStatement(272) at 0", "Insert VariableDeclarationFragment(271) into VariableDeclarationStatement(272) at 1", "Insert MethodInvocation(277) into ExpressionStatement(278) at 0", "Insert SimpleName: resource(316) into MethodInvocation(318) at 0", "Insert SimpleName: getResourceName(317) into MethodInvocation(318) at 1", "Insert SimpleName: throttleController(328) into MethodInvocation(330) at 0", "Insert SimpleName: isThrottleEnabled(329) into MethodInvocation(330) at 1", "Insert MethodInvocation(338) into ExpressionStatement(339) at 0", "Insert SimpleName: bestPossiblePartitionStateMap(340) into ReturnStatement(341) at 0", "Insert SimpleName: idealState(347) into MethodInvocation(349) at 0", "Insert SimpleName: getStateModelDefRef(348) into MethodInvocation(349) at 1", "Insert SimpleName: cache(355) into MethodInvocation(358) at 0", "Insert SimpleName: getStateModelDef(356) into MethodInvocation(358) at 1", "Insert SimpleName: stateModelDefName(357) into MethodInvocation(358) at 2", "Insert SimpleName: Partition(366) into SimpleType: Partition(367) at 0", "Insert ParameterizedType: Map<String,String>(379) into VariableDeclarationStatement(387) at 0", "Insert VariableDeclarationFragment(386) into VariableDeclarationStatement(387) at 1", "Insert ParameterizedType: Map<String,String>(394) into VariableDeclarationStatement(402) at 0", "Insert VariableDeclarationFragment(401) into VariableDeclarationStatement(402) at 1", "Insert ParameterizedType: Map<String,String>(409) into VariableDeclarationStatement(416) at 0", "Insert VariableDeclarationFragment(415) into VariableDeclarationStatement(416) at 1", "Insert SimpleType: StateTransitionThrottleConfig.RebalanceType(418) into VariableDeclarationStatement(421) at 0", "Insert VariableDeclarationFragment(420) into VariableDeclarationStatement(421) at 1", "Insert MethodInvocation(426) into IfStatement(441) at 0", "Insert Block(435) into IfStatement(441) at 1", "Insert Block(440) into IfStatement(441) at 2", "Insert InfixExpression: >(446) into IfStatement(459) at 0", "Insert Block(458) into IfStatement(459) at 1", "Insert ParameterizedType: Set<String>(464) into VariableDeclarationStatement(476) at 0", "Insert VariableDeclarationFragment(475) into VariableDeclarationStatement(476) at 1", "Insert MethodInvocation(482) into ExpressionStatement(483) at 0", "Insert SingleVariableDeclaration(487) into EnhancedForStatement(525) at 0", "Insert SimpleName: allInstances(488) into EnhancedForStatement(525) at 1", "Insert Block(524) into EnhancedForStatement(525) at 2", "Insert SimpleType: PartitionStateMap(532) into ClassInstanceCreation(534) at 0", "Insert SimpleName: resourceName(533) into ClassInstanceCreation(534) at 1", "Insert SimpleName: Set(553) into SimpleType: Set(554) at 0", "Insert SimpleName: Partition(555) into SimpleType: Partition(556) at 0", "Insert ParameterizedType: HashSet<Partition>(563) into ClassInstanceCreation(564) at 0", "Insert SimpleName: Set(567) into SimpleType: Set(568) at 0", "Insert SimpleName: Partition(569) into SimpleType: Partition(570) at 0", "Insert ParameterizedType: HashSet<Partition>(577) into ClassInstanceCreation(578) at 0", "Insert SimpleName: Set(581) into SimpleType: Set(582) at 0", "Insert SimpleName: Partition(583) into SimpleType: Partition(584) at 0", "Insert ParameterizedType: HashSet<Partition>(591) into ClassInstanceCreation(592) at 0", "Insert SimpleName: Set(595) into SimpleType: Set(596) at 0", "Insert SimpleName: Partition(597) into SimpleType: Partition(598) at 0", "Insert ParameterizedType: HashSet<Partition>(605) into ClassInstanceCreation(606) at 0", "Insert SimpleName: Partition(609) into SimpleType: Partition(610) at 0", "Insert ParameterizedType: Map<String,String>(622) into VariableDeclarationStatement(630) at 0", "Insert VariableDeclarationFragment(629) into VariableDeclarationStatement(630) at 1", "Insert ParameterizedType: Map<String,String>(637) into VariableDeclarationStatement(644) at 0", "Insert VariableDeclarationFragment(643) into VariableDeclarationStatement(644) at 1", "Insert ParameterizedType: Map<String,String>(651) into VariableDeclarationStatement(662) at 0", "Insert VariableDeclarationFragment(661) into VariableDeclarationStatement(662) at 1", "Insert MethodInvocation(666) into IfStatement(703) at 0", "Insert Block(672) into IfStatement(703) at 1", "Insert IfStatement(702) into IfStatement(703) at 2", "Insert MethodInvocation(708) into ExpressionStatement(709) at 0", "Insert SimpleName: partitionsNeedLoadbalance(713) into MethodInvocation(715) at 0", "Insert SimpleName: size(714) into MethodInvocation(715) at 1", "Insert SingleVariableDeclaration(723) into EnhancedForStatement(968) at 0", "Insert SimpleName: partitionsNeedLoadbalance(724) into EnhancedForStatement(968) at 1", "Insert SimpleName: String(973) into MethodInvocation(980) at 0", "Insert SimpleName: format(974) into MethodInvocation(980) at 1", "Insert StringLiteral: \"RecoveryNeeded: %d, RecoveryThrottled: %d, loadbalanceNeeded: %d, loadbalanceThrottled: %d\"(975) into MethodInvocation(980) at 2", "Insert SimpleName: recoveryNeededCount(976) into MethodInvocation(980) at 3", "Insert SimpleName: recoveryThrottledCount(977) into MethodInvocation(980) at 4", "Insert SimpleName: loadbalanceNeededCount(978) into MethodInvocation(980) at 5", "Insert SimpleName: loadbalanceThrottledCount(979) into MethodInvocation(980) at 6", "Insert MethodInvocation(1001) into ExpressionStatement(1002) at 0", "Insert StringLiteral: \"End processing resource:\"(1007) into InfixExpression: +(1009) at 0", "Insert SimpleName: resourceName(1008) into InfixExpression: +(1009) at 1", "Insert StringLiteral: \"Partitions need recovery: \"(1072) into InfixExpression: +(1076) at 0", "Insert SimpleName: recoveryPartitions(1073) into InfixExpression: +(1076) at 1", "Insert StringLiteral: \"\\nPartitions get throttled on recovery: \"(1074) into InfixExpression: +(1076) at 2", "Insert SimpleName: recoveryThrottledPartitions(1075) into InfixExpression: +(1076) at 3", "Insert StringLiteral: \"Partitions need loadbalance: \"(1081) into InfixExpression: +(1085) at 0", "Insert SimpleName: loadbalancePartitions(1082) into InfixExpression: +(1085) at 1", "Insert StringLiteral: \"\\nPartitions get throttled on load-balance: \"(1083) into InfixExpression: +(1085) at 2", "Insert SimpleName: loadbalanceThrottledPartitions(1084) into InfixExpression: +(1085) at 3", "Insert SimpleName: Partition(1088) into SimpleType: Partition(1089) at 0", "Insert MethodInvocation(1096) into IfStatement(1172) at 0", "Insert Block(1125) into IfStatement(1172) at 1", "Insert IfStatement(1171) into IfStatement(1172) at 2", "Insert MethodInvocation(1182) into ExpressionStatement(1183) at 0", "Insert MethodInvocation(1194) into ExpressionStatement(1195) at 0", "Insert MethodInvocation(1206) into ExpressionStatement(1207) at 0", "Insert MethodInvocation(1217) into ExpressionStatement(1218) at 0", "Insert SimpleName: List(1253) into SimpleType: List(1254) at 0", "Insert SimpleName: String(1255) into SimpleType: String(1256) at 0", "Insert SimpleName: stateModelDef(1259) into MethodInvocation(1261) at 0", "Insert SimpleName: getStatesPriorityList(1260) into MethodInvocation(1261) at 1", "Insert SimpleName: Map(1264) into SimpleType: Map(1265) at 0", "Insert SimpleName: String(1266) into SimpleType: String(1267) at 0", "Insert SimpleName: Long(1268) into SimpleType: Long(1269) at 0", "Insert SimpleName: getStateCounts(1272) into MethodInvocation(1274) at 0", "Insert SimpleName: bestPossibleMap(1273) into MethodInvocation(1274) at 1", "Insert SimpleName: Map(1277) into SimpleType: Map(1278) at 0", "Insert SimpleName: String(1279) into SimpleType: String(1280) at 0", "Insert SimpleName: Long(1281) into SimpleType: Long(1282) at 0", "Insert SimpleName: getStateCounts(1285) into MethodInvocation(1287) at 0", "Insert SimpleName: currentStateMap(1286) into MethodInvocation(1287) at 1", "Insert SimpleName: String(1290) into SimpleType: String(1291) at 0", "Insert SimpleType: Long(1296) into VariableDeclarationStatement(1303) at 0", "Insert VariableDeclarationFragment(1302) into VariableDeclarationStatement(1303) at 1", "Insert SimpleType: Long(1305) into VariableDeclarationStatement(1312) at 0", "Insert VariableDeclarationFragment(1311) into VariableDeclarationStatement(1312) at 1", "Insert InfixExpression: &&(1319) into IfStatement(1366) at 0", "Insert Block(1321) into IfStatement(1366) at 1", "Insert IfStatement(1365) into IfStatement(1366) at 2", "Insert SimpleName: Map(1391) into SimpleType: Map(1392) at 0", "Insert SimpleName: String(1393) into SimpleType: String(1394) at 0", "Insert SimpleName: Long(1395) into SimpleType: Long(1396) at 0", "Insert ParameterizedType: HashMap<String,Long>(1405) into ClassInstanceCreation(1406) at 0", "Insert SimpleName: String(1409) into SimpleType: String(1410) at 0", "Insert PrefixExpression: !(1420) into IfStatement(1428) at 0", "Insert Block(1427) into IfStatement(1428) at 1", "Insert MethodInvocation(1438) into ExpressionStatement(1439) at 0", "Update SimpleName: toString(65) to name", "Update SimpleName: toString(76) to name", "Update SimpleName: toString(92) to name", "Insert SimpleName: StateTransitionThrottleController(228) into SimpleType: StateTransitionThrottleController(229) at 0", "Insert SimpleName: resourceMap(230) into MethodInvocation(232) at 0", "Insert SimpleName: keySet(231) into MethodInvocation(232) at 1", "Insert SimpleName: dataCache(233) into MethodInvocation(235) at 0", "Insert SimpleName: getClusterConfig(234) into MethodInvocation(235) at 1", "Insert MethodInvocation(238) into MethodInvocation(240) at 0", "Insert SimpleName: keySet(239) into MethodInvocation(240) at 1", "Insert SimpleName: PartitionStateMap(251) into SimpleType: PartitionStateMap(252) at 0", "Insert SimpleName: intermediatePartitionStateMap(253) into VariableDeclarationFragment(271) at 0", "Insert MethodInvocation(270) into VariableDeclarationFragment(271) at 1", "Insert SimpleName: output(273) into MethodInvocation(277) at 0", "Insert SimpleName: setState(274) into MethodInvocation(277) at 1", "Insert SimpleName: resourceName(275) into MethodInvocation(277) at 2", "Insert SimpleName: intermediatePartitionStateMap(276) into MethodInvocation(277) at 3", "Insert SimpleName: logger(332) into MethodInvocation(338) at 0", "Insert SimpleName: info(333) into MethodInvocation(338) at 1", "Insert InfixExpression: +(337) into MethodInvocation(338) at 2", "Insert SimpleType: Map(374) into ParameterizedType: Map<String,String>(379) at 0", "Insert SimpleType: String(376) into ParameterizedType: Map<String,String>(379) at 1", "Insert SimpleType: String(378) into ParameterizedType: Map<String,String>(379) at 2", "Insert SimpleName: currentStateMap(380) into VariableDeclarationFragment(386) at 0", "Insert MethodInvocation(385) into VariableDeclarationFragment(386) at 1", "Insert SimpleType: Map(389) into ParameterizedType: Map<String,String>(394) at 0", "Insert SimpleType: String(391) into ParameterizedType: Map<String,String>(394) at 1", "Insert SimpleType: String(393) into ParameterizedType: Map<String,String>(394) at 2", "Insert SimpleName: pendingMap(395) into VariableDeclarationFragment(401) at 0", "Insert MethodInvocation(400) into VariableDeclarationFragment(401) at 1", "Insert SimpleType: Map(404) into ParameterizedType: Map<String,String>(409) at 0", "Insert SimpleType: String(406) into ParameterizedType: Map<String,String>(409) at 1", "Insert SimpleType: String(408) into ParameterizedType: Map<String,String>(409) at 2", "Insert SimpleName: bestPossibleMap(410) into VariableDeclarationFragment(415) at 0", "Insert MethodInvocation(414) into VariableDeclarationFragment(415) at 1", "Insert QualifiedName: StateTransitionThrottleConfig.RebalanceType(417) into SimpleType: StateTransitionThrottleConfig.RebalanceType(418) at 0", "Insert SimpleName: rebalanceType(419) into VariableDeclarationFragment(420) at 0", "Insert SimpleName: needRecoveryRebalance(422) into MethodInvocation(426) at 0", "Insert SimpleName: bestPossibleMap(423) into MethodInvocation(426) at 1", "Insert SimpleName: stateModelDef(424) into MethodInvocation(426) at 2", "Insert SimpleName: currentStateMap(425) into MethodInvocation(426) at 3", "Insert ExpressionStatement(430) into Block(435) at 0", "Insert ExpressionStatement(434) into Block(435) at 1", "Insert ExpressionStatement(439) into Block(440) at 0", "Insert MethodInvocation(444) into InfixExpression: >(446) at 0", "Insert NumberLiteral: 0(445) into InfixExpression: >(446) at 1", "Insert ExpressionStatement(451) into Block(458) at 0", "Insert ExpressionStatement(457) into Block(458) at 1", "Insert SimpleType: Set(461) into ParameterizedType: Set<String>(464) at 0", "Insert SimpleType: String(463) into ParameterizedType: Set<String>(464) at 1", "Insert SimpleName: allInstances(465) into VariableDeclarationFragment(475) at 0", "Insert ClassInstanceCreation(474) into VariableDeclarationFragment(475) at 1", "Insert SimpleName: allInstances(477) into MethodInvocation(482) at 0", "Insert SimpleName: addAll(478) into MethodInvocation(482) at 1", "Insert MethodInvocation(481) into MethodInvocation(482) at 2", "Insert SimpleType: String(485) into SingleVariableDeclaration(487) at 0", "Insert SimpleName: ins(486) into SingleVariableDeclaration(487) at 1", "Insert VariableDeclarationStatement(497) into Block(524) at 0", "Insert VariableDeclarationStatement(506) into Block(524) at 1", "Insert IfStatement(523) into Block(524) at 2", "Insert SimpleName: PartitionStateMap(531) into SimpleType: PartitionStateMap(532) at 0", "Insert SimpleType: HashSet(560) into ParameterizedType: HashSet<Partition>(563) at 0", "Insert SimpleType: Partition(562) into ParameterizedType: HashSet<Partition>(563) at 1", "Insert SimpleType: HashSet(574) into ParameterizedType: HashSet<Partition>(577) at 0", "Insert SimpleType: Partition(576) into ParameterizedType: HashSet<Partition>(577) at 1", "Insert SimpleType: HashSet(588) into ParameterizedType: HashSet<Partition>(591) at 0", "Insert SimpleType: Partition(590) into ParameterizedType: HashSet<Partition>(591) at 1", "Insert SimpleType: HashSet(602) into ParameterizedType: HashSet<Partition>(605) at 0", "Insert SimpleType: Partition(604) into ParameterizedType: HashSet<Partition>(605) at 1", "Insert SimpleType: Map(617) into ParameterizedType: Map<String,String>(622) at 0", "Insert SimpleType: String(619) into ParameterizedType: Map<String,String>(622) at 1", "Insert SimpleType: String(621) into ParameterizedType: Map<String,String>(622) at 2", "Insert SimpleName: currentStateMap(623) into VariableDeclarationFragment(629) at 0", "Insert MethodInvocation(628) into VariableDeclarationFragment(629) at 1", "Insert SimpleType: Map(632) into ParameterizedType: Map<String,String>(637) at 0", "Insert SimpleType: String(634) into ParameterizedType: Map<String,String>(637) at 1", "Insert SimpleType: String(636) into ParameterizedType: Map<String,String>(637) at 2", "Insert SimpleName: bestPossibleMap(638) into VariableDeclarationFragment(643) at 0", "Insert MethodInvocation(642) into VariableDeclarationFragment(643) at 1", "Insert SimpleType: Map(646) into ParameterizedType: Map<String,String>(651) at 0", "Insert SimpleType: String(648) into ParameterizedType: Map<String,String>(651) at 1", "Insert SimpleType: String(650) into ParameterizedType: Map<String,String>(651) at 2", "Insert SimpleName: intermediateMap(652) into VariableDeclarationFragment(661) at 0", "Insert ClassInstanceCreation(660) into VariableDeclarationFragment(661) at 1", "Insert SimpleName: currentStateMap(663) into MethodInvocation(666) at 0", "Insert SimpleName: equals(664) into MethodInvocation(666) at 1", "Insert SimpleName: bestPossibleMap(665) into MethodInvocation(666) at 2", "Insert ExpressionStatement(671) into Block(672) at 0", "Insert MethodInvocation(677) into IfStatement(702) at 0", "Insert Block(695) into IfStatement(702) at 1", "Insert Block(701) into IfStatement(702) at 2", "Insert SimpleName: output(704) into MethodInvocation(708) at 0", "Insert SimpleName: setState(705) into MethodInvocation(708) at 1", "Insert SimpleName: partition(706) into MethodInvocation(708) at 2", "Insert SimpleName: intermediateMap(707) into MethodInvocation(708) at 3", "Insert SimpleType: Partition(721) into SingleVariableDeclaration(723) at 0", "Insert SimpleName: partition(722) into SingleVariableDeclaration(723) at 1", "Insert VariableDeclarationStatement(739) into Block(967) at 0", "Insert VariableDeclarationStatement(753) into Block(967) at 1", "Insert VariableDeclarationStatement(771) into Block(967) at 2", "Insert EmptyStatement(772) into Block(967) at 3", "Insert VariableDeclarationStatement(789) into Block(967) at 4", "Insert ExpressionStatement(796) into Block(967) at 5", "Insert VariableDeclarationStatement(801) into Block(967) at 6", "Insert IfStatement(884) into Block(967) at 7", "Insert IfStatement(960) into Block(967) at 8", "Insert SimpleName: logParitionMapState(986) into MethodInvocation(1001) at 0", "Insert SimpleName: resourceName(987) into MethodInvocation(1001) at 1", "Insert ClassInstanceCreation(993) into MethodInvocation(1001) at 2", "Insert SimpleName: partitionsNeedRecovery(994) into MethodInvocation(1001) at 3", "Insert SimpleName: partitionsRecoveryThrotted(995) into MethodInvocation(1001) at 4", "Insert SimpleName: partitionsNeedLoadbalance(996) into MethodInvocation(1001) at 5", "Insert SimpleName: partitionsLoadbalanceThrottled(997) into MethodInvocation(1001) at 6", "Insert SimpleName: currentStateOutput(998) into MethodInvocation(1001) at 7", "Insert SimpleName: bestPossiblePartitionStateMap(999) into MethodInvocation(1001) at 8", "Insert SimpleName: output(1000) into MethodInvocation(1001) at 9", "Insert SimpleName: recoveryPartitions(1093) into MethodInvocation(1096) at 0", "Insert SimpleName: contains(1094) into MethodInvocation(1096) at 1", "Insert SimpleName: partition(1095) into MethodInvocation(1096) at 2", "Insert ExpressionStatement(1107) into Block(1125) at 0", "Insert IfStatement(1124) into Block(1125) at 1", "Insert MethodInvocation(1129) into IfStatement(1171) at 0", "Insert Block(1158) into IfStatement(1171) at 1", "Insert Block(1170) into IfStatement(1171) at 2", "Insert SimpleName: logger(1173) into MethodInvocation(1182) at 0", "Insert SimpleName: debug(1174) into MethodInvocation(1182) at 1", "Insert InfixExpression: +(1181) into MethodInvocation(1182) at 2", "Insert SimpleName: logger(1184) into MethodInvocation(1194) at 0", "Insert SimpleName: debug(1185) into MethodInvocation(1194) at 1", "Insert InfixExpression: +(1193) into MethodInvocation(1194) at 2", "Insert SimpleName: logger(1196) into MethodInvocation(1206) at 0", "Insert SimpleName: debug(1197) into MethodInvocation(1206) at 1", "Insert InfixExpression: +(1205) into MethodInvocation(1206) at 2", "Insert SimpleName: logger(1208) into MethodInvocation(1217) at 0", "Insert SimpleName: debug(1209) into MethodInvocation(1217) at 1", "Insert InfixExpression: +(1216) into MethodInvocation(1217) at 2", "Insert SimpleName: Long(1295) into SimpleType: Long(1296) at 0", "Insert SimpleName: bestPossibleCount(1297) into VariableDeclarationFragment(1302) at 0", "Insert MethodInvocation(1301) into VariableDeclarationFragment(1302) at 1", "Insert SimpleName: Long(1304) into SimpleType: Long(1305) at 0", "Insert SimpleName: currentCount(1306) into VariableDeclarationFragment(1311) at 0", "Insert MethodInvocation(1310) into VariableDeclarationFragment(1311) at 1", "Insert InfixExpression: ==(1315) into InfixExpression: &&(1319) at 0", "Insert InfixExpression: ==(1318) into InfixExpression: &&(1319) at 1", "Insert ContinueStatement(1320) into Block(1321) at 0", "Insert InfixExpression: ||(1334) into IfStatement(1365) at 0", "Insert Block(1364) into IfStatement(1365) at 1", "Insert SimpleType: HashMap(1400) into ParameterizedType: HashMap<String,Long>(1405) at 0", "Insert SimpleType: String(1402) into ParameterizedType: HashMap<String,Long>(1405) at 1", "Insert SimpleType: Long(1404) into ParameterizedType: HashMap<String,Long>(1405) at 2", "Insert MethodInvocation(1419) into PrefixExpression: !(1420) at 0", "Insert ExpressionStatement(1426) into Block(1427) at 0", "Insert SimpleName: stateCounts(1429) into MethodInvocation(1438) at 0", "Insert SimpleName: put(1430) into MethodInvocation(1438) at 1", "Insert SimpleName: state(1431) into MethodInvocation(1438) at 2", "Insert InfixExpression: +(1437) into MethodInvocation(1438) at 3", "Insert SimpleName: dataCache(236) into MethodInvocation(238) at 0", "Insert SimpleName: getLiveInstances(237) into MethodInvocation(238) at 1", "Insert SimpleName: computeIntermediatePartitionState(254) into MethodInvocation(270) at 0", "Insert SimpleName: dataCache(255) into MethodInvocation(270) at 1", "Insert MethodInvocation(259) into MethodInvocation(270) at 2", "Insert MethodInvocation(263) into MethodInvocation(270) at 3", "Insert SimpleName: currentStateOutput(264) into MethodInvocation(270) at 4", "Move MethodInvocation(223) into MethodInvocation(270) at 5", "Insert SimpleName: throttleController(269) into MethodInvocation(270) at 6", "Insert StringLiteral: \"None of any type of transition throttling is set for resource \"(334) into InfixExpression: +(337) at 0", "Insert SimpleName: resourceName(335) into InfixExpression: +(337) at 1", "Insert StringLiteral: \" skip computing intermediate partition state.\"(336) into InfixExpression: +(337) at 2", "Insert SimpleName: Map(373) into SimpleType: Map(374) at 0", "Insert SimpleName: String(375) into SimpleType: String(376) at 0", "Insert SimpleName: String(377) into SimpleType: String(378) at 0", "Insert SimpleName: currentStateOutput(381) into MethodInvocation(385) at 0", "Insert SimpleName: getCurrentStateMap(382) into MethodInvocation(385) at 1", "Insert SimpleName: resourceName(383) into MethodInvocation(385) at 2", "Insert SimpleName: partition(384) into MethodInvocation(385) at 3", "Insert SimpleName: Map(388) into SimpleType: Map(389) at 0", "Insert SimpleName: String(390) into SimpleType: String(391) at 0", "Insert SimpleName: String(392) into SimpleType: String(393) at 0", "Insert SimpleName: currentStateOutput(396) into MethodInvocation(400) at 0", "Insert SimpleName: getPendingStateMap(397) into MethodInvocation(400) at 1", "Insert SimpleName: resourceName(398) into MethodInvocation(400) at 2", "Insert SimpleName: partition(399) into MethodInvocation(400) at 3", "Insert SimpleName: Map(403) into SimpleType: Map(404) at 0", "Insert SimpleName: String(405) into SimpleType: String(406) at 0", "Insert SimpleName: String(407) into SimpleType: String(408) at 0", "Insert SimpleName: bestPossiblePartitionStateMap(411) into MethodInvocation(414) at 0", "Insert SimpleName: getPartitionMap(412) into MethodInvocation(414) at 1", "Insert SimpleName: partition(413) into MethodInvocation(414) at 2", "Insert Assignment: =(429) into ExpressionStatement(430) at 0", "Insert Assignment: =(433) into ExpressionStatement(434) at 0", "Insert Assignment: =(438) into ExpressionStatement(439) at 0", "Insert SimpleName: pendingMap(442) into MethodInvocation(444) at 0", "Insert SimpleName: size(443) into MethodInvocation(444) at 1", "Insert MethodInvocation(450) into ExpressionStatement(451) at 0", "Insert MethodInvocation(456) into ExpressionStatement(457) at 0", "Insert SimpleName: Set(460) into SimpleType: Set(461) at 0", "Insert SimpleName: String(462) into SimpleType: String(463) at 0", "Insert ParameterizedType: HashSet<String>(470) into ClassInstanceCreation(474) at 0", "Insert MethodInvocation(473) into ClassInstanceCreation(474) at 1", "Insert SimpleName: pendingMap(479) into MethodInvocation(481) at 0", "Insert SimpleName: keySet(480) into MethodInvocation(481) at 1", "Insert SimpleName: String(484) into SimpleType: String(485) at 0", "Insert SimpleType: String(490) into VariableDeclarationStatement(497) at 0", "Insert VariableDeclarationFragment(496) into VariableDeclarationStatement(497) at 1", "Insert SimpleType: String(499) into VariableDeclarationStatement(506) at 0", "Insert VariableDeclarationFragment(505) into VariableDeclarationStatement(506) at 1", "Insert InfixExpression: &&(515) into IfStatement(523) at 0", "Insert Block(522) into IfStatement(523) at 1", "Insert SimpleName: HashSet(559) into SimpleType: HashSet(560) at 0", "Insert SimpleName: Partition(561) into SimpleType: Partition(562) at 0", "Insert SimpleName: HashSet(573) into SimpleType: HashSet(574) at 0", "Insert SimpleName: Partition(575) into SimpleType: Partition(576) at 0", "Insert SimpleName: HashSet(587) into SimpleType: HashSet(588) at 0", "Insert SimpleName: Partition(589) into SimpleType: Partition(590) at 0", "Insert SimpleName: HashSet(601) into SimpleType: HashSet(602) at 0", "Insert SimpleName: Partition(603) into SimpleType: Partition(604) at 0", "Insert SimpleName: Map(616) into SimpleType: Map(617) at 0", "Insert SimpleName: String(618) into SimpleType: String(619) at 0", "Insert SimpleName: String(620) into SimpleType: String(621) at 0", "Insert SimpleName: currentStateOutput(624) into MethodInvocation(628) at 0", "Insert SimpleName: getCurrentStateMap(625) into MethodInvocation(628) at 1", "Insert SimpleName: resourceName(626) into MethodInvocation(628) at 2", "Insert SimpleName: partition(627) into MethodInvocation(628) at 3", "Insert SimpleName: Map(631) into SimpleType: Map(632) at 0", "Insert SimpleName: String(633) into SimpleType: String(634) at 0", "Insert SimpleName: String(635) into SimpleType: String(636) at 0", "Insert SimpleName: bestPossiblePartitionStateMap(639) into MethodInvocation(642) at 0", "Insert SimpleName: getPartitionMap(640) into MethodInvocation(642) at 1", "Insert SimpleName: partition(641) into MethodInvocation(642) at 2", "Insert SimpleName: Map(645) into SimpleType: Map(646) at 0", "Insert SimpleName: String(647) into SimpleType: String(648) at 0", "Insert SimpleName: String(649) into SimpleType: String(650) at 0", "Insert ParameterizedType: HashMap<String,String>(659) into ClassInstanceCreation(660) at 0", "Insert MethodInvocation(670) into ExpressionStatement(671) at 0", "Insert SimpleName: needRecoveryRebalance(673) into MethodInvocation(677) at 0", "Insert SimpleName: bestPossibleMap(674) into MethodInvocation(677) at 1", "Insert SimpleName: stateModelDef(675) into MethodInvocation(677) at 2", "Insert SimpleName: currentStateMap(676) into MethodInvocation(677) at 3", "Insert ExpressionStatement(680) into Block(695) at 0", "Insert ExpressionStatement(685) into Block(695) at 1", "Insert ExpressionStatement(689) into Block(695) at 2", "Insert ExpressionStatement(694) into Block(695) at 3", "Insert ExpressionStatement(700) into Block(701) at 0", "Insert SimpleName: Partition(720) into SimpleType: Partition(721) at 0", "Insert ParameterizedType: Map<String,String>(731) into VariableDeclarationStatement(739) at 0", "Insert VariableDeclarationFragment(738) into VariableDeclarationStatement(739) at 1", "Insert ParameterizedType: Map<String,String>(746) into VariableDeclarationStatement(753) at 0", "Insert VariableDeclarationFragment(752) into VariableDeclarationStatement(753) at 1", "Insert ParameterizedType: Map<String,String>(760) into VariableDeclarationStatement(771) at 0", "Insert VariableDeclarationFragment(770) into VariableDeclarationStatement(771) at 1", "Insert ParameterizedType: Set<String>(777) into VariableDeclarationStatement(789) at 0", "Insert VariableDeclarationFragment(788) into VariableDeclarationStatement(789) at 1", "Insert MethodInvocation(795) into ExpressionStatement(796) at 0", "Insert PrimitiveType: boolean(797) into VariableDeclarationStatement(801) at 0", "Insert VariableDeclarationFragment(800) into VariableDeclarationStatement(801) at 1", "Insert MethodInvocation(806) into IfStatement(884) at 0", "Insert Block(822) into IfStatement(884) at 1", "Insert Block(883) into IfStatement(884) at 2", "Insert PrefixExpression: !(886) into IfStatement(960) at 0", "Insert Block(945) into IfStatement(960) at 1", "Insert Block(959) into IfStatement(960) at 2", "Insert SimpleType: HashSet(989) into ClassInstanceCreation(993) at 0", "Insert MethodInvocation(992) into ClassInstanceCreation(993) at 1", "Insert MethodInvocation(1106) into ExpressionStatement(1107) at 0", "Insert MethodInvocation(1111) into IfStatement(1124) at 0", "Insert Block(1123) into IfStatement(1124) at 1", "Insert SimpleName: loadbalancePartitions(1126) into MethodInvocation(1129) at 0", "Insert SimpleName: contains(1127) into MethodInvocation(1129) at 1", "Insert SimpleName: partition(1128) into MethodInvocation(1129) at 2", "Insert ExpressionStatement(1140) into Block(1158) at 0", "Insert IfStatement(1157) into Block(1158) at 1", "Insert ExpressionStatement(1169) into Block(1170) at 0", "Insert SimpleName: partition(1175) into InfixExpression: +(1181) at 0", "Insert StringLiteral: \": Best possible map: \"(1176) into InfixExpression: +(1181) at 1", "Insert MethodInvocation(1180) into InfixExpression: +(1181) at 2", "Insert SimpleName: partition(1186) into InfixExpression: +(1193) at 0", "Insert StringLiteral: \": Current State: \"(1187) into InfixExpression: +(1193) at 1", "Insert MethodInvocation(1192) into InfixExpression: +(1193) at 2", "Insert SimpleName: partition(1198) into InfixExpression: +(1205) at 0", "Insert StringLiteral: \": Pending state: \"(1199) into InfixExpression: +(1205) at 1", "Insert MethodInvocation(1204) into InfixExpression: +(1205) at 2", "Insert SimpleName: partition(1210) into InfixExpression: +(1216) at 0", "Insert StringLiteral: \": Intermediate state: \"(1211) into InfixExpression: +(1216) at 1", "Insert MethodInvocation(1215) into InfixExpression: +(1216) at 2", "Insert SimpleName: bestPossibleStateCounts(1298) into MethodInvocation(1301) at 0", "Insert SimpleName: get(1299) into MethodInvocation(1301) at 1", "Insert SimpleName: state(1300) into MethodInvocation(1301) at 2", "Insert SimpleName: currentStateCounts(1307) into MethodInvocation(1310) at 0", "Insert SimpleName: get(1308) into MethodInvocation(1310) at 1", "Insert SimpleName: state(1309) into MethodInvocation(1310) at 2", "Insert SimpleName: bestPossibleCount(1313) into InfixExpression: ==(1315) at 0", "Insert NullLiteral(1314) into InfixExpression: ==(1315) at 1", "Insert SimpleName: currentCount(1316) into InfixExpression: ==(1318) at 0", "Insert NullLiteral(1317) into InfixExpression: ==(1318) at 1", "Insert InfixExpression: ||(1328) into InfixExpression: ||(1334) at 0", "Insert PrefixExpression: !(1333) into InfixExpression: ||(1334) at 1", "Insert IfStatement(1363) into Block(1364) at 0", "Insert SimpleName: HashMap(1399) into SimpleType: HashMap(1400) at 0", "Insert SimpleName: String(1401) into SimpleType: String(1402) at 0", "Insert SimpleName: Long(1403) into SimpleType: Long(1404) at 0", "Insert SimpleName: stateCounts(1416) into MethodInvocation(1419) at 0", "Insert SimpleName: containsKey(1417) into MethodInvocation(1419) at 1", "Insert SimpleName: state(1418) into MethodInvocation(1419) at 2", "Insert MethodInvocation(1425) into ExpressionStatement(1426) at 0", "Insert MethodInvocation(1435) into InfixExpression: +(1437) at 0", "Insert NumberLiteral: 1(1436) into InfixExpression: +(1437) at 1", "Insert SimpleName: dataCache(256) into MethodInvocation(259) at 0", "Insert SimpleName: getIdealState(257) into MethodInvocation(259) at 1", "Insert SimpleName: resourceName(258) into MethodInvocation(259) at 2", "Insert SimpleName: resourceMap(260) into MethodInvocation(263) at 0", "Insert SimpleName: get(261) into MethodInvocation(263) at 1", "Insert SimpleName: resourceName(262) into MethodInvocation(263) at 2", "Insert SimpleName: rebalanceType(427) into Assignment: =(429) at 0", "Insert QualifiedName: StateTransitionThrottleConfig.RebalanceType.RECOVERY_BALANCE(428) into Assignment: =(429) at 1", "Insert SimpleName: pendingRecoveryRebalance(431) into Assignment: =(433) at 0", "Insert BooleanLiteral: true(432) into Assignment: =(433) at 1", "Insert SimpleName: rebalanceType(436) into Assignment: =(438) at 0", "Insert QualifiedName: StateTransitionThrottleConfig.RebalanceType.LOAD_BALANCE(437) into Assignment: =(438) at 1", "Insert SimpleName: throttleController(447) into MethodInvocation(450) at 0", "Insert SimpleName: chargeCluster(448) into MethodInvocation(450) at 1", "Insert SimpleName: rebalanceType(449) into MethodInvocation(450) at 2", "Insert SimpleName: throttleController(452) into MethodInvocation(456) at 0", "Insert SimpleName: chargeResource(453) into MethodInvocation(456) at 1", "Insert SimpleName: rebalanceType(454) into MethodInvocation(456) at 2", "Insert SimpleName: resourceName(455) into MethodInvocation(456) at 3", "Insert SimpleType: HashSet(467) into ParameterizedType: HashSet<String>(470) at 0", "Insert SimpleType: String(469) into ParameterizedType: HashSet<String>(470) at 1", "Insert SimpleName: currentStateMap(471) into MethodInvocation(473) at 0", "Insert SimpleName: keySet(472) into MethodInvocation(473) at 1", "Insert SimpleName: String(489) into SimpleType: String(490) at 0", "Insert SimpleName: currentState(491) into VariableDeclarationFragment(496) at 0", "Insert MethodInvocation(495) into VariableDeclarationFragment(496) at 1", "Insert SimpleName: String(498) into SimpleType: String(499) at 0", "Insert SimpleName: pendingState(500) into VariableDeclarationFragment(505) at 0", "Insert MethodInvocation(504) into VariableDeclarationFragment(505) at 1", "Insert InfixExpression: !=(509) into InfixExpression: &&(515) at 0", "Insert PrefixExpression: !(514) into InfixExpression: &&(515) at 1", "Insert ExpressionStatement(521) into Block(522) at 0", "Insert SimpleType: HashMap(654) into ParameterizedType: HashMap<String,String>(659) at 0", "Insert SimpleType: String(656) into ParameterizedType: HashMap<String,String>(659) at 1", "Insert SimpleType: String(658) into ParameterizedType: HashMap<String,String>(659) at 2", "Insert SimpleName: intermediateMap(667) into MethodInvocation(670) at 0", "Insert SimpleName: putAll(668) into MethodInvocation(670) at 1", "Insert SimpleName: bestPossibleMap(669) into MethodInvocation(670) at 2", "Insert PostfixExpression: ++(679) into ExpressionStatement(680) at 0", "Insert MethodInvocation(684) into ExpressionStatement(685) at 0", "Insert Assignment: =(688) into ExpressionStatement(689) at 0", "Insert MethodInvocation(693) into ExpressionStatement(694) at 0", "Insert MethodInvocation(699) into ExpressionStatement(700) at 0", "Insert SimpleType: Map(726) into ParameterizedType: Map<String,String>(731) at 0", "Insert SimpleType: String(728) into ParameterizedType: Map<String,String>(731) at 1", "Insert SimpleType: String(730) into ParameterizedType: Map<String,String>(731) at 2", "Insert SimpleName: currentStateMap(732) into VariableDeclarationFragment(738) at 0", "Insert MethodInvocation(737) into VariableDeclarationFragment(738) at 1", "Insert SimpleType: Map(741) into ParameterizedType: Map<String,String>(746) at 0", "Insert SimpleType: String(743) into ParameterizedType: Map<String,String>(746) at 1", "Insert SimpleType: String(745) into ParameterizedType: Map<String,String>(746) at 2", "Insert SimpleName: bestPossibleMap(747) into VariableDeclarationFragment(752) at 0", "Insert MethodInvocation(751) into VariableDeclarationFragment(752) at 1", "Insert SimpleType: Map(755) into ParameterizedType: Map<String,String>(760) at 0", "Insert SimpleType: String(757) into ParameterizedType: Map<String,String>(760) at 1", "Insert SimpleType: String(759) into ParameterizedType: Map<String,String>(760) at 2", "Insert SimpleName: intermediateMap(761) into VariableDeclarationFragment(770) at 0", "Insert ClassInstanceCreation(769) into VariableDeclarationFragment(770) at 1", "Insert SimpleType: Set(774) into ParameterizedType: Set<String>(777) at 0", "Insert SimpleType: String(776) into ParameterizedType: Set<String>(777) at 1", "Insert SimpleName: allInstances(778) into VariableDeclarationFragment(788) at 0", "Insert ClassInstanceCreation(787) into VariableDeclarationFragment(788) at 1", "Insert SimpleName: allInstances(790) into MethodInvocation(795) at 0", "Insert SimpleName: addAll(791) into MethodInvocation(795) at 1", "Insert MethodInvocation(794) into MethodInvocation(795) at 2", "Insert SimpleName: throttled(798) into VariableDeclarationFragment(800) at 0", "Insert BooleanLiteral: false(799) into VariableDeclarationFragment(800) at 1", "Insert SimpleName: throttleController(802) into MethodInvocation(806) at 0", "Insert SimpleName: throttleforResource(803) into MethodInvocation(806) at 1", "Insert QualifiedName: StateTransitionThrottleConfig.RebalanceType.LOAD_BALANCE(804) into MethodInvocation(806) at 2", "Insert SimpleName: resourceName(805) into MethodInvocation(806) at 3", "Insert ExpressionStatement(810) into Block(822) at 0", "Move ExpressionStatement(216) into Block(822) at 1", "Insert EnhancedForStatement(882) into Block(883) at 0", "Insert SimpleName: throttled(885) into PrefixExpression: !(886) at 0", "Insert ExpressionStatement(891) into Block(945) at 0", "Insert EnhancedForStatement(933) into Block(945) at 1", "Insert ExpressionStatement(938) into Block(945) at 2", "Insert ExpressionStatement(944) into Block(945) at 3", "Insert ExpressionStatement(950) into Block(959) at 0", "Insert ExpressionStatement(953) into Block(959) at 1", "Insert ExpressionStatement(958) into Block(959) at 2", "Update SimpleName: resourceName(219) to partition", "Insert SimpleName: intermediateMap(964) into MethodInvocation(965) at 3", "Insert SimpleName: HashSet(988) into SimpleType: HashSet(989) at 0", "Insert SimpleName: resource(990) into MethodInvocation(992) at 0", "Insert SimpleName: getPartitions(991) into MethodInvocation(992) at 1", "Insert SimpleName: logger(1097) into MethodInvocation(1106) at 0", "Insert SimpleName: debug(1098) into MethodInvocation(1106) at 1", "Insert InfixExpression: +(1105) into MethodInvocation(1106) at 2", "Insert SimpleName: recoveryThrottledPartitions(1108) into MethodInvocation(1111) at 0", "Insert SimpleName: contains(1109) into MethodInvocation(1111) at 1", "Insert SimpleName: partition(1110) into MethodInvocation(1111) at 2", "Insert ExpressionStatement(1122) into Block(1123) at 0", "Insert MethodInvocation(1139) into ExpressionStatement(1140) at 0", "Insert MethodInvocation(1144) into IfStatement(1157) at 0", "Insert Block(1156) into IfStatement(1157) at 1", "Insert MethodInvocation(1168) into ExpressionStatement(1169) at 0", "Insert SimpleName: bestPossibleStateMap(1177) into MethodInvocation(1180) at 0", "Insert SimpleName: getPartitionMap(1178) into MethodInvocation(1180) at 1", "Insert SimpleName: partition(1179) into MethodInvocation(1180) at 2", "Insert SimpleName: currentStateOutput(1188) into MethodInvocation(1192) at 0", "Insert SimpleName: getCurrentStateMap(1189) into MethodInvocation(1192) at 1", "Insert SimpleName: resource(1190) into MethodInvocation(1192) at 2", "Insert SimpleName: partition(1191) into MethodInvocation(1192) at 3", "Insert SimpleName: currentStateOutput(1200) into MethodInvocation(1204) at 0", "Insert SimpleName: getPendingMessageMap(1201) into MethodInvocation(1204) at 1", "Insert SimpleName: resource(1202) into MethodInvocation(1204) at 2", "Insert SimpleName: partition(1203) into MethodInvocation(1204) at 3", "Insert SimpleName: intermediateStateMap(1212) into MethodInvocation(1215) at 0", "Insert SimpleName: getPartitionMap(1213) into MethodInvocation(1215) at 1", "Insert SimpleName: partition(1214) into MethodInvocation(1215) at 2", "Insert InfixExpression: ==(1324) into InfixExpression: ||(1328) at 0", "Insert InfixExpression: ==(1327) into InfixExpression: ||(1328) at 1", "Insert MethodInvocation(1332) into PrefixExpression: !(1333) at 0", "Insert InfixExpression: &&(1356) into IfStatement(1363) at 0", "Insert Block(1362) into IfStatement(1363) at 1", "Insert SimpleName: stateCounts(1421) into MethodInvocation(1425) at 0", "Insert SimpleName: put(1422) into MethodInvocation(1425) at 1", "Insert SimpleName: state(1423) into MethodInvocation(1425) at 2", "Insert NumberLiteral: 0L(1424) into MethodInvocation(1425) at 3", "Insert SimpleName: stateCounts(1432) into MethodInvocation(1435) at 0", "Insert SimpleName: get(1433) into MethodInvocation(1435) at 1", "Insert SimpleName: state(1434) into MethodInvocation(1435) at 2", "Insert SimpleName: HashSet(466) into SimpleType: HashSet(467) at 0", "Insert SimpleName: String(468) into SimpleType: String(469) at 0", "Insert SimpleName: currentStateMap(492) into MethodInvocation(495) at 0", "Insert SimpleName: get(493) into MethodInvocation(495) at 1", "Insert SimpleName: ins(494) into MethodInvocation(495) at 2", "Insert SimpleName: pendingMap(501) into MethodInvocation(504) at 0", "Insert SimpleName: get(502) into MethodInvocation(504) at 1", "Insert SimpleName: ins(503) into MethodInvocation(504) at 2", "Insert SimpleName: pendingState(507) into InfixExpression: !=(509) at 0", "Insert NullLiteral(508) into InfixExpression: !=(509) at 1", "Insert MethodInvocation(513) into PrefixExpression: !(514) at 0", "Insert MethodInvocation(520) into ExpressionStatement(521) at 0", "Insert SimpleName: HashMap(653) into SimpleType: HashMap(654) at 0", "Insert SimpleName: String(655) into SimpleType: String(656) at 0", "Insert SimpleName: String(657) into SimpleType: String(658) at 0", "Insert SimpleName: recoveryNeededCount(678) into PostfixExpression: ++(679) at 0", "Insert SimpleName: intermediateMap(681) into MethodInvocation(684) at 0", "Insert SimpleName: putAll(682) into MethodInvocation(684) at 1", "Insert SimpleName: bestPossibleMap(683) into MethodInvocation(684) at 2", "Insert SimpleName: pendingRecoveryRebalance(686) into Assignment: =(688) at 0", "Insert BooleanLiteral: true(687) into Assignment: =(688) at 1", "Insert SimpleName: partitionsNeedRecovery(690) into MethodInvocation(693) at 0", "Insert SimpleName: add(691) into MethodInvocation(693) at 1", "Insert SimpleName: partition(692) into MethodInvocation(693) at 2", "Insert SimpleName: partitionsNeedLoadbalance(696) into MethodInvocation(699) at 0", "Insert SimpleName: add(697) into MethodInvocation(699) at 1", "Insert SimpleName: partition(698) into MethodInvocation(699) at 2", "Insert SimpleName: Map(725) into SimpleType: Map(726) at 0", "Insert SimpleName: String(727) into SimpleType: String(728) at 0", "Insert SimpleName: String(729) into SimpleType: String(730) at 0", "Insert SimpleName: currentStateOutput(733) into MethodInvocation(737) at 0", "Insert SimpleName: getCurrentStateMap(734) into MethodInvocation(737) at 1", "Insert SimpleName: resourceName(735) into MethodInvocation(737) at 2", "Insert SimpleName: partition(736) into MethodInvocation(737) at 3", "Insert SimpleName: Map(740) into SimpleType: Map(741) at 0", "Insert SimpleName: String(742) into SimpleType: String(743) at 0", "Insert SimpleName: String(744) into SimpleType: String(745) at 0", "Insert SimpleName: bestPossiblePartitionStateMap(748) into MethodInvocation(751) at 0", "Insert SimpleName: getPartitionMap(749) into MethodInvocation(751) at 1", "Insert SimpleName: partition(750) into MethodInvocation(751) at 2", "Insert SimpleName: Map(754) into SimpleType: Map(755) at 0", "Insert SimpleName: String(756) into SimpleType: String(757) at 0", "Insert SimpleName: String(758) into SimpleType: String(759) at 0", "Insert ParameterizedType: HashMap<String,String>(768) into ClassInstanceCreation(769) at 0", "Insert SimpleName: Set(773) into SimpleType: Set(774) at 0", "Insert SimpleName: String(775) into SimpleType: String(776) at 0", "Insert ParameterizedType: HashSet<String>(783) into ClassInstanceCreation(787) at 0", "Insert MethodInvocation(786) into ClassInstanceCreation(787) at 1", "Insert SimpleName: bestPossibleMap(792) into MethodInvocation(794) at 0", "Insert SimpleName: keySet(793) into MethodInvocation(794) at 1", "Insert Assignment: =(809) into ExpressionStatement(810) at 0", "Insert SingleVariableDeclaration(826) into EnhancedForStatement(882) at 0", "Insert SimpleName: allInstances(827) into EnhancedForStatement(882) at 1", "Insert Block(881) into EnhancedForStatement(882) at 2", "Insert MethodInvocation(890) into ExpressionStatement(891) at 0", "Insert SingleVariableDeclaration(895) into EnhancedForStatement(933) at 0", "Insert SimpleName: allInstances(896) into EnhancedForStatement(933) at 1", "Insert Block(932) into EnhancedForStatement(933) at 2", "Insert MethodInvocation(937) into ExpressionStatement(938) at 0", "Insert MethodInvocation(943) into ExpressionStatement(944) at 0", "Insert MethodInvocation(949) into ExpressionStatement(950) at 0", "Insert PostfixExpression: ++(952) into ExpressionStatement(953) at 0", "Insert MethodInvocation(957) into ExpressionStatement(958) at 0", "Insert StringLiteral: \"recovery balance needed for \"(1099) into InfixExpression: +(1105) at 0", "Insert SimpleName: resource(1100) into InfixExpression: +(1105) at 1", "Insert StringLiteral: \" \"(1101) into InfixExpression: +(1105) at 2", "Insert MethodInvocation(1104) into InfixExpression: +(1105) at 3", "Insert MethodInvocation(1121) into ExpressionStatement(1122) at 0", "Insert SimpleName: logger(1130) into MethodInvocation(1139) at 0", "Insert SimpleName: debug(1131) into MethodInvocation(1139) at 1", "Insert InfixExpression: +(1138) into MethodInvocation(1139) at 2", "Insert SimpleName: loadbalanceThrottledPartitions(1141) into MethodInvocation(1144) at 0", "Insert SimpleName: contains(1142) into MethodInvocation(1144) at 1", "Insert SimpleName: partition(1143) into MethodInvocation(1144) at 2", "Insert ExpressionStatement(1155) into Block(1156) at 0", "Insert SimpleName: logger(1159) into MethodInvocation(1168) at 0", "Insert SimpleName: debug(1160) into MethodInvocation(1168) at 1", "Insert InfixExpression: +(1167) into MethodInvocation(1168) at 2", "Insert SimpleName: bestPossibleCount(1322) into InfixExpression: ==(1324) at 0", "Insert NullLiteral(1323) into InfixExpression: ==(1324) at 1", "Insert SimpleName: currentCount(1325) into InfixExpression: ==(1327) at 0", "Insert NullLiteral(1326) into InfixExpression: ==(1327) at 1", "Insert SimpleName: bestPossibleCount(1329) into MethodInvocation(1332) at 0", "Insert SimpleName: equals(1330) into MethodInvocation(1332) at 1", "Insert SimpleName: currentCount(1331) into MethodInvocation(1332) at 2", "Insert PrefixExpression: !(1341) into InfixExpression: &&(1356) at 0", "Insert PrefixExpression: !(1348) into InfixExpression: &&(1356) at 1", "Insert PrefixExpression: !(1355) into InfixExpression: &&(1356) at 2", "Insert ExpressionStatement(1360) into Block(1362) at 0", "Insert BreakStatement(1361) into Block(1362) at 1", "Insert SimpleName: pendingState(510) into MethodInvocation(513) at 0", "Insert SimpleName: equals(511) into MethodInvocation(513) at 1", "Insert SimpleName: currentState(512) into MethodInvocation(513) at 2", "Insert SimpleName: throttleController(516) into MethodInvocation(520) at 0", "Insert SimpleName: chargeInstance(517) into MethodInvocation(520) at 1", "Insert SimpleName: rebalanceType(518) into MethodInvocation(520) at 2", "Insert SimpleName: ins(519) into MethodInvocation(520) at 3", "Insert SimpleType: HashMap(763) into ParameterizedType: HashMap<String,String>(768) at 0", "Insert SimpleType: String(765) into ParameterizedType: HashMap<String,String>(768) at 1", "Insert SimpleType: String(767) into ParameterizedType: HashMap<String,String>(768) at 2", "Insert SimpleType: HashSet(780) into ParameterizedType: HashSet<String>(783) at 0", "Insert SimpleType: String(782) into ParameterizedType: HashSet<String>(783) at 1", "Insert SimpleName: currentStateMap(784) into MethodInvocation(786) at 0", "Insert SimpleName: keySet(785) into MethodInvocation(786) at 1", "Insert SimpleName: throttled(807) into Assignment: =(809) at 0", "Insert BooleanLiteral: true(808) into Assignment: =(809) at 1", "Insert InfixExpression: +(819) into MethodInvocation(820) at 2", "Insert SimpleType: String(824) into SingleVariableDeclaration(826) at 0", "Insert SimpleName: ins(825) into SingleVariableDeclaration(826) at 1", "Insert VariableDeclarationStatement(836) into Block(881) at 0", "Insert VariableDeclarationStatement(845) into Block(881) at 1", "Insert IfStatement(880) into Block(881) at 2", "Insert SimpleName: intermediateMap(887) into MethodInvocation(890) at 0", "Insert SimpleName: putAll(888) into MethodInvocation(890) at 1", "Insert SimpleName: bestPossibleMap(889) into MethodInvocation(890) at 2", "Insert SimpleType: String(893) into SingleVariableDeclaration(895) at 0", "Insert SimpleName: ins(894) into SingleVariableDeclaration(895) at 1", "Insert VariableDeclarationStatement(905) into Block(932) at 0", "Insert VariableDeclarationStatement(914) into Block(932) at 1", "Insert IfStatement(931) into Block(932) at 2", "Insert SimpleName: throttleController(934) into MethodInvocation(937) at 0", "Insert SimpleName: chargeCluster(935) into MethodInvocation(937) at 1", "Insert QualifiedName: StateTransitionThrottleConfig.RebalanceType.LOAD_BALANCE(936) into MethodInvocation(937) at 2", "Insert SimpleName: throttleController(939) into MethodInvocation(943) at 0", "Insert SimpleName: chargeResource(940) into MethodInvocation(943) at 1", "Insert QualifiedName: StateTransitionThrottleConfig.RebalanceType.LOAD_BALANCE(941) into MethodInvocation(943) at 2", "Insert SimpleName: resourceName(942) into MethodInvocation(943) at 3", "Insert SimpleName: intermediateMap(946) into MethodInvocation(949) at 0", "Insert SimpleName: putAll(947) into MethodInvocation(949) at 1", "Insert SimpleName: currentStateMap(948) into MethodInvocation(949) at 2", "Insert SimpleName: loadbalanceThrottledCount(951) into PostfixExpression: ++(952) at 0", "Insert SimpleName: partitionsLoadbalanceThrottled(954) into MethodInvocation(957) at 0", "Insert SimpleName: add(955) into MethodInvocation(957) at 1", "Insert SimpleName: partition(956) into MethodInvocation(957) at 2", "Insert SimpleName: partition(1102) into MethodInvocation(1104) at 0", "Insert SimpleName: getPartitionName(1103) into MethodInvocation(1104) at 1", "Insert SimpleName: logger(1112) into MethodInvocation(1121) at 0", "Insert SimpleName: debug(1113) into MethodInvocation(1121) at 1", "Insert InfixExpression: +(1120) into MethodInvocation(1121) at 2", "Insert StringLiteral: \"load balance needed for \"(1132) into InfixExpression: +(1138) at 0", "Insert SimpleName: resource(1133) into InfixExpression: +(1138) at 1", "Insert StringLiteral: \" \"(1134) into InfixExpression: +(1138) at 2", "Insert MethodInvocation(1137) into InfixExpression: +(1138) at 3", "Insert MethodInvocation(1154) into ExpressionStatement(1155) at 0", "Insert StringLiteral: \"no balance needed for \"(1161) into InfixExpression: +(1167) at 0", "Insert SimpleName: resource(1162) into InfixExpression: +(1167) at 1", "Insert StringLiteral: \" \"(1163) into InfixExpression: +(1167) at 2", "Insert MethodInvocation(1166) into InfixExpression: +(1167) at 3", "Insert MethodInvocation(1340) into PrefixExpression: !(1341) at 0", "Insert MethodInvocation(1347) into PrefixExpression: !(1348) at 0", "Insert MethodInvocation(1354) into PrefixExpression: !(1355) at 0", "Insert Assignment: =(1359) into ExpressionStatement(1360) at 0", "Insert SimpleName: HashMap(762) into SimpleType: HashMap(763) at 0", "Insert SimpleName: String(764) into SimpleType: String(765) at 0", "Insert SimpleName: String(766) into SimpleType: String(767) at 0", "Insert SimpleName: HashSet(779) into SimpleType: HashSet(780) at 0", "Insert SimpleName: String(781) into SimpleType: String(782) at 0", "Insert StringLiteral: \"Load balance throttled on resource for \"(813) into InfixExpression: +(819) at 0", "Insert SimpleName: resourceName(814) into InfixExpression: +(819) at 1", "Insert StringLiteral: \" \"(815) into InfixExpression: +(819) at 2", "Insert MethodInvocation(818) into InfixExpression: +(819) at 3", "Insert SimpleName: String(823) into SimpleType: String(824) at 0", "Insert SimpleType: String(829) into VariableDeclarationStatement(836) at 0", "Insert VariableDeclarationFragment(835) into VariableDeclarationStatement(836) at 1", "Insert SimpleType: String(838) into VariableDeclarationStatement(845) at 0", "Insert VariableDeclarationFragment(844) into VariableDeclarationStatement(845) at 1", "Insert InfixExpression: &&(854) into IfStatement(880) at 0", "Insert Block(879) into IfStatement(880) at 1", "Insert SimpleName: String(892) into SimpleType: String(893) at 0", "Insert SimpleType: String(898) into VariableDeclarationStatement(905) at 0", "Insert VariableDeclarationFragment(904) into VariableDeclarationStatement(905) at 1", "Insert SimpleType: String(907) into VariableDeclarationStatement(914) at 0", "Insert VariableDeclarationFragment(913) into VariableDeclarationStatement(914) at 1", "Insert InfixExpression: &&(923) into IfStatement(931) at 0", "Insert Block(930) into IfStatement(931) at 1", "Insert StringLiteral: \"Recovery balance throttled on resource for \"(1114) into InfixExpression: +(1120) at 0", "Insert SimpleName: resource(1115) into InfixExpression: +(1120) at 1", "Insert StringLiteral: \" \"(1116) into InfixExpression: +(1120) at 2", "Insert MethodInvocation(1119) into InfixExpression: +(1120) at 3", "Insert SimpleName: partition(1135) into MethodInvocation(1137) at 0", "Insert SimpleName: getPartitionName(1136) into MethodInvocation(1137) at 1", "Insert SimpleName: logger(1145) into MethodInvocation(1154) at 0", "Insert SimpleName: debug(1146) into MethodInvocation(1154) at 1", "Insert InfixExpression: +(1153) into MethodInvocation(1154) at 2", "Insert SimpleName: partition(1164) into MethodInvocation(1166) at 0", "Insert SimpleName: getPartitionName(1165) into MethodInvocation(1166) at 1", "Insert SimpleName: state(1335) into MethodInvocation(1340) at 0", "Insert SimpleName: equals(1336) into MethodInvocation(1340) at 1", "Insert MethodInvocation(1339) into MethodInvocation(1340) at 2", "Insert SimpleName: state(1342) into MethodInvocation(1347) at 0", "Insert SimpleName: equals(1343) into MethodInvocation(1347) at 1", "Insert MethodInvocation(1346) into MethodInvocation(1347) at 2", "Insert SimpleName: state(1349) into MethodInvocation(1354) at 0", "Insert SimpleName: equals(1350) into MethodInvocation(1354) at 1", "Insert MethodInvocation(1353) into MethodInvocation(1354) at 2", "Insert SimpleName: recoveryBalanceNeeded(1357) into Assignment: =(1359) at 0", "Insert BooleanLiteral: true(1358) into Assignment: =(1359) at 1", "Insert SimpleName: partition(816) into MethodInvocation(818) at 0", "Insert SimpleName: getPartitionName(817) into MethodInvocation(818) at 1", "Insert SimpleName: String(828) into SimpleType: String(829) at 0", "Insert SimpleName: currentState(830) into VariableDeclarationFragment(835) at 0", "Insert MethodInvocation(834) into VariableDeclarationFragment(835) at 1", "Insert SimpleName: String(837) into SimpleType: String(838) at 0", "Insert SimpleName: bestPossibleState(839) into VariableDeclarationFragment(844) at 0", "Insert MethodInvocation(843) into VariableDeclarationFragment(844) at 1", "Insert InfixExpression: !=(848) into InfixExpression: &&(854) at 0", "Insert PrefixExpression: !(853) into InfixExpression: &&(854) at 1", "Insert IfStatement(878) into Block(879) at 0", "Insert SimpleName: String(897) into SimpleType: String(898) at 0", "Insert SimpleName: currentState(899) into VariableDeclarationFragment(904) at 0", "Insert MethodInvocation(903) into VariableDeclarationFragment(904) at 1", "Insert SimpleName: String(906) into SimpleType: String(907) at 0", "Insert SimpleName: bestPossibleState(908) into VariableDeclarationFragment(913) at 0", "Insert MethodInvocation(912) into VariableDeclarationFragment(913) at 1", "Insert InfixExpression: !=(917) into InfixExpression: &&(923) at 0", "Insert PrefixExpression: !(922) into InfixExpression: &&(923) at 1", "Insert ExpressionStatement(929) into Block(930) at 0", "Insert SimpleName: partition(1117) into MethodInvocation(1119) at 0", "Insert SimpleName: getPartitionName(1118) into MethodInvocation(1119) at 1", "Insert StringLiteral: \"Load balance throttled on resource for \"(1147) into InfixExpression: +(1153) at 0", "Insert SimpleName: resource(1148) into InfixExpression: +(1153) at 1", "Insert StringLiteral: \" \"(1149) into InfixExpression: +(1153) at 2", "Insert MethodInvocation(1152) into InfixExpression: +(1153) at 3", "Insert QualifiedName: HelixDefinedState.DROPPED(1337) into MethodInvocation(1339) at 0", "Insert SimpleName: name(1338) into MethodInvocation(1339) at 1", "Insert QualifiedName: HelixDefinedState.ERROR(1344) into MethodInvocation(1346) at 0", "Insert SimpleName: name(1345) into MethodInvocation(1346) at 1", "Insert SimpleName: stateModelDef(1351) into MethodInvocation(1353) at 0", "Insert SimpleName: getInitialState(1352) into MethodInvocation(1353) at 1", "Insert SimpleName: currentStateMap(831) into MethodInvocation(834) at 0", "Insert SimpleName: get(832) into MethodInvocation(834) at 1", "Insert SimpleName: ins(833) into MethodInvocation(834) at 2", "Insert SimpleName: bestPossibleMap(840) into MethodInvocation(843) at 0", "Insert SimpleName: get(841) into MethodInvocation(843) at 1", "Insert SimpleName: ins(842) into MethodInvocation(843) at 2", "Insert SimpleName: bestPossibleState(846) into InfixExpression: !=(848) at 0", "Insert NullLiteral(847) into InfixExpression: !=(848) at 1", "Insert MethodInvocation(852) into PrefixExpression: !(853) at 0", "Insert MethodInvocation(859) into IfStatement(878) at 0", "Insert Block(877) into IfStatement(878) at 1", "Insert SimpleName: currentStateMap(900) into MethodInvocation(903) at 0", "Insert SimpleName: get(901) into MethodInvocation(903) at 1", "Insert SimpleName: ins(902) into MethodInvocation(903) at 2", "Insert SimpleName: bestPossibleMap(909) into MethodInvocation(912) at 0", "Insert SimpleName: get(910) into MethodInvocation(912) at 1", "Insert SimpleName: ins(911) into MethodInvocation(912) at 2", "Insert SimpleName: bestPossibleState(915) into InfixExpression: !=(917) at 0", "Insert NullLiteral(916) into InfixExpression: !=(917) at 1", "Insert MethodInvocation(921) into PrefixExpression: !(922) at 0", "Insert MethodInvocation(928) into ExpressionStatement(929) at 0", "Insert SimpleName: partition(1150) into MethodInvocation(1152) at 0", "Insert SimpleName: getPartitionName(1151) into MethodInvocation(1152) at 1", "Insert SimpleName: bestPossibleState(849) into MethodInvocation(852) at 0", "Insert SimpleName: equals(850) into MethodInvocation(852) at 1", "Insert SimpleName: currentState(851) into MethodInvocation(852) at 2", "Insert SimpleName: throttleController(855) into MethodInvocation(859) at 0", "Insert SimpleName: throttleForInstance(856) into MethodInvocation(859) at 1", "Insert QualifiedName: StateTransitionThrottleConfig.RebalanceType.LOAD_BALANCE(857) into MethodInvocation(859) at 2", "Insert SimpleName: ins(858) into MethodInvocation(859) at 3", "Insert ExpressionStatement(863) into Block(877) at 0", "Insert ExpressionStatement(876) into Block(877) at 1", "Insert SimpleName: bestPossibleState(918) into MethodInvocation(921) at 0", "Insert SimpleName: equals(919) into MethodInvocation(921) at 1", "Insert SimpleName: currentState(920) into MethodInvocation(921) at 2", "Insert SimpleName: throttleController(924) into MethodInvocation(928) at 0", "Insert SimpleName: chargeInstance(925) into MethodInvocation(928) at 1", "Insert QualifiedName: StateTransitionThrottleConfig.RebalanceType.LOAD_BALANCE(926) into MethodInvocation(928) at 2", "Insert SimpleName: ins(927) into MethodInvocation(928) at 3", "Insert Assignment: =(862) into ExpressionStatement(863) at 0", "Insert MethodInvocation(875) into ExpressionStatement(876) at 0", "Insert SimpleName: throttled(860) into Assignment: =(862) at 0", "Insert BooleanLiteral: true(861) into Assignment: =(862) at 1", "Insert SimpleName: logger(864) into MethodInvocation(875) at 0", "Insert SimpleName: debug(865) into MethodInvocation(875) at 1", "Insert InfixExpression: +(874) into MethodInvocation(875) at 2", "Insert StringLiteral: \"Load balance throttled because instance \"(866) into InfixExpression: +(874) at 0", "Insert SimpleName: ins(867) into InfixExpression: +(874) at 1", "Insert StringLiteral: \" for \"(868) into InfixExpression: +(874) at 2", "Insert SimpleName: resourceName(869) into InfixExpression: +(874) at 3", "Insert StringLiteral: \" \"(870) into InfixExpression: +(874) at 4", "Insert MethodInvocation(873) into InfixExpression: +(874) at 5", "Insert SimpleName: partition(871) into MethodInvocation(873) at 0", "Insert SimpleName: getPartitionName(872) into MethodInvocation(873) at 1", "Delete Block(230)", "Delete MethodDeclaration(231)"]}}, {"MessageGenerationPhase_cluster": {"actions": [{"root": "UPDATE from toString to name", "operations": ["UPD SimpleName: toString from toString to name", "UPD SimpleName: toString from toString to name", "UPD SimpleName: toString from toString to name", "UPD SimpleName: toString from toString to name"]}]}}, {"MessageGenerationPhase_diff": {"operations": ["Update SimpleName: toString(650) to name", "Update SimpleName: toString(102) to name", "Update SimpleName: toString(113) to name", "Update SimpleName: toString(124) to name"]}}, {"MessageSelectionStage_cluster": {"actions": [{"root": "UPDATE from toString to name", "operations": ["UPD SimpleName: toString from toString to name", "UPD SimpleName: toString from toString to name", "UPD SimpleName: toString from toString to name", "UPD SimpleName: toString from toString to name"]}]}}, {"MessageSelectionStage_diff": {"operations": ["Update SimpleName: toString(350) to name", "Update SimpleName: toString(163) to name", "Update SimpleName: toString(174) to name", "Update SimpleName: toString(185) to name"]}}, {"MessageThrottleStage_cluster": {"actions": [{"root": "UPDATE from toString to name", "operations": ["UPD SimpleName: toString from toString to name", "UPD SimpleName: toString from toString to name", "UPD SimpleName: toString from toString to name"]}]}}, {"MessageThrottleStage_diff": {"operations": ["Update SimpleName: toString(530) to name", "Update SimpleName: toString(345) to name", "Update SimpleName: toString(361) to name"]}}, {"PersistAssignmentStage_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: org.apache.helix.controller.common.PartitionStateMap to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS Block to MethodDeclaration at 6"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: ClusterConfig", "DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: &&", "DEL ParameterizedType: Map<String,String>", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: ZNRecord", "DEL VariableDeclarationStatement", "DEL SimpleName: idealState", "DEL VariableDeclarationFragment", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: ClusterDataCache", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL InfixExpression: +", "DEL SimpleType: IdealState", "DEL QualifiedName: IdealState.RebalanceMode.FULL_AUTO", "DEL SimpleName: needPersist", "DEL VariableDeclarationFragment", "DEL PrefixExpression: !", "DEL PrimitiveType: boolean", "DEL BooleanLiteral: false", "DEL MethodInvocation", "DEL PrimitiveType: long", "DEL SimpleType: ZNRecord", "DEL SimpleName: cache", "DEL MethodInvocation", "DEL ParameterizedType: Map<String,Resource>", "DEL NullLiteral", "DEL SimpleName: hasPreferenceListChanged", "DEL BooleanLiteral: true", "DEL SimpleName: DataUpdater", "DEL IfStatement", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL Modifier: public", "DEL SimpleName: bestPossibleAssignment", "DEL SimpleName: current", "DEL SimpleName: LOG", "DEL SimpleName: accessor", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: newLists", "DEL MethodInvocation", "DEL PrimitiveType: long", "DEL MethodInvocation", "DEL SimpleName: getAttribute", "DEL SimpleName: name", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: get", "DEL SimpleName: bestPossibleAssignements", "DEL ClassInstanceCreation", "DEL SimpleName: getRecord", "DEL SimpleName: bestPossibleAssignment", "DEL InfixExpression: !=", "DEL SimpleType: Map", "DEL SimpleName: IdealState", "DEL StringLiteral: \"IdealState not found for resource \"", "DEL SimpleType: Map", "DEL SimpleName: bestPossibleAssignements", "DEL SimpleName: HelixManager", "DEL SimpleName: cache", "DEL IfStatement", "DEL SimpleName: String", "DEL SimpleName: clusterConfig", "DEL Assignment: =", "DEL SimpleName: Map", "DEL VariableDeclarationStatement", "DEL SimpleName: putAll", "DEL ReturnStatement", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: partition", "DEL SimpleName: LOG", "DEL SimpleName: BestPossibleStateOutput", "DEL SimpleName: idealState", "DEL SimpleName: bestPossibleAssignment", "DEL SimpleName: resourceId", "DEL SimpleName: newLists", "DEL SimpleName: cache", "DEL MethodInvocation", "DEL SimpleName: startTime", "DEL SimpleName: needPersist", "DEL SimpleName: ZNRecord", "DEL SimpleName: current", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: partition", "DEL SimpleType: String", "DEL AnonymousClassDeclaration", "DEL StringLiteral: \"helixmanager\"", "DEL ParameterizedType: Map<String,List<String>>", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: getRecord", "DEL SimpleName: getListFields", "DEL IfStatement", "DEL ExpressionStatement", "DEL QualifiedName: IdealState.RebalanceMode", "DEL MethodInvocation", "DEL BooleanLiteral: true", "DEL ExpressionStatement", "DEL SimpleName: equals", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: bestPossibleAssignements", "DEL SimpleName: resource", "DEL SimpleName: idealState", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleType: ClusterConfig", "DEL SimpleType: HelixDataAccessor", "DEL SimpleName: event", "DEL QualifiedName: AttributeName.RESOURCES", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"END PersistAssignmentStage.process(), took \"", "DEL SimpleName: Map", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: getAttribute", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL SimpleName: helixManager", "DEL SimpleName: getMapFields", "DEL SimpleName: current", "DEL SimpleName: String", "DEL SimpleName: String", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL SimpleName: isPersistBestPossibleAssignment", "DEL SimpleType: String", "DEL SimpleName: getMapFields", "DEL SimpleType: PropertyKey.Builder", "DEL SimpleName: helixManager", "DEL InfixExpression: +", "DEL VariableDeclarationStatement", "DEL SimpleName: Map", "DEL SimpleType: String", "DEL SimpleName: accessor", "DEL SimpleName: newLists", "DEL IfStatement", "DEL SimpleName: System", "DEL SimpleName: bestPossibleAssignment", "DEL SimpleName: resourceId", "DEL MethodInvocation", "DEL IfStatement", "DEL IfStatement", "DEL ExpressionStatement", "DEL SimpleName: bestPossibleAssignements", "DEL ParenthesizedExpression", "DEL SimpleType: HelixManager", "DEL MethodInvocation", "DEL SimpleName: keySet", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: idealState", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleType: Partition", "DEL SimpleName: update", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: Resource", "DEL EnhancedForStatement", "DEL SimpleName: resourceId", "DEL SimpleName: Override", "DEL StringLiteral: \"ClusterDataCache\"", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: resourceMap", "DEL SimpleType: Map", "DEL SimpleName: mode", "DEL SimpleName: Map", "DEL SimpleName: newLists", "DEL Block", "DEL IfStatement", "DEL Block", "DEL SimpleName: event", "DEL SimpleName: Partition", "DEL SimpleName: Resource", "DEL SimpleName: resourceId", "DEL SimpleName: setPreferenceLists", "DEL SimpleName: equals", "DEL SimpleName: mode", "DEL SimpleName: event", "DEL SimpleName: instanceMap", "DEL SimpleName: partition", "DEL ParameterizedType: Map<Partition,Map<String,String>>", "DEL SimpleType: Map", "DEL EnhancedForStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: idealState", "DEL Block", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL PrefixExpression: !", "DEL SimpleType: ClusterDataCache", "DEL SimpleName: endTime", "DEL SimpleType: String", "DEL SimpleName: instanceMap", "DEL InfixExpression: !=", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: getResourceMap", "DEL SimpleName: String", "DEL SimpleName: Map", "DEL SimpleName: get", "DEL SimpleName: String", "DEL StringLiteral: \"START PersistAssignmentStage.process()\"", "DEL SimpleName: idealState", "DEL SimpleName: String", "DEL InfixExpression: !=", "DEL ContinueStatement", "DEL ExpressionStatement", "DEL SimpleName: startTime", "DEL MethodInvocation", "DEL QualifiedName: IdealState.RebalanceMode.SEMI_AUTO", "DEL MethodInvocation", "DEL SimpleName: getRebalanceMode", "DEL SimpleName: setInstanceStateMap", "DEL VariableDeclarationFragment", "DEL SimpleType: BestPossibleStateOutput", "DEL SimpleName: needPersist", "DEL Block", "DEL SimpleName: resourceMap", "DEL Block", "DEL SimpleName: putAll", "DEL SimpleName: resourceSet", "DEL ReturnStatement", "DEL SimpleName: needPersist", "DEL Block", "DEL SimpleName: resourceId", "DEL SimpleName: mode", "DEL SimpleName: getPreferenceLists", "DEL SimpleName: getAttribute", "DEL SimpleName: idealState", "DEL VariableDeclarationStatement", "DEL SimpleName: getIdealState", "DEL SimpleName: ZNRecord", "DEL VariableDeclarationFragment", "DEL SimpleName: hasInstanceMapChanged", "DEL PrefixExpression: !", "DEL SimpleName: name", "DEL MethodInvocation", "DEL SimpleName: getClusterConfig", "DEL SimpleName: idealState", "DEL ParameterizedType: Map<String,String>", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: keyBuilder", "DEL MethodInvocation", "DEL SimpleName: currentTimeMillis", "DEL NullLiteral", "DEL SimpleName: accessor", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL ParameterizedType: DataUpdater<ZNRecord>", "DEL InfixExpression: ==", "DEL SimpleName: event", "DEL InfixExpression: &&", "DEL MarkerAnnotation", "DEL SimpleName: LOG", "DEL VariableDeclarationStatement", "DEL SimpleType: IdealState.RebalanceMode", "DEL SimpleType: String", "DEL Block", "DEL SimpleName: Partition", "DEL ParameterizedType: List<String>", "DEL Modifier: final", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: resourceId", "DEL SimpleName: updateProperty", "DEL SimpleName: resource", "DEL SimpleType: String", "DEL SimpleName: ZNRecord", "DEL QualifiedName: AttributeName.BEST_POSSIBLE_STATE", "DEL SimpleName: String", "DEL SimpleName: equals", "DEL MethodInvocation", "DEL SimpleName: System", "DEL SimpleName: endTime", "DEL SimpleName: getPartitionName", "DEL SimpleName: info", "DEL SimpleType: Resource", "DEL Block", "DEL SimpleName: keyBuilder", "DEL SimpleName: mode", "DEL SimpleName: resourceId", "DEL SimpleName: current", "DEL SimpleName: getAttribute", "DEL SingleVariableDeclaration", "DEL ContinueStatement", "DEL SimpleType: Map", "DEL SimpleName: info", "DEL SimpleName: currentTimeMillis", "DEL VariableDeclarationStatement", "DEL SimpleType: DataUpdater", "DEL StringLiteral: \" ms\"", "DEL SimpleName: clusterConfig", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: idealState", "DEL SimpleName: idealStates", "DEL SimpleName: HelixDataAccessor", "DEL SimpleType: List", "DEL MethodInvocation", "DEL SimpleName: warn", "DEL SimpleName: keyBuilder", "DEL SimpleName: getListFields", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: bestPossibleAssignements", "DEL VariableDeclarationFragment", "DEL InfixExpression: !=", "DEL NullLiteral", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleType: Partition", "DEL MethodInvocation", "DEL SimpleName: idealState", "DEL MethodInvocation", "DEL SimpleName: Resource", "DEL SimpleName: String", "DEL SimpleName: getHelixDataAccessor", "DEL IfStatement", "DEL InfixExpression: -", "DEL SimpleType: ZNRecord", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL QualifiedName: PropertyKey.Builder", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: current", "DEL SimpleName: List", "DEL QualifiedName: IdealState.RebalanceMode.FULL_AUTO", "DEL InfixExpression: &&", "DEL VariableDeclarationStatement"]}]}}, {"PersistAssignmentStage_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(316) at 10", "Insert QualifiedName: org.apache.helix.controller.common.PartitionStateMap(20) into ImportDeclaration(21) at 0", "Insert Block(66) into MethodDeclaration(67) at 6", "Delete SimpleName: LOG(64)", "Delete SimpleName: info(65)", "Delete StringLiteral: \"START PersistAssignmentStage.process()\"(66)", "Delete MethodInvocation(67)", "Delete ExpressionStatement(68)", "Delete PrimitiveType: long(69)", "Delete SimpleName: startTime(70)", "Delete SimpleName: System(71)", "Delete SimpleName: currentTimeMillis(72)", "Delete MethodInvocation(73)", "Delete VariableDeclarationFragment(74)", "Delete VariableDeclarationStatement(75)", "Delete SimpleName: ClusterDataCache(76)", "Delete SimpleType: ClusterDataCache(77)", "Delete SimpleName: cache(78)", "Delete SimpleName: event(79)", "Delete SimpleName: getAttribute(80)", "Delete StringLiteral: \"ClusterDataCache\"(81)", "Delete MethodInvocation(82)", "Delete VariableDeclarationFragment(83)", "Delete VariableDeclarationStatement(84)", "Delete SimpleName: ClusterConfig(85)", "Delete SimpleType: ClusterConfig(86)", "Delete SimpleName: clusterConfig(87)", "Delete SimpleName: cache(88)", "Delete SimpleName: getClusterConfig(89)", "Delete MethodInvocation(90)", "Delete VariableDeclarationFragment(91)", "Delete VariableDeclarationStatement(92)", "Delete SimpleName: clusterConfig(93)", "Delete SimpleName: isPersistBestPossibleAssignment(94)", "Delete MethodInvocation(95)", "Delete PrefixExpression: !(96)", "Delete ReturnStatement(97)", "Delete Block(98)", "Delete IfStatement(99)", "Delete SimpleName: BestPossibleStateOutput(100)", "Delete SimpleType: BestPossibleStateOutput(101)", "Delete SimpleName: bestPossibleAssignment(102)", "Delete SimpleName: event(103)", "Delete SimpleName: getAttribute(104)", "Delete QualifiedName: AttributeName.BEST_POSSIBLE_STATE(105)", "Delete SimpleName: name(106)", "Delete MethodInvocation(107)", "Delete MethodInvocation(108)", "Delete VariableDeclarationFragment(109)", "Delete VariableDeclarationStatement(110)", "Delete SimpleName: HelixManager(111)", "Delete SimpleType: HelixManager(112)", "Delete SimpleName: helixManager(113)", "Delete SimpleName: event(114)", "Delete SimpleName: getAttribute(115)", "Delete StringLiteral: \"helixmanager\"(116)", "Delete MethodInvocation(117)", "Delete VariableDeclarationFragment(118)", "Delete VariableDeclarationStatement(119)", "Delete SimpleName: HelixDataAccessor(120)", "Delete SimpleType: HelixDataAccessor(121)", "Delete SimpleName: accessor(122)", "Delete SimpleName: helixManager(123)", "Delete SimpleName: getHelixDataAccessor(124)", "Delete MethodInvocation(125)", "Delete VariableDeclarationFragment(126)", "Delete VariableDeclarationStatement(127)", "Delete QualifiedName: PropertyKey.Builder(128)", "Delete SimpleType: PropertyKey.Builder(129)", "Delete SimpleName: keyBuilder(130)", "Delete SimpleName: accessor(131)", "Delete SimpleName: keyBuilder(132)", "Delete MethodInvocation(133)", "Delete VariableDeclarationFragment(134)", "Delete VariableDeclarationStatement(135)", "Delete SimpleName: Map(136)", "Delete SimpleType: Map(137)", "Delete SimpleName: String(138)", "Delete SimpleType: String(139)", "Delete SimpleName: Resource(140)", "Delete SimpleType: Resource(141)", "Delete ParameterizedType: Map<String,Resource>(142)", "Delete SimpleName: resourceMap(143)", "Delete SimpleName: event(144)", "Delete SimpleName: getAttribute(145)", "Delete QualifiedName: AttributeName.RESOURCES(146)", "Delete SimpleName: name(147)", "Delete MethodInvocation(148)", "Delete MethodInvocation(149)", "Delete VariableDeclarationFragment(150)", "Delete VariableDeclarationStatement(151)", "Delete SimpleName: String(152)", "Delete SimpleType: String(153)", "Delete SimpleName: resourceId(154)", "Delete SingleVariableDeclaration(155)", "Delete SimpleName: bestPossibleAssignment(156)", "Delete SimpleName: resourceSet(157)", "Delete MethodInvocation(158)", "Delete SimpleName: Resource(159)", "Delete SimpleType: Resource(160)", "Delete SimpleName: resource(161)", "Delete SimpleName: resourceMap(162)", "Delete SimpleName: get(163)", "Delete SimpleName: resourceId(164)", "Delete MethodInvocation(165)", "Delete VariableDeclarationFragment(166)", "Delete VariableDeclarationStatement(167)", "Delete SimpleName: resource(168)", "Delete NullLiteral(169)", "Delete InfixExpression: !=(170)", "Delete Modifier: final(171)", "Delete SimpleName: IdealState(172)", "Delete SimpleType: IdealState(173)", "Delete SimpleName: idealState(174)", "Delete SimpleName: cache(175)", "Delete SimpleName: getIdealState(176)", "Delete SimpleName: resourceId(177)", "Delete MethodInvocation(178)", "Delete VariableDeclarationFragment(179)", "Delete VariableDeclarationStatement(180)", "Delete SimpleName: idealState(181)", "Delete NullLiteral(182)", "Delete InfixExpression: ==(183)", "Delete SimpleName: LOG(184)", "Delete SimpleName: warn(185)", "Delete StringLiteral: \"IdealState not found for resource \"(186)", "Delete SimpleName: resourceId(187)", "Delete InfixExpression: +(188)", "Delete MethodInvocation(189)", "Delete ExpressionStatement(190)", "Delete ContinueStatement(191)", "Delete Block(192)", "Delete IfStatement(193)", "Delete QualifiedName: IdealState.RebalanceMode(194)", "Delete SimpleType: IdealState.RebalanceMode(195)", "Delete SimpleName: mode(196)", "Delete SimpleName: idealState(197)", "Delete SimpleName: getRebalanceMode(198)", "Delete MethodInvocation(199)", "Delete VariableDeclarationFragment(200)", "Delete VariableDeclarationStatement(201)", "Delete SimpleName: mode(202)", "Delete SimpleName: equals(203)", "Delete QualifiedName: IdealState.RebalanceMode.SEMI_AUTO(204)", "Delete MethodInvocation(205)", "Delete PrefixExpression: !(206)", "Delete SimpleName: mode(207)", "Delete SimpleName: equals(208)", "Delete QualifiedName: IdealState.RebalanceMode.FULL_AUTO(209)", "Delete MethodInvocation(210)", "Delete PrefixExpression: !(211)", "Delete InfixExpression: &&(212)", "Delete ContinueStatement(213)", "Delete Block(214)", "Delete IfStatement(215)", "Delete PrimitiveType: boolean(216)", "Delete SimpleName: needPersist(217)", "Delete BooleanLiteral: false(218)", "Delete VariableDeclarationFragment(219)", "Delete VariableDeclarationStatement(220)", "Delete SimpleName: mode(221)", "Delete SimpleName: equals(222)", "Delete QualifiedName: IdealState.RebalanceMode.FULL_AUTO(223)", "Delete MethodInvocation(224)", "Delete SimpleName: Map(225)", "Delete SimpleType: Map(226)", "Delete SimpleName: String(227)", "Delete SimpleType: String(228)", "Delete SimpleName: List(229)", "Delete SimpleType: List(230)", "Delete SimpleName: String(231)", "Delete SimpleType: String(232)", "Delete ParameterizedType: List<String>(233)", "Delete ParameterizedType: Map<String,List<String>>(234)", "Delete SimpleName: newLists(235)", "Delete SimpleName: bestPossibleAssignment(236)", "Delete SimpleName: getPreferenceLists(237)", "Delete SimpleName: resourceId(238)", "Delete MethodInvocation(239)", "Delete VariableDeclarationFragment(240)", "Delete VariableDeclarationStatement(241)", "Delete SimpleName: newLists(242)", "Delete NullLiteral(243)", "Delete InfixExpression: !=(244)", "Delete SimpleName: hasPreferenceListChanged(245)", "Delete SimpleName: newLists(246)", "Delete SimpleName: idealState(247)", "Delete MethodInvocation(248)", "Delete InfixExpression: &&(249)", "Delete SimpleName: idealState(250)", "Delete SimpleName: setPreferenceLists(251)", "Delete SimpleName: newLists(252)", "Delete MethodInvocation(253)", "Delete ExpressionStatement(254)", "Delete SimpleName: needPersist(255)", "Delete BooleanLiteral: true(256)", "Delete Assignment: =(257)", "Delete ExpressionStatement(258)", "Delete Block(259)", "Delete IfStatement(260)", "Delete Block(261)", "Delete IfStatement(262)", "Delete SimpleName: Map(263)", "Delete SimpleType: Map(264)", "Delete SimpleName: Partition(265)", "Delete SimpleType: Partition(266)", "Delete SimpleName: Map(267)", "Delete SimpleType: Map(268)", "Delete SimpleName: String(269)", "Delete SimpleType: String(270)", "Delete SimpleName: String(271)", "Delete SimpleType: String(272)", "Delete ParameterizedType: Map<String,String>(273)", "Delete ParameterizedType: Map<Partition,Map<String,String>>(274)", "Delete SimpleName: bestPossibleAssignements(275)", "Delete SimpleName: bestPossibleAssignment(276)", "Delete SimpleName: getResourceMap(277)", "Delete SimpleName: resourceId(278)", "Delete MethodInvocation(279)", "Delete VariableDeclarationFragment(280)", "Delete VariableDeclarationStatement(281)", "Delete SimpleName: bestPossibleAssignements(282)", "Delete NullLiteral(283)", "Delete InfixExpression: !=(284)", "Delete SimpleName: hasInstanceMapChanged(285)", "Delete SimpleName: bestPossibleAssignements(286)", "Delete SimpleName: idealState(287)", "Delete MethodInvocation(288)", "Delete InfixExpression: &&(289)", "Delete SimpleName: Partition(290)", "Delete SimpleType: Partition(291)", "Delete SimpleName: partition(292)", "Delete SingleVariableDeclaration(293)", "Delete SimpleName: bestPossibleAssignements(294)", "Delete SimpleName: keySet(295)", "Delete MethodInvocation(296)", "Delete SimpleName: Map(297)", "Delete SimpleType: Map(298)", "Delete SimpleName: String(299)", "Delete SimpleType: String(300)", "Delete SimpleName: String(301)", "Delete SimpleType: String(302)", "Delete ParameterizedType: Map<String,String>(303)", "Delete SimpleName: instanceMap(304)", "Delete SimpleName: bestPossibleAssignements(305)", "Delete SimpleName: get(306)", "Delete SimpleName: partition(307)", "Delete MethodInvocation(308)", "Delete VariableDeclarationFragment(309)", "Delete VariableDeclarationStatement(310)", "Delete SimpleName: idealState(311)", "Delete SimpleName: setInstanceStateMap(312)", "Delete SimpleName: partition(313)", "Delete SimpleName: getPartitionName(314)", "Delete MethodInvocation(315)", "Delete SimpleName: instanceMap(316)", "Delete MethodInvocation(317)", "Delete ExpressionStatement(318)", "Delete Block(319)", "Delete EnhancedForStatement(320)", "Delete SimpleName: needPersist(321)", "Delete BooleanLiteral: true(322)", "Delete Assignment: =(323)", "Delete ExpressionStatement(324)", "Delete Block(325)", "Delete IfStatement(326)", "Delete SimpleName: needPersist(327)", "Delete SimpleName: accessor(328)", "Delete SimpleName: updateProperty(329)", "Delete SimpleName: keyBuilder(330)", "Delete SimpleName: idealStates(331)", "Delete SimpleName: resourceId(332)", "Delete MethodInvocation(333)", "Delete SimpleName: DataUpdater(334)", "Delete SimpleType: DataUpdater(335)", "Delete SimpleName: ZNRecord(336)", "Delete SimpleType: ZNRecord(337)", "Delete ParameterizedType: DataUpdater<ZNRecord>(338)", "Delete SimpleName: Override(339)", "Delete MarkerAnnotation(340)", "Delete Modifier: public(341)", "Delete SimpleName: ZNRecord(342)", "Delete SimpleType: ZNRecord(343)", "Delete SimpleName: update(344)", "Delete SimpleName: ZNRecord(345)", "Delete SimpleType: ZNRecord(346)", "Delete SimpleName: current(347)", "Delete SingleVariableDeclaration(348)", "Delete SimpleName: current(349)", "Delete NullLiteral(350)", "Delete InfixExpression: !=(351)", "Delete SimpleName: current(352)", "Delete SimpleName: getMapFields(353)", "Delete MethodInvocation(354)", "Delete SimpleName: putAll(355)", "Delete SimpleName: idealState(356)", "Delete SimpleName: getRecord(357)", "Delete MethodInvocation(358)", "Delete SimpleName: getMapFields(359)", "Delete MethodInvocation(360)", "Delete MethodInvocation(361)", "Delete ExpressionStatement(362)", "Delete SimpleName: current(363)", "Delete SimpleName: getListFields(364)", "Delete MethodInvocation(365)", "Delete SimpleName: putAll(366)", "Delete SimpleName: idealState(367)", "Delete SimpleName: getRecord(368)", "Delete MethodInvocation(369)", "Delete SimpleName: getListFields(370)", "Delete MethodInvocation(371)", "Delete MethodInvocation(372)", "Delete ExpressionStatement(373)", "Delete Block(374)", "Delete IfStatement(375)", "Delete SimpleName: current(376)", "Delete ReturnStatement(377)", "Delete Block(378)", "Delete MethodDeclaration(379)", "Delete AnonymousClassDeclaration(380)", "Delete ClassInstanceCreation(381)", "Delete SimpleName: idealState(382)", "Delete MethodInvocation(383)", "Delete ExpressionStatement(384)", "Delete Block(385)", "Delete IfStatement(386)", "Delete Block(387)", "Delete IfStatement(388)", "Delete Block(389)", "Delete EnhancedForStatement(390)", "Delete PrimitiveType: long(391)", "Delete SimpleName: endTime(392)", "Delete SimpleName: System(393)", "Delete SimpleName: currentTimeMillis(394)", "Delete MethodInvocation(395)", "Delete VariableDeclarationFragment(396)", "Delete VariableDeclarationStatement(397)", "Delete SimpleName: LOG(398)", "Delete SimpleName: info(399)", "Delete StringLiteral: \"END PersistAssignmentStage.process(), took \"(400)", "Delete SimpleName: endTime(401)", "Delete SimpleName: startTime(402)", "Delete InfixExpression: -(403)", "Delete ParenthesizedExpression(404)", "Delete StringLiteral: \" ms\"(405)", "Delete InfixExpression: +(406)", "Delete MethodInvocation(407)", "Delete ExpressionStatement(408)", "Delete Block(409)"]}}, {"ResourceComputationStage_cluster": {"actions": [{"root": "UPDATE from toString to name", "operations": ["UPD SimpleName: toString from toString to name"]}]}}, {"ResourceComputationStage_diff": {"operations": ["Update SimpleName: toString(473) to name"]}}, {"ResourceValidationStage_cluster": {"actions": [{"root": "UPDATE from toString to name", "operations": ["UPD SimpleName: toString from toString to name"]}]}}, {"ResourceValidationStage_diff": {"operations": ["Update SimpleName: toString(78) to name"]}}, {"TaskAssignmentStage_cluster": {"actions": [{"root": "UPDATE from toString to name", "operations": ["UPD SimpleName: toString from toString to name", "UPD SimpleName: toString from toString to name"]}]}}, {"TaskAssignmentStage_diff": {"operations": ["Update SimpleName: toString(98) to name", "Update SimpleName: toString(109) to name"]}}, {"BestPossibleExternalViewVerifier_cluster": {"actions": [{"root": "UPDATE from toString to name", "operations": ["UPD SimpleName: toString from toString to name"]}]}}, {"BestPossibleExternalViewVerifier_diff": {"operations": ["Update SimpleName: toString(1492) to name"]}}, {"ClusterExternalViewVerifier_cluster": {"actions": [{"root": "UPDATE from This class is deprecated, please use BestPossibleExternalViewVerifier in tools.ClusterVerifiers instead. to This class is deprecated, please use BestPossibleExternalViewVerifier in tools.ClusterVerifiers", "operations": ["UPD TextElement: This class is deprecated, please use BestPossibleExternalViewVerifier in tools.ClusterVerifiers instead. from This class is deprecated, please use BestPossibleExternalViewVerifier in tools.ClusterVerifiers instead. to This class is deprecated, please use BestPossibleExternalViewVerifier in tools.ClusterVerifiers"]}, {"root": "INS TextElement: instead. to TagElement at 1", "operations": ["INS TextElement: instead. to TagElement at 1"]}]}}, {"ClusterExternalViewVerifier_diff": {"operations": ["Update TextElement: This class is deprecated, please use BestPossibleExternalViewVerifier in tools.ClusterVerifiers instead.(6) to This class is deprecated, please use BestPossibleExternalViewVerifier in tools.ClusterVerifiers", "Insert TextElement: instead.(7) into TagElement(8) at 1"]}}, {"ClusterStateVerifier_cluster": {"actions": []}}, {"ClusterStateVerifier_diff": {"operations": []}}], "commit_stats": [{"total_files": 32, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}