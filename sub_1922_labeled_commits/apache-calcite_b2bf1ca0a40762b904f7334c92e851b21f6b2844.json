{"application": "apache-calcite", "csha": "b2bf1ca0a40762b904f7334c92e851b21f6b2844", "files": [{"CalciteCatalogReader_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS ImportDeclaration to CompilationUnit at 18", "INS QualifiedName: org.apache.calcite.schema.impl.ScalarFunctionImpl to ImportDeclaration at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: ScalarFunctionImpl to SimpleType: ScalarFunctionImpl at 0", "INS SimpleName: ScalarFunctionImpl to SimpleType: ScalarFunctionImpl at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS SimpleType: ScalarFunctionImpl to CastExpression at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: type to Assignment: = at 0", "INS SimpleName: function to CastExpression at 1", "INS IfStatement to Block at 1", "INS InstanceofExpression to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: getReturnType to MethodInvocation at 1", "INS SimpleName: function to InstanceofExpression at 0", "INS SimpleType: ScalarFunctionImpl to InstanceofExpression at 1", "INS SimpleName: opBinding to MethodInvocation at 3", "INS Block to IfStatement at 2", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: type to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: typeFactory to MethodInvocation at 2"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}]}}, {"CalciteCatalogReader_diff": {"operations": ["Insert ImportDeclaration(37) into CompilationUnit(1744) at 18", "Insert QualifiedName: org.apache.calcite.schema.impl.ScalarFunctionImpl(36) into ImportDeclaration(37) at 0", "Insert IfStatement(1514) into Block(1519) at 1", "Insert InstanceofExpression(1492) into IfStatement(1514) at 0", "Insert Block(1505) into IfStatement(1514) at 1", "Insert Block(1513) into IfStatement(1514) at 2", "Insert SimpleName: function(1489) into InstanceofExpression(1492) at 0", "Insert SimpleType: ScalarFunctionImpl(1491) into InstanceofExpression(1492) at 1", "Insert ExpressionStatement(1504) into Block(1505) at 0", "Insert ExpressionStatement(1512) into Block(1513) at 0", "Insert SimpleName: ScalarFunctionImpl(1490) into SimpleType: ScalarFunctionImpl(1491) at 0", "Insert Assignment: =(1503) into ExpressionStatement(1504) at 0", "Insert Assignment: =(1511) into ExpressionStatement(1512) at 0", "Insert SimpleName: type(1493) into Assignment: =(1503) at 0", "Insert MethodInvocation(1502) into Assignment: =(1503) at 1", "Insert SimpleName: type(1506) into Assignment: =(1511) at 0", "Move MethodInvocation(1488) into Assignment: =(1511) at 1", "Insert ParenthesizedExpression(1498) into MethodInvocation(1502) at 0", "Insert SimpleName: getReturnType(1499) into MethodInvocation(1502) at 1", "Insert SimpleName: typeFactory(1500) into MethodInvocation(1502) at 2", "Insert SimpleName: opBinding(1501) into MethodInvocation(1502) at 3", "Insert CastExpression(1497) into ParenthesizedExpression(1498) at 0", "Insert SimpleType: ScalarFunctionImpl(1495) into CastExpression(1497) at 0", "Insert SimpleName: function(1496) into CastExpression(1497) at 1", "Insert SimpleName: ScalarFunctionImpl(1494) into SimpleType: ScalarFunctionImpl(1495) at 0"]}}, {"NullPolicy_cluster": {"actions": [{"root": "INS EnumConstantDeclaration to EnumDeclaration at 4", "operations": ["INS Javadoc to EnumConstantDeclaration at 0", "INS SimpleName: SEMI_STRICT to EnumConstantDeclaration at 1", "INS TagElement to Javadoc at 0", "INS EnumConstantDeclaration to EnumDeclaration at 4", "INS TextElement: Returns null if one of the arguments is null, and possibly other times.  to TagElement at 0"]}]}}, {"NullPolicy_diff": {"operations": ["Insert EnumConstantDeclaration(20) into EnumDeclaration(46) at 4", "Insert Javadoc(18) into EnumConstantDeclaration(20) at 0", "Insert SimpleName: SEMI_STRICT(19) into EnumConstantDeclaration(20) at 1", "Insert TagElement(17) into Javadoc(18) at 0", "Insert TextElement: Returns null if one of the arguments is null, and possibly other times. (16) into TagElement(17) at 0"]}}, {"RexImpTable_cluster": {"actions": [{"root": "MOVE from SwitchStatement", "operations": ["MOV SwitchCase to SwitchStatement at 3"]}, {"root": "INS SwitchCase to SwitchStatement at 13", "operations": ["INS SwitchCase to SwitchStatement at 13"]}, {"root": "INS SwitchStatement to SwitchStatement at 2", "operations": ["INS SwitchStatement to SwitchStatement at 2", "INS SwitchCase to SwitchStatement at 1", "INS SimpleName: STRICT to SwitchCase at 0", "INS SimpleName: nullPolicy to SwitchStatement at 0"]}, {"root": "INS SwitchStatement to SwitchStatement at 6", "operations": ["INS SimpleName: nullPolicy to SwitchStatement at 0", "INS SwitchCase to SwitchStatement at 1", "INS SwitchStatement to SwitchStatement at 6", "INS SimpleName: STRICT to SwitchCase at 0"]}, {"root": "INS SwitchStatement to SwitchStatement at 15", "operations": ["INS SwitchStatement to SwitchStatement at 15", "INS SimpleName: nullPolicy to SwitchStatement at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 19", "operations": ["INS SwitchCase to SwitchStatement at 19"]}, {"root": "INS SimpleName: SEMI_STRICT to SwitchCase at 0", "operations": ["INS SimpleName: SEMI_STRICT to SwitchCase at 0"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV ReturnStatement to SwitchStatement at 2"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV ReturnStatement to SwitchStatement at 2"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV SwitchCase to SwitchStatement at 1"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV EnhancedForStatement to SwitchStatement at 2"]}, {"root": "INS SimpleName: STRICT to SwitchCase at 0", "operations": ["INS SimpleName: STRICT to SwitchCase at 0"]}, {"root": "DEL IfStatement", "operations": ["DEL QualifiedName: NullPolicy.STRICT", "DEL SimpleName: nullPolicy", "DEL Block", "DEL InfixExpression: ==", "DEL IfStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL InfixExpression: ==", "DEL IfStatement", "DEL QualifiedName: NullPolicy.STRICT", "DEL SimpleName: nullPolicy", "DEL Block"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL IfStatement", "DEL SimpleName: nullPolicy", "DEL InfixExpression: ==", "DEL QualifiedName: NullPolicy.STRICT"]}]}}, {"RexImpTable_diff": {"operations": ["Move SwitchCase(2176) into SwitchStatement(2184) at 3", "Insert SwitchCase(2178) into SwitchStatement(2184) at 13", "Insert SwitchStatement(2913) into SwitchStatement(2933) at 2", "Insert SwitchStatement(2931) into SwitchStatement(2933) at 5", "Insert SwitchStatement(3249) into SwitchStatement(3271) at 15", "Insert SwitchCase(3263) into SwitchStatement(3271) at 18", "Insert SimpleName: SEMI_STRICT(1688) into SwitchCase(1689) at 0", "Insert SimpleName: nullPolicy(2899) into SwitchStatement(2913) at 0", "Insert SwitchCase(2901) into SwitchStatement(2913) at 1", "Move ReturnStatement(2910) into SwitchStatement(2913) at 2", "Insert SimpleName: nullPolicy(2917) into SwitchStatement(2931) at 0", "Insert SwitchCase(2919) into SwitchStatement(2931) at 1", "Move ReturnStatement(2929) into SwitchStatement(2931) at 2", "Insert SimpleName: nullPolicy(3219) into SwitchStatement(3249) at 0", "Move SwitchCase(3264) into SwitchStatement(3249) at 1", "Move EnhancedForStatement(3248) into SwitchStatement(3249) at 2", "Insert SimpleName: STRICT(2900) into SwitchCase(2901) at 0", "Insert SimpleName: STRICT(2918) into SwitchCase(2919) at 0", "Insert SimpleName: STRICT(3220) into SwitchCase(3221) at 0", "Delete SimpleName: nullPolicy(2897)", "Delete QualifiedName: NullPolicy.STRICT(2898)", "Delete InfixExpression: ==(2899)", "Delete Block(2911)", "Delete IfStatement(2912)", "Delete SimpleName: nullPolicy(2916)", "Delete QualifiedName: NullPolicy.STRICT(2917)", "Delete InfixExpression: ==(2918)", "Delete Block(2930)", "Delete IfStatement(2931)", "Delete SimpleName: nullPolicy(3219)", "Delete QualifiedName: NullPolicy.STRICT(3220)", "Delete InfixExpression: ==(3221)", "Delete Block(3249)", "Delete IfStatement(3250)"]}}, {"ScalarFunctionImpl_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: org.apache.calcite.linq4j.function.SemiStrict to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.calcite.linq4j.function.Strict to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS QualifiedName: org.apache.calcite.sql.SqlOperatorBinding to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 11"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS MethodInvocation to InfixExpression: != at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: Method to SimpleType: Method at 0", "INS SimpleName: Strict to SimpleType: Strict at 0", "INS TypeLiteral to MethodInvocation at 2", "INS Modifier: static to MethodDeclaration at 1", "INS IfStatement to Block at 0", "INS TypeLiteral to MethodInvocation at 2", "INS SimpleName: SemiStrict to SimpleType: SemiStrict at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: m to MethodInvocation at 0", "INS SimpleName: getDeclaringClass to MethodInvocation at 1", "INS SimpleName: m to MethodInvocation at 0", "INS IfStatement to IfStatement at 2", "INS SimpleType: Strict to TypeLiteral at 0", "INS Block to IfStatement at 1", "INS SimpleName: m to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS ReturnStatement to Block at 0", "INS SimpleName: NullPolicy to SimpleType: NullPolicy at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleType: Method to SingleVariableDeclaration at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: getAnnotation to MethodInvocation at 1", "INS Block to IfStatement at 2", "INS SimpleName: getAnnotation to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleType: SemiStrict to TypeLiteral at 0", "INS QualifiedName: NullPolicy.NONE to ReturnStatement at 0", "INS SimpleName: Strict to SimpleType: Strict at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS NullLiteral to InfixExpression: != at 1", "INS ReturnStatement to Block at 0", "INS SimpleType: SemiStrict to TypeLiteral at 0", "INS Block to IfStatement at 1", "INS QualifiedName: NullPolicy.SEMI_STRICT to ReturnStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS ReturnStatement to Block at 0", "INS TypeLiteral to MethodInvocation at 2", "INS SimpleName: getDeclaringClass to MethodInvocation at 1", "INS SimpleType: Strict to TypeLiteral at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleType: NullPolicy to MethodDeclaration at 2", "INS SimpleName: m to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS QualifiedName: NullPolicy.STRICT to ReturnStatement at 0", "INS SimpleName: getAnnotation to MethodInvocation at 1", "INS QualifiedName: NullPolicy.SEMI_STRICT to ReturnStatement at 0", "INS Block to MethodDeclaration at 5", "INS TypeLiteral to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS IfStatement to IfStatement at 2", "INS MethodInvocation to InfixExpression: != at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getAnnotation to MethodInvocation at 1", "INS SimpleName: getNullPolicy to MethodDeclaration at 3", "INS InfixExpression: != to IfStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS Modifier: private to MethodDeclaration at 0", "INS QualifiedName: NullPolicy.STRICT to ReturnStatement at 0", "INS SimpleName: m to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: SemiStrict to SimpleType: SemiStrict at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS SwitchStatement to Block at 1", "INS SimpleName: getNullPolicy to MethodInvocation at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: RelDataTypeFactory to SingleVariableDeclaration at 0", "INS SimpleName: typeFactory to MethodInvocation at 1", "INS SimpleName: collectOperandTypes to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: returnType to MethodInvocation at 2", "INS SimpleName: createTypeWithNullability to MethodInvocation at 1", "INS SimpleName: method to MethodInvocation at 1", "INS SimpleName: typeFactory to MethodInvocation at 0", "INS SimpleName: opBinding to SingleVariableDeclaration at 1", "INS SimpleName: RelDataType to SimpleType: RelDataType at 0", "INS SimpleName: SEMI_STRICT to SwitchCase at 0", "INS BooleanLiteral: true to MethodInvocation at 3", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Modifier: final to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ReturnStatement to SwitchStatement at 5", "INS SimpleName: RelDataType to SimpleType: RelDataType at 0", "INS SimpleName: RelDataType to SimpleType: RelDataType at 0", "INS EnhancedForStatement to SwitchStatement at 2", "INS SimpleName: typeFactory to MethodInvocation at 0", "INS SimpleName: createTypeWithNullability to MethodInvocation at 1", "INS SimpleName: returnType to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: type to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: typeFactory to SingleVariableDeclaration at 1", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS BreakStatement to SwitchStatement at 3", "INS SimpleType: SqlOperatorBinding to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS SimpleType: RelDataType to MethodDeclaration at 1", "INS SimpleName: STRICT to SwitchCase at 0", "INS MethodInvocation to SwitchStatement at 0", "INS SimpleName: getReturnType to MethodDeclaration at 2", "INS SimpleName: getReturnType to MethodInvocation at 0", "INS SimpleName: isNullable to MethodInvocation at 1", "INS BooleanLiteral: true to MethodInvocation at 3", "INS ReturnStatement to Block at 2", "INS SimpleType: RelDataType to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: SqlOperatorBinding to SimpleType: SqlOperatorBinding at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: type to SingleVariableDeclaration at 1", "INS Block to EnhancedForStatement at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: returnType to VariableDeclarationFragment at 0", "INS SwitchCase to SwitchStatement at 1", "INS SimpleName: returnType to MethodInvocation at 2", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: RelDataTypeFactory to SimpleType: RelDataTypeFactory at 0", "INS SimpleType: RelDataType to VariableDeclarationStatement at 1", "INS SwitchCase to SwitchStatement at 4", "INS SimpleName: opBinding to MethodInvocation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: nullPolicy to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: getNullPolicy to MethodInvocation at 0", "INS SimpleName: NullPolicy to SimpleType: NullPolicy at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: NullPolicy to VariableDeclarationStatement at 1", "INS SimpleName: method to MethodInvocation at 1"]}, {"root": "INS SimpleName: nullPolicy to MethodInvocation at 3", "operations": ["INS SimpleName: nullPolicy to MethodInvocation at 3"]}, {"root": "DEL QualifiedName: NullPolicy.NONE", "operations": ["DEL QualifiedName: NullPolicy.NONE"]}]}}, {"ScalarFunctionImpl_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(491) at 5", "Insert ImportDeclaration(13) into CompilationUnit(491) at 6", "Insert ImportDeclaration(23) into CompilationUnit(491) at 11", "Insert QualifiedName: org.apache.calcite.linq4j.function.SemiStrict(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.calcite.linq4j.function.Strict(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: org.apache.calcite.sql.SqlOperatorBinding(22) into ImportDeclaration(23) at 0", "Insert MethodDeclaration(429) into TypeDeclaration: class(490) at 14", "Insert MethodDeclaration(489) into TypeDeclaration: class(490) at 15", "Insert Modifier: private(364) into MethodDeclaration(429) at 0", "Insert Modifier: static(365) into MethodDeclaration(429) at 1", "Insert SimpleType: NullPolicy(367) into MethodDeclaration(429) at 2", "Insert SimpleName: getNullPolicy(368) into MethodDeclaration(429) at 3", "Insert SingleVariableDeclaration(372) into MethodDeclaration(429) at 4", "Insert Block(428) into MethodDeclaration(429) at 5", "Insert Modifier: public(430) into MethodDeclaration(489) at 0", "Insert SimpleType: RelDataType(432) into MethodDeclaration(489) at 1", "Insert SimpleName: getReturnType(433) into MethodDeclaration(489) at 2", "Insert SingleVariableDeclaration(437) into MethodDeclaration(489) at 3", "Insert SingleVariableDeclaration(441) into MethodDeclaration(489) at 4", "Insert Block(488) into MethodDeclaration(489) at 5", "Insert VariableDeclarationStatement(351) into Block(362) at 0", "Insert SimpleName: NullPolicy(366) into SimpleType: NullPolicy(367) at 0", "Insert SimpleType: Method(370) into SingleVariableDeclaration(372) at 0", "Insert SimpleName: m(371) into SingleVariableDeclaration(372) at 1", "Insert IfStatement(427) into Block(428) at 0", "Insert SimpleName: RelDataType(431) into SimpleType: RelDataType(432) at 0", "Insert SimpleType: RelDataTypeFactory(435) into SingleVariableDeclaration(437) at 0", "Insert SimpleName: typeFactory(436) into SingleVariableDeclaration(437) at 1", "Insert SimpleType: SqlOperatorBinding(439) into SingleVariableDeclaration(441) at 0", "Insert SimpleName: opBinding(440) into SingleVariableDeclaration(441) at 1", "Insert VariableDeclarationStatement(450) into Block(488) at 0", "Insert SwitchStatement(485) into Block(488) at 1", "Insert ReturnStatement(487) into Block(488) at 2", "Insert Modifier: final(343) into VariableDeclarationStatement(351) at 0", "Insert SimpleType: NullPolicy(345) into VariableDeclarationStatement(351) at 1", "Insert VariableDeclarationFragment(350) into VariableDeclarationStatement(351) at 2", "Insert SimpleName: Method(369) into SimpleType: Method(370) at 0", "Insert InfixExpression: !=(380) into IfStatement(427) at 0", "Insert Block(383) into IfStatement(427) at 1", "Insert IfStatement(426) into IfStatement(427) at 2", "Insert SimpleName: RelDataTypeFactory(434) into SimpleType: RelDataTypeFactory(435) at 0", "Insert SimpleName: SqlOperatorBinding(438) into SimpleType: SqlOperatorBinding(439) at 0", "Insert Modifier: final(442) into VariableDeclarationStatement(450) at 0", "Insert SimpleType: RelDataType(444) into VariableDeclarationStatement(450) at 1", "Insert VariableDeclarationFragment(449) into VariableDeclarationStatement(450) at 2", "Insert MethodInvocation(453) into SwitchStatement(485) at 0", "Insert SwitchCase(455) into SwitchStatement(485) at 1", "Insert EnhancedForStatement(475) into SwitchStatement(485) at 2", "Insert BreakStatement(476) into SwitchStatement(485) at 3", "Insert SwitchCase(478) into SwitchStatement(485) at 4", "Insert ReturnStatement(484) into SwitchStatement(485) at 5", "Insert SimpleName: returnType(486) into ReturnStatement(487) at 0", "Insert SimpleName: NullPolicy(344) into SimpleType: NullPolicy(345) at 0", "Insert SimpleName: nullPolicy(346) into VariableDeclarationFragment(350) at 0", "Insert MethodInvocation(349) into VariableDeclarationFragment(350) at 1", "Insert SimpleName: nullPolicy(358) into MethodInvocation(360) at 3", "Insert MethodInvocation(378) into InfixExpression: !=(380) at 0", "Insert NullLiteral(379) into InfixExpression: !=(380) at 1", "Insert ReturnStatement(382) into Block(383) at 0", "Insert InfixExpression: !=(391) into IfStatement(426) at 0", "Insert Block(394) into IfStatement(426) at 1", "Insert IfStatement(425) into IfStatement(426) at 2", "Insert SimpleName: RelDataType(443) into SimpleType: RelDataType(444) at 0", "Insert SimpleName: returnType(445) into VariableDeclarationFragment(449) at 0", "Insert MethodInvocation(448) into VariableDeclarationFragment(449) at 1", "Insert SimpleName: getNullPolicy(451) into MethodInvocation(453) at 0", "Insert SimpleName: method(452) into MethodInvocation(453) at 1", "Insert SimpleName: STRICT(454) into SwitchCase(455) at 0", "Insert SingleVariableDeclaration(459) into EnhancedForStatement(475) at 0", "Insert MethodInvocation(462) into EnhancedForStatement(475) at 1", "Insert Block(474) into EnhancedForStatement(475) at 2", "Insert SimpleName: SEMI_STRICT(477) into SwitchCase(478) at 0", "Insert MethodInvocation(483) into ReturnStatement(484) at 0", "Insert SimpleName: getNullPolicy(347) into MethodInvocation(349) at 0", "Insert SimpleName: method(348) into MethodInvocation(349) at 1", "Insert SimpleName: m(373) into MethodInvocation(378) at 0", "Insert SimpleName: getAnnotation(374) into MethodInvocation(378) at 1", "Insert TypeLiteral(377) into MethodInvocation(378) at 2", "Insert QualifiedName: NullPolicy.STRICT(381) into ReturnStatement(382) at 0", "Insert MethodInvocation(389) into InfixExpression: !=(391) at 0", "Insert NullLiteral(390) into InfixExpression: !=(391) at 1", "Insert ReturnStatement(393) into Block(394) at 0", "Insert InfixExpression: !=(404) into IfStatement(425) at 0", "Insert Block(407) into IfStatement(425) at 1", "Insert IfStatement(424) into IfStatement(425) at 2", "Insert SimpleName: getReturnType(446) into MethodInvocation(448) at 0", "Insert SimpleName: typeFactory(447) into MethodInvocation(448) at 1", "Insert SimpleType: RelDataType(457) into SingleVariableDeclaration(459) at 0", "Insert SimpleName: type(458) into SingleVariableDeclaration(459) at 1", "Insert SimpleName: opBinding(460) into MethodInvocation(462) at 0", "Insert SimpleName: collectOperandTypes(461) into MethodInvocation(462) at 1", "Insert IfStatement(473) into Block(474) at 0", "Insert SimpleName: typeFactory(479) into MethodInvocation(483) at 0", "Insert SimpleName: createTypeWithNullability(480) into MethodInvocation(483) at 1", "Insert SimpleName: returnType(481) into MethodInvocation(483) at 2", "Insert BooleanLiteral: true(482) into MethodInvocation(483) at 3", "Insert SimpleType: Strict(376) into TypeLiteral(377) at 0", "Insert SimpleName: m(384) into MethodInvocation(389) at 0", "Insert SimpleName: getAnnotation(385) into MethodInvocation(389) at 1", "Insert TypeLiteral(388) into MethodInvocation(389) at 2", "Insert QualifiedName: NullPolicy.SEMI_STRICT(392) into ReturnStatement(393) at 0", "Insert MethodInvocation(402) into InfixExpression: !=(404) at 0", "Insert NullLiteral(403) into InfixExpression: !=(404) at 1", "Insert ReturnStatement(406) into Block(407) at 0", "Insert InfixExpression: !=(417) into IfStatement(424) at 0", "Insert Block(420) into IfStatement(424) at 1", "Insert Block(423) into IfStatement(424) at 2", "Insert SimpleName: RelDataType(456) into SimpleType: RelDataType(457) at 0", "Insert MethodInvocation(465) into IfStatement(473) at 0", "Insert Block(472) into IfStatement(473) at 1", "Insert SimpleName: Strict(375) into SimpleType: Strict(376) at 0", "Insert SimpleType: SemiStrict(387) into TypeLiteral(388) at 0", "Insert MethodInvocation(397) into MethodInvocation(402) at 0", "Insert SimpleName: getAnnotation(398) into MethodInvocation(402) at 1", "Insert TypeLiteral(401) into MethodInvocation(402) at 2", "Insert QualifiedName: NullPolicy.STRICT(405) into ReturnStatement(406) at 0", "Insert MethodInvocation(415) into InfixExpression: !=(417) at 0", "Insert NullLiteral(416) into InfixExpression: !=(417) at 1", "Insert ReturnStatement(419) into Block(420) at 0", "Insert ReturnStatement(422) into Block(423) at 0", "Insert SimpleName: type(463) into MethodInvocation(465) at 0", "Insert SimpleName: isNullable(464) into MethodInvocation(465) at 1", "Insert ReturnStatement(471) into Block(472) at 0", "Insert SimpleName: SemiStrict(386) into SimpleType: SemiStrict(387) at 0", "Insert SimpleName: m(395) into MethodInvocation(397) at 0", "Insert SimpleName: getDeclaringClass(396) into MethodInvocation(397) at 1", "Insert SimpleType: Strict(400) into TypeLiteral(401) at 0", "Insert MethodInvocation(410) into MethodInvocation(415) at 0", "Insert SimpleName: getAnnotation(411) into MethodInvocation(415) at 1", "Insert TypeLiteral(414) into MethodInvocation(415) at 2", "Insert QualifiedName: NullPolicy.SEMI_STRICT(418) into ReturnStatement(419) at 0", "Insert QualifiedName: NullPolicy.NONE(421) into ReturnStatement(422) at 0", "Insert MethodInvocation(470) into ReturnStatement(471) at 0", "Insert SimpleName: Strict(399) into SimpleType: Strict(400) at 0", "Insert SimpleName: m(408) into MethodInvocation(410) at 0", "Insert SimpleName: getDeclaringClass(409) into MethodInvocation(410) at 1", "Insert SimpleType: SemiStrict(413) into TypeLiteral(414) at 0", "Insert SimpleName: typeFactory(466) into MethodInvocation(470) at 0", "Insert SimpleName: createTypeWithNullability(467) into MethodInvocation(470) at 1", "Insert SimpleName: returnType(468) into MethodInvocation(470) at 2", "Insert BooleanLiteral: true(469) into MethodInvocation(470) at 3", "Insert SimpleName: SemiStrict(412) into SimpleType: SemiStrict(413) at 0", "Delete QualifiedName: NullPolicy.NONE(343)"]}}, {"SqlTypeExplicitPrecedenceList_cluster": {"actions": [{"root": "INS SimpleName: type1 to AssertStatement at 1", "operations": ["INS SimpleName: type1 to AssertStatement at 1"]}, {"root": "INS SimpleName: type2 to AssertStatement at 1", "operations": ["INS SimpleName: type2 to AssertStatement at 1"]}]}}, {"SqlTypeExplicitPrecedenceList_diff": {"operations": ["Insert SimpleName: type1(431) into AssertStatement(432) at 1", "Insert SimpleName: type2(436) into AssertStatement(437) at 1"]}}], "commit_stats": [{"total_files": 10, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}