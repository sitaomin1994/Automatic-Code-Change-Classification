{"application": "apache-cxf-fediz", "csha": "f233488c3ff9ec15a063862e4fa7b11c9f0b98ff", "files": [{"FederationAuthenticator_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: handleLogout to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 25", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: responseOutputStream to SingleVariableDeclaration at 2", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleType: IOException to MethodDeclaration at 4", "INS SimpleName: IOException to SimpleType: IOException at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 5"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: ServletOutputStream to SingleVariableDeclaration at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS ExpressionStatement to Block at 2", "INS SimpleName: handleLogout to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 3"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS SimpleName: equals to MethodInvocation at 1", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to InfixExpression: && at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV InfixExpression: && to InfixExpression: && at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 2", "MOV SimpleName: equals to MethodInvocation at 1", "MOV SimpleName: uri to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 3", "operations": ["INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: handleLogout to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 3", "INS ReturnStatement to Block at 1", "INS BooleanLiteral: false to ReturnStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1"]}, {"root": "UPDATE from uri to response", "operations": ["UPD SimpleName: uri from uri to response"]}, {"root": "UPDATE from equals to getOutputStream", "operations": ["UPD SimpleName: equals from equals to getOutputStream"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL Modifier: final", "DEL VariableDeclarationStatement", "DEL SimpleName: responseOutputStream", "DEL VariableDeclarationFragment"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL SimpleType: String", "DEL SimpleName: uri", "DEL VariableDeclarationStatement"]}, {"root": "DEL InfixExpression: &&", "operations": ["DEL InfixExpression: &&", "DEL MethodInvocation"]}]}}, {"FederationAuthenticator_diff": {"operations": ["Insert MethodDeclaration(793) into TypeDeclaration: class(2516) at 25", "Insert Modifier: private(715) into MethodDeclaration(793) at 0", "Insert PrimitiveType: void(716) into MethodDeclaration(793) at 1", "Insert SimpleName: handleLogout(717) into MethodDeclaration(793) at 2", "Insert SingleVariableDeclaration(722) into MethodDeclaration(793) at 3", "Insert SimpleType: IOException(724) into MethodDeclaration(793) at 4", "Move Block(776) into MethodDeclaration(793) at 5", "Insert Modifier: final(718) into SingleVariableDeclaration(722) at 0", "Move SimpleType: ServletOutputStream(701) into SingleVariableDeclaration(722) at 1", "Insert SimpleName: responseOutputStream(721) into SingleVariableDeclaration(722) at 2", "Insert SimpleName: IOException(723) into SimpleType: IOException(724) at 0", "Insert Block(706) into IfStatement(707) at 1", "Insert InfixExpression: &&(926) into IfStatement(1017) at 0", "Move IfStatement(692) into Block(706) at 0", "Move ExpressionStatement(698) into Block(706) at 1", "Insert ExpressionStatement(704) into Block(706) at 2", "Insert ReturnStatement(705) into Block(706) at 3", "Move InfixExpression: &&(908) into InfixExpression: &&(926) at 0", "Insert MethodInvocation(925) into InfixExpression: &&(926) at 1", "Insert MethodInvocation(703) into ExpressionStatement(704) at 0", "Move MethodInvocation(923) into MethodInvocation(925) at 0", "Insert SimpleName: equals(921) into MethodInvocation(925) at 1", "Move InfixExpression: +(933) into MethodInvocation(925) at 2", "Move InfixExpression: !=(928) into IfStatement(1015) at 0", "Insert Block(1014) into IfStatement(1015) at 2", "Insert SimpleName: handleLogout(699) into MethodInvocation(703) at 0", "Move MethodInvocation(705) into MethodInvocation(703) at 1", "Insert ExpressionStatement(1011) into Block(1014) at 0", "Insert ReturnStatement(1013) into Block(1014) at 1", "Insert MethodInvocation(1010) into ExpressionStatement(1011) at 0", "Insert BooleanLiteral: false(1012) into ReturnStatement(1013) at 0", "Insert SimpleName: handleLogout(1006) into MethodInvocation(1010) at 0", "Insert MethodInvocation(1009) into MethodInvocation(1010) at 1", "Update SimpleName: uri(929) to response", "Move SimpleName: uri(929) into MethodInvocation(1009) at 0", "Update SimpleName: equals(930) to getOutputStream", "Move SimpleName: equals(930) into MethodInvocation(1009) at 1", "Delete Modifier: final(699)", "Delete SimpleName: responseOutputStream(702)", "Delete VariableDeclarationFragment(706)", "Delete VariableDeclarationStatement(707)", "Delete ReturnStatement(775)", "Delete SimpleName: String(918)", "Delete SimpleType: String(919)", "Delete SimpleName: uri(920)", "Delete VariableDeclarationFragment(924)", "Delete VariableDeclarationStatement(925)", "Delete MethodInvocation(934)", "Delete InfixExpression: &&(935)"]}}, {"SAMLProtocol_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS SimpleName: getIssuerLogoutURL to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 3", "INS SimpleType: String to MethodDeclaration at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: getSAMLProtocol to MethodInvocation at 0", "INS SimpleName: getIssuerLogoutURL to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 16"]}]}}, {"SAMLProtocol_diff": {"operations": ["Insert MethodDeclaration(313) into TypeDeclaration: class(314) at 16", "Insert Modifier: public(303) into MethodDeclaration(313) at 0", "Insert SimpleType: String(305) into MethodDeclaration(313) at 1", "Insert SimpleName: getIssuerLogoutURL(306) into MethodDeclaration(313) at 2", "Insert Block(312) into MethodDeclaration(313) at 3", "Insert SimpleName: String(304) into SimpleType: String(305) at 0", "Insert ReturnStatement(311) into Block(312) at 0", "Insert MethodInvocation(310) into ReturnStatement(311) at 0", "Insert MethodInvocation(308) into MethodInvocation(310) at 0", "Insert SimpleName: getIssuerLogoutURL(309) into MethodInvocation(310) at 1", "Insert SimpleName: getSAMLProtocol(307) into MethodInvocation(308) at 0"]}}, {"SAMLProcessorImpl_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 1", "operations": ["INS CastExpression to ParenthesizedExpression at 0", "INS MethodInvocation to CastExpression at 1", "INS MethodInvocation to Assignment: = at 1", "INS ParenthesizedExpression to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: SAMLProtocol to CastExpression at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 2", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: redirectURL to InfixExpression: == at 0", "INS NullLiteral to InfixExpression: == at 1"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS SimpleName: redirectURL to InfixExpression: == at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS IfStatement to Block at 3", "INS SimpleType: ProcessingException to ClassInstanceCreation at 0", "INS SimpleName: ProcessingException to SimpleType: ProcessingException at 0", "INS InfixExpression: == to IfStatement at 0", "INS ThrowStatement to Block at 1", "INS Block to IfStatement at 1", "INS StringLiteral: \"Failed to create SignOutRequest\" to ClassInstanceCreation at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV SimpleName: redirectURL to Assignment: = at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV IfStatement to Block at 2", "MOV ExpressionStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "UPDATE from setTargetAddress to getIssuerLogoutURL", "operations": ["UPD SimpleName: setTargetAddress from setTargetAddress to getIssuerLogoutURL"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: setTargetAddress to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS StringLiteral: \"No issuerLogoutURL or issuer parameter specified for logout\" to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from logoutRequest to LOG", "operations": ["UPD SimpleName: logoutRequest from logoutRequest to LOG"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: logoutRequest to MethodInvocation at 0", "MOV SimpleName: getID to MethodInvocation at 1"]}, {"root": "UPDATE from getID to debug", "operations": ["UPD SimpleName: getID from getID to debug"]}, {"root": "UPDATE from String to SAMLProtocol", "operations": ["UPD SimpleName: String from String to SAMLProtocol"]}, {"root": "MOVE from SimpleType: SAMLProtocol", "operations": ["MOV SimpleName: String to SimpleType: SAMLProtocol at 0"]}, {"root": "UPDATE from request to config", "operations": ["UPD SimpleName: request from request to config"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: request to MethodInvocation at 0", "MOV SimpleName: getRequestURL to MethodInvocation at 1"]}, {"root": "UPDATE from getRequestURL to getProtocol", "operations": ["UPD SimpleName: getRequestURL from getRequestURL to getProtocol"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: requestState", "DEL SimpleName: setRequestId"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL Assignment: =", "DEL StringLiteral: \"http://localhost:8081/IDBUS/CXF/CXFIDP/SAML2/SLO/REDIR\""]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: String", "DEL SimpleName: requestURL", "DEL SimpleName: toString", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: requestState", "DEL SimpleType: RequestState", "DEL SimpleName: RequestState", "DEL VariableDeclarationStatement", "DEL SimpleName: RequestState", "DEL VariableDeclarationFragment", "DEL SimpleType: RequestState", "DEL ClassInstanceCreation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: requestState", "DEL SimpleName: requestURL", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: redirectURL", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: requestState", "DEL SimpleName: setIdpServiceAddress"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: setIssuerId", "DEL SimpleName: requestState", "DEL SimpleName: realm", "DEL ExpressionStatement", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: requestState", "DEL MethodInvocation", "DEL SimpleName: logoutRequest", "DEL SimpleName: getIssuer", "DEL SimpleName: setWebAppContext", "DEL SimpleName: getValue", "DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: requestState", "DEL SimpleName: relayState", "DEL MethodInvocation", "DEL SimpleName: setState", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: requestState", "DEL SimpleName: System", "DEL SimpleName: currentTimeMillis", "DEL SimpleName: setCreatedAt", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: response", "DEL ExpressionStatement", "DEL SimpleName: requestState", "DEL SimpleName: setRequestState", "DEL MethodInvocation"]}]}}, {"SAMLProcessorImpl_diff": {"operations": ["Insert ExpressionStatement(1607) into Block(1874) at 1", "Insert IfStatement(1643) into Block(1874) at 2", "Insert IfStatement(1658) into Block(1874) at 3", "Insert Assignment: =(1606) into ExpressionStatement(1607) at 0", "Insert InfixExpression: ==(1610) into IfStatement(1643) at 0", "Insert Block(1642) into IfStatement(1643) at 1", "Insert InfixExpression: ==(1646) into IfStatement(1658) at 0", "Insert Block(1657) into IfStatement(1658) at 1", "Move SimpleName: redirectURL(1627) into Assignment: =(1606) at 0", "Insert MethodInvocation(1605) into Assignment: =(1606) at 1", "Insert SimpleName: redirectURL(1608) into InfixExpression: ==(1610) at 0", "Insert NullLiteral(1609) into InfixExpression: ==(1610) at 1", "Move VariableDeclarationStatement(1604) into Block(1642) at 0", "Move ExpressionStatement(1611) into Block(1642) at 1", "Move IfStatement(1626) into Block(1642) at 2", "Insert SimpleName: redirectURL(1644) into InfixExpression: ==(1646) at 0", "Insert NullLiteral(1645) into InfixExpression: ==(1646) at 1", "Move ExpressionStatement(1769) into Block(1657) at 0", "Insert ThrowStatement(1656) into Block(1657) at 1", "Insert ParenthesizedExpression(1603) into MethodInvocation(1605) at 0", "Update SimpleName: setTargetAddress(1754) to getIssuerLogoutURL", "Move SimpleName: setTargetAddress(1754) into MethodInvocation(1605) at 1", "Insert MethodInvocation(1650) into ExpressionStatement(1651) at 0", "Insert ClassInstanceCreation(1655) into ThrowStatement(1656) at 0", "Insert CastExpression(1602) into ParenthesizedExpression(1603) at 0", "Update SimpleName: logoutRequest(1765) to LOG", "Move SimpleName: logoutRequest(1765) into MethodInvocation(1650) at 0", "Update SimpleName: getID(1766) to debug", "Move SimpleName: getID(1766) into MethodInvocation(1650) at 1", "Insert StringLiteral: \"No issuerLogoutURL or issuer parameter specified for logout\"(1649) into MethodInvocation(1650) at 2", "Insert SimpleType: ProcessingException(1653) into ClassInstanceCreation(1655) at 0", "Insert StringLiteral: \"Failed to create SignOutRequest\"(1654) into ClassInstanceCreation(1655) at 1", "Insert SimpleType: SAMLProtocol(1598) into CastExpression(1602) at 0", "Insert MethodInvocation(1601) into CastExpression(1602) at 1", "Insert SimpleName: ProcessingException(1652) into SimpleType: ProcessingException(1653) at 0", "Update SimpleName: String(1661) to SAMLProtocol", "Move SimpleName: String(1661) into SimpleType: SAMLProtocol(1598) at 0", "Update SimpleName: request(1664) to config", "Move SimpleName: request(1664) into MethodInvocation(1601) at 0", "Update SimpleName: getRequestURL(1665) to getProtocol", "Move SimpleName: getRequestURL(1665) into MethodInvocation(1601) at 1", "Delete SimpleName: requestState(1763)", "Delete SimpleName: setRequestId(1764)", "Delete MethodInvocation(1767)", "Delete MethodInvocation(1768)", "Delete StringLiteral: \"http://localhost:8081/IDBUS/CXF/CXFIDP/SAML2/SLO/REDIR\"(1628)", "Delete Assignment: =(1629)", "Delete ExpressionStatement(1630)", "Delete SimpleType: String(1662)", "Delete SimpleName: requestURL(1663)", "Delete MethodInvocation(1666)", "Delete SimpleName: toString(1667)", "Delete MethodInvocation(1668)", "Delete VariableDeclarationFragment(1669)", "Delete VariableDeclarationStatement(1670)", "Delete SimpleName: RequestState(1745)", "Delete SimpleType: RequestState(1746)", "Delete SimpleName: requestState(1747)", "Delete SimpleName: RequestState(1748)", "Delete SimpleType: RequestState(1749)", "Delete ClassInstanceCreation(1750)", "Delete VariableDeclarationFragment(1751)", "Delete VariableDeclarationStatement(1752)", "Delete SimpleName: requestState(1753)", "Delete SimpleName: requestURL(1755)", "Delete MethodInvocation(1756)", "Delete ExpressionStatement(1757)", "Delete SimpleName: requestState(1758)", "Delete SimpleName: setIdpServiceAddress(1759)", "Delete SimpleName: redirectURL(1760)", "Delete MethodInvocation(1761)", "Delete ExpressionStatement(1762)", "Delete SimpleName: requestState(1770)", "Delete SimpleName: setIssuerId(1771)", "Delete SimpleName: realm(1772)", "Delete MethodInvocation(1773)", "Delete ExpressionStatement(1774)", "Delete SimpleName: requestState(1775)", "Delete SimpleName: setWebAppContext(1776)", "Delete SimpleName: logoutRequest(1777)", "Delete SimpleName: getIssuer(1778)", "Delete MethodInvocation(1779)", "Delete SimpleName: getValue(1780)", "Delete MethodInvocation(1781)", "Delete MethodInvocation(1782)", "Delete ExpressionStatement(1783)", "Delete SimpleName: requestState(1784)", "Delete SimpleName: setState(1785)", "Delete SimpleName: relayState(1786)", "Delete MethodInvocation(1787)", "Delete ExpressionStatement(1788)", "Delete SimpleName: requestState(1789)", "Delete SimpleName: setCreatedAt(1790)", "Delete SimpleName: System(1791)", "Delete SimpleName: currentTimeMillis(1792)", "Delete MethodInvocation(1793)", "Delete MethodInvocation(1794)", "Delete ExpressionStatement(1795)", "Delete SimpleName: response(1891)", "Delete SimpleName: setRequestState(1892)", "Delete SimpleName: requestState(1893)", "Delete MethodInvocation(1894)", "Delete ExpressionStatement(1895)"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}