{"application": "google-auto", "csha": "cddbcebd42c12d8e81d50c0bef50241d217f4274", "files": [{"AutoValueProcessor_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS QualifiedName: com.google.common.collect.ImmutableMap to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS SimpleName: Iterable to SimpleType: Iterable at 0", "INS ReturnStatement to Block at 5", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleType: ExecutableElement to ParameterizedType: ImmutableMap.Builder<ExecutableElement,String> at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: ImmutableMap<ExecutableElement,String> at 2", "INS SimpleName: ImmutableMap to SimpleType: ImmutableMap at 0", "INS SimpleName: propertyMethods to SingleVariableDeclaration at 1", "INS SimpleType: ExecutableElement to ParameterizedType: ImmutableMap<ExecutableElement,String> at 1", "INS SimpleName: map to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: ImmutableMap<ExecutableElement,String> at 2", "INS SimpleName: map to ReturnStatement at 0", "INS ParameterizedType: ImmutableMap<ExecutableElement,String> to MethodDeclaration at 1", "INS SimpleName: allGetters to MethodInvocation at 0", "INS ParameterizedType: Iterable<ExecutableElement> to SingleVariableDeclaration at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Iterable to ParameterizedType: Iterable<ExecutableElement> at 0", "INS SimpleName: builder to MethodInvocation at 1", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS SimpleType: ImmutableMap.Builder to ParameterizedType: ImmutableMap.Builder<ExecutableElement,String> at 0", "INS SimpleType: ExecutableElement to ParameterizedType: ImmutableMap<ExecutableElement,String> at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: methodToPropertyNameMap to MethodDeclaration at 2", "INS SimpleName: allGetters to IfStatement at 0", "INS QualifiedName: ImmutableMap.Builder to SimpleType: ImmutableMap.Builder at 0", "INS SimpleType: ExecutableElement to ParameterizedType: Iterable<ExecutableElement> at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS IfStatement to Block at 4", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: allGetters to VariableDeclarationFragment at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: checkDuplicateGetters to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: ImmutableMap.Builder<ExecutableElement,String> at 2", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 3", "INS SimpleType: ImmutableMap to ParameterizedType: ImmutableMap<ExecutableElement,String> at 0", "INS SimpleName: propertyMethods to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: ImmutableMap to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: ImmutableMap to ParameterizedType: ImmutableMap<ExecutableElement,String> at 0", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: ImmutableMap to SimpleType: ImmutableMap at 0", "INS Modifier: private to MethodDeclaration at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: builder to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS ParameterizedType: ImmutableMap<ExecutableElement,String> to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ParameterizedType: ImmutableMap.Builder<ExecutableElement,String> to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: map to VariableDeclarationFragment at 0"]}, {"root": "MOVE from Block", "operations": ["MOV EnhancedForStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 13"]}, {"root": "INS Modifier: static to MethodDeclaration at 1", "operations": ["INS Modifier: static to MethodDeclaration at 1"]}, {"root": "UPDATE from ImmutableList<ExecutableElement> to ImmutableSet<ExecutableElement>", "operations": ["UPD ParameterizedType: ImmutableList<ExecutableElement> from ImmutableList<ExecutableElement> to ImmutableSet<ExecutableElement>", "UPD ParameterizedType: Map<ExecutableElement,String> from Map<ExecutableElement,String> to ImmutableSet<ExecutableElement>", "UPD ParameterizedType: ImmutableList<ExecutableElement> from ImmutableList<ExecutableElement> to ImmutableSet<ExecutableElement>"]}, {"root": "INS VariableDeclarationStatement to Block at 13", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 13", "INS SimpleName: toBuilderMethods to VariableDeclarationFragment at 0"]}, {"root": "INS IfStatement to Block at 14", "operations": ["INS Block to IfStatement at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: of to MethodInvocation at 1", "INS SimpleName: toBuilderMethods to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to Block at 14", "INS SimpleName: ImmutableSet to MethodInvocation at 0", "INS SimpleName: builder to MethodInvocation at 0", "INS SimpleName: toBuilderMethods to Assignment: = at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: toBuilderMethods to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: typeUtils to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: methodsToImplement to MethodInvocation at 3"]}, {"root": "INS ExpressionStatement to Block at 15", "operations": ["INS QualifiedName: SimpleNameFunction.INSTANCE to MethodInvocation at 2", "INS SimpleName: FluentIterable to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: from to MethodInvocation at 1", "INS ExpressionStatement to Block at 15", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS QualifiedName: vars.toBuilderMethods to Assignment: = at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: toList to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 24", "operations": ["INS SimpleType: ImmutableMap to ParameterizedType: ImmutableMap<ExecutableElement,String> at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ParameterizedType: ImmutableMap<ExecutableElement,String> to VariableDeclarationStatement at 0", "INS SimpleType: ExecutableElement to ParameterizedType: ImmutableMap<ExecutableElement,String> at 1", "INS SimpleName: ImmutableMap to SimpleType: ImmutableMap at 0", "INS SimpleName: methodToPropertyName to VariableDeclarationFragment at 0", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS VariableDeclarationStatement to Block at 24", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from List<ExecutableElement> to Iterable<ExecutableElement>", "operations": ["UPD ParameterizedType: List<ExecutableElement> from List<ExecutableElement> to Iterable<ExecutableElement>", "UPD ParameterizedType: List<ExecutableElement> from List<ExecutableElement> to Iterable<ExecutableElement>"]}, {"root": "UPDATE from ImmutableList to ImmutableSet", "operations": ["UPD SimpleType: ImmutableList from ImmutableList to ImmutableSet", "UPD SimpleName: ImmutableList from ImmutableList to ImmutableSet", "UPD SimpleType: ImmutableList from ImmutableList to ImmutableSet", "UPD SimpleType: Map from Map to ImmutableSet", "UPD SimpleName: ImmutableList from ImmutableList to ImmutableSet", "UPD SimpleName: Map from Map to ImmutableSet", "UPD SimpleName: ImmutableList from ImmutableList to ImmutableSet"]}, {"root": "MOVE from ParameterizedType: ImmutableList<ExecutableElement>", "operations": ["MOV SimpleType: ExecutableElement to ParameterizedType: ImmutableList<ExecutableElement> at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Map<ExecutableElement,String> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "INS ParameterizedType: Set<ExecutableElement> to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: Set to ParameterizedType: Set<ExecutableElement> at 0", "INS ParameterizedType: Set<ExecutableElement> to VariableDeclarationStatement at 0", "INS SimpleName: Set to SimpleType: Set at 0"]}, {"root": "UPDATE from toImplement to propertyMethods", "operations": ["UPD SimpleName: toImplement from toImplement to propertyMethods", "UPD SimpleName: allGetters from allGetters to propertyMethods", "UPD SimpleName: methodToPropertyName from methodToPropertyName to propertyMethods", "UPD SimpleName: toImplement from toImplement to propertyMethods"]}, {"root": "UPDATE from List to Iterable", "operations": ["UPD SimpleType: List from List to Iterable", "UPD SimpleName: List from List to Iterable", "UPD SimpleName: List from List to Iterable", "UPD SimpleType: List from List to Iterable"]}, {"root": "UPDATE from ImmutableList.Builder<ExecutableElement> to ImmutableSet.Builder<ExecutableElement>", "operations": ["UPD ParameterizedType: ImmutableList.Builder<ExecutableElement> from ImmutableList.Builder<ExecutableElement> to ImmutableSet.Builder<ExecutableElement>"]}, {"root": "UPDATE from toImplement to methodsToImplement", "operations": ["UPD SimpleName: toImplement from toImplement to methodsToImplement", "UPD SimpleName: toImplement from toImplement to methodsToImplement", "UPD SimpleName: toImplement from toImplement to methodsToImplement"]}, {"root": "INS SimpleType: ExecutableElement to ParameterizedType: Map<ExecutableElement,String> at 1", "operations": ["INS SimpleType: ExecutableElement to ParameterizedType: Map<ExecutableElement,String> at 1", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from ParameterizedType: Set<ExecutableElement>", "operations": ["MOV SimpleType: ExecutableElement to ParameterizedType: Set<ExecutableElement> at 1", "MOV SimpleType: String to ParameterizedType: ImmutableMap<ExecutableElement,String> at 2"]}, {"root": "UPDATE from ImmutableList.Builder to ImmutableSet.Builder", "operations": ["UPD QualifiedName: ImmutableList.Builder from ImmutableList.Builder to ImmutableSet.Builder", "UPD SimpleType: ImmutableList.Builder from ImmutableList.Builder to ImmutableSet.Builder"]}, {"root": "INS SimpleType: ExecutableElement to ParameterizedType: ImmutableList.Builder<ExecutableElement> at 1", "operations": ["INS SimpleType: ExecutableElement to ParameterizedType: ImmutableList.Builder<ExecutableElement> at 1", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0"]}, {"root": "UPDATE from allGetters to Sets", "operations": ["UPD SimpleName: allGetters from allGetters to Sets"]}, {"root": "INS SimpleName: difference to MethodInvocation at 1", "operations": ["INS SimpleName: difference to MethodInvocation at 1"]}, {"root": "INS SimpleName: toBuilderMethods to MethodInvocation at 3", "operations": ["INS SimpleName: toBuilderMethods to MethodInvocation at 3"]}, {"root": "UPDATE from checkDuplicateGetters to methodToPropertyNameMap", "operations": ["UPD SimpleName: checkDuplicateGetters from checkDuplicateGetters to methodToPropertyNameMap"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: methodToPropertyName to MethodInvocation at 1", "MOV SimpleName: checkDuplicateGetters to MethodInvocation at 0"]}, {"root": "UPDATE from typeSimplifier to TypeSimplifier", "operations": ["UPD SimpleName: typeSimplifier from typeSimplifier to TypeSimplifier"]}, {"root": "UPDATE from newLinkedHashMap to transform", "operations": ["UPD SimpleName: newLinkedHashMap from newLinkedHashMap to transform"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Maps to MethodInvocation at 2", "MOV SimpleName: newLinkedHashMap to MethodInvocation at 1"]}, {"root": "UPDATE from methodToPropertyName to builder", "operations": ["UPD SimpleName: methodToPropertyName from methodToPropertyName to builder"]}, {"root": "UPDATE from Maps to toBuilderMethods", "operations": ["UPD SimpleName: Maps from Maps to toBuilderMethods"]}, {"root": "UPDATE from \" property getters\" to \" property getters and Builder converters\"", "operations": ["UPD StringLiteral: \" property getters\" from \" property getters\" to \" property getters and Builder converters\""]}, {"root": "DEL PrimitiveType: boolean", "operations": ["DEL PrimitiveType: boolean"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL IfStatement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: methodToPropertyName", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL ExpressionStatement", "DEL SimpleName: allGetters", "DEL Block", "DEL MethodInvocation"]}]}}, {"AutoValueProcessor_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(2763) at 9", "Insert QualifiedName: com.google.common.collect.ImmutableMap(18) into ImportDeclaration(19) at 0", "Insert MethodDeclaration(1826) into TypeDeclaration: class(2762) at 21", "Move VariableDeclarationStatement(1555) into Block(1731) at 13", "Insert Modifier: private(1733) into MethodDeclaration(1826) at 0", "Insert ParameterizedType: ImmutableMap<ExecutableElement,String>(1740) into MethodDeclaration(1826) at 1", "Insert SimpleName: methodToPropertyNameMap(1741) into MethodDeclaration(1826) at 2", "Insert SingleVariableDeclaration(1748) into MethodDeclaration(1826) at 3", "Insert Block(1825) into MethodDeclaration(1826) at 4", "Insert Modifier: static(1828) into MethodDeclaration(1902) at 1", "Update ParameterizedType: ImmutableList<ExecutableElement>(2165) to ImmutableSet<ExecutableElement>", "Insert VariableDeclarationStatement(1477) into Block(1731) at 13", "Insert IfStatement(1508) into Block(1731) at 14", "Insert ExpressionStatement(1520) into Block(1731) at 15", "Insert VariableDeclarationStatement(1600) into Block(1731) at 23", "Insert SimpleType: ImmutableMap(1735) into ParameterizedType: ImmutableMap<ExecutableElement,String>(1740) at 0", "Insert SimpleType: ExecutableElement(1737) into ParameterizedType: ImmutableMap<ExecutableElement,String>(1740) at 1", "Insert SimpleType: String(1739) into ParameterizedType: ImmutableMap<ExecutableElement,String>(1740) at 2", "Insert ParameterizedType: Iterable<ExecutableElement>(1746) into SingleVariableDeclaration(1748) at 0", "Insert SimpleName: propertyMethods(1747) into SingleVariableDeclaration(1748) at 1", "Insert VariableDeclarationStatement(1761) into Block(1825) at 0", "Insert VariableDeclarationStatement(1768) into Block(1825) at 1", "Move EnhancedForStatement(1589) into Block(1825) at 2", "Insert VariableDeclarationStatement(1815) into Block(1825) at 3", "Insert IfStatement(1822) into Block(1825) at 4", "Insert ReturnStatement(1824) into Block(1825) at 5", "Update ParameterizedType: List<ExecutableElement>(1736) to Iterable<ExecutableElement>", "Update ParameterizedType: List<ExecutableElement>(2007) to Iterable<ExecutableElement>", "Update SimpleType: ImmutableList(2162) to ImmutableSet", "Move SimpleType: ExecutableElement(2177) into ParameterizedType: ImmutableSet<ExecutableElement>(2264) at 1", "Update ParameterizedType: ImmutableList<ExecutableElement>(1386) to ImmutableSet<ExecutableElement>", "Update ParameterizedType: Map<ExecutableElement,String>(1542) to ImmutableSet<ExecutableElement>", "Move ParameterizedType: Map<ExecutableElement,String>(1542) into VariableDeclarationStatement(1477) at 0", "Insert VariableDeclarationFragment(1476) into VariableDeclarationStatement(1477) at 1", "Move MethodInvocation(1470) into IfStatement(1508) at 0", "Insert Block(1500) into IfStatement(1508) at 1", "Insert Block(1507) into IfStatement(1508) at 2", "Insert Assignment: =(1519) into ExpressionStatement(1520) at 0", "Insert ParameterizedType: Set<ExecutableElement>(1525) into VariableDeclarationStatement(1533) at 0", "Insert ParameterizedType: ImmutableMap<ExecutableElement,String>(1594) into VariableDeclarationStatement(1600) at 0", "Insert VariableDeclarationFragment(1599) into VariableDeclarationStatement(1600) at 1", "Update SimpleName: toImplement(1633) to propertyMethods", "Insert SimpleName: ImmutableMap(1734) into SimpleType: ImmutableMap(1735) at 0", "Insert SimpleName: ExecutableElement(1736) into SimpleType: ExecutableElement(1737) at 0", "Insert SimpleName: String(1738) into SimpleType: String(1739) at 0", "Insert SimpleType: Iterable(1743) into ParameterizedType: Iterable<ExecutableElement>(1746) at 0", "Insert SimpleType: ExecutableElement(1745) into ParameterizedType: Iterable<ExecutableElement>(1746) at 1", "Insert ParameterizedType: ImmutableMap.Builder<ExecutableElement,String>(1755) into VariableDeclarationStatement(1761) at 0", "Insert VariableDeclarationFragment(1760) into VariableDeclarationStatement(1761) at 1", "Insert PrimitiveType: boolean(1762) into VariableDeclarationStatement(1768) at 0", "Insert VariableDeclarationFragment(1767) into VariableDeclarationStatement(1768) at 1", "Update SimpleName: toImplement(1560) to propertyMethods", "Insert ParameterizedType: ImmutableMap<ExecutableElement,String>(1809) into VariableDeclarationStatement(1815) at 0", "Insert VariableDeclarationFragment(1814) into VariableDeclarationStatement(1815) at 1", "Insert SimpleName: allGetters(1816) into IfStatement(1822) at 0", "Insert Block(1821) into IfStatement(1822) at 1", "Insert SimpleName: map(1823) into ReturnStatement(1824) at 0", "Update SimpleType: List(1733) to Iterable", "Update SimpleType: List(2004) to Iterable", "Update SimpleName: ImmutableList(2161) to ImmutableSet", "Update ParameterizedType: ImmutableList.Builder<ExecutableElement>(2178) to ImmutableSet.Builder<ExecutableElement>", "Update SimpleType: ImmutableList(1383) to ImmutableSet", "Update SimpleName: toImplement(1387) to methodsToImplement", "Update SimpleType: Map(1537) to ImmutableSet", "Insert SimpleType: ExecutableElement(1473) into ParameterizedType: ImmutableSet<ExecutableElement>(1474) at 1", "Insert SimpleName: toBuilderMethods(1475) into VariableDeclarationFragment(1476) at 0", "Move ExpressionStatement(1479) into Block(1500) at 0", "Insert ExpressionStatement(1499) into Block(1500) at 1", "Insert ExpressionStatement(1506) into Block(1507) at 0", "Insert QualifiedName: vars.toBuilderMethods(1509) into Assignment: =(1519) at 0", "Insert MethodInvocation(1518) into Assignment: =(1519) at 1", "Insert SimpleType: Set(1522) into ParameterizedType: Set<ExecutableElement>(1525) at 0", "Move SimpleType: ExecutableElement(1539) into ParameterizedType: Set<ExecutableElement>(1525) at 1", "Update SimpleName: allGetters(1550) to propertyMethods", "Insert SimpleType: ImmutableMap(1589) into ParameterizedType: ImmutableMap<ExecutableElement,String>(1594) at 0", "Insert SimpleType: ExecutableElement(1591) into ParameterizedType: ImmutableMap<ExecutableElement,String>(1594) at 1", "Move SimpleType: String(1541) into ParameterizedType: ImmutableMap<ExecutableElement,String>(1594) at 2", "Insert SimpleName: methodToPropertyName(1595) into VariableDeclarationFragment(1599) at 0", "Insert MethodInvocation(1598) into VariableDeclarationFragment(1599) at 1", "Insert SimpleName: Iterable(1742) into SimpleType: Iterable(1743) at 0", "Insert SimpleName: ExecutableElement(1744) into SimpleType: ExecutableElement(1745) at 0", "Insert SimpleType: ImmutableMap.Builder(1750) into ParameterizedType: ImmutableMap.Builder<ExecutableElement,String>(1755) at 0", "Insert SimpleType: ExecutableElement(1752) into ParameterizedType: ImmutableMap.Builder<ExecutableElement,String>(1755) at 1", "Insert SimpleType: String(1754) into ParameterizedType: ImmutableMap.Builder<ExecutableElement,String>(1755) at 2", "Insert SimpleName: builder(1756) into VariableDeclarationFragment(1760) at 0", "Insert MethodInvocation(1759) into VariableDeclarationFragment(1760) at 1", "Insert SimpleName: allGetters(1763) into VariableDeclarationFragment(1767) at 0", "Insert MethodInvocation(1766) into VariableDeclarationFragment(1767) at 1", "Insert SimpleType: ImmutableMap(1804) into ParameterizedType: ImmutableMap<ExecutableElement,String>(1809) at 0", "Insert SimpleType: ExecutableElement(1806) into ParameterizedType: ImmutableMap<ExecutableElement,String>(1809) at 1", "Insert SimpleType: String(1808) into ParameterizedType: ImmutableMap<ExecutableElement,String>(1809) at 2", "Insert SimpleName: map(1810) into VariableDeclarationFragment(1814) at 0", "Insert MethodInvocation(1813) into VariableDeclarationFragment(1814) at 1", "Insert ExpressionStatement(1820) into Block(1821) at 0", "Update SimpleName: List(1732) to Iterable", "Update SimpleName: List(2003) to Iterable", "Move SimpleName: ExecutableElement(2163) into SimpleType: ExecutableElement(2105) at 0", "Update SimpleType: ImmutableList.Builder(2175) to ImmutableSet.Builder", "Insert SimpleType: ExecutableElement(2276) into ParameterizedType: ImmutableSet.Builder<ExecutableElement>(2277) at 1", "Update SimpleName: ImmutableList(1382) to ImmutableSet", "Update SimpleName: toImplement(1407) to methodsToImplement", "Update SimpleName: Map(1536) to ImmutableSet", "Insert SimpleName: ExecutableElement(1472) into SimpleType: ExecutableElement(1473) at 0", "Insert Assignment: =(1498) into ExpressionStatement(1499) at 0", "Insert Assignment: =(1505) into ExpressionStatement(1506) at 0", "Insert MethodInvocation(1516) into MethodInvocation(1518) at 0", "Insert SimpleName: toList(1517) into MethodInvocation(1518) at 1", "Insert SimpleName: Set(1521) into SimpleType: Set(1522) at 0", "Update SimpleName: allGetters(1551) to Sets", "Insert SimpleName: difference(1528) into MethodInvocation(1531) at 1", "Update SimpleName: toImplement(1552) to methodsToImplement", "Insert SimpleName: toBuilderMethods(1530) into MethodInvocation(1531) at 3", "Insert SimpleName: ImmutableMap(1588) into SimpleType: ImmutableMap(1589) at 0", "Insert SimpleName: ExecutableElement(1590) into SimpleType: ExecutableElement(1591) at 0", "Update SimpleName: checkDuplicateGetters(1591) to methodToPropertyNameMap", "Move SimpleName: checkDuplicateGetters(1591) into MethodInvocation(1598) at 0", "Update SimpleName: methodToPropertyName(1592) to propertyMethods", "Move SimpleName: methodToPropertyName(1592) into MethodInvocation(1598) at 1", "Update SimpleName: typeSimplifier(1701) to TypeSimplifier", "Insert QualifiedName: ImmutableMap.Builder(1749) into SimpleType: ImmutableMap.Builder(1750) at 0", "Insert SimpleName: ExecutableElement(1751) into SimpleType: ExecutableElement(1752) at 0", "Insert SimpleName: String(1753) into SimpleType: String(1754) at 0", "Insert SimpleName: ImmutableMap(1757) into MethodInvocation(1759) at 0", "Insert SimpleName: builder(1758) into MethodInvocation(1759) at 1", "Insert SimpleName: allGetters(1764) into MethodInvocation(1766) at 0", "Insert SimpleName: propertyMethods(1765) into MethodInvocation(1766) at 1", "Insert SimpleName: ImmutableMap(1803) into SimpleType: ImmutableMap(1804) at 0", "Insert SimpleName: ExecutableElement(1805) into SimpleType: ExecutableElement(1806) at 0", "Insert SimpleName: String(1807) into SimpleType: String(1808) at 0", "Insert SimpleName: builder(1811) into MethodInvocation(1813) at 0", "Insert SimpleName: build(1812) into MethodInvocation(1813) at 1", "Insert MethodInvocation(1819) into ExpressionStatement(1820) at 0", "Update QualifiedName: ImmutableList.Builder(2174) to ImmutableSet.Builder", "Insert SimpleName: ExecutableElement(2275) into SimpleType: ExecutableElement(2276) at 0", "Update SimpleName: ImmutableList(2180) to ImmutableSet", "Insert SimpleName: toBuilderMethods(1490) into Assignment: =(1498) at 0", "Insert MethodInvocation(1497) into Assignment: =(1498) at 1", "Insert SimpleName: toBuilderMethods(1501) into Assignment: =(1505) at 0", "Insert MethodInvocation(1504) into Assignment: =(1505) at 1", "Insert MethodInvocation(1513) into MethodInvocation(1516) at 0", "Update SimpleName: newLinkedHashMap(1545) to transform", "Move SimpleName: newLinkedHashMap(1545) into MethodInvocation(1516) at 1", "Insert QualifiedName: SimpleNameFunction.INSTANCE(1515) into MethodInvocation(1516) at 2", "Update SimpleName: methodToPropertyName(1582) to builder", "Insert SimpleName: checkDuplicateGetters(1817) into MethodInvocation(1819) at 0", "Insert SimpleName: map(1818) into MethodInvocation(1819) at 1", "Insert MethodInvocation(1493) into MethodInvocation(1497) at 0", "Insert SimpleName: toBuilderMethods(1494) into MethodInvocation(1497) at 1", "Insert SimpleName: typeUtils(1495) into MethodInvocation(1497) at 2", "Insert SimpleName: methodsToImplement(1496) into MethodInvocation(1497) at 3", "Insert SimpleName: ImmutableSet(1502) into MethodInvocation(1504) at 0", "Insert SimpleName: of(1503) into MethodInvocation(1504) at 1", "Insert SimpleName: FluentIterable(1510) into MethodInvocation(1513) at 0", "Insert SimpleName: from(1511) into MethodInvocation(1513) at 1", "Update SimpleName: Maps(1544) to toBuilderMethods", "Move SimpleName: Maps(1544) into MethodInvocation(1513) at 2", "Insert SimpleName: builder(1491) into MethodInvocation(1493) at 0", "Insert SimpleName: get(1492) into MethodInvocation(1493) at 1", "Update StringLiteral: \" property getters\"(2248) to \" property getters and Builder converters\"", "Delete PrimitiveType: boolean(1549)", "Delete Block(1480)", "Delete IfStatement(1481)", "Delete SimpleName: methodToPropertyName(1543)", "Delete MethodInvocation(1546)", "Delete VariableDeclarationFragment(1547)", "Delete VariableDeclarationStatement(1548)", "Delete SimpleName: allGetters(1590)", "Delete MethodInvocation(1593)", "Delete ExpressionStatement(1594)", "Delete Block(1595)", "Delete IfStatement(1596)"]}}, {"AutoValueTemplateVars_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 27", "operations": ["INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SimpleName: toBuilderMethods to VariableDeclarationFragment at 0", "INS Javadoc to FieldDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS FieldDeclaration to TypeDeclaration: class at 27", "INS SimpleName: List to SimpleType: List at 0", "INS TagElement to Javadoc at 0", "INS TextElement: The names of any  to TagElement at 0", "INS TextElement:  methods, that is methods that return the builder type. to TagElement at 2", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS TextElement:  toBuilder() to TagElement: @code at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS ParameterizedType: List<String> to FieldDeclaration at 1", "INS TagElement: @code to TagElement at 1"]}]}}, {"AutoValueTemplateVars_diff": {"operations": ["Insert FieldDeclaration(303) into TypeDeclaration: class(342) at 27", "Insert Javadoc(295) into FieldDeclaration(303) at 0", "Insert ParameterizedType: List<String>(300) into FieldDeclaration(303) at 1", "Insert VariableDeclarationFragment(302) into FieldDeclaration(303) at 2", "Insert TagElement(294) into Javadoc(295) at 0", "Insert SimpleType: List(297) into ParameterizedType: List<String>(300) at 0", "Insert SimpleType: String(299) into ParameterizedType: List<String>(300) at 1", "Insert SimpleName: toBuilderMethods(301) into VariableDeclarationFragment(302) at 0", "Insert TextElement: The names of any (290) into TagElement(294) at 0", "Insert TagElement: @code(292) into TagElement(294) at 1", "Insert TextElement:  methods, that is methods that return the builder type.(293) into TagElement(294) at 2", "Insert SimpleName: List(296) into SimpleType: List(297) at 0", "Insert SimpleName: String(298) into SimpleType: String(299) at 0", "Insert TextElement:  toBuilder()(291) into TagElement: @code(292) at 0"]}}, {"BuilderSpec_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: com.google.common.collect.FluentIterable to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 27", "operations": ["INS QualifiedName: javax.lang.model.type.DeclaredType to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 27"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS TextElement: abstract Builder<A, B> toBuilder(); to TagElement: @code at 2", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: typeArgument to SingleVariableDeclaration at 1", "INS SimpleName: iterator to MethodInvocation at 1", "INS ParameterizedType: Set<ExecutableElement> to SingleVariableDeclaration at 0", "INS IfStatement to Block at 0", "INS TextElement: }} to TagElement at 10", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS TextElement: abstract int someProperty(); to TagElement: @code at 1", "INS SimpleType: TypeMirror to SingleVariableDeclaration at 0", "INS SimpleName: getReturnType to MethodInvocation at 1", "INS QualifiedName: SimpleNameFunction.INSTANCE to MethodInvocation at 2", "INS TextElement: <p>We currently impose that there cannot be more than one such method.</p> to TagElement at 12", "INS SimpleName: ImmutableSet to SimpleType: ImmutableSet at 0", "INS SimpleName: returnType to MethodInvocation at 0", "INS SimpleName: TypeMirror to SimpleType: TypeMirror at 0", "INS SimpleType: ImmutableSet to ParameterizedType: ImmutableSet<ExecutableElement> at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleType: ExecutableElement to ParameterizedType: ImmutableSet<ExecutableElement> at 1", "INS SimpleName: builder to MethodInvocation at 1", "INS SimpleType: ImmutableSet.Builder to ParameterizedType: ImmutableSet.Builder<ExecutableElement> at 0", "INS SimpleName: getKind to MethodInvocation at 1", "INS TextElement:  @AutoValue abstract class Foo<A extends Number, B>  to TagElement: @code at 0", "INS MethodInvocation to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: builderMethods to MethodInvocation at 0", "INS SimpleName: methods to MethodInvocation at 0", "INS SimpleName: errorReporter to MethodInvocation at 0", "INS SimpleName: ImmutableSet to SimpleType: ImmutableSet at 0", "INS SimpleType: Set to ParameterizedType: Set<ExecutableElement> at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS TagElement: @code to TagElement at 3", "INS VariableDeclarationStatement to Block at 2", "INS SimpleType: String to ParameterizedType: ImmutableList.Builder<String> at 1", "INS MethodInvocation to MethodInvocation at 0", "INS ParameterizedType: ImmutableSet.Builder<ExecutableElement> to VariableDeclarationStatement at 0", "INS IfStatement to Block at 4", "INS SimpleType: ImmutableList to ParameterizedType: ImmutableList<String> at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: asElement to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleType: ImmutableSet to ParameterizedType: ImmutableSet<ExecutableElement> at 0", "INS SimpleType: ExecutableElement to ParameterizedType: Set<ExecutableElement> at 1", "INS MethodInvocation to InfixExpression: > at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: builderTypeElement to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 2", "INS QualifiedName: TypeKind.TYPEVAR to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: abstractMethods to EnhancedForStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: add to MethodInvocation at 1", "INS TextElement: the same parameter names. We enforce elsewhere that the names and bounds of the builder to TagElement at 5", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: builderTypeParamNames to MethodInvocation at 0", "INS SimpleName: typeArgument to MethodInvocation at 2", "INS SimpleName: method to MethodInvocation at 2", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: typeUtils to MethodInvocation at 0", "INS StringLiteral: \"There can be at most one builder converter method\" to MethodInvocation at 2", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS SimpleName: typeUtils to MethodInvocation at 0", "INS SimpleName: MoreTypes to MethodInvocation at 0", "INS SimpleName: builderTypeElement to MethodInvocation at 2", "INS SimpleName: transform to MethodInvocation at 1", "INS SimpleName: getReturnType to MethodInvocation at 1", "INS ParameterizedType: ImmutableSet<ExecutableElement> to MethodDeclaration at 1", "INS TagElement: @code to TagElement at 8", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 4", "INS SimpleName: method to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: DeclaredType to SimpleType: DeclaredType at 0", "INS TextElement:  with to TagElement at 4", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: abstractMethods to SingleVariableDeclaration at 1", "INS SimpleName: FluentIterable to MethodInvocation at 0", "INS InfixExpression: > to IfStatement at 0", "INS TextElement:  Builder<A, B> to TagElement: @code at 0", "INS SimpleName: method to MethodInvocation at 0", "INS StringLiteral: \"Builder converter method should return \" to InfixExpression: + at 0", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleType: Types to SingleVariableDeclaration at 0", "INS SimpleName: Types to SimpleType: Types at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: returnType to VariableDeclarationFragment at 0", "INS ReturnStatement to Block at 5", "INS EnhancedForStatement to Block at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS SimpleName: toBuilderMethods to MethodDeclaration at 2", "INS TagElement to Javadoc at 0", "INS SimpleName: typeArguments to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: reportError to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: ImmutableList to SimpleType: ImmutableList at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: method to MethodInvocation at 0", "INS ParameterizedType: ImmutableList<String> to VariableDeclarationStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: from to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: ImmutableList<String> at 1", "INS SimpleName: getTypeParameters to MethodInvocation at 1", "INS SimpleName: builderMethods to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: typeArguments to MethodInvocation at 0", "INS QualifiedName: ImmutableList.Builder to SimpleType: ImmutableList.Builder at 0", "INS SimpleType: ExecutableElement to ParameterizedType: ImmutableSet<ExecutableElement> at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: toList to MethodInvocation at 1", "INS SimpleName: builderMethods to VariableDeclarationFragment at 0", "INS SimpleName: actualTypeParametersString to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: builderTypeElement to MethodInvocation at 0", "INS TextElement: </pre> to TagElement at 11", "INS SimpleName: builderTypeParamNames to VariableDeclarationFragment at 0", "INS SimpleName: build to MethodInvocation at 1", "INS Block to MethodDeclaration at 5", "INS QualifiedName: ImmutableSet.Builder to SimpleType: ImmutableSet.Builder at 0", "INS SimpleName: builderMethods to ReturnStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS TextElement: Finds any methods in the set that return the builder type. If the builder has type parameters to TagElement at 0", "INS SimpleName: method to SingleVariableDeclaration at 1", "INS Block to IfStatement at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: Set to SimpleType: Set at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS TextElement: , then the return type of the method must be  to TagElement at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS EnhancedForStatement to Block at 3", "INS TextElement:  <A, B> to TagElement: @code at 0", "INS ParameterizedType: ImmutableSet<ExecutableElement> to VariableDeclarationStatement at 0", "INS SimpleName: reportError to MethodInvocation at 1", "INS SimpleName: errorReporter to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: typeArguments to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: builderTypeElement to InfixExpression: + at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: typeUtils to SingleVariableDeclaration at 1", "INS NumberLiteral: 1 to InfixExpression: > at 1", "INS SimpleName: builder to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS TagElement: @code to TagElement at 1", "INS SimpleType: ImmutableList.Builder to ParameterizedType: ImmutableList.Builder<String> at 0", "INS SimpleName: methods to VariableDeclarationFragment at 0", "INS TextElement: parameters must be the same as those of the @AutoValue class. Here's a correct example: to TagElement at 6", "INS SimpleName: asElement to MethodInvocation at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: asDeclared to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 1", "INS TextElement: <pre> to TagElement at 7", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: ExecutableElement to ParameterizedType: ImmutableSet.Builder<ExecutableElement> at 1", "INS SimpleName: ExecutableElement to SimpleType: ExecutableElement at 0", "INS SimpleName: ImmutableSet to MethodInvocation at 0", "INS TextElement: interface Builder<A extends Number, B> {...} to TagElement at 9", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleType: DeclaredType to VariableDeclarationStatement at 0", "INS ParameterizedType: ImmutableList.Builder<String> to VariableDeclarationStatement at 0", "INS SimpleName: getTypeArguments to MethodInvocation at 1", "INS SimpleName: methods to MethodInvocation at 0", "INS SimpleType: ExecutableElement to SingleVariableDeclaration at 0", "INS SimpleName: TypeSimplifier to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: typeArgument to MethodInvocation at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS SimpleName: autoValueClass to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 4", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: TypeSimplifier to MethodInvocation at 0", "INS SimpleName: typeParams to VariableDeclarationFragment at 0", "INS SimpleName: actualTypeParametersString to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from typeSimplifier to TypeSimplifier", "operations": ["UPD SimpleName: typeSimplifier from typeSimplifier to TypeSimplifier"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "INS SimpleName: typeParams to InfixExpression: + at 2", "operations": ["INS SimpleName: typeParams to InfixExpression: + at 2"]}, {"root": "INS SimpleName: typeParams to InfixExpression: + at 2", "operations": ["INS SimpleName: typeParams to InfixExpression: + at 2"]}, {"root": "INS SimpleName: typeParams to InfixExpression: + at 5", "operations": ["INS SimpleName: typeParams to InfixExpression: + at 5"]}, {"root": "UPDATE from \"Expected a method with this signature: %s %s(%s)\" to \"Expected a method with this signature: %s%s %s(%s)\"", "operations": ["UPD StringLiteral: \"Expected a method with this signature: %s %s(%s)\" from \"Expected a method with this signature: %s %s(%s)\" to \"Expected a method with this signature: %s%s %s(%s)\""]}, {"root": "INS MethodInvocation to MethodInvocation at 4", "operations": ["INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: actualTypeParametersString to MethodInvocation at 1", "INS SimpleName: builderTypeElement to MethodInvocation at 2", "INS SimpleName: TypeSimplifier to MethodInvocation at 0"]}, {"root": "INS SimpleName: typeParams to InfixExpression: + at 2", "operations": ["INS SimpleName: typeParams to InfixExpression: + at 2"]}]}}, {"BuilderSpec_diff": {"operations": ["Insert ImportDeclaration(13) into CompilationUnit(1712) at 6", "Insert ImportDeclaration(55) into CompilationUnit(1712) at 27", "Insert QualifiedName: com.google.common.collect.FluentIterable(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: javax.lang.model.type.DeclaredType(54) into ImportDeclaration(55) at 0", "Insert MethodDeclaration(1048) into TypeDeclaration: class(1198) at 10", "Insert Javadoc(874) into MethodDeclaration(1048) at 0", "Insert ParameterizedType: ImmutableSet<ExecutableElement>(879) into MethodDeclaration(1048) at 1", "Insert SimpleName: toBuilderMethods(880) into MethodDeclaration(1048) at 2", "Insert SingleVariableDeclaration(884) into MethodDeclaration(1048) at 3", "Insert SingleVariableDeclaration(891) into MethodDeclaration(1048) at 4", "Insert Block(1047) into MethodDeclaration(1048) at 5", "Insert VariableDeclarationStatement(1370) into Block(1557) at 4", "Insert TagElement(873) into Javadoc(874) at 0", "Insert SimpleType: ImmutableSet(876) into ParameterizedType: ImmutableSet<ExecutableElement>(879) at 0", "Insert SimpleType: ExecutableElement(878) into ParameterizedType: ImmutableSet<ExecutableElement>(879) at 1", "Insert SimpleType: Types(882) into SingleVariableDeclaration(884) at 0", "Insert SimpleName: typeUtils(883) into SingleVariableDeclaration(884) at 1", "Insert ParameterizedType: Set<ExecutableElement>(889) into SingleVariableDeclaration(891) at 0", "Insert SimpleName: abstractMethods(890) into SingleVariableDeclaration(891) at 1", "Insert VariableDeclarationStatement(910) into Block(1047) at 0", "Insert VariableDeclarationStatement(921) into Block(1047) at 1", "Insert EnhancedForStatement(1016) into Block(1047) at 2", "Insert VariableDeclarationStatement(1027) into Block(1047) at 3", "Insert IfStatement(1044) into Block(1047) at 4", "Insert ReturnStatement(1046) into Block(1047) at 5", "Insert SimpleType: String(1363) into VariableDeclarationStatement(1370) at 0", "Insert VariableDeclarationFragment(1369) into VariableDeclarationStatement(1370) at 1", "Insert TextElement: Finds any methods in the set that return the builder type. If the builder has type parameters(855) into TagElement(873) at 0", "Insert TagElement: @code(857) into TagElement(873) at 1", "Insert TextElement: , then the return type of the method must be (858) into TagElement(873) at 2", "Insert TagElement: @code(860) into TagElement(873) at 3", "Insert TextElement:  with(861) into TagElement(873) at 4", "Insert TextElement: the same parameter names. We enforce elsewhere that the names and bounds of the builder(862) into TagElement(873) at 5", "Insert TextElement: parameters must be the same as those of the @AutoValue class. Here's a correct example:(863) into TagElement(873) at 6", "Insert TextElement: <pre>(864) into TagElement(873) at 7", "Insert TagElement: @code(868) into TagElement(873) at 8", "Insert TextElement: interface Builder<A extends Number, B> {...}(869) into TagElement(873) at 9", "Insert TextElement: }}(870) into TagElement(873) at 10", "Insert TextElement: </pre>(871) into TagElement(873) at 11", "Insert TextElement: <p>We currently impose that there cannot be more than one such method.</p>(872) into TagElement(873) at 12", "Insert SimpleName: ImmutableSet(875) into SimpleType: ImmutableSet(876) at 0", "Insert SimpleName: ExecutableElement(877) into SimpleType: ExecutableElement(878) at 0", "Insert SimpleName: Types(881) into SimpleType: Types(882) at 0", "Insert SimpleType: Set(886) into ParameterizedType: Set<ExecutableElement>(889) at 0", "Insert SimpleType: ExecutableElement(888) into ParameterizedType: Set<ExecutableElement>(889) at 1", "Insert ParameterizedType: ImmutableList<String>(896) into VariableDeclarationStatement(910) at 0", "Insert VariableDeclarationFragment(909) into VariableDeclarationStatement(910) at 1", "Insert ParameterizedType: ImmutableSet.Builder<ExecutableElement>(915) into VariableDeclarationStatement(921) at 0", "Insert VariableDeclarationFragment(920) into VariableDeclarationStatement(921) at 1", "Insert SingleVariableDeclaration(925) into EnhancedForStatement(1016) at 0", "Insert SimpleName: abstractMethods(926) into EnhancedForStatement(1016) at 1", "Insert Block(1015) into EnhancedForStatement(1016) at 2", "Insert ParameterizedType: ImmutableSet<ExecutableElement>(1021) into VariableDeclarationStatement(1027) at 0", "Insert VariableDeclarationFragment(1026) into VariableDeclarationStatement(1027) at 1", "Insert InfixExpression: >(1032) into IfStatement(1044) at 0", "Insert Block(1043) into IfStatement(1044) at 1", "Insert SimpleName: builderMethods(1045) into ReturnStatement(1046) at 0", "Insert SimpleName: String(1362) into SimpleType: String(1363) at 0", "Insert SimpleName: typeParams(1364) into VariableDeclarationFragment(1369) at 0", "Insert MethodInvocation(1368) into VariableDeclarationFragment(1369) at 1", "Move ExpressionStatement(1272) into Block(1506) at 1", "Insert TextElement:  <A, B>(856) into TagElement: @code(857) at 0", "Insert TextElement:  Builder<A, B>(859) into TagElement: @code(860) at 0", "Insert TextElement:  @AutoValue abstract class Foo<A extends Number, B> (865) into TagElement: @code(868) at 0", "Insert TextElement: abstract int someProperty();(866) into TagElement: @code(868) at 1", "Insert TextElement: abstract Builder<A, B> toBuilder();(867) into TagElement: @code(868) at 2", "Insert SimpleName: Set(885) into SimpleType: Set(886) at 0", "Insert SimpleName: ExecutableElement(887) into SimpleType: ExecutableElement(888) at 0", "Insert SimpleType: ImmutableList(893) into ParameterizedType: ImmutableList<String>(896) at 0", "Insert SimpleType: String(895) into ParameterizedType: ImmutableList<String>(896) at 1", "Insert SimpleName: builderTypeParamNames(897) into VariableDeclarationFragment(909) at 0", "Insert MethodInvocation(908) into VariableDeclarationFragment(909) at 1", "Insert SimpleType: ImmutableSet.Builder(912) into ParameterizedType: ImmutableSet.Builder<ExecutableElement>(915) at 0", "Insert SimpleType: ExecutableElement(914) into ParameterizedType: ImmutableSet.Builder<ExecutableElement>(915) at 1", "Insert SimpleName: methods(916) into VariableDeclarationFragment(920) at 0", "Insert MethodInvocation(919) into VariableDeclarationFragment(920) at 1", "Insert SimpleType: ExecutableElement(923) into SingleVariableDeclaration(925) at 0", "Insert SimpleName: method(924) into SingleVariableDeclaration(925) at 1", "Insert IfStatement(1014) into Block(1015) at 0", "Insert SimpleType: ImmutableSet(1018) into ParameterizedType: ImmutableSet<ExecutableElement>(1021) at 0", "Insert SimpleType: ExecutableElement(1020) into ParameterizedType: ImmutableSet<ExecutableElement>(1021) at 1", "Insert SimpleName: builderMethods(1022) into VariableDeclarationFragment(1026) at 0", "Insert MethodInvocation(1025) into VariableDeclarationFragment(1026) at 1", "Insert MethodInvocation(1030) into InfixExpression: >(1032) at 0", "Insert NumberLiteral: 1(1031) into InfixExpression: >(1032) at 1", "Insert ExpressionStatement(1042) into Block(1043) at 0", "Insert SimpleName: TypeSimplifier(1365) into MethodInvocation(1368) at 0", "Insert SimpleName: actualTypeParametersString(1366) into MethodInvocation(1368) at 1", "Insert SimpleName: autoValueClass(1367) into MethodInvocation(1368) at 2", "Insert SimpleName: ImmutableList(892) into SimpleType: ImmutableList(893) at 0", "Insert SimpleName: String(894) into SimpleType: String(895) at 0", "Insert MethodInvocation(906) into MethodInvocation(908) at 0", "Insert SimpleName: toList(907) into MethodInvocation(908) at 1", "Insert QualifiedName: ImmutableSet.Builder(911) into SimpleType: ImmutableSet.Builder(912) at 0", "Insert SimpleName: ExecutableElement(913) into SimpleType: ExecutableElement(914) at 0", "Insert SimpleName: ImmutableSet(917) into MethodInvocation(919) at 0", "Insert SimpleName: builder(918) into MethodInvocation(919) at 1", "Insert SimpleName: ExecutableElement(922) into SimpleType: ExecutableElement(923) at 0", "Insert MethodInvocation(935) into IfStatement(1014) at 0", "Insert Block(1013) into IfStatement(1014) at 1", "Insert SimpleName: ImmutableSet(1017) into SimpleType: ImmutableSet(1018) at 0", "Insert SimpleName: ExecutableElement(1019) into SimpleType: ExecutableElement(1020) at 0", "Insert SimpleName: methods(1023) into MethodInvocation(1025) at 0", "Insert SimpleName: build(1024) into MethodInvocation(1025) at 1", "Insert SimpleName: builderMethods(1028) into MethodInvocation(1030) at 0", "Insert SimpleName: size(1029) into MethodInvocation(1030) at 1", "Insert MethodInvocation(1041) into ExpressionStatement(1042) at 0", "Update SimpleName: typeSimplifier(908) to TypeSimplifier", "Move ExpressionStatement(1291) into Block(1486) at 1", "Insert MethodInvocation(903) into MethodInvocation(906) at 0", "Insert SimpleName: transform(904) into MethodInvocation(906) at 1", "Insert QualifiedName: SimpleNameFunction.INSTANCE(905) into MethodInvocation(906) at 2", "Insert SimpleName: builderTypeElement(927) into MethodInvocation(935) at 0", "Insert SimpleName: equals(928) into MethodInvocation(935) at 1", "Insert MethodInvocation(934) into MethodInvocation(935) at 2", "Insert ExpressionStatement(940) into Block(1013) at 0", "Insert VariableDeclarationStatement(951) into Block(1013) at 1", "Insert VariableDeclarationStatement(962) into Block(1013) at 2", "Insert EnhancedForStatement(991) into Block(1013) at 3", "Insert IfStatement(1012) into Block(1013) at 4", "Insert SimpleName: errorReporter(1033) into MethodInvocation(1041) at 0", "Insert SimpleName: reportError(1034) into MethodInvocation(1041) at 1", "Insert StringLiteral: \"There can be at most one builder converter method\"(1035) into MethodInvocation(1041) at 2", "Insert MethodInvocation(1040) into MethodInvocation(1041) at 3", "Insert SimpleName: typeParams(1497) into InfixExpression: +(1498) at 2", "Insert SimpleName: FluentIterable(898) into MethodInvocation(903) at 0", "Insert SimpleName: from(899) into MethodInvocation(903) at 1", "Insert MethodInvocation(902) into MethodInvocation(903) at 2", "Insert SimpleName: typeUtils(929) into MethodInvocation(934) at 0", "Insert SimpleName: asElement(930) into MethodInvocation(934) at 1", "Insert MethodInvocation(933) into MethodInvocation(934) at 2", "Insert MethodInvocation(939) into ExpressionStatement(940) at 0", "Insert SimpleType: DeclaredType(942) into VariableDeclarationStatement(951) at 0", "Insert VariableDeclarationFragment(950) into VariableDeclarationStatement(951) at 1", "Insert ParameterizedType: ImmutableList.Builder<String>(956) into VariableDeclarationStatement(962) at 0", "Insert VariableDeclarationFragment(961) into VariableDeclarationStatement(962) at 1", "Insert SingleVariableDeclaration(966) into EnhancedForStatement(991) at 0", "Insert MethodInvocation(969) into EnhancedForStatement(991) at 1", "Insert Block(990) into EnhancedForStatement(991) at 2", "Insert PrefixExpression: !(998) into IfStatement(1012) at 0", "Insert Block(1011) into IfStatement(1012) at 1", "Insert MethodInvocation(1038) into MethodInvocation(1040) at 0", "Insert SimpleName: next(1039) into MethodInvocation(1040) at 1", "Insert SimpleName: builderTypeElement(900) into MethodInvocation(902) at 0", "Insert SimpleName: getTypeParameters(901) into MethodInvocation(902) at 1", "Insert SimpleName: method(931) into MethodInvocation(933) at 0", "Insert SimpleName: getReturnType(932) into MethodInvocation(933) at 1", "Insert SimpleName: methods(936) into MethodInvocation(939) at 0", "Insert SimpleName: add(937) into MethodInvocation(939) at 1", "Insert SimpleName: method(938) into MethodInvocation(939) at 2", "Insert SimpleName: DeclaredType(941) into SimpleType: DeclaredType(942) at 0", "Insert SimpleName: returnType(943) into VariableDeclarationFragment(950) at 0", "Insert MethodInvocation(949) into VariableDeclarationFragment(950) at 1", "Insert SimpleType: ImmutableList.Builder(953) into ParameterizedType: ImmutableList.Builder<String>(956) at 0", "Insert SimpleType: String(955) into ParameterizedType: ImmutableList.Builder<String>(956) at 1", "Insert SimpleName: typeArguments(957) into VariableDeclarationFragment(961) at 0", "Insert MethodInvocation(960) into VariableDeclarationFragment(961) at 1", "Insert SimpleType: TypeMirror(964) into SingleVariableDeclaration(966) at 0", "Insert SimpleName: typeArgument(965) into SingleVariableDeclaration(966) at 1", "Insert SimpleName: returnType(967) into MethodInvocation(969) at 0", "Insert SimpleName: getTypeArguments(968) into MethodInvocation(969) at 1", "Insert IfStatement(989) into Block(990) at 0", "Insert MethodInvocation(997) into PrefixExpression: !(998) at 0", "Insert ExpressionStatement(1010) into Block(1011) at 0", "Insert SimpleName: builderMethods(1036) into MethodInvocation(1038) at 0", "Insert SimpleName: iterator(1037) into MethodInvocation(1038) at 1", "Insert SimpleName: typeParams(1474) into InfixExpression: +(1478) at 2", "Insert SimpleName: typeParams(1477) into InfixExpression: +(1478) at 5", "Update StringLiteral: \"Expected a method with this signature: %s %s(%s)\"(793) to \"Expected a method with this signature: %s%s %s(%s)\"", "Insert MethodInvocation(802) into MethodInvocation(807) at 4", "Insert SimpleName: MoreTypes(944) into MethodInvocation(949) at 0", "Insert SimpleName: asDeclared(945) into MethodInvocation(949) at 1", "Insert MethodInvocation(948) into MethodInvocation(949) at 2", "Insert QualifiedName: ImmutableList.Builder(952) into SimpleType: ImmutableList.Builder(953) at 0", "Insert SimpleName: String(954) into SimpleType: String(955) at 0", "Insert SimpleName: ImmutableList(958) into MethodInvocation(960) at 0", "Insert SimpleName: builder(959) into MethodInvocation(960) at 1", "Insert SimpleName: TypeMirror(963) into SimpleType: TypeMirror(964) at 0", "Insert MethodInvocation(975) into IfStatement(989) at 0", "Insert Block(988) into IfStatement(989) at 1", "Insert SimpleName: builderTypeParamNames(992) into MethodInvocation(997) at 0", "Insert SimpleName: equals(993) into MethodInvocation(997) at 1", "Insert MethodInvocation(996) into MethodInvocation(997) at 2", "Insert MethodInvocation(1009) into ExpressionStatement(1010) at 0", "Insert SimpleName: typeParams(1521) into InfixExpression: +(1522) at 2", "Insert SimpleName: TypeSimplifier(799) into MethodInvocation(802) at 0", "Insert SimpleName: actualTypeParametersString(800) into MethodInvocation(802) at 1", "Insert SimpleName: builderTypeElement(801) into MethodInvocation(802) at 2", "Insert SimpleName: method(946) into MethodInvocation(948) at 0", "Insert SimpleName: getReturnType(947) into MethodInvocation(948) at 1", "Insert MethodInvocation(972) into MethodInvocation(975) at 0", "Insert SimpleName: equals(973) into MethodInvocation(975) at 1", "Insert QualifiedName: TypeKind.TYPEVAR(974) into MethodInvocation(975) at 2", "Insert ExpressionStatement(987) into Block(988) at 0", "Insert SimpleName: typeArguments(994) into MethodInvocation(996) at 0", "Insert SimpleName: build(995) into MethodInvocation(996) at 1", "Insert SimpleName: errorReporter(999) into MethodInvocation(1009) at 0", "Insert SimpleName: reportError(1000) into MethodInvocation(1009) at 1", "Insert InfixExpression: +(1007) into MethodInvocation(1009) at 2", "Insert SimpleName: method(1008) into MethodInvocation(1009) at 3", "Insert SimpleName: typeArgument(970) into MethodInvocation(972) at 0", "Insert SimpleName: getKind(971) into MethodInvocation(972) at 1", "Insert MethodInvocation(986) into ExpressionStatement(987) at 0", "Insert StringLiteral: \"Builder converter method should return \"(1001) into InfixExpression: +(1007) at 0", "Insert SimpleName: builderTypeElement(1002) into InfixExpression: +(1007) at 1", "Insert MethodInvocation(1006) into InfixExpression: +(1007) at 2", "Insert SimpleName: typeArguments(976) into MethodInvocation(986) at 0", "Insert SimpleName: add(977) into MethodInvocation(986) at 1", "Insert MethodInvocation(985) into MethodInvocation(986) at 2", "Insert SimpleName: TypeSimplifier(1003) into MethodInvocation(1006) at 0", "Insert SimpleName: actualTypeParametersString(1004) into MethodInvocation(1006) at 1", "Insert SimpleName: builderTypeElement(1005) into MethodInvocation(1006) at 2", "Insert MethodInvocation(983) into MethodInvocation(985) at 0", "Insert SimpleName: toString(984) into MethodInvocation(985) at 1", "Insert MethodInvocation(981) into MethodInvocation(983) at 0", "Insert SimpleName: getSimpleName(982) into MethodInvocation(983) at 1", "Insert SimpleName: typeUtils(978) into MethodInvocation(981) at 0", "Insert SimpleName: asElement(979) into MethodInvocation(981) at 1", "Insert SimpleName: typeArgument(980) into MethodInvocation(981) at 2"]}}, {"TypeSimplifier_cluster": {"actions": [{"root": "INS Modifier: static to MethodDeclaration at 0", "operations": ["INS Modifier: static to MethodDeclaration at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3", "MOV SimpleName: join to MethodInvocation at 2"]}, {"root": "UPDATE from TypeParameterElementFunctions.SIMPLE_NAME to SimpleNameFunction.INSTANCE", "operations": ["UPD QualifiedName: TypeParameterElementFunctions.SIMPLE_NAME from TypeParameterElementFunctions.SIMPLE_NAME to SimpleNameFunction.INSTANCE"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.base.Function", "DEL ImportDeclaration"]}, {"root": "DEL EnumDeclaration", "operations": ["DEL SimpleType: TypeParameterElement", "DEL SimpleName: TypeParameterElement", "DEL SimpleName: Override", "DEL SimpleName: String", "DEL SimpleName: element", "DEL MethodInvocation", "DEL SimpleType: Function", "DEL SimpleName: TypeParameterElementFunctions", "DEL SimpleName: getSimpleName", "DEL Modifier: private", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL SimpleName: TypeParameterElement", "DEL SimpleType: String", "DEL EnumDeclaration", "DEL MethodDeclaration", "DEL SimpleType: TypeParameterElement", "DEL SimpleName: Function", "DEL EnumConstantDeclaration", "DEL SimpleName: String", "DEL SimpleName: SIMPLE_NAME", "DEL MarkerAnnotation", "DEL ParameterizedType: Function<TypeParameterElement,String>", "DEL AnonymousClassDeclaration", "DEL SimpleName: apply", "DEL SimpleName: toString", "DEL SimpleName: element", "DEL ReturnStatement", "DEL Block", "DEL Modifier: public", "DEL MethodInvocation"]}]}}, {"TypeSimplifier_diff": {"operations": ["Insert Modifier: static(428) into MethodDeclaration(474) at 0", "Move MethodInvocation(459) into MethodInvocation(467) at 3", "Move SimpleName: join(460) into MethodInvocation(467) at 2", "Update QualifiedName: TypeParameterElementFunctions.SIMPLE_NAME(466) to SimpleNameFunction.INSTANCE", "Delete QualifiedName: com.google.common.base.Function(4)", "Delete ImportDeclaration(5)", "Delete Modifier: private(476)", "Delete SimpleName: TypeParameterElementFunctions(477)", "Delete SimpleName: Function(478)", "Delete SimpleType: Function(479)", "Delete SimpleName: TypeParameterElement(480)", "Delete SimpleType: TypeParameterElement(481)", "Delete SimpleName: String(482)", "Delete SimpleType: String(483)", "Delete ParameterizedType: Function<TypeParameterElement,String>(484)", "Delete SimpleName: SIMPLE_NAME(485)", "Delete SimpleName: Override(486)", "Delete MarkerAnnotation(487)", "Delete Modifier: public(488)", "Delete SimpleName: String(489)", "Delete SimpleType: String(490)", "Delete SimpleName: apply(491)", "Delete SimpleName: TypeParameterElement(492)", "Delete SimpleType: TypeParameterElement(493)", "Delete SimpleName: element(494)", "Delete SingleVariableDeclaration(495)", "Delete SimpleName: element(496)", "Delete SimpleName: getSimpleName(497)", "Delete MethodInvocation(498)", "Delete SimpleName: toString(499)", "Delete MethodInvocation(500)", "Delete ReturnStatement(501)", "Delete Block(502)", "Delete MethodDeclaration(503)", "Delete AnonymousClassDeclaration(504)", "Delete EnumConstantDeclaration(505)", "Delete EnumDeclaration(506)"]}}], "commit_stats": [{"total_files": 8, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}