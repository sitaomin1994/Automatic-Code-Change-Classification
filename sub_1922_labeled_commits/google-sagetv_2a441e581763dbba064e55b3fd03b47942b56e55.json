{"application": "google-sagetv", "csha": "2a441e581763dbba064e55b3fd03b47942b56e55", "files": [{"Person_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: sage.epg.sd.SDImages to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 44", "operations": ["INS Dimension to ArrayType: byte[][] at 1", "INS ArrayType: byte[][] to FieldDeclaration at 0", "INS Dimension to ArrayType: byte[][] at 2", "INS SimpleName: headshotUrls to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 44", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS PrimitiveType: byte to ArrayType: byte[][] at 0"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS ExpressionStatement to Block at 5", "INS QualifiedName: Pooler.EMPTY_2D_BYTE_ARRAY to Assignment: = at 1", "INS SimpleName: headshotUrls to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS InfixExpression: < to ForStatement at 1", "INS NumberLiteral: 0 to MethodInvocation at 3", "INS Dimension to ArrayType: byte[][] at 2", "INS NumberLiteral: 0x57 to InfixExpression: >= at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: i to ArrayAccess at 1", "INS ArrayAccess to MethodInvocation at 2", "INS SimpleName: i to InfixExpression: < at 0", "INS ConditionalExpression to Assignment: = at 1", "INS SimpleName: headshotLen to InfixExpression: < at 1", "INS SimpleName: headshotUrls to ArrayAccess at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS InfixExpression: >= to IfStatement at 0", "INS SimpleName: headshotUrls to ArrayAccess at 0", "INS SimpleName: in to MethodInvocation at 0", "INS InfixExpression: == to ConditionalExpression at 0", "INS ArrayCreation to ConditionalExpression at 2", "INS SimpleName: in to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS QualifiedName: Pooler.EMPTY_2D_BYTE_ARRAY to Assignment: = at 1", "INS ArrayCreation to Assignment: = at 1", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS ForStatement to Block at 2", "INS Block to ForStatement at 3", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: readShort to MethodInvocation at 1", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS ArrayType: byte[] to ArrayCreation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: headshotUrls to Assignment: = at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS ArrayType: byte[][] to ArrayCreation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS PrimitiveType: byte to VariableDeclarationStatement at 0", "INS SimpleName: headshotLen to InfixExpression: == at 0", "INS Dimension to ArrayType: byte[] at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: readByte to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: headshotUrls to Assignment: = at 0", "INS Block to IfStatement at 2", "INS QualifiedName: Pooler.EMPTY_2D_BYTE_ARRAY to ConditionalExpression at 1", "INS SimpleName: headshotUrlLen to MethodInvocation at 4", "INS SimpleName: headshotUrlLen to VariableDeclarationFragment at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: ver to InfixExpression: >= at 0", "INS SimpleName: headshotLen to VariableDeclarationFragment at 0", "INS Assignment: = to ExpressionStatement at 0", "INS PrimitiveType: byte to ArrayType: byte[][] at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: i to ArrayAccess at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS PostfixExpression: ++ to ForStatement at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: in to MethodInvocation at 0", "INS IfStatement to Block at 3", "INS Dimension to ArrayType: byte[][] at 1", "INS SimpleName: headshotUrlLen to ArrayCreation at 1", "INS SimpleName: headshotLen to ArrayCreation at 1", "INS ArrayAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: readFully to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 10", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: headshotUrls to ArrayAccess at 0", "INS NumberLiteral: 1 to ArrayAccess at 1", "INS SimpleName: writeShort to MethodInvocation at 1", "INS SimpleName: write to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS ExpressionStatement to Block at 4", "INS SimpleName: out to MethodInvocation at 0", "INS ExpressionStatement to Block at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: headshotUrls to ArrayAccess at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: out to MethodInvocation at 0", "INS QualifiedName: headshotUrls.length to InfixExpression: == at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS NumberLiteral: 2 to MethodInvocation at 2", "INS FieldAccess to MethodInvocation at 2", "INS SimpleName: writeShort to MethodInvocation at 1", "INS ArrayAccess to FieldAccess at 0", "INS SimpleName: writeByte to MethodInvocation at 1", "INS SimpleName: writeByte to MethodInvocation at 1", "INS NumberLiteral: 1 to ArrayAccess at 1", "INS SimpleName: headshotUrls to ArrayAccess at 0", "INS ArrayAccess to FieldAccess at 0", "INS ArrayAccess to MethodInvocation at 2", "INS SimpleName: out to MethodInvocation at 0", "INS SimpleName: out to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS ArrayAccess to MethodInvocation at 2", "INS Block to IfStatement at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: out to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS NumberLiteral: 2 to InfixExpression: == at 1", "INS SimpleName: length to FieldAccess at 1", "INS SimpleName: headshotUrls to ArrayAccess at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: out to MethodInvocation at 0", "INS IfStatement to Block at 10", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: write to MethodInvocation at 1", "INS SimpleName: length to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 9", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS QualifiedName: fromMe.headshotUrls to Assignment: = at 1", "INS ExpressionStatement to Block at 9", "INS SimpleName: headshotUrls to Assignment: = at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: thumb to ConditionalExpression at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: decodeGeneralImageUrl to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS NumberLiteral: 1 to ConditionalExpression at 1", "INS QualifiedName: headshotUrls.length to InfixExpression: == at 0", "INS NumberLiteral: 2 to InfixExpression: == at 1", "INS ArrayAccess to MethodInvocation at 2", "INS SimpleName: SDImages to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS MethodInvocation to ReturnStatement at 0", "INS NumberLiteral: 0 to ConditionalExpression at 2", "INS SimpleName: headshotUrls to ArrayAccess at 0", "INS ConditionalExpression to ArrayAccess at 1", "INS Block to IfStatement at 1"]}, {"root": "INS InfixExpression: || to ReturnStatement at 0", "operations": ["INS NumberLiteral: 2 to InfixExpression: == at 1", "INS InfixExpression: || to ReturnStatement at 0", "INS QualifiedName: headshotUrls.length to InfixExpression: == at 0", "INS InfixExpression: == to InfixExpression: || at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: i to InfixExpression: < at 0", "INS SimpleName: headshotUrls to ArrayAccess at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS QualifiedName: testMe.headshotUrls to ArrayAccess at 0", "INS SimpleName: j to ArrayAccess at 1", "INS SimpleName: j to InfixExpression: < at 0", "INS ArrayAccess to ArrayAccess at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS ArrayAccess to FieldAccess at 0", "INS SimpleName: headshotUrls to ArrayAccess at 0", "INS FieldAccess to InfixExpression: < at 1", "INS ReturnStatement to IfStatement at 1", "INS ForStatement to Block at 1", "INS SimpleName: i to ArrayAccess at 1", "INS FieldAccess to InfixExpression: != at 1", "INS ArrayAccess to FieldAccess at 0", "INS ArrayAccess to InfixExpression: != at 1", "INS Block to IfStatement at 1", "INS InfixExpression: < to ForStatement at 1", "INS FieldAccess to InfixExpression: != at 0", "INS SimpleName: length to FieldAccess at 1", "INS QualifiedName: testMe.headshotUrls to ArrayAccess at 0", "INS SimpleName: length to FieldAccess at 1", "INS SimpleName: i to ArrayAccess at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS InfixExpression: != to IfStatement at 0", "INS PostfixExpression: ++ to ForStatement at 2", "INS IfStatement to Block at 0", "INS ArrayAccess to InfixExpression: != at 0", "INS QualifiedName: headshotUrls.length to InfixExpression: < at 1", "INS SimpleName: i to ArrayAccess at 1", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: j to PostfixExpression: ++ at 0", "INS SimpleName: length to FieldAccess at 1", "INS ReturnStatement to IfStatement at 1", "INS InfixExpression: != to IfStatement at 0", "INS IfStatement to ForStatement at 3", "INS SimpleName: j to VariableDeclarationFragment at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS Block to ForStatement at 3", "INS SimpleName: i to ArrayAccess at 1", "INS ArrayAccess to ArrayAccess at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS ArrayAccess to FieldAccess at 0", "INS PostfixExpression: ++ to ForStatement at 2", "INS SimpleName: i to ArrayAccess at 1", "INS SimpleName: j to ArrayAccess at 1", "INS SimpleName: headshotUrls to ArrayAccess at 0", "INS ForStatement to Block at 2", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS InfixExpression: < to ForStatement at 1"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: >= to InfixExpression: || at 0"]}, {"root": "INS InfixExpression: && to InfixExpression: && at 0", "operations": ["INS InfixExpression: && to InfixExpression: && at 0", "INS QualifiedName: headshotUrls.length to InfixExpression: == at 1", "INS InfixExpression: == to InfixExpression: && at 1", "INS QualifiedName: testMe.headshotUrls.length to InfixExpression: == at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ForStatement to Block at 1", "MOV ForStatement to Block at 0", "MOV ReturnStatement to Block at 3"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV InfixExpression: && to InfixExpression: && at 0"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"Person_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(1635) at 1", "Insert QualifiedName: sage.epg.sd.SDImages(2) into ImportDeclaration(3) at 0", "Insert FieldDeclaration(1496) into TypeDeclaration: class(1634) at 44", "Insert ArrayType: byte[][](1493) into FieldDeclaration(1496) at 0", "Insert VariableDeclarationFragment(1495) into FieldDeclaration(1496) at 1", "Insert ExpressionStatement(87) into Block(88) at 5", "Insert IfStatement(330) into Block(331) at 3", "Insert IfStatement(505) into Block(506) at 10", "Insert ExpressionStatement(589) into Block(594) at 9", "Insert IfStatement(646) into Block(670) at 0", "Insert PrimitiveType: byte(1490) into ArrayType: byte[][](1493) at 0", "Insert Dimension(1491) into ArrayType: byte[][](1493) at 1", "Insert Dimension(1492) into ArrayType: byte[][](1493) at 2", "Insert SimpleName: headshotUrls(1494) into VariableDeclarationFragment(1495) at 0", "Insert Assignment: =(86) into ExpressionStatement(87) at 0", "Insert InfixExpression: >=(264) into IfStatement(330) at 0", "Insert Block(324) into IfStatement(330) at 1", "Insert Block(329) into IfStatement(330) at 2", "Insert InfixExpression: ==(460) into IfStatement(505) at 0", "Insert Block(498) into IfStatement(505) at 1", "Insert Block(504) into IfStatement(505) at 2", "Insert Assignment: =(588) into ExpressionStatement(589) at 0", "Insert InfixExpression: ||(621) into ReturnStatement(622) at 0", "Insert InfixExpression: ==(634) into IfStatement(646) at 0", "Insert Block(645) into IfStatement(646) at 1", "Insert Block(917) into IfStatement(920) at 1", "Insert SimpleName: headshotUrls(84) into Assignment: =(86) at 0", "Insert QualifiedName: Pooler.EMPTY_2D_BYTE_ARRAY(85) into Assignment: =(86) at 1", "Insert SimpleName: ver(262) into InfixExpression: >=(264) at 0", "Insert NumberLiteral: 0x57(263) into InfixExpression: >=(264) at 1", "Insert VariableDeclarationStatement(271) into Block(324) at 0", "Insert ExpressionStatement(285) into Block(324) at 1", "Insert ForStatement(323) into Block(324) at 2", "Insert ExpressionStatement(328) into Block(329) at 0", "Insert QualifiedName: headshotUrls.length(458) into InfixExpression: ==(460) at 0", "Insert NumberLiteral: 2(459) into InfixExpression: ==(460) at 1", "Insert ExpressionStatement(465) into Block(498) at 0", "Insert ExpressionStatement(474) into Block(498) at 1", "Insert ExpressionStatement(481) into Block(498) at 2", "Insert ExpressionStatement(490) into Block(498) at 3", "Insert ExpressionStatement(497) into Block(498) at 4", "Insert ExpressionStatement(503) into Block(504) at 0", "Insert SimpleName: headshotUrls(586) into Assignment: =(588) at 0", "Insert QualifiedName: fromMe.headshotUrls(587) into Assignment: =(588) at 1", "Move InfixExpression: >=(490) into InfixExpression: ||(621) at 0", "Insert InfixExpression: ==(620) into InfixExpression: ||(621) at 1", "Insert QualifiedName: headshotUrls.length(632) into InfixExpression: ==(634) at 0", "Insert NumberLiteral: 2(633) into InfixExpression: ==(634) at 1", "Insert ReturnStatement(644) into Block(645) at 0", "Insert InfixExpression: &&(810) into InfixExpression: &&(817) at 0", "Move ForStatement(688) into Block(917) at 0", "Move ForStatement(709) into Block(917) at 1", "Insert ForStatement(914) into Block(917) at 2", "Move ReturnStatement(711) into Block(917) at 3", "Insert PrimitiveType: byte(265) into VariableDeclarationStatement(271) at 0", "Insert VariableDeclarationFragment(270) into VariableDeclarationStatement(271) at 1", "Insert Assignment: =(284) into ExpressionStatement(285) at 0", "Insert VariableDeclarationExpression(290) into ForStatement(323) at 0", "Insert InfixExpression: <(293) into ForStatement(323) at 1", "Insert PostfixExpression: ++(295) into ForStatement(323) at 2", "Insert Block(322) into ForStatement(323) at 3", "Insert Assignment: =(327) into ExpressionStatement(328) at 0", "Insert MethodInvocation(464) into ExpressionStatement(465) at 0", "Insert MethodInvocation(473) into ExpressionStatement(474) at 0", "Insert MethodInvocation(480) into ExpressionStatement(481) at 0", "Insert MethodInvocation(489) into ExpressionStatement(490) at 0", "Insert MethodInvocation(496) into ExpressionStatement(497) at 0", "Insert MethodInvocation(502) into ExpressionStatement(503) at 0", "Insert QualifiedName: headshotUrls.length(618) into InfixExpression: ==(620) at 0", "Insert NumberLiteral: 2(619) into InfixExpression: ==(620) at 1", "Insert MethodInvocation(643) into ReturnStatement(644) at 0", "Move InfixExpression: &&(660) into InfixExpression: &&(810) at 0", "Insert InfixExpression: ==(809) into InfixExpression: &&(810) at 1", "Insert VariableDeclarationExpression(864) into ForStatement(914) at 0", "Insert InfixExpression: <(867) into ForStatement(914) at 1", "Insert PostfixExpression: ++(869) into ForStatement(914) at 2", "Insert Block(913) into ForStatement(914) at 3", "Insert SimpleName: headshotLen(266) into VariableDeclarationFragment(270) at 0", "Insert MethodInvocation(269) into VariableDeclarationFragment(270) at 1", "Insert SimpleName: headshotUrls(272) into Assignment: =(284) at 0", "Insert ConditionalExpression(283) into Assignment: =(284) at 1", "Insert PrimitiveType: int(286) into VariableDeclarationExpression(290) at 0", "Insert VariableDeclarationFragment(289) into VariableDeclarationExpression(290) at 1", "Insert SimpleName: i(291) into InfixExpression: <(293) at 0", "Insert SimpleName: headshotLen(292) into InfixExpression: <(293) at 1", "Insert SimpleName: i(294) into PostfixExpression: ++(295) at 0", "Insert VariableDeclarationStatement(302) into Block(322) at 0", "Insert ExpressionStatement(312) into Block(322) at 1", "Insert ExpressionStatement(321) into Block(322) at 2", "Insert SimpleName: headshotUrls(325) into Assignment: =(327) at 0", "Insert QualifiedName: Pooler.EMPTY_2D_BYTE_ARRAY(326) into Assignment: =(327) at 1", "Insert SimpleName: out(461) into MethodInvocation(464) at 0", "Insert SimpleName: writeByte(462) into MethodInvocation(464) at 1", "Insert NumberLiteral: 2(463) into MethodInvocation(464) at 2", "Insert SimpleName: out(466) into MethodInvocation(473) at 0", "Insert SimpleName: writeShort(467) into MethodInvocation(473) at 1", "Insert FieldAccess(472) into MethodInvocation(473) at 2", "Insert SimpleName: out(475) into MethodInvocation(480) at 0", "Insert SimpleName: write(476) into MethodInvocation(480) at 1", "Insert ArrayAccess(479) into MethodInvocation(480) at 2", "Insert SimpleName: out(482) into MethodInvocation(489) at 0", "Insert SimpleName: writeShort(483) into MethodInvocation(489) at 1", "Insert FieldAccess(488) into MethodInvocation(489) at 2", "Insert SimpleName: out(491) into MethodInvocation(496) at 0", "Insert SimpleName: write(492) into MethodInvocation(496) at 1", "Insert ArrayAccess(495) into MethodInvocation(496) at 2", "Insert SimpleName: out(499) into MethodInvocation(502) at 0", "Insert SimpleName: writeByte(500) into MethodInvocation(502) at 1", "Insert NumberLiteral: 0(501) into MethodInvocation(502) at 2", "Insert SimpleName: SDImages(635) into MethodInvocation(643) at 0", "Insert SimpleName: decodeGeneralImageUrl(636) into MethodInvocation(643) at 1", "Insert ArrayAccess(642) into MethodInvocation(643) at 2", "Insert QualifiedName: testMe.headshotUrls.length(807) into InfixExpression: ==(809) at 0", "Insert QualifiedName: headshotUrls.length(808) into InfixExpression: ==(809) at 1", "Insert PrimitiveType: int(860) into VariableDeclarationExpression(864) at 0", "Insert VariableDeclarationFragment(863) into VariableDeclarationExpression(864) at 1", "Insert SimpleName: i(865) into InfixExpression: <(867) at 0", "Insert QualifiedName: headshotUrls.length(866) into InfixExpression: <(867) at 1", "Insert SimpleName: i(868) into PostfixExpression: ++(869) at 0", "Insert IfStatement(883) into Block(913) at 0", "Insert ForStatement(912) into Block(913) at 1", "Insert SimpleName: in(267) into MethodInvocation(269) at 0", "Insert SimpleName: readByte(268) into MethodInvocation(269) at 1", "Insert InfixExpression: ==(275) into ConditionalExpression(283) at 0", "Insert QualifiedName: Pooler.EMPTY_2D_BYTE_ARRAY(276) into ConditionalExpression(283) at 1", "Insert ArrayCreation(282) into ConditionalExpression(283) at 2", "Insert SimpleName: i(287) into VariableDeclarationFragment(289) at 0", "Insert NumberLiteral: 0(288) into VariableDeclarationFragment(289) at 1", "Insert PrimitiveType: int(296) into VariableDeclarationStatement(302) at 0", "Insert VariableDeclarationFragment(301) into VariableDeclarationStatement(302) at 1", "Insert Assignment: =(311) into ExpressionStatement(312) at 0", "Insert MethodInvocation(320) into ExpressionStatement(321) at 0", "Insert ArrayAccess(470) into FieldAccess(472) at 0", "Insert SimpleName: length(471) into FieldAccess(472) at 1", "Insert SimpleName: headshotUrls(477) into ArrayAccess(479) at 0", "Insert NumberLiteral: 0(478) into ArrayAccess(479) at 1", "Insert ArrayAccess(486) into FieldAccess(488) at 0", "Insert SimpleName: length(487) into FieldAccess(488) at 1", "Insert SimpleName: headshotUrls(493) into ArrayAccess(495) at 0", "Insert NumberLiteral: 1(494) into ArrayAccess(495) at 1", "Insert SimpleName: headshotUrls(637) into ArrayAccess(642) at 0", "Insert ConditionalExpression(641) into ArrayAccess(642) at 1", "Insert SimpleName: i(861) into VariableDeclarationFragment(863) at 0", "Insert NumberLiteral: 0(862) into VariableDeclarationFragment(863) at 1", "Insert InfixExpression: !=(880) into IfStatement(883) at 0", "Insert ReturnStatement(882) into IfStatement(883) at 1", "Insert VariableDeclarationExpression(888) into ForStatement(912) at 0", "Insert InfixExpression: <(895) into ForStatement(912) at 1", "Insert PostfixExpression: ++(897) into ForStatement(912) at 2", "Insert IfStatement(911) into ForStatement(912) at 3", "Insert SimpleName: headshotLen(273) into InfixExpression: ==(275) at 0", "Insert NumberLiteral: 0(274) into InfixExpression: ==(275) at 1", "Insert ArrayType: byte[][](280) into ArrayCreation(282) at 0", "Insert SimpleName: headshotLen(281) into ArrayCreation(282) at 1", "Insert SimpleName: headshotUrlLen(297) into VariableDeclarationFragment(301) at 0", "Insert MethodInvocation(300) into VariableDeclarationFragment(301) at 1", "Insert ArrayAccess(305) into Assignment: =(311) at 0", "Insert ArrayCreation(310) into Assignment: =(311) at 1", "Insert SimpleName: in(313) into MethodInvocation(320) at 0", "Insert SimpleName: readFully(314) into MethodInvocation(320) at 1", "Insert ArrayAccess(317) into MethodInvocation(320) at 2", "Insert NumberLiteral: 0(318) into MethodInvocation(320) at 3", "Insert SimpleName: headshotUrlLen(319) into MethodInvocation(320) at 4", "Insert SimpleName: headshotUrls(468) into ArrayAccess(470) at 0", "Insert NumberLiteral: 0(469) into ArrayAccess(470) at 1", "Insert SimpleName: headshotUrls(484) into ArrayAccess(486) at 0", "Insert NumberLiteral: 1(485) into ArrayAccess(486) at 1", "Insert SimpleName: thumb(638) into ConditionalExpression(641) at 0", "Insert NumberLiteral: 1(639) into ConditionalExpression(641) at 1", "Insert NumberLiteral: 0(640) into ConditionalExpression(641) at 2", "Insert FieldAccess(874) into InfixExpression: !=(880) at 0", "Insert FieldAccess(879) into InfixExpression: !=(880) at 1", "Insert BooleanLiteral: false(881) into ReturnStatement(882) at 0", "Insert PrimitiveType: int(884) into VariableDeclarationExpression(888) at 0", "Insert VariableDeclarationFragment(887) into VariableDeclarationExpression(888) at 1", "Insert SimpleName: j(889) into InfixExpression: <(895) at 0", "Insert FieldAccess(894) into InfixExpression: <(895) at 1", "Insert SimpleName: j(896) into PostfixExpression: ++(897) at 0", "Insert InfixExpression: !=(908) into IfStatement(911) at 0", "Insert ReturnStatement(910) into IfStatement(911) at 1", "Insert PrimitiveType: byte(277) into ArrayType: byte[][](280) at 0", "Insert Dimension(278) into ArrayType: byte[][](280) at 1", "Insert Dimension(279) into ArrayType: byte[][](280) at 2", "Insert SimpleName: in(298) into MethodInvocation(300) at 0", "Insert SimpleName: readShort(299) into MethodInvocation(300) at 1", "Insert SimpleName: headshotUrls(303) into ArrayAccess(305) at 0", "Insert SimpleName: i(304) into ArrayAccess(305) at 1", "Insert ArrayType: byte[](308) into ArrayCreation(310) at 0", "Insert SimpleName: headshotUrlLen(309) into ArrayCreation(310) at 1", "Insert SimpleName: headshotUrls(315) into ArrayAccess(317) at 0", "Insert SimpleName: i(316) into ArrayAccess(317) at 1", "Insert ArrayAccess(872) into FieldAccess(874) at 0", "Insert SimpleName: length(873) into FieldAccess(874) at 1", "Insert ArrayAccess(877) into FieldAccess(879) at 0", "Insert SimpleName: length(878) into FieldAccess(879) at 1", "Insert SimpleName: j(885) into VariableDeclarationFragment(887) at 0", "Insert NumberLiteral: 0(886) into VariableDeclarationFragment(887) at 1", "Insert ArrayAccess(892) into FieldAccess(894) at 0", "Insert SimpleName: length(893) into FieldAccess(894) at 1", "Insert ArrayAccess(902) into InfixExpression: !=(908) at 0", "Insert ArrayAccess(907) into InfixExpression: !=(908) at 1", "Insert BooleanLiteral: false(909) into ReturnStatement(910) at 0", "Insert PrimitiveType: byte(306) into ArrayType: byte[](308) at 0", "Insert Dimension(307) into ArrayType: byte[](308) at 1", "Insert SimpleName: headshotUrls(870) into ArrayAccess(872) at 0", "Insert SimpleName: i(871) into ArrayAccess(872) at 1", "Insert QualifiedName: testMe.headshotUrls(875) into ArrayAccess(877) at 0", "Insert SimpleName: i(876) into ArrayAccess(877) at 1", "Insert SimpleName: headshotUrls(890) into ArrayAccess(892) at 0", "Insert SimpleName: i(891) into ArrayAccess(892) at 1", "Insert ArrayAccess(900) into ArrayAccess(902) at 0", "Insert SimpleName: j(901) into ArrayAccess(902) at 1", "Insert ArrayAccess(905) into ArrayAccess(907) at 0", "Insert SimpleName: j(906) into ArrayAccess(907) at 1", "Insert SimpleName: headshotUrls(898) into ArrayAccess(900) at 0", "Insert SimpleName: i(899) into ArrayAccess(900) at 1", "Insert QualifiedName: testMe.headshotUrls(903) into ArrayAccess(905) at 0", "Insert SimpleName: i(904) into ArrayAccess(905) at 1", "Delete Block(712)"]}}, {"Wizard_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 134", "operations": ["INS SimpleName: imageURLs to MethodInvocation at 16", "INS SimpleName: title to MethodInvocation at 3", "INS Block to MethodDeclaration at 16", "INS SimpleName: finaleDate to MethodInvocation at 8", "INS SimpleName: showcardID to MethodInvocation at 2", "INS SimpleName: network to MethodInvocation at 4", "INS QualifiedName: Pooler.EMPTY_INT_ARRAY to MethodInvocation at 14", "INS SimpleName: history to MethodInvocation at 6", "INS SimpleName: premiereDate to MethodInvocation at 7", "INS MethodDeclaration to TypeDeclaration: class at 134", "INS SimpleName: people to SingleVariableDeclaration at 1", "INS QualifiedName: Pooler.EMPTY_LONG_ARRAY to MethodInvocation at 15", "INS SimpleName: airDOW to MethodInvocation at 9", "INS SimpleName: airHrMin to MethodInvocation at 10", "INS SimpleName: characters to MethodInvocation at 13", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: addSeriesInfo to MethodInvocation at 0", "INS SimpleName: legacySeriesID to MethodInvocation at 1", "INS SimpleName: people to MethodInvocation at 12", "INS ReturnStatement to Block at 0", "INS SimpleName: description to MethodInvocation at 5", "INS SingleVariableDeclaration to MethodDeclaration at 13", "INS StringLiteral: \"\" to MethodInvocation at 11"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 211", "operations": ["INS QualifiedName: air.showID to MethodInvocation at 1", "INS ForStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Table to VariableDeclarationStatement at 0", "INS ReturnStatement to Block at 9", "INS IfStatement to Block at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS IfStatement to Block at 2", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: && to InfixExpression: && at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Airing to CastExpression at 0", "INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: && to InfixExpression: && at 0", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS ExpressionStatement to IfStatement at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: getStationID to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: == to InfixExpression: && at 1", "INS Assignment: = to ExpressionStatement at 0", "INS QualifiedName: Pooler.EMPTY_LONG_ARRAY to ReturnStatement at 0", "INS ArrayType: long[] to MethodDeclaration at 2", "INS InfixExpression: == to InfixExpression: && at 1", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS SimpleName: loading to IfStatement at 0", "INS Block to IfStatement at 1", "INS QualifiedName: air.showID to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS QualifiedName: t.num to InfixExpression: - at 0", "INS SimpleName: isNoShow to MethodInvocation at 0", "INS InfixExpression: != to InfixExpression: && at 1", "INS Block to IfStatement at 1", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: high to VariableDeclarationFragment at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: mid to VariableDeclarationFragment at 0", "INS InfixExpression: > to IfStatement at 0", "INS SimpleName: Airing to SimpleType: Airing at 0", "INS QualifiedName: indy.data to ArrayAccess at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS SimpleName: stationID to VariableDeclarationFragment at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: skip to IfStatement at 0", "INS InfixExpression: && to WhileStatement at 0", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS SimpleName: cmp to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: Arrays to MethodInvocation at 0", "INS IfStatement to Block at 4", "INS ArrayAccess to InfixExpression: == at 1", "INS Dimension to ArrayType: long[] at 1", "INS ArrayType: long[] to ArrayCreation at 0", "INS SimpleName: mid to Assignment: = at 1", "INS Dimension to SingleVariableDeclaration at 2", "INS TextElement:  <code>null</code> when database is not yet ready, an empty array if lookupIDs is to TagElement: @return at 0", "INS SimpleName: lastIndex to VariableDeclarationFragment at 0", "INS SimpleName: indy to VariableDeclarationFragment at 0", "INS SimpleName: Table to SimpleType: Table at 0", "INS SimpleName: stationID to InfixExpression: == at 0", "INS SimpleName: lookupIDs to TagElement: @param at 0", "INS Block to TryStatement at 1", "INS SimpleName: low to VariableDeclarationFragment at 0", "INS SimpleName: low to InfixExpression: + at 0", "INS IfStatement to Block at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: AIRING_CODE to MethodInvocation at 1", "INS SimpleName: cmp to InfixExpression: == at 0", "INS InfixExpression: > to InfixExpression: && at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to WhileStatement at 1", "INS Block to TryStatement at 0", "INS QualifiedName: air.stationID to InfixExpression: - at 0", "INS SimpleName: air to InfixExpression: != at 0", "INS SimpleName: index to PostfixExpression: -- at 0", "INS SimpleName: t to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: acquireReadLock to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 5", "INS ExpressionStatement to Block at 1", "INS SimpleName: i to ArrayAccess at 1", "INS PostfixExpression: ++ to ForStatement at 2", "INS TextElement: <code>null</code> or empty or the millisecond time (or -1 if there are no airings) of to TagElement: @return at 1", "INS InfixExpression: - to VariableDeclarationFragment at 1", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS SimpleName: chanIndex to PostfixExpression: ++ at 0", "INS SimpleType: Airing to CastExpression at 0", "INS ArrayAccess to MethodInvocation at 0", "INS BreakStatement to IfStatement at 1", "INS IfStatement to Block at 2", "INS InfixExpression: < to WhileStatement at 0", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Dimension to ArrayType: Channel[] at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: == to IfStatement at 0", "INS InfixExpression: >> to Assignment: = at 1", "INS IfStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: index to Assignment: = at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: chanIndex to ArrayAccess at 1", "INS SimpleName: isNoShow to MethodInvocation at 0", "INS SimpleName: air to InfixExpression: != at 0", "INS IfStatement to IfStatement at 2", "INS Javadoc to MethodDeclaration at 0", "INS InfixExpression: < to ForStatement at 1", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SimpleName: Airing to SimpleType: Airing at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS CastExpression to Assignment: = at 1", "INS SimpleName: channels to ArrayAccess at 0", "INS ReturnStatement to IfStatement at 1", "INS Dimension to VariableDeclarationFragment at 1", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: mid to Assignment: = at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: == to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationStatement to Block at 7", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: getLatestTvAiringTime to MethodDeclaration at 3", "INS ParenthesizedExpression to InfixExpression: >> at 0", "INS PrimitiveType: long to ArrayType: long[] at 0", "INS QualifiedName: air.stationID to InfixExpression: == at 0", "INS SimpleName: stationID to InfixExpression: == at 1", "INS VariableDeclarationStatement to Block at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: channels to VariableDeclarationFragment at 0", "INS TryStatement to Block at 8", "INS SimpleName: index to Assignment: = at 1", "INS SimpleType: Channel to ArrayType: Channel[] at 0", "INS SimpleName: AIRINGS_BY_CT_CODE to MethodInvocation at 2", "INS ArrayAccess to CastExpression at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: returnValues to ReturnStatement at 0", "INS SimpleName: t to MethodInvocation at 0", "INS InfixExpression: < to IfStatement at 0", "INS SimpleName: air to Assignment: = at 0", "INS SimpleName: lastIndex to Assignment: = at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS ArrayCreation to VariableDeclarationFragment at 2", "INS InfixExpression: == to IfStatement at 0", "INS InfixExpression: - to VariableDeclarationFragment at 1", "INS SimpleName: mid to InfixExpression: == at 0", "INS ContinueStatement to IfStatement at 1", "INS SimpleName: mid to ArrayAccess at 1", "INS SimpleName: returnValues to VariableDeclarationFragment at 0", "INS Block to ForStatement at 3", "INS MethodInvocation to InfixExpression: && at 1", "INS Block to IfStatement at 1", "INS SimpleName: fill to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: mid to Assignment: = at 0", "INS TagElement: @return to Javadoc at 2", "INS SimpleName: stationID to InfixExpression: > at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: getChannels to MethodInvocation at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: lookupIDs to ArrayAccess at 0", "INS SimpleName: lookupIDs to SingleVariableDeclaration at 1", "INS SimpleName: t to MethodInvocation at 0", "INS InfixExpression: && to InfixExpression: && at 0", "INS SimpleName: chanIndex to VariableDeclarationFragment at 0", "INS NumberLiteral: 1 to InfixExpression: >> at 1", "INS SimpleName: low to Assignment: = at 0", "INS ForStatement to Block at 1", "INS BreakStatement to Block at 0", "INS NullLiteral to InfixExpression: != at 1", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS NullLiteral to ReturnStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS TagElement to Javadoc at 0", "INS CastExpression to Assignment: = at 1", "INS VariableDeclarationStatement to Block at 6", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS SimpleName: air to Assignment: = at 0", "INS SimpleName: cmp to InfixExpression: < at 0", "INS InfixExpression: == to InfixExpression: && at 1", "INS BooleanLiteral: false to Assignment: = at 1", "INS VariableDeclarationStatement to Block at 4", "INS ExpressionStatement to Block at 0", "INS InfixExpression: + to ParenthesizedExpression at 0", "INS NumberLiteral: 0 to InfixExpression: < at 1", "INS IfStatement to Block at 9", "INS QualifiedName: air.stationID to InfixExpression: == at 0", "INS PrefixExpression: - to MethodInvocation at 3", "INS Modifier: public to MethodDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: low to InfixExpression: == at 1", "INS SimpleName: Index to SimpleType: Index at 0", "INS SimpleName: Airing to SimpleType: Airing at 0", "INS SimpleName: high to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: cmp to Assignment: = at 0", "INS SimpleName: returnValues to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 211", "INS InfixExpression: || to IfStatement at 0", "INS WhileStatement to Block at 8", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: cmp to InfixExpression: > at 0", "INS BooleanLiteral: true to VariableDeclarationFragment at 1", "INS SimpleName: Channel to SimpleType: Channel at 0", "INS SimpleName: index to InfixExpression: > at 0", "INS Block to WhileStatement at 1", "INS ArrayAccess to CastExpression at 1", "INS VariableDeclarationStatement to Block at 7", "INS SimpleName: i to InfixExpression: < at 0", "INS QualifiedName: air.stationID to InfixExpression: == at 0", "INS SimpleName: skip to Assignment: = at 0", "INS Block to IfStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to IfStatement at 1", "INS VariableDeclarationStatement to Block at 6", "INS SimpleName: lastIndex to VariableDeclarationFragment at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS TagElement: @param to Javadoc at 1", "INS VariableDeclarationStatement to Block at 4", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS IfStatement to Block at 5", "INS ExpressionStatement to Block at 0", "INS SimpleType: Index to VariableDeclarationStatement at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: skip to VariableDeclarationFragment at 0", "INS BreakStatement to Block at 1", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS PrefixExpression: - to VariableDeclarationFragment at 1", "INS TextElement:  An array of station ID's to look up the latest airing for. to TagElement: @param at 1", "INS SimpleName: mid to Assignment: = at 1", "INS SimpleName: air to VariableDeclarationFragment at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS PrimitiveType: long to ArrayType: long[] at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS Block to IfStatement at 1", "INS SimpleName: low to InfixExpression: < at 0", "INS SimpleName: getIndex to MethodInvocation at 1", "INS SimpleName: index to VariableDeclarationFragment at 0", "INS WhileStatement to Block at 2", "INS IfStatement to Block at 1", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS SimpleName: chanIndex to InfixExpression: < at 0", "INS QualifiedName: channels.length to InfixExpression: < at 1", "INS ArrayType: Channel[] to VariableDeclarationStatement at 0", "INS SimpleName: stationID to InfixExpression: == at 1", "INS QualifiedName: lookupIDs.length to InfixExpression: < at 1", "INS TextElement: Get the time of the last non-NoShow airing in the database to TagElement at 0", "INS QualifiedName: indy.data to ArrayAccess at 0", "INS ReturnStatement to IfStatement at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: stationID to InfixExpression: == at 1", "INS SimpleName: air to InfixExpression: != at 0", "INS SimpleName: high to InfixExpression: + at 1", "INS SimpleName: high to InfixExpression: < at 1", "INS InfixExpression: < to ForStatement at 1", "INS SimpleName: getTable to MethodInvocation at 0", "INS PrefixExpression: - to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS TextElement: the last airing for each lookupID to TagElement: @return at 2", "INS ExpressionStatement to Block at 1", "INS Block to IfStatement at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS InfixExpression: > to IfStatement at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS PostfixExpression: -- to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 1", "INS Block to ForStatement at 3", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS PrefixExpression: - to VariableDeclarationFragment at 1", "INS SimpleType: Airing to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: stationID to InfixExpression: - at 1", "INS SimpleName: index to ArrayAccess at 1", "INS NumberLiteral: 1 to PrefixExpression: - at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 218", "operations": ["INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 218", "INS ReturnStatement to Block at 0", "INS CastExpression to MethodInvocation at 8", "INS SimpleName: headshotUrls to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 11", "INS Block to MethodDeclaration at 12", "INS SimpleName: mediaMask to SingleVariableDeclaration at 1", "INS PrimitiveType: byte to ArrayType: byte[][] at 0", "INS SimpleName: addPerson to MethodDeclaration at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: mediaMask to MethodInvocation at 10", "INS SingleVariableDeclaration to MethodDeclaration at 10", "INS Dimension to ArrayType: byte[][] at 1", "INS Dimension to ArrayType: byte[][] at 2", "INS Modifier: public to MethodDeclaration at 0", "INS PrefixExpression: - to CastExpression at 1", "INS PrimitiveType: short to CastExpression at 0", "INS ArrayType: byte[][] to SingleVariableDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: SeriesInfo to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 10", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 9", "MOV SingleVariableDeclaration to MethodDeclaration at 14", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV Modifier: public to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SimpleName: addSeriesInfo to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 15", "MOV SingleVariableDeclaration to MethodDeclaration at 11", "MOV SingleVariableDeclaration to MethodDeclaration at 8", "MOV SingleVariableDeclaration to MethodDeclaration at 12", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 7"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV SingleVariableDeclaration to MethodDeclaration at 8", "MOV SimpleType: Person to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 9", "MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 7"]}, {"root": "INS SimpleType: Person to MethodDeclaration at 1", "operations": ["INS SimpleName: Person to SimpleType: Person at 0", "INS SimpleType: Person to MethodDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: name to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: extID to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: dob to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: dod to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleType: String to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: birthPlace to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 8", "operations": ["INS SimpleName: yearList to SingleVariableDeclaration at 1", "INS PrimitiveType: short to ArrayType: short[] at 0", "INS Dimension to ArrayType: short[] at 1", "INS ArrayType: short[] to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 8"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 9", "operations": ["INS SimpleType: String to ArrayType: String[] at 0", "INS Dimension to ArrayType: String[] at 1", "INS SingleVariableDeclaration to MethodDeclaration at 9", "INS ArrayType: String[] to SingleVariableDeclaration at 0", "INS SimpleName: awardList to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 11", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: mediaMask to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 11"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 11", "operations": ["INS PrimitiveType: byte to ArrayType: byte[][] at 0", "INS SingleVariableDeclaration to MethodDeclaration at 11", "INS Dimension to ArrayType: byte[][] at 1", "INS Dimension to ArrayType: byte[][] at 2", "INS ArrayType: byte[][] to SingleVariableDeclaration at 0", "INS SimpleName: headshotUrls to SingleVariableDeclaration at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ArrayType: Person[] to SingleVariableDeclaration at 0"]}, {"root": "MOVE from ArrayCreation", "operations": ["MOV QualifiedName: people.length to ArrayCreation at 1", "MOV ArrayType: Person[] to SingleVariableDeclaration at 0"]}, {"root": "MOVE from ArrayType: long[]", "operations": ["MOV Dimension to ArrayType: long[] at 1"]}, {"root": "UPDATE from 0x56 to 0x57", "operations": ["UPD NumberLiteral: 0x56 from 0x56 to 0x57"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: people to MethodInvocation at 6"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: == to InfixExpression: || at 1", "MOV InfixExpression: == to InfixExpression: || at 0"]}, {"root": "UPDATE from description to addPerson", "operations": ["UPD SimpleName: description from description to addPerson"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: imageURLs to MethodInvocation at 9", "MOV SimpleName: description to MethodInvocation at 0", "MOV SimpleName: finaleDate to MethodInvocation at 3", "MOV SimpleName: peeps to MethodInvocation at 6", "MOV SimpleName: addSeriesInfo to MethodInvocation at 0", "MOV SimpleName: airHrMin to MethodInvocation at 5", "MOV SimpleName: history to MethodInvocation at 1", "MOV SimpleName: airDOW to MethodInvocation at 4", "MOV SimpleName: legacySeriesID to MethodInvocation at 1", "MOV SimpleName: premiereDate to MethodInvocation at 2", "MOV SimpleName: characters to MethodInvocation at 7"]}, {"root": "UPDATE from history to name", "operations": ["UPD SimpleName: history from history to name"]}, {"root": "UPDATE from premiereDate to extID", "operations": ["UPD SimpleName: premiereDate from premiereDate to extID"]}, {"root": "UPDATE from finaleDate to dob", "operations": ["UPD SimpleName: finaleDate from finaleDate to dob"]}, {"root": "UPDATE from airDOW to dod", "operations": ["UPD SimpleName: airDOW from airDOW to dod"]}, {"root": "UPDATE from airHrMin to birthPlace", "operations": ["UPD SimpleName: airHrMin from airHrMin to birthPlace"]}, {"root": "UPDATE from peeps to yearList", "operations": ["UPD SimpleName: peeps from peeps to yearList"]}, {"root": "UPDATE from characters to awardList", "operations": ["UPD SimpleName: characters from characters to awardList"]}, {"root": "UPDATE from imageURLs to headshotUrls", "operations": ["UPD SimpleName: imageURLs from imageURLs to headshotUrls"]}, {"root": "UPDATE from DBObject.MEDIA_MASK_TV to Pooler.EMPTY_2D_BYTE_ARRAY", "operations": ["UPD QualifiedName: DBObject.MEDIA_MASK_TV from DBObject.MEDIA_MASK_TV to Pooler.EMPTY_2D_BYTE_ARRAY"]}, {"root": "INS SimpleName: mediaMask to MethodInvocation at 10", "operations": ["INS SimpleName: mediaMask to MethodInvocation at 10"]}, {"root": "INS ExpressionStatement to Block at 11", "operations": ["INS ConditionalExpression to Assignment: = at 1", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS QualifiedName: person.headshotUrls to Assignment: = at 0", "INS NumberLiteral: 2 to InfixExpression: != at 1", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: || to ParenthesizedExpression at 0", "INS InfixExpression: != to InfixExpression: || at 1", "INS QualifiedName: headshotUrls.length to InfixExpression: != at 0", "INS QualifiedName: Pooler.EMPTY_2D_BYTE_ARRAY to ConditionalExpression at 1", "INS ExpressionStatement to Block at 11", "INS SimpleName: headshotUrls to InfixExpression: == at 0", "INS SimpleName: headshotUrls to ConditionalExpression at 2", "INS InfixExpression: == to InfixExpression: || at 0", "INS NullLiteral to InfixExpression: == at 1"]}, {"root": "UPDATE from people to lookupIDs", "operations": ["UPD SimpleName: people from people to lookupIDs"]}, {"root": "UPDATE from people.length to lookupIDs.length", "operations": ["UPD QualifiedName: people.length from people.length to lookupIDs.length", "UPD QualifiedName: peeps.length from peeps.length to lookupIDs.length", "UPD QualifiedName: people.length from people.length to lookupIDs.length"]}, {"root": "UPDATE from addSeriesInfo to t", "operations": ["UPD SimpleName: addSeriesInfo from addSeriesInfo to t"]}, {"root": "UPDATE from legacySeriesID to releaseReadLock", "operations": ["UPD SimpleName: legacySeriesID from legacySeriesID to releaseReadLock"]}, {"root": "MOVE from ForStatement", "operations": ["MOV PostfixExpression: ++ to ForStatement at 2", "MOV VariableDeclarationExpression to ForStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ForStatement to Block at 0"]}, {"root": "INS VariableDeclarationExpression to ForStatement at 0", "operations": ["INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS SimpleName: i to VariableDeclarationFragment at 0"]}, {"root": "INS PostfixExpression: ++ to ForStatement at 2", "operations": ["INS PostfixExpression: ++ to ForStatement at 2", "INS SimpleName: i to PostfixExpression: ++ at 0"]}, {"root": "INS Block to ForStatement at 3", "operations": ["INS SimpleName: stationID to InfixExpression: == at 0", "INS Block to ForStatement at 3", "INS IfStatement to Block at 0", "INS InfixExpression: == to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS ArrayAccess to InfixExpression: == at 1", "INS SimpleName: i to ArrayAccess at 1", "INS SimpleName: lookupIDs to ArrayAccess at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV Assignment: = to ExpressionStatement at 0"]}, {"root": "UPDATE from peeps to returnValues", "operations": ["UPD SimpleName: peeps from peeps to returnValues", "UPD SimpleName: people from people to returnValues"]}, {"root": "UPDATE from getPersonForName to Math", "operations": ["UPD SimpleName: getPersonForName from getPersonForName to Math"]}, {"root": "INS SimpleName: max to MethodInvocation at 1", "operations": ["INS SimpleName: max to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS SimpleName: air to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getEndTime to MethodInvocation at 1"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: people", "DEL InfixExpression: ||", "DEL SimpleType: String", "DEL SimpleName: network", "DEL StringLiteral: \"\"", "DEL Block", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL QualifiedName: Pooler.EMPTY_LONG_ARRAY", "DEL ArrayCreation", "DEL ReturnStatement", "DEL SimpleName: showcardID", "DEL SimpleName: peeps", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL ParenthesizedExpression", "DEL ConditionalExpression", "DEL MethodDeclaration", "DEL ArrayType: String[]", "DEL SimpleName: title", "DEL QualifiedName: Pooler.EMPTY_INT_ARRAY", "DEL QualifiedName: Pooler.EMPTY_PERSON_ARRAY"]}, {"root": "DEL ArrayType: String[]", "operations": ["DEL Dimension", "DEL SimpleName: String", "DEL SimpleType: String", "DEL ArrayType: String[]"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getPeopleArray", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}]}}, {"Wizard_diff": {"operations": ["Insert MethodDeclaration(12703) into TypeDeclaration: class(42824) at 134", "Insert MethodDeclaration(22701) into TypeDeclaration: class(42824) at 210", "Insert MethodDeclaration(23590) into TypeDeclaration: class(42824) at 217", "Move Modifier: public(12623) into MethodDeclaration(12703) at 0", "Move SimpleType: SeriesInfo(12625) into MethodDeclaration(12703) at 1", "Move SimpleName: addSeriesInfo(12626) into MethodDeclaration(12703) at 2", "Move SingleVariableDeclaration(12629) into MethodDeclaration(12703) at 3", "Move SingleVariableDeclaration(12632) into MethodDeclaration(12703) at 4", "Move SingleVariableDeclaration(12636) into MethodDeclaration(12703) at 5", "Move SingleVariableDeclaration(12640) into MethodDeclaration(12703) at 6", "Move SingleVariableDeclaration(12644) into MethodDeclaration(12703) at 7", "Move SingleVariableDeclaration(12648) into MethodDeclaration(12703) at 8", "Move SingleVariableDeclaration(12652) into MethodDeclaration(12703) at 9", "Move SingleVariableDeclaration(12656) into MethodDeclaration(12703) at 10", "Move SingleVariableDeclaration(12660) into MethodDeclaration(12703) at 11", "Move SingleVariableDeclaration(12664) into MethodDeclaration(12703) at 12", "Insert SingleVariableDeclaration(12670) into MethodDeclaration(12703) at 13", "Move SingleVariableDeclaration(12676) into MethodDeclaration(12703) at 14", "Move SingleVariableDeclaration(12682) into MethodDeclaration(12703) at 15", "Insert Block(12702) into MethodDeclaration(12703) at 16", "Insert Javadoc(22371) into MethodDeclaration(22701) at 0", "Insert Modifier: public(22372) into MethodDeclaration(22701) at 1", "Insert ArrayType: long[](22375) into MethodDeclaration(22701) at 2", "Insert SimpleName: getLatestTvAiringTime(22376) into MethodDeclaration(22701) at 3", "Insert SingleVariableDeclaration(22380) into MethodDeclaration(22701) at 4", "Insert Block(22700) into MethodDeclaration(22701) at 5", "Insert Modifier: public(23532) into MethodDeclaration(23590) at 0", "Move SimpleType: Person(23240) into MethodDeclaration(23590) at 1", "Insert SimpleName: addPerson(23535) into MethodDeclaration(23590) at 2", "Move SingleVariableDeclaration(23245) into MethodDeclaration(23590) at 3", "Move SingleVariableDeclaration(23248) into MethodDeclaration(23590) at 4", "Move SingleVariableDeclaration(23251) into MethodDeclaration(23590) at 5", "Move SingleVariableDeclaration(23254) into MethodDeclaration(23590) at 6", "Move SingleVariableDeclaration(23258) into MethodDeclaration(23590) at 7", "Move SingleVariableDeclaration(23263) into MethodDeclaration(23590) at 8", "Move SingleVariableDeclaration(23269) into MethodDeclaration(23590) at 9", "Insert SingleVariableDeclaration(23569) into MethodDeclaration(23590) at 10", "Insert SingleVariableDeclaration(23572) into MethodDeclaration(23590) at 11", "Insert Block(23589) into MethodDeclaration(23590) at 12", "Insert SimpleType: Person(23593) into MethodDeclaration(23643) at 1", "Insert SingleVariableDeclaration(23598) into MethodDeclaration(23643) at 3", "Insert SingleVariableDeclaration(23601) into MethodDeclaration(23643) at 4", "Insert SingleVariableDeclaration(23604) into MethodDeclaration(23643) at 5", "Insert SingleVariableDeclaration(23607) into MethodDeclaration(23643) at 6", "Insert SingleVariableDeclaration(23611) into MethodDeclaration(23643) at 7", "Insert SingleVariableDeclaration(23616) into MethodDeclaration(23643) at 8", "Insert SingleVariableDeclaration(23622) into MethodDeclaration(23643) at 9", "Insert SingleVariableDeclaration(23628) into MethodDeclaration(23643) at 11", "Insert SingleVariableDeclaration(23684) into MethodDeclaration(23899) at 11", "Move ArrayType: Person[](12686) into SingleVariableDeclaration(12670) at 0", "Insert SimpleName: people(12669) into SingleVariableDeclaration(12670) at 1", "Insert ReturnStatement(12701) into Block(12702) at 0", "Move ArrayType: Person[](12700) into SingleVariableDeclaration(19108) at 0", "Insert TagElement(22363) into Javadoc(22371) at 0", "Insert TagElement: @param(22366) into Javadoc(22371) at 1", "Insert TagElement: @return(22370) into Javadoc(22371) at 2", "Insert PrimitiveType: long(22373) into ArrayType: long[](22375) at 0", "Move Dimension(12667) into ArrayType: long[](22375) at 1", "Insert PrimitiveType: int(22377) into SingleVariableDeclaration(22380) at 0", "Insert SimpleName: lookupIDs(22378) into SingleVariableDeclaration(22380) at 1", "Insert Dimension(22379) into SingleVariableDeclaration(22380) at 2", "Insert IfStatement(22384) into Block(22700) at 0", "Insert IfStatement(22394) into Block(22700) at 1", "Insert VariableDeclarationStatement(22404) into Block(22700) at 2", "Insert ExpressionStatement(22411) into Block(22700) at 3", "Insert VariableDeclarationStatement(22420) into Block(22700) at 4", "Insert VariableDeclarationStatement(22428) into Block(22700) at 5", "Insert VariableDeclarationStatement(22437) into Block(22700) at 6", "Insert VariableDeclarationStatement(22442) into Block(22700) at 7", "Insert TryStatement(22697) into Block(22700) at 8", "Insert ReturnStatement(22699) into Block(22700) at 9", "Insert ArrayType: byte[][](23567) into SingleVariableDeclaration(23569) at 0", "Insert SimpleName: headshotUrls(23568) into SingleVariableDeclaration(23569) at 1", "Insert PrimitiveType: int(23570) into SingleVariableDeclaration(23572) at 0", "Insert SimpleName: mediaMask(23571) into SingleVariableDeclaration(23572) at 1", "Insert ReturnStatement(23588) into Block(23589) at 0", "Insert SimpleName: Person(23592) into SimpleType: Person(23593) at 0", "Insert SimpleType: String(23596) into SingleVariableDeclaration(23598) at 0", "Insert SimpleName: name(23597) into SingleVariableDeclaration(23598) at 1", "Insert PrimitiveType: int(23599) into SingleVariableDeclaration(23601) at 0", "Insert SimpleName: extID(23600) into SingleVariableDeclaration(23601) at 1", "Insert PrimitiveType: int(23602) into SingleVariableDeclaration(23604) at 0", "Insert SimpleName: dob(23603) into SingleVariableDeclaration(23604) at 1", "Insert PrimitiveType: int(23605) into SingleVariableDeclaration(23607) at 0", "Insert SimpleName: dod(23606) into SingleVariableDeclaration(23607) at 1", "Insert SimpleType: String(23609) into SingleVariableDeclaration(23611) at 0", "Insert SimpleName: birthPlace(23610) into SingleVariableDeclaration(23611) at 1", "Insert ArrayType: short[](23614) into SingleVariableDeclaration(23616) at 0", "Insert SimpleName: yearList(23615) into SingleVariableDeclaration(23616) at 1", "Insert ArrayType: String[](23620) into SingleVariableDeclaration(23622) at 0", "Insert SimpleName: awardList(23621) into SingleVariableDeclaration(23622) at 1", "Insert PrimitiveType: int(23626) into SingleVariableDeclaration(23628) at 0", "Insert SimpleName: mediaMask(23627) into SingleVariableDeclaration(23628) at 1", "Insert ArrayType: byte[][](23682) into SingleVariableDeclaration(23684) at 0", "Insert SimpleName: headshotUrls(23683) into SingleVariableDeclaration(23684) at 1", "Update NumberLiteral: 0x56(244) to 0x57", "Insert MethodInvocation(12700) into ReturnStatement(12701) at 0", "Insert TextElement: Get the time of the last non-NoShow airing in the database(22362) into TagElement(22363) at 0", "Insert SimpleName: lookupIDs(22364) into TagElement: @param(22366) at 0", "Insert TextElement:  An array of station ID's to look up the latest airing for.(22365) into TagElement: @param(22366) at 1", "Insert TextElement:  <code>null</code> when database is not yet ready, an empty array if lookupIDs is(22367) into TagElement: @return(22370) at 0", "Insert TextElement: <code>null</code> or empty or the millisecond time (or -1 if there are no airings) of(22368) into TagElement: @return(22370) at 1", "Insert TextElement: the last airing for each lookupID(22369) into TagElement: @return(22370) at 2", "Insert SimpleName: loading(22381) into IfStatement(22384) at 0", "Insert ReturnStatement(22383) into IfStatement(22384) at 1", "Insert InfixExpression: ||(22391) into IfStatement(22394) at 0", "Insert ReturnStatement(22393) into IfStatement(22394) at 1", "Insert PrimitiveType: long(22395) into VariableDeclarationStatement(22404) at 0", "Insert VariableDeclarationFragment(22403) into VariableDeclarationStatement(22404) at 1", "Insert MethodInvocation(22410) into ExpressionStatement(22411) at 0", "Insert ArrayType: Channel[](22415) into VariableDeclarationStatement(22420) at 0", "Insert VariableDeclarationFragment(22419) into VariableDeclarationStatement(22420) at 1", "Insert SimpleType: Table(22422) into VariableDeclarationStatement(22428) at 0", "Insert VariableDeclarationFragment(22427) into VariableDeclarationStatement(22428) at 1", "Insert SimpleType: Index(22430) into VariableDeclarationStatement(22437) at 0", "Insert VariableDeclarationFragment(22436) into VariableDeclarationStatement(22437) at 1", "Insert PrimitiveType: int(22438) into VariableDeclarationStatement(22442) at 0", "Insert VariableDeclarationFragment(22441) into VariableDeclarationStatement(22442) at 1", "Insert Block(22691) into TryStatement(22697) at 0", "Insert Block(22696) into TryStatement(22697) at 1", "Insert SimpleName: returnValues(22698) into ReturnStatement(22699) at 0", "Insert PrimitiveType: byte(23564) into ArrayType: byte[][](23567) at 0", "Insert Dimension(23565) into ArrayType: byte[][](23567) at 1", "Insert Dimension(23566) into ArrayType: byte[][](23567) at 2", "Insert MethodInvocation(23587) into ReturnStatement(23588) at 0", "Insert SimpleName: String(23595) into SimpleType: String(23596) at 0", "Insert SimpleName: String(23608) into SimpleType: String(23609) at 0", "Insert PrimitiveType: short(23612) into ArrayType: short[](23614) at 0", "Insert Dimension(23613) into ArrayType: short[](23614) at 1", "Insert SimpleType: String(23618) into ArrayType: String[](23620) at 0", "Insert Dimension(23619) into ArrayType: String[](23620) at 1", "Insert PrimitiveType: byte(23679) into ArrayType: byte[][](23682) at 0", "Insert Dimension(23680) into ArrayType: byte[][](23682) at 1", "Insert Dimension(23681) into ArrayType: byte[][](23682) at 2", "Insert SimpleName: addSeriesInfo(12683) into MethodInvocation(12700) at 0", "Insert SimpleName: legacySeriesID(12684) into MethodInvocation(12700) at 1", "Insert SimpleName: showcardID(12685) into MethodInvocation(12700) at 2", "Insert SimpleName: title(12686) into MethodInvocation(12700) at 3", "Insert SimpleName: network(12687) into MethodInvocation(12700) at 4", "Insert SimpleName: description(12688) into MethodInvocation(12700) at 5", "Insert SimpleName: history(12689) into MethodInvocation(12700) at 6", "Insert SimpleName: premiereDate(12690) into MethodInvocation(12700) at 7", "Insert SimpleName: finaleDate(12691) into MethodInvocation(12700) at 8", "Insert SimpleName: airDOW(12692) into MethodInvocation(12700) at 9", "Insert SimpleName: airHrMin(12693) into MethodInvocation(12700) at 10", "Insert StringLiteral: \"\"(12694) into MethodInvocation(12700) at 11", "Insert SimpleName: people(12695) into MethodInvocation(12700) at 12", "Insert SimpleName: characters(12696) into MethodInvocation(12700) at 13", "Insert QualifiedName: Pooler.EMPTY_INT_ARRAY(12697) into MethodInvocation(12700) at 14", "Insert QualifiedName: Pooler.EMPTY_LONG_ARRAY(12698) into MethodInvocation(12700) at 15", "Insert SimpleName: imageURLs(12699) into MethodInvocation(12700) at 16", "Move SimpleName: people(19220) into MethodInvocation(19197) at 6", "Insert NullLiteral(22382) into ReturnStatement(22383) at 0", "Move InfixExpression: ==(12690) into InfixExpression: ||(22391) at 0", "Move InfixExpression: ==(12693) into InfixExpression: ||(22391) at 1", "Insert QualifiedName: Pooler.EMPTY_LONG_ARRAY(22392) into ReturnStatement(22393) at 0", "Insert SimpleName: returnValues(22396) into VariableDeclarationFragment(22403) at 0", "Insert Dimension(22397) into VariableDeclarationFragment(22403) at 1", "Insert ArrayCreation(22402) into VariableDeclarationFragment(22403) at 2", "Insert SimpleName: Arrays(22405) into MethodInvocation(22410) at 0", "Insert SimpleName: fill(22406) into MethodInvocation(22410) at 1", "Insert SimpleName: returnValues(22407) into MethodInvocation(22410) at 2", "Insert PrefixExpression: -(22409) into MethodInvocation(22410) at 3", "Insert SimpleType: Channel(22413) into ArrayType: Channel[](22415) at 0", "Insert Dimension(22414) into ArrayType: Channel[](22415) at 1", "Insert SimpleName: channels(22416) into VariableDeclarationFragment(22419) at 0", "Insert MethodInvocation(22418) into VariableDeclarationFragment(22419) at 1", "Insert SimpleName: Table(22421) into SimpleType: Table(22422) at 0", "Insert SimpleName: t(22423) into VariableDeclarationFragment(22427) at 0", "Insert MethodInvocation(22426) into VariableDeclarationFragment(22427) at 1", "Insert SimpleName: Index(22429) into SimpleType: Index(22430) at 0", "Insert SimpleName: indy(22431) into VariableDeclarationFragment(22436) at 0", "Insert MethodInvocation(22435) into VariableDeclarationFragment(22436) at 1", "Insert SimpleName: lastIndex(22439) into VariableDeclarationFragment(22441) at 0", "Insert NumberLiteral: 0(22440) into VariableDeclarationFragment(22441) at 1", "Insert ExpressionStatement(22446) into Block(22691) at 0", "Insert ForStatement(22690) into Block(22691) at 1", "Insert ExpressionStatement(22695) into Block(22696) at 0", "Update SimpleName: description(12732) to addPerson", "Move SimpleName: description(12732) into MethodInvocation(23587) at 0", "Update SimpleName: history(12733) to name", "Move SimpleName: history(12733) into MethodInvocation(23587) at 1", "Update SimpleName: premiereDate(12734) to extID", "Move SimpleName: premiereDate(12734) into MethodInvocation(23587) at 2", "Update SimpleName: finaleDate(12735) to dob", "Move SimpleName: finaleDate(12735) into MethodInvocation(23587) at 3", "Update SimpleName: airDOW(12736) to dod", "Move SimpleName: airDOW(12736) into MethodInvocation(23587) at 4", "Update SimpleName: airHrMin(12737) to birthPlace", "Move SimpleName: airHrMin(12737) into MethodInvocation(23587) at 5", "Update SimpleName: peeps(12739) to yearList", "Move SimpleName: peeps(12739) into MethodInvocation(23587) at 6", "Update SimpleName: characters(12740) to awardList", "Move SimpleName: characters(12740) into MethodInvocation(23587) at 7", "Insert CastExpression(23584) into MethodInvocation(23587) at 8", "Update SimpleName: imageURLs(12743) to headshotUrls", "Move SimpleName: imageURLs(12743) into MethodInvocation(23587) at 9", "Insert SimpleName: mediaMask(23586) into MethodInvocation(23587) at 10", "Insert SimpleName: String(23617) into SimpleType: String(23618) at 0", "Update QualifiedName: DBObject.MEDIA_MASK_TV(23282) to Pooler.EMPTY_2D_BYTE_ARRAY", "Insert SimpleName: mediaMask(23639) into MethodInvocation(23640) at 10", "Insert ExpressionStatement(23849) into Block(23889) at 11", "Update SimpleName: people(12688) to lookupIDs", "Update QualifiedName: people.length(12691) to lookupIDs.length", "Insert ArrayType: long[](22400) into ArrayCreation(22402) at 0", "Update QualifiedName: people.length(12701) to lookupIDs.length", "Move QualifiedName: people.length(12701) into ArrayCreation(22402) at 1", "Insert NumberLiteral: 1(22408) into PrefixExpression: -(22409) at 0", "Insert SimpleName: Channel(22412) into SimpleType: Channel(22413) at 0", "Insert SimpleName: getChannels(22417) into MethodInvocation(22418) at 0", "Insert SimpleName: getTable(22424) into MethodInvocation(22426) at 0", "Insert SimpleName: AIRING_CODE(22425) into MethodInvocation(22426) at 1", "Insert SimpleName: t(22432) into MethodInvocation(22435) at 0", "Insert SimpleName: getIndex(22433) into MethodInvocation(22435) at 1", "Insert SimpleName: AIRINGS_BY_CT_CODE(22434) into MethodInvocation(22435) at 2", "Insert MethodInvocation(22445) into ExpressionStatement(22446) at 0", "Insert VariableDeclarationExpression(22451) into ForStatement(22690) at 0", "Insert InfixExpression: <(22454) into ForStatement(22690) at 1", "Insert PostfixExpression: ++(22456) into ForStatement(22690) at 2", "Insert Block(22689) into ForStatement(22690) at 3", "Insert MethodInvocation(22694) into ExpressionStatement(22695) at 0", "Insert PrimitiveType: short(23581) into CastExpression(23584) at 0", "Insert PrefixExpression: -(23583) into CastExpression(23584) at 1", "Insert Assignment: =(23848) into ExpressionStatement(23849) at 0", "Insert PrimitiveType: long(22398) into ArrayType: long[](22400) at 0", "Insert Dimension(22399) into ArrayType: long[](22400) at 1", "Insert SimpleName: t(22443) into MethodInvocation(22445) at 0", "Insert SimpleName: acquireReadLock(22444) into MethodInvocation(22445) at 1", "Insert PrimitiveType: int(22447) into VariableDeclarationExpression(22451) at 0", "Insert VariableDeclarationFragment(22450) into VariableDeclarationExpression(22451) at 1", "Insert SimpleName: chanIndex(22452) into InfixExpression: <(22454) at 0", "Insert QualifiedName: channels.length(22453) into InfixExpression: <(22454) at 1", "Insert SimpleName: chanIndex(22455) into PostfixExpression: ++(22456) at 0", "Insert VariableDeclarationStatement(22465) into Block(22689) at 0", "Insert IfStatement(22688) into Block(22689) at 1", "Update SimpleName: addSeriesInfo(12727) to t", "Move SimpleName: addSeriesInfo(12727) into MethodInvocation(22694) at 0", "Update SimpleName: legacySeriesID(12728) to releaseReadLock", "Move SimpleName: legacySeriesID(12728) into MethodInvocation(22694) at 1", "Insert NumberLiteral: 1(23582) into PrefixExpression: -(23583) at 0", "Insert QualifiedName: person.headshotUrls(23836) into Assignment: =(23848) at 0", "Insert ConditionalExpression(23847) into Assignment: =(23848) at 1", "Insert SimpleName: chanIndex(22448) into VariableDeclarationFragment(22450) at 0", "Insert NumberLiteral: 0(22449) into VariableDeclarationFragment(22450) at 1", "Insert PrimitiveType: int(22457) into VariableDeclarationStatement(22465) at 0", "Insert VariableDeclarationFragment(22464) into VariableDeclarationStatement(22465) at 1", "Insert InfixExpression: >(22468) into IfStatement(22688) at 0", "Insert Block(22687) into IfStatement(22688) at 1", "Insert ParenthesizedExpression(23844) into ConditionalExpression(23847) at 0", "Insert QualifiedName: Pooler.EMPTY_2D_BYTE_ARRAY(23845) into ConditionalExpression(23847) at 1", "Insert SimpleName: headshotUrls(23846) into ConditionalExpression(23847) at 2", "Insert SimpleName: stationID(22458) into VariableDeclarationFragment(22464) at 0", "Insert MethodInvocation(22463) into VariableDeclarationFragment(22464) at 1", "Insert SimpleName: stationID(22466) into InfixExpression: >(22468) at 0", "Insert NumberLiteral: 0(22467) into InfixExpression: >(22468) at 1", "Insert VariableDeclarationStatement(22473) into Block(22687) at 0", "Insert ForStatement(22497) into Block(22687) at 1", "Insert IfStatement(22500) into Block(22687) at 2", "Insert VariableDeclarationStatement(22506) into Block(22687) at 3", "Insert VariableDeclarationStatement(22511) into Block(22687) at 4", "Insert VariableDeclarationStatement(22518) into Block(22687) at 5", "Insert VariableDeclarationStatement(22524) into Block(22687) at 6", "Insert VariableDeclarationStatement(22530) into Block(22687) at 7", "Insert WhileStatement(22593) into Block(22687) at 8", "Insert IfStatement(22686) into Block(22687) at 9", "Insert InfixExpression: ||(23843) into ParenthesizedExpression(23844) at 0", "Insert ArrayAccess(22461) into MethodInvocation(22463) at 0", "Insert SimpleName: getStationID(22462) into MethodInvocation(22463) at 1", "Insert PrimitiveType: boolean(22469) into VariableDeclarationStatement(22473) at 0", "Insert VariableDeclarationFragment(22472) into VariableDeclarationStatement(22473) at 1", "Move VariableDeclarationExpression(12710) into ForStatement(22497) at 0", "Insert InfixExpression: <(22481) into ForStatement(22497) at 1", "Move PostfixExpression: ++(12715) into ForStatement(22497) at 2", "Insert Block(22496) into ForStatement(22497) at 3", "Insert SimpleName: skip(22498) into IfStatement(22500) at 0", "Insert ContinueStatement(22499) into IfStatement(22500) at 1", "Insert PrimitiveType: int(22501) into VariableDeclarationStatement(22506) at 0", "Insert VariableDeclarationFragment(22505) into VariableDeclarationStatement(22506) at 1", "Insert PrimitiveType: int(22507) into VariableDeclarationStatement(22511) at 0", "Insert VariableDeclarationFragment(22510) into VariableDeclarationStatement(22511) at 1", "Insert PrimitiveType: int(22512) into VariableDeclarationStatement(22518) at 0", "Insert VariableDeclarationFragment(22517) into VariableDeclarationStatement(22518) at 1", "Insert PrimitiveType: int(22519) into VariableDeclarationStatement(22524) at 0", "Insert VariableDeclarationFragment(22523) into VariableDeclarationStatement(22524) at 1", "Insert SimpleType: Airing(22526) into VariableDeclarationStatement(22530) at 0", "Insert VariableDeclarationFragment(22529) into VariableDeclarationStatement(22530) at 1", "Insert InfixExpression: <(22533) into WhileStatement(22593) at 0", "Insert Block(22592) into WhileStatement(22593) at 1", "Insert InfixExpression: &&(22600) into IfStatement(22686) at 0", "Insert Block(22685) into IfStatement(22686) at 1", "Insert InfixExpression: ==(23839) into InfixExpression: ||(23843) at 0", "Insert InfixExpression: !=(23842) into InfixExpression: ||(23843) at 1", "Insert SimpleName: channels(22459) into ArrayAccess(22461) at 0", "Insert SimpleName: chanIndex(22460) into ArrayAccess(22461) at 1", "Insert SimpleName: skip(22470) into VariableDeclarationFragment(22472) at 0", "Insert BooleanLiteral: true(22471) into VariableDeclarationFragment(22472) at 1", "Insert SimpleName: i(22479) into InfixExpression: <(22481) at 0", "Insert QualifiedName: lookupIDs.length(22480) into InfixExpression: <(22481) at 1", "Insert IfStatement(22495) into Block(22496) at 0", "Insert SimpleName: index(22502) into VariableDeclarationFragment(22505) at 0", "Insert PrefixExpression: -(22504) into VariableDeclarationFragment(22505) at 1", "Insert SimpleName: low(22508) into VariableDeclarationFragment(22510) at 0", "Insert SimpleName: lastIndex(22509) into VariableDeclarationFragment(22510) at 1", "Insert SimpleName: high(22513) into VariableDeclarationFragment(22517) at 0", "Insert InfixExpression: -(22516) into VariableDeclarationFragment(22517) at 1", "Insert SimpleName: mid(22520) into VariableDeclarationFragment(22523) at 0", "Insert PrefixExpression: -(22522) into VariableDeclarationFragment(22523) at 1", "Insert SimpleName: Airing(22525) into SimpleType: Airing(22526) at 0", "Insert SimpleName: air(22527) into VariableDeclarationFragment(22529) at 0", "Insert NullLiteral(22528) into VariableDeclarationFragment(22529) at 1", "Insert SimpleName: low(22531) into InfixExpression: <(22533) at 0", "Insert SimpleName: high(22532) into InfixExpression: <(22533) at 1", "Insert ExpressionStatement(22542) into Block(22592) at 0", "Insert ExpressionStatement(22551) into Block(22592) at 1", "Insert IfStatement(22556) into Block(22592) at 2", "Insert VariableDeclarationStatement(22563) into Block(22592) at 3", "Insert IfStatement(22573) into Block(22592) at 4", "Insert IfStatement(22591) into Block(22592) at 5", "Insert InfixExpression: !=(22596) into InfixExpression: &&(22600) at 0", "Insert InfixExpression: ==(22599) into InfixExpression: &&(22600) at 1", "Insert ExpressionStatement(22604) into Block(22685) at 0", "Insert ExpressionStatement(22608) into Block(22685) at 1", "Insert WhileStatement(22637) into Block(22685) at 2", "Insert IfStatement(22684) into Block(22685) at 3", "Insert SimpleName: headshotUrls(23837) into InfixExpression: ==(23839) at 0", "Insert NullLiteral(23838) into InfixExpression: ==(23839) at 1", "Insert QualifiedName: headshotUrls.length(23840) into InfixExpression: !=(23842) at 0", "Insert NumberLiteral: 2(23841) into InfixExpression: !=(23842) at 1", "Insert InfixExpression: ==(22488) into IfStatement(22495) at 0", "Insert Block(22494) into IfStatement(22495) at 1", "Insert NumberLiteral: 1(22503) into PrefixExpression: -(22504) at 0", "Insert QualifiedName: t.num(22514) into InfixExpression: -(22516) at 0", "Insert NumberLiteral: 1(22515) into InfixExpression: -(22516) at 1", "Insert NumberLiteral: 1(22521) into PrefixExpression: -(22522) at 0", "Insert Assignment: =(22541) into ExpressionStatement(22542) at 0", "Insert Assignment: =(22550) into ExpressionStatement(22551) at 0", "Insert InfixExpression: ==(22554) into IfStatement(22556) at 0", "Insert BreakStatement(22555) into IfStatement(22556) at 1", "Insert PrimitiveType: long(22557) into VariableDeclarationStatement(22563) at 0", "Insert VariableDeclarationFragment(22562) into VariableDeclarationStatement(22563) at 1", "Insert InfixExpression: ==(22566) into IfStatement(22573) at 0", "Insert Block(22572) into IfStatement(22573) at 1", "Insert InfixExpression: <(22576) into IfStatement(22591) at 0", "Insert ExpressionStatement(22580) into IfStatement(22591) at 1", "Insert IfStatement(22590) into IfStatement(22591) at 2", "Insert SimpleName: air(22594) into InfixExpression: !=(22596) at 0", "Insert NullLiteral(22595) into InfixExpression: !=(22596) at 1", "Insert QualifiedName: air.stationID(22597) into InfixExpression: ==(22599) at 0", "Insert SimpleName: stationID(22598) into InfixExpression: ==(22599) at 1", "Insert Assignment: =(22603) into ExpressionStatement(22604) at 0", "Insert Assignment: =(22607) into ExpressionStatement(22608) at 0", "Insert InfixExpression: &&(22623) into WhileStatement(22637) at 0", "Insert Block(22636) into WhileStatement(22637) at 1", "Insert InfixExpression: &&(22649) into IfStatement(22684) at 0", "Insert Block(22683) into IfStatement(22684) at 1", "Insert SimpleName: stationID(22484) into InfixExpression: ==(22488) at 0", "Insert ArrayAccess(22487) into InfixExpression: ==(22488) at 1", "Insert ExpressionStatement(22492) into Block(22494) at 0", "Insert BreakStatement(22493) into Block(22494) at 1", "Insert SimpleName: mid(22534) into Assignment: =(22541) at 0", "Insert InfixExpression: >>(22540) into Assignment: =(22541) at 1", "Insert SimpleName: air(22543) into Assignment: =(22550) at 0", "Insert CastExpression(22549) into Assignment: =(22550) at 1", "Insert SimpleName: mid(22552) into InfixExpression: ==(22554) at 0", "Insert SimpleName: low(22553) into InfixExpression: ==(22554) at 1", "Insert SimpleName: cmp(22558) into VariableDeclarationFragment(22562) at 0", "Insert InfixExpression: -(22561) into VariableDeclarationFragment(22562) at 1", "Insert SimpleName: cmp(22564) into InfixExpression: ==(22566) at 0", "Insert NumberLiteral: 0(22565) into InfixExpression: ==(22566) at 1", "Insert ExpressionStatement(22571) into Block(22572) at 0", "Insert SimpleName: cmp(22574) into InfixExpression: <(22576) at 0", "Insert NumberLiteral: 0(22575) into InfixExpression: <(22576) at 1", "Insert Assignment: =(22579) into ExpressionStatement(22580) at 0", "Insert InfixExpression: >(22583) into IfStatement(22590) at 0", "Insert ExpressionStatement(22587) into IfStatement(22590) at 1", "Insert Block(22589) into IfStatement(22590) at 2", "Insert SimpleName: index(22601) into Assignment: =(22603) at 0", "Insert SimpleName: mid(22602) into Assignment: =(22603) at 1", "Insert SimpleName: lastIndex(22605) into Assignment: =(22607) at 0", "Insert SimpleName: index(22606) into Assignment: =(22607) at 1", "Insert InfixExpression: &&(22619) into InfixExpression: &&(22623) at 0", "Insert InfixExpression: ==(22622) into InfixExpression: &&(22623) at 1", "Insert ExpressionStatement(22626) into Block(22636) at 0", "Insert ExpressionStatement(22635) into Block(22636) at 1", "Insert InfixExpression: &&(22644) into InfixExpression: &&(22649) at 0", "Insert PrefixExpression: !(22648) into InfixExpression: &&(22649) at 1", "Move ForStatement(12726) into Block(22683) at 0", "Insert SimpleName: lookupIDs(22485) into ArrayAccess(22487) at 0", "Insert SimpleName: i(22486) into ArrayAccess(22487) at 1", "Insert Assignment: =(22491) into ExpressionStatement(22492) at 0", "Insert ParenthesizedExpression(22538) into InfixExpression: >>(22540) at 0", "Insert NumberLiteral: 1(22539) into InfixExpression: >>(22540) at 1", "Insert SimpleType: Airing(22545) into CastExpression(22549) at 0", "Insert ArrayAccess(22548) into CastExpression(22549) at 1", "Insert QualifiedName: air.stationID(22559) into InfixExpression: -(22561) at 0", "Insert SimpleName: stationID(22560) into InfixExpression: -(22561) at 1", "Insert Assignment: =(22570) into ExpressionStatement(22571) at 0", "Insert SimpleName: low(22577) into Assignment: =(22579) at 0", "Insert SimpleName: mid(22578) into Assignment: =(22579) at 1", "Insert SimpleName: cmp(22581) into InfixExpression: >(22583) at 0", "Insert NumberLiteral: 0(22582) into InfixExpression: >(22583) at 1", "Insert Assignment: =(22586) into ExpressionStatement(22587) at 0", "Insert BreakStatement(22588) into Block(22589) at 0", "Insert InfixExpression: &&(22615) into InfixExpression: &&(22619) at 0", "Insert MethodInvocation(22618) into InfixExpression: &&(22619) at 1", "Insert QualifiedName: air.stationID(22620) into InfixExpression: ==(22622) at 0", "Insert SimpleName: stationID(22621) into InfixExpression: ==(22622) at 1", "Insert PostfixExpression: --(22625) into ExpressionStatement(22626) at 0", "Insert Assignment: =(22634) into ExpressionStatement(22635) at 0", "Insert InfixExpression: !=(22640) into InfixExpression: &&(22644) at 0", "Insert InfixExpression: ==(22643) into InfixExpression: &&(22644) at 1", "Insert MethodInvocation(22647) into PrefixExpression: !(22648) at 0", "Insert VariableDeclarationExpression(22654) into ForStatement(22682) at 0", "Insert PostfixExpression: ++(22659) into ForStatement(22682) at 2", "Insert Block(22681) into ForStatement(22682) at 3", "Insert SimpleName: skip(22489) into Assignment: =(22491) at 0", "Insert BooleanLiteral: false(22490) into Assignment: =(22491) at 1", "Insert InfixExpression: +(22537) into ParenthesizedExpression(22538) at 0", "Insert SimpleName: Airing(22544) into SimpleType: Airing(22545) at 0", "Insert QualifiedName: indy.data(22546) into ArrayAccess(22548) at 0", "Insert SimpleName: mid(22547) into ArrayAccess(22548) at 1", "Insert SimpleName: cmp(22567) into Assignment: =(22570) at 0", "Insert PrefixExpression: -(22569) into Assignment: =(22570) at 1", "Insert SimpleName: high(22584) into Assignment: =(22586) at 0", "Insert SimpleName: mid(22585) into Assignment: =(22586) at 1", "Insert InfixExpression: >(22611) into InfixExpression: &&(22615) at 0", "Insert InfixExpression: !=(22614) into InfixExpression: &&(22615) at 1", "Insert SimpleName: isNoShow(22616) into MethodInvocation(22618) at 0", "Insert QualifiedName: air.showID(22617) into MethodInvocation(22618) at 1", "Insert SimpleName: index(22624) into PostfixExpression: --(22625) at 0", "Insert SimpleName: air(22627) into Assignment: =(22634) at 0", "Insert CastExpression(22633) into Assignment: =(22634) at 1", "Insert SimpleName: air(22638) into InfixExpression: !=(22640) at 0", "Insert NullLiteral(22639) into InfixExpression: !=(22640) at 1", "Insert QualifiedName: air.stationID(22641) into InfixExpression: ==(22643) at 0", "Insert SimpleName: stationID(22642) into InfixExpression: ==(22643) at 1", "Insert SimpleName: isNoShow(22645) into MethodInvocation(22647) at 0", "Insert QualifiedName: air.showID(22646) into MethodInvocation(22647) at 1", "Insert PrimitiveType: int(22650) into VariableDeclarationExpression(22654) at 0", "Insert VariableDeclarationFragment(22653) into VariableDeclarationExpression(22654) at 1", "Update QualifiedName: peeps.length(12712) to lookupIDs.length", "Insert SimpleName: i(22658) into PostfixExpression: ++(22659) at 0", "Insert IfStatement(22680) into Block(22681) at 0", "Insert SimpleName: low(22535) into InfixExpression: +(22537) at 0", "Insert SimpleName: high(22536) into InfixExpression: +(22537) at 1", "Insert NumberLiteral: 1(22568) into PrefixExpression: -(22569) at 0", "Insert SimpleName: index(22609) into InfixExpression: >(22611) at 0", "Insert NumberLiteral: 0(22610) into InfixExpression: >(22611) at 1", "Insert SimpleName: air(22612) into InfixExpression: !=(22614) at 0", "Insert NullLiteral(22613) into InfixExpression: !=(22614) at 1", "Insert SimpleType: Airing(22629) into CastExpression(22633) at 0", "Insert ArrayAccess(22632) into CastExpression(22633) at 1", "Insert SimpleName: i(22651) into VariableDeclarationFragment(22653) at 0", "Insert NumberLiteral: 0(22652) into VariableDeclarationFragment(22653) at 1", "Insert InfixExpression: ==(22664) into IfStatement(22680) at 0", "Insert Block(22679) into IfStatement(22680) at 1", "Insert SimpleName: Airing(22628) into SimpleType: Airing(22629) at 0", "Insert QualifiedName: indy.data(22630) into ArrayAccess(22632) at 0", "Insert SimpleName: index(22631) into ArrayAccess(22632) at 1", "Insert SimpleName: stationID(22660) into InfixExpression: ==(22664) at 0", "Insert ArrayAccess(22663) into InfixExpression: ==(22664) at 1", "Insert ExpressionStatement(22678) into Block(22679) at 0", "Insert SimpleName: lookupIDs(22661) into ArrayAccess(22663) at 0", "Insert SimpleName: i(22662) into ArrayAccess(22663) at 1", "Move Assignment: =(12724) into ExpressionStatement(22678) at 0", "Update SimpleName: peeps(12716) to returnValues", "Update SimpleName: getPersonForName(12719) to Math", "Insert SimpleName: max(22669) into MethodInvocation(22676) at 1", "Insert MethodInvocation(22675) into MethodInvocation(22676) at 3", "Update SimpleName: people(12720) to returnValues", "Insert SimpleName: air(22673) into MethodInvocation(22675) at 0", "Insert SimpleName: getEndTime(22674) into MethodInvocation(22675) at 1", "Delete SimpleName: String(12665)", "Delete SimpleType: String(12666)", "Delete ArrayType: String[](12668)", "Delete SimpleName: people(12669)", "Delete SingleVariableDeclaration(12670)", "Delete SimpleName: peeps(12687)", "Delete InfixExpression: ||(12694)", "Delete ParenthesizedExpression(12695)", "Delete QualifiedName: Pooler.EMPTY_PERSON_ARRAY(12696)", "Delete ArrayCreation(12702)", "Delete ConditionalExpression(12703)", "Delete VariableDeclarationFragment(12704)", "Delete VariableDeclarationStatement(12705)", "Delete SimpleName: showcardID(12729)", "Delete SimpleName: title(12730)", "Delete SimpleName: network(12731)", "Delete StringLiteral: \"\"(12738)", "Delete QualifiedName: Pooler.EMPTY_INT_ARRAY(12741)", "Delete QualifiedName: Pooler.EMPTY_LONG_ARRAY(12742)", "Delete MethodInvocation(12744)", "Delete ReturnStatement(12745)", "Delete Block(12746)", "Delete MethodDeclaration(12747)", "Delete SimpleName: String(19147)", "Delete SimpleType: String(19148)", "Delete Dimension(19149)", "Delete ArrayType: String[](19150)", "Delete SimpleName: getPeopleArray(19219)", "Delete MethodInvocation(19221)", "Delete ExpressionStatement(12725)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}