{"application": "apache-flume", "csha": "d656fae3f492b40281b875ba36793a8e488b5e8d", "files": [{"MemoryChannel_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: setChannelCapacity to MethodInvocation at 1", "INS SimpleName: Long to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: queue to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: valueOf to MethodInvocation at 1", "INS SimpleName: queue to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 0", "INS SimpleName: remainingCapacity to MethodInvocation at 1", "INS SimpleName: channelCounter to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to MethodInvocation at 2"]}]}}, {"MemoryChannel_diff": {"operations": ["Insert ExpressionStatement(828) into Block(832) at 2", "Insert MethodInvocation(827) into ExpressionStatement(828) at 0", "Insert SimpleName: channelCounter(815) into MethodInvocation(827) at 0", "Insert SimpleName: setChannelCapacity(816) into MethodInvocation(827) at 1", "Insert MethodInvocation(826) into MethodInvocation(827) at 2", "Insert SimpleName: Long(817) into MethodInvocation(826) at 0", "Insert SimpleName: valueOf(818) into MethodInvocation(826) at 1", "Insert InfixExpression: +(825) into MethodInvocation(826) at 2", "Insert MethodInvocation(821) into InfixExpression: +(825) at 0", "Insert MethodInvocation(824) into InfixExpression: +(825) at 1", "Insert SimpleName: queue(819) into MethodInvocation(821) at 0", "Insert SimpleName: size(820) into MethodInvocation(821) at 1", "Insert SimpleName: queue(822) into MethodInvocation(824) at 0", "Insert SimpleName: remainingCapacity(823) into MethodInvocation(824) at 1"]}}, {"PseudoTxnMemoryChannel_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS ImportDeclaration to CompilationUnit at 10", "INS QualifiedName: org.apache.flume.instrumentation.ChannelCounter to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: ChannelCounter to SimpleType: ChannelCounter at 0", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS SimpleName: channelCounter to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleType: ChannelCounter to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS SimpleName: start to SuperMethodInvocation at 0", "INS SimpleName: setChannelSize to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to InfixExpression: + at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: valueOf to MethodInvocation at 1", "INS SimpleName: queue to MethodInvocation at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: channelCounter to MethodInvocation at 0", "INS SimpleName: queue to MethodInvocation at 0", "INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: start to MethodInvocation at 1", "INS SimpleName: queue to MethodInvocation at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: setChannelSize to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: channelCounter to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: channelCounter to MethodInvocation at 0", "INS SimpleName: Long to MethodInvocation at 0", "INS SuperMethodInvocation to ExpressionStatement at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: remainingCapacity to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: start to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: stop to MethodDeclaration at 3", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ExpressionStatement to Block at 1", "INS ExpressionStatement to Block at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: stop to SuperMethodInvocation at 0", "INS SimpleName: stop to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SuperMethodInvocation to ExpressionStatement at 0", "INS SimpleName: setChannelSize to MethodInvocation at 1", "INS SimpleName: queue to MethodInvocation at 0", "INS SimpleName: channelCounter to MethodInvocation at 0", "INS SimpleName: size to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS MethodInvocation to ExpressionStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: channelCounter to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS SimpleType: ChannelCounter to ClassInstanceCreation at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS Block to IfStatement at 1", "INS ClassInstanceCreation to Assignment: = at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: channelCounter to Assignment: = at 0", "INS SimpleName: ChannelCounter to SimpleType: ChannelCounter at 0", "INS IfStatement to Block at 5", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: channelCounter to InfixExpression: == at 0", "INS SimpleName: getName to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: channelCounter to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: incrementEventPutAttemptCount to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: addToEventPutSuccessCount to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS SimpleName: channelCounter to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS SimpleName: channelCounter to MethodInvocation at 0", "INS SimpleName: queue to MethodInvocation at 0", "INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setChannelSize to MethodInvocation at 1", "INS ExpressionStatement to Block at 4", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: incrementEventTakeAttemptCount to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: channelCounter to MethodInvocation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleName: Event to SimpleType: Event at 0", "INS SimpleType: Event to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: e to VariableDeclarationFragment at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS SimpleName: channelCounter to MethodInvocation at 0", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS SimpleName: addToEventTakeSuccessCount to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: channelCounter to MethodInvocation at 0", "INS SimpleName: size to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: setChannelSize to MethodInvocation at 1", "INS SimpleName: queue to MethodInvocation at 0"]}, {"root": "INS SimpleName: e to ReturnStatement at 0", "operations": ["INS SimpleName: e to ReturnStatement at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}]}}, {"PseudoTxnMemoryChannel_diff": {"operations": ["Insert ImportDeclaration(36) into CompilationUnit(452) at 10", "Insert QualifiedName: org.apache.flume.instrumentation.ChannelCounter(35) into ImportDeclaration(36) at 0", "Insert FieldDeclaration(133) into TypeDeclaration: class(451) at 8", "Insert MethodDeclaration(236) into TypeDeclaration: class(451) at 10", "Insert MethodDeclaration(257) into TypeDeclaration: class(451) at 11", "Insert Modifier: private(128) into FieldDeclaration(133) at 0", "Insert SimpleType: ChannelCounter(130) into FieldDeclaration(133) at 1", "Insert VariableDeclarationFragment(132) into FieldDeclaration(133) at 2", "Insert MarkerAnnotation(203) into MethodDeclaration(236) at 0", "Insert Modifier: public(204) into MethodDeclaration(236) at 1", "Insert PrimitiveType: void(205) into MethodDeclaration(236) at 2", "Insert SimpleName: start(206) into MethodDeclaration(236) at 3", "Insert Block(235) into MethodDeclaration(236) at 4", "Insert MarkerAnnotation(238) into MethodDeclaration(257) at 0", "Insert Modifier: public(239) into MethodDeclaration(257) at 1", "Insert PrimitiveType: void(240) into MethodDeclaration(257) at 2", "Insert SimpleName: stop(241) into MethodDeclaration(257) at 3", "Insert Block(256) into MethodDeclaration(257) at 4", "Insert SimpleName: ChannelCounter(129) into SimpleType: ChannelCounter(130) at 0", "Insert SimpleName: channelCounter(131) into VariableDeclarationFragment(132) at 0", "Insert IfStatement(199) into Block(200) at 5", "Insert SimpleName: Override(202) into MarkerAnnotation(203) at 0", "Insert ExpressionStatement(210) into Block(235) at 0", "Insert ExpressionStatement(217) into Block(235) at 1", "Insert ExpressionStatement(231) into Block(235) at 2", "Insert ExpressionStatement(234) into Block(235) at 3", "Insert SimpleName: Override(237) into MarkerAnnotation(238) at 0", "Insert ExpressionStatement(248) into Block(256) at 0", "Insert ExpressionStatement(252) into Block(256) at 1", "Insert ExpressionStatement(255) into Block(256) at 2", "Insert ExpressionStatement(278) into Block(313) at 1", "Insert ExpressionStatement(305) into Block(313) at 3", "Insert ExpressionStatement(312) into Block(313) at 4", "Insert ExpressionStatement(332) into Block(371) at 1", "Insert InfixExpression: ==(189) into IfStatement(199) at 0", "Insert Block(198) into IfStatement(199) at 1", "Insert MethodInvocation(209) into ExpressionStatement(210) at 0", "Insert MethodInvocation(216) into ExpressionStatement(217) at 0", "Insert MethodInvocation(230) into ExpressionStatement(231) at 0", "Insert SuperMethodInvocation(233) into ExpressionStatement(234) at 0", "Insert MethodInvocation(247) into ExpressionStatement(248) at 0", "Insert MethodInvocation(251) into ExpressionStatement(252) at 0", "Insert SuperMethodInvocation(254) into ExpressionStatement(255) at 0", "Insert MethodInvocation(277) into ExpressionStatement(278) at 0", "Insert MethodInvocation(304) into ExpressionStatement(305) at 0", "Insert MethodInvocation(311) into ExpressionStatement(312) at 0", "Insert MethodInvocation(331) into ExpressionStatement(332) at 0", "Insert SimpleName: channelCounter(187) into InfixExpression: ==(189) at 0", "Insert NullLiteral(188) into InfixExpression: ==(189) at 1", "Insert ExpressionStatement(197) into Block(198) at 0", "Insert SimpleName: channelCounter(207) into MethodInvocation(209) at 0", "Insert SimpleName: start(208) into MethodInvocation(209) at 1", "Insert SimpleName: channelCounter(211) into MethodInvocation(216) at 0", "Insert SimpleName: setChannelSize(212) into MethodInvocation(216) at 1", "Insert MethodInvocation(215) into MethodInvocation(216) at 2", "Insert SimpleName: channelCounter(218) into MethodInvocation(230) at 0", "Insert SimpleName: setChannelSize(219) into MethodInvocation(230) at 1", "Insert MethodInvocation(229) into MethodInvocation(230) at 2", "Insert SimpleName: start(232) into SuperMethodInvocation(233) at 0", "Insert SimpleName: channelCounter(242) into MethodInvocation(247) at 0", "Insert SimpleName: setChannelSize(243) into MethodInvocation(247) at 1", "Insert MethodInvocation(246) into MethodInvocation(247) at 2", "Insert SimpleName: channelCounter(249) into MethodInvocation(251) at 0", "Insert SimpleName: stop(250) into MethodInvocation(251) at 1", "Insert SimpleName: stop(253) into SuperMethodInvocation(254) at 0", "Insert SimpleName: channelCounter(275) into MethodInvocation(277) at 0", "Insert SimpleName: incrementEventPutAttemptCount(276) into MethodInvocation(277) at 1", "Insert SimpleName: channelCounter(301) into MethodInvocation(304) at 0", "Insert SimpleName: addToEventPutSuccessCount(302) into MethodInvocation(304) at 1", "Insert NumberLiteral: 1(303) into MethodInvocation(304) at 2", "Insert SimpleName: channelCounter(306) into MethodInvocation(311) at 0", "Insert SimpleName: setChannelSize(307) into MethodInvocation(311) at 1", "Insert MethodInvocation(310) into MethodInvocation(311) at 2", "Insert SimpleName: channelCounter(329) into MethodInvocation(331) at 0", "Insert SimpleName: incrementEventTakeAttemptCount(330) into MethodInvocation(331) at 1", "Insert VariableDeclarationStatement(342) into Block(357) at 0", "Insert ExpressionStatement(347) into Block(357) at 1", "Insert ExpressionStatement(354) into Block(357) at 2", "Insert Assignment: =(196) into ExpressionStatement(197) at 0", "Insert SimpleName: queue(213) into MethodInvocation(215) at 0", "Insert SimpleName: size(214) into MethodInvocation(215) at 1", "Insert SimpleName: Long(220) into MethodInvocation(229) at 0", "Insert SimpleName: valueOf(221) into MethodInvocation(229) at 1", "Insert InfixExpression: +(228) into MethodInvocation(229) at 2", "Insert SimpleName: queue(244) into MethodInvocation(246) at 0", "Insert SimpleName: size(245) into MethodInvocation(246) at 1", "Insert SimpleName: queue(308) into MethodInvocation(310) at 0", "Insert SimpleName: size(309) into MethodInvocation(310) at 1", "Insert SimpleType: Event(334) into VariableDeclarationStatement(342) at 0", "Insert VariableDeclarationFragment(341) into VariableDeclarationStatement(342) at 1", "Insert MethodInvocation(346) into ExpressionStatement(347) at 0", "Insert MethodInvocation(353) into ExpressionStatement(354) at 0", "Insert SimpleName: e(355) into ReturnStatement(356) at 0", "Insert SimpleName: channelCounter(190) into Assignment: =(196) at 0", "Insert ClassInstanceCreation(195) into Assignment: =(196) at 1", "Insert MethodInvocation(224) into InfixExpression: +(228) at 0", "Insert MethodInvocation(227) into InfixExpression: +(228) at 1", "Insert SimpleName: Event(333) into SimpleType: Event(334) at 0", "Insert SimpleName: e(335) into VariableDeclarationFragment(341) at 0", "Move MethodInvocation(240) into VariableDeclarationFragment(341) at 1", "Insert SimpleName: channelCounter(343) into MethodInvocation(346) at 0", "Insert SimpleName: addToEventTakeSuccessCount(344) into MethodInvocation(346) at 1", "Insert NumberLiteral: 1(345) into MethodInvocation(346) at 2", "Insert SimpleName: channelCounter(348) into MethodInvocation(353) at 0", "Insert SimpleName: setChannelSize(349) into MethodInvocation(353) at 1", "Insert MethodInvocation(352) into MethodInvocation(353) at 2", "Insert SimpleType: ChannelCounter(192) into ClassInstanceCreation(195) at 0", "Insert MethodInvocation(194) into ClassInstanceCreation(195) at 1", "Insert SimpleName: queue(222) into MethodInvocation(224) at 0", "Insert SimpleName: size(223) into MethodInvocation(224) at 1", "Insert SimpleName: queue(225) into MethodInvocation(227) at 0", "Insert SimpleName: remainingCapacity(226) into MethodInvocation(227) at 1", "Insert SimpleName: queue(350) into MethodInvocation(352) at 0", "Insert SimpleName: size(351) into MethodInvocation(352) at 1", "Insert SimpleName: ChannelCounter(191) into SimpleType: ChannelCounter(192) at 0", "Insert SimpleName: getName(193) into MethodInvocation(194) at 0"]}}, {"ChannelCounter_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 9", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 9", "INS StringLiteral: \"channel.capacity\" to VariableDeclarationFragment at 1", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: COUNTER_CHANNEL_CAPACITY to VariableDeclarationFragment at 0", "INS SimpleType: String to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: static to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS PrimitiveType: void to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS SimpleName: set to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: capacity to SingleVariableDeclaration at 1", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: COUNTER_CHANNEL_CAPACITY to MethodInvocation at 1", "INS SimpleName: capacity to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setChannelCapacity to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 23", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 23", "INS Block to MethodDeclaration at 3", "INS SimpleName: get to MethodInvocation at 0", "INS SimpleName: COUNTER_CHANNEL_CAPACITY to MethodInvocation at 1", "INS PrimitiveType: long to MethodDeclaration at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getChannelCapacity to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 0", "INS ReturnStatement to Block at 0"]}, {"root": "INS SimpleName: COUNTER_CHANNEL_CAPACITY to ArrayInitializer at 5", "operations": ["INS SimpleName: COUNTER_CHANNEL_CAPACITY to ArrayInitializer at 5"]}]}}, {"ChannelCounter_diff": {"operations": ["Insert FieldDeclaration(61) into TypeDeclaration: class(225) at 9", "Insert MethodDeclaration(215) into TypeDeclaration: class(225) at 22", "Insert MethodDeclaration(224) into TypeDeclaration: class(225) at 23", "Insert Modifier: private(53) into FieldDeclaration(61) at 0", "Insert Modifier: static(54) into FieldDeclaration(61) at 1", "Insert Modifier: final(55) into FieldDeclaration(61) at 2", "Insert SimpleType: String(57) into FieldDeclaration(61) at 3", "Insert VariableDeclarationFragment(60) into FieldDeclaration(61) at 4", "Insert Modifier: public(203) into MethodDeclaration(215) at 0", "Insert PrimitiveType: void(204) into MethodDeclaration(215) at 1", "Insert SimpleName: setChannelCapacity(205) into MethodDeclaration(215) at 2", "Insert SingleVariableDeclaration(208) into MethodDeclaration(215) at 3", "Insert Block(214) into MethodDeclaration(215) at 4", "Insert Modifier: public(216) into MethodDeclaration(224) at 0", "Insert PrimitiveType: long(217) into MethodDeclaration(224) at 1", "Insert SimpleName: getChannelCapacity(218) into MethodDeclaration(224) at 2", "Insert Block(223) into MethodDeclaration(224) at 3", "Insert SimpleName: String(56) into SimpleType: String(57) at 0", "Insert SimpleName: COUNTER_CHANNEL_CAPACITY(58) into VariableDeclarationFragment(60) at 0", "Insert StringLiteral: \"channel.capacity\"(59) into VariableDeclarationFragment(60) at 1", "Insert PrimitiveType: long(206) into SingleVariableDeclaration(208) at 0", "Insert SimpleName: capacity(207) into SingleVariableDeclaration(208) at 1", "Insert ExpressionStatement(213) into Block(214) at 0", "Insert ReturnStatement(222) into Block(223) at 0", "Insert SimpleName: COUNTER_CHANNEL_CAPACITY(75) into ArrayInitializer(76) at 5", "Insert MethodInvocation(212) into ExpressionStatement(213) at 0", "Insert MethodInvocation(221) into ReturnStatement(222) at 0", "Insert SimpleName: set(209) into MethodInvocation(212) at 0", "Insert SimpleName: COUNTER_CHANNEL_CAPACITY(210) into MethodInvocation(212) at 1", "Insert SimpleName: capacity(211) into MethodInvocation(212) at 2", "Insert SimpleName: get(219) into MethodInvocation(221) at 0", "Insert SimpleName: COUNTER_CHANNEL_CAPACITY(220) into MethodInvocation(221) at 1"]}}, {"ChannelCounterMBean_cluster": {"actions": [{"root": "INS Javadoc to TypeDeclaration: interface at 0", "operations": ["INS TextElement: This interface represents a channel counter mbean. Any class implementing to TagElement at 0", "INS TagElement: @linkplain to TagElement at 5", "INS TextElement: interface might change between minor releases. Please see to TagElement at 4", "INS TextElement: this interface must sub-class to TagElement at 1", "INS TagElement to Javadoc at 0", "INS QualifiedName: org.apache.flume.instrumentation.ChannelCounter to TagElement: @linkplain at 0", "INS TagElement: @linkplain to TagElement at 2", "INS Javadoc to TypeDeclaration: interface at 0", "INS TextElement:  class. to TagElement at 6", "INS TextElement: . This to TagElement at 3", "INS QualifiedName: org.apache.flume.instrumentation.MonitoredCounterGroup to TagElement: @linkplain at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 10", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 10", "INS PrimitiveType: long to MethodDeclaration at 0", "INS SimpleName: getChannelCapacity to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 11", "operations": ["INS SimpleType: String to MethodDeclaration at 0", "INS SimpleName: getType to MethodDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS MethodDeclaration to TypeDeclaration: interface at 11"]}]}}, {"ChannelCounterMBean_diff": {"operations": ["Insert Javadoc(12) into TypeDeclaration: interface(43) at 0", "Insert MethodDeclaration(38) into TypeDeclaration: interface(43) at 10", "Insert MethodDeclaration(42) into TypeDeclaration: interface(43) at 11", "Insert TagElement(11) into Javadoc(12) at 0", "Insert PrimitiveType: long(36) into MethodDeclaration(38) at 0", "Insert SimpleName: getChannelCapacity(37) into MethodDeclaration(38) at 1", "Insert SimpleType: String(40) into MethodDeclaration(42) at 0", "Insert SimpleName: getType(41) into MethodDeclaration(42) at 1", "Insert TextElement: This interface represents a channel counter mbean. Any class implementing(2) into TagElement(11) at 0", "Insert TextElement: this interface must sub-class(3) into TagElement(11) at 1", "Insert TagElement: @linkplain(5) into TagElement(11) at 2", "Insert TextElement: . This(6) into TagElement(11) at 3", "Insert TextElement: interface might change between minor releases. Please see(7) into TagElement(11) at 4", "Insert TagElement: @linkplain(9) into TagElement(11) at 5", "Insert TextElement:  class.(10) into TagElement(11) at 6", "Insert SimpleName: String(39) into SimpleType: String(40) at 0", "Insert QualifiedName: org.apache.flume.instrumentation.MonitoredCounterGroup(4) into TagElement: @linkplain(5) at 0", "Insert QualifiedName: org.apache.flume.instrumentation.ChannelCounter(8) into TagElement: @linkplain(9) at 0"]}}, {"GangliaServer_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 11", "operations": ["INS QualifiedName: java.util.Map to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 11"]}, {"root": "INS ImportDeclaration to CompilationUnit at 25", "operations": ["INS QualifiedName: org.apache.flume.instrumentation.util.JMXPollUtil to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 25"]}, {"root": "UPDATE from <b>Mandatory Parameters:</b><p> to <b>Mandatory Parameters:</b><p> <tt>hosts: </tt> List of comma separated", "operations": ["UPD TextElement: <b>Mandatory Parameters:</b><p> from <b>Mandatory Parameters:</b><p> to <b>Mandatory Parameters:</b><p> <tt>hosts: </tt> List of comma separated"]}, {"root": "UPDATE from servers to report metrics to. <p> to hostname:ports of ganglia servers to report metrics to. <p> <b>Optional", "operations": ["UPD TextElement: servers to report metrics to. <p> from servers to report metrics to. <p> to hostname:ports of ganglia servers to report metrics to. <p> <b>Optional"]}, {"root": "UPDATE from <tt>pollFrequency:</tt>Interval in seconds between consecutive reports to to Parameters: </b><p> <tt>pollFrequency:</tt>Interval in seconds between", "operations": ["UPD TextElement: <tt>pollFrequency:</tt>Interval in seconds between consecutive reports to from <tt>pollFrequency:</tt>Interval in seconds between consecutive reports to to Parameters: </b><p> <tt>pollFrequency:</tt>Interval in seconds between"]}, {"root": "UPDATE from ganglia servers. Default = 60 seconds.<p> to consecutive reports to ganglia servers. Default = 60 seconds.<p>", "operations": ["UPD TextElement: ganglia servers. Default = 60 seconds.<p> from ganglia servers. Default = 60 seconds.<p> to consecutive reports to ganglia servers. Default = 60 seconds.<p>"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleType: Map to ParameterizedType: Map<String,String> at 0", "INS VariableDeclarationStatement to Block at 0", "INS ParameterizedType: Map<String,String> to ParameterizedType: Map<String,Map<String,String>> at 2", "INS ParameterizedType: Map<String,Map<String,String>> to VariableDeclarationStatement at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 1", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2"]}, {"root": "INS EnhancedForStatement to Block at 1", "operations": ["INS SimpleName: component to SingleVariableDeclaration at 1", "INS EnhancedForStatement to Block at 1", "INS MethodInvocation to EnhancedForStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: metricsMap to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: keySet to MethodInvocation at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from Exception to Map", "operations": ["UPD SimpleName: Exception from Exception to Map", "UPD SimpleType: Set from Set to Map", "UPD SimpleName: Set from Set to Map"]}, {"root": "MOVE from ParameterizedType: Map<String,Map<String,String>>", "operations": ["MOV SimpleType: ObjectInstance to ParameterizedType: Map<String,Map<String,String>> at 1", "MOV SimpleType: Set to ParameterizedType: Map<String,Map<String,String>> at 0"]}, {"root": "UPDATE from ObjectInstance to String", "operations": ["UPD SimpleName: ObjectInstance from ObjectInstance to String", "UPD SimpleName: MBeanAttributeInfo from MBeanAttributeInfo to String", "UPD SimpleName: AttributeList from AttributeList to String", "UPD SimpleType: ObjectInstance from ObjectInstance to String", "UPD SimpleName: ObjectInstance from ObjectInstance to String"]}, {"root": "UPDATE from attrs to metricsMap", "operations": ["UPD SimpleName: attrs from attrs to metricsMap", "UPD SimpleName: mbeanServer from mbeanServer to metricsMap"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV EnhancedForStatement to Block at 1"]}, {"root": "UPDATE from mbeanServer to JMXPollUtil", "operations": ["UPD SimpleName: mbeanServer from mbeanServer to JMXPollUtil"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getMBeanInfo to MethodInvocation at 1", "MOV SimpleName: mbeanServer to MethodInvocation at 0"]}, {"root": "UPDATE from getMBeanInfo to getAllMBeans", "operations": ["UPD SimpleName: getMBeanInfo from getMBeanInfo to getAllMBeans"]}, {"root": "INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "operations": ["INS ParameterizedType: Map<String,String> to VariableDeclarationStatement at 0", "INS SimpleType: String to ParameterizedType: Map<String,String> at 2", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleType: Map to ParameterizedType: Map<String,String> at 0"]}, {"root": "INS MethodInvocation to EnhancedForStatement at 1", "operations": ["INS SimpleName: keySet to MethodInvocation at 1", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: attributeMap to MethodInvocation at 0"]}, {"root": "INS Block to EnhancedForStatement at 2", "operations": ["INS Block to EnhancedForStatement at 2"]}, {"root": "MOVE from SimpleType: Map", "operations": ["MOV SimpleName: Exception to SimpleType: Map at 0"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: ObjectInstance to SimpleType: String at 0"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: MBeanAttributeInfo to SimpleType: String at 0"]}, {"root": "MOVE from ParameterizedType: Map<String,String>", "operations": ["MOV SimpleType: String to ParameterizedType: Map<String,String> at 1"]}, {"root": "UPDATE from localAttr to attributeMap", "operations": ["UPD SimpleName: localAttr from localAttr to attributeMap", "UPD SimpleName: attrList from attrList to attributeMap", "UPD SimpleName: localAttr from localAttr to attributeMap"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from attr to attribute", "operations": ["UPD SimpleName: attr from attr to attribute", "UPD SimpleName: toString from toString to attribute", "UPD SimpleName: toString from toString to attribute"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1", "MOV IfStatement to Block at 0"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: AttributeList to SimpleType: String at 0"]}, {"root": "UPDATE from getValue to get", "operations": ["UPD SimpleName: getValue from getValue to get", "UPD SimpleName: getValue from getValue to get", "UPD SimpleName: getAttributes from getAttributes to get"]}, {"root": "UPDATE from obj to component", "operations": ["UPD SimpleName: obj from obj to component"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: obj to MethodInvocation at 2"]}, {"root": "INS SimpleName: attribute to InfixExpression: + at 3", "operations": ["INS SimpleName: attribute to InfixExpression: + at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: localAttr to MethodInvocation at 0", "MOV SimpleName: getValue to MethodInvocation at 1"]}, {"root": "INS SimpleName: attribute to InfixExpression: + at 3", "operations": ["INS SimpleName: attribute to InfixExpression: + at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: localAttr to MethodInvocation at 0", "MOV SimpleName: getValue to MethodInvocation at 1"]}, {"root": "DEL TextElement: <tt>hosts: </tt> List of comma separated hostname:ports of ganglia", "operations": ["DEL TextElement: <tt>hosts: </tt> List of comma separated hostname:ports of ganglia"]}, {"root": "DEL TextElement: <b>Optional Parameters: </b><p>", "operations": ["DEL TextElement: <b>Optional Parameters: </b><p>"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: obj", "DEL SimpleName: getAttributes", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getObjectName", "DEL MethodInvocation"]}, {"root": "DEL SimpleType: AttributeList", "operations": ["DEL SimpleType: AttributeList"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getObjectName"]}, {"root": "DEL SimpleName: strAtts", "operations": ["DEL SimpleName: strAtts"]}, {"root": "DEL SimpleType: Object", "operations": ["DEL SimpleType: Object", "DEL SimpleName: Object"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getName", "DEL SimpleName: localAttr", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: localAttr", "DEL MethodInvocation", "DEL SimpleName: getName"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL SimpleName: attrList", "operations": ["DEL SimpleName: attrList"]}, {"root": "DEL Block", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: localAttr", "DEL SimpleName: Attribute", "DEL CastExpression", "DEL SimpleType: Attribute", "DEL SimpleType: Attribute", "DEL VariableDeclarationStatement", "DEL SimpleName: Attribute", "DEL Block", "DEL SimpleName: attr"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL NullLiteral", "DEL VariableDeclarationStatement", "DEL SimpleName: queryMBeans", "DEL ParameterizedType: Set<ObjectInstance>", "DEL VariableDeclarationFragment"]}, {"root": "DEL TryStatement", "operations": ["DEL NullLiteral", "DEL StringLiteral: \"Could not get Mbeans for monitoring\"", "DEL SimpleName: error", "DEL Block", "DEL SimpleName: ex", "DEL CatchClause", "DEL SimpleName: mbeanServer", "DEL ExpressionStatement", "DEL SimpleName: queryMBeans", "DEL SimpleName: Throwables", "DEL TryStatement", "DEL MethodInvocation", "DEL SimpleType: Exception", "DEL SimpleName: propagate", "DEL SimpleName: ex", "DEL NullLiteral", "DEL SimpleName: logger", "DEL SimpleName: queryMBeans", "DEL SimpleName: ex", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL Assignment: =", "DEL MethodInvocation", "DEL Block"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL SimpleName: error", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleType: Exception", "DEL MethodInvocation", "DEL VariableDeclarationExpression", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL ArrayCreation", "DEL SimpleType: MBeanAttributeInfo", "DEL Block", "DEL SimpleName: getName", "DEL VariableDeclarationStatement", "DEL SimpleName: toString", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL Dimension", "DEL QualifiedName: strAtts.length", "DEL SimpleName: Exception", "DEL InfixExpression: <", "DEL MethodInvocation", "DEL SimpleName: i", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: obj", "DEL VariableDeclarationFragment", "DEL SimpleName: logger", "DEL PrimitiveType: int", "DEL QualifiedName: attrs.length", "DEL PrefixExpression: !", "DEL ArrayType: String[]", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: strAtts", "DEL StringLiteral: \"Error getting mbean attributes\"", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: i", "DEL CatchClause", "DEL SimpleName: getObjectName", "DEL PostfixExpression: ++", "DEL ArrayType: MBeanAttributeInfo[]", "DEL TryStatement", "DEL SimpleName: startsWith", "DEL SimpleName: indexOf", "DEL MethodInvocation", "DEL ForStatement", "DEL SimpleName: strAtts", "DEL SingleVariableDeclaration", "DEL SimpleName: getObjectName", "DEL NumberLiteral: 0", "DEL SimpleName: ex", "DEL SimpleName: getObjectName", "DEL SimpleName: obj", "DEL SimpleName: attrs", "DEL SimpleName: i", "DEL EnhancedForStatement", "DEL SimpleName: queryMBeans", "DEL SimpleName: obj", "DEL CharacterLiteral: '='", "DEL SimpleName: component", "DEL ArrayAccess", "DEL NumberLiteral: 1", "DEL Block", "DEL SimpleName: ex", "DEL Assignment: =", "DEL SimpleName: toString", "DEL ContinueStatement", "DEL Dimension", "DEL MethodInvocation", "DEL SimpleName: substring", "DEL SimpleType: ObjectInstance", "DEL StringLiteral: \"org.apache.flume\"", "DEL SimpleName: obj", "DEL IfStatement", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL VariableDeclarationStatement", "DEL ArrayAccess", "DEL SimpleName: toString", "DEL SimpleName: i", "DEL Dimension"]}]}}, {"GangliaServer_diff": {"operations": ["Insert ImportDeclaration(23) into CompilationUnit(1194) at 11", "Insert ImportDeclaration(51) into CompilationUnit(1194) at 25", "Insert QualifiedName: java.util.Map(22) into ImportDeclaration(23) at 0", "Insert QualifiedName: org.apache.flume.instrumentation.util.JMXPollUtil(50) into ImportDeclaration(51) at 0", "Update TextElement: <b>Mandatory Parameters:</b><p>(55) to <b>Mandatory Parameters:</b><p> <tt>hosts: </tt> List of comma separated", "Update TextElement: servers to report metrics to. <p>(57) to hostname:ports of ganglia servers to report metrics to. <p> <b>Optional", "Update TextElement: <tt>pollFrequency:</tt>Interval in seconds between consecutive reports to(59) to Parameters: </b><p> <tt>pollFrequency:</tt>Interval in seconds between", "Update TextElement: ganglia servers. Default = 60 seconds.<p>(60) to consecutive reports to ganglia servers. Default = 60 seconds.<p>", "Insert VariableDeclarationStatement(1109) into Block(1176) at 0", "Insert EnhancedForStatement(1175) into Block(1176) at 1", "Insert ParameterizedType: Map<String,Map<String,String>>(1103) into VariableDeclarationStatement(1109) at 0", "Move VariableDeclarationFragment(1156) into VariableDeclarationStatement(1109) at 1", "Insert SingleVariableDeclaration(1113) into EnhancedForStatement(1175) at 0", "Insert MethodInvocation(1116) into EnhancedForStatement(1175) at 1", "Insert Block(1174) into EnhancedForStatement(1175) at 2", "Update SimpleType: Set(1091) to Map", "Move SimpleType: Set(1091) into ParameterizedType: Map<String,Map<String,String>>(1103) at 0", "Update SimpleType: ObjectInstance(1093) to String", "Move SimpleType: ObjectInstance(1093) into ParameterizedType: Map<String,Map<String,String>>(1103) at 1", "Insert ParameterizedType: Map<String,String>(1102) into ParameterizedType: Map<String,Map<String,String>>(1103) at 2", "Update SimpleName: attrs(1147) to metricsMap", "Insert MethodInvocation(1107) into VariableDeclarationFragment(1108) at 1", "Move SimpleType: String(1163) into SingleVariableDeclaration(1113) at 0", "Insert SimpleName: component(1112) into SingleVariableDeclaration(1113) at 1", "Insert SimpleName: metricsMap(1114) into MethodInvocation(1116) at 0", "Insert SimpleName: keySet(1115) into MethodInvocation(1116) at 1", "Move VariableDeclarationStatement(1203) into Block(1174) at 0", "Move EnhancedForStatement(1281) into Block(1174) at 1", "Update SimpleName: Set(1090) to Map", "Update SimpleName: ObjectInstance(1092) to String", "Insert SimpleType: Map(1097) into ParameterizedType: Map<String,String>(1102) at 0", "Insert SimpleType: String(1099) into ParameterizedType: Map<String,String>(1102) at 1", "Insert SimpleType: String(1101) into ParameterizedType: Map<String,String>(1102) at 2", "Update SimpleName: mbeanServer(1148) to JMXPollUtil", "Move SimpleName: mbeanServer(1148) into MethodInvocation(1107) at 0", "Update SimpleName: getMBeanInfo(1149) to getAllMBeans", "Move SimpleName: getMBeanInfo(1149) into MethodInvocation(1107) at 1", "Insert ParameterizedType: Map<String,String>(1123) into VariableDeclarationStatement(1130) at 0", "Insert MethodInvocation(1137) into EnhancedForStatement(1173) at 1", "Insert Block(1172) into EnhancedForStatement(1173) at 2", "Update SimpleName: Exception(1108) to Map", "Move SimpleName: Exception(1108) into SimpleType: Map(1097) at 0", "Update SimpleName: ObjectInstance(1126) to String", "Move SimpleName: ObjectInstance(1126) into SimpleType: String(1099) at 0", "Update SimpleName: MBeanAttributeInfo(1143) to String", "Move SimpleName: MBeanAttributeInfo(1143) into SimpleType: String(1101) at 0", "Insert SimpleType: Map(1118) into ParameterizedType: Map<String,String>(1123) at 0", "Move SimpleType: String(1205) into ParameterizedType: Map<String,String>(1123) at 1", "Insert SimpleType: String(1122) into ParameterizedType: Map<String,String>(1123) at 2", "Update SimpleName: attrList(1194) to attributeMap", "Move SimpleType: String(1159) into SingleVariableDeclaration(1134) at 0", "Update SimpleName: attr(1228) to attribute", "Insert SimpleName: attributeMap(1135) into MethodInvocation(1137) at 0", "Insert SimpleName: keySet(1136) into MethodInvocation(1137) at 1", "Move IfStatement(1275) into Block(1172) at 0", "Move ExpressionStatement(1279) into Block(1172) at 1", "Insert SimpleName: Map(1117) into SimpleType: Map(1118) at 0", "Update SimpleName: AttributeList(1192) to String", "Move SimpleName: AttributeList(1192) into SimpleType: String(1122) at 0", "Update SimpleName: mbeanServer(1195) to metricsMap", "Update SimpleName: getAttributes(1196) to get", "Update SimpleName: obj(1197) to component", "Move SimpleName: obj(1197) into MethodInvocation(1128) at 2", "Insert SimpleName: attribute(1144) into InfixExpression: +(1145) at 3", "Update SimpleName: localAttr(1250) to attributeMap", "Move SimpleName: localAttr(1250) into MethodInvocation(1149) at 0", "Update SimpleName: getValue(1251) to get", "Move SimpleName: getValue(1251) into MethodInvocation(1149) at 1", "Update SimpleName: toString(1253) to attribute", "Insert SimpleName: attribute(1158) into InfixExpression: +(1159) at 3", "Update SimpleName: localAttr(1267) to attributeMap", "Move SimpleName: localAttr(1267) into MethodInvocation(1163) at 0", "Update SimpleName: getValue(1268) to get", "Move SimpleName: getValue(1268) into MethodInvocation(1163) at 1", "Update SimpleName: toString(1270) to attribute", "Delete TextElement: <tt>hosts: </tt> List of comma separated hostname:ports of ganglia(56)", "Delete TextElement: <b>Optional Parameters: </b><p>(58)", "Delete SimpleName: obj(1150)", "Delete SimpleName: getObjectName(1151)", "Delete MethodInvocation(1152)", "Delete MethodInvocation(1153)", "Delete SimpleName: getAttributes(1154)", "Delete MethodInvocation(1155)", "Delete SimpleType: AttributeList(1193)", "Delete SimpleName: getObjectName(1198)", "Delete MethodInvocation(1199)", "Delete SimpleName: strAtts(1200)", "Delete SimpleName: Object(1226)", "Delete SimpleType: Object(1227)", "Delete SimpleName: localAttr(1246)", "Delete SimpleName: getName(1247)", "Delete MethodInvocation(1248)", "Delete MethodInvocation(1252)", "Delete SimpleName: localAttr(1263)", "Delete SimpleName: getName(1264)", "Delete MethodInvocation(1265)", "Delete MethodInvocation(1269)", "Delete SimpleName: attrList(1230)", "Delete SimpleName: Attribute(1231)", "Delete SimpleType: Attribute(1232)", "Delete SimpleName: localAttr(1233)", "Delete SimpleName: Attribute(1234)", "Delete SimpleType: Attribute(1235)", "Delete SimpleName: attr(1236)", "Delete CastExpression(1237)", "Delete VariableDeclarationFragment(1238)", "Delete VariableDeclarationStatement(1239)", "Delete Block(1280)", "Delete ParameterizedType: Set<ObjectInstance>(1094)", "Delete SimpleName: queryMBeans(1095)", "Delete NullLiteral(1096)", "Delete VariableDeclarationFragment(1097)", "Delete VariableDeclarationStatement(1098)", "Delete SimpleName: queryMBeans(1099)", "Delete SimpleName: mbeanServer(1100)", "Delete SimpleName: queryMBeans(1101)", "Delete NullLiteral(1102)", "Delete NullLiteral(1103)", "Delete MethodInvocation(1104)", "Delete Assignment: =(1105)", "Delete ExpressionStatement(1106)", "Delete Block(1107)", "Delete SimpleType: Exception(1109)", "Delete SimpleName: ex(1110)", "Delete SingleVariableDeclaration(1111)", "Delete SimpleName: logger(1112)", "Delete SimpleName: error(1113)", "Delete StringLiteral: \"Could not get Mbeans for monitoring\"(1114)", "Delete SimpleName: ex(1115)", "Delete MethodInvocation(1116)", "Delete ExpressionStatement(1117)", "Delete SimpleName: Throwables(1118)", "Delete SimpleName: propagate(1119)", "Delete SimpleName: ex(1120)", "Delete MethodInvocation(1121)", "Delete ExpressionStatement(1122)", "Delete Block(1123)", "Delete CatchClause(1124)", "Delete TryStatement(1125)", "Delete SimpleType: ObjectInstance(1127)", "Delete SimpleName: obj(1128)", "Delete SingleVariableDeclaration(1129)", "Delete SimpleName: queryMBeans(1130)", "Delete SimpleName: obj(1131)", "Delete SimpleName: getObjectName(1132)", "Delete MethodInvocation(1133)", "Delete SimpleName: toString(1134)", "Delete MethodInvocation(1135)", "Delete SimpleName: startsWith(1136)", "Delete StringLiteral: \"org.apache.flume\"(1137)", "Delete MethodInvocation(1138)", "Delete PrefixExpression: !(1139)", "Delete ContinueStatement(1140)", "Delete Block(1141)", "Delete IfStatement(1142)", "Delete SimpleType: MBeanAttributeInfo(1144)", "Delete Dimension(1145)", "Delete ArrayType: MBeanAttributeInfo[](1146)", "Delete VariableDeclarationStatement(1157)", "Delete SimpleName: strAtts(1160)", "Delete Dimension(1161)", "Delete Dimension(1164)", "Delete ArrayType: String[](1165)", "Delete QualifiedName: attrs.length(1166)", "Delete ArrayCreation(1167)", "Delete VariableDeclarationFragment(1168)", "Delete VariableDeclarationStatement(1169)", "Delete PrimitiveType: int(1170)", "Delete SimpleName: i(1171)", "Delete NumberLiteral: 0(1172)", "Delete VariableDeclarationFragment(1173)", "Delete VariableDeclarationExpression(1174)", "Delete SimpleName: i(1175)", "Delete QualifiedName: strAtts.length(1176)", "Delete InfixExpression: <(1177)", "Delete SimpleName: i(1178)", "Delete PostfixExpression: ++(1179)", "Delete SimpleName: strAtts(1180)", "Delete SimpleName: i(1181)", "Delete ArrayAccess(1182)", "Delete SimpleName: attrs(1183)", "Delete SimpleName: i(1184)", "Delete ArrayAccess(1185)", "Delete SimpleName: getName(1186)", "Delete MethodInvocation(1187)", "Delete Assignment: =(1188)", "Delete ExpressionStatement(1189)", "Delete Block(1190)", "Delete ForStatement(1191)", "Delete SimpleName: component(1206)", "Delete SimpleName: obj(1207)", "Delete SimpleName: getObjectName(1208)", "Delete MethodInvocation(1209)", "Delete SimpleName: toString(1210)", "Delete MethodInvocation(1211)", "Delete SimpleName: substring(1212)", "Delete SimpleName: obj(1213)", "Delete SimpleName: getObjectName(1214)", "Delete MethodInvocation(1215)", "Delete SimpleName: toString(1216)", "Delete MethodInvocation(1217)", "Delete SimpleName: indexOf(1218)", "Delete CharacterLiteral: '='(1219)", "Delete MethodInvocation(1220)", "Delete NumberLiteral: 1(1221)", "Delete InfixExpression: +(1222)", "Delete MethodInvocation(1223)", "Delete VariableDeclarationFragment(1224)", "Delete VariableDeclarationStatement(1225)", "Delete Block(1282)", "Delete SimpleName: Exception(1283)", "Delete SimpleType: Exception(1284)", "Delete SimpleName: ex(1285)", "Delete SingleVariableDeclaration(1286)", "Delete SimpleName: logger(1287)", "Delete SimpleName: error(1288)", "Delete StringLiteral: \"Error getting mbean attributes\"(1289)", "Delete SimpleName: ex(1290)", "Delete MethodInvocation(1291)", "Delete ExpressionStatement(1292)", "Delete Block(1293)", "Delete CatchClause(1294)", "Delete TryStatement(1295)", "Delete Block(1296)", "Delete EnhancedForStatement(1297)"]}}, {"MonitoredCounterGroup_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: name to MethodInvocation at 1", "INS SimpleName: getType to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: type to MethodInvocation at 0", "INS SimpleType: String to MethodDeclaration at 1", "INS Block to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 20"]}]}}, {"MonitoredCounterGroup_diff": {"operations": ["Insert MethodDeclaration(489) into TypeDeclaration: class(490) at 20", "Insert Modifier: public(480) into MethodDeclaration(489) at 0", "Insert SimpleType: String(482) into MethodDeclaration(489) at 1", "Insert SimpleName: getType(483) into MethodDeclaration(489) at 2", "Insert Block(488) into MethodDeclaration(489) at 3", "Insert SimpleName: String(481) into SimpleType: String(482) at 0", "Insert ReturnStatement(487) into Block(488) at 0", "Insert MethodInvocation(486) into ReturnStatement(487) at 0", "Insert SimpleName: type(484) into MethodInvocation(486) at 0", "Insert SimpleName: name(485) into MethodInvocation(486) at 1"]}}, {"MonitoringType_cluster": {"actions": [{"root": "INS EnumConstantDeclaration to EnumDeclaration at 5", "operations": ["INS TypeLiteral to EnumConstantDeclaration at 1", "INS SimpleType: org.apache.flume.instrumentation.http.HTTPMetricsServer to TypeLiteral at 0", "INS EnumConstantDeclaration to EnumDeclaration at 5", "INS SimpleName: HTTP to EnumConstantDeclaration at 0", "INS QualifiedName: org.apache.flume.instrumentation.http.HTTPMetricsServer to SimpleType: org.apache.flume.instrumentation.http.HTTPMetricsServer at 0"]}]}}, {"MonitoringType_diff": {"operations": ["Insert EnumConstantDeclaration(19) into EnumDeclaration(62) at 5", "Insert SimpleName: HTTP(15) into EnumConstantDeclaration(19) at 0", "Insert TypeLiteral(18) into EnumConstantDeclaration(19) at 1", "Insert SimpleType: org.apache.flume.instrumentation.http.HTTPMetricsServer(17) into TypeLiteral(18) at 0", "Insert QualifiedName: org.apache.flume.instrumentation.http.HTTPMetricsServer(16) into SimpleType: org.apache.flume.instrumentation.http.HTTPMetricsServer(17) at 0"]}}, {"SinkCounterMBean_cluster": {"actions": [{"root": "INS Javadoc to TypeDeclaration: interface at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TextElement: interface might change between minor releases. Please see to TagElement at 4", "INS TextElement: this interface must sub-class to TagElement at 1", "INS QualifiedName: org.apache.flume.instrumentation.SinkCounter to TagElement: @linkplain at 0", "INS TextElement:  class. to TagElement at 6", "INS Javadoc to TypeDeclaration: interface at 0", "INS TagElement: @linkplain to TagElement at 2", "INS QualifiedName: org.apache.flume.instrumentation.MonitoredCounterGroup to TagElement: @linkplain at 0", "INS TagElement: @linkplain to TagElement at 5", "INS TextElement: This interface represents a sink counter mbean. Any class implementing to TagElement at 0", "INS TextElement: . This to TagElement at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 13", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 13", "INS SimpleName: getType to MethodDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to MethodDeclaration at 0"]}]}}, {"SinkCounterMBean_diff": {"operations": ["Insert Javadoc(12) into TypeDeclaration: interface(49) at 0", "Insert MethodDeclaration(48) into TypeDeclaration: interface(49) at 13", "Insert TagElement(11) into Javadoc(12) at 0", "Insert SimpleType: String(46) into MethodDeclaration(48) at 0", "Insert SimpleName: getType(47) into MethodDeclaration(48) at 1", "Insert TextElement: This interface represents a sink counter mbean. Any class implementing(2) into TagElement(11) at 0", "Insert TextElement: this interface must sub-class(3) into TagElement(11) at 1", "Insert TagElement: @linkplain(5) into TagElement(11) at 2", "Insert TextElement: . This(6) into TagElement(11) at 3", "Insert TextElement: interface might change between minor releases. Please see(7) into TagElement(11) at 4", "Insert TagElement: @linkplain(9) into TagElement(11) at 5", "Insert TextElement:  class.(10) into TagElement(11) at 6", "Insert SimpleName: String(45) into SimpleType: String(46) at 0", "Insert QualifiedName: org.apache.flume.instrumentation.MonitoredCounterGroup(4) into TagElement: @linkplain(5) at 0", "Insert QualifiedName: org.apache.flume.instrumentation.SinkCounter(8) into TagElement: @linkplain(9) at 0"]}}, {"SourceCounterMBean_cluster": {"actions": [{"root": "INS Javadoc to TypeDeclaration: interface at 0", "operations": ["INS Javadoc to TypeDeclaration: interface at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @linkplain to TagElement at 2", "INS QualifiedName: org.apache.flume.instrumentation.MonitoredCounterGroup to TagElement: @linkplain at 0", "INS QualifiedName: org.apache.flume.instrumentation.SourceCounter to TagElement: @linkplain at 0", "INS TextElement: this interface must sub-class to TagElement at 1", "INS TextElement: interface might change between minor releases. Please see to TagElement at 4", "INS TextElement:  class. to TagElement at 6", "INS TextElement: . This to TagElement at 3", "INS TextElement: This interface represents a source counter mbean. Any class implementing to TagElement at 0", "INS TagElement: @linkplain to TagElement at 5"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 11", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 11", "INS SimpleType: String to MethodDeclaration at 0", "INS SimpleName: getType to MethodDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0"]}]}}, {"SourceCounterMBean_diff": {"operations": ["Insert Javadoc(12) into TypeDeclaration: interface(43) at 0", "Insert MethodDeclaration(42) into TypeDeclaration: interface(43) at 11", "Insert TagElement(11) into Javadoc(12) at 0", "Insert SimpleType: String(40) into MethodDeclaration(42) at 0", "Insert SimpleName: getType(41) into MethodDeclaration(42) at 1", "Insert TextElement: This interface represents a source counter mbean. Any class implementing(2) into TagElement(11) at 0", "Insert TextElement: this interface must sub-class(3) into TagElement(11) at 1", "Insert TagElement: @linkplain(5) into TagElement(11) at 2", "Insert TextElement: . This(6) into TagElement(11) at 3", "Insert TextElement: interface might change between minor releases. Please see(7) into TagElement(11) at 4", "Insert TagElement: @linkplain(9) into TagElement(11) at 5", "Insert TextElement:  class.(10) into TagElement(11) at 6", "Insert SimpleName: String(39) into SimpleType: String(40) at 0", "Insert QualifiedName: org.apache.flume.instrumentation.MonitoredCounterGroup(4) into TagElement: @linkplain(5) at 0", "Insert QualifiedName: org.apache.flume.instrumentation.SourceCounter(8) into TagElement: @linkplain(9) at 0"]}}, {"FileChannel_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: channelCounter to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: capacity to MethodInvocation at 2", "INS SimpleName: setChannelCapacity to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}]}}, {"FileChannel_diff": {"operations": ["Insert ExpressionStatement(713) into Block(714) at 2", "Insert MethodInvocation(712) into ExpressionStatement(713) at 0", "Insert SimpleName: channelCounter(709) into MethodInvocation(712) at 0", "Insert SimpleName: setChannelCapacity(710) into MethodInvocation(712) at 1", "Insert SimpleName: capacity(711) into MethodInvocation(712) at 2"]}}], "commit_stats": [{"total_files": 13, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "True"}]}