{"application": "apache-phoenix", "csha": "2ab8f34d255fb0b92168fc63561ab335558d043d", "files": [{"SortOrderFIT_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS ArrayInitializer to ArrayInitializer at 2", "INS ArrayInitializer to ArrayCreation at 1", "INS StringLiteral: \"LPAD(oid, 8, '123')\" to ClassInstanceCreation at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS StringLiteral: \" (oid VARCHAR NOT NULL, code INTEGER NOT NULL constraint pk primary key (oid DESC, code DESC))\" to InfixExpression: + at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS ExpressionStatement to Block at 3", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: WhereCondition to ClassInstanceCreation at 0", "INS StringLiteral: \"=\" to ClassInstanceCreation at 2", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: upsert to MethodInvocation at 0", "INS Dimension to ArrayType: Object[][] at 1", "INS ArrayType: Object[][] to ArrayCreation at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS ClassInstanceCreation to MethodInvocation at 5", "INS StringLiteral: \"code\" to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ArrayInitializer to ArrayInitializer at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS NumberLiteral: 2 to ArrayInitializer at 1", "INS Dimension to ArrayType: Object[][] at 2", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: ddl to MethodInvocation at 1", "INS StringLiteral: \"'1231bbbb'\" to ClassInstanceCreation at 3", "INS Dimension to ArrayType: Object[][] at 2", "INS SimpleName: TABLE to InfixExpression: + at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: ddl to VariableDeclarationFragment at 0", "INS SimpleName: lPadDescCompositePK to MethodDeclaration at 3", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS ArrayInitializer to ArrayInitializer at 0", "INS Dimension to ArrayType: Object[][] at 2", "INS ArrayType: Object[][] to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"oid\" to MethodInvocation at 1", "INS NumberLiteral: 1 to ArrayInitializer at 1", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS SimpleName: runQueryTest to MethodInvocation at 0", "INS SimpleName: expectedRows to MethodInvocation at 4", "INS StringLiteral: \"bbbb\" to ArrayInitializer at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS NumberLiteral: 2 to ArrayInitializer at 1", "INS StringLiteral: \"bbbb\" to ArrayInitializer at 0", "INS StringLiteral: \"aaaa\" to ArrayInitializer at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ArrayType: Object[][] to ArrayCreation at 0", "INS SimpleName: insertedRows to VariableDeclarationFragment at 0", "INS StringLiteral: \"cccc\" to ArrayInitializer at 0", "INS SimpleName: Test to MarkerAnnotation at 0", "INS SimpleName: insertedRows to MethodInvocation at 3", "INS StringLiteral: \"CREATE TABLE \" to InfixExpression: + at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: expectedRows to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Exception to MethodDeclaration at 4", "INS NumberLiteral: 3 to ArrayInitializer at 1", "INS ArrayType: Object[][] to VariableDeclarationStatement at 0", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS Dimension to ArrayType: Object[][] at 1", "INS SimpleName: WhereCondition to SimpleType: WhereCondition at 0", "INS Dimension to ArrayType: Object[][] at 2", "INS ArrayInitializer to ArrayCreation at 1", "INS ArrayInitializer to ArrayInitializer at 1", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationStatement to Block at 2", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS Dimension to ArrayType: Object[][] at 1", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS Dimension to ArrayType: Object[][] at 1"]}]}}, {"SortOrderFIT_diff": {"operations": ["Insert MethodDeclaration(1342) into TypeDeclaration: class(3761) at 24", "Insert MarkerAnnotation(1268) into MethodDeclaration(1342) at 0", "Insert Modifier: public(1269) into MethodDeclaration(1342) at 1", "Insert PrimitiveType: void(1270) into MethodDeclaration(1342) at 2", "Insert SimpleName: lPadDescCompositePK(1271) into MethodDeclaration(1342) at 3", "Insert SimpleType: Exception(1273) into MethodDeclaration(1342) at 4", "Insert Block(1341) into MethodDeclaration(1342) at 5", "Insert SimpleName: Test(1267) into MarkerAnnotation(1268) at 0", "Insert SimpleName: Exception(1272) into SimpleType: Exception(1273) at 0", "Insert VariableDeclarationStatement(1282) into Block(1341) at 0", "Insert VariableDeclarationStatement(1306) into Block(1341) at 1", "Insert VariableDeclarationStatement(1324) into Block(1341) at 2", "Insert ExpressionStatement(1340) into Block(1341) at 3", "Insert SimpleType: String(1275) into VariableDeclarationStatement(1282) at 0", "Insert VariableDeclarationFragment(1281) into VariableDeclarationStatement(1282) at 1", "Insert ArrayType: Object[][](1287) into VariableDeclarationStatement(1306) at 0", "Insert VariableDeclarationFragment(1305) into VariableDeclarationStatement(1306) at 1", "Insert ArrayType: Object[][](1311) into VariableDeclarationStatement(1324) at 0", "Insert VariableDeclarationFragment(1323) into VariableDeclarationStatement(1324) at 1", "Insert MethodInvocation(1339) into ExpressionStatement(1340) at 0", "Insert SimpleName: String(1274) into SimpleType: String(1275) at 0", "Insert SimpleName: ddl(1276) into VariableDeclarationFragment(1281) at 0", "Insert InfixExpression: +(1280) into VariableDeclarationFragment(1281) at 1", "Insert SimpleType: Object(1284) into ArrayType: Object[][](1287) at 0", "Insert Dimension(1285) into ArrayType: Object[][](1287) at 1", "Insert Dimension(1286) into ArrayType: Object[][](1287) at 2", "Insert SimpleName: insertedRows(1288) into VariableDeclarationFragment(1305) at 0", "Insert ArrayCreation(1304) into VariableDeclarationFragment(1305) at 1", "Insert SimpleType: Object(1308) into ArrayType: Object[][](1311) at 0", "Insert Dimension(1309) into ArrayType: Object[][](1311) at 1", "Insert Dimension(1310) into ArrayType: Object[][](1311) at 2", "Insert SimpleName: expectedRows(1312) into VariableDeclarationFragment(1323) at 0", "Insert ArrayCreation(1322) into VariableDeclarationFragment(1323) at 1", "Insert SimpleName: runQueryTest(1325) into MethodInvocation(1339) at 0", "Insert SimpleName: ddl(1326) into MethodInvocation(1339) at 1", "Insert MethodInvocation(1330) into MethodInvocation(1339) at 2", "Insert SimpleName: insertedRows(1331) into MethodInvocation(1339) at 3", "Insert SimpleName: expectedRows(1332) into MethodInvocation(1339) at 4", "Insert ClassInstanceCreation(1338) into MethodInvocation(1339) at 5", "Insert StringLiteral: \"CREATE TABLE \"(1277) into InfixExpression: +(1280) at 0", "Insert SimpleName: TABLE(1278) into InfixExpression: +(1280) at 1", "Insert StringLiteral: \" (oid VARCHAR NOT NULL, code INTEGER NOT NULL constraint pk primary key (oid DESC, code DESC))\"(1279) into InfixExpression: +(1280) at 2", "Insert SimpleName: Object(1283) into SimpleType: Object(1284) at 0", "Insert ArrayType: Object[][](1293) into ArrayCreation(1304) at 0", "Insert ArrayInitializer(1303) into ArrayCreation(1304) at 1", "Insert SimpleName: Object(1307) into SimpleType: Object(1308) at 0", "Insert ArrayType: Object[][](1317) into ArrayCreation(1322) at 0", "Insert ArrayInitializer(1321) into ArrayCreation(1322) at 1", "Insert SimpleName: upsert(1327) into MethodInvocation(1330) at 0", "Insert StringLiteral: \"oid\"(1328) into MethodInvocation(1330) at 1", "Insert StringLiteral: \"code\"(1329) into MethodInvocation(1330) at 2", "Insert SimpleType: WhereCondition(1334) into ClassInstanceCreation(1338) at 0", "Insert StringLiteral: \"LPAD(oid, 8, '123')\"(1335) into ClassInstanceCreation(1338) at 1", "Insert StringLiteral: \"=\"(1336) into ClassInstanceCreation(1338) at 2", "Insert StringLiteral: \"'1231bbbb'\"(1337) into ClassInstanceCreation(1338) at 3", "Insert SimpleType: Object(1290) into ArrayType: Object[][](1293) at 0", "Insert Dimension(1291) into ArrayType: Object[][](1293) at 1", "Insert Dimension(1292) into ArrayType: Object[][](1293) at 2", "Insert ArrayInitializer(1296) into ArrayInitializer(1303) at 0", "Insert ArrayInitializer(1299) into ArrayInitializer(1303) at 1", "Insert ArrayInitializer(1302) into ArrayInitializer(1303) at 2", "Insert SimpleType: Object(1314) into ArrayType: Object[][](1317) at 0", "Insert Dimension(1315) into ArrayType: Object[][](1317) at 1", "Insert Dimension(1316) into ArrayType: Object[][](1317) at 2", "Insert ArrayInitializer(1320) into ArrayInitializer(1321) at 0", "Insert SimpleName: WhereCondition(1333) into SimpleType: WhereCondition(1334) at 0", "Insert SimpleName: Object(1289) into SimpleType: Object(1290) at 0", "Insert StringLiteral: \"aaaa\"(1294) into ArrayInitializer(1296) at 0", "Insert NumberLiteral: 1(1295) into ArrayInitializer(1296) at 1", "Insert StringLiteral: \"bbbb\"(1297) into ArrayInitializer(1299) at 0", "Insert NumberLiteral: 2(1298) into ArrayInitializer(1299) at 1", "Insert StringLiteral: \"cccc\"(1300) into ArrayInitializer(1302) at 0", "Insert NumberLiteral: 3(1301) into ArrayInitializer(1302) at 1", "Insert SimpleName: Object(1313) into SimpleType: Object(1314) at 0", "Insert StringLiteral: \"bbbb\"(1318) into ArrayInitializer(1320) at 0", "Insert NumberLiteral: 2(1319) into ArrayInitializer(1320) at 1"]}}, {"ExpressionType_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 41", "MOV ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS ImportDeclaration to CompilationUnit at 12", "INS QualifiedName: org.apache.phoenix.expression.function.EncodeFunction to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 19", "operations": ["INS ImportDeclaration to CompilationUnit at 19", "INS QualifiedName: org.apache.phoenix.expression.function.LpadFunction to ImportDeclaration at 0"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 82", "operations": ["INS SimpleType: EncodeFunction to TypeLiteral at 0", "INS EnumConstantDeclaration to EnumDeclaration at 82", "INS SimpleName: EncodeFunction to EnumConstantDeclaration at 0", "INS SimpleName: EncodeFunction to SimpleType: EncodeFunction at 0", "INS TypeLiteral to EnumConstantDeclaration at 1"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 83", "operations": ["INS EnumConstantDeclaration to EnumDeclaration at 83", "INS SimpleName: LpadFunction to EnumConstantDeclaration at 0", "INS TypeLiteral to EnumConstantDeclaration at 1", "INS SimpleName: LpadFunction to SimpleType: LpadFunction at 0", "INS SimpleType: LpadFunction to TypeLiteral at 0"]}]}}, {"ExpressionType_diff": {"operations": ["Move ImportDeclaration(95) into CompilationUnit(676) at 41", "Move ImportDeclaration(97) into CompilationUnit(676) at 10", "Insert ImportDeclaration(25) into CompilationUnit(676) at 12", "Insert ImportDeclaration(39) into CompilationUnit(676) at 19", "Insert QualifiedName: org.apache.phoenix.expression.function.EncodeFunction(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: org.apache.phoenix.expression.function.LpadFunction(38) into ImportDeclaration(39) at 0", "Insert EnumConstantDeclaration(512) into EnumDeclaration(675) at 82", "Insert EnumConstantDeclaration(517) into EnumDeclaration(675) at 83", "Insert SimpleName: EncodeFunction(508) into EnumConstantDeclaration(512) at 0", "Insert TypeLiteral(511) into EnumConstantDeclaration(512) at 1", "Insert SimpleName: LpadFunction(513) into EnumConstantDeclaration(517) at 0", "Insert TypeLiteral(516) into EnumConstantDeclaration(517) at 1", "Insert SimpleType: EncodeFunction(510) into TypeLiteral(511) at 0", "Insert SimpleType: LpadFunction(515) into TypeLiteral(516) at 0", "Insert SimpleName: EncodeFunction(509) into SimpleType: EncodeFunction(510) at 0", "Insert SimpleName: LpadFunction(514) into SimpleType: LpadFunction(515) at 0"]}}, {"EncodeFormat_cluster": {"actions": [{"root": "INS EnumConstantDeclaration to EnumDeclaration at 3", "operations": ["INS EnumConstantDeclaration to EnumDeclaration at 3", "INS SimpleName: BASE62 to EnumConstantDeclaration at 0"]}]}}, {"EncodeFormat_diff": {"operations": ["Insert EnumConstantDeclaration(7) into EnumDeclaration(8) at 3", "Insert SimpleName: BASE62(6) into EnumConstantDeclaration(7) at 0"]}}, {"LengthFunction_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 5"]}, {"root": "UPDATE from java.io.UnsupportedEncodingException to org.apache.phoenix.exception.UndecodableByteException", "operations": ["UPD QualifiedName: java.io.UnsupportedEncodingException from java.io.UnsupportedEncodingException to org.apache.phoenix.exception.UndecodableByteException"]}, {"root": "UPDATE from UnsupportedEncodingException to UndecodableByteException", "operations": ["UPD SimpleName: UnsupportedEncodingException from UnsupportedEncodingException to UndecodableByteException", "UPD SimpleType: UnsupportedEncodingException from UnsupportedEncodingException to UndecodableByteException"]}]}}, {"LengthFunction_diff": {"operations": ["Move ImportDeclaration(3) into CompilationUnit(211) at 5", "Update QualifiedName: java.io.UnsupportedEncodingException(2) to org.apache.phoenix.exception.UndecodableByteException", "Update SimpleType: UnsupportedEncodingException(168) to UndecodableByteException", "Update SimpleName: UnsupportedEncodingException(167) to UndecodableByteException"]}}, {"SubstrFunction_cluster": {"actions": [{"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 6"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 5", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 2", "MOV IfStatement to Block at 1", "MOV IfStatement to Block at 4"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL BooleanLiteral: false", "DEL SingleVariableDeclaration", "DEL SimpleName: UnsupportedEncodingException", "DEL SimpleName: e", "DEL CatchClause", "DEL TryStatement", "DEL SimpleType: UnsupportedEncodingException", "DEL Block", "DEL ReturnStatement"]}]}}, {"SubstrFunction_diff": {"operations": ["Move Block(555) into MethodDeclaration(556) at 6", "Move VariableDeclarationStatement(322) into Block(555) at 0", "Move IfStatement(332) into Block(555) at 1", "Move VariableDeclarationStatement(347) into Block(555) at 2", "Move VariableDeclarationStatement(353) into Block(555) at 3", "Move IfStatement(394) into Block(555) at 4", "Move IfStatement(405) into Block(555) at 5", "Delete SimpleName: UnsupportedEncodingException(556)", "Delete SimpleType: UnsupportedEncodingException(557)", "Delete SimpleName: e(558)", "Delete SingleVariableDeclaration(559)", "Delete BooleanLiteral: false(560)", "Delete ReturnStatement(561)", "Delete Block(562)", "Delete CatchClause(563)", "Delete TryStatement(564)", "Delete Block(565)"]}}], "commit_stats": [{"total_files": 16, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}