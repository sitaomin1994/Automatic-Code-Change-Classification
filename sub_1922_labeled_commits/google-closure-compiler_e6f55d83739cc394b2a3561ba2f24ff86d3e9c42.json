{"application": "google-closure-compiler", "csha": "e6f55d83739cc394b2a3561ba2f24ff86d3e9c42", "files": [{"ParserRunner_cluster": {"actions": [{"root": "INS ExpressionStatement to SwitchStatement at 11", "operations": ["INS QualifiedName: Mode.ES6 to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: parserConfigLanguageMode to Assignment: = at 0", "INS ExpressionStatement to SwitchStatement at 11"]}, {"root": "INS BreakStatement to SwitchStatement at 12", "operations": ["INS BreakStatement to SwitchStatement at 12"]}, {"root": "INS ExpressionStatement to SwitchStatement at 14", "operations": ["INS QualifiedName: Mode.ES7 to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to SwitchStatement at 14", "INS SimpleName: parserConfigLanguageMode to Assignment: = at 0"]}, {"root": "INS BreakStatement to SwitchStatement at 15", "operations": ["INS BreakStatement to SwitchStatement at 15"]}, {"root": "UPDATE from Mode.ES6_OR_GREATER to Mode.ES8_OR_GREATER", "operations": ["UPD QualifiedName: Mode.ES6_OR_GREATER from Mode.ES6_OR_GREATER to Mode.ES8_OR_GREATER"]}]}}, {"ParserRunner_diff": {"operations": ["Insert ExpressionStatement(526) into SwitchStatement(550) at 11", "Insert BreakStatement(527) into SwitchStatement(550) at 12", "Insert ExpressionStatement(533) into SwitchStatement(550) at 14", "Insert BreakStatement(534) into SwitchStatement(550) at 15", "Insert Assignment: =(525) into ExpressionStatement(526) at 0", "Insert Assignment: =(532) into ExpressionStatement(533) at 0", "Insert SimpleName: parserConfigLanguageMode(523) into Assignment: =(525) at 0", "Insert QualifiedName: Mode.ES6(524) into Assignment: =(525) at 1", "Insert SimpleName: parserConfigLanguageMode(530) into Assignment: =(532) at 0", "Insert QualifiedName: Mode.ES7(531) into Assignment: =(532) at 1", "Update QualifiedName: Mode.ES6_OR_GREATER(528) to Mode.ES8_OR_GREATER"]}}, {"FeatureSet_cluster": {"actions": [{"root": "INS EnumConstantDeclaration to EnumDeclaration at 33", "operations": ["INS SimpleName: TRAILING_COMMA_IN_PARAM_LIST to EnumConstantDeclaration at 0", "INS StringLiteral: \"trailing comma in param list\" to EnumConstantDeclaration at 1", "INS QualifiedName: LangVersion.ES8 to EnumConstantDeclaration at 2", "INS EnumConstantDeclaration to EnumDeclaration at 33"]}]}}, {"FeatureSet_diff": {"operations": ["Insert EnumConstantDeclaration(361) into EnumDeclaration(466) at 33", "Insert SimpleName: TRAILING_COMMA_IN_PARAM_LIST(358) into EnumConstantDeclaration(361) at 0", "Insert StringLiteral: \"trailing comma in param list\"(359) into EnumConstantDeclaration(361) at 1", "Insert QualifiedName: LangVersion.ES8(360) into EnumConstantDeclaration(361) at 2"]}}, {"Parser_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS PrimitiveType: boolean to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: atLeast8 to VariableDeclarationFragment at 0"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 5", "operations": ["INS SimpleName: ES6 to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 5"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 6", "operations": ["INS SimpleName: ES7 to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 6"]}, {"root": "UPDATE from ES6_OR_GREATER to ES8_OR_GREATER", "operations": ["UPD SimpleName: ES6_OR_GREATER from ES6_OR_GREATER to ES8_OR_GREATER"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS QualifiedName: Mode.ES8_OR_GREATER to InfixExpression: == at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: mode to InfixExpression: == at 0", "INS InfixExpression: == to Assignment: = at 1", "INS SimpleName: atLeast8 to Assignment: = at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS QualifiedName: Feature.TRAILING_COMMA_IN_PARAM_LIST to MethodInvocation at 2", "INS SimpleName: features to Assignment: = at 0", "INS SimpleName: with to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: features to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: Token to SimpleType: Token at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: Token to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: comma to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: features to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS IfStatement to Block at 1", "INS SimpleName: features to MethodInvocation at 0", "INS QualifiedName: Feature.TRAILING_COMMA_IN_PARAM_LIST to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: with to MethodInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1"]}, {"root": "INS PrefixExpression: ! to IfStatement at 0", "operations": ["INS QualifiedName: config.atLeast8 to PrefixExpression: ! at 0", "INS PrefixExpression: ! to IfStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV QualifiedName: TokenType.COMMA to MethodInvocation at 1", "MOV SimpleName: eat to MethodInvocation at 0"]}, {"root": "INS PrefixExpression: ! to IfStatement at 0", "operations": ["INS QualifiedName: config.atLeast8 to PrefixExpression: ! at 0", "INS PrefixExpression: ! to IfStatement at 0"]}, {"root": "INS SimpleName: comma to MethodInvocation at 1", "operations": ["INS SimpleName: comma to MethodInvocation at 1"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation"]}]}}, {"Parser_diff": {"operations": ["Insert FieldDeclaration(485) into TypeDeclaration: class(547) at 6", "Insert EnumConstantDeclaration(457) into EnumDeclaration(464) at 5", "Insert EnumConstantDeclaration(459) into EnumDeclaration(464) at 6", "Insert Modifier: private(480) into FieldDeclaration(485) at 0", "Insert Modifier: final(481) into FieldDeclaration(485) at 1", "Insert PrimitiveType: boolean(482) into FieldDeclaration(485) at 2", "Insert VariableDeclarationFragment(484) into FieldDeclaration(485) at 3", "Insert SimpleName: ES6(456) into EnumConstantDeclaration(457) at 0", "Insert SimpleName: ES7(458) into EnumConstantDeclaration(459) at 0", "Update SimpleName: ES6_OR_GREATER(456) to ES8_OR_GREATER", "Insert SimpleName: atLeast8(483) into VariableDeclarationFragment(484) at 0", "Insert ExpressionStatement(530) into Block(545) at 2", "Insert Assignment: =(529) into ExpressionStatement(530) at 0", "Insert SimpleName: atLeast8(525) into Assignment: =(529) at 0", "Insert InfixExpression: ==(528) into Assignment: =(529) at 1", "Insert SimpleName: mode(526) into InfixExpression: ==(528) at 0", "Insert QualifiedName: Mode.ES8_OR_GREATER(527) into InfixExpression: ==(528) at 1", "Insert IfStatement(4331) into Block(4332) at 1", "Insert VariableDeclarationStatement(11592) into Block(11614) at 0", "Insert IfStatement(11613) into Block(11614) at 1", "Move MethodInvocation(4297) into IfStatement(4331) at 0", "Insert Block(4330) into IfStatement(4331) at 1", "Insert SimpleType: Token(11586) into VariableDeclarationStatement(11592) at 0", "Insert VariableDeclarationFragment(11591) into VariableDeclarationStatement(11592) at 1", "Move MethodInvocation(11564) into IfStatement(11613) at 0", "Insert Block(11612) into IfStatement(11613) at 1", "Insert ExpressionStatement(4320) into Block(4330) at 0", "Move IfStatement(4304) into Block(4330) at 1", "Insert SimpleName: Token(11585) into SimpleType: Token(11586) at 0", "Insert SimpleName: comma(11587) into VariableDeclarationFragment(11591) at 0", "Insert MethodInvocation(11590) into VariableDeclarationFragment(11591) at 1", "Insert ExpressionStatement(11602) into Block(11612) at 0", "Move IfStatement(11570) into Block(11612) at 1", "Insert Assignment: =(4319) into ExpressionStatement(4320) at 0", "Insert PrefixExpression: !(4322) into IfStatement(4329) at 0", "Move SimpleName: eat(11558) into MethodInvocation(11590) at 0", "Move QualifiedName: TokenType.COMMA(11559) into MethodInvocation(11590) at 1", "Insert Assignment: =(11601) into ExpressionStatement(11602) at 0", "Insert PrefixExpression: !(11604) into IfStatement(11611) at 0", "Insert SimpleName: features(4314) into Assignment: =(4319) at 0", "Insert MethodInvocation(4318) into Assignment: =(4319) at 1", "Insert QualifiedName: config.atLeast8(4321) into PrefixExpression: !(4322) at 0", "Insert SimpleName: features(11596) into Assignment: =(11601) at 0", "Insert MethodInvocation(11600) into Assignment: =(11601) at 1", "Insert QualifiedName: config.atLeast8(11603) into PrefixExpression: !(11604) at 0", "Insert SimpleName: features(4315) into MethodInvocation(4318) at 0", "Insert SimpleName: with(4316) into MethodInvocation(4318) at 1", "Insert QualifiedName: Feature.TRAILING_COMMA_IN_PARAM_LIST(4317) into MethodInvocation(4318) at 2", "Insert SimpleName: features(11597) into MethodInvocation(11600) at 0", "Insert SimpleName: with(11598) into MethodInvocation(11600) at 1", "Insert QualifiedName: Feature.TRAILING_COMMA_IN_PARAM_LIST(11599) into MethodInvocation(11600) at 2", "Insert SimpleName: comma(11606) into MethodInvocation(11608) at 1", "Delete MethodInvocation(11560)", "Delete ExpressionStatement(11561)"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}