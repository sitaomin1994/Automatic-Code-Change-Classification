{"application": "apache-commons-io", "csha": "d8d63554f59c74fe44ded336129a6bf23080dd12", "files": [{"ProxyReader_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS PrimitiveType: long to MethodRefParameter at 0", "INS TextElement:  number of chars that the caller asked to be read to TagElement: @param at 1", "INS TagElement: @throws to Javadoc at 3", "INS PrimitiveType: char to ArrayType: char[] at 0", "INS SimpleName: n to TagElement: @param at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS TextElement: an argument. to TagElement at 6", "INS TextElement: . You need to explicitly override those methods if to TagElement at 16", "INS Block to MethodDeclaration at 6", "INS TextElement: of chars that the caller wanted to read (1 for the  to TagElement at 1", "INS MethodRef to TagElement: @link at 0", "INS TextElement: Subclasses can override this method to add common pre-processing to TagElement at 8", "INS SimpleName: read to MethodRef at 0", "INS TextElement: method, buffer length for  to TagElement at 3", "INS MethodRef to TagElement: @link at 0", "INS TextElement:  Commons IO 2.0 to TagElement: @since at 0", "INS TagElement: @link to TagElement at 15", "INS TagElement to Javadoc at 0", "INS TextElement: <p> to TagElement at 7", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS Javadoc to MethodDeclaration at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS TextElement: The default implementation does nothing. to TagElement at 10", "INS TextElement:  if the pre-processing fails to TagElement: @throws at 1", "INS MethodRefParameter to MethodRef at 1", "INS ArrayType: char[] to MethodRefParameter at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TextElement: Note this method is <em>not</em> called from  to TagElement at 12", "INS TagElement: @link to TagElement at 2", "INS SimpleType: IOException to MethodDeclaration at 5", "INS MethodRefParameter to MethodRef at 1", "INS TextElement: functionality without having to override all the read methods. to TagElement at 9", "INS TagElement: @link to TagElement at 13", "INS TextElement: Invoked by the read methods before the call is proxied. The number to TagElement at 0", "INS SimpleName: read to MethodRef at 0", "INS MethodRef to TagElement: @link at 0", "INS TextElement: , etc.) is given as to TagElement at 5", "INS SimpleName: n to SingleVariableDeclaration at 1", "INS TagElement: @link to TagElement at 4", "INS TagElement: @param to Javadoc at 2", "INS TagElement: @since to Javadoc at 1", "INS TextElement: <p> to TagElement at 11", "INS TextElement:  or to TagElement at 14", "INS SimpleName: reset to MethodRef at 0", "INS TextElement: you want to add pre-processing steps also to them. to TagElement at 17", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: IOException to TagElement: @throws at 0", "INS SimpleName: skip to MethodRef at 0", "INS Modifier: protected to MethodDeclaration at 1", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: beforeRead to MethodDeclaration at 3", "INS Dimension to ArrayType: char[] at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS SimpleType: IOException to MethodDeclaration at 5", "INS MethodRefParameter to MethodRef at 1", "INS TextElement: <p> to TagElement at 3", "INS SimpleName: afterRead to MethodDeclaration at 3", "INS TextElement: the end of stream was reached) is given as an argument. to TagElement at 2", "INS TextElement: Subclasses can override this method to add common post-processing to TagElement at 4", "INS SimpleName: IOException to TagElement: @throws at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: long to MethodRefParameter at 0", "INS TextElement:  if the post-processing fails to TagElement: @throws at 1", "INS TextElement: Invoked by the read methods after the proxied call has returned to TagElement at 0", "INS TextElement: Note this method is <em>not</em> called from  to TagElement at 8", "INS TextElement: . You need to explicitly override those methods if to TagElement at 12", "INS TextElement: functionality without having to override all the read methods. to TagElement at 5", "INS TagElement: @since to Javadoc at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS TextElement: The default implementation does nothing. to TagElement at 6", "INS TextElement:  Commons IO 2.0 to TagElement: @since at 0", "INS SimpleName: skip to MethodRef at 0", "INS TextElement: <p> to TagElement at 7", "INS TextElement: you want to add post-processing steps also to them. to TagElement at 13", "INS SimpleName: n to SingleVariableDeclaration at 1", "INS TextElement: successfully. The number of chars returned to the caller (or -1 if to TagElement at 1", "INS Modifier: protected to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS TagElement: @link to TagElement at 9", "INS TagElement to Javadoc at 0", "INS TextElement:  or to TagElement at 10", "INS Block to MethodDeclaration at 6", "INS MethodRef to TagElement: @link at 0", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS SimpleName: n to TagElement: @param at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @throws to Javadoc at 3", "INS TagElement: @link to TagElement at 11", "INS TextElement:  number of chars read, or -1 if the end of stream was reached to TagElement: @param at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: reset to MethodRef at 0", "INS MethodRef to TagElement: @link at 0", "INS TagElement: @param to Javadoc at 2"]}, {"root": "UPDATE from end to len", "operations": ["UPD SimpleName: end from end to len", "UPD SimpleName: end from end to len", "UPD SimpleName: end from end to len"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS NumberLiteral: 1 to MethodInvocation at 1", "INS SimpleName: beforeRead to MethodInvocation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: c to VariableDeclarationFragment at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: afterRead to MethodInvocation at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS NumberLiteral: 1 to ConditionalExpression at 1", "INS SimpleName: c to InfixExpression: != at 0", "INS PrefixExpression: - to InfixExpression: != at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: != to ConditionalExpression at 0", "INS PrefixExpression: - to ConditionalExpression at 2", "INS ConditionalExpression to MethodInvocation at 1", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS ExpressionStatement to Block at 2"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: beforeRead to MethodInvocation at 0", "INS QualifiedName: chr.length to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: n to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS SimpleName: afterRead to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: n to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: beforeRead to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: len to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: n to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: n to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: afterRead to MethodInvocation at 0", "INS ExpressionStatement to Block at 2"]}, {"root": "INS ReturnStatement to Block at 3", "operations": ["INS ReturnStatement to Block at 3", "INS SimpleName: n to ReturnStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: length to MethodInvocation at 1", "INS SimpleName: target to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: beforeRead to MethodInvocation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS SimpleName: n to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: n to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: afterRead to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS SimpleName: c to ReturnStatement at 0", "operations": ["INS SimpleName: c to ReturnStatement at 0"]}, {"root": "INS SimpleName: n to ReturnStatement at 0", "operations": ["INS SimpleName: n to ReturnStatement at 0"]}, {"root": "INS SimpleName: n to ReturnStatement at 0", "operations": ["INS SimpleName: n to ReturnStatement at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: in to MethodInvocation at 0", "MOV SimpleName: read to MethodInvocation at 1", "MOV SimpleName: chr to MethodInvocation at 2", "MOV SimpleName: end to MethodInvocation at 4", "MOV SimpleName: st to MethodInvocation at 3"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL ReturnStatement"]}]}}, {"ProxyReader_diff": {"operations": ["Insert MethodDeclaration(537) into TypeDeclaration: class(605) at 16", "Insert MethodDeclaration(577) into TypeDeclaration: class(605) at 17", "Insert Javadoc(527) into MethodDeclaration(537) at 0", "Insert Modifier: protected(528) into MethodDeclaration(537) at 1", "Insert PrimitiveType: void(529) into MethodDeclaration(537) at 2", "Insert SimpleName: beforeRead(530) into MethodDeclaration(537) at 3", "Insert SingleVariableDeclaration(533) into MethodDeclaration(537) at 4", "Insert SimpleType: IOException(535) into MethodDeclaration(537) at 5", "Insert Block(536) into MethodDeclaration(537) at 6", "Insert Javadoc(567) into MethodDeclaration(577) at 0", "Insert Modifier: protected(568) into MethodDeclaration(577) at 1", "Insert PrimitiveType: void(569) into MethodDeclaration(577) at 2", "Insert SimpleName: afterRead(570) into MethodDeclaration(577) at 3", "Insert SingleVariableDeclaration(573) into MethodDeclaration(577) at 4", "Insert SimpleType: IOException(575) into MethodDeclaration(577) at 5", "Insert Block(576) into MethodDeclaration(577) at 6", "Update SimpleName: end(156) to len", "Insert TagElement(518) into Javadoc(527) at 0", "Insert TagElement: @since(520) into Javadoc(527) at 1", "Insert TagElement: @param(523) into Javadoc(527) at 2", "Insert TagElement: @throws(526) into Javadoc(527) at 3", "Insert PrimitiveType: int(531) into SingleVariableDeclaration(533) at 0", "Insert SimpleName: n(532) into SingleVariableDeclaration(533) at 1", "Insert SimpleName: IOException(534) into SimpleType: IOException(535) at 0", "Insert TagElement(558) into Javadoc(567) at 0", "Insert TagElement: @since(560) into Javadoc(567) at 1", "Insert TagElement: @param(563) into Javadoc(567) at 2", "Insert TagElement: @throws(566) into Javadoc(567) at 3", "Insert PrimitiveType: int(571) into SingleVariableDeclaration(573) at 0", "Insert SimpleName: n(572) into SingleVariableDeclaration(573) at 1", "Insert SimpleName: IOException(574) into SimpleType: IOException(575) at 0", "Update SimpleName: end(133) to len", "Insert TextElement: Invoked by the read methods before the call is proxied. The number(486) into TagElement(518) at 0", "Insert TextElement: of chars that the caller wanted to read (1 for the (487) into TagElement(518) at 1", "Insert TagElement: @link(490) into TagElement(518) at 2", "Insert TextElement: method, buffer length for (491) into TagElement(518) at 3", "Insert TagElement: @link(498) into TagElement(518) at 4", "Insert TextElement: , etc.) is given as(499) into TagElement(518) at 5", "Insert TextElement: an argument.(500) into TagElement(518) at 6", "Insert TextElement: <p>(501) into TagElement(518) at 7", "Insert TextElement: Subclasses can override this method to add common pre-processing(502) into TagElement(518) at 8", "Insert TextElement: functionality without having to override all the read methods.(503) into TagElement(518) at 9", "Insert TextElement: The default implementation does nothing.(504) into TagElement(518) at 10", "Insert TextElement: <p>(505) into TagElement(518) at 11", "Insert TextElement: Note this method is <em>not</em> called from (506) into TagElement(518) at 12", "Insert TagElement: @link(511) into TagElement(518) at 13", "Insert TextElement:  or(512) into TagElement(518) at 14", "Insert TagElement: @link(515) into TagElement(518) at 15", "Insert TextElement: . You need to explicitly override those methods if(516) into TagElement(518) at 16", "Insert TextElement: you want to add pre-processing steps also to them.(517) into TagElement(518) at 17", "Insert TextElement:  Commons IO 2.0(519) into TagElement: @since(520) at 0", "Insert SimpleName: n(521) into TagElement: @param(523) at 0", "Insert TextElement:  number of chars that the caller asked to be read(522) into TagElement: @param(523) at 1", "Insert SimpleName: IOException(524) into TagElement: @throws(526) at 0", "Insert TextElement:  if the pre-processing fails(525) into TagElement: @throws(526) at 1", "Insert TextElement: Invoked by the read methods after the proxied call has returned(538) into TagElement(558) at 0", "Insert TextElement: successfully. The number of chars returned to the caller (or -1 if(539) into TagElement(558) at 1", "Insert TextElement: the end of stream was reached) is given as an argument.(540) into TagElement(558) at 2", "Insert TextElement: <p>(541) into TagElement(558) at 3", "Insert TextElement: Subclasses can override this method to add common post-processing(542) into TagElement(558) at 4", "Insert TextElement: functionality without having to override all the read methods.(543) into TagElement(558) at 5", "Insert TextElement: The default implementation does nothing.(544) into TagElement(558) at 6", "Insert TextElement: <p>(545) into TagElement(558) at 7", "Insert TextElement: Note this method is <em>not</em> called from (546) into TagElement(558) at 8", "Insert TagElement: @link(551) into TagElement(558) at 9", "Insert TextElement:  or(552) into TagElement(558) at 10", "Insert TagElement: @link(555) into TagElement(558) at 11", "Insert TextElement: . You need to explicitly override those methods if(556) into TagElement(558) at 12", "Insert TextElement: you want to add post-processing steps also to them.(557) into TagElement(558) at 13", "Insert TextElement:  Commons IO 2.0(559) into TagElement: @since(560) at 0", "Insert SimpleName: n(561) into TagElement: @param(563) at 0", "Insert TextElement:  number of chars read, or -1 if the end of stream was reached(562) into TagElement: @param(563) at 1", "Insert SimpleName: IOException(564) into TagElement: @throws(566) at 0", "Insert TextElement:  if the post-processing fails(565) into TagElement: @throws(566) at 1", "Insert ExpressionStatement(62) into Block(83) at 0", "Insert VariableDeclarationStatement(69) into Block(83) at 1", "Insert ExpressionStatement(80) into Block(83) at 2", "Insert ExpressionStatement(126) into Block(141) at 0", "Insert VariableDeclarationStatement(134) into Block(141) at 1", "Insert ExpressionStatement(138) into Block(141) at 2", "Insert ExpressionStatement(196) into Block(213) at 0", "Insert VariableDeclarationStatement(206) into Block(213) at 1", "Insert ExpressionStatement(210) into Block(213) at 2", "Insert ReturnStatement(212) into Block(213) at 3", "Insert ExpressionStatement(259) into Block(274) at 0", "Insert VariableDeclarationStatement(267) into Block(274) at 1", "Insert ExpressionStatement(271) into Block(274) at 2", "Insert MethodRef(489) into TagElement: @link(490) at 0", "Insert MethodRef(497) into TagElement: @link(498) at 0", "Insert MethodRef(510) into TagElement: @link(511) at 0", "Insert MethodRef(514) into TagElement: @link(515) at 0", "Insert MethodRef(550) into TagElement: @link(551) at 0", "Insert MethodRef(554) into TagElement: @link(555) at 0", "Insert MethodInvocation(61) into ExpressionStatement(62) at 0", "Insert PrimitiveType: int(63) into VariableDeclarationStatement(69) at 0", "Insert VariableDeclarationFragment(68) into VariableDeclarationStatement(69) at 1", "Insert MethodInvocation(79) into ExpressionStatement(80) at 0", "Insert SimpleName: c(81) into ReturnStatement(82) at 0", "Insert MethodInvocation(125) into ExpressionStatement(126) at 0", "Insert PrimitiveType: int(127) into VariableDeclarationStatement(134) at 0", "Insert VariableDeclarationFragment(133) into VariableDeclarationStatement(134) at 1", "Insert MethodInvocation(137) into ExpressionStatement(138) at 0", "Insert SimpleName: n(139) into ReturnStatement(140) at 0", "Insert MethodInvocation(195) into ExpressionStatement(196) at 0", "Insert PrimitiveType: int(197) into VariableDeclarationStatement(206) at 0", "Insert VariableDeclarationFragment(205) into VariableDeclarationStatement(206) at 1", "Insert MethodInvocation(209) into ExpressionStatement(210) at 0", "Insert SimpleName: n(211) into ReturnStatement(212) at 0", "Insert MethodInvocation(258) into ExpressionStatement(259) at 0", "Insert PrimitiveType: int(260) into VariableDeclarationStatement(267) at 0", "Insert VariableDeclarationFragment(266) into VariableDeclarationStatement(267) at 1", "Insert MethodInvocation(270) into ExpressionStatement(271) at 0", "Insert SimpleName: n(272) into ReturnStatement(273) at 0", "Insert SimpleName: read(488) into MethodRef(489) at 0", "Insert SimpleName: read(492) into MethodRef(497) at 0", "Insert MethodRefParameter(496) into MethodRef(497) at 1", "Insert SimpleName: skip(507) into MethodRef(510) at 0", "Insert MethodRefParameter(509) into MethodRef(510) at 1", "Insert SimpleName: reset(513) into MethodRef(514) at 0", "Insert SimpleName: skip(547) into MethodRef(550) at 0", "Insert MethodRefParameter(549) into MethodRef(550) at 1", "Insert SimpleName: reset(553) into MethodRef(554) at 0", "Insert SimpleName: beforeRead(59) into MethodInvocation(61) at 0", "Insert NumberLiteral: 1(60) into MethodInvocation(61) at 1", "Insert SimpleName: c(64) into VariableDeclarationFragment(68) at 0", "Move MethodInvocation(61) into VariableDeclarationFragment(68) at 1", "Insert SimpleName: afterRead(70) into MethodInvocation(79) at 0", "Insert ConditionalExpression(78) into MethodInvocation(79) at 1", "Insert SimpleName: beforeRead(123) into MethodInvocation(125) at 0", "Insert QualifiedName: chr.length(124) into MethodInvocation(125) at 1", "Insert SimpleName: n(128) into VariableDeclarationFragment(133) at 0", "Move MethodInvocation(106) into VariableDeclarationFragment(133) at 1", "Insert SimpleName: afterRead(135) into MethodInvocation(137) at 0", "Insert SimpleName: n(136) into MethodInvocation(137) at 1", "Insert SimpleName: beforeRead(193) into MethodInvocation(195) at 0", "Insert SimpleName: len(194) into MethodInvocation(195) at 1", "Insert SimpleName: n(198) into VariableDeclarationFragment(205) at 0", "Insert MethodInvocation(204) into VariableDeclarationFragment(205) at 1", "Insert SimpleName: afterRead(207) into MethodInvocation(209) at 0", "Insert SimpleName: n(208) into MethodInvocation(209) at 1", "Insert SimpleName: beforeRead(254) into MethodInvocation(258) at 0", "Insert MethodInvocation(257) into MethodInvocation(258) at 1", "Insert SimpleName: n(261) into VariableDeclarationFragment(266) at 0", "Move MethodInvocation(211) into VariableDeclarationFragment(266) at 1", "Insert SimpleName: afterRead(268) into MethodInvocation(270) at 0", "Insert SimpleName: n(269) into MethodInvocation(270) at 1", "Insert ArrayType: char[](495) into MethodRefParameter(496) at 0", "Insert PrimitiveType: long(508) into MethodRefParameter(509) at 0", "Insert PrimitiveType: long(548) into MethodRefParameter(549) at 0", "Insert InfixExpression: !=(74) into ConditionalExpression(78) at 0", "Insert NumberLiteral: 1(75) into ConditionalExpression(78) at 1", "Insert PrefixExpression: -(77) into ConditionalExpression(78) at 2", "Move SimpleName: in(160) into MethodInvocation(204) at 0", "Move SimpleName: read(161) into MethodInvocation(204) at 1", "Move SimpleName: chr(162) into MethodInvocation(204) at 2", "Move SimpleName: st(163) into MethodInvocation(204) at 3", "Update SimpleName: end(164) to len", "Move SimpleName: end(164) into MethodInvocation(204) at 4", "Insert SimpleName: target(255) into MethodInvocation(257) at 0", "Insert SimpleName: length(256) into MethodInvocation(257) at 1", "Insert PrimitiveType: char(493) into ArrayType: char[](495) at 0", "Insert Dimension(494) into ArrayType: char[](495) at 1", "Insert SimpleName: c(71) into InfixExpression: !=(74) at 0", "Insert PrefixExpression: -(73) into InfixExpression: !=(74) at 1", "Insert NumberLiteral: 1(76) into PrefixExpression: -(77) at 0", "Insert NumberLiteral: 1(72) into PrefixExpression: -(73) at 0", "Delete MethodInvocation(165)", "Delete ReturnStatement(166)"]}}, {"ProxyWriter_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS SimpleType: IOException to MethodDeclaration at 5", "INS TextElement:  method, buffer to TagElement at 3", "INS MethodRefParameter to MethodRef at 1", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @link to TagElement at 5", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS Block to MethodDeclaration at 6", "INS TextElement: functionality without having to override all the write methods. to TagElement at 9", "INS PrimitiveType: char to ArrayType: char[] at 0", "INS TextElement: Subclasses can override this method to add common pre-processing to TagElement at 8", "INS Modifier: protected to MethodDeclaration at 1", "INS ArrayType: char[] to MethodRefParameter at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS TextElement: The default implementation does nothing. to TagElement at 10", "INS SimpleName: n to TagElement: @param at 0", "INS SimpleName: IOException to TagElement: @throws at 0", "INS TextElement: , etc.) is given as an argument. to TagElement at 6", "INS TagElement: @throws to Javadoc at 3", "INS SimpleName: n to SingleVariableDeclaration at 1", "INS TextElement:  number of chars to be written to TagElement: @param at 1", "INS TextElement: of chars to be written (1 for the  to TagElement at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS TextElement:  if the pre-processing fails to TagElement: @throws at 1", "INS Dimension to ArrayType: char[] at 1", "INS MethodRef to TagElement: @link at 0", "INS TagElement: @since to Javadoc at 1", "INS TextElement: Invoked by the write methods before the call is proxied. The number to TagElement at 0", "INS SimpleName: write to MethodRef at 0", "INS MethodRef to TagElement: @link at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: int to MethodRefParameter at 0", "INS TextElement: <p> to TagElement at 7", "INS SimpleName: write to MethodRef at 0", "INS TextElement:  Commons IO 2.0 to TagElement: @since at 0", "INS MethodRefParameter to MethodRef at 1", "INS TagElement: @link to TagElement at 2", "INS TextElement: length for  to TagElement at 4", "INS SimpleName: beforeWrite to MethodDeclaration at 3", "INS TagElement to Javadoc at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS TagElement to Javadoc at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ArrayType: char[] to MethodRefParameter at 0", "INS TextElement: etc.) is given as an argument. to TagElement at 6", "INS PrimitiveType: int to MethodRefParameter at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 6", "INS MethodRefParameter to MethodRef at 1", "INS SimpleName: afterWrite to MethodDeclaration at 3", "INS MethodRef to TagElement: @link at 0", "INS TextElement:  if the post-processing fails to TagElement: @throws at 1", "INS TextElement: successfully. The number of chars written (1 for the to TagElement at 1", "INS SimpleName: n to SingleVariableDeclaration at 1", "INS SimpleName: write to MethodRef at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS TagElement: @link to TagElement at 4", "INS TagElement: @throws to Javadoc at 3", "INS TextElement:  method, buffer length for  to TagElement at 3", "INS Dimension to ArrayType: char[] at 1", "INS MethodRefParameter to MethodRef at 1", "INS TagElement: @link to TagElement at 2", "INS TagElement: @param to Javadoc at 2", "INS SimpleType: IOException to MethodDeclaration at 5", "INS TextElement:  number of chars written to TagElement: @param at 1", "INS TextElement: Invoked by the write methods after the proxied call has returned to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS TextElement: functionality without having to override all the write methods. to TagElement at 9", "INS MethodRef to TagElement: @link at 0", "INS TagElement: @since to Javadoc at 1", "INS PrimitiveType: char to ArrayType: char[] at 0", "INS TextElement: , to TagElement at 5", "INS TextElement: <p> to TagElement at 7", "INS TextElement: Subclasses can override this method to add common post-processing to TagElement at 8", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS TextElement: The default implementation does nothing. to TagElement at 10", "INS SimpleName: write to MethodRef at 0", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: IOException to TagElement: @throws at 0", "INS TextElement:  Commons IO 2.0 to TagElement: @since at 0", "INS SimpleName: n to TagElement: @param at 0"]}, {"root": "UPDATE from end to len", "operations": ["UPD SimpleName: end from end to len", "UPD SimpleName: end from end to len", "UPD SimpleName: end from end to len", "UPD SimpleName: end from end to len", "UPD SimpleName: end from end to len", "UPD SimpleName: end from end to len"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS NumberLiteral: 1 to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: beforeWrite to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: afterWrite to MethodInvocation at 0", "INS NumberLiteral: 1 to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: end to InfixExpression: - at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: - to MethodInvocation at 1", "INS SimpleName: start to InfixExpression: - at 1", "INS SimpleName: beforeWrite to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: - to MethodInvocation at 1", "INS SimpleName: afterWrite to MethodInvocation at 0", "INS SimpleName: end to InfixExpression: - at 0", "INS SimpleName: start to InfixExpression: - at 1", "INS ExpressionStatement to Block at 2"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: csq to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: length to MethodInvocation at 1", "INS SimpleName: beforeWrite to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: afterWrite to MethodInvocation at 0", "INS SimpleName: length to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: csq to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS NumberLiteral: 1 to MethodInvocation at 1", "INS SimpleName: beforeWrite to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: afterWrite to MethodInvocation at 0", "INS NumberLiteral: 1 to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS QualifiedName: chr.length to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: beforeWrite to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS QualifiedName: chr.length to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: afterWrite to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: len to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: beforeWrite to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: afterWrite to MethodInvocation at 0", "INS SimpleName: len to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: beforeWrite to MethodInvocation at 0", "INS SimpleName: str to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: length to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: length to MethodInvocation at 1", "INS SimpleName: afterWrite to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: str to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: beforeWrite to MethodInvocation at 0", "INS SimpleName: len to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS SimpleName: afterWrite to MethodInvocation at 0", "INS SimpleName: len to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}]}}, {"ProxyWriter_diff": {"operations": ["Insert MethodDeclaration(593) into TypeDeclaration: class(662) at 15", "Insert MethodDeclaration(634) into TypeDeclaration: class(662) at 16", "Insert Javadoc(583) into MethodDeclaration(593) at 0", "Insert Modifier: protected(584) into MethodDeclaration(593) at 1", "Insert PrimitiveType: void(585) into MethodDeclaration(593) at 2", "Insert SimpleName: beforeWrite(586) into MethodDeclaration(593) at 3", "Insert SingleVariableDeclaration(589) into MethodDeclaration(593) at 4", "Insert SimpleType: IOException(591) into MethodDeclaration(593) at 5", "Insert Block(592) into MethodDeclaration(593) at 6", "Insert Javadoc(624) into MethodDeclaration(634) at 0", "Insert Modifier: protected(625) into MethodDeclaration(634) at 1", "Insert PrimitiveType: void(626) into MethodDeclaration(634) at 2", "Insert SimpleName: afterWrite(627) into MethodDeclaration(634) at 3", "Insert SingleVariableDeclaration(630) into MethodDeclaration(634) at 4", "Insert SimpleType: IOException(632) into MethodDeclaration(634) at 5", "Insert Block(633) into MethodDeclaration(634) at 6", "Update SimpleName: end(298) to len", "Update SimpleName: end(390) to len", "Insert TagElement(574) into Javadoc(583) at 0", "Insert TagElement: @since(576) into Javadoc(583) at 1", "Insert TagElement: @param(579) into Javadoc(583) at 2", "Insert TagElement: @throws(582) into Javadoc(583) at 3", "Insert PrimitiveType: int(587) into SingleVariableDeclaration(589) at 0", "Insert SimpleName: n(588) into SingleVariableDeclaration(589) at 1", "Insert SimpleName: IOException(590) into SimpleType: IOException(591) at 0", "Insert TagElement(615) into Javadoc(624) at 0", "Insert TagElement: @since(617) into Javadoc(624) at 1", "Insert TagElement: @param(620) into Javadoc(624) at 2", "Insert TagElement: @throws(623) into Javadoc(624) at 3", "Insert PrimitiveType: int(628) into SingleVariableDeclaration(630) at 0", "Insert SimpleName: n(629) into SingleVariableDeclaration(630) at 1", "Insert SimpleName: IOException(631) into SimpleType: IOException(632) at 0", "Update SimpleName: end(277) to len", "Move CatchClause(411) into TryStatement(376) at 1", "Update SimpleName: end(370) to len", "Move CatchClause(319) into TryStatement(488) at 1", "Insert TextElement: Invoked by the write methods before the call is proxied. The number(553) into TagElement(574) at 0", "Insert TextElement: of chars to be written (1 for the (554) into TagElement(574) at 1", "Insert TagElement: @link(559) into TagElement(574) at 2", "Insert TextElement:  method, buffer(560) into TagElement(574) at 3", "Insert TextElement: length for (561) into TagElement(574) at 4", "Insert TagElement: @link(568) into TagElement(574) at 5", "Insert TextElement: , etc.) is given as an argument.(569) into TagElement(574) at 6", "Insert TextElement: <p>(570) into TagElement(574) at 7", "Insert TextElement: Subclasses can override this method to add common pre-processing(571) into TagElement(574) at 8", "Insert TextElement: functionality without having to override all the write methods.(572) into TagElement(574) at 9", "Insert TextElement: The default implementation does nothing.(573) into TagElement(574) at 10", "Insert TextElement:  Commons IO 2.0(575) into TagElement: @since(576) at 0", "Insert SimpleName: n(577) into TagElement: @param(579) at 0", "Insert TextElement:  number of chars to be written(578) into TagElement: @param(579) at 1", "Insert SimpleName: IOException(580) into TagElement: @throws(582) at 0", "Insert TextElement:  if the pre-processing fails(581) into TagElement: @throws(582) at 1", "Insert TextElement: Invoked by the write methods after the proxied call has returned(594) into TagElement(615) at 0", "Insert TextElement: successfully. The number of chars written (1 for the(595) into TagElement(615) at 1", "Insert TagElement: @link(600) into TagElement(615) at 2", "Insert TextElement:  method, buffer length for (601) into TagElement(615) at 3", "Insert TagElement: @link(608) into TagElement(615) at 4", "Insert TextElement: ,(609) into TagElement(615) at 5", "Insert TextElement: etc.) is given as an argument.(610) into TagElement(615) at 6", "Insert TextElement: <p>(611) into TagElement(615) at 7", "Insert TextElement: Subclasses can override this method to add common post-processing(612) into TagElement(615) at 8", "Insert TextElement: functionality without having to override all the write methods.(613) into TagElement(615) at 9", "Insert TextElement: The default implementation does nothing.(614) into TagElement(615) at 10", "Insert TextElement:  Commons IO 2.0(616) into TagElement: @since(617) at 0", "Insert SimpleName: n(618) into TagElement: @param(620) at 0", "Insert TextElement:  number of chars written(619) into TagElement: @param(620) at 1", "Insert SimpleName: IOException(621) into TagElement: @throws(623) at 0", "Insert TextElement:  if the post-processing fails(622) into TagElement: @throws(623) at 1", "Insert ExpressionStatement(67) into Block(77) at 0", "Insert ExpressionStatement(76) into Block(77) at 2", "Insert ExpressionStatement(135) into Block(149) at 0", "Insert ExpressionStatement(148) into Block(149) at 2", "Insert ExpressionStatement(195) into Block(207) at 0", "Insert ExpressionStatement(206) into Block(207) at 2", "Insert ExpressionStatement(245) into Block(255) at 0", "Insert ExpressionStatement(254) into Block(255) at 2", "Insert ExpressionStatement(293) into Block(303) at 0", "Insert ExpressionStatement(302) into Block(303) at 2", "Insert ExpressionStatement(353) into Block(365) at 0", "Insert ExpressionStatement(364) into Block(365) at 2", "Insert ExpressionStatement(404) into Block(416) at 0", "Insert ExpressionStatement(415) into Block(416) at 2", "Insert ExpressionStatement(465) into Block(477) at 0", "Insert ExpressionStatement(476) into Block(477) at 2", "Insert MethodRef(558) into TagElement: @link(559) at 0", "Insert MethodRef(567) into TagElement: @link(568) at 0", "Insert MethodRef(599) into TagElement: @link(600) at 0", "Insert MethodRef(607) into TagElement: @link(608) at 0", "Insert MethodInvocation(66) into ExpressionStatement(67) at 0", "Insert MethodInvocation(75) into ExpressionStatement(76) at 0", "Insert MethodInvocation(134) into ExpressionStatement(135) at 0", "Insert MethodInvocation(147) into ExpressionStatement(148) at 0", "Insert MethodInvocation(194) into ExpressionStatement(195) at 0", "Insert MethodInvocation(205) into ExpressionStatement(206) at 0", "Insert MethodInvocation(244) into ExpressionStatement(245) at 0", "Insert MethodInvocation(253) into ExpressionStatement(254) at 0", "Insert MethodInvocation(292) into ExpressionStatement(293) at 0", "Insert MethodInvocation(301) into ExpressionStatement(302) at 0", "Insert MethodInvocation(352) into ExpressionStatement(353) at 0", "Insert MethodInvocation(363) into ExpressionStatement(364) at 0", "Insert MethodInvocation(403) into ExpressionStatement(404) at 0", "Insert MethodInvocation(414) into ExpressionStatement(415) at 0", "Insert MethodInvocation(464) into ExpressionStatement(465) at 0", "Insert MethodInvocation(475) into ExpressionStatement(476) at 0", "Insert SimpleName: write(555) into MethodRef(558) at 0", "Insert MethodRefParameter(557) into MethodRef(558) at 1", "Insert SimpleName: write(562) into MethodRef(567) at 0", "Insert MethodRefParameter(566) into MethodRef(567) at 1", "Insert SimpleName: write(596) into MethodRef(599) at 0", "Insert MethodRefParameter(598) into MethodRef(599) at 1", "Insert SimpleName: write(602) into MethodRef(607) at 0", "Insert MethodRefParameter(606) into MethodRef(607) at 1", "Insert SimpleName: beforeWrite(64) into MethodInvocation(66) at 0", "Insert NumberLiteral: 1(65) into MethodInvocation(66) at 1", "Insert SimpleName: afterWrite(73) into MethodInvocation(75) at 0", "Insert NumberLiteral: 1(74) into MethodInvocation(75) at 1", "Insert SimpleName: beforeWrite(130) into MethodInvocation(134) at 0", "Insert InfixExpression: -(133) into MethodInvocation(134) at 1", "Insert SimpleName: afterWrite(143) into MethodInvocation(147) at 0", "Insert InfixExpression: -(146) into MethodInvocation(147) at 1", "Insert SimpleName: beforeWrite(190) into MethodInvocation(194) at 0", "Insert MethodInvocation(193) into MethodInvocation(194) at 1", "Insert SimpleName: afterWrite(201) into MethodInvocation(205) at 0", "Insert MethodInvocation(204) into MethodInvocation(205) at 1", "Insert SimpleName: beforeWrite(242) into MethodInvocation(244) at 0", "Insert NumberLiteral: 1(243) into MethodInvocation(244) at 1", "Insert SimpleName: afterWrite(251) into MethodInvocation(253) at 0", "Insert NumberLiteral: 1(252) into MethodInvocation(253) at 1", "Insert SimpleName: beforeWrite(290) into MethodInvocation(292) at 0", "Insert QualifiedName: chr.length(291) into MethodInvocation(292) at 1", "Insert SimpleName: afterWrite(299) into MethodInvocation(301) at 0", "Insert QualifiedName: chr.length(300) into MethodInvocation(301) at 1", "Insert SimpleName: beforeWrite(350) into MethodInvocation(352) at 0", "Insert SimpleName: len(351) into MethodInvocation(352) at 1", "Update SimpleName: end(306) to len", "Insert SimpleName: afterWrite(361) into MethodInvocation(363) at 0", "Insert SimpleName: len(362) into MethodInvocation(363) at 1", "Insert SimpleName: beforeWrite(399) into MethodInvocation(403) at 0", "Insert MethodInvocation(402) into MethodInvocation(403) at 1", "Insert SimpleName: afterWrite(410) into MethodInvocation(414) at 0", "Insert MethodInvocation(413) into MethodInvocation(414) at 1", "Insert SimpleName: beforeWrite(462) into MethodInvocation(464) at 0", "Insert SimpleName: len(463) into MethodInvocation(464) at 1", "Update SimpleName: end(398) to len", "Insert SimpleName: afterWrite(473) into MethodInvocation(475) at 0", "Insert SimpleName: len(474) into MethodInvocation(475) at 1", "Insert PrimitiveType: int(556) into MethodRefParameter(557) at 0", "Insert ArrayType: char[](565) into MethodRefParameter(566) at 0", "Insert PrimitiveType: int(597) into MethodRefParameter(598) at 0", "Insert ArrayType: char[](605) into MethodRefParameter(606) at 0", "Insert SimpleName: end(131) into InfixExpression: -(133) at 0", "Insert SimpleName: start(132) into InfixExpression: -(133) at 1", "Insert SimpleName: end(144) into InfixExpression: -(146) at 0", "Insert SimpleName: start(145) into InfixExpression: -(146) at 1", "Insert SimpleName: csq(191) into MethodInvocation(193) at 0", "Insert SimpleName: length(192) into MethodInvocation(193) at 1", "Insert SimpleName: csq(202) into MethodInvocation(204) at 0", "Insert SimpleName: length(203) into MethodInvocation(204) at 1", "Insert SimpleName: str(400) into MethodInvocation(402) at 0", "Insert SimpleName: length(401) into MethodInvocation(402) at 1", "Insert SimpleName: str(411) into MethodInvocation(413) at 0", "Insert SimpleName: length(412) into MethodInvocation(413) at 1", "Insert PrimitiveType: char(563) into ArrayType: char[](565) at 0", "Insert Dimension(564) into ArrayType: char[](565) at 1", "Insert PrimitiveType: char(603) into ArrayType: char[](605) at 0", "Insert Dimension(604) into ArrayType: char[](605) at 1"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}