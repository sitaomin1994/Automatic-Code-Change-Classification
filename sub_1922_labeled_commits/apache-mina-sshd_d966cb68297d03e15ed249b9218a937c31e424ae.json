{"application": "apache-mina-sshd", "csha": "d966cb68297d03e15ed249b9218a937c31e424ae", "files": [{"SshConstants_cluster": {"actions": [{"root": "INS TypeDeclaration: class to TypeDeclaration: class at 67", "operations": ["INS TypeDeclaration: class to TypeDeclaration: class at 67", "INS Modifier: private to TypeDeclaration: class at 0", "INS Modifier: static to TypeDeclaration: class at 1", "INS SimpleName: LazyAmbiguousOpcodesHolder to TypeDeclaration: class at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 68", "operations": ["INS SimpleName: isAmbigouosOpcode to MethodDeclaration at 4", "INS TextElement:   to TagElement: @return at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 68", "INS SimpleName: contains to MethodInvocation at 1", "INS TagElement: @return to Javadoc at 1", "INS TextElement:  true to TagElement: @code at 0", "INS SimpleName: getAmbiguousOpcodes to MethodRef at 0", "INS SimpleName: cmd to MethodInvocation at 2", "INS TagElement: @param to Javadoc at 0", "INS TextElement:  if this value is used by several <U>different</U> messages to TagElement: @return at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS TextElement:  The command value to TagElement: @param at 1", "INS Javadoc to MethodDeclaration at 0", "INS Modifier: static to MethodDeclaration at 2", "INS SimpleName: cmd to SingleVariableDeclaration at 1", "INS TagElement: @code to TagElement: @return at 1", "INS PrimitiveType: boolean to MethodDeclaration at 3", "INS TagElement: @see to Javadoc at 2", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 6", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getAmbiguousOpcodes to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: cmd to TagElement: @param at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodRef to TagElement: @see at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 69", "operations": ["INS TagElement: @link to TagElement: @return at 1", "INS MethodDeclaration to TypeDeclaration: class at 69", "INS Javadoc to MethodDeclaration at 0", "INS StringLiteral: \"synthetic-access\" to SingleMemberAnnotation at 1", "INS SimpleName: Set to SimpleType: Set at 0", "INS TagElement: @return to Javadoc at 0", "INS TextElement:  A  to TagElement: @return at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: getAmbiguousOpcodes to MethodDeclaration at 5", "INS Modifier: public to MethodDeclaration at 2", "INS ParameterizedType: Set<Integer> to MethodDeclaration at 4", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SingleMemberAnnotation to MethodDeclaration at 1", "INS SimpleName: SuppressWarnings to SingleMemberAnnotation at 0", "INS QualifiedName: LazyAmbiguousOpcodesHolder.AMBIGUOUS_OPCODES to ReturnStatement at 0", "INS TextElement:  of opcodes that are used by several <U>different</U> messages to TagElement: @return at 2", "INS SimpleName: Set to TagElement: @link at 0", "INS Modifier: static to MethodDeclaration at 3", "INS Block to MethodDeclaration at 6", "INS SimpleType: Set to ParameterizedType: Set<Integer> at 0", "INS SimpleType: Integer to ParameterizedType: Set<Integer> at 1"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 3"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private"]}, {"root": "UPDATE from Set<String> to Set<Integer>", "operations": ["UPD ParameterizedType: Set<String> from Set<String> to Set<Integer>"]}, {"root": "UPDATE from String to Integer", "operations": ["UPD SimpleType: String from String to Integer", "UPD SimpleType: String from String to Integer", "UPD SimpleName: String from String to Integer", "UPD SimpleName: String from String to Integer"]}, {"root": "UPDATE from HashSet<String> to HashSet<Integer>", "operations": ["UPD ParameterizedType: HashSet<String> from HashSet<String> to HashSet<Integer>"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 1", "operations": ["INS SimpleName: values to MethodInvocation at 1", "INS TypeLiteral to MethodInvocation at 2", "INS MethodInvocation to ClassInstanceCreation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: SshConstants to SimpleType: SshConstants at 0", "INS SimpleType: SshConstants to TypeLiteral at 0"]}, {"root": "UPDATE from Arrays to LoggingUtils", "operations": ["UPD SimpleName: Arrays from Arrays to LoggingUtils"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"SSH_MSG_KEX_FIRST\" to MethodInvocation at 3", "MOV SimpleName: Arrays to MethodInvocation at 0", "MOV SimpleName: asList to MethodInvocation at 1"]}, {"root": "UPDATE from asList to getAmbiguousMenmonics", "operations": ["UPD SimpleName: asList from asList to getAmbiguousMenmonics"]}, {"root": "UPDATE from \"SSH_MSG_KEX_FIRST\" to \"SSH_MSG_\"", "operations": ["UPD StringLiteral: \"SSH_MSG_KEX_FIRST\" from \"SSH_MSG_KEX_FIRST\" to \"SSH_MSG_\""]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS CatchClause to TryStatement at 1", "INS Block to MethodDeclaration at 5", "INS PrefixExpression: ! to IfStatement at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS Block to CatchClause at 1", "INS Block to TryStatement at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS TryStatement to Block at 2", "INS IfStatement to Block at 1", "INS Block to IfStatement at 1", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS ReturnStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV ReturnStatement to Block at 0"]}, {"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "INS PrefixExpression: ! to ReturnStatement at 0", "operations": ["INS PrefixExpression: ! to ReturnStatement at 0"]}, {"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "UPDATE from AMBIGUOUS_OPCODES to isAmbigouosOpcode", "operations": ["UPD SimpleName: AMBIGUOUS_OPCODES from AMBIGUOUS_OPCODES to isAmbigouosOpcode"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS NullLiteral to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 1"]}, {"root": "UPDATE from contains to f", "operations": ["UPD SimpleName: contains from contains to f"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: contains to MethodInvocation at 0", "MOV SimpleName: name to MethodInvocation at 1"]}, {"root": "UPDATE from name to getByte", "operations": ["UPD SimpleName: name from name to getByte"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Arrays"]}, {"root": "DEL MethodInvocation", "operations": ["DEL StringLiteral: \"SSH_MSG_USERAUTH_PK_OK\"", "DEL MethodInvocation", "DEL StringLiteral: \"SSH_MSG_USERAUTH_INFO_REQUEST\"", "DEL StringLiteral: \"SSH_MSG_KEXDH_REPLY\"", "DEL StringLiteral: \"SSH_MSG_KEXDH_INIT\"", "DEL StringLiteral: \"SSH_MSG_KEX_DH_GEX_GROUP\"", "DEL StringLiteral: \"SSH_MSG_USERAUTH_PASSWD_CHANGEREQ\"", "DEL StringLiteral: \"SSH_MSG_KEX_DH_GEX_REQUEST_OLD\""]}, {"root": "DEL InfixExpression: &&", "operations": ["DEL ParenthesizedExpression", "DEL PrefixExpression: !", "DEL InfixExpression: &&"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"SshConstants_diff": {"operations": ["Insert TypeDeclaration: class(555) into TypeDeclaration: class(869) at 66", "Insert MethodDeclaration(582) into TypeDeclaration: class(869) at 67", "Insert MethodDeclaration(603) into TypeDeclaration: class(869) at 68", "Insert Modifier: private(523) into TypeDeclaration: class(555) at 0", "Insert Modifier: static(524) into TypeDeclaration: class(555) at 1", "Insert SimpleName: LazyAmbiguousOpcodesHolder(525) into TypeDeclaration: class(555) at 2", "Move FieldDeclaration(386) into TypeDeclaration: class(555) at 3", "Insert Javadoc(567) into MethodDeclaration(582) at 0", "Insert Modifier: public(568) into MethodDeclaration(582) at 1", "Insert Modifier: static(569) into MethodDeclaration(582) at 2", "Insert PrimitiveType: boolean(570) into MethodDeclaration(582) at 3", "Insert SimpleName: isAmbigouosOpcode(571) into MethodDeclaration(582) at 4", "Insert SingleVariableDeclaration(574) into MethodDeclaration(582) at 5", "Insert Block(581) into MethodDeclaration(582) at 6", "Insert Javadoc(588) into MethodDeclaration(603) at 0", "Insert SingleMemberAnnotation(591) into MethodDeclaration(603) at 1", "Insert Modifier: public(592) into MethodDeclaration(603) at 2", "Insert Modifier: static(593) into MethodDeclaration(603) at 3", "Insert ParameterizedType: Set<Integer>(598) into MethodDeclaration(603) at 4", "Insert SimpleName: getAmbiguousOpcodes(599) into MethodDeclaration(603) at 5", "Insert Block(602) into MethodDeclaration(603) at 6", "Update Modifier: public(356) to private", "Update ParameterizedType: Set<String>(363) to Set<Integer>", "Insert TagElement: @param(558) into Javadoc(567) at 0", "Insert TagElement: @return(563) into Javadoc(567) at 1", "Insert TagElement: @see(566) into Javadoc(567) at 2", "Insert PrimitiveType: int(572) into SingleVariableDeclaration(574) at 0", "Insert SimpleName: cmd(573) into SingleVariableDeclaration(574) at 1", "Insert ReturnStatement(580) into Block(581) at 0", "Insert TagElement: @return(587) into Javadoc(588) at 0", "Insert SimpleName: SuppressWarnings(589) into SingleMemberAnnotation(591) at 0", "Insert StringLiteral: \"synthetic-access\"(590) into SingleMemberAnnotation(591) at 1", "Insert SimpleType: Set(595) into ParameterizedType: Set<Integer>(598) at 0", "Insert SimpleType: Integer(597) into ParameterizedType: Set<Integer>(598) at 1", "Insert ReturnStatement(601) into Block(602) at 0", "Update SimpleType: String(362) to Integer", "Insert SimpleName: cmd(556) into TagElement: @param(558) at 0", "Insert TextElement:  The command value(557) into TagElement: @param(558) at 1", "Insert TextElement:  (559) into TagElement: @return(563) at 0", "Insert TagElement: @code(561) into TagElement: @return(563) at 1", "Insert TextElement:  if this value is used by several <U>different</U> messages(562) into TagElement: @return(563) at 2", "Insert MethodRef(565) into TagElement: @see(566) at 0", "Insert MethodInvocation(579) into ReturnStatement(580) at 0", "Insert TextElement:  A (583) into TagElement: @return(587) at 0", "Insert TagElement: @link(585) into TagElement: @return(587) at 1", "Insert TextElement:  of opcodes that are used by several <U>different</U> messages(586) into TagElement: @return(587) at 2", "Insert SimpleName: Set(594) into SimpleType: Set(595) at 0", "Insert SimpleName: Integer(596) into SimpleType: Integer(597) at 0", "Insert QualifiedName: LazyAmbiguousOpcodesHolder.AMBIGUOUS_OPCODES(600) into ReturnStatement(601) at 0", "Update SimpleName: String(361) to Integer", "Insert TextElement:  true(560) into TagElement: @code(561) at 0", "Insert SimpleName: getAmbiguousOpcodes(564) into MethodRef(565) at 0", "Insert MethodInvocation(576) into MethodInvocation(579) at 0", "Insert SimpleName: contains(577) into MethodInvocation(579) at 1", "Insert SimpleName: cmd(578) into MethodInvocation(579) at 2", "Insert SimpleName: Set(584) into TagElement: @link(585) at 0", "Update ParameterizedType: HashSet<String>(371) to HashSet<Integer>", "Insert MethodInvocation(550) into ClassInstanceCreation(551) at 1", "Insert SimpleName: getAmbiguousOpcodes(575) into MethodInvocation(576) at 0", "Update SimpleType: String(370) to Integer", "Insert MethodInvocation(548) into MethodInvocation(550) at 0", "Insert SimpleName: values(549) into MethodInvocation(550) at 1", "Update SimpleName: String(369) to Integer", "Update SimpleName: Arrays(372) to LoggingUtils", "Move SimpleName: Arrays(372) into MethodInvocation(548) at 0", "Update SimpleName: asList(373) to getAmbiguousMenmonics", "Move SimpleName: asList(373) into MethodInvocation(548) at 1", "Insert TypeLiteral(546) into MethodInvocation(548) at 2", "Update StringLiteral: \"SSH_MSG_KEX_FIRST\"(374) to \"SSH_MSG_\"", "Move StringLiteral: \"SSH_MSG_KEX_FIRST\"(374) into MethodInvocation(548) at 3", "Insert Block(672) into MethodDeclaration(673) at 5", "Insert SimpleType: SshConstants(545) into TypeLiteral(546) at 0", "Move VariableDeclarationStatement(596) into Block(672) at 0", "Insert IfStatement(653) into Block(672) at 1", "Insert TryStatement(671) into Block(672) at 2", "Insert SimpleName: SshConstants(544) into SimpleType: SshConstants(545) at 0", "Insert PrefixExpression: !(649) into IfStatement(653) at 0", "Insert Block(652) into IfStatement(653) at 1", "Insert Block(662) into TryStatement(671) at 0", "Insert CatchClause(670) into TryStatement(671) at 1", "Move MethodInvocation(600) into PrefixExpression: !(649) at 0", "Insert ReturnStatement(651) into Block(652) at 0", "Move ReturnStatement(608) into Block(662) at 0", "Insert SingleVariableDeclaration(666) into CatchClause(670) at 0", "Insert Block(669) into CatchClause(670) at 1", "Insert BooleanLiteral: false(650) into ReturnStatement(651) at 0", "Insert PrefixExpression: !(660) into ReturnStatement(661) at 0", "Insert SimpleType: Exception(664) into SingleVariableDeclaration(666) at 0", "Insert SimpleName: e(665) into SingleVariableDeclaration(666) at 1", "Insert ReturnStatement(668) into Block(669) at 0", "Move MethodInvocation(604) into PrefixExpression: !(660) at 0", "Insert SimpleName: Exception(663) into SimpleType: Exception(664) at 0", "Insert BooleanLiteral: false(667) into ReturnStatement(668) at 0", "Update SimpleName: AMBIGUOUS_OPCODES(601) to isAmbigouosOpcode", "Insert MethodInvocation(658) into MethodInvocation(659) at 1", "Update SimpleName: contains(602) to f", "Move SimpleName: contains(602) into MethodInvocation(658) at 0", "Update SimpleName: name(603) to getByte", "Move SimpleName: name(603) into MethodInvocation(658) at 1", "Insert NullLiteral(657) into MethodInvocation(658) at 2", "Delete QualifiedName: java.util.Arrays(4)", "Delete ImportDeclaration(5)", "Delete StringLiteral: \"SSH_MSG_KEXDH_INIT\"(375)", "Delete StringLiteral: \"SSH_MSG_KEX_DH_GEX_REQUEST_OLD\"(376)", "Delete StringLiteral: \"SSH_MSG_KEXDH_REPLY\"(377)", "Delete StringLiteral: \"SSH_MSG_KEX_DH_GEX_GROUP\"(378)", "Delete StringLiteral: \"SSH_MSG_USERAUTH_INFO_REQUEST\"(379)", "Delete StringLiteral: \"SSH_MSG_USERAUTH_PK_OK\"(380)", "Delete StringLiteral: \"SSH_MSG_USERAUTH_PASSWD_CHANGEREQ\"(381)", "Delete MethodInvocation(382)", "Delete PrefixExpression: !(605)", "Delete ParenthesizedExpression(606)", "Delete InfixExpression: &&(607)", "Delete Block(609)"]}}, {"DHGClient_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS MethodInvocation to InfixExpression: + at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: toString to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS InfixExpression: + to ReturnStatement at 0", "INS SimpleName: factory to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS StringLiteral: \"[\" to InfixExpression: + at 1", "INS StringLiteral: \"]\" to InfixExpression: + at 3", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS MethodInvocation to InfixExpression: + at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: getClass to MethodInvocation at 0", "INS SimpleName: getName to MethodInvocation at 1", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS ReturnStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 5", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: log to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: cmd to MethodInvocation at 2", "INS ThisExpression to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: session to MethodInvocation at 4", "INS StringLiteral: \"next({})[{}] process command={}\" to MethodInvocation at 2", "INS QualifiedName: KeyExchange.Utils to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 5", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: log to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: getSimpleKexOpcodeName to MethodInvocation at 1", "INS SimpleName: debug to MethodInvocation at 1", "INS SimpleName: log to MethodInvocation at 0", "INS IfStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from \"Send SSH_MSG_KEXDH_INIT\" to \"init({})[{}] Send SSH_MSG_KEXDH_INIT\"", "operations": ["UPD StringLiteral: \"Send SSH_MSG_KEXDH_INIT\" from \"Send SSH_MSG_KEXDH_INIT\" to \"init({})[{}] Send SSH_MSG_KEXDH_INIT\""]}, {"root": "INS ThisExpression to MethodInvocation at 3", "operations": ["INS ThisExpression to MethodInvocation at 3"]}, {"root": "INS SimpleName: s to MethodInvocation at 4", "operations": ["INS SimpleName: s to MethodInvocation at 4"]}, {"root": "INS MethodInvocation to InfixExpression: + at 1", "operations": ["INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: getSimpleKexOpcodeName to MethodInvocation at 1", "INS SimpleName: cmd to MethodInvocation at 2", "INS QualifiedName: KeyExchange.Utils to MethodInvocation at 0"]}, {"root": "DEL SimpleName: cmd", "operations": ["DEL SimpleName: cmd"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL StringLiteral: \"Received SSH_MSG_KEXDH_REPLY\"", "DEL MethodInvocation", "DEL SimpleName: debug", "DEL SimpleName: log"]}]}}, {"DHGClient_diff": {"operations": ["Insert MethodDeclaration(517) into TypeDeclaration: class(518) at 11", "Move VariableDeclarationStatement(423) into Block(497) at 1", "Insert MarkerAnnotation(500) into MethodDeclaration(517) at 0", "Insert Modifier: public(501) into MethodDeclaration(517) at 1", "Insert SimpleType: String(503) into MethodDeclaration(517) at 2", "Insert SimpleName: toString(504) into MethodDeclaration(517) at 3", "Insert Block(516) into MethodDeclaration(517) at 4", "Insert IfStatement(222) into Block(242) at 5", "Insert IfStatement(296) into Block(497) at 2", "Insert SimpleName: Override(499) into MarkerAnnotation(500) at 0", "Insert SimpleName: String(502) into SimpleType: String(503) at 0", "Insert ReturnStatement(515) into Block(516) at 0", "Insert MethodInvocation(213) into IfStatement(222) at 0", "Insert Block(221) into IfStatement(222) at 1", "Insert MethodInvocation(283) into IfStatement(296) at 0", "Insert Block(295) into IfStatement(296) at 1", "Insert InfixExpression: +(514) into ReturnStatement(515) at 0", "Insert SimpleName: log(211) into MethodInvocation(213) at 0", "Insert SimpleName: isDebugEnabled(212) into MethodInvocation(213) at 1", "Move ExpressionStatement(215) into Block(221) at 0", "Insert SimpleName: log(281) into MethodInvocation(283) at 0", "Insert SimpleName: isDebugEnabled(282) into MethodInvocation(283) at 1", "Insert ExpressionStatement(294) into Block(295) at 0", "Insert MethodInvocation(508) into InfixExpression: +(514) at 0", "Insert StringLiteral: \"[\"(509) into InfixExpression: +(514) at 1", "Insert MethodInvocation(512) into InfixExpression: +(514) at 2", "Insert StringLiteral: \"]\"(513) into InfixExpression: +(514) at 3", "Insert MethodInvocation(293) into ExpressionStatement(294) at 0", "Insert MethodInvocation(506) into MethodInvocation(508) at 0", "Insert SimpleName: getSimpleName(507) into MethodInvocation(508) at 1", "Insert SimpleName: factory(510) into MethodInvocation(512) at 0", "Insert SimpleName: getName(511) into MethodInvocation(512) at 1", "Update StringLiteral: \"Send SSH_MSG_KEXDH_INIT\"(213) to \"init({})[{}] Send SSH_MSG_KEXDH_INIT\"", "Insert ThisExpression(217) into MethodInvocation(219) at 3", "Insert SimpleName: s(218) into MethodInvocation(219) at 4", "Insert SimpleName: log(284) into MethodInvocation(293) at 0", "Insert SimpleName: debug(285) into MethodInvocation(293) at 1", "Insert StringLiteral: \"next({})[{}] process command={}\"(286) into MethodInvocation(293) at 2", "Insert ThisExpression(287) into MethodInvocation(293) at 3", "Insert SimpleName: session(288) into MethodInvocation(293) at 4", "Insert MethodInvocation(292) into MethodInvocation(293) at 5", "Insert SimpleName: getClass(505) into MethodInvocation(506) at 0", "Insert QualifiedName: KeyExchange.Utils(289) into MethodInvocation(292) at 0", "Insert SimpleName: getSimpleKexOpcodeName(290) into MethodInvocation(292) at 1", "Insert SimpleName: cmd(291) into MethodInvocation(292) at 2", "Insert MethodInvocation(307) into InfixExpression: +(308) at 1", "Insert QualifiedName: KeyExchange.Utils(304) into MethodInvocation(307) at 0", "Insert SimpleName: getSimpleKexOpcodeName(305) into MethodInvocation(307) at 1", "Insert SimpleName: cmd(306) into MethodInvocation(307) at 2", "Delete SimpleName: cmd(274)", "Delete SimpleName: log(280)", "Delete SimpleName: debug(281)", "Delete StringLiteral: \"Received SSH_MSG_KEXDH_REPLY\"(282)", "Delete MethodInvocation(283)", "Delete ExpressionStatement(284)"]}}, {"DHGEXClient_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS ImportDeclaration to CompilationUnit at 15", "INS QualifiedName: org.apache.sshd.common.util.SecurityUtils to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: getClass to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: factory to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS SimpleName: String to SimpleType: String at 0", "INS ReturnStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS StringLiteral: \"]\" to InfixExpression: + at 3", "INS SimpleName: toString to MethodDeclaration at 3", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS StringLiteral: \"[\" to InfixExpression: + at 1", "INS MethodInvocation to InfixExpression: + at 2", "INS SimpleName: getName to MethodInvocation at 1", "INS InfixExpression: + to ReturnStatement at 0"]}, {"root": "INS QualifiedName: SecurityUtils.MIN_DHGEX_KEY_SIZE to VariableDeclarationFragment at 1", "operations": ["INS QualifiedName: SecurityUtils.MIN_DHGEX_KEY_SIZE to VariableDeclarationFragment at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: max to FieldAccess at 1", "INS SimpleName: getMaxDHGroupExchangeKeySize to MethodInvocation at 1", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: SecurityUtils to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: min to MethodInvocation at 1", "INS QualifiedName: SecurityUtils.PREFERRED_DHGEX_KEY_SIZE to MethodInvocation at 2", "INS SimpleName: prf to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: max to MethodInvocation at 3", "INS SimpleName: Math to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 2", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: log to MethodInvocation at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: cmd to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS StringLiteral: \"next({})[{}] process command={}\" to MethodInvocation at 2", "INS ThisExpression to MethodInvocation at 3", "INS SimpleName: log to MethodInvocation at 0", "INS SimpleName: getGroupKexOpcodeName to MethodInvocation at 1", "INS SimpleName: session to MethodInvocation at 4", "INS MethodInvocation to MethodInvocation at 5", "INS QualifiedName: KeyExchange.Utils to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 7", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 7", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS MethodInvocation to InfixExpression: + at 1", "operations": ["INS SimpleName: cmd to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: + at 1", "INS QualifiedName: KeyExchange.Utils to MethodInvocation at 0", "INS SimpleName: getGroupKexOpcodeName to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: debug to MethodInvocation at 1", "MOV SimpleName: log to MethodInvocation at 0"]}, {"root": "UPDATE from debug to isDebugEnabled", "operations": ["UPD SimpleName: debug from debug to isDebugEnabled"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS MethodInvocation to InfixExpression: + at 1", "operations": ["INS QualifiedName: KeyExchange.Utils to MethodInvocation at 0", "INS SimpleName: getGroupKexOpcodeName to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: expected to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to InfixExpression: + at 4", "operations": ["INS QualifiedName: KeyExchange.Utils to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 4", "INS SimpleName: cmd to MethodInvocation at 2", "INS SimpleName: getGroupKexOpcodeName to MethodInvocation at 1"]}, {"root": "UPDATE from \"Send SSH_MSG_KEX_DH_GEX_INIT\" to \"next({})[{}] Send SSH_MSG_KEX_DH_GEX_INIT\"", "operations": ["UPD StringLiteral: \"Send SSH_MSG_KEX_DH_GEX_INIT\" from \"Send SSH_MSG_KEX_DH_GEX_INIT\" to \"next({})[{}] Send SSH_MSG_KEX_DH_GEX_INIT\""]}, {"root": "INS ThisExpression to MethodInvocation at 3", "operations": ["INS ThisExpression to MethodInvocation at 3"]}, {"root": "INS SimpleName: session to MethodInvocation at 4", "operations": ["INS SimpleName: session to MethodInvocation at 4"]}, {"root": "DEL NumberLiteral: 1024", "operations": ["DEL NumberLiteral: 1024"]}, {"root": "DEL NumberLiteral: 4096", "operations": ["DEL NumberLiteral: 4096"]}, {"root": "DEL NumberLiteral: 8192", "operations": ["DEL NumberLiteral: 8192"]}, {"root": "DEL SimpleName: expected", "operations": ["DEL SimpleName: expected"]}, {"root": "DEL SimpleName: cmd", "operations": ["DEL SimpleName: cmd"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL StringLiteral: \"Received SSH_MSG_KEX_DH_GEX_GROUP\"", "DEL ExpressionStatement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleType: Session", "DEL SimpleName: Session", "DEL MethodInvocation", "DEL SimpleName: session", "DEL SimpleName: getSession", "DEL VariableDeclarationStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: log", "DEL StringLiteral: \"Received SSH_MSG_KEX_DH_GEX_REPLY\"", "DEL SimpleName: debug", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL SimpleName: cmd", "operations": ["DEL SimpleName: cmd"]}]}}, {"DHGEXClient_diff": {"operations": ["Insert ImportDeclaration(31) into CompilationUnit(693) at 15", "Insert QualifiedName: org.apache.sshd.common.util.SecurityUtils(30) into ImportDeclaration(31) at 0", "Insert MethodDeclaration(691) into TypeDeclaration: class(692) at 17", "Insert MarkerAnnotation(674) into MethodDeclaration(691) at 0", "Insert Modifier: public(675) into MethodDeclaration(691) at 1", "Insert SimpleType: String(677) into MethodDeclaration(691) at 2", "Insert SimpleName: toString(678) into MethodDeclaration(691) at 3", "Insert Block(690) into MethodDeclaration(691) at 4", "Insert QualifiedName: SecurityUtils.MIN_DHGEX_KEY_SIZE(62) into VariableDeclarationFragment(63) at 1", "Insert ExpressionStatement(118) into Block(129) at 1", "Insert ExpressionStatement(128) into Block(129) at 2", "Move VariableDeclarationStatement(554) into Block(649) at 1", "Insert IfStatement(318) into Block(649) at 2", "Insert SimpleName: Override(673) into MarkerAnnotation(674) at 0", "Insert SimpleName: String(676) into SimpleType: String(677) at 0", "Insert ReturnStatement(689) into Block(690) at 0", "Insert Assignment: =(117) into ExpressionStatement(118) at 0", "Insert Assignment: =(127) into ExpressionStatement(128) at 0", "Insert MethodInvocation(305) into IfStatement(318) at 0", "Insert Block(317) into IfStatement(318) at 1", "Insert InfixExpression: +(688) into ReturnStatement(689) at 0", "Insert FieldAccess(113) into Assignment: =(117) at 0", "Insert MethodInvocation(116) into Assignment: =(117) at 1", "Insert FieldAccess(121) into Assignment: =(127) at 0", "Insert MethodInvocation(126) into Assignment: =(127) at 1", "Insert SimpleName: log(303) into MethodInvocation(305) at 0", "Insert SimpleName: isDebugEnabled(304) into MethodInvocation(305) at 1", "Insert ExpressionStatement(316) into Block(317) at 0", "Insert IfStatement(395) into Block(423) at 6", "Insert MethodInvocation(682) into InfixExpression: +(688) at 0", "Insert StringLiteral: \"[\"(683) into InfixExpression: +(688) at 1", "Insert MethodInvocation(686) into InfixExpression: +(688) at 2", "Insert StringLiteral: \"]\"(687) into InfixExpression: +(688) at 3", "Insert ThisExpression(111) into FieldAccess(113) at 0", "Insert SimpleName: max(112) into FieldAccess(113) at 1", "Insert SimpleName: SecurityUtils(114) into MethodInvocation(116) at 0", "Insert SimpleName: getMaxDHGroupExchangeKeySize(115) into MethodInvocation(116) at 1", "Insert ThisExpression(119) into FieldAccess(121) at 0", "Insert SimpleName: prf(120) into FieldAccess(121) at 1", "Insert SimpleName: Math(122) into MethodInvocation(126) at 0", "Insert SimpleName: min(123) into MethodInvocation(126) at 1", "Insert QualifiedName: SecurityUtils.PREFERRED_DHGEX_KEY_SIZE(124) into MethodInvocation(126) at 2", "Insert SimpleName: max(125) into MethodInvocation(126) at 3", "Insert MethodInvocation(315) into ExpressionStatement(316) at 0", "Insert MethodInvocation(386) into IfStatement(395) at 0", "Insert Block(394) into IfStatement(395) at 1", "Insert MethodInvocation(645) into InfixExpression: +(646) at 1", "Insert MethodInvocation(680) into MethodInvocation(682) at 0", "Insert SimpleName: getSimpleName(681) into MethodInvocation(682) at 1", "Insert SimpleName: factory(684) into MethodInvocation(686) at 0", "Insert SimpleName: getName(685) into MethodInvocation(686) at 1", "Insert SimpleName: log(306) into MethodInvocation(315) at 0", "Insert SimpleName: debug(307) into MethodInvocation(315) at 1", "Insert StringLiteral: \"next({})[{}] process command={}\"(308) into MethodInvocation(315) at 2", "Insert ThisExpression(309) into MethodInvocation(315) at 3", "Insert SimpleName: session(310) into MethodInvocation(315) at 4", "Insert MethodInvocation(314) into MethodInvocation(315) at 5", "Move SimpleName: log(296) into MethodInvocation(386) at 0", "Update SimpleName: debug(297) to isDebugEnabled", "Move SimpleName: debug(297) into MethodInvocation(386) at 1", "Move ExpressionStatement(346) into Block(394) at 0", "Insert QualifiedName: KeyExchange.Utils(642) into MethodInvocation(645) at 0", "Insert SimpleName: getGroupKexOpcodeName(643) into MethodInvocation(645) at 1", "Insert SimpleName: cmd(644) into MethodInvocation(645) at 2", "Insert SimpleName: getClass(679) into MethodInvocation(680) at 0", "Insert QualifiedName: KeyExchange.Utils(311) into MethodInvocation(314) at 0", "Insert SimpleName: getGroupKexOpcodeName(312) into MethodInvocation(314) at 1", "Insert SimpleName: cmd(313) into MethodInvocation(314) at 2", "Insert MethodInvocation(329) into InfixExpression: +(335) at 1", "Insert MethodInvocation(334) into InfixExpression: +(335) at 3", "Insert QualifiedName: KeyExchange.Utils(326) into MethodInvocation(329) at 0", "Insert SimpleName: getGroupKexOpcodeName(327) into MethodInvocation(329) at 1", "Insert SimpleName: expected(328) into MethodInvocation(329) at 2", "Insert QualifiedName: KeyExchange.Utils(331) into MethodInvocation(334) at 0", "Insert SimpleName: getGroupKexOpcodeName(332) into MethodInvocation(334) at 1", "Insert SimpleName: cmd(333) into MethodInvocation(334) at 2", "Update StringLiteral: \"Send SSH_MSG_KEX_DH_GEX_INIT\"(344) to \"next({})[{}] Send SSH_MSG_KEX_DH_GEX_INIT\"", "Insert ThisExpression(390) into MethodInvocation(392) at 3", "Insert SimpleName: session(391) into MethodInvocation(392) at 4", "Delete NumberLiteral: 1024(60)", "Delete NumberLiteral: 4096(66)", "Delete NumberLiteral: 8192(72)", "Delete SimpleName: expected(285)", "Delete SimpleName: cmd(287)", "Delete StringLiteral: \"Received SSH_MSG_KEX_DH_GEX_GROUP\"(298)", "Delete MethodInvocation(299)", "Delete ExpressionStatement(300)", "Delete SimpleName: Session(347)", "Delete SimpleType: Session(348)", "Delete SimpleName: session(349)", "Delete SimpleName: getSession(350)", "Delete MethodInvocation(351)", "Delete VariableDeclarationFragment(352)", "Delete VariableDeclarationStatement(353)", "Delete SimpleName: log(386)", "Delete SimpleName: debug(387)", "Delete StringLiteral: \"Received SSH_MSG_KEX_DH_GEX_REPLY\"(388)", "Delete MethodInvocation(389)", "Delete ExpressionStatement(390)", "Delete SimpleName: cmd(612)"]}}, {"BuiltinDHFactories_cluster": {"actions": [{"root": "INS MethodDeclaration to AnonymousClassDeclaration at 2", "operations": ["INS MethodDeclaration to AnonymousClassDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: SecurityUtils to MethodInvocation at 0", "INS SimpleName: isDHGroupExchangeSupported to MethodInvocation at 1", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: isSupported to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "UPDATE from isBouncyCastleRegistered to isDHGroupExchangeSupported", "operations": ["UPD SimpleName: isBouncyCastleRegistered from isBouncyCastleRegistered to isDHGroupExchangeSupported"]}]}}, {"BuiltinDHFactories_diff": {"operations": ["Insert MethodDeclaration(244) into AnonymousClassDeclaration(245) at 2", "Insert MarkerAnnotation(235) into MethodDeclaration(244) at 0", "Insert Modifier: public(236) into MethodDeclaration(244) at 1", "Insert PrimitiveType: boolean(237) into MethodDeclaration(244) at 2", "Insert SimpleName: isSupported(238) into MethodDeclaration(244) at 3", "Insert Block(243) into MethodDeclaration(244) at 4", "Insert SimpleName: Override(234) into MarkerAnnotation(235) at 0", "Insert ReturnStatement(242) into Block(243) at 0", "Insert MethodInvocation(241) into ReturnStatement(242) at 0", "Insert SimpleName: SecurityUtils(239) into MethodInvocation(241) at 0", "Insert SimpleName: isDHGroupExchangeSupported(240) into MethodInvocation(241) at 1", "Update SimpleName: isBouncyCastleRegistered(311) to isDHGroupExchangeSupported"]}}, {"KeyExchange_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: java.util.Map to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.apache.sshd.common.SshConstants to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: org.apache.sshd.common.util.GenericUtils to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: org.apache.sshd.common.util.logging.LoggingUtils to ImportDeclaration at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: interface at 9", "operations": ["INS SimpleName: isEmpty to MethodInvocation at 1", "INS ParameterizedType: Map<Integer,String> to FieldDeclaration at 3", "INS SimpleName: SshConstants to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: get to MethodInvocation at 1", "INS Block to MethodDeclaration at 5", "INS TextElement: A helper class for key exchange related operations to TagElement at 0", "INS SimpleName: cmd to MethodInvocation at 2", "INS FieldDeclaration to TypeDeclaration: class at 3", "INS SimpleName: name to ReturnStatement at 0", "INS Block to IfStatement at 2", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: SshConstants to SimpleType: SshConstants at 0", "INS Modifier: public to MethodDeclaration at 0", "INS Modifier: static to MethodDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: Integer to ParameterizedType: Map<Integer,String> at 1", "INS SimpleName: cmd to SingleVariableDeclaration at 1", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS Modifier: public to FieldDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: getSimpleKexOpcodeName to MethodDeclaration at 3", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: SIMPLE_KEX_OPCODES_MAP to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS IfStatement to Block at 1", "INS SimpleName: getGroupKexOpcodeName to MethodDeclaration at 3", "INS SimpleType: String to ParameterizedType: Map<Integer,String> at 2", "INS SimpleName: cmd to SingleVariableDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS StringLiteral: \"SSH_MSG_KEXDH_\" to MethodInvocation at 3", "INS SimpleType: String to ParameterizedType: Map<Integer,String> at 2", "INS SimpleName: generateMnemonicMap to MethodInvocation at 1", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: name to VariableDeclarationFragment at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: cmd to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Utils to TypeDeclaration: class at 2", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS TagElement to Javadoc at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 2", "INS StringLiteral: \"SSH_MSG_KEX_DH_GEX_\" to MethodInvocation at 3", "INS SimpleName: generateMnemonicMap to MethodInvocation at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: GROUP_KEX_OPCODES_MAP to MethodInvocation at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS IfStatement to Block at 1", "INS SimpleType: Map to ParameterizedType: Map<Integer,String> at 0", "INS SimpleName: cmd to MethodInvocation at 2", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: GenericUtils to MethodInvocation at 0", "INS ThrowStatement to Block at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleType: SshConstants to TypeLiteral at 0", "INS SimpleName: name to VariableDeclarationFragment at 0", "INS MethodInvocation to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleName: get to MethodInvocation at 1", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: SshConstants to MethodInvocation at 0", "INS TagElement: @author to Javadoc at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: SshConstants to SimpleType: SshConstants at 0", "INS SimpleName: LoggingUtils to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS StringLiteral: \"No instance allowed\" to ClassInstanceCreation at 1", "INS SimpleType: Integer to ParameterizedType: Map<Integer,String> at 1", "INS TypeDeclaration: class to TypeDeclaration: interface at 9", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: cmd to MethodInvocation at 2", "INS Javadoc to TypeDeclaration: class at 0", "INS Block to IfStatement at 1", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS SimpleType: Map to ParameterizedType: Map<Integer,String> at 0", "INS SimpleName: GROUP_KEX_OPCODES_MAP to VariableDeclarationFragment at 0", "INS TextElement:  <a href=\"mailto:dev@mina.apache.org\">Apache MINA SSHD Project</a> to TagElement: @author at 0", "INS SimpleName: getCommandMessageName to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleType: SshConstants to TypeLiteral at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 2", "INS SimpleName: getCommandMessageName to MethodInvocation at 1", "INS SimpleName: SIMPLE_KEX_OPCODES_MAP to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS ReturnStatement to Block at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS SimpleName: GenericUtils to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: name to ReturnStatement at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: name to MethodInvocation at 2", "INS ParameterizedType: Map<Integer,String> to FieldDeclaration at 3", "INS SimpleName: LoggingUtils to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS Modifier: final to FieldDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Map to SimpleType: Map at 0", "INS TypeLiteral to MethodInvocation at 2", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS Modifier: static to MethodDeclaration at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: name to MethodInvocation at 2", "INS SimpleName: Utils to MethodDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS TypeLiteral to MethodInvocation at 2", "INS Modifier: final to TypeDeclaration: class at 1"]}]}}, {"KeyExchange_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(268) at 2", "Insert ImportDeclaration(7) into CompilationUnit(268) at 3", "Insert ImportDeclaration(13) into CompilationUnit(268) at 6", "Insert ImportDeclaration(17) into CompilationUnit(268) at 8", "Insert QualifiedName: java.util.Map(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: org.apache.sshd.common.SshConstants(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: org.apache.sshd.common.util.GenericUtils(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: org.apache.sshd.common.util.logging.LoggingUtils(16) into ImportDeclaration(17) at 0", "Insert TypeDeclaration: class(266) into TypeDeclaration: interface(267) at 9", "Insert Javadoc(148) into TypeDeclaration: class(266) at 0", "Insert Modifier: final(149) into TypeDeclaration: class(266) at 1", "Insert SimpleName: Utils(150) into TypeDeclaration: class(266) at 2", "Insert FieldDeclaration(170) into TypeDeclaration: class(266) at 3", "Insert FieldDeclaration(190) into TypeDeclaration: class(266) at 4", "Insert MethodDeclaration(199) into TypeDeclaration: class(266) at 5", "Insert MethodDeclaration(232) into TypeDeclaration: class(266) at 6", "Insert MethodDeclaration(265) into TypeDeclaration: class(266) at 7", "Insert TagElement(145) into Javadoc(148) at 0", "Insert TagElement: @author(147) into Javadoc(148) at 1", "Insert Modifier: public(151) into FieldDeclaration(170) at 0", "Insert Modifier: static(152) into FieldDeclaration(170) at 1", "Insert Modifier: final(153) into FieldDeclaration(170) at 2", "Insert ParameterizedType: Map<Integer,String>(160) into FieldDeclaration(170) at 3", "Insert VariableDeclarationFragment(169) into FieldDeclaration(170) at 4", "Insert Modifier: public(171) into FieldDeclaration(190) at 0", "Insert Modifier: static(172) into FieldDeclaration(190) at 1", "Insert Modifier: final(173) into FieldDeclaration(190) at 2", "Insert ParameterizedType: Map<Integer,String>(180) into FieldDeclaration(190) at 3", "Insert VariableDeclarationFragment(189) into FieldDeclaration(190) at 4", "Insert Modifier: private(191) into MethodDeclaration(199) at 0", "Insert SimpleName: Utils(192) into MethodDeclaration(199) at 1", "Insert Block(198) into MethodDeclaration(199) at 2", "Insert Modifier: public(200) into MethodDeclaration(232) at 0", "Insert Modifier: static(201) into MethodDeclaration(232) at 1", "Insert SimpleType: String(203) into MethodDeclaration(232) at 2", "Insert SimpleName: getGroupKexOpcodeName(204) into MethodDeclaration(232) at 3", "Insert SingleVariableDeclaration(207) into MethodDeclaration(232) at 4", "Insert Block(231) into MethodDeclaration(232) at 5", "Insert Modifier: public(233) into MethodDeclaration(265) at 0", "Insert Modifier: static(234) into MethodDeclaration(265) at 1", "Insert SimpleType: String(236) into MethodDeclaration(265) at 2", "Insert SimpleName: getSimpleKexOpcodeName(237) into MethodDeclaration(265) at 3", "Insert SingleVariableDeclaration(240) into MethodDeclaration(265) at 4", "Insert Block(264) into MethodDeclaration(265) at 5", "Insert TextElement: A helper class for key exchange related operations(144) into TagElement(145) at 0", "Insert TextElement:  <a href=\"mailto:dev@mina.apache.org\">Apache MINA SSHD Project</a>(146) into TagElement: @author(147) at 0", "Insert SimpleType: Map(155) into ParameterizedType: Map<Integer,String>(160) at 0", "Insert SimpleType: Integer(157) into ParameterizedType: Map<Integer,String>(160) at 1", "Insert SimpleType: String(159) into ParameterizedType: Map<Integer,String>(160) at 2", "Insert SimpleName: GROUP_KEX_OPCODES_MAP(161) into VariableDeclarationFragment(169) at 0", "Insert MethodInvocation(168) into VariableDeclarationFragment(169) at 1", "Insert SimpleType: Map(175) into ParameterizedType: Map<Integer,String>(180) at 0", "Insert SimpleType: Integer(177) into ParameterizedType: Map<Integer,String>(180) at 1", "Insert SimpleType: String(179) into ParameterizedType: Map<Integer,String>(180) at 2", "Insert SimpleName: SIMPLE_KEX_OPCODES_MAP(181) into VariableDeclarationFragment(189) at 0", "Insert MethodInvocation(188) into VariableDeclarationFragment(189) at 1", "Insert ThrowStatement(197) into Block(198) at 0", "Insert SimpleName: String(202) into SimpleType: String(203) at 0", "Insert PrimitiveType: int(205) into SingleVariableDeclaration(207) at 0", "Insert SimpleName: cmd(206) into SingleVariableDeclaration(207) at 1", "Insert VariableDeclarationStatement(216) into Block(231) at 0", "Insert IfStatement(230) into Block(231) at 1", "Insert SimpleName: String(235) into SimpleType: String(236) at 0", "Insert PrimitiveType: int(238) into SingleVariableDeclaration(240) at 0", "Insert SimpleName: cmd(239) into SingleVariableDeclaration(240) at 1", "Insert VariableDeclarationStatement(249) into Block(264) at 0", "Insert IfStatement(263) into Block(264) at 1", "Insert SimpleName: Map(154) into SimpleType: Map(155) at 0", "Insert SimpleName: Integer(156) into SimpleType: Integer(157) at 0", "Insert SimpleName: String(158) into SimpleType: String(159) at 0", "Insert SimpleName: LoggingUtils(162) into MethodInvocation(168) at 0", "Insert SimpleName: generateMnemonicMap(163) into MethodInvocation(168) at 1", "Insert TypeLiteral(166) into MethodInvocation(168) at 2", "Insert StringLiteral: \"SSH_MSG_KEX_DH_GEX_\"(167) into MethodInvocation(168) at 3", "Insert SimpleName: Map(174) into SimpleType: Map(175) at 0", "Insert SimpleName: Integer(176) into SimpleType: Integer(177) at 0", "Insert SimpleName: String(178) into SimpleType: String(179) at 0", "Insert SimpleName: LoggingUtils(182) into MethodInvocation(188) at 0", "Insert SimpleName: generateMnemonicMap(183) into MethodInvocation(188) at 1", "Insert TypeLiteral(186) into MethodInvocation(188) at 2", "Insert StringLiteral: \"SSH_MSG_KEXDH_\"(187) into MethodInvocation(188) at 3", "Insert ClassInstanceCreation(196) into ThrowStatement(197) at 0", "Insert SimpleType: String(209) into VariableDeclarationStatement(216) at 0", "Insert VariableDeclarationFragment(215) into VariableDeclarationStatement(216) at 1", "Insert MethodInvocation(220) into IfStatement(230) at 0", "Insert Block(226) into IfStatement(230) at 1", "Insert Block(229) into IfStatement(230) at 2", "Insert SimpleType: String(242) into VariableDeclarationStatement(249) at 0", "Insert VariableDeclarationFragment(248) into VariableDeclarationStatement(249) at 1", "Insert MethodInvocation(253) into IfStatement(263) at 0", "Insert Block(259) into IfStatement(263) at 1", "Insert Block(262) into IfStatement(263) at 2", "Insert SimpleType: SshConstants(165) into TypeLiteral(166) at 0", "Insert SimpleType: SshConstants(185) into TypeLiteral(186) at 0", "Insert SimpleType: UnsupportedOperationException(194) into ClassInstanceCreation(196) at 0", "Insert StringLiteral: \"No instance allowed\"(195) into ClassInstanceCreation(196) at 1", "Insert SimpleName: String(208) into SimpleType: String(209) at 0", "Insert SimpleName: name(210) into VariableDeclarationFragment(215) at 0", "Insert MethodInvocation(214) into VariableDeclarationFragment(215) at 1", "Insert SimpleName: GenericUtils(217) into MethodInvocation(220) at 0", "Insert SimpleName: isEmpty(218) into MethodInvocation(220) at 1", "Insert SimpleName: name(219) into MethodInvocation(220) at 2", "Insert ReturnStatement(225) into Block(226) at 0", "Insert ReturnStatement(228) into Block(229) at 0", "Insert SimpleName: String(241) into SimpleType: String(242) at 0", "Insert SimpleName: name(243) into VariableDeclarationFragment(248) at 0", "Insert MethodInvocation(247) into VariableDeclarationFragment(248) at 1", "Insert SimpleName: GenericUtils(250) into MethodInvocation(253) at 0", "Insert SimpleName: isEmpty(251) into MethodInvocation(253) at 1", "Insert SimpleName: name(252) into MethodInvocation(253) at 2", "Insert ReturnStatement(258) into Block(259) at 0", "Insert ReturnStatement(261) into Block(262) at 0", "Insert SimpleName: SshConstants(164) into SimpleType: SshConstants(165) at 0", "Insert SimpleName: SshConstants(184) into SimpleType: SshConstants(185) at 0", "Insert SimpleName: UnsupportedOperationException(193) into SimpleType: UnsupportedOperationException(194) at 0", "Insert SimpleName: GROUP_KEX_OPCODES_MAP(211) into MethodInvocation(214) at 0", "Insert SimpleName: get(212) into MethodInvocation(214) at 1", "Insert SimpleName: cmd(213) into MethodInvocation(214) at 2", "Insert MethodInvocation(224) into ReturnStatement(225) at 0", "Insert SimpleName: name(227) into ReturnStatement(228) at 0", "Insert SimpleName: SIMPLE_KEX_OPCODES_MAP(244) into MethodInvocation(247) at 0", "Insert SimpleName: get(245) into MethodInvocation(247) at 1", "Insert SimpleName: cmd(246) into MethodInvocation(247) at 2", "Insert MethodInvocation(257) into ReturnStatement(258) at 0", "Insert SimpleName: name(260) into ReturnStatement(261) at 0", "Insert SimpleName: SshConstants(221) into MethodInvocation(224) at 0", "Insert SimpleName: getCommandMessageName(222) into MethodInvocation(224) at 1", "Insert SimpleName: cmd(223) into MethodInvocation(224) at 2", "Insert SimpleName: SshConstants(254) into MethodInvocation(257) at 0", "Insert SimpleName: getCommandMessageName(255) into MethodInvocation(257) at 1", "Insert SimpleName: cmd(256) into MethodInvocation(257) at 2"]}}, {"DHGEXServer_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to InfixExpression: + at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to InfixExpression: + at 2", "INS StringLiteral: \"]\" to InfixExpression: + at 3", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS SimpleName: getName to MethodInvocation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: toString to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"[\" to InfixExpression: + at 1", "INS InfixExpression: + to ReturnStatement at 0", "INS SimpleName: getClass to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: factory to MethodInvocation at 0", "INS ReturnStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 10"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS ThisExpression to MethodInvocation at 3", "INS Block to IfStatement at 1", "INS SimpleName: getGroupKexOpcodeName to MethodInvocation at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS StringLiteral: \"next({})[{}] process command={}\" to MethodInvocation at 2", "INS QualifiedName: KeyExchange.Utils to MethodInvocation at 0", "INS SimpleName: session to MethodInvocation at 4", "INS MethodInvocation to MethodInvocation at 5", "INS IfStatement to Block at 2", "INS SimpleName: cmd to MethodInvocation at 2", "INS SimpleName: log to MethodInvocation at 0", "INS SimpleName: log to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 10", "operations": ["INS IfStatement to Block at 10", "INS SimpleName: log to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "INS IfStatement to Block at 9", "operations": ["INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to Block at 9"]}, {"root": "INS IfStatement to Block at 34", "operations": ["INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: log to MethodInvocation at 0", "INS IfStatement to Block at 34", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS StringLiteral: \"No random generator\" to MethodInvocation at 3", "INS SimpleName: checkNotNull to MethodInvocation at 1", "INS SimpleName: ValidateUtils to MethodInvocation at 0"]}, {"root": "INS QualifiedName: SecurityUtils.MIN_DHGEX_KEY_SIZE to MethodInvocation at 3", "operations": ["INS QualifiedName: SecurityUtils.MIN_DHGEX_KEY_SIZE to MethodInvocation at 3"]}, {"root": "INS QualifiedName: SecurityUtils.MIN_DHGEX_KEY_SIZE to MethodInvocation at 3", "operations": ["INS QualifiedName: SecurityUtils.MIN_DHGEX_KEY_SIZE to MethodInvocation at 3"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 3"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS SimpleName: SecurityUtils to MethodInvocation at 0", "INS SimpleName: getMaxDHGroupExchangeKeySize to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS QualifiedName: SecurityUtils.MIN_DHGEX_KEY_SIZE to Assignment: = at 1", "operations": ["INS QualifiedName: SecurityUtils.MIN_DHGEX_KEY_SIZE to Assignment: = at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: getMaxDHGroupExchangeKeySize to MethodInvocation at 1", "INS SimpleName: SecurityUtils to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: debug to MethodInvocation at 1", "MOV SimpleName: log to MethodInvocation at 0"]}, {"root": "UPDATE from debug to isDebugEnabled", "operations": ["UPD SimpleName: debug from debug to isDebugEnabled"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: ValidateUtils to MethodInvocation at 0", "INS SimpleName: checkNotNull to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS StringLiteral: \"No factory manager\" to MethodInvocation at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: SecurityUtils to MethodInvocation at 0", "MOV SimpleName: isBouncyCastleRegistered to MethodInvocation at 1"]}, {"root": "UPDATE from isBouncyCastleRegistered to getMaxDHGroupExchangeKeySize", "operations": ["UPD SimpleName: isBouncyCastleRegistered from isBouncyCastleRegistered to getMaxDHGroupExchangeKeySize"]}, {"root": "UPDATE from \"No suitable primes found, defaulting to DHG1\" to \"chooseDH({})[{}] No suitable primes found, defaulting to DHG1\"", "operations": ["UPD StringLiteral: \"No suitable primes found, defaulting to DHG1\" from \"No suitable primes found, defaulting to DHG1\" to \"chooseDH({})[{}] No suitable primes found, defaulting to DHG1\""]}, {"root": "INS ThisExpression to MethodInvocation at 3", "operations": ["INS ThisExpression to MethodInvocation at 3"]}, {"root": "INS SimpleName: session to MethodInvocation at 4", "operations": ["INS SimpleName: session to MethodInvocation at 4"]}, {"root": "INS MethodInvocation to InfixExpression: + at 1", "operations": ["INS SimpleName: expected to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: getGroupKexOpcodeName to MethodInvocation at 1", "INS QualifiedName: KeyExchange.Utils to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to InfixExpression: + at 4", "operations": ["INS SimpleName: getGroupKexOpcodeName to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: + at 4", "INS QualifiedName: KeyExchange.Utils to MethodInvocation at 0", "INS SimpleName: cmd to MethodInvocation at 2"]}, {"root": "UPDATE from \"Send SSH_MSG_KEX_DH_GEX_GROUP on {}\" to \"next({})[{}] send SSH_MSG_KEX_DH_GEX_GROUP\"", "operations": ["UPD StringLiteral: \"Send SSH_MSG_KEX_DH_GEX_GROUP on {}\" from \"Send SSH_MSG_KEX_DH_GEX_GROUP on {}\" to \"next({})[{}] send SSH_MSG_KEX_DH_GEX_GROUP\""]}, {"root": "INS ThisExpression to MethodInvocation at 3", "operations": ["INS ThisExpression to MethodInvocation at 3"]}, {"root": "UPDATE from \"Send SSH_MSG_KEX_DH_GEX_GROUP on {}\" to \"next({})[{}] Send SSH_MSG_KEX_DH_GEX_GROUP\"", "operations": ["UPD StringLiteral: \"Send SSH_MSG_KEX_DH_GEX_GROUP on {}\" from \"Send SSH_MSG_KEX_DH_GEX_GROUP on {}\" to \"next({})[{}] Send SSH_MSG_KEX_DH_GEX_GROUP\""]}, {"root": "INS ThisExpression to MethodInvocation at 3", "operations": ["INS ThisExpression to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: session to MethodInvocation at 0", "MOV SimpleName: getFactoryManager to MethodInvocation at 1"]}, {"root": "UPDATE from \"{}[K_S]:  {}\" to \"next({})[{}][K_S]:  {}\"", "operations": ["UPD StringLiteral: \"{}[K_S]:  {}\" from \"{}[K_S]:  {}\" to \"next({})[{}][K_S]:  {}\""]}, {"root": "INS ThisExpression to MethodInvocation at 3", "operations": ["INS ThisExpression to MethodInvocation at 3"]}, {"root": "UPDATE from \"{}[f]:    {}\" to \"next({})[{}][f]:    {}\"", "operations": ["UPD StringLiteral: \"{}[f]:    {}\" from \"{}[f]:    {}\" to \"next({})[{}][f]:    {}\""]}, {"root": "INS ThisExpression to MethodInvocation at 3", "operations": ["INS ThisExpression to MethodInvocation at 3"]}, {"root": "UPDATE from \"{}[sigH]: {}\" to \"next({})[{}][sigH]: {}\"", "operations": ["UPD StringLiteral: \"{}[sigH]: {}\" from \"{}[sigH]: {}\" to \"next({})[{}][sigH]: {}\""]}, {"root": "INS ThisExpression to MethodInvocation at 3", "operations": ["INS ThisExpression to MethodInvocation at 3"]}, {"root": "UPDATE from \"Send SSH_MSG_KEX_DH_GEX_REPLY on {}\" to \"next({})[{}] Send SSH_MSG_KEX_DH_GEX_REPLY\"", "operations": ["UPD StringLiteral: \"Send SSH_MSG_KEX_DH_GEX_REPLY on {}\" from \"Send SSH_MSG_KEX_DH_GEX_REPLY on {}\" to \"next({})[{}] Send SSH_MSG_KEX_DH_GEX_REPLY\""]}, {"root": "INS ThisExpression to MethodInvocation at 3", "operations": ["INS ThisExpression to MethodInvocation at 3"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: session", "DEL SimpleName: log", "DEL ExpressionStatement", "DEL StringLiteral: \"Received SSH_MSG_KEX_DH_GEX_REQUEST_OLD on {}\"", "DEL MethodInvocation", "DEL SimpleName: debug"]}, {"root": "DEL NumberLiteral: 1024", "operations": ["DEL NumberLiteral: 1024"]}, {"root": "DEL NumberLiteral: 8192", "operations": ["DEL NumberLiteral: 8192"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL StringLiteral: \"Received SSH_MSG_KEX_DH_GEX_REQUEST on {}\"", "DEL SimpleName: session"]}, {"root": "DEL SimpleName: expected", "operations": ["DEL SimpleName: expected"]}, {"root": "DEL SimpleName: cmd", "operations": ["DEL SimpleName: cmd"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: log", "DEL SimpleName: debug", "DEL SimpleName: session", "DEL ExpressionStatement", "DEL StringLiteral: \"Received SSH_MSG_KEX_DH_GEX_INIT on {}\"", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL NumberLiteral: 1024", "operations": ["DEL NumberLiteral: 1024"]}, {"root": "DEL NumberLiteral: 1024", "operations": ["DEL NumberLiteral: 1024"]}, {"root": "DEL ConditionalExpression", "operations": ["DEL NumberLiteral: 1024", "DEL MethodInvocation", "DEL ConditionalExpression", "DEL NumberLiteral: 8192"]}, {"root": "DEL NumberLiteral: 8192", "operations": ["DEL NumberLiteral: 8192"]}]}}, {"DHGEXServer_diff": {"operations": ["Insert MethodDeclaration(1316) into TypeDeclaration: class(1317) at 18", "Move IfStatement(1005) into Block(1108) at 10", "Insert MarkerAnnotation(1299) into MethodDeclaration(1316) at 0", "Insert Modifier: public(1300) into MethodDeclaration(1316) at 1", "Insert SimpleType: String(1302) into MethodDeclaration(1316) at 2", "Insert SimpleName: toString(1303) into MethodDeclaration(1316) at 3", "Insert Block(1315) into MethodDeclaration(1316) at 4", "Insert IfStatement(278) into Block(877) at 2", "Insert SimpleName: Override(1298) into MarkerAnnotation(1299) at 0", "Insert SimpleName: String(1301) into SimpleType: String(1302) at 0", "Insert ReturnStatement(1314) into Block(1315) at 0", "Insert MethodInvocation(265) into IfStatement(278) at 0", "Insert Block(277) into IfStatement(278) at 1", "Insert InfixExpression: +(1313) into ReturnStatement(1314) at 0", "Insert SimpleName: log(263) into MethodInvocation(265) at 0", "Insert SimpleName: isDebugEnabled(264) into MethodInvocation(265) at 1", "Insert ExpressionStatement(276) into Block(277) at 0", "Insert IfStatement(366) into Block(403) at 9", "Insert IfStatement(486) into Block(523) at 8", "Insert IfStatement(831) into Block(873) at 33", "Insert MethodInvocation(1081) into VariableDeclarationFragment(1082) at 1", "Insert MethodInvocation(1307) into InfixExpression: +(1313) at 0", "Insert StringLiteral: \"[\"(1308) into InfixExpression: +(1313) at 1", "Insert MethodInvocation(1311) into InfixExpression: +(1313) at 2", "Insert StringLiteral: \"]\"(1312) into InfixExpression: +(1313) at 3", "Insert MethodInvocation(275) into ExpressionStatement(276) at 0", "Insert MethodInvocation(357) into IfStatement(366) at 0", "Insert Block(365) into IfStatement(366) at 1", "Insert MethodInvocation(477) into IfStatement(486) at 0", "Insert Block(485) into IfStatement(486) at 1", "Insert MethodInvocation(822) into IfStatement(831) at 0", "Insert Block(830) into IfStatement(831) at 1", "Insert QualifiedName: SecurityUtils.MIN_DHGEX_KEY_SIZE(908) into MethodInvocation(909) at 3", "Insert QualifiedName: SecurityUtils.MIN_DHGEX_KEY_SIZE(916) into MethodInvocation(917) at 3", "Insert MethodInvocation(926) into MethodInvocation(927) at 3", "Insert MethodInvocation(936) into MethodInvocation(937) at 3", "Insert SimpleName: ValidateUtils(1075) into MethodInvocation(1081) at 0", "Insert SimpleName: checkNotNull(1076) into MethodInvocation(1081) at 1", "Move MethodInvocation(1045) into MethodInvocation(1081) at 2", "Insert StringLiteral: \"No random generator\"(1080) into MethodInvocation(1081) at 3", "Insert MethodInvocation(1305) into MethodInvocation(1307) at 0", "Insert SimpleName: getSimpleName(1306) into MethodInvocation(1307) at 1", "Insert SimpleName: factory(1309) into MethodInvocation(1311) at 0", "Insert SimpleName: getName(1310) into MethodInvocation(1311) at 1", "Insert SimpleName: log(266) into MethodInvocation(275) at 0", "Insert SimpleName: debug(267) into MethodInvocation(275) at 1", "Insert StringLiteral: \"next({})[{}] process command={}\"(268) into MethodInvocation(275) at 2", "Insert ThisExpression(269) into MethodInvocation(275) at 3", "Insert SimpleName: session(270) into MethodInvocation(275) at 4", "Insert MethodInvocation(274) into MethodInvocation(275) at 5", "Insert QualifiedName: SecurityUtils.MIN_DHGEX_KEY_SIZE(291) into Assignment: =(292) at 1", "Insert MethodInvocation(303) into Assignment: =(304) at 1", "Insert SimpleName: log(355) into MethodInvocation(357) at 0", "Insert SimpleName: isDebugEnabled(356) into MethodInvocation(357) at 1", "Move ExpressionStatement(348) into Block(365) at 0", "Move SimpleName: log(394) into MethodInvocation(477) at 0", "Update SimpleName: debug(395) to isDebugEnabled", "Move SimpleName: debug(395) into MethodInvocation(477) at 1", "Move ExpressionStatement(468) into Block(485) at 0", "Insert MethodInvocation(602) into VariableDeclarationFragment(603) at 1", "Insert SimpleName: log(820) into MethodInvocation(822) at 0", "Insert SimpleName: isDebugEnabled(821) into MethodInvocation(822) at 1", "Move ExpressionStatement(800) into Block(830) at 0", "Move SimpleName: SecurityUtils(893) into MethodInvocation(926) at 0", "Update SimpleName: isBouncyCastleRegistered(894) to getMaxDHGroupExchangeKeySize", "Move SimpleName: isBouncyCastleRegistered(894) into MethodInvocation(926) at 1", "Insert SimpleName: SecurityUtils(934) into MethodInvocation(936) at 0", "Insert SimpleName: getMaxDHGroupExchangeKeySize(935) into MethodInvocation(936) at 1", "Update StringLiteral: \"No suitable primes found, defaulting to DHG1\"(986) to \"chooseDH({})[{}] No suitable primes found, defaulting to DHG1\"", "Insert ThisExpression(1024) into MethodInvocation(1026) at 3", "Insert SimpleName: session(1025) into MethodInvocation(1026) at 4", "Insert SimpleName: getClass(1304) into MethodInvocation(1305) at 0", "Insert QualifiedName: KeyExchange.Utils(271) into MethodInvocation(274) at 0", "Insert SimpleName: getGroupKexOpcodeName(272) into MethodInvocation(274) at 1", "Insert SimpleName: cmd(273) into MethodInvocation(274) at 2", "Insert SimpleName: SecurityUtils(301) into MethodInvocation(303) at 0", "Insert SimpleName: getMaxDHGroupExchangeKeySize(302) into MethodInvocation(303) at 1", "Insert MethodInvocation(535) into InfixExpression: +(541) at 1", "Insert MethodInvocation(540) into InfixExpression: +(541) at 3", "Insert SimpleName: ValidateUtils(596) into MethodInvocation(602) at 0", "Insert SimpleName: checkNotNull(597) into MethodInvocation(602) at 1", "Insert MethodInvocation(600) into MethodInvocation(602) at 2", "Insert StringLiteral: \"No factory manager\"(601) into MethodInvocation(602) at 3", "Update StringLiteral: \"Send SSH_MSG_KEX_DH_GEX_GROUP on {}\"(345) to \"next({})[{}] send SSH_MSG_KEX_DH_GEX_GROUP\"", "Insert ThisExpression(361) into MethodInvocation(363) at 3", "Update StringLiteral: \"Send SSH_MSG_KEX_DH_GEX_GROUP on {}\"(465) to \"next({})[{}] Send SSH_MSG_KEX_DH_GEX_GROUP\"", "Insert ThisExpression(481) into MethodInvocation(483) at 3", "Insert QualifiedName: KeyExchange.Utils(532) into MethodInvocation(535) at 0", "Insert SimpleName: getGroupKexOpcodeName(533) into MethodInvocation(535) at 1", "Insert SimpleName: expected(534) into MethodInvocation(535) at 2", "Insert QualifiedName: KeyExchange.Utils(537) into MethodInvocation(540) at 0", "Insert SimpleName: getGroupKexOpcodeName(538) into MethodInvocation(540) at 1", "Insert SimpleName: cmd(539) into MethodInvocation(540) at 2", "Move SimpleName: session(578) into MethodInvocation(600) at 0", "Move SimpleName: getFactoryManager(579) into MethodInvocation(600) at 1", "Update StringLiteral: \"{}[K_S]:  {}\"(765) to \"next({})[{}][K_S]:  {}\"", "Insert ThisExpression(788) into MethodInvocation(794) at 3", "Update StringLiteral: \"{}[f]:    {}\"(775) to \"next({})[{}][f]:    {}\"", "Insert ThisExpression(799) into MethodInvocation(805) at 3", "Update StringLiteral: \"{}[sigH]: {}\"(785) to \"next({})[{}][sigH]: {}\"", "Insert ThisExpression(810) into MethodInvocation(816) at 3", "Update StringLiteral: \"Send SSH_MSG_KEX_DH_GEX_REPLY on {}\"(797) to \"next({})[{}] Send SSH_MSG_KEX_DH_GEX_REPLY\"", "Insert ThisExpression(826) into MethodInvocation(828) at 3", "Delete SimpleName: log(270)", "Delete SimpleName: debug(271)", "Delete StringLiteral: \"Received SSH_MSG_KEX_DH_GEX_REQUEST_OLD on {}\"(272)", "Delete SimpleName: session(273)", "Delete MethodInvocation(274)", "Delete ExpressionStatement(275)", "Delete NumberLiteral: 1024(281)", "Delete NumberLiteral: 8192(291)", "Delete StringLiteral: \"Received SSH_MSG_KEX_DH_GEX_REQUEST on {}\"(396)", "Delete SimpleName: session(397)", "Delete MethodInvocation(398)", "Delete ExpressionStatement(399)", "Delete SimpleName: expected(514)", "Delete SimpleName: cmd(516)", "Delete SimpleName: log(525)", "Delete SimpleName: debug(526)", "Delete StringLiteral: \"Received SSH_MSG_KEX_DH_GEX_INIT on {}\"(527)", "Delete SimpleName: session(528)", "Delete MethodInvocation(529)", "Delete ExpressionStatement(530)", "Delete MethodInvocation(580)", "Delete NumberLiteral: 1024(877)", "Delete NumberLiteral: 1024(885)", "Delete MethodInvocation(895)", "Delete NumberLiteral: 8192(896)", "Delete NumberLiteral: 1024(897)", "Delete ConditionalExpression(898)", "Delete NumberLiteral: 8192(906)"]}}, {"DHGServer_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS SimpleName: toString to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to InfixExpression: + at 0", "INS InfixExpression: + to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS StringLiteral: \"]\" to InfixExpression: + at 3", "INS StringLiteral: \"[\" to InfixExpression: + at 1", "INS MethodInvocation to InfixExpression: + at 2", "INS SimpleName: getName to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: factory to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: String to SimpleType: String at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: getClass to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: String to MethodDeclaration at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV IfStatement to Block at 3"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: log to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS QualifiedName: KeyExchange.Utils to MethodInvocation at 0", "INS SimpleName: session to MethodInvocation at 4", "INS Block to IfStatement at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 5", "INS SimpleName: getSimpleKexOpcodeName to MethodInvocation at 1", "INS SimpleName: cmd to MethodInvocation at 2", "INS StringLiteral: \"next({})[{}] process command={}\" to MethodInvocation at 2", "INS MethodInvocation to IfStatement at 0", "INS ThisExpression to MethodInvocation at 3", "INS IfStatement to Block at 2", "INS SimpleName: log to MethodInvocation at 0", "INS SimpleName: debug to MethodInvocation at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 10", "operations": ["INS VariableDeclarationStatement to Block at 10", "INS SimpleName: manager to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to Block at 35", "operations": ["INS Block to IfStatement at 1", "INS IfStatement to Block at 35", "INS SimpleName: log to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: isDebugEnabled to MethodInvocation at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: FactoryManager to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from log to ValidateUtils", "operations": ["UPD SimpleName: log from log to ValidateUtils"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \"Received SSH_MSG_KEXDH_INIT on {}\" to MethodInvocation at 3", "MOV SimpleName: log to MethodInvocation at 0", "MOV SimpleName: debug to MethodInvocation at 1"]}, {"root": "UPDATE from debug to checkNotNull", "operations": ["UPD SimpleName: debug from debug to checkNotNull"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from \"Received SSH_MSG_KEXDH_INIT on {}\" to \"No factory manager\"", "operations": ["UPD StringLiteral: \"Received SSH_MSG_KEXDH_INIT on {}\" from \"Received SSH_MSG_KEXDH_INIT on {}\" to \"No factory manager\""]}, {"root": "UPDATE from \"{}[K_S]:  {}\" to \"next({})[{}][K_S]:  {}\"", "operations": ["UPD StringLiteral: \"{}[K_S]:  {}\" from \"{}[K_S]:  {}\" to \"next({})[{}][K_S]:  {}\""]}, {"root": "INS ThisExpression to MethodInvocation at 3", "operations": ["INS ThisExpression to MethodInvocation at 3"]}, {"root": "UPDATE from \"{}[f]:    {}\" to \"next({})[{}][f]:    {}\"", "operations": ["UPD StringLiteral: \"{}[f]:    {}\" from \"{}[f]:    {}\" to \"next({})[{}][f]:    {}\""]}, {"root": "INS ThisExpression to MethodInvocation at 3", "operations": ["INS ThisExpression to MethodInvocation at 3"]}, {"root": "UPDATE from \"{}[sigH]: {}\" to \"next({})[{}][sigH]: {}\"", "operations": ["UPD StringLiteral: \"{}[sigH]: {}\" from \"{}[sigH]: {}\" to \"next({})[{}][sigH]: {}\""]}, {"root": "INS ThisExpression to MethodInvocation at 3", "operations": ["INS ThisExpression to MethodInvocation at 3"]}, {"root": "UPDATE from \"Send SSH_MSG_KEXDH_REPLY on {}\" to \"next({})[{}] Send SSH_MSG_KEXDH_REPLY\"", "operations": ["UPD StringLiteral: \"Send SSH_MSG_KEXDH_REPLY on {}\" from \"Send SSH_MSG_KEXDH_REPLY on {}\" to \"next({})[{}] Send SSH_MSG_KEXDH_REPLY\""]}, {"root": "INS ThisExpression to MethodInvocation at 3", "operations": ["INS ThisExpression to MethodInvocation at 3"]}, {"root": "UPDATE from \"Protocol error: expected packet \" to \"Protocol error: expected packet SSH_MSG_KEXDH_INIT, got \"", "operations": ["UPD StringLiteral: \"Protocol error: expected packet \" from \"Protocol error: expected packet \" to \"Protocol error: expected packet SSH_MSG_KEXDH_INIT, got \""]}, {"root": "INS MethodInvocation to InfixExpression: + at 1", "operations": ["INS MethodInvocation to InfixExpression: + at 1", "INS QualifiedName: KeyExchange.Utils to MethodInvocation at 0", "INS SimpleName: cmd to MethodInvocation at 2", "INS SimpleName: getSimpleKexOpcodeName to MethodInvocation at 1"]}, {"root": "DEL QualifiedName: SshConstants.SSH_MSG_KEXDH_INIT", "operations": ["DEL QualifiedName: SshConstants.SSH_MSG_KEXDH_INIT"]}, {"root": "DEL StringLiteral: \", got \"", "operations": ["DEL StringLiteral: \", got \""]}, {"root": "DEL SimpleName: cmd", "operations": ["DEL SimpleName: cmd"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: session", "DEL ExpressionStatement", "DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: manager"]}]}}, {"DHGServer_diff": {"operations": ["Insert MethodDeclaration(565) into TypeDeclaration: class(566) at 10", "Move IfStatement(237) into Block(545) at 3", "Insert MarkerAnnotation(548) into MethodDeclaration(565) at 0", "Insert Modifier: public(549) into MethodDeclaration(565) at 1", "Insert SimpleType: String(551) into MethodDeclaration(565) at 2", "Insert SimpleName: toString(552) into MethodDeclaration(565) at 3", "Insert Block(564) into MethodDeclaration(565) at 4", "Insert IfStatement(245) into Block(545) at 2", "Insert VariableDeclarationStatement(311) into Block(545) at 9", "Insert IfStatement(503) into Block(545) at 33", "Insert SimpleName: Override(547) into MarkerAnnotation(548) at 0", "Insert SimpleName: String(550) into SimpleType: String(551) at 0", "Insert ReturnStatement(563) into Block(564) at 0", "Insert MethodInvocation(232) into IfStatement(245) at 0", "Insert Block(244) into IfStatement(245) at 1", "Move SimpleType: FactoryManager(290) into VariableDeclarationStatement(311) at 0", "Insert VariableDeclarationFragment(310) into VariableDeclarationStatement(311) at 1", "Insert MethodInvocation(494) into IfStatement(503) at 0", "Insert Block(502) into IfStatement(503) at 1", "Insert InfixExpression: +(562) into ReturnStatement(563) at 0", "Insert SimpleName: log(230) into MethodInvocation(232) at 0", "Insert SimpleName: isDebugEnabled(231) into MethodInvocation(232) at 1", "Insert ExpressionStatement(243) into Block(244) at 0", "Insert SimpleName: manager(302) into VariableDeclarationFragment(310) at 0", "Insert MethodInvocation(309) into VariableDeclarationFragment(310) at 1", "Insert SimpleName: log(492) into MethodInvocation(494) at 0", "Insert SimpleName: isDebugEnabled(493) into MethodInvocation(494) at 1", "Move ExpressionStatement(479) into Block(502) at 0", "Insert MethodInvocation(556) into InfixExpression: +(562) at 0", "Insert StringLiteral: \"[\"(557) into InfixExpression: +(562) at 1", "Insert MethodInvocation(560) into InfixExpression: +(562) at 2", "Insert StringLiteral: \"]\"(561) into InfixExpression: +(562) at 3", "Insert MethodInvocation(242) into ExpressionStatement(243) at 0", "Update SimpleName: log(245) to ValidateUtils", "Move SimpleName: log(245) into MethodInvocation(309) at 0", "Update SimpleName: debug(246) to checkNotNull", "Move SimpleName: debug(246) into MethodInvocation(309) at 1", "Move MethodInvocation(294) into MethodInvocation(309) at 2", "Update StringLiteral: \"Received SSH_MSG_KEXDH_INIT on {}\"(247) to \"No factory manager\"", "Move StringLiteral: \"Received SSH_MSG_KEXDH_INIT on {}\"(247) into MethodInvocation(309) at 3", "Insert MethodInvocation(554) into MethodInvocation(556) at 0", "Insert SimpleName: getSimpleName(555) into MethodInvocation(556) at 1", "Insert SimpleName: factory(558) into MethodInvocation(560) at 0", "Insert SimpleName: getName(559) into MethodInvocation(560) at 1", "Insert SimpleName: log(233) into MethodInvocation(242) at 0", "Insert SimpleName: debug(234) into MethodInvocation(242) at 1", "Insert StringLiteral: \"next({})[{}] process command={}\"(235) into MethodInvocation(242) at 2", "Insert ThisExpression(236) into MethodInvocation(242) at 3", "Insert SimpleName: session(237) into MethodInvocation(242) at 4", "Insert MethodInvocation(241) into MethodInvocation(242) at 5", "Update StringLiteral: \"{}[K_S]:  {}\"(444) to \"next({})[{}][K_S]:  {}\"", "Insert ThisExpression(460) into MethodInvocation(466) at 3", "Update StringLiteral: \"{}[f]:    {}\"(454) to \"next({})[{}][f]:    {}\"", "Insert ThisExpression(471) into MethodInvocation(477) at 3", "Update StringLiteral: \"{}[sigH]: {}\"(464) to \"next({})[{}][sigH]: {}\"", "Insert ThisExpression(482) into MethodInvocation(488) at 3", "Update StringLiteral: \"Send SSH_MSG_KEXDH_REPLY on {}\"(476) to \"next({})[{}] Send SSH_MSG_KEXDH_REPLY\"", "Insert ThisExpression(498) into MethodInvocation(500) at 3", "Insert SimpleName: getClass(553) into MethodInvocation(554) at 0", "Insert QualifiedName: KeyExchange.Utils(238) into MethodInvocation(241) at 0", "Insert SimpleName: getSimpleKexOpcodeName(239) into MethodInvocation(241) at 1", "Insert SimpleName: cmd(240) into MethodInvocation(241) at 2", "Update StringLiteral: \"Protocol error: expected packet \"(229) to \"Protocol error: expected packet SSH_MSG_KEXDH_INIT, got \"", "Insert MethodInvocation(256) into InfixExpression: +(257) at 1", "Insert QualifiedName: KeyExchange.Utils(253) into MethodInvocation(256) at 0", "Insert SimpleName: getSimpleKexOpcodeName(254) into MethodInvocation(256) at 1", "Insert SimpleName: cmd(255) into MethodInvocation(256) at 2", "Delete QualifiedName: SshConstants.SSH_MSG_KEXDH_INIT(230)", "Delete StringLiteral: \", got \"(231)", "Delete SimpleName: cmd(232)", "Delete SimpleName: session(248)", "Delete MethodInvocation(249)", "Delete ExpressionStatement(250)", "Delete SimpleName: manager(291)", "Delete VariableDeclarationFragment(295)", "Delete VariableDeclarationStatement(296)"]}}], "commit_stats": [{"total_files": 17, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}