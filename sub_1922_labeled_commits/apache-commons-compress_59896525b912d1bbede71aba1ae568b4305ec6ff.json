{"application": "apache-commons-compress", "csha": "59896525b912d1bbede71aba1ae568b4305ec6ff", "files": [{"SevenZFile_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: java.io.FilterInputStream to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS NullLiteral to ConstructorInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS ConstructorInvocation to Block at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: filename to ConstructorInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS VariableDeclarationStatement to Block at 2", "INS SimpleName: readFully to MethodInvocation at 1", "INS ArrayAccess to VariableDeclarationFragment at 1", "INS SimpleName: folder to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 5", "INS SimpleName: folderOffset to MethodInvocation at 2", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Block to IfStatement at 1", "INS SimpleType: DataInputStream to MethodDeclaration at 1", "INS SimpleName: CRC32VerifyingInputStream to SimpleType: CRC32VerifyingInputStream at 0", "INS SimpleName: folder to MethodInvocation at 0", "INS Block to TryStatement at 0", "INS SimpleName: seek to MethodInvocation at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: readEncodedHeader to MethodDeclaration at 2", "INS SimpleName: nextHeader to MethodInvocation at 2", "INS MethodInvocation to ClassInstanceCreation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 0 to InfixExpression: + at 2", "INS Block to MethodDeclaration at 6", "INS SimpleName: folderOffset to VariableDeclarationFragment at 0", "INS SimpleName: nextHeader to VariableDeclarationFragment at 0", "INS ReturnStatement to Block at 12", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS QualifiedName: archive.packSizes to ArrayAccess at 0", "INS VariableDeclarationStatement to Block at 4", "INS SimpleType: BoundedRandomAccessFileInputStream to ClassInstanceCreation at 0", "INS Dimension to ArrayType: byte[] at 1", "INS QualifiedName: archive.packPos to InfixExpression: + at 1", "INS SimpleName: folder to MethodInvocation at 0", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: close to MethodInvocation at 1", "INS ArrayType: byte[] to ArrayCreation at 0", "INS SimpleName: inputStreamStack to ClassInstanceCreation at 1", "INS TryStatement to Block at 11", "INS QualifiedName: folder.crc to ClassInstanceCreation at 3", "INS NumberLiteral: 1 to InfixExpression: != at 1", "INS VariableDeclarationStatement to Block at 9", "INS QualifiedName: coder.numInStreams to InfixExpression: != at 0", "INS SimpleName: file to MethodInvocation at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: nextHeader to ClassInstanceCreation at 1", "INS SimpleName: file to ClassInstanceCreation at 1", "INS QualifiedName: coder.numOutStreams to InfixExpression: != at 0", "INS SimpleName: inputStreamStack to ClassInstanceCreation at 1", "INS SimpleName: firstPackStreamIndex to VariableDeclarationFragment at 0", "INS PrimitiveType: int to CastExpression at 0", "INS ClassInstanceCreation to ClassInstanceCreation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: DataInputStream to SimpleType: DataInputStream at 0", "INS SimpleName: DataInputStream to SimpleType: DataInputStream at 0", "INS SimpleName: DataInputStream to SimpleType: DataInputStream at 0", "INS QualifiedName: archive.folders to ArrayAccess at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: getUnpackSize to MethodInvocation at 1", "INS ClassInstanceCreation to Assignment: = at 1", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS Block to EnhancedForStatement at 2", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS InfixExpression: || to IfStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: nextHeaderInputStream to MethodInvocation at 0", "INS IfStatement to Block at 8", "INS MethodInvocation to ExpressionStatement at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 1", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS VariableDeclarationStatement to Block at 10", "INS Modifier: final to VariableDeclarationStatement at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS ArrayType: byte[] to VariableDeclarationStatement at 1", "INS SimpleName: firstPackStreamIndex to ArrayAccess at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS Block to TryStatement at 1", "INS SimpleName: SIGNATURE_HEADER_SIZE to InfixExpression: + at 0", "INS CastExpression to ArrayCreation at 1", "INS SimpleName: inputStreamStack to Assignment: = at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: inputStreamStack to VariableDeclarationFragment at 0", "INS SimpleType: Folder to VariableDeclarationStatement at 1", "INS EnhancedForStatement to Block at 7", "INS SimpleType: CRC32VerifyingInputStream to ClassInstanceCreation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ByteArrayInputStream to SimpleType: ByteArrayInputStream at 0", "INS VariableDeclarationStatement to Block at 6", "INS InfixExpression: != to InfixExpression: || at 0", "INS VariableDeclarationStatement to Block at 3", "INS NumberLiteral: 1 to InfixExpression: != at 1", "INS SimpleType: DataInputStream to ClassInstanceCreation at 0", "INS SimpleType: ByteArrayInputStream to ClassInstanceCreation at 0", "INS SimpleName: Folder to SimpleType: Folder at 0", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS Block to IfStatement at 1", "INS SimpleName: nextHeaderInputStream to VariableDeclarationFragment at 0", "INS SimpleType: DataInputStream to VariableDeclarationStatement at 1", "INS InfixExpression: != to InfixExpression: || at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: BoundedRandomAccessFileInputStream to SimpleType: BoundedRandomAccessFileInputStream at 0", "INS QualifiedName: folder.coders to EnhancedForStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS QualifiedName: folder.hasCrc to IfStatement at 0", "INS Modifier: private to MethodDeclaration at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ArrayAccess to ClassInstanceCreation at 2", "INS SimpleName: DataInputStream to SimpleType: DataInputStream at 0", "INS SimpleType: DataInputStream to ClassInstanceCreation at 0", "INS SimpleName: nextHeaderInputStream to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: getUnpackSize to MethodInvocation at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: IOException to MethodDeclaration at 3", "MOV Modifier: public to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SimpleName: SevenZFile to MethodDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 21"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleType: IOException to MethodDeclaration at 5"]}, {"root": "INS SimpleType: FilterInputStream to TypeDeclaration: class at 3", "operations": ["INS SimpleType: FilterInputStream to TypeDeclaration: class at 3"]}, {"root": "UPDATE from (which always uses the unsupported LZMA to (when it uses the unsupported LZMA", "operations": ["UPD TextElement: (which always uses the unsupported LZMA from (which always uses the unsupported LZMA to (when it uses the unsupported LZMA"]}, {"root": "UPDATE from 7z a -mhc=off -mx=0 [-ppassword] archive.7z files to 7z a -mhc=off [-mhe=on] -mx=0 [-ppassword] archive.7z files", "operations": ["UPD TextElement: 7z a -mhc=off -mx=0 [-ppassword] archive.7z files from 7z a -mhc=off -mx=0 [-ppassword] archive.7z files to 7z a -mhc=off [-mhe=on] -mx=0 [-ppassword] archive.7z files"]}, {"root": "UPDATE from 7z a -mhc=off -m0=LZMA2 [-ppassword] archive.7z files to 7z a -mhc=off [-mhe=on] -m0=LZMA2 [-ppassword] archive.7z files", "operations": ["UPD TextElement: 7z a -mhc=off -m0=LZMA2 [-ppassword] archive.7z files from 7z a -mhc=off -m0=LZMA2 [-ppassword] archive.7z files to 7z a -mhc=off [-mhe=on] -m0=LZMA2 [-ppassword] archive.7z files"]}, {"root": "UPDATE from 7z a -mhc=off -m0=BZIP2 [-ppassword] archive.7z files to 7z a -mhc=off [-mhe=on] -m0=BZIP2 [-ppassword] archive.7z files", "operations": ["UPD TextElement: 7z a -mhc=off -m0=BZIP2 [-ppassword] archive.7z files from 7z a -mhc=off -m0=BZIP2 [-ppassword] archive.7z files to 7z a -mhc=off [-mhe=on] -m0=BZIP2 [-ppassword] archive.7z files"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleType: String to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleName: password to SingleVariableDeclaration at 2", "operations": ["INS SimpleName: password to SingleVariableDeclaration at 2"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1", "MOV ThrowStatement to Block at 0"]}, {"root": "UPDATE from InputStream to FilterInputStream", "operations": ["UPD SimpleName: InputStream from InputStream to FilterInputStream"]}, {"root": "MOVE from SimpleType: FilterInputStream", "operations": ["MOV SimpleName: InputStream to SimpleType: FilterInputStream at 0"]}, {"root": "INS Block to IfStatement at 2", "operations": ["INS ClassInstanceCreation to ThrowStatement at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleType: IOException to ClassInstanceCreation at 0", "INS Block to IfStatement at 2", "INS StringLiteral: \"Broken or unsupported archive: no Header\" to ClassInstanceCreation at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: InputStream to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from is to in", "operations": ["UPD SimpleName: is from is to in", "UPD SimpleName: is from is to in", "UPD SimpleName: is from is to in"]}, {"root": "INS SuperConstructorInvocation to Block at 0", "operations": ["INS SuperConstructorInvocation to Block at 0", "INS SimpleName: in to SuperConstructorInvocation at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV SimpleName: password to Assignment: = at 1", "MOV FieldAccess to Assignment: = at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: Archive to SimpleType: Archive at 0", "INS ExpressionStatement to Block at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: archive to Assignment: = at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: Archive to ClassInstanceCreation at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 1", "MOV SimpleName: password to SingleVariableDeclaration at 2", "MOV Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from String to Coder", "operations": ["UPD SimpleName: String from String to Coder", "UPD SimpleType: String from String to Coder"]}, {"root": "UPDATE from password to coder", "operations": ["UPD SimpleName: password from password to coder"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS SimpleName: nextHeaderInputStream to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "INS SimpleName: inputStreamStack to Assignment: = at 0", "operations": ["INS SimpleName: inputStreamStack to Assignment: = at 0"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: inputStreamStack to MethodInvocation at 2", "INS SimpleName: addDecoder to MethodInvocation at 1", "INS SimpleName: coder to MethodInvocation at 3", "INS SimpleName: Coders to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: password to MethodInvocation at 4"]}, {"root": "UPDATE from \"LZMA compression unsupported, so files with compressed header cannot be read\" to \"Multi input/output stream coders are not yet supported\"", "operations": ["UPD StringLiteral: \"LZMA compression unsupported, so files with compressed header cannot be read\" from \"LZMA compression unsupported, so files with compressed header cannot be read\" to \"Multi input/output stream coders are not yet supported\""]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL Block", "DEL SimpleName: filename", "DEL ConstructorInvocation"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: readEncodedHeader", "DEL PrimitiveType: void", "DEL Block", "DEL Modifier: private", "DEL MethodDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL SimpleName: is", "DEL Modifier: private", "DEL SimpleType: InputStream", "DEL VariableDeclarationFragment"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL FieldAccess", "DEL SimpleName: is", "DEL SimpleName: is", "DEL ExpressionStatement", "DEL ThisExpression", "DEL Assignment: ="]}]}}, {"SevenZFile_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(4156) at 5", "Insert QualifiedName: java.io.FilterInputStream(10) into ImportDeclaration(11) at 0", "Insert MethodDeclaration(226) into TypeDeclaration: class(4155) at 14", "Insert MethodDeclaration(974) into TypeDeclaration: class(4155) at 23", "Move SingleVariableDeclaration(211) into MethodDeclaration(212) at 3", "Move Modifier: public(200) into MethodDeclaration(226) at 0", "Move SimpleName: SevenZFile(201) into MethodDeclaration(226) at 1", "Move SingleVariableDeclaration(206) into MethodDeclaration(226) at 2", "Move SimpleType: IOException(213) into MethodDeclaration(226) at 3", "Insert Block(225) into MethodDeclaration(226) at 4", "Move VariableDeclarationStatement(503) into Block(574) at 21", "Insert Modifier: private(816) into MethodDeclaration(974) at 0", "Insert SimpleType: DataInputStream(818) into MethodDeclaration(974) at 1", "Insert SimpleName: readEncodedHeader(819) into MethodDeclaration(974) at 2", "Move SingleVariableDeclaration(808) into MethodDeclaration(974) at 3", "Move SingleVariableDeclaration(813) into MethodDeclaration(974) at 4", "Move SimpleType: IOException(815) into MethodDeclaration(974) at 5", "Insert Block(973) into MethodDeclaration(974) at 6", "Insert SimpleType: FilterInputStream(4031) into TypeDeclaration: class(4154) at 3", "Update TextElement: (which always uses the unsupported LZMA(32) to (when it uses the unsupported LZMA", "Update TextElement: 7z a -mhc=off -mx=0 [-ppassword] archive.7z files(36) to 7z a -mhc=off [-mhe=on] -mx=0 [-ppassword] archive.7z files", "Update TextElement: 7z a -mhc=off -m0=LZMA2 [-ppassword] archive.7z files(37) to 7z a -mhc=off [-mhe=on] -m0=LZMA2 [-ppassword] archive.7z files", "Update TextElement: 7z a -mhc=off -m0=BZIP2 [-ppassword] archive.7z files(38) to 7z a -mhc=off [-mhe=on] -m0=BZIP2 [-ppassword] archive.7z files", "Insert Modifier: final(161) into SingleVariableDeclaration(165) at 0", "Insert SimpleType: String(163) into SingleVariableDeclaration(165) at 1", "Insert SimpleName: password(164) into SingleVariableDeclaration(165) at 2", "Insert ExpressionStatement(178) into Block(211) at 1", "Insert ConstructorInvocation(224) into Block(225) at 0", "Insert SimpleName: DataInputStream(817) into SimpleType: DataInputStream(818) at 0", "Move ExpressionStatement(819) into Block(973) at 0", "Move ExpressionStatement(824) into Block(973) at 1", "Insert VariableDeclarationStatement(849) into Block(973) at 2", "Insert VariableDeclarationStatement(855) into Block(973) at 3", "Insert VariableDeclarationStatement(864) into Block(973) at 4", "Insert ExpressionStatement(869) into Block(973) at 5", "Insert VariableDeclarationStatement(881) into Block(973) at 6", "Insert EnhancedForStatement(912) into Block(973) at 7", "Insert IfStatement(926) into Block(973) at 8", "Insert VariableDeclarationStatement(942) into Block(973) at 9", "Insert VariableDeclarationStatement(952) into Block(973) at 10", "Insert TryStatement(964) into Block(973) at 11", "Insert ReturnStatement(972) into Block(973) at 12", "Update SimpleName: InputStream(3890) to FilterInputStream", "Move SimpleName: InputStream(3890) into SimpleType: FilterInputStream(4031) at 0", "Insert SimpleName: String(162) into SimpleType: String(163) at 0", "Insert Assignment: =(177) into ExpressionStatement(178) at 0", "Insert SimpleName: filename(222) into ConstructorInvocation(224) at 0", "Insert NullLiteral(223) into ConstructorInvocation(224) at 1", "Insert Block(570) into IfStatement(571) at 2", "Insert Modifier: final(841) into VariableDeclarationStatement(849) at 0", "Insert SimpleType: Folder(843) into VariableDeclarationStatement(849) at 1", "Insert VariableDeclarationFragment(848) into VariableDeclarationStatement(849) at 2", "Insert Modifier: final(850) into VariableDeclarationStatement(855) at 0", "Insert PrimitiveType: int(851) into VariableDeclarationStatement(855) at 1", "Insert VariableDeclarationFragment(854) into VariableDeclarationStatement(855) at 2", "Insert Modifier: final(856) into VariableDeclarationStatement(864) at 0", "Insert PrimitiveType: long(857) into VariableDeclarationStatement(864) at 1", "Insert VariableDeclarationFragment(863) into VariableDeclarationStatement(864) at 2", "Insert MethodInvocation(868) into ExpressionStatement(869) at 0", "Move SimpleType: InputStream(3888) into VariableDeclarationStatement(881) at 0", "Insert VariableDeclarationFragment(880) into VariableDeclarationStatement(881) at 1", "Insert SingleVariableDeclaration(886) into EnhancedForStatement(912) at 0", "Insert QualifiedName: folder.coders(887) into EnhancedForStatement(912) at 1", "Insert Block(911) into EnhancedForStatement(912) at 2", "Insert QualifiedName: folder.hasCrc(913) into IfStatement(926) at 0", "Insert Block(925) into IfStatement(926) at 1", "Insert Modifier: final(927) into VariableDeclarationStatement(942) at 0", "Insert ArrayType: byte[](930) into VariableDeclarationStatement(942) at 1", "Insert VariableDeclarationFragment(941) into VariableDeclarationStatement(942) at 2", "Insert Modifier: final(943) into VariableDeclarationStatement(952) at 0", "Insert SimpleType: DataInputStream(945) into VariableDeclarationStatement(952) at 1", "Insert VariableDeclarationFragment(951) into VariableDeclarationStatement(952) at 2", "Insert Block(958) into TryStatement(964) at 0", "Insert Block(963) into TryStatement(964) at 1", "Insert ClassInstanceCreation(971) into ReturnStatement(972) at 0", "Update SimpleName: is(3905) to in", "Insert SuperConstructorInvocation(4049) into Block(4054) at 0", "Move FieldAccess(218) into Assignment: =(177) at 0", "Move SimpleName: password(219) into Assignment: =(177) at 1", "Insert ExpressionStatement(547) into Block(554) at 1", "Insert ThrowStatement(569) into Block(570) at 0", "Insert SimpleName: Folder(842) into SimpleType: Folder(843) at 0", "Insert SimpleName: folder(844) into VariableDeclarationFragment(848) at 0", "Insert ArrayAccess(847) into VariableDeclarationFragment(848) at 1", "Insert SimpleName: firstPackStreamIndex(852) into VariableDeclarationFragment(854) at 0", "Insert NumberLiteral: 0(853) into VariableDeclarationFragment(854) at 1", "Insert SimpleName: folderOffset(858) into VariableDeclarationFragment(863) at 0", "Insert InfixExpression: +(862) into VariableDeclarationFragment(863) at 1", "Insert SimpleName: file(865) into MethodInvocation(868) at 0", "Insert SimpleName: seek(866) into MethodInvocation(868) at 1", "Insert SimpleName: folderOffset(867) into MethodInvocation(868) at 2", "Insert SimpleName: inputStreamStack(872) into VariableDeclarationFragment(880) at 0", "Insert ClassInstanceCreation(879) into VariableDeclarationFragment(880) at 1", "Move Modifier: final(207) into SingleVariableDeclaration(886) at 0", "Update SimpleType: String(209) to Coder", "Move SimpleType: String(209) into SingleVariableDeclaration(886) at 1", "Update SimpleName: password(210) to coder", "Move SimpleName: password(210) into SingleVariableDeclaration(886) at 2", "Insert IfStatement(901) into Block(911) at 0", "Move ExpressionStatement(221) into Block(911) at 1", "Insert ExpressionStatement(924) into Block(925) at 0", "Insert PrimitiveType: byte(928) into ArrayType: byte[](930) at 0", "Insert Dimension(929) into ArrayType: byte[](930) at 1", "Insert SimpleName: nextHeader(931) into VariableDeclarationFragment(941) at 0", "Insert ArrayCreation(940) into VariableDeclarationFragment(941) at 1", "Insert SimpleName: DataInputStream(944) into SimpleType: DataInputStream(945) at 0", "Insert SimpleName: nextHeaderInputStream(946) into VariableDeclarationFragment(951) at 0", "Insert ClassInstanceCreation(950) into VariableDeclarationFragment(951) at 1", "Insert ExpressionStatement(957) into Block(958) at 0", "Insert ExpressionStatement(962) into Block(963) at 0", "Insert SimpleType: DataInputStream(966) into ClassInstanceCreation(971) at 0", "Insert ClassInstanceCreation(970) into ClassInstanceCreation(971) at 1", "Insert SimpleName: in(4048) into SuperConstructorInvocation(4049) at 0", "Insert Assignment: =(540) into ExpressionStatement(541) at 0", "Insert Assignment: =(546) into ExpressionStatement(547) at 0", "Insert ClassInstanceCreation(568) into ThrowStatement(569) at 0", "Insert QualifiedName: archive.folders(845) into ArrayAccess(847) at 0", "Insert NumberLiteral: 0(846) into ArrayAccess(847) at 1", "Insert SimpleName: SIGNATURE_HEADER_SIZE(859) into InfixExpression: +(862) at 0", "Insert QualifiedName: archive.packPos(860) into InfixExpression: +(862) at 1", "Insert NumberLiteral: 0(861) into InfixExpression: +(862) at 2", "Insert SimpleType: BoundedRandomAccessFileInputStream(874) into ClassInstanceCreation(879) at 0", "Insert SimpleName: file(875) into ClassInstanceCreation(879) at 1", "Insert ArrayAccess(878) into ClassInstanceCreation(879) at 2", "Update SimpleName: String(208) to Coder", "Insert InfixExpression: ||(894) into IfStatement(901) at 0", "Insert Block(900) into IfStatement(901) at 1", "Insert Assignment: =(923) into ExpressionStatement(924) at 0", "Insert ArrayType: byte[](934) into ArrayCreation(940) at 0", "Insert CastExpression(939) into ArrayCreation(940) at 1", "Insert SimpleType: DataInputStream(948) into ClassInstanceCreation(950) at 0", "Insert SimpleName: inputStreamStack(949) into ClassInstanceCreation(950) at 1", "Insert MethodInvocation(956) into ExpressionStatement(957) at 0", "Insert MethodInvocation(961) into ExpressionStatement(962) at 0", "Insert SimpleName: DataInputStream(965) into SimpleType: DataInputStream(966) at 0", "Insert SimpleType: ByteArrayInputStream(968) into ClassInstanceCreation(970) at 0", "Insert SimpleName: nextHeader(969) into ClassInstanceCreation(970) at 1", "Insert SimpleName: nextHeaderInputStream(535) into Assignment: =(540) at 0", "Move MethodInvocation(537) into Assignment: =(540) at 1", "Insert SimpleName: archive(542) into Assignment: =(546) at 0", "Insert ClassInstanceCreation(545) into Assignment: =(546) at 1", "Insert SimpleType: IOException(566) into ClassInstanceCreation(568) at 0", "Insert StringLiteral: \"Broken or unsupported archive: no Header\"(567) into ClassInstanceCreation(568) at 1", "Insert SimpleName: BoundedRandomAccessFileInputStream(873) into SimpleType: BoundedRandomAccessFileInputStream(874) at 0", "Insert QualifiedName: archive.packSizes(876) into ArrayAccess(878) at 0", "Insert SimpleName: firstPackStreamIndex(877) into ArrayAccess(878) at 1", "Insert InfixExpression: !=(890) into InfixExpression: ||(894) at 0", "Insert InfixExpression: !=(893) into InfixExpression: ||(894) at 1", "Move ThrowStatement(829) into Block(900) at 0", "Insert SimpleName: inputStreamStack(902) into Assignment: =(909) at 0", "Insert MethodInvocation(908) into Assignment: =(909) at 1", "Insert SimpleName: inputStreamStack(914) into Assignment: =(923) at 0", "Insert ClassInstanceCreation(922) into Assignment: =(923) at 1", "Insert PrimitiveType: byte(932) into ArrayType: byte[](934) at 0", "Insert Dimension(933) into ArrayType: byte[](934) at 1", "Insert PrimitiveType: int(935) into CastExpression(939) at 0", "Insert MethodInvocation(938) into CastExpression(939) at 1", "Insert SimpleName: DataInputStream(947) into SimpleType: DataInputStream(948) at 0", "Insert SimpleName: nextHeaderInputStream(953) into MethodInvocation(956) at 0", "Insert SimpleName: readFully(954) into MethodInvocation(956) at 1", "Insert SimpleName: nextHeader(955) into MethodInvocation(956) at 2", "Insert SimpleName: nextHeaderInputStream(959) into MethodInvocation(961) at 0", "Insert SimpleName: close(960) into MethodInvocation(961) at 1", "Insert SimpleName: ByteArrayInputStream(967) into SimpleType: ByteArrayInputStream(968) at 0", "Update SimpleName: is(3993) to in", "Insert SimpleType: Archive(544) into ClassInstanceCreation(545) at 0", "Insert SimpleName: IOException(565) into SimpleType: IOException(566) at 0", "Insert QualifiedName: coder.numInStreams(888) into InfixExpression: !=(890) at 0", "Insert NumberLiteral: 1(889) into InfixExpression: !=(890) at 1", "Insert QualifiedName: coder.numOutStreams(891) into InfixExpression: !=(893) at 0", "Insert NumberLiteral: 1(892) into InfixExpression: !=(893) at 1", "Insert SimpleName: Coders(903) into MethodInvocation(908) at 0", "Insert SimpleName: addDecoder(904) into MethodInvocation(908) at 1", "Insert SimpleName: inputStreamStack(905) into MethodInvocation(908) at 2", "Insert SimpleName: coder(906) into MethodInvocation(908) at 3", "Insert SimpleName: password(907) into MethodInvocation(908) at 4", "Insert SimpleType: CRC32VerifyingInputStream(916) into ClassInstanceCreation(922) at 0", "Insert SimpleName: inputStreamStack(917) into ClassInstanceCreation(922) at 1", "Insert MethodInvocation(920) into ClassInstanceCreation(922) at 2", "Insert QualifiedName: folder.crc(921) into ClassInstanceCreation(922) at 3", "Insert SimpleName: folder(936) into MethodInvocation(938) at 0", "Insert SimpleName: getUnpackSize(937) into MethodInvocation(938) at 1", "Update SimpleName: is(3936) to in", "Insert SimpleName: Archive(543) into SimpleType: Archive(544) at 0", "Update StringLiteral: \"LZMA compression unsupported, so files with compressed header cannot be read\"(827) to \"Multi input/output stream coders are not yet supported\"", "Insert SimpleName: CRC32VerifyingInputStream(915) into SimpleType: CRC32VerifyingInputStream(916) at 0", "Insert SimpleName: folder(918) into MethodInvocation(920) at 0", "Insert SimpleName: getUnpackSize(919) into MethodInvocation(920) at 1", "Delete SimpleName: filename(214)", "Delete ConstructorInvocation(215)", "Delete Block(222)", "Delete MethodDeclaration(223)", "Delete Modifier: final(514)", "Delete Modifier: final(495)", "Delete Modifier: private(801)", "Delete PrimitiveType: void(802)", "Delete SimpleName: readEncodedHeader(803)", "Delete Block(830)", "Delete MethodDeclaration(831)", "Delete Modifier: private(3889)", "Delete SimpleType: InputStream(3891)", "Delete SimpleName: is(3892)", "Delete VariableDeclarationFragment(3893)", "Delete FieldDeclaration(3894)", "Delete ThisExpression(3911)", "Delete SimpleName: is(3912)", "Delete FieldAccess(3913)", "Delete SimpleName: is(3914)", "Delete Assignment: =(3915)", "Delete ExpressionStatement(3916)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "False", "maintenance": "True", "build": "False"}]}