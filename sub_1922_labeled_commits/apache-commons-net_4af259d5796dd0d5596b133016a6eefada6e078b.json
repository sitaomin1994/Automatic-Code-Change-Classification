{"application": "apache-commons-net", "csha": "4af259d5796dd0d5596b133016a6eefada6e078b", "files": [{"FTPFileEntryParser_cluster": {"actions": [{"root": "UPDATE from The second example uses the revised <code>FTPClient.listFiles()</code> to The first example uses the <code>FTPClient.listFiles()</code>", "operations": ["UPD TextElement: The second example uses the revised <code>FTPClient.listFiles()</code> from The second example uses the revised <code>FTPClient.listFiles()</code> to The first example uses the <code>FTPClient.listFiles()</code>"]}, {"root": "UPDATE from The third example uses the revised <code>FTPClient.listFiles()</code>> to The secondr example uses the <code>FTPClient.listFiles()</code>>", "operations": ["UPD TextElement: The third example uses the revised <code>FTPClient.listFiles()</code>> from The third example uses the revised <code>FTPClient.listFiles()</code>> to The secondr example uses the <code>FTPClient.listFiles()</code>>"]}, {"root": "UPDATE from The fourth example uses the revised <code>FTPClient.listFiles()</code> to The third example uses the <code>FTPClient.listFiles()</code>", "operations": ["UPD TextElement: The fourth example uses the revised <code>FTPClient.listFiles()</code> from The fourth example uses the revised <code>FTPClient.listFiles()</code> to The third example uses the <code>FTPClient.listFiles()</code>"]}, {"root": "INS TextElement: For an alternative approach, see the  to TagElement at 62", "operations": ["INS TextElement: For an alternative approach, see the  to TagElement at 62"]}, {"root": "INS TagElement: @link to TagElement at 63", "operations": ["INS TagElement: @link to TagElement at 63", "INS SimpleName: FTPListParseEngine to TagElement: @link at 0"]}, {"root": "INS TextElement:  class to TagElement at 64", "operations": ["INS TextElement:  class to TagElement at 64"]}, {"root": "INS TextElement: which provides iterative access. to TagElement at 65", "operations": ["INS TextElement: which provides iterative access. to TagElement at 65"]}, {"root": "DEL TextElement: The first example shows how to get an <b>iterable</b> list of files in which the", "operations": ["DEL TextElement: The first example shows how to get an <b>iterable</b> list of files in which the"]}, {"root": "DEL TextElement: more expensive <code>FTPFile</code> objects are not created until needed.  This", "operations": ["DEL TextElement: more expensive <code>FTPFile</code> objects are not created until needed.  This"]}, {"root": "DEL TextElement: is suitable for paged displays.   It requires that a parser object be created", "operations": ["DEL TextElement: is suitable for paged displays.   It requires that a parser object be created"]}, {"root": "DEL TextElement: beforehand: <code>parser</code> is an object (in the package", "operations": ["DEL TextElement: beforehand: <code>parser</code> is an object (in the package"]}, {"root": "DEL TextElement: <code>org.apache.commons.net.ftp.parser</code>)", "operations": ["DEL TextElement: <code>org.apache.commons.net.ftp.parser</code>)"]}, {"root": "DEL TextElement: implementing this inteface.", "operations": ["DEL TextElement: implementing this inteface."]}, {"root": "DEL TextElement: <pre>", "operations": ["DEL TextElement: <pre>"]}, {"root": "DEL TextElement: FTPClient f=FTPClient();", "operations": ["DEL TextElement: FTPClient f=FTPClient();"]}, {"root": "DEL TextElement: f.connect(server);", "operations": ["DEL TextElement: f.connect(server);"]}, {"root": "DEL TextElement: f.login(username, password);", "operations": ["DEL TextElement: f.login(username, password);"]}, {"root": "DEL TextElement: FTPFileList list = f.createFileList(directory, parser);", "operations": ["DEL TextElement: FTPFileList list = f.createFileList(directory, parser);"]}, {"root": "DEL TextElement: FTPFileIterator iter = list.iterator();", "operations": ["DEL TextElement: FTPFileIterator iter = list.iterator();"]}, {"root": "DEL TextElement: while (iter.hasNext()) {", "operations": ["DEL TextElement: while (iter.hasNext()) {"]}, {"root": "DEL TextElement: FTPFile[] files = iter.getNext(25);  // \"page size\" you want", "operations": ["DEL TextElement: FTPFile[] files = iter.getNext(25);  // \"page size\" you want"]}, {"root": "DEL TextElement: //do whatever you want with these files, display them, etc.", "operations": ["DEL TextElement: //do whatever you want with these files, display them, etc."]}, {"root": "DEL TextElement: //expensive FTPFile objects not created until needed.", "operations": ["DEL TextElement: //expensive FTPFile objects not created until needed."]}, {"root": "DEL TextElement: }", "operations": ["DEL TextElement: }"]}, {"root": "DEL TextElement: </pre>", "operations": ["DEL TextElement: </pre>"]}]}}, {"FTPFileEntryParser_diff": {"operations": ["Update TextElement: The second example uses the revised <code>FTPClient.listFiles()</code>(38) to The first example uses the <code>FTPClient.listFiles()</code>", "Update TextElement: The third example uses the revised <code>FTPClient.listFiles()</code>>(49) to The secondr example uses the <code>FTPClient.listFiles()</code>>", "Update TextElement: The fourth example uses the revised <code>FTPClient.listFiles()</code>(62) to The third example uses the <code>FTPClient.listFiles()</code>", "Insert TextElement: For an alternative approach, see the (53) into TagElement(58) at 44", "Insert TagElement: @link(55) into TagElement(58) at 45", "Insert TextElement:  class(56) into TagElement(58) at 46", "Insert TextElement: which provides iterative access.(57) into TagElement(58) at 47", "Insert SimpleName: FTPListParseEngine(54) into TagElement: @link(55) at 0", "Delete TextElement: The first example shows how to get an <b>iterable</b> list of files in which the(20)", "Delete TextElement: more expensive <code>FTPFile</code> objects are not created until needed.  This(21)", "Delete TextElement: is suitable for paged displays.   It requires that a parser object be created(22)", "Delete TextElement: beforehand: <code>parser</code> is an object (in the package(23)", "Delete TextElement: <code>org.apache.commons.net.ftp.parser</code>)(24)", "Delete TextElement: implementing this inteface.(25)", "Delete TextElement: <pre>(26)", "Delete TextElement: FTPClient f=FTPClient();(27)", "Delete TextElement: f.connect(server);(28)", "Delete TextElement: f.login(username, password);(29)", "Delete TextElement: FTPFileList list = f.createFileList(directory, parser);(30)", "Delete TextElement: FTPFileIterator iter = list.iterator();(31)", "Delete TextElement: while (iter.hasNext()) {(32)", "Delete TextElement: FTPFile[] files = iter.getNext(25);  // \"page size\" you want(33)", "Delete TextElement: //do whatever you want with these files, display them, etc.(34)", "Delete TextElement: //expensive FTPFile objects not created until needed.(35)", "Delete TextElement: }(36)", "Delete TextElement: </pre>(37)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}