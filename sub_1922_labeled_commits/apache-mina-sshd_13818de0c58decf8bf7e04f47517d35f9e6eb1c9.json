{"application": "apache-mina-sshd", "csha": "13818de0c58decf8bf7e04f47517d35f9e6eb1c9", "files": [{"ClientAuthenticationManager_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.security.KeyPair to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.apache.sshd.client.auth.AuthenticationIdentitiesProvider to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: org.apache.sshd.client.auth.PasswordIdentityProvider to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS ImportDeclaration to CompilationUnit at 9", "INS QualifiedName: org.apache.sshd.common.keyprovider.KeyPairProviderHolder to ImportDeclaration at 0"]}, {"root": "INS SimpleType: KeyPairProviderHolder to TypeDeclaration: interface at 3", "operations": ["INS SimpleName: KeyPairProviderHolder to SimpleType: KeyPairProviderHolder at 0", "INS SimpleType: KeyPairProviderHolder to TypeDeclaration: interface at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 7", "operations": ["INS SimpleType: AuthenticationIdentitiesProvider to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: interface at 7", "INS SimpleName: getRegisteredIdentities to MethodDeclaration at 1", "INS SimpleName: AuthenticationIdentitiesProvider to SimpleType: AuthenticationIdentitiesProvider at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 8", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 8", "INS SimpleName: getPasswordIdentityProvider to MethodDeclaration at 1", "INS SimpleType: PasswordIdentityProvider to MethodDeclaration at 0", "INS SimpleName: PasswordIdentityProvider to SimpleType: PasswordIdentityProvider at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 9", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 9", "INS SimpleName: provider to SingleVariableDeclaration at 1", "INS SimpleName: PasswordIdentityProvider to SimpleType: PasswordIdentityProvider at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleType: PasswordIdentityProvider to SingleVariableDeclaration at 0", "INS SimpleName: setPasswordIdentityProvider to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 10", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 10", "INS TagElement: @code to TagElement: @param at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: PasswordIdentityProvider to TagElement: @link at 0", "INS TextElement:  Password to be added - may not be  to TagElement: @param at 1", "INS TextElement: are available via the  to TagElement: @param at 5", "INS TagElement: @param to Javadoc at 0", "INS TextElement:  (if any) to TagElement: @param at 7", "INS TextElement:  null to TagElement: @code at 0", "INS SimpleName: password to TagElement: @param at 0", "INS TagElement: @link to TagElement: @param at 6", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: password to SingleVariableDeclaration at 1", "INS SimpleName: addPasswordIdentity to MethodDeclaration at 2", "INS TextElement: /empty. to TagElement: @param at 3", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS TextElement: <B>Note:</B> this password is <U>in addition</U> to whatever passwords to TagElement: @param at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 11", "operations": ["INS SimpleType: String to MethodRefParameter at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS TagElement: @code to TagElement: @param at 2", "INS TextElement:  null to TagElement: @code at 0", "INS TextElement:  The password to remove - ignored if  to TagElement: @param at 1", "INS TextElement:  null to TagElement: @code at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS TagElement: @return to Javadoc at 1", "INS TextElement:  - or  to TagElement: @return at 2", "INS SimpleName: String to SimpleType: String at 0", "INS MethodRefParameter to MethodRef at 1", "INS SimpleName: addPasswordIdentity to MethodRef at 0", "INS TextElement: /empty to TagElement: @param at 3", "INS MethodDeclaration to TypeDeclaration: interface at 11", "INS TextElement: match found to TagElement: @return at 5", "INS TextElement:  The removed password - same one that was added via to TagElement: @return at 0", "INS TagElement: @code to TagElement: @return at 3", "INS MethodRef to TagElement: @link at 0", "INS Javadoc to MethodDeclaration at 0", "INS TextElement:  if no to TagElement: @return at 4", "INS SimpleName: password to SingleVariableDeclaration at 1", "INS SimpleName: password to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 0", "INS SimpleType: String to MethodDeclaration at 1", "INS SimpleName: removePasswordIdentity to MethodDeclaration at 2", "INS TagElement: @link to TagElement: @return at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 12", "operations": ["INS TextElement:  The  to TagElement: @param at 1", "INS TagElement: @code to TagElement: @param at 4", "INS TextElement: <B>Note:</B> this key is <U>in addition</U> to whatever keys to TagElement: @param at 5", "INS SimpleName: KeyPair to SimpleType: KeyPair at 0", "INS TextElement: are available via the  to TagElement: @param at 6", "INS MethodDeclaration to TypeDeclaration: interface at 12", "INS TextElement:  null to TagElement: @code at 0", "INS SimpleName: KeyPair to TagElement: @link at 0", "INS SimpleName: addPublicKeyIdentity to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: key to SingleVariableDeclaration at 1", "INS TagElement: @link to TagElement: @param at 2", "INS QualifiedName: org.apache.sshd.common.keyprovider.KeyIdentityProvider to TagElement: @link at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS TagElement: @link to TagElement: @param at 7", "INS Javadoc to MethodDeclaration at 0", "INS TextElement:  to add - may not be  to TagElement: @param at 3", "INS TagElement: @param to Javadoc at 0", "INS SimpleName: key to TagElement: @param at 0", "INS TextElement:  (if any) to TagElement: @param at 8", "INS SimpleType: KeyPair to SingleVariableDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 13", "operations": ["INS SimpleType: KeyPair to MethodDeclaration at 1", "INS TextElement:  null to TagElement: @code at 0", "INS TextElement:  The removed  to TagElement: @return at 0", "INS TagElement: @return to Javadoc at 1", "INS MethodRef to TagElement: @link at 0", "INS TextElement:  if no to TagElement: @return at 6", "INS TextElement: match found to TagElement: @return at 7", "INS SimpleName: addPublicKeyIdentity to MethodRef at 0", "INS MethodRefParameter to MethodRef at 1", "INS SimpleName: kp to TagElement: @param at 0", "INS TextElement:  to remove - ignored if  to TagElement: @param at 3", "INS TextElement:  - same one that was added via to TagElement: @return at 2", "INS TagElement: @link to TagElement: @param at 2", "INS TagElement: @link to TagElement: @return at 3", "INS SimpleType: KeyPair to MethodRefParameter at 0", "INS SimpleName: KeyPair to TagElement: @link at 0", "INS Javadoc to MethodDeclaration at 0", "INS TextElement:  The  to TagElement: @param at 1", "INS SimpleName: KeyPair to SimpleType: KeyPair at 0", "INS SimpleType: KeyPair to SingleVariableDeclaration at 0", "INS SimpleName: removePublicKeyIdentity to MethodDeclaration at 2", "INS TagElement: @param to Javadoc at 0", "INS SimpleName: KeyPair to SimpleType: KeyPair at 0", "INS SimpleName: KeyPair to TagElement: @link at 0", "INS SimpleName: KeyPair to SimpleType: KeyPair at 0", "INS SimpleName: kp to SingleVariableDeclaration at 1", "INS TagElement: @link to TagElement: @return at 1", "INS MethodDeclaration to TypeDeclaration: interface at 13", "INS TagElement: @code to TagElement: @param at 4", "INS TextElement:  - or  to TagElement: @return at 4", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS TagElement: @code to TagElement: @return at 5", "INS TextElement:  null to TagElement: @code at 0"]}]}}, {"ClientAuthenticationManager_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(267) at 1", "Insert ImportDeclaration(7) into CompilationUnit(267) at 3", "Insert ImportDeclaration(9) into CompilationUnit(267) at 4", "Insert ImportDeclaration(19) into CompilationUnit(267) at 9", "Insert QualifiedName: java.security.KeyPair(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: org.apache.sshd.client.auth.AuthenticationIdentitiesProvider(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: org.apache.sshd.client.auth.PasswordIdentityProvider(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.sshd.common.keyprovider.KeyPairProviderHolder(18) into ImportDeclaration(19) at 0", "Insert SimpleType: KeyPairProviderHolder(28) into TypeDeclaration: interface(266) at 3", "Insert MethodDeclaration(72) into TypeDeclaration: interface(266) at 7", "Insert MethodDeclaration(76) into TypeDeclaration: interface(266) at 8", "Insert MethodDeclaration(83) into TypeDeclaration: interface(266) at 9", "Insert MethodDeclaration(102) into TypeDeclaration: interface(266) at 10", "Insert MethodDeclaration(130) into TypeDeclaration: interface(266) at 11", "Insert MethodDeclaration(151) into TypeDeclaration: interface(266) at 12", "Insert MethodDeclaration(184) into TypeDeclaration: interface(266) at 13", "Insert SimpleName: KeyPairProviderHolder(27) into SimpleType: KeyPairProviderHolder(28) at 0", "Insert SimpleType: AuthenticationIdentitiesProvider(70) into MethodDeclaration(72) at 0", "Insert SimpleName: getRegisteredIdentities(71) into MethodDeclaration(72) at 1", "Insert SimpleType: PasswordIdentityProvider(74) into MethodDeclaration(76) at 0", "Insert SimpleName: getPasswordIdentityProvider(75) into MethodDeclaration(76) at 1", "Insert PrimitiveType: void(77) into MethodDeclaration(83) at 0", "Insert SimpleName: setPasswordIdentityProvider(78) into MethodDeclaration(83) at 1", "Insert SingleVariableDeclaration(82) into MethodDeclaration(83) at 2", "Insert Javadoc(95) into MethodDeclaration(102) at 0", "Insert PrimitiveType: void(96) into MethodDeclaration(102) at 1", "Insert SimpleName: addPasswordIdentity(97) into MethodDeclaration(102) at 2", "Insert SingleVariableDeclaration(101) into MethodDeclaration(102) at 3", "Insert Javadoc(122) into MethodDeclaration(130) at 0", "Insert SimpleType: String(124) into MethodDeclaration(130) at 1", "Insert SimpleName: removePasswordIdentity(125) into MethodDeclaration(130) at 2", "Insert SingleVariableDeclaration(129) into MethodDeclaration(130) at 3", "Insert Javadoc(144) into MethodDeclaration(151) at 0", "Insert PrimitiveType: void(145) into MethodDeclaration(151) at 1", "Insert SimpleName: addPublicKeyIdentity(146) into MethodDeclaration(151) at 2", "Insert SingleVariableDeclaration(150) into MethodDeclaration(151) at 3", "Insert Javadoc(176) into MethodDeclaration(184) at 0", "Insert SimpleType: KeyPair(178) into MethodDeclaration(184) at 1", "Insert SimpleName: removePublicKeyIdentity(179) into MethodDeclaration(184) at 2", "Insert SingleVariableDeclaration(183) into MethodDeclaration(184) at 3", "Insert SimpleName: AuthenticationIdentitiesProvider(69) into SimpleType: AuthenticationIdentitiesProvider(70) at 0", "Insert SimpleName: PasswordIdentityProvider(73) into SimpleType: PasswordIdentityProvider(74) at 0", "Insert SimpleType: PasswordIdentityProvider(80) into SingleVariableDeclaration(82) at 0", "Insert SimpleName: provider(81) into SingleVariableDeclaration(82) at 1", "Insert TagElement: @param(94) into Javadoc(95) at 0", "Insert SimpleType: String(99) into SingleVariableDeclaration(101) at 0", "Insert SimpleName: password(100) into SingleVariableDeclaration(101) at 1", "Insert TagElement: @param(108) into Javadoc(122) at 0", "Insert TagElement: @return(121) into Javadoc(122) at 1", "Insert SimpleName: String(123) into SimpleType: String(124) at 0", "Insert SimpleType: String(127) into SingleVariableDeclaration(129) at 0", "Insert SimpleName: password(128) into SingleVariableDeclaration(129) at 1", "Insert TagElement: @param(143) into Javadoc(144) at 0", "Insert SimpleType: KeyPair(148) into SingleVariableDeclaration(150) at 0", "Insert SimpleName: key(149) into SingleVariableDeclaration(150) at 1", "Insert TagElement: @param(159) into Javadoc(176) at 0", "Insert TagElement: @return(175) into Javadoc(176) at 1", "Insert SimpleName: KeyPair(177) into SimpleType: KeyPair(178) at 0", "Insert SimpleType: KeyPair(181) into SingleVariableDeclaration(183) at 0", "Insert SimpleName: kp(182) into SingleVariableDeclaration(183) at 1", "Insert SimpleName: PasswordIdentityProvider(79) into SimpleType: PasswordIdentityProvider(80) at 0", "Insert SimpleName: password(84) into TagElement: @param(94) at 0", "Insert TextElement:  Password to be added - may not be (85) into TagElement: @param(94) at 1", "Insert TagElement: @code(87) into TagElement: @param(94) at 2", "Insert TextElement: /empty.(88) into TagElement: @param(94) at 3", "Insert TextElement: <B>Note:</B> this password is <U>in addition</U> to whatever passwords(89) into TagElement: @param(94) at 4", "Insert TextElement: are available via the (90) into TagElement: @param(94) at 5", "Insert TagElement: @link(92) into TagElement: @param(94) at 6", "Insert TextElement:  (if any)(93) into TagElement: @param(94) at 7", "Insert SimpleName: String(98) into SimpleType: String(99) at 0", "Insert SimpleName: password(103) into TagElement: @param(108) at 0", "Insert TextElement:  The password to remove - ignored if (104) into TagElement: @param(108) at 1", "Insert TagElement: @code(106) into TagElement: @param(108) at 2", "Insert TextElement: /empty(107) into TagElement: @param(108) at 3", "Insert TextElement:  The removed password - same one that was added via(109) into TagElement: @return(121) at 0", "Insert TagElement: @link(115) into TagElement: @return(121) at 1", "Insert TextElement:  - or (116) into TagElement: @return(121) at 2", "Insert TagElement: @code(118) into TagElement: @return(121) at 3", "Insert TextElement:  if no(119) into TagElement: @return(121) at 4", "Insert TextElement: match found(120) into TagElement: @return(121) at 5", "Insert SimpleName: String(126) into SimpleType: String(127) at 0", "Insert SimpleName: key(131) into TagElement: @param(143) at 0", "Insert TextElement:  The (132) into TagElement: @param(143) at 1", "Insert TagElement: @link(134) into TagElement: @param(143) at 2", "Insert TextElement:  to add - may not be (135) into TagElement: @param(143) at 3", "Insert TagElement: @code(137) into TagElement: @param(143) at 4", "Insert TextElement: <B>Note:</B> this key is <U>in addition</U> to whatever keys(138) into TagElement: @param(143) at 5", "Insert TextElement: are available via the (139) into TagElement: @param(143) at 6", "Insert TagElement: @link(141) into TagElement: @param(143) at 7", "Insert TextElement:  (if any)(142) into TagElement: @param(143) at 8", "Insert SimpleName: KeyPair(147) into SimpleType: KeyPair(148) at 0", "Insert SimpleName: kp(152) into TagElement: @param(159) at 0", "Insert TextElement:  The (153) into TagElement: @param(159) at 1", "Insert TagElement: @link(155) into TagElement: @param(159) at 2", "Insert TextElement:  to remove - ignored if (156) into TagElement: @param(159) at 3", "Insert TagElement: @code(158) into TagElement: @param(159) at 4", "Insert TextElement:  The removed (160) into TagElement: @return(175) at 0", "Insert TagElement: @link(162) into TagElement: @return(175) at 1", "Insert TextElement:  - same one that was added via(163) into TagElement: @return(175) at 2", "Insert TagElement: @link(169) into TagElement: @return(175) at 3", "Insert TextElement:  - or (170) into TagElement: @return(175) at 4", "Insert TagElement: @code(172) into TagElement: @return(175) at 5", "Insert TextElement:  if no(173) into TagElement: @return(175) at 6", "Insert TextElement: match found(174) into TagElement: @return(175) at 7", "Insert SimpleName: KeyPair(180) into SimpleType: KeyPair(181) at 0", "Insert TextElement:  null(86) into TagElement: @code(87) at 0", "Insert SimpleName: PasswordIdentityProvider(91) into TagElement: @link(92) at 0", "Insert TextElement:  null(105) into TagElement: @code(106) at 0", "Insert MethodRef(114) into TagElement: @link(115) at 0", "Insert TextElement:  null(117) into TagElement: @code(118) at 0", "Insert SimpleName: KeyPair(133) into TagElement: @link(134) at 0", "Insert TextElement:  null(136) into TagElement: @code(137) at 0", "Insert QualifiedName: org.apache.sshd.common.keyprovider.KeyIdentityProvider(140) into TagElement: @link(141) at 0", "Insert SimpleName: KeyPair(154) into TagElement: @link(155) at 0", "Insert TextElement:  null(157) into TagElement: @code(158) at 0", "Insert SimpleName: KeyPair(161) into TagElement: @link(162) at 0", "Insert MethodRef(168) into TagElement: @link(169) at 0", "Insert TextElement:  null(171) into TagElement: @code(172) at 0", "Insert SimpleName: addPasswordIdentity(110) into MethodRef(114) at 0", "Insert MethodRefParameter(113) into MethodRef(114) at 1", "Insert SimpleName: addPublicKeyIdentity(164) into MethodRef(168) at 0", "Insert MethodRefParameter(167) into MethodRef(168) at 1", "Insert SimpleType: String(112) into MethodRefParameter(113) at 0", "Insert SimpleType: KeyPair(166) into MethodRefParameter(167) at 0", "Insert SimpleName: String(111) into SimpleType: String(112) at 0", "Insert SimpleName: KeyPair(165) into SimpleType: KeyPair(166) at 0"]}}, {"SshClient_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS ImportDeclaration to CompilationUnit at 21", "INS QualifiedName: java.util.Iterator to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 25", "operations": ["INS ImportDeclaration to CompilationUnit at 25", "INS QualifiedName: java.util.concurrent.CopyOnWriteArrayList to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 33", "operations": ["INS QualifiedName: org.apache.sshd.client.auth.AuthenticationIdentitiesProvider to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 33"]}, {"root": "INS ImportDeclaration to CompilationUnit at 34", "operations": ["INS ImportDeclaration to CompilationUnit at 34", "INS QualifiedName: org.apache.sshd.client.auth.PasswordIdentityProvider to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 18", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: PasswordIdentityProvider to FieldDeclaration at 1", "INS SimpleName: passwordIdentityProvider to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: PasswordIdentityProvider to SimpleType: PasswordIdentityProvider at 0", "INS FieldDeclaration to TypeDeclaration: class at 18"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 19", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleType: List to ParameterizedType: List<Object> at 0", "INS FieldDeclaration to TypeDeclaration: class at 19", "INS ParameterizedType: CopyOnWriteArrayList<> to ClassInstanceCreation at 0", "INS SimpleType: CopyOnWriteArrayList to ParameterizedType: CopyOnWriteArrayList<> at 0", "INS ParameterizedType: List<Object> to FieldDeclaration at 2", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: identities to VariableDeclarationFragment at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: Object to ParameterizedType: List<Object> at 1", "INS Modifier: private to FieldDeclaration at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: CopyOnWriteArrayList to SimpleType: CopyOnWriteArrayList at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 20", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: AuthenticationIdentitiesProvider to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: identitiesProvider to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 20", "INS SimpleName: AuthenticationIdentitiesProvider to SimpleType: AuthenticationIdentitiesProvider at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 36", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: AuthenticationIdentitiesProvider to MethodDeclaration at 2", "INS SimpleName: getRegisteredIdentities to MethodDeclaration at 3", "INS SimpleName: AuthenticationIdentitiesProvider to SimpleType: AuthenticationIdentitiesProvider at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: identitiesProvider to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 36", "INS Block to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 37", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 37", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: PasswordIdentityProvider to SimpleType: PasswordIdentityProvider at 0", "INS SimpleName: passwordIdentityProvider to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: PasswordIdentityProvider to MethodDeclaration at 2", "INS SimpleName: getPasswordIdentityProvider to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 38", "operations": ["INS SimpleName: setPasswordIdentityProvider to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ExpressionStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 38", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: provider to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: PasswordIdentityProvider to SingleVariableDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: PasswordIdentityProvider to SimpleType: PasswordIdentityProvider at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: passwordIdentityProvider to Assignment: = at 0", "INS SimpleName: provider to Assignment: = at 1", "INS Block to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 39", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: identities to MethodInvocation at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: KeyUtils to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: addPasswordIdentity to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: password to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: password to SingleVariableDeclaration at 1", "INS IfStatement to Block at 1", "INS SimpleName: ValidateUtils to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"No password provided\" to MethodInvocation at 3", "INS SimpleName: log to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 39", "INS SimpleName: password to MethodInvocation at 2", "INS SimpleName: log to MethodInvocation at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: checkNotNullAndNotEmpty to MethodInvocation at 1", "INS StringLiteral: \"addPasswordIdentity({}) {}\" to MethodInvocation at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to MethodInvocation at 4", "INS MethodInvocation to MethodInvocation at 2", "INS ThisExpression to MethodInvocation at 3", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: getFingerPrint to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 40", "operations": ["INS IfStatement to Block at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: identities to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 5", "INS SimpleType: String to CastExpression at 0", "INS CastExpression to ReturnStatement at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: index to InfixExpression: >= at 0", "INS NullLiteral to ReturnStatement at 0", "INS NullLiteral to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: remove to MethodInvocation at 1", "INS Block to IfStatement at 2", "INS SimpleName: index to VariableDeclarationFragment at 0", "INS Block to IfStatement at 1", "INS QualifiedName: AuthenticationIdentitiesProvider.Utils to MethodInvocation at 0", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: removePasswordIdentity to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: index to MethodInvocation at 2", "INS SimpleName: password to MethodInvocation at 4", "INS SimpleName: password to SingleVariableDeclaration at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodDeclaration to TypeDeclaration: class at 40", "INS SimpleName: findIdentityIndex to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS SimpleName: password to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 1", "INS ReturnStatement to Block at 0", "INS InfixExpression: >= to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: identities to MethodInvocation at 2", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS QualifiedName: AuthenticationIdentitiesProvider.Utils.PASSWORD_IDENTITY_COMPARATOR to MethodInvocation at 3", "INS SimpleName: GenericUtils to MethodInvocation at 0", "INS MethodInvocation to CastExpression at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 41", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: identities to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: KeyUtils to MethodInvocation at 0", "INS SimpleName: ValidateUtils to MethodInvocation at 0", "INS StringLiteral: \"No key-pair to add\" to MethodInvocation at 3", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: addPublicKeyIdentity to MethodDeclaration at 3", "INS ExpressionStatement to Block at 3", "INS SimpleName: getFingerPrint to MethodInvocation at 1", "INS SimpleName: kp to MethodInvocation at 2", "INS SimpleName: getPublic to MethodInvocation at 1", "INS SimpleName: checkNotNull to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: kp to MethodInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MethodInvocation to IfStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: kp to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ThisExpression to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: kp to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ExpressionStatement to Block at 0", "INS IfStatement to Block at 4", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: kp to MethodInvocation at 0", "INS SimpleName: KeyPair to SimpleType: KeyPair at 0", "INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: getPublic to MethodInvocation at 1", "INS SimpleType: KeyPair to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 41", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: ValidateUtils to MethodInvocation at 0", "INS StringLiteral: \"No public key\" to MethodInvocation at 3", "INS SimpleName: getPrivate to MethodInvocation at 1", "INS SimpleName: kp to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: debug to MethodInvocation at 1", "INS StringLiteral: \"No private key\" to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: checkNotNull to MethodInvocation at 1", "INS StringLiteral: \"addPublicKeyIdentity({}) {}\" to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: ValidateUtils to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: log to MethodInvocation at 0", "INS SimpleName: checkNotNull to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: log to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 42", "operations": ["INS IfStatement to Block at 2", "INS ReturnStatement to Block at 0", "INS SimpleName: identities to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS NullLiteral to ReturnStatement at 0", "INS SimpleName: KeyPair to SimpleType: KeyPair at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: KeyPair to SimpleType: KeyPair at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS NullLiteral to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: index to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: kp to InfixExpression: == at 0", "INS CastExpression to ReturnStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS Block to IfStatement at 2", "INS QualifiedName: AuthenticationIdentitiesProvider.Utils to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS NumberLiteral: 0 to InfixExpression: >= at 1", "INS InfixExpression: >= to IfStatement at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to CastExpression at 1", "INS SimpleType: KeyPair to SingleVariableDeclaration at 0", "INS IfStatement to Block at 0", "INS SimpleName: kp to SingleVariableDeclaration at 1", "INS SimpleName: kp to MethodInvocation at 4", "INS SimpleType: KeyPair to CastExpression at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: KeyPair to SimpleType: KeyPair at 0", "INS SimpleName: remove to MethodInvocation at 1", "INS SimpleName: removePublicKeyIdentity to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS QualifiedName: AuthenticationIdentitiesProvider.Utils.KEYPAIR_IDENTITY_COMPARATOR to MethodInvocation at 3", "INS MethodDeclaration to TypeDeclaration: class at 42", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: index to VariableDeclarationFragment at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: KeyPair to MethodDeclaration at 2", "INS SimpleName: identities to MethodInvocation at 2", "INS SimpleName: findIdentityIndex to MethodInvocation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: index to InfixExpression: >= at 0", "INS InfixExpression: == to IfStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 55", "operations": ["INS SimpleName: setPasswordIdentityProvider to MethodInvocation at 1", "INS SimpleName: log to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: getPasswordIdentityProvider to MethodInvocation at 0", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS SimpleName: id to InstanceofExpression at 0", "INS SimpleName: getKeyType to MethodInvocation at 1", "INS SimpleName: session to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to InstanceofExpression at 1", "INS IfStatement to Block at 0", "INS SimpleName: session to MethodInvocation at 3", "INS SimpleName: passSession to InfixExpression: != at 0", "INS SimpleName: log to MethodInvocation at 0", "INS SimpleType: KeyPair to CastExpression at 0", "INS SimpleName: KeyUtils to MethodInvocation at 0", "INS SimpleName: PasswordIdentityProvider to SimpleType: PasswordIdentityProvider at 0", "INS StringLiteral: \"setupDefaultSessionIdentities({}) add password fingerprint={}\" to MethodInvocation at 2", "INS SimpleName: String to SimpleType: String at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: log to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: session to MethodInvocation at 0", "INS IfStatement to Block at 2", "INS SimpleName: getFingerPrint to MethodInvocation at 1", "INS StringLiteral: \"setupDefaultSessionIdentities({}) ignored identity={}\" to MethodInvocation at 2", "INS InfixExpression: == to IfStatement at 0", "INS InfixExpression: == to ParenthesizedExpression at 0", "INS SimpleName: id to MethodInvocation at 0", "INS SimpleName: log to MethodInvocation at 0", "INS Block to IfStatement at 2", "INS SimpleName: iter to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: kp to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: passClient to InfixExpression: != at 1", "INS Block to IfStatement at 1", "INS SimpleName: log to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to IfStatement at 1", "INS CastExpression to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: ClientSession to SimpleType: ClientSession at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: session to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: session to MethodInvocation at 0", "INS Block to IfStatement at 2", "INS SimpleName: passSession to InfixExpression: == at 0", "INS StringLiteral: \"setupDefaultSessionIdentities({}) key-pair provider override\" to MethodInvocation at 2", "INS ForStatement to Block at 7", "INS SimpleName: log to MethodInvocation at 0", "INS SimpleName: KeyUtils to MethodInvocation at 0", "INS SimpleName: Iterator to SimpleType: Iterator at 0", "INS SimpleName: session to MethodInvocation at 0", "INS NullLiteral to ConditionalExpression at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: iteratorOf to MethodInvocation at 1", "INS InstanceofExpression to IfStatement at 0", "INS SimpleName: loadIdentities to MethodInvocation at 1", "INS SimpleName: idsClient to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS VariableDeclarationExpression to ForStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: PasswordIdentityProvider to SimpleType: PasswordIdentityProvider at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS CastExpression to MethodInvocation at 2", "INS SimpleName: getFingerPrint to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS Block to IfStatement at 2", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: addPasswordIdentity to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: kpClient to VariableDeclarationFragment at 0", "INS StringLiteral: \"setupDefaultSessionIdentities({}) add identity type={}, fingerprint={}\" to MethodInvocation at 2", "INS ParameterizedType: Iterator<?> to VariableDeclarationExpression at 0", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS SimpleName: GenericUtils to MethodInvocation at 0", "INS SimpleType: KeyPair to VariableDeclarationStatement at 0", "INS InstanceofExpression to IfStatement at 0", "INS SimpleName: id to CastExpression at 1", "INS SimpleName: id to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: PasswordIdentityProvider to VariableDeclarationStatement at 0", "INS SimpleName: iter to MethodInvocation at 0", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: log to MethodInvocation at 0", "INS IfStatement to Block at 5", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleType: AuthenticationIdentitiesProvider to VariableDeclarationStatement at 0", "INS SimpleName: addPublicKeyIdentity to MethodInvocation at 1", "INS SimpleName: kp to VariableDeclarationFragment at 0", "INS Block to IfStatement at 1", "INS SimpleName: hasNext to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 55", "INS SimpleName: idsClient to VariableDeclarationFragment at 0", "INS NullLiteral to InfixExpression: == at 1", "INS MethodInvocation to MethodInvocation at 5", "INS ExpressionStatement to Block at 0", "INS SimpleName: session to SingleVariableDeclaration at 1", "INS SimpleType: Iterator to ParameterizedType: Iterator<?> at 0", "INS SimpleName: passSession to VariableDeclarationFragment at 0", "INS Block to ForStatement at 2", "INS SimpleName: getPublic to MethodInvocation at 1", "INS SimpleName: kp to MethodInvocation at 0", "INS SimpleName: session to MethodInvocation at 3", "INS SimpleName: trace to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: id to CastExpression at 1", "INS SimpleName: id to MethodInvocation at 4", "INS SimpleName: getPasswordIdentityProvider to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: passClient to VariableDeclarationFragment at 0", "INS SimpleName: getRegisteredIdentities to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: session to MethodInvocation at 3", "INS SimpleName: log to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: passClient to MethodInvocation at 2", "INS SimpleName: trace to MethodInvocation at 1", "INS SimpleName: debug to MethodInvocation at 1", "INS SimpleName: KeyPair to SimpleType: KeyPair at 0", "INS SimpleType: Object to VariableDeclarationStatement at 0", "INS SimpleType: ClientSession to SingleVariableDeclaration at 0", "INS SimpleName: iter to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 4", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: KeyPair to SimpleType: KeyPair at 0", "INS NullLiteral to InfixExpression: == at 1", "INS ConditionalExpression to MethodInvocation at 2", "INS SimpleName: kp to MethodInvocation at 2", "INS SimpleName: AuthenticationIdentitiesProvider to SimpleType: AuthenticationIdentitiesProvider at 0", "INS Block to IfStatement at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS StringLiteral: \"setupDefaultSessionIdentities({}) password provider override\" to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 6", "INS SimpleName: idsClient to InfixExpression: == at 0", "INS WildcardType: ? to ParameterizedType: Iterator<?> at 1", "INS Modifier: protected to MethodDeclaration at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to ConditionalExpression at 2", "INS SimpleName: KeyUtils to MethodInvocation at 0", "INS SimpleName: KeyPair to SimpleType: KeyPair at 0", "INS SimpleType: PasswordIdentityProvider to VariableDeclarationStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleType: String to CastExpression at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: id to InstanceofExpression at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to ForStatement at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: session to MethodInvocation at 3", "INS SimpleName: setupDefaultSessionIdentities to MethodDeclaration at 2", "INS SimpleName: debug to MethodInvocation at 1", "INS SimpleType: KeyPair to InstanceofExpression at 1", "INS SimpleName: log to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: identitiesProvider to Assignment: = at 0", "INS SimpleName: identities to MethodInvocation at 2", "INS QualifiedName: AuthenticationIdentitiesProvider.Utils to MethodInvocation at 0", "INS SimpleName: wrap to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: KeyPairProvider to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0"]}, {"root": "UPDATE from log to setupDefaultSessionIdentities", "operations": ["UPD SimpleName: log from log to setupDefaultSessionIdentities"]}, {"root": "UPDATE from \"onConnectOperationComplete({}@{}) adding {} identities\" to \"onConnectOperationComplete({}) adding {} identities\"", "operations": ["UPD StringLiteral: \"onConnectOperationComplete({}@{}) adding {} identities\" from \"onConnectOperationComplete({}@{}) adding {} identities\" to \"onConnectOperationComplete({}) adding {} identities\""]}, {"root": "UPDATE from address to session", "operations": ["UPD SimpleName: address from address to session", "UPD SimpleName: address from address to session"]}, {"root": "UPDATE from \"onConnectOperationComplete({}@{}) add identity type={}, fingerprint={}\" to \"onConnectOperationComplete({}) add identity type={}, fingerprint={}\"", "operations": ["UPD StringLiteral: \"onConnectOperationComplete({}@{}) add identity type={}, fingerprint={}\" from \"onConnectOperationComplete({}@{}) add identity type={}, fingerprint={}\" to \"onConnectOperationComplete({}) add identity type={}, fingerprint={}\""]}, {"root": "DEL SuperConstructorInvocation", "operations": ["DEL SuperConstructorInvocation"]}, {"root": "DEL SimpleName: debug", "operations": ["DEL SimpleName: debug"]}, {"root": "DEL StringLiteral: \"onConnectOperationComplete({}) key-pair provider override\"", "operations": ["DEL StringLiteral: \"onConnectOperationComplete({}) key-pair provider override\""]}, {"root": "DEL Block", "operations": ["DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: kpClient", "DEL IfStatement", "DEL SimpleName: ValidateUtils", "DEL StringLiteral: \"No default key-pair provider\"", "DEL Block", "DEL IfStatement", "DEL Block", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: checkNotNull", "DEL IfStatement"]}, {"root": "DEL SimpleName: username", "operations": ["DEL SimpleName: username"]}, {"root": "DEL SimpleName: username", "operations": ["DEL SimpleName: username"]}]}}, {"SshClient_diff": {"operations": ["Insert ImportDeclaration(43) into CompilationUnit(3941) at 21", "Insert ImportDeclaration(51) into CompilationUnit(3941) at 25", "Insert ImportDeclaration(67) into CompilationUnit(3941) at 33", "Insert ImportDeclaration(69) into CompilationUnit(3941) at 34", "Insert QualifiedName: java.util.Iterator(42) into ImportDeclaration(43) at 0", "Insert QualifiedName: java.util.concurrent.CopyOnWriteArrayList(50) into ImportDeclaration(51) at 0", "Insert QualifiedName: org.apache.sshd.client.auth.AuthenticationIdentitiesProvider(66) into ImportDeclaration(67) at 0", "Insert QualifiedName: org.apache.sshd.client.auth.PasswordIdentityProvider(68) into ImportDeclaration(69) at 0", "Insert FieldDeclaration(388) into TypeDeclaration: class(3940) at 18", "Insert FieldDeclaration(402) into TypeDeclaration: class(3940) at 19", "Insert FieldDeclaration(409) into TypeDeclaration: class(3940) at 20", "Insert MethodDeclaration(647) into TypeDeclaration: class(3940) at 36", "Insert MethodDeclaration(657) into TypeDeclaration: class(3940) at 37", "Insert MethodDeclaration(672) into TypeDeclaration: class(3940) at 38", "Insert MethodDeclaration(707) into TypeDeclaration: class(3940) at 39", "Insert MethodDeclaration(753) into TypeDeclaration: class(3940) at 40", "Insert MethodDeclaration(808) into TypeDeclaration: class(3940) at 41", "Insert MethodDeclaration(853) into TypeDeclaration: class(3940) at 42", "Insert MethodDeclaration(2221) into TypeDeclaration: class(3940) at 55", "Insert Modifier: private(383) into FieldDeclaration(388) at 0", "Insert SimpleType: PasswordIdentityProvider(385) into FieldDeclaration(388) at 1", "Insert VariableDeclarationFragment(387) into FieldDeclaration(388) at 2", "Insert Modifier: private(389) into FieldDeclaration(402) at 0", "Insert Modifier: final(390) into FieldDeclaration(402) at 1", "Insert ParameterizedType: List<Object>(395) into FieldDeclaration(402) at 2", "Insert VariableDeclarationFragment(401) into FieldDeclaration(402) at 3", "Insert Modifier: private(403) into FieldDeclaration(409) at 0", "Insert Modifier: final(404) into FieldDeclaration(409) at 1", "Insert SimpleType: AuthenticationIdentitiesProvider(406) into FieldDeclaration(409) at 2", "Insert VariableDeclarationFragment(408) into FieldDeclaration(409) at 3", "Insert MarkerAnnotation(639) into MethodDeclaration(647) at 0", "Insert Modifier: public(640) into MethodDeclaration(647) at 1", "Insert SimpleType: AuthenticationIdentitiesProvider(642) into MethodDeclaration(647) at 2", "Insert SimpleName: getRegisteredIdentities(643) into MethodDeclaration(647) at 3", "Insert Block(646) into MethodDeclaration(647) at 4", "Insert MarkerAnnotation(649) into MethodDeclaration(657) at 0", "Insert Modifier: public(650) into MethodDeclaration(657) at 1", "Insert SimpleType: PasswordIdentityProvider(652) into MethodDeclaration(657) at 2", "Insert SimpleName: getPasswordIdentityProvider(653) into MethodDeclaration(657) at 3", "Insert Block(656) into MethodDeclaration(657) at 4", "Insert MarkerAnnotation(659) into MethodDeclaration(672) at 0", "Insert Modifier: public(660) into MethodDeclaration(672) at 1", "Insert PrimitiveType: void(661) into MethodDeclaration(672) at 2", "Insert SimpleName: setPasswordIdentityProvider(662) into MethodDeclaration(672) at 3", "Insert SingleVariableDeclaration(666) into MethodDeclaration(672) at 4", "Insert Block(671) into MethodDeclaration(672) at 5", "Insert MarkerAnnotation(674) into MethodDeclaration(707) at 0", "Insert Modifier: public(675) into MethodDeclaration(707) at 1", "Insert PrimitiveType: void(676) into MethodDeclaration(707) at 2", "Insert SimpleName: addPasswordIdentity(677) into MethodDeclaration(707) at 3", "Insert SingleVariableDeclaration(681) into MethodDeclaration(707) at 4", "Insert Block(706) into MethodDeclaration(707) at 5", "Insert MarkerAnnotation(709) into MethodDeclaration(753) at 0", "Insert Modifier: public(710) into MethodDeclaration(753) at 1", "Insert SimpleType: String(712) into MethodDeclaration(753) at 2", "Insert SimpleName: removePasswordIdentity(713) into MethodDeclaration(753) at 3", "Insert SingleVariableDeclaration(717) into MethodDeclaration(753) at 4", "Insert Block(752) into MethodDeclaration(753) at 5", "Insert MarkerAnnotation(755) into MethodDeclaration(808) at 0", "Insert Modifier: public(756) into MethodDeclaration(808) at 1", "Insert PrimitiveType: void(757) into MethodDeclaration(808) at 2", "Insert SimpleName: addPublicKeyIdentity(758) into MethodDeclaration(808) at 3", "Insert SingleVariableDeclaration(762) into MethodDeclaration(808) at 4", "Insert Block(807) into MethodDeclaration(808) at 5", "Insert MarkerAnnotation(810) into MethodDeclaration(853) at 0", "Insert Modifier: public(811) into MethodDeclaration(853) at 1", "Insert SimpleType: KeyPair(813) into MethodDeclaration(853) at 2", "Insert SimpleName: removePublicKeyIdentity(814) into MethodDeclaration(853) at 3", "Insert SingleVariableDeclaration(818) into MethodDeclaration(853) at 4", "Insert Block(852) into MethodDeclaration(853) at 5", "Insert Modifier: protected(2005) into MethodDeclaration(2221) at 0", "Insert PrimitiveType: void(2006) into MethodDeclaration(2221) at 1", "Insert SimpleName: setupDefaultSessionIdentities(2007) into MethodDeclaration(2221) at 2", "Insert SingleVariableDeclaration(2011) into MethodDeclaration(2221) at 3", "Insert Block(2220) into MethodDeclaration(2221) at 4", "Insert SimpleName: PasswordIdentityProvider(384) into SimpleType: PasswordIdentityProvider(385) at 0", "Insert SimpleName: passwordIdentityProvider(386) into VariableDeclarationFragment(387) at 0", "Insert SimpleType: List(392) into ParameterizedType: List<Object>(395) at 0", "Insert SimpleType: Object(394) into ParameterizedType: List<Object>(395) at 1", "Insert SimpleName: identities(396) into VariableDeclarationFragment(401) at 0", "Insert ClassInstanceCreation(400) into VariableDeclarationFragment(401) at 1", "Insert SimpleName: AuthenticationIdentitiesProvider(405) into SimpleType: AuthenticationIdentitiesProvider(406) at 0", "Insert SimpleName: identitiesProvider(407) into VariableDeclarationFragment(408) at 0", "Insert ExpressionStatement(418) into Block(419) at 0", "Insert SimpleName: Override(638) into MarkerAnnotation(639) at 0", "Insert SimpleName: AuthenticationIdentitiesProvider(641) into SimpleType: AuthenticationIdentitiesProvider(642) at 0", "Insert ReturnStatement(645) into Block(646) at 0", "Insert SimpleName: Override(648) into MarkerAnnotation(649) at 0", "Insert SimpleName: PasswordIdentityProvider(651) into SimpleType: PasswordIdentityProvider(652) at 0", "Insert ReturnStatement(655) into Block(656) at 0", "Insert SimpleName: Override(658) into MarkerAnnotation(659) at 0", "Insert SimpleType: PasswordIdentityProvider(664) into SingleVariableDeclaration(666) at 0", "Insert SimpleName: provider(665) into SingleVariableDeclaration(666) at 1", "Insert ExpressionStatement(670) into Block(671) at 0", "Insert SimpleName: Override(673) into MarkerAnnotation(674) at 0", "Insert SimpleType: String(679) into SingleVariableDeclaration(681) at 0", "Insert SimpleName: password(680) into SingleVariableDeclaration(681) at 1", "Insert ExpressionStatement(690) into Block(706) at 0", "Insert IfStatement(705) into Block(706) at 1", "Insert SimpleName: Override(708) into MarkerAnnotation(709) at 0", "Insert SimpleName: String(711) into SimpleType: String(712) at 0", "Insert SimpleType: String(715) into SingleVariableDeclaration(717) at 0", "Insert SimpleName: password(716) into SingleVariableDeclaration(717) at 1", "Insert IfStatement(725) into Block(752) at 0", "Insert VariableDeclarationStatement(735) into Block(752) at 1", "Insert IfStatement(751) into Block(752) at 2", "Insert SimpleName: Override(754) into MarkerAnnotation(755) at 0", "Insert SimpleType: KeyPair(760) into SingleVariableDeclaration(762) at 0", "Insert SimpleName: kp(761) into SingleVariableDeclaration(762) at 1", "Insert ExpressionStatement(768) into Block(807) at 0", "Insert ExpressionStatement(776) into Block(807) at 1", "Insert ExpressionStatement(784) into Block(807) at 2", "Insert ExpressionStatement(789) into Block(807) at 3", "Insert IfStatement(806) into Block(807) at 4", "Insert SimpleName: Override(809) into MarkerAnnotation(810) at 0", "Insert SimpleName: KeyPair(812) into SimpleType: KeyPair(813) at 0", "Insert SimpleType: KeyPair(816) into SingleVariableDeclaration(818) at 0", "Insert SimpleName: kp(817) into SingleVariableDeclaration(818) at 1", "Insert IfStatement(825) into Block(852) at 0", "Insert VariableDeclarationStatement(835) into Block(852) at 1", "Insert IfStatement(851) into Block(852) at 2", "Insert SimpleType: ClientSession(2009) into SingleVariableDeclaration(2011) at 0", "Insert SimpleName: session(2010) into SingleVariableDeclaration(2011) at 1", "Move VariableDeclarationStatement(1684) into Block(2220) at 0", "Insert VariableDeclarationStatement(2026) into Block(2220) at 1", "Insert IfStatement(2053) into Block(2220) at 2", "Insert VariableDeclarationStatement(2061) into Block(2220) at 3", "Insert VariableDeclarationStatement(2068) into Block(2220) at 4", "Insert IfStatement(2095) into Block(2220) at 5", "Insert VariableDeclarationStatement(2102) into Block(2220) at 6", "Insert ForStatement(2219) into Block(2220) at 7", "Insert SimpleName: List(391) into SimpleType: List(392) at 0", "Insert SimpleName: Object(393) into SimpleType: Object(394) at 0", "Insert ParameterizedType: CopyOnWriteArrayList<>(399) into ClassInstanceCreation(400) at 0", "Insert Assignment: =(417) into ExpressionStatement(418) at 0", "Insert SimpleName: identitiesProvider(644) into ReturnStatement(645) at 0", "Insert SimpleName: passwordIdentityProvider(654) into ReturnStatement(655) at 0", "Insert SimpleName: PasswordIdentityProvider(663) into SimpleType: PasswordIdentityProvider(664) at 0", "Insert Assignment: =(669) into ExpressionStatement(670) at 0", "Insert SimpleName: String(678) into SimpleType: String(679) at 0", "Insert MethodInvocation(689) into ExpressionStatement(690) at 0", "Insert MethodInvocation(693) into IfStatement(705) at 0", "Insert Block(704) into IfStatement(705) at 1", "Insert SimpleName: String(714) into SimpleType: String(715) at 0", "Insert MethodInvocation(721) into IfStatement(725) at 0", "Insert Block(724) into IfStatement(725) at 1", "Insert PrimitiveType: int(726) into VariableDeclarationStatement(735) at 0", "Insert VariableDeclarationFragment(734) into VariableDeclarationStatement(735) at 1", "Insert InfixExpression: >=(738) into IfStatement(751) at 0", "Insert Block(747) into IfStatement(751) at 1", "Insert Block(750) into IfStatement(751) at 2", "Insert SimpleName: KeyPair(759) into SimpleType: KeyPair(760) at 0", "Insert MethodInvocation(767) into ExpressionStatement(768) at 0", "Insert MethodInvocation(775) into ExpressionStatement(776) at 0", "Insert MethodInvocation(783) into ExpressionStatement(784) at 0", "Insert MethodInvocation(788) into ExpressionStatement(789) at 0", "Insert MethodInvocation(792) into IfStatement(806) at 0", "Insert Block(805) into IfStatement(806) at 1", "Insert SimpleName: KeyPair(815) into SimpleType: KeyPair(816) at 0", "Insert InfixExpression: ==(821) into IfStatement(825) at 0", "Insert Block(824) into IfStatement(825) at 1", "Insert PrimitiveType: int(826) into VariableDeclarationStatement(835) at 0", "Insert VariableDeclarationFragment(834) into VariableDeclarationStatement(835) at 1", "Insert InfixExpression: >=(838) into IfStatement(851) at 0", "Insert Block(847) into IfStatement(851) at 1", "Insert Block(850) into IfStatement(851) at 2", "Move Block(1717) into IfStatement(1939) at 1", "Insert SimpleName: ClientSession(2008) into SimpleType: ClientSession(2009) at 0", "Move SimpleType: KeyPairProvider(1686) into VariableDeclarationStatement(2026) at 0", "Insert VariableDeclarationFragment(2025) into VariableDeclarationStatement(2026) at 1", "Move InfixExpression: ==(1698) into IfStatement(2053) at 0", "Move Block(1704) into IfStatement(2053) at 1", "Insert Block(2052) into IfStatement(2053) at 2", "Insert SimpleType: PasswordIdentityProvider(2055) into VariableDeclarationStatement(2061) at 0", "Insert VariableDeclarationFragment(2060) into VariableDeclarationStatement(2061) at 1", "Insert SimpleType: PasswordIdentityProvider(2063) into VariableDeclarationStatement(2068) at 0", "Insert VariableDeclarationFragment(2067) into VariableDeclarationStatement(2068) at 1", "Insert InfixExpression: ==(2071) into IfStatement(2095) at 0", "Insert Block(2077) into IfStatement(2095) at 1", "Insert Block(2094) into IfStatement(2095) at 2", "Insert SimpleType: AuthenticationIdentitiesProvider(2097) into VariableDeclarationStatement(2102) at 0", "Insert VariableDeclarationFragment(2101) into VariableDeclarationStatement(2102) at 1", "Insert VariableDeclarationExpression(2121) into ForStatement(2219) at 0", "Insert MethodInvocation(2124) into ForStatement(2219) at 1", "Insert Block(2218) into ForStatement(2219) at 2", "Insert SimpleType: CopyOnWriteArrayList(398) into ParameterizedType: CopyOnWriteArrayList<>(399) at 0", "Insert SimpleName: identitiesProvider(412) into Assignment: =(417) at 0", "Insert MethodInvocation(416) into Assignment: =(417) at 1", "Insert SimpleName: passwordIdentityProvider(667) into Assignment: =(669) at 0", "Insert SimpleName: provider(668) into Assignment: =(669) at 1", "Insert SimpleName: identities(682) into MethodInvocation(689) at 0", "Insert SimpleName: add(683) into MethodInvocation(689) at 1", "Insert MethodInvocation(688) into MethodInvocation(689) at 2", "Insert SimpleName: log(691) into MethodInvocation(693) at 0", "Insert SimpleName: isDebugEnabled(692) into MethodInvocation(693) at 1", "Insert ExpressionStatement(703) into Block(704) at 0", "Insert SimpleName: GenericUtils(718) into MethodInvocation(721) at 0", "Insert SimpleName: isEmpty(719) into MethodInvocation(721) at 1", "Insert SimpleName: password(720) into MethodInvocation(721) at 2", "Insert ReturnStatement(723) into Block(724) at 0", "Insert SimpleName: index(727) into VariableDeclarationFragment(734) at 0", "Insert MethodInvocation(733) into VariableDeclarationFragment(734) at 1", "Insert SimpleName: index(736) into InfixExpression: >=(738) at 0", "Insert NumberLiteral: 0(737) into InfixExpression: >=(738) at 1", "Insert ReturnStatement(746) into Block(747) at 0", "Insert ReturnStatement(749) into Block(750) at 0", "Insert SimpleName: ValidateUtils(763) into MethodInvocation(767) at 0", "Insert SimpleName: checkNotNull(764) into MethodInvocation(767) at 1", "Insert SimpleName: kp(765) into MethodInvocation(767) at 2", "Insert StringLiteral: \"No key-pair to add\"(766) into MethodInvocation(767) at 3", "Insert SimpleName: ValidateUtils(769) into MethodInvocation(775) at 0", "Insert SimpleName: checkNotNull(770) into MethodInvocation(775) at 1", "Insert MethodInvocation(773) into MethodInvocation(775) at 2", "Insert StringLiteral: \"No public key\"(774) into MethodInvocation(775) at 3", "Insert SimpleName: ValidateUtils(777) into MethodInvocation(783) at 0", "Insert SimpleName: checkNotNull(778) into MethodInvocation(783) at 1", "Insert MethodInvocation(781) into MethodInvocation(783) at 2", "Insert StringLiteral: \"No private key\"(782) into MethodInvocation(783) at 3", "Insert SimpleName: identities(785) into MethodInvocation(788) at 0", "Insert SimpleName: add(786) into MethodInvocation(788) at 1", "Insert SimpleName: kp(787) into MethodInvocation(788) at 2", "Insert SimpleName: log(790) into MethodInvocation(792) at 0", "Insert SimpleName: isDebugEnabled(791) into MethodInvocation(792) at 1", "Insert ExpressionStatement(804) into Block(805) at 0", "Insert SimpleName: kp(819) into InfixExpression: ==(821) at 0", "Insert NullLiteral(820) into InfixExpression: ==(821) at 1", "Insert ReturnStatement(823) into Block(824) at 0", "Insert SimpleName: index(827) into VariableDeclarationFragment(834) at 0", "Insert MethodInvocation(833) into VariableDeclarationFragment(834) at 1", "Insert SimpleName: index(836) into InfixExpression: >=(838) at 0", "Insert NumberLiteral: 0(837) into InfixExpression: >=(838) at 1", "Insert ReturnStatement(846) into Block(847) at 0", "Insert ReturnStatement(849) into Block(850) at 0", "Insert SimpleName: kpClient(2022) into VariableDeclarationFragment(2025) at 0", "Move MethodInvocation(1691) into VariableDeclarationFragment(2025) at 1", "Insert IfStatement(2051) into Block(2052) at 0", "Insert SimpleName: PasswordIdentityProvider(2054) into SimpleType: PasswordIdentityProvider(2055) at 0", "Insert SimpleName: passSession(2056) into VariableDeclarationFragment(2060) at 0", "Insert MethodInvocation(2059) into VariableDeclarationFragment(2060) at 1", "Insert SimpleName: PasswordIdentityProvider(2062) into SimpleType: PasswordIdentityProvider(2063) at 0", "Insert SimpleName: passClient(2064) into VariableDeclarationFragment(2067) at 0", "Insert MethodInvocation(2066) into VariableDeclarationFragment(2067) at 1", "Insert SimpleName: passSession(2069) into InfixExpression: ==(2071) at 0", "Insert NullLiteral(2070) into InfixExpression: ==(2071) at 1", "Insert ExpressionStatement(2076) into Block(2077) at 0", "Insert IfStatement(2093) into Block(2094) at 0", "Insert SimpleName: AuthenticationIdentitiesProvider(2096) into SimpleType: AuthenticationIdentitiesProvider(2097) at 0", "Insert SimpleName: idsClient(2098) into VariableDeclarationFragment(2101) at 0", "Insert MethodInvocation(2100) into VariableDeclarationFragment(2101) at 1", "Insert ParameterizedType: Iterator<?>(2106) into VariableDeclarationExpression(2121) at 0", "Insert VariableDeclarationFragment(2120) into VariableDeclarationExpression(2121) at 1", "Insert SimpleName: iter(2122) into MethodInvocation(2124) at 0", "Insert SimpleName: hasNext(2123) into MethodInvocation(2124) at 1", "Insert VariableDeclarationStatement(2132) into Block(2218) at 0", "Insert IfStatement(2217) into Block(2218) at 1", "Insert SimpleName: CopyOnWriteArrayList(397) into SimpleType: CopyOnWriteArrayList(398) at 0", "Insert QualifiedName: AuthenticationIdentitiesProvider.Utils(413) into MethodInvocation(416) at 0", "Insert SimpleName: wrap(414) into MethodInvocation(416) at 1", "Insert SimpleName: identities(415) into MethodInvocation(416) at 2", "Insert SimpleName: ValidateUtils(684) into MethodInvocation(688) at 0", "Insert SimpleName: checkNotNullAndNotEmpty(685) into MethodInvocation(688) at 1", "Insert SimpleName: password(686) into MethodInvocation(688) at 2", "Insert StringLiteral: \"No password provided\"(687) into MethodInvocation(688) at 3", "Insert MethodInvocation(702) into ExpressionStatement(703) at 0", "Insert NullLiteral(722) into ReturnStatement(723) at 0", "Insert QualifiedName: AuthenticationIdentitiesProvider.Utils(728) into MethodInvocation(733) at 0", "Insert SimpleName: findIdentityIndex(729) into MethodInvocation(733) at 1", "Insert SimpleName: identities(730) into MethodInvocation(733) at 2", "Insert QualifiedName: AuthenticationIdentitiesProvider.Utils.PASSWORD_IDENTITY_COMPARATOR(731) into MethodInvocation(733) at 3", "Insert SimpleName: password(732) into MethodInvocation(733) at 4", "Insert CastExpression(745) into ReturnStatement(746) at 0", "Insert NullLiteral(748) into ReturnStatement(749) at 0", "Insert SimpleName: kp(771) into MethodInvocation(773) at 0", "Insert SimpleName: getPublic(772) into MethodInvocation(773) at 1", "Insert SimpleName: kp(779) into MethodInvocation(781) at 0", "Insert SimpleName: getPrivate(780) into MethodInvocation(781) at 1", "Insert MethodInvocation(803) into ExpressionStatement(804) at 0", "Insert NullLiteral(822) into ReturnStatement(823) at 0", "Insert QualifiedName: AuthenticationIdentitiesProvider.Utils(828) into MethodInvocation(833) at 0", "Insert SimpleName: findIdentityIndex(829) into MethodInvocation(833) at 1", "Insert SimpleName: identities(830) into MethodInvocation(833) at 2", "Insert QualifiedName: AuthenticationIdentitiesProvider.Utils.KEYPAIR_IDENTITY_COMPARATOR(831) into MethodInvocation(833) at 3", "Insert SimpleName: kp(832) into MethodInvocation(833) at 4", "Insert CastExpression(845) into ReturnStatement(846) at 0", "Insert NullLiteral(848) into ReturnStatement(849) at 0", "Move InfixExpression: !=(1707) into IfStatement(2051) at 0", "Insert Block(2050) into IfStatement(2051) at 1", "Insert SimpleName: session(2057) into MethodInvocation(2059) at 0", "Insert SimpleName: getPasswordIdentityProvider(2058) into MethodInvocation(2059) at 1", "Insert SimpleName: getPasswordIdentityProvider(2065) into MethodInvocation(2066) at 0", "Insert MethodInvocation(2075) into ExpressionStatement(2076) at 0", "Insert InfixExpression: !=(2080) into IfStatement(2093) at 0", "Insert Block(2092) into IfStatement(2093) at 1", "Insert SimpleName: getRegisteredIdentities(2099) into MethodInvocation(2100) at 0", "Insert SimpleType: Iterator(2104) into ParameterizedType: Iterator<?>(2106) at 0", "Insert WildcardType: ?(2105) into ParameterizedType: Iterator<?>(2106) at 1", "Insert SimpleName: iter(2107) into VariableDeclarationFragment(2120) at 0", "Insert MethodInvocation(2119) into VariableDeclarationFragment(2120) at 1", "Insert SimpleType: Object(2126) into VariableDeclarationStatement(2132) at 0", "Insert VariableDeclarationFragment(2131) into VariableDeclarationStatement(2132) at 1", "Insert InstanceofExpression(2136) into IfStatement(2217) at 0", "Insert Block(2162) into IfStatement(2217) at 1", "Insert IfStatement(2216) into IfStatement(2217) at 2", "Insert SimpleName: log(694) into MethodInvocation(702) at 0", "Insert SimpleName: debug(695) into MethodInvocation(702) at 1", "Insert StringLiteral: \"addPasswordIdentity({}) {}\"(696) into MethodInvocation(702) at 2", "Insert ThisExpression(697) into MethodInvocation(702) at 3", "Insert MethodInvocation(701) into MethodInvocation(702) at 4", "Insert SimpleType: String(740) into CastExpression(745) at 0", "Insert MethodInvocation(744) into CastExpression(745) at 1", "Insert SimpleName: log(793) into MethodInvocation(803) at 0", "Insert SimpleName: debug(794) into MethodInvocation(803) at 1", "Insert StringLiteral: \"addPublicKeyIdentity({}) {}\"(795) into MethodInvocation(803) at 2", "Insert ThisExpression(796) into MethodInvocation(803) at 3", "Insert MethodInvocation(802) into MethodInvocation(803) at 4", "Insert SimpleType: KeyPair(840) into CastExpression(845) at 0", "Insert MethodInvocation(844) into CastExpression(845) at 1", "Update SimpleName: log(1711) to setupDefaultSessionIdentities", "Insert IfStatement(2049) into Block(2050) at 0", "Insert SimpleName: session(2072) into MethodInvocation(2075) at 0", "Insert SimpleName: setPasswordIdentityProvider(2073) into MethodInvocation(2075) at 1", "Insert SimpleName: passClient(2074) into MethodInvocation(2075) at 2", "Insert SimpleName: passSession(2078) into InfixExpression: !=(2080) at 0", "Insert SimpleName: passClient(2079) into InfixExpression: !=(2080) at 1", "Insert IfStatement(2091) into Block(2092) at 0", "Insert SimpleName: Iterator(2103) into SimpleType: Iterator(2104) at 0", "Insert SimpleName: GenericUtils(2108) into MethodInvocation(2119) at 0", "Insert SimpleName: iteratorOf(2109) into MethodInvocation(2119) at 1", "Insert ConditionalExpression(2118) into MethodInvocation(2119) at 2", "Insert SimpleName: Object(2125) into SimpleType: Object(2126) at 0", "Insert SimpleName: id(2127) into VariableDeclarationFragment(2131) at 0", "Insert MethodInvocation(2130) into VariableDeclarationFragment(2131) at 1", "Insert SimpleName: id(2133) into InstanceofExpression(2136) at 0", "Insert SimpleType: String(2135) into InstanceofExpression(2136) at 1", "Insert IfStatement(2153) into Block(2162) at 0", "Insert ExpressionStatement(2161) into Block(2162) at 1", "Insert InstanceofExpression(2166) into IfStatement(2216) at 0", "Insert Block(2202) into IfStatement(2216) at 1", "Insert Block(2215) into IfStatement(2216) at 2", "Insert SimpleName: KeyUtils(698) into MethodInvocation(701) at 0", "Insert SimpleName: getFingerPrint(699) into MethodInvocation(701) at 1", "Insert SimpleName: password(700) into MethodInvocation(701) at 2", "Insert SimpleName: String(739) into SimpleType: String(740) at 0", "Insert SimpleName: identities(741) into MethodInvocation(744) at 0", "Insert SimpleName: remove(742) into MethodInvocation(744) at 1", "Insert SimpleName: index(743) into MethodInvocation(744) at 2", "Insert SimpleName: KeyUtils(797) into MethodInvocation(802) at 0", "Insert SimpleName: getFingerPrint(798) into MethodInvocation(802) at 1", "Insert MethodInvocation(801) into MethodInvocation(802) at 2", "Insert SimpleName: KeyPair(839) into SimpleType: KeyPair(840) at 0", "Insert SimpleName: identities(841) into MethodInvocation(844) at 0", "Insert SimpleName: remove(842) into MethodInvocation(844) at 1", "Insert SimpleName: index(843) into MethodInvocation(844) at 2", "Move MethodInvocation(1710) into IfStatement(2049) at 0", "Insert Block(2048) into IfStatement(2049) at 1", "Insert MethodInvocation(2083) into IfStatement(2091) at 0", "Insert Block(2090) into IfStatement(2091) at 1", "Insert ParenthesizedExpression(2113) into ConditionalExpression(2118) at 0", "Insert NullLiteral(2114) into ConditionalExpression(2118) at 1", "Insert MethodInvocation(2117) into ConditionalExpression(2118) at 2", "Insert SimpleName: iter(2128) into MethodInvocation(2130) at 0", "Insert SimpleName: next(2129) into MethodInvocation(2130) at 1", "Insert SimpleName: String(2134) into SimpleType: String(2135) at 0", "Insert MethodInvocation(2139) into IfStatement(2153) at 0", "Insert Block(2152) into IfStatement(2153) at 1", "Insert MethodInvocation(2160) into ExpressionStatement(2161) at 0", "Insert SimpleName: id(2163) into InstanceofExpression(2166) at 0", "Insert SimpleType: KeyPair(2165) into InstanceofExpression(2166) at 1", "Insert VariableDeclarationStatement(2175) into Block(2202) at 0", "Insert IfStatement(2196) into Block(2202) at 1", "Insert ExpressionStatement(2201) into Block(2202) at 2", "Insert IfStatement(2214) into Block(2215) at 0", "Insert SimpleName: kp(799) into MethodInvocation(801) at 0", "Insert SimpleName: getPublic(800) into MethodInvocation(801) at 1", "Update StringLiteral: \"onConnectOperationComplete({}@{}) adding {} identities\"(1741) to \"onConnectOperationComplete({}) adding {} identities\"", "Update SimpleName: address(1743) to session", "Insert ExpressionStatement(2047) into Block(2048) at 0", "Insert SimpleName: log(2081) into MethodInvocation(2083) at 0", "Insert SimpleName: isDebugEnabled(2082) into MethodInvocation(2083) at 1", "Insert ExpressionStatement(2089) into Block(2090) at 0", "Insert InfixExpression: ==(2112) into ParenthesizedExpression(2113) at 0", "Insert SimpleName: idsClient(2115) into MethodInvocation(2117) at 0", "Insert SimpleName: loadIdentities(2116) into MethodInvocation(2117) at 1", "Insert SimpleName: log(2137) into MethodInvocation(2139) at 0", "Insert SimpleName: isTraceEnabled(2138) into MethodInvocation(2139) at 1", "Insert ExpressionStatement(2151) into Block(2152) at 0", "Insert SimpleName: session(2154) into MethodInvocation(2160) at 0", "Insert SimpleName: addPasswordIdentity(2155) into MethodInvocation(2160) at 1", "Insert CastExpression(2159) into MethodInvocation(2160) at 2", "Insert SimpleName: KeyPair(2164) into SimpleType: KeyPair(2165) at 0", "Insert SimpleType: KeyPair(2168) into VariableDeclarationStatement(2175) at 0", "Insert VariableDeclarationFragment(2174) into VariableDeclarationStatement(2175) at 1", "Insert MethodInvocation(2178) into IfStatement(2196) at 0", "Insert Block(2195) into IfStatement(2196) at 1", "Insert MethodInvocation(2200) into ExpressionStatement(2201) at 0", "Insert MethodInvocation(2205) into IfStatement(2214) at 0", "Insert Block(2213) into IfStatement(2214) at 1", "Insert MethodInvocation(2046) into ExpressionStatement(2047) at 0", "Insert MethodInvocation(2088) into ExpressionStatement(2089) at 0", "Insert SimpleName: idsClient(2110) into InfixExpression: ==(2112) at 0", "Insert NullLiteral(2111) into InfixExpression: ==(2112) at 1", "Insert MethodInvocation(2150) into ExpressionStatement(2151) at 0", "Insert SimpleType: String(2157) into CastExpression(2159) at 0", "Insert SimpleName: id(2158) into CastExpression(2159) at 1", "Insert SimpleName: KeyPair(2167) into SimpleType: KeyPair(2168) at 0", "Insert SimpleName: kp(2169) into VariableDeclarationFragment(2174) at 0", "Insert CastExpression(2173) into VariableDeclarationFragment(2174) at 1", "Insert SimpleName: log(2176) into MethodInvocation(2178) at 0", "Insert SimpleName: isTraceEnabled(2177) into MethodInvocation(2178) at 1", "Insert ExpressionStatement(2194) into Block(2195) at 0", "Insert SimpleName: session(2197) into MethodInvocation(2200) at 0", "Insert SimpleName: addPublicKeyIdentity(2198) into MethodInvocation(2200) at 1", "Insert SimpleName: kp(2199) into MethodInvocation(2200) at 2", "Insert SimpleName: log(2203) into MethodInvocation(2205) at 0", "Insert SimpleName: isDebugEnabled(2204) into MethodInvocation(2205) at 1", "Insert ExpressionStatement(2212) into Block(2213) at 0", "Update StringLiteral: \"onConnectOperationComplete({}@{}) add identity type={}, fingerprint={}\"(1759) to \"onConnectOperationComplete({}) add identity type={}, fingerprint={}\"", "Update SimpleName: address(1761) to session", "Insert SimpleName: log(2042) into MethodInvocation(2046) at 0", "Insert SimpleName: debug(2043) into MethodInvocation(2046) at 1", "Insert StringLiteral: \"setupDefaultSessionIdentities({}) key-pair provider override\"(2044) into MethodInvocation(2046) at 2", "Insert SimpleName: session(2045) into MethodInvocation(2046) at 3", "Insert SimpleName: log(2084) into MethodInvocation(2088) at 0", "Insert SimpleName: debug(2085) into MethodInvocation(2088) at 1", "Insert StringLiteral: \"setupDefaultSessionIdentities({}) password provider override\"(2086) into MethodInvocation(2088) at 2", "Insert SimpleName: session(2087) into MethodInvocation(2088) at 3", "Insert SimpleName: log(2140) into MethodInvocation(2150) at 0", "Insert SimpleName: trace(2141) into MethodInvocation(2150) at 1", "Insert StringLiteral: \"setupDefaultSessionIdentities({}) add password fingerprint={}\"(2142) into MethodInvocation(2150) at 2", "Insert SimpleName: session(2143) into MethodInvocation(2150) at 3", "Insert MethodInvocation(2149) into MethodInvocation(2150) at 4", "Insert SimpleName: String(2156) into SimpleType: String(2157) at 0", "Insert SimpleType: KeyPair(2171) into CastExpression(2173) at 0", "Insert SimpleName: id(2172) into CastExpression(2173) at 1", "Insert MethodInvocation(2193) into ExpressionStatement(2194) at 0", "Insert MethodInvocation(2211) into ExpressionStatement(2212) at 0", "Insert SimpleName: KeyUtils(2144) into MethodInvocation(2149) at 0", "Insert SimpleName: getFingerPrint(2145) into MethodInvocation(2149) at 1", "Insert MethodInvocation(2148) into MethodInvocation(2149) at 2", "Insert SimpleName: KeyPair(2170) into SimpleType: KeyPair(2171) at 0", "Insert SimpleName: log(2179) into MethodInvocation(2193) at 0", "Insert SimpleName: trace(2180) into MethodInvocation(2193) at 1", "Insert StringLiteral: \"setupDefaultSessionIdentities({}) add identity type={}, fingerprint={}\"(2181) into MethodInvocation(2193) at 2", "Insert SimpleName: session(2182) into MethodInvocation(2193) at 3", "Insert MethodInvocation(2186) into MethodInvocation(2193) at 4", "Insert MethodInvocation(2192) into MethodInvocation(2193) at 5", "Insert SimpleName: log(2206) into MethodInvocation(2211) at 0", "Insert SimpleName: debug(2207) into MethodInvocation(2211) at 1", "Insert StringLiteral: \"setupDefaultSessionIdentities({}) ignored identity={}\"(2208) into MethodInvocation(2211) at 2", "Insert SimpleName: session(2209) into MethodInvocation(2211) at 3", "Insert SimpleName: id(2210) into MethodInvocation(2211) at 4", "Insert SimpleName: id(2146) into MethodInvocation(2148) at 0", "Insert SimpleName: toString(2147) into MethodInvocation(2148) at 1", "Insert SimpleName: KeyUtils(2183) into MethodInvocation(2186) at 0", "Insert SimpleName: getKeyType(2184) into MethodInvocation(2186) at 1", "Insert SimpleName: kp(2185) into MethodInvocation(2186) at 2", "Insert SimpleName: KeyUtils(2187) into MethodInvocation(2192) at 0", "Insert SimpleName: getFingerPrint(2188) into MethodInvocation(2192) at 1", "Insert MethodInvocation(2191) into MethodInvocation(2192) at 2", "Insert SimpleName: kp(2189) into MethodInvocation(2191) at 0", "Insert SimpleName: getPublic(2190) into MethodInvocation(2191) at 1", "Delete SuperConstructorInvocation(377)", "Delete SimpleName: debug(1712)", "Delete StringLiteral: \"onConnectOperationComplete({}) key-pair provider override\"(1713)", "Delete SimpleName: kpClient(1687)", "Delete SimpleName: ValidateUtils(1688)", "Delete SimpleName: checkNotNull(1689)", "Delete StringLiteral: \"No default key-pair provider\"(1692)", "Delete MethodInvocation(1693)", "Delete VariableDeclarationFragment(1694)", "Delete VariableDeclarationStatement(1695)", "Delete IfStatement(1718)", "Delete Block(1719)", "Delete IfStatement(1720)", "Delete Block(1721)", "Delete IfStatement(1722)", "Delete Block(1723)", "Delete SimpleName: username(1742)", "Delete SimpleName: username(1760)"]}}, {"AbstractUserAuth_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Collection"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: Collection", "DEL SimpleName: identities", "DEL WildcardType: ?", "DEL ParameterizedType: Collection<?>", "DEL SimpleName: Collection", "DEL SingleVariableDeclaration"]}]}}, {"AbstractUserAuth_diff": {"operations": ["Delete QualifiedName: java.util.Collection(2)", "Delete ImportDeclaration(3)", "Delete SimpleName: Collection(112)", "Delete SimpleType: Collection(113)", "Delete WildcardType: ?(114)", "Delete ParameterizedType: Collection<?>(115)", "Delete SimpleName: identities(116)", "Delete SingleVariableDeclaration(117)"]}}, {"UserAuth_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Collection"]}, {"root": "DEL TagElement: @param", "operations": ["DEL TagElement: @param", "DEL SimpleName: identities", "DEL TextElement:  The currently available identities - e.g., password, keys, etc."]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL WildcardType: ?", "DEL ParameterizedType: Collection<?>", "DEL SimpleType: Collection", "DEL SimpleName: identities", "DEL SimpleName: Collection"]}]}}, {"UserAuth_diff": {"operations": ["Delete QualifiedName: java.util.Collection(2)", "Delete ImportDeclaration(3)", "Delete SimpleName: identities(34)", "Delete TextElement:  The currently available identities - e.g., password, keys, etc.(35)", "Delete TagElement: @param(36)", "Delete SimpleName: Collection(51)", "Delete SimpleType: Collection(52)", "Delete WildcardType: ?(53)", "Delete ParameterizedType: Collection<?>(54)", "Delete SimpleName: identities(55)", "Delete SingleVariableDeclaration(56)"]}}, {"UserAuthKeyboardInteractive_cluster": {"actions": [{"root": "INS QualifiedName: PasswordIdentityProvider.Utils to MethodInvocation at 0", "operations": ["INS QualifiedName: PasswordIdentityProvider.Utils to MethodInvocation at 0"]}, {"root": "UPDATE from pwds to iteratorOf", "operations": ["UPD SimpleName: pwds from pwds to iteratorOf"]}, {"root": "UPDATE from iterator to session", "operations": ["UPD SimpleName: iterator from iterator to session"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.ArrayList"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Collection"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.List"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: Collection", "DEL SimpleName: identities", "DEL ParameterizedType: Collection<?>", "DEL SingleVariableDeclaration", "DEL SimpleType: Collection", "DEL WildcardType: ?"]}, {"root": "DEL SimpleName: identities", "operations": ["DEL SimpleName: identities"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: List", "DEL ParameterizedType: List<String>", "DEL VariableDeclarationFragment", "DEL SimpleName: ArrayList", "DEL SimpleType: String", "DEL SimpleName: pwds", "DEL SimpleName: String", "DEL SimpleType: ArrayList", "DEL ClassInstanceCreation", "DEL ParameterizedType: ArrayList<>", "DEL SimpleType: List"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL SimpleName: add", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleType: Object", "DEL SimpleName: String", "DEL SimpleName: Object", "DEL Block", "DEL ExpressionStatement", "DEL CastExpression", "DEL SimpleName: o", "DEL IfStatement", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: identities", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: pwds", "DEL InstanceofExpression", "DEL SimpleName: o", "DEL SimpleName: o", "DEL EnhancedForStatement"]}]}}, {"UserAuthKeyboardInteractive_diff": {"operations": ["Insert QualifiedName: PasswordIdentityProvider.Utils(144) into MethodInvocation(147) at 0", "Update SimpleName: pwds(190) to iteratorOf", "Update SimpleName: iterator(191) to session", "Delete QualifiedName: java.util.ArrayList(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.util.Collection(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: java.util.List(10)", "Delete ImportDeclaration(11)", "Delete SimpleName: Collection(142)", "Delete SimpleType: Collection(143)", "Delete WildcardType: ?(144)", "Delete ParameterizedType: Collection<?>(145)", "Delete SimpleName: identities(146)", "Delete SingleVariableDeclaration(147)", "Delete SimpleName: identities(153)", "Delete SimpleName: List(156)", "Delete SimpleType: List(157)", "Delete SimpleName: String(158)", "Delete SimpleType: String(159)", "Delete ParameterizedType: List<String>(160)", "Delete SimpleName: pwds(161)", "Delete SimpleName: ArrayList(162)", "Delete SimpleType: ArrayList(163)", "Delete ParameterizedType: ArrayList<>(164)", "Delete ClassInstanceCreation(165)", "Delete VariableDeclarationFragment(166)", "Delete VariableDeclarationStatement(167)", "Delete SimpleName: Object(168)", "Delete SimpleType: Object(169)", "Delete SimpleName: o(170)", "Delete SingleVariableDeclaration(171)", "Delete SimpleName: identities(172)", "Delete SimpleName: o(173)", "Delete SimpleName: String(174)", "Delete SimpleType: String(175)", "Delete InstanceofExpression(176)", "Delete SimpleName: pwds(177)", "Delete SimpleName: add(178)", "Delete SimpleName: String(179)", "Delete SimpleType: String(180)", "Delete SimpleName: o(181)", "Delete CastExpression(182)", "Delete MethodInvocation(183)", "Delete ExpressionStatement(184)", "Delete Block(185)", "Delete IfStatement(186)", "Delete Block(187)", "Delete EnhancedForStatement(188)"]}}, {"UserAuthPassword_cluster": {"actions": [{"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0", "MOV Block to MethodDeclaration at 7"]}, {"root": "UPDATE from TODO Add javadoc to Implements the &quot;password&quot; authentication mechanism", "operations": ["UPD TextElement: TODO Add javadoc from TODO Add javadoc to Implements the &quot;password&quot; authentication mechanism"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: passwords to InfixExpression: == at 0", "INS ParenthesizedExpression to InfixExpression: || at 1", "INS NullLiteral to InfixExpression: == at 1", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS ParenthesizedExpression to InfixExpression: || at 0", "INS InfixExpression: == to ParenthesizedExpression at 0", "INS PrefixExpression: ! to ParenthesizedExpression at 0", "INS InfixExpression: || to IfStatement at 0"]}, {"root": "INS SimpleName: passwords to Assignment: = at 0", "operations": ["INS SimpleName: passwords to Assignment: = at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0", "MOV ReturnStatement to Block at 1"]}, {"root": "INS QualifiedName: PasswordIdentityProvider.Utils to MethodInvocation at 0", "operations": ["INS QualifiedName: PasswordIdentityProvider.Utils to MethodInvocation at 0"]}, {"root": "UPDATE from pwds to iteratorOf", "operations": ["UPD SimpleName: pwds from pwds to iteratorOf"]}, {"root": "UPDATE from iterator to session", "operations": ["UPD SimpleName: iterator from iterator to session"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.ArrayList", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Collection", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.List"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: identities", "DEL ParameterizedType: Collection<?>", "DEL SimpleType: Collection", "DEL SingleVariableDeclaration", "DEL SimpleName: Collection", "DEL WildcardType: ?"]}, {"root": "DEL SimpleName: identities", "operations": ["DEL SimpleName: identities"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: String", "DEL SimpleName: pwds", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: ArrayList", "DEL SimpleName: List", "DEL SimpleType: List", "DEL VariableDeclarationStatement", "DEL SimpleType: ArrayList", "DEL ParameterizedType: ArrayList<>", "DEL ParameterizedType: List<String>", "DEL SimpleType: String"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL EnhancedForStatement", "DEL SimpleName: Object", "DEL Block", "DEL InstanceofExpression", "DEL SimpleName: pwds", "DEL IfStatement", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: o", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: o", "DEL SimpleType: String", "DEL SimpleType: Object", "DEL SimpleName: String", "DEL SimpleName: add", "DEL CastExpression", "DEL SimpleName: o", "DEL SingleVariableDeclaration", "DEL SimpleName: identities", "DEL Block"]}, {"root": "DEL FieldAccess", "operations": ["DEL FieldAccess", "DEL ThisExpression", "DEL SimpleName: passwords"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL IfStatement"]}]}}, {"UserAuthPassword_diff": {"operations": ["Move Block(198) into MethodDeclaration(175) at 7", "Update TextElement: TODO Add javadoc(24) to Implements the &quot;password&quot; authentication mechanism", "Insert IfStatement(126) into Block(174) at 0", "Insert InfixExpression: ||(110) into IfStatement(126) at 0", "Insert Block(125) into IfStatement(126) at 1", "Insert SimpleName: passwords(77) into Assignment: =(82) at 0", "Insert ParenthesizedExpression(104) into InfixExpression: ||(110) at 0", "Insert ParenthesizedExpression(109) into InfixExpression: ||(110) at 1", "Move IfStatement(211) into Block(125) at 0", "Move ReturnStatement(213) into Block(125) at 1", "Insert QualifiedName: PasswordIdentityProvider.Utils(78) into MethodInvocation(81) at 0", "Update SimpleName: pwds(126) to iteratorOf", "Update SimpleName: iterator(127) to session", "Insert InfixExpression: ==(103) into ParenthesizedExpression(104) at 0", "Insert PrefixExpression: !(108) into ParenthesizedExpression(109) at 0", "Insert SimpleName: passwords(101) into InfixExpression: ==(103) at 0", "Insert NullLiteral(102) into InfixExpression: ==(103) at 1", "Move MethodInvocation(150) into PrefixExpression: !(108) at 0", "Delete QualifiedName: java.util.ArrayList(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.util.Collection(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: java.util.List(10)", "Delete ImportDeclaration(11)", "Delete SimpleName: Collection(76)", "Delete SimpleType: Collection(77)", "Delete WildcardType: ?(78)", "Delete ParameterizedType: Collection<?>(79)", "Delete SimpleName: identities(80)", "Delete SingleVariableDeclaration(81)", "Delete SimpleName: identities(87)", "Delete SimpleName: List(90)", "Delete SimpleType: List(91)", "Delete SimpleName: String(92)", "Delete SimpleType: String(93)", "Delete ParameterizedType: List<String>(94)", "Delete SimpleName: pwds(95)", "Delete SimpleName: ArrayList(96)", "Delete SimpleType: ArrayList(97)", "Delete ParameterizedType: ArrayList<>(98)", "Delete ClassInstanceCreation(99)", "Delete VariableDeclarationFragment(100)", "Delete VariableDeclarationStatement(101)", "Delete SimpleName: Object(102)", "Delete SimpleType: Object(103)", "Delete SimpleName: o(104)", "Delete SingleVariableDeclaration(105)", "Delete SimpleName: identities(106)", "Delete SimpleName: o(107)", "Delete SimpleName: String(108)", "Delete SimpleType: String(109)", "Delete InstanceofExpression(110)", "Delete SimpleName: pwds(111)", "Delete SimpleName: add(112)", "Delete SimpleName: String(113)", "Delete SimpleType: String(114)", "Delete SimpleName: o(115)", "Delete CastExpression(116)", "Delete MethodInvocation(117)", "Delete ExpressionStatement(118)", "Delete Block(119)", "Delete IfStatement(120)", "Delete Block(121)", "Delete EnhancedForStatement(122)", "Delete ThisExpression(123)", "Delete SimpleName: passwords(124)", "Delete FieldAccess(125)", "Delete IfStatement(199)", "Delete Block(214)"]}}, {"UserAuthPublicKey_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 1", "MOV ImportDeclaration to CompilationUnit at 13"]}, {"root": "UPDATE from java.util.List to java.io.Closeable", "operations": ["UPD QualifiedName: java.util.List from java.util.List to java.io.Closeable"]}, {"root": "UPDATE from org.apache.sshd.client.auth.pubkey.KeyPairIdentity to org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator", "operations": ["UPD QualifiedName: org.apache.sshd.client.auth.pubkey.KeyPairIdentity from org.apache.sshd.client.auth.pubkey.KeyPairIdentity to org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 9", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: releaseKeys to MethodInvocation at 0", "INS ExpressionStatement to Block at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS Block to TryStatement at 0", "INS TryStatement to Block at 0", "INS Block to TryStatement at 1", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS Modifier: protected to MethodDeclaration at 0", "INS Block to MethodDeclaration at 4", "INS SimpleType: IOException to MethodDeclaration at 3", "INS SimpleName: releaseKeys to MethodDeclaration at 2", "INS PrimitiveType: void to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV PrimitiveType: void to MethodDeclaration at 2", "MOV SimpleType: Exception to MethodDeclaration at 6", "MOV SimpleName: init to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 4"]}, {"root": "UPDATE from TODO Add javadoc to Implements the &quot;publickey&quot; authentication mechanism", "operations": ["UPD TextElement: TODO Add javadoc from TODO Add javadoc to Implements the &quot;publickey&quot; authentication mechanism"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS SimpleName: session to MethodInvocation at 3", "INS SimpleName: service to MethodInvocation at 4", "INS ExpressionStatement to Block at 0", "INS SimpleName: current to MethodInvocation at 5", "INS SimpleName: log to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS StringLiteral: \"sendAuthDataRequest({})[{}] current key details: {}\" to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: log to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 2", "INS SimpleName: trace to MethodInvocation at 1"]}, {"root": "UPDATE from SshAgentFactory to IOException", "operations": ["UPD SimpleName: SshAgentFactory from SshAgentFactory to IOException"]}, {"root": "MOVE from SimpleType: IOException", "operations": ["MOV SimpleName: SshAgentFactory to SimpleType: IOException at 0"]}, {"root": "INS Assignment: = to ExpressionStatement at 0", "operations": ["INS SimpleName: keys to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ClassInstanceCreation to Assignment: = at 1"]}, {"root": "INS InfixExpression: || to IfStatement at 0", "operations": ["INS InfixExpression: || to IfStatement at 0", "INS ParenthesizedExpression to InfixExpression: || at 1", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: == to ParenthesizedExpression at 0", "INS SimpleName: keys to InfixExpression: == at 0", "INS ParenthesizedExpression to InfixExpression: || at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from KeyPairIdentity to UserAuthPublicKeyIterator", "operations": ["UPD SimpleType: KeyPairIdentity from KeyPairIdentity to UserAuthPublicKeyIterator", "UPD SimpleName: KeyPairIdentity from KeyPairIdentity to UserAuthPublicKeyIterator"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleName: session to ClassInstanceCreation at 1", "MOV SimpleType: KeyPairIdentity to ClassInstanceCreation at 0"]}, {"root": "MOVE from ParenthesizedExpression", "operations": ["MOV PrefixExpression: ! to ParenthesizedExpression at 0"]}, {"root": "INS InstanceofExpression to IfStatement at 0", "operations": ["INS InstanceofExpression to IfStatement at 0", "INS SimpleName: keys to InstanceofExpression at 0", "INS SimpleType: Closeable to InstanceofExpression at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1"]}, {"root": "UPDATE from \"processAuthDataRequest({})[{}] send SSH_MSG_USERAUTH_PK_OK reply for {}: type={}, fingerprint={}\" to \"processAuthDataRequest({})[{}] send SSH_MSG_USERAUTH_PK_OK reply {} type={} - fingerprint={}\"", "operations": ["UPD StringLiteral: \"processAuthDataRequest({})[{}] send SSH_MSG_USERAUTH_PK_OK reply for {}: type={}, fingerprint={}\" from \"processAuthDataRequest({})[{}] send SSH_MSG_USERAUTH_PK_OK reply for {}: type={}, fingerprint={}\" to \"processAuthDataRequest({})[{}] send SSH_MSG_USERAUTH_PK_OK reply {} type={} - fingerprint={}\""]}, {"root": "UPDATE from agent to releaseKeys", "operations": ["UPD SimpleName: agent from agent to releaseKeys"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "INS SimpleName: keys to Assignment: = at 0", "operations": ["INS SimpleName: keys to Assignment: = at 0"]}, {"root": "UPDATE from Pair to Closeable", "operations": ["UPD SimpleName: Pair from Pair to Closeable", "UPD SimpleName: KeyAgentIdentity from KeyAgentIdentity to Closeable"]}, {"root": "MOVE from SimpleType: Closeable", "operations": ["MOV SimpleName: Pair to SimpleType: Closeable at 0"]}, {"root": "UPDATE from isDebugEnabled to isTraceEnabled", "operations": ["UPD SimpleName: isDebugEnabled from isDebugEnabled to isTraceEnabled"]}, {"root": "INS ParenthesizedExpression to MethodInvocation at 0", "operations": ["INS CastExpression to ParenthesizedExpression at 0", "INS SimpleType: Closeable to CastExpression at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS SimpleName: keys to CastExpression at 1"]}, {"root": "INS SimpleName: close to MethodInvocation at 1", "operations": ["INS SimpleName: close to MethodInvocation at 1"]}, {"root": "UPDATE from debug to trace", "operations": ["UPD SimpleName: debug from debug to trace"]}, {"root": "UPDATE from \"init({}) add agent public key type={}: comment={}, fingerprint={}\" to \"releaseKeys({}) closing {}\"", "operations": ["UPD StringLiteral: \"init({}) add agent public key type={}: comment={}, fingerprint={}\" from \"init({}) add agent public key type={}: comment={}, fingerprint={}\" to \"releaseKeys({}) closing {}\""]}, {"root": "UPDATE from key to keys", "operations": ["UPD SimpleName: key from key to keys"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: key to MethodInvocation at 5"]}, {"root": "UPDATE from getSecond to getClientSession", "operations": ["UPD SimpleName: getSecond from getSecond to getClientSession"]}, {"root": "MOVE from SimpleType: Closeable", "operations": ["MOV SimpleName: KeyAgentIdentity to SimpleType: Closeable at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.security.KeyPair", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.ArrayList", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Collection"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.sshd.agent.SshAgent"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.sshd.agent.SshAgentFactory"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.sshd.client.auth.pubkey.KeyAgentIdentity", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.sshd.common.FactoryManager", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.sshd.common.keyprovider.KeyPairProvider"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.sshd.common.util.GenericUtils", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.sshd.common.util.Pair"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.sshd.common.util.ValidateUtils", "DEL ImportDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL SimpleName: agent", "DEL SimpleType: SshAgent", "DEL SimpleName: SshAgent", "DEL Modifier: private"]}, {"root": "DEL SimpleName: identities", "operations": ["DEL SimpleName: identities"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: KeyPair", "DEL SimpleName: o", "DEL SimpleName: add", "DEL SimpleType: KeyPair", "DEL ClassInstanceCreation", "DEL SimpleName: ids", "DEL CastExpression"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ParameterizedType: Collection<Pair<PublicKey,String>>", "DEL SimpleName: manager", "DEL SimpleName: session", "DEL SimpleName: KeyUtils", "DEL SimpleName: identities", "DEL SimpleName: PublicKey", "DEL SimpleName: kp", "DEL SimpleName: factory", "DEL NullLiteral", "DEL SimpleName: agent", "DEL MethodInvocation", "DEL SimpleName: session", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: o", "DEL ParameterizedType: Collection<?>", "DEL SimpleName: Collection", "DEL VariableDeclarationFragment", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"No session factory manager\"", "DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: getKeyType", "DEL FieldAccess", "DEL VariableDeclarationFragment", "DEL InstanceofExpression", "DEL ExpressionStatement", "DEL SimpleName: KeyPairProvider", "DEL SimpleName: kp", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: getFactoryManager", "DEL ThisExpression", "DEL SimpleName: ids", "DEL VariableDeclarationStatement", "DEL FieldAccess", "DEL SimpleName: KeyPair", "DEL SimpleName: getPublic", "DEL SingleVariableDeclaration", "DEL SimpleName: log", "DEL SimpleType: SshAgentFactory", "DEL SimpleName: getIdentities", "DEL SimpleType: ArrayList", "DEL SimpleName: iterator", "DEL SimpleType: KeyPair", "DEL EnhancedForStatement", "DEL SimpleName: provider", "DEL Block", "DEL SimpleName: getFingerPrint", "DEL Block", "DEL ParameterizedType: List<PublicKeyIdentity>", "DEL SimpleName: KeyPairIdentity", "DEL VariableDeclarationStatement", "DEL SimpleName: factory", "DEL SimpleName: keys", "DEL StringLiteral: \"No agent created\"", "DEL VariableDeclarationFragment", "DEL SimpleName: KeyPair", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: factory", "DEL ClassInstanceCreation", "DEL Block", "DEL SimpleName: KeyUtils", "DEL SimpleName: FactoryManager", "DEL MethodInvocation", "DEL IfStatement", "DEL SimpleName: session", "DEL SimpleName: kp", "DEL SimpleName: Collection", "DEL SimpleName: ids", "DEL SimpleName: getAgentFactory", "DEL SimpleName: ValidateUtils", "DEL SimpleName: identities", "DEL EnhancedForStatement", "DEL SimpleName: checkNotNull", "DEL SimpleName: ValidateUtils", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: KeyPair", "DEL SimpleName: List", "DEL SimpleName: debug", "DEL SimpleName: o", "DEL ParameterizedType: ArrayList<>", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL IfStatement", "DEL Block", "DEL Block", "DEL InfixExpression: !=", "DEL SimpleName: Object", "DEL SimpleName: checkNotNull", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: provider", "DEL ParameterizedType: Pair<PublicKey,String>", "DEL SimpleType: Collection", "DEL SimpleName: provider", "DEL Block", "DEL SimpleType: KeyPairIdentity", "DEL IfStatement", "DEL Assignment: =", "DEL SimpleType: List", "DEL NullLiteral", "DEL SimpleName: PublicKeyIdentity", "DEL Block", "DEL SimpleType: KeyPairProvider", "DEL SimpleType: Object", "DEL SimpleType: Collection", "DEL SimpleName: manager", "DEL SimpleName: loadKeys", "DEL SimpleName: session", "DEL SimpleName: createClient", "DEL ExpressionStatement", "DEL SimpleName: getKeyPairProvider", "DEL SimpleName: kp", "DEL SimpleType: String", "DEL SimpleType: PublicKeyIdentity", "DEL SimpleName: ids", "DEL WildcardType: ?", "DEL SimpleName: agent", "DEL Block", "DEL MethodDeclaration", "DEL SimpleName: add", "DEL SimpleName: Pair", "DEL StringLiteral: \"init({}) add provider public key type={}: {}\"", "DEL SimpleType: FactoryManager", "DEL MethodInvocation", "DEL SimpleType: PublicKey", "DEL SimpleType: Pair", "DEL SimpleName: String", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: agentKeys", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: ArrayList", "DEL SimpleName: manager", "DEL VariableDeclarationFragment"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: isDebugEnabled", "DEL SimpleName: log", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: close", "operations": ["DEL SimpleName: close"]}, {"root": "DEL Block", "operations": ["DEL Assignment: =", "DEL SimpleName: agent", "DEL NullLiteral", "DEL Block", "DEL ExpressionStatement"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: agent", "DEL Block", "DEL NullLiteral", "DEL InfixExpression: !=", "DEL IfStatement"]}, {"root": "DEL SimpleName: session", "operations": ["DEL SimpleName: session"]}, {"root": "DEL SimpleName: pair", "operations": ["DEL SimpleName: pair"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: KeyUtils", "DEL SimpleName: getKeyType", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: key", "DEL SimpleName: getFingerPrint", "DEL SimpleName: KeyUtils"]}, {"root": "DEL SimpleName: ids", "operations": ["DEL SimpleName: ids"]}, {"root": "DEL SimpleName: add", "operations": ["DEL SimpleName: add"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: agent", "DEL SimpleType: KeyAgentIdentity", "DEL SimpleName: key", "DEL ClassInstanceCreation"]}, {"root": "DEL InfixExpression: >", "operations": ["DEL SimpleName: GenericUtils", "DEL MethodInvocation", "DEL SimpleName: size", "DEL InfixExpression: >", "DEL SimpleName: agentKeys", "DEL NumberLiteral: 0"]}, {"root": "DEL Block", "operations": ["DEL SimpleType: String", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL SimpleName: pair", "DEL MethodInvocation", "DEL SimpleName: agentKeys", "DEL SimpleName: PublicKey", "DEL SimpleName: getFirst", "DEL SimpleName: key", "DEL ParameterizedType: Pair<PublicKey,String>", "DEL SingleVariableDeclaration", "DEL SimpleType: PublicKey", "DEL Block", "DEL EnhancedForStatement", "DEL SimpleName: PublicKey", "DEL SimpleName: pair", "DEL SimpleType: Pair", "DEL Block", "DEL SimpleType: PublicKey", "DEL VariableDeclarationFragment"]}, {"root": "DEL FieldAccess", "operations": ["DEL FieldAccess", "DEL ThisExpression", "DEL SimpleName: agent"]}]}}, {"UserAuthPublicKey_diff": {"operations": ["Move ImportDeclaration(15) into CompilationUnit(582) at 1", "Move ImportDeclaration(23) into CompilationUnit(582) at 13", "Update QualifiedName: java.util.List(14) to java.io.Closeable", "Update QualifiedName: org.apache.sshd.client.auth.pubkey.KeyPairIdentity(22) to org.apache.sshd.client.auth.pubkey.UserAuthPublicKeyIterator", "Insert MethodDeclaration(98) into TypeDeclaration: class(581) at 8", "Insert MethodDeclaration(580) into TypeDeclaration: class(581) at 12", "Move MarkerAnnotation(96) into MethodDeclaration(98) at 0", "Move Modifier: public(97) into MethodDeclaration(98) at 1", "Move PrimitiveType: void(98) into MethodDeclaration(98) at 2", "Move SimpleName: init(99) into MethodDeclaration(98) at 3", "Move SingleVariableDeclaration(103) into MethodDeclaration(98) at 4", "Move SingleVariableDeclaration(107) into MethodDeclaration(98) at 5", "Move SimpleType: Exception(115) into MethodDeclaration(98) at 6", "Insert Block(97) into MethodDeclaration(98) at 7", "Move Block(770) into MethodDeclaration(539) at 4", "Insert Modifier: protected(540) into MethodDeclaration(580) at 0", "Insert PrimitiveType: void(541) into MethodDeclaration(580) at 1", "Insert SimpleName: releaseKeys(542) into MethodDeclaration(580) at 2", "Insert SimpleType: IOException(544) into MethodDeclaration(580) at 3", "Insert Block(579) into MethodDeclaration(580) at 4", "Update TextElement: TODO Add javadoc(50) to Implements the &quot;publickey&quot; authentication mechanism", "Move ExpressionStatement(121) into Block(97) at 0", "Insert ExpressionStatement(89) into Block(97) at 1", "Move ExpressionStatement(154) into Block(97) at 2", "Insert IfStatement(158) into Block(249) at 2", "Update SimpleName: SshAgentFactory(171) to IOException", "Move SimpleName: SshAgentFactory(171) into SimpleType: IOException(544) at 0", "Insert TryStatement(578) into Block(579) at 0", "Insert MethodInvocation(88) into ExpressionStatement(89) at 0", "Insert Assignment: =(95) into ExpressionStatement(96) at 0", "Insert InfixExpression: ||(123) into IfStatement(139) at 0", "Insert MethodInvocation(148) into IfStatement(158) at 0", "Insert Block(157) into IfStatement(158) at 1", "Move MethodInvocation(299) into IfStatement(338) at 0", "Insert Block(572) into TryStatement(578) at 0", "Insert Block(577) into TryStatement(578) at 1", "Insert SimpleName: releaseKeys(87) into MethodInvocation(88) at 0", "Insert SimpleName: keys(90) into Assignment: =(95) at 0", "Insert ClassInstanceCreation(94) into Assignment: =(95) at 1", "Insert ParenthesizedExpression(117) into InfixExpression: ||(123) at 0", "Insert ParenthesizedExpression(122) into InfixExpression: ||(123) at 1", "Insert SimpleName: log(146) into MethodInvocation(148) at 0", "Insert SimpleName: isTraceEnabled(147) into MethodInvocation(148) at 1", "Insert ExpressionStatement(156) into Block(157) at 0", "Move IfStatement(269) into Block(572) at 0", "Move ExpressionStatement(276) into Block(577) at 0", "Update SimpleType: KeyPairIdentity(146) to UserAuthPublicKeyIterator", "Move SimpleType: KeyPairIdentity(146) into ClassInstanceCreation(94) at 0", "Move SimpleName: session(147) into ClassInstanceCreation(94) at 1", "Insert InfixExpression: ==(116) into ParenthesizedExpression(117) at 0", "Move PrefixExpression: !(359) into ParenthesizedExpression(122) at 0", "Insert MethodInvocation(155) into ExpressionStatement(156) at 0", "Insert InstanceofExpression(548) into IfStatement(571) at 0", "Insert Block(570) into IfStatement(571) at 1", "Update SimpleName: KeyPairIdentity(145) to UserAuthPublicKeyIterator", "Insert SimpleName: keys(114) into InfixExpression: ==(116) at 0", "Insert NullLiteral(115) into InfixExpression: ==(116) at 1", "Insert SimpleName: log(149) into MethodInvocation(155) at 0", "Insert SimpleName: trace(150) into MethodInvocation(155) at 1", "Insert StringLiteral: \"sendAuthDataRequest({})[{}] current key details: {}\"(151) into MethodInvocation(155) at 2", "Insert SimpleName: session(152) into MethodInvocation(155) at 3", "Insert SimpleName: service(153) into MethodInvocation(155) at 4", "Insert SimpleName: current(154) into MethodInvocation(155) at 5", "Update StringLiteral: \"processAuthDataRequest({})[{}] send SSH_MSG_USERAUTH_PK_OK reply for {}: type={}, fingerprint={}\"(549) to \"processAuthDataRequest({})[{}] send SSH_MSG_USERAUTH_PK_OK reply {} type={} - fingerprint={}\"", "Update SimpleName: agent(734) to releaseKeys", "Insert SimpleName: keys(545) into InstanceofExpression(548) at 0", "Insert SimpleType: Closeable(547) into InstanceofExpression(548) at 1", "Move IfStatement(256) into Block(570) at 0", "Move ExpressionStatement(265) into Block(570) at 1", "Insert SimpleName: keys(573) into Assignment: =(575) at 0", "Update SimpleName: Pair(217) to Closeable", "Move SimpleName: Pair(217) into SimpleType: Closeable(547) at 0", "Update SimpleName: isDebugEnabled(236) to isTraceEnabled", "Insert ParenthesizedExpression(566) into MethodInvocation(568) at 0", "Insert SimpleName: close(567) into MethodInvocation(568) at 1", "Insert CastExpression(565) into ParenthesizedExpression(566) at 0", "Update SimpleName: debug(239) to trace", "Update StringLiteral: \"init({}) add agent public key type={}: comment={}, fingerprint={}\"(240) to \"releaseKeys({}) closing {}\"", "Update SimpleName: key(247) to keys", "Move SimpleName: key(247) into MethodInvocation(558) at 5", "Insert SimpleType: Closeable(563) into CastExpression(565) at 0", "Insert SimpleName: keys(564) into CastExpression(565) at 1", "Update SimpleName: getSecond(243) to getClientSession", "Update SimpleName: KeyAgentIdentity(259) to Closeable", "Move SimpleName: KeyAgentIdentity(259) into SimpleType: Closeable(563) at 0", "Delete QualifiedName: java.security.KeyPair(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.util.ArrayList(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: java.util.Collection(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.sshd.agent.SshAgent(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: org.apache.sshd.agent.SshAgentFactory(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.sshd.client.auth.pubkey.KeyAgentIdentity(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: org.apache.sshd.common.FactoryManager(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: org.apache.sshd.common.keyprovider.KeyPairProvider(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: org.apache.sshd.common.util.GenericUtils(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: org.apache.sshd.common.util.Pair(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: org.apache.sshd.common.util.ValidateUtils(42)", "Delete ImportDeclaration(43)", "Delete Modifier: private(68)", "Delete SimpleName: SshAgent(69)", "Delete SimpleType: SshAgent(70)", "Delete SimpleName: agent(71)", "Delete VariableDeclarationFragment(72)", "Delete FieldDeclaration(73)", "Delete SimpleName: identities(119)", "Delete SimpleName: ids(143)", "Delete SimpleName: add(144)", "Delete SimpleName: KeyPair(148)", "Delete SimpleType: KeyPair(149)", "Delete SimpleName: o(150)", "Delete CastExpression(151)", "Delete ClassInstanceCreation(152)", "Delete MethodInvocation(153)", "Delete SimpleName: Collection(108)", "Delete SimpleType: Collection(109)", "Delete WildcardType: ?(110)", "Delete ParameterizedType: Collection<?>(111)", "Delete SimpleName: identities(112)", "Delete SingleVariableDeclaration(113)", "Delete SimpleName: List(122)", "Delete SimpleType: List(123)", "Delete SimpleName: PublicKeyIdentity(124)", "Delete SimpleType: PublicKeyIdentity(125)", "Delete ParameterizedType: List<PublicKeyIdentity>(126)", "Delete SimpleName: ids(127)", "Delete SimpleName: ArrayList(128)", "Delete SimpleType: ArrayList(129)", "Delete ParameterizedType: ArrayList<>(130)", "Delete ClassInstanceCreation(131)", "Delete VariableDeclarationFragment(132)", "Delete VariableDeclarationStatement(133)", "Delete SimpleName: Object(134)", "Delete SimpleType: Object(135)", "Delete SimpleName: o(136)", "Delete SingleVariableDeclaration(137)", "Delete SimpleName: identities(138)", "Delete SimpleName: o(139)", "Delete SimpleName: KeyPair(140)", "Delete SimpleType: KeyPair(141)", "Delete InstanceofExpression(142)", "Delete Block(155)", "Delete IfStatement(156)", "Delete Block(157)", "Delete EnhancedForStatement(158)", "Delete SimpleName: FactoryManager(159)", "Delete SimpleType: FactoryManager(160)", "Delete SimpleName: manager(161)", "Delete SimpleName: ValidateUtils(162)", "Delete SimpleName: checkNotNull(163)", "Delete SimpleName: session(164)", "Delete SimpleName: getFactoryManager(165)", "Delete MethodInvocation(166)", "Delete StringLiteral: \"No session factory manager\"(167)", "Delete MethodInvocation(168)", "Delete VariableDeclarationFragment(169)", "Delete VariableDeclarationStatement(170)", "Delete SimpleType: SshAgentFactory(172)", "Delete SimpleName: factory(173)", "Delete SimpleName: manager(174)", "Delete SimpleName: getAgentFactory(175)", "Delete MethodInvocation(176)", "Delete VariableDeclarationFragment(177)", "Delete VariableDeclarationStatement(178)", "Delete SimpleName: factory(179)", "Delete NullLiteral(180)", "Delete InfixExpression: !=(181)", "Delete ThisExpression(182)", "Delete SimpleName: agent(183)", "Delete FieldAccess(184)", "Delete SimpleName: ValidateUtils(185)", "Delete SimpleName: checkNotNull(186)", "Delete SimpleName: factory(187)", "Delete SimpleName: createClient(188)", "Delete SimpleName: manager(189)", "Delete MethodInvocation(190)", "Delete StringLiteral: \"No agent created\"(191)", "Delete MethodInvocation(192)", "Delete Assignment: =(193)", "Delete ExpressionStatement(194)", "Delete SimpleName: Collection(195)", "Delete SimpleType: Collection(196)", "Delete SimpleName: Pair(197)", "Delete SimpleType: Pair(198)", "Delete SimpleName: PublicKey(199)", "Delete SimpleType: PublicKey(200)", "Delete SimpleName: String(201)", "Delete SimpleType: String(202)", "Delete ParameterizedType: Pair<PublicKey,String>(203)", "Delete ParameterizedType: Collection<Pair<PublicKey,String>>(204)", "Delete SimpleName: agentKeys(205)", "Delete SimpleName: agent(206)", "Delete SimpleName: getIdentities(207)", "Delete MethodInvocation(208)", "Delete VariableDeclarationFragment(209)", "Delete VariableDeclarationStatement(210)", "Delete Block(270)", "Delete Block(277)", "Delete IfStatement(278)", "Delete SimpleName: KeyPairProvider(279)", "Delete SimpleType: KeyPairProvider(280)", "Delete SimpleName: provider(281)", "Delete SimpleName: session(282)", "Delete SimpleName: getKeyPairProvider(283)", "Delete MethodInvocation(284)", "Delete VariableDeclarationFragment(285)", "Delete VariableDeclarationStatement(286)", "Delete SimpleName: provider(287)", "Delete NullLiteral(288)", "Delete InfixExpression: !=(289)", "Delete SimpleName: KeyPair(290)", "Delete SimpleType: KeyPair(291)", "Delete SimpleName: kp(292)", "Delete SingleVariableDeclaration(293)", "Delete SimpleName: provider(294)", "Delete SimpleName: loadKeys(295)", "Delete MethodInvocation(296)", "Delete SimpleName: log(300)", "Delete SimpleName: debug(301)", "Delete StringLiteral: \"init({}) add provider public key type={}: {}\"(302)", "Delete SimpleName: session(303)", "Delete SimpleName: KeyUtils(304)", "Delete SimpleName: getKeyType(305)", "Delete SimpleName: kp(306)", "Delete MethodInvocation(307)", "Delete SimpleName: KeyUtils(308)", "Delete SimpleName: getFingerPrint(309)", "Delete SimpleName: kp(310)", "Delete SimpleName: getPublic(311)", "Delete MethodInvocation(312)", "Delete MethodInvocation(313)", "Delete MethodInvocation(314)", "Delete ExpressionStatement(315)", "Delete Block(316)", "Delete IfStatement(317)", "Delete SimpleName: ids(318)", "Delete SimpleName: add(319)", "Delete SimpleName: KeyPairIdentity(320)", "Delete SimpleType: KeyPairIdentity(321)", "Delete SimpleName: session(322)", "Delete SimpleName: kp(323)", "Delete ClassInstanceCreation(324)", "Delete MethodInvocation(325)", "Delete ExpressionStatement(326)", "Delete Block(327)", "Delete EnhancedForStatement(328)", "Delete Block(329)", "Delete IfStatement(330)", "Delete ThisExpression(331)", "Delete SimpleName: keys(332)", "Delete FieldAccess(333)", "Delete SimpleName: ids(334)", "Delete SimpleName: iterator(335)", "Delete MethodInvocation(336)", "Delete Assignment: =(337)", "Delete ExpressionStatement(338)", "Delete Block(339)", "Delete MethodDeclaration(340)", "Delete SimpleName: log(544)", "Delete SimpleName: isDebugEnabled(545)", "Delete MethodInvocation(546)", "Delete SimpleName: close(735)", "Delete SimpleName: agent(761)", "Delete NullLiteral(762)", "Delete Assignment: =(763)", "Delete ExpressionStatement(764)", "Delete Block(765)", "Delete SimpleName: agent(731)", "Delete NullLiteral(732)", "Delete InfixExpression: !=(733)", "Delete IfStatement(771)", "Delete Block(772)", "Delete SimpleName: session(241)", "Delete SimpleName: pair(242)", "Delete SimpleName: KeyUtils(245)", "Delete SimpleName: getKeyType(246)", "Delete MethodInvocation(248)", "Delete SimpleName: KeyUtils(249)", "Delete SimpleName: getFingerPrint(250)", "Delete SimpleName: key(251)", "Delete MethodInvocation(252)", "Delete SimpleName: ids(257)", "Delete SimpleName: add(258)", "Delete SimpleType: KeyAgentIdentity(260)", "Delete SimpleName: agent(261)", "Delete SimpleName: key(262)", "Delete ClassInstanceCreation(263)", "Delete SimpleName: GenericUtils(211)", "Delete SimpleName: size(212)", "Delete SimpleName: agentKeys(213)", "Delete MethodInvocation(214)", "Delete NumberLiteral: 0(215)", "Delete InfixExpression: >(216)", "Delete SimpleType: Pair(218)", "Delete SimpleName: PublicKey(219)", "Delete SimpleType: PublicKey(220)", "Delete SimpleName: String(221)", "Delete SimpleType: String(222)", "Delete ParameterizedType: Pair<PublicKey,String>(223)", "Delete SimpleName: pair(224)", "Delete SingleVariableDeclaration(225)", "Delete SimpleName: agentKeys(226)", "Delete SimpleName: PublicKey(227)", "Delete SimpleType: PublicKey(228)", "Delete SimpleName: key(229)", "Delete SimpleName: pair(230)", "Delete SimpleName: getFirst(231)", "Delete MethodInvocation(232)", "Delete VariableDeclarationFragment(233)", "Delete VariableDeclarationStatement(234)", "Delete Block(266)", "Delete EnhancedForStatement(267)", "Delete Block(268)", "Delete ThisExpression(271)", "Delete SimpleName: agent(272)", "Delete FieldAccess(273)"]}}, {"ClientSession_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.security.KeyPair", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.sshd.common.keyprovider.KeyPairProviderHolder"]}, {"root": "DEL SimpleType: KeyPairProviderHolder", "operations": ["DEL SimpleName: KeyPairProviderHolder", "DEL SimpleType: KeyPairProviderHolder"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: password", "DEL TextElement: /empty", "DEL SimpleName: String", "DEL SimpleName: addPasswordIdentity", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL TextElement:  null", "DEL SimpleName: password", "DEL PrimitiveType: void", "DEL TagElement: @param", "DEL MethodDeclaration", "DEL TextElement:  Password to be added - may not be ", "DEL TagElement: @code", "DEL SimpleType: String"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TextElement:  The removed password - same one that was added via", "DEL SingleVariableDeclaration", "DEL SimpleName: addPasswordIdentity", "DEL TextElement:  The password to remove - ignored if ", "DEL MethodRefParameter", "DEL MethodRef", "DEL SimpleType: String", "DEL SimpleType: String", "DEL TagElement: @return", "DEL SimpleName: removePasswordIdentity", "DEL SimpleName: String", "DEL TextElement:  null", "DEL SimpleType: String", "DEL TagElement: @code", "DEL TagElement: @link", "DEL SimpleName: String", "DEL TagElement: @param", "DEL TextElement: /empty", "DEL SimpleName: String", "DEL TextElement:  if no", "DEL TagElement: @code", "DEL TextElement: match found", "DEL TextElement:  null", "DEL SimpleName: password", "DEL Javadoc", "DEL MethodDeclaration", "DEL TextElement:  - or ", "DEL SimpleName: password"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: KeyPair", "DEL TagElement: @link", "DEL SimpleName: addPublicKeyIdentity", "DEL SimpleName: KeyPair", "DEL PrimitiveType: void", "DEL SimpleName: key", "DEL TagElement: @param", "DEL TextElement:  The ", "DEL TextElement:  null", "DEL SimpleName: key", "DEL TextElement:  to add - may not be ", "DEL Javadoc", "DEL SimpleType: KeyPair", "DEL TagElement: @code"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodRefParameter", "DEL Javadoc", "DEL SimpleName: KeyPair", "DEL TagElement: @link", "DEL SimpleName: KeyPair", "DEL TagElement: @code", "DEL SingleVariableDeclaration", "DEL SimpleName: kp", "DEL TagElement: @link", "DEL TextElement:  The ", "DEL TagElement: @return", "DEL TextElement:  - or ", "DEL SimpleName: KeyPair", "DEL MethodDeclaration", "DEL TextElement:  to remove - ignored if ", "DEL SimpleName: KeyPair", "DEL SimpleType: KeyPair", "DEL TextElement:  if no", "DEL TextElement:  null", "DEL TextElement:  null", "DEL TextElement:  The removed ", "DEL TextElement: match found", "DEL SimpleName: removePublicKeyIdentity", "DEL TagElement: @link", "DEL SimpleName: kp", "DEL SimpleName: KeyPair", "DEL TextElement:  - same one that was added via", "DEL TagElement: @code", "DEL SimpleType: KeyPair", "DEL SimpleName: addPublicKeyIdentity", "DEL TagElement: @param", "DEL MethodRef", "DEL SimpleType: KeyPair"]}]}}, {"ClientSession_diff": {"operations": ["Delete QualifiedName: java.security.KeyPair(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.sshd.common.keyprovider.KeyPairProviderHolder(40)", "Delete ImportDeclaration(41)", "Delete SimpleName: KeyPairProviderHolder(108)", "Delete SimpleType: KeyPairProviderHolder(109)", "Delete SimpleName: password(122)", "Delete TextElement:  Password to be added - may not be (123)", "Delete TextElement:  null(124)", "Delete TagElement: @code(125)", "Delete TextElement: /empty(126)", "Delete TagElement: @param(127)", "Delete Javadoc(128)", "Delete PrimitiveType: void(129)", "Delete SimpleName: addPasswordIdentity(130)", "Delete SimpleName: String(131)", "Delete SimpleType: String(132)", "Delete SimpleName: password(133)", "Delete SingleVariableDeclaration(134)", "Delete MethodDeclaration(135)", "Delete SimpleName: password(136)", "Delete TextElement:  The password to remove - ignored if (137)", "Delete TextElement:  null(138)", "Delete TagElement: @code(139)", "Delete TextElement: /empty(140)", "Delete TagElement: @param(141)", "Delete TextElement:  The removed password - same one that was added via(142)", "Delete SimpleName: addPasswordIdentity(143)", "Delete SimpleName: String(144)", "Delete SimpleType: String(145)", "Delete MethodRefParameter(146)", "Delete MethodRef(147)", "Delete TagElement: @link(148)", "Delete TextElement:  - or (149)", "Delete TextElement:  null(150)", "Delete TagElement: @code(151)", "Delete TextElement:  if no(152)", "Delete TextElement: match found(153)", "Delete TagElement: @return(154)", "Delete Javadoc(155)", "Delete SimpleName: String(156)", "Delete SimpleType: String(157)", "Delete SimpleName: removePasswordIdentity(158)", "Delete SimpleName: String(159)", "Delete SimpleType: String(160)", "Delete SimpleName: password(161)", "Delete SingleVariableDeclaration(162)", "Delete MethodDeclaration(163)", "Delete SimpleName: key(164)", "Delete TextElement:  The (165)", "Delete SimpleName: KeyPair(166)", "Delete TagElement: @link(167)", "Delete TextElement:  to add - may not be (168)", "Delete TextElement:  null(169)", "Delete TagElement: @code(170)", "Delete TagElement: @param(171)", "Delete Javadoc(172)", "Delete PrimitiveType: void(173)", "Delete SimpleName: addPublicKeyIdentity(174)", "Delete SimpleName: KeyPair(175)", "Delete SimpleType: KeyPair(176)", "Delete SimpleName: key(177)", "Delete SingleVariableDeclaration(178)", "Delete MethodDeclaration(179)", "Delete SimpleName: kp(180)", "Delete TextElement:  The (181)", "Delete SimpleName: KeyPair(182)", "Delete TagElement: @link(183)", "Delete TextElement:  to remove - ignored if (184)", "Delete TextElement:  null(185)", "Delete TagElement: @code(186)", "Delete TagElement: @param(187)", "Delete TextElement:  The removed (188)", "Delete SimpleName: KeyPair(189)", "Delete TagElement: @link(190)", "Delete TextElement:  - same one that was added via(191)", "Delete SimpleName: addPublicKeyIdentity(192)", "Delete SimpleName: KeyPair(193)", "Delete SimpleType: KeyPair(194)", "Delete MethodRefParameter(195)", "Delete MethodRef(196)", "Delete TagElement: @link(197)", "Delete TextElement:  - or (198)", "Delete TextElement:  null(199)", "Delete TagElement: @code(200)", "Delete TextElement:  if no(201)", "Delete TextElement: match found(202)", "Delete TagElement: @return(203)", "Delete Javadoc(204)", "Delete SimpleName: KeyPair(205)", "Delete SimpleType: KeyPair(206)", "Delete SimpleName: removePublicKeyIdentity(207)", "Delete SimpleName: KeyPair(208)", "Delete SimpleType: KeyPair(209)", "Delete SimpleName: kp(210)", "Delete SingleVariableDeclaration(211)", "Delete MethodDeclaration(212)"]}}, {"ClientSessionImpl_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleType: String to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: serviceName to VariableDeclarationFragment at 0"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS QualifiedName: SessionListener.Event.KeyEstablished to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: event to MethodInvocation at 2", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: serviceName to MethodInvocation at 2", "operations": ["INS SimpleName: serviceName to MethodInvocation at 2"]}, {"root": "INS InfixExpression: + to MethodInvocation at 2", "operations": ["INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: serviceName to MethodInvocation at 0", "INS QualifiedName: Byte.SIZE to InfixExpression: + at 1", "INS MethodInvocation to InfixExpression: + at 0", "INS SimpleName: length to MethodInvocation at 1"]}, {"root": "UPDATE from getName to serviceName", "operations": ["UPD SimpleName: getName from getName to serviceName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getName to MethodInvocation at 4"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getRegisteredIdentities"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL SimpleName: event", "DEL QualifiedName: SessionListener.Event.KeyEstablished", "DEL InfixExpression: =="]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: currentServiceFactory"]}]}}, {"ClientSessionImpl_diff": {"operations": ["Insert VariableDeclarationStatement(1397) into Block(1436) at 2", "Insert MethodInvocation(1358) into IfStatement(1363) at 0", "Insert SimpleType: String(1391) into VariableDeclarationStatement(1397) at 0", "Insert VariableDeclarationFragment(1396) into VariableDeclarationStatement(1397) at 1", "Insert QualifiedName: SessionListener.Event.KeyEstablished(1355) into MethodInvocation(1358) at 0", "Insert SimpleName: equals(1356) into MethodInvocation(1358) at 1", "Insert SimpleName: event(1357) into MethodInvocation(1358) at 2", "Insert SimpleName: String(1390) into SimpleType: String(1391) at 0", "Insert SimpleName: serviceName(1392) into VariableDeclarationFragment(1396) at 0", "Move MethodInvocation(1417) into VariableDeclarationFragment(1396) at 1", "Insert SimpleName: serviceName(1425) into MethodInvocation(1426) at 2", "Insert InfixExpression: +(1419) into MethodInvocation(1420) at 2", "Update SimpleName: getName(1399) to serviceName", "Move SimpleName: getName(1399) into MethodInvocation(1406) at 4", "Insert MethodInvocation(1417) into InfixExpression: +(1419) at 0", "Insert QualifiedName: Byte.SIZE(1418) into InfixExpression: +(1419) at 1", "Insert SimpleName: serviceName(1415) into MethodInvocation(1417) at 0", "Insert SimpleName: length(1416) into MethodInvocation(1417) at 1", "Delete SimpleName: getRegisteredIdentities(357)", "Delete MethodInvocation(358)", "Delete SimpleName: event(1357)", "Delete QualifiedName: SessionListener.Event.KeyEstablished(1358)", "Delete InfixExpression: ==(1359)", "Delete SimpleName: currentServiceFactory(1398)", "Delete MethodInvocation(1400)"]}}, {"ClientUserAuthService_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS ImportDeclaration to CompilationUnit at 18", "INS QualifiedName: org.apache.sshd.common.util.ValidateUtils to ImportDeclaration at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS StringLiteral: \"No service\" to MethodInvocation at 3", "INS SimpleName: checkNotNullAndNotEmpty to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: ValidateUtils to MethodInvocation at 0", "INS SimpleName: service to MethodInvocation at 2"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL SimpleName: List", "DEL SimpleType: List", "DEL SimpleType: Object", "DEL ParameterizedType: List<Object>", "DEL SimpleName: identities", "DEL FieldDeclaration", "DEL SimpleName: Object"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: List", "DEL SimpleName: identities", "DEL ParameterizedType: List<Object>", "DEL SimpleName: Object", "DEL SimpleType: Object", "DEL SimpleName: List", "DEL SingleVariableDeclaration"]}, {"root": "DEL FieldAccess", "operations": ["DEL ThisExpression", "DEL FieldAccess", "DEL SimpleName: identities"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ParameterizedType: ArrayList<>", "DEL ClassInstanceCreation", "DEL SimpleType: ArrayList", "DEL SimpleName: identities", "DEL SimpleName: ArrayList"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: service", "DEL Assignment: =", "DEL ExpressionStatement"]}, {"root": "DEL SimpleName: identities", "operations": ["DEL SimpleName: identities"]}]}}, {"ClientUserAuthService_diff": {"operations": ["Insert ImportDeclaration(37) into CompilationUnit(959) at 18", "Insert QualifiedName: org.apache.sshd.common.util.ValidateUtils(36) into ImportDeclaration(37) at 0", "Move FieldAccess(340) into Assignment: =(322) at 0", "Insert MethodInvocation(321) into Assignment: =(322) at 1", "Insert SimpleName: ValidateUtils(317) into MethodInvocation(321) at 0", "Insert SimpleName: checkNotNullAndNotEmpty(318) into MethodInvocation(321) at 1", "Insert SimpleName: service(319) into MethodInvocation(321) at 2", "Insert StringLiteral: \"No service\"(320) into MethodInvocation(321) at 3", "Delete Modifier: private(71)", "Delete SimpleName: List(72)", "Delete SimpleType: List(73)", "Delete SimpleName: Object(74)", "Delete SimpleType: Object(75)", "Delete ParameterizedType: List<Object>(76)", "Delete SimpleName: identities(77)", "Delete VariableDeclarationFragment(78)", "Delete FieldDeclaration(79)", "Delete SimpleName: List(315)", "Delete SimpleType: List(316)", "Delete SimpleName: Object(317)", "Delete SimpleType: Object(318)", "Delete ParameterizedType: List<Object>(319)", "Delete SimpleName: identities(320)", "Delete SingleVariableDeclaration(321)", "Delete ThisExpression(328)", "Delete SimpleName: identities(329)", "Delete FieldAccess(330)", "Delete SimpleName: ArrayList(331)", "Delete SimpleType: ArrayList(332)", "Delete ParameterizedType: ArrayList<>(333)", "Delete SimpleName: identities(334)", "Delete ClassInstanceCreation(335)", "Delete SimpleName: service(341)", "Delete Assignment: =(342)", "Delete ExpressionStatement(343)", "Delete SimpleName: identities(948)"]}}, {"KeyPairProvider_cluster": {"actions": [{"root": "INS SimpleType: KeyIdentityProvider to TypeDeclaration: interface at 3", "operations": ["INS SimpleType: KeyIdentityProvider to TypeDeclaration: interface at 3"]}, {"root": "UPDATE from KeyPair to KeyIdentityProvider", "operations": ["UPD SimpleName: KeyPair from KeyPair to KeyIdentityProvider"]}, {"root": "MOVE from SimpleType: KeyIdentityProvider", "operations": ["MOV SimpleName: KeyPair to SimpleType: KeyIdentityProvider at 0"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TextElement:  null", "DEL Javadoc", "DEL TextElement:  instance of available keys, never ", "DEL TextElement:  an ", "DEL TagElement: @return", "DEL ParameterizedType: Iterable<KeyPair>", "DEL TagElement: @link", "DEL TagElement", "DEL TextElement: Load available keys.", "DEL TagElement: @code", "DEL MethodDeclaration", "DEL SimpleType: KeyPair", "DEL SimpleName: Iterable", "DEL SimpleName: loadKeys", "DEL SimpleType: Iterable", "DEL SimpleName: Iterable"]}]}}, {"KeyPairProvider_diff": {"operations": ["Insert SimpleType: KeyIdentityProvider(17) into TypeDeclaration: interface(174) at 3", "Update SimpleName: KeyPair(148) to KeyIdentityProvider", "Move SimpleName: KeyPair(148) into SimpleType: KeyIdentityProvider(17) at 0", "Delete TextElement: Load available keys.(136)", "Delete TagElement(137)", "Delete TextElement:  an (138)", "Delete SimpleName: Iterable(139)", "Delete TagElement: @link(140)", "Delete TextElement:  instance of available keys, never (141)", "Delete TextElement:  null(142)", "Delete TagElement: @code(143)", "Delete TagElement: @return(144)", "Delete Javadoc(145)", "Delete SimpleName: Iterable(146)", "Delete SimpleType: Iterable(147)", "Delete SimpleType: KeyPair(149)", "Delete ParameterizedType: Iterable<KeyPair>(150)", "Delete SimpleName: loadKeys(151)", "Delete MethodDeclaration(152)"]}}, {"ServerUserAuthService_cluster": {"actions": [{"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: checkNotNullAndNotEmpty to MethodInvocation at 1", "INS StringLiteral: \"No user auth factories for %s\" to MethodInvocation at 3", "INS SimpleName: s to MethodInvocation at 4", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: ValidateUtils to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}]}}, {"ServerUserAuthService_diff": {"operations": ["Insert MethodInvocation(177) into VariableDeclarationFragment(178) at 1", "Insert SimpleName: ValidateUtils(170) into MethodInvocation(177) at 0", "Insert SimpleName: checkNotNullAndNotEmpty(171) into MethodInvocation(177) at 1", "Move MethodInvocation(172) into MethodInvocation(177) at 2", "Insert StringLiteral: \"No user auth factories for %s\"(175) into MethodInvocation(177) at 3", "Insert SimpleName: s(176) into MethodInvocation(177) at 4"]}}, {"KeyAgentIdentity_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.apache.sshd.common.config.keys.KeyUtils to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleType: String to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: comment to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleType: String to MethodDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: comment to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: getComment to MethodDeclaration at 2", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to InfixExpression: + at 0", "INS SimpleName: pubKey to MethodInvocation at 2", "INS SimpleName: pubKey to VariableDeclarationFragment at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS StringLiteral: \", comment=\" to InfixExpression: + at 6", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to InfixExpression: + at 5", "INS SimpleName: getPublicKey to MethodInvocation at 0", "INS SimpleName: PublicKey to SimpleType: PublicKey at 0", "INS VariableDeclarationStatement to Block at 0", "INS StringLiteral: \" fingerprint=\" to InfixExpression: + at 4", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getClass to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: toString to MethodDeclaration at 3", "INS SimpleName: getKeyType to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: getFingerPrint to MethodInvocation at 1", "INS StringLiteral: \"[\" to InfixExpression: + at 1", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: KeyUtils to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: getComment to MethodInvocation at 0", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS ReturnStatement to Block at 1", "INS SimpleName: pubKey to MethodInvocation at 2", "INS InfixExpression: + to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: KeyUtils to MethodInvocation at 0", "INS SimpleType: PublicKey to VariableDeclarationStatement at 0", "INS StringLiteral: \"]\" to InfixExpression: + at 3", "INS MethodInvocation to InfixExpression: + at 2", "INS MethodInvocation to InfixExpression: + at 7"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: comment to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: comment to Assignment: = at 1", "INS SimpleName: comment to FieldAccess at 1", "INS ExpressionStatement to Block at 2", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from key to getPublicKey", "operations": ["UPD SimpleName: key from key to getPublicKey"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: key to MethodInvocation at 0"]}]}}, {"KeyAgentIdentity_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(162) at 3", "Insert QualifiedName: org.apache.sshd.common.config.keys.KeyUtils(6) into ImportDeclaration(7) at 0", "Insert FieldDeclaration(42) into TypeDeclaration: class(161) at 6", "Insert MethodDeclaration(102) into TypeDeclaration: class(161) at 9", "Insert MethodDeclaration(160) into TypeDeclaration: class(161) at 11", "Insert Modifier: private(36) into FieldDeclaration(42) at 0", "Insert Modifier: final(37) into FieldDeclaration(42) at 1", "Insert SimpleType: String(39) into FieldDeclaration(42) at 2", "Insert VariableDeclarationFragment(41) into FieldDeclaration(42) at 3", "Insert SingleVariableDeclaration(56) into MethodDeclaration(84) at 4", "Insert Modifier: public(95) into MethodDeclaration(102) at 0", "Insert SimpleType: String(97) into MethodDeclaration(102) at 1", "Insert SimpleName: getComment(98) into MethodDeclaration(102) at 2", "Insert Block(101) into MethodDeclaration(102) at 3", "Insert MarkerAnnotation(127) into MethodDeclaration(160) at 0", "Insert Modifier: public(128) into MethodDeclaration(160) at 1", "Insert SimpleType: String(130) into MethodDeclaration(160) at 2", "Insert SimpleName: toString(131) into MethodDeclaration(160) at 3", "Insert Block(159) into MethodDeclaration(160) at 4", "Insert SimpleName: String(38) into SimpleType: String(39) at 0", "Insert SimpleName: comment(40) into VariableDeclarationFragment(41) at 0", "Insert SimpleType: String(54) into SingleVariableDeclaration(56) at 0", "Insert SimpleName: comment(55) into SingleVariableDeclaration(56) at 1", "Insert ExpressionStatement(82) into Block(83) at 2", "Insert SimpleName: String(96) into SimpleType: String(97) at 0", "Insert ReturnStatement(100) into Block(101) at 0", "Insert SimpleName: Override(126) into MarkerAnnotation(127) at 0", "Insert SimpleName: String(129) into SimpleType: String(130) at 0", "Insert VariableDeclarationStatement(138) into Block(159) at 0", "Insert ReturnStatement(158) into Block(159) at 1", "Insert SimpleName: String(53) into SimpleType: String(54) at 0", "Insert Assignment: =(81) into ExpressionStatement(82) at 0", "Insert SimpleName: comment(99) into ReturnStatement(100) at 0", "Insert SimpleType: PublicKey(133) into VariableDeclarationStatement(138) at 0", "Insert VariableDeclarationFragment(137) into VariableDeclarationStatement(138) at 1", "Insert InfixExpression: +(157) into ReturnStatement(158) at 0", "Insert FieldAccess(79) into Assignment: =(81) at 0", "Insert SimpleName: comment(80) into Assignment: =(81) at 1", "Insert MethodInvocation(120) into MethodInvocation(122) at 2", "Insert SimpleName: PublicKey(132) into SimpleType: PublicKey(133) at 0", "Insert SimpleName: pubKey(134) into VariableDeclarationFragment(137) at 0", "Insert MethodInvocation(136) into VariableDeclarationFragment(137) at 1", "Insert MethodInvocation(142) into InfixExpression: +(157) at 0", "Insert StringLiteral: \"[\"(143) into InfixExpression: +(157) at 1", "Insert MethodInvocation(147) into InfixExpression: +(157) at 2", "Insert StringLiteral: \"]\"(148) into InfixExpression: +(157) at 3", "Insert StringLiteral: \" fingerprint=\"(149) into InfixExpression: +(157) at 4", "Insert MethodInvocation(153) into InfixExpression: +(157) at 5", "Insert StringLiteral: \", comment=\"(154) into InfixExpression: +(157) at 6", "Insert MethodInvocation(156) into InfixExpression: +(157) at 7", "Insert ThisExpression(77) into FieldAccess(79) at 0", "Insert SimpleName: comment(78) into FieldAccess(79) at 1", "Update SimpleName: key(92) to getPublicKey", "Move SimpleName: key(92) into MethodInvocation(120) at 0", "Insert SimpleName: getPublicKey(135) into MethodInvocation(136) at 0", "Insert MethodInvocation(140) into MethodInvocation(142) at 0", "Insert SimpleName: getSimpleName(141) into MethodInvocation(142) at 1", "Insert SimpleName: KeyUtils(144) into MethodInvocation(147) at 0", "Insert SimpleName: getKeyType(145) into MethodInvocation(147) at 1", "Insert SimpleName: pubKey(146) into MethodInvocation(147) at 2", "Insert SimpleName: KeyUtils(150) into MethodInvocation(153) at 0", "Insert SimpleName: getFingerPrint(151) into MethodInvocation(153) at 1", "Insert SimpleName: pubKey(152) into MethodInvocation(153) at 2", "Insert SimpleName: getComment(155) into MethodInvocation(156) at 0", "Insert SimpleName: getClass(139) into MethodInvocation(140) at 0"]}}, {"KeyPairIdentity_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleName: getFingerPrint to MethodInvocation at 1", "INS SimpleName: PublicKey to SimpleType: PublicKey at 0", "INS SimpleName: manager to InfixExpression: + at 2", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 7", "INS Block to MethodDeclaration at 4", "INS SimpleName: getKeyType to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: + at 5", "INS SimpleName: getClass to MethodInvocation at 0", "INS StringLiteral: \" type=\" to InfixExpression: + at 4", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ReturnStatement to Block at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: PublicKey to VariableDeclarationStatement at 0", "INS StringLiteral: \", fingerprint=\" to InfixExpression: + at 6", "INS StringLiteral: \"[\" to InfixExpression: + at 1", "INS MethodInvocation to InfixExpression: + at 0", "INS SimpleName: KeyUtils to MethodInvocation at 0", "INS SimpleName: toString to MethodDeclaration at 3", "INS SimpleName: pubKey to VariableDeclarationFragment at 0", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getPublicKey to MethodInvocation at 0", "INS SimpleName: KeyUtils to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"]\" to InfixExpression: + at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: pubKey to MethodInvocation at 2", "INS InfixExpression: + to ReturnStatement at 0", "INS SimpleName: pubKey to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from pair to getPublicKey", "operations": ["UPD SimpleName: pair from pair to getPublicKey"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: pair to MethodInvocation at 0"]}]}}, {"KeyPairIdentity_diff": {"operations": ["Insert MethodDeclaration(180) into TypeDeclaration: class(181) at 9", "Insert MarkerAnnotation(148) into MethodDeclaration(180) at 0", "Insert Modifier: public(149) into MethodDeclaration(180) at 1", "Insert SimpleType: String(151) into MethodDeclaration(180) at 2", "Insert SimpleName: toString(152) into MethodDeclaration(180) at 3", "Insert Block(179) into MethodDeclaration(180) at 4", "Insert SimpleName: Override(147) into MarkerAnnotation(148) at 0", "Insert SimpleName: String(150) into SimpleType: String(151) at 0", "Insert VariableDeclarationStatement(159) into Block(179) at 0", "Insert ReturnStatement(178) into Block(179) at 1", "Insert SimpleType: PublicKey(154) into VariableDeclarationStatement(159) at 0", "Insert VariableDeclarationFragment(158) into VariableDeclarationStatement(159) at 1", "Insert InfixExpression: +(177) into ReturnStatement(178) at 0", "Insert SimpleName: PublicKey(153) into SimpleType: PublicKey(154) at 0", "Insert SimpleName: pubKey(155) into VariableDeclarationFragment(158) at 0", "Insert MethodInvocation(157) into VariableDeclarationFragment(158) at 1", "Insert MethodInvocation(163) into InfixExpression: +(177) at 0", "Insert StringLiteral: \"[\"(164) into InfixExpression: +(177) at 1", "Insert SimpleName: manager(165) into InfixExpression: +(177) at 2", "Insert StringLiteral: \"]\"(166) into InfixExpression: +(177) at 3", "Insert StringLiteral: \" type=\"(167) into InfixExpression: +(177) at 4", "Insert MethodInvocation(171) into InfixExpression: +(177) at 5", "Insert StringLiteral: \", fingerprint=\"(172) into InfixExpression: +(177) at 6", "Insert MethodInvocation(176) into InfixExpression: +(177) at 7", "Insert MethodInvocation(106) into MethodInvocation(107) at 2", "Insert SimpleName: getPublicKey(156) into MethodInvocation(157) at 0", "Insert MethodInvocation(161) into MethodInvocation(163) at 0", "Insert SimpleName: getSimpleName(162) into MethodInvocation(163) at 1", "Insert SimpleName: KeyUtils(168) into MethodInvocation(171) at 0", "Insert SimpleName: getKeyType(169) into MethodInvocation(171) at 1", "Insert SimpleName: pubKey(170) into MethodInvocation(171) at 2", "Insert SimpleName: KeyUtils(173) into MethodInvocation(176) at 0", "Insert SimpleName: getFingerPrint(174) into MethodInvocation(176) at 1", "Insert SimpleName: pubKey(175) into MethodInvocation(176) at 2", "Update SimpleName: pair(105) to getPublicKey", "Move SimpleName: pair(105) into MethodInvocation(106) at 0", "Insert SimpleName: getClass(160) into MethodInvocation(161) at 0"]}}], "commit_stats": [{"total_files": 30, "deleted_files": 1, "testing": "True", "maintenance": "True", "build": "True"}]}