{"application": "apache-phoenix", "csha": "f7c1889bce385e46f774b90368a5acd5c44674f2", "files": [{"ArrayIT_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS SimpleName: nextTimestamp to MethodInvocation at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleType: Connection to VariableDeclarationStatement at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: doubleArr to ArrayAccess at 0", "INS Dimension to ArrayType: Double[] at 1", "INS VariableDeclarationStatement to Block at 11", "INS SimpleName: ts to InfixExpression: - at 0", "INS SimpleName: getConnection to MethodInvocation at 1", "INS NumberLiteral: 2 to InfixExpression: + at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: conn to MethodInvocation at 0", "INS SimpleName: next to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: ResultSet to VariableDeclarationStatement at 0", "INS SimpleName: rs to VariableDeclarationFragment at 0", "INS SimpleName: Double to SimpleType: Double at 0", "INS SimpleName: Double to SimpleType: Double at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 3", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: query to MethodInvocation at 2", "INS ArrayAccess to Assignment: = at 0", "INS SimpleName: tenantId to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 1", "INS ExpressionStatement to Block at 13", "INS SimpleName: testArraySelectWithORCondition to MethodDeclaration at 3", "INS SimpleName: tenantId to MethodInvocation at 1", "INS TryStatement to Block at 4", "INS SimpleName: props to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: PreparedStatement to SimpleType: PreparedStatement at 0", "INS SimpleName: ResultSet to SimpleType: ResultSet at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: tenantId to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS InfixExpression: - to MethodInvocation at 4", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: Long to MethodInvocation at 0", "INS SimpleName: statement to MethodInvocation at 0", "INS Dimension to ArrayType: Double[] at 1", "INS NumberLiteral: 64.87d to Assignment: = at 1", "INS SimpleName: rs to MethodInvocation at 0", "INS ExpressionStatement to Block at 10", "INS SimpleType: Double to ArrayType: Double[] at 0", "INS SimpleName: doubleArr to VariableDeclarationFragment at 0", "INS QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB to MethodInvocation at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: ts to VariableDeclarationFragment at 0", "INS SimpleName: TEST_PROPERTIES to ClassInstanceCreation at 1", "INS SimpleName: DriverManager to MethodInvocation at 0", "INS SimpleName: getDefaultSplits to MethodInvocation at 0", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS SimpleName: prepareStatement to MethodInvocation at 1", "INS SimpleName: ts to MethodInvocation at 3", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: props to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS PrimitiveType: void to MethodDeclaration at 2", "INS VariableDeclarationStatement to Block at 2", "INS VariableDeclarationStatement to Block at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: executeQuery to MethodInvocation at 1", "INS SimpleName: createTableWithArray to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: tenantId to MethodInvocation at 1", "INS ArrayAccess to MethodInvocation at 2", "INS SimpleType: Properties to ClassInstanceCreation at 0", "INS SimpleName: setProperty to MethodInvocation at 1", "INS InfixExpression: - to MethodInvocation at 4", "INS ArrayType: Double[] to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 7", "INS ExpressionStatement to Block at 8", "INS SimpleName: rs to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: doubleArr to ArrayAccess at 0", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS VariableDeclarationStatement to Block at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleType: PreparedStatement to VariableDeclarationStatement at 0", "INS SimpleName: getDefaultSplits to MethodInvocation at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: conn to InfixExpression: != at 0", "INS NullLiteral to MethodInvocation at 3", "INS VariableDeclarationStatement to Block at 6", "INS SimpleName: SIMPLE_TABLE_WITH_ARRAY to InfixExpression: + at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: query to VariableDeclarationFragment at 0", "INS SimpleName: initSimpleArrayTable to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ArrayType: Double[] to ArrayCreation at 0", "INS SimpleName: getUrl to MethodInvocation at 0", "INS NumberLiteral: 2 to InfixExpression: - at 1", "INS SimpleName: Connection to SimpleType: Connection at 0", "INS SimpleName: getDouble to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: assertFalse to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: statement to VariableDeclarationFragment at 0", "INS SimpleName: next to MethodInvocation at 1", "INS NumberLiteral: 2 to InfixExpression: - at 1", "INS InfixExpression: != to IfStatement at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: conn to Assignment: = at 0", "INS SimpleName: rs to MethodInvocation at 0", "INS NumberLiteral: 1 to ArrayCreation at 1", "INS MethodInvocation to MethodInvocation at 1", "INS Block to TryStatement at 1", "INS ExpressionStatement to Block at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: conn to VariableDeclarationFragment at 0", "INS SimpleName: ts to InfixExpression: - at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: createSimpleTableWithArray to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 9", "INS SimpleName: Test to MarkerAnnotation at 0", "INS SimpleName: close to MethodInvocation at 1", "INS NullLiteral to MethodInvocation at 2", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS StringLiteral: \" WHERE a_double_array[2] = 89.96d or a_char_array[0] = 'a'\" to InfixExpression: + at 2", "INS SimpleName: toString to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getOrganizationId to MethodInvocation at 0", "INS SimpleName: ts to InfixExpression: + at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getUrl to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS BooleanLiteral: false to MethodInvocation at 4", "INS SimpleName: Properties to SimpleType: Properties at 0", "INS SimpleName: Double to SimpleType: Double at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: assertTrue to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: getUrl to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: result to MethodInvocation at 1", "INS SimpleName: conn to MethodInvocation at 0", "INS SimpleName: Properties to SimpleType: Properties at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: props to MethodInvocation at 3", "INS NullLiteral to MethodInvocation at 3", "INS SimpleType: Double to ArrayType: Double[] at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: Double to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 12", "INS StringLiteral: \"SELECT a_double_array[1]  FROM \" to InfixExpression: + at 0", "INS Block to TryStatement at 0", "INS SimpleType: Properties to VariableDeclarationStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS SimpleName: tenantId to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Properties to ClassInstanceCreation at 0", "INS SimpleName: props to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: Long to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: rs to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: rs to MethodInvocation at 0", "INS SimpleName: assertFalse to MethodInvocation at 0", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: statement to VariableDeclarationFragment at 0", "INS SimpleName: ts to InfixExpression: + at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS TryStatement to Block at 4", "INS Dimension to ArrayType: Double[] at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: nextTimestamp to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 6", "INS Block to IfStatement at 1", "INS SimpleName: close to MethodInvocation at 1", "INS SimpleType: Connection to VariableDeclarationStatement at 0", "INS SimpleName: doubleArr to ArrayAccess at 0", "INS SimpleName: ts to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Connection to SimpleType: Connection at 0", "INS ArrayAccess to Assignment: = at 0", "INS StringLiteral: \"SELECT a_double_array[1]  FROM \" to InfixExpression: + at 0", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: statement to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS InfixExpression: - to MethodInvocation at 4", "INS SimpleName: conn to MethodInvocation at 0", "INS SimpleName: ts to InfixExpression: - at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: Double to ArrayType: Double[] at 0", "INS SimpleName: conn to InfixExpression: != at 0", "INS SimpleName: getConnection to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS Block to MethodDeclaration at 5", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 7", "INS SimpleName: testArraySelectWithANY to MethodDeclaration at 3", "INS NumberLiteral: 2 to InfixExpression: - at 1", "INS SimpleName: props to MethodInvocation at 3", "INS SimpleName: SIMPLE_TABLE_WITH_ARRAY to InfixExpression: + at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: Properties to SimpleType: Properties at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: executeQuery to MethodInvocation at 1", "INS SimpleName: TEST_PROPERTIES to ClassInstanceCreation at 1", "INS SimpleName: Test to MarkerAnnotation at 0", "INS InfixExpression: - to MethodInvocation at 4", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: setProperty to MethodInvocation at 1", "INS SimpleName: assertTrue to MethodInvocation at 0", "INS StringLiteral: \" WHERE 89.96d = ANY(a_double_array)\" to InfixExpression: + at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: query to MethodInvocation at 2", "INS ExpressionStatement to Block at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS BooleanLiteral: false to MethodInvocation at 4", "INS SimpleName: DriverManager to MethodInvocation at 0", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: Properties to SimpleType: Properties at 0", "INS SimpleName: prepareStatement to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS ArrayAccess to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NumberLiteral: 1 to ArrayCreation at 1", "INS SimpleType: ResultSet to VariableDeclarationStatement at 0", "INS NumberLiteral: 2 to InfixExpression: - at 1", "INS SimpleName: ts to InfixExpression: - at 0", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 3", "INS SimpleName: doubleArr to ArrayAccess at 0", "INS NullLiteral to MethodInvocation at 2", "INS SimpleName: getDefaultSplits to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ArrayType: Double[] to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: result to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: PreparedStatement to VariableDeclarationStatement at 0", "INS ArrayType: Double[] to ArrayCreation at 0", "INS SimpleName: getOrganizationId to MethodInvocation at 0", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS SimpleName: tenantId to MethodInvocation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB to MethodInvocation at 2", "INS SimpleName: ts to MethodInvocation at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS IfStatement to Block at 0", "INS VariableDeclarationStatement to Block at 9", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: tenantId to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to TryStatement at 1", "INS SimpleName: query to VariableDeclarationFragment at 0", "INS SimpleName: ResultSet to SimpleType: ResultSet at 0", "INS SimpleName: getDefaultSplits to MethodInvocation at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: Double to SimpleType: Double at 0", "INS NumberLiteral: 2 to InfixExpression: + at 1", "INS SimpleName: initSimpleArrayTable to MethodInvocation at 0", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 1", "INS ExpressionStatement to Block at 10", "INS SimpleName: rs to MethodInvocation at 0", "INS Block to TryStatement at 0", "INS NumberLiteral: 64.87d to Assignment: = at 1", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: conn to MethodInvocation at 0", "INS SimpleType: Properties to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: conn to VariableDeclarationFragment at 0", "INS SimpleName: createSimpleTableWithArray to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 12", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: conn to Assignment: = at 0", "INS MethodInvocation to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: rs to MethodInvocation at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS ExpressionStatement to Block at 1", "INS SimpleName: getUrl to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 0", "INS SimpleName: props to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 2", "INS ExpressionStatement to Block at 8", "INS VariableDeclarationStatement to Block at 11", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: tenantId to MethodInvocation at 1", "INS SimpleName: PreparedStatement to SimpleType: PreparedStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: Double to SimpleType: Double at 0", "INS SimpleType: Double to ArrayType: Double[] at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: getDouble to MethodInvocation at 1", "INS NullLiteral to MethodInvocation at 3", "INS SimpleName: toString to MethodInvocation at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS NullLiteral to MethodInvocation at 3", "INS SimpleName: createTableWithArray to MethodInvocation at 0", "INS SimpleType: Double to VariableDeclarationStatement at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: doubleArr to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ExpressionStatement to Block at 13", "INS SimpleName: Double to SimpleType: Double at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Dimension to ArrayType: Double[] at 1", "INS SimpleName: getUrl to MethodInvocation at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS SimpleName: testArraySelectWithALL to MethodDeclaration at 3", "INS SimpleName: query to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: statement to MethodInvocation at 0", "INS SimpleName: conn to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: initSimpleArrayTable to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: TEST_PROPERTIES to ClassInstanceCreation at 1", "INS SimpleName: tenantId to MethodInvocation at 1", "INS StringLiteral: \" WHERE 64.87d = ALL(a_double_array)\" to InfixExpression: + at 2", "INS SimpleName: getUrl to MethodInvocation at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS SimpleName: createSimpleTableWithArray to MethodInvocation at 0", "INS NullLiteral to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: conn to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: ts to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 8", "INS NumberLiteral: 2 to InfixExpression: - at 1", "INS NullLiteral to MethodInvocation at 3", "INS VariableDeclarationStatement to Block at 6", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Connection to VariableDeclarationStatement at 0", "INS InfixExpression: - to MethodInvocation at 4", "INS QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB to MethodInvocation at 2", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: tenantId to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 5", "INS SimpleType: Properties to ClassInstanceCreation at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: executeQuery to MethodInvocation at 1", "INS SimpleType: Properties to VariableDeclarationStatement at 0", "INS Block to TryStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ExpressionStatement to Block at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: conn to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 0", "INS SimpleName: rs to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 3", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 2", "INS BooleanLiteral: false to MethodInvocation at 4", "INS SimpleName: prepareStatement to MethodInvocation at 1", "INS SimpleName: getDefaultSplits to MethodInvocation at 0", "INS NumberLiteral: 2 to InfixExpression: - at 1", "INS InfixExpression: != to IfStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: tenantId to VariableDeclarationFragment at 0", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: ts to InfixExpression: - at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: statement to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: props to MethodInvocation at 0", "INS SimpleName: ts to MethodInvocation at 3", "INS InfixExpression: - to MethodInvocation at 4", "INS SimpleName: tenantId to MethodInvocation at 1", "INS SimpleType: ResultSet to VariableDeclarationStatement at 0", "INS SimpleName: Connection to SimpleType: Connection at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: query to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: Properties to SimpleType: Properties at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: ts to InfixExpression: + at 0", "INS SimpleName: PreparedStatement to SimpleType: PreparedStatement at 0", "INS SimpleName: next to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS Block to TryStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: PreparedStatement to VariableDeclarationStatement at 0", "INS SimpleName: conn to Assignment: = at 0", "INS MethodInvocation to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: assertFalse to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getUrl to MethodInvocation at 0", "INS SimpleName: props to MethodInvocation at 3", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS SimpleName: ts to InfixExpression: - at 0", "INS SimpleName: Properties to SimpleType: Properties at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: conn to InfixExpression: != at 0", "INS StringLiteral: \"SELECT a_double_array[1]  FROM \" to InfixExpression: + at 0", "INS SimpleName: getConnection to MethodInvocation at 1", "INS SimpleName: setProperty to MethodInvocation at 1", "INS NullLiteral to VariableDeclarationFragment at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NullLiteral to MethodInvocation at 3", "INS SimpleName: getDefaultSplits to MethodInvocation at 0", "INS NumberLiteral: 2 to InfixExpression: + at 1", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: Long to MethodInvocation at 0", "INS SimpleName: rs to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 7", "INS Block to IfStatement at 1", "INS SimpleName: DriverManager to MethodInvocation at 0", "INS SimpleName: close to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getOrganizationId to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: Test to MarkerAnnotation at 0", "INS IfStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: SIMPLE_TABLE_WITH_ARRAY to InfixExpression: + at 1", "INS SimpleName: props to VariableDeclarationFragment at 0", "INS TryStatement to Block at 4", "INS SimpleName: nextTimestamp to MethodInvocation at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: ResultSet to SimpleType: ResultSet at 0", "INS SimpleName: createTableWithArray to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: createSimpleTableWithArray to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 9", "INS MethodInvocation to ExpressionStatement at 0", "INS BooleanLiteral: false to MethodInvocation at 4", "INS SimpleType: Connection to VariableDeclarationStatement at 0", "INS SimpleName: getDefaultSplits to MethodInvocation at 0", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS Block to IfStatement at 1", "INS SimpleName: PreparedStatement to SimpleType: PreparedStatement at 0", "INS ArrayAccess to Assignment: = at 0", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getUrl to MethodInvocation at 0", "INS ExpressionStatement to Block at 8", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: query to MethodInvocation at 2", "INS SimpleName: executeQuery to MethodInvocation at 1", "INS SimpleName: conn to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS SimpleName: ts to InfixExpression: - at 0", "INS Dimension to ArrayType: Double[] at 1", "INS SimpleName: doubleArr to ArrayAccess at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: PreparedStatement to VariableDeclarationStatement at 0", "INS SimpleName: setProperty to MethodInvocation at 1", "INS Block to TryStatement at 1", "INS ExpressionStatement to Block at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleType: Double to VariableDeclarationStatement at 0", "INS SimpleName: Double to SimpleType: Double at 0", "INS SimpleType: Double to ArrayType: Double[] at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Properties to SimpleType: Properties at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: rs to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: testArraySelectWithANYCombinedWithOR to MethodDeclaration at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: next to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 7", "INS SimpleName: conn to InfixExpression: != at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: DriverManager to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: prepareStatement to MethodInvocation at 1", "INS QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB to MethodInvocation at 2", "INS SimpleName: getDouble to MethodInvocation at 1", "INS Block to TryStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 5", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: createTableWithArray to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 3", "INS MethodInvocation to MethodInvocation at 2", "INS NullLiteral to MethodInvocation at 2", "INS StringLiteral: \" WHERE  a_char_array[0] = 'f' or 89.96d > ANY(a_double_array)\" to InfixExpression: + at 2", "INS SimpleName: Connection to SimpleType: Connection at 0", "INS ExpressionStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: conn to MethodInvocation at 0", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: props to MethodInvocation at 3", "INS SimpleType: ResultSet to VariableDeclarationStatement at 0", "INS ArrayAccess to MethodInvocation at 2", "INS SimpleName: rs to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 13", "INS SimpleName: props to VariableDeclarationFragment at 0", "INS SimpleName: tenantId to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: Properties to SimpleType: Properties at 0", "INS SimpleType: Properties to ClassInstanceCreation at 0", "INS NumberLiteral: 1 to ArrayCreation at 1", "INS ArrayType: Double[] to ArrayCreation at 0", "INS VariableDeclarationStatement to Block at 1", "INS TryStatement to Block at 4", "INS SimpleName: ts to VariableDeclarationFragment at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: ts to MethodInvocation at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: assertFalse to MethodInvocation at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: result to MethodInvocation at 1", "INS SimpleName: statement to MethodInvocation at 0", "INS Dimension to ArrayType: Double[] at 1", "INS SimpleName: Double to SimpleType: Double at 0", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: nextTimestamp to MethodInvocation at 0", "INS SimpleName: getConnection to MethodInvocation at 1", "INS SimpleName: conn to MethodInvocation at 0", "INS SimpleName: statement to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleType: Properties to VariableDeclarationStatement at 0", "INS SimpleName: Long to MethodInvocation at 0", "INS SimpleName: Test to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS NullLiteral to MethodInvocation at 3", "INS NumberLiteral: 2 to InfixExpression: + at 1", "INS SimpleName: getUrl to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: ts to InfixExpression: + at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS InfixExpression: - to MethodInvocation at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: rs to MethodInvocation at 0", "INS SimpleName: tenantId to MethodInvocation at 1", "INS NumberLiteral: 2 to InfixExpression: - at 1", "INS SimpleName: tenantId to MethodInvocation at 1", "INS ExpressionStatement to Block at 10", "INS IfStatement to Block at 0", "INS SimpleName: assertTrue to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS ArrayType: Double[] to VariableDeclarationStatement at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: rs to MethodInvocation at 0", "INS SimpleName: SIMPLE_TABLE_WITH_ARRAY to InfixExpression: + at 1", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: ts to InfixExpression: - at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: doubleArr to ArrayAccess at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: query to VariableDeclarationFragment at 0", "INS StringLiteral: \"SELECT a_double_array[1]  FROM \" to InfixExpression: + at 0", "INS ExpressionStatement to Block at 4", "INS NullLiteral to MethodInvocation at 3", "INS SimpleName: getDefaultSplits to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: Double to ArrayType: Double[] at 0", "INS SimpleName: conn to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: tenantId to MethodInvocation at 1", "INS NumberLiteral: 2 to InfixExpression: - at 1", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS InfixExpression: - to MethodInvocation at 4", "INS NumberLiteral: 64.87d to Assignment: = at 1", "INS SimpleName: props to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: close to MethodInvocation at 1", "INS SimpleName: ResultSet to SimpleType: ResultSet at 0", "INS VariableDeclarationStatement to Block at 6", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: TEST_PROPERTIES to ClassInstanceCreation at 1", "INS ExpressionStatement to Block at 12", "INS SimpleName: getOrganizationId to MethodInvocation at 0", "INS SimpleName: initSimpleArrayTable to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 11", "INS SimpleName: Double to SimpleType: Double at 0", "INS SimpleName: doubleArr to VariableDeclarationFragment at 0", "INS SimpleName: getUrl to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS Assignment: = to ExpressionStatement at 0", "INS NullLiteral to MethodInvocation at 3", "INS InfixExpression: != to IfStatement at 0", "INS BooleanLiteral: false to MethodInvocation at 4", "INS VariableDeclarationStatement to Block at 5", "INS SimpleName: result to MethodInvocation at 1", "INS SimpleName: conn to MethodInvocation at 0", "INS SimpleName: query to VariableDeclarationFragment at 0", "INS SimpleName: ts to MethodInvocation at 3", "INS SimpleName: doubleArr to ArrayAccess at 0", "INS SimpleName: prepareStatement to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: doubleArr to ArrayAccess at 0", "INS SimpleName: props to MethodInvocation at 3", "INS ExpressionStatement to Block at 14", "INS SimpleName: rs to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS Block to TryStatement at 1", "INS SimpleName: Double to SimpleType: Double at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Double to SimpleType: Double at 0", "INS SimpleName: conn to MethodInvocation at 0", "INS NumberLiteral: 2 to InfixExpression: - at 1", "INS SimpleName: result to Assignment: = at 0", "INS SimpleName: rs to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 9", "INS SimpleName: getUrl to MethodInvocation at 0", "INS SimpleType: Properties to ClassInstanceCreation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: tenantId to MethodInvocation at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: initSimpleArrayTable to MethodInvocation at 0", "INS ExpressionStatement to Block at 12", "INS SimpleName: statement to VariableDeclarationFragment at 0", "INS SimpleName: getUrl to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: props to MethodInvocation at 0", "INS SimpleType: Double to VariableDeclarationStatement at 0", "INS SimpleName: nextTimestamp to MethodInvocation at 0", "INS SimpleName: conn to Assignment: = at 0", "INS Block to IfStatement at 1", "INS SimpleName: getUrl to MethodInvocation at 0", "INS SimpleName: Properties to SimpleType: Properties at 0", "INS SimpleName: result to MethodInvocation at 1", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS SimpleName: Connection to SimpleType: Connection at 0", "INS SimpleType: Double to ArrayType: Double[] at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS ArrayAccess to MethodInvocation at 2", "INS SimpleName: tenantId to MethodInvocation at 1", "INS SimpleName: statement to MethodInvocation at 0", "INS NumberLiteral: 64.87d to Assignment: = at 1", "INS SimpleName: doubleArr to Assignment: = at 0", "INS SimpleType: ResultSet to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ArrayAccess to Assignment: = at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: PreparedStatement to SimpleType: PreparedStatement at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: close to MethodInvocation at 1", "INS SimpleName: Double to SimpleType: Double at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: setProperty to MethodInvocation at 1", "INS ExpressionStatement to Block at 8", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: DriverManager to MethodInvocation at 0", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS Dimension to ArrayType: Double[] at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: SIMPLE_TABLE_WITH_ARRAY to InfixExpression: + at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: assertTrue to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS NumberLiteral: 2 to MethodInvocation at 2", "INS SimpleName: Long to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS ExpressionStatement to Block at 16", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Double to SimpleType: Double at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS NumberLiteral: 1 to ArrayCreation at 1", "INS ArrayType: Double[] to ArrayCreation at 0", "INS VariableDeclarationStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ArrayType: Double[] to ArrayCreation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: ts to InfixExpression: - at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleType: Connection to VariableDeclarationStatement at 0", "INS QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB to MethodInvocation at 2", "INS SimpleType: Properties to VariableDeclarationStatement at 0", "INS SimpleName: TEST_PROPERTIES to ClassInstanceCreation at 1", "INS VariableDeclarationStatement to Block at 7", "INS VariableDeclarationStatement to Block at 6", "INS NumberLiteral: 89.96d to Assignment: = at 1", "INS SimpleName: getDefaultSplits to MethodInvocation at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS ExpressionStatement to Block at 3", "INS MethodInvocation to Assignment: = at 1", "INS VariableDeclarationStatement to Block at 11", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: conn to InfixExpression: != at 0", "INS SimpleName: executeQuery to MethodInvocation at 1", "INS SimpleName: conn to VariableDeclarationFragment at 0", "INS SimpleName: tenantId to VariableDeclarationFragment at 0", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: Test to MarkerAnnotation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getDouble to MethodInvocation at 1", "INS SimpleName: query to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS ArrayAccess to Assignment: = at 0", "INS SimpleType: Double to ArrayType: Double[] at 0", "INS Dimension to ArrayType: Double[] at 1", "INS ArrayAccess to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS NullLiteral to MethodInvocation at 2", "INS InfixExpression: - to MethodInvocation at 4", "INS StringLiteral: \" WHERE  a_char_array[0] = 'f' or 100.0d > ALL(a_double_array)\" to InfixExpression: + at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Double to ArrayType: Double[] at 0", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: createTableWithArray to MethodInvocation at 0", "INS SimpleName: props to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: getConnection to MethodInvocation at 1", "INS SimpleName: Properties to SimpleType: Properties at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 13", "INS SimpleName: ts to VariableDeclarationFragment at 0", "INS SimpleType: PreparedStatement to VariableDeclarationStatement at 0", "INS SimpleName: getDouble to MethodInvocation at 1", "INS SimpleName: createSimpleTableWithArray to MethodInvocation at 0", "INS TryStatement to Block at 4", "INS SimpleName: doubleArr to ArrayAccess at 0", "INS SimpleName: doubleArr to VariableDeclarationFragment at 0", "INS NumberLiteral: 1 to ArrayCreation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS SimpleName: rs to MethodInvocation at 0", "INS NullLiteral to MethodInvocation at 3", "INS SimpleName: getDefaultSplits to MethodInvocation at 0", "INS NumberLiteral: 2 to InfixExpression: - at 1", "INS SimpleName: rs to VariableDeclarationFragment at 0", "INS InfixExpression: - to MethodInvocation at 4", "INS ExpressionStatement to Block at 15", "INS MethodInvocation to MethodInvocation at 2", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS Block to MethodDeclaration at 5", "INS NumberLiteral: 2 to InfixExpression: + at 1", "INS SimpleName: ts to InfixExpression: + at 0", "INS SimpleName: tenantId to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: testArraySelectWithALLCombinedWithOR to MethodDeclaration at 3", "INS NullLiteral to VariableDeclarationFragment at 1", "INS ArrayCreation to Assignment: = at 1", "INS Dimension to ArrayType: Double[] at 1", "INS SimpleName: ts to InfixExpression: - at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: ResultSet to SimpleType: ResultSet at 0", "INS MethodInvocation to MethodInvocation at 2", "INS ArrayType: Double[] to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 10", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS Block to TryStatement at 0", "INS SimpleName: getOrganizationId to MethodInvocation at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: doubleArr to ArrayAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS NullLiteral to InfixExpression: != at 1", "INS VariableDeclarationStatement to Block at 3", "INS StringLiteral: \"SELECT a_double_array[1], a_double_array[2]  FROM \" to InfixExpression: + at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS SimpleName: assertTrue to MethodInvocation at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleType: Properties to VariableDeclarationStatement at 0", "INS IfStatement to Block at 0", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: rs to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: next to MethodInvocation at 1", "INS ExpressionStatement to Block at 16", "INS SimpleName: statement to VariableDeclarationFragment at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: getUrl to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Connection to SimpleType: Connection at 0", "INS NumberLiteral: 1 to ArrayCreation at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS Modifier: public to MethodDeclaration at 1", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 13", "INS SimpleName: statement to Assignment: = at 0", "INS QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB to MethodInvocation at 2", "INS ExpressionStatement to Block at 10", "INS ArrayAccess to MethodInvocation at 2", "INS SimpleName: assertTrue to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: getConnection to MethodInvocation at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Block to TryStatement at 1", "INS SimpleName: strArr to ArrayAccess at 0", "INS StringLiteral: \"ABC\" to Assignment: = at 1", "INS SimpleName: conn to MethodInvocation at 0", "INS ArrayAccess to MethodInvocation at 2", "INS SimpleName: conn to Assignment: = at 0", "INS SimpleName: result to MethodInvocation at 1", "INS SimpleName: ts to InfixExpression: + at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS SimpleName: props to MethodInvocation at 3", "INS VariableDeclarationStatement to Block at 11", "INS SimpleName: conn to MethodInvocation at 0", "INS ExpressionStatement to Block at 20", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to MethodInvocation at 1", "INS ExpressionStatement to Block at 15", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: + to Assignment: = at 1", "INS StringLiteral: \" WHERE 'AB' = ANY(a_string_array)\" to InfixExpression: + at 2", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: ts to VariableDeclarationFragment at 0", "INS SimpleName: conn to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 4", "INS StringLiteral: \" WHERE 'XYZWER' = ANY(a_string_array)\" to InfixExpression: + at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS VariableDeclarationStatement to Block at 9", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: conn to InfixExpression: != at 0", "INS MethodInvocation to MethodInvocation at 5", "INS MethodInvocation to MethodInvocation at 1", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS SimpleName: rs to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS TryStatement to Block at 1", "INS SimpleName: ResultSet to SimpleType: ResultSet at 0", "INS SimpleName: tenantId to MethodInvocation at 1", "INS SimpleName: getDefaultSplits to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS InfixExpression: - to MethodInvocation at 4", "INS SimpleName: ts to InfixExpression: - at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 0", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: rs to MethodInvocation at 0", "INS ExpressionStatement to Block at 22", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: assertFalse to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS ExpressionStatement to Block at 18", "INS ExpressionStatement to Block at 12", "INS SimpleName: close to MethodInvocation at 1", "INS SimpleName: createTableWithArray to MethodInvocation at 0", "INS SimpleType: Properties to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 17", "INS InfixExpression: + to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 8", "INS Block to IfStatement at 1", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS SimpleName: rs to Assignment: = at 0", "INS SimpleName: TABLE_WITH_ARRAY to InfixExpression: + at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getString to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS BooleanLiteral: false to MethodInvocation at 4", "INS SimpleName: initTablesWithArrays to MethodInvocation at 0", "INS SimpleName: strArr to ArrayAccess at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: statement to MethodInvocation at 0", "INS SimpleName: props to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 19", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: conn to VariableDeclarationFragment at 0", "INS SimpleName: next to MethodInvocation at 1", "INS ExpressionStatement to Block at 14", "INS SimpleName: rs to MethodInvocation at 0", "INS SimpleName: strArr to VariableDeclarationFragment at 0", "INS Dimension to ArrayType: String[] at 1", "INS SimpleName: assertFalse to MethodInvocation at 0", "INS StringLiteral: \"SELECT a_string_array[1]  FROM \" to InfixExpression: + at 0", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getUrl to MethodInvocation at 0", "INS SimpleName: executeQuery to MethodInvocation at 1", "INS SimpleName: testArraySelectWithANYUsingVarLengthArray to MethodDeclaration at 3", "INS SimpleName: query to VariableDeclarationFragment at 0", "INS SimpleType: ResultSet to VariableDeclarationStatement at 0", "INS SimpleName: setProperty to MethodInvocation at 1", "INS SimpleName: getOrganizationId to MethodInvocation at 0", "INS SimpleName: Test to MarkerAnnotation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to TryStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleType: PreparedStatement to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: query to MethodInvocation at 2", "INS SimpleName: rs to MethodInvocation at 0", "INS SimpleName: Properties to SimpleType: Properties at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Properties to SimpleType: Properties at 0", "INS VariableDeclarationStatement to Block at 7", "INS SimpleType: String to ArrayType: String[] at 0", "INS SimpleName: rs to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 6", "INS SimpleName: executeQuery to MethodInvocation at 1", "INS SimpleName: statement to MethodInvocation at 0", "INS SimpleName: getUrl to MethodInvocation at 0", "INS SimpleName: getString to MethodInvocation at 1", "INS SimpleName: prepareStatement to MethodInvocation at 1", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: tenantId to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 5", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: String to SimpleType: String at 0", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS ArrayType: String[] to VariableDeclarationStatement at 0", "INS Dimension to ArrayType: String[] at 1", "INS ArrayAccess to Assignment: = at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS StringLiteral: \"SELECT a_string_array[1]  FROM \" to InfixExpression: + at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: prepareStatement to MethodInvocation at 1", "INS SimpleName: nextTimestamp to MethodInvocation at 0", "INS SimpleName: TABLE_WITH_ARRAY to InfixExpression: + at 1", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS SimpleName: PreparedStatement to SimpleType: PreparedStatement at 0", "INS NullLiteral to MethodInvocation at 2", "INS NumberLiteral: 2 to InfixExpression: - at 1", "INS SimpleName: props to VariableDeclarationFragment at 0", "INS SimpleType: Connection to VariableDeclarationStatement at 0", "INS NullLiteral to MethodInvocation at 3", "INS SimpleName: Long to MethodInvocation at 0", "INS ExpressionStatement to Block at 21", "INS SimpleName: query to MethodInvocation at 2", "INS SimpleName: strArr to ArrayAccess at 0", "INS NumberLiteral: 2 to InfixExpression: + at 1", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: TEST_PROPERTIES to ClassInstanceCreation at 1", "INS SimpleName: rs to MethodInvocation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: result to MethodInvocation at 1", "INS SimpleName: DriverManager to MethodInvocation at 0", "INS ArrayType: String[] to ArrayCreation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: tenantId to VariableDeclarationFragment at 0", "INS SimpleName: ts to MethodInvocation at 3", "INS SimpleName: query to Assignment: = at 0", "INS SimpleName: result to Assignment: = at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}]}}, {"ArrayIT_diff": {"operations": ["Insert MethodDeclaration(2044) into TypeDeclaration: class(9426) at 14", "Insert MethodDeclaration(2217) into TypeDeclaration: class(9426) at 15", "Insert MethodDeclaration(2349) into TypeDeclaration: class(9426) at 16", "Insert MethodDeclaration(2522) into TypeDeclaration: class(9426) at 17", "Insert MethodDeclaration(2718) into TypeDeclaration: class(9426) at 18", "Insert MethodDeclaration(2927) into TypeDeclaration: class(9426) at 19", "Insert MarkerAnnotation(1873) into MethodDeclaration(2044) at 0", "Insert Modifier: public(1874) into MethodDeclaration(2044) at 1", "Insert PrimitiveType: void(1875) into MethodDeclaration(2044) at 2", "Insert SimpleName: testArraySelectWithORCondition(1876) into MethodDeclaration(2044) at 3", "Insert SimpleType: Exception(1878) into MethodDeclaration(2044) at 4", "Insert Block(2043) into MethodDeclaration(2044) at 5", "Insert MarkerAnnotation(2046) into MethodDeclaration(2217) at 0", "Insert Modifier: public(2047) into MethodDeclaration(2217) at 1", "Insert PrimitiveType: void(2048) into MethodDeclaration(2217) at 2", "Insert SimpleName: testArraySelectWithANY(2049) into MethodDeclaration(2217) at 3", "Insert SimpleType: Exception(2051) into MethodDeclaration(2217) at 4", "Insert Block(2216) into MethodDeclaration(2217) at 5", "Insert MarkerAnnotation(2219) into MethodDeclaration(2349) at 0", "Insert Modifier: public(2220) into MethodDeclaration(2349) at 1", "Insert PrimitiveType: void(2221) into MethodDeclaration(2349) at 2", "Insert SimpleName: testArraySelectWithALL(2222) into MethodDeclaration(2349) at 3", "Insert SimpleType: Exception(2224) into MethodDeclaration(2349) at 4", "Insert Block(2348) into MethodDeclaration(2349) at 5", "Insert MarkerAnnotation(2351) into MethodDeclaration(2522) at 0", "Insert Modifier: public(2352) into MethodDeclaration(2522) at 1", "Insert PrimitiveType: void(2353) into MethodDeclaration(2522) at 2", "Insert SimpleName: testArraySelectWithANYCombinedWithOR(2354) into MethodDeclaration(2522) at 3", "Insert SimpleType: Exception(2356) into MethodDeclaration(2522) at 4", "Insert Block(2521) into MethodDeclaration(2522) at 5", "Insert MarkerAnnotation(2524) into MethodDeclaration(2718) at 0", "Insert Modifier: public(2525) into MethodDeclaration(2718) at 1", "Insert PrimitiveType: void(2526) into MethodDeclaration(2718) at 2", "Insert SimpleName: testArraySelectWithALLCombinedWithOR(2527) into MethodDeclaration(2718) at 3", "Insert SimpleType: Exception(2529) into MethodDeclaration(2718) at 4", "Insert Block(2717) into MethodDeclaration(2718) at 5", "Insert MarkerAnnotation(2720) into MethodDeclaration(2927) at 0", "Insert Modifier: public(2721) into MethodDeclaration(2927) at 1", "Insert PrimitiveType: void(2722) into MethodDeclaration(2927) at 2", "Insert SimpleName: testArraySelectWithANYUsingVarLengthArray(2723) into MethodDeclaration(2927) at 3", "Insert SimpleType: Exception(2725) into MethodDeclaration(2927) at 4", "Insert Block(2926) into MethodDeclaration(2927) at 5", "Insert SimpleName: Test(1872) into MarkerAnnotation(1873) at 0", "Insert SimpleName: Exception(1877) into SimpleType: Exception(1878) at 0", "Insert VariableDeclarationStatement(1884) into Block(2043) at 0", "Insert VariableDeclarationStatement(1891) into Block(2043) at 1", "Insert ExpressionStatement(1903) into Block(2043) at 2", "Insert VariableDeclarationStatement(1909) into Block(2043) at 3", "Insert TryStatement(2042) into Block(2043) at 4", "Insert SimpleName: Test(2045) into MarkerAnnotation(2046) at 0", "Insert SimpleName: Exception(2050) into SimpleType: Exception(2051) at 0", "Insert VariableDeclarationStatement(2057) into Block(2216) at 0", "Insert VariableDeclarationStatement(2064) into Block(2216) at 1", "Insert ExpressionStatement(2076) into Block(2216) at 2", "Insert VariableDeclarationStatement(2082) into Block(2216) at 3", "Insert TryStatement(2215) into Block(2216) at 4", "Insert SimpleName: Test(2218) into MarkerAnnotation(2219) at 0", "Insert SimpleName: Exception(2223) into SimpleType: Exception(2224) at 0", "Insert VariableDeclarationStatement(2230) into Block(2348) at 0", "Insert VariableDeclarationStatement(2237) into Block(2348) at 1", "Insert ExpressionStatement(2249) into Block(2348) at 2", "Insert VariableDeclarationStatement(2255) into Block(2348) at 3", "Insert TryStatement(2347) into Block(2348) at 4", "Insert SimpleName: Test(2350) into MarkerAnnotation(2351) at 0", "Insert SimpleName: Exception(2355) into SimpleType: Exception(2356) at 0", "Insert VariableDeclarationStatement(2362) into Block(2521) at 0", "Insert VariableDeclarationStatement(2369) into Block(2521) at 1", "Insert ExpressionStatement(2381) into Block(2521) at 2", "Insert VariableDeclarationStatement(2387) into Block(2521) at 3", "Insert TryStatement(2520) into Block(2521) at 4", "Insert SimpleName: Test(2523) into MarkerAnnotation(2524) at 0", "Insert SimpleName: Exception(2528) into SimpleType: Exception(2529) at 0", "Insert VariableDeclarationStatement(2535) into Block(2717) at 0", "Insert VariableDeclarationStatement(2542) into Block(2717) at 1", "Insert ExpressionStatement(2554) into Block(2717) at 2", "Insert VariableDeclarationStatement(2560) into Block(2717) at 3", "Insert TryStatement(2716) into Block(2717) at 4", "Insert SimpleName: Test(2719) into MarkerAnnotation(2720) at 0", "Insert SimpleName: Exception(2724) into SimpleType: Exception(2725) at 0", "Insert VariableDeclarationStatement(2731) into Block(2926) at 0", "Insert TryStatement(2925) into Block(2926) at 1", "Insert PrimitiveType: long(1879) into VariableDeclarationStatement(1884) at 0", "Insert VariableDeclarationFragment(1883) into VariableDeclarationStatement(1884) at 1", "Insert SimpleType: String(1886) into VariableDeclarationStatement(1891) at 0", "Insert VariableDeclarationFragment(1890) into VariableDeclarationStatement(1891) at 1", "Insert MethodInvocation(1902) into ExpressionStatement(1903) at 0", "Insert SimpleType: Connection(1905) into VariableDeclarationStatement(1909) at 0", "Insert VariableDeclarationFragment(1908) into VariableDeclarationStatement(1909) at 1", "Insert Block(2031) into TryStatement(2042) at 0", "Insert Block(2041) into TryStatement(2042) at 1", "Insert PrimitiveType: long(2052) into VariableDeclarationStatement(2057) at 0", "Insert VariableDeclarationFragment(2056) into VariableDeclarationStatement(2057) at 1", "Insert SimpleType: String(2059) into VariableDeclarationStatement(2064) at 0", "Insert VariableDeclarationFragment(2063) into VariableDeclarationStatement(2064) at 1", "Insert MethodInvocation(2075) into ExpressionStatement(2076) at 0", "Insert SimpleType: Connection(2078) into VariableDeclarationStatement(2082) at 0", "Insert VariableDeclarationFragment(2081) into VariableDeclarationStatement(2082) at 1", "Insert Block(2204) into TryStatement(2215) at 0", "Insert Block(2214) into TryStatement(2215) at 1", "Insert PrimitiveType: long(2225) into VariableDeclarationStatement(2230) at 0", "Insert VariableDeclarationFragment(2229) into VariableDeclarationStatement(2230) at 1", "Insert SimpleType: String(2232) into VariableDeclarationStatement(2237) at 0", "Insert VariableDeclarationFragment(2236) into VariableDeclarationStatement(2237) at 1", "Insert MethodInvocation(2248) into ExpressionStatement(2249) at 0", "Insert SimpleType: Connection(2251) into VariableDeclarationStatement(2255) at 0", "Insert VariableDeclarationFragment(2254) into VariableDeclarationStatement(2255) at 1", "Insert Block(2336) into TryStatement(2347) at 0", "Insert Block(2346) into TryStatement(2347) at 1", "Insert PrimitiveType: long(2357) into VariableDeclarationStatement(2362) at 0", "Insert VariableDeclarationFragment(2361) into VariableDeclarationStatement(2362) at 1", "Insert SimpleType: String(2364) into VariableDeclarationStatement(2369) at 0", "Insert VariableDeclarationFragment(2368) into VariableDeclarationStatement(2369) at 1", "Insert MethodInvocation(2380) into ExpressionStatement(2381) at 0", "Insert SimpleType: Connection(2383) into VariableDeclarationStatement(2387) at 0", "Insert VariableDeclarationFragment(2386) into VariableDeclarationStatement(2387) at 1", "Insert Block(2509) into TryStatement(2520) at 0", "Insert Block(2519) into TryStatement(2520) at 1", "Insert PrimitiveType: long(2530) into VariableDeclarationStatement(2535) at 0", "Insert VariableDeclarationFragment(2534) into VariableDeclarationStatement(2535) at 1", "Insert SimpleType: String(2537) into VariableDeclarationStatement(2542) at 0", "Insert VariableDeclarationFragment(2541) into VariableDeclarationStatement(2542) at 1", "Insert MethodInvocation(2553) into ExpressionStatement(2554) at 0", "Insert SimpleType: Connection(2556) into VariableDeclarationStatement(2560) at 0", "Insert VariableDeclarationFragment(2559) into VariableDeclarationStatement(2560) at 1", "Insert Block(2705) into TryStatement(2716) at 0", "Insert Block(2715) into TryStatement(2716) at 1", "Insert SimpleType: Connection(2727) into VariableDeclarationStatement(2731) at 0", "Insert VariableDeclarationFragment(2730) into VariableDeclarationStatement(2731) at 1", "Insert Block(2914) into TryStatement(2925) at 0", "Insert Block(2924) into TryStatement(2925) at 1", "Insert SimpleName: ts(1880) into VariableDeclarationFragment(1883) at 0", "Insert MethodInvocation(1882) into VariableDeclarationFragment(1883) at 1", "Insert SimpleName: String(1885) into SimpleType: String(1886) at 0", "Insert SimpleName: tenantId(1887) into VariableDeclarationFragment(1890) at 0", "Insert MethodInvocation(1889) into VariableDeclarationFragment(1890) at 1", "Insert SimpleName: createTableWithArray(1892) into MethodInvocation(1902) at 0", "Insert MethodInvocation(1894) into MethodInvocation(1902) at 1", "Insert MethodInvocation(1897) into MethodInvocation(1902) at 2", "Insert NullLiteral(1898) into MethodInvocation(1902) at 3", "Insert InfixExpression: -(1901) into MethodInvocation(1902) at 4", "Insert SimpleName: Connection(1904) into SimpleType: Connection(1905) at 0", "Insert SimpleName: conn(1906) into VariableDeclarationFragment(1908) at 0", "Insert NullLiteral(1907) into VariableDeclarationFragment(1908) at 1", "Insert ExpressionStatement(1921) into Block(2031) at 0", "Insert ExpressionStatement(1928) into Block(2031) at 1", "Insert VariableDeclarationStatement(1937) into Block(2031) at 2", "Insert ExpressionStatement(1948) into Block(2031) at 3", "Insert ExpressionStatement(1957) into Block(2031) at 4", "Insert VariableDeclarationStatement(1966) into Block(2031) at 5", "Insert VariableDeclarationStatement(1975) into Block(2031) at 6", "Insert VariableDeclarationStatement(1983) into Block(2031) at 7", "Insert ExpressionStatement(1989) into Block(2031) at 8", "Insert VariableDeclarationStatement(2002) into Block(2031) at 9", "Insert ExpressionStatement(2008) into Block(2031) at 10", "Insert VariableDeclarationStatement(2017) into Block(2031) at 11", "Insert ExpressionStatement(2024) into Block(2031) at 12", "Insert ExpressionStatement(2030) into Block(2031) at 13", "Insert IfStatement(2040) into Block(2041) at 0", "Insert SimpleName: ts(2053) into VariableDeclarationFragment(2056) at 0", "Insert MethodInvocation(2055) into VariableDeclarationFragment(2056) at 1", "Insert SimpleName: String(2058) into SimpleType: String(2059) at 0", "Insert SimpleName: tenantId(2060) into VariableDeclarationFragment(2063) at 0", "Insert MethodInvocation(2062) into VariableDeclarationFragment(2063) at 1", "Insert SimpleName: createTableWithArray(2065) into MethodInvocation(2075) at 0", "Insert MethodInvocation(2067) into MethodInvocation(2075) at 1", "Insert MethodInvocation(2070) into MethodInvocation(2075) at 2", "Insert NullLiteral(2071) into MethodInvocation(2075) at 3", "Insert InfixExpression: -(2074) into MethodInvocation(2075) at 4", "Insert SimpleName: Connection(2077) into SimpleType: Connection(2078) at 0", "Insert SimpleName: conn(2079) into VariableDeclarationFragment(2081) at 0", "Insert NullLiteral(2080) into VariableDeclarationFragment(2081) at 1", "Insert ExpressionStatement(2094) into Block(2204) at 0", "Insert ExpressionStatement(2101) into Block(2204) at 1", "Insert VariableDeclarationStatement(2110) into Block(2204) at 2", "Insert ExpressionStatement(2121) into Block(2204) at 3", "Insert ExpressionStatement(2130) into Block(2204) at 4", "Insert VariableDeclarationStatement(2139) into Block(2204) at 5", "Insert VariableDeclarationStatement(2148) into Block(2204) at 6", "Insert VariableDeclarationStatement(2156) into Block(2204) at 7", "Insert ExpressionStatement(2162) into Block(2204) at 8", "Insert VariableDeclarationStatement(2175) into Block(2204) at 9", "Insert ExpressionStatement(2181) into Block(2204) at 10", "Insert VariableDeclarationStatement(2190) into Block(2204) at 11", "Insert ExpressionStatement(2197) into Block(2204) at 12", "Insert ExpressionStatement(2203) into Block(2204) at 13", "Insert IfStatement(2213) into Block(2214) at 0", "Insert SimpleName: ts(2226) into VariableDeclarationFragment(2229) at 0", "Insert MethodInvocation(2228) into VariableDeclarationFragment(2229) at 1", "Insert SimpleName: String(2231) into SimpleType: String(2232) at 0", "Insert SimpleName: tenantId(2233) into VariableDeclarationFragment(2236) at 0", "Insert MethodInvocation(2235) into VariableDeclarationFragment(2236) at 1", "Insert SimpleName: createTableWithArray(2238) into MethodInvocation(2248) at 0", "Insert MethodInvocation(2240) into MethodInvocation(2248) at 1", "Insert MethodInvocation(2243) into MethodInvocation(2248) at 2", "Insert NullLiteral(2244) into MethodInvocation(2248) at 3", "Insert InfixExpression: -(2247) into MethodInvocation(2248) at 4", "Insert SimpleName: Connection(2250) into SimpleType: Connection(2251) at 0", "Insert SimpleName: conn(2252) into VariableDeclarationFragment(2254) at 0", "Insert NullLiteral(2253) into VariableDeclarationFragment(2254) at 1", "Insert ExpressionStatement(2267) into Block(2336) at 0", "Insert ExpressionStatement(2274) into Block(2336) at 1", "Insert VariableDeclarationStatement(2283) into Block(2336) at 2", "Insert ExpressionStatement(2294) into Block(2336) at 3", "Insert ExpressionStatement(2303) into Block(2336) at 4", "Insert VariableDeclarationStatement(2312) into Block(2336) at 5", "Insert VariableDeclarationStatement(2321) into Block(2336) at 6", "Insert VariableDeclarationStatement(2329) into Block(2336) at 7", "Insert ExpressionStatement(2335) into Block(2336) at 8", "Insert IfStatement(2345) into Block(2346) at 0", "Insert SimpleName: ts(2358) into VariableDeclarationFragment(2361) at 0", "Insert MethodInvocation(2360) into VariableDeclarationFragment(2361) at 1", "Insert SimpleName: String(2363) into SimpleType: String(2364) at 0", "Insert SimpleName: tenantId(2365) into VariableDeclarationFragment(2368) at 0", "Insert MethodInvocation(2367) into VariableDeclarationFragment(2368) at 1", "Insert SimpleName: createTableWithArray(2370) into MethodInvocation(2380) at 0", "Insert MethodInvocation(2372) into MethodInvocation(2380) at 1", "Insert MethodInvocation(2375) into MethodInvocation(2380) at 2", "Insert NullLiteral(2376) into MethodInvocation(2380) at 3", "Insert InfixExpression: -(2379) into MethodInvocation(2380) at 4", "Insert SimpleName: Connection(2382) into SimpleType: Connection(2383) at 0", "Insert SimpleName: conn(2384) into VariableDeclarationFragment(2386) at 0", "Insert NullLiteral(2385) into VariableDeclarationFragment(2386) at 1", "Insert ExpressionStatement(2399) into Block(2509) at 0", "Insert ExpressionStatement(2406) into Block(2509) at 1", "Insert VariableDeclarationStatement(2415) into Block(2509) at 2", "Insert ExpressionStatement(2426) into Block(2509) at 3", "Insert ExpressionStatement(2435) into Block(2509) at 4", "Insert VariableDeclarationStatement(2444) into Block(2509) at 5", "Insert VariableDeclarationStatement(2453) into Block(2509) at 6", "Insert VariableDeclarationStatement(2461) into Block(2509) at 7", "Insert ExpressionStatement(2467) into Block(2509) at 8", "Insert VariableDeclarationStatement(2480) into Block(2509) at 9", "Insert ExpressionStatement(2486) into Block(2509) at 10", "Insert VariableDeclarationStatement(2495) into Block(2509) at 11", "Insert ExpressionStatement(2502) into Block(2509) at 12", "Insert ExpressionStatement(2508) into Block(2509) at 13", "Insert IfStatement(2518) into Block(2519) at 0", "Insert SimpleName: ts(2531) into VariableDeclarationFragment(2534) at 0", "Insert MethodInvocation(2533) into VariableDeclarationFragment(2534) at 1", "Insert SimpleName: String(2536) into SimpleType: String(2537) at 0", "Insert SimpleName: tenantId(2538) into VariableDeclarationFragment(2541) at 0", "Insert MethodInvocation(2540) into VariableDeclarationFragment(2541) at 1", "Insert SimpleName: createTableWithArray(2543) into MethodInvocation(2553) at 0", "Insert MethodInvocation(2545) into MethodInvocation(2553) at 1", "Insert MethodInvocation(2548) into MethodInvocation(2553) at 2", "Insert NullLiteral(2549) into MethodInvocation(2553) at 3", "Insert InfixExpression: -(2552) into MethodInvocation(2553) at 4", "Insert SimpleName: Connection(2555) into SimpleType: Connection(2556) at 0", "Insert SimpleName: conn(2557) into VariableDeclarationFragment(2559) at 0", "Insert NullLiteral(2558) into VariableDeclarationFragment(2559) at 1", "Insert ExpressionStatement(2572) into Block(2705) at 0", "Insert ExpressionStatement(2579) into Block(2705) at 1", "Insert VariableDeclarationStatement(2588) into Block(2705) at 2", "Insert ExpressionStatement(2599) into Block(2705) at 3", "Insert ExpressionStatement(2608) into Block(2705) at 4", "Insert VariableDeclarationStatement(2617) into Block(2705) at 5", "Insert VariableDeclarationStatement(2626) into Block(2705) at 6", "Insert VariableDeclarationStatement(2634) into Block(2705) at 7", "Insert ExpressionStatement(2640) into Block(2705) at 8", "Insert VariableDeclarationStatement(2653) into Block(2705) at 9", "Insert ExpressionStatement(2659) into Block(2705) at 10", "Insert VariableDeclarationStatement(2668) into Block(2705) at 11", "Insert ExpressionStatement(2675) into Block(2705) at 12", "Insert ExpressionStatement(2684) into Block(2705) at 13", "Insert ExpressionStatement(2690) into Block(2705) at 14", "Insert ExpressionStatement(2697) into Block(2705) at 15", "Insert ExpressionStatement(2704) into Block(2705) at 16", "Insert IfStatement(2714) into Block(2715) at 0", "Insert SimpleName: Connection(2726) into SimpleType: Connection(2727) at 0", "Insert SimpleName: conn(2728) into VariableDeclarationFragment(2730) at 0", "Insert NullLiteral(2729) into VariableDeclarationFragment(2730) at 1", "Insert VariableDeclarationStatement(2737) into Block(2914) at 0", "Insert VariableDeclarationStatement(2744) into Block(2914) at 1", "Insert ExpressionStatement(2756) into Block(2914) at 2", "Insert ExpressionStatement(2765) into Block(2914) at 3", "Insert VariableDeclarationStatement(2774) into Block(2914) at 4", "Insert ExpressionStatement(2785) into Block(2914) at 5", "Insert ExpressionStatement(2794) into Block(2914) at 6", "Insert VariableDeclarationStatement(2803) into Block(2914) at 7", "Insert VariableDeclarationStatement(2812) into Block(2914) at 8", "Insert VariableDeclarationStatement(2820) into Block(2914) at 9", "Insert ExpressionStatement(2826) into Block(2914) at 10", "Insert VariableDeclarationStatement(2839) into Block(2914) at 11", "Insert ExpressionStatement(2845) into Block(2914) at 12", "Insert VariableDeclarationStatement(2854) into Block(2914) at 13", "Insert ExpressionStatement(2861) into Block(2914) at 14", "Insert ExpressionStatement(2867) into Block(2914) at 15", "Insert ExpressionStatement(2874) into Block(2914) at 16", "Insert ExpressionStatement(2881) into Block(2914) at 17", "Insert ExpressionStatement(2887) into Block(2914) at 18", "Insert ExpressionStatement(2893) into Block(2914) at 19", "Insert ExpressionStatement(2900) into Block(2914) at 20", "Insert ExpressionStatement(2907) into Block(2914) at 21", "Insert ExpressionStatement(2913) into Block(2914) at 22", "Insert IfStatement(2923) into Block(2924) at 0", "Insert SimpleName: nextTimestamp(1881) into MethodInvocation(1882) at 0", "Insert SimpleName: getOrganizationId(1888) into MethodInvocation(1889) at 0", "Insert SimpleName: getUrl(1893) into MethodInvocation(1894) at 0", "Insert SimpleName: getDefaultSplits(1895) into MethodInvocation(1897) at 0", "Insert SimpleName: tenantId(1896) into MethodInvocation(1897) at 1", "Insert SimpleName: ts(1899) into InfixExpression: -(1901) at 0", "Insert NumberLiteral: 2(1900) into InfixExpression: -(1901) at 1", "Insert MethodInvocation(1920) into ExpressionStatement(1921) at 0", "Insert MethodInvocation(1927) into ExpressionStatement(1928) at 0", "Insert SimpleType: Properties(1930) into VariableDeclarationStatement(1937) at 0", "Insert VariableDeclarationFragment(1936) into VariableDeclarationStatement(1937) at 1", "Insert MethodInvocation(1947) into ExpressionStatement(1948) at 0", "Insert Assignment: =(1956) into ExpressionStatement(1957) at 0", "Insert SimpleType: String(1959) into VariableDeclarationStatement(1966) at 0", "Insert VariableDeclarationFragment(1965) into VariableDeclarationStatement(1966) at 1", "Insert SimpleType: PreparedStatement(1968) into VariableDeclarationStatement(1975) at 0", "Insert VariableDeclarationFragment(1974) into VariableDeclarationStatement(1975) at 1", "Insert SimpleType: ResultSet(1977) into VariableDeclarationStatement(1983) at 0", "Insert VariableDeclarationFragment(1982) into VariableDeclarationStatement(1983) at 1", "Insert MethodInvocation(1988) into ExpressionStatement(1989) at 0", "Insert ArrayType: Double[](1993) into VariableDeclarationStatement(2002) at 0", "Insert VariableDeclarationFragment(2001) into VariableDeclarationStatement(2002) at 1", "Insert Assignment: =(2007) into ExpressionStatement(2008) at 0", "Insert SimpleType: Double(2010) into VariableDeclarationStatement(2017) at 0", "Insert VariableDeclarationFragment(2016) into VariableDeclarationStatement(2017) at 1", "Insert MethodInvocation(2023) into ExpressionStatement(2024) at 0", "Insert MethodInvocation(2029) into ExpressionStatement(2030) at 0", "Insert InfixExpression: !=(2034) into IfStatement(2040) at 0", "Insert Block(2039) into IfStatement(2040) at 1", "Insert SimpleName: nextTimestamp(2054) into MethodInvocation(2055) at 0", "Insert SimpleName: getOrganizationId(2061) into MethodInvocation(2062) at 0", "Insert SimpleName: getUrl(2066) into MethodInvocation(2067) at 0", "Insert SimpleName: getDefaultSplits(2068) into MethodInvocation(2070) at 0", "Insert SimpleName: tenantId(2069) into MethodInvocation(2070) at 1", "Insert SimpleName: ts(2072) into InfixExpression: -(2074) at 0", "Insert NumberLiteral: 2(2073) into InfixExpression: -(2074) at 1", "Insert MethodInvocation(2093) into ExpressionStatement(2094) at 0", "Insert MethodInvocation(2100) into ExpressionStatement(2101) at 0", "Insert SimpleType: Properties(2103) into VariableDeclarationStatement(2110) at 0", "Insert VariableDeclarationFragment(2109) into VariableDeclarationStatement(2110) at 1", "Insert MethodInvocation(2120) into ExpressionStatement(2121) at 0", "Insert Assignment: =(2129) into ExpressionStatement(2130) at 0", "Insert SimpleType: String(2132) into VariableDeclarationStatement(2139) at 0", "Insert VariableDeclarationFragment(2138) into VariableDeclarationStatement(2139) at 1", "Insert SimpleType: PreparedStatement(2141) into VariableDeclarationStatement(2148) at 0", "Insert VariableDeclarationFragment(2147) into VariableDeclarationStatement(2148) at 1", "Insert SimpleType: ResultSet(2150) into VariableDeclarationStatement(2156) at 0", "Insert VariableDeclarationFragment(2155) into VariableDeclarationStatement(2156) at 1", "Insert MethodInvocation(2161) into ExpressionStatement(2162) at 0", "Insert ArrayType: Double[](2166) into VariableDeclarationStatement(2175) at 0", "Insert VariableDeclarationFragment(2174) into VariableDeclarationStatement(2175) at 1", "Insert Assignment: =(2180) into ExpressionStatement(2181) at 0", "Insert SimpleType: Double(2183) into VariableDeclarationStatement(2190) at 0", "Insert VariableDeclarationFragment(2189) into VariableDeclarationStatement(2190) at 1", "Insert MethodInvocation(2196) into ExpressionStatement(2197) at 0", "Insert MethodInvocation(2202) into ExpressionStatement(2203) at 0", "Insert InfixExpression: !=(2207) into IfStatement(2213) at 0", "Insert Block(2212) into IfStatement(2213) at 1", "Insert SimpleName: nextTimestamp(2227) into MethodInvocation(2228) at 0", "Insert SimpleName: getOrganizationId(2234) into MethodInvocation(2235) at 0", "Insert SimpleName: getUrl(2239) into MethodInvocation(2240) at 0", "Insert SimpleName: getDefaultSplits(2241) into MethodInvocation(2243) at 0", "Insert SimpleName: tenantId(2242) into MethodInvocation(2243) at 1", "Insert SimpleName: ts(2245) into InfixExpression: -(2247) at 0", "Insert NumberLiteral: 2(2246) into InfixExpression: -(2247) at 1", "Insert MethodInvocation(2266) into ExpressionStatement(2267) at 0", "Insert MethodInvocation(2273) into ExpressionStatement(2274) at 0", "Insert SimpleType: Properties(2276) into VariableDeclarationStatement(2283) at 0", "Insert VariableDeclarationFragment(2282) into VariableDeclarationStatement(2283) at 1", "Insert MethodInvocation(2293) into ExpressionStatement(2294) at 0", "Insert Assignment: =(2302) into ExpressionStatement(2303) at 0", "Insert SimpleType: String(2305) into VariableDeclarationStatement(2312) at 0", "Insert VariableDeclarationFragment(2311) into VariableDeclarationStatement(2312) at 1", "Insert SimpleType: PreparedStatement(2314) into VariableDeclarationStatement(2321) at 0", "Insert VariableDeclarationFragment(2320) into VariableDeclarationStatement(2321) at 1", "Insert SimpleType: ResultSet(2323) into VariableDeclarationStatement(2329) at 0", "Insert VariableDeclarationFragment(2328) into VariableDeclarationStatement(2329) at 1", "Insert MethodInvocation(2334) into ExpressionStatement(2335) at 0", "Insert InfixExpression: !=(2339) into IfStatement(2345) at 0", "Insert Block(2344) into IfStatement(2345) at 1", "Insert SimpleName: nextTimestamp(2359) into MethodInvocation(2360) at 0", "Insert SimpleName: getOrganizationId(2366) into MethodInvocation(2367) at 0", "Insert SimpleName: getUrl(2371) into MethodInvocation(2372) at 0", "Insert SimpleName: getDefaultSplits(2373) into MethodInvocation(2375) at 0", "Insert SimpleName: tenantId(2374) into MethodInvocation(2375) at 1", "Insert SimpleName: ts(2377) into InfixExpression: -(2379) at 0", "Insert NumberLiteral: 2(2378) into InfixExpression: -(2379) at 1", "Insert MethodInvocation(2398) into ExpressionStatement(2399) at 0", "Insert MethodInvocation(2405) into ExpressionStatement(2406) at 0", "Insert SimpleType: Properties(2408) into VariableDeclarationStatement(2415) at 0", "Insert VariableDeclarationFragment(2414) into VariableDeclarationStatement(2415) at 1", "Insert MethodInvocation(2425) into ExpressionStatement(2426) at 0", "Insert Assignment: =(2434) into ExpressionStatement(2435) at 0", "Insert SimpleType: String(2437) into VariableDeclarationStatement(2444) at 0", "Insert VariableDeclarationFragment(2443) into VariableDeclarationStatement(2444) at 1", "Insert SimpleType: PreparedStatement(2446) into VariableDeclarationStatement(2453) at 0", "Insert VariableDeclarationFragment(2452) into VariableDeclarationStatement(2453) at 1", "Insert SimpleType: ResultSet(2455) into VariableDeclarationStatement(2461) at 0", "Insert VariableDeclarationFragment(2460) into VariableDeclarationStatement(2461) at 1", "Insert MethodInvocation(2466) into ExpressionStatement(2467) at 0", "Insert ArrayType: Double[](2471) into VariableDeclarationStatement(2480) at 0", "Insert VariableDeclarationFragment(2479) into VariableDeclarationStatement(2480) at 1", "Insert Assignment: =(2485) into ExpressionStatement(2486) at 0", "Insert SimpleType: Double(2488) into VariableDeclarationStatement(2495) at 0", "Insert VariableDeclarationFragment(2494) into VariableDeclarationStatement(2495) at 1", "Insert MethodInvocation(2501) into ExpressionStatement(2502) at 0", "Insert MethodInvocation(2507) into ExpressionStatement(2508) at 0", "Insert InfixExpression: !=(2512) into IfStatement(2518) at 0", "Insert Block(2517) into IfStatement(2518) at 1", "Insert SimpleName: nextTimestamp(2532) into MethodInvocation(2533) at 0", "Insert SimpleName: getOrganizationId(2539) into MethodInvocation(2540) at 0", "Insert SimpleName: getUrl(2544) into MethodInvocation(2545) at 0", "Insert SimpleName: getDefaultSplits(2546) into MethodInvocation(2548) at 0", "Insert SimpleName: tenantId(2547) into MethodInvocation(2548) at 1", "Insert SimpleName: ts(2550) into InfixExpression: -(2552) at 0", "Insert NumberLiteral: 2(2551) into InfixExpression: -(2552) at 1", "Insert MethodInvocation(2571) into ExpressionStatement(2572) at 0", "Insert MethodInvocation(2578) into ExpressionStatement(2579) at 0", "Insert SimpleType: Properties(2581) into VariableDeclarationStatement(2588) at 0", "Insert VariableDeclarationFragment(2587) into VariableDeclarationStatement(2588) at 1", "Insert MethodInvocation(2598) into ExpressionStatement(2599) at 0", "Insert Assignment: =(2607) into ExpressionStatement(2608) at 0", "Insert SimpleType: String(2610) into VariableDeclarationStatement(2617) at 0", "Insert VariableDeclarationFragment(2616) into VariableDeclarationStatement(2617) at 1", "Insert SimpleType: PreparedStatement(2619) into VariableDeclarationStatement(2626) at 0", "Insert VariableDeclarationFragment(2625) into VariableDeclarationStatement(2626) at 1", "Insert SimpleType: ResultSet(2628) into VariableDeclarationStatement(2634) at 0", "Insert VariableDeclarationFragment(2633) into VariableDeclarationStatement(2634) at 1", "Insert MethodInvocation(2639) into ExpressionStatement(2640) at 0", "Insert ArrayType: Double[](2644) into VariableDeclarationStatement(2653) at 0", "Insert VariableDeclarationFragment(2652) into VariableDeclarationStatement(2653) at 1", "Insert Assignment: =(2658) into ExpressionStatement(2659) at 0", "Insert SimpleType: Double(2661) into VariableDeclarationStatement(2668) at 0", "Insert VariableDeclarationFragment(2667) into VariableDeclarationStatement(2668) at 1", "Insert MethodInvocation(2674) into ExpressionStatement(2675) at 0", "Insert Assignment: =(2683) into ExpressionStatement(2684) at 0", "Insert Assignment: =(2689) into ExpressionStatement(2690) at 0", "Insert Assignment: =(2696) into ExpressionStatement(2697) at 0", "Insert MethodInvocation(2703) into ExpressionStatement(2704) at 0", "Insert InfixExpression: !=(2708) into IfStatement(2714) at 0", "Insert Block(2713) into IfStatement(2714) at 1", "Insert PrimitiveType: long(2732) into VariableDeclarationStatement(2737) at 0", "Insert VariableDeclarationFragment(2736) into VariableDeclarationStatement(2737) at 1", "Insert SimpleType: String(2739) into VariableDeclarationStatement(2744) at 0", "Insert VariableDeclarationFragment(2743) into VariableDeclarationStatement(2744) at 1", "Insert MethodInvocation(2755) into ExpressionStatement(2756) at 0", "Insert MethodInvocation(2764) into ExpressionStatement(2765) at 0", "Insert SimpleType: Properties(2767) into VariableDeclarationStatement(2774) at 0", "Insert VariableDeclarationFragment(2773) into VariableDeclarationStatement(2774) at 1", "Insert MethodInvocation(2784) into ExpressionStatement(2785) at 0", "Insert Assignment: =(2793) into ExpressionStatement(2794) at 0", "Insert SimpleType: String(2796) into VariableDeclarationStatement(2803) at 0", "Insert VariableDeclarationFragment(2802) into VariableDeclarationStatement(2803) at 1", "Insert SimpleType: PreparedStatement(2805) into VariableDeclarationStatement(2812) at 0", "Insert VariableDeclarationFragment(2811) into VariableDeclarationStatement(2812) at 1", "Insert SimpleType: ResultSet(2814) into VariableDeclarationStatement(2820) at 0", "Insert VariableDeclarationFragment(2819) into VariableDeclarationStatement(2820) at 1", "Insert MethodInvocation(2825) into ExpressionStatement(2826) at 0", "Insert ArrayType: String[](2830) into VariableDeclarationStatement(2839) at 0", "Insert VariableDeclarationFragment(2838) into VariableDeclarationStatement(2839) at 1", "Insert Assignment: =(2844) into ExpressionStatement(2845) at 0", "Insert SimpleType: String(2847) into VariableDeclarationStatement(2854) at 0", "Insert VariableDeclarationFragment(2853) into VariableDeclarationStatement(2854) at 1", "Insert MethodInvocation(2860) into ExpressionStatement(2861) at 0", "Insert MethodInvocation(2866) into ExpressionStatement(2867) at 0", "Insert Assignment: =(2873) into ExpressionStatement(2874) at 0", "Insert Assignment: =(2880) into ExpressionStatement(2881) at 0", "Insert Assignment: =(2886) into ExpressionStatement(2887) at 0", "Insert MethodInvocation(2892) into ExpressionStatement(2893) at 0", "Insert Assignment: =(2899) into ExpressionStatement(2900) at 0", "Insert MethodInvocation(2906) into ExpressionStatement(2907) at 0", "Insert MethodInvocation(2912) into ExpressionStatement(2913) at 0", "Insert InfixExpression: !=(2917) into IfStatement(2923) at 0", "Insert Block(2922) into IfStatement(2923) at 1", "Insert SimpleName: createSimpleTableWithArray(1910) into MethodInvocation(1920) at 0", "Insert MethodInvocation(1912) into MethodInvocation(1920) at 1", "Insert MethodInvocation(1915) into MethodInvocation(1920) at 2", "Insert NullLiteral(1916) into MethodInvocation(1920) at 3", "Insert InfixExpression: -(1919) into MethodInvocation(1920) at 4", "Insert SimpleName: initSimpleArrayTable(1922) into MethodInvocation(1927) at 0", "Insert SimpleName: tenantId(1923) into MethodInvocation(1927) at 1", "Insert NullLiteral(1924) into MethodInvocation(1927) at 2", "Insert SimpleName: ts(1925) into MethodInvocation(1927) at 3", "Insert BooleanLiteral: false(1926) into MethodInvocation(1927) at 4", "Insert SimpleName: Properties(1929) into SimpleType: Properties(1930) at 0", "Insert SimpleName: props(1931) into VariableDeclarationFragment(1936) at 0", "Insert ClassInstanceCreation(1935) into VariableDeclarationFragment(1936) at 1", "Insert SimpleName: props(1938) into MethodInvocation(1947) at 0", "Insert SimpleName: setProperty(1939) into MethodInvocation(1947) at 1", "Insert QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB(1940) into MethodInvocation(1947) at 2", "Insert MethodInvocation(1946) into MethodInvocation(1947) at 3", "Insert SimpleName: conn(1949) into Assignment: =(1956) at 0", "Insert MethodInvocation(1955) into Assignment: =(1956) at 1", "Insert SimpleName: String(1958) into SimpleType: String(1959) at 0", "Insert SimpleName: query(1960) into VariableDeclarationFragment(1965) at 0", "Insert InfixExpression: +(1964) into VariableDeclarationFragment(1965) at 1", "Insert SimpleName: PreparedStatement(1967) into SimpleType: PreparedStatement(1968) at 0", "Insert SimpleName: statement(1969) into VariableDeclarationFragment(1974) at 0", "Insert MethodInvocation(1973) into VariableDeclarationFragment(1974) at 1", "Insert SimpleName: ResultSet(1976) into SimpleType: ResultSet(1977) at 0", "Insert SimpleName: rs(1978) into VariableDeclarationFragment(1982) at 0", "Insert MethodInvocation(1981) into VariableDeclarationFragment(1982) at 1", "Insert SimpleName: assertTrue(1984) into MethodInvocation(1988) at 0", "Insert MethodInvocation(1987) into MethodInvocation(1988) at 1", "Insert SimpleType: Double(1991) into ArrayType: Double[](1993) at 0", "Insert Dimension(1992) into ArrayType: Double[](1993) at 1", "Insert SimpleName: doubleArr(1994) into VariableDeclarationFragment(2001) at 0", "Insert ArrayCreation(2000) into VariableDeclarationFragment(2001) at 1", "Insert ArrayAccess(2005) into Assignment: =(2007) at 0", "Insert NumberLiteral: 64.87d(2006) into Assignment: =(2007) at 1", "Insert SimpleName: Double(2009) into SimpleType: Double(2010) at 0", "Insert SimpleName: result(2011) into VariableDeclarationFragment(2016) at 0", "Insert MethodInvocation(2015) into VariableDeclarationFragment(2016) at 1", "Insert SimpleName: assertEquals(2018) into MethodInvocation(2023) at 0", "Insert SimpleName: result(2019) into MethodInvocation(2023) at 1", "Insert ArrayAccess(2022) into MethodInvocation(2023) at 2", "Insert SimpleName: assertFalse(2025) into MethodInvocation(2029) at 0", "Insert MethodInvocation(2028) into MethodInvocation(2029) at 1", "Insert SimpleName: conn(2032) into InfixExpression: !=(2034) at 0", "Insert NullLiteral(2033) into InfixExpression: !=(2034) at 1", "Insert ExpressionStatement(2038) into Block(2039) at 0", "Insert SimpleName: createSimpleTableWithArray(2083) into MethodInvocation(2093) at 0", "Insert MethodInvocation(2085) into MethodInvocation(2093) at 1", "Insert MethodInvocation(2088) into MethodInvocation(2093) at 2", "Insert NullLiteral(2089) into MethodInvocation(2093) at 3", "Insert InfixExpression: -(2092) into MethodInvocation(2093) at 4", "Insert SimpleName: initSimpleArrayTable(2095) into MethodInvocation(2100) at 0", "Insert SimpleName: tenantId(2096) into MethodInvocation(2100) at 1", "Insert NullLiteral(2097) into MethodInvocation(2100) at 2", "Insert SimpleName: ts(2098) into MethodInvocation(2100) at 3", "Insert BooleanLiteral: false(2099) into MethodInvocation(2100) at 4", "Insert SimpleName: Properties(2102) into SimpleType: Properties(2103) at 0", "Insert SimpleName: props(2104) into VariableDeclarationFragment(2109) at 0", "Insert ClassInstanceCreation(2108) into VariableDeclarationFragment(2109) at 1", "Insert SimpleName: props(2111) into MethodInvocation(2120) at 0", "Insert SimpleName: setProperty(2112) into MethodInvocation(2120) at 1", "Insert QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB(2113) into MethodInvocation(2120) at 2", "Insert MethodInvocation(2119) into MethodInvocation(2120) at 3", "Insert SimpleName: conn(2122) into Assignment: =(2129) at 0", "Insert MethodInvocation(2128) into Assignment: =(2129) at 1", "Insert SimpleName: String(2131) into SimpleType: String(2132) at 0", "Insert SimpleName: query(2133) into VariableDeclarationFragment(2138) at 0", "Insert InfixExpression: +(2137) into VariableDeclarationFragment(2138) at 1", "Insert SimpleName: PreparedStatement(2140) into SimpleType: PreparedStatement(2141) at 0", "Insert SimpleName: statement(2142) into VariableDeclarationFragment(2147) at 0", "Insert MethodInvocation(2146) into VariableDeclarationFragment(2147) at 1", "Insert SimpleName: ResultSet(2149) into SimpleType: ResultSet(2150) at 0", "Insert SimpleName: rs(2151) into VariableDeclarationFragment(2155) at 0", "Insert MethodInvocation(2154) into VariableDeclarationFragment(2155) at 1", "Insert SimpleName: assertTrue(2157) into MethodInvocation(2161) at 0", "Insert MethodInvocation(2160) into MethodInvocation(2161) at 1", "Insert SimpleType: Double(2164) into ArrayType: Double[](2166) at 0", "Insert Dimension(2165) into ArrayType: Double[](2166) at 1", "Insert SimpleName: doubleArr(2167) into VariableDeclarationFragment(2174) at 0", "Insert ArrayCreation(2173) into VariableDeclarationFragment(2174) at 1", "Insert ArrayAccess(2178) into Assignment: =(2180) at 0", "Insert NumberLiteral: 64.87d(2179) into Assignment: =(2180) at 1", "Insert SimpleName: Double(2182) into SimpleType: Double(2183) at 0", "Insert SimpleName: result(2184) into VariableDeclarationFragment(2189) at 0", "Insert MethodInvocation(2188) into VariableDeclarationFragment(2189) at 1", "Insert SimpleName: assertEquals(2191) into MethodInvocation(2196) at 0", "Insert SimpleName: result(2192) into MethodInvocation(2196) at 1", "Insert ArrayAccess(2195) into MethodInvocation(2196) at 2", "Insert SimpleName: assertFalse(2198) into MethodInvocation(2202) at 0", "Insert MethodInvocation(2201) into MethodInvocation(2202) at 1", "Insert SimpleName: conn(2205) into InfixExpression: !=(2207) at 0", "Insert NullLiteral(2206) into InfixExpression: !=(2207) at 1", "Insert ExpressionStatement(2211) into Block(2212) at 0", "Insert SimpleName: createSimpleTableWithArray(2256) into MethodInvocation(2266) at 0", "Insert MethodInvocation(2258) into MethodInvocation(2266) at 1", "Insert MethodInvocation(2261) into MethodInvocation(2266) at 2", "Insert NullLiteral(2262) into MethodInvocation(2266) at 3", "Insert InfixExpression: -(2265) into MethodInvocation(2266) at 4", "Insert SimpleName: initSimpleArrayTable(2268) into MethodInvocation(2273) at 0", "Insert SimpleName: tenantId(2269) into MethodInvocation(2273) at 1", "Insert NullLiteral(2270) into MethodInvocation(2273) at 2", "Insert SimpleName: ts(2271) into MethodInvocation(2273) at 3", "Insert BooleanLiteral: false(2272) into MethodInvocation(2273) at 4", "Insert SimpleName: Properties(2275) into SimpleType: Properties(2276) at 0", "Insert SimpleName: props(2277) into VariableDeclarationFragment(2282) at 0", "Insert ClassInstanceCreation(2281) into VariableDeclarationFragment(2282) at 1", "Insert SimpleName: props(2284) into MethodInvocation(2293) at 0", "Insert SimpleName: setProperty(2285) into MethodInvocation(2293) at 1", "Insert QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB(2286) into MethodInvocation(2293) at 2", "Insert MethodInvocation(2292) into MethodInvocation(2293) at 3", "Insert SimpleName: conn(2295) into Assignment: =(2302) at 0", "Insert MethodInvocation(2301) into Assignment: =(2302) at 1", "Insert SimpleName: String(2304) into SimpleType: String(2305) at 0", "Insert SimpleName: query(2306) into VariableDeclarationFragment(2311) at 0", "Insert InfixExpression: +(2310) into VariableDeclarationFragment(2311) at 1", "Insert SimpleName: PreparedStatement(2313) into SimpleType: PreparedStatement(2314) at 0", "Insert SimpleName: statement(2315) into VariableDeclarationFragment(2320) at 0", "Insert MethodInvocation(2319) into VariableDeclarationFragment(2320) at 1", "Insert SimpleName: ResultSet(2322) into SimpleType: ResultSet(2323) at 0", "Insert SimpleName: rs(2324) into VariableDeclarationFragment(2328) at 0", "Insert MethodInvocation(2327) into VariableDeclarationFragment(2328) at 1", "Insert SimpleName: assertFalse(2330) into MethodInvocation(2334) at 0", "Insert MethodInvocation(2333) into MethodInvocation(2334) at 1", "Insert SimpleName: conn(2337) into InfixExpression: !=(2339) at 0", "Insert NullLiteral(2338) into InfixExpression: !=(2339) at 1", "Insert ExpressionStatement(2343) into Block(2344) at 0", "Insert SimpleName: createSimpleTableWithArray(2388) into MethodInvocation(2398) at 0", "Insert MethodInvocation(2390) into MethodInvocation(2398) at 1", "Insert MethodInvocation(2393) into MethodInvocation(2398) at 2", "Insert NullLiteral(2394) into MethodInvocation(2398) at 3", "Insert InfixExpression: -(2397) into MethodInvocation(2398) at 4", "Insert SimpleName: initSimpleArrayTable(2400) into MethodInvocation(2405) at 0", "Insert SimpleName: tenantId(2401) into MethodInvocation(2405) at 1", "Insert NullLiteral(2402) into MethodInvocation(2405) at 2", "Insert SimpleName: ts(2403) into MethodInvocation(2405) at 3", "Insert BooleanLiteral: false(2404) into MethodInvocation(2405) at 4", "Insert SimpleName: Properties(2407) into SimpleType: Properties(2408) at 0", "Insert SimpleName: props(2409) into VariableDeclarationFragment(2414) at 0", "Insert ClassInstanceCreation(2413) into VariableDeclarationFragment(2414) at 1", "Insert SimpleName: props(2416) into MethodInvocation(2425) at 0", "Insert SimpleName: setProperty(2417) into MethodInvocation(2425) at 1", "Insert QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB(2418) into MethodInvocation(2425) at 2", "Insert MethodInvocation(2424) into MethodInvocation(2425) at 3", "Insert SimpleName: conn(2427) into Assignment: =(2434) at 0", "Insert MethodInvocation(2433) into Assignment: =(2434) at 1", "Insert SimpleName: String(2436) into SimpleType: String(2437) at 0", "Insert SimpleName: query(2438) into VariableDeclarationFragment(2443) at 0", "Insert InfixExpression: +(2442) into VariableDeclarationFragment(2443) at 1", "Insert SimpleName: PreparedStatement(2445) into SimpleType: PreparedStatement(2446) at 0", "Insert SimpleName: statement(2447) into VariableDeclarationFragment(2452) at 0", "Insert MethodInvocation(2451) into VariableDeclarationFragment(2452) at 1", "Insert SimpleName: ResultSet(2454) into SimpleType: ResultSet(2455) at 0", "Insert SimpleName: rs(2456) into VariableDeclarationFragment(2460) at 0", "Insert MethodInvocation(2459) into VariableDeclarationFragment(2460) at 1", "Insert SimpleName: assertTrue(2462) into MethodInvocation(2466) at 0", "Insert MethodInvocation(2465) into MethodInvocation(2466) at 1", "Insert SimpleType: Double(2469) into ArrayType: Double[](2471) at 0", "Insert Dimension(2470) into ArrayType: Double[](2471) at 1", "Insert SimpleName: doubleArr(2472) into VariableDeclarationFragment(2479) at 0", "Insert ArrayCreation(2478) into VariableDeclarationFragment(2479) at 1", "Insert ArrayAccess(2483) into Assignment: =(2485) at 0", "Insert NumberLiteral: 64.87d(2484) into Assignment: =(2485) at 1", "Insert SimpleName: Double(2487) into SimpleType: Double(2488) at 0", "Insert SimpleName: result(2489) into VariableDeclarationFragment(2494) at 0", "Insert MethodInvocation(2493) into VariableDeclarationFragment(2494) at 1", "Insert SimpleName: assertEquals(2496) into MethodInvocation(2501) at 0", "Insert SimpleName: result(2497) into MethodInvocation(2501) at 1", "Insert ArrayAccess(2500) into MethodInvocation(2501) at 2", "Insert SimpleName: assertFalse(2503) into MethodInvocation(2507) at 0", "Insert MethodInvocation(2506) into MethodInvocation(2507) at 1", "Insert SimpleName: conn(2510) into InfixExpression: !=(2512) at 0", "Insert NullLiteral(2511) into InfixExpression: !=(2512) at 1", "Insert ExpressionStatement(2516) into Block(2517) at 0", "Insert SimpleName: createSimpleTableWithArray(2561) into MethodInvocation(2571) at 0", "Insert MethodInvocation(2563) into MethodInvocation(2571) at 1", "Insert MethodInvocation(2566) into MethodInvocation(2571) at 2", "Insert NullLiteral(2567) into MethodInvocation(2571) at 3", "Insert InfixExpression: -(2570) into MethodInvocation(2571) at 4", "Insert SimpleName: initSimpleArrayTable(2573) into MethodInvocation(2578) at 0", "Insert SimpleName: tenantId(2574) into MethodInvocation(2578) at 1", "Insert NullLiteral(2575) into MethodInvocation(2578) at 2", "Insert SimpleName: ts(2576) into MethodInvocation(2578) at 3", "Insert BooleanLiteral: false(2577) into MethodInvocation(2578) at 4", "Insert SimpleName: Properties(2580) into SimpleType: Properties(2581) at 0", "Insert SimpleName: props(2582) into VariableDeclarationFragment(2587) at 0", "Insert ClassInstanceCreation(2586) into VariableDeclarationFragment(2587) at 1", "Insert SimpleName: props(2589) into MethodInvocation(2598) at 0", "Insert SimpleName: setProperty(2590) into MethodInvocation(2598) at 1", "Insert QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB(2591) into MethodInvocation(2598) at 2", "Insert MethodInvocation(2597) into MethodInvocation(2598) at 3", "Insert SimpleName: conn(2600) into Assignment: =(2607) at 0", "Insert MethodInvocation(2606) into Assignment: =(2607) at 1", "Insert SimpleName: String(2609) into SimpleType: String(2610) at 0", "Insert SimpleName: query(2611) into VariableDeclarationFragment(2616) at 0", "Insert InfixExpression: +(2615) into VariableDeclarationFragment(2616) at 1", "Insert SimpleName: PreparedStatement(2618) into SimpleType: PreparedStatement(2619) at 0", "Insert SimpleName: statement(2620) into VariableDeclarationFragment(2625) at 0", "Insert MethodInvocation(2624) into VariableDeclarationFragment(2625) at 1", "Insert SimpleName: ResultSet(2627) into SimpleType: ResultSet(2628) at 0", "Insert SimpleName: rs(2629) into VariableDeclarationFragment(2633) at 0", "Insert MethodInvocation(2632) into VariableDeclarationFragment(2633) at 1", "Insert SimpleName: assertTrue(2635) into MethodInvocation(2639) at 0", "Insert MethodInvocation(2638) into MethodInvocation(2639) at 1", "Insert SimpleType: Double(2642) into ArrayType: Double[](2644) at 0", "Insert Dimension(2643) into ArrayType: Double[](2644) at 1", "Insert SimpleName: doubleArr(2645) into VariableDeclarationFragment(2652) at 0", "Insert ArrayCreation(2651) into VariableDeclarationFragment(2652) at 1", "Insert ArrayAccess(2656) into Assignment: =(2658) at 0", "Insert NumberLiteral: 64.87d(2657) into Assignment: =(2658) at 1", "Insert SimpleName: Double(2660) into SimpleType: Double(2661) at 0", "Insert SimpleName: result(2662) into VariableDeclarationFragment(2667) at 0", "Insert MethodInvocation(2666) into VariableDeclarationFragment(2667) at 1", "Insert SimpleName: assertEquals(2669) into MethodInvocation(2674) at 0", "Insert SimpleName: result(2670) into MethodInvocation(2674) at 1", "Insert ArrayAccess(2673) into MethodInvocation(2674) at 2", "Insert SimpleName: doubleArr(2676) into Assignment: =(2683) at 0", "Insert ArrayCreation(2682) into Assignment: =(2683) at 1", "Insert ArrayAccess(2687) into Assignment: =(2689) at 0", "Insert NumberLiteral: 89.96d(2688) into Assignment: =(2689) at 1", "Insert SimpleName: result(2691) into Assignment: =(2696) at 0", "Insert MethodInvocation(2695) into Assignment: =(2696) at 1", "Insert SimpleName: assertEquals(2698) into MethodInvocation(2703) at 0", "Insert SimpleName: result(2699) into MethodInvocation(2703) at 1", "Insert ArrayAccess(2702) into MethodInvocation(2703) at 2", "Insert SimpleName: conn(2706) into InfixExpression: !=(2708) at 0", "Insert NullLiteral(2707) into InfixExpression: !=(2708) at 1", "Insert ExpressionStatement(2712) into Block(2713) at 0", "Insert SimpleName: ts(2733) into VariableDeclarationFragment(2736) at 0", "Insert MethodInvocation(2735) into VariableDeclarationFragment(2736) at 1", "Insert SimpleName: String(2738) into SimpleType: String(2739) at 0", "Insert SimpleName: tenantId(2740) into VariableDeclarationFragment(2743) at 0", "Insert MethodInvocation(2742) into VariableDeclarationFragment(2743) at 1", "Insert SimpleName: createTableWithArray(2745) into MethodInvocation(2755) at 0", "Insert MethodInvocation(2747) into MethodInvocation(2755) at 1", "Insert MethodInvocation(2750) into MethodInvocation(2755) at 2", "Insert NullLiteral(2751) into MethodInvocation(2755) at 3", "Insert InfixExpression: -(2754) into MethodInvocation(2755) at 4", "Insert SimpleName: initTablesWithArrays(2757) into MethodInvocation(2764) at 0", "Insert SimpleName: tenantId(2758) into MethodInvocation(2764) at 1", "Insert NullLiteral(2759) into MethodInvocation(2764) at 2", "Insert SimpleName: ts(2760) into MethodInvocation(2764) at 3", "Insert BooleanLiteral: false(2761) into MethodInvocation(2764) at 4", "Insert MethodInvocation(2763) into MethodInvocation(2764) at 5", "Insert SimpleName: Properties(2766) into SimpleType: Properties(2767) at 0", "Insert SimpleName: props(2768) into VariableDeclarationFragment(2773) at 0", "Insert ClassInstanceCreation(2772) into VariableDeclarationFragment(2773) at 1", "Insert SimpleName: props(2775) into MethodInvocation(2784) at 0", "Insert SimpleName: setProperty(2776) into MethodInvocation(2784) at 1", "Insert QualifiedName: PhoenixRuntime.CURRENT_SCN_ATTRIB(2777) into MethodInvocation(2784) at 2", "Insert MethodInvocation(2783) into MethodInvocation(2784) at 3", "Insert SimpleName: conn(2786) into Assignment: =(2793) at 0", "Insert MethodInvocation(2792) into Assignment: =(2793) at 1", "Insert SimpleName: String(2795) into SimpleType: String(2796) at 0", "Insert SimpleName: query(2797) into VariableDeclarationFragment(2802) at 0", "Insert InfixExpression: +(2801) into VariableDeclarationFragment(2802) at 1", "Insert SimpleName: PreparedStatement(2804) into SimpleType: PreparedStatement(2805) at 0", "Insert SimpleName: statement(2806) into VariableDeclarationFragment(2811) at 0", "Insert MethodInvocation(2810) into VariableDeclarationFragment(2811) at 1", "Insert SimpleName: ResultSet(2813) into SimpleType: ResultSet(2814) at 0", "Insert SimpleName: rs(2815) into VariableDeclarationFragment(2819) at 0", "Insert MethodInvocation(2818) into VariableDeclarationFragment(2819) at 1", "Insert SimpleName: assertTrue(2821) into MethodInvocation(2825) at 0", "Insert MethodInvocation(2824) into MethodInvocation(2825) at 1", "Insert SimpleType: String(2828) into ArrayType: String[](2830) at 0", "Insert Dimension(2829) into ArrayType: String[](2830) at 1", "Insert SimpleName: strArr(2831) into VariableDeclarationFragment(2838) at 0", "Insert ArrayCreation(2837) into VariableDeclarationFragment(2838) at 1", "Insert ArrayAccess(2842) into Assignment: =(2844) at 0", "Insert StringLiteral: \"ABC\"(2843) into Assignment: =(2844) at 1", "Insert SimpleName: String(2846) into SimpleType: String(2847) at 0", "Insert SimpleName: result(2848) into VariableDeclarationFragment(2853) at 0", "Insert MethodInvocation(2852) into VariableDeclarationFragment(2853) at 1", "Insert SimpleName: assertEquals(2855) into MethodInvocation(2860) at 0", "Insert SimpleName: result(2856) into MethodInvocation(2860) at 1", "Insert ArrayAccess(2859) into MethodInvocation(2860) at 2", "Insert SimpleName: assertFalse(2862) into MethodInvocation(2866) at 0", "Insert MethodInvocation(2865) into MethodInvocation(2866) at 1", "Insert SimpleName: query(2868) into Assignment: =(2873) at 0", "Insert InfixExpression: +(2872) into Assignment: =(2873) at 1", "Insert SimpleName: statement(2875) into Assignment: =(2880) at 0", "Insert MethodInvocation(2879) into Assignment: =(2880) at 1", "Insert SimpleName: rs(2882) into Assignment: =(2886) at 0", "Insert MethodInvocation(2885) into Assignment: =(2886) at 1", "Insert SimpleName: assertTrue(2888) into MethodInvocation(2892) at 0", "Insert MethodInvocation(2891) into MethodInvocation(2892) at 1", "Insert SimpleName: result(2894) into Assignment: =(2899) at 0", "Insert MethodInvocation(2898) into Assignment: =(2899) at 1", "Insert SimpleName: assertEquals(2901) into MethodInvocation(2906) at 0", "Insert SimpleName: result(2902) into MethodInvocation(2906) at 1", "Insert ArrayAccess(2905) into MethodInvocation(2906) at 2", "Insert SimpleName: assertFalse(2908) into MethodInvocation(2912) at 0", "Insert MethodInvocation(2911) into MethodInvocation(2912) at 1", "Insert SimpleName: conn(2915) into InfixExpression: !=(2917) at 0", "Insert NullLiteral(2916) into InfixExpression: !=(2917) at 1", "Insert ExpressionStatement(2921) into Block(2922) at 0", "Insert SimpleName: getUrl(1911) into MethodInvocation(1912) at 0", "Insert SimpleName: getDefaultSplits(1913) into MethodInvocation(1915) at 0", "Insert SimpleName: tenantId(1914) into MethodInvocation(1915) at 1", "Insert SimpleName: ts(1917) into InfixExpression: -(1919) at 0", "Insert NumberLiteral: 2(1918) into InfixExpression: -(1919) at 1", "Insert SimpleType: Properties(1933) into ClassInstanceCreation(1935) at 0", "Insert SimpleName: TEST_PROPERTIES(1934) into ClassInstanceCreation(1935) at 1", "Insert SimpleName: Long(1941) into MethodInvocation(1946) at 0", "Insert SimpleName: toString(1942) into MethodInvocation(1946) at 1", "Insert InfixExpression: +(1945) into MethodInvocation(1946) at 2", "Insert SimpleName: DriverManager(1950) into MethodInvocation(1955) at 0", "Insert SimpleName: getConnection(1951) into MethodInvocation(1955) at 1", "Insert MethodInvocation(1953) into MethodInvocation(1955) at 2", "Insert SimpleName: props(1954) into MethodInvocation(1955) at 3", "Insert StringLiteral: \"SELECT a_double_array[1]  FROM \"(1961) into InfixExpression: +(1964) at 0", "Insert SimpleName: SIMPLE_TABLE_WITH_ARRAY(1962) into InfixExpression: +(1964) at 1", "Insert StringLiteral: \" WHERE a_double_array[2] = 89.96d or a_char_array[0] = 'a'\"(1963) into InfixExpression: +(1964) at 2", "Insert SimpleName: conn(1970) into MethodInvocation(1973) at 0", "Insert SimpleName: prepareStatement(1971) into MethodInvocation(1973) at 1", "Insert SimpleName: query(1972) into MethodInvocation(1973) at 2", "Insert SimpleName: statement(1979) into MethodInvocation(1981) at 0", "Insert SimpleName: executeQuery(1980) into MethodInvocation(1981) at 1", "Insert SimpleName: rs(1985) into MethodInvocation(1987) at 0", "Insert SimpleName: next(1986) into MethodInvocation(1987) at 1", "Insert SimpleName: Double(1990) into SimpleType: Double(1991) at 0", "Insert ArrayType: Double[](1998) into ArrayCreation(2000) at 0", "Insert NumberLiteral: 1(1999) into ArrayCreation(2000) at 1", "Insert SimpleName: doubleArr(2003) into ArrayAccess(2005) at 0", "Insert NumberLiteral: 0(2004) into ArrayAccess(2005) at 1", "Insert SimpleName: rs(2012) into MethodInvocation(2015) at 0", "Insert SimpleName: getDouble(2013) into MethodInvocation(2015) at 1", "Insert NumberLiteral: 1(2014) into MethodInvocation(2015) at 2", "Insert SimpleName: doubleArr(2020) into ArrayAccess(2022) at 0", "Insert NumberLiteral: 0(2021) into ArrayAccess(2022) at 1", "Insert SimpleName: rs(2026) into MethodInvocation(2028) at 0", "Insert SimpleName: next(2027) into MethodInvocation(2028) at 1", "Insert MethodInvocation(2037) into ExpressionStatement(2038) at 0", "Insert SimpleName: getUrl(2084) into MethodInvocation(2085) at 0", "Insert SimpleName: getDefaultSplits(2086) into MethodInvocation(2088) at 0", "Insert SimpleName: tenantId(2087) into MethodInvocation(2088) at 1", "Insert SimpleName: ts(2090) into InfixExpression: -(2092) at 0", "Insert NumberLiteral: 2(2091) into InfixExpression: -(2092) at 1", "Insert SimpleType: Properties(2106) into ClassInstanceCreation(2108) at 0", "Insert SimpleName: TEST_PROPERTIES(2107) into ClassInstanceCreation(2108) at 1", "Insert SimpleName: Long(2114) into MethodInvocation(2119) at 0", "Insert SimpleName: toString(2115) into MethodInvocation(2119) at 1", "Insert InfixExpression: +(2118) into MethodInvocation(2119) at 2", "Insert SimpleName: DriverManager(2123) into MethodInvocation(2128) at 0", "Insert SimpleName: getConnection(2124) into MethodInvocation(2128) at 1", "Insert MethodInvocation(2126) into MethodInvocation(2128) at 2", "Insert SimpleName: props(2127) into MethodInvocation(2128) at 3", "Insert StringLiteral: \"SELECT a_double_array[1]  FROM \"(2134) into InfixExpression: +(2137) at 0", "Insert SimpleName: SIMPLE_TABLE_WITH_ARRAY(2135) into InfixExpression: +(2137) at 1", "Insert StringLiteral: \" WHERE 89.96d = ANY(a_double_array)\"(2136) into InfixExpression: +(2137) at 2", "Insert SimpleName: conn(2143) into MethodInvocation(2146) at 0", "Insert SimpleName: prepareStatement(2144) into MethodInvocation(2146) at 1", "Insert SimpleName: query(2145) into MethodInvocation(2146) at 2", "Insert SimpleName: statement(2152) into MethodInvocation(2154) at 0", "Insert SimpleName: executeQuery(2153) into MethodInvocation(2154) at 1", "Insert SimpleName: rs(2158) into MethodInvocation(2160) at 0", "Insert SimpleName: next(2159) into MethodInvocation(2160) at 1", "Insert SimpleName: Double(2163) into SimpleType: Double(2164) at 0", "Insert ArrayType: Double[](2171) into ArrayCreation(2173) at 0", "Insert NumberLiteral: 1(2172) into ArrayCreation(2173) at 1", "Insert SimpleName: doubleArr(2176) into ArrayAccess(2178) at 0", "Insert NumberLiteral: 0(2177) into ArrayAccess(2178) at 1", "Insert SimpleName: rs(2185) into MethodInvocation(2188) at 0", "Insert SimpleName: getDouble(2186) into MethodInvocation(2188) at 1", "Insert NumberLiteral: 1(2187) into MethodInvocation(2188) at 2", "Insert SimpleName: doubleArr(2193) into ArrayAccess(2195) at 0", "Insert NumberLiteral: 0(2194) into ArrayAccess(2195) at 1", "Insert SimpleName: rs(2199) into MethodInvocation(2201) at 0", "Insert SimpleName: next(2200) into MethodInvocation(2201) at 1", "Insert MethodInvocation(2210) into ExpressionStatement(2211) at 0", "Insert SimpleName: getUrl(2257) into MethodInvocation(2258) at 0", "Insert SimpleName: getDefaultSplits(2259) into MethodInvocation(2261) at 0", "Insert SimpleName: tenantId(2260) into MethodInvocation(2261) at 1", "Insert SimpleName: ts(2263) into InfixExpression: -(2265) at 0", "Insert NumberLiteral: 2(2264) into InfixExpression: -(2265) at 1", "Insert SimpleType: Properties(2279) into ClassInstanceCreation(2281) at 0", "Insert SimpleName: TEST_PROPERTIES(2280) into ClassInstanceCreation(2281) at 1", "Insert SimpleName: Long(2287) into MethodInvocation(2292) at 0", "Insert SimpleName: toString(2288) into MethodInvocation(2292) at 1", "Insert InfixExpression: +(2291) into MethodInvocation(2292) at 2", "Insert SimpleName: DriverManager(2296) into MethodInvocation(2301) at 0", "Insert SimpleName: getConnection(2297) into MethodInvocation(2301) at 1", "Insert MethodInvocation(2299) into MethodInvocation(2301) at 2", "Insert SimpleName: props(2300) into MethodInvocation(2301) at 3", "Insert StringLiteral: \"SELECT a_double_array[1]  FROM \"(2307) into InfixExpression: +(2310) at 0", "Insert SimpleName: SIMPLE_TABLE_WITH_ARRAY(2308) into InfixExpression: +(2310) at 1", "Insert StringLiteral: \" WHERE 64.87d = ALL(a_double_array)\"(2309) into InfixExpression: +(2310) at 2", "Insert SimpleName: conn(2316) into MethodInvocation(2319) at 0", "Insert SimpleName: prepareStatement(2317) into MethodInvocation(2319) at 1", "Insert SimpleName: query(2318) into MethodInvocation(2319) at 2", "Insert SimpleName: statement(2325) into MethodInvocation(2327) at 0", "Insert SimpleName: executeQuery(2326) into MethodInvocation(2327) at 1", "Insert SimpleName: rs(2331) into MethodInvocation(2333) at 0", "Insert SimpleName: next(2332) into MethodInvocation(2333) at 1", "Insert MethodInvocation(2342) into ExpressionStatement(2343) at 0", "Insert SimpleName: getUrl(2389) into MethodInvocation(2390) at 0", "Insert SimpleName: getDefaultSplits(2391) into MethodInvocation(2393) at 0", "Insert SimpleName: tenantId(2392) into MethodInvocation(2393) at 1", "Insert SimpleName: ts(2395) into InfixExpression: -(2397) at 0", "Insert NumberLiteral: 2(2396) into InfixExpression: -(2397) at 1", "Insert SimpleType: Properties(2411) into ClassInstanceCreation(2413) at 0", "Insert SimpleName: TEST_PROPERTIES(2412) into ClassInstanceCreation(2413) at 1", "Insert SimpleName: Long(2419) into MethodInvocation(2424) at 0", "Insert SimpleName: toString(2420) into MethodInvocation(2424) at 1", "Insert InfixExpression: +(2423) into MethodInvocation(2424) at 2", "Insert SimpleName: DriverManager(2428) into MethodInvocation(2433) at 0", "Insert SimpleName: getConnection(2429) into MethodInvocation(2433) at 1", "Insert MethodInvocation(2431) into MethodInvocation(2433) at 2", "Insert SimpleName: props(2432) into MethodInvocation(2433) at 3", "Insert StringLiteral: \"SELECT a_double_array[1]  FROM \"(2439) into InfixExpression: +(2442) at 0", "Insert SimpleName: SIMPLE_TABLE_WITH_ARRAY(2440) into InfixExpression: +(2442) at 1", "Insert StringLiteral: \" WHERE  a_char_array[0] = 'f' or 89.96d > ANY(a_double_array)\"(2441) into InfixExpression: +(2442) at 2", "Insert SimpleName: conn(2448) into MethodInvocation(2451) at 0", "Insert SimpleName: prepareStatement(2449) into MethodInvocation(2451) at 1", "Insert SimpleName: query(2450) into MethodInvocation(2451) at 2", "Insert SimpleName: statement(2457) into MethodInvocation(2459) at 0", "Insert SimpleName: executeQuery(2458) into MethodInvocation(2459) at 1", "Insert SimpleName: rs(2463) into MethodInvocation(2465) at 0", "Insert SimpleName: next(2464) into MethodInvocation(2465) at 1", "Insert SimpleName: Double(2468) into SimpleType: Double(2469) at 0", "Insert ArrayType: Double[](2476) into ArrayCreation(2478) at 0", "Insert NumberLiteral: 1(2477) into ArrayCreation(2478) at 1", "Insert SimpleName: doubleArr(2481) into ArrayAccess(2483) at 0", "Insert NumberLiteral: 0(2482) into ArrayAccess(2483) at 1", "Insert SimpleName: rs(2490) into MethodInvocation(2493) at 0", "Insert SimpleName: getDouble(2491) into MethodInvocation(2493) at 1", "Insert NumberLiteral: 1(2492) into MethodInvocation(2493) at 2", "Insert SimpleName: doubleArr(2498) into ArrayAccess(2500) at 0", "Insert NumberLiteral: 0(2499) into ArrayAccess(2500) at 1", "Insert SimpleName: rs(2504) into MethodInvocation(2506) at 0", "Insert SimpleName: next(2505) into MethodInvocation(2506) at 1", "Insert MethodInvocation(2515) into ExpressionStatement(2516) at 0", "Insert SimpleName: getUrl(2562) into MethodInvocation(2563) at 0", "Insert SimpleName: getDefaultSplits(2564) into MethodInvocation(2566) at 0", "Insert SimpleName: tenantId(2565) into MethodInvocation(2566) at 1", "Insert SimpleName: ts(2568) into InfixExpression: -(2570) at 0", "Insert NumberLiteral: 2(2569) into InfixExpression: -(2570) at 1", "Insert SimpleType: Properties(2584) into ClassInstanceCreation(2586) at 0", "Insert SimpleName: TEST_PROPERTIES(2585) into ClassInstanceCreation(2586) at 1", "Insert SimpleName: Long(2592) into MethodInvocation(2597) at 0", "Insert SimpleName: toString(2593) into MethodInvocation(2597) at 1", "Insert InfixExpression: +(2596) into MethodInvocation(2597) at 2", "Insert SimpleName: DriverManager(2601) into MethodInvocation(2606) at 0", "Insert SimpleName: getConnection(2602) into MethodInvocation(2606) at 1", "Insert MethodInvocation(2604) into MethodInvocation(2606) at 2", "Insert SimpleName: props(2605) into MethodInvocation(2606) at 3", "Insert StringLiteral: \"SELECT a_double_array[1], a_double_array[2]  FROM \"(2612) into InfixExpression: +(2615) at 0", "Insert SimpleName: SIMPLE_TABLE_WITH_ARRAY(2613) into InfixExpression: +(2615) at 1", "Insert StringLiteral: \" WHERE  a_char_array[0] = 'f' or 100.0d > ALL(a_double_array)\"(2614) into InfixExpression: +(2615) at 2", "Insert SimpleName: conn(2621) into MethodInvocation(2624) at 0", "Insert SimpleName: prepareStatement(2622) into MethodInvocation(2624) at 1", "Insert SimpleName: query(2623) into MethodInvocation(2624) at 2", "Insert SimpleName: statement(2630) into MethodInvocation(2632) at 0", "Insert SimpleName: executeQuery(2631) into MethodInvocation(2632) at 1", "Insert SimpleName: rs(2636) into MethodInvocation(2638) at 0", "Insert SimpleName: next(2637) into MethodInvocation(2638) at 1", "Insert SimpleName: Double(2641) into SimpleType: Double(2642) at 0", "Insert ArrayType: Double[](2649) into ArrayCreation(2651) at 0", "Insert NumberLiteral: 1(2650) into ArrayCreation(2651) at 1", "Insert SimpleName: doubleArr(2654) into ArrayAccess(2656) at 0", "Insert NumberLiteral: 0(2655) into ArrayAccess(2656) at 1", "Insert SimpleName: rs(2663) into MethodInvocation(2666) at 0", "Insert SimpleName: getDouble(2664) into MethodInvocation(2666) at 1", "Insert NumberLiteral: 1(2665) into MethodInvocation(2666) at 2", "Insert SimpleName: doubleArr(2671) into ArrayAccess(2673) at 0", "Insert NumberLiteral: 0(2672) into ArrayAccess(2673) at 1", "Insert ArrayType: Double[](2680) into ArrayCreation(2682) at 0", "Insert NumberLiteral: 1(2681) into ArrayCreation(2682) at 1", "Insert SimpleName: doubleArr(2685) into ArrayAccess(2687) at 0", "Insert NumberLiteral: 0(2686) into ArrayAccess(2687) at 1", "Insert SimpleName: rs(2692) into MethodInvocation(2695) at 0", "Insert SimpleName: getDouble(2693) into MethodInvocation(2695) at 1", "Insert NumberLiteral: 2(2694) into MethodInvocation(2695) at 2", "Insert SimpleName: doubleArr(2700) into ArrayAccess(2702) at 0", "Insert NumberLiteral: 0(2701) into ArrayAccess(2702) at 1", "Insert MethodInvocation(2711) into ExpressionStatement(2712) at 0", "Insert SimpleName: nextTimestamp(2734) into MethodInvocation(2735) at 0", "Insert SimpleName: getOrganizationId(2741) into MethodInvocation(2742) at 0", "Insert SimpleName: getUrl(2746) into MethodInvocation(2747) at 0", "Insert SimpleName: getDefaultSplits(2748) into MethodInvocation(2750) at 0", "Insert SimpleName: tenantId(2749) into MethodInvocation(2750) at 1", "Insert SimpleName: ts(2752) into InfixExpression: -(2754) at 0", "Insert NumberLiteral: 2(2753) into InfixExpression: -(2754) at 1", "Insert SimpleName: getUrl(2762) into MethodInvocation(2763) at 0", "Insert SimpleType: Properties(2770) into ClassInstanceCreation(2772) at 0", "Insert SimpleName: TEST_PROPERTIES(2771) into ClassInstanceCreation(2772) at 1", "Insert SimpleName: Long(2778) into MethodInvocation(2783) at 0", "Insert SimpleName: toString(2779) into MethodInvocation(2783) at 1", "Insert InfixExpression: +(2782) into MethodInvocation(2783) at 2", "Insert SimpleName: DriverManager(2787) into MethodInvocation(2792) at 0", "Insert SimpleName: getConnection(2788) into MethodInvocation(2792) at 1", "Insert MethodInvocation(2790) into MethodInvocation(2792) at 2", "Insert SimpleName: props(2791) into MethodInvocation(2792) at 3", "Insert StringLiteral: \"SELECT a_string_array[1]  FROM \"(2798) into InfixExpression: +(2801) at 0", "Insert SimpleName: TABLE_WITH_ARRAY(2799) into InfixExpression: +(2801) at 1", "Insert StringLiteral: \" WHERE 'XYZWER' = ANY(a_string_array)\"(2800) into InfixExpression: +(2801) at 2", "Insert SimpleName: conn(2807) into MethodInvocation(2810) at 0", "Insert SimpleName: prepareStatement(2808) into MethodInvocation(2810) at 1", "Insert SimpleName: query(2809) into MethodInvocation(2810) at 2", "Insert SimpleName: statement(2816) into MethodInvocation(2818) at 0", "Insert SimpleName: executeQuery(2817) into MethodInvocation(2818) at 1", "Insert SimpleName: rs(2822) into MethodInvocation(2824) at 0", "Insert SimpleName: next(2823) into MethodInvocation(2824) at 1", "Insert SimpleName: String(2827) into SimpleType: String(2828) at 0", "Insert ArrayType: String[](2835) into ArrayCreation(2837) at 0", "Insert NumberLiteral: 1(2836) into ArrayCreation(2837) at 1", "Insert SimpleName: strArr(2840) into ArrayAccess(2842) at 0", "Insert NumberLiteral: 0(2841) into ArrayAccess(2842) at 1", "Insert SimpleName: rs(2849) into MethodInvocation(2852) at 0", "Insert SimpleName: getString(2850) into MethodInvocation(2852) at 1", "Insert NumberLiteral: 1(2851) into MethodInvocation(2852) at 2", "Insert SimpleName: strArr(2857) into ArrayAccess(2859) at 0", "Insert NumberLiteral: 0(2858) into ArrayAccess(2859) at 1", "Insert SimpleName: rs(2863) into MethodInvocation(2865) at 0", "Insert SimpleName: next(2864) into MethodInvocation(2865) at 1", "Insert StringLiteral: \"SELECT a_string_array[1]  FROM \"(2869) into InfixExpression: +(2872) at 0", "Insert SimpleName: TABLE_WITH_ARRAY(2870) into InfixExpression: +(2872) at 1", "Insert StringLiteral: \" WHERE 'AB' = ANY(a_string_array)\"(2871) into InfixExpression: +(2872) at 2", "Insert SimpleName: conn(2876) into MethodInvocation(2879) at 0", "Insert SimpleName: prepareStatement(2877) into MethodInvocation(2879) at 1", "Insert SimpleName: query(2878) into MethodInvocation(2879) at 2", "Insert SimpleName: statement(2883) into MethodInvocation(2885) at 0", "Insert SimpleName: executeQuery(2884) into MethodInvocation(2885) at 1", "Insert SimpleName: rs(2889) into MethodInvocation(2891) at 0", "Insert SimpleName: next(2890) into MethodInvocation(2891) at 1", "Insert SimpleName: rs(2895) into MethodInvocation(2898) at 0", "Insert SimpleName: getString(2896) into MethodInvocation(2898) at 1", "Insert NumberLiteral: 1(2897) into MethodInvocation(2898) at 2", "Insert SimpleName: strArr(2903) into ArrayAccess(2905) at 0", "Insert NumberLiteral: 0(2904) into ArrayAccess(2905) at 1", "Insert SimpleName: rs(2909) into MethodInvocation(2911) at 0", "Insert SimpleName: next(2910) into MethodInvocation(2911) at 1", "Insert MethodInvocation(2920) into ExpressionStatement(2921) at 0", "Insert SimpleName: Properties(1932) into SimpleType: Properties(1933) at 0", "Insert SimpleName: ts(1943) into InfixExpression: +(1945) at 0", "Insert NumberLiteral: 2(1944) into InfixExpression: +(1945) at 1", "Insert SimpleName: getUrl(1952) into MethodInvocation(1953) at 0", "Insert SimpleType: Double(1996) into ArrayType: Double[](1998) at 0", "Insert Dimension(1997) into ArrayType: Double[](1998) at 1", "Insert SimpleName: conn(2035) into MethodInvocation(2037) at 0", "Insert SimpleName: close(2036) into MethodInvocation(2037) at 1", "Insert SimpleName: Properties(2105) into SimpleType: Properties(2106) at 0", "Insert SimpleName: ts(2116) into InfixExpression: +(2118) at 0", "Insert NumberLiteral: 2(2117) into InfixExpression: +(2118) at 1", "Insert SimpleName: getUrl(2125) into MethodInvocation(2126) at 0", "Insert SimpleType: Double(2169) into ArrayType: Double[](2171) at 0", "Insert Dimension(2170) into ArrayType: Double[](2171) at 1", "Insert SimpleName: conn(2208) into MethodInvocation(2210) at 0", "Insert SimpleName: close(2209) into MethodInvocation(2210) at 1", "Insert SimpleName: Properties(2278) into SimpleType: Properties(2279) at 0", "Insert SimpleName: ts(2289) into InfixExpression: +(2291) at 0", "Insert NumberLiteral: 2(2290) into InfixExpression: +(2291) at 1", "Insert SimpleName: getUrl(2298) into MethodInvocation(2299) at 0", "Insert SimpleName: conn(2340) into MethodInvocation(2342) at 0", "Insert SimpleName: close(2341) into MethodInvocation(2342) at 1", "Insert SimpleName: Properties(2410) into SimpleType: Properties(2411) at 0", "Insert SimpleName: ts(2421) into InfixExpression: +(2423) at 0", "Insert NumberLiteral: 2(2422) into InfixExpression: +(2423) at 1", "Insert SimpleName: getUrl(2430) into MethodInvocation(2431) at 0", "Insert SimpleType: Double(2474) into ArrayType: Double[](2476) at 0", "Insert Dimension(2475) into ArrayType: Double[](2476) at 1", "Insert SimpleName: conn(2513) into MethodInvocation(2515) at 0", "Insert SimpleName: close(2514) into MethodInvocation(2515) at 1", "Insert SimpleName: Properties(2583) into SimpleType: Properties(2584) at 0", "Insert SimpleName: ts(2594) into InfixExpression: +(2596) at 0", "Insert NumberLiteral: 2(2595) into InfixExpression: +(2596) at 1", "Insert SimpleName: getUrl(2603) into MethodInvocation(2604) at 0", "Insert SimpleType: Double(2647) into ArrayType: Double[](2649) at 0", "Insert Dimension(2648) into ArrayType: Double[](2649) at 1", "Insert SimpleType: Double(2678) into ArrayType: Double[](2680) at 0", "Insert Dimension(2679) into ArrayType: Double[](2680) at 1", "Insert SimpleName: conn(2709) into MethodInvocation(2711) at 0", "Insert SimpleName: close(2710) into MethodInvocation(2711) at 1", "Insert SimpleName: Properties(2769) into SimpleType: Properties(2770) at 0", "Insert SimpleName: ts(2780) into InfixExpression: +(2782) at 0", "Insert NumberLiteral: 2(2781) into InfixExpression: +(2782) at 1", "Insert SimpleName: getUrl(2789) into MethodInvocation(2790) at 0", "Insert SimpleType: String(2833) into ArrayType: String[](2835) at 0", "Insert Dimension(2834) into ArrayType: String[](2835) at 1", "Insert SimpleName: conn(2918) into MethodInvocation(2920) at 0", "Insert SimpleName: close(2919) into MethodInvocation(2920) at 1", "Insert SimpleName: Double(1995) into SimpleType: Double(1996) at 0", "Insert SimpleName: Double(2168) into SimpleType: Double(2169) at 0", "Insert SimpleName: Double(2473) into SimpleType: Double(2474) at 0", "Insert SimpleName: Double(2646) into SimpleType: Double(2647) at 0", "Insert SimpleName: Double(2677) into SimpleType: Double(2678) at 0", "Insert SimpleName: String(2832) into SimpleType: String(2833) at 0"]}}, {"ExpressionCompiler_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 44", "operations": ["INS QualifiedName: org.apache.phoenix.expression.function.ArrayAllComparisonExpression to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 44"]}, {"root": "INS ImportDeclaration to CompilationUnit at 45", "operations": ["INS QualifiedName: org.apache.phoenix.expression.function.ArrayAnyComparisonExpression to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 45"]}, {"root": "INS ImportDeclaration to CompilationUnit at 46", "operations": ["INS ImportDeclaration to CompilationUnit at 46", "INS QualifiedName: org.apache.phoenix.expression.function.InlineArrayElemRefExpression to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 50", "operations": ["INS QualifiedName: org.apache.phoenix.parse.ArrayAllComparisonNode to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 50"]}, {"root": "INS ImportDeclaration to CompilationUnit at 51", "operations": ["INS ImportDeclaration to CompilationUnit at 51", "INS QualifiedName: org.apache.phoenix.parse.ArrayAnyComparisonNode to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 53", "operations": ["INS ImportDeclaration to CompilationUnit at 53", "INS QualifiedName: org.apache.phoenix.parse.ArrayElemRefNode to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 58", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: ArrayAnyComparisonNode to SimpleType: ArrayAnyComparisonNode at 0", "INS ReturnStatement to Block at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS Block to MethodDeclaration at 6", "INS SimpleType: SQLException to MethodDeclaration at 5", "INS MethodDeclaration to TypeDeclaration: class at 58", "INS SimpleName: visitEnter to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: ArrayAnyComparisonNode to SingleVariableDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 59", "operations": ["INS Block to MethodDeclaration at 7", "INS SimpleType: List to ParameterizedType: List<Expression> at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: visitLeave to MethodDeclaration at 3", "INS SimpleType: Expression to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: Expression to SimpleType: Expression at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: ArrayAnyComparisonNode to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 59", "INS ParameterizedType: List<Expression> to SingleVariableDeclaration at 0", "INS SimpleType: Expression to ParameterizedType: List<Expression> at 1", "INS SimpleName: ArrayAnyComparisonExpression to SimpleType: ArrayAnyComparisonExpression at 0", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleName: ArrayAnyComparisonNode to SimpleType: ArrayAnyComparisonNode at 0", "INS SimpleName: Expression to SimpleType: Expression at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: children to ClassInstanceCreation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: ArrayAnyComparisonExpression to ClassInstanceCreation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: children to SingleVariableDeclaration at 1", "INS SimpleType: SQLException to MethodDeclaration at 6", "INS SimpleName: List to SimpleType: List at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 60", "operations": ["INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: visitEnter to MethodDeclaration at 3", "INS Block to MethodDeclaration at 6", "INS SimpleType: SQLException to MethodDeclaration at 5", "INS MethodDeclaration to TypeDeclaration: class at 60", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: ArrayAllComparisonNode to SingleVariableDeclaration at 0", "INS SimpleName: ArrayAllComparisonNode to SimpleType: ArrayAllComparisonNode at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS BooleanLiteral: true to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 61", "operations": ["INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleType: ArrayElemRefNode to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 61", "INS SimpleType: SQLException to MethodDeclaration at 5", "INS SimpleName: visitEnter to MethodDeclaration at 3", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS ReturnStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 6", "INS MarkerAnnotation to MethodDeclaration at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: ArrayElemRefNode to SimpleType: ArrayElemRefNode at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 62", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: ArrayElemRefNode to SingleVariableDeclaration at 0", "INS SimpleType: Expression to ParameterizedType: List<Expression> at 1", "INS SimpleType: SQLException to MethodDeclaration at 6", "INS SimpleName: Expression to SimpleType: Expression at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 62", "INS SimpleName: InlineArrayElemRefExpression to SimpleType: InlineArrayElemRefExpression at 0", "INS SimpleName: ArrayElemRefNode to SimpleType: ArrayElemRefNode at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: visitLeave to MethodDeclaration at 3", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: l to SingleVariableDeclaration at 1", "INS SimpleType: List to ParameterizedType: List<Expression> at 0", "INS SimpleType: InlineArrayElemRefExpression to ClassInstanceCreation at 0", "INS SimpleType: Expression to MethodDeclaration at 2", "INS SimpleName: l to ClassInstanceCreation at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: Expression to SimpleType: Expression at 0", "INS ParameterizedType: List<Expression> to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 7", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 63", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: Expression to SimpleType: Expression at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: Expression to ParameterizedType: List<Expression> at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleType: ArrayAllComparisonExpression to ClassInstanceCreation at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: children to ClassInstanceCreation at 1", "INS SimpleType: Expression to MethodDeclaration at 2", "INS SimpleName: children to SingleVariableDeclaration at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: visitLeave to MethodDeclaration at 3", "INS SimpleName: ArrayAllComparisonNode to SimpleType: ArrayAllComparisonNode at 0", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleType: SQLException to MethodDeclaration at 6", "INS SimpleName: ArrayAllComparisonExpression to SimpleType: ArrayAllComparisonExpression at 0", "INS MethodDeclaration to TypeDeclaration: class at 63", "INS Block to MethodDeclaration at 7", "INS ParameterizedType: List<Expression> to SingleVariableDeclaration at 0", "INS SimpleType: List to ParameterizedType: List<Expression> at 0", "INS SimpleName: Expression to SimpleType: Expression at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: ArrayAllComparisonNode to SingleVariableDeclaration at 0"]}]}}, {"ExpressionCompiler_diff": {"operations": ["Insert ImportDeclaration(89) into CompilationUnit(5293) at 44", "Insert ImportDeclaration(91) into CompilationUnit(5293) at 45", "Insert ImportDeclaration(93) into CompilationUnit(5293) at 46", "Insert ImportDeclaration(101) into CompilationUnit(5293) at 50", "Insert ImportDeclaration(103) into CompilationUnit(5293) at 51", "Insert ImportDeclaration(107) into CompilationUnit(5293) at 53", "Insert QualifiedName: org.apache.phoenix.expression.function.ArrayAllComparisonExpression(88) into ImportDeclaration(89) at 0", "Insert QualifiedName: org.apache.phoenix.expression.function.ArrayAnyComparisonExpression(90) into ImportDeclaration(91) at 0", "Insert QualifiedName: org.apache.phoenix.expression.function.InlineArrayElemRefExpression(92) into ImportDeclaration(93) at 0", "Insert QualifiedName: org.apache.phoenix.parse.ArrayAllComparisonNode(100) into ImportDeclaration(101) at 0", "Insert QualifiedName: org.apache.phoenix.parse.ArrayAnyComparisonNode(102) into ImportDeclaration(103) at 0", "Insert QualifiedName: org.apache.phoenix.parse.ArrayElemRefNode(106) into ImportDeclaration(107) at 0", "Insert MethodDeclaration(4264) into TypeDeclaration: class(5292) at 58", "Insert MethodDeclaration(4290) into TypeDeclaration: class(5292) at 59", "Insert MethodDeclaration(4305) into TypeDeclaration: class(5292) at 60", "Insert MethodDeclaration(4320) into TypeDeclaration: class(5292) at 61", "Insert MethodDeclaration(4346) into TypeDeclaration: class(5292) at 62", "Insert MethodDeclaration(4372) into TypeDeclaration: class(5292) at 63", "Insert MarkerAnnotation(4251) into MethodDeclaration(4264) at 0", "Insert Modifier: public(4252) into MethodDeclaration(4264) at 1", "Insert PrimitiveType: boolean(4253) into MethodDeclaration(4264) at 2", "Insert SimpleName: visitEnter(4254) into MethodDeclaration(4264) at 3", "Insert SingleVariableDeclaration(4258) into MethodDeclaration(4264) at 4", "Insert SimpleType: SQLException(4260) into MethodDeclaration(4264) at 5", "Insert Block(4263) into MethodDeclaration(4264) at 6", "Insert MarkerAnnotation(4266) into MethodDeclaration(4290) at 0", "Insert Modifier: public(4267) into MethodDeclaration(4290) at 1", "Insert SimpleType: Expression(4269) into MethodDeclaration(4290) at 2", "Insert SimpleName: visitLeave(4270) into MethodDeclaration(4290) at 3", "Insert SingleVariableDeclaration(4274) into MethodDeclaration(4290) at 4", "Insert SingleVariableDeclaration(4281) into MethodDeclaration(4290) at 5", "Insert SimpleType: SQLException(4283) into MethodDeclaration(4290) at 6", "Insert Block(4289) into MethodDeclaration(4290) at 7", "Insert MarkerAnnotation(4292) into MethodDeclaration(4305) at 0", "Insert Modifier: public(4293) into MethodDeclaration(4305) at 1", "Insert PrimitiveType: boolean(4294) into MethodDeclaration(4305) at 2", "Insert SimpleName: visitEnter(4295) into MethodDeclaration(4305) at 3", "Insert SingleVariableDeclaration(4299) into MethodDeclaration(4305) at 4", "Insert SimpleType: SQLException(4301) into MethodDeclaration(4305) at 5", "Insert Block(4304) into MethodDeclaration(4305) at 6", "Insert MarkerAnnotation(4307) into MethodDeclaration(4320) at 0", "Insert Modifier: public(4308) into MethodDeclaration(4320) at 1", "Insert PrimitiveType: boolean(4309) into MethodDeclaration(4320) at 2", "Insert SimpleName: visitEnter(4310) into MethodDeclaration(4320) at 3", "Insert SingleVariableDeclaration(4314) into MethodDeclaration(4320) at 4", "Insert SimpleType: SQLException(4316) into MethodDeclaration(4320) at 5", "Insert Block(4319) into MethodDeclaration(4320) at 6", "Insert MarkerAnnotation(4322) into MethodDeclaration(4346) at 0", "Insert Modifier: public(4323) into MethodDeclaration(4346) at 1", "Insert SimpleType: Expression(4325) into MethodDeclaration(4346) at 2", "Insert SimpleName: visitLeave(4326) into MethodDeclaration(4346) at 3", "Insert SingleVariableDeclaration(4330) into MethodDeclaration(4346) at 4", "Insert SingleVariableDeclaration(4337) into MethodDeclaration(4346) at 5", "Insert SimpleType: SQLException(4339) into MethodDeclaration(4346) at 6", "Insert Block(4345) into MethodDeclaration(4346) at 7", "Insert MarkerAnnotation(4348) into MethodDeclaration(4372) at 0", "Insert Modifier: public(4349) into MethodDeclaration(4372) at 1", "Insert SimpleType: Expression(4351) into MethodDeclaration(4372) at 2", "Insert SimpleName: visitLeave(4352) into MethodDeclaration(4372) at 3", "Insert SingleVariableDeclaration(4356) into MethodDeclaration(4372) at 4", "Insert SingleVariableDeclaration(4363) into MethodDeclaration(4372) at 5", "Insert SimpleType: SQLException(4365) into MethodDeclaration(4372) at 6", "Insert Block(4371) into MethodDeclaration(4372) at 7", "Insert SimpleName: Override(4250) into MarkerAnnotation(4251) at 0", "Insert SimpleType: ArrayAnyComparisonNode(4256) into SingleVariableDeclaration(4258) at 0", "Insert SimpleName: node(4257) into SingleVariableDeclaration(4258) at 1", "Insert SimpleName: SQLException(4259) into SimpleType: SQLException(4260) at 0", "Insert ReturnStatement(4262) into Block(4263) at 0", "Insert SimpleName: Override(4265) into MarkerAnnotation(4266) at 0", "Insert SimpleName: Expression(4268) into SimpleType: Expression(4269) at 0", "Insert SimpleType: ArrayAnyComparisonNode(4272) into SingleVariableDeclaration(4274) at 0", "Insert SimpleName: node(4273) into SingleVariableDeclaration(4274) at 1", "Insert ParameterizedType: List<Expression>(4279) into SingleVariableDeclaration(4281) at 0", "Insert SimpleName: children(4280) into SingleVariableDeclaration(4281) at 1", "Insert SimpleName: SQLException(4282) into SimpleType: SQLException(4283) at 0", "Insert ReturnStatement(4288) into Block(4289) at 0", "Insert SimpleName: Override(4291) into MarkerAnnotation(4292) at 0", "Insert SimpleType: ArrayAllComparisonNode(4297) into SingleVariableDeclaration(4299) at 0", "Insert SimpleName: node(4298) into SingleVariableDeclaration(4299) at 1", "Insert SimpleName: SQLException(4300) into SimpleType: SQLException(4301) at 0", "Insert ReturnStatement(4303) into Block(4304) at 0", "Insert SimpleName: Override(4306) into MarkerAnnotation(4307) at 0", "Insert SimpleType: ArrayElemRefNode(4312) into SingleVariableDeclaration(4314) at 0", "Insert SimpleName: node(4313) into SingleVariableDeclaration(4314) at 1", "Insert SimpleName: SQLException(4315) into SimpleType: SQLException(4316) at 0", "Insert ReturnStatement(4318) into Block(4319) at 0", "Insert SimpleName: Override(4321) into MarkerAnnotation(4322) at 0", "Insert SimpleName: Expression(4324) into SimpleType: Expression(4325) at 0", "Insert SimpleType: ArrayElemRefNode(4328) into SingleVariableDeclaration(4330) at 0", "Insert SimpleName: node(4329) into SingleVariableDeclaration(4330) at 1", "Insert ParameterizedType: List<Expression>(4335) into SingleVariableDeclaration(4337) at 0", "Insert SimpleName: l(4336) into SingleVariableDeclaration(4337) at 1", "Insert SimpleName: SQLException(4338) into SimpleType: SQLException(4339) at 0", "Insert ReturnStatement(4344) into Block(4345) at 0", "Insert SimpleName: Override(4347) into MarkerAnnotation(4348) at 0", "Insert SimpleName: Expression(4350) into SimpleType: Expression(4351) at 0", "Insert SimpleType: ArrayAllComparisonNode(4354) into SingleVariableDeclaration(4356) at 0", "Insert SimpleName: node(4355) into SingleVariableDeclaration(4356) at 1", "Insert ParameterizedType: List<Expression>(4361) into SingleVariableDeclaration(4363) at 0", "Insert SimpleName: children(4362) into SingleVariableDeclaration(4363) at 1", "Insert SimpleName: SQLException(4364) into SimpleType: SQLException(4365) at 0", "Insert ReturnStatement(4370) into Block(4371) at 0", "Insert SimpleName: ArrayAnyComparisonNode(4255) into SimpleType: ArrayAnyComparisonNode(4256) at 0", "Insert BooleanLiteral: true(4261) into ReturnStatement(4262) at 0", "Insert SimpleName: ArrayAnyComparisonNode(4271) into SimpleType: ArrayAnyComparisonNode(4272) at 0", "Insert SimpleType: List(4276) into ParameterizedType: List<Expression>(4279) at 0", "Insert SimpleType: Expression(4278) into ParameterizedType: List<Expression>(4279) at 1", "Insert ClassInstanceCreation(4287) into ReturnStatement(4288) at 0", "Insert SimpleName: ArrayAllComparisonNode(4296) into SimpleType: ArrayAllComparisonNode(4297) at 0", "Insert BooleanLiteral: true(4302) into ReturnStatement(4303) at 0", "Insert SimpleName: ArrayElemRefNode(4311) into SimpleType: ArrayElemRefNode(4312) at 0", "Insert BooleanLiteral: true(4317) into ReturnStatement(4318) at 0", "Insert SimpleName: ArrayElemRefNode(4327) into SimpleType: ArrayElemRefNode(4328) at 0", "Insert SimpleType: List(4332) into ParameterizedType: List<Expression>(4335) at 0", "Insert SimpleType: Expression(4334) into ParameterizedType: List<Expression>(4335) at 1", "Insert ClassInstanceCreation(4343) into ReturnStatement(4344) at 0", "Insert SimpleName: ArrayAllComparisonNode(4353) into SimpleType: ArrayAllComparisonNode(4354) at 0", "Insert SimpleType: List(4358) into ParameterizedType: List<Expression>(4361) at 0", "Insert SimpleType: Expression(4360) into ParameterizedType: List<Expression>(4361) at 1", "Insert ClassInstanceCreation(4369) into ReturnStatement(4370) at 0", "Insert SimpleName: List(4275) into SimpleType: List(4276) at 0", "Insert SimpleName: Expression(4277) into SimpleType: Expression(4278) at 0", "Insert SimpleType: ArrayAnyComparisonExpression(4285) into ClassInstanceCreation(4287) at 0", "Insert SimpleName: children(4286) into ClassInstanceCreation(4287) at 1", "Insert SimpleName: List(4331) into SimpleType: List(4332) at 0", "Insert SimpleName: Expression(4333) into SimpleType: Expression(4334) at 0", "Insert SimpleType: InlineArrayElemRefExpression(4341) into ClassInstanceCreation(4343) at 0", "Insert SimpleName: l(4342) into ClassInstanceCreation(4343) at 1", "Insert SimpleName: List(4357) into SimpleType: List(4358) at 0", "Insert SimpleName: Expression(4359) into SimpleType: Expression(4360) at 0", "Insert SimpleType: ArrayAllComparisonExpression(4367) into ClassInstanceCreation(4369) at 0", "Insert SimpleName: children(4368) into ClassInstanceCreation(4369) at 1", "Insert SimpleName: ArrayAnyComparisonExpression(4284) into SimpleType: ArrayAnyComparisonExpression(4285) at 0", "Insert SimpleName: InlineArrayElemRefExpression(4340) into SimpleType: InlineArrayElemRefExpression(4341) at 0", "Insert SimpleName: ArrayAllComparisonExpression(4366) into SimpleType: ArrayAllComparisonExpression(4367) at 0"]}}, {"StatementNormalizer_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 24"]}]}}, {"StatementNormalizer_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(880) at 24"]}}, {"ExpressionType_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 21", "MOV ImportDeclaration to CompilationUnit at 9", "MOV ImportDeclaration to CompilationUnit at 23", "MOV ImportDeclaration to CompilationUnit at 14", "MOV ImportDeclaration to CompilationUnit at 26"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: org.apache.phoenix.expression.function.ArrayAllComparisonExpression to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.apache.phoenix.expression.function.ArrayAnyComparisonExpression to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 22", "operations": ["INS QualifiedName: org.apache.phoenix.expression.function.InlineArrayElemRefExpression to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 22"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 88", "operations": ["INS SimpleName: ArrayAnyComparisonExpression to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 88", "INS SimpleType: ArrayAnyComparisonExpression to TypeLiteral at 0", "INS SimpleName: ArrayAnyComparisonExpression to SimpleType: ArrayAnyComparisonExpression at 0", "INS TypeLiteral to EnumConstantDeclaration at 1"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 89", "operations": ["INS EnumConstantDeclaration to EnumDeclaration at 89", "INS TypeLiteral to EnumConstantDeclaration at 1", "INS SimpleType: ArrayAllComparisonExpression to TypeLiteral at 0", "INS SimpleName: ArrayAllComparisonExpression to EnumConstantDeclaration at 0", "INS SimpleName: ArrayAllComparisonExpression to SimpleType: ArrayAllComparisonExpression at 0"]}, {"root": "INS EnumConstantDeclaration to EnumDeclaration at 90", "operations": ["INS TypeLiteral to EnumConstantDeclaration at 1", "INS SimpleName: InlineArrayElemRefExpression to SimpleType: InlineArrayElemRefExpression at 0", "INS SimpleType: InlineArrayElemRefExpression to TypeLiteral at 0", "INS EnumConstantDeclaration to EnumDeclaration at 90", "INS SimpleName: InlineArrayElemRefExpression to EnumConstantDeclaration at 0"]}]}}, {"ExpressionType_diff": {"operations": ["Move ImportDeclaration(39) into CompilationUnit(725) at 23", "Move ImportDeclaration(103) into CompilationUnit(725) at 26", "Move ImportDeclaration(105) into CompilationUnit(725) at 14", "Move ImportDeclaration(107) into CompilationUnit(725) at 21", "Move ImportDeclaration(109) into CompilationUnit(725) at 9", "Insert ImportDeclaration(5) into CompilationUnit(725) at 2", "Insert ImportDeclaration(7) into CompilationUnit(725) at 3", "Insert ImportDeclaration(45) into CompilationUnit(725) at 22", "Insert QualifiedName: org.apache.phoenix.expression.function.ArrayAllComparisonExpression(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: org.apache.phoenix.expression.function.ArrayAnyComparisonExpression(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: org.apache.phoenix.expression.function.InlineArrayElemRefExpression(44) into ImportDeclaration(45) at 0", "Insert EnumConstantDeclaration(556) into EnumDeclaration(724) at 88", "Insert EnumConstantDeclaration(561) into EnumDeclaration(724) at 89", "Insert EnumConstantDeclaration(566) into EnumDeclaration(724) at 90", "Insert SimpleName: ArrayAnyComparisonExpression(552) into EnumConstantDeclaration(556) at 0", "Insert TypeLiteral(555) into EnumConstantDeclaration(556) at 1", "Insert SimpleName: ArrayAllComparisonExpression(557) into EnumConstantDeclaration(561) at 0", "Insert TypeLiteral(560) into EnumConstantDeclaration(561) at 1", "Insert SimpleName: InlineArrayElemRefExpression(562) into EnumConstantDeclaration(566) at 0", "Insert TypeLiteral(565) into EnumConstantDeclaration(566) at 1", "Insert SimpleType: ArrayAnyComparisonExpression(554) into TypeLiteral(555) at 0", "Insert SimpleType: ArrayAllComparisonExpression(559) into TypeLiteral(560) at 0", "Insert SimpleType: InlineArrayElemRefExpression(564) into TypeLiteral(565) at 0", "Insert SimpleName: ArrayAnyComparisonExpression(553) into SimpleType: ArrayAnyComparisonExpression(554) at 0", "Insert SimpleName: ArrayAllComparisonExpression(558) into SimpleType: ArrayAllComparisonExpression(559) at 0", "Insert SimpleName: InlineArrayElemRefExpression(563) into SimpleType: InlineArrayElemRefExpression(564) at 0"]}}, {"ParseNodeFactory_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 74", "operations": ["INS SimpleName: rhs to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: rhs to ClassInstanceCreation at 1", "INS MethodDeclaration to TypeDeclaration: class at 74", "INS SimpleType: CompareOp to SingleVariableDeclaration at 0", "INS NumberLiteral: 1 to MethodInvocation at 1", "INS SimpleName: lhs to MethodInvocation at 2", "INS SimpleType: ParseNode to MethodInvocation at 1", "INS Block to MethodDeclaration at 6", "INS SimpleName: CompareOp to SimpleType: CompareOp at 0", "INS SimpleName: comparison to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: asList to MethodInvocation at 2", "INS SimpleType: ArrayAnyComparisonNode to ClassInstanceCreation at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: ArrayAnyComparisonNode to MethodDeclaration at 1", "INS SimpleName: elementRef to MethodInvocation at 0", "INS SimpleName: ParseNode to SimpleType: ParseNode at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: lhs to SingleVariableDeclaration at 1", "INS SimpleName: literal to MethodInvocation at 0", "INS SimpleName: ArrayAnyComparisonNode to SimpleType: ArrayAnyComparisonNode at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: op to MethodInvocation at 1", "INS SimpleName: ParseNode to SimpleType: ParseNode at 0", "INS SimpleName: wrapInAny to MethodDeclaration at 2", "INS SimpleName: ParseNode to SimpleType: ParseNode at 0", "INS SimpleType: ParseNode to SingleVariableDeclaration at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: Arrays to MethodInvocation at 0", "INS SimpleName: ArrayAnyComparisonNode to SimpleType: ArrayAnyComparisonNode at 0", "INS SimpleName: rhs to MethodInvocation at 3", "INS SimpleType: ParseNode to SingleVariableDeclaration at 0", "INS SimpleName: op to SingleVariableDeclaration at 1", "INS MethodInvocation to ClassInstanceCreation at 2", "INS MethodInvocation to MethodInvocation at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 75", "operations": ["INS SimpleName: rhs to ClassInstanceCreation at 1", "INS SimpleType: ParseNode to SingleVariableDeclaration at 0", "INS SimpleName: elementRef to MethodInvocation at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: literal to MethodInvocation at 0", "INS SimpleType: ParseNode to SingleVariableDeclaration at 0", "INS SimpleName: ParseNode to SimpleType: ParseNode at 0", "INS NumberLiteral: 1 to MethodInvocation at 1", "INS SimpleType: ArrayAllComparisonNode to MethodDeclaration at 1", "INS SimpleName: comparison to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: op to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: Arrays to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 4", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Block to MethodDeclaration at 6", "INS SimpleType: CompareOp to SingleVariableDeclaration at 0", "INS SimpleName: rhs to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 75", "INS SimpleName: ParseNode to SimpleType: ParseNode at 0", "INS SimpleName: asList to MethodInvocation at 2", "INS SimpleName: ArrayAllComparisonNode to SimpleType: ArrayAllComparisonNode at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: ParseNode to SimpleType: ParseNode at 0", "INS SimpleName: lhs to SingleVariableDeclaration at 1", "INS MethodInvocation to ClassInstanceCreation at 2", "INS ReturnStatement to Block at 0", "INS SimpleType: ArrayAllComparisonNode to ClassInstanceCreation at 0", "INS SimpleType: ParseNode to MethodInvocation at 1", "INS SimpleName: ArrayAllComparisonNode to SimpleType: ArrayAllComparisonNode at 0", "INS SimpleName: op to MethodInvocation at 1", "INS SimpleName: wrapInAll to MethodDeclaration at 2", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: CompareOp to SimpleType: CompareOp at 0", "INS SimpleName: lhs to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: rhs to MethodInvocation at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 76", "operations": ["INS SimpleName: ArrayElemRefNode to SimpleType: ArrayElemRefNode at 0", "INS MethodDeclaration to TypeDeclaration: class at 76", "INS SimpleName: elementRef to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: List to ParameterizedType: List<ParseNode> at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: ArrayElemRefNode to MethodDeclaration at 1", "INS SimpleName: ArrayElemRefNode to SimpleType: ArrayElemRefNode at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: parseNode to ClassInstanceCreation at 1", "INS ParameterizedType: List<ParseNode> to SingleVariableDeclaration at 0", "INS SimpleType: ArrayElemRefNode to ClassInstanceCreation at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: parseNode to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: ParseNode to SimpleType: ParseNode at 0", "INS SimpleType: ParseNode to ParameterizedType: List<ParseNode> at 1"]}]}}, {"ParseNodeFactory_diff": {"operations": ["Insert MethodDeclaration(2457) into TypeDeclaration: class(3130) at 74", "Insert MethodDeclaration(2495) into TypeDeclaration: class(3130) at 75", "Insert MethodDeclaration(2513) into TypeDeclaration: class(3130) at 76", "Insert Modifier: public(2420) into MethodDeclaration(2457) at 0", "Insert SimpleType: ArrayAnyComparisonNode(2422) into MethodDeclaration(2457) at 1", "Insert SimpleName: wrapInAny(2423) into MethodDeclaration(2457) at 2", "Insert SingleVariableDeclaration(2427) into MethodDeclaration(2457) at 3", "Insert SingleVariableDeclaration(2431) into MethodDeclaration(2457) at 4", "Insert SingleVariableDeclaration(2435) into MethodDeclaration(2457) at 5", "Insert Block(2456) into MethodDeclaration(2457) at 6", "Insert Modifier: public(2458) into MethodDeclaration(2495) at 0", "Insert SimpleType: ArrayAllComparisonNode(2460) into MethodDeclaration(2495) at 1", "Insert SimpleName: wrapInAll(2461) into MethodDeclaration(2495) at 2", "Insert SingleVariableDeclaration(2465) into MethodDeclaration(2495) at 3", "Insert SingleVariableDeclaration(2469) into MethodDeclaration(2495) at 4", "Insert SingleVariableDeclaration(2473) into MethodDeclaration(2495) at 5", "Insert Block(2494) into MethodDeclaration(2495) at 6", "Insert Modifier: public(2496) into MethodDeclaration(2513) at 0", "Insert SimpleType: ArrayElemRefNode(2498) into MethodDeclaration(2513) at 1", "Insert SimpleName: elementRef(2499) into MethodDeclaration(2513) at 2", "Insert SingleVariableDeclaration(2506) into MethodDeclaration(2513) at 3", "Insert Block(2512) into MethodDeclaration(2513) at 4", "Insert SimpleName: ArrayAnyComparisonNode(2421) into SimpleType: ArrayAnyComparisonNode(2422) at 0", "Insert SimpleType: CompareOp(2425) into SingleVariableDeclaration(2427) at 0", "Insert SimpleName: op(2426) into SingleVariableDeclaration(2427) at 1", "Insert SimpleType: ParseNode(2429) into SingleVariableDeclaration(2431) at 0", "Insert SimpleName: lhs(2430) into SingleVariableDeclaration(2431) at 1", "Insert SimpleType: ParseNode(2433) into SingleVariableDeclaration(2435) at 0", "Insert SimpleName: rhs(2434) into SingleVariableDeclaration(2435) at 1", "Insert ReturnStatement(2455) into Block(2456) at 0", "Insert SimpleName: ArrayAllComparisonNode(2459) into SimpleType: ArrayAllComparisonNode(2460) at 0", "Insert SimpleType: CompareOp(2463) into SingleVariableDeclaration(2465) at 0", "Insert SimpleName: op(2464) into SingleVariableDeclaration(2465) at 1", "Insert SimpleType: ParseNode(2467) into SingleVariableDeclaration(2469) at 0", "Insert SimpleName: lhs(2468) into SingleVariableDeclaration(2469) at 1", "Insert SimpleType: ParseNode(2471) into SingleVariableDeclaration(2473) at 0", "Insert SimpleName: rhs(2472) into SingleVariableDeclaration(2473) at 1", "Insert ReturnStatement(2493) into Block(2494) at 0", "Insert SimpleName: ArrayElemRefNode(2497) into SimpleType: ArrayElemRefNode(2498) at 0", "Insert ParameterizedType: List<ParseNode>(2504) into SingleVariableDeclaration(2506) at 0", "Insert SimpleName: parseNode(2505) into SingleVariableDeclaration(2506) at 1", "Insert ReturnStatement(2511) into Block(2512) at 0", "Insert SimpleName: CompareOp(2424) into SimpleType: CompareOp(2425) at 0", "Insert SimpleName: ParseNode(2428) into SimpleType: ParseNode(2429) at 0", "Insert SimpleName: ParseNode(2432) into SimpleType: ParseNode(2433) at 0", "Insert ClassInstanceCreation(2454) into ReturnStatement(2455) at 0", "Insert SimpleName: CompareOp(2462) into SimpleType: CompareOp(2463) at 0", "Insert SimpleName: ParseNode(2466) into SimpleType: ParseNode(2467) at 0", "Insert SimpleName: ParseNode(2470) into SimpleType: ParseNode(2471) at 0", "Insert ClassInstanceCreation(2492) into ReturnStatement(2493) at 0", "Insert SimpleType: List(2501) into ParameterizedType: List<ParseNode>(2504) at 0", "Insert SimpleType: ParseNode(2503) into ParameterizedType: List<ParseNode>(2504) at 1", "Insert ClassInstanceCreation(2510) into ReturnStatement(2511) at 0", "Insert SimpleType: ArrayAnyComparisonNode(2437) into ClassInstanceCreation(2454) at 0", "Insert SimpleName: rhs(2438) into ClassInstanceCreation(2454) at 1", "Insert MethodInvocation(2453) into ClassInstanceCreation(2454) at 2", "Insert SimpleType: ArrayAllComparisonNode(2475) into ClassInstanceCreation(2492) at 0", "Insert SimpleName: rhs(2476) into ClassInstanceCreation(2492) at 1", "Insert MethodInvocation(2491) into ClassInstanceCreation(2492) at 2", "Insert SimpleName: List(2500) into SimpleType: List(2501) at 0", "Insert SimpleName: ParseNode(2502) into SimpleType: ParseNode(2503) at 0", "Insert SimpleType: ArrayElemRefNode(2508) into ClassInstanceCreation(2510) at 0", "Insert SimpleName: parseNode(2509) into ClassInstanceCreation(2510) at 1", "Insert SimpleName: ArrayAnyComparisonNode(2436) into SimpleType: ArrayAnyComparisonNode(2437) at 0", "Insert SimpleName: comparison(2439) into MethodInvocation(2453) at 0", "Insert SimpleName: op(2440) into MethodInvocation(2453) at 1", "Insert SimpleName: lhs(2441) into MethodInvocation(2453) at 2", "Insert MethodInvocation(2452) into MethodInvocation(2453) at 3", "Insert SimpleName: ArrayAllComparisonNode(2474) into SimpleType: ArrayAllComparisonNode(2475) at 0", "Insert SimpleName: comparison(2477) into MethodInvocation(2491) at 0", "Insert SimpleName: op(2478) into MethodInvocation(2491) at 1", "Insert SimpleName: lhs(2479) into MethodInvocation(2491) at 2", "Insert MethodInvocation(2490) into MethodInvocation(2491) at 3", "Insert SimpleName: ArrayElemRefNode(2507) into SimpleType: ArrayElemRefNode(2508) at 0", "Insert SimpleName: elementRef(2442) into MethodInvocation(2452) at 0", "Insert MethodInvocation(2451) into MethodInvocation(2452) at 1", "Insert SimpleName: elementRef(2480) into MethodInvocation(2490) at 0", "Insert MethodInvocation(2489) into MethodInvocation(2490) at 1", "Insert SimpleName: Arrays(2443) into MethodInvocation(2451) at 0", "Insert SimpleType: ParseNode(2445) into MethodInvocation(2451) at 1", "Insert SimpleName: asList(2446) into MethodInvocation(2451) at 2", "Insert SimpleName: rhs(2447) into MethodInvocation(2451) at 3", "Insert MethodInvocation(2450) into MethodInvocation(2451) at 4", "Insert SimpleName: Arrays(2481) into MethodInvocation(2489) at 0", "Insert SimpleType: ParseNode(2483) into MethodInvocation(2489) at 1", "Insert SimpleName: asList(2484) into MethodInvocation(2489) at 2", "Insert SimpleName: rhs(2485) into MethodInvocation(2489) at 3", "Insert MethodInvocation(2488) into MethodInvocation(2489) at 4", "Insert SimpleName: ParseNode(2444) into SimpleType: ParseNode(2445) at 0", "Insert SimpleName: literal(2448) into MethodInvocation(2450) at 0", "Insert NumberLiteral: 1(2449) into MethodInvocation(2450) at 1", "Insert SimpleName: ParseNode(2482) into SimpleType: ParseNode(2483) at 0", "Insert SimpleName: literal(2486) into MethodInvocation(2488) at 0", "Insert NumberLiteral: 1(2487) into MethodInvocation(2488) at 1"]}}, {"ParseNodeRewriter_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 47", "operations": ["INS Block to MethodDeclaration at 7", "INS SimpleType: SQLException to MethodDeclaration at 6", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleName: ParseNode to SimpleType: ParseNode at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: ArrayAnyComparisonNode to SimpleType: ArrayAnyComparisonNode at 0", "INS MethodDeclaration to TypeDeclaration: class at 47", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: ParseNode to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: List to ParameterizedType: List<ParseNode> at 0", "INS ParameterizedType: List<ParseNode> to SingleVariableDeclaration at 0", "INS SimpleName: ParseNode to SimpleType: ParseNode at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: visitLeave to MethodDeclaration at 3", "INS SimpleName: l to SingleVariableDeclaration at 1", "INS SimpleType: ParseNode to ParameterizedType: List<ParseNode> at 1", "INS SimpleName: node to ReturnStatement at 0", "INS SimpleType: ArrayAnyComparisonNode to SingleVariableDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 48", "operations": ["INS SimpleType: List to ParameterizedType: List<ParseNode> at 0", "INS SimpleName: l to SingleVariableDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleType: SQLException to MethodDeclaration at 6", "INS SimpleName: ParseNode to SimpleType: ParseNode at 0", "INS SimpleName: ArrayAllComparisonNode to SimpleType: ArrayAllComparisonNode at 0", "INS SimpleName: List to SimpleType: List at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ParameterizedType: List<ParseNode> to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 48", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: visitLeave to MethodDeclaration at 3", "INS Block to MethodDeclaration at 7", "INS SimpleName: ParseNode to SimpleType: ParseNode at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: ParseNode to ParameterizedType: List<ParseNode> at 1", "INS SimpleType: ArrayAllComparisonNode to SingleVariableDeclaration at 0", "INS SimpleName: node to ReturnStatement at 0", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleType: ParseNode to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 49", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: ArrayElemRefNode to SingleVariableDeclaration at 0", "INS SimpleName: l to SingleVariableDeclaration at 1", "INS ParameterizedType: List<ParseNode> to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: SQLException to MethodDeclaration at 6", "INS SimpleType: ParseNode to ParameterizedType: List<ParseNode> at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to TypeDeclaration: class at 49", "INS SimpleName: visitLeave to MethodDeclaration at 3", "INS SimpleName: ParseNode to SimpleType: ParseNode at 0", "INS SimpleType: List to ParameterizedType: List<ParseNode> at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Block to MethodDeclaration at 7", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: node to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: ParseNode to SimpleType: ParseNode at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleType: ParseNode to MethodDeclaration at 2", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: ArrayElemRefNode to SimpleType: ArrayElemRefNode at 0"]}]}}, {"ParseNodeRewriter_diff": {"operations": ["Insert MethodDeclaration(2416) into TypeDeclaration: class(2463) at 47", "Insert MethodDeclaration(2439) into TypeDeclaration: class(2463) at 48", "Insert MethodDeclaration(2462) into TypeDeclaration: class(2463) at 49", "Insert MarkerAnnotation(2395) into MethodDeclaration(2416) at 0", "Insert Modifier: public(2396) into MethodDeclaration(2416) at 1", "Insert SimpleType: ParseNode(2398) into MethodDeclaration(2416) at 2", "Insert SimpleName: visitLeave(2399) into MethodDeclaration(2416) at 3", "Insert SingleVariableDeclaration(2403) into MethodDeclaration(2416) at 4", "Insert SingleVariableDeclaration(2410) into MethodDeclaration(2416) at 5", "Insert SimpleType: SQLException(2412) into MethodDeclaration(2416) at 6", "Insert Block(2415) into MethodDeclaration(2416) at 7", "Insert MarkerAnnotation(2418) into MethodDeclaration(2439) at 0", "Insert Modifier: public(2419) into MethodDeclaration(2439) at 1", "Insert SimpleType: ParseNode(2421) into MethodDeclaration(2439) at 2", "Insert SimpleName: visitLeave(2422) into MethodDeclaration(2439) at 3", "Insert SingleVariableDeclaration(2426) into MethodDeclaration(2439) at 4", "Insert SingleVariableDeclaration(2433) into MethodDeclaration(2439) at 5", "Insert SimpleType: SQLException(2435) into MethodDeclaration(2439) at 6", "Insert Block(2438) into MethodDeclaration(2439) at 7", "Insert MarkerAnnotation(2441) into MethodDeclaration(2462) at 0", "Insert Modifier: public(2442) into MethodDeclaration(2462) at 1", "Insert SimpleType: ParseNode(2444) into MethodDeclaration(2462) at 2", "Insert SimpleName: visitLeave(2445) into MethodDeclaration(2462) at 3", "Insert SingleVariableDeclaration(2449) into MethodDeclaration(2462) at 4", "Insert SingleVariableDeclaration(2456) into MethodDeclaration(2462) at 5", "Insert SimpleType: SQLException(2458) into MethodDeclaration(2462) at 6", "Insert Block(2461) into MethodDeclaration(2462) at 7", "Insert SimpleName: Override(2394) into MarkerAnnotation(2395) at 0", "Insert SimpleName: ParseNode(2397) into SimpleType: ParseNode(2398) at 0", "Insert SimpleType: ArrayAnyComparisonNode(2401) into SingleVariableDeclaration(2403) at 0", "Insert SimpleName: node(2402) into SingleVariableDeclaration(2403) at 1", "Insert ParameterizedType: List<ParseNode>(2408) into SingleVariableDeclaration(2410) at 0", "Insert SimpleName: l(2409) into SingleVariableDeclaration(2410) at 1", "Insert SimpleName: SQLException(2411) into SimpleType: SQLException(2412) at 0", "Insert ReturnStatement(2414) into Block(2415) at 0", "Insert SimpleName: Override(2417) into MarkerAnnotation(2418) at 0", "Insert SimpleName: ParseNode(2420) into SimpleType: ParseNode(2421) at 0", "Insert SimpleType: ArrayAllComparisonNode(2424) into SingleVariableDeclaration(2426) at 0", "Insert SimpleName: node(2425) into SingleVariableDeclaration(2426) at 1", "Insert ParameterizedType: List<ParseNode>(2431) into SingleVariableDeclaration(2433) at 0", "Insert SimpleName: l(2432) into SingleVariableDeclaration(2433) at 1", "Insert SimpleName: SQLException(2434) into SimpleType: SQLException(2435) at 0", "Insert ReturnStatement(2437) into Block(2438) at 0", "Insert SimpleName: Override(2440) into MarkerAnnotation(2441) at 0", "Insert SimpleName: ParseNode(2443) into SimpleType: ParseNode(2444) at 0", "Insert SimpleType: ArrayElemRefNode(2447) into SingleVariableDeclaration(2449) at 0", "Insert SimpleName: node(2448) into SingleVariableDeclaration(2449) at 1", "Insert ParameterizedType: List<ParseNode>(2454) into SingleVariableDeclaration(2456) at 0", "Insert SimpleName: l(2455) into SingleVariableDeclaration(2456) at 1", "Insert SimpleName: SQLException(2457) into SimpleType: SQLException(2458) at 0", "Insert ReturnStatement(2460) into Block(2461) at 0", "Insert SimpleName: ArrayAnyComparisonNode(2400) into SimpleType: ArrayAnyComparisonNode(2401) at 0", "Insert SimpleType: List(2405) into ParameterizedType: List<ParseNode>(2408) at 0", "Insert SimpleType: ParseNode(2407) into ParameterizedType: List<ParseNode>(2408) at 1", "Insert SimpleName: node(2413) into ReturnStatement(2414) at 0", "Insert SimpleName: ArrayAllComparisonNode(2423) into SimpleType: ArrayAllComparisonNode(2424) at 0", "Insert SimpleType: List(2428) into ParameterizedType: List<ParseNode>(2431) at 0", "Insert SimpleType: ParseNode(2430) into ParameterizedType: List<ParseNode>(2431) at 1", "Insert SimpleName: node(2436) into ReturnStatement(2437) at 0", "Insert SimpleName: ArrayElemRefNode(2446) into SimpleType: ArrayElemRefNode(2447) at 0", "Insert SimpleType: List(2451) into ParameterizedType: List<ParseNode>(2454) at 0", "Insert SimpleType: ParseNode(2453) into ParameterizedType: List<ParseNode>(2454) at 1", "Insert SimpleName: node(2459) into ReturnStatement(2460) at 0", "Insert SimpleName: List(2404) into SimpleType: List(2405) at 0", "Insert SimpleName: ParseNode(2406) into SimpleType: ParseNode(2407) at 0", "Insert SimpleName: List(2427) into SimpleType: List(2428) at 0", "Insert SimpleName: ParseNode(2429) into SimpleType: ParseNode(2430) at 0", "Insert SimpleName: List(2450) into SimpleType: List(2451) at 0", "Insert SimpleName: ParseNode(2452) into SimpleType: ParseNode(2453) at 0"]}}, {"ParseNodeVisitor_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 52", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 52", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleName: visitEnter to MethodDeclaration at 2", "INS SimpleName: ArrayAllComparisonNode to SimpleType: ArrayAllComparisonNode at 0", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleType: ArrayAllComparisonNode to SingleVariableDeclaration at 0", "INS SimpleType: SQLException to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 53", "operations": ["INS SimpleName: l to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleName: visitLeave to MethodDeclaration at 2", "INS SimpleType: E to ParameterizedType: List<E> at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleType: E to MethodDeclaration at 1", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleType: SQLException to MethodDeclaration at 5", "INS Modifier: public to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: interface at 53", "INS SimpleType: ArrayAllComparisonNode to SingleVariableDeclaration at 0", "INS SimpleType: List to ParameterizedType: List<E> at 0", "INS ParameterizedType: List<E> to SingleVariableDeclaration at 0", "INS SimpleName: ArrayAllComparisonNode to SimpleType: ArrayAllComparisonNode at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 54", "operations": ["INS SimpleType: SQLException to MethodDeclaration at 4", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: interface at 54", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: ArrayAnyComparisonNode to SimpleType: ArrayAnyComparisonNode at 0", "INS SimpleType: ArrayAnyComparisonNode to SingleVariableDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleName: visitEnter to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 55", "operations": ["INS SimpleName: visitLeave to MethodDeclaration at 2", "INS SimpleType: List to ParameterizedType: List<E> at 0", "INS ParameterizedType: List<E> to SingleVariableDeclaration at 0", "INS SimpleName: l to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: interface at 55", "INS SimpleType: E to MethodDeclaration at 1", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleType: E to ParameterizedType: List<E> at 1", "INS SimpleName: E to SimpleType: E at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: SQLException to MethodDeclaration at 5", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleName: ArrayAnyComparisonNode to SimpleType: ArrayAnyComparisonNode at 0", "INS SimpleType: ArrayAnyComparisonNode to SingleVariableDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 56", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: interface at 56", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleName: ArrayElemRefNode to SimpleType: ArrayElemRefNode at 0", "INS SimpleName: visitEnter to MethodDeclaration at 2", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleType: ArrayElemRefNode to SingleVariableDeclaration at 0", "INS SimpleType: SQLException to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 57", "operations": ["INS SimpleType: E to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: interface at 57", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: l to SingleVariableDeclaration at 1", "INS ParameterizedType: List<E> to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: ArrayElemRefNode to SimpleType: ArrayElemRefNode at 0", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleName: visitLeave to MethodDeclaration at 2", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleType: SQLException to MethodDeclaration at 5", "INS SimpleType: ArrayElemRefNode to SingleVariableDeclaration at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleType: List to ParameterizedType: List<E> at 0", "INS SimpleType: E to ParameterizedType: List<E> at 1", "INS Modifier: public to MethodDeclaration at 0"]}]}}, {"ParseNodeVisitor_diff": {"operations": ["Insert MethodDeclaration(689) into TypeDeclaration: interface(764) at 52", "Insert MethodDeclaration(707) into TypeDeclaration: interface(764) at 53", "Insert MethodDeclaration(717) into TypeDeclaration: interface(764) at 54", "Insert MethodDeclaration(735) into TypeDeclaration: interface(764) at 55", "Insert MethodDeclaration(745) into TypeDeclaration: interface(764) at 56", "Insert MethodDeclaration(763) into TypeDeclaration: interface(764) at 57", "Insert Modifier: public(680) into MethodDeclaration(689) at 0", "Insert PrimitiveType: boolean(681) into MethodDeclaration(689) at 1", "Insert SimpleName: visitEnter(682) into MethodDeclaration(689) at 2", "Insert SingleVariableDeclaration(686) into MethodDeclaration(689) at 3", "Insert SimpleType: SQLException(688) into MethodDeclaration(689) at 4", "Insert Modifier: public(690) into MethodDeclaration(707) at 0", "Insert SimpleType: E(692) into MethodDeclaration(707) at 1", "Insert SimpleName: visitLeave(693) into MethodDeclaration(707) at 2", "Insert SingleVariableDeclaration(697) into MethodDeclaration(707) at 3", "Insert SingleVariableDeclaration(704) into MethodDeclaration(707) at 4", "Insert SimpleType: SQLException(706) into MethodDeclaration(707) at 5", "Insert Modifier: public(708) into MethodDeclaration(717) at 0", "Insert PrimitiveType: boolean(709) into MethodDeclaration(717) at 1", "Insert SimpleName: visitEnter(710) into MethodDeclaration(717) at 2", "Insert SingleVariableDeclaration(714) into MethodDeclaration(717) at 3", "Insert SimpleType: SQLException(716) into MethodDeclaration(717) at 4", "Insert Modifier: public(718) into MethodDeclaration(735) at 0", "Insert SimpleType: E(720) into MethodDeclaration(735) at 1", "Insert SimpleName: visitLeave(721) into MethodDeclaration(735) at 2", "Insert SingleVariableDeclaration(725) into MethodDeclaration(735) at 3", "Insert SingleVariableDeclaration(732) into MethodDeclaration(735) at 4", "Insert SimpleType: SQLException(734) into MethodDeclaration(735) at 5", "Insert Modifier: public(736) into MethodDeclaration(745) at 0", "Insert PrimitiveType: boolean(737) into MethodDeclaration(745) at 1", "Insert SimpleName: visitEnter(738) into MethodDeclaration(745) at 2", "Insert SingleVariableDeclaration(742) into MethodDeclaration(745) at 3", "Insert SimpleType: SQLException(744) into MethodDeclaration(745) at 4", "Insert Modifier: public(746) into MethodDeclaration(763) at 0", "Insert SimpleType: E(748) into MethodDeclaration(763) at 1", "Insert SimpleName: visitLeave(749) into MethodDeclaration(763) at 2", "Insert SingleVariableDeclaration(753) into MethodDeclaration(763) at 3", "Insert SingleVariableDeclaration(760) into MethodDeclaration(763) at 4", "Insert SimpleType: SQLException(762) into MethodDeclaration(763) at 5", "Insert SimpleType: ArrayAllComparisonNode(684) into SingleVariableDeclaration(686) at 0", "Insert SimpleName: node(685) into SingleVariableDeclaration(686) at 1", "Insert SimpleName: SQLException(687) into SimpleType: SQLException(688) at 0", "Insert SimpleName: E(691) into SimpleType: E(692) at 0", "Insert SimpleType: ArrayAllComparisonNode(695) into SingleVariableDeclaration(697) at 0", "Insert SimpleName: node(696) into SingleVariableDeclaration(697) at 1", "Insert ParameterizedType: List<E>(702) into SingleVariableDeclaration(704) at 0", "Insert SimpleName: l(703) into SingleVariableDeclaration(704) at 1", "Insert SimpleName: SQLException(705) into SimpleType: SQLException(706) at 0", "Insert SimpleType: ArrayAnyComparisonNode(712) into SingleVariableDeclaration(714) at 0", "Insert SimpleName: node(713) into SingleVariableDeclaration(714) at 1", "Insert SimpleName: SQLException(715) into SimpleType: SQLException(716) at 0", "Insert SimpleName: E(719) into SimpleType: E(720) at 0", "Insert SimpleType: ArrayAnyComparisonNode(723) into SingleVariableDeclaration(725) at 0", "Insert SimpleName: node(724) into SingleVariableDeclaration(725) at 1", "Insert ParameterizedType: List<E>(730) into SingleVariableDeclaration(732) at 0", "Insert SimpleName: l(731) into SingleVariableDeclaration(732) at 1", "Insert SimpleName: SQLException(733) into SimpleType: SQLException(734) at 0", "Insert SimpleType: ArrayElemRefNode(740) into SingleVariableDeclaration(742) at 0", "Insert SimpleName: node(741) into SingleVariableDeclaration(742) at 1", "Insert SimpleName: SQLException(743) into SimpleType: SQLException(744) at 0", "Insert SimpleName: E(747) into SimpleType: E(748) at 0", "Insert SimpleType: ArrayElemRefNode(751) into SingleVariableDeclaration(753) at 0", "Insert SimpleName: node(752) into SingleVariableDeclaration(753) at 1", "Insert ParameterizedType: List<E>(758) into SingleVariableDeclaration(760) at 0", "Insert SimpleName: l(759) into SingleVariableDeclaration(760) at 1", "Insert SimpleName: SQLException(761) into SimpleType: SQLException(762) at 0", "Insert SimpleName: ArrayAllComparisonNode(683) into SimpleType: ArrayAllComparisonNode(684) at 0", "Insert SimpleName: ArrayAllComparisonNode(694) into SimpleType: ArrayAllComparisonNode(695) at 0", "Insert SimpleType: List(699) into ParameterizedType: List<E>(702) at 0", "Insert SimpleType: E(701) into ParameterizedType: List<E>(702) at 1", "Insert SimpleName: ArrayAnyComparisonNode(711) into SimpleType: ArrayAnyComparisonNode(712) at 0", "Insert SimpleName: ArrayAnyComparisonNode(722) into SimpleType: ArrayAnyComparisonNode(723) at 0", "Insert SimpleType: List(727) into ParameterizedType: List<E>(730) at 0", "Insert SimpleType: E(729) into ParameterizedType: List<E>(730) at 1", "Insert SimpleName: ArrayElemRefNode(739) into SimpleType: ArrayElemRefNode(740) at 0", "Insert SimpleName: ArrayElemRefNode(750) into SimpleType: ArrayElemRefNode(751) at 0", "Insert SimpleType: List(755) into ParameterizedType: List<E>(758) at 0", "Insert SimpleType: E(757) into ParameterizedType: List<E>(758) at 1", "Insert SimpleName: List(698) into SimpleType: List(699) at 0", "Insert SimpleName: E(700) into SimpleType: E(701) at 0", "Insert SimpleName: List(726) into SimpleType: List(727) at 0", "Insert SimpleName: E(728) into SimpleType: E(729) at 0", "Insert SimpleName: List(754) into SimpleType: List(755) at 0", "Insert SimpleName: E(756) into SimpleType: E(757) at 0"]}}, {"TraverseAllParseNodeVisitor_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 32", "operations": ["INS SimpleName: ArrayAllComparisonNode to SimpleType: ArrayAllComparisonNode at 0", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 32", "INS SimpleType: SQLException to MethodDeclaration at 5", "INS SimpleName: Override to MarkerAnnotation at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: visitEnter to MethodDeclaration at 3", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: ArrayAllComparisonNode to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS Block to MethodDeclaration at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 33", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: T to MethodDeclaration at 2", "INS SimpleType: List to ParameterizedType: List<T> at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS ParameterizedType: List<T> to SingleVariableDeclaration at 0", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 33", "INS SimpleName: ArrayAllComparisonNode to SimpleType: ArrayAllComparisonNode at 0", "INS NullLiteral to ReturnStatement at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: l to SingleVariableDeclaration at 1", "INS SimpleName: visitLeave to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: T to SimpleType: T at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: ArrayAllComparisonNode to SingleVariableDeclaration at 0", "INS SimpleType: T to ParameterizedType: List<T> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS ReturnStatement to Block at 0", "INS SimpleType: SQLException to MethodDeclaration at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 34", "operations": ["INS SimpleType: SQLException to MethodDeclaration at 5", "INS Block to MethodDeclaration at 6", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: ArrayAnyComparisonNode to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 34", "INS SimpleName: ArrayAnyComparisonNode to SimpleType: ArrayAnyComparisonNode at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS SimpleName: visitEnter to MethodDeclaration at 3", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 35", "operations": ["INS SimpleType: ArrayAnyComparisonNode to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: ArrayAnyComparisonNode to SimpleType: ArrayAnyComparisonNode at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 7", "INS SimpleName: T to SimpleType: T at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: SQLException to MethodDeclaration at 6", "INS SimpleType: List to ParameterizedType: List<T> at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: l to SingleVariableDeclaration at 1", "INS SimpleType: T to MethodDeclaration at 2", "INS NullLiteral to ReturnStatement at 0", "INS SimpleType: T to ParameterizedType: List<T> at 1", "INS SimpleName: visitLeave to MethodDeclaration at 3", "INS ParameterizedType: List<T> to SingleVariableDeclaration at 0", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 35", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 36", "operations": ["INS SimpleType: SQLException to MethodDeclaration at 6", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: T to SimpleType: T at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: T to ParameterizedType: List<T> at 1", "INS SimpleType: T to MethodDeclaration at 2", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleName: ArrayElemRefNode to SimpleType: ArrayElemRefNode at 0", "INS SimpleName: l to SingleVariableDeclaration at 1", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleType: ArrayElemRefNode to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS NullLiteral to ReturnStatement at 0", "INS SimpleType: List to ParameterizedType: List<T> at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ParameterizedType: List<T> to SingleVariableDeclaration at 0", "INS SimpleName: List to SimpleType: List at 0", "INS MethodDeclaration to TypeDeclaration: class at 36", "INS SimpleName: visitLeave to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 37", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 37", "INS Block to MethodDeclaration at 6", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: ArrayElemRefNode to SimpleType: ArrayElemRefNode at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: SQLException to MethodDeclaration at 5", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: visitEnter to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: ArrayElemRefNode to SingleVariableDeclaration at 0", "INS BooleanLiteral: true to ReturnStatement at 0"]}]}}, {"TraverseAllParseNodeVisitor_diff": {"operations": ["Insert MethodDeclaration(440) into TypeDeclaration: class(540) at 32", "Insert MethodDeclaration(463) into TypeDeclaration: class(540) at 33", "Insert MethodDeclaration(478) into TypeDeclaration: class(540) at 34", "Insert MethodDeclaration(501) into TypeDeclaration: class(540) at 35", "Insert MethodDeclaration(524) into TypeDeclaration: class(540) at 36", "Insert MethodDeclaration(539) into TypeDeclaration: class(540) at 37", "Insert MarkerAnnotation(427) into MethodDeclaration(440) at 0", "Insert Modifier: public(428) into MethodDeclaration(440) at 1", "Insert PrimitiveType: boolean(429) into MethodDeclaration(440) at 2", "Insert SimpleName: visitEnter(430) into MethodDeclaration(440) at 3", "Insert SingleVariableDeclaration(434) into MethodDeclaration(440) at 4", "Insert SimpleType: SQLException(436) into MethodDeclaration(440) at 5", "Insert Block(439) into MethodDeclaration(440) at 6", "Insert MarkerAnnotation(442) into MethodDeclaration(463) at 0", "Insert Modifier: public(443) into MethodDeclaration(463) at 1", "Insert SimpleType: T(445) into MethodDeclaration(463) at 2", "Insert SimpleName: visitLeave(446) into MethodDeclaration(463) at 3", "Insert SingleVariableDeclaration(450) into MethodDeclaration(463) at 4", "Insert SingleVariableDeclaration(457) into MethodDeclaration(463) at 5", "Insert SimpleType: SQLException(459) into MethodDeclaration(463) at 6", "Insert Block(462) into MethodDeclaration(463) at 7", "Insert MarkerAnnotation(465) into MethodDeclaration(478) at 0", "Insert Modifier: public(466) into MethodDeclaration(478) at 1", "Insert PrimitiveType: boolean(467) into MethodDeclaration(478) at 2", "Insert SimpleName: visitEnter(468) into MethodDeclaration(478) at 3", "Insert SingleVariableDeclaration(472) into MethodDeclaration(478) at 4", "Insert SimpleType: SQLException(474) into MethodDeclaration(478) at 5", "Insert Block(477) into MethodDeclaration(478) at 6", "Insert MarkerAnnotation(480) into MethodDeclaration(501) at 0", "Insert Modifier: public(481) into MethodDeclaration(501) at 1", "Insert SimpleType: T(483) into MethodDeclaration(501) at 2", "Insert SimpleName: visitLeave(484) into MethodDeclaration(501) at 3", "Insert SingleVariableDeclaration(488) into MethodDeclaration(501) at 4", "Insert SingleVariableDeclaration(495) into MethodDeclaration(501) at 5", "Insert SimpleType: SQLException(497) into MethodDeclaration(501) at 6", "Insert Block(500) into MethodDeclaration(501) at 7", "Insert MarkerAnnotation(503) into MethodDeclaration(524) at 0", "Insert Modifier: public(504) into MethodDeclaration(524) at 1", "Insert SimpleType: T(506) into MethodDeclaration(524) at 2", "Insert SimpleName: visitLeave(507) into MethodDeclaration(524) at 3", "Insert SingleVariableDeclaration(511) into MethodDeclaration(524) at 4", "Insert SingleVariableDeclaration(518) into MethodDeclaration(524) at 5", "Insert SimpleType: SQLException(520) into MethodDeclaration(524) at 6", "Insert Block(523) into MethodDeclaration(524) at 7", "Insert MarkerAnnotation(526) into MethodDeclaration(539) at 0", "Insert Modifier: public(527) into MethodDeclaration(539) at 1", "Insert PrimitiveType: boolean(528) into MethodDeclaration(539) at 2", "Insert SimpleName: visitEnter(529) into MethodDeclaration(539) at 3", "Insert SingleVariableDeclaration(533) into MethodDeclaration(539) at 4", "Insert SimpleType: SQLException(535) into MethodDeclaration(539) at 5", "Insert Block(538) into MethodDeclaration(539) at 6", "Insert SimpleName: Override(426) into MarkerAnnotation(427) at 0", "Insert SimpleType: ArrayAllComparisonNode(432) into SingleVariableDeclaration(434) at 0", "Insert SimpleName: node(433) into SingleVariableDeclaration(434) at 1", "Insert SimpleName: SQLException(435) into SimpleType: SQLException(436) at 0", "Insert ReturnStatement(438) into Block(439) at 0", "Insert SimpleName: Override(441) into MarkerAnnotation(442) at 0", "Insert SimpleName: T(444) into SimpleType: T(445) at 0", "Insert SimpleType: ArrayAllComparisonNode(448) into SingleVariableDeclaration(450) at 0", "Insert SimpleName: node(449) into SingleVariableDeclaration(450) at 1", "Insert ParameterizedType: List<T>(455) into SingleVariableDeclaration(457) at 0", "Insert SimpleName: l(456) into SingleVariableDeclaration(457) at 1", "Insert SimpleName: SQLException(458) into SimpleType: SQLException(459) at 0", "Insert ReturnStatement(461) into Block(462) at 0", "Insert SimpleName: Override(464) into MarkerAnnotation(465) at 0", "Insert SimpleType: ArrayAnyComparisonNode(470) into SingleVariableDeclaration(472) at 0", "Insert SimpleName: node(471) into SingleVariableDeclaration(472) at 1", "Insert SimpleName: SQLException(473) into SimpleType: SQLException(474) at 0", "Insert ReturnStatement(476) into Block(477) at 0", "Insert SimpleName: Override(479) into MarkerAnnotation(480) at 0", "Insert SimpleName: T(482) into SimpleType: T(483) at 0", "Insert SimpleType: ArrayAnyComparisonNode(486) into SingleVariableDeclaration(488) at 0", "Insert SimpleName: node(487) into SingleVariableDeclaration(488) at 1", "Insert ParameterizedType: List<T>(493) into SingleVariableDeclaration(495) at 0", "Insert SimpleName: l(494) into SingleVariableDeclaration(495) at 1", "Insert SimpleName: SQLException(496) into SimpleType: SQLException(497) at 0", "Insert ReturnStatement(499) into Block(500) at 0", "Insert SimpleName: Override(502) into MarkerAnnotation(503) at 0", "Insert SimpleName: T(505) into SimpleType: T(506) at 0", "Insert SimpleType: ArrayElemRefNode(509) into SingleVariableDeclaration(511) at 0", "Insert SimpleName: node(510) into SingleVariableDeclaration(511) at 1", "Insert ParameterizedType: List<T>(516) into SingleVariableDeclaration(518) at 0", "Insert SimpleName: l(517) into SingleVariableDeclaration(518) at 1", "Insert SimpleName: SQLException(519) into SimpleType: SQLException(520) at 0", "Insert ReturnStatement(522) into Block(523) at 0", "Insert SimpleName: Override(525) into MarkerAnnotation(526) at 0", "Insert SimpleType: ArrayElemRefNode(531) into SingleVariableDeclaration(533) at 0", "Insert SimpleName: node(532) into SingleVariableDeclaration(533) at 1", "Insert SimpleName: SQLException(534) into SimpleType: SQLException(535) at 0", "Insert ReturnStatement(537) into Block(538) at 0", "Insert SimpleName: ArrayAllComparisonNode(431) into SimpleType: ArrayAllComparisonNode(432) at 0", "Insert BooleanLiteral: true(437) into ReturnStatement(438) at 0", "Insert SimpleName: ArrayAllComparisonNode(447) into SimpleType: ArrayAllComparisonNode(448) at 0", "Insert SimpleType: List(452) into ParameterizedType: List<T>(455) at 0", "Insert SimpleType: T(454) into ParameterizedType: List<T>(455) at 1", "Insert NullLiteral(460) into ReturnStatement(461) at 0", "Insert SimpleName: ArrayAnyComparisonNode(469) into SimpleType: ArrayAnyComparisonNode(470) at 0", "Insert BooleanLiteral: true(475) into ReturnStatement(476) at 0", "Insert SimpleName: ArrayAnyComparisonNode(485) into SimpleType: ArrayAnyComparisonNode(486) at 0", "Insert SimpleType: List(490) into ParameterizedType: List<T>(493) at 0", "Insert SimpleType: T(492) into ParameterizedType: List<T>(493) at 1", "Insert NullLiteral(498) into ReturnStatement(499) at 0", "Insert SimpleName: ArrayElemRefNode(508) into SimpleType: ArrayElemRefNode(509) at 0", "Insert SimpleType: List(513) into ParameterizedType: List<T>(516) at 0", "Insert SimpleType: T(515) into ParameterizedType: List<T>(516) at 1", "Insert NullLiteral(521) into ReturnStatement(522) at 0", "Insert SimpleName: ArrayElemRefNode(530) into SimpleType: ArrayElemRefNode(531) at 0", "Insert BooleanLiteral: true(536) into ReturnStatement(537) at 0", "Insert SimpleName: List(451) into SimpleType: List(452) at 0", "Insert SimpleName: T(453) into SimpleType: T(454) at 0", "Insert SimpleName: List(489) into SimpleType: List(490) at 0", "Insert SimpleName: T(491) into SimpleType: T(492) at 0", "Insert SimpleName: List(512) into SimpleType: List(513) at 0", "Insert SimpleName: T(514) into SimpleType: T(515) at 0"]}}, {"TraverseNoParseNodeVisitor_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 49", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleType: ArrayAllComparisonNode to SingleVariableDeclaration at 0", "INS SimpleName: ArrayAllComparisonNode to SimpleType: ArrayAllComparisonNode at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to TypeDeclaration: class at 49", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 6", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleType: SQLException to MethodDeclaration at 5", "INS SimpleName: visitEnter to MethodDeclaration at 3", "INS BooleanLiteral: false to ReturnStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 50", "operations": ["INS SimpleName: l to SingleVariableDeclaration at 1", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: ArrayAllComparisonNode to SimpleType: ArrayAllComparisonNode at 0", "INS Block to MethodDeclaration at 7", "INS SimpleType: T to MethodDeclaration at 2", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: visitLeave to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS NullLiteral to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: ArrayAllComparisonNode to SingleVariableDeclaration at 0", "INS ParameterizedType: List<T> to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: T to SimpleType: T at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: T to ParameterizedType: List<T> at 1", "INS MethodDeclaration to TypeDeclaration: class at 50", "INS SimpleType: SQLException to MethodDeclaration at 6", "INS SimpleType: List to ParameterizedType: List<T> at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 51", "operations": ["INS PrimitiveType: boolean to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: ArrayAnyComparisonNode to SimpleType: ArrayAnyComparisonNode at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: visitEnter to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: ArrayAnyComparisonNode to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 51", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleType: SQLException to MethodDeclaration at 5", "INS SimpleName: SQLException to SimpleType: SQLException at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 52", "operations": ["INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleType: ArrayAnyComparisonNode to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: T to ParameterizedType: List<T> at 1", "INS SimpleName: List to SimpleType: List at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: List to ParameterizedType: List<T> at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: ArrayAnyComparisonNode to SimpleType: ArrayAnyComparisonNode at 0", "INS SimpleType: SQLException to MethodDeclaration at 6", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleName: visitLeave to MethodDeclaration at 3", "INS Block to MethodDeclaration at 7", "INS SimpleName: l to SingleVariableDeclaration at 1", "INS NullLiteral to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS ParameterizedType: List<T> to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 52", "INS SimpleType: T to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 53", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: SQLException to MethodDeclaration at 5", "INS SimpleType: ArrayElemRefNode to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 53", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS BooleanLiteral: false to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: ArrayElemRefNode to SimpleType: ArrayElemRefNode at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 6", "INS ReturnStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: visitEnter to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 54", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleType: T to MethodDeclaration at 2", "INS SimpleName: l to SingleVariableDeclaration at 1", "INS ParameterizedType: List<T> to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: T to ParameterizedType: List<T> at 1", "INS SimpleName: ArrayElemRefNode to SimpleType: ArrayElemRefNode at 0", "INS SimpleName: T to SimpleType: T at 0", "INS NullLiteral to ReturnStatement at 0", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: visitLeave to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS SimpleType: ArrayElemRefNode to SingleVariableDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleType: List to ParameterizedType: List<T> at 0", "INS MethodDeclaration to TypeDeclaration: class at 54", "INS SimpleType: SQLException to MethodDeclaration at 6", "INS SimpleName: T to SimpleType: T at 0"]}]}}, {"TraverseNoParseNodeVisitor_diff": {"operations": ["Insert MethodDeclaration(831) into TypeDeclaration: class(931) at 49", "Insert MethodDeclaration(854) into TypeDeclaration: class(931) at 50", "Insert MethodDeclaration(869) into TypeDeclaration: class(931) at 51", "Insert MethodDeclaration(892) into TypeDeclaration: class(931) at 52", "Insert MethodDeclaration(907) into TypeDeclaration: class(931) at 53", "Insert MethodDeclaration(930) into TypeDeclaration: class(931) at 54", "Insert MarkerAnnotation(818) into MethodDeclaration(831) at 0", "Insert Modifier: public(819) into MethodDeclaration(831) at 1", "Insert PrimitiveType: boolean(820) into MethodDeclaration(831) at 2", "Insert SimpleName: visitEnter(821) into MethodDeclaration(831) at 3", "Insert SingleVariableDeclaration(825) into MethodDeclaration(831) at 4", "Insert SimpleType: SQLException(827) into MethodDeclaration(831) at 5", "Insert Block(830) into MethodDeclaration(831) at 6", "Insert MarkerAnnotation(833) into MethodDeclaration(854) at 0", "Insert Modifier: public(834) into MethodDeclaration(854) at 1", "Insert SimpleType: T(836) into MethodDeclaration(854) at 2", "Insert SimpleName: visitLeave(837) into MethodDeclaration(854) at 3", "Insert SingleVariableDeclaration(841) into MethodDeclaration(854) at 4", "Insert SingleVariableDeclaration(848) into MethodDeclaration(854) at 5", "Insert SimpleType: SQLException(850) into MethodDeclaration(854) at 6", "Insert Block(853) into MethodDeclaration(854) at 7", "Insert MarkerAnnotation(856) into MethodDeclaration(869) at 0", "Insert Modifier: public(857) into MethodDeclaration(869) at 1", "Insert PrimitiveType: boolean(858) into MethodDeclaration(869) at 2", "Insert SimpleName: visitEnter(859) into MethodDeclaration(869) at 3", "Insert SingleVariableDeclaration(863) into MethodDeclaration(869) at 4", "Insert SimpleType: SQLException(865) into MethodDeclaration(869) at 5", "Insert Block(868) into MethodDeclaration(869) at 6", "Insert MarkerAnnotation(871) into MethodDeclaration(892) at 0", "Insert Modifier: public(872) into MethodDeclaration(892) at 1", "Insert SimpleType: T(874) into MethodDeclaration(892) at 2", "Insert SimpleName: visitLeave(875) into MethodDeclaration(892) at 3", "Insert SingleVariableDeclaration(879) into MethodDeclaration(892) at 4", "Insert SingleVariableDeclaration(886) into MethodDeclaration(892) at 5", "Insert SimpleType: SQLException(888) into MethodDeclaration(892) at 6", "Insert Block(891) into MethodDeclaration(892) at 7", "Insert MarkerAnnotation(894) into MethodDeclaration(907) at 0", "Insert Modifier: public(895) into MethodDeclaration(907) at 1", "Insert PrimitiveType: boolean(896) into MethodDeclaration(907) at 2", "Insert SimpleName: visitEnter(897) into MethodDeclaration(907) at 3", "Insert SingleVariableDeclaration(901) into MethodDeclaration(907) at 4", "Insert SimpleType: SQLException(903) into MethodDeclaration(907) at 5", "Insert Block(906) into MethodDeclaration(907) at 6", "Insert MarkerAnnotation(909) into MethodDeclaration(930) at 0", "Insert Modifier: public(910) into MethodDeclaration(930) at 1", "Insert SimpleType: T(912) into MethodDeclaration(930) at 2", "Insert SimpleName: visitLeave(913) into MethodDeclaration(930) at 3", "Insert SingleVariableDeclaration(917) into MethodDeclaration(930) at 4", "Insert SingleVariableDeclaration(924) into MethodDeclaration(930) at 5", "Insert SimpleType: SQLException(926) into MethodDeclaration(930) at 6", "Insert Block(929) into MethodDeclaration(930) at 7", "Insert SimpleName: Override(817) into MarkerAnnotation(818) at 0", "Insert SimpleType: ArrayAllComparisonNode(823) into SingleVariableDeclaration(825) at 0", "Insert SimpleName: node(824) into SingleVariableDeclaration(825) at 1", "Insert SimpleName: SQLException(826) into SimpleType: SQLException(827) at 0", "Insert ReturnStatement(829) into Block(830) at 0", "Insert SimpleName: Override(832) into MarkerAnnotation(833) at 0", "Insert SimpleName: T(835) into SimpleType: T(836) at 0", "Insert SimpleType: ArrayAllComparisonNode(839) into SingleVariableDeclaration(841) at 0", "Insert SimpleName: node(840) into SingleVariableDeclaration(841) at 1", "Insert ParameterizedType: List<T>(846) into SingleVariableDeclaration(848) at 0", "Insert SimpleName: l(847) into SingleVariableDeclaration(848) at 1", "Insert SimpleName: SQLException(849) into SimpleType: SQLException(850) at 0", "Insert ReturnStatement(852) into Block(853) at 0", "Insert SimpleName: Override(855) into MarkerAnnotation(856) at 0", "Insert SimpleType: ArrayAnyComparisonNode(861) into SingleVariableDeclaration(863) at 0", "Insert SimpleName: node(862) into SingleVariableDeclaration(863) at 1", "Insert SimpleName: SQLException(864) into SimpleType: SQLException(865) at 0", "Insert ReturnStatement(867) into Block(868) at 0", "Insert SimpleName: Override(870) into MarkerAnnotation(871) at 0", "Insert SimpleName: T(873) into SimpleType: T(874) at 0", "Insert SimpleType: ArrayAnyComparisonNode(877) into SingleVariableDeclaration(879) at 0", "Insert SimpleName: node(878) into SingleVariableDeclaration(879) at 1", "Insert ParameterizedType: List<T>(884) into SingleVariableDeclaration(886) at 0", "Insert SimpleName: l(885) into SingleVariableDeclaration(886) at 1", "Insert SimpleName: SQLException(887) into SimpleType: SQLException(888) at 0", "Insert ReturnStatement(890) into Block(891) at 0", "Insert SimpleName: Override(893) into MarkerAnnotation(894) at 0", "Insert SimpleType: ArrayElemRefNode(899) into SingleVariableDeclaration(901) at 0", "Insert SimpleName: node(900) into SingleVariableDeclaration(901) at 1", "Insert SimpleName: SQLException(902) into SimpleType: SQLException(903) at 0", "Insert ReturnStatement(905) into Block(906) at 0", "Insert SimpleName: Override(908) into MarkerAnnotation(909) at 0", "Insert SimpleName: T(911) into SimpleType: T(912) at 0", "Insert SimpleType: ArrayElemRefNode(915) into SingleVariableDeclaration(917) at 0", "Insert SimpleName: node(916) into SingleVariableDeclaration(917) at 1", "Insert ParameterizedType: List<T>(922) into SingleVariableDeclaration(924) at 0", "Insert SimpleName: l(923) into SingleVariableDeclaration(924) at 1", "Insert SimpleName: SQLException(925) into SimpleType: SQLException(926) at 0", "Insert ReturnStatement(928) into Block(929) at 0", "Insert SimpleName: ArrayAllComparisonNode(822) into SimpleType: ArrayAllComparisonNode(823) at 0", "Insert BooleanLiteral: false(828) into ReturnStatement(829) at 0", "Insert SimpleName: ArrayAllComparisonNode(838) into SimpleType: ArrayAllComparisonNode(839) at 0", "Insert SimpleType: List(843) into ParameterizedType: List<T>(846) at 0", "Insert SimpleType: T(845) into ParameterizedType: List<T>(846) at 1", "Insert NullLiteral(851) into ReturnStatement(852) at 0", "Insert SimpleName: ArrayAnyComparisonNode(860) into SimpleType: ArrayAnyComparisonNode(861) at 0", "Insert BooleanLiteral: false(866) into ReturnStatement(867) at 0", "Insert SimpleName: ArrayAnyComparisonNode(876) into SimpleType: ArrayAnyComparisonNode(877) at 0", "Insert SimpleType: List(881) into ParameterizedType: List<T>(884) at 0", "Insert SimpleType: T(883) into ParameterizedType: List<T>(884) at 1", "Insert NullLiteral(889) into ReturnStatement(890) at 0", "Insert SimpleName: ArrayElemRefNode(898) into SimpleType: ArrayElemRefNode(899) at 0", "Insert BooleanLiteral: false(904) into ReturnStatement(905) at 0", "Insert SimpleName: ArrayElemRefNode(914) into SimpleType: ArrayElemRefNode(915) at 0", "Insert SimpleType: List(919) into ParameterizedType: List<T>(922) at 0", "Insert SimpleType: T(921) into ParameterizedType: List<T>(922) at 1", "Insert NullLiteral(927) into ReturnStatement(928) at 0", "Insert SimpleName: List(842) into SimpleType: List(843) at 0", "Insert SimpleName: T(844) into SimpleType: T(845) at 0", "Insert SimpleName: List(880) into SimpleType: List(881) at 0", "Insert SimpleName: T(882) into SimpleType: T(883) at 0", "Insert SimpleName: List(918) into SimpleType: List(919) at 0", "Insert SimpleName: T(920) into SimpleType: T(921) at 0"]}}, {"UnsupportedAllParseNodeVisitor_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 45", "operations": ["INS SimpleName: node to MethodInvocation at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: SQLFeatureNotSupportedException to SimpleType: SQLFeatureNotSupportedException at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: visitEnter to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: ArrayAnyComparisonNode to SimpleType: ArrayAnyComparisonNode at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS MethodDeclaration to TypeDeclaration: class at 45", "INS SimpleType: SQLException to MethodDeclaration at 5", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: toString to MethodInvocation at 1", "INS Block to MethodDeclaration at 6", "INS ThrowStatement to Block at 0", "INS SimpleType: SQLFeatureNotSupportedException to ClassInstanceCreation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: ArrayAnyComparisonNode to SingleVariableDeclaration at 0", "INS SimpleName: SQLException to SimpleType: SQLException at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 46", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 46", "INS SimpleType: List to ParameterizedType: List<E> at 0", "INS ParameterizedType: List<E> to SingleVariableDeclaration at 0", "INS SimpleName: visitLeave to MethodDeclaration at 3", "INS SimpleName: ArrayAnyComparisonNode to SimpleType: ArrayAnyComparisonNode at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: l to SingleVariableDeclaration at 1", "INS SimpleType: SQLFeatureNotSupportedException to ClassInstanceCreation at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 7", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleType: E to ParameterizedType: List<E> at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: E to SimpleType: E at 0", "INS ThrowStatement to Block at 0", "INS SimpleType: SQLException to MethodDeclaration at 6", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleType: ArrayAnyComparisonNode to SingleVariableDeclaration at 0", "INS SimpleName: node to MethodInvocation at 0", "INS SimpleName: SQLFeatureNotSupportedException to SimpleType: SQLFeatureNotSupportedException at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleType: E to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: SQLException to SimpleType: SQLException at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 47", "operations": ["INS ThrowStatement to Block at 0", "INS SimpleName: ArrayAllComparisonNode to SimpleType: ArrayAllComparisonNode at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 47", "INS SimpleType: SQLException to MethodDeclaration at 5", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 6", "INS SimpleType: ArrayAllComparisonNode to SingleVariableDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: SQLFeatureNotSupportedException to SimpleType: SQLFeatureNotSupportedException at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: visitEnter to MethodDeclaration at 3", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleName: node to MethodInvocation at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleType: SQLFeatureNotSupportedException to ClassInstanceCreation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 48", "operations": ["INS SimpleType: SQLException to MethodDeclaration at 6", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleName: ArrayAllComparisonNode to SimpleType: ArrayAllComparisonNode at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: E to ParameterizedType: List<E> at 1", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleType: List to ParameterizedType: List<E> at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: visitLeave to MethodDeclaration at 3", "INS SimpleName: SQLFeatureNotSupportedException to SimpleType: SQLFeatureNotSupportedException at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleType: ArrayAllComparisonNode to SingleVariableDeclaration at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: l to SingleVariableDeclaration at 1", "INS SimpleName: node to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: SQLFeatureNotSupportedException to ClassInstanceCreation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ParameterizedType: List<E> to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 7", "INS MethodDeclaration to TypeDeclaration: class at 48", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS SimpleType: E to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: E to SimpleType: E at 0"]}]}}, {"UnsupportedAllParseNodeVisitor_diff": {"operations": ["Insert MethodDeclaration(941) into TypeDeclaration: class(1018) at 45", "Insert MethodDeclaration(969) into TypeDeclaration: class(1018) at 46", "Insert MethodDeclaration(989) into TypeDeclaration: class(1018) at 47", "Insert MethodDeclaration(1017) into TypeDeclaration: class(1018) at 48", "Insert MarkerAnnotation(923) into MethodDeclaration(941) at 0", "Insert Modifier: public(924) into MethodDeclaration(941) at 1", "Insert PrimitiveType: boolean(925) into MethodDeclaration(941) at 2", "Insert SimpleName: visitEnter(926) into MethodDeclaration(941) at 3", "Insert SingleVariableDeclaration(930) into MethodDeclaration(941) at 4", "Insert SimpleType: SQLException(932) into MethodDeclaration(941) at 5", "Insert Block(940) into MethodDeclaration(941) at 6", "Insert MarkerAnnotation(943) into MethodDeclaration(969) at 0", "Insert Modifier: public(944) into MethodDeclaration(969) at 1", "Insert SimpleType: E(946) into MethodDeclaration(969) at 2", "Insert SimpleName: visitLeave(947) into MethodDeclaration(969) at 3", "Insert SingleVariableDeclaration(951) into MethodDeclaration(969) at 4", "Insert SingleVariableDeclaration(958) into MethodDeclaration(969) at 5", "Insert SimpleType: SQLException(960) into MethodDeclaration(969) at 6", "Insert Block(968) into MethodDeclaration(969) at 7", "Insert MarkerAnnotation(971) into MethodDeclaration(989) at 0", "Insert Modifier: public(972) into MethodDeclaration(989) at 1", "Insert PrimitiveType: boolean(973) into MethodDeclaration(989) at 2", "Insert SimpleName: visitEnter(974) into MethodDeclaration(989) at 3", "Insert SingleVariableDeclaration(978) into MethodDeclaration(989) at 4", "Insert SimpleType: SQLException(980) into MethodDeclaration(989) at 5", "Insert Block(988) into MethodDeclaration(989) at 6", "Insert MarkerAnnotation(991) into MethodDeclaration(1017) at 0", "Insert Modifier: public(992) into MethodDeclaration(1017) at 1", "Insert SimpleType: E(994) into MethodDeclaration(1017) at 2", "Insert SimpleName: visitLeave(995) into MethodDeclaration(1017) at 3", "Insert SingleVariableDeclaration(999) into MethodDeclaration(1017) at 4", "Insert SingleVariableDeclaration(1006) into MethodDeclaration(1017) at 5", "Insert SimpleType: SQLException(1008) into MethodDeclaration(1017) at 6", "Insert Block(1016) into MethodDeclaration(1017) at 7", "Insert SimpleName: Override(922) into MarkerAnnotation(923) at 0", "Insert SimpleType: ArrayAnyComparisonNode(928) into SingleVariableDeclaration(930) at 0", "Insert SimpleName: node(929) into SingleVariableDeclaration(930) at 1", "Insert SimpleName: SQLException(931) into SimpleType: SQLException(932) at 0", "Insert ThrowStatement(939) into Block(940) at 0", "Insert SimpleName: Override(942) into MarkerAnnotation(943) at 0", "Insert SimpleName: E(945) into SimpleType: E(946) at 0", "Insert SimpleType: ArrayAnyComparisonNode(949) into SingleVariableDeclaration(951) at 0", "Insert SimpleName: node(950) into SingleVariableDeclaration(951) at 1", "Insert ParameterizedType: List<E>(956) into SingleVariableDeclaration(958) at 0", "Insert SimpleName: l(957) into SingleVariableDeclaration(958) at 1", "Insert SimpleName: SQLException(959) into SimpleType: SQLException(960) at 0", "Insert ThrowStatement(967) into Block(968) at 0", "Insert SimpleName: Override(970) into MarkerAnnotation(971) at 0", "Insert SimpleType: ArrayAllComparisonNode(976) into SingleVariableDeclaration(978) at 0", "Insert SimpleName: node(977) into SingleVariableDeclaration(978) at 1", "Insert SimpleName: SQLException(979) into SimpleType: SQLException(980) at 0", "Insert ThrowStatement(987) into Block(988) at 0", "Insert SimpleName: Override(990) into MarkerAnnotation(991) at 0", "Insert SimpleName: E(993) into SimpleType: E(994) at 0", "Insert SimpleType: ArrayAllComparisonNode(997) into SingleVariableDeclaration(999) at 0", "Insert SimpleName: node(998) into SingleVariableDeclaration(999) at 1", "Insert ParameterizedType: List<E>(1004) into SingleVariableDeclaration(1006) at 0", "Insert SimpleName: l(1005) into SingleVariableDeclaration(1006) at 1", "Insert SimpleName: SQLException(1007) into SimpleType: SQLException(1008) at 0", "Insert ThrowStatement(1015) into Block(1016) at 0", "Insert SimpleName: ArrayAnyComparisonNode(927) into SimpleType: ArrayAnyComparisonNode(928) at 0", "Insert ClassInstanceCreation(938) into ThrowStatement(939) at 0", "Insert SimpleName: ArrayAnyComparisonNode(948) into SimpleType: ArrayAnyComparisonNode(949) at 0", "Insert SimpleType: List(953) into ParameterizedType: List<E>(956) at 0", "Insert SimpleType: E(955) into ParameterizedType: List<E>(956) at 1", "Insert ClassInstanceCreation(966) into ThrowStatement(967) at 0", "Insert SimpleName: ArrayAllComparisonNode(975) into SimpleType: ArrayAllComparisonNode(976) at 0", "Insert ClassInstanceCreation(986) into ThrowStatement(987) at 0", "Insert SimpleName: ArrayAllComparisonNode(996) into SimpleType: ArrayAllComparisonNode(997) at 0", "Insert SimpleType: List(1001) into ParameterizedType: List<E>(1004) at 0", "Insert SimpleType: E(1003) into ParameterizedType: List<E>(1004) at 1", "Insert ClassInstanceCreation(1014) into ThrowStatement(1015) at 0", "Insert SimpleType: SQLFeatureNotSupportedException(934) into ClassInstanceCreation(938) at 0", "Insert MethodInvocation(937) into ClassInstanceCreation(938) at 1", "Insert SimpleName: List(952) into SimpleType: List(953) at 0", "Insert SimpleName: E(954) into SimpleType: E(955) at 0", "Insert SimpleType: SQLFeatureNotSupportedException(962) into ClassInstanceCreation(966) at 0", "Insert MethodInvocation(965) into ClassInstanceCreation(966) at 1", "Insert SimpleType: SQLFeatureNotSupportedException(982) into ClassInstanceCreation(986) at 0", "Insert MethodInvocation(985) into ClassInstanceCreation(986) at 1", "Insert SimpleName: List(1000) into SimpleType: List(1001) at 0", "Insert SimpleName: E(1002) into SimpleType: E(1003) at 0", "Insert SimpleType: SQLFeatureNotSupportedException(1010) into ClassInstanceCreation(1014) at 0", "Insert MethodInvocation(1013) into ClassInstanceCreation(1014) at 1", "Insert SimpleName: SQLFeatureNotSupportedException(933) into SimpleType: SQLFeatureNotSupportedException(934) at 0", "Insert SimpleName: node(935) into MethodInvocation(937) at 0", "Insert SimpleName: toString(936) into MethodInvocation(937) at 1", "Insert SimpleName: SQLFeatureNotSupportedException(961) into SimpleType: SQLFeatureNotSupportedException(962) at 0", "Insert SimpleName: node(963) into MethodInvocation(965) at 0", "Insert SimpleName: toString(964) into MethodInvocation(965) at 1", "Insert SimpleName: SQLFeatureNotSupportedException(981) into SimpleType: SQLFeatureNotSupportedException(982) at 0", "Insert SimpleName: node(983) into MethodInvocation(985) at 0", "Insert SimpleName: toString(984) into MethodInvocation(985) at 1", "Insert SimpleName: SQLFeatureNotSupportedException(1009) into SimpleType: SQLFeatureNotSupportedException(1010) at 0", "Insert SimpleName: node(1011) into MethodInvocation(1013) at 0", "Insert SimpleName: toString(1012) into MethodInvocation(1013) at 1"]}}, {"PArrayDataType_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: org.apache.phoenix.expression.Expression to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS QualifiedName: org.apache.phoenix.schema.tuple.Tuple to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: ptr to MethodInvocation at 1", "INS Modifier: static to MethodDeclaration at 1", "INS SimpleName: tuple to MethodInvocation at 2", "INS SimpleType: PDataType to SingleVariableDeclaration at 0", "INS SimpleType: ImmutableBytesWritable to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS SimpleName: Tuple to SimpleType: Tuple at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS IfStatement to IfStatement at 2", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: tuple to SingleVariableDeclaration at 1", "INS SimpleName: index to InfixExpression: - at 0", "INS SingleVariableDeclaration to MethodDeclaration at 9", "INS ReturnStatement to Block at 2", "INS Block to IfStatement at 1", "INS SimpleName: pDataType to MethodInvocation at 3", "INS SimpleName: index to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: ptr to MethodInvocation at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: ptr to MethodInvocation at 3", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS IfStatement to Block at 0", "INS SimpleName: arrayExpr to SingleVariableDeclaration at 1", "INS MethodInvocation to InfixExpression: == at 0", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS SimpleName: ImmutableBytesWritable to SimpleType: ImmutableBytesWritable at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to MethodDeclaration at 10", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: Expression to SimpleType: Expression at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS ReturnStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS SimpleName: arrayExpr to MethodInvocation at 0", "INS SimpleName: maxLen to MethodInvocation at 4", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleName: ptr to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: PDataType to SimpleType: PDataType at 0", "INS SimpleName: positionAtArrayElement to MethodDeclaration at 3", "INS SimpleType: Expression to SingleVariableDeclaration at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: maxLen to SingleVariableDeclaration at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: positionAtArrayElement to MethodInvocation at 0", "INS InfixExpression: - to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS SimpleName: evaluate to MethodInvocation at 1", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: pDataType to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 1", "INS SimpleType: Tuple to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: getLength to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS SimpleName: offset to InfixExpression: + at 1", "INS SimpleName: ptr to SingleVariableDeclaration at 1", "INS QualifiedName: QueryConstants.SEPARATOR_BYTE to InfixExpression: == at 1", "INS SimpleName: currOffset to InfixExpression: + at 0", "INS InfixExpression: + to ArrayAccess at 1", "INS ExpressionStatement to Block at 1", "INS IfStatement to Block at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: offset to SingleVariableDeclaration at 1", "INS SimpleName: getLength to MethodInvocation at 1", "INS SimpleName: Bytes to MethodInvocation at 0", "INS SimpleName: offset to Assignment: += at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: set to MethodInvocation at 1", "INS SimpleName: elementLength to MethodInvocation at 4", "INS SimpleName: count to InfixExpression: < at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS SimpleName: bytes to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS NumberLiteral: 1 to InfixExpression: - at 1", "INS SimpleName: offset to InfixExpression: + at 1", "INS SimpleType: PDataType to SingleVariableDeclaration at 0", "INS SimpleName: baseDataType to MethodInvocation at 0", "INS SimpleName: indexOffset to InfixExpression: - at 0", "INS Block to IfStatement at 1", "INS SimpleName: toInt to MethodInvocation at 1", "INS InfixExpression: == to ConditionalExpression at 0", "INS MethodInvocation to InfixExpression: - at 0", "INS SimpleName: offset to InfixExpression: + at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to InfixExpression: + at 0", "INS SimpleName: offset to MethodInvocation at 3", "INS SimpleName: getOffset to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS IfStatement to Block at 2", "INS SimpleName: set to MethodInvocation at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS NumberLiteral: 1 to InfixExpression: - at 2", "INS NumberLiteral: 1 to InfixExpression: + at 1", "INS InfixExpression: + to MethodInvocation at 3", "INS IfStatement to Block at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ConditionalExpression to Assignment: = at 1", "INS SimpleName: offset to InfixExpression: + at 0", "INS SimpleName: ImmutableBytesWritable to SimpleType: ImmutableBytesWritable at 0", "INS SimpleName: bytes to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: noOfElements to SingleVariableDeclaration at 1", "INS VariableDeclarationStatement to Block at 0", "INS InfixExpression: + to InfixExpression: - at 0", "INS SimpleName: bytes to MethodInvocation at 1", "INS SimpleName: bytes to ArrayAccess at 0", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to InfixExpression: + at 1", "INS ArrayAccess to InfixExpression: == at 0", "INS SingleVariableDeclaration to MethodDeclaration at 11", "INS SimpleName: count to VariableDeclarationFragment at 0", "INS SimpleName: length to InfixExpression: + at 1", "INS SimpleName: indexOffset to VariableDeclarationFragment at 0", "INS SimpleName: offset to InfixExpression: + at 1", "INS InfixExpression: == to ConditionalExpression at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS PrefixExpression: ! to IfStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: arrayIndex to SingleVariableDeclaration at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: bytes to MethodInvocation at 2", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleType: ImmutableBytesWritable to SingleVariableDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: byteSize to ConditionalExpression at 2", "INS SimpleName: ptr to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: elemByteSize to VariableDeclarationFragment at 0", "INS NumberLiteral: 0 to ConditionalExpression at 1", "INS MethodInvocation to InfixExpression: + at 0", "INS SimpleName: baseDataType to SingleVariableDeclaration at 1", "INS SimpleName: length to SingleVariableDeclaration at 1", "INS VariableDeclarationStatement to Block at 0", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS Block to IfStatement at 1", "INS InfixExpression: * to InfixExpression: + at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: byteSize to SingleVariableDeclaration at 1", "INS ParenthesizedExpression to InfixExpression: - at 1", "INS SimpleName: first to IfStatement at 0", "INS QualifiedName: Bytes.SIZEOF_INT to MethodInvocation at 4", "INS ParenthesizedExpression to MethodInvocation at 3", "INS SimpleName: elemByteSize to MethodInvocation at 4", "INS SimpleName: useShort to VariableDeclarationFragment at 0", "INS QualifiedName: QueryConstants.SEPARATOR_BYTE to InfixExpression: == at 1", "INS SimpleName: indexOffset to MethodInvocation at 4", "INS Block to IfStatement at 2", "INS ArrayAccess to InfixExpression: == at 0", "INS SimpleName: currOffset to VariableDeclarationFragment at 0", "INS InfixExpression: * to Assignment: += at 1", "INS SimpleName: bytes to MethodInvocation at 2", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: ptr to MethodInvocation at 0", "INS Block to IfStatement at 2", "INS QualifiedName: Bytes.SIZEOF_BYTE to InfixExpression: + at 0", "INS SingleVariableDeclaration to MethodDeclaration at 10", "INS Assignment: += to ExpressionStatement at 0", "INS ParenthesizedExpression to MethodInvocation at 3", "INS SimpleName: arrayIndex to InfixExpression: * at 0", "INS Modifier: static to MethodDeclaration at 1", "INS InfixExpression: + to ArrayAccess at 1", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: byteSize to InfixExpression: == at 0", "INS InfixExpression: + to ParenthesizedExpression at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: arrayIndex to MethodInvocation at 2", "INS SimpleName: elementLength to Assignment: = at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NullLiteral to InfixExpression: == at 1", "INS InfixExpression: + to InfixExpression: >= at 1", "INS SimpleName: Bytes to MethodInvocation at 0", "INS SimpleName: getOffset to MethodInvocation at 1", "INS SimpleName: arrayIndex to InfixExpression: + at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: useShort to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: toInt to MethodInvocation at 1", "INS ParenthesizedExpression to InfixExpression: - at 1", "INS SimpleName: offset to InfixExpression: >= at 0", "INS NumberLiteral: 2 to InfixExpression: * at 0", "INS ExpressionStatement to Block at 0", "INS QualifiedName: Bytes.SIZEOF_BYTE to InfixExpression: + at 0", "INS SimpleName: getOffset to MethodInvocation at 0", "INS SimpleName: noOfElements to InfixExpression: >= at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS NumberLiteral: 0 to InfixExpression: < at 1", "INS QualifiedName: Bytes.SIZEOF_INT to InfixExpression: * at 1", "INS InfixExpression: - to ConditionalExpression at 2", "INS SimpleName: bytes to ArrayAccess at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: count to PrefixExpression: - at 0", "INS SimpleName: count to Assignment: = at 0", "INS InfixExpression: + to InfixExpression: - at 0", "INS InfixExpression: - to ConditionalExpression at 2", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS Block to IfStatement at 2", "INS SimpleName: elementLength to VariableDeclarationFragment at 0", "INS QualifiedName: Bytes.SIZEOF_INT to InfixExpression: + at 1", "INS SimpleName: ptr to MethodInvocation at 0", "INS SimpleName: elemByteSize to InfixExpression: * at 1", "INS SimpleName: ptr to MethodInvocation at 0", "INS SimpleName: bytes to MethodInvocation at 1", "INS SimpleName: arrayIndex to InfixExpression: >= at 0", "INS SimpleName: currOffset to InfixExpression: + at 0", "INS Block to IfStatement at 2", "INS InfixExpression: >= to IfStatement at 0", "INS IfStatement to Block at 2", "INS ParenthesizedExpression to VariableDeclarationFragment at 1", "INS MethodInvocation to ConditionalExpression at 1", "INS SimpleName: getByteSize to MethodInvocation at 1", "INS InfixExpression: + to ParenthesizedExpression at 0", "INS InfixExpression: - to ParenthesizedExpression at 0", "INS InfixExpression: == to ConditionalExpression at 0", "INS SimpleName: currOffset to InfixExpression: + at 0", "INS VariableDeclarationStatement to Block at 0", "INS InfixExpression: - to ParenthesizedExpression at 0", "INS InfixExpression: == to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: useShort to MethodInvocation at 3", "INS SimpleName: baseDataType to MethodInvocation at 0", "INS SimpleName: first to SingleVariableDeclaration at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: length to InfixExpression: + at 1", "INS SimpleName: currOffset to InfixExpression: - at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: offset to InfixExpression: + at 0", "INS SimpleName: bytes to VariableDeclarationFragment at 0", "INS SimpleName: useShort to Assignment: = at 0", "INS PrefixExpression: - to Assignment: = at 1", "INS InfixExpression: < to IfStatement at 0", "INS ExpressionStatement to Block at 0", "INS InfixExpression: + to ParenthesizedExpression at 0", "INS SimpleName: arrayIndex to InfixExpression: == at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: noOfElements to InfixExpression: - at 0", "INS Dimension to ArrayType: byte[] at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: PDataType to SimpleType: PDataType at 0", "INS Block to IfStatement at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS IfStatement to Block at 1", "INS IfStatement to Block at 2", "INS SingleVariableDeclaration to MethodDeclaration at 9", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS Block to MethodDeclaration at 12", "INS NumberLiteral: 3 to InfixExpression: - at 2", "INS BooleanLiteral: false to Assignment: = at 1", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS ConditionalExpression to Assignment: = at 1", "INS BooleanLiteral: true to VariableDeclarationFragment at 1", "INS SimpleName: get to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS ParenthesizedExpression to InfixExpression: == at 1", "INS SimpleName: offset to InfixExpression: + at 1", "INS ParenthesizedExpression to InfixExpression: - at 1", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS NumberLiteral: 0 to ConditionalExpression at 1", "INS InfixExpression: - to ParenthesizedExpression at 0", "INS SimpleName: positionAtArrayElement to MethodDeclaration at 3", "INS InfixExpression: >= to IfStatement at 0", "INS SimpleName: elementLength to Assignment: = at 0", "INS ConditionalExpression to ParenthesizedExpression at 0", "INS SimpleName: isFixedWidth to MethodInvocation at 1", "INS SimpleName: currOffset to InfixExpression: + at 0", "INS SimpleName: indexOffset to MethodInvocation at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS SimpleName: ptr to MethodInvocation at 0"]}]}}, {"PArrayDataType_diff": {"operations": ["Insert ImportDeclaration(15) into CompilationUnit(2889) at 7", "Insert ImportDeclaration(19) into CompilationUnit(2889) at 9", "Insert QualifiedName: org.apache.phoenix.expression.Expression(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: org.apache.phoenix.schema.tuple.Tuple(18) into ImportDeclaration(19) at 0", "Insert MethodDeclaration(1077) into TypeDeclaration: class(2888) at 17", "Insert MethodDeclaration(1561) into TypeDeclaration: class(2888) at 19", "Insert Modifier: public(1019) into MethodDeclaration(1077) at 0", "Insert Modifier: static(1020) into MethodDeclaration(1077) at 1", "Insert PrimitiveType: boolean(1021) into MethodDeclaration(1077) at 2", "Insert SimpleName: positionAtArrayElement(1022) into MethodDeclaration(1077) at 3", "Insert SingleVariableDeclaration(1026) into MethodDeclaration(1077) at 4", "Insert SingleVariableDeclaration(1030) into MethodDeclaration(1077) at 5", "Insert SingleVariableDeclaration(1033) into MethodDeclaration(1077) at 6", "Insert SingleVariableDeclaration(1037) into MethodDeclaration(1077) at 7", "Insert SingleVariableDeclaration(1041) into MethodDeclaration(1077) at 8", "Insert SingleVariableDeclaration(1045) into MethodDeclaration(1077) at 9", "Insert Block(1076) into MethodDeclaration(1077) at 10", "Insert Modifier: public(1331) into MethodDeclaration(1561) at 0", "Insert Modifier: static(1332) into MethodDeclaration(1561) at 1", "Insert PrimitiveType: void(1333) into MethodDeclaration(1561) at 2", "Insert SimpleName: positionAtArrayElement(1334) into MethodDeclaration(1561) at 3", "Insert SingleVariableDeclaration(1338) into MethodDeclaration(1561) at 4", "Insert SingleVariableDeclaration(1341) into MethodDeclaration(1561) at 5", "Insert SingleVariableDeclaration(1345) into MethodDeclaration(1561) at 6", "Insert SingleVariableDeclaration(1349) into MethodDeclaration(1561) at 7", "Insert SingleVariableDeclaration(1352) into MethodDeclaration(1561) at 8", "Insert SingleVariableDeclaration(1355) into MethodDeclaration(1561) at 9", "Insert SingleVariableDeclaration(1358) into MethodDeclaration(1561) at 10", "Insert SingleVariableDeclaration(1361) into MethodDeclaration(1561) at 11", "Insert Block(1560) into MethodDeclaration(1561) at 12", "Insert SimpleType: Tuple(1024) into SingleVariableDeclaration(1026) at 0", "Insert SimpleName: tuple(1025) into SingleVariableDeclaration(1026) at 1", "Insert SimpleType: ImmutableBytesWritable(1028) into SingleVariableDeclaration(1030) at 0", "Insert SimpleName: ptr(1029) into SingleVariableDeclaration(1030) at 1", "Insert PrimitiveType: int(1031) into SingleVariableDeclaration(1033) at 0", "Insert SimpleName: index(1032) into SingleVariableDeclaration(1033) at 1", "Insert SimpleType: Expression(1035) into SingleVariableDeclaration(1037) at 0", "Insert SimpleName: arrayExpr(1036) into SingleVariableDeclaration(1037) at 1", "Insert SimpleType: PDataType(1039) into SingleVariableDeclaration(1041) at 0", "Insert SimpleName: pDataType(1040) into SingleVariableDeclaration(1041) at 1", "Insert SimpleType: Integer(1043) into SingleVariableDeclaration(1045) at 0", "Insert SimpleName: maxLen(1044) into SingleVariableDeclaration(1045) at 1", "Insert IfStatement(1064) into Block(1076) at 0", "Insert ExpressionStatement(1073) into Block(1076) at 1", "Insert ReturnStatement(1075) into Block(1076) at 2", "Insert SimpleType: ImmutableBytesWritable(1336) into SingleVariableDeclaration(1338) at 0", "Insert SimpleName: ptr(1337) into SingleVariableDeclaration(1338) at 1", "Insert PrimitiveType: int(1339) into SingleVariableDeclaration(1341) at 0", "Insert SimpleName: arrayIndex(1340) into SingleVariableDeclaration(1341) at 1", "Insert SimpleType: PDataType(1343) into SingleVariableDeclaration(1345) at 0", "Insert SimpleName: baseDataType(1344) into SingleVariableDeclaration(1345) at 1", "Insert SimpleType: Integer(1347) into SingleVariableDeclaration(1349) at 0", "Insert SimpleName: byteSize(1348) into SingleVariableDeclaration(1349) at 1", "Insert PrimitiveType: int(1350) into SingleVariableDeclaration(1352) at 0", "Insert SimpleName: offset(1351) into SingleVariableDeclaration(1352) at 1", "Insert PrimitiveType: int(1353) into SingleVariableDeclaration(1355) at 0", "Insert SimpleName: length(1354) into SingleVariableDeclaration(1355) at 1", "Insert PrimitiveType: int(1356) into SingleVariableDeclaration(1358) at 0", "Insert SimpleName: noOfElements(1357) into SingleVariableDeclaration(1358) at 1", "Insert PrimitiveType: boolean(1359) into SingleVariableDeclaration(1361) at 0", "Insert SimpleName: first(1360) into SingleVariableDeclaration(1361) at 1", "Insert VariableDeclarationStatement(1370) into Block(1560) at 0", "Insert IfStatement(1559) into Block(1560) at 1", "Insert SimpleName: Tuple(1023) into SimpleType: Tuple(1024) at 0", "Insert SimpleName: ImmutableBytesWritable(1027) into SimpleType: ImmutableBytesWritable(1028) at 0", "Insert SimpleName: Expression(1034) into SimpleType: Expression(1035) at 0", "Insert SimpleName: PDataType(1038) into SimpleType: PDataType(1039) at 0", "Insert SimpleName: Integer(1042) into SimpleType: Integer(1043) at 0", "Insert PrefixExpression: !(1051) into IfStatement(1064) at 0", "Insert Block(1054) into IfStatement(1064) at 1", "Insert IfStatement(1063) into IfStatement(1064) at 2", "Insert MethodInvocation(1072) into ExpressionStatement(1073) at 0", "Insert BooleanLiteral: true(1074) into ReturnStatement(1075) at 0", "Insert SimpleName: ImmutableBytesWritable(1335) into SimpleType: ImmutableBytesWritable(1336) at 0", "Insert SimpleName: PDataType(1342) into SimpleType: PDataType(1343) at 0", "Insert SimpleName: Integer(1346) into SimpleType: Integer(1347) at 0", "Insert ArrayType: byte[](1364) into VariableDeclarationStatement(1370) at 0", "Insert VariableDeclarationFragment(1369) into VariableDeclarationStatement(1370) at 1", "Insert PrefixExpression: !(1374) into IfStatement(1559) at 0", "Insert Block(1522) into IfStatement(1559) at 1", "Insert Block(1558) into IfStatement(1559) at 2", "Insert MethodInvocation(1050) into PrefixExpression: !(1051) at 0", "Insert ReturnStatement(1053) into Block(1054) at 0", "Insert InfixExpression: ==(1059) into IfStatement(1063) at 0", "Insert Block(1062) into IfStatement(1063) at 1", "Insert SimpleName: positionAtArrayElement(1065) into MethodInvocation(1072) at 0", "Insert SimpleName: ptr(1066) into MethodInvocation(1072) at 1", "Insert InfixExpression: -(1069) into MethodInvocation(1072) at 2", "Insert SimpleName: pDataType(1070) into MethodInvocation(1072) at 3", "Insert SimpleName: maxLen(1071) into MethodInvocation(1072) at 4", "Insert PrimitiveType: byte(1362) into ArrayType: byte[](1364) at 0", "Insert Dimension(1363) into ArrayType: byte[](1364) at 1", "Insert SimpleName: bytes(1365) into VariableDeclarationFragment(1369) at 0", "Insert MethodInvocation(1368) into VariableDeclarationFragment(1369) at 1", "Insert MethodInvocation(1373) into PrefixExpression: !(1374) at 0", "Insert VariableDeclarationStatement(1395) into Block(1522) at 0", "Insert VariableDeclarationStatement(1400) into Block(1522) at 1", "Insert IfStatement(1439) into Block(1522) at 2", "Insert IfStatement(1521) into Block(1522) at 3", "Insert VariableDeclarationStatement(1535) into Block(1558) at 0", "Insert ExpressionStatement(1541) into Block(1558) at 1", "Insert IfStatement(1557) into Block(1558) at 2", "Insert SimpleName: arrayExpr(1046) into MethodInvocation(1050) at 0", "Insert SimpleName: evaluate(1047) into MethodInvocation(1050) at 1", "Insert SimpleName: tuple(1048) into MethodInvocation(1050) at 2", "Insert SimpleName: ptr(1049) into MethodInvocation(1050) at 3", "Insert BooleanLiteral: false(1052) into ReturnStatement(1053) at 0", "Insert MethodInvocation(1057) into InfixExpression: ==(1059) at 0", "Insert NumberLiteral: 0(1058) into InfixExpression: ==(1059) at 1", "Insert ReturnStatement(1061) into Block(1062) at 0", "Insert SimpleName: index(1067) into InfixExpression: -(1069) at 0", "Insert NumberLiteral: 1(1068) into InfixExpression: -(1069) at 1", "Insert SimpleName: ptr(1366) into MethodInvocation(1368) at 0", "Insert SimpleName: get(1367) into MethodInvocation(1368) at 1", "Insert SimpleName: baseDataType(1371) into MethodInvocation(1373) at 0", "Insert SimpleName: isFixedWidth(1372) into MethodInvocation(1373) at 1", "Insert PrimitiveType: int(1375) into VariableDeclarationStatement(1395) at 0", "Insert VariableDeclarationFragment(1394) into VariableDeclarationStatement(1395) at 1", "Insert PrimitiveType: boolean(1396) into VariableDeclarationStatement(1400) at 0", "Insert VariableDeclarationFragment(1399) into VariableDeclarationStatement(1400) at 1", "Insert SimpleName: first(1401) into IfStatement(1439) at 0", "Insert Block(1438) into IfStatement(1439) at 1", "Insert InfixExpression: >=(1442) into IfStatement(1521) at 0", "Insert Block(1444) into IfStatement(1521) at 1", "Insert Block(1520) into IfStatement(1521) at 2", "Insert PrimitiveType: int(1523) into VariableDeclarationStatement(1535) at 0", "Insert VariableDeclarationFragment(1534) into VariableDeclarationStatement(1535) at 1", "Insert Assignment: +=(1540) into ExpressionStatement(1541) at 0", "Insert InfixExpression: >=(1546) into IfStatement(1557) at 0", "Insert Block(1548) into IfStatement(1557) at 1", "Insert Block(1556) into IfStatement(1557) at 2", "Insert SimpleName: ptr(1055) into MethodInvocation(1057) at 0", "Insert SimpleName: getLength(1056) into MethodInvocation(1057) at 1", "Insert BooleanLiteral: true(1060) into ReturnStatement(1061) at 0", "Insert SimpleName: indexOffset(1376) into VariableDeclarationFragment(1394) at 0", "Insert InfixExpression: +(1393) into VariableDeclarationFragment(1394) at 1", "Insert SimpleName: useShort(1397) into VariableDeclarationFragment(1399) at 0", "Insert BooleanLiteral: true(1398) into VariableDeclarationFragment(1399) at 1", "Insert VariableDeclarationStatement(1423) into Block(1438) at 0", "Insert IfStatement(1437) into Block(1438) at 1", "Insert SimpleName: arrayIndex(1440) into InfixExpression: >=(1442) at 0", "Insert SimpleName: noOfElements(1441) into InfixExpression: >=(1442) at 1", "Insert ReturnStatement(1443) into Block(1444) at 0", "Insert VariableDeclarationStatement(1454) into Block(1520) at 0", "Insert VariableDeclarationStatement(1459) into Block(1520) at 1", "Insert IfStatement(1510) into Block(1520) at 2", "Insert ExpressionStatement(1519) into Block(1520) at 3", "Insert SimpleName: elemByteSize(1524) into VariableDeclarationFragment(1534) at 0", "Insert ParenthesizedExpression(1533) into VariableDeclarationFragment(1534) at 1", "Insert SimpleName: offset(1536) into Assignment: +=(1540) at 0", "Insert InfixExpression: *(1539) into Assignment: +=(1540) at 1", "Insert SimpleName: offset(1542) into InfixExpression: >=(1546) at 0", "Insert InfixExpression: +(1545) into InfixExpression: >=(1546) at 1", "Insert ReturnStatement(1547) into Block(1548) at 0", "Insert ExpressionStatement(1555) into Block(1556) at 0", "Insert MethodInvocation(1391) into InfixExpression: +(1393) at 0", "Insert SimpleName: offset(1392) into InfixExpression: +(1393) at 1", "Insert PrimitiveType: int(1402) into VariableDeclarationStatement(1423) at 0", "Insert VariableDeclarationFragment(1422) into VariableDeclarationStatement(1423) at 1", "Insert InfixExpression: <(1426) into IfStatement(1437) at 0", "Insert Block(1436) into IfStatement(1437) at 1", "Insert PrimitiveType: int(1445) into VariableDeclarationStatement(1454) at 0", "Insert VariableDeclarationFragment(1453) into VariableDeclarationStatement(1454) at 1", "Insert PrimitiveType: int(1455) into VariableDeclarationStatement(1459) at 0", "Insert VariableDeclarationFragment(1458) into VariableDeclarationStatement(1459) at 1", "Insert InfixExpression: ==(1465) into IfStatement(1510) at 0", "Insert Block(1485) into IfStatement(1510) at 1", "Insert Block(1509) into IfStatement(1510) at 2", "Insert MethodInvocation(1518) into ExpressionStatement(1519) at 0", "Insert ConditionalExpression(1532) into ParenthesizedExpression(1533) at 0", "Insert SimpleName: arrayIndex(1537) into InfixExpression: *(1539) at 0", "Insert SimpleName: elemByteSize(1538) into InfixExpression: *(1539) at 1", "Insert SimpleName: offset(1543) into InfixExpression: +(1545) at 0", "Insert SimpleName: length(1544) into InfixExpression: +(1545) at 1", "Insert MethodInvocation(1554) into ExpressionStatement(1555) at 0", "Insert SimpleName: Bytes(1377) into MethodInvocation(1391) at 0", "Insert SimpleName: toInt(1378) into MethodInvocation(1391) at 1", "Insert SimpleName: bytes(1379) into MethodInvocation(1391) at 2", "Insert ParenthesizedExpression(1390) into MethodInvocation(1391) at 3", "Insert SimpleName: count(1403) into VariableDeclarationFragment(1422) at 0", "Insert MethodInvocation(1421) into VariableDeclarationFragment(1422) at 1", "Insert SimpleName: count(1424) into InfixExpression: <(1426) at 0", "Insert NumberLiteral: 0(1425) into InfixExpression: <(1426) at 1", "Insert ExpressionStatement(1431) into Block(1436) at 0", "Insert ExpressionStatement(1435) into Block(1436) at 1", "Insert SimpleName: currOffset(1446) into VariableDeclarationFragment(1453) at 0", "Insert MethodInvocation(1452) into VariableDeclarationFragment(1453) at 1", "Insert SimpleName: elementLength(1456) into VariableDeclarationFragment(1458) at 0", "Insert NumberLiteral: 0(1457) into VariableDeclarationFragment(1458) at 1", "Insert SimpleName: arrayIndex(1460) into InfixExpression: ==(1465) at 0", "Insert ParenthesizedExpression(1464) into InfixExpression: ==(1465) at 1", "Insert ExpressionStatement(1484) into Block(1485) at 0", "Insert ExpressionStatement(1508) into Block(1509) at 0", "Insert SimpleName: ptr(1511) into MethodInvocation(1518) at 0", "Insert SimpleName: set(1512) into MethodInvocation(1518) at 1", "Insert SimpleName: bytes(1513) into MethodInvocation(1518) at 2", "Insert InfixExpression: +(1516) into MethodInvocation(1518) at 3", "Insert SimpleName: elementLength(1517) into MethodInvocation(1518) at 4", "Insert InfixExpression: ==(1527) into ConditionalExpression(1532) at 0", "Insert MethodInvocation(1530) into ConditionalExpression(1532) at 1", "Insert SimpleName: byteSize(1531) into ConditionalExpression(1532) at 2", "Insert SimpleName: ptr(1549) into MethodInvocation(1554) at 0", "Insert SimpleName: set(1550) into MethodInvocation(1554) at 1", "Insert SimpleName: bytes(1551) into MethodInvocation(1554) at 2", "Insert SimpleName: offset(1552) into MethodInvocation(1554) at 3", "Insert SimpleName: elemByteSize(1553) into MethodInvocation(1554) at 4", "Insert InfixExpression: -(1389) into ParenthesizedExpression(1390) at 0", "Insert SimpleName: Bytes(1404) into MethodInvocation(1421) at 0", "Insert SimpleName: toInt(1405) into MethodInvocation(1421) at 1", "Insert SimpleName: bytes(1406) into MethodInvocation(1421) at 2", "Insert ParenthesizedExpression(1419) into MethodInvocation(1421) at 3", "Insert QualifiedName: Bytes.SIZEOF_INT(1420) into MethodInvocation(1421) at 4", "Insert Assignment: =(1430) into ExpressionStatement(1431) at 0", "Insert Assignment: =(1434) into ExpressionStatement(1435) at 0", "Insert SimpleName: getOffset(1447) into MethodInvocation(1452) at 0", "Insert SimpleName: bytes(1448) into MethodInvocation(1452) at 1", "Insert SimpleName: arrayIndex(1449) into MethodInvocation(1452) at 2", "Insert SimpleName: useShort(1450) into MethodInvocation(1452) at 3", "Insert SimpleName: indexOffset(1451) into MethodInvocation(1452) at 4", "Insert InfixExpression: -(1463) into ParenthesizedExpression(1464) at 0", "Insert Assignment: =(1483) into ExpressionStatement(1484) at 0", "Insert Assignment: =(1507) into ExpressionStatement(1508) at 0", "Insert SimpleName: currOffset(1514) into InfixExpression: +(1516) at 0", "Insert SimpleName: offset(1515) into InfixExpression: +(1516) at 1", "Insert SimpleName: byteSize(1525) into InfixExpression: ==(1527) at 0", "Insert NullLiteral(1526) into InfixExpression: ==(1527) at 1", "Insert SimpleName: baseDataType(1528) into MethodInvocation(1530) at 0", "Insert SimpleName: getByteSize(1529) into MethodInvocation(1530) at 1", "Insert InfixExpression: +(1382) into InfixExpression: -(1389) at 0", "Insert ParenthesizedExpression(1388) into InfixExpression: -(1389) at 1", "Insert InfixExpression: -(1418) into ParenthesizedExpression(1419) at 0", "Insert SimpleName: count(1427) into Assignment: =(1430) at 0", "Insert PrefixExpression: -(1429) into Assignment: =(1430) at 1", "Insert SimpleName: useShort(1432) into Assignment: =(1434) at 0", "Insert BooleanLiteral: false(1433) into Assignment: =(1434) at 1", "Insert SimpleName: noOfElements(1461) into InfixExpression: -(1463) at 0", "Insert NumberLiteral: 1(1462) into InfixExpression: -(1463) at 1", "Insert SimpleName: elementLength(1466) into Assignment: =(1483) at 0", "Insert ConditionalExpression(1482) into Assignment: =(1483) at 1", "Insert SimpleName: elementLength(1486) into Assignment: =(1507) at 0", "Insert ConditionalExpression(1506) into Assignment: =(1507) at 1", "Insert SimpleName: offset(1380) into InfixExpression: +(1382) at 0", "Insert SimpleName: length(1381) into InfixExpression: +(1382) at 1", "Insert InfixExpression: +(1387) into ParenthesizedExpression(1388) at 0", "Insert InfixExpression: +(1413) into InfixExpression: -(1418) at 0", "Insert ParenthesizedExpression(1417) into InfixExpression: -(1418) at 1", "Insert SimpleName: count(1428) into PrefixExpression: -(1429) at 0", "Insert InfixExpression: ==(1473) into ConditionalExpression(1482) at 0", "Insert NumberLiteral: 0(1474) into ConditionalExpression(1482) at 1", "Insert InfixExpression: -(1481) into ConditionalExpression(1482) at 2", "Insert InfixExpression: ==(1493) into ConditionalExpression(1506) at 0", "Insert NumberLiteral: 0(1494) into ConditionalExpression(1506) at 1", "Insert InfixExpression: -(1505) into ConditionalExpression(1506) at 2", "Insert QualifiedName: Bytes.SIZEOF_BYTE(1383) into InfixExpression: +(1387) at 0", "Insert InfixExpression: *(1386) into InfixExpression: +(1387) at 1", "Insert MethodInvocation(1409) into InfixExpression: +(1413) at 0", "Insert MethodInvocation(1412) into InfixExpression: +(1413) at 1", "Insert InfixExpression: +(1416) into ParenthesizedExpression(1417) at 0", "Insert ArrayAccess(1471) into InfixExpression: ==(1473) at 0", "Insert QualifiedName: QueryConstants.SEPARATOR_BYTE(1472) into InfixExpression: ==(1473) at 1", "Insert SimpleName: indexOffset(1475) into InfixExpression: -(1481) at 0", "Insert ParenthesizedExpression(1479) into InfixExpression: -(1481) at 1", "Insert NumberLiteral: 3(1480) into InfixExpression: -(1481) at 2", "Insert ArrayAccess(1491) into InfixExpression: ==(1493) at 0", "Insert QualifiedName: QueryConstants.SEPARATOR_BYTE(1492) into InfixExpression: ==(1493) at 1", "Insert MethodInvocation(1502) into InfixExpression: -(1505) at 0", "Insert SimpleName: currOffset(1503) into InfixExpression: -(1505) at 1", "Insert NumberLiteral: 1(1504) into InfixExpression: -(1505) at 2", "Insert NumberLiteral: 2(1384) into InfixExpression: *(1386) at 0", "Insert QualifiedName: Bytes.SIZEOF_INT(1385) into InfixExpression: *(1386) at 1", "Insert SimpleName: ptr(1407) into MethodInvocation(1409) at 0", "Insert SimpleName: getOffset(1408) into MethodInvocation(1409) at 1", "Insert SimpleName: ptr(1410) into MethodInvocation(1412) at 0", "Insert SimpleName: getLength(1411) into MethodInvocation(1412) at 1", "Insert QualifiedName: Bytes.SIZEOF_BYTE(1414) into InfixExpression: +(1416) at 0", "Insert QualifiedName: Bytes.SIZEOF_INT(1415) into InfixExpression: +(1416) at 1", "Insert SimpleName: bytes(1467) into ArrayAccess(1471) at 0", "Insert InfixExpression: +(1470) into ArrayAccess(1471) at 1", "Insert InfixExpression: +(1478) into ParenthesizedExpression(1479) at 0", "Insert SimpleName: bytes(1487) into ArrayAccess(1491) at 0", "Insert InfixExpression: +(1490) into ArrayAccess(1491) at 1", "Insert SimpleName: getOffset(1495) into MethodInvocation(1502) at 0", "Insert SimpleName: bytes(1496) into MethodInvocation(1502) at 1", "Insert InfixExpression: +(1499) into MethodInvocation(1502) at 2", "Insert SimpleName: useShort(1500) into MethodInvocation(1502) at 3", "Insert SimpleName: indexOffset(1501) into MethodInvocation(1502) at 4", "Insert SimpleName: currOffset(1468) into InfixExpression: +(1470) at 0", "Insert SimpleName: offset(1469) into InfixExpression: +(1470) at 1", "Insert SimpleName: currOffset(1476) into InfixExpression: +(1478) at 0", "Insert SimpleName: offset(1477) into InfixExpression: +(1478) at 1", "Insert SimpleName: currOffset(1488) into InfixExpression: +(1490) at 0", "Insert SimpleName: offset(1489) into InfixExpression: +(1490) at 1", "Insert SimpleName: arrayIndex(1497) into InfixExpression: +(1499) at 0", "Insert NumberLiteral: 1(1498) into InfixExpression: +(1499) at 1"]}}, {"ArrayIndexFunction_cluster": {"actions": [{"root": "INS ReturnStatement to Block at 5", "operations": ["INS ReturnStatement to Block at 5", "INS SimpleName: index to MethodInvocation at 4", "INS SimpleName: tuple to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: arrayExpr to MethodInvocation at 5"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: ptr to MethodInvocation at 3", "MOV MethodInvocation to MethodInvocation at 6", "MOV MethodInvocation to MethodInvocation at 7", "MOV SimpleName: PArrayDataType to MethodInvocation at 0", "MOV SimpleName: positionAtArrayElement to MethodInvocation at 1"]}, {"root": "DEL IfStatement", "operations": ["DEL PrefixExpression: !", "DEL InfixExpression: ==", "DEL SimpleName: evaluate", "DEL ReturnStatement", "DEL Block", "DEL IfStatement", "DEL SimpleName: ptr", "DEL BooleanLiteral: true", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SimpleName: tuple", "DEL BooleanLiteral: false", "DEL Block", "DEL SimpleName: arrayExpr", "DEL MethodInvocation", "DEL SimpleName: getLength", "DEL SimpleName: ptr", "DEL IfStatement", "DEL ReturnStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL InfixExpression: -", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL SimpleName: index"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL BooleanLiteral: true"]}]}}, {"ArrayIndexFunction_diff": {"operations": ["Insert ReturnStatement(159) into Block(160) at 5", "Insert MethodInvocation(158) into ReturnStatement(159) at 0", "Move SimpleName: PArrayDataType(167) into MethodInvocation(158) at 0", "Move SimpleName: positionAtArrayElement(168) into MethodInvocation(158) at 1", "Insert SimpleName: tuple(150) into MethodInvocation(158) at 2", "Move SimpleName: ptr(169) into MethodInvocation(158) at 3", "Insert SimpleName: index(152) into MethodInvocation(158) at 4", "Insert SimpleName: arrayExpr(153) into MethodInvocation(158) at 5", "Move MethodInvocation(174) into MethodInvocation(158) at 6", "Move MethodInvocation(176) into MethodInvocation(158) at 7", "Delete SimpleName: arrayExpr(148)", "Delete SimpleName: evaluate(149)", "Delete SimpleName: tuple(150)", "Delete SimpleName: ptr(151)", "Delete MethodInvocation(152)", "Delete PrefixExpression: !(153)", "Delete BooleanLiteral: false(154)", "Delete ReturnStatement(155)", "Delete Block(156)", "Delete SimpleName: ptr(157)", "Delete SimpleName: getLength(158)", "Delete MethodInvocation(159)", "Delete NumberLiteral: 0(160)", "Delete InfixExpression: ==(161)", "Delete BooleanLiteral: true(162)", "Delete ReturnStatement(163)", "Delete Block(164)", "Delete IfStatement(165)", "Delete IfStatement(166)", "Delete SimpleName: index(170)", "Delete NumberLiteral: 1(171)", "Delete InfixExpression: -(172)", "Delete MethodInvocation(177)", "Delete ExpressionStatement(178)", "Delete BooleanLiteral: true(179)", "Delete ReturnStatement(180)"]}}], "commit_stats": [{"total_files": 13, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}