{"application": "Netflix-hollow", "csha": "bf80a78c23a831d9a5cdc9de5835a29435d954c0", "files": [{"HollowBlobHeader_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: com.netflix.hollow.core.schema.HollowSchema to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: java.util.ArrayList to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: java.util.List to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<HollowSchema> at 0", "INS ParameterizedType: List<HollowSchema> to FieldDeclaration at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS SimpleType: List to ParameterizedType: List<HollowSchema> at 0", "INS SimpleType: HollowSchema to ParameterizedType: List<HollowSchema> at 1", "INS SimpleName: schemas to VariableDeclarationFragment at 0", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS SimpleType: HollowSchema to ParameterizedType: ArrayList<HollowSchema> at 1", "INS Modifier: private to FieldDeclaration at 0", "INS ParameterizedType: ArrayList<HollowSchema> to ClassInstanceCreation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS SimpleName: setSchemas to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: schemas to FieldAccess at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS FieldAccess to Assignment: = at 0", "INS SimpleType: HollowSchema to ParameterizedType: List<HollowSchema> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: List to ParameterizedType: List<HollowSchema> at 0", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS SimpleName: List to SimpleType: List at 0", "INS Modifier: public to MethodDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: schemas to SingleVariableDeclaration at 1", "INS ThisExpression to FieldAccess at 0", "INS ParameterizedType: List<HollowSchema> to SingleVariableDeclaration at 0", "INS SimpleName: schemas to Assignment: = at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: schemas to ReturnStatement at 0", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: List to SimpleType: List at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleType: List to ParameterizedType: List<HollowSchema> at 0", "INS SimpleType: HollowSchema to ParameterizedType: List<HollowSchema> at 1", "INS ParameterizedType: List<HollowSchema> to MethodDeclaration at 1", "INS SimpleName: getSchemas to MethodDeclaration at 2"]}]}}, {"HollowBlobHeader_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(255) at 1", "Insert ImportDeclaration(5) into CompilationUnit(255) at 2", "Insert ImportDeclaration(9) into CompilationUnit(255) at 4", "Insert QualifiedName: com.netflix.hollow.core.schema.HollowSchema(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: java.util.ArrayList(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: java.util.List(8) into ImportDeclaration(9) at 0", "Insert FieldDeclaration(69) into TypeDeclaration: class(254) at 5", "Insert MethodDeclaration(116) into TypeDeclaration: class(254) at 10", "Insert MethodDeclaration(127) into TypeDeclaration: class(254) at 11", "Insert Modifier: private(55) into FieldDeclaration(69) at 0", "Insert ParameterizedType: List<HollowSchema>(60) into FieldDeclaration(69) at 1", "Insert VariableDeclarationFragment(68) into FieldDeclaration(69) at 2", "Insert Modifier: public(99) into MethodDeclaration(116) at 0", "Insert PrimitiveType: void(100) into MethodDeclaration(116) at 1", "Insert SimpleName: setSchemas(101) into MethodDeclaration(116) at 2", "Insert SingleVariableDeclaration(108) into MethodDeclaration(116) at 3", "Insert Block(115) into MethodDeclaration(116) at 4", "Insert Modifier: public(117) into MethodDeclaration(127) at 0", "Insert ParameterizedType: List<HollowSchema>(122) into MethodDeclaration(127) at 1", "Insert SimpleName: getSchemas(123) into MethodDeclaration(127) at 2", "Insert Block(126) into MethodDeclaration(127) at 3", "Insert SimpleType: List(57) into ParameterizedType: List<HollowSchema>(60) at 0", "Insert SimpleType: HollowSchema(59) into ParameterizedType: List<HollowSchema>(60) at 1", "Insert SimpleName: schemas(61) into VariableDeclarationFragment(68) at 0", "Insert ClassInstanceCreation(67) into VariableDeclarationFragment(68) at 1", "Insert ParameterizedType: List<HollowSchema>(106) into SingleVariableDeclaration(108) at 0", "Insert SimpleName: schemas(107) into SingleVariableDeclaration(108) at 1", "Insert ExpressionStatement(114) into Block(115) at 0", "Insert SimpleType: List(119) into ParameterizedType: List<HollowSchema>(122) at 0", "Insert SimpleType: HollowSchema(121) into ParameterizedType: List<HollowSchema>(122) at 1", "Insert ReturnStatement(125) into Block(126) at 0", "Insert SimpleName: List(56) into SimpleType: List(57) at 0", "Insert SimpleName: HollowSchema(58) into SimpleType: HollowSchema(59) at 0", "Insert ParameterizedType: ArrayList<HollowSchema>(66) into ClassInstanceCreation(67) at 0", "Insert SimpleType: List(103) into ParameterizedType: List<HollowSchema>(106) at 0", "Insert SimpleType: HollowSchema(105) into ParameterizedType: List<HollowSchema>(106) at 1", "Insert Assignment: =(113) into ExpressionStatement(114) at 0", "Insert SimpleName: List(118) into SimpleType: List(119) at 0", "Insert SimpleName: HollowSchema(120) into SimpleType: HollowSchema(121) at 0", "Insert SimpleName: schemas(124) into ReturnStatement(125) at 0", "Insert SimpleType: ArrayList(63) into ParameterizedType: ArrayList<HollowSchema>(66) at 0", "Insert SimpleType: HollowSchema(65) into ParameterizedType: ArrayList<HollowSchema>(66) at 1", "Insert SimpleName: List(102) into SimpleType: List(103) at 0", "Insert SimpleName: HollowSchema(104) into SimpleType: HollowSchema(105) at 0", "Insert FieldAccess(111) into Assignment: =(113) at 0", "Insert SimpleName: schemas(112) into Assignment: =(113) at 1", "Insert SimpleName: ArrayList(62) into SimpleType: ArrayList(63) at 0", "Insert SimpleName: HollowSchema(64) into SimpleType: HollowSchema(65) at 0", "Insert ThisExpression(109) into FieldAccess(111) at 0", "Insert SimpleName: schemas(110) into FieldAccess(111) at 1"]}}, {"HollowBlobHeaderWriter_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: com.netflix.hollow.core.schema.HollowSchema to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: java.io.ByteArrayOutputStream to ImportDeclaration at 0"]}, {"root": "INS Modifier: public to MethodDeclaration at 1", "operations": ["INS Modifier: public to MethodDeclaration at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleName: ByteArrayOutputStream to SimpleType: ByteArrayOutputStream at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: ByteArrayOutputStream to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 3", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: schemasStream to VariableDeclarationFragment at 0", "INS SimpleName: ByteArrayOutputStream to SimpleType: ByteArrayOutputStream at 0", "INS SimpleType: ByteArrayOutputStream to VariableDeclarationStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS SimpleName: VarInt to MethodInvocation at 0", "INS SimpleName: header to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getSchemas to MethodInvocation at 1", "INS ExpressionStatement to Block at 4", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: writeVInt to MethodInvocation at 1", "INS SimpleName: schemasStream to MethodInvocation at 2"]}, {"root": "INS EnhancedForStatement to Block at 5", "operations": ["INS SimpleType: HollowSchema to SingleVariableDeclaration at 0", "INS SimpleName: header to MethodInvocation at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: writeTo to MethodInvocation at 1", "INS SimpleName: schema to SingleVariableDeclaration at 1", "INS SimpleName: schema to MethodInvocation at 0", "INS ExpressionStatement to EnhancedForStatement at 2", "INS SimpleName: schemasStream to MethodInvocation at 2", "INS SimpleName: getSchemas to MethodInvocation at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS EnhancedForStatement to Block at 5"]}, {"root": "INS VariableDeclarationStatement to Block at 6", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS SimpleName: schemasStream to MethodInvocation at 0", "INS SimpleName: toByteArray to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: schemasData to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 6", "INS Dimension to ArrayType: byte[] at 1"]}, {"root": "INS ExpressionStatement to Block at 7", "operations": ["INS InfixExpression: + to MethodInvocation at 3", "INS SimpleName: VarInt to MethodInvocation at 0", "INS QualifiedName: schemasData.length to InfixExpression: + at 0", "INS SimpleName: dos to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 7", "INS SimpleName: writeVInt to MethodInvocation at 1", "INS NumberLiteral: 1 to InfixExpression: + at 1"]}, {"root": "INS ExpressionStatement to Block at 8", "operations": ["INS ExpressionStatement to Block at 8", "INS SimpleName: write to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: schemasData to MethodInvocation at 2", "INS SimpleName: dos to MethodInvocation at 0"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: HollowWriteStateEngine", "DEL SimpleName: stateEngine", "DEL SimpleType: HollowWriteStateEngine", "DEL SingleVariableDeclaration"]}]}}, {"HollowBlobHeaderWriter_diff": {"operations": ["Move ImportDeclaration(3) into CompilationUnit(158) at 3", "Insert ImportDeclaration(7) into CompilationUnit(158) at 3", "Insert ImportDeclaration(9) into CompilationUnit(158) at 4", "Insert QualifiedName: com.netflix.hollow.core.schema.HollowSchema(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: java.io.ByteArrayOutputStream(8) into ImportDeclaration(9) at 0", "Insert Modifier: public(25) into MethodDeclaration(156) at 1", "Insert VariableDeclarationStatement(64) into Block(155) at 3", "Insert ExpressionStatement(74) into Block(155) at 4", "Insert EnhancedForStatement(87) into Block(155) at 5", "Insert VariableDeclarationStatement(96) into Block(155) at 6", "Insert ExpressionStatement(104) into Block(155) at 7", "Insert ExpressionStatement(109) into Block(155) at 8", "Insert SimpleType: ByteArrayOutputStream(58) into VariableDeclarationStatement(64) at 0", "Insert VariableDeclarationFragment(63) into VariableDeclarationStatement(64) at 1", "Insert MethodInvocation(73) into ExpressionStatement(74) at 0", "Insert SingleVariableDeclaration(78) into EnhancedForStatement(87) at 0", "Insert MethodInvocation(81) into EnhancedForStatement(87) at 1", "Insert ExpressionStatement(86) into EnhancedForStatement(87) at 2", "Insert ArrayType: byte[](90) into VariableDeclarationStatement(96) at 0", "Insert VariableDeclarationFragment(95) into VariableDeclarationStatement(96) at 1", "Insert MethodInvocation(103) into ExpressionStatement(104) at 0", "Insert MethodInvocation(108) into ExpressionStatement(109) at 0", "Insert SimpleName: ByteArrayOutputStream(57) into SimpleType: ByteArrayOutputStream(58) at 0", "Insert SimpleName: schemasStream(59) into VariableDeclarationFragment(63) at 0", "Insert ClassInstanceCreation(62) into VariableDeclarationFragment(63) at 1", "Insert SimpleName: VarInt(65) into MethodInvocation(73) at 0", "Insert SimpleName: writeVInt(66) into MethodInvocation(73) at 1", "Insert SimpleName: schemasStream(67) into MethodInvocation(73) at 2", "Insert MethodInvocation(72) into MethodInvocation(73) at 3", "Insert SimpleType: HollowSchema(76) into SingleVariableDeclaration(78) at 0", "Insert SimpleName: schema(77) into SingleVariableDeclaration(78) at 1", "Insert SimpleName: header(79) into MethodInvocation(81) at 0", "Insert SimpleName: getSchemas(80) into MethodInvocation(81) at 1", "Insert MethodInvocation(85) into ExpressionStatement(86) at 0", "Insert PrimitiveType: byte(88) into ArrayType: byte[](90) at 0", "Insert Dimension(89) into ArrayType: byte[](90) at 1", "Insert SimpleName: schemasData(91) into VariableDeclarationFragment(95) at 0", "Insert MethodInvocation(94) into VariableDeclarationFragment(95) at 1", "Insert SimpleName: VarInt(97) into MethodInvocation(103) at 0", "Insert SimpleName: writeVInt(98) into MethodInvocation(103) at 1", "Insert SimpleName: dos(99) into MethodInvocation(103) at 2", "Insert InfixExpression: +(102) into MethodInvocation(103) at 3", "Insert SimpleName: dos(105) into MethodInvocation(108) at 0", "Insert SimpleName: write(106) into MethodInvocation(108) at 1", "Insert SimpleName: schemasData(107) into MethodInvocation(108) at 2", "Insert SimpleType: ByteArrayOutputStream(61) into ClassInstanceCreation(62) at 0", "Insert MethodInvocation(70) into MethodInvocation(72) at 0", "Insert SimpleName: size(71) into MethodInvocation(72) at 1", "Insert SimpleName: HollowSchema(75) into SimpleType: HollowSchema(76) at 0", "Insert SimpleName: schema(82) into MethodInvocation(85) at 0", "Insert SimpleName: writeTo(83) into MethodInvocation(85) at 1", "Insert SimpleName: schemasStream(84) into MethodInvocation(85) at 2", "Insert SimpleName: schemasStream(92) into MethodInvocation(94) at 0", "Insert SimpleName: toByteArray(93) into MethodInvocation(94) at 1", "Insert QualifiedName: schemasData.length(100) into InfixExpression: +(102) at 0", "Insert NumberLiteral: 1(101) into InfixExpression: +(102) at 1", "Insert SimpleName: ByteArrayOutputStream(60) into SimpleType: ByteArrayOutputStream(61) at 0", "Insert SimpleName: header(68) into MethodInvocation(70) at 0", "Insert SimpleName: getSchemas(69) into MethodInvocation(70) at 1", "Delete SimpleName: HollowWriteStateEngine(27)", "Delete SimpleType: HollowWriteStateEngine(28)", "Delete SimpleName: stateEngine(29)", "Delete SingleVariableDeclaration(30)"]}}, {"HollowBlobWriter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.util.ArrayList to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ParameterizedType: List<HollowSchema> to MethodDeclaration at 1", "operations": ["INS SimpleType: HollowSchema to ParameterizedType: List<HollowSchema> at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleType: List to ParameterizedType: List<HollowSchema> at 0", "INS ParameterizedType: List<HollowSchema> to MethodDeclaration at 1", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0"]}, {"root": "UPDATE from numChangedTypes to changedTypes", "operations": ["UPD SimpleName: numChangedTypes from numChangedTypes to changedTypes", "UPD SimpleName: numChangedTypes from numChangedTypes to changedTypes", "UPD SimpleName: numChangedTypes from numChangedTypes to changedTypes"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleType: HollowSchema to ParameterizedType: List<HollowSchema> at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS SimpleType: List to ParameterizedType: List<HollowSchema> at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ParameterizedType: List<HollowSchema> to SingleVariableDeclaration at 0", "INS SimpleName: schemasToInclude to SingleVariableDeclaration at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS SimpleType: List to ParameterizedType: List<HollowSchema> at 0", "INS SimpleName: changedTypes to VariableDeclarationFragment at 0", "INS ParameterizedType: List<HollowSchema> to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: changedTypes to MethodInvocation at 0", "INS SimpleType: HollowSchema to ParameterizedType: List<HollowSchema> at 1", "INS SimpleName: List to SimpleType: List at 0", "INS VariableDeclarationStatement to Block at 2", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: changedTypes to MethodInvocation at 0", "INS SimpleType: HollowSchema to ParameterizedType: List<HollowSchema> at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: changedTypes to VariableDeclarationFragment at 0", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 2", "INS ParameterizedType: List<HollowSchema> to VariableDeclarationStatement at 0", "INS SimpleType: List to ParameterizedType: List<HollowSchema> at 0", "INS SimpleName: List to SimpleType: List at 0"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ExpressionStatement to Block at 3", "INS SimpleName: setSchemas to MethodInvocation at 1", "INS SimpleName: schemasToInclude to MethodInvocation at 2", "INS SimpleName: header to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ParameterizedType: List<HollowSchema> to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: List to SimpleType: List at 0", "INS SimpleType: List to ParameterizedType: List<HollowSchema> at 0", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS ParameterizedType: List<HollowSchema> to VariableDeclarationStatement at 0", "INS SimpleType: HollowSchema to ParameterizedType: List<HollowSchema> at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: stateEngine to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getSchemas to MethodInvocation at 1"]}, {"root": "INS SimpleName: changedTypes to MethodInvocation at 2", "operations": ["INS SimpleName: changedTypes to MethodInvocation at 2"]}, {"root": "INS SimpleName: changedTypes to MethodInvocation at 2", "operations": ["INS SimpleName: changedTypes to MethodInvocation at 2"]}, {"root": "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "operations": ["INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: HollowSchema to ParameterizedType: ArrayList<HollowSchema> at 1", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS ParameterizedType: ArrayList<HollowSchema> to ClassInstanceCreation at 0", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<HollowSchema> at 0"]}, {"root": "INS SimpleName: size to MethodInvocation at 1", "operations": ["INS SimpleName: size to MethodInvocation at 1"]}, {"root": "INS SimpleName: size to MethodInvocation at 1", "operations": ["INS SimpleName: size to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: getSchema to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: writeState to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: changedTypes to MethodInvocation at 0"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL NumberLiteral: 0", "operations": ["DEL NumberLiteral: 0"]}, {"root": "DEL PostfixExpression: ++", "operations": ["DEL SimpleName: changedTypes", "DEL PostfixExpression: ++"]}, {"root": "DEL SimpleName: stateEngine", "operations": ["DEL SimpleName: stateEngine"]}]}}, {"HollowBlobWriter_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(696) at 1", "Insert QualifiedName: java.util.ArrayList(2) into ImportDeclaration(3) at 0", "Insert ParameterizedType: List<HollowSchema>(514) into MethodDeclaration(578) at 1", "Update SimpleName: numChangedTypes(482) to changedTypes", "Insert SingleVariableDeclaration(629) into MethodDeclaration(694) at 4", "Insert VariableDeclarationStatement(233) into Block(352) at 2", "Insert VariableDeclarationStatement(388) into Block(507) at 2", "Insert SimpleType: List(511) into ParameterizedType: List<HollowSchema>(514) at 0", "Insert SimpleType: HollowSchema(513) into ParameterizedType: List<HollowSchema>(514) at 1", "Insert ParameterizedType: List<HollowSchema>(627) into SingleVariableDeclaration(629) at 0", "Insert SimpleName: schemasToInclude(628) into SingleVariableDeclaration(629) at 1", "Insert ExpressionStatement(686) into Block(693) at 3", "Insert ParameterizedType: List<HollowSchema>(228) into VariableDeclarationStatement(233) at 0", "Insert VariableDeclarationFragment(232) into VariableDeclarationStatement(233) at 1", "Insert ParameterizedType: List<HollowSchema>(383) into VariableDeclarationStatement(388) at 0", "Insert VariableDeclarationFragment(387) into VariableDeclarationStatement(388) at 1", "Insert SimpleName: List(510) into SimpleType: List(511) at 0", "Insert SimpleName: HollowSchema(512) into SimpleType: HollowSchema(513) at 0", "Insert ParameterizedType: List<HollowSchema>(520) into VariableDeclarationStatement(529) at 0", "Insert SimpleType: List(624) into ParameterizedType: List<HollowSchema>(627) at 0", "Insert SimpleType: HollowSchema(626) into ParameterizedType: List<HollowSchema>(627) at 1", "Insert MethodInvocation(685) into ExpressionStatement(686) at 0", "Insert MethodInvocation(97) into MethodInvocation(99) at 2", "Insert SimpleType: List(225) into ParameterizedType: List<HollowSchema>(228) at 0", "Insert SimpleType: HollowSchema(227) into ParameterizedType: List<HollowSchema>(228) at 1", "Insert SimpleName: changedTypes(229) into VariableDeclarationFragment(232) at 0", "Insert MethodInvocation(231) into VariableDeclarationFragment(232) at 1", "Insert SimpleName: changedTypes(245) into MethodInvocation(247) at 2", "Insert SimpleType: List(380) into ParameterizedType: List<HollowSchema>(383) at 0", "Insert SimpleType: HollowSchema(382) into ParameterizedType: List<HollowSchema>(383) at 1", "Insert SimpleName: changedTypes(384) into VariableDeclarationFragment(387) at 0", "Insert MethodInvocation(386) into VariableDeclarationFragment(387) at 1", "Insert SimpleName: changedTypes(400) into MethodInvocation(402) at 2", "Insert SimpleType: List(517) into ParameterizedType: List<HollowSchema>(520) at 0", "Insert SimpleType: HollowSchema(519) into ParameterizedType: List<HollowSchema>(520) at 1", "Insert ClassInstanceCreation(527) into VariableDeclarationFragment(528) at 1", "Insert SimpleName: List(623) into SimpleType: List(624) at 0", "Insert SimpleName: HollowSchema(625) into SimpleType: HollowSchema(626) at 0", "Insert SimpleName: header(682) into MethodInvocation(685) at 0", "Insert SimpleName: setSchemas(683) into MethodInvocation(685) at 1", "Insert SimpleName: schemasToInclude(684) into MethodInvocation(685) at 2", "Insert SimpleName: stateEngine(95) into MethodInvocation(97) at 0", "Insert SimpleName: getSchemas(96) into MethodInvocation(97) at 1", "Insert SimpleName: List(224) into SimpleType: List(225) at 0", "Insert SimpleName: HollowSchema(226) into SimpleType: HollowSchema(227) at 0", "Insert SimpleName: changedTypes(230) into MethodInvocation(231) at 0", "Update SimpleName: numChangedTypes(236) to changedTypes", "Insert SimpleName: size(253) into MethodInvocation(254) at 1", "Insert SimpleName: List(379) into SimpleType: List(380) at 0", "Insert SimpleName: HollowSchema(381) into SimpleType: HollowSchema(382) at 0", "Insert SimpleName: changedTypes(385) into MethodInvocation(386) at 0", "Update SimpleName: numChangedTypes(379) to changedTypes", "Insert SimpleName: size(408) into MethodInvocation(409) at 1", "Insert SimpleName: List(516) into SimpleType: List(517) at 0", "Insert SimpleName: HollowSchema(518) into SimpleType: HollowSchema(519) at 0", "Insert ParameterizedType: ArrayList<HollowSchema>(526) into ClassInstanceCreation(527) at 0", "Insert SimpleType: ArrayList(523) into ParameterizedType: ArrayList<HollowSchema>(526) at 0", "Insert SimpleType: HollowSchema(525) into ParameterizedType: ArrayList<HollowSchema>(526) at 1", "Insert MethodInvocation(570) into ExpressionStatement(571) at 0", "Insert SimpleName: ArrayList(522) into SimpleType: ArrayList(523) at 0", "Insert SimpleName: HollowSchema(524) into SimpleType: HollowSchema(525) at 0", "Insert SimpleName: changedTypes(565) into MethodInvocation(570) at 0", "Insert SimpleName: add(566) into MethodInvocation(570) at 1", "Insert MethodInvocation(569) into MethodInvocation(570) at 2", "Insert SimpleName: writeState(567) into MethodInvocation(569) at 0", "Insert SimpleName: getSchema(568) into MethodInvocation(569) at 1", "Delete PrimitiveType: int(481)", "Delete PrimitiveType: int(483)", "Delete NumberLiteral: 0(485)", "Delete SimpleName: changedTypes(523)", "Delete PostfixExpression: ++(524)", "Delete SimpleName: stateEngine(632)"]}}, {"FilteredHollowBlobWriter_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 23"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: com.netflix.hollow.core.HollowBlobHeader to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 22", "operations": ["INS ImportDeclaration to CompilationUnit at 22", "INS QualifiedName: com.netflix.hollow.core.schema.HollowSchema.SchemaType to ImportDeclaration at 0"]}, {"root": "UPDATE from com.netflix.hollow.core.memory.pool.RecyclingRecycler to com.netflix.hollow.core.memory.pool.WastefulRecycler", "operations": ["UPD QualifiedName: com.netflix.hollow.core.memory.pool.RecyclingRecycler from com.netflix.hollow.core.memory.pool.RecyclingRecycler to com.netflix.hollow.core.memory.pool.WastefulRecycler"]}, {"root": "UPDATE from java.util.Collections to com.netflix.hollow.core.write.HollowBlobHeaderWriter", "operations": ["UPD QualifiedName: java.util.Collections from java.util.Collections to com.netflix.hollow.core.write.HollowBlobHeaderWriter"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 5", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: HollowBlobHeaderWriter to SimpleType: HollowBlobHeaderWriter at 0", "INS SimpleName: headerWriter to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: HollowBlobHeaderWriter to FieldDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS Block to MethodDeclaration at 5", "INS ExpressionStatement to IfStatement at 1", "INS IfStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS Block to EnhancedForStatement at 2", "INS EnhancedForStatement to Block at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleType: List to ParameterizedType: List<HollowSchema> at 0", "INS SimpleName: filteredSchema to InfixExpression: != at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS SimpleName: filteredSchema to VariableDeclarationFragment at 0", "INS SimpleType: HollowFilterConfig to SingleVariableDeclaration at 0", "INS NullLiteral to InfixExpression: != at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: HollowSchema to VariableDeclarationStatement at 0", "INS SimpleName: HollowFilterConfig to SimpleType: HollowFilterConfig at 0", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS SimpleName: schema to SingleVariableDeclaration at 1", "INS SimpleName: filterConfig to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: filteredList to ReturnStatement at 0", "INS SimpleType: HollowSchema to ParameterizedType: List<HollowSchema> at 1", "INS SimpleName: schemaList to EnhancedForStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS Modifier: private to MethodDeclaration at 0", "INS ParameterizedType: List<HollowSchema> to MethodDeclaration at 1", "INS SimpleType: HollowSchema to SingleVariableDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS NullLiteral to ReturnStatement at 0", "INS SimpleName: doesIncludeType to MethodInvocation at 1", "INS SimpleName: schema to MethodInvocation at 0", "INS CastExpression to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getName to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS SimpleName: filterConfig to MethodInvocation at 0", "INS QualifiedName: SchemaType.OBJECT to InfixExpression: == at 1", "INS SimpleName: schema to CastExpression at 1", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS SimpleName: schema to ReturnStatement at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: filterConfig to MethodInvocation at 2", "INS SimpleName: HollowFilterConfig to SimpleType: HollowFilterConfig at 0", "INS IfStatement to Block at 0", "INS SimpleName: schema to MethodInvocation at 0", "INS SimpleType: HollowObjectSchema to CastExpression at 0", "INS Block to MethodDeclaration at 5", "INS ReturnStatement to IfStatement at 1", "INS SimpleType: HollowFilterConfig to SingleVariableDeclaration at 0", "INS SimpleType: HollowSchema to MethodDeclaration at 1", "INS SimpleType: HollowSchema to SingleVariableDeclaration at 0", "INS InfixExpression: == to IfStatement at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: getFilteredSchema to MethodDeclaration at 2", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 1", "INS MethodInvocation to InfixExpression: == at 0", "INS SimpleName: HollowObjectSchema to SimpleType: HollowObjectSchema at 0", "INS SimpleName: getFilteredObjectSchema to MethodInvocation at 0", "INS SimpleName: schema to SingleVariableDeclaration at 1", "INS SimpleName: filterConfig to SingleVariableDeclaration at 1", "INS MethodInvocation to IfStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: getSchemaType to MethodInvocation at 1"]}, {"root": "UPDATE from verifyFilteredTypesExisted to getFilteredSchemaList", "operations": ["UPD SimpleName: verifyFilteredTypesExisted from verifyFilteredTypesExisted to getFilteredSchemaList"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SimpleName: verifyFilteredTypesExisted to MethodDeclaration at 2"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS QualifiedName: WastefulRecycler.DEFAULT_INSTANCE to Assignment: = at 1", "INS ExpressionStatement to Block at 3", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleType: HollowBlobHeader to VariableDeclarationStatement at 0", "INS SimpleName: HollowBlobHeader to SimpleType: HollowBlobHeader at 0", "INS SimpleName: header to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS VariableDeclarationStatement to Block at 3", "INS SimpleType: List to ParameterizedType: List<HollowSchema> at 0", "INS ParameterizedType: List<HollowSchema> to VariableDeclarationStatement at 0", "INS SimpleType: HollowSchema to ParameterizedType: List<HollowSchema> at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS SimpleName: unfilteredSchemaList to VariableDeclarationFragment at 0"]}, {"root": "INS EnhancedForStatement to Block at 4", "operations": ["INS Block to EnhancedForStatement at 2", "INS SimpleType: FilteredHollowBlobWriterStreamAndFilter to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 3", "INS EnhancedForStatement to Block at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: FilteredHollowBlobWriterStreamAndFilter to SimpleType: FilteredHollowBlobWriterStreamAndFilter at 0", "INS SimpleName: allStreamAndFilters to EnhancedForStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: header to MethodInvocation at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: streamAndFilter to SingleVariableDeclaration at 1", "INS SimpleName: headerWriter to MethodInvocation at 0"]}, {"root": "UPDATE from List<String> to List<HollowSchema>", "operations": ["UPD ParameterizedType: List<String> from List<String> to List<HollowSchema>", "UPD ParameterizedType: Set<String> from Set<String> to List<HollowSchema>"]}, {"root": "UPDATE from encounteredTypes to schemaList", "operations": ["UPD SimpleName: encounteredTypes from encounteredTypes to schemaList"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "UPDATE from String to HollowSchema", "operations": ["UPD SimpleType: String from String to HollowSchema", "UPD SimpleName: String from String to HollowSchema", "UPD SimpleName: String from String to HollowSchema", "UPD SimpleType: String from String to HollowSchema", "UPD SimpleName: IllegalArgumentException from IllegalArgumentException to HollowSchema", "UPD SimpleName: HollowFilterConfig from HollowFilterConfig to HollowSchema", "UPD SimpleName: String from String to HollowSchema", "UPD SimpleType: String from String to HollowSchema"]}, {"root": "MOVE from SimpleType: HollowSchema", "operations": ["MOV SimpleName: IllegalArgumentException to SimpleType: HollowSchema at 0"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS SimpleName: numIncludedFields to InfixExpression: == at 0", "INS IfStatement to Block at 3", "INS InfixExpression: == to IfStatement at 0", "INS MethodInvocation to InfixExpression: == at 1", "INS SimpleName: schema to MethodInvocation at 0", "INS ReturnStatement to IfStatement at 1", "INS SimpleName: numFields to MethodInvocation at 1", "INS SimpleName: schema to ReturnStatement at 0"]}, {"root": "UPDATE from Set to List", "operations": ["UPD SimpleType: Set from Set to List", "UPD SimpleName: Set from Set to List"]}, {"root": "MOVE from ForStatement", "operations": ["MOV Block to ForStatement at 3", "MOV MethodInvocation to IfStatement at 0"]}, {"root": "INS FieldAccess to Assignment: = at 0", "operations": ["INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: headerWriter to FieldAccess at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 3"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: maxShardOrdinal to VariableDeclarationFragment at 1", "INS SimpleName: numRecordsToCopy to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1"]}, {"root": "UPDATE from missingTypes to filteredList", "operations": ["UPD SimpleName: missingTypes from missingTypes to filteredList", "UPD SimpleName: Collections from Collections to filteredList"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0"]}, {"root": "UPDATE from RecyclingRecycler to HollowBlobHeaderWriter", "operations": ["UPD SimpleName: RecyclingRecycler from RecyclingRecycler to HollowBlobHeaderWriter", "UPD SimpleType: RecyclingRecycler from RecyclingRecycler to HollowBlobHeaderWriter"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: dis to MethodInvocation at 2", "MOV SimpleName: headerReader to MethodInvocation at 0", "MOV SimpleName: copyHeader to MethodInvocation at 1"]}, {"root": "UPDATE from copyHeader to readHeader", "operations": ["UPD SimpleName: copyHeader from copyHeader to readHeader"]}, {"root": "UPDATE from dis to in", "operations": ["UPD SimpleName: dis from dis to in"]}, {"root": "UPDATE from numSpecifiedTypes to header", "operations": ["UPD SimpleName: numSpecifiedTypes from numSpecifiedTypes to header", "UPD SimpleName: streamsOnly from streamsOnly to header"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: allStreamAndFilters to MethodInvocation at 1", "MOV SimpleName: streamsOnly to MethodInvocation at 0"]}, {"root": "UPDATE from allStreamAndFilters to getSchemas", "operations": ["UPD SimpleName: allStreamAndFilters from allStreamAndFilters to getSchemas"]}, {"root": "INS ParameterizedType: List<HollowSchema> to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: HollowSchema to ParameterizedType: List<HollowSchema> at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleType: List to ParameterizedType: List<HollowSchema> at 0", "INS ParameterizedType: List<HollowSchema> to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from ArrayList<String> to ArrayList<HollowSchema>", "operations": ["UPD ParameterizedType: ArrayList<String> from ArrayList<String> to ArrayList<HollowSchema>"]}, {"root": "MOVE from IfStatement", "operations": ["MOV ExpressionStatement to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV ExpressionStatement to IfStatement at 1"]}, {"root": "UPDATE from streamFilterConfig to filteredSchemaList", "operations": ["UPD SimpleName: streamFilterConfig from streamFilterConfig to filteredSchemaList", "UPD SimpleName: isExcludeFilter from isExcludeFilter to filteredSchemaList", "UPD SimpleName: numTypesAfterFilter from numTypesAfterFilter to filteredSchemaList"]}, {"root": "UPDATE from streamFilterConfig to setSchemas", "operations": ["UPD SimpleName: streamFilterConfig from streamFilterConfig to setSchemas"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: streamFilterConfig to MethodInvocation at 1", "MOV SimpleName: isExcludeFilter to MethodInvocation at 2"]}, {"root": "UPDATE from streamFilterConfig to writeHeader", "operations": ["UPD SimpleName: streamFilterConfig from streamFilterConfig to writeHeader"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: numSpecifiedTypes to MethodInvocation at 2", "MOV SimpleName: streamFilterConfig to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: GapEncodedVariableLengthIntegerReader to SimpleType: GapEncodedVariableLengthIntegerReader at 0", "INS SimpleName: memoryRecycler to MethodInvocation at 3", "INS SimpleName: GapEncodedVariableLengthIntegerReader to MethodInvocation at 0", "INS SimpleType: GapEncodedVariableLengthIntegerReader to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: addedOrdinals to VariableDeclarationFragment at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: remainingElements to MethodInvocation at 1", "INS SimpleName: addedOrdinals to MethodInvocation at 0", "INS SimpleName: numRecordsToCopy to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 2"]}, {"root": "INS EnhancedForStatement to Block at 3", "operations": ["INS ExpressionStatement to EnhancedForStatement at 2", "INS SimpleName: stream to SingleVariableDeclaration at 1", "INS SimpleType: DataOutputStream to SingleVariableDeclaration at 0", "INS SimpleName: writeTo to MethodInvocation at 1", "INS SimpleName: stream to MethodInvocation at 2", "INS SimpleName: os to EnhancedForStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS EnhancedForStatement to Block at 3", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: DataOutputStream to SimpleType: DataOutputStream at 0", "INS SimpleName: addedOrdinals to MethodInvocation at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from SimpleType: HollowSchema", "operations": ["MOV SimpleName: HollowFilterConfig to SimpleType: HollowSchema at 0"]}, {"root": "INS SimpleName: getFilteredSchemaList to MethodInvocation at 0", "operations": ["INS SimpleName: getFilteredSchemaList to MethodInvocation at 0"]}, {"root": "INS SimpleName: unfilteredSchemaList to MethodInvocation at 1", "operations": ["INS SimpleName: unfilteredSchemaList to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: streamAndFilter to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from streamFilterConfig to streamAndFilter", "operations": ["UPD SimpleName: streamFilterConfig from streamFilterConfig to streamAndFilter"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: numSpecifiedTypes to MethodInvocation at 1", "MOV SimpleName: streamFilterConfig to MethodInvocation at 0"]}, {"root": "UPDATE from numSpecifiedTypes to getStream", "operations": ["UPD SimpleName: numSpecifiedTypes from numSpecifiedTypes to getStream"]}, {"root": "INS SimpleName: streamAndFilter to MethodInvocation at 0", "operations": ["INS SimpleName: streamAndFilter to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: numTypesAfterFilter to MethodInvocation at 0"]}, {"root": "UPDATE from missingTypes to getFilteredSchema", "operations": ["UPD SimpleName: missingTypes from missingTypes to getFilteredSchema"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: removeAll to MethodInvocation at 1", "MOV SimpleName: missingTypes to MethodInvocation at 0", "MOV SimpleName: encounteredTypes to MethodInvocation at 2"]}, {"root": "UPDATE from removeAll to schema", "operations": ["UPD SimpleName: removeAll from removeAll to schema"]}, {"root": "UPDATE from encounteredTypes to filterConfig", "operations": ["UPD SimpleName: encounteredTypes from encounteredTypes to filterConfig"]}, {"root": "UPDATE from sort to add", "operations": ["UPD SimpleName: sort from sort to add"]}, {"root": "UPDATE from missingTypes to filteredSchema", "operations": ["UPD SimpleName: missingTypes from missingTypes to filteredSchema"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getConfig to MethodInvocation at 1"]}, {"root": "UPDATE from copyEncodedDeltaOrdinals to readEncodedDeltaOrdinals", "operations": ["UPD SimpleName: copyEncodedDeltaOrdinals from copyEncodedDeltaOrdinals to readEncodedDeltaOrdinals"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: is to MethodInvocation at 2", "MOV SimpleName: copyEncodedDeltaOrdinals to MethodInvocation at 1"]}, {"root": "UPDATE from maxShardOrdinal to numRecordsToCopy", "operations": ["UPD SimpleName: maxShardOrdinal from maxShardOrdinal to numRecordsToCopy", "UPD SimpleName: maxShardOrdinal from maxShardOrdinal to numRecordsToCopy"]}, {"root": "DEL SimpleType: HollowFilterConfig", "operations": ["DEL SimpleType: HollowFilterConfig"]}, {"root": "DEL ArrayAccess", "operations": ["DEL SimpleName: allStreamAndFilters", "DEL ArrayAccess", "DEL SimpleName: i"]}, {"root": "DEL ArrayAccess", "operations": ["DEL ArrayAccess", "DEL SimpleName: i", "DEL SimpleName: allStreamAndFilters"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL ForStatement", "operations": ["DEL SimpleName: numTypesAfterFilter", "DEL SimpleName: numStates", "DEL PrimitiveType: int", "DEL InfixExpression: <", "DEL ConditionalExpression", "DEL InfixExpression: -", "DEL SimpleName: i", "DEL SimpleName: i", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL PostfixExpression: ++", "DEL QualifiedName: allStreamAndFilters.length", "DEL VariableDeclarationExpression", "DEL VariableDeclarationStatement", "DEL ForStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Block"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: encounteredTypes", "DEL SimpleName: verifyFilteredTypesExisted", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: os", "DEL ExpressionStatement", "DEL SimpleName: GapEncodedVariableLengthIntegerReader"]}, {"root": "DEL SimpleName: expectedTypes", "operations": ["DEL SimpleName: expectedTypes"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL IfStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ThrowStatement", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL SimpleType: IllegalArgumentException", "DEL Modifier: private", "DEL SimpleName: missingTypes", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: expectedTypes", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: containsAll", "DEL InfixExpression: +", "DEL SimpleName: encounteredTypes", "DEL Block", "DEL Block", "DEL PrefixExpression: !", "DEL StringLiteral: \"The following types were expected, but not encountered: \"", "DEL ExpressionStatement"]}]}}, {"FilteredHollowBlobWriter_diff": {"operations": ["Move ImportDeclaration(61) into CompilationUnit(2001) at 23", "Insert ImportDeclaration(11) into CompilationUnit(2001) at 5", "Insert ImportDeclaration(45) into CompilationUnit(2001) at 22", "Insert QualifiedName: com.netflix.hollow.core.HollowBlobHeader(10) into ImportDeclaration(11) at 0", "Update QualifiedName: com.netflix.hollow.core.memory.pool.RecyclingRecycler(18) to com.netflix.hollow.core.memory.pool.WastefulRecycler", "Insert QualifiedName: com.netflix.hollow.core.schema.HollowSchema.SchemaType(44) into ImportDeclaration(45) at 0", "Update QualifiedName: java.util.Collections(60) to com.netflix.hollow.core.write.HollowBlobHeaderWriter", "Insert FieldDeclaration(103) into TypeDeclaration: class(2000) at 5", "Insert MethodDeclaration(1484) into TypeDeclaration: class(2000) at 16", "Insert MethodDeclaration(1524) into TypeDeclaration: class(2000) at 17", "Insert Modifier: private(97) into FieldDeclaration(103) at 0", "Insert Modifier: final(98) into FieldDeclaration(103) at 1", "Insert SimpleType: HollowBlobHeaderWriter(100) into FieldDeclaration(103) at 2", "Insert VariableDeclarationFragment(102) into FieldDeclaration(103) at 3", "Insert Modifier: private(1424) into MethodDeclaration(1484) at 0", "Insert ParameterizedType: List<HollowSchema>(1429) into MethodDeclaration(1484) at 1", "Update SimpleName: verifyFilteredTypesExisted(1848) to getFilteredSchemaList", "Move SimpleName: verifyFilteredTypesExisted(1848) into MethodDeclaration(1484) at 2", "Move SingleVariableDeclaration(1855) into MethodDeclaration(1484) at 3", "Insert SingleVariableDeclaration(1441) into MethodDeclaration(1484) at 4", "Insert Block(1483) into MethodDeclaration(1484) at 5", "Insert Modifier: private(1485) into MethodDeclaration(1524) at 0", "Insert SimpleType: HollowSchema(1487) into MethodDeclaration(1524) at 1", "Insert SimpleName: getFilteredSchema(1488) into MethodDeclaration(1524) at 2", "Insert SingleVariableDeclaration(1492) into MethodDeclaration(1524) at 3", "Insert SingleVariableDeclaration(1496) into MethodDeclaration(1524) at 4", "Insert Block(1523) into MethodDeclaration(1524) at 5", "Insert SimpleName: HollowBlobHeaderWriter(99) into SimpleType: HollowBlobHeaderWriter(100) at 0", "Insert SimpleName: headerWriter(101) into VariableDeclarationFragment(102) at 0", "Insert ExpressionStatement(160) into Block(185) at 3", "Insert VariableDeclarationStatement(293) into Block(587) at 2", "Insert VariableDeclarationStatement(304) into Block(587) at 3", "Insert EnhancedForStatement(348) into Block(587) at 4", "Insert SimpleType: List(1426) into ParameterizedType: List<HollowSchema>(1429) at 0", "Insert SimpleType: HollowSchema(1428) into ParameterizedType: List<HollowSchema>(1429) at 1", "Update ParameterizedType: Set<String>(1853) to List<HollowSchema>", "Update SimpleName: encounteredTypes(1854) to schemaList", "Insert SimpleType: HollowFilterConfig(1439) into SingleVariableDeclaration(1441) at 0", "Insert SimpleName: filterConfig(1440) into SingleVariableDeclaration(1441) at 1", "Move VariableDeclarationStatement(1875) into Block(1483) at 0", "Insert EnhancedForStatement(1480) into Block(1483) at 1", "Insert ReturnStatement(1482) into Block(1483) at 2", "Update SimpleName: IllegalArgumentException(1886) to HollowSchema", "Move SimpleName: IllegalArgumentException(1886) into SimpleType: HollowSchema(1487) at 0", "Insert SimpleType: HollowSchema(1490) into SingleVariableDeclaration(1492) at 0", "Insert SimpleName: schema(1491) into SingleVariableDeclaration(1492) at 1", "Insert SimpleType: HollowFilterConfig(1494) into SingleVariableDeclaration(1496) at 0", "Insert SimpleName: filterConfig(1495) into SingleVariableDeclaration(1496) at 1", "Insert IfStatement(1520) into Block(1523) at 0", "Insert ReturnStatement(1522) into Block(1523) at 1", "Insert IfStatement(1585) into Block(1641) at 3", "Insert Assignment: =(159) into ExpressionStatement(160) at 0", "Insert SimpleType: HollowBlobHeader(286) into VariableDeclarationStatement(293) at 0", "Insert VariableDeclarationFragment(292) into VariableDeclarationStatement(293) at 1", "Insert ParameterizedType: List<HollowSchema>(298) into VariableDeclarationStatement(304) at 0", "Insert VariableDeclarationFragment(303) into VariableDeclarationStatement(304) at 1", "Insert SingleVariableDeclaration(308) into EnhancedForStatement(348) at 0", "Insert SimpleName: allStreamAndFilters(309) into EnhancedForStatement(348) at 1", "Insert Block(347) into EnhancedForStatement(348) at 2", "Insert SimpleName: List(1425) into SimpleType: List(1426) at 0", "Insert SimpleName: HollowSchema(1427) into SimpleType: HollowSchema(1428) at 0", "Update SimpleType: Set(1850) to List", "Update SimpleType: String(1852) to HollowSchema", "Insert SimpleName: HollowFilterConfig(1438) into SimpleType: HollowFilterConfig(1439) at 0", "Update ParameterizedType: List<String>(1865) to List<HollowSchema>", "Insert SingleVariableDeclaration(1459) into EnhancedForStatement(1480) at 0", "Insert SimpleName: schemaList(1460) into EnhancedForStatement(1480) at 1", "Insert Block(1479) into EnhancedForStatement(1480) at 2", "Insert SimpleName: filteredList(1481) into ReturnStatement(1482) at 0", "Insert SimpleName: HollowSchema(1489) into SimpleType: HollowSchema(1490) at 0", "Insert SimpleName: HollowFilterConfig(1493) into SimpleType: HollowFilterConfig(1494) at 0", "Insert MethodInvocation(1502) into IfStatement(1520) at 0", "Insert Block(1519) into IfStatement(1520) at 1", "Insert NullLiteral(1521) into ReturnStatement(1522) at 0", "Insert InfixExpression: ==(1582) into IfStatement(1585) at 0", "Insert ReturnStatement(1584) into IfStatement(1585) at 1", "Move Block(1481) into ForStatement(1638) at 3", "Insert FieldAccess(149) into Assignment: =(153) at 0", "Move FieldAccess(138) into Assignment: =(159) at 0", "Insert QualifiedName: WastefulRecycler.DEFAULT_INSTANCE(158) into Assignment: =(159) at 1", "Insert SimpleName: HollowBlobHeader(285) into SimpleType: HollowBlobHeader(286) at 0", "Insert SimpleName: header(287) into VariableDeclarationFragment(292) at 0", "Insert MethodInvocation(291) into VariableDeclarationFragment(292) at 1", "Insert SimpleType: List(295) into ParameterizedType: List<HollowSchema>(298) at 0", "Insert SimpleType: HollowSchema(297) into ParameterizedType: List<HollowSchema>(298) at 1", "Insert SimpleName: unfilteredSchemaList(299) into VariableDeclarationFragment(303) at 0", "Insert MethodInvocation(302) into VariableDeclarationFragment(303) at 1", "Insert SimpleType: FilteredHollowBlobWriterStreamAndFilter(306) into SingleVariableDeclaration(308) at 0", "Insert SimpleName: streamAndFilter(307) into SingleVariableDeclaration(308) at 1", "Move VariableDeclarationStatement(303) into Block(347) at 0", "Insert ExpressionStatement(328) into Block(347) at 1", "Insert ExpressionStatement(336) into Block(347) at 2", "Move ExpressionStatement(329) into Block(347) at 3", "Insert VariableDeclarationStatement(826) into Block(1342) at 1", "Update SimpleName: Set(1849) to List", "Update SimpleName: String(1851) to HollowSchema", "Update SimpleType: String(1864) to HollowSchema", "Update SimpleName: missingTypes(1866) to filteredList", "Insert SimpleType: HollowSchema(1457) into SingleVariableDeclaration(1459) at 0", "Insert SimpleName: schema(1458) into SingleVariableDeclaration(1459) at 1", "Insert VariableDeclarationStatement(1469) into Block(1479) at 0", "Insert IfStatement(1478) into Block(1479) at 1", "Insert SimpleName: filterConfig(1497) into MethodInvocation(1502) at 0", "Insert SimpleName: doesIncludeType(1498) into MethodInvocation(1502) at 1", "Insert MethodInvocation(1501) into MethodInvocation(1502) at 2", "Insert IfStatement(1516) into Block(1519) at 0", "Insert ReturnStatement(1518) into Block(1519) at 1", "Insert SimpleName: numIncludedFields(1578) into InfixExpression: ==(1582) at 0", "Insert MethodInvocation(1581) into InfixExpression: ==(1582) at 1", "Insert SimpleName: schema(1583) into ReturnStatement(1584) at 0", "Insert IfStatement(1636) into Block(1637) at 0", "Insert ThisExpression(147) into FieldAccess(149) at 0", "Insert SimpleName: headerWriter(148) into FieldAccess(149) at 1", "Update SimpleType: RecyclingRecycler(140) to HollowBlobHeaderWriter", "Move SimpleName: headerReader(268) into MethodInvocation(291) at 0", "Update SimpleName: copyHeader(269) to readHeader", "Move SimpleName: copyHeader(269) into MethodInvocation(291) at 1", "Update SimpleName: dis(270) to in", "Move SimpleName: dis(270) into MethodInvocation(291) at 2", "Insert SimpleName: List(294) into SimpleType: List(295) at 0", "Insert SimpleName: HollowSchema(296) into SimpleType: HollowSchema(297) at 0", "Update SimpleName: streamsOnly(271) to header", "Move SimpleName: streamsOnly(271) into MethodInvocation(302) at 0", "Update SimpleName: allStreamAndFilters(272) to getSchemas", "Move SimpleName: allStreamAndFilters(272) into MethodInvocation(302) at 1", "Insert SimpleName: FilteredHollowBlobWriterStreamAndFilter(305) into SimpleType: FilteredHollowBlobWriterStreamAndFilter(306) at 0", "Insert ParameterizedType: List<HollowSchema>(314) into VariableDeclarationStatement(323) at 0", "Insert MethodInvocation(327) into ExpressionStatement(328) at 0", "Insert MethodInvocation(335) into ExpressionStatement(336) at 0", "Insert PrimitiveType: int(822) into VariableDeclarationStatement(826) at 0", "Insert VariableDeclarationFragment(825) into VariableDeclarationStatement(826) at 1", "Update SimpleName: String(1863) to HollowSchema", "Update ParameterizedType: ArrayList<String>(1871) to ArrayList<HollowSchema>", "Insert SimpleName: HollowSchema(1456) into SimpleType: HollowSchema(1457) at 0", "Insert SimpleType: HollowSchema(1462) into VariableDeclarationStatement(1469) at 0", "Insert VariableDeclarationFragment(1468) into VariableDeclarationStatement(1469) at 1", "Insert InfixExpression: !=(1472) into IfStatement(1478) at 0", "Insert ExpressionStatement(1477) into IfStatement(1478) at 1", "Insert SimpleName: schema(1499) into MethodInvocation(1501) at 0", "Insert SimpleName: getName(1500) into MethodInvocation(1501) at 1", "Insert InfixExpression: ==(1507) into IfStatement(1516) at 0", "Insert ReturnStatement(1515) into IfStatement(1516) at 1", "Insert SimpleName: schema(1517) into ReturnStatement(1518) at 0", "Move ExpressionStatement(1426) into IfStatement(1575) at 1", "Insert SimpleName: schema(1579) into MethodInvocation(1581) at 0", "Insert SimpleName: numFields(1580) into MethodInvocation(1581) at 1", "Move MethodInvocation(1464) into IfStatement(1636) at 0", "Move ExpressionStatement(1480) into IfStatement(1636) at 1", "Update SimpleName: RecyclingRecycler(139) to HollowBlobHeaderWriter", "Insert SimpleType: List(311) into ParameterizedType: List<HollowSchema>(314) at 0", "Insert SimpleType: HollowSchema(313) into ParameterizedType: List<HollowSchema>(314) at 1", "Update SimpleName: streamFilterConfig(296) to filteredSchemaList", "Insert SimpleName: header(324) into MethodInvocation(327) at 0", "Update SimpleName: streamFilterConfig(306) to setSchemas", "Move SimpleName: streamFilterConfig(306) into MethodInvocation(327) at 1", "Update SimpleName: isExcludeFilter(307) to filteredSchemaList", "Move SimpleName: isExcludeFilter(307) into MethodInvocation(327) at 2", "Insert SimpleName: headerWriter(329) into MethodInvocation(335) at 0", "Update SimpleName: streamFilterConfig(310) to writeHeader", "Move SimpleName: streamFilterConfig(310) into MethodInvocation(335) at 1", "Update SimpleName: numSpecifiedTypes(311) to header", "Move SimpleName: numSpecifiedTypes(311) into MethodInvocation(335) at 2", "Insert MethodInvocation(334) into MethodInvocation(335) at 3", "Insert MethodInvocation(344) into MethodInvocation(345) at 3", "Insert SimpleName: numRecordsToCopy(823) into VariableDeclarationFragment(825) at 0", "Insert SimpleName: maxShardOrdinal(824) into VariableDeclarationFragment(825) at 1", "Insert VariableDeclarationStatement(843) into Block(861) at 1", "Insert ExpressionStatement(849) into Block(861) at 2", "Insert EnhancedForStatement(860) into Block(861) at 3", "Update SimpleType: String(1870) to HollowSchema", "Insert SimpleName: HollowSchema(1461) into SimpleType: HollowSchema(1462) at 0", "Insert SimpleName: filteredSchema(1463) into VariableDeclarationFragment(1468) at 0", "Insert MethodInvocation(1467) into VariableDeclarationFragment(1468) at 1", "Insert SimpleName: filteredSchema(1470) into InfixExpression: !=(1472) at 0", "Insert NullLiteral(1471) into InfixExpression: !=(1472) at 1", "Move MethodInvocation(1884) into ExpressionStatement(1477) at 0", "Insert MethodInvocation(1505) into InfixExpression: ==(1507) at 0", "Insert QualifiedName: SchemaType.OBJECT(1506) into InfixExpression: ==(1507) at 1", "Insert MethodInvocation(1514) into ReturnStatement(1515) at 0", "Insert SimpleName: List(310) into SimpleType: List(311) at 0", "Update SimpleName: HollowFilterConfig(294) to HollowSchema", "Move SimpleName: HollowFilterConfig(294) into SimpleType: HollowSchema(313) at 0", "Insert SimpleName: getFilteredSchemaList(316) into MethodInvocation(321) at 0", "Insert SimpleName: unfilteredSchemaList(317) into MethodInvocation(321) at 1", "Insert MethodInvocation(320) into MethodInvocation(321) at 2", "Update SimpleName: streamFilterConfig(314) to streamAndFilter", "Move SimpleName: streamFilterConfig(314) into MethodInvocation(334) at 0", "Update SimpleName: numSpecifiedTypes(315) to getStream", "Move SimpleName: numSpecifiedTypes(315) into MethodInvocation(334) at 1", "Insert SimpleName: streamAndFilter(339) into MethodInvocation(341) at 0", "Update SimpleName: numTypesAfterFilter(327) to filteredSchemaList", "Move SimpleName: numTypesAfterFilter(327) into MethodInvocation(344) at 0", "Insert SimpleName: size(343) into MethodInvocation(344) at 1", "Insert SimpleType: GapEncodedVariableLengthIntegerReader(835) into VariableDeclarationStatement(843) at 0", "Insert VariableDeclarationFragment(842) into VariableDeclarationStatement(843) at 1", "Insert Assignment: =(848) into ExpressionStatement(849) at 0", "Insert SingleVariableDeclaration(853) into EnhancedForStatement(860) at 0", "Insert SimpleName: os(854) into EnhancedForStatement(860) at 1", "Insert ExpressionStatement(859) into EnhancedForStatement(860) at 2", "Update SimpleName: String(1869) to HollowSchema", "Update SimpleName: missingTypes(1876) to getFilteredSchema", "Move SimpleName: missingTypes(1876) into MethodInvocation(1467) at 0", "Update SimpleName: removeAll(1877) to schema", "Move SimpleName: removeAll(1877) into MethodInvocation(1467) at 1", "Update SimpleName: encounteredTypes(1878) to filterConfig", "Move SimpleName: encounteredTypes(1878) into MethodInvocation(1467) at 2", "Update SimpleName: Collections(1881) to filteredList", "Update SimpleName: sort(1882) to add", "Update SimpleName: missingTypes(1883) to filteredSchema", "Insert SimpleName: schema(1503) into MethodInvocation(1505) at 0", "Insert SimpleName: getSchemaType(1504) into MethodInvocation(1505) at 1", "Insert SimpleName: getFilteredObjectSchema(1508) into MethodInvocation(1514) at 0", "Insert CastExpression(1512) into MethodInvocation(1514) at 1", "Insert SimpleName: filterConfig(1513) into MethodInvocation(1514) at 2", "Insert SimpleName: streamAndFilter(318) into MethodInvocation(320) at 0", "Move SimpleName: getConfig(300) into MethodInvocation(320) at 1", "Insert SimpleName: GapEncodedVariableLengthIntegerReader(834) into SimpleType: GapEncodedVariableLengthIntegerReader(835) at 0", "Insert SimpleName: addedOrdinals(836) into VariableDeclarationFragment(842) at 0", "Insert MethodInvocation(841) into VariableDeclarationFragment(842) at 1", "Insert SimpleName: numRecordsToCopy(844) into Assignment: =(848) at 0", "Insert MethodInvocation(847) into Assignment: =(848) at 1", "Insert SimpleType: DataOutputStream(851) into SingleVariableDeclaration(853) at 0", "Insert SimpleName: stream(852) into SingleVariableDeclaration(853) at 1", "Insert MethodInvocation(858) into ExpressionStatement(859) at 0", "Insert SimpleType: HollowObjectSchema(1510) into CastExpression(1512) at 0", "Insert SimpleName: schema(1511) into CastExpression(1512) at 1", "Insert SimpleName: GapEncodedVariableLengthIntegerReader(837) into MethodInvocation(841) at 0", "Update SimpleName: copyEncodedDeltaOrdinals(809) to readEncodedDeltaOrdinals", "Move SimpleName: copyEncodedDeltaOrdinals(809) into MethodInvocation(841) at 1", "Move SimpleName: is(810) into MethodInvocation(841) at 2", "Insert SimpleName: memoryRecycler(840) into MethodInvocation(841) at 3", "Insert SimpleName: addedOrdinals(845) into MethodInvocation(847) at 0", "Insert SimpleName: remainingElements(846) into MethodInvocation(847) at 1", "Insert SimpleName: DataOutputStream(850) into SimpleType: DataOutputStream(851) at 0", "Insert SimpleName: addedOrdinals(855) into MethodInvocation(858) at 0", "Insert SimpleName: writeTo(856) into MethodInvocation(858) at 1", "Insert SimpleName: stream(857) into MethodInvocation(858) at 2", "Update SimpleName: maxShardOrdinal(1043) to numRecordsToCopy", "Insert SimpleName: HollowObjectSchema(1509) into SimpleType: HollowObjectSchema(1510) at 0", "Update SimpleName: maxShardOrdinal(949) to numRecordsToCopy", "Delete SimpleType: HollowFilterConfig(295)", "Delete SimpleName: allStreamAndFilters(297)", "Delete SimpleName: i(298)", "Delete ArrayAccess(299)", "Delete SimpleName: allStreamAndFilters(322)", "Delete SimpleName: i(323)", "Delete ArrayAccess(324)", "Delete MethodInvocation(273)", "Delete MethodInvocation(274)", "Delete ExpressionStatement(275)", "Delete PrimitiveType: int(284)", "Delete SimpleName: i(285)", "Delete NumberLiteral: 0(286)", "Delete VariableDeclarationFragment(287)", "Delete VariableDeclarationExpression(288)", "Delete SimpleName: i(289)", "Delete QualifiedName: allStreamAndFilters.length(290)", "Delete InfixExpression: <(291)", "Delete SimpleName: i(292)", "Delete PostfixExpression: ++(293)", "Delete PrimitiveType: int(304)", "Delete SimpleName: numTypesAfterFilter(305)", "Delete MethodInvocation(308)", "Delete SimpleName: numStates(309)", "Delete MethodInvocation(312)", "Delete InfixExpression: -(313)", "Delete MethodInvocation(316)", "Delete ConditionalExpression(317)", "Delete VariableDeclarationFragment(318)", "Delete VariableDeclarationStatement(319)", "Delete Block(330)", "Delete ForStatement(331)", "Delete SimpleName: verifyFilteredTypesExisted(562)", "Delete SimpleName: encounteredTypes(563)", "Delete MethodInvocation(564)", "Delete ExpressionStatement(565)", "Delete SimpleName: GapEncodedVariableLengthIntegerReader(808)", "Delete SimpleName: os(811)", "Delete MethodInvocation(812)", "Delete ExpressionStatement(813)", "Delete SimpleName: expectedTypes(1872)", "Delete Block(1427)", "Delete IfStatement(1482)", "Delete Block(1483)", "Delete Modifier: private(1846)", "Delete PrimitiveType: void(1847)", "Delete SimpleName: encounteredTypes(1856)", "Delete SimpleName: containsAll(1857)", "Delete SimpleName: expectedTypes(1858)", "Delete MethodInvocation(1859)", "Delete PrefixExpression: !(1860)", "Delete MethodInvocation(1879)", "Delete ExpressionStatement(1880)", "Delete ExpressionStatement(1885)", "Delete SimpleType: IllegalArgumentException(1887)", "Delete StringLiteral: \"The following types were expected, but not encountered: \"(1888)", "Delete SimpleName: missingTypes(1889)", "Delete InfixExpression: +(1890)", "Delete ClassInstanceCreation(1891)", "Delete ThrowStatement(1892)", "Delete Block(1893)", "Delete IfStatement(1894)", "Delete Block(1895)", "Delete MethodDeclaration(1896)"]}}, {"GapEncodedVariableLengthIntegerReader_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS QualifiedName: java.io.OutputStream to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS ReturnStatement to Block at 2", "INS SimpleName: remainingElementCount to PostfixExpression: ++ at 0", "INS Block to MethodDeclaration at 3", "INS VariableDeclarationStatement to Block at 0", "INS PrimitiveType: int to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS SimpleName: remainingElementCount to ReturnStatement at 0", "INS SimpleName: remainingElementCount to VariableDeclarationFragment at 0", "INS InfixExpression: != to WhileStatement at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 1", "INS Modifier: public to MethodDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS Block to WhileStatement at 1", "INS SimpleName: advance to MethodInvocation at 0", "INS SimpleName: remainingElements to MethodDeclaration at 2", "INS WhileStatement to Block at 1", "INS QualifiedName: Integer.MAX_VALUE to InfixExpression: != at 1", "INS SimpleName: nextElement to InfixExpression: != at 0", "INS PostfixExpression: ++ to ExpressionStatement at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS SimpleName: os to MethodInvocation at 2", "INS SimpleName: numBytes to MethodInvocation at 3", "INS Block to MethodDeclaration at 5", "INS SimpleType: OutputStream to SingleVariableDeclaration at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: VarInt to MethodInvocation at 0", "INS SimpleName: os to SingleVariableDeclaration at 1", "INS SimpleName: OutputStream to SimpleType: OutputStream at 0", "INS NumberLiteral: 0 to MethodInvocation at 3", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: writeVInt to MethodInvocation at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleType: IOException to MethodDeclaration at 4", "INS ExpressionStatement to Block at 1", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS SimpleName: numBytes to MethodInvocation at 4", "INS Modifier: public to MethodDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: data to MethodInvocation at 0", "INS SimpleName: writeTo to MethodDeclaration at 2", "INS SimpleName: writeTo to MethodInvocation at 1", "INS SimpleName: os to MethodInvocation at 2"]}]}}, {"GapEncodedVariableLengthIntegerReader_diff": {"operations": ["Move ImportDeclaration(5) into CompilationUnit(340) at 4", "Insert ImportDeclaration(15) into CompilationUnit(340) at 7", "Insert QualifiedName: java.io.OutputStream(14) into ImportDeclaration(15) at 0", "Insert MethodDeclaration(189) into TypeDeclaration: class(339) at 13", "Insert MethodDeclaration(226) into TypeDeclaration: class(339) at 15", "Insert Modifier: public(167) into MethodDeclaration(189) at 0", "Insert PrimitiveType: int(168) into MethodDeclaration(189) at 1", "Insert SimpleName: remainingElements(169) into MethodDeclaration(189) at 2", "Insert Block(188) into MethodDeclaration(189) at 3", "Insert Modifier: public(203) into MethodDeclaration(226) at 0", "Insert PrimitiveType: void(204) into MethodDeclaration(226) at 1", "Insert SimpleName: writeTo(205) into MethodDeclaration(226) at 2", "Insert SingleVariableDeclaration(209) into MethodDeclaration(226) at 3", "Insert SimpleType: IOException(211) into MethodDeclaration(226) at 4", "Insert Block(225) into MethodDeclaration(226) at 5", "Insert VariableDeclarationStatement(174) into Block(188) at 0", "Insert WhileStatement(185) into Block(188) at 1", "Insert ReturnStatement(187) into Block(188) at 2", "Insert SimpleType: OutputStream(207) into SingleVariableDeclaration(209) at 0", "Insert SimpleName: os(208) into SingleVariableDeclaration(209) at 1", "Insert SimpleName: IOException(210) into SimpleType: IOException(211) at 0", "Insert ExpressionStatement(217) into Block(225) at 0", "Insert ExpressionStatement(224) into Block(225) at 1", "Insert PrimitiveType: int(170) into VariableDeclarationStatement(174) at 0", "Insert VariableDeclarationFragment(173) into VariableDeclarationStatement(174) at 1", "Insert InfixExpression: !=(177) into WhileStatement(185) at 0", "Insert Block(184) into WhileStatement(185) at 1", "Insert SimpleName: remainingElementCount(186) into ReturnStatement(187) at 0", "Insert SimpleName: OutputStream(206) into SimpleType: OutputStream(207) at 0", "Insert MethodInvocation(216) into ExpressionStatement(217) at 0", "Insert MethodInvocation(223) into ExpressionStatement(224) at 0", "Insert SimpleName: remainingElementCount(171) into VariableDeclarationFragment(173) at 0", "Insert NumberLiteral: 0(172) into VariableDeclarationFragment(173) at 1", "Insert SimpleName: nextElement(175) into InfixExpression: !=(177) at 0", "Insert QualifiedName: Integer.MAX_VALUE(176) into InfixExpression: !=(177) at 1", "Insert ExpressionStatement(180) into Block(184) at 0", "Insert ExpressionStatement(183) into Block(184) at 1", "Insert SimpleName: VarInt(212) into MethodInvocation(216) at 0", "Insert SimpleName: writeVInt(213) into MethodInvocation(216) at 1", "Insert SimpleName: os(214) into MethodInvocation(216) at 2", "Insert SimpleName: numBytes(215) into MethodInvocation(216) at 3", "Insert SimpleName: data(218) into MethodInvocation(223) at 0", "Insert SimpleName: writeTo(219) into MethodInvocation(223) at 1", "Insert SimpleName: os(220) into MethodInvocation(223) at 2", "Insert NumberLiteral: 0(221) into MethodInvocation(223) at 3", "Insert SimpleName: numBytes(222) into MethodInvocation(223) at 4", "Insert PostfixExpression: ++(179) into ExpressionStatement(180) at 0", "Insert MethodInvocation(182) into ExpressionStatement(183) at 0", "Insert SimpleName: remainingElementCount(178) into PostfixExpression: ++(179) at 0", "Insert SimpleName: advance(181) into MethodInvocation(182) at 0"]}}, {"HollowBlobHeaderReader_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 3", "MOV ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: com.netflix.hollow.core.schema.HollowSchema to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: java.util.ArrayList to ImportDeclaration at 0"]}, {"root": "UPDATE from java.io.DataOutputStream to java.util.List", "operations": ["UPD QualifiedName: java.io.DataOutputStream from java.io.DataOutputStream to java.util.List"]}, {"root": "MOVE from Block", "operations": ["MOV WhileStatement to Block at 5", "MOV ExpressionStatement to Block at 6", "MOV VariableDeclarationStatement to Block at 4", "MOV ExpressionStatement to Block at 5"]}, {"root": "INS VariableDeclarationStatement to Block at 7", "operations": ["INS SimpleName: VarInt to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: oldBytesToSkip to VariableDeclarationFragment at 0", "INS SimpleName: is to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 7", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: readVInt to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from == to !=", "operations": ["UPD InfixExpression: == from == to !="]}, {"root": "UPDATE from headerVersion to oldBytesToSkip", "operations": ["UPD SimpleName: headerVersion from headerVersion to oldBytesToSkip"]}, {"root": "INS NumberLiteral: 0 to InfixExpression: == at 1", "operations": ["INS NumberLiteral: 0 to InfixExpression: == at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: is to MethodInvocation at 2", "INS SimpleName: numSchemas to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: readVInt to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: VarInt to MethodInvocation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleType: List to ParameterizedType: List<HollowSchema> at 0", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS SimpleName: HollowSchema to SimpleType: HollowSchema at 0", "INS ParameterizedType: ArrayList<HollowSchema> to ClassInstanceCreation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ParameterizedType: List<HollowSchema> to VariableDeclarationStatement at 0", "INS SimpleType: HollowSchema to ParameterizedType: ArrayList<HollowSchema> at 1", "INS SimpleName: schemas to VariableDeclarationFragment at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<HollowSchema> at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: HollowSchema to ParameterizedType: List<HollowSchema> at 1"]}, {"root": "INS ForStatement to Block at 2", "operations": ["INS ForStatement to Block at 2", "INS SimpleName: numSchemas to InfixExpression: < at 1", "INS SimpleName: i to InfixExpression: < at 0", "INS ExpressionStatement to ForStatement at 3", "INS InfixExpression: < to ForStatement at 1"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: setSchemas to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS SimpleName: schemas to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: header to MethodInvocation at 0"]}, {"root": "MOVE from ForStatement", "operations": ["MOV VariableDeclarationExpression to ForStatement at 0", "MOV PostfixExpression: ++ to ForStatement at 2"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from dis to schemas", "operations": ["UPD SimpleName: dis from dis to schemas"]}, {"root": "INS SimpleName: add to MethodInvocation at 1", "operations": ["INS SimpleName: add to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: HollowSchema to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: is to MethodInvocation at 2"]}, {"root": "UPDATE from readUTF to readFrom", "operations": ["UPD SimpleName: readUTF from readUTF to readFrom"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: readUTF to MethodInvocation at 1"]}, {"root": "DEL QualifiedName: HollowBlobHeader.HOLLOW_BLOB_VERSION_HEADER", "operations": ["DEL QualifiedName: HollowBlobHeader.HOLLOW_BLOB_VERSION_HEADER"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: dis", "DEL PrimitiveType: int", "DEL Block", "DEL SimpleName: headerTagValue", "DEL SimpleName: readUTF", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL SimpleName: backwardCompatbilityString", "DEL PrimitiveType: long", "DEL InfixExpression: <", "DEL SimpleName: dos", "DEL SimpleName: dis", "DEL SimpleName: i", "DEL SimpleName: bytesToSkip", "DEL VariableDeclarationExpression", "DEL SimpleName: writeShort", "DEL ExpressionStatement", "DEL QualifiedName: dos.length", "DEL SimpleType: String", "DEL NumberLiteral: 0", "DEL InfixExpression: <", "DEL SimpleName: dis", "DEL VariableDeclarationFragment", "DEL SimpleName: dis", "DEL InfixExpression: <", "DEL SimpleName: backwardCompatbilityString", "DEL SimpleName: headerTagKey", "DEL PrimitiveType: int", "DEL SimpleName: dos", "DEL SimpleName: i", "DEL NumberLiteral: 0", "DEL SimpleName: j", "DEL ArrayAccess", "DEL CastExpression", "DEL SimpleName: headerTagKey", "DEL QualifiedName: dos.length", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL Modifier: public", "DEL QualifiedName: dos.length", "DEL SimpleType: IOException", "DEL SimpleName: readShort", "DEL NumberLiteral: 0", "DEL ArrayAccess", "DEL SimpleName: i", "DEL VariableDeclarationStatement", "DEL SimpleName: dos", "DEL SimpleName: bytesToSkip", "DEL SimpleName: writeVInt", "DEL SimpleName: readInt", "DEL MethodInvocation", "DEL SimpleName: writeLong", "DEL SimpleName: String", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL InfixExpression: <", "DEL ArrayAccess", "DEL SimpleName: headerVersion", "DEL PostfixExpression: ++", "DEL SimpleName: skip", "DEL VariableDeclarationStatement", "DEL PostfixExpression: ++", "DEL SimpleName: skippedBytes", "DEL VariableDeclarationStatement", "DEL InfixExpression: <", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: numHeaderTags", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL SimpleName: headerVersion", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL VariableDeclarationStatement", "DEL InfixExpression: ==", "DEL SimpleName: i", "DEL VariableDeclarationExpression", "DEL SimpleType: EOFException", "DEL MethodInvocation", "DEL SimpleName: i", "DEL VariableDeclarationStatement", "DEL SimpleName: skippedBytes", "DEL MethodInvocation", "DEL SimpleName: i", "DEL PrimitiveType: int", "DEL SimpleName: copyHeader", "DEL PrimitiveType: int", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL SimpleName: bytesToSkip", "DEL SimpleName: writeUTF", "DEL SimpleName: dis", "DEL SimpleName: dis", "DEL SimpleName: writeUTF", "DEL Assignment: -=", "DEL InfixExpression: <", "DEL ExpressionStatement", "DEL SimpleName: readVInt", "DEL MethodInvocation", "DEL Block", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleType: DataInputStream", "DEL SimpleName: IOException", "DEL VariableDeclarationFragment", "DEL VariableDeclarationExpression", "DEL SimpleName: destRandomizedTag", "DEL SimpleName: i", "DEL SimpleName: bytesToSkip", "DEL SimpleName: DataInputStream", "DEL SimpleName: j", "DEL VariableDeclarationStatement", "DEL PrimitiveType: long", "DEL VariableDeclarationStatement", "DEL SimpleName: EOFException", "DEL ForStatement", "DEL SimpleName: numHeaderTags", "DEL ExpressionStatement", "DEL QualifiedName: dos.length", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL SimpleType: String", "DEL SimpleName: i", "DEL SimpleName: i", "DEL SingleVariableDeclaration", "DEL SimpleName: i", "DEL SimpleName: writeInt", "DEL PrimitiveType: int", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: writeUTF", "DEL SimpleName: i", "DEL ArrayAccess", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleName: i", "DEL SingleVariableDeclaration", "DEL VariableDeclarationExpression", "DEL SimpleName: readLong", "DEL VariableDeclarationFragment", "DEL ArrayAccess", "DEL VariableDeclarationFragment", "DEL ForStatement", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL MethodInvocation", "DEL WhileStatement", "DEL SimpleName: destRandomizedTag", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL ForStatement", "DEL SimpleName: j", "DEL QualifiedName: HollowBlobHeader.HOLLOW_BLOB_VERSION_HEADER", "DEL SimpleName: readUTF", "DEL SimpleName: dos", "DEL PostfixExpression: ++", "DEL SimpleName: skippedBytes", "DEL Block", "DEL SimpleType: DataOutputStream", "DEL ForStatement", "DEL InfixExpression: >", "DEL SimpleName: dis", "DEL SimpleName: numHeaderTags", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: dis", "DEL SimpleName: headerTagValue", "DEL SimpleName: dos", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: dis", "DEL SimpleName: VarInt", "DEL SimpleName: dos", "DEL ArrayAccess", "DEL MethodDeclaration", "DEL SimpleName: writeLong", "DEL NumberLiteral: 0", "DEL NumberLiteral: 0", "DEL ArrayAccess", "DEL ForStatement", "DEL SimpleName: j", "DEL VariableDeclarationExpression", "DEL VariableDeclarationFragment", "DEL SimpleName: DataOutputStream", "DEL SimpleName: dis", "DEL Block", "DEL ExpressionStatement", "DEL PostfixExpression: ++", "DEL SimpleName: i", "DEL Block", "DEL ClassInstanceCreation", "DEL PrimitiveType: int", "DEL SimpleName: readUTF", "DEL ArrayAccess", "DEL NumberLiteral: 0", "DEL QualifiedName: dos.length", "DEL SimpleName: dos", "DEL VariableDeclarationStatement", "DEL SimpleName: dos", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL InfixExpression: <", "DEL MethodInvocation", "DEL ForStatement", "DEL SimpleName: readLong", "DEL SimpleName: String", "DEL SimpleName: i", "DEL ExpressionStatement", "DEL SimpleName: j", "DEL MethodInvocation", "DEL SimpleName: originRandomizedTag", "DEL SimpleName: dos", "DEL ThrowStatement", "DEL MethodInvocation", "DEL SimpleName: headerVersion", "DEL Block", "DEL PostfixExpression: ++", "DEL SimpleName: originRandomizedTag", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL SimpleName: VarInt"]}]}}, {"HollowBlobHeaderReader_diff": {"operations": ["Move ImportDeclaration(3) into CompilationUnit(290) at 3", "Move ImportDeclaration(9) into CompilationUnit(290) at 9", "Insert ImportDeclaration(7) into CompilationUnit(290) at 3", "Insert ImportDeclaration(17) into CompilationUnit(290) at 8", "Insert QualifiedName: com.netflix.hollow.core.schema.HollowSchema(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: java.util.ArrayList(16) into ImportDeclaration(17) at 0", "Update QualifiedName: java.io.DataOutputStream(8) to java.util.List", "Move ExpressionStatement(91) into Block(214) at 5", "Move ExpressionStatement(98) into Block(214) at 6", "Insert VariableDeclarationStatement(107) into Block(214) at 7", "Insert PrimitiveType: int(100) into VariableDeclarationStatement(107) at 0", "Insert VariableDeclarationFragment(106) into VariableDeclarationStatement(107) at 1", "Update InfixExpression: ==(84) to !=", "Insert SimpleName: oldBytesToSkip(101) into VariableDeclarationFragment(106) at 0", "Insert MethodInvocation(105) into VariableDeclarationFragment(106) at 1", "Update SimpleName: headerVersion(82) to oldBytesToSkip", "Insert NumberLiteral: 0(109) into InfixExpression: !=(110) at 1", "Insert VariableDeclarationStatement(118) into Block(192) at 0", "Insert VariableDeclarationStatement(132) into Block(192) at 1", "Insert ForStatement(151) into Block(192) at 2", "Insert ExpressionStatement(156) into Block(192) at 3", "Move VariableDeclarationStatement(106) into Block(192) at 4", "Move WhileStatement(133) into Block(192) at 5", "Insert SimpleName: VarInt(102) into MethodInvocation(105) at 0", "Insert SimpleName: readVInt(103) into MethodInvocation(105) at 1", "Insert SimpleName: is(104) into MethodInvocation(105) at 2", "Insert PrimitiveType: int(111) into VariableDeclarationStatement(118) at 0", "Insert VariableDeclarationFragment(117) into VariableDeclarationStatement(118) at 1", "Insert ParameterizedType: List<HollowSchema>(123) into VariableDeclarationStatement(132) at 0", "Insert VariableDeclarationFragment(131) into VariableDeclarationStatement(132) at 1", "Move VariableDeclarationExpression(260) into ForStatement(151) at 0", "Insert InfixExpression: <(140) into ForStatement(151) at 1", "Move PostfixExpression: ++(265) into ForStatement(151) at 2", "Insert ExpressionStatement(150) into ForStatement(151) at 3", "Insert MethodInvocation(155) into ExpressionStatement(156) at 0", "Insert SimpleName: numSchemas(112) into VariableDeclarationFragment(117) at 0", "Insert MethodInvocation(116) into VariableDeclarationFragment(117) at 1", "Insert SimpleType: List(120) into ParameterizedType: List<HollowSchema>(123) at 0", "Insert SimpleType: HollowSchema(122) into ParameterizedType: List<HollowSchema>(123) at 1", "Insert SimpleName: schemas(124) into VariableDeclarationFragment(131) at 0", "Insert ClassInstanceCreation(130) into VariableDeclarationFragment(131) at 1", "Insert SimpleName: i(138) into InfixExpression: <(140) at 0", "Insert SimpleName: numSchemas(139) into InfixExpression: <(140) at 1", "Move MethodInvocation(137) into ExpressionStatement(150) at 0", "Insert SimpleName: header(152) into MethodInvocation(155) at 0", "Insert SimpleName: setSchemas(153) into MethodInvocation(155) at 1", "Insert SimpleName: schemas(154) into MethodInvocation(155) at 2", "Insert SimpleName: VarInt(113) into MethodInvocation(116) at 0", "Insert SimpleName: readVInt(114) into MethodInvocation(116) at 1", "Insert SimpleName: is(115) into MethodInvocation(116) at 2", "Insert SimpleName: List(119) into SimpleType: List(120) at 0", "Insert SimpleName: HollowSchema(121) into SimpleType: HollowSchema(122) at 0", "Insert ParameterizedType: ArrayList<HollowSchema>(129) into ClassInstanceCreation(130) at 0", "Update SimpleName: dis(135) to schemas", "Insert SimpleName: add(144) into MethodInvocation(149) at 1", "Insert MethodInvocation(148) into MethodInvocation(149) at 2", "Insert SimpleType: ArrayList(126) into ParameterizedType: ArrayList<HollowSchema>(129) at 0", "Insert SimpleType: HollowSchema(128) into ParameterizedType: ArrayList<HollowSchema>(129) at 1", "Insert SimpleName: HollowSchema(145) into MethodInvocation(148) at 0", "Update SimpleName: readUTF(136) to readFrom", "Move SimpleName: readUTF(136) into MethodInvocation(148) at 1", "Insert SimpleName: is(147) into MethodInvocation(148) at 2", "Insert SimpleName: ArrayList(125) into SimpleType: ArrayList(126) at 0", "Insert SimpleName: HollowSchema(127) into SimpleType: HollowSchema(128) at 0", "Delete QualifiedName: HollowBlobHeader.HOLLOW_BLOB_VERSION_HEADER(83)", "Delete Block(134)", "Delete ExpressionStatement(138)", "Delete Modifier: public(236)", "Delete PrimitiveType: void(237)", "Delete SimpleName: copyHeader(238)", "Delete SimpleName: DataInputStream(239)", "Delete SimpleType: DataInputStream(240)", "Delete SimpleName: dis(241)", "Delete SingleVariableDeclaration(242)", "Delete SimpleName: DataOutputStream(243)", "Delete SimpleType: DataOutputStream(244)", "Delete SimpleName: dos(245)", "Delete SingleVariableDeclaration(246)", "Delete SimpleName: IOException(247)", "Delete SimpleType: IOException(248)", "Delete PrimitiveType: int(249)", "Delete SimpleName: headerVersion(250)", "Delete SimpleName: dis(251)", "Delete SimpleName: readInt(252)", "Delete MethodInvocation(253)", "Delete VariableDeclarationFragment(254)", "Delete VariableDeclarationStatement(255)", "Delete SimpleName: i(261)", "Delete QualifiedName: dos.length(262)", "Delete InfixExpression: <(263)", "Delete SimpleName: dos(266)", "Delete SimpleName: i(267)", "Delete ArrayAccess(268)", "Delete SimpleName: writeInt(269)", "Delete SimpleName: headerVersion(270)", "Delete MethodInvocation(271)", "Delete ExpressionStatement(272)", "Delete ForStatement(273)", "Delete SimpleName: headerVersion(274)", "Delete QualifiedName: HollowBlobHeader.HOLLOW_BLOB_VERSION_HEADER(275)", "Delete InfixExpression: ==(276)", "Delete PrimitiveType: long(277)", "Delete SimpleName: originRandomizedTag(278)", "Delete SimpleName: dis(279)", "Delete SimpleName: readLong(280)", "Delete MethodInvocation(281)", "Delete VariableDeclarationFragment(282)", "Delete VariableDeclarationStatement(283)", "Delete PrimitiveType: long(284)", "Delete SimpleName: destRandomizedTag(285)", "Delete SimpleName: dis(286)", "Delete SimpleName: readLong(287)", "Delete MethodInvocation(288)", "Delete VariableDeclarationFragment(289)", "Delete VariableDeclarationStatement(290)", "Delete PrimitiveType: int(291)", "Delete SimpleName: bytesToSkip(292)", "Delete SimpleName: VarInt(293)", "Delete SimpleName: readVInt(294)", "Delete SimpleName: dis(295)", "Delete MethodInvocation(296)", "Delete VariableDeclarationFragment(297)", "Delete VariableDeclarationStatement(298)", "Delete SimpleName: bytesToSkip(299)", "Delete NumberLiteral: 0(300)", "Delete InfixExpression: >(301)", "Delete PrimitiveType: int(302)", "Delete SimpleName: skippedBytes(303)", "Delete PrimitiveType: int(304)", "Delete SimpleName: dis(305)", "Delete SimpleName: skip(306)", "Delete SimpleName: bytesToSkip(307)", "Delete MethodInvocation(308)", "Delete CastExpression(309)", "Delete VariableDeclarationFragment(310)", "Delete VariableDeclarationStatement(311)", "Delete SimpleName: skippedBytes(312)", "Delete NumberLiteral: 0(313)", "Delete InfixExpression: <(314)", "Delete SimpleName: EOFException(315)", "Delete SimpleType: EOFException(316)", "Delete ClassInstanceCreation(317)", "Delete ThrowStatement(318)", "Delete IfStatement(319)", "Delete SimpleName: bytesToSkip(320)", "Delete SimpleName: skippedBytes(321)", "Delete Assignment: -=(322)", "Delete ExpressionStatement(323)", "Delete Block(324)", "Delete WhileStatement(325)", "Delete PrimitiveType: int(326)", "Delete SimpleName: i(327)", "Delete NumberLiteral: 0(328)", "Delete VariableDeclarationFragment(329)", "Delete VariableDeclarationExpression(330)", "Delete SimpleName: i(331)", "Delete QualifiedName: dos.length(332)", "Delete InfixExpression: <(333)", "Delete SimpleName: i(334)", "Delete PostfixExpression: ++(335)", "Delete SimpleName: dos(336)", "Delete SimpleName: i(337)", "Delete ArrayAccess(338)", "Delete SimpleName: writeLong(339)", "Delete SimpleName: originRandomizedTag(340)", "Delete MethodInvocation(341)", "Delete ExpressionStatement(342)", "Delete SimpleName: dos(343)", "Delete SimpleName: i(344)", "Delete ArrayAccess(345)", "Delete SimpleName: writeLong(346)", "Delete SimpleName: destRandomizedTag(347)", "Delete MethodInvocation(348)", "Delete ExpressionStatement(349)", "Delete SimpleName: VarInt(350)", "Delete SimpleName: writeVInt(351)", "Delete SimpleName: dos(352)", "Delete SimpleName: i(353)", "Delete ArrayAccess(354)", "Delete NumberLiteral: 0(355)", "Delete MethodInvocation(356)", "Delete ExpressionStatement(357)", "Delete Block(358)", "Delete ForStatement(359)", "Delete Block(360)", "Delete SimpleName: String(361)", "Delete SimpleType: String(362)", "Delete SimpleName: backwardCompatbilityString(363)", "Delete SimpleName: dis(364)", "Delete SimpleName: readUTF(365)", "Delete MethodInvocation(366)", "Delete VariableDeclarationFragment(367)", "Delete VariableDeclarationStatement(368)", "Delete PrimitiveType: int(369)", "Delete SimpleName: i(370)", "Delete NumberLiteral: 0(371)", "Delete VariableDeclarationFragment(372)", "Delete VariableDeclarationExpression(373)", "Delete SimpleName: i(374)", "Delete QualifiedName: dos.length(375)", "Delete InfixExpression: <(376)", "Delete SimpleName: i(377)", "Delete PostfixExpression: ++(378)", "Delete SimpleName: dos(379)", "Delete SimpleName: i(380)", "Delete ArrayAccess(381)", "Delete SimpleName: writeUTF(382)", "Delete SimpleName: backwardCompatbilityString(383)", "Delete MethodInvocation(384)", "Delete ExpressionStatement(385)", "Delete ForStatement(386)", "Delete Block(387)", "Delete IfStatement(388)", "Delete PrimitiveType: int(389)", "Delete SimpleName: numHeaderTags(390)", "Delete SimpleName: dis(391)", "Delete SimpleName: readShort(392)", "Delete MethodInvocation(393)", "Delete VariableDeclarationFragment(394)", "Delete VariableDeclarationStatement(395)", "Delete PrimitiveType: int(396)", "Delete SimpleName: i(397)", "Delete NumberLiteral: 0(398)", "Delete VariableDeclarationFragment(399)", "Delete VariableDeclarationExpression(400)", "Delete SimpleName: i(401)", "Delete QualifiedName: dos.length(402)", "Delete InfixExpression: <(403)", "Delete SimpleName: i(404)", "Delete PostfixExpression: ++(405)", "Delete SimpleName: dos(406)", "Delete SimpleName: i(407)", "Delete ArrayAccess(408)", "Delete SimpleName: writeShort(409)", "Delete SimpleName: numHeaderTags(410)", "Delete MethodInvocation(411)", "Delete ExpressionStatement(412)", "Delete ForStatement(413)", "Delete PrimitiveType: int(414)", "Delete SimpleName: i(415)", "Delete NumberLiteral: 0(416)", "Delete VariableDeclarationFragment(417)", "Delete VariableDeclarationExpression(418)", "Delete SimpleName: i(419)", "Delete SimpleName: numHeaderTags(420)", "Delete InfixExpression: <(421)", "Delete SimpleName: i(422)", "Delete PostfixExpression: ++(423)", "Delete SimpleName: String(424)", "Delete SimpleType: String(425)", "Delete SimpleName: headerTagKey(426)", "Delete SimpleName: dis(427)", "Delete SimpleName: readUTF(428)", "Delete MethodInvocation(429)", "Delete VariableDeclarationFragment(430)", "Delete VariableDeclarationStatement(431)", "Delete SimpleName: String(432)", "Delete SimpleType: String(433)", "Delete SimpleName: headerTagValue(434)", "Delete SimpleName: dis(435)", "Delete SimpleName: readUTF(436)", "Delete MethodInvocation(437)", "Delete VariableDeclarationFragment(438)", "Delete VariableDeclarationStatement(439)", "Delete PrimitiveType: int(440)", "Delete SimpleName: j(441)", "Delete NumberLiteral: 0(442)", "Delete VariableDeclarationFragment(443)", "Delete VariableDeclarationExpression(444)", "Delete SimpleName: j(445)", "Delete QualifiedName: dos.length(446)", "Delete InfixExpression: <(447)", "Delete SimpleName: j(448)", "Delete PostfixExpression: ++(449)", "Delete SimpleName: dos(450)", "Delete SimpleName: j(451)", "Delete ArrayAccess(452)", "Delete SimpleName: writeUTF(453)", "Delete SimpleName: headerTagKey(454)", "Delete MethodInvocation(455)", "Delete ExpressionStatement(456)", "Delete SimpleName: dos(457)", "Delete SimpleName: j(458)", "Delete ArrayAccess(459)", "Delete SimpleName: writeUTF(460)", "Delete SimpleName: headerTagValue(461)", "Delete MethodInvocation(462)", "Delete ExpressionStatement(463)", "Delete Block(464)", "Delete ForStatement(465)", "Delete Block(466)", "Delete ForStatement(467)", "Delete Block(468)", "Delete MethodDeclaration(469)"]}}], "commit_stats": [{"total_files": 7, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}