{"application": "apache-calcite", "csha": "b4df7c97bb7905cb2c510a08830b8bd710107119", "files": [{"SqlDialect_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS SwitchStatement to Block at 0", "INS MemberRef to TagElement: @link at 0", "INS MemberRef to TagElement: @link at 0", "INS TagElement: @link to TagElement at 3", "INS TextElement: <p>For example, in  to TagElement at 2", "INS TextElement: <blockquote>SELECT * FROM sales.emp</blockquote> to TagElement at 4", "INS TextElement: alias, so the previous query it not valid; you need to write to TagElement at 12", "INS TextElement: <blockquote>SELECT sales.emp.empno FROM sales.emp</blockquote> to TagElement at 13", "INS TextElement: <blockquote>SELECT * FROM sales.emp AS emp</blockquote> to TagElement at 6", "INS TextElement:  does not have an implicit to TagElement at 11", "INS TagElement to Javadoc at 0", "INS SwitchCase to SwitchStatement at 1", "INS SimpleName: DatabaseProduct to MemberRef at 0", "INS TagElement: @link to TagElement at 10", "INS MethodDeclaration to TypeDeclaration: class at 25", "INS ReturnStatement to SwitchStatement at 4", "INS SimpleName: DatabaseProduct to MemberRef at 0", "INS SimpleName: ORACLE to MemberRef at 1", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: which consists of just the table name. to TagElement at 1", "INS ReturnStatement to SwitchStatement at 2", "INS SwitchCase to SwitchStatement at 3", "INS SimpleName: hasImplicitTableAlias to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS TextElement: <p>and therefore to TagElement at 7", "INS TextElement: <p>Returns true for all databases except DB2. to TagElement at 14", "INS SimpleName: DB2 to SwitchCase at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS TextElement: <blockquote>SELECT emp.empno FROM sales.emp</blockquote> to TagElement at 8", "INS SimpleName: databaseProduct to SwitchStatement at 0", "INS SimpleName: DB2 to MemberRef at 1", "INS TextElement: <p>is valid. But  to TagElement at 9", "INS BooleanLiteral: true to ReturnStatement at 0", "INS TextElement: <p>is equivalent to to TagElement at 5", "INS TextElement: Returns whether a qualified table in the FROM clause has an implicit alias to TagElement at 0"]}]}}, {"SqlDialect_diff": {"operations": ["Insert MethodDeclaration(1226) into TypeDeclaration: class(1843) at 25", "Insert Javadoc(1212) into MethodDeclaration(1226) at 0", "Insert Modifier: public(1213) into MethodDeclaration(1226) at 1", "Insert PrimitiveType: boolean(1214) into MethodDeclaration(1226) at 2", "Insert SimpleName: hasImplicitTableAlias(1215) into MethodDeclaration(1226) at 3", "Insert Block(1225) into MethodDeclaration(1226) at 4", "Insert TagElement(1211) into Javadoc(1212) at 0", "Insert SwitchStatement(1224) into Block(1225) at 0", "Insert TextElement: Returns whether a qualified table in the FROM clause has an implicit alias(1190) into TagElement(1211) at 0", "Insert TextElement: which consists of just the table name.(1191) into TagElement(1211) at 1", "Insert TextElement: <p>For example, in (1192) into TagElement(1211) at 2", "Insert TagElement: @link(1196) into TagElement(1211) at 3", "Insert TextElement: <blockquote>SELECT * FROM sales.emp</blockquote>(1197) into TagElement(1211) at 4", "Insert TextElement: <p>is equivalent to(1198) into TagElement(1211) at 5", "Insert TextElement: <blockquote>SELECT * FROM sales.emp AS emp</blockquote>(1199) into TagElement(1211) at 6", "Insert TextElement: <p>and therefore(1200) into TagElement(1211) at 7", "Insert TextElement: <blockquote>SELECT emp.empno FROM sales.emp</blockquote>(1201) into TagElement(1211) at 8", "Insert TextElement: <p>is valid. But (1202) into TagElement(1211) at 9", "Insert TagElement: @link(1206) into TagElement(1211) at 10", "Insert TextElement:  does not have an implicit(1207) into TagElement(1211) at 11", "Insert TextElement: alias, so the previous query it not valid; you need to write(1208) into TagElement(1211) at 12", "Insert TextElement: <blockquote>SELECT sales.emp.empno FROM sales.emp</blockquote>(1209) into TagElement(1211) at 13", "Insert TextElement: <p>Returns true for all databases except DB2.(1210) into TagElement(1211) at 14", "Insert SimpleName: databaseProduct(1216) into SwitchStatement(1224) at 0", "Insert SwitchCase(1218) into SwitchStatement(1224) at 1", "Insert ReturnStatement(1220) into SwitchStatement(1224) at 2", "Insert SwitchCase(1221) into SwitchStatement(1224) at 3", "Insert ReturnStatement(1223) into SwitchStatement(1224) at 4", "Insert MemberRef(1195) into TagElement: @link(1196) at 0", "Insert MemberRef(1205) into TagElement: @link(1206) at 0", "Insert SimpleName: DB2(1217) into SwitchCase(1218) at 0", "Insert BooleanLiteral: false(1219) into ReturnStatement(1220) at 0", "Insert BooleanLiteral: true(1222) into ReturnStatement(1223) at 0", "Insert SimpleName: DatabaseProduct(1193) into MemberRef(1195) at 0", "Insert SimpleName: ORACLE(1194) into MemberRef(1195) at 1", "Insert SimpleName: DatabaseProduct(1203) into MemberRef(1205) at 0", "Insert SimpleName: DB2(1204) into MemberRef(1205) at 1"]}}, {"JdbcImplementor_cluster": {"actions": [{"root": "UPDATE from java.util.Collections to com.google.common.collect.ImmutableList", "operations": ["UPD QualifiedName: java.util.Collections from java.util.Collections to com.google.common.collect.ImmutableList"]}, {"root": "INS NullLiteral to MethodInvocation at 4", "operations": ["INS NullLiteral to MethodInvocation at 4"]}, {"root": "UPDATE from Collections to ImmutableList", "operations": ["UPD SimpleName: Collections from Collections to ImmutableList"]}, {"root": "UPDATE from singletonList to of", "operations": ["UPD SimpleName: singletonList from singletonList to of"]}]}}, {"JdbcImplementor_diff": {"operations": ["Update QualifiedName: java.util.Collections(12) to com.google.common.collect.ImmutableList", "Insert NullLiteral(62) into MethodInvocation(63) at 4", "Update SimpleName: Collections(57) to ImmutableList", "Update SimpleName: singletonList(58) to of"]}}, {"JdbcTableScan_cluster": {"actions": [{"root": "UPDATE from java.util.Collections to com.google.common.collect.ImmutableList", "operations": ["UPD QualifiedName: java.util.Collections from java.util.Collections to com.google.common.collect.ImmutableList"]}, {"root": "INS NullLiteral to MethodInvocation at 5", "operations": ["INS NullLiteral to MethodInvocation at 5"]}, {"root": "UPDATE from Collections to ImmutableList", "operations": ["UPD SimpleName: Collections from Collections to ImmutableList"]}, {"root": "UPDATE from singletonList to of", "operations": ["UPD SimpleName: singletonList from singletonList to of"]}]}}, {"JdbcTableScan_diff": {"operations": ["Update QualifiedName: java.util.Collections(12) to com.google.common.collect.ImmutableList", "Insert NullLiteral(122) into MethodInvocation(123) at 5", "Update SimpleName: Collections(117) to ImmutableList", "Update SimpleName: singletonList(118) to of"]}}, {"RelToSqlConverter_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 41"]}, {"root": "INS ImportDeclaration to CompilationUnit at 38", "operations": ["INS ImportDeclaration to CompilationUnit at 38", "INS QualifiedName: com.google.common.collect.ImmutableMap to ImportDeclaration at 0"]}, {"root": "UPDATE from java.util.Collections to java.util.Map", "operations": ["UPD QualifiedName: java.util.Collections from java.util.Collections to java.util.Map"]}, {"root": "UPDATE from Pair<String,RelDataType> to Map<String,RelDataType>", "operations": ["UPD ParameterizedType: Pair<String,RelDataType> from Pair<String,RelDataType> to Map<String,RelDataType>"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Pair<String,RelDataType> to VariableDeclarationStatement at 1"]}, {"root": "INS NullLiteral to MethodInvocation at 4", "operations": ["INS NullLiteral to MethodInvocation at 4"]}, {"root": "UPDATE from Pair to Map", "operations": ["UPD SimpleName: Pair from Pair to Map", "UPD SimpleType: Pair from Pair to Map"]}, {"root": "INS NullLiteral to MethodInvocation at 4", "operations": ["INS NullLiteral to MethodInvocation at 4"]}, {"root": "UPDATE from Collections to ImmutableList", "operations": ["UPD SimpleName: Collections from Collections to ImmutableList", "UPD SimpleName: Collections from Collections to ImmutableList"]}, {"root": "UPDATE from singletonList to of", "operations": ["UPD SimpleName: singletonList from singletonList to of", "UPD SimpleName: singletonList from singletonList to of"]}, {"root": "UPDATE from ImmutableList to ImmutableMap", "operations": ["UPD SimpleName: ImmutableList from ImmutableList to ImmutableMap"]}, {"root": "DEL ParameterizedType: List<Pair<String,RelDataType>>", "operations": ["DEL ParameterizedType: List<Pair<String,RelDataType>>", "DEL SimpleName: List", "DEL SimpleType: List"]}]}}, {"RelToSqlConverter_diff": {"operations": ["Move ImportDeclaration(79) into CompilationUnit(1357) at 41", "Insert ImportDeclaration(77) into CompilationUnit(1357) at 38", "Insert QualifiedName: com.google.common.collect.ImmutableMap(76) into ImportDeclaration(77) at 0", "Update QualifiedName: java.util.Collections(78) to java.util.Map", "Update ParameterizedType: Pair<String,RelDataType>(947) to Map<String,RelDataType>", "Move ParameterizedType: Pair<String,RelDataType>(947) into VariableDeclarationStatement(954) at 1", "Insert NullLiteral(695) into MethodInvocation(696) at 4", "Update SimpleType: Pair(942) to Map", "Insert NullLiteral(1095) into MethodInvocation(1096) at 4", "Update SimpleName: Collections(688) to ImmutableList", "Update SimpleName: singletonList(689) to of", "Update SimpleName: Collections(932) to ImmutableList", "Update SimpleName: singletonList(933) to of", "Update SimpleName: Pair(941) to Map", "Update SimpleName: ImmutableList(950) to ImmutableMap", "Delete SimpleName: List(939)", "Delete SimpleType: List(940)", "Delete ParameterizedType: List<Pair<String,RelDataType>>(948)"]}}, {"SqlImplementor_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 48", "MOV ImportDeclaration to CompilationUnit at 57"]}, {"root": "UPDATE from org.apache.calcite.util.Pair to com.google.common.collect.ImmutableMap", "operations": ["UPD QualifiedName: org.apache.calcite.util.Pair from org.apache.calcite.util.Pair to com.google.common.collect.ImmutableMap"]}, {"root": "UPDATE from java.util.Collections to java.util.LinkedHashMap", "operations": ["UPD QualifiedName: java.util.Collections from java.util.Collections to java.util.LinkedHashMap"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleName: Map to SimpleType: Map at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: aliases to SingleVariableDeclaration at 1", "INS SimpleType: Map to ParameterizedType: Map<String,RelDataType> at 0", "INS SimpleName: RelDataType to SimpleType: RelDataType at 0", "INS ParameterizedType: Map<String,RelDataType> to SingleVariableDeclaration at 0", "INS SimpleType: RelDataType to ParameterizedType: Map<String,RelDataType> at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleType: RelDataType to SingleVariableDeclaration at 0", "INS SimpleName: aliases to MethodInvocation at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS EnhancedForStatement to Block at 1", "INS SimpleName: values to MethodInvocation at 1", "INS Block to MethodDeclaration at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: aliases to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: aliases to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS AssertStatement to Block at 0", "operations": ["INS InstanceofExpression to InfixExpression: || at 1", "INS SimpleName: aliases to InfixExpression: == at 0", "INS MethodInvocation to InfixExpression: < at 0", "INS SimpleName: aliases to InstanceofExpression at 0", "INS InfixExpression: == to InfixExpression: || at 0", "INS NumberLiteral: 2 to InfixExpression: < at 1", "INS StringLiteral: \"must use a Map implementation that preserves order\" to AssertStatement at 1", "INS InfixExpression: || to InfixExpression: || at 0", "INS AssertStatement to Block at 0", "INS SimpleName: aliases to InstanceofExpression at 0", "INS SimpleName: ImmutableMap to SimpleType: ImmutableMap at 0", "INS InstanceofExpression to InfixExpression: || at 1", "INS SimpleType: LinkedHashMap to InstanceofExpression at 1", "INS InfixExpression: || to AssertStatement at 0", "INS InfixExpression: || to InfixExpression: || at 0", "INS SimpleName: size to MethodInvocation at 1", "INS InfixExpression: < to InfixExpression: || at 1", "INS SimpleType: ImmutableMap to InstanceofExpression at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: LinkedHashMap to SimpleType: LinkedHashMap at 0", "INS SimpleName: aliases to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 4", "operations": ["INS InfixExpression: && to IfStatement at 0", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: node to ClassInstanceCreation at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: dialect to MethodInvocation at 0", "INS SimpleName: aliases to InfixExpression: != at 0", "INS SimpleName: alias4 to ClassInstanceCreation at 3", "INS SimpleName: clauses to ClassInstanceCreation at 2", "INS InfixExpression: != to InfixExpression: && at 0", "INS IfStatement to Block at 4", "INS SimpleName: hasImplicitTableAlias to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS Block to IfStatement at 1", "INS SimpleName: aliases to ClassInstanceCreation at 4", "INS SimpleName: aliases to MethodInvocation at 0", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS InfixExpression: && to InfixExpression: && at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 5", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS VariableDeclarationStatement to Block at 5"]}, {"root": "INS IfStatement to Block at 6", "operations": ["INS SimpleName: hasImplicitTableAlias to MethodInvocation at 1", "INS SimpleName: alias5 to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS Block to IfStatement at 2", "INS PrefixExpression: ! to InfixExpression: || at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: alias5 to Assignment: = at 0", "INS SimpleName: alias4 to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: dialect to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: || to IfStatement at 0", "INS NullLiteral to Assignment: = at 1", "INS IfStatement to Block at 6"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleType: String to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: builder to MethodInvocation at 3", "INS SimpleType: RelDataType to MethodInvocation at 2", "INS SimpleName: RelDataType to SimpleType: RelDataType at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: build to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: ImmutableMap to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2"]}, {"root": "UPDATE from Pair<String,RelDataType> to Map<String,RelDataType>", "operations": ["UPD ParameterizedType: Pair<String,RelDataType> from Pair<String,RelDataType> to Map<String,RelDataType>", "UPD ParameterizedType: Pair<String,RelDataType> from Pair<String,RelDataType> to Map<String,RelDataType>", "UPD ParameterizedType: Pair<String,RelDataType> from Pair<String,RelDataType> to Map<String,RelDataType>", "UPD ParameterizedType: Pair<String,RelDataType> from Pair<String,RelDataType> to Map<String,RelDataType>", "UPD ParameterizedType: Pair<String,RelDataType> from Pair<String,RelDataType> to Map<String,RelDataType>", "UPD ParameterizedType: Pair<String,RelDataType> from Pair<String,RelDataType> to Map<String,RelDataType>", "UPD ParameterizedType: List<Pair<String,RelDataType>> from List<Pair<String,RelDataType>> to Map<String,RelDataType>", "UPD ParameterizedType: Pair<String,RelDataType> from Pair<String,RelDataType> to Map<String,RelDataType>"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ParameterizedType: Pair<String,RelDataType> to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ParameterizedType: Pair<String,RelDataType> to SingleVariableDeclaration at 0"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV ParameterizedType: Pair<String,RelDataType> to FieldDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV ParameterizedType: Pair<String,RelDataType> to FieldDeclaration at 2"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV ParameterizedType: Pair<String,RelDataType> to FieldDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleType: Map to ParameterizedType: Map<String,RelDataType> at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: RelDataType to ParameterizedType: Map<String,RelDataType> at 2", "INS SimpleName: aliases to SingleVariableDeclaration at 1", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleType: String to ParameterizedType: Map<String,RelDataType> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: RelDataType to SimpleType: RelDataType at 0", "INS ParameterizedType: Map<String,RelDataType> to SingleVariableDeclaration at 0"]}, {"root": "MOVE from ParameterizedType: Map<String,RelDataType>", "operations": ["MOV SimpleType: String to ParameterizedType: Map<String,RelDataType> at 1", "MOV Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "MOVE from ParameterizedType: List<Pair<String,RelDataType>>", "operations": ["MOV SimpleType: RelDataType to ParameterizedType: List<Pair<String,RelDataType>> at 2", "MOV SimpleType: Pair to ParameterizedType: List<Pair<String,RelDataType>> at 1", "MOV SimpleType: String to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV Modifier: final to VariableDeclarationStatement at 0", "MOV ParameterizedType: List<Pair<String,RelDataType>> to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from Pair to Map", "operations": ["UPD SimpleType: Pair from Pair to Map", "UPD SimpleType: Pair from Pair to Map", "UPD SimpleName: List from List to Map", "UPD SimpleType: Pair from Pair to Map", "UPD SimpleName: Pair from Pair to Map", "UPD SimpleName: Pair from Pair to Map", "UPD SimpleType: Pair from Pair to Map", "UPD SimpleName: Pair from Pair to Map", "UPD SimpleName: Pair from Pair to Map", "UPD SimpleType: Pair from Pair to Map", "UPD SimpleName: List from List to Map", "UPD SimpleName: Pair from Pair to Map", "UPD SimpleType: Pair from Pair to Map", "UPD SimpleName: Pair from Pair to Map", "UPD SimpleType: List from List to Map", "UPD SimpleType: List from List to Map", "UPD SimpleName: Pair from Pair to Map", "UPD SimpleType: Pair from Pair to Map"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV Block to EnhancedForStatement at 2", "MOV SingleVariableDeclaration to EnhancedForStatement at 0"]}, {"root": "UPDATE from list to aliases", "operations": ["UPD SimpleName: list from list to aliases", "UPD SimpleName: list from list to aliases", "UPD SimpleName: alias from alias to aliases"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV ParameterizedType: Pair<String,RelDataType> to SingleVariableDeclaration at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS IfStatement to Block at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: hasImplicitTableAlias to MethodInvocation at 1", "INS SimpleName: asFrom to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: wrapSelect to MethodInvocation at 0", "INS SimpleName: dialect to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS ThisExpression to FieldAccess at 0", "INS SimpleName: aliases to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 4", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: aliases to Assignment: = at 1"]}, {"root": "INS NullLiteral to MethodInvocation at 4", "operations": ["INS NullLiteral to MethodInvocation at 4"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: alias5 to VariableDeclarationFragment at 0"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: || to InfixExpression: || at 0"]}, {"root": "INS SimpleType: Result to ClassInstanceCreation at 0", "operations": ["INS SimpleName: Result to SimpleType: Result at 0", "INS SimpleType: Result to ClassInstanceCreation at 0"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 5", "operations": ["INS MethodInvocation to ClassInstanceCreation at 5"]}, {"root": "UPDATE from Pair to String", "operations": ["UPD SimpleType: Pair from Pair to String", "UPD SimpleName: ArrayList from ArrayList to String", "UPD SimpleName: Pair from Pair to String"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: list to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from aliases to type", "operations": ["UPD SimpleName: aliases from aliases to type"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleName: aliases to SingleVariableDeclaration at 1"]}, {"root": "INS MethodInvocation to EnhancedForStatement at 1", "operations": ["INS SimpleName: aliases to MethodInvocation at 0", "INS SimpleName: entrySet to MethodInvocation at 1", "INS MethodInvocation to EnhancedForStatement at 1"]}, {"root": "INS Block to IfStatement at 2", "operations": ["INS MethodInvocation to MethodInvocation at 1", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: newContext to Assignment: = at 0", "INS InfixExpression: || to VariableDeclarationFragment at 1", "INS SimpleName: of to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: rel to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: needNew to IfStatement at 0", "INS PrefixExpression: ! to InfixExpression: || at 0", "INS MethodInvocation to MethodInvocation at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: dialect to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS SimpleName: hasImplicitTableAlias to MethodInvocation at 1", "INS SimpleName: qualified to VariableDeclarationFragment at 0", "INS Block to IfStatement at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getRowType to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: neededAlias to MethodInvocation at 2", "INS SimpleName: aliasContext to MethodInvocation at 0", "INS SimpleName: ImmutableMap to MethodInvocation at 0", "INS SimpleName: qualified to MethodInvocation at 2"]}, {"root": "UPDATE from Pair to ImmutableMap", "operations": ["UPD SimpleName: Pair from Pair to ImmutableMap"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3", "MOV SimpleName: Pair to MethodInvocation at 0", "MOV SimpleName: of to MethodInvocation at 1", "MOV SimpleName: alias4 to MethodInvocation at 2"]}, {"root": "UPDATE from List to RelDataType", "operations": ["UPD SimpleName: List from List to RelDataType"]}, {"root": "MOVE from SimpleType: RelDataType", "operations": ["MOV SimpleName: List to SimpleType: RelDataType at 0"]}, {"root": "UPDATE from Pair<String,RelDataType> to Map.Entry<String,RelDataType>", "operations": ["UPD ParameterizedType: Pair<String,RelDataType> from Pair<String,RelDataType> to Map.Entry<String,RelDataType>"]}, {"root": "INS ConditionalExpression to ClassInstanceCreation at 5", "operations": ["INS SimpleName: needNew to ConditionalExpression at 0", "INS ConditionalExpression to ClassInstanceCreation at 5", "INS SimpleName: aliases to ConditionalExpression at 2", "INS NullLiteral to ConditionalExpression at 1"]}, {"root": "INS SimpleName: aliases to MethodInvocation at 5", "operations": ["INS SimpleName: aliases to MethodInvocation at 5"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Result to ClassInstanceCreation at 0"]}, {"root": "UPDATE from addAll to putAll", "operations": ["UPD SimpleName: addAll from addAll to putAll", "UPD SimpleName: addAll from addAll to putAll"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: addAll to MethodInvocation at 1", "MOV QualifiedName: rightResult.aliases to MethodInvocation at 2"]}, {"root": "UPDATE from Pair to Map.Entry", "operations": ["UPD SimpleType: Pair from Pair to Map.Entry"]}, {"root": "INS MethodRefParameter to MethodRef at 5", "operations": ["INS MethodRefParameter to MethodRef at 5", "INS SimpleType: Map to MethodRefParameter at 0", "INS SimpleName: Map to SimpleType: Map at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV QualifiedName: leftResult.aliases to MethodInvocation at 2", "MOV SimpleName: addAll to MethodInvocation at 1"]}, {"root": "INS SimpleName: type to MethodInvocation at 0", "operations": ["INS SimpleName: type to MethodInvocation at 0"]}, {"root": "INS QualifiedName: Map.Entry to SimpleType: Pair at 0", "operations": ["INS QualifiedName: Map.Entry to SimpleType: Pair at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS SimpleName: alias to MethodInvocation at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: > to InfixExpression: || at 1"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: ArrayList to SimpleType: String at 0"]}, {"root": "INS SimpleName: qualified to MethodInvocation at 2", "operations": ["INS SimpleName: qualified to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getKey to MethodInvocation at 1", "INS SimpleName: alias to MethodInvocation at 0"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL NullLiteral", "DEL SimpleName: alias4", "DEL VariableDeclarationFragment", "DEL ConditionalExpression", "DEL VariableDeclarationStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: singletonList", "DEL SimpleName: Collections", "DEL MethodInvocation"]}, {"root": "DEL ParameterizedType: Pair<String,RelDataType>", "operations": ["DEL ParameterizedType: Pair<String,RelDataType>"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: ArrayList", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL ParameterizedType: ArrayList<>", "DEL VariableDeclarationFragment"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: list", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: list", "DEL ExpressionStatement", "DEL MethodInvocation"]}, {"root": "DEL ParameterizedType: List<Pair<String,RelDataType>>", "operations": ["DEL SimpleType: List", "DEL ParameterizedType: List<Pair<String,RelDataType>>", "DEL SimpleName: List"]}, {"root": "DEL QualifiedName: alias.right", "operations": ["DEL QualifiedName: alias.right"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleType: List", "DEL ParameterizedType: List<Pair<String,RelDataType>>"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: aliases", "DEL Block", "DEL EnhancedForStatement"]}, {"root": "DEL ParameterizedType: List<Pair<String,RelDataType>>", "operations": ["DEL SimpleName: List", "DEL ParameterizedType: List<Pair<String,RelDataType>>", "DEL SimpleType: List"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleType: List", "DEL SimpleName: List", "DEL ParameterizedType: List<Pair<String,RelDataType>>", "DEL SimpleName: aliases"]}, {"root": "DEL SimpleName: Pair", "operations": ["DEL SimpleName: Pair"]}, {"root": "DEL SimpleName: aliases", "operations": ["DEL SimpleName: aliases"]}, {"root": "DEL QualifiedName: alias.right", "operations": ["DEL QualifiedName: alias.right"]}, {"root": "DEL QualifiedName: alias.left", "operations": ["DEL QualifiedName: alias.left"]}, {"root": "DEL ParameterizedType: List<Pair<String,RelDataType>>", "operations": ["DEL SimpleName: List", "DEL SimpleType: List", "DEL ParameterizedType: List<Pair<String,RelDataType>>"]}, {"root": "DEL ParameterizedType: List<Pair<String,RelDataType>>", "operations": ["DEL SimpleType: List", "DEL SimpleName: List", "DEL ParameterizedType: List<Pair<String,RelDataType>>"]}]}}, {"SqlImplementor_diff": {"operations": ["Move ImportDeclaration(89) into CompilationUnit(3948) at 48", "Move ImportDeclaration(111) into CompilationUnit(3948) at 57", "Update QualifiedName: org.apache.calcite.util.Pair(88) to com.google.common.collect.ImmutableMap", "Update QualifiedName: java.util.Collections(110) to java.util.LinkedHashMap", "Insert SingleVariableDeclaration(1422) into MethodDeclaration(1549) at 7", "Move SingleVariableDeclaration(2720) into MethodDeclaration(2760) at 4", "Insert Block(2759) into MethodDeclaration(2760) at 5", "Insert SingleVariableDeclaration(2773) into MethodDeclaration(2784) at 3", "Insert FieldDeclaration(3672) into TypeDeclaration: class(3921) at 7", "Insert ParameterizedType: Map<String,RelDataType>(1420) into SingleVariableDeclaration(1422) at 0", "Insert SimpleName: aliases(1421) into SingleVariableDeclaration(1422) at 1", "Insert AssertStatement(1443) into Block(1548) at 0", "Insert IfStatement(1502) into Block(1548) at 4", "Insert VariableDeclarationStatement(1508) into Block(1548) at 5", "Insert IfStatement(1533) into Block(1548) at 6", "Insert VariableDeclarationStatement(1595) into Block(1607) at 0", "Update ParameterizedType: Pair<String,RelDataType>(2717) to Map<String,RelDataType>", "Move ParameterizedType: Pair<String,RelDataType>(2717) into SingleVariableDeclaration(2736) at 0", "Move VariableDeclarationStatement(2682) into Block(2759) at 0", "Insert EnhancedForStatement(2756) into Block(2759) at 1", "Move ReturnStatement(2702) into Block(2759) at 2", "Update ParameterizedType: Pair<String,RelDataType>(2776) to Map<String,RelDataType>", "Move ParameterizedType: Pair<String,RelDataType>(2776) into SingleVariableDeclaration(2773) at 0", "Insert SimpleName: aliases(2772) into SingleVariableDeclaration(2773) at 1", "Update ParameterizedType: Pair<String,RelDataType>(2803) to Map<String,RelDataType>", "Move ParameterizedType: Pair<String,RelDataType>(2803) into FieldDeclaration(2830) at 2", "Move SingleVariableDeclaration(2843) into MethodDeclaration(2874) at 3", "Update ParameterizedType: Pair<String,RelDataType>(3097) to Map<String,RelDataType>", "Move ParameterizedType: Pair<String,RelDataType>(3097) into FieldDeclaration(3112) at 2", "Insert Modifier: private(3661) into FieldDeclaration(3672) at 0", "Insert Modifier: final(3662) into FieldDeclaration(3672) at 1", "Update ParameterizedType: Pair<String,RelDataType>(2674) to Map<String,RelDataType>", "Move ParameterizedType: Pair<String,RelDataType>(2674) into FieldDeclaration(3672) at 2", "Insert VariableDeclarationFragment(3671) into FieldDeclaration(3672) at 3", "Insert SingleVariableDeclaration(3702) into MethodDeclaration(3734) at 6", "Insert SimpleType: Map(1415) into ParameterizedType: Map<String,RelDataType>(1420) at 0", "Move SimpleType: String(1451) into ParameterizedType: Map<String,RelDataType>(1420) at 1", "Insert SimpleType: RelDataType(1419) into ParameterizedType: Map<String,RelDataType>(1420) at 2", "Insert InfixExpression: ||(1441) into AssertStatement(1443) at 0", "Insert StringLiteral: \"must use a Map implementation that preserves order\"(1442) into AssertStatement(1443) at 1", "Insert InfixExpression: &&(1492) into IfStatement(1502) at 0", "Insert Block(1501) into IfStatement(1502) at 1", "Move Modifier: final(1449) into VariableDeclarationStatement(1508) at 0", "Move SimpleType: String(1512) into VariableDeclarationStatement(1508) at 1", "Insert VariableDeclarationFragment(1507) into VariableDeclarationStatement(1508) at 2", "Insert InfixExpression: ||(1522) into IfStatement(1533) at 0", "Insert Block(1527) into IfStatement(1533) at 1", "Insert Block(1532) into IfStatement(1533) at 2", "Move Modifier: final(1506) into VariableDeclarationStatement(1595) at 0", "Update ParameterizedType: List<Pair<String,RelDataType>>(1516) to Map<String,RelDataType>", "Move ParameterizedType: List<Pair<String,RelDataType>>(1516) into VariableDeclarationStatement(1595) at 1", "Insert VariableDeclarationFragment(1594) into VariableDeclarationStatement(1595) at 2", "Update SimpleType: Pair(2712) to Map", "Insert SingleVariableDeclaration(2745) into EnhancedForStatement(2756) at 0", "Insert MethodInvocation(2748) into EnhancedForStatement(2756) at 1", "Move Block(2699) into EnhancedForStatement(2756) at 2", "Update SimpleType: Pair(2771) to Map", "Update SimpleType: Pair(2798) to Map", "Update ParameterizedType: Pair<String,RelDataType>(2841) to Map<String,RelDataType>", "Update SimpleName: alias(2842) to aliases", "Update SimpleType: Pair(3092) to Map", "Update ParameterizedType: Pair<String,RelDataType>(3058) to Map<String,RelDataType>", "Move ParameterizedType: Pair<String,RelDataType>(3058) into SingleVariableDeclaration(3147) at 0", "Insert IfStatement(3570) into Block(3575) at 1", "Update SimpleType: Pair(2669) to Map", "Insert SimpleName: aliases(3670) into VariableDeclarationFragment(3671) at 0", "Insert ParameterizedType: Map<String,RelDataType>(3700) into SingleVariableDeclaration(3702) at 0", "Insert SimpleName: aliases(3701) into SingleVariableDeclaration(3702) at 1", "Insert ExpressionStatement(3732) into Block(3733) at 4", "Insert NullLiteral(811) into MethodInvocation(812) at 4", "Insert SimpleName: Map(1414) into SimpleType: Map(1415) at 0", "Insert SimpleName: RelDataType(1418) into SimpleType: RelDataType(1419) at 0", "Insert InfixExpression: ||(1436) into InfixExpression: ||(1441) at 0", "Insert InstanceofExpression(1440) into InfixExpression: ||(1441) at 1", "Insert InfixExpression: &&(1487) into InfixExpression: &&(1492) at 0", "Insert PrefixExpression: !(1491) into InfixExpression: &&(1492) at 1", "Insert ReturnStatement(1500) into Block(1501) at 0", "Move SimpleName: alias5(1452) into VariableDeclarationFragment(1507) at 0", "Move InfixExpression: ||(1461) into InfixExpression: ||(1522) at 0", "Insert PrefixExpression: !(1521) into InfixExpression: ||(1522) at 1", "Insert ExpressionStatement(1526) into Block(1527) at 0", "Insert ExpressionStatement(1531) into Block(1532) at 0", "Insert SimpleType: Result(1535) into ClassInstanceCreation(1546) at 0", "Insert MethodInvocation(1545) into ClassInstanceCreation(1546) at 4", "Update SimpleType: List(1508) to Map", "Update SimpleType: Pair(1510) to String", "Move SimpleType: Pair(1510) into ParameterizedType: Map<String,RelDataType>(1577) at 1", "Move SimpleType: RelDataType(1514) into ParameterizedType: Map<String,RelDataType>(1577) at 2", "Update SimpleName: list(1517) to aliases", "Move SimpleName: list(1517) into VariableDeclarationFragment(1594) at 0", "Insert MethodInvocation(1593) into VariableDeclarationFragment(1594) at 1", "Update SimpleName: list(1542) to aliases", "Update SimpleName: Pair(2711) to Map", "Insert SimpleType: RelDataType(2743) into SingleVariableDeclaration(2745) at 0", "Update SimpleName: aliases(2676) to type", "Move SimpleName: aliases(2676) into SingleVariableDeclaration(2745) at 1", "Insert SimpleName: aliases(2746) into MethodInvocation(2748) at 0", "Insert SimpleName: values(2747) into MethodInvocation(2748) at 1", "Update SimpleName: Pair(2770) to Map", "Update SimpleName: Pair(2797) to Map", "Update SimpleType: Pair(2836) to Map", "Move SingleVariableDeclaration(2691) into EnhancedForStatement(2975) at 0", "Insert MethodInvocation(2893) into EnhancedForStatement(2975) at 1", "Update SimpleName: Pair(3091) to Map", "Update SimpleType: Pair(3053) to Map", "Insert Block(3442) into IfStatement(3443) at 2", "Insert PrefixExpression: !(3563) into IfStatement(3570) at 0", "Insert Block(3569) into IfStatement(3570) at 1", "Update SimpleName: Pair(2668) to Map", "Insert SimpleType: Map(3695) into ParameterizedType: Map<String,RelDataType>(3700) at 0", "Insert SimpleType: String(3697) into ParameterizedType: Map<String,RelDataType>(3700) at 1", "Insert SimpleType: RelDataType(3699) into ParameterizedType: Map<String,RelDataType>(3700) at 2", "Insert Assignment: =(3731) into ExpressionStatement(3732) at 0", "Insert InfixExpression: ||(1431) into InfixExpression: ||(1436) at 0", "Insert InstanceofExpression(1435) into InfixExpression: ||(1436) at 1", "Insert SimpleName: aliases(1437) into InstanceofExpression(1440) at 0", "Insert SimpleType: ImmutableMap(1439) into InstanceofExpression(1440) at 1", "Insert InfixExpression: !=(1482) into InfixExpression: &&(1487) at 0", "Insert PrefixExpression: !(1486) into InfixExpression: &&(1487) at 1", "Insert MethodInvocation(1490) into PrefixExpression: !(1491) at 0", "Insert ClassInstanceCreation(1499) into ReturnStatement(1500) at 0", "Insert MethodInvocation(1520) into PrefixExpression: !(1521) at 0", "Insert Assignment: =(1525) into ExpressionStatement(1526) at 0", "Insert Assignment: =(1530) into ExpressionStatement(1531) at 0", "Insert SimpleName: Result(1534) into SimpleType: Result(1535) at 0", "Update SimpleName: Pair(1474) to ImmutableMap", "Move SimpleName: Pair(1474) into MethodInvocation(1545) at 0", "Move SimpleName: of(1475) into MethodInvocation(1545) at 1", "Move SimpleName: alias4(1476) into MethodInvocation(1545) at 2", "Move MethodInvocation(1479) into MethodInvocation(1545) at 3", "Update SimpleName: List(1507) to Map", "Update SimpleName: Pair(1509) to String", "Insert MethodInvocation(1591) into MethodInvocation(1593) at 0", "Insert SimpleName: build(1592) into MethodInvocation(1593) at 1", "Update SimpleName: List(2666) to RelDataType", "Move SimpleName: List(2666) into SimpleType: RelDataType(2743) at 0", "Update SimpleName: Pair(2835) to Map", "Update ParameterizedType: Pair<String,RelDataType>(2689) to Map.Entry<String,RelDataType>", "Insert SimpleName: aliases(2891) into MethodInvocation(2893) at 0", "Insert SimpleName: entrySet(2892) into MethodInvocation(2893) at 1", "Update SimpleName: Pair(3052) to Map", "Insert VariableDeclarationStatement(3417) into Block(3442) at 0", "Insert IfStatement(3441) into Block(3442) at 1", "Insert ConditionalExpression(3453) into ClassInstanceCreation(3454) at 5", "Insert MethodInvocation(3562) into PrefixExpression: !(3563) at 0", "Insert ReturnStatement(3568) into Block(3569) at 0", "Insert SimpleName: Map(3694) into SimpleType: Map(3695) at 0", "Insert SimpleName: String(3696) into SimpleType: String(3697) at 0", "Insert SimpleName: RelDataType(3698) into SimpleType: RelDataType(3699) at 0", "Insert FieldAccess(3729) into Assignment: =(3731) at 0", "Insert SimpleName: aliases(3730) into Assignment: =(3731) at 1", "Insert SimpleName: aliases(3916) into MethodInvocation(3917) at 5", "Insert InfixExpression: ==(1425) into InfixExpression: ||(1431) at 0", "Insert InfixExpression: <(1430) into InfixExpression: ||(1431) at 1", "Insert SimpleName: aliases(1432) into InstanceofExpression(1435) at 0", "Insert SimpleType: LinkedHashMap(1434) into InstanceofExpression(1435) at 1", "Insert SimpleName: ImmutableMap(1438) into SimpleType: ImmutableMap(1439) at 0", "Insert SimpleName: aliases(1480) into InfixExpression: !=(1482) at 0", "Insert NullLiteral(1481) into InfixExpression: !=(1482) at 1", "Insert MethodInvocation(1485) into PrefixExpression: !(1486) at 0", "Insert SimpleName: dialect(1488) into MethodInvocation(1490) at 0", "Insert SimpleName: hasImplicitTableAlias(1489) into MethodInvocation(1490) at 1", "Move SimpleType: Result(1468) into ClassInstanceCreation(1499) at 0", "Insert SimpleName: node(1495) into ClassInstanceCreation(1499) at 1", "Insert SimpleName: clauses(1496) into ClassInstanceCreation(1499) at 2", "Insert SimpleName: alias4(1497) into ClassInstanceCreation(1499) at 3", "Insert SimpleName: aliases(1498) into ClassInstanceCreation(1499) at 4", "Insert SimpleName: dialect(1518) into MethodInvocation(1520) at 0", "Insert SimpleName: hasImplicitTableAlias(1519) into MethodInvocation(1520) at 1", "Insert SimpleName: alias5(1523) into Assignment: =(1525) at 0", "Insert SimpleName: alias4(1524) into Assignment: =(1525) at 1", "Insert SimpleName: alias5(1528) into Assignment: =(1530) at 0", "Insert NullLiteral(1529) into Assignment: =(1530) at 1", "Insert MethodInvocation(1588) into MethodInvocation(1591) at 0", "Update SimpleName: addAll(1530) to putAll", "Move SimpleName: addAll(1530) into MethodInvocation(1591) at 1", "Move QualifiedName: rightResult.aliases(1531) into MethodInvocation(1591) at 2", "Update SimpleType: Pair(2684) to Map.Entry", "Insert MethodRefParameter(3214) into MethodRef(3215) at 5", "Insert PrimitiveType: boolean(3404) into VariableDeclarationStatement(3417) at 0", "Insert VariableDeclarationFragment(3416) into VariableDeclarationStatement(3417) at 1", "Insert SimpleName: needNew(3418) into IfStatement(3441) at 0", "Insert Block(3432) into IfStatement(3441) at 1", "Move Block(3365) into IfStatement(3441) at 2", "Insert SimpleName: needNew(3450) into ConditionalExpression(3453) at 0", "Insert NullLiteral(3451) into ConditionalExpression(3453) at 1", "Insert SimpleName: aliases(3452) into ConditionalExpression(3453) at 2", "Insert SimpleName: dialect(3560) into MethodInvocation(3562) at 0", "Insert SimpleName: hasImplicitTableAlias(3561) into MethodInvocation(3562) at 1", "Insert MethodInvocation(3567) into ReturnStatement(3568) at 0", "Insert ThisExpression(3727) into FieldAccess(3729) at 0", "Insert SimpleName: aliases(3728) into FieldAccess(3729) at 1", "Insert SimpleName: aliases(1423) into InfixExpression: ==(1425) at 0", "Insert NullLiteral(1424) into InfixExpression: ==(1425) at 1", "Insert MethodInvocation(1428) into InfixExpression: <(1430) at 0", "Insert NumberLiteral: 2(1429) into InfixExpression: <(1430) at 1", "Insert SimpleName: LinkedHashMap(1433) into SimpleType: LinkedHashMap(1434) at 0", "Insert SimpleName: aliases(1483) into MethodInvocation(1485) at 0", "Insert SimpleName: isEmpty(1484) into MethodInvocation(1485) at 1", "Insert MethodInvocation(1585) into MethodInvocation(1588) at 0", "Update SimpleName: addAll(1525) to putAll", "Move SimpleName: addAll(1525) into MethodInvocation(1588) at 1", "Move QualifiedName: leftResult.aliases(1526) into MethodInvocation(1588) at 2", "Insert SimpleName: type(2750) into MethodInvocation(2752) at 0", "Update SimpleType: List(2784) to Map", "Insert QualifiedName: Map.Entry(2882) into SimpleType: Map.Entry(2883) at 0", "Insert SimpleType: Map(3213) into MethodRefParameter(3214) at 0", "Insert SimpleName: qualified(3405) into VariableDeclarationFragment(3416) at 0", "Insert InfixExpression: ||(3415) into VariableDeclarationFragment(3416) at 1", "Insert ExpressionStatement(3431) into Block(3432) at 0", "Insert SimpleName: wrapSelect(3564) into MethodInvocation(3567) at 0", "Insert MethodInvocation(3566) into MethodInvocation(3567) at 1", "Insert SimpleName: aliases(1426) into MethodInvocation(1428) at 0", "Insert SimpleName: size(1427) into MethodInvocation(1428) at 1", "Insert SimpleName: ImmutableMap(1579) into MethodInvocation(1585) at 0", "Insert SimpleType: String(1581) into MethodInvocation(1585) at 1", "Insert SimpleType: RelDataType(1583) into MethodInvocation(1585) at 2", "Insert SimpleName: builder(1584) into MethodInvocation(1585) at 3", "Update SimpleName: List(2783) to Map", "Insert MethodInvocation(2903) into MethodInvocation(2905) at 0", "Insert SimpleName: Map(3212) into SimpleType: Map(3213) at 0", "Insert PrefixExpression: !(3409) into InfixExpression: ||(3415) at 0", "Move InfixExpression: >(3361) into InfixExpression: ||(3415) at 1", "Insert Assignment: =(3430) into ExpressionStatement(3431) at 0", "Insert SimpleName: asFrom(3565) into MethodInvocation(3566) at 0", "Update SimpleName: ArrayList(1518) to String", "Move SimpleName: ArrayList(1518) into SimpleType: String(1581) at 0", "Insert SimpleName: RelDataType(1582) into SimpleType: RelDataType(1583) at 0", "Insert SimpleName: alias(2901) into MethodInvocation(2903) at 0", "Insert SimpleName: getValue(2902) into MethodInvocation(2903) at 1", "Insert MethodInvocation(3408) into PrefixExpression: !(3409) at 0", "Insert SimpleName: newContext(3419) into Assignment: =(3430) at 0", "Insert MethodInvocation(3429) into Assignment: =(3430) at 1", "Insert SimpleName: dialect(3406) into MethodInvocation(3408) at 0", "Insert SimpleName: hasImplicitTableAlias(3407) into MethodInvocation(3408) at 1", "Insert SimpleName: aliasContext(3420) into MethodInvocation(3429) at 0", "Insert MethodInvocation(3427) into MethodInvocation(3429) at 1", "Insert SimpleName: qualified(3428) into MethodInvocation(3429) at 2", "Insert SimpleName: qualified(3436) into MethodInvocation(3437) at 2", "Insert MethodInvocation(2957) into MethodInvocation(2961) at 2", "Insert SimpleName: ImmutableMap(3421) into MethodInvocation(3427) at 0", "Insert SimpleName: of(3422) into MethodInvocation(3427) at 1", "Insert SimpleName: neededAlias(3423) into MethodInvocation(3427) at 2", "Insert MethodInvocation(3426) into MethodInvocation(3427) at 3", "Insert SimpleName: alias(2955) into MethodInvocation(2957) at 0", "Insert SimpleName: getKey(2956) into MethodInvocation(2957) at 1", "Insert SimpleName: rel(3424) into MethodInvocation(3426) at 0", "Insert SimpleName: getRowType(3425) into MethodInvocation(3426) at 1", "Delete SimpleName: alias4(1462)", "Delete NullLiteral(1463)", "Delete ConditionalExpression(1464)", "Delete VariableDeclarationFragment(1465)", "Delete VariableDeclarationStatement(1466)", "Delete SimpleName: Collections(1472)", "Delete SimpleName: singletonList(1473)", "Delete MethodInvocation(1480)", "Delete MethodInvocation(1481)", "Delete ParameterizedType: Pair<String,RelDataType>(1515)", "Delete SimpleType: ArrayList(1519)", "Delete ParameterizedType: ArrayList<>(1520)", "Delete ClassInstanceCreation(1521)", "Delete VariableDeclarationFragment(1522)", "Delete VariableDeclarationStatement(1523)", "Delete SimpleName: list(1524)", "Delete MethodInvocation(1527)", "Delete ExpressionStatement(1528)", "Delete SimpleName: list(1529)", "Delete MethodInvocation(1532)", "Delete ExpressionStatement(1533)", "Delete SimpleName: List(2709)", "Delete SimpleType: List(2710)", "Delete ParameterizedType: List<Pair<String,RelDataType>>(2718)", "Delete QualifiedName: alias.right(2694)", "Delete SimpleType: List(2667)", "Delete ParameterizedType: List<Pair<String,RelDataType>>(2675)", "Delete SingleVariableDeclaration(2677)", "Delete SimpleName: aliases(2692)", "Delete EnhancedForStatement(2700)", "Delete Block(2703)", "Delete SimpleName: List(2768)", "Delete SimpleType: List(2769)", "Delete ParameterizedType: List<Pair<String,RelDataType>>(2777)", "Delete SimpleName: List(2795)", "Delete SimpleType: List(2796)", "Delete ParameterizedType: List<Pair<String,RelDataType>>(2804)", "Delete SimpleName: aliases(2805)", "Delete SingleVariableDeclaration(2806)", "Delete SimpleName: Pair(2683)", "Delete SimpleName: aliases(2844)", "Delete QualifiedName: alias.right(2852)", "Delete QualifiedName: alias.left(2904)", "Delete SimpleName: List(3050)", "Delete SimpleType: List(3051)", "Delete ParameterizedType: List<Pair<String,RelDataType>>(3059)", "Delete SimpleName: List(3089)", "Delete SimpleType: List(3090)", "Delete ParameterizedType: List<Pair<String,RelDataType>>(3098)"]}}], "commit_stats": [{"total_files": 6, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}