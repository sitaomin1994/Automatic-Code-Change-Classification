{"application": "Netflix-astyanax", "csha": "fdb64e2b099f6d89e896d67dd010a2a2c8ac3c38", "files": [{"AbstractColumnListMutation_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS SimpleName: putColumn to MethodDeclaration at 3", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: ByteSerializer to MethodInvocation at 0", "INS SimpleName: value to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: C to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS ParameterizedType: ColumnListMutation<C> to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: columnName to SingleVariableDeclaration at 1", "INS SimpleName: ttl to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS PrimitiveType: byte to SingleVariableDeclaration at 0", "INS SimpleName: putColumn to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleType: ColumnListMutation to ParameterizedType: ColumnListMutation<C> at 0", "INS SimpleType: C to ParameterizedType: ColumnListMutation<C> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: ttl to MethodInvocation at 4", "INS SimpleName: ColumnListMutation to SimpleType: ColumnListMutation at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: columnName to MethodInvocation at 1", "INS SimpleName: Integer to SimpleType: Integer at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 18", "operations": ["INS SimpleName: putColumn to MethodDeclaration at 3", "INS SimpleName: ColumnListMutation to SimpleType: ColumnListMutation at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: value to MethodInvocation at 2", "INS PrimitiveType: byte to SingleVariableDeclaration at 1", "INS SimpleName: C to SimpleType: C at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: columnName to MethodInvocation at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS NullLiteral to MethodInvocation at 3", "INS ParameterizedType: ColumnListMutation<C> to MethodDeclaration at 2", "INS SimpleName: columnName to SingleVariableDeclaration at 2", "INS SimpleName: putColumn to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 18", "INS SimpleName: value to SingleVariableDeclaration at 2", "INS SimpleType: ColumnListMutation to ParameterizedType: ColumnListMutation<C> at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 6", "INS SimpleType: C to SingleVariableDeclaration at 1", "INS SimpleName: C to SimpleType: C at 0", "INS MethodInvocation to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: C to ParameterizedType: ColumnListMutation<C> at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS SimpleName: columnName to MethodInvocation at 1", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: Byte to SingleVariableDeclaration at 0", "INS SimpleName: value to MethodInvocation at 2", "INS SimpleType: C to ParameterizedType: ColumnListMutation<C> at 1", "INS SimpleName: C to SimpleType: C at 0", "INS Block to MethodDeclaration at 7", "INS ReturnStatement to Block at 1", "INS NullLiteral to InfixExpression: != at 1", "INS ReturnStatement to Block at 0", "INS ThisExpression to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: ColumnListMutation to ParameterizedType: ColumnListMutation<C> at 0", "INS SimpleName: putColumnIfNotNull to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS SimpleName: ColumnListMutation to SimpleType: ColumnListMutation at 0", "INS SimpleType: C to SingleVariableDeclaration at 0", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: ttl to MethodInvocation at 3", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS ParameterizedType: ColumnListMutation<C> to MethodDeclaration at 2", "INS IfStatement to Block at 0", "INS SimpleName: Byte to SimpleType: Byte at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Block to IfStatement at 1", "INS SimpleName: putColumn to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: value to InfixExpression: != at 0", "INS SimpleName: columnName to SingleVariableDeclaration at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: ttl to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: value to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS SimpleName: C to SimpleType: C at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: putColumn to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS IfStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS InfixExpression: != to IfStatement at 0", "INS ParameterizedType: ColumnListMutation<C> to MethodDeclaration at 2", "INS SimpleName: putColumnIfNotNull to MethodDeclaration at 3", "INS SimpleName: columnName to SingleVariableDeclaration at 1", "INS ThisExpression to ReturnStatement at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: columnName to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleType: Byte to SingleVariableDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: Byte to SimpleType: Byte at 0", "INS ReturnStatement to Block at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS SimpleName: value to MethodInvocation at 2", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleType: C to SingleVariableDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleType: C to ParameterizedType: ColumnListMutation<C> at 1", "INS MethodDeclaration to TypeDeclaration: class at 20", "INS SimpleName: ColumnListMutation to SimpleType: ColumnListMutation at 0", "INS SimpleName: value to InfixExpression: != at 0", "INS Block to MethodDeclaration at 6", "INS SimpleType: ColumnListMutation to ParameterizedType: ColumnListMutation<C> at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: C to SingleVariableDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: ColumnListMutation to ParameterizedType: ColumnListMutation<C> at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: value to MethodInvocation at 2", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: get to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: ttl to SingleVariableDeclaration at 1", "INS ParameterizedType: ColumnListMutation<C> to MethodDeclaration at 2", "INS SimpleType: C to ParameterizedType: ColumnListMutation<C> at 1", "INS PrimitiveType: short to SingleVariableDeclaration at 0", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: columnName to MethodInvocation at 1", "INS SimpleName: ColumnListMutation to SimpleType: ColumnListMutation at 0", "INS SimpleName: ShortSerializer to MethodInvocation at 0", "INS SimpleName: columnName to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 7", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: putColumn to MethodInvocation at 0", "INS SimpleName: putColumn to MethodDeclaration at 3", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: ttl to MethodInvocation at 4", "INS SimpleName: C to SimpleType: C at 0", "INS MethodDeclaration to TypeDeclaration: class at 21", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: value to SingleVariableDeclaration at 2", "INS SimpleName: C to SimpleType: C at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: putColumn to MethodDeclaration at 3", "INS SimpleName: columnName to SingleVariableDeclaration at 2", "INS NullLiteral to MethodInvocation at 3", "INS SimpleType: C to SingleVariableDeclaration at 1", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: columnName to MethodInvocation at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: ColumnListMutation to SimpleType: ColumnListMutation at 0", "INS SimpleType: ColumnListMutation to ParameterizedType: ColumnListMutation<C> at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: C to ParameterizedType: ColumnListMutation<C> at 1", "INS SimpleName: value to MethodInvocation at 2", "INS ParameterizedType: ColumnListMutation<C> to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: putColumn to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS MethodInvocation to ReturnStatement at 0", "INS Block to MethodDeclaration at 6", "INS PrimitiveType: short to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 23", "operations": ["INS ThisExpression to ReturnStatement at 0", "INS SimpleName: ttl to SingleVariableDeclaration at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: C to ParameterizedType: ColumnListMutation<C> at 1", "INS SimpleName: ttl to MethodInvocation at 3", "INS SimpleName: columnName to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: columnName to SingleVariableDeclaration at 1", "INS Block to IfStatement at 1", "INS SimpleType: Short to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: ColumnListMutation to SimpleType: ColumnListMutation at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: C to SingleVariableDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: value to MethodInvocation at 2", "INS IfStatement to Block at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: value to InfixExpression: != at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: putColumnIfNotNull to MethodDeclaration at 3", "INS SimpleType: ColumnListMutation to ParameterizedType: ColumnListMutation<C> at 0", "INS SimpleName: putColumn to MethodInvocation at 0", "INS SimpleName: Short to SimpleType: Short at 0", "INS ParameterizedType: ColumnListMutation<C> to MethodDeclaration at 2", "INS InfixExpression: != to IfStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 23"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS InfixExpression: != to IfStatement at 0", "INS Block to MethodDeclaration at 6", "INS ReturnStatement to Block at 0", "INS SimpleType: Short to SingleVariableDeclaration at 0", "INS SimpleName: C to SimpleType: C at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: columnName to MethodInvocation at 1", "INS SimpleType: C to SingleVariableDeclaration at 0", "INS ThisExpression to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: putColumn to MethodInvocation at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: value to InfixExpression: != at 0", "INS SimpleType: C to ParameterizedType: ColumnListMutation<C> at 1", "INS IfStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS SimpleName: putColumnIfNotNull to MethodDeclaration at 3", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleType: ColumnListMutation to ParameterizedType: ColumnListMutation<C> at 0", "INS SimpleName: value to MethodInvocation at 2", "INS ParameterizedType: ColumnListMutation<C> to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: ColumnListMutation to SimpleType: ColumnListMutation at 0", "INS SimpleName: Short to SimpleType: Short at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: columnName to SingleVariableDeclaration at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}]}}, {"AbstractColumnListMutation_diff": {"operations": ["Insert MethodDeclaration(384) into TypeDeclaration: class(1666) at 17", "Insert MethodDeclaration(410) into TypeDeclaration: class(1666) at 18", "Insert MethodDeclaration(446) into TypeDeclaration: class(1666) at 19", "Insert MethodDeclaration(477) into TypeDeclaration: class(1666) at 20", "Insert MethodDeclaration(508) into TypeDeclaration: class(1666) at 21", "Insert MethodDeclaration(534) into TypeDeclaration: class(1666) at 22", "Insert MethodDeclaration(570) into TypeDeclaration: class(1666) at 23", "Insert MethodDeclaration(601) into TypeDeclaration: class(1666) at 24", "Insert MarkerAnnotation(355) into MethodDeclaration(384) at 0", "Insert Modifier: public(356) into MethodDeclaration(384) at 1", "Insert ParameterizedType: ColumnListMutation<C>(361) into MethodDeclaration(384) at 2", "Insert SimpleName: putColumn(362) into MethodDeclaration(384) at 3", "Insert SingleVariableDeclaration(366) into MethodDeclaration(384) at 4", "Insert SingleVariableDeclaration(369) into MethodDeclaration(384) at 5", "Insert SingleVariableDeclaration(373) into MethodDeclaration(384) at 6", "Insert Block(383) into MethodDeclaration(384) at 7", "Insert MarkerAnnotation(386) into MethodDeclaration(410) at 0", "Insert Modifier: public(387) into MethodDeclaration(410) at 1", "Insert ParameterizedType: ColumnListMutation<C>(392) into MethodDeclaration(410) at 2", "Insert SimpleName: putColumn(393) into MethodDeclaration(410) at 3", "Insert SingleVariableDeclaration(398) into MethodDeclaration(410) at 4", "Insert SingleVariableDeclaration(402) into MethodDeclaration(410) at 5", "Insert Block(409) into MethodDeclaration(410) at 6", "Insert MarkerAnnotation(412) into MethodDeclaration(446) at 0", "Insert Modifier: public(413) into MethodDeclaration(446) at 1", "Insert ParameterizedType: ColumnListMutation<C>(418) into MethodDeclaration(446) at 2", "Insert SimpleName: putColumnIfNotNull(419) into MethodDeclaration(446) at 3", "Insert SingleVariableDeclaration(423) into MethodDeclaration(446) at 4", "Insert SingleVariableDeclaration(427) into MethodDeclaration(446) at 5", "Insert SingleVariableDeclaration(431) into MethodDeclaration(446) at 6", "Insert Block(445) into MethodDeclaration(446) at 7", "Insert MarkerAnnotation(448) into MethodDeclaration(477) at 0", "Insert Modifier: public(449) into MethodDeclaration(477) at 1", "Insert ParameterizedType: ColumnListMutation<C>(454) into MethodDeclaration(477) at 2", "Insert SimpleName: putColumnIfNotNull(455) into MethodDeclaration(477) at 3", "Insert SingleVariableDeclaration(459) into MethodDeclaration(477) at 4", "Insert SingleVariableDeclaration(463) into MethodDeclaration(477) at 5", "Insert Block(476) into MethodDeclaration(477) at 6", "Insert MarkerAnnotation(479) into MethodDeclaration(508) at 0", "Insert Modifier: public(480) into MethodDeclaration(508) at 1", "Insert ParameterizedType: ColumnListMutation<C>(485) into MethodDeclaration(508) at 2", "Insert SimpleName: putColumn(486) into MethodDeclaration(508) at 3", "Insert SingleVariableDeclaration(490) into MethodDeclaration(508) at 4", "Insert SingleVariableDeclaration(493) into MethodDeclaration(508) at 5", "Insert SingleVariableDeclaration(497) into MethodDeclaration(508) at 6", "Insert Block(507) into MethodDeclaration(508) at 7", "Insert MarkerAnnotation(510) into MethodDeclaration(534) at 0", "Insert Modifier: public(511) into MethodDeclaration(534) at 1", "Insert ParameterizedType: ColumnListMutation<C>(516) into MethodDeclaration(534) at 2", "Insert SimpleName: putColumn(517) into MethodDeclaration(534) at 3", "Insert SingleVariableDeclaration(522) into MethodDeclaration(534) at 4", "Insert SingleVariableDeclaration(526) into MethodDeclaration(534) at 5", "Insert Block(533) into MethodDeclaration(534) at 6", "Insert MarkerAnnotation(536) into MethodDeclaration(570) at 0", "Insert Modifier: public(537) into MethodDeclaration(570) at 1", "Insert ParameterizedType: ColumnListMutation<C>(542) into MethodDeclaration(570) at 2", "Insert SimpleName: putColumnIfNotNull(543) into MethodDeclaration(570) at 3", "Insert SingleVariableDeclaration(547) into MethodDeclaration(570) at 4", "Insert SingleVariableDeclaration(551) into MethodDeclaration(570) at 5", "Insert SingleVariableDeclaration(555) into MethodDeclaration(570) at 6", "Insert Block(569) into MethodDeclaration(570) at 7", "Insert MarkerAnnotation(572) into MethodDeclaration(601) at 0", "Insert Modifier: public(573) into MethodDeclaration(601) at 1", "Insert ParameterizedType: ColumnListMutation<C>(578) into MethodDeclaration(601) at 2", "Insert SimpleName: putColumnIfNotNull(579) into MethodDeclaration(601) at 3", "Insert SingleVariableDeclaration(583) into MethodDeclaration(601) at 4", "Insert SingleVariableDeclaration(587) into MethodDeclaration(601) at 5", "Insert Block(600) into MethodDeclaration(601) at 6", "Insert SimpleName: Override(354) into MarkerAnnotation(355) at 0", "Insert SimpleType: ColumnListMutation(358) into ParameterizedType: ColumnListMutation<C>(361) at 0", "Insert SimpleType: C(360) into ParameterizedType: ColumnListMutation<C>(361) at 1", "Insert SimpleType: C(364) into SingleVariableDeclaration(366) at 0", "Insert SimpleName: columnName(365) into SingleVariableDeclaration(366) at 1", "Insert PrimitiveType: byte(367) into SingleVariableDeclaration(369) at 0", "Insert SimpleName: value(368) into SingleVariableDeclaration(369) at 1", "Insert SimpleType: Integer(371) into SingleVariableDeclaration(373) at 0", "Insert SimpleName: ttl(372) into SingleVariableDeclaration(373) at 1", "Insert ReturnStatement(382) into Block(383) at 0", "Insert SimpleName: Override(385) into MarkerAnnotation(386) at 0", "Insert SimpleType: ColumnListMutation(389) into ParameterizedType: ColumnListMutation<C>(392) at 0", "Insert SimpleType: C(391) into ParameterizedType: ColumnListMutation<C>(392) at 1", "Insert Modifier: final(394) into SingleVariableDeclaration(398) at 0", "Insert SimpleType: C(396) into SingleVariableDeclaration(398) at 1", "Insert SimpleName: columnName(397) into SingleVariableDeclaration(398) at 2", "Insert Modifier: final(399) into SingleVariableDeclaration(402) at 0", "Insert PrimitiveType: byte(400) into SingleVariableDeclaration(402) at 1", "Insert SimpleName: value(401) into SingleVariableDeclaration(402) at 2", "Insert ReturnStatement(408) into Block(409) at 0", "Insert SimpleName: Override(411) into MarkerAnnotation(412) at 0", "Insert SimpleType: ColumnListMutation(415) into ParameterizedType: ColumnListMutation<C>(418) at 0", "Insert SimpleType: C(417) into ParameterizedType: ColumnListMutation<C>(418) at 1", "Insert SimpleType: C(421) into SingleVariableDeclaration(423) at 0", "Insert SimpleName: columnName(422) into SingleVariableDeclaration(423) at 1", "Insert SimpleType: Byte(425) into SingleVariableDeclaration(427) at 0", "Insert SimpleName: value(426) into SingleVariableDeclaration(427) at 1", "Insert SimpleType: Integer(429) into SingleVariableDeclaration(431) at 0", "Insert SimpleName: ttl(430) into SingleVariableDeclaration(431) at 1", "Insert IfStatement(442) into Block(445) at 0", "Insert ReturnStatement(444) into Block(445) at 1", "Insert SimpleName: Override(447) into MarkerAnnotation(448) at 0", "Insert SimpleType: ColumnListMutation(451) into ParameterizedType: ColumnListMutation<C>(454) at 0", "Insert SimpleType: C(453) into ParameterizedType: ColumnListMutation<C>(454) at 1", "Insert SimpleType: C(457) into SingleVariableDeclaration(459) at 0", "Insert SimpleName: columnName(458) into SingleVariableDeclaration(459) at 1", "Insert SimpleType: Byte(461) into SingleVariableDeclaration(463) at 0", "Insert SimpleName: value(462) into SingleVariableDeclaration(463) at 1", "Insert IfStatement(473) into Block(476) at 0", "Insert ReturnStatement(475) into Block(476) at 1", "Insert SimpleName: Override(478) into MarkerAnnotation(479) at 0", "Insert SimpleType: ColumnListMutation(482) into ParameterizedType: ColumnListMutation<C>(485) at 0", "Insert SimpleType: C(484) into ParameterizedType: ColumnListMutation<C>(485) at 1", "Insert SimpleType: C(488) into SingleVariableDeclaration(490) at 0", "Insert SimpleName: columnName(489) into SingleVariableDeclaration(490) at 1", "Insert PrimitiveType: short(491) into SingleVariableDeclaration(493) at 0", "Insert SimpleName: value(492) into SingleVariableDeclaration(493) at 1", "Insert SimpleType: Integer(495) into SingleVariableDeclaration(497) at 0", "Insert SimpleName: ttl(496) into SingleVariableDeclaration(497) at 1", "Insert ReturnStatement(506) into Block(507) at 0", "Insert SimpleName: Override(509) into MarkerAnnotation(510) at 0", "Insert SimpleType: ColumnListMutation(513) into ParameterizedType: ColumnListMutation<C>(516) at 0", "Insert SimpleType: C(515) into ParameterizedType: ColumnListMutation<C>(516) at 1", "Insert Modifier: final(518) into SingleVariableDeclaration(522) at 0", "Insert SimpleType: C(520) into SingleVariableDeclaration(522) at 1", "Insert SimpleName: columnName(521) into SingleVariableDeclaration(522) at 2", "Insert Modifier: final(523) into SingleVariableDeclaration(526) at 0", "Insert PrimitiveType: short(524) into SingleVariableDeclaration(526) at 1", "Insert SimpleName: value(525) into SingleVariableDeclaration(526) at 2", "Insert ReturnStatement(532) into Block(533) at 0", "Insert SimpleName: Override(535) into MarkerAnnotation(536) at 0", "Insert SimpleType: ColumnListMutation(539) into ParameterizedType: ColumnListMutation<C>(542) at 0", "Insert SimpleType: C(541) into ParameterizedType: ColumnListMutation<C>(542) at 1", "Insert SimpleType: C(545) into SingleVariableDeclaration(547) at 0", "Insert SimpleName: columnName(546) into SingleVariableDeclaration(547) at 1", "Insert SimpleType: Short(549) into SingleVariableDeclaration(551) at 0", "Insert SimpleName: value(550) into SingleVariableDeclaration(551) at 1", "Insert SimpleType: Integer(553) into SingleVariableDeclaration(555) at 0", "Insert SimpleName: ttl(554) into SingleVariableDeclaration(555) at 1", "Insert IfStatement(566) into Block(569) at 0", "Insert ReturnStatement(568) into Block(569) at 1", "Insert SimpleName: Override(571) into MarkerAnnotation(572) at 0", "Insert SimpleType: ColumnListMutation(575) into ParameterizedType: ColumnListMutation<C>(578) at 0", "Insert SimpleType: C(577) into ParameterizedType: ColumnListMutation<C>(578) at 1", "Insert SimpleType: C(581) into SingleVariableDeclaration(583) at 0", "Insert SimpleName: columnName(582) into SingleVariableDeclaration(583) at 1", "Insert SimpleType: Short(585) into SingleVariableDeclaration(587) at 0", "Insert SimpleName: value(586) into SingleVariableDeclaration(587) at 1", "Insert IfStatement(597) into Block(600) at 0", "Insert ReturnStatement(599) into Block(600) at 1", "Insert SimpleName: ColumnListMutation(357) into SimpleType: ColumnListMutation(358) at 0", "Insert SimpleName: C(359) into SimpleType: C(360) at 0", "Insert SimpleName: C(363) into SimpleType: C(364) at 0", "Insert SimpleName: Integer(370) into SimpleType: Integer(371) at 0", "Insert MethodInvocation(381) into ReturnStatement(382) at 0", "Insert SimpleName: ColumnListMutation(388) into SimpleType: ColumnListMutation(389) at 0", "Insert SimpleName: C(390) into SimpleType: C(391) at 0", "Insert SimpleName: C(395) into SimpleType: C(396) at 0", "Insert MethodInvocation(407) into ReturnStatement(408) at 0", "Insert SimpleName: ColumnListMutation(414) into SimpleType: ColumnListMutation(415) at 0", "Insert SimpleName: C(416) into SimpleType: C(417) at 0", "Insert SimpleName: C(420) into SimpleType: C(421) at 0", "Insert SimpleName: Byte(424) into SimpleType: Byte(425) at 0", "Insert SimpleName: Integer(428) into SimpleType: Integer(429) at 0", "Insert InfixExpression: !=(434) into IfStatement(442) at 0", "Insert Block(441) into IfStatement(442) at 1", "Insert ThisExpression(443) into ReturnStatement(444) at 0", "Insert SimpleName: ColumnListMutation(450) into SimpleType: ColumnListMutation(451) at 0", "Insert SimpleName: C(452) into SimpleType: C(453) at 0", "Insert SimpleName: C(456) into SimpleType: C(457) at 0", "Insert SimpleName: Byte(460) into SimpleType: Byte(461) at 0", "Insert InfixExpression: !=(466) into IfStatement(473) at 0", "Insert Block(472) into IfStatement(473) at 1", "Insert ThisExpression(474) into ReturnStatement(475) at 0", "Insert SimpleName: ColumnListMutation(481) into SimpleType: ColumnListMutation(482) at 0", "Insert SimpleName: C(483) into SimpleType: C(484) at 0", "Insert SimpleName: C(487) into SimpleType: C(488) at 0", "Insert SimpleName: Integer(494) into SimpleType: Integer(495) at 0", "Insert MethodInvocation(505) into ReturnStatement(506) at 0", "Insert SimpleName: ColumnListMutation(512) into SimpleType: ColumnListMutation(513) at 0", "Insert SimpleName: C(514) into SimpleType: C(515) at 0", "Insert SimpleName: C(519) into SimpleType: C(520) at 0", "Insert MethodInvocation(531) into ReturnStatement(532) at 0", "Insert SimpleName: ColumnListMutation(538) into SimpleType: ColumnListMutation(539) at 0", "Insert SimpleName: C(540) into SimpleType: C(541) at 0", "Insert SimpleName: C(544) into SimpleType: C(545) at 0", "Insert SimpleName: Short(548) into SimpleType: Short(549) at 0", "Insert SimpleName: Integer(552) into SimpleType: Integer(553) at 0", "Insert InfixExpression: !=(558) into IfStatement(566) at 0", "Insert Block(565) into IfStatement(566) at 1", "Insert ThisExpression(567) into ReturnStatement(568) at 0", "Insert SimpleName: ColumnListMutation(574) into SimpleType: ColumnListMutation(575) at 0", "Insert SimpleName: C(576) into SimpleType: C(577) at 0", "Insert SimpleName: C(580) into SimpleType: C(581) at 0", "Insert SimpleName: Short(584) into SimpleType: Short(585) at 0", "Insert InfixExpression: !=(590) into IfStatement(597) at 0", "Insert Block(596) into IfStatement(597) at 1", "Insert ThisExpression(598) into ReturnStatement(599) at 0", "Insert SimpleName: putColumn(374) into MethodInvocation(381) at 0", "Insert SimpleName: columnName(375) into MethodInvocation(381) at 1", "Insert SimpleName: value(376) into MethodInvocation(381) at 2", "Insert MethodInvocation(379) into MethodInvocation(381) at 3", "Insert SimpleName: ttl(380) into MethodInvocation(381) at 4", "Insert SimpleName: putColumn(403) into MethodInvocation(407) at 0", "Insert SimpleName: columnName(404) into MethodInvocation(407) at 1", "Insert SimpleName: value(405) into MethodInvocation(407) at 2", "Insert NullLiteral(406) into MethodInvocation(407) at 3", "Insert SimpleName: value(432) into InfixExpression: !=(434) at 0", "Insert NullLiteral(433) into InfixExpression: !=(434) at 1", "Insert ReturnStatement(440) into Block(441) at 0", "Insert SimpleName: value(464) into InfixExpression: !=(466) at 0", "Insert NullLiteral(465) into InfixExpression: !=(466) at 1", "Insert ReturnStatement(471) into Block(472) at 0", "Insert SimpleName: putColumn(498) into MethodInvocation(505) at 0", "Insert SimpleName: columnName(499) into MethodInvocation(505) at 1", "Insert SimpleName: value(500) into MethodInvocation(505) at 2", "Insert MethodInvocation(503) into MethodInvocation(505) at 3", "Insert SimpleName: ttl(504) into MethodInvocation(505) at 4", "Insert SimpleName: putColumn(527) into MethodInvocation(531) at 0", "Insert SimpleName: columnName(528) into MethodInvocation(531) at 1", "Insert SimpleName: value(529) into MethodInvocation(531) at 2", "Insert NullLiteral(530) into MethodInvocation(531) at 3", "Insert SimpleName: value(556) into InfixExpression: !=(558) at 0", "Insert NullLiteral(557) into InfixExpression: !=(558) at 1", "Insert ReturnStatement(564) into Block(565) at 0", "Insert SimpleName: value(588) into InfixExpression: !=(590) at 0", "Insert NullLiteral(589) into InfixExpression: !=(590) at 1", "Insert ReturnStatement(595) into Block(596) at 0", "Insert SimpleName: ByteSerializer(377) into MethodInvocation(379) at 0", "Insert SimpleName: get(378) into MethodInvocation(379) at 1", "Insert MethodInvocation(439) into ReturnStatement(440) at 0", "Insert MethodInvocation(470) into ReturnStatement(471) at 0", "Insert SimpleName: ShortSerializer(501) into MethodInvocation(503) at 0", "Insert SimpleName: get(502) into MethodInvocation(503) at 1", "Insert MethodInvocation(563) into ReturnStatement(564) at 0", "Insert MethodInvocation(594) into ReturnStatement(595) at 0", "Insert SimpleName: putColumn(435) into MethodInvocation(439) at 0", "Insert SimpleName: columnName(436) into MethodInvocation(439) at 1", "Insert SimpleName: value(437) into MethodInvocation(439) at 2", "Insert SimpleName: ttl(438) into MethodInvocation(439) at 3", "Insert SimpleName: putColumn(467) into MethodInvocation(470) at 0", "Insert SimpleName: columnName(468) into MethodInvocation(470) at 1", "Insert SimpleName: value(469) into MethodInvocation(470) at 2", "Insert SimpleName: putColumn(559) into MethodInvocation(563) at 0", "Insert SimpleName: columnName(560) into MethodInvocation(563) at 1", "Insert SimpleName: value(561) into MethodInvocation(563) at 2", "Insert SimpleName: ttl(562) into MethodInvocation(563) at 3", "Insert SimpleName: putColumn(591) into MethodInvocation(594) at 0", "Insert SimpleName: columnName(592) into MethodInvocation(594) at 1", "Insert SimpleName: value(593) into MethodInvocation(594) at 2"]}}, {"ColumnListMutation_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 15", "operations": ["INS SimpleType: ColumnListMutation to ParameterizedType: ColumnListMutation<C> at 0", "INS SimpleType: C to SingleVariableDeclaration at 0", "INS SimpleName: columnName to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: byte to SingleVariableDeclaration at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: interface at 15", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: putColumn to MethodDeclaration at 1", "INS SimpleName: C to SimpleType: C at 0", "INS ParameterizedType: ColumnListMutation<C> to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: ColumnListMutation to SimpleType: ColumnListMutation at 0", "INS SimpleType: C to ParameterizedType: ColumnListMutation<C> at 1", "INS SimpleName: ttl to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 16", "operations": ["INS SimpleType: C to SingleVariableDeclaration at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: columnName to SingleVariableDeclaration at 1", "INS ParameterizedType: ColumnListMutation<C> to MethodDeclaration at 0", "INS SimpleName: putColumn to MethodDeclaration at 1", "INS SimpleType: C to ParameterizedType: ColumnListMutation<C> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS PrimitiveType: byte to SingleVariableDeclaration at 0", "INS SimpleType: ColumnListMutation to ParameterizedType: ColumnListMutation<C> at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: interface at 16", "INS SimpleName: ColumnListMutation to SimpleType: ColumnListMutation at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 17", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: Byte to SingleVariableDeclaration at 0", "INS SimpleName: ttl to SingleVariableDeclaration at 1", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: Byte to SimpleType: Byte at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: columnName to SingleVariableDeclaration at 1", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: interface at 17", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: putColumnIfNotNull to MethodDeclaration at 1", "INS SimpleType: C to ParameterizedType: ColumnListMutation<C> at 1", "INS SimpleType: C to SingleVariableDeclaration at 0", "INS SimpleName: ColumnListMutation to SimpleType: ColumnListMutation at 0", "INS ParameterizedType: ColumnListMutation<C> to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleType: ColumnListMutation to ParameterizedType: ColumnListMutation<C> at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 18", "operations": ["INS SimpleName: putColumnIfNotNull to MethodDeclaration at 1", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: Byte to SingleVariableDeclaration at 0", "INS SimpleName: Byte to SimpleType: Byte at 0", "INS MethodDeclaration to TypeDeclaration: interface at 18", "INS ParameterizedType: ColumnListMutation<C> to MethodDeclaration at 0", "INS SimpleName: ColumnListMutation to SimpleType: ColumnListMutation at 0", "INS SimpleName: columnName to SingleVariableDeclaration at 1", "INS SimpleType: C to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleType: ColumnListMutation to ParameterizedType: ColumnListMutation<C> at 0", "INS SimpleType: C to ParameterizedType: ColumnListMutation<C> at 1", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 19", "operations": ["INS ParameterizedType: ColumnListMutation<C> to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: interface at 19", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: ColumnListMutation to SimpleType: ColumnListMutation at 0", "INS SimpleName: putColumn to MethodDeclaration at 1", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS PrimitiveType: short to SingleVariableDeclaration at 0", "INS SimpleName: ttl to SingleVariableDeclaration at 1", "INS SimpleType: C to ParameterizedType: ColumnListMutation<C> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: columnName to SingleVariableDeclaration at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleType: ColumnListMutation to ParameterizedType: ColumnListMutation<C> at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleType: C to SingleVariableDeclaration at 0", "INS SimpleName: C to SimpleType: C at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 20", "operations": ["INS SimpleName: columnName to SingleVariableDeclaration at 1", "INS ParameterizedType: ColumnListMutation<C> to MethodDeclaration at 0", "INS SimpleType: ColumnListMutation to ParameterizedType: ColumnListMutation<C> at 0", "INS MethodDeclaration to TypeDeclaration: interface at 20", "INS SimpleType: C to ParameterizedType: ColumnListMutation<C> at 1", "INS SimpleName: putColumn to MethodDeclaration at 1", "INS SimpleName: ColumnListMutation to SimpleType: ColumnListMutation at 0", "INS SimpleType: C to SingleVariableDeclaration at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: C to SimpleType: C at 0", "INS PrimitiveType: short to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: value to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 21", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 21", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: putColumnIfNotNull to MethodDeclaration at 1", "INS SimpleType: Short to SingleVariableDeclaration at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleType: C to SingleVariableDeclaration at 0", "INS SimpleName: ttl to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: columnName to SingleVariableDeclaration at 1", "INS SimpleType: C to ParameterizedType: ColumnListMutation<C> at 1", "INS ParameterizedType: ColumnListMutation<C> to MethodDeclaration at 0", "INS SimpleName: Short to SimpleType: Short at 0", "INS SimpleType: ColumnListMutation to ParameterizedType: ColumnListMutation<C> at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: ColumnListMutation to SimpleType: ColumnListMutation at 0", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: C to SimpleType: C at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 22", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: interface at 22", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleType: C to SingleVariableDeclaration at 0", "INS SimpleType: Short to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleType: C to ParameterizedType: ColumnListMutation<C> at 1", "INS SimpleName: ColumnListMutation to SimpleType: ColumnListMutation at 0", "INS SimpleName: putColumnIfNotNull to MethodDeclaration at 1", "INS ParameterizedType: ColumnListMutation<C> to MethodDeclaration at 0", "INS SimpleType: ColumnListMutation to ParameterizedType: ColumnListMutation<C> at 0", "INS SimpleName: columnName to SingleVariableDeclaration at 1", "INS SimpleName: C to SimpleType: C at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: Short to SimpleType: Short at 0"]}]}}, {"ColumnListMutation_diff": {"operations": ["Insert MethodDeclaration(290) into TypeDeclaration: interface(1046) at 15", "Insert MethodDeclaration(304) into TypeDeclaration: interface(1046) at 16", "Insert MethodDeclaration(323) into TypeDeclaration: interface(1046) at 17", "Insert MethodDeclaration(338) into TypeDeclaration: interface(1046) at 18", "Insert MethodDeclaration(356) into TypeDeclaration: interface(1046) at 19", "Insert MethodDeclaration(370) into TypeDeclaration: interface(1046) at 20", "Insert MethodDeclaration(389) into TypeDeclaration: interface(1046) at 21", "Insert MethodDeclaration(404) into TypeDeclaration: interface(1046) at 22", "Insert ParameterizedType: ColumnListMutation<C>(277) into MethodDeclaration(290) at 0", "Insert SimpleName: putColumn(278) into MethodDeclaration(290) at 1", "Insert SingleVariableDeclaration(282) into MethodDeclaration(290) at 2", "Insert SingleVariableDeclaration(285) into MethodDeclaration(290) at 3", "Insert SingleVariableDeclaration(289) into MethodDeclaration(290) at 4", "Insert ParameterizedType: ColumnListMutation<C>(295) into MethodDeclaration(304) at 0", "Insert SimpleName: putColumn(296) into MethodDeclaration(304) at 1", "Insert SingleVariableDeclaration(300) into MethodDeclaration(304) at 2", "Insert SingleVariableDeclaration(303) into MethodDeclaration(304) at 3", "Insert ParameterizedType: ColumnListMutation<C>(309) into MethodDeclaration(323) at 0", "Insert SimpleName: putColumnIfNotNull(310) into MethodDeclaration(323) at 1", "Insert SingleVariableDeclaration(314) into MethodDeclaration(323) at 2", "Insert SingleVariableDeclaration(318) into MethodDeclaration(323) at 3", "Insert SingleVariableDeclaration(322) into MethodDeclaration(323) at 4", "Insert ParameterizedType: ColumnListMutation<C>(328) into MethodDeclaration(338) at 0", "Insert SimpleName: putColumnIfNotNull(329) into MethodDeclaration(338) at 1", "Insert SingleVariableDeclaration(333) into MethodDeclaration(338) at 2", "Insert SingleVariableDeclaration(337) into MethodDeclaration(338) at 3", "Insert ParameterizedType: ColumnListMutation<C>(343) into MethodDeclaration(356) at 0", "Insert SimpleName: putColumn(344) into MethodDeclaration(356) at 1", "Insert SingleVariableDeclaration(348) into MethodDeclaration(356) at 2", "Insert SingleVariableDeclaration(351) into MethodDeclaration(356) at 3", "Insert SingleVariableDeclaration(355) into MethodDeclaration(356) at 4", "Insert ParameterizedType: ColumnListMutation<C>(361) into MethodDeclaration(370) at 0", "Insert SimpleName: putColumn(362) into MethodDeclaration(370) at 1", "Insert SingleVariableDeclaration(366) into MethodDeclaration(370) at 2", "Insert SingleVariableDeclaration(369) into MethodDeclaration(370) at 3", "Insert ParameterizedType: ColumnListMutation<C>(375) into MethodDeclaration(389) at 0", "Insert SimpleName: putColumnIfNotNull(376) into MethodDeclaration(389) at 1", "Insert SingleVariableDeclaration(380) into MethodDeclaration(389) at 2", "Insert SingleVariableDeclaration(384) into MethodDeclaration(389) at 3", "Insert SingleVariableDeclaration(388) into MethodDeclaration(389) at 4", "Insert ParameterizedType: ColumnListMutation<C>(394) into MethodDeclaration(404) at 0", "Insert SimpleName: putColumnIfNotNull(395) into MethodDeclaration(404) at 1", "Insert SingleVariableDeclaration(399) into MethodDeclaration(404) at 2", "Insert SingleVariableDeclaration(403) into MethodDeclaration(404) at 3", "Insert SimpleType: ColumnListMutation(274) into ParameterizedType: ColumnListMutation<C>(277) at 0", "Insert SimpleType: C(276) into ParameterizedType: ColumnListMutation<C>(277) at 1", "Insert SimpleType: C(280) into SingleVariableDeclaration(282) at 0", "Insert SimpleName: columnName(281) into SingleVariableDeclaration(282) at 1", "Insert PrimitiveType: byte(283) into SingleVariableDeclaration(285) at 0", "Insert SimpleName: value(284) into SingleVariableDeclaration(285) at 1", "Insert SimpleType: Integer(287) into SingleVariableDeclaration(289) at 0", "Insert SimpleName: ttl(288) into SingleVariableDeclaration(289) at 1", "Insert SimpleType: ColumnListMutation(292) into ParameterizedType: ColumnListMutation<C>(295) at 0", "Insert SimpleType: C(294) into ParameterizedType: ColumnListMutation<C>(295) at 1", "Insert SimpleType: C(298) into SingleVariableDeclaration(300) at 0", "Insert SimpleName: columnName(299) into SingleVariableDeclaration(300) at 1", "Insert PrimitiveType: byte(301) into SingleVariableDeclaration(303) at 0", "Insert SimpleName: value(302) into SingleVariableDeclaration(303) at 1", "Insert SimpleType: ColumnListMutation(306) into ParameterizedType: ColumnListMutation<C>(309) at 0", "Insert SimpleType: C(308) into ParameterizedType: ColumnListMutation<C>(309) at 1", "Insert SimpleType: C(312) into SingleVariableDeclaration(314) at 0", "Insert SimpleName: columnName(313) into SingleVariableDeclaration(314) at 1", "Insert SimpleType: Byte(316) into SingleVariableDeclaration(318) at 0", "Insert SimpleName: value(317) into SingleVariableDeclaration(318) at 1", "Insert SimpleType: Integer(320) into SingleVariableDeclaration(322) at 0", "Insert SimpleName: ttl(321) into SingleVariableDeclaration(322) at 1", "Insert SimpleType: ColumnListMutation(325) into ParameterizedType: ColumnListMutation<C>(328) at 0", "Insert SimpleType: C(327) into ParameterizedType: ColumnListMutation<C>(328) at 1", "Insert SimpleType: C(331) into SingleVariableDeclaration(333) at 0", "Insert SimpleName: columnName(332) into SingleVariableDeclaration(333) at 1", "Insert SimpleType: Byte(335) into SingleVariableDeclaration(337) at 0", "Insert SimpleName: value(336) into SingleVariableDeclaration(337) at 1", "Insert SimpleType: ColumnListMutation(340) into ParameterizedType: ColumnListMutation<C>(343) at 0", "Insert SimpleType: C(342) into ParameterizedType: ColumnListMutation<C>(343) at 1", "Insert SimpleType: C(346) into SingleVariableDeclaration(348) at 0", "Insert SimpleName: columnName(347) into SingleVariableDeclaration(348) at 1", "Insert PrimitiveType: short(349) into SingleVariableDeclaration(351) at 0", "Insert SimpleName: value(350) into SingleVariableDeclaration(351) at 1", "Insert SimpleType: Integer(353) into SingleVariableDeclaration(355) at 0", "Insert SimpleName: ttl(354) into SingleVariableDeclaration(355) at 1", "Insert SimpleType: ColumnListMutation(358) into ParameterizedType: ColumnListMutation<C>(361) at 0", "Insert SimpleType: C(360) into ParameterizedType: ColumnListMutation<C>(361) at 1", "Insert SimpleType: C(364) into SingleVariableDeclaration(366) at 0", "Insert SimpleName: columnName(365) into SingleVariableDeclaration(366) at 1", "Insert PrimitiveType: short(367) into SingleVariableDeclaration(369) at 0", "Insert SimpleName: value(368) into SingleVariableDeclaration(369) at 1", "Insert SimpleType: ColumnListMutation(372) into ParameterizedType: ColumnListMutation<C>(375) at 0", "Insert SimpleType: C(374) into ParameterizedType: ColumnListMutation<C>(375) at 1", "Insert SimpleType: C(378) into SingleVariableDeclaration(380) at 0", "Insert SimpleName: columnName(379) into SingleVariableDeclaration(380) at 1", "Insert SimpleType: Short(382) into SingleVariableDeclaration(384) at 0", "Insert SimpleName: value(383) into SingleVariableDeclaration(384) at 1", "Insert SimpleType: Integer(386) into SingleVariableDeclaration(388) at 0", "Insert SimpleName: ttl(387) into SingleVariableDeclaration(388) at 1", "Insert SimpleType: ColumnListMutation(391) into ParameterizedType: ColumnListMutation<C>(394) at 0", "Insert SimpleType: C(393) into ParameterizedType: ColumnListMutation<C>(394) at 1", "Insert SimpleType: C(397) into SingleVariableDeclaration(399) at 0", "Insert SimpleName: columnName(398) into SingleVariableDeclaration(399) at 1", "Insert SimpleType: Short(401) into SingleVariableDeclaration(403) at 0", "Insert SimpleName: value(402) into SingleVariableDeclaration(403) at 1", "Insert SimpleName: ColumnListMutation(273) into SimpleType: ColumnListMutation(274) at 0", "Insert SimpleName: C(275) into SimpleType: C(276) at 0", "Insert SimpleName: C(279) into SimpleType: C(280) at 0", "Insert SimpleName: Integer(286) into SimpleType: Integer(287) at 0", "Insert SimpleName: ColumnListMutation(291) into SimpleType: ColumnListMutation(292) at 0", "Insert SimpleName: C(293) into SimpleType: C(294) at 0", "Insert SimpleName: C(297) into SimpleType: C(298) at 0", "Insert SimpleName: ColumnListMutation(305) into SimpleType: ColumnListMutation(306) at 0", "Insert SimpleName: C(307) into SimpleType: C(308) at 0", "Insert SimpleName: C(311) into SimpleType: C(312) at 0", "Insert SimpleName: Byte(315) into SimpleType: Byte(316) at 0", "Insert SimpleName: Integer(319) into SimpleType: Integer(320) at 0", "Insert SimpleName: ColumnListMutation(324) into SimpleType: ColumnListMutation(325) at 0", "Insert SimpleName: C(326) into SimpleType: C(327) at 0", "Insert SimpleName: C(330) into SimpleType: C(331) at 0", "Insert SimpleName: Byte(334) into SimpleType: Byte(335) at 0", "Insert SimpleName: ColumnListMutation(339) into SimpleType: ColumnListMutation(340) at 0", "Insert SimpleName: C(341) into SimpleType: C(342) at 0", "Insert SimpleName: C(345) into SimpleType: C(346) at 0", "Insert SimpleName: Integer(352) into SimpleType: Integer(353) at 0", "Insert SimpleName: ColumnListMutation(357) into SimpleType: ColumnListMutation(358) at 0", "Insert SimpleName: C(359) into SimpleType: C(360) at 0", "Insert SimpleName: C(363) into SimpleType: C(364) at 0", "Insert SimpleName: ColumnListMutation(371) into SimpleType: ColumnListMutation(372) at 0", "Insert SimpleName: C(373) into SimpleType: C(374) at 0", "Insert SimpleName: C(377) into SimpleType: C(378) at 0", "Insert SimpleName: Short(381) into SimpleType: Short(382) at 0", "Insert SimpleName: Integer(385) into SimpleType: Integer(386) at 0", "Insert SimpleName: ColumnListMutation(390) into SimpleType: ColumnListMutation(391) at 0", "Insert SimpleName: C(392) into SimpleType: C(393) at 0", "Insert SimpleName: C(396) into SimpleType: C(397) at 0", "Insert SimpleName: Short(400) into SimpleType: Short(401) at 0"]}}, {"ColumnMutation_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 7", "operations": ["INS SimpleName: ttl to SingleVariableDeclaration at 1", "INS SimpleType: Void to ParameterizedType: Execution<Void> at 1", "INS SimpleName: Void to SimpleType: Void at 0", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: Execution to SimpleType: Execution at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleType: Execution to ParameterizedType: Execution<Void> at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: putValue to MethodDeclaration at 1", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS PrimitiveType: byte to SingleVariableDeclaration at 0", "INS ParameterizedType: Execution<Void> to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: interface at 7", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 8", "operations": ["INS PrimitiveType: short to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: interface at 8", "INS ParameterizedType: Execution<Void> to MethodDeclaration at 0", "INS SimpleType: Execution to ParameterizedType: Execution<Void> at 0", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: Void to SimpleType: Void at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: putValue to MethodDeclaration at 1", "INS SimpleName: ttl to SingleVariableDeclaration at 1", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: Execution to SimpleType: Execution at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleType: Void to ParameterizedType: Execution<Void> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 14", "operations": ["INS SimpleName: Execution to SimpleType: Execution at 0", "INS SimpleType: Execution to ParameterizedType: Execution<Void> at 0", "INS SimpleName: ttl to SingleVariableDeclaration at 1", "INS PrimitiveType: float to SingleVariableDeclaration at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: Void to SimpleType: Void at 0", "INS ParameterizedType: Execution<Void> to MethodDeclaration at 0", "INS SimpleName: putValue to MethodDeclaration at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleType: Void to ParameterizedType: Execution<Void> at 1", "INS MethodDeclaration to TypeDeclaration: interface at 14"]}]}}, {"ColumnMutation_diff": {"operations": ["Insert MethodDeclaration(102) into TypeDeclaration: interface(291) at 7", "Insert MethodDeclaration(116) into TypeDeclaration: interface(291) at 8", "Insert MethodDeclaration(202) into TypeDeclaration: interface(291) at 14", "Insert ParameterizedType: Execution<Void>(93) into MethodDeclaration(102) at 0", "Insert SimpleName: putValue(94) into MethodDeclaration(102) at 1", "Insert SingleVariableDeclaration(97) into MethodDeclaration(102) at 2", "Insert SingleVariableDeclaration(101) into MethodDeclaration(102) at 3", "Insert ParameterizedType: Execution<Void>(107) into MethodDeclaration(116) at 0", "Insert SimpleName: putValue(108) into MethodDeclaration(116) at 1", "Insert SingleVariableDeclaration(111) into MethodDeclaration(116) at 2", "Insert SingleVariableDeclaration(115) into MethodDeclaration(116) at 3", "Insert ParameterizedType: Execution<Void>(193) into MethodDeclaration(202) at 0", "Insert SimpleName: putValue(194) into MethodDeclaration(202) at 1", "Insert SingleVariableDeclaration(197) into MethodDeclaration(202) at 2", "Insert SingleVariableDeclaration(201) into MethodDeclaration(202) at 3", "Insert SimpleType: Execution(90) into ParameterizedType: Execution<Void>(93) at 0", "Insert SimpleType: Void(92) into ParameterizedType: Execution<Void>(93) at 1", "Insert PrimitiveType: byte(95) into SingleVariableDeclaration(97) at 0", "Insert SimpleName: value(96) into SingleVariableDeclaration(97) at 1", "Insert SimpleType: Integer(99) into SingleVariableDeclaration(101) at 0", "Insert SimpleName: ttl(100) into SingleVariableDeclaration(101) at 1", "Insert SimpleType: Execution(104) into ParameterizedType: Execution<Void>(107) at 0", "Insert SimpleType: Void(106) into ParameterizedType: Execution<Void>(107) at 1", "Insert PrimitiveType: short(109) into SingleVariableDeclaration(111) at 0", "Insert SimpleName: value(110) into SingleVariableDeclaration(111) at 1", "Insert SimpleType: Integer(113) into SingleVariableDeclaration(115) at 0", "Insert SimpleName: ttl(114) into SingleVariableDeclaration(115) at 1", "Insert SimpleType: Execution(190) into ParameterizedType: Execution<Void>(193) at 0", "Insert SimpleType: Void(192) into ParameterizedType: Execution<Void>(193) at 1", "Insert PrimitiveType: float(195) into SingleVariableDeclaration(197) at 0", "Insert SimpleName: value(196) into SingleVariableDeclaration(197) at 1", "Insert SimpleType: Integer(199) into SingleVariableDeclaration(201) at 0", "Insert SimpleName: ttl(200) into SingleVariableDeclaration(201) at 1", "Insert SimpleName: Execution(89) into SimpleType: Execution(90) at 0", "Insert SimpleName: Void(91) into SimpleType: Void(92) at 0", "Insert SimpleName: Integer(98) into SimpleType: Integer(99) at 0", "Insert SimpleName: Execution(103) into SimpleType: Execution(104) at 0", "Insert SimpleName: Void(105) into SimpleType: Void(106) at 0", "Insert SimpleName: Integer(112) into SimpleType: Integer(113) at 0", "Insert SimpleName: Execution(189) into SimpleType: Execution(190) at 0", "Insert SimpleName: Void(191) into SimpleType: Void(192) at 0", "Insert SimpleName: Integer(198) into SimpleType: Integer(199) at 0"]}}, {"ConnectionPoolConfiguration_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: java.util.concurrent.ScheduledExecutorService to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 37", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS SimpleName: ScheduledExecutorService to SimpleType: ScheduledExecutorService at 0", "INS TextElement: and not expected to block on I/O and the pool can therefore be very small to TagElement at 2", "INS TagElement to Javadoc at 0", "INS TextElement: operations that update stats such as token aware scores.  Threads in this pool  to TagElement at 1", "INS TagElement: @return to Javadoc at 1", "INS SimpleType: ScheduledExecutorService to MethodDeclaration at 1", "INS TextElement: Return executor service used for maintenance tasks.  This pool is used for internal to TagElement at 0", "INS SimpleName: getMaintainanceScheduler to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: interface at 37"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 38", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @return to Javadoc at 1", "INS SimpleName: getHostReconnectExecutor to MethodDeclaration at 2", "INS TextElement: may be blocked for an extended duration while trying to reconnect to a downed host to TagElement at 1", "INS SimpleName: ScheduledExecutorService to SimpleType: ScheduledExecutorService at 0", "INS SimpleType: ScheduledExecutorService to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: interface at 38", "INS TextElement: Return executor service used to reconnect hosts.  Keep in mind that the threads  to TagElement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 39", "operations": ["INS TagElement to Javadoc at 0", "INS MethodDeclaration to TypeDeclaration: interface at 39", "INS SimpleName: initialize to MethodDeclaration at 2", "INS Javadoc to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS TextElement: Initialization prior to starting the connection pool  to TagElement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 40", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 40", "INS SimpleName: shutdown to MethodDeclaration at 2", "INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS TextElement: Shutdown after stopping the connection pool to TagElement at 0"]}]}}, {"ConnectionPoolConfiguration_diff": {"operations": ["Insert ImportDeclaration(17) into CompilationUnit(328) at 2", "Insert QualifiedName: java.util.concurrent.ScheduledExecutorService(16) into ImportDeclaration(17) at 0", "Insert MethodDeclaration(305) into TypeDeclaration: interface(327) at 37", "Insert MethodDeclaration(314) into TypeDeclaration: interface(327) at 38", "Insert MethodDeclaration(320) into TypeDeclaration: interface(327) at 39", "Insert MethodDeclaration(326) into TypeDeclaration: interface(327) at 40", "Insert Javadoc(301) into MethodDeclaration(305) at 0", "Insert SimpleType: ScheduledExecutorService(303) into MethodDeclaration(305) at 1", "Insert SimpleName: getMaintainanceScheduler(304) into MethodDeclaration(305) at 2", "Insert Javadoc(310) into MethodDeclaration(314) at 0", "Insert SimpleType: ScheduledExecutorService(312) into MethodDeclaration(314) at 1", "Insert SimpleName: getHostReconnectExecutor(313) into MethodDeclaration(314) at 2", "Insert Javadoc(317) into MethodDeclaration(320) at 0", "Insert PrimitiveType: void(318) into MethodDeclaration(320) at 1", "Insert SimpleName: initialize(319) into MethodDeclaration(320) at 2", "Insert Javadoc(323) into MethodDeclaration(326) at 0", "Insert PrimitiveType: void(324) into MethodDeclaration(326) at 1", "Insert SimpleName: shutdown(325) into MethodDeclaration(326) at 2", "Insert TagElement(299) into Javadoc(301) at 0", "Insert TagElement: @return(300) into Javadoc(301) at 1", "Insert SimpleName: ScheduledExecutorService(302) into SimpleType: ScheduledExecutorService(303) at 0", "Insert TagElement(308) into Javadoc(310) at 0", "Insert TagElement: @return(309) into Javadoc(310) at 1", "Insert SimpleName: ScheduledExecutorService(311) into SimpleType: ScheduledExecutorService(312) at 0", "Insert TagElement(316) into Javadoc(317) at 0", "Insert TagElement(322) into Javadoc(323) at 0", "Insert TextElement: Return executor service used for maintenance tasks.  This pool is used for internal(296) into TagElement(299) at 0", "Insert TextElement: operations that update stats such as token aware scores.  Threads in this pool (297) into TagElement(299) at 1", "Insert TextElement: and not expected to block on I/O and the pool can therefore be very small(298) into TagElement(299) at 2", "Insert TextElement: Return executor service used to reconnect hosts.  Keep in mind that the threads (306) into TagElement(308) at 0", "Insert TextElement: may be blocked for an extended duration while trying to reconnect to a downed host(307) into TagElement(308) at 1", "Insert TextElement: Initialization prior to starting the connection pool (315) into TagElement(316) at 0", "Insert TextElement: Shutdown after stopping the connection pool(321) into TagElement(322) at 0"]}}, {"FilteringHostSupplier_cluster": {"actions": [{"root": "INS IfStatement to Block at 3", "operations": ["INS ReturnStatement to IfStatement at 1", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS IfStatement to Block at 3", "INS SimpleName: sourceList to ReturnStatement at 0", "INS SimpleName: filterList to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 6", "operations": ["INS SimpleType: List to ParameterizedType: List<Host> at 0", "INS SimpleName: List to SimpleType: List at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Host to SimpleType: Host at 0", "INS ParameterizedType: List<Host> to VariableDeclarationStatement at 0", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS SimpleType: Host to ParameterizedType: List<Host> at 1", "INS VariableDeclarationStatement to Block at 6"]}, {"root": "INS IfStatement to Block at 7", "operations": ["INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 7", "INS ReturnStatement to IfStatement at 1", "INS SimpleName: sourceList to ReturnStatement at 0", "INS SimpleName: result to MethodInvocation at 0", "INS SimpleName: isEmpty to MethodInvocation at 1"]}, {"root": "INS ReturnStatement to Block at 8", "operations": ["INS ReturnStatement to Block at 8", "INS SimpleName: result to ReturnStatement at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement"]}]}}, {"FilteringHostSupplier_diff": {"operations": ["Insert IfStatement(174) into Block(316) at 3", "Insert VariableDeclarationStatement(307) into Block(316) at 6", "Insert IfStatement(313) into Block(316) at 7", "Insert ReturnStatement(315) into Block(316) at 8", "Insert MethodInvocation(171) into IfStatement(174) at 0", "Insert ReturnStatement(173) into IfStatement(174) at 1", "Insert ParameterizedType: List<Host>(223) into VariableDeclarationStatement(307) at 0", "Insert VariableDeclarationFragment(306) into VariableDeclarationStatement(307) at 1", "Insert MethodInvocation(310) into IfStatement(313) at 0", "Insert ReturnStatement(312) into IfStatement(313) at 1", "Insert SimpleName: result(314) into ReturnStatement(315) at 0", "Insert SimpleName: filterList(169) into MethodInvocation(171) at 0", "Insert SimpleName: isEmpty(170) into MethodInvocation(171) at 1", "Insert SimpleName: sourceList(172) into ReturnStatement(173) at 0", "Insert SimpleType: List(220) into ParameterizedType: List<Host>(223) at 0", "Insert SimpleType: Host(222) into ParameterizedType: List<Host>(223) at 1", "Insert SimpleName: result(224) into VariableDeclarationFragment(306) at 0", "Move MethodInvocation(293) into VariableDeclarationFragment(306) at 1", "Insert SimpleName: result(308) into MethodInvocation(310) at 0", "Insert SimpleName: isEmpty(309) into MethodInvocation(310) at 1", "Insert SimpleName: sourceList(311) into ReturnStatement(312) at 0", "Insert SimpleName: List(219) into SimpleType: List(220) at 0", "Insert SimpleName: Host(221) into SimpleType: Host(222) at 0", "Delete ReturnStatement(294)"]}}, {"Column_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 9", "operations": ["INS TextElement: Return value as an integer to TagElement at 0", "INS PrimitiveType: byte to MethodDeclaration at 1", "INS SimpleName: getByteValue to MethodDeclaration at 2", "INS TagElement to Javadoc at 0", "INS MethodDeclaration to TypeDeclaration: interface at 9", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @return to Javadoc at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 10", "operations": ["INS PrimitiveType: short to MethodDeclaration at 1", "INS TextElement: Return value as an integer to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: getShortValue to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: interface at 10", "INS TagElement: @return to Javadoc at 1", "INS TagElement to Javadoc at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 12", "operations": ["INS TextElement: Return value as a float to TagElement at 0", "INS PrimitiveType: float to MethodDeclaration at 1", "INS TagElement: @return to Javadoc at 1", "INS SimpleName: getFloatValue to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: interface at 12", "INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0"]}]}}, {"Column_diff": {"operations": ["Insert MethodDeclaration(99) into TypeDeclaration: interface(233) at 9", "Insert MethodDeclaration(106) into TypeDeclaration: interface(233) at 10", "Insert MethodDeclaration(120) into TypeDeclaration: interface(233) at 12", "Insert Javadoc(96) into MethodDeclaration(99) at 0", "Insert PrimitiveType: byte(97) into MethodDeclaration(99) at 1", "Insert SimpleName: getByteValue(98) into MethodDeclaration(99) at 2", "Insert Javadoc(103) into MethodDeclaration(106) at 0", "Insert PrimitiveType: short(104) into MethodDeclaration(106) at 1", "Insert SimpleName: getShortValue(105) into MethodDeclaration(106) at 2", "Insert Javadoc(117) into MethodDeclaration(120) at 0", "Insert PrimitiveType: float(118) into MethodDeclaration(120) at 1", "Insert SimpleName: getFloatValue(119) into MethodDeclaration(120) at 2", "Insert TagElement(94) into Javadoc(96) at 0", "Insert TagElement: @return(95) into Javadoc(96) at 1", "Insert TagElement(101) into Javadoc(103) at 0", "Insert TagElement: @return(102) into Javadoc(103) at 1", "Insert TagElement(115) into Javadoc(117) at 0", "Insert TagElement: @return(116) into Javadoc(117) at 1", "Insert TextElement: Return value as an integer(93) into TagElement(94) at 0", "Insert TextElement: Return value as an integer(100) into TagElement(101) at 0", "Insert TextElement: Return value as a float(114) into TagElement(115) at 0"]}}, {"AnnotatedCompositeSerializer_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 7", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 7", "INS NumberLiteral: 512 to VariableDeclarationFragment at 1", "INS Modifier: static to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: final to FieldDeclaration at 2", "INS PrimitiveType: int to FieldDeclaration at 3", "INS SimpleName: DEFAULT_BUFFER_SIZE to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS PrimitiveType: int to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS SimpleName: bufferSize to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 2", "INS Block to MethodDeclaration at 3", "INS SimpleName: AnnotatedCompositeSerializer to MethodDeclaration at 1", "INS SimpleName: clazz to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS SimpleName: Class to SimpleType: Class at 0", "INS SimpleName: T to SimpleType: T at 0", "INS Modifier: public to MethodDeclaration at 0", "INS ParameterizedType: Class<T> to SingleVariableDeclaration at 0", "INS SimpleType: Class to ParameterizedType: Class<T> at 0", "INS ConstructorInvocation to Block at 0", "INS SimpleName: DEFAULT_BUFFER_SIZE to ConstructorInvocation at 1", "INS SimpleType: T to ParameterizedType: Class<T> at 1", "INS SimpleName: clazz to ConstructorInvocation at 0"]}, {"root": "INS Modifier: final to FieldDeclaration at 1", "operations": ["INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS Modifier: final to FieldDeclaration at 1", "operations": ["INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: bufferSize to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: bufferSize to FieldAccess at 1", "INS SimpleName: bufferSize to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS ExpressionStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ReturnStatement to Block at 3", "operations": ["INS SimpleName: bb to ReturnStatement at 0", "INS ReturnStatement to Block at 3"]}, {"root": "UPDATE from ByteBufferOutputStream to ByteBuffer", "operations": ["UPD SimpleType: ByteBufferOutputStream from ByteBufferOutputStream to ByteBuffer", "UPD SimpleName: ByteBufferOutputStream from ByteBufferOutputStream to ByteBuffer", "UPD SimpleName: ByteBufferOutputStream from ByteBufferOutputStream to ByteBuffer", "UPD SimpleType: ByteBufferOutputStream from ByteBufferOutputStream to ByteBuffer"]}, {"root": "UPDATE from write to bb", "operations": ["UPD SimpleName: write from write to bb", "UPD SimpleName: out from out to bb", "UPD SimpleName: out from out to bb", "UPD SimpleName: out from out to bb", "UPD SimpleName: out from out to bb"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: allocate to MethodInvocation at 1", "INS SimpleName: bufferSize to MethodInvocation at 2", "INS SimpleName: ByteBuffer to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: out to MethodInvocation at 0", "MOV SimpleName: getByteBuffer to MethodInvocation at 1"]}, {"root": "UPDATE from getByteBuffer to flip", "operations": ["UPD SimpleName: getByteBuffer from getByteBuffer to flip", "UPD SimpleName: write from write to flip", "UPD SimpleName: getByteBuffer from getByteBuffer to flip"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: limit to MethodInvocation at 1", "INS SimpleName: cb to MethodInvocation at 0", "INS SimpleName: bb to Assignment: = at 0", "INS MethodInvocation to InfixExpression: + at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: bb to MethodInvocation at 0", "INS NumberLiteral: 3 to InfixExpression: + at 1", "INS SimpleName: remaining to MethodInvocation at 1", "INS SimpleName: allocate to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: > at 1", "INS InfixExpression: * to MethodInvocation at 2", "INS SimpleName: limit to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: * at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: ByteBuffer to VariableDeclarationStatement at 0", "INS InfixExpression: > to IfStatement at 0", "INS SimpleName: ByteBuffer to MethodInvocation at 0", "INS IfStatement to Block at 2", "INS SimpleName: bb to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: ByteBuffer to SimpleType: ByteBuffer at 0", "INS ExpressionStatement to Block at 3", "INS NumberLiteral: 2 to InfixExpression: * at 1", "INS ExpressionStatement to Block at 1", "INS InfixExpression: + to InfixExpression: > at 0", "INS SimpleName: flip to MethodInvocation at 1", "INS SimpleName: bb to MethodInvocation at 0", "INS SimpleName: temp to Assignment: = at 1", "INS SimpleName: temp to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS SimpleName: put to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: bb to MethodInvocation at 0"]}, {"root": "INS FieldDeclaration to AnonymousClassDeclaration at 2", "operations": ["INS PrimitiveType: boolean to FieldDeclaration at 1", "INS FieldDeclaration to AnonymousClassDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS SimpleName: done to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS Block to IfStatement at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS Block to MethodDeclaration at 4", "INS IfStatement to Block at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: done to Assignment: = at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: done to PrefixExpression: ! at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: out to ReturnStatement at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "UPDATE from writeShort to putShort", "operations": ["UPD SimpleName: writeShort from writeShort to putShort", "UPD SimpleName: writeShort from writeShort to putShort"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from write to put", "operations": ["UPD SimpleName: write from write to put", "UPD SimpleName: out from out to put", "UPD SimpleName: write from write to put"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: allocate to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: ByteBuffer to MethodInvocation at 0", "INS SimpleName: bufferSize to MethodInvocation at 2"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS ExpressionStatement to Block at 3", "INS SimpleName: temp to MethodInvocation at 0", "INS InfixExpression: * to MethodInvocation at 2", "INS SimpleName: remaining to MethodInvocation at 1", "INS NumberLiteral: 2 to InfixExpression: * at 1", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleName: out to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS MethodInvocation to InfixExpression: > at 1", "INS InfixExpression: > to IfStatement at 0", "INS NumberLiteral: 3 to InfixExpression: + at 1", "INS SimpleName: limit to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS InfixExpression: + to InfixExpression: > at 0", "INS SimpleType: ByteBuffer to VariableDeclarationStatement at 0", "INS SimpleName: allocate to MethodInvocation at 1", "INS SimpleName: out to MethodInvocation at 0", "INS SimpleName: out to Assignment: = at 0", "INS MethodInvocation to InfixExpression: * at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: cb to MethodInvocation at 0", "INS SimpleName: out to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: ByteBuffer to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: temp to Assignment: = at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: limit to MethodInvocation at 1", "INS SimpleName: temp to VariableDeclarationFragment at 0", "INS SimpleName: ByteBuffer to SimpleType: ByteBuffer at 0", "INS IfStatement to Block at 5", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 9", "operations": ["INS SimpleName: put to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 9", "INS SimpleName: out to MethodInvocation at 0"]}, {"root": "INS SimpleName: temp to MethodInvocation at 0", "operations": ["INS SimpleName: temp to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: out to MethodInvocation at 0", "MOV SimpleName: getByteBuffer to MethodInvocation at 1"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: ByteBufferOutputStream", "DEL SimpleName: ByteBufferOutputStream", "DEL ClassInstanceCreation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL MethodInvocation", "DEL ReturnStatement"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: ByteBufferOutputStream", "DEL SimpleType: ByteBufferOutputStream"]}, {"root": "DEL Block", "operations": ["DEL MethodInvocation", "DEL Block", "DEL ReturnStatement"]}]}}, {"AnnotatedCompositeSerializer_diff": {"operations": ["Insert FieldDeclaration(65) into TypeDeclaration: class(1099) at 7", "Insert FieldDeclaration(294) into TypeDeclaration: class(1099) at 11", "Insert MethodDeclaration(308) into TypeDeclaration: class(1099) at 12", "Insert Modifier: private(58) into FieldDeclaration(65) at 0", "Insert Modifier: static(59) into FieldDeclaration(65) at 1", "Insert Modifier: final(60) into FieldDeclaration(65) at 2", "Insert PrimitiveType: int(61) into FieldDeclaration(65) at 3", "Insert VariableDeclarationFragment(64) into FieldDeclaration(65) at 4", "Insert Modifier: final(268) into FieldDeclaration(278) at 1", "Insert Modifier: final(280) into FieldDeclaration(288) at 1", "Insert Modifier: private(289) into FieldDeclaration(294) at 0", "Insert Modifier: final(290) into FieldDeclaration(294) at 1", "Insert PrimitiveType: int(291) into FieldDeclaration(294) at 2", "Insert VariableDeclarationFragment(293) into FieldDeclaration(294) at 3", "Insert Modifier: public(295) into MethodDeclaration(308) at 0", "Insert SimpleName: AnnotatedCompositeSerializer(296) into MethodDeclaration(308) at 1", "Insert SingleVariableDeclaration(303) into MethodDeclaration(308) at 2", "Insert Block(307) into MethodDeclaration(308) at 3", "Insert SingleVariableDeclaration(320) into MethodDeclaration(395) at 3", "Insert SimpleName: DEFAULT_BUFFER_SIZE(62) into VariableDeclarationFragment(64) at 0", "Insert NumberLiteral: 512(63) into VariableDeclarationFragment(64) at 1", "Insert SimpleName: bufferSize(292) into VariableDeclarationFragment(293) at 0", "Insert ParameterizedType: Class<T>(301) into SingleVariableDeclaration(303) at 0", "Insert SimpleName: clazz(302) into SingleVariableDeclaration(303) at 1", "Insert ConstructorInvocation(306) into Block(307) at 0", "Insert PrimitiveType: int(318) into SingleVariableDeclaration(320) at 0", "Insert SimpleName: bufferSize(319) into SingleVariableDeclaration(320) at 1", "Insert ExpressionStatement(345) into Block(394) at 2", "Insert ExpressionStatement(519) into Block(522) at 2", "Insert ReturnStatement(521) into Block(522) at 3", "Insert SimpleType: Class(298) into ParameterizedType: Class<T>(301) at 0", "Insert SimpleType: T(300) into ParameterizedType: Class<T>(301) at 1", "Insert SimpleName: clazz(304) into ConstructorInvocation(306) at 0", "Insert SimpleName: DEFAULT_BUFFER_SIZE(305) into ConstructorInvocation(306) at 1", "Insert Assignment: =(344) into ExpressionStatement(345) at 0", "Update SimpleType: ByteBufferOutputStream(368) to ByteBuffer", "Insert MethodInvocation(518) into ExpressionStatement(519) at 0", "Insert SimpleName: bb(520) into ReturnStatement(521) at 0", "Insert SimpleName: Class(297) into SimpleType: Class(298) at 0", "Insert SimpleName: T(299) into SimpleType: T(300) at 0", "Insert FieldAccess(342) into Assignment: =(344) at 0", "Insert SimpleName: bufferSize(343) into Assignment: =(344) at 1", "Update SimpleName: ByteBufferOutputStream(367) to ByteBuffer", "Update SimpleName: out(369) to bb", "Insert MethodInvocation(412) into VariableDeclarationFragment(413) at 1", "Update SimpleName: out(439) to bb", "Move SimpleName: out(439) into MethodInvocation(518) at 0", "Update SimpleName: getByteBuffer(440) to flip", "Move SimpleName: getByteBuffer(440) into MethodInvocation(518) at 1", "Insert ThisExpression(340) into FieldAccess(342) at 0", "Insert SimpleName: bufferSize(341) into FieldAccess(342) at 1", "Insert SimpleName: ByteBuffer(409) into MethodInvocation(412) at 0", "Insert SimpleName: allocate(410) into MethodInvocation(412) at 1", "Insert SimpleName: bufferSize(411) into MethodInvocation(412) at 2", "Insert IfStatement(479) into Block(501) at 2", "Insert ExpressionStatement(495) into Block(501) at 4", "Insert FieldDeclaration(936) into AnonymousClassDeclaration(1085) at 2", "Insert InfixExpression: >(451) into IfStatement(479) at 0", "Insert Block(478) into IfStatement(479) at 1", "Insert MethodInvocation(494) into ExpressionStatement(495) at 0", "Update SimpleType: ByteBufferOutputStream(838) to ByteBuffer", "Insert Modifier: private(931) into FieldDeclaration(936) at 0", "Insert PrimitiveType: boolean(932) into FieldDeclaration(936) at 1", "Insert VariableDeclarationFragment(935) into FieldDeclaration(936) at 2", "Insert Block(1083) into MethodDeclaration(1084) at 4", "Insert InfixExpression: +(447) into InfixExpression: >(451) at 0", "Insert MethodInvocation(450) into InfixExpression: >(451) at 1", "Insert VariableDeclarationStatement(464) into Block(478) at 0", "Insert ExpressionStatement(468) into Block(478) at 1", "Move ExpressionStatement(418) into Block(478) at 2", "Insert ExpressionStatement(477) into Block(478) at 3", "Update SimpleName: out(403) to bb", "Update SimpleName: writeShort(404) to putShort", "Insert SimpleName: bb(489) into MethodInvocation(494) at 0", "Insert SimpleName: put(490) into MethodInvocation(494) at 1", "Move MethodInvocation(416) into MethodInvocation(494) at 2", "Update SimpleName: out(419) to bb", "Update SimpleName: write(420) to put", "Update SimpleName: ByteBufferOutputStream(837) to ByteBuffer", "Insert MethodInvocation(922) into VariableDeclarationFragment(923) at 1", "Insert SimpleName: done(933) into VariableDeclarationFragment(935) at 0", "Insert BooleanLiteral: false(934) into VariableDeclarationFragment(935) at 1", "Insert IfStatement(1035) into Block(1061) at 5", "Insert ExpressionStatement(1058) into Block(1061) at 8", "Insert IfStatement(1080) into Block(1083) at 0", "Insert ReturnStatement(1082) into Block(1083) at 1", "Insert MethodInvocation(445) into InfixExpression: +(447) at 0", "Insert NumberLiteral: 3(446) into InfixExpression: +(447) at 1", "Insert SimpleName: bb(448) into MethodInvocation(450) at 0", "Insert SimpleName: remaining(449) into MethodInvocation(450) at 1", "Insert SimpleType: ByteBuffer(453) into VariableDeclarationStatement(464) at 0", "Insert VariableDeclarationFragment(463) into VariableDeclarationStatement(464) at 1", "Insert MethodInvocation(467) into ExpressionStatement(468) at 0", "Insert Assignment: =(476) into ExpressionStatement(477) at 0", "Insert SimpleName: ByteBuffer(919) into MethodInvocation(922) at 0", "Insert SimpleName: allocate(920) into MethodInvocation(922) at 1", "Insert SimpleName: bufferSize(921) into MethodInvocation(922) at 2", "Insert InfixExpression: >(1007) into IfStatement(1035) at 0", "Insert Block(1034) into IfStatement(1035) at 1", "Insert MethodInvocation(1057) into ExpressionStatement(1058) at 0", "Insert PrefixExpression: !(1070) into IfStatement(1080) at 0", "Insert Block(1079) into IfStatement(1080) at 1", "Insert SimpleName: out(1081) into ReturnStatement(1082) at 0", "Insert SimpleName: cb(443) into MethodInvocation(445) at 0", "Insert SimpleName: limit(444) into MethodInvocation(445) at 1", "Insert SimpleName: ByteBuffer(452) into SimpleType: ByteBuffer(453) at 0", "Insert SimpleName: temp(454) into VariableDeclarationFragment(463) at 0", "Insert MethodInvocation(462) into VariableDeclarationFragment(463) at 1", "Insert SimpleName: bb(465) into MethodInvocation(467) at 0", "Insert SimpleName: flip(466) into MethodInvocation(467) at 1", "Insert SimpleName: temp(469) into MethodInvocation(472) at 0", "Update SimpleName: out(412) to put", "Update SimpleName: write(413) to bb", "Insert SimpleName: bb(474) into Assignment: =(476) at 0", "Insert SimpleName: temp(475) into Assignment: =(476) at 1", "Insert InfixExpression: +(1003) into InfixExpression: >(1007) at 0", "Insert MethodInvocation(1006) into InfixExpression: >(1007) at 1", "Insert VariableDeclarationStatement(1020) into Block(1034) at 0", "Move ExpressionStatement(928) into Block(1034) at 1", "Insert ExpressionStatement(1029) into Block(1034) at 2", "Insert ExpressionStatement(1033) into Block(1034) at 3", "Update SimpleName: writeShort(914) to putShort", "Update SimpleName: write(930) to put", "Move MethodInvocation(926) into MethodInvocation(1050) at 2", "Insert SimpleName: out(1052) into MethodInvocation(1057) at 0", "Insert SimpleName: put(1053) into MethodInvocation(1057) at 1", "Move MethodInvocation(933) into MethodInvocation(1057) at 2", "Insert SimpleName: done(1069) into PrefixExpression: !(1070) at 0", "Insert ExpressionStatement(1074) into Block(1079) at 0", "Insert ExpressionStatement(1078) into Block(1079) at 1", "Insert SimpleName: ByteBuffer(455) into MethodInvocation(462) at 0", "Insert SimpleName: allocate(456) into MethodInvocation(462) at 1", "Insert InfixExpression: *(461) into MethodInvocation(462) at 2", "Insert MethodInvocation(1001) into InfixExpression: +(1003) at 0", "Insert NumberLiteral: 3(1002) into InfixExpression: +(1003) at 1", "Insert SimpleName: out(1004) into MethodInvocation(1006) at 0", "Insert SimpleName: remaining(1005) into MethodInvocation(1006) at 1", "Insert SimpleType: ByteBuffer(1009) into VariableDeclarationStatement(1020) at 0", "Insert VariableDeclarationFragment(1019) into VariableDeclarationStatement(1020) at 1", "Insert MethodInvocation(1028) into ExpressionStatement(1029) at 0", "Insert Assignment: =(1032) into ExpressionStatement(1033) at 0", "Insert MethodInvocation(1073) into ExpressionStatement(1074) at 0", "Insert Assignment: =(1077) into ExpressionStatement(1078) at 0", "Insert MethodInvocation(459) into InfixExpression: *(461) at 0", "Insert NumberLiteral: 2(460) into InfixExpression: *(461) at 1", "Insert SimpleName: cb(999) into MethodInvocation(1001) at 0", "Insert SimpleName: limit(1000) into MethodInvocation(1001) at 1", "Insert SimpleName: ByteBuffer(1008) into SimpleType: ByteBuffer(1009) at 0", "Insert SimpleName: temp(1010) into VariableDeclarationFragment(1019) at 0", "Insert MethodInvocation(1018) into VariableDeclarationFragment(1019) at 1", "Update SimpleName: write(923) to flip", "Insert SimpleName: temp(1025) into MethodInvocation(1028) at 0", "Insert SimpleName: put(1026) into MethodInvocation(1028) at 1", "Insert SimpleName: out(1027) into MethodInvocation(1028) at 2", "Insert SimpleName: out(1030) into Assignment: =(1032) at 0", "Insert SimpleName: temp(1031) into Assignment: =(1032) at 1", "Move SimpleName: out(946) into MethodInvocation(1073) at 0", "Update SimpleName: getByteBuffer(947) to flip", "Move SimpleName: getByteBuffer(947) into MethodInvocation(1073) at 1", "Insert SimpleName: done(1075) into Assignment: =(1077) at 0", "Insert BooleanLiteral: true(1076) into Assignment: =(1077) at 1", "Insert SimpleName: bb(457) into MethodInvocation(459) at 0", "Insert SimpleName: limit(458) into MethodInvocation(459) at 1", "Insert SimpleName: ByteBuffer(1011) into MethodInvocation(1018) at 0", "Insert SimpleName: allocate(1012) into MethodInvocation(1018) at 1", "Insert InfixExpression: *(1017) into MethodInvocation(1018) at 2", "Insert MethodInvocation(1015) into InfixExpression: *(1017) at 0", "Insert NumberLiteral: 2(1016) into InfixExpression: *(1017) at 1", "Insert SimpleName: out(1013) into MethodInvocation(1015) at 0", "Insert SimpleName: limit(1014) into MethodInvocation(1015) at 1", "Delete SimpleName: ByteBufferOutputStream(370)", "Delete SimpleType: ByteBufferOutputStream(371)", "Delete ClassInstanceCreation(372)", "Delete MethodInvocation(441)", "Delete ReturnStatement(442)", "Delete SimpleName: ByteBufferOutputStream(840)", "Delete SimpleType: ByteBufferOutputStream(841)", "Delete ClassInstanceCreation(842)", "Delete MethodInvocation(948)", "Delete ReturnStatement(949)", "Delete Block(950)"]}}, {"SerializerTypeInferer_cluster": {"actions": [{"root": "INS IfStatement to IfStatement at 2", "operations": ["INS IfStatement to IfStatement at 2", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: || at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: valueClass to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleType: Float to TypeLiteral at 0", "INS SimpleName: valueClass to MethodInvocation at 0", "INS SimpleName: serializer to Assignment: = at 0", "INS SimpleType: Byte to TypeLiteral at 0", "INS TypeLiteral to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS TypeLiteral to MethodInvocation at 2", "INS PrimitiveType: byte to TypeLiteral at 0", "INS InfixExpression: || to IfStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS TypeLiteral to MethodInvocation at 2", "INS SimpleName: Float to SimpleType: Float at 0", "INS PrimitiveType: float to TypeLiteral at 0", "INS MethodInvocation to InfixExpression: || at 0", "INS SimpleName: FloatSerializer to MethodInvocation at 0", "INS SimpleName: Byte to SimpleType: Byte at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: serializer to Assignment: = at 0", "INS MethodInvocation to InfixExpression: || at 0", "INS SimpleName: ByteSerializer to MethodInvocation at 0", "INS SimpleName: valueClass to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to InfixExpression: || at 1", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS InfixExpression: || to IfStatement at 0", "INS SimpleName: valueClass to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS TypeLiteral to MethodInvocation at 2", "INS IfStatement to IfStatement at 2"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS SimpleName: value to InstanceofExpression at 0", "INS InstanceofExpression to IfStatement at 0", "INS Block to IfStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: Byte to InstanceofExpression at 1", "INS SimpleName: Float to SimpleType: Float at 0", "INS SimpleName: ByteSerializer to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: get to MethodInvocation at 1", "INS IfStatement to IfStatement at 2", "INS SimpleName: value to InstanceofExpression at 0", "INS SimpleName: serializer to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to Assignment: = at 1", "INS Block to IfStatement at 1", "INS SimpleName: serializer to Assignment: = at 0", "INS SimpleType: Float to InstanceofExpression at 1", "INS SimpleName: FloatSerializer to MethodInvocation at 0", "INS IfStatement to IfStatement at 2", "INS SimpleName: Byte to SimpleType: Byte at 0", "INS SimpleName: get to MethodInvocation at 1", "INS InstanceofExpression to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "UPDATE from IntegerSerializer to Int32Serializer", "operations": ["UPD SimpleName: IntegerSerializer from IntegerSerializer to Int32Serializer", "UPD SimpleName: IntegerSerializer from IntegerSerializer to Int32Serializer"]}]}}, {"SerializerTypeInferer_diff": {"operations": ["Insert IfStatement(431) into IfStatement(432) at 2", "Insert IfStatement(201) into IfStatement(202) at 2", "Insert InfixExpression: ||(333) into IfStatement(431) at 0", "Insert Block(340) into IfStatement(431) at 1", "Insert IfStatement(430) into IfStatement(431) at 2", "Insert InstanceofExpression(113) into IfStatement(201) at 0", "Insert Block(120) into IfStatement(201) at 1", "Insert IfStatement(200) into IfStatement(201) at 2", "Insert MethodInvocation(327) into InfixExpression: ||(333) at 0", "Insert MethodInvocation(332) into InfixExpression: ||(333) at 1", "Insert ExpressionStatement(339) into Block(340) at 0", "Insert InfixExpression: ||(352) into IfStatement(430) at 0", "Insert Block(359) into IfStatement(430) at 1", "Move IfStatement(367) into IfStatement(430) at 2", "Insert SimpleName: value(110) into InstanceofExpression(113) at 0", "Insert SimpleType: Float(112) into InstanceofExpression(113) at 1", "Insert ExpressionStatement(119) into Block(120) at 0", "Insert InstanceofExpression(124) into IfStatement(200) at 0", "Insert Block(131) into IfStatement(200) at 1", "Move IfStatement(177) into IfStatement(200) at 2", "Update SimpleName: IntegerSerializer(273) to Int32Serializer", "Insert SimpleName: valueClass(322) into MethodInvocation(327) at 0", "Insert SimpleName: equals(323) into MethodInvocation(327) at 1", "Insert TypeLiteral(326) into MethodInvocation(327) at 2", "Insert SimpleName: valueClass(328) into MethodInvocation(332) at 0", "Insert SimpleName: equals(329) into MethodInvocation(332) at 1", "Insert TypeLiteral(331) into MethodInvocation(332) at 2", "Insert Assignment: =(338) into ExpressionStatement(339) at 0", "Insert MethodInvocation(346) into InfixExpression: ||(352) at 0", "Insert MethodInvocation(351) into InfixExpression: ||(352) at 1", "Insert ExpressionStatement(358) into Block(359) at 0", "Update SimpleName: IntegerSerializer(93) to Int32Serializer", "Insert SimpleName: Float(111) into SimpleType: Float(112) at 0", "Insert Assignment: =(118) into ExpressionStatement(119) at 0", "Insert SimpleName: value(121) into InstanceofExpression(124) at 0", "Insert SimpleType: Byte(123) into InstanceofExpression(124) at 1", "Insert ExpressionStatement(130) into Block(131) at 0", "Insert SimpleType: Float(325) into TypeLiteral(326) at 0", "Insert PrimitiveType: float(330) into TypeLiteral(331) at 0", "Insert SimpleName: serializer(334) into Assignment: =(338) at 0", "Insert MethodInvocation(337) into Assignment: =(338) at 1", "Insert SimpleName: valueClass(341) into MethodInvocation(346) at 0", "Insert SimpleName: equals(342) into MethodInvocation(346) at 1", "Insert TypeLiteral(345) into MethodInvocation(346) at 2", "Insert SimpleName: valueClass(347) into MethodInvocation(351) at 0", "Insert SimpleName: equals(348) into MethodInvocation(351) at 1", "Insert TypeLiteral(350) into MethodInvocation(351) at 2", "Insert Assignment: =(357) into ExpressionStatement(358) at 0", "Insert SimpleName: serializer(114) into Assignment: =(118) at 0", "Insert MethodInvocation(117) into Assignment: =(118) at 1", "Insert SimpleName: Byte(122) into SimpleType: Byte(123) at 0", "Insert Assignment: =(129) into ExpressionStatement(130) at 0", "Insert SimpleName: Float(324) into SimpleType: Float(325) at 0", "Insert SimpleName: FloatSerializer(335) into MethodInvocation(337) at 0", "Insert SimpleName: get(336) into MethodInvocation(337) at 1", "Insert SimpleType: Byte(344) into TypeLiteral(345) at 0", "Insert PrimitiveType: byte(349) into TypeLiteral(350) at 0", "Insert SimpleName: serializer(353) into Assignment: =(357) at 0", "Insert MethodInvocation(356) into Assignment: =(357) at 1", "Insert SimpleName: FloatSerializer(115) into MethodInvocation(117) at 0", "Insert SimpleName: get(116) into MethodInvocation(117) at 1", "Insert SimpleName: serializer(125) into Assignment: =(129) at 0", "Insert MethodInvocation(128) into Assignment: =(129) at 1", "Insert SimpleName: Byte(343) into SimpleType: Byte(344) at 0", "Insert SimpleName: ByteSerializer(354) into MethodInvocation(356) at 0", "Insert SimpleName: get(355) into MethodInvocation(356) at 1", "Insert SimpleName: ByteSerializer(126) into MethodInvocation(128) at 0", "Insert SimpleName: get(127) into MethodInvocation(128) at 1"]}}, {"EmptyColumn_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: getByteValue to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS PrimitiveType: byte to MethodDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 4", "INS ThrowStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: short to MethodDeclaration at 2", "INS SimpleName: getShortValue to MethodDeclaration at 3", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS ClassInstanceCreation to ThrowStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS MarkerAnnotation to MethodDeclaration at 0", "INS PrimitiveType: float to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: getFloatValue to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4"]}]}}, {"EmptyColumn_diff": {"operations": ["Insert MethodDeclaration(123) into TypeDeclaration: class(282) at 9", "Insert MethodDeclaration(134) into TypeDeclaration: class(282) at 10", "Insert MethodDeclaration(238) into TypeDeclaration: class(282) at 19", "Insert MarkerAnnotation(114) into MethodDeclaration(123) at 0", "Insert Modifier: public(115) into MethodDeclaration(123) at 1", "Insert PrimitiveType: byte(116) into MethodDeclaration(123) at 2", "Insert SimpleName: getByteValue(117) into MethodDeclaration(123) at 3", "Insert Block(122) into MethodDeclaration(123) at 4", "Insert MarkerAnnotation(125) into MethodDeclaration(134) at 0", "Insert Modifier: public(126) into MethodDeclaration(134) at 1", "Insert PrimitiveType: short(127) into MethodDeclaration(134) at 2", "Insert SimpleName: getShortValue(128) into MethodDeclaration(134) at 3", "Insert Block(133) into MethodDeclaration(134) at 4", "Insert MarkerAnnotation(229) into MethodDeclaration(238) at 0", "Insert Modifier: public(230) into MethodDeclaration(238) at 1", "Insert PrimitiveType: float(231) into MethodDeclaration(238) at 2", "Insert SimpleName: getFloatValue(232) into MethodDeclaration(238) at 3", "Insert Block(237) into MethodDeclaration(238) at 4", "Insert SimpleName: Override(113) into MarkerAnnotation(114) at 0", "Insert ThrowStatement(121) into Block(122) at 0", "Insert SimpleName: Override(124) into MarkerAnnotation(125) at 0", "Insert ThrowStatement(132) into Block(133) at 0", "Insert SimpleName: Override(228) into MarkerAnnotation(229) at 0", "Insert ThrowStatement(236) into Block(237) at 0", "Insert ClassInstanceCreation(120) into ThrowStatement(121) at 0", "Insert ClassInstanceCreation(131) into ThrowStatement(132) at 0", "Insert ClassInstanceCreation(235) into ThrowStatement(236) at 0", "Insert SimpleType: UnsupportedOperationException(119) into ClassInstanceCreation(120) at 0", "Insert SimpleType: UnsupportedOperationException(130) into ClassInstanceCreation(131) at 0", "Insert SimpleType: UnsupportedOperationException(234) into ClassInstanceCreation(235) at 0", "Insert SimpleName: UnsupportedOperationException(118) into SimpleType: UnsupportedOperationException(119) at 0", "Insert SimpleName: UnsupportedOperationException(129) into SimpleType: UnsupportedOperationException(130) at 0", "Insert SimpleName: UnsupportedOperationException(233) into SimpleType: UnsupportedOperationException(234) at 0"]}}, {"AbstractThriftColumnMutationImpl_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: com.netflix.astyanax.serializers.ByteSerializer to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS QualifiedName: com.netflix.astyanax.serializers.FloatSerializer to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 18"]}, {"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS ImportDeclaration to CompilationUnit at 21", "INS QualifiedName: com.netflix.astyanax.serializers.ShortSerializer to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: value to MethodInvocation at 2", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 6", "INS SimpleName: Void to SimpleType: Void at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: Execution to SimpleType: Execution at 0", "INS ParameterizedType: Execution<Void> to MethodDeclaration at 2", "INS SimpleType: Execution to ParameterizedType: Execution<Void> at 0", "INS SimpleName: ttl to MethodInvocation at 2", "INS SimpleName: toByteBuffer to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: ByteSerializer to MethodInvocation at 0", "INS SimpleName: insertValue to MethodInvocation at 0", "INS SimpleType: Void to ParameterizedType: Execution<Void> at 1", "INS PrimitiveType: byte to SingleVariableDeclaration at 0", "INS SimpleName: ttl to SingleVariableDeclaration at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: putValue to MethodDeclaration at 3", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS SimpleName: get to MethodInvocation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS PrimitiveType: short to SingleVariableDeclaration at 0", "INS SimpleType: Execution to ParameterizedType: Execution<Void> at 0", "INS SimpleType: Void to ParameterizedType: Execution<Void> at 1", "INS SimpleName: value to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Execution to SimpleType: Execution at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS ParameterizedType: Execution<Void> to MethodDeclaration at 2", "INS SimpleName: putValue to MethodDeclaration at 3", "INS SimpleName: toByteBuffer to MethodInvocation at 1", "INS SimpleName: ttl to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: insertValue to MethodInvocation at 0", "INS SimpleName: ttl to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 6", "INS SimpleName: Void to SimpleType: Void at 0", "INS SimpleName: ShortSerializer to MethodInvocation at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS SimpleName: ttl to MethodInvocation at 2", "INS SimpleName: insertValue to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: toByteBuffer to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: FloatSerializer to MethodInvocation at 0", "INS ParameterizedType: Execution<Void> to MethodDeclaration at 2", "INS Block to MethodDeclaration at 6", "INS SimpleName: value to MethodInvocation at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: Execution to ParameterizedType: Execution<Void> at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS PrimitiveType: float to SingleVariableDeclaration at 0", "INS SimpleName: Execution to SimpleType: Execution at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: Void to SimpleType: Void at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS SimpleType: Void to ParameterizedType: Execution<Void> at 1", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: ttl to SingleVariableDeclaration at 1", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: putValue to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to ReturnStatement at 0"]}]}}, {"AbstractThriftColumnMutationImpl_diff": {"operations": ["Insert ImportDeclaration(41) into CompilationUnit(627) at 14", "Insert ImportDeclaration(49) into CompilationUnit(627) at 18", "Insert ImportDeclaration(55) into CompilationUnit(627) at 21", "Insert QualifiedName: com.netflix.astyanax.serializers.ByteSerializer(40) into ImportDeclaration(41) at 0", "Insert QualifiedName: com.netflix.astyanax.serializers.FloatSerializer(48) into ImportDeclaration(49) at 0", "Insert QualifiedName: com.netflix.astyanax.serializers.ShortSerializer(54) into ImportDeclaration(55) at 0", "Insert MethodDeclaration(297) into TypeDeclaration: class(626) at 15", "Insert MethodDeclaration(325) into TypeDeclaration: class(626) at 16", "Insert MethodDeclaration(495) into TypeDeclaration: class(626) at 22", "Insert MarkerAnnotation(271) into MethodDeclaration(297) at 0", "Insert Modifier: public(272) into MethodDeclaration(297) at 1", "Insert ParameterizedType: Execution<Void>(277) into MethodDeclaration(297) at 2", "Insert SimpleName: putValue(278) into MethodDeclaration(297) at 3", "Insert SingleVariableDeclaration(281) into MethodDeclaration(297) at 4", "Insert SingleVariableDeclaration(285) into MethodDeclaration(297) at 5", "Insert Block(296) into MethodDeclaration(297) at 6", "Insert MarkerAnnotation(299) into MethodDeclaration(325) at 0", "Insert Modifier: public(300) into MethodDeclaration(325) at 1", "Insert ParameterizedType: Execution<Void>(305) into MethodDeclaration(325) at 2", "Insert SimpleName: putValue(306) into MethodDeclaration(325) at 3", "Insert SingleVariableDeclaration(309) into MethodDeclaration(325) at 4", "Insert SingleVariableDeclaration(313) into MethodDeclaration(325) at 5", "Insert Block(324) into MethodDeclaration(325) at 6", "Insert MarkerAnnotation(469) into MethodDeclaration(495) at 0", "Insert Modifier: public(470) into MethodDeclaration(495) at 1", "Insert ParameterizedType: Execution<Void>(475) into MethodDeclaration(495) at 2", "Insert SimpleName: putValue(476) into MethodDeclaration(495) at 3", "Insert SingleVariableDeclaration(479) into MethodDeclaration(495) at 4", "Insert SingleVariableDeclaration(483) into MethodDeclaration(495) at 5", "Insert Block(494) into MethodDeclaration(495) at 6", "Insert SimpleName: Override(270) into MarkerAnnotation(271) at 0", "Insert SimpleType: Execution(274) into ParameterizedType: Execution<Void>(277) at 0", "Insert SimpleType: Void(276) into ParameterizedType: Execution<Void>(277) at 1", "Insert PrimitiveType: byte(279) into SingleVariableDeclaration(281) at 0", "Insert SimpleName: value(280) into SingleVariableDeclaration(281) at 1", "Insert SimpleType: Integer(283) into SingleVariableDeclaration(285) at 0", "Insert SimpleName: ttl(284) into SingleVariableDeclaration(285) at 1", "Insert ReturnStatement(295) into Block(296) at 0", "Insert SimpleName: Override(298) into MarkerAnnotation(299) at 0", "Insert SimpleType: Execution(302) into ParameterizedType: Execution<Void>(305) at 0", "Insert SimpleType: Void(304) into ParameterizedType: Execution<Void>(305) at 1", "Insert PrimitiveType: short(307) into SingleVariableDeclaration(309) at 0", "Insert SimpleName: value(308) into SingleVariableDeclaration(309) at 1", "Insert SimpleType: Integer(311) into SingleVariableDeclaration(313) at 0", "Insert SimpleName: ttl(312) into SingleVariableDeclaration(313) at 1", "Insert ReturnStatement(323) into Block(324) at 0", "Insert SimpleName: Override(468) into MarkerAnnotation(469) at 0", "Insert SimpleType: Execution(472) into ParameterizedType: Execution<Void>(475) at 0", "Insert SimpleType: Void(474) into ParameterizedType: Execution<Void>(475) at 1", "Insert PrimitiveType: float(477) into SingleVariableDeclaration(479) at 0", "Insert SimpleName: value(478) into SingleVariableDeclaration(479) at 1", "Insert SimpleType: Integer(481) into SingleVariableDeclaration(483) at 0", "Insert SimpleName: ttl(482) into SingleVariableDeclaration(483) at 1", "Insert ReturnStatement(493) into Block(494) at 0", "Insert SimpleName: Execution(273) into SimpleType: Execution(274) at 0", "Insert SimpleName: Void(275) into SimpleType: Void(276) at 0", "Insert SimpleName: Integer(282) into SimpleType: Integer(283) at 0", "Insert MethodInvocation(294) into ReturnStatement(295) at 0", "Insert SimpleName: Execution(301) into SimpleType: Execution(302) at 0", "Insert SimpleName: Void(303) into SimpleType: Void(304) at 0", "Insert SimpleName: Integer(310) into SimpleType: Integer(311) at 0", "Insert MethodInvocation(322) into ReturnStatement(323) at 0", "Insert SimpleName: Execution(471) into SimpleType: Execution(472) at 0", "Insert SimpleName: Void(473) into SimpleType: Void(474) at 0", "Insert SimpleName: Integer(480) into SimpleType: Integer(481) at 0", "Insert MethodInvocation(492) into ReturnStatement(493) at 0", "Insert SimpleName: insertValue(286) into MethodInvocation(294) at 0", "Insert MethodInvocation(292) into MethodInvocation(294) at 1", "Insert SimpleName: ttl(293) into MethodInvocation(294) at 2", "Insert SimpleName: insertValue(314) into MethodInvocation(322) at 0", "Insert MethodInvocation(320) into MethodInvocation(322) at 1", "Insert SimpleName: ttl(321) into MethodInvocation(322) at 2", "Insert SimpleName: insertValue(484) into MethodInvocation(492) at 0", "Insert MethodInvocation(490) into MethodInvocation(492) at 1", "Insert SimpleName: ttl(491) into MethodInvocation(492) at 2", "Insert MethodInvocation(289) into MethodInvocation(292) at 0", "Insert SimpleName: toByteBuffer(290) into MethodInvocation(292) at 1", "Insert SimpleName: value(291) into MethodInvocation(292) at 2", "Insert MethodInvocation(317) into MethodInvocation(320) at 0", "Insert SimpleName: toByteBuffer(318) into MethodInvocation(320) at 1", "Insert SimpleName: value(319) into MethodInvocation(320) at 2", "Insert MethodInvocation(487) into MethodInvocation(490) at 0", "Insert SimpleName: toByteBuffer(488) into MethodInvocation(490) at 1", "Insert SimpleName: value(489) into MethodInvocation(490) at 2", "Insert SimpleName: ByteSerializer(287) into MethodInvocation(289) at 0", "Insert SimpleName: get(288) into MethodInvocation(289) at 1", "Insert SimpleName: ShortSerializer(315) into MethodInvocation(317) at 0", "Insert SimpleName: get(316) into MethodInvocation(317) at 1", "Insert SimpleName: FloatSerializer(485) into MethodInvocation(487) at 0", "Insert SimpleName: get(486) into MethodInvocation(487) at 1"]}}, {"AbstractHostPartitionConnectionPool_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: initialize to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: config to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: shutdown to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS SimpleName: config to MethodInvocation at 0"]}]}}, {"AbstractHostPartitionConnectionPool_diff": {"operations": ["Insert ExpressionStatement(217) into Block(282) at 0", "Insert ExpressionStatement(331) into Block(332) at 3", "Insert MethodInvocation(216) into ExpressionStatement(217) at 0", "Insert MethodInvocation(330) into ExpressionStatement(331) at 0", "Insert SimpleName: config(214) into MethodInvocation(216) at 0", "Insert SimpleName: initialize(215) into MethodInvocation(216) at 1", "Insert SimpleName: config(328) into MethodInvocation(330) at 0", "Insert SimpleName: shutdown(329) into MethodInvocation(330) at 1"]}}, {"AbstractLatencyScoreStrategyImpl_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: keepRatio to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: blockedThreshold to SingleVariableDeclaration at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: name to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS SimpleName: updateInterval to ConstructorInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: keepRatio to ConstructorInvocation at 4", "INS PrimitiveType: double to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: blockedThreshold to ConstructorInvocation at 3", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS SimpleName: scoreThreshold to ConstructorInvocation at 5", "INS Block to MethodDeclaration at 9", "INS SimpleName: resetInterval to SingleVariableDeclaration at 1", "INS PrimitiveType: double to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: updateInterval to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: scoreThreshold to SingleVariableDeclaration at 1", "INS SimpleName: resetInterval to ConstructorInvocation at 2", "INS SimpleName: AbstractLatencyScoreStrategyImpl to MethodDeclaration at 2", "INS ConstructorInvocation to Block at 0", "INS SimpleName: name to ConstructorInvocation at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 9", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 9", "INS SimpleName: executor to SingleVariableDeclaration at 1", "INS SimpleType: ScheduledExecutorService to SingleVariableDeclaration at 0", "INS SimpleName: ScheduledExecutorService to SimpleType: ScheduledExecutorService at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0"]}, {"root": "MOVE from ConstructorInvocation", "operations": ["MOV MethodInvocation to ConstructorInvocation at 6"]}, {"root": "INS SimpleName: executor to Assignment: = at 1", "operations": ["INS SimpleName: executor to Assignment: = at 1"]}]}}, {"AbstractLatencyScoreStrategyImpl_diff": {"operations": ["Insert MethodDeclaration(264) into TypeDeclaration: class(1012) at 19", "Insert SingleVariableDeclaration(158) into MethodDeclaration(213) at 8", "Move Javadoc(142) into MethodDeclaration(264) at 0", "Insert Modifier: public(223) into MethodDeclaration(264) at 1", "Insert SimpleName: AbstractLatencyScoreStrategyImpl(224) into MethodDeclaration(264) at 2", "Insert SingleVariableDeclaration(228) into MethodDeclaration(264) at 3", "Insert SingleVariableDeclaration(231) into MethodDeclaration(264) at 4", "Insert SingleVariableDeclaration(234) into MethodDeclaration(264) at 5", "Insert SingleVariableDeclaration(237) into MethodDeclaration(264) at 6", "Insert SingleVariableDeclaration(240) into MethodDeclaration(264) at 7", "Insert SingleVariableDeclaration(243) into MethodDeclaration(264) at 8", "Insert Block(263) into MethodDeclaration(264) at 9", "Insert SimpleType: ScheduledExecutorService(156) into SingleVariableDeclaration(158) at 0", "Insert SimpleName: executor(157) into SingleVariableDeclaration(158) at 1", "Insert SimpleType: String(226) into SingleVariableDeclaration(228) at 0", "Insert SimpleName: name(227) into SingleVariableDeclaration(228) at 1", "Insert PrimitiveType: int(229) into SingleVariableDeclaration(231) at 0", "Insert SimpleName: updateInterval(230) into SingleVariableDeclaration(231) at 1", "Insert PrimitiveType: int(232) into SingleVariableDeclaration(234) at 0", "Insert SimpleName: resetInterval(233) into SingleVariableDeclaration(234) at 1", "Insert PrimitiveType: int(235) into SingleVariableDeclaration(237) at 0", "Insert SimpleName: blockedThreshold(236) into SingleVariableDeclaration(237) at 1", "Insert PrimitiveType: double(238) into SingleVariableDeclaration(240) at 0", "Insert SimpleName: keepRatio(239) into SingleVariableDeclaration(240) at 1", "Insert PrimitiveType: double(241) into SingleVariableDeclaration(243) at 0", "Insert SimpleName: scoreThreshold(242) into SingleVariableDeclaration(243) at 1", "Insert ConstructorInvocation(262) into Block(263) at 0", "Insert SimpleName: ScheduledExecutorService(155) into SimpleType: ScheduledExecutorService(156) at 0", "Insert SimpleName: String(225) into SimpleType: String(226) at 0", "Insert SimpleName: name(244) into ConstructorInvocation(262) at 0", "Insert SimpleName: updateInterval(245) into ConstructorInvocation(262) at 1", "Insert SimpleName: resetInterval(246) into ConstructorInvocation(262) at 2", "Insert SimpleName: blockedThreshold(247) into ConstructorInvocation(262) at 3", "Insert SimpleName: keepRatio(248) into ConstructorInvocation(262) at 4", "Insert SimpleName: scoreThreshold(249) into ConstructorInvocation(262) at 5", "Move MethodInvocation(214) into ConstructorInvocation(262) at 6", "Insert SimpleName: executor(198) into Assignment: =(199) at 1"]}}, {"ConnectionPoolConfigurationImpl_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: java.util.concurrent.Executors to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: java.util.concurrent.ScheduledExecutorService to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: com.google.common.util.concurrent.ThreadFactoryBuilder to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 30", "operations": ["INS PrimitiveType: int to FieldDeclaration at 3", "INS Modifier: static to FieldDeclaration at 1", "INS Modifier: final to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 30", "INS NumberLiteral: 5 to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: DEFAULT_RECONNECT_THREAD_COUNT to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 31", "operations": ["INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS Modifier: static to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS PrimitiveType: int to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 31", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleName: DEFAULT_MAINTAINANCE_THREAD_COUNT to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 65", "operations": ["INS SimpleType: ScheduledExecutorService to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 65", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: maintainanceExecutor to VariableDeclarationFragment at 0", "INS SimpleName: ScheduledExecutorService to SimpleType: ScheduledExecutorService at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 66", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: reconnectExecutor to VariableDeclarationFragment at 0", "INS SimpleType: ScheduledExecutorService to FieldDeclaration at 1", "INS SimpleName: ScheduledExecutorService to SimpleType: ScheduledExecutorService at 0", "INS FieldDeclaration to TypeDeclaration: class at 66", "INS VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 67", "operations": ["INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 67", "INS PrimitiveType: boolean to FieldDeclaration at 1", "INS SimpleName: bOwnMaintainanceExecutor to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 68", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 68", "INS PrimitiveType: boolean to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: bOwnReconnectExecutor to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 71", "operations": ["INS SimpleName: bOwnReconnectExecutor to Assignment: = at 0", "INS MethodDeclaration to TypeDeclaration: class at 71", "INS IfStatement to Block at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: maintainanceExecutor to InfixExpression: == at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: DEFAULT_RECONNECT_THREAD_COUNT to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: initialize to MethodDeclaration at 3", "INS MethodInvocation to MethodInvocation at 0", "INS BooleanLiteral: true to MethodInvocation at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: bOwnMaintainanceExecutor to Assignment: = at 0", "INS ExpressionStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: ThreadFactoryBuilder to SimpleType: ThreadFactoryBuilder at 0", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: Executors to MethodInvocation at 0", "INS NullLiteral to InfixExpression: == at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: build to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ClassInstanceCreation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: newScheduledThreadPool to MethodInvocation at 1", "INS SimpleName: ThreadFactoryBuilder to SimpleType: ThreadFactoryBuilder at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to IfStatement at 1", "INS BooleanLiteral: true to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ClassInstanceCreation to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: reconnectExecutor to Assignment: = at 0", "INS SimpleName: setDaemon to MethodInvocation at 1", "INS SimpleType: ThreadFactoryBuilder to ClassInstanceCreation at 0", "INS SimpleName: setDaemon to MethodInvocation at 1", "INS BooleanLiteral: true to Assignment: = at 1", "INS SimpleType: ThreadFactoryBuilder to ClassInstanceCreation at 0", "INS BooleanLiteral: true to Assignment: = at 1", "INS SimpleName: Executors to MethodInvocation at 0", "INS SimpleName: DEFAULT_MAINTAINANCE_THREAD_COUNT to MethodInvocation at 2", "INS SimpleName: maintainanceExecutor to Assignment: = at 0", "INS IfStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: reconnectExecutor to InfixExpression: == at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: newScheduledThreadPool to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 72", "operations": ["INS SimpleName: bOwnReconnectExecutor to IfStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS IfStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: reconnectExecutor to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: bOwnMaintainanceExecutor to IfStatement at 0", "INS Block to IfStatement at 1", "INS MethodDeclaration to TypeDeclaration: class at 72", "INS SimpleName: shutdownNow to MethodInvocation at 1", "INS SimpleName: shutdown to MethodDeclaration at 3", "INS IfStatement to Block at 0", "INS Block to IfStatement at 1", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: maintainanceExecutor to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: shutdownNow to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 142", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: ScheduledExecutorService to SimpleType: ScheduledExecutorService at 0", "INS SimpleName: maintainanceExecutor to ReturnStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 142", "INS SimpleType: ScheduledExecutorService to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: getMaintainanceScheduler to MethodDeclaration at 3", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 143", "operations": ["INS SimpleName: setMaintainanceScheduler to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 143", "INS SimpleName: executor to Assignment: = at 1", "INS BooleanLiteral: false to Assignment: = at 1", "INS SimpleName: bOwnMaintainanceExecutor to Assignment: = at 0", "INS SimpleType: ScheduledExecutorService to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: ScheduledExecutorService to SimpleType: ScheduledExecutorService at 0", "INS ReturnStatement to Block at 2", "INS ThisExpression to ReturnStatement at 0", "INS SimpleName: ConnectionPoolConfigurationImpl to SimpleType: ConnectionPoolConfigurationImpl at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS SimpleName: executor to SingleVariableDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: maintainanceExecutor to Assignment: = at 0", "INS SimpleType: ConnectionPoolConfigurationImpl to MethodDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 144", "operations": ["INS SimpleName: getHostReconnectExecutor to MethodDeclaration at 3", "INS SimpleType: ScheduledExecutorService to MethodDeclaration at 2", "INS SimpleName: ScheduledExecutorService to SimpleType: ScheduledExecutorService at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to MethodDeclaration at 4", "INS ThisExpression to FieldAccess at 0", "INS MethodDeclaration to TypeDeclaration: class at 144", "INS SimpleName: reconnectExecutor to FieldAccess at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS FieldAccess to ReturnStatement at 0", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 145", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: setHostReconnectExecutor to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: ScheduledExecutorService to SimpleType: ScheduledExecutorService at 0", "INS BooleanLiteral: false to Assignment: = at 1", "INS SimpleType: ConnectionPoolConfigurationImpl to MethodDeclaration at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: ConnectionPoolConfigurationImpl to SimpleType: ConnectionPoolConfigurationImpl at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: ScheduledExecutorService to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 145", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ReturnStatement to Block at 2", "INS SimpleName: executor to SingleVariableDeclaration at 1", "INS ThisExpression to ReturnStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: executor to Assignment: = at 1", "INS SimpleName: reconnectExecutor to Assignment: = at 0", "INS SimpleName: bOwnReconnectExecutor to Assignment: = at 0"]}]}}, {"ConnectionPoolConfigurationImpl_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(1739) at 3", "Insert ImportDeclaration(21) into CompilationUnit(1739) at 4", "Insert ImportDeclaration(25) into CompilationUnit(1739) at 6", "Insert QualifiedName: java.util.concurrent.Executors(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: java.util.concurrent.ScheduledExecutorService(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: com.google.common.util.concurrent.ThreadFactoryBuilder(24) into ImportDeclaration(25) at 0", "Insert FieldDeclaration(289) into TypeDeclaration: class(1738) at 30", "Insert FieldDeclaration(297) into TypeDeclaration: class(1738) at 31", "Insert FieldDeclaration(513) into TypeDeclaration: class(1738) at 65", "Insert FieldDeclaration(519) into TypeDeclaration: class(1738) at 66", "Insert FieldDeclaration(525) into TypeDeclaration: class(1738) at 67", "Insert FieldDeclaration(531) into TypeDeclaration: class(1738) at 68", "Insert MethodDeclaration(625) into TypeDeclaration: class(1738) at 71", "Insert MethodDeclaration(646) into TypeDeclaration: class(1738) at 72", "Insert MethodDeclaration(1685) into TypeDeclaration: class(1738) at 142", "Insert MethodDeclaration(1705) into TypeDeclaration: class(1738) at 143", "Insert MethodDeclaration(1717) into TypeDeclaration: class(1738) at 144", "Insert MethodDeclaration(1737) into TypeDeclaration: class(1738) at 145", "Insert Modifier: private(282) into FieldDeclaration(289) at 0", "Insert Modifier: static(283) into FieldDeclaration(289) at 1", "Insert Modifier: final(284) into FieldDeclaration(289) at 2", "Insert PrimitiveType: int(285) into FieldDeclaration(289) at 3", "Insert VariableDeclarationFragment(288) into FieldDeclaration(289) at 4", "Insert Modifier: private(290) into FieldDeclaration(297) at 0", "Insert Modifier: static(291) into FieldDeclaration(297) at 1", "Insert Modifier: final(292) into FieldDeclaration(297) at 2", "Insert PrimitiveType: int(293) into FieldDeclaration(297) at 3", "Insert VariableDeclarationFragment(296) into FieldDeclaration(297) at 4", "Insert Modifier: private(508) into FieldDeclaration(513) at 0", "Insert SimpleType: ScheduledExecutorService(510) into FieldDeclaration(513) at 1", "Insert VariableDeclarationFragment(512) into FieldDeclaration(513) at 2", "Insert Modifier: private(514) into FieldDeclaration(519) at 0", "Insert SimpleType: ScheduledExecutorService(516) into FieldDeclaration(519) at 1", "Insert VariableDeclarationFragment(518) into FieldDeclaration(519) at 2", "Insert Modifier: private(520) into FieldDeclaration(525) at 0", "Insert PrimitiveType: boolean(521) into FieldDeclaration(525) at 1", "Insert VariableDeclarationFragment(524) into FieldDeclaration(525) at 2", "Insert Modifier: private(526) into FieldDeclaration(531) at 0", "Insert PrimitiveType: boolean(527) into FieldDeclaration(531) at 1", "Insert VariableDeclarationFragment(530) into FieldDeclaration(531) at 2", "Insert MarkerAnnotation(572) into MethodDeclaration(625) at 0", "Insert Modifier: public(573) into MethodDeclaration(625) at 1", "Insert PrimitiveType: void(574) into MethodDeclaration(625) at 2", "Insert SimpleName: initialize(575) into MethodDeclaration(625) at 3", "Insert Block(624) into MethodDeclaration(625) at 4", "Insert MarkerAnnotation(627) into MethodDeclaration(646) at 0", "Insert Modifier: public(628) into MethodDeclaration(646) at 1", "Insert PrimitiveType: void(629) into MethodDeclaration(646) at 2", "Insert SimpleName: shutdown(630) into MethodDeclaration(646) at 3", "Insert Block(645) into MethodDeclaration(646) at 4", "Insert MarkerAnnotation(1677) into MethodDeclaration(1685) at 0", "Insert Modifier: public(1678) into MethodDeclaration(1685) at 1", "Insert SimpleType: ScheduledExecutorService(1680) into MethodDeclaration(1685) at 2", "Insert SimpleName: getMaintainanceScheduler(1681) into MethodDeclaration(1685) at 3", "Insert Block(1684) into MethodDeclaration(1685) at 4", "Insert Modifier: public(1686) into MethodDeclaration(1705) at 0", "Insert SimpleType: ConnectionPoolConfigurationImpl(1688) into MethodDeclaration(1705) at 1", "Insert SimpleName: setMaintainanceScheduler(1689) into MethodDeclaration(1705) at 2", "Insert SingleVariableDeclaration(1693) into MethodDeclaration(1705) at 3", "Insert Block(1704) into MethodDeclaration(1705) at 4", "Insert MarkerAnnotation(1707) into MethodDeclaration(1717) at 0", "Insert Modifier: public(1708) into MethodDeclaration(1717) at 1", "Insert SimpleType: ScheduledExecutorService(1710) into MethodDeclaration(1717) at 2", "Insert SimpleName: getHostReconnectExecutor(1711) into MethodDeclaration(1717) at 3", "Insert Block(1716) into MethodDeclaration(1717) at 4", "Insert Modifier: public(1718) into MethodDeclaration(1737) at 0", "Insert SimpleType: ConnectionPoolConfigurationImpl(1720) into MethodDeclaration(1737) at 1", "Insert SimpleName: setHostReconnectExecutor(1721) into MethodDeclaration(1737) at 2", "Insert SingleVariableDeclaration(1725) into MethodDeclaration(1737) at 3", "Insert Block(1736) into MethodDeclaration(1737) at 4", "Insert SimpleName: DEFAULT_RECONNECT_THREAD_COUNT(286) into VariableDeclarationFragment(288) at 0", "Insert NumberLiteral: 5(287) into VariableDeclarationFragment(288) at 1", "Insert SimpleName: DEFAULT_MAINTAINANCE_THREAD_COUNT(294) into VariableDeclarationFragment(296) at 0", "Insert NumberLiteral: 1(295) into VariableDeclarationFragment(296) at 1", "Insert SimpleName: ScheduledExecutorService(509) into SimpleType: ScheduledExecutorService(510) at 0", "Insert SimpleName: maintainanceExecutor(511) into VariableDeclarationFragment(512) at 0", "Insert SimpleName: ScheduledExecutorService(515) into SimpleType: ScheduledExecutorService(516) at 0", "Insert SimpleName: reconnectExecutor(517) into VariableDeclarationFragment(518) at 0", "Insert SimpleName: bOwnMaintainanceExecutor(522) into VariableDeclarationFragment(524) at 0", "Insert BooleanLiteral: false(523) into VariableDeclarationFragment(524) at 1", "Insert SimpleName: bOwnReconnectExecutor(528) into VariableDeclarationFragment(530) at 0", "Insert BooleanLiteral: false(529) into VariableDeclarationFragment(530) at 1", "Insert SimpleName: Override(571) into MarkerAnnotation(572) at 0", "Insert IfStatement(599) into Block(624) at 0", "Insert IfStatement(623) into Block(624) at 1", "Insert SimpleName: Override(626) into MarkerAnnotation(627) at 0", "Insert IfStatement(637) into Block(645) at 0", "Insert IfStatement(644) into Block(645) at 1", "Insert SimpleName: Override(1676) into MarkerAnnotation(1677) at 0", "Insert SimpleName: ScheduledExecutorService(1679) into SimpleType: ScheduledExecutorService(1680) at 0", "Insert ReturnStatement(1683) into Block(1684) at 0", "Insert SimpleName: ConnectionPoolConfigurationImpl(1687) into SimpleType: ConnectionPoolConfigurationImpl(1688) at 0", "Insert SimpleType: ScheduledExecutorService(1691) into SingleVariableDeclaration(1693) at 0", "Insert SimpleName: executor(1692) into SingleVariableDeclaration(1693) at 1", "Insert ExpressionStatement(1697) into Block(1704) at 0", "Insert ExpressionStatement(1701) into Block(1704) at 1", "Insert ReturnStatement(1703) into Block(1704) at 2", "Insert SimpleName: Override(1706) into MarkerAnnotation(1707) at 0", "Insert SimpleName: ScheduledExecutorService(1709) into SimpleType: ScheduledExecutorService(1710) at 0", "Insert ReturnStatement(1715) into Block(1716) at 0", "Insert SimpleName: ConnectionPoolConfigurationImpl(1719) into SimpleType: ConnectionPoolConfigurationImpl(1720) at 0", "Insert SimpleType: ScheduledExecutorService(1723) into SingleVariableDeclaration(1725) at 0", "Insert SimpleName: executor(1724) into SingleVariableDeclaration(1725) at 1", "Insert ExpressionStatement(1729) into Block(1736) at 0", "Insert ExpressionStatement(1733) into Block(1736) at 1", "Insert ReturnStatement(1735) into Block(1736) at 2", "Insert InfixExpression: ==(578) into IfStatement(599) at 0", "Insert Block(598) into IfStatement(599) at 1", "Insert InfixExpression: ==(602) into IfStatement(623) at 0", "Insert Block(622) into IfStatement(623) at 1", "Insert SimpleName: bOwnMaintainanceExecutor(631) into IfStatement(637) at 0", "Insert Block(636) into IfStatement(637) at 1", "Insert SimpleName: bOwnReconnectExecutor(638) into IfStatement(644) at 0", "Insert Block(643) into IfStatement(644) at 1", "Insert SimpleName: maintainanceExecutor(1682) into ReturnStatement(1683) at 0", "Insert SimpleName: ScheduledExecutorService(1690) into SimpleType: ScheduledExecutorService(1691) at 0", "Insert Assignment: =(1696) into ExpressionStatement(1697) at 0", "Insert Assignment: =(1700) into ExpressionStatement(1701) at 0", "Insert ThisExpression(1702) into ReturnStatement(1703) at 0", "Insert FieldAccess(1714) into ReturnStatement(1715) at 0", "Insert SimpleName: ScheduledExecutorService(1722) into SimpleType: ScheduledExecutorService(1723) at 0", "Insert Assignment: =(1728) into ExpressionStatement(1729) at 0", "Insert Assignment: =(1732) into ExpressionStatement(1733) at 0", "Insert ThisExpression(1734) into ReturnStatement(1735) at 0", "Insert SimpleName: maintainanceExecutor(576) into InfixExpression: ==(578) at 0", "Insert NullLiteral(577) into InfixExpression: ==(578) at 1", "Insert ExpressionStatement(593) into Block(598) at 0", "Insert ExpressionStatement(597) into Block(598) at 1", "Insert SimpleName: reconnectExecutor(600) into InfixExpression: ==(602) at 0", "Insert NullLiteral(601) into InfixExpression: ==(602) at 1", "Insert ExpressionStatement(617) into Block(622) at 0", "Insert ExpressionStatement(621) into Block(622) at 1", "Insert ExpressionStatement(635) into Block(636) at 0", "Insert ExpressionStatement(642) into Block(643) at 0", "Insert SimpleName: maintainanceExecutor(1694) into Assignment: =(1696) at 0", "Insert SimpleName: executor(1695) into Assignment: =(1696) at 1", "Insert SimpleName: bOwnMaintainanceExecutor(1698) into Assignment: =(1700) at 0", "Insert BooleanLiteral: false(1699) into Assignment: =(1700) at 1", "Insert ThisExpression(1712) into FieldAccess(1714) at 0", "Insert SimpleName: reconnectExecutor(1713) into FieldAccess(1714) at 1", "Insert SimpleName: reconnectExecutor(1726) into Assignment: =(1728) at 0", "Insert SimpleName: executor(1727) into Assignment: =(1728) at 1", "Insert SimpleName: bOwnReconnectExecutor(1730) into Assignment: =(1732) at 0", "Insert BooleanLiteral: false(1731) into Assignment: =(1732) at 1", "Insert Assignment: =(592) into ExpressionStatement(593) at 0", "Insert Assignment: =(596) into ExpressionStatement(597) at 0", "Insert Assignment: =(616) into ExpressionStatement(617) at 0", "Insert Assignment: =(620) into ExpressionStatement(621) at 0", "Insert MethodInvocation(634) into ExpressionStatement(635) at 0", "Insert MethodInvocation(641) into ExpressionStatement(642) at 0", "Insert SimpleName: maintainanceExecutor(579) into Assignment: =(592) at 0", "Insert MethodInvocation(591) into Assignment: =(592) at 1", "Insert SimpleName: bOwnMaintainanceExecutor(594) into Assignment: =(596) at 0", "Insert BooleanLiteral: true(595) into Assignment: =(596) at 1", "Insert SimpleName: reconnectExecutor(603) into Assignment: =(616) at 0", "Insert MethodInvocation(615) into Assignment: =(616) at 1", "Insert SimpleName: bOwnReconnectExecutor(618) into Assignment: =(620) at 0", "Insert BooleanLiteral: true(619) into Assignment: =(620) at 1", "Insert SimpleName: maintainanceExecutor(632) into MethodInvocation(634) at 0", "Insert SimpleName: shutdownNow(633) into MethodInvocation(634) at 1", "Insert SimpleName: reconnectExecutor(639) into MethodInvocation(641) at 0", "Insert SimpleName: shutdownNow(640) into MethodInvocation(641) at 1", "Insert SimpleName: Executors(580) into MethodInvocation(591) at 0", "Insert SimpleName: newScheduledThreadPool(581) into MethodInvocation(591) at 1", "Insert SimpleName: DEFAULT_MAINTAINANCE_THREAD_COUNT(582) into MethodInvocation(591) at 2", "Insert MethodInvocation(590) into MethodInvocation(591) at 3", "Insert SimpleName: Executors(604) into MethodInvocation(615) at 0", "Insert SimpleName: newScheduledThreadPool(605) into MethodInvocation(615) at 1", "Insert SimpleName: DEFAULT_RECONNECT_THREAD_COUNT(606) into MethodInvocation(615) at 2", "Insert MethodInvocation(614) into MethodInvocation(615) at 3", "Insert MethodInvocation(588) into MethodInvocation(590) at 0", "Insert SimpleName: build(589) into MethodInvocation(590) at 1", "Insert MethodInvocation(612) into MethodInvocation(614) at 0", "Insert SimpleName: build(613) into MethodInvocation(614) at 1", "Insert ClassInstanceCreation(585) into MethodInvocation(588) at 0", "Insert SimpleName: setDaemon(586) into MethodInvocation(588) at 1", "Insert BooleanLiteral: true(587) into MethodInvocation(588) at 2", "Insert ClassInstanceCreation(609) into MethodInvocation(612) at 0", "Insert SimpleName: setDaemon(610) into MethodInvocation(612) at 1", "Insert BooleanLiteral: true(611) into MethodInvocation(612) at 2", "Insert SimpleType: ThreadFactoryBuilder(584) into ClassInstanceCreation(585) at 0", "Insert SimpleType: ThreadFactoryBuilder(608) into ClassInstanceCreation(609) at 0", "Insert SimpleName: ThreadFactoryBuilder(583) into SimpleType: ThreadFactoryBuilder(584) at 0", "Insert SimpleName: ThreadFactoryBuilder(607) into SimpleType: ThreadFactoryBuilder(608) at 0"]}}, {"NodeDiscoveryImpl_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleName: name to ConstructorInvocation at 0", "INS Block to MethodDeclaration at 6", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: ConnectionPool to SimpleType: ConnectionPool at 0", "INS ParameterizedType: List<Host> to ParameterizedType: Supplier<List<Host>> at 1", "INS SimpleName: Supplier to SimpleType: Supplier at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: interval to SingleVariableDeclaration at 1", "INS SimpleName: connectionPool to ConstructorInvocation at 3", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Host to SimpleType: Host at 0", "INS SimpleName: connectionPool to SingleVariableDeclaration at 1", "INS SimpleName: hostSupplier to ConstructorInvocation at 2", "INS SimpleType: Supplier to ParameterizedType: Supplier<List<Host>> at 0", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: interval to ConstructorInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: ConnectionPool to ParameterizedType: ConnectionPool<?> at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ConstructorInvocation to Block at 0", "INS SimpleType: List to ParameterizedType: List<Host> at 0", "INS ParameterizedType: ConnectionPool<?> to SingleVariableDeclaration at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS ParameterizedType: Supplier<List<Host>> to SingleVariableDeclaration at 0", "INS WildcardType: ? to ParameterizedType: ConnectionPool<?> at 1", "INS SimpleType: Host to ParameterizedType: List<Host> at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: name to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: hostSupplier to SingleVariableDeclaration at 1", "INS SimpleName: NodeDiscoveryImpl to MethodDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleType: ScheduledExecutorService to SingleVariableDeclaration at 0", "INS SimpleName: executor to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: ScheduledExecutorService to SimpleType: ScheduledExecutorService at 0"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS SimpleName: executor to FieldAccess at 1", "INS ExpressionStatement to Block at 4", "INS SimpleName: executor to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "MOVE from ConstructorInvocation", "operations": ["MOV MethodInvocation to ConstructorInvocation at 4"]}]}}, {"NodeDiscoveryImpl_diff": {"operations": ["Insert MethodDeclaration(188) into TypeDeclaration: class(428) at 13", "Insert Modifier: public(146) into MethodDeclaration(188) at 0", "Insert SimpleName: NodeDiscoveryImpl(147) into MethodDeclaration(188) at 1", "Insert SingleVariableDeclaration(151) into MethodDeclaration(188) at 2", "Insert SingleVariableDeclaration(154) into MethodDeclaration(188) at 3", "Insert SingleVariableDeclaration(164) into MethodDeclaration(188) at 4", "Insert SingleVariableDeclaration(170) into MethodDeclaration(188) at 5", "Insert Block(187) into MethodDeclaration(188) at 6", "Insert SingleVariableDeclaration(217) into MethodDeclaration(249) at 6", "Insert SimpleType: String(149) into SingleVariableDeclaration(151) at 0", "Insert SimpleName: name(150) into SingleVariableDeclaration(151) at 1", "Insert PrimitiveType: int(152) into SingleVariableDeclaration(154) at 0", "Insert SimpleName: interval(153) into SingleVariableDeclaration(154) at 1", "Insert ParameterizedType: Supplier<List<Host>>(162) into SingleVariableDeclaration(164) at 0", "Insert SimpleName: hostSupplier(163) into SingleVariableDeclaration(164) at 1", "Insert ParameterizedType: ConnectionPool<?>(168) into SingleVariableDeclaration(170) at 0", "Insert SimpleName: connectionPool(169) into SingleVariableDeclaration(170) at 1", "Insert ConstructorInvocation(186) into Block(187) at 0", "Insert SimpleType: ScheduledExecutorService(215) into SingleVariableDeclaration(217) at 0", "Insert SimpleName: executor(216) into SingleVariableDeclaration(217) at 1", "Insert ExpressionStatement(247) into Block(248) at 4", "Insert SimpleName: String(148) into SimpleType: String(149) at 0", "Insert SimpleType: Supplier(156) into ParameterizedType: Supplier<List<Host>>(162) at 0", "Insert ParameterizedType: List<Host>(161) into ParameterizedType: Supplier<List<Host>>(162) at 1", "Insert SimpleType: ConnectionPool(166) into ParameterizedType: ConnectionPool<?>(168) at 0", "Insert WildcardType: ?(167) into ParameterizedType: ConnectionPool<?>(168) at 1", "Insert SimpleName: name(171) into ConstructorInvocation(186) at 0", "Insert SimpleName: interval(172) into ConstructorInvocation(186) at 1", "Insert SimpleName: hostSupplier(173) into ConstructorInvocation(186) at 2", "Insert SimpleName: connectionPool(174) into ConstructorInvocation(186) at 3", "Move MethodInvocation(76) into ConstructorInvocation(186) at 4", "Insert SimpleName: ScheduledExecutorService(214) into SimpleType: ScheduledExecutorService(215) at 0", "Insert Assignment: =(246) into ExpressionStatement(247) at 0", "Insert SimpleName: Supplier(155) into SimpleType: Supplier(156) at 0", "Insert SimpleType: List(158) into ParameterizedType: List<Host>(161) at 0", "Insert SimpleType: Host(160) into ParameterizedType: List<Host>(161) at 1", "Insert SimpleName: ConnectionPool(165) into SimpleType: ConnectionPool(166) at 0", "Insert FieldAccess(244) into Assignment: =(246) at 0", "Insert SimpleName: executor(245) into Assignment: =(246) at 1", "Insert SimpleName: List(157) into SimpleType: List(158) at 0", "Insert SimpleName: Host(159) into SimpleType: Host(160) at 0", "Insert ThisExpression(242) into FieldAccess(244) at 0", "Insert SimpleName: executor(243) into FieldAccess(244) at 1"]}}, {"SimpleHostConnectionPool_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 21", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 21", "INS SimpleName: AtomicInteger to SimpleType: AtomicInteger at 0", "INS NumberLiteral: 0 to ClassInstanceCreation at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: AtomicInteger to FieldDeclaration at 2", "INS SimpleName: markedDownCount to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 27", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to TypeDeclaration: class at 27", "INS SimpleName: executor to VariableDeclarationFragment at 0"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV SimpleType: ScheduledExecutorService to FieldDeclaration at 2", "MOV Modifier: private to FieldDeclaration at 0", "MOV Modifier: final to FieldDeclaration at 1"]}, {"root": "INS ExpressionStatement to Block at 9", "operations": ["INS SimpleName: executor to FieldAccess at 1", "INS SimpleName: getHostReconnectExecutor to MethodInvocation at 1", "INS ExpressionStatement to Block at 9", "INS FieldAccess to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: config to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "UPDATE from ThreadFactoryBuilder to AtomicInteger", "operations": ["UPD SimpleType: ThreadFactoryBuilder from ThreadFactoryBuilder to AtomicInteger", "UPD SimpleName: ThreadFactoryBuilder from ThreadFactoryBuilder to AtomicInteger"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: ThreadFactoryBuilder to ClassInstanceCreation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: incrementAndGet to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: markedDownCount to MethodInvocation at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: delay to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS QualifiedName: TimeUnit.MILLISECONDS to MethodInvocation at 0", "INS SimpleName: convert to MethodInvocation at 1", "INS QualifiedName: TimeUnit.NANOSECONDS to MethodInvocation at 3", "INS CastExpression to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS PrimitiveType: long to CastExpression at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: delay to MethodInvocation at 3", "operations": ["INS SimpleName: delay to MethodInvocation at 3"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS StringLiteral: \",failed=\" to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS SimpleName: append to MethodInvocation at 1", "operations": ["INS SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS SimpleName: append to MethodInvocation at 1", "operations": ["INS SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0", "MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \",failed=\" to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from \",failed=\" to \",closed=\"", "operations": ["UPD StringLiteral: \",failed=\" from \",failed=\" to \",closed=\""]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS StringLiteral: \",busy=\" to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS SimpleName: append to MethodInvocation at 1", "operations": ["INS SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: - to MethodInvocation at 2"]}, {"root": "INS SimpleName: idle to MethodInvocation at 2", "operations": ["INS SimpleName: idle to MethodInvocation at 2"]}, {"root": "INS StringLiteral: \",idle=\" to MethodInvocation at 2", "operations": ["INS StringLiteral: \",idle=\" to MethodInvocation at 2"]}, {"root": "INS SimpleName: open to MethodInvocation at 2", "operations": ["INS SimpleName: open to MethodInvocation at 2"]}, {"root": "INS StringLiteral: \"open=\" to MethodInvocation at 2", "operations": ["INS StringLiteral: \"open=\" to MethodInvocation at 2"]}, {"root": "UPDATE from \",idle=\" to \",connections(\"", "operations": ["UPD StringLiteral: \",idle=\" from \",idle=\" to \",connections(\""]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS StringLiteral: \",recon=\" to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from open to append", "operations": ["UPD SimpleName: open from open to append"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "INS PrefixExpression: ! to MethodInvocation at 2", "operations": ["INS SimpleName: isShutdown to MethodInvocation at 0", "INS PrefixExpression: ! to MethodInvocation at 2", "INS MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "UPDATE from \",connections(\" to \",active=\"", "operations": ["UPD StringLiteral: \",connections(\" from \",connections(\" to \",active=\""]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: markedDownCount to MethodInvocation at 0"]}, {"root": "UPDATE from \",active=\" to \",down=\"", "operations": ["UPD StringLiteral: \",active=\" from \",active=\" to \",down=\""]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.Executors", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.util.concurrent.ThreadFactoryBuilder", "DEL ImportDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: setDaemon", "DEL SimpleName: Executors", "DEL BooleanLiteral: true", "DEL SimpleName: build", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: newScheduledThreadPool", "DEL MethodInvocation", "DEL SimpleName: executor", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL FieldDeclaration"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: executor", "DEL MethodInvocation", "DEL SimpleName: shutdownNow"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL PrefixExpression: !"]}, {"root": "DEL StringLiteral: \"open=\"", "operations": ["DEL StringLiteral: \"open=\""]}, {"root": "DEL SimpleName: idle", "operations": ["DEL SimpleName: idle"]}, {"root": "DEL StringLiteral: \",busy=\"", "operations": ["DEL StringLiteral: \",busy=\""]}, {"root": "DEL StringLiteral: \",closed=\"", "operations": ["DEL StringLiteral: \",closed=\""]}, {"root": "DEL InfixExpression: /", "operations": ["DEL NumberLiteral: 1000000", "DEL InfixExpression: /"]}]}}, {"SimpleHostConnectionPool_diff": {"operations": ["Insert FieldDeclaration(296) into TypeDeclaration: class(1927) at 21", "Insert FieldDeclaration(353) into TypeDeclaration: class(1927) at 27", "Move Modifier: private(340) into FieldDeclaration(296) at 0", "Move Modifier: final(341) into FieldDeclaration(296) at 1", "Insert SimpleType: AtomicInteger(289) into FieldDeclaration(296) at 2", "Insert VariableDeclarationFragment(295) into FieldDeclaration(296) at 3", "Insert Modifier: private(347) into FieldDeclaration(353) at 0", "Insert Modifier: final(348) into FieldDeclaration(353) at 1", "Move SimpleType: ScheduledExecutorService(343) into FieldDeclaration(353) at 2", "Insert VariableDeclarationFragment(352) into FieldDeclaration(353) at 3", "Insert SimpleName: AtomicInteger(288) into SimpleType: AtomicInteger(289) at 0", "Insert SimpleName: markedDownCount(290) into VariableDeclarationFragment(295) at 0", "Insert ClassInstanceCreation(294) into VariableDeclarationFragment(295) at 1", "Insert SimpleName: executor(351) into VariableDeclarationFragment(352) at 0", "Insert ExpressionStatement(508) into Block(509) at 9", "Update SimpleType: ThreadFactoryBuilder(349) to AtomicInteger", "Move SimpleType: ThreadFactoryBuilder(349) into ClassInstanceCreation(294) at 0", "Insert NumberLiteral: 0(293) into ClassInstanceCreation(294) at 1", "Insert Assignment: =(507) into ExpressionStatement(508) at 0", "Update SimpleName: ThreadFactoryBuilder(348) to AtomicInteger", "Insert FieldAccess(503) into Assignment: =(507) at 0", "Insert MethodInvocation(506) into Assignment: =(507) at 1", "Insert ExpressionStatement(1039) into Block(1188) at 0", "Insert ThisExpression(501) into FieldAccess(503) at 0", "Insert SimpleName: executor(502) into FieldAccess(503) at 1", "Insert SimpleName: config(504) into MethodInvocation(506) at 0", "Insert SimpleName: getHostReconnectExecutor(505) into MethodInvocation(506) at 1", "Insert MethodInvocation(1038) into ExpressionStatement(1039) at 0", "Insert SimpleName: markedDownCount(1036) into MethodInvocation(1038) at 0", "Insert SimpleName: incrementAndGet(1037) into MethodInvocation(1038) at 1", "Insert VariableDeclarationStatement(1077) into Block(1175) at 0", "Insert MethodInvocation(1903) into MethodInvocation(1904) at 2", "Insert PrimitiveType: long(1071) into VariableDeclarationStatement(1077) at 0", "Insert VariableDeclarationFragment(1076) into VariableDeclarationStatement(1077) at 1", "Insert QualifiedName: TimeUnit.MILLISECONDS(1896) into MethodInvocation(1903) at 0", "Insert SimpleName: convert(1897) into MethodInvocation(1903) at 1", "Insert CastExpression(1901) into MethodInvocation(1903) at 2", "Insert QualifiedName: TimeUnit.NANOSECONDS(1902) into MethodInvocation(1903) at 3", "Insert SimpleName: delay(1072) into VariableDeclarationFragment(1076) at 0", "Move MethodInvocation(1159) into VariableDeclarationFragment(1076) at 1", "Insert SimpleName: delay(1171) into MethodInvocation(1173) at 3", "Insert PrimitiveType: long(1898) into CastExpression(1901) at 0", "Move MethodInvocation(1874) into CastExpression(1901) at 1", "Insert MethodInvocation(1853) into MethodInvocation(1858) at 0", "Insert SimpleName: append(1854) into MethodInvocation(1858) at 1", "Move MethodInvocation(1830) into MethodInvocation(1853) at 0", "Move SimpleName: append(1831) into MethodInvocation(1853) at 1", "Insert StringLiteral: \",failed=\"(1852) into MethodInvocation(1853) at 2", "Insert MethodInvocation(1845) into MethodInvocation(1850) at 0", "Insert SimpleName: append(1846) into MethodInvocation(1850) at 1", "Move MethodInvocation(1826) into MethodInvocation(1850) at 2", "Move MethodInvocation(1827) into MethodInvocation(1845) at 0", "Move SimpleName: append(1828) into MethodInvocation(1845) at 1", "Update StringLiteral: \",failed=\"(1829) to \",closed=\"", "Move StringLiteral: \",failed=\"(1829) into MethodInvocation(1845) at 2", "Insert MethodInvocation(1837) into MethodInvocation(1842) at 0", "Insert SimpleName: append(1838) into MethodInvocation(1842) at 1", "Move InfixExpression: -(1818) into MethodInvocation(1842) at 2", "Move MethodInvocation(1822) into MethodInvocation(1837) at 0", "Move SimpleName: append(1823) into MethodInvocation(1837) at 1", "Insert StringLiteral: \",busy=\"(1836) into MethodInvocation(1837) at 2", "Insert SimpleName: idle(1833) into MethodInvocation(1834) at 2", "Insert StringLiteral: \",idle=\"(1830) into MethodInvocation(1831) at 2", "Insert SimpleName: open(1827) into MethodInvocation(1828) at 2", "Insert StringLiteral: \"open=\"(1824) into MethodInvocation(1825) at 2", "Update StringLiteral: \",idle=\"(1807) to \",connections(\"", "Insert MethodInvocation(1815) into MethodInvocation(1819) at 0", "Update SimpleName: open(1804) to append", "Move MethodInvocation(1794) into MethodInvocation(1819) at 4", "Move MethodInvocation(1802) into MethodInvocation(1815) at 0", "Move SimpleName: append(1803) into MethodInvocation(1815) at 1", "Insert StringLiteral: \",recon=\"(1814) into MethodInvocation(1815) at 2", "Insert PrefixExpression: !(1811) into MethodInvocation(1812) at 2", "Update StringLiteral: \",connections(\"(1798) to \",active=\"", "Insert MethodInvocation(1810) into PrefixExpression: !(1811) at 0", "Insert MethodInvocation(1803) into MethodInvocation(1804) at 2", "Insert SimpleName: isShutdown(1809) into MethodInvocation(1810) at 0", "Update StringLiteral: \",active=\"(1790) to \",down=\"", "Insert SimpleName: markedDownCount(1801) into MethodInvocation(1803) at 0", "Insert SimpleName: get(1802) into MethodInvocation(1803) at 1", "Delete QualifiedName: java.util.concurrent.Executors(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: com.google.common.util.concurrent.ThreadFactoryBuilder(40)", "Delete ImportDeclaration(41)", "Delete SimpleName: executor(344)", "Delete SimpleName: Executors(345)", "Delete SimpleName: newScheduledThreadPool(346)", "Delete NumberLiteral: 1(347)", "Delete ClassInstanceCreation(350)", "Delete SimpleName: setDaemon(351)", "Delete BooleanLiteral: true(352)", "Delete MethodInvocation(353)", "Delete SimpleName: build(354)", "Delete MethodInvocation(355)", "Delete MethodInvocation(356)", "Delete VariableDeclarationFragment(357)", "Delete FieldDeclaration(358)", "Delete SimpleName: executor(1301)", "Delete SimpleName: shutdownNow(1302)", "Delete MethodInvocation(1303)", "Delete ExpressionStatement(1304)", "Delete PrefixExpression: !(1795)", "Delete StringLiteral: \"open=\"(1801)", "Delete SimpleName: idle(1810)", "Delete StringLiteral: \",busy=\"(1813)", "Delete StringLiteral: \",closed=\"(1821)", "Delete NumberLiteral: 1000000(1875)", "Delete InfixExpression: /(1876)"]}}, {"TokenPartitionedTopology_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.collect.Maps.EntryTransformer", "DEL ImportDeclaration"]}]}}, {"TokenPartitionedTopology_diff": {"operations": ["Delete QualifiedName: com.google.common.collect.Maps.EntryTransformer(38)", "Delete ImportDeclaration(39)"]}}, {"Message_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: com.google.common.collect.Maps to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: com.netflix.astyanax.recipes.scheduler.Trigger to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 15", "MOV FieldDeclaration to TypeDeclaration: class at 7", "MOV MethodDeclaration to TypeDeclaration: class at 16", "MOV MethodDeclaration to TypeDeclaration: class at 17", "MOV MethodDeclaration to TypeDeclaration: class at 13", "MOV MethodDeclaration to TypeDeclaration: class at 9", "MOV FieldDeclaration to TypeDeclaration: class at 7", "MOV MethodDeclaration to TypeDeclaration: class at 12", "MOV MethodDeclaration to TypeDeclaration: class at 10"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 3", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: Trigger to SimpleType: Trigger at 0", "INS SimpleName: trigger to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 3", "INS Modifier: private to FieldDeclaration at 1", "INS SimpleType: Trigger to FieldDeclaration at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS SimpleName: timeout to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 1", "INS NumberLiteral: 5 to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: Message to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 11"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS SimpleType: Trigger to MethodDeclaration at 1", "INS SimpleName: getTrigger to MethodDeclaration at 2", "INS SimpleName: Trigger to SimpleType: Trigger at 0", "INS Modifier: public to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: trigger to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS Block to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS SimpleName: hasTrigger to MethodDeclaration at 2", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS SimpleName: trigger to InfixExpression: != at 0", "INS Block to MethodDeclaration at 3", "INS InfixExpression: != to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS NullLiteral to InfixExpression: != at 1", "INS Modifier: public to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 20", "INS PrimitiveType: byte to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: getPriority to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 22", "INS Block to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS InfixExpression: != to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleName: timeout to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: hasTimeout to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 23", "operations": ["INS PrimitiveType: byte to SingleVariableDeclaration at 0", "INS Javadoc to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 23", "INS SimpleName: setPriority to MethodDeclaration at 3", "INS SimpleName: priority to SingleVariableDeclaration at 1", "INS SimpleName: priority to TagElement: @param at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TagElement to Javadoc at 0", "INS Modifier: public to MethodDeclaration at 1", "INS TagElement: @return to Javadoc at 2", "INS TagElement: @param to Javadoc at 1", "INS TextElement: internal data model implementations. to TagElement at 1", "INS TextElement: Setting priority will NOT work correctly with a future trigger time due to  to TagElement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 28", "operations": ["INS SimpleName: key to FieldAccess at 1", "INS NullLiteral to InfixExpression: != at 1", "INS Block to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS InfixExpression: != to ReturnStatement at 0", "INS FieldAccess to InfixExpression: != at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: hasKey to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 28", "INS Modifier: public to MethodDeclaration at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 33", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 33", "INS SimpleName: toString to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS StringLiteral: \", key=\" to InfixExpression: + at 10", "INS SimpleName: timeout to InfixExpression: + at 9", "INS StringLiteral: \"Message [token=\" to InfixExpression: + at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: token to InfixExpression: + at 1", "INS StringLiteral: \", parameters=\" to InfixExpression: + at 4", "INS SimpleName: parameters to InfixExpression: + at 5", "INS SimpleName: key to InfixExpression: + at 11", "INS SimpleName: Override to MarkerAnnotation at 0", "INS StringLiteral: \", timeout=\" to InfixExpression: + at 8", "INS StringLiteral: \", taskClass=\" to InfixExpression: + at 12", "INS SimpleName: priority to InfixExpression: + at 7", "INS SimpleName: trigger to InfixExpression: + at 3", "INS StringLiteral: \", priority=\" to InfixExpression: + at 6", "INS StringLiteral: \"]\" to InfixExpression: + at 14", "INS SimpleName: taskClass to InfixExpression: + at 13", "INS Block to MethodDeclaration at 4", "INS StringLiteral: \", trigger=\" to InfixExpression: + at 2", "INS InfixExpression: + to ReturnStatement at 0"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV Javadoc to FieldDeclaration at 0"]}, {"root": "UPDATE from short to byte", "operations": ["UPD PrimitiveType: short from short to byte"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV Javadoc to FieldDeclaration at 0", "MOV SimpleType: Integer to FieldDeclaration at 2"]}, {"root": "INS Javadoc to FieldDeclaration at 0", "operations": ["INS Javadoc to FieldDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TextElement: Class name to handle this message to TagElement at 0"]}, {"root": "UPDATE from Long to String", "operations": ["UPD SimpleType: Long from Long to String", "UPD SimpleName: Long from Long to String", "UPD SimpleName: Long from Long to String", "UPD SimpleType: Long from Long to String"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 2", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV Block to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Message to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "UPDATE from Message to setTrigger", "operations": ["UPD SimpleName: Message from Message to setTrigger"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: trigger to SingleVariableDeclaration at 1", "INS SimpleType: Trigger to SingleVariableDeclaration at 0", "INS SimpleName: Trigger to SimpleType: Trigger at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Message to MethodDeclaration at 1"]}, {"root": "INS SimpleType: Message to MethodDeclaration at 1", "operations": ["INS SimpleName: Message to SimpleType: Message at 0", "INS SimpleType: Message to MethodDeclaration at 1"]}, {"root": "INS SimpleName: addParameter to MethodDeclaration at 2", "operations": ["INS SimpleName: addParameter to MethodDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: Object to SingleVariableDeclaration at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: Object to SimpleType: Object at 0"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS ExpressionStatement to Block at 1", "INS Block to MethodDeclaration at 5", "INS FieldAccess to Assignment: = at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: parameters to FieldAccess at 1", "INS NullLiteral to InfixExpression: == at 1", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: put to MethodInvocation at 1", "INS ThisExpression to ReturnStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS InfixExpression: == to IfStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS FieldAccess to InfixExpression: == at 0", "INS SimpleName: key to MethodInvocation at 2", "INS SimpleName: Maps to MethodInvocation at 0", "INS ExpressionStatement to IfStatement at 1", "INS ThisExpression to FieldAccess at 0", "INS ThisExpression to FieldAccess at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: value to MethodInvocation at 3", "INS SimpleName: parameters to FieldAccess at 1", "INS SimpleName: newHashMap to MethodInvocation at 1", "INS SimpleName: parameters to FieldAccess at 1", "INS IfStatement to Block at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 5", "MOV SimpleType: Message to MethodDeclaration at 2"]}, {"root": "UPDATE from getData to getKey", "operations": ["UPD SimpleName: getData from getData to getKey"]}, {"root": "INS SimpleType: Message to MethodDeclaration at 1", "operations": ["INS SimpleType: Message to MethodDeclaration at 1", "INS SimpleName: Message to SimpleType: Message at 0"]}, {"root": "UPDATE from setData to setKey", "operations": ["UPD SimpleName: setData from setData to setKey"]}, {"root": "UPDATE from getTriggerTime to getTaskClass", "operations": ["UPD SimpleName: getTriggerTime from getTriggerTime to getTaskClass"]}, {"root": "INS SimpleType: Message to MethodDeclaration at 1", "operations": ["INS SimpleType: Message to MethodDeclaration at 1"]}, {"root": "INS SimpleName: setTaskClass to MethodDeclaration at 2", "operations": ["INS SimpleName: setTaskClass to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "UPDATE from short to boolean", "operations": ["UPD PrimitiveType: short from short to boolean"]}, {"root": "UPDATE from getPriority to hasTaskClass", "operations": ["UPD SimpleName: getPriority from getPriority to hasTaskClass"]}, {"root": "INS Block to MethodDeclaration at 3", "operations": ["INS InfixExpression: != to ReturnStatement at 0", "INS Block to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS FieldAccess to InfixExpression: != at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: taskClass to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0"]}, {"root": "INS SimpleType: Message to MethodDeclaration at 1", "operations": ["INS SimpleType: Message to MethodDeclaration at 1", "INS SimpleName: Message to SimpleType: Message at 0"]}, {"root": "INS SimpleName: clone to MethodDeclaration at 2", "operations": ["INS SimpleName: clone to MethodDeclaration at 2"]}, {"root": "INS Block to MethodDeclaration at 3", "operations": ["INS ExpressionStatement to Block at 6", "INS Assignment: = to ExpressionStatement at 0", "INS QualifiedName: message.priority to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 2", "INS Block to MethodDeclaration at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: Message to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 7", "INS SimpleName: parameters to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: key to Assignment: = at 1", "INS SimpleName: taskClass to Assignment: = at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: message to VariableDeclarationFragment at 0", "INS QualifiedName: message.key to Assignment: = at 0", "INS QualifiedName: message.token to Assignment: = at 0", "INS SimpleName: priority to Assignment: = at 1", "INS ExpressionStatement to Block at 5", "INS VariableDeclarationStatement to Block at 0", "INS QualifiedName: message.timeout to Assignment: = at 0", "INS QualifiedName: message.parameters to Assignment: = at 0", "INS ExpressionStatement to Block at 4", "INS ReturnStatement to Block at 8", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS QualifiedName: message.trigger to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: trigger to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: timeout to Assignment: = at 1", "INS SimpleName: Message to SimpleType: Message at 0", "INS SimpleType: Message to ClassInstanceCreation at 0", "INS SimpleName: Message to SimpleType: Message at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: message to ReturnStatement at 0", "INS ExpressionStatement to Block at 3", "INS QualifiedName: message.taskClass to Assignment: = at 0", "INS SimpleName: token to Assignment: = at 1"]}, {"root": "UPDATE from data to key", "operations": ["UPD SimpleName: data from data to key", "UPD SimpleName: data from data to key", "UPD SimpleName: data from data to key", "UPD SimpleName: data from data to key", "UPD SimpleName: data from data to key", "UPD SimpleName: data from data to key"]}, {"root": "UPDATE from triggerTime to taskClass", "operations": ["UPD SimpleName: triggerTime from triggerTime to taskClass", "UPD SimpleName: triggerTime from triggerTime to taskClass", "UPD SimpleName: data from data to taskClass", "UPD SimpleName: triggerTime from triggerTime to taskClass", "UPD SimpleName: triggerTime from triggerTime to taskClass"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS ReturnStatement to Block at 1", "INS ThisExpression to ReturnStatement at 0"]}, {"root": "UPDATE from Long to Message", "operations": ["UPD SimpleName: Long from Long to Message"]}, {"root": "MOVE from SimpleType: Message", "operations": ["MOV SimpleName: Long to SimpleType: Message at 0"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS ReturnStatement to Block at 1", "INS ThisExpression to ReturnStatement at 0"]}, {"root": "UPDATE from Map of task arguments. to Map of message parameters that are stored with the queued item", "operations": ["UPD TextElement: Map of task arguments. from Map of task arguments. to Map of message parameters that are stored with the queued item"]}, {"root": "UPDATE from Data associated with the task to Unique key for this message.", "operations": ["UPD TextElement: Data associated with the task from Data associated with the task to Unique key for this message."]}, {"root": "UPDATE from data to trigger", "operations": ["UPD SimpleName: data from data to trigger", "UPD SimpleName: data from data to trigger"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: timeout", "DEL Modifier: private", "DEL NumberLiteral: 10"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL SimpleName: data", "DEL FieldAccess", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleName: data"]}, {"root": "DEL PrimitiveType: void", "operations": ["DEL PrimitiveType: void"]}, {"root": "DEL SimpleName: Message", "operations": ["DEL SimpleName: Message"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: triggerTime", "DEL ReturnStatement", "DEL InfixExpression: ==", "DEL IfStatement", "DEL NullLiteral", "DEL NumberLiteral: 0L"]}, {"root": "DEL SimpleName: setTriggerTime", "operations": ["DEL SimpleName: setTriggerTime"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: triggerTime", "DEL SimpleType: Long"]}, {"root": "DEL SimpleName: setPriority", "operations": ["DEL SimpleName: setPriority"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: priority", "DEL PrimitiveType: short", "DEL SingleVariableDeclaration"]}]}}, {"Message_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(482) at 4", "Insert ImportDeclaration(11) into CompilationUnit(482) at 5", "Move FieldDeclaration(29) into TypeDeclaration: class(481) at 7", "Move FieldDeclaration(38) into TypeDeclaration: class(481) at 7", "Move MethodDeclaration(121) into TypeDeclaration: class(481) at 9", "Move MethodDeclaration(147) into TypeDeclaration: class(481) at 10", "Move MethodDeclaration(210) into TypeDeclaration: class(481) at 12", "Move MethodDeclaration(230) into TypeDeclaration: class(481) at 13", "Move MethodDeclaration(251) into TypeDeclaration: class(481) at 15", "Move MethodDeclaration(286) into TypeDeclaration: class(481) at 16", "Move MethodDeclaration(314) into TypeDeclaration: class(481) at 17", "Insert QualifiedName: com.google.common.collect.Maps(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: com.netflix.astyanax.recipes.scheduler.Trigger(10) into ImportDeclaration(11) at 0", "Insert FieldDeclaration(33) into TypeDeclaration: class(481) at 3", "Insert FieldDeclaration(66) into TypeDeclaration: class(481) at 6", "Insert MethodDeclaration(102) into TypeDeclaration: class(481) at 10", "Insert MethodDeclaration(136) into TypeDeclaration: class(481) at 13", "Insert MethodDeclaration(163) into TypeDeclaration: class(481) at 15", "Insert MethodDeclaration(244) into TypeDeclaration: class(481) at 19", "Insert MethodDeclaration(267) into TypeDeclaration: class(481) at 21", "Insert MethodDeclaration(291) into TypeDeclaration: class(481) at 22", "Insert MethodDeclaration(374) into TypeDeclaration: class(481) at 27", "Insert MethodDeclaration(480) into TypeDeclaration: class(481) at 32", "Move Javadoc(32) into FieldDeclaration(33) at 0", "Insert Modifier: private(28) into FieldDeclaration(33) at 1", "Insert SimpleType: Trigger(30) into FieldDeclaration(33) at 2", "Insert VariableDeclarationFragment(32) into FieldDeclaration(33) at 3", "Update PrimitiveType: short(57) to byte", "Move Javadoc(64) into FieldDeclaration(66) at 0", "Insert Modifier: private(60) into FieldDeclaration(66) at 1", "Move SimpleType: Integer(67) into FieldDeclaration(66) at 2", "Insert VariableDeclarationFragment(65) into FieldDeclaration(66) at 3", "Insert Javadoc(78) into FieldDeclaration(84) at 0", "Update SimpleType: Long(35) to String", "Insert Modifier: public(89) into MethodDeclaration(102) at 0", "Insert SimpleName: Message(90) into MethodDeclaration(102) at 1", "Move SingleVariableDeclaration(95) into MethodDeclaration(102) at 2", "Move Block(112) into MethodDeclaration(102) at 3", "Insert Modifier: public(129) into MethodDeclaration(136) at 0", "Insert SimpleType: Trigger(131) into MethodDeclaration(136) at 1", "Insert SimpleName: getTrigger(132) into MethodDeclaration(136) at 2", "Insert Block(135) into MethodDeclaration(136) at 3", "Move SimpleType: Message(150) into MethodDeclaration(154) at 1", "Update SimpleName: Message(77) to setTrigger", "Insert SingleVariableDeclaration(144) into MethodDeclaration(154) at 3", "Insert Modifier: public(155) into MethodDeclaration(163) at 0", "Insert PrimitiveType: boolean(156) into MethodDeclaration(163) at 1", "Insert SimpleName: hasTrigger(157) into MethodDeclaration(163) at 2", "Insert Block(162) into MethodDeclaration(163) at 3", "Move SimpleType: Message(182) into MethodDeclaration(199) at 1", "Insert SimpleType: Message(202) into MethodDeclaration(237) at 1", "Insert SimpleName: addParameter(203) into MethodDeclaration(237) at 2", "Move SingleVariableDeclaration(155) into MethodDeclaration(237) at 3", "Insert SingleVariableDeclaration(211) into MethodDeclaration(237) at 4", "Insert Block(236) into MethodDeclaration(237) at 5", "Insert Modifier: public(238) into MethodDeclaration(244) at 0", "Insert PrimitiveType: byte(239) into MethodDeclaration(244) at 1", "Insert SimpleName: getPriority(240) into MethodDeclaration(244) at 2", "Move Block(236) into MethodDeclaration(244) at 3", "Insert Modifier: public(259) into MethodDeclaration(267) at 0", "Insert PrimitiveType: boolean(260) into MethodDeclaration(267) at 1", "Insert SimpleName: hasTimeout(261) into MethodDeclaration(267) at 2", "Insert Block(266) into MethodDeclaration(267) at 3", "Insert Javadoc(274) into MethodDeclaration(291) at 0", "Insert Modifier: public(275) into MethodDeclaration(291) at 1", "Move SimpleType: Message(254) into MethodDeclaration(291) at 2", "Insert SimpleName: setPriority(278) into MethodDeclaration(291) at 3", "Insert SingleVariableDeclaration(281) into MethodDeclaration(291) at 4", "Move Block(267) into MethodDeclaration(291) at 5", "Update SimpleName: getData(125) to getKey", "Insert SimpleType: Message(348) into MethodDeclaration(363) at 1", "Update SimpleName: setData(151) to setKey", "Move SingleVariableDeclaration(99) into MethodDeclaration(363) at 3", "Insert Modifier: public(364) into MethodDeclaration(374) at 0", "Insert PrimitiveType: boolean(365) into MethodDeclaration(374) at 1", "Insert SimpleName: hasKey(366) into MethodDeclaration(374) at 2", "Insert Block(373) into MethodDeclaration(374) at 3", "Update SimpleType: Long(168) to String", "Update SimpleName: getTriggerTime(169) to getTaskClass", "Insert SimpleType: Message(385) into MethodDeclaration(400) at 1", "Insert SimpleName: setTaskClass(386) into MethodDeclaration(400) at 2", "Move SingleVariableDeclaration(81) into MethodDeclaration(400) at 3", "Update PrimitiveType: short(232) to boolean", "Update SimpleName: getPriority(233) to hasTaskClass", "Insert Block(410) into MethodDeclaration(411) at 3", "Insert SimpleType: Message(414) into MethodDeclaration(455) at 1", "Insert SimpleName: clone(415) into MethodDeclaration(455) at 2", "Insert Block(454) into MethodDeclaration(455) at 3", "Insert MarkerAnnotation(457) into MethodDeclaration(480) at 0", "Insert Modifier: public(458) into MethodDeclaration(480) at 1", "Insert SimpleType: String(460) into MethodDeclaration(480) at 2", "Insert SimpleName: toString(461) into MethodDeclaration(480) at 3", "Insert Block(479) into MethodDeclaration(480) at 4", "Insert SimpleName: Trigger(29) into SimpleType: Trigger(30) at 0", "Insert SimpleName: trigger(31) into VariableDeclarationFragment(32) at 0", "Insert SimpleName: timeout(63) into VariableDeclarationFragment(65) at 0", "Insert NumberLiteral: 5(64) into VariableDeclarationFragment(65) at 1", "Update SimpleName: data(27) to key", "Insert TagElement(77) into Javadoc(78) at 0", "Update SimpleName: Long(34) to String", "Update SimpleName: triggerTime(36) to taskClass", "Insert SimpleName: Trigger(130) into SimpleType: Trigger(131) at 0", "Insert ReturnStatement(134) into Block(135) at 0", "Insert SimpleType: Trigger(142) into SingleVariableDeclaration(144) at 0", "Insert SimpleName: trigger(143) into SingleVariableDeclaration(144) at 1", "Move ReturnStatement(163) into Block(153) at 1", "Insert ReturnStatement(161) into Block(162) at 0", "Move ReturnStatement(195) into Block(198) at 1", "Insert SimpleName: Message(201) into SimpleType: Message(202) at 0", "Update SimpleName: data(154) to key", "Insert SimpleType: Object(209) into SingleVariableDeclaration(211) at 0", "Insert SimpleName: value(210) into SingleVariableDeclaration(211) at 1", "Insert IfStatement(225) into Block(236) at 0", "Insert ExpressionStatement(233) into Block(236) at 1", "Insert ReturnStatement(235) into Block(236) at 2", "Insert ReturnStatement(265) into Block(266) at 0", "Insert TagElement(270) into Javadoc(274) at 0", "Insert TagElement: @param(272) into Javadoc(274) at 1", "Insert TagElement: @return(273) into Javadoc(274) at 2", "Insert PrimitiveType: byte(279) into SingleVariableDeclaration(281) at 0", "Insert SimpleName: priority(280) into SingleVariableDeclaration(281) at 1", "Insert SimpleName: Message(347) into SimpleType: Message(348) at 0", "Update SimpleName: data(98) to key", "Insert ReturnStatement(361) into Block(362) at 1", "Insert ReturnStatement(372) into Block(373) at 0", "Update SimpleName: Long(167) to String", "Update SimpleName: Long(184) to Message", "Move SimpleName: Long(184) into SimpleType: Message(385) at 0", "Update SimpleName: data(80) to taskClass", "Insert ReturnStatement(398) into Block(399) at 1", "Insert ReturnStatement(409) into Block(410) at 0", "Insert SimpleName: Message(413) into SimpleType: Message(414) at 0", "Insert VariableDeclarationStatement(423) into Block(454) at 0", "Insert ExpressionStatement(427) into Block(454) at 1", "Insert ExpressionStatement(431) into Block(454) at 2", "Insert ExpressionStatement(435) into Block(454) at 3", "Insert ExpressionStatement(439) into Block(454) at 4", "Insert ExpressionStatement(443) into Block(454) at 5", "Insert ExpressionStatement(447) into Block(454) at 6", "Insert ExpressionStatement(451) into Block(454) at 7", "Insert ReturnStatement(453) into Block(454) at 8", "Insert SimpleName: Override(456) into MarkerAnnotation(457) at 0", "Insert SimpleName: String(459) into SimpleType: String(460) at 0", "Insert ReturnStatement(478) into Block(479) at 0", "Update TextElement: Map of task arguments.(39) to Map of message parameters that are stored with the queued item", "Update TextElement: Data associated with the task(21) to Unique key for this message.", "Insert TextElement: Class name to handle this message(76) into TagElement(77) at 0", "Insert SimpleName: trigger(133) into ReturnStatement(134) at 0", "Insert SimpleName: Trigger(141) into SimpleType: Trigger(142) at 0", "Insert InfixExpression: !=(160) into ReturnStatement(161) at 0", "Insert SimpleName: Object(208) into SimpleType: Object(209) at 0", "Insert InfixExpression: ==(216) into IfStatement(225) at 0", "Insert ExpressionStatement(224) into IfStatement(225) at 1", "Insert MethodInvocation(232) into ExpressionStatement(233) at 0", "Insert ThisExpression(234) into ReturnStatement(235) at 0", "Insert InfixExpression: !=(264) into ReturnStatement(265) at 0", "Insert TextElement: Setting priority will NOT work correctly with a future trigger time due to (268) into TagElement(270) at 0", "Insert TextElement: internal data model implementations.(269) into TagElement(270) at 1", "Insert SimpleName: priority(271) into TagElement: @param(272) at 0", "Update SimpleName: data(126) to key", "Insert ThisExpression(360) into ReturnStatement(361) at 0", "Insert InfixExpression: !=(371) into ReturnStatement(372) at 0", "Update SimpleName: triggerTime(176) to taskClass", "Insert ThisExpression(397) into ReturnStatement(398) at 0", "Insert InfixExpression: !=(408) into ReturnStatement(409) at 0", "Insert SimpleType: Message(417) into VariableDeclarationStatement(423) at 0", "Insert VariableDeclarationFragment(422) into VariableDeclarationStatement(423) at 1", "Insert Assignment: =(426) into ExpressionStatement(427) at 0", "Insert Assignment: =(430) into ExpressionStatement(431) at 0", "Insert Assignment: =(434) into ExpressionStatement(435) at 0", "Insert Assignment: =(438) into ExpressionStatement(439) at 0", "Insert Assignment: =(442) into ExpressionStatement(443) at 0", "Insert Assignment: =(446) into ExpressionStatement(447) at 0", "Insert Assignment: =(450) into ExpressionStatement(451) at 0", "Insert SimpleName: message(452) into ReturnStatement(453) at 0", "Insert InfixExpression: +(477) into ReturnStatement(478) at 0", "Update SimpleName: data(85) to trigger", "Insert SimpleName: trigger(158) into InfixExpression: !=(160) at 0", "Insert NullLiteral(159) into InfixExpression: !=(160) at 1", "Insert FieldAccess(214) into InfixExpression: ==(216) at 0", "Insert NullLiteral(215) into InfixExpression: ==(216) at 1", "Insert Assignment: =(223) into ExpressionStatement(224) at 0", "Insert FieldAccess(228) into MethodInvocation(232) at 0", "Insert SimpleName: put(229) into MethodInvocation(232) at 1", "Insert SimpleName: key(230) into MethodInvocation(232) at 2", "Insert SimpleName: value(231) into MethodInvocation(232) at 3", "Insert SimpleName: timeout(262) into InfixExpression: !=(264) at 0", "Insert NullLiteral(263) into InfixExpression: !=(264) at 1", "Update SimpleName: data(159) to key", "Insert FieldAccess(369) into InfixExpression: !=(371) at 0", "Insert NullLiteral(370) into InfixExpression: !=(371) at 1", "Update SimpleName: triggerTime(191) to taskClass", "Insert FieldAccess(406) into InfixExpression: !=(408) at 0", "Insert NullLiteral(407) into InfixExpression: !=(408) at 1", "Insert SimpleName: Message(416) into SimpleType: Message(417) at 0", "Insert SimpleName: message(418) into VariableDeclarationFragment(422) at 0", "Insert ClassInstanceCreation(421) into VariableDeclarationFragment(422) at 1", "Insert QualifiedName: message.token(424) into Assignment: =(426) at 0", "Insert SimpleName: token(425) into Assignment: =(426) at 1", "Insert QualifiedName: message.trigger(428) into Assignment: =(430) at 0", "Insert SimpleName: trigger(429) into Assignment: =(430) at 1", "Insert QualifiedName: message.parameters(432) into Assignment: =(434) at 0", "Insert SimpleName: parameters(433) into Assignment: =(434) at 1", "Insert QualifiedName: message.priority(436) into Assignment: =(438) at 0", "Insert SimpleName: priority(437) into Assignment: =(438) at 1", "Insert QualifiedName: message.timeout(440) into Assignment: =(442) at 0", "Insert SimpleName: timeout(441) into Assignment: =(442) at 1", "Insert QualifiedName: message.key(444) into Assignment: =(446) at 0", "Insert SimpleName: key(445) into Assignment: =(446) at 1", "Insert QualifiedName: message.taskClass(448) into Assignment: =(450) at 0", "Insert SimpleName: taskClass(449) into Assignment: =(450) at 1", "Insert StringLiteral: \"Message [token=\"(462) into InfixExpression: +(477) at 0", "Insert SimpleName: token(463) into InfixExpression: +(477) at 1", "Insert StringLiteral: \", trigger=\"(464) into InfixExpression: +(477) at 2", "Insert SimpleName: trigger(465) into InfixExpression: +(477) at 3", "Insert StringLiteral: \", parameters=\"(466) into InfixExpression: +(477) at 4", "Insert SimpleName: parameters(467) into InfixExpression: +(477) at 5", "Insert StringLiteral: \", priority=\"(468) into InfixExpression: +(477) at 6", "Insert SimpleName: priority(469) into InfixExpression: +(477) at 7", "Insert StringLiteral: \", timeout=\"(470) into InfixExpression: +(477) at 8", "Insert SimpleName: timeout(471) into InfixExpression: +(477) at 9", "Insert StringLiteral: \", key=\"(472) into InfixExpression: +(477) at 10", "Insert SimpleName: key(473) into InfixExpression: +(477) at 11", "Insert StringLiteral: \", taskClass=\"(474) into InfixExpression: +(477) at 12", "Insert SimpleName: taskClass(475) into InfixExpression: +(477) at 13", "Insert StringLiteral: \"]\"(476) into InfixExpression: +(477) at 14", "Update SimpleName: data(83) to trigger", "Insert ThisExpression(212) into FieldAccess(214) at 0", "Insert SimpleName: parameters(213) into FieldAccess(214) at 1", "Insert FieldAccess(219) into Assignment: =(223) at 0", "Insert MethodInvocation(222) into Assignment: =(223) at 1", "Insert ThisExpression(226) into FieldAccess(228) at 0", "Insert SimpleName: parameters(227) into FieldAccess(228) at 1", "Update SimpleName: data(157) to key", "Insert ThisExpression(367) into FieldAccess(369) at 0", "Insert SimpleName: key(368) into FieldAccess(369) at 1", "Update SimpleName: triggerTime(189) to taskClass", "Insert ThisExpression(404) into FieldAccess(406) at 0", "Insert SimpleName: taskClass(405) into FieldAccess(406) at 1", "Insert SimpleType: Message(420) into ClassInstanceCreation(421) at 0", "Insert ThisExpression(217) into FieldAccess(219) at 0", "Insert SimpleName: parameters(218) into FieldAccess(219) at 1", "Insert SimpleName: Maps(220) into MethodInvocation(222) at 0", "Insert SimpleName: newHashMap(221) into MethodInvocation(222) at 1", "Insert SimpleName: Message(419) into SimpleType: Message(420) at 0", "Delete Modifier: private(65)", "Delete SimpleName: timeout(68)", "Delete NumberLiteral: 10(69)", "Delete VariableDeclarationFragment(70)", "Delete FieldDeclaration(71)", "Delete ThisExpression(106)", "Delete SimpleName: data(107)", "Delete FieldAccess(108)", "Delete SimpleName: data(109)", "Delete Assignment: =(110)", "Delete ExpressionStatement(111)", "Delete PrimitiveType: void(212)", "Delete SimpleName: Message(91)", "Delete SimpleName: triggerTime(170)", "Delete NullLiteral(171)", "Delete InfixExpression: ==(172)", "Delete NumberLiteral: 0L(173)", "Delete ReturnStatement(174)", "Delete IfStatement(175)", "Delete SimpleName: setTriggerTime(183)", "Delete SimpleType: Long(185)", "Delete SimpleName: triggerTime(186)", "Delete SingleVariableDeclaration(187)", "Delete SimpleName: setPriority(255)", "Delete PrimitiveType: short(256)", "Delete SimpleName: priority(257)", "Delete SingleVariableDeclaration(258)"]}}, {"MessageConsumer_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: java.util.concurrent.TimeUnit to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 3", "operations": ["INS SimpleType: InterruptedException to MethodDeclaration at 8", "INS TagElement: @param to Javadoc at 1", "INS SimpleType: TimeUnit to SingleVariableDeclaration at 0", "INS TagElement: @return to Javadoc at 4", "INS ParameterizedType: Collection<Message> to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleType: MessageQueueException to MethodDeclaration at 6", "INS TagElement to Javadoc at 0", "INS TextElement: Acquire up to N items from the queue.  Each item must be released by calling ackMessage. to TagElement at 0", "INS SimpleName: TimeUnit to SimpleType: TimeUnit at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: readMessages to MethodDeclaration at 2", "INS SimpleType: BusyLockException to MethodDeclaration at 7", "INS SimpleType: Collection to ParameterizedType: Collection<Message> at 0", "INS SimpleName: units to TagElement: @param at 0", "INS SimpleName: timeout to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: timeout to SingleVariableDeclaration at 1", "INS SimpleName: itemsToRead to SingleVariableDeclaration at 1", "INS SimpleName: itemsToRead to TagElement: @param at 0", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS MethodDeclaration to TypeDeclaration: interface at 3", "INS SimpleType: Message to ParameterizedType: Collection<Message> at 1", "INS SimpleName: InterruptedException to SimpleType: InterruptedException at 0", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: BusyLockException to SimpleType: BusyLockException at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: Message to SimpleType: Message at 0", "INS TagElement: @param to Javadoc at 3", "INS SimpleName: units to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 4", "operations": ["INS TextElement: Peek into messages from the queue.  The queue state is not altered by this operation. to TagElement at 0", "INS ParameterizedType: Collection<Message> to MethodDeclaration at 1", "INS SimpleType: MessageQueueException to MethodDeclaration at 4", "INS TagElement: @return to Javadoc at 2", "INS SimpleType: Collection to ParameterizedType: Collection<Message> at 0", "INS SimpleName: MessageQueueException to TagElement: @throws at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: peekMessages to MethodDeclaration at 2", "INS TagElement: @throws to Javadoc at 3", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS MethodDeclaration to TypeDeclaration: interface at 4", "INS SimpleName: Message to SimpleType: Message at 0", "INS SimpleType: Message to ParameterizedType: Collection<Message> at 1", "INS SimpleName: Collection to SimpleType: Collection at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 7", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS SimpleType: MessageQueueException to MethodDeclaration at 4", "INS TextElement: Acknowledge the message as a poison message.  This will put the message into to TagElement at 0", "INS TextElement: a poison queue so it is persisted but does not interfere with the active queue. to TagElement at 1", "INS SimpleName: Message to SimpleType: Message at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: message to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: message to SingleVariableDeclaration at 1", "INS SimpleType: Message to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: interface at 7", "INS SimpleName: ackPoisonMessage to MethodDeclaration at 2", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: itemsToRead to SingleVariableDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS TagElement: @param to Javadoc at 1", "operations": ["INS TagElement: @param to Javadoc at 1", "INS SimpleName: itemsToRead to TagElement: @param at 0"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @param to Javadoc at 1"]}, {"root": "UPDATE from Acquire N items from the queue.  Each item must be released to Acquire up to N items from the queue.  Each item must be released by calling ackMessage.", "operations": ["UPD TextElement: Acquire N items from the queue.  Each item must be released from Acquire N items from the queue.  Each item must be released to Acquire up to N items from the queue.  Each item must be released by calling ackMessage."]}]}}, {"MessageConsumer_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(142) at 2", "Insert QualifiedName: java.util.concurrent.TimeUnit(4) into ImportDeclaration(5) at 0", "Insert MethodDeclaration(71) into TypeDeclaration: interface(141) at 3", "Insert MethodDeclaration(91) into TypeDeclaration: interface(141) at 4", "Insert MethodDeclaration(140) into TypeDeclaration: interface(141) at 7", "Insert SingleVariableDeclaration(31) into MethodDeclaration(38) at 3", "Insert Javadoc(48) into MethodDeclaration(71) at 0", "Insert ParameterizedType: Collection<Message>(53) into MethodDeclaration(71) at 1", "Insert SimpleName: readMessages(54) into MethodDeclaration(71) at 2", "Insert SingleVariableDeclaration(57) into MethodDeclaration(71) at 3", "Insert SingleVariableDeclaration(60) into MethodDeclaration(71) at 4", "Insert SingleVariableDeclaration(64) into MethodDeclaration(71) at 5", "Insert SimpleType: MessageQueueException(66) into MethodDeclaration(71) at 6", "Insert SimpleType: BusyLockException(68) into MethodDeclaration(71) at 7", "Insert SimpleType: InterruptedException(70) into MethodDeclaration(71) at 8", "Insert Javadoc(79) into MethodDeclaration(91) at 0", "Insert ParameterizedType: Collection<Message>(84) into MethodDeclaration(91) at 1", "Insert SimpleName: peekMessages(85) into MethodDeclaration(91) at 2", "Move SingleVariableDeclaration(29) into MethodDeclaration(91) at 3", "Insert SimpleType: MessageQueueException(90) into MethodDeclaration(91) at 4", "Insert Javadoc(131) into MethodDeclaration(140) at 0", "Insert PrimitiveType: void(132) into MethodDeclaration(140) at 1", "Insert SimpleName: ackPoisonMessage(133) into MethodDeclaration(140) at 2", "Insert SingleVariableDeclaration(137) into MethodDeclaration(140) at 3", "Insert SimpleType: MessageQueueException(139) into MethodDeclaration(140) at 4", "Insert TagElement: @param(14) into Javadoc(22) at 1", "Insert PrimitiveType: int(29) into SingleVariableDeclaration(31) at 0", "Insert SimpleName: itemsToRead(30) into SingleVariableDeclaration(31) at 1", "Insert TagElement(40) into Javadoc(48) at 0", "Insert TagElement: @param(42) into Javadoc(48) at 1", "Insert TagElement: @param(44) into Javadoc(48) at 2", "Insert TagElement: @param(46) into Javadoc(48) at 3", "Insert TagElement: @return(47) into Javadoc(48) at 4", "Insert SimpleType: Collection(50) into ParameterizedType: Collection<Message>(53) at 0", "Insert SimpleType: Message(52) into ParameterizedType: Collection<Message>(53) at 1", "Insert PrimitiveType: int(55) into SingleVariableDeclaration(57) at 0", "Insert SimpleName: itemsToRead(56) into SingleVariableDeclaration(57) at 1", "Insert PrimitiveType: long(58) into SingleVariableDeclaration(60) at 0", "Insert SimpleName: timeout(59) into SingleVariableDeclaration(60) at 1", "Insert SimpleType: TimeUnit(62) into SingleVariableDeclaration(64) at 0", "Insert SimpleName: units(63) into SingleVariableDeclaration(64) at 1", "Insert SimpleName: MessageQueueException(65) into SimpleType: MessageQueueException(66) at 0", "Insert SimpleName: BusyLockException(67) into SimpleType: BusyLockException(68) at 0", "Insert SimpleName: InterruptedException(69) into SimpleType: InterruptedException(70) at 0", "Insert TagElement(73) into Javadoc(79) at 0", "Move TagElement: @param(12) into Javadoc(79) at 1", "Insert TagElement: @return(76) into Javadoc(79) at 2", "Insert TagElement: @throws(78) into Javadoc(79) at 3", "Insert SimpleType: Collection(81) into ParameterizedType: Collection<Message>(84) at 0", "Insert SimpleType: Message(83) into ParameterizedType: Collection<Message>(84) at 1", "Insert SimpleName: MessageQueueException(89) into SimpleType: MessageQueueException(90) at 0", "Insert TagElement(128) into Javadoc(131) at 0", "Insert TagElement: @param(130) into Javadoc(131) at 1", "Insert SimpleType: Message(135) into SingleVariableDeclaration(137) at 0", "Insert SimpleName: message(136) into SingleVariableDeclaration(137) at 1", "Insert SimpleName: MessageQueueException(138) into SimpleType: MessageQueueException(139) at 0", "Update TextElement: Acquire N items from the queue.  Each item must be released(8) to Acquire up to N items from the queue.  Each item must be released by calling ackMessage.", "Insert SimpleName: itemsToRead(13) into TagElement: @param(14) at 0", "Insert TextElement: Acquire up to N items from the queue.  Each item must be released by calling ackMessage.(39) into TagElement(40) at 0", "Insert SimpleName: itemsToRead(41) into TagElement: @param(42) at 0", "Insert SimpleName: timeout(43) into TagElement: @param(44) at 0", "Insert SimpleName: units(45) into TagElement: @param(46) at 0", "Insert SimpleName: Collection(49) into SimpleType: Collection(50) at 0", "Insert SimpleName: Message(51) into SimpleType: Message(52) at 0", "Insert SimpleName: TimeUnit(61) into SimpleType: TimeUnit(62) at 0", "Insert TextElement: Peek into messages from the queue.  The queue state is not altered by this operation.(72) into TagElement(73) at 0", "Insert SimpleName: MessageQueueException(77) into TagElement: @throws(78) at 0", "Insert SimpleName: Collection(80) into SimpleType: Collection(81) at 0", "Insert SimpleName: Message(82) into SimpleType: Message(83) at 0", "Insert TextElement: Acknowledge the message as a poison message.  This will put the message into(126) into TagElement(128) at 0", "Insert TextElement: a poison queue so it is persisted but does not interfere with the active queue.(127) into TagElement(128) at 1", "Insert SimpleName: message(129) into TagElement: @param(130) at 0", "Insert SimpleName: Message(134) into SimpleType: Message(135) at 0"]}}, {"MessageProducer_cluster": {"actions": [{"root": "UPDATE from UUID to String", "operations": ["UPD SimpleName: UUID from UUID to String", "UPD SimpleType: UUID from UUID to String"]}, {"root": "INS SimpleType: SendMessageResponse to MethodDeclaration at 1", "operations": ["INS SimpleType: SendMessageResponse to MethodDeclaration at 1"]}, {"root": "UPDATE from Message to SendMessageResponse", "operations": ["UPD SimpleName: Message from Message to SendMessageResponse"]}, {"root": "MOVE from SimpleType: SendMessageResponse", "operations": ["MOV SimpleName: Message to SimpleType: SendMessageResponse at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Map"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.UUID", "DEL ImportDeclaration"]}, {"root": "DEL ParameterizedType: Map<Message,UUID>", "operations": ["DEL SimpleName: Map", "DEL ParameterizedType: Map<Message,UUID>", "DEL SimpleType: UUID", "DEL SimpleType: Message", "DEL SimpleType: Map", "DEL SimpleName: UUID"]}]}}, {"MessageProducer_diff": {"operations": ["Update SimpleType: UUID(20) to String", "Insert SimpleType: SendMessageResponse(35) into MethodDeclaration(46) at 1", "Update SimpleName: UUID(19) to String", "Update SimpleName: Message(40) to SendMessageResponse", "Move SimpleName: Message(40) into SimpleType: SendMessageResponse(35) at 0", "Delete QualifiedName: java.util.Map(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.util.UUID(6)", "Delete ImportDeclaration(7)", "Delete SimpleName: Map(38)", "Delete SimpleType: Map(39)", "Delete SimpleType: Message(41)", "Delete SimpleName: UUID(42)", "Delete SimpleType: UUID(43)", "Delete ParameterizedType: Map<Message,UUID>(44)"]}}, {"MessageQueue_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: java.util.Collection to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 5", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TagElement: @throws to Javadoc at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: MessageQueueExcewption to TagElement: @throws at 0", "INS SimpleName: createStorage to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: interface at 5", "INS PrimitiveType: void to MethodDeclaration at 1", "INS TextElement: Create the underlying storage to TagElement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 6", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleType: MessageQueueException to MethodDeclaration at 3", "INS TagElement to Javadoc at 0", "INS MethodDeclaration to TypeDeclaration: interface at 6", "INS TextElement: Destroy the storage associated with this column family to TagElement at 0", "INS SimpleName: dropStorage to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 8", "operations": ["INS TagElement: @throws to Javadoc at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleType: MessageQueueException to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: interface at 8", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: deleteQueue to MethodDeclaration at 2", "INS TextElement: Deletes all the rows for this queue.  This will not  to TagElement at 0", "INS SimpleName: MessageQueueException to TagElement: @throws at 0", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: delete any 'key' columns' to TagElement at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 9", "operations": ["INS SimpleName: messageId to TagElement: @param at 0", "INS TagElement: @return to Javadoc at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS TextElement: Read a specific message from the queue.  The message isn't modified or removed from the queue. to TagElement at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: MessageQueueException to MethodDeclaration at 4", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: Message to SimpleType: Message at 0", "INS MethodDeclaration to TypeDeclaration: interface at 9", "INS SimpleType: Message to MethodDeclaration at 1", "INS SimpleName: messageId to SingleVariableDeclaration at 1", "INS TagElement: @param to Javadoc at 1", "INS TagElement: @throws to Javadoc at 3", "INS SimpleName: MessageQueueException to TagElement: @throws at 0", "INS TextElement:  Message id returned from MessageProducer.sendMessage to TagElement: @param at 1", "INS SimpleName: readMessage to MethodDeclaration at 2", "INS TagElement to Javadoc at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 10", "operations": ["INS SimpleType: Message to MethodDeclaration at 1", "INS SimpleName: message to TagElement: @param at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: MessageQueueException to MethodDeclaration at 4", "INS TagElement: @throws to Javadoc at 3", "INS TagElement: @return to Javadoc at 2", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: MessageQueueException to TagElement: @throws at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS TextElement:  Message id returned from MessageProducer.sendMessage to TagElement: @param at 1", "INS SimpleName: Message to SimpleType: Message at 0", "INS TextElement: This operation will require a lookup of key to messageId to TagElement at 1", "INS TextElement: Read a specific message from the queue.  The message isn't modified or removed from the queue. to TagElement at 0", "INS SimpleName: readMessageByKey to MethodDeclaration at 2", "INS TagElement to Javadoc at 0", "INS MethodDeclaration to TypeDeclaration: interface at 10", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: key to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 11", "operations": ["INS PrimitiveType: void to MethodDeclaration at 1", "INS TagElement to Javadoc at 0", "INS SimpleType: MessageQueueException to MethodDeclaration at 4", "INS SimpleName: deleteMessage to MethodDeclaration at 2", "INS TextElement: Delete a specific message from the queue.   to TagElement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: messageId to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: message to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: MessageQueueException to TagElement: @throws at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @throws to Javadoc at 2", "INS MethodDeclaration to TypeDeclaration: interface at 11"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 12", "operations": ["INS TagElement to Javadoc at 0", "INS SimpleName: deleteMessageByKey to MethodDeclaration at 2", "INS TagElement: @throws to Javadoc at 3", "INS MethodDeclaration to TypeDeclaration: interface at 12", "INS Javadoc to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS TextElement: prior to deleting the message  to TagElement at 1", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleName: key to TagElement: @param at 0", "INS TagElement: @return to Javadoc at 2", "INS SimpleType: MessageQueueException to MethodDeclaration at 4", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS TextElement: Delete a message using the specified key.  This operation will require a lookup of key to messageId to TagElement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS TextElement:  true if any items were deleted to TagElement: @return at 0", "INS SimpleName: key to SingleVariableDeclaration at 1", "INS SimpleName: MessageQueueException to TagElement: @throws at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 13", "operations": ["INS TextElement: Delete a set of messages to TagElement at 0", "INS SimpleType: String to ParameterizedType: Collection<String> at 1", "INS SimpleName: messageIds to SingleVariableDeclaration at 1", "INS ParameterizedType: Collection<String> to SingleVariableDeclaration at 0", "INS SimpleType: MessageQueueException to MethodDeclaration at 4", "INS TagElement to Javadoc at 0", "INS SimpleName: String to SimpleType: String at 0", "INS TagElement: @throws to Javadoc at 2", "INS MethodDeclaration to TypeDeclaration: interface at 13", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: MessageQueueException to TagElement: @throws at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleType: Collection to ParameterizedType: Collection<String> at 0", "INS SimpleName: messageIds to TagElement: @param at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleName: deleteMessages to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS TagElement: @param to Javadoc at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: MessageQueueException to MethodDeclaration at 3"]}, {"root": "INS SimpleType: MessageQueueException to MethodDeclaration at 3", "operations": ["INS SimpleType: MessageQueueException to MethodDeclaration at 3", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @throws to Javadoc at 1"]}, {"root": "INS TagElement: @throws to Javadoc at 1", "operations": ["INS TagElement: @throws to Javadoc at 1", "INS SimpleName: MessageQueueException to TagElement: @throws at 0"]}, {"root": "UPDATE from Create the underlying storage for this queue to Create any metadata in the storage necessary for the queue", "operations": ["UPD TextElement: Create the underlying storage for this queue from Create the underlying storage for this queue to Create any metadata in the storage necessary for the queue"]}]}}, {"MessageQueue_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(226) at 1", "Insert QualifiedName: java.util.Collection(2) into ImportDeclaration(3) at 0", "Insert MethodDeclaration(54) into TypeDeclaration: interface(225) at 5", "Insert MethodDeclaration(64) into TypeDeclaration: interface(225) at 6", "Insert MethodDeclaration(85) into TypeDeclaration: interface(225) at 8", "Insert MethodDeclaration(104) into TypeDeclaration: interface(225) at 9", "Insert MethodDeclaration(124) into TypeDeclaration: interface(225) at 10", "Insert MethodDeclaration(140) into TypeDeclaration: interface(225) at 11", "Insert MethodDeclaration(159) into TypeDeclaration: interface(225) at 12", "Insert MethodDeclaration(178) into TypeDeclaration: interface(225) at 13", "Insert Javadoc(49) into MethodDeclaration(54) at 0", "Insert PrimitiveType: void(50) into MethodDeclaration(54) at 1", "Insert SimpleName: createStorage(51) into MethodDeclaration(54) at 2", "Move SimpleType: MessageQueueException(51) into MethodDeclaration(54) at 3", "Insert Javadoc(59) into MethodDeclaration(64) at 0", "Insert PrimitiveType: void(60) into MethodDeclaration(64) at 1", "Insert SimpleName: dropStorage(61) into MethodDeclaration(64) at 2", "Insert SimpleType: MessageQueueException(63) into MethodDeclaration(64) at 3", "Insert SimpleType: MessageQueueException(73) into MethodDeclaration(74) at 3", "Insert Javadoc(80) into MethodDeclaration(85) at 0", "Insert PrimitiveType: void(81) into MethodDeclaration(85) at 1", "Insert SimpleName: deleteQueue(82) into MethodDeclaration(85) at 2", "Insert SimpleType: MessageQueueException(84) into MethodDeclaration(85) at 3", "Insert Javadoc(94) into MethodDeclaration(104) at 0", "Insert SimpleType: Message(96) into MethodDeclaration(104) at 1", "Insert SimpleName: readMessage(97) into MethodDeclaration(104) at 2", "Insert SingleVariableDeclaration(101) into MethodDeclaration(104) at 3", "Insert SimpleType: MessageQueueException(103) into MethodDeclaration(104) at 4", "Insert Javadoc(114) into MethodDeclaration(124) at 0", "Insert SimpleType: Message(116) into MethodDeclaration(124) at 1", "Insert SimpleName: readMessageByKey(117) into MethodDeclaration(124) at 2", "Insert SingleVariableDeclaration(121) into MethodDeclaration(124) at 3", "Insert SimpleType: MessageQueueException(123) into MethodDeclaration(124) at 4", "Insert Javadoc(131) into MethodDeclaration(140) at 0", "Insert PrimitiveType: void(132) into MethodDeclaration(140) at 1", "Insert SimpleName: deleteMessage(133) into MethodDeclaration(140) at 2", "Insert SingleVariableDeclaration(137) into MethodDeclaration(140) at 3", "Insert SimpleType: MessageQueueException(139) into MethodDeclaration(140) at 4", "Insert Javadoc(150) into MethodDeclaration(159) at 0", "Insert PrimitiveType: boolean(151) into MethodDeclaration(159) at 1", "Insert SimpleName: deleteMessageByKey(152) into MethodDeclaration(159) at 2", "Insert SingleVariableDeclaration(156) into MethodDeclaration(159) at 3", "Insert SimpleType: MessageQueueException(158) into MethodDeclaration(159) at 4", "Insert Javadoc(166) into MethodDeclaration(178) at 0", "Insert PrimitiveType: void(167) into MethodDeclaration(178) at 1", "Insert SimpleName: deleteMessages(168) into MethodDeclaration(178) at 2", "Insert SingleVariableDeclaration(175) into MethodDeclaration(178) at 3", "Insert SimpleType: MessageQueueException(177) into MethodDeclaration(178) at 4", "Insert TagElement(46) into Javadoc(49) at 0", "Insert TagElement: @throws(48) into Javadoc(49) at 1", "Insert TagElement(56) into Javadoc(59) at 0", "Move TagElement: @throws(46) into Javadoc(59) at 1", "Insert SimpleName: MessageQueueException(62) into SimpleType: MessageQueueException(63) at 0", "Insert TagElement: @throws(68) into Javadoc(69) at 1", "Insert SimpleName: MessageQueueException(72) into SimpleType: MessageQueueException(73) at 0", "Insert TagElement(77) into Javadoc(80) at 0", "Insert TagElement: @throws(79) into Javadoc(80) at 1", "Insert SimpleName: MessageQueueException(83) into SimpleType: MessageQueueException(84) at 0", "Insert TagElement(87) into Javadoc(94) at 0", "Insert TagElement: @param(90) into Javadoc(94) at 1", "Insert TagElement: @return(91) into Javadoc(94) at 2", "Insert TagElement: @throws(93) into Javadoc(94) at 3", "Insert SimpleName: Message(95) into SimpleType: Message(96) at 0", "Insert SimpleType: String(99) into SingleVariableDeclaration(101) at 0", "Insert SimpleName: messageId(100) into SingleVariableDeclaration(101) at 1", "Insert SimpleName: MessageQueueException(102) into SimpleType: MessageQueueException(103) at 0", "Insert TagElement(107) into Javadoc(114) at 0", "Insert TagElement: @param(110) into Javadoc(114) at 1", "Insert TagElement: @return(111) into Javadoc(114) at 2", "Insert TagElement: @throws(113) into Javadoc(114) at 3", "Insert SimpleName: Message(115) into SimpleType: Message(116) at 0", "Insert SimpleType: String(119) into SingleVariableDeclaration(121) at 0", "Insert SimpleName: key(120) into SingleVariableDeclaration(121) at 1", "Insert SimpleName: MessageQueueException(122) into SimpleType: MessageQueueException(123) at 0", "Insert TagElement(126) into Javadoc(131) at 0", "Insert TagElement: @param(128) into Javadoc(131) at 1", "Insert TagElement: @throws(130) into Javadoc(131) at 2", "Insert SimpleType: String(135) into SingleVariableDeclaration(137) at 0", "Insert SimpleName: messageId(136) into SingleVariableDeclaration(137) at 1", "Insert SimpleName: MessageQueueException(138) into SimpleType: MessageQueueException(139) at 0", "Insert TagElement(143) into Javadoc(150) at 0", "Insert TagElement: @param(145) into Javadoc(150) at 1", "Insert TagElement: @return(147) into Javadoc(150) at 2", "Insert TagElement: @throws(149) into Javadoc(150) at 3", "Insert SimpleType: String(154) into SingleVariableDeclaration(156) at 0", "Insert SimpleName: key(155) into SingleVariableDeclaration(156) at 1", "Insert SimpleName: MessageQueueException(157) into SimpleType: MessageQueueException(158) at 0", "Insert TagElement(161) into Javadoc(166) at 0", "Insert TagElement: @param(163) into Javadoc(166) at 1", "Insert TagElement: @throws(165) into Javadoc(166) at 2", "Insert ParameterizedType: Collection<String>(173) into SingleVariableDeclaration(175) at 0", "Insert SimpleName: messageIds(174) into SingleVariableDeclaration(175) at 1", "Insert SimpleName: MessageQueueException(176) into SimpleType: MessageQueueException(177) at 0", "Insert TextElement: Create the underlying storage(45) into TagElement(46) at 0", "Insert SimpleName: MessageQueueExcewption(47) into TagElement: @throws(48) at 0", "Insert TextElement: Destroy the storage associated with this column family(55) into TagElement(56) at 0", "Update TextElement: Create the underlying storage for this queue(43) to Create any metadata in the storage necessary for the queue", "Insert SimpleName: MessageQueueException(67) into TagElement: @throws(68) at 0", "Insert TextElement: Deletes all the rows for this queue.  This will not (75) into TagElement(77) at 0", "Insert TextElement: delete any 'key' columns'(76) into TagElement(77) at 1", "Insert SimpleName: MessageQueueException(78) into TagElement: @throws(79) at 0", "Insert TextElement: Read a specific message from the queue.  The message isn't modified or removed from the queue.(86) into TagElement(87) at 0", "Insert SimpleName: messageId(88) into TagElement: @param(90) at 0", "Insert TextElement:  Message id returned from MessageProducer.sendMessage(89) into TagElement: @param(90) at 1", "Insert SimpleName: MessageQueueException(92) into TagElement: @throws(93) at 0", "Insert SimpleName: String(98) into SimpleType: String(99) at 0", "Insert TextElement: Read a specific message from the queue.  The message isn't modified or removed from the queue.(105) into TagElement(107) at 0", "Insert TextElement: This operation will require a lookup of key to messageId(106) into TagElement(107) at 1", "Insert SimpleName: message(108) into TagElement: @param(110) at 0", "Insert TextElement:  Message id returned from MessageProducer.sendMessage(109) into TagElement: @param(110) at 1", "Insert SimpleName: MessageQueueException(112) into TagElement: @throws(113) at 0", "Insert SimpleName: String(118) into SimpleType: String(119) at 0", "Insert TextElement: Delete a specific message from the queue.  (125) into TagElement(126) at 0", "Insert SimpleName: message(127) into TagElement: @param(128) at 0", "Insert SimpleName: MessageQueueException(129) into TagElement: @throws(130) at 0", "Insert SimpleName: String(134) into SimpleType: String(135) at 0", "Insert TextElement: Delete a message using the specified key.  This operation will require a lookup of key to messageId(141) into TagElement(143) at 0", "Insert TextElement: prior to deleting the message (142) into TagElement(143) at 1", "Insert SimpleName: key(144) into TagElement: @param(145) at 0", "Insert TextElement:  true if any items were deleted(146) into TagElement: @return(147) at 0", "Insert SimpleName: MessageQueueException(148) into TagElement: @throws(149) at 0", "Insert SimpleName: String(153) into SimpleType: String(154) at 0", "Insert TextElement: Delete a set of messages(160) into TagElement(161) at 0", "Insert SimpleName: messageIds(162) into TagElement: @param(163) at 0", "Insert SimpleName: MessageQueueException(164) into TagElement: @throws(165) at 0", "Insert SimpleType: Collection(170) into ParameterizedType: Collection<String>(173) at 0", "Insert SimpleType: String(172) into ParameterizedType: Collection<String>(173) at 1", "Insert SimpleName: Collection(169) into SimpleType: Collection(170) at 0", "Insert SimpleName: String(171) into SimpleType: String(172) at 0"]}}, {"MessageQueueEntry_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: java.util.concurrent.TimeUnit to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: org.apache.commons.lang.StringUtils to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV FieldDeclaration to TypeDeclaration: class at 2", "MOV FieldDeclaration to TypeDeclaration: class at 3", "MOV FieldDeclaration to TypeDeclaration: class at 4"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 2", "operations": ["INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: static to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 2", "INS Modifier: final to FieldDeclaration at 2", "INS StringLiteral: \":\" to VariableDeclarationFragment at 1", "INS SimpleType: String to FieldDeclaration at 3", "INS SimpleName: ID_DELIMITER to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS SimpleName: Byte to SimpleType: Byte at 0", "INS Javadoc to FieldDeclaration at 0", "INS SimpleType: Byte to FieldDeclaration at 3", "INS Modifier: private to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: id to InfixExpression: + at 1", "INS IfStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: StringUtils to MethodInvocation at 0", "INS SimpleType: RuntimeException to ClassInstanceCreation at 0", "INS SimpleName: fromString to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: state to Assignment: = at 0", "INS SimpleName: RuntimeException to SimpleType: RuntimeException at 0", "INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: parts to ArrayAccess at 0", "INS SimpleName: MessageQueueEntry to MethodDeclaration at 1", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: type to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: split to MethodInvocation at 1", "INS SimpleName: parseByte to MethodInvocation at 1", "INS ArrayAccess to MethodInvocation at 2", "INS SimpleName: UUID to MethodInvocation at 0", "INS NumberLiteral: 2 to ArrayAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS ThrowStatement to IfStatement at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS StringLiteral: \"Invalid message ID.  Expection <type>:<priority>:<timestamp>:<state> but got \" to InfixExpression: + at 0", "INS SimpleName: timestamp to Assignment: = at 0", "INS Dimension to ArrayType: String[] at 1", "INS SimpleName: Byte to MethodInvocation at 0", "INS ExpressionStatement to Block at 4", "INS ArrayAccess to MethodInvocation at 2", "INS SimpleName: parseByte to MethodInvocation at 1", "INS NumberLiteral: 3 to ArrayAccess at 1", "INS SimpleName: priority to Assignment: = at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: id to MethodInvocation at 2", "INS SimpleName: parseByte to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 5", "INS ArrayAccess to MethodInvocation at 2", "INS ArrayAccess to MethodInvocation at 2", "INS Modifier: public to MethodDeclaration at 0", "INS ArrayType: String[] to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: parts to VariableDeclarationFragment at 0", "INS QualifiedName: parts.length to InfixExpression: != at 0", "INS ExpressionStatement to Block at 3", "INS NumberLiteral: 4 to InfixExpression: != at 1", "INS SimpleName: parts to ArrayAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to MethodDeclaration at 3", "INS SimpleName: Byte to MethodInvocation at 0", "INS SimpleName: id to SingleVariableDeclaration at 1", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: Byte to MethodInvocation at 0", "INS SimpleName: parts to ArrayAccess at 0", "INS NumberLiteral: 1 to ArrayAccess at 1", "INS SimpleName: parts to ArrayAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS SimpleName: ID_DELIMITER to MethodInvocation at 3", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 17", "INS MethodInvocation to ReturnStatement at 0", "INS PrimitiveType: long to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: convert to MethodInvocation at 1", "INS SimpleName: timestamp to MethodInvocation at 2", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: units to MethodInvocation at 0", "INS SimpleType: TimeUnit to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: TimeUUIDUtils to MethodInvocation at 0", "INS SimpleName: getTimetsamp to MethodDeclaration at 2", "INS QualifiedName: TimeUnit.MICROSECONDS to MethodInvocation at 3", "INS Block to MethodDeclaration at 4", "INS SimpleName: units to SingleVariableDeclaration at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getMicrosTimeFromUUID to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: state to MethodInvocation at 2", "INS SimpleName: ID_DELIMITER to MethodInvocation at 2", "INS SimpleName: timestamp to MethodInvocation at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: priority to MethodInvocation at 2", "INS SimpleType: StringBuilder to ClassInstanceCreation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleType: String to MethodDeclaration at 1", "INS MethodInvocation to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: StringBuilder to SimpleType: StringBuilder at 0", "INS SimpleName: append to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 0", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS Block to MethodDeclaration at 3", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: getMessageId to MethodDeclaration at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: type to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: ID_DELIMITER to MethodInvocation at 2", "INS SimpleName: ID_DELIMITER to MethodInvocation at 2", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: toString to MethodInvocation at 1"]}, {"root": "UPDATE from Short to Byte", "operations": ["UPD SimpleType: Short from Short to Byte", "UPD SimpleType: Short from Short to Byte", "UPD SimpleName: Short from Short to Byte", "UPD SimpleType: Short from Short to Byte", "UPD SimpleName: Short from Short to Byte", "UPD SimpleType: Short from Short to Byte", "UPD SimpleType: Short from Short to Byte", "UPD SimpleName: Short from Short to Byte", "UPD SimpleName: Short from Short to Byte", "UPD SimpleName: Short from Short to Byte"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 4", "MOV NormalAnnotation to FieldDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: MessageQueueEntry to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: MessageQueueEntry to MethodDeclaration at 2"]}, {"root": "UPDATE from short to byte", "operations": ["UPD PrimitiveType: short from short to byte", "UPD PrimitiveType: short from short to byte", "UPD PrimitiveType: short from short to byte", "UPD PrimitiveType: short from short to byte", "UPD PrimitiveType: short from short to byte", "UPD PrimitiveType: short from short to byte", "UPD PrimitiveType: short from short to byte", "UPD PrimitiveType: short from short to byte"]}, {"root": "UPDATE from Short to TimeUnit", "operations": ["UPD SimpleName: Short from Short to TimeUnit"]}, {"root": "MOVE from SimpleType: TimeUnit", "operations": ["MOV SimpleName: Short to SimpleType: TimeUnit at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: MessageQueueEntry to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: MessageQueueEntry to ClassInstanceCreation at 0"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Javadoc", "DEL FieldDeclaration", "DEL Modifier: private", "DEL SimpleType: Short"]}]}}, {"MessageQueueEntry_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(464) at 2", "Insert ImportDeclaration(7) into CompilationUnit(464) at 3", "Move FieldDeclaration(172) into TypeDeclaration: class(463) at 2", "Move FieldDeclaration(183) into TypeDeclaration: class(463) at 3", "Move FieldDeclaration(197) into TypeDeclaration: class(463) at 4", "Insert QualifiedName: java.util.concurrent.TimeUnit(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: org.apache.commons.lang.StringUtils(6) into ImportDeclaration(7) at 0", "Insert FieldDeclaration(22) into TypeDeclaration: class(463) at 2", "Insert FieldDeclaration(75) into TypeDeclaration: class(463) at 6", "Insert MethodDeclaration(146) into TypeDeclaration: class(463) at 8", "Insert MethodDeclaration(327) into TypeDeclaration: class(463) at 16", "Insert MethodDeclaration(441) into TypeDeclaration: class(463) at 23", "Insert Modifier: private(14) into FieldDeclaration(22) at 0", "Insert Modifier: static(15) into FieldDeclaration(22) at 1", "Insert Modifier: final(16) into FieldDeclaration(22) at 2", "Insert SimpleType: String(18) into FieldDeclaration(22) at 3", "Insert VariableDeclarationFragment(21) into FieldDeclaration(22) at 4", "Update SimpleType: Short(169) to Byte", "Update SimpleType: Short(180) to Byte", "Insert Javadoc(64) into FieldDeclaration(75) at 0", "Move NormalAnnotation(203) into FieldDeclaration(75) at 1", "Insert Modifier: private(70) into FieldDeclaration(75) at 2", "Insert SimpleType: Byte(72) into FieldDeclaration(75) at 3", "Move VariableDeclarationFragment(208) into FieldDeclaration(75) at 4", "Insert Modifier: public(80) into MethodDeclaration(146) at 0", "Insert SimpleName: MessageQueueEntry(81) into MethodDeclaration(146) at 1", "Insert SingleVariableDeclaration(85) into MethodDeclaration(146) at 2", "Insert Block(145) into MethodDeclaration(146) at 3", "Move SimpleType: MessageQueueEntry(117) into MethodDeclaration(246) at 2", "Move SimpleType: MessageQueueEntry(92) into MethodDeclaration(263) at 2", "Insert Modifier: public(310) into MethodDeclaration(327) at 0", "Insert PrimitiveType: long(311) into MethodDeclaration(327) at 1", "Insert SimpleName: getTimetsamp(312) into MethodDeclaration(327) at 2", "Insert SingleVariableDeclaration(316) into MethodDeclaration(327) at 3", "Insert Block(326) into MethodDeclaration(327) at 4", "Update PrimitiveType: short(243) to byte", "Insert Modifier: public(407) into MethodDeclaration(441) at 0", "Insert SimpleType: String(409) into MethodDeclaration(441) at 1", "Insert SimpleName: getMessageId(410) into MethodDeclaration(441) at 2", "Insert Block(440) into MethodDeclaration(441) at 3", "Insert SimpleName: String(17) into SimpleType: String(18) at 0", "Insert SimpleName: ID_DELIMITER(19) into VariableDeclarationFragment(21) at 0", "Insert StringLiteral: \":\"(20) into VariableDeclarationFragment(21) at 1", "Update SimpleName: Short(168) to Byte", "Update SimpleName: Short(179) to Byte", "Insert SimpleName: Byte(71) into SimpleType: Byte(72) at 0", "Insert SimpleType: String(83) into SingleVariableDeclaration(85) at 0", "Insert SimpleName: id(84) into SingleVariableDeclaration(85) at 1", "Insert VariableDeclarationStatement(97) into Block(145) at 0", "Insert IfStatement(108) into Block(145) at 1", "Insert ExpressionStatement(117) into Block(145) at 2", "Insert ExpressionStatement(126) into Block(145) at 3", "Insert ExpressionStatement(135) into Block(145) at 4", "Insert ExpressionStatement(144) into Block(145) at 5", "Update PrimitiveType: short(20) to byte", "Update PrimitiveType: short(136) to byte", "Insert SimpleType: TimeUnit(314) into SingleVariableDeclaration(316) at 0", "Insert SimpleName: units(315) into SingleVariableDeclaration(316) at 1", "Insert ReturnStatement(325) into Block(326) at 0", "Update SimpleType: Short(253) to Byte", "Update SimpleType: Short(283) to Byte", "Update SimpleType: Short(298) to Byte", "Insert SimpleName: String(408) into SimpleType: String(409) at 0", "Insert ReturnStatement(439) into Block(440) at 0", "Insert SimpleName: String(82) into SimpleType: String(83) at 0", "Insert ArrayType: String[](89) into VariableDeclarationStatement(97) at 0", "Insert VariableDeclarationFragment(96) into VariableDeclarationStatement(97) at 1", "Insert InfixExpression: !=(100) into IfStatement(108) at 0", "Insert ThrowStatement(107) into IfStatement(108) at 1", "Insert Assignment: =(116) into ExpressionStatement(117) at 0", "Insert Assignment: =(125) into ExpressionStatement(126) at 0", "Insert Assignment: =(134) into ExpressionStatement(135) at 0", "Insert Assignment: =(143) into ExpressionStatement(144) at 0", "Update SimpleName: Short(205) to TimeUnit", "Move SimpleName: Short(205) into SimpleType: TimeUnit(314) at 0", "Insert MethodInvocation(324) into ReturnStatement(325) at 0", "Update SimpleName: Short(252) to Byte", "Update SimpleName: Short(282) to Byte", "Update SimpleName: Short(297) to Byte", "Insert MethodInvocation(438) into ReturnStatement(439) at 0", "Insert SimpleType: String(87) into ArrayType: String[](89) at 0", "Insert Dimension(88) into ArrayType: String[](89) at 1", "Insert SimpleName: parts(90) into VariableDeclarationFragment(96) at 0", "Insert MethodInvocation(95) into VariableDeclarationFragment(96) at 1", "Insert QualifiedName: parts.length(98) into InfixExpression: !=(100) at 0", "Insert NumberLiteral: 4(99) into InfixExpression: !=(100) at 1", "Insert ClassInstanceCreation(106) into ThrowStatement(107) at 0", "Insert SimpleName: type(109) into Assignment: =(116) at 0", "Insert MethodInvocation(115) into Assignment: =(116) at 1", "Insert SimpleName: priority(118) into Assignment: =(125) at 0", "Insert MethodInvocation(124) into Assignment: =(125) at 1", "Insert SimpleName: timestamp(127) into Assignment: =(134) at 0", "Insert MethodInvocation(133) into Assignment: =(134) at 1", "Insert SimpleName: state(136) into Assignment: =(143) at 0", "Insert MethodInvocation(142) into Assignment: =(143) at 1", "Move SimpleType: MessageQueueEntry(120) into ClassInstanceCreation(243) at 0", "Move SimpleType: MessageQueueEntry(103) into ClassInstanceCreation(260) at 0", "Insert SimpleName: units(317) into MethodInvocation(324) at 0", "Insert SimpleName: convert(318) into MethodInvocation(324) at 1", "Insert MethodInvocation(322) into MethodInvocation(324) at 2", "Insert QualifiedName: TimeUnit.MICROSECONDS(323) into MethodInvocation(324) at 3", "Insert MethodInvocation(436) into MethodInvocation(438) at 0", "Insert SimpleName: toString(437) into MethodInvocation(438) at 1", "Insert SimpleName: String(86) into SimpleType: String(87) at 0", "Insert SimpleName: StringUtils(91) into MethodInvocation(95) at 0", "Insert SimpleName: split(92) into MethodInvocation(95) at 1", "Insert SimpleName: id(93) into MethodInvocation(95) at 2", "Insert SimpleName: ID_DELIMITER(94) into MethodInvocation(95) at 3", "Insert SimpleType: RuntimeException(102) into ClassInstanceCreation(106) at 0", "Insert InfixExpression: +(105) into ClassInstanceCreation(106) at 1", "Insert SimpleName: Byte(110) into MethodInvocation(115) at 0", "Insert SimpleName: parseByte(111) into MethodInvocation(115) at 1", "Insert ArrayAccess(114) into MethodInvocation(115) at 2", "Insert SimpleName: Byte(119) into MethodInvocation(124) at 0", "Insert SimpleName: parseByte(120) into MethodInvocation(124) at 1", "Insert ArrayAccess(123) into MethodInvocation(124) at 2", "Insert SimpleName: UUID(128) into MethodInvocation(133) at 0", "Insert SimpleName: fromString(129) into MethodInvocation(133) at 1", "Insert ArrayAccess(132) into MethodInvocation(133) at 2", "Insert SimpleName: Byte(137) into MethodInvocation(142) at 0", "Insert SimpleName: parseByte(138) into MethodInvocation(142) at 1", "Insert ArrayAccess(141) into MethodInvocation(142) at 2", "Update PrimitiveType: short(35) to byte", "Update PrimitiveType: short(57) to byte", "Update PrimitiveType: short(78) to byte", "Update PrimitiveType: short(105) to byte", "Update PrimitiveType: short(122) to byte", "Insert SimpleName: TimeUUIDUtils(319) into MethodInvocation(322) at 0", "Insert SimpleName: getMicrosTimeFromUUID(320) into MethodInvocation(322) at 1", "Insert SimpleName: timestamp(321) into MethodInvocation(322) at 2", "Insert MethodInvocation(433) into MethodInvocation(436) at 0", "Insert SimpleName: append(434) into MethodInvocation(436) at 1", "Insert SimpleName: state(435) into MethodInvocation(436) at 2", "Insert SimpleName: RuntimeException(101) into SimpleType: RuntimeException(102) at 0", "Insert StringLiteral: \"Invalid message ID.  Expection <type>:<priority>:<timestamp>:<state> but got \"(103) into InfixExpression: +(105) at 0", "Insert SimpleName: id(104) into InfixExpression: +(105) at 1", "Insert SimpleName: parts(112) into ArrayAccess(114) at 0", "Insert NumberLiteral: 0(113) into ArrayAccess(114) at 1", "Insert SimpleName: parts(121) into ArrayAccess(123) at 0", "Insert NumberLiteral: 1(122) into ArrayAccess(123) at 1", "Insert SimpleName: parts(130) into ArrayAccess(132) at 0", "Insert NumberLiteral: 2(131) into ArrayAccess(132) at 1", "Insert SimpleName: parts(139) into ArrayAccess(141) at 0", "Insert NumberLiteral: 3(140) into ArrayAccess(141) at 1", "Insert MethodInvocation(430) into MethodInvocation(433) at 0", "Insert SimpleName: append(431) into MethodInvocation(433) at 1", "Insert SimpleName: ID_DELIMITER(432) into MethodInvocation(433) at 2", "Insert MethodInvocation(425) into MethodInvocation(430) at 0", "Insert SimpleName: append(426) into MethodInvocation(430) at 1", "Insert MethodInvocation(429) into MethodInvocation(430) at 2", "Insert MethodInvocation(422) into MethodInvocation(425) at 0", "Insert SimpleName: append(423) into MethodInvocation(425) at 1", "Insert SimpleName: ID_DELIMITER(424) into MethodInvocation(425) at 2", "Insert SimpleName: timestamp(427) into MethodInvocation(429) at 0", "Insert SimpleName: toString(428) into MethodInvocation(429) at 1", "Insert MethodInvocation(419) into MethodInvocation(422) at 0", "Insert SimpleName: append(420) into MethodInvocation(422) at 1", "Insert SimpleName: priority(421) into MethodInvocation(422) at 2", "Insert MethodInvocation(416) into MethodInvocation(419) at 0", "Insert SimpleName: append(417) into MethodInvocation(419) at 1", "Insert SimpleName: ID_DELIMITER(418) into MethodInvocation(419) at 2", "Insert ClassInstanceCreation(413) into MethodInvocation(416) at 0", "Insert SimpleName: append(414) into MethodInvocation(416) at 1", "Insert SimpleName: type(415) into MethodInvocation(416) at 2", "Insert SimpleType: StringBuilder(412) into ClassInstanceCreation(413) at 0", "Insert SimpleName: StringBuilder(411) into SimpleType: StringBuilder(412) at 0", "Delete Javadoc(198)", "Delete Modifier: private(204)", "Delete SimpleType: Short(206)", "Delete FieldDeclaration(209)"]}}, {"MessageQueueSettings_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: java.util.concurrent.TimeUnit to ImportDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 2", "operations": ["INS SimpleName: Integer to SimpleType: Integer at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: DEFAULT_RETENTION_TIMEOUT to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 2", "INS Modifier: public to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleType: Integer to FieldDeclaration at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 3", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS Modifier: static to FieldDeclaration at 1", "INS PrimitiveType: int to FieldDeclaration at 3", "INS Modifier: public to FieldDeclaration at 0", "INS SimpleName: DEFAULT_SHARD_COUNT to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 4", "operations": ["INS Modifier: public to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: Long to SimpleType: Long at 0", "INS Modifier: final to FieldDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleType: Long to FieldDeclaration at 3", "INS SimpleName: DEFAULT_BUCKET_DURATION to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS NullLiteral to VariableDeclarationFragment at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 5", "operations": ["INS Modifier: static to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS PrimitiveType: int to FieldDeclaration at 3", "INS SimpleName: DEFAULT_BUCKET_COUNT to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 2", "INS Modifier: public to FieldDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS CastExpression to Assignment: = at 1", "INS SimpleType: Long to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: TimeUnit to SimpleType: TimeUnit at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: retentionTimeout to FieldAccess at 1", "INS SimpleName: retentionTimeout to SingleVariableDeclaration at 1", "INS SimpleName: units to MethodInvocation at 3", "INS SimpleName: setRetentionTimeout to MethodDeclaration at 2", "INS MethodInvocation to CastExpression at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: units to SingleVariableDeclaration at 1", "INS SimpleName: convert to MethodInvocation at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: retentionTimeout to MethodInvocation at 2", "INS FieldAccess to Assignment: = at 0", "INS PrimitiveType: int to CastExpression at 0", "INS SimpleName: Long to SimpleType: Long at 0", "INS Block to MethodDeclaration at 5", "INS SimpleType: TimeUnit to SingleVariableDeclaration at 0", "INS QualifiedName: TimeUnit.SECONDS to MethodInvocation at 0"]}, {"root": "INS SimpleType: Long to FieldDeclaration at 1", "operations": ["INS SimpleName: Long to SimpleType: Long at 0", "INS SimpleType: Long to FieldDeclaration at 1"]}, {"root": "INS SimpleType: Integer to FieldDeclaration at 1", "operations": ["INS SimpleType: Integer to FieldDeclaration at 1", "INS SimpleName: Integer to SimpleType: Integer at 0"]}, {"root": "INS SimpleType: Long to MethodDeclaration at 1", "operations": ["INS SimpleName: Long to SimpleType: Long at 0", "INS SimpleType: Long to MethodDeclaration at 1"]}, {"root": "INS SimpleType: Integer to MethodDeclaration at 1", "operations": ["INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleType: Integer to MethodDeclaration at 1"]}, {"root": "UPDATE from getVisibilityTimeout to getRetentionTimeout", "operations": ["UPD SimpleName: getVisibilityTimeout from getVisibilityTimeout to getRetentionTimeout"]}, {"root": "UPDATE from setVisibilityTimeout to setRetentionTimeout", "operations": ["UPD SimpleName: setVisibilityTimeout from setVisibilityTimeout to setRetentionTimeout"]}, {"root": "INS SimpleName: DEFAULT_BUCKET_DURATION to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: DEFAULT_BUCKET_DURATION to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: DEFAULT_BUCKET_COUNT to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: DEFAULT_BUCKET_COUNT to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from visibilityTimeout to retentionTimeout", "operations": ["UPD SimpleName: visibilityTimeout from visibilityTimeout to retentionTimeout", "UPD SimpleName: visibilityTimeout from visibilityTimeout to retentionTimeout", "UPD SimpleName: visibilityTimeout from visibilityTimeout to retentionTimeout", "UPD SimpleName: visibilityTimeout from visibilityTimeout to retentionTimeout", "UPD SimpleName: visibilityTimeout from visibilityTimeout to retentionTimeout", "UPD SimpleName: visibilityTimeout from visibilityTimeout to retentionTimeout"]}, {"root": "INS SimpleName: DEFAULT_RETENTION_TIMEOUT to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: DEFAULT_RETENTION_TIMEOUT to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: DEFAULT_SHARD_COUNT to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: DEFAULT_SHARD_COUNT to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleType: Integer to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: Integer to SimpleType: Integer at 0"]}, {"root": "DEL PrimitiveType: long", "operations": ["DEL PrimitiveType: long"]}, {"root": "DEL QualifiedName: ShardedDistributedMessageQueue.DEFAULT_BUCKET_DURATION", "operations": ["DEL QualifiedName: ShardedDistributedMessageQueue.DEFAULT_BUCKET_DURATION"]}, {"root": "DEL QualifiedName: ShardedDistributedMessageQueue.DEFAULT_BUCKET_COUNT", "operations": ["DEL QualifiedName: ShardedDistributedMessageQueue.DEFAULT_BUCKET_COUNT"]}, {"root": "DEL PrimitiveType: long", "operations": ["DEL PrimitiveType: long"]}, {"root": "DEL QualifiedName: ShardedDistributedMessageQueue.DEFAULT_VISIBILITY_TIMEOUT", "operations": ["DEL QualifiedName: ShardedDistributedMessageQueue.DEFAULT_VISIBILITY_TIMEOUT"]}, {"root": "DEL QualifiedName: ShardedDistributedMessageQueue.DEFAULT_SHARD_COUNT", "operations": ["DEL QualifiedName: ShardedDistributedMessageQueue.DEFAULT_SHARD_COUNT"]}, {"root": "DEL PrimitiveType: long", "operations": ["DEL PrimitiveType: long"]}, {"root": "DEL PrimitiveType: long", "operations": ["DEL PrimitiveType: long"]}, {"root": "DEL PrimitiveType: long", "operations": ["DEL PrimitiveType: long"]}]}}, {"MessageQueueSettings_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(200) at 1", "Insert QualifiedName: java.util.concurrent.TimeUnit(2) into ImportDeclaration(3) at 0", "Insert FieldDeclaration(16) into TypeDeclaration: class(199) at 2", "Insert FieldDeclaration(24) into TypeDeclaration: class(199) at 3", "Insert FieldDeclaration(33) into TypeDeclaration: class(199) at 4", "Insert FieldDeclaration(41) into TypeDeclaration: class(199) at 5", "Insert MethodDeclaration(165) into TypeDeclaration: class(199) at 17", "Insert Modifier: public(8) into FieldDeclaration(16) at 0", "Insert Modifier: static(9) into FieldDeclaration(16) at 1", "Insert Modifier: final(10) into FieldDeclaration(16) at 2", "Insert SimpleType: Integer(12) into FieldDeclaration(16) at 3", "Insert VariableDeclarationFragment(15) into FieldDeclaration(16) at 4", "Insert Modifier: public(17) into FieldDeclaration(24) at 0", "Insert Modifier: static(18) into FieldDeclaration(24) at 1", "Insert Modifier: final(19) into FieldDeclaration(24) at 2", "Insert PrimitiveType: int(20) into FieldDeclaration(24) at 3", "Insert VariableDeclarationFragment(23) into FieldDeclaration(24) at 4", "Insert Modifier: public(25) into FieldDeclaration(33) at 0", "Insert Modifier: static(26) into FieldDeclaration(33) at 1", "Insert Modifier: final(27) into FieldDeclaration(33) at 2", "Insert SimpleType: Long(29) into FieldDeclaration(33) at 3", "Insert VariableDeclarationFragment(32) into FieldDeclaration(33) at 4", "Insert Modifier: public(34) into FieldDeclaration(41) at 0", "Insert Modifier: static(35) into FieldDeclaration(41) at 1", "Insert Modifier: final(36) into FieldDeclaration(41) at 2", "Insert PrimitiveType: int(37) into FieldDeclaration(41) at 3", "Insert VariableDeclarationFragment(40) into FieldDeclaration(41) at 4", "Insert SimpleType: Long(44) into FieldDeclaration(48) at 1", "Insert SimpleType: Integer(57) into FieldDeclaration(61) at 1", "Insert SimpleType: Long(70) into MethodDeclaration(75) at 1", "Insert SimpleType: Integer(85) into MethodDeclaration(90) at 1", "Update SimpleName: getVisibilityTimeout(46) to getRetentionTimeout", "Update SimpleName: setVisibilityTimeout(88) to setRetentionTimeout", "Insert Modifier: public(141) into MethodDeclaration(165) at 0", "Insert PrimitiveType: void(142) into MethodDeclaration(165) at 1", "Insert SimpleName: setRetentionTimeout(143) into MethodDeclaration(165) at 2", "Insert SingleVariableDeclaration(147) into MethodDeclaration(165) at 3", "Insert SingleVariableDeclaration(151) into MethodDeclaration(165) at 4", "Insert Block(164) into MethodDeclaration(165) at 5", "Insert SimpleName: Integer(11) into SimpleType: Integer(12) at 0", "Insert SimpleName: DEFAULT_RETENTION_TIMEOUT(13) into VariableDeclarationFragment(15) at 0", "Insert NullLiteral(14) into VariableDeclarationFragment(15) at 1", "Insert SimpleName: DEFAULT_SHARD_COUNT(21) into VariableDeclarationFragment(23) at 0", "Insert NumberLiteral: 1(22) into VariableDeclarationFragment(23) at 1", "Insert SimpleName: Long(28) into SimpleType: Long(29) at 0", "Insert SimpleName: DEFAULT_BUCKET_DURATION(30) into VariableDeclarationFragment(32) at 0", "Insert NullLiteral(31) into VariableDeclarationFragment(32) at 1", "Insert SimpleName: DEFAULT_BUCKET_COUNT(38) into VariableDeclarationFragment(40) at 0", "Insert NumberLiteral: 1(39) into VariableDeclarationFragment(40) at 1", "Insert SimpleName: Long(43) into SimpleType: Long(44) at 0", "Insert SimpleName: DEFAULT_BUCKET_DURATION(46) into VariableDeclarationFragment(47) at 1", "Insert SimpleName: DEFAULT_BUCKET_COUNT(52) into VariableDeclarationFragment(53) at 1", "Insert SimpleName: Integer(56) into SimpleType: Integer(57) at 0", "Update SimpleName: visibilityTimeout(20) to retentionTimeout", "Insert SimpleName: DEFAULT_RETENTION_TIMEOUT(59) into VariableDeclarationFragment(60) at 1", "Insert SimpleName: DEFAULT_SHARD_COUNT(65) into VariableDeclarationFragment(66) at 1", "Insert SimpleName: Long(69) into SimpleType: Long(70) at 0", "Insert SimpleName: Integer(84) into SimpleType: Integer(85) at 0", "Insert SimpleType: Integer(130) into SingleVariableDeclaration(132) at 0", "Update SimpleName: visibilityTimeout(90) to retentionTimeout", "Insert SimpleType: Long(145) into SingleVariableDeclaration(147) at 0", "Insert SimpleName: retentionTimeout(146) into SingleVariableDeclaration(147) at 1", "Insert SimpleType: TimeUnit(149) into SingleVariableDeclaration(151) at 0", "Insert SimpleName: units(150) into SingleVariableDeclaration(151) at 1", "Insert ExpressionStatement(163) into Block(164) at 0", "Update SimpleName: visibilityTimeout(47) to retentionTimeout", "Insert SimpleName: Integer(129) into SimpleType: Integer(130) at 0", "Insert SimpleName: Long(144) into SimpleType: Long(145) at 0", "Insert SimpleName: TimeUnit(148) into SimpleType: TimeUnit(149) at 0", "Insert Assignment: =(162) into ExpressionStatement(163) at 0", "Update SimpleName: visibilityTimeout(95) to retentionTimeout", "Insert FieldAccess(154) into Assignment: =(162) at 0", "Insert CastExpression(161) into Assignment: =(162) at 1", "Update SimpleName: visibilityTimeout(125) to retentionTimeout", "Update SimpleName: visibilityTimeout(93) to retentionTimeout", "Insert ThisExpression(152) into FieldAccess(154) at 0", "Insert SimpleName: retentionTimeout(153) into FieldAccess(154) at 1", "Insert PrimitiveType: int(155) into CastExpression(161) at 0", "Insert MethodInvocation(160) into CastExpression(161) at 1", "Insert QualifiedName: TimeUnit.SECONDS(156) into MethodInvocation(160) at 0", "Insert SimpleName: convert(157) into MethodInvocation(160) at 1", "Insert SimpleName: retentionTimeout(158) into MethodInvocation(160) at 2", "Insert SimpleName: units(159) into MethodInvocation(160) at 3", "Delete PrimitiveType: long(7)", "Delete QualifiedName: ShardedDistributedMessageQueue.DEFAULT_BUCKET_DURATION(9)", "Delete QualifiedName: ShardedDistributedMessageQueue.DEFAULT_BUCKET_COUNT(15)", "Delete PrimitiveType: long(19)", "Delete QualifiedName: ShardedDistributedMessageQueue.DEFAULT_VISIBILITY_TIMEOUT(21)", "Delete QualifiedName: ShardedDistributedMessageQueue.DEFAULT_SHARD_COUNT(27)", "Delete PrimitiveType: long(31)", "Delete PrimitiveType: long(45)", "Delete PrimitiveType: long(89)"]}}, {"ShardedDistributedMessageQueue_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: java.util.Set to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS QualifiedName: org.apache.commons.lang.StringUtils to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 14"]}, {"root": "INS ImportDeclaration to CompilationUnit at 17", "operations": ["INS ImportDeclaration to CompilationUnit at 17", "INS QualifiedName: org.slf4j.Logger to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS QualifiedName: org.slf4j.LoggerFactory to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 18"]}, {"root": "INS ImportDeclaration to CompilationUnit at 22", "operations": ["INS QualifiedName: com.google.common.collect.Iterables to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 22"]}, {"root": "INS ImportDeclaration to CompilationUnit at 26", "operations": ["INS ImportDeclaration to CompilationUnit at 26", "INS QualifiedName: com.google.common.collect.Sets to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 31", "operations": ["INS ImportDeclaration to CompilationUnit at 31", "INS QualifiedName: com.netflix.astyanax.connectionpool.exceptions.NotFoundException to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 37", "operations": ["INS QualifiedName: com.netflix.astyanax.model.Row to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 37"]}, {"root": "INS ImportDeclaration to CompilationUnit at 38", "operations": ["INS ImportDeclaration to CompilationUnit at 38", "INS QualifiedName: com.netflix.astyanax.model.Rows to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 40", "operations": ["INS ImportDeclaration to CompilationUnit at 40", "INS QualifiedName: com.netflix.astyanax.recipes.scheduler.Trigger to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 36", "MOV FieldDeclaration to TypeDeclaration: class at 20", "MOV FieldDeclaration to TypeDeclaration: class at 14"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 4", "operations": ["INS SimpleType: ShardedDistributedMessageQueue to TypeLiteral at 0", "INS Modifier: final to FieldDeclaration at 2", "INS Modifier: static to FieldDeclaration at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: ShardedDistributedMessageQueue to SimpleType: ShardedDistributedMessageQueue at 0", "INS SimpleName: LoggerFactory to MethodInvocation at 0", "INS SimpleType: Logger to FieldDeclaration at 3", "INS SimpleName: Logger to SimpleType: Logger at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: LOG to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS TypeLiteral to MethodInvocation at 2", "INS SimpleName: getLogger to MethodInvocation at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 25", "operations": ["INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleType: Integer to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 25", "INS Modifier: private to FieldDeclaration at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 33", "operations": ["INS SimpleType: Boolean to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: bPoisonQueueEnabled to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 33", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: DEFAULT_POISON_QUEUE_ENABLED to VariableDeclarationFragment at 1", "INS SimpleName: Boolean to SimpleType: Boolean at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 39", "operations": ["INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: getCompositeKey to MethodDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS StringLiteral: \"$\" to InfixExpression: + at 1", "INS MethodDeclaration to TypeDeclaration: class at 39", "INS Block to MethodDeclaration at 5", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: name to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: key to InfixExpression: + at 2", "INS SimpleName: String to SimpleType: String at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: name to InfixExpression: + at 0", "INS SimpleType: String to MethodDeclaration at 1", "INS InfixExpression: + to ReturnStatement at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: key to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 40", "operations": ["INS QualifiedName: parts.length to InfixExpression: != at 0", "INS ArrayType: String[] to MethodDeclaration at 2", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS SimpleName: key to MethodInvocation at 2", "INS SimpleType: MessageQueueException to MethodDeclaration at 5", "INS ArrayType: String[] to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Block to MethodDeclaration at 6", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS Modifier: static to MethodDeclaration at 1", "INS SimpleName: StringUtils to MethodInvocation at 0", "INS StringLiteral: \"$\" to MethodInvocation at 3", "INS Dimension to ArrayType: String[] at 1", "INS MethodDeclaration to TypeDeclaration: class at 40", "INS InfixExpression: != to IfStatement at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"Invalid key '\" to InfixExpression: + at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS Dimension to ArrayType: String[] at 1", "INS Block to IfStatement at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: split to MethodInvocation at 1", "INS IfStatement to Block at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: parts to ReturnStatement at 0", "INS StringLiteral: \"'.  Expected format <queue|shard>$<name>. \" to InfixExpression: + at 2", "INS NumberLiteral: 2 to InfixExpression: != at 1", "INS SimpleName: parts to VariableDeclarationFragment at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: splitCompositeKey to MethodDeclaration at 3", "INS SimpleName: key to InfixExpression: + at 1", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: key to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 46", "operations": ["INS StringLiteral: \"Failed to clear messages from queue \" to InfixExpression: + at 0", "INS SimpleName: mb to MethodInvocation at 0", "INS SimpleName: queueColumnFamily to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: withRow to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: queueName to InfixExpression: + at 1", "INS Block to EnhancedForStatement at 2", "INS Block to CatchClause at 1", "INS SimpleName: e to ClassInstanceCreation at 2", "INS Block to TryStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: execute to MethodInvocation at 1", "INS TryStatement to Block at 4", "INS SimpleName: partition to SingleVariableDeclaration at 1", "INS SimpleName: mb to MethodInvocation at 0", "INS SimpleName: partitions to EnhancedForStatement at 1", "INS ThrowStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: LOG to MethodInvocation at 0", "INS SimpleName: queueColumnFamily to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: info to MethodInvocation at 1", "INS SimpleName: mb to MethodInvocation at 0", "INS SimpleName: delete to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 46", "INS SimpleName: withRow to MethodInvocation at 1", "INS StringLiteral: \"Deleting queue '\" to InfixExpression: + at 0", "INS Block to MethodDeclaration at 5", "INS StringLiteral: \"'\" to InfixExpression: + at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: MessageQueueException to MethodDeclaration at 4", "INS SimpleName: queueName to InfixExpression: + at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: queueName to MethodInvocation at 3", "INS EnhancedForStatement to Block at 2", "INS ExpressionStatement to Block at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 47", "operations": ["INS SimpleName: MessageQueueEntry to SimpleType: MessageQueueEntry at 0", "INS SimpleName: entry to MethodInvocation at 2", "INS Block to TryStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ArrayAccess to ClassInstanceCreation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: Message to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS SimpleName: getKey to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: messageId to MethodInvocation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: NotFoundException to SingleVariableDeclaration at 0", "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "INS SimpleType: ByteArrayInputStream to VariableDeclarationStatement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: column to MethodInvocation at 0", "INS SimpleName: apply to MethodInvocation at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleType: ConnectionException to SingleVariableDeclaration at 0", "INS SimpleName: mapper to MethodInvocation at 0", "INS SimpleName: Message to SimpleType: Message at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS ReturnStatement to Block at 1", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: messageId to InfixExpression: + at 1", "INS SimpleType: String to ArrayType: String[] at 0", "INS Dimension to ArrayType: String[] at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: execute to MethodInvocation at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: bais to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0", "INS TryStatement to Block at 1", "INS SimpleName: ByteArrayInputStream to SimpleType: ByteArrayInputStream at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: getByteArrayValue to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: column to VariableDeclarationFragment at 0", "INS SimpleName: getResult to MethodInvocation at 1", "INS CatchClause to TryStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS StringLiteral: \"Error getting message \" to InfixExpression: + at 0", "INS SimpleName: e to ClassInstanceCreation at 2", "INS SimpleType: Column to ParameterizedType: Column<MessageQueueEntry> at 0", "INS SimpleName: entry to VariableDeclarationFragment at 0", "INS SimpleName: Column to SimpleType: Column at 0", "INS SimpleName: e2 to SingleVariableDeclaration at 1", "INS TypeLiteral to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: setConsistencyLevel to MethodInvocation at 1", "INS SimpleType: MessageQueueException to MethodDeclaration at 5", "INS SimpleType: MessageQueueEntry to VariableDeclarationStatement at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: prepareQuery to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: parts to ArrayAccess at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: keyspace to MethodInvocation at 0", "INS NumberLiteral: 1 to ArrayAccess at 1", "INS Block to CatchClause at 1", "INS SimpleType: ByteArrayInputStream to ClassInstanceCreation at 0", "INS Block to TryStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: Message to SimpleType: Message at 0", "INS Block to TryStatement at 0", "INS SimpleName: bais to VariableDeclarationFragment at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleType: Exception to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: parts to VariableDeclarationFragment at 0", "INS SimpleName: MessageQueueEntry to SimpleType: MessageQueueEntry at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: MessageQueueEntry to SimpleType: MessageQueueEntry at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: consistencyLevel to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 47", "INS SimpleName: NotFoundException to SimpleType: NotFoundException at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS MethodInvocation to ReturnStatement at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: parts to ArrayAccess at 0", "INS SimpleType: MessageQueueEntry to ClassInstanceCreation at 0", "INS SimpleName: readMessage to MethodDeclaration at 3", "INS ParameterizedType: Column<MessageQueueEntry> to VariableDeclarationStatement at 0", "INS TryStatement to Block at 0", "INS SimpleName: getStringValue to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS CatchClause to TryStatement at 1", "INS SimpleName: splitCompositeKey to MethodInvocation at 0", "INS ArrayAccess to VariableDeclarationFragment at 1", "INS Block to CatchClause at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: ConnectionException to SimpleType: ConnectionException at 0", "INS SimpleName: getColumn to MethodInvocation at 1", "INS TryStatement to Block at 3", "INS SimpleName: shardKey to MethodInvocation at 2", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: ByteArrayInputStream to SimpleType: ByteArrayInputStream at 0", "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "INS SimpleName: queueColumnFamily to MethodInvocation at 2", "INS SimpleType: MessageQueueEntry to ParameterizedType: Column<MessageQueueEntry> at 1", "INS StringLiteral: \"Error parsing message \" to InfixExpression: + at 0", "INS SimpleName: messageId to InfixExpression: + at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: column to MethodInvocation at 0", "INS ArrayType: String[] to VariableDeclarationStatement at 0", "INS SimpleName: messageId to SingleVariableDeclaration at 1", "INS SimpleType: Message to TypeLiteral at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS CatchClause to TryStatement at 2", "INS SimpleName: shardKey to VariableDeclarationFragment at 0", "INS Block to CatchClause at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: invalidMessageHandler to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: readValue to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 48", "operations": ["INS SimpleName: buildRange to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "INS SimpleName: e to ClassInstanceCreation at 2", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: MessageMetadataEntry to SimpleType: MessageMetadataEntry at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ParameterizedType: ColumnList<MessageMetadataEntry> to VariableDeclarationStatement at 0", "INS Block to MethodDeclaration at 6", "INS SimpleType: ColumnList to ParameterizedType: ColumnList<MessageMetadataEntry> at 0", "INS SimpleName: entry to MethodInvocation at 0", "INS SimpleName: getName to MethodInvocation at 1", "INS SimpleName: queueName to MethodInvocation at 1", "INS SimpleName: key to SingleVariableDeclaration at 1", "INS SimpleType: Column to ParameterizedType: Column<MessageMetadataEntry> at 0", "INS SimpleName: getRow to MethodInvocation at 1", "INS ParameterizedType: Column<MessageMetadataEntry> to SingleVariableDeclaration at 0", "INS QualifiedName: MessageMetadataEntryType.MessageId to MethodInvocation at 0", "INS SimpleName: groupRowKey to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ReturnStatement to Block at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: lessThanEquals to MethodInvocation at 1", "INS PrimitiveType: byte to CastExpression at 0", "INS SimpleName: groupRowKey to VariableDeclarationFragment at 0", "INS Block to CatchClause at 1", "INS MethodDeclaration to TypeDeclaration: class at 48", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleType: Message to MethodDeclaration at 2", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleName: getName to MethodInvocation at 1", "INS CastExpression to MethodInvocation at 2", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: public to MethodDeclaration at 1", "INS QualifiedName: MessageMetadataEntryType.MessageId to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS CastExpression to MethodInvocation at 2", "INS SimpleName: entry to SingleVariableDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getResult to MethodInvocation at 1", "INS SimpleName: readMessageByKey to MethodDeclaration at 3", "INS SimpleName: ordinal to MethodInvocation at 1", "INS SimpleType: MessageQueueException to MethodDeclaration at 5", "INS ReturnStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: readMessage to MethodInvocation at 0", "INS SimpleName: Column to SimpleType: Column at 0", "INS SimpleName: greaterThanEquals to MethodInvocation at 1", "INS EnhancedForStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 0", "INS Block to EnhancedForStatement at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: metadataSerializer to MethodInvocation at 0", "INS SimpleType: MessageMetadataEntry to ParameterizedType: ColumnList<MessageMetadataEntry> at 1", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: NotFoundException to SingleVariableDeclaration at 0", "INS SimpleName: columns to EnhancedForStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: keyIndexColumnFamily to MethodInvocation at 2", "INS SimpleName: getCompositeKey to MethodInvocation at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS PrimitiveType: byte to CastExpression at 0", "INS SimpleName: Message to SimpleType: Message at 0", "INS SimpleName: ColumnList to SimpleType: ColumnList at 0", "INS TryStatement to Block at 1", "INS CatchClause to TryStatement at 1", "INS StringLiteral: \"Error fetching row \" to InfixExpression: + at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: ordinal to MethodInvocation at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: key to MethodInvocation at 2", "INS SimpleName: columns to VariableDeclarationFragment at 0", "INS SimpleName: ConnectionException to SimpleType: ConnectionException at 0", "INS MethodInvocation to MethodInvocation at 1", "INS NullLiteral to ReturnStatement at 0", "INS SimpleName: withColumnRange to MethodInvocation at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: NotFoundException to SimpleType: NotFoundException at 0", "INS SimpleName: execute to MethodInvocation at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: keyspace to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: groupRowKey to InfixExpression: + at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to CastExpression at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: MessageMetadataEntry to ParameterizedType: Column<MessageMetadataEntry> at 1", "INS NullLiteral to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS Block to TryStatement at 0", "INS CatchClause to TryStatement at 2", "INS SimpleType: ConnectionException to SingleVariableDeclaration at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: MessageMetadataEntry to SimpleType: MessageMetadataEntry at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: prepareQuery to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 49", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 49", "INS SimpleName: ordinal to MethodInvocation at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: parts to ArrayAccess at 0", "INS SimpleName: metadataSerializer to MethodInvocation at 0", "INS SimpleName: execute to MethodInvocation at 1", "INS SimpleName: greaterThanEquals to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: MessageQueueException to MethodDeclaration at 5", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: keyIndexColumnFamily to MethodInvocation at 2", "INS ArrayAccess to VariableDeclarationFragment at 1", "INS NumberLiteral: 1 to ArrayAccess at 1", "INS EnhancedForStatement to Block at 1", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to CastExpression at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: getCompositeKey to MethodInvocation at 0", "INS SimpleName: key to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: queueName to MethodInvocation at 1", "INS SimpleName: withRow to MethodInvocation at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: keyspace to MethodInvocation at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ordinal to MethodInvocation at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS Block to CatchClause at 1", "INS SimpleName: shardKey to MethodInvocation at 3", "INS PrimitiveType: byte to CastExpression at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS CatchClause to TryStatement at 1", "INS CastExpression to MethodInvocation at 2", "INS SimpleType: ConnectionException to SingleVariableDeclaration at 0", "INS SimpleName: Column to SimpleType: Column at 0", "INS SimpleType: ConnectionException to SingleVariableDeclaration at 0", "INS SimpleName: splitCompositeKey to MethodInvocation at 0", "INS SimpleName: keyspace to MethodInvocation at 0", "INS ReturnStatement to Block at 4", "INS SimpleName: mb to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 3", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: columns to VariableDeclarationFragment at 0", "INS Block to CatchClause at 1", "INS MethodInvocation to MethodInvocation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: keyIndexColumnFamily to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Column to ParameterizedType: Column<MessageMetadataEntry> at 0", "INS StringLiteral: \"Error fetching row \" to InfixExpression: + at 0", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleType: ColumnList to ParameterizedType: ColumnList<MessageMetadataEntry> at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: NotFoundException to SimpleType: NotFoundException at 0", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: columns to EnhancedForStatement at 1", "INS SimpleName: MessageQueueEntry to SimpleType: MessageQueueEntry at 0", "INS CastExpression to MethodInvocation at 2", "INS SimpleName: groupRowKey to InfixExpression: + at 1", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleName: deleteMessageByKey to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: withRow to MethodInvocation at 1", "INS ArrayAccess to ClassInstanceCreation at 1", "INS ParameterizedType: ColumnList<MessageMetadataEntry> to VariableDeclarationStatement at 0", "INS SimpleName: ConnectionException to SimpleType: ConnectionException at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: prepareQuery to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS CatchClause to TryStatement at 2", "INS SimpleName: MessageQueueEntry to SimpleType: MessageQueueEntry at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: byte to CastExpression at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: deleteColumn to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: ConnectionException to SimpleType: ConnectionException at 0", "INS VariableDeclarationStatement to Block at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS ParameterizedType: Column<MessageMetadataEntry> to SingleVariableDeclaration at 0", "INS SimpleName: entry to MethodInvocation at 0", "INS TryStatement to Block at 2", "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "INS SimpleName: getName to MethodInvocation at 1", "INS SimpleName: MessageMetadataEntry to SimpleType: MessageMetadataEntry at 0", "INS SimpleName: getName to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: groupRowKey to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS QualifiedName: MessageMetadataEntryType.MessageId to MethodInvocation at 0", "INS SimpleName: withColumnRange to MethodInvocation at 1", "INS SimpleName: groupRowKey to MethodInvocation at 3", "INS SimpleName: build to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: mb to MethodInvocation at 0", "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: MessageMetadataEntry to ParameterizedType: ColumnList<MessageMetadataEntry> at 1", "INS QualifiedName: MessageMetadataEntryType.MessageId to MethodInvocation at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: parts to ArrayAccess at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: MessageQueueEntry to ClassInstanceCreation at 0", "INS Block to TryStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: delete to MethodInvocation at 1", "INS SimpleName: ColumnList to SimpleType: ColumnList at 0", "INS SimpleType: MessageQueueEntry to VariableDeclarationStatement at 0", "INS SimpleName: e to ClassInstanceCreation at 2", "INS SimpleName: MessageMetadataEntry to SimpleType: MessageMetadataEntry at 0", "INS Block to MethodDeclaration at 6", "INS SimpleType: NotFoundException to SingleVariableDeclaration at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: e to ClassInstanceCreation at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: MutationBatch to SimpleType: MutationBatch at 0", "INS SimpleName: String to SimpleType: String at 0", "INS CatchClause to TryStatement at 1", "INS SimpleType: MessageMetadataEntry to ParameterizedType: Column<MessageMetadataEntry> at 1", "INS SimpleName: queueColumnFamily to MethodInvocation at 2", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleType: MutationBatch to VariableDeclarationStatement at 0", "INS SimpleName: getRow to MethodInvocation at 1", "INS SimpleName: buildRange to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: parts to VariableDeclarationFragment at 0", "INS SimpleName: key to MethodInvocation at 2", "INS SimpleName: queueEntry to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: entry to SingleVariableDeclaration at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getResult to MethodInvocation at 1", "INS ArrayType: String[] to VariableDeclarationStatement at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: groupRowKey to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: String to ArrayType: String[] at 0", "INS TryStatement to Block at 3", "INS Dimension to ArrayType: String[] at 1", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleName: queueEntry to VariableDeclarationFragment at 0", "INS SimpleName: groupRowKey to InfixExpression: + at 1", "INS Block to CatchClause at 1", "INS SimpleName: shardKey to VariableDeclarationFragment at 0", "INS SimpleName: lessThanEquals to MethodInvocation at 1", "INS StringLiteral: \"Error deleting queue item \" to InfixExpression: + at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: mb to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: prepareMutationBatch to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 50", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: entry to MethodInvocation at 4", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleName: messageId to SingleVariableDeclaration at 1", "INS SimpleName: setConsistencyLevel to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS Block to CatchClause at 1", "INS SimpleName: parts to VariableDeclarationFragment at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ArrayType: String[] to VariableDeclarationStatement at 0", "INS SimpleName: parts to ArrayAccess at 0", "INS SimpleName: parts to ArrayAccess at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS CatchClause to TryStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: shardKey to VariableDeclarationFragment at 0", "INS SimpleName: shardKey to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: MessageQueueException to MethodDeclaration at 5", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: deleteColumn to MethodInvocation at 1", "INS SimpleType: MessageQueueEntry to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: keyspace to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 6", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ConnectionException to SimpleType: ConnectionException at 0", "INS StringLiteral: \"Error deleting message \" to InfixExpression: + at 0", "INS ArrayAccess to VariableDeclarationFragment at 1", "INS SimpleName: splitCompositeKey to MethodInvocation at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS SimpleName: execute to MethodInvocation at 1", "INS SimpleName: deleteMessage to MethodDeclaration at 3", "INS VariableDeclarationStatement to Block at 2", "INS ArrayAccess to ClassInstanceCreation at 1", "INS SimpleName: e to ClassInstanceCreation at 2", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: messageId to InfixExpression: + at 1", "INS Dimension to ArrayType: String[] at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: queueColumnFamily to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 50", "INS SimpleType: MessageQueueEntry to ClassInstanceCreation at 0", "INS TryStatement to Block at 3", "INS PrimitiveType: void to MethodDeclaration at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to ArrayType: String[] at 0", "INS SimpleName: entry to VariableDeclarationFragment at 0", "INS SimpleName: MessageQueueEntry to SimpleType: MessageQueueEntry at 0", "INS SimpleName: consistencyLevel to MethodInvocation at 2", "INS SimpleType: ConnectionException to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: MessageQueueEntry to SimpleType: MessageQueueEntry at 0", "INS SimpleName: messageId to MethodInvocation at 1", "INS ThrowStatement to Block at 0", "INS NumberLiteral: 1 to ArrayAccess at 1", "INS SimpleName: prepareColumnMutation to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS Block to TryStatement at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 51", "operations": ["INS SimpleName: entry to VariableDeclarationFragment at 0", "INS SimpleType: MessageQueueEntry to VariableDeclarationStatement at 0", "INS ArrayAccess to VariableDeclarationFragment at 1", "INS SimpleName: parts to ArrayAccess at 0", "INS SimpleType: String to ParameterizedType: Collection<String> at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: e to ClassInstanceCreation at 2", "INS TryStatement to Block at 2", "INS SimpleName: MessageQueueEntry to SimpleType: MessageQueueEntry at 0", "INS SimpleName: messageId to SingleVariableDeclaration at 1", "INS ArrayAccess to ClassInstanceCreation at 1", "INS EnhancedForStatement to Block at 1", "INS SimpleName: mb to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodDeclaration to TypeDeclaration: class at 51", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: public to MethodDeclaration at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: deleteMessages to MethodDeclaration at 3", "INS CatchClause to TryStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: parts to ArrayAccess at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: MessageQueueEntry to SimpleType: MessageQueueEntry at 0", "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: messageIds to EnhancedForStatement at 1", "INS SimpleName: shardKey to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS StringLiteral: \"Error deleting messages \" to InfixExpression: + at 0", "INS SimpleName: shardKey to MethodInvocation at 3", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS Block to CatchClause at 1", "INS SimpleName: ConnectionException to SimpleType: ConnectionException at 0", "INS SimpleName: deleteColumn to MethodInvocation at 1", "INS NumberLiteral: 1 to ArrayAccess at 1", "INS SimpleName: messageIds to SingleVariableDeclaration at 1", "INS ArrayType: String[] to VariableDeclarationStatement at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: parts to VariableDeclarationFragment at 0", "INS SimpleType: MessageQueueException to MethodDeclaration at 5", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS MethodInvocation to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: ConnectionException to SingleVariableDeclaration at 0", "INS SimpleName: withRow to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS SimpleName: splitCompositeKey to MethodInvocation at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS Dimension to ArrayType: String[] at 1", "INS SimpleName: messageId to MethodInvocation at 1", "INS SimpleType: MessageQueueEntry to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ParameterizedType: Collection<String> to SingleVariableDeclaration at 0", "INS SimpleType: String to ArrayType: String[] at 0", "INS SimpleType: Collection to ParameterizedType: Collection<String> at 0", "INS Block to MethodDeclaration at 6", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: entry to MethodInvocation at 2", "INS SimpleName: messageIds to InfixExpression: + at 1", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: queueColumnFamily to MethodInvocation at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 52", "operations": ["INS SimpleName: put to MethodInvocation at 1", "INS StringLiteral: \"gc_grace_period\" to MethodInvocation at 2", "INS SimpleName: ImmutableMap to MethodInvocation at 0", "INS SimpleName: builder to MethodInvocation at 3", "INS StringLiteral: \"read_repair_chance\" to MethodInvocation at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: InterruptedException to SimpleType: InterruptedException at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: keyspace to MethodInvocation at 0", "INS ThrowStatement to IfStatement at 1", "INS SimpleName: build to MethodInvocation at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS StringLiteral: \"UTF8Type\" to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: createStorage to MethodDeclaration at 3", "INS ThisExpression to FieldAccess at 0", "INS SimpleType: Object to MethodInvocation at 2", "INS StringLiteral: \"comparator_type\" to MethodInvocation at 2", "INS TryStatement to Block at 1", "INS IfStatement to Block at 0", "INS SimpleName: sleep to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"CompositeType(BytesType, UTF8Type)\" to MethodInvocation at 3", "INS MethodDeclaration to TypeDeclaration: class at 52", "INS SimpleName: put to MethodInvocation at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: contains to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: + at 1", "INS Block to MethodDeclaration at 5", "INS Block to CatchClause at 1", "INS SimpleName: Thread to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"Failed to create column family for \" to InfixExpression: + at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getName to MethodInvocation at 1", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: e to ClassInstanceCreation at 2", "INS NumberLiteral: 1.0 to MethodInvocation at 3", "INS SimpleType: ConnectionException to SingleVariableDeclaration at 0", "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: queueColumnFamily to MethodInvocation at 0", "INS Block to CatchClause at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: keyIndexColumnFamily to FieldAccess at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS TryStatement to Block at 1", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleName: ConnectionException to SimpleType: ConnectionException at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Block to TryStatement at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS StringLiteral: \"already exist\" to MethodInvocation at 2", "INS SimpleType: String to MethodInvocation at 1", "INS SimpleName: SCHEMA_CHANGE_DELAY to MethodInvocation at 2", "INS SimpleName: put to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: e to MethodInvocation at 0", "INS StringLiteral: \"key_validation_class\" to MethodInvocation at 2", "INS NumberLiteral: 0 to MethodInvocation at 3", "INS SimpleName: getMessage to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: createColumnFamily to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: InterruptedException to SingleVariableDeclaration at 0", "INS SimpleName: put to MethodInvocation at 1", "INS FieldAccess to MethodInvocation at 2", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS Block to TryStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleType: MessageQueueException to MethodDeclaration at 4", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 53", "operations": ["INS SingleVariableDeclaration to CatchClause at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS TryStatement to Block at 0", "INS CatchClause to TryStatement at 1", "INS IfStatement to Block at 0", "INS Block to CatchClause at 1", "INS SimpleName: e to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: queueColumnFamily to FieldAccess at 1", "INS Block to CatchClause at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: keyIndexColumnFamily to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: queueColumnFamily to MethodInvocation at 0", "INS SimpleType: InterruptedException to SingleVariableDeclaration at 0", "INS SimpleName: InterruptedException to SimpleType: InterruptedException at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ConnectionException to SimpleType: ConnectionException at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: ConnectionException to SimpleType: ConnectionException at 0", "INS SimpleName: sleep to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleType: InterruptedException to SingleVariableDeclaration at 0", "INS Block to TryStatement at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: InterruptedException to SimpleType: InterruptedException at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS MethodInvocation to MethodInvocation at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: sleep to MethodInvocation at 1", "INS SimpleName: e to ClassInstanceCreation at 2", "INS Block to MethodDeclaration at 5", "INS SimpleType: ConnectionException to SingleVariableDeclaration at 0", "INS Block to CatchClause at 1", "INS SimpleName: Thread to MethodInvocation at 0", "INS TryStatement to Block at 1", "INS StringLiteral: \"already exist\" to MethodInvocation at 2", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS StringLiteral: \"Failed to create column family for \" to InfixExpression: + at 0", "INS Block to TryStatement at 0", "INS SimpleType: MessageQueueException to MethodDeclaration at 4", "INS Block to TryStatement at 0", "INS SimpleName: e to MethodInvocation at 0", "INS SimpleName: dropStorage to MethodDeclaration at 3", "INS SimpleName: queueColumnFamily to MethodInvocation at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "INS FieldAccess to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 53", "INS SimpleName: getName to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS Block to CatchClause at 1", "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: Thread to MethodInvocation at 0", "INS SimpleName: e to ClassInstanceCreation at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS ThisExpression to FieldAccess at 0", "INS StringLiteral: \"already exist\" to MethodInvocation at 2", "INS SimpleName: getMessage to MethodInvocation at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleType: ConnectionException to SingleVariableDeclaration at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: SCHEMA_CHANGE_DELAY to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS TryStatement to Block at 1", "INS SimpleName: contains to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS SimpleName: dropColumnFamily to MethodInvocation at 1", "INS SimpleName: getMessage to MethodInvocation at 1", "INS ThrowStatement to IfStatement at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: keyspace to MethodInvocation at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS CatchClause to TryStatement at 1", "INS CatchClause to TryStatement at 1", "INS ThrowStatement to IfStatement at 1", "INS SimpleName: keyspace to MethodInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: dropColumnFamily to MethodInvocation at 1", "INS SimpleName: getName to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS Block to TryStatement at 0", "INS SimpleName: SCHEMA_CHANGE_DELAY to MethodInvocation at 2", "INS StringLiteral: \"Failed to create column family for \" to InfixExpression: + at 0", "INS TryStatement to Block at 1", "INS SimpleName: contains to MethodInvocation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 54", "operations": ["INS SimpleName: createQueue to MethodDeclaration at 3", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS MethodDeclaration to TypeDeclaration: class at 54"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 57", "operations": ["INS MethodInvocation to PrefixExpression: ! at 0", "INS Block to MethodDeclaration at 6", "INS PrefixExpression: ! to IfStatement at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: e to ClassInstanceCreation at 2", "INS Block to IfStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: Message to SimpleType: Message at 0", "INS ArrayAccess to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS ThrowStatement to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: getKey to MethodInvocation at 1", "INS SimpleType: MessageMetadataEntry to ParameterizedType: Row<String,MessageMetadataEntry> at 2", "INS MethodInvocation to Assignment: = at 1", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS Block to IfStatement at 2", "INS SimpleName: getColumns to MethodInvocation at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: Set to ParameterizedType: Set<String> at 0", "INS SimpleName: Message to SimpleType: Message at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: keyIndexColumnFamily to MethodInvocation at 2", "INS SimpleName: keyIndexColumnFamily to MethodInvocation at 2", "INS EnhancedForStatement to Block at 4", "INS SimpleName: response to MethodInvocation at 0", "INS SimpleName: messageKey to MethodInvocation at 2", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: Message to SimpleType: Message at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: lockColumn to MethodInvocation at 2", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleName: Message to SimpleType: Message at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: SendMessageResponse to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: row to MethodInvocation at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: SendMessageResponse to SimpleType: SendMessageResponse at 0", "INS NumberLiteral: 1 to ArrayAccess at 1", "INS SimpleName: mb to Assignment: = at 0", "INS SimpleType: MessageMetadataEntry to ParameterizedType: Rows<String,MessageMetadataEntry> at 2", "INS TryStatement to Block at 3", "INS MethodInvocation to MethodInvocation at 0", "INS ThrowStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Row to SimpleType: Row at 0", "INS SimpleName: consistencyLevel to MethodInvocation at 2", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS EnhancedForStatement to Block at 5", "INS SimpleName: keys to InfixExpression: + at 1", "INS SimpleName: notUniqueMessages to ClassInstanceCreation at 2", "INS SimpleName: keys to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS TryStatement to Block at 0", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: String to ParameterizedType: Map<String,Message> at 1", "INS Block to TryStatement at 0", "INS SimpleName: add to MethodInvocation at 1", "INS ParameterizedType: List<Message> to VariableDeclarationStatement at 0", "INS SimpleName: row to SingleVariableDeclaration at 1", "INS NumberLiteral: 1 to InfixExpression: != at 1", "INS SimpleName: keyspace to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: row to MethodInvocation at 0", "INS SimpleType: SendMessageResponse to MethodDeclaration at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: setConsistencyLevel to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS QualifiedName: MessageMetadataEntryType.Unique to MethodInvocation at 0", "INS SimpleName: row to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "INS MethodInvocation to IfStatement at 0", "INS ParameterizedType: Map<String,Message> to VariableDeclarationStatement at 0", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: Rows to SimpleType: Rows at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleType: MessageQueueException to MethodDeclaration at 5", "INS ReturnStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 7", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: sendMessages to MethodDeclaration at 3", "INS SimpleType: Message to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS StringLiteral: \"Key already exists .\" to InfixExpression: + at 0", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS SimpleName: MessageMetadataEntry to SimpleType: MessageMetadataEntry at 0", "INS Block to TryStatement at 0", "INS SimpleName: Set to SimpleType: Set at 0", "INS PrimitiveType: byte to CastExpression at 0", "INS CatchClause to TryStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NullLiteral to MethodInvocation at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleType: Message to SingleVariableDeclaration at 0", "INS SimpleType: Message to ParameterizedType: List<Message> at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: execute to MethodInvocation at 1", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: metadataSerializer to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: KeyExistsException to SimpleType: KeyExistsException at 0", "INS SimpleName: notUniqueMessages to VariableDeclarationFragment at 0", "INS SimpleType: Message to ParameterizedType: Map<String,Message> at 2", "INS SimpleName: notUniqueMessages to MethodInvocation at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS IfStatement to Block at 6", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS Block to IfStatement at 1", "INS SimpleName: buildRange to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 1", "INS PrimitiveType: byte to CastExpression at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS IfStatement to Block at 0", "INS SimpleName: MessageMetadataEntry to SimpleType: MessageMetadataEntry at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: keyspace to MethodInvocation at 0", "INS SimpleName: withRow to MethodInvocation at 1", "INS Block to MethodDeclaration at 6", "INS CastExpression to MethodInvocation at 2", "INS SimpleName: mb to MethodInvocation at 0", "INS SimpleName: Message to SimpleType: Message at 0", "INS SimpleName: greaterThanEquals to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS MethodInvocation to ArrayAccess at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getKey to MethodInvocation at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 1", "INS MethodInvocation to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to ParameterizedType: Rows<String,MessageMetadataEntry> at 1", "INS SimpleType: List to ParameterizedType: List<Message> at 0", "INS SimpleName: splitCompositeKey to MethodInvocation at 0", "INS SimpleName: lockColumn to MethodInvocation at 2", "INS SimpleName: withRow to MethodInvocation at 1", "INS Block to EnhancedForStatement at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: getNotUnique to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to ParameterizedType: Set<String> at 1", "INS SimpleName: mb to MethodInvocation at 0", "INS SimpleName: messages to EnhancedForStatement at 1", "INS CatchClause to TryStatement at 1", "INS SimpleName: ordinal to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: ConnectionException to SimpleType: ConnectionException at 0", "INS SimpleName: deleteColumn to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 57", "INS SimpleType: MessageQueueException to MethodDeclaration at 5", "INS SimpleType: String to ParameterizedType: Map<String,Message> at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleType: Row to ParameterizedType: Row<String,MessageMetadataEntry> at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: notUniqueKeys to VariableDeclarationFragment at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Block to EnhancedForStatement at 2", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: consistencyLevel to MethodInvocation at 2", "INS ClassInstanceCreation to ReturnStatement at 0", "INS ParameterizedType: Map<String,Message> to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ParameterizedType: Rows<String,MessageMetadataEntry> to VariableDeclarationStatement at 0", "INS SimpleName: prepareMutationBatch to MethodInvocation at 1", "INS ExpressionStatement to Block at 3", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: message to SingleVariableDeclaration at 1", "INS SimpleType: Rows to ParameterizedType: Rows<String,MessageMetadataEntry> at 0", "INS SimpleName: result to Assignment: = at 0", "INS SimpleName: setConsistencyLevel to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: Row<String,MessageMetadataEntry> at 1", "INS Modifier: public to MethodDeclaration at 1", "INS CastExpression to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: result to EnhancedForStatement at 1", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: getResult to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: row to MethodInvocation at 0", "INS ParameterizedType: Row<String,MessageMetadataEntry> to SingleVariableDeclaration at 0", "INS SimpleName: lessThanEquals to MethodInvocation at 1", "INS SimpleName: Iterables to MethodInvocation at 0", "INS SimpleName: ordinal to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: String to SimpleType: String at 0", "INS QualifiedName: MessageMetadataEntryType.Unique to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS StringLiteral: \"Failed to check keys for uniqueness (2): \" to InfixExpression: + at 0", "INS SimpleName: messageKey to VariableDeclarationFragment at 0", "INS SimpleType: ConnectionException to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: prepareQuery to MethodInvocation at 1", "INS ReturnStatement to Block at 10", "INS Block to CatchClause at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: putEmptyColumn to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getRowSlice to MethodInvocation at 1", "INS SimpleName: SendMessageResponse to SimpleType: SendMessageResponse at 0", "INS ParameterizedType: Set<String> to VariableDeclarationStatement at 0", "INS SimpleName: getKey to MethodInvocation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: KeyExistsException to ClassInstanceCreation at 0", "INS SimpleName: ConnectionException to SimpleType: ConnectionException at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS IfStatement to Block at 0", "INS SimpleName: size to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: success to ClassInstanceCreation at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: keys to MethodInvocation at 0", "INS SimpleName: newUnique to MethodInvocation at 1", "INS SimpleName: message to SingleVariableDeclaration at 1", "INS SimpleType: Message to ParameterizedType: Map<String,Message> at 2", "INS SimpleType: ConnectionException to SingleVariableDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 58", "operations": ["INS SimpleName: shardKey to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 6", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: MutationBatch to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 11", "INS SimpleName: getCompositeKey to MethodInvocation at 0", "INS SimpleName: getMessageId to MethodInvocation at 1", "INS Block to MethodDeclaration at 6", "INS SimpleName: getShardKey to MethodInvocation at 0", "INS SimpleName: shardKey to VariableDeclarationFragment at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: entry to MethodInvocation at 0", "INS SimpleName: hasKey to MethodInvocation at 1", "INS SimpleName: mb to SingleVariableDeclaration at 1", "INS IfStatement to Block at 8", "INS MethodInvocation to IfStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 58", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: entry to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to MethodDeclaration at 1", "INS SimpleName: message to MethodInvocation at 0"]}, {"root": "INS SimpleType: Integer to FieldDeclaration at 3", "operations": ["INS SimpleType: Integer to FieldDeclaration at 3", "INS SimpleName: Integer to SimpleType: Integer at 0"]}, {"root": "INS SimpleType: Boolean to FieldDeclaration at 3", "operations": ["INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS SimpleType: Boolean to FieldDeclaration at 3"]}, {"root": "INS SimpleType: String to FieldDeclaration at 3", "operations": ["INS SimpleType: String to FieldDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private", "UPD Modifier: public from public to private", "UPD Modifier: public from public to private"]}, {"root": "INS Modifier: final to FieldDeclaration at 1", "operations": ["INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS ParameterizedType: AnnotatedCompositeSerializer<MessageMetadataEntry> to FieldDeclaration at 3", "operations": ["INS SimpleType: AnnotatedCompositeSerializer to ParameterizedType: AnnotatedCompositeSerializer<MessageMetadataEntry> at 0", "INS SimpleType: MessageMetadataEntry to ParameterizedType: AnnotatedCompositeSerializer<MessageMetadataEntry> at 1", "INS SimpleName: MessageMetadataEntry to SimpleType: MessageMetadataEntry at 0", "INS ParameterizedType: AnnotatedCompositeSerializer<MessageMetadataEntry> to FieldDeclaration at 3", "INS SimpleName: AnnotatedCompositeSerializer to SimpleType: AnnotatedCompositeSerializer at 0"]}, {"root": "INS Modifier: static to FieldDeclaration at 1", "operations": ["INS Modifier: static to FieldDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "INS Javadoc to TypeDeclaration: class at 0", "operations": ["INS Javadoc to TypeDeclaration: class at 0", "INS TagElement: @author to Javadoc at 0", "INS TextElement:  elandau to TagElement: @author at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 10", "INS Block to MethodDeclaration at 5", "INS ExpressionStatement to Block at 0", "INS QualifiedName: queue.settings to MethodInvocation at 0", "INS SimpleName: timeout to MethodInvocation at 2", "INS SimpleName: units to MethodInvocation at 3", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: setRetentionTimeout to MethodInvocation at 1", "INS SimpleName: withRetentionTimeout to MethodDeclaration at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 20", "INS SimpleType: Builder to MethodDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: enabled to Assignment: = at 1", "INS ReturnStatement to Block at 1", "INS SimpleName: enabled to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to ReturnStatement at 0", "INS QualifiedName: queue.bPoisonQueueEnabled to Assignment: = at 0", "INS SimpleName: withPoisonQueue to MethodDeclaration at 2", "INS SimpleName: Builder to SimpleType: Builder at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS SimpleType: Boolean to SingleVariableDeclaration at 0"]}, {"root": "INS ParameterizedType: ColumnFamily<String,MessageMetadataEntry> to FieldDeclaration at 1", "operations": ["INS ParameterizedType: ColumnFamily<String,MessageMetadataEntry> to FieldDeclaration at 1", "INS SimpleType: String to ParameterizedType: ColumnFamily<String,MessageMetadataEntry> at 1", "INS SimpleType: MessageMetadataEntry to ParameterizedType: ColumnFamily<String,MessageMetadataEntry> at 2", "INS SimpleName: MessageMetadataEntry to SimpleType: MessageMetadataEntry at 0", "INS SimpleType: ColumnFamily to ParameterizedType: ColumnFamily<String,MessageMetadataEntry> at 0", "INS SimpleName: ColumnFamily to SimpleType: ColumnFamily at 0"]}, {"root": "INS VariableDeclarationFragment to FieldDeclaration at 2", "operations": ["INS SimpleName: keyIndexColumnFamily to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "UPDATE from getQueueKey to getShardKey", "operations": ["UPD SimpleName: getQueueKey from getQueueKey to getShardKey", "UPD SimpleName: getQueueKey from getQueueKey to getShardKey", "UPD SimpleName: getQueueKey from getQueueKey to getShardKey", "UPD SimpleName: getQueueKey from getQueueKey to getShardKey", "UPD SimpleName: getQueueKey from getQueueKey to getShardKey"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: keyspace to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: setConsistencyLevel to MethodInvocation at 1", "INS SimpleName: execute to MethodInvocation at 1", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: MutationBatch to SimpleType: MutationBatch at 0", "INS SimpleName: consistencyLevel to MethodInvocation at 2", "INS SimpleName: prepareMutationBatch to MethodInvocation at 1", "INS StringLiteral: \"Failed to clear messages from queue \" to InfixExpression: + at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS StringLiteral: \"Clearing messages from '\" to InfixExpression: + at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: MessageQueueShard to SimpleType: MessageQueueShard at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: partitions to EnhancedForStatement at 1", "INS VariableDeclarationStatement to Block at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: delete to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: MutationBatch to VariableDeclarationStatement at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: mb to MethodInvocation at 0", "INS SimpleName: mb to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: withRow to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS SimpleName: getName to MethodInvocation at 1", "INS SimpleName: info to MethodInvocation at 1", "INS CatchClause to TryStatement at 1", "INS SimpleName: queueName to InfixExpression: + at 1", "INS SimpleType: MessageQueueShard to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: partition to MethodInvocation at 0", "INS Block to TryStatement at 0", "INS StringLiteral: \"'\" to InfixExpression: + at 2", "INS SimpleName: LOG to MethodInvocation at 0", "INS EnhancedForStatement to Block at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: queueName to InfixExpression: + at 1", "INS TryStatement to Block at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: mb to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: queueColumnFamily to MethodInvocation at 2", "INS SimpleName: partition to SingleVariableDeclaration at 1", "INS SimpleName: e to ClassInstanceCreation at 2", "INS InfixExpression: + to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleType: MessageQueueException to MethodDeclaration at 4", "MOV PrimitiveType: void to MethodDeclaration at 2", "MOV Modifier: public to MethodDeclaration at 1", "MOV SimpleName: createQueue to MethodDeclaration at 3"]}, {"root": "UPDATE from createQueue to deleteQueue", "operations": ["UPD SimpleName: createQueue from createQueue to deleteQueue"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: MessageQueueException to MethodDeclaration at 5", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: createProducer to MethodDeclaration at 3", "MOV SimpleType: MessageProducer to MethodDeclaration at 2", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: sendMessages to MethodDeclaration at 2", "MOV SimpleType: MessageQueueException to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV Modifier: public to MethodDeclaration at 0"]}, {"root": "UPDATE from sendMessages to fillMessageMutation", "operations": ["UPD SimpleName: sendMessages from sendMessages to fillMessageMutation"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS TextElement: Column families: to TagElement at 48", "operations": ["INS TextElement: Column families: to TagElement at 48"]}, {"root": "INS TextElement: Queue to TagElement at 49", "operations": ["INS TextElement: Queue to TagElement at 49"]}, {"root": "INS TextElement: KeyLookup to TagElement at 50", "operations": ["INS TextElement: KeyLookup to TagElement at 50"]}, {"root": "INS TextElement: History to TagElement at 51", "operations": ["INS TextElement: History to TagElement at 51"]}, {"root": "INS CastExpression to VariableDeclarationFragment at 1", "operations": ["INS CastExpression to VariableDeclarationFragment at 1", "INS PrimitiveType: int to CastExpression at 0"]}, {"root": "UPDATE from DEFAULT_VISIBILITY_TIMEOUT to DEFAULT_POISON_QUEUE_ENABLED", "operations": ["UPD SimpleName: DEFAULT_VISIBILITY_TIMEOUT from DEFAULT_VISIBILITY_TIMEOUT to DEFAULT_POISON_QUEUE_ENABLED"]}, {"root": "INS BooleanLiteral: false to VariableDeclarationFragment at 1", "operations": ["INS BooleanLiteral: false to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from DEFAULT_SHARD_COUNT to DEFAULT_METADATA_SUFFIX", "operations": ["UPD SimpleName: DEFAULT_SHARD_COUNT from DEFAULT_SHARD_COUNT to DEFAULT_METADATA_SUFFIX"]}, {"root": "INS StringLiteral: \"_metadata\" to VariableDeclarationFragment at 1", "operations": ["INS StringLiteral: \"_metadata\" to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from DEFAULT_BUCKET_DURATION to SCHEMA_CHANGE_DELAY", "operations": ["UPD SimpleName: DEFAULT_BUCKET_DURATION from DEFAULT_BUCKET_DURATION to SCHEMA_CHANGE_DELAY"]}, {"root": "INS NumberLiteral: 3000 to VariableDeclarationFragment at 1", "operations": ["INS NumberLiteral: 3000 to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from compositeSerializer to entrySerializer", "operations": ["UPD SimpleName: compositeSerializer from compositeSerializer to entrySerializer", "UPD SimpleName: compositeSerializer from compositeSerializer to entrySerializer", "UPD SimpleName: compositeSerializer from compositeSerializer to entrySerializer", "UPD SimpleName: compositeSerializer from compositeSerializer to entrySerializer"]}, {"root": "UPDATE from DEFAULT_BUCKET_COUNT to metadataSerializer", "operations": ["UPD SimpleName: DEFAULT_BUCKET_COUNT from DEFAULT_BUCKET_COUNT to metadataSerializer"]}, {"root": "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "operations": ["INS SimpleType: AnnotatedCompositeSerializer to ParameterizedType: AnnotatedCompositeSerializer<MessageMetadataEntry> at 0", "INS ParameterizedType: AnnotatedCompositeSerializer<MessageMetadataEntry> to ClassInstanceCreation at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: MessageMetadataEntry to ParameterizedType: AnnotatedCompositeSerializer<MessageMetadataEntry> at 1", "INS SimpleName: MessageMetadataEntry to SimpleType: MessageMetadataEntry at 0", "INS SimpleName: MessageMetadataEntry to SimpleType: MessageMetadataEntry at 0", "INS TypeLiteral to ClassInstanceCreation at 1", "INS SimpleType: MessageMetadataEntry to TypeLiteral at 0", "INS SimpleName: AnnotatedCompositeSerializer to SimpleType: AnnotatedCompositeSerializer at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from withBuckets to withTimeBuckets", "operations": ["UPD SimpleName: withBuckets from withBuckets to withTimeBuckets"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement: @deprecated to Javadoc at 0", "INS TextElement:  Use withTimeBuckets instead to TagElement: @deprecated at 0", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "INS SimpleType: Builder to MethodDeclaration at 2", "operations": ["INS SimpleName: Builder to SimpleType: Builder at 0", "INS SimpleType: Builder to MethodDeclaration at 2"]}, {"root": "UPDATE from withVisibilityTimeout to withBuckets", "operations": ["UPD SimpleName: withVisibilityTimeout from withVisibilityTimeout to withBuckets"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: bucketCount to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: bucketDuration to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleType: TimeUnit to SingleVariableDeclaration at 0", "INS SimpleName: units to SingleVariableDeclaration at 1", "INS SimpleName: TimeUnit to SimpleType: TimeUnit at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Builder to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "UPDATE from columnFamily to queueColumnFamily", "operations": ["UPD SimpleName: columnFamily from columnFamily to queueColumnFamily", "UPD SimpleName: columnFamily from columnFamily to queueColumnFamily", "UPD SimpleName: columnFamily from columnFamily to queueColumnFamily", "UPD SimpleName: columnFamily from columnFamily to queueColumnFamily", "UPD SimpleName: columnFamily from columnFamily to queueColumnFamily", "UPD SimpleName: columnFamily from columnFamily to queueColumnFamily", "UPD SimpleName: columnFamily from columnFamily to queueColumnFamily", "UPD SimpleName: columnFamily from columnFamily to queueColumnFamily", "UPD SimpleName: columnFamily from columnFamily to queueColumnFamily", "UPD SimpleName: columnFamily from columnFamily to queueColumnFamily", "UPD SimpleName: columnFamily from columnFamily to queueColumnFamily", "UPD SimpleName: columnFamily from columnFamily to queueColumnFamily", "UPD SimpleName: columnFamily from columnFamily to queueColumnFamily", "UPD SimpleName: columnFamily from columnFamily to queueColumnFamily", "UPD SimpleName: columnFamily from columnFamily to queueColumnFamily", "UPD SimpleName: columnFamily from columnFamily to queueColumnFamily"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS NumberLiteral: 0 to Assignment: = at 1", "INS ExpressionStatement to IfStatement at 2", "INS SimpleName: timePartition to Assignment: = at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: getPartitionDuration to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to IfStatement at 1", "INS SimpleName: settings to MethodInvocation at 0", "INS InfixExpression: != to IfStatement at 0", "INS IfStatement to Block at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: timePartition to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: settings to MethodInvocation at 0", "INS SimpleName: timePartition to Assignment: = at 0", "INS NumberLiteral: 0 to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS ExpressionStatement to IfStatement at 1", "INS ExpressionStatement to IfStatement at 2", "INS SimpleName: timePartition to Assignment: = at 0", "INS IfStatement to Block at 1", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to IfStatement at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: getPartitionDuration to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV TryStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV TryStatement to Block at 0", "MOV TryStatement to Block at 0"]}, {"root": "UPDATE from UUID to String", "operations": ["UPD SimpleName: UUID from UUID to String", "UPD SimpleType: ByteArrayOutputStream from ByteArrayOutputStream to String", "UPD SimpleName: ByteArrayOutputStream from ByteArrayOutputStream to String", "UPD SimpleName: Long from Long to String"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: UUID to SimpleType: String at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 4", "MOV ExpressionStatement to Block at 10", "MOV TryStatement to Block at 5", "MOV ExpressionStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 7", "MOV ExpressionStatement to Block at 0", "MOV IfStatement to Block at 1", "MOV EnhancedForStatement to Block at 9", "MOV VariableDeclarationStatement to Block at 3"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: enableDefaultTyping to MethodInvocation at 1", "INS SimpleName: mapper to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS QualifiedName: queue.settings to MethodInvocation at 0", "INS SimpleName: bucketCount to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setPartitionCount to MethodInvocation at 1", "INS ExpressionStatement to Block at 1"]}, {"root": "INS ReturnStatement to Block at 2", "operations": ["INS ReturnStatement to Block at 2", "INS ThisExpression to ReturnStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: columnFamilyName to InfixExpression: + at 0", "INS QualifiedName: queue.keyIndexColumnFamily to Assignment: = at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: ColumnFamily to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: StringSerializer to MethodInvocation at 0", "INS SimpleName: newColumnFamily to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: metadataSerializer to MethodInvocation at 4", "INS SimpleName: DEFAULT_METADATA_SUFFIX to InfixExpression: + at 1", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: Long to SimpleType: String at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0"]}, {"root": "UPDATE from UUID to MutationBatch", "operations": ["UPD SimpleName: UUID from UUID to MutationBatch", "UPD SimpleType: MessageQueueEntry from MessageQueueEntry to MutationBatch", "UPD SimpleName: MessageQueueEntry from MessageQueueEntry to MutationBatch"]}, {"root": "MOVE from SimpleType: MutationBatch", "operations": ["MOV SimpleName: UUID to SimpleType: MutationBatch at 0"]}, {"root": "INS PrefixExpression: ! to IfStatement at 0", "operations": ["INS MethodInvocation to PrefixExpression: ! at 0", "INS PrefixExpression: ! to IfStatement at 0"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: MessageQueueShard to SingleVariableDeclaration at 0"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "MOVE from CatchClause", "operations": ["MOV Block to CatchClause at 1"]}, {"root": "INS TryStatement to Block at 1", "operations": ["INS CatchClause to TryStatement at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: sleep to MethodInvocation at 1", "INS SimpleName: InterruptedException to SimpleType: InterruptedException at 0", "INS SimpleName: SCHEMA_CHANGE_DELAY to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: InterruptedException to SingleVariableDeclaration at 0", "INS SimpleName: Thread to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS TryStatement to Block at 1", "INS Block to TryStatement at 0", "INS Block to CatchClause at 1"]}, {"root": "INS SingleVariableDeclaration to CatchClause at 0", "operations": ["INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleType: ConnectionException to SingleVariableDeclaration at 0", "INS SimpleName: ConnectionException to SimpleType: ConnectionException at 0"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: MessageProducer to ClassInstanceCreation at 0"]}, {"root": "UPDATE from setVisibilityTimeout to setPartitionDuration", "operations": ["UPD SimpleName: setVisibilityTimeout from setVisibilityTimeout to setPartitionDuration"]}, {"root": "INS CastExpression to Assignment: = at 1", "operations": ["INS CastExpression to Assignment: = at 1", "INS PrimitiveType: int to CastExpression at 0"]}, {"root": "UPDATE from queue.columnFamily to queue.queueColumnFamily", "operations": ["UPD QualifiedName: queue.columnFamily from queue.columnFamily to queue.queueColumnFamily"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS ExpressionStatement to Block at 0", "INS Block to MethodDeclaration at 5", "INS NullLiteral to ReturnStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: input to InfixExpression: + at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: warn to MethodInvocation at 1", "INS StringLiteral: \"Invalid message: \" to InfixExpression: + at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV InfixExpression: % to Assignment: = at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV InfixExpression: / to Assignment: = at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS ThrowStatement to IfStatement at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getMessage to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS SimpleName: contains to MethodInvocation at 1", "INS SimpleName: e to MethodInvocation at 0", "INS PrefixExpression: ! to IfStatement at 0", "INS StringLiteral: \"already exist\" to MethodInvocation at 2"]}, {"root": "INS MethodDeclaration to AnonymousClassDeclaration at 4", "operations": ["INS SimpleName: itemsToPop to SingleVariableDeclaration at 1", "INS ParameterizedType: Collection<Message> to MethodDeclaration at 2", "INS Block to MethodDeclaration at 8", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: BusyLockException to SimpleType: BusyLockException at 0", "INS SimpleName: readMessages to MethodInvocation at 0", "INS SimpleName: itemsToPop to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: Message to ParameterizedType: Collection<Message> at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: InterruptedException to SimpleType: InterruptedException at 0", "INS SimpleType: InterruptedException to MethodDeclaration at 7", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS SimpleName: Message to SimpleType: Message at 0", "INS NullLiteral to MethodInvocation at 3", "INS MethodDeclaration to AnonymousClassDeclaration at 4", "INS SimpleType: BusyLockException to MethodDeclaration at 6", "INS SimpleType: Collection to ParameterizedType: Collection<Message> at 0"]}, {"root": "INS MethodDeclaration to AnonymousClassDeclaration at 5", "operations": ["INS Block to MethodDeclaration at 10", "INS SimpleName: System to MethodInvocation at 0", "INS ConditionalExpression to VariableDeclarationFragment at 1", "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: timeout to SingleVariableDeclaration at 1", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS Assignment: = to ExpressionStatement at 0", "INS NumberLiteral: 0 to Assignment: = at 1", "INS InfixExpression: && to IfStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: timeoutTime to InfixExpression: > at 1", "INS WhileStatement to Block at 3", "INS SimpleName: messages to ReturnStatement at 0", "INS ReturnStatement to IfStatement at 1", "INS SimpleName: convert to MethodInvocation at 1", "INS SimpleType: TimeUnit to SingleVariableDeclaration at 0", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS SimpleName: getPartitionDuration to MethodInvocation at 1", "INS SimpleName: settings to MethodInvocation at 0", "INS SimpleName: timeoutTime to VariableDeclarationFragment at 0", "INS InfixExpression: != to InfixExpression: && at 0", "INS SimpleName: currentPartition to Assignment: = at 0", "INS SimpleName: timeoutTime to InfixExpression: != at 0", "INS SimpleName: readMessages to MethodDeclaration at 3", "INS InfixExpression: > to InfixExpression: && at 1", "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "INS QualifiedName: TimeUnit.MILLISECONDS to MethodInvocation at 0", "INS SimpleName: units to SingleVariableDeclaration at 1", "INS IfStatement to Block at 0", "INS IfStatement to Block at 1", "INS Block to WhileStatement at 1", "INS InfixExpression: != to InfixExpression: && at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 5", "INS MethodInvocation to InfixExpression: > at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS InfixExpression: && to IfStatement at 0", "INS IfStatement to Block at 1", "INS SimpleName: messages to MethodInvocation at 0", "INS InfixExpression: != to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to InfixExpression: + at 0", "INS VariableDeclarationStatement to Block at 0", "INS ReturnStatement to IfStatement at 1", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: timeout to InfixExpression: == at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS SimpleName: timeout to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS ParenthesizedExpression to ConditionalExpression at 0", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS NumberLiteral: 0 to InfixExpression: != at 1", "INS NumberLiteral: 0 to ConditionalExpression at 1", "INS InfixExpression: + to ConditionalExpression at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: System to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS InfixExpression: == to ParenthesizedExpression at 0", "INS Block to IfStatement at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS SimpleName: TimeUnit to SimpleType: TimeUnit at 0", "INS IfStatement to Block at 2", "INS SimpleName: units to MethodInvocation at 3", "INS IfStatement to Block at 2", "INS ExpressionStatement to Block at 0"]}, {"root": "INS MethodDeclaration to AnonymousClassDeclaration at 6", "operations": ["INS SimpleName: Message to SimpleType: Message at 0", "INS SimpleType: Message to ParameterizedType: Collection<Message> at 1", "INS Modifier: private to MethodDeclaration at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 6", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: readAndReturnShard to MethodDeclaration at 2", "INS SimpleName: MessageQueueShard to SimpleType: MessageQueueShard at 0", "INS SimpleType: Collection to ParameterizedType: Collection<Message> at 0", "INS SimpleType: InterruptedException to MethodDeclaration at 7", "INS ParameterizedType: Collection<Message> to MethodDeclaration at 1", "INS SimpleName: InterruptedException to SimpleType: InterruptedException at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleType: MessageQueueShard to SingleVariableDeclaration at 0", "INS SimpleName: partition to SingleVariableDeclaration at 1", "INS SimpleType: BusyLockException to MethodDeclaration at 6", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS SimpleName: itemsToPop to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to AnonymousClassDeclaration at 7", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: < to ForStatement at 1", "INS ExpressionStatement to IfStatement at 2", "INS InfixExpression: / to ParenthesizedExpression at 0", "INS PostfixExpression: ++ to ForStatement at 2", "INS InfixExpression: + to ParenthesizedExpression at 0", "INS SimpleType: Message to ParameterizedType: Collection<Message> at 1", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: partitionIndex to InfixExpression: + at 1", "INS InfixExpression: == to IfStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: itemsToPop to SingleVariableDeclaration at 1", "INS MethodInvocation to InfixExpression: % at 1", "INS InfixExpression: % to Assignment: = at 1", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: j to InfixExpression: + at 1", "INS SimpleName: i to InfixExpression: + at 0", "INS MethodInvocation to InfixExpression: % at 1", "INS ParameterizedType: List<Message> to VariableDeclarationStatement at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: Lists to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: / at 1", "INS SimpleName: convert to MethodInvocation at 1", "INS SimpleName: settings to MethodInvocation at 0", "INS SimpleName: getPartitionCount to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: + to ParenthesizedExpression at 0", "INS ReturnStatement to Block at 4", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS ParenthesizedExpression to InfixExpression: * at 0", "INS SimpleName: messages to ReturnStatement at 0", "INS NumberLiteral: 0 to Assignment: = at 1", "INS QualifiedName: TimeUnit.MICROSECONDS to MethodInvocation at 0", "INS SimpleType: Collection to ParameterizedType: Collection<Message> at 0", "INS PrimitiveType: int to CastExpression at 0", "INS SimpleName: j to PostfixExpression: ++ at 0", "INS SimpleType: List to ParameterizedType: List<Message> at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS MethodInvocation to InfixExpression: / at 0", "INS VariableDeclarationStatement to Block at 2", "INS InfixExpression: % to ParenthesizedExpression at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: settings to MethodInvocation at 0", "INS SimpleName: Message to SimpleType: Message at 0", "INS ParenthesizedExpression to CastExpression at 1", "INS ParenthesizedExpression to InfixExpression: % at 0", "INS MethodInvocation to InfixExpression: < at 1", "INS SimpleName: settings to MethodInvocation at 0", "INS SimpleName: peekMessages to MethodDeclaration at 3", "INS Block to MethodDeclaration at 6", "INS SimpleName: partitionIndex to Assignment: = at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: getPartitionDuration to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: * at 1", "INS NullLiteral to InfixExpression: != at 1", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS SimpleName: settings to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS ForStatement to Block at 3", "INS SimpleName: System to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS SimpleName: getPartitionCount to MethodInvocation at 1", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleName: partitionIndex to Assignment: = at 0", "INS ForStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: index to VariableDeclarationFragment at 0", "INS InfixExpression: * to InfixExpression: + at 0", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: getPartitionDuration to MethodInvocation at 1", "INS Block to ForStatement at 3", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS QualifiedName: TimeUnit.MILLISECONDS to MethodInvocation at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to IfStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS Block to ForStatement at 3", "INS SimpleName: messages to ReturnStatement at 0", "INS SimpleName: getShardCount to MethodInvocation at 1", "INS SimpleName: getPartitionCount to MethodInvocation at 1", "INS PostfixExpression: ++ to ForStatement at 2", "INS ParenthesizedExpression to InfixExpression: % at 0", "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "INS SimpleName: j to InfixExpression: < at 0", "INS InfixExpression: < to ForStatement at 1", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS IfStatement to Block at 2", "INS SimpleName: getShardCount to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: < at 1", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 7", "INS SimpleType: MessageQueueException to MethodDeclaration at 5", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: i to InfixExpression: < at 0", "INS SimpleName: settings to MethodInvocation at 0", "INS ReturnStatement to IfStatement at 1", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS SimpleName: j to VariableDeclarationFragment at 0", "INS SimpleName: partitionIndex to VariableDeclarationFragment at 0", "INS SimpleName: messages to VariableDeclarationFragment at 0", "INS SimpleName: settings to MethodInvocation at 0", "INS SimpleName: settings to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ParameterizedType: Collection<Message> to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to AnonymousClassDeclaration at 8", "operations": ["INS SimpleName: column to MethodInvocation at 1", "INS SimpleName: setConsistencyLevel to MethodInvocation at 1", "INS SimpleName: convert to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS TryStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: makeEndpoint to MethodInvocation at 1", "INS SimpleName: execute to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS Block to CatchClause at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS NumberLiteral: 0 to CastExpression at 1", "INS ExpressionStatement to IfStatement at 1", "INS EnhancedForStatement to Block at 2", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ParameterizedType: List<Message> to VariableDeclarationStatement at 0", "INS SimpleType: MessageQueueEntry to ParameterizedType: Column<MessageQueueEntry> at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleName: prepareQuery to MethodInvocation at 1", "INS SimpleName: withColumnRange to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: List to ParameterizedType: List<Message> at 0", "INS MethodInvocation to MethodInvocation at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: shardName to InfixExpression: + at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS QualifiedName: Equality.EQUAL to MethodInvocation at 3", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: messages to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: Column to SimpleType: Column at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ThrowStatement to Block at 0", "INS QualifiedName: Equality.EQUAL to MethodInvocation at 3", "INS Block to TryStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ReturnStatement to Block at 3", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS IfStatement to Block at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 8", "INS QualifiedName: TimeUnit.MILLISECONDS to MethodInvocation at 3", "INS SimpleName: result to MethodInvocation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleType: Column to ParameterizedType: Column<MessageQueueEntry> at 0", "INS SimpleName: toBytes to MethodInvocation at 1", "INS SimpleName: curTimeMicros to VariableDeclarationFragment at 0", "INS SimpleName: extractMessageFromColumn to MethodInvocation at 0", "INS CastExpression to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: setEnd to MethodInvocation at 1", "INS ParameterizedType: Collection<Message> to MethodDeclaration at 1", "INS SimpleName: shardName to MethodInvocation at 2", "INS StringLiteral: \"Error peeking for messages from shard \" to InfixExpression: + at 0", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: peekMessages to MethodDeclaration at 2", "INS SimpleType: MessageQueueException to MethodDeclaration at 5", "INS SimpleType: Collection to ParameterizedType: Collection<Message> at 0", "INS SimpleName: consistencyLevel to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: List to SimpleType: List at 0", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: MessageQueueEntry to SimpleType: MessageQueueEntry at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: e to ClassInstanceCreation at 2", "INS SimpleName: message to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: messages to ReturnStatement at 0", "INS SimpleType: Message to VariableDeclarationStatement at 0", "INS ParameterizedType: Column<MessageQueueEntry> to SingleVariableDeclaration at 0", "INS PrimitiveType: byte to CastExpression at 0", "INS SimpleName: System to MethodInvocation at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: Lists to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: Message to SimpleType: Message at 0", "INS SimpleName: result to EnhancedForStatement at 1", "INS SimpleName: column to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getResult to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: newArrayListWithCapacity to MethodInvocation at 1", "INS SimpleName: queueColumnFamily to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: Message to ParameterizedType: Collection<Message> at 1", "INS MethodInvocation to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: messages to VariableDeclarationFragment at 0", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS SimpleName: Message to SimpleType: Message at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: shardName to SingleVariableDeclaration at 1", "INS SimpleName: getKey to MethodInvocation at 1", "INS SimpleName: entrySerializer to MethodInvocation at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: message to MethodInvocation at 2", "INS Block to MethodDeclaration at 6", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS QualifiedName: Equality.LESS_THAN_EQUALS to MethodInvocation at 3", "INS SimpleName: itemsToPop to SingleVariableDeclaration at 1", "INS SimpleName: currentTimeMillis to MethodInvocation at 1", "INS SimpleName: keyspace to MethodInvocation at 0", "INS QualifiedName: TimeUnit.MICROSECONDS to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to AnonymousClassDeclaration at 9", "operations": ["INS Block to CatchClause at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getResult to MethodInvocation at 1", "INS PrimitiveType: byte to CastExpression at 0", "INS Block to TryStatement at 0", "INS MethodInvocation to CastExpression at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: entrySerializer to MethodInvocation at 0", "INS CastExpression to MethodInvocation at 2", "INS SimpleName: consistencyLevel to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ClassInstanceCreation to ThrowStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: withColumnRange to MethodInvocation at 1", "INS ReturnStatement to Block at 1", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: currentTime to VariableDeclarationFragment at 0", "INS SimpleName: ordinal to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: MessageQueueEntryType.Message to MethodInvocation at 0", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS SimpleName: hasMessages to MethodDeclaration at 2", "INS SimpleName: append to MethodInvocation at 1", "INS QualifiedName: Equality.LESS_THAN_EQUALS to MethodInvocation at 3", "INS QualifiedName: MessageQueueEntryType.Message to MethodInvocation at 0", "INS SimpleName: entrySerializer to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS CastExpression to MethodInvocation at 2", "INS SimpleName: makeEndpoint to MethodInvocation at 1", "INS SimpleName: toBytes to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: keyspace to MethodInvocation at 0", "INS SimpleName: getKey to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS QualifiedName: Equality.EQUAL to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getUniqueTimeUUIDinMicros to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: RangeBuilder to SimpleType: RangeBuilder at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleName: prepareQuery to MethodInvocation at 1", "INS TryStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: shardName to MethodInvocation at 2", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS SimpleName: makeEndpoint to MethodInvocation at 1", "INS StringLiteral: \"Error checking shard for messages. \" to InfixExpression: + at 0", "INS PrimitiveType: byte to CastExpression at 0", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS NumberLiteral: 0 to CastExpression at 1", "INS SimpleName: TimeUUIDUtils to MethodInvocation at 0", "INS QualifiedName: Equality.EQUAL to MethodInvocation at 3", "INS CatchClause to TryStatement at 1", "INS SimpleName: setStart to MethodInvocation at 1", "INS SimpleName: setConsistencyLevel to MethodInvocation at 1", "INS QualifiedName: Equality.EQUAL to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: MessageQueueException to MethodDeclaration at 4", "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: shardName to SingleVariableDeclaration at 1", "INS VariableDeclarationStatement to Block at 0", "INS Block to MethodDeclaration at 5", "INS SimpleType: ConnectionException to SingleVariableDeclaration at 0", "INS SimpleName: ordinal to MethodInvocation at 1", "INS SimpleName: setLimit to MethodInvocation at 1", "INS CastExpression to MethodInvocation at 2", "INS SimpleName: execute to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: ConnectionException to SimpleType: ConnectionException at 0", "INS Modifier: private to MethodDeclaration at 0", "INS MethodInvocation to CastExpression at 1", "INS SimpleName: e to ClassInstanceCreation at 2", "INS PrefixExpression: ! to ReturnStatement at 0", "INS SimpleName: shardName to InfixExpression: + at 1", "INS SimpleName: queueColumnFamily to MethodInvocation at 2", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleType: RangeBuilder to ClassInstanceCreation at 0", "INS SimpleName: currentTime to MethodInvocation at 2", "INS MethodDeclaration to AnonymousClassDeclaration at 9", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: toBytes to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: setEnd to MethodInvocation at 1", "INS PrimitiveType: byte to CastExpression at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS MethodDeclaration to AnonymousClassDeclaration at 12", "operations": ["INS MethodDeclaration to AnonymousClassDeclaration at 12", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Block to MethodDeclaration at 6", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: ackMessage to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to AnonymousClassDeclaration at 13", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleName: keyspace to MethodInvocation at 0", "INS SimpleName: consistencyLevel to MethodInvocation at 2", "INS Block to EnhancedForStatement at 2", "INS EnhancedForStatement to Block at 1", "INS SimpleName: setConsistencyLevel to MethodInvocation at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleType: MessageQueueException to MethodDeclaration at 5", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: MutationBatch to VariableDeclarationStatement at 0", "INS SimpleName: prepareMutationBatch to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: MutationBatch to SimpleType: MutationBatch at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: ackMessages to MethodDeclaration at 3", "INS SimpleName: messages to EnhancedForStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: mb to VariableDeclarationFragment at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to AnonymousClassDeclaration at 13", "INS Block to MethodDeclaration at 6", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0"]}, {"root": "INS MethodDeclaration to AnonymousClassDeclaration at 15", "operations": ["INS SimpleName: message to ReturnStatement at 0", "INS SimpleName: extractMessageFromColumn to MethodDeclaration at 2", "INS ParameterizedType: Column<MessageQueueEntry> to SingleVariableDeclaration at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleType: Column to ParameterizedType: Column<MessageQueueEntry> at 0", "INS SimpleType: MessageQueueEntry to ParameterizedType: Column<MessageQueueEntry> at 1", "INS SimpleName: Message to SimpleType: Message at 0", "INS SimpleName: Column to SimpleType: Column at 0", "INS MethodDeclaration to AnonymousClassDeclaration at 15", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS SimpleType: Message to MethodDeclaration at 1", "INS SimpleName: MessageQueueEntry to SimpleType: MessageQueueEntry at 0", "INS SimpleName: column to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: message to MethodInvocation at 0", "MOV SimpleName: getTriggerTime to MethodInvocation at 1"]}, {"root": "UPDATE from getTriggerTime to hasTrigger", "operations": ["UPD SimpleName: getTriggerTime from getTriggerTime to hasTrigger"]}, {"root": "UPDATE from getQueueKey to shardKey", "operations": ["UPD SimpleName: getQueueKey from getQueueKey to shardKey"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getQueueKey to MethodInvocation at 3"]}, {"root": "INS SimpleType: Integer to CastExpression at 0", "operations": ["INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleType: Integer to CastExpression at 0"]}, {"root": "UPDATE from TimeUnit.SECONDS to TimeUnit.MICROSECONDS", "operations": ["UPD QualifiedName: TimeUnit.SECONDS from TimeUnit.SECONDS to TimeUnit.MICROSECONDS"]}, {"root": "UPDATE from timeout to bucketDuration", "operations": ["UPD SimpleName: timeout from timeout to bucketDuration"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: MessageQueueException to ClassInstanceCreation at 0"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 1", "MOV SimpleType: MessageQueueException to MethodDeclaration at 5", "MOV SimpleType: UUID to VariableDeclarationStatement at 0", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleName: sendMessage to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 1", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SimpleType: InterruptedException to MethodDeclaration at 9", "MOV SimpleName: readMessages to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleType: BusyLockException to MethodDeclaration at 8", "MOV ParameterizedType: Collection<Message> to MethodDeclaration at 2", "MOV SimpleType: MessageQueueException to MethodDeclaration at 7"]}, {"root": "MOVE from IfStatement", "operations": ["MOV PrefixExpression: ! to IfStatement at 0", "MOV Block to MethodDeclaration at 8"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV SimpleType: MessageQueueException to MethodDeclaration at 5", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS SimpleName: fillAckMutation to MethodDeclaration at 2", "operations": ["INS SimpleName: fillAckMutation to MethodDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleType: Message to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: Message to SimpleType: Message at 0", "INS SimpleName: message to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: MutationBatch to SimpleType: MutationBatch at 0", "INS SimpleType: MutationBatch to SingleVariableDeclaration at 0", "INS SimpleName: mb to SingleVariableDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS SimpleName: mb to MethodInvocation at 0", "INS SimpleName: message to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to InfixExpression: != at 0", "INS SimpleName: deleteColumn to MethodInvocation at 1", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: getMessageId to MethodInvocation at 1", "INS InfixExpression: != to IfStatement at 0", "INS SimpleName: queueName to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: MessageMetadataEntry to MethodInvocation at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: withRow to MethodInvocation at 1", "INS SimpleName: getKey to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS IfStatement to Block at 3", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: newMessageId to MethodInvocation at 1", "INS SimpleName: message to MethodInvocation at 0", "INS SimpleName: entry to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: keyIndexColumnFamily to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS SimpleName: getKey to MethodInvocation at 1", "INS SimpleName: getCompositeKey to MethodInvocation at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from ackMessages to ackPoisonMessage", "operations": ["UPD SimpleName: ackMessages from ackMessages to ackPoisonMessage"]}, {"root": "INS SimpleType: MessageQueueException to MethodDeclaration at 5", "operations": ["INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleType: MessageQueueException to MethodDeclaration at 5"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS ClassInstanceCreation to ThrowStatement at 0", "INS Block to MethodDeclaration at 6", "INS SimpleName: e to SingleVariableDeclaration at 1", "INS CatchClause to TryStatement at 1", "INS SingleVariableDeclaration to CatchClause at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ThrowStatement to Block at 0", "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "INS Block to CatchClause at 1", "INS TryStatement to Block at 2", "INS SimpleType: ConnectionException to SingleVariableDeclaration at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: ConnectionException to SimpleType: ConnectionException at 0", "INS Block to TryStatement at 0", "INS StringLiteral: \"Failed to ack messages\" to ClassInstanceCreation at 1", "INS SimpleName: e to ClassInstanceCreation at 2"]}, {"root": "UPDATE from getVisibilityTimeout to getRetentionTimeout", "operations": ["UPD SimpleName: getVisibilityTimeout from getVisibilityTimeout to getRetentionTimeout"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS SimpleName: getCompositeKey to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: queueName to MethodInvocation at 1", "INS SimpleName: keyIndexColumnFamily to MethodInvocation at 2", "INS SimpleName: getKey to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "INS SimpleName: putEmptyColumn to MethodInvocation at 1", "operations": ["INS SimpleName: putEmptyColumn to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 6", "operations": ["INS MethodInvocation to MethodInvocation at 6", "INS SimpleName: settings to MethodInvocation at 0", "INS SimpleName: getRetentionTimeout to MethodInvocation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: MessageQueueException to ClassInstanceCreation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: MessageQueueException to ClassInstanceCreation at 0"]}, {"root": "MOVE from ThrowStatement", "operations": ["MOV ClassInstanceCreation to ThrowStatement at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: MessageQueueException to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: MessageQueueException to ClassInstanceCreation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 2", "MOV ExpressionStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from SimpleType: BusyLockException", "operations": ["MOV SimpleName: BusyLockException to SimpleType: BusyLockException at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Message to SimpleType: Message at 0", "INS SimpleType: Message to ParameterizedType: Collection<Message> at 1", "INS SimpleName: messages to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0", "INS ParameterizedType: Collection<Message> to VariableDeclarationStatement at 0", "INS SimpleType: Collection to ParameterizedType: Collection<Message> at 0"]}, {"root": "INS ReturnStatement to Block at 3", "operations": ["INS SimpleName: messages to ReturnStatement at 0", "INS ReturnStatement to Block at 3"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: lockColumnCount to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 4"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV TryStatement to Block at 2", "MOV ExpressionStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0", "MOV EnhancedForStatement to Block at 4", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 1", "MOV TryStatement to Block at 1", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 0", "MOV EnhancedForStatement to Block at 8", "MOV VariableDeclarationStatement to Block at 3", "MOV TryStatement to Block at 9"]}, {"root": "UPDATE from partition to mb", "operations": ["UPD SimpleName: partition from partition to mb", "UPD SimpleName: response from response to mb", "UPD SimpleName: entry from entry to mb", "UPD SimpleName: e from e to mb", "UPD SimpleName: partition from partition to mb", "UPD SimpleName: baos from baos to mb"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: response to MethodInvocation at 0", "MOV SimpleName: put to MethodInvocation at 1", "MOV SimpleName: message to MethodInvocation at 0"]}, {"root": "UPDATE from flush to withRow", "operations": ["UPD SimpleName: flush from flush to withRow", "UPD SimpleName: put from put to withRow"]}, {"root": "INS SimpleName: MessageMetadataEntry to MethodInvocation at 0", "operations": ["INS SimpleName: MessageMetadataEntry to MethodInvocation at 0"]}, {"root": "UPDATE from message to newMessageId", "operations": ["UPD SimpleName: message from message to newMessageId"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: shardKey to MethodInvocation at 1", "INS SimpleName: entry to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getCompositeKey to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "operations": ["INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0"]}, {"root": "MOVE from WhileStatement", "operations": ["MOV BooleanLiteral: true to WhileStatement at 0"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV SingleVariableDeclaration to EnhancedForStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0"]}, {"root": "INS SimpleType: SendMessageResponse to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: SendMessageResponse to SimpleType: SendMessageResponse at 0", "INS SimpleType: SendMessageResponse to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from MessageQueueEntry to MessageMetadataEntry", "operations": ["UPD SimpleName: MessageQueueEntry from MessageQueueEntry to MessageMetadataEntry", "UPD SimpleType: MessageQueueEntry from MessageQueueEntry to MessageMetadataEntry", "UPD SimpleName: MessageQueueEntry from MessageQueueEntry to MessageMetadataEntry"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: MessageQueueEntry to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from hooks to messages", "operations": ["UPD SimpleName: hooks from hooks to messages", "UPD SimpleName: pollInterval from pollInterval to messages", "UPD SimpleName: partition from partition to messages", "UPD SimpleName: partition from partition to messages"]}, {"root": "INS Block to TryStatement at 0", "operations": ["INS Block to TryStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: mb to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: execute to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from ParameterizedType: List<Message>", "operations": ["MOV SimpleType: Message to ParameterizedType: List<Message> at 1", "MOV SimpleType: Map to ParameterizedType: Map<String,Message> at 0"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "INS ExpressionStatement to Block at 11", "operations": ["INS ExpressionStatement to Block at 11", "INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: lockColumnCount to Assignment: = at 0", "INS SimpleName: result to MethodInvocation at 0"]}, {"root": "INS EnhancedForStatement to Block at 1", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: message to MethodInvocation at 0", "INS SimpleName: getCompositeKey to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: message to MethodInvocation at 0", "INS SimpleName: entry to MethodInvocation at 0", "INS IfStatement to Block at 3", "INS SimpleName: message to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: hasTrigger to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: message to MethodInvocation at 0", "INS SimpleName: column to MethodInvocation at 1", "INS SimpleName: deleteColumn to MethodInvocation at 1", "INS SimpleName: nextTrigger to MethodInvocation at 1", "INS SimpleName: keyIndexColumnFamily to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: m to MethodInvocation at 0", "INS InfixExpression: != to IfStatement at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationStatement to Block at 2", "INS IfStatement to Block at 0", "INS EnhancedForStatement to Block at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getMessageId to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: getTrigger to MethodInvocation at 1", "INS SimpleName: message to MethodInvocation at 0", "INS SimpleName: trigger to InfixExpression: != at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: hasKey to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: shardName to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: nextMessage to VariableDeclarationFragment at 0", "INS SimpleType: Message to VariableDeclarationStatement at 0", "INS SimpleType: Message to VariableDeclarationStatement at 0", "INS IfStatement to Block at 3", "INS SimpleName: extractMessageFromColumn to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: queueName to MethodInvocation at 1", "INS SimpleName: trigger to VariableDeclarationFragment at 0", "INS SwitchCase to SwitchStatement at 6", "INS Block to IfStatement at 1", "INS SimpleName: setTrigger to MethodInvocation at 1", "INS SimpleName: MessageMetadataEntry to MethodInvocation at 0", "INS SimpleName: Message to SimpleType: Message at 0", "INS MethodInvocation to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: Trigger to SimpleType: Trigger at 0", "INS BreakStatement to Block at 4", "INS SimpleName: getKey to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: nextMessage to MethodInvocation at 2", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SwitchStatement to Block at 2", "INS SimpleName: newMessageId to MethodInvocation at 1", "INS SimpleType: Trigger to VariableDeclarationStatement at 0", "INS SimpleName: fillMessageMutation to MethodInvocation at 0", "INS Block to SwitchStatement at 5", "INS IfStatement to Block at 1", "INS Block to IfStatement at 1", "INS SimpleName: withRow to MethodInvocation at 1", "INS SimpleName: message to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 0", "INS Block to EnhancedForStatement at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: getCompositeKey to MethodInvocation at 0"]}, {"root": "UPDATE from idleQueue to fillAckMutation", "operations": ["UPD SimpleName: idleQueue from idleQueue to fillAckMutation", "UPD SimpleName: stats from stats to fillAckMutation", "UPD SimpleName: workQueue from workQueue to fillAckMutation"]}, {"root": "UPDATE from add to message", "operations": ["UPD SimpleName: add from add to message", "UPD SimpleName: incFinishMessageCount from incFinishMessageCount to message", "UPD SimpleName: messages from messages to message", "UPD SimpleName: hook from hook to message", "UPD SimpleName: add from add to message", "UPD SimpleName: mb from mb to message"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: setConsistencyLevel to MethodInvocation at 1", "INS SimpleName: consistencyLevel to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS SimpleName: mb to MethodInvocation at 2", "operations": ["INS SimpleName: mb to MethodInvocation at 2"]}, {"root": "INS SimpleName: response to VariableDeclarationFragment at 0", "operations": ["INS SimpleName: response to VariableDeclarationFragment at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: Lists to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: message to MethodInvocation at 2", "INS SimpleName: sendMessages to MethodInvocation at 0"]}, {"root": "UPDATE from counter to getKey", "operations": ["UPD SimpleName: counter from counter to getKey", "UPD SimpleName: getTriggerTime from getTriggerTime to getKey"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: counter to MethodInvocation at 1"]}, {"root": "UPDATE from entry to lockColumn", "operations": ["UPD SimpleName: entry from entry to lockColumn"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: entry to VariableDeclarationFragment at 0"]}, {"root": "MOVE from ParameterizedType: Map<String,Message>", "operations": ["MOV SimpleType: Map to ParameterizedType: Map<String,Message> at 0", "MOV SimpleType: Message to ParameterizedType: List<Message> at 1"]}, {"root": "UPDATE from response to success", "operations": ["UPD SimpleName: response from response to success", "UPD SimpleName: hook from hook to success"]}, {"root": "UPDATE from MessageQueueHooks to Message", "operations": ["UPD SimpleName: MessageQueueHooks from MessageQueueHooks to Message", "UPD SimpleType: MessageQueueHooks from MessageQueueHooks to Message", "UPD SimpleName: MessageQueueHooks from MessageQueueHooks to Message"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: getKey to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: && at 1", "INS SimpleName: notUniqueKeys to MethodInvocation at 0", "INS SimpleName: message to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: && at 0", "INS IfStatement to Block at 0", "INS SimpleName: contains to MethodInvocation at 1", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: hasKey to MethodInvocation at 1", "INS ContinueStatement to IfStatement at 1", "INS SimpleName: message to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: message to MethodInvocation at 2", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: fillMessageMutation to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: mb to MethodInvocation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: messageId to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1"]}, {"root": "INS SingleVariableDeclaration to CatchClause at 0", "operations": ["INS SimpleName: ConnectionException to SimpleType: ConnectionException at 0", "INS SimpleType: ConnectionException to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to CatchClause at 0", "INS SimpleName: e to SingleVariableDeclaration at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getTrigger to MethodInvocation at 1"]}, {"root": "UPDATE from getToken to getMessageId", "operations": ["UPD SimpleName: getToken from getToken to getMessageId"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getToken to MethodInvocation at 1"]}, {"root": "UPDATE from \"CompositeType(BytesType, BytesType, TimeUUIDType, BytesType)\" to \"CompositeType(BytesType, BytesType(reversed=true), TimeUUIDType, BytesType)\"", "operations": ["UPD StringLiteral: \"CompositeType(BytesType, BytesType, TimeUUIDType, BytesType)\" from \"CompositeType(BytesType, BytesType, TimeUUIDType, BytesType)\" to \"CompositeType(BytesType, BytesType(reversed=true), TimeUUIDType, BytesType)\""]}, {"root": "MOVE from IfStatement", "operations": ["MOV PrefixExpression: ! to IfStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: ColumnList<MessageQueueEntry> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: ColumnList<MessageQueueEntry> to VariableDeclarationStatement at 0"]}, {"root": "INS ParameterizedType: ColumnList<MessageQueueEntry> to VariableDeclarationStatement at 0", "operations": ["INS ParameterizedType: ColumnList<MessageQueueEntry> to VariableDeclarationStatement at 0", "INS SimpleType: MessageQueueEntry to ParameterizedType: ColumnList<MessageQueueEntry> at 1", "INS SimpleName: ColumnList to SimpleType: ColumnList at 0", "INS SimpleName: MessageQueueEntry to SimpleType: MessageQueueEntry at 0", "INS SimpleType: ColumnList to ParameterizedType: ColumnList<MessageQueueEntry> at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS StringLiteral: \"Error reading shard \" to InfixExpression: + at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: LOG to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: error to MethodInvocation at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: e to MethodInvocation at 3", "INS SimpleName: shardName to InfixExpression: + at 1"]}, {"root": "INS ParameterizedType: ColumnList<MessageQueueEntry> to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: MessageQueueEntry to ParameterizedType: ColumnList<MessageQueueEntry> at 1", "INS ParameterizedType: ColumnList<MessageQueueEntry> to VariableDeclarationStatement at 0", "INS SimpleName: MessageQueueEntry to SimpleType: MessageQueueEntry at 0", "INS SimpleType: ColumnList to ParameterizedType: ColumnList<MessageQueueEntry> at 0", "INS SimpleName: ColumnList to SimpleType: ColumnList at 0"]}, {"root": "MOVE from EnhancedForStatement", "operations": ["MOV SingleVariableDeclaration to EnhancedForStatement at 0", "MOV SimpleName: result to EnhancedForStatement at 1"]}, {"root": "UPDATE from convert to getFirst", "operations": ["UPD SimpleName: convert from convert to getFirst"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: convert to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from message to Maps", "operations": ["UPD SimpleName: message from message to Maps"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getTriggerTime to MethodInvocation at 1", "MOV SimpleName: message to MethodInvocation at 0"]}, {"root": "UPDATE from getTriggerTime to newHashMap", "operations": ["UPD SimpleName: getTriggerTime from getTriggerTime to newHashMap"]}, {"root": "UPDATE from counter to Sets", "operations": ["UPD SimpleName: counter from counter to Sets"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: counter to MethodInvocation at 0", "MOV SimpleName: incrementAndGet to MethodInvocation at 1"]}, {"root": "UPDATE from incrementAndGet to newHashSet", "operations": ["UPD SimpleName: incrementAndGet from incrementAndGet to newHashSet"]}, {"root": "UPDATE from TimeUUIDUtils to Lists", "operations": ["UPD SimpleName: TimeUUIDUtils from TimeUUIDUtils to Lists", "UPD SimpleName: stats from stats to Lists"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: TimeUUIDUtils to MethodInvocation at 0", "MOV SimpleName: getMicrosTimeUUID to MethodInvocation at 1"]}, {"root": "UPDATE from getMicrosTimeUUID to newArrayList", "operations": ["UPD SimpleName: getMicrosTimeUUID from getMicrosTimeUUID to newArrayList"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: MessageQueueEntry to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: message to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV IfStatement to Block at 1", "MOV IfStatement to Block at 3"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS Block to IfStatement at 1", "INS SimpleName: partition to MethodInvocation at 0", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS SimpleName: getLastCount to MethodInvocation at 1", "INS PrefixExpression: ! to IfStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS ReturnStatement to Block at 0", "INS NullLiteral to ReturnStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: hasMessages to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS ThisExpression to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: lock to MethodInvocation at 0", "INS SimpleName: getType to MethodInvocation at 1", "INS SimpleName: lockColumnCount to PostfixExpression: ++ at 0", "INS IfStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS PostfixExpression: ++ to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS QualifiedName: MessageQueueEntryType.Lock to InfixExpression: == at 1", "INS InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1", "MOV IfStatement to Block at 0"]}, {"root": "UPDATE from getBusyEntry to keyspace", "operations": ["UPD SimpleName: getBusyEntry from getBusyEntry to keyspace"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: message to MethodInvocation at 1", "MOV SimpleName: getBusyEntry to MethodInvocation at 0"]}, {"root": "UPDATE from message to prepareMutationBatch", "operations": ["UPD SimpleName: message from message to prepareMutationBatch"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: withRow to MethodInvocation at 1", "MOV SimpleName: mb to MethodInvocation at 0"]}, {"root": "UPDATE from withRow to execute", "operations": ["UPD SimpleName: withRow from withRow to execute", "UPD SimpleName: printStackTrace from printStackTrace to execute"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV MethodInvocation to InfixExpression: + at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS SimpleName: getMessages to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from currentTimeMillis to entrySet", "operations": ["UPD SimpleName: currentTimeMillis from currentTimeMillis to entrySet"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: message to MethodInvocation at 0", "MOV SimpleName: getToken to MethodInvocation at 1"]}, {"root": "UPDATE from getToken to hasKey", "operations": ["UPD SimpleName: getToken from getToken to hasKey"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ThrowStatement to Block at 0"]}, {"root": "UPDATE from writeValue to put", "operations": ["UPD SimpleName: writeValue from writeValue to put", "UPD SimpleName: beforeSendMessage from beforeSendMessage to put"]}, {"root": "UPDATE from message to messageId", "operations": ["UPD SimpleName: message from message to messageId"]}, {"root": "INS SimpleType: MessageQueueShard to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: MessageQueueShard to SimpleType: MessageQueueShard at 0", "INS SimpleType: MessageQueueShard to VariableDeclarationStatement at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: != to InfixExpression: && at 0", "INS InfixExpression: && to IfStatement at 0", "INS NullLiteral to InfixExpression: != at 1", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: messages to InfixExpression: != at 0"]}, {"root": "INS ReturnStatement to IfStatement at 1", "operations": ["INS ReturnStatement to IfStatement at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: stats to MethodInvocation at 0", "MOV SimpleName: incEmptyPartitionCount to MethodInvocation at 1"]}, {"root": "UPDATE from incEmptyPartitionCount to newLinkedList", "operations": ["UPD SimpleName: incEmptyPartitionCount from incEmptyPartitionCount to newLinkedList"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getName to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: partitions to MethodInvocation at 0", "INS SimpleName: itemsToPop to InfixExpression: - at 0", "INS InfixExpression: - to MethodInvocation at 2", "INS SimpleName: addAll to MethodInvocation at 1", "INS SimpleName: size to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: index to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: - at 1", "INS SimpleName: messages to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: get to MethodInvocation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: MessageQueueException to ClassInstanceCreation at 0"]}, {"root": "UPDATE from messages to result", "operations": ["UPD SimpleName: messages from messages to result"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV Block to SwitchStatement at 7", "MOV SwitchCase to SwitchStatement at 1", "MOV SwitchCase to SwitchStatement at 4", "MOV MethodInvocation to SwitchStatement at 0", "MOV IfStatement to SwitchStatement at 2", "MOV BreakStatement to SwitchStatement at 3"]}, {"root": "UPDATE from System to response", "operations": ["UPD SimpleName: System from System to response"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: System to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: Integer to SimpleType: Integer at 0", "INS CastExpression to MethodInvocation at 3", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: lockTtl to CastExpression at 1", "INS SimpleName: lockColumn to MethodInvocation at 2", "INS SimpleName: putEmptyColumn to MethodInvocation at 1", "INS SimpleType: Integer to CastExpression at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: groupKey to MethodInvocation at 3", "INS SimpleName: keyIndexColumnFamily to MethodInvocation at 2"]}, {"root": "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "operations": ["INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0"]}, {"root": "UPDATE from \"Failed to insert message into queue\" to \"Failed to insert messages into queue.\"", "operations": ["UPD StringLiteral: \"Failed to insert message into queue\" from \"Failed to insert message into queue\" to \"Failed to insert messages into queue.\""]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: messages to Assignment: = at 0", "operations": ["INS SimpleName: messages to Assignment: = at 0"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: partition to MethodInvocation at 1", "INS SimpleName: itemsToPop to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: readAndReturnShard to MethodInvocation at 0"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV SimpleName: messages to ReturnStatement at 0"]}, {"root": "MOVE from InfixExpression: ==", "operations": ["MOV MethodInvocation to InfixExpression: == at 0", "MOV SimpleName: currentPartition to InfixExpression: == at 1"]}, {"root": "UPDATE from currentPartition to itemsToPop", "operations": ["UPD SimpleName: currentPartition from currentPartition to itemsToPop"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV SimpleName: messages to InfixExpression: != at 0", "MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 1", "MOV ExpressionStatement to Block at 4", "MOV IfStatement to Block at 2", "MOV ExpressionStatement to Block at 3"]}, {"root": "UPDATE from baos to groupKey", "operations": ["UPD SimpleName: baos from baos to groupKey", "UPD SimpleName: baos from baos to groupKey"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: getCompositeKey to MethodInvocation at 0", "INS SimpleName: message to MethodInvocation at 0", "INS SimpleName: queueName to MethodInvocation at 1", "INS SimpleName: getKey to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from settings to keys", "operations": ["UPD SimpleName: settings from settings to keys", "UPD SimpleName: mapper from mapper to keys", "UPD SimpleName: getQueueKey from getQueueKey to keys"]}, {"root": "MOVE from InfixExpression: !=", "operations": ["MOV SimpleName: partition to InfixExpression: != at 0", "MOV NullLiteral to InfixExpression: != at 1"]}, {"root": "UPDATE from internalReadMessages to readAndReturnShard", "operations": ["UPD SimpleName: internalReadMessages from internalReadMessages to readAndReturnShard"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1"]}, {"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 1", "operations": ["INS SimpleName: getName to MethodInvocation at 1", "INS SimpleName: partition to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 1"]}, {"root": "UPDATE from Thread to peekMessages", "operations": ["UPD SimpleName: Thread from Thread to peekMessages"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Thread to MethodInvocation at 0", "MOV SimpleName: pollInterval to MethodInvocation at 0"]}, {"root": "UPDATE from getPartition to size", "operations": ["UPD SimpleName: getPartition from getPartition to size"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 2", "MOV InfixExpression: != to IfStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: baos to MethodInvocation at 0", "MOV SimpleName: flush to MethodInvocation at 1"]}, {"root": "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0", "operations": ["INS SimpleName: MessageQueueException to SimpleType: MessageQueueException at 0", "INS SimpleType: MessageQueueException to ClassInstanceCreation at 0"]}, {"root": "INS InfixExpression: + to ClassInstanceCreation at 1", "operations": ["INS StringLiteral: \"Failed to check keys for uniqueness (1): \" to InfixExpression: + at 0", "INS SimpleName: keys to InfixExpression: + at 1", "INS InfixExpression: + to ClassInstanceCreation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 2", "MOV SwitchStatement to Block at 4", "MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: String to SimpleType: String at 0"]}, {"root": "UPDATE from baos to notUniqueKeys", "operations": ["UPD SimpleName: baos from baos to notUniqueKeys"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: toByteArray to MethodInvocation at 2", "MOV SimpleName: baos to MethodInvocation at 0"]}, {"root": "UPDATE from toByteArray to messageKey", "operations": ["UPD SimpleName: toByteArray from toByteArray to messageKey"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV CastExpression to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS SimpleName: lockColumnCount to InfixExpression: + at 1", "INS SimpleName: setLimit to MethodInvocation at 1", "INS NumberLiteral: 1 to InfixExpression: + at 2", "INS SimpleName: RangeBuilder to SimpleType: RangeBuilder at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleType: RangeBuilder to ClassInstanceCreation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: itemsToPop to InfixExpression: + at 0"]}, {"root": "UPDATE from putColumn to withColumnRange", "operations": ["UPD SimpleName: putColumn from putColumn to withColumnRange"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: putColumn to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getVisibilityTimeout to MethodInvocation at 1", "MOV SimpleName: settings to MethodInvocation at 0"]}, {"root": "UPDATE from getVisibilityTimeout to get", "operations": ["UPD SimpleName: getVisibilityTimeout from getVisibilityTimeout to get"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV CastExpression to MethodInvocation at 2"]}, {"root": "UPDATE from short to byte", "operations": ["UPD PrimitiveType: short from short to byte", "UPD PrimitiveType: short from short to byte", "UPD PrimitiveType: short from short to byte", "UPD PrimitiveType: short from short to byte"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS SimpleName: keyIndexColumnFamily to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getCompositeKey to MethodInvocation at 0", "INS SimpleName: settings to MethodInvocation at 0", "INS SimpleName: message to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getCompositeKey to MethodInvocation at 0", "INS SimpleName: getKey to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: newMessageId to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: timeoutEntry to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: queueName to MethodInvocation at 1", "INS SimpleName: putEmptyColumn to MethodInvocation at 1", "INS SimpleName: hasKey to MethodInvocation at 1", "INS SimpleName: m to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: MessageMetadataEntry to MethodInvocation at 0", "INS SimpleName: message to MethodInvocation at 0", "INS IfStatement to Block at 3", "INS MethodInvocation to MethodInvocation at 1", "INS SimpleName: withRow to MethodInvocation at 1", "INS SimpleName: getRetentionTimeout to MethodInvocation at 1", "INS SimpleName: getShardKey to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: timeoutEntry to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS MethodInvocation to MethodInvocation at 3", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getMessageId to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: columnFamily to MethodInvocation at 2", "MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: getTimestamp to MethodInvocation at 1", "INS SimpleName: lockColumn to MethodInvocation at 0"]}, {"root": "UPDATE from entry to keySet", "operations": ["UPD SimpleName: entry from entry to keySet"]}, {"root": "INS MethodInvocation to MethodInvocation at 4", "operations": ["INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: settings to MethodInvocation at 0", "INS SimpleName: getRetentionTimeout to MethodInvocation at 1"]}, {"root": "UPDATE from columnFamily to keyIndexColumnFamily", "operations": ["UPD SimpleName: columnFamily from columnFamily to keyIndexColumnFamily"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV CastExpression to MethodInvocation at 2"]}, {"root": "INS CastExpression to MethodInvocation at 2", "operations": ["INS CastExpression to MethodInvocation at 2", "INS SimpleName: ordinal to MethodInvocation at 1", "INS QualifiedName: MessageQueueEntryType.Message to MethodInvocation at 0", "INS PrimitiveType: byte to CastExpression at 0", "INS MethodInvocation to CastExpression at 1"]}, {"root": "INS CastExpression to MethodInvocation at 2", "operations": ["INS CastExpression to MethodInvocation at 2", "INS PrimitiveType: byte to CastExpression at 0", "INS NumberLiteral: 0 to CastExpression at 1"]}, {"root": "MOVE from SimpleType: Message", "operations": ["MOV SimpleName: MessageQueueHooks to SimpleType: Message at 0"]}, {"root": "UPDATE from beforeAckMessages to nextMessage", "operations": ["UPD SimpleName: beforeAckMessages from beforeAckMessages to nextMessage"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: hook to MethodInvocation at 1", "MOV SimpleName: m to MethodInvocation at 1", "MOV SimpleName: beforeAckMessages to MethodInvocation at 0", "MOV SimpleName: entries to MethodInvocation at 2"]}, {"root": "UPDATE from entries to trigger", "operations": ["UPD SimpleName: entries from entries to trigger"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV ParenthesizedExpression to InfixExpression: + at 2"]}, {"root": "UPDATE from hook to clone", "operations": ["UPD SimpleName: hook from hook to clone"]}, {"root": "INS SimpleName: counter to MethodInvocation at 0", "operations": ["INS SimpleName: counter to MethodInvocation at 0"]}, {"root": "INS SimpleName: incrementAndGet to MethodInvocation at 1", "operations": ["INS SimpleName: incrementAndGet to MethodInvocation at 1"]}, {"root": "DEL PrimitiveType: long", "operations": ["DEL PrimitiveType: long"]}, {"root": "DEL PrimitiveType: long", "operations": ["DEL PrimitiveType: long"]}, {"root": "DEL MethodInvocation", "operations": ["DEL QualifiedName: TimeUnit.DAYS", "DEL MethodInvocation", "DEL SimpleName: convert", "DEL QualifiedName: TimeUnit.SECONDS", "DEL NumberLiteral: 4"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL NumberLiteral: 1", "operations": ["DEL NumberLiteral: 1"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL NumberLiteral: 30", "DEL SimpleName: convert", "DEL QualifiedName: TimeUnit.MICROSECONDS", "DEL QualifiedName: TimeUnit.SECONDS"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL NumberLiteral: 1", "operations": ["DEL NumberLiteral: 1"]}, {"root": "DEL Assignment: =", "operations": ["DEL Assignment: =", "DEL SimpleName: mapper"]}, {"root": "DEL SimpleType: Long", "operations": ["DEL SimpleType: Long"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL ThrowStatement", "operations": ["DEL ThrowStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL Block"]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL SimpleName: partition", "operations": ["DEL SimpleName: partition"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL PrefixExpression: !"]}, {"root": "DEL Block", "operations": ["DEL ReturnStatement", "DEL Block"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL SimpleName: partition", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: Thread", "DEL MethodInvocation", "DEL SimpleName: sleep", "DEL SimpleName: pollInterval", "DEL ExpressionStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: sleep"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL CatchClause", "DEL TryStatement", "DEL Block", "DEL IfStatement", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: e", "DEL WhileStatement", "DEL Block", "DEL Block", "DEL PrefixExpression: !", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL Block", "DEL Block", "DEL IfStatement", "DEL Block", "DEL SimpleType: BusyLockException", "DEL InfixExpression: ==", "DEL InfixExpression: &&", "DEL InfixExpression: ||", "DEL ExpressionStatement", "DEL InfixExpression: !=", "DEL InfixExpression: !=", "DEL Block", "DEL IfStatement", "DEL Block", "DEL MethodDeclaration", "DEL IfStatement"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: entry", "DEL MethodInvocation", "DEL SimpleName: getPriority"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL EnhancedForStatement", "DEL Block", "DEL BreakStatement", "DEL Block", "DEL Block", "DEL IfStatement", "DEL SwitchStatement", "DEL SwitchCase"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: hook", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL SimpleName: hooks", "DEL SimpleType: MessageQueueHooks", "DEL ExpressionStatement"]}, {"root": "DEL SimpleName: ackMessage", "operations": ["DEL SimpleName: ackMessage"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL Block", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: entry", "DEL SimpleName: messages", "DEL Block", "DEL IfStatement", "DEL SimpleName: deleteColumn", "DEL SimpleName: getQueueKey", "DEL EnhancedForStatement", "DEL Block", "DEL SimpleName: entry", "DEL SimpleName: columnFamily", "DEL Block", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL PrimitiveType: long", "operations": ["DEL PrimitiveType: long"]}, {"root": "DEL SimpleName: curTimeMicros", "operations": ["DEL SimpleName: curTimeMicros"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL SimpleName: ByteArrayOutputStream", "DEL SimpleType: ByteArrayOutputStream"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL StringLiteral: \"Failed to serialize message data\"", "operations": ["DEL StringLiteral: \"Failed to serialize message data\""]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL InfixExpression: =="]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: entry", "DEL MethodInvocation"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ExpressionStatement", "DEL Block", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: curTimeMicros", "DEL MethodInvocation", "DEL QualifiedName: TimeUnit.MILLISECONDS", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: messages", "DEL Block", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL Assignment: =", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL InfixExpression: %", "DEL SimpleName: setToken", "DEL NumberLiteral: 1000", "DEL InfixExpression: ==", "DEL QualifiedName: TimeUnit.MILLISECONDS", "DEL QualifiedName: MessageQueueEntryState.Waiting", "DEL SimpleName: getPriority", "DEL SimpleName: incSendMessageCount", "DEL SimpleName: mb", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: withRow", "DEL ParameterizedType: Map<Message,UUID>", "DEL SimpleName: convert", "DEL SimpleType: UUID", "DEL SimpleName: incrementAndGet", "DEL SimpleName: e", "DEL ParameterizedType: Map<Message,UUID>", "DEL MethodDeclaration", "DEL ThrowStatement", "DEL CastExpression", "DEL MethodInvocation", "DEL AnonymousClassDeclaration", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL QualifiedName: TimeUnit.MICROSECONDS", "DEL SimpleName: message", "DEL ReturnStatement", "DEL SimpleName: message", "DEL SimpleName: stats", "DEL SimpleType: String", "DEL IfStatement", "DEL SimpleName: message", "DEL SimpleName: curTimeMicros", "DEL StringLiteral: \"Failed to insert message into queue\"", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ReturnStatement", "DEL PrimitiveType: int", "DEL InfixExpression: +", "DEL Block", "DEL CatchClause", "DEL MethodDeclaration", "DEL QualifiedName: TimeUnit.MICROSECONDS", "DEL ClassInstanceCreation", "DEL SimpleName: curTimeMicros", "DEL SimpleName: newMessageEntry", "DEL SimpleType: UUID", "DEL Block", "DEL TryStatement", "DEL SimpleName: entry", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL InfixExpression: +", "DEL ParenthesizedExpression", "DEL SimpleName: getToken", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL Block", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL CatchClause", "DEL NumberLiteral: 0", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL TryStatement", "DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: response"]}]}}, {"ShardedDistributedMessageQueue_diff": {"operations": ["Insert ImportDeclaration(17) into CompilationUnit(4939) at 8", "Insert ImportDeclaration(29) into CompilationUnit(4939) at 14", "Insert ImportDeclaration(35) into CompilationUnit(4939) at 17", "Insert ImportDeclaration(37) into CompilationUnit(4939) at 18", "Insert ImportDeclaration(45) into CompilationUnit(4939) at 22", "Insert ImportDeclaration(53) into CompilationUnit(4939) at 26", "Insert ImportDeclaration(63) into CompilationUnit(4939) at 31", "Insert ImportDeclaration(75) into CompilationUnit(4939) at 37", "Insert ImportDeclaration(77) into CompilationUnit(4939) at 38", "Insert ImportDeclaration(81) into CompilationUnit(4939) at 40", "Move FieldDeclaration(592) into TypeDeclaration: class(4938) at 14", "Move FieldDeclaration(629) into TypeDeclaration: class(4938) at 20", "Move MethodDeclaration(2902) into TypeDeclaration: class(4938) at 36", "Insert QualifiedName: java.util.Set(16) into ImportDeclaration(17) at 0", "Insert QualifiedName: org.apache.commons.lang.StringUtils(28) into ImportDeclaration(29) at 0", "Insert QualifiedName: org.slf4j.Logger(34) into ImportDeclaration(35) at 0", "Insert QualifiedName: org.slf4j.LoggerFactory(36) into ImportDeclaration(37) at 0", "Insert QualifiedName: com.google.common.collect.Iterables(44) into ImportDeclaration(45) at 0", "Insert QualifiedName: com.google.common.collect.Sets(52) into ImportDeclaration(53) at 0", "Insert QualifiedName: com.netflix.astyanax.connectionpool.exceptions.NotFoundException(62) into ImportDeclaration(63) at 0", "Insert QualifiedName: com.netflix.astyanax.model.Row(74) into ImportDeclaration(75) at 0", "Insert QualifiedName: com.netflix.astyanax.model.Rows(76) into ImportDeclaration(77) at 0", "Insert QualifiedName: com.netflix.astyanax.recipes.scheduler.Trigger(80) into ImportDeclaration(81) at 0", "Insert FieldDeclaration(167) into TypeDeclaration: class(4938) at 4", "Insert FieldDeclaration(755) into TypeDeclaration: class(4938) at 25", "Insert FieldDeclaration(829) into TypeDeclaration: class(4938) at 33", "Insert MethodDeclaration(1124) into TypeDeclaration: class(4938) at 39", "Insert MethodDeclaration(1166) into TypeDeclaration: class(4938) at 40", "Insert MethodDeclaration(1512) into TypeDeclaration: class(4938) at 46", "Insert MethodDeclaration(1653) into TypeDeclaration: class(4938) at 47", "Insert MethodDeclaration(1760) into TypeDeclaration: class(4938) at 48", "Insert MethodDeclaration(1936) into TypeDeclaration: class(4938) at 49", "Insert MethodDeclaration(2008) into TypeDeclaration: class(4938) at 50", "Insert MethodDeclaration(2100) into TypeDeclaration: class(4938) at 51", "Insert MethodDeclaration(2251) into TypeDeclaration: class(4938) at 52", "Insert MethodDeclaration(2352) into TypeDeclaration: class(4938) at 53", "Insert MethodDeclaration(2430) into TypeDeclaration: class(4938) at 54", "Insert MethodDeclaration(4736) into TypeDeclaration: class(4938) at 56", "Insert MethodDeclaration(4937) into TypeDeclaration: class(4938) at 57", "Insert Modifier: private(154) into FieldDeclaration(167) at 0", "Insert Modifier: static(155) into FieldDeclaration(167) at 1", "Insert Modifier: final(156) into FieldDeclaration(167) at 2", "Insert SimpleType: Logger(158) into FieldDeclaration(167) at 3", "Insert VariableDeclarationFragment(166) into FieldDeclaration(167) at 4", "Insert SimpleType: Integer(222) into FieldDeclaration(232) at 3", "Insert SimpleType: Boolean(249) into FieldDeclaration(253) at 3", "Insert SimpleType: String(258) into FieldDeclaration(262) at 3", "Update Modifier: public(236) to private", "Insert Modifier: final(292) into FieldDeclaration(310) at 1", "Insert ParameterizedType: AnnotatedCompositeSerializer<MessageMetadataEntry>(298) into FieldDeclaration(310) at 3", "Insert Modifier: static(312) into FieldDeclaration(321) at 1", "Move ExpressionStatement(256) into Block(333) at 2", "Insert Javadoc(337) into TypeDeclaration: class(707) at 0", "Insert MethodDeclaration(479) into TypeDeclaration: class(707) at 10", "Insert MethodDeclaration(670) into TypeDeclaration: class(707) at 20", "Insert ParameterizedType: ColumnFamily<String,MessageMetadataEntry>(726) into FieldDeclaration(729) at 1", "Insert VariableDeclarationFragment(728) into FieldDeclaration(729) at 2", "Insert Modifier: private(749) into FieldDeclaration(755) at 0", "Insert SimpleType: Integer(751) into FieldDeclaration(755) at 1", "Move VariableDeclarationFragment(628) into FieldDeclaration(755) at 2", "Insert Modifier: private(823) into FieldDeclaration(829) at 0", "Insert SimpleType: Boolean(825) into FieldDeclaration(829) at 1", "Insert VariableDeclarationFragment(828) into FieldDeclaration(829) at 2", "Update SimpleName: getQueueKey(892) to getShardKey", "Update SimpleName: getQueueKey(917) to getShardKey", "Insert Modifier: private(1106) into MethodDeclaration(1124) at 0", "Insert SimpleType: String(1108) into MethodDeclaration(1124) at 1", "Insert SimpleName: getCompositeKey(1109) into MethodDeclaration(1124) at 2", "Insert SingleVariableDeclaration(1113) into MethodDeclaration(1124) at 3", "Insert SingleVariableDeclaration(1117) into MethodDeclaration(1124) at 4", "Insert Block(1123) into MethodDeclaration(1124) at 5", "Insert Modifier: private(1125) into MethodDeclaration(1166) at 0", "Insert Modifier: static(1126) into MethodDeclaration(1166) at 1", "Insert ArrayType: String[](1130) into MethodDeclaration(1166) at 2", "Insert SimpleName: splitCompositeKey(1131) into MethodDeclaration(1166) at 3", "Insert SingleVariableDeclaration(1135) into MethodDeclaration(1166) at 4", "Insert SimpleType: MessageQueueException(1137) into MethodDeclaration(1166) at 5", "Insert Block(1165) into MethodDeclaration(1166) at 6", "Insert Block(1440) into MethodDeclaration(1441) at 5", "Insert MarkerAnnotation(1443) into MethodDeclaration(1512) at 0", "Move Modifier: public(1151) into MethodDeclaration(1512) at 1", "Move PrimitiveType: void(1152) into MethodDeclaration(1512) at 2", "Update SimpleName: createQueue(1153) to deleteQueue", "Move SimpleName: createQueue(1153) into MethodDeclaration(1512) at 3", "Insert SimpleType: MessageQueueException(1448) into MethodDeclaration(1512) at 4", "Insert Block(1511) into MethodDeclaration(1512) at 5", "Insert MarkerAnnotation(1514) into MethodDeclaration(1653) at 0", "Insert Modifier: public(1515) into MethodDeclaration(1653) at 1", "Insert SimpleType: Message(1517) into MethodDeclaration(1653) at 2", "Insert SimpleName: readMessage(1518) into MethodDeclaration(1653) at 3", "Insert SingleVariableDeclaration(1522) into MethodDeclaration(1653) at 4", "Insert SimpleType: MessageQueueException(1524) into MethodDeclaration(1653) at 5", "Insert Block(1652) into MethodDeclaration(1653) at 6", "Insert MarkerAnnotation(1655) into MethodDeclaration(1760) at 0", "Insert Modifier: public(1656) into MethodDeclaration(1760) at 1", "Insert SimpleType: Message(1658) into MethodDeclaration(1760) at 2", "Insert SimpleName: readMessageByKey(1659) into MethodDeclaration(1760) at 3", "Insert SingleVariableDeclaration(1663) into MethodDeclaration(1760) at 4", "Insert SimpleType: MessageQueueException(1665) into MethodDeclaration(1760) at 5", "Insert Block(1759) into MethodDeclaration(1760) at 6", "Insert MarkerAnnotation(1762) into MethodDeclaration(1936) at 0", "Insert Modifier: public(1763) into MethodDeclaration(1936) at 1", "Insert PrimitiveType: boolean(1764) into MethodDeclaration(1936) at 2", "Insert SimpleName: deleteMessageByKey(1765) into MethodDeclaration(1936) at 3", "Insert SingleVariableDeclaration(1769) into MethodDeclaration(1936) at 4", "Insert SimpleType: MessageQueueException(1771) into MethodDeclaration(1936) at 5", "Insert Block(1935) into MethodDeclaration(1936) at 6", "Insert MarkerAnnotation(1938) into MethodDeclaration(2008) at 0", "Insert Modifier: public(1939) into MethodDeclaration(2008) at 1", "Insert PrimitiveType: void(1940) into MethodDeclaration(2008) at 2", "Insert SimpleName: deleteMessage(1941) into MethodDeclaration(2008) at 3", "Insert SingleVariableDeclaration(1945) into MethodDeclaration(2008) at 4", "Insert SimpleType: MessageQueueException(1947) into MethodDeclaration(2008) at 5", "Insert Block(2007) into MethodDeclaration(2008) at 6", "Insert MarkerAnnotation(2010) into MethodDeclaration(2100) at 0", "Insert Modifier: public(2011) into MethodDeclaration(2100) at 1", "Insert PrimitiveType: void(2012) into MethodDeclaration(2100) at 2", "Insert SimpleName: deleteMessages(2013) into MethodDeclaration(2100) at 3", "Insert SingleVariableDeclaration(2020) into MethodDeclaration(2100) at 4", "Insert SimpleType: MessageQueueException(2022) into MethodDeclaration(2100) at 5", "Insert Block(2099) into MethodDeclaration(2100) at 6", "Insert MarkerAnnotation(2102) into MethodDeclaration(2251) at 0", "Insert Modifier: public(2103) into MethodDeclaration(2251) at 1", "Insert PrimitiveType: void(2104) into MethodDeclaration(2251) at 2", "Insert SimpleName: createStorage(2105) into MethodDeclaration(2251) at 3", "Insert SimpleType: MessageQueueException(2107) into MethodDeclaration(2251) at 4", "Insert Block(2250) into MethodDeclaration(2251) at 5", "Move MarkerAnnotation(2382) into MethodDeclaration(2352) at 0", "Insert Modifier: public(2254) into MethodDeclaration(2352) at 1", "Insert PrimitiveType: void(2255) into MethodDeclaration(2352) at 2", "Insert SimpleName: dropStorage(2256) into MethodDeclaration(2352) at 3", "Insert SimpleType: MessageQueueException(2258) into MethodDeclaration(2352) at 4", "Insert Block(2351) into MethodDeclaration(2352) at 5", "Move MarkerAnnotation(1150) into MethodDeclaration(2430) at 0", "Insert Modifier: public(2355) into MethodDeclaration(2430) at 1", "Insert PrimitiveType: void(2356) into MethodDeclaration(2430) at 2", "Insert SimpleName: createQueue(2357) into MethodDeclaration(2430) at 3", "Move SimpleType: MessageQueueException(1155) into MethodDeclaration(2430) at 4", "Insert Block(2429) into MethodDeclaration(2430) at 5", "Move MarkerAnnotation(2469) into MethodDeclaration(4736) at 0", "Move Modifier: public(2470) into MethodDeclaration(4736) at 1", "Move SimpleType: MessageProducer(2472) into MethodDeclaration(4736) at 2", "Move SimpleName: createProducer(2473) into MethodDeclaration(4736) at 3", "Insert Block(4735) into MethodDeclaration(4736) at 4", "Update Modifier: public(2669) to private", "Move Modifier: public(2669) into MethodDeclaration(4937) at 0", "Insert SimpleType: String(4739) into MethodDeclaration(4937) at 1", "Update SimpleName: sendMessages(2677) to fillMessageMutation", "Move SimpleName: sendMessages(2677) into MethodDeclaration(4937) at 2", "Insert SingleVariableDeclaration(4744) into MethodDeclaration(4937) at 3", "Move SingleVariableDeclaration(2714) into MethodDeclaration(4937) at 4", "Move SimpleType: MessageQueueException(2686) into MethodDeclaration(4937) at 5", "Insert Block(4936) into MethodDeclaration(4937) at 6", "Insert TextElement: Column families:(142) into TagElement(146) at 48", "Insert TextElement: Queue(143) into TagElement(146) at 49", "Insert TextElement: KeyLookup(144) into TagElement(146) at 50", "Insert TextElement: History(145) into TagElement(146) at 51", "Insert SimpleName: Logger(157) into SimpleType: Logger(158) at 0", "Insert SimpleName: LOG(159) into VariableDeclarationFragment(166) at 0", "Insert MethodInvocation(165) into VariableDeclarationFragment(166) at 1", "Insert SimpleName: Integer(221) into SimpleType: Integer(222) at 0", "Insert CastExpression(230) into VariableDeclarationFragment(231) at 1", "Insert SimpleName: Boolean(248) into SimpleType: Boolean(249) at 0", "Update SimpleName: DEFAULT_VISIBILITY_TIMEOUT(208) to DEFAULT_POISON_QUEUE_ENABLED", "Insert BooleanLiteral: false(251) into VariableDeclarationFragment(252) at 1", "Insert SimpleName: String(257) into SimpleType: String(258) at 0", "Update SimpleName: DEFAULT_SHARD_COUNT(220) to DEFAULT_METADATA_SUFFIX", "Insert StringLiteral: \"_metadata\"(260) into VariableDeclarationFragment(261) at 1", "Update SimpleName: DEFAULT_BUCKET_DURATION(228) to SCHEMA_CHANGE_DELAY", "Insert NumberLiteral: 3000(268) into VariableDeclarationFragment(269) at 1", "Update SimpleName: compositeSerializer(581) to entrySerializer", "Insert SimpleType: AnnotatedCompositeSerializer(295) into ParameterizedType: AnnotatedCompositeSerializer<MessageMetadataEntry>(298) at 0", "Insert SimpleType: MessageMetadataEntry(297) into ParameterizedType: AnnotatedCompositeSerializer<MessageMetadataEntry>(298) at 1", "Update SimpleName: DEFAULT_BUCKET_COUNT(240) to metadataSerializer", "Insert ClassInstanceCreation(308) into VariableDeclarationFragment(309) at 1", "Move ClassInstanceCreation(254) into VariableDeclarationFragment(320) at 1", "Insert TagElement: @author(336) into Javadoc(337) at 0", "Update SimpleName: withBuckets(322) to withTimeBuckets", "Insert Javadoc(425) into MethodDeclaration(457) at 0", "Insert SimpleType: Builder(428) into MethodDeclaration(457) at 2", "Update SimpleName: withVisibilityTimeout(354) to withBuckets", "Insert SingleVariableDeclaration(432) into MethodDeclaration(457) at 4", "Insert SingleVariableDeclaration(435) into MethodDeclaration(457) at 5", "Insert SingleVariableDeclaration(439) into MethodDeclaration(457) at 6", "Insert Modifier: public(458) into MethodDeclaration(479) at 0", "Move SimpleType: Builder(353) into MethodDeclaration(479) at 1", "Insert SimpleName: withRetentionTimeout(461) into MethodDeclaration(479) at 2", "Move SingleVariableDeclaration(358) into MethodDeclaration(479) at 3", "Move SingleVariableDeclaration(362) into MethodDeclaration(479) at 4", "Insert Block(478) into MethodDeclaration(479) at 5", "Insert Modifier: public(655) into MethodDeclaration(670) at 0", "Insert SimpleType: Builder(657) into MethodDeclaration(670) at 1", "Insert SimpleName: withPoisonQueue(658) into MethodDeclaration(670) at 2", "Insert SingleVariableDeclaration(662) into MethodDeclaration(670) at 3", "Insert Block(669) into MethodDeclaration(670) at 4", "Update SimpleName: columnFamily(601) to queueColumnFamily", "Insert SimpleType: ColumnFamily(721) into ParameterizedType: ColumnFamily<String,MessageMetadataEntry>(726) at 0", "Insert SimpleType: String(723) into ParameterizedType: ColumnFamily<String,MessageMetadataEntry>(726) at 1", "Insert SimpleType: MessageMetadataEntry(725) into ParameterizedType: ColumnFamily<String,MessageMetadataEntry>(726) at 2", "Insert SimpleName: keyIndexColumnFamily(727) into VariableDeclarationFragment(728) at 0", "Insert SimpleName: Integer(750) into SimpleType: Integer(751) at 0", "Insert SimpleName: Boolean(824) into SimpleType: Boolean(825) at 0", "Insert SimpleName: bPoisonQueueEnabled(826) into VariableDeclarationFragment(828) at 0", "Insert SimpleName: DEFAULT_POISON_QUEUE_ENABLED(827) into VariableDeclarationFragment(828) at 1", "Insert IfStatement(1087) into Block(1104) at 1", "Insert SimpleName: String(1107) into SimpleType: String(1108) at 0", "Insert SimpleType: String(1111) into SingleVariableDeclaration(1113) at 0", "Insert SimpleName: name(1112) into SingleVariableDeclaration(1113) at 1", "Insert SimpleType: String(1115) into SingleVariableDeclaration(1117) at 0", "Insert SimpleName: key(1116) into SingleVariableDeclaration(1117) at 1", "Insert ReturnStatement(1122) into Block(1123) at 0", "Insert SimpleType: String(1128) into ArrayType: String[](1130) at 0", "Insert Dimension(1129) into ArrayType: String[](1130) at 1", "Insert SimpleType: String(1133) into SingleVariableDeclaration(1135) at 0", "Insert SimpleName: key(1134) into SingleVariableDeclaration(1135) at 1", "Insert SimpleName: MessageQueueException(1136) into SimpleType: MessageQueueException(1137) at 0", "Insert VariableDeclarationStatement(1149) into Block(1165) at 0", "Insert IfStatement(1162) into Block(1165) at 1", "Insert ReturnStatement(1164) into Block(1165) at 2", "Insert IfStatement(1359) into Block(1375) at 1", "Insert ExpressionStatement(1391) into Block(1440) at 0", "Insert VariableDeclarationStatement(1402) into Block(1440) at 1", "Insert EnhancedForStatement(1419) into Block(1440) at 2", "Insert TryStatement(1439) into Block(1440) at 3", "Insert SimpleName: Override(1442) into MarkerAnnotation(1443) at 0", "Insert SimpleName: MessageQueueException(1447) into SimpleType: MessageQueueException(1448) at 0", "Insert ExpressionStatement(1456) into Block(1511) at 0", "Move VariableDeclarationStatement(2710) into Block(1511) at 1", "Insert EnhancedForStatement(1484) into Block(1511) at 2", "Insert ExpressionStatement(1490) into Block(1511) at 3", "Insert TryStatement(1510) into Block(1511) at 4", "Insert SimpleName: Override(1513) into MarkerAnnotation(1514) at 0", "Insert SimpleName: Message(1516) into SimpleType: Message(1517) at 0", "Insert SimpleType: String(1520) into SingleVariableDeclaration(1522) at 0", "Insert SimpleName: messageId(1521) into SingleVariableDeclaration(1522) at 1", "Insert SimpleName: MessageQueueException(1523) into SimpleType: MessageQueueException(1524) at 0", "Insert VariableDeclarationStatement(1534) into Block(1652) at 0", "Insert VariableDeclarationStatement(1542) into Block(1652) at 1", "Insert VariableDeclarationStatement(1553) into Block(1652) at 2", "Insert TryStatement(1651) into Block(1652) at 3", "Insert SimpleName: Override(1654) into MarkerAnnotation(1655) at 0", "Insert SimpleName: Message(1657) into SimpleType: Message(1658) at 0", "Insert SimpleType: String(1661) into SingleVariableDeclaration(1663) at 0", "Insert SimpleName: key(1662) into SingleVariableDeclaration(1663) at 1", "Insert SimpleName: MessageQueueException(1664) into SimpleType: MessageQueueException(1665) at 0", "Insert VariableDeclarationStatement(1674) into Block(1759) at 0", "Insert TryStatement(1758) into Block(1759) at 1", "Insert SimpleName: Override(1761) into MarkerAnnotation(1762) at 0", "Insert SimpleType: String(1767) into SingleVariableDeclaration(1769) at 0", "Insert SimpleName: key(1768) into SingleVariableDeclaration(1769) at 1", "Insert SimpleName: MessageQueueException(1770) into SimpleType: MessageQueueException(1771) at 0", "Insert VariableDeclarationStatement(1779) into Block(1935) at 0", "Insert VariableDeclarationStatement(1788) into Block(1935) at 1", "Insert TryStatement(1912) into Block(1935) at 2", "Insert TryStatement(1932) into Block(1935) at 3", "Insert ReturnStatement(1934) into Block(1935) at 4", "Insert SimpleName: Override(1937) into MarkerAnnotation(1938) at 0", "Insert SimpleType: String(1943) into SingleVariableDeclaration(1945) at 0", "Insert SimpleName: messageId(1944) into SingleVariableDeclaration(1945) at 1", "Insert SimpleName: MessageQueueException(1946) into SimpleType: MessageQueueException(1947) at 0", "Insert VariableDeclarationStatement(1957) into Block(2007) at 0", "Insert VariableDeclarationStatement(1965) into Block(2007) at 1", "Insert VariableDeclarationStatement(1976) into Block(2007) at 2", "Insert TryStatement(2006) into Block(2007) at 3", "Insert SimpleName: Override(2009) into MarkerAnnotation(2010) at 0", "Insert ParameterizedType: Collection<String>(2018) into SingleVariableDeclaration(2020) at 0", "Insert SimpleName: messageIds(2019) into SingleVariableDeclaration(2020) at 1", "Insert SimpleName: MessageQueueException(2021) into SimpleType: MessageQueueException(2022) at 0", "Move VariableDeclarationStatement(2405) into Block(2099) at 0", "Insert EnhancedForStatement(2078) into Block(2099) at 1", "Insert TryStatement(2098) into Block(2099) at 2", "Insert SimpleName: Override(2101) into MarkerAnnotation(2102) at 0", "Insert SimpleName: MessageQueueException(2106) into SimpleType: MessageQueueException(2107) at 0", "Move TryStatement(1205) into Block(2250) at 0", "Insert TryStatement(2249) into Block(2250) at 1", "Insert SimpleName: MessageQueueException(2257) into SimpleType: MessageQueueException(2258) at 0", "Insert TryStatement(2304) into Block(2351) at 0", "Insert TryStatement(2350) into Block(2351) at 1", "Move TryStatement(1274) into Block(2429) at 0", "Insert ReturnStatement(4734) into Block(4735) at 0", "Update SimpleName: UUID(2674) to String", "Move SimpleName: UUID(2674) into SimpleType: String(4739) at 0", "Insert SimpleType: MutationBatch(4742) into SingleVariableDeclaration(4744) at 0", "Insert SimpleName: mb(4743) into SingleVariableDeclaration(4744) at 1", "Move VariableDeclarationStatement(2719) into Block(4936) at 0", "Move IfStatement(2761) into Block(4936) at 1", "Move ExpressionStatement(2769) into Block(4936) at 2", "Move VariableDeclarationStatement(2784) into Block(4936) at 3", "Move VariableDeclarationStatement(2792) into Block(4936) at 4", "Move TryStatement(2816) into Block(4936) at 5", "Insert VariableDeclarationStatement(4860) into Block(4936) at 6", "Move ExpressionStatement(2838) into Block(4936) at 7", "Insert IfStatement(4911) into Block(4936) at 8", "Move EnhancedForStatement(2851) into Block(4936) at 9", "Move ExpressionStatement(2863) into Block(4936) at 10", "Insert ReturnStatement(4935) into Block(4936) at 11", "Insert SimpleName: LoggerFactory(160) into MethodInvocation(165) at 0", "Insert SimpleName: getLogger(161) into MethodInvocation(165) at 1", "Insert TypeLiteral(164) into MethodInvocation(165) at 2", "Insert PrimitiveType: int(224) into CastExpression(230) at 0", "Move MethodInvocation(189) into CastExpression(230) at 1", "Insert SimpleName: AnnotatedCompositeSerializer(294) into SimpleType: AnnotatedCompositeSerializer(295) at 0", "Insert SimpleName: MessageMetadataEntry(296) into SimpleType: MessageMetadataEntry(297) at 0", "Insert ParameterizedType: AnnotatedCompositeSerializer<MessageMetadataEntry>(304) into ClassInstanceCreation(308) at 0", "Insert TypeLiteral(307) into ClassInstanceCreation(308) at 1", "Insert MethodInvocation(331) into ExpressionStatement(332) at 0", "Insert TextElement:  elandau(335) into TagElement: @author(336) at 0", "Insert TagElement: @deprecated(424) into Javadoc(425) at 0", "Insert SimpleName: Builder(427) into SimpleType: Builder(428) at 0", "Insert PrimitiveType: int(430) into SingleVariableDeclaration(432) at 0", "Insert SimpleName: bucketCount(431) into SingleVariableDeclaration(432) at 1", "Insert PrimitiveType: int(433) into SingleVariableDeclaration(435) at 0", "Insert SimpleName: bucketDuration(434) into SingleVariableDeclaration(435) at 1", "Insert SimpleType: TimeUnit(437) into SingleVariableDeclaration(439) at 0", "Insert SimpleName: units(438) into SingleVariableDeclaration(439) at 1", "Insert ExpressionStatement(453) into Block(456) at 1", "Insert ReturnStatement(455) into Block(456) at 2", "Insert ExpressionStatement(475) into Block(478) at 0", "Move ReturnStatement(373) into Block(478) at 1", "Insert SimpleName: Builder(656) into SimpleType: Builder(657) at 0", "Insert SimpleType: Boolean(660) into SingleVariableDeclaration(662) at 0", "Insert SimpleName: enabled(661) into SingleVariableDeclaration(662) at 1", "Insert ExpressionStatement(666) into Block(669) at 0", "Insert ReturnStatement(668) into Block(669) at 1", "Insert ExpressionStatement(698) into Block(705) at 1", "Insert SimpleName: ColumnFamily(720) into SimpleType: ColumnFamily(721) at 0", "Update SimpleName: Long(624) to String", "Move SimpleName: Long(624) into SimpleType: String(723) at 0", "Insert SimpleName: MessageMetadataEntry(724) into SimpleType: MessageMetadataEntry(725) at 0", "Insert InfixExpression: !=(1069) into IfStatement(1087) at 0", "Insert ExpressionStatement(1082) into IfStatement(1087) at 1", "Insert ExpressionStatement(1086) into IfStatement(1087) at 2", "Insert SimpleName: String(1110) into SimpleType: String(1111) at 0", "Insert SimpleName: String(1114) into SimpleType: String(1115) at 0", "Insert InfixExpression: +(1121) into ReturnStatement(1122) at 0", "Insert SimpleName: String(1127) into SimpleType: String(1128) at 0", "Insert SimpleName: String(1132) into SimpleType: String(1133) at 0", "Insert ArrayType: String[](1141) into VariableDeclarationStatement(1149) at 0", "Insert VariableDeclarationFragment(1148) into VariableDeclarationStatement(1149) at 1", "Insert InfixExpression: !=(1152) into IfStatement(1162) at 0", "Insert Block(1161) into IfStatement(1162) at 1", "Insert SimpleName: parts(1163) into ReturnStatement(1164) at 0", "Insert InfixExpression: !=(1340) into IfStatement(1359) at 0", "Insert ExpressionStatement(1354) into IfStatement(1359) at 1", "Insert ExpressionStatement(1358) into IfStatement(1359) at 2", "Insert MethodInvocation(1390) into ExpressionStatement(1391) at 0", "Insert SimpleType: MutationBatch(1393) into VariableDeclarationStatement(1402) at 0", "Insert VariableDeclarationFragment(1401) into VariableDeclarationStatement(1402) at 1", "Insert SingleVariableDeclaration(1406) into EnhancedForStatement(1419) at 0", "Insert SimpleName: partitions(1407) into EnhancedForStatement(1419) at 1", "Insert Block(1418) into EnhancedForStatement(1419) at 2", "Insert Block(1424) into TryStatement(1439) at 0", "Insert CatchClause(1438) into TryStatement(1439) at 1", "Insert MethodInvocation(1455) into ExpressionStatement(1456) at 0", "Insert SingleVariableDeclaration(1471) into EnhancedForStatement(1484) at 0", "Insert SimpleName: partitions(1472) into EnhancedForStatement(1484) at 1", "Insert Block(1483) into EnhancedForStatement(1484) at 2", "Insert MethodInvocation(1489) into ExpressionStatement(1490) at 0", "Insert Block(1495) into TryStatement(1510) at 0", "Insert CatchClause(1509) into TryStatement(1510) at 1", "Insert SimpleName: String(1519) into SimpleType: String(1520) at 0", "Insert ArrayType: String[](1528) into VariableDeclarationStatement(1534) at 0", "Insert VariableDeclarationFragment(1533) into VariableDeclarationStatement(1534) at 1", "Insert SimpleType: String(1536) into VariableDeclarationStatement(1542) at 0", "Insert VariableDeclarationFragment(1541) into VariableDeclarationStatement(1542) at 1", "Insert SimpleType: MessageQueueEntry(1544) into VariableDeclarationStatement(1553) at 0", "Insert VariableDeclarationFragment(1552) into VariableDeclarationStatement(1553) at 1", "Insert Block(1628) into TryStatement(1651) at 0", "Insert CatchClause(1636) into TryStatement(1651) at 1", "Insert CatchClause(1650) into TryStatement(1651) at 2", "Insert SimpleName: String(1660) into SimpleType: String(1661) at 0", "Insert SimpleType: String(1667) into VariableDeclarationStatement(1674) at 0", "Insert VariableDeclarationFragment(1673) into VariableDeclarationStatement(1674) at 1", "Insert Block(1735) into TryStatement(1758) at 0", "Insert CatchClause(1743) into TryStatement(1758) at 1", "Insert CatchClause(1757) into TryStatement(1758) at 2", "Insert SimpleName: String(1766) into SimpleType: String(1767) at 0", "Insert SimpleType: MutationBatch(1773) into VariableDeclarationStatement(1779) at 0", "Insert VariableDeclarationFragment(1778) into VariableDeclarationStatement(1779) at 1", "Insert SimpleType: String(1781) into VariableDeclarationStatement(1788) at 0", "Insert VariableDeclarationFragment(1787) into VariableDeclarationStatement(1788) at 1", "Insert Block(1889) into TryStatement(1912) at 0", "Insert CatchClause(1897) into TryStatement(1912) at 1", "Insert CatchClause(1911) into TryStatement(1912) at 2", "Move Block(2870) into TryStatement(1932) at 0", "Insert CatchClause(1931) into TryStatement(1932) at 1", "Insert BooleanLiteral: true(1933) into ReturnStatement(1934) at 0", "Insert SimpleName: String(1942) into SimpleType: String(1943) at 0", "Insert ArrayType: String[](1951) into VariableDeclarationStatement(1957) at 0", "Insert VariableDeclarationFragment(1956) into VariableDeclarationStatement(1957) at 1", "Insert SimpleType: String(1959) into VariableDeclarationStatement(1965) at 0", "Insert VariableDeclarationFragment(1964) into VariableDeclarationStatement(1965) at 1", "Insert SimpleType: MessageQueueEntry(1967) into VariableDeclarationStatement(1976) at 0", "Insert VariableDeclarationFragment(1975) into VariableDeclarationStatement(1976) at 1", "Insert Block(1991) into TryStatement(2006) at 0", "Insert CatchClause(2005) into TryStatement(2006) at 1", "Insert SimpleType: Collection(2015) into ParameterizedType: Collection<String>(2018) at 0", "Insert SimpleType: String(2017) into ParameterizedType: Collection<String>(2018) at 1", "Insert SingleVariableDeclaration(2037) into EnhancedForStatement(2078) at 0", "Insert SimpleName: messageIds(2038) into EnhancedForStatement(2078) at 1", "Insert Block(2077) into EnhancedForStatement(2078) at 2", "Move Block(2643) into TryStatement(2098) at 0", "Insert CatchClause(2097) into TryStatement(2098) at 1", "Insert Block(2224) into TryStatement(2249) at 0", "Insert CatchClause(2248) into TryStatement(2249) at 1", "Insert Block(2279) into TryStatement(2304) at 0", "Insert CatchClause(2303) into TryStatement(2304) at 1", "Insert Block(2325) into TryStatement(2350) at 0", "Insert CatchClause(2349) into TryStatement(2350) at 1", "Insert ClassInstanceCreation(4733) into ReturnStatement(4734) at 0", "Update SimpleName: UUID(2691) to MutationBatch", "Move SimpleName: UUID(2691) into SimpleType: MutationBatch(4742) at 0", "Insert PrefixExpression: !(4758) into IfStatement(4797) at 0", "Insert SimpleType: String(4854) into VariableDeclarationStatement(4860) at 0", "Insert VariableDeclarationFragment(4859) into VariableDeclarationStatement(4860) at 1", "Insert MethodInvocation(4884) into IfStatement(4911) at 0", "Insert Block(4910) into IfStatement(4911) at 1", "Insert MethodInvocation(4934) into ReturnStatement(4935) at 0", "Insert SimpleType: ShardedDistributedMessageQueue(163) into TypeLiteral(164) at 0", "Insert SimpleType: AnnotatedCompositeSerializer(301) into ParameterizedType: AnnotatedCompositeSerializer<MessageMetadataEntry>(304) at 0", "Insert SimpleType: MessageMetadataEntry(303) into ParameterizedType: AnnotatedCompositeSerializer<MessageMetadataEntry>(304) at 1", "Insert SimpleType: MessageMetadataEntry(306) into TypeLiteral(307) at 0", "Insert SimpleName: mapper(329) into MethodInvocation(331) at 0", "Insert SimpleName: enableDefaultTyping(330) into MethodInvocation(331) at 1", "Insert TextElement:  Use withTimeBuckets instead(423) into TagElement: @deprecated(424) at 0", "Insert SimpleName: TimeUnit(436) into SimpleType: TimeUnit(437) at 0", "Insert MethodInvocation(452) into ExpressionStatement(453) at 0", "Insert ThisExpression(454) into ReturnStatement(455) at 0", "Insert MethodInvocation(474) into ExpressionStatement(475) at 0", "Insert SimpleName: Boolean(659) into SimpleType: Boolean(660) at 0", "Insert Assignment: =(665) into ExpressionStatement(666) at 0", "Insert ThisExpression(667) into ReturnStatement(668) at 0", "Insert Assignment: =(697) into ExpressionStatement(698) at 0", "Update SimpleName: getQueueKey(897) to getShardKey", "Insert MethodInvocation(1067) into InfixExpression: !=(1069) at 0", "Insert NullLiteral(1068) into InfixExpression: !=(1069) at 1", "Insert Assignment: =(1081) into ExpressionStatement(1082) at 0", "Insert Assignment: =(1085) into ExpressionStatement(1086) at 0", "Insert SimpleName: name(1118) into InfixExpression: +(1121) at 0", "Insert StringLiteral: \"$\"(1119) into InfixExpression: +(1121) at 1", "Insert SimpleName: key(1120) into InfixExpression: +(1121) at 2", "Insert SimpleType: String(1139) into ArrayType: String[](1141) at 0", "Insert Dimension(1140) into ArrayType: String[](1141) at 1", "Insert SimpleName: parts(1142) into VariableDeclarationFragment(1148) at 0", "Insert MethodInvocation(1147) into VariableDeclarationFragment(1148) at 1", "Insert QualifiedName: parts.length(1150) into InfixExpression: !=(1152) at 0", "Insert NumberLiteral: 2(1151) into InfixExpression: !=(1152) at 1", "Insert ThrowStatement(1160) into Block(1161) at 0", "Insert MethodInvocation(1338) into InfixExpression: !=(1340) at 0", "Insert NullLiteral(1339) into InfixExpression: !=(1340) at 1", "Insert Assignment: =(1353) into ExpressionStatement(1354) at 0", "Insert Assignment: =(1357) into ExpressionStatement(1358) at 0", "Insert SimpleName: LOG(1384) into MethodInvocation(1390) at 0", "Insert SimpleName: info(1385) into MethodInvocation(1390) at 1", "Insert InfixExpression: +(1389) into MethodInvocation(1390) at 2", "Insert SimpleName: MutationBatch(1392) into SimpleType: MutationBatch(1393) at 0", "Insert SimpleName: mb(1394) into VariableDeclarationFragment(1401) at 0", "Insert MethodInvocation(1400) into VariableDeclarationFragment(1401) at 1", "Insert SimpleType: MessageQueueShard(1404) into SingleVariableDeclaration(1406) at 0", "Insert SimpleName: partition(1405) into SingleVariableDeclaration(1406) at 1", "Insert ExpressionStatement(1417) into Block(1418) at 0", "Insert ExpressionStatement(1423) into Block(1424) at 0", "Move SingleVariableDeclaration(1245) into CatchClause(1438) at 0", "Insert Block(1437) into CatchClause(1438) at 1", "Insert SimpleName: LOG(1449) into MethodInvocation(1455) at 0", "Insert SimpleName: info(1450) into MethodInvocation(1455) at 1", "Insert InfixExpression: +(1454) into MethodInvocation(1455) at 2", "Move SimpleType: MessageQueueShard(1439) into SingleVariableDeclaration(1471) at 0", "Insert SimpleName: partition(1470) into SingleVariableDeclaration(1471) at 1", "Insert ExpressionStatement(1482) into Block(1483) at 0", "Insert SimpleName: mb(1485) into MethodInvocation(1489) at 0", "Insert SimpleName: withRow(1486) into MethodInvocation(1489) at 1", "Insert SimpleName: queueColumnFamily(1487) into MethodInvocation(1489) at 2", "Insert SimpleName: queueName(1488) into MethodInvocation(1489) at 3", "Insert ExpressionStatement(1494) into Block(1495) at 0", "Move SingleVariableDeclaration(1192) into CatchClause(1509) at 0", "Insert Block(1508) into CatchClause(1509) at 1", "Insert SimpleType: String(1526) into ArrayType: String[](1528) at 0", "Insert Dimension(1527) into ArrayType: String[](1528) at 1", "Insert SimpleName: parts(1529) into VariableDeclarationFragment(1533) at 0", "Insert MethodInvocation(1532) into VariableDeclarationFragment(1533) at 1", "Insert SimpleName: String(1535) into SimpleType: String(1536) at 0", "Insert SimpleName: shardKey(1537) into VariableDeclarationFragment(1541) at 0", "Insert ArrayAccess(1540) into VariableDeclarationFragment(1541) at 1", "Insert SimpleName: MessageQueueEntry(1543) into SimpleType: MessageQueueEntry(1544) at 0", "Insert SimpleName: entry(1545) into VariableDeclarationFragment(1552) at 0", "Insert ClassInstanceCreation(1551) into VariableDeclarationFragment(1552) at 1", "Insert VariableDeclarationStatement(1578) into Block(1628) at 0", "Insert TryStatement(1627) into Block(1628) at 1", "Insert SingleVariableDeclaration(1632) into CatchClause(1636) at 0", "Move Block(727) into CatchClause(1636) at 1", "Insert SingleVariableDeclaration(1640) into CatchClause(1650) at 0", "Insert Block(1649) into CatchClause(1650) at 1", "Insert SimpleName: String(1666) into SimpleType: String(1667) at 0", "Insert SimpleName: groupRowKey(1668) into VariableDeclarationFragment(1673) at 0", "Insert MethodInvocation(1672) into VariableDeclarationFragment(1673) at 1", "Insert VariableDeclarationStatement(1714) into Block(1735) at 0", "Insert EnhancedForStatement(1732) into Block(1735) at 1", "Insert ReturnStatement(1734) into Block(1735) at 2", "Insert SingleVariableDeclaration(1739) into CatchClause(1743) at 0", "Insert Block(1742) into CatchClause(1743) at 1", "Insert SingleVariableDeclaration(1747) into CatchClause(1757) at 0", "Insert Block(1756) into CatchClause(1757) at 1", "Insert SimpleName: MutationBatch(1772) into SimpleType: MutationBatch(1773) at 0", "Insert SimpleName: mb(1774) into VariableDeclarationFragment(1778) at 0", "Insert MethodInvocation(1777) into VariableDeclarationFragment(1778) at 1", "Insert SimpleName: String(1780) into SimpleType: String(1781) at 0", "Insert SimpleName: groupRowKey(1782) into VariableDeclarationFragment(1787) at 0", "Insert MethodInvocation(1786) into VariableDeclarationFragment(1787) at 1", "Insert VariableDeclarationStatement(1828) into Block(1889) at 0", "Insert EnhancedForStatement(1880) into Block(1889) at 1", "Insert ExpressionStatement(1888) into Block(1889) at 2", "Insert SingleVariableDeclaration(1893) into CatchClause(1897) at 0", "Insert Block(1896) into CatchClause(1897) at 1", "Insert SingleVariableDeclaration(1901) into CatchClause(1911) at 0", "Insert Block(1910) into CatchClause(1911) at 1", "Insert SingleVariableDeclaration(1921) into CatchClause(1931) at 0", "Insert Block(1930) into CatchClause(1931) at 1", "Insert SimpleType: String(1949) into ArrayType: String[](1951) at 0", "Insert Dimension(1950) into ArrayType: String[](1951) at 1", "Insert SimpleName: parts(1952) into VariableDeclarationFragment(1956) at 0", "Insert MethodInvocation(1955) into VariableDeclarationFragment(1956) at 1", "Insert SimpleName: String(1958) into SimpleType: String(1959) at 0", "Insert SimpleName: shardKey(1960) into VariableDeclarationFragment(1964) at 0", "Insert ArrayAccess(1963) into VariableDeclarationFragment(1964) at 1", "Insert SimpleName: MessageQueueEntry(1966) into SimpleType: MessageQueueEntry(1967) at 0", "Insert SimpleName: entry(1968) into VariableDeclarationFragment(1975) at 0", "Insert ClassInstanceCreation(1974) into VariableDeclarationFragment(1975) at 1", "Insert ExpressionStatement(1990) into Block(1991) at 0", "Insert SingleVariableDeclaration(1995) into CatchClause(2005) at 0", "Insert Block(2004) into CatchClause(2005) at 1", "Insert SimpleName: Collection(2014) into SimpleType: Collection(2015) at 0", "Insert SimpleName: String(2016) into SimpleType: String(2017) at 0", "Insert SimpleType: String(2035) into SingleVariableDeclaration(2037) at 0", "Insert SimpleName: messageId(2036) into SingleVariableDeclaration(2037) at 1", "Insert VariableDeclarationStatement(2048) into Block(2077) at 0", "Insert VariableDeclarationStatement(2056) into Block(2077) at 1", "Insert VariableDeclarationStatement(2067) into Block(2077) at 2", "Insert ExpressionStatement(2076) into Block(2077) at 3", "Insert SingleVariableDeclaration(2087) into CatchClause(2097) at 0", "Insert Block(2096) into CatchClause(2097) at 1", "Insert TryStatement(2152) into Block(2153) at 1", "Insert SingleVariableDeclaration(2157) into CatchClause(2177) at 0", "Insert ExpressionStatement(2210) into Block(2224) at 0", "Insert TryStatement(2223) into Block(2224) at 1", "Insert SingleVariableDeclaration(2228) into CatchClause(2248) at 0", "Insert Block(2247) into CatchClause(2248) at 1", "Insert ExpressionStatement(2265) into Block(2279) at 0", "Insert TryStatement(2278) into Block(2279) at 1", "Insert SingleVariableDeclaration(2283) into CatchClause(2303) at 0", "Insert Block(2302) into CatchClause(2303) at 1", "Insert ExpressionStatement(2311) into Block(2325) at 0", "Insert TryStatement(2324) into Block(2325) at 1", "Insert SingleVariableDeclaration(2329) into CatchClause(2349) at 0", "Insert Block(2348) into CatchClause(2349) at 1", "Move SingleVariableDeclaration(2647) into CatchClause(2411) at 0", "Move SingleVariableDeclaration(2579) into CatchClause(2427) at 0", "Move SimpleType: MessageProducer(2475) into ClassInstanceCreation(4733) at 0", "Insert AnonymousClassDeclaration(4732) into ClassInstanceCreation(4733) at 1", "Insert MethodInvocation(4757) into PrefixExpression: !(4758) at 0", "Insert SimpleName: String(4853) into SimpleType: String(4854) at 0", "Insert SimpleName: shardKey(4855) into VariableDeclarationFragment(4859) at 0", "Insert MethodInvocation(4858) into VariableDeclarationFragment(4859) at 1", "Insert SimpleName: message(4882) into MethodInvocation(4884) at 0", "Insert SimpleName: hasKey(4883) into MethodInvocation(4884) at 1", "Move ExpressionStatement(2859) into Block(4910) at 0", "Insert SimpleName: getCompositeKey(4929) into MethodInvocation(4934) at 0", "Insert SimpleName: shardKey(4930) into MethodInvocation(4934) at 1", "Insert MethodInvocation(4933) into MethodInvocation(4934) at 2", "Insert SimpleName: ShardedDistributedMessageQueue(162) into SimpleType: ShardedDistributedMessageQueue(163) at 0", "Insert SimpleName: AnnotatedCompositeSerializer(300) into SimpleType: AnnotatedCompositeSerializer(301) at 0", "Insert SimpleName: MessageMetadataEntry(302) into SimpleType: MessageMetadataEntry(303) at 0", "Insert SimpleName: MessageMetadataEntry(305) into SimpleType: MessageMetadataEntry(306) at 0", "Update SimpleName: setVisibilityTimeout(364) to setPartitionDuration", "Insert QualifiedName: queue.settings(449) into MethodInvocation(452) at 0", "Insert SimpleName: setPartitionCount(450) into MethodInvocation(452) at 1", "Insert SimpleName: bucketCount(451) into MethodInvocation(452) at 2", "Insert QualifiedName: queue.settings(470) into MethodInvocation(474) at 0", "Insert SimpleName: setRetentionTimeout(471) into MethodInvocation(474) at 1", "Insert SimpleName: timeout(472) into MethodInvocation(474) at 2", "Insert SimpleName: units(473) into MethodInvocation(474) at 3", "Insert CastExpression(523) into Assignment: =(524) at 1", "Insert QualifiedName: queue.bPoisonQueueEnabled(663) into Assignment: =(665) at 0", "Insert SimpleName: enabled(664) into Assignment: =(665) at 1", "Update QualifiedName: queue.columnFamily(553) to queue.queueColumnFamily", "Insert QualifiedName: queue.keyIndexColumnFamily(686) into Assignment: =(697) at 0", "Insert MethodInvocation(696) into Assignment: =(697) at 1", "Insert Block(867) into MethodDeclaration(868) at 5", "Insert SimpleName: settings(1065) into MethodInvocation(1067) at 0", "Insert SimpleName: getPartitionDuration(1066) into MethodInvocation(1067) at 1", "Insert SimpleName: timePartition(1070) into Assignment: =(1081) at 0", "Move InfixExpression: %(932) into Assignment: =(1081) at 1", "Insert SimpleName: timePartition(1083) into Assignment: =(1085) at 0", "Insert NumberLiteral: 0(1084) into Assignment: =(1085) at 1", "Insert SimpleName: String(1138) into SimpleType: String(1139) at 0", "Insert SimpleName: StringUtils(1143) into MethodInvocation(1147) at 0", "Insert SimpleName: split(1144) into MethodInvocation(1147) at 1", "Insert SimpleName: key(1145) into MethodInvocation(1147) at 2", "Insert StringLiteral: \"$\"(1146) into MethodInvocation(1147) at 3", "Insert ClassInstanceCreation(1159) into ThrowStatement(1160) at 0", "Insert SimpleName: settings(1336) into MethodInvocation(1338) at 0", "Insert SimpleName: getPartitionDuration(1337) into MethodInvocation(1338) at 1", "Insert SimpleName: timePartition(1341) into Assignment: =(1353) at 0", "Move InfixExpression: /(1120) into Assignment: =(1353) at 1", "Insert SimpleName: timePartition(1355) into Assignment: =(1357) at 0", "Insert NumberLiteral: 0(1356) into Assignment: =(1357) at 1", "Insert StringLiteral: \"Clearing messages from '\"(1386) into InfixExpression: +(1389) at 0", "Insert SimpleName: queueName(1387) into InfixExpression: +(1389) at 1", "Insert StringLiteral: \"'\"(1388) into InfixExpression: +(1389) at 2", "Insert MethodInvocation(1397) into MethodInvocation(1400) at 0", "Insert SimpleName: setConsistencyLevel(1398) into MethodInvocation(1400) at 1", "Insert SimpleName: consistencyLevel(1399) into MethodInvocation(1400) at 2", "Insert SimpleName: MessageQueueShard(1403) into SimpleType: MessageQueueShard(1404) at 0", "Insert MethodInvocation(1416) into ExpressionStatement(1417) at 0", "Insert MethodInvocation(1422) into ExpressionStatement(1423) at 0", "Insert ThrowStatement(1436) into Block(1437) at 0", "Insert StringLiteral: \"Deleting queue '\"(1451) into InfixExpression: +(1454) at 0", "Insert SimpleName: queueName(1452) into InfixExpression: +(1454) at 1", "Insert StringLiteral: \"'\"(1453) into InfixExpression: +(1454) at 2", "Insert MethodInvocation(1481) into ExpressionStatement(1482) at 0", "Insert MethodInvocation(1493) into ExpressionStatement(1494) at 0", "Insert ThrowStatement(1507) into Block(1508) at 0", "Insert SimpleName: String(1525) into SimpleType: String(1526) at 0", "Insert SimpleName: splitCompositeKey(1530) into MethodInvocation(1532) at 0", "Insert SimpleName: messageId(1531) into MethodInvocation(1532) at 1", "Insert SimpleName: parts(1538) into ArrayAccess(1540) at 0", "Insert NumberLiteral: 0(1539) into ArrayAccess(1540) at 1", "Insert SimpleType: MessageQueueEntry(1547) into ClassInstanceCreation(1551) at 0", "Insert ArrayAccess(1550) into ClassInstanceCreation(1551) at 1", "Insert ParameterizedType: Column<MessageQueueEntry>(1558) into VariableDeclarationStatement(1578) at 0", "Insert VariableDeclarationFragment(1577) into VariableDeclarationStatement(1578) at 1", "Insert Block(1598) into TryStatement(1627) at 0", "Insert CatchClause(1626) into TryStatement(1627) at 1", "Insert SimpleType: NotFoundException(1630) into SingleVariableDeclaration(1632) at 0", "Insert SimpleName: e(1631) into SingleVariableDeclaration(1632) at 1", "Insert SimpleType: ConnectionException(1638) into SingleVariableDeclaration(1640) at 0", "Insert SimpleName: e(1639) into SingleVariableDeclaration(1640) at 1", "Insert ThrowStatement(1648) into Block(1649) at 0", "Insert SimpleName: getCompositeKey(1669) into MethodInvocation(1672) at 0", "Insert SimpleName: queueName(1670) into MethodInvocation(1672) at 1", "Insert SimpleName: key(1671) into MethodInvocation(1672) at 2", "Insert ParameterizedType: ColumnList<MessageMetadataEntry>(1679) into VariableDeclarationStatement(1714) at 0", "Insert VariableDeclarationFragment(1713) into VariableDeclarationStatement(1714) at 1", "Insert SingleVariableDeclaration(1721) into EnhancedForStatement(1732) at 0", "Insert SimpleName: columns(1722) into EnhancedForStatement(1732) at 1", "Insert Block(1731) into EnhancedForStatement(1732) at 2", "Insert NullLiteral(1733) into ReturnStatement(1734) at 0", "Insert SimpleType: NotFoundException(1737) into SingleVariableDeclaration(1739) at 0", "Insert SimpleName: e(1738) into SingleVariableDeclaration(1739) at 1", "Insert ReturnStatement(1741) into Block(1742) at 0", "Insert SimpleType: ConnectionException(1745) into SingleVariableDeclaration(1747) at 0", "Insert SimpleName: e(1746) into SingleVariableDeclaration(1747) at 1", "Insert ThrowStatement(1755) into Block(1756) at 0", "Insert SimpleName: keyspace(1775) into MethodInvocation(1777) at 0", "Insert SimpleName: prepareMutationBatch(1776) into MethodInvocation(1777) at 1", "Insert SimpleName: getCompositeKey(1783) into MethodInvocation(1786) at 0", "Insert SimpleName: queueName(1784) into MethodInvocation(1786) at 1", "Insert SimpleName: key(1785) into MethodInvocation(1786) at 2", "Insert ParameterizedType: ColumnList<MessageMetadataEntry>(1793) into VariableDeclarationStatement(1828) at 0", "Insert VariableDeclarationFragment(1827) into VariableDeclarationStatement(1828) at 1", "Insert SingleVariableDeclaration(1835) into EnhancedForStatement(1880) at 0", "Insert SimpleName: columns(1836) into EnhancedForStatement(1880) at 1", "Insert Block(1879) into EnhancedForStatement(1880) at 2", "Insert MethodInvocation(1887) into ExpressionStatement(1888) at 0", "Insert SimpleType: NotFoundException(1891) into SingleVariableDeclaration(1893) at 0", "Insert SimpleName: e(1892) into SingleVariableDeclaration(1893) at 1", "Insert ReturnStatement(1895) into Block(1896) at 0", "Insert SimpleType: ConnectionException(1899) into SingleVariableDeclaration(1901) at 0", "Insert SimpleName: e(1900) into SingleVariableDeclaration(1901) at 1", "Insert ThrowStatement(1909) into Block(1910) at 0", "Insert SimpleType: ConnectionException(1919) into SingleVariableDeclaration(1921) at 0", "Insert SimpleName: e(1920) into SingleVariableDeclaration(1921) at 1", "Insert ThrowStatement(1929) into Block(1930) at 0", "Insert SimpleName: String(1948) into SimpleType: String(1949) at 0", "Insert SimpleName: splitCompositeKey(1953) into MethodInvocation(1955) at 0", "Insert SimpleName: messageId(1954) into MethodInvocation(1955) at 1", "Insert SimpleName: parts(1961) into ArrayAccess(1963) at 0", "Insert NumberLiteral: 0(1962) into ArrayAccess(1963) at 1", "Insert SimpleType: MessageQueueEntry(1970) into ClassInstanceCreation(1974) at 0", "Insert ArrayAccess(1973) into ClassInstanceCreation(1974) at 1", "Insert MethodInvocation(1989) into ExpressionStatement(1990) at 0", "Insert SimpleType: ConnectionException(1993) into SingleVariableDeclaration(1995) at 0", "Insert SimpleName: e(1994) into SingleVariableDeclaration(1995) at 1", "Insert ThrowStatement(2003) into Block(2004) at 0", "Insert SimpleName: String(2034) into SimpleType: String(2035) at 0", "Insert ArrayType: String[](2042) into VariableDeclarationStatement(2048) at 0", "Insert VariableDeclarationFragment(2047) into VariableDeclarationStatement(2048) at 1", "Insert SimpleType: String(2050) into VariableDeclarationStatement(2056) at 0", "Insert VariableDeclarationFragment(2055) into VariableDeclarationStatement(2056) at 1", "Insert SimpleType: MessageQueueEntry(2058) into VariableDeclarationStatement(2067) at 0", "Insert VariableDeclarationFragment(2066) into VariableDeclarationStatement(2067) at 1", "Insert MethodInvocation(2075) into ExpressionStatement(2076) at 0", "Insert SimpleType: ConnectionException(2085) into SingleVariableDeclaration(2087) at 0", "Insert SimpleName: e(2086) into SingleVariableDeclaration(2087) at 1", "Insert ThrowStatement(2095) into Block(2096) at 0", "Insert Block(2145) into TryStatement(2152) at 0", "Insert CatchClause(2151) into TryStatement(2152) at 1", "Insert SimpleType: ConnectionException(2155) into SingleVariableDeclaration(2157) at 0", "Insert SimpleName: e(2156) into SingleVariableDeclaration(2157) at 1", "Insert IfStatement(2175) into Block(2176) at 0", "Insert MethodInvocation(2209) into ExpressionStatement(2210) at 0", "Insert Block(2216) into TryStatement(2223) at 0", "Insert CatchClause(2222) into TryStatement(2223) at 1", "Insert SimpleType: ConnectionException(2226) into SingleVariableDeclaration(2228) at 0", "Insert SimpleName: e(2227) into SingleVariableDeclaration(2228) at 1", "Insert IfStatement(2246) into Block(2247) at 0", "Insert MethodInvocation(2264) into ExpressionStatement(2265) at 0", "Insert Block(2271) into TryStatement(2278) at 0", "Insert CatchClause(2277) into TryStatement(2278) at 1", "Insert SimpleType: ConnectionException(2281) into SingleVariableDeclaration(2283) at 0", "Insert SimpleName: e(2282) into SingleVariableDeclaration(2283) at 1", "Insert IfStatement(2301) into Block(2302) at 0", "Insert MethodInvocation(2310) into ExpressionStatement(2311) at 0", "Insert Block(2317) into TryStatement(2324) at 0", "Insert CatchClause(2323) into TryStatement(2324) at 1", "Insert SimpleType: ConnectionException(2327) into SingleVariableDeclaration(2329) at 0", "Insert SimpleName: e(2328) into SingleVariableDeclaration(2329) at 1", "Insert IfStatement(2347) into Block(2348) at 0", "Insert MethodDeclaration(2519) into AnonymousClassDeclaration(4312) at 4", "Insert MethodDeclaration(2743) into AnonymousClassDeclaration(4312) at 5", "Insert MethodDeclaration(2857) into AnonymousClassDeclaration(4312) at 6", "Insert MethodDeclaration(2994) into AnonymousClassDeclaration(4312) at 7", "Insert MethodDeclaration(3140) into AnonymousClassDeclaration(4312) at 8", "Insert MethodDeclaration(3248) into AnonymousClassDeclaration(4312) at 9", "Move SingleVariableDeclaration(1629) into MethodDeclaration(4011) at 5", "Insert MethodDeclaration(4058) into AnonymousClassDeclaration(4312) at 11", "Insert MethodDeclaration(4115) into AnonymousClassDeclaration(4312) at 12", "Insert MethodDeclaration(4264) into AnonymousClassDeclaration(4312) at 14", "Insert MethodDeclaration(4377) into AnonymousClassDeclaration(4732) at 0", "Insert MethodDeclaration(4731) into AnonymousClassDeclaration(4732) at 1", "Move SimpleName: message(2720) into MethodInvocation(4757) at 0", "Update SimpleName: getTriggerTime(2721) to hasTrigger", "Move SimpleName: getTriggerTime(2721) into MethodInvocation(4757) at 1", "Insert SimpleName: getShardKey(4856) into MethodInvocation(4858) at 0", "Insert SimpleName: entry(4857) into MethodInvocation(4858) at 1", "Update SimpleName: columnFamily(2819) to queueColumnFamily", "Update SimpleName: getQueueKey(2820) to shardKey", "Move SimpleName: getQueueKey(2820) into MethodInvocation(4865) at 3", "Insert SimpleType: Integer(4875) into CastExpression(4879) at 0", "Insert SimpleName: entry(4931) into MethodInvocation(4933) at 0", "Insert SimpleName: getMessageId(4932) into MethodInvocation(4933) at 1", "Update QualifiedName: TimeUnit.SECONDS(365) to TimeUnit.MICROSECONDS", "Update SimpleName: timeout(367) to bucketDuration", "Insert PrimitiveType: int(517) into CastExpression(523) at 0", "Move MethodInvocation(417) into CastExpression(523) at 1", "Update SimpleName: compositeSerializer(560) to entrySerializer", "Insert SimpleName: ColumnFamily(687) into MethodInvocation(696) at 0", "Insert SimpleName: newColumnFamily(688) into MethodInvocation(696) at 1", "Insert InfixExpression: +(691) into MethodInvocation(696) at 2", "Insert MethodInvocation(694) into MethodInvocation(696) at 3", "Insert SimpleName: metadataSerializer(695) into MethodInvocation(696) at 4", "Insert ExpressionStatement(864) into Block(867) at 0", "Insert ReturnStatement(866) into Block(867) at 1", "Move SimpleType: MessageQueueException(1194) into ClassInstanceCreation(1159) at 0", "Insert InfixExpression: +(1158) into ClassInstanceCreation(1159) at 1", "Insert SimpleName: keyspace(1395) into MethodInvocation(1397) at 0", "Insert SimpleName: prepareMutationBatch(1396) into MethodInvocation(1397) at 1", "Insert MethodInvocation(1414) into MethodInvocation(1416) at 0", "Insert SimpleName: delete(1415) into MethodInvocation(1416) at 1", "Insert SimpleName: mb(1420) into MethodInvocation(1422) at 0", "Insert SimpleName: execute(1421) into MethodInvocation(1422) at 1", "Insert ClassInstanceCreation(1435) into ThrowStatement(1436) at 0", "Insert MethodInvocation(1479) into MethodInvocation(1481) at 0", "Insert SimpleName: delete(1480) into MethodInvocation(1481) at 1", "Insert SimpleName: mb(1491) into MethodInvocation(1493) at 0", "Insert SimpleName: execute(1492) into MethodInvocation(1493) at 1", "Insert ClassInstanceCreation(1506) into ThrowStatement(1507) at 0", "Insert SimpleName: MessageQueueEntry(1546) into SimpleType: MessageQueueEntry(1547) at 0", "Insert SimpleName: parts(1548) into ArrayAccess(1550) at 0", "Insert NumberLiteral: 1(1549) into ArrayAccess(1550) at 1", "Insert SimpleType: Column(1555) into ParameterizedType: Column<MessageQueueEntry>(1558) at 0", "Insert SimpleType: MessageQueueEntry(1557) into ParameterizedType: Column<MessageQueueEntry>(1558) at 1", "Insert SimpleName: column(1559) into VariableDeclarationFragment(1577) at 0", "Insert MethodInvocation(1576) into VariableDeclarationFragment(1577) at 1", "Insert VariableDeclarationStatement(1589) into Block(1598) at 0", "Insert ReturnStatement(1597) into Block(1598) at 1", "Move SingleVariableDeclaration(1261) into CatchClause(1626) at 0", "Insert Block(1625) into CatchClause(1626) at 1", "Insert SimpleName: NotFoundException(1629) into SimpleType: NotFoundException(1630) at 0", "Insert SimpleName: ConnectionException(1637) into SimpleType: ConnectionException(1638) at 0", "Insert ClassInstanceCreation(1647) into ThrowStatement(1648) at 0", "Insert SimpleType: ColumnList(1676) into ParameterizedType: ColumnList<MessageMetadataEntry>(1679) at 0", "Insert SimpleType: MessageMetadataEntry(1678) into ParameterizedType: ColumnList<MessageMetadataEntry>(1679) at 1", "Insert SimpleName: columns(1680) into VariableDeclarationFragment(1713) at 0", "Insert MethodInvocation(1712) into VariableDeclarationFragment(1713) at 1", "Insert ParameterizedType: Column<MessageMetadataEntry>(1719) into SingleVariableDeclaration(1721) at 0", "Insert SimpleName: entry(1720) into SingleVariableDeclaration(1721) at 1", "Insert ReturnStatement(1730) into Block(1731) at 0", "Insert SimpleName: NotFoundException(1736) into SimpleType: NotFoundException(1737) at 0", "Insert NullLiteral(1740) into ReturnStatement(1741) at 0", "Insert SimpleName: ConnectionException(1744) into SimpleType: ConnectionException(1745) at 0", "Insert ClassInstanceCreation(1754) into ThrowStatement(1755) at 0", "Insert SimpleType: ColumnList(1790) into ParameterizedType: ColumnList<MessageMetadataEntry>(1793) at 0", "Insert SimpleType: MessageMetadataEntry(1792) into ParameterizedType: ColumnList<MessageMetadataEntry>(1793) at 1", "Insert SimpleName: columns(1794) into VariableDeclarationFragment(1827) at 0", "Insert MethodInvocation(1826) into VariableDeclarationFragment(1827) at 1", "Insert ParameterizedType: Column<MessageMetadataEntry>(1833) into SingleVariableDeclaration(1835) at 0", "Insert SimpleName: entry(1834) into SingleVariableDeclaration(1835) at 1", "Insert VariableDeclarationStatement(1850) into Block(1879) at 0", "Insert VariableDeclarationStatement(1858) into Block(1879) at 1", "Insert VariableDeclarationStatement(1869) into Block(1879) at 2", "Insert ExpressionStatement(1878) into Block(1879) at 3", "Insert MethodInvocation(1885) into MethodInvocation(1887) at 0", "Insert SimpleName: delete(1886) into MethodInvocation(1887) at 1", "Insert SimpleName: NotFoundException(1890) into SimpleType: NotFoundException(1891) at 0", "Insert BooleanLiteral: false(1894) into ReturnStatement(1895) at 0", "Insert SimpleName: ConnectionException(1898) into SimpleType: ConnectionException(1899) at 0", "Insert ClassInstanceCreation(1908) into ThrowStatement(1909) at 0", "Insert SimpleName: ConnectionException(1918) into SimpleType: ConnectionException(1919) at 0", "Insert ClassInstanceCreation(1928) into ThrowStatement(1929) at 0", "Insert SimpleName: MessageQueueEntry(1969) into SimpleType: MessageQueueEntry(1970) at 0", "Insert SimpleName: parts(1971) into ArrayAccess(1973) at 0", "Insert NumberLiteral: 1(1972) into ArrayAccess(1973) at 1", "Insert MethodInvocation(1987) into MethodInvocation(1989) at 0", "Insert SimpleName: execute(1988) into MethodInvocation(1989) at 1", "Insert SimpleName: ConnectionException(1992) into SimpleType: ConnectionException(1993) at 0", "Insert ClassInstanceCreation(2002) into ThrowStatement(2003) at 0", "Insert SimpleType: String(2040) into ArrayType: String[](2042) at 0", "Insert Dimension(2041) into ArrayType: String[](2042) at 1", "Insert SimpleName: parts(2043) into VariableDeclarationFragment(2047) at 0", "Insert MethodInvocation(2046) into VariableDeclarationFragment(2047) at 1", "Insert SimpleName: String(2049) into SimpleType: String(2050) at 0", "Insert SimpleName: shardKey(2051) into VariableDeclarationFragment(2055) at 0", "Insert ArrayAccess(2054) into VariableDeclarationFragment(2055) at 1", "Insert SimpleName: MessageQueueEntry(2057) into SimpleType: MessageQueueEntry(2058) at 0", "Insert SimpleName: entry(2059) into VariableDeclarationFragment(2066) at 0", "Insert ClassInstanceCreation(2065) into VariableDeclarationFragment(2066) at 1", "Insert MethodInvocation(2072) into MethodInvocation(2075) at 0", "Insert SimpleName: deleteColumn(2073) into MethodInvocation(2075) at 1", "Insert SimpleName: entry(2074) into MethodInvocation(2075) at 2", "Insert SimpleName: ConnectionException(2084) into SimpleType: ConnectionException(2085) at 0", "Insert ClassInstanceCreation(2094) into ThrowStatement(2095) at 0", "Insert ExpressionStatement(2144) into Block(2145) at 0", "Insert SingleVariableDeclaration(2149) into CatchClause(2151) at 0", "Insert Block(2150) into CatchClause(2151) at 1", "Insert SimpleName: ConnectionException(2154) into SimpleType: ConnectionException(2155) at 0", "Insert PrefixExpression: !(2164) into IfStatement(2175) at 0", "Insert ThrowStatement(2174) into IfStatement(2175) at 1", "Insert SimpleName: keyspace(2179) into MethodInvocation(2209) at 0", "Insert SimpleName: createColumnFamily(2180) into MethodInvocation(2209) at 1", "Insert FieldAccess(2183) into MethodInvocation(2209) at 2", "Insert MethodInvocation(2208) into MethodInvocation(2209) at 3", "Insert ExpressionStatement(2215) into Block(2216) at 0", "Insert SingleVariableDeclaration(2220) into CatchClause(2222) at 0", "Insert Block(2221) into CatchClause(2222) at 1", "Insert SimpleName: ConnectionException(2225) into SimpleType: ConnectionException(2226) at 0", "Insert PrefixExpression: !(2235) into IfStatement(2246) at 0", "Insert ThrowStatement(2245) into IfStatement(2246) at 1", "Insert SimpleName: keyspace(2259) into MethodInvocation(2264) at 0", "Insert SimpleName: dropColumnFamily(2260) into MethodInvocation(2264) at 1", "Insert FieldAccess(2263) into MethodInvocation(2264) at 2", "Insert ExpressionStatement(2270) into Block(2271) at 0", "Insert SingleVariableDeclaration(2275) into CatchClause(2277) at 0", "Insert Block(2276) into CatchClause(2277) at 1", "Insert SimpleName: ConnectionException(2280) into SimpleType: ConnectionException(2281) at 0", "Insert PrefixExpression: !(2290) into IfStatement(2301) at 0", "Insert ThrowStatement(2300) into IfStatement(2301) at 1", "Insert SimpleName: keyspace(2305) into MethodInvocation(2310) at 0", "Insert SimpleName: dropColumnFamily(2306) into MethodInvocation(2310) at 1", "Insert FieldAccess(2309) into MethodInvocation(2310) at 2", "Insert ExpressionStatement(2316) into Block(2317) at 0", "Insert SingleVariableDeclaration(2321) into CatchClause(2323) at 0", "Insert Block(2322) into CatchClause(2323) at 1", "Insert SimpleName: ConnectionException(2326) into SimpleType: ConnectionException(2327) at 0", "Insert PrefixExpression: !(2336) into IfStatement(2347) at 0", "Insert ThrowStatement(2346) into IfStatement(2347) at 1", "Move MarkerAnnotation(2477) into MethodDeclaration(2519) at 0", "Move Modifier: public(1342) into MethodDeclaration(2519) at 1", "Insert ParameterizedType: Collection<Message>(2501) into MethodDeclaration(2519) at 2", "Move SimpleName: readMessages(1348) into MethodDeclaration(2519) at 3", "Insert SingleVariableDeclaration(2505) into MethodDeclaration(2519) at 4", "Move SimpleType: MessageQueueException(2487) into MethodDeclaration(2519) at 5", "Insert SimpleType: BusyLockException(2509) into MethodDeclaration(2519) at 6", "Insert SimpleType: InterruptedException(2511) into MethodDeclaration(2519) at 7", "Insert Block(2518) into MethodDeclaration(2519) at 8", "Move MarkerAnnotation(1341) into MethodDeclaration(2743) at 0", "Insert Modifier: public(2522) into MethodDeclaration(2743) at 1", "Move ParameterizedType: Collection<Message>(1347) into MethodDeclaration(2743) at 2", "Insert SimpleName: readMessages(2528) into MethodDeclaration(2743) at 3", "Move SingleVariableDeclaration(1351) into MethodDeclaration(2743) at 4", "Insert SingleVariableDeclaration(2534) into MethodDeclaration(2743) at 5", "Insert SingleVariableDeclaration(2538) into MethodDeclaration(2743) at 6", "Move SimpleType: MessageQueueException(1353) into MethodDeclaration(2743) at 7", "Move SimpleType: BusyLockException(1355) into MethodDeclaration(2743) at 8", "Move SimpleType: InterruptedException(1357) into MethodDeclaration(2743) at 9", "Insert Block(2742) into MethodDeclaration(2743) at 10", "Insert Modifier: private(2744) into MethodDeclaration(2857) at 0", "Insert ParameterizedType: Collection<Message>(2749) into MethodDeclaration(2857) at 1", "Insert SimpleName: readAndReturnShard(2750) into MethodDeclaration(2857) at 2", "Insert SingleVariableDeclaration(2754) into MethodDeclaration(2857) at 3", "Insert SingleVariableDeclaration(2757) into MethodDeclaration(2857) at 4", "Move SimpleType: MessageQueueException(2394) into MethodDeclaration(2857) at 5", "Insert SimpleType: BusyLockException(2761) into MethodDeclaration(2857) at 6", "Insert SimpleType: InterruptedException(2763) into MethodDeclaration(2857) at 7", "Move Block(1609) into MethodDeclaration(2857) at 8", "Insert MarkerAnnotation(2859) into MethodDeclaration(2994) at 0", "Insert Modifier: public(2860) into MethodDeclaration(2994) at 1", "Insert ParameterizedType: Collection<Message>(2865) into MethodDeclaration(2994) at 2", "Insert SimpleName: peekMessages(2866) into MethodDeclaration(2994) at 3", "Insert SingleVariableDeclaration(2869) into MethodDeclaration(2994) at 4", "Insert SimpleType: MessageQueueException(2871) into MethodDeclaration(2994) at 5", "Insert Block(2993) into MethodDeclaration(2994) at 6", "Insert Modifier: private(2995) into MethodDeclaration(3140) at 0", "Insert ParameterizedType: Collection<Message>(3000) into MethodDeclaration(3140) at 1", "Insert SimpleName: peekMessages(3001) into MethodDeclaration(3140) at 2", "Insert SingleVariableDeclaration(3005) into MethodDeclaration(3140) at 3", "Insert SingleVariableDeclaration(3008) into MethodDeclaration(3140) at 4", "Insert SimpleType: MessageQueueException(3010) into MethodDeclaration(3140) at 5", "Insert Block(3139) into MethodDeclaration(3140) at 6", "Insert Modifier: private(3141) into MethodDeclaration(3248) at 0", "Insert PrimitiveType: boolean(3142) into MethodDeclaration(3248) at 1", "Insert SimpleName: hasMessages(3143) into MethodDeclaration(3248) at 2", "Insert SingleVariableDeclaration(3147) into MethodDeclaration(3248) at 3", "Insert SimpleType: MessageQueueException(3149) into MethodDeclaration(3248) at 4", "Insert Block(3247) into MethodDeclaration(3248) at 5", "Move MarkerAnnotation(2304) into MethodDeclaration(4058) at 0", "Insert Modifier: public(4014) into MethodDeclaration(4058) at 1", "Insert PrimitiveType: void(4015) into MethodDeclaration(4058) at 2", "Insert SimpleName: ackMessage(4016) into MethodDeclaration(4058) at 3", "Move SingleVariableDeclaration(2311) into MethodDeclaration(4058) at 4", "Move SimpleType: MessageQueueException(2313) into MethodDeclaration(4058) at 5", "Insert Block(4057) into MethodDeclaration(4058) at 6", "Insert MarkerAnnotation(4060) into MethodDeclaration(4115) at 0", "Insert Modifier: public(4061) into MethodDeclaration(4115) at 1", "Insert PrimitiveType: void(4062) into MethodDeclaration(4115) at 2", "Insert SimpleName: ackMessages(4063) into MethodDeclaration(4115) at 3", "Move SingleVariableDeclaration(2392) into MethodDeclaration(4115) at 4", "Insert SimpleType: MessageQueueException(4072) into MethodDeclaration(4115) at 5", "Insert Block(4114) into MethodDeclaration(4115) at 6", "Update Modifier: public(2305) to private", "Insert SimpleName: fillAckMutation(4118) into MethodDeclaration(4197) at 2", "Insert SingleVariableDeclaration(4122) into MethodDeclaration(4197) at 3", "Insert SingleVariableDeclaration(4126) into MethodDeclaration(4197) at 4", "Insert Block(4196) into MethodDeclaration(4197) at 5", "Insert Modifier: private(4198) into MethodDeclaration(4264) at 0", "Insert SimpleType: Message(4200) into MethodDeclaration(4264) at 1", "Insert SimpleName: extractMessageFromColumn(4201) into MethodDeclaration(4264) at 2", "Insert SingleVariableDeclaration(4208) into MethodDeclaration(4264) at 3", "Insert Block(4263) into MethodDeclaration(4264) at 4", "Insert MarkerAnnotation(4266) into MethodDeclaration(4311) at 0", "Update SimpleName: ackMessages(2385) to ackPoisonMessage", "Move SingleVariableDeclaration(2485) into MethodDeclaration(4311) at 4", "Insert SimpleType: MessageQueueException(4275) into MethodDeclaration(4311) at 5", "Insert Block(4310) into MethodDeclaration(4311) at 6", "Insert MarkerAnnotation(4326) into MethodDeclaration(4377) at 0", "Move Modifier: public(2478) into MethodDeclaration(4377) at 1", "Insert SimpleType: String(4329) into MethodDeclaration(4377) at 2", "Move SimpleName: sendMessage(2481) into MethodDeclaration(4377) at 3", "Insert SingleVariableDeclaration(4334) into MethodDeclaration(4377) at 4", "Insert SimpleType: MessageQueueException(4336) into MethodDeclaration(4377) at 5", "Insert Block(4376) into MethodDeclaration(4377) at 6", "Move MarkerAnnotation(2668) into MethodDeclaration(4731) at 0", "Insert Modifier: public(4380) into MethodDeclaration(4731) at 1", "Insert SimpleType: SendMessageResponse(4382) into MethodDeclaration(4731) at 2", "Insert SimpleName: sendMessages(4383) into MethodDeclaration(4731) at 3", "Move SingleVariableDeclaration(2684) into MethodDeclaration(4731) at 4", "Insert SimpleType: MessageQueueException(4392) into MethodDeclaration(4731) at 5", "Insert Block(4730) into MethodDeclaration(4731) at 6", "Insert SimpleName: Integer(4874) into SimpleType: Integer(4875) at 0", "Update SimpleName: getVisibilityTimeout(2834) to getRetentionTimeout", "Insert MethodInvocation(4894) into MethodInvocation(4908) at 0", "Insert SimpleName: putEmptyColumn(4895) into MethodInvocation(4908) at 1", "Insert MethodInvocation(4907) into MethodInvocation(4908) at 3", "Insert SimpleName: columnFamilyName(689) into InfixExpression: +(691) at 0", "Insert SimpleName: DEFAULT_METADATA_SUFFIX(690) into InfixExpression: +(691) at 1", "Insert SimpleName: StringSerializer(692) into MethodInvocation(694) at 0", "Insert SimpleName: get(693) into MethodInvocation(694) at 1", "Insert MethodInvocation(863) into ExpressionStatement(864) at 0", "Insert NullLiteral(865) into ReturnStatement(866) at 0", "Insert StringLiteral: \"Invalid key '\"(1155) into InfixExpression: +(1158) at 0", "Insert SimpleName: key(1156) into InfixExpression: +(1158) at 1", "Insert StringLiteral: \"'.  Expected format <queue|shard>$<name>. \"(1157) into InfixExpression: +(1158) at 2", "Insert SimpleName: mb(1408) into MethodInvocation(1414) at 0", "Insert SimpleName: withRow(1409) into MethodInvocation(1414) at 1", "Insert SimpleName: queueColumnFamily(1410) into MethodInvocation(1414) at 2", "Insert MethodInvocation(1413) into MethodInvocation(1414) at 3", "Move SimpleType: MessageQueueException(1263) into ClassInstanceCreation(1435) at 0", "Insert InfixExpression: +(1433) into ClassInstanceCreation(1435) at 1", "Insert SimpleName: e(1434) into ClassInstanceCreation(1435) at 2", "Insert SimpleName: mb(1473) into MethodInvocation(1479) at 0", "Insert SimpleName: withRow(1474) into MethodInvocation(1479) at 1", "Insert SimpleName: queueColumnFamily(1475) into MethodInvocation(1479) at 2", "Move MethodInvocation(1462) into MethodInvocation(1479) at 3", "Move SimpleType: MessageQueueException(1247) into ClassInstanceCreation(1506) at 0", "Insert InfixExpression: +(1504) into ClassInstanceCreation(1506) at 1", "Insert SimpleName: e(1505) into ClassInstanceCreation(1506) at 2", "Insert SimpleName: Column(1554) into SimpleType: Column(1555) at 0", "Insert SimpleName: MessageQueueEntry(1556) into SimpleType: MessageQueueEntry(1557) at 0", "Insert MethodInvocation(1574) into MethodInvocation(1576) at 0", "Insert SimpleName: getResult(1575) into MethodInvocation(1576) at 1", "Insert SimpleType: ByteArrayInputStream(1580) into VariableDeclarationStatement(1589) at 0", "Insert VariableDeclarationFragment(1588) into VariableDeclarationStatement(1589) at 1", "Insert MethodInvocation(1596) into ReturnStatement(1597) at 0", "Insert TryStatement(1624) into Block(1625) at 0", "Insert SimpleType: MessageQueueException(1642) into ClassInstanceCreation(1647) at 0", "Insert InfixExpression: +(1645) into ClassInstanceCreation(1647) at 1", "Insert SimpleName: e(1646) into ClassInstanceCreation(1647) at 2", "Insert SimpleName: ColumnList(1675) into SimpleType: ColumnList(1676) at 0", "Insert SimpleName: MessageMetadataEntry(1677) into SimpleType: MessageMetadataEntry(1678) at 0", "Insert MethodInvocation(1710) into MethodInvocation(1712) at 0", "Insert SimpleName: getResult(1711) into MethodInvocation(1712) at 1", "Insert SimpleType: Column(1716) into ParameterizedType: Column<MessageMetadataEntry>(1719) at 0", "Insert SimpleType: MessageMetadataEntry(1718) into ParameterizedType: Column<MessageMetadataEntry>(1719) at 1", "Insert MethodInvocation(1729) into ReturnStatement(1730) at 0", "Insert SimpleType: MessageQueueException(1749) into ClassInstanceCreation(1754) at 0", "Insert InfixExpression: +(1752) into ClassInstanceCreation(1754) at 1", "Insert SimpleName: e(1753) into ClassInstanceCreation(1754) at 2", "Insert SimpleName: ColumnList(1789) into SimpleType: ColumnList(1790) at 0", "Insert SimpleName: MessageMetadataEntry(1791) into SimpleType: MessageMetadataEntry(1792) at 0", "Insert MethodInvocation(1824) into MethodInvocation(1826) at 0", "Insert SimpleName: getResult(1825) into MethodInvocation(1826) at 1", "Insert SimpleType: Column(1830) into ParameterizedType: Column<MessageMetadataEntry>(1833) at 0", "Insert SimpleType: MessageMetadataEntry(1832) into ParameterizedType: Column<MessageMetadataEntry>(1833) at 1", "Insert ArrayType: String[](1840) into VariableDeclarationStatement(1850) at 0", "Insert VariableDeclarationFragment(1849) into VariableDeclarationStatement(1850) at 1", "Insert SimpleType: String(1852) into VariableDeclarationStatement(1858) at 0", "Insert VariableDeclarationFragment(1857) into VariableDeclarationStatement(1858) at 1", "Insert SimpleType: MessageQueueEntry(1860) into VariableDeclarationStatement(1869) at 0", "Insert VariableDeclarationFragment(1868) into VariableDeclarationStatement(1869) at 1", "Insert MethodInvocation(1877) into ExpressionStatement(1878) at 0", "Insert SimpleName: mb(1881) into MethodInvocation(1885) at 0", "Insert SimpleName: withRow(1882) into MethodInvocation(1885) at 1", "Insert SimpleName: keyIndexColumnFamily(1883) into MethodInvocation(1885) at 2", "Insert SimpleName: groupRowKey(1884) into MethodInvocation(1885) at 3", "Insert SimpleType: MessageQueueException(1903) into ClassInstanceCreation(1908) at 0", "Insert InfixExpression: +(1906) into ClassInstanceCreation(1908) at 1", "Insert SimpleName: e(1907) into ClassInstanceCreation(1908) at 2", "Insert SimpleType: MessageQueueException(1923) into ClassInstanceCreation(1928) at 0", "Insert InfixExpression: +(1926) into ClassInstanceCreation(1928) at 1", "Insert SimpleName: e(1927) into ClassInstanceCreation(1928) at 2", "Insert MethodInvocation(1985) into MethodInvocation(1987) at 0", "Insert SimpleName: deleteColumn(1986) into MethodInvocation(1987) at 1", "Insert SimpleType: MessageQueueException(1997) into ClassInstanceCreation(2002) at 0", "Insert InfixExpression: +(2000) into ClassInstanceCreation(2002) at 1", "Insert SimpleName: e(2001) into ClassInstanceCreation(2002) at 2", "Insert SimpleName: String(2039) into SimpleType: String(2040) at 0", "Insert SimpleName: splitCompositeKey(2044) into MethodInvocation(2046) at 0", "Insert SimpleName: messageId(2045) into MethodInvocation(2046) at 1", "Insert SimpleName: parts(2052) into ArrayAccess(2054) at 0", "Insert NumberLiteral: 0(2053) into ArrayAccess(2054) at 1", "Insert SimpleType: MessageQueueEntry(2061) into ClassInstanceCreation(2065) at 0", "Insert ArrayAccess(2064) into ClassInstanceCreation(2065) at 1", "Insert SimpleName: mb(2068) into MethodInvocation(2072) at 0", "Insert SimpleName: withRow(2069) into MethodInvocation(2072) at 1", "Insert SimpleName: queueColumnFamily(2070) into MethodInvocation(2072) at 2", "Insert SimpleName: shardKey(2071) into MethodInvocation(2072) at 3", "Insert SimpleType: MessageQueueException(2089) into ClassInstanceCreation(2094) at 0", "Insert InfixExpression: +(2092) into ClassInstanceCreation(2094) at 1", "Insert SimpleName: e(2093) into ClassInstanceCreation(2094) at 2", "Update SimpleName: columnFamily(1159) to queueColumnFamily", "Insert MethodInvocation(2143) into ExpressionStatement(2144) at 0", "Insert SimpleType: InterruptedException(2147) into SingleVariableDeclaration(2149) at 0", "Insert SimpleName: e(2148) into SingleVariableDeclaration(2149) at 1", "Insert MethodInvocation(2163) into PrefixExpression: !(2164) at 0", "Move ClassInstanceCreation(1201) into ThrowStatement(2174) at 0", "Insert ThisExpression(2181) into FieldAccess(2183) at 0", "Insert SimpleName: keyIndexColumnFamily(2182) into FieldAccess(2183) at 1", "Insert MethodInvocation(2206) into MethodInvocation(2208) at 0", "Insert SimpleName: build(2207) into MethodInvocation(2208) at 1", "Insert MethodInvocation(2214) into ExpressionStatement(2215) at 0", "Insert SimpleType: InterruptedException(2218) into SingleVariableDeclaration(2220) at 0", "Insert SimpleName: e(2219) into SingleVariableDeclaration(2220) at 1", "Insert MethodInvocation(2234) into PrefixExpression: !(2235) at 0", "Insert ClassInstanceCreation(2244) into ThrowStatement(2245) at 0", "Insert ThisExpression(2261) into FieldAccess(2263) at 0", "Insert SimpleName: queueColumnFamily(2262) into FieldAccess(2263) at 1", "Insert MethodInvocation(2269) into ExpressionStatement(2270) at 0", "Insert SimpleType: InterruptedException(2273) into SingleVariableDeclaration(2275) at 0", "Insert SimpleName: e(2274) into SingleVariableDeclaration(2275) at 1", "Insert MethodInvocation(2289) into PrefixExpression: !(2290) at 0", "Insert ClassInstanceCreation(2299) into ThrowStatement(2300) at 0", "Insert ThisExpression(2307) into FieldAccess(2309) at 0", "Insert SimpleName: keyIndexColumnFamily(2308) into FieldAccess(2309) at 1", "Insert MethodInvocation(2315) into ExpressionStatement(2316) at 0", "Insert SimpleType: InterruptedException(2319) into SingleVariableDeclaration(2321) at 0", "Insert SimpleName: e(2320) into SingleVariableDeclaration(2321) at 1", "Insert MethodInvocation(2335) into PrefixExpression: !(2336) at 0", "Insert ClassInstanceCreation(2345) into ThrowStatement(2346) at 0", "Move SimpleType: MessageQueueException(2649) into ClassInstanceCreation(2408) at 0", "Move SimpleType: MessageQueueException(2585) into ClassInstanceCreation(2424) at 0", "Insert SimpleType: Collection(2498) into ParameterizedType: Collection<Message>(2501) at 0", "Insert SimpleType: Message(2500) into ParameterizedType: Collection<Message>(2501) at 1", "Insert PrimitiveType: int(2503) into SingleVariableDeclaration(2505) at 0", "Insert SimpleName: itemsToPop(2504) into SingleVariableDeclaration(2505) at 1", "Insert SimpleName: BusyLockException(2508) into SimpleType: BusyLockException(2509) at 0", "Insert SimpleName: InterruptedException(2510) into SimpleType: InterruptedException(2511) at 0", "Insert ReturnStatement(2517) into Block(2518) at 0", "Insert PrimitiveType: long(2532) into SingleVariableDeclaration(2534) at 0", "Insert SimpleName: timeout(2533) into SingleVariableDeclaration(2534) at 1", "Insert SimpleType: TimeUnit(2536) into SingleVariableDeclaration(2538) at 0", "Insert SimpleName: units(2537) into SingleVariableDeclaration(2538) at 1", "Insert VariableDeclarationStatement(2563) into Block(2742) at 0", "Insert IfStatement(2645) into Block(2742) at 1", "Move VariableDeclarationStatement(1437) into Block(2742) at 2", "Insert WhileStatement(2741) into Block(2742) at 3", "Insert SimpleType: Collection(2746) into ParameterizedType: Collection<Message>(2749) at 0", "Insert SimpleType: Message(2748) into ParameterizedType: Collection<Message>(2749) at 1", "Insert SimpleType: MessageQueueShard(2752) into SingleVariableDeclaration(2754) at 0", "Insert SimpleName: partition(2753) into SingleVariableDeclaration(2754) at 1", "Insert PrimitiveType: int(2755) into SingleVariableDeclaration(2757) at 0", "Insert SimpleName: itemsToPop(2756) into SingleVariableDeclaration(2757) at 1", "Move SimpleName: BusyLockException(1486) into SimpleType: BusyLockException(2761) at 0", "Insert SimpleName: InterruptedException(2762) into SimpleType: InterruptedException(2763) at 0", "Insert VariableDeclarationStatement(2772) into Block(2856) at 0", "Insert ReturnStatement(2855) into Block(2856) at 2", "Insert SimpleName: Override(2858) into MarkerAnnotation(2859) at 0", "Insert SimpleType: Collection(2862) into ParameterizedType: Collection<Message>(2865) at 0", "Insert SimpleType: Message(2864) into ParameterizedType: Collection<Message>(2865) at 1", "Insert PrimitiveType: int(2867) into SingleVariableDeclaration(2869) at 0", "Insert SimpleName: itemsToPop(2868) into SingleVariableDeclaration(2869) at 1", "Insert SimpleName: MessageQueueException(2870) into SimpleType: MessageQueueException(2871) at 0", "Insert VariableDeclarationStatement(2875) into Block(2993) at 0", "Insert IfStatement(2904) into Block(2993) at 1", "Insert VariableDeclarationStatement(2915) into Block(2993) at 2", "Insert ForStatement(2990) into Block(2993) at 3", "Insert ReturnStatement(2992) into Block(2993) at 4", "Insert SimpleType: Collection(2997) into ParameterizedType: Collection<Message>(3000) at 0", "Insert SimpleType: Message(2999) into ParameterizedType: Collection<Message>(3000) at 1", "Insert SimpleType: String(3003) into SingleVariableDeclaration(3005) at 0", "Insert SimpleName: shardName(3004) into SingleVariableDeclaration(3005) at 1", "Insert PrimitiveType: int(3006) into SingleVariableDeclaration(3008) at 0", "Insert SimpleName: itemsToPop(3007) into SingleVariableDeclaration(3008) at 1", "Insert SimpleName: MessageQueueException(3009) into SimpleType: MessageQueueException(3010) at 0", "Insert VariableDeclarationStatement(3021) into Block(3139) at 0", "Insert TryStatement(3138) into Block(3139) at 1", "Insert SimpleType: String(3145) into SingleVariableDeclaration(3147) at 0", "Insert SimpleName: shardName(3146) into SingleVariableDeclaration(3147) at 1", "Insert SimpleName: MessageQueueException(3148) into SimpleType: MessageQueueException(3149) at 0", "Insert VariableDeclarationStatement(3157) into Block(3247) at 0", "Insert TryStatement(3246) into Block(3247) at 1", "Insert VariableDeclarationStatement(3303) into Block(4010) at 4", "Move VariableDeclarationStatement(2336) into Block(4057) at 0", "Move ExpressionStatement(1516) into Block(4057) at 1", "Move TryStatement(2378) into Block(4057) at 2", "Insert SimpleName: Override(4059) into MarkerAnnotation(4060) at 0", "Insert SimpleName: MessageQueueException(4071) into SimpleType: MessageQueueException(4072) at 0", "Insert VariableDeclarationStatement(4083) into Block(4114) at 0", "Insert EnhancedForStatement(4095) into Block(4114) at 1", "Move TryStatement(2460) into Block(4114) at 2", "Insert SimpleType: Message(4120) into SingleVariableDeclaration(4122) at 0", "Insert SimpleName: message(4121) into SingleVariableDeclaration(4122) at 1", "Insert SimpleType: MutationBatch(4124) into SingleVariableDeclaration(4126) at 0", "Insert SimpleName: mb(4125) into SingleVariableDeclaration(4126) at 1", "Insert IfStatement(4195) into Block(4196) at 0", "Insert SimpleName: Message(4199) into SimpleType: Message(4200) at 0", "Insert ParameterizedType: Column<MessageQueueEntry>(4206) into SingleVariableDeclaration(4208) at 0", "Insert SimpleName: column(4207) into SingleVariableDeclaration(4208) at 1", "Move VariableDeclarationStatement(2089) into Block(4263) at 0", "Move TryStatement(2135) into Block(4263) at 1", "Insert ReturnStatement(4262) into Block(4263) at 2", "Insert SimpleName: Override(4265) into MarkerAnnotation(4266) at 0", "Insert SimpleName: MessageQueueException(4274) into SimpleType: MessageQueueException(4275) at 0", "Move VariableDeclarationStatement(2423) into Block(4310) at 0", "Move ExpressionStatement(2427) into Block(4310) at 1", "Insert TryStatement(4309) into Block(4310) at 2", "Insert SimpleName: Override(4325) into MarkerAnnotation(4326) at 0", "Insert SimpleName: String(4328) into SimpleType: String(4329) at 0", "Insert SimpleType: Message(4332) into SingleVariableDeclaration(4334) at 0", "Insert SimpleName: message(4333) into SingleVariableDeclaration(4334) at 1", "Insert SimpleName: MessageQueueException(4335) into SimpleType: MessageQueueException(4336) at 0", "Move VariableDeclarationStatement(2491) into Block(4376) at 0", "Insert IfStatement(4363) into Block(4376) at 1", "Insert ReturnStatement(4375) into Block(4376) at 2", "Insert SimpleName: SendMessageResponse(4381) into SimpleType: SendMessageResponse(4382) at 0", "Insert SimpleName: MessageQueueException(4391) into SimpleType: MessageQueueException(4392) at 0", "Insert VariableDeclarationStatement(4405) into Block(4730) at 0", "Insert VariableDeclarationStatement(4416) into Block(4730) at 1", "Insert VariableDeclarationStatement(4427) into Block(4730) at 2", "Move VariableDeclarationStatement(2603) into Block(4730) at 3", "Insert VariableDeclarationStatement(4446) into Block(4730) at 4", "Insert EnhancedForStatement(4488) into Block(4730) at 5", "Insert IfStatement(4658) into Block(4730) at 6", "Insert VariableDeclarationStatement(4671) into Block(4730) at 7", "Move EnhancedForStatement(2638) into Block(4730) at 8", "Move TryStatement(2656) into Block(4730) at 9", "Insert ReturnStatement(4729) into Block(4730) at 10", "Update SimpleName: response(2852) to mb", "Move SimpleName: response(2852) into MethodInvocation(4894) at 0", "Update SimpleName: put(2853) to withRow", "Move SimpleName: put(2853) into MethodInvocation(4894) at 1", "Insert SimpleName: keyIndexColumnFamily(4887) into MethodInvocation(4894) at 2", "Insert MethodInvocation(4893) into MethodInvocation(4894) at 3", "Insert SimpleName: MessageMetadataEntry(4896) into MethodInvocation(4904) at 0", "Update SimpleName: message(2855) to newMessageId", "Insert MethodInvocation(4903) into MethodInvocation(4904) at 2", "Insert SimpleName: settings(4905) into MethodInvocation(4907) at 0", "Insert SimpleName: getRetentionTimeout(4906) into MethodInvocation(4907) at 1", "Insert SimpleName: LOG(858) into MethodInvocation(863) at 0", "Insert SimpleName: warn(859) into MethodInvocation(863) at 1", "Insert InfixExpression: +(862) into MethodInvocation(863) at 2", "Insert SimpleName: partition(1411) into MethodInvocation(1413) at 0", "Insert SimpleName: getName(1412) into MethodInvocation(1413) at 1", "Insert StringLiteral: \"Failed to clear messages from queue \"(1431) into InfixExpression: +(1433) at 0", "Insert SimpleName: queueName(1432) into InfixExpression: +(1433) at 1", "Insert StringLiteral: \"Failed to clear messages from queue \"(1502) into InfixExpression: +(1504) at 0", "Insert SimpleName: queueName(1503) into InfixExpression: +(1504) at 1", "Insert MethodInvocation(1572) into MethodInvocation(1574) at 0", "Insert SimpleName: execute(1573) into MethodInvocation(1574) at 1", "Insert SimpleName: ByteArrayInputStream(1579) into SimpleType: ByteArrayInputStream(1580) at 0", "Insert SimpleName: bais(1581) into VariableDeclarationFragment(1588) at 0", "Insert ClassInstanceCreation(1587) into VariableDeclarationFragment(1588) at 1", "Insert SimpleName: mapper(1590) into MethodInvocation(1596) at 0", "Insert SimpleName: readValue(1591) into MethodInvocation(1596) at 1", "Insert SimpleName: bais(1592) into MethodInvocation(1596) at 2", "Insert TypeLiteral(1595) into MethodInvocation(1596) at 3", "Insert Block(1610) into TryStatement(1624) at 0", "Insert CatchClause(1623) into TryStatement(1624) at 1", "Insert SimpleName: MessageQueueException(1641) into SimpleType: MessageQueueException(1642) at 0", "Insert StringLiteral: \"Error getting message \"(1643) into InfixExpression: +(1645) at 0", "Insert SimpleName: messageId(1644) into InfixExpression: +(1645) at 1", "Insert MethodInvocation(1708) into MethodInvocation(1710) at 0", "Insert SimpleName: execute(1709) into MethodInvocation(1710) at 1", "Insert SimpleName: Column(1715) into SimpleType: Column(1716) at 0", "Insert SimpleName: MessageMetadataEntry(1717) into SimpleType: MessageMetadataEntry(1718) at 0", "Insert SimpleName: readMessage(1723) into MethodInvocation(1729) at 0", "Insert MethodInvocation(1728) into MethodInvocation(1729) at 1", "Insert SimpleName: MessageQueueException(1748) into SimpleType: MessageQueueException(1749) at 0", "Insert StringLiteral: \"Error fetching row \"(1750) into InfixExpression: +(1752) at 0", "Insert SimpleName: groupRowKey(1751) into InfixExpression: +(1752) at 1", "Insert MethodInvocation(1822) into MethodInvocation(1824) at 0", "Insert SimpleName: execute(1823) into MethodInvocation(1824) at 1", "Insert SimpleName: Column(1829) into SimpleType: Column(1830) at 0", "Insert SimpleName: MessageMetadataEntry(1831) into SimpleType: MessageMetadataEntry(1832) at 0", "Insert SimpleType: String(1838) into ArrayType: String[](1840) at 0", "Insert Dimension(1839) into ArrayType: String[](1840) at 1", "Insert SimpleName: parts(1841) into VariableDeclarationFragment(1849) at 0", "Insert MethodInvocation(1848) into VariableDeclarationFragment(1849) at 1", "Insert SimpleName: String(1851) into SimpleType: String(1852) at 0", "Insert SimpleName: shardKey(1853) into VariableDeclarationFragment(1857) at 0", "Insert ArrayAccess(1856) into VariableDeclarationFragment(1857) at 1", "Insert SimpleName: MessageQueueEntry(1859) into SimpleType: MessageQueueEntry(1860) at 0", "Insert SimpleName: queueEntry(1861) into VariableDeclarationFragment(1868) at 0", "Insert ClassInstanceCreation(1867) into VariableDeclarationFragment(1868) at 1", "Insert MethodInvocation(1874) into MethodInvocation(1877) at 0", "Insert SimpleName: deleteColumn(1875) into MethodInvocation(1877) at 1", "Insert SimpleName: queueEntry(1876) into MethodInvocation(1877) at 2", "Insert SimpleName: MessageQueueException(1902) into SimpleType: MessageQueueException(1903) at 0", "Insert StringLiteral: \"Error fetching row \"(1904) into InfixExpression: +(1906) at 0", "Insert SimpleName: groupRowKey(1905) into InfixExpression: +(1906) at 1", "Insert SimpleName: MessageQueueException(1922) into SimpleType: MessageQueueException(1923) at 0", "Insert StringLiteral: \"Error deleting queue item \"(1924) into InfixExpression: +(1926) at 0", "Insert SimpleName: groupRowKey(1925) into InfixExpression: +(1926) at 1", "Insert MethodInvocation(1982) into MethodInvocation(1985) at 0", "Insert SimpleName: setConsistencyLevel(1983) into MethodInvocation(1985) at 1", "Insert SimpleName: consistencyLevel(1984) into MethodInvocation(1985) at 2", "Insert SimpleName: MessageQueueException(1996) into SimpleType: MessageQueueException(1997) at 0", "Insert StringLiteral: \"Error deleting message \"(1998) into InfixExpression: +(2000) at 0", "Insert SimpleName: messageId(1999) into InfixExpression: +(2000) at 1", "Insert SimpleName: MessageQueueEntry(2060) into SimpleType: MessageQueueEntry(2061) at 0", "Insert SimpleName: parts(2062) into ArrayAccess(2064) at 0", "Insert NumberLiteral: 1(2063) into ArrayAccess(2064) at 1", "Insert SimpleName: MessageQueueException(2088) into SimpleType: MessageQueueException(2089) at 0", "Insert StringLiteral: \"Error deleting messages \"(2090) into InfixExpression: +(2092) at 0", "Insert SimpleName: messageIds(2091) into InfixExpression: +(2092) at 1", "Insert SimpleName: Thread(2140) into MethodInvocation(2143) at 0", "Insert SimpleName: sleep(2141) into MethodInvocation(2143) at 1", "Insert SimpleName: SCHEMA_CHANGE_DELAY(2142) into MethodInvocation(2143) at 2", "Insert SimpleName: InterruptedException(2146) into SimpleType: InterruptedException(2147) at 0", "Insert MethodInvocation(2160) into MethodInvocation(2163) at 0", "Insert SimpleName: contains(2161) into MethodInvocation(2163) at 1", "Insert StringLiteral: \"already exist\"(2162) into MethodInvocation(2163) at 2", "Insert SimpleType: MessageQueueException(2166) into ClassInstanceCreation(2173) at 0", "Insert MethodInvocation(2202) into MethodInvocation(2206) at 0", "Insert SimpleName: put(2203) into MethodInvocation(2206) at 1", "Insert StringLiteral: \"gc_grace_period\"(2204) into MethodInvocation(2206) at 2", "Insert NumberLiteral: 0(2205) into MethodInvocation(2206) at 3", "Insert SimpleName: Thread(2211) into MethodInvocation(2214) at 0", "Insert SimpleName: sleep(2212) into MethodInvocation(2214) at 1", "Insert SimpleName: SCHEMA_CHANGE_DELAY(2213) into MethodInvocation(2214) at 2", "Insert SimpleName: InterruptedException(2217) into SimpleType: InterruptedException(2218) at 0", "Insert MethodInvocation(2231) into MethodInvocation(2234) at 0", "Insert SimpleName: contains(2232) into MethodInvocation(2234) at 1", "Insert StringLiteral: \"already exist\"(2233) into MethodInvocation(2234) at 2", "Insert SimpleType: MessageQueueException(2237) into ClassInstanceCreation(2244) at 0", "Insert InfixExpression: +(2242) into ClassInstanceCreation(2244) at 1", "Insert SimpleName: e(2243) into ClassInstanceCreation(2244) at 2", "Insert SimpleName: Thread(2266) into MethodInvocation(2269) at 0", "Insert SimpleName: sleep(2267) into MethodInvocation(2269) at 1", "Insert SimpleName: SCHEMA_CHANGE_DELAY(2268) into MethodInvocation(2269) at 2", "Insert SimpleName: InterruptedException(2272) into SimpleType: InterruptedException(2273) at 0", "Insert MethodInvocation(2286) into MethodInvocation(2289) at 0", "Insert SimpleName: contains(2287) into MethodInvocation(2289) at 1", "Insert StringLiteral: \"already exist\"(2288) into MethodInvocation(2289) at 2", "Insert SimpleType: MessageQueueException(2292) into ClassInstanceCreation(2299) at 0", "Insert InfixExpression: +(2297) into ClassInstanceCreation(2299) at 1", "Insert SimpleName: e(2298) into ClassInstanceCreation(2299) at 2", "Insert SimpleName: Thread(2312) into MethodInvocation(2315) at 0", "Insert SimpleName: sleep(2313) into MethodInvocation(2315) at 1", "Insert SimpleName: SCHEMA_CHANGE_DELAY(2314) into MethodInvocation(2315) at 2", "Insert SimpleName: InterruptedException(2318) into SimpleType: InterruptedException(2319) at 0", "Insert MethodInvocation(2332) into MethodInvocation(2335) at 0", "Insert SimpleName: contains(2333) into MethodInvocation(2335) at 1", "Insert StringLiteral: \"already exist\"(2334) into MethodInvocation(2335) at 2", "Insert SimpleType: MessageQueueException(2338) into ClassInstanceCreation(2345) at 0", "Insert InfixExpression: +(2343) into ClassInstanceCreation(2345) at 1", "Insert SimpleName: e(2344) into ClassInstanceCreation(2345) at 2", "Update SimpleName: columnFamily(1226) to queueColumnFamily", "Insert SimpleName: Collection(2497) into SimpleType: Collection(2498) at 0", "Insert SimpleName: Message(2499) into SimpleType: Message(2500) at 0", "Insert MethodInvocation(2516) into ReturnStatement(2517) at 0", "Insert SimpleName: TimeUnit(2535) into SimpleType: TimeUnit(2536) at 0", "Insert PrimitiveType: long(2545) into VariableDeclarationStatement(2563) at 0", "Insert VariableDeclarationFragment(2562) into VariableDeclarationStatement(2563) at 1", "Insert InfixExpression: !=(2568) into IfStatement(2645) at 0", "Insert Block(2639) into IfStatement(2645) at 1", "Insert Block(2644) into IfStatement(2645) at 2", "Move BooleanLiteral: true(1428) into WhileStatement(2741) at 0", "Insert Block(2740) into WhileStatement(2741) at 1", "Insert SimpleName: Collection(2745) into SimpleType: Collection(2746) at 0", "Insert SimpleName: Message(2747) into SimpleType: Message(2748) at 0", "Insert SimpleName: MessageQueueShard(2751) into SimpleType: MessageQueueShard(2752) at 0", "Insert ParameterizedType: Collection<Message>(2768) into VariableDeclarationStatement(2772) at 0", "Insert VariableDeclarationFragment(2771) into VariableDeclarationStatement(2772) at 1", "Insert SimpleName: messages(2854) into ReturnStatement(2855) at 0", "Insert SimpleName: Collection(2861) into SimpleType: Collection(2862) at 0", "Insert SimpleName: Message(2863) into SimpleType: Message(2864) at 0", "Insert PrimitiveType: long(2872) into VariableDeclarationStatement(2875) at 0", "Insert VariableDeclarationFragment(2874) into VariableDeclarationStatement(2875) at 1", "Insert InfixExpression: !=(2880) into IfStatement(2904) at 0", "Insert ExpressionStatement(2899) into IfStatement(2904) at 1", "Insert ExpressionStatement(2903) into IfStatement(2904) at 2", "Insert ParameterizedType: List<Message>(2909) into VariableDeclarationStatement(2915) at 0", "Insert VariableDeclarationFragment(2914) into VariableDeclarationStatement(2915) at 1", "Insert VariableDeclarationExpression(2920) into ForStatement(2990) at 0", "Insert InfixExpression: <(2925) into ForStatement(2990) at 1", "Insert PostfixExpression: ++(2927) into ForStatement(2990) at 2", "Insert Block(2989) into ForStatement(2990) at 3", "Insert SimpleName: messages(2991) into ReturnStatement(2992) at 0", "Insert SimpleName: Collection(2996) into SimpleType: Collection(2997) at 0", "Insert SimpleName: Message(2998) into SimpleType: Message(2999) at 0", "Insert SimpleName: String(3002) into SimpleType: String(3003) at 0", "Insert PrimitiveType: long(3011) into VariableDeclarationStatement(3021) at 0", "Insert VariableDeclarationFragment(3020) into VariableDeclarationStatement(3021) at 1", "Insert Block(3123) into TryStatement(3138) at 0", "Insert CatchClause(3137) into TryStatement(3138) at 1", "Insert SimpleName: String(3144) into SimpleType: String(3145) at 0", "Move SimpleType: UUID(2480) into VariableDeclarationStatement(3157) at 0", "Insert VariableDeclarationFragment(3156) into VariableDeclarationStatement(3157) at 1", "Insert Block(3231) into TryStatement(3246) at 0", "Insert CatchClause(3245) into TryStatement(3246) at 1", "Insert PrimitiveType: int(3299) into VariableDeclarationStatement(3303) at 0", "Insert VariableDeclarationFragment(3302) into VariableDeclarationStatement(3303) at 1", "Insert SimpleType: MutationBatch(4074) into VariableDeclarationStatement(4083) at 0", "Insert VariableDeclarationFragment(4082) into VariableDeclarationStatement(4083) at 1", "Move SingleVariableDeclaration(2409) into EnhancedForStatement(4095) at 0", "Insert SimpleName: messages(4088) into EnhancedForStatement(4095) at 1", "Insert Block(4094) into EnhancedForStatement(4095) at 2", "Insert SimpleName: Message(4119) into SimpleType: Message(4120) at 0", "Insert SimpleName: MutationBatch(4123) into SimpleType: MutationBatch(4124) at 0", "Move InfixExpression: !=(2415) into IfStatement(4195) at 0", "Insert Block(4194) into IfStatement(4195) at 1", "Insert SimpleType: Column(4203) into ParameterizedType: Column<MessageQueueEntry>(4206) at 0", "Insert SimpleType: MessageQueueEntry(4205) into ParameterizedType: Column<MessageQueueEntry>(4206) at 1", "Insert SimpleName: message(4261) into ReturnStatement(4262) at 0", "Update SimpleType: MessageQueueEntry(2417) to MutationBatch", "Insert Block(4296) into TryStatement(4309) at 0", "Insert CatchClause(4308) into TryStatement(4309) at 1", "Insert SimpleName: Message(4331) into SimpleType: Message(4332) at 0", "Insert SimpleType: SendMessageResponse(4338) into VariableDeclarationStatement(4347) at 0", "Insert PrefixExpression: !(4353) into IfStatement(4363) at 0", "Insert ThrowStatement(4362) into IfStatement(4363) at 1", "Insert MethodInvocation(4374) into ReturnStatement(4375) at 0", "Insert ParameterizedType: Map<String,Message>(4399) into VariableDeclarationStatement(4405) at 0", "Insert VariableDeclarationFragment(4404) into VariableDeclarationStatement(4405) at 1", "Insert ParameterizedType: Set<String>(4410) into VariableDeclarationStatement(4416) at 0", "Insert VariableDeclarationFragment(4415) into VariableDeclarationStatement(4416) at 1", "Insert ParameterizedType: List<Message>(4421) into VariableDeclarationStatement(4427) at 0", "Insert VariableDeclarationFragment(4426) into VariableDeclarationStatement(4427) at 1", "Update SimpleType: MessageQueueEntry(2543) to MessageMetadataEntry", "Move SimpleType: MessageQueueEntry(2543) into VariableDeclarationStatement(4446) at 0", "Insert VariableDeclarationFragment(4445) into VariableDeclarationStatement(4446) at 1", "Insert SingleVariableDeclaration(4450) into EnhancedForStatement(4488) at 0", "Insert SimpleName: messages(4451) into EnhancedForStatement(4488) at 1", "Insert Block(4487) into EnhancedForStatement(4488) at 2", "Insert PrefixExpression: !(4492) into IfStatement(4658) at 0", "Insert Block(4657) into IfStatement(4658) at 1", "Insert ParameterizedType: Map<String,Message>(4665) into VariableDeclarationStatement(4671) at 0", "Move VariableDeclarationFragment(2698) into VariableDeclarationStatement(4671) at 1", "Update SimpleName: hooks(2630) to messages", "Insert Block(4710) into TryStatement(4723) at 0", "Insert ClassInstanceCreation(4728) into ReturnStatement(4729) at 0", "Insert SimpleName: getCompositeKey(4888) into MethodInvocation(4893) at 0", "Insert SimpleName: queueName(4889) into MethodInvocation(4893) at 1", "Insert MethodInvocation(4892) into MethodInvocation(4893) at 2", "Insert SimpleName: getCompositeKey(4898) into MethodInvocation(4903) at 0", "Insert SimpleName: shardKey(4899) into MethodInvocation(4903) at 1", "Insert MethodInvocation(4902) into MethodInvocation(4903) at 2", "Insert StringLiteral: \"Invalid message: \"(860) into InfixExpression: +(862) at 0", "Insert SimpleName: input(861) into InfixExpression: +(862) at 1", "Insert MethodInvocation(1569) into MethodInvocation(1572) at 0", "Insert SimpleName: getColumn(1570) into MethodInvocation(1572) at 1", "Insert SimpleName: entry(1571) into MethodInvocation(1572) at 2", "Insert SimpleType: ByteArrayInputStream(1583) into ClassInstanceCreation(1587) at 0", "Insert MethodInvocation(1586) into ClassInstanceCreation(1587) at 1", "Insert SimpleType: Message(1594) into TypeLiteral(1595) at 0", "Insert ReturnStatement(1609) into Block(1610) at 0", "Insert SingleVariableDeclaration(1614) into CatchClause(1623) at 0", "Insert Block(1622) into CatchClause(1623) at 1", "Insert MethodInvocation(1687) into MethodInvocation(1708) at 0", "Insert SimpleName: withColumnRange(1688) into MethodInvocation(1708) at 1", "Insert MethodInvocation(1707) into MethodInvocation(1708) at 2", "Insert MethodInvocation(1726) into MethodInvocation(1728) at 0", "Insert SimpleName: getName(1727) into MethodInvocation(1728) at 1", "Insert MethodInvocation(1801) into MethodInvocation(1822) at 0", "Insert SimpleName: withColumnRange(1802) into MethodInvocation(1822) at 1", "Insert MethodInvocation(1821) into MethodInvocation(1822) at 2", "Insert SimpleName: String(1837) into SimpleType: String(1838) at 0", "Insert SimpleName: splitCompositeKey(1842) into MethodInvocation(1848) at 0", "Insert MethodInvocation(1847) into MethodInvocation(1848) at 1", "Insert SimpleName: parts(1854) into ArrayAccess(1856) at 0", "Insert NumberLiteral: 0(1855) into ArrayAccess(1856) at 1", "Insert SimpleType: MessageQueueEntry(1863) into ClassInstanceCreation(1867) at 0", "Insert ArrayAccess(1866) into ClassInstanceCreation(1867) at 1", "Insert SimpleName: mb(1870) into MethodInvocation(1874) at 0", "Insert SimpleName: withRow(1871) into MethodInvocation(1874) at 1", "Insert SimpleName: queueColumnFamily(1872) into MethodInvocation(1874) at 2", "Insert SimpleName: shardKey(1873) into MethodInvocation(1874) at 3", "Insert SimpleName: keyspace(1977) into MethodInvocation(1982) at 0", "Insert SimpleName: prepareColumnMutation(1978) into MethodInvocation(1982) at 1", "Insert SimpleName: queueColumnFamily(1979) into MethodInvocation(1982) at 2", "Insert SimpleName: shardKey(1980) into MethodInvocation(1982) at 3", "Insert SimpleName: entry(1981) into MethodInvocation(1982) at 4", "Insert SimpleName: e(2158) into MethodInvocation(2160) at 0", "Insert SimpleName: getMessage(2159) into MethodInvocation(2160) at 1", "Insert SimpleName: MessageQueueException(2165) into SimpleType: MessageQueueException(2166) at 0", "Insert MethodInvocation(2198) into MethodInvocation(2202) at 0", "Insert SimpleName: put(2199) into MethodInvocation(2202) at 1", "Insert StringLiteral: \"read_repair_chance\"(2200) into MethodInvocation(2202) at 2", "Insert NumberLiteral: 1.0(2201) into MethodInvocation(2202) at 3", "Insert SimpleName: e(2229) into MethodInvocation(2231) at 0", "Insert SimpleName: getMessage(2230) into MethodInvocation(2231) at 1", "Insert SimpleName: MessageQueueException(2236) into SimpleType: MessageQueueException(2237) at 0", "Insert StringLiteral: \"Failed to create column family for \"(2238) into InfixExpression: +(2242) at 0", "Insert MethodInvocation(2241) into InfixExpression: +(2242) at 1", "Insert SimpleName: e(2284) into MethodInvocation(2286) at 0", "Insert SimpleName: getMessage(2285) into MethodInvocation(2286) at 1", "Insert SimpleName: MessageQueueException(2291) into SimpleType: MessageQueueException(2292) at 0", "Insert StringLiteral: \"Failed to create column family for \"(2293) into InfixExpression: +(2297) at 0", "Insert MethodInvocation(2296) into InfixExpression: +(2297) at 1", "Insert SimpleName: e(2330) into MethodInvocation(2332) at 0", "Insert SimpleName: getMessage(2331) into MethodInvocation(2332) at 1", "Insert SimpleName: MessageQueueException(2337) into SimpleType: MessageQueueException(2338) at 0", "Insert StringLiteral: \"Failed to create column family for \"(2339) into InfixExpression: +(2343) at 0", "Insert MethodInvocation(2342) into InfixExpression: +(2343) at 1", "Update SimpleName: columnFamily(1249) to queueColumnFamily", "Update SimpleName: columnFamily(1265) to queueColumnFamily", "Insert SimpleName: readMessages(2512) into MethodInvocation(2516) at 0", "Insert SimpleName: itemsToPop(2513) into MethodInvocation(2516) at 1", "Insert NumberLiteral: 0(2514) into MethodInvocation(2516) at 2", "Insert NullLiteral(2515) into MethodInvocation(2516) at 3", "Insert SimpleName: timeoutTime(2546) into VariableDeclarationFragment(2562) at 0", "Insert ConditionalExpression(2561) into VariableDeclarationFragment(2562) at 1", "Insert MethodInvocation(2566) into InfixExpression: !=(2568) at 0", "Insert NullLiteral(2567) into InfixExpression: !=(2568) at 1", "Move VariableDeclarationStatement(1377) into Block(2639) at 0", "Move IfStatement(1427) into Block(2639) at 1", "Insert ExpressionStatement(2643) into Block(2644) at 0", "Insert IfStatement(2694) into Block(2740) at 0", "Insert IfStatement(2720) into Block(2740) at 1", "Insert IfStatement(2734) into Block(2740) at 2", "Move ExpressionStatement(1615) into Block(2740) at 3", "Insert SimpleType: Collection(2765) into ParameterizedType: Collection<Message>(2768) at 0", "Insert SimpleType: Message(2767) into ParameterizedType: Collection<Message>(2768) at 1", "Insert SimpleName: messages(2769) into VariableDeclarationFragment(2771) at 0", "Insert NullLiteral(2770) into VariableDeclarationFragment(2771) at 1", "Insert SimpleName: partitionIndex(2873) into VariableDeclarationFragment(2874) at 0", "Insert MethodInvocation(2878) into InfixExpression: !=(2880) at 0", "Insert NullLiteral(2879) into InfixExpression: !=(2880) at 1", "Insert Assignment: =(2898) into ExpressionStatement(2899) at 0", "Insert Assignment: =(2902) into ExpressionStatement(2903) at 0", "Insert SimpleType: List(2906) into ParameterizedType: List<Message>(2909) at 0", "Move SimpleType: Message(2690) into ParameterizedType: List<Message>(2909) at 1", "Insert SimpleName: messages(2910) into VariableDeclarationFragment(2914) at 0", "Insert MethodInvocation(2913) into VariableDeclarationFragment(2914) at 1", "Insert PrimitiveType: int(2916) into VariableDeclarationExpression(2920) at 0", "Insert VariableDeclarationFragment(2919) into VariableDeclarationExpression(2920) at 1", "Insert SimpleName: i(2921) into InfixExpression: <(2925) at 0", "Insert MethodInvocation(2924) into InfixExpression: <(2925) at 1", "Insert SimpleName: i(2926) into PostfixExpression: ++(2927) at 0", "Insert ForStatement(2988) into Block(2989) at 0", "Insert SimpleName: curTimeMicros(3012) into VariableDeclarationFragment(3020) at 0", "Insert MethodInvocation(3019) into VariableDeclarationFragment(3020) at 1", "Insert VariableDeclarationStatement(3079) into Block(3123) at 0", "Insert VariableDeclarationStatement(3093) into Block(3123) at 1", "Insert EnhancedForStatement(3120) into Block(3123) at 2", "Insert ReturnStatement(3122) into Block(3123) at 3", "Move SingleVariableDeclaration(2874) into CatchClause(3137) at 0", "Insert Block(3136) into CatchClause(3137) at 1", "Insert SimpleName: currentTime(3152) into VariableDeclarationFragment(3156) at 0", "Insert MethodInvocation(3155) into VariableDeclarationFragment(3156) at 1", "Insert VariableDeclarationStatement(3225) into Block(3231) at 0", "Insert ReturnStatement(3230) into Block(3231) at 1", "Insert SingleVariableDeclaration(3235) into CatchClause(3245) at 0", "Insert Block(3244) into CatchClause(3245) at 1", "Insert SimpleName: lockColumnCount(3300) into VariableDeclarationFragment(3302) at 0", "Insert NumberLiteral: 0(3301) into VariableDeclarationFragment(3302) at 1", "Insert ExpressionStatement(3429) into Block(3538) at 11", "Insert EnhancedForStatement(3958) into Block(3961) at 1", "Update SimpleName: workQueue(1512) to fillAckMutation", "Update SimpleName: add(1513) to message", "Update SimpleName: partition(1514) to mb", "Insert SimpleName: MutationBatch(4073) into SimpleType: MutationBatch(4074) at 0", "Insert SimpleName: mb(4075) into VariableDeclarationFragment(4082) at 0", "Insert MethodInvocation(4081) into VariableDeclarationFragment(4082) at 1", "Move ExpressionStatement(1522) into Block(4094) at 0", "Move VariableDeclarationStatement(2321) into Block(4194) at 0", "Move ExpressionStatement(2325) into Block(4194) at 1", "Move ExpressionStatement(2347) into Block(4194) at 2", "Insert IfStatement(4180) into Block(4194) at 3", "Move EnhancedForStatement(2360) into Block(4194) at 4", "Insert SimpleName: Column(4202) into SimpleType: Column(4203) at 0", "Insert SimpleName: MessageQueueEntry(4204) into SimpleType: MessageQueueEntry(4205) at 0", "Update SimpleName: MessageQueueEntry(2416) to MutationBatch", "Update SimpleName: entry(2418) to mb", "Insert MethodInvocation(4284) into VariableDeclarationFragment(4285) at 1", "Update SimpleName: stats(2424) to fillAckMutation", "Update SimpleName: incFinishMessageCount(2425) to message", "Insert SimpleName: mb(4289) into MethodInvocation(4290) at 2", "Insert ExpressionStatement(4295) into Block(4296) at 0", "Insert SingleVariableDeclaration(4300) into CatchClause(4308) at 0", "Insert Block(4307) into CatchClause(4308) at 1", "Insert SimpleName: SendMessageResponse(4337) into SimpleType: SendMessageResponse(4338) at 0", "Insert SimpleName: response(4339) into VariableDeclarationFragment(4346) at 0", "Insert MethodInvocation(4345) into VariableDeclarationFragment(4346) at 1", "Insert MethodInvocation(4352) into PrefixExpression: !(4353) at 0", "Insert ClassInstanceCreation(4361) into ThrowStatement(4362) at 0", "Insert MethodInvocation(4372) into MethodInvocation(4374) at 0", "Update SimpleName: counter(2505) to getKey", "Move SimpleName: counter(2505) into MethodInvocation(4374) at 1", "Move SimpleType: Map(2688) into ParameterizedType: Map<String,Message>(4399) at 0", "Insert SimpleType: String(4396) into ParameterizedType: Map<String,Message>(4399) at 1", "Insert SimpleType: Message(4398) into ParameterizedType: Map<String,Message>(4399) at 2", "Insert SimpleName: keys(4400) into VariableDeclarationFragment(4404) at 0", "Insert MethodInvocation(4403) into VariableDeclarationFragment(4404) at 1", "Insert SimpleType: Set(4407) into ParameterizedType: Set<String>(4410) at 0", "Insert SimpleType: String(4409) into ParameterizedType: Set<String>(4410) at 1", "Insert SimpleName: notUniqueKeys(4411) into VariableDeclarationFragment(4415) at 0", "Insert MethodInvocation(4414) into VariableDeclarationFragment(4415) at 1", "Insert SimpleType: List(4418) into ParameterizedType: List<Message>(4421) at 0", "Insert SimpleType: Message(4420) into ParameterizedType: List<Message>(4421) at 1", "Insert SimpleName: notUniqueMessages(4422) into VariableDeclarationFragment(4426) at 0", "Insert MethodInvocation(4425) into VariableDeclarationFragment(4426) at 1", "Update SimpleName: MessageQueueEntry(2542) to MessageMetadataEntry", "Update SimpleName: entry(2544) to lockColumn", "Move SimpleName: entry(2544) into VariableDeclarationFragment(4445) at 0", "Insert MethodInvocation(4444) into VariableDeclarationFragment(4445) at 1", "Insert SimpleType: Message(4448) into SingleVariableDeclaration(4450) at 0", "Insert SimpleName: message(4449) into SingleVariableDeclaration(4450) at 1", "Insert IfStatement(4486) into Block(4487) at 0", "Insert MethodInvocation(4491) into PrefixExpression: !(4492) at 0", "Insert TryStatement(4512) into Block(4657) at 0", "Insert ExpressionStatement(4521) into Block(4657) at 1", "Insert VariableDeclarationStatement(4531) into Block(4657) at 2", "Insert TryStatement(4587) into Block(4657) at 3", "Insert EnhancedForStatement(4656) into Block(4657) at 4", "Move SimpleType: Map(2671) into ParameterizedType: Map<String,Message>(4665) at 0", "Insert SimpleType: String(4662) into ParameterizedType: Map<String,Message>(4665) at 1", "Insert SimpleType: Message(4664) into ParameterizedType: Map<String,Message>(4665) at 2", "Update SimpleName: response(2694) to success", "Update SimpleType: MessageQueueHooks(2627) to Message", "Update SimpleName: hook(2628) to message", "Insert IfStatement(4688) into Block(4704) at 0", "Insert VariableDeclarationStatement(4697) into Block(4704) at 1", "Insert ExpressionStatement(4709) into Block(4710) at 0", "Insert SingleVariableDeclaration(4714) into CatchClause(4722) at 0", "Insert SimpleType: SendMessageResponse(4725) into ClassInstanceCreation(4728) at 0", "Insert SimpleName: success(4726) into ClassInstanceCreation(4728) at 1", "Insert SimpleName: notUniqueMessages(4727) into ClassInstanceCreation(4728) at 2", "Insert MethodInvocation(4782) into MethodInvocation(4784) at 0", "Move SimpleName: message(2854) into MethodInvocation(4892) at 0", "Insert SimpleName: getKey(4891) into MethodInvocation(4892) at 1", "Insert SimpleName: entry(4900) into MethodInvocation(4902) at 0", "Update SimpleName: getToken(2856) to getMessageId", "Move SimpleName: getToken(2856) into MethodInvocation(4902) at 1", "Insert MethodInvocation(1566) into MethodInvocation(1569) at 0", "Insert SimpleName: getKey(1567) into MethodInvocation(1569) at 1", "Insert SimpleName: shardKey(1568) into MethodInvocation(1569) at 2", "Insert SimpleName: ByteArrayInputStream(1582) into SimpleType: ByteArrayInputStream(1583) at 0", "Insert SimpleName: column(1584) into MethodInvocation(1586) at 0", "Insert SimpleName: getByteArrayValue(1585) into MethodInvocation(1586) at 1", "Insert SimpleName: Message(1593) into SimpleType: Message(1594) at 0", "Insert MethodInvocation(1608) into ReturnStatement(1609) at 0", "Insert SimpleType: Exception(1612) into SingleVariableDeclaration(1614) at 0", "Insert SimpleName: e2(1613) into SingleVariableDeclaration(1614) at 1", "Insert ThrowStatement(1621) into Block(1622) at 0", "Insert MethodInvocation(1684) into MethodInvocation(1687) at 0", "Insert SimpleName: getRow(1685) into MethodInvocation(1687) at 1", "Insert SimpleName: groupRowKey(1686) into MethodInvocation(1687) at 2", "Insert MethodInvocation(1705) into MethodInvocation(1707) at 0", "Insert SimpleName: build(1706) into MethodInvocation(1707) at 1", "Insert SimpleName: entry(1724) into MethodInvocation(1726) at 0", "Insert SimpleName: getName(1725) into MethodInvocation(1726) at 1", "Insert MethodInvocation(1798) into MethodInvocation(1801) at 0", "Insert SimpleName: getRow(1799) into MethodInvocation(1801) at 1", "Insert SimpleName: groupRowKey(1800) into MethodInvocation(1801) at 2", "Insert MethodInvocation(1819) into MethodInvocation(1821) at 0", "Insert SimpleName: build(1820) into MethodInvocation(1821) at 1", "Insert MethodInvocation(1845) into MethodInvocation(1847) at 0", "Insert SimpleName: getName(1846) into MethodInvocation(1847) at 1", "Insert SimpleName: MessageQueueEntry(1862) into SimpleType: MessageQueueEntry(1863) at 0", "Insert SimpleName: parts(1864) into ArrayAccess(1866) at 0", "Insert NumberLiteral: 1(1865) into ArrayAccess(1866) at 1", "Update StringLiteral: \"CompositeType(BytesType, BytesType, TimeUUIDType, BytesType)\"(1174) to \"CompositeType(BytesType, BytesType(reversed=true), TimeUUIDType, BytesType)\"", "Update SimpleName: columnFamily(1196) to queueColumnFamily", "Insert MethodInvocation(2194) into MethodInvocation(2198) at 0", "Insert SimpleName: put(2195) into MethodInvocation(2198) at 1", "Insert StringLiteral: \"comparator_type\"(2196) into MethodInvocation(2198) at 2", "Insert StringLiteral: \"CompositeType(BytesType, UTF8Type)\"(2197) into MethodInvocation(2198) at 3", "Insert SimpleName: queueColumnFamily(2239) into MethodInvocation(2241) at 0", "Insert SimpleName: getName(2240) into MethodInvocation(2241) at 1", "Insert SimpleName: queueColumnFamily(2294) into MethodInvocation(2296) at 0", "Insert SimpleName: getName(2295) into MethodInvocation(2296) at 1", "Insert SimpleName: queueColumnFamily(2340) into MethodInvocation(2342) at 0", "Insert SimpleName: getName(2341) into MethodInvocation(2342) at 1", "Insert ParenthesizedExpression(2550) into ConditionalExpression(2561) at 0", "Insert NumberLiteral: 0(2551) into ConditionalExpression(2561) at 1", "Insert InfixExpression: +(2560) into ConditionalExpression(2561) at 2", "Insert SimpleName: settings(2564) into MethodInvocation(2566) at 0", "Insert SimpleName: getPartitionDuration(2565) into MethodInvocation(2566) at 1", "Insert Assignment: =(2642) into ExpressionStatement(2643) at 0", "Move PrefixExpression: !(1447) into IfStatement(2694) at 0", "Insert Block(2693) into IfStatement(2694) at 1", "Move PrefixExpression: !(1534) into IfStatement(2720) at 0", "Insert Block(2719) into IfStatement(2720) at 1", "Insert InfixExpression: &&(2729) into IfStatement(2734) at 0", "Insert ReturnStatement(2733) into IfStatement(2734) at 1", "Insert SimpleName: Collection(2764) into SimpleType: Collection(2765) at 0", "Insert SimpleName: Message(2766) into SimpleType: Message(2767) at 0", "Insert SimpleName: settings(2876) into MethodInvocation(2878) at 0", "Insert SimpleName: getPartitionDuration(2877) into MethodInvocation(2878) at 1", "Insert SimpleName: partitionIndex(2881) into Assignment: =(2898) at 0", "Insert InfixExpression: %(2897) into Assignment: =(2898) at 1", "Insert SimpleName: partitionIndex(2900) into Assignment: =(2902) at 0", "Insert NumberLiteral: 0(2901) into Assignment: =(2902) at 1", "Insert SimpleName: List(2905) into SimpleType: List(2906) at 0", "Insert SimpleName: Lists(2911) into MethodInvocation(2913) at 0", "Insert SimpleName: newArrayList(2912) into MethodInvocation(2913) at 1", "Insert SimpleName: i(2917) into VariableDeclarationFragment(2919) at 0", "Insert NumberLiteral: 0(2918) into VariableDeclarationFragment(2919) at 1", "Insert SimpleName: settings(2922) into MethodInvocation(2924) at 0", "Insert SimpleName: getPartitionCount(2923) into MethodInvocation(2924) at 1", "Insert VariableDeclarationExpression(2932) into ForStatement(2988) at 0", "Insert InfixExpression: <(2937) into ForStatement(2988) at 1", "Insert PostfixExpression: ++(2939) into ForStatement(2988) at 2", "Insert Block(2987) into ForStatement(2988) at 3", "Insert QualifiedName: TimeUnit.MICROSECONDS(3013) into MethodInvocation(3019) at 0", "Insert SimpleName: convert(3014) into MethodInvocation(3019) at 1", "Insert MethodInvocation(3017) into MethodInvocation(3019) at 2", "Insert QualifiedName: TimeUnit.MILLISECONDS(3018) into MethodInvocation(3019) at 3", "Move ParameterizedType: ColumnList<MessageQueueEntry>(1969) into VariableDeclarationStatement(3079) at 0", "Insert VariableDeclarationFragment(3078) into VariableDeclarationStatement(3079) at 1", "Insert ParameterizedType: List<Message>(3084) into VariableDeclarationStatement(3093) at 0", "Insert VariableDeclarationFragment(3092) into VariableDeclarationStatement(3093) at 1", "Insert SingleVariableDeclaration(3100) into EnhancedForStatement(3120) at 0", "Insert SimpleName: result(3101) into EnhancedForStatement(3120) at 1", "Insert Block(3119) into EnhancedForStatement(3120) at 2", "Insert SimpleName: messages(3121) into ReturnStatement(3122) at 0", "Insert ThrowStatement(3135) into Block(3136) at 0", "Insert SimpleName: TimeUUIDUtils(3153) into MethodInvocation(3155) at 0", "Insert SimpleName: getUniqueTimeUUIDinMicros(3154) into MethodInvocation(3155) at 1", "Move ParameterizedType: ColumnList<MessageQueueEntry>(1719) into VariableDeclarationStatement(3225) at 0", "Insert VariableDeclarationFragment(3224) into VariableDeclarationStatement(3225) at 1", "Insert PrefixExpression: !(3229) into ReturnStatement(3230) at 0", "Insert SimpleType: ConnectionException(3233) into SingleVariableDeclaration(3235) at 0", "Insert SimpleName: e(3234) into SingleVariableDeclaration(3235) at 1", "Insert ThrowStatement(3243) into Block(3244) at 0", "Insert ParameterizedType: ColumnList<MessageQueueEntry>(3353) into VariableDeclarationStatement(3391) at 0", "Insert Assignment: =(3428) into ExpressionStatement(3429) at 0", "Insert ExpressionStatement(3562) into Block(3569) at 0", "Update SimpleName: columnFamily(1955) to queueColumnFamily", "Insert ParameterizedType: ColumnList<MessageQueueEntry>(3627) into VariableDeclarationStatement(3682) at 0", "Move SingleVariableDeclaration(2029) into EnhancedForStatement(3958) at 0", "Move SimpleName: result(2030) into EnhancedForStatement(3958) at 1", "Insert Block(3957) into EnhancedForStatement(3958) at 2", "Insert MethodInvocation(4078) into MethodInvocation(4081) at 0", "Insert SimpleName: setConsistencyLevel(4079) into MethodInvocation(4081) at 1", "Insert SimpleName: consistencyLevel(4080) into MethodInvocation(4081) at 2", "Insert InfixExpression: !=(4159) into IfStatement(4180) at 0", "Insert Block(4179) into IfStatement(4180) at 1", "Insert MethodInvocation(4281) into MethodInvocation(4284) at 0", "Insert SimpleName: setConsistencyLevel(4282) into MethodInvocation(4284) at 1", "Insert SimpleName: consistencyLevel(4283) into MethodInvocation(4284) at 2", "Insert MethodInvocation(4294) into ExpressionStatement(4295) at 0", "Insert SimpleType: ConnectionException(4298) into SingleVariableDeclaration(4300) at 0", "Insert SimpleName: e(4299) into SingleVariableDeclaration(4300) at 1", "Insert ThrowStatement(4306) into Block(4307) at 0", "Insert SimpleName: sendMessages(4340) into MethodInvocation(4345) at 0", "Insert MethodInvocation(4344) into MethodInvocation(4345) at 1", "Insert MethodInvocation(4350) into MethodInvocation(4352) at 0", "Insert SimpleName: isEmpty(4351) into MethodInvocation(4352) at 1", "Insert SimpleType: KeyExistsException(4355) into ClassInstanceCreation(4361) at 0", "Insert InfixExpression: +(4360) into ClassInstanceCreation(4361) at 1", "Insert SimpleName: Iterables(4364) into MethodInvocation(4372) at 0", "Update SimpleName: convert(2499) to getFirst", "Move SimpleName: convert(2499) into MethodInvocation(4372) at 1", "Move MethodInvocation(2502) into MethodInvocation(4372) at 2", "Insert NullLiteral(4371) into MethodInvocation(4372) at 3", "Insert SimpleName: String(4395) into SimpleType: String(4396) at 0", "Insert SimpleName: Message(4397) into SimpleType: Message(4398) at 0", "Update SimpleName: message(2518) to Maps", "Move SimpleName: message(2518) into MethodInvocation(4403) at 0", "Update SimpleName: getTriggerTime(2519) to newHashMap", "Move SimpleName: getTriggerTime(2519) into MethodInvocation(4403) at 1", "Insert SimpleName: Set(4406) into SimpleType: Set(4407) at 0", "Insert SimpleName: String(4408) into SimpleType: String(4409) at 0", "Update SimpleName: counter(2523) to Sets", "Move SimpleName: counter(2523) into MethodInvocation(4414) at 0", "Update SimpleName: incrementAndGet(2524) to newHashSet", "Move SimpleName: incrementAndGet(2524) into MethodInvocation(4414) at 1", "Insert SimpleName: List(4417) into SimpleType: List(4418) at 0", "Insert SimpleName: Message(4419) into SimpleType: Message(4420) at 0", "Update SimpleName: TimeUUIDUtils(2536) to Lists", "Move SimpleName: TimeUUIDUtils(2536) into MethodInvocation(4425) at 0", "Update SimpleName: getMicrosTimeUUID(2537) to newArrayList", "Move SimpleName: getMicrosTimeUUID(2537) into MethodInvocation(4425) at 1", "Update SimpleName: MessageQueueEntry(2545) to MessageMetadataEntry", "Move SimpleName: MessageQueueEntry(2545) into MethodInvocation(4444) at 0", "Insert SimpleName: newUnique(4443) into MethodInvocation(4444) at 1", "Insert SimpleName: Message(4447) into SimpleType: Message(4448) at 0", "Insert MethodInvocation(4454) into IfStatement(4486) at 0", "Insert Block(4485) into IfStatement(4486) at 1", "Insert SimpleName: keys(4489) into MethodInvocation(4491) at 0", "Insert SimpleName: isEmpty(4490) into MethodInvocation(4491) at 1", "Insert Block(4497) into TryStatement(4512) at 0", "Insert CatchClause(4511) into TryStatement(4512) at 1", "Insert Assignment: =(4520) into ExpressionStatement(4521) at 0", "Insert ParameterizedType: Rows<String,MessageMetadataEntry>(4528) into VariableDeclarationStatement(4531) at 0", "Insert VariableDeclarationFragment(4530) into VariableDeclarationStatement(4531) at 1", "Insert Block(4572) into TryStatement(4587) at 0", "Insert CatchClause(4586) into TryStatement(4587) at 1", "Insert SingleVariableDeclaration(4596) into EnhancedForStatement(4656) at 0", "Insert SimpleName: result(4597) into EnhancedForStatement(4656) at 1", "Insert Block(4655) into EnhancedForStatement(4656) at 2", "Insert SimpleName: String(4661) into SimpleType: String(4662) at 0", "Insert SimpleName: Message(4663) into SimpleType: Message(4664) at 0", "Update SimpleName: MessageQueueHooks(2626) to Message", "Insert InfixExpression: &&(4686) into IfStatement(4688) at 0", "Insert ContinueStatement(4687) into IfStatement(4688) at 1", "Insert SimpleType: String(4690) into VariableDeclarationStatement(4697) at 0", "Insert VariableDeclarationFragment(4696) into VariableDeclarationStatement(4697) at 1", "Insert MethodInvocation(4708) into ExpressionStatement(4709) at 0", "Insert SimpleType: ConnectionException(4712) into SingleVariableDeclaration(4714) at 0", "Insert SimpleName: e(4713) into SingleVariableDeclaration(4714) at 1", "Insert SimpleName: SendMessageResponse(4724) into SimpleType: SendMessageResponse(4725) at 0", "Move SimpleName: message(2746) into MethodInvocation(4782) at 0", "Insert SimpleName: getTrigger(4781) into MethodInvocation(4782) at 1", "Update SimpleName: columnFamily(766) to queueColumnFamily", "Update SimpleName: columnFamily(1073) to queueColumnFamily", "Insert MethodInvocation(1563) into MethodInvocation(1566) at 0", "Insert SimpleName: setConsistencyLevel(1564) into MethodInvocation(1566) at 1", "Insert SimpleName: consistencyLevel(1565) into MethodInvocation(1566) at 2", "Insert SimpleName: invalidMessageHandler(1603) into MethodInvocation(1608) at 0", "Insert SimpleName: apply(1604) into MethodInvocation(1608) at 1", "Insert MethodInvocation(1607) into MethodInvocation(1608) at 2", "Insert SimpleName: Exception(1611) into SimpleType: Exception(1612) at 0", "Insert ClassInstanceCreation(1620) into ThrowStatement(1621) at 0", "Insert SimpleName: keyspace(1681) into MethodInvocation(1684) at 0", "Insert SimpleName: prepareQuery(1682) into MethodInvocation(1684) at 1", "Insert SimpleName: keyIndexColumnFamily(1683) into MethodInvocation(1684) at 2", "Insert MethodInvocation(1698) into MethodInvocation(1705) at 0", "Insert SimpleName: lessThanEquals(1699) into MethodInvocation(1705) at 1", "Insert CastExpression(1704) into MethodInvocation(1705) at 2", "Insert SimpleName: keyspace(1795) into MethodInvocation(1798) at 0", "Insert SimpleName: prepareQuery(1796) into MethodInvocation(1798) at 1", "Insert SimpleName: keyIndexColumnFamily(1797) into MethodInvocation(1798) at 2", "Insert MethodInvocation(1812) into MethodInvocation(1819) at 0", "Insert SimpleName: lessThanEquals(1813) into MethodInvocation(1819) at 1", "Insert CastExpression(1818) into MethodInvocation(1819) at 2", "Insert SimpleName: entry(1843) into MethodInvocation(1845) at 0", "Insert SimpleName: getName(1844) into MethodInvocation(1845) at 1", "Insert MethodInvocation(2190) into MethodInvocation(2194) at 0", "Insert SimpleName: put(2191) into MethodInvocation(2194) at 1", "Insert StringLiteral: \"key_validation_class\"(2192) into MethodInvocation(2194) at 2", "Insert StringLiteral: \"UTF8Type\"(2193) into MethodInvocation(2194) at 3", "Insert InfixExpression: ==(2549) into ParenthesizedExpression(2550) at 0", "Insert MethodInvocation(2554) into InfixExpression: +(2560) at 0", "Insert MethodInvocation(2559) into InfixExpression: +(2560) at 1", "Insert SimpleName: currentPartition(2640) into Assignment: =(2642) at 0", "Insert NumberLiteral: 0(2641) into Assignment: =(2642) at 1", "Move VariableDeclarationStatement(1443) into Block(2693) at 0", "Move ExpressionStatement(1453) into Block(2693) at 1", "Insert IfStatement(2685) into Block(2693) at 2", "Move IfStatement(1484) into Block(2693) at 3", "Move ExpressionStatement(1465) into Block(2719) at 0", "Move IfStatement(1473) into Block(2719) at 1", "Insert InfixExpression: !=(2723) into InfixExpression: &&(2729) at 0", "Insert InfixExpression: >(2728) into InfixExpression: &&(2729) at 1", "Insert MethodInvocation(2732) into ReturnStatement(2733) at 0", "Insert IfStatement(2793) into Block(2815) at 0", "Insert ParenthesizedExpression(2893) into InfixExpression: %(2897) at 0", "Insert MethodInvocation(2896) into InfixExpression: %(2897) at 1", "Insert PrimitiveType: int(2928) into VariableDeclarationExpression(2932) at 0", "Insert VariableDeclarationFragment(2931) into VariableDeclarationExpression(2932) at 1", "Insert SimpleName: j(2933) into InfixExpression: <(2937) at 0", "Insert MethodInvocation(2936) into InfixExpression: <(2937) at 1", "Insert SimpleName: j(2938) into PostfixExpression: ++(2939) at 0", "Insert VariableDeclarationStatement(2961) into Block(2987) at 0", "Move ExpressionStatement(1494) into Block(2987) at 1", "Insert IfStatement(2986) into Block(2987) at 2", "Insert SimpleName: System(3015) into MethodInvocation(3017) at 0", "Insert SimpleName: currentTimeMillis(3016) into MethodInvocation(3017) at 1", "Insert SimpleName: result(3027) into VariableDeclarationFragment(3078) at 0", "Insert MethodInvocation(3077) into VariableDeclarationFragment(3078) at 1", "Insert SimpleType: List(3081) into ParameterizedType: List<Message>(3084) at 0", "Move SimpleType: Message(2673) into ParameterizedType: List<Message>(3084) at 1", "Insert SimpleName: messages(3085) into VariableDeclarationFragment(3092) at 0", "Insert MethodInvocation(3091) into VariableDeclarationFragment(3092) at 1", "Insert ParameterizedType: Column<MessageQueueEntry>(3098) into SingleVariableDeclaration(3100) at 0", "Insert SimpleName: column(3099) into SingleVariableDeclaration(3100) at 1", "Insert VariableDeclarationStatement(3109) into Block(3119) at 0", "Insert IfStatement(3118) into Block(3119) at 1", "Insert ClassInstanceCreation(3134) into ThrowStatement(3135) at 0", "Insert SimpleName: result(3163) into VariableDeclarationFragment(3224) at 0", "Insert MethodInvocation(3223) into VariableDeclarationFragment(3224) at 1", "Move MethodInvocation(1507) into PrefixExpression: !(3229) at 0", "Insert SimpleName: ConnectionException(3232) into SimpleType: ConnectionException(3233) at 0", "Insert ClassInstanceCreation(3242) into ThrowStatement(3243) at 0", "Insert SimpleType: ColumnList(3350) into ParameterizedType: ColumnList<MessageQueueEntry>(3353) at 0", "Insert SimpleType: MessageQueueEntry(3352) into ParameterizedType: ColumnList<MessageQueueEntry>(3353) at 1", "Insert SimpleName: lockColumnCount(3424) into Assignment: =(3428) at 0", "Insert MethodInvocation(3427) into Assignment: =(3428) at 1", "Insert IfStatement(3535) into Block(3536) at 1", "Insert MethodInvocation(3561) into ExpressionStatement(3562) at 0", "Insert SimpleType: ColumnList(3624) into ParameterizedType: ColumnList<MessageQueueEntry>(3627) at 0", "Insert SimpleType: MessageQueueEntry(3626) into ParameterizedType: ColumnList<MessageQueueEntry>(3627) at 1", "Move IfStatement(2036) into Block(3957) at 0", "Move VariableDeclarationStatement(2044) into Block(3957) at 1", "Insert SwitchStatement(3956) into Block(3957) at 2", "Insert SimpleName: keyspace(4076) into MethodInvocation(4078) at 0", "Insert SimpleName: prepareMutationBatch(4077) into MethodInvocation(4078) at 1", "Update SimpleName: idleQueue(1518) to fillAckMutation", "Update SimpleName: add(1519) to message", "Update SimpleName: partition(1520) to mb", "Insert MethodInvocation(4157) into InfixExpression: !=(4159) at 0", "Insert NullLiteral(4158) into InfixExpression: !=(4159) at 1", "Insert ExpressionStatement(4178) into Block(4179) at 0", "Update SimpleName: getBusyEntry(2419) to keyspace", "Move SimpleName: getBusyEntry(2419) into MethodInvocation(4281) at 0", "Update SimpleName: message(2420) to prepareMutationBatch", "Move SimpleName: message(2420) into MethodInvocation(4281) at 1", "Move SimpleName: mb(2428) into MethodInvocation(4294) at 0", "Update SimpleName: withRow(2429) to execute", "Move SimpleName: withRow(2429) into MethodInvocation(4294) at 1", "Insert SimpleName: ConnectionException(4297) into SimpleType: ConnectionException(4298) at 0", "Insert ClassInstanceCreation(4305) into ThrowStatement(4306) at 0", "Insert SimpleName: Lists(4341) into MethodInvocation(4344) at 0", "Insert SimpleName: newArrayList(4342) into MethodInvocation(4344) at 1", "Insert SimpleName: message(4343) into MethodInvocation(4344) at 2", "Insert SimpleName: response(4348) into MethodInvocation(4350) at 0", "Insert SimpleName: getNotUnique(4349) into MethodInvocation(4350) at 1", "Insert SimpleName: KeyExistsException(4354) into SimpleType: KeyExistsException(4355) at 0", "Insert StringLiteral: \"Key already exists .\"(4356) into InfixExpression: +(4360) at 0", "Move MethodInvocation(2494) into InfixExpression: +(4360) at 1", "Insert MethodInvocation(4368) into MethodInvocation(4370) at 0", "Update SimpleName: currentTimeMillis(2501) to entrySet", "Move SimpleName: message(2550) into MethodInvocation(4454) at 0", "Update SimpleName: getToken(2551) to hasKey", "Move SimpleName: getToken(2551) into MethodInvocation(4454) at 1", "Move VariableDeclarationStatement(2564) into Block(4485) at 0", "Move ExpressionStatement(2570) into Block(4485) at 1", "Move ExpressionStatement(2574) into Block(4485) at 2", "Move ExpressionStatement(2583) into Block(4497) at 0", "Insert SingleVariableDeclaration(4501) into CatchClause(4511) at 0", "Insert Block(4510) into CatchClause(4511) at 1", "Insert SimpleName: mb(4513) into Assignment: =(4520) at 0", "Insert MethodInvocation(4519) into Assignment: =(4520) at 1", "Insert SimpleType: Rows(4523) into ParameterizedType: Rows<String,MessageMetadataEntry>(4528) at 0", "Insert SimpleType: String(4525) into ParameterizedType: Rows<String,MessageMetadataEntry>(4528) at 1", "Insert SimpleType: MessageMetadataEntry(4527) into ParameterizedType: Rows<String,MessageMetadataEntry>(4528) at 2", "Insert SimpleName: result(4529) into VariableDeclarationFragment(4530) at 0", "Insert ExpressionStatement(4571) into Block(4572) at 0", "Insert SingleVariableDeclaration(4576) into CatchClause(4586) at 0", "Insert Block(4585) into CatchClause(4586) at 1", "Insert ParameterizedType: Row<String,MessageMetadataEntry>(4594) into SingleVariableDeclaration(4596) at 0", "Insert SimpleName: row(4595) into SingleVariableDeclaration(4596) at 1", "Insert IfStatement(4654) into Block(4655) at 0", "Insert MethodInvocation(4679) into InfixExpression: &&(4686) at 0", "Insert MethodInvocation(4685) into InfixExpression: &&(4686) at 1", "Insert SimpleName: String(4689) into SimpleType: String(4690) at 0", "Insert SimpleName: messageId(4691) into VariableDeclarationFragment(4696) at 0", "Insert MethodInvocation(4695) into VariableDeclarationFragment(4696) at 1", "Update SimpleName: hook(2631) to success", "Update SimpleName: beforeSendMessage(2632) to put", "Update SimpleName: message(2633) to messageId", "Update SimpleName: mb(2634) to message", "Insert SimpleName: mb(4706) into MethodInvocation(4708) at 0", "Insert SimpleName: execute(4707) into MethodInvocation(4708) at 1", "Insert SimpleName: ConnectionException(4711) into SimpleType: ConnectionException(4712) at 0", "Insert SimpleName: keyspace(1560) into MethodInvocation(1563) at 0", "Insert SimpleName: prepareQuery(1561) into MethodInvocation(1563) at 1", "Insert SimpleName: queueColumnFamily(1562) into MethodInvocation(1563) at 2", "Insert SimpleName: column(1605) into MethodInvocation(1607) at 0", "Insert SimpleName: getStringValue(1606) into MethodInvocation(1607) at 1", "Insert SimpleType: MessageQueueException(1616) into ClassInstanceCreation(1620) at 0", "Insert InfixExpression: +(1619) into ClassInstanceCreation(1620) at 1", "Insert MethodInvocation(1691) into MethodInvocation(1698) at 0", "Insert SimpleName: greaterThanEquals(1692) into MethodInvocation(1698) at 1", "Insert CastExpression(1697) into MethodInvocation(1698) at 2", "Insert PrimitiveType: byte(1700) into CastExpression(1704) at 0", "Insert MethodInvocation(1703) into CastExpression(1704) at 1", "Insert MethodInvocation(1805) into MethodInvocation(1812) at 0", "Insert SimpleName: greaterThanEquals(1806) into MethodInvocation(1812) at 1", "Insert CastExpression(1811) into MethodInvocation(1812) at 2", "Insert PrimitiveType: byte(1814) into CastExpression(1818) at 0", "Insert MethodInvocation(1817) into CastExpression(1818) at 1", "Insert SimpleName: ImmutableMap(2184) into MethodInvocation(2190) at 0", "Insert SimpleType: String(2186) into MethodInvocation(2190) at 1", "Insert SimpleType: Object(2188) into MethodInvocation(2190) at 2", "Insert SimpleName: builder(2189) into MethodInvocation(2190) at 3", "Insert SimpleName: timeout(2547) into InfixExpression: ==(2549) at 0", "Insert NumberLiteral: 0(2548) into InfixExpression: ==(2549) at 1", "Insert SimpleName: System(2552) into MethodInvocation(2554) at 0", "Insert SimpleName: currentTimeMillis(2553) into MethodInvocation(2554) at 1", "Insert QualifiedName: TimeUnit.MILLISECONDS(2555) into MethodInvocation(2559) at 0", "Insert SimpleName: convert(2556) into MethodInvocation(2559) at 1", "Insert SimpleName: timeout(2557) into MethodInvocation(2559) at 2", "Insert SimpleName: units(2558) into MethodInvocation(2559) at 3", "Insert SimpleType: MessageQueueShard(2661) into VariableDeclarationStatement(2667) at 0", "Insert InfixExpression: &&(2682) into IfStatement(2685) at 0", "Insert ReturnStatement(2684) into IfStatement(2685) at 1", "Insert InfixExpression: &&(2715) into IfStatement(2718) at 0", "Insert ReturnStatement(2717) into IfStatement(2718) at 1", "Insert SimpleName: timeoutTime(2721) into InfixExpression: !=(2723) at 0", "Insert NumberLiteral: 0(2722) into InfixExpression: !=(2723) at 1", "Insert MethodInvocation(2726) into InfixExpression: >(2728) at 0", "Insert SimpleName: timeoutTime(2727) into InfixExpression: >(2728) at 1", "Update SimpleName: stats(1474) to Lists", "Move SimpleName: stats(1474) into MethodInvocation(2732) at 0", "Update SimpleName: incEmptyPartitionCount(1475) to newLinkedList", "Move SimpleName: incEmptyPartitionCount(1475) into MethodInvocation(2732) at 1", "Insert InfixExpression: ==(2780) into IfStatement(2793) at 0", "Insert Block(2792) into IfStatement(2793) at 1", "Insert InfixExpression: /(2892) into ParenthesizedExpression(2893) at 0", "Insert SimpleName: settings(2894) into MethodInvocation(2896) at 0", "Insert SimpleName: getPartitionCount(2895) into MethodInvocation(2896) at 1", "Insert SimpleName: j(2929) into VariableDeclarationFragment(2931) at 0", "Insert NumberLiteral: 0(2930) into VariableDeclarationFragment(2931) at 1", "Insert SimpleName: settings(2934) into MethodInvocation(2936) at 0", "Insert SimpleName: getShardCount(2935) into MethodInvocation(2936) at 1", "Insert PrimitiveType: int(2940) into VariableDeclarationStatement(2961) at 0", "Insert VariableDeclarationFragment(2960) into VariableDeclarationStatement(2961) at 1", "Insert MethodInvocation(2977) into ExpressionStatement(2978) at 0", "Insert InfixExpression: ==(2983) into IfStatement(2986) at 0", "Insert ReturnStatement(2985) into IfStatement(2986) at 1", "Insert MethodInvocation(3075) into MethodInvocation(3077) at 0", "Insert SimpleName: getResult(3076) into MethodInvocation(3077) at 1", "Insert SimpleName: List(3080) into SimpleType: List(3081) at 0", "Insert SimpleName: Lists(3086) into MethodInvocation(3091) at 0", "Insert SimpleName: newArrayListWithCapacity(3087) into MethodInvocation(3091) at 1", "Insert MethodInvocation(3090) into MethodInvocation(3091) at 2", "Insert SimpleType: Column(3095) into ParameterizedType: Column<MessageQueueEntry>(3098) at 0", "Insert SimpleType: MessageQueueEntry(3097) into ParameterizedType: Column<MessageQueueEntry>(3098) at 1", "Insert SimpleType: Message(3103) into VariableDeclarationStatement(3109) at 0", "Insert VariableDeclarationFragment(3108) into VariableDeclarationStatement(3109) at 1", "Insert InfixExpression: !=(3112) into IfStatement(3118) at 0", "Insert ExpressionStatement(3117) into IfStatement(3118) at 1", "Move SimpleType: MessageQueueException(2876) into ClassInstanceCreation(3134) at 0", "Insert InfixExpression: +(3132) into ClassInstanceCreation(3134) at 1", "Insert SimpleName: e(3133) into ClassInstanceCreation(3134) at 2", "Insert MethodInvocation(3221) into MethodInvocation(3223) at 0", "Insert SimpleName: getResult(3222) into MethodInvocation(3223) at 1", "Update SimpleName: messages(1505) to result", "Insert SimpleType: MessageQueueException(3237) into ClassInstanceCreation(3242) at 0", "Insert InfixExpression: +(3240) into ClassInstanceCreation(3242) at 1", "Insert SimpleName: e(3241) into ClassInstanceCreation(3242) at 2", "Update SimpleName: columnFamily(1698) to queueColumnFamily", "Insert SimpleName: ColumnList(3349) into SimpleType: ColumnList(3350) at 0", "Insert SimpleName: MessageQueueEntry(3351) into SimpleType: MessageQueueEntry(3352) at 0", "Update SimpleName: columnFamily(1770) to queueColumnFamily", "Insert SimpleName: result(3425) into MethodInvocation(3427) at 0", "Insert SimpleName: size(3426) into MethodInvocation(3427) at 1", "Insert InfixExpression: ==(3450) into IfStatement(3535) at 0", "Insert Block(3534) into IfStatement(3535) at 1", "Insert SimpleName: LOG(3555) into MethodInvocation(3561) at 0", "Insert SimpleName: error(3556) into MethodInvocation(3561) at 1", "Insert InfixExpression: +(3559) into MethodInvocation(3561) at 2", "Insert SimpleName: e(3560) into MethodInvocation(3561) at 3", "Insert SimpleName: ColumnList(3623) into SimpleType: ColumnList(3624) at 0", "Insert SimpleName: MessageQueueEntry(3625) into SimpleType: MessageQueueEntry(3626) at 0", "Move MethodInvocation(2047) into SwitchStatement(3956) at 0", "Move SwitchCase(2049) into SwitchStatement(3956) at 1", "Move IfStatement(2072) into SwitchStatement(3956) at 2", "Move BreakStatement(2073) into SwitchStatement(3956) at 3", "Move SwitchCase(2075) into SwitchStatement(3956) at 4", "Insert Block(3952) into SwitchStatement(3956) at 5", "Insert SwitchCase(3953) into SwitchStatement(3956) at 6", "Move Block(2233) into SwitchStatement(3956) at 7", "Update SimpleName: columnFamily(2339) to queueColumnFamily", "Insert SimpleName: message(4155) into MethodInvocation(4157) at 0", "Insert SimpleName: getKey(4156) into MethodInvocation(4157) at 1", "Insert MethodInvocation(4177) into ExpressionStatement(4178) at 0", "Insert SimpleType: MessageQueueException(4302) into ClassInstanceCreation(4305) at 0", "Insert StringLiteral: \"Failed to ack messages\"(4303) into ClassInstanceCreation(4305) at 1", "Insert SimpleName: e(4304) into ClassInstanceCreation(4305) at 2", "Update SimpleName: getTriggerTime(2493) to getKey", "Update SimpleName: System(2500) to response", "Move SimpleName: System(2500) into MethodInvocation(4368) at 0", "Insert SimpleName: getMessages(4367) into MethodInvocation(4368) at 1", "Update SimpleType: ByteArrayOutputStream(2558) to String", "Insert MethodInvocation(4483) into ExpressionStatement(4484) at 0", "Insert SimpleType: ConnectionException(4499) into SingleVariableDeclaration(4501) at 0", "Insert SimpleName: e(4500) into SingleVariableDeclaration(4501) at 1", "Move ThrowStatement(2589) into Block(4510) at 0", "Insert MethodInvocation(4516) into MethodInvocation(4519) at 0", "Insert SimpleName: setConsistencyLevel(4517) into MethodInvocation(4519) at 1", "Insert SimpleName: consistencyLevel(4518) into MethodInvocation(4519) at 2", "Insert SimpleName: Rows(4522) into SimpleType: Rows(4523) at 0", "Insert SimpleName: String(4524) into SimpleType: String(4525) at 0", "Insert SimpleName: MessageMetadataEntry(4526) into SimpleType: MessageMetadataEntry(4527) at 0", "Insert Assignment: =(4570) into ExpressionStatement(4571) at 0", "Insert SimpleType: ConnectionException(4574) into SingleVariableDeclaration(4576) at 0", "Insert SimpleName: e(4575) into SingleVariableDeclaration(4576) at 1", "Insert ThrowStatement(4584) into Block(4585) at 0", "Insert SimpleType: Row(4589) into ParameterizedType: Row<String,MessageMetadataEntry>(4594) at 0", "Insert SimpleType: String(4591) into ParameterizedType: Row<String,MessageMetadataEntry>(4594) at 1", "Insert SimpleType: MessageMetadataEntry(4593) into ParameterizedType: Row<String,MessageMetadataEntry>(4594) at 2", "Insert InfixExpression: !=(4604) into IfStatement(4654) at 0", "Insert Block(4641) into IfStatement(4654) at 1", "Insert Block(4653) into IfStatement(4654) at 2", "Insert SimpleName: message(4677) into MethodInvocation(4679) at 0", "Insert SimpleName: hasKey(4678) into MethodInvocation(4679) at 1", "Insert SimpleName: notUniqueKeys(4680) into MethodInvocation(4685) at 0", "Insert SimpleName: contains(4681) into MethodInvocation(4685) at 1", "Insert MethodInvocation(4684) into MethodInvocation(4685) at 2", "Insert SimpleName: fillMessageMutation(4692) into MethodInvocation(4695) at 0", "Insert SimpleName: mb(4693) into MethodInvocation(4695) at 1", "Insert SimpleName: message(4694) into MethodInvocation(4695) at 2", "Insert SimpleType: MessageQueueException(4716) into ClassInstanceCreation(4719) at 0", "Update StringLiteral: \"Failed to insert message into queue\"(2650) to \"Failed to insert messages into queue.\"", "Insert SimpleName: MessageQueueException(1615) into SimpleType: MessageQueueException(1616) at 0", "Insert StringLiteral: \"Error parsing message \"(1617) into InfixExpression: +(1619) at 0", "Insert SimpleName: messageId(1618) into InfixExpression: +(1619) at 1", "Insert SimpleName: metadataSerializer(1689) into MethodInvocation(1691) at 0", "Insert SimpleName: buildRange(1690) into MethodInvocation(1691) at 1", "Insert PrimitiveType: byte(1693) into CastExpression(1697) at 0", "Insert MethodInvocation(1696) into CastExpression(1697) at 1", "Insert QualifiedName: MessageMetadataEntryType.MessageId(1701) into MethodInvocation(1703) at 0", "Insert SimpleName: ordinal(1702) into MethodInvocation(1703) at 1", "Insert SimpleName: metadataSerializer(1803) into MethodInvocation(1805) at 0", "Insert SimpleName: buildRange(1804) into MethodInvocation(1805) at 1", "Insert PrimitiveType: byte(1807) into CastExpression(1811) at 0", "Insert MethodInvocation(1810) into CastExpression(1811) at 1", "Insert QualifiedName: MessageMetadataEntryType.MessageId(1815) into MethodInvocation(1817) at 0", "Insert SimpleName: ordinal(1816) into MethodInvocation(1817) at 1", "Insert SimpleName: String(2185) into SimpleType: String(2186) at 0", "Insert SimpleName: Object(2187) into SimpleType: Object(2188) at 0", "Insert SimpleName: MessageQueueShard(2660) into SimpleType: MessageQueueShard(2661) at 0", "Move MethodInvocation(1451) into VariableDeclarationFragment(2666) at 1", "Insert SimpleName: messages(2668) into Assignment: =(2673) at 0", "Insert MethodInvocation(2672) into Assignment: =(2673) at 1", "Insert InfixExpression: !=(2677) into InfixExpression: &&(2682) at 0", "Insert PrefixExpression: !(2681) into InfixExpression: &&(2682) at 1", "Insert SimpleName: messages(2683) into ReturnStatement(2684) at 0", "Insert InfixExpression: !=(2710) into InfixExpression: &&(2715) at 0", "Insert PrefixExpression: !(2714) into InfixExpression: &&(2715) at 1", "Move SimpleName: messages(1470) into ReturnStatement(2717) at 0", "Insert SimpleName: System(2724) into MethodInvocation(2726) at 0", "Insert SimpleName: currentTimeMillis(2725) into MethodInvocation(2726) at 1", "Insert MethodInvocation(2778) into InfixExpression: ==(2780) at 0", "Insert NumberLiteral: 0(2779) into InfixExpression: ==(2780) at 1", "Insert IfStatement(2791) into Block(2792) at 0", "Insert MethodInvocation(2888) into InfixExpression: /(2892) at 0", "Insert MethodInvocation(2891) into InfixExpression: /(2892) at 1", "Insert SimpleName: index(2941) into VariableDeclarationFragment(2960) at 0", "Insert CastExpression(2959) into VariableDeclarationFragment(2960) at 1", "Insert SimpleName: messages(2962) into MethodInvocation(2977) at 0", "Insert SimpleName: addAll(2963) into MethodInvocation(2977) at 1", "Insert MethodInvocation(2976) into MethodInvocation(2977) at 2", "Move MethodInvocation(1499) into InfixExpression: ==(2983) at 0", "Update SimpleName: currentPartition(1500) to itemsToPop", "Move SimpleName: currentPartition(1500) into InfixExpression: ==(2983) at 1", "Insert SimpleName: messages(2984) into ReturnStatement(2985) at 0", "Insert MethodInvocation(3073) into MethodInvocation(3075) at 0", "Insert SimpleName: execute(3074) into MethodInvocation(3075) at 1", "Insert SimpleName: result(3088) into MethodInvocation(3090) at 0", "Insert SimpleName: size(3089) into MethodInvocation(3090) at 1", "Insert SimpleName: Column(3094) into SimpleType: Column(3095) at 0", "Insert SimpleName: MessageQueueEntry(3096) into SimpleType: MessageQueueEntry(3097) at 0", "Insert SimpleName: Message(3102) into SimpleType: Message(3103) at 0", "Insert SimpleName: message(3104) into VariableDeclarationFragment(3108) at 0", "Insert MethodInvocation(3107) into VariableDeclarationFragment(3108) at 1", "Update SimpleName: messages(1502) to message", "Move SimpleName: messages(1502) into InfixExpression: !=(3112) at 0", "Move NullLiteral(1503) into InfixExpression: !=(3112) at 1", "Insert MethodInvocation(3116) into ExpressionStatement(3117) at 0", "Insert StringLiteral: \"Error peeking for messages from shard \"(3130) into InfixExpression: +(3132) at 0", "Insert SimpleName: shardName(3131) into InfixExpression: +(3132) at 1", "Insert MethodInvocation(3219) into MethodInvocation(3221) at 0", "Insert SimpleName: execute(3220) into MethodInvocation(3221) at 1", "Insert SimpleName: MessageQueueException(3236) into SimpleType: MessageQueueException(3237) at 0", "Insert StringLiteral: \"Error checking shard for messages. \"(3238) into InfixExpression: +(3240) at 0", "Insert SimpleName: shardName(3239) into InfixExpression: +(3240) at 1", "Insert MethodInvocation(3448) into InfixExpression: ==(3450) at 0", "Insert QualifiedName: MessageQueueEntryType.Lock(3449) into InfixExpression: ==(3450) at 1", "Insert ExpressionStatement(3453) into Block(3534) at 0", "Move IfStatement(1855) into Block(3534) at 1", "Move IfStatement(1864) into Block(3534) at 2", "Move ExpressionStatement(1874) into Block(3534) at 3", "Move ExpressionStatement(1885) into Block(3534) at 4", "Insert StringLiteral: \"Error reading shard \"(3557) into InfixExpression: +(3559) at 0", "Insert SimpleName: shardName(3558) into InfixExpression: +(3559) at 1", "Move ExpressionStatement(2078) into Block(3952) at 0", "Move ExpressionStatement(2083) into Block(3952) at 1", "Insert VariableDeclarationStatement(3751) into Block(3952) at 2", "Insert IfStatement(3950) into Block(3952) at 3", "Insert BreakStatement(3951) into Block(3952) at 4", "Update SimpleName: getQueueKey(2340) to getShardKey", "Insert MethodInvocation(4169) into MethodInvocation(4177) at 0", "Insert SimpleName: deleteColumn(4170) into MethodInvocation(4177) at 1", "Insert MethodInvocation(4176) into MethodInvocation(4177) at 2", "Insert SimpleName: MessageQueueException(4301) into SimpleType: MessageQueueException(4302) at 0", "Update SimpleName: ByteArrayOutputStream(2557) to String", "Update SimpleName: baos(2559) to groupKey", "Insert MethodInvocation(4463) into VariableDeclarationFragment(4464) at 1", "Update SimpleName: mapper(2565) to keys", "Update SimpleName: writeValue(2566) to put", "Update SimpleName: baos(2567) to groupKey", "Insert MethodInvocation(4476) into MethodInvocation(4483) at 0", "Insert SimpleName: putEmptyColumn(4477) into MethodInvocation(4483) at 1", "Insert SimpleName: lockColumn(4478) into MethodInvocation(4483) at 2", "Insert CastExpression(4482) into MethodInvocation(4483) at 3", "Update SimpleName: e(2580) to mb", "Update SimpleName: printStackTrace(2581) to execute", "Insert SimpleName: ConnectionException(4498) into SimpleType: ConnectionException(4499) at 0", "Insert SimpleName: keyspace(4514) into MethodInvocation(4516) at 0", "Insert SimpleName: prepareMutationBatch(4515) into MethodInvocation(4516) at 1", "Insert SimpleName: result(4532) into Assignment: =(4570) at 0", "Insert MethodInvocation(4569) into Assignment: =(4570) at 1", "Insert SimpleName: ConnectionException(4573) into SimpleType: ConnectionException(4574) at 0", "Insert ClassInstanceCreation(4583) into ThrowStatement(4584) at 0", "Insert SimpleName: Row(4588) into SimpleType: Row(4589) at 0", "Insert SimpleName: String(4590) into SimpleType: String(4591) at 0", "Insert SimpleName: MessageMetadataEntry(4592) into SimpleType: MessageMetadataEntry(4593) at 0", "Insert MethodInvocation(4602) into InfixExpression: !=(4604) at 0", "Insert NumberLiteral: 1(4603) into InfixExpression: !=(4604) at 1", "Insert VariableDeclarationStatement(4616) into Block(4641) at 0", "Insert ExpressionStatement(4621) into Block(4641) at 1", "Insert ExpressionStatement(4629) into Block(4641) at 2", "Insert ExpressionStatement(4640) into Block(4641) at 3", "Insert ExpressionStatement(4652) into Block(4653) at 0", "Insert SimpleName: message(4682) into MethodInvocation(4684) at 0", "Insert SimpleName: getKey(4683) into MethodInvocation(4684) at 1", "Insert SimpleName: MessageQueueException(4715) into SimpleType: MessageQueueException(4716) at 0", "Insert QualifiedName: MessageMetadataEntryType.MessageId(1694) into MethodInvocation(1696) at 0", "Insert SimpleName: ordinal(1695) into MethodInvocation(1696) at 1", "Insert QualifiedName: MessageMetadataEntryType.MessageId(1808) into MethodInvocation(1810) at 0", "Insert SimpleName: ordinal(1809) into MethodInvocation(1810) at 1", "Insert SimpleName: readAndReturnShard(2669) into MethodInvocation(2672) at 0", "Insert SimpleName: partition(2670) into MethodInvocation(2672) at 1", "Insert SimpleName: itemsToPop(2671) into MethodInvocation(2672) at 2", "Update SimpleName: partition(1454) to messages", "Move SimpleName: partition(1454) into InfixExpression: !=(2677) at 0", "Move NullLiteral(1455) into InfixExpression: !=(2677) at 1", "Insert MethodInvocation(2680) into PrefixExpression: !(2681) at 0", "Update SimpleName: internalReadMessages(1458) to readAndReturnShard", "Move MethodInvocation(1538) into MethodInvocation(2705) at 1", "Insert SimpleName: messages(2708) into InfixExpression: !=(2710) at 0", "Insert NullLiteral(2709) into InfixExpression: !=(2710) at 1", "Move MethodInvocation(1468) into PrefixExpression: !(2714) at 0", "Insert SimpleName: partition(2776) into MethodInvocation(2778) at 0", "Insert SimpleName: getLastCount(2777) into MethodInvocation(2778) at 1", "Insert PrefixExpression: !(2787) into IfStatement(2791) at 0", "Insert Block(2790) into IfStatement(2791) at 1", "Insert MethodInvocation(2798) into MethodInvocation(2800) at 1", "Insert QualifiedName: TimeUnit.MICROSECONDS(2882) into MethodInvocation(2888) at 0", "Insert SimpleName: convert(2883) into MethodInvocation(2888) at 1", "Insert MethodInvocation(2886) into MethodInvocation(2888) at 2", "Insert QualifiedName: TimeUnit.MILLISECONDS(2887) into MethodInvocation(2888) at 3", "Insert SimpleName: settings(2889) into MethodInvocation(2891) at 0", "Insert SimpleName: getPartitionDuration(2890) into MethodInvocation(2891) at 1", "Insert PrimitiveType: int(2942) into CastExpression(2959) at 0", "Insert ParenthesizedExpression(2958) into CastExpression(2959) at 1", "Update SimpleName: Thread(1490) to peekMessages", "Move SimpleName: Thread(1490) into MethodInvocation(2976) at 0", "Insert MethodInvocation(2970) into MethodInvocation(2976) at 1", "Insert InfixExpression: -(2975) into MethodInvocation(2976) at 2", "Update SimpleName: partition(1497) to messages", "Update SimpleName: getPartition(1498) to size", "Insert MethodInvocation(3037) into MethodInvocation(3073) at 0", "Insert SimpleName: withColumnRange(3038) into MethodInvocation(3073) at 1", "Insert MethodInvocation(3072) into MethodInvocation(3073) at 2", "Insert SimpleName: extractMessageFromColumn(3105) into MethodInvocation(3107) at 0", "Insert SimpleName: column(3106) into MethodInvocation(3107) at 1", "Insert SimpleName: messages(3113) into MethodInvocation(3116) at 0", "Insert SimpleName: add(3114) into MethodInvocation(3116) at 1", "Insert SimpleName: message(3115) into MethodInvocation(3116) at 2", "Insert MethodInvocation(3173) into MethodInvocation(3219) at 0", "Insert SimpleName: withColumnRange(3174) into MethodInvocation(3219) at 1", "Insert MethodInvocation(3218) into MethodInvocation(3219) at 2", "Insert SimpleName: lock(3446) into MethodInvocation(3448) at 0", "Insert SimpleName: getType(3447) into MethodInvocation(3448) at 1", "Insert PostfixExpression: ++(3452) into ExpressionStatement(3453) at 0", "Insert SimpleType: Message(3745) into VariableDeclarationStatement(3751) at 0", "Insert VariableDeclarationFragment(3750) into VariableDeclarationStatement(3751) at 1", "Move InfixExpression: !=(2138) into IfStatement(3950) at 0", "Insert Block(3944) into IfStatement(3950) at 1", "Move Block(2227) into IfStatement(3950) at 2", "Insert SimpleName: mb(4160) into MethodInvocation(4169) at 0", "Insert SimpleName: withRow(4161) into MethodInvocation(4169) at 1", "Insert SimpleName: keyIndexColumnFamily(4162) into MethodInvocation(4169) at 2", "Insert MethodInvocation(4168) into MethodInvocation(4169) at 3", "Insert SimpleName: MessageMetadataEntry(4171) into MethodInvocation(4176) at 0", "Insert SimpleName: newMessageId(4172) into MethodInvocation(4176) at 1", "Insert MethodInvocation(4175) into MethodInvocation(4176) at 2", "Insert SimpleName: getCompositeKey(4458) into MethodInvocation(4463) at 0", "Insert SimpleName: queueName(4459) into MethodInvocation(4463) at 1", "Insert MethodInvocation(4462) into MethodInvocation(4463) at 2", "Update SimpleName: baos(2571) to mb", "Move SimpleName: baos(2571) into MethodInvocation(4476) at 0", "Update SimpleName: flush(2572) to withRow", "Move SimpleName: flush(2572) into MethodInvocation(4476) at 1", "Insert SimpleName: keyIndexColumnFamily(4474) into MethodInvocation(4476) at 2", "Insert SimpleName: groupKey(4475) into MethodInvocation(4476) at 3", "Insert SimpleType: Integer(4480) into CastExpression(4482) at 0", "Insert SimpleName: lockTtl(4481) into CastExpression(4482) at 1", "Insert SimpleType: MessageQueueException(4503) into ClassInstanceCreation(4508) at 0", "Insert InfixExpression: +(4506) into ClassInstanceCreation(4508) at 1", "Insert MethodInvocation(4567) into MethodInvocation(4569) at 0", "Insert SimpleName: getResult(4568) into MethodInvocation(4569) at 1", "Insert SimpleType: MessageQueueException(4578) into ClassInstanceCreation(4583) at 0", "Insert InfixExpression: +(4581) into ClassInstanceCreation(4583) at 1", "Insert SimpleName: e(4582) into ClassInstanceCreation(4583) at 2", "Insert MethodInvocation(4600) into MethodInvocation(4602) at 0", "Insert SimpleName: size(4601) into MethodInvocation(4602) at 1", "Insert SimpleType: String(4606) into VariableDeclarationStatement(4616) at 0", "Insert VariableDeclarationFragment(4615) into VariableDeclarationStatement(4616) at 1", "Insert MethodInvocation(4620) into ExpressionStatement(4621) at 0", "Insert MethodInvocation(4628) into ExpressionStatement(4629) at 0", "Insert MethodInvocation(4639) into ExpressionStatement(4640) at 0", "Insert MethodInvocation(4651) into ExpressionStatement(4652) at 0", "Insert SimpleName: messages(2678) into MethodInvocation(2680) at 0", "Insert SimpleName: isEmpty(2679) into MethodInvocation(2680) at 1", "Insert MethodInvocation(2786) into PrefixExpression: !(2787) at 0", "Insert ReturnStatement(2789) into Block(2790) at 0", "Insert SimpleName: partition(2796) into MethodInvocation(2798) at 0", "Insert SimpleName: getName(2797) into MethodInvocation(2798) at 1", "Insert SimpleName: System(2884) into MethodInvocation(2886) at 0", "Insert SimpleName: currentTimeMillis(2885) into MethodInvocation(2886) at 1", "Insert InfixExpression: +(2957) into ParenthesizedExpression(2958) at 0", "Insert MethodInvocation(2968) into MethodInvocation(2970) at 0", "Insert SimpleName: getName(2969) into MethodInvocation(2970) at 1", "Insert SimpleName: itemsToPop(2971) into InfixExpression: -(2975) at 0", "Insert MethodInvocation(2974) into InfixExpression: -(2975) at 1", "Insert MethodInvocation(3034) into MethodInvocation(3037) at 0", "Insert SimpleName: getKey(3035) into MethodInvocation(3037) at 1", "Insert SimpleName: shardName(3036) into MethodInvocation(3037) at 2", "Insert MethodInvocation(3070) into MethodInvocation(3072) at 0", "Insert SimpleName: build(3071) into MethodInvocation(3072) at 1", "Insert MethodInvocation(3170) into MethodInvocation(3173) at 0", "Insert SimpleName: getKey(3171) into MethodInvocation(3173) at 1", "Insert SimpleName: shardName(3172) into MethodInvocation(3173) at 2", "Insert MethodInvocation(3216) into MethodInvocation(3218) at 0", "Insert SimpleName: build(3217) into MethodInvocation(3218) at 1", "Insert SimpleName: lockColumnCount(3451) into PostfixExpression: ++(3452) at 0", "Insert SimpleName: Message(3744) into SimpleType: Message(3745) at 0", "Insert SimpleName: message(3746) into VariableDeclarationFragment(3750) at 0", "Insert MethodInvocation(3749) into VariableDeclarationFragment(3750) at 1", "Insert IfStatement(3781) into Block(3944) at 0", "Move ExpressionStatement(2143) into Block(3944) at 1", "Move IfStatement(2201) into Block(3944) at 2", "Insert IfStatement(3923) into Block(3944) at 3", "Move SwitchStatement(2221) into Block(3944) at 4", "Insert SimpleName: getCompositeKey(4163) into MethodInvocation(4168) at 0", "Insert SimpleName: queueName(4164) into MethodInvocation(4168) at 1", "Insert MethodInvocation(4167) into MethodInvocation(4168) at 2", "Insert SimpleName: entry(4173) into MethodInvocation(4175) at 0", "Insert SimpleName: getMessageId(4174) into MethodInvocation(4175) at 1", "Insert SimpleName: message(4460) into MethodInvocation(4462) at 0", "Insert SimpleName: getKey(4461) into MethodInvocation(4462) at 1", "Insert SimpleName: Integer(4479) into SimpleType: Integer(4480) at 0", "Insert SimpleName: MessageQueueException(4502) into SimpleType: MessageQueueException(4503) at 0", "Insert StringLiteral: \"Failed to check keys for uniqueness (1): \"(4504) into InfixExpression: +(4506) at 0", "Insert SimpleName: keys(4505) into InfixExpression: +(4506) at 1", "Insert MethodInvocation(4565) into MethodInvocation(4567) at 0", "Insert SimpleName: execute(4566) into MethodInvocation(4567) at 1", "Insert SimpleName: MessageQueueException(4577) into SimpleType: MessageQueueException(4578) at 0", "Insert StringLiteral: \"Failed to check keys for uniqueness (2): \"(4579) into InfixExpression: +(4581) at 0", "Insert SimpleName: keys(4580) into InfixExpression: +(4581) at 1", "Insert SimpleName: row(4598) into MethodInvocation(4600) at 0", "Insert SimpleName: getColumns(4599) into MethodInvocation(4600) at 1", "Move SimpleName: String(2613) into SimpleType: String(4606) at 0", "Insert SimpleName: messageKey(4607) into VariableDeclarationFragment(4615) at 0", "Insert ArrayAccess(4614) into VariableDeclarationFragment(4615) at 1", "Update SimpleName: baos(2615) to notUniqueKeys", "Move SimpleName: baos(2615) into MethodInvocation(4620) at 0", "Insert SimpleName: add(4618) into MethodInvocation(4620) at 1", "Update SimpleName: toByteArray(2616) to messageKey", "Move SimpleName: toByteArray(2616) into MethodInvocation(4620) at 2", "Insert SimpleName: notUniqueMessages(4622) into MethodInvocation(4628) at 0", "Insert SimpleName: add(4623) into MethodInvocation(4628) at 1", "Insert MethodInvocation(4627) into MethodInvocation(4628) at 2", "Insert MethodInvocation(4636) into MethodInvocation(4639) at 0", "Insert SimpleName: deleteColumn(4637) into MethodInvocation(4639) at 1", "Insert SimpleName: lockColumn(4638) into MethodInvocation(4639) at 2", "Insert MethodInvocation(4648) into MethodInvocation(4651) at 0", "Insert SimpleName: putEmptyColumn(4649) into MethodInvocation(4651) at 1", "Insert SimpleName: lockColumn(4650) into MethodInvocation(4651) at 2", "Insert ThisExpression(2781) into MethodInvocation(2786) at 0", "Insert SimpleName: hasMessages(2782) into MethodInvocation(2786) at 1", "Move MethodInvocation(1549) into MethodInvocation(2786) at 2", "Insert NullLiteral(2788) into ReturnStatement(2789) at 0", "Insert InfixExpression: *(2955) into InfixExpression: +(2957) at 0", "Insert SimpleName: j(2956) into InfixExpression: +(2957) at 1", "Insert SimpleName: partitions(2965) into MethodInvocation(2968) at 0", "Insert SimpleName: get(2966) into MethodInvocation(2968) at 1", "Insert SimpleName: index(2967) into MethodInvocation(2968) at 2", "Update SimpleName: pollInterval(1492) to messages", "Move SimpleName: pollInterval(1492) into MethodInvocation(2974) at 0", "Insert SimpleName: size(2973) into MethodInvocation(2974) at 1", "Insert MethodInvocation(3031) into MethodInvocation(3034) at 0", "Insert SimpleName: setConsistencyLevel(3032) into MethodInvocation(3034) at 1", "Insert SimpleName: consistencyLevel(3033) into MethodInvocation(3034) at 2", "Move MethodInvocation(1987) into MethodInvocation(3070) at 0", "Insert SimpleName: setEnd(3045) into MethodInvocation(3070) at 1", "Insert MethodInvocation(3069) into MethodInvocation(3070) at 2", "Insert MethodInvocation(3167) into MethodInvocation(3170) at 0", "Insert SimpleName: setConsistencyLevel(3168) into MethodInvocation(3170) at 1", "Insert SimpleName: consistencyLevel(3169) into MethodInvocation(3170) at 2", "Insert MethodInvocation(3193) into MethodInvocation(3216) at 0", "Insert SimpleName: setEnd(3194) into MethodInvocation(3216) at 1", "Insert MethodInvocation(3215) into MethodInvocation(3216) at 2", "Move CastExpression(1740) into MethodInvocation(3382) at 2", "Insert MethodInvocation(3648) into MethodInvocation(3673) at 0", "Insert SimpleName: extractMessageFromColumn(3747) into MethodInvocation(3749) at 0", "Insert SimpleName: column(3748) into MethodInvocation(3749) at 1", "Insert MethodInvocation(3757) into IfStatement(3781) at 0", "Insert Block(3780) into IfStatement(3781) at 1", "Insert MethodInvocation(3888) into IfStatement(3923) at 0", "Insert Block(3922) into IfStatement(3923) at 1", "Insert SimpleName: message(4165) into MethodInvocation(4167) at 0", "Insert SimpleName: getKey(4166) into MethodInvocation(4167) at 1", "Insert MethodInvocation(4544) into MethodInvocation(4565) at 0", "Update SimpleName: putColumn(2611) to withColumnRange", "Move SimpleName: putColumn(2611) into MethodInvocation(4565) at 1", "Insert MethodInvocation(4564) into MethodInvocation(4565) at 2", "Insert MethodInvocation(4612) into ArrayAccess(4614) at 0", "Insert NumberLiteral: 1(4613) into ArrayAccess(4614) at 1", "Update SimpleName: settings(2620) to keys", "Move SimpleName: settings(2620) into MethodInvocation(4627) at 0", "Update SimpleName: getVisibilityTimeout(2621) to get", "Move SimpleName: getVisibilityTimeout(2621) into MethodInvocation(4627) at 1", "Insert SimpleName: messageKey(4626) into MethodInvocation(4627) at 2", "Insert SimpleName: mb(4630) into MethodInvocation(4636) at 0", "Insert SimpleName: withRow(4631) into MethodInvocation(4636) at 1", "Insert SimpleName: keyIndexColumnFamily(4632) into MethodInvocation(4636) at 2", "Insert MethodInvocation(4635) into MethodInvocation(4636) at 3", "Insert SimpleName: mb(4642) into MethodInvocation(4648) at 0", "Insert SimpleName: withRow(4643) into MethodInvocation(4648) at 1", "Insert SimpleName: keyIndexColumnFamily(4644) into MethodInvocation(4648) at 2", "Insert MethodInvocation(4647) into MethodInvocation(4648) at 3", "Insert ParenthesizedExpression(2951) into InfixExpression: *(2955) at 0", "Insert MethodInvocation(2954) into InfixExpression: *(2955) at 1", "Insert SimpleName: keyspace(3028) into MethodInvocation(3031) at 0", "Insert SimpleName: prepareQuery(3029) into MethodInvocation(3031) at 1", "Insert SimpleName: queueColumnFamily(3030) into MethodInvocation(3031) at 2", "Insert MethodInvocation(3067) into MethodInvocation(3069) at 0", "Insert SimpleName: toBytes(3068) into MethodInvocation(3069) at 1", "Insert SimpleName: keyspace(3164) into MethodInvocation(3167) at 0", "Insert SimpleName: prepareQuery(3165) into MethodInvocation(3167) at 1", "Insert SimpleName: queueColumnFamily(3166) into MethodInvocation(3167) at 2", "Insert MethodInvocation(3180) into MethodInvocation(3193) at 0", "Insert SimpleName: setStart(3181) into MethodInvocation(3193) at 1", "Insert MethodInvocation(3192) into MethodInvocation(3193) at 2", "Insert MethodInvocation(3213) into MethodInvocation(3215) at 0", "Insert SimpleName: toBytes(3214) into MethodInvocation(3215) at 1", "Update SimpleName: columnFamily(1723) to queueColumnFamily", "Move CastExpression(1747) into MethodInvocation(3375) at 2", "Update PrimitiveType: short(1736) to byte", "Update SimpleName: columnFamily(1973) to queueColumnFamily", "Insert ClassInstanceCreation(3642) into MethodInvocation(3648) at 0", "Insert SimpleName: setLimit(3643) into MethodInvocation(3648) at 1", "Insert InfixExpression: +(3647) into MethodInvocation(3648) at 2", "Insert SimpleName: message(3755) into MethodInvocation(3757) at 0", "Insert SimpleName: hasKey(3756) into MethodInvocation(3757) at 1", "Insert ExpressionStatement(3779) into Block(3780) at 0", "Insert IfStatement(3877) into Block(3878) at 3", "Insert SimpleName: message(3886) into MethodInvocation(3888) at 0", "Insert SimpleName: hasTrigger(3887) into MethodInvocation(3888) at 1", "Insert VariableDeclarationStatement(3898) into Block(3922) at 0", "Insert IfStatement(3921) into Block(3922) at 1", "Insert MethodInvocation(4539) into MethodInvocation(4544) at 0", "Insert SimpleName: getRowSlice(4540) into MethodInvocation(4544) at 1", "Move MethodInvocation(2609) into MethodInvocation(4544) at 2", "Insert MethodInvocation(4562) into MethodInvocation(4564) at 0", "Insert SimpleName: build(4563) into MethodInvocation(4564) at 1", "Insert SimpleName: splitCompositeKey(4608) into MethodInvocation(4612) at 0", "Insert MethodInvocation(4611) into MethodInvocation(4612) at 1", "Insert SimpleName: row(4633) into MethodInvocation(4635) at 0", "Insert SimpleName: getKey(4634) into MethodInvocation(4635) at 1", "Insert SimpleName: row(4645) into MethodInvocation(4647) at 0", "Insert SimpleName: getKey(4646) into MethodInvocation(4647) at 1", "Insert InfixExpression: %(2950) into ParenthesizedExpression(2951) at 0", "Insert SimpleName: settings(2952) into MethodInvocation(2954) at 0", "Insert SimpleName: getShardCount(2953) into MethodInvocation(2954) at 1", "Insert MethodInvocation(3060) into MethodInvocation(3067) at 0", "Insert SimpleName: append(3061) into MethodInvocation(3067) at 1", "Move MethodInvocation(2008) into MethodInvocation(3067) at 2", "Insert QualifiedName: Equality.LESS_THAN_EQUALS(3066) into MethodInvocation(3067) at 3", "Insert ClassInstanceCreation(3177) into MethodInvocation(3180) at 0", "Insert SimpleName: setLimit(3178) into MethodInvocation(3180) at 1", "Insert NumberLiteral: 1(3179) into MethodInvocation(3180) at 2", "Insert MethodInvocation(3190) into MethodInvocation(3192) at 0", "Insert SimpleName: toBytes(3191) into MethodInvocation(3192) at 1", "Insert MethodInvocation(3209) into MethodInvocation(3213) at 0", "Insert SimpleName: append(3210) into MethodInvocation(3213) at 1", "Insert SimpleName: currentTime(3211) into MethodInvocation(3213) at 2", "Insert QualifiedName: Equality.LESS_THAN_EQUALS(3212) into MethodInvocation(3213) at 3", "Update SimpleName: compositeSerializer(1732) to entrySerializer", "Update PrimitiveType: short(1743) to byte", "Insert SimpleType: RangeBuilder(3641) into ClassInstanceCreation(3642) at 0", "Insert SimpleName: itemsToPop(3644) into InfixExpression: +(3647) at 0", "Insert SimpleName: lockColumnCount(3645) into InfixExpression: +(3647) at 1", "Insert NumberLiteral: 1(3646) into InfixExpression: +(3647) at 2", "Insert MethodInvocation(3668) into MethodInvocation(3670) at 2", "Insert MethodInvocation(3778) into ExpressionStatement(3779) at 0", "Insert MethodInvocation(3848) into IfStatement(3877) at 0", "Insert Block(3876) into IfStatement(3877) at 1", "Insert SimpleType: Trigger(3890) into VariableDeclarationStatement(3898) at 0", "Insert VariableDeclarationFragment(3897) into VariableDeclarationStatement(3898) at 1", "Insert InfixExpression: !=(3901) into IfStatement(3921) at 0", "Insert Block(3920) into IfStatement(3921) at 1", "Insert MethodInvocation(4536) into MethodInvocation(4539) at 0", "Insert SimpleName: setConsistencyLevel(4537) into MethodInvocation(4539) at 1", "Insert SimpleName: consistencyLevel(4538) into MethodInvocation(4539) at 2", "Update SimpleName: getQueueKey(2607) to keys", "Update SimpleName: entry(2608) to keySet", "Insert MethodInvocation(4555) into MethodInvocation(4562) at 0", "Insert SimpleName: lessThanEquals(4556) into MethodInvocation(4562) at 1", "Insert CastExpression(4561) into MethodInvocation(4562) at 2", "Insert SimpleName: row(4609) into MethodInvocation(4611) at 0", "Insert SimpleName: getKey(4610) into MethodInvocation(4611) at 1", "Insert ParenthesizedExpression(2946) into InfixExpression: %(2950) at 0", "Insert MethodInvocation(2949) into InfixExpression: %(2950) at 1", "Insert MethodInvocation(3054) into MethodInvocation(3060) at 0", "Insert SimpleName: append(3055) into MethodInvocation(3060) at 1", "Insert CastExpression(3058) into MethodInvocation(3060) at 2", "Insert QualifiedName: Equality.EQUAL(3059) into MethodInvocation(3060) at 3", "Insert SimpleType: RangeBuilder(3176) into ClassInstanceCreation(3177) at 0", "Insert SimpleName: entrySerializer(3182) into MethodInvocation(3190) at 0", "Insert SimpleName: makeEndpoint(3183) into MethodInvocation(3190) at 1", "Insert CastExpression(3188) into MethodInvocation(3190) at 2", "Insert QualifiedName: Equality.EQUAL(3189) into MethodInvocation(3190) at 3", "Insert MethodInvocation(3203) into MethodInvocation(3209) at 0", "Insert SimpleName: append(3204) into MethodInvocation(3209) at 1", "Insert CastExpression(3207) into MethodInvocation(3209) at 2", "Insert QualifiedName: Equality.EQUAL(3208) into MethodInvocation(3209) at 3", "Insert SimpleName: RangeBuilder(3640) into SimpleType: RangeBuilder(3641) at 0", "Insert SimpleName: lockColumn(3666) into MethodInvocation(3668) at 0", "Insert SimpleName: getTimestamp(3667) into MethodInvocation(3668) at 1", "Insert MethodInvocation(3767) into MethodInvocation(3778) at 0", "Insert SimpleName: deleteColumn(3768) into MethodInvocation(3778) at 1", "Insert MethodInvocation(3777) into MethodInvocation(3778) at 2", "Insert MethodInvocation(3843) into MethodInvocation(3844) at 4", "Insert SimpleName: message(3846) into MethodInvocation(3848) at 0", "Insert SimpleName: hasKey(3847) into MethodInvocation(3848) at 1", "Insert ExpressionStatement(3875) into Block(3876) at 0", "Insert SimpleName: Trigger(3889) into SimpleType: Trigger(3890) at 0", "Insert SimpleName: trigger(3891) into VariableDeclarationFragment(3897) at 0", "Insert MethodInvocation(3896) into VariableDeclarationFragment(3897) at 1", "Insert SimpleName: trigger(3899) into InfixExpression: !=(3901) at 0", "Insert NullLiteral(3900) into InfixExpression: !=(3901) at 1", "Insert VariableDeclarationStatement(3909) into Block(3920) at 0", "Insert ExpressionStatement(3914) into Block(3920) at 1", "Insert ExpressionStatement(3919) into Block(3920) at 2", "Insert SimpleName: keyspace(4533) into MethodInvocation(4536) at 0", "Insert SimpleName: prepareQuery(4534) into MethodInvocation(4536) at 1", "Update SimpleName: columnFamily(2606) to keyIndexColumnFamily", "Move SimpleName: columnFamily(2606) into MethodInvocation(4536) at 2", "Insert MethodInvocation(4548) into MethodInvocation(4555) at 0", "Insert SimpleName: greaterThanEquals(4549) into MethodInvocation(4555) at 1", "Insert CastExpression(4554) into MethodInvocation(4555) at 2", "Insert PrimitiveType: byte(4557) into CastExpression(4561) at 0", "Insert MethodInvocation(4560) into CastExpression(4561) at 1", "Insert InfixExpression: +(2945) into ParenthesizedExpression(2946) at 0", "Insert SimpleName: settings(2947) into MethodInvocation(2949) at 0", "Insert SimpleName: getPartitionCount(2948) into MethodInvocation(2949) at 1", "Insert SimpleName: entrySerializer(3046) into MethodInvocation(3054) at 0", "Insert SimpleName: makeEndpoint(3047) into MethodInvocation(3054) at 1", "Move CastExpression(1995) into MethodInvocation(3054) at 2", "Insert QualifiedName: Equality.EQUAL(3053) into MethodInvocation(3054) at 3", "Insert PrimitiveType: byte(3056) into CastExpression(3058) at 0", "Insert NumberLiteral: 0(3057) into CastExpression(3058) at 1", "Insert SimpleName: RangeBuilder(3175) into SimpleType: RangeBuilder(3176) at 0", "Insert PrimitiveType: byte(3184) into CastExpression(3188) at 0", "Insert MethodInvocation(3187) into CastExpression(3188) at 1", "Insert SimpleName: entrySerializer(3195) into MethodInvocation(3203) at 0", "Insert SimpleName: makeEndpoint(3196) into MethodInvocation(3203) at 1", "Insert CastExpression(3201) into MethodInvocation(3203) at 2", "Insert QualifiedName: Equality.EQUAL(3202) into MethodInvocation(3203) at 3", "Insert PrimitiveType: byte(3205) into CastExpression(3207) at 0", "Insert NumberLiteral: 0(3206) into CastExpression(3207) at 1", "Update SimpleName: compositeSerializer(1989) to entrySerializer", "Insert CastExpression(3656) into MethodInvocation(3658) at 2", "Update PrimitiveType: short(1999) to byte", "Insert SimpleName: m(3758) into MethodInvocation(3767) at 0", "Insert SimpleName: withRow(3759) into MethodInvocation(3767) at 1", "Insert SimpleName: keyIndexColumnFamily(3760) into MethodInvocation(3767) at 2", "Insert MethodInvocation(3766) into MethodInvocation(3767) at 3", "Insert SimpleName: MessageMetadataEntry(3769) into MethodInvocation(3777) at 0", "Insert SimpleName: newMessageId(3770) into MethodInvocation(3777) at 1", "Insert MethodInvocation(3776) into MethodInvocation(3777) at 2", "Insert CastExpression(3799) into MethodInvocation(3819) at 2", "Update SimpleName: columnFamily(2182) to queueColumnFamily", "Insert SimpleName: settings(3841) into MethodInvocation(3843) at 0", "Insert SimpleName: getRetentionTimeout(3842) into MethodInvocation(3843) at 1", "Insert MethodInvocation(3874) into ExpressionStatement(3875) at 0", "Insert MethodInvocation(3894) into MethodInvocation(3896) at 0", "Insert SimpleName: nextTrigger(3895) into MethodInvocation(3896) at 1", "Insert SimpleType: Message(3903) into VariableDeclarationStatement(3909) at 0", "Insert VariableDeclarationFragment(3908) into VariableDeclarationStatement(3909) at 1", "Insert MethodInvocation(3913) into ExpressionStatement(3914) at 0", "Insert MethodInvocation(3918) into ExpressionStatement(3919) at 0", "Insert SimpleName: metadataSerializer(4546) into MethodInvocation(4548) at 0", "Insert SimpleName: buildRange(4547) into MethodInvocation(4548) at 1", "Insert PrimitiveType: byte(4550) into CastExpression(4554) at 0", "Insert MethodInvocation(4553) into CastExpression(4554) at 1", "Insert QualifiedName: MessageMetadataEntryType.Unique(4558) into MethodInvocation(4560) at 0", "Insert SimpleName: ordinal(4559) into MethodInvocation(4560) at 1", "Insert SimpleName: i(2943) into InfixExpression: +(2945) at 0", "Insert SimpleName: partitionIndex(2944) into InfixExpression: +(2945) at 1", "Update PrimitiveType: short(1991) to byte", "Insert QualifiedName: MessageQueueEntryType.Message(3185) into MethodInvocation(3187) at 0", "Insert SimpleName: ordinal(3186) into MethodInvocation(3187) at 1", "Insert PrimitiveType: byte(3197) into CastExpression(3201) at 0", "Insert MethodInvocation(3200) into CastExpression(3201) at 1", "Insert PrimitiveType: byte(3652) into CastExpression(3656) at 0", "Insert MethodInvocation(3655) into CastExpression(3656) at 1", "Insert SimpleName: getCompositeKey(3761) into MethodInvocation(3766) at 0", "Insert SimpleName: queueName(3762) into MethodInvocation(3766) at 1", "Insert MethodInvocation(3765) into MethodInvocation(3766) at 2", "Insert SimpleName: getCompositeKey(3771) into MethodInvocation(3776) at 0", "Insert SimpleName: shardName(3772) into MethodInvocation(3776) at 1", "Insert MethodInvocation(3775) into MethodInvocation(3776) at 2", "Insert PrimitiveType: byte(3797) into CastExpression(3799) at 0", "Insert NumberLiteral: 0(3798) into CastExpression(3799) at 1", "Update SimpleName: getQueueKey(2183) to getShardKey", "Insert MethodInvocation(3858) into MethodInvocation(3874) at 0", "Insert SimpleName: putEmptyColumn(3859) into MethodInvocation(3874) at 1", "Insert MethodInvocation(3870) into MethodInvocation(3874) at 2", "Insert MethodInvocation(3873) into MethodInvocation(3874) at 3", "Insert SimpleName: message(3892) into MethodInvocation(3894) at 0", "Insert SimpleName: getTrigger(3893) into MethodInvocation(3894) at 1", "Update SimpleName: MessageQueueHooks(2237) to Message", "Move SimpleName: MessageQueueHooks(2237) into SimpleType: Message(3903) at 0", "Insert SimpleName: nextMessage(3904) into VariableDeclarationFragment(3908) at 0", "Insert MethodInvocation(3907) into VariableDeclarationFragment(3908) at 1", "Update SimpleName: beforeAckMessages(2243) to nextMessage", "Move SimpleName: beforeAckMessages(2243) into MethodInvocation(3913) at 0", "Insert SimpleName: setTrigger(3911) into MethodInvocation(3913) at 1", "Update SimpleName: entries(2244) to trigger", "Move SimpleName: entries(2244) into MethodInvocation(3913) at 2", "Insert SimpleName: fillMessageMutation(3915) into MethodInvocation(3918) at 0", "Move SimpleName: m(2245) into MethodInvocation(3918) at 1", "Insert SimpleName: nextMessage(3917) into MethodInvocation(3918) at 2", "Insert QualifiedName: MessageMetadataEntryType.Unique(4551) into MethodInvocation(4553) at 0", "Insert SimpleName: ordinal(4552) into MethodInvocation(4553) at 1", "Insert QualifiedName: MessageQueueEntryType.Message(3198) into MethodInvocation(3200) at 0", "Insert SimpleName: ordinal(3199) into MethodInvocation(3200) at 1", "Insert QualifiedName: MessageQueueEntryType.Message(3653) into MethodInvocation(3655) at 0", "Insert SimpleName: ordinal(3654) into MethodInvocation(3655) at 1", "Insert SimpleName: message(3763) into MethodInvocation(3765) at 0", "Insert SimpleName: getKey(3764) into MethodInvocation(3765) at 1", "Insert SimpleName: entry(3773) into MethodInvocation(3775) at 0", "Insert SimpleName: getMessageId(3774) into MethodInvocation(3775) at 1", "Move ParenthesizedExpression(2528) into InfixExpression: +(3816) at 2", "Insert SimpleName: m(3849) into MethodInvocation(3858) at 0", "Insert SimpleName: withRow(3850) into MethodInvocation(3858) at 1", "Insert SimpleName: keyIndexColumnFamily(3851) into MethodInvocation(3858) at 2", "Insert MethodInvocation(3857) into MethodInvocation(3858) at 3", "Insert SimpleName: MessageMetadataEntry(3860) into MethodInvocation(3870) at 0", "Insert SimpleName: newMessageId(3861) into MethodInvocation(3870) at 1", "Insert MethodInvocation(3869) into MethodInvocation(3870) at 2", "Insert SimpleName: settings(3871) into MethodInvocation(3873) at 0", "Insert SimpleName: getRetentionTimeout(3872) into MethodInvocation(3873) at 1", "Insert SimpleName: message(3905) into MethodInvocation(3907) at 0", "Update SimpleName: hook(2242) to clone", "Move SimpleName: hook(2242) into MethodInvocation(3907) at 1", "Insert SimpleName: getCompositeKey(3852) into MethodInvocation(3857) at 0", "Insert SimpleName: queueName(3853) into MethodInvocation(3857) at 1", "Insert MethodInvocation(3856) into MethodInvocation(3857) at 2", "Insert SimpleName: getCompositeKey(3862) into MethodInvocation(3869) at 0", "Insert MethodInvocation(3865) into MethodInvocation(3869) at 1", "Insert MethodInvocation(3868) into MethodInvocation(3869) at 2", "Insert SimpleName: message(3854) into MethodInvocation(3856) at 0", "Insert SimpleName: getKey(3855) into MethodInvocation(3856) at 1", "Insert SimpleName: getShardKey(3863) into MethodInvocation(3865) at 0", "Insert SimpleName: timeoutEntry(3864) into MethodInvocation(3865) at 1", "Insert SimpleName: timeoutEntry(3866) into MethodInvocation(3868) at 0", "Insert SimpleName: getMessageId(3867) into MethodInvocation(3868) at 1", "Insert SimpleName: counter(3810) into MethodInvocation(3812) at 0", "Insert SimpleName: incrementAndGet(3811) into MethodInvocation(3812) at 1", "Delete PrimitiveType: long(183)", "Delete PrimitiveType: long(207)", "Delete QualifiedName: TimeUnit.SECONDS(209)", "Delete SimpleName: convert(210)", "Delete NumberLiteral: 4(211)", "Delete QualifiedName: TimeUnit.DAYS(212)", "Delete MethodInvocation(213)", "Delete PrimitiveType: int(219)", "Delete NumberLiteral: 1(221)", "Delete QualifiedName: TimeUnit.MICROSECONDS(229)", "Delete SimpleName: convert(230)", "Delete NumberLiteral: 30(231)", "Delete QualifiedName: TimeUnit.SECONDS(232)", "Delete MethodInvocation(233)", "Delete Modifier: final(238)", "Delete PrimitiveType: int(239)", "Delete NumberLiteral: 1(241)", "Delete SimpleName: mapper(251)", "Delete Assignment: =(255)", "Delete SimpleType: Long(625)", "Delete Block(1147)", "Delete ThrowStatement(1202)", "Delete Block(1275)", "Delete MethodDeclaration(1276)", "Delete NullLiteral(1441)", "Delete SimpleName: partition(1448)", "Delete PrefixExpression: !(1469)", "Delete ReturnStatement(1471)", "Delete Block(1472)", "Delete SimpleName: partition(1535)", "Delete Assignment: =(1539)", "Delete ExpressionStatement(1540)", "Delete SimpleName: Thread(1570)", "Delete SimpleName: sleep(1571)", "Delete SimpleName: pollInterval(1572)", "Delete MethodInvocation(1573)", "Delete ExpressionStatement(1574)", "Delete SimpleName: sleep(1491)", "Delete MethodInvocation(1493)", "Delete InfixExpression: !=(1456)", "Delete MethodInvocation(1476)", "Delete ExpressionStatement(1477)", "Delete Block(1485)", "Delete SimpleType: BusyLockException(1487)", "Delete SimpleName: e(1488)", "Delete SingleVariableDeclaration(1489)", "Delete Block(1495)", "Delete CatchClause(1496)", "Delete InfixExpression: ==(1501)", "Delete InfixExpression: !=(1504)", "Delete PrefixExpression: !(1508)", "Delete InfixExpression: &&(1509)", "Delete ParenthesizedExpression(1510)", "Delete InfixExpression: ||(1511)", "Delete Block(1517)", "Delete Block(1523)", "Delete IfStatement(1524)", "Delete Block(1525)", "Delete TryStatement(1526)", "Delete Block(1527)", "Delete IfStatement(1528)", "Delete Block(1529)", "Delete IfStatement(1530)", "Delete IfStatement(1610)", "Delete Block(1616)", "Delete WhileStatement(1617)", "Delete Block(1618)", "Delete MethodDeclaration(1619)", "Delete SimpleName: entry(2154)", "Delete SimpleName: getPriority(2155)", "Delete MethodInvocation(2156)", "Delete Block(2222)", "Delete IfStatement(2228)", "Delete BreakStatement(2229)", "Delete Block(2230)", "Delete SwitchCase(2231)", "Delete SwitchStatement(2234)", "Delete Block(2235)", "Delete EnhancedForStatement(2236)", "Delete SimpleType: MessageQueueHooks(2238)", "Delete SimpleName: hook(2239)", "Delete SingleVariableDeclaration(2240)", "Delete SimpleName: hooks(2241)", "Delete MethodInvocation(2246)", "Delete ExpressionStatement(2247)", "Delete Block(2248)", "Delete EnhancedForStatement(2249)", "Delete SimpleName: ackMessage(2307)", "Delete Block(2379)", "Delete MethodInvocation(2421)", "Delete SimpleName: messages(2410)", "Delete SimpleName: columnFamily(2430)", "Delete SimpleName: getQueueKey(2431)", "Delete SimpleName: entry(2432)", "Delete MethodInvocation(2433)", "Delete MethodInvocation(2434)", "Delete SimpleName: deleteColumn(2435)", "Delete SimpleName: entry(2436)", "Delete MethodInvocation(2437)", "Delete ExpressionStatement(2438)", "Delete Block(2439)", "Delete IfStatement(2440)", "Delete Block(2441)", "Delete EnhancedForStatement(2442)", "Delete Block(2461)", "Delete PrimitiveType: long(2488)", "Delete SimpleName: curTimeMicros(2489)", "Delete SimpleName: ByteArrayOutputStream(2560)", "Delete SimpleType: ByteArrayOutputStream(2561)", "Delete ClassInstanceCreation(2562)", "Delete MethodInvocation(2573)", "Delete StringLiteral: \"Failed to serialize message data\"(2586)", "Delete MethodInvocation(2722)", "Delete NumberLiteral: 0(2723)", "Delete InfixExpression: ==(2724)", "Delete SimpleName: entry(2821)", "Delete MethodInvocation(2822)", "Delete PrimitiveType: int(2832)", "Delete NumberLiteral: 0(2495)", "Delete InfixExpression: ==(2496)", "Delete SimpleName: curTimeMicros(2497)", "Delete QualifiedName: TimeUnit.MICROSECONDS(2498)", "Delete QualifiedName: TimeUnit.MILLISECONDS(2503)", "Delete MethodInvocation(2504)", "Delete SimpleName: incrementAndGet(2506)", "Delete MethodInvocation(2507)", "Delete NumberLiteral: 1000(2508)", "Delete InfixExpression: %(2509)", "Delete ParenthesizedExpression(2510)", "Delete InfixExpression: +(2511)", "Delete Assignment: =(2512)", "Delete ExpressionStatement(2513)", "Delete Block(2514)", "Delete SimpleName: curTimeMicros(2515)", "Delete QualifiedName: TimeUnit.MICROSECONDS(2516)", "Delete SimpleName: convert(2517)", "Delete MethodInvocation(2520)", "Delete QualifiedName: TimeUnit.MILLISECONDS(2521)", "Delete MethodInvocation(2522)", "Delete InfixExpression: +(2529)", "Delete Assignment: =(2530)", "Delete ExpressionStatement(2531)", "Delete Block(2532)", "Delete IfStatement(2533)", "Delete SimpleName: message(2534)", "Delete SimpleName: setToken(2535)", "Delete SimpleName: curTimeMicros(2538)", "Delete MethodInvocation(2539)", "Delete MethodInvocation(2540)", "Delete ExpressionStatement(2541)", "Delete SimpleName: newMessageEntry(2546)", "Delete SimpleName: message(2547)", "Delete SimpleName: getPriority(2548)", "Delete MethodInvocation(2549)", "Delete MethodInvocation(2552)", "Delete QualifiedName: MessageQueueEntryState.Waiting(2553)", "Delete MethodInvocation(2554)", "Delete VariableDeclarationFragment(2555)", "Delete VariableDeclarationStatement(2556)", "Delete Block(2575)", "Delete Block(2590)", "Delete CatchClause(2591)", "Delete TryStatement(2592)", "Delete SimpleName: mb(2604)", "Delete SimpleName: withRow(2605)", "Delete MethodInvocation(2610)", "Delete SimpleName: entry(2612)", "Delete SimpleType: String(2614)", "Delete MethodInvocation(2617)", "Delete ClassInstanceCreation(2618)", "Delete PrimitiveType: int(2619)", "Delete MethodInvocation(2622)", "Delete CastExpression(2623)", "Delete MethodInvocation(2624)", "Delete ExpressionStatement(2625)", "Delete SimpleName: stats(2657)", "Delete SimpleName: incSendMessageCount(2658)", "Delete MethodInvocation(2659)", "Delete ExpressionStatement(2660)", "Delete SimpleName: message(2661)", "Delete SimpleName: getToken(2662)", "Delete MethodInvocation(2663)", "Delete ReturnStatement(2664)", "Delete Block(2665)", "Delete MethodDeclaration(2666)", "Delete SimpleType: UUID(2675)", "Delete ParameterizedType: Map<Message,UUID>(2676)", "Delete SimpleType: UUID(2692)", "Delete ParameterizedType: Map<Message,UUID>(2693)", "Delete VariableDeclarationStatement(2699)", "Delete SimpleName: messages(2715)", "Delete Block(2864)", "Delete EnhancedForStatement(2865)", "Delete StringLiteral: \"Failed to insert message into queue\"(2877)", "Delete SimpleName: e(2878)", "Delete ClassInstanceCreation(2879)", "Delete ThrowStatement(2880)", "Delete Block(2881)", "Delete CatchClause(2882)", "Delete TryStatement(2883)", "Delete SimpleName: response(2884)", "Delete ReturnStatement(2885)", "Delete Block(2886)", "Delete MethodDeclaration(2887)", "Delete AnonymousClassDeclaration(2888)", "Delete ClassInstanceCreation(2889)", "Delete ReturnStatement(2890)", "Delete Block(2891)", "Delete MethodDeclaration(2892)"]}}, {"DistributedTaskScheduler_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: javax.annotation.Nullable to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS ImportDeclaration to CompilationUnit at 20", "operations": ["INS QualifiedName: com.google.common.base.Function to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 20"]}, {"root": "INS ImportDeclaration to CompilationUnit at 37", "operations": ["INS QualifiedName: com.netflix.astyanax.recipes.uniqueness.ColumnPrefixUniquenessConstraint to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 37"]}, {"root": "INS ImportDeclaration to CompilationUnit at 38", "operations": ["INS QualifiedName: com.netflix.astyanax.recipes.uniqueness.NotUniqueException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 38"]}, {"root": "INS MarkerAnnotation to TypeDeclaration: class at 1", "operations": ["INS MarkerAnnotation to TypeDeclaration: class at 1", "INS SimpleName: Deprecated to MarkerAnnotation at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 26", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS Modifier: static to FieldDeclaration at 2", "INS Modifier: public to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 26"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 37", "operations": ["INS SimpleName: groupName to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 37", "INS SimpleType: String to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 42", "operations": ["INS PrimitiveType: long to FieldDeclaration at 1", "INS SimpleName: DEFAULT_POLLING_INTERVAL to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: class at 42", "INS SimpleName: pollingInterval to VariableDeclarationFragment at 0", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 61", "operations": ["INS SimpleName: key to SingleVariableDeclaration at 1", "INS SimpleName: String to SimpleType: String at 0", "INS InfixExpression: + to ReturnStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: key to InfixExpression: + at 2", "INS ReturnStatement to Block at 0", "INS SimpleName: groupName to InfixExpression: + at 0", "INS SimpleName: getGroupKey to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS StringLiteral: \"$\" to InfixExpression: + at 1", "INS SimpleType: String to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 61", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from private to public", "operations": ["UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public", "UPD Modifier: private from private to public"]}, {"root": "INS VariableDeclarationFragment to FieldDeclaration at 4", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 4", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS SimpleName: DEFAULT_POLLING_INTERVAL to VariableDeclarationFragment at 0"]}, {"root": "INS PrimitiveType: int to FieldDeclaration at 3", "operations": ["INS PrimitiveType: int to FieldDeclaration at 3"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 4"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 4", "MOV SimpleType: String to FieldDeclaration at 3"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 4", "MOV SimpleType: String to FieldDeclaration at 3"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV SimpleType: String to FieldDeclaration at 3", "MOV VariableDeclarationFragment to FieldDeclaration at 4"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 4", "MOV SimpleType: String to FieldDeclaration at 3"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV SimpleType: String to FieldDeclaration at 3", "MOV VariableDeclarationFragment to FieldDeclaration at 4"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 4", "MOV SimpleType: String to FieldDeclaration at 3"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 4", "MOV SimpleType: String to FieldDeclaration at 3"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV SimpleType: String to FieldDeclaration at 3", "MOV VariableDeclarationFragment to FieldDeclaration at 4"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV SimpleType: String to FieldDeclaration at 3", "MOV VariableDeclarationFragment to FieldDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS ReturnStatement to Block at 1", "INS SimpleName: groupName to SingleVariableDeclaration at 1", "INS SimpleName: withGroupName to MethodDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleType: Builder to MethodDeclaration at 2", "INS SimpleName: Builder to SimpleType: Builder at 0", "INS Javadoc to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Assignment: = to ExpressionStatement at 0", "INS TagElement: @param to Javadoc at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: schedulerName to TagElement: @param at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS QualifiedName: taskExecutor.groupName to Assignment: = at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS TextElement: Group name within the column families.  This allows for multiple schedulers to TagElement at 0", "INS TextElement: to run in the same column famil. to TagElement at 1", "INS ThisExpression to ReturnStatement at 0", "INS TagElement: @return to Javadoc at 2", "INS SimpleName: groupName to Assignment: = at 1", "INS TagElement to Javadoc at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: units to TagElement: @param at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: units to MethodInvocation at 3", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: units to SingleVariableDeclaration at 1", "INS SimpleName: interval to MethodInvocation at 2", "INS SimpleName: Builder to SimpleType: Builder at 0", "INS QualifiedName: taskExecutor.pollingInterval to Assignment: = at 0", "INS Block to MethodDeclaration at 6", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS TextElement:      Lowest granularity is in seconds to TagElement: @param at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: TimeUnit to SimpleType: TimeUnit at 0", "INS SimpleName: interval to TagElement: @param at 0", "INS ThisExpression to ReturnStatement at 0", "INS TextElement: Set the polling interval for checking for events to execute. to TagElement at 0", "INS SimpleType: TimeUnit to SingleVariableDeclaration at 0", "INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: interval to SingleVariableDeclaration at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: convert to MethodInvocation at 1", "INS TagElement to Javadoc at 0", "INS TagElement: @return to Javadoc at 3", "INS SimpleType: Builder to MethodDeclaration at 2", "INS QualifiedName: TimeUnit.SECONDS to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: withPollingInterval to MethodDeclaration at 3"]}, {"root": "INS SimpleType: NotUniqueException to MethodDeclaration at 7", "operations": ["INS SimpleName: NotUniqueException to SimpleType: NotUniqueException at 0", "INS SimpleType: NotUniqueException to MethodDeclaration at 7"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS InfixExpression: == to IfStatement at 0", "INS SimpleName: name to Assignment: = at 1", "INS SimpleName: groupName to InfixExpression: == at 0", "INS SimpleName: groupName to Assignment: = at 0", "INS IfStatement to Block at 3", "INS NullLiteral to InfixExpression: == at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to IfStatement at 1"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS Modifier: final to SingleVariableDeclaration at 0", "operations": ["INS Modifier: final to SingleVariableDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: getGroupKey to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: rowKey to VariableDeclarationFragment at 0", "INS SimpleType: String to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: final to VariableDeclarationStatement at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: serializedTask to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to VariableDeclarationStatement at 1", "INS Modifier: final to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: serializedTrigger to VariableDeclarationFragment at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleType: String to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2"]}, {"root": "INS TryStatement to Block at 4", "operations": ["INS StringLiteral: \"Failed to serialize trigger or task for \" to InfixExpression: + at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: e to ClassInstanceCreation at 2", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: rowKey to InfixExpression: + at 1", "INS ThrowStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to TryStatement at 0", "INS CatchClause to TryStatement at 1", "INS SimpleName: serializedTrigger to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Block to CatchClause at 1", "INS TryStatement to Block at 4", "INS ExpressionStatement to Block at 0", "INS SimpleName: serializedTask to Assignment: = at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleType: String to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: rowKey to VariableDeclarationFragment at 0", "INS SimpleName: taskKey to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: getGroupKey to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: getGroupKey to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: taskKey to MethodInvocation at 1", "INS SimpleName: rowKey to VariableDeclarationFragment at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getGroupKey to MethodInvocation at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: taskKey to MethodInvocation at 1", "INS SimpleName: rowKey to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS ParameterizedType: ColumnPrefixUniquenessConstraint<String> to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: String to ParameterizedType: ColumnPrefixUniquenessConstraint<String> at 1", "INS SimpleName: ColumnPrefixUniquenessConstraint to SimpleType: ColumnPrefixUniquenessConstraint at 0", "INS SimpleType: ColumnPrefixUniquenessConstraint to ParameterizedType: ColumnPrefixUniquenessConstraint<String> at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: ColumnPrefixUniquenessConstraint<String> to VariableDeclarationStatement at 0"]}, {"root": "INS Block to TryStatement at 0", "operations": ["INS SimpleName: acquireAndApplyMutation to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS AnonymousClassDeclaration to ClassInstanceCreation at 1", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Boolean to SimpleType: Boolean at 0", "INS ParameterizedType: Function<MutationBatch,Boolean> to ClassInstanceCreation at 0", "INS SimpleName: mb to SingleVariableDeclaration at 2", "INS MethodDeclaration to AnonymousClassDeclaration at 0", "INS SimpleType: Boolean to ParameterizedType: Function<MutationBatch,Boolean> at 2", "INS SimpleName: apply to MethodDeclaration at 3", "INS SimpleName: Nullable to MarkerAnnotation at 0", "INS ExpressionStatement to Block at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS SimpleName: Function to SimpleType: Function at 0", "INS Block to TryStatement at 0", "INS SimpleName: unique to MethodInvocation at 0", "INS SimpleType: Boolean to MethodDeclaration at 2", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: MutationBatch to SimpleType: MutationBatch at 0", "INS MarkerAnnotation to SingleVariableDeclaration at 0", "INS SimpleType: MutationBatch to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: Function to ParameterizedType: Function<MutationBatch,Boolean> at 0", "INS ReturnStatement to Block at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS QualifiedName: TimeUnit.SECONDS to MethodInvocation at 3", "INS MethodInvocation to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: build to MethodInvocation at 1", "INS SimpleName: pollingInterval to MethodInvocation at 2", "INS SimpleName: withPollInterval to MethodInvocation at 1"]}, {"root": "UPDATE from shutdown to shutdownNow", "operations": ["UPD SimpleName: shutdown from shutdown to shutdownNow"]}, {"root": "UPDATE from mb to unique", "operations": ["UPD SimpleName: mb from mb to unique"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: setConsistencyLevel to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: consistencyLevel to MethodInvocation at 2"]}, {"root": "MOVE from CatchClause", "operations": ["MOV SingleVariableDeclaration to CatchClause at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 1"]}, {"root": "INS ClassInstanceCreation to MethodInvocation at 0", "operations": ["INS SimpleType: ColumnPrefixUniquenessConstraint to ParameterizedType: ColumnPrefixUniquenessConstraint<String> at 0", "INS SimpleName: rowKey to ClassInstanceCreation at 3", "INS SimpleType: String to ParameterizedType: ColumnPrefixUniquenessConstraint<String> at 1", "INS SimpleName: ColumnPrefixUniquenessConstraint to SimpleType: ColumnPrefixUniquenessConstraint at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ClassInstanceCreation to MethodInvocation at 0", "INS ParameterizedType: ColumnPrefixUniquenessConstraint<String> to ClassInstanceCreation at 0", "INS SimpleName: keyspace to ClassInstanceCreation at 1", "INS SimpleName: taskCf to ClassInstanceCreation at 2"]}, {"root": "INS SimpleName: withConsistencyLevel to MethodInvocation at 1", "operations": ["INS SimpleName: withConsistencyLevel to MethodInvocation at 1"]}, {"root": "INS SimpleName: consistencyLevel to MethodInvocation at 2", "operations": ["INS SimpleName: consistencyLevel to MethodInvocation at 2"]}, {"root": "UPDATE from ConnectionException to Exception", "operations": ["UPD SimpleType: ConnectionException from ConnectionException to Exception", "UPD SimpleName: ConnectionException from ConnectionException to Exception"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from taskKey to rowKey", "operations": ["UPD SimpleName: taskKey from taskKey to rowKey", "UPD SimpleName: taskKey from taskKey to rowKey", "UPD SimpleName: getKey from getKey to rowKey", "UPD SimpleName: taskKey from taskKey to rowKey", "UPD SimpleName: taskKey from taskKey to rowKey", "UPD SimpleName: taskKey from taskKey to rowKey", "UPD SimpleName: taskKey from taskKey to rowKey", "UPD SimpleName: execute from execute to rowKey"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "UPDATE from mb to sendMessage", "operations": ["UPD SimpleName: mb from mb to sendMessage"]}, {"root": "INS SimpleName: trigger to MethodInvocation at 2", "operations": ["INS SimpleName: trigger to MethodInvocation at 2"]}, {"root": "UPDATE from build to withTimeBuckets", "operations": ["UPD SimpleName: build from build to withTimeBuckets"]}, {"root": "INS SimpleName: DEFAULT_BUCKET_COUNT to MethodInvocation at 2", "operations": ["INS SimpleName: DEFAULT_BUCKET_COUNT to MethodInvocation at 2"]}, {"root": "INS SimpleName: DEFAULT_BUCKET_DURATION to MethodInvocation at 3", "operations": ["INS SimpleName: DEFAULT_BUCKET_DURATION to MethodInvocation at 3"]}, {"root": "INS QualifiedName: TimeUnit.HOURS to MethodInvocation at 4", "operations": ["INS QualifiedName: TimeUnit.HOURS to MethodInvocation at 4"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: TaskSchedulerException to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: TaskSchedulerException to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: TaskSchedulerException to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: TaskSchedulerException to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: TaskSchedulerException to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: TaskSchedulerException to ClassInstanceCreation at 0"]}, {"root": "UPDATE from withBuckets to withHook", "operations": ["UPD SimpleName: withBuckets from withBuckets to withHook"]}, {"root": "INS ThisExpression to MethodInvocation at 2", "operations": ["INS ThisExpression to MethodInvocation at 2"]}, {"root": "MOVE from ParameterizedType: Function<MutationBatch,Boolean>", "operations": ["MOV SimpleType: MutationBatch to ParameterizedType: Function<MutationBatch,Boolean> at 1"]}, {"root": "INS SimpleName: rowKey to InfixExpression: + at 1", "operations": ["INS SimpleName: rowKey to InfixExpression: + at 1"]}, {"root": "UPDATE from \"Failed to commit task \" to \"Failed to send message for task \"", "operations": ["UPD StringLiteral: \"Failed to commit task \" from \"Failed to commit task \" to \"Failed to send message for task \""]}, {"root": "INS SimpleName: rowKey to InfixExpression: + at 1", "operations": ["INS SimpleName: rowKey to InfixExpression: + at 1"]}, {"root": "UPDATE from withHook to withShardCount", "operations": ["UPD SimpleName: withHook from withHook to withShardCount"]}, {"root": "INS SimpleName: DEFAULT_SHARD_COUNT to MethodInvocation at 2", "operations": ["INS SimpleName: DEFAULT_SHARD_COUNT to MethodInvocation at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from withShardCount to withConsistencyLevel", "operations": ["UPD SimpleName: withShardCount from withShardCount to withConsistencyLevel"]}, {"root": "UPDATE from DEFAULT_SHARD_COUNT to consistencyLevel", "operations": ["UPD SimpleName: DEFAULT_SHARD_COUNT from DEFAULT_SHARD_COUNT to consistencyLevel"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from withConsistencyLevel to withKeyspace", "operations": ["UPD SimpleName: withConsistencyLevel from withConsistencyLevel to withKeyspace"]}, {"root": "UPDATE from consistencyLevel to keyspace", "operations": ["UPD SimpleName: consistencyLevel from consistencyLevel to keyspace"]}, {"root": "UPDATE from withKeyspace to withQueueName", "operations": ["UPD SimpleName: withKeyspace from withKeyspace to withQueueName"]}, {"root": "UPDATE from keyspace to groupName", "operations": ["UPD SimpleName: keyspace from keyspace to groupName"]}, {"root": "UPDATE from println to LOG", "operations": ["UPD SimpleName: println from println to LOG"]}, {"root": "INS SimpleName: info to MethodInvocation at 2", "operations": ["INS SimpleName: info to MethodInvocation at 2"]}, {"root": "INS SimpleName: serializedTrigger to MethodInvocation at 3", "operations": ["INS SimpleName: serializedTrigger to MethodInvocation at 3"]}, {"root": "INS SimpleName: serializedTask to MethodInvocation at 3", "operations": ["INS SimpleName: serializedTask to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getKey to MethodInvocation at 3"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getTrigger to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: message to MethodInvocation at 0"]}, {"root": "INS CastExpression to VariableDeclarationFragment at 1", "operations": ["INS SimpleType: String to CastExpression at 0", "INS SimpleName: message to MethodInvocation at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to CastExpression at 1"]}, {"root": "UPDATE from getStringValue to get", "operations": ["UPD SimpleName: getStringValue from getStringValue to get"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: columns to MethodInvocation at 1", "MOV SimpleName: COLUMN_TRIGGER to MethodInvocation at 2", "MOV SimpleName: getStringValue to MethodInvocation at 1"]}, {"root": "UPDATE from columns to getParameters", "operations": ["UPD SimpleName: columns from columns to getParameters"]}, {"root": "DEL ThisExpression", "operations": ["DEL ThisExpression"]}, {"root": "DEL SimpleName: DEFAULT_BUCKET_COUNT", "operations": ["DEL SimpleName: DEFAULT_BUCKET_COUNT"]}, {"root": "DEL SimpleName: DEFAULT_BUCKET_DURATION", "operations": ["DEL SimpleName: DEFAULT_BUCKET_DURATION"]}, {"root": "DEL QualifiedName: TimeUnit.HOURS", "operations": ["DEL QualifiedName: TimeUnit.HOURS"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL NullLiteral"]}, {"root": "DEL QualifiedName: System.out", "operations": ["DEL QualifiedName: System.out"]}, {"root": "DEL SimpleName: keyspace", "operations": ["DEL SimpleName: keyspace"]}, {"root": "DEL SimpleName: prepareMutationBatch", "operations": ["DEL SimpleName: prepareMutationBatch"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: task"]}, {"root": "DEL Block", "operations": ["DEL Block"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getKey", "DEL SimpleName: task", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getKey", "DEL SimpleName: task", "DEL MethodInvocation"]}, {"root": "DEL TryStatement", "operations": ["DEL MethodInvocation", "DEL CatchClause", "DEL ThrowStatement", "DEL SimpleName: trigger", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL SimpleName: getKey", "DEL StringLiteral: \"Failed to send message for task \"", "DEL ClassInstanceCreation", "DEL Block", "DEL ExpressionStatement", "DEL TryStatement", "DEL SimpleName: e", "DEL Block", "DEL SimpleName: sendMessage", "DEL SimpleName: task"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: getTriggerTime", "DEL SimpleName: trigger", "DEL SimpleName: message", "DEL SimpleName: setTriggerTime", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation"]}]}}, {"DistributedTaskScheduler_diff": {"operations": ["Insert ImportDeclaration(21) into CompilationUnit(2204) at 10", "Insert ImportDeclaration(41) into CompilationUnit(2204) at 20", "Insert ImportDeclaration(75) into CompilationUnit(2204) at 37", "Insert ImportDeclaration(77) into CompilationUnit(2204) at 38", "Insert QualifiedName: javax.annotation.Nullable(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: com.google.common.base.Function(40) into ImportDeclaration(41) at 0", "Insert QualifiedName: com.netflix.astyanax.recipes.uniqueness.ColumnPrefixUniquenessConstraint(74) into ImportDeclaration(75) at 0", "Insert QualifiedName: com.netflix.astyanax.recipes.uniqueness.NotUniqueException(76) into ImportDeclaration(77) at 0", "Insert MarkerAnnotation(91) into TypeDeclaration: class(2203) at 1", "Insert FieldDeclaration(289) into TypeDeclaration: class(2203) at 26", "Insert FieldDeclaration(556) into TypeDeclaration: class(2203) at 37", "Insert FieldDeclaration(596) into TypeDeclaration: class(2203) at 42", "Insert MethodDeclaration(2202) into TypeDeclaration: class(2203) at 61", "Insert SimpleName: Deprecated(90) into MarkerAnnotation(91) at 0", "Update Modifier: private(102) to public", "Update Modifier: private(111) to public", "Update Modifier: private(120) to public", "Update Modifier: private(128) to public", "Update Modifier: private(136) to public", "Update Modifier: private(151) to public", "Update Modifier: private(159) to public", "Update Modifier: private(167) to public", "Update Modifier: private(175) to public", "Update Modifier: private(183) to public", "Insert VariableDeclarationFragment(199) into FieldDeclaration(200) at 4", "Update Modifier: private(191) to public", "Insert PrimitiveType: int(204) into FieldDeclaration(208) at 3", "Move VariableDeclarationFragment(189) into FieldDeclaration(208) at 4", "Update Modifier: private(200) to public", "Move SimpleType: String(195) into FieldDeclaration(217) at 3", "Move VariableDeclarationFragment(198) into FieldDeclaration(217) at 4", "Update Modifier: private(209) to public", "Move SimpleType: String(204) into FieldDeclaration(226) at 3", "Move VariableDeclarationFragment(207) into FieldDeclaration(226) at 4", "Update Modifier: private(218) to public", "Move SimpleType: String(213) into FieldDeclaration(235) at 3", "Move VariableDeclarationFragment(216) into FieldDeclaration(235) at 4", "Update Modifier: private(227) to public", "Move SimpleType: String(222) into FieldDeclaration(244) at 3", "Move VariableDeclarationFragment(225) into FieldDeclaration(244) at 4", "Update Modifier: private(236) to public", "Move SimpleType: String(231) into FieldDeclaration(253) at 3", "Move VariableDeclarationFragment(234) into FieldDeclaration(253) at 4", "Update Modifier: private(245) to public", "Move SimpleType: String(240) into FieldDeclaration(262) at 3", "Move VariableDeclarationFragment(243) into FieldDeclaration(262) at 4", "Update Modifier: private(254) to public", "Move SimpleType: String(249) into FieldDeclaration(271) at 3", "Move VariableDeclarationFragment(252) into FieldDeclaration(271) at 4", "Update Modifier: private(263) to public", "Move SimpleType: String(258) into FieldDeclaration(280) at 3", "Move VariableDeclarationFragment(261) into FieldDeclaration(280) at 4", "Insert Modifier: public(281) into FieldDeclaration(289) at 0", "Insert Modifier: final(282) into FieldDeclaration(289) at 1", "Insert Modifier: static(283) into FieldDeclaration(289) at 2", "Move SimpleType: String(267) into FieldDeclaration(289) at 3", "Move VariableDeclarationFragment(270) into FieldDeclaration(289) at 4", "Insert MethodDeclaration(439) into TypeDeclaration: class(505) at 9", "Insert MethodDeclaration(492) into TypeDeclaration: class(505) at 11", "Insert Modifier: private(551) into FieldDeclaration(556) at 0", "Insert SimpleType: String(553) into FieldDeclaration(556) at 1", "Insert VariableDeclarationFragment(555) into FieldDeclaration(556) at 2", "Insert Modifier: private(591) into FieldDeclaration(596) at 0", "Insert PrimitiveType: long(592) into FieldDeclaration(596) at 1", "Insert VariableDeclarationFragment(595) into FieldDeclaration(596) at 2", "Insert SimpleType: NotUniqueException(1567) into MethodDeclaration(1728) at 7", "Insert MarkerAnnotation(1834) into MethodDeclaration(1892) at 0", "Insert Modifier: private(2188) into MethodDeclaration(2202) at 0", "Insert SimpleType: String(2190) into MethodDeclaration(2202) at 1", "Insert SimpleName: getGroupKey(2191) into MethodDeclaration(2202) at 2", "Insert SingleVariableDeclaration(2195) into MethodDeclaration(2202) at 3", "Insert Block(2201) into MethodDeclaration(2202) at 4", "Insert SimpleName: DEFAULT_POLLING_INTERVAL(197) into VariableDeclarationFragment(199) at 0", "Insert NumberLiteral: 1(198) into VariableDeclarationFragment(199) at 1", "Insert Javadoc(423) into MethodDeclaration(439) at 0", "Insert Modifier: public(424) into MethodDeclaration(439) at 1", "Insert SimpleType: Builder(426) into MethodDeclaration(439) at 2", "Insert SimpleName: withGroupName(427) into MethodDeclaration(439) at 3", "Insert SingleVariableDeclaration(431) into MethodDeclaration(439) at 4", "Insert Block(438) into MethodDeclaration(439) at 5", "Insert Javadoc(469) into MethodDeclaration(492) at 0", "Insert Modifier: public(470) into MethodDeclaration(492) at 1", "Insert SimpleType: Builder(472) into MethodDeclaration(492) at 2", "Insert SimpleName: withPollingInterval(473) into MethodDeclaration(492) at 3", "Insert SingleVariableDeclaration(476) into MethodDeclaration(492) at 4", "Insert SingleVariableDeclaration(480) into MethodDeclaration(492) at 5", "Insert Block(491) into MethodDeclaration(492) at 6", "Insert SimpleName: String(552) into SimpleType: String(553) at 0", "Insert SimpleName: groupName(554) into VariableDeclarationFragment(555) at 0", "Insert SimpleName: pollingInterval(593) into VariableDeclarationFragment(595) at 0", "Insert SimpleName: DEFAULT_POLLING_INTERVAL(594) into VariableDeclarationFragment(595) at 1", "Insert IfStatement(660) into Block(713) at 3", "Insert Modifier: final(1554) into SingleVariableDeclaration(1558) at 0", "Insert Modifier: final(1559) into SingleVariableDeclaration(1563) at 0", "Insert SimpleName: NotUniqueException(1566) into SimpleType: NotUniqueException(1567) at 0", "Insert VariableDeclarationStatement(1578) into Block(1727) at 0", "Insert VariableDeclarationStatement(1604) into Block(1727) at 2", "Insert VariableDeclarationStatement(1610) into Block(1727) at 3", "Insert TryStatement(1638) into Block(1727) at 4", "Insert VariableDeclarationStatement(1747) into Block(1779) at 0", "Insert VariableDeclarationStatement(1799) into Block(1831) at 0", "Insert SimpleName: Override(1833) into MarkerAnnotation(1834) at 0", "Insert VariableDeclarationStatement(1851) into Block(1891) at 0", "Insert SimpleName: String(2189) into SimpleType: String(2190) at 0", "Insert SimpleType: String(2193) into SingleVariableDeclaration(2195) at 0", "Insert SimpleName: key(2194) into SingleVariableDeclaration(2195) at 1", "Insert ReturnStatement(2200) into Block(2201) at 0", "Insert TagElement(419) into Javadoc(423) at 0", "Insert TagElement: @param(421) into Javadoc(423) at 1", "Insert TagElement: @return(422) into Javadoc(423) at 2", "Insert SimpleName: Builder(425) into SimpleType: Builder(426) at 0", "Insert SimpleType: String(429) into SingleVariableDeclaration(431) at 0", "Insert SimpleName: groupName(430) into SingleVariableDeclaration(431) at 1", "Insert ExpressionStatement(435) into Block(438) at 0", "Insert ReturnStatement(437) into Block(438) at 1", "Insert TagElement(462) into Javadoc(469) at 0", "Insert TagElement: @param(464) into Javadoc(469) at 1", "Insert TagElement: @param(467) into Javadoc(469) at 2", "Insert TagElement: @return(468) into Javadoc(469) at 3", "Insert SimpleName: Builder(471) into SimpleType: Builder(472) at 0", "Insert PrimitiveType: long(474) into SingleVariableDeclaration(476) at 0", "Insert SimpleName: interval(475) into SingleVariableDeclaration(476) at 1", "Insert SimpleType: TimeUnit(478) into SingleVariableDeclaration(480) at 0", "Insert SimpleName: units(479) into SingleVariableDeclaration(480) at 1", "Insert ExpressionStatement(488) into Block(491) at 0", "Insert ReturnStatement(490) into Block(491) at 1", "Insert InfixExpression: ==(655) into IfStatement(660) at 0", "Insert ExpressionStatement(659) into IfStatement(660) at 1", "Insert Modifier: final(1568) into VariableDeclarationStatement(1578) at 0", "Insert SimpleType: String(1570) into VariableDeclarationStatement(1578) at 1", "Insert VariableDeclarationFragment(1577) into VariableDeclarationStatement(1578) at 2", "Insert ParameterizedType: ColumnPrefixUniquenessConstraint<String>(1583) into VariableDeclarationStatement(1598) at 0", "Insert Modifier: final(1599) into VariableDeclarationStatement(1604) at 0", "Insert SimpleType: String(1601) into VariableDeclarationStatement(1604) at 1", "Insert VariableDeclarationFragment(1603) into VariableDeclarationStatement(1604) at 2", "Insert Modifier: final(1605) into VariableDeclarationStatement(1610) at 0", "Insert SimpleType: String(1607) into VariableDeclarationStatement(1610) at 1", "Insert VariableDeclarationFragment(1609) into VariableDeclarationStatement(1610) at 2", "Insert Block(1623) into TryStatement(1638) at 0", "Insert CatchClause(1637) into TryStatement(1638) at 1", "Insert Block(1690) into TryStatement(1705) at 0", "Insert SimpleType: String(1741) into VariableDeclarationStatement(1747) at 0", "Insert VariableDeclarationFragment(1746) into VariableDeclarationStatement(1747) at 1", "Insert SimpleType: String(1793) into VariableDeclarationStatement(1799) at 0", "Insert VariableDeclarationFragment(1798) into VariableDeclarationStatement(1799) at 1", "Insert SimpleType: String(1845) into VariableDeclarationStatement(1851) at 0", "Insert VariableDeclarationFragment(1850) into VariableDeclarationStatement(1851) at 1", "Insert SimpleName: String(2192) into SimpleType: String(2193) at 0", "Insert InfixExpression: +(2199) into ReturnStatement(2200) at 0", "Insert TextElement: Group name within the column families.  This allows for multiple schedulers(417) into TagElement(419) at 0", "Insert TextElement: to run in the same column famil.(418) into TagElement(419) at 1", "Insert SimpleName: schedulerName(420) into TagElement: @param(421) at 0", "Insert SimpleName: String(428) into SimpleType: String(429) at 0", "Insert Assignment: =(434) into ExpressionStatement(435) at 0", "Insert ThisExpression(436) into ReturnStatement(437) at 0", "Insert TextElement: Set the polling interval for checking for events to execute.(461) into TagElement(462) at 0", "Insert SimpleName: interval(463) into TagElement: @param(464) at 0", "Insert SimpleName: units(465) into TagElement: @param(467) at 0", "Insert TextElement:      Lowest granularity is in seconds(466) into TagElement: @param(467) at 1", "Insert SimpleName: TimeUnit(477) into SimpleType: TimeUnit(478) at 0", "Insert Assignment: =(487) into ExpressionStatement(488) at 0", "Insert ThisExpression(489) into ReturnStatement(490) at 0", "Insert SimpleName: groupName(653) into InfixExpression: ==(655) at 0", "Insert NullLiteral(654) into InfixExpression: ==(655) at 1", "Insert Assignment: =(658) into ExpressionStatement(659) at 0", "Insert MethodInvocation(704) into Assignment: =(705) at 1", "Update SimpleName: shutdown(898) to shutdownNow", "Insert SimpleName: String(1569) into SimpleType: String(1570) at 0", "Insert SimpleName: rowKey(1571) into VariableDeclarationFragment(1577) at 0", "Insert MethodInvocation(1576) into VariableDeclarationFragment(1577) at 1", "Insert SimpleType: ColumnPrefixUniquenessConstraint(1580) into ParameterizedType: ColumnPrefixUniquenessConstraint<String>(1583) at 0", "Insert SimpleType: String(1582) into ParameterizedType: ColumnPrefixUniquenessConstraint<String>(1583) at 1", "Update SimpleName: mb(1460) to unique", "Insert SimpleName: String(1600) into SimpleType: String(1601) at 0", "Insert SimpleName: serializedTask(1602) into VariableDeclarationFragment(1603) at 0", "Insert SimpleName: String(1606) into SimpleType: String(1607) at 0", "Insert SimpleName: serializedTrigger(1608) into VariableDeclarationFragment(1609) at 0", "Insert ExpressionStatement(1616) into Block(1623) at 0", "Insert ExpressionStatement(1622) into Block(1623) at 1", "Move SingleVariableDeclaration(1545) into CatchClause(1637) at 0", "Insert Block(1636) into CatchClause(1637) at 1", "Insert ExpressionStatement(1689) into Block(1690) at 0", "Insert SimpleName: String(1740) into SimpleType: String(1741) at 0", "Insert SimpleName: rowKey(1742) into VariableDeclarationFragment(1746) at 0", "Insert MethodInvocation(1745) into VariableDeclarationFragment(1746) at 1", "Move SingleVariableDeclaration(1684) into CatchClause(1777) at 0", "Insert SimpleName: String(1792) into SimpleType: String(1793) at 0", "Insert SimpleName: rowKey(1794) into VariableDeclarationFragment(1798) at 0", "Insert MethodInvocation(1797) into VariableDeclarationFragment(1798) at 1", "Insert SimpleName: String(1844) into SimpleType: String(1845) at 0", "Insert SimpleName: rowKey(1846) into VariableDeclarationFragment(1850) at 0", "Insert MethodInvocation(1849) into VariableDeclarationFragment(1850) at 1", "Insert MethodInvocation(1860) into VariableDeclarationFragment(1861) at 1", "Move SingleVariableDeclaration(1591) into CatchClause(1889) at 0", "Insert SimpleName: groupName(2196) into InfixExpression: +(2199) at 0", "Insert StringLiteral: \"$\"(2197) into InfixExpression: +(2199) at 1", "Insert SimpleName: key(2198) into InfixExpression: +(2199) at 2", "Insert QualifiedName: taskExecutor.groupName(432) into Assignment: =(434) at 0", "Insert SimpleName: groupName(433) into Assignment: =(434) at 1", "Insert QualifiedName: taskExecutor.pollingInterval(481) into Assignment: =(487) at 0", "Insert MethodInvocation(486) into Assignment: =(487) at 1", "Insert SimpleName: groupName(656) into Assignment: =(658) at 0", "Insert SimpleName: name(657) into Assignment: =(658) at 1", "Insert MethodInvocation(702) into MethodInvocation(704) at 0", "Insert SimpleName: build(703) into MethodInvocation(704) at 1", "Insert SimpleName: getGroupKey(1572) into MethodInvocation(1576) at 0", "Move MethodInvocation(1551) into MethodInvocation(1576) at 1", "Insert SimpleName: ColumnPrefixUniquenessConstraint(1579) into SimpleType: ColumnPrefixUniquenessConstraint(1580) at 0", "Insert SimpleName: String(1581) into SimpleType: String(1582) at 0", "Insert ClassInstanceCreation(1593) into MethodInvocation(1596) at 0", "Insert SimpleName: withConsistencyLevel(1594) into MethodInvocation(1596) at 1", "Insert SimpleName: consistencyLevel(1595) into MethodInvocation(1596) at 2", "Insert Assignment: =(1615) into ExpressionStatement(1616) at 0", "Insert Assignment: =(1621) into ExpressionStatement(1622) at 0", "Insert ThrowStatement(1635) into Block(1636) at 0", "Insert MethodInvocation(1688) into ExpressionStatement(1689) at 0", "Update SimpleType: ConnectionException(1518) to Exception", "Insert SimpleName: getGroupKey(1743) into MethodInvocation(1745) at 0", "Insert SimpleName: taskKey(1744) into MethodInvocation(1745) at 1", "Insert SimpleName: getGroupKey(1795) into MethodInvocation(1797) at 0", "Insert SimpleName: taskKey(1796) into MethodInvocation(1797) at 1", "Insert SimpleName: getGroupKey(1847) into MethodInvocation(1849) at 0", "Insert SimpleName: taskKey(1848) into MethodInvocation(1849) at 1", "Move MethodInvocation(1665) into MethodInvocation(1860) at 0", "Insert SimpleName: setConsistencyLevel(1858) into MethodInvocation(1860) at 1", "Insert SimpleName: consistencyLevel(1859) into MethodInvocation(1860) at 2", "Update SimpleName: taskKey(1671) to rowKey", "Insert QualifiedName: TimeUnit.SECONDS(482) into MethodInvocation(486) at 0", "Insert SimpleName: convert(483) into MethodInvocation(486) at 1", "Insert SimpleName: interval(484) into MethodInvocation(486) at 2", "Insert SimpleName: units(485) into MethodInvocation(486) at 3", "Move MethodInvocation(604) into MethodInvocation(702) at 0", "Insert SimpleName: withPollInterval(699) into MethodInvocation(702) at 1", "Insert SimpleName: pollingInterval(700) into MethodInvocation(702) at 2", "Insert QualifiedName: TimeUnit.SECONDS(701) into MethodInvocation(702) at 3", "Insert ParameterizedType: ColumnPrefixUniquenessConstraint<String>(1589) into ClassInstanceCreation(1593) at 0", "Insert SimpleName: keyspace(1590) into ClassInstanceCreation(1593) at 1", "Insert SimpleName: taskCf(1591) into ClassInstanceCreation(1593) at 2", "Insert SimpleName: rowKey(1592) into ClassInstanceCreation(1593) at 3", "Insert SimpleName: serializedTask(1611) into Assignment: =(1615) at 0", "Move MethodInvocation(1477) into Assignment: =(1615) at 1", "Insert SimpleName: serializedTrigger(1617) into Assignment: =(1621) at 0", "Move MethodInvocation(1483) into Assignment: =(1621) at 1", "Insert ClassInstanceCreation(1634) into ThrowStatement(1635) at 0", "Insert SimpleName: unique(1639) into MethodInvocation(1688) at 0", "Insert SimpleName: acquireAndApplyMutation(1640) into MethodInvocation(1688) at 1", "Insert ClassInstanceCreation(1687) into MethodInvocation(1688) at 2", "Update SimpleName: mb(1512) to sendMessage", "Update SimpleName: execute(1513) to rowKey", "Insert SimpleName: trigger(1708) into MethodInvocation(1709) at 2", "Update SimpleName: ConnectionException(1517) to Exception", "Update SimpleName: build(603) to withTimeBuckets", "Insert SimpleName: DEFAULT_BUCKET_COUNT(695) into MethodInvocation(698) at 2", "Insert SimpleName: DEFAULT_BUCKET_DURATION(696) into MethodInvocation(698) at 3", "Insert QualifiedName: TimeUnit.HOURS(697) into MethodInvocation(698) at 4", "Insert SimpleType: ColumnPrefixUniquenessConstraint(1586) into ParameterizedType: ColumnPrefixUniquenessConstraint<String>(1589) at 0", "Insert SimpleType: String(1588) into ParameterizedType: ColumnPrefixUniquenessConstraint<String>(1589) at 1", "Move SimpleType: TaskSchedulerException(1637) into ClassInstanceCreation(1634) at 0", "Insert InfixExpression: +(1632) into ClassInstanceCreation(1634) at 1", "Insert SimpleName: e(1633) into ClassInstanceCreation(1634) at 2", "Insert ParameterizedType: Function<MutationBatch,Boolean>(1647) into ClassInstanceCreation(1687) at 0", "Insert AnonymousClassDeclaration(1686) into ClassInstanceCreation(1687) at 1", "Move SimpleType: TaskSchedulerException(1686) into ClassInstanceCreation(1701) at 0", "Move SimpleType: TaskSchedulerException(1593) into ClassInstanceCreation(1722) at 0", "Move SimpleType: TaskSchedulerException(1547) into ClassInstanceCreation(1774) at 0", "Move SimpleType: TaskSchedulerException(1522) into ClassInstanceCreation(1826) at 0", "Move SimpleType: TaskSchedulerException(1500) into ClassInstanceCreation(1886) at 0", "Update SimpleName: withBuckets(598) to withHook", "Insert ThisExpression(692) into MethodInvocation(693) at 2", "Insert SimpleName: ColumnPrefixUniquenessConstraint(1585) into SimpleType: ColumnPrefixUniquenessConstraint(1586) at 0", "Insert SimpleName: String(1587) into SimpleType: String(1588) at 0", "Insert StringLiteral: \"Failed to serialize trigger or task for \"(1630) into InfixExpression: +(1632) at 0", "Insert SimpleName: rowKey(1631) into InfixExpression: +(1632) at 1", "Insert SimpleType: Function(1642) into ParameterizedType: Function<MutationBatch,Boolean>(1647) at 0", "Move SimpleType: MutationBatch(1459) into ParameterizedType: Function<MutationBatch,Boolean>(1647) at 1", "Insert SimpleType: Boolean(1646) into ParameterizedType: Function<MutationBatch,Boolean>(1647) at 2", "Insert MethodDeclaration(1685) into AnonymousClassDeclaration(1686) at 0", "Insert SimpleName: rowKey(1698) into InfixExpression: +(1699) at 1", "Update StringLiteral: \"Failed to commit task \"(1523) to \"Failed to send message for task \"", "Insert SimpleName: rowKey(1719) into InfixExpression: +(1720) at 1", "Update SimpleName: taskKey(1575) to rowKey", "Update SimpleName: taskKey(1595) to rowKey", "Update SimpleName: taskKey(1619) to rowKey", "Update SimpleName: taskKey(1639) to rowKey", "Update SimpleName: taskKey(1688) to rowKey", "Update SimpleName: withHook(595) to withShardCount", "Insert SimpleName: DEFAULT_SHARD_COUNT(689) into MethodInvocation(690) at 2", "Insert SimpleName: Function(1641) into SimpleType: Function(1642) at 0", "Insert SimpleName: Boolean(1645) into SimpleType: Boolean(1646) at 0", "Move MarkerAnnotation(1650) into MethodDeclaration(1685) at 0", "Insert Modifier: public(1650) into MethodDeclaration(1685) at 1", "Insert SimpleType: Boolean(1652) into MethodDeclaration(1685) at 2", "Insert SimpleName: apply(1653) into MethodDeclaration(1685) at 3", "Insert SingleVariableDeclaration(1659) into MethodDeclaration(1685) at 4", "Insert Block(1684) into MethodDeclaration(1685) at 5", "Update SimpleName: withShardCount(592) to withConsistencyLevel", "Update SimpleName: DEFAULT_SHARD_COUNT(593) to consistencyLevel", "Insert SimpleName: Boolean(1651) into SimpleType: Boolean(1652) at 0", "Insert MarkerAnnotation(1655) into SingleVariableDeclaration(1659) at 0", "Insert SimpleType: MutationBatch(1657) into SingleVariableDeclaration(1659) at 1", "Insert SimpleName: mb(1658) into SingleVariableDeclaration(1659) at 2", "Move ExpressionStatement(1493) into Block(1684) at 0", "Insert ReturnStatement(1683) into Block(1684) at 1", "Update SimpleName: withConsistencyLevel(589) to withKeyspace", "Update SimpleName: consistencyLevel(590) to keyspace", "Insert SimpleName: Nullable(1654) into MarkerAnnotation(1655) at 0", "Insert SimpleName: MutationBatch(1656) into SimpleType: MutationBatch(1657) at 0", "Insert BooleanLiteral: true(1682) into ReturnStatement(1683) at 0", "Update SimpleName: withKeyspace(586) to withQueueName", "Update SimpleName: keyspace(587) to groupName", "Update SimpleName: println(1427) to LOG", "Insert SimpleName: info(1533) into MethodInvocation(1537) at 1", "Insert SimpleName: serializedTrigger(1671) into MethodInvocation(1672) at 3", "Insert SimpleName: serializedTask(1667) into MethodInvocation(1668) at 3", "Update SimpleName: getKey(1470) to rowKey", "Move SimpleName: getKey(1470) into MethodInvocation(1664) at 3", "Insert MethodInvocation(1144) into MethodInvocation(1146) at 0", "Move SimpleName: message(1042) into MethodInvocation(1144) at 0", "Insert SimpleName: getTrigger(1143) into MethodInvocation(1144) at 1", "Insert CastExpression(1224) into VariableDeclarationFragment(1225) at 1", "Insert SimpleType: String(1217) into CastExpression(1224) at 0", "Insert MethodInvocation(1223) into CastExpression(1224) at 1", "Insert SimpleName: String(1216) into SimpleType: String(1217) at 0", "Insert MethodInvocation(1220) into MethodInvocation(1223) at 0", "Update SimpleName: getStringValue(1115) to get", "Move SimpleName: getStringValue(1115) into MethodInvocation(1223) at 1", "Move SimpleName: COLUMN_TRIGGER(1116) into MethodInvocation(1223) at 2", "Insert SimpleName: message(1218) into MethodInvocation(1220) at 0", "Update SimpleName: columns(1114) to getParameters", "Move SimpleName: columns(1114) into MethodInvocation(1220) at 1", "Delete ThisExpression(596)", "Delete SimpleName: DEFAULT_BUCKET_COUNT(599)", "Delete SimpleName: DEFAULT_BUCKET_DURATION(600)", "Delete QualifiedName: TimeUnit.HOURS(601)", "Delete NullLiteral(1117)", "Delete MethodInvocation(1118)", "Delete QualifiedName: System.out(1426)", "Delete SimpleName: keyspace(1461)", "Delete SimpleName: prepareMutationBatch(1462)", "Delete SimpleName: task(1469)", "Delete MethodInvocation(1471)", "Delete Block(1494)", "Delete SimpleName: task(1502)", "Delete SimpleName: getKey(1503)", "Delete MethodInvocation(1504)", "Delete SimpleName: task(1524)", "Delete SimpleName: getKey(1525)", "Delete MethodInvocation(1526)", "Delete SimpleName: sendMessage(1534)", "Delete SimpleName: task(1535)", "Delete SimpleName: getKey(1536)", "Delete MethodInvocation(1537)", "Delete SimpleName: trigger(1538)", "Delete MethodInvocation(1539)", "Delete ExpressionStatement(1540)", "Delete Block(1541)", "Delete StringLiteral: \"Failed to send message for task \"(1548)", "Delete InfixExpression: +(1552)", "Delete SimpleName: e(1553)", "Delete ClassInstanceCreation(1554)", "Delete ThrowStatement(1555)", "Delete Block(1556)", "Delete CatchClause(1557)", "Delete TryStatement(1558)", "Delete SimpleName: message(1784)", "Delete SimpleName: setTriggerTime(1785)", "Delete SimpleName: trigger(1786)", "Delete SimpleName: getTriggerTime(1787)", "Delete MethodInvocation(1788)", "Delete MethodInvocation(1789)", "Delete ExpressionStatement(1790)"]}}, {"Task_cluster": {"actions": [{"root": "INS MarkerAnnotation to TypeDeclaration: interface at 1", "operations": ["INS MarkerAnnotation to TypeDeclaration: interface at 1", "INS SimpleName: Deprecated to MarkerAnnotation at 0"]}]}}, {"Task_diff": {"operations": ["Insert MarkerAnnotation(10) into TypeDeclaration: interface(25) at 1", "Insert SimpleName: Deprecated(9) into MarkerAnnotation(10) at 0"]}}, {"TaskScheduler_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: com.netflix.astyanax.recipes.uniqueness.NotUniqueException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS MarkerAnnotation to TypeDeclaration: interface at 1", "operations": ["INS MarkerAnnotation to TypeDeclaration: interface at 1", "INS SimpleName: Deprecated to MarkerAnnotation at 0"]}, {"root": "INS SimpleType: NotUniqueException to MethodDeclaration at 6", "operations": ["INS SimpleName: NotUniqueException to SimpleType: NotUniqueException at 0", "INS SimpleType: NotUniqueException to MethodDeclaration at 6"]}, {"root": "INS TagElement: @throws to Javadoc at 4", "operations": ["INS SimpleName: NotUniqueException to TagElement: @throws at 0", "INS TagElement: @throws to Javadoc at 4", "INS TextElement:   to TagElement: @throws at 1"]}]}}, {"TaskScheduler_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(163) at 2", "Insert QualifiedName: com.netflix.astyanax.recipes.uniqueness.NotUniqueException(4) into ImportDeclaration(5) at 0", "Insert MarkerAnnotation(10) into TypeDeclaration: interface(162) at 1", "Insert SimpleName: Deprecated(9) into MarkerAnnotation(10) at 0", "Insert SimpleType: NotUniqueException(72) into MethodDeclaration(73) at 6", "Insert TagElement: @throws(57) into Javadoc(58) at 4", "Insert SimpleName: NotUniqueException(71) into SimpleType: NotUniqueException(72) at 0", "Insert SimpleName: NotUniqueException(55) into TagElement: @throws(57) at 0", "Insert TextElement:  (56) into TagElement: @throws(57) at 1"]}}, {"ThriftColumnFamilyDefinitionImpl_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS NullLiteral to ReturnStatement at 0", "INS InfixExpression: == to IfStatement at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS ReturnStatement to IfStatement at 1", "INS SimpleName: getKey_alias to MethodInvocation at 1", "INS SimpleName: cfDef to MethodInvocation at 0", "INS NullLiteral to InfixExpression: == at 1"]}]}}, {"ThriftColumnFamilyDefinitionImpl_diff": {"operations": ["Insert IfStatement(614) into Block(622) at 0", "Insert InfixExpression: ==(611) into IfStatement(614) at 0", "Insert ReturnStatement(613) into IfStatement(614) at 1", "Insert MethodInvocation(609) into InfixExpression: ==(611) at 0", "Insert NullLiteral(610) into InfixExpression: ==(611) at 1", "Insert NullLiteral(612) into ReturnStatement(613) at 0", "Insert SimpleName: cfDef(607) into MethodInvocation(609) at 0", "Insert SimpleName: getKey_alias(608) into MethodInvocation(609) at 1"]}}, {"ThriftColumnImpl_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS QualifiedName: com.netflix.astyanax.serializers.ByteSerializer to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: com.netflix.astyanax.serializers.FloatSerializer to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 16", "operations": ["INS ImportDeclaration to CompilationUnit at 16", "INS QualifiedName: com.netflix.astyanax.serializers.ShortSerializer to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: getByteValue to MethodDeclaration at 3", "INS SimpleName: getValue to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS MethodInvocation to MethodInvocation at 0", "INS PrimitiveType: byte to MethodDeclaration at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: ByteSerializer to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: fromBytes to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: column to MethodInvocation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS ReturnStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: getShortValue to MethodDeclaration at 3", "INS Block to MethodDeclaration at 4", "INS PrimitiveType: short to MethodDeclaration at 2", "INS SimpleName: fromBytes to MethodInvocation at 1", "INS SimpleName: ShortSerializer to MethodInvocation at 0", "INS SimpleName: column to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS SimpleName: FloatSerializer to MethodInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: fromBytes to MethodInvocation at 1", "INS SimpleName: column to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS Block to MethodDeclaration at 4", "INS MethodInvocation to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: getFloatValue to MethodDeclaration at 3", "INS SimpleName: getValue to MethodInvocation at 1", "INS PrimitiveType: float to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 2"]}]}}, {"ThriftColumnImpl_diff": {"operations": ["Insert ImportDeclaration(31) into CompilationUnit(435) at 9", "Insert ImportDeclaration(39) into CompilationUnit(435) at 13", "Insert ImportDeclaration(45) into CompilationUnit(435) at 16", "Insert QualifiedName: com.netflix.astyanax.serializers.ByteSerializer(30) into ImportDeclaration(31) at 0", "Insert QualifiedName: com.netflix.astyanax.serializers.FloatSerializer(38) into ImportDeclaration(39) at 0", "Insert QualifiedName: com.netflix.astyanax.serializers.ShortSerializer(44) into ImportDeclaration(45) at 0", "Insert MethodDeclaration(172) into TypeDeclaration: class(434) at 11", "Insert MethodDeclaration(188) into TypeDeclaration: class(434) at 12", "Insert MethodDeclaration(358) into TypeDeclaration: class(434) at 22", "Insert MarkerAnnotation(158) into MethodDeclaration(172) at 0", "Insert Modifier: public(159) into MethodDeclaration(172) at 1", "Insert PrimitiveType: byte(160) into MethodDeclaration(172) at 2", "Insert SimpleName: getByteValue(161) into MethodDeclaration(172) at 3", "Insert Block(171) into MethodDeclaration(172) at 4", "Insert MarkerAnnotation(174) into MethodDeclaration(188) at 0", "Insert Modifier: public(175) into MethodDeclaration(188) at 1", "Insert PrimitiveType: short(176) into MethodDeclaration(188) at 2", "Insert SimpleName: getShortValue(177) into MethodDeclaration(188) at 3", "Insert Block(187) into MethodDeclaration(188) at 4", "Insert MarkerAnnotation(344) into MethodDeclaration(358) at 0", "Insert Modifier: public(345) into MethodDeclaration(358) at 1", "Insert PrimitiveType: float(346) into MethodDeclaration(358) at 2", "Insert SimpleName: getFloatValue(347) into MethodDeclaration(358) at 3", "Insert Block(357) into MethodDeclaration(358) at 4", "Insert SimpleName: Override(157) into MarkerAnnotation(158) at 0", "Insert ReturnStatement(170) into Block(171) at 0", "Insert SimpleName: Override(173) into MarkerAnnotation(174) at 0", "Insert ReturnStatement(186) into Block(187) at 0", "Insert SimpleName: Override(343) into MarkerAnnotation(344) at 0", "Insert ReturnStatement(356) into Block(357) at 0", "Insert MethodInvocation(169) into ReturnStatement(170) at 0", "Insert MethodInvocation(185) into ReturnStatement(186) at 0", "Insert MethodInvocation(355) into ReturnStatement(356) at 0", "Insert MethodInvocation(164) into MethodInvocation(169) at 0", "Insert SimpleName: fromBytes(165) into MethodInvocation(169) at 1", "Insert MethodInvocation(168) into MethodInvocation(169) at 2", "Insert MethodInvocation(180) into MethodInvocation(185) at 0", "Insert SimpleName: fromBytes(181) into MethodInvocation(185) at 1", "Insert MethodInvocation(184) into MethodInvocation(185) at 2", "Insert MethodInvocation(350) into MethodInvocation(355) at 0", "Insert SimpleName: fromBytes(351) into MethodInvocation(355) at 1", "Insert MethodInvocation(354) into MethodInvocation(355) at 2", "Insert SimpleName: ByteSerializer(162) into MethodInvocation(164) at 0", "Insert SimpleName: get(163) into MethodInvocation(164) at 1", "Insert SimpleName: column(166) into MethodInvocation(168) at 0", "Insert SimpleName: getValue(167) into MethodInvocation(168) at 1", "Insert SimpleName: ShortSerializer(178) into MethodInvocation(180) at 0", "Insert SimpleName: get(179) into MethodInvocation(180) at 1", "Insert SimpleName: column(182) into MethodInvocation(184) at 0", "Insert SimpleName: getValue(183) into MethodInvocation(184) at 1", "Insert SimpleName: FloatSerializer(348) into MethodInvocation(350) at 0", "Insert SimpleName: get(349) into MethodInvocation(350) at 1", "Insert SimpleName: column(352) into MethodInvocation(354) at 0", "Insert SimpleName: getValue(353) into MethodInvocation(354) at 1"]}}, {"ThriftCounterColumnImpl_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS Block to MethodDeclaration at 4", "INS SimpleName: name to FieldAccess at 1", "INS FieldAccess to InfixExpression: + at 1", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS StringLiteral: \"\\' has no Byte value. Call getLongValue().\" to InfixExpression: + at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS PrimitiveType: byte to MethodDeclaration at 2", "INS StringLiteral: \"CounterColumn \\'\" to InfixExpression: + at 0", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ThrowStatement to Block at 0", "INS ThisExpression to FieldAccess at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: getByteValue to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS ThisExpression to FieldAccess at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS SimpleName: getShortValue to MethodDeclaration at 3", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS Block to MethodDeclaration at 4", "INS StringLiteral: \"CounterColumn \\'\" to InfixExpression: + at 0", "INS SimpleName: name to FieldAccess at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS FieldAccess to InfixExpression: + at 1", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS StringLiteral: \"\\' has no Short value. Call getLongValue().\" to InfixExpression: + at 2", "INS ThrowStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS PrimitiveType: short to MethodDeclaration at 2", "INS ClassInstanceCreation to ThrowStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS PrimitiveType: float to MethodDeclaration at 2", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS StringLiteral: \"CounterColumn \\'\" to InfixExpression: + at 0", "INS SimpleName: getFloatValue to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS StringLiteral: \"\\' has no Float value. Call getLongValue().\" to InfixExpression: + at 2", "INS ClassInstanceCreation to ThrowStatement at 0", "INS ThrowStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 21"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0"]}, {"root": "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "operations": ["INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV FieldAccess to InfixExpression: + at 1"]}, {"root": "INS FieldAccess to InfixExpression: + at 1", "operations": ["INS FieldAccess to InfixExpression: + at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: name to FieldAccess at 1"]}, {"root": "UPDATE from \"\\' has no String value. Call getLongValue().\" to \"\\' has no Double value. Call getLongValue().\"", "operations": ["UPD StringLiteral: \"\\' has no String value. Call getLongValue().\" from \"\\' has no String value. Call getLongValue().\" to \"\\' has no Double value. Call getLongValue().\""]}]}}, {"ThriftCounterColumnImpl_diff": {"operations": ["Insert MethodDeclaration(148) into TypeDeclaration: class(408) at 10", "Insert MethodDeclaration(165) into TypeDeclaration: class(408) at 11", "Insert MethodDeclaration(340) into TypeDeclaration: class(408) at 21", "Insert MarkerAnnotation(133) into MethodDeclaration(148) at 0", "Insert Modifier: public(134) into MethodDeclaration(148) at 1", "Insert PrimitiveType: byte(135) into MethodDeclaration(148) at 2", "Insert SimpleName: getByteValue(136) into MethodDeclaration(148) at 3", "Insert Block(147) into MethodDeclaration(148) at 4", "Insert MarkerAnnotation(150) into MethodDeclaration(165) at 0", "Insert Modifier: public(151) into MethodDeclaration(165) at 1", "Insert PrimitiveType: short(152) into MethodDeclaration(165) at 2", "Insert SimpleName: getShortValue(153) into MethodDeclaration(165) at 3", "Insert Block(164) into MethodDeclaration(165) at 4", "Move MarkerAnnotation(291) into MethodDeclaration(340) at 0", "Insert Modifier: public(326) into MethodDeclaration(340) at 1", "Insert PrimitiveType: float(327) into MethodDeclaration(340) at 2", "Insert SimpleName: getFloatValue(328) into MethodDeclaration(340) at 3", "Insert Block(339) into MethodDeclaration(340) at 4", "Insert MarkerAnnotation(342) into MethodDeclaration(357) at 0", "Insert SimpleName: Override(132) into MarkerAnnotation(133) at 0", "Insert ThrowStatement(146) into Block(147) at 0", "Insert SimpleName: Override(149) into MarkerAnnotation(150) at 0", "Insert ThrowStatement(163) into Block(164) at 0", "Insert ThrowStatement(338) into Block(339) at 0", "Insert SimpleName: Override(341) into MarkerAnnotation(342) at 0", "Insert ClassInstanceCreation(145) into ThrowStatement(146) at 0", "Insert ClassInstanceCreation(162) into ThrowStatement(163) at 0", "Insert ClassInstanceCreation(337) into ThrowStatement(338) at 0", "Insert SimpleType: UnsupportedOperationException(138) into ClassInstanceCreation(145) at 0", "Insert InfixExpression: +(144) into ClassInstanceCreation(145) at 1", "Insert SimpleType: UnsupportedOperationException(155) into ClassInstanceCreation(162) at 0", "Insert InfixExpression: +(161) into ClassInstanceCreation(162) at 1", "Move SimpleType: UnsupportedOperationException(296) into ClassInstanceCreation(337) at 0", "Insert InfixExpression: +(336) into ClassInstanceCreation(337) at 1", "Insert SimpleType: UnsupportedOperationException(347) into ClassInstanceCreation(354) at 0", "Insert SimpleName: UnsupportedOperationException(137) into SimpleType: UnsupportedOperationException(138) at 0", "Insert StringLiteral: \"CounterColumn \\'\"(139) into InfixExpression: +(144) at 0", "Insert FieldAccess(142) into InfixExpression: +(144) at 1", "Insert StringLiteral: \"\\' has no Byte value. Call getLongValue().\"(143) into InfixExpression: +(144) at 2", "Insert SimpleName: UnsupportedOperationException(154) into SimpleType: UnsupportedOperationException(155) at 0", "Insert StringLiteral: \"CounterColumn \\'\"(156) into InfixExpression: +(161) at 0", "Insert FieldAccess(159) into InfixExpression: +(161) at 1", "Insert StringLiteral: \"\\' has no Short value. Call getLongValue().\"(160) into InfixExpression: +(161) at 2", "Insert StringLiteral: \"CounterColumn \\'\"(331) into InfixExpression: +(336) at 0", "Move FieldAccess(300) into InfixExpression: +(336) at 1", "Insert StringLiteral: \"\\' has no Float value. Call getLongValue().\"(335) into InfixExpression: +(336) at 2", "Insert SimpleName: UnsupportedOperationException(346) into SimpleType: UnsupportedOperationException(347) at 0", "Insert FieldAccess(351) into InfixExpression: +(353) at 1", "Update StringLiteral: \"\\' has no String value. Call getLongValue().\"(301) to \"\\' has no Double value. Call getLongValue().\"", "Insert ThisExpression(140) into FieldAccess(142) at 0", "Insert SimpleName: name(141) into FieldAccess(142) at 1", "Insert ThisExpression(157) into FieldAccess(159) at 0", "Insert SimpleName: name(158) into FieldAccess(159) at 1", "Insert ThisExpression(349) into FieldAccess(351) at 0", "Insert SimpleName: name(350) into FieldAccess(351) at 1"]}}, {"ThriftCounterSuperColumnImpl_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS SimpleName: name to FieldAccess at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS StringLiteral: \"CounterSuperColumn \\'\" to InfixExpression: + at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS FieldAccess to InfixExpression: + at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: getByteValue to MethodDeclaration at 3", "INS ClassInstanceCreation to ThrowStatement at 0", "INS StringLiteral: \"\\' has no value\" to InfixExpression: + at 2", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS ThisExpression to FieldAccess at 0", "INS PrimitiveType: byte to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleName: getShortValue to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS PrimitiveType: short to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS FieldAccess to InfixExpression: + at 1", "INS SimpleName: name to FieldAccess at 1", "INS StringLiteral: \"\\' has no value\" to InfixExpression: + at 2", "INS ThrowStatement to Block at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS StringLiteral: \"CounterSuperColumn \\'\" to InfixExpression: + at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS ClassInstanceCreation to ThrowStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS PrimitiveType: float to MethodDeclaration at 2", "INS ThrowStatement to Block at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS Block to MethodDeclaration at 4", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: getFloatValue to MethodDeclaration at 3", "INS StringLiteral: \"\\' has no value\" to InfixExpression: + at 2", "INS StringLiteral: \"CounterSuperColumn \\'\" to InfixExpression: + at 0", "INS FieldAccess to InfixExpression: + at 1", "INS SimpleName: name to FieldAccess at 1", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS Modifier: public to MethodDeclaration at 1"]}]}}, {"ThriftCounterSuperColumnImpl_diff": {"operations": ["Insert MethodDeclaration(146) into TypeDeclaration: class(422) at 10", "Insert MethodDeclaration(163) into TypeDeclaration: class(422) at 11", "Insert MethodDeclaration(363) into TypeDeclaration: class(422) at 22", "Insert MarkerAnnotation(131) into MethodDeclaration(146) at 0", "Insert Modifier: public(132) into MethodDeclaration(146) at 1", "Insert PrimitiveType: byte(133) into MethodDeclaration(146) at 2", "Insert SimpleName: getByteValue(134) into MethodDeclaration(146) at 3", "Insert Block(145) into MethodDeclaration(146) at 4", "Insert MarkerAnnotation(148) into MethodDeclaration(163) at 0", "Insert Modifier: public(149) into MethodDeclaration(163) at 1", "Insert PrimitiveType: short(150) into MethodDeclaration(163) at 2", "Insert SimpleName: getShortValue(151) into MethodDeclaration(163) at 3", "Insert Block(162) into MethodDeclaration(163) at 4", "Insert MarkerAnnotation(348) into MethodDeclaration(363) at 0", "Insert Modifier: public(349) into MethodDeclaration(363) at 1", "Insert PrimitiveType: float(350) into MethodDeclaration(363) at 2", "Insert SimpleName: getFloatValue(351) into MethodDeclaration(363) at 3", "Insert Block(362) into MethodDeclaration(363) at 4", "Insert SimpleName: Override(130) into MarkerAnnotation(131) at 0", "Insert ThrowStatement(144) into Block(145) at 0", "Insert SimpleName: Override(147) into MarkerAnnotation(148) at 0", "Insert ThrowStatement(161) into Block(162) at 0", "Insert SimpleName: Override(347) into MarkerAnnotation(348) at 0", "Insert ThrowStatement(361) into Block(362) at 0", "Insert ClassInstanceCreation(143) into ThrowStatement(144) at 0", "Insert ClassInstanceCreation(160) into ThrowStatement(161) at 0", "Insert ClassInstanceCreation(360) into ThrowStatement(361) at 0", "Insert SimpleType: UnsupportedOperationException(136) into ClassInstanceCreation(143) at 0", "Insert InfixExpression: +(142) into ClassInstanceCreation(143) at 1", "Insert SimpleType: UnsupportedOperationException(153) into ClassInstanceCreation(160) at 0", "Insert InfixExpression: +(159) into ClassInstanceCreation(160) at 1", "Insert SimpleType: UnsupportedOperationException(353) into ClassInstanceCreation(360) at 0", "Insert InfixExpression: +(359) into ClassInstanceCreation(360) at 1", "Insert SimpleName: UnsupportedOperationException(135) into SimpleType: UnsupportedOperationException(136) at 0", "Insert StringLiteral: \"CounterSuperColumn \\'\"(137) into InfixExpression: +(142) at 0", "Insert FieldAccess(140) into InfixExpression: +(142) at 1", "Insert StringLiteral: \"\\' has no value\"(141) into InfixExpression: +(142) at 2", "Insert SimpleName: UnsupportedOperationException(152) into SimpleType: UnsupportedOperationException(153) at 0", "Insert StringLiteral: \"CounterSuperColumn \\'\"(154) into InfixExpression: +(159) at 0", "Insert FieldAccess(157) into InfixExpression: +(159) at 1", "Insert StringLiteral: \"\\' has no value\"(158) into InfixExpression: +(159) at 2", "Insert SimpleName: UnsupportedOperationException(352) into SimpleType: UnsupportedOperationException(353) at 0", "Insert StringLiteral: \"CounterSuperColumn \\'\"(354) into InfixExpression: +(359) at 0", "Insert FieldAccess(357) into InfixExpression: +(359) at 1", "Insert StringLiteral: \"\\' has no value\"(358) into InfixExpression: +(359) at 2", "Insert ThisExpression(138) into FieldAccess(140) at 0", "Insert SimpleName: name(139) into FieldAccess(140) at 1", "Insert ThisExpression(155) into FieldAccess(157) at 0", "Insert SimpleName: name(156) into FieldAccess(157) at 1", "Insert ThisExpression(355) into FieldAccess(357) at 0", "Insert SimpleName: name(356) into FieldAccess(357) at 1"]}}, {"ThriftSuperColumnImpl_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS SimpleName: name to FieldAccess at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS StringLiteral: \"SuperColumn \\'\" to InfixExpression: + at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS FieldAccess to InfixExpression: + at 1", "INS ThrowStatement to Block at 0", "INS SimpleName: getByteValue to MethodDeclaration at 3", "INS ClassInstanceCreation to ThrowStatement at 0", "INS StringLiteral: \"\\' has no value\" to InfixExpression: + at 2", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS ThisExpression to FieldAccess at 0", "INS PrimitiveType: byte to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleName: getShortValue to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS PrimitiveType: short to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS FieldAccess to InfixExpression: + at 1", "INS SimpleName: name to FieldAccess at 1", "INS StringLiteral: \"\\' has no value\" to InfixExpression: + at 2", "INS ThrowStatement to Block at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS StringLiteral: \"SuperColumn \\'\" to InfixExpression: + at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS ClassInstanceCreation to ThrowStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS PrimitiveType: float to MethodDeclaration at 2", "INS ThrowStatement to Block at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: UnsupportedOperationException to SimpleType: UnsupportedOperationException at 0", "INS Block to MethodDeclaration at 4", "INS SimpleType: UnsupportedOperationException to ClassInstanceCreation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: getFloatValue to MethodDeclaration at 3", "INS StringLiteral: \"\\' has no value\" to InfixExpression: + at 2", "INS StringLiteral: \"SuperColumn \\'\" to InfixExpression: + at 0", "INS FieldAccess to InfixExpression: + at 1", "INS SimpleName: name to FieldAccess at 1", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS Modifier: public to MethodDeclaration at 1"]}]}}, {"ThriftSuperColumnImpl_diff": {"operations": ["Insert MethodDeclaration(188) into TypeDeclaration: class(422) at 12", "Insert MethodDeclaration(205) into TypeDeclaration: class(422) at 13", "Insert MethodDeclaration(363) into TypeDeclaration: class(422) at 22", "Insert MarkerAnnotation(173) into MethodDeclaration(188) at 0", "Insert Modifier: public(174) into MethodDeclaration(188) at 1", "Insert PrimitiveType: byte(175) into MethodDeclaration(188) at 2", "Insert SimpleName: getByteValue(176) into MethodDeclaration(188) at 3", "Insert Block(187) into MethodDeclaration(188) at 4", "Insert MarkerAnnotation(190) into MethodDeclaration(205) at 0", "Insert Modifier: public(191) into MethodDeclaration(205) at 1", "Insert PrimitiveType: short(192) into MethodDeclaration(205) at 2", "Insert SimpleName: getShortValue(193) into MethodDeclaration(205) at 3", "Insert Block(204) into MethodDeclaration(205) at 4", "Insert MarkerAnnotation(348) into MethodDeclaration(363) at 0", "Insert Modifier: public(349) into MethodDeclaration(363) at 1", "Insert PrimitiveType: float(350) into MethodDeclaration(363) at 2", "Insert SimpleName: getFloatValue(351) into MethodDeclaration(363) at 3", "Insert Block(362) into MethodDeclaration(363) at 4", "Insert SimpleName: Override(172) into MarkerAnnotation(173) at 0", "Insert ThrowStatement(186) into Block(187) at 0", "Insert SimpleName: Override(189) into MarkerAnnotation(190) at 0", "Insert ThrowStatement(203) into Block(204) at 0", "Insert SimpleName: Override(347) into MarkerAnnotation(348) at 0", "Insert ThrowStatement(361) into Block(362) at 0", "Insert ClassInstanceCreation(185) into ThrowStatement(186) at 0", "Insert ClassInstanceCreation(202) into ThrowStatement(203) at 0", "Insert ClassInstanceCreation(360) into ThrowStatement(361) at 0", "Insert SimpleType: UnsupportedOperationException(178) into ClassInstanceCreation(185) at 0", "Insert InfixExpression: +(184) into ClassInstanceCreation(185) at 1", "Insert SimpleType: UnsupportedOperationException(195) into ClassInstanceCreation(202) at 0", "Insert InfixExpression: +(201) into ClassInstanceCreation(202) at 1", "Insert SimpleType: UnsupportedOperationException(353) into ClassInstanceCreation(360) at 0", "Insert InfixExpression: +(359) into ClassInstanceCreation(360) at 1", "Insert SimpleName: UnsupportedOperationException(177) into SimpleType: UnsupportedOperationException(178) at 0", "Insert StringLiteral: \"SuperColumn \\'\"(179) into InfixExpression: +(184) at 0", "Insert FieldAccess(182) into InfixExpression: +(184) at 1", "Insert StringLiteral: \"\\' has no value\"(183) into InfixExpression: +(184) at 2", "Insert SimpleName: UnsupportedOperationException(194) into SimpleType: UnsupportedOperationException(195) at 0", "Insert StringLiteral: \"SuperColumn \\'\"(196) into InfixExpression: +(201) at 0", "Insert FieldAccess(199) into InfixExpression: +(201) at 1", "Insert StringLiteral: \"\\' has no value\"(200) into InfixExpression: +(201) at 2", "Insert SimpleName: UnsupportedOperationException(352) into SimpleType: UnsupportedOperationException(353) at 0", "Insert StringLiteral: \"SuperColumn \\'\"(354) into InfixExpression: +(359) at 0", "Insert FieldAccess(357) into InfixExpression: +(359) at 1", "Insert StringLiteral: \"\\' has no value\"(358) into InfixExpression: +(359) at 2", "Insert ThisExpression(180) into FieldAccess(182) at 0", "Insert SimpleName: name(181) into FieldAccess(182) at 1", "Insert ThisExpression(197) into FieldAccess(199) at 0", "Insert SimpleName: name(198) into FieldAccess(199) at 1", "Insert ThisExpression(355) into FieldAccess(357) at 0", "Insert SimpleName: name(356) into FieldAccess(357) at 1"]}}, {"RunOnceTrigger_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL PackageDeclaration", "DEL QualifiedName: com.netflix.astyanax.recipes.scheduler.triggers"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.netflix.astyanax.recipes.scheduler.Trigger", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL TypeDeclaration: class", "DEL SimpleName: Trigger", "DEL Block", "DEL NullLiteral", "DEL Modifier: public", "DEL Modifier: public", "DEL SimpleName: Trigger", "DEL MethodDeclaration", "DEL SimpleType: Trigger", "DEL NumberLiteral: 0", "DEL SimpleName: RunOnceTrigger", "DEL Block", "DEL MarkerAnnotation", "DEL PrimitiveType: long", "DEL SimpleType: Trigger", "DEL Modifier: public", "DEL SimpleName: getTriggerTime", "DEL SimpleName: Override", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL SimpleName: Override", "DEL MarkerAnnotation", "DEL SimpleName: nextTrigger"]}]}}, {"RunOnceTrigger_diff": {"operations": ["Delete QualifiedName: com.netflix.astyanax.recipes.scheduler.triggers(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: com.netflix.astyanax.recipes.scheduler.Trigger(2)", "Delete ImportDeclaration(3)", "Delete Modifier: public(4)", "Delete SimpleName: RunOnceTrigger(5)", "Delete SimpleName: Trigger(6)", "Delete SimpleType: Trigger(7)", "Delete SimpleName: Override(8)", "Delete MarkerAnnotation(9)", "Delete Modifier: public(10)", "Delete SimpleName: Trigger(11)", "Delete SimpleType: Trigger(12)", "Delete SimpleName: nextTrigger(13)", "Delete NullLiteral(14)", "Delete ReturnStatement(15)", "Delete Block(16)", "Delete MethodDeclaration(17)", "Delete SimpleName: Override(18)", "Delete MarkerAnnotation(19)", "Delete Modifier: public(20)", "Delete PrimitiveType: long(21)", "Delete SimpleName: getTriggerTime(22)", "Delete NumberLiteral: 0(23)", "Delete ReturnStatement(24)", "Delete Block(25)", "Delete MethodDeclaration(26)", "Delete TypeDeclaration: class(27)"]}}], "commit_stats": [{"total_files": 54, "deleted_files": 3, "testing": "True", "maintenance": "False", "build": "False"}]}