{"application": "Netflix-hollow", "csha": "c7167d56ff29848bc195395579dcba230bfbd46b", "files": [{"HollowSetSampler_cluster": {"actions": [{"root": "UPDATE from recordContains to recordGet", "operations": ["UPD SimpleName: recordContains from recordContains to recordGet"]}, {"root": "UPDATE from containsSamples to getSamples", "operations": ["UPD SimpleName: containsSamples from containsSamples to getSamples", "UPD SimpleName: containsSamples from containsSamples to getSamples", "UPD SimpleName: containsSamples from containsSamples to getSamples", "UPD SimpleName: containsSamples from containsSamples to getSamples", "UPD SimpleName: containsSamples from containsSamples to getSamples"]}, {"root": "INS InfixExpression: || to ReturnStatement at 0", "operations": ["INS InfixExpression: || to ReturnStatement at 0"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: > to InfixExpression: || at 1", "MOV InfixExpression: || to InfixExpression: || at 0"]}, {"root": "UPDATE from \".contains()\" to \".get()\"", "operations": ["UPD StringLiteral: \".contains()\" from \".contains()\" to \".get()\""]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL SimpleName: bucketRetrievalSamples", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL PrimitiveType: long"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL ExpressionStatement", "DEL SimpleName: bucketRetrievalSamples", "DEL MethodDeclaration", "DEL IfStatement", "DEL SimpleName: shouldRecord", "DEL PrimitiveType: void", "DEL Modifier: public", "DEL MethodInvocation", "DEL PostfixExpression: ++", "DEL SimpleName: director", "DEL SimpleName: recordBucketRetrieval"]}, {"root": "DEL InfixExpression: ||", "operations": ["DEL InfixExpression: ||", "DEL InfixExpression: >", "DEL SimpleName: bucketRetrievalSamples", "DEL NumberLiteral: 0", "DEL InfixExpression: ||"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: SampleResult", "DEL SimpleName: bucketRetrievalSamples", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: typeName", "DEL SimpleName: add", "DEL SimpleName: results", "DEL ExpressionStatement", "DEL SimpleType: SampleResult", "DEL StringLiteral: \".bucketValue()\""]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: bucketRetrievalSamples", "DEL NumberLiteral: 0", "DEL Assignment: ="]}]}}, {"HollowSetSampler_diff": {"operations": ["Update SimpleName: recordContains(155) to recordGet", "Update SimpleName: containsSamples(47) to getSamples", "Insert InfixExpression: ||(199) into ReturnStatement(200) at 0", "Move InfixExpression: ||(212) into InfixExpression: ||(199) at 0", "Move InfixExpression: >(215) into InfixExpression: ||(199) at 1", "Update SimpleName: containsSamples(305) to getSamples", "Update SimpleName: containsSamples(159) to getSamples", "Update SimpleName: containsSamples(266) to getSamples", "Update SimpleName: containsSamples(209) to getSamples", "Update StringLiteral: \".contains()\"(264) to \".get()\"", "Delete Modifier: private(55)", "Delete PrimitiveType: long(56)", "Delete SimpleName: bucketRetrievalSamples(57)", "Delete VariableDeclarationFragment(58)", "Delete FieldDeclaration(59)", "Delete Modifier: public(189)", "Delete PrimitiveType: void(190)", "Delete SimpleName: recordBucketRetrieval(191)", "Delete SimpleName: director(192)", "Delete SimpleName: shouldRecord(193)", "Delete MethodInvocation(194)", "Delete SimpleName: bucketRetrievalSamples(195)", "Delete PostfixExpression: ++(196)", "Delete ExpressionStatement(197)", "Delete IfStatement(198)", "Delete Block(199)", "Delete MethodDeclaration(200)", "Delete InfixExpression: ||(216)", "Delete SimpleName: bucketRetrievalSamples(217)", "Delete NumberLiteral: 0(218)", "Delete InfixExpression: >(219)", "Delete InfixExpression: ||(220)", "Delete SimpleName: results(281)", "Delete SimpleName: add(282)", "Delete SimpleName: SampleResult(283)", "Delete SimpleType: SampleResult(284)", "Delete SimpleName: typeName(285)", "Delete StringLiteral: \".bucketValue()\"(286)", "Delete InfixExpression: +(287)", "Delete SimpleName: bucketRetrievalSamples(288)", "Delete ClassInstanceCreation(289)", "Delete MethodInvocation(290)", "Delete ExpressionStatement(291)", "Delete SimpleName: bucketRetrievalSamples(313)", "Delete NumberLiteral: 0(314)", "Delete Assignment: =(315)", "Delete ExpressionStatement(316)"]}}, {"HollowHistoricalSetDataAccess_cluster": {"actions": [{"root": "UPDATE from recordContains to recordGet", "operations": ["UPD SimpleName: recordContains from recordContains to recordGet", "UPD SimpleName: recordContains from recordContains to recordGet", "UPD SimpleName: recordContains from recordContains to recordGet"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: recordBucketRetrieval", "DEL SimpleName: sampler", "DEL ExpressionStatement", "DEL MethodInvocation"]}]}}, {"HollowHistoricalSetDataAccess_diff": {"operations": ["Update SimpleName: recordContains(131) to recordGet", "Update SimpleName: recordContains(184) to recordGet", "Update SimpleName: recordContains(330) to recordGet", "Delete SimpleName: sampler(382)", "Delete MethodInvocation(383)", "Delete SimpleName: recordBucketRetrieval(384)", "Delete MethodInvocation(385)", "Delete ExpressionStatement(386)"]}}, {"HollowSetTypeReadState_cluster": {"actions": [{"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: recordSize to MethodInvocation at 1", "INS SimpleName: sampler to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: sampler to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: recordGet to MethodInvocation at 1", "INS ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: recordGet to MethodInvocation at 1", "INS SimpleName: sampler to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: recordGet to MethodInvocation at 1", "INS SimpleName: sampler to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: sampler to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: recordIterator to MethodInvocation at 1"]}]}}, {"HollowSetTypeReadState_diff": {"operations": ["Insert ExpressionStatement(502) into Block(514) at 0", "Insert ExpressionStatement(552) into Block(566) at 0", "Insert ExpressionStatement(583) into Block(620) at 0", "Insert ExpressionStatement(662) into Block(678) at 0", "Insert ExpressionStatement(692) into Block(707) at 0", "Insert MethodInvocation(501) into ExpressionStatement(502) at 0", "Insert MethodInvocation(551) into ExpressionStatement(552) at 0", "Insert MethodInvocation(582) into ExpressionStatement(583) at 0", "Insert MethodInvocation(661) into ExpressionStatement(662) at 0", "Insert MethodInvocation(691) into ExpressionStatement(692) at 0", "Insert SimpleName: sampler(499) into MethodInvocation(501) at 0", "Insert SimpleName: recordSize(500) into MethodInvocation(501) at 1", "Insert SimpleName: sampler(549) into MethodInvocation(551) at 0", "Insert SimpleName: recordGet(550) into MethodInvocation(551) at 1", "Insert SimpleName: sampler(580) into MethodInvocation(582) at 0", "Insert SimpleName: recordGet(581) into MethodInvocation(582) at 1", "Insert SimpleName: sampler(659) into MethodInvocation(661) at 0", "Insert SimpleName: recordGet(660) into MethodInvocation(661) at 1", "Insert SimpleName: sampler(689) into MethodInvocation(691) at 0", "Insert SimpleName: recordIterator(690) into MethodInvocation(691) at 1"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}