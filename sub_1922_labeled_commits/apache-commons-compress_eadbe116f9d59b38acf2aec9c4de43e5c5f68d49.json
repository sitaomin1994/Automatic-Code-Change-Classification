{"application": "apache-commons-compress", "csha": "eadbe116f9d59b38acf2aec9c4de43e5c5f68d49", "files": [{"JarArchiveInputStream_cluster": {"actions": [{"root": "INS ReturnStatement to Block at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: length to MethodInvocation at 3", "INS SimpleName: signature to MethodInvocation at 2", "INS SimpleName: ZipArchiveInputStream to MethodInvocation at 0", "INS SimpleName: matches to MethodInvocation at 1"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL NumberLiteral: 8", "DEL BooleanLiteral: false", "DEL InfixExpression: <", "DEL SimpleName: length", "DEL Block", "DEL ReturnStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL BooleanLiteral: false", "DEL IfStatement", "DEL ArrayAccess", "DEL SimpleName: signature", "DEL NumberLiteral: 0x50", "DEL ReturnStatement", "DEL Block", "DEL InfixExpression: !=", "DEL NumberLiteral: 0"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: signature", "DEL ArrayAccess", "DEL InfixExpression: !=", "DEL NumberLiteral: 0x4b", "DEL Block", "DEL ReturnStatement", "DEL IfStatement", "DEL NumberLiteral: 1", "DEL BooleanLiteral: false"]}, {"root": "DEL IfStatement", "operations": ["DEL ArrayAccess", "DEL NumberLiteral: 0x03", "DEL Block", "DEL SimpleName: signature", "DEL NumberLiteral: 2", "DEL BooleanLiteral: false", "DEL ReturnStatement", "DEL IfStatement", "DEL InfixExpression: !="]}, {"root": "DEL IfStatement", "operations": ["DEL NumberLiteral: 3", "DEL InfixExpression: !=", "DEL ArrayAccess", "DEL ReturnStatement", "DEL SimpleName: signature", "DEL IfStatement", "DEL BooleanLiteral: false", "DEL NumberLiteral: 0x04", "DEL Block"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: signature", "DEL IfStatement", "DEL BooleanLiteral: false", "DEL InfixExpression: !=", "DEL ReturnStatement", "DEL Block", "DEL NumberLiteral: 0x14", "DEL ArrayAccess", "DEL NumberLiteral: 4"]}, {"root": "DEL IfStatement", "operations": ["DEL ArrayAccess", "DEL InfixExpression: !=", "DEL IfStatement", "DEL Block", "DEL ReturnStatement", "DEL SimpleName: signature", "DEL NumberLiteral: 5", "DEL NumberLiteral: 0x00", "DEL BooleanLiteral: false"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: signature", "DEL ArrayAccess", "DEL NumberLiteral: 6", "DEL Block", "DEL NumberLiteral: 0x08", "DEL IfStatement", "DEL ReturnStatement", "DEL InfixExpression: !=", "DEL BooleanLiteral: false"]}, {"root": "DEL IfStatement", "operations": ["DEL NumberLiteral: 0x00", "DEL BooleanLiteral: false", "DEL InfixExpression: !=", "DEL ArrayAccess", "DEL NumberLiteral: 7", "DEL IfStatement", "DEL SimpleName: signature", "DEL Block", "DEL ReturnStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL BooleanLiteral: true", "DEL ReturnStatement"]}]}}, {"JarArchiveInputStream_diff": {"operations": ["Insert ReturnStatement(80) into Block(81) at 0", "Insert MethodInvocation(79) into ReturnStatement(80) at 0", "Insert SimpleName: ZipArchiveInputStream(75) into MethodInvocation(79) at 0", "Insert SimpleName: matches(76) into MethodInvocation(79) at 1", "Insert SimpleName: signature(77) into MethodInvocation(79) at 2", "Insert SimpleName: length(78) into MethodInvocation(79) at 3", "Delete SimpleName: length(75)", "Delete NumberLiteral: 8(76)", "Delete InfixExpression: <(77)", "Delete BooleanLiteral: false(78)", "Delete ReturnStatement(79)", "Delete Block(80)", "Delete IfStatement(81)", "Delete SimpleName: signature(82)", "Delete NumberLiteral: 0(83)", "Delete ArrayAccess(84)", "Delete NumberLiteral: 0x50(85)", "Delete InfixExpression: !=(86)", "Delete BooleanLiteral: false(87)", "Delete ReturnStatement(88)", "Delete Block(89)", "Delete IfStatement(90)", "Delete SimpleName: signature(91)", "Delete NumberLiteral: 1(92)", "Delete ArrayAccess(93)", "Delete NumberLiteral: 0x4b(94)", "Delete InfixExpression: !=(95)", "Delete BooleanLiteral: false(96)", "Delete ReturnStatement(97)", "Delete Block(98)", "Delete IfStatement(99)", "Delete SimpleName: signature(100)", "Delete NumberLiteral: 2(101)", "Delete ArrayAccess(102)", "Delete NumberLiteral: 0x03(103)", "Delete InfixExpression: !=(104)", "Delete BooleanLiteral: false(105)", "Delete ReturnStatement(106)", "Delete Block(107)", "Delete IfStatement(108)", "Delete SimpleName: signature(109)", "Delete NumberLiteral: 3(110)", "Delete ArrayAccess(111)", "Delete NumberLiteral: 0x04(112)", "Delete InfixExpression: !=(113)", "Delete BooleanLiteral: false(114)", "Delete ReturnStatement(115)", "Delete Block(116)", "Delete IfStatement(117)", "Delete SimpleName: signature(118)", "Delete NumberLiteral: 4(119)", "Delete ArrayAccess(120)", "Delete NumberLiteral: 0x14(121)", "Delete InfixExpression: !=(122)", "Delete BooleanLiteral: false(123)", "Delete ReturnStatement(124)", "Delete Block(125)", "Delete IfStatement(126)", "Delete SimpleName: signature(127)", "Delete NumberLiteral: 5(128)", "Delete ArrayAccess(129)", "Delete NumberLiteral: 0x00(130)", "Delete InfixExpression: !=(131)", "Delete BooleanLiteral: false(132)", "Delete ReturnStatement(133)", "Delete Block(134)", "Delete IfStatement(135)", "Delete SimpleName: signature(136)", "Delete NumberLiteral: 6(137)", "Delete ArrayAccess(138)", "Delete NumberLiteral: 0x08(139)", "Delete InfixExpression: !=(140)", "Delete BooleanLiteral: false(141)", "Delete ReturnStatement(142)", "Delete Block(143)", "Delete IfStatement(144)", "Delete SimpleName: signature(145)", "Delete NumberLiteral: 7(146)", "Delete ArrayAccess(147)", "Delete NumberLiteral: 0x00(148)", "Delete InfixExpression: !=(149)", "Delete BooleanLiteral: false(150)", "Delete ReturnStatement(151)", "Delete Block(152)", "Delete IfStatement(153)", "Delete BooleanLiteral: true(154)", "Delete ReturnStatement(155)"]}}, {"ZipArchiveInputStream_cluster": {"actions": [{"root": "INS ForStatement to Block at 1", "operations": ["INS SimpleName: i to PostfixExpression: ++ at 0", "INS Block to ForStatement at 3", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS PostfixExpression: ++ to ForStatement at 2", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: i to InfixExpression: < at 0", "INS QualifiedName: ZipArchiveOutputStream.LFH_SIG.length to InfixExpression: < at 1", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS InfixExpression: < to ForStatement at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS ForStatement to Block at 1"]}, {"root": "INS QualifiedName: ZipArchiveOutputStream.LFH_SIG.length to InfixExpression: < at 1", "operations": ["INS QualifiedName: ZipArchiveOutputStream.LFH_SIG.length to InfixExpression: < at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS ArrayAccess to InfixExpression: != at 1", "operations": ["INS SimpleName: i to ArrayAccess at 1", "INS ArrayAccess to InfixExpression: != at 1", "INS QualifiedName: ZipArchiveOutputStream.LFH_SIG to ArrayAccess at 0"]}, {"root": "INS SimpleName: i to ArrayAccess at 1", "operations": ["INS SimpleName: i to ArrayAccess at 1"]}, {"root": "DEL NumberLiteral: 8", "operations": ["DEL NumberLiteral: 8"]}, {"root": "DEL NumberLiteral: 3", "operations": ["DEL NumberLiteral: 3"]}, {"root": "DEL NumberLiteral: 0x04", "operations": ["DEL NumberLiteral: 0x04"]}, {"root": "DEL Block", "operations": ["DEL BooleanLiteral: false", "DEL ReturnStatement", "DEL Block"]}, {"root": "DEL IfStatement", "operations": ["DEL NumberLiteral: 0x50", "DEL InfixExpression: !=", "DEL IfStatement", "DEL BooleanLiteral: false", "DEL SimpleName: signature", "DEL ArrayAccess", "DEL NumberLiteral: 0", "DEL Block", "DEL ReturnStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL NumberLiteral: 0x4b", "DEL InfixExpression: !=", "DEL IfStatement", "DEL ArrayAccess", "DEL NumberLiteral: 1", "DEL SimpleName: signature"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: signature", "DEL Block", "DEL ArrayAccess", "DEL NumberLiteral: 2", "DEL BooleanLiteral: false", "DEL IfStatement", "DEL InfixExpression: !=", "DEL ReturnStatement", "DEL NumberLiteral: 0x03"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: signature", "DEL BooleanLiteral: false", "DEL Block", "DEL NumberLiteral: 0x14", "DEL ReturnStatement", "DEL InfixExpression: !=", "DEL NumberLiteral: 4", "DEL ArrayAccess", "DEL IfStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: signature", "DEL IfStatement", "DEL BooleanLiteral: false", "DEL Block", "DEL NumberLiteral: 0x00", "DEL NumberLiteral: 5", "DEL InfixExpression: !=", "DEL ReturnStatement", "DEL ArrayAccess"]}, {"root": "DEL IfStatement", "operations": ["DEL Block", "DEL ReturnStatement", "DEL BooleanLiteral: false", "DEL NumberLiteral: 6", "DEL SimpleName: signature", "DEL ArrayAccess", "DEL InfixExpression: !=", "DEL NumberLiteral: 0x00", "DEL IfStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL NumberLiteral: 0x00", "DEL SimpleName: signature", "DEL ReturnStatement", "DEL ArrayAccess", "DEL InfixExpression: !=", "DEL NumberLiteral: 7", "DEL Block", "DEL IfStatement", "DEL BooleanLiteral: false"]}]}}, {"ZipArchiveInputStream_diff": {"operations": ["Insert ForStatement(154) into Block(157) at 1", "Insert VariableDeclarationExpression(136) into ForStatement(154) at 0", "Insert InfixExpression: <(139) into ForStatement(154) at 1", "Insert PostfixExpression: ++(141) into ForStatement(154) at 2", "Insert Block(153) into ForStatement(154) at 3", "Insert QualifiedName: ZipArchiveOutputStream.LFH_SIG.length(126) into InfixExpression: <(127) at 1", "Insert PrimitiveType: int(132) into VariableDeclarationExpression(136) at 0", "Insert VariableDeclarationFragment(135) into VariableDeclarationExpression(136) at 1", "Insert SimpleName: i(137) into InfixExpression: <(139) at 0", "Insert QualifiedName: ZipArchiveOutputStream.LFH_SIG.length(138) into InfixExpression: <(139) at 1", "Insert SimpleName: i(140) into PostfixExpression: ++(141) at 0", "Move IfStatement(167) into Block(153) at 0", "Insert SimpleName: i(133) into VariableDeclarationFragment(135) at 0", "Insert NumberLiteral: 0(134) into VariableDeclarationFragment(135) at 1", "Move Block(148) into IfStatement(152) at 1", "Insert ArrayAccess(147) into InfixExpression: !=(148) at 1", "Insert SimpleName: i(143) into ArrayAccess(144) at 1", "Insert QualifiedName: ZipArchiveOutputStream.LFH_SIG(145) into ArrayAccess(147) at 0", "Insert SimpleName: i(146) into ArrayAccess(147) at 1", "Delete NumberLiteral: 8(126)", "Delete NumberLiteral: 3(160)", "Delete NumberLiteral: 0x04(162)", "Delete BooleanLiteral: false(164)", "Delete ReturnStatement(165)", "Delete Block(166)", "Delete SimpleName: signature(132)", "Delete NumberLiteral: 0(133)", "Delete ArrayAccess(134)", "Delete NumberLiteral: 0x50(135)", "Delete InfixExpression: !=(136)", "Delete BooleanLiteral: false(137)", "Delete ReturnStatement(138)", "Delete Block(139)", "Delete IfStatement(140)", "Delete SimpleName: signature(141)", "Delete NumberLiteral: 1(142)", "Delete ArrayAccess(143)", "Delete NumberLiteral: 0x4b(144)", "Delete InfixExpression: !=(145)", "Delete IfStatement(149)", "Delete SimpleName: signature(150)", "Delete NumberLiteral: 2(151)", "Delete ArrayAccess(152)", "Delete NumberLiteral: 0x03(153)", "Delete InfixExpression: !=(154)", "Delete BooleanLiteral: false(155)", "Delete ReturnStatement(156)", "Delete Block(157)", "Delete IfStatement(158)", "Delete SimpleName: signature(168)", "Delete NumberLiteral: 4(169)", "Delete ArrayAccess(170)", "Delete NumberLiteral: 0x14(171)", "Delete InfixExpression: !=(172)", "Delete BooleanLiteral: false(173)", "Delete ReturnStatement(174)", "Delete Block(175)", "Delete IfStatement(176)", "Delete SimpleName: signature(177)", "Delete NumberLiteral: 5(178)", "Delete ArrayAccess(179)", "Delete NumberLiteral: 0x00(180)", "Delete InfixExpression: !=(181)", "Delete BooleanLiteral: false(182)", "Delete ReturnStatement(183)", "Delete Block(184)", "Delete IfStatement(185)", "Delete SimpleName: signature(186)", "Delete NumberLiteral: 6(187)", "Delete ArrayAccess(188)", "Delete NumberLiteral: 0x00(189)", "Delete InfixExpression: !=(190)", "Delete BooleanLiteral: false(191)", "Delete ReturnStatement(192)", "Delete Block(193)", "Delete IfStatement(194)", "Delete SimpleName: signature(195)", "Delete NumberLiteral: 7(196)", "Delete ArrayAccess(197)", "Delete NumberLiteral: 0x00(198)", "Delete InfixExpression: !=(199)", "Delete BooleanLiteral: false(200)", "Delete ReturnStatement(201)", "Delete Block(202)", "Delete IfStatement(203)"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}