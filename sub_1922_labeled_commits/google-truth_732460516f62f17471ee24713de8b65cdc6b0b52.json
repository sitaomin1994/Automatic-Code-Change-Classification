{"application": "google-truth", "csha": "732460516f62f17471ee24713de8b65cdc6b0b52", "files": [{"IterableSubject_cluster": {"actions": [{"root": "UPDATE from first to firstExpected", "operations": ["UPD SimpleName: first from first to firstExpected", "UPD SimpleName: first from first to firstExpected"]}, {"root": "UPDATE from second to secondExpected", "operations": ["UPD SimpleName: second from second to secondExpected", "UPD SimpleName: second from second to secondExpected"]}, {"root": "UPDATE from rest to restOfExpected", "operations": ["UPD SimpleName: rest from rest to restOfExpected", "UPD SimpleName: rest from rest to restOfExpected"]}, {"root": "UPDATE from first to firstExcluded", "operations": ["UPD SimpleName: first from first to firstExcluded", "UPD SimpleName: first from first to firstExcluded"]}, {"root": "UPDATE from second to secondExcluded", "operations": ["UPD SimpleName: second from second to secondExcluded", "UPD SimpleName: second from second to secondExcluded"]}, {"root": "UPDATE from rest to restOfExcluded", "operations": ["UPD SimpleName: rest from rest to restOfExcluded", "UPD SimpleName: rest from rest to restOfExcluded"]}, {"root": "UPDATE from Attests that the subject contains at least all of the provided objects or fails, potentially to Attests that the actual iterable contains at least all of the expected elements or fails. If an", "operations": ["UPD TextElement: Attests that the subject contains at least all of the provided objects or fails, potentially from Attests that the subject contains at least all of the provided objects or fails, potentially to Attests that the actual iterable contains at least all of the expected elements or fails. If an", "UPD TextElement: Attests that the subject contains at least all of the provided objects or fails, potentially from Attests that the subject contains at least all of the provided objects or fails, potentially to Attests that the actual iterable contains at least all of the expected elements or fails. If an"]}, {"root": "UPDATE from permitting duplicates in both the subject and the parameters (if the subject can even have to element appears more than once in the expected elements to this call then it must appear at", "operations": ["UPD TextElement: permitting duplicates in both the subject and the parameters (if the subject can even have from permitting duplicates in both the subject and the parameters (if the subject can even have to element appears more than once in the expected elements to this call then it must appear at"]}, {"root": "UPDATE from duplicates). to least that number of times in the actual elements.", "operations": ["UPD TextElement: duplicates). from duplicates). to least that number of times in the actual elements."]}, {"root": "UPDATE from on the object returned by this method. to on the object returned by this method. The expected elements must appear in the given order", "operations": ["UPD TextElement: on the object returned by this method. from on the object returned by this method. to on the object returned by this method. The expected elements must appear in the given order", "UPD TextElement: on the object returned by this method. from on the object returned by this method. to on the object returned by this method. The expected elements must appear in the given order"]}, {"root": "INS TextElement: within the actual elements, but they are not required to be consecutive. to TagElement at 6", "operations": ["INS TextElement: within the actual elements, but they are not required to be consecutive. to TagElement at 6"]}, {"root": "UPDATE from permitting duplicates in both the subject and the parameters (if the subject can even have to element appears more than once in the expected elements then it must appear at least that", "operations": ["UPD TextElement: permitting duplicates in both the subject and the parameters (if the subject can even have from permitting duplicates in both the subject and the parameters (if the subject can even have to element appears more than once in the expected elements then it must appear at least that"]}, {"root": "UPDATE from duplicates). to number of times in the actual elements.", "operations": ["UPD TextElement: duplicates). from duplicates). to number of times in the actual elements."]}, {"root": "INS TextElement: within the actual elements, but they are not required to be consecutive. to TagElement at 6", "operations": ["INS TextElement: within the actual elements, but they are not required to be consecutive. to TagElement at 6"]}, {"root": "UPDATE from Attests that a subject contains none of the provided objects or fails, eliding duplicates.  to Attests that a actual iterable contains none of the excluded objects or fails. (Duplicates are", "operations": ["UPD TextElement: Attests that a subject contains none of the provided objects or fails, eliding duplicates.  from Attests that a subject contains none of the provided objects or fails, eliding duplicates.  to Attests that a actual iterable contains none of the excluded objects or fails. (Duplicates are"]}, {"root": "INS TextElement: irrelevant to this test, which fails if any of the actual elements equal any of the excluded.) to TagElement at 1", "operations": ["INS TextElement: irrelevant to this test, which fails if any of the actual elements equal any of the excluded.) to TagElement at 1"]}, {"root": "UPDATE from Attests that a subject contains none of the objects contained in the provided iterable or to Attests that a actual iterable contains none of the elements contained in the excluded iterable", "operations": ["UPD TextElement: Attests that a subject contains none of the objects contained in the provided iterable or from Attests that a subject contains none of the objects contained in the provided iterable or to Attests that a actual iterable contains none of the elements contained in the excluded iterable"]}, {"root": "UPDATE from fails, eliding duplicates. to or fails. (Duplicates are irrelevant to this test, which fails if any of the actual elements", "operations": ["UPD TextElement: fails, eliding duplicates. from fails, eliding duplicates. to or fails. (Duplicates are irrelevant to this test, which fails if any of the actual elements"]}, {"root": "INS TextElement: equal any of the excluded.) to TagElement at 2", "operations": ["INS TextElement: equal any of the excluded.) to TagElement at 2"]}, {"root": "UPDATE from on the object returned by this method. to on the object returned by this method. The elements must appear in the given order within the", "operations": ["UPD TextElement: on the object returned by this method. from on the object returned by this method. to on the object returned by this method. The elements must appear in the given order within the", "UPD TextElement: on the object returned by this method. from on the object returned by this method. to on the object returned by this method. The elements must appear in the given order within the"]}, {"root": "INS TextElement: subject, but they are not required to be consecutive. to TagElement at 6", "operations": ["INS TextElement: subject, but they are not required to be consecutive. to TagElement at 6"]}, {"root": "INS TextElement: subject, but they are not required to be consecutive. to TagElement at 6", "operations": ["INS TextElement: subject, but they are not required to be consecutive. to TagElement at 6"]}, {"root": "INS TextElement: (Duplicates are irrelevant to this test, which fails if any of the subject elements to TagElement at 1", "operations": ["INS TextElement: (Duplicates are irrelevant to this test, which fails if any of the subject elements to TagElement at 1"]}, {"root": "INS TextElement: correspond to any of the given elements.) to TagElement at 2", "operations": ["INS TextElement: correspond to any of the given elements.) to TagElement at 2"]}, {"root": "INS TextElement: (Duplicates are irrelevant to this test, which fails if any of the subject elements to TagElement at 1", "operations": ["INS TextElement: (Duplicates are irrelevant to this test, which fails if any of the subject elements to TagElement at 1"]}, {"root": "INS TextElement: correspond to any of the given elements.) to TagElement at 2", "operations": ["INS TextElement: correspond to any of the given elements.) to TagElement at 2"]}, {"root": "UPDATE from \"contains one or more elements which \" to \"contains one or more elements that \"", "operations": ["UPD StringLiteral: \"contains one or more elements which \" from \"contains one or more elements which \" to \"contains one or more elements that \""]}]}}, {"IterableSubject_diff": {"operations": ["Update SimpleName: first(431) to firstExpected", "Update SimpleName: second(437) to secondExpected", "Update SimpleName: rest(443) to restOfExpected", "Update SimpleName: first(1094) to firstExcluded", "Update SimpleName: second(1100) to secondExcluded", "Update SimpleName: rest(1106) to restOfExcluded", "Update TextElement: Attests that the subject contains at least all of the provided objects or fails, potentially(411) to Attests that the actual iterable contains at least all of the expected elements or fails. If an", "Update TextElement: permitting duplicates in both the subject and the parameters (if the subject can even have(412) to element appears more than once in the expected elements to this call then it must appear at", "Update TextElement: duplicates).(413) to least that number of times in the actual elements.", "Update TextElement: on the object returned by this method.(417) to on the object returned by this method. The expected elements must appear in the given order", "Insert TextElement: within the actual elements, but they are not required to be consecutive.(418) into TagElement(419) at 6", "Update TextElement: Attests that the subject contains at least all of the provided objects or fails, potentially(456) to Attests that the actual iterable contains at least all of the expected elements or fails. If an", "Update TextElement: permitting duplicates in both the subject and the parameters (if the subject can even have(457) to element appears more than once in the expected elements then it must appear at least that", "Update TextElement: duplicates).(458) to number of times in the actual elements.", "Update TextElement: on the object returned by this method.(462) to on the object returned by this method. The expected elements must appear in the given order", "Insert TextElement: within the actual elements, but they are not required to be consecutive.(464) into TagElement(465) at 6", "Update TextElement: Attests that a subject contains none of the provided objects or fails, eliding duplicates. (1083) to Attests that a actual iterable contains none of the excluded objects or fails. (Duplicates are", "Insert TextElement: irrelevant to this test, which fails if any of the actual elements equal any of the excluded.)(1086) into TagElement(1087) at 1", "Update TextElement: Attests that a subject contains none of the objects contained in the provided iterable or(1119) to Attests that a actual iterable contains none of the elements contained in the excluded iterable", "Update TextElement: fails, eliding duplicates.(1120) to or fails. (Duplicates are irrelevant to this test, which fails if any of the actual elements", "Insert TextElement: equal any of the excluded.)(1124) into TagElement(1125) at 2", "Update TextElement: on the object returned by this method.(1879) to on the object returned by this method. The elements must appear in the given order within the", "Insert TextElement: subject, but they are not required to be consecutive.(1884) into TagElement(1885) at 6", "Update TextElement: on the object returned by this method.(1921) to on the object returned by this method. The elements must appear in the given order within the", "Insert TextElement: subject, but they are not required to be consecutive.(1927) into TagElement(1928) at 6", "Insert TextElement: (Duplicates are irrelevant to this test, which fails if any of the subject elements(2010) into TagElement(2012) at 1", "Insert TextElement: correspond to any of the given elements.)(2011) into TagElement(2012) at 2", "Insert TextElement: (Duplicates are irrelevant to this test, which fails if any of the subject elements(2045) into TagElement(2047) at 1", "Insert TextElement: correspond to any of the given elements.)(2046) into TagElement(2047) at 2", "Update SimpleName: first(448) to firstExpected", "Update SimpleName: second(449) to secondExpected", "Update SimpleName: rest(450) to restOfExpected", "Update SimpleName: first(1111) to firstExcluded", "Update SimpleName: second(1112) to secondExcluded", "Update SimpleName: rest(1113) to restOfExcluded", "Update StringLiteral: \"contains one or more elements which \"(1783) to \"contains one or more elements that \""]}}], "commit_stats": [{"total_files": 5, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}