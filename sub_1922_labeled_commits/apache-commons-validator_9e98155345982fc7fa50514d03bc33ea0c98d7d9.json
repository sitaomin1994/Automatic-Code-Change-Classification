{"application": "apache-commons-validator", "csha": "9e98155345982fc7fa50514d03bc33ea0c98d7d9", "files": [{"UrlValidator_cluster": {"actions": [{"root": "INS Block to MethodDeclaration at 5", "operations": ["INS Block to MethodDeclaration at 5"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.commons.validator.GenericValidator"]}, {"root": "DEL Block", "operations": ["DEL IfStatement", "DEL SimpleName: authorityMatcher", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: isOn", "DEL ReturnStatement", "DEL ReturnStatement", "DEL Block", "DEL ClassInstanceCreation", "DEL SimpleName: authorityValidators", "DEL SimpleName: isValid", "DEL MethodInvocation", "DEL BooleanLiteral: false", "DEL SimpleName: getInstance", "DEL BooleanLiteral: false", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: inetAddressValidator", "DEL SimpleName: hostLocation", "DEL SimpleName: domainValidator", "DEL SimpleName: group", "DEL SimpleName: authorityMatcher", "DEL VariableDeclarationFragment", "DEL SimpleName: domainValidator", "DEL SimpleName: group", "DEL SimpleType: InetAddressValidator", "DEL Block", "DEL Block", "DEL NullLiteral", "DEL SimpleName: PARSE_AUTHORITY_HOST_IP", "DEL SimpleName: inetAddressValidator", "DEL MethodInvocation", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: isValid", "DEL Block", "DEL SimpleName: port", "DEL IfStatement", "DEL InfixExpression: ==", "DEL BooleanLiteral: true", "DEL SimpleName: PORT_PATTERN", "DEL ReturnStatement", "DEL IfStatement", "DEL SimpleName: matches", "DEL SimpleName: PARSE_AUTHORITY_EXTRA", "DEL NullLiteral", "DEL SimpleName: options", "DEL SimpleName: IllegalStateException", "DEL VariableDeclarationStatement", "DEL SimpleName: hostLocation", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL MethodInvocation", "DEL ThrowStatement", "DEL SimpleName: matcher", "DEL SimpleType: String", "DEL PrefixExpression: !", "DEL MethodInvocation", "DEL PostfixExpression: ++", "DEL ReturnStatement", "DEL SimpleName: getInstance", "DEL SimpleName: i", "DEL BooleanLiteral: false", "DEL ForStatement", "DEL IfStatement", "DEL VariableDeclarationStatement", "DEL FieldAccess", "DEL SimpleName: GenericValidator", "DEL PrimitiveType: int", "DEL SimpleName: matches", "DEL SimpleType: Matcher", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL VariableDeclarationExpression", "DEL SimpleName: authority", "DEL Block", "DEL ReturnStatement", "DEL BooleanLiteral: false", "DEL IfStatement", "DEL SimpleName: PARSE_AUTHORITY_PORT", "DEL IfStatement", "DEL NullLiteral", "DEL Block", "DEL SimpleName: authorityMatcher", "DEL IfStatement", "DEL SimpleName: hostLocation", "DEL SimpleName: authorityMatcher", "DEL InfixExpression: !=", "DEL SimpleName: i", "DEL NumberLiteral: 0", "DEL VariableDeclarationStatement", "DEL PrefixExpression: !", "DEL MethodInvocation", "DEL SimpleName: isValid", "DEL Block", "DEL ThisExpression", "DEL SimpleName: group", "DEL SimpleName: String", "DEL Block", "DEL SimpleName: authority", "DEL Block", "DEL SimpleName: AUTHORITY_PATTERN", "DEL SimpleName: MANUAL_AUTHORITY_VALIDATION", "DEL SimpleType: DomainValidator", "DEL SimpleName: extra", "DEL InfixExpression: ==", "DEL SimpleType: String", "DEL SimpleName: DomainValidator", "DEL MethodInvocation", "DEL StringLiteral: \"manual authority validation enabled, but no authority validators specified\"", "DEL VariableDeclarationStatement", "DEL SimpleName: DomainValidator", "DEL VariableDeclarationFragment", "DEL Block", "DEL BooleanLiteral: true", "DEL ArrayAccess", "DEL PrefixExpression: !", "DEL SimpleName: port", "DEL SimpleName: port", "DEL QualifiedName: authorityValidators.length", "DEL PrefixExpression: !", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: matcher", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: Matcher", "DEL SimpleType: String", "DEL SimpleName: authority", "DEL VariableDeclarationStatement", "DEL SimpleName: authorityMatcher", "DEL InfixExpression: <", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: extra", "DEL SimpleName: isBlankOrNull", "DEL MethodInvocation", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleType: IllegalStateException", "DEL BooleanLiteral: false", "DEL MethodInvocation", "DEL SimpleName: i", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: InetAddressValidator", "DEL SimpleName: authorityValidators", "DEL SimpleName: InetAddressValidator", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleName: i"]}]}}, {"UrlValidator_diff": {"operations": [" * <a href='http://www.ietf.org/rfc/rfc2396.txt' >(54) to TextElement: ", " * <a href='http://www.ietf.org/rfc/rfc2396.txt' >(52)", "Insert Block(818) into MethodDeclaration(819) at 5", "Delete QualifiedName: org.apache.commons.validator.GenericValidator(2)", "Delete ImportDeclaration(3)", "Delete SimpleName: authority(820)", "Delete NullLiteral(821)", "Delete InfixExpression: ==(822)", "Delete BooleanLiteral: false(823)", "Delete ReturnStatement(824)", "Delete Block(825)", "Delete IfStatement(826)", "Delete ThisExpression(827)", "Delete SimpleName: options(828)", "Delete FieldAccess(829)", "Delete SimpleName: isOn(830)", "Delete SimpleName: MANUAL_AUTHORITY_VALIDATION(831)", "Delete MethodInvocation(832)", "Delete SimpleName: authorityValidators(833)", "Delete NullLiteral(834)", "Delete InfixExpression: ==(835)", "Delete SimpleName: IllegalStateException(836)", "Delete SimpleType: IllegalStateException(837)", "Delete StringLiteral: \"manual authority validation enabled, but no authority validators specified\"(838)", "Delete ClassInstanceCreation(839)", "Delete ThrowStatement(840)", "Delete Block(841)", "Delete IfStatement(842)", "Delete PrimitiveType: int(843)", "Delete SimpleName: i(844)", "Delete NumberLiteral: 0(845)", "Delete VariableDeclarationFragment(846)", "Delete VariableDeclarationExpression(847)", "Delete SimpleName: i(848)", "Delete QualifiedName: authorityValidators.length(849)", "Delete InfixExpression: <(850)", "Delete SimpleName: i(851)", "Delete PostfixExpression: ++(852)", "Delete SimpleName: authorityValidators(853)", "Delete SimpleName: i(854)", "Delete ArrayAccess(855)", "Delete SimpleName: isValid(856)", "Delete SimpleName: authority(857)", "Delete MethodInvocation(858)", "Delete BooleanLiteral: true(859)", "Delete ReturnStatement(860)", "Delete Block(861)", "Delete IfStatement(862)", "Delete Block(863)", "Delete ForStatement(864)", "Delete Block(865)", "Delete IfStatement(866)", "Delete SimpleName: AUTHORITY_PATTERN(870)", "Delete SimpleName: matcher(871)", "Delete SimpleName: authority(872)", "Delete MethodInvocation(873)", "Delete VariableDeclarationFragment(874)", "Delete VariableDeclarationStatement(875)", "Delete SimpleName: matches(877)", "Delete MethodInvocation(878)", "Delete PrefixExpression: !(879)", "Delete BooleanLiteral: false(880)", "Delete ReturnStatement(881)", "Delete Block(882)", "Delete IfStatement(883)", "Delete SimpleName: String(884)", "Delete SimpleType: String(885)", "Delete SimpleName: hostLocation(886)", "Delete SimpleName: group(888)", "Delete SimpleName: PARSE_AUTHORITY_HOST_IP(889)", "Delete MethodInvocation(890)", "Delete VariableDeclarationFragment(891)", "Delete VariableDeclarationStatement(892)", "Delete SimpleName: DomainValidator(893)", "Delete SimpleType: DomainValidator(894)", "Delete SimpleName: domainValidator(895)", "Delete SimpleName: DomainValidator(896)", "Delete SimpleName: getInstance(897)", "Delete MethodInvocation(898)", "Delete VariableDeclarationFragment(899)", "Delete VariableDeclarationStatement(900)", "Delete SimpleName: domainValidator(901)", "Delete SimpleName: isValid(902)", "Delete SimpleName: hostLocation(903)", "Delete MethodInvocation(904)", "Delete PrefixExpression: !(905)", "Delete SimpleName: InetAddressValidator(906)", "Delete SimpleType: InetAddressValidator(907)", "Delete SimpleName: inetAddressValidator(908)", "Delete SimpleName: InetAddressValidator(909)", "Delete SimpleName: getInstance(910)", "Delete MethodInvocation(911)", "Delete VariableDeclarationFragment(912)", "Delete VariableDeclarationStatement(913)", "Delete SimpleName: inetAddressValidator(914)", "Delete SimpleName: isValid(915)", "Delete SimpleName: hostLocation(916)", "Delete MethodInvocation(917)", "Delete PrefixExpression: !(918)", "Delete BooleanLiteral: false(919)", "Delete ReturnStatement(920)", "Delete Block(921)", "Delete IfStatement(922)", "Delete Block(923)", "Delete IfStatement(924)", "Delete SimpleName: String(925)", "Delete SimpleType: String(926)", "Delete SimpleName: port(927)", "Delete SimpleName: group(929)", "Delete SimpleName: PARSE_AUTHORITY_PORT(930)", "Delete MethodInvocation(931)", "Delete VariableDeclarationFragment(932)", "Delete VariableDeclarationStatement(933)", "Delete SimpleName: port(934)", "Delete NullLiteral(935)", "Delete InfixExpression: !=(936)", "Delete SimpleName: PORT_PATTERN(937)", "Delete SimpleName: matcher(938)", "Delete SimpleName: port(939)", "Delete MethodInvocation(940)", "Delete SimpleName: matches(941)", "Delete MethodInvocation(942)", "Delete PrefixExpression: !(943)", "Delete BooleanLiteral: false(944)", "Delete ReturnStatement(945)", "Delete Block(946)", "Delete IfStatement(947)", "Delete Block(948)", "Delete IfStatement(949)", "Delete SimpleName: String(950)", "Delete SimpleType: String(951)", "Delete SimpleName: extra(952)", "Delete SimpleName: group(954)", "Delete SimpleName: PARSE_AUTHORITY_EXTRA(955)", "Delete MethodInvocation(956)", "Delete VariableDeclarationFragment(957)", "Delete VariableDeclarationStatement(958)", "Delete SimpleName: GenericValidator(959)", "Delete SimpleName: isBlankOrNull(960)", "Delete SimpleName: extra(961)", "Delete MethodInvocation(962)", "Delete PrefixExpression: !(963)", "Delete BooleanLiteral: false(964)", "Delete ReturnStatement(965)", "Delete Block(966)", "Delete IfStatement(967)", "Delete BooleanLiteral: true(968)", "Delete ReturnStatement(969)", "Delete Block(970)"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}