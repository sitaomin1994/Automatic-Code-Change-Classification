{"application": "apache-zookeeper", "csha": "eb51de49f723542a17e722fa817d81605a04c74c", "files": [{"DataNode_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 10", "operations": ["INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 10", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: numChildren to VariableDeclarationFragment at 0"]}, {"root": "INS IfStatement to Block at 11", "operations": ["INS ExpressionStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS IfStatement to Block at 11", "INS SimpleName: numChildren to Assignment: = at 0", "INS Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 12"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 13"]}, {"root": "UPDATE from == to !=", "operations": ["UPD InfixExpression: == from == to !="]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "UPDATE from setNumChildren to setCversion", "operations": ["UPD SimpleName: setNumChildren from setNumChildren to setCversion"]}, {"root": "INS InfixExpression: - to MethodInvocation at 2", "operations": ["INS InfixExpression: - to MethodInvocation at 2", "INS InfixExpression: * to InfixExpression: - at 0", "INS SimpleName: numChildren to InfixExpression: - at 1", "INS NumberLiteral: 2 to InfixExpression: * at 1"]}, {"root": "INS SimpleName: numChildren to MethodInvocation at 2", "operations": ["INS SimpleName: numChildren to MethodInvocation at 2"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from InfixExpression: *", "operations": ["MOV MethodInvocation to InfixExpression: * at 0"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: setCversion", "DEL ExpressionStatement", "DEL SimpleName: to", "DEL MethodInvocation"]}, {"root": "DEL NumberLiteral: 0", "operations": ["DEL NumberLiteral: 0"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL Block", "DEL Block"]}]}}, {"DataNode_diff": {"operations": ["Insert VariableDeclarationStatement(342) into Block(372) at 9", "Insert IfStatement(355) into Block(372) at 10", "Move ExpressionStatement(354) into Block(372) at 12", "Move ExpressionStatement(362) into Block(372) at 13", "Insert PrimitiveType: int(338) into VariableDeclarationStatement(342) at 0", "Insert VariableDeclarationFragment(341) into VariableDeclarationStatement(342) at 1", "Update InfixExpression: ==(349) to !=", "Move InfixExpression: ==(349) into IfStatement(355) at 0", "Insert Block(354) into IfStatement(355) at 1", "Insert SimpleName: numChildren(339) into VariableDeclarationFragment(341) at 0", "Insert NumberLiteral: 0(340) into VariableDeclarationFragment(341) at 1", "Insert ExpressionStatement(353) into Block(354) at 0", "Update SimpleName: setNumChildren(351) to setCversion", "Insert InfixExpression: -(364) into MethodInvocation(365) at 2", "Insert SimpleName: numChildren(369) into MethodInvocation(370) at 2", "Insert Assignment: =(352) into ExpressionStatement(353) at 0", "Insert InfixExpression: *(362) into InfixExpression: -(364) at 0", "Insert SimpleName: numChildren(363) into InfixExpression: -(364) at 1", "Insert SimpleName: numChildren(348) into Assignment: =(352) at 0", "Move MethodInvocation(360) into Assignment: =(352) at 1", "Move MethodInvocation(290) into InfixExpression: *(362) at 0", "Insert NumberLiteral: 2(361) into InfixExpression: *(362) at 1", "Delete SimpleName: to(286)", "Delete SimpleName: setCversion(287)", "Delete MethodInvocation(291)", "Delete ExpressionStatement(292)", "Delete NumberLiteral: 0(352)", "Delete Block(355)", "Delete Block(363)", "Delete IfStatement(364)"]}}, {"DataTree_cluster": {"actions": [{"root": "INS SingleVariableDeclaration to MethodDeclaration at 8", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: parentCVersion to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 8"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: parentCVersion to Assignment: = at 0", "INS SimpleName: parentCVersion to InfixExpression: == at 0", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS PrefixExpression: - to InfixExpression: == at 1", "INS InfixExpression: == to IfStatement at 0", "INS IfStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from cver to parentCVersion", "operations": ["UPD SimpleName: cver from cver to parentCVersion", "UPD SimpleName: cver from cver to parentCVersion"]}, {"root": "INS MethodInvocation to MethodInvocation at 5", "operations": ["INS MethodInvocation to MethodInvocation at 5", "INS SimpleName: createTxn to MethodInvocation at 0", "INS SimpleName: getParentCVersion to MethodInvocation at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: cver", "DEL PrimitiveType: int"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: setCversion", "DEL SimpleName: getCversion", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL QualifiedName: parent.stat", "DEL InfixExpression: +", "DEL QualifiedName: parent.stat", "DEL MethodInvocation"]}]}}, {"DataTree_diff": {"operations": ["Insert SingleVariableDeclaration(1512) into MethodDeclaration(1844) at 8", "Insert PrimitiveType: int(1510) into SingleVariableDeclaration(1512) at 0", "Insert SimpleName: parentCVersion(1511) into SingleVariableDeclaration(1512) at 1", "Insert IfStatement(1659) into Block(1746) at 2", "Insert InfixExpression: ==(1648) into IfStatement(1659) at 0", "Insert Block(1658) into IfStatement(1659) at 1", "Insert SimpleName: parentCVersion(1645) into InfixExpression: ==(1648) at 0", "Insert PrefixExpression: -(1647) into InfixExpression: ==(1648) at 1", "Insert ExpressionStatement(1654) into Block(1658) at 0", "Move ExpressionStatement(1651) into Block(1658) at 1", "Update SimpleName: cver(1654) to parentCVersion", "Insert NumberLiteral: 1(1646) into PrefixExpression: -(1647) at 0", "Insert Assignment: =(1653) into ExpressionStatement(1654) at 0", "Insert MethodInvocation(2870) into MethodInvocation(2877) at 5", "Insert SimpleName: parentCVersion(1649) into Assignment: =(1653) at 0", "Move MethodInvocation(1646) into Assignment: =(1653) at 1", "Update SimpleName: cver(1649) to parentCVersion", "Insert SimpleName: createTxn(2868) into MethodInvocation(2870) at 0", "Insert SimpleName: getParentCVersion(2869) into MethodInvocation(2870) at 1", "Delete PrimitiveType: int(1642)", "Delete SimpleName: cver(1643)", "Delete VariableDeclarationFragment(1647)", "Delete VariableDeclarationStatement(1648)", "Delete QualifiedName: parent.stat(1936)", "Delete SimpleName: setCversion(1937)", "Delete QualifiedName: parent.stat(1938)", "Delete SimpleName: getCversion(1939)", "Delete MethodInvocation(1940)", "Delete NumberLiteral: 1(1941)", "Delete InfixExpression: +(1942)", "Delete MethodInvocation(1943)", "Delete ExpressionStatement(1944)"]}}, {"LogFormatter_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 9", "operations": ["INS VariableDeclarationStatement to Block at 9", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from InputArchive to Record", "operations": ["UPD SimpleType: InputArchive from InputArchive to Record", "UPD SimpleName: InputArchive from InputArchive to Record"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: InputArchive to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from iab to txn", "operations": ["UPD SimpleName: iab from iab to txn"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: iab to VariableDeclarationFragment at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: deserializeTxn to MethodInvocation at 1", "MOV SimpleName: hdr to MethodInvocation at 3", "MOV SimpleName: iab to MethodInvocation at 2", "MOV SimpleName: SerializeUtils to MethodInvocation at 0"]}, {"root": "UPDATE from iab to bytes", "operations": ["UPD SimpleName: iab from iab to bytes"]}, {"root": "INS StringLiteral: \" \" to InfixExpression: + at 9", "operations": ["INS StringLiteral: \" \" to InfixExpression: + at 9"]}, {"root": "INS SimpleName: txn to InfixExpression: + at 10", "operations": ["INS SimpleName: txn to InfixExpression: + at 10"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: ByteArrayInputStream", "DEL SimpleName: BinaryInputArchive", "DEL MethodInvocation", "DEL SimpleName: bytes", "DEL SimpleName: ByteArrayInputStream", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: getArchive", "DEL ClassInstanceCreation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation"]}]}}, {"LogFormatter_diff": {"operations": ["Insert VariableDeclarationStatement(276) into Block(346) at 8", "Update SimpleType: InputArchive(260) to Record", "Move SimpleType: InputArchive(260) into VariableDeclarationStatement(276) at 0", "Insert VariableDeclarationFragment(275) into VariableDeclarationStatement(276) at 1", "Update SimpleName: InputArchive(259) to Record", "Update SimpleName: iab(261) to txn", "Move SimpleName: iab(261) into VariableDeclarationFragment(275) at 0", "Insert MethodInvocation(274) into VariableDeclarationFragment(275) at 1", "Move SimpleName: SerializeUtils(279) into MethodInvocation(274) at 0", "Move SimpleName: deserializeTxn(280) into MethodInvocation(274) at 1", "Update SimpleName: iab(281) to bytes", "Move SimpleName: iab(281) into MethodInvocation(274) at 2", "Move SimpleName: hdr(282) into MethodInvocation(274) at 3", "Insert StringLiteral: \" \"(320) into InfixExpression: +(322) at 9", "Insert SimpleName: txn(321) into InfixExpression: +(322) at 10", "Delete SimpleName: BinaryInputArchive(262)", "Delete SimpleName: getArchive(263)", "Delete SimpleName: ByteArrayInputStream(264)", "Delete SimpleType: ByteArrayInputStream(265)", "Delete SimpleName: bytes(266)", "Delete ClassInstanceCreation(267)", "Delete MethodInvocation(268)", "Delete VariableDeclarationFragment(269)", "Delete VariableDeclarationStatement(270)", "Delete MethodInvocation(283)", "Delete ExpressionStatement(284)"]}}, {"PrepRequestProcessor_cluster": {"actions": [{"root": "MOVE from SwitchStatement", "operations": ["MOV BreakStatement to SwitchStatement at 95", "MOV ExpressionStatement to SwitchStatement at 25", "MOV BreakStatement to SwitchStatement at 86", "MOV BreakStatement to SwitchStatement at 68", "MOV BreakStatement to SwitchStatement at 101", "MOV BreakStatement to SwitchStatement at 29", "MOV BreakStatement to SwitchStatement at 51"]}, {"root": "INS VariableDeclarationStatement to SwitchStatement at 20", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to SwitchStatement at 20", "INS SimpleName: newCversion to VariableDeclarationFragment at 0"]}, {"root": "INS BreakStatement to SwitchStatement at 112", "operations": ["INS BreakStatement to SwitchStatement at 112"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV InfixExpression: + to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from getCversion to newCversion", "operations": ["UPD SimpleName: getCversion from getCversion to newCversion"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getCversion to MethodInvocation at 2"]}, {"root": "INS SimpleName: newCversion to ClassInstanceCreation at 5", "operations": ["INS SimpleName: newCversion to ClassInstanceCreation at 5"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL InfixExpression: +", "DEL NumberLiteral: 1", "DEL QualifiedName: parentRecord.stat", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL QualifiedName: parentRecord.stat", "DEL SimpleName: setCversion", "DEL MethodInvocation"]}, {"root": "DEL BreakStatement", "operations": ["DEL BreakStatement"]}]}}, {"PrepRequestProcessor_diff": {"operations": ["Move ExpressionStatement(1084) into SwitchStatement(1531) at 25", "Move BreakStatement(1103) into SwitchStatement(1531) at 29", "Move BreakStatement(1225) into SwitchStatement(1531) at 51", "Move BreakStatement(1360) into SwitchStatement(1531) at 68", "Move BreakStatement(1414) into SwitchStatement(1531) at 86", "Move BreakStatement(1508) into SwitchStatement(1531) at 95", "Move BreakStatement(1533) into SwitchStatement(1531) at 101", "Insert VariableDeclarationStatement(849) into SwitchStatement(1531) at 20", "Insert BreakStatement(1530) into SwitchStatement(1531) at 110", "Insert PrimitiveType: int(841) into VariableDeclarationStatement(849) at 0", "Insert VariableDeclarationFragment(848) into VariableDeclarationStatement(849) at 1", "Insert SimpleName: newCversion(842) into VariableDeclarationFragment(848) at 0", "Move InfixExpression: +(893) into VariableDeclarationFragment(848) at 1", "Update SimpleName: getCversion(1079) to newCversion", "Move SimpleName: getCversion(1079) into MethodInvocation(900) at 2", "Insert SimpleName: newCversion(863) into ClassInstanceCreation(864) at 5", "Delete QualifiedName: parentRecord.stat(1078)", "Delete MethodInvocation(1080)", "Delete NumberLiteral: 1(1081)", "Delete InfixExpression: +(1082)", "Delete QualifiedName: parentRecord.stat(887)", "Delete SimpleName: setCversion(888)", "Delete MethodInvocation(894)", "Delete ExpressionStatement(895)", "Delete BreakStatement(915)"]}}, {"FileTxnLog_cluster": {"actions": [{"root": "UPDATE from iab to bytes", "operations": ["UPD SimpleName: iab from iab to bytes"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleType: ByteArrayInputStream", "DEL SimpleName: getArchive", "DEL MethodInvocation", "DEL SimpleType: InputArchive", "DEL SimpleName: iab", "DEL SimpleName: BinaryInputArchive", "DEL SimpleName: InputArchive", "DEL SimpleName: bytes", "DEL SimpleName: ByteArrayInputStream"]}]}}, {"FileTxnLog_diff": {"operations": ["Update SimpleName: iab(1804) to bytes", "Delete SimpleName: InputArchive(1783)", "Delete SimpleType: InputArchive(1784)", "Delete SimpleName: iab(1785)", "Delete SimpleName: BinaryInputArchive(1786)", "Delete SimpleName: getArchive(1787)", "Delete SimpleName: ByteArrayInputStream(1788)", "Delete SimpleType: ByteArrayInputStream(1789)", "Delete SimpleName: bytes(1790)", "Delete ClassInstanceCreation(1791)", "Delete MethodInvocation(1792)", "Delete VariableDeclarationFragment(1793)", "Delete VariableDeclarationStatement(1794)"]}}, {"FileTxnSnapLog_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS ImportDeclaration to CompilationUnit at 15", "INS QualifiedName: org.apache.zookeeper.txn.CreateTxn to ImportDeclaration at 0"]}, {"root": "INS InfixExpression: && to IfStatement at 0", "operations": ["INS InfixExpression: && to IfStatement at 0"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV ParenthesizedExpression to InfixExpression: && at 0"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV InfixExpression: == to InfixExpression: && at 1"]}, {"root": "INS PrefixExpression: - to InfixExpression: == at 1", "operations": ["INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS PrefixExpression: - to InfixExpression: == at 1"]}, {"root": "INS ParenthesizedExpression to MethodInvocation at 0", "operations": ["INS CastExpression to ParenthesizedExpression at 0", "INS SimpleName: txn to CastExpression at 1", "INS SimpleType: CreateTxn to CastExpression at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS SimpleName: CreateTxn to SimpleType: CreateTxn at 0"]}, {"root": "UPDATE from getType to getParentCVersion", "operations": ["UPD SimpleName: getType from getType to getParentCVersion"]}, {"root": "DEL SimpleName: hdr", "operations": ["DEL SimpleName: hdr"]}, {"root": "DEL QualifiedName: OpCode.delete", "operations": ["DEL QualifiedName: OpCode.delete"]}, {"root": "DEL InfixExpression: ||", "operations": ["DEL QualifiedName: rc.err", "DEL InfixExpression: ||", "DEL MethodInvocation", "DEL SimpleName: intValue", "DEL QualifiedName: Code.NONODE", "DEL InfixExpression: &&", "DEL InfixExpression: ==", "DEL ParenthesizedExpression"]}]}}, {"FileTxnSnapLog_diff": {"operations": ["Insert ImportDeclaration(46) into CompilationUnit(1012) at 15", "Insert QualifiedName: org.apache.zookeeper.txn.CreateTxn(45) into ImportDeclaration(46) at 0", "Insert InfixExpression: &&(630) into IfStatement(707) at 0", "Move ParenthesizedExpression(629) into InfixExpression: &&(630) at 0", "Move InfixExpression: ==(610) into InfixExpression: &&(630) at 1", "Insert PrefixExpression: -(628) into InfixExpression: ==(629) at 1", "Insert ParenthesizedExpression(624) into MethodInvocation(626) at 0", "Update SimpleName: getType(607) to getParentCVersion", "Insert NumberLiteral: 1(627) into PrefixExpression: -(628) at 0", "Insert CastExpression(623) into ParenthesizedExpression(624) at 0", "Insert SimpleType: CreateTxn(621) into CastExpression(623) at 0", "Insert SimpleName: txn(622) into CastExpression(623) at 1", "Insert SimpleName: CreateTxn(620) into SimpleType: CreateTxn(621) at 0", "Delete SimpleName: hdr(606)", "Delete QualifiedName: OpCode.delete(609)", "Delete QualifiedName: rc.err(611)", "Delete QualifiedName: Code.NONODE(612)", "Delete SimpleName: intValue(613)", "Delete MethodInvocation(614)", "Delete InfixExpression: ==(615)", "Delete InfixExpression: &&(616)", "Delete ParenthesizedExpression(617)", "Delete InfixExpression: ||(630)"]}}, {"Follower_cluster": {"actions": [{"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: BinaryInputArchive", "DEL MethodInvocation", "DEL SimpleName: ByteArrayInputStream", "DEL VariableDeclarationFragment", "DEL SimpleName: BinaryInputArchive", "DEL SimpleName: getArchive", "DEL SimpleName: ia", "DEL VariableDeclarationStatement", "DEL SimpleType: BinaryInputArchive", "DEL ClassInstanceCreation", "DEL SimpleType: ByteArrayInputStream"]}, {"root": "DEL SimpleName: ia", "operations": ["DEL SimpleName: ia"]}]}}, {"Follower_diff": {"operations": ["Move MethodInvocation(341) into MethodInvocation(341) at 2", "Delete SimpleName: BinaryInputArchive(332)", "Delete SimpleType: BinaryInputArchive(333)", "Delete SimpleName: ia(334)", "Delete SimpleName: BinaryInputArchive(335)", "Delete SimpleName: getArchive(336)", "Delete SimpleName: ByteArrayInputStream(337)", "Delete SimpleType: ByteArrayInputStream(338)", "Delete ClassInstanceCreation(342)", "Delete MethodInvocation(343)", "Delete VariableDeclarationFragment(344)", "Delete VariableDeclarationStatement(345)", "Delete SimpleName: ia(351)"]}}, {"Learner_cluster": {"actions": [{"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL SimpleType: ByteArrayInputStream", "DEL VariableDeclarationStatement", "DEL SimpleName: ia", "DEL SimpleName: ByteArrayInputStream", "DEL SimpleName: BinaryInputArchive", "DEL MethodInvocation", "DEL SimpleName: getArchive", "DEL SimpleType: BinaryInputArchive", "DEL SimpleName: BinaryInputArchive"]}, {"root": "DEL SimpleName: ia", "operations": ["DEL SimpleName: ia"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: getArchive", "DEL Assignment: =", "DEL SimpleName: ia", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL SimpleType: ByteArrayInputStream", "DEL SimpleName: ByteArrayInputStream", "DEL SimpleName: BinaryInputArchive", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: ia", "operations": ["DEL SimpleName: ia"]}]}}, {"Learner_diff": {"operations": ["Move MethodInvocation(1250) into MethodInvocation(1248) at 2", "Move MethodInvocation(1364) into MethodInvocation(1354) at 2", "Delete SimpleName: BinaryInputArchive(1241)", "Delete SimpleType: BinaryInputArchive(1242)", "Delete SimpleName: ia(1243)", "Delete SimpleName: BinaryInputArchive(1244)", "Delete SimpleName: getArchive(1245)", "Delete SimpleName: ByteArrayInputStream(1246)", "Delete SimpleType: ByteArrayInputStream(1247)", "Delete ClassInstanceCreation(1251)", "Delete MethodInvocation(1252)", "Delete VariableDeclarationFragment(1253)", "Delete VariableDeclarationStatement(1254)", "Delete SimpleName: ia(1258)", "Delete SimpleName: ia(1357)", "Delete SimpleName: BinaryInputArchive(1358)", "Delete SimpleName: getArchive(1359)", "Delete SimpleName: ByteArrayInputStream(1360)", "Delete SimpleType: ByteArrayInputStream(1361)", "Delete ClassInstanceCreation(1365)", "Delete MethodInvocation(1366)", "Delete Assignment: =(1367)", "Delete ExpressionStatement(1368)", "Delete SimpleName: ia(1374)"]}}, {"LearnerHandler_cluster": {"actions": [{"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: BinaryInputArchive", "DEL VariableDeclarationStatement", "DEL SimpleName: ByteArrayInputStream", "DEL SimpleName: BinaryInputArchive", "DEL VariableDeclarationFragment", "DEL SimpleType: ByteArrayInputStream", "DEL SimpleName: getArchive", "DEL SimpleName: BinaryInputArchive", "DEL SimpleName: ia", "DEL MethodInvocation", "DEL ClassInstanceCreation"]}, {"root": "DEL SimpleName: ia", "operations": ["DEL SimpleName: ia"]}]}}, {"LearnerHandler_diff": {"operations": ["Move MethodInvocation(513) into MethodInvocation(519) at 2", "Delete SimpleName: BinaryInputArchive(504)", "Delete SimpleType: BinaryInputArchive(505)", "Delete SimpleName: ia(506)", "Delete SimpleName: BinaryInputArchive(507)", "Delete SimpleName: getArchive(508)", "Delete SimpleName: ByteArrayInputStream(509)", "Delete SimpleType: ByteArrayInputStream(510)", "Delete ClassInstanceCreation(514)", "Delete MethodInvocation(515)", "Delete VariableDeclarationFragment(516)", "Delete VariableDeclarationStatement(517)", "Delete SimpleName: ia(529)"]}}, {"Observer_cluster": {"actions": [{"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: ia", "DEL SimpleName: ByteArrayInputStream", "DEL SimpleType: BinaryInputArchive", "DEL VariableDeclarationFragment", "DEL SimpleName: BinaryInputArchive", "DEL MethodInvocation", "DEL SimpleName: BinaryInputArchive", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL SimpleName: getArchive", "DEL SimpleType: ByteArrayInputStream"]}, {"root": "DEL SimpleName: ia", "operations": ["DEL SimpleName: ia"]}]}}, {"Observer_diff": {"operations": ["Move MethodInvocation(308) into MethodInvocation(308) at 2", "Delete SimpleName: BinaryInputArchive(299)", "Delete SimpleType: BinaryInputArchive(300)", "Delete SimpleName: ia(301)", "Delete SimpleName: BinaryInputArchive(302)", "Delete SimpleName: getArchive(303)", "Delete SimpleName: ByteArrayInputStream(304)", "Delete SimpleType: ByteArrayInputStream(305)", "Delete ClassInstanceCreation(309)", "Delete MethodInvocation(310)", "Delete VariableDeclarationFragment(311)", "Delete VariableDeclarationStatement(312)", "Delete SimpleName: ia(318)"]}}, {"UpgradeSnapShotV1_cluster": {"actions": [{"root": "UPDATE from ia to bytes", "operations": ["UPD SimpleName: ia from ia to bytes"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: InputArchive", "DEL SimpleName: ByteArrayInputStream", "DEL SimpleName: ia", "DEL ClassInstanceCreation", "DEL SimpleName: bytes", "DEL MethodInvocation", "DEL SimpleName: getArchive", "DEL SimpleType: InputArchive", "DEL VariableDeclarationFragment", "DEL SimpleName: BinaryInputArchive", "DEL VariableDeclarationStatement", "DEL SimpleType: ByteArrayInputStream"]}]}}, {"UpgradeSnapShotV1_diff": {"operations": ["Update SimpleName: ia(334) to bytes", "Delete SimpleName: InputArchive(309)", "Delete SimpleType: InputArchive(310)", "Delete SimpleName: ia(311)", "Delete SimpleName: BinaryInputArchive(312)", "Delete SimpleName: getArchive(313)", "Delete SimpleName: ByteArrayInputStream(314)", "Delete SimpleType: ByteArrayInputStream(315)", "Delete SimpleName: bytes(316)", "Delete ClassInstanceCreation(317)", "Delete MethodInvocation(318)", "Delete VariableDeclarationFragment(319)", "Delete VariableDeclarationStatement(320)"]}}, {"TxnLogSource_cluster": {"actions": [{"root": "UPDATE from iab to bytes", "operations": ["UPD SimpleName: iab from iab to bytes", "UPD SimpleName: iab from iab to bytes"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL SimpleName: iab", "DEL SimpleType: InputArchive", "DEL SimpleName: InputArchive", "DEL VariableDeclarationFragment", "DEL SimpleName: getArchive", "DEL SimpleName: bytes", "DEL SimpleName: ByteArrayInputStream", "DEL SimpleName: BinaryInputArchive", "DEL VariableDeclarationStatement", "DEL SimpleType: ByteArrayInputStream", "DEL ClassInstanceCreation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: BinaryInputArchive", "DEL ClassInstanceCreation", "DEL SimpleName: InputArchive", "DEL SimpleName: getArchive", "DEL SimpleName: ByteArrayInputStream", "DEL SimpleName: bytes", "DEL SimpleType: InputArchive", "DEL SimpleName: iab", "DEL SimpleType: ByteArrayInputStream"]}]}}, {"TxnLogSource_diff": {"operations": ["Update SimpleName: iab(702) to bytes", "Update SimpleName: iab(1357) to bytes", "Delete SimpleName: InputArchive(677)", "Delete SimpleType: InputArchive(678)", "Delete SimpleName: iab(679)", "Delete SimpleName: BinaryInputArchive(680)", "Delete SimpleName: getArchive(681)", "Delete SimpleName: ByteArrayInputStream(682)", "Delete SimpleType: ByteArrayInputStream(683)", "Delete SimpleName: bytes(684)", "Delete ClassInstanceCreation(685)", "Delete MethodInvocation(686)", "Delete VariableDeclarationFragment(687)", "Delete VariableDeclarationStatement(688)", "Delete SimpleName: InputArchive(1332)", "Delete SimpleType: InputArchive(1333)", "Delete SimpleName: iab(1334)", "Delete SimpleName: BinaryInputArchive(1335)", "Delete SimpleName: getArchive(1336)", "Delete SimpleName: ByteArrayInputStream(1337)", "Delete SimpleType: ByteArrayInputStream(1338)", "Delete SimpleName: bytes(1339)", "Delete ClassInstanceCreation(1340)", "Delete MethodInvocation(1341)", "Delete VariableDeclarationFragment(1342)", "Delete VariableDeclarationStatement(1343)"]}}], "commit_stats": [{"total_files": 20, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}