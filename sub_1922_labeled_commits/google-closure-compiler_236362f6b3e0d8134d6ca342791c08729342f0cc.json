{"application": "google-closure-compiler", "csha": "236362f6b3e0d8134d6ca342791c08729342f0cc", "files": [{"Compiler_cluster": {"actions": [{"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: GlobalVarReferenceMap", "DEL Modifier: final", "DEL SimpleName: GlobalVarReferenceMap", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: globalRefMap", "DEL Modifier: private"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL FieldAccess", "DEL ThisExpression", "DEL QualifiedName: compiler.globalRefMap", "DEL Assignment: =", "DEL SimpleName: globalRefMap"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL QualifiedName: compilerState.globalRefMap", "DEL SimpleName: globalRefMap", "DEL Assignment: ="]}]}}, {"Compiler_diff": {"operations": ["Delete Modifier: private(10699)", "Delete Modifier: final(10700)", "Delete SimpleName: GlobalVarReferenceMap(10701)", "Delete SimpleType: GlobalVarReferenceMap(10702)", "Delete SimpleName: globalRefMap(10703)", "Delete VariableDeclarationFragment(10704)", "Delete FieldDeclaration(10705)", "Delete ThisExpression(10979)", "Delete SimpleName: globalRefMap(10980)", "Delete FieldAccess(10981)", "Delete QualifiedName: compiler.globalRefMap(10982)", "Delete Assignment: =(10983)", "Delete ExpressionStatement(10984)", "Delete SimpleName: globalRefMap(11384)", "Delete QualifiedName: compilerState.globalRefMap(11385)", "Delete Assignment: =(11386)", "Delete ExpressionStatement(11387)"]}}, {"GlobalVarReferenceMap_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.Serializable"]}, {"root": "DEL SimpleType: Serializable", "operations": ["DEL SimpleType: Serializable", "DEL SimpleName: Serializable"]}]}}, {"GlobalVarReferenceMap_diff": {"operations": ["Delete QualifiedName: java.io.Serializable(10)", "Delete ImportDeclaration(11)", "Delete SimpleName: Serializable(45)", "Delete SimpleType: Serializable(46)"]}}, {"ReferenceCollectingCallback_cluster": {"actions": [{"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 6"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS Block to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS SimpleType: ReferenceCollection to ParameterizedType: Map<Var,ReferenceCollection> at 2", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleType: Map to ParameterizedType: Map<Var,ReferenceCollection> at 0", "INS SimpleType: Var to ParameterizedType: Map<Var,ReferenceCollection> at 1", "INS SimpleName: ReferenceCollection to SimpleType: ReferenceCollection at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: getRawReferenceMap to MethodDeclaration at 1", "INS SimpleName: referenceMap to ReturnStatement at 0", "INS ParameterizedType: Map<Var,ReferenceCollection> to MethodDeclaration at 0", "INS SimpleName: Var to SimpleType: Var at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0"]}, {"root": "DEL Block", "operations": ["DEL SimpleName: inGlobalScope", "DEL SimpleName: t", "DEL SimpleName: referenceMap", "DEL SimpleName: compiler", "DEL SimpleName: updateGlobalVarReferences", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: t", "DEL SimpleName: getScopeRoot", "DEL SimpleName: compiler", "DEL SimpleName: t", "DEL ExpressionStatement", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: behavior", "DEL SimpleName: afterExitScope", "DEL SimpleName: getGlobalVarReferences", "DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL IfStatement"]}, {"root": "DEL Modifier: private", "operations": ["DEL Modifier: private"]}]}}, {"ReferenceCollectingCallback_diff": {"operations": ["Move Block(805) into MethodDeclaration(786) at 6", "Insert MethodDeclaration(1133) into TypeDeclaration: class(1134) at 6", "Move IfStatement(775) into Block(785) at 0", "Insert ParameterizedType: Map<Var,ReferenceCollection>(1128) into MethodDeclaration(1133) at 0", "Insert SimpleName: getRawReferenceMap(1129) into MethodDeclaration(1133) at 1", "Insert Block(1132) into MethodDeclaration(1133) at 2", "Insert SimpleType: Map(1123) into ParameterizedType: Map<Var,ReferenceCollection>(1128) at 0", "Insert SimpleType: Var(1125) into ParameterizedType: Map<Var,ReferenceCollection>(1128) at 1", "Insert SimpleType: ReferenceCollection(1127) into ParameterizedType: Map<Var,ReferenceCollection>(1128) at 2", "Insert ReturnStatement(1131) into Block(1132) at 0", "Insert SimpleName: Map(1122) into SimpleType: Map(1123) at 0", "Insert SimpleName: Var(1124) into SimpleType: Var(1125) at 0", "Insert SimpleName: ReferenceCollection(1126) into SimpleType: ReferenceCollection(1127) at 0", "Insert SimpleName: referenceMap(1130) into ReturnStatement(1131) at 0", "Delete SimpleName: t(776)", "Delete SimpleName: inGlobalScope(777)", "Delete MethodInvocation(778)", "Delete SimpleName: compiler(779)", "Delete SimpleName: updateGlobalVarReferences(780)", "Delete SimpleName: referenceMap(781)", "Delete SimpleName: t(782)", "Delete SimpleName: getScopeRoot(783)", "Delete MethodInvocation(784)", "Delete MethodInvocation(785)", "Delete ExpressionStatement(786)", "Delete SimpleName: behavior(787)", "Delete SimpleName: afterExitScope(788)", "Delete SimpleName: t(789)", "Delete SimpleName: compiler(790)", "Delete SimpleName: getGlobalVarReferences(791)", "Delete MethodInvocation(792)", "Delete MethodInvocation(793)", "Delete ExpressionStatement(794)", "Delete Block(795)", "Delete IfStatement(806)", "Delete Block(807)", "Delete Modifier: private(1092)"]}}, {"VariableReferenceCheck_cluster": {"actions": [{"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS MethodInvocation to IfStatement at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS SimpleName: compiler to MethodInvocation at 0", "INS SimpleName: getGlobalVarReferences to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: t to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: referenceMap to CastExpression at 1", "INS SimpleName: updateGlobalVarReferences to MethodInvocation at 1", "INS CastExpression to ParenthesizedExpression at 0", "INS ExpressionStatement to Block at 1", "INS QualifiedName: ReferenceCollectingCallback.ReferenceMapWrapper to SimpleType: ReferenceCollectingCallback.ReferenceMapWrapper at 0", "INS SimpleName: compiler to MethodInvocation at 0", "INS SimpleName: inGlobalScope to MethodInvocation at 1", "INS SimpleType: ReferenceCollectingCallback.ReferenceMapWrapper to CastExpression at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: t to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: referenceMap to Assignment: = at 0", "INS SimpleName: getRawReferenceMap to MethodInvocation at 1", "INS SimpleName: getScopeRoot to MethodInvocation at 1"]}]}}, {"VariableReferenceCheck_diff": {"operations": ["Insert IfStatement(417) into Block(507) at 0", "Insert MethodInvocation(395) into IfStatement(417) at 0", "Insert Block(416) into IfStatement(417) at 1", "Insert SimpleName: t(393) into MethodInvocation(395) at 0", "Insert SimpleName: inGlobalScope(394) into MethodInvocation(395) at 1", "Insert ExpressionStatement(409) into Block(416) at 0", "Insert ExpressionStatement(415) into Block(416) at 1", "Insert MethodInvocation(408) into ExpressionStatement(409) at 0", "Insert Assignment: =(414) into ExpressionStatement(415) at 0", "Insert SimpleName: compiler(396) into MethodInvocation(408) at 0", "Insert SimpleName: updateGlobalVarReferences(397) into MethodInvocation(408) at 1", "Insert MethodInvocation(404) into MethodInvocation(408) at 2", "Insert MethodInvocation(407) into MethodInvocation(408) at 3", "Insert SimpleName: referenceMap(410) into Assignment: =(414) at 0", "Insert MethodInvocation(413) into Assignment: =(414) at 1", "Insert ParenthesizedExpression(402) into MethodInvocation(404) at 0", "Insert SimpleName: getRawReferenceMap(403) into MethodInvocation(404) at 1", "Insert SimpleName: t(405) into MethodInvocation(407) at 0", "Insert SimpleName: getScopeRoot(406) into MethodInvocation(407) at 1", "Insert SimpleName: compiler(411) into MethodInvocation(413) at 0", "Insert SimpleName: getGlobalVarReferences(412) into MethodInvocation(413) at 1", "Insert CastExpression(401) into ParenthesizedExpression(402) at 0", "Insert SimpleType: ReferenceCollectingCallback.ReferenceMapWrapper(399) into CastExpression(401) at 0", "Insert SimpleName: referenceMap(400) into CastExpression(401) at 1", "Insert QualifiedName: ReferenceCollectingCallback.ReferenceMapWrapper(398) into SimpleType: ReferenceCollectingCallback.ReferenceMapWrapper(399) at 0"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}