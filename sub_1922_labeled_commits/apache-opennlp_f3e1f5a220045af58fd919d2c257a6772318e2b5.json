{"application": "apache-opennlp", "csha": "f3e1f5a220045af58fd919d2c257a6772318e2b5", "files": [{"Parse_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 9", "operations": ["INS Modifier: static to FieldDeclaration at 1", "INS StringLiteral: \"[\" to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS Modifier: public to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 9", "INS SimpleType: String to FieldDeclaration at 3", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: BRACKET_LSB to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 10", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 10", "INS Modifier: final to FieldDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleType: String to FieldDeclaration at 3", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: BRACKET_RSB to VariableDeclarationFragment at 0", "INS Modifier: static to FieldDeclaration at 1", "INS Modifier: public to FieldDeclaration at 0", "INS StringLiteral: \"]\" to VariableDeclarationFragment at 1"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS IfStatement to IfStatement at 2", "INS IfStatement to IfStatement at 2"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS IfStatement to IfStatement at 2", "INS IfStatement to IfStatement at 2"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS SimpleName: startsWith to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS Block to IfStatement at 1", "INS IfStatement to IfStatement at 2", "INS IfStatement to IfStatement at 2", "INS ReturnStatement to Block at 0", "INS StringLiteral: \"-RSB-\" to ReturnStatement at 0", "INS StringLiteral: \"-RSB-\" to MethodInvocation at 2", "INS SimpleName: rest to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1", "MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV IfStatement to IfStatement at 2"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: token to MethodInvocation at 2", "INS SimpleName: BRACKET_LSB to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS StringLiteral: \"-LSB-\" to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS StringLiteral: \"-LSB-\" to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: equals to MethodInvocation at 1", "INS SimpleName: token to MethodInvocation at 2"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: BRACKET_LSB to ReturnStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS StringLiteral: \"-LSB-\" to MethodInvocation at 2", "INS SimpleName: startsWith to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: rest to MethodInvocation at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS StringLiteral: \"-LSB-\" to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS SimpleName: BRACKET_RSB to MethodInvocation at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: token to MethodInvocation at 2", "INS SimpleName: equals to MethodInvocation at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS StringLiteral: \"-RSB-\" to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS StringLiteral: \"-RSB-\" to MethodInvocation at 0", "INS SimpleName: token to MethodInvocation at 2", "INS SimpleName: equals to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: BRACKET_RSB to ReturnStatement at 0", "INS ReturnStatement to Block at 0"]}]}}, {"Parse_diff": {"operations": ["Insert FieldDeclaration(84) into TypeDeclaration: class(4161) at 9", "Insert FieldDeclaration(93) into TypeDeclaration: class(4161) at 10", "Insert Modifier: public(76) into FieldDeclaration(84) at 0", "Insert Modifier: static(77) into FieldDeclaration(84) at 1", "Insert Modifier: final(78) into FieldDeclaration(84) at 2", "Insert SimpleType: String(80) into FieldDeclaration(84) at 3", "Insert VariableDeclarationFragment(83) into FieldDeclaration(84) at 4", "Insert Modifier: public(85) into FieldDeclaration(93) at 0", "Insert Modifier: static(86) into FieldDeclaration(93) at 1", "Insert Modifier: final(87) into FieldDeclaration(93) at 2", "Insert SimpleType: String(89) into FieldDeclaration(93) at 3", "Insert VariableDeclarationFragment(92) into FieldDeclaration(93) at 4", "Insert SimpleName: String(79) into SimpleType: String(80) at 0", "Insert SimpleName: BRACKET_LSB(81) into VariableDeclarationFragment(83) at 0", "Insert StringLiteral: \"[\"(82) into VariableDeclarationFragment(83) at 1", "Insert SimpleName: String(88) into SimpleType: String(89) at 0", "Insert SimpleName: BRACKET_RSB(90) into VariableDeclarationFragment(92) at 0", "Insert StringLiteral: \"]\"(91) into VariableDeclarationFragment(92) at 1", "Insert IfStatement(2145) into IfStatement(2146) at 2", "Insert IfStatement(2206) into IfStatement(2207) at 2", "Insert IfStatement(2083) into IfStatement(2084) at 2", "Move MethodInvocation(2083) into IfStatement(2145) at 0", "Move Block(2086) into IfStatement(2145) at 1", "Insert IfStatement(2144) into IfStatement(2145) at 2", "Move MethodInvocation(2128) into IfStatement(2206) at 0", "Move Block(2131) into IfStatement(2206) at 1", "Insert IfStatement(2205) into IfStatement(2206) at 2", "Move MethodInvocation(1978) into IfStatement(2083) at 0", "Move Block(1981) into IfStatement(2083) at 1", "Insert IfStatement(2082) into IfStatement(2083) at 2", "Move MethodInvocation(2090) into IfStatement(2144) at 0", "Move Block(2093) into IfStatement(2144) at 1", "Move IfStatement(2095) into IfStatement(2144) at 2", "Move MethodInvocation(2135) into IfStatement(2205) at 0", "Move Block(2138) into IfStatement(2205) at 1", "Move IfStatement(2140) into IfStatement(2205) at 2", "Insert MethodInvocation(2003) into IfStatement(2082) at 0", "Insert Block(2006) into IfStatement(2082) at 1", "Move IfStatement(2049) into IfStatement(2082) at 2", "Insert MethodInvocation(2131) into IfStatement(2143) at 0", "Insert Block(2134) into IfStatement(2143) at 1", "Insert MethodInvocation(2192) into IfStatement(2204) at 0", "Insert Block(2195) into IfStatement(2204) at 1", "Insert SimpleName: rest(2000) into MethodInvocation(2003) at 0", "Insert SimpleName: startsWith(2001) into MethodInvocation(2003) at 1", "Insert StringLiteral: \"-RSB-\"(2002) into MethodInvocation(2003) at 2", "Insert ReturnStatement(2005) into Block(2006) at 0", "Insert MethodInvocation(2010) into IfStatement(2081) at 0", "Insert Block(2013) into IfStatement(2081) at 1", "Insert SimpleName: BRACKET_LSB(2128) into MethodInvocation(2131) at 0", "Insert SimpleName: equals(2129) into MethodInvocation(2131) at 1", "Insert SimpleName: token(2130) into MethodInvocation(2131) at 2", "Insert ReturnStatement(2133) into Block(2134) at 0", "Insert MethodInvocation(2138) into IfStatement(2142) at 0", "Insert Block(2141) into IfStatement(2142) at 1", "Insert StringLiteral: \"-LSB-\"(2189) into MethodInvocation(2192) at 0", "Insert SimpleName: equals(2190) into MethodInvocation(2192) at 1", "Insert SimpleName: token(2191) into MethodInvocation(2192) at 2", "Insert ReturnStatement(2194) into Block(2195) at 0", "Insert MethodInvocation(2199) into IfStatement(2203) at 0", "Insert Block(2202) into IfStatement(2203) at 1", "Insert StringLiteral: \"-RSB-\"(2004) into ReturnStatement(2005) at 0", "Insert SimpleName: rest(2007) into MethodInvocation(2010) at 0", "Insert SimpleName: startsWith(2008) into MethodInvocation(2010) at 1", "Insert StringLiteral: \"-LSB-\"(2009) into MethodInvocation(2010) at 2", "Insert ReturnStatement(2012) into Block(2013) at 0", "Insert StringLiteral: \"-LSB-\"(2132) into ReturnStatement(2133) at 0", "Insert SimpleName: BRACKET_RSB(2135) into MethodInvocation(2138) at 0", "Insert SimpleName: equals(2136) into MethodInvocation(2138) at 1", "Insert SimpleName: token(2137) into MethodInvocation(2138) at 2", "Insert ReturnStatement(2140) into Block(2141) at 0", "Insert SimpleName: BRACKET_LSB(2193) into ReturnStatement(2194) at 0", "Insert StringLiteral: \"-RSB-\"(2196) into MethodInvocation(2199) at 0", "Insert SimpleName: equals(2197) into MethodInvocation(2199) at 1", "Insert SimpleName: token(2198) into MethodInvocation(2199) at 2", "Insert ReturnStatement(2201) into Block(2202) at 0", "Insert StringLiteral: \"-LSB-\"(2011) into ReturnStatement(2012) at 0", "Insert StringLiteral: \"-RSB-\"(2139) into ReturnStatement(2140) at 0", "Insert SimpleName: BRACKET_RSB(2200) into ReturnStatement(2201) at 0"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}