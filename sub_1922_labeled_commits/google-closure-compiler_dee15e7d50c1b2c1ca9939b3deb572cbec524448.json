{"application": "google-closure-compiler", "csha": "dee15e7d50c1b2c1ca9939b3deb572cbec524448", "files": [{"SourceMapConsumerV3_cluster": {"actions": [{"root": "DEL Javadoc", "operations": ["DEL TagElement", "DEL TextElement: Sanity check the entry.", "DEL Javadoc"]}]}}, {"SourceMapConsumerV3_diff": {"operations": ["Delete TextElement: Sanity check the entry.(946)", "Delete TagElement(947)", "Delete Javadoc(948)"]}}, {"AbstractCommandLineRunner_cluster": {"actions": [{"root": "UPDATE from Turns on extra sanity checks  to Turns on extra validity checks ", "operations": ["UPD TextElement: Turns on extra sanity checks  from Turns on extra sanity checks  to Turns on extra validity checks "]}]}}, {"AbstractCommandLineRunner_diff": {"operations": ["Update TextElement: Turns on extra sanity checks (7117) to Turns on extra validity checks "]}}, {"CodeGenerator_cluster": {"actions": []}}, {"CodeGenerator_diff": {"operations": []}}, {"CommandLineRunner_cluster": {"actions": []}}, {"CommandLineRunner_diff": {"operations": []}}, {"Compiler_cluster": {"actions": [{"root": "UPDATE from maybeSanityCheck to maybeRunValidityCheck", "operations": ["UPD SimpleName: maybeSanityCheck from maybeSanityCheck to maybeRunValidityCheck", "UPD SimpleName: maybeSanityCheck from maybeSanityCheck to maybeRunValidityCheck"]}, {"root": "UPDATE from runSanityCheck to runValidityCheck", "operations": ["UPD SimpleName: runSanityCheck from runSanityCheck to runValidityCheck", "UPD SimpleName: runSanityCheck from runSanityCheck to runValidityCheck", "UPD SimpleName: runSanityCheck from runSanityCheck to runValidityCheck", "UPD SimpleName: runSanityCheck from runSanityCheck to runValidityCheck"]}, {"root": "UPDATE from sanityCheck to validityCheck", "operations": ["UPD SimpleName: sanityCheck from sanityCheck to validityCheck", "UPD SimpleName: sanityCheck from sanityCheck to validityCheck", "UPD SimpleName: sanityCheck from sanityCheck to validityCheck"]}, {"root": "UPDATE from \"sanityCheck\" to \"validityCheck\"", "operations": ["UPD StringLiteral: \"sanityCheck\" from \"sanityCheck\" to \"validityCheck\""]}, {"root": "UPDATE from setSanityCheck to setValidityCheck", "operations": ["UPD SimpleName: setSanityCheck from setSanityCheck to setValidityCheck"]}, {"root": "UPDATE from SanityCheck to ValidityCheck", "operations": ["UPD SimpleType: SanityCheck from SanityCheck to ValidityCheck", "UPD SimpleName: SanityCheck from SanityCheck to ValidityCheck"]}]}}, {"Compiler_diff": {"operations": ["Update SimpleName: maybeSanityCheck(3137) to maybeRunValidityCheck", "Update SimpleName: runSanityCheck(3150) to runValidityCheck", "Update SimpleName: sanityCheck(3109) to validityCheck", "Update StringLiteral: \"sanityCheck\"(3112) to \"validityCheck\"", "Update SimpleName: maybeSanityCheck(3287) to maybeRunValidityCheck", "Update SimpleName: sanityCheck(3151) to validityCheck", "Update SimpleName: runSanityCheck(2586) to runValidityCheck", "Update SimpleName: setSanityCheck(3005) to setValidityCheck", "Update SimpleName: sanityCheck(3006) to validityCheck", "Update SimpleName: runSanityCheck(3141) to runValidityCheck", "Update SimpleType: SanityCheck(3125) to ValidityCheck", "Update SimpleName: SanityCheck(3124) to ValidityCheck", "Update SimpleName: runSanityCheck(5306) to runValidityCheck"]}}, {"CompilerOptions_cluster": {"actions": [{"root": "UPDATE from Configures the compiler to run expensive sanity checks after to Configures the compiler to run expensive validity checks after", "operations": ["UPD TextElement: Configures the compiler to run expensive sanity checks after from Configures the compiler to run expensive sanity checks after to Configures the compiler to run expensive validity checks after"]}, {"root": "UPDATE from When to do the extra sanity checks  to When to do the extra validity checks ", "operations": ["UPD TextElement: When to do the extra sanity checks  from When to do the extra sanity checks  to When to do the extra validity checks "]}, {"root": "UPDATE from Don't do any extra sanity checks. to Don't do any extra checks.", "operations": ["UPD TextElement: Don't do any extra sanity checks. from Don't do any extra sanity checks. to Don't do any extra checks."]}]}}, {"CompilerOptions_diff": {"operations": ["Update TextElement: Configures the compiler to run expensive sanity checks after(498) to Configures the compiler to run expensive validity checks after", "Update TextElement: When to do the extra sanity checks (8639) to When to do the extra validity checks ", "Update TextElement: Don't do any extra sanity checks.(8645) to Don't do any extra checks."]}}, {"DefaultPassConfig_cluster": {"actions": [{"root": "UPDATE from sanityCheckAst to checkAstValidity", "operations": ["UPD SimpleName: sanityCheckAst from sanityCheckAst to checkAstValidity", "UPD SimpleName: sanityCheckAst from sanityCheckAst to checkAstValidity"]}, {"root": "UPDATE from sanityCheckVars to varCheckValidity", "operations": ["UPD SimpleName: sanityCheckVars from sanityCheckVars to varCheckValidity", "UPD SimpleName: sanityCheckVars from sanityCheckVars to varCheckValidity"]}, {"root": "UPDATE from \"sanityCheckAst\" to \"checkAstValidity\"", "operations": ["UPD StringLiteral: \"sanityCheckAst\" from \"sanityCheckAst\" to \"checkAstValidity\""]}, {"root": "UPDATE from \"sanityCheckVars\" to \"varCheckValidity\"", "operations": ["UPD StringLiteral: \"sanityCheckVars\" from \"sanityCheckVars\" to \"varCheckValidity\""]}, {"root": "DEL Javadoc", "operations": ["DEL Javadoc", "DEL TextElement: Checks that all variables are defined. ", "DEL TagElement"]}]}}, {"DefaultPassConfig_diff": {"operations": ["Update SimpleName: sanityCheckAst(9416) to checkAstValidity", "Update SimpleName: sanityCheckVars(9461) to varCheckValidity", "Update StringLiteral: \"sanityCheckAst\"(9419) to \"checkAstValidity\"", "Update StringLiteral: \"sanityCheckVars\"(9464) to \"varCheckValidity\"", "Update SimpleName: sanityCheckAst(2117) to checkAstValidity", "Update SimpleName: sanityCheckVars(2122) to varCheckValidity", "Delete TextElement: Checks that all variables are defined. (9409)", "Delete TagElement(9410)", "Delete Javadoc(9411)"]}}, {"Es6RewriteGenerators_cluster": {"actions": [{"root": "INS VariableDeclarationStatement to Block at 6", "operations": ["INS SimpleName: Node to SimpleType: Node at 0", "INS SimpleType: Node to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 6"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from Because sanity checks happen between passes, we need to report the change if the generator to Because validity checks happen between passes, we need to report the change if the generator", "operations": ["UPD TextElement: Because sanity checks happen between passes, we need to report the change if the generator from Because sanity checks happen between passes, we need to report the change if the generator to Because validity checks happen between passes, we need to report the change if the generator"]}]}}, {"Es6RewriteGenerators_diff": {"operations": ["Insert VariableDeclarationStatement(3646) into Block(3818) at 6", "Insert SimpleType: Node(3643) into VariableDeclarationStatement(3646) at 0", "Move VariableDeclarationFragment(3642) into VariableDeclarationStatement(3646) at 1", "Update TextElement: Because sanity checks happen between passes, we need to report the change if the generator(5425) to Because validity checks happen between passes, we need to report the change if the generator", "Insert SimpleName: Node(3642) into SimpleType: Node(3643) at 0"]}}, {"InlineFunctions_cluster": {"actions": [{"root": "UPDATE from Sanity check to verify, that expression rewriting didn't make a call inaccessible.  to Check to verify that expression rewriting didn't make a call inaccessible. ", "operations": ["UPD TextElement: Sanity check to verify, that expression rewriting didn't make a call inaccessible.  from Sanity check to verify, that expression rewriting didn't make a call inaccessible.  to Check to verify that expression rewriting didn't make a call inaccessible. "]}]}}, {"InlineFunctions_diff": {"operations": ["Update TextElement: Sanity check to verify, that expression rewriting didn't make a call inaccessible. (2803) to Check to verify that expression rewriting didn't make a call inaccessible. "]}}, {"J2clConstantHoisterPass_cluster": {"actions": []}}, {"J2clConstantHoisterPass_diff": {"operations": []}}, {"PhaseOptimizer_cluster": {"actions": [{"root": "UPDATE from setSanityCheck to setValidityCheck", "operations": ["UPD SimpleName: setSanityCheck from setSanityCheck to setValidityCheck"]}, {"root": "UPDATE from maybeSanityCheck to maybeRunValidityCheck", "operations": ["UPD SimpleName: maybeSanityCheck from maybeSanityCheck to maybeRunValidityCheck", "UPD SimpleName: maybeSanityCheck from maybeSanityCheck to maybeRunValidityCheck"]}, {"root": "UPDATE from sanityCheck to validityCheck", "operations": ["UPD SimpleName: sanityCheck from sanityCheck to validityCheck", "UPD SimpleName: sanityCheck from sanityCheck to validityCheck", "UPD SimpleName: sanityCheck from sanityCheck to validityCheck", "UPD SimpleName: sanityCheck from sanityCheck to validityCheck", "UPD SimpleName: sanityCheck from sanityCheck to validityCheck", "UPD SimpleName: sanityCheck from sanityCheck to validityCheck", "UPD SimpleName: sanityCheck from sanityCheck to validityCheck"]}, {"root": "UPDATE from Adds a sanity checker to be run after every pass. Intended for development. to Adds a checker to be run after every pass. Intended for development.", "operations": ["UPD TextElement: Adds a sanity checker to be run after every pass. Intended for development. from Adds a sanity checker to be run after every pass. Intended for development. to Adds a checker to be run after every pass. Intended for development."]}, {"root": "UPDATE from Runs the sanity check if it is available. to Runs the validity check if it is available.", "operations": ["UPD TextElement: Runs the sanity check if it is available. from Runs the sanity check if it is available. to Runs the validity check if it is available."]}, {"root": "UPDATE from \"Sanity check failed for pass: \" to \"Validity checks failed for pass: \"", "operations": ["UPD StringLiteral: \"Sanity check failed for pass: \" from \"Sanity check failed for pass: \" to \"Validity checks failed for pass: \""]}, {"root": "UPDATE from \"Sanity check failed for \" to \"Validity check failed for \"", "operations": ["UPD StringLiteral: \"Sanity check failed for \" from \"Sanity check failed for \" to \"Validity check failed for \""]}]}}, {"PhaseOptimizer_diff": {"operations": ["Update SimpleName: setSanityCheck(503) to setValidityCheck", "Update SimpleName: maybeSanityCheck(655) to maybeRunValidityCheck", "Update SimpleName: sanityCheck(84) to validityCheck", "Update SimpleName: sanityCheck(506) to validityCheck", "Update TextElement: Adds a sanity checker to be run after every pass. Intended for development.(499) to Adds a checker to be run after every pass. Intended for development.", "Update TextElement: Runs the sanity check if it is available.(650) to Runs the validity check if it is available.", "Update SimpleName: sanityCheck(511) to validityCheck", "Update SimpleName: sanityCheck(668) to validityCheck", "Update SimpleName: sanityCheck(509) to validityCheck", "Update SimpleName: sanityCheck(809) to validityCheck", "Update SimpleName: sanityCheck(674) to validityCheck", "Update SimpleName: maybeSanityCheck(909) to maybeRunValidityCheck", "Update StringLiteral: \"Sanity check failed for pass: \"(696) to \"Validity checks failed for pass: \"", "Update StringLiteral: \"Sanity check failed for \"(922) to \"Validity check failed for \""]}}, {"PrepareAst_cluster": {"actions": []}}, {"PrepareAst_diff": {"operations": []}}, {"SourceInformationAnnotator_cluster": {"actions": [{"root": "UPDATE from doSanityChecks to checkAnnotated", "operations": ["UPD SimpleName: doSanityChecks from doSanityChecks to checkAnnotated", "UPD SimpleName: doSanityChecks from doSanityChecks to checkAnnotated", "UPD SimpleName: doSanityChecks from doSanityChecks to checkAnnotated", "UPD SimpleName: doSanityChecks from doSanityChecks to checkAnnotated", "UPD SimpleName: doSanityChecks from doSanityChecks to checkAnnotated"]}]}}, {"SourceInformationAnnotator_diff": {"operations": ["Update SimpleName: doSanityChecks(32) to checkAnnotated", "Update SimpleName: doSanityChecks(42) to checkAnnotated", "Update SimpleName: doSanityChecks(53) to checkAnnotated", "Update SimpleName: doSanityChecks(75) to checkAnnotated", "Update SimpleName: doSanityChecks(51) to checkAnnotated"]}}, {"VarCheck_cluster": {"actions": [{"root": "UPDATE from sanityCheck to validityCheck", "operations": ["UPD SimpleName: sanityCheck from sanityCheck to validityCheck", "UPD SimpleName: sanityCheck from sanityCheck to validityCheck", "UPD SimpleName: sanityCheck from sanityCheck to validityCheck", "UPD SimpleName: sanityCheck from sanityCheck to validityCheck", "UPD SimpleName: sanityCheck from sanityCheck to validityCheck", "UPD SimpleName: sanityCheck from sanityCheck to validityCheck", "UPD SimpleName: sanityCheck from sanityCheck to validityCheck", "UPD SimpleName: sanityCheck from sanityCheck to validityCheck"]}]}}, {"VarCheck_diff": {"operations": ["Update SimpleName: sanityCheck(179) to validityCheck", "Update SimpleName: sanityCheck(210) to validityCheck", "Update SimpleName: sanityCheck(253) to validityCheck", "Update SimpleName: sanityCheck(238) to validityCheck", "Update SimpleName: sanityCheck(296) to validityCheck", "Update SimpleName: sanityCheck(236) to validityCheck", "Update SimpleName: sanityCheck(584) to validityCheck", "Update SimpleName: sanityCheck(667) to validityCheck"]}}, {"DepsFileParser_cluster": {"actions": []}}, {"DepsFileParser_diff": {"operations": []}}, {"JsFileParser_cluster": {"actions": []}}, {"JsFileParser_diff": {"operations": []}}, {"JsFunctionParser_cluster": {"actions": []}}, {"JsFunctionParser_diff": {"operations": []}}], "commit_stats": [{"total_files": 23, "deleted_files": 2, "testing": "True", "maintenance": "False", "build": "False"}]}