{"application": "apache-giraph", "csha": "03ade425dd5a65d3a713d5e7d85aa7605956fbd2", "files": [{"CentralizedServiceWorker_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 32", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 32", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: Get the number of partitions owned by this worker to TagElement at 0", "INS PrimitiveType: int to MethodDeclaration at 1", "INS TagElement: @return to Javadoc at 1", "INS SimpleName: getNumPartitionsOwned to MethodDeclaration at 2", "INS TagElement to Javadoc at 0", "INS TextElement:  number of partitions owned to TagElement: @return at 0"]}]}}, {"CentralizedServiceWorker_diff": {"operations": ["Insert MethodDeclaration(435) into TypeDeclaration: interface(436) at 32", "Insert Javadoc(432) into MethodDeclaration(435) at 0", "Insert PrimitiveType: int(433) into MethodDeclaration(435) at 1", "Insert SimpleName: getNumPartitionsOwned(434) into MethodDeclaration(435) at 2", "Insert TagElement(429) into Javadoc(432) at 0", "Insert TagElement: @return(431) into Javadoc(432) at 1", "Insert TextElement: Get the number of partitions owned by this worker(428) into TagElement(429) at 0", "Insert TextElement:  number of partitions owned(430) into TagElement: @return(431) at 0"]}}, {"ServerData_cluster": {"actions": [{"root": "UPDATE from org.apache.giraph.partition.DiskBackedPartitionStore to org.apache.giraph.ooc.DiskBackedPartitionStore", "operations": ["UPD QualifiedName: org.apache.giraph.partition.DiskBackedPartitionStore from org.apache.giraph.partition.DiskBackedPartitionStore to org.apache.giraph.ooc.DiskBackedPartitionStore"]}, {"root": "INS MethodInvocation to ClassInstanceCreation at 3", "operations": ["INS SimpleName: getServiceWorker to MethodInvocation at 0", "INS MethodInvocation to ClassInstanceCreation at 3"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.giraph.edge.EdgeStore", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.giraph.edge.EdgeStoreFactory"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: V", "DEL SimpleName: E", "DEL SimpleName: V", "DEL SimpleName: edgeStore", "DEL SimpleName: I", "DEL TextElement: Edge store for this worker. ", "DEL FieldDeclaration", "DEL TagElement", "DEL Javadoc", "DEL VariableDeclarationFragment", "DEL ParameterizedType: EdgeStore<I,V,E>", "DEL SimpleType: I", "DEL SimpleType: EdgeStore", "DEL Modifier: private", "DEL Modifier: final", "DEL SimpleType: E", "DEL SimpleName: EdgeStore"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: conf", "DEL MethodInvocation", "DEL SimpleName: createEdgeStoreFactory", "DEL SimpleType: E", "DEL SimpleName: I", "DEL SimpleName: E", "DEL SimpleName: V", "DEL VariableDeclarationStatement", "DEL SimpleType: EdgeStoreFactory", "DEL SimpleType: V", "DEL SimpleName: edgeStoreFactory", "DEL ParameterizedType: EdgeStoreFactory<I,V,E>", "DEL SimpleName: EdgeStoreFactory", "DEL SimpleType: I", "DEL VariableDeclarationFragment"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: service", "DEL SimpleName: context", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL ExpressionStatement", "DEL SimpleName: initialize", "DEL SimpleName: edgeStoreFactory"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: edgeStore", "DEL SimpleName: newStore", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: edgeStoreFactory"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: E", "DEL SimpleName: edgeStore", "DEL ParameterizedType: EdgeStore<I,V,E>", "DEL SimpleName: I", "DEL Modifier: public", "DEL ReturnStatement", "DEL Block", "DEL SimpleType: V", "DEL MethodDeclaration", "DEL SimpleName: E", "DEL SimpleType: I", "DEL SimpleName: EdgeStore", "DEL SimpleType: EdgeStore", "DEL SimpleName: V", "DEL SimpleName: getEdgeStore"]}]}}, {"ServerData_diff": {"operations": ["Update QualifiedName: org.apache.giraph.partition.DiskBackedPartitionStore(44) to org.apache.giraph.ooc.DiskBackedPartitionStore", "Insert MethodInvocation(477) into ClassInstanceCreation(478) at 3", "Insert SimpleName: getServiceWorker(476) into MethodInvocation(477) at 0", "Delete QualifiedName: org.apache.giraph.edge.EdgeStore(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.giraph.edge.EdgeStoreFactory(36)", "Delete ImportDeclaration(37)", "Delete TextElement: Edge store for this worker. (146)", "Delete TagElement(147)", "Delete Javadoc(148)", "Delete Modifier: private(149)", "Delete Modifier: final(150)", "Delete SimpleName: EdgeStore(151)", "Delete SimpleType: EdgeStore(152)", "Delete SimpleName: I(153)", "Delete SimpleType: I(154)", "Delete SimpleName: V(155)", "Delete SimpleType: V(156)", "Delete SimpleName: E(157)", "Delete SimpleType: E(158)", "Delete ParameterizedType: EdgeStore<I,V,E>(159)", "Delete SimpleName: edgeStore(160)", "Delete VariableDeclarationFragment(161)", "Delete FieldDeclaration(162)", "Delete SimpleName: EdgeStoreFactory(502)", "Delete SimpleType: EdgeStoreFactory(503)", "Delete SimpleName: I(504)", "Delete SimpleType: I(505)", "Delete SimpleName: V(506)", "Delete SimpleType: V(507)", "Delete SimpleName: E(508)", "Delete SimpleType: E(509)", "Delete ParameterizedType: EdgeStoreFactory<I,V,E>(510)", "Delete SimpleName: edgeStoreFactory(511)", "Delete SimpleName: conf(512)", "Delete SimpleName: createEdgeStoreFactory(513)", "Delete MethodInvocation(514)", "Delete VariableDeclarationFragment(515)", "Delete VariableDeclarationStatement(516)", "Delete SimpleName: edgeStoreFactory(517)", "Delete SimpleName: initialize(518)", "Delete SimpleName: service(519)", "Delete SimpleName: conf(520)", "Delete SimpleName: context(521)", "Delete MethodInvocation(522)", "Delete ExpressionStatement(523)", "Delete SimpleName: edgeStore(524)", "Delete SimpleName: edgeStoreFactory(525)", "Delete SimpleName: newStore(526)", "Delete MethodInvocation(527)", "Delete Assignment: =(528)", "Delete ExpressionStatement(529)", "Delete Modifier: public(553)", "Delete SimpleName: EdgeStore(554)", "Delete SimpleType: EdgeStore(555)", "Delete SimpleName: I(556)", "Delete SimpleType: I(557)", "Delete SimpleName: V(558)", "Delete SimpleType: V(559)", "Delete SimpleName: E(560)", "Delete SimpleType: E(561)", "Delete ParameterizedType: EdgeStore<I,V,E>(562)", "Delete SimpleName: getEdgeStore(563)", "Delete SimpleName: edgeStore(564)", "Delete ReturnStatement(565)", "Delete Block(566)", "Delete MethodDeclaration(567)"]}}, {"GiraphConfiguration_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 100", "operations": ["INS PrimitiveType: int to MethodDeclaration at 1", "INS Block to MethodDeclaration at 3", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: getNumOocThreads to MethodDeclaration at 2", "INS SimpleName: NUM_OOC_THREADS to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 100", "INS ThisExpression to MethodInvocation at 2"]}]}}, {"GiraphConfiguration_diff": {"operations": ["Insert MethodDeclaration(2111) into TypeDeclaration: class(2810) at 100", "Insert Modifier: public(2102) into MethodDeclaration(2111) at 0", "Insert PrimitiveType: int(2103) into MethodDeclaration(2111) at 1", "Insert SimpleName: getNumOocThreads(2104) into MethodDeclaration(2111) at 2", "Insert Block(2110) into MethodDeclaration(2111) at 3", "Insert ReturnStatement(2109) into Block(2110) at 0", "Insert MethodInvocation(2108) into ReturnStatement(2109) at 0", "Insert SimpleName: NUM_OOC_THREADS(2105) into MethodInvocation(2108) at 0", "Insert SimpleName: get(2106) into MethodInvocation(2108) at 1", "Insert ThisExpression(2107) into MethodInvocation(2108) at 2"]}}, {"GiraphConstants_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 54", "operations": ["INS ImportDeclaration to CompilationUnit at 54", "INS QualifiedName: org.apache.giraph.ooc.JVMMemoryEstimator to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 55", "operations": ["INS ImportDeclaration to CompilationUnit at 55", "INS QualifiedName: org.apache.giraph.ooc.MemoryEstimator to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: interface", "operations": ["MOV FieldDeclaration to TypeDeclaration: interface at 151"]}, {"root": "INS FieldDeclaration to TypeDeclaration: interface at 4", "operations": ["INS TextElement: 1MB in bytes  to TagElement at 0", "INS FieldDeclaration to TypeDeclaration: interface at 4", "INS InfixExpression: * to VariableDeclarationFragment at 1", "INS PrimitiveType: int to FieldDeclaration at 1", "INS Javadoc to FieldDeclaration at 0", "INS NumberLiteral: 1024 to InfixExpression: * at 0", "INS NumberLiteral: 1024 to InfixExpression: * at 1", "INS TagElement to Javadoc at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: ONE_MB to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: interface at 153", "operations": ["INS NumberLiteral: 1 to ClassInstanceCreation at 2", "INS StringLiteral: \"Number of threads participating in swapping data to disk.\" to ClassInstanceCreation at 3", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS FieldDeclaration to TypeDeclaration: interface at 153", "INS SimpleName: NUM_OOC_THREADS to VariableDeclarationFragment at 0", "INS StringLiteral: \"giraph.numOutOfCoreThreads\" to ClassInstanceCreation at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: interface at 154", "operations": ["INS FieldDeclaration to TypeDeclaration: interface at 154"]}, {"root": "INS Javadoc to FieldDeclaration at 0", "operations": ["INS TextElement: Memory estimator class used in adaptive out-of-core mechanism for deciding to TagElement at 0", "INS Javadoc to FieldDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TextElement: when data should go to disk. to TagElement at 1"]}, {"root": "INS ParameterizedType: ClassConfOption<MemoryEstimator> to FieldDeclaration at 1", "operations": ["INS SimpleName: MemoryEstimator to SimpleType: MemoryEstimator at 0", "INS SimpleType: ClassConfOption to ParameterizedType: ClassConfOption<MemoryEstimator> at 0", "INS SimpleType: MemoryEstimator to ParameterizedType: ClassConfOption<MemoryEstimator> at 1", "INS SimpleName: ClassConfOption to SimpleType: ClassConfOption at 0", "INS ParameterizedType: ClassConfOption<MemoryEstimator> to FieldDeclaration at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 2", "MOV Javadoc to FieldDeclaration at 0", "MOV SimpleType: IntConfOption to FieldDeclaration at 1"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV Javadoc to FieldDeclaration at 0", "MOV SimpleType: IntConfOption to FieldDeclaration at 1"]}, {"root": "UPDATE from MAX_PARTITIONS_IN_MEMORY to OUT_OF_CORE_MEM_ESTIMATOR", "operations": ["UPD SimpleName: MAX_PARTITIONS_IN_MEMORY from MAX_PARTITIONS_IN_MEMORY to OUT_OF_CORE_MEM_ESTIMATOR"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: ClassConfOption to MethodInvocation at 0", "INS SimpleName: MemoryEstimator to SimpleType: MemoryEstimator at 0", "INS SimpleType: JVMMemoryEstimator to TypeLiteral at 0", "INS StringLiteral: \"Memory estimator class used for out-of-core decisions\" to MethodInvocation at 5", "INS TypeLiteral to MethodInvocation at 4", "INS SimpleName: create to MethodInvocation at 1", "INS StringLiteral: \"giraph.outOfCoreMemoryEstimator\" to MethodInvocation at 2", "INS SimpleType: MemoryEstimator to TypeLiteral at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: JVMMemoryEstimator to SimpleType: JVMMemoryEstimator at 0", "INS TypeLiteral to MethodInvocation at 3"]}, {"root": "UPDATE from MAX_STICKY_PARTITIONS to MAX_PARTITIONS_IN_MEMORY", "operations": ["UPD SimpleName: MAX_STICKY_PARTITIONS from MAX_STICKY_PARTITIONS to MAX_PARTITIONS_IN_MEMORY"]}, {"root": "UPDATE from Set number of sticky partitions if sticky mode is enabled.   to Number of threads participating in swapping graph/messages to disk. ", "operations": ["UPD TextElement: Set number of sticky partitions if sticky mode is enabled.   from Set number of sticky partitions if sticky mode is enabled.   to Number of threads participating in swapping graph/messages to disk. "]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: IntConfOption to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: IntConfOption to ClassInstanceCreation at 0"]}, {"root": "UPDATE from \"giraph.stickyPartitions\" to \"giraph.maxPartitionsInMemory\"", "operations": ["UPD StringLiteral: \"giraph.stickyPartitions\" from \"giraph.stickyPartitions\" to \"giraph.maxPartitionsInMemory\""]}, {"root": "INS InfixExpression: + to ClassInstanceCreation at 3", "operations": ["INS StringLiteral: \"Maximum number of partitions to hold in memory for each worker. By\" to InfixExpression: + at 0", "INS InfixExpression: + to ClassInstanceCreation at 3", "INS StringLiteral: \" default it is set to 0 (for adaptive out-of-core mechanism\" to InfixExpression: + at 1"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL StringLiteral: \"giraph.maxPartitionsInMemory\"", "DEL NumberLiteral: 10", "DEL ClassInstanceCreation", "DEL StringLiteral: \"Maximum number of partitions to hold in memory for each worker.\""]}, {"root": "DEL StringLiteral: \"Set number of sticky partitions if sticky mode is enabled.\"", "operations": ["DEL StringLiteral: \"Set number of sticky partitions if sticky mode is enabled.\""]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration"]}]}}, {"GiraphConstants_diff": {"operations": ["Insert ImportDeclaration(109) into CompilationUnit(3201) at 54", "Insert ImportDeclaration(111) into CompilationUnit(3201) at 55", "Move FieldDeclaration(2648) into TypeDeclaration: interface(3200) at 151", "Insert QualifiedName: org.apache.giraph.ooc.JVMMemoryEstimator(108) into ImportDeclaration(109) at 0", "Insert QualifiedName: org.apache.giraph.ooc.MemoryEstimator(110) into ImportDeclaration(111) at 0", "Insert FieldDeclaration(154) into TypeDeclaration: interface(3200) at 4", "Insert FieldDeclaration(2667) into TypeDeclaration: interface(3200) at 153", "Insert FieldDeclaration(2683) into TypeDeclaration: interface(3200) at 154", "Insert Javadoc(147) into FieldDeclaration(154) at 0", "Insert PrimitiveType: int(148) into FieldDeclaration(154) at 1", "Insert VariableDeclarationFragment(153) into FieldDeclaration(154) at 2", "Insert Javadoc(2634) into FieldDeclaration(2653) at 0", "Insert ParameterizedType: ClassConfOption<MemoryEstimator>(2639) into FieldDeclaration(2653) at 1", "Move Javadoc(2651) into FieldDeclaration(2667) at 0", "Move SimpleType: IntConfOption(2653) into FieldDeclaration(2667) at 1", "Insert VariableDeclarationFragment(2666) into FieldDeclaration(2667) at 2", "Move Javadoc(2637) into FieldDeclaration(2683) at 0", "Move SimpleType: IntConfOption(2639) into FieldDeclaration(2683) at 1", "Move VariableDeclarationFragment(2661) into FieldDeclaration(2683) at 2", "Insert TagElement(146) into Javadoc(147) at 0", "Insert SimpleName: ONE_MB(149) into VariableDeclarationFragment(153) at 0", "Insert InfixExpression: *(152) into VariableDeclarationFragment(153) at 1", "Insert TagElement(2633) into Javadoc(2634) at 0", "Insert SimpleType: ClassConfOption(2636) into ParameterizedType: ClassConfOption<MemoryEstimator>(2639) at 0", "Insert SimpleType: MemoryEstimator(2638) into ParameterizedType: ClassConfOption<MemoryEstimator>(2639) at 1", "Update SimpleName: MAX_PARTITIONS_IN_MEMORY(2640) to OUT_OF_CORE_MEM_ESTIMATOR", "Insert MethodInvocation(2651) into VariableDeclarationFragment(2652) at 1", "Insert SimpleName: NUM_OOC_THREADS(2659) into VariableDeclarationFragment(2666) at 0", "Insert ClassInstanceCreation(2665) into VariableDeclarationFragment(2666) at 1", "Update SimpleName: MAX_STICKY_PARTITIONS(2654) to MAX_PARTITIONS_IN_MEMORY", "Insert TextElement: 1MB in bytes (145) into TagElement(146) at 0", "Insert NumberLiteral: 1024(150) into InfixExpression: *(152) at 0", "Insert NumberLiteral: 1024(151) into InfixExpression: *(152) at 1", "Insert TextElement: Memory estimator class used in adaptive out-of-core mechanism for deciding(2631) into TagElement(2633) at 0", "Insert TextElement: when data should go to disk.(2632) into TagElement(2633) at 1", "Insert SimpleName: ClassConfOption(2635) into SimpleType: ClassConfOption(2636) at 0", "Insert SimpleName: MemoryEstimator(2637) into SimpleType: MemoryEstimator(2638) at 0", "Insert SimpleName: ClassConfOption(2641) into MethodInvocation(2651) at 0", "Insert SimpleName: create(2642) into MethodInvocation(2651) at 1", "Insert StringLiteral: \"giraph.outOfCoreMemoryEstimator\"(2643) into MethodInvocation(2651) at 2", "Insert TypeLiteral(2646) into MethodInvocation(2651) at 3", "Insert TypeLiteral(2649) into MethodInvocation(2651) at 4", "Insert StringLiteral: \"Memory estimator class used for out-of-core decisions\"(2650) into MethodInvocation(2651) at 5", "Update TextElement: Set number of sticky partitions if sticky mode is enabled.  (2649) to Number of threads participating in swapping graph/messages to disk. ", "Move SimpleType: IntConfOption(2656) into ClassInstanceCreation(2665) at 0", "Insert StringLiteral: \"giraph.numOutOfCoreThreads\"(2662) into ClassInstanceCreation(2665) at 1", "Insert NumberLiteral: 1(2663) into ClassInstanceCreation(2665) at 2", "Insert StringLiteral: \"Number of threads participating in swapping data to disk.\"(2664) into ClassInstanceCreation(2665) at 3", "Move SimpleType: IntConfOption(2642) into ClassInstanceCreation(2681) at 0", "Update StringLiteral: \"giraph.stickyPartitions\"(2657) to \"giraph.maxPartitionsInMemory\"", "Insert InfixExpression: +(2680) into ClassInstanceCreation(2681) at 3", "Insert SimpleType: JVMMemoryEstimator(2645) into TypeLiteral(2646) at 0", "Insert SimpleType: MemoryEstimator(2648) into TypeLiteral(2649) at 0", "Insert StringLiteral: \"Maximum number of partitions to hold in memory for each worker. By\"(2678) into InfixExpression: +(2680) at 0", "Insert StringLiteral: \" default it is set to 0 (for adaptive out-of-core mechanism\"(2679) into InfixExpression: +(2680) at 1", "Insert SimpleName: JVMMemoryEstimator(2644) into SimpleType: JVMMemoryEstimator(2645) at 0", "Insert SimpleName: MemoryEstimator(2647) into SimpleType: MemoryEstimator(2648) at 0", "Delete StringLiteral: \"giraph.maxPartitionsInMemory\"(2643)", "Delete NumberLiteral: 10(2644)", "Delete StringLiteral: \"Maximum number of partitions to hold in memory for each worker.\"(2645)", "Delete ClassInstanceCreation(2646)", "Delete StringLiteral: \"Set number of sticky partitions if sticky mode is enabled.\"(2659)", "Delete FieldDeclaration(2662)"]}}, {"AbstractEdgeStore_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 20", "MOV ImportDeclaration to CompilationUnit at 20"]}, {"root": "INS ImportDeclaration to CompilationUnit at 18", "operations": ["INS ImportDeclaration to CompilationUnit at 18", "INS QualifiedName: java.io.IOException to ImportDeclaration at 0"]}, {"root": "UPDATE from java.util.concurrent.ArrayBlockingQueue to java.io.DataInput", "operations": ["UPD QualifiedName: java.util.concurrent.ArrayBlockingQueue from java.util.concurrent.ArrayBlockingQueue to java.io.DataInput"]}, {"root": "UPDATE from java.util.concurrent.BlockingQueue to java.io.DataOutput", "operations": ["UPD QualifiedName: java.util.concurrent.BlockingQueue from java.util.concurrent.BlockingQueue to java.io.DataOutput"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 23", "operations": ["INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: DataOutput to SimpleType: DataOutput at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: DataOutput to SingleVariableDeclaration at 0", "INS TextElement: Writes the given key to the output to TagElement at 0", "INS SimpleName: output to SingleVariableDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 3", "INS SimpleType: K to SingleVariableDeclaration at 0", "INS TextElement:  output to write the key to to TagElement: @param at 1", "INS TextElement:  input key to be written to TagElement: @param at 1", "INS MethodDeclaration to TypeDeclaration: class at 23", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: output to TagElement: @param at 0", "INS SimpleType: IOException to MethodDeclaration at 7", "INS SimpleName: key to TagElement: @param at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: key to SingleVariableDeclaration at 1", "INS SimpleName: K to SimpleType: K at 0", "INS Modifier: abstract to MethodDeclaration at 2", "INS SimpleName: writeVertexKey to MethodDeclaration at 4", "INS TagElement: @param to Javadoc at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 24", "INS SimpleType: K to MethodDeclaration at 3", "INS SimpleType: DataInput to SingleVariableDeclaration at 0", "INS Modifier: abstract to MethodDeclaration at 2", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @param to Javadoc at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleType: IOException to MethodDeclaration at 6", "INS TextElement:  input to read the key from to TagElement: @param at 1", "INS TextElement:  Key read from the input to TagElement: @return at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @return to Javadoc at 2", "INS TextElement: Reads the given key from the input to TagElement at 0", "INS SimpleName: readVertexKey to MethodDeclaration at 4", "INS SimpleName: input to TagElement: @param at 0", "INS SimpleName: DataInput to SimpleType: DataInput at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: K to SimpleType: K at 0", "INS SimpleName: input to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 26", "operations": ["INS SimpleName: containsKey to MethodInvocation at 1", "INS PrimitiveType: boolean to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 26", "INS ReturnStatement to Block at 0", "INS SimpleName: hasPartitionEdges to MethodDeclaration at 3", "INS SimpleName: transientEdges to MethodInvocation at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: partitionId to SingleVariableDeclaration at 1", "INS SimpleName: partitionId to MethodInvocation at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 27", "operations": ["INS ParameterizedType: Map.Entry<K,OutEdges<I,E>> to SingleVariableDeclaration at 0", "INS SimpleType: E to ParameterizedType: OutEdges<I,E> at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS MethodInvocation to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: edge to MethodInvocation at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: edges to MethodInvocation at 0", "INS SimpleName: K to SimpleType: K at 0", "INS SimpleName: output to SingleVariableDeclaration at 1", "INS SimpleType: Map.Entry to ParameterizedType: Map.Entry<K,OutEdges<I,E>> at 0", "INS SimpleName: writeInt to MethodInvocation at 1", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleName: getValue to MethodInvocation at 1", "INS SimpleName: writeVertexKey to MethodInvocation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: IOException to MethodDeclaration at 6", "INS SimpleName: edge to SingleVariableDeclaration at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleType: K to ParameterizedType: Map.Entry<K,OutEdges<I,E>> at 1", "INS SimpleName: output to MethodInvocation at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: I to ParameterizedType: OutEdges<I,E> at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS QualifiedName: Map.Entry to SimpleType: Map.Entry at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodInvocation to MethodInvocation at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: edges to MethodInvocation at 0", "INS SimpleName: OutEdges to SimpleType: OutEdges at 0", "INS SimpleType: DataOutput to SingleVariableDeclaration at 0", "INS SimpleType: OutEdges to ParameterizedType: OutEdges<I,E> at 0", "INS SimpleName: entrySet to MethodInvocation at 1", "INS SimpleName: partitionId to SingleVariableDeclaration at 1", "INS ParameterizedType: OutEdges<I,E> to ParameterizedType: Map.Entry<K,OutEdges<I,E>> at 2", "INS SimpleName: write to MethodInvocation at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: output to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 27", "INS SimpleName: output to MethodInvocation at 2", "INS Block to EnhancedForStatement at 2", "INS EnhancedForStatement to Block at 2", "INS SimpleName: edge to MethodInvocation at 0", "INS SimpleName: DataOutput to SimpleType: DataOutput at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: writePartitionEdgeStore to MethodDeclaration at 3", "INS SimpleName: I to SimpleType: I at 0", "INS SimpleName: size to MethodInvocation at 1", "INS SimpleName: getKey to MethodInvocation at 1", "INS Block to MethodDeclaration at 7", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to EnhancedForStatement at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 28", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: getPartitionEdges to MethodInvocation at 0", "INS SimpleName: input to MethodInvocation at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS ThrowStatement to Block at 0", "INS SimpleType: E to ParameterizedType: OutEdges<I,E> at 2", "INS SimpleName: DataInput to SimpleType: DataInput at 0", "INS ParameterizedType: Map<K,OutEdges<I,E>> to VariableDeclarationStatement at 0", "INS SimpleName: readPartitionEdgeStore to MethodDeclaration at 3", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ExpressionStatement to Block at 3", "INS SimpleName: partitionId to MethodInvocation at 2", "INS SimpleName: readVertexKey to MethodInvocation at 0", "INS SimpleName: K to SimpleType: K at 0", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS MethodDeclaration to TypeDeclaration: class at 28", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: vertexKey to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: createAndInitializeInputOutEdges to MethodInvocation at 1", "INS SimpleName: Map to SimpleType: Map at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to ForStatement at 3", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: input to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: edges to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: OutEdges to SimpleType: OutEdges at 0", "INS Modifier: public to MethodDeclaration at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS ForStatement to Block at 3", "INS SimpleName: readFields to MethodInvocation at 1", "INS SimpleType: DataInput to SingleVariableDeclaration at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: input to MethodInvocation at 2", "INS SimpleName: I to SimpleType: I at 0", "INS SimpleName: partitionEdges to MethodInvocation at 0", "INS StringLiteral: \"readPartitionEdgeStore: reading a \" to InfixExpression: + at 0", "INS SimpleType: E to ParameterizedType: OutEdges<I,E> at 2", "INS SimpleType: I to ParameterizedType: OutEdges<I,E> at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: numEntries to InfixExpression: < at 1", "INS SimpleName: input to SingleVariableDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: vertexKey to VariableDeclarationFragment at 0", "INS SimpleName: K to SimpleType: K at 0", "INS InfixExpression: < to ForStatement at 1", "INS PrefixExpression: ++ to ForStatement at 2", "INS StringLiteral: \"partition that is already there in the partition store \" to InfixExpression: + at 1", "INS SimpleName: I to SimpleType: I at 0", "INS Block to MethodDeclaration at 7", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS SimpleName: numEntries to VariableDeclarationFragment at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleName: containsKey to MethodInvocation at 1", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS SimpleName: readInt to MethodInvocation at 1", "INS SimpleName: partitionId to SingleVariableDeclaration at 1", "INS SimpleType: Map to ParameterizedType: Map<K,OutEdges<I,E>> at 0", "INS SimpleName: edges to MethodInvocation at 3", "INS SimpleName: edges to MethodInvocation at 0", "INS SimpleName: configuration to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: partitionEdges to VariableDeclarationFragment at 0", "INS SimpleName: i to PrefixExpression: ++ at 0", "INS SimpleName: partitionId to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS SimpleName: i to InfixExpression: < at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: OutEdges to SimpleType: OutEdges at 0", "INS Block to IfStatement at 1", "INS SimpleType: K to VariableDeclarationStatement at 0", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleType: OutEdges to ParameterizedType: OutEdges<I,E> at 0", "INS StringLiteral: \"(impossible)\" to InfixExpression: + at 2", "INS SimpleName: E to SimpleType: E at 0", "INS ParameterizedType: OutEdges<I,E> to VariableDeclarationStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: IOException to MethodDeclaration at 6", "INS SimpleName: put to MethodInvocation at 1", "INS SimpleType: K to ParameterizedType: Map<K,OutEdges<I,E>> at 1", "INS SimpleType: I to ParameterizedType: OutEdges<I,E> at 1", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: transientEdges to MethodInvocation at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleType: OutEdges to ParameterizedType: OutEdges<I,E> at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS ParameterizedType: OutEdges<I,E> to ParameterizedType: Map<K,OutEdges<I,E>> at 2"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from partitionEdges to edges", "operations": ["UPD SimpleName: partitionEdges from partitionEdges to edges"]}, {"root": "UPDATE from getOrCreatePartition to startIteration", "operations": ["UPD SimpleName: getOrCreatePartition from getOrCreatePartition to startIteration"]}, {"root": "INS BooleanLiteral: true to WhileStatement at 0", "operations": ["INS BooleanLiteral: true to WhileStatement at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS SimpleName: partition to InfixExpression: == at 0", "INS InfixExpression: == to IfStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS IfStatement to Block at 1", "INS BreakStatement to Block at 0", "INS Block to IfStatement at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleName: remove to MethodInvocation at 1", "INS SimpleType: OutEdges to ParameterizedType: OutEdges<I,E> at 0", "INS SimpleType: E to ParameterizedType: OutEdges<I,E> at 2", "INS SimpleName: K to SimpleType: K at 0", "INS SimpleName: OutEdges to SimpleType: OutEdges at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleName: Map to SimpleType: Map at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS ParameterizedType: OutEdges<I,E> to ParameterizedType: Map<K,OutEdges<I,E>> at 2", "INS SimpleName: I to SimpleType: I at 0", "INS SimpleName: partition to MethodInvocation at 0", "INS SimpleType: I to ParameterizedType: OutEdges<I,E> at 1", "INS SimpleName: partitionEdges to VariableDeclarationFragment at 0", "INS SimpleName: getId to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 2", "INS ParameterizedType: Map<K,OutEdges<I,E>> to VariableDeclarationStatement at 0", "INS SimpleType: Map to ParameterizedType: Map<K,OutEdges<I,E>> at 0", "INS SimpleType: K to ParameterizedType: Map<K,OutEdges<I,E>> at 1", "INS SimpleName: transientEdges to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 3", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: service to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS ContinueStatement to Block at 1", "INS Block to IfStatement at 1", "INS SimpleName: partition to MethodInvocation at 2", "INS InfixExpression: == to IfStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: getPartitionStore to MethodInvocation at 1", "INS SimpleName: putPartition to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: partitionEdges to InfixExpression: == at 0", "INS IfStatement to Block at 3"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: service to MethodInvocation at 0", "INS SimpleName: getNextPartition to MethodInvocation at 1", "INS SimpleName: getPartitionStore to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL ParameterizedType: ArrayBlockingQueue<>", "DEL VariableDeclarationFragment", "DEL ParameterizedType: BlockingQueue<Integer>", "DEL MethodInvocation", "DEL SimpleName: ArrayBlockingQueue", "DEL SimpleName: BlockingQueue", "DEL SimpleName: size", "DEL SimpleType: ArrayBlockingQueue", "DEL SimpleType: Integer", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL SimpleName: partitionIdQueue", "DEL SimpleName: Integer", "DEL Modifier: final", "DEL SimpleName: transientEdges", "DEL SimpleType: BlockingQueue"]}, {"root": "DEL SimpleName: partitionId", "operations": ["DEL SimpleName: partitionId"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: transientEdges", "DEL SimpleName: keySet", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: partitionIdQueue", "DEL SimpleName: addAll"]}, {"root": "DEL InfixExpression: !=", "operations": ["DEL SimpleName: partitionIdQueue", "DEL Assignment: =", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL SimpleName: poll", "DEL NullLiteral", "DEL SimpleName: partitionId", "DEL ParenthesizedExpression"]}]}}, {"AbstractEdgeStore_diff": {"operations": ["Move ImportDeclaration(33) into CompilationUnit(1204) at 20", "Move ImportDeclaration(35) into CompilationUnit(1204) at 20", "Insert ImportDeclaration(37) into CompilationUnit(1204) at 18", "Update QualifiedName: java.util.concurrent.ArrayBlockingQueue(36) to java.io.DataInput", "Update QualifiedName: java.util.concurrent.BlockingQueue(38) to java.io.DataOutput", "Insert QualifiedName: java.io.IOException(36) into ImportDeclaration(37) at 0", "Insert MethodDeclaration(419) into TypeDeclaration: class(1203) at 23", "Insert MethodDeclaration(439) into TypeDeclaration: class(1203) at 24", "Insert MethodDeclaration(485) into TypeDeclaration: class(1203) at 26", "Insert MethodDeclaration(560) into TypeDeclaration: class(1203) at 27", "Insert MethodDeclaration(659) into TypeDeclaration: class(1203) at 28", "Insert Javadoc(404) into MethodDeclaration(419) at 0", "Insert Modifier: protected(405) into MethodDeclaration(419) at 1", "Insert Modifier: abstract(406) into MethodDeclaration(419) at 2", "Insert PrimitiveType: void(407) into MethodDeclaration(419) at 3", "Insert SimpleName: writeVertexKey(408) into MethodDeclaration(419) at 4", "Insert SingleVariableDeclaration(412) into MethodDeclaration(419) at 5", "Insert SingleVariableDeclaration(416) into MethodDeclaration(419) at 6", "Insert SimpleType: IOException(418) into MethodDeclaration(419) at 7", "Insert Javadoc(427) into MethodDeclaration(439) at 0", "Insert Modifier: protected(428) into MethodDeclaration(439) at 1", "Insert Modifier: abstract(429) into MethodDeclaration(439) at 2", "Insert SimpleType: K(431) into MethodDeclaration(439) at 3", "Insert SimpleName: readVertexKey(432) into MethodDeclaration(439) at 4", "Insert SingleVariableDeclaration(436) into MethodDeclaration(439) at 5", "Insert SimpleType: IOException(438) into MethodDeclaration(439) at 6", "Insert MarkerAnnotation(472) into MethodDeclaration(485) at 0", "Insert Modifier: public(473) into MethodDeclaration(485) at 1", "Insert PrimitiveType: boolean(474) into MethodDeclaration(485) at 2", "Insert SimpleName: hasPartitionEdges(475) into MethodDeclaration(485) at 3", "Insert SingleVariableDeclaration(478) into MethodDeclaration(485) at 4", "Insert Block(484) into MethodDeclaration(485) at 5", "Insert MarkerAnnotation(487) into MethodDeclaration(560) at 0", "Insert Modifier: public(488) into MethodDeclaration(560) at 1", "Insert PrimitiveType: void(489) into MethodDeclaration(560) at 2", "Insert SimpleName: writePartitionEdgeStore(490) into MethodDeclaration(560) at 3", "Insert SingleVariableDeclaration(493) into MethodDeclaration(560) at 4", "Insert SingleVariableDeclaration(497) into MethodDeclaration(560) at 5", "Insert SimpleType: IOException(499) into MethodDeclaration(560) at 6", "Insert Block(559) into MethodDeclaration(560) at 7", "Insert MarkerAnnotation(562) into MethodDeclaration(659) at 0", "Insert Modifier: public(563) into MethodDeclaration(659) at 1", "Insert PrimitiveType: void(564) into MethodDeclaration(659) at 2", "Insert SimpleName: readPartitionEdgeStore(565) into MethodDeclaration(659) at 3", "Insert SingleVariableDeclaration(568) into MethodDeclaration(659) at 4", "Insert SingleVariableDeclaration(572) into MethodDeclaration(659) at 5", "Insert SimpleType: IOException(574) into MethodDeclaration(659) at 6", "Insert Block(658) into MethodDeclaration(659) at 7", "Insert TagElement(397) into Javadoc(404) at 0", "Insert TagElement: @param(400) into Javadoc(404) at 1", "Insert TagElement: @param(403) into Javadoc(404) at 2", "Insert SimpleType: K(410) into SingleVariableDeclaration(412) at 0", "Insert SimpleName: key(411) into SingleVariableDeclaration(412) at 1", "Insert SimpleType: DataOutput(414) into SingleVariableDeclaration(416) at 0", "Insert SimpleName: output(415) into SingleVariableDeclaration(416) at 1", "Insert SimpleName: IOException(417) into SimpleType: IOException(418) at 0", "Insert TagElement(421) into Javadoc(427) at 0", "Insert TagElement: @param(424) into Javadoc(427) at 1", "Insert TagElement: @return(426) into Javadoc(427) at 2", "Insert SimpleName: K(430) into SimpleType: K(431) at 0", "Insert SimpleType: DataInput(434) into SingleVariableDeclaration(436) at 0", "Insert SimpleName: input(435) into SingleVariableDeclaration(436) at 1", "Insert SimpleName: IOException(437) into SimpleType: IOException(438) at 0", "Insert SimpleName: Override(471) into MarkerAnnotation(472) at 0", "Insert PrimitiveType: int(476) into SingleVariableDeclaration(478) at 0", "Insert SimpleName: partitionId(477) into SingleVariableDeclaration(478) at 1", "Insert ReturnStatement(483) into Block(484) at 0", "Insert SimpleName: Override(486) into MarkerAnnotation(487) at 0", "Insert PrimitiveType: int(491) into SingleVariableDeclaration(493) at 0", "Insert SimpleName: partitionId(492) into SingleVariableDeclaration(493) at 1", "Insert SimpleType: DataOutput(495) into SingleVariableDeclaration(497) at 0", "Insert SimpleName: output(496) into SingleVariableDeclaration(497) at 1", "Insert SimpleName: IOException(498) into SimpleType: IOException(499) at 0", "Move VariableDeclarationStatement(775) into Block(559) at 0", "Insert ExpressionStatement(525) into Block(559) at 1", "Insert EnhancedForStatement(558) into Block(559) at 2", "Insert SimpleName: Override(561) into MarkerAnnotation(562) at 0", "Insert PrimitiveType: int(566) into SingleVariableDeclaration(568) at 0", "Insert SimpleName: partitionId(567) into SingleVariableDeclaration(568) at 1", "Insert SimpleType: DataInput(570) into SingleVariableDeclaration(572) at 0", "Insert SimpleName: input(571) into SingleVariableDeclaration(572) at 1", "Insert SimpleName: IOException(573) into SimpleType: IOException(574) at 0", "Insert IfStatement(588) into Block(658) at 0", "Insert VariableDeclarationStatement(606) into Block(658) at 1", "Insert VariableDeclarationStatement(613) into Block(658) at 2", "Insert ForStatement(657) into Block(658) at 3", "Insert TextElement: Writes the given key to the output(396) into TagElement(397) at 0", "Insert SimpleName: key(398) into TagElement: @param(400) at 0", "Insert TextElement:  input key to be written(399) into TagElement: @param(400) at 1", "Insert SimpleName: output(401) into TagElement: @param(403) at 0", "Insert TextElement:  output to write the key to(402) into TagElement: @param(403) at 1", "Insert SimpleName: K(409) into SimpleType: K(410) at 0", "Insert SimpleName: DataOutput(413) into SimpleType: DataOutput(414) at 0", "Insert TextElement: Reads the given key from the input(420) into TagElement(421) at 0", "Insert SimpleName: input(422) into TagElement: @param(424) at 0", "Insert TextElement:  input to read the key from(423) into TagElement: @param(424) at 1", "Insert TextElement:  Key read from the input(425) into TagElement: @return(426) at 0", "Insert SimpleName: DataInput(433) into SimpleType: DataInput(434) at 0", "Insert MethodInvocation(482) into ReturnStatement(483) at 0", "Insert SimpleName: DataOutput(494) into SimpleType: DataOutput(495) at 0", "Insert MethodInvocation(524) into ExpressionStatement(525) at 0", "Insert SingleVariableDeclaration(539) into EnhancedForStatement(558) at 0", "Insert MethodInvocation(542) into EnhancedForStatement(558) at 1", "Insert Block(557) into EnhancedForStatement(558) at 2", "Insert SimpleName: DataInput(569) into SimpleType: DataInput(570) at 0", "Insert MethodInvocation(578) into IfStatement(588) at 0", "Insert Block(587) into IfStatement(588) at 1", "Insert ParameterizedType: Map<K,OutEdges<I,E>>(600) into VariableDeclarationStatement(606) at 0", "Insert VariableDeclarationFragment(605) into VariableDeclarationStatement(606) at 1", "Insert PrimitiveType: int(607) into VariableDeclarationStatement(613) at 0", "Insert VariableDeclarationFragment(612) into VariableDeclarationStatement(613) at 1", "Insert VariableDeclarationExpression(618) into ForStatement(657) at 0", "Insert InfixExpression: <(621) into ForStatement(657) at 1", "Insert PrefixExpression: ++(623) into ForStatement(657) at 2", "Insert Block(656) into ForStatement(657) at 3", "Move MethodInvocation(754) into ExpressionStatement(892) at 0", "Insert SimpleName: transientEdges(479) into MethodInvocation(482) at 0", "Insert SimpleName: containsKey(480) into MethodInvocation(482) at 1", "Insert SimpleName: partitionId(481) into MethodInvocation(482) at 2", "Update SimpleName: partitionEdges(769) to edges", "Insert SimpleName: output(519) into MethodInvocation(524) at 0", "Insert SimpleName: writeInt(520) into MethodInvocation(524) at 1", "Insert MethodInvocation(523) into MethodInvocation(524) at 2", "Insert ParameterizedType: Map.Entry<K,OutEdges<I,E>>(537) into SingleVariableDeclaration(539) at 0", "Insert SimpleName: edge(538) into SingleVariableDeclaration(539) at 1", "Insert SimpleName: edges(540) into MethodInvocation(542) at 0", "Insert SimpleName: entrySet(541) into MethodInvocation(542) at 1", "Insert ExpressionStatement(549) into Block(557) at 0", "Insert ExpressionStatement(556) into Block(557) at 1", "Insert SimpleName: transientEdges(575) into MethodInvocation(578) at 0", "Insert SimpleName: containsKey(576) into MethodInvocation(578) at 1", "Insert SimpleName: partitionId(577) into MethodInvocation(578) at 2", "Insert ThrowStatement(586) into Block(587) at 0", "Insert SimpleType: Map(590) into ParameterizedType: Map<K,OutEdges<I,E>>(600) at 0", "Insert SimpleType: K(592) into ParameterizedType: Map<K,OutEdges<I,E>>(600) at 1", "Insert ParameterizedType: OutEdges<I,E>(599) into ParameterizedType: Map<K,OutEdges<I,E>>(600) at 2", "Insert SimpleName: partitionEdges(601) into VariableDeclarationFragment(605) at 0", "Insert MethodInvocation(604) into VariableDeclarationFragment(605) at 1", "Insert SimpleName: numEntries(608) into VariableDeclarationFragment(612) at 0", "Insert MethodInvocation(611) into VariableDeclarationFragment(612) at 1", "Insert PrimitiveType: int(614) into VariableDeclarationExpression(618) at 0", "Insert VariableDeclarationFragment(617) into VariableDeclarationExpression(618) at 1", "Insert SimpleName: i(619) into InfixExpression: <(621) at 0", "Insert SimpleName: numEntries(620) into InfixExpression: <(621) at 1", "Insert SimpleName: i(622) into PrefixExpression: ++(623) at 0", "Insert VariableDeclarationStatement(631) into Block(656) at 0", "Insert VariableDeclarationStatement(644) into Block(656) at 1", "Insert ExpressionStatement(649) into Block(656) at 2", "Insert ExpressionStatement(655) into Block(656) at 3", "Update SimpleName: getOrCreatePartition(752) to startIteration", "Insert SimpleName: edges(521) into MethodInvocation(523) at 0", "Insert SimpleName: size(522) into MethodInvocation(523) at 1", "Insert SimpleType: Map.Entry(527) into ParameterizedType: Map.Entry<K,OutEdges<I,E>>(537) at 0", "Insert SimpleType: K(529) into ParameterizedType: Map.Entry<K,OutEdges<I,E>>(537) at 1", "Insert ParameterizedType: OutEdges<I,E>(536) into ParameterizedType: Map.Entry<K,OutEdges<I,E>>(537) at 2", "Insert MethodInvocation(548) into ExpressionStatement(549) at 0", "Insert MethodInvocation(555) into ExpressionStatement(556) at 0", "Insert ClassInstanceCreation(585) into ThrowStatement(586) at 0", "Insert SimpleName: Map(589) into SimpleType: Map(590) at 0", "Insert SimpleName: K(591) into SimpleType: K(592) at 0", "Insert SimpleType: OutEdges(594) into ParameterizedType: OutEdges<I,E>(599) at 0", "Insert SimpleType: I(596) into ParameterizedType: OutEdges<I,E>(599) at 1", "Insert SimpleType: E(598) into ParameterizedType: OutEdges<I,E>(599) at 2", "Insert SimpleName: getPartitionEdges(602) into MethodInvocation(604) at 0", "Insert SimpleName: partitionId(603) into MethodInvocation(604) at 1", "Insert SimpleName: input(609) into MethodInvocation(611) at 0", "Insert SimpleName: readInt(610) into MethodInvocation(611) at 1", "Insert SimpleName: i(615) into VariableDeclarationFragment(617) at 0", "Insert NumberLiteral: 0(616) into VariableDeclarationFragment(617) at 1", "Insert SimpleType: K(625) into VariableDeclarationStatement(631) at 0", "Insert VariableDeclarationFragment(630) into VariableDeclarationStatement(631) at 1", "Insert ParameterizedType: OutEdges<I,E>(638) into VariableDeclarationStatement(644) at 0", "Insert VariableDeclarationFragment(643) into VariableDeclarationStatement(644) at 1", "Insert MethodInvocation(648) into ExpressionStatement(649) at 0", "Insert MethodInvocation(654) into ExpressionStatement(655) at 0", "Insert QualifiedName: Map.Entry(526) into SimpleType: Map.Entry(527) at 0", "Insert SimpleName: K(528) into SimpleType: K(529) at 0", "Insert SimpleType: OutEdges(531) into ParameterizedType: OutEdges<I,E>(536) at 0", "Insert SimpleType: I(533) into ParameterizedType: OutEdges<I,E>(536) at 1", "Insert SimpleType: E(535) into ParameterizedType: OutEdges<I,E>(536) at 2", "Insert SimpleName: writeVertexKey(543) into MethodInvocation(548) at 0", "Insert MethodInvocation(546) into MethodInvocation(548) at 1", "Insert SimpleName: output(547) into MethodInvocation(548) at 2", "Insert MethodInvocation(552) into MethodInvocation(555) at 0", "Insert SimpleName: write(553) into MethodInvocation(555) at 1", "Insert SimpleName: output(554) into MethodInvocation(555) at 2", "Insert SimpleType: IllegalStateException(580) into ClassInstanceCreation(585) at 0", "Insert InfixExpression: +(584) into ClassInstanceCreation(585) at 1", "Insert SimpleName: OutEdges(593) into SimpleType: OutEdges(594) at 0", "Insert SimpleName: I(595) into SimpleType: I(596) at 0", "Insert SimpleName: E(597) into SimpleType: E(598) at 0", "Insert SimpleName: K(624) into SimpleType: K(625) at 0", "Insert SimpleName: vertexKey(626) into VariableDeclarationFragment(630) at 0", "Insert MethodInvocation(629) into VariableDeclarationFragment(630) at 1", "Insert SimpleType: OutEdges(633) into ParameterizedType: OutEdges<I,E>(638) at 0", "Insert SimpleType: I(635) into ParameterizedType: OutEdges<I,E>(638) at 1", "Insert SimpleType: E(637) into ParameterizedType: OutEdges<I,E>(638) at 2", "Insert SimpleName: edges(639) into VariableDeclarationFragment(643) at 0", "Insert MethodInvocation(642) into VariableDeclarationFragment(643) at 1", "Insert SimpleName: edges(645) into MethodInvocation(648) at 0", "Insert SimpleName: readFields(646) into MethodInvocation(648) at 1", "Insert SimpleName: input(647) into MethodInvocation(648) at 2", "Insert SimpleName: partitionEdges(650) into MethodInvocation(654) at 0", "Insert SimpleName: put(651) into MethodInvocation(654) at 1", "Insert SimpleName: vertexKey(652) into MethodInvocation(654) at 2", "Insert SimpleName: edges(653) into MethodInvocation(654) at 3", "Insert SimpleName: OutEdges(530) into SimpleType: OutEdges(531) at 0", "Insert SimpleName: I(532) into SimpleType: I(533) at 0", "Insert SimpleName: E(534) into SimpleType: E(535) at 0", "Insert SimpleName: edge(544) into MethodInvocation(546) at 0", "Insert SimpleName: getKey(545) into MethodInvocation(546) at 1", "Insert SimpleName: edge(550) into MethodInvocation(552) at 0", "Insert SimpleName: getValue(551) into MethodInvocation(552) at 1", "Insert SimpleName: IllegalStateException(579) into SimpleType: IllegalStateException(580) at 0", "Insert StringLiteral: \"readPartitionEdgeStore: reading a \"(581) into InfixExpression: +(584) at 0", "Insert StringLiteral: \"partition that is already there in the partition store \"(582) into InfixExpression: +(584) at 1", "Insert StringLiteral: \"(impossible)\"(583) into InfixExpression: +(584) at 2", "Insert SimpleName: readVertexKey(627) into MethodInvocation(629) at 0", "Insert SimpleName: input(628) into MethodInvocation(629) at 1", "Insert SimpleName: OutEdges(632) into SimpleType: OutEdges(633) at 0", "Insert SimpleName: I(634) into SimpleType: I(635) at 0", "Insert SimpleName: E(636) into SimpleType: E(637) at 0", "Insert SimpleName: configuration(640) into MethodInvocation(642) at 0", "Insert SimpleName: createAndInitializeInputOutEdges(641) into MethodInvocation(642) at 1", "Insert BooleanLiteral: true(949) into WhileStatement(1163) at 0", "Insert IfStatement(972) into Block(1162) at 1", "Insert VariableDeclarationStatement(993) into Block(1162) at 2", "Insert IfStatement(1006) into Block(1162) at 3", "Insert InfixExpression: ==(969) into IfStatement(972) at 0", "Insert Block(971) into IfStatement(972) at 1", "Insert ParameterizedType: Map<K,OutEdges<I,E>>(984) into VariableDeclarationStatement(993) at 0", "Insert VariableDeclarationFragment(992) into VariableDeclarationStatement(993) at 1", "Insert InfixExpression: ==(996) into IfStatement(1006) at 0", "Insert Block(1005) into IfStatement(1006) at 1", "Insert MethodInvocation(964) into VariableDeclarationFragment(965) at 1", "Insert SimpleName: partition(967) into InfixExpression: ==(969) at 0", "Insert NullLiteral(968) into InfixExpression: ==(969) at 1", "Insert BreakStatement(970) into Block(971) at 0", "Insert SimpleType: Map(974) into ParameterizedType: Map<K,OutEdges<I,E>>(984) at 0", "Insert SimpleType: K(976) into ParameterizedType: Map<K,OutEdges<I,E>>(984) at 1", "Insert ParameterizedType: OutEdges<I,E>(983) into ParameterizedType: Map<K,OutEdges<I,E>>(984) at 2", "Insert SimpleName: partitionEdges(985) into VariableDeclarationFragment(992) at 0", "Insert MethodInvocation(991) into VariableDeclarationFragment(992) at 1", "Insert SimpleName: partitionEdges(994) into InfixExpression: ==(996) at 0", "Insert NullLiteral(995) into InfixExpression: ==(996) at 1", "Insert ExpressionStatement(1003) into Block(1005) at 0", "Insert ContinueStatement(1004) into Block(1005) at 1", "Insert MethodInvocation(962) into MethodInvocation(964) at 0", "Insert SimpleName: getNextPartition(963) into MethodInvocation(964) at 1", "Insert SimpleName: Map(973) into SimpleType: Map(974) at 0", "Insert SimpleName: K(975) into SimpleType: K(976) at 0", "Insert SimpleType: OutEdges(978) into ParameterizedType: OutEdges<I,E>(983) at 0", "Insert SimpleType: I(980) into ParameterizedType: OutEdges<I,E>(983) at 1", "Insert SimpleType: E(982) into ParameterizedType: OutEdges<I,E>(983) at 2", "Insert SimpleName: transientEdges(986) into MethodInvocation(991) at 0", "Insert SimpleName: remove(987) into MethodInvocation(991) at 1", "Insert MethodInvocation(990) into MethodInvocation(991) at 2", "Insert MethodInvocation(1002) into ExpressionStatement(1003) at 0", "Insert SimpleName: service(960) into MethodInvocation(962) at 0", "Insert SimpleName: getPartitionStore(961) into MethodInvocation(962) at 1", "Insert SimpleName: OutEdges(977) into SimpleType: OutEdges(978) at 0", "Insert SimpleName: I(979) into SimpleType: I(980) at 0", "Insert SimpleName: E(981) into SimpleType: E(982) at 0", "Insert SimpleName: partition(988) into MethodInvocation(990) at 0", "Insert SimpleName: getId(989) into MethodInvocation(990) at 1", "Insert MethodInvocation(999) into MethodInvocation(1002) at 0", "Insert SimpleName: putPartition(1000) into MethodInvocation(1002) at 1", "Insert SimpleName: partition(1001) into MethodInvocation(1002) at 2", "Insert SimpleName: service(997) into MethodInvocation(999) at 0", "Insert SimpleName: getPartitionStore(998) into MethodInvocation(999) at 1", "Delete Modifier: final(652)", "Delete SimpleName: BlockingQueue(653)", "Delete SimpleType: BlockingQueue(654)", "Delete SimpleName: Integer(655)", "Delete SimpleType: Integer(656)", "Delete ParameterizedType: BlockingQueue<Integer>(657)", "Delete SimpleName: partitionIdQueue(658)", "Delete SimpleName: ArrayBlockingQueue(659)", "Delete SimpleType: ArrayBlockingQueue(660)", "Delete ParameterizedType: ArrayBlockingQueue<>(661)", "Delete SimpleName: transientEdges(662)", "Delete SimpleName: size(663)", "Delete MethodInvocation(664)", "Delete ClassInstanceCreation(665)", "Delete VariableDeclarationFragment(666)", "Delete VariableDeclarationStatement(667)", "Delete SimpleName: partitionId(753)", "Delete SimpleName: partitionIdQueue(668)", "Delete SimpleName: addAll(669)", "Delete SimpleName: transientEdges(670)", "Delete SimpleName: keySet(671)", "Delete MethodInvocation(672)", "Delete MethodInvocation(673)", "Delete SimpleName: partitionId(731)", "Delete SimpleName: partitionIdQueue(732)", "Delete SimpleName: poll(733)", "Delete MethodInvocation(734)", "Delete Assignment: =(735)", "Delete ParenthesizedExpression(736)", "Delete NullLiteral(737)", "Delete InfixExpression: !=(738)"]}}, {"EdgeStore_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: java.io.DataInput to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS ImportDeclaration to CompilationUnit at 5", "INS QualifiedName: java.io.DataOutput to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: java.io.IOException to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 8", "operations": ["INS SimpleName: hasPartitionEdges to MethodDeclaration at 2", "INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS TextElement:  Partition id under query to TagElement: @param at 1", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleName: partitionId to SingleVariableDeclaration at 1", "INS TextElement: otherwise to TagElement: @return at 1", "INS TagElement: @return to Javadoc at 2", "INS TextElement: Note: This method is thread-safe to TagElement at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS TextElement: Whether the store contains edges for the given partition. to TagElement at 0", "INS TextElement:  true if the store has any edge for the given partition, false to TagElement: @return at 0", "INS MethodDeclaration to TypeDeclaration: interface at 8", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: partitionId to TagElement: @param at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 9", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 9", "INS TagElement: @param to Javadoc at 2", "INS TextElement: from the store. to TagElement at 1", "INS SimpleName: output to TagElement: @param at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS TextElement:  Output to write the edge store to to TagElement: @param at 1", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS Javadoc to MethodDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: partitionId to SingleVariableDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS TextElement: Deserialize the edges of a given partition, and removes the associated data to TagElement at 0", "INS TextElement: same partition at the same time). to TagElement at 3", "INS TextElement:  Id of partition to deserialize to TagElement: @param at 1", "INS SimpleName: output to SingleVariableDeclaration at 1", "INS TagElement to Javadoc at 0", "INS SimpleType: IOException to MethodDeclaration at 5", "INS SimpleType: DataOutput to SingleVariableDeclaration at 0", "INS SimpleName: partitionId to TagElement: @param at 0", "INS SimpleName: writePartitionEdgeStore to MethodDeclaration at 2", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS TextElement: Note: This method is not thread-safe (i.e. should not be called for the to TagElement at 2", "INS SimpleName: DataOutput to SimpleType: DataOutput at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 10", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 3", "INS TagElement: @param to Javadoc at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS TagElement: @param to Javadoc at 2", "INS TextElement: partition already). to TagElement at 2", "INS TextElement: same partition at the same time). to TagElement at 4", "INS SimpleType: DataInput to SingleVariableDeclaration at 0", "INS SimpleName: readPartitionEdgeStore to MethodDeclaration at 2", "INS SimpleName: input to TagElement: @param at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: partitionId to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: input to SingleVariableDeclaration at 1", "INS TextElement:  Input to read the partition from to TagElement: @param at 1", "INS TextElement: store (assumes that the edge store does not have any edge from the to TagElement at 1", "INS MethodDeclaration to TypeDeclaration: interface at 10", "INS TextElement: Note: This method is not thread-safe (i.e. should not be called for the to TagElement at 3", "INS TagElement to Javadoc at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS TextElement: Serialize the edges of a given partition, and adds it to the partition to TagElement at 0", "INS SimpleName: partitionId to TagElement: @param at 0", "INS SimpleName: DataInput to SimpleType: DataInput at 0", "INS SimpleType: IOException to MethodDeclaration at 5", "INS TextElement:  Id of partition to serialize to TagElement: @param at 1"]}]}}, {"EdgeStore_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(144) at 4", "Insert ImportDeclaration(11) into CompilationUnit(144) at 5", "Insert ImportDeclaration(13) into CompilationUnit(144) at 6", "Insert QualifiedName: java.io.DataInput(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: java.io.DataOutput(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: java.io.IOException(12) into ImportDeclaration(13) at 0", "Insert MethodDeclaration(93) into TypeDeclaration: interface(143) at 8", "Insert MethodDeclaration(117) into TypeDeclaration: interface(143) at 9", "Insert MethodDeclaration(142) into TypeDeclaration: interface(143) at 10", "Insert Javadoc(87) into MethodDeclaration(93) at 0", "Insert PrimitiveType: boolean(88) into MethodDeclaration(93) at 1", "Insert SimpleName: hasPartitionEdges(89) into MethodDeclaration(93) at 2", "Insert SingleVariableDeclaration(92) into MethodDeclaration(93) at 3", "Insert Javadoc(105) into MethodDeclaration(117) at 0", "Insert PrimitiveType: void(106) into MethodDeclaration(117) at 1", "Insert SimpleName: writePartitionEdgeStore(107) into MethodDeclaration(117) at 2", "Insert SingleVariableDeclaration(110) into MethodDeclaration(117) at 3", "Insert SingleVariableDeclaration(114) into MethodDeclaration(117) at 4", "Insert SimpleType: IOException(116) into MethodDeclaration(117) at 5", "Insert Javadoc(130) into MethodDeclaration(142) at 0", "Insert PrimitiveType: void(131) into MethodDeclaration(142) at 1", "Insert SimpleName: readPartitionEdgeStore(132) into MethodDeclaration(142) at 2", "Insert SingleVariableDeclaration(135) into MethodDeclaration(142) at 3", "Insert SingleVariableDeclaration(139) into MethodDeclaration(142) at 4", "Insert SimpleType: IOException(141) into MethodDeclaration(142) at 5", "Insert TagElement(80) into Javadoc(87) at 0", "Insert TagElement: @param(83) into Javadoc(87) at 1", "Insert TagElement: @return(86) into Javadoc(87) at 2", "Insert PrimitiveType: int(90) into SingleVariableDeclaration(92) at 0", "Insert SimpleName: partitionId(91) into SingleVariableDeclaration(92) at 1", "Insert TagElement(98) into Javadoc(105) at 0", "Insert TagElement: @param(101) into Javadoc(105) at 1", "Insert TagElement: @param(104) into Javadoc(105) at 2", "Insert PrimitiveType: int(108) into SingleVariableDeclaration(110) at 0", "Insert SimpleName: partitionId(109) into SingleVariableDeclaration(110) at 1", "Insert SimpleType: DataOutput(112) into SingleVariableDeclaration(114) at 0", "Insert SimpleName: output(113) into SingleVariableDeclaration(114) at 1", "Insert SimpleName: IOException(115) into SimpleType: IOException(116) at 0", "Insert TagElement(123) into Javadoc(130) at 0", "Insert TagElement: @param(126) into Javadoc(130) at 1", "Insert TagElement: @param(129) into Javadoc(130) at 2", "Insert PrimitiveType: int(133) into SingleVariableDeclaration(135) at 0", "Insert SimpleName: partitionId(134) into SingleVariableDeclaration(135) at 1", "Insert SimpleType: DataInput(137) into SingleVariableDeclaration(139) at 0", "Insert SimpleName: input(138) into SingleVariableDeclaration(139) at 1", "Insert SimpleName: IOException(140) into SimpleType: IOException(141) at 0", "Insert TextElement: Whether the store contains edges for the given partition.(78) into TagElement(80) at 0", "Insert TextElement: Note: This method is thread-safe(79) into TagElement(80) at 1", "Insert SimpleName: partitionId(81) into TagElement: @param(83) at 0", "Insert TextElement:  Partition id under query(82) into TagElement: @param(83) at 1", "Insert TextElement:  true if the store has any edge for the given partition, false(84) into TagElement: @return(86) at 0", "Insert TextElement: otherwise(85) into TagElement: @return(86) at 1", "Insert TextElement: Deserialize the edges of a given partition, and removes the associated data(94) into TagElement(98) at 0", "Insert TextElement: from the store.(95) into TagElement(98) at 1", "Insert TextElement: Note: This method is not thread-safe (i.e. should not be called for the(96) into TagElement(98) at 2", "Insert TextElement: same partition at the same time).(97) into TagElement(98) at 3", "Insert SimpleName: partitionId(99) into TagElement: @param(101) at 0", "Insert TextElement:  Id of partition to deserialize(100) into TagElement: @param(101) at 1", "Insert SimpleName: output(102) into TagElement: @param(104) at 0", "Insert TextElement:  Output to write the edge store to(103) into TagElement: @param(104) at 1", "Insert SimpleName: DataOutput(111) into SimpleType: DataOutput(112) at 0", "Insert TextElement: Serialize the edges of a given partition, and adds it to the partition(118) into TagElement(123) at 0", "Insert TextElement: store (assumes that the edge store does not have any edge from the(119) into TagElement(123) at 1", "Insert TextElement: partition already).(120) into TagElement(123) at 2", "Insert TextElement: Note: This method is not thread-safe (i.e. should not be called for the(121) into TagElement(123) at 3", "Insert TextElement: same partition at the same time).(122) into TagElement(123) at 4", "Insert SimpleName: partitionId(124) into TagElement: @param(126) at 0", "Insert TextElement:  Id of partition to serialize(125) into TagElement: @param(126) at 1", "Insert SimpleName: input(127) into TagElement: @param(129) at 0", "Insert TextElement:  Input to read the partition from(128) into TagElement: @param(129) at 1", "Insert SimpleName: DataInput(136) into SimpleType: DataInput(137) at 0"]}}, {"SimpleEdgeStore_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS QualifiedName: java.io.DataInput to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 8"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS QualifiedName: java.io.DataOutput to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: java.io.IOException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: I to SingleVariableDeclaration at 0", "INS SimpleType: DataOutput to SingleVariableDeclaration at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: DataOutput to SimpleType: DataOutput at 0", "INS SimpleName: I to SimpleType: I at 0", "INS SimpleName: key to SingleVariableDeclaration at 1", "INS SimpleType: IOException to MethodDeclaration at 6", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: key to MethodInvocation at 0", "INS Modifier: protected to MethodDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: output to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS ExpressionStatement to Block at 0", "INS SimpleName: write to MethodInvocation at 1", "INS SimpleName: writeVertexKey to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: output to MethodInvocation at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleName: id to MethodInvocation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: I to SimpleType: I at 0", "INS SimpleName: configuration to MethodInvocation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: id to VariableDeclarationFragment at 0", "INS SimpleType: I to VariableDeclarationStatement at 0", "INS SimpleType: DataInput to SingleVariableDeclaration at 0", "INS SimpleName: input to MethodInvocation at 2", "INS SimpleType: IOException to MethodDeclaration at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: readFields to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: createVertexId to MethodInvocation at 1", "INS SimpleName: id to ReturnStatement at 0", "INS Block to MethodDeclaration at 6", "INS ReturnStatement to Block at 2", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: DataInput to SimpleType: DataInput at 0", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS SimpleName: readVertexKey to MethodDeclaration at 3", "INS SimpleName: input to SingleVariableDeclaration at 1", "INS SimpleName: I to SimpleType: I at 0", "INS SimpleType: I to MethodDeclaration at 2", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 1"]}]}}, {"SimpleEdgeStore_diff": {"operations": ["Insert ImportDeclaration(17) into CompilationUnit(552) at 8", "Insert ImportDeclaration(19) into CompilationUnit(552) at 9", "Insert ImportDeclaration(21) into CompilationUnit(552) at 10", "Insert QualifiedName: java.io.DataInput(16) into ImportDeclaration(17) at 0", "Insert QualifiedName: java.io.DataOutput(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: java.io.IOException(20) into ImportDeclaration(21) at 0", "Insert MethodDeclaration(352) into TypeDeclaration: class(551) at 12", "Insert MethodDeclaration(381) into TypeDeclaration: class(551) at 13", "Insert MarkerAnnotation(332) into MethodDeclaration(352) at 0", "Insert Modifier: protected(333) into MethodDeclaration(352) at 1", "Insert PrimitiveType: void(334) into MethodDeclaration(352) at 2", "Insert SimpleName: writeVertexKey(335) into MethodDeclaration(352) at 3", "Insert SingleVariableDeclaration(339) into MethodDeclaration(352) at 4", "Insert SingleVariableDeclaration(343) into MethodDeclaration(352) at 5", "Insert SimpleType: IOException(345) into MethodDeclaration(352) at 6", "Insert Block(351) into MethodDeclaration(352) at 7", "Insert MarkerAnnotation(354) into MethodDeclaration(381) at 0", "Insert Modifier: protected(355) into MethodDeclaration(381) at 1", "Insert SimpleType: I(357) into MethodDeclaration(381) at 2", "Insert SimpleName: readVertexKey(358) into MethodDeclaration(381) at 3", "Insert SingleVariableDeclaration(362) into MethodDeclaration(381) at 4", "Insert SimpleType: IOException(364) into MethodDeclaration(381) at 5", "Insert Block(380) into MethodDeclaration(381) at 6", "Insert SimpleName: Override(331) into MarkerAnnotation(332) at 0", "Insert SimpleType: I(337) into SingleVariableDeclaration(339) at 0", "Insert SimpleName: key(338) into SingleVariableDeclaration(339) at 1", "Insert SimpleType: DataOutput(341) into SingleVariableDeclaration(343) at 0", "Insert SimpleName: output(342) into SingleVariableDeclaration(343) at 1", "Insert SimpleName: IOException(344) into SimpleType: IOException(345) at 0", "Insert ExpressionStatement(350) into Block(351) at 0", "Insert SimpleName: Override(353) into MarkerAnnotation(354) at 0", "Insert SimpleName: I(356) into SimpleType: I(357) at 0", "Insert SimpleType: DataInput(360) into SingleVariableDeclaration(362) at 0", "Insert SimpleName: input(361) into SingleVariableDeclaration(362) at 1", "Insert SimpleName: IOException(363) into SimpleType: IOException(364) at 0", "Insert VariableDeclarationStatement(372) into Block(380) at 0", "Insert ExpressionStatement(377) into Block(380) at 1", "Insert ReturnStatement(379) into Block(380) at 2", "Insert SimpleName: I(336) into SimpleType: I(337) at 0", "Insert SimpleName: DataOutput(340) into SimpleType: DataOutput(341) at 0", "Insert MethodInvocation(349) into ExpressionStatement(350) at 0", "Insert SimpleName: DataInput(359) into SimpleType: DataInput(360) at 0", "Insert SimpleType: I(366) into VariableDeclarationStatement(372) at 0", "Insert VariableDeclarationFragment(371) into VariableDeclarationStatement(372) at 1", "Insert MethodInvocation(376) into ExpressionStatement(377) at 0", "Insert SimpleName: id(378) into ReturnStatement(379) at 0", "Insert SimpleName: key(346) into MethodInvocation(349) at 0", "Insert SimpleName: write(347) into MethodInvocation(349) at 1", "Insert SimpleName: output(348) into MethodInvocation(349) at 2", "Insert SimpleName: I(365) into SimpleType: I(366) at 0", "Insert SimpleName: id(367) into VariableDeclarationFragment(371) at 0", "Insert MethodInvocation(370) into VariableDeclarationFragment(371) at 1", "Insert SimpleName: id(373) into MethodInvocation(376) at 0", "Insert SimpleName: readFields(374) into MethodInvocation(376) at 1", "Insert SimpleName: input(375) into MethodInvocation(376) at 2", "Insert SimpleName: configuration(368) into MethodInvocation(370) at 0", "Insert SimpleName: createVertexId(369) into MethodInvocation(370) at 1"]}}, {"ComputeCallable_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 17"]}, {"root": "UPDATE from java.util.concurrent.BlockingQueue to org.apache.giraph.partition.PartitionStore", "operations": ["UPD QualifiedName: java.util.concurrent.BlockingQueue from java.util.concurrent.BlockingQueue to org.apache.giraph.partition.PartitionStore"]}, {"root": "UPDATE from  Vertex index value to   Vertex index value", "operations": ["UPD TextElement:  Vertex index value from  Vertex index value to   Vertex index value"]}, {"root": "UPDATE from  Vertex value to   Vertex value", "operations": ["UPD TextElement:  Vertex value from  Vertex value to   Vertex value"]}, {"root": "UPDATE from  Edge value to   Edge value", "operations": ["UPD TextElement:  Edge value from  Edge value to   Edge value"]}, {"root": "INS VariableDeclarationStatement to Block at 8", "operations": ["INS SimpleName: I to SimpleType: I at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 8", "INS SimpleType: V to ParameterizedType: PartitionStore<I,V,E> at 2", "INS SimpleName: PartitionStore to SimpleType: PartitionStore at 0", "INS SimpleName: V to SimpleType: V at 0", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleType: I to ParameterizedType: PartitionStore<I,V,E> at 1", "INS SimpleName: partitionStore to VariableDeclarationFragment at 0", "INS SimpleType: PartitionStore to ParameterizedType: PartitionStore<I,V,E> at 0", "INS ParameterizedType: PartitionStore<I,V,E> to VariableDeclarationStatement at 0", "INS SimpleType: E to ParameterizedType: PartitionStore<I,V,E> at 3"]}, {"root": "INS BooleanLiteral: true to WhileStatement at 0", "operations": ["INS BooleanLiteral: true to WhileStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Partition<I,V,E> to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from partitionId to partition", "operations": ["UPD SimpleName: partitionId from partitionId to partition", "UPD SimpleName: partitionId from partitionId to partition"]}, {"root": "UPDATE from partitionIdQueue to partitionStore", "operations": ["UPD SimpleName: partitionIdQueue from partitionIdQueue to partitionStore", "UPD SimpleName: partitionIdQueue from partitionIdQueue to partitionStore", "UPD SimpleName: getPartitionStore from getPartitionStore to partitionStore"]}, {"root": "UPDATE from poll to getNextPartition", "operations": ["UPD SimpleName: poll from poll to getNextPartition"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getPartitionStore to MethodInvocation at 0"]}, {"root": "UPDATE from size to getNumPartitions", "operations": ["UPD SimpleName: size from size to getNumPartitions"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL TextElement: Thread-safe queue of all partition ids ", "DEL SimpleName: Integer", "DEL ParameterizedType: BlockingQueue<Integer>", "DEL FieldDeclaration", "DEL SimpleName: BlockingQueue", "DEL TagElement", "DEL Javadoc", "DEL SimpleType: Integer", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL SimpleType: BlockingQueue", "DEL Modifier: final", "DEL SimpleName: partitionIdQueue"]}, {"root": "DEL TagElement: @param", "operations": ["DEL SimpleName: partitionIdQueue", "DEL TagElement: @param", "DEL TextElement:  Queue of partition ids (thread-safe)"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: Integer", "DEL SimpleName: BlockingQueue", "DEL SimpleName: partitionIdQueue", "DEL SimpleType: BlockingQueue", "DEL ParameterizedType: BlockingQueue<Integer>", "DEL SimpleType: Integer"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: partitionIdQueue", "DEL SimpleName: partitionIdQueue", "DEL Assignment: =", "DEL FieldAccess", "DEL ThisExpression"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL PrefixExpression: !", "DEL SimpleName: isEmpty", "DEL SimpleName: partitionIdQueue", "DEL MethodInvocation"]}, {"root": "DEL SimpleType: Integer", "operations": ["DEL SimpleType: Integer", "DEL SimpleName: Integer"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: partitionId", "DEL VariableDeclarationStatement", "DEL SimpleName: getOrCreatePartition", "DEL SimpleName: partition"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: serviceWorker", "DEL MethodInvocation"]}]}}, {"ComputeCallable_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(1067) at 17", "Update QualifiedName: java.util.concurrent.BlockingQueue(8) to org.apache.giraph.partition.PartitionStore", "Update TextElement:  Vertex index value(78) to   Vertex index value", "Update TextElement:  Vertex value(83) to   Vertex value", "Update TextElement:  Edge value(88) to   Edge value", "Insert VariableDeclarationStatement(591) into Block(838) at 8", "Insert ParameterizedType: PartitionStore<I,V,E>(585) into VariableDeclarationStatement(591) at 0", "Insert VariableDeclarationFragment(590) into VariableDeclarationStatement(591) at 1", "Insert BooleanLiteral: true(592) into WhileStatement(739) at 0", "Move VariableDeclarationStatement(630) into Block(738) at 0", "Insert SimpleType: PartitionStore(578) into ParameterizedType: PartitionStore<I,V,E>(585) at 0", "Insert SimpleType: I(580) into ParameterizedType: PartitionStore<I,V,E>(585) at 1", "Insert SimpleType: V(582) into ParameterizedType: PartitionStore<I,V,E>(585) at 2", "Insert SimpleType: E(584) into ParameterizedType: PartitionStore<I,V,E>(585) at 3", "Insert SimpleName: partitionStore(586) into VariableDeclarationFragment(590) at 0", "Move MethodInvocation(643) into VariableDeclarationFragment(590) at 1", "Insert SimpleName: PartitionStore(577) into SimpleType: PartitionStore(578) at 0", "Insert SimpleName: I(579) into SimpleType: I(580) at 0", "Insert SimpleName: V(581) into SimpleType: V(582) at 0", "Insert SimpleName: E(583) into SimpleType: E(584) at 0", "Move ParameterizedType: Partition<I,V,E>(639) into VariableDeclarationStatement(614) at 0", "Update SimpleName: partitionId(612) to partition", "Update SimpleName: partitionId(618) to partition", "Update SimpleName: partitionIdQueue(613) to partitionStore", "Update SimpleName: poll(614) to getNextPartition", "Update SimpleName: getPartitionStore(751) to partitionStore", "Move SimpleName: getPartitionStore(751) into MethodInvocation(725) at 0", "Update SimpleName: partitionIdQueue(711) to partitionStore", "Update SimpleName: size(712) to getNumPartitions", "Delete TextElement: Thread-safe queue of all partition ids (200)", "Delete TagElement(201)", "Delete Javadoc(202)", "Delete Modifier: private(203)", "Delete Modifier: final(204)", "Delete SimpleName: BlockingQueue(205)", "Delete SimpleType: BlockingQueue(206)", "Delete SimpleName: Integer(207)", "Delete SimpleType: Integer(208)", "Delete ParameterizedType: BlockingQueue<Integer>(209)", "Delete SimpleName: partitionIdQueue(210)", "Delete VariableDeclarationFragment(211)", "Delete FieldDeclaration(212)", "Delete SimpleName: partitionIdQueue(348)", "Delete TextElement:  Queue of partition ids (thread-safe)(349)", "Delete TagElement: @param(350)", "Delete SimpleName: BlockingQueue(384)", "Delete SimpleType: BlockingQueue(385)", "Delete SimpleName: Integer(386)", "Delete SimpleType: Integer(387)", "Delete ParameterizedType: BlockingQueue<Integer>(388)", "Delete SimpleName: partitionIdQueue(389)", "Delete SingleVariableDeclaration(390)", "Delete ThisExpression(425)", "Delete SimpleName: partitionIdQueue(426)", "Delete FieldAccess(427)", "Delete SimpleName: partitionIdQueue(428)", "Delete Assignment: =(429)", "Delete ExpressionStatement(430)", "Delete SimpleName: partitionIdQueue(606)", "Delete SimpleName: isEmpty(607)", "Delete MethodInvocation(608)", "Delete PrefixExpression: !(609)", "Delete SimpleName: Integer(610)", "Delete SimpleType: Integer(611)", "Delete SimpleName: partition(640)", "Delete SimpleName: getOrCreatePartition(644)", "Delete SimpleName: partitionId(645)", "Delete MethodInvocation(646)", "Delete VariableDeclarationFragment(647)", "Delete VariableDeclarationStatement(648)", "Delete SimpleName: serviceWorker(750)", "Delete MethodInvocation(752)"]}}, {"GraphTaskManager_cluster": {"actions": [{"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 3"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS SimpleName: partitionStore to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: startIteration to MethodInvocation at 1", "INS ExpressionStatement to Block at 5"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.concurrent.ArrayBlockingQueue"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.concurrent.BlockingQueue"]}, {"root": "DEL SimpleName: numPartitions", "operations": ["DEL SimpleName: numPartitions"]}, {"root": "DEL TagElement: @param", "operations": ["DEL TagElement: @param", "DEL SimpleName: numPartitions", "DEL TextElement:  the number of data partitions (vertices) to process"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL PrimitiveType: int", "DEL SingleVariableDeclaration", "DEL SimpleName: numPartitions"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleType: BlockingQueue", "DEL SimpleType: Integer", "DEL VariableDeclarationStatement", "DEL SimpleName: Integer", "DEL ParameterizedType: BlockingQueue<Integer>", "DEL VariableDeclarationFragment", "DEL SimpleName: Integer", "DEL SimpleName: numPartitions", "DEL SimpleType: Integer", "DEL SimpleName: ArrayBlockingQueue", "DEL Modifier: final", "DEL SimpleName: BlockingQueue", "DEL ParameterizedType: ArrayBlockingQueue<Integer>", "DEL SimpleName: computePartitionIdQueue", "DEL ClassInstanceCreation", "DEL SimpleType: ArrayBlockingQueue"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: computePartitionIdQueue", "DEL SimpleName: add", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: partitionId"]}, {"root": "DEL SimpleName: computePartitionIdQueue", "operations": ["DEL SimpleName: computePartitionIdQueue"]}]}}, {"GraphTaskManager_diff": {"operations": ["Move VariableDeclarationStatement(2266) into Block(2399) at 3", "Insert ExpressionStatement(2289) into Block(2399) at 4", "Insert MethodInvocation(2288) into ExpressionStatement(2289) at 0", "Insert SimpleName: partitionStore(2286) into MethodInvocation(2288) at 0", "Insert SimpleName: startIteration(2287) into MethodInvocation(2288) at 1", "Delete QualifiedName: java.util.concurrent.ArrayBlockingQueue(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: java.util.concurrent.BlockingQueue(18)", "Delete ImportDeclaration(19)", "Delete SimpleName: numPartitions(1070)", "Delete SimpleName: numPartitions(2196)", "Delete TextElement:  the number of data partitions (vertices) to process(2197)", "Delete TagElement: @param(2198)", "Delete PrimitiveType: int(2240)", "Delete SimpleName: numPartitions(2241)", "Delete SingleVariableDeclaration(2242)", "Delete Modifier: final(2246)", "Delete SimpleName: BlockingQueue(2247)", "Delete SimpleType: BlockingQueue(2248)", "Delete SimpleName: Integer(2249)", "Delete SimpleType: Integer(2250)", "Delete ParameterizedType: BlockingQueue<Integer>(2251)", "Delete SimpleName: computePartitionIdQueue(2252)", "Delete SimpleName: ArrayBlockingQueue(2253)", "Delete SimpleType: ArrayBlockingQueue(2254)", "Delete SimpleName: Integer(2255)", "Delete SimpleType: Integer(2256)", "Delete ParameterizedType: ArrayBlockingQueue<Integer>(2257)", "Delete SimpleName: numPartitions(2258)", "Delete ClassInstanceCreation(2259)", "Delete VariableDeclarationFragment(2260)", "Delete VariableDeclarationStatement(2261)", "Delete SimpleName: computePartitionIdQueue(2289)", "Delete SimpleName: add(2290)", "Delete SimpleName: partitionId(2291)", "Delete MethodInvocation(2292)", "Delete ExpressionStatement(2293)", "Delete SimpleName: computePartitionIdQueue(2380)"]}}, {"DiskBackedPartitionStore_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL QualifiedName: org.apache.giraph.partition", "DEL PackageDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.giraph.conf.GiraphConstants.MAX_PARTITIONS_IN_MEMORY"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.giraph.conf.GiraphConstants.MAX_STICKY_PARTITIONS"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.giraph.conf.GiraphConstants.NUM_COMPUTE_THREADS"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.giraph.conf.GiraphConstants.NUM_INPUT_THREADS", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.giraph.conf.GiraphConstants.NUM_OUTPUT_THREADS"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.giraph.conf.GiraphConstants.PARTITIONS_DIRECTORY"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.BufferedInputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.BufferedOutputStream"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.DataInput", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.DataInputStream"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.DataOutput"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.DataOutputStream"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.File"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.FileInputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.FileOutputStream", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Iterator", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Map", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Map.Entry", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.concurrent.ConcurrentMap"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.concurrent.atomic.AtomicInteger"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.atomic.AtomicLong", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.giraph.bsp.CentralizedServiceWorker", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.giraph.conf.ImmutableClassesGiraphConfiguration", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.giraph.edge.OutEdges", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.giraph.graph.Vertex", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.Writable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.io.WritableComparable", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapreduce.Mapper", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.hadoop.mapreduce.Mapper.Context", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.log4j.Logger"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.collect.Iterables"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.collect.Maps"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.hash.HashFunction"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.hash.Hashing"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Block", "DEL MethodInvocation", "DEL PrimitiveType: void", "DEL InfixExpression: +", "DEL Assignment: =", "DEL SimpleType: I", "DEL SimpleName: exists", "DEL SimpleName: state", "DEL Block", "DEL IfStatement", "DEL SwitchStatement", "DEL MethodDeclaration", "DEL Block", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL SimpleName: LOG", "DEL FieldDeclaration", "DEL SimpleName: id", "DEL TagElement: @param", "DEL SimpleName: readOutEdges", "DEL SimpleName: Integer", "DEL Assignment: =", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: e", "DEL SimpleName: V", "DEL MethodInvocation", "DEL SimpleName: entry", "DEL SimpleName: Partition", "DEL SimpleType: IllegalStateException", "DEL SimpleName: inputStream", "DEL ThisExpression", "DEL SimpleName: lru", "DEL SimpleName: partition", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleType: E", "DEL SimpleType: IllegalStateException", "DEL SimpleName: String", "DEL NumberLiteral: 1", "DEL SimpleType: Integer", "DEL TextElement:  The last recently used entry.", "DEL SimpleName: offloadPartition", "DEL SimpleName: getId", "DEL SimpleName: Integer", "DEL SimpleName: LOG", "DEL TextElement: partition object", "DEL SimpleName: getState", "DEL MethodInvocation", "DEL SimpleName: E", "DEL SimpleName: in", "DEL SimpleName: numPartitionsInMem", "DEL SimpleName: getEdgesPath", "DEL TagElement", "DEL VariableDeclarationStatement", "DEL QualifiedType: Mapper<?,?,?,?>.Context", "DEL SimpleType: V", "DEL SimpleName: State", "DEL SimpleName: conf", "DEL SimpleType: E", "DEL TextElement: <b>ONDISK case</b><br />", "DEL SimpleName: String", "DEL SimpleName: I", "DEL SimpleName: append", "DEL TagElement: @param", "DEL ParameterizedType: Partition<I,V,E>", "DEL Assignment: =", "DEL SimpleName: getVertexCount", "DEL SimpleName: partition", "DEL SimpleName: isNotDone", "DEL FieldAccess", "DEL SimpleName: getEdgeCount", "DEL SimpleType: FileOutputStream", "DEL SimpleName: IllegalStateException", "DEL MethodInvocation", "DEL SimpleName: E", "DEL PrefixExpression: !", "DEL SimpleName: wait", "DEL SimpleType: I", "DEL SimpleName: IOException", "DEL SimpleName: FileOutputStream", "DEL ThrowStatement", "DEL SimpleName: id", "DEL WhileStatement", "DEL SimpleName: e", "DEL TextElement: that LRU objects are both INACTIVE and ONDISK at the same time, which is", "DEL FieldDeclaration", "DEL ExpressionStatement", "DEL NullLiteral", "DEL SimpleType: MetaPartition", "DEL SimpleName: LOG", "DEL MethodDeclaration", "DEL SimpleName: partitionId", "DEL SimpleName: LOG", "DEL SimpleName: Hashing", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL ParameterizedType: CentralizedServiceWorker<I,V,E>", "DEL SimpleName: vertexCount", "DEL ClassInstanceCreation", "DEL SimpleType: InterruptedException", "DEL IfStatement", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL SimpleType: MetaPartition", "DEL Block", "DEL TextElement:  The vertex to initialize", "DEL Assignment: =", "DEL SimpleType: Iterator", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: vertex", "DEL SimpleName: loadPartition", "DEL SimpleName: meta", "DEL VariableDeclarationFragment", "DEL SimpleName: getState", "DEL MethodInvocation", "DEL Modifier: private", "DEL SimpleName: DataOutputStream", "DEL ExpressionStatement", "DEL SimpleName: getId", "DEL Assignment: =", "DEL FieldAccess", "DEL WhileStatement", "DEL MethodInvocation", "DEL SimpleName: append", "DEL MethodInvocation", "DEL SimpleName: file", "DEL VariableDeclarationStatement", "DEL SimpleName: id", "DEL SimpleName: msg", "DEL SimpleType: String", "DEL SimpleName: isNotDone", "DEL SimpleName: DataOutput", "DEL SimpleName: error", "DEL TextElement: Task that adds a partition to the store.", "DEL SimpleName: lru", "DEL SimpleType: I", "DEL SimpleType: OutEdges", "DEL FieldDeclaration", "DEL ParameterizedType: ImmutableClassesGiraphConfiguration<I,V,E>", "DEL SimpleName: partition", "DEL SimpleName: conf", "DEL SimpleName: getParentFile", "DEL Assignment: =", "DEL SimpleName: wait", "DEL SimpleName: isSticky", "DEL SimpleType: File", "DEL Assignment: =", "DEL SimpleName: outputStream", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SimpleName: E", "DEL SimpleType: StringBuilder", "DEL FieldAccess", "DEL SimpleType: IOException", "DEL SimpleName: LOG", "DEL ExpressionStatement", "DEL ThrowStatement", "DEL SimpleName: addPartition", "DEL SimpleName: swapOutPartition", "DEL MethodInvocation", "DEL SimpleName: meta", "DEL SimpleName: File", "DEL MethodInvocation", "DEL TextElement: partition-based lock allows the threads to concurrently operate on", "DEL Block", "DEL SimpleType: String", "DEL SimpleName: numPartitionsInMem", "DEL SimpleName: info", "DEL ExpressionStatement", "DEL SimpleName: Integer", "DEL MethodInvocation", "DEL SimpleType: E", "DEL Block", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL Javadoc", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL TextElement: The algorithm implemented by this class is quite intricate due to the", "DEL QualifiedName: State.INACTIVE", "DEL SingleVariableDeclaration", "DEL NumberLiteral: 0", "DEL EnumConstantDeclaration", "DEL SimpleName: isDone", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL SynchronizedStatement", "DEL TextElement: <", "DEL SimpleName: file", "DEL SimpleType: E", "DEL Assignment: =", "DEL Block", "DEL SimpleType: V", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: in", "DEL SimpleType: E", "DEL SimpleType: I", "DEL Modifier: public", "DEL SimpleType: IllegalStateException", "DEL SingleVariableDeclaration", "DEL SimpleName: vertex", "DEL SimpleName: I", "DEL SimpleName: references", "DEL VariableDeclarationStatement", "DEL SimpleName: Override", "DEL SimpleName: getPartition", "DEL Block", "DEL EnhancedForStatement", "DEL IfStatement", "DEL SimpleName: meta", "DEL Block", "DEL NullLiteral", "DEL Assignment: =", "DEL SimpleName: partition", "DEL Javadoc", "DEL FieldAccess", "DEL InfixExpression: &&", "DEL PrimitiveType: long", "DEL FieldAccess", "DEL MethodDeclaration", "DEL IfStatement", "DEL SimpleName: Integer", "DEL SimpleName: ConcurrentMap", "DEL ExpressionStatement", "DEL SimpleName: vertex", "DEL SimpleName: inc", "DEL SwitchCase", "DEL MethodInvocation", "DEL SimpleType: FileOutputStream", "DEL ExpressionStatement", "DEL InfixExpression: +", "DEL InfixExpression: >", "DEL SimpleName: getState", "DEL Modifier: private", "DEL SimpleName: id", "DEL SimpleName: numOfStickyPartitions", "DEL SimpleName: meta", "DEL SimpleName: msg", "DEL StringLiteral: \"addPartition: Failed while Offloading New Partition: \"", "DEL SimpleName: Integer", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleName: unmodifiableIterable", "DEL PrimitiveType: long", "DEL SimpleName: keySet", "DEL ExpressionStatement", "DEL SimpleName: Math", "DEL MethodInvocation", "DEL Block", "DEL TryStatement", "DEL BooleanLiteral: false", "DEL ReturnStatement", "DEL StringLiteral: \"Meta Data: { \"", "DEL MethodInvocation", "DEL QualifiedName: State.ONDISK", "DEL SimpleType: Partition", "DEL MethodInvocation", "DEL SimpleName: error", "DEL MethodInvocation", "DEL NullLiteral", "DEL Modifier: public", "DEL SimpleName: p", "DEL SimpleName: edges", "DEL ParameterizedType: Vertex<I,V,E>", "DEL SimpleName: meta", "DEL VariableDeclarationStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: e", "DEL SimpleName: state", "DEL SimpleName: E", "DEL SimpleName: hasher", "DEL SimpleType: Integer", "DEL CatchClause", "DEL SimpleName: LOG", "DEL MethodDeclaration", "DEL Modifier: private", "DEL MethodInvocation", "DEL Modifier: private", "DEL SimpleType: Partition", "DEL SimpleName: getAbsolutePath", "DEL SimpleName: getAndDecrement", "DEL SimpleType: V", "DEL SimpleType: V", "DEL SimpleName: meta", "DEL Block", "DEL SimpleName: id", "DEL Block", "DEL NullLiteral", "DEL SimpleType: IllegalStateException", "DEL SimpleName: error", "DEL MethodInvocation", "DEL SimpleName: meta", "DEL Assignment: =", "DEL SimpleType: BufferedOutputStream", "DEL SimpleName: getPartition", "DEL SimpleName: e", "DEL SimpleType: V", "DEL IfStatement", "DEL MemberValuePair", "DEL SimpleName: id", "DEL SimpleName: isDebugEnabled", "DEL SimpleType: E", "DEL InfixExpression: &&", "DEL SimpleName: meta", "DEL SimpleName: isInfoEnabled", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: id", "DEL SimpleName: vertex", "DEL TextElement: </li>", "DEL InfixExpression: +", "DEL SimpleName: MetaPartition", "DEL InfixExpression: +", "DEL VariableDeclarationFragment", "DEL SimpleName: filein", "DEL SimpleName: partition", "DEL SimpleName: msg", "DEL TextElement: Removes and returns the last recently used entry.", "DEL ExpressionStatement", "DEL IfStatement", "DEL SimpleName: E", "DEL SimpleName: isSticky", "DEL SimpleType: Vertex", "DEL TextElement:  the partition to set", "DEL TextElement: <b>XXX</b>:<br/>", "DEL SimpleName: path", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL PrimitiveType: boolean", "DEL InfixExpression: ==", "DEL SimpleName: get", "DEL MethodDeclaration", "DEL SimpleType: E", "DEL InfixExpression: +", "DEL InfixExpression: &&", "DEL SimpleName: putVertex", "DEL Modifier: private", "DEL TextElement: function is that only the first thread interested will be", "DEL VariableDeclarationFragment", "DEL SimpleName: numPartitionsInMem", "DEL SimpleName: error", "DEL CastExpression", "DEL SimpleType: I", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: msg", "DEL SimpleName: MetaPartition", "DEL InfixExpression: &&", "DEL SimpleName: meta", "DEL Javadoc", "DEL SimpleType: E", "DEL SimpleName: remove", "DEL SimpleType: I", "DEL SimpleName: createVertexValue", "DEL SimpleName: LOG", "DEL MethodInvocation", "DEL SimpleName: I", "DEL SimpleType: FileInputStream", "DEL NumberLiteral: 0", "DEL Block", "DEL SimpleName: I", "DEL ReturnStatement", "DEL SimpleName: idx", "DEL SimpleName: getId", "DEL SimpleName: getPartition", "DEL InfixExpression: ==", "DEL SimpleName: edgeCount", "DEL SimpleName: outputStream", "DEL MethodInvocation", "DEL ThisExpression", "DEL SynchronizedStatement", "DEL StringLiteral: \", isStaticGraph=\"", "DEL SimpleName: file", "DEL SimpleName: toString", "DEL SimpleName: Vertex", "DEL MethodInvocation", "DEL QualifiedName: State.ONDISK", "DEL SimpleName: values", "DEL SimpleName: id", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleType: FileInputStream", "DEL ExpressionStatement", "DEL SimpleName: I", "DEL SimpleType: V", "DEL SimpleName: meta", "DEL SimpleName: msg", "DEL SimpleType: AtomicLong", "DEL SimpleType: MetaPartition", "DEL SimpleName: msg", "DEL ParameterizedType: Partition<I,V,E>", "DEL SynchronizedStatement", "DEL MethodInvocation", "DEL TextElement: use for atomic operations on partitions, as previously described.", "DEL SimpleType: AtomicInteger", "DEL InfixExpression: &&", "DEL SimpleName: prevVertexCount", "DEL SimpleName: getEdgeCount", "DEL SimpleName: partition", "DEL NumberLiteral: 0", "DEL SimpleName: get", "DEL ReturnStatement", "DEL SimpleName: isEmpty", "DEL SimpleType: MetaPartition", "DEL SimpleType: MetaPartition", "DEL StringLiteral: \"No partition was provided.\"", "DEL SimpleName: I", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL SimpleType: String", "DEL SimpleName: isHalted", "DEL SimpleType: Vertex", "DEL SimpleName: e", "DEL SimpleName: swapOutPartition", "DEL SwitchCase", "DEL NullLiteral", "DEL SimpleName: E", "DEL Modifier: private", "DEL SimpleName: partition", "DEL SimpleName: fileout", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: partition", "DEL Javadoc", "DEL TextElement: this object could be empty. ", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL InfixExpression: &&", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: lru", "DEL SimpleName: getVerticesPath", "DEL SimpleName: E", "DEL SimpleName: State", "DEL QualifiedName: State.ONDISK", "DEL MethodInvocation", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: getId", "DEL SimpleName: partition", "DEL Javadoc", "DEL MethodInvocation", "DEL Javadoc", "DEL SimpleName: getPrevVertexCount", "DEL PrimitiveType: void", "DEL SimpleType: I", "DEL ParameterizedType: Partition<I,V,E>", "DEL Modifier: public", "DEL SimpleName: state", "DEL StringLiteral: \"TLW_TWO_LOCK_WAIT\"", "DEL InfixExpression: +", "DEL ParameterizedType: Iterator<Entry<Integer,MetaPartition>>", "DEL IfStatement", "DEL CatchClause", "DEL SimpleName: state", "DEL MethodInvocation", "DEL SimpleName: next", "DEL SimpleName: meta", "DEL NullLiteral", "DEL Block", "DEL Block", "DEL PrefixExpression: !", "DEL SimpleType: BufferedOutputStream", "DEL SimpleType: InterruptedException", "DEL PrimitiveType: boolean", "DEL SimpleName: String", "DEL SimpleType: OutEdges", "DEL SimpleName: getId", "DEL VariableDeclarationStatement", "DEL Modifier: public", "DEL Modifier: private", "DEL SimpleName: I", "DEL Block", "DEL InfixExpression: +", "DEL StringLiteral: \"offloadPartition: file \"", "DEL SimpleName: conf", "DEL SimpleName: I", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL MethodDeclaration", "DEL SimpleName: Vertex", "DEL SimpleName: readFields", "DEL StringLiteral: \"; \"", "DEL ParameterizedType: Partition<I,V,E>", "DEL SimpleName: E", "DEL SimpleType: V", "DEL InfixExpression: +", "DEL NormalAnnotation", "DEL ThrowStatement", "DEL SwitchCase", "DEL PrimitiveType: long", "DEL PrimitiveType: int", "DEL ClassInstanceCreation", "DEL StringLiteral: \"deletePartition: error while waiting on \"", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleName: isDebugEnabled", "DEL SimpleName: partitions", "DEL MethodInvocation", "DEL SimpleName: delete", "DEL Modifier: private", "DEL TextElement: behavior, it has been left as a future work.", "DEL SimpleName: IOException", "DEL SimpleName: meta", "DEL Modifier: private", "DEL SimpleName: getVerticesPath", "DEL Javadoc", "DEL SimpleName: getAndIncrement", "DEL TagElement", "DEL SimpleName: setActive", "DEL SimpleName: getEdgesPath", "DEL SimpleName: IllegalStateException", "DEL MethodDeclaration", "DEL SimpleName: meta", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL ForStatement", "DEL Block", "DEL SimpleName: meta", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL SimpleType: FileOutputStream", "DEL SimpleName: temp", "DEL SimpleType: IllegalStateException", "DEL SimpleName: IOException", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: meta", "DEL SimpleType: I", "DEL SimpleType: InterruptedException", "DEL SimpleName: IllegalStateException", "DEL SimpleType: IllegalStateException", "DEL MethodInvocation", "DEL SimpleName: meta", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL FieldDeclaration", "DEL TextElement:       meta partition container for the partitiont to save", "DEL SimpleType: Iterable", "DEL SimpleName: setPrevVertexCount", "DEL TextElement: <li><b>LRU data structure</b>, which keeps track of the objects which are", "DEL VariableDeclarationStatement", "DEL Assignment: =", "DEL ExpressionStatement", "DEL TextElement: while most of the concurrent behaviors are gracefully handled, the", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL TextElement:  and", "DEL SimpleName: file", "DEL SimpleName: outputStream", "DEL MethodInvocation", "DEL Javadoc", "DEL SimpleName: meta", "DEL MethodInvocation", "DEL SimpleName: addToVertexCount", "DEL SimpleName: E", "DEL SimpleType: V", "DEL BreakStatement", "DEL SimpleName: I", "DEL TextElement: </ul>", "DEL Javadoc", "DEL ExpressionStatement", "DEL TryStatement", "DEL SimpleName: IOException", "DEL MarkerAnnotation", "DEL SimpleType: String", "DEL SimpleName: DataInput", "DEL SimpleName: IllegalStateException", "DEL ExpressionStatement", "DEL SimpleName: id", "DEL SimpleName: existing", "DEL SimpleType: MetaPartition", "DEL TextElement: ID of the partition ", "DEL TextElement:  Context", "DEL MethodInvocation", "DEL SimpleType: I", "DEL SimpleName: vertexCount", "DEL SimpleType: MetaPartition", "DEL SimpleName: vertex", "DEL SimpleName: I", "DEL ReturnStatement", "DEL TextElement: Counter used to keep track of the number of references retained by", "DEL ThrowStatement", "DEL QualifiedName: userPaths.length", "DEL SimpleName: LOG", "DEL SimpleName: BufferedInputStream", "DEL ReturnStatement", "DEL SimpleName: isSticky", "DEL TryStatement", "DEL ExpressionStatement", "DEL SimpleType: MetaPartition", "DEL TextElement: This function is thread-safe since it locks using the intrinsic lock of", "DEL ThisExpression", "DEL SimpleName: e", "DEL InfixExpression: >=", "DEL Block", "DEL BooleanLiteral: true", "DEL StringLiteral: \"/\"", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: toString", "DEL SimpleName: partitionId", "DEL SimpleName: fileout", "DEL Assignment: =", "DEL SimpleName: vertex", "DEL TagElement", "DEL SimpleName: state", "DEL SimpleName: E", "DEL TagElement: @param", "DEL Block", "DEL SimpleName: putPartition", "DEL CatchClause", "DEL SimpleName: msg", "DEL SimpleName: id", "DEL ExpressionStatement", "DEL TextElement: <li>", "DEL MethodInvocation", "DEL SimpleName: partition", "DEL SimpleName: IllegalStateException", "DEL ArrayAccess", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: File", "DEL ExpressionStatement", "DEL SimpleName: MetaPartition", "DEL TagElement", "DEL BooleanLiteral: true", "DEL Block", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL SimpleName: WritableComparable", "DEL SimpleType: InterruptedException", "DEL MethodInvocation", "DEL SimpleName: msg", "DEL NullLiteral", "DEL MethodInvocation", "DEL SimpleName: partitionId", "DEL SimpleName: isSticky", "DEL SimpleType: StringBuilder", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL InfixExpression: <", "DEL SimpleName: MetaPartition", "DEL ExpressionStatement", "DEL SimpleName: maxThreads", "DEL Modifier: public", "DEL TextElement: States the partition can be found in ", "DEL StringLiteral: \"; \"", "DEL SimpleName: vertexCount", "DEL SimpleName: maxPartitionsInMem", "DEL Block", "DEL NullLiteral", "DEL SwitchStatement", "DEL MethodInvocation", "DEL SimpleName: V", "DEL SimpleName: partition", "DEL SimpleType: InterruptedException", "DEL ClassInstanceCreation", "DEL SimpleName: E", "DEL SynchronizedStatement", "DEL SimpleName: partitions", "DEL SimpleName: state", "DEL SimpleName: getAbsolutePath", "DEL TryStatement", "DEL SimpleName: SuppressWarnings", "DEL Assignment: =", "DEL StringLiteral: \"contain the same data\"", "DEL ParameterizedType: Partition<I,V,E>", "DEL SimpleType: I", "DEL SimpleName: MetaPartition", "DEL VariableDeclarationStatement", "DEL ClassInstanceCreation", "DEL SimpleName: id", "DEL SimpleType: IllegalStateException", "DEL SimpleName: meta", "DEL SimpleType: E", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: E", "DEL TagElement", "DEL PrimitiveType: int", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: partition", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL SingleVariableDeclaration", "DEL SimpleName: inc", "DEL SimpleName: partitionId", "DEL Block", "DEL StringLiteral: \"illegal state \"", "DEL StringLiteral: \"loadPartition: failed to delete \"", "DEL SimpleName: deletePartitionFiles", "DEL SimpleType: E", "DEL SimpleName: close", "DEL SimpleName: meta", "DEL ExpressionStatement", "DEL SimpleName: bufferin", "DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: File", "DEL SingleVariableDeclaration", "DEL SimpleName: Partition", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: V", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL TagElement: @param", "DEL TextElement: acquire and is currently stored on disk.</li>", "DEL InfixExpression: +", "DEL ThisExpression", "DEL SimpleType: E", "DEL IfStatement", "DEL SimpleType: IllegalStateException", "DEL ParameterizedType: Partition<I,V,E>", "DEL SimpleName: E", "DEL TextElement: <br />", "DEL SimpleName: ACTIVE", "DEL TextElement: Class logger. ", "DEL SimpleName: addPartition", "DEL MethodInvocation", "DEL SimpleName: partition", "DEL MethodInvocation", "DEL SimpleName: V", "DEL IfStatement", "DEL ClassInstanceCreation", "DEL SimpleName: getLogger", "DEL SimpleName: getAndDecrement", "DEL PrimitiveType: long", "DEL TextElement: container, called the MetaPartition. This object contains also meta", "DEL SimpleName: getMessage", "DEL SimpleName: MetaPartition", "DEL TextElement: Number of edges contained in the partition ", "DEL SimpleName: output", "DEL TextElement: <ol>", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL FieldAccess", "DEL SimpleType: MetaPartition", "DEL Modifier: final", "DEL SimpleName: createAndInitializeOutEdges", "DEL SimpleName: output", "DEL SimpleName: File", "DEL SimpleName: Override", "DEL MethodInvocation", "DEL FieldAccess", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleName: partition", "DEL SimpleType: MetaPartition", "DEL Block", "DEL StringLiteral: \"; \"", "DEL SimpleName: meta", "DEL InfixExpression: +", "DEL BooleanLiteral: true", "DEL SimpleName: msg", "DEL SimpleType: BufferedOutputStream", "DEL SimpleName: offloadPartition", "DEL SimpleName: V", "DEL ParameterizedType: Partition<I,V,E>", "DEL WhileStatement", "DEL ClassInstanceCreation", "DEL SimpleName: error", "DEL SimpleName: INIT", "DEL FieldDeclaration", "DEL ExpressionStatement", "DEL SimpleName: meta", "DEL SimpleType: File", "DEL SimpleName: msg", "DEL TagElement: @param", "DEL SimpleName: IllegalStateException", "DEL ClassInstanceCreation", "DEL TextElement: >", "DEL SimpleName: meta", "DEL SimpleName: in", "DEL Modifier: private", "DEL Block", "DEL StringLiteral: \"rawtypes\"", "DEL SimpleName: file", "DEL Assignment: =", "DEL Block", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: references", "DEL SimpleName: output", "DEL SimpleType: V", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: DataInputStream", "DEL NumberLiteral: 0", "DEL Javadoc", "DEL SingleVariableDeclaration", "DEL SimpleName: vertexCount", "DEL MethodInvocation", "DEL TagElement", "DEL InfixExpression: >=", "DEL SimpleName: partition", "DEL SimpleType: Map", "DEL Block", "DEL SimpleName: partition", "DEL TagElement", "DEL MethodInvocation", "DEL SimpleType: DiskBackedPartitionStore", "DEL SimpleName: Vertex", "DEL StringLiteral: \"deletePartitionFiles: Failed to delete file \"", "DEL PrimitiveType: void", "DEL VariableDeclarationStatement", "DEL SimpleName: getMessage", "DEL SimpleType: IllegalStateException", "DEL StringLiteral: \"/partition-\"", "DEL SimpleType: IllegalStateException", "DEL SimpleName: serviceWorker", "DEL TextElement:  service worker reference", "DEL TagElement: @param", "DEL ClassInstanceCreation", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleName: file", "DEL SimpleName: MetaPartition", "DEL TagElement: @param", "DEL Block", "DEL ExpressionStatement", "DEL TextElement:  number of vertexes", "DEL MethodInvocation", "DEL SimpleName: addPartition", "DEL SimpleName: IllegalStateException", "DEL Block", "DEL TagElement", "DEL ExpressionStatement", "DEL Modifier: final", "DEL SimpleName: conf", "DEL PrimitiveType: void", "DEL SimpleName: DataOutputStream", "DEL Javadoc", "DEL Block", "DEL SimpleType: StringBuffer", "DEL SimpleName: meta", "DEL SimpleName: IllegalStateException", "DEL SimpleName: writeOutEdges", "DEL MethodInvocation", "DEL SimpleName: hash", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: writeVertexData", "DEL VariableDeclarationFragment", "DEL InfixExpression: ==", "DEL ExpressionStatement", "DEL SimpleName: getPartition", "DEL InfixExpression: +", "DEL SimpleName: V", "DEL SimpleName: state", "DEL SimpleName: Integer", "DEL Modifier: public", "DEL SimpleName: LOG", "DEL SimpleType: IOException", "DEL SimpleType: Integer", "DEL SimpleName: meta", "DEL ExpressionStatement", "DEL SimpleName: removePartition", "DEL SimpleName: Partition", "DEL MethodInvocation", "DEL SimpleName: LOG", "DEL SimpleType: E", "DEL SimpleName: I", "DEL SimpleName: msg", "DEL PrimitiveType: int", "DEL SimpleName: numPartitionsInMem", "DEL StringLiteral: \"mapred.job.id\"", "DEL SimpleName: meta", "DEL FieldDeclaration", "DEL TagElement", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL Block", "DEL SimpleType: DataInputStream", "DEL SimpleName: justification", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: DataInputStream", "DEL Block", "DEL PrimitiveType: boolean", "DEL MarkerAnnotation", "DEL ClassInstanceCreation", "DEL Block", "DEL SimpleName: outputStream", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SimpleName: filein", "DEL SimpleType: E", "DEL SimpleName: state", "DEL SimpleName: E", "DEL TagElement: @param", "DEL SimpleName: meta", "DEL SimpleName: FileOutputStream", "DEL ExpressionStatement", "DEL StringLiteral: \"Partition \"", "DEL SimpleName: getPartition", "DEL MethodInvocation", "DEL FieldAccess", "DEL NumberLiteral: 0", "DEL SimpleName: error", "DEL SimpleName: Integer", "DEL SimpleType: E", "DEL SimpleType: Partition", "DEL SimpleName: getAbsolutePath", "DEL BooleanLiteral: true", "DEL FieldAccess", "DEL MethodDeclaration", "DEL ThrowStatement", "DEL SimpleName: writeVertexData", "DEL SimpleName: id", "DEL SimpleName: e", "DEL Block", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL InfixExpression: ==", "DEL ParameterizedType: OutEdges<I,E>", "DEL ThisExpression", "DEL Assignment: =", "DEL SimpleName: e", "DEL InfixExpression: +", "DEL SimpleName: wait", "DEL SimpleType: Integer", "DEL SimpleName: LOG", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: String", "DEL TextElement: Get the path and basename of the storage files.", "DEL SimpleName: getEdges", "DEL TextElement: Set sticky bit to this partition", "DEL Javadoc", "DEL IfStatement", "DEL TagElement: @return", "DEL SimpleName: deletePartition", "DEL ThisExpression", "DEL MethodInvocation", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL SimpleName: numVertices", "DEL ClassInstanceCreation", "DEL SwitchCase", "DEL Assignment: =", "DEL MethodInvocation", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL Block", "DEL SimpleName: Iterables", "DEL MethodInvocation", "DEL TagElement", "DEL SimpleName: AtomicInteger", "DEL SimpleName: getPartition", "DEL MethodInvocation", "DEL SimpleName: context", "DEL MethodInvocation", "DEL SimpleName: ONDISK", "DEL SingleVariableDeclaration", "DEL SimpleName: meta", "DEL PrimitiveType: int", "DEL IfStatement", "DEL SimpleName: vertex", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL InfixExpression: +", "DEL SimpleName: toString", "DEL SimpleName: isSticky", "DEL Javadoc", "DEL SimpleName: Logger", "DEL ExpressionStatement", "DEL SimpleName: newLinkedHashMap", "DEL IfStatement", "DEL SimpleType: Partition", "DEL SimpleName: edges", "DEL SimpleName: FileInputStream", "DEL SimpleName: getArray", "DEL SimpleName: putPartition", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleType: I", "DEL MethodInvocation", "DEL SimpleName: msg", "DEL VariableDeclarationFragment", "DEL SynchronizedStatement", "DEL SimpleName: E", "DEL MethodInvocation", "DEL SimpleName: MetaPartition", "DEL PrimitiveType: void", "DEL Modifier: private", "DEL IfStatement", "DEL TextElement: execution of different operations on each partition.<br />", "DEL TextElement: non-sticky. The number of sicky partitions can also be specified manually.", "DEL ClassInstanceCreation", "DEL SimpleName: msg", "DEL TextElement: in charge to load it back to memory, hence waiting on 'lru'.", "DEL Assignment: =", "DEL ExpressionStatement", "DEL TagElement: @return", "DEL SimpleName: LOG", "DEL NumberLiteral: 1", "DEL InfixExpression: <", "DEL SimpleType: Integer", "DEL SimpleName: Context", "DEL SimpleType: V", "DEL SimpleName: file", "DEL IfStatement", "DEL SimpleType: State", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL TextElement: <b>Deadlock</b><br />", "DEL TagElement: @param", "DEL SimpleName: debug", "DEL MarkerAnnotation", "DEL SimpleName: meta", "DEL ClassInstanceCreation", "DEL TextElement:  meta partition container with the partition itself", "DEL MethodInvocation", "DEL Javadoc", "DEL SimpleName: File", "DEL SimpleType: I", "DEL SimpleName: Integer", "DEL SimpleName: error", "DEL SimpleName: file", "DEL SimpleType: MetaPartition", "DEL SimpleType: V", "DEL SimpleName: outputStream", "DEL ExpressionStatement", "DEL SimpleName: getMessage", "DEL SimpleType: Partition", "DEL SimpleName: MetaPartition", "DEL Javadoc", "DEL SimpleType: Partition", "DEL SimpleName: edgeCount", "DEL VariableDeclarationFragment", "DEL TextElement:  The partition", "DEL MethodInvocation", "DEL SimpleName: maxPartitionsInMem", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: CentralizedServiceWorker", "DEL Block", "DEL SimpleName: MetaPartition", "DEL TypeParameter", "DEL SimpleType: E", "DEL MethodInvocation", "DEL SimpleName: e", "DEL Modifier: private", "DEL SimpleName: deletePartition", "DEL SimpleName: partition", "DEL SimpleName: remove", "DEL PrimitiveType: boolean", "DEL TextElement: <b>LRU Lock</b>. Finally, an additional ADT is used to keep the LRU", "DEL MethodDeclaration", "DEL InfixExpression: &&", "DEL InfixExpression: !=", "DEL SimpleName: LOG", "DEL SingleVariableDeclaration", "DEL StringLiteral: \"getPartition: error while waiting on \"", "DEL StringLiteral: \" and cannot be offloaded.\"", "DEL Block", "DEL SimpleName: putIfAbsent", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: IllegalStateException", "DEL Javadoc", "DEL SimpleName: V", "DEL ReturnStatement", "DEL Javadoc", "DEL SimpleName: userPaths", "DEL ReturnStatement", "DEL SimpleName: numComputeThreads", "DEL SingleMemberAnnotation", "DEL MethodInvocation", "DEL BreakStatement", "DEL ExpressionStatement", "DEL Modifier: private", "DEL VariableDeclarationStatement", "DEL TextElement:  id of the partition", "DEL PrefixExpression: !", "DEL VariableDeclarationStatement", "DEL SimpleName: Partition", "DEL InfixExpression: ||", "DEL SimpleName: LOG", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: V", "DEL SimpleName: MetaPartition", "DEL TagElement", "DEL TagElement: @param", "DEL TagElement: @throws", "DEL SimpleName: vertex", "DEL SimpleName: MetaPartition", "DEL InfixExpression: ==", "DEL VariableDeclarationFragment", "DEL SimpleName: LOG", "DEL SimpleName: lru", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL TagElement: @throws", "DEL ClassInstanceCreation", "DEL SimpleName: partitions", "DEL SimpleType: V", "DEL SimpleName: conf", "DEL InfixExpression: &&", "DEL TagElement", "DEL SimpleName: get", "DEL FieldDeclaration", "DEL SimpleName: bufferin", "DEL ArrayCreation", "DEL SingleVariableDeclaration", "DEL PrimitiveType: void", "DEL ExpressionStatement", "DEL Dimension", "DEL SimpleName: isEmpty", "DEL SimpleName: LOG", "DEL SimpleType: DataOutput", "DEL TextElement:  amount to add to the vertex count", "DEL SimpleName: msg", "DEL ClassInstanceCreation", "DEL FieldDeclaration", "DEL FieldDeclaration", "DEL SimpleName: write", "DEL MethodInvocation", "DEL SimpleName: hasPartition", "DEL SimpleName: id", "DEL SimpleType: E", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL VariableDeclarationFragment", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: MetaPartition", "DEL SimpleName: exists", "DEL TextElement:  The partition owning the vertex", "DEL SimpleName: Partition", "DEL SimpleName: state", "DEL ClassInstanceCreation", "DEL SimpleName: Math", "DEL Assignment: =", "DEL ParameterizedType: Entry<Integer,MetaPartition>", "DEL NullLiteral", "DEL SimpleName: isDebugEnabled", "DEL SimpleName: outputStream", "DEL StringLiteral: \"Someone is holding the partition with id \"", "DEL ExpressionStatement", "DEL SimpleName: id", "DEL SimpleType: CentralizedServiceWorker", "DEL Assignment: =", "DEL ExpressionStatement", "DEL ThrowStatement", "DEL Modifier: static", "DEL SimpleName: IOException", "DEL SimpleName: numOfStickyPartitions", "DEL SimpleName: e", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL SimpleName: State", "DEL SimpleName: partition", "DEL SimpleName: Override", "DEL SimpleName: e", "DEL CastExpression", "DEL SimpleName: I", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL InfixExpression: -", "DEL SimpleName: vertexCount", "DEL SimpleName: InterruptedException", "DEL ClassInstanceCreation", "DEL SimpleName: Map", "DEL MethodDeclaration", "DEL SimpleType: IllegalStateException", "DEL SimpleName: partition", "DEL SimpleName: partitionId", "DEL SimpleName: Context", "DEL SimpleName: msg", "DEL SimpleName: I", "DEL SimpleName: maxPartitionsInMem", "DEL StringLiteral: \"previously inactive partition: \"", "DEL MethodDeclaration", "DEL VariableDeclarationStatement", "DEL SimpleType: String", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: file", "DEL Dimension", "DEL SimpleName: partition", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: Partition", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL SimpleType: E", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: vertex", "DEL BooleanLiteral: true", "DEL TextElement: Maximum number of slots. Read-only value, no need for concurrency", "DEL TextElement:  Configuration", "DEL WhileStatement", "DEL SimpleName: max", "DEL Block", "DEL SimpleName: FileInputStream", "DEL VariableDeclarationFragment", "DEL TagElement: @throws", "DEL ExpressionStatement", "DEL InfixExpression: ||", "DEL VariableDeclarationFragment", "DEL SimpleName: msg", "DEL SimpleType: IllegalStateException", "DEL Modifier: private", "DEL TagElement", "DEL SimpleName: bufferout", "DEL SimpleName: i", "DEL Block", "DEL Assignment: =", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL SimpleName: in", "DEL SimpleName: Integer", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: isStaticGraph", "DEL MethodInvocation", "DEL SimpleName: getAbsolutePath", "DEL NullLiteral", "DEL StringLiteral: \" already exists.\"", "DEL SimpleName: vertex", "DEL SimpleType: I", "DEL MethodInvocation", "DEL Modifier: final", "DEL SimpleName: i", "DEL SimpleName: fileout", "DEL SimpleName: msg", "DEL SimpleName: e", "DEL SimpleName: getVerticesPath", "DEL SimpleName: getVerticesPath", "DEL SimpleName: meta", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL SimpleName: partition", "DEL MethodDeclaration", "DEL SimpleName: String", "DEL MethodInvocation", "DEL Block", "DEL ExpressionStatement", "DEL Assignment: =", "DEL MethodInvocation", "DEL ThrowStatement", "DEL TagElement", "DEL SimpleName: meta", "DEL SimpleName: lru", "DEL SimpleName: partitionId", "DEL Block", "DEL SimpleName: getId", "DEL InfixExpression: ==", "DEL TextElement: Giraph configuration ", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL SimpleName: lru", "DEL ExpressionStatement", "DEL SimpleName: inputStream", "DEL SimpleName: V", "DEL StringLiteral: \"LRU data structure: \"", "DEL TagElement: @param", "DEL TextElement: user-threads", "DEL ExpressionStatement", "DEL SimpleName: partitionId", "DEL ExpressionStatement", "DEL TagElement", "DEL SimpleName: newConcurrentMap", "DEL SimpleName: i", "DEL SimpleName: temp", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL SimpleName: sb", "DEL SimpleName: partitions", "DEL ClassInstanceCreation", "DEL Javadoc", "DEL SimpleName: setOnDisk", "DEL SimpleName: meta", "DEL Assignment: =", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleName: edges", "DEL TextElement: This function is thread-safe using the intrinsic lock of the meta", "DEL SimpleType: I", "DEL FieldAccess", "DEL TextElement:  The partition", "DEL SimpleName: getPartition", "DEL Block", "DEL SimpleName: V", "DEL SimpleName: close", "DEL SimpleType: State", "DEL StringLiteral: \" for partition \"", "DEL SimpleName: V", "DEL SimpleName: decrementReferences", "DEL SimpleName: meta", "DEL SimpleName: getId", "DEL TextElement:  The output stream", "DEL NumberLiteral: 0", "DEL SimpleName: i", "DEL StringLiteral: \"not allowed. \"", "DEL SimpleName: partition", "DEL NullLiteral", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleType: I", "DEL ExpressionStatement", "DEL SimpleName: V", "DEL TextElement: service worker reference ", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"illegal state \"", "DEL SimpleName: meta", "DEL SimpleName: edgeCount", "DEL SimpleName: meta", "DEL PrimitiveType: boolean", "DEL SimpleName: error", "DEL IfStatement", "DEL TextElement: Previous number of vertices contained in the partition ", "DEL Block", "DEL TextElement: Get the path to the file where edges are stored.", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: lru", "DEL BooleanLiteral: true", "DEL ThisExpression", "DEL StringLiteral: \"Partition and Meta-Partition should \"", "DEL StringLiteral: \"lru is empty and there is not space in memory, \"", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL Block", "DEL SynchronizedStatement", "DEL Assignment: =", "DEL IfStatement", "DEL TextElement: interaction of several locks to guarantee performance. For this reason, here", "DEL SimpleName: createPartition", "DEL Assignment: =", "DEL SimpleName: error", "DEL SimpleName: prevVertexCount", "DEL VariableDeclarationStatement", "DEL TextElement: information about the partition. All these objects are used to", "DEL Modifier: private", "DEL PrimitiveType: void", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL QualifiedName: State.INIT", "DEL TextElement: Get the path to the file where vertices are stored.", "DEL SimpleType: DataOutputStream", "DEL ThisExpression", "DEL SimpleName: partition", "DEL InfixExpression: +", "DEL TextElement: <ul>", "DEL SimpleName: setSticky", "DEL Assignment: =", "DEL Block", "DEL SimpleName: temp", "DEL SimpleType: V", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: meta", "DEL ArrayType: String[]", "DEL MethodRef", "DEL SimpleName: meta", "DEL TextElement: In general, the partition store keeps N partitions in memory. To improve", "DEL MethodInvocation", "DEL SimpleName: id", "DEL VariableDeclarationStatement", "DEL Modifier: private", "DEL SimpleName: NUM_INPUT_THREADS", "DEL SimpleName: bufferout", "DEL SimpleName: getEdgeCount", "DEL TextElement: to guarantee safety, we use its intrinsic lock. Additionally, this lock", "DEL SimpleName: partitionId", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL SimpleName: getVertexCount", "DEL ExpressionStatement", "DEL Assignment: =", "DEL Javadoc", "DEL TextElement: Number of slots used ", "DEL TextElement: Read vertex edges from an input and set them to the vertex.", "DEL SimpleName: meta", "DEL SimpleType: E", "DEL SimpleType: I", "DEL SimpleName: inputStream", "DEL SimpleName: partition", "DEL SimpleName: IOException", "DEL SimpleType: E", "DEL ClassInstanceCreation", "DEL Block", "DEL MethodInvocation", "DEL StringLiteral: \"_edges\"", "DEL Block", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: getVertexCount", "DEL ThrowStatement", "DEL ExpressionStatement", "DEL SimpleName: references", "DEL SimpleName: lru", "DEL SimpleName: MetaPartition", "DEL SimpleName: getId", "DEL MethodInvocation", "DEL SimpleName: meta", "DEL FieldAccess", "DEL Modifier: private", "DEL IfStatement", "DEL MethodDeclaration", "DEL PrimitiveType: int", "DEL SimpleName: vertexCount", "DEL InfixExpression: +", "DEL SimpleName: in", "DEL SimpleName: numVertices", "DEL SimpleName: id", "DEL SimpleName: meta", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: value", "DEL SimpleName: partition", "DEL SimpleName: idx", "DEL MethodInvocation", "DEL SimpleName: partitions", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: file", "DEL NullLiteral", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL TypeLiteral", "DEL SimpleName: LOG", "DEL SimpleName: StringBuffer", "DEL TagElement", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleType: V", "DEL SimpleName: msg", "DEL SimpleName: LOG", "DEL SimpleName: partitions", "DEL TextElement: Write a partition to disk.", "DEL SimpleName: swapOutPartition", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Modifier: private", "DEL SimpleName: IOException", "DEL PrimitiveType: void", "DEL IfStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ParameterizedType: Vertex<I,V,E>", "DEL SimpleName: E", "DEL Block", "DEL Assignment: =", "DEL SimpleName: meta", "DEL MethodInvocation", "DEL SimpleName: meta", "DEL SimpleName: BufferedOutputStream", "DEL Javadoc", "DEL ThisExpression", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleType: Mapper", "DEL SimpleType: MetaPartition", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleType: I", "DEL SimpleType: MetaPartition", "DEL ExpressionStatement", "DEL IfStatement", "DEL Block", "DEL InfixExpression: +", "DEL IfStatement", "DEL StringLiteral: \"offloadPartition: writing partition vertices \"", "DEL ExpressionStatement", "DEL SimpleType: IllegalStateException", "DEL TextElement:  the partition", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: p", "DEL SimpleName: Integer", "DEL SimpleName: LOG", "DEL SimpleName: setPartition", "DEL Modifier: public", "DEL SimpleName: fileout", "DEL SimpleName: hash", "DEL SimpleName: hashInt", "DEL SimpleName: V", "DEL SimpleName: E", "DEL SimpleName: partition", "DEL MethodInvocation", "DEL SimpleType: IllegalStateException", "DEL SimpleName: meta", "DEL InfixExpression: +", "DEL SimpleName: append", "DEL StringLiteral: \"addPartition: Failed while Adding to OOC Partition: \"", "DEL NumberLiteral: 0", "DEL Javadoc", "DEL VariableDeclarationStatement", "DEL SimpleName: INACTIVE", "DEL VariableDeclarationExpression", "DEL SimpleName: MetaPartition", "DEL SimpleName: numOutputThreads", "DEL SimpleName: edgeCount", "DEL TextElement: Constructor", "DEL MethodRefParameter", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: meta", "DEL SimpleName: output", "DEL SimpleName: meta", "DEL TextElement: inactive and hence swappable.</li>", "DEL Modifier: private", "DEL SimpleType: String", "DEL SimpleType: State", "DEL Modifier: private", "DEL InfixExpression: %", "DEL TextElement:  The vertex to serialize", "DEL SimpleName: temp", "DEL ThisExpression", "DEL MarkerAnnotation", "DEL TextElement: <li>", "DEL InfixExpression: !=", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: File", "DEL SimpleName: in", "DEL BreakStatement", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: sb", "DEL SimpleType: I", "DEL TextElement:  The path to the given partition", "DEL MethodInvocation", "DEL TextElement:  Edge data", "DEL MethodInvocation", "DEL SimpleName: swapOutPartition", "DEL SimpleName: numVertices", "DEL ExpressionStatement", "DEL SimpleName: getState", "DEL StringLiteral: \"unchecked\"", "DEL TagElement", "DEL ClassInstanceCreation", "DEL SimpleName: id", "DEL TextElement: justifies the sharing of the same lock.", "DEL SimpleName: meta", "DEL SimpleName: I", "DEL ClassInstanceCreation", "DEL StringLiteral: \"offloadPartition: directory \"", "DEL BreakStatement", "DEL TextElement: </ol>", "DEL IfStatement", "DEL SimpleType: I", "DEL ThisExpression", "DEL StringLiteral: \"ID: \"", "DEL SimpleType: I", "DEL WildcardType: ?", "DEL SimpleName: putPartition", "DEL SimpleName: IOException", "DEL FieldAccess", "DEL Assignment: =", "DEL ThisExpression", "DEL SimpleName: getEdgeCount", "DEL ExpressionStatement", "DEL TextElement:  The input stream", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleType: I", "DEL StringLiteral: \"Number of edges: \"", "DEL SimpleName: murmur3_32", "DEL ExpressionStatement", "DEL ThisExpression", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL FieldAccess", "DEL SimpleName: conf", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL TagElement: @param", "DEL SimpleType: Partition", "DEL SimpleName: I", "DEL Block", "DEL SimpleType: I", "DEL SimpleName: delete", "DEL Block", "DEL Block", "DEL SimpleName: passedThroughEdges", "DEL SimpleName: Integer", "DEL SimpleName: get", "DEL SimpleName: output", "DEL SimpleName: meta", "DEL SingleVariableDeclaration", "DEL SimpleName: id", "DEL SimpleName: V", "DEL SimpleName: partition", "DEL SimpleName: sb", "DEL SimpleName: mkdirs", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL PrimitiveType: long", "DEL SwitchCase", "DEL SimpleName: conf", "DEL SimpleName: p", "DEL Modifier: public", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL MethodDeclaration", "DEL TagElement: @param", "DEL PrefixExpression: !", "DEL ReturnStatement", "DEL SimpleName: e", "DEL Block", "DEL PrefixExpression: ++", "DEL SimpleName: Logger", "DEL TagElement: @return", "DEL ArrayAccess", "DEL VariableDeclarationStatement", "DEL SimpleName: I", "DEL SimpleName: String", "DEL SimpleName: error", "DEL PrimitiveType: long", "DEL Javadoc", "DEL SimpleName: LOG", "DEL SimpleName: E", "DEL SimpleName: isNotDone", "DEL PrimitiveType: int", "DEL SimpleName: addToVertexCount", "DEL SimpleName: isDone", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"loadPartition: loading partition edges \"", "DEL PrimitiveType: int", "DEL TagElement", "DEL SimpleName: fileout", "DEL SimpleName: isNotDone", "DEL SimpleName: readFields", "DEL MethodDeclaration", "DEL SimpleName: outputStream", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: wakeUp", "DEL SimpleName: partitions", "DEL SimpleType: String", "DEL VariableDeclarationStatement", "DEL SimpleName: info", "DEL SimpleName: numPartitionsInMem", "DEL SimpleType: V", "DEL TextElement: State in which the partition is ", "DEL QualifiedName: State.INACTIVE", "DEL SimpleType: State", "DEL SimpleName: i", "DEL PostfixExpression: ++", "DEL Assignment: =", "DEL SimpleName: V", "DEL SimpleName: setOnDisk", "DEL MethodInvocation", "DEL StringLiteral: \"giraph.maxSticky parameter unset or improperly set \"", "DEL VariableDeclarationStatement", "DEL TryStatement", "DEL SimpleName: meta", "DEL SimpleName: deletePartition", "DEL SimpleName: lru", "DEL SimpleName: vertex", "DEL SimpleName: fileout", "DEL SimpleName: context", "DEL SimpleName: getState", "DEL VariableDeclarationStatement", "DEL SimpleName: id", "DEL SimpleName: get", "DEL SimpleName: String", "DEL SimpleName: partition", "DEL MethodInvocation", "DEL TagElement", "DEL ClassInstanceCreation", "DEL SimpleName: e", "DEL Block", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: state", "DEL SimpleName: numOutputThreads", "DEL FieldAccess", "DEL VariableDeclarationStatement", "DEL SimpleName: IllegalStateException", "DEL SimpleName: numComputeThreads", "DEL PrimitiveType: long", "DEL InfixExpression: >", "DEL SimpleName: file", "DEL MethodInvocation", "DEL SimpleName: E", "DEL Block", "DEL NullLiteral", "DEL SimpleType: File", "DEL SimpleName: E", "DEL MethodDeclaration", "DEL Javadoc", "DEL VariableDeclarationStatement", "DEL SimpleName: partition", "DEL TextElement: Used to hash partition Ids ", "DEL StringLiteral: \"\\n\"", "DEL CatchClause", "DEL SimpleName: msg", "DEL SimpleName: setOnDisk", "DEL SimpleType: WritableComparable", "DEL ParameterizedType: Partition<I,V,E>", "DEL SimpleName: meta", "DEL SimpleType: File", "DEL MethodInvocation", "DEL SimpleName: NUM_COMPUTE_THREADS", "DEL SimpleName: IOException", "DEL SimpleName: getVerticesPath", "DEL SimpleName: id", "DEL SimpleName: maxPartitionsInMem", "DEL PrimitiveType: int", "DEL VariableDeclarationStatement", "DEL SimpleName: E", "DEL SimpleName: prevVertexCount", "DEL MethodInvocation", "DEL SimpleName: meta", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL IfStatement", "DEL ExpressionStatement", "DEL TextElement:  The id of the partition to load", "DEL PrimitiveType: long", "DEL MethodInvocation", "DEL TextElement: Hash map containing all the partitions  ", "DEL SimpleType: MetaPartition", "DEL VariableDeclarationFragment", "DEL PrefixExpression: !", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: setState", "DEL SimpleName: meta", "DEL MethodInvocation", "DEL SimpleName: file", "DEL VariableDeclarationStatement", "DEL Javadoc", "DEL SimpleName: error", "DEL SimpleName: createPartition", "DEL MethodInvocation", "DEL SimpleName: FileInputStream", "DEL SimpleName: E", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL TagElement", "DEL ParameterizedType: Map<Integer,MetaPartition>", "DEL Block", "DEL SimpleName: ACTIVE", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: lru", "DEL ExpressionStatement", "DEL SimpleName: getState", "DEL MethodInvocation", "DEL MethodRefParameter", "DEL MethodInvocation", "DEL ThrowStatement", "DEL SimpleType: DataOutput", "DEL Block", "DEL SimpleName: maxPartitionsInMem", "DEL SimpleName: Override", "DEL Block", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: msg", "DEL SimpleName: getId", "DEL InfixExpression: &&", "DEL VariableDeclarationFragment", "DEL SimpleType: DataOutputStream", "DEL MethodInvocation", "DEL ParameterizedType: Vertex<I,V,E>", "DEL TextElement:  The path to the vertices file", "DEL SimpleName: getVertexCount", "DEL SimpleName: StringBuffer", "DEL VariableDeclarationFragment", "DEL TextElement: This function is thread-safe since it locks the whole computation", "DEL TagElement: @param", "DEL SimpleName: Integer", "DEL Javadoc", "DEL SimpleName: partition", "DEL MethodDeclaration", "DEL InfixExpression: &&", "DEL Block", "DEL SimpleName: references", "DEL MethodDeclaration", "DEL TagElement: @return", "DEL Assignment: =", "DEL Block", "DEL SimpleName: meta", "DEL SimpleName: swapOutPartition", "DEL SimpleName: context", "DEL SimpleName: createVertexId", "DEL ThrowStatement", "DEL ThisExpression", "DEL SimpleType: I", "DEL ClassInstanceCreation", "DEL FieldDeclaration", "DEL Modifier: final", "DEL SimpleName: meta", "DEL TextElement: a partition, it will firstly acquire a lock on the container,", "DEL MethodInvocation", "DEL BooleanLiteral: false", "DEL TextElement: <b>Meta Partition Lock</b>.All the partitions are held in a", "DEL NumberLiteral: 0", "DEL SimpleName: isDone", "DEL IfStatement", "DEL ThisExpression", "DEL SimpleName: conf", "DEL SimpleName: put", "DEL ThisExpression", "DEL ExpressionStatement", "DEL TextElement: fact that two locks are held together while running the \"wait\" method.", "DEL SimpleType: V", "DEL SimpleName: V", "DEL SimpleName: MetaPartition", "DEL MethodDeclaration", "DEL SimpleName: p", "DEL SimpleType: PartitionStore", "DEL TagElement", "DEL SimpleType: MetaPartition", "DEL SimpleName: String", "DEL SimpleType: File", "DEL SimpleType: Entry", "DEL SimpleName: V", "DEL MethodInvocation", "DEL SimpleName: DiskBackedPartitionStore", "DEL SimpleName: AtomicInteger", "DEL ParameterizedType: Partition<I,V,E>", "DEL TagElement", "DEL TagElement: @param", "DEL MethodInvocation", "DEL TextElement: Load a partition from disk. It deletes the files after the load,", "DEL SimpleName: I", "DEL SimpleName: parent", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: maxThreads", "DEL SimpleName: meta", "DEL PrimitiveType: int", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: file", "DEL MethodInvocation", "DEL SimpleName: sb", "DEL SimpleName: inputStream", "DEL SimpleName: DataInput", "DEL TextElement: Initialization of the metadata enriched partition.", "DEL SimpleType: BufferedOutputStream", "DEL Javadoc", "DEL SimpleName: V", "DEL SimpleName: file", "DEL SimpleName: Partition", "DEL SimpleName: getState", "DEL SimpleName: Writable", "DEL SimpleName: setPartition", "DEL Dimension", "DEL SimpleName: V", "DEL BooleanLiteral: false", "DEL TagElement: @param", "DEL ReturnStatement", "DEL SimpleName: partition", "DEL MethodInvocation", "DEL StringLiteral: \"previously inactive partition: \"", "DEL TextElement: to hold the global lock.", "DEL SimpleName: partition", "DEL TagElement: @param", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleName: e", "DEL Modifier: public", "DEL SimpleName: getVertexCount", "DEL SimpleName: write", "DEL VariableDeclarationFragment", "DEL SimpleName: id", "DEL SimpleName: bufferin", "DEL SimpleName: I", "DEL SimpleName: bufferout", "DEL NullLiteral", "DEL SimpleType: String", "DEL MethodInvocation", "DEL MemberValuePair", "DEL SimpleType: V", "DEL SimpleName: I", "DEL SimpleName: readVertexData", "DEL SimpleName: file", "DEL SimpleName: output", "DEL SimpleName: vertex", "DEL SimpleName: id", "DEL MethodDeclaration", "DEL TagElement", "DEL SimpleName: sb", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL SimpleType: V", "DEL SimpleName: meta", "DEL Modifier: private", "DEL SimpleName: meta", "DEL InfixExpression: -", "DEL SimpleName: partitionId", "DEL SingleVariableDeclaration", "DEL SimpleName: Iterator", "DEL ExpressionStatement", "DEL TagElement: @param", "DEL SimpleName: partition", "DEL SimpleName: id", "DEL SimpleName: getAbsolutePath", "DEL TagElement: @throws", "DEL SimpleName: addPartition", "DEL ClassInstanceCreation", "DEL PrimitiveType: int", "DEL ExpressionStatement", "DEL MarkerAnnotation", "DEL SimpleName: edgeCount", "DEL VariableDeclarationFragment", "DEL SimpleName: E", "DEL ExpressionStatement", "DEL SimpleName: remove", "DEL SimpleName: context", "DEL SimpleType: I", "DEL ParameterizedType: ConcurrentMap<Integer,MetaPartition>", "DEL SingleVariableDeclaration", "DEL SimpleType: V", "DEL PrefixExpression: !", "DEL SimpleName: meta", "DEL TagElement: @return", "DEL SimpleName: v", "DEL Block", "DEL SimpleName: meta", "DEL SingleVariableDeclaration", "DEL SimpleName: ACTIVE", "DEL SimpleName: inputStream", "DEL SimpleName: E", "DEL SynchronizedStatement", "DEL SimpleName: MetaPartition", "DEL TextElement: partition objects are kept in a concurrent hash map. This ADT guarantees", "DEL ParameterizedType: Partition<I,V,E>", "DEL InfixExpression: +", "DEL SimpleName: V", "DEL ExpressionStatement", "DEL IfStatement", "DEL VariableDeclarationStatement", "DEL SimpleType: Partition", "DEL MethodInvocation", "DEL SimpleName: notifyAll", "DEL Modifier: private", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: getId", "DEL InfixExpression: !=", "DEL TextElement: I/O performance, part of the N partitions are kept in memory in a sticky", "DEL SimpleName: conf", "DEL SimpleType: E", "DEL TagElement: @param", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: getAndDecrement", "DEL SimpleName: partition", "DEL SimpleName: msg", "DEL StringLiteral: \"; \"", "DEL MethodInvocation", "DEL CatchClause", "DEL SimpleName: meta", "DEL SimpleType: I", "DEL SimpleName: getState", "DEL Block", "DEL ParameterizedType: Partition<I,V,E>", "DEL PrimitiveType: void", "DEL ExpressionStatement", "DEL InfixExpression: >=", "DEL SimpleName: Override", "DEL SimpleType: V", "DEL SimpleName: swapOutPartition", "DEL SimpleName: meta", "DEL MethodInvocation", "DEL Javadoc", "DEL TagElement", "DEL Javadoc", "DEL MethodInvocation", "DEL SimpleName: output", "DEL ExpressionStatement", "DEL SimpleName: i", "DEL Block", "DEL TextElement: order of unused partitions. In this case, the ADT is not thread safe and", "DEL SimpleName: id", "DEL SimpleName: V", "DEL ExpressionStatement", "DEL SimpleName: isDone", "DEL SimpleName: getAbsolutePath", "DEL Modifier: public", "DEL SimpleName: parent", "DEL SimpleName: temp", "DEL MethodInvocation", "DEL SimpleType: BufferedInputStream", "DEL SimpleName: deletePartitionFiles", "DEL ExpressionStatement", "DEL SimpleName: I", "DEL BooleanLiteral: true", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL EnhancedForStatement", "DEL MethodInvocation", "DEL SimpleType: MetaPartition", "DEL SimpleType: I", "DEL SimpleName: isNotDone", "DEL QualifiedName: State.INIT", "DEL SimpleName: file", "DEL SimpleType: IllegalStateException", "DEL ParameterizedType: Vertex<I,V,E>", "DEL SimpleName: parent", "DEL Javadoc", "DEL SimpleType: V", "DEL SimpleType: IllegalStateException", "DEL SimpleName: state", "DEL Modifier: public", "DEL MethodDeclaration", "DEL SimpleType: Partition", "DEL MethodInvocation", "DEL SimpleName: E", "DEL SimpleName: Partition", "DEL InfixExpression: ==", "DEL TypeDeclaration: class", "DEL SimpleName: BufferedInputStream", "DEL VariableDeclarationFragment", "DEL SimpleType: MetaPartition", "DEL SimpleName: getValue", "DEL MethodInvocation", "DEL TextElement: preventing consistency issues.<br />", "DEL TextElement: Task that deletes a partition to the store", "DEL SimpleName: edges", "DEL SimpleType: Integer", "DEL SimpleType: I", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: entry", "DEL SimpleName: createNewFile", "DEL SwitchStatement", "DEL Javadoc", "DEL TextElement:  the vertexCount", "DEL MethodInvocation", "DEL SimpleName: meta", "DEL SimpleName: partition", "DEL SimpleName: wait", "DEL MethodInvocation", "DEL SimpleName: Partition", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: V", "DEL ExpressionStatement", "DEL BooleanLiteral: false", "DEL StringLiteral: \"not ACTIVE.\\n\"", "DEL SimpleName: meta", "DEL SimpleName: maxPartitionsInMem", "DEL SimpleName: serviceWorker", "DEL Block", "DEL SimpleName: writeOutEdges", "DEL Modifier: public", "DEL StringLiteral: \"DiskBackedPartitionStore with maxInMemoryPartitions=\"", "DEL StringLiteral: \"; \"", "DEL SimpleName: swapOutPartition", "DEL Modifier: public", "DEL FieldAccess", "DEL ExpressionStatement", "DEL SimpleType: MetaPartition", "DEL SimpleName: partition", "DEL SimpleName: putIfAbsent", "DEL SimpleName: sb", "DEL SimpleType: Integer", "DEL SimpleType: Vertex", "DEL MethodDeclaration", "DEL SimpleName: DataInputStream", "DEL ExpressionStatement", "DEL SimpleName: temp", "DEL MethodInvocation", "DEL SimpleName: getId", "DEL StringLiteral: \" for partition \"", "DEL SimpleName: vertex", "DEL SimpleName: V", "DEL FieldAccess", "DEL TagElement: @return", "DEL SimpleName: DataOutputStream", "DEL VariableDeclarationStatement", "DEL ParameterizedType: CentralizedServiceWorker<I,V,E>", "DEL SimpleName: E", "DEL SimpleName: IllegalStateException", "DEL SimpleName: sb", "DEL SimpleName: getMessage", "DEL Block", "DEL TextElement: Base path where the partition files are written to ", "DEL SimpleName: debug", "DEL SimpleName: numPartitionsInMem", "DEL SimpleName: LOG", "DEL Javadoc", "DEL VariableDeclarationFragment", "DEL SimpleName: getId", "DEL ExpressionStatement", "DEL SimpleName: e", "DEL SimpleName: partitions", "DEL VariableDeclarationFragment", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Block", "DEL MethodDeclaration", "DEL TypeDeclaration: class", "DEL InfixExpression: ==", "DEL VariableDeclarationFragment", "DEL SimpleType: AtomicLong", "DEL MethodInvocation", "DEL SimpleName: lru", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: partition", "DEL SimpleName: DataOutputStream", "DEL CatchClause", "DEL SimpleName: partitionId", "DEL SimpleName: Override", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: debug", "DEL MethodInvocation", "DEL SimpleName: Partition", "DEL SimpleType: E", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: getPrevVertexCount", "DEL SimpleName: lru", "DEL BooleanLiteral: false", "DEL SimpleName: partition", "DEL SimpleName: exists", "DEL ThisExpression", "DEL InfixExpression: +", "DEL TagElement", "DEL Javadoc", "DEL ThrowStatement", "DEL SimpleName: IOException", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL MethodInvocation", "DEL FieldAccess", "DEL MethodInvocation", "DEL StringLiteral: \"The two locks held do not produce a deadlock\"", "DEL SimpleName: max", "DEL SwitchCase", "DEL SimpleName: MetaPartition", "DEL VariableDeclarationStatement", "DEL SimpleName: notifyAll", "DEL EnumConstantDeclaration", "DEL SimpleName: IOException", "DEL SimpleName: meta", "DEL SimpleName: bufferout", "DEL ExpressionStatement", "DEL SimpleName: OutEdges", "DEL SimpleName: state", "DEL ThrowStatement", "DEL SimpleType: Integer", "DEL SimpleName: vertexCount", "DEL MethodInvocation", "DEL PrimitiveType: long", "DEL TextElement: The operations are thread-safe, and guarantees safety for concurrent", "DEL SimpleType: Partition", "DEL SimpleName: IllegalStateException", "DEL SimpleName: toString", "DEL SimpleType: DataOutputStream", "DEL SimpleName: E", "DEL Block", "DEL InfixExpression: +", "DEL InfixExpression: !=", "DEL Block", "DEL TextElement: partition to be restored from disk. The semantic of this", "DEL SimpleName: getId", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: E", "DEL MarkerAnnotation", "DEL SynchronizedStatement", "DEL PrimitiveType: int", "DEL FieldAccess", "DEL PrimitiveType: void", "DEL EnhancedForStatement", "DEL SimpleType: V", "DEL ThisExpression", "DEL NullLiteral", "DEL SimpleName: i", "DEL BooleanLiteral: false", "DEL SimpleName: outputStream", "DEL Modifier: private", "DEL PrefixExpression: !", "DEL Javadoc", "DEL VariableDeclarationFragment", "DEL IfStatement", "DEL TextElement:  meta partition containing the partition to offload", "DEL TextElement: <br />", "DEL SimpleName: e", "DEL MethodInvocation", "DEL SimpleName: IllegalStateException", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL SimpleName: get", "DEL QualifiedName: State.ACTIVE", "DEL TextElement: <", "DEL SimpleName: getPartitionVertexCount", "DEL SimpleName: partition", "DEL Block", "DEL SimpleName: getEdgesPath", "DEL IfStatement", "DEL SimpleName: meta", "DEL FieldAccess", "DEL SimpleName: size", "DEL SimpleName: meta", "DEL SimpleName: basePaths", "DEL TextElement: The partition is produced as a side effect of the computation and is", "DEL SimpleName: MAX_PARTITIONS_IN_MEMORY", "DEL SimpleName: entrySet", "DEL Assignment: =", "DEL Block", "DEL StringLiteral: \" already exists.\"", "DEL SimpleType: E", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL SimpleName: ONDISK", "DEL EnumConstantDeclaration", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleType: E", "DEL Block", "DEL SimpleName: get", "DEL InfixExpression: >=", "DEL SimpleName: basePaths", "DEL SimpleName: file", "DEL TagElement: @link", "DEL PrimitiveType: boolean", "DEL SimpleName: file", "DEL SimpleName: State", "DEL TagElement", "DEL TextElement:  The number of vertices contained on disk", "DEL MethodDeclaration", "DEL SimpleName: IllegalStateException", "DEL SimpleName: serviceWorker", "DEL SimpleName: partitions", "DEL IfStatement", "DEL SimpleName: voteToHalt", "DEL SimpleName: get", "DEL SimpleName: isSticky", "DEL SimpleName: IOException", "DEL ParameterizedType: Partition<I,V,E>", "DEL VariableDeclarationStatement", "DEL SimpleType: MetaPartition", "DEL BooleanLiteral: false", "DEL MethodDeclaration", "DEL SimpleName: existing", "DEL SimpleName: incrementReferences", "DEL SimpleName: sb", "DEL SimpleType: IOException", "DEL SimpleName: bufferin", "DEL SimpleName: getAndDecrement", "DEL Modifier: public", "DEL SimpleType: FileOutputStream", "DEL TextElement: Method that gets a partition from the store.", "DEL SimpleName: sb", "DEL VariableDeclarationStatement", "DEL StringLiteral: \" to \"", "DEL SimpleName: LOG", "DEL SimpleType: I", "DEL Block", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL SimpleName: E", "DEL ParameterizedType: Partition<I,V,E>", "DEL Modifier: private", "DEL TagElement", "DEL SimpleName: INACTIVE", "DEL MethodInvocation", "DEL Javadoc", "DEL SimpleName: V", "DEL Block", "DEL SimpleName: setPrevVertexCount", "DEL QualifiedName: meta.isSticky", "DEL SimpleName: getPartitionIds", "DEL FieldDeclaration", "DEL SimpleName: Integer", "DEL Assignment: =", "DEL Modifier: public", "DEL SimpleName: getVertex", "DEL VariableDeclarationStatement", "DEL Assignment: =", "DEL SwitchCase", "DEL TextElement: Partition container holding additional meta data associated with each", "DEL SimpleName: isSticky", "DEL SimpleName: meta", "DEL SimpleName: Writable", "DEL ExpressionStatement", "DEL TextElement:  the edgeCount", "DEL SimpleType: DataInput", "DEL SimpleName: error", "DEL TextElement: is used for all in memory count changes. In fact, the amount of elements", "DEL SimpleName: state", "DEL SimpleName: I", "DEL ExpressionStatement", "DEL SimpleName: File", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: error", "DEL MethodInvocation", "DEL QualifiedName: meta.isSticky", "DEL Modifier: private", "DEL ParameterizedType: Partition<I,V,E>", "DEL BooleanLiteral: true", "DEL TextElement: Writes vertex edges (Id, edges) to stream.", "DEL ParameterizedType: OutEdges<I,E>", "DEL ParameterizedType: Iterable<Integer>", "DEL MethodInvocation", "DEL SimpleName: Partition", "DEL SimpleName: getId", "DEL SimpleName: id", "DEL Block", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL ThisExpression", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL Block", "DEL Modifier: public", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: temp", "DEL MethodInvocation", "DEL InfixExpression: &&", "DEL MethodDeclaration", "DEL ThisExpression", "DEL FieldAccess", "DEL VariableDeclarationExpression", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL Assignment: =", "DEL StringLiteral: \"Is Sticky: \"", "DEL SimpleName: lru", "DEL SimpleName: V", "DEL SimpleName: partition", "DEL TextElement: the disk. This means that, for T threads, at least T partitions must remain", "DEL ReturnStatement", "DEL SimpleName: partition", "DEL Assignment: =", "DEL SimpleType: AtomicInteger", "DEL TagElement: @return", "DEL SimpleType: Vertex", "DEL SimpleName: I", "DEL SimpleName: MetaPartition", "DEL SimpleName: output", "DEL Block", "DEL SimpleName: meta", "DEL SimpleName: partition", "DEL Assignment: =", "DEL ReturnStatement", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL BooleanLiteral: true", "DEL Block", "DEL SimpleName: Integer", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: vertex", "DEL SimpleName: Vertex", "DEL Block", "DEL SimpleName: partition", "DEL SimpleName: BufferedOutputStream", "DEL StringLiteral: \"getPartition: error while waiting on \"", "DEL Javadoc", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL WildcardType: ?", "DEL SimpleName: e", "DEL SimpleName: meta", "DEL Assignment: =", "DEL ThisExpression", "DEL VariableDeclarationStatement", "DEL SimpleName: partition", "DEL MethodInvocation", "DEL QualifiedName: State.INACTIVE", "DEL SimpleType: BufferedOutputStream", "DEL SimpleName: DiskBackedPartitionStore", "DEL Block", "DEL InfixExpression: ==", "DEL SimpleType: Integer", "DEL InfixExpression: ==", "DEL TextElement: follows an overview of the implemented algorithm.<br />", "DEL Modifier: public", "DEL SimpleType: IOException", "DEL Modifier: public", "DEL MethodInvocation", "DEL Modifier: private", "DEL SimpleName: File", "DEL MethodInvocation", "DEL SimpleName: StringBuilder", "DEL MethodInvocation", "DEL SimpleName: getState", "DEL SimpleType: V", "DEL ReturnStatement", "DEL BooleanLiteral: false", "DEL ParameterizedType: Partition<I,V,E>", "DEL TextElement: Append a partition on disk at the end of the file. Expects the caller", "DEL MethodInvocation", "DEL TagElement", "DEL SimpleType: IllegalStateException", "DEL SimpleType: Partition", "DEL StringLiteral: \"loadPartition: failed to delete \"", "DEL SimpleName: addToOOCPartition", "DEL FieldAccess", "DEL SimpleName: prevVertexCount", "DEL SimpleName: e", "DEL SimpleName: E", "DEL Block", "DEL SimpleName: p", "DEL Modifier: private", "DEL Assignment: =", "DEL ParameterizedType: Vertex<I,V,E>", "DEL SimpleName: outputStream", "DEL MethodInvocation", "DEL TextElement: >", "DEL InfixExpression: >=", "DEL SimpleType: DataInput", "DEL Modifier: private", "DEL TextElement: Number of vertices contained in the partition ", "DEL TextElement: <b>ALGORITHM</b>:", "DEL PrefixExpression: !", "DEL SimpleType: IllegalStateException", "DEL ThisExpression", "DEL ClassInstanceCreation", "DEL ThisExpression", "DEL SimpleType: Integer", "DEL ExpressionStatement", "DEL SimpleName: numPartitionsInMem", "DEL Assignment: =", "DEL SimpleName: writeBoolean", "DEL InfixExpression: ||", "DEL ExpressionStatement", "DEL SimpleName: String", "DEL SimpleName: isSticky", "DEL Block", "DEL FieldAccess", "DEL StringLiteral: \"addPartition: error while waiting on \"", "DEL StringLiteral: \"hence the partition cannot be loaded.\"", "DEL TextElement:  The partition", "DEL StringLiteral: \"; \"", "DEL StringLiteral: \"Partition was still INIT after GET (not possibile).\"", "DEL SingleVariableDeclaration", "DEL SimpleType: I", "DEL SimpleName: file", "DEL SimpleName: meta", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL SimpleName: LOG", "DEL MethodDeclaration", "DEL SimpleName: I", "DEL SimpleName: InterruptedException", "DEL MethodRef", "DEL ExpressionStatement", "DEL TextElement:  The path to the edges file", "DEL Assignment: =", "DEL SimpleName: addToOOCPartition", "DEL SimpleName: PartitionStore", "DEL PrimitiveType: void", "DEL SimpleName: getMessage", "DEL Modifier: private", "DEL SimpleName: getAbsolutePath", "DEL Assignment: =", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: vertexCount", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: partition", "DEL SimpleName: file", "DEL SimpleName: Integer", "DEL TextElement:  The partition", "DEL SimpleName: I", "DEL SimpleName: MetaPartition", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL Block", "DEL SimpleName: ImmutableClassesGiraphConfiguration", "DEL NumberLiteral: 0", "DEL SimpleType: MetaPartition", "DEL SynchronizedStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: msg", "DEL ClassInstanceCreation", "DEL SimpleName: shutdown", "DEL Modifier: public", "DEL VariableDeclarationStatement", "DEL SimpleName: MetaPartition", "DEL SimpleName: AtomicLong", "DEL SimpleType: V", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL MarkerAnnotation", "DEL SimpleName: bufferout", "DEL MethodInvocation", "DEL Block", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: LOG", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: edges", "DEL SimpleName: partition", "DEL SimpleType: MetaPartition", "DEL SingleVariableDeclaration", "DEL SimpleName: conf", "DEL Block", "DEL Assignment: =", "DEL SimpleName: loadPartition", "DEL SimpleName: partitions", "DEL VariableDeclarationStatement", "DEL SimpleType: FileOutputStream", "DEL SimpleName: Math", "DEL QualifiedName: State.INIT", "DEL MethodInvocation", "DEL SimpleType: AtomicLong", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL TagElement: @param", "DEL FieldAccess", "DEL SimpleType: HashFunction", "DEL Javadoc", "DEL VariableDeclarationStatement", "DEL SimpleName: context", "DEL SimpleName: p", "DEL Javadoc", "DEL MethodInvocation", "DEL StringLiteral: \"Getting a partition which is in INIT state is \"", "DEL SimpleName: bufferout", "DEL SimpleName: MetaPartition", "DEL ExpressionStatement", "DEL SimpleName: incrementReferences", "DEL InfixExpression: <", "DEL StringLiteral: \"loadPartition: loading partition vertices \"", "DEL SimpleName: getAndIncrement", "DEL SingleVariableDeclaration", "DEL SwitchCase", "DEL Javadoc", "DEL SimpleName: outputStream", "DEL IfStatement", "DEL SimpleName: debug", "DEL SimpleName: getState", "DEL InfixExpression: >", "DEL IfStatement", "DEL SimpleName: V", "DEL SimpleName: DataOutputStream", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: OutEdges", "DEL SimpleName: Maps", "DEL SimpleName: msg", "DEL SimpleType: I", "DEL ExpressionStatement", "DEL SimpleName: getVertexCount", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleType: V", "DEL SimpleName: getPartition", "DEL SimpleName: file", "DEL StringLiteral: \"illegal state \"", "DEL SimpleName: state", "DEL SimpleName: state", "DEL StringLiteral: \"deletePartition: error while waiting on \"", "DEL SimpleName: existing", "DEL VariableDeclarationStatement", "DEL SimpleName: getPartition", "DEL SimpleName: isSticky", "DEL SimpleName: vertex", "DEL MethodInvocation", "DEL SimpleName: debug", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL IfStatement", "DEL PrimitiveType: long", "DEL Block", "DEL SimpleName: MAX_STICKY_PARTITIONS", "DEL SimpleName: partitionId", "DEL NumberLiteral: 0", "DEL Block", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleName: getState", "DEL TextElement: Disk-backed PartitionStore. Partitions are stored in memory on a LRU basis.", "DEL SimpleName: LOG", "DEL ClassInstanceCreation", "DEL SimpleName: DataOutputStream", "DEL SimpleName: getNumPartitions", "DEL SimpleName: iterator", "DEL SimpleName: addPartition", "DEL Javadoc", "DEL SimpleName: msg", "DEL ThrowStatement", "DEL Block", "DEL ExpressionStatement", "DEL SynchronizedStatement", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleType: E", "DEL SimpleName: vertex", "DEL MethodInvocation", "DEL SimpleName: meta", "DEL SimpleType: Partition", "DEL SimpleName: isNotDone", "DEL SingleVariableDeclaration", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL SimpleName: file", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL StringLiteral: \"offloadPartition: file \"", "DEL Javadoc", "DEL SimpleName: IOException", "DEL SimpleName: partition", "DEL SimpleName: meta", "DEL MethodInvocation", "DEL SimpleName: I", "DEL SimpleName: id", "DEL SimpleName: msg", "DEL Modifier: private", "DEL SimpleName: I", "DEL TagElement", "DEL SimpleType: I", "DEL SimpleName: append", "DEL PrimitiveType: void", "DEL SimpleName: InterruptedException", "DEL SimpleType: DataOutputStream", "DEL ThrowStatement", "DEL SimpleName: numInputThreads", "DEL SimpleName: id", "DEL SimpleName: close", "DEL SimpleName: meta", "DEL SimpleName: File", "DEL ExpressionStatement", "DEL SimpleType: BufferedInputStream", "DEL SimpleName: asInt", "DEL SimpleType: String", "DEL TextElement:  the vertexCount", "DEL SimpleName: E", "DEL SimpleName: LOG", "DEL SimpleName: Override", "DEL SimpleName: Integer", "DEL InfixExpression: ==", "DEL ParameterizedType: Vertex<I,V,E>", "DEL SimpleName: getPartition", "DEL IfStatement", "DEL Assignment: =", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: getId", "DEL SimpleName: append", "DEL SimpleName: conf", "DEL ThrowStatement", "DEL SimpleName: lru", "DEL TextElement: When a thread tries to access an element on disk, it waits until it", "DEL StringLiteral: \"Previous number of Vertices: \"", "DEL ThrowStatement", "DEL SimpleName: String", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL Assignment: =", "DEL SimpleName: IOException", "DEL SingleVariableDeclaration", "DEL SimpleName: getMessage", "DEL MethodInvocation", "DEL SimpleName: I", "DEL SimpleName: meta", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: conf", "DEL ParameterizedType: Vertex<I,V,E>", "DEL TryStatement", "DEL SimpleName: String", "DEL SimpleName: meta", "DEL ExpressionStatement", "DEL SimpleName: MetaPartition", "DEL SimpleType: String", "DEL SimpleType: Writable", "DEL NumberLiteral: 0", "DEL SimpleType: E", "DEL SimpleName: p", "DEL SimpleName: numPartitionsInMem", "DEL ExpressionStatement", "DEL SimpleName: parent", "DEL InfixExpression: +", "DEL ReturnStatement", "DEL SimpleName: meta", "DEL SimpleName: Vertex", "DEL TextElement:  The id of the partition owning the file.", "DEL SimpleName: isNotDone", "DEL SimpleName: getEdgesPath", "DEL BreakStatement", "DEL SimpleName: id", "DEL BooleanLiteral: false", "DEL MethodInvocation", "DEL SimpleType: IOException", "DEL ExpressionStatement", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL SwitchCase", "DEL Javadoc", "DEL SimpleName: numOfStickyPartitions", "DEL TextElement:  incremented references", "DEL SimpleType: V", "DEL SimpleType: MetaPartition", "DEL SimpleName: isNotDone", "DEL EnhancedForStatement", "DEL SimpleName: append", "DEL VariableDeclarationFragment", "DEL SimpleName: deletePartitionFiles", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleType: DataOutputStream", "DEL SimpleName: String", "DEL SimpleName: path", "DEL FieldDeclaration", "DEL ExpressionStatement", "DEL SimpleName: isNotDone", "DEL InfixExpression: +", "DEL InfixExpression: >", "DEL PrefixExpression: !", "DEL SimpleName: vertex", "DEL SimpleName: maxSticky", "DEL SimpleName: notifyAll", "DEL SimpleName: meta", "DEL TextElement:  meta partition container with the partition itself", "DEL SimpleName: in", "DEL PrimitiveType: void", "DEL SimpleName: ImmutableClassesGiraphConfiguration", "DEL SimpleName: sb", "DEL SimpleName: get", "DEL SimpleName: temp", "DEL SynchronizedStatement", "DEL TextElement:  Vertex id", "DEL InfixExpression: +", "DEL Modifier: final", "DEL SimpleType: Integer", "DEL SimpleName: sb", "DEL MethodInvocation", "DEL PrimitiveType: long", "DEL SimpleName: conf", "DEL ReturnStatement", "DEL SimpleType: E", "DEL SimpleName: writeOutEdges", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL SimpleName: meta", "DEL SimpleType: Context", "DEL SimpleName: getPartition", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleName: meta", "DEL Assignment: -=", "DEL SimpleType: Integer", "DEL TextElement: mumber of slots that are always kept in memory ", "DEL Assignment: +=", "DEL Assignment: =", "DEL ParameterizedType: PartitionStore<I,V,E>", "DEL SimpleName: meta", "DEL SimpleName: I", "DEL SimpleName: SuppressWarnings", "DEL ParameterizedType: OutEdges<I,E>", "DEL SimpleName: swapOutPartition", "DEL Block", "DEL SimpleType: File", "DEL PrefixExpression: !", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: E", "DEL SimpleName: partitions", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL Assignment: =", "DEL TagElement: @throws", "DEL SimpleName: e", "DEL TagElement: @return", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleType: E", "DEL SimpleName: getMessage", "DEL SimpleName: state", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL TagElement: @throws", "DEL IfStatement", "DEL SimpleName: write", "DEL TextElement:  The input stream", "DEL SimpleName: setActive", "DEL MethodDeclaration", "DEL SimpleType: Integer", "DEL ExpressionStatement", "DEL SimpleType: IOException", "DEL SimpleName: partition", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL Modifier: private", "DEL SimpleName: IOException", "DEL SimpleName: Partition", "DEL VariableDeclarationFragment", "DEL SimpleName: Entry", "DEL SimpleName: Override", "DEL TagElement: @param", "DEL SimpleName: references", "DEL SimpleType: MetaPartition", "DEL ExpressionStatement", "DEL SimpleName: partitions", "DEL Modifier: public", "DEL SimpleName: isDone", "DEL Modifier: private", "DEL IfStatement", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: fileout", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL SimpleName: warn", "DEL FieldAccess", "DEL SimpleName: maxSticky", "DEL SimpleType: String", "DEL SimpleType: Partition", "DEL SimpleName: meta", "DEL SimpleName: conf", "DEL SynchronizedStatement", "DEL SimpleName: Partition", "DEL VariableDeclarationFragment", "DEL SimpleName: isNotDone", "DEL QualifiedName: State.ACTIVE", "DEL SimpleName: numOfStickyPartitions", "DEL MethodInvocation", "DEL SimpleType: I", "DEL SimpleName: LOG", "DEL VariableDeclarationStatement", "DEL SimpleName: String", "DEL SimpleName: partitions", "DEL SimpleName: Vertex", "DEL MethodInvocation", "DEL SimpleName: E", "DEL SimpleType: Logger", "DEL PrimitiveType: void", "DEL Block", "DEL SimpleName: decrementReferences", "DEL VariableDeclarationFragment", "DEL MarkerAnnotation", "DEL PrimitiveType: boolean", "DEL MethodInvocation", "DEL SimpleName: I", "DEL SimpleName: conf", "DEL SimpleType: I", "DEL SimpleName: V", "DEL SimpleName: getId", "DEL Block", "DEL SingleVariableDeclaration", "DEL Assignment: =", "DEL SimpleName: OutEdges", "DEL BooleanLiteral: false", "DEL TextElement:  The partition", "DEL ExpressionStatement", "DEL SimpleName: get", "DEL SimpleType: Integer", "DEL TagElement: @param", "DEL TextElement:  meta partition container with the partition itself", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: IllegalStateException", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL SimpleType: String", "DEL SimpleName: File", "DEL PrimitiveType: void", "DEL SimpleName: vertex", "DEL SimpleType: ConcurrentMap", "DEL ThrowStatement", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL SingleMemberAnnotation", "DEL SimpleName: IllegalStateException", "DEL StringLiteral: \"It is not possible to put back a partition which is \"", "DEL SimpleType: I", "DEL SimpleType: OutEdges", "DEL SimpleName: meta", "DEL Block", "DEL TextElement: </li>", "DEL Block", "DEL StringLiteral: \"deletePartitionFiles: Failed to delete file \"", "DEL Javadoc", "DEL SimpleName: file", "DEL SimpleName: LOG", "DEL MethodDeclaration", "DEL Block", "DEL SimpleName: incrementReferences", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: isNotDone", "DEL Block", "DEL SimpleName: getEdges", "DEL SimpleName: ACTIVE", "DEL SimpleName: IllegalStateException", "DEL SimpleName: V", "DEL Block", "DEL SimpleType: File", "DEL SimpleName: meta", "DEL MethodInvocation", "DEL Modifier: public", "DEL SimpleName: I", "DEL SimpleType: IOException", "DEL Assignment: =", "DEL BreakStatement", "DEL TagElement", "DEL VariableDeclarationFragment", "DEL SimpleName: p", "DEL QualifiedName: State.INACTIVE", "DEL ThisExpression", "DEL TryStatement", "DEL SimpleName: ONDISK", "DEL Block", "DEL Javadoc", "DEL SimpleName: id", "DEL MarkerAnnotation", "DEL SimpleName: INACTIVE", "DEL Block", "DEL SimpleName: partitionId", "DEL SimpleType: File", "DEL TagElement", "DEL ExpressionStatement", "DEL SimpleName: ONDISK", "DEL SimpleName: getId", "DEL SimpleName: error", "DEL Block", "DEL SimpleName: filein", "DEL IfStatement", "DEL SimpleName: Partition", "DEL Javadoc", "DEL SimpleType: AtomicLong", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL StringLiteral: \"_vertices\"", "DEL SimpleName: maxPartitionsInMem", "DEL SimpleName: getId", "DEL ThrowStatement", "DEL SingleVariableDeclaration", "DEL TextElement: Method that puts a partition back to the store. This function is", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: exists", "DEL PrefixExpression: ++", "DEL SimpleName: deletePartition", "DEL Assignment: =", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: e", "DEL SimpleType: E", "DEL SimpleName: InterruptedException", "DEL Modifier: public", "DEL Block", "DEL SimpleType: Vertex", "DEL MethodInvocation", "DEL SimpleType: E", "DEL Modifier: public", "DEL SimpleName: conf", "DEL SimpleName: file", "DEL Block", "DEL SimpleName: maxPartitionsInMem", "DEL TextElement:  The vertex to serialize", "DEL ReturnStatement", "DEL SimpleName: V", "DEL PrimitiveType: long", "DEL SimpleType: Vertex", "DEL BreakStatement", "DEL ThisExpression", "DEL Assignment: =", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: getVertexCount", "DEL ExpressionStatement", "DEL Modifier: final", "DEL TagElement", "DEL ClassInstanceCreation", "DEL ClassInstanceCreation", "DEL SimpleName: I", "DEL SwitchCase", "DEL ExpressionStatement", "DEL Block", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL TextElement: except for the edges, if the graph is static.", "DEL ClassInstanceCreation", "DEL SimpleName: partitions", "DEL VariableDeclarationStatement", "DEL SimpleName: Override", "DEL SimpleName: file", "DEL SimpleName: LOG", "DEL SingleVariableDeclaration", "DEL TextElement: <li>", "DEL InfixExpression: <", "DEL StringLiteral: \" but is supposed to be \"", "DEL SimpleName: BufferedOutputStream", "DEL FieldAccess", "DEL Assignment: =", "DEL TextElement:  partition to be added", "DEL SimpleName: delete", "DEL SimpleName: getId", "DEL TextElement:  need yet to be handled. Since", "DEL MethodInvocation", "DEL SimpleName: E", "DEL Block", "DEL FieldAccess", "DEL TextElement:  The output stream", "DEL SingleVariableDeclaration", "DEL SimpleType: String", "DEL VariableDeclarationFragment", "DEL SimpleName: value", "DEL SimpleName: getId", "DEL SimpleName: I", "DEL SimpleType: IOException", "DEL SimpleName: msg", "DEL SimpleName: references", "DEL SimpleName: id", "DEL SimpleType: IllegalStateException", "DEL IfStatement", "DEL SimpleName: maxPartitionsInMem", "DEL Block", "DEL InfixExpression: +", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: state", "DEL TextElement: >", "DEL SimpleName: filein", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleType: V", "DEL SimpleName: getPartition", "DEL SimpleName: V", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleType: File", "DEL SimpleType: I", "DEL TagElement: @return", "DEL SimpleName: id", "DEL SimpleName: vertex", "DEL SimpleName: id", "DEL SimpleName: initialize", "DEL FieldAccess", "DEL StringLiteral: \" already exists.\"", "DEL SimpleName: meta", "DEL VariableDeclarationStatement", "DEL ClassInstanceCreation", "DEL SimpleType: Integer", "DEL SimpleName: write", "DEL SimpleType: Vertex", "DEL SimpleName: meta", "DEL Modifier: private", "DEL Block", "DEL VariableDeclarationFragment", "DEL TagElement", "DEL SimpleName: prevVertexCount", "DEL SimpleName: getPartitionPath", "DEL SimpleName: I", "DEL SimpleName: i", "DEL SimpleName: msg", "DEL MethodInvocation", "DEL IfStatement", "DEL TagElement: @param", "DEL SimpleType: IllegalStateException", "DEL MethodInvocation", "DEL SimpleName: notifyAll", "DEL SimpleName: outputStream", "DEL Modifier: public", "DEL SimpleName: meta", "DEL SingleVariableDeclaration", "DEL SimpleName: swapOutPartition", "DEL SimpleName: E", "DEL MethodInvocation", "DEL SimpleName: close", "DEL SimpleName: numPartitionsInMem", "DEL SimpleName: maxPartitionsInMem", "DEL SimpleName: AtomicLong", "DEL SimpleName: vertexCount", "DEL QualifiedName: State.ONDISK", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getState", "DEL SimpleName: vertexCount", "DEL TextElement: different partitions, guaranteeing performance.", "DEL MethodInvocation", "DEL SimpleName: getPartition", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL Block", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL SimpleName: prevVertexCount", "DEL ExpressionStatement", "DEL SimpleName: notifyAll", "DEL SimpleName: meta", "DEL Javadoc", "DEL MethodInvocation", "DEL SimpleName: Partition", "DEL FieldDeclaration", "DEL SimpleName: NUM_OUTPUT_THREADS", "DEL Block", "DEL InfixExpression: +", "DEL MethodDeclaration", "DEL SimpleName: readOutEdges", "DEL SimpleName: meta", "DEL StringLiteral: \" is sticky \"", "DEL SimpleName: isSticky", "DEL PrefixExpression: !", "DEL ParameterizedType: Partition<I,V,E>", "DEL SimpleType: State", "DEL TagElement: @return", "DEL SimpleName: bufferout", "DEL ThisExpression", "DEL SimpleName: numVertices", "DEL ThrowStatement", "DEL PrimitiveType: void", "DEL SwitchCase", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL SimpleType: DataInputStream", "DEL InfixExpression: +", "DEL SimpleName: hasPartition", "DEL TextElement: space in memory and inactive data to swap resources.", "DEL SimpleName: getPartitionPath", "DEL SimpleType: I", "DEL SimpleName: id", "DEL SimpleName: File", "DEL SimpleName: containsKey", "DEL SimpleName: State", "DEL SimpleName: DataOutput", "DEL TextElement: </li>", "DEL SimpleName: E", "DEL Javadoc", "DEL SimpleType: IllegalStateException", "DEL MethodInvocation", "DEL TextElement: concurrent call of ", "DEL SimpleName: setActive", "DEL Assignment: =", "DEL MethodInvocation", "DEL QualifiedName: basePaths.length", "DEL StringLiteral: \"previously Inactive Partition: \"", "DEL SimpleName: passedThroughEdges", "DEL Modifier: public", "DEL SimpleName: setSticky", "DEL Modifier: private", "DEL TextElement: reflected inside the META object provided as parameter.", "DEL SimpleName: getPartition", "DEL SimpleName: maxSticky", "DEL SimpleName: references", "DEL MethodInvocation", "DEL BooleanLiteral: true", "DEL SimpleType: V", "DEL MethodInvocation", "DEL SimpleName: getState", "DEL SimpleName: maxThreads", "DEL SimpleName: V", "DEL Assignment: =", "DEL PrimitiveType: int", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL SimpleName: lru", "DEL SimpleName: deletePartition", "DEL SimpleName: msg", "DEL SimpleName: vertexCount", "DEL SimpleName: setState", "DEL VariableDeclarationStatement", "DEL SimpleName: bufferout", "DEL SimpleName: isDebugEnabled", "DEL TextElement:  meta partition container with the partition itself", "DEL SimpleType: Vertex", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Block", "DEL TextElement: <b>CONCURRENCY</b>:", "DEL VariableDeclarationFragment", "DEL SimpleName: conf", "DEL SimpleName: temp", "DEL SimpleName: isOOC", "DEL TextElement: Writes vertex data (Id, value and halted state) to stream.", "DEL SimpleName: p", "DEL MethodInvocation", "DEL SimpleName: error", "DEL SimpleName: getValue", "DEL SimpleName: LOG", "DEL SimpleName: getAbsolutePath", "DEL SimpleName: error", "DEL VariableDeclarationStatement", "DEL SimpleName: OutEdges", "DEL TextElement: the meta partition.", "DEL TextElement: written to disk", "DEL StringLiteral: \"getPartition: Failed while Offloading \"", "DEL IfStatement", "DEL ParameterizedType: Partition<I,V,E>", "DEL SimpleName: file", "DEL SimpleName: HashFunction", "DEL SimpleType: E", "DEL IfStatement", "DEL SimpleName: MetaPartition", "DEL SimpleType: E", "DEL SimpleName: msg", "DEL Modifier: public", "DEL Javadoc", "DEL SimpleName: setActive", "DEL SimpleType: OutEdges", "DEL VariableDeclarationStatement", "DEL SimpleType: V", "DEL SimpleName: append", "DEL ClassInstanceCreation", "DEL TextElement: <br />", "DEL SimpleName: CentralizedServiceWorker", "DEL NumberLiteral: 0", "DEL SimpleName: setActive", "DEL SimpleName: prevVertexCount", "DEL SimpleName: meta", "DEL SimpleType: IllegalStateException", "DEL SimpleType: IOException", "DEL SimpleName: I", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL TextElement: in memory and the inactive partitions are very strictly related and this", "DEL SingleMemberAnnotation", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL StringLiteral: \" to \"", "DEL MethodInvocation", "DEL InfixExpression: -", "DEL MethodInvocation", "DEL SimpleName: state", "DEL SimpleName: I", "DEL SimpleName: numPartitionsInMem", "DEL TextElement:  Vertex data", "DEL VariableDeclarationFragment", "DEL TextElement: to disk", "DEL SimpleName: getPartition", "DEL ParameterizedType: Mapper<?,?,?,?>", "DEL TextElement: <b>Meta Partition Container</b>. All the references to the meta", "DEL SimpleName: getId", "DEL InfixExpression: +", "DEL BooleanLiteral: false", "DEL PrimitiveType: long", "DEL QualifiedName: State.INIT", "DEL SimpleName: meta", "DEL ExpressionStatement", "DEL ParameterizedType: Vertex<I,V,E>", "DEL SimpleName: partitionId", "DEL TagElement", "DEL SimpleName: file", "DEL SimpleName: setState", "DEL ThisExpression", "DEL SimpleName: IllegalStateException", "DEL SimpleType: ImmutableClassesGiraphConfiguration", "DEL InfixExpression: ||", "DEL SimpleName: String", "DEL SimpleName: createNewFile", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL SimpleName: existing", "DEL MethodInvocation", "DEL StringLiteral: \"inactive.\"", "DEL VariableDeclarationStatement", "DEL SimpleName: Integer", "DEL NumberLiteral: 0", "DEL SimpleName: meta", "DEL SimpleType: State", "DEL SimpleName: Override", "DEL SimpleName: setActive", "DEL SimpleName: fileout", "DEL StringLiteral: \"getPartition: Failed while Loading Partition from \"", "DEL SimpleName: i", "DEL SimpleName: FileOutputStream", "DEL SimpleName: maxPartitionsInMem", "DEL NumberLiteral: 0", "DEL SimpleName: id", "DEL SimpleName: E", "DEL MethodInvocation", "DEL TagElement: @param", "DEL Assignment: =", "DEL MarkerAnnotation", "DEL SimpleName: getPartitionEdgeCount", "DEL Javadoc", "DEL MethodInvocation", "DEL SimpleName: numOfStickyPartitions", "DEL VariableDeclarationFragment", "DEL CatchClause", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL SimpleName: warn", "DEL SimpleType: Writable", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: meta", "DEL TextElement: the usage of this class does not currently incure in this type of concurrent", "DEL SimpleName: V", "DEL Block", "DEL SimpleName: partitionId", "DEL SimpleName: file", "DEL EnhancedForStatement", "DEL SimpleName: V", "DEL Block", "DEL SimpleName: vertex", "DEL SimpleName: e", "DEL SimpleName: file", "DEL Block", "DEL SimpleName: String", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL TextElement: counter ", "DEL SimpleName: userPaths", "DEL SingleVariableDeclaration", "DEL SimpleName: numVertices", "DEL SimpleName: numOfStickyPartitions", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL SimpleName: values", "DEL TextElement: on the metapartition provided.<br />", "DEL Javadoc", "DEL SimpleType: V", "DEL ThisExpression", "DEL SimpleName: hasher", "DEL Block", "DEL SimpleType: StringBuffer", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL TextElement: It is not possible that two getPartition calls cross because this means", "DEL InfixExpression: +", "DEL FieldAccess", "DEL SimpleName: numVertices", "DEL BooleanLiteral: false", "DEL SimpleName: wait", "DEL Assignment: =", "DEL SynchronizedStatement", "DEL TextElement:  the state", "DEL InfixExpression: ==", "DEL SimpleName: outputStream", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: PARTITIONS_DIRECTORY", "DEL SimpleName: E", "DEL SimpleName: SuppressWarnings", "DEL VariableDeclarationFragment", "DEL SimpleName: V", "DEL PrimitiveType: void", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleName: partition", "DEL QualifiedName: edu.umd.cs.findbugs.annotations.SuppressWarnings", "DEL SimpleName: serviceWorker", "DEL ThisExpression", "DEL ClassInstanceCreation", "DEL SimpleName: LOG", "DEL SimpleName: LOG", "DEL MethodDeclaration", "DEL BreakStatement", "DEL SimpleName: error", "DEL SimpleName: meta", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: partition", "DEL BreakStatement", "DEL ClassInstanceCreation", "DEL SimpleType: V", "DEL ThisExpression", "DEL SimpleName: e", "DEL SimpleType: Partition", "DEL SimpleName: append", "DEL SimpleName: lru", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: IllegalStateException", "DEL VariableDeclarationFragment", "DEL SimpleName: Mapper", "DEL TextElement: partition.", "DEL ThisExpression", "DEL MethodInvocation", "DEL TextElement: manner while preserving the capability of each thread to swap partitions on", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleType: MetaPartition", "DEL VariableDeclarationFragment", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: get", "DEL ExpressionStatement", "DEL TagElement: @link", "DEL SimpleType: I", "DEL SimpleType: I", "DEL InfixExpression: !=", "DEL FieldAccess", "DEL SimpleType: Entry", "DEL TextElement: atomically operate on partitions. In fact, each time a thread accesses", "DEL NullLiteral", "DEL TryStatement", "DEL SimpleName: id", "DEL TryStatement", "DEL PrefixExpression: !", "DEL MethodInvocation", "DEL SimpleName: e", "DEL TextElement: However, this problem does not occur. The two locks held are:", "DEL TextElement: Read vertex data from an input and initialize the vertex.", "DEL Block", "DEL SimpleName: get", "DEL SimpleName: sb", "DEL TextElement: Mapper context ", "DEL Block", "DEL SimpleName: error", "DEL SimpleType: String", "DEL SimpleType: BufferedOutputStream", "DEL TagElement", "DEL ClassInstanceCreation", "DEL SimpleName: partition", "DEL SimpleType: Integer", "DEL ClassInstanceCreation", "DEL SimpleName: e", "DEL SimpleName: maxThreads", "DEL ExpressionStatement", "DEL SimpleName: isStaticGraph", "DEL SimpleName: put", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL SimpleName: BufferedOutputStream", "DEL SimpleName: meta", "DEL SimpleType: Partition", "DEL Assignment: =", "DEL SimpleType: E", "DEL SimpleName: get", "DEL SimpleName: isOOC", "DEL TextElement: performance and atomic access to each single reference, which is then", "DEL SimpleName: MetaPartition", "DEL SimpleName: E", "DEL ParameterizedType: OutEdges<I,E>", "DEL SimpleName: toString", "DEL Assignment: =", "DEL EnhancedForStatement", "DEL SimpleName: saveVertex", "DEL MethodInvocation", "DEL BreakStatement", "DEL SimpleName: meta", "DEL Block", "DEL SynchronizedStatement", "DEL SimpleName: StringBuilder", "DEL VariableDeclarationStatement", "DEL TagElement", "DEL SimpleName: I", "DEL SimpleName: max", "DEL SimpleName: meta", "DEL SimpleName: partition", "DEL ExpressionStatement", "DEL SimpleName: Override", "DEL SimpleType: V", "DEL SimpleName: numInputThreads", "DEL SimpleName: writeVertexData", "DEL SimpleName: id", "DEL Javadoc", "DEL SimpleName: isDone", "DEL SimpleName: offloadPartition", "DEL SimpleName: msg", "DEL SimpleName: LOG", "DEL SimpleName: id", "DEL SimpleName: LOG", "DEL SimpleName: getOrCreatePartition", "DEL Modifier: private", "DEL MethodInvocation", "DEL TagElement", "DEL SimpleName: readVertexData", "DEL Block", "DEL SimpleType: Partition", "DEL TextElement: safety. ", "DEL TagElement: @param", "DEL Modifier: final", "DEL Block", "DEL MethodInvocation", "DEL ParameterizedType: Entry<Integer,MetaPartition>", "DEL SimpleName: toString", "DEL SimpleName: in", "DEL SimpleName: id", "DEL NullLiteral", "DEL VariableDeclarationStatement", "DEL SimpleType: MetaPartition", "DEL SimpleName: e", "DEL Assignment: =", "DEL PrefixExpression: !", "DEL ParameterizedType: ImmutableClassesGiraphConfiguration<I,V,E>", "DEL ExpressionStatement", "DEL IfStatement", "DEL SimpleType: E", "DEL ClassInstanceCreation", "DEL SimpleName: meta", "DEL CatchClause", "DEL SimpleName: file", "DEL Block", "DEL VariableDeclarationStatement", "DEL Modifier: private", "DEL Assignment: =", "DEL QualifiedName: State.INIT", "DEL Block", "DEL SimpleType: E", "DEL Block", "DEL SimpleName: debug", "DEL SimpleName: lru", "DEL SimpleName: hasPartition", "DEL InfixExpression: +", "DEL SimpleType: I", "DEL Block", "DEL TagElement: @param", "DEL ExpressionStatement", "DEL FieldDeclaration", "DEL SimpleName: Partition", "DEL ClassInstanceCreation", "DEL SimpleName: getEdgesPath", "DEL SimpleName: msg", "DEL InfixExpression: ==", "DEL SimpleName: partition", "DEL SimpleType: MetaPartition", "DEL ParameterizedType: Partition<I,V,E>", "DEL TextElement: thread-safe using meta partition intrinsic lock.", "DEL SimpleName: p", "DEL TextElement: The code of this method can in principle lead to a deadlock, due to the", "DEL TextElement:  decremented references", "DEL SimpleName: isOOC", "DEL ExpressionStatement", "DEL ArrayType: String[]", "DEL SimpleName: close", "DEL SimpleName: Math", "DEL StringLiteral: \"Partition: \"", "DEL SimpleName: OutEdges", "DEL PrimitiveType: int", "DEL ParameterizedType: OutEdges<I,E>", "DEL ClassInstanceCreation", "DEL SimpleName: partition", "DEL SimpleName: LOG", "DEL InfixExpression: +", "DEL PrefixExpression: ++", "DEL TagElement: @param", "DEL SimpleName: IOException", "DEL SimpleName: partition", "DEL SimpleName: id", "DEL SimpleName: id", "DEL TextElement:  the state to set", "DEL SimpleName: MetaPartition", "DEL MethodInvocation", "DEL SimpleName: isDebugEnabled", "DEL SimpleType: Partition", "DEL BreakStatement", "DEL SimpleType: File", "DEL MethodDeclaration", "DEL SimpleName: File", "DEL ThisExpression", "DEL InfixExpression: ==", "DEL SimpleType: String", "DEL Javadoc", "DEL SimpleName: output", "DEL ArrayType: String[]", "DEL SimpleName: id", "DEL SimpleName: v", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: getState", "DEL ThisExpression", "DEL SimpleName: State", "DEL ExpressionStatement", "DEL SimpleName: AtomicLong", "DEL MethodDeclaration", "DEL SynchronizedStatement", "DEL IfStatement", "DEL IfStatement", "DEL SimpleName: meta", "DEL SimpleName: meta", "DEL ClassInstanceCreation", "DEL SimpleName: MetaPartition", "DEL SimpleName: error", "DEL SimpleName: createVertexId", "DEL Javadoc", "DEL SimpleName: p", "DEL VariableDeclarationStatement", "DEL SimpleName: Partition", "DEL TextElement: Sticky bit; if set, this partition is never supposed to be", "DEL SimpleName: context", "DEL Block", "DEL SimpleType: ImmutableClassesGiraphConfiguration", "DEL TextElement:  the partition associate to this container", "DEL SimpleType: FileInputStream", "DEL SimpleName: getId", "DEL MethodInvocation", "DEL TextElement: Get sticky bit to this partition", "DEL SimpleName: conf", "DEL Modifier: public", "DEL InfixExpression: !=", "DEL SimpleName: swapOutPartition", "DEL TextElement:  partition related to this container", "DEL SimpleType: Vertex", "DEL ExpressionStatement", "DEL Modifier: final", "DEL SimpleName: V", "DEL SimpleName: getMessage", "DEL IfStatement", "DEL StringLiteral: \"Number of Vertices: \"", "DEL NumberLiteral: 0", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Assignment: =", "DEL TextElement:  the id", "DEL SimpleName: msg", "DEL ClassInstanceCreation", "DEL SimpleName: partition", "DEL SimpleName: V", "DEL FieldDeclaration", "DEL SimpleName: vertex", "DEL SimpleName: isStaticGraph", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL TextElement:  boolean ture iff the sticky bit is set", "DEL SimpleName: maxThreads", "DEL SimpleName: Maps", "DEL Assignment: =", "DEL SimpleName: E", "DEL SimpleName: e", "DEL SimpleName: partition", "DEL SimpleName: vertex", "DEL Javadoc", "DEL TagElement", "DEL SimpleName: get", "DEL SimpleName: DiskBackedPartitionStore", "DEL SimpleName: partition", "DEL MethodInvocation", "DEL SimpleName: AtomicLong", "DEL SimpleName: Entry", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL SimpleName: LOG", "DEL SimpleName: v", "DEL SimpleName: inputStream", "DEL FieldDeclaration", "DEL SimpleName: context", "DEL SimpleName: MetaPartition", "DEL SimpleName: Vertex", "DEL SimpleName: lru", "DEL IfStatement", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL SimpleName: vertex", "DEL Modifier: public", "DEL Assignment: =", "DEL SwitchCase", "DEL WildcardType: ?", "DEL TextElement: guaranteeing exclusion in managing the partition. Besides, this", "DEL SimpleName: getState", "DEL SimpleName: serviceWorker", "DEL ExpressionStatement", "DEL StringLiteral: \"Partition was still INIT after ADD (not possibile).\"", "DEL MethodDeclaration", "DEL SimpleType: Partition", "DEL EnumConstantDeclaration", "DEL Modifier: public", "DEL SimpleName: readFields", "DEL ExpressionStatement", "DEL Block", "DEL InfixExpression: +", "DEL IfStatement", "DEL SimpleName: meta", "DEL Assignment: =", "DEL SimpleName: append", "DEL SimpleName: String", "DEL SimpleName: getAbsolutePath", "DEL SimpleName: IllegalStateException", "DEL SimpleName: MetaPartition", "DEL MethodInvocation", "DEL SimpleType: IllegalStateException", "DEL SimpleName: IOException", "DEL MethodInvocation", "DEL Javadoc", "DEL TextElement: <", "DEL SimpleName: get", "DEL SimpleName: error", "DEL TagElement", "DEL SimpleName: file", "DEL ReturnStatement", "DEL SimpleType: FileOutputStream", "DEL SimpleName: getState", "DEL SimpleName: Vertex", "DEL StringLiteral: \"New Partition: \"", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: State", "DEL SimpleName: isInfoEnabled", "DEL ThisExpression", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: I", "DEL SimpleName: getVertexCount", "DEL StringLiteral: \"resetting to automatically computed value.\"", "DEL ExpressionStatement", "DEL TagElement: @return", "DEL Block", "DEL SimpleType: E", "DEL SimpleName: value", "DEL SimpleName: basePaths", "DEL SimpleName: isSticky", "DEL SimpleName: msg", "DEL StringLiteral: \"unchecked\"", "DEL ThisExpression", "DEL SimpleName: Override", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL Modifier: public", "DEL TypeParameter", "DEL SimpleName: edges", "DEL SimpleName: I", "DEL SimpleName: swapOutPartition", "DEL SimpleType: E", "DEL Modifier: public", "DEL SimpleName: FileOutputStream", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: Integer", "DEL SimpleType: MetaPartition", "DEL SimpleType: V", "DEL Assignment: =", "DEL SimpleType: MetaPartition", "DEL SimpleName: IllegalStateException", "DEL SimpleName: maxPartitionsInMem", "DEL SimpleName: meta", "DEL InfixExpression: ==", "DEL Assignment: =", "DEL IfStatement", "DEL SimpleName: Iterable", "DEL Assignment: =", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL ThrowStatement", "DEL SimpleName: id", "DEL StringLiteral: \"Number of References: \"", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleType: String", "DEL PrimitiveType: long", "DEL SimpleName: msg", "DEL MethodInvocation", "DEL SimpleName: I", "DEL TagElement: @return", "DEL MethodInvocation", "DEL TagElement: @param", "DEL Assignment: =", "DEL SimpleName: msg", "DEL SimpleName: IllegalStateException", "DEL ExpressionStatement", "DEL Block", "DEL TagElement", "DEL SimpleType: OutEdges", "DEL ThrowStatement", "DEL SimpleName: error", "DEL InfixExpression: +", "DEL VariableDeclarationStatement", "DEL BreakStatement", "DEL SimpleName: id", "DEL SimpleName: getAbsolutePath", "DEL SimpleName: getLRUPartition", "DEL TagElement: @param", "DEL ExpressionStatement", "DEL SimpleName: maxSticky", "DEL ReturnStatement", "DEL SimpleName: vertex", "DEL Javadoc", "DEL VariableDeclarationFragment", "DEL SimpleName: id", "DEL VariableDeclarationStatement", "DEL TagElement: @param", "DEL TextElement: The others, will be waiting on the lock to be available,", "DEL ReturnStatement", "DEL SimpleName: id", "DEL ClassInstanceCreation", "DEL SimpleName: close", "DEL SimpleName: isNotDone", "DEL ExpressionStatement", "DEL SimpleType: BufferedInputStream", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleType: IOException", "DEL TagElement", "DEL SimpleType: DataInputStream", "DEL SimpleName: append", "DEL SimpleName: meta", "DEL SimpleName: in", "DEL SimpleName: lru", "DEL SimpleName: setSticky", "DEL SimpleName: partition", "DEL Block", "DEL SimpleName: getAbsolutePath", "DEL SimpleName: partition", "DEL SimpleName: id", "DEL StringLiteral: \"Unknown Job\"", "DEL TagElement", "DEL VariableDeclarationFragment", "DEL InfixExpression: +", "DEL ClassInstanceCreation", "DEL TagElement: @param", "DEL MethodInvocation", "DEL Block", "DEL Block", "DEL ExpressionStatement", "DEL TypeParameter", "DEL MethodInvocation", "DEL SimpleName: basePaths", "DEL ParameterizedType: Vertex<I,V,E>", "DEL ThrowStatement", "DEL ThrowStatement", "DEL FieldAccess", "DEL SimpleType: String", "DEL ExpressionStatement", "DEL Block", "DEL PrimitiveType: int", "DEL SimpleName: inc", "DEL SimpleName: meta", "DEL SimpleName: LOG", "DEL SimpleName: p", "DEL SimpleType: File", "DEL VariableDeclarationFragment", "DEL TextElement: set previous number of vertexes", "DEL SingleVariableDeclaration", "DEL TagElement: @param", "DEL SimpleName: maxSticky", "DEL ReturnStatement", "DEL Block", "DEL Javadoc", "DEL ExpressionStatement", "DEL SimpleName: file", "DEL CatchClause", "DEL SimpleName: IllegalStateException", "DEL SimpleName: readBoolean", "DEL SimpleName: getMessage", "DEL SimpleName: setPartition", "DEL SimpleName: readFields", "DEL SimpleName: lru", "DEL Block", "DEL TextElement: This function sets the metadata for on-disk partition.", "DEL StringLiteral: \"offloadPartition: writing partition edges \"", "DEL SimpleName: msg", "DEL VariableDeclarationStatement", "DEL Modifier: private", "DEL SimpleName: parent", "DEL BreakStatement", "DEL BooleanLiteral: true", "DEL SimpleName: isNotDone", "DEL SimpleName: sb", "DEL SimpleName: LOG", "DEL SimpleName: remove", "DEL MethodInvocation", "DEL SimpleType: Integer", "DEL StringLiteral: \"State: \"", "DEL QualifiedName: State.INACTIVE", "DEL SimpleName: Partition", "DEL SimpleName: meta", "DEL SimpleName: vertex", "DEL VariableDeclarationStatement", "DEL SimpleName: partition", "DEL SimpleName: file", "DEL SimpleType: Partition", "DEL SimpleName: Partition", "DEL InfixExpression: +", "DEL SimpleName: p", "DEL SimpleType: File", "DEL InfixExpression: +", "DEL TextElement: Inactive partitions to re-activate or spill to disk to make space ", "DEL SimpleName: abs", "DEL TextElement: the actual partition. Depending on the state of the partition,", "DEL SimpleName: LOG", "DEL SimpleName: BufferedOutputStream", "DEL SimpleName: partitionId", "DEL SimpleName: FileOutputStream", "DEL ClassInstanceCreation", "DEL SimpleName: LOG", "DEL SimpleName: state", "DEL Block", "DEL SimpleName: isDebugEnabled", "DEL SimpleName: meta", "DEL SimpleName: e", "DEL IfStatement", "DEL IfStatement", "DEL MarkerAnnotation", "DEL SimpleName: state", "DEL SimpleName: sb", "DEL TagElement: @param", "DEL ThrowStatement", "DEL PrimitiveType: int", "DEL TagElement: @return", "DEL SimpleName: I", "DEL SimpleName: conf", "DEL ForStatement", "DEL PrimitiveType: int", "DEL SimpleName: conf", "DEL Block", "DEL InfixExpression: !=", "DEL SimpleName: getState", "DEL SimpleType: IllegalStateException", "DEL TagElement", "DEL TagElement: @return", "DEL StringLiteral: \"; \"", "DEL TagElement: @throws", "DEL PrimitiveType: void", "DEL SimpleName: String", "DEL EnhancedForStatement", "DEL SimpleName: BufferedInputStream", "DEL VariableDeclarationStatement", "DEL SimpleName: getLRUPartition", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: String", "DEL PrimitiveType: void", "DEL TextElement: <li><b>Meta Object</b>, which is the object the thread is trying to", "DEL SimpleName: getPartitionPath", "DEL VariableDeclarationFragment", "DEL SimpleName: meta", "DEL SimpleName: Vertex", "DEL InfixExpression: &&", "DEL ExpressionStatement", "DEL SimpleName: createVertex", "DEL SimpleType: V", "DEL SimpleName: e", "DEL StringLiteral: \"; }\"", "DEL MarkerAnnotation", "DEL ExpressionStatement", "DEL TextElement: not possible.", "DEL StringLiteral: \" for partition \"", "DEL SimpleType: I", "DEL FieldAccess", "DEL SimpleType: IOException", "DEL SimpleName: isNotDone", "DEL ParameterizedType: Partition<I,V,E>", "DEL PrimitiveType: void", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL TextElement: Delete a partition's files.", "DEL StringLiteral: \" from \"", "DEL ExpressionStatement", "DEL SimpleName: getId", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: InterruptedException", "DEL SimpleName: meta", "DEL Modifier: public", "DEL SimpleType: Integer", "DEL SimpleName: value", "DEL FieldDeclaration", "DEL SimpleType: CentralizedServiceWorker", "DEL SimpleName: IllegalStateException", "DEL SimpleName: MetaPartition", "DEL SimpleType: DataOutputStream", "DEL StringLiteral: \"active partition: \"", "DEL TagElement", "DEL SimpleName: temp", "DEL EnumDeclaration", "DEL SimpleName: id", "DEL SimpleType: E", "DEL SimpleName: existing", "DEL SimpleName: state", "DEL StringLiteral: \" from \"", "DEL SimpleName: getPartition", "DEL WildcardType: ?", "DEL SimpleName: conf", "DEL SimpleName: meta", "DEL SimpleName: FileOutputStream", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 1", "DEL TagElement: @param", "DEL SimpleName: delete", "DEL VariableDeclarationFragment", "DEL SimpleName: I", "DEL ExpressionStatement", "DEL SimpleName: File", "DEL VariableDeclarationFragment", "DEL SimpleName: getOrCreatePartition", "DEL SimpleName: outputStream", "DEL SimpleName: partition", "DEL TagElement", "DEL PrefixExpression: !", "DEL SimpleType: String", "DEL MarkerAnnotation", "DEL SimpleType: E", "DEL ClassInstanceCreation", "DEL SimpleName: I", "DEL SimpleName: id", "DEL SimpleName: BufferedOutputStream", "DEL StringLiteral: \"disk: \"", "DEL ExpressionStatement", "DEL SimpleName: putPartition", "DEL SimpleName: IOException", "DEL SimpleName: partitionId", "DEL SimpleType: File", "DEL SimpleName: INACTIVE", "DEL TextElement: It is possible that multiple threads wait for a single", "DEL SimpleName: vertexCount", "DEL IfStatement", "DEL QualifiedName: State.INIT"]}]}}, {"DiskBackedPartitionStore_diff": {"operations": ["Delete QualifiedName: org.apache.giraph.partition(0)", "Delete PackageDeclaration(1)", "Delete QualifiedName: org.apache.giraph.conf.GiraphConstants.MAX_PARTITIONS_IN_MEMORY(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: org.apache.giraph.conf.GiraphConstants.MAX_STICKY_PARTITIONS(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: org.apache.giraph.conf.GiraphConstants.NUM_COMPUTE_THREADS(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: org.apache.giraph.conf.GiraphConstants.NUM_INPUT_THREADS(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: org.apache.giraph.conf.GiraphConstants.NUM_OUTPUT_THREADS(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.giraph.conf.GiraphConstants.PARTITIONS_DIRECTORY(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: java.io.BufferedInputStream(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: java.io.BufferedOutputStream(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: java.io.DataInput(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.io.DataInputStream(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: java.io.DataOutput(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: java.io.DataOutputStream(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: java.io.File(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: java.io.FileInputStream(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: java.io.FileOutputStream(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: java.io.IOException(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: java.util.Iterator(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: java.util.Map(36)", "Delete ImportDeclaration(37)", "Delete QualifiedName: java.util.Map.Entry(38)", "Delete ImportDeclaration(39)", "Delete QualifiedName: java.util.concurrent.ConcurrentMap(40)", "Delete ImportDeclaration(41)", "Delete QualifiedName: java.util.concurrent.atomic.AtomicInteger(42)", "Delete ImportDeclaration(43)", "Delete QualifiedName: java.util.concurrent.atomic.AtomicLong(44)", "Delete ImportDeclaration(45)", "Delete QualifiedName: org.apache.giraph.bsp.CentralizedServiceWorker(46)", "Delete ImportDeclaration(47)", "Delete QualifiedName: org.apache.giraph.conf.ImmutableClassesGiraphConfiguration(48)", "Delete ImportDeclaration(49)", "Delete QualifiedName: org.apache.giraph.edge.OutEdges(50)", "Delete ImportDeclaration(51)", "Delete QualifiedName: org.apache.giraph.graph.Vertex(52)", "Delete ImportDeclaration(53)", "Delete QualifiedName: org.apache.hadoop.io.Writable(54)", "Delete ImportDeclaration(55)", "Delete QualifiedName: org.apache.hadoop.io.WritableComparable(56)", "Delete ImportDeclaration(57)", "Delete QualifiedName: org.apache.hadoop.mapreduce.Mapper(58)", "Delete ImportDeclaration(59)", "Delete QualifiedName: org.apache.hadoop.mapreduce.Mapper.Context(60)", "Delete ImportDeclaration(61)", "Delete QualifiedName: org.apache.log4j.Logger(62)", "Delete ImportDeclaration(63)", "Delete QualifiedName: com.google.common.collect.Iterables(64)", "Delete ImportDeclaration(65)", "Delete QualifiedName: com.google.common.collect.Maps(66)", "Delete ImportDeclaration(67)", "Delete QualifiedName: com.google.common.hash.HashFunction(68)", "Delete ImportDeclaration(69)", "Delete QualifiedName: com.google.common.hash.Hashing(70)", "Delete ImportDeclaration(71)", "Delete TextElement: Disk-backed PartitionStore. Partitions are stored in memory on a LRU basis.(72)", "Delete TextElement: The operations are thread-safe, and guarantees safety for concurrent(73)", "Delete TextElement: execution of different operations on each partition.<br />(74)", "Delete TextElement: <br />(75)", "Delete TextElement: The algorithm implemented by this class is quite intricate due to the(76)", "Delete TextElement: interaction of several locks to guarantee performance. For this reason, here(77)", "Delete TextElement: follows an overview of the implemented algorithm.<br />(78)", "Delete TextElement: <b>ALGORITHM</b>:(79)", "Delete TextElement: In general, the partition store keeps N partitions in memory. To improve(80)", "Delete TextElement: I/O performance, part of the N partitions are kept in memory in a sticky(81)", "Delete TextElement: manner while preserving the capability of each thread to swap partitions on(82)", "Delete TextElement: the disk. This means that, for T threads, at least T partitions must remain(83)", "Delete TextElement: non-sticky. The number of sicky partitions can also be specified manually.(84)", "Delete TextElement: <b>CONCURRENCY</b>:(85)", "Delete TextElement: <ul>(86)", "Delete TextElement: <li>(87)", "Delete TextElement: <b>Meta Partition Lock</b>.All the partitions are held in a(88)", "Delete TextElement: container, called the MetaPartition. This object contains also meta(89)", "Delete TextElement: information about the partition. All these objects are used to(90)", "Delete TextElement: atomically operate on partitions. In fact, each time a thread accesses(91)", "Delete TextElement: a partition, it will firstly acquire a lock on the container,(92)", "Delete TextElement: guaranteeing exclusion in managing the partition. Besides, this(93)", "Delete TextElement: partition-based lock allows the threads to concurrently operate on(94)", "Delete TextElement: different partitions, guaranteeing performance.(95)", "Delete TextElement: </li>(96)", "Delete TextElement: <li>(97)", "Delete TextElement: <b>Meta Partition Container</b>. All the references to the meta(98)", "Delete TextElement: partition objects are kept in a concurrent hash map. This ADT guarantees(99)", "Delete TextElement: performance and atomic access to each single reference, which is then(100)", "Delete TextElement: use for atomic operations on partitions, as previously described.(101)", "Delete TextElement: </li>(102)", "Delete TextElement: <li>(103)", "Delete TextElement: <b>LRU Lock</b>. Finally, an additional ADT is used to keep the LRU(104)", "Delete TextElement: order of unused partitions. In this case, the ADT is not thread safe and(105)", "Delete TextElement: to guarantee safety, we use its intrinsic lock. Additionally, this lock(106)", "Delete TextElement: is used for all in memory count changes. In fact, the amount of elements(107)", "Delete TextElement: in memory and the inactive partitions are very strictly related and this(108)", "Delete TextElement: justifies the sharing of the same lock.(109)", "Delete TextElement: </li>(110)", "Delete TextElement: </ul>(111)", "Delete TextElement: <b>XXX</b>:<br/>(112)", "Delete TextElement: while most of the concurrent behaviors are gracefully handled, the(113)", "Delete TextElement: concurrent call of (114)", "Delete SimpleName: getOrCreatePartition(115)", "Delete SimpleName: Integer(116)", "Delete SimpleType: Integer(117)", "Delete SimpleName: partitionId(118)", "Delete MethodRefParameter(119)", "Delete MethodRef(120)", "Delete TagElement: @link(121)", "Delete TextElement:  and(122)", "Delete SimpleName: deletePartition(123)", "Delete SimpleName: Integer(124)", "Delete SimpleType: Integer(125)", "Delete SimpleName: partitionId(126)", "Delete MethodRefParameter(127)", "Delete MethodRef(128)", "Delete TagElement: @link(129)", "Delete TextElement:  need yet to be handled. Since(130)", "Delete TextElement: the usage of this class does not currently incure in this type of concurrent(131)", "Delete TextElement: behavior, it has been left as a future work.(132)", "Delete TagElement(133)", "Delete TextElement: <(134)", "Delete SimpleName: I(135)", "Delete TextElement: >(136)", "Delete TextElement:  Vertex id(137)", "Delete TagElement: @param(138)", "Delete TextElement: <(139)", "Delete SimpleName: V(140)", "Delete TextElement: >(141)", "Delete TextElement:  Vertex data(142)", "Delete TagElement: @param(143)", "Delete TextElement: <(144)", "Delete SimpleName: E(145)", "Delete TextElement: >(146)", "Delete TextElement:  Edge data(147)", "Delete TagElement: @param(148)", "Delete Javadoc(149)", "Delete SimpleName: SuppressWarnings(150)", "Delete StringLiteral: \"rawtypes\"(151)", "Delete SingleMemberAnnotation(152)", "Delete Modifier: public(153)", "Delete SimpleName: DiskBackedPartitionStore(154)", "Delete SimpleName: I(155)", "Delete SimpleName: WritableComparable(156)", "Delete SimpleType: WritableComparable(157)", "Delete TypeParameter(158)", "Delete SimpleName: V(159)", "Delete SimpleName: Writable(160)", "Delete SimpleType: Writable(161)", "Delete TypeParameter(162)", "Delete SimpleName: E(163)", "Delete SimpleName: Writable(164)", "Delete SimpleType: Writable(165)", "Delete TypeParameter(166)", "Delete SimpleName: PartitionStore(167)", "Delete SimpleType: PartitionStore(168)", "Delete SimpleName: I(169)", "Delete SimpleType: I(170)", "Delete SimpleName: V(171)", "Delete SimpleType: V(172)", "Delete SimpleName: E(173)", "Delete SimpleType: E(174)", "Delete ParameterizedType: PartitionStore<I,V,E>(175)", "Delete TextElement: Class logger. (176)", "Delete TagElement(177)", "Delete Javadoc(178)", "Delete Modifier: private(179)", "Delete Modifier: static(180)", "Delete Modifier: final(181)", "Delete SimpleName: Logger(182)", "Delete SimpleType: Logger(183)", "Delete SimpleName: LOG(184)", "Delete SimpleName: Logger(185)", "Delete SimpleName: getLogger(186)", "Delete SimpleName: DiskBackedPartitionStore(187)", "Delete SimpleType: DiskBackedPartitionStore(188)", "Delete TypeLiteral(189)", "Delete MethodInvocation(190)", "Delete VariableDeclarationFragment(191)", "Delete FieldDeclaration(192)", "Delete TextElement: States the partition can be found in (193)", "Delete TagElement(194)", "Delete Javadoc(195)", "Delete Modifier: private(196)", "Delete SimpleName: State(197)", "Delete SimpleName: INIT(198)", "Delete EnumConstantDeclaration(199)", "Delete SimpleName: ACTIVE(200)", "Delete EnumConstantDeclaration(201)", "Delete SimpleName: INACTIVE(202)", "Delete EnumConstantDeclaration(203)", "Delete SimpleName: ONDISK(204)", "Delete EnumConstantDeclaration(205)", "Delete EnumDeclaration(206)", "Delete TextElement: Hash map containing all the partitions  (207)", "Delete TagElement(208)", "Delete Javadoc(209)", "Delete Modifier: private(210)", "Delete Modifier: final(211)", "Delete SimpleName: ConcurrentMap(212)", "Delete SimpleType: ConcurrentMap(213)", "Delete SimpleName: Integer(214)", "Delete SimpleType: Integer(215)", "Delete SimpleName: MetaPartition(216)", "Delete SimpleType: MetaPartition(217)", "Delete ParameterizedType: ConcurrentMap<Integer,MetaPartition>(218)", "Delete SimpleName: partitions(219)", "Delete SimpleName: Maps(220)", "Delete SimpleName: newConcurrentMap(221)", "Delete MethodInvocation(222)", "Delete VariableDeclarationFragment(223)", "Delete FieldDeclaration(224)", "Delete TextElement: Inactive partitions to re-activate or spill to disk to make space (225)", "Delete TagElement(226)", "Delete Javadoc(227)", "Delete Modifier: private(228)", "Delete Modifier: final(229)", "Delete SimpleName: Map(230)", "Delete SimpleType: Map(231)", "Delete SimpleName: Integer(232)", "Delete SimpleType: Integer(233)", "Delete SimpleName: MetaPartition(234)", "Delete SimpleType: MetaPartition(235)", "Delete ParameterizedType: Map<Integer,MetaPartition>(236)", "Delete SimpleName: lru(237)", "Delete SimpleName: Maps(238)", "Delete SimpleName: newLinkedHashMap(239)", "Delete MethodInvocation(240)", "Delete VariableDeclarationFragment(241)", "Delete FieldDeclaration(242)", "Delete TextElement: Giraph configuration (243)", "Delete TagElement(244)", "Delete Javadoc(245)", "Delete Modifier: private(246)", "Delete Modifier: final(247)", "Delete SimpleName: ImmutableClassesGiraphConfiguration(248)", "Delete SimpleType: ImmutableClassesGiraphConfiguration(249)", "Delete SimpleName: I(250)", "Delete SimpleType: I(251)", "Delete SimpleName: V(252)", "Delete SimpleType: V(253)", "Delete SimpleName: E(254)", "Delete SimpleType: E(255)", "Delete ParameterizedType: ImmutableClassesGiraphConfiguration<I,V,E>(256)", "Delete SimpleName: conf(257)", "Delete VariableDeclarationFragment(258)", "Delete FieldDeclaration(259)", "Delete TextElement: Mapper context (260)", "Delete TagElement(261)", "Delete Javadoc(262)", "Delete Modifier: private(263)", "Delete Modifier: final(264)", "Delete SimpleName: Context(265)", "Delete SimpleType: Context(266)", "Delete SimpleName: context(267)", "Delete VariableDeclarationFragment(268)", "Delete FieldDeclaration(269)", "Delete TextElement: Base path where the partition files are written to (270)", "Delete TagElement(271)", "Delete Javadoc(272)", "Delete Modifier: private(273)", "Delete Modifier: final(274)", "Delete SimpleName: String(275)", "Delete SimpleType: String(276)", "Delete Dimension(277)", "Delete ArrayType: String[](278)", "Delete SimpleName: basePaths(279)", "Delete VariableDeclarationFragment(280)", "Delete FieldDeclaration(281)", "Delete TextElement: Used to hash partition Ids (282)", "Delete TagElement(283)", "Delete Javadoc(284)", "Delete Modifier: private(285)", "Delete Modifier: final(286)", "Delete SimpleName: HashFunction(287)", "Delete SimpleType: HashFunction(288)", "Delete SimpleName: hasher(289)", "Delete SimpleName: Hashing(290)", "Delete SimpleName: murmur3_32(291)", "Delete MethodInvocation(292)", "Delete VariableDeclarationFragment(293)", "Delete FieldDeclaration(294)", "Delete TextElement: Maximum number of slots. Read-only value, no need for concurrency(295)", "Delete TextElement: safety. (296)", "Delete TagElement(297)", "Delete Javadoc(298)", "Delete Modifier: private(299)", "Delete Modifier: final(300)", "Delete PrimitiveType: int(301)", "Delete SimpleName: maxPartitionsInMem(302)", "Delete VariableDeclarationFragment(303)", "Delete FieldDeclaration(304)", "Delete TextElement: Number of slots used (305)", "Delete TagElement(306)", "Delete Javadoc(307)", "Delete Modifier: private(308)", "Delete SimpleName: AtomicInteger(309)", "Delete SimpleType: AtomicInteger(310)", "Delete SimpleName: numPartitionsInMem(311)", "Delete VariableDeclarationFragment(312)", "Delete FieldDeclaration(313)", "Delete TextElement: service worker reference (314)", "Delete TagElement(315)", "Delete Javadoc(316)", "Delete Modifier: private(317)", "Delete SimpleName: CentralizedServiceWorker(318)", "Delete SimpleType: CentralizedServiceWorker(319)", "Delete SimpleName: I(320)", "Delete SimpleType: I(321)", "Delete SimpleName: V(322)", "Delete SimpleType: V(323)", "Delete SimpleName: E(324)", "Delete SimpleType: E(325)", "Delete ParameterizedType: CentralizedServiceWorker<I,V,E>(326)", "Delete SimpleName: serviceWorker(327)", "Delete VariableDeclarationFragment(328)", "Delete FieldDeclaration(329)", "Delete TextElement: mumber of slots that are always kept in memory (330)", "Delete TagElement(331)", "Delete Javadoc(332)", "Delete Modifier: private(333)", "Delete SimpleName: AtomicLong(334)", "Delete SimpleType: AtomicLong(335)", "Delete SimpleName: numOfStickyPartitions(336)", "Delete VariableDeclarationFragment(337)", "Delete FieldDeclaration(338)", "Delete TextElement: counter (339)", "Delete TagElement(340)", "Delete Javadoc(341)", "Delete Modifier: private(342)", "Delete PrimitiveType: long(343)", "Delete SimpleName: passedThroughEdges(344)", "Delete VariableDeclarationFragment(345)", "Delete FieldDeclaration(346)", "Delete TextElement: Constructor(347)", "Delete TagElement(348)", "Delete SimpleName: conf(349)", "Delete TextElement:  Configuration(350)", "Delete TagElement: @param(351)", "Delete SimpleName: context(352)", "Delete TextElement:  Context(353)", "Delete TagElement: @param(354)", "Delete SimpleName: serviceWorker(355)", "Delete TextElement:  service worker reference(356)", "Delete TagElement: @param(357)", "Delete Javadoc(358)", "Delete Modifier: public(359)", "Delete SimpleName: DiskBackedPartitionStore(360)", "Delete SimpleName: ImmutableClassesGiraphConfiguration(361)", "Delete SimpleType: ImmutableClassesGiraphConfiguration(362)", "Delete SimpleName: I(363)", "Delete SimpleType: I(364)", "Delete SimpleName: V(365)", "Delete SimpleType: V(366)", "Delete SimpleName: E(367)", "Delete SimpleType: E(368)", "Delete ParameterizedType: ImmutableClassesGiraphConfiguration<I,V,E>(369)", "Delete SimpleName: conf(370)", "Delete SingleVariableDeclaration(371)", "Delete SimpleName: Mapper(372)", "Delete SimpleType: Mapper(373)", "Delete WildcardType: ?(374)", "Delete WildcardType: ?(375)", "Delete WildcardType: ?(376)", "Delete WildcardType: ?(377)", "Delete ParameterizedType: Mapper<?,?,?,?>(378)", "Delete SimpleName: Context(379)", "Delete QualifiedType: Mapper<?,?,?,?>.Context(380)", "Delete SimpleName: context(381)", "Delete SingleVariableDeclaration(382)", "Delete SimpleName: CentralizedServiceWorker(383)", "Delete SimpleType: CentralizedServiceWorker(384)", "Delete SimpleName: I(385)", "Delete SimpleType: I(386)", "Delete SimpleName: V(387)", "Delete SimpleType: V(388)", "Delete SimpleName: E(389)", "Delete SimpleType: E(390)", "Delete ParameterizedType: CentralizedServiceWorker<I,V,E>(391)", "Delete SimpleName: serviceWorker(392)", "Delete SingleVariableDeclaration(393)", "Delete ThisExpression(394)", "Delete SimpleName: conf(395)", "Delete FieldAccess(396)", "Delete SimpleName: conf(397)", "Delete Assignment: =(398)", "Delete ExpressionStatement(399)", "Delete ThisExpression(400)", "Delete SimpleName: context(401)", "Delete FieldAccess(402)", "Delete SimpleName: context(403)", "Delete Assignment: =(404)", "Delete ExpressionStatement(405)", "Delete ThisExpression(406)", "Delete SimpleName: serviceWorker(407)", "Delete FieldAccess(408)", "Delete SimpleName: serviceWorker(409)", "Delete Assignment: =(410)", "Delete ExpressionStatement(411)", "Delete ThisExpression(412)", "Delete SimpleName: passedThroughEdges(413)", "Delete FieldAccess(414)", "Delete NumberLiteral: 0(415)", "Delete Assignment: =(416)", "Delete ExpressionStatement(417)", "Delete ThisExpression(418)", "Delete SimpleName: numPartitionsInMem(419)", "Delete FieldAccess(420)", "Delete SimpleName: AtomicInteger(421)", "Delete SimpleType: AtomicInteger(422)", "Delete NumberLiteral: 0(423)", "Delete ClassInstanceCreation(424)", "Delete Assignment: =(425)", "Delete ExpressionStatement(426)", "Delete ThisExpression(427)", "Delete SimpleName: maxPartitionsInMem(428)", "Delete FieldAccess(429)", "Delete SimpleName: Math(430)", "Delete SimpleName: max(431)", "Delete SimpleName: MAX_PARTITIONS_IN_MEMORY(432)", "Delete SimpleName: get(433)", "Delete SimpleName: conf(434)", "Delete MethodInvocation(435)", "Delete NumberLiteral: 1(436)", "Delete MethodInvocation(437)", "Delete Assignment: =(438)", "Delete ExpressionStatement(439)", "Delete PrimitiveType: int(440)", "Delete SimpleName: numInputThreads(441)", "Delete SimpleName: NUM_INPUT_THREADS(442)", "Delete SimpleName: get(443)", "Delete SimpleName: conf(444)", "Delete MethodInvocation(445)", "Delete VariableDeclarationFragment(446)", "Delete VariableDeclarationStatement(447)", "Delete PrimitiveType: int(448)", "Delete SimpleName: numComputeThreads(449)", "Delete SimpleName: NUM_COMPUTE_THREADS(450)", "Delete SimpleName: get(451)", "Delete SimpleName: conf(452)", "Delete MethodInvocation(453)", "Delete VariableDeclarationFragment(454)", "Delete VariableDeclarationStatement(455)", "Delete PrimitiveType: int(456)", "Delete SimpleName: numOutputThreads(457)", "Delete SimpleName: NUM_OUTPUT_THREADS(458)", "Delete SimpleName: get(459)", "Delete SimpleName: conf(460)", "Delete MethodInvocation(461)", "Delete VariableDeclarationFragment(462)", "Delete VariableDeclarationStatement(463)", "Delete PrimitiveType: int(464)", "Delete SimpleName: maxThreads(465)", "Delete SimpleName: Math(466)", "Delete SimpleName: max(467)", "Delete SimpleName: numInputThreads(468)", "Delete SimpleName: Math(469)", "Delete SimpleName: max(470)", "Delete SimpleName: numComputeThreads(471)", "Delete SimpleName: numOutputThreads(472)", "Delete MethodInvocation(473)", "Delete MethodInvocation(474)", "Delete VariableDeclarationFragment(475)", "Delete VariableDeclarationStatement(476)", "Delete PrimitiveType: long(477)", "Delete SimpleName: maxSticky(478)", "Delete SimpleName: MAX_STICKY_PARTITIONS(479)", "Delete SimpleName: get(480)", "Delete SimpleName: conf(481)", "Delete MethodInvocation(482)", "Delete VariableDeclarationFragment(483)", "Delete VariableDeclarationStatement(484)", "Delete SimpleName: maxSticky(485)", "Delete NumberLiteral: 0(486)", "Delete InfixExpression: >(487)", "Delete SimpleName: maxPartitionsInMem(488)", "Delete SimpleName: maxSticky(489)", "Delete InfixExpression: -(490)", "Delete SimpleName: maxThreads(491)", "Delete InfixExpression: >=(492)", "Delete InfixExpression: &&(493)", "Delete ThisExpression(494)", "Delete SimpleName: numOfStickyPartitions(495)", "Delete FieldAccess(496)", "Delete SimpleName: AtomicLong(497)", "Delete SimpleType: AtomicLong(498)", "Delete SimpleName: maxSticky(499)", "Delete ClassInstanceCreation(500)", "Delete Assignment: =(501)", "Delete ExpressionStatement(502)", "Delete Block(503)", "Delete SimpleName: maxPartitionsInMem(504)", "Delete SimpleName: maxSticky(505)", "Delete InfixExpression: -(506)", "Delete SimpleName: maxThreads(507)", "Delete InfixExpression: >=(508)", "Delete SimpleName: LOG(509)", "Delete SimpleName: isInfoEnabled(510)", "Delete MethodInvocation(511)", "Delete SimpleName: LOG(512)", "Delete SimpleName: info(513)", "Delete StringLiteral: \"giraph.maxSticky parameter unset or improperly set \"(514)", "Delete StringLiteral: \"resetting to automatically computed value.\"(515)", "Delete InfixExpression: +(516)", "Delete MethodInvocation(517)", "Delete ExpressionStatement(518)", "Delete Block(519)", "Delete IfStatement(520)", "Delete Block(521)", "Delete IfStatement(522)", "Delete SimpleName: maxPartitionsInMem(523)", "Delete NumberLiteral: 1(524)", "Delete InfixExpression: ==(525)", "Delete SimpleName: maxThreads(526)", "Delete SimpleName: maxPartitionsInMem(527)", "Delete InfixExpression: >=(528)", "Delete InfixExpression: ||(529)", "Delete ThisExpression(530)", "Delete SimpleName: numOfStickyPartitions(531)", "Delete FieldAccess(532)", "Delete SimpleName: AtomicLong(533)", "Delete SimpleType: AtomicLong(534)", "Delete NumberLiteral: 0(535)", "Delete ClassInstanceCreation(536)", "Delete Assignment: =(537)", "Delete ExpressionStatement(538)", "Delete Block(539)", "Delete ThisExpression(540)", "Delete SimpleName: numOfStickyPartitions(541)", "Delete FieldAccess(542)", "Delete SimpleName: AtomicLong(543)", "Delete SimpleType: AtomicLong(544)", "Delete SimpleName: maxPartitionsInMem(545)", "Delete SimpleName: maxThreads(546)", "Delete InfixExpression: -(547)", "Delete ClassInstanceCreation(548)", "Delete Assignment: =(549)", "Delete ExpressionStatement(550)", "Delete Block(551)", "Delete IfStatement(552)", "Delete Block(553)", "Delete IfStatement(554)", "Delete SimpleName: String(555)", "Delete SimpleType: String(556)", "Delete Dimension(557)", "Delete ArrayType: String[](558)", "Delete SimpleName: userPaths(559)", "Delete SimpleName: PARTITIONS_DIRECTORY(560)", "Delete SimpleName: getArray(561)", "Delete SimpleName: conf(562)", "Delete MethodInvocation(563)", "Delete VariableDeclarationFragment(564)", "Delete VariableDeclarationStatement(565)", "Delete SimpleName: basePaths(566)", "Delete SimpleName: String(567)", "Delete SimpleType: String(568)", "Delete Dimension(569)", "Delete ArrayType: String[](570)", "Delete QualifiedName: userPaths.length(571)", "Delete ArrayCreation(572)", "Delete Assignment: =(573)", "Delete ExpressionStatement(574)", "Delete PrimitiveType: int(575)", "Delete SimpleName: i(576)", "Delete NumberLiteral: 0(577)", "Delete VariableDeclarationFragment(578)", "Delete VariableDeclarationStatement(579)", "Delete SimpleName: String(580)", "Delete SimpleType: String(581)", "Delete SimpleName: path(582)", "Delete SingleVariableDeclaration(583)", "Delete SimpleName: userPaths(584)", "Delete SimpleName: basePaths(585)", "Delete SimpleName: i(586)", "Delete PostfixExpression: ++(587)", "Delete ArrayAccess(588)", "Delete SimpleName: path(589)", "Delete StringLiteral: \"/\"(590)", "Delete SimpleName: conf(591)", "Delete SimpleName: get(592)", "Delete StringLiteral: \"mapred.job.id\"(593)", "Delete StringLiteral: \"Unknown Job\"(594)", "Delete MethodInvocation(595)", "Delete InfixExpression: +(596)", "Delete Assignment: =(597)", "Delete ExpressionStatement(598)", "Delete Block(599)", "Delete EnhancedForStatement(600)", "Delete SimpleName: LOG(601)", "Delete SimpleName: isInfoEnabled(602)", "Delete MethodInvocation(603)", "Delete SimpleName: LOG(604)", "Delete SimpleName: info(605)", "Delete StringLiteral: \"DiskBackedPartitionStore with maxInMemoryPartitions=\"(606)", "Delete SimpleName: maxPartitionsInMem(607)", "Delete StringLiteral: \", isStaticGraph=\"(608)", "Delete SimpleName: conf(609)", "Delete SimpleName: isStaticGraph(610)", "Delete MethodInvocation(611)", "Delete InfixExpression: +(612)", "Delete MethodInvocation(613)", "Delete ExpressionStatement(614)", "Delete Block(615)", "Delete IfStatement(616)", "Delete Block(617)", "Delete MethodDeclaration(618)", "Delete SimpleName: Override(619)", "Delete MarkerAnnotation(620)", "Delete Modifier: public(621)", "Delete SimpleName: Iterable(622)", "Delete SimpleType: Iterable(623)", "Delete SimpleName: Integer(624)", "Delete SimpleType: Integer(625)", "Delete ParameterizedType: Iterable<Integer>(626)", "Delete SimpleName: getPartitionIds(627)", "Delete SimpleName: Iterables(628)", "Delete SimpleName: unmodifiableIterable(629)", "Delete SimpleName: partitions(630)", "Delete SimpleName: keySet(631)", "Delete MethodInvocation(632)", "Delete MethodInvocation(633)", "Delete ReturnStatement(634)", "Delete Block(635)", "Delete MethodDeclaration(636)", "Delete SimpleName: Override(637)", "Delete MarkerAnnotation(638)", "Delete Modifier: public(639)", "Delete PrimitiveType: boolean(640)", "Delete SimpleName: hasPartition(641)", "Delete Modifier: final(642)", "Delete SimpleName: Integer(643)", "Delete SimpleType: Integer(644)", "Delete SimpleName: id(645)", "Delete SingleVariableDeclaration(646)", "Delete SimpleName: partitions(647)", "Delete SimpleName: containsKey(648)", "Delete SimpleName: id(649)", "Delete MethodInvocation(650)", "Delete ReturnStatement(651)", "Delete Block(652)", "Delete MethodDeclaration(653)", "Delete SimpleName: Override(654)", "Delete MarkerAnnotation(655)", "Delete Modifier: public(656)", "Delete PrimitiveType: int(657)", "Delete SimpleName: getNumPartitions(658)", "Delete SimpleName: partitions(659)", "Delete SimpleName: size(660)", "Delete MethodInvocation(661)", "Delete ReturnStatement(662)", "Delete Block(663)", "Delete MethodDeclaration(664)", "Delete SimpleName: Override(665)", "Delete MarkerAnnotation(666)", "Delete Modifier: public(667)", "Delete PrimitiveType: long(668)", "Delete SimpleName: getPartitionVertexCount(669)", "Delete PrimitiveType: int(670)", "Delete SimpleName: partitionId(671)", "Delete SingleVariableDeclaration(672)", "Delete SimpleName: MetaPartition(673)", "Delete SimpleType: MetaPartition(674)", "Delete SimpleName: meta(675)", "Delete SimpleName: partitions(676)", "Delete SimpleName: get(677)", "Delete SimpleName: partitionId(678)", "Delete MethodInvocation(679)", "Delete VariableDeclarationFragment(680)", "Delete VariableDeclarationStatement(681)", "Delete SimpleName: meta(682)", "Delete SimpleName: getState(683)", "Delete MethodInvocation(684)", "Delete QualifiedName: State.ONDISK(685)", "Delete InfixExpression: ==(686)", "Delete SimpleName: meta(687)", "Delete SimpleName: getVertexCount(688)", "Delete MethodInvocation(689)", "Delete ReturnStatement(690)", "Delete Block(691)", "Delete SimpleName: meta(692)", "Delete SimpleName: getPartition(693)", "Delete MethodInvocation(694)", "Delete SimpleName: getVertexCount(695)", "Delete MethodInvocation(696)", "Delete ReturnStatement(697)", "Delete Block(698)", "Delete IfStatement(699)", "Delete Block(700)", "Delete MethodDeclaration(701)", "Delete SimpleName: Override(702)", "Delete MarkerAnnotation(703)", "Delete Modifier: public(704)", "Delete PrimitiveType: long(705)", "Delete SimpleName: getPartitionEdgeCount(706)", "Delete PrimitiveType: int(707)", "Delete SimpleName: partitionId(708)", "Delete SingleVariableDeclaration(709)", "Delete SimpleName: MetaPartition(710)", "Delete SimpleType: MetaPartition(711)", "Delete SimpleName: meta(712)", "Delete SimpleName: partitions(713)", "Delete SimpleName: get(714)", "Delete SimpleName: partitionId(715)", "Delete MethodInvocation(716)", "Delete VariableDeclarationFragment(717)", "Delete VariableDeclarationStatement(718)", "Delete SimpleName: meta(719)", "Delete SimpleName: getState(720)", "Delete MethodInvocation(721)", "Delete QualifiedName: State.ONDISK(722)", "Delete InfixExpression: ==(723)", "Delete SimpleName: meta(724)", "Delete SimpleName: getEdgeCount(725)", "Delete MethodInvocation(726)", "Delete ReturnStatement(727)", "Delete Block(728)", "Delete SimpleName: meta(729)", "Delete SimpleName: getPartition(730)", "Delete MethodInvocation(731)", "Delete SimpleName: getEdgeCount(732)", "Delete MethodInvocation(733)", "Delete ReturnStatement(734)", "Delete Block(735)", "Delete IfStatement(736)", "Delete Block(737)", "Delete MethodDeclaration(738)", "Delete SimpleName: Override(739)", "Delete MarkerAnnotation(740)", "Delete Modifier: public(741)", "Delete SimpleName: Partition(742)", "Delete SimpleType: Partition(743)", "Delete SimpleName: I(744)", "Delete SimpleType: I(745)", "Delete SimpleName: V(746)", "Delete SimpleType: V(747)", "Delete SimpleName: E(748)", "Delete SimpleType: E(749)", "Delete ParameterizedType: Partition<I,V,E>(750)", "Delete SimpleName: getOrCreatePartition(751)", "Delete SimpleName: Integer(752)", "Delete SimpleType: Integer(753)", "Delete SimpleName: id(754)", "Delete SingleVariableDeclaration(755)", "Delete SimpleName: MetaPartition(756)", "Delete SimpleType: MetaPartition(757)", "Delete SimpleName: meta(758)", "Delete SimpleName: MetaPartition(759)", "Delete SimpleType: MetaPartition(760)", "Delete SimpleName: id(761)", "Delete ClassInstanceCreation(762)", "Delete VariableDeclarationFragment(763)", "Delete VariableDeclarationStatement(764)", "Delete SimpleName: MetaPartition(765)", "Delete SimpleType: MetaPartition(766)", "Delete SimpleName: temp(767)", "Delete VariableDeclarationFragment(768)", "Delete VariableDeclarationStatement(769)", "Delete SimpleName: temp(770)", "Delete SimpleName: partitions(771)", "Delete SimpleName: putIfAbsent(772)", "Delete SimpleName: id(773)", "Delete SimpleName: meta(774)", "Delete MethodInvocation(775)", "Delete Assignment: =(776)", "Delete ExpressionStatement(777)", "Delete SimpleName: temp(778)", "Delete NullLiteral(779)", "Delete InfixExpression: !=(780)", "Delete SimpleName: meta(781)", "Delete SimpleName: temp(782)", "Delete Assignment: =(783)", "Delete ExpressionStatement(784)", "Delete Block(785)", "Delete IfStatement(786)", "Delete SimpleName: meta(787)", "Delete SimpleName: temp(788)", "Delete NullLiteral(789)", "Delete InfixExpression: ==(790)", "Delete SimpleName: numOfStickyPartitions(791)", "Delete SimpleName: getAndDecrement(792)", "Delete MethodInvocation(793)", "Delete NumberLiteral: 0(794)", "Delete InfixExpression: >(795)", "Delete InfixExpression: &&(796)", "Delete SimpleName: meta(797)", "Delete SimpleName: setSticky(798)", "Delete MethodInvocation(799)", "Delete ExpressionStatement(800)", "Delete Block(801)", "Delete IfStatement(802)", "Delete SimpleName: getPartition(803)", "Delete SimpleName: meta(804)", "Delete MethodInvocation(805)", "Delete ExpressionStatement(806)", "Delete SimpleName: meta(807)", "Delete SimpleName: getPartition(808)", "Delete MethodInvocation(809)", "Delete NullLiteral(810)", "Delete InfixExpression: ==(811)", "Delete SimpleName: Partition(812)", "Delete SimpleType: Partition(813)", "Delete SimpleName: I(814)", "Delete SimpleType: I(815)", "Delete SimpleName: V(816)", "Delete SimpleType: V(817)", "Delete SimpleName: E(818)", "Delete SimpleType: E(819)", "Delete ParameterizedType: Partition<I,V,E>(820)", "Delete SimpleName: partition(821)", "Delete SimpleName: conf(822)", "Delete SimpleName: createPartition(823)", "Delete SimpleName: id(824)", "Delete SimpleName: context(825)", "Delete MethodInvocation(826)", "Delete VariableDeclarationFragment(827)", "Delete VariableDeclarationStatement(828)", "Delete SimpleName: meta(829)", "Delete SimpleName: setPartition(830)", "Delete SimpleName: partition(831)", "Delete MethodInvocation(832)", "Delete ExpressionStatement(833)", "Delete SimpleName: addPartition(834)", "Delete SimpleName: meta(835)", "Delete SimpleName: partition(836)", "Delete MethodInvocation(837)", "Delete ExpressionStatement(838)", "Delete SimpleName: meta(839)", "Delete SimpleName: getState(840)", "Delete MethodInvocation(841)", "Delete QualifiedName: State.INIT(842)", "Delete InfixExpression: ==(843)", "Delete SimpleName: LOG(844)", "Delete SimpleName: warn(845)", "Delete StringLiteral: \"Partition was still INIT after ADD (not possibile).\"(846)", "Delete MethodInvocation(847)", "Delete ExpressionStatement(848)", "Delete Block(849)", "Delete IfStatement(850)", "Delete SimpleName: getPartition(851)", "Delete SimpleName: meta(852)", "Delete MethodInvocation(853)", "Delete ExpressionStatement(854)", "Delete SimpleName: meta(855)", "Delete SimpleName: getState(856)", "Delete MethodInvocation(857)", "Delete QualifiedName: State.INIT(858)", "Delete InfixExpression: ==(859)", "Delete SimpleName: LOG(860)", "Delete SimpleName: warn(861)", "Delete StringLiteral: \"Partition was still INIT after GET (not possibile).\"(862)", "Delete MethodInvocation(863)", "Delete ExpressionStatement(864)", "Delete Block(865)", "Delete IfStatement(866)", "Delete Block(867)", "Delete IfStatement(868)", "Delete SimpleName: meta(869)", "Delete SimpleName: getState(870)", "Delete MethodInvocation(871)", "Delete QualifiedName: State.INIT(872)", "Delete InfixExpression: ==(873)", "Delete SimpleName: String(874)", "Delete SimpleType: String(875)", "Delete SimpleName: msg(876)", "Delete StringLiteral: \"Getting a partition which is in INIT state is \"(877)", "Delete StringLiteral: \"not allowed. \"(878)", "Delete SimpleName: meta(879)", "Delete InfixExpression: +(880)", "Delete VariableDeclarationFragment(881)", "Delete VariableDeclarationStatement(882)", "Delete SimpleName: LOG(883)", "Delete SimpleName: error(884)", "Delete SimpleName: msg(885)", "Delete MethodInvocation(886)", "Delete ExpressionStatement(887)", "Delete SimpleName: IllegalStateException(888)", "Delete SimpleType: IllegalStateException(889)", "Delete SimpleName: msg(890)", "Delete ClassInstanceCreation(891)", "Delete ThrowStatement(892)", "Delete Block(893)", "Delete IfStatement(894)", "Delete SimpleName: meta(895)", "Delete SimpleName: getPartition(896)", "Delete MethodInvocation(897)", "Delete ReturnStatement(898)", "Delete Block(899)", "Delete SynchronizedStatement(900)", "Delete Block(901)", "Delete MethodDeclaration(902)", "Delete SimpleName: Override(903)", "Delete MarkerAnnotation(904)", "Delete Modifier: public(905)", "Delete PrimitiveType: void(906)", "Delete SimpleName: putPartition(907)", "Delete SimpleName: Partition(908)", "Delete SimpleType: Partition(909)", "Delete SimpleName: I(910)", "Delete SimpleType: I(911)", "Delete SimpleName: V(912)", "Delete SimpleType: V(913)", "Delete SimpleName: E(914)", "Delete SimpleType: E(915)", "Delete ParameterizedType: Partition<I,V,E>(916)", "Delete SimpleName: partition(917)", "Delete SingleVariableDeclaration(918)", "Delete SimpleName: Integer(919)", "Delete SimpleType: Integer(920)", "Delete SimpleName: id(921)", "Delete SimpleName: partition(922)", "Delete SimpleName: getId(923)", "Delete MethodInvocation(924)", "Delete VariableDeclarationFragment(925)", "Delete VariableDeclarationStatement(926)", "Delete SimpleName: MetaPartition(927)", "Delete SimpleType: MetaPartition(928)", "Delete SimpleName: meta(929)", "Delete SimpleName: partitions(930)", "Delete SimpleName: get(931)", "Delete SimpleName: id(932)", "Delete MethodInvocation(933)", "Delete VariableDeclarationFragment(934)", "Delete VariableDeclarationStatement(935)", "Delete SimpleName: putPartition(936)", "Delete SimpleName: meta(937)", "Delete MethodInvocation(938)", "Delete ExpressionStatement(939)", "Delete Block(940)", "Delete MethodDeclaration(941)", "Delete SimpleName: Override(942)", "Delete MarkerAnnotation(943)", "Delete Modifier: public(944)", "Delete PrimitiveType: void(945)", "Delete SimpleName: deletePartition(946)", "Delete SimpleName: Integer(947)", "Delete SimpleType: Integer(948)", "Delete SimpleName: id(949)", "Delete SingleVariableDeclaration(950)", "Delete SimpleName: hasPartition(951)", "Delete SimpleName: id(952)", "Delete MethodInvocation(953)", "Delete SimpleName: MetaPartition(954)", "Delete SimpleType: MetaPartition(955)", "Delete SimpleName: meta(956)", "Delete SimpleName: partitions(957)", "Delete SimpleName: get(958)", "Delete SimpleName: id(959)", "Delete MethodInvocation(960)", "Delete VariableDeclarationFragment(961)", "Delete VariableDeclarationStatement(962)", "Delete SimpleName: deletePartition(963)", "Delete SimpleName: meta(964)", "Delete MethodInvocation(965)", "Delete ExpressionStatement(966)", "Delete Block(967)", "Delete IfStatement(968)", "Delete Block(969)", "Delete MethodDeclaration(970)", "Delete SimpleName: Override(971)", "Delete MarkerAnnotation(972)", "Delete Modifier: public(973)", "Delete SimpleName: Partition(974)", "Delete SimpleType: Partition(975)", "Delete SimpleName: I(976)", "Delete SimpleType: I(977)", "Delete SimpleName: V(978)", "Delete SimpleType: V(979)", "Delete SimpleName: E(980)", "Delete SimpleType: E(981)", "Delete ParameterizedType: Partition<I,V,E>(982)", "Delete SimpleName: removePartition(983)", "Delete SimpleName: Integer(984)", "Delete SimpleType: Integer(985)", "Delete SimpleName: id(986)", "Delete SingleVariableDeclaration(987)", "Delete SimpleName: hasPartition(988)", "Delete SimpleName: id(989)", "Delete MethodInvocation(990)", "Delete SimpleName: MetaPartition(991)", "Delete SimpleType: MetaPartition(992)", "Delete SimpleName: meta(993)", "Delete VariableDeclarationFragment(994)", "Delete VariableDeclarationStatement(995)", "Delete SimpleName: meta(996)", "Delete SimpleName: partitions(997)", "Delete SimpleName: get(998)", "Delete SimpleName: id(999)", "Delete MethodInvocation(1000)", "Delete Assignment: =(1001)", "Delete ExpressionStatement(1002)", "Delete SimpleName: meta(1003)", "Delete SimpleName: getPartition(1004)", "Delete SimpleName: meta(1005)", "Delete MethodInvocation(1006)", "Delete ExpressionStatement(1007)", "Delete SimpleName: putPartition(1008)", "Delete SimpleName: meta(1009)", "Delete MethodInvocation(1010)", "Delete ExpressionStatement(1011)", "Delete SimpleName: deletePartition(1012)", "Delete SimpleName: id(1013)", "Delete MethodInvocation(1014)", "Delete ExpressionStatement(1015)", "Delete Block(1016)", "Delete SynchronizedStatement(1017)", "Delete SimpleName: meta(1018)", "Delete SimpleName: getPartition(1019)", "Delete MethodInvocation(1020)", "Delete ReturnStatement(1021)", "Delete Block(1022)", "Delete IfStatement(1023)", "Delete NullLiteral(1024)", "Delete ReturnStatement(1025)", "Delete Block(1026)", "Delete MethodDeclaration(1027)", "Delete SimpleName: Override(1028)", "Delete MarkerAnnotation(1029)", "Delete Modifier: public(1030)", "Delete PrimitiveType: void(1031)", "Delete SimpleName: addPartition(1032)", "Delete SimpleName: Partition(1033)", "Delete SimpleType: Partition(1034)", "Delete SimpleName: I(1035)", "Delete SimpleType: I(1036)", "Delete SimpleName: V(1037)", "Delete SimpleType: V(1038)", "Delete SimpleName: E(1039)", "Delete SimpleType: E(1040)", "Delete ParameterizedType: Partition<I,V,E>(1041)", "Delete SimpleName: partition(1042)", "Delete SingleVariableDeclaration(1043)", "Delete SimpleName: Integer(1044)", "Delete SimpleType: Integer(1045)", "Delete SimpleName: id(1046)", "Delete SimpleName: partition(1047)", "Delete SimpleName: getId(1048)", "Delete MethodInvocation(1049)", "Delete VariableDeclarationFragment(1050)", "Delete VariableDeclarationStatement(1051)", "Delete SimpleName: MetaPartition(1052)", "Delete SimpleType: MetaPartition(1053)", "Delete SimpleName: meta(1054)", "Delete SimpleName: MetaPartition(1055)", "Delete SimpleType: MetaPartition(1056)", "Delete SimpleName: id(1057)", "Delete ClassInstanceCreation(1058)", "Delete VariableDeclarationFragment(1059)", "Delete VariableDeclarationStatement(1060)", "Delete SimpleName: MetaPartition(1061)", "Delete SimpleType: MetaPartition(1062)", "Delete SimpleName: temp(1063)", "Delete VariableDeclarationFragment(1064)", "Delete VariableDeclarationStatement(1065)", "Delete SimpleName: meta(1066)", "Delete SimpleName: setPartition(1067)", "Delete SimpleName: partition(1068)", "Delete MethodInvocation(1069)", "Delete ExpressionStatement(1070)", "Delete SimpleName: temp(1071)", "Delete SimpleName: partitions(1072)", "Delete SimpleName: putIfAbsent(1073)", "Delete SimpleName: id(1074)", "Delete SimpleName: meta(1075)", "Delete MethodInvocation(1076)", "Delete Assignment: =(1077)", "Delete ExpressionStatement(1078)", "Delete SimpleName: temp(1079)", "Delete NullLiteral(1080)", "Delete InfixExpression: !=(1081)", "Delete SimpleName: meta(1082)", "Delete SimpleName: temp(1083)", "Delete Assignment: =(1084)", "Delete ExpressionStatement(1085)", "Delete Block(1086)", "Delete IfStatement(1087)", "Delete SimpleName: meta(1088)", "Delete SimpleName: temp(1089)", "Delete NullLiteral(1090)", "Delete InfixExpression: ==(1091)", "Delete SimpleName: numOfStickyPartitions(1092)", "Delete SimpleName: getAndDecrement(1093)", "Delete MethodInvocation(1094)", "Delete NumberLiteral: 0(1095)", "Delete InfixExpression: >(1096)", "Delete InfixExpression: &&(1097)", "Delete SimpleName: meta(1098)", "Delete SimpleName: setSticky(1099)", "Delete MethodInvocation(1100)", "Delete ExpressionStatement(1101)", "Delete Block(1102)", "Delete IfStatement(1103)", "Delete SimpleName: addPartition(1104)", "Delete SimpleName: meta(1105)", "Delete SimpleName: partition(1106)", "Delete MethodInvocation(1107)", "Delete ExpressionStatement(1108)", "Delete Block(1109)", "Delete SynchronizedStatement(1110)", "Delete Block(1111)", "Delete MethodDeclaration(1112)", "Delete SimpleName: Override(1113)", "Delete MarkerAnnotation(1114)", "Delete Modifier: public(1115)", "Delete PrimitiveType: void(1116)", "Delete SimpleName: shutdown(1117)", "Delete SimpleName: MetaPartition(1118)", "Delete SimpleType: MetaPartition(1119)", "Delete SimpleName: e(1120)", "Delete SingleVariableDeclaration(1121)", "Delete SimpleName: partitions(1122)", "Delete SimpleName: values(1123)", "Delete MethodInvocation(1124)", "Delete SimpleName: e(1125)", "Delete SimpleName: getState(1126)", "Delete MethodInvocation(1127)", "Delete QualifiedName: State.ONDISK(1128)", "Delete InfixExpression: ==(1129)", "Delete SimpleName: deletePartitionFiles(1130)", "Delete SimpleName: e(1131)", "Delete SimpleName: getId(1132)", "Delete MethodInvocation(1133)", "Delete MethodInvocation(1134)", "Delete ExpressionStatement(1135)", "Delete Block(1136)", "Delete IfStatement(1137)", "Delete Block(1138)", "Delete EnhancedForStatement(1139)", "Delete Block(1140)", "Delete MethodDeclaration(1141)", "Delete SimpleName: Override(1142)", "Delete MarkerAnnotation(1143)", "Delete Modifier: public(1144)", "Delete SimpleName: String(1145)", "Delete SimpleType: String(1146)", "Delete SimpleName: toString(1147)", "Delete SimpleName: StringBuilder(1148)", "Delete SimpleType: StringBuilder(1149)", "Delete SimpleName: sb(1150)", "Delete SimpleName: StringBuilder(1151)", "Delete SimpleType: StringBuilder(1152)", "Delete ClassInstanceCreation(1153)", "Delete VariableDeclarationFragment(1154)", "Delete VariableDeclarationStatement(1155)", "Delete SimpleName: MetaPartition(1156)", "Delete SimpleType: MetaPartition(1157)", "Delete SimpleName: e(1158)", "Delete SingleVariableDeclaration(1159)", "Delete SimpleName: partitions(1160)", "Delete SimpleName: values(1161)", "Delete MethodInvocation(1162)", "Delete SimpleName: sb(1163)", "Delete SimpleName: append(1164)", "Delete SimpleName: e(1165)", "Delete SimpleName: toString(1166)", "Delete MethodInvocation(1167)", "Delete StringLiteral: \"\\n\"(1168)", "Delete InfixExpression: +(1169)", "Delete MethodInvocation(1170)", "Delete ExpressionStatement(1171)", "Delete Block(1172)", "Delete EnhancedForStatement(1173)", "Delete SimpleName: sb(1174)", "Delete SimpleName: toString(1175)", "Delete MethodInvocation(1176)", "Delete ReturnStatement(1177)", "Delete Block(1178)", "Delete MethodDeclaration(1179)", "Delete TextElement: Writes vertex data (Id, value and halted state) to stream.(1180)", "Delete TagElement(1181)", "Delete SimpleName: output(1182)", "Delete TextElement:  The output stream(1183)", "Delete TagElement: @param(1184)", "Delete SimpleName: vertex(1185)", "Delete TextElement:  The vertex to serialize(1186)", "Delete TagElement: @param(1187)", "Delete SimpleName: IOException(1188)", "Delete TagElement: @throws(1189)", "Delete Javadoc(1190)", "Delete Modifier: private(1191)", "Delete PrimitiveType: void(1192)", "Delete SimpleName: writeVertexData(1193)", "Delete SimpleName: DataOutput(1194)", "Delete SimpleType: DataOutput(1195)", "Delete SimpleName: output(1196)", "Delete SingleVariableDeclaration(1197)", "Delete SimpleName: Vertex(1198)", "Delete SimpleType: Vertex(1199)", "Delete SimpleName: I(1200)", "Delete SimpleType: I(1201)", "Delete SimpleName: V(1202)", "Delete SimpleType: V(1203)", "Delete SimpleName: E(1204)", "Delete SimpleType: E(1205)", "Delete ParameterizedType: Vertex<I,V,E>(1206)", "Delete SimpleName: vertex(1207)", "Delete SingleVariableDeclaration(1208)", "Delete SimpleName: IOException(1209)", "Delete SimpleType: IOException(1210)", "Delete SimpleName: vertex(1211)", "Delete SimpleName: getId(1212)", "Delete MethodInvocation(1213)", "Delete SimpleName: write(1214)", "Delete SimpleName: output(1215)", "Delete MethodInvocation(1216)", "Delete ExpressionStatement(1217)", "Delete SimpleName: vertex(1218)", "Delete SimpleName: getValue(1219)", "Delete MethodInvocation(1220)", "Delete SimpleName: write(1221)", "Delete SimpleName: output(1222)", "Delete MethodInvocation(1223)", "Delete ExpressionStatement(1224)", "Delete SimpleName: output(1225)", "Delete SimpleName: writeBoolean(1226)", "Delete SimpleName: vertex(1227)", "Delete SimpleName: isHalted(1228)", "Delete MethodInvocation(1229)", "Delete MethodInvocation(1230)", "Delete ExpressionStatement(1231)", "Delete Block(1232)", "Delete MethodDeclaration(1233)", "Delete TextElement: Writes vertex edges (Id, edges) to stream.(1234)", "Delete TagElement(1235)", "Delete SimpleName: output(1236)", "Delete TextElement:  The output stream(1237)", "Delete TagElement: @param(1238)", "Delete SimpleName: vertex(1239)", "Delete TextElement:  The vertex to serialize(1240)", "Delete TagElement: @param(1241)", "Delete SimpleName: IOException(1242)", "Delete TagElement: @throws(1243)", "Delete Javadoc(1244)", "Delete SimpleName: SuppressWarnings(1245)", "Delete StringLiteral: \"unchecked\"(1246)", "Delete SingleMemberAnnotation(1247)", "Delete Modifier: private(1248)", "Delete PrimitiveType: void(1249)", "Delete SimpleName: writeOutEdges(1250)", "Delete SimpleName: DataOutput(1251)", "Delete SimpleType: DataOutput(1252)", "Delete SimpleName: output(1253)", "Delete SingleVariableDeclaration(1254)", "Delete SimpleName: Vertex(1255)", "Delete SimpleType: Vertex(1256)", "Delete SimpleName: I(1257)", "Delete SimpleType: I(1258)", "Delete SimpleName: V(1259)", "Delete SimpleType: V(1260)", "Delete SimpleName: E(1261)", "Delete SimpleType: E(1262)", "Delete ParameterizedType: Vertex<I,V,E>(1263)", "Delete SimpleName: vertex(1264)", "Delete SingleVariableDeclaration(1265)", "Delete SimpleName: IOException(1266)", "Delete SimpleType: IOException(1267)", "Delete SimpleName: vertex(1268)", "Delete SimpleName: getId(1269)", "Delete MethodInvocation(1270)", "Delete SimpleName: write(1271)", "Delete SimpleName: output(1272)", "Delete MethodInvocation(1273)", "Delete ExpressionStatement(1274)", "Delete SimpleName: OutEdges(1275)", "Delete SimpleType: OutEdges(1276)", "Delete SimpleName: I(1277)", "Delete SimpleType: I(1278)", "Delete SimpleName: E(1279)", "Delete SimpleType: E(1280)", "Delete ParameterizedType: OutEdges<I,E>(1281)", "Delete SimpleName: edges(1282)", "Delete SimpleName: OutEdges(1283)", "Delete SimpleType: OutEdges(1284)", "Delete SimpleName: I(1285)", "Delete SimpleType: I(1286)", "Delete SimpleName: E(1287)", "Delete SimpleType: E(1288)", "Delete ParameterizedType: OutEdges<I,E>(1289)", "Delete SimpleName: vertex(1290)", "Delete SimpleName: getEdges(1291)", "Delete MethodInvocation(1292)", "Delete CastExpression(1293)", "Delete VariableDeclarationFragment(1294)", "Delete VariableDeclarationStatement(1295)", "Delete SimpleName: edges(1296)", "Delete SimpleName: write(1297)", "Delete SimpleName: output(1298)", "Delete MethodInvocation(1299)", "Delete ExpressionStatement(1300)", "Delete Block(1301)", "Delete MethodDeclaration(1302)", "Delete TextElement: Read vertex data from an input and initialize the vertex.(1303)", "Delete TagElement(1304)", "Delete SimpleName: in(1305)", "Delete TextElement:  The input stream(1306)", "Delete TagElement: @param(1307)", "Delete SimpleName: vertex(1308)", "Delete TextElement:  The vertex to initialize(1309)", "Delete TagElement: @param(1310)", "Delete SimpleName: IOException(1311)", "Delete TagElement: @throws(1312)", "Delete Javadoc(1313)", "Delete Modifier: private(1314)", "Delete PrimitiveType: void(1315)", "Delete SimpleName: readVertexData(1316)", "Delete SimpleName: DataInput(1317)", "Delete SimpleType: DataInput(1318)", "Delete SimpleName: in(1319)", "Delete SingleVariableDeclaration(1320)", "Delete SimpleName: Vertex(1321)", "Delete SimpleType: Vertex(1322)", "Delete SimpleName: I(1323)", "Delete SimpleType: I(1324)", "Delete SimpleName: V(1325)", "Delete SimpleType: V(1326)", "Delete SimpleName: E(1327)", "Delete SimpleType: E(1328)", "Delete ParameterizedType: Vertex<I,V,E>(1329)", "Delete SimpleName: vertex(1330)", "Delete SingleVariableDeclaration(1331)", "Delete SimpleName: IOException(1332)", "Delete SimpleType: IOException(1333)", "Delete SimpleName: I(1334)", "Delete SimpleType: I(1335)", "Delete SimpleName: id(1336)", "Delete SimpleName: conf(1337)", "Delete SimpleName: createVertexId(1338)", "Delete MethodInvocation(1339)", "Delete VariableDeclarationFragment(1340)", "Delete VariableDeclarationStatement(1341)", "Delete SimpleName: id(1342)", "Delete SimpleName: readFields(1343)", "Delete SimpleName: in(1344)", "Delete MethodInvocation(1345)", "Delete ExpressionStatement(1346)", "Delete SimpleName: V(1347)", "Delete SimpleType: V(1348)", "Delete SimpleName: value(1349)", "Delete SimpleName: conf(1350)", "Delete SimpleName: createVertexValue(1351)", "Delete MethodInvocation(1352)", "Delete VariableDeclarationFragment(1353)", "Delete VariableDeclarationStatement(1354)", "Delete SimpleName: value(1355)", "Delete SimpleName: readFields(1356)", "Delete SimpleName: in(1357)", "Delete MethodInvocation(1358)", "Delete ExpressionStatement(1359)", "Delete SimpleName: OutEdges(1360)", "Delete SimpleType: OutEdges(1361)", "Delete SimpleName: I(1362)", "Delete SimpleType: I(1363)", "Delete SimpleName: E(1364)", "Delete SimpleType: E(1365)", "Delete ParameterizedType: OutEdges<I,E>(1366)", "Delete SimpleName: edges(1367)", "Delete SimpleName: conf(1368)", "Delete SimpleName: createAndInitializeOutEdges(1369)", "Delete NumberLiteral: 0(1370)", "Delete MethodInvocation(1371)", "Delete VariableDeclarationFragment(1372)", "Delete VariableDeclarationStatement(1373)", "Delete SimpleName: vertex(1374)", "Delete SimpleName: initialize(1375)", "Delete SimpleName: id(1376)", "Delete SimpleName: value(1377)", "Delete SimpleName: edges(1378)", "Delete MethodInvocation(1379)", "Delete ExpressionStatement(1380)", "Delete SimpleName: in(1381)", "Delete SimpleName: readBoolean(1382)", "Delete MethodInvocation(1383)", "Delete SimpleName: vertex(1384)", "Delete SimpleName: voteToHalt(1385)", "Delete MethodInvocation(1386)", "Delete ExpressionStatement(1387)", "Delete Block(1388)", "Delete SimpleName: vertex(1389)", "Delete SimpleName: wakeUp(1390)", "Delete MethodInvocation(1391)", "Delete ExpressionStatement(1392)", "Delete Block(1393)", "Delete IfStatement(1394)", "Delete Block(1395)", "Delete MethodDeclaration(1396)", "Delete TextElement: Read vertex edges from an input and set them to the vertex.(1397)", "Delete TagElement(1398)", "Delete SimpleName: in(1399)", "Delete TextElement:  The input stream(1400)", "Delete TagElement: @param(1401)", "Delete SimpleName: partition(1402)", "Delete TextElement:  The partition owning the vertex(1403)", "Delete TagElement: @param(1404)", "Delete SimpleName: IOException(1405)", "Delete TagElement: @throws(1406)", "Delete Javadoc(1407)", "Delete SimpleName: SuppressWarnings(1408)", "Delete StringLiteral: \"unchecked\"(1409)", "Delete SingleMemberAnnotation(1410)", "Delete Modifier: private(1411)", "Delete PrimitiveType: void(1412)", "Delete SimpleName: readOutEdges(1413)", "Delete SimpleName: DataInput(1414)", "Delete SimpleType: DataInput(1415)", "Delete SimpleName: in(1416)", "Delete SingleVariableDeclaration(1417)", "Delete SimpleName: Partition(1418)", "Delete SimpleType: Partition(1419)", "Delete SimpleName: I(1420)", "Delete SimpleType: I(1421)", "Delete SimpleName: V(1422)", "Delete SimpleType: V(1423)", "Delete SimpleName: E(1424)", "Delete SimpleType: E(1425)", "Delete ParameterizedType: Partition<I,V,E>(1426)", "Delete SimpleName: partition(1427)", "Delete SingleVariableDeclaration(1428)", "Delete SimpleName: IOException(1429)", "Delete SimpleType: IOException(1430)", "Delete SimpleName: I(1431)", "Delete SimpleType: I(1432)", "Delete SimpleName: id(1433)", "Delete SimpleName: conf(1434)", "Delete SimpleName: createVertexId(1435)", "Delete MethodInvocation(1436)", "Delete VariableDeclarationFragment(1437)", "Delete VariableDeclarationStatement(1438)", "Delete SimpleName: id(1439)", "Delete SimpleName: readFields(1440)", "Delete SimpleName: in(1441)", "Delete MethodInvocation(1442)", "Delete ExpressionStatement(1443)", "Delete SimpleName: Vertex(1444)", "Delete SimpleType: Vertex(1445)", "Delete SimpleName: I(1446)", "Delete SimpleType: I(1447)", "Delete SimpleName: V(1448)", "Delete SimpleType: V(1449)", "Delete SimpleName: E(1450)", "Delete SimpleType: E(1451)", "Delete ParameterizedType: Vertex<I,V,E>(1452)", "Delete SimpleName: v(1453)", "Delete SimpleName: partition(1454)", "Delete SimpleName: getVertex(1455)", "Delete SimpleName: id(1456)", "Delete MethodInvocation(1457)", "Delete VariableDeclarationFragment(1458)", "Delete VariableDeclarationStatement(1459)", "Delete SimpleName: OutEdges(1460)", "Delete SimpleType: OutEdges(1461)", "Delete SimpleName: I(1462)", "Delete SimpleType: I(1463)", "Delete SimpleName: E(1464)", "Delete SimpleType: E(1465)", "Delete ParameterizedType: OutEdges<I,E>(1466)", "Delete SimpleName: edges(1467)", "Delete SimpleName: OutEdges(1468)", "Delete SimpleType: OutEdges(1469)", "Delete SimpleName: I(1470)", "Delete SimpleType: I(1471)", "Delete SimpleName: E(1472)", "Delete SimpleType: E(1473)", "Delete ParameterizedType: OutEdges<I,E>(1474)", "Delete SimpleName: v(1475)", "Delete SimpleName: getEdges(1476)", "Delete MethodInvocation(1477)", "Delete CastExpression(1478)", "Delete VariableDeclarationFragment(1479)", "Delete VariableDeclarationStatement(1480)", "Delete SimpleName: edges(1481)", "Delete SimpleName: readFields(1482)", "Delete SimpleName: in(1483)", "Delete MethodInvocation(1484)", "Delete ExpressionStatement(1485)", "Delete SimpleName: partition(1486)", "Delete SimpleName: saveVertex(1487)", "Delete SimpleName: v(1488)", "Delete MethodInvocation(1489)", "Delete ExpressionStatement(1490)", "Delete Block(1491)", "Delete MethodDeclaration(1492)", "Delete TextElement: Load a partition from disk. It deletes the files after the load,(1493)", "Delete TextElement: except for the edges, if the graph is static.(1494)", "Delete TagElement(1495)", "Delete SimpleName: id(1496)", "Delete TextElement:  The id of the partition to load(1497)", "Delete TagElement: @param(1498)", "Delete SimpleName: numVertices(1499)", "Delete TextElement:  The number of vertices contained on disk(1500)", "Delete TagElement: @param(1501)", "Delete TextElement:  The partition(1502)", "Delete TagElement: @return(1503)", "Delete SimpleName: IOException(1504)", "Delete TagElement: @throws(1505)", "Delete Javadoc(1506)", "Delete Modifier: private(1507)", "Delete SimpleName: Partition(1508)", "Delete SimpleType: Partition(1509)", "Delete SimpleName: I(1510)", "Delete SimpleType: I(1511)", "Delete SimpleName: V(1512)", "Delete SimpleType: V(1513)", "Delete SimpleName: E(1514)", "Delete SimpleType: E(1515)", "Delete ParameterizedType: Partition<I,V,E>(1516)", "Delete SimpleName: loadPartition(1517)", "Delete PrimitiveType: int(1518)", "Delete SimpleName: id(1519)", "Delete SingleVariableDeclaration(1520)", "Delete PrimitiveType: long(1521)", "Delete SimpleName: numVertices(1522)", "Delete SingleVariableDeclaration(1523)", "Delete SimpleName: IOException(1524)", "Delete SimpleType: IOException(1525)", "Delete SimpleName: Partition(1526)", "Delete SimpleType: Partition(1527)", "Delete SimpleName: I(1528)", "Delete SimpleType: I(1529)", "Delete SimpleName: V(1530)", "Delete SimpleType: V(1531)", "Delete SimpleName: E(1532)", "Delete SimpleType: E(1533)", "Delete ParameterizedType: Partition<I,V,E>(1534)", "Delete SimpleName: partition(1535)", "Delete SimpleName: conf(1536)", "Delete SimpleName: createPartition(1537)", "Delete SimpleName: id(1538)", "Delete SimpleName: context(1539)", "Delete MethodInvocation(1540)", "Delete VariableDeclarationFragment(1541)", "Delete VariableDeclarationStatement(1542)", "Delete SimpleName: File(1543)", "Delete SimpleType: File(1544)", "Delete SimpleName: file(1545)", "Delete SimpleName: File(1546)", "Delete SimpleType: File(1547)", "Delete SimpleName: getVerticesPath(1548)", "Delete SimpleName: id(1549)", "Delete MethodInvocation(1550)", "Delete ClassInstanceCreation(1551)", "Delete VariableDeclarationFragment(1552)", "Delete VariableDeclarationStatement(1553)", "Delete SimpleName: LOG(1554)", "Delete SimpleName: isDebugEnabled(1555)", "Delete MethodInvocation(1556)", "Delete SimpleName: LOG(1557)", "Delete SimpleName: debug(1558)", "Delete StringLiteral: \"loadPartition: loading partition vertices \"(1559)", "Delete SimpleName: partition(1560)", "Delete SimpleName: getId(1561)", "Delete MethodInvocation(1562)", "Delete StringLiteral: \" from \"(1563)", "Delete SimpleName: file(1564)", "Delete SimpleName: getAbsolutePath(1565)", "Delete MethodInvocation(1566)", "Delete InfixExpression: +(1567)", "Delete MethodInvocation(1568)", "Delete ExpressionStatement(1569)", "Delete Block(1570)", "Delete IfStatement(1571)", "Delete SimpleName: FileInputStream(1572)", "Delete SimpleType: FileInputStream(1573)", "Delete SimpleName: filein(1574)", "Delete SimpleName: FileInputStream(1575)", "Delete SimpleType: FileInputStream(1576)", "Delete SimpleName: file(1577)", "Delete ClassInstanceCreation(1578)", "Delete VariableDeclarationFragment(1579)", "Delete VariableDeclarationStatement(1580)", "Delete SimpleName: BufferedInputStream(1581)", "Delete SimpleType: BufferedInputStream(1582)", "Delete SimpleName: bufferin(1583)", "Delete SimpleName: BufferedInputStream(1584)", "Delete SimpleType: BufferedInputStream(1585)", "Delete SimpleName: filein(1586)", "Delete ClassInstanceCreation(1587)", "Delete VariableDeclarationFragment(1588)", "Delete VariableDeclarationStatement(1589)", "Delete SimpleName: DataInputStream(1590)", "Delete SimpleType: DataInputStream(1591)", "Delete SimpleName: inputStream(1592)", "Delete SimpleName: DataInputStream(1593)", "Delete SimpleType: DataInputStream(1594)", "Delete SimpleName: bufferin(1595)", "Delete ClassInstanceCreation(1596)", "Delete VariableDeclarationFragment(1597)", "Delete VariableDeclarationStatement(1598)", "Delete PrimitiveType: int(1599)", "Delete SimpleName: i(1600)", "Delete NumberLiteral: 0(1601)", "Delete VariableDeclarationFragment(1602)", "Delete VariableDeclarationExpression(1603)", "Delete SimpleName: i(1604)", "Delete SimpleName: numVertices(1605)", "Delete InfixExpression: <(1606)", "Delete SimpleName: i(1607)", "Delete PrefixExpression: ++(1608)", "Delete SimpleName: Vertex(1609)", "Delete SimpleType: Vertex(1610)", "Delete SimpleName: I(1611)", "Delete SimpleType: I(1612)", "Delete SimpleName: V(1613)", "Delete SimpleType: V(1614)", "Delete SimpleName: E(1615)", "Delete SimpleType: E(1616)", "Delete ParameterizedType: Vertex<I,V,E>(1617)", "Delete SimpleName: vertex(1618)", "Delete SimpleName: conf(1619)", "Delete SimpleName: createVertex(1620)", "Delete MethodInvocation(1621)", "Delete VariableDeclarationFragment(1622)", "Delete VariableDeclarationStatement(1623)", "Delete SimpleName: readVertexData(1624)", "Delete SimpleName: inputStream(1625)", "Delete SimpleName: vertex(1626)", "Delete MethodInvocation(1627)", "Delete ExpressionStatement(1628)", "Delete SimpleName: partition(1629)", "Delete SimpleName: putVertex(1630)", "Delete SimpleName: vertex(1631)", "Delete MethodInvocation(1632)", "Delete ExpressionStatement(1633)", "Delete Block(1634)", "Delete ForStatement(1635)", "Delete SimpleName: inputStream(1636)", "Delete SimpleName: close(1637)", "Delete MethodInvocation(1638)", "Delete ExpressionStatement(1639)", "Delete SimpleName: file(1640)", "Delete SimpleName: delete(1641)", "Delete MethodInvocation(1642)", "Delete PrefixExpression: !(1643)", "Delete SimpleName: String(1644)", "Delete SimpleType: String(1645)", "Delete SimpleName: msg(1646)", "Delete StringLiteral: \"loadPartition: failed to delete \"(1647)", "Delete SimpleName: file(1648)", "Delete SimpleName: getAbsolutePath(1649)", "Delete MethodInvocation(1650)", "Delete InfixExpression: +(1651)", "Delete VariableDeclarationFragment(1652)", "Delete VariableDeclarationStatement(1653)", "Delete SimpleName: LOG(1654)", "Delete SimpleName: error(1655)", "Delete SimpleName: msg(1656)", "Delete MethodInvocation(1657)", "Delete ExpressionStatement(1658)", "Delete SimpleName: IllegalStateException(1659)", "Delete SimpleType: IllegalStateException(1660)", "Delete SimpleName: msg(1661)", "Delete ClassInstanceCreation(1662)", "Delete ThrowStatement(1663)", "Delete Block(1664)", "Delete IfStatement(1665)", "Delete SimpleName: file(1666)", "Delete SimpleName: File(1667)", "Delete SimpleType: File(1668)", "Delete SimpleName: getEdgesPath(1669)", "Delete SimpleName: id(1670)", "Delete MethodInvocation(1671)", "Delete ClassInstanceCreation(1672)", "Delete Assignment: =(1673)", "Delete ExpressionStatement(1674)", "Delete SimpleName: LOG(1675)", "Delete SimpleName: isDebugEnabled(1676)", "Delete MethodInvocation(1677)", "Delete SimpleName: LOG(1678)", "Delete SimpleName: debug(1679)", "Delete StringLiteral: \"loadPartition: loading partition edges \"(1680)", "Delete SimpleName: partition(1681)", "Delete SimpleName: getId(1682)", "Delete MethodInvocation(1683)", "Delete StringLiteral: \" from \"(1684)", "Delete SimpleName: file(1685)", "Delete SimpleName: getAbsolutePath(1686)", "Delete MethodInvocation(1687)", "Delete InfixExpression: +(1688)", "Delete MethodInvocation(1689)", "Delete ExpressionStatement(1690)", "Delete Block(1691)", "Delete IfStatement(1692)", "Delete SimpleName: filein(1693)", "Delete SimpleName: FileInputStream(1694)", "Delete SimpleType: FileInputStream(1695)", "Delete SimpleName: file(1696)", "Delete ClassInstanceCreation(1697)", "Delete Assignment: =(1698)", "Delete ExpressionStatement(1699)", "Delete SimpleName: bufferin(1700)", "Delete SimpleName: BufferedInputStream(1701)", "Delete SimpleType: BufferedInputStream(1702)", "Delete SimpleName: filein(1703)", "Delete ClassInstanceCreation(1704)", "Delete Assignment: =(1705)", "Delete ExpressionStatement(1706)", "Delete SimpleName: inputStream(1707)", "Delete SimpleName: DataInputStream(1708)", "Delete SimpleType: DataInputStream(1709)", "Delete SimpleName: bufferin(1710)", "Delete ClassInstanceCreation(1711)", "Delete Assignment: =(1712)", "Delete ExpressionStatement(1713)", "Delete PrimitiveType: int(1714)", "Delete SimpleName: i(1715)", "Delete NumberLiteral: 0(1716)", "Delete VariableDeclarationFragment(1717)", "Delete VariableDeclarationExpression(1718)", "Delete SimpleName: i(1719)", "Delete SimpleName: numVertices(1720)", "Delete InfixExpression: <(1721)", "Delete SimpleName: i(1722)", "Delete PrefixExpression: ++(1723)", "Delete SimpleName: readOutEdges(1724)", "Delete SimpleName: inputStream(1725)", "Delete SimpleName: partition(1726)", "Delete MethodInvocation(1727)", "Delete ExpressionStatement(1728)", "Delete Block(1729)", "Delete ForStatement(1730)", "Delete SimpleName: inputStream(1731)", "Delete SimpleName: close(1732)", "Delete MethodInvocation(1733)", "Delete ExpressionStatement(1734)", "Delete SimpleName: conf(1735)", "Delete SimpleName: isStaticGraph(1736)", "Delete MethodInvocation(1737)", "Delete PrefixExpression: !(1738)", "Delete SimpleName: file(1739)", "Delete SimpleName: delete(1740)", "Delete MethodInvocation(1741)", "Delete PrefixExpression: !(1742)", "Delete InfixExpression: &&(1743)", "Delete SimpleName: String(1744)", "Delete SimpleType: String(1745)", "Delete SimpleName: msg(1746)", "Delete StringLiteral: \"loadPartition: failed to delete \"(1747)", "Delete SimpleName: file(1748)", "Delete SimpleName: getAbsolutePath(1749)", "Delete MethodInvocation(1750)", "Delete InfixExpression: +(1751)", "Delete VariableDeclarationFragment(1752)", "Delete VariableDeclarationStatement(1753)", "Delete SimpleName: LOG(1754)", "Delete SimpleName: error(1755)", "Delete SimpleName: msg(1756)", "Delete MethodInvocation(1757)", "Delete ExpressionStatement(1758)", "Delete SimpleName: IllegalStateException(1759)", "Delete SimpleType: IllegalStateException(1760)", "Delete SimpleName: msg(1761)", "Delete ClassInstanceCreation(1762)", "Delete ThrowStatement(1763)", "Delete Block(1764)", "Delete IfStatement(1765)", "Delete SimpleName: partition(1766)", "Delete ReturnStatement(1767)", "Delete Block(1768)", "Delete MethodDeclaration(1769)", "Delete TextElement: Write a partition to disk.(1770)", "Delete TagElement(1771)", "Delete SimpleName: meta(1772)", "Delete TextElement:  meta partition containing the partition to offload(1773)", "Delete TagElement: @param(1774)", "Delete SimpleName: IOException(1775)", "Delete TagElement: @throws(1776)", "Delete Javadoc(1777)", "Delete Modifier: private(1778)", "Delete PrimitiveType: void(1779)", "Delete SimpleName: offloadPartition(1780)", "Delete SimpleName: MetaPartition(1781)", "Delete SimpleType: MetaPartition(1782)", "Delete SimpleName: meta(1783)", "Delete SingleVariableDeclaration(1784)", "Delete SimpleName: IOException(1785)", "Delete SimpleType: IOException(1786)", "Delete SimpleName: Partition(1787)", "Delete SimpleType: Partition(1788)", "Delete SimpleName: I(1789)", "Delete SimpleType: I(1790)", "Delete SimpleName: V(1791)", "Delete SimpleType: V(1792)", "Delete SimpleName: E(1793)", "Delete SimpleType: E(1794)", "Delete ParameterizedType: Partition<I,V,E>(1795)", "Delete SimpleName: partition(1796)", "Delete SimpleName: meta(1797)", "Delete SimpleName: getPartition(1798)", "Delete MethodInvocation(1799)", "Delete VariableDeclarationFragment(1800)", "Delete VariableDeclarationStatement(1801)", "Delete SimpleName: File(1802)", "Delete SimpleType: File(1803)", "Delete SimpleName: file(1804)", "Delete SimpleName: File(1805)", "Delete SimpleType: File(1806)", "Delete SimpleName: getVerticesPath(1807)", "Delete SimpleName: partition(1808)", "Delete SimpleName: getId(1809)", "Delete MethodInvocation(1810)", "Delete MethodInvocation(1811)", "Delete ClassInstanceCreation(1812)", "Delete VariableDeclarationFragment(1813)", "Delete VariableDeclarationStatement(1814)", "Delete SimpleName: File(1815)", "Delete SimpleType: File(1816)", "Delete SimpleName: parent(1817)", "Delete SimpleName: file(1818)", "Delete SimpleName: getParentFile(1819)", "Delete MethodInvocation(1820)", "Delete VariableDeclarationFragment(1821)", "Delete VariableDeclarationStatement(1822)", "Delete SimpleName: parent(1823)", "Delete SimpleName: exists(1824)", "Delete MethodInvocation(1825)", "Delete PrefixExpression: !(1826)", "Delete SimpleName: parent(1827)", "Delete SimpleName: mkdirs(1828)", "Delete MethodInvocation(1829)", "Delete PrefixExpression: !(1830)", "Delete SimpleName: LOG(1831)", "Delete SimpleName: isDebugEnabled(1832)", "Delete MethodInvocation(1833)", "Delete InfixExpression: &&(1834)", "Delete SimpleName: LOG(1835)", "Delete SimpleName: debug(1836)", "Delete StringLiteral: \"offloadPartition: directory \"(1837)", "Delete SimpleName: parent(1838)", "Delete SimpleName: getAbsolutePath(1839)", "Delete MethodInvocation(1840)", "Delete StringLiteral: \" already exists.\"(1841)", "Delete InfixExpression: +(1842)", "Delete MethodInvocation(1843)", "Delete ExpressionStatement(1844)", "Delete Block(1845)", "Delete IfStatement(1846)", "Delete SimpleName: file(1847)", "Delete SimpleName: createNewFile(1848)", "Delete MethodInvocation(1849)", "Delete PrefixExpression: !(1850)", "Delete SimpleName: String(1851)", "Delete SimpleType: String(1852)", "Delete SimpleName: msg(1853)", "Delete StringLiteral: \"offloadPartition: file \"(1854)", "Delete SimpleName: parent(1855)", "Delete SimpleName: getAbsolutePath(1856)", "Delete MethodInvocation(1857)", "Delete StringLiteral: \" already exists.\"(1858)", "Delete InfixExpression: +(1859)", "Delete VariableDeclarationFragment(1860)", "Delete VariableDeclarationStatement(1861)", "Delete SimpleName: LOG(1862)", "Delete SimpleName: error(1863)", "Delete SimpleName: msg(1864)", "Delete MethodInvocation(1865)", "Delete ExpressionStatement(1866)", "Delete SimpleName: IllegalStateException(1867)", "Delete SimpleType: IllegalStateException(1868)", "Delete SimpleName: msg(1869)", "Delete ClassInstanceCreation(1870)", "Delete ThrowStatement(1871)", "Delete Block(1872)", "Delete IfStatement(1873)", "Delete SimpleName: LOG(1874)", "Delete SimpleName: isDebugEnabled(1875)", "Delete MethodInvocation(1876)", "Delete SimpleName: LOG(1877)", "Delete SimpleName: debug(1878)", "Delete StringLiteral: \"offloadPartition: writing partition vertices \"(1879)", "Delete SimpleName: partition(1880)", "Delete SimpleName: getId(1881)", "Delete MethodInvocation(1882)", "Delete StringLiteral: \" to \"(1883)", "Delete SimpleName: file(1884)", "Delete SimpleName: getAbsolutePath(1885)", "Delete MethodInvocation(1886)", "Delete InfixExpression: +(1887)", "Delete MethodInvocation(1888)", "Delete ExpressionStatement(1889)", "Delete Block(1890)", "Delete IfStatement(1891)", "Delete SimpleName: FileOutputStream(1892)", "Delete SimpleType: FileOutputStream(1893)", "Delete SimpleName: fileout(1894)", "Delete SimpleName: FileOutputStream(1895)", "Delete SimpleType: FileOutputStream(1896)", "Delete SimpleName: file(1897)", "Delete ClassInstanceCreation(1898)", "Delete VariableDeclarationFragment(1899)", "Delete VariableDeclarationStatement(1900)", "Delete SimpleName: BufferedOutputStream(1901)", "Delete SimpleType: BufferedOutputStream(1902)", "Delete SimpleName: bufferout(1903)", "Delete SimpleName: BufferedOutputStream(1904)", "Delete SimpleType: BufferedOutputStream(1905)", "Delete SimpleName: fileout(1906)", "Delete ClassInstanceCreation(1907)", "Delete VariableDeclarationFragment(1908)", "Delete VariableDeclarationStatement(1909)", "Delete SimpleName: DataOutputStream(1910)", "Delete SimpleType: DataOutputStream(1911)", "Delete SimpleName: outputStream(1912)", "Delete SimpleName: DataOutputStream(1913)", "Delete SimpleType: DataOutputStream(1914)", "Delete SimpleName: bufferout(1915)", "Delete ClassInstanceCreation(1916)", "Delete VariableDeclarationFragment(1917)", "Delete VariableDeclarationStatement(1918)", "Delete SimpleName: Vertex(1919)", "Delete SimpleType: Vertex(1920)", "Delete SimpleName: I(1921)", "Delete SimpleType: I(1922)", "Delete SimpleName: V(1923)", "Delete SimpleType: V(1924)", "Delete SimpleName: E(1925)", "Delete SimpleType: E(1926)", "Delete ParameterizedType: Vertex<I,V,E>(1927)", "Delete SimpleName: vertex(1928)", "Delete SingleVariableDeclaration(1929)", "Delete SimpleName: partition(1930)", "Delete SimpleName: writeVertexData(1931)", "Delete SimpleName: outputStream(1932)", "Delete SimpleName: vertex(1933)", "Delete MethodInvocation(1934)", "Delete ExpressionStatement(1935)", "Delete Block(1936)", "Delete EnhancedForStatement(1937)", "Delete SimpleName: outputStream(1938)", "Delete SimpleName: close(1939)", "Delete MethodInvocation(1940)", "Delete ExpressionStatement(1941)", "Delete SimpleName: file(1942)", "Delete SimpleName: File(1943)", "Delete SimpleType: File(1944)", "Delete SimpleName: getEdgesPath(1945)", "Delete SimpleName: partition(1946)", "Delete SimpleName: getId(1947)", "Delete MethodInvocation(1948)", "Delete MethodInvocation(1949)", "Delete ClassInstanceCreation(1950)", "Delete Assignment: =(1951)", "Delete ExpressionStatement(1952)", "Delete SimpleName: meta(1953)", "Delete SimpleName: getPrevVertexCount(1954)", "Delete MethodInvocation(1955)", "Delete SimpleName: partition(1956)", "Delete SimpleName: getVertexCount(1957)", "Delete MethodInvocation(1958)", "Delete InfixExpression: !=(1959)", "Delete SimpleName: conf(1960)", "Delete SimpleName: isStaticGraph(1961)", "Delete MethodInvocation(1962)", "Delete PrefixExpression: !(1963)", "Delete InfixExpression: ||(1964)", "Delete SimpleName: file(1965)", "Delete SimpleName: exists(1966)", "Delete MethodInvocation(1967)", "Delete PrefixExpression: !(1968)", "Delete InfixExpression: ||(1969)", "Delete SimpleName: meta(1970)", "Delete SimpleName: setPrevVertexCount(1971)", "Delete SimpleName: partition(1972)", "Delete SimpleName: getVertexCount(1973)", "Delete MethodInvocation(1974)", "Delete MethodInvocation(1975)", "Delete ExpressionStatement(1976)", "Delete SimpleName: file(1977)", "Delete SimpleName: createNewFile(1978)", "Delete MethodInvocation(1979)", "Delete PrefixExpression: !(1980)", "Delete SimpleName: LOG(1981)", "Delete SimpleName: isDebugEnabled(1982)", "Delete MethodInvocation(1983)", "Delete InfixExpression: &&(1984)", "Delete SimpleName: LOG(1985)", "Delete SimpleName: debug(1986)", "Delete StringLiteral: \"offloadPartition: file \"(1987)", "Delete SimpleName: file(1988)", "Delete SimpleName: getAbsolutePath(1989)", "Delete MethodInvocation(1990)", "Delete StringLiteral: \" already exists.\"(1991)", "Delete InfixExpression: +(1992)", "Delete MethodInvocation(1993)", "Delete ExpressionStatement(1994)", "Delete Block(1995)", "Delete IfStatement(1996)", "Delete SimpleName: LOG(1997)", "Delete SimpleName: isDebugEnabled(1998)", "Delete MethodInvocation(1999)", "Delete SimpleName: LOG(2000)", "Delete SimpleName: debug(2001)", "Delete StringLiteral: \"offloadPartition: writing partition edges \"(2002)", "Delete SimpleName: partition(2003)", "Delete SimpleName: getId(2004)", "Delete MethodInvocation(2005)", "Delete StringLiteral: \" to \"(2006)", "Delete SimpleName: file(2007)", "Delete SimpleName: getAbsolutePath(2008)", "Delete MethodInvocation(2009)", "Delete InfixExpression: +(2010)", "Delete MethodInvocation(2011)", "Delete ExpressionStatement(2012)", "Delete Block(2013)", "Delete IfStatement(2014)", "Delete SimpleName: fileout(2015)", "Delete SimpleName: FileOutputStream(2016)", "Delete SimpleType: FileOutputStream(2017)", "Delete SimpleName: file(2018)", "Delete ClassInstanceCreation(2019)", "Delete Assignment: =(2020)", "Delete ExpressionStatement(2021)", "Delete SimpleName: bufferout(2022)", "Delete SimpleName: BufferedOutputStream(2023)", "Delete SimpleType: BufferedOutputStream(2024)", "Delete SimpleName: fileout(2025)", "Delete ClassInstanceCreation(2026)", "Delete Assignment: =(2027)", "Delete ExpressionStatement(2028)", "Delete SimpleName: outputStream(2029)", "Delete SimpleName: DataOutputStream(2030)", "Delete SimpleType: DataOutputStream(2031)", "Delete SimpleName: bufferout(2032)", "Delete ClassInstanceCreation(2033)", "Delete Assignment: =(2034)", "Delete ExpressionStatement(2035)", "Delete SimpleName: Vertex(2036)", "Delete SimpleType: Vertex(2037)", "Delete SimpleName: I(2038)", "Delete SimpleType: I(2039)", "Delete SimpleName: V(2040)", "Delete SimpleType: V(2041)", "Delete SimpleName: E(2042)", "Delete SimpleType: E(2043)", "Delete ParameterizedType: Vertex<I,V,E>(2044)", "Delete SimpleName: vertex(2045)", "Delete SingleVariableDeclaration(2046)", "Delete SimpleName: partition(2047)", "Delete SimpleName: writeOutEdges(2048)", "Delete SimpleName: outputStream(2049)", "Delete SimpleName: vertex(2050)", "Delete MethodInvocation(2051)", "Delete ExpressionStatement(2052)", "Delete Block(2053)", "Delete EnhancedForStatement(2054)", "Delete SimpleName: outputStream(2055)", "Delete SimpleName: close(2056)", "Delete MethodInvocation(2057)", "Delete ExpressionStatement(2058)", "Delete Block(2059)", "Delete IfStatement(2060)", "Delete Block(2061)", "Delete MethodDeclaration(2062)", "Delete TextElement: Append a partition on disk at the end of the file. Expects the caller(2063)", "Delete TextElement: to hold the global lock.(2064)", "Delete TagElement(2065)", "Delete SimpleName: meta(2066)", "Delete TextElement:       meta partition container for the partitiont to save(2067)", "Delete TextElement: to disk(2068)", "Delete TagElement: @param(2069)", "Delete SimpleName: partition(2070)", "Delete TextElement:  The partition(2071)", "Delete TagElement: @param(2072)", "Delete SimpleName: IOException(2073)", "Delete TagElement: @throws(2074)", "Delete Javadoc(2075)", "Delete Modifier: private(2076)", "Delete PrimitiveType: void(2077)", "Delete SimpleName: addToOOCPartition(2078)", "Delete SimpleName: MetaPartition(2079)", "Delete SimpleType: MetaPartition(2080)", "Delete SimpleName: meta(2081)", "Delete SingleVariableDeclaration(2082)", "Delete SimpleName: Partition(2083)", "Delete SimpleType: Partition(2084)", "Delete SimpleName: I(2085)", "Delete SimpleType: I(2086)", "Delete SimpleName: V(2087)", "Delete SimpleType: V(2088)", "Delete SimpleName: E(2089)", "Delete SimpleType: E(2090)", "Delete ParameterizedType: Partition<I,V,E>(2091)", "Delete SimpleName: partition(2092)", "Delete SingleVariableDeclaration(2093)", "Delete SimpleName: IOException(2094)", "Delete SimpleType: IOException(2095)", "Delete SimpleName: Integer(2096)", "Delete SimpleType: Integer(2097)", "Delete SimpleName: id(2098)", "Delete SimpleName: partition(2099)", "Delete SimpleName: getId(2100)", "Delete MethodInvocation(2101)", "Delete VariableDeclarationFragment(2102)", "Delete VariableDeclarationStatement(2103)", "Delete SimpleName: File(2104)", "Delete SimpleType: File(2105)", "Delete SimpleName: file(2106)", "Delete SimpleName: File(2107)", "Delete SimpleType: File(2108)", "Delete SimpleName: getVerticesPath(2109)", "Delete SimpleName: id(2110)", "Delete MethodInvocation(2111)", "Delete ClassInstanceCreation(2112)", "Delete VariableDeclarationFragment(2113)", "Delete VariableDeclarationStatement(2114)", "Delete SimpleName: DataOutputStream(2115)", "Delete SimpleType: DataOutputStream(2116)", "Delete SimpleName: outputStream(2117)", "Delete NullLiteral(2118)", "Delete VariableDeclarationFragment(2119)", "Delete VariableDeclarationStatement(2120)", "Delete SimpleName: FileOutputStream(2121)", "Delete SimpleType: FileOutputStream(2122)", "Delete SimpleName: fileout(2123)", "Delete SimpleName: FileOutputStream(2124)", "Delete SimpleType: FileOutputStream(2125)", "Delete SimpleName: file(2126)", "Delete BooleanLiteral: true(2127)", "Delete ClassInstanceCreation(2128)", "Delete VariableDeclarationFragment(2129)", "Delete VariableDeclarationStatement(2130)", "Delete SimpleName: BufferedOutputStream(2131)", "Delete SimpleType: BufferedOutputStream(2132)", "Delete SimpleName: bufferout(2133)", "Delete SimpleName: BufferedOutputStream(2134)", "Delete SimpleType: BufferedOutputStream(2135)", "Delete SimpleName: fileout(2136)", "Delete ClassInstanceCreation(2137)", "Delete VariableDeclarationFragment(2138)", "Delete VariableDeclarationStatement(2139)", "Delete SimpleName: outputStream(2140)", "Delete SimpleName: DataOutputStream(2141)", "Delete SimpleType: DataOutputStream(2142)", "Delete SimpleName: bufferout(2143)", "Delete ClassInstanceCreation(2144)", "Delete Assignment: =(2145)", "Delete ExpressionStatement(2146)", "Delete SimpleName: Vertex(2147)", "Delete SimpleType: Vertex(2148)", "Delete SimpleName: I(2149)", "Delete SimpleType: I(2150)", "Delete SimpleName: V(2151)", "Delete SimpleType: V(2152)", "Delete SimpleName: E(2153)", "Delete SimpleType: E(2154)", "Delete ParameterizedType: Vertex<I,V,E>(2155)", "Delete SimpleName: vertex(2156)", "Delete SingleVariableDeclaration(2157)", "Delete SimpleName: partition(2158)", "Delete SimpleName: writeVertexData(2159)", "Delete SimpleName: outputStream(2160)", "Delete SimpleName: vertex(2161)", "Delete MethodInvocation(2162)", "Delete ExpressionStatement(2163)", "Delete Block(2164)", "Delete EnhancedForStatement(2165)", "Delete SimpleName: outputStream(2166)", "Delete SimpleName: close(2167)", "Delete MethodInvocation(2168)", "Delete ExpressionStatement(2169)", "Delete SimpleName: file(2170)", "Delete SimpleName: File(2171)", "Delete SimpleType: File(2172)", "Delete SimpleName: getEdgesPath(2173)", "Delete SimpleName: id(2174)", "Delete MethodInvocation(2175)", "Delete ClassInstanceCreation(2176)", "Delete Assignment: =(2177)", "Delete ExpressionStatement(2178)", "Delete SimpleName: fileout(2179)", "Delete SimpleName: FileOutputStream(2180)", "Delete SimpleType: FileOutputStream(2181)", "Delete SimpleName: file(2182)", "Delete BooleanLiteral: true(2183)", "Delete ClassInstanceCreation(2184)", "Delete Assignment: =(2185)", "Delete ExpressionStatement(2186)", "Delete SimpleName: bufferout(2187)", "Delete SimpleName: BufferedOutputStream(2188)", "Delete SimpleType: BufferedOutputStream(2189)", "Delete SimpleName: fileout(2190)", "Delete ClassInstanceCreation(2191)", "Delete Assignment: =(2192)", "Delete ExpressionStatement(2193)", "Delete SimpleName: outputStream(2194)", "Delete SimpleName: DataOutputStream(2195)", "Delete SimpleType: DataOutputStream(2196)", "Delete SimpleName: bufferout(2197)", "Delete ClassInstanceCreation(2198)", "Delete Assignment: =(2199)", "Delete ExpressionStatement(2200)", "Delete SimpleName: Vertex(2201)", "Delete SimpleType: Vertex(2202)", "Delete SimpleName: I(2203)", "Delete SimpleType: I(2204)", "Delete SimpleName: V(2205)", "Delete SimpleType: V(2206)", "Delete SimpleName: E(2207)", "Delete SimpleType: E(2208)", "Delete ParameterizedType: Vertex<I,V,E>(2209)", "Delete SimpleName: vertex(2210)", "Delete SingleVariableDeclaration(2211)", "Delete SimpleName: partition(2212)", "Delete SimpleName: writeOutEdges(2213)", "Delete SimpleName: outputStream(2214)", "Delete SimpleName: vertex(2215)", "Delete MethodInvocation(2216)", "Delete ExpressionStatement(2217)", "Delete Block(2218)", "Delete EnhancedForStatement(2219)", "Delete SimpleName: outputStream(2220)", "Delete SimpleName: close(2221)", "Delete MethodInvocation(2222)", "Delete ExpressionStatement(2223)", "Delete Block(2224)", "Delete MethodDeclaration(2225)", "Delete TextElement: Delete a partition's files.(2226)", "Delete TagElement(2227)", "Delete SimpleName: id(2228)", "Delete TextElement:  The id of the partition owning the file.(2229)", "Delete TagElement: @param(2230)", "Delete Javadoc(2231)", "Delete Modifier: public(2232)", "Delete PrimitiveType: void(2233)", "Delete SimpleName: deletePartitionFiles(2234)", "Delete SimpleName: Integer(2235)", "Delete SimpleType: Integer(2236)", "Delete SimpleName: id(2237)", "Delete SingleVariableDeclaration(2238)", "Delete SimpleName: File(2239)", "Delete SimpleType: File(2240)", "Delete SimpleName: file(2241)", "Delete SimpleName: File(2242)", "Delete SimpleType: File(2243)", "Delete SimpleName: getVerticesPath(2244)", "Delete SimpleName: id(2245)", "Delete MethodInvocation(2246)", "Delete ClassInstanceCreation(2247)", "Delete VariableDeclarationFragment(2248)", "Delete VariableDeclarationStatement(2249)", "Delete SimpleName: file(2250)", "Delete SimpleName: exists(2251)", "Delete MethodInvocation(2252)", "Delete SimpleName: file(2253)", "Delete SimpleName: delete(2254)", "Delete MethodInvocation(2255)", "Delete PrefixExpression: !(2256)", "Delete InfixExpression: &&(2257)", "Delete SimpleName: String(2258)", "Delete SimpleType: String(2259)", "Delete SimpleName: msg(2260)", "Delete StringLiteral: \"deletePartitionFiles: Failed to delete file \"(2261)", "Delete SimpleName: file(2262)", "Delete SimpleName: getAbsolutePath(2263)", "Delete MethodInvocation(2264)", "Delete InfixExpression: +(2265)", "Delete VariableDeclarationFragment(2266)", "Delete VariableDeclarationStatement(2267)", "Delete SimpleName: LOG(2268)", "Delete SimpleName: error(2269)", "Delete SimpleName: msg(2270)", "Delete MethodInvocation(2271)", "Delete ExpressionStatement(2272)", "Delete SimpleName: IllegalStateException(2273)", "Delete SimpleType: IllegalStateException(2274)", "Delete SimpleName: msg(2275)", "Delete ClassInstanceCreation(2276)", "Delete ThrowStatement(2277)", "Delete Block(2278)", "Delete IfStatement(2279)", "Delete SimpleName: file(2280)", "Delete SimpleName: File(2281)", "Delete SimpleType: File(2282)", "Delete SimpleName: getEdgesPath(2283)", "Delete SimpleName: id(2284)", "Delete MethodInvocation(2285)", "Delete ClassInstanceCreation(2286)", "Delete Assignment: =(2287)", "Delete ExpressionStatement(2288)", "Delete SimpleName: file(2289)", "Delete SimpleName: exists(2290)", "Delete MethodInvocation(2291)", "Delete SimpleName: file(2292)", "Delete SimpleName: delete(2293)", "Delete MethodInvocation(2294)", "Delete PrefixExpression: !(2295)", "Delete InfixExpression: &&(2296)", "Delete SimpleName: String(2297)", "Delete SimpleType: String(2298)", "Delete SimpleName: msg(2299)", "Delete StringLiteral: \"deletePartitionFiles: Failed to delete file \"(2300)", "Delete SimpleName: file(2301)", "Delete SimpleName: getAbsolutePath(2302)", "Delete MethodInvocation(2303)", "Delete InfixExpression: +(2304)", "Delete VariableDeclarationFragment(2305)", "Delete VariableDeclarationStatement(2306)", "Delete SimpleName: LOG(2307)", "Delete SimpleName: error(2308)", "Delete SimpleName: msg(2309)", "Delete MethodInvocation(2310)", "Delete ExpressionStatement(2311)", "Delete SimpleName: IllegalStateException(2312)", "Delete SimpleType: IllegalStateException(2313)", "Delete SimpleName: msg(2314)", "Delete ClassInstanceCreation(2315)", "Delete ThrowStatement(2316)", "Delete Block(2317)", "Delete IfStatement(2318)", "Delete Block(2319)", "Delete MethodDeclaration(2320)", "Delete TextElement: Get the path and basename of the storage files.(2321)", "Delete TagElement(2322)", "Delete SimpleName: partitionId(2323)", "Delete TextElement:  The partition(2324)", "Delete TagElement: @param(2325)", "Delete TextElement:  The path to the given partition(2326)", "Delete TagElement: @return(2327)", "Delete Javadoc(2328)", "Delete Modifier: private(2329)", "Delete SimpleName: String(2330)", "Delete SimpleType: String(2331)", "Delete SimpleName: getPartitionPath(2332)", "Delete SimpleName: Integer(2333)", "Delete SimpleType: Integer(2334)", "Delete SimpleName: partitionId(2335)", "Delete SingleVariableDeclaration(2336)", "Delete PrimitiveType: int(2337)", "Delete SimpleName: hash(2338)", "Delete SimpleName: hasher(2339)", "Delete SimpleName: hashInt(2340)", "Delete SimpleName: partitionId(2341)", "Delete MethodInvocation(2342)", "Delete SimpleName: asInt(2343)", "Delete MethodInvocation(2344)", "Delete VariableDeclarationFragment(2345)", "Delete VariableDeclarationStatement(2346)", "Delete PrimitiveType: int(2347)", "Delete SimpleName: idx(2348)", "Delete SimpleName: Math(2349)", "Delete SimpleName: abs(2350)", "Delete SimpleName: hash(2351)", "Delete QualifiedName: basePaths.length(2352)", "Delete InfixExpression: %(2353)", "Delete MethodInvocation(2354)", "Delete VariableDeclarationFragment(2355)", "Delete VariableDeclarationStatement(2356)", "Delete SimpleName: basePaths(2357)", "Delete SimpleName: idx(2358)", "Delete ArrayAccess(2359)", "Delete StringLiteral: \"/partition-\"(2360)", "Delete SimpleName: partitionId(2361)", "Delete InfixExpression: +(2362)", "Delete ReturnStatement(2363)", "Delete Block(2364)", "Delete MethodDeclaration(2365)", "Delete TextElement: Get the path to the file where vertices are stored.(2366)", "Delete TagElement(2367)", "Delete SimpleName: partitionId(2368)", "Delete TextElement:  The partition(2369)", "Delete TagElement: @param(2370)", "Delete TextElement:  The path to the vertices file(2371)", "Delete TagElement: @return(2372)", "Delete Javadoc(2373)", "Delete Modifier: private(2374)", "Delete SimpleName: String(2375)", "Delete SimpleType: String(2376)", "Delete SimpleName: getVerticesPath(2377)", "Delete SimpleName: Integer(2378)", "Delete SimpleType: Integer(2379)", "Delete SimpleName: partitionId(2380)", "Delete SingleVariableDeclaration(2381)", "Delete SimpleName: getPartitionPath(2382)", "Delete SimpleName: partitionId(2383)", "Delete MethodInvocation(2384)", "Delete StringLiteral: \"_vertices\"(2385)", "Delete InfixExpression: +(2386)", "Delete ReturnStatement(2387)", "Delete Block(2388)", "Delete MethodDeclaration(2389)", "Delete TextElement: Get the path to the file where edges are stored.(2390)", "Delete TagElement(2391)", "Delete SimpleName: partitionId(2392)", "Delete TextElement:  The partition(2393)", "Delete TagElement: @param(2394)", "Delete TextElement:  The path to the edges file(2395)", "Delete TagElement: @return(2396)", "Delete Javadoc(2397)", "Delete Modifier: private(2398)", "Delete SimpleName: String(2399)", "Delete SimpleType: String(2400)", "Delete SimpleName: getEdgesPath(2401)", "Delete SimpleName: Integer(2402)", "Delete SimpleType: Integer(2403)", "Delete SimpleName: partitionId(2404)", "Delete SingleVariableDeclaration(2405)", "Delete SimpleName: getPartitionPath(2406)", "Delete SimpleName: partitionId(2407)", "Delete MethodInvocation(2408)", "Delete StringLiteral: \"_edges\"(2409)", "Delete InfixExpression: +(2410)", "Delete ReturnStatement(2411)", "Delete Block(2412)", "Delete MethodDeclaration(2413)", "Delete TextElement: Removes and returns the last recently used entry.(2414)", "Delete TagElement(2415)", "Delete TextElement:  The last recently used entry.(2416)", "Delete TagElement: @return(2417)", "Delete Javadoc(2418)", "Delete Modifier: private(2419)", "Delete SimpleName: MetaPartition(2420)", "Delete SimpleType: MetaPartition(2421)", "Delete SimpleName: getLRUPartition(2422)", "Delete SimpleName: lru(2423)", "Delete SimpleName: Iterator(2424)", "Delete SimpleType: Iterator(2425)", "Delete SimpleName: Entry(2426)", "Delete SimpleType: Entry(2427)", "Delete SimpleName: Integer(2428)", "Delete SimpleType: Integer(2429)", "Delete SimpleName: MetaPartition(2430)", "Delete SimpleType: MetaPartition(2431)", "Delete ParameterizedType: Entry<Integer,MetaPartition>(2432)", "Delete ParameterizedType: Iterator<Entry<Integer,MetaPartition>>(2433)", "Delete SimpleName: i(2434)", "Delete SimpleName: lru(2435)", "Delete SimpleName: entrySet(2436)", "Delete MethodInvocation(2437)", "Delete SimpleName: iterator(2438)", "Delete MethodInvocation(2439)", "Delete VariableDeclarationFragment(2440)", "Delete VariableDeclarationStatement(2441)", "Delete SimpleName: Entry(2442)", "Delete SimpleType: Entry(2443)", "Delete SimpleName: Integer(2444)", "Delete SimpleType: Integer(2445)", "Delete SimpleName: MetaPartition(2446)", "Delete SimpleType: MetaPartition(2447)", "Delete ParameterizedType: Entry<Integer,MetaPartition>(2448)", "Delete SimpleName: entry(2449)", "Delete SimpleName: i(2450)", "Delete SimpleName: next(2451)", "Delete MethodInvocation(2452)", "Delete VariableDeclarationFragment(2453)", "Delete VariableDeclarationStatement(2454)", "Delete SimpleName: i(2455)", "Delete SimpleName: remove(2456)", "Delete MethodInvocation(2457)", "Delete ExpressionStatement(2458)", "Delete SimpleName: entry(2459)", "Delete SimpleName: getValue(2460)", "Delete MethodInvocation(2461)", "Delete ReturnStatement(2462)", "Delete Block(2463)", "Delete SynchronizedStatement(2464)", "Delete Block(2465)", "Delete MethodDeclaration(2466)", "Delete TextElement: Method that gets a partition from the store.(2467)", "Delete TextElement: The partition is produced as a side effect of the computation and is(2468)", "Delete TextElement: reflected inside the META object provided as parameter.(2469)", "Delete TextElement: This function is thread-safe since it locks the whole computation(2470)", "Delete TextElement: on the metapartition provided.<br />(2471)", "Delete TextElement: <br />(2472)", "Delete TextElement: <b>ONDISK case</b><br />(2473)", "Delete TextElement: When a thread tries to access an element on disk, it waits until it(2474)", "Delete TextElement: space in memory and inactive data to swap resources.(2475)", "Delete TextElement: It is possible that multiple threads wait for a single(2476)", "Delete TextElement: partition to be restored from disk. The semantic of this(2477)", "Delete TextElement: function is that only the first thread interested will be(2478)", "Delete TextElement: in charge to load it back to memory, hence waiting on 'lru'.(2479)", "Delete TextElement: The others, will be waiting on the lock to be available,(2480)", "Delete TextElement: preventing consistency issues.<br />(2481)", "Delete TextElement: <br />(2482)", "Delete TextElement: <b>Deadlock</b><br />(2483)", "Delete TextElement: The code of this method can in principle lead to a deadlock, due to the(2484)", "Delete TextElement: fact that two locks are held together while running the \"wait\" method.(2485)", "Delete TextElement: However, this problem does not occur. The two locks held are:(2486)", "Delete TextElement: <ol>(2487)", "Delete TextElement: <li><b>Meta Object</b>, which is the object the thread is trying to(2488)", "Delete TextElement: acquire and is currently stored on disk.</li>(2489)", "Delete TextElement: <li><b>LRU data structure</b>, which keeps track of the objects which are(2490)", "Delete TextElement: inactive and hence swappable.</li>(2491)", "Delete TextElement: </ol>(2492)", "Delete TextElement: It is not possible that two getPartition calls cross because this means(2493)", "Delete TextElement: that LRU objects are both INACTIVE and ONDISK at the same time, which is(2494)", "Delete TextElement: not possible.(2495)", "Delete TagElement(2496)", "Delete SimpleName: meta(2497)", "Delete TextElement:  meta partition container with the partition itself(2498)", "Delete TagElement: @param(2499)", "Delete Javadoc(2500)", "Delete QualifiedName: edu.umd.cs.findbugs.annotations.SuppressWarnings(2501)", "Delete SimpleName: value(2502)", "Delete StringLiteral: \"TLW_TWO_LOCK_WAIT\"(2503)", "Delete MemberValuePair(2504)", "Delete SimpleName: justification(2505)", "Delete StringLiteral: \"The two locks held do not produce a deadlock\"(2506)", "Delete MemberValuePair(2507)", "Delete NormalAnnotation(2508)", "Delete Modifier: private(2509)", "Delete PrimitiveType: void(2510)", "Delete SimpleName: getPartition(2511)", "Delete SimpleName: MetaPartition(2512)", "Delete SimpleType: MetaPartition(2513)", "Delete SimpleName: meta(2514)", "Delete SingleVariableDeclaration(2515)", "Delete SimpleName: meta(2516)", "Delete PrimitiveType: boolean(2517)", "Delete SimpleName: isNotDone(2518)", "Delete BooleanLiteral: true(2519)", "Delete VariableDeclarationFragment(2520)", "Delete VariableDeclarationStatement(2521)", "Delete SimpleName: meta(2522)", "Delete SimpleName: getState(2523)", "Delete MethodInvocation(2524)", "Delete QualifiedName: State.INIT(2525)", "Delete InfixExpression: !=(2526)", "Delete SimpleName: State(2527)", "Delete SimpleType: State(2528)", "Delete SimpleName: state(2529)", "Delete VariableDeclarationFragment(2530)", "Delete VariableDeclarationStatement(2531)", "Delete SimpleName: isNotDone(2532)", "Delete SimpleName: state(2533)", "Delete SimpleName: meta(2534)", "Delete SimpleName: getState(2535)", "Delete MethodInvocation(2536)", "Delete Assignment: =(2537)", "Delete ExpressionStatement(2538)", "Delete SimpleName: state(2539)", "Delete SimpleName: ONDISK(2540)", "Delete SwitchCase(2541)", "Delete SimpleName: MetaPartition(2542)", "Delete SimpleType: MetaPartition(2543)", "Delete SimpleName: swapOutPartition(2544)", "Delete NullLiteral(2545)", "Delete VariableDeclarationFragment(2546)", "Delete VariableDeclarationStatement(2547)", "Delete PrimitiveType: long(2548)", "Delete SimpleName: numVertices(2549)", "Delete SimpleName: meta(2550)", "Delete SimpleName: getVertexCount(2551)", "Delete MethodInvocation(2552)", "Delete VariableDeclarationFragment(2553)", "Delete VariableDeclarationStatement(2554)", "Delete SimpleName: lru(2555)", "Delete SimpleName: numPartitionsInMem(2556)", "Delete SimpleName: get(2557)", "Delete MethodInvocation(2558)", "Delete SimpleName: maxPartitionsInMem(2559)", "Delete InfixExpression: >=(2560)", "Delete SimpleName: lru(2561)", "Delete SimpleName: isEmpty(2562)", "Delete MethodInvocation(2563)", "Delete InfixExpression: &&(2564)", "Delete SimpleName: lru(2565)", "Delete SimpleName: wait(2566)", "Delete MethodInvocation(2567)", "Delete ExpressionStatement(2568)", "Delete Block(2569)", "Delete WhileStatement(2570)", "Delete Block(2571)", "Delete SimpleName: InterruptedException(2572)", "Delete SimpleType: InterruptedException(2573)", "Delete SimpleName: e(2574)", "Delete SingleVariableDeclaration(2575)", "Delete SimpleName: LOG(2576)", "Delete SimpleName: error(2577)", "Delete StringLiteral: \"getPartition: error while waiting on \"(2578)", "Delete StringLiteral: \"LRU data structure: \"(2579)", "Delete SimpleName: e(2580)", "Delete SimpleName: getMessage(2581)", "Delete MethodInvocation(2582)", "Delete InfixExpression: +(2583)", "Delete MethodInvocation(2584)", "Delete ExpressionStatement(2585)", "Delete SimpleName: IllegalStateException(2586)", "Delete SimpleType: IllegalStateException(2587)", "Delete SimpleName: e(2588)", "Delete ClassInstanceCreation(2589)", "Delete ThrowStatement(2590)", "Delete Block(2591)", "Delete CatchClause(2592)", "Delete TryStatement(2593)", "Delete SimpleName: numPartitionsInMem(2594)", "Delete SimpleName: get(2595)", "Delete MethodInvocation(2596)", "Delete SimpleName: maxPartitionsInMem(2597)", "Delete InfixExpression: >=(2598)", "Delete SimpleName: lru(2599)", "Delete SimpleName: isEmpty(2600)", "Delete MethodInvocation(2601)", "Delete PrefixExpression: !(2602)", "Delete InfixExpression: &&(2603)", "Delete SimpleName: swapOutPartition(2604)", "Delete SimpleName: getLRUPartition(2605)", "Delete MethodInvocation(2606)", "Delete Assignment: =(2607)", "Delete ExpressionStatement(2608)", "Delete Block(2609)", "Delete SimpleName: numPartitionsInMem(2610)", "Delete SimpleName: get(2611)", "Delete MethodInvocation(2612)", "Delete SimpleName: maxPartitionsInMem(2613)", "Delete InfixExpression: <(2614)", "Delete SimpleName: numPartitionsInMem(2615)", "Delete SimpleName: getAndIncrement(2616)", "Delete MethodInvocation(2617)", "Delete ExpressionStatement(2618)", "Delete Block(2619)", "Delete SimpleName: String(2620)", "Delete SimpleType: String(2621)", "Delete SimpleName: msg(2622)", "Delete StringLiteral: \"lru is empty and there is not space in memory, \"(2623)", "Delete StringLiteral: \"hence the partition cannot be loaded.\"(2624)", "Delete InfixExpression: +(2625)", "Delete VariableDeclarationFragment(2626)", "Delete VariableDeclarationStatement(2627)", "Delete SimpleName: LOG(2628)", "Delete SimpleName: error(2629)", "Delete SimpleName: msg(2630)", "Delete MethodInvocation(2631)", "Delete ExpressionStatement(2632)", "Delete SimpleName: IllegalStateException(2633)", "Delete SimpleType: IllegalStateException(2634)", "Delete SimpleName: msg(2635)", "Delete ClassInstanceCreation(2636)", "Delete ThrowStatement(2637)", "Delete Block(2638)", "Delete IfStatement(2639)", "Delete IfStatement(2640)", "Delete Block(2641)", "Delete SynchronizedStatement(2642)", "Delete SimpleName: swapOutPartition(2643)", "Delete NullLiteral(2644)", "Delete InfixExpression: !=(2645)", "Delete SimpleName: swapOutPartition(2646)", "Delete SimpleName: swapOutPartition(2647)", "Delete SimpleName: isSticky(2648)", "Delete MethodInvocation(2649)", "Delete SimpleName: String(2650)", "Delete SimpleType: String(2651)", "Delete SimpleName: msg(2652)", "Delete StringLiteral: \"Partition \"(2653)", "Delete SimpleName: meta(2654)", "Delete SimpleName: getId(2655)", "Delete MethodInvocation(2656)", "Delete StringLiteral: \" is sticky \"(2657)", "Delete StringLiteral: \" and cannot be offloaded.\"(2658)", "Delete InfixExpression: +(2659)", "Delete VariableDeclarationFragment(2660)", "Delete VariableDeclarationStatement(2661)", "Delete SimpleName: LOG(2662)", "Delete SimpleName: error(2663)", "Delete SimpleName: msg(2664)", "Delete MethodInvocation(2665)", "Delete ExpressionStatement(2666)", "Delete SimpleName: IllegalStateException(2667)", "Delete SimpleType: IllegalStateException(2668)", "Delete SimpleName: msg(2669)", "Delete ClassInstanceCreation(2670)", "Delete ThrowStatement(2671)", "Delete Block(2672)", "Delete IfStatement(2673)", "Delete SimpleName: swapOutPartition(2674)", "Delete SimpleName: getState(2675)", "Delete MethodInvocation(2676)", "Delete QualifiedName: State.INACTIVE(2677)", "Delete InfixExpression: !=(2678)", "Delete SimpleName: String(2679)", "Delete SimpleType: String(2680)", "Delete SimpleName: msg(2681)", "Delete StringLiteral: \"Someone is holding the partition with id \"(2682)", "Delete SimpleName: swapOutPartition(2683)", "Delete SimpleName: getId(2684)", "Delete MethodInvocation(2685)", "Delete StringLiteral: \" but is supposed to be \"(2686)", "Delete StringLiteral: \"inactive.\"(2687)", "Delete InfixExpression: +(2688)", "Delete VariableDeclarationFragment(2689)", "Delete VariableDeclarationStatement(2690)", "Delete SimpleName: LOG(2691)", "Delete SimpleName: error(2692)", "Delete SimpleName: msg(2693)", "Delete MethodInvocation(2694)", "Delete ExpressionStatement(2695)", "Delete SimpleName: IllegalStateException(2696)", "Delete SimpleType: IllegalStateException(2697)", "Delete SimpleName: msg(2698)", "Delete ClassInstanceCreation(2699)", "Delete ThrowStatement(2700)", "Delete Block(2701)", "Delete IfStatement(2702)", "Delete SimpleName: offloadPartition(2703)", "Delete SimpleName: swapOutPartition(2704)", "Delete MethodInvocation(2705)", "Delete ExpressionStatement(2706)", "Delete SimpleName: Partition(2707)", "Delete SimpleType: Partition(2708)", "Delete SimpleName: I(2709)", "Delete SimpleType: I(2710)", "Delete SimpleName: V(2711)", "Delete SimpleType: V(2712)", "Delete SimpleName: E(2713)", "Delete SimpleType: E(2714)", "Delete ParameterizedType: Partition<I,V,E>(2715)", "Delete SimpleName: p(2716)", "Delete SimpleName: swapOutPartition(2717)", "Delete SimpleName: getPartition(2718)", "Delete MethodInvocation(2719)", "Delete VariableDeclarationFragment(2720)", "Delete VariableDeclarationStatement(2721)", "Delete SimpleName: swapOutPartition(2722)", "Delete SimpleName: setOnDisk(2723)", "Delete SimpleName: p(2724)", "Delete MethodInvocation(2725)", "Delete ExpressionStatement(2726)", "Delete SimpleName: swapOutPartition(2727)", "Delete SimpleName: notifyAll(2728)", "Delete MethodInvocation(2729)", "Delete ExpressionStatement(2730)", "Delete Block(2731)", "Delete SimpleName: IOException(2732)", "Delete SimpleType: IOException(2733)", "Delete SimpleName: e(2734)", "Delete SingleVariableDeclaration(2735)", "Delete SimpleName: LOG(2736)", "Delete SimpleName: error(2737)", "Delete StringLiteral: \"getPartition: Failed while Offloading \"(2738)", "Delete StringLiteral: \"New Partition: \"(2739)", "Delete SimpleName: e(2740)", "Delete SimpleName: getMessage(2741)", "Delete MethodInvocation(2742)", "Delete InfixExpression: +(2743)", "Delete MethodInvocation(2744)", "Delete ExpressionStatement(2745)", "Delete SimpleName: IllegalStateException(2746)", "Delete SimpleType: IllegalStateException(2747)", "Delete SimpleName: e(2748)", "Delete ClassInstanceCreation(2749)", "Delete ThrowStatement(2750)", "Delete Block(2751)", "Delete CatchClause(2752)", "Delete TryStatement(2753)", "Delete Block(2754)", "Delete SynchronizedStatement(2755)", "Delete Block(2756)", "Delete IfStatement(2757)", "Delete SimpleName: Partition(2758)", "Delete SimpleType: Partition(2759)", "Delete SimpleName: I(2760)", "Delete SimpleType: I(2761)", "Delete SimpleName: V(2762)", "Delete SimpleType: V(2763)", "Delete SimpleName: E(2764)", "Delete SimpleType: E(2765)", "Delete ParameterizedType: Partition<I,V,E>(2766)", "Delete SimpleName: partition(2767)", "Delete VariableDeclarationFragment(2768)", "Delete VariableDeclarationStatement(2769)", "Delete SimpleName: partition(2770)", "Delete SimpleName: loadPartition(2771)", "Delete SimpleName: meta(2772)", "Delete SimpleName: getId(2773)", "Delete MethodInvocation(2774)", "Delete SimpleName: numVertices(2775)", "Delete MethodInvocation(2776)", "Delete Assignment: =(2777)", "Delete ExpressionStatement(2778)", "Delete Block(2779)", "Delete SimpleName: IOException(2780)", "Delete SimpleType: IOException(2781)", "Delete SimpleName: e(2782)", "Delete SingleVariableDeclaration(2783)", "Delete SimpleName: LOG(2784)", "Delete SimpleName: error(2785)", "Delete StringLiteral: \"getPartition: Failed while Loading Partition from \"(2786)", "Delete StringLiteral: \"disk: \"(2787)", "Delete SimpleName: e(2788)", "Delete SimpleName: getMessage(2789)", "Delete MethodInvocation(2790)", "Delete InfixExpression: +(2791)", "Delete MethodInvocation(2792)", "Delete ExpressionStatement(2793)", "Delete SimpleName: IllegalStateException(2794)", "Delete SimpleType: IllegalStateException(2795)", "Delete SimpleName: e(2796)", "Delete ClassInstanceCreation(2797)", "Delete ThrowStatement(2798)", "Delete Block(2799)", "Delete CatchClause(2800)", "Delete TryStatement(2801)", "Delete SimpleName: meta(2802)", "Delete SimpleName: setActive(2803)", "Delete SimpleName: partition(2804)", "Delete MethodInvocation(2805)", "Delete ExpressionStatement(2806)", "Delete SimpleName: isNotDone(2807)", "Delete BooleanLiteral: false(2808)", "Delete Assignment: =(2809)", "Delete ExpressionStatement(2810)", "Delete BreakStatement(2811)", "Delete SimpleName: INACTIVE(2812)", "Delete SwitchCase(2813)", "Delete SimpleName: MetaPartition(2814)", "Delete SimpleType: MetaPartition(2815)", "Delete SimpleName: p(2816)", "Delete NullLiteral(2817)", "Delete VariableDeclarationFragment(2818)", "Delete VariableDeclarationStatement(2819)", "Delete SimpleName: meta(2820)", "Delete SimpleName: isSticky(2821)", "Delete MethodInvocation(2822)", "Delete SimpleName: meta(2823)", "Delete SimpleName: setActive(2824)", "Delete MethodInvocation(2825)", "Delete ExpressionStatement(2826)", "Delete SimpleName: isNotDone(2827)", "Delete BooleanLiteral: false(2828)", "Delete Assignment: =(2829)", "Delete ExpressionStatement(2830)", "Delete BreakStatement(2831)", "Delete Block(2832)", "Delete IfStatement(2833)", "Delete SimpleName: lru(2834)", "Delete SimpleName: p(2835)", "Delete SimpleName: lru(2836)", "Delete SimpleName: remove(2837)", "Delete SimpleName: meta(2838)", "Delete SimpleName: getId(2839)", "Delete MethodInvocation(2840)", "Delete MethodInvocation(2841)", "Delete Assignment: =(2842)", "Delete ExpressionStatement(2843)", "Delete Block(2844)", "Delete SynchronizedStatement(2845)", "Delete SimpleName: p(2846)", "Delete SimpleName: meta(2847)", "Delete InfixExpression: ==(2848)", "Delete SimpleName: p(2849)", "Delete SimpleName: getState(2850)", "Delete MethodInvocation(2851)", "Delete QualifiedName: State.INACTIVE(2852)", "Delete InfixExpression: ==(2853)", "Delete InfixExpression: &&(2854)", "Delete SimpleName: meta(2855)", "Delete SimpleName: setActive(2856)", "Delete MethodInvocation(2857)", "Delete ExpressionStatement(2858)", "Delete SimpleName: isNotDone(2859)", "Delete BooleanLiteral: false(2860)", "Delete Assignment: =(2861)", "Delete ExpressionStatement(2862)", "Delete Block(2863)", "Delete SimpleName: meta(2864)", "Delete SimpleName: wait(2865)", "Delete MethodInvocation(2866)", "Delete ExpressionStatement(2867)", "Delete Block(2868)", "Delete SimpleName: InterruptedException(2869)", "Delete SimpleType: InterruptedException(2870)", "Delete SimpleName: e(2871)", "Delete SingleVariableDeclaration(2872)", "Delete SimpleName: LOG(2873)", "Delete SimpleName: error(2874)", "Delete StringLiteral: \"getPartition: error while waiting on \"(2875)", "Delete StringLiteral: \"previously Inactive Partition: \"(2876)", "Delete SimpleName: e(2877)", "Delete SimpleName: getMessage(2878)", "Delete MethodInvocation(2879)", "Delete InfixExpression: +(2880)", "Delete MethodInvocation(2881)", "Delete ExpressionStatement(2882)", "Delete SimpleName: IllegalStateException(2883)", "Delete SimpleType: IllegalStateException(2884)", "Delete SimpleName: e(2885)", "Delete ClassInstanceCreation(2886)", "Delete ThrowStatement(2887)", "Delete Block(2888)", "Delete CatchClause(2889)", "Delete TryStatement(2890)", "Delete SimpleName: isNotDone(2891)", "Delete BooleanLiteral: true(2892)", "Delete Assignment: =(2893)", "Delete ExpressionStatement(2894)", "Delete Block(2895)", "Delete IfStatement(2896)", "Delete BreakStatement(2897)", "Delete SimpleName: ACTIVE(2898)", "Delete SwitchCase(2899)", "Delete SimpleName: meta(2900)", "Delete SimpleName: incrementReferences(2901)", "Delete MethodInvocation(2902)", "Delete ExpressionStatement(2903)", "Delete SimpleName: isNotDone(2904)", "Delete BooleanLiteral: false(2905)", "Delete Assignment: =(2906)", "Delete ExpressionStatement(2907)", "Delete BreakStatement(2908)", "Delete SwitchCase(2909)", "Delete SimpleName: IllegalStateException(2910)", "Delete SimpleType: IllegalStateException(2911)", "Delete StringLiteral: \"illegal state \"(2912)", "Delete SimpleName: meta(2913)", "Delete SimpleName: getState(2914)", "Delete MethodInvocation(2915)", "Delete StringLiteral: \" for partition \"(2916)", "Delete SimpleName: meta(2917)", "Delete SimpleName: getId(2918)", "Delete MethodInvocation(2919)", "Delete InfixExpression: +(2920)", "Delete ClassInstanceCreation(2921)", "Delete ThrowStatement(2922)", "Delete SwitchStatement(2923)", "Delete Block(2924)", "Delete WhileStatement(2925)", "Delete Block(2926)", "Delete IfStatement(2927)", "Delete Block(2928)", "Delete SynchronizedStatement(2929)", "Delete Block(2930)", "Delete MethodDeclaration(2931)", "Delete TextElement: Method that puts a partition back to the store. This function is(2932)", "Delete TextElement: thread-safe using meta partition intrinsic lock.(2933)", "Delete TagElement(2934)", "Delete SimpleName: meta(2935)", "Delete TextElement:  meta partition container with the partition itself(2936)", "Delete TagElement: @param(2937)", "Delete Javadoc(2938)", "Delete Modifier: private(2939)", "Delete PrimitiveType: void(2940)", "Delete SimpleName: putPartition(2941)", "Delete SimpleName: MetaPartition(2942)", "Delete SimpleType: MetaPartition(2943)", "Delete SimpleName: meta(2944)", "Delete SingleVariableDeclaration(2945)", "Delete SimpleName: meta(2946)", "Delete SimpleName: meta(2947)", "Delete SimpleName: getState(2948)", "Delete MethodInvocation(2949)", "Delete QualifiedName: State.ACTIVE(2950)", "Delete InfixExpression: !=(2951)", "Delete SimpleName: String(2952)", "Delete SimpleType: String(2953)", "Delete SimpleName: msg(2954)", "Delete StringLiteral: \"It is not possible to put back a partition which is \"(2955)", "Delete StringLiteral: \"not ACTIVE.\\n\"(2956)", "Delete SimpleName: meta(2957)", "Delete SimpleName: toString(2958)", "Delete MethodInvocation(2959)", "Delete InfixExpression: +(2960)", "Delete VariableDeclarationFragment(2961)", "Delete VariableDeclarationStatement(2962)", "Delete SimpleName: LOG(2963)", "Delete SimpleName: error(2964)", "Delete SimpleName: msg(2965)", "Delete MethodInvocation(2966)", "Delete ExpressionStatement(2967)", "Delete SimpleName: IllegalStateException(2968)", "Delete SimpleType: IllegalStateException(2969)", "Delete SimpleName: msg(2970)", "Delete ClassInstanceCreation(2971)", "Delete ThrowStatement(2972)", "Delete Block(2973)", "Delete IfStatement(2974)", "Delete SimpleName: meta(2975)", "Delete SimpleName: decrementReferences(2976)", "Delete MethodInvocation(2977)", "Delete NumberLiteral: 0(2978)", "Delete InfixExpression: ==(2979)", "Delete SimpleName: meta(2980)", "Delete SimpleName: setState(2981)", "Delete QualifiedName: State.INACTIVE(2982)", "Delete MethodInvocation(2983)", "Delete ExpressionStatement(2984)", "Delete SimpleName: meta(2985)", "Delete SimpleName: isSticky(2986)", "Delete MethodInvocation(2987)", "Delete PrefixExpression: !(2988)", "Delete SimpleName: lru(2989)", "Delete SimpleName: lru(2990)", "Delete SimpleName: put(2991)", "Delete SimpleName: meta(2992)", "Delete SimpleName: getId(2993)", "Delete MethodInvocation(2994)", "Delete SimpleName: meta(2995)", "Delete MethodInvocation(2996)", "Delete ExpressionStatement(2997)", "Delete SimpleName: lru(2998)", "Delete SimpleName: notifyAll(2999)", "Delete MethodInvocation(3000)", "Delete ExpressionStatement(3001)", "Delete Block(3002)", "Delete SynchronizedStatement(3003)", "Delete Block(3004)", "Delete IfStatement(3005)", "Delete SimpleName: meta(3006)", "Delete SimpleName: notifyAll(3007)", "Delete MethodInvocation(3008)", "Delete ExpressionStatement(3009)", "Delete Block(3010)", "Delete IfStatement(3011)", "Delete Block(3012)", "Delete SynchronizedStatement(3013)", "Delete Block(3014)", "Delete MethodDeclaration(3015)", "Delete TextElement: Task that adds a partition to the store.(3016)", "Delete TextElement: This function is thread-safe since it locks using the intrinsic lock of(3017)", "Delete TextElement: the meta partition.(3018)", "Delete TagElement(3019)", "Delete SimpleName: meta(3020)", "Delete TextElement:  meta partition container with the partition itself(3021)", "Delete TagElement: @param(3022)", "Delete SimpleName: partition(3023)", "Delete TextElement:  partition to be added(3024)", "Delete TagElement: @param(3025)", "Delete Javadoc(3026)", "Delete Modifier: private(3027)", "Delete PrimitiveType: void(3028)", "Delete SimpleName: addPartition(3029)", "Delete SimpleName: MetaPartition(3030)", "Delete SimpleType: MetaPartition(3031)", "Delete SimpleName: meta(3032)", "Delete SingleVariableDeclaration(3033)", "Delete SimpleName: Partition(3034)", "Delete SimpleType: Partition(3035)", "Delete SimpleName: I(3036)", "Delete SimpleType: I(3037)", "Delete SimpleName: V(3038)", "Delete SimpleType: V(3039)", "Delete SimpleName: E(3040)", "Delete SimpleType: E(3041)", "Delete ParameterizedType: Partition<I,V,E>(3042)", "Delete SimpleName: partition(3043)", "Delete SingleVariableDeclaration(3044)", "Delete SimpleName: meta(3045)", "Delete SimpleName: meta(3046)", "Delete SimpleName: getState(3047)", "Delete MethodInvocation(3048)", "Delete QualifiedName: State.INIT(3049)", "Delete InfixExpression: ==(3050)", "Delete SimpleName: partition(3051)", "Delete NullLiteral(3052)", "Delete InfixExpression: ==(3053)", "Delete SimpleName: String(3054)", "Delete SimpleType: String(3055)", "Delete SimpleName: msg(3056)", "Delete StringLiteral: \"No partition was provided.\"(3057)", "Delete VariableDeclarationFragment(3058)", "Delete VariableDeclarationStatement(3059)", "Delete SimpleName: LOG(3060)", "Delete SimpleName: error(3061)", "Delete SimpleName: msg(3062)", "Delete MethodInvocation(3063)", "Delete ExpressionStatement(3064)", "Delete SimpleName: IllegalStateException(3065)", "Delete SimpleType: IllegalStateException(3066)", "Delete SimpleName: msg(3067)", "Delete ClassInstanceCreation(3068)", "Delete ThrowStatement(3069)", "Delete Block(3070)", "Delete IfStatement(3071)", "Delete SimpleName: partition(3072)", "Delete SimpleName: meta(3073)", "Delete SimpleName: getPartition(3074)", "Delete MethodInvocation(3075)", "Delete InfixExpression: !=(3076)", "Delete SimpleName: String(3077)", "Delete SimpleType: String(3078)", "Delete SimpleName: msg(3079)", "Delete StringLiteral: \"Partition and Meta-Partition should \"(3080)", "Delete StringLiteral: \"contain the same data\"(3081)", "Delete InfixExpression: +(3082)", "Delete VariableDeclarationFragment(3083)", "Delete VariableDeclarationStatement(3084)", "Delete SimpleName: LOG(3085)", "Delete SimpleName: error(3086)", "Delete SimpleName: msg(3087)", "Delete MethodInvocation(3088)", "Delete ExpressionStatement(3089)", "Delete SimpleName: IllegalStateException(3090)", "Delete SimpleType: IllegalStateException(3091)", "Delete SimpleName: msg(3092)", "Delete ClassInstanceCreation(3093)", "Delete ThrowStatement(3094)", "Delete Block(3095)", "Delete IfStatement(3096)", "Delete SimpleName: lru(3097)", "Delete SimpleName: numPartitionsInMem(3098)", "Delete SimpleName: get(3099)", "Delete MethodInvocation(3100)", "Delete SimpleName: maxPartitionsInMem(3101)", "Delete InfixExpression: <(3102)", "Delete QualifiedName: meta.isSticky(3103)", "Delete InfixExpression: ||(3104)", "Delete SimpleName: meta(3105)", "Delete SimpleName: setState(3106)", "Delete QualifiedName: State.INACTIVE(3107)", "Delete MethodInvocation(3108)", "Delete ExpressionStatement(3109)", "Delete SimpleName: numPartitionsInMem(3110)", "Delete SimpleName: getAndIncrement(3111)", "Delete MethodInvocation(3112)", "Delete ExpressionStatement(3113)", "Delete QualifiedName: meta.isSticky(3114)", "Delete PrefixExpression: !(3115)", "Delete SimpleName: lru(3116)", "Delete SimpleName: put(3117)", "Delete SimpleName: meta(3118)", "Delete SimpleName: getId(3119)", "Delete MethodInvocation(3120)", "Delete SimpleName: meta(3121)", "Delete MethodInvocation(3122)", "Delete ExpressionStatement(3123)", "Delete SimpleName: lru(3124)", "Delete SimpleName: notifyAll(3125)", "Delete MethodInvocation(3126)", "Delete ExpressionStatement(3127)", "Delete Block(3128)", "Delete IfStatement(3129)", "Delete ReturnStatement(3130)", "Delete Block(3131)", "Delete IfStatement(3132)", "Delete Block(3133)", "Delete SynchronizedStatement(3134)", "Delete SimpleName: offloadPartition(3135)", "Delete SimpleName: meta(3136)", "Delete MethodInvocation(3137)", "Delete ExpressionStatement(3138)", "Delete SimpleName: meta(3139)", "Delete SimpleName: setOnDisk(3140)", "Delete SimpleName: partition(3141)", "Delete MethodInvocation(3142)", "Delete ExpressionStatement(3143)", "Delete Block(3144)", "Delete SimpleName: IOException(3145)", "Delete SimpleType: IOException(3146)", "Delete SimpleName: e(3147)", "Delete SingleVariableDeclaration(3148)", "Delete SimpleName: LOG(3149)", "Delete SimpleName: error(3150)", "Delete StringLiteral: \"addPartition: Failed while Offloading New Partition: \"(3151)", "Delete SimpleName: e(3152)", "Delete SimpleName: getMessage(3153)", "Delete MethodInvocation(3154)", "Delete InfixExpression: +(3155)", "Delete MethodInvocation(3156)", "Delete ExpressionStatement(3157)", "Delete SimpleName: IllegalStateException(3158)", "Delete SimpleType: IllegalStateException(3159)", "Delete SimpleName: e(3160)", "Delete ClassInstanceCreation(3161)", "Delete ThrowStatement(3162)", "Delete Block(3163)", "Delete CatchClause(3164)", "Delete TryStatement(3165)", "Delete Block(3166)", "Delete SimpleName: Partition(3167)", "Delete SimpleType: Partition(3168)", "Delete SimpleName: I(3169)", "Delete SimpleType: I(3170)", "Delete SimpleName: V(3171)", "Delete SimpleType: V(3172)", "Delete SimpleName: E(3173)", "Delete SimpleType: E(3174)", "Delete ParameterizedType: Partition<I,V,E>(3175)", "Delete SimpleName: existing(3176)", "Delete NullLiteral(3177)", "Delete VariableDeclarationFragment(3178)", "Delete VariableDeclarationStatement(3179)", "Delete PrimitiveType: boolean(3180)", "Delete SimpleName: isOOC(3181)", "Delete BooleanLiteral: false(3182)", "Delete VariableDeclarationFragment(3183)", "Delete VariableDeclarationStatement(3184)", "Delete PrimitiveType: boolean(3185)", "Delete SimpleName: isNotDone(3186)", "Delete BooleanLiteral: true(3187)", "Delete VariableDeclarationFragment(3188)", "Delete VariableDeclarationStatement(3189)", "Delete SimpleName: State(3190)", "Delete SimpleType: State(3191)", "Delete SimpleName: state(3192)", "Delete VariableDeclarationFragment(3193)", "Delete VariableDeclarationStatement(3194)", "Delete SimpleName: isNotDone(3195)", "Delete SimpleName: state(3196)", "Delete SimpleName: meta(3197)", "Delete SimpleName: getState(3198)", "Delete MethodInvocation(3199)", "Delete Assignment: =(3200)", "Delete ExpressionStatement(3201)", "Delete SimpleName: state(3202)", "Delete SimpleName: ONDISK(3203)", "Delete SwitchCase(3204)", "Delete SimpleName: isOOC(3205)", "Delete BooleanLiteral: true(3206)", "Delete Assignment: =(3207)", "Delete ExpressionStatement(3208)", "Delete SimpleName: isNotDone(3209)", "Delete BooleanLiteral: false(3210)", "Delete Assignment: =(3211)", "Delete ExpressionStatement(3212)", "Delete SimpleName: meta(3213)", "Delete SimpleName: addToVertexCount(3214)", "Delete SimpleName: partition(3215)", "Delete SimpleName: getVertexCount(3216)", "Delete MethodInvocation(3217)", "Delete MethodInvocation(3218)", "Delete ExpressionStatement(3219)", "Delete BreakStatement(3220)", "Delete SimpleName: INACTIVE(3221)", "Delete SwitchCase(3222)", "Delete SimpleName: MetaPartition(3223)", "Delete SimpleType: MetaPartition(3224)", "Delete SimpleName: p(3225)", "Delete NullLiteral(3226)", "Delete VariableDeclarationFragment(3227)", "Delete VariableDeclarationStatement(3228)", "Delete SimpleName: meta(3229)", "Delete SimpleName: isSticky(3230)", "Delete MethodInvocation(3231)", "Delete SimpleName: existing(3232)", "Delete SimpleName: meta(3233)", "Delete SimpleName: getPartition(3234)", "Delete MethodInvocation(3235)", "Delete Assignment: =(3236)", "Delete ExpressionStatement(3237)", "Delete SimpleName: isNotDone(3238)", "Delete BooleanLiteral: false(3239)", "Delete Assignment: =(3240)", "Delete ExpressionStatement(3241)", "Delete BreakStatement(3242)", "Delete Block(3243)", "Delete IfStatement(3244)", "Delete SimpleName: lru(3245)", "Delete SimpleName: p(3246)", "Delete SimpleName: lru(3247)", "Delete SimpleName: get(3248)", "Delete SimpleName: meta(3249)", "Delete SimpleName: getId(3250)", "Delete MethodInvocation(3251)", "Delete MethodInvocation(3252)", "Delete Assignment: =(3253)", "Delete ExpressionStatement(3254)", "Delete Block(3255)", "Delete SynchronizedStatement(3256)", "Delete SimpleName: p(3257)", "Delete SimpleName: meta(3258)", "Delete InfixExpression: ==(3259)", "Delete SimpleName: existing(3260)", "Delete SimpleName: meta(3261)", "Delete SimpleName: getPartition(3262)", "Delete MethodInvocation(3263)", "Delete Assignment: =(3264)", "Delete ExpressionStatement(3265)", "Delete SimpleName: isNotDone(3266)", "Delete BooleanLiteral: false(3267)", "Delete Assignment: =(3268)", "Delete ExpressionStatement(3269)", "Delete Block(3270)", "Delete SimpleName: meta(3271)", "Delete SimpleName: wait(3272)", "Delete MethodInvocation(3273)", "Delete ExpressionStatement(3274)", "Delete Block(3275)", "Delete SimpleName: InterruptedException(3276)", "Delete SimpleType: InterruptedException(3277)", "Delete SimpleName: e(3278)", "Delete SingleVariableDeclaration(3279)", "Delete SimpleName: LOG(3280)", "Delete SimpleName: error(3281)", "Delete StringLiteral: \"addPartition: error while waiting on \"(3282)", "Delete StringLiteral: \"previously inactive partition: \"(3283)", "Delete SimpleName: e(3284)", "Delete SimpleName: getMessage(3285)", "Delete MethodInvocation(3286)", "Delete InfixExpression: +(3287)", "Delete MethodInvocation(3288)", "Delete ExpressionStatement(3289)", "Delete SimpleName: IllegalStateException(3290)", "Delete SimpleType: IllegalStateException(3291)", "Delete SimpleName: e(3292)", "Delete ClassInstanceCreation(3293)", "Delete ThrowStatement(3294)", "Delete Block(3295)", "Delete CatchClause(3296)", "Delete TryStatement(3297)", "Delete SimpleName: isNotDone(3298)", "Delete BooleanLiteral: true(3299)", "Delete Assignment: =(3300)", "Delete ExpressionStatement(3301)", "Delete Block(3302)", "Delete IfStatement(3303)", "Delete BreakStatement(3304)", "Delete SimpleName: ACTIVE(3305)", "Delete SwitchCase(3306)", "Delete SimpleName: existing(3307)", "Delete SimpleName: meta(3308)", "Delete SimpleName: getPartition(3309)", "Delete MethodInvocation(3310)", "Delete Assignment: =(3311)", "Delete ExpressionStatement(3312)", "Delete SimpleName: isNotDone(3313)", "Delete BooleanLiteral: false(3314)", "Delete Assignment: =(3315)", "Delete ExpressionStatement(3316)", "Delete BreakStatement(3317)", "Delete SwitchCase(3318)", "Delete SimpleName: IllegalStateException(3319)", "Delete SimpleType: IllegalStateException(3320)", "Delete StringLiteral: \"illegal state \"(3321)", "Delete SimpleName: state(3322)", "Delete StringLiteral: \" for partition \"(3323)", "Delete SimpleName: meta(3324)", "Delete SimpleName: getId(3325)", "Delete MethodInvocation(3326)", "Delete InfixExpression: +(3327)", "Delete ClassInstanceCreation(3328)", "Delete ThrowStatement(3329)", "Delete SwitchStatement(3330)", "Delete Block(3331)", "Delete WhileStatement(3332)", "Delete SimpleName: isOOC(3333)", "Delete SimpleName: addToOOCPartition(3334)", "Delete SimpleName: meta(3335)", "Delete SimpleName: partition(3336)", "Delete MethodInvocation(3337)", "Delete ExpressionStatement(3338)", "Delete Block(3339)", "Delete SimpleName: IOException(3340)", "Delete SimpleType: IOException(3341)", "Delete SimpleName: e(3342)", "Delete SingleVariableDeclaration(3343)", "Delete SimpleName: LOG(3344)", "Delete SimpleName: error(3345)", "Delete StringLiteral: \"addPartition: Failed while Adding to OOC Partition: \"(3346)", "Delete SimpleName: e(3347)", "Delete SimpleName: getMessage(3348)", "Delete MethodInvocation(3349)", "Delete InfixExpression: +(3350)", "Delete MethodInvocation(3351)", "Delete ExpressionStatement(3352)", "Delete SimpleName: IllegalStateException(3353)", "Delete SimpleType: IllegalStateException(3354)", "Delete SimpleName: e(3355)", "Delete ClassInstanceCreation(3356)", "Delete ThrowStatement(3357)", "Delete Block(3358)", "Delete CatchClause(3359)", "Delete TryStatement(3360)", "Delete Block(3361)", "Delete SimpleName: existing(3362)", "Delete SimpleName: addPartition(3363)", "Delete SimpleName: partition(3364)", "Delete MethodInvocation(3365)", "Delete ExpressionStatement(3366)", "Delete Block(3367)", "Delete IfStatement(3368)", "Delete Block(3369)", "Delete IfStatement(3370)", "Delete Block(3371)", "Delete SynchronizedStatement(3372)", "Delete Block(3373)", "Delete MethodDeclaration(3374)", "Delete TextElement: Task that deletes a partition to the store(3375)", "Delete TextElement: This function is thread-safe using the intrinsic lock of the meta(3376)", "Delete TextElement: partition object(3377)", "Delete TagElement(3378)", "Delete SimpleName: meta(3379)", "Delete TextElement:  meta partition container with the partition itself(3380)", "Delete TagElement: @param(3381)", "Delete Javadoc(3382)", "Delete Modifier: private(3383)", "Delete PrimitiveType: void(3384)", "Delete SimpleName: deletePartition(3385)", "Delete SimpleName: MetaPartition(3386)", "Delete SimpleType: MetaPartition(3387)", "Delete SimpleName: meta(3388)", "Delete SingleVariableDeclaration(3389)", "Delete SimpleName: meta(3390)", "Delete PrimitiveType: boolean(3391)", "Delete SimpleName: isDone(3392)", "Delete BooleanLiteral: false(3393)", "Delete VariableDeclarationFragment(3394)", "Delete VariableDeclarationStatement(3395)", "Delete PrimitiveType: int(3396)", "Delete SimpleName: id(3397)", "Delete SimpleName: meta(3398)", "Delete SimpleName: getId(3399)", "Delete MethodInvocation(3400)", "Delete VariableDeclarationFragment(3401)", "Delete VariableDeclarationStatement(3402)", "Delete SimpleName: State(3403)", "Delete SimpleType: State(3404)", "Delete SimpleName: state(3405)", "Delete VariableDeclarationFragment(3406)", "Delete VariableDeclarationStatement(3407)", "Delete SimpleName: isDone(3408)", "Delete PrefixExpression: !(3409)", "Delete SimpleName: state(3410)", "Delete SimpleName: meta(3411)", "Delete SimpleName: getState(3412)", "Delete MethodInvocation(3413)", "Delete Assignment: =(3414)", "Delete ExpressionStatement(3415)", "Delete SimpleName: state(3416)", "Delete SimpleName: ONDISK(3417)", "Delete SwitchCase(3418)", "Delete SimpleName: deletePartitionFiles(3419)", "Delete SimpleName: id(3420)", "Delete MethodInvocation(3421)", "Delete ExpressionStatement(3422)", "Delete SimpleName: isDone(3423)", "Delete BooleanLiteral: true(3424)", "Delete Assignment: =(3425)", "Delete ExpressionStatement(3426)", "Delete BreakStatement(3427)", "Delete SimpleName: INACTIVE(3428)", "Delete SwitchCase(3429)", "Delete SimpleName: MetaPartition(3430)", "Delete SimpleType: MetaPartition(3431)", "Delete SimpleName: p(3432)", "Delete VariableDeclarationFragment(3433)", "Delete VariableDeclarationStatement(3434)", "Delete SimpleName: meta(3435)", "Delete SimpleName: isSticky(3436)", "Delete MethodInvocation(3437)", "Delete SimpleName: isDone(3438)", "Delete BooleanLiteral: true(3439)", "Delete Assignment: =(3440)", "Delete ExpressionStatement(3441)", "Delete SimpleName: numPartitionsInMem(3442)", "Delete SimpleName: getAndDecrement(3443)", "Delete MethodInvocation(3444)", "Delete ExpressionStatement(3445)", "Delete BreakStatement(3446)", "Delete Block(3447)", "Delete IfStatement(3448)", "Delete SimpleName: lru(3449)", "Delete SimpleName: p(3450)", "Delete SimpleName: lru(3451)", "Delete SimpleName: remove(3452)", "Delete SimpleName: id(3453)", "Delete MethodInvocation(3454)", "Delete Assignment: =(3455)", "Delete ExpressionStatement(3456)", "Delete SimpleName: p(3457)", "Delete SimpleName: meta(3458)", "Delete InfixExpression: ==(3459)", "Delete SimpleName: p(3460)", "Delete SimpleName: getState(3461)", "Delete MethodInvocation(3462)", "Delete QualifiedName: State.INACTIVE(3463)", "Delete InfixExpression: ==(3464)", "Delete InfixExpression: &&(3465)", "Delete SimpleName: isDone(3466)", "Delete BooleanLiteral: true(3467)", "Delete Assignment: =(3468)", "Delete ExpressionStatement(3469)", "Delete SimpleName: numPartitionsInMem(3470)", "Delete SimpleName: getAndDecrement(3471)", "Delete MethodInvocation(3472)", "Delete ExpressionStatement(3473)", "Delete SimpleName: lru(3474)", "Delete SimpleName: notifyAll(3475)", "Delete MethodInvocation(3476)", "Delete ExpressionStatement(3477)", "Delete BreakStatement(3478)", "Delete Block(3479)", "Delete IfStatement(3480)", "Delete Block(3481)", "Delete SynchronizedStatement(3482)", "Delete SimpleName: meta(3483)", "Delete SimpleName: wait(3484)", "Delete MethodInvocation(3485)", "Delete ExpressionStatement(3486)", "Delete Block(3487)", "Delete SimpleName: InterruptedException(3488)", "Delete SimpleType: InterruptedException(3489)", "Delete SimpleName: e(3490)", "Delete SingleVariableDeclaration(3491)", "Delete SimpleName: LOG(3492)", "Delete SimpleName: error(3493)", "Delete StringLiteral: \"deletePartition: error while waiting on \"(3494)", "Delete StringLiteral: \"previously inactive partition: \"(3495)", "Delete SimpleName: e(3496)", "Delete SimpleName: getMessage(3497)", "Delete MethodInvocation(3498)", "Delete InfixExpression: +(3499)", "Delete MethodInvocation(3500)", "Delete ExpressionStatement(3501)", "Delete SimpleName: IllegalStateException(3502)", "Delete SimpleType: IllegalStateException(3503)", "Delete SimpleName: e(3504)", "Delete ClassInstanceCreation(3505)", "Delete ThrowStatement(3506)", "Delete Block(3507)", "Delete CatchClause(3508)", "Delete TryStatement(3509)", "Delete SimpleName: isDone(3510)", "Delete BooleanLiteral: false(3511)", "Delete Assignment: =(3512)", "Delete ExpressionStatement(3513)", "Delete BreakStatement(3514)", "Delete SimpleName: ACTIVE(3515)", "Delete SwitchCase(3516)", "Delete SimpleName: meta(3517)", "Delete SimpleName: wait(3518)", "Delete MethodInvocation(3519)", "Delete ExpressionStatement(3520)", "Delete Block(3521)", "Delete SimpleName: InterruptedException(3522)", "Delete SimpleType: InterruptedException(3523)", "Delete SimpleName: e(3524)", "Delete SingleVariableDeclaration(3525)", "Delete SimpleName: LOG(3526)", "Delete SimpleName: error(3527)", "Delete StringLiteral: \"deletePartition: error while waiting on \"(3528)", "Delete StringLiteral: \"active partition: \"(3529)", "Delete SimpleName: e(3530)", "Delete SimpleName: getMessage(3531)", "Delete MethodInvocation(3532)", "Delete InfixExpression: +(3533)", "Delete MethodInvocation(3534)", "Delete ExpressionStatement(3535)", "Delete SimpleName: IllegalStateException(3536)", "Delete SimpleType: IllegalStateException(3537)", "Delete SimpleName: e(3538)", "Delete ClassInstanceCreation(3539)", "Delete ThrowStatement(3540)", "Delete Block(3541)", "Delete CatchClause(3542)", "Delete TryStatement(3543)", "Delete BreakStatement(3544)", "Delete SwitchCase(3545)", "Delete SimpleName: IllegalStateException(3546)", "Delete SimpleType: IllegalStateException(3547)", "Delete StringLiteral: \"illegal state \"(3548)", "Delete SimpleName: state(3549)", "Delete StringLiteral: \" for partition \"(3550)", "Delete SimpleName: id(3551)", "Delete InfixExpression: +(3552)", "Delete ClassInstanceCreation(3553)", "Delete ThrowStatement(3554)", "Delete SwitchStatement(3555)", "Delete Block(3556)", "Delete WhileStatement(3557)", "Delete SimpleName: partitions(3558)", "Delete SimpleName: remove(3559)", "Delete SimpleName: id(3560)", "Delete MethodInvocation(3561)", "Delete ExpressionStatement(3562)", "Delete Block(3563)", "Delete SynchronizedStatement(3564)", "Delete Block(3565)", "Delete MethodDeclaration(3566)", "Delete TextElement: Partition container holding additional meta data associated with each(3567)", "Delete TextElement: partition.(3568)", "Delete TagElement(3569)", "Delete Javadoc(3570)", "Delete Modifier: private(3571)", "Delete SimpleName: MetaPartition(3572)", "Delete TextElement: ID of the partition (3573)", "Delete TagElement(3574)", "Delete Javadoc(3575)", "Delete Modifier: private(3576)", "Delete PrimitiveType: int(3577)", "Delete SimpleName: id(3578)", "Delete VariableDeclarationFragment(3579)", "Delete FieldDeclaration(3580)", "Delete TextElement: State in which the partition is (3581)", "Delete TagElement(3582)", "Delete Javadoc(3583)", "Delete Modifier: private(3584)", "Delete SimpleName: State(3585)", "Delete SimpleType: State(3586)", "Delete SimpleName: state(3587)", "Delete VariableDeclarationFragment(3588)", "Delete FieldDeclaration(3589)", "Delete TextElement: Counter used to keep track of the number of references retained by(3590)", "Delete TextElement: user-threads(3591)", "Delete TagElement(3592)", "Delete Javadoc(3593)", "Delete Modifier: private(3594)", "Delete PrimitiveType: int(3595)", "Delete SimpleName: references(3596)", "Delete VariableDeclarationFragment(3597)", "Delete FieldDeclaration(3598)", "Delete TextElement: Number of vertices contained in the partition (3599)", "Delete TagElement(3600)", "Delete Javadoc(3601)", "Delete Modifier: private(3602)", "Delete PrimitiveType: long(3603)", "Delete SimpleName: vertexCount(3604)", "Delete VariableDeclarationFragment(3605)", "Delete FieldDeclaration(3606)", "Delete TextElement: Previous number of vertices contained in the partition (3607)", "Delete TagElement(3608)", "Delete Javadoc(3609)", "Delete Modifier: private(3610)", "Delete PrimitiveType: long(3611)", "Delete SimpleName: prevVertexCount(3612)", "Delete VariableDeclarationFragment(3613)", "Delete FieldDeclaration(3614)", "Delete TextElement: Number of edges contained in the partition (3615)", "Delete TagElement(3616)", "Delete Javadoc(3617)", "Delete Modifier: private(3618)", "Delete PrimitiveType: long(3619)", "Delete SimpleName: edgeCount(3620)", "Delete VariableDeclarationFragment(3621)", "Delete FieldDeclaration(3622)", "Delete TextElement: Sticky bit; if set, this partition is never supposed to be(3623)", "Delete TextElement: written to disk(3624)", "Delete TagElement(3625)", "Delete Javadoc(3626)", "Delete Modifier: private(3627)", "Delete PrimitiveType: boolean(3628)", "Delete SimpleName: isSticky(3629)", "Delete VariableDeclarationFragment(3630)", "Delete FieldDeclaration(3631)", "Delete TextElement: the actual partition. Depending on the state of the partition,(3632)", "Delete TextElement: this object could be empty. (3633)", "Delete TagElement(3634)", "Delete Javadoc(3635)", "Delete Modifier: private(3636)", "Delete SimpleName: Partition(3637)", "Delete SimpleType: Partition(3638)", "Delete SimpleName: I(3639)", "Delete SimpleType: I(3640)", "Delete SimpleName: V(3641)", "Delete SimpleType: V(3642)", "Delete SimpleName: E(3643)", "Delete SimpleType: E(3644)", "Delete ParameterizedType: Partition<I,V,E>(3645)", "Delete SimpleName: partition(3646)", "Delete VariableDeclarationFragment(3647)", "Delete FieldDeclaration(3648)", "Delete TextElement: Initialization of the metadata enriched partition.(3649)", "Delete TagElement(3650)", "Delete SimpleName: id(3651)", "Delete TextElement:  id of the partition(3652)", "Delete TagElement: @param(3653)", "Delete Javadoc(3654)", "Delete Modifier: public(3655)", "Delete SimpleName: MetaPartition(3656)", "Delete PrimitiveType: int(3657)", "Delete SimpleName: id(3658)", "Delete SingleVariableDeclaration(3659)", "Delete ThisExpression(3660)", "Delete SimpleName: id(3661)", "Delete FieldAccess(3662)", "Delete SimpleName: id(3663)", "Delete Assignment: =(3664)", "Delete ExpressionStatement(3665)", "Delete ThisExpression(3666)", "Delete SimpleName: state(3667)", "Delete FieldAccess(3668)", "Delete QualifiedName: State.INIT(3669)", "Delete Assignment: =(3670)", "Delete ExpressionStatement(3671)", "Delete ThisExpression(3672)", "Delete SimpleName: references(3673)", "Delete FieldAccess(3674)", "Delete NumberLiteral: 0(3675)", "Delete Assignment: =(3676)", "Delete ExpressionStatement(3677)", "Delete ThisExpression(3678)", "Delete SimpleName: vertexCount(3679)", "Delete FieldAccess(3680)", "Delete NumberLiteral: 0(3681)", "Delete Assignment: =(3682)", "Delete ExpressionStatement(3683)", "Delete ThisExpression(3684)", "Delete SimpleName: prevVertexCount(3685)", "Delete FieldAccess(3686)", "Delete NumberLiteral: 0(3687)", "Delete Assignment: =(3688)", "Delete ExpressionStatement(3689)", "Delete ThisExpression(3690)", "Delete SimpleName: edgeCount(3691)", "Delete FieldAccess(3692)", "Delete NumberLiteral: 0(3693)", "Delete Assignment: =(3694)", "Delete ExpressionStatement(3695)", "Delete ThisExpression(3696)", "Delete SimpleName: isSticky(3697)", "Delete FieldAccess(3698)", "Delete BooleanLiteral: false(3699)", "Delete Assignment: =(3700)", "Delete ExpressionStatement(3701)", "Delete ThisExpression(3702)", "Delete SimpleName: partition(3703)", "Delete FieldAccess(3704)", "Delete NullLiteral(3705)", "Delete Assignment: =(3706)", "Delete ExpressionStatement(3707)", "Delete Block(3708)", "Delete MethodDeclaration(3709)", "Delete TextElement:  the id(3710)", "Delete TagElement: @return(3711)", "Delete Javadoc(3712)", "Delete Modifier: public(3713)", "Delete PrimitiveType: int(3714)", "Delete SimpleName: getId(3715)", "Delete SimpleName: id(3716)", "Delete ReturnStatement(3717)", "Delete Block(3718)", "Delete MethodDeclaration(3719)", "Delete TextElement:  the state(3720)", "Delete TagElement: @return(3721)", "Delete Javadoc(3722)", "Delete Modifier: public(3723)", "Delete SimpleName: State(3724)", "Delete SimpleType: State(3725)", "Delete SimpleName: getState(3726)", "Delete SimpleName: state(3727)", "Delete ReturnStatement(3728)", "Delete Block(3729)", "Delete MethodDeclaration(3730)", "Delete TextElement: This function sets the metadata for on-disk partition.(3731)", "Delete TagElement(3732)", "Delete SimpleName: partition(3733)", "Delete TextElement:  partition related to this container(3734)", "Delete TagElement: @param(3735)", "Delete Javadoc(3736)", "Delete Modifier: public(3737)", "Delete PrimitiveType: void(3738)", "Delete SimpleName: setOnDisk(3739)", "Delete SimpleName: Partition(3740)", "Delete SimpleType: Partition(3741)", "Delete SimpleName: I(3742)", "Delete SimpleType: I(3743)", "Delete SimpleName: V(3744)", "Delete SimpleType: V(3745)", "Delete SimpleName: E(3746)", "Delete SimpleType: E(3747)", "Delete ParameterizedType: Partition<I,V,E>(3748)", "Delete SimpleName: partition(3749)", "Delete SingleVariableDeclaration(3750)", "Delete ThisExpression(3751)", "Delete SimpleName: state(3752)", "Delete FieldAccess(3753)", "Delete QualifiedName: State.ONDISK(3754)", "Delete Assignment: =(3755)", "Delete ExpressionStatement(3756)", "Delete ThisExpression(3757)", "Delete SimpleName: partition(3758)", "Delete FieldAccess(3759)", "Delete NullLiteral(3760)", "Delete Assignment: =(3761)", "Delete ExpressionStatement(3762)", "Delete ThisExpression(3763)", "Delete SimpleName: vertexCount(3764)", "Delete FieldAccess(3765)", "Delete SimpleName: partition(3766)", "Delete SimpleName: getVertexCount(3767)", "Delete MethodInvocation(3768)", "Delete Assignment: =(3769)", "Delete ExpressionStatement(3770)", "Delete ThisExpression(3771)", "Delete SimpleName: edgeCount(3772)", "Delete FieldAccess(3773)", "Delete SimpleName: partition(3774)", "Delete SimpleName: getEdgeCount(3775)", "Delete MethodInvocation(3776)", "Delete Assignment: =(3777)", "Delete ExpressionStatement(3778)", "Delete Block(3779)", "Delete MethodDeclaration(3780)", "Delete Javadoc(3781)", "Delete Modifier: public(3782)", "Delete PrimitiveType: void(3783)", "Delete SimpleName: setActive(3784)", "Delete ThisExpression(3785)", "Delete SimpleName: setActive(3786)", "Delete NullLiteral(3787)", "Delete MethodInvocation(3788)", "Delete ExpressionStatement(3789)", "Delete Block(3790)", "Delete MethodDeclaration(3791)", "Delete SimpleName: partition(3792)", "Delete TextElement:  the partition associate to this container(3793)", "Delete TagElement: @param(3794)", "Delete Javadoc(3795)", "Delete Modifier: public(3796)", "Delete PrimitiveType: void(3797)", "Delete SimpleName: setActive(3798)", "Delete SimpleName: Partition(3799)", "Delete SimpleType: Partition(3800)", "Delete SimpleName: I(3801)", "Delete SimpleType: I(3802)", "Delete SimpleName: V(3803)", "Delete SimpleType: V(3804)", "Delete SimpleName: E(3805)", "Delete SimpleType: E(3806)", "Delete ParameterizedType: Partition<I,V,E>(3807)", "Delete SimpleName: partition(3808)", "Delete SingleVariableDeclaration(3809)", "Delete SimpleName: partition(3810)", "Delete NullLiteral(3811)", "Delete InfixExpression: !=(3812)", "Delete ThisExpression(3813)", "Delete SimpleName: partition(3814)", "Delete FieldAccess(3815)", "Delete SimpleName: partition(3816)", "Delete Assignment: =(3817)", "Delete ExpressionStatement(3818)", "Delete Block(3819)", "Delete IfStatement(3820)", "Delete ThisExpression(3821)", "Delete SimpleName: state(3822)", "Delete FieldAccess(3823)", "Delete QualifiedName: State.ACTIVE(3824)", "Delete Assignment: =(3825)", "Delete ExpressionStatement(3826)", "Delete ThisExpression(3827)", "Delete SimpleName: prevVertexCount(3828)", "Delete FieldAccess(3829)", "Delete ThisExpression(3830)", "Delete SimpleName: vertexCount(3831)", "Delete FieldAccess(3832)", "Delete Assignment: =(3833)", "Delete ExpressionStatement(3834)", "Delete ThisExpression(3835)", "Delete SimpleName: vertexCount(3836)", "Delete FieldAccess(3837)", "Delete NumberLiteral: 0(3838)", "Delete Assignment: =(3839)", "Delete ExpressionStatement(3840)", "Delete ThisExpression(3841)", "Delete SimpleName: incrementReferences(3842)", "Delete MethodInvocation(3843)", "Delete ExpressionStatement(3844)", "Delete Block(3845)", "Delete MethodDeclaration(3846)", "Delete SimpleName: state(3847)", "Delete TextElement:  the state to set(3848)", "Delete TagElement: @param(3849)", "Delete Javadoc(3850)", "Delete Modifier: public(3851)", "Delete PrimitiveType: void(3852)", "Delete SimpleName: setState(3853)", "Delete SimpleName: State(3854)", "Delete SimpleType: State(3855)", "Delete SimpleName: state(3856)", "Delete SingleVariableDeclaration(3857)", "Delete ThisExpression(3858)", "Delete SimpleName: state(3859)", "Delete FieldAccess(3860)", "Delete SimpleName: state(3861)", "Delete Assignment: =(3862)", "Delete ExpressionStatement(3863)", "Delete Block(3864)", "Delete MethodDeclaration(3865)", "Delete TextElement:  decremented references(3866)", "Delete TagElement: @return(3867)", "Delete Javadoc(3868)", "Delete Modifier: public(3869)", "Delete PrimitiveType: int(3870)", "Delete SimpleName: decrementReferences(3871)", "Delete SimpleName: references(3872)", "Delete NumberLiteral: 0(3873)", "Delete InfixExpression: >(3874)", "Delete SimpleName: references(3875)", "Delete NumberLiteral: 1(3876)", "Delete Assignment: -=(3877)", "Delete ExpressionStatement(3878)", "Delete Block(3879)", "Delete IfStatement(3880)", "Delete SimpleName: references(3881)", "Delete ReturnStatement(3882)", "Delete Block(3883)", "Delete MethodDeclaration(3884)", "Delete TextElement:  incremented references(3885)", "Delete TagElement: @return(3886)", "Delete Javadoc(3887)", "Delete Modifier: public(3888)", "Delete PrimitiveType: int(3889)", "Delete SimpleName: incrementReferences(3890)", "Delete SimpleName: references(3891)", "Delete PrefixExpression: ++(3892)", "Delete ReturnStatement(3893)", "Delete Block(3894)", "Delete MethodDeclaration(3895)", "Delete TextElement: set previous number of vertexes(3896)", "Delete TagElement(3897)", "Delete SimpleName: vertexCount(3898)", "Delete TextElement:  number of vertexes(3899)", "Delete TagElement: @param(3900)", "Delete Javadoc(3901)", "Delete Modifier: public(3902)", "Delete PrimitiveType: void(3903)", "Delete SimpleName: setPrevVertexCount(3904)", "Delete PrimitiveType: long(3905)", "Delete SimpleName: vertexCount(3906)", "Delete SingleVariableDeclaration(3907)", "Delete ThisExpression(3908)", "Delete SimpleName: prevVertexCount(3909)", "Delete FieldAccess(3910)", "Delete SimpleName: vertexCount(3911)", "Delete Assignment: =(3912)", "Delete ExpressionStatement(3913)", "Delete Block(3914)", "Delete MethodDeclaration(3915)", "Delete TextElement:  the vertexCount(3916)", "Delete TagElement: @return(3917)", "Delete Javadoc(3918)", "Delete Modifier: public(3919)", "Delete PrimitiveType: long(3920)", "Delete SimpleName: getPrevVertexCount(3921)", "Delete SimpleName: prevVertexCount(3922)", "Delete ReturnStatement(3923)", "Delete Block(3924)", "Delete MethodDeclaration(3925)", "Delete TextElement:  the vertexCount(3926)", "Delete TagElement: @return(3927)", "Delete Javadoc(3928)", "Delete Modifier: public(3929)", "Delete PrimitiveType: long(3930)", "Delete SimpleName: getVertexCount(3931)", "Delete SimpleName: vertexCount(3932)", "Delete ReturnStatement(3933)", "Delete Block(3934)", "Delete MethodDeclaration(3935)", "Delete TextElement:  the edgeCount(3936)", "Delete TagElement: @return(3937)", "Delete Javadoc(3938)", "Delete Modifier: public(3939)", "Delete PrimitiveType: long(3940)", "Delete SimpleName: getEdgeCount(3941)", "Delete SimpleName: edgeCount(3942)", "Delete ReturnStatement(3943)", "Delete Block(3944)", "Delete MethodDeclaration(3945)", "Delete SimpleName: inc(3946)", "Delete TextElement:  amount to add to the vertex count(3947)", "Delete TagElement: @param(3948)", "Delete Javadoc(3949)", "Delete Modifier: public(3950)", "Delete PrimitiveType: void(3951)", "Delete SimpleName: addToVertexCount(3952)", "Delete PrimitiveType: long(3953)", "Delete SimpleName: inc(3954)", "Delete SingleVariableDeclaration(3955)", "Delete ThisExpression(3956)", "Delete SimpleName: vertexCount(3957)", "Delete FieldAccess(3958)", "Delete SimpleName: inc(3959)", "Delete Assignment: +=(3960)", "Delete ExpressionStatement(3961)", "Delete ThisExpression(3962)", "Delete SimpleName: prevVertexCount(3963)", "Delete FieldAccess(3964)", "Delete SimpleName: vertexCount(3965)", "Delete Assignment: =(3966)", "Delete ExpressionStatement(3967)", "Delete Block(3968)", "Delete MethodDeclaration(3969)", "Delete TextElement:  the partition(3970)", "Delete TagElement: @return(3971)", "Delete Javadoc(3972)", "Delete Modifier: public(3973)", "Delete SimpleName: Partition(3974)", "Delete SimpleType: Partition(3975)", "Delete SimpleName: I(3976)", "Delete SimpleType: I(3977)", "Delete SimpleName: V(3978)", "Delete SimpleType: V(3979)", "Delete SimpleName: E(3980)", "Delete SimpleType: E(3981)", "Delete ParameterizedType: Partition<I,V,E>(3982)", "Delete SimpleName: getPartition(3983)", "Delete SimpleName: partition(3984)", "Delete ReturnStatement(3985)", "Delete Block(3986)", "Delete MethodDeclaration(3987)", "Delete SimpleName: partition(3988)", "Delete TextElement:  the partition to set(3989)", "Delete TagElement: @param(3990)", "Delete Javadoc(3991)", "Delete Modifier: public(3992)", "Delete PrimitiveType: void(3993)", "Delete SimpleName: setPartition(3994)", "Delete SimpleName: Partition(3995)", "Delete SimpleType: Partition(3996)", "Delete SimpleName: I(3997)", "Delete SimpleType: I(3998)", "Delete SimpleName: V(3999)", "Delete SimpleType: V(4000)", "Delete SimpleName: E(4001)", "Delete SimpleType: E(4002)", "Delete ParameterizedType: Partition<I,V,E>(4003)", "Delete SimpleName: partition(4004)", "Delete SingleVariableDeclaration(4005)", "Delete ThisExpression(4006)", "Delete SimpleName: partition(4007)", "Delete FieldAccess(4008)", "Delete SimpleName: partition(4009)", "Delete Assignment: =(4010)", "Delete ExpressionStatement(4011)", "Delete Block(4012)", "Delete MethodDeclaration(4013)", "Delete TextElement: Set sticky bit to this partition(4014)", "Delete TagElement(4015)", "Delete Javadoc(4016)", "Delete Modifier: public(4017)", "Delete PrimitiveType: void(4018)", "Delete SimpleName: setSticky(4019)", "Delete ThisExpression(4020)", "Delete SimpleName: isSticky(4021)", "Delete FieldAccess(4022)", "Delete BooleanLiteral: true(4023)", "Delete Assignment: =(4024)", "Delete ExpressionStatement(4025)", "Delete Block(4026)", "Delete MethodDeclaration(4027)", "Delete TextElement: Get sticky bit to this partition(4028)", "Delete TagElement(4029)", "Delete TextElement:  boolean ture iff the sticky bit is set(4030)", "Delete TagElement: @return(4031)", "Delete Javadoc(4032)", "Delete Modifier: public(4033)", "Delete PrimitiveType: boolean(4034)", "Delete SimpleName: isSticky(4035)", "Delete ThisExpression(4036)", "Delete SimpleName: isSticky(4037)", "Delete FieldAccess(4038)", "Delete ReturnStatement(4039)", "Delete Block(4040)", "Delete MethodDeclaration(4041)", "Delete SimpleName: Override(4042)", "Delete MarkerAnnotation(4043)", "Delete Modifier: public(4044)", "Delete SimpleName: String(4045)", "Delete SimpleType: String(4046)", "Delete SimpleName: toString(4047)", "Delete SimpleName: StringBuffer(4048)", "Delete SimpleType: StringBuffer(4049)", "Delete SimpleName: sb(4050)", "Delete SimpleName: StringBuffer(4051)", "Delete SimpleType: StringBuffer(4052)", "Delete ClassInstanceCreation(4053)", "Delete VariableDeclarationFragment(4054)", "Delete VariableDeclarationStatement(4055)", "Delete SimpleName: sb(4056)", "Delete SimpleName: append(4057)", "Delete StringLiteral: \"Meta Data: { \"(4058)", "Delete MethodInvocation(4059)", "Delete ExpressionStatement(4060)", "Delete SimpleName: sb(4061)", "Delete SimpleName: append(4062)", "Delete StringLiteral: \"ID: \"(4063)", "Delete SimpleName: id(4064)", "Delete StringLiteral: \"; \"(4065)", "Delete InfixExpression: +(4066)", "Delete MethodInvocation(4067)", "Delete ExpressionStatement(4068)", "Delete SimpleName: sb(4069)", "Delete SimpleName: append(4070)", "Delete StringLiteral: \"State: \"(4071)", "Delete SimpleName: state(4072)", "Delete StringLiteral: \"; \"(4073)", "Delete InfixExpression: +(4074)", "Delete MethodInvocation(4075)", "Delete ExpressionStatement(4076)", "Delete SimpleName: sb(4077)", "Delete SimpleName: append(4078)", "Delete StringLiteral: \"Number of References: \"(4079)", "Delete SimpleName: references(4080)", "Delete StringLiteral: \"; \"(4081)", "Delete InfixExpression: +(4082)", "Delete MethodInvocation(4083)", "Delete ExpressionStatement(4084)", "Delete SimpleName: sb(4085)", "Delete SimpleName: append(4086)", "Delete StringLiteral: \"Number of Vertices: \"(4087)", "Delete SimpleName: vertexCount(4088)", "Delete StringLiteral: \"; \"(4089)", "Delete InfixExpression: +(4090)", "Delete MethodInvocation(4091)", "Delete ExpressionStatement(4092)", "Delete SimpleName: sb(4093)", "Delete SimpleName: append(4094)", "Delete StringLiteral: \"Previous number of Vertices: \"(4095)", "Delete SimpleName: prevVertexCount(4096)", "Delete StringLiteral: \"; \"(4097)", "Delete InfixExpression: +(4098)", "Delete MethodInvocation(4099)", "Delete ExpressionStatement(4100)", "Delete SimpleName: sb(4101)", "Delete SimpleName: append(4102)", "Delete StringLiteral: \"Number of edges: \"(4103)", "Delete SimpleName: edgeCount(4104)", "Delete StringLiteral: \"; \"(4105)", "Delete InfixExpression: +(4106)", "Delete MethodInvocation(4107)", "Delete ExpressionStatement(4108)", "Delete SimpleName: sb(4109)", "Delete SimpleName: append(4110)", "Delete StringLiteral: \"Is Sticky: \"(4111)", "Delete SimpleName: isSticky(4112)", "Delete StringLiteral: \"; \"(4113)", "Delete InfixExpression: +(4114)", "Delete MethodInvocation(4115)", "Delete ExpressionStatement(4116)", "Delete SimpleName: sb(4117)", "Delete SimpleName: append(4118)", "Delete StringLiteral: \"Partition: \"(4119)", "Delete SimpleName: partition(4120)", "Delete StringLiteral: \"; }\"(4121)", "Delete InfixExpression: +(4122)", "Delete MethodInvocation(4123)", "Delete ExpressionStatement(4124)", "Delete SimpleName: sb(4125)", "Delete SimpleName: toString(4126)", "Delete MethodInvocation(4127)", "Delete ReturnStatement(4128)", "Delete Block(4129)", "Delete MethodDeclaration(4130)", "Delete TypeDeclaration: class(4131)", "Delete TypeDeclaration: class(4132)"]}}, {"PartitionStore_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: org.apache.giraph.utils.ExtendedDataOutput to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: org.apache.giraph.utils.VertexIdEdges to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 12", "MOV MethodDeclaration to TypeDeclaration: class at 15", "MOV MethodDeclaration to TypeDeclaration: class at 15", "MOV MethodDeclaration to TypeDeclaration: class at 15"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS PrimitiveType: long to MethodDeclaration at 3", "INS Modifier: abstract to MethodDeclaration at 2", "INS SimpleName: getPartitionVertexCount to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS SimpleName: getPartitionEdgeCount to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS Modifier: abstract to MethodDeclaration at 2", "INS PrimitiveType: long to MethodDeclaration at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS Block to MethodDeclaration at 4", "INS PrimitiveType: void to MethodDeclaration at 2", "INS TagElement to Javadoc at 0", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: shutdown to MethodDeclaration at 3", "INS TextElement: Called at the end of the computation. Called from a single thread. to TagElement at 0", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS TextElement: Called at the beginning of the computation. Called from a single thread. to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: initialize to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS TagElement to Javadoc at 0", "INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "UPDATE from void to boolean", "operations": ["UPD PrimitiveType: void from void to boolean"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV ParameterizedType: Partition<I,V,E> to MethodDeclaration at 3", "MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 3", "operations": ["INS PrimitiveType: void to MethodDeclaration at 3"]}, {"root": "UPDATE from getOrCreatePartition to startIteration", "operations": ["UPD SimpleName: getOrCreatePartition from getOrCreatePartition to startIteration", "UPD SimpleName: getOrCreatePartition from getOrCreatePartition to startIteration"]}, {"root": "UPDATE from removePartition to getNextPartition", "operations": ["UPD SimpleName: removePartition from removePartition to getNextPartition", "UPD SimpleName: putPartition from putPartition to getNextPartition"]}, {"root": "UPDATE from deletePartition to putPartition", "operations": ["UPD SimpleName: deletePartition from deletePartition to putPartition"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS Javadoc to MethodDeclaration at 0", "INS TagElement: @param to Javadoc at 2", "INS TextElement:  Output containing serialized vertex data to TagElement: @param at 1", "INS TagElement to Javadoc at 0", "INS TextElement: method is called right after receipt of vertex request in INPUT_SUPERSTEP. to TagElement at 1", "INS TextElement: Add vertices to a given partition from a given DataOutput instance. This to TagElement at 0", "INS SimpleName: extendedDataOutput to TagElement: @param at 0"]}, {"root": "UPDATE from long to void", "operations": ["UPD PrimitiveType: long from long to void", "UPD PrimitiveType: long from long to void"]}, {"root": "UPDATE from getPartitionVertexCount to addPartitionVertices", "operations": ["UPD SimpleName: getPartitionVertexCount from getPartitionVertexCount to addPartitionVertices"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: ExtendedDataOutput to SimpleType: ExtendedDataOutput at 0", "INS SimpleName: extendedDataOutput to SingleVariableDeclaration at 1", "INS SimpleType: ExtendedDataOutput to SingleVariableDeclaration at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @param to Javadoc at 2", "INS TextElement: Add edges to a given partition from a given send edge request. This to TagElement at 0", "INS TextElement:  Edges in the request to TagElement: @param at 1", "INS SimpleName: edges to TagElement: @param at 0", "INS TextElement: method is called right after receipt of edge request in INPUT_SUPERSTEP. to TagElement at 1"]}, {"root": "UPDATE from getPartitionEdgeCount to addPartitionEdges", "operations": ["UPD SimpleName: getPartitionEdgeCount from getPartitionEdgeCount to addPartitionEdges"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS ParameterizedType: VertexIdEdges<I,E> to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: VertexIdEdges to SimpleType: VertexIdEdges at 0", "INS SimpleName: I to SimpleType: I at 0", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleType: I to ParameterizedType: VertexIdEdges<I,E> at 1", "INS SimpleName: edges to SingleVariableDeclaration at 1", "INS SimpleType: E to ParameterizedType: VertexIdEdges<I,E> at 2", "INS SimpleType: VertexIdEdges to ParameterizedType: VertexIdEdges<I,E> at 0"]}, {"root": "INS Modifier: abstract to MethodDeclaration at 2", "operations": ["INS Modifier: abstract to MethodDeclaration at 2"]}, {"root": "UPDATE from shutdown to moveEdgesToVertices", "operations": ["UPD SimpleName: shutdown from shutdown to moveEdgesToVertices"]}, {"root": "UPDATE from Structure that stores partitions for a worker. to Structure that stores partitions for a worker. PartitionStore does not allow", "operations": ["UPD TextElement: Structure that stores partitions for a worker. from Structure that stores partitions for a worker. to Structure that stores partitions for a worker. PartitionStore does not allow"]}, {"root": "INS TextElement: random accesses to partitions except upon removal. to TagElement at 1", "operations": ["INS TextElement: random accesses to partitions except upon removal. to TagElement at 1"]}, {"root": "INS TextElement: This structure is thread-safe. to TagElement at 2", "operations": ["INS TextElement: This structure is thread-safe. to TagElement at 2"]}, {"root": "INS TagElement: @return to Javadoc at 2", "operations": ["INS TagElement: @return to Javadoc at 2", "INS TextElement:  Whether the addition made any change in the partition store to TagElement: @return at 0"]}, {"root": "INS TagElement to Javadoc at 0", "operations": ["INS TextElement: . Here is an example of the entire to TagElement at 19", "INS TextElement: Called from a single thread. to TagElement at 27", "INS SimpleName: getNextPartition to MethodRef at 0", "INS TextElement: In multiple threads iterating over the partitions: to TagElement at 23", "INS MethodRefParameter to MethodRef at 1", "INS TextElement: done, partition should be put back in the store using to TagElement at 17", "INS SimpleName: putPartition to MethodRef at 0", "INS TagElement: @link to TagElement at 11", "INS SimpleType: Partition to MethodRefParameter at 0", "INS TextElement: Each time  to TagElement at 13", "INS TextElement: the current iteration is returned. After processing of the partition is to TagElement at 16", "INS TextElement: cycle is necessary for to TagElement at 2", "INS TextElement: workflow: to TagElement at 20", "INS TextElement: loaded in INPUT_SUPERSTEP, to TagElement at 4", "INS TextElement: After an iteration is started, multiple threads can access the partition to TagElement at 9", "INS TextElement: partitionStore.startIteration(); to TagElement at 22", "INS TextElement: 3) saving vertices/edges in the output superstep. to TagElement at 6", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS TagElement to Javadoc at 0", "INS TextElement: In the main thread: to TagElement at 21", "INS MethodRef to TagElement: @link at 0", "INS TagElement: @link to TagElement at 14", "INS TagElement: @link to TagElement at 18", "INS TextElement: 1) moving edges (from edge store) to vertices after edge input splits are to TagElement at 3", "INS MethodRef to TagElement: @link at 0", "INS TextElement: Partition partition = partitionStore.getNextPartition(); to TagElement at 24", "INS TextElement: 2) computing partitions in each superstep (called once per superstep), to TagElement at 5", "INS TextElement: 4) any sort of populating a data-structure based on the partitions in to TagElement at 7", "INS TextElement: this store. to TagElement at 8", "INS TextElement: partitionStore.putPartition(partition); to TagElement at 26", "INS TextElement: ... do stuff with partition ... to TagElement at 25", "INS SimpleName: getNextPartition to MethodRef at 0", "INS TextElement: iteration cycle *must* iterate over *all* partitions. Usually an iteration to TagElement at 1", "INS MethodRef to TagElement: @link at 0"]}, {"root": "INS TagElement: @return to Javadoc at 1", "operations": ["INS TextElement:  The next partition to process to TagElement: @return at 0", "INS TagElement: @return to Javadoc at 1"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @param to Javadoc at 1"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @param to Javadoc at 1"]}, {"root": "INS SimpleType: Integer to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: Integer to SimpleType: Integer at 0"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @param to Javadoc at 1"]}, {"root": "INS SimpleType: Integer to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: Integer to SimpleType: Integer at 0"]}, {"root": "UPDATE from Add a new partition to the store or just the vertices from the partition to Add a *new* partition to the store. If the partition is already existed,", "operations": ["UPD TextElement: Add a new partition to the store or just the vertices from the partition from Add a new partition to the store or just the vertices from the partition to Add a *new* partition to the store. If the partition is already existed,"]}, {"root": "UPDATE from to the old partition. to it does not add the partition and returns false.", "operations": ["UPD TextElement: to the old partition. from to the old partition. to it does not add the partition and returns false."]}, {"root": "UPDATE from Remove a partition and return it. to Remove a partition and return it. Called from a single thread, *not* from", "operations": ["UPD TextElement: Remove a partition and return it. from Remove a partition and return it. to Remove a partition and return it. Called from a single thread, *not* from"]}, {"root": "INS TextElement: within an iteration cycle, and after INPUT_SUPERSTEP is complete. to TagElement at 1", "operations": ["INS TextElement: within an iteration cycle, and after INPUT_SUPERSTEP is complete. to TagElement at 1"]}, {"root": "UPDATE from Get or create a partition. Note: user has to put back to Start the iteration cycle to iterate over partitions. Note that each", "operations": ["UPD TextElement: Get or create a partition. Note: user has to put back from Get or create a partition. Note: user has to put back to Start the iteration cycle to iterate over partitions. Note that each"]}, {"root": "MOVE from TagElement", "operations": ["MOV TextElement: Get or create a partition. Note: user has to put back to TagElement at 0", "MOV TextElement: it to the store through  to TagElement at 10", "MOV TextElement:  after use. to TagElement at 12", "MOV TagElement: @link to TagElement at 2"]}, {"root": "UPDATE from it to the store through  to store using ", "operations": ["UPD TextElement: it to the store through  from it to the store through  to store using "]}, {"root": "UPDATE from  after use. to  to iterate over the partitions.", "operations": ["UPD TextElement:  after use. from  after use. to  to iterate over the partitions."]}, {"root": "UPDATE from  The requested partition (never null) to  is called an unprocessed partition in", "operations": ["UPD TextElement:  The requested partition (never null) from  The requested partition (never null) to  is called an unprocessed partition in"]}, {"root": "MOVE from TagElement", "operations": ["MOV TextElement:  The requested partition (never null) to TagElement at 15"]}, {"root": "INS TextElement: Return the next partition in iteration for the current superstep. to TagElement at 0", "operations": ["INS TextElement: Return the next partition in iteration for the current superstep. to TagElement at 0"]}, {"root": "UPDATE from Put a partition back to the store. Use this method to be put a partition to Note: user has to put back the partition to the store through", "operations": ["UPD TextElement: Put a partition back to the store. Use this method to be put a partition from Put a partition back to the store. Use this method to be put a partition to Note: user has to put back the partition to the store through"]}, {"root": "UPDATE from back after it has been retrieved through to  after use. Look at comments on", "operations": ["UPD TextElement: back after it has been retrieved through from back after it has been retrieved through to  after use. Look at comments on"]}, {"root": "UPDATE from . to  for more detail.", "operations": ["UPD TextElement: . from . to  for more detail."]}, {"root": "UPDATE from Just delete a partition to Put a partition back to the store. Use this method to put a partition", "operations": ["UPD TextElement: Just delete a partition from Just delete a partition to Put a partition back to the store. Use this method to put a partition"]}, {"root": "UPDATE from (more efficient than  to back after it has been retrieved through ", "operations": ["UPD TextElement: (more efficient than  from (more efficient than  to back after it has been retrieved through "]}, {"root": "UPDATE from  if the to .", "operations": ["UPD TextElement:  if the from  if the to ."]}, {"root": "UPDATE from partition is out of core). to Look at comments on ", "operations": ["UPD TextElement: partition is out of core). from partition is out of core). to Look at comments on "]}, {"root": "INS TagElement: @link to TagElement at 5", "operations": ["INS TagElement: @link to TagElement at 5", "INS MethodRef to TagElement: @link at 0", "INS SimpleName: startIteration to MethodRef at 0"]}, {"root": "INS TextElement:  for more detail. to TagElement at 6", "operations": ["INS TextElement:  for more detail. to TagElement at 6"]}, {"root": "UPDATE from Called at the end of the computation. to Move edges from edge store to partitions. This method is called from a", "operations": ["UPD TextElement: Called at the end of the computation. from Called at the end of the computation. to Move edges from edge store to partitions. This method is called from a"]}, {"root": "INS TextElement: *single thread* once all vertices and edges are read in INPUT_SUPERSTEP. to TagElement at 1", "operations": ["INS TextElement: *single thread* once all vertices and edges are read in INPUT_SUPERSTEP. to TagElement at 1"]}, {"root": "DEL TagElement", "operations": ["DEL TagElement"]}, {"root": "DEL TagElement: @return", "operations": ["DEL TagElement: @return"]}, {"root": "DEL MethodRefParameter", "operations": ["DEL SimpleName: Integer", "DEL MethodRefParameter", "DEL SimpleType: Integer"]}, {"root": "DEL PrimitiveType: void", "operations": ["DEL PrimitiveType: void"]}, {"root": "DEL MethodRefParameter", "operations": ["DEL SimpleName: partitionID", "DEL SimpleType: Integer", "DEL SimpleName: Integer", "DEL MethodRefParameter"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"PartitionStore_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(369) at 1", "Insert ImportDeclaration(5) into CompilationUnit(369) at 2", "Move MethodDeclaration(94) into TypeDeclaration: class(368) at 15", "Move MethodDeclaration(124) into TypeDeclaration: class(368) at 15", "Move MethodDeclaration(174) into TypeDeclaration: class(368) at 15", "Move MethodDeclaration(262) into TypeDeclaration: class(368) at 12", "Insert QualifiedName: org.apache.giraph.utils.ExtendedDataOutput(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: org.apache.giraph.utils.VertexIdEdges(4) into ImportDeclaration(5) at 0", "Insert MethodDeclaration(153) into TypeDeclaration: class(368) at 12", "Insert MethodDeclaration(170) into TypeDeclaration: class(368) at 13", "Insert MethodDeclaration(193) into TypeDeclaration: class(368) at 15", "Insert MethodDeclaration(201) into TypeDeclaration: class(368) at 16", "Update PrimitiveType: void(48) to boolean", "Move Javadoc(223) into MethodDeclaration(153) at 0", "Insert Modifier: public(145) into MethodDeclaration(153) at 1", "Insert Modifier: abstract(146) into MethodDeclaration(153) at 2", "Insert PrimitiveType: long(147) into MethodDeclaration(153) at 3", "Insert SimpleName: getPartitionVertexCount(148) into MethodDeclaration(153) at 4", "Move SingleVariableDeclaration(93) into MethodDeclaration(153) at 5", "Move Javadoc(239) into MethodDeclaration(170) at 0", "Insert Modifier: public(162) into MethodDeclaration(170) at 1", "Insert Modifier: abstract(163) into MethodDeclaration(170) at 2", "Insert PrimitiveType: long(164) into MethodDeclaration(170) at 3", "Insert SimpleName: getPartitionEdgeCount(165) into MethodDeclaration(170) at 4", "Move SingleVariableDeclaration(173) into MethodDeclaration(170) at 5", "Insert Javadoc(188) into MethodDeclaration(193) at 0", "Insert Modifier: public(189) into MethodDeclaration(193) at 1", "Insert PrimitiveType: void(190) into MethodDeclaration(193) at 2", "Insert SimpleName: shutdown(191) into MethodDeclaration(193) at 3", "Insert Block(192) into MethodDeclaration(193) at 4", "Insert Javadoc(196) into MethodDeclaration(201) at 0", "Insert Modifier: public(197) into MethodDeclaration(201) at 1", "Insert PrimitiveType: void(198) into MethodDeclaration(201) at 2", "Insert SimpleName: initialize(199) into MethodDeclaration(201) at 3", "Insert Block(200) into MethodDeclaration(201) at 4", "Insert PrimitiveType: void(243) into MethodDeclaration(245) at 3", "Update SimpleName: getOrCreatePartition(89) to startIteration", "Move ParameterizedType: Partition<I,V,E>(88) into MethodDeclaration(275) at 3", "Update SimpleName: putPartition(112) to getNextPartition", "Update SimpleName: deletePartition(169) to putPartition", "Move SingleVariableDeclaration(123) into MethodDeclaration(307) at 5", "Insert Javadoc(317) into MethodDeclaration(330) at 0", "Update PrimitiveType: long(226) to void", "Update SimpleName: getPartitionVertexCount(227) to addPartitionVertices", "Insert SingleVariableDeclaration(329) into MethodDeclaration(330) at 6", "Insert Javadoc(340) into MethodDeclaration(358) at 0", "Update PrimitiveType: long(242) to void", "Update SimpleName: getPartitionEdgeCount(243) to addPartitionEdges", "Insert SingleVariableDeclaration(357) into MethodDeclaration(358) at 6", "Insert Modifier: abstract(364) into MethodDeclaration(367) at 2", "Update SimpleName: shutdown(268) to moveEdgesToVertices", "Update TextElement: Structure that stores partitions for a worker.(6) to Structure that stores partitions for a worker. PartitionStore does not allow", "Insert TextElement: random accesses to partitions except upon removal.(11) into TagElement(13) at 1", "Insert TextElement: This structure is thread-safe.(12) into TagElement(13) at 2", "Insert TagElement: @return(52) into Javadoc(53) at 2", "Insert TagElement(187) into Javadoc(188) at 0", "Insert TagElement(195) into Javadoc(196) at 0", "Insert TagElement(239) into Javadoc(240) at 0", "Insert TagElement: @return(261) into Javadoc(262) at 1", "Move TagElement: @param(107) into Javadoc(291) at 1", "Insert TagElement(310) into Javadoc(317) at 0", "Move TagElement: @param(164) into Javadoc(317) at 1", "Insert TagElement: @param(316) into Javadoc(317) at 2", "Insert SimpleType: Integer(323) into SingleVariableDeclaration(325) at 0", "Insert SimpleType: ExtendedDataOutput(327) into SingleVariableDeclaration(329) at 0", "Insert SimpleName: extendedDataOutput(328) into SingleVariableDeclaration(329) at 1", "Insert TagElement(333) into Javadoc(340) at 0", "Move TagElement: @param(74) into Javadoc(340) at 1", "Insert TagElement: @param(339) into Javadoc(340) at 2", "Insert SimpleType: Integer(346) into SingleVariableDeclaration(348) at 0", "Insert ParameterizedType: VertexIdEdges<I,E>(355) into SingleVariableDeclaration(357) at 0", "Insert SimpleName: edges(356) into SingleVariableDeclaration(357) at 1", "Update TextElement: Add a new partition to the store or just the vertices from the partition(39) to Add a *new* partition to the store. If the partition is already existed,", "Update TextElement: to the old partition.(40) to it does not add the partition and returns false.", "Insert TextElement:  Whether the addition made any change in the partition store(51) into TagElement: @return(52) at 0", "Update TextElement: Remove a partition and return it.(125) to Remove a partition and return it. Called from a single thread, *not* from", "Insert TextElement: within an iteration cycle, and after INPUT_SUPERSTEP is complete.(71) into TagElement(72) at 1", "Insert TextElement: Called at the end of the computation. Called from a single thread.(186) into TagElement(187) at 0", "Insert TextElement: Called at the beginning of the computation. Called from a single thread.(194) into TagElement(195) at 0", "Update TextElement: Get or create a partition. Note: user has to put back(62) to Start the iteration cycle to iterate over partitions. Note that each", "Move TextElement: Get or create a partition. Note: user has to put back(62) into TagElement(239) at 0", "Insert TextElement: iteration cycle *must* iterate over *all* partitions. Usually an iteration(203) into TagElement(239) at 1", "Insert TextElement: cycle is necessary for(204) into TagElement(239) at 2", "Insert TextElement: 1) moving edges (from edge store) to vertices after edge input splits are(205) into TagElement(239) at 3", "Insert TextElement: loaded in INPUT_SUPERSTEP,(206) into TagElement(239) at 4", "Insert TextElement: 2) computing partitions in each superstep (called once per superstep),(207) into TagElement(239) at 5", "Insert TextElement: 3) saving vertices/edges in the output superstep.(208) into TagElement(239) at 6", "Insert TextElement: 4) any sort of populating a data-structure based on the partitions in(209) into TagElement(239) at 7", "Insert TextElement: this store.(210) into TagElement(239) at 8", "Insert TextElement: After an iteration is started, multiple threads can access the partition(211) into TagElement(239) at 9", "Update TextElement: it to the store through (63) to store using ", "Move TextElement: it to the store through (63) into TagElement(239) at 10", "Insert TagElement: @link(215) into TagElement(239) at 11", "Update TextElement:  after use.(70) to  to iterate over the partitions.", "Move TextElement:  after use.(70) into TagElement(239) at 12", "Insert TextElement: Each time (217) into TagElement(239) at 13", "Insert TagElement: @link(220) into TagElement(239) at 14", "Update TextElement:  The requested partition (never null)(75) to  is called an unprocessed partition in", "Move TextElement:  The requested partition (never null)(75) into TagElement(239) at 15", "Insert TextElement: the current iteration is returned. After processing of the partition is(222) into TagElement(239) at 16", "Insert TextElement: done, partition should be put back in the store using(223) into TagElement(239) at 17", "Insert TagElement: @link(229) into TagElement(239) at 18", "Insert TextElement: . Here is an example of the entire(230) into TagElement(239) at 19", "Insert TextElement: workflow:(231) into TagElement(239) at 20", "Insert TextElement: In the main thread:(232) into TagElement(239) at 21", "Insert TextElement: partitionStore.startIteration();(233) into TagElement(239) at 22", "Insert TextElement: In multiple threads iterating over the partitions:(234) into TagElement(239) at 23", "Insert TextElement: Partition partition = partitionStore.getNextPartition();(235) into TagElement(239) at 24", "Insert TextElement: ... do stuff with partition ...(236) into TagElement(239) at 25", "Insert TextElement: partitionStore.putPartition(partition);(237) into TagElement(239) at 26", "Insert TextElement: Called from a single thread.(238) into TagElement(239) at 27", "Insert TextElement: Return the next partition in iteration for the current superstep.(246) into TagElement(259) at 0", "Update TextElement: Put a partition back to the store. Use this method to be put a partition(95) to Note: user has to put back the partition to the store through", "Move TagElement: @link(69) into TagElement(259) at 2", "Update TextElement: back after it has been retrieved through(96) to  after use. Look at comments on", "Update TextElement: .(103) to  for more detail.", "Insert TextElement:  The next partition to process(260) into TagElement: @return(261) at 0", "Update TextElement: Just delete a partition(150) to Put a partition back to the store. Use this method to put a partition", "Update TextElement: (more efficient than (151) to back after it has been retrieved through ", "Update TextElement:  if the(159) to .", "Update TextElement: partition is out of core).(160) to Look at comments on ", "Insert TagElement: @link(285) into TagElement(287) at 5", "Insert TextElement:  for more detail.(286) into TagElement(287) at 6", "Insert TextElement: Add vertices to a given partition from a given DataOutput instance. This(308) into TagElement(310) at 0", "Insert TextElement: method is called right after receipt of vertex request in INPUT_SUPERSTEP.(309) into TagElement(310) at 1", "Insert SimpleName: extendedDataOutput(314) into TagElement: @param(316) at 0", "Insert TextElement:  Output containing serialized vertex data(315) into TagElement: @param(316) at 1", "Insert SimpleName: Integer(322) into SimpleType: Integer(323) at 0", "Insert SimpleName: ExtendedDataOutput(326) into SimpleType: ExtendedDataOutput(327) at 0", "Insert TextElement: Add edges to a given partition from a given send edge request. This(331) into TagElement(333) at 0", "Insert TextElement: method is called right after receipt of edge request in INPUT_SUPERSTEP.(332) into TagElement(333) at 1", "Insert SimpleName: edges(337) into TagElement: @param(339) at 0", "Insert TextElement:  Edges in the request(338) into TagElement: @param(339) at 1", "Insert SimpleName: Integer(345) into SimpleType: Integer(346) at 0", "Insert SimpleType: VertexIdEdges(350) into ParameterizedType: VertexIdEdges<I,E>(355) at 0", "Insert SimpleType: I(352) into ParameterizedType: VertexIdEdges<I,E>(355) at 1", "Insert SimpleType: E(354) into ParameterizedType: VertexIdEdges<I,E>(355) at 2", "Update TextElement: Called at the end of the computation.(263) to Move edges from edge store to partitions. This method is called from a", "Insert TextElement: *single thread* once all vertices and edges are read in INPUT_SUPERSTEP.(360) into TagElement(361) at 1", "Insert MethodRef(214) into TagElement: @link(215) at 0", "Insert MethodRef(219) into TagElement: @link(220) at 0", "Insert MethodRef(228) into TagElement: @link(229) at 0", "Insert MethodRef(284) into TagElement: @link(285) at 0", "Insert SimpleName: VertexIdEdges(349) into SimpleType: VertexIdEdges(350) at 0", "Insert SimpleName: I(351) into SimpleType: I(352) at 0", "Insert SimpleName: E(353) into SimpleType: E(354) at 0", "Insert SimpleName: getNextPartition(213) into MethodRef(214) at 0", "Insert SimpleName: getNextPartition(218) into MethodRef(219) at 0", "Insert SimpleName: putPartition(224) into MethodRef(228) at 0", "Insert MethodRefParameter(227) into MethodRef(228) at 1", "Update SimpleName: getOrCreatePartition(97) to startIteration", "Update SimpleName: removePartition(152) to getNextPartition", "Insert SimpleName: startIteration(283) into MethodRef(284) at 0", "Insert SimpleType: Partition(226) into MethodRefParameter(227) at 0", "Insert SimpleName: Partition(225) into SimpleType: Partition(226) at 0", "Delete TagElement(71)", "Delete TagElement: @return(76)", "Delete SimpleName: Integer(98)", "Delete SimpleType: Integer(99)", "Delete MethodRefParameter(100)", "Delete PrimitiveType: void(111)", "Delete SimpleName: Integer(153)", "Delete SimpleType: Integer(154)", "Delete SimpleName: partitionID(155)", "Delete MethodRefParameter(156)", "Delete PrimitiveType: int(228)", "Delete PrimitiveType: int(244)", "Delete Block(269)"]}}, {"SimplePartitionStore_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: org.apache.giraph.bsp.CentralizedServiceWorker to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: org.apache.giraph.edge.EdgeStore to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: org.apache.giraph.edge.EdgeStoreFactory to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: org.apache.giraph.utils.ExtendedDataOutput to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: org.apache.giraph.utils.VertexIdEdges to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: org.apache.giraph.utils.VertexIterator to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: java.util.concurrent.ArrayBlockingQueue to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: java.util.concurrent.BlockingQueue to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 21", "MOV MethodDeclaration to TypeDeclaration: class at 21"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS ParameterizedType: EdgeStore<I,V,E> to FieldDeclaration at 3", "INS TagElement to Javadoc at 0", "INS SimpleName: edgeStore to VariableDeclarationFragment at 0", "INS Javadoc to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleType: EdgeStore to ParameterizedType: EdgeStore<I,V,E> at 0", "INS SimpleType: E to ParameterizedType: EdgeStore<I,V,E> at 3", "INS SimpleName: I to SimpleType: I at 0", "INS TextElement: Edge store for this worker.  to TagElement at 0", "INS SimpleName: V to SimpleType: V at 0", "INS SimpleName: E to SimpleType: E at 0", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS SimpleType: I to ParameterizedType: EdgeStore<I,V,E> at 1", "INS SimpleType: V to ParameterizedType: EdgeStore<I,V,E> at 2", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: EdgeStore to SimpleType: EdgeStore at 0", "INS Modifier: private to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS TagElement to Javadoc at 0", "INS SimpleName: V to SimpleType: V at 0", "INS ParameterizedType: Partition<I,V,E> to ParameterizedType: BlockingQueue<Partition<I,V,E>> at 1", "INS SimpleName: I to SimpleType: I at 0", "INS SimpleName: BlockingQueue to SimpleType: BlockingQueue at 0", "INS Javadoc to FieldDeclaration at 0", "INS SimpleType: BlockingQueue to ParameterizedType: BlockingQueue<Partition<I,V,E>> at 0", "INS Modifier: private to FieldDeclaration at 1", "INS SimpleType: V to ParameterizedType: Partition<I,V,E> at 2", "INS TextElement: Queue of partitions to be precessed in a superstep  to TagElement at 0", "INS SimpleType: I to ParameterizedType: Partition<I,V,E> at 1", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleName: partitionQueue to VariableDeclarationFragment at 0", "INS ParameterizedType: BlockingQueue<Partition<I,V,E>> to FieldDeclaration at 2", "INS SimpleType: Partition to ParameterizedType: Partition<I,V,E> at 0", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS SimpleType: E to ParameterizedType: Partition<I,V,E> at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS InfixExpression: == to ReturnStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS Block to MethodDeclaration at 5", "INS ReturnStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 21", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 21", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS ExpressionStatement to Block at 0", "INS ThrowStatement to Block at 0", "INS SimpleName: partition to SingleVariableDeclaration at 1", "INS InfixExpression: && to IfStatement at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: partitionQueue to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: partitionQueue to InfixExpression: != at 0", "INS StringLiteral: \" not yet processed.\" to InfixExpression: + at 2", "INS SimpleType: V to ParameterizedType: Partition<I,V,E> at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: partition to MethodInvocation at 2", "INS StringLiteral: \"of the partitions from previous iteration over partition store are\" to InfixExpression: + at 1", "INS Block to IfStatement at 1", "INS SimpleName: partitions to MethodInvocation at 0", "INS ParameterizedType: Partition<I,V,E> to SingleVariableDeclaration at 0", "INS SimpleName: values to MethodInvocation at 1", "INS SimpleName: I to SimpleType: I at 0", "INS SimpleName: E to SimpleType: E at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: V to SimpleType: V at 0", "INS InfixExpression: + to ClassInstanceCreation at 1", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: I to ParameterizedType: Partition<I,V,E> at 1", "INS StringLiteral: \"startIteration: It seems that some of \" to InfixExpression: + at 0", "INS SimpleType: Partition to ParameterizedType: Partition<I,V,E> at 0", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: startIteration to MethodDeclaration at 3", "INS ClassInstanceCreation to ThrowStatement at 0", "INS EnhancedForStatement to Block at 2", "INS InfixExpression: != to InfixExpression: && at 0", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleType: E to ParameterizedType: Partition<I,V,E> at 3", "INS Block to EnhancedForStatement at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 22", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: Partition to ParameterizedType: Partition<I,V,E> at 0", "INS SimpleType: E to ParameterizedType: Partition<I,V,E> at 3", "INS SimpleType: V to ParameterizedType: Partition<I,V,E> at 2", "INS MethodDeclaration to TypeDeclaration: class at 22", "INS SimpleName: getNextPartition to MethodDeclaration at 3", "INS SimpleName: V to SimpleType: V at 0", "INS SimpleName: I to SimpleType: I at 0", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleType: I to ParameterizedType: Partition<I,V,E> at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: Partition to SimpleType: Partition at 0", "INS ParameterizedType: Partition<I,V,E> to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS SimpleName: vertexIterator to VariableDeclarationFragment at 0", "INS ParameterizedType: VertexIterator<I,V,E> to ClassInstanceCreation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: partition to MethodInvocation at 1", "INS SimpleName: VertexIterator to SimpleType: VertexIterator at 0", "INS SimpleName: extendedDataOutput to ClassInstanceCreation at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: I to ParameterizedType: VertexIterator<I,V,E> at 1", "INS SimpleType: ExtendedDataOutput to SingleVariableDeclaration at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: E to ParameterizedType: VertexIterator<I,V,E> at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: partitionId to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: V to ParameterizedType: VertexIterator<I,V,E> at 2", "INS SimpleName: I to SimpleType: I at 0", "INS SimpleType: E to ParameterizedType: VertexIterator<I,V,E> at 3", "INS SimpleType: I to ParameterizedType: VertexIterator<I,V,E> at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: partition to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: conf to ClassInstanceCreation at 2", "INS SimpleName: extendedDataOutput to SingleVariableDeclaration at 1", "INS SimpleName: getOrCreatePartition to MethodInvocation at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: ExtendedDataOutput to SimpleType: ExtendedDataOutput at 0", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleName: partitionId to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 25", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 6", "INS SimpleType: V to ParameterizedType: VertexIterator<I,V,E> at 2", "INS SimpleType: VertexIterator to ParameterizedType: VertexIterator<I,V,E> at 0", "INS ParameterizedType: VertexIterator<I,V,E> to VariableDeclarationStatement at 0", "INS SimpleName: putPartition to MethodInvocation at 0", "INS SimpleName: V to SimpleType: V at 0", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleName: I to SimpleType: I at 0", "INS SimpleName: addPartitionVertices to MethodDeclaration at 3", "INS SimpleName: V to SimpleType: V at 0", "INS SimpleType: VertexIterator to ParameterizedType: VertexIterator<I,V,E> at 0", "INS SimpleName: VertexIterator to SimpleType: VertexIterator at 0", "INS ExpressionStatement to Block at 3", "INS VariableDeclarationStatement to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 27", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: edgeStore to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 27", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: moveEdgesToVertices to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: moveEdgesToVertices to MethodDeclaration at 3", "INS ExpressionStatement to Block at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: I to SimpleType: I at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: V to SimpleType: V at 0", "INS SimpleType: V to ParameterizedType: CentralizedServiceWorker<I,V,E> at 2", "INS SimpleType: E to ParameterizedType: CentralizedServiceWorker<I,V,E> at 3", "INS SimpleName: E to SimpleType: E at 0", "INS SimpleName: serviceWorker to SingleVariableDeclaration at 1", "INS ParameterizedType: CentralizedServiceWorker<I,V,E> to SingleVariableDeclaration at 0", "INS SimpleType: CentralizedServiceWorker to ParameterizedType: CentralizedServiceWorker<I,V,E> at 0", "INS SimpleName: CentralizedServiceWorker to SimpleType: CentralizedServiceWorker at 0", "INS SimpleType: I to ParameterizedType: CentralizedServiceWorker<I,V,E> at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV PrimitiveType: void to MethodDeclaration at 2", "MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV Modifier: public to MethodDeclaration at 1", "MOV SimpleName: addPartition to MethodDeclaration at 3"]}, {"root": "UPDATE from void to boolean", "operations": ["UPD PrimitiveType: void from void to boolean"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TextElement: Get or create a partition. to TagElement at 0", "INS TextElement:  The requested partition (never null) to TagElement: @return at 0", "INS TagElement to Javadoc at 0", "INS TextElement:  Partition Id to TagElement: @param at 1", "INS Javadoc to MethodDeclaration at 0", "INS TagElement: @return to Javadoc at 2", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: partitionId to TagElement: @param at 0"]}, {"root": "UPDATE from public to private", "operations": ["UPD Modifier: public from public to private"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS SimpleName: addPartitionEdges to MethodDeclaration at 3", "operations": ["INS SimpleName: addPartitionEdges to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: partitionId to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: E to SimpleType: E at 0", "INS SimpleName: I to SimpleType: I at 0", "INS SimpleName: VertexIdEdges to SimpleType: VertexIdEdges at 0", "INS SimpleType: E to ParameterizedType: VertexIdEdges<I,E> at 2", "INS ParameterizedType: VertexIdEdges<I,E> to SingleVariableDeclaration at 0", "INS SimpleType: VertexIdEdges to ParameterizedType: VertexIdEdges<I,E> at 0", "INS SimpleName: edges to SingleVariableDeclaration at 1", "INS SimpleType: I to ParameterizedType: VertexIdEdges<I,E> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "INS TagElement: @param to Javadoc at 3", "operations": ["INS TagElement: @param to Javadoc at 3", "INS TextElement:  Service worker to TagElement: @param at 1", "INS SimpleName: serviceWorker to TagElement: @param at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleType: EdgeStoreFactory to ParameterizedType: EdgeStoreFactory<I,V,E> at 0", "INS SimpleName: EdgeStoreFactory to SimpleType: EdgeStoreFactory at 0", "INS SimpleType: E to ParameterizedType: EdgeStoreFactory<I,V,E> at 3", "INS SimpleName: V to SimpleType: V at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ParameterizedType: EdgeStoreFactory<I,V,E> to VariableDeclarationStatement at 0", "INS SimpleName: edgeStoreFactory to VariableDeclarationFragment at 0", "INS SimpleName: I to SimpleType: I at 0", "INS SimpleName: createEdgeStoreFactory to MethodInvocation at 1", "INS SimpleName: conf to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleType: I to ParameterizedType: EdgeStoreFactory<I,V,E> at 1", "INS SimpleName: E to SimpleType: E at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleType: V to ParameterizedType: EdgeStoreFactory<I,V,E> at 2"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: initialize to MethodInvocation at 1", "INS SimpleName: serviceWorker to MethodInvocation at 2", "INS SimpleName: context to MethodInvocation at 4", "INS SimpleName: edgeStoreFactory to MethodInvocation at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: conf to MethodInvocation at 3"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: edgeStoreFactory to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: edgeStore to Assignment: = at 0", "INS SimpleName: newStore to MethodInvocation at 1", "INS ExpressionStatement to Block at 4"]}, {"root": "INS SimpleType: Integer to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: Integer to SimpleType: Integer at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: poll to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: partitionQueue to MethodInvocation at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Partition<I,V,E> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from InfixExpression: ==", "operations": ["MOV MethodInvocation to InfixExpression: == at 0"]}, {"root": "INS SimpleName: partitionQueue to Assignment: = at 0", "operations": ["INS SimpleName: partitionQueue to Assignment: = at 0"]}, {"root": "INS ClassInstanceCreation to Assignment: = at 1", "operations": ["INS SimpleName: Partition to SimpleType: Partition at 0", "INS SimpleName: ArrayBlockingQueue to SimpleType: ArrayBlockingQueue at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleType: V to ParameterizedType: Partition<I,V,E> at 2", "INS ParameterizedType: ArrayBlockingQueue<Partition<I,V,E>> to ClassInstanceCreation at 0", "INS SimpleName: getNumPartitions to MethodInvocation at 0", "INS SimpleType: E to ParameterizedType: Partition<I,V,E> at 3", "INS SimpleName: V to SimpleType: V at 0", "INS SimpleName: I to SimpleType: I at 0", "INS ClassInstanceCreation to Assignment: = at 1", "INS SimpleType: ArrayBlockingQueue to ParameterizedType: ArrayBlockingQueue<Partition<I,V,E>> at 0", "INS SimpleType: I to ParameterizedType: Partition<I,V,E> at 1", "INS SimpleType: Partition to ParameterizedType: Partition<I,V,E> at 0", "INS ParameterizedType: Partition<I,V,E> to ParameterizedType: ArrayBlockingQueue<Partition<I,V,E>> at 1", "INS SimpleName: E to SimpleType: E at 0"]}, {"root": "UPDATE from oldPartition to partition", "operations": ["UPD SimpleName: oldPartition from oldPartition to partition"]}, {"root": "UPDATE from addPartition to addPartitionVertices", "operations": ["UPD SimpleName: addPartition from addPartition to addPartitionVertices"]}, {"root": "UPDATE from partition to vertexIterator", "operations": ["UPD SimpleName: partition from partition to vertexIterator"]}, {"root": "UPDATE from partitions to edgeStore", "operations": ["UPD SimpleName: partitions from partitions to edgeStore"]}, {"root": "UPDATE from remove to addPartitionEdges", "operations": ["UPD SimpleName: remove from remove to addPartitionEdges"]}, {"root": "INS SimpleName: edges to MethodInvocation at 3", "operations": ["INS SimpleName: edges to MethodInvocation at 3"]}, {"root": "UPDATE from partition to partitionQueue", "operations": ["UPD SimpleName: partition from partition to partitionQueue"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getId to MethodInvocation at 1", "MOV SimpleName: partition to MethodInvocation at 0"]}, {"root": "UPDATE from getId to isEmpty", "operations": ["UPD SimpleName: getId from getId to isEmpty"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: oldPartition", "DEL InfixExpression: ==", "DEL Block", "DEL SimpleName: partitions", "DEL SimpleName: oldPartition", "DEL IfStatement", "DEL IfStatement", "DEL NullLiteral", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL Block", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL SimpleName: oldPartition", "DEL NullLiteral", "DEL Block", "DEL SimpleName: get", "DEL MethodDeclaration"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL PrimitiveType: int", "DEL SingleVariableDeclaration", "DEL SimpleName: partitionId"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL SimpleName: oldPartition", "operations": ["DEL SimpleName: oldPartition"]}, {"root": "DEL SimpleName: deletePartition", "operations": ["DEL SimpleName: deletePartition"]}]}}, {"SimplePartitionStore_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(695) at 2", "Insert ImportDeclaration(9) into CompilationUnit(695) at 4", "Insert ImportDeclaration(11) into CompilationUnit(695) at 5", "Insert ImportDeclaration(13) into CompilationUnit(695) at 6", "Insert ImportDeclaration(15) into CompilationUnit(695) at 7", "Insert ImportDeclaration(17) into CompilationUnit(695) at 8", "Insert ImportDeclaration(25) into CompilationUnit(695) at 12", "Insert ImportDeclaration(27) into CompilationUnit(695) at 13", "Move MethodDeclaration(296) into TypeDeclaration: class(694) at 21", "Move MethodDeclaration(336) into TypeDeclaration: class(694) at 21", "Insert QualifiedName: org.apache.giraph.bsp.CentralizedServiceWorker(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: org.apache.giraph.edge.EdgeStore(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: org.apache.giraph.edge.EdgeStoreFactory(10) into ImportDeclaration(11) at 0", "Insert QualifiedName: org.apache.giraph.utils.ExtendedDataOutput(12) into ImportDeclaration(13) at 0", "Insert QualifiedName: org.apache.giraph.utils.VertexIdEdges(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: org.apache.giraph.utils.VertexIterator(16) into ImportDeclaration(17) at 0", "Insert QualifiedName: java.util.concurrent.ArrayBlockingQueue(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: java.util.concurrent.BlockingQueue(26) into ImportDeclaration(27) at 0", "Insert FieldDeclaration(112) into TypeDeclaration: class(694) at 8", "Insert FieldDeclaration(165) into TypeDeclaration: class(694) at 11", "Insert MethodDeclaration(282) into TypeDeclaration: class(694) at 13", "Insert MethodDeclaration(476) into TypeDeclaration: class(694) at 20", "Insert MethodDeclaration(495) into TypeDeclaration: class(694) at 21", "Insert MethodDeclaration(656) into TypeDeclaration: class(694) at 24", "Insert MethodDeclaration(693) into TypeDeclaration: class(694) at 26", "Insert Javadoc(98) into FieldDeclaration(112) at 0", "Insert Modifier: private(99) into FieldDeclaration(112) at 1", "Insert Modifier: final(100) into FieldDeclaration(112) at 2", "Insert ParameterizedType: EdgeStore<I,V,E>(109) into FieldDeclaration(112) at 3", "Insert VariableDeclarationFragment(111) into FieldDeclaration(112) at 4", "Insert Javadoc(149) into FieldDeclaration(165) at 0", "Insert Modifier: private(150) into FieldDeclaration(165) at 1", "Insert ParameterizedType: BlockingQueue<Partition<I,V,E>>(162) into FieldDeclaration(165) at 2", "Insert VariableDeclarationFragment(164) into FieldDeclaration(165) at 3", "Insert SingleVariableDeclaration(212) into MethodDeclaration(254) at 5", "Move MarkerAnnotation(162) into MethodDeclaration(282) at 0", "Move Modifier: public(163) into MethodDeclaration(282) at 1", "Update PrimitiveType: void(164) to boolean", "Move PrimitiveType: void(164) into MethodDeclaration(282) at 2", "Move SimpleName: addPartition(165) into MethodDeclaration(282) at 3", "Move SingleVariableDeclaration(176) into MethodDeclaration(282) at 4", "Insert Block(281) into MethodDeclaration(282) at 5", "Move SingleVariableDeclaration(329) into MethodDeclaration(380) at 4", "Move MarkerAnnotation(322) into MethodDeclaration(476) at 0", "Insert Modifier: public(415) into MethodDeclaration(476) at 1", "Insert PrimitiveType: void(416) into MethodDeclaration(476) at 2", "Insert SimpleName: startIteration(417) into MethodDeclaration(476) at 3", "Insert Block(475) into MethodDeclaration(476) at 4", "Move MarkerAnnotation(224) into MethodDeclaration(495) at 0", "Insert Modifier: public(479) into MethodDeclaration(495) at 1", "Insert ParameterizedType: Partition<I,V,E>(488) into MethodDeclaration(495) at 2", "Insert SimpleName: getNextPartition(489) into MethodDeclaration(495) at 3", "Insert Block(494) into MethodDeclaration(495) at 4", "Insert Javadoc(521) into MethodDeclaration(593) at 0", "Update Modifier: public(225) to private", "Insert MarkerAnnotation(595) into MethodDeclaration(656) at 0", "Insert Modifier: public(596) into MethodDeclaration(656) at 1", "Insert PrimitiveType: void(597) into MethodDeclaration(656) at 2", "Insert SimpleName: addPartitionVertices(598) into MethodDeclaration(656) at 3", "Insert SingleVariableDeclaration(602) into MethodDeclaration(656) at 4", "Insert SingleVariableDeclaration(606) into MethodDeclaration(656) at 5", "Insert Block(655) into MethodDeclaration(656) at 6", "Insert MarkerAnnotation(658) into MethodDeclaration(682) at 0", "Insert SimpleName: addPartitionEdges(661) into MethodDeclaration(682) at 3", "Insert SingleVariableDeclaration(665) into MethodDeclaration(682) at 4", "Insert SingleVariableDeclaration(674) into MethodDeclaration(682) at 5", "Insert MarkerAnnotation(684) into MethodDeclaration(693) at 0", "Insert Modifier: public(685) into MethodDeclaration(693) at 1", "Insert PrimitiveType: void(686) into MethodDeclaration(693) at 2", "Insert SimpleName: moveEdgesToVertices(687) into MethodDeclaration(693) at 3", "Insert Block(692) into MethodDeclaration(693) at 4", "Insert TagElement(97) into Javadoc(98) at 0", "Insert SimpleType: EdgeStore(102) into ParameterizedType: EdgeStore<I,V,E>(109) at 0", "Insert SimpleType: I(104) into ParameterizedType: EdgeStore<I,V,E>(109) at 1", "Insert SimpleType: V(106) into ParameterizedType: EdgeStore<I,V,E>(109) at 2", "Insert SimpleType: E(108) into ParameterizedType: EdgeStore<I,V,E>(109) at 3", "Insert SimpleName: edgeStore(110) into VariableDeclarationFragment(111) at 0", "Insert TagElement(148) into Javadoc(149) at 0", "Insert SimpleType: BlockingQueue(152) into ParameterizedType: BlockingQueue<Partition<I,V,E>>(162) at 0", "Insert ParameterizedType: Partition<I,V,E>(161) into ParameterizedType: BlockingQueue<Partition<I,V,E>>(162) at 1", "Insert SimpleName: partitionQueue(163) into VariableDeclarationFragment(164) at 0", "Insert TagElement: @param(176) into Javadoc(177) at 3", "Insert ParameterizedType: CentralizedServiceWorker<I,V,E>(210) into SingleVariableDeclaration(212) at 0", "Insert SimpleName: serviceWorker(211) into SingleVariableDeclaration(212) at 1", "Insert VariableDeclarationStatement(239) into Block(253) at 2", "Insert ExpressionStatement(246) into Block(253) at 3", "Insert ExpressionStatement(252) into Block(253) at 4", "Insert ReturnStatement(280) into Block(281) at 0", "Insert SimpleType: Integer(387) into SingleVariableDeclaration(389) at 0", "Insert IfStatement(435) into Block(475) at 0", "Move ExpressionStatement(207) into Block(475) at 1", "Insert EnhancedForStatement(474) into Block(475) at 2", "Insert SimpleType: Partition(481) into ParameterizedType: Partition<I,V,E>(488) at 0", "Insert SimpleType: I(483) into ParameterizedType: Partition<I,V,E>(488) at 1", "Insert SimpleType: V(485) into ParameterizedType: Partition<I,V,E>(488) at 2", "Insert SimpleType: E(487) into ParameterizedType: Partition<I,V,E>(488) at 3", "Move ReturnStatement(211) into Block(494) at 0", "Insert TagElement(515) into Javadoc(521) at 0", "Insert TagElement: @param(518) into Javadoc(521) at 1", "Insert TagElement: @return(520) into Javadoc(521) at 2", "Insert SimpleName: Override(594) into MarkerAnnotation(595) at 0", "Insert SimpleType: Integer(600) into SingleVariableDeclaration(602) at 0", "Insert SimpleName: partitionId(601) into SingleVariableDeclaration(602) at 1", "Insert SimpleType: ExtendedDataOutput(604) into SingleVariableDeclaration(606) at 0", "Insert SimpleName: extendedDataOutput(605) into SingleVariableDeclaration(606) at 1", "Insert VariableDeclarationStatement(630) into Block(655) at 0", "Insert VariableDeclarationStatement(645) into Block(655) at 1", "Move ExpressionStatement(220) into Block(655) at 2", "Insert ExpressionStatement(654) into Block(655) at 3", "Insert SimpleName: Override(657) into MarkerAnnotation(658) at 0", "Insert SimpleType: Integer(663) into SingleVariableDeclaration(665) at 0", "Insert SimpleName: partitionId(664) into SingleVariableDeclaration(665) at 1", "Insert ParameterizedType: VertexIdEdges<I,E>(672) into SingleVariableDeclaration(674) at 0", "Insert SimpleName: edges(673) into SingleVariableDeclaration(674) at 1", "Insert SimpleName: Override(683) into MarkerAnnotation(684) at 0", "Insert ExpressionStatement(691) into Block(692) at 0", "Insert TextElement: Edge store for this worker. (96) into TagElement(97) at 0", "Insert SimpleName: EdgeStore(101) into SimpleType: EdgeStore(102) at 0", "Insert SimpleName: I(103) into SimpleType: I(104) at 0", "Insert SimpleName: V(105) into SimpleType: V(106) at 0", "Insert SimpleName: E(107) into SimpleType: E(108) at 0", "Insert TextElement: Queue of partitions to be precessed in a superstep (147) into TagElement(148) at 0", "Insert SimpleName: BlockingQueue(151) into SimpleType: BlockingQueue(152) at 0", "Insert SimpleType: Partition(154) into ParameterizedType: Partition<I,V,E>(161) at 0", "Insert SimpleType: I(156) into ParameterizedType: Partition<I,V,E>(161) at 1", "Insert SimpleType: V(158) into ParameterizedType: Partition<I,V,E>(161) at 2", "Insert SimpleType: E(160) into ParameterizedType: Partition<I,V,E>(161) at 3", "Insert SimpleName: serviceWorker(174) into TagElement: @param(176) at 0", "Insert TextElement:  Service worker(175) into TagElement: @param(176) at 1", "Insert SimpleType: CentralizedServiceWorker(203) into ParameterizedType: CentralizedServiceWorker<I,V,E>(210) at 0", "Insert SimpleType: I(205) into ParameterizedType: CentralizedServiceWorker<I,V,E>(210) at 1", "Insert SimpleType: V(207) into ParameterizedType: CentralizedServiceWorker<I,V,E>(210) at 2", "Insert SimpleType: E(209) into ParameterizedType: CentralizedServiceWorker<I,V,E>(210) at 3", "Insert ParameterizedType: EdgeStoreFactory<I,V,E>(233) into VariableDeclarationStatement(239) at 0", "Insert VariableDeclarationFragment(238) into VariableDeclarationStatement(239) at 1", "Insert MethodInvocation(245) into ExpressionStatement(246) at 0", "Insert Assignment: =(251) into ExpressionStatement(252) at 0", "Insert InfixExpression: ==(279) into ReturnStatement(280) at 0", "Insert SimpleName: Integer(386) into SimpleType: Integer(387) at 0", "Insert InfixExpression: &&(425) into IfStatement(435) at 0", "Insert Block(434) into IfStatement(435) at 1", "Insert SingleVariableDeclaration(464) into EnhancedForStatement(474) at 0", "Insert MethodInvocation(467) into EnhancedForStatement(474) at 1", "Insert Block(473) into EnhancedForStatement(474) at 2", "Insert SimpleName: Partition(480) into SimpleType: Partition(481) at 0", "Insert SimpleName: I(482) into SimpleType: I(483) at 0", "Insert SimpleName: V(484) into SimpleType: V(485) at 0", "Insert SimpleName: E(486) into SimpleType: E(487) at 0", "Insert MethodInvocation(492) into ReturnStatement(493) at 0", "Insert TextElement: Get or create a partition.(514) into TagElement(515) at 0", "Insert SimpleName: partitionId(516) into TagElement: @param(518) at 0", "Insert TextElement:  Partition Id(517) into TagElement: @param(518) at 1", "Insert TextElement:  The requested partition (never null)(519) into TagElement: @return(520) at 0", "Insert SimpleName: Integer(599) into SimpleType: Integer(600) at 0", "Insert SimpleName: ExtendedDataOutput(603) into SimpleType: ExtendedDataOutput(604) at 0", "Insert ParameterizedType: VertexIterator<I,V,E>(615) into VariableDeclarationStatement(630) at 0", "Insert VariableDeclarationFragment(629) into VariableDeclarationStatement(630) at 1", "Move ParameterizedType: Partition<I,V,E>(185) into VariableDeclarationStatement(645) at 0", "Insert VariableDeclarationFragment(644) into VariableDeclarationStatement(645) at 1", "Insert MethodInvocation(653) into ExpressionStatement(654) at 0", "Insert SimpleName: Integer(662) into SimpleType: Integer(663) at 0", "Insert SimpleType: VertexIdEdges(667) into ParameterizedType: VertexIdEdges<I,E>(672) at 0", "Insert SimpleType: I(669) into ParameterizedType: VertexIdEdges<I,E>(672) at 1", "Insert SimpleType: E(671) into ParameterizedType: VertexIdEdges<I,E>(672) at 2", "Insert MethodInvocation(690) into ExpressionStatement(691) at 0", "Insert SimpleName: Partition(153) into SimpleType: Partition(154) at 0", "Insert SimpleName: I(155) into SimpleType: I(156) at 0", "Insert SimpleName: V(157) into SimpleType: V(158) at 0", "Insert SimpleName: E(159) into SimpleType: E(160) at 0", "Insert SimpleName: CentralizedServiceWorker(202) into SimpleType: CentralizedServiceWorker(203) at 0", "Insert SimpleName: I(204) into SimpleType: I(205) at 0", "Insert SimpleName: V(206) into SimpleType: V(207) at 0", "Insert SimpleName: E(208) into SimpleType: E(209) at 0", "Insert SimpleType: EdgeStoreFactory(226) into ParameterizedType: EdgeStoreFactory<I,V,E>(233) at 0", "Insert SimpleType: I(228) into ParameterizedType: EdgeStoreFactory<I,V,E>(233) at 1", "Insert SimpleType: V(230) into ParameterizedType: EdgeStoreFactory<I,V,E>(233) at 2", "Insert SimpleType: E(232) into ParameterizedType: EdgeStoreFactory<I,V,E>(233) at 3", "Insert SimpleName: edgeStoreFactory(234) into VariableDeclarationFragment(238) at 0", "Insert MethodInvocation(237) into VariableDeclarationFragment(238) at 1", "Insert SimpleName: edgeStoreFactory(240) into MethodInvocation(245) at 0", "Insert SimpleName: initialize(241) into MethodInvocation(245) at 1", "Insert SimpleName: serviceWorker(242) into MethodInvocation(245) at 2", "Insert SimpleName: conf(243) into MethodInvocation(245) at 3", "Insert SimpleName: context(244) into MethodInvocation(245) at 4", "Insert SimpleName: edgeStore(247) into Assignment: =(251) at 0", "Insert MethodInvocation(250) into Assignment: =(251) at 1", "Move MethodInvocation(205) into InfixExpression: ==(279) at 0", "Insert NullLiteral(278) into InfixExpression: ==(279) at 1", "Insert InfixExpression: !=(420) into InfixExpression: &&(425) at 0", "Insert PrefixExpression: !(424) into InfixExpression: &&(425) at 1", "Insert ThrowStatement(433) into Block(434) at 0", "Insert SimpleName: partitionQueue(436) into Assignment: =(452) at 0", "Insert ClassInstanceCreation(451) into Assignment: =(452) at 1", "Insert ParameterizedType: Partition<I,V,E>(462) into SingleVariableDeclaration(464) at 0", "Insert SimpleName: partition(463) into SingleVariableDeclaration(464) at 1", "Insert SimpleName: partitions(465) into MethodInvocation(467) at 0", "Insert SimpleName: values(466) into MethodInvocation(467) at 1", "Insert ExpressionStatement(472) into Block(473) at 0", "Insert SimpleName: partitionQueue(490) into MethodInvocation(492) at 0", "Insert SimpleName: poll(491) into MethodInvocation(492) at 1", "Insert SimpleType: VertexIterator(608) into ParameterizedType: VertexIterator<I,V,E>(615) at 0", "Insert SimpleType: I(610) into ParameterizedType: VertexIterator<I,V,E>(615) at 1", "Insert SimpleType: V(612) into ParameterizedType: VertexIterator<I,V,E>(615) at 2", "Insert SimpleType: E(614) into ParameterizedType: VertexIterator<I,V,E>(615) at 3", "Insert SimpleName: vertexIterator(616) into VariableDeclarationFragment(629) at 0", "Insert ClassInstanceCreation(628) into VariableDeclarationFragment(629) at 1", "Insert SimpleName: partition(640) into VariableDeclarationFragment(644) at 0", "Insert MethodInvocation(643) into VariableDeclarationFragment(644) at 1", "Update SimpleName: oldPartition(216) to partition", "Update SimpleName: addPartition(217) to addPartitionVertices", "Update SimpleName: partition(218) to vertexIterator", "Insert SimpleName: putPartition(651) into MethodInvocation(653) at 0", "Insert SimpleName: partition(652) into MethodInvocation(653) at 1", "Insert SimpleName: VertexIdEdges(666) into SimpleType: VertexIdEdges(667) at 0", "Insert SimpleName: I(668) into SimpleType: I(669) at 0", "Insert SimpleName: E(670) into SimpleType: E(671) at 0", "Update SimpleName: partitions(330) to edgeStore", "Update SimpleName: remove(331) to addPartitionEdges", "Insert SimpleName: edges(678) into MethodInvocation(679) at 3", "Insert SimpleName: edgeStore(688) into MethodInvocation(690) at 0", "Insert SimpleName: moveEdgesToVertices(689) into MethodInvocation(690) at 1", "Insert SimpleName: EdgeStoreFactory(225) into SimpleType: EdgeStoreFactory(226) at 0", "Insert SimpleName: I(227) into SimpleType: I(228) at 0", "Insert SimpleName: V(229) into SimpleType: V(230) at 0", "Insert SimpleName: E(231) into SimpleType: E(232) at 0", "Insert SimpleName: conf(235) into MethodInvocation(237) at 0", "Insert SimpleName: createEdgeStoreFactory(236) into MethodInvocation(237) at 1", "Insert SimpleName: edgeStoreFactory(248) into MethodInvocation(250) at 0", "Insert SimpleName: newStore(249) into MethodInvocation(250) at 1", "Insert SimpleName: partitionQueue(418) into InfixExpression: !=(420) at 0", "Insert NullLiteral(419) into InfixExpression: !=(420) at 1", "Insert MethodInvocation(423) into PrefixExpression: !(424) at 0", "Insert ClassInstanceCreation(432) into ThrowStatement(433) at 0", "Insert ParameterizedType: ArrayBlockingQueue<Partition<I,V,E>>(448) into ClassInstanceCreation(451) at 0", "Insert MethodInvocation(450) into ClassInstanceCreation(451) at 1", "Insert SimpleType: Partition(455) into ParameterizedType: Partition<I,V,E>(462) at 0", "Insert SimpleType: I(457) into ParameterizedType: Partition<I,V,E>(462) at 1", "Insert SimpleType: V(459) into ParameterizedType: Partition<I,V,E>(462) at 2", "Insert SimpleType: E(461) into ParameterizedType: Partition<I,V,E>(462) at 3", "Insert MethodInvocation(471) into ExpressionStatement(472) at 0", "Insert SimpleName: VertexIterator(607) into SimpleType: VertexIterator(608) at 0", "Insert SimpleName: I(609) into SimpleType: I(610) at 0", "Insert SimpleName: V(611) into SimpleType: V(612) at 0", "Insert SimpleName: E(613) into SimpleType: E(614) at 0", "Insert ParameterizedType: VertexIterator<I,V,E>(625) into ClassInstanceCreation(628) at 0", "Insert SimpleName: extendedDataOutput(626) into ClassInstanceCreation(628) at 1", "Insert SimpleName: conf(627) into ClassInstanceCreation(628) at 2", "Insert SimpleName: getOrCreatePartition(641) into MethodInvocation(643) at 0", "Insert SimpleName: partitionId(642) into MethodInvocation(643) at 1", "Update SimpleName: partition(189) to partitionQueue", "Move SimpleName: partition(189) into MethodInvocation(423) at 0", "Update SimpleName: getId(190) to isEmpty", "Move SimpleName: getId(190) into MethodInvocation(423) at 1", "Insert SimpleType: IllegalStateException(427) into ClassInstanceCreation(432) at 0", "Insert InfixExpression: +(431) into ClassInstanceCreation(432) at 1", "Insert SimpleType: ArrayBlockingQueue(438) into ParameterizedType: ArrayBlockingQueue<Partition<I,V,E>>(448) at 0", "Insert ParameterizedType: Partition<I,V,E>(447) into ParameterizedType: ArrayBlockingQueue<Partition<I,V,E>>(448) at 1", "Insert SimpleName: getNumPartitions(449) into MethodInvocation(450) at 0", "Insert SimpleName: Partition(454) into SimpleType: Partition(455) at 0", "Insert SimpleName: I(456) into SimpleType: I(457) at 0", "Insert SimpleName: V(458) into SimpleType: V(459) at 0", "Insert SimpleName: E(460) into SimpleType: E(461) at 0", "Insert SimpleName: partitionQueue(468) into MethodInvocation(471) at 0", "Insert SimpleName: add(469) into MethodInvocation(471) at 1", "Insert SimpleName: partition(470) into MethodInvocation(471) at 2", "Insert SimpleType: VertexIterator(618) into ParameterizedType: VertexIterator<I,V,E>(625) at 0", "Insert SimpleType: I(620) into ParameterizedType: VertexIterator<I,V,E>(625) at 1", "Insert SimpleType: V(622) into ParameterizedType: VertexIterator<I,V,E>(625) at 2", "Insert SimpleType: E(624) into ParameterizedType: VertexIterator<I,V,E>(625) at 3", "Insert SimpleName: IllegalStateException(426) into SimpleType: IllegalStateException(427) at 0", "Insert StringLiteral: \"startIteration: It seems that some of \"(428) into InfixExpression: +(431) at 0", "Insert StringLiteral: \"of the partitions from previous iteration over partition store are\"(429) into InfixExpression: +(431) at 1", "Insert StringLiteral: \" not yet processed.\"(430) into InfixExpression: +(431) at 2", "Insert SimpleName: ArrayBlockingQueue(437) into SimpleType: ArrayBlockingQueue(438) at 0", "Insert SimpleType: Partition(440) into ParameterizedType: Partition<I,V,E>(447) at 0", "Insert SimpleType: I(442) into ParameterizedType: Partition<I,V,E>(447) at 1", "Insert SimpleType: V(444) into ParameterizedType: Partition<I,V,E>(447) at 2", "Insert SimpleType: E(446) into ParameterizedType: Partition<I,V,E>(447) at 3", "Insert SimpleName: VertexIterator(617) into SimpleType: VertexIterator(618) at 0", "Insert SimpleName: I(619) into SimpleType: I(620) at 0", "Insert SimpleName: V(621) into SimpleType: V(622) at 0", "Insert SimpleName: E(623) into SimpleType: E(624) at 0", "Insert SimpleName: Partition(439) into SimpleType: Partition(440) at 0", "Insert SimpleName: I(441) into SimpleType: I(442) at 0", "Insert SimpleName: V(443) into SimpleType: V(444) at 0", "Insert SimpleName: E(445) into SimpleType: E(446) at 0", "Delete SimpleName: oldPartition(186)", "Delete SimpleName: partitions(187)", "Delete SimpleName: get(188)", "Delete MethodInvocation(191)", "Delete MethodInvocation(192)", "Delete VariableDeclarationFragment(193)", "Delete VariableDeclarationStatement(194)", "Delete SimpleName: oldPartition(195)", "Delete NullLiteral(196)", "Delete InfixExpression: ==(197)", "Delete SimpleName: oldPartition(208)", "Delete NullLiteral(209)", "Delete InfixExpression: ==(210)", "Delete Block(212)", "Delete IfStatement(213)", "Delete Block(214)", "Delete IfStatement(215)", "Delete Block(221)", "Delete MethodDeclaration(222)", "Delete PrimitiveType: int(384)", "Delete SimpleName: partitionId(385)", "Delete SingleVariableDeclaration(386)", "Delete PrimitiveType: int(415)", "Delete SimpleName: oldPartition(198)", "Delete SimpleName: deletePartition(325)"]}}, {"BspServiceWorker_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 82", "operations": ["INS SimpleName: getNumPartitionsOwned to MethodDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: partitionOwner to SingleVariableDeclaration at 1", "INS SimpleName: partitionOwner to MethodInvocation at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS MethodInvocation to IfStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 82", "INS Block to IfStatement at 1", "INS SimpleName: count to VariableDeclarationFragment at 0", "INS PrimitiveType: int to MethodDeclaration at 2", "INS IfStatement to Block at 0", "INS ReturnStatement to Block at 2", "INS SimpleName: getWorkerInfo to MethodInvocation at 0", "INS PostfixExpression: ++ to ExpressionStatement at 0", "INS SimpleName: count to ReturnStatement at 0", "INS Block to EnhancedForStatement at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: PartitionOwner to SingleVariableDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS Block to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS EnhancedForStatement to Block at 1", "INS VariableDeclarationStatement to Block at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: getPartitionOwners to MethodInvocation at 0", "INS SimpleName: getWorkerInfo to MethodInvocation at 1", "INS SimpleName: count to PostfixExpression: ++ at 0", "INS SimpleName: PartitionOwner to SimpleType: PartitionOwner at 0"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 5", "INS SimpleName: initialize to MethodInvocation at 1", "INS SimpleName: getPartitionStore to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from Iterables to startIteration", "operations": ["UPD SimpleName: Iterables from Iterables to startIteration", "UPD SimpleName: Iterables from Iterables to startIteration", "UPD SimpleName: getPartitionIds from getPartitionIds to startIteration"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "UPDATE from getEdgeStore to getPartitionStore", "operations": ["UPD SimpleName: getEdgeStore from getEdgeStore to getPartitionStore"]}, {"root": "INS BooleanLiteral: true to WhileStatement at 0", "operations": ["INS BooleanLiteral: true to WhileStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 3"]}, {"root": "INS BooleanLiteral: true to WhileStatement at 0", "operations": ["INS BooleanLiteral: true to WhileStatement at 0"]}, {"root": "INS BooleanLiteral: true to WhileStatement at 0", "operations": ["INS BooleanLiteral: true to WhileStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Partition<I,V,E> to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: Partition<I,V,E> to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from partitionId to partition", "operations": ["UPD SimpleName: partitionId from partitionId to partition", "UPD SimpleName: partitionId from partitionId to partition", "UPD SimpleName: partitionId from partitionId to partition", "UPD SimpleName: partitionId from partitionId to partition", "UPD SimpleName: partitionId from partitionId to partition"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from getPartitionIds to getNextPartition", "operations": ["UPD SimpleName: getPartitionIds from getPartitionIds to getNextPartition", "UPD SimpleName: getPartitionIds from getPartitionIds to getNextPartition", "UPD SimpleName: getOrCreatePartition from getOrCreatePartition to getNextPartition"]}, {"root": "INS MethodInvocation to InfixExpression: + at 1", "operations": ["INS SimpleName: partition to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: getId to MethodInvocation at 1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.LinkedList", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.concurrent.ArrayBlockingQueue", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.collect.Iterables"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL ParameterizedType: LinkedList<Integer>", "DEL Modifier: final", "DEL ParameterizedType: Queue<Integer>", "DEL SimpleType: Integer", "DEL SimpleName: ArrayBlockingQueue", "DEL SimpleName: numPartitions", "DEL SimpleName: LinkedList", "DEL ParameterizedType: ArrayBlockingQueue<Integer>", "DEL SimpleName: numPartitions", "DEL InfixExpression: ==", "DEL NumberLiteral: 0", "DEL ConditionalExpression", "DEL SimpleType: ArrayBlockingQueue", "DEL SimpleName: Integer", "DEL SimpleName: Queue", "DEL VariableDeclarationFragment", "DEL SimpleType: Integer", "DEL SimpleType: LinkedList", "DEL ClassInstanceCreation", "DEL SimpleType: Integer", "DEL SimpleName: Integer", "DEL SimpleName: Integer", "DEL ParenthesizedExpression", "DEL VariableDeclarationStatement", "DEL SimpleType: Queue", "DEL ClassInstanceCreation", "DEL SimpleName: partitionIdQueue"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: partitionIdQueue", "DEL MethodInvocation", "DEL SimpleName: addAll", "DEL SimpleName: Iterables"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL PrefixExpression: !", "DEL SimpleName: partitionIdQueue", "DEL MethodInvocation", "DEL SimpleName: isEmpty"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: partitionId", "DEL VariableDeclarationStatement", "DEL SimpleName: Integer", "DEL SimpleType: Integer", "DEL SimpleName: partitionIdQueue", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: poll"]}, {"root": "DEL SimpleName: partitionId", "operations": ["DEL SimpleName: partitionId"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL InfixExpression: ==", "DEL ClassInstanceCreation", "DEL SimpleType: Queue", "DEL SimpleName: Queue", "DEL NumberLiteral: 0", "DEL SimpleName: numPartitions", "DEL Modifier: final", "DEL ParenthesizedExpression", "DEL SimpleType: Integer", "DEL SimpleName: numPartitions", "DEL SimpleName: Integer", "DEL SimpleName: Integer", "DEL SimpleName: Integer", "DEL SimpleName: partitionIdQueue", "DEL ConditionalExpression", "DEL ParameterizedType: LinkedList<Integer>", "DEL ParameterizedType: Queue<Integer>", "DEL SimpleType: Integer", "DEL SimpleType: Integer", "DEL ClassInstanceCreation", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: LinkedList", "DEL ParameterizedType: ArrayBlockingQueue<Integer>", "DEL SimpleType: LinkedList", "DEL SimpleType: ArrayBlockingQueue", "DEL SimpleName: ArrayBlockingQueue"]}, {"root": "DEL SimpleName: addAll", "operations": ["DEL SimpleName: addAll"]}, {"root": "DEL SimpleName: partitionIdQueue", "operations": ["DEL SimpleName: partitionIdQueue"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL PrefixExpression: !", "DEL SimpleName: partitionIdQueue", "DEL MethodInvocation", "DEL SimpleName: isEmpty"]}, {"root": "DEL SimpleType: Integer", "operations": ["DEL SimpleType: Integer", "DEL SimpleName: Integer"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: poll", "DEL SimpleName: partitionIdQueue"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: partition", "DEL VariableDeclarationStatement", "DEL SimpleName: getOrCreatePartition", "DEL MethodInvocation", "DEL SimpleName: partitionId", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL ClassInstanceCreation", "DEL SimpleType: ArrayBlockingQueue", "DEL SimpleType: Queue", "DEL SimpleName: partitionIdQueue", "DEL SimpleName: LinkedList", "DEL InfixExpression: ==", "DEL Modifier: final", "DEL ParenthesizedExpression", "DEL ParameterizedType: LinkedList<Integer>", "DEL ParameterizedType: ArrayBlockingQueue<Integer>", "DEL VariableDeclarationStatement", "DEL SimpleName: numPartitions", "DEL SimpleName: Integer", "DEL SimpleName: Queue", "DEL SimpleType: Integer", "DEL SimpleType: Integer", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL ParameterizedType: Queue<Integer>", "DEL SimpleName: Integer", "DEL SimpleType: LinkedList", "DEL SimpleName: ArrayBlockingQueue", "DEL ConditionalExpression", "DEL SimpleName: numPartitions", "DEL SimpleName: Integer", "DEL NumberLiteral: 0", "DEL SimpleType: Integer"]}, {"root": "DEL SimpleName: addAll", "operations": ["DEL SimpleName: addAll"]}, {"root": "DEL SimpleName: partitionIdQueue", "operations": ["DEL SimpleName: partitionIdQueue"]}, {"root": "DEL PrefixExpression: !", "operations": ["DEL SimpleName: partitionIdQueue", "DEL SimpleName: isEmpty", "DEL MethodInvocation", "DEL PrefixExpression: !"]}, {"root": "DEL SimpleType: Integer", "operations": ["DEL SimpleName: Integer", "DEL SimpleType: Integer"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: partitionIdQueue", "DEL MethodInvocation", "DEL SimpleName: poll"]}, {"root": "DEL SimpleName: partitionId", "operations": ["DEL SimpleName: partitionId"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: partition", "DEL VariableDeclarationStatement", "DEL SimpleName: getOrCreatePartition", "DEL SimpleName: partitionId"]}]}}, {"BspServiceWorker_diff": {"operations": ["Insert MethodDeclaration(6509) into TypeDeclaration: class(6510) at 82", "Insert MarkerAnnotation(6477) into MethodDeclaration(6509) at 0", "Insert Modifier: public(6478) into MethodDeclaration(6509) at 1", "Insert PrimitiveType: int(6479) into MethodDeclaration(6509) at 2", "Insert SimpleName: getNumPartitionsOwned(6480) into MethodDeclaration(6509) at 3", "Insert Block(6508) into MethodDeclaration(6509) at 4", "Insert ExpressionStatement(1815) into Block(2222) at 5", "Insert SimpleName: Override(6476) into MarkerAnnotation(6477) at 0", "Insert VariableDeclarationStatement(6485) into Block(6508) at 0", "Insert EnhancedForStatement(6505) into Block(6508) at 1", "Insert ReturnStatement(6507) into Block(6508) at 2", "Insert MethodInvocation(1814) into ExpressionStatement(1815) at 0", "Move MethodInvocation(3512) into ExpressionStatement(3482) at 0", "Insert PrimitiveType: int(6481) into VariableDeclarationStatement(6485) at 0", "Insert VariableDeclarationFragment(6484) into VariableDeclarationStatement(6485) at 1", "Insert SingleVariableDeclaration(6489) into EnhancedForStatement(6505) at 0", "Insert MethodInvocation(6491) into EnhancedForStatement(6505) at 1", "Insert Block(6504) into EnhancedForStatement(6505) at 2", "Insert SimpleName: count(6506) into ReturnStatement(6507) at 0", "Insert MethodInvocation(1812) into MethodInvocation(1814) at 0", "Insert SimpleName: initialize(1813) into MethodInvocation(1814) at 1", "Update SimpleName: getPartitionIds(3511) to startIteration", "Move MethodInvocation(4179) into MethodInvocation(3982) at 0", "Update SimpleName: Iterables(4050) to startIteration", "Move MethodInvocation(5136) into MethodInvocation(4885) at 0", "Update SimpleName: Iterables(4996) to startIteration", "Insert SimpleName: count(6482) into VariableDeclarationFragment(6484) at 0", "Insert NumberLiteral: 0(6483) into VariableDeclarationFragment(6484) at 1", "Insert SimpleType: PartitionOwner(6487) into SingleVariableDeclaration(6489) at 0", "Insert SimpleName: partitionOwner(6488) into SingleVariableDeclaration(6489) at 1", "Insert SimpleName: getPartitionOwners(6490) into MethodInvocation(6491) at 0", "Insert IfStatement(6503) into Block(6504) at 0", "Insert SimpleName: getPartitionStore(1811) into MethodInvocation(1812) at 0", "Insert SimpleName: PartitionOwner(6486) into SimpleType: PartitionOwner(6487) at 0", "Insert MethodInvocation(6498) into IfStatement(6503) at 0", "Insert Block(6502) into IfStatement(6503) at 1", "Insert MethodInvocation(6494) into MethodInvocation(6498) at 0", "Insert SimpleName: equals(6495) into MethodInvocation(6498) at 1", "Insert MethodInvocation(6497) into MethodInvocation(6498) at 2", "Insert ExpressionStatement(6501) into Block(6502) at 0", "Update SimpleName: getEdgeStore(2142) to getPartitionStore", "Insert SimpleName: partitionOwner(6492) into MethodInvocation(6494) at 0", "Insert SimpleName: getWorkerInfo(6493) into MethodInvocation(6494) at 1", "Insert SimpleName: getWorkerInfo(6496) into MethodInvocation(6497) at 0", "Insert PostfixExpression: ++(6500) into ExpressionStatement(6501) at 0", "Insert SimpleName: count(6499) into PostfixExpression: ++(6500) at 0", "Insert BooleanLiteral: true(3636) into WhileStatement(3772) at 0", "Move IfStatement(3685) into Block(3771) at 3", "Insert BooleanLiteral: true(4075) into WhileStatement(4212) at 0", "Insert BooleanLiteral: true(4951) into WhileStatement(5034) at 0", "Move ParameterizedType: Partition<I,V,E>(4176) into VariableDeclarationStatement(4091) at 0", "Move ParameterizedType: Partition<I,V,E>(5133) into VariableDeclarationStatement(4967) at 0", "Update SimpleName: partitionId(3680) to partition", "Update SimpleName: partitionId(4156) to partition", "Move MethodInvocation(4056) into VariableDeclarationFragment(4090) at 1", "Update SimpleName: partitionId(4162) to partition", "Update SimpleName: partitionId(5075) to partition", "Move MethodInvocation(5002) into VariableDeclarationFragment(4966) at 1", "Update SimpleName: partitionId(5081) to partition", "Update SimpleName: getOrCreatePartition(3698) to getNextPartition", "Update SimpleName: getPartitionIds(4055) to getNextPartition", "Update SimpleName: getPartitionIds(5001) to getNextPartition", "Insert MethodInvocation(4981) into InfixExpression: +(4983) at 1", "Insert SimpleName: partition(4979) into MethodInvocation(4981) at 0", "Insert SimpleName: getId(4980) into MethodInvocation(4981) at 1", "Delete QualifiedName: java.util.LinkedList(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.util.concurrent.ArrayBlockingQueue(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: com.google.common.collect.Iterables(192)", "Delete ImportDeclaration(193)", "Delete Modifier: final(3479)", "Delete SimpleName: Queue(3480)", "Delete SimpleType: Queue(3481)", "Delete SimpleName: Integer(3482)", "Delete SimpleType: Integer(3483)", "Delete ParameterizedType: Queue<Integer>(3484)", "Delete SimpleName: partitionIdQueue(3485)", "Delete SimpleName: numPartitions(3486)", "Delete NumberLiteral: 0(3487)", "Delete InfixExpression: ==(3488)", "Delete ParenthesizedExpression(3489)", "Delete SimpleName: LinkedList(3490)", "Delete SimpleType: LinkedList(3491)", "Delete SimpleName: Integer(3492)", "Delete SimpleType: Integer(3493)", "Delete ParameterizedType: LinkedList<Integer>(3494)", "Delete ClassInstanceCreation(3495)", "Delete SimpleName: ArrayBlockingQueue(3496)", "Delete SimpleType: ArrayBlockingQueue(3497)", "Delete SimpleName: Integer(3498)", "Delete SimpleType: Integer(3499)", "Delete ParameterizedType: ArrayBlockingQueue<Integer>(3500)", "Delete SimpleName: numPartitions(3501)", "Delete ClassInstanceCreation(3502)", "Delete ConditionalExpression(3503)", "Delete VariableDeclarationFragment(3504)", "Delete VariableDeclarationStatement(3505)", "Delete SimpleName: Iterables(3506)", "Delete SimpleName: addAll(3507)", "Delete SimpleName: partitionIdQueue(3508)", "Delete MethodInvocation(3513)", "Delete SimpleName: partitionIdQueue(3668)", "Delete SimpleName: isEmpty(3669)", "Delete MethodInvocation(3670)", "Delete PrefixExpression: !(3671)", "Delete SimpleName: Integer(3672)", "Delete SimpleType: Integer(3673)", "Delete SimpleName: partitionId(3674)", "Delete SimpleName: partitionIdQueue(3675)", "Delete SimpleName: poll(3676)", "Delete MethodInvocation(3677)", "Delete VariableDeclarationFragment(3678)", "Delete VariableDeclarationStatement(3679)", "Delete SimpleName: partitionId(3699)", "Delete Modifier: final(4023)", "Delete SimpleName: Queue(4024)", "Delete SimpleType: Queue(4025)", "Delete SimpleName: Integer(4026)", "Delete SimpleType: Integer(4027)", "Delete ParameterizedType: Queue<Integer>(4028)", "Delete SimpleName: partitionIdQueue(4029)", "Delete SimpleName: numPartitions(4030)", "Delete NumberLiteral: 0(4031)", "Delete InfixExpression: ==(4032)", "Delete ParenthesizedExpression(4033)", "Delete SimpleName: LinkedList(4034)", "Delete SimpleType: LinkedList(4035)", "Delete SimpleName: Integer(4036)", "Delete SimpleType: Integer(4037)", "Delete ParameterizedType: LinkedList<Integer>(4038)", "Delete ClassInstanceCreation(4039)", "Delete SimpleName: ArrayBlockingQueue(4040)", "Delete SimpleType: ArrayBlockingQueue(4041)", "Delete SimpleName: Integer(4042)", "Delete SimpleType: Integer(4043)", "Delete ParameterizedType: ArrayBlockingQueue<Integer>(4044)", "Delete SimpleName: numPartitions(4045)", "Delete ClassInstanceCreation(4046)", "Delete ConditionalExpression(4047)", "Delete VariableDeclarationFragment(4048)", "Delete VariableDeclarationStatement(4049)", "Delete SimpleName: addAll(4051)", "Delete SimpleName: partitionIdQueue(4052)", "Delete SimpleName: partitionIdQueue(4150)", "Delete SimpleName: isEmpty(4151)", "Delete MethodInvocation(4152)", "Delete PrefixExpression: !(4153)", "Delete SimpleName: Integer(4154)", "Delete SimpleType: Integer(4155)", "Delete SimpleName: partitionIdQueue(4157)", "Delete SimpleName: poll(4158)", "Delete MethodInvocation(4159)", "Delete SimpleName: partition(4177)", "Delete SimpleName: getOrCreatePartition(4180)", "Delete SimpleName: partitionId(4181)", "Delete MethodInvocation(4182)", "Delete VariableDeclarationFragment(4183)", "Delete VariableDeclarationStatement(4184)", "Delete Modifier: final(4969)", "Delete SimpleName: Queue(4970)", "Delete SimpleType: Queue(4971)", "Delete SimpleName: Integer(4972)", "Delete SimpleType: Integer(4973)", "Delete ParameterizedType: Queue<Integer>(4974)", "Delete SimpleName: partitionIdQueue(4975)", "Delete SimpleName: numPartitions(4976)", "Delete NumberLiteral: 0(4977)", "Delete InfixExpression: ==(4978)", "Delete ParenthesizedExpression(4979)", "Delete SimpleName: LinkedList(4980)", "Delete SimpleType: LinkedList(4981)", "Delete SimpleName: Integer(4982)", "Delete SimpleType: Integer(4983)", "Delete ParameterizedType: LinkedList<Integer>(4984)", "Delete ClassInstanceCreation(4985)", "Delete SimpleName: ArrayBlockingQueue(4986)", "Delete SimpleType: ArrayBlockingQueue(4987)", "Delete SimpleName: Integer(4988)", "Delete SimpleType: Integer(4989)", "Delete ParameterizedType: ArrayBlockingQueue<Integer>(4990)", "Delete SimpleName: numPartitions(4991)", "Delete ClassInstanceCreation(4992)", "Delete ConditionalExpression(4993)", "Delete VariableDeclarationFragment(4994)", "Delete VariableDeclarationStatement(4995)", "Delete SimpleName: addAll(4997)", "Delete SimpleName: partitionIdQueue(4998)", "Delete SimpleName: partitionIdQueue(5069)", "Delete SimpleName: isEmpty(5070)", "Delete MethodInvocation(5071)", "Delete PrefixExpression: !(5072)", "Delete SimpleName: Integer(5073)", "Delete SimpleType: Integer(5074)", "Delete SimpleName: partitionIdQueue(5076)", "Delete SimpleName: poll(5077)", "Delete MethodInvocation(5078)", "Delete SimpleName: partitionId(5092)", "Delete SimpleName: partition(5134)", "Delete SimpleName: getOrCreatePartition(5137)", "Delete SimpleName: partitionId(5138)", "Delete MethodInvocation(5139)", "Delete VariableDeclarationFragment(5140)", "Delete VariableDeclarationStatement(5141)"]}}, {"SendWorkerEdgesRequest_cluster": {"actions": [{"root": "UPDATE from getEdgeStore to getPartitionStore", "operations": ["UPD SimpleName: getEdgeStore from getEdgeStore to getPartitionStore"]}]}}, {"SendWorkerEdgesRequest_diff": {"operations": ["Update SimpleName: getEdgeStore(164) to getPartitionStore"]}}, {"SendWorkerVerticesRequest_cluster": {"actions": [{"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 4"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.giraph.utils.VertexIterator", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.giraph.partition.PartitionStore", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.giraph.partition.Partition"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: VertexIterator", "DEL SimpleType: V", "DEL SimpleType: VertexIterator", "DEL SimpleType: I", "DEL SimpleName: I", "DEL MethodInvocation", "DEL SimpleType: E", "DEL SimpleName: E", "DEL ClassInstanceCreation", "DEL VariableDeclarationFragment", "DEL ParameterizedType: VertexIterator<I,V,E>", "DEL SimpleType: E", "DEL SimpleName: getConf", "DEL SimpleName: V", "DEL SimpleName: I", "DEL SimpleType: I", "DEL VariableDeclarationStatement", "DEL ParameterizedType: VertexIterator<I,V,E>", "DEL SimpleName: VertexIterator", "DEL SimpleName: vertexIterator", "DEL SimpleName: E", "DEL SimpleType: VertexIterator", "DEL SimpleType: V", "DEL SimpleName: V"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: E", "DEL SimpleType: V", "DEL SimpleType: E", "DEL SimpleName: Partition", "DEL SimpleName: I", "DEL SimpleName: partition", "DEL SimpleType: Partition", "DEL SimpleName: V", "DEL ParameterizedType: Partition<I,V,E>", "DEL VariableDeclarationStatement", "DEL SimpleType: I", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: PartitionStore", "DEL SimpleType: PartitionStore", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: store"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: getOrCreatePartition", "DEL SimpleName: store", "DEL SimpleName: partition", "DEL Assignment: ="]}, {"root": "DEL SimpleName: partition", "operations": ["DEL SimpleName: partition"]}, {"root": "DEL SimpleName: vertexIterator", "operations": ["DEL SimpleName: vertexIterator"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: putPartition", "DEL ExpressionStatement", "DEL SimpleName: store", "DEL SimpleName: partition", "DEL MethodInvocation"]}]}}, {"SendWorkerVerticesRequest_diff": {"operations": ["Move MethodInvocation(382) into MethodInvocation(342) at 0", "Move MethodInvocation(390) into MethodInvocation(342) at 3", "Move MethodInvocation(359) into MethodInvocation(342) at 4", "Delete QualifiedName: org.apache.giraph.utils.VertexIterator(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.giraph.partition.PartitionStore(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: org.apache.giraph.partition.Partition(20)", "Delete ImportDeclaration(21)", "Delete SimpleName: VertexIterator(338)", "Delete SimpleType: VertexIterator(339)", "Delete SimpleName: I(340)", "Delete SimpleType: I(341)", "Delete SimpleName: V(342)", "Delete SimpleType: V(343)", "Delete SimpleName: E(344)", "Delete SimpleType: E(345)", "Delete ParameterizedType: VertexIterator<I,V,E>(346)", "Delete SimpleName: vertexIterator(347)", "Delete SimpleName: VertexIterator(348)", "Delete SimpleType: VertexIterator(349)", "Delete SimpleName: I(350)", "Delete SimpleType: I(351)", "Delete SimpleName: V(352)", "Delete SimpleType: V(353)", "Delete SimpleName: E(354)", "Delete SimpleType: E(355)", "Delete ParameterizedType: VertexIterator<I,V,E>(356)", "Delete SimpleName: getConf(360)", "Delete MethodInvocation(361)", "Delete ClassInstanceCreation(362)", "Delete VariableDeclarationFragment(363)", "Delete VariableDeclarationStatement(364)", "Delete SimpleName: Partition(365)", "Delete SimpleType: Partition(366)", "Delete SimpleName: I(367)", "Delete SimpleType: I(368)", "Delete SimpleName: V(369)", "Delete SimpleType: V(370)", "Delete SimpleName: E(371)", "Delete SimpleType: E(372)", "Delete ParameterizedType: Partition<I,V,E>(373)", "Delete SimpleName: partition(374)", "Delete VariableDeclarationFragment(375)", "Delete VariableDeclarationStatement(376)", "Delete SimpleName: PartitionStore(377)", "Delete SimpleType: PartitionStore(378)", "Delete SimpleName: store(379)", "Delete VariableDeclarationFragment(383)", "Delete VariableDeclarationStatement(384)", "Delete SimpleName: partition(385)", "Delete SimpleName: store(386)", "Delete SimpleName: getOrCreatePartition(387)", "Delete MethodInvocation(391)", "Delete Assignment: =(392)", "Delete ExpressionStatement(393)", "Delete SimpleName: partition(394)", "Delete SimpleName: vertexIterator(396)", "Delete SimpleName: store(399)", "Delete SimpleName: putPartition(400)", "Delete SimpleName: partition(401)", "Delete MethodInvocation(402)", "Delete ExpressionStatement(403)"]}}, {"IntEdgeStore_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: java.io.DataInput to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: java.io.DataOutput to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: java.io.IOException to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: output to SingleVariableDeclaration at 1", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: writeVertexKey to MethodDeclaration at 3", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: output to MethodInvocation at 0", "INS SimpleName: key to MethodInvocation at 2", "INS SimpleType: DataOutput to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: writeInt to MethodInvocation at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleType: IOException to MethodDeclaration at 6", "INS SimpleName: key to SingleVariableDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: DataOutput to SimpleType: DataOutput at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: input to MethodInvocation at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: input to SingleVariableDeclaration at 1", "INS SimpleType: Integer to MethodDeclaration at 2", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: readVertexKey to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: readInt to MethodInvocation at 1", "INS SimpleName: DataInput to SimpleType: DataInput at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS Modifier: protected to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 6", "INS SimpleType: IOException to MethodDeclaration at 5", "INS SimpleType: DataInput to SingleVariableDeclaration at 0"]}]}}, {"IntEdgeStore_diff": {"operations": ["Insert ImportDeclaration(25) into CompilationUnit(539) at 12", "Insert ImportDeclaration(27) into CompilationUnit(539) at 13", "Insert ImportDeclaration(29) into CompilationUnit(539) at 14", "Insert QualifiedName: java.io.DataInput(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: java.io.DataOutput(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: java.io.IOException(28) into ImportDeclaration(29) at 0", "Insert MethodDeclaration(236) into TypeDeclaration: class(538) at 10", "Insert MethodDeclaration(254) into TypeDeclaration: class(538) at 11", "Insert MarkerAnnotation(216) into MethodDeclaration(236) at 0", "Insert Modifier: protected(217) into MethodDeclaration(236) at 1", "Insert PrimitiveType: void(218) into MethodDeclaration(236) at 2", "Insert SimpleName: writeVertexKey(219) into MethodDeclaration(236) at 3", "Insert SingleVariableDeclaration(223) into MethodDeclaration(236) at 4", "Insert SingleVariableDeclaration(227) into MethodDeclaration(236) at 5", "Insert SimpleType: IOException(229) into MethodDeclaration(236) at 6", "Insert Block(235) into MethodDeclaration(236) at 7", "Insert MarkerAnnotation(238) into MethodDeclaration(254) at 0", "Insert Modifier: protected(239) into MethodDeclaration(254) at 1", "Insert SimpleType: Integer(241) into MethodDeclaration(254) at 2", "Insert SimpleName: readVertexKey(242) into MethodDeclaration(254) at 3", "Insert SingleVariableDeclaration(246) into MethodDeclaration(254) at 4", "Insert SimpleType: IOException(248) into MethodDeclaration(254) at 5", "Insert Block(253) into MethodDeclaration(254) at 6", "Insert SimpleName: Override(215) into MarkerAnnotation(216) at 0", "Insert SimpleType: Integer(221) into SingleVariableDeclaration(223) at 0", "Insert SimpleName: key(222) into SingleVariableDeclaration(223) at 1", "Insert SimpleType: DataOutput(225) into SingleVariableDeclaration(227) at 0", "Insert SimpleName: output(226) into SingleVariableDeclaration(227) at 1", "Insert SimpleName: IOException(228) into SimpleType: IOException(229) at 0", "Insert ExpressionStatement(234) into Block(235) at 0", "Insert SimpleName: Override(237) into MarkerAnnotation(238) at 0", "Insert SimpleName: Integer(240) into SimpleType: Integer(241) at 0", "Insert SimpleType: DataInput(244) into SingleVariableDeclaration(246) at 0", "Insert SimpleName: input(245) into SingleVariableDeclaration(246) at 1", "Insert SimpleName: IOException(247) into SimpleType: IOException(248) at 0", "Insert ReturnStatement(252) into Block(253) at 0", "Insert SimpleName: Integer(220) into SimpleType: Integer(221) at 0", "Insert SimpleName: DataOutput(224) into SimpleType: DataOutput(225) at 0", "Insert MethodInvocation(233) into ExpressionStatement(234) at 0", "Insert SimpleName: DataInput(243) into SimpleType: DataInput(244) at 0", "Insert MethodInvocation(251) into ReturnStatement(252) at 0", "Insert SimpleName: output(230) into MethodInvocation(233) at 0", "Insert SimpleName: writeInt(231) into MethodInvocation(233) at 1", "Insert SimpleName: key(232) into MethodInvocation(233) at 2", "Insert SimpleName: input(249) into MethodInvocation(251) at 0", "Insert SimpleName: readInt(250) into MethodInvocation(251) at 1"]}}, {"LongEdgeStore_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: java.io.DataInput to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: java.io.DataOutput to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 14", "operations": ["INS ImportDeclaration to CompilationUnit at 14", "INS QualifiedName: java.io.IOException to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Modifier: protected to MethodDeclaration at 1", "INS SimpleName: output to SingleVariableDeclaration at 1", "INS SimpleType: Long to SingleVariableDeclaration at 0", "INS SimpleName: writeVertexKey to MethodDeclaration at 3", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MarkerAnnotation to MethodDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: output to MethodInvocation at 0", "INS SimpleName: key to MethodInvocation at 2", "INS SimpleType: DataOutput to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 7", "INS SimpleName: writeLong to MethodInvocation at 1", "INS SimpleName: Long to SimpleType: Long at 0", "INS SimpleType: IOException to MethodDeclaration at 6", "INS SimpleName: key to SingleVariableDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: DataOutput to SimpleType: DataOutput at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleName: input to MethodInvocation at 0", "INS SimpleName: Long to SimpleType: Long at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: input to SingleVariableDeclaration at 1", "INS SimpleType: Long to MethodDeclaration at 2", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS SimpleName: readVertexKey to MethodDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: readLong to MethodInvocation at 1", "INS SimpleName: DataInput to SimpleType: DataInput at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS Modifier: protected to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 6", "INS SimpleType: IOException to MethodDeclaration at 5", "INS SimpleType: DataInput to SingleVariableDeclaration at 0"]}]}}, {"LongEdgeStore_diff": {"operations": ["Insert ImportDeclaration(25) into CompilationUnit(539) at 12", "Insert ImportDeclaration(27) into CompilationUnit(539) at 13", "Insert ImportDeclaration(29) into CompilationUnit(539) at 14", "Insert QualifiedName: java.io.DataInput(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: java.io.DataOutput(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: java.io.IOException(28) into ImportDeclaration(29) at 0", "Insert MethodDeclaration(236) into TypeDeclaration: class(538) at 10", "Insert MethodDeclaration(254) into TypeDeclaration: class(538) at 11", "Insert MarkerAnnotation(216) into MethodDeclaration(236) at 0", "Insert Modifier: protected(217) into MethodDeclaration(236) at 1", "Insert PrimitiveType: void(218) into MethodDeclaration(236) at 2", "Insert SimpleName: writeVertexKey(219) into MethodDeclaration(236) at 3", "Insert SingleVariableDeclaration(223) into MethodDeclaration(236) at 4", "Insert SingleVariableDeclaration(227) into MethodDeclaration(236) at 5", "Insert SimpleType: IOException(229) into MethodDeclaration(236) at 6", "Insert Block(235) into MethodDeclaration(236) at 7", "Insert MarkerAnnotation(238) into MethodDeclaration(254) at 0", "Insert Modifier: protected(239) into MethodDeclaration(254) at 1", "Insert SimpleType: Long(241) into MethodDeclaration(254) at 2", "Insert SimpleName: readVertexKey(242) into MethodDeclaration(254) at 3", "Insert SingleVariableDeclaration(246) into MethodDeclaration(254) at 4", "Insert SimpleType: IOException(248) into MethodDeclaration(254) at 5", "Insert Block(253) into MethodDeclaration(254) at 6", "Insert SimpleName: Override(215) into MarkerAnnotation(216) at 0", "Insert SimpleType: Long(221) into SingleVariableDeclaration(223) at 0", "Insert SimpleName: key(222) into SingleVariableDeclaration(223) at 1", "Insert SimpleType: DataOutput(225) into SingleVariableDeclaration(227) at 0", "Insert SimpleName: output(226) into SingleVariableDeclaration(227) at 1", "Insert SimpleName: IOException(228) into SimpleType: IOException(229) at 0", "Insert ExpressionStatement(234) into Block(235) at 0", "Insert SimpleName: Override(237) into MarkerAnnotation(238) at 0", "Insert SimpleName: Long(240) into SimpleType: Long(241) at 0", "Insert SimpleType: DataInput(244) into SingleVariableDeclaration(246) at 0", "Insert SimpleName: input(245) into SingleVariableDeclaration(246) at 1", "Insert SimpleName: IOException(247) into SimpleType: IOException(248) at 0", "Insert ReturnStatement(252) into Block(253) at 0", "Insert SimpleName: Long(220) into SimpleType: Long(221) at 0", "Insert SimpleName: DataOutput(224) into SimpleType: DataOutput(225) at 0", "Insert MethodInvocation(233) into ExpressionStatement(234) at 0", "Insert SimpleName: DataInput(243) into SimpleType: DataInput(244) at 0", "Insert MethodInvocation(251) into ReturnStatement(252) at 0", "Insert SimpleName: output(230) into MethodInvocation(233) at 0", "Insert SimpleName: writeLong(231) into MethodInvocation(233) at 1", "Insert SimpleName: key(232) into MethodInvocation(233) at 2", "Insert SimpleName: input(249) into MethodInvocation(251) at 0", "Insert SimpleName: readLong(250) into MethodInvocation(251) at 1"]}}, {"LongAbstractListMessageStore_cluster": {"actions": [{"root": "INS Block to MethodDeclaration at 4", "operations": ["INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: == at 1", "INS Block to WhileStatement at 1", "INS SimpleName: partition to InfixExpression: == at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: partition to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS BooleanLiteral: true to WhileStatement at 0", "INS BreakStatement to Block at 0", "INS SimpleName: service to MethodInvocation at 0", "INS SimpleName: getPartitionStore to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS InfixExpression: == to IfStatement at 0", "INS IfStatement to Block at 1", "INS WhileStatement to Block at 1", "INS SimpleName: putPartition to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from getPartitionIds to startIteration", "operations": ["UPD SimpleName: getPartitionIds from getPartitionIds to startIteration"]}, {"root": "MOVE from Block", "operations": ["MOV EnhancedForStatement to Block at 3", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 2"]}, {"root": "MOVE from CastExpression", "operations": ["MOV SimpleType: LongWritable to CastExpression at 0", "MOV SimpleType: Partition to VariableDeclarationStatement at 0"]}, {"root": "INS SimpleType: Object to SingleVariableDeclaration at 0", "operations": ["INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: Object to SingleVariableDeclaration at 0"]}, {"root": "INS SimpleName: obj to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: obj to SingleVariableDeclaration at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS CastExpression to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: vertex to VariableDeclarationFragment at 0", "INS SimpleName: obj to CastExpression at 1", "INS SimpleType: Vertex to CastExpression at 0", "INS SimpleName: Vertex to SimpleType: Vertex at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS VariableDeclarationStatement to Block at 1", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: vertexId to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "UPDATE from getOrCreatePartition to getNextPartition", "operations": ["UPD SimpleName: getOrCreatePartition from getOrCreatePartition to getNextPartition"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS SimpleName: getId to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: LongWritable to VariableDeclarationStatement at 0", "MOV SimpleType: Vertex to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from partitionId to partition", "operations": ["UPD SimpleName: partitionId from partitionId to partition"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: partitionId to MethodInvocation at 0"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1"]}, {"root": "INS SimpleName: vertexId to MethodInvocation at 0", "operations": ["INS SimpleName: vertexId to MethodInvocation at 0"]}, {"root": "DEL ParameterizedType: Partition<LongWritable,?,?>", "operations": ["DEL WildcardType: ?", "DEL WildcardType: ?", "DEL ParameterizedType: Partition<LongWritable,?,?>"]}, {"root": "DEL SimpleName: partitionId", "operations": ["DEL SimpleName: partitionId"]}, {"root": "DEL ParameterizedType: Vertex<LongWritable,?,?>", "operations": ["DEL WildcardType: ?", "DEL ParameterizedType: Vertex<LongWritable,?,?>", "DEL WildcardType: ?"]}, {"root": "DEL SimpleName: vertex", "operations": ["DEL SimpleName: vertex"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL Block", "DEL SimpleName: partitionId", "DEL SingleVariableDeclaration", "DEL PrimitiveType: int", "DEL EnhancedForStatement"]}]}}, {"LongAbstractListMessageStore_diff": {"operations": ["Insert Block(246) into MethodDeclaration(247) at 4", "Insert ExpressionStatement(169) into Block(246) at 0", "Insert WhileStatement(245) into Block(246) at 1", "Move MethodInvocation(171) into ExpressionStatement(169) at 0", "Insert BooleanLiteral: true(170) into WhileStatement(245) at 0", "Insert Block(244) into WhileStatement(245) at 1", "Update SimpleName: getPartitionIds(170) to startIteration", "Move VariableDeclarationStatement(187) into Block(244) at 0", "Insert IfStatement(186) into Block(244) at 1", "Move VariableDeclarationStatement(199) into Block(244) at 2", "Move EnhancedForStatement(222) into Block(244) at 3", "Insert ExpressionStatement(243) into Block(244) at 4", "Move SimpleType: Partition(173) into VariableDeclarationStatement(180) at 0", "Insert InfixExpression: ==(183) into IfStatement(186) at 0", "Insert Block(185) into IfStatement(186) at 1", "Insert MethodInvocation(242) into ExpressionStatement(243) at 0", "Insert SimpleName: partition(181) into InfixExpression: ==(183) at 0", "Insert NullLiteral(182) into InfixExpression: ==(183) at 1", "Insert BreakStatement(184) into Block(185) at 0", "Insert SimpleType: Object(202) into SingleVariableDeclaration(204) at 0", "Insert SimpleName: obj(203) into SingleVariableDeclaration(204) at 1", "Insert VariableDeclarationStatement(214) into Block(235) at 0", "Insert VariableDeclarationStatement(225) into Block(235) at 1", "Insert MethodInvocation(239) into MethodInvocation(242) at 0", "Insert SimpleName: putPartition(240) into MethodInvocation(242) at 1", "Insert SimpleName: partition(241) into MethodInvocation(242) at 2", "Update SimpleName: getOrCreatePartition(183) to getNextPartition", "Insert MethodInvocation(197) into MethodInvocation(198) at 2", "Insert SimpleName: Object(201) into SimpleType: Object(202) at 0", "Move SimpleType: Vertex(201) into VariableDeclarationStatement(214) at 0", "Insert VariableDeclarationFragment(213) into VariableDeclarationStatement(214) at 1", "Move SimpleType: LongWritable(203) into VariableDeclarationStatement(225) at 0", "Insert VariableDeclarationFragment(224) into VariableDeclarationStatement(225) at 1", "Insert SimpleName: service(237) into MethodInvocation(239) at 0", "Insert SimpleName: getPartitionStore(238) into MethodInvocation(239) at 1", "Update SimpleName: partitionId(196) to partition", "Move SimpleName: partitionId(196) into MethodInvocation(197) at 0", "Insert SimpleName: getId(196) into MethodInvocation(197) at 1", "Insert SimpleName: vertex(208) into VariableDeclarationFragment(213) at 0", "Insert CastExpression(212) into VariableDeclarationFragment(213) at 1", "Insert SimpleName: vertexId(217) into VariableDeclarationFragment(224) at 0", "Insert CastExpression(223) into VariableDeclarationFragment(224) at 1", "Insert SimpleType: Vertex(210) into CastExpression(212) at 0", "Insert SimpleName: obj(211) into CastExpression(212) at 1", "Move SimpleType: LongWritable(175) into CastExpression(223) at 0", "Move MethodInvocation(214) into CastExpression(223) at 1", "Insert SimpleName: vertexId(228) into MethodInvocation(230) at 0", "Insert SimpleName: Vertex(209) into SimpleType: Vertex(210) at 0", "Delete WildcardType: ?(176)", "Delete WildcardType: ?(177)", "Delete ParameterizedType: Partition<LongWritable,?,?>(178)", "Delete SimpleName: partitionId(184)", "Delete WildcardType: ?(204)", "Delete WildcardType: ?(205)", "Delete ParameterizedType: Vertex<LongWritable,?,?>(206)", "Delete SimpleName: vertex(207)", "Delete PrimitiveType: int(164)", "Delete SimpleName: partitionId(165)", "Delete SingleVariableDeclaration(166)", "Delete Block(223)", "Delete EnhancedForStatement(224)", "Delete Block(225)"]}}], "commit_stats": [{"total_files": 33, "deleted_files": 1, "testing": "True", "maintenance": "False", "build": "False"}]}