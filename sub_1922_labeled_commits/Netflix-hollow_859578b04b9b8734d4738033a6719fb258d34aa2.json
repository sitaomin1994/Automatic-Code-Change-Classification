{"application": "Netflix-hollow", "csha": "859578b04b9b8734d4738033a6719fb258d34aa2", "files": [{"HollowProducer_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 20", "INS MethodInvocation to ExpressionStatement at 0", "INS TryStatement to Block at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to TryStatement at 0", "INS Block to TryStatement at 2", "INS SimpleName: artifacts to SingleVariableDeclaration at 1", "INS TryStatement to Block at 2", "INS Block to MethodDeclaration at 6", "INS Block to TryStatement at 1", "INS SimpleName: ssos to MethodInvocation at 2", "INS SimpleType: Artifacts to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Artifacts to SimpleType: Artifacts at 0", "INS ExpressionStatement to Block at 0", "INS Block to TryStatement at 0"]}, {"root": "MOVE from TypeDeclaration: interface", "operations": ["MOV MethodDeclaration to TypeDeclaration: interface at 10"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 32", "operations": ["INS SimpleName: reverseDelta to Assignment: = at 0", "INS SimpleName: cleanup to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: reverseDelta to InfixExpression: != at 0", "INS SimpleName: cleanup to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS NullLiteral to VariableDeclarationFragment at 1", "INS Modifier: static to TypeDeclaration: class at 1", "INS SimpleName: delta to InfixExpression: != at 0", "INS InfixExpression: != to ReturnStatement at 0", "INS ExpressionStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: reverseDelta to InfixExpression: != at 0", "INS SimpleName: hasDelta to MethodDeclaration at 1", "INS IfStatement to Block at 1", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS SimpleName: snapshot to InfixExpression: != at 0", "INS SimpleName: Artifacts to TypeDeclaration: class at 3", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleName: reverseDelta to MethodInvocation at 0", "INS SimpleName: delta to InfixExpression: != at 0", "INS PrimitiveType: boolean to MethodDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 0", "INS SimpleName: delta to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS NullLiteral to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS Modifier: public to MethodDeclaration at 0", "INS InfixExpression: != to ReturnStatement at 0", "INS InfixExpression: != to IfStatement at 0", "INS NullLiteral to Assignment: = at 1", "INS NullLiteral to VariableDeclarationFragment at 1", "INS Block to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS Modifier: private to TypeDeclaration: class at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: hasReverseDelta to MethodDeclaration at 2", "INS SimpleName: reverseDelta to VariableDeclarationFragment at 0", "INS SimpleName: delta to VariableDeclarationFragment at 0", "INS NullLiteral to InfixExpression: != at 1", "INS InfixExpression: != to IfStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Modifier: final to TypeDeclaration: class at 2", "INS Block to MethodDeclaration at 3", "INS SimpleName: delta to Assignment: = at 0", "INS SimpleName: cleanup to MethodInvocation at 1", "INS SimpleName: hasSnapshot to MethodDeclaration at 2", "INS Block to MethodDeclaration at 2", "INS IfStatement to Block at 2", "INS InfixExpression: != to ReturnStatement at 0", "INS ExpressionStatement to Block at 0", "INS NullLiteral to InfixExpression: != at 1", "INS NullLiteral to InfixExpression: != at 1", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS NullLiteral to InfixExpression: != at 1", "INS NullLiteral to InfixExpression: != at 1", "INS TypeDeclaration: class to TypeDeclaration: class at 32", "INS Block to IfStatement at 1", "INS MethodDeclaration to TypeDeclaration: class at 10"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: private to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 3", "MOV PrimitiveType: void to MethodDeclaration at 1", "MOV SimpleType: IOException to MethodDeclaration at 5", "MOV SimpleName: publish to MethodDeclaration at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleName: Artifacts to SimpleType: Artifacts at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: artifacts to VariableDeclarationFragment at 0", "INS SimpleType: Artifacts to ClassInstanceCreation at 0", "INS VariableDeclarationStatement to Block at 3", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: Artifacts to VariableDeclarationStatement at 0", "INS SimpleName: Artifacts to SimpleType: Artifacts at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 2", "MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "UPDATE from getOutputStream to newOutputStream", "operations": ["UPD SimpleName: getOutputStream from getOutputStream to newOutputStream"]}, {"root": "UPDATE from getInputStream to newInputStream", "operations": ["UPD SimpleName: getInputStream from getInputStream to newInputStream"]}, {"root": "UPDATE from close to cleanup", "operations": ["UPD SimpleName: close from close to cleanup", "UPD SimpleName: close from close to cleanup"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV VariableDeclarationFragment to FieldDeclaration at 1", "MOV SimpleType: Blob to FieldDeclaration at 0"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV SimpleType: Blob to FieldDeclaration at 0"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV SimpleType: Blob to FieldDeclaration at 0"]}, {"root": "MOVE from TryStatement", "operations": ["MOV CatchClause to TryStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: cleanup to MethodInvocation at 1", "INS SimpleName: artifacts to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 3", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 4", "MOV ExpressionStatement to Block at 5"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: snapshot to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0", "INS NullLiteral to Assignment: = at 1", "INS Block to IfStatement at 1"]}, {"root": "INS SimpleType: OutputStream to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: OutputStream to SimpleType: OutputStream at 0", "INS SimpleType: OutputStream to VariableDeclarationStatement at 0"]}, {"root": "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: ssos to VariableDeclarationFragment at 0", "INS QualifiedName: artifacts.snapshot to MethodInvocation at 0", "INS SimpleName: newOutputStream to MethodInvocation at 1"]}, {"root": "INS QualifiedName: artifacts.snapshot to Assignment: = at 0", "operations": ["INS QualifiedName: artifacts.snapshot to Assignment: = at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS QualifiedName: artifacts.delta to Assignment: = at 0", "INS Assignment: = to ExpressionStatement at 0"]}, {"root": "INS TryStatement to Block at 2", "operations": ["INS TryStatement to Block at 2", "INS Block to TryStatement at 1", "INS Block to TryStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS ExpressionStatement to Block at 4", "INS Assignment: = to ExpressionStatement at 0", "INS QualifiedName: artifacts.reverseDelta to Assignment: = at 0"]}, {"root": "INS ExpressionStatement to Block at 8", "operations": ["INS QualifiedName: artifacts.reverseDelta to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: publish to MethodInvocation at 1", "INS ExpressionStatement to Block at 8", "INS SimpleName: publisher to MethodInvocation at 0"]}, {"root": "INS QualifiedName: artifacts.snapshot to MethodInvocation at 2", "operations": ["INS QualifiedName: artifacts.snapshot to MethodInvocation at 2"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS SimpleType: OutputStream to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: OutputStream to VariableDeclarationStatement at 0", "INS SimpleName: OutputStream to SimpleType: OutputStream at 0"]}, {"root": "INS SimpleType: OutputStream to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: OutputStream to VariableDeclarationStatement at 0", "INS SimpleName: OutputStream to SimpleType: OutputStream at 0"]}, {"root": "INS SimpleName: artifacts to MethodInvocation at 2", "operations": ["INS SimpleName: artifacts to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: writeSnapshot to MethodInvocation at 1", "MOV SimpleName: writer to MethodInvocation at 0"]}, {"root": "UPDATE from snapshot to ssos", "operations": ["UPD SimpleName: snapshot from snapshot to ssos"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getOutputStream to MethodInvocation at 1", "MOV SimpleName: snapshot to MethodInvocation at 0"]}, {"root": "UPDATE from publish to close", "operations": ["UPD SimpleName: publish from publish to close", "UPD SimpleName: getOutputStream from getOutputStream to close"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "UPDATE from delta to fdos", "operations": ["UPD SimpleName: delta from delta to fdos", "UPD SimpleName: delta from delta to fdos", "UPD SimpleName: publisher from publisher to fdos"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: newOutputStream to MethodInvocation at 1", "INS QualifiedName: artifacts.delta to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from delta to publisher", "operations": ["UPD SimpleName: delta from delta to publisher"]}, {"root": "UPDATE from close to publish", "operations": ["UPD SimpleName: close from close to publish"]}, {"root": "INS QualifiedName: artifacts.delta to MethodInvocation at 2", "operations": ["INS QualifiedName: artifacts.delta to MethodInvocation at 2"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "UPDATE from reverseDelta to rdos", "operations": ["UPD SimpleName: reverseDelta from reverseDelta to rdos", "UPD SimpleName: reverseDelta from reverseDelta to rdos", "UPD SimpleName: reverseDelta from reverseDelta to rdos"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS QualifiedName: artifacts.reverseDelta to MethodInvocation at 0", "INS SimpleName: newOutputStream to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: delta to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: reverseDelta to MethodInvocation at 2"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.Closeable", "DEL ImportDeclaration"]}, {"root": "DEL SimpleName: snapshot", "operations": ["DEL SimpleName: snapshot"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getOutputStream", "DEL MethodInvocation"]}, {"root": "DEL SimpleName: delta", "operations": ["DEL SimpleName: delta"]}, {"root": "DEL TryStatement", "operations": ["DEL Block", "DEL TryStatement", "DEL Block"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getOutputStream"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: publish", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: publisher", "DEL SimpleName: reverseDelta"]}, {"root": "DEL SimpleName: snapshot", "operations": ["DEL SimpleName: snapshot"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL Block", "DEL MethodInvocation", "DEL Block", "DEL MethodDeclaration", "DEL Block", "DEL TryStatement"]}, {"root": "DEL SimpleType: Closeable", "operations": ["DEL SimpleName: Closeable", "DEL SimpleType: Closeable"]}, {"root": "DEL MarkerAnnotation", "operations": ["DEL SimpleName: Override", "DEL MarkerAnnotation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}]}}, {"HollowProducer_diff": {"operations": ["Insert MethodDeclaration(806) into TypeDeclaration: class(1462) at 20", "Move MethodDeclaration(1285) into TypeDeclaration: interface(1347) at 10", "Insert TypeDeclaration: class(1461) into TypeDeclaration: class(1462) at 31", "Move Modifier: private(601) into MethodDeclaration(806) at 0", "Move PrimitiveType: void(602) into MethodDeclaration(806) at 1", "Move SimpleName: publish(603) into MethodDeclaration(806) at 2", "Move SingleVariableDeclaration(607) into MethodDeclaration(806) at 3", "Insert SingleVariableDeclaration(622) into MethodDeclaration(806) at 4", "Move SimpleType: IOException(609) into MethodDeclaration(806) at 5", "Insert Block(805) into MethodDeclaration(806) at 6", "Insert Modifier: private(1370) into TypeDeclaration: class(1461) at 0", "Insert Modifier: static(1371) into TypeDeclaration: class(1461) at 1", "Insert Modifier: final(1372) into TypeDeclaration: class(1461) at 2", "Insert SimpleName: Artifacts(1373) into TypeDeclaration: class(1461) at 3", "Insert FieldDeclaration(1379) into TypeDeclaration: class(1461) at 4", "Insert FieldDeclaration(1385) into TypeDeclaration: class(1461) at 5", "Insert FieldDeclaration(1391) into TypeDeclaration: class(1461) at 6", "Insert MethodDeclaration(1434) into TypeDeclaration: class(1461) at 7", "Insert MethodDeclaration(1443) into TypeDeclaration: class(1461) at 8", "Insert MethodDeclaration(1451) into TypeDeclaration: class(1461) at 9", "Insert MethodDeclaration(1460) into TypeDeclaration: class(1461) at 10", "Insert VariableDeclarationStatement(424) into Block(544) at 3", "Insert SimpleType: Artifacts(620) into SingleVariableDeclaration(622) at 0", "Insert SimpleName: artifacts(621) into SingleVariableDeclaration(622) at 1", "Move VariableDeclarationStatement(619) into Block(805) at 0", "Move VariableDeclarationStatement(628) into Block(805) at 1", "Move VariableDeclarationStatement(642) into Block(805) at 2", "Insert TryStatement(804) into Block(805) at 3", "Update SimpleName: getOutputStream(1275) to newOutputStream", "Update SimpleName: getInputStream(1279) to newInputStream", "Update SimpleName: close(1284) to cleanup", "Move SimpleType: Blob(630) into FieldDeclaration(1379) at 0", "Move VariableDeclarationFragment(633) into FieldDeclaration(1379) at 1", "Move SimpleType: Blob(698) into FieldDeclaration(1385) at 0", "Insert VariableDeclarationFragment(1384) into FieldDeclaration(1385) at 1", "Move SimpleType: Blob(663) into FieldDeclaration(1391) at 0", "Insert VariableDeclarationFragment(1390) into FieldDeclaration(1391) at 1", "Insert PrimitiveType: void(1392) into MethodDeclaration(1434) at 0", "Insert SimpleName: cleanup(1393) into MethodDeclaration(1434) at 1", "Insert Block(1433) into MethodDeclaration(1434) at 2", "Insert Modifier: public(1435) into MethodDeclaration(1443) at 0", "Insert PrimitiveType: boolean(1436) into MethodDeclaration(1443) at 1", "Insert SimpleName: hasSnapshot(1437) into MethodDeclaration(1443) at 2", "Insert Block(1442) into MethodDeclaration(1443) at 3", "Insert PrimitiveType: boolean(1444) into MethodDeclaration(1451) at 0", "Insert SimpleName: hasDelta(1445) into MethodDeclaration(1451) at 1", "Insert Block(1450) into MethodDeclaration(1451) at 2", "Insert Modifier: public(1452) into MethodDeclaration(1460) at 0", "Insert PrimitiveType: boolean(1453) into MethodDeclaration(1460) at 1", "Insert SimpleName: hasReverseDelta(1454) into MethodDeclaration(1460) at 2", "Insert Block(1459) into MethodDeclaration(1460) at 3", "Insert SimpleType: Artifacts(418) into VariableDeclarationStatement(424) at 0", "Insert VariableDeclarationFragment(423) into VariableDeclarationStatement(424) at 1", "Insert SimpleName: Artifacts(619) into SimpleType: Artifacts(620) at 0", "Insert Block(778) into TryStatement(804) at 0", "Move CatchClause(766) into TryStatement(804) at 1", "Insert Block(803) into TryStatement(804) at 2", "Insert SimpleName: delta(1382) into VariableDeclarationFragment(1384) at 0", "Insert NullLiteral(1383) into VariableDeclarationFragment(1384) at 1", "Insert SimpleName: reverseDelta(1388) into VariableDeclarationFragment(1390) at 0", "Insert NullLiteral(1389) into VariableDeclarationFragment(1390) at 1", "Move IfStatement(780) into Block(1433) at 0", "Insert IfStatement(1419) into Block(1433) at 1", "Insert IfStatement(1432) into Block(1433) at 2", "Insert ReturnStatement(1441) into Block(1442) at 0", "Insert ReturnStatement(1449) into Block(1450) at 0", "Insert ReturnStatement(1458) into Block(1459) at 0", "Insert SimpleName: Artifacts(417) into SimpleType: Artifacts(418) at 0", "Insert SimpleName: artifacts(419) into VariableDeclarationFragment(423) at 0", "Insert ClassInstanceCreation(422) into VariableDeclarationFragment(423) at 1", "Insert ExpressionStatement(535) into Block(542) at 0", "Move ExpressionStatement(651) into Block(778) at 0", "Move VariableDeclarationStatement(634) into Block(778) at 1", "Insert TryStatement(680) into Block(778) at 2", "Move IfStatement(733) into Block(778) at 3", "Move ExpressionStatement(738) into Block(778) at 4", "Move ExpressionStatement(747) into Block(778) at 5", "Move ExpressionStatement(772) into Block(803) at 0", "Insert Block(1405) into IfStatement(1406) at 1", "Insert InfixExpression: !=(1409) into IfStatement(1419) at 0", "Insert Block(1418) into IfStatement(1419) at 1", "Insert InfixExpression: !=(1422) into IfStatement(1432) at 0", "Insert Block(1431) into IfStatement(1432) at 1", "Insert InfixExpression: !=(1440) into ReturnStatement(1441) at 0", "Insert InfixExpression: !=(1448) into ReturnStatement(1449) at 0", "Insert InfixExpression: !=(1457) into ReturnStatement(1458) at 0", "Insert SimpleType: Artifacts(421) into ClassInstanceCreation(422) at 0", "Insert MethodInvocation(534) into ExpressionStatement(535) at 0", "Insert SimpleType: OutputStream(662) into VariableDeclarationStatement(668) at 0", "Insert VariableDeclarationFragment(667) into VariableDeclarationStatement(668) at 1", "Insert Block(674) into TryStatement(680) at 0", "Insert Block(679) into TryStatement(680) at 1", "Insert ExpressionStatement(1400) into Block(1405) at 0", "Insert ExpressionStatement(1404) into Block(1405) at 1", "Insert SimpleName: delta(1407) into InfixExpression: !=(1409) at 0", "Insert NullLiteral(1408) into InfixExpression: !=(1409) at 1", "Insert ExpressionStatement(1413) into Block(1418) at 0", "Insert ExpressionStatement(1417) into Block(1418) at 1", "Insert SimpleName: reverseDelta(1420) into InfixExpression: !=(1422) at 0", "Insert NullLiteral(1421) into InfixExpression: !=(1422) at 1", "Insert ExpressionStatement(1426) into Block(1431) at 0", "Insert ExpressionStatement(1430) into Block(1431) at 1", "Insert SimpleName: snapshot(1438) into InfixExpression: !=(1440) at 0", "Insert NullLiteral(1439) into InfixExpression: !=(1440) at 1", "Insert SimpleName: delta(1446) into InfixExpression: !=(1448) at 0", "Insert NullLiteral(1447) into InfixExpression: !=(1448) at 1", "Insert SimpleName: reverseDelta(1455) into InfixExpression: !=(1457) at 0", "Insert NullLiteral(1456) into InfixExpression: !=(1457) at 1", "Insert SimpleName: Artifacts(420) into SimpleType: Artifacts(421) at 0", "Insert SimpleName: artifacts(532) into MethodInvocation(534) at 0", "Insert SimpleName: cleanup(533) into MethodInvocation(534) at 1", "Insert QualifiedName: artifacts.snapshot(652) into Assignment: =(659) at 0", "Insert SimpleName: OutputStream(661) into SimpleType: OutputStream(662) at 0", "Insert SimpleName: ssos(663) into VariableDeclarationFragment(667) at 0", "Insert MethodInvocation(666) into VariableDeclarationFragment(667) at 1", "Insert ExpressionStatement(673) into Block(674) at 0", "Insert ExpressionStatement(678) into Block(679) at 0", "Insert ExpressionStatement(697) into Block(762) at 0", "Insert TryStatement(717) into Block(762) at 2", "Move ExpressionStatement(694) into Block(762) at 3", "Insert ExpressionStatement(736) into Block(762) at 4", "Insert ExpressionStatement(761) into Block(762) at 7", "Insert QualifiedName: artifacts.snapshot(766) into MethodInvocation(767) at 2", "Move MethodInvocation(778) into ExpressionStatement(1400) at 0", "Insert Assignment: =(1403) into ExpressionStatement(1404) at 0", "Insert MethodInvocation(1412) into ExpressionStatement(1413) at 0", "Insert Assignment: =(1416) into ExpressionStatement(1417) at 0", "Insert MethodInvocation(1425) into ExpressionStatement(1426) at 0", "Insert Assignment: =(1429) into ExpressionStatement(1430) at 0", "Insert QualifiedName: artifacts.snapshot(664) into MethodInvocation(666) at 0", "Insert SimpleName: newOutputStream(665) into MethodInvocation(666) at 1", "Insert MethodInvocation(672) into ExpressionStatement(673) at 0", "Insert MethodInvocation(677) into ExpressionStatement(678) at 0", "Insert Assignment: =(696) into ExpressionStatement(697) at 0", "Insert SimpleType: OutputStream(699) into VariableDeclarationStatement(705) at 0", "Insert Block(711) into TryStatement(717) at 0", "Insert Block(716) into TryStatement(717) at 1", "Insert Assignment: =(735) into ExpressionStatement(736) at 0", "Insert SimpleType: OutputStream(738) into VariableDeclarationStatement(744) at 0", "Insert MethodInvocation(760) into ExpressionStatement(761) at 0", "Update SimpleName: close(777) to cleanup", "Insert SimpleName: snapshot(1401) into Assignment: =(1403) at 0", "Insert NullLiteral(1402) into Assignment: =(1403) at 1", "Insert SimpleName: delta(1410) into MethodInvocation(1412) at 0", "Insert SimpleName: cleanup(1411) into MethodInvocation(1412) at 1", "Insert SimpleName: delta(1414) into Assignment: =(1416) at 0", "Insert NullLiteral(1415) into Assignment: =(1416) at 1", "Insert SimpleName: reverseDelta(1423) into MethodInvocation(1425) at 0", "Insert SimpleName: cleanup(1424) into MethodInvocation(1425) at 1", "Insert SimpleName: reverseDelta(1427) into Assignment: =(1429) at 0", "Insert NullLiteral(1428) into Assignment: =(1429) at 1", "Insert SimpleName: artifacts(440) into MethodInvocation(441) at 2", "Move SimpleName: writer(652) into MethodInvocation(672) at 0", "Move SimpleName: writeSnapshot(653) into MethodInvocation(672) at 1", "Insert SimpleName: ssos(671) into MethodInvocation(672) at 2", "Update SimpleName: snapshot(654) to ssos", "Move SimpleName: snapshot(654) into MethodInvocation(677) at 0", "Update SimpleName: getOutputStream(655) to close", "Move SimpleName: getOutputStream(655) into MethodInvocation(677) at 1", "Insert QualifiedName: artifacts.delta(684) into Assignment: =(696) at 0", "Move MethodInvocation(675) into Assignment: =(696) at 1", "Insert SimpleName: OutputStream(698) into SimpleType: OutputStream(699) at 0", "Update SimpleName: delta(664) to fdos", "Insert MethodInvocation(703) into VariableDeclarationFragment(704) at 1", "Move ExpressionStatement(684) into Block(711) at 0", "Move ExpressionStatement(689) into Block(716) at 0", "Update SimpleName: delta(691) to publisher", "Update SimpleName: close(692) to publish", "Insert QualifiedName: artifacts.delta(720) into MethodInvocation(721) at 2", "Insert QualifiedName: artifacts.reverseDelta(723) into Assignment: =(735) at 0", "Move MethodInvocation(710) into Assignment: =(735) at 1", "Insert SimpleName: OutputStream(737) into SimpleType: OutputStream(738) at 0", "Update SimpleName: reverseDelta(699) to rdos", "Insert MethodInvocation(742) into VariableDeclarationFragment(743) at 1", "Insert SimpleName: publisher(757) into MethodInvocation(760) at 0", "Insert SimpleName: publish(758) into MethodInvocation(760) at 1", "Insert QualifiedName: artifacts.reverseDelta(759) into MethodInvocation(760) at 2", "Insert QualifiedName: artifacts.delta(701) into MethodInvocation(703) at 0", "Insert SimpleName: newOutputStream(702) into MethodInvocation(703) at 1", "Insert QualifiedName: artifacts.reverseDelta(740) into MethodInvocation(742) at 0", "Insert SimpleName: newOutputStream(741) into MethodInvocation(742) at 1", "Update SimpleName: delta(680) to fdos", "Move SimpleName: delta(680) into MethodInvocation(709) at 2", "Update SimpleName: publisher(685) to fdos", "Update SimpleName: publish(686) to close", "Update SimpleName: reverseDelta(715) to rdos", "Move SimpleName: reverseDelta(715) into MethodInvocation(748) at 2", "Update SimpleName: reverseDelta(726) to rdos", "Delete QualifiedName: java.io.Closeable(6)", "Delete ImportDeclaration(7)", "Delete SimpleName: snapshot(643)", "Delete SimpleName: getOutputStream(681)", "Delete MethodInvocation(682)", "Delete SimpleName: delta(687)", "Delete Block(690)", "Delete Block(695)", "Delete TryStatement(696)", "Delete SimpleName: getOutputStream(716)", "Delete MethodInvocation(717)", "Delete SimpleName: publisher(720)", "Delete SimpleName: publish(721)", "Delete SimpleName: reverseDelta(722)", "Delete MethodInvocation(723)", "Delete ExpressionStatement(724)", "Delete SimpleName: snapshot(736)", "Delete MethodInvocation(656)", "Delete MethodInvocation(657)", "Delete ExpressionStatement(658)", "Delete Block(748)", "Delete Block(781)", "Delete TryStatement(782)", "Delete Block(783)", "Delete MethodDeclaration(784)", "Delete SimpleName: Closeable(1271)", "Delete SimpleType: Closeable(1272)", "Delete SimpleName: Override(1281)", "Delete MarkerAnnotation(1282)", "Delete ExpressionStatement(779)"]}}, {"AbstractHollowPublisher_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 12", "MOV ImportDeclaration to CompilationUnit at 2", "MOV ImportDeclaration to CompilationUnit at 3"]}, {"root": "UPDATE from com.netflix.hollow.api.producer.HollowProducer.Blob.Type to com.netflix.hollow.api.producer.HollowProducer.Blob.Type.DELTA", "operations": ["UPD QualifiedName: com.netflix.hollow.api.producer.HollowProducer.Blob.Type from com.netflix.hollow.api.producer.HollowProducer.Blob.Type to com.netflix.hollow.api.producer.HollowProducer.Blob.Type.DELTA"]}, {"root": "UPDATE from java.nio.file.Files.newInputStream to com.netflix.hollow.api.producer.HollowProducer.Blob.Type.REVERSE_DELTA", "operations": ["UPD QualifiedName: java.nio.file.Files.newInputStream from java.nio.file.Files.newInputStream to com.netflix.hollow.api.producer.HollowProducer.Blob.Type.REVERSE_DELTA"]}, {"root": "UPDATE from com.netflix.hollow.api.producer.HollowProducer.Publisher to com.netflix.hollow.api.producer.HollowProducer.Blob.Type.SNAPSHOT", "operations": ["UPD QualifiedName: com.netflix.hollow.api.producer.HollowProducer.Publisher from com.netflix.hollow.api.producer.HollowProducer.Publisher to com.netflix.hollow.api.producer.HollowProducer.Blob.Type.SNAPSHOT"]}, {"root": "UPDATE from com.netflix.hollow.api.producer.HollowProducer.Blob.Type to java.nio.file.Files", "operations": ["UPD QualifiedName: com.netflix.hollow.api.producer.HollowProducer.Blob.Type from com.netflix.hollow.api.producer.HollowProducer.Blob.Type to java.nio.file.Files"]}, {"root": "UPDATE from getOutputStream to newOutputStream", "operations": ["UPD SimpleName: getOutputStream from getOutputStream to newOutputStream"]}, {"root": "UPDATE from getInputStream to newInputStream", "operations": ["UPD SimpleName: getInputStream from getInputStream to newInputStream"]}, {"root": "UPDATE from close to cleanup", "operations": ["UPD SimpleName: close from close to cleanup"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS Block to MethodDeclaration at 4"]}, {"root": "MOVE from Block", "operations": ["MOV TryStatement to Block at 0"]}, {"root": "INS ReturnStatement to Block at 1", "operations": ["INS ClassInstanceCreation to ReturnStatement at 0", "INS ReturnStatement to Block at 1"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS ClassInstanceCreation to ReturnStatement at 0", "INS ReturnStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0"]}, {"root": "MOVE from ExpressionStatement", "operations": ["MOV MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: ex to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: printStackTrace to MethodInvocation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 1", "MOV SimpleType: BufferedOutputStream to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 1", "MOV SimpleType: BufferedInputStream to ClassInstanceCreation at 0"]}, {"root": "UPDATE from out to deleteIfExists", "operations": ["UPD SimpleName: out from out to deleteIfExists"]}, {"root": "UPDATE from close to stagedArtifactPath", "operations": ["UPD SimpleName: close from close to stagedArtifactPath"]}, {"root": "INS SimpleName: Files to MethodInvocation at 0", "operations": ["INS SimpleName: Files to MethodInvocation at 0"]}, {"root": "INS SimpleName: Files to MethodInvocation at 0", "operations": ["INS SimpleName: Files to MethodInvocation at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.nio.file.Files.newOutputStream"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: out", "DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL SimpleName: BufferedOutputStream", "DEL SimpleType: BufferedOutputStream"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: BufferedInputStream", "DEL Modifier: private", "DEL SimpleName: BufferedInputStream", "DEL SimpleName: in", "DEL VariableDeclarationFragment", "DEL FieldDeclaration"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: out", "DEL Assignment: =", "DEL ExpressionStatement", "DEL ClassInstanceCreation"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: out", "DEL ReturnStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: in", "DEL Assignment: =", "DEL ClassInstanceCreation", "DEL ExpressionStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL SimpleName: in"]}, {"root": "DEL IfStatement", "operations": ["DEL InfixExpression: !=", "DEL ExpressionStatement", "DEL SimpleName: out", "DEL IfStatement", "DEL NullLiteral"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: out", "DEL Assignment: =", "DEL NullLiteral", "DEL ExpressionStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: in", "DEL NullLiteral", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL SimpleName: in", "DEL IfStatement", "DEL SimpleName: close", "DEL ExpressionStatement"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL ExpressionStatement", "DEL SimpleName: in", "DEL NullLiteral"]}, {"root": "DEL ThrowStatement", "operations": ["DEL SimpleName: RuntimeException", "DEL ThrowStatement", "DEL ClassInstanceCreation", "DEL SimpleType: RuntimeException", "DEL SimpleName: ex"]}, {"root": "DEL Block", "operations": ["DEL InfixExpression: !=", "DEL IfStatement", "DEL Block", "DEL NullLiteral", "DEL Block", "DEL SimpleName: out"]}]}}, {"AbstractHollowPublisher_diff": {"operations": ["Move ImportDeclaration(9) into CompilationUnit(464) at 2", "Move ImportDeclaration(31) into CompilationUnit(464) at 3", "Move ImportDeclaration(33) into CompilationUnit(464) at 12", "Update QualifiedName: com.netflix.hollow.api.producer.HollowProducer.Blob.Type(2) to com.netflix.hollow.api.producer.HollowProducer.Blob.Type.DELTA", "Update QualifiedName: java.nio.file.Files.newInputStream(8) to com.netflix.hollow.api.producer.HollowProducer.Blob.Type.REVERSE_DELTA", "Update QualifiedName: com.netflix.hollow.api.producer.HollowProducer.Publisher(30) to com.netflix.hollow.api.producer.HollowProducer.Blob.Type.SNAPSHOT", "Update QualifiedName: com.netflix.hollow.api.producer.HollowProducer.Blob.Type(32) to java.nio.file.Files", "Update SimpleName: getOutputStream(360) to newOutputStream", "Update SimpleName: getInputStream(398) to newInputStream", "Update SimpleName: close(429) to cleanup", "Insert Block(426) into MethodDeclaration(427) at 4", "Move TryStatement(469) into Block(426) at 0", "Insert ReturnStatement(360) into Block(361) at 1", "Insert ReturnStatement(389) into Block(390) at 0", "Insert ExpressionStatement(413) into Block(414) at 0", "Insert ClassInstanceCreation(359) into ReturnStatement(360) at 0", "Insert ClassInstanceCreation(388) into ReturnStatement(389) at 0", "Move MethodInvocation(438) into ExpressionStatement(413) at 0", "Insert ExpressionStatement(422) into Block(423) at 0", "Move SimpleType: BufferedOutputStream(369) into ClassInstanceCreation(359) at 0", "Move MethodInvocation(372) into ClassInstanceCreation(359) at 1", "Move SimpleType: BufferedInputStream(401) into ClassInstanceCreation(388) at 0", "Move MethodInvocation(404) into ClassInstanceCreation(388) at 1", "Update SimpleName: out(436) to deleteIfExists", "Update SimpleName: close(437) to stagedArtifactPath", "Insert MethodInvocation(421) into ExpressionStatement(422) at 0", "Insert SimpleName: Files(355) into MethodInvocation(358) at 0", "Insert SimpleName: Files(384) into MethodInvocation(387) at 0", "Insert SimpleName: ex(419) into MethodInvocation(421) at 0", "Insert SimpleName: printStackTrace(420) into MethodInvocation(421) at 1", "Delete QualifiedName: java.nio.file.Files.newOutputStream(10)", "Delete ImportDeclaration(11)", "Delete Modifier: private(231)", "Delete SimpleName: BufferedOutputStream(232)", "Delete SimpleType: BufferedOutputStream(233)", "Delete SimpleName: out(234)", "Delete VariableDeclarationFragment(235)", "Delete FieldDeclaration(236)", "Delete Modifier: private(237)", "Delete SimpleName: BufferedInputStream(238)", "Delete SimpleType: BufferedInputStream(239)", "Delete SimpleName: in(240)", "Delete VariableDeclarationFragment(241)", "Delete FieldDeclaration(242)", "Delete SimpleName: out(367)", "Delete ClassInstanceCreation(373)", "Delete Assignment: =(374)", "Delete ExpressionStatement(375)", "Delete SimpleName: out(376)", "Delete ReturnStatement(377)", "Delete SimpleName: in(399)", "Delete ClassInstanceCreation(405)", "Delete Assignment: =(406)", "Delete ExpressionStatement(407)", "Delete SimpleName: in(408)", "Delete ReturnStatement(409)", "Delete SimpleName: out(433)", "Delete NullLiteral(434)", "Delete InfixExpression: !=(435)", "Delete ExpressionStatement(439)", "Delete IfStatement(440)", "Delete SimpleName: out(441)", "Delete NullLiteral(442)", "Delete Assignment: =(443)", "Delete ExpressionStatement(444)", "Delete SimpleName: in(445)", "Delete NullLiteral(446)", "Delete InfixExpression: !=(447)", "Delete SimpleName: in(448)", "Delete SimpleName: close(449)", "Delete MethodInvocation(450)", "Delete ExpressionStatement(451)", "Delete IfStatement(452)", "Delete SimpleName: in(453)", "Delete NullLiteral(454)", "Delete Assignment: =(455)", "Delete ExpressionStatement(456)", "Delete SimpleName: RuntimeException(462)", "Delete SimpleType: RuntimeException(463)", "Delete SimpleName: ex(464)", "Delete ClassInstanceCreation(465)", "Delete ThrowStatement(466)", "Delete SimpleName: out(430)", "Delete NullLiteral(431)", "Delete InfixExpression: !=(432)", "Delete Block(470)", "Delete IfStatement(471)", "Delete Block(472)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}