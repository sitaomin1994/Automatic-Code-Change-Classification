{"application": "apache-mina-sshd", "csha": "e0041fc60281b11037384abb79c3a94ef8bf8c5e", "files": [{"ChannelFactory_cluster": {"actions": []}}, {"ChannelFactory_diff": {"operations": []}}, {"BaseMac_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: org.apache.sshd.common.util.NumberUtils to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 12", "operations": ["INS SimpleName: Override to MarkerAnnotation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS PrimitiveType: int to MethodDeclaration at 3", "INS SimpleName: defbsize to ReturnStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS Modifier: public to MethodDeclaration at 1", "INS Modifier: final to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: getDefaultBlockSize to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS SimpleName: update to MethodDeclaration at 3", "INS SimpleName: buf to MethodInvocation at 1", "INS SimpleName: buf to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: update to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS ExpressionStatement to Block at 0", "INS SimpleName: buf to MethodInvocation at 2", "INS Dimension to SingleVariableDeclaration at 2", "INS SimpleName: length to MethodInvocation at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: NumberUtils to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: byte to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS SimpleName: buf to SingleVariableDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleType: Exception to MethodDeclaration at 5", "INS Block to MethodDeclaration at 6", "INS SimpleName: buf to MethodInvocation at 1", "INS SimpleName: doFinal to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: doFinal to MethodDeclaration at 3", "INS ArrayType: byte[] to SingleVariableDeclaration at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Dimension to ArrayType: byte[] at 1"]}, {"root": "INS Modifier: final to MethodDeclaration at 2", "operations": ["INS Modifier: final to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS MarkerAnnotation to MethodDeclaration at 0", "operations": ["INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "UPDATE from foo to buf", "operations": ["UPD SimpleName: foo from foo to buf", "UPD SimpleName: foo from foo to buf"]}, {"root": "UPDATE from s to offset", "operations": ["UPD SimpleName: s from s to offset", "UPD SimpleName: s from s to offset"]}, {"root": "UPDATE from l to len", "operations": ["UPD SimpleName: l from l to len", "UPD SimpleName: l from l to len"]}, {"root": "INS StringLiteral: \"/\" to InfixExpression: + at 5", "operations": ["INS StringLiteral: \"/\" to InfixExpression: + at 5"]}, {"root": "INS MethodInvocation to InfixExpression: + at 6", "operations": ["INS MethodInvocation to InfixExpression: + at 6", "INS SimpleName: getDefaultBlockSize to MethodInvocation at 0"]}]}}, {"BaseMac_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(377) at 2", "Insert QualifiedName: org.apache.sshd.common.util.NumberUtils(4) into ImportDeclaration(5) at 0", "Insert MethodDeclaration(122) into TypeDeclaration: class(376) at 12", "Insert MethodDeclaration(264) into TypeDeclaration: class(376) at 15", "Insert MethodDeclaration(307) into TypeDeclaration: class(376) at 17", "Insert Modifier: final(106) into MethodDeclaration(112) at 2", "Insert MarkerAnnotation(114) into MethodDeclaration(122) at 0", "Insert Modifier: public(115) into MethodDeclaration(122) at 1", "Insert Modifier: final(116) into MethodDeclaration(122) at 2", "Insert PrimitiveType: int(117) into MethodDeclaration(122) at 3", "Insert SimpleName: getDefaultBlockSize(118) into MethodDeclaration(122) at 4", "Insert Block(121) into MethodDeclaration(122) at 5", "Move MarkerAnnotation(233) into MethodDeclaration(264) at 0", "Insert Modifier: public(247) into MethodDeclaration(264) at 1", "Insert PrimitiveType: void(248) into MethodDeclaration(264) at 2", "Insert SimpleName: update(249) into MethodDeclaration(264) at 3", "Insert SingleVariableDeclaration(253) into MethodDeclaration(264) at 4", "Insert Block(263) into MethodDeclaration(264) at 5", "Insert MarkerAnnotation(266) into MethodDeclaration(288) at 0", "Insert MarkerAnnotation(290) into MethodDeclaration(307) at 0", "Insert Modifier: public(291) into MethodDeclaration(307) at 1", "Insert PrimitiveType: void(292) into MethodDeclaration(307) at 2", "Insert SimpleName: doFinal(293) into MethodDeclaration(307) at 3", "Insert SingleVariableDeclaration(298) into MethodDeclaration(307) at 4", "Insert SimpleType: Exception(300) into MethodDeclaration(307) at 5", "Insert Block(306) into MethodDeclaration(307) at 6", "Insert SimpleName: Override(113) into MarkerAnnotation(114) at 0", "Insert ReturnStatement(120) into Block(121) at 0", "Insert PrimitiveType: byte(250) into SingleVariableDeclaration(253) at 0", "Insert SimpleName: buf(251) into SingleVariableDeclaration(253) at 1", "Insert Dimension(252) into SingleVariableDeclaration(253) at 2", "Insert ExpressionStatement(262) into Block(263) at 0", "Insert SimpleName: Override(265) into MarkerAnnotation(266) at 0", "Update SimpleName: foo(238) to buf", "Update SimpleName: s(242) to offset", "Update SimpleName: l(245) to len", "Insert SimpleName: Override(289) into MarkerAnnotation(290) at 0", "Insert ArrayType: byte[](296) into SingleVariableDeclaration(298) at 0", "Insert SimpleName: buf(297) into SingleVariableDeclaration(298) at 1", "Insert SimpleName: Exception(299) into SimpleType: Exception(300) at 0", "Insert ExpressionStatement(305) into Block(306) at 0", "Insert SimpleName: defbsize(119) into ReturnStatement(120) at 0", "Insert MethodInvocation(261) into ExpressionStatement(262) at 0", "Insert PrimitiveType: byte(294) into ArrayType: byte[](296) at 0", "Insert Dimension(295) into ArrayType: byte[](296) at 1", "Insert MethodInvocation(304) into ExpressionStatement(305) at 0", "Insert SimpleName: update(254) into MethodInvocation(261) at 0", "Insert SimpleName: buf(255) into MethodInvocation(261) at 1", "Insert NumberLiteral: 0(256) into MethodInvocation(261) at 2", "Insert MethodInvocation(260) into MethodInvocation(261) at 3", "Update SimpleName: foo(249) to buf", "Update SimpleName: s(250) to offset", "Update SimpleName: l(251) to len", "Insert SimpleName: doFinal(301) into MethodInvocation(304) at 0", "Insert SimpleName: buf(302) into MethodInvocation(304) at 1", "Insert NumberLiteral: 0(303) into MethodInvocation(304) at 2", "Insert StringLiteral: \"/\"(368) into InfixExpression: +(372) at 5", "Insert MethodInvocation(370) into InfixExpression: +(372) at 6", "Insert SimpleName: NumberUtils(257) into MethodInvocation(260) at 0", "Insert SimpleName: length(258) into MethodInvocation(260) at 1", "Insert SimpleName: buf(259) into MethodInvocation(260) at 2", "Insert SimpleName: getDefaultBlockSize(369) into MethodInvocation(370) at 0"]}}, {"BuiltinMacs_cluster": {"actions": [{"root": "INS FieldDeclaration to EnumDeclaration at 13", "operations": ["INS FieldDeclaration to EnumDeclaration at 13", "INS SimpleType: String to FieldDeclaration at 2", "INS SimpleName: algorithm to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS FieldDeclaration to EnumDeclaration at 14", "operations": ["INS PrimitiveType: int to FieldDeclaration at 2", "INS SimpleName: defbsize to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS FieldDeclaration to EnumDeclaration at 14", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: final to FieldDeclaration at 1"]}, {"root": "INS FieldDeclaration to EnumDeclaration at 15", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: bsize to VariableDeclarationFragment at 0", "INS FieldDeclaration to EnumDeclaration at 15", "INS Modifier: private to FieldDeclaration at 0", "INS PrimitiveType: int to FieldDeclaration at 2"]}, {"root": "INS MethodDeclaration to EnumDeclaration at 17", "operations": ["INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: create to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS MethodInvocation to ClassInstanceCreation at 3", "INS MethodInvocation to ClassInstanceCreation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: getBlockSize to MethodInvocation at 0", "INS SimpleName: getAlgorithm to MethodInvocation at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: getDefaultBlockSize to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS MethodDeclaration to EnumDeclaration at 17"]}, {"root": "INS MethodDeclaration to EnumDeclaration at 19", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS MethodDeclaration to EnumDeclaration at 19", "INS Modifier: final to MethodDeclaration at 2", "INS SimpleName: getAlgorithm to MethodDeclaration at 4", "INS Block to MethodDeclaration at 5", "INS ReturnStatement to Block at 0", "INS SimpleName: algorithm to ReturnStatement at 0", "INS SimpleType: String to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to EnumDeclaration at 20", "operations": ["INS Modifier: final to MethodDeclaration at 2", "INS ReturnStatement to Block at 0", "INS SimpleName: getBlockSize to MethodDeclaration at 4", "INS Block to MethodDeclaration at 5", "INS MethodDeclaration to EnumDeclaration at 20", "INS SimpleName: bsize to ReturnStatement at 0", "INS PrimitiveType: int to MethodDeclaration at 3", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to EnumDeclaration at 21", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS Modifier: final to MethodDeclaration at 2", "INS MethodDeclaration to EnumDeclaration at 21", "INS PrimitiveType: int to MethodDeclaration at 3", "INS SimpleName: defbsize to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: getDefaultBlockSize to MethodDeclaration at 4", "INS Block to MethodDeclaration at 5"]}, {"root": "INS StringLiteral: \"HmacMD5\" to EnumConstantDeclaration at 2", "operations": ["INS StringLiteral: \"HmacMD5\" to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 16 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 16 to EnumConstantDeclaration at 3"]}, {"root": "INS NumberLiteral: 16 to EnumConstantDeclaration at 4", "operations": ["INS NumberLiteral: 16 to EnumConstantDeclaration at 4"]}, {"root": "INS StringLiteral: \"HmacMD5\" to EnumConstantDeclaration at 2", "operations": ["INS StringLiteral: \"HmacMD5\" to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 12 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 12 to EnumConstantDeclaration at 3"]}, {"root": "INS NumberLiteral: 16 to EnumConstantDeclaration at 4", "operations": ["INS NumberLiteral: 16 to EnumConstantDeclaration at 4"]}, {"root": "INS StringLiteral: \"HmacSHA1\" to EnumConstantDeclaration at 2", "operations": ["INS StringLiteral: \"HmacSHA1\" to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 20 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 20 to EnumConstantDeclaration at 3"]}, {"root": "INS NumberLiteral: 20 to EnumConstantDeclaration at 4", "operations": ["INS NumberLiteral: 20 to EnumConstantDeclaration at 4"]}, {"root": "INS StringLiteral: \"HmacSHA1\" to EnumConstantDeclaration at 2", "operations": ["INS StringLiteral: \"HmacSHA1\" to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 12 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 12 to EnumConstantDeclaration at 3"]}, {"root": "INS NumberLiteral: 20 to EnumConstantDeclaration at 4", "operations": ["INS NumberLiteral: 20 to EnumConstantDeclaration at 4"]}, {"root": "INS StringLiteral: \"HmacSHA256\" to EnumConstantDeclaration at 2", "operations": ["INS StringLiteral: \"HmacSHA256\" to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 32 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 32 to EnumConstantDeclaration at 3"]}, {"root": "INS NumberLiteral: 32 to EnumConstantDeclaration at 4", "operations": ["INS NumberLiteral: 32 to EnumConstantDeclaration at 4"]}, {"root": "INS StringLiteral: \"HmacSHA512\" to EnumConstantDeclaration at 2", "operations": ["INS StringLiteral: \"HmacSHA512\" to EnumConstantDeclaration at 2"]}, {"root": "INS NumberLiteral: 64 to EnumConstantDeclaration at 3", "operations": ["INS NumberLiteral: 64 to EnumConstantDeclaration at 3"]}, {"root": "INS NumberLiteral: 65 to EnumConstantDeclaration at 4", "operations": ["INS NumberLiteral: 65 to EnumConstantDeclaration at 4"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 1", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: factoryName to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: bsize to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: defbsize to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: int to SingleVariableDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: Mac to MethodDeclaration at 2", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "UPDATE from facName to algorithm", "operations": ["UPD SimpleName: facName from facName to algorithm"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS ThisExpression to FieldAccess at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: algorithm to FieldAccess at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: algorithm to Assignment: = at 1"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: bsize to Assignment: = at 1", "INS SimpleName: bsize to FieldAccess at 1", "INS ExpressionStatement to Block at 2"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: defbsize to Assignment: = at 1", "INS ExpressionStatement to Block at 3", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: defbsize to FieldAccess at 1"]}, {"root": "INS FieldAccess to Assignment: = at 0", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: factoryName to FieldAccess at 1"]}, {"root": "UPDATE from facName to factoryName", "operations": ["UPD SimpleName: facName from facName to factoryName"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: BaseMac to ClassInstanceCreation at 0"]}, {"root": "DEL AnonymousClassDeclaration", "operations": ["DEL Modifier: public", "DEL ClassInstanceCreation", "DEL ReturnStatement", "DEL SimpleName: BaseMac", "DEL MethodDeclaration", "DEL SimpleName: create", "DEL StringLiteral: \"HmacMD5\"", "DEL MarkerAnnotation", "DEL AnonymousClassDeclaration", "DEL SimpleType: Mac", "DEL NumberLiteral: 16", "DEL SimpleType: BaseMac", "DEL SimpleName: Mac", "DEL NumberLiteral: 16", "DEL SimpleName: Override", "DEL Block"]}, {"root": "DEL AnonymousClassDeclaration", "operations": ["DEL AnonymousClassDeclaration", "DEL NumberLiteral: 12", "DEL Modifier: public", "DEL Block", "DEL SimpleType: BaseMac", "DEL SimpleName: BaseMac", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL NumberLiteral: 16", "DEL SimpleType: Mac", "DEL StringLiteral: \"HmacMD5\"", "DEL SimpleName: create", "DEL ClassInstanceCreation", "DEL SimpleName: Override", "DEL SimpleName: Mac", "DEL MarkerAnnotation"]}, {"root": "DEL AnonymousClassDeclaration", "operations": ["DEL SimpleType: Mac", "DEL NumberLiteral: 20", "DEL ReturnStatement", "DEL SimpleName: BaseMac", "DEL Block", "DEL SimpleName: Mac", "DEL AnonymousClassDeclaration", "DEL SimpleName: create", "DEL SimpleType: BaseMac", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL StringLiteral: \"HmacSHA1\"", "DEL NumberLiteral: 20", "DEL Modifier: public"]}, {"root": "DEL AnonymousClassDeclaration", "operations": ["DEL Block", "DEL SimpleName: create", "DEL SimpleType: BaseMac", "DEL SimpleName: BaseMac", "DEL NumberLiteral: 20", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL SimpleType: Mac", "DEL StringLiteral: \"HmacSHA1\"", "DEL ReturnStatement", "DEL Modifier: public", "DEL AnonymousClassDeclaration", "DEL NumberLiteral: 12", "DEL SimpleName: Mac"]}, {"root": "DEL AnonymousClassDeclaration", "operations": ["DEL SimpleName: create", "DEL SimpleName: Mac", "DEL SimpleName: BaseMac", "DEL NumberLiteral: 32", "DEL ReturnStatement", "DEL Block", "DEL AnonymousClassDeclaration", "DEL MethodDeclaration", "DEL ClassInstanceCreation", "DEL SimpleType: BaseMac", "DEL Modifier: public", "DEL StringLiteral: \"HmacSHA256\"", "DEL SimpleType: Mac", "DEL NumberLiteral: 32"]}, {"root": "DEL AnonymousClassDeclaration", "operations": ["DEL NumberLiteral: 64", "DEL Block", "DEL NumberLiteral: 64", "DEL ReturnStatement", "DEL Modifier: public", "DEL SimpleName: create", "DEL MethodDeclaration", "DEL AnonymousClassDeclaration", "DEL StringLiteral: \"HmacSHA1\"", "DEL ClassInstanceCreation"]}, {"root": "DEL SimpleName: factoryName", "operations": ["DEL SimpleName: factoryName"]}]}}, {"BuiltinMacs_diff": {"operations": ["Insert FieldDeclaration(128) into EnumDeclaration(878) at 13", "Insert FieldDeclaration(134) into EnumDeclaration(878) at 14", "Insert FieldDeclaration(140) into EnumDeclaration(878) at 15", "Insert MethodDeclaration(199) into EnumDeclaration(878) at 17", "Insert MethodDeclaration(221) into EnumDeclaration(878) at 19", "Insert MethodDeclaration(231) into EnumDeclaration(878) at 20", "Insert MethodDeclaration(241) into EnumDeclaration(878) at 21", "Insert StringLiteral: \"HmacMD5\"(43) into EnumConstantDeclaration(46) at 2", "Insert NumberLiteral: 16(44) into EnumConstantDeclaration(46) at 3", "Insert NumberLiteral: 16(45) into EnumConstantDeclaration(46) at 4", "Insert StringLiteral: \"HmacMD5\"(49) into EnumConstantDeclaration(52) at 2", "Insert NumberLiteral: 12(50) into EnumConstantDeclaration(52) at 3", "Insert NumberLiteral: 16(51) into EnumConstantDeclaration(52) at 4", "Insert StringLiteral: \"HmacSHA1\"(55) into EnumConstantDeclaration(58) at 2", "Insert NumberLiteral: 20(56) into EnumConstantDeclaration(58) at 3", "Insert NumberLiteral: 20(57) into EnumConstantDeclaration(58) at 4", "Insert StringLiteral: \"HmacSHA1\"(61) into EnumConstantDeclaration(64) at 2", "Insert NumberLiteral: 12(62) into EnumConstantDeclaration(64) at 3", "Insert NumberLiteral: 20(63) into EnumConstantDeclaration(64) at 4", "Insert StringLiteral: \"HmacSHA256\"(67) into EnumConstantDeclaration(70) at 2", "Insert NumberLiteral: 32(68) into EnumConstantDeclaration(70) at 3", "Insert NumberLiteral: 32(69) into EnumConstantDeclaration(70) at 4", "Insert StringLiteral: \"HmacSHA512\"(73) into EnumConstantDeclaration(76) at 2", "Insert NumberLiteral: 64(74) into EnumConstantDeclaration(76) at 3", "Insert NumberLiteral: 65(75) into EnumConstantDeclaration(76) at 4", "Insert Modifier: private(122) into FieldDeclaration(128) at 0", "Insert Modifier: final(123) into FieldDeclaration(128) at 1", "Insert SimpleType: String(125) into FieldDeclaration(128) at 2", "Insert VariableDeclarationFragment(127) into FieldDeclaration(128) at 3", "Insert Modifier: private(129) into FieldDeclaration(134) at 0", "Insert Modifier: final(130) into FieldDeclaration(134) at 1", "Insert PrimitiveType: int(131) into FieldDeclaration(134) at 2", "Insert VariableDeclarationFragment(133) into FieldDeclaration(134) at 3", "Insert Modifier: private(135) into FieldDeclaration(140) at 0", "Insert Modifier: final(136) into FieldDeclaration(140) at 1", "Insert PrimitiveType: int(137) into FieldDeclaration(140) at 2", "Insert VariableDeclarationFragment(139) into FieldDeclaration(140) at 3", "Insert SingleVariableDeclaration(145) into MethodDeclaration(181) at 1", "Insert SingleVariableDeclaration(152) into MethodDeclaration(181) at 3", "Insert SingleVariableDeclaration(155) into MethodDeclaration(181) at 4", "Move MarkerAnnotation(139) into MethodDeclaration(199) at 0", "Insert Modifier: public(184) into MethodDeclaration(199) at 1", "Move SimpleType: Mac(142) into MethodDeclaration(199) at 2", "Insert SimpleName: create(187) into MethodDeclaration(199) at 3", "Insert Block(198) into MethodDeclaration(199) at 4", "Move MarkerAnnotation(120) into MethodDeclaration(221) at 0", "Insert Modifier: public(213) into MethodDeclaration(221) at 1", "Insert Modifier: final(214) into MethodDeclaration(221) at 2", "Insert SimpleType: String(216) into MethodDeclaration(221) at 3", "Insert SimpleName: getAlgorithm(217) into MethodDeclaration(221) at 4", "Insert Block(220) into MethodDeclaration(221) at 5", "Move MarkerAnnotation(101) into MethodDeclaration(231) at 0", "Insert Modifier: public(224) into MethodDeclaration(231) at 1", "Insert Modifier: final(225) into MethodDeclaration(231) at 2", "Insert PrimitiveType: int(226) into MethodDeclaration(231) at 3", "Insert SimpleName: getBlockSize(227) into MethodDeclaration(231) at 4", "Insert Block(230) into MethodDeclaration(231) at 5", "Move MarkerAnnotation(82) into MethodDeclaration(241) at 0", "Insert Modifier: public(234) into MethodDeclaration(241) at 1", "Insert Modifier: final(235) into MethodDeclaration(241) at 2", "Insert PrimitiveType: int(236) into MethodDeclaration(241) at 3", "Insert SimpleName: getDefaultBlockSize(237) into MethodDeclaration(241) at 4", "Insert Block(240) into MethodDeclaration(241) at 5", "Insert SimpleName: String(124) into SimpleType: String(125) at 0", "Insert SimpleName: algorithm(126) into VariableDeclarationFragment(127) at 0", "Insert SimpleName: defbsize(132) into VariableDeclarationFragment(133) at 0", "Insert SimpleName: bsize(138) into VariableDeclarationFragment(139) at 0", "Insert SimpleType: String(143) into SingleVariableDeclaration(145) at 0", "Insert SimpleName: factoryName(144) into SingleVariableDeclaration(145) at 1", "Update SimpleName: facName(203) to algorithm", "Insert PrimitiveType: int(150) into SingleVariableDeclaration(152) at 0", "Insert SimpleName: bsize(151) into SingleVariableDeclaration(152) at 1", "Insert PrimitiveType: int(153) into SingleVariableDeclaration(155) at 0", "Insert SimpleName: defbsize(154) into SingleVariableDeclaration(155) at 1", "Insert ExpressionStatement(167) into Block(180) at 1", "Insert ExpressionStatement(173) into Block(180) at 2", "Insert ExpressionStatement(179) into Block(180) at 3", "Insert ReturnStatement(197) into Block(198) at 0", "Insert SimpleName: String(215) into SimpleType: String(216) at 0", "Insert ReturnStatement(219) into Block(220) at 0", "Insert ReturnStatement(229) into Block(230) at 0", "Insert ReturnStatement(239) into Block(240) at 0", "Insert SimpleName: String(142) into SimpleType: String(143) at 0", "Insert Assignment: =(166) into ExpressionStatement(167) at 0", "Insert Assignment: =(172) into ExpressionStatement(173) at 0", "Insert Assignment: =(178) into ExpressionStatement(179) at 0", "Insert ClassInstanceCreation(196) into ReturnStatement(197) at 0", "Insert SimpleName: algorithm(218) into ReturnStatement(219) at 0", "Insert SimpleName: bsize(228) into ReturnStatement(229) at 0", "Insert SimpleName: defbsize(238) into ReturnStatement(239) at 0", "Insert FieldAccess(158) into Assignment: =(160) at 0", "Update SimpleName: facName(206) to factoryName", "Insert FieldAccess(164) into Assignment: =(166) at 0", "Insert SimpleName: algorithm(165) into Assignment: =(166) at 1", "Insert FieldAccess(170) into Assignment: =(172) at 0", "Insert SimpleName: bsize(171) into Assignment: =(172) at 1", "Insert FieldAccess(176) into Assignment: =(178) at 0", "Insert SimpleName: defbsize(177) into Assignment: =(178) at 1", "Move SimpleType: BaseMac(145) into ClassInstanceCreation(196) at 0", "Insert MethodInvocation(191) into ClassInstanceCreation(196) at 1", "Insert MethodInvocation(193) into ClassInstanceCreation(196) at 2", "Insert MethodInvocation(195) into ClassInstanceCreation(196) at 3", "Insert ThisExpression(156) into FieldAccess(158) at 0", "Insert SimpleName: factoryName(157) into FieldAccess(158) at 1", "Insert ThisExpression(162) into FieldAccess(164) at 0", "Insert SimpleName: algorithm(163) into FieldAccess(164) at 1", "Insert ThisExpression(168) into FieldAccess(170) at 0", "Insert SimpleName: bsize(169) into FieldAccess(170) at 1", "Insert ThisExpression(174) into FieldAccess(176) at 0", "Insert SimpleName: defbsize(175) into FieldAccess(176) at 1", "Insert SimpleName: getAlgorithm(190) into MethodInvocation(191) at 0", "Insert SimpleName: getBlockSize(192) into MethodInvocation(193) at 0", "Insert SimpleName: getDefaultBlockSize(194) into MethodInvocation(195) at 0", "Delete SimpleName: Override(43)", "Delete MarkerAnnotation(44)", "Delete Modifier: public(45)", "Delete SimpleName: Mac(46)", "Delete SimpleType: Mac(47)", "Delete SimpleName: create(48)", "Delete SimpleName: BaseMac(49)", "Delete SimpleType: BaseMac(50)", "Delete StringLiteral: \"HmacMD5\"(51)", "Delete NumberLiteral: 16(52)", "Delete NumberLiteral: 16(53)", "Delete ClassInstanceCreation(54)", "Delete ReturnStatement(55)", "Delete Block(56)", "Delete MethodDeclaration(57)", "Delete AnonymousClassDeclaration(58)", "Delete SimpleName: Override(62)", "Delete MarkerAnnotation(63)", "Delete Modifier: public(64)", "Delete SimpleName: Mac(65)", "Delete SimpleType: Mac(66)", "Delete SimpleName: create(67)", "Delete SimpleName: BaseMac(68)", "Delete SimpleType: BaseMac(69)", "Delete StringLiteral: \"HmacMD5\"(70)", "Delete NumberLiteral: 12(71)", "Delete NumberLiteral: 16(72)", "Delete ClassInstanceCreation(73)", "Delete ReturnStatement(74)", "Delete Block(75)", "Delete MethodDeclaration(76)", "Delete AnonymousClassDeclaration(77)", "Delete Modifier: public(83)", "Delete SimpleName: Mac(84)", "Delete SimpleType: Mac(85)", "Delete SimpleName: create(86)", "Delete SimpleName: BaseMac(87)", "Delete SimpleType: BaseMac(88)", "Delete StringLiteral: \"HmacSHA1\"(89)", "Delete NumberLiteral: 20(90)", "Delete NumberLiteral: 20(91)", "Delete ClassInstanceCreation(92)", "Delete ReturnStatement(93)", "Delete Block(94)", "Delete MethodDeclaration(95)", "Delete AnonymousClassDeclaration(96)", "Delete Modifier: public(102)", "Delete SimpleName: Mac(103)", "Delete SimpleType: Mac(104)", "Delete SimpleName: create(105)", "Delete SimpleName: BaseMac(106)", "Delete SimpleType: BaseMac(107)", "Delete StringLiteral: \"HmacSHA1\"(108)", "Delete NumberLiteral: 12(109)", "Delete NumberLiteral: 20(110)", "Delete ClassInstanceCreation(111)", "Delete ReturnStatement(112)", "Delete Block(113)", "Delete MethodDeclaration(114)", "Delete AnonymousClassDeclaration(115)", "Delete Modifier: public(121)", "Delete SimpleName: Mac(122)", "Delete SimpleType: Mac(123)", "Delete SimpleName: create(124)", "Delete SimpleName: BaseMac(125)", "Delete SimpleType: BaseMac(126)", "Delete StringLiteral: \"HmacSHA256\"(127)", "Delete NumberLiteral: 32(128)", "Delete NumberLiteral: 32(129)", "Delete ClassInstanceCreation(130)", "Delete ReturnStatement(131)", "Delete Block(132)", "Delete MethodDeclaration(133)", "Delete AnonymousClassDeclaration(134)", "Delete Modifier: public(140)", "Delete SimpleName: create(143)", "Delete StringLiteral: \"HmacSHA1\"(146)", "Delete NumberLiteral: 64(147)", "Delete NumberLiteral: 64(148)", "Delete ClassInstanceCreation(149)", "Delete ReturnStatement(150)", "Delete Block(151)", "Delete MethodDeclaration(152)", "Delete AnonymousClassDeclaration(153)", "Delete SimpleName: factoryName(205)"]}}, {"Mac_cluster": {"actions": [{"root": "MOVE from TypeDeclaration: interface", "operations": ["MOV MethodDeclaration to TypeDeclaration: interface at 8"]}, {"root": "INS SimpleType: MacInformation to TypeDeclaration: interface at 3", "operations": ["INS SimpleType: MacInformation to TypeDeclaration: interface at 3"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 6", "operations": ["INS SimpleName: buf to SingleVariableDeclaration at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Dimension to ArrayType: byte[] at 1", "INS MethodDeclaration to TypeDeclaration: interface at 6", "INS PrimitiveType: void to MethodDeclaration at 0", "INS ArrayType: byte[] to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2"]}, {"root": "UPDATE from String to MacInformation", "operations": ["UPD SimpleName: String from String to MacInformation"]}, {"root": "MOVE from SimpleType: MacInformation", "operations": ["MOV SimpleName: String to SimpleType: MacInformation at 0"]}, {"root": "UPDATE from getAlgorithm to update", "operations": ["UPD SimpleName: getAlgorithm from getAlgorithm to update"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: getAlgorithm to MethodDeclaration at 1"]}, {"root": "UPDATE from int to void", "operations": ["UPD PrimitiveType: int from int to void"]}, {"root": "UPDATE from getBlockSize to doFinal", "operations": ["UPD SimpleName: getBlockSize from getBlockSize to doFinal"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 2", "operations": ["INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: buf to SingleVariableDeclaration at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS ArrayType: byte[] to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2"]}, {"root": "INS SimpleType: Exception to MethodDeclaration at 3", "operations": ["INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleType: Exception to MethodDeclaration at 3"]}, {"root": "UPDATE from foo to buf", "operations": ["UPD SimpleName: foo from foo to buf"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: String", "DEL MethodDeclaration"]}]}}, {"Mac_diff": {"operations": ["Move MethodDeclaration(16) into TypeDeclaration: interface(73) at 8", "Insert SimpleType: MacInformation(11) into TypeDeclaration: interface(73) at 3", "Insert MethodDeclaration(29) into TypeDeclaration: interface(73) at 5", "Update SimpleName: String(10) to MacInformation", "Move SimpleName: String(10) into SimpleType: MacInformation(11) at 0", "Insert PrimitiveType: void(22) into MethodDeclaration(29) at 0", "Update SimpleName: getAlgorithm(12) to update", "Move SimpleName: getAlgorithm(12) into MethodDeclaration(29) at 1", "Insert SingleVariableDeclaration(28) into MethodDeclaration(29) at 2", "Update PrimitiveType: int(14) to void", "Update SimpleName: getBlockSize(15) to doFinal", "Insert SingleVariableDeclaration(56) into MethodDeclaration(59) at 2", "Insert SimpleType: Exception(58) into MethodDeclaration(59) at 3", "Insert ArrayType: byte[](26) into SingleVariableDeclaration(28) at 0", "Insert SimpleName: buf(27) into SingleVariableDeclaration(28) at 1", "Update SimpleName: foo(32) to buf", "Insert ArrayType: byte[](54) into SingleVariableDeclaration(56) at 0", "Insert SimpleName: buf(55) into SingleVariableDeclaration(56) at 1", "Insert SimpleName: Exception(57) into SimpleType: Exception(58) at 0", "Insert PrimitiveType: byte(24) into ArrayType: byte[](26) at 0", "Insert Dimension(25) into ArrayType: byte[](26) at 1", "Insert PrimitiveType: byte(52) into ArrayType: byte[](54) at 0", "Insert Dimension(53) into ArrayType: byte[](54) at 1", "Delete SimpleType: String(11)", "Delete MethodDeclaration(13)"]}}, {"MacFactory_cluster": {"actions": [{"root": "INS SimpleType: MacInformation to TypeDeclaration: interface at 3", "operations": ["INS SimpleName: MacInformation to SimpleType: MacInformation at 0", "INS SimpleType: MacInformation to TypeDeclaration: interface at 3"]}]}}, {"MacFactory_diff": {"operations": ["Insert SimpleType: MacInformation(10) into TypeDeclaration: interface(16) at 3", "Insert SimpleName: MacInformation(9) into SimpleType: MacInformation(10) at 0"]}}], "commit_stats": [{"total_files": 16, "deleted_files": 1, "testing": "True", "maintenance": "True", "build": "False"}]}