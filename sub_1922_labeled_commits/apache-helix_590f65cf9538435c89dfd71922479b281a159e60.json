{"application": "apache-helix", "csha": "590f65cf9538435c89dfd71922479b281a159e60", "files": [{"PropertyKey_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 32", "operations": ["INS Block to MethodDeclaration at 5", "INS SimpleName: STATUSUPDATES to ClassInstanceCreation at 1", "INS TagElement: @param to Javadoc at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: instanceName to SingleVariableDeclaration at 1", "INS TagElement: @return to Javadoc at 2", "INS SimpleName: instanceName to TagElement: @param at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: PropertyKey to MethodDeclaration at 2", "INS TextElement:   to TagElement: @return at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS TextElement: Get a property key associated with  to TagElement at 0", "INS TagElement: @link to TagElement at 1", "INS TagElement: @link to TagElement: @return at 1", "INS SimpleName: stateTransitionStatus to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS TagElement to Javadoc at 0", "INS SimpleType: PropertyKey to ClassInstanceCreation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS TextElement:  of an instance to TagElement at 2", "INS SimpleName: StatusUpdate to TagElement: @link at 0", "INS SimpleName: PropertyKey to TagElement: @link at 0", "INS MethodDeclaration to TypeDeclaration: class at 32", "INS SimpleType: StatusUpdate to TypeLiteral at 0", "INS SimpleName: PropertyKey to SimpleType: PropertyKey at 0", "INS TypeLiteral to ClassInstanceCreation at 2", "INS SimpleName: _clusterName to ClassInstanceCreation at 3", "INS SimpleName: instanceName to ClassInstanceCreation at 4", "INS SimpleName: StatusUpdate to SimpleType: StatusUpdate at 0", "INS SimpleName: PropertyKey to SimpleType: PropertyKey at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 36", "operations": ["INS TextElement:  of an instance, session, and to TagElement at 2", "INS SimpleName: _clusterName to ClassInstanceCreation at 3", "INS TagElement: @param to Javadoc at 1", "INS ReturnStatement to Block at 0", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: PropertyKey to SimpleType: PropertyKey at 0", "INS SimpleName: instanceName to TagElement: @param at 0", "INS Block to MethodDeclaration at 5", "INS TagElement: @link to TagElement at 1", "INS SimpleType: PropertyKey to ClassInstanceCreation at 0", "INS Javadoc to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 36", "INS TextElement: Get a property key associated with  to TagElement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS TagElement: @link to TagElement: @return at 1", "INS SimpleName: stateTransitionErrors to MethodDeclaration at 3", "INS SimpleName: ERRORS to ClassInstanceCreation at 1", "INS TextElement:   to TagElement: @return at 0", "INS TagElement to Javadoc at 0", "INS TypeLiteral to ClassInstanceCreation at 2", "INS SimpleName: instanceName to ClassInstanceCreation at 4", "INS SimpleName: PropertyKey to SimpleType: PropertyKey at 0", "INS TagElement: @return to Javadoc at 2", "INS SimpleName: instanceName to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS TextElement: resource to TagElement at 3", "INS SimpleName: Error to TagElement: @link at 0", "INS SimpleName: Error to SimpleType: Error at 0", "INS SimpleType: Error to TypeLiteral at 0", "INS SimpleName: PropertyKey to TagElement: @link at 0", "INS SimpleType: PropertyKey to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 45", "operations": ["INS TypeLiteral to ClassInstanceCreation at 2", "INS SimpleType: StatusUpdate to TypeLiteral at 0", "INS SimpleName: PropertyKey to SimpleType: PropertyKey at 0", "INS SimpleType: PropertyKey to ClassInstanceCreation at 0", "INS SimpleName: _clusterName to ClassInstanceCreation at 3", "INS TagElement to Javadoc at 0", "INS TextElement:  of controller status updates to TagElement at 2", "INS TagElement: @return to Javadoc at 1", "INS TextElement: Get a property key associated with  to TagElement at 0", "INS SimpleName: STATUSUPDATES_CONTROLLER to ClassInstanceCreation at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: PropertyKey to TagElement: @link at 0", "INS Block to MethodDeclaration at 4", "INS TagElement: @link to TagElement: @return at 1", "INS SimpleName: StatusUpdate to SimpleType: StatusUpdate at 0", "INS TagElement: @link to TagElement at 1", "INS SimpleName: PropertyKey to SimpleType: PropertyKey at 0", "INS TextElement:   to TagElement: @return at 0", "INS SimpleName: StatusUpdate to TagElement: @link at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleType: PropertyKey to MethodDeclaration at 2", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: controllerTaskStatuses to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 45", "INS Modifier: public to MethodDeclaration at 1"]}]}}, {"PropertyKey_diff": {"operations": ["Insert MethodDeclaration(1278) into TypeDeclaration: class(1870) at 32", "Insert MethodDeclaration(1462) into TypeDeclaration: class(1870) at 36", "Insert MethodDeclaration(1739) into TypeDeclaration: class(1870) at 45", "Insert Javadoc(1258) into MethodDeclaration(1278) at 0", "Insert Modifier: public(1259) into MethodDeclaration(1278) at 1", "Insert SimpleType: PropertyKey(1261) into MethodDeclaration(1278) at 2", "Insert SimpleName: stateTransitionStatus(1262) into MethodDeclaration(1278) at 3", "Insert SingleVariableDeclaration(1266) into MethodDeclaration(1278) at 4", "Insert Block(1277) into MethodDeclaration(1278) at 5", "Insert Javadoc(1442) into MethodDeclaration(1462) at 0", "Insert Modifier: public(1443) into MethodDeclaration(1462) at 1", "Insert SimpleType: PropertyKey(1445) into MethodDeclaration(1462) at 2", "Insert SimpleName: stateTransitionErrors(1446) into MethodDeclaration(1462) at 3", "Insert SingleVariableDeclaration(1450) into MethodDeclaration(1462) at 4", "Insert Block(1461) into MethodDeclaration(1462) at 5", "Insert Javadoc(1724) into MethodDeclaration(1739) at 0", "Insert Modifier: public(1725) into MethodDeclaration(1739) at 1", "Insert SimpleType: PropertyKey(1727) into MethodDeclaration(1739) at 2", "Insert SimpleName: controllerTaskStatuses(1728) into MethodDeclaration(1739) at 3", "Insert Block(1738) into MethodDeclaration(1739) at 4", "Insert TagElement(1251) into Javadoc(1258) at 0", "Insert TagElement: @param(1253) into Javadoc(1258) at 1", "Insert TagElement: @return(1257) into Javadoc(1258) at 2", "Insert SimpleName: PropertyKey(1260) into SimpleType: PropertyKey(1261) at 0", "Insert SimpleType: String(1264) into SingleVariableDeclaration(1266) at 0", "Insert SimpleName: instanceName(1265) into SingleVariableDeclaration(1266) at 1", "Insert ReturnStatement(1276) into Block(1277) at 0", "Insert TagElement(1435) into Javadoc(1442) at 0", "Insert TagElement: @param(1437) into Javadoc(1442) at 1", "Insert TagElement: @return(1441) into Javadoc(1442) at 2", "Insert SimpleName: PropertyKey(1444) into SimpleType: PropertyKey(1445) at 0", "Insert SimpleType: String(1448) into SingleVariableDeclaration(1450) at 0", "Insert SimpleName: instanceName(1449) into SingleVariableDeclaration(1450) at 1", "Insert ReturnStatement(1460) into Block(1461) at 0", "Insert TagElement(1719) into Javadoc(1724) at 0", "Insert TagElement: @return(1723) into Javadoc(1724) at 1", "Insert SimpleName: PropertyKey(1726) into SimpleType: PropertyKey(1727) at 0", "Insert ReturnStatement(1737) into Block(1738) at 0", "Insert TextElement: Get a property key associated with (1247) into TagElement(1251) at 0", "Insert TagElement: @link(1249) into TagElement(1251) at 1", "Insert TextElement:  of an instance(1250) into TagElement(1251) at 2", "Insert SimpleName: instanceName(1252) into TagElement: @param(1253) at 0", "Insert TextElement:  (1254) into TagElement: @return(1257) at 0", "Insert TagElement: @link(1256) into TagElement: @return(1257) at 1", "Insert SimpleName: String(1263) into SimpleType: String(1264) at 0", "Insert ClassInstanceCreation(1275) into ReturnStatement(1276) at 0", "Insert TextElement: Get a property key associated with (1430) into TagElement(1435) at 0", "Insert TagElement: @link(1432) into TagElement(1435) at 1", "Insert TextElement:  of an instance, session, and(1433) into TagElement(1435) at 2", "Insert TextElement: resource(1434) into TagElement(1435) at 3", "Insert SimpleName: instanceName(1436) into TagElement: @param(1437) at 0", "Insert TextElement:  (1438) into TagElement: @return(1441) at 0", "Insert TagElement: @link(1440) into TagElement: @return(1441) at 1", "Insert SimpleName: String(1447) into SimpleType: String(1448) at 0", "Insert ClassInstanceCreation(1459) into ReturnStatement(1460) at 0", "Insert TextElement: Get a property key associated with (1715) into TagElement(1719) at 0", "Insert TagElement: @link(1717) into TagElement(1719) at 1", "Insert TextElement:  of controller status updates(1718) into TagElement(1719) at 2", "Insert TextElement:  (1720) into TagElement: @return(1723) at 0", "Insert TagElement: @link(1722) into TagElement: @return(1723) at 1", "Insert ClassInstanceCreation(1736) into ReturnStatement(1737) at 0", "Insert SimpleName: StatusUpdate(1248) into TagElement: @link(1249) at 0", "Insert SimpleName: PropertyKey(1255) into TagElement: @link(1256) at 0", "Insert SimpleType: PropertyKey(1268) into ClassInstanceCreation(1275) at 0", "Insert SimpleName: STATUSUPDATES(1269) into ClassInstanceCreation(1275) at 1", "Insert TypeLiteral(1272) into ClassInstanceCreation(1275) at 2", "Insert SimpleName: _clusterName(1273) into ClassInstanceCreation(1275) at 3", "Insert SimpleName: instanceName(1274) into ClassInstanceCreation(1275) at 4", "Insert SimpleName: Error(1431) into TagElement: @link(1432) at 0", "Insert SimpleName: PropertyKey(1439) into TagElement: @link(1440) at 0", "Insert SimpleType: PropertyKey(1452) into ClassInstanceCreation(1459) at 0", "Insert SimpleName: ERRORS(1453) into ClassInstanceCreation(1459) at 1", "Insert TypeLiteral(1456) into ClassInstanceCreation(1459) at 2", "Insert SimpleName: _clusterName(1457) into ClassInstanceCreation(1459) at 3", "Insert SimpleName: instanceName(1458) into ClassInstanceCreation(1459) at 4", "Insert SimpleName: StatusUpdate(1716) into TagElement: @link(1717) at 0", "Insert SimpleName: PropertyKey(1721) into TagElement: @link(1722) at 0", "Insert SimpleType: PropertyKey(1730) into ClassInstanceCreation(1736) at 0", "Insert SimpleName: STATUSUPDATES_CONTROLLER(1731) into ClassInstanceCreation(1736) at 1", "Insert TypeLiteral(1734) into ClassInstanceCreation(1736) at 2", "Insert SimpleName: _clusterName(1735) into ClassInstanceCreation(1736) at 3", "Insert SimpleName: PropertyKey(1267) into SimpleType: PropertyKey(1268) at 0", "Insert SimpleType: StatusUpdate(1271) into TypeLiteral(1272) at 0", "Insert SimpleName: PropertyKey(1451) into SimpleType: PropertyKey(1452) at 0", "Insert SimpleType: Error(1455) into TypeLiteral(1456) at 0", "Insert SimpleName: PropertyKey(1729) into SimpleType: PropertyKey(1730) at 0", "Insert SimpleType: StatusUpdate(1733) into TypeLiteral(1734) at 0", "Insert SimpleName: StatusUpdate(1270) into SimpleType: StatusUpdate(1271) at 0", "Insert SimpleName: Error(1454) into SimpleType: Error(1455) at 0", "Insert SimpleName: StatusUpdate(1732) into SimpleType: StatusUpdate(1733) at 0"]}}, {"ZKPathDataDumpTask_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 5"]}, {"root": "UPDATE from org.apache.helix.manager.zk.ZkClient to org.apache.helix.BaseDataAccessor", "operations": ["UPD QualifiedName: org.apache.helix.manager.zk.ZkClient from org.apache.helix.manager.zk.ZkClient to org.apache.helix.BaseDataAccessor"]}, {"root": "UPDATE from org.codehaus.jackson.map.ObjectMapper to com.google.common.collect.Lists", "operations": ["UPD QualifiedName: org.codehaus.jackson.map.ObjectMapper from org.codehaus.jackson.map.ObjectMapper to com.google.common.collect.Lists"]}, {"root": "UPDATE from ZkClient to ZNRecordSerializer", "operations": ["UPD SimpleName: ZkClient from ZkClient to ZNRecordSerializer", "UPD SimpleType: ZkClient from ZkClient to ZNRecordSerializer"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 3"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement: @param to Javadoc at 1", "INS TextElement:  a list of paths to TagElement: @return at 0", "INS SimpleName: ancestorPath to TagElement: @param at 0", "INS SimpleName: accessor to TagElement: @param at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @return to Javadoc at 3", "INS TagElement: @param to Javadoc at 2", "INS TextElement: Find paths of all leaf nodes under an ancestor path (exclusive) to TagElement at 0", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "INS Modifier: static to MethodDeclaration at 1", "operations": ["INS Modifier: static to MethodDeclaration at 1"]}, {"root": "INS ParameterizedType: List<String> to MethodDeclaration at 2", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS ParameterizedType: List<String> to MethodDeclaration at 2", "INS SimpleName: List to SimpleType: List at 0"]}, {"root": "INS SimpleName: scanPath to MethodDeclaration at 3", "operations": ["INS SimpleName: scanPath to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 8"]}, {"root": "UPDATE from checkAndDump to dump", "operations": ["UPD SimpleName: checkAndDump from checkAndDump to dump"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 2", "operations": ["INS ParameterizedType: BaseDataAccessor<ZNRecord> to SingleVariableDeclaration at 0", "INS SimpleName: BaseDataAccessor to SimpleType: BaseDataAccessor at 0", "INS SimpleName: ZNRecord to SimpleType: ZNRecord at 0", "INS SimpleName: accessor to SingleVariableDeclaration at 1", "INS SimpleType: ZNRecord to ParameterizedType: BaseDataAccessor<ZNRecord> at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleType: BaseDataAccessor to ParameterizedType: BaseDataAccessor<ZNRecord> at 0"]}, {"root": "UPDATE from logger to LOG", "operations": ["UPD SimpleName: logger from logger to LOG", "UPD SimpleName: logger from logger to LOG", "UPD SimpleName: _zkClient from _zkClient to LOG", "UPD SimpleName: logger from logger to LOG", "UPD SimpleName: logger from logger to LOG"]}, {"root": "UPDATE from logger to _jsonSerializer", "operations": ["UPD SimpleName: logger from logger to _jsonSerializer", "UPD SimpleName: _zkClient from _zkClient to _jsonSerializer"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ExpressionStatement to Block at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: _jsonSerializer to Assignment: = at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 4", "MOV EnhancedForStatement to Block at 5", "MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 2", "MOV ExpressionStatement to Block at 7"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: accessor to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 3", "INS ParameterizedType: BaseDataAccessor<ZNRecord> to VariableDeclarationStatement at 0", "INS SimpleType: ZNRecord to ParameterizedType: BaseDataAccessor<ZNRecord> at 1", "INS SimpleName: baseAccessor to VariableDeclarationFragment at 0", "INS SimpleType: BaseDataAccessor to ParameterizedType: BaseDataAccessor<ZNRecord> at 0", "INS SimpleName: BaseDataAccessor to SimpleType: BaseDataAccessor at 0", "INS SimpleName: getBaseDataAccessor to MethodInvocation at 1", "INS SimpleName: ZNRecord to SimpleType: ZNRecord at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 6", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 6", "INS SimpleName: controllerStatusUpdatePath to VariableDeclarationFragment at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 8", "operations": ["INS SimpleName: controllerErrorPath to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 8", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 9"]}, {"root": "INS ParameterizedType: BaseDataAccessor<ZNRecord> to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: BaseDataAccessor to ParameterizedType: BaseDataAccessor<ZNRecord> at 0", "INS SimpleName: BaseDataAccessor to SimpleType: BaseDataAccessor at 0", "INS ParameterizedType: BaseDataAccessor<ZNRecord> to SingleVariableDeclaration at 0", "INS SimpleName: ZNRecord to SimpleType: ZNRecord at 0", "INS SimpleType: ZNRecord to ParameterizedType: BaseDataAccessor<ZNRecord> at 1"]}, {"root": "INS SimpleName: accessor to SingleVariableDeclaration at 1", "operations": ["INS SimpleName: accessor to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from path to ancestorPath", "operations": ["UPD SimpleName: path from path to ancestorPath", "UPD SimpleName: subsubPath from subsubPath to ancestorPath", "UPD SimpleName: path from path to ancestorPath"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Lists to MethodInvocation at 0", "INS SimpleName: newLinkedList to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: queue to VariableDeclarationFragment at 0", "INS MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS WhileStatement to Block at 3", "operations": ["INS Block to IfStatement at 1", "INS StringLiteral: \"%s/%s\" to MethodInvocation at 2", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: ancestorPath to MethodInvocation at 2", "INS NullLiteral to InfixExpression: == at 1", "INS MethodInvocation to InfixExpression: && at 0", "INS PrefixExpression: ! to WhileStatement at 0", "INS SimpleName: childNames to EnhancedForStatement at 1", "INS SimpleName: childName to MethodInvocation at 4", "INS SimpleName: String to MethodInvocation at 0", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: subPath to VariableDeclarationFragment at 0", "INS Block to EnhancedForStatement at 2", "INS ContinueStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: childNames to InfixExpression: == at 0", "INS IfStatement to Block at 3", "INS SimpleName: path to MethodInvocation at 3", "INS SimpleName: format to MethodInvocation at 1", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS WhileStatement to Block at 3", "INS SimpleName: queue to MethodInvocation at 0", "INS InfixExpression: == to IfStatement at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS IfStatement to Block at 2", "INS SimpleName: path to MethodInvocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS EnhancedForStatement to Block at 4", "INS Block to WhileStatement at 1", "INS InfixExpression: && to IfStatement at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "INS ReturnStatement to Block at 4", "operations": ["INS SimpleName: leafPaths to ReturnStatement at 0", "INS ReturnStatement to Block at 4"]}, {"root": "INS SimpleType: String to SingleVariableDeclaration at 0", "operations": ["INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "UPDATE from thresholdNoChangeInMs to threshold", "operations": ["UPD SimpleName: thresholdNoChangeInMs from thresholdNoChangeInMs to threshold", "UPD SimpleName: thresholdNoChangeInMs from thresholdNoChangeInMs to threshold"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS ArrayType: Stat[] to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 2", "INS NumberLiteral: 0 to MethodInvocation at 3", "INS SimpleName: accessor to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Dimension to ArrayType: Stat[] at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: stats to VariableDeclarationFragment at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 3", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: List<String> to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleType: List to ParameterizedType: List<String> at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 4"]}, {"root": "INS ForStatement to Block at 5", "operations": ["INS ForStatement to Block at 5", "INS PostfixExpression: ++ to ForStatement at 2", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS Block to ForStatement at 3", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS Block to IfStatement at 1", "INS InfixExpression: < to ForStatement at 1", "INS QualifiedName: stats.length to InfixExpression: < at 1", "INS IfStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 6", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: dumpPaths to InfixExpression: + at 1", "INS StringLiteral: \"Dump statusUpdates and errors records for pahts: \" to InfixExpression: + at 0", "INS ExpressionStatement to Block at 6", "INS InfixExpression: + to MethodInvocation at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 7", "operations": ["INS VariableDeclarationStatement to Block at 7", "INS SimpleType: ZNRecord to ParameterizedType: List<ZNRecord> at 1", "INS SimpleType: List to ParameterizedType: List<ZNRecord> at 0", "INS ParameterizedType: List<ZNRecord> to VariableDeclarationStatement at 0"]}, {"root": "INS EnhancedForStatement to Block at 8", "operations": ["INS IfStatement to Block at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleType: String to ClassInstanceCreation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: record to InfixExpression: != at 0", "INS EnhancedForStatement to Block at 8", "INS ExpressionStatement to Block at 0", "INS SimpleName: dumpRecords to EnhancedForStatement at 1", "INS SimpleName: record to SingleVariableDeclaration at 1", "INS InfixExpression: != to IfStatement at 0", "INS ClassInstanceCreation to MethodInvocation at 2", "INS Block to EnhancedForStatement at 2", "INS MethodInvocation to ClassInstanceCreation at 1", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 9", "MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: List<String> to VariableDeclarationStatement at 0"]}, {"root": "INS ParameterizedType: List<String> to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS ParameterizedType: List<String> to VariableDeclarationStatement at 0"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from ArrayType: Stat[]", "operations": ["MOV SimpleType: Stat to ArrayType: Stat[] at 0", "MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV ClassInstanceCreation to Assignment: = at 1"]}, {"root": "INS InfixExpression: + to MethodInvocation at 2", "operations": ["INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: getClusterName to MethodInvocation at 1", "INS SimpleName: _manager to InfixExpression: + at 3", "INS StringLiteral: \", by controller: \" to InfixExpression: + at 2", "INS StringLiteral: \"Scan statusUpdates and errors for cluster: \" to InfixExpression: + at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: _manager to MethodInvocation at 0"]}, {"root": "UPDATE from instanceName to instance", "operations": ["UPD SimpleName: instanceName from instanceName to instance", "UPD SimpleName: instanceName from instanceName to instance", "UPD SimpleName: instanceName from instanceName to instance"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: statusUpdatePath to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS SimpleName: dump to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: baseAccessor to MethodInvocation at 1", "INS SimpleName: statusUpdatePath to MethodInvocation at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: errorPath to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 2"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS SimpleName: baseAccessor to MethodInvocation at 1", "INS SimpleName: dump to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: errorPath to MethodInvocation at 2"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: dump to MethodInvocation at 0", "operations": ["INS SimpleName: dump to MethodInvocation at 0"]}, {"root": "INS SimpleName: baseAccessor to MethodInvocation at 1", "operations": ["INS SimpleName: baseAccessor to MethodInvocation at 1"]}, {"root": "UPDATE from scanPath to controllerStatusUpdatePath", "operations": ["UPD SimpleName: scanPath from scanPath to controllerStatusUpdatePath"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: * to MethodInvocation at 3", "MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: dump to MethodInvocation at 0", "operations": ["INS SimpleName: dump to MethodInvocation at 0"]}, {"root": "UPDATE from logger to baseAccessor", "operations": ["UPD SimpleName: logger from logger to baseAccessor"]}, {"root": "UPDATE from error to controllerErrorPath", "operations": ["UPD SimpleName: error from error to controllerErrorPath"]}, {"root": "UPDATE from e to _thresholdNoChangeInMs", "operations": ["UPD SimpleName: e from e to _thresholdNoChangeInMs"]}, {"root": "UPDATE from logger to queue", "operations": ["UPD SimpleName: logger from logger to queue", "UPD SimpleName: logger from logger to queue"]}, {"root": "UPDATE from info to add", "operations": ["UPD SimpleName: info from info to add", "UPD SimpleName: info from info to add", "UPD SimpleName: error from error to add", "UPD SimpleName: error from error to add"]}, {"root": "INS SimpleName: ancestorPath to MethodInvocation at 2", "operations": ["INS SimpleName: ancestorPath to MethodInvocation at 2"]}, {"root": "UPDATE from subPaths to leafPaths", "operations": ["UPD SimpleName: subPaths from subPaths to leafPaths", "UPD SimpleName: logger from logger to leafPaths", "UPD SimpleName: subPaths from subPaths to leafPaths", "UPD SimpleName: length from length to leafPaths", "UPD SimpleName: subPaths from subPaths to leafPaths"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: subPaths to MethodInvocation at 0", "MOV SimpleName: size to MethodInvocation at 1"]}, {"root": "UPDATE from size to isEmpty", "operations": ["UPD SimpleName: size from size to isEmpty"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS ReturnStatement to Block at 0"]}, {"root": "UPDATE from fullPath to dumpPaths", "operations": ["UPD SimpleName: fullPath from fullPath to dumpPaths", "UPD SimpleName: logger from logger to dumpPaths", "UPD SimpleName: pathStat from pathStat to dumpPaths"]}, {"root": "UPDATE from lastModifiedTimeInMs to now", "operations": ["UPD SimpleName: lastModifiedTimeInMs from lastModifiedTimeInMs to now"]}, {"root": "UPDATE from nowInMs to i", "operations": ["UPD SimpleName: nowInMs from nowInMs to i", "UPD SimpleName: nowInMs from nowInMs to i"]}, {"root": "MOVE from InfixExpression: <", "operations": ["MOV SimpleName: nowInMs to InfixExpression: < at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: _zkClient to MethodInvocation at 0", "MOV SimpleName: readData to MethodInvocation at 1"]}, {"root": "UPDATE from readData to info", "operations": ["UPD SimpleName: readData from readData to info"]}, {"root": "UPDATE from serializationConfig to dumpRecords", "operations": ["UPD SimpleName: serializationConfig from serializationConfig to dumpRecords"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: ZNRecord to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from getChildren to accessor", "operations": ["UPD SimpleName: getChildren from getChildren to accessor", "UPD SimpleName: _zkClient from _zkClient to accessor", "UPD SimpleName: _zkClient from _zkClient to accessor", "UPD SimpleName: mapper from mapper to accessor"]}, {"root": "UPDATE from deleteRecursive to remove", "operations": ["UPD SimpleName: deleteRecursive from deleteRecursive to remove"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 3", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 3"]}, {"root": "UPDATE from \"Scanning cluster statusUpdate \" to \"Init ZKPathDataDumpTask for cluster: \"", "operations": ["UPD StringLiteral: \"Scanning cluster statusUpdate \" from \"Scanning cluster statusUpdate \" to \"Init ZKPathDataDumpTask for cluster: \""]}, {"root": "UPDATE from \" thresholdNoChangeInMs: \" to \", thresholdNoChangeInMs: \"", "operations": ["UPD StringLiteral: \" thresholdNoChangeInMs: \" from \" thresholdNoChangeInMs: \" to \", thresholdNoChangeInMs: \""]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from _zkClient to Lists", "operations": ["UPD SimpleName: _zkClient from _zkClient to Lists", "UPD SimpleName: _zkClient from _zkClient to Lists"]}, {"root": "UPDATE from getStat to newArrayList", "operations": ["UPD SimpleName: getStat from getStat to newArrayList", "UPD SimpleName: getChildren from getChildren to newArrayList"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV ParameterizedType: List<String> to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from _zkClient to scanPath", "operations": ["UPD SimpleName: _zkClient from _zkClient to scanPath"]}, {"root": "UPDATE from subPath to getStats", "operations": ["UPD SimpleName: subPath from subPath to getStats"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: subPath to MethodInvocation at 1", "MOV SimpleName: length to MethodInvocation at 2"]}, {"root": "UPDATE from pathStat to System", "operations": ["UPD SimpleName: pathStat from pathStat to System"]}, {"root": "UPDATE from getMtime to currentTimeMillis", "operations": ["UPD SimpleName: getMtime from getMtime to currentTimeMillis"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: nowInMs to VariableDeclarationFragment at 0"]}, {"root": "INS SimpleType: Stat to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: Stat to SimpleType: Stat at 0", "INS SimpleType: Stat to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: > to IfStatement at 0"]}, {"root": "UPDATE from ObjectMapper to List", "operations": ["UPD SimpleName: ObjectMapper from ObjectMapper to List"]}, {"root": "MOVE from SimpleType: List", "operations": ["MOV SimpleName: ObjectMapper to SimpleType: List at 0"]}, {"root": "UPDATE from ObjectMapper to ZNRecord", "operations": ["UPD SimpleName: ObjectMapper from ObjectMapper to ZNRecord"]}, {"root": "MOVE from SimpleType: ZNRecord", "operations": ["MOV SimpleName: ObjectMapper to SimpleType: ZNRecord at 0"]}, {"root": "UPDATE from getSerializationConfig to get", "operations": ["UPD SimpleName: getSerializationConfig from getSerializationConfig to get"]}, {"root": "INS SimpleName: dumpPaths to MethodInvocation at 2", "operations": ["INS SimpleName: dumpPaths to MethodInvocation at 2"]}, {"root": "INS NullLiteral to MethodInvocation at 3", "operations": ["INS NullLiteral to MethodInvocation at 3"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 4", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 4"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: _thresholdNoChangeInMs to MethodInvocation at 3"]}, {"root": "UPDATE from nextPath to path", "operations": ["UPD SimpleName: nextPath from nextPath to path", "UPD SimpleName: e from e to path", "UPD SimpleName: nextPath from nextPath to path"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: queue to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: remove to MethodInvocation at 1"]}, {"root": "UPDATE from checkAndDump to childNames", "operations": ["UPD SimpleName: checkAndDump from checkAndDump to childNames", "UPD SimpleName: subSubPaths from subSubPaths to childNames"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from e to childName", "operations": ["UPD SimpleName: e from e to childName"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleName: e to SingleVariableDeclaration at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from timeDiff to stat", "operations": ["UPD SimpleName: timeDiff from timeDiff to stat"]}, {"root": "INS ArrayAccess to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: i to ArrayAccess at 1", "INS ArrayAccess to VariableDeclarationFragment at 1", "INS SimpleName: stats to ArrayAccess at 0"]}, {"root": "INS ParenthesizedExpression to InfixExpression: > at 0", "operations": ["INS InfixExpression: - to ParenthesizedExpression at 0", "INS SimpleName: getMtime to MethodInvocation at 1", "INS ParenthesizedExpression to InfixExpression: > at 0", "INS SimpleName: stat to MethodInvocation at 0", "INS SimpleName: now to InfixExpression: - at 0", "INS MethodInvocation to InfixExpression: - at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV QualifiedName: PropertyType.STATUSUPDATES to MethodInvocation at 4", "MOV SimpleName: getInstancePropertyPath to MethodInvocation at 1", "MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: instanceName to MethodInvocation at 3", "MOV SimpleName: HelixUtil to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2", "MOV SimpleName: instanceName to MethodInvocation at 3", "MOV SimpleName: getInstancePropertyPath to MethodInvocation at 1", "MOV SimpleName: HelixUtil to MethodInvocation at 0", "MOV QualifiedName: PropertyType.ERRORS to MethodInvocation at 4"]}, {"root": "UPDATE from getChildren to getChildNames", "operations": ["UPD SimpleName: getChildren from getChildren to getChildNames"]}, {"root": "INS NumberLiteral: 0 to MethodInvocation at 3", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: thresholdNoChangeInMs to MethodInvocation at 1", "MOV SimpleName: checkAndDump to MethodInvocation at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from thresholdNoChangeInMs to equals", "operations": ["UPD SimpleName: thresholdNoChangeInMs from thresholdNoChangeInMs to equals"]}, {"root": "UPDATE from e to subPath", "operations": ["UPD SimpleName: e from e to subPath"]}, {"root": "INS MethodInvocation to MethodInvocation at 2", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: leafPaths to MethodInvocation at 0", "INS SimpleName: i to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: info to MethodInvocation at 1", "MOV SimpleName: logger to MethodInvocation at 0"]}, {"root": "UPDATE from Exception to String", "operations": ["UPD SimpleName: Exception from Exception to String"]}, {"root": "MOVE from SimpleType: String", "operations": ["MOV SimpleName: Exception to SimpleType: String at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: logger to MethodInvocation at 0", "MOV SimpleName: warn to MethodInvocation at 1", "MOV SimpleName: e to MethodInvocation at 2"]}, {"root": "UPDATE from warn to serialize", "operations": ["UPD SimpleName: warn from warn to serialize"]}, {"root": "UPDATE from e to record", "operations": ["UPD SimpleName: e from e to record"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.StringWriter", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Date"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.codehaus.jackson.map.SerializationConfig", "DEL ImportDeclaration"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: ZkClient", "DEL SimpleName: zkClient", "DEL SingleVariableDeclaration", "DEL SimpleName: ZkClient"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: zkClient", "DEL SimpleName: _zkClient", "DEL ExpressionStatement", "DEL Assignment: ="]}, {"root": "DEL StringLiteral: \"Scanning status updates ...\"", "operations": ["DEL StringLiteral: \"Scanning status updates ...\""]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: scanPath", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL InfixExpression: *", "DEL SimpleName: _thresholdNoChangeInMs", "DEL NumberLiteral: 3", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: scanPath", "DEL ExpressionStatement"]}, {"root": "DEL TryStatement", "operations": ["DEL MethodInvocation", "DEL SimpleType: Exception", "DEL CatchClause", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: scanPath", "DEL SimpleName: Exception", "DEL Block", "DEL SimpleName: e", "DEL ExpressionStatement", "DEL TryStatement"]}, {"root": "DEL PrimitiveType: void", "operations": ["DEL PrimitiveType: void"]}, {"root": "DEL SimpleName: scanPath", "operations": ["DEL SimpleName: scanPath"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: path", "DEL SingleVariableDeclaration"]}, {"root": "DEL PrimitiveType: int", "operations": ["DEL PrimitiveType: int"]}, {"root": "DEL SimpleName: thresholdNoChangeInMs", "operations": ["DEL SimpleName: thresholdNoChangeInMs"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL SimpleName: path", "DEL InfixExpression: +", "DEL StringLiteral: \"Scanning path \""]}, {"root": "DEL SimpleName: path", "operations": ["DEL SimpleName: path"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL InfixExpression: +", "DEL SimpleName: subPath", "DEL SimpleName: path", "DEL StringLiteral: \"/\""]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL Block", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: Exception", "DEL SingleVariableDeclaration", "DEL CatchClause", "DEL SimpleName: nextPath", "DEL TryStatement", "DEL CatchClause", "DEL SimpleName: subPath", "DEL Block", "DEL InfixExpression: +", "DEL ExpressionStatement", "DEL EnhancedForStatement", "DEL SingleVariableDeclaration", "DEL SimpleName: e", "DEL TryStatement", "DEL StringLiteral: \"/\"", "DEL SimpleName: subsubPath", "DEL SimpleName: subPaths", "DEL Block", "DEL SimpleName: Exception", "DEL SimpleType: Exception", "DEL SimpleType: Exception", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: subSubPaths", "DEL EnhancedForStatement", "DEL Block"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL NumberLiteral: 0", "DEL InfixExpression: ==", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL StringLiteral: \"\"", "DEL ExpressionStatement", "DEL SimpleName: subPaths", "DEL SimpleName: add"]}, {"root": "DEL SimpleName: fullPath", "operations": ["DEL SimpleName: fullPath"]}, {"root": "DEL PrimitiveType: long", "operations": ["DEL PrimitiveType: long"]}, {"root": "DEL InfixExpression: -", "operations": ["DEL SimpleName: nowInMs", "DEL SimpleName: lastModifiedTimeInMs", "DEL InfixExpression: -"]}, {"root": "DEL SimpleName: timeDiff", "operations": ["DEL SimpleName: timeDiff"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL SimpleName: timeDiff", "DEL InfixExpression: +", "DEL StringLiteral: \" \"", "DEL StringLiteral: \"Dumping status update path \"", "DEL StringLiteral: \"MS has passed\"", "DEL SimpleName: fullPath"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL NumberLiteral: 0", "DEL ClassInstanceCreation", "DEL SimpleName: record", "DEL SimpleName: Date", "DEL SimpleName: _zkClient", "DEL SimpleName: fullPath", "DEL MethodInvocation", "DEL VariableDeclarationStatement", "DEL ConditionalExpression", "DEL SimpleName: sw", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: record", "DEL SimpleName: set", "DEL SimpleType: StringWriter", "DEL SimpleType: SerializationConfig", "DEL ExpressionStatement", "DEL SimpleType: ObjectMapper", "DEL SimpleType: ObjectMapper", "DEL SimpleName: subPaths", "DEL SimpleName: path", "DEL SimpleName: getTime", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"/\"", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL SimpleName: path", "DEL SimpleType: Date", "DEL SimpleName: StringWriter", "DEL SimpleName: toString", "DEL PrimitiveType: long", "DEL InfixExpression: >", "DEL IfStatement", "DEL TryStatement", "DEL SimpleName: lastModifiedTimeInMs", "DEL Block", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: serializationConfig", "DEL SimpleName: writeValue", "DEL VariableDeclarationFragment", "DEL SingleVariableDeclaration", "DEL SimpleName: fullPath", "DEL ClassInstanceCreation", "DEL Block", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL Block", "DEL MethodInvocation", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: subPath", "DEL SimpleType: Exception", "DEL SimpleName: mapper", "DEL Block", "DEL InfixExpression: >", "DEL VariableDeclarationStatement", "DEL SimpleName: StringWriter", "DEL SimpleName: SerializationConfig", "DEL MethodInvocation", "DEL SimpleType: StringWriter", "DEL BooleanLiteral: true", "DEL SimpleName: e", "DEL IfStatement", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL QualifiedName: SerializationConfig.Feature.INDENT_OUTPUT", "DEL StringLiteral: \"Exception during serialization in ZKPathDataDumpTask.checkAndDump. This can mostly be ignored\"", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL SimpleName: subPath", "DEL ClassInstanceCreation", "DEL CatchClause", "DEL SimpleName: setZkSerializer", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: sw", "DEL SimpleName: sw", "DEL SimpleName: mapper", "DEL VariableDeclarationStatement"]}]}}, {"ZKPathDataDumpTask_diff": {"operations": ["Move ImportDeclaration(23) into CompilationUnit(528) at 5", "Update QualifiedName: org.apache.helix.manager.zk.ZkClient(22) to org.apache.helix.BaseDataAccessor", "Update QualifiedName: org.codehaus.jackson.map.ObjectMapper(30) to com.google.common.collect.Lists", "Update SimpleType: ZkClient(66) to ZNRecordSerializer", "Move ExpressionStatement(86) into Block(98) at 3", "Insert Javadoc(250) into MethodDeclaration(372) at 0", "Insert Modifier: static(251) into MethodDeclaration(372) at 1", "Insert ParameterizedType: List<String>(256) into MethodDeclaration(372) at 2", "Insert SimpleName: scanPath(257) into MethodDeclaration(372) at 3", "Move SingleVariableDeclaration(277) into MethodDeclaration(372) at 8", "Update SimpleName: checkAndDump(320) to dump", "Insert SingleVariableDeclaration(381) into MethodDeclaration(526) at 2", "Update SimpleName: logger(41) to LOG", "Update SimpleName: ZkClient(65) to ZNRecordSerializer", "Update SimpleName: _zkClient(67) to _jsonSerializer", "Insert ExpressionStatement(93) into Block(98) at 2", "Move VariableDeclarationStatement(125) into Block(240) at 1", "Move VariableDeclarationStatement(133) into Block(240) at 2", "Insert VariableDeclarationStatement(142) into Block(240) at 3", "Move VariableDeclarationStatement(147) into Block(240) at 4", "Move EnhancedForStatement(180) into Block(240) at 5", "Insert VariableDeclarationStatement(215) into Block(240) at 6", "Move ExpressionStatement(191) into Block(240) at 7", "Insert VariableDeclarationStatement(233) into Block(240) at 8", "Move ExpressionStatement(214) into Block(240) at 9", "Insert TagElement(243) into Javadoc(250) at 0", "Insert TagElement: @param(245) into Javadoc(250) at 1", "Insert TagElement: @param(247) into Javadoc(250) at 2", "Insert TagElement: @return(249) into Javadoc(250) at 3", "Insert SimpleType: List(253) into ParameterizedType: List<String>(256) at 0", "Insert SimpleType: String(255) into ParameterizedType: List<String>(256) at 1", "Insert ParameterizedType: BaseDataAccessor<ZNRecord>(262) into SingleVariableDeclaration(264) at 0", "Insert SimpleName: accessor(263) into SingleVariableDeclaration(264) at 1", "Update SimpleName: subsubPath(276) to ancestorPath", "Insert VariableDeclarationStatement(279) into Block(371) at 0", "Insert WhileStatement(368) into Block(371) at 3", "Insert ReturnStatement(370) into Block(371) at 4", "Insert ParameterizedType: BaseDataAccessor<ZNRecord>(379) into SingleVariableDeclaration(381) at 0", "Insert SimpleName: accessor(380) into SingleVariableDeclaration(381) at 1", "Insert SimpleType: String(383) into SingleVariableDeclaration(385) at 0", "Update SimpleName: path(323) to ancestorPath", "Update SimpleName: thresholdNoChangeInMs(326) to threshold", "Insert VariableDeclarationStatement(418) into Block(525) at 2", "Insert VariableDeclarationStatement(429) into Block(525) at 3", "Move VariableDeclarationStatement(388) into Block(525) at 4", "Insert ForStatement(474) into Block(525) at 5", "Insert ExpressionStatement(481) into Block(525) at 6", "Insert VariableDeclarationStatement(495) into Block(525) at 7", "Insert EnhancedForStatement(518) into Block(525) at 8", "Move ExpressionStatement(498) into Block(525) at 9", "Insert Assignment: =(92) into ExpressionStatement(93) at 0", "Insert ParameterizedType: BaseDataAccessor<ZNRecord>(136) into VariableDeclarationStatement(142) at 0", "Insert VariableDeclarationFragment(141) into VariableDeclarationStatement(142) at 1", "Move SimpleType: String(249) into VariableDeclarationStatement(215) at 0", "Insert VariableDeclarationFragment(214) into VariableDeclarationStatement(215) at 1", "Move SimpleType: String(223) into VariableDeclarationStatement(233) at 0", "Insert VariableDeclarationFragment(232) into VariableDeclarationStatement(233) at 1", "Insert TextElement: Find paths of all leaf nodes under an ancestor path (exclusive)(242) into TagElement(243) at 0", "Insert SimpleName: accessor(244) into TagElement: @param(245) at 0", "Insert SimpleName: ancestorPath(246) into TagElement: @param(247) at 0", "Insert TextElement:  a list of paths(248) into TagElement: @return(249) at 0", "Insert SimpleName: List(252) into SimpleType: List(253) at 0", "Insert SimpleName: String(254) into SimpleType: String(255) at 0", "Insert SimpleType: BaseDataAccessor(259) into ParameterizedType: BaseDataAccessor<ZNRecord>(262) at 0", "Insert SimpleType: ZNRecord(261) into ParameterizedType: BaseDataAccessor<ZNRecord>(262) at 1", "Move ParameterizedType: List<String>(266) into VariableDeclarationStatement(279) at 0", "Insert VariableDeclarationFragment(278) into VariableDeclarationStatement(279) at 1", "Insert PrefixExpression: !(299) into WhileStatement(368) at 0", "Insert Block(367) into WhileStatement(368) at 1", "Insert SimpleName: leafPaths(369) into ReturnStatement(370) at 0", "Insert SimpleType: BaseDataAccessor(376) into ParameterizedType: BaseDataAccessor<ZNRecord>(379) at 0", "Insert SimpleType: ZNRecord(378) into ParameterizedType: BaseDataAccessor<ZNRecord>(379) at 1", "Insert SimpleName: String(382) into SimpleType: String(383) at 0", "Insert ParameterizedType: List<String>(393) into VariableDeclarationStatement(400) at 0", "Insert MethodInvocation(403) into IfStatement(406) at 0", "Insert ArrayType: Stat[](410) into VariableDeclarationStatement(418) at 0", "Insert VariableDeclarationFragment(417) into VariableDeclarationStatement(418) at 1", "Insert ParameterizedType: List<String>(423) into VariableDeclarationStatement(429) at 0", "Move VariableDeclarationFragment(380) into VariableDeclarationStatement(429) at 1", "Insert VariableDeclarationExpression(441) into ForStatement(474) at 0", "Insert InfixExpression: <(444) into ForStatement(474) at 1", "Insert PostfixExpression: ++(446) into ForStatement(474) at 2", "Insert Block(473) into ForStatement(474) at 3", "Insert MethodInvocation(480) into ExpressionStatement(481) at 0", "Insert ParameterizedType: List<ZNRecord>(486) into VariableDeclarationStatement(495) at 0", "Move VariableDeclarationFragment(451) into VariableDeclarationStatement(495) at 1", "Insert SingleVariableDeclaration(499) into EnhancedForStatement(518) at 0", "Insert SimpleName: dumpRecords(500) into EnhancedForStatement(518) at 1", "Insert Block(517) into EnhancedForStatement(518) at 2", "Update SimpleName: logger(91) to LOG", "Insert SimpleName: _jsonSerializer(88) into Assignment: =(92) at 0", "Move ClassInstanceCreation(425) into Assignment: =(92) at 1", "Update SimpleName: logger(113) to LOG", "Insert InfixExpression: +(113) into MethodInvocation(114) at 2", "Insert SimpleType: BaseDataAccessor(133) into ParameterizedType: BaseDataAccessor<ZNRecord>(136) at 0", "Insert SimpleType: ZNRecord(135) into ParameterizedType: BaseDataAccessor<ZNRecord>(136) at 1", "Insert SimpleName: baseAccessor(137) into VariableDeclarationFragment(141) at 0", "Insert MethodInvocation(140) into VariableDeclarationFragment(141) at 1", "Update SimpleName: instanceName(150) to instance", "Insert VariableDeclarationStatement(174) into Block(202) at 0", "Insert ExpressionStatement(180) into Block(202) at 1", "Insert VariableDeclarationStatement(193) into Block(202) at 2", "Insert ExpressionStatement(201) into Block(202) at 3", "Insert SimpleName: controllerStatusUpdatePath(206) into VariableDeclarationFragment(214) at 0", "Move MethodInvocation(188) into VariableDeclarationFragment(214) at 1", "Insert SimpleName: dump(216) into MethodInvocation(220) at 0", "Insert SimpleName: baseAccessor(217) into MethodInvocation(220) at 1", "Update SimpleName: scanPath(181) to controllerStatusUpdatePath", "Insert SimpleName: controllerErrorPath(224) into VariableDeclarationFragment(232) at 0", "Move MethodInvocation(199) into VariableDeclarationFragment(232) at 1", "Insert SimpleName: dump(234) into MethodInvocation(238) at 0", "Update SimpleName: logger(210) to baseAccessor", "Update SimpleName: error(211) to controllerErrorPath", "Update SimpleName: e(212) to _thresholdNoChangeInMs", "Insert SimpleName: BaseDataAccessor(258) into SimpleType: BaseDataAccessor(259) at 0", "Insert SimpleName: ZNRecord(260) into SimpleType: ZNRecord(261) at 0", "Insert SimpleName: queue(274) into VariableDeclarationFragment(278) at 0", "Insert MethodInvocation(277) into VariableDeclarationFragment(278) at 1", "Update SimpleName: logger(229) to queue", "Update SimpleName: info(230) to add", "Insert SimpleName: ancestorPath(282) into MethodInvocation(283) at 2", "Update SimpleName: subPaths(241) to leafPaths", "Insert MethodInvocation(298) into PrefixExpression: !(299) at 0", "Move VariableDeclarationStatement(261) into Block(367) at 0", "Move VariableDeclarationStatement(273) into Block(367) at 1", "Insert IfStatement(327) into Block(367) at 2", "Insert IfStatement(343) into Block(367) at 3", "Insert EnhancedForStatement(366) into Block(367) at 4", "Insert SimpleName: BaseDataAccessor(375) into SimpleType: BaseDataAccessor(376) at 0", "Insert SimpleName: ZNRecord(377) into SimpleType: ZNRecord(378) at 0", "Insert SimpleType: List(390) into ParameterizedType: List<String>(393) at 0", "Insert SimpleType: String(392) into ParameterizedType: List<String>(393) at 1", "Update SimpleName: subPaths(333) to leafPaths", "Update SimpleName: subPaths(340) to leafPaths", "Move SimpleName: subPaths(340) into MethodInvocation(403) at 0", "Update SimpleName: size(341) to isEmpty", "Move SimpleName: size(341) into MethodInvocation(403) at 1", "Insert ReturnStatement(404) into Block(405) at 0", "Move SimpleType: Stat(374) into ArrayType: Stat[](410) at 0", "Insert Dimension(409) into ArrayType: Stat[](410) at 1", "Insert SimpleName: stats(411) into VariableDeclarationFragment(417) at 0", "Insert MethodInvocation(416) into VariableDeclarationFragment(417) at 1", "Insert SimpleType: List(420) into ParameterizedType: List<String>(423) at 0", "Insert SimpleType: String(422) into ParameterizedType: List<String>(423) at 1", "Update SimpleName: pathStat(375) to dumpPaths", "Update SimpleName: lastModifiedTimeInMs(383) to now", "Insert PrimitiveType: int(437) into VariableDeclarationExpression(441) at 0", "Insert VariableDeclarationFragment(440) into VariableDeclarationExpression(441) at 1", "Update SimpleName: nowInMs(398) to i", "Move SimpleName: nowInMs(398) into InfixExpression: <(444) at 0", "Insert QualifiedName: stats.length(443) into InfixExpression: <(444) at 1", "Insert SimpleName: i(445) into PostfixExpression: ++(446) at 0", "Move VariableDeclarationStatement(407) into Block(473) at 0", "Insert IfStatement(472) into Block(473) at 1", "Update SimpleName: _zkClient(431) to LOG", "Move SimpleName: _zkClient(431) into MethodInvocation(480) at 0", "Update SimpleName: readData(432) to info", "Move SimpleName: readData(432) into MethodInvocation(480) at 1", "Insert InfixExpression: +(479) into MethodInvocation(480) at 2", "Insert SimpleType: List(483) into ParameterizedType: List<ZNRecord>(486) at 0", "Insert SimpleType: ZNRecord(485) into ParameterizedType: List<ZNRecord>(486) at 1", "Update SimpleName: serializationConfig(447) to dumpRecords", "Move SimpleType: ZNRecord(429) into SingleVariableDeclaration(499) at 0", "Insert SimpleName: record(498) into SingleVariableDeclaration(499) at 1", "Insert IfStatement(516) into Block(517) at 0", "Update SimpleName: _zkClient(494) to accessor", "Update SimpleName: deleteRecursive(495) to remove", "Update SimpleName: fullPath(496) to dumpPaths", "Insert NumberLiteral: 0(522) into MethodInvocation(523) at 3", "Update StringLiteral: \"Scanning cluster statusUpdate \"(93) to \"Init ZKPathDataDumpTask for cluster: \"", "Update StringLiteral: \" thresholdNoChangeInMs: \"(97) to \", thresholdNoChangeInMs: \"", "Insert StringLiteral: \"Scan statusUpdates and errors for cluster: \"(107) into InfixExpression: +(113) at 0", "Insert MethodInvocation(110) into InfixExpression: +(113) at 1", "Insert StringLiteral: \", by controller: \"(111) into InfixExpression: +(113) at 2", "Insert SimpleName: _manager(112) into InfixExpression: +(113) at 3", "Insert SimpleName: BaseDataAccessor(132) into SimpleType: BaseDataAccessor(133) at 0", "Insert SimpleName: ZNRecord(134) into SimpleType: ZNRecord(135) at 0", "Insert SimpleName: accessor(138) into MethodInvocation(140) at 0", "Insert SimpleName: getBaseDataAccessor(139) into MethodInvocation(140) at 1", "Insert SimpleType: String(163) into VariableDeclarationStatement(174) at 0", "Insert VariableDeclarationFragment(173) into VariableDeclarationStatement(174) at 1", "Insert MethodInvocation(179) into ExpressionStatement(180) at 0", "Move SimpleType: String(254) into VariableDeclarationStatement(193) at 0", "Insert VariableDeclarationFragment(192) into VariableDeclarationStatement(193) at 1", "Insert MethodInvocation(200) into ExpressionStatement(201) at 0", "Insert SimpleName: Lists(275) into MethodInvocation(277) at 0", "Insert SimpleName: newLinkedList(276) into MethodInvocation(277) at 1", "Update SimpleName: _zkClient(242) to Lists", "Update SimpleName: getChildren(243) to newArrayList", "Insert SimpleName: queue(296) into MethodInvocation(298) at 0", "Insert SimpleName: isEmpty(297) into MethodInvocation(298) at 1", "Move SimpleType: String(322) into VariableDeclarationStatement(308) at 0", "Move ParameterizedType: List<String>(332) into VariableDeclarationStatement(321) at 0", "Insert InfixExpression: ==(324) into IfStatement(327) at 0", "Insert Block(326) into IfStatement(327) at 1", "Insert InfixExpression: &&(336) into IfStatement(343) at 0", "Insert Block(342) into IfStatement(343) at 1", "Insert SingleVariableDeclaration(347) into EnhancedForStatement(366) at 0", "Insert SimpleName: childNames(348) into EnhancedForStatement(366) at 1", "Insert Block(365) into EnhancedForStatement(366) at 2", "Insert SimpleName: List(389) into SimpleType: List(390) at 0", "Insert SimpleName: String(391) into SimpleType: String(392) at 0", "Update SimpleName: _zkClient(334) to scanPath", "Update SimpleName: getChildren(335) to accessor", "Update SimpleName: path(336) to ancestorPath", "Insert SimpleName: accessor(412) into MethodInvocation(416) at 0", "Update SimpleName: subPath(360) to getStats", "Move SimpleName: subPath(360) into MethodInvocation(416) at 1", "Update SimpleName: length(361) to leafPaths", "Move SimpleName: length(361) into MethodInvocation(416) at 2", "Insert NumberLiteral: 0(415) into MethodInvocation(416) at 3", "Insert SimpleName: List(419) into SimpleType: List(420) at 0", "Insert SimpleName: String(421) into SimpleType: String(422) at 0", "Update SimpleName: _zkClient(376) to Lists", "Update SimpleName: getStat(377) to newArrayList", "Update SimpleName: pathStat(384) to System", "Update SimpleName: getMtime(385) to currentTimeMillis", "Update SimpleName: nowInMs(390) to i", "Move SimpleName: nowInMs(390) into VariableDeclarationFragment(440) at 0", "Insert NumberLiteral: 0(439) into VariableDeclarationFragment(440) at 1", "Insert SimpleType: Stat(448) into VariableDeclarationStatement(454) at 0", "Move InfixExpression: >(410) into IfStatement(472) at 0", "Insert Block(471) into IfStatement(472) at 1", "Insert StringLiteral: \"Dump statusUpdates and errors records for pahts: \"(477) into InfixExpression: +(479) at 0", "Insert SimpleName: dumpPaths(478) into InfixExpression: +(479) at 1", "Update SimpleName: ObjectMapper(437) to List", "Move SimpleName: ObjectMapper(437) into SimpleType: List(483) at 0", "Update SimpleName: ObjectMapper(440) to ZNRecord", "Move SimpleName: ObjectMapper(440) into SimpleType: ZNRecord(485) at 0", "Update SimpleName: mapper(448) to accessor", "Update SimpleName: getSerializationConfig(449) to get", "Insert SimpleName: dumpPaths(490) into MethodInvocation(493) at 2", "Insert NullLiteral(491) into MethodInvocation(493) at 3", "Insert NumberLiteral: 0(492) into MethodInvocation(493) at 4", "Insert InfixExpression: !=(503) into IfStatement(516) at 0", "Insert Block(515) into IfStatement(516) at 1", "Insert SimpleName: _manager(108) into MethodInvocation(110) at 0", "Insert SimpleName: getClusterName(109) into MethodInvocation(110) at 1", "Insert SimpleName: String(162) into SimpleType: String(163) at 0", "Insert SimpleName: statusUpdatePath(164) into VariableDeclarationFragment(173) at 0", "Insert MethodInvocation(172) into VariableDeclarationFragment(173) at 1", "Insert SimpleName: dump(175) into MethodInvocation(179) at 0", "Insert SimpleName: baseAccessor(176) into MethodInvocation(179) at 1", "Insert SimpleName: statusUpdatePath(177) into MethodInvocation(179) at 2", "Move SimpleName: _thresholdNoChangeInMs(162) into MethodInvocation(179) at 3", "Insert SimpleName: errorPath(183) into VariableDeclarationFragment(192) at 0", "Insert MethodInvocation(191) into VariableDeclarationFragment(192) at 1", "Insert SimpleName: dump(194) into MethodInvocation(200) at 0", "Insert SimpleName: baseAccessor(195) into MethodInvocation(200) at 1", "Insert SimpleName: errorPath(196) into MethodInvocation(200) at 2", "Move InfixExpression: *(202) into MethodInvocation(200) at 3", "Update SimpleName: nextPath(255) to path", "Insert MethodInvocation(306) into VariableDeclarationFragment(307) at 1", "Update SimpleName: subSubPaths(267) to childNames", "Insert SimpleName: childNames(322) into InfixExpression: ==(324) at 0", "Insert NullLiteral(323) into InfixExpression: ==(324) at 1", "Insert ContinueStatement(325) into Block(326) at 0", "Insert MethodInvocation(330) into InfixExpression: &&(336) at 0", "Insert PrefixExpression: !(335) into InfixExpression: &&(336) at 1", "Move ExpressionStatement(296) into Block(342) at 0", "Move SimpleType: String(358) into SingleVariableDeclaration(347) at 0", "Update SimpleName: e(305) to childName", "Move SimpleName: e(305) into SingleVariableDeclaration(347) at 1", "Insert VariableDeclarationStatement(359) into Block(365) at 0", "Move ExpressionStatement(311) into Block(365) at 1", "Insert SimpleName: Stat(447) into SimpleType: Stat(448) at 0", "Update SimpleName: timeDiff(402) to stat", "Insert ArrayAccess(452) into VariableDeclarationFragment(453) at 1", "Insert ParenthesizedExpression(460) into InfixExpression: >(462) at 0", "Update SimpleName: thresholdNoChangeInMs(409) to threshold", "Move ExpressionStatement(420) into Block(471) at 0", "Insert SimpleName: record(501) into InfixExpression: !=(503) at 0", "Insert NullLiteral(502) into InfixExpression: !=(503) at 1", "Insert ExpressionStatement(514) into Block(515) at 0", "Move SimpleName: HelixUtil(154) into MethodInvocation(172) at 0", "Move SimpleName: getInstancePropertyPath(155) into MethodInvocation(172) at 1", "Move MethodInvocation(170) into MethodInvocation(172) at 2", "Update SimpleName: instanceName(159) to instance", "Move SimpleName: instanceName(159) into MethodInvocation(172) at 3", "Move QualifiedName: PropertyType.STATUSUPDATES(160) into MethodInvocation(172) at 4", "Move SimpleName: HelixUtil(166) into MethodInvocation(191) at 0", "Move SimpleName: getInstancePropertyPath(167) into MethodInvocation(191) at 1", "Move MethodInvocation(158) into MethodInvocation(191) at 2", "Update SimpleName: instanceName(171) to instance", "Move SimpleName: instanceName(171) into MethodInvocation(191) at 3", "Move QualifiedName: PropertyType.ERRORS(172) into MethodInvocation(191) at 4", "Insert SimpleName: queue(303) into MethodInvocation(306) at 0", "Insert SimpleName: remove(304) into MethodInvocation(306) at 1", "Insert NumberLiteral: 0(305) into MethodInvocation(306) at 2", "Update SimpleName: _zkClient(268) to accessor", "Update SimpleName: getChildren(269) to getChildNames", "Update SimpleName: nextPath(270) to path", "Insert NumberLiteral: 0(318) into MethodInvocation(319) at 3", "Update SimpleName: checkAndDump(279) to childNames", "Move SimpleName: checkAndDump(279) into MethodInvocation(330) at 0", "Insert SimpleName: isEmpty(329) into MethodInvocation(330) at 1", "Insert MethodInvocation(334) into PrefixExpression: !(335) at 0", "Move SimpleType: String(353) into VariableDeclarationStatement(359) at 0", "Insert VariableDeclarationFragment(358) into VariableDeclarationStatement(359) at 1", "Insert SimpleName: stats(450) into ArrayAccess(452) at 0", "Insert SimpleName: i(451) into ArrayAccess(452) at 1", "Insert InfixExpression: -(459) into ParenthesizedExpression(460) at 0", "Insert MethodInvocation(513) into ExpressionStatement(514) at 0", "Insert SimpleName: path(331) into MethodInvocation(334) at 0", "Update SimpleName: thresholdNoChangeInMs(284) to equals", "Move SimpleName: thresholdNoChangeInMs(284) into MethodInvocation(334) at 1", "Insert SimpleName: ancestorPath(333) into MethodInvocation(334) at 2", "Update SimpleName: logger(292) to leafPaths", "Update SimpleName: error(293) to add", "Update SimpleName: e(294) to path", "Insert SimpleName: subPath(351) into VariableDeclarationFragment(358) at 0", "Insert MethodInvocation(357) into VariableDeclarationFragment(358) at 1", "Update SimpleName: logger(307) to queue", "Update SimpleName: error(308) to add", "Update SimpleName: e(309) to subPath", "Insert SimpleName: now(455) into InfixExpression: -(459) at 0", "Insert MethodInvocation(458) into InfixExpression: -(459) at 1", "Update SimpleName: logger(411) to dumpPaths", "Update SimpleName: info(412) to add", "Insert MethodInvocation(468) into MethodInvocation(469) at 2", "Update SimpleName: logger(473) to LOG", "Move SimpleName: logger(473) into MethodInvocation(513) at 0", "Move SimpleName: info(474) into MethodInvocation(513) at 1", "Insert ClassInstanceCreation(512) into MethodInvocation(513) at 2", "Insert SimpleName: String(352) into MethodInvocation(357) at 0", "Insert SimpleName: format(353) into MethodInvocation(357) at 1", "Insert StringLiteral: \"%s/%s\"(354) into MethodInvocation(357) at 2", "Insert SimpleName: path(355) into MethodInvocation(357) at 3", "Insert SimpleName: childName(356) into MethodInvocation(357) at 4", "Insert SimpleName: stat(456) into MethodInvocation(458) at 0", "Insert SimpleName: getMtime(457) into MethodInvocation(458) at 1", "Insert SimpleName: leafPaths(465) into MethodInvocation(468) at 0", "Insert SimpleName: get(466) into MethodInvocation(468) at 1", "Insert SimpleName: i(467) into MethodInvocation(468) at 2", "Insert SimpleType: String(507) into ClassInstanceCreation(512) at 0", "Insert MethodInvocation(511) into ClassInstanceCreation(512) at 1", "Update SimpleName: Exception(481) to String", "Move SimpleName: Exception(481) into SimpleType: String(507) at 0", "Update SimpleName: logger(485) to _jsonSerializer", "Move SimpleName: logger(485) into MethodInvocation(511) at 0", "Update SimpleName: warn(486) to serialize", "Move SimpleName: warn(486) into MethodInvocation(511) at 1", "Update SimpleName: e(488) to record", "Move SimpleName: e(488) into MethodInvocation(511) at 2", "Delete QualifiedName: java.io.StringWriter(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.util.Date(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: org.codehaus.jackson.map.SerializationConfig(32)", "Delete ImportDeclaration(33)", "Delete SimpleName: ZkClient(76)", "Delete SimpleType: ZkClient(77)", "Delete SimpleName: zkClient(78)", "Delete SingleVariableDeclaration(79)", "Delete SimpleName: _zkClient(87)", "Delete SimpleName: zkClient(88)", "Delete Assignment: =(89)", "Delete ExpressionStatement(90)", "Delete StringLiteral: \"Scanning status updates ...\"(115)", "Delete SimpleName: scanPath(153)", "Delete MethodInvocation(161)", "Delete MethodInvocation(163)", "Delete ExpressionStatement(164)", "Delete SimpleName: scanPath(165)", "Delete MethodInvocation(173)", "Delete SimpleName: _thresholdNoChangeInMs(174)", "Delete NumberLiteral: 3(175)", "Delete InfixExpression: *(176)", "Delete MethodInvocation(177)", "Delete ExpressionStatement(178)", "Delete SimpleName: scanPath(192)", "Delete MethodInvocation(203)", "Delete ExpressionStatement(204)", "Delete Block(205)", "Delete SimpleName: Exception(206)", "Delete SimpleType: Exception(207)", "Delete SimpleName: e(208)", "Delete SingleVariableDeclaration(209)", "Delete Block(215)", "Delete CatchClause(216)", "Delete TryStatement(217)", "Delete PrimitiveType: void(220)", "Delete SimpleName: scanPath(221)", "Delete SimpleName: path(224)", "Delete SingleVariableDeclaration(225)", "Delete PrimitiveType: int(226)", "Delete SimpleName: thresholdNoChangeInMs(227)", "Delete StringLiteral: \"Scanning path \"(231)", "Delete SimpleName: path(232)", "Delete InfixExpression: +(233)", "Delete SimpleName: path(244)", "Delete SimpleName: path(256)", "Delete StringLiteral: \"/\"(257)", "Delete SimpleName: subPath(258)", "Delete InfixExpression: +(259)", "Delete SimpleName: subPath(250)", "Delete SingleVariableDeclaration(251)", "Delete SimpleName: subPaths(252)", "Delete SimpleName: subSubPaths(278)", "Delete SimpleName: nextPath(280)", "Delete StringLiteral: \"/\"(281)", "Delete SimpleName: subsubPath(282)", "Delete InfixExpression: +(283)", "Delete MethodInvocation(285)", "Delete ExpressionStatement(286)", "Delete Block(287)", "Delete SimpleName: Exception(288)", "Delete SimpleType: Exception(289)", "Delete SimpleName: e(290)", "Delete SingleVariableDeclaration(291)", "Delete Block(297)", "Delete CatchClause(298)", "Delete TryStatement(299)", "Delete Block(300)", "Delete EnhancedForStatement(301)", "Delete Block(302)", "Delete SimpleName: Exception(303)", "Delete SimpleType: Exception(304)", "Delete SingleVariableDeclaration(306)", "Delete Block(312)", "Delete CatchClause(313)", "Delete TryStatement(314)", "Delete Block(315)", "Delete EnhancedForStatement(316)", "Delete MethodInvocation(342)", "Delete NumberLiteral: 0(343)", "Delete InfixExpression: ==(344)", "Delete SimpleName: subPaths(345)", "Delete SimpleName: add(346)", "Delete StringLiteral: \"\"(347)", "Delete MethodInvocation(348)", "Delete ExpressionStatement(349)", "Delete SimpleName: fullPath(378)", "Delete PrimitiveType: long(401)", "Delete SimpleName: nowInMs(403)", "Delete SimpleName: lastModifiedTimeInMs(404)", "Delete InfixExpression: -(405)", "Delete SimpleName: timeDiff(408)", "Delete StringLiteral: \"Dumping status update path \"(413)", "Delete SimpleName: fullPath(414)", "Delete StringLiteral: \" \"(415)", "Delete SimpleName: timeDiff(416)", "Delete StringLiteral: \"MS has passed\"(417)", "Delete InfixExpression: +(418)", "Delete SimpleName: subPath(354)", "Delete SingleVariableDeclaration(355)", "Delete SimpleName: subPaths(356)", "Delete SimpleName: fullPath(359)", "Delete MethodInvocation(362)", "Delete NumberLiteral: 0(363)", "Delete InfixExpression: >(364)", "Delete SimpleName: path(365)", "Delete StringLiteral: \"/\"(366)", "Delete SimpleName: subPath(367)", "Delete InfixExpression: +(368)", "Delete SimpleName: path(369)", "Delete ConditionalExpression(370)", "Delete VariableDeclarationFragment(371)", "Delete VariableDeclarationStatement(372)", "Delete VariableDeclarationStatement(381)", "Delete PrimitiveType: long(389)", "Delete SimpleName: Date(391)", "Delete SimpleType: Date(392)", "Delete ClassInstanceCreation(393)", "Delete SimpleName: getTime(394)", "Delete MethodInvocation(395)", "Delete VariableDeclarationFragment(396)", "Delete VariableDeclarationStatement(397)", "Delete SimpleName: lastModifiedTimeInMs(399)", "Delete InfixExpression: >(400)", "Delete SimpleName: _zkClient(421)", "Delete SimpleName: setZkSerializer(422)", "Delete MethodInvocation(426)", "Delete ExpressionStatement(427)", "Delete SimpleName: record(430)", "Delete SimpleName: fullPath(433)", "Delete MethodInvocation(434)", "Delete VariableDeclarationFragment(435)", "Delete VariableDeclarationStatement(436)", "Delete SimpleType: ObjectMapper(438)", "Delete SimpleName: mapper(439)", "Delete SimpleType: ObjectMapper(441)", "Delete ClassInstanceCreation(442)", "Delete VariableDeclarationFragment(443)", "Delete VariableDeclarationStatement(444)", "Delete SimpleName: SerializationConfig(445)", "Delete SimpleType: SerializationConfig(446)", "Delete VariableDeclarationStatement(452)", "Delete SimpleName: serializationConfig(453)", "Delete SimpleName: set(454)", "Delete QualifiedName: SerializationConfig.Feature.INDENT_OUTPUT(455)", "Delete BooleanLiteral: true(456)", "Delete MethodInvocation(457)", "Delete ExpressionStatement(458)", "Delete SimpleName: StringWriter(459)", "Delete SimpleType: StringWriter(460)", "Delete SimpleName: sw(461)", "Delete SimpleName: StringWriter(462)", "Delete SimpleType: StringWriter(463)", "Delete ClassInstanceCreation(464)", "Delete VariableDeclarationFragment(465)", "Delete VariableDeclarationStatement(466)", "Delete SimpleName: mapper(467)", "Delete SimpleName: writeValue(468)", "Delete SimpleName: sw(469)", "Delete SimpleName: record(470)", "Delete MethodInvocation(471)", "Delete ExpressionStatement(472)", "Delete SimpleName: sw(475)", "Delete SimpleName: toString(476)", "Delete MethodInvocation(477)", "Delete MethodInvocation(478)", "Delete ExpressionStatement(479)", "Delete Block(480)", "Delete SimpleType: Exception(482)", "Delete SimpleName: e(483)", "Delete SingleVariableDeclaration(484)", "Delete StringLiteral: \"Exception during serialization in ZKPathDataDumpTask.checkAndDump. This can mostly be ignored\"(487)", "Delete MethodInvocation(489)", "Delete ExpressionStatement(490)", "Delete Block(491)", "Delete CatchClause(492)", "Delete TryStatement(493)", "Delete Block(499)", "Delete IfStatement(500)", "Delete Block(501)", "Delete IfStatement(502)", "Delete Block(503)", "Delete EnhancedForStatement(504)"]}}, {"ZKHelixManager_cluster": {"actions": [{"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: StatusDumpTask to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: StatusDumpTask to ClassInstanceCreation at 0"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL SimpleName: zkclient", "DEL SimpleName: ZkClient", "DEL SimpleType: ZkClient", "DEL FieldDeclaration"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: ZkClient", "DEL SingleVariableDeclaration", "DEL SimpleName: zkclient", "DEL SimpleName: ZkClient"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ThisExpression", "DEL SimpleName: zkclient", "DEL FieldAccess", "DEL SimpleName: zkclient", "DEL Assignment: =", "DEL ExpressionStatement"]}, {"root": "DEL SimpleName: zkclient", "operations": ["DEL SimpleName: zkclient"]}, {"root": "DEL SimpleName: _zkclient", "operations": ["DEL SimpleName: _zkclient"]}, {"root": "DEL SimpleName: _zkclient", "operations": ["DEL SimpleName: _zkclient"]}]}}, {"ZKHelixManager_diff": {"operations": ["Move SimpleType: StatusDumpTask(701) into ClassInstanceCreation(667) at 0", "Move SimpleType: StatusDumpTask(682) into ClassInstanceCreation(685) at 0", "Delete Modifier: final(390)", "Delete SimpleName: ZkClient(391)", "Delete SimpleType: ZkClient(392)", "Delete SimpleName: zkclient(393)", "Delete VariableDeclarationFragment(394)", "Delete FieldDeclaration(395)", "Delete SimpleName: ZkClient(404)", "Delete SimpleType: ZkClient(405)", "Delete SimpleName: zkclient(406)", "Delete SingleVariableDeclaration(407)", "Delete ThisExpression(412)", "Delete SimpleName: zkclient(413)", "Delete FieldAccess(414)", "Delete SimpleName: zkclient(415)", "Delete Assignment: =(416)", "Delete ExpressionStatement(417)", "Delete SimpleName: zkclient(476)", "Delete SimpleName: _zkclient(683)", "Delete SimpleName: _zkclient(702)"]}}], "commit_stats": [{"total_files": 12, "deleted_files": 1, "testing": "True", "maintenance": "False", "build": "True"}]}