{"application": "google-google-java-format", "csha": "70ab4ace7056d50fcfca8a59b63cb5dfb8da095f", "files": [{"RemoveUnusedImports_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 10", "MOV ImportDeclaration to CompilationUnit at 12", "MOV ImportDeclaration to CompilationUnit at 11", "MOV ImportDeclaration to CompilationUnit at 13"]}, {"root": "INS ImportDeclaration to CompilationUnit at 24", "operations": ["INS QualifiedName: org.eclipse.jdt.core.dom.Name to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 24"]}, {"root": "MOVE from SwitchStatement", "operations": ["MOV SwitchCase to SwitchStatement at 4"]}, {"root": "UPDATE from ASTNode to Name", "operations": ["UPD SimpleType: ASTNode from ASTNode to Name", "UPD SimpleName: ASTNode from ASTNode to Name"]}, {"root": "UPDATE from typeReference to name", "operations": ["UPD SimpleName: typeReference from typeReference to name", "UPD SimpleName: typeReference from typeReference to name", "UPD SimpleName: typeReference from typeReference to name"]}, {"root": "INS WhileStatement to Block at 0", "operations": ["INS SimpleName: name to MethodInvocation at 0", "INS Block to WhileStatement at 1", "INS MethodInvocation to Assignment: = at 1", "INS ExpressionStatement to Block at 0", "INS SimpleType: QualifiedName to CastExpression at 0", "INS SimpleName: getQualifier to MethodInvocation at 1", "INS ParenthesizedExpression to MethodInvocation at 0", "INS CastExpression to ParenthesizedExpression at 0", "INS WhileStatement to Block at 0", "INS SimpleName: name to CastExpression at 1", "INS MethodInvocation to WhileStatement at 0", "INS SimpleName: isQualifiedName to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: name to Assignment: = at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS SimpleType: String to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: identifier to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: isUpperCase to MethodInvocation at 1", "INS MethodInvocation to IfStatement at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: Character to MethodInvocation at 0", "INS IfStatement to Block at 2", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: charAt to MethodInvocation at 1", "INS SimpleName: identifier to MethodInvocation at 0"]}, {"root": "INS SwitchCase to SwitchStatement at 1", "operations": ["INS StringLiteral: \"@exception\" to SwitchCase at 0", "INS SwitchCase to SwitchStatement at 1"]}, {"root": "INS SwitchCase to SwitchStatement at 3", "operations": ["INS SwitchCase to SwitchStatement at 3", "INS StringLiteral: \"@linkplain\" to SwitchCase at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "UPDATE from \"@see\" to \"@value\"", "operations": ["UPD StringLiteral: \"@see\" from \"@see\" to \"@value\""]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS CastExpression to MethodInvocation at 1", "operations": ["INS SimpleName: reference to CastExpression at 1", "INS CastExpression to MethodInvocation at 1", "INS SimpleName: Name to SimpleType: Name at 0", "INS SimpleType: Name to CastExpression at 0"]}, {"root": "INS SimpleName: identifier to MethodInvocation at 2", "operations": ["INS SimpleName: identifier to MethodInvocation at 2"]}, {"root": "UPDATE from SimpleName to QualifiedName", "operations": ["UPD SimpleName: SimpleName from SimpleName to QualifiedName"]}, {"root": "MOVE from SimpleType: QualifiedName", "operations": ["MOV SimpleName: SimpleName to SimpleType: QualifiedName at 0"]}, {"root": "DEL SimpleName: reference", "operations": ["DEL SimpleName: reference"]}, {"root": "DEL IfStatement", "operations": ["DEL InstanceofExpression", "DEL SimpleType: SimpleName", "DEL SimpleName: typeReference", "DEL IfStatement"]}]}}, {"RemoveUnusedImports_diff": {"operations": ["Move ImportDeclaration(47) into CompilationUnit(904) at 10", "Move ImportDeclaration(49) into CompilationUnit(904) at 11", "Move ImportDeclaration(51) into CompilationUnit(904) at 12", "Move ImportDeclaration(53) into CompilationUnit(904) at 13", "Insert ImportDeclaration(49) into CompilationUnit(904) at 24", "Insert QualifiedName: org.eclipse.jdt.core.dom.Name(48) into ImportDeclaration(49) at 0", "Move SwitchCase(177) into SwitchStatement(201) at 4", "Update SimpleType: ASTNode(253) to Name", "Update SimpleName: typeReference(254) to name", "Insert WhileStatement(279) into Block(307) at 0", "Insert VariableDeclarationStatement(291) into Block(307) at 1", "Insert IfStatement(306) into Block(307) at 2", "Insert SwitchCase(177) into SwitchStatement(201) at 1", "Insert SwitchCase(181) into SwitchStatement(201) at 3", "Update SimpleName: ASTNode(252) to Name", "Insert MethodInvocation(267) into WhileStatement(279) at 0", "Insert Block(278) into WhileStatement(279) at 1", "Insert SimpleType: String(281) into VariableDeclarationStatement(291) at 0", "Insert VariableDeclarationFragment(290) into VariableDeclarationStatement(291) at 1", "Insert MethodInvocation(298) into IfStatement(306) at 0", "Move Block(272) into IfStatement(306) at 1", "Insert StringLiteral: \"@exception\"(176) into SwitchCase(177) at 0", "Insert StringLiteral: \"@linkplain\"(180) into SwitchCase(181) at 0", "Update StringLiteral: \"@see\"(176) to \"@value\"", "Insert SimpleName: name(265) into MethodInvocation(267) at 0", "Insert SimpleName: isQualifiedName(266) into MethodInvocation(267) at 1", "Insert ExpressionStatement(277) into Block(278) at 0", "Insert SimpleName: String(280) into SimpleType: String(281) at 0", "Insert SimpleName: identifier(282) into VariableDeclarationFragment(290) at 0", "Move MethodInvocation(268) into VariableDeclarationFragment(290) at 1", "Insert SimpleName: Character(292) into MethodInvocation(298) at 0", "Insert SimpleName: isUpperCase(293) into MethodInvocation(298) at 1", "Insert MethodInvocation(297) into MethodInvocation(298) at 2", "Insert Assignment: =(276) into ExpressionStatement(277) at 0", "Insert SimpleName: identifier(294) into MethodInvocation(297) at 0", "Insert SimpleName: charAt(295) into MethodInvocation(297) at 1", "Insert NumberLiteral: 0(296) into MethodInvocation(297) at 2", "Insert CastExpression(219) into MethodInvocation(220) at 1", "Insert SimpleName: name(268) into Assignment: =(276) at 0", "Insert MethodInvocation(275) into Assignment: =(276) at 1", "Insert SimpleName: identifier(301) into MethodInvocation(303) at 2", "Update SimpleName: typeReference(269) to name", "Insert SimpleType: Name(217) into CastExpression(219) at 0", "Insert SimpleName: reference(218) into CastExpression(219) at 1", "Insert ParenthesizedExpression(273) into MethodInvocation(275) at 0", "Insert SimpleName: getQualifier(274) into MethodInvocation(275) at 1", "Update SimpleName: typeReference(264) to name", "Insert SimpleName: Name(216) into SimpleType: Name(217) at 0", "Insert CastExpression(272) into ParenthesizedExpression(273) at 0", "Insert SimpleType: QualifiedName(270) into CastExpression(272) at 0", "Insert SimpleName: name(271) into CastExpression(272) at 1", "Update SimpleName: SimpleName(257) to QualifiedName", "Move SimpleName: SimpleName(257) into SimpleType: QualifiedName(270) at 0", "Delete SimpleName: reference(210)", "Delete SimpleName: typeReference(256)", "Delete SimpleType: SimpleName(258)", "Delete InstanceofExpression(259)", "Delete IfStatement(273)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}