{"application": "google-auto", "csha": "5c020432f0c19e67711e1bb6a2ca7a626ca0f4f6", "files": [{"AbstractMethodExtractor_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 1"]}, {"root": "UPDATE from java.util.Map to com.google.common.collect.ImmutableListMultimap", "operations": ["UPD QualifiedName: java.util.Map from java.util.Map to com.google.common.collect.ImmutableListMultimap"]}, {"root": "UPDATE from Map<String,List<String>> to ImmutableListMultimap<String,String>", "operations": ["UPD ParameterizedType: Map<String,List<String>> from Map<String,List<String>> to ImmutableListMultimap<String,String>"]}, {"root": "UPDATE from Map to ImmutableListMultimap", "operations": ["UPD SimpleType: Map from Map to ImmutableListMultimap", "UPD SimpleName: Map from Map to ImmutableListMultimap"]}, {"root": "MOVE from ParameterizedType: Map<String,List<String>>", "operations": ["MOV SimpleType: String to ParameterizedType: Map<String,List<String>> at 2", "MOV SimpleType: List to ParameterizedType: Map<String,List<String>> at 0"]}, {"root": "UPDATE from Map<String,List<String>> to ImmutableListMultimap.Builder<String,String>", "operations": ["UPD ParameterizedType: Map<String,List<String>> from Map<String,List<String>> to ImmutableListMultimap.Builder<String,String>"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: abstractMethods to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: build to MethodInvocation at 1"]}, {"root": "UPDATE from List to ImmutableListMultimap.Builder", "operations": ["UPD SimpleType: List from List to ImmutableListMultimap.Builder"]}, {"root": "MOVE from ParameterizedType: Map<String,List<String>>", "operations": ["MOV SimpleType: String to ParameterizedType: Map<String,List<String>> at 1"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: builder to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: ImmutableListMultimap to MethodInvocation at 0"]}, {"root": "INS QualifiedName: ImmutableListMultimap.Builder to SimpleType: List at 0", "operations": ["INS QualifiedName: ImmutableListMultimap.Builder to SimpleType: List at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: || to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0", "MOV IfStatement to IfStatement at 2", "MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS IfStatement to IfStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: && to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "UPDATE from classStack to previousToken", "operations": ["UPD SimpleName: classStack from classStack to previousToken"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: classStack to MethodInvocation at 3"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.ArrayList"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.HashMap"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.List", "DEL ImportDeclaration"]}, {"root": "DEL ParameterizedType: List<String>", "operations": ["DEL ParameterizedType: List<String>", "DEL SimpleType: List", "DEL SimpleName: List"]}, {"root": "DEL SimpleName: List", "operations": ["DEL SimpleName: List"]}, {"root": "DEL SimpleType: Map", "operations": ["DEL SimpleType: Map", "DEL SimpleName: Map"]}, {"root": "DEL ParameterizedType: List<String>", "operations": ["DEL ParameterizedType: List<String>"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: HashMap", "DEL SimpleType: String", "DEL ParameterizedType: List<String>", "DEL ParameterizedType: HashMap<String,List<String>>", "DEL SimpleType: List", "DEL SimpleName: List", "DEL SimpleName: HashMap", "DEL SimpleName: String", "DEL SimpleName: String", "DEL ClassInstanceCreation", "DEL SimpleType: String"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL ParameterizedType: List<String>", "DEL SimpleType: List", "DEL SimpleName: List", "DEL SimpleType: String", "DEL SimpleName: methods", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: String", "DEL SimpleName: abstractMethods", "DEL VariableDeclarationStatement", "DEL SimpleName: get"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL SimpleName: methods", "DEL NullLiteral", "DEL InfixExpression: =="]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: String", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleType: ArrayList", "DEL SimpleName: ArrayList", "DEL SimpleName: methods", "DEL SimpleType: String", "DEL ParameterizedType: ArrayList<String>"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getLast"]}, {"root": "DEL SimpleName: methods", "operations": ["DEL SimpleName: methods"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: previousToken", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: add", "DEL SimpleName: methods"]}, {"root": "DEL Block", "operations": ["DEL Block", "DEL IfStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement", "DEL IfStatement"]}, {"root": "DEL SimpleName: abstractMethods", "operations": ["DEL SimpleName: abstractMethods"]}]}}, {"AbstractMethodExtractor_diff": {"operations": ["Move ImportDeclaration(13) into CompilationUnit(296) at 1", "Update QualifiedName: java.util.Map(12) to com.google.common.collect.ImmutableListMultimap", "Update ParameterizedType: Map<String,List<String>>(59) to ImmutableListMultimap<String,String>", "Update SimpleType: Map(51) to ImmutableListMultimap", "Move SimpleType: String(76) into ParameterizedType: ImmutableListMultimap<String,String>(50) at 2", "Update SimpleName: Map(50) to ImmutableListMultimap", "Update ParameterizedType: Map<String,List<String>>(78) to ImmutableListMultimap.Builder<String,String>", "Insert MethodInvocation(291) into ReturnStatement(292) at 0", "Update SimpleType: List(74) to ImmutableListMultimap.Builder", "Move SimpleType: List(74) into ParameterizedType: ImmutableListMultimap.Builder<String,String>(66) at 0", "Move SimpleType: String(57) into ParameterizedType: ImmutableListMultimap.Builder<String,String>(66) at 1", "Insert MethodInvocation(70) into VariableDeclarationFragment(71) at 1", "Insert SimpleName: abstractMethods(289) into MethodInvocation(291) at 0", "Insert SimpleName: build(290) into MethodInvocation(291) at 1", "Insert QualifiedName: ImmutableListMultimap.Builder(60) into SimpleType: ImmutableListMultimap.Builder(61) at 0", "Insert SimpleName: ImmutableListMultimap(68) into MethodInvocation(70) at 0", "Insert SimpleName: builder(69) into MethodInvocation(70) at 1", "Insert IfStatement(282) into Block(283) at 0", "Move InfixExpression: ||(255) into IfStatement(282) at 0", "Move Block(262) into IfStatement(282) at 1", "Move IfStatement(333) into IfStatement(282) at 2", "Move MethodInvocation(266) into IfStatement(281) at 0", "Move Block(271) into IfStatement(281) at 1", "Insert IfStatement(280) into IfStatement(281) at 2", "Move MethodInvocation(275) into IfStatement(280) at 0", "Move Block(326) into IfStatement(280) at 1", "Move ExpressionStatement(331) into Block(279) at 2", "Move InfixExpression: &&(284) into IfStatement(274) at 0", "Move MethodInvocation(295) into MethodInvocation(271) at 2", "Update SimpleName: classStack(313) to previousToken", "Move SimpleName: classStack(313) into MethodInvocation(271) at 3", "Delete QualifiedName: java.util.ArrayList(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.util.HashMap(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: java.util.List(10)", "Delete ImportDeclaration(11)", "Delete SimpleName: List(54)", "Delete SimpleType: List(55)", "Delete ParameterizedType: List<String>(58)", "Delete SimpleName: List(73)", "Delete SimpleName: Map(69)", "Delete SimpleType: Map(70)", "Delete ParameterizedType: List<String>(77)", "Delete SimpleName: HashMap(80)", "Delete SimpleType: HashMap(81)", "Delete SimpleName: String(82)", "Delete SimpleType: String(83)", "Delete SimpleName: List(84)", "Delete SimpleType: List(85)", "Delete SimpleName: String(86)", "Delete SimpleType: String(87)", "Delete ParameterizedType: List<String>(88)", "Delete ParameterizedType: HashMap<String,List<String>>(89)", "Delete ClassInstanceCreation(90)", "Delete SimpleName: List(285)", "Delete SimpleType: List(286)", "Delete SimpleName: String(287)", "Delete SimpleType: String(288)", "Delete ParameterizedType: List<String>(289)", "Delete SimpleName: methods(290)", "Delete SimpleName: abstractMethods(291)", "Delete SimpleName: get(292)", "Delete MethodInvocation(296)", "Delete VariableDeclarationFragment(297)", "Delete VariableDeclarationStatement(298)", "Delete SimpleName: methods(299)", "Delete NullLiteral(300)", "Delete InfixExpression: ==(301)", "Delete SimpleName: methods(302)", "Delete SimpleName: ArrayList(303)", "Delete SimpleType: ArrayList(304)", "Delete SimpleName: String(305)", "Delete SimpleType: String(306)", "Delete ParameterizedType: ArrayList<String>(307)", "Delete ClassInstanceCreation(308)", "Delete Assignment: =(309)", "Delete ExpressionStatement(310)", "Delete SimpleName: getLast(314)", "Delete MethodInvocation(315)", "Delete SimpleName: methods(316)", "Delete SimpleName: methods(321)", "Delete SimpleName: add(322)", "Delete SimpleName: previousToken(323)", "Delete MethodInvocation(324)", "Delete ExpressionStatement(325)", "Delete IfStatement(327)", "Delete Block(332)", "Delete IfStatement(334)", "Delete IfStatement(335)", "Delete SimpleName: abstractMethods(342)"]}}, {"AbstractMethodLister_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 1"]}, {"root": "UPDATE from java.util.List to com.google.common.collect.ImmutableList", "operations": ["UPD QualifiedName: java.util.List from java.util.List to com.google.common.collect.ImmutableList"]}, {"root": "UPDATE from List<String> to ImmutableList<String>", "operations": ["UPD ParameterizedType: List<String> from List<String> to ImmutableList<String>", "UPD ParameterizedType: List<String> from List<String> to ImmutableList<String>"]}, {"root": "UPDATE from List to ImmutableList", "operations": ["UPD SimpleType: List from List to ImmutableList", "UPD SimpleName: List from List to ImmutableList", "UPD SimpleName: List from List to ImmutableList", "UPD SimpleType: List from List to ImmutableList"]}, {"root": "UPDATE from List<String> to ImmutableList.Builder<String>", "operations": ["UPD ParameterizedType: List<String> from List<String> to ImmutableList.Builder<String>"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS QualifiedName: classVisitor.abstractNoArgMethods to MethodInvocation at 0", "INS SimpleName: build to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "UPDATE from List to ImmutableList.Builder", "operations": ["UPD SimpleType: List from List to ImmutableList.Builder"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: builder to MethodInvocation at 1", "INS SimpleName: ImmutableList to MethodInvocation at 0"]}, {"root": "INS QualifiedName: ImmutableList.Builder to SimpleType: List at 0", "operations": ["INS QualifiedName: ImmutableList.Builder to SimpleType: List at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.ArrayList"]}, {"root": "DEL QualifiedName: classVisitor.abstractNoArgMethods", "operations": ["DEL QualifiedName: classVisitor.abstractNoArgMethods"]}, {"root": "DEL SimpleName: List", "operations": ["DEL SimpleName: List"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: String", "DEL SimpleName: ArrayList", "DEL SimpleType: ArrayList", "DEL ClassInstanceCreation", "DEL SimpleType: String", "DEL ParameterizedType: ArrayList<String>"]}]}}, {"AbstractMethodLister_diff": {"operations": ["Move ImportDeclaration(19) into CompilationUnit(189) at 1", "Update QualifiedName: java.util.List(18) to com.google.common.collect.ImmutableList", "Update ParameterizedType: List<String>(50) to ImmutableList<String>", "Update ParameterizedType: List<String>(75) to ImmutableList<String>", "Update SimpleType: List(47) to ImmutableList", "Update SimpleType: List(72) to ImmutableList", "Update ParameterizedType: List<String>(117) to ImmutableList.Builder<String>", "Update SimpleName: List(46) to ImmutableList", "Update SimpleName: List(71) to ImmutableList", "Insert MethodInvocation(102) into ReturnStatement(103) at 0", "Update SimpleType: List(114) to ImmutableList.Builder", "Insert MethodInvocation(121) into VariableDeclarationFragment(122) at 1", "Insert QualifiedName: classVisitor.abstractNoArgMethods(100) into MethodInvocation(102) at 0", "Insert SimpleName: build(101) into MethodInvocation(102) at 1", "Insert QualifiedName: ImmutableList.Builder(113) into SimpleType: ImmutableList.Builder(114) at 0", "Insert SimpleName: ImmutableList(119) into MethodInvocation(121) at 0", "Insert SimpleName: builder(120) into MethodInvocation(121) at 1", "Delete QualifiedName: java.util.ArrayList(16)", "Delete ImportDeclaration(17)", "Delete QualifiedName: classVisitor.abstractNoArgMethods(102)", "Delete SimpleName: List(113)", "Delete SimpleName: ArrayList(119)", "Delete SimpleType: ArrayList(120)", "Delete SimpleName: String(121)", "Delete SimpleType: String(122)", "Delete ParameterizedType: ArrayList<String>(123)", "Delete ClassInstanceCreation(124)"]}}, {"AutoValueProcessor_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 5", "MOV ImportDeclaration to CompilationUnit at 7", "MOV ImportDeclaration to CompilationUnit at 7"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: com.google.common.base.Function to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: com.google.common.base.Functions to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS ImportDeclaration to CompilationUnit at 6", "INS QualifiedName: com.google.common.base.Throwables to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: com.google.common.collect.ImmutableList to ImportDeclaration at 0"]}, {"root": "UPDATE from java.io.PrintWriter to com.google.common.base.Joiner", "operations": ["UPD QualifiedName: java.io.PrintWriter from java.io.PrintWriter to com.google.common.base.Joiner"]}, {"root": "UPDATE from java.io.StringWriter to com.google.common.collect.FluentIterable", "operations": ["UPD QualifiedName: java.io.StringWriter from java.io.StringWriter to com.google.common.collect.FluentIterable"]}, {"root": "UPDATE from java.util.Collections to com.google.common.collect.ImmutableSet", "operations": ["UPD QualifiedName: java.util.Collections from java.util.Collections to com.google.common.collect.ImmutableSet"]}, {"root": "INS EnumDeclaration to TypeDeclaration: class at 35", "operations": ["INS SimpleType: Function to ParameterizedType: Function<Element,String> at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: Element to ParameterizedType: Function<Element,String> at 1", "INS SimpleType: Element to SingleVariableDeclaration at 0", "INS SimpleName: element to MethodInvocation at 0", "INS ParameterizedType: Function<Element,String> to EnumDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS Modifier: private to EnumDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: Element to SimpleType: Element at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Function to SimpleType: Function at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: INSTANCE to EnumConstantDeclaration at 0", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS SimpleName: element to SingleVariableDeclaration at 1", "INS ReturnStatement to Block at 0", "INS EnumConstantDeclaration to EnumDeclaration at 3", "INS MethodDeclaration to EnumDeclaration at 4", "INS Block to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS EnumDeclaration to TypeDeclaration: class at 35", "INS SimpleName: Element to SimpleType: Element at 0", "INS SimpleName: ElementNameFunction to EnumDeclaration at 1", "INS SimpleName: apply to MethodDeclaration at 3"]}, {"root": "UPDATE from List<ExecutableElement> to ImmutableList<ExecutableElement>", "operations": ["UPD ParameterizedType: List<ExecutableElement> from List<ExecutableElement> to ImmutableList<ExecutableElement>", "UPD ParameterizedType: List<ExecutableElement> from List<ExecutableElement> to ImmutableList<ExecutableElement>"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: String to MethodDeclaration at 2"]}, {"root": "UPDATE from List to ImmutableList", "operations": ["UPD SimpleType: List from List to ImmutableList", "UPD SimpleName: List from List to ImmutableList", "UPD SimpleType: List from List to ImmutableList", "UPD SimpleName: List from List to ImmutableList"]}, {"root": "MOVE from ParameterizedType: List<ExecutableElement>", "operations": ["MOV SimpleType: ExecutableElement to ParameterizedType: List<ExecutableElement> at 1"]}, {"root": "MOVE from ParameterizedType: Function<Element,String>", "operations": ["MOV SimpleType: String to ParameterizedType: Function<Element,String> at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: String to MethodDeclaration at 2"]}, {"root": "UPDATE from List<ExecutableElement> to ImmutableList.Builder<ExecutableElement>", "operations": ["UPD ParameterizedType: List<ExecutableElement> from List<ExecutableElement> to ImmutableList.Builder<ExecutableElement>"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: toImplement to MethodInvocation at 0", "INS SimpleName: build to MethodInvocation at 1"]}, {"root": "UPDATE from Collections to ImmutableSet", "operations": ["UPD SimpleName: Collections from Collections to ImmutableSet"]}, {"root": "UPDATE from singleton to of", "operations": ["UPD SimpleName: singleton from singleton to of"]}, {"root": "UPDATE from List to ImmutableList.Builder", "operations": ["UPD SimpleType: List from List to ImmutableList.Builder"]}, {"root": "MOVE from ParameterizedType: List<ExecutableElement>", "operations": ["MOV SimpleType: ExecutableElement to ParameterizedType: List<ExecutableElement> at 1"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: builder to MethodInvocation at 1", "INS SimpleName: ImmutableList to MethodInvocation at 0"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS SimpleName: from to MethodInvocation at 1", "INS StringLiteral: \"<\" to InfixExpression: + at 0", "INS InfixExpression: + to ReturnStatement at 0", "INS MethodInvocation to InfixExpression: + at 1", "INS QualifiedName: ElementNameFunction.INSTANCE to MethodInvocation at 2", "INS SimpleName: transform to MethodInvocation at 1", "INS SimpleName: FluentIterable to MethodInvocation at 0", "INS SimpleName: typeParameters to MethodInvocation at 2", "INS SimpleName: join to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS StringLiteral: \", \" to MethodInvocation at 2", "INS ReturnStatement to Block at 0"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: join to MethodInvocation at 1", "INS SimpleName: Functions to MethodInvocation at 0", "INS StringLiteral: \"?\" to MethodInvocation at 2", "INS InfixExpression: + to ReturnStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: Joiner to MethodInvocation at 0", "INS SimpleName: FluentIterable to MethodInvocation at 0", "INS SimpleName: constant to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: + at 1", "INS MethodInvocation to MethodInvocation at 0", "INS StringLiteral: \", \" to MethodInvocation at 2", "INS SimpleName: on to MethodInvocation at 1", "INS SimpleName: from to MethodInvocation at 1", "INS StringLiteral: \"<\" to InfixExpression: + at 0", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "INS QualifiedName: ImmutableList.Builder to SimpleType: List at 0", "operations": ["INS QualifiedName: ImmutableList.Builder to SimpleType: List at 0"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV StringLiteral: \">\" to InfixExpression: + at 2"]}, {"root": "MOVE from InfixExpression: +", "operations": ["MOV StringLiteral: \">\" to InfixExpression: + at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: trace to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from typeParameter to Joiner", "operations": ["UPD SimpleName: typeParameter from typeParameter to Joiner"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: typeParameter to MethodInvocation at 0", "MOV SimpleName: getSimpleName to MethodInvocation at 1"]}, {"root": "UPDATE from getSimpleName to on", "operations": ["UPD SimpleName: getSimpleName from getSimpleName to on"]}, {"root": "UPDATE from size to transform", "operations": ["UPD SimpleName: size from size to transform"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: typeParameters to MethodInvocation at 2", "MOV SimpleName: size to MethodInvocation at 1"]}, {"root": "UPDATE from e to Throwables", "operations": ["UPD SimpleName: e from e to Throwables"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: e to MethodInvocation at 0", "MOV SimpleName: printWriter to MethodInvocation at 2", "MOV SimpleName: printStackTrace to MethodInvocation at 1"]}, {"root": "UPDATE from printStackTrace to getStackTraceAsString", "operations": ["UPD SimpleName: printStackTrace from printStackTrace to getStackTraceAsString"]}, {"root": "UPDATE from printWriter to e", "operations": ["UPD SimpleName: printWriter from printWriter to e"]}, {"root": "UPDATE from writer to trace", "operations": ["UPD SimpleName: writer from writer to trace"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: StringWriter", "DEL SimpleName: writer", "DEL ClassInstanceCreation", "DEL SimpleName: StringWriter", "DEL SimpleType: StringWriter", "DEL SimpleType: StringWriter", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL ClassInstanceCreation", "DEL SimpleName: PrintWriter", "DEL SimpleType: PrintWriter", "DEL VariableDeclarationFragment", "DEL SimpleName: printWriter", "DEL SimpleType: PrintWriter", "DEL SimpleName: writer", "DEL SimpleName: PrintWriter"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: flush", "DEL SimpleName: printWriter", "DEL MethodInvocation", "DEL ExpressionStatement"]}, {"root": "DEL SimpleName: List", "operations": ["DEL SimpleName: List"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: ArrayList", "DEL ClassInstanceCreation", "DEL SimpleName: ArrayList", "DEL ParameterizedType: ArrayList<ExecutableElement>", "DEL SimpleType: ExecutableElement", "DEL SimpleName: ExecutableElement"]}, {"root": "DEL SimpleName: toImplement", "operations": ["DEL SimpleName: toImplement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: s", "DEL VariableDeclarationFragment", "DEL StringLiteral: \"<\""]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL StringLiteral: \"\"", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: sep"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL SimpleType: TypeParameterElement", "DEL StringLiteral: \", \"", "DEL MethodInvocation", "DEL SimpleName: sep", "DEL EnhancedForStatement", "DEL InfixExpression: +", "DEL Assignment: =", "DEL SimpleName: typeParameter", "DEL Assignment: +=", "DEL SingleVariableDeclaration", "DEL SimpleName: sep", "DEL SimpleName: s", "DEL SimpleName: TypeParameterElement", "DEL ExpressionStatement", "DEL SimpleName: typeParameters", "DEL Block", "DEL ExpressionStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: s", "DEL InfixExpression: +", "DEL ReturnStatement"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL StringLiteral: \"<\"", "DEL SimpleName: s", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: sep", "DEL SimpleName: String", "DEL VariableDeclarationStatement", "DEL StringLiteral: \"\"", "DEL SimpleType: String"]}, {"root": "DEL ForStatement", "operations": ["DEL StringLiteral: \"?\"", "DEL ExpressionStatement", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 0", "DEL PrimitiveType: int", "DEL SimpleName: sep", "DEL InfixExpression: <", "DEL Assignment: +=", "DEL PostfixExpression: ++", "DEL SimpleName: i", "DEL SimpleName: sep", "DEL SimpleName: s", "DEL SimpleName: i", "DEL Block", "DEL VariableDeclarationExpression", "DEL ForStatement", "DEL MethodInvocation", "DEL SimpleName: i", "DEL ExpressionStatement", "DEL StringLiteral: \", \"", "DEL InfixExpression: +"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: s", "DEL InfixExpression: +", "DEL ReturnStatement"]}]}}, {"AutoValueProcessor_diff": {"operations": ["Move ImportDeclaration(7) into CompilationUnit(2138) at 7", "Move ImportDeclaration(11) into CompilationUnit(2138) at 7", "Move ImportDeclaration(25) into CompilationUnit(2138) at 5", "Insert ImportDeclaration(7) into CompilationUnit(2138) at 3", "Insert ImportDeclaration(9) into CompilationUnit(2138) at 4", "Insert ImportDeclaration(13) into CompilationUnit(2138) at 6", "Insert ImportDeclaration(17) into CompilationUnit(2138) at 8", "Insert QualifiedName: com.google.common.base.Function(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: com.google.common.base.Functions(8) into ImportDeclaration(9) at 0", "Update QualifiedName: java.io.PrintWriter(8) to com.google.common.base.Joiner", "Insert QualifiedName: com.google.common.base.Throwables(12) into ImportDeclaration(13) at 0", "Update QualifiedName: java.io.StringWriter(12) to com.google.common.collect.FluentIterable", "Insert QualifiedName: com.google.common.collect.ImmutableList(16) into ImportDeclaration(17) at 0", "Update QualifiedName: java.util.Collections(24) to com.google.common.collect.ImmutableSet", "Insert EnumDeclaration(2026) into TypeDeclaration: class(2137) at 35", "Update ParameterizedType: List<ExecutableElement>(1598) to ImmutableList<ExecutableElement>", "Insert Modifier: private(1997) into EnumDeclaration(2026) at 0", "Insert SimpleName: ElementNameFunction(1998) into EnumDeclaration(2026) at 1", "Insert ParameterizedType: Function<Element,String>(2005) into EnumDeclaration(2026) at 2", "Insert EnumConstantDeclaration(2007) into EnumDeclaration(2026) at 3", "Insert MethodDeclaration(2025) into EnumDeclaration(2026) at 4", "Move SimpleType: String(2041) into MethodDeclaration(2074) at 2", "Update SimpleType: List(1595) to ImmutableList", "Move SimpleType: ExecutableElement(1610) into ParameterizedType: ImmutableList<ExecutableElement>(1589) at 1", "Insert SimpleType: Function(2000) into ParameterizedType: Function<Element,String>(2005) at 0", "Insert SimpleType: Element(2002) into ParameterizedType: Function<Element,String>(2005) at 1", "Move SimpleType: String(2101) into ParameterizedType: Function<Element,String>(2005) at 2", "Insert SimpleName: INSTANCE(2006) into EnumConstantDeclaration(2007) at 0", "Insert MarkerAnnotation(2009) into MethodDeclaration(2025) at 0", "Insert Modifier: public(2010) into MethodDeclaration(2025) at 1", "Move SimpleType: String(2010) into MethodDeclaration(2025) at 2", "Insert SimpleName: apply(2013) into MethodDeclaration(2025) at 3", "Insert SingleVariableDeclaration(2017) into MethodDeclaration(2025) at 4", "Insert Block(2024) into MethodDeclaration(2025) at 5", "Update ParameterizedType: List<ExecutableElement>(1190) to ImmutableList<ExecutableElement>", "Update SimpleName: List(1594) to ImmutableList", "Update ParameterizedType: List<ExecutableElement>(1611) to ImmutableList.Builder<ExecutableElement>", "Insert MethodInvocation(1690) into ReturnStatement(1691) at 0", "Insert SimpleName: Function(1999) into SimpleType: Function(2000) at 0", "Insert SimpleName: Element(2001) into SimpleType: Element(2002) at 0", "Insert SimpleName: Override(2008) into MarkerAnnotation(2009) at 0", "Insert SimpleType: Element(2015) into SingleVariableDeclaration(2017) at 0", "Insert SimpleName: element(2016) into SingleVariableDeclaration(2017) at 1", "Insert ReturnStatement(2023) into Block(2024) at 0", "Update SimpleName: Collections(110) to ImmutableSet", "Update SimpleName: singleton(111) to of", "Update SimpleType: List(1187) to ImmutableList", "Update SimpleType: List(1608) to ImmutableList.Builder", "Move SimpleType: ExecutableElement(1597) into ParameterizedType: ImmutableList.Builder<ExecutableElement>(1602) at 1", "Insert MethodInvocation(1606) into VariableDeclarationFragment(1607) at 1", "Insert SimpleName: toImplement(1688) into MethodInvocation(1690) at 0", "Insert SimpleName: build(1689) into MethodInvocation(1690) at 1", "Insert SimpleName: Element(2014) into SimpleType: Element(2015) at 0", "Insert MethodInvocation(2022) into ReturnStatement(2023) at 0", "Insert ReturnStatement(2070) into Block(2071) at 0", "Insert ReturnStatement(2121) into Block(2122) at 0", "Update SimpleName: List(1186) to ImmutableList", "Insert QualifiedName: ImmutableList.Builder(1598) into SimpleType: ImmutableList.Builder(1599) at 0", "Insert SimpleName: ImmutableList(1604) into MethodInvocation(1606) at 0", "Insert SimpleName: builder(1605) into MethodInvocation(1606) at 1", "Insert MethodInvocation(2020) into MethodInvocation(2022) at 0", "Insert SimpleName: toString(2021) into MethodInvocation(2022) at 1", "Insert InfixExpression: +(2069) into ReturnStatement(2070) at 0", "Insert InfixExpression: +(2120) into ReturnStatement(2121) at 0", "Insert SimpleName: element(2018) into MethodInvocation(2020) at 0", "Insert SimpleName: getSimpleName(2019) into MethodInvocation(2020) at 1", "Insert StringLiteral: \"<\"(2054) into InfixExpression: +(2069) at 0", "Insert MethodInvocation(2067) into InfixExpression: +(2069) at 1", "Move StringLiteral: \">\"(2066) into InfixExpression: +(2069) at 2", "Insert StringLiteral: \"<\"(2102) into InfixExpression: +(2120) at 0", "Insert MethodInvocation(2118) into InfixExpression: +(2120) at 1", "Move StringLiteral: \">\"(2137) into InfixExpression: +(2120) at 2", "Insert VariableDeclarationStatement(359) into Block(367) at 0", "Insert MethodInvocation(2061) into MethodInvocation(2067) at 0", "Insert SimpleName: join(2062) into MethodInvocation(2067) at 1", "Insert MethodInvocation(2066) into MethodInvocation(2067) at 2", "Insert MethodInvocation(2112) into MethodInvocation(2118) at 0", "Insert SimpleName: join(2113) into MethodInvocation(2118) at 1", "Insert MethodInvocation(2117) into MethodInvocation(2118) at 2", "Move SimpleType: String(2035) into VariableDeclarationStatement(359) at 0", "Insert VariableDeclarationFragment(358) into VariableDeclarationStatement(359) at 1", "Insert MethodInvocation(2058) into MethodInvocation(2061) at 0", "Insert SimpleName: transform(2059) into MethodInvocation(2061) at 1", "Insert QualifiedName: ElementNameFunction.INSTANCE(2060) into MethodInvocation(2061) at 2", "Update SimpleName: typeParameter(2053) to Joiner", "Move SimpleName: typeParameter(2053) into MethodInvocation(2066) at 0", "Update SimpleName: getSimpleName(2054) to on", "Move SimpleName: getSimpleName(2054) into MethodInvocation(2066) at 1", "Insert StringLiteral: \", \"(2065) into MethodInvocation(2066) at 2", "Insert MethodInvocation(2106) into MethodInvocation(2112) at 0", "Update SimpleName: size(2119) to transform", "Move SimpleName: size(2119) into MethodInvocation(2112) at 1", "Insert MethodInvocation(2111) into MethodInvocation(2112) at 2", "Insert SimpleName: Joiner(2114) into MethodInvocation(2117) at 0", "Insert SimpleName: on(2115) into MethodInvocation(2117) at 1", "Insert StringLiteral: \", \"(2116) into MethodInvocation(2117) at 2", "Insert SimpleName: trace(353) into VariableDeclarationFragment(358) at 0", "Insert MethodInvocation(357) into VariableDeclarationFragment(358) at 1", "Insert SimpleName: FluentIterable(2055) into MethodInvocation(2058) at 0", "Insert SimpleName: from(2056) into MethodInvocation(2058) at 1", "Insert SimpleName: typeParameters(2057) into MethodInvocation(2058) at 2", "Insert SimpleName: FluentIterable(2103) into MethodInvocation(2106) at 0", "Insert SimpleName: from(2104) into MethodInvocation(2106) at 1", "Move SimpleName: typeParameters(2118) into MethodInvocation(2106) at 2", "Insert SimpleName: Functions(2108) into MethodInvocation(2111) at 0", "Insert SimpleName: constant(2109) into MethodInvocation(2111) at 1", "Insert StringLiteral: \"?\"(2110) into MethodInvocation(2111) at 2", "Update SimpleName: e(360) to Throwables", "Move SimpleName: e(360) into MethodInvocation(357) at 0", "Update SimpleName: printStackTrace(361) to getStackTraceAsString", "Move SimpleName: printStackTrace(361) into MethodInvocation(357) at 1", "Update SimpleName: printWriter(362) to e", "Move SimpleName: printWriter(362) into MethodInvocation(357) at 2", "Update SimpleName: writer(371) to trace", "Delete SimpleName: StringWriter(343)", "Delete SimpleType: StringWriter(344)", "Delete SimpleName: writer(345)", "Delete SimpleName: StringWriter(346)", "Delete SimpleType: StringWriter(347)", "Delete ClassInstanceCreation(348)", "Delete VariableDeclarationFragment(349)", "Delete VariableDeclarationStatement(350)", "Delete SimpleName: PrintWriter(351)", "Delete SimpleType: PrintWriter(352)", "Delete SimpleName: printWriter(353)", "Delete SimpleName: PrintWriter(354)", "Delete SimpleType: PrintWriter(355)", "Delete SimpleName: writer(356)", "Delete ClassInstanceCreation(357)", "Delete VariableDeclarationFragment(358)", "Delete VariableDeclarationStatement(359)", "Delete MethodInvocation(363)", "Delete ExpressionStatement(364)", "Delete SimpleName: printWriter(365)", "Delete SimpleName: flush(366)", "Delete MethodInvocation(367)", "Delete ExpressionStatement(368)", "Delete SimpleName: List(1607)", "Delete SimpleName: ArrayList(1613)", "Delete SimpleType: ArrayList(1614)", "Delete SimpleName: ExecutableElement(1615)", "Delete SimpleType: ExecutableElement(1616)", "Delete ParameterizedType: ArrayList<ExecutableElement>(1617)", "Delete ClassInstanceCreation(1618)", "Delete SimpleName: toImplement(1700)", "Delete SimpleName: s(2036)", "Delete StringLiteral: \"<\"(2037)", "Delete VariableDeclarationFragment(2038)", "Delete VariableDeclarationStatement(2039)", "Delete SimpleName: sep(2042)", "Delete StringLiteral: \"\"(2043)", "Delete VariableDeclarationFragment(2044)", "Delete VariableDeclarationStatement(2045)", "Delete SimpleName: TypeParameterElement(2046)", "Delete SimpleType: TypeParameterElement(2047)", "Delete SimpleName: typeParameter(2048)", "Delete SingleVariableDeclaration(2049)", "Delete SimpleName: typeParameters(2050)", "Delete SimpleName: s(2051)", "Delete SimpleName: sep(2052)", "Delete MethodInvocation(2055)", "Delete InfixExpression: +(2056)", "Delete Assignment: +=(2057)", "Delete ExpressionStatement(2058)", "Delete SimpleName: sep(2059)", "Delete StringLiteral: \", \"(2060)", "Delete Assignment: =(2061)", "Delete ExpressionStatement(2062)", "Delete Block(2063)", "Delete EnhancedForStatement(2064)", "Delete SimpleName: s(2065)", "Delete InfixExpression: +(2067)", "Delete ReturnStatement(2068)", "Delete SimpleName: s(2102)", "Delete StringLiteral: \"<\"(2103)", "Delete VariableDeclarationFragment(2104)", "Delete VariableDeclarationStatement(2105)", "Delete SimpleName: String(2106)", "Delete SimpleType: String(2107)", "Delete SimpleName: sep(2108)", "Delete StringLiteral: \"\"(2109)", "Delete VariableDeclarationFragment(2110)", "Delete VariableDeclarationStatement(2111)", "Delete PrimitiveType: int(2112)", "Delete SimpleName: i(2113)", "Delete NumberLiteral: 0(2114)", "Delete VariableDeclarationFragment(2115)", "Delete VariableDeclarationExpression(2116)", "Delete SimpleName: i(2117)", "Delete MethodInvocation(2120)", "Delete InfixExpression: <(2121)", "Delete SimpleName: i(2122)", "Delete PostfixExpression: ++(2123)", "Delete SimpleName: s(2124)", "Delete SimpleName: sep(2125)", "Delete StringLiteral: \"?\"(2126)", "Delete InfixExpression: +(2127)", "Delete Assignment: +=(2128)", "Delete ExpressionStatement(2129)", "Delete SimpleName: sep(2130)", "Delete StringLiteral: \", \"(2131)", "Delete Assignment: =(2132)", "Delete ExpressionStatement(2133)", "Delete Block(2134)", "Delete ForStatement(2135)", "Delete SimpleName: s(2136)", "Delete InfixExpression: +(2138)", "Delete ReturnStatement(2139)"]}}, {"EclipseHack_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: com.google.common.collect.ImmutableList to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "UPDATE from java.util.Map to com.google.common.collect.ImmutableListMultimap", "operations": ["UPD QualifiedName: java.util.Map from java.util.Map to com.google.common.collect.ImmutableListMultimap"]}, {"root": "UPDATE from List<String> to ImmutableList<String>", "operations": ["UPD ParameterizedType: List<String> from List<String> to ImmutableList<String>", "UPD ParameterizedType: List<String> from List<String> to ImmutableList<String>", "UPD ParameterizedType: List<String> from List<String> to ImmutableList<String>", "UPD ParameterizedType: List<String> from List<String> to ImmutableList<String>"]}, {"root": "UPDATE from List to ImmutableList", "operations": ["UPD SimpleType: List from List to ImmutableList", "UPD SimpleType: List from List to ImmutableList", "UPD SimpleName: List from List to ImmutableList", "UPD SimpleName: Collections from Collections to ImmutableList", "UPD SimpleName: List from List to ImmutableList", "UPD SimpleType: List from List to ImmutableList", "UPD SimpleName: List from List to ImmutableList", "UPD SimpleName: List from List to ImmutableList", "UPD SimpleType: List from List to ImmutableList"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 5"]}, {"root": "UPDATE from Map<String,List<String>> to ImmutableListMultimap<String,String>", "operations": ["UPD ParameterizedType: Map<String,List<String>> from Map<String,List<String>> to ImmutableListMultimap<String,String>"]}, {"root": "UPDATE from Map to ImmutableListMultimap", "operations": ["UPD SimpleType: Map from Map to ImmutableListMultimap", "UPD SimpleName: Map from Map to ImmutableListMultimap"]}, {"root": "MOVE from ParameterizedType: Map<String,List<String>>", "operations": ["MOV SimpleType: String to ParameterizedType: Map<String,List<String>> at 2"]}, {"root": "UPDATE from emptyList to of", "operations": ["UPD SimpleName: emptyList from emptyList to of"]}, {"root": "DEL ParameterizedType: List<String>", "operations": ["DEL ParameterizedType: List<String>", "DEL SimpleType: List", "DEL SimpleName: List"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: className", "DEL Block", "DEL SimpleName: emptyList", "DEL IfStatement", "DEL Block", "DEL SimpleName: methodOrders", "DEL MethodInvocation", "DEL SimpleName: containsKey", "DEL ReturnStatement", "DEL SimpleName: Collections", "DEL MethodInvocation"]}]}}, {"EclipseHack_diff": {"operations": ["Move ImportDeclaration(27) into CompilationUnit(823) at 2", "Insert ImportDeclaration(5) into CompilationUnit(823) at 2", "Insert QualifiedName: com.google.common.collect.ImmutableList(4) into ImportDeclaration(5) at 0", "Update QualifiedName: java.util.Map(26) to com.google.common.collect.ImmutableListMultimap", "Update ParameterizedType: List<String>(572) to ImmutableList<String>", "Update ParameterizedType: List<String>(644) to ImmutableList<String>", "Update ParameterizedType: List<String>(782) to ImmutableList<String>", "Update ParameterizedType: List<String>(211) to ImmutableList<String>", "Update SimpleType: List(569) to ImmutableList", "Update SimpleType: List(641) to ImmutableList", "Update SimpleType: List(779) to ImmutableList", "Update SimpleType: List(208) to ImmutableList", "Update SimpleName: List(568) to ImmutableList", "Update SimpleName: List(640) to ImmutableList", "Update SimpleName: List(778) to ImmutableList", "Update SimpleName: List(207) to ImmutableList", "Move ReturnStatement(733) into Block(729) at 5", "Update ParameterizedType: Map<String,List<String>>(716) to ImmutableListMultimap<String,String>", "Update SimpleType: Map(708) to ImmutableListMultimap", "Move SimpleType: String(714) into ParameterizedType: ImmutableListMultimap<String,String>(715) at 2", "Update SimpleName: Collections(664) to ImmutableList", "Update SimpleName: emptyList(665) to of", "Update SimpleName: Map(707) to ImmutableListMultimap", "Delete SimpleName: List(711)", "Delete SimpleType: List(712)", "Delete ParameterizedType: List<String>(715)", "Delete SimpleName: methodOrders(725)", "Delete SimpleName: containsKey(726)", "Delete SimpleName: className(727)", "Delete MethodInvocation(728)", "Delete Block(734)", "Delete SimpleName: Collections(735)", "Delete SimpleName: emptyList(736)", "Delete MethodInvocation(737)", "Delete ReturnStatement(738)", "Delete Block(739)", "Delete IfStatement(740)"]}}, {"TemplateVars_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 1"]}, {"root": "UPDATE from java.util.List to com.google.common.collect.ImmutableList", "operations": ["UPD QualifiedName: java.util.List from java.util.List to com.google.common.collect.ImmutableList"]}, {"root": "UPDATE from List<Field> to ImmutableList<Field>", "operations": ["UPD ParameterizedType: List<Field> from List<Field> to ImmutableList<Field>"]}, {"root": "UPDATE from List to ImmutableList", "operations": ["UPD SimpleName: List from List to ImmutableList", "UPD SimpleType: List from List to ImmutableList"]}, {"root": "UPDATE from List<Field> to ImmutableList.Builder<Field>", "operations": ["UPD ParameterizedType: List<Field> from List<Field> to ImmutableList.Builder<Field>"]}, {"root": "UPDATE from List to ImmutableList.Builder", "operations": ["UPD SimpleType: List from List to ImmutableList.Builder"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: builder to MethodInvocation at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: ImmutableList to MethodInvocation at 0"]}, {"root": "INS QualifiedName: ImmutableList.Builder to SimpleType: List at 0", "operations": ["INS QualifiedName: ImmutableList.Builder to SimpleType: List at 0"]}, {"root": "UPDATE from Collections to fields", "operations": ["UPD SimpleName: Collections from Collections to fields"]}, {"root": "UPDATE from unmodifiableList to build", "operations": ["UPD SimpleName: unmodifiableList from unmodifiableList to build"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.ArrayList", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.Collections"]}, {"root": "DEL SimpleName: List", "operations": ["DEL SimpleName: List"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: ArrayList", "DEL SimpleName: Field", "DEL SimpleType: Field", "DEL ClassInstanceCreation", "DEL SimpleName: ArrayList", "DEL ParameterizedType: ArrayList<Field>"]}, {"root": "DEL SimpleName: fields", "operations": ["DEL SimpleName: fields"]}]}}, {"TemplateVars_diff": {"operations": ["Move ImportDeclaration(31) into CompilationUnit(502) at 1", "Update QualifiedName: java.util.List(30) to com.google.common.collect.ImmutableList", "Update ParameterizedType: List<Field>(122) to ImmutableList<Field>", "Update SimpleType: List(119) to ImmutableList", "Update SimpleName: List(118) to ImmutableList", "Update ParameterizedType: List<Field>(146) to ImmutableList.Builder<Field>", "Update SimpleType: List(143) to ImmutableList.Builder", "Insert MethodInvocation(146) into VariableDeclarationFragment(147) at 1", "Insert QualifiedName: ImmutableList.Builder(138) into SimpleType: ImmutableList.Builder(139) at 0", "Insert SimpleName: ImmutableList(144) into MethodInvocation(146) at 0", "Insert SimpleName: builder(145) into MethodInvocation(146) at 1", "Update SimpleName: Collections(236) to fields", "Update SimpleName: unmodifiableList(237) to build", "Delete QualifiedName: java.util.ArrayList(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: java.util.Collections(28)", "Delete ImportDeclaration(29)", "Delete SimpleName: List(142)", "Delete SimpleName: ArrayList(148)", "Delete SimpleType: ArrayList(149)", "Delete SimpleName: Field(150)", "Delete SimpleType: Field(151)", "Delete ParameterizedType: ArrayList<Field>(152)", "Delete ClassInstanceCreation(153)", "Delete SimpleName: fields(238)"]}}], "commit_stats": [{"total_files": 7, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "True"}]}