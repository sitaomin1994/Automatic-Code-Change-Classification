{"application": "apache-mina-sshd", "csha": "19ef5b11573ce28abc09606485c6838a08de852d", "files": [{"Session_cluster": {"actions": [{"root": "INS EnumDeclaration to TypeDeclaration: interface at 3", "operations": ["INS SimpleName: UserAuth to EnumConstantDeclaration at 0", "INS EnumDeclaration to TypeDeclaration: interface at 3", "INS EnumConstantDeclaration to EnumDeclaration at 7", "INS EnumConstantDeclaration to EnumDeclaration at 8", "INS EnumConstantDeclaration to EnumDeclaration at 6", "INS SimpleName: ReceiveNewKeys to EnumConstantDeclaration at 0", "INS SimpleName: Kex to EnumConstantDeclaration at 0", "INS SimpleName: AuthRequestSent to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 5", "INS EnumConstantDeclaration to EnumDeclaration at 2", "INS Modifier: public to EnumDeclaration at 0", "INS SimpleName: WaitForAuth to EnumConstantDeclaration at 0", "INS SimpleName: State to EnumDeclaration at 1", "INS EnumConstantDeclaration to EnumDeclaration at 9", "INS SimpleName: Running to EnumConstantDeclaration at 0", "INS EnumConstantDeclaration to EnumDeclaration at 3", "INS EnumConstantDeclaration to EnumDeclaration at 4", "INS SimpleName: ReceiveKexInit to EnumConstantDeclaration at 0", "INS SimpleName: Closed to EnumConstantDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: interface at 4", "operations": ["INS MethodDeclaration to TypeDeclaration: interface at 4", "INS TagElement: @see to Javadoc at 2", "INS SimpleName: State to SimpleType: State at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: SessionListener to TagElement: @see at 0", "INS TextElement: Retrieve the state of this session. to TagElement at 0", "INS SimpleName: getState to MethodDeclaration at 2", "INS SimpleType: State to MethodDeclaration at 1", "INS TagElement to Javadoc at 0", "INS TextElement:  the session's state to TagElement: @return at 0", "INS TagElement: @return to Javadoc at 1"]}]}}, {"Session_diff": {"operations": ["Insert EnumDeclaration(33) into TypeDeclaration: interface(288) at 3", "Insert MethodDeclaration(44) into TypeDeclaration: interface(288) at 4", "Insert Modifier: public(15) into EnumDeclaration(33) at 0", "Insert SimpleName: State(16) into EnumDeclaration(33) at 1", "Insert EnumConstantDeclaration(18) into EnumDeclaration(33) at 2", "Insert EnumConstantDeclaration(20) into EnumDeclaration(33) at 3", "Insert EnumConstantDeclaration(22) into EnumDeclaration(33) at 4", "Insert EnumConstantDeclaration(24) into EnumDeclaration(33) at 5", "Insert EnumConstantDeclaration(26) into EnumDeclaration(33) at 6", "Insert EnumConstantDeclaration(28) into EnumDeclaration(33) at 7", "Insert EnumConstantDeclaration(30) into EnumDeclaration(33) at 8", "Insert EnumConstantDeclaration(32) into EnumDeclaration(33) at 9", "Insert Javadoc(40) into MethodDeclaration(44) at 0", "Insert SimpleType: State(42) into MethodDeclaration(44) at 1", "Insert SimpleName: getState(43) into MethodDeclaration(44) at 2", "Insert SimpleName: ReceiveKexInit(17) into EnumConstantDeclaration(18) at 0", "Insert SimpleName: Kex(19) into EnumConstantDeclaration(20) at 0", "Insert SimpleName: ReceiveNewKeys(21) into EnumConstantDeclaration(22) at 0", "Insert SimpleName: AuthRequestSent(23) into EnumConstantDeclaration(24) at 0", "Insert SimpleName: WaitForAuth(25) into EnumConstantDeclaration(26) at 0", "Insert SimpleName: UserAuth(27) into EnumConstantDeclaration(28) at 0", "Insert SimpleName: Running(29) into EnumConstantDeclaration(30) at 0", "Insert SimpleName: Closed(31) into EnumConstantDeclaration(32) at 0", "Insert TagElement(35) into Javadoc(40) at 0", "Insert TagElement: @return(37) into Javadoc(40) at 1", "Insert TagElement: @see(39) into Javadoc(40) at 2", "Insert SimpleName: State(41) into SimpleType: State(42) at 0", "Insert TextElement: Retrieve the state of this session.(34) into TagElement(35) at 0", "Insert TextElement:  the session's state(36) into TagElement: @return(37) at 0", "Insert SimpleName: SessionListener(38) into TagElement: @see(39) at 0"]}}, {"SessionListener_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: interface at 4", "operations": ["INS MethodRef to TagElement: @see at 0", "INS MethodDeclaration to TypeDeclaration: interface at 4", "INS SimpleName: session to SingleVariableDeclaration at 1", "INS TextElement: A session state has changed to TagElement at 0", "INS QualifiedName: org.apache.sshd.common.Session to MethodRef at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: getState to MethodRef at 1", "INS SimpleType: Session to SingleVariableDeclaration at 0", "INS SimpleName: Session to SimpleType: Session at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: session to TagElement: @param at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: sessionChanged to MethodDeclaration at 2", "INS PrimitiveType: void to MethodDeclaration at 1", "INS TagElement: @param to Javadoc at 1", "INS TagElement: @see to Javadoc at 2"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement: @param to Javadoc at 1", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: A new session just been created to TagElement at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: session to TagElement: @param at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement: @param to Javadoc at 1", "INS TagElement to Javadoc at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: session to TagElement: @param at 0", "INS TextElement: A session has been closed to TagElement at 0"]}, {"root": "UPDATE from s to session", "operations": ["UPD SimpleName: s from s to session"]}]}}, {"SessionListener_diff": {"operations": ["Insert MethodDeclaration(36) into TypeDeclaration: interface(49) at 4", "Insert Javadoc(13) into MethodDeclaration(20) at 0", "Insert Javadoc(29) into MethodDeclaration(36) at 0", "Insert PrimitiveType: void(30) into MethodDeclaration(36) at 1", "Insert SimpleName: sessionChanged(31) into MethodDeclaration(36) at 2", "Insert SingleVariableDeclaration(35) into MethodDeclaration(36) at 3", "Insert Javadoc(41) into MethodDeclaration(48) at 0", "Insert TagElement(10) into Javadoc(13) at 0", "Insert TagElement: @param(12) into Javadoc(13) at 1", "Insert TagElement(22) into Javadoc(29) at 0", "Insert TagElement: @param(24) into Javadoc(29) at 1", "Insert TagElement: @see(28) into Javadoc(29) at 2", "Insert SimpleType: Session(33) into SingleVariableDeclaration(35) at 0", "Insert SimpleName: session(34) into SingleVariableDeclaration(35) at 1", "Insert TagElement(38) into Javadoc(41) at 0", "Insert TagElement: @param(40) into Javadoc(41) at 1", "Update SimpleName: s(20) to session", "Insert TextElement: A new session just been created(9) into TagElement(10) at 0", "Insert SimpleName: session(11) into TagElement: @param(12) at 0", "Insert TextElement: A session state has changed(21) into TagElement(22) at 0", "Insert SimpleName: session(23) into TagElement: @param(24) at 0", "Insert MethodRef(27) into TagElement: @see(28) at 0", "Insert SimpleName: Session(32) into SimpleType: Session(33) at 0", "Insert TextElement: A session has been closed(37) into TagElement(38) at 0", "Insert SimpleName: session(39) into TagElement: @param(40) at 0", "Insert QualifiedName: org.apache.sshd.common.Session(25) into MethodRef(27) at 0", "Insert SimpleName: getState(26) into MethodRef(27) at 1"]}}, {"ClientSessionImpl_cluster": {"actions": [{"root": "INS MethodInvocation to SwitchStatement at 0", "operations": ["INS SimpleName: getState to MethodInvocation at 0", "INS MethodInvocation to SwitchStatement at 0"]}, {"root": "INS SuperMethodInvocation to ExpressionStatement at 0", "operations": ["INS SuperMethodInvocation to ExpressionStatement at 0", "INS SimpleName: setState to SuperMethodInvocation at 0", "INS SimpleName: newState to SuperMethodInvocation at 1"]}, {"root": "UPDATE from ClientSessionImpl.State.UserAuth to State.UserAuth", "operations": ["UPD QualifiedName: ClientSessionImpl.State.UserAuth from ClientSessionImpl.State.UserAuth to State.UserAuth", "UPD QualifiedName: ClientSessionImpl.State.UserAuth from ClientSessionImpl.State.UserAuth to State.UserAuth", "UPD QualifiedName: ClientSessionImpl.State.UserAuth from ClientSessionImpl.State.UserAuth to State.UserAuth"]}, {"root": "INS MethodInvocation to InfixExpression: + at 1", "operations": ["INS MethodInvocation to InfixExpression: + at 1", "INS SimpleName: getState to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to InfixExpression: == at 0", "operations": ["INS SimpleName: getState to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: == at 0"]}, {"root": "DEL EnumDeclaration", "operations": ["DEL EnumConstantDeclaration", "DEL SimpleName: ReceiveNewKeys", "DEL SimpleName: UserAuth", "DEL EnumConstantDeclaration", "DEL EnumConstantDeclaration", "DEL EnumConstantDeclaration", "DEL SimpleName: WaitForAuth", "DEL Modifier: public", "DEL SimpleName: Running", "DEL SimpleName: ReceiveKexInit", "DEL SimpleName: Unknown", "DEL EnumConstantDeclaration", "DEL EnumConstantDeclaration", "DEL SimpleName: AuthRequestSent", "DEL SimpleName: Kex", "DEL EnumDeclaration", "DEL EnumConstantDeclaration", "DEL SimpleName: State", "DEL EnumConstantDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL SimpleName: State", "DEL SimpleName: state", "DEL QualifiedName: State.ReceiveKexInit", "DEL SimpleType: State", "DEL FieldDeclaration"]}, {"root": "DEL SimpleName: state", "operations": ["DEL SimpleName: state"]}, {"root": "DEL SimpleName: state", "operations": ["DEL SimpleName: state"]}, {"root": "DEL SimpleName: state", "operations": ["DEL SimpleName: state"]}, {"root": "DEL Assignment: =", "operations": ["DEL Assignment: =", "DEL SimpleName: state", "DEL FieldAccess", "DEL ThisExpression", "DEL SimpleName: newState"]}]}}, {"ClientSessionImpl_diff": {"operations": ["Insert MethodInvocation(1141) into SwitchStatement(1461) at 0", "Insert SimpleName: getState(1140) into MethodInvocation(1141) at 0", "Insert SuperMethodInvocation(1598) into ExpressionStatement(1599) at 0", "Update QualifiedName: ClientSessionImpl.State.UserAuth(311) to State.UserAuth", "Update QualifiedName: ClientSessionImpl.State.UserAuth(443) to State.UserAuth", "Update QualifiedName: ClientSessionImpl.State.UserAuth(575) to State.UserAuth", "Insert SimpleName: setState(1596) into SuperMethodInvocation(1598) at 0", "Insert SimpleName: newState(1597) into SuperMethodInvocation(1598) at 1", "Insert MethodInvocation(1457) into InfixExpression: +(1458) at 1", "Insert SimpleName: getState(1456) into MethodInvocation(1457) at 0", "Insert MethodInvocation(1502) into InfixExpression: ==(1504) at 0", "Insert SimpleName: getState(1501) into MethodInvocation(1502) at 0", "Delete Modifier: public(83)", "Delete SimpleName: State(84)", "Delete SimpleName: ReceiveKexInit(85)", "Delete EnumConstantDeclaration(86)", "Delete SimpleName: Kex(87)", "Delete EnumConstantDeclaration(88)", "Delete SimpleName: ReceiveNewKeys(89)", "Delete EnumConstantDeclaration(90)", "Delete SimpleName: AuthRequestSent(91)", "Delete EnumConstantDeclaration(92)", "Delete SimpleName: WaitForAuth(93)", "Delete EnumConstantDeclaration(94)", "Delete SimpleName: UserAuth(95)", "Delete EnumConstantDeclaration(96)", "Delete SimpleName: Running(97)", "Delete EnumConstantDeclaration(98)", "Delete SimpleName: Unknown(99)", "Delete EnumConstantDeclaration(100)", "Delete EnumDeclaration(101)", "Delete Modifier: private(102)", "Delete SimpleName: State(103)", "Delete SimpleType: State(104)", "Delete SimpleName: state(105)", "Delete QualifiedName: State.ReceiveKexInit(106)", "Delete VariableDeclarationFragment(107)", "Delete FieldDeclaration(108)", "Delete SimpleName: state(1166)", "Delete SimpleName: state(1481)", "Delete SimpleName: state(1525)", "Delete ThisExpression(1619)", "Delete SimpleName: state(1620)", "Delete FieldAccess(1621)", "Delete SimpleName: newState(1622)", "Delete Assignment: =(1623)"]}}, {"AbstractSession_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 47", "operations": ["INS QualifiedName: State.ReceiveKexInit to VariableDeclarationFragment at 1", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleType: State to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 47", "INS SimpleName: state to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: State to SimpleType: State at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 52", "operations": ["INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: getState to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 52", "INS Block to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS SimpleName: state to ReturnStatement at 0", "INS SimpleType: State to MethodDeclaration at 1", "INS SimpleName: State to SimpleType: State at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 53", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: SessionListener to SimpleType: SessionListener at 0", "INS Modifier: protected to MethodDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS ThisExpression to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: setState to MethodDeclaration at 2", "INS SimpleName: State to SimpleType: State at 0", "INS SimpleName: sl to SingleVariableDeclaration at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: l to EnhancedForStatement at 1", "INS SimpleType: SessionListener to ParameterizedType: ArrayList<SessionListener> at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: state to Assignment: = at 1", "INS SimpleName: listeners to ClassInstanceCreation at 1", "INS SimpleName: state to SingleVariableDeclaration at 1", "INS SimpleName: SessionListener to SimpleType: SessionListener at 0", "INS ExpressionStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 53", "INS FieldAccess to Assignment: = at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: SessionListener to SingleVariableDeclaration at 0", "INS ParameterizedType: ArrayList<SessionListener> to ClassInstanceCreation at 0", "INS SimpleName: state to FieldAccess at 1", "INS SimpleName: sl to MethodInvocation at 0", "INS SimpleType: State to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<SessionListener> at 0", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<SessionListener> at 0", "INS EnhancedForStatement to Block at 2", "INS SimpleType: SessionListener to ParameterizedType: ArrayList<SessionListener> at 1", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS SimpleName: SessionListener to SimpleType: SessionListener at 0", "INS VariableDeclarationStatement to Block at 1", "INS ParameterizedType: ArrayList<SessionListener> to VariableDeclarationStatement at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: sessionChanged to MethodInvocation at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: l to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS QualifiedName: State.Closed to Assignment: = at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: state to Assignment: = at 0"]}]}}, {"AbstractSession_diff": {"operations": ["Insert FieldDeclaration(495) into TypeDeclaration: class(4184) at 47", "Insert MethodDeclaration(660) into TypeDeclaration: class(4184) at 52", "Insert MethodDeclaration(703) into TypeDeclaration: class(4184) at 53", "Insert Modifier: private(489) into FieldDeclaration(495) at 0", "Insert SimpleType: State(491) into FieldDeclaration(495) at 1", "Insert VariableDeclarationFragment(494) into FieldDeclaration(495) at 2", "Insert Modifier: public(653) into MethodDeclaration(660) at 0", "Insert SimpleType: State(655) into MethodDeclaration(660) at 1", "Insert SimpleName: getState(656) into MethodDeclaration(660) at 2", "Insert Block(659) into MethodDeclaration(660) at 3", "Insert Modifier: protected(661) into MethodDeclaration(703) at 0", "Insert PrimitiveType: void(662) into MethodDeclaration(703) at 1", "Insert SimpleName: setState(663) into MethodDeclaration(703) at 2", "Insert SingleVariableDeclaration(667) into MethodDeclaration(703) at 3", "Insert Block(702) into MethodDeclaration(703) at 4", "Insert SimpleName: State(490) into SimpleType: State(491) at 0", "Insert SimpleName: state(492) into VariableDeclarationFragment(494) at 0", "Insert QualifiedName: State.ReceiveKexInit(493) into VariableDeclarationFragment(494) at 1", "Insert SimpleName: State(654) into SimpleType: State(655) at 0", "Insert ReturnStatement(658) into Block(659) at 0", "Insert SimpleType: State(665) into SingleVariableDeclaration(667) at 0", "Insert SimpleName: state(666) into SingleVariableDeclaration(667) at 1", "Insert ExpressionStatement(673) into Block(702) at 0", "Insert VariableDeclarationStatement(689) into Block(702) at 1", "Insert EnhancedForStatement(701) into Block(702) at 2", "Insert SimpleName: state(657) into ReturnStatement(658) at 0", "Insert SimpleName: State(664) into SimpleType: State(665) at 0", "Insert Assignment: =(672) into ExpressionStatement(673) at 0", "Insert Modifier: final(674) into VariableDeclarationStatement(689) at 0", "Insert ParameterizedType: ArrayList<SessionListener>(679) into VariableDeclarationStatement(689) at 1", "Insert VariableDeclarationFragment(688) into VariableDeclarationStatement(689) at 2", "Insert SingleVariableDeclaration(693) into EnhancedForStatement(701) at 0", "Insert SimpleName: l(694) into EnhancedForStatement(701) at 1", "Insert Block(700) into EnhancedForStatement(701) at 2", "Insert FieldAccess(670) into Assignment: =(672) at 0", "Insert SimpleName: state(671) into Assignment: =(672) at 1", "Insert SimpleType: ArrayList(676) into ParameterizedType: ArrayList<SessionListener>(679) at 0", "Insert SimpleType: SessionListener(678) into ParameterizedType: ArrayList<SessionListener>(679) at 1", "Insert SimpleName: l(680) into VariableDeclarationFragment(688) at 0", "Insert ClassInstanceCreation(687) into VariableDeclarationFragment(688) at 1", "Insert SimpleType: SessionListener(691) into SingleVariableDeclaration(693) at 0", "Insert SimpleName: sl(692) into SingleVariableDeclaration(693) at 1", "Insert ExpressionStatement(699) into Block(700) at 0", "Insert ThisExpression(668) into FieldAccess(670) at 0", "Insert SimpleName: state(669) into FieldAccess(670) at 1", "Insert SimpleName: ArrayList(675) into SimpleType: ArrayList(676) at 0", "Insert SimpleName: SessionListener(677) into SimpleType: SessionListener(678) at 0", "Insert ParameterizedType: ArrayList<SessionListener>(685) into ClassInstanceCreation(687) at 0", "Insert SimpleName: listeners(686) into ClassInstanceCreation(687) at 1", "Insert SimpleName: SessionListener(690) into SimpleType: SessionListener(691) at 0", "Insert MethodInvocation(698) into ExpressionStatement(699) at 0", "Insert SimpleType: ArrayList(682) into ParameterizedType: ArrayList<SessionListener>(685) at 0", "Insert SimpleType: SessionListener(684) into ParameterizedType: ArrayList<SessionListener>(685) at 1", "Insert SimpleName: sl(695) into MethodInvocation(698) at 0", "Insert SimpleName: sessionChanged(696) into MethodInvocation(698) at 1", "Insert ThisExpression(697) into MethodInvocation(698) at 2", "Insert ExpressionStatement(932) into Block(974) at 1", "Insert SimpleName: ArrayList(681) into SimpleType: ArrayList(682) at 0", "Insert SimpleName: SessionListener(683) into SimpleType: SessionListener(684) at 0", "Insert Assignment: =(931) into ExpressionStatement(932) at 0", "Insert SimpleName: state(929) into Assignment: =(931) at 0", "Insert QualifiedName: State.Closed(930) into Assignment: =(931) at 1"]}}, {"ServerSession_cluster": {"actions": [{"root": "INS MethodInvocation to SwitchStatement at 0", "operations": ["INS SimpleName: getState to MethodInvocation at 0", "INS MethodInvocation to SwitchStatement at 0"]}, {"root": "INS MethodInvocation to InfixExpression: == at 0", "operations": ["INS SimpleName: getState to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: == at 0"]}, {"root": "UPDATE from State.WaitingUserAuth to State.WaitForAuth", "operations": ["UPD QualifiedName: State.WaitingUserAuth from State.WaitingUserAuth to State.WaitForAuth"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS QualifiedName: State.Kex to MethodInvocation at 1", "INS SimpleName: setState to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: setState to MethodInvocation at 0", "INS QualifiedName: State.WaitForAuth to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from WaitingUserAuth to WaitForAuth", "operations": ["UPD SimpleName: WaitingUserAuth from WaitingUserAuth to WaitForAuth"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: setState to MethodInvocation at 0", "INS QualifiedName: State.UserAuth to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: setState to MethodInvocation at 0", "INS QualifiedName: State.ReceiveNewKeys to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS MethodInvocation to InfixExpression: + at 1", "operations": ["INS SimpleName: getState to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS QualifiedName: State.Running to MethodInvocation at 1", "INS SimpleName: setState to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL SimpleName: state", "DEL SimpleName: State", "DEL SimpleType: State", "DEL VariableDeclarationFragment", "DEL QualifiedName: State.ReceiveKexInit", "DEL Modifier: private"]}, {"root": "DEL EnumDeclaration", "operations": ["DEL EnumConstantDeclaration", "DEL EnumConstantDeclaration", "DEL SimpleName: WaitingUserAuth", "DEL Modifier: private", "DEL EnumConstantDeclaration", "DEL SimpleName: Unknown", "DEL EnumConstantDeclaration", "DEL EnumDeclaration", "DEL SimpleName: ReceiveKexInit", "DEL SimpleName: Running", "DEL EnumConstantDeclaration", "DEL SimpleName: UserAuth", "DEL EnumConstantDeclaration", "DEL SimpleName: Kex", "DEL EnumConstantDeclaration", "DEL SimpleName: State", "DEL SimpleName: ReceiveNewKeys"]}, {"root": "DEL SimpleName: state", "operations": ["DEL SimpleName: state"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: state", "DEL Assignment: =", "DEL QualifiedName: State.Kex"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: state", "DEL QualifiedName: State.ReceiveNewKeys", "DEL Assignment: ="]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: state", "DEL QualifiedName: State.WaitingUserAuth", "DEL Assignment: ="]}, {"root": "DEL SimpleName: state", "operations": ["DEL SimpleName: state"]}, {"root": "DEL SimpleName: state", "operations": ["DEL SimpleName: state"]}, {"root": "DEL Assignment: =", "operations": ["DEL QualifiedName: State.UserAuth", "DEL Assignment: =", "DEL SimpleName: state"]}, {"root": "DEL Assignment: =", "operations": ["DEL SimpleName: state", "DEL Assignment: =", "DEL QualifiedName: State.Running"]}]}}, {"ServerSession_diff": {"operations": ["Insert MethodInvocation(432) into SwitchStatement(667) at 0", "Insert MethodInvocation(1186) into InfixExpression: ==(1188) at 0", "Update QualifiedName: State.WaitingUserAuth(1208) to State.WaitForAuth", "Insert SimpleName: getState(431) into MethodInvocation(432) at 0", "Insert MethodInvocation(489) into ExpressionStatement(490) at 0", "Insert MethodInvocation(545) into ExpressionStatement(546) at 0", "Update SimpleName: WaitingUserAuth(574) to WaitForAuth", "Insert SimpleName: getState(1185) into MethodInvocation(1186) at 0", "Insert MethodInvocation(1237) into ExpressionStatement(1238) at 0", "Insert SimpleName: setState(487) into MethodInvocation(489) at 0", "Insert QualifiedName: State.Kex(488) into MethodInvocation(489) at 1", "Insert SimpleName: setState(543) into MethodInvocation(545) at 0", "Insert QualifiedName: State.WaitForAuth(544) into MethodInvocation(545) at 1", "Insert SimpleName: setState(1235) into MethodInvocation(1237) at 0", "Insert QualifiedName: State.UserAuth(1236) into MethodInvocation(1237) at 1", "Insert MethodInvocation(512) into ExpressionStatement(513) at 0", "Insert MethodInvocation(663) into InfixExpression: +(664) at 1", "Insert MethodInvocation(1558) into ExpressionStatement(1559) at 0", "Insert SimpleName: setState(510) into MethodInvocation(512) at 0", "Insert QualifiedName: State.ReceiveNewKeys(511) into MethodInvocation(512) at 1", "Insert SimpleName: getState(662) into MethodInvocation(663) at 0", "Insert SimpleName: setState(1556) into MethodInvocation(1558) at 0", "Insert QualifiedName: State.Running(1557) into MethodInvocation(1558) at 1", "Delete Modifier: private(77)", "Delete SimpleName: State(78)", "Delete SimpleType: State(79)", "Delete SimpleName: state(80)", "Delete QualifiedName: State.ReceiveKexInit(81)", "Delete VariableDeclarationFragment(82)", "Delete FieldDeclaration(83)", "Delete Modifier: private(165)", "Delete SimpleName: State(166)", "Delete SimpleName: ReceiveKexInit(167)", "Delete EnumConstantDeclaration(168)", "Delete SimpleName: Kex(169)", "Delete EnumConstantDeclaration(170)", "Delete SimpleName: ReceiveNewKeys(171)", "Delete EnumConstantDeclaration(172)", "Delete SimpleName: WaitingUserAuth(173)", "Delete EnumConstantDeclaration(174)", "Delete SimpleName: UserAuth(175)", "Delete EnumConstantDeclaration(176)", "Delete SimpleName: Running(177)", "Delete EnumConstantDeclaration(178)", "Delete SimpleName: Unknown(179)", "Delete EnumConstantDeclaration(180)", "Delete EnumDeclaration(181)", "Delete SimpleName: state(455)", "Delete SimpleName: state(510)", "Delete QualifiedName: State.Kex(511)", "Delete Assignment: =(512)", "Delete SimpleName: state(533)", "Delete QualifiedName: State.ReceiveNewKeys(534)", "Delete Assignment: =(535)", "Delete SimpleName: state(566)", "Delete QualifiedName: State.WaitingUserAuth(567)", "Delete Assignment: =(568)", "Delete SimpleName: state(685)", "Delete SimpleName: state(1207)", "Delete SimpleName: state(1256)", "Delete QualifiedName: State.UserAuth(1257)", "Delete Assignment: =(1258)", "Delete SimpleName: state(1577)", "Delete QualifiedName: State.Running(1578)", "Delete Assignment: =(1579)"]}}], "commit_stats": [{"total_files": 5, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}