{"application": "apache-nutch", "csha": "ad9c6dc9979f98a18d50d645f847b00a02066fcd", "files": [{"ProtocolFactory_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 9", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: parts to VariableDeclarationFragment at 0", "INS IfStatement to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS PrimitiveType: boolean to MethodDeclaration at 0", "INS BooleanLiteral: false to ReturnStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: parts to ArrayAccess at 0", "INS Block to ForStatement at 3", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS ReturnStatement to IfStatement at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS Dimension to VariableDeclarationFragment at 1", "INS PostfixExpression: ++ to ForStatement at 2", "INS SimpleName: where to MethodInvocation at 0", "INS InfixExpression: < to ForStatement at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS StringLiteral: \"[, ]\" to MethodInvocation at 2", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS VariableDeclarationStatement to Block at 0", "INS ArrayAccess to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 2", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS Block to MethodDeclaration at 4", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: what to SingleVariableDeclaration at 1", "INS SimpleName: i to InfixExpression: < at 0", "INS SimpleName: where to SingleVariableDeclaration at 1", "INS ForStatement to Block at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: what to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: i to ArrayAccess at 1", "INS ReturnStatement to Block at 2", "INS BooleanLiteral: true to ReturnStatement at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS SimpleName: split to MethodInvocation at 1", "INS QualifiedName: parts.length to InfixExpression: < at 1", "INS SimpleName: contains to MethodDeclaration at 1"]}, {"root": "UPDATE from  plugins.  Protocol plugins should to  plugins. Protocol plugins should define", "operations": ["UPD TextElement:  plugins.  Protocol plugins should from  plugins.  Protocol plugins should to  plugins. Protocol plugins should define"]}, {"root": "UPDATE from define the attribute \"protocolName\" with the name of the protocol that they to the attribute \"protocolName\" with the name of the protocol that they", "operations": ["UPD TextElement: define the attribute \"protocolName\" with the name of the protocol that they from define the attribute \"protocolName\" with the name of the protocol that they to the attribute \"protocolName\" with the name of the protocol that they"]}, {"root": "UPDATE from implement. Configuration object is used for caching. Cache key is to implement. Configuration object is used for caching. Cache key is constructed", "operations": ["UPD TextElement: implement. Configuration object is used for caching. Cache key is from implement. Configuration object is used for caching. Cache key is to implement. Configuration object is used for caching. Cache key is constructed"]}, {"root": "UPDATE from constructed from appending protocol name (eg. http) to to from appending protocol name (eg. http) to constant", "operations": ["UPD TextElement: constructed from appending protocol name (eg. http) to from constructed from appending protocol name (eg. http) to to from appending protocol name (eg. http) to constant"]}, {"root": "UPDATE from  implementation for a url.     to  implementation for a url.", "operations": ["UPD TextElement:  implementation for a url.     from  implementation for a url.     to  implementation for a url."]}, {"root": "UPDATE from  Url String  to Url String", "operations": ["UPD TextElement:  Url String  from  Url String  to Url String"]}, {"root": "UPDATE from  when Protocol can not be found for urlString to when Protocol can not be found for urlString", "operations": ["UPD TextElement:  when Protocol can not be found for urlString from  when Protocol can not be found for urlString to when Protocol can not be found for urlString"]}, {"root": "INS SimpleName: contains to MethodInvocation at 0", "operations": ["INS SimpleName: contains to MethodInvocation at 0"]}, {"root": "DEL TextElement: constant ", "operations": ["DEL TextElement: constant "]}, {"root": "DEL SimpleName: equals", "operations": ["DEL SimpleName: equals"]}]}}, {"ProtocolFactory_diff": {"operations": ["Insert MethodDeclaration(349) into TypeDeclaration: class(350) at 9", "Insert PrimitiveType: boolean(305) into MethodDeclaration(349) at 0", "Insert SimpleName: contains(306) into MethodDeclaration(349) at 1", "Insert SingleVariableDeclaration(310) into MethodDeclaration(349) at 2", "Insert SingleVariableDeclaration(314) into MethodDeclaration(349) at 3", "Insert Block(348) into MethodDeclaration(349) at 4", "Update TextElement:  plugins.  Protocol plugins should(29) to  plugins. Protocol plugins should define", "Update TextElement: define the attribute \"protocolName\" with the name of the protocol that they(30) to the attribute \"protocolName\" with the name of the protocol that they", "Update TextElement: implement. Configuration object is used for caching. Cache key is(31) to implement. Configuration object is used for caching. Cache key is constructed", "Update TextElement: constructed from appending protocol name (eg. http) to(32) to from appending protocol name (eg. http) to constant", "Insert SimpleType: String(308) into SingleVariableDeclaration(310) at 0", "Insert SimpleName: what(309) into SingleVariableDeclaration(310) at 1", "Insert SimpleType: String(312) into SingleVariableDeclaration(314) at 0", "Insert SimpleName: where(313) into SingleVariableDeclaration(314) at 1", "Insert VariableDeclarationStatement(324) into Block(348) at 0", "Insert ForStatement(345) into Block(348) at 1", "Insert ReturnStatement(347) into Block(348) at 2", "Update TextElement:  implementation for a url.    (110) to  implementation for a url.", "Update TextElement:  Url String (113) to Url String", "Update TextElement:  when Protocol can not be found for urlString(117) to when Protocol can not be found for urlString", "Insert SimpleName: String(307) into SimpleType: String(308) at 0", "Insert SimpleName: String(311) into SimpleType: String(312) at 0", "Insert SimpleType: String(316) into VariableDeclarationStatement(324) at 0", "Insert VariableDeclarationFragment(323) into VariableDeclarationStatement(324) at 1", "Insert VariableDeclarationExpression(329) into ForStatement(345) at 0", "Insert InfixExpression: <(332) into ForStatement(345) at 1", "Insert PostfixExpression: ++(334) into ForStatement(345) at 2", "Insert Block(344) into ForStatement(345) at 3", "Insert BooleanLiteral: false(346) into ReturnStatement(347) at 0", "Insert SimpleName: String(315) into SimpleType: String(316) at 0", "Insert SimpleName: parts(317) into VariableDeclarationFragment(323) at 0", "Insert Dimension(318) into VariableDeclarationFragment(323) at 1", "Insert MethodInvocation(322) into VariableDeclarationFragment(323) at 2", "Insert PrimitiveType: int(325) into VariableDeclarationExpression(329) at 0", "Insert VariableDeclarationFragment(328) into VariableDeclarationExpression(329) at 1", "Insert SimpleName: i(330) into InfixExpression: <(332) at 0", "Insert QualifiedName: parts.length(331) into InfixExpression: <(332) at 1", "Insert SimpleName: i(333) into PostfixExpression: ++(334) at 0", "Insert IfStatement(343) into Block(344) at 0", "Insert SimpleName: where(319) into MethodInvocation(322) at 0", "Insert SimpleName: split(320) into MethodInvocation(322) at 1", "Insert StringLiteral: \"[, ]\"(321) into MethodInvocation(322) at 2", "Insert SimpleName: i(326) into VariableDeclarationFragment(328) at 0", "Insert NumberLiteral: 0(327) into VariableDeclarationFragment(328) at 1", "Insert MethodInvocation(340) into IfStatement(343) at 0", "Insert ReturnStatement(342) into IfStatement(343) at 1", "Insert SimpleName: contains(289) into MethodInvocation(295) at 0", "Insert ArrayAccess(337) into MethodInvocation(340) at 0", "Insert SimpleName: equals(338) into MethodInvocation(340) at 1", "Insert SimpleName: what(339) into MethodInvocation(340) at 2", "Insert BooleanLiteral: true(341) into ReturnStatement(342) at 0", "Insert SimpleName: parts(335) into ArrayAccess(337) at 0", "Insert SimpleName: i(336) into ArrayAccess(337) at 1", "Delete TextElement: constant (33)", "Delete SimpleName: equals(291)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}