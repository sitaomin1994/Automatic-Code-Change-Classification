{"application": "google-guava", "csha": "5b19db451f68be2d4707174492ecad58467e6983", "files": [{"ChecksumHashFunction_cluster": {"actions": [{"root": "UPDATE from HashCodes to HashCode", "operations": ["UPD SimpleName: HashCodes from HashCodes to HashCode", "UPD SimpleName: HashCodes from HashCodes to HashCode"]}]}}, {"ChecksumHashFunction_diff": {"operations": ["Update SimpleName: HashCodes(225) to HashCode", "Update SimpleName: HashCodes(233) to HashCode"]}}, {"HashCode_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS ImportDeclaration to CompilationUnit at 1", "INS QualifiedName: com.google.common.base.Preconditions.checkArgument to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: com.google.common.base.Preconditions.checkNotNull to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS ImportDeclaration to CompilationUnit at 3", "INS QualifiedName: com.google.common.base.Preconditions.checkState to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: com.google.common.primitives.UnsignedInts to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: java.io.Serializable to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS TagElement: @code to TagElement at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: hash to ClassInstanceCreation at 1", "INS SimpleName: fromInt to MethodDeclaration at 4", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: hash to SingleVariableDeclaration at 1", "INS TextElement:  15.0 (since 12.0 in HashCodes) to TagElement: @since at 0", "INS SimpleType: HashCode to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS TextElement: are interpreted in little endian order. to TagElement at 3", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: IntHashCode to SimpleType: IntHashCode at 0", "INS Modifier: static to MethodDeclaration at 2", "INS ClassInstanceCreation to ReturnStatement at 0", "INS TagElement: @since to Javadoc at 1", "INS TextElement:  HashCode to TagElement: @code at 0", "INS SimpleName: HashCode to SimpleType: HashCode at 0", "INS TextElement: Creates a 32-bit  to TagElement at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: IntHashCode to ClassInstanceCreation at 0", "INS TextElement:  representation of the given int value. The underlying bytes to TagElement at 2", "INS Block to MethodDeclaration at 6", "INS ReturnStatement to Block at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 12", "operations": ["INS Block to MethodDeclaration at 4", "INS PrimitiveType: byte to CastExpression at 0", "INS PrimitiveType: int to MethodDeclaration at 2", "INS Modifier: final to FieldDeclaration at 0", "INS SimpleName: bits to MethodDeclaration at 3", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 2", "INS PrimitiveType: long to FieldDeclaration at 3", "INS ParenthesizedExpression to CastExpression at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS PrimitiveType: byte to CastExpression at 0", "INS SimpleName: Serializable to SimpleType: Serializable at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: hash to ReturnStatement at 0", "INS PrimitiveType: byte to CastExpression at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: HashCode to SimpleType: HashCode at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: toLong to MethodInvocation at 1", "INS Modifier: public to MethodDeclaration at 1", "INS Dimension to ArrayType: byte[] at 1", "INS InfixExpression: >> to ParenthesizedExpression at 0", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 4", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS Modifier: static to TypeDeclaration: class at 1", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleName: asInt to MethodDeclaration at 3", "INS StringLiteral: \"this HashCode only has 32 bits; cannot create a long\" to ClassInstanceCreation at 1", "INS SimpleType: HashCode to TypeDeclaration: class at 4", "INS SimpleName: hash to InfixExpression: >> at 0", "INS ArrayCreation to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: IllegalStateException to ClassInstanceCreation at 0", "INS ArrayInitializer to ArrayCreation at 1", "INS ArrayType: byte[] to MethodDeclaration at 2", "INS ArrayType: byte[] to ArrayCreation at 0", "INS NumberLiteral: 24 to InfixExpression: >> at 1", "INS CastExpression to ArrayInitializer at 0", "INS ExpressionStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS Block to MethodDeclaration at 4", "INS CastExpression to ArrayInitializer at 2", "INS InfixExpression: >> to ParenthesizedExpression at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: IllegalStateException to SimpleType: IllegalStateException at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS Modifier: static to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 13", "INS ReturnStatement to Block at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ParenthesizedExpression to CastExpression at 1", "INS PrimitiveType: int to FieldDeclaration at 1", "INS PrimitiveType: byte to CastExpression at 0", "INS SimpleName: hash to InfixExpression: >> at 0", "INS Modifier: final to FieldDeclaration at 2", "INS MarkerAnnotation to MethodDeclaration at 0", "INS CastExpression to ArrayInitializer at 3", "INS SimpleName: serialVersionUID to VariableDeclarationFragment at 0", "INS ThisExpression to FieldAccess at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS NumberLiteral: 32 to ReturnStatement at 0", "INS SimpleType: Serializable to TypeDeclaration: class at 5", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: hash to CastExpression at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: asBytes to MethodDeclaration at 3", "INS SimpleName: hash to FieldAccess at 1", "INS PrimitiveType: long to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS Modifier: final to TypeDeclaration: class at 2", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: hash to VariableDeclarationFragment at 0", "INS SimpleName: IntHashCode to MethodDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: IntHashCode to TypeDeclaration: class at 3", "INS SimpleName: padToLong to MethodDeclaration at 3", "INS Dimension to ArrayType: byte[] at 1", "INS PrimitiveType: int to MethodDeclaration at 2", "INS SimpleName: UnsignedInts to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: hash to SingleVariableDeclaration at 1", "INS PrimitiveType: long to MethodDeclaration at 2", "INS Modifier: private to TypeDeclaration: class at 0", "INS SimpleName: asLong to MethodDeclaration at 3", "INS NumberLiteral: 8 to InfixExpression: >> at 1", "INS SimpleName: hash to MethodInvocation at 2", "INS NumberLiteral: 16 to InfixExpression: >> at 1", "INS ReturnStatement to Block at 0", "INS InfixExpression: >> to ParenthesizedExpression at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleName: hash to Assignment: = at 1", "INS ParenthesizedExpression to CastExpression at 1", "INS SingleVariableDeclaration to MethodDeclaration at 1", "INS FieldAccess to Assignment: = at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 12", "INS SimpleName: hash to InfixExpression: >> at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS ThrowStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS CastExpression to ArrayInitializer at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SimpleName: LongHashCode to SimpleType: LongHashCode at 0", "INS SimpleType: HashCode to MethodDeclaration at 3", "INS Modifier: static to MethodDeclaration at 2", "INS TextElement:  15.0 (since 12.0 in HashCodes) to TagElement: @since at 0", "INS TextElement: are interpreted in little endian order. to TagElement at 3", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: LongHashCode to ClassInstanceCreation at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @code to TagElement at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: hash to ClassInstanceCreation at 1", "INS TextElement: Creates a 64-bit  to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: fromLong to MethodDeclaration at 4", "INS TextElement:  HashCode to TagElement: @code at 0", "INS SimpleName: hash to SingleVariableDeclaration at 1", "INS TextElement:  representation of the given long value. The underlying bytes to TagElement at 2", "INS Modifier: public to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS TagElement: @since to Javadoc at 1", "INS SimpleName: HashCode to SimpleType: HashCode at 0", "INS Block to MethodDeclaration at 6"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 14", "operations": ["INS ArrayCreation to ReturnStatement at 0", "INS PrimitiveType: byte to CastExpression at 0", "INS Modifier: final to TypeDeclaration: class at 2", "INS InfixExpression: >> to ParenthesizedExpression at 0", "INS ReturnStatement to Block at 0", "INS InfixExpression: >> to ParenthesizedExpression at 0", "INS SimpleName: hash to InfixExpression: >> at 0", "INS Dimension to ArrayType: byte[] at 1", "INS PrimitiveType: byte to CastExpression at 0", "INS Block to MethodDeclaration at 4", "INS PrimitiveType: int to MethodDeclaration at 2", "INS NumberLiteral: 32 to InfixExpression: >> at 1", "INS Block to MethodDeclaration at 2", "INS SimpleName: hash to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to MethodDeclaration at 1", "INS PrimitiveType: long to FieldDeclaration at 3", "INS SimpleName: Override to MarkerAnnotation at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS CastExpression to ArrayInitializer at 3", "INS Block to MethodDeclaration at 4", "INS ArrayInitializer to ArrayCreation at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleName: bits to MethodDeclaration at 3", "INS Modifier: static to FieldDeclaration at 1", "INS NumberLiteral: 8 to InfixExpression: >> at 1", "INS Modifier: private to TypeDeclaration: class at 0", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Modifier: private to FieldDeclaration at 0", "INS CastExpression to ArrayInitializer at 0", "INS NumberLiteral: 16 to InfixExpression: >> at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS InfixExpression: >> to ParenthesizedExpression at 0", "INS Block to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS SimpleName: hash to ReturnStatement at 0", "INS SimpleName: padToLong to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS NumberLiteral: 64 to ReturnStatement at 0", "INS Dimension to ArrayType: byte[] at 1", "INS PrimitiveType: byte to CastExpression at 0", "INS SimpleName: hash to InfixExpression: >> at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS PrimitiveType: long to MethodDeclaration at 2", "INS ParenthesizedExpression to CastExpression at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: Override to MarkerAnnotation at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 14", "INS ParenthesizedExpression to CastExpression at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: LongHashCode to TypeDeclaration: class at 3", "INS ArrayType: byte[] to MethodDeclaration at 2", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: hash to InfixExpression: >> at 0", "INS PrimitiveType: int to CastExpression at 0", "INS InfixExpression: >> to ParenthesizedExpression at 0", "INS SimpleType: Serializable to TypeDeclaration: class at 5", "INS PrimitiveType: byte to CastExpression at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: hash to InfixExpression: >> at 0", "INS SimpleName: Serializable to SimpleType: Serializable at 0", "INS CastExpression to ReturnStatement at 0", "INS CastExpression to ArrayInitializer at 2", "INS ParenthesizedExpression to CastExpression at 1", "INS SimpleName: hash to Assignment: = at 1", "INS SimpleName: hash to CastExpression at 1", "INS InfixExpression: >> to ParenthesizedExpression at 0", "INS PrimitiveType: long to SingleVariableDeclaration at 0", "INS SimpleName: asInt to MethodDeclaration at 3", "INS ParenthesizedExpression to CastExpression at 1", "INS SimpleName: LongHashCode to MethodDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleName: asLong to MethodDeclaration at 3", "INS PrimitiveType: int to MethodDeclaration at 2", "INS SimpleName: hash to CastExpression at 1", "INS SimpleType: HashCode to TypeDeclaration: class at 4", "INS ParenthesizedExpression to CastExpression at 1", "INS CastExpression to ArrayInitializer at 1", "INS SimpleName: hash to InfixExpression: >> at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS InfixExpression: >> to ParenthesizedExpression at 0", "INS SimpleName: hash to FieldAccess at 1", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 4", "INS ThisExpression to FieldAccess at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: serialVersionUID to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS NumberLiteral: 40 to InfixExpression: >> at 1", "INS SimpleName: HashCode to SimpleType: HashCode at 0", "INS ParenthesizedExpression to CastExpression at 1", "INS CastExpression to ArrayInitializer at 6", "INS SimpleName: hash to ReturnStatement at 0", "INS NumberLiteral: 24 to InfixExpression: >> at 1", "INS SimpleName: hash to SingleVariableDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS PrimitiveType: long to MethodDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 13", "INS ExpressionStatement to Block at 0", "INS CastExpression to ArrayInitializer at 7", "INS PrimitiveType: byte to CastExpression at 0", "INS NumberLiteral: 48 to InfixExpression: >> at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS NumberLiteral: 56 to InfixExpression: >> at 1", "INS SimpleName: hash to InfixExpression: >> at 0", "INS CastExpression to ArrayInitializer at 5", "INS PrimitiveType: byte to CastExpression at 0", "INS PrimitiveType: byte to CastExpression at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS PrimitiveType: long to FieldDeclaration at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: hash to InfixExpression: >> at 0", "INS Modifier: static to TypeDeclaration: class at 1", "INS ArrayType: byte[] to ArrayCreation at 0", "INS InfixExpression: >> to ParenthesizedExpression at 0", "INS CastExpression to ArrayInitializer at 4", "INS PrimitiveType: byte to CastExpression at 0", "INS Modifier: public to MethodDeclaration at 1", "INS ParenthesizedExpression to CastExpression at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: asBytes to MethodDeclaration at 3", "INS Modifier: final to FieldDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 15", "operations": ["INS TagElement: @code to TagElement at 4", "INS TextElement: . The array cannot be empty. to TagElement at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: clone to MethodInvocation at 1", "INS SimpleName: fromBytes to MethodDeclaration at 4", "INS ArrayType: byte[] to SingleVariableDeclaration at 0", "INS TextElement:  HashCode to TagElement: @code at 0", "INS TextElement:  15.0 (since 12.0 in HashCodes) to TagElement: @since at 0", "INS Block to MethodDeclaration at 6", "INS TextElement:  HashCode to TagElement: @code at 0", "INS InfixExpression: >= to MethodInvocation at 1", "INS TagElement: @code to TagElement at 1", "INS NumberLiteral: 1 to InfixExpression: >= at 1", "INS TagElement to Javadoc at 0", "INS SimpleName: bytes to SingleVariableDeclaration at 1", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: fromBytesNoCopy to MethodInvocation at 0", "INS SimpleName: HashCode to SimpleType: HashCode at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS SimpleName: checkArgument to MethodInvocation at 0", "INS SimpleName: bytes to MethodInvocation at 0", "INS TextElement:  from a byte array. The array is defensively copied to preserve to TagElement at 2", "INS SimpleType: HashCode to MethodDeclaration at 3", "INS MethodInvocation to MethodInvocation at 1", "INS Javadoc to MethodDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS MethodInvocation to ReturnStatement at 0", "INS TagElement: @since to Javadoc at 1", "INS StringLiteral: \"A HashCode must contain at least 1 byte.\" to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS ReturnStatement to Block at 1", "INS TextElement: Creates a  to TagElement at 0", "INS TextElement: the immutability contract of  to TagElement at 3", "INS Modifier: static to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS QualifiedName: bytes.length to InfixExpression: >= at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS ArrayType: byte[] to SingleVariableDeclaration at 0", "INS TextElement:  from a byte array. The array is <i>not</i> copied defensively, to TagElement at 2", "INS TagElement: @code to TagElement at 4", "INS TextElement:  HashCode to TagElement: @code at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: fromBytesNoCopy to MethodDeclaration at 3", "INS SimpleName: bytes to ClassInstanceCreation at 1", "INS SimpleName: BytesHashCode to SimpleType: BytesHashCode at 0", "INS SimpleType: HashCode to MethodDeclaration at 2", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleType: BytesHashCode to ClassInstanceCreation at 0", "INS TextElement: . to TagElement at 5", "INS Modifier: static to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS ReturnStatement to Block at 0", "INS TagElement to Javadoc at 0", "INS TagElement: @code to TagElement at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Block to MethodDeclaration at 5", "INS TextElement: so it must be handed-off so as to preserve the immutability contract of  to TagElement at 3", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: HashCode to SimpleType: HashCode at 0", "INS TextElement: Creates a  to TagElement at 0", "INS SimpleName: bytes to SingleVariableDeclaration at 1", "INS TextElement:  HashCode to TagElement: @code at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 17", "operations": ["INS NumberLiteral: 4 to InfixExpression: >= at 1", "INS ReturnStatement to Block at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: HashCode to SimpleType: HashCode at 0", "INS ExpressionStatement to Block at 0", "INS InfixExpression: << to ParenthesizedExpression at 0", "INS Modifier: final to FieldDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS PrimitiveType: long to VariableDeclarationStatement at 0", "INS InfixExpression: & to ParenthesizedExpression at 0", "INS ParenthesizedExpression to InfixExpression: << at 0", "INS InfixExpression: * to ParenthesizedExpression at 0", "INS SimpleName: BytesHashCode to TypeDeclaration: class at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: bytes to ArrayAccess at 0", "INS SimpleName: retVal to VariableDeclarationFragment at 0", "INS ArrayAccess to InfixExpression: & at 0", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS QualifiedName: bytes.length to InfixExpression: >= at 0", "INS Assignment: |= to ExpressionStatement at 0", "INS InfixExpression: * to ParenthesizedExpression at 0", "INS InfixExpression: | to ReturnStatement at 0", "INS SimpleName: padToLong to MethodDeclaration at 3", "INS NumberLiteral: 1 to ArrayAccess at 1", "INS MethodInvocation to ReturnStatement at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: asInt to MethodInvocation at 0", "INS Block to ForStatement at 3", "INS ForStatement to Block at 1", "INS Dimension to ArrayType: byte[] at 1", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: checkState to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS SimpleName: Math to MethodInvocation at 0", "INS QualifiedName: bytes.length to MethodInvocation at 2", "INS PrimitiveType: int to MethodDeclaration at 2", "INS ArrayAccess to InfixExpression: & at 0", "INS Modifier: public to MethodDeclaration at 1", "INS MethodInvocation to ReturnStatement at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: i to InfixExpression: < at 0", "INS Block to MethodDeclaration at 4", "INS QualifiedName: bytes.length to MethodInvocation at 3", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"HashCode#asLong() requires >= 8 bytes (it only has %s bytes).\" to MethodInvocation at 2", "INS ParenthesizedExpression to InfixExpression: | at 3", "INS InfixExpression: & to ParenthesizedExpression at 0", "INS ParenthesizedExpression to InfixExpression: << at 0", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to InfixExpression: < at 1", "INS SimpleName: hashCode to MethodDeclaration at 3", "INS ExpressionStatement to Block at 0", "INS ParenthesizedExpression to Assignment: |= at 1", "INS Block to ForStatement at 3", "INS InfixExpression: << to Assignment: |= at 1", "INS InfixExpression: & to ParenthesizedExpression at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: Math to MethodInvocation at 0", "INS SimpleName: bits to MethodDeclaration at 3", "INS InfixExpression: << to ParenthesizedExpression at 0", "INS InfixExpression: << to ParenthesizedExpression at 0", "INS ParenthesizedExpression to InfixExpression: << at 1", "INS NumberLiteral: 0xFF to InfixExpression: & at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: asLong to MethodDeclaration at 3", "INS Assignment: |= to ExpressionStatement at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS Block to MethodDeclaration at 2", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SingleVariableDeclaration to MethodDeclaration at 1", "INS Modifier: private to TypeDeclaration: class at 0", "INS NumberLiteral: 0xFF to InfixExpression: & at 1", "INS QualifiedName: bytes.length to InfixExpression: * at 0", "INS SimpleName: bytes to ArrayAccess at 0", "INS ReturnStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS ParenthesizedExpression to VariableDeclarationFragment at 1", "INS NumberLiteral: 0xFF to InfixExpression: & at 1", "INS SimpleName: clone to MethodInvocation at 1", "INS ParenthesizedExpression to InfixExpression: | at 0", "INS InfixExpression: & to ParenthesizedExpression at 0", "INS Block to MethodDeclaration at 4", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS NumberLiteral: 0xFFL to InfixExpression: & at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ParenthesizedExpression to InfixExpression: << at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: bytes to MethodInvocation at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 4", "INS Modifier: final to FieldDeclaration at 2", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: val to Assignment: |= at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: bytes to MethodInvocation at 0", "INS Block to MethodDeclaration at 4", "INS InfixExpression: & to ParenthesizedExpression at 0", "INS ReturnStatement to Block at 0", "INS ArrayAccess to InfixExpression: & at 0", "INS SimpleType: HashCode to TypeDeclaration: class at 4", "INS SimpleType: Serializable to TypeDeclaration: class at 5", "INS Block to MethodDeclaration at 4", "INS Modifier: public to MethodDeclaration at 1", "INS NumberLiteral: 8 to InfixExpression: << at 1", "INS StringLiteral: \"HashCode#asInt() requires >= 4 bytes (it only has %s bytes).\" to MethodInvocation at 2", "INS PrimitiveType: int to MethodDeclaration at 2", "INS PostfixExpression: ++ to ForStatement at 2", "INS VariableDeclarationStatement to Block at 0", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: long to MethodDeclaration at 2", "INS QualifiedName: bytes.length to InfixExpression: >= at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: bytes to ArrayAccess at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ArrayAccess to InfixExpression: & at 0", "INS SimpleName: i to InfixExpression: * at 0", "INS ArrayType: byte[] to SingleVariableDeclaration at 0", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS Dimension to ArrayType: byte[] at 1", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS ReturnStatement to Block at 2", "INS TypeDeclaration: class to TypeDeclaration: class at 17", "INS InfixExpression: < to ForStatement at 1", "INS NumberLiteral: 24 to InfixExpression: << at 1", "INS NumberLiteral: 4 to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS ArrayType: byte[] to MethodDeclaration at 2", "INS SimpleName: i to ArrayAccess at 1", "INS SimpleName: min to MethodInvocation at 1", "INS SimpleName: asInt to MethodDeclaration at 3", "INS MethodInvocation to ReturnStatement at 0", "INS NumberLiteral: 0xFF to InfixExpression: & at 1", "INS Modifier: final to TypeDeclaration: class at 2", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS ParenthesizedExpression to InfixExpression: << at 1", "INS ParenthesizedExpression to InfixExpression: | at 2", "INS NumberLiteral: 8 to InfixExpression: >= at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS InfixExpression: << to ParenthesizedExpression at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS FieldDeclaration to TypeDeclaration: class at 14", "INS NumberLiteral: 16 to InfixExpression: << at 1", "INS SimpleName: bytes to ArrayAccess at 0", "INS SimpleName: retVal to Assignment: |= at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Modifier: public to MethodDeclaration at 1", "INS InfixExpression: >= to IfStatement at 0", "INS PostfixExpression: ++ to ForStatement at 2", "INS PrimitiveType: long to MethodDeclaration at 2", "INS InfixExpression: >= to MethodInvocation at 1", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS NumberLiteral: 3 to ArrayAccess at 1", "INS SimpleName: BytesHashCode to MethodDeclaration at 0", "INS Modifier: private to FieldDeclaration at 0", "INS MethodInvocation to InfixExpression: < at 1", "INS InfixExpression: * to ReturnStatement at 0", "INS InfixExpression: < to ForStatement at 1", "INS SimpleName: bytes to ArrayAccess at 0", "INS SimpleName: bytes to ArrayAccess at 0", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS NumberLiteral: 4 to InfixExpression: >= at 1", "INS QualifiedName: bytes.length to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS SimpleName: val to VariableDeclarationFragment at 0", "INS SimpleName: asBytes to MethodDeclaration at 3", "INS NumberLiteral: 8 to InfixExpression: * at 1", "INS ArrayType: byte[] to FieldDeclaration at 1", "INS InfixExpression: & to ParenthesizedExpression at 0", "INS ExpressionStatement to Block at 0", "INS NumberLiteral: 0xFF to InfixExpression: & at 1", "INS ParenthesizedExpression to InfixExpression: | at 1", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS ArrayAccess to InfixExpression: & at 0", "INS ForStatement to Block at 1", "INS ArrayAccess to InfixExpression: & at 0", "INS InfixExpression: >= to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: i to InfixExpression: * at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS IfStatement to Block at 0", "INS ReturnStatement to Block at 1", "INS MethodInvocation to Assignment: = at 1", "INS Modifier: static to TypeDeclaration: class at 1", "INS Block to IfStatement at 2", "INS VariableDeclarationExpression to ForStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: checkState to MethodInvocation at 0", "INS SimpleName: i to ArrayAccess at 1", "INS SimpleName: min to MethodInvocation at 1", "INS NumberLiteral: 2 to ArrayAccess at 1", "INS ParenthesizedExpression to VariableDeclarationFragment at 1", "INS Block to MethodDeclaration at 4", "INS NumberLiteral: 0 to ArrayAccess at 1", "INS QualifiedName: bytes.length to MethodInvocation at 3", "INS SimpleName: i to InfixExpression: < at 0", "INS InfixExpression: & to ParenthesizedExpression at 0", "INS NumberLiteral: 8 to InfixExpression: * at 1", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS SimpleName: checkNotNull to MethodInvocation at 0", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: bytes to ArrayAccess at 0", "INS InfixExpression: & to ParenthesizedExpression at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS Modifier: public to MethodDeclaration at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: retVal to ReturnStatement at 0", "INS QualifiedName: bytes.length to InfixExpression: >= at 0", "INS NumberLiteral: 8 to InfixExpression: * at 1", "INS ArrayAccess to InfixExpression: & at 0", "INS Block to IfStatement at 1", "INS PrimitiveType: long to FieldDeclaration at 3", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: Serializable to SimpleType: Serializable at 0", "INS NumberLiteral: 0xFF to InfixExpression: & at 1", "INS Dimension to ArrayType: byte[] at 1", "INS ParenthesizedExpression to InfixExpression: << at 0", "INS NumberLiteral: 0xFF to InfixExpression: & at 1", "INS PrimitiveType: int to MethodDeclaration at 2", "INS SimpleName: val to ReturnStatement at 0", "INS SimpleName: bytes to FieldAccess at 1", "INS NumberLiteral: 8 to MethodInvocation at 3", "INS SimpleName: serialVersionUID to VariableDeclarationFragment at 0", "INS SimpleName: bytes to ArrayAccess at 0", "INS SimpleName: padToLong to MethodInvocation at 0", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: bytes to VariableDeclarationFragment at 0", "INS ParenthesizedExpression to InfixExpression: << at 0", "INS ArrayAccess to InfixExpression: & at 0", "INS SimpleName: bytes to SingleVariableDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0"]}, {"root": "INS TagElement: @author to Javadoc at 2", "operations": ["INS TagElement: @author to Javadoc at 2", "INS TextElement:  Kurt Alfred Kluever to TagElement: @author at 0"]}]}}, {"HashCode_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(950) at 1", "Insert ImportDeclaration(5) into CompilationUnit(950) at 2", "Insert ImportDeclaration(7) into CompilationUnit(950) at 3", "Insert ImportDeclaration(15) into CompilationUnit(950) at 7", "Insert ImportDeclaration(17) into CompilationUnit(950) at 8", "Insert QualifiedName: com.google.common.base.Preconditions.checkArgument(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: com.google.common.base.Preconditions.checkNotNull(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: com.google.common.base.Preconditions.checkState(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: com.google.common.primitives.UnsignedInts(14) into ImportDeclaration(15) at 0", "Insert QualifiedName: java.io.Serializable(16) into ImportDeclaration(17) at 0", "Insert MethodDeclaration(223) into TypeDeclaration: class(949) at 11", "Insert TypeDeclaration: class(335) into TypeDeclaration: class(949) at 12", "Insert MethodDeclaration(359) into TypeDeclaration: class(949) at 13", "Insert TypeDeclaration: class(491) into TypeDeclaration: class(949) at 14", "Insert MethodDeclaration(528) into TypeDeclaration: class(949) at 15", "Insert MethodDeclaration(554) into TypeDeclaration: class(949) at 16", "Insert TypeDeclaration: class(794) into TypeDeclaration: class(949) at 17", "Insert TagElement: @author(27) into Javadoc(30) at 2", "Insert Javadoc(208) into MethodDeclaration(223) at 0", "Insert Modifier: public(209) into MethodDeclaration(223) at 1", "Insert Modifier: static(210) into MethodDeclaration(223) at 2", "Insert SimpleType: HashCode(212) into MethodDeclaration(223) at 3", "Insert SimpleName: fromInt(213) into MethodDeclaration(223) at 4", "Insert SingleVariableDeclaration(216) into MethodDeclaration(223) at 5", "Insert Block(222) into MethodDeclaration(223) at 6", "Insert Modifier: private(224) into TypeDeclaration: class(335) at 0", "Insert Modifier: static(225) into TypeDeclaration: class(335) at 1", "Insert Modifier: final(226) into TypeDeclaration: class(335) at 2", "Insert SimpleName: IntHashCode(227) into TypeDeclaration: class(335) at 3", "Insert SimpleType: HashCode(229) into TypeDeclaration: class(335) at 4", "Insert SimpleType: Serializable(231) into TypeDeclaration: class(335) at 5", "Insert FieldDeclaration(236) into TypeDeclaration: class(335) at 6", "Insert MethodDeclaration(248) into TypeDeclaration: class(335) at 7", "Insert MethodDeclaration(257) into TypeDeclaration: class(335) at 8", "Insert MethodDeclaration(293) into TypeDeclaration: class(335) at 9", "Insert MethodDeclaration(302) into TypeDeclaration: class(335) at 10", "Insert MethodDeclaration(314) into TypeDeclaration: class(335) at 11", "Insert MethodDeclaration(326) into TypeDeclaration: class(335) at 12", "Insert FieldDeclaration(334) into TypeDeclaration: class(335) at 13", "Insert Javadoc(344) into MethodDeclaration(359) at 0", "Insert Modifier: public(345) into MethodDeclaration(359) at 1", "Insert Modifier: static(346) into MethodDeclaration(359) at 2", "Insert SimpleType: HashCode(348) into MethodDeclaration(359) at 3", "Insert SimpleName: fromLong(349) into MethodDeclaration(359) at 4", "Insert SingleVariableDeclaration(352) into MethodDeclaration(359) at 5", "Insert Block(358) into MethodDeclaration(359) at 6", "Insert Modifier: private(360) into TypeDeclaration: class(491) at 0", "Insert Modifier: static(361) into TypeDeclaration: class(491) at 1", "Insert Modifier: final(362) into TypeDeclaration: class(491) at 2", "Insert SimpleName: LongHashCode(363) into TypeDeclaration: class(491) at 3", "Insert SimpleType: HashCode(365) into TypeDeclaration: class(491) at 4", "Insert SimpleType: Serializable(367) into TypeDeclaration: class(491) at 5", "Insert FieldDeclaration(372) into TypeDeclaration: class(491) at 6", "Insert MethodDeclaration(384) into TypeDeclaration: class(491) at 7", "Insert MethodDeclaration(393) into TypeDeclaration: class(491) at 8", "Insert MethodDeclaration(453) into TypeDeclaration: class(491) at 9", "Insert MethodDeclaration(464) into TypeDeclaration: class(491) at 10", "Insert MethodDeclaration(473) into TypeDeclaration: class(491) at 11", "Insert MethodDeclaration(482) into TypeDeclaration: class(491) at 12", "Insert FieldDeclaration(490) into TypeDeclaration: class(491) at 13", "Insert Javadoc(503) into MethodDeclaration(528) at 0", "Insert Modifier: public(504) into MethodDeclaration(528) at 1", "Insert Modifier: static(505) into MethodDeclaration(528) at 2", "Insert SimpleType: HashCode(507) into MethodDeclaration(528) at 3", "Insert SimpleName: fromBytes(508) into MethodDeclaration(528) at 4", "Insert SingleVariableDeclaration(513) into MethodDeclaration(528) at 5", "Insert Block(527) into MethodDeclaration(528) at 6", "Insert Javadoc(538) into MethodDeclaration(554) at 0", "Insert Modifier: static(539) into MethodDeclaration(554) at 1", "Insert SimpleType: HashCode(541) into MethodDeclaration(554) at 2", "Insert SimpleName: fromBytesNoCopy(542) into MethodDeclaration(554) at 3", "Insert SingleVariableDeclaration(547) into MethodDeclaration(554) at 4", "Insert Block(553) into MethodDeclaration(554) at 5", "Insert Modifier: private(555) into TypeDeclaration: class(794) at 0", "Insert Modifier: static(556) into TypeDeclaration: class(794) at 1", "Insert Modifier: final(557) into TypeDeclaration: class(794) at 2", "Insert SimpleName: BytesHashCode(558) into TypeDeclaration: class(794) at 3", "Insert SimpleType: HashCode(560) into TypeDeclaration: class(794) at 4", "Insert SimpleType: Serializable(562) into TypeDeclaration: class(794) at 5", "Insert FieldDeclaration(569) into TypeDeclaration: class(794) at 6", "Insert MethodDeclaration(585) into TypeDeclaration: class(794) at 7", "Insert MethodDeclaration(596) into TypeDeclaration: class(794) at 8", "Insert MethodDeclaration(609) into TypeDeclaration: class(794) at 9", "Insert MethodDeclaration(659) into TypeDeclaration: class(794) at 10", "Insert MethodDeclaration(677) into TypeDeclaration: class(794) at 11", "Insert MethodDeclaration(726) into TypeDeclaration: class(794) at 12", "Insert MethodDeclaration(785) into TypeDeclaration: class(794) at 13", "Insert FieldDeclaration(793) into TypeDeclaration: class(794) at 14", "Insert TextElement:  Kurt Alfred Kluever(26) into TagElement: @author(27) at 0", "Insert TagElement(205) into Javadoc(208) at 0", "Insert TagElement: @since(207) into Javadoc(208) at 1", "Insert SimpleName: HashCode(211) into SimpleType: HashCode(212) at 0", "Insert PrimitiveType: int(214) into SingleVariableDeclaration(216) at 0", "Insert SimpleName: hash(215) into SingleVariableDeclaration(216) at 1", "Insert ReturnStatement(221) into Block(222) at 0", "Insert SimpleName: HashCode(228) into SimpleType: HashCode(229) at 0", "Insert SimpleName: Serializable(230) into SimpleType: Serializable(231) at 0", "Insert Modifier: final(232) into FieldDeclaration(236) at 0", "Insert PrimitiveType: int(233) into FieldDeclaration(236) at 1", "Insert VariableDeclarationFragment(235) into FieldDeclaration(236) at 2", "Insert SimpleName: IntHashCode(237) into MethodDeclaration(248) at 0", "Insert SingleVariableDeclaration(240) into MethodDeclaration(248) at 1", "Insert Block(247) into MethodDeclaration(248) at 2", "Insert MarkerAnnotation(250) into MethodDeclaration(257) at 0", "Insert Modifier: public(251) into MethodDeclaration(257) at 1", "Insert PrimitiveType: int(252) into MethodDeclaration(257) at 2", "Insert SimpleName: bits(253) into MethodDeclaration(257) at 3", "Insert Block(256) into MethodDeclaration(257) at 4", "Insert MarkerAnnotation(259) into MethodDeclaration(293) at 0", "Insert Modifier: public(260) into MethodDeclaration(293) at 1", "Insert ArrayType: byte[](263) into MethodDeclaration(293) at 2", "Insert SimpleName: asBytes(264) into MethodDeclaration(293) at 3", "Insert Block(292) into MethodDeclaration(293) at 4", "Insert MarkerAnnotation(295) into MethodDeclaration(302) at 0", "Insert Modifier: public(296) into MethodDeclaration(302) at 1", "Insert PrimitiveType: int(297) into MethodDeclaration(302) at 2", "Insert SimpleName: asInt(298) into MethodDeclaration(302) at 3", "Insert Block(301) into MethodDeclaration(302) at 4", "Insert MarkerAnnotation(304) into MethodDeclaration(314) at 0", "Insert Modifier: public(305) into MethodDeclaration(314) at 1", "Insert PrimitiveType: long(306) into MethodDeclaration(314) at 2", "Insert SimpleName: asLong(307) into MethodDeclaration(314) at 3", "Insert Block(313) into MethodDeclaration(314) at 4", "Insert MarkerAnnotation(316) into MethodDeclaration(326) at 0", "Insert Modifier: public(317) into MethodDeclaration(326) at 1", "Insert PrimitiveType: long(318) into MethodDeclaration(326) at 2", "Insert SimpleName: padToLong(319) into MethodDeclaration(326) at 3", "Insert Block(325) into MethodDeclaration(326) at 4", "Insert Modifier: private(327) into FieldDeclaration(334) at 0", "Insert Modifier: static(328) into FieldDeclaration(334) at 1", "Insert Modifier: final(329) into FieldDeclaration(334) at 2", "Insert PrimitiveType: long(330) into FieldDeclaration(334) at 3", "Insert VariableDeclarationFragment(333) into FieldDeclaration(334) at 4", "Insert TagElement(341) into Javadoc(344) at 0", "Insert TagElement: @since(343) into Javadoc(344) at 1", "Insert SimpleName: HashCode(347) into SimpleType: HashCode(348) at 0", "Insert PrimitiveType: long(350) into SingleVariableDeclaration(352) at 0", "Insert SimpleName: hash(351) into SingleVariableDeclaration(352) at 1", "Insert ReturnStatement(357) into Block(358) at 0", "Insert SimpleName: HashCode(364) into SimpleType: HashCode(365) at 0", "Insert SimpleName: Serializable(366) into SimpleType: Serializable(367) at 0", "Insert Modifier: final(368) into FieldDeclaration(372) at 0", "Insert PrimitiveType: long(369) into FieldDeclaration(372) at 1", "Insert VariableDeclarationFragment(371) into FieldDeclaration(372) at 2", "Insert SimpleName: LongHashCode(373) into MethodDeclaration(384) at 0", "Insert SingleVariableDeclaration(376) into MethodDeclaration(384) at 1", "Insert Block(383) into MethodDeclaration(384) at 2", "Insert MarkerAnnotation(386) into MethodDeclaration(393) at 0", "Insert Modifier: public(387) into MethodDeclaration(393) at 1", "Insert PrimitiveType: int(388) into MethodDeclaration(393) at 2", "Insert SimpleName: bits(389) into MethodDeclaration(393) at 3", "Insert Block(392) into MethodDeclaration(393) at 4", "Insert MarkerAnnotation(395) into MethodDeclaration(453) at 0", "Insert Modifier: public(396) into MethodDeclaration(453) at 1", "Insert ArrayType: byte[](399) into MethodDeclaration(453) at 2", "Insert SimpleName: asBytes(400) into MethodDeclaration(453) at 3", "Insert Block(452) into MethodDeclaration(453) at 4", "Insert MarkerAnnotation(455) into MethodDeclaration(464) at 0", "Insert Modifier: public(456) into MethodDeclaration(464) at 1", "Insert PrimitiveType: int(457) into MethodDeclaration(464) at 2", "Insert SimpleName: asInt(458) into MethodDeclaration(464) at 3", "Insert Block(463) into MethodDeclaration(464) at 4", "Insert MarkerAnnotation(466) into MethodDeclaration(473) at 0", "Insert Modifier: public(467) into MethodDeclaration(473) at 1", "Insert PrimitiveType: long(468) into MethodDeclaration(473) at 2", "Insert SimpleName: asLong(469) into MethodDeclaration(473) at 3", "Insert Block(472) into MethodDeclaration(473) at 4", "Insert MarkerAnnotation(475) into MethodDeclaration(482) at 0", "Insert Modifier: public(476) into MethodDeclaration(482) at 1", "Insert PrimitiveType: long(477) into MethodDeclaration(482) at 2", "Insert SimpleName: padToLong(478) into MethodDeclaration(482) at 3", "Insert Block(481) into MethodDeclaration(482) at 4", "Insert Modifier: private(483) into FieldDeclaration(490) at 0", "Insert Modifier: static(484) into FieldDeclaration(490) at 1", "Insert Modifier: final(485) into FieldDeclaration(490) at 2", "Insert PrimitiveType: long(486) into FieldDeclaration(490) at 3", "Insert VariableDeclarationFragment(489) into FieldDeclaration(490) at 4", "Insert TagElement(500) into Javadoc(503) at 0", "Insert TagElement: @since(502) into Javadoc(503) at 1", "Insert SimpleName: HashCode(506) into SimpleType: HashCode(507) at 0", "Insert ArrayType: byte[](511) into SingleVariableDeclaration(513) at 0", "Insert SimpleName: bytes(512) into SingleVariableDeclaration(513) at 1", "Insert ExpressionStatement(520) into Block(527) at 0", "Insert ReturnStatement(526) into Block(527) at 1", "Insert TagElement(537) into Javadoc(538) at 0", "Insert SimpleName: HashCode(540) into SimpleType: HashCode(541) at 0", "Insert ArrayType: byte[](545) into SingleVariableDeclaration(547) at 0", "Insert SimpleName: bytes(546) into SingleVariableDeclaration(547) at 1", "Insert ReturnStatement(552) into Block(553) at 0", "Insert SimpleName: HashCode(559) into SimpleType: HashCode(560) at 0", "Insert SimpleName: Serializable(561) into SimpleType: Serializable(562) at 0", "Insert Modifier: final(563) into FieldDeclaration(569) at 0", "Insert ArrayType: byte[](566) into FieldDeclaration(569) at 1", "Insert VariableDeclarationFragment(568) into FieldDeclaration(569) at 2", "Insert SimpleName: BytesHashCode(570) into MethodDeclaration(585) at 0", "Insert SingleVariableDeclaration(575) into MethodDeclaration(585) at 1", "Insert Block(584) into MethodDeclaration(585) at 2", "Insert MarkerAnnotation(587) into MethodDeclaration(596) at 0", "Insert Modifier: public(588) into MethodDeclaration(596) at 1", "Insert PrimitiveType: int(589) into MethodDeclaration(596) at 2", "Insert SimpleName: bits(590) into MethodDeclaration(596) at 3", "Insert Block(595) into MethodDeclaration(596) at 4", "Insert MarkerAnnotation(598) into MethodDeclaration(609) at 0", "Insert Modifier: public(599) into MethodDeclaration(609) at 1", "Insert ArrayType: byte[](602) into MethodDeclaration(609) at 2", "Insert SimpleName: asBytes(603) into MethodDeclaration(609) at 3", "Insert Block(608) into MethodDeclaration(609) at 4", "Insert MarkerAnnotation(611) into MethodDeclaration(659) at 0", "Insert Modifier: public(612) into MethodDeclaration(659) at 1", "Insert PrimitiveType: int(613) into MethodDeclaration(659) at 2", "Insert SimpleName: asInt(614) into MethodDeclaration(659) at 3", "Insert Block(658) into MethodDeclaration(659) at 4", "Insert MarkerAnnotation(661) into MethodDeclaration(677) at 0", "Insert Modifier: public(662) into MethodDeclaration(677) at 1", "Insert PrimitiveType: long(663) into MethodDeclaration(677) at 2", "Insert SimpleName: asLong(664) into MethodDeclaration(677) at 3", "Insert Block(676) into MethodDeclaration(677) at 4", "Insert MarkerAnnotation(679) into MethodDeclaration(726) at 0", "Insert Modifier: public(680) into MethodDeclaration(726) at 1", "Insert PrimitiveType: long(681) into MethodDeclaration(726) at 2", "Insert SimpleName: padToLong(682) into MethodDeclaration(726) at 3", "Insert Block(725) into MethodDeclaration(726) at 4", "Insert MarkerAnnotation(728) into MethodDeclaration(785) at 0", "Insert Modifier: public(729) into MethodDeclaration(785) at 1", "Insert PrimitiveType: int(730) into MethodDeclaration(785) at 2", "Insert SimpleName: hashCode(731) into MethodDeclaration(785) at 3", "Insert Block(784) into MethodDeclaration(785) at 4", "Insert Modifier: private(786) into FieldDeclaration(793) at 0", "Insert Modifier: static(787) into FieldDeclaration(793) at 1", "Insert Modifier: final(788) into FieldDeclaration(793) at 2", "Insert PrimitiveType: long(789) into FieldDeclaration(793) at 3", "Insert VariableDeclarationFragment(792) into FieldDeclaration(793) at 4", "Insert TextElement: Creates a 32-bit (200) into TagElement(205) at 0", "Insert TagElement: @code(202) into TagElement(205) at 1", "Insert TextElement:  representation of the given int value. The underlying bytes(203) into TagElement(205) at 2", "Insert TextElement: are interpreted in little endian order.(204) into TagElement(205) at 3", "Insert TextElement:  15.0 (since 12.0 in HashCodes)(206) into TagElement: @since(207) at 0", "Insert ClassInstanceCreation(220) into ReturnStatement(221) at 0", "Insert SimpleName: hash(234) into VariableDeclarationFragment(235) at 0", "Insert PrimitiveType: int(238) into SingleVariableDeclaration(240) at 0", "Insert SimpleName: hash(239) into SingleVariableDeclaration(240) at 1", "Insert ExpressionStatement(246) into Block(247) at 0", "Insert SimpleName: Override(249) into MarkerAnnotation(250) at 0", "Insert ReturnStatement(255) into Block(256) at 0", "Insert SimpleName: Override(258) into MarkerAnnotation(259) at 0", "Insert PrimitiveType: byte(261) into ArrayType: byte[](263) at 0", "Insert Dimension(262) into ArrayType: byte[](263) at 1", "Insert ReturnStatement(291) into Block(292) at 0", "Insert SimpleName: Override(294) into MarkerAnnotation(295) at 0", "Insert ReturnStatement(300) into Block(301) at 0", "Insert SimpleName: Override(303) into MarkerAnnotation(304) at 0", "Insert ThrowStatement(312) into Block(313) at 0", "Insert SimpleName: Override(315) into MarkerAnnotation(316) at 0", "Insert ReturnStatement(324) into Block(325) at 0", "Insert SimpleName: serialVersionUID(331) into VariableDeclarationFragment(333) at 0", "Insert NumberLiteral: 0(332) into VariableDeclarationFragment(333) at 1", "Insert TextElement: Creates a 64-bit (336) into TagElement(341) at 0", "Insert TagElement: @code(338) into TagElement(341) at 1", "Insert TextElement:  representation of the given long value. The underlying bytes(339) into TagElement(341) at 2", "Insert TextElement: are interpreted in little endian order.(340) into TagElement(341) at 3", "Insert TextElement:  15.0 (since 12.0 in HashCodes)(342) into TagElement: @since(343) at 0", "Insert ClassInstanceCreation(356) into ReturnStatement(357) at 0", "Insert SimpleName: hash(370) into VariableDeclarationFragment(371) at 0", "Insert PrimitiveType: long(374) into SingleVariableDeclaration(376) at 0", "Insert SimpleName: hash(375) into SingleVariableDeclaration(376) at 1", "Insert ExpressionStatement(382) into Block(383) at 0", "Insert SimpleName: Override(385) into MarkerAnnotation(386) at 0", "Insert ReturnStatement(391) into Block(392) at 0", "Insert SimpleName: Override(394) into MarkerAnnotation(395) at 0", "Insert PrimitiveType: byte(397) into ArrayType: byte[](399) at 0", "Insert Dimension(398) into ArrayType: byte[](399) at 1", "Insert ReturnStatement(451) into Block(452) at 0", "Insert SimpleName: Override(454) into MarkerAnnotation(455) at 0", "Insert ReturnStatement(462) into Block(463) at 0", "Insert SimpleName: Override(465) into MarkerAnnotation(466) at 0", "Insert ReturnStatement(471) into Block(472) at 0", "Insert SimpleName: Override(474) into MarkerAnnotation(475) at 0", "Insert ReturnStatement(480) into Block(481) at 0", "Insert SimpleName: serialVersionUID(487) into VariableDeclarationFragment(489) at 0", "Insert NumberLiteral: 0(488) into VariableDeclarationFragment(489) at 1", "Insert TextElement: Creates a (492) into TagElement(500) at 0", "Insert TagElement: @code(494) into TagElement(500) at 1", "Insert TextElement:  from a byte array. The array is defensively copied to preserve(495) into TagElement(500) at 2", "Insert TextElement: the immutability contract of (496) into TagElement(500) at 3", "Insert TagElement: @code(498) into TagElement(500) at 4", "Insert TextElement: . The array cannot be empty.(499) into TagElement(500) at 5", "Insert TextElement:  15.0 (since 12.0 in HashCodes)(501) into TagElement: @since(502) at 0", "Insert PrimitiveType: byte(509) into ArrayType: byte[](511) at 0", "Insert Dimension(510) into ArrayType: byte[](511) at 1", "Insert MethodInvocation(519) into ExpressionStatement(520) at 0", "Insert MethodInvocation(525) into ReturnStatement(526) at 0", "Insert TextElement: Creates a (529) into TagElement(537) at 0", "Insert TagElement: @code(531) into TagElement(537) at 1", "Insert TextElement:  from a byte array. The array is <i>not</i> copied defensively,(532) into TagElement(537) at 2", "Insert TextElement: so it must be handed-off so as to preserve the immutability contract of (533) into TagElement(537) at 3", "Insert TagElement: @code(535) into TagElement(537) at 4", "Insert TextElement: .(536) into TagElement(537) at 5", "Insert PrimitiveType: byte(543) into ArrayType: byte[](545) at 0", "Insert Dimension(544) into ArrayType: byte[](545) at 1", "Insert ClassInstanceCreation(551) into ReturnStatement(552) at 0", "Insert PrimitiveType: byte(564) into ArrayType: byte[](566) at 0", "Insert Dimension(565) into ArrayType: byte[](566) at 1", "Insert SimpleName: bytes(567) into VariableDeclarationFragment(568) at 0", "Insert ArrayType: byte[](573) into SingleVariableDeclaration(575) at 0", "Insert SimpleName: bytes(574) into SingleVariableDeclaration(575) at 1", "Insert ExpressionStatement(583) into Block(584) at 0", "Insert SimpleName: Override(586) into MarkerAnnotation(587) at 0", "Insert ReturnStatement(594) into Block(595) at 0", "Insert SimpleName: Override(597) into MarkerAnnotation(598) at 0", "Insert PrimitiveType: byte(600) into ArrayType: byte[](602) at 0", "Insert Dimension(601) into ArrayType: byte[](602) at 1", "Insert ReturnStatement(607) into Block(608) at 0", "Insert SimpleName: Override(610) into MarkerAnnotation(611) at 0", "Insert ExpressionStatement(622) into Block(658) at 0", "Insert ReturnStatement(657) into Block(658) at 1", "Insert SimpleName: Override(660) into MarkerAnnotation(661) at 0", "Insert ExpressionStatement(672) into Block(676) at 0", "Insert ReturnStatement(675) into Block(676) at 1", "Insert SimpleName: Override(678) into MarkerAnnotation(679) at 0", "Insert VariableDeclarationStatement(692) into Block(725) at 0", "Insert ForStatement(722) into Block(725) at 1", "Insert ReturnStatement(724) into Block(725) at 2", "Insert SimpleName: Override(727) into MarkerAnnotation(728) at 0", "Insert IfStatement(783) into Block(784) at 0", "Insert SimpleName: serialVersionUID(790) into VariableDeclarationFragment(792) at 0", "Insert NumberLiteral: 0(791) into VariableDeclarationFragment(792) at 1", "Insert TextElement:  HashCode(201) into TagElement: @code(202) at 0", "Insert SimpleType: IntHashCode(218) into ClassInstanceCreation(220) at 0", "Insert SimpleName: hash(219) into ClassInstanceCreation(220) at 1", "Insert Assignment: =(245) into ExpressionStatement(246) at 0", "Insert NumberLiteral: 32(254) into ReturnStatement(255) at 0", "Insert ArrayCreation(290) into ReturnStatement(291) at 0", "Insert SimpleName: hash(299) into ReturnStatement(300) at 0", "Insert ClassInstanceCreation(311) into ThrowStatement(312) at 0", "Insert MethodInvocation(323) into ReturnStatement(324) at 0", "Insert TextElement:  HashCode(337) into TagElement: @code(338) at 0", "Insert SimpleType: LongHashCode(354) into ClassInstanceCreation(356) at 0", "Insert SimpleName: hash(355) into ClassInstanceCreation(356) at 1", "Insert Assignment: =(381) into ExpressionStatement(382) at 0", "Insert NumberLiteral: 64(390) into ReturnStatement(391) at 0", "Insert ArrayCreation(450) into ReturnStatement(451) at 0", "Insert CastExpression(461) into ReturnStatement(462) at 0", "Insert SimpleName: hash(470) into ReturnStatement(471) at 0", "Insert SimpleName: hash(479) into ReturnStatement(480) at 0", "Insert TextElement:  HashCode(493) into TagElement: @code(494) at 0", "Insert TextElement:  HashCode(497) into TagElement: @code(498) at 0", "Insert SimpleName: checkArgument(514) into MethodInvocation(519) at 0", "Insert InfixExpression: >=(517) into MethodInvocation(519) at 1", "Insert StringLiteral: \"A HashCode must contain at least 1 byte.\"(518) into MethodInvocation(519) at 2", "Insert SimpleName: fromBytesNoCopy(521) into MethodInvocation(525) at 0", "Insert MethodInvocation(524) into MethodInvocation(525) at 1", "Insert TextElement:  HashCode(530) into TagElement: @code(531) at 0", "Insert TextElement:  HashCode(534) into TagElement: @code(535) at 0", "Insert SimpleType: BytesHashCode(549) into ClassInstanceCreation(551) at 0", "Insert SimpleName: bytes(550) into ClassInstanceCreation(551) at 1", "Insert PrimitiveType: byte(571) into ArrayType: byte[](573) at 0", "Insert Dimension(572) into ArrayType: byte[](573) at 1", "Insert Assignment: =(582) into ExpressionStatement(583) at 0", "Insert InfixExpression: *(593) into ReturnStatement(594) at 0", "Insert MethodInvocation(606) into ReturnStatement(607) at 0", "Insert MethodInvocation(621) into ExpressionStatement(622) at 0", "Insert InfixExpression: |(656) into ReturnStatement(657) at 0", "Insert MethodInvocation(671) into ExpressionStatement(672) at 0", "Insert MethodInvocation(674) into ReturnStatement(675) at 0", "Insert PrimitiveType: long(683) into VariableDeclarationStatement(692) at 0", "Insert VariableDeclarationFragment(691) into VariableDeclarationStatement(692) at 1", "Insert VariableDeclarationExpression(697) into ForStatement(722) at 0", "Insert InfixExpression: <(704) into ForStatement(722) at 1", "Insert PostfixExpression: ++(706) into ForStatement(722) at 2", "Insert Block(721) into ForStatement(722) at 3", "Insert SimpleName: retVal(723) into ReturnStatement(724) at 0", "Insert InfixExpression: >=(734) into IfStatement(783) at 0", "Insert Block(738) into IfStatement(783) at 1", "Insert Block(782) into IfStatement(783) at 2", "Insert SimpleName: IntHashCode(217) into SimpleType: IntHashCode(218) at 0", "Insert FieldAccess(243) into Assignment: =(245) at 0", "Insert SimpleName: hash(244) into Assignment: =(245) at 1", "Insert ArrayType: byte[](267) into ArrayCreation(290) at 0", "Insert ArrayInitializer(289) into ArrayCreation(290) at 1", "Insert SimpleType: IllegalStateException(309) into ClassInstanceCreation(311) at 0", "Insert StringLiteral: \"this HashCode only has 32 bits; cannot create a long\"(310) into ClassInstanceCreation(311) at 1", "Insert SimpleName: UnsignedInts(320) into MethodInvocation(323) at 0", "Insert SimpleName: toLong(321) into MethodInvocation(323) at 1", "Insert SimpleName: hash(322) into MethodInvocation(323) at 2", "Insert SimpleName: LongHashCode(353) into SimpleType: LongHashCode(354) at 0", "Insert FieldAccess(379) into Assignment: =(381) at 0", "Insert SimpleName: hash(380) into Assignment: =(381) at 1", "Insert ArrayType: byte[](403) into ArrayCreation(450) at 0", "Insert ArrayInitializer(449) into ArrayCreation(450) at 1", "Insert PrimitiveType: int(459) into CastExpression(461) at 0", "Insert SimpleName: hash(460) into CastExpression(461) at 1", "Insert QualifiedName: bytes.length(515) into InfixExpression: >=(517) at 0", "Insert NumberLiteral: 1(516) into InfixExpression: >=(517) at 1", "Insert SimpleName: bytes(522) into MethodInvocation(524) at 0", "Insert SimpleName: clone(523) into MethodInvocation(524) at 1", "Insert SimpleName: BytesHashCode(548) into SimpleType: BytesHashCode(549) at 0", "Insert FieldAccess(578) into Assignment: =(582) at 0", "Insert MethodInvocation(581) into Assignment: =(582) at 1", "Insert QualifiedName: bytes.length(591) into InfixExpression: *(593) at 0", "Insert NumberLiteral: 8(592) into InfixExpression: *(593) at 1", "Insert SimpleName: bytes(604) into MethodInvocation(606) at 0", "Insert SimpleName: clone(605) into MethodInvocation(606) at 1", "Insert SimpleName: checkState(615) into MethodInvocation(621) at 0", "Insert InfixExpression: >=(618) into MethodInvocation(621) at 1", "Insert StringLiteral: \"HashCode#asInt() requires >= 4 bytes (it only has %s bytes).\"(619) into MethodInvocation(621) at 2", "Insert QualifiedName: bytes.length(620) into MethodInvocation(621) at 3", "Insert ParenthesizedExpression(628) into InfixExpression: |(656) at 0", "Insert ParenthesizedExpression(637) into InfixExpression: |(656) at 1", "Insert ParenthesizedExpression(646) into InfixExpression: |(656) at 2", "Insert ParenthesizedExpression(655) into InfixExpression: |(656) at 3", "Insert SimpleName: checkState(665) into MethodInvocation(671) at 0", "Insert InfixExpression: >=(668) into MethodInvocation(671) at 1", "Insert StringLiteral: \"HashCode#asLong() requires >= 8 bytes (it only has %s bytes).\"(669) into MethodInvocation(671) at 2", "Insert QualifiedName: bytes.length(670) into MethodInvocation(671) at 3", "Insert SimpleName: padToLong(673) into MethodInvocation(674) at 0", "Insert SimpleName: retVal(684) into VariableDeclarationFragment(691) at 0", "Insert ParenthesizedExpression(690) into VariableDeclarationFragment(691) at 1", "Insert PrimitiveType: int(693) into VariableDeclarationExpression(697) at 0", "Insert VariableDeclarationFragment(696) into VariableDeclarationExpression(697) at 1", "Insert SimpleName: i(698) into InfixExpression: <(704) at 0", "Insert MethodInvocation(703) into InfixExpression: <(704) at 1", "Insert SimpleName: i(705) into PostfixExpression: ++(706) at 0", "Insert ExpressionStatement(720) into Block(721) at 0", "Insert QualifiedName: bytes.length(732) into InfixExpression: >=(734) at 0", "Insert NumberLiteral: 4(733) into InfixExpression: >=(734) at 1", "Insert ReturnStatement(737) into Block(738) at 0", "Insert VariableDeclarationStatement(748) into Block(782) at 0", "Insert ForStatement(779) into Block(782) at 1", "Insert ReturnStatement(781) into Block(782) at 2", "Insert ThisExpression(241) into FieldAccess(243) at 0", "Insert SimpleName: hash(242) into FieldAccess(243) at 1", "Insert PrimitiveType: byte(265) into ArrayType: byte[](267) at 0", "Insert Dimension(266) into ArrayType: byte[](267) at 1", "Insert CastExpression(270) into ArrayInitializer(289) at 0", "Insert CastExpression(276) into ArrayInitializer(289) at 1", "Insert CastExpression(282) into ArrayInitializer(289) at 2", "Insert CastExpression(288) into ArrayInitializer(289) at 3", "Insert SimpleName: IllegalStateException(308) into SimpleType: IllegalStateException(309) at 0", "Insert ThisExpression(377) into FieldAccess(379) at 0", "Insert SimpleName: hash(378) into FieldAccess(379) at 1", "Insert PrimitiveType: byte(401) into ArrayType: byte[](403) at 0", "Insert Dimension(402) into ArrayType: byte[](403) at 1", "Insert CastExpression(406) into ArrayInitializer(449) at 0", "Insert CastExpression(412) into ArrayInitializer(449) at 1", "Insert CastExpression(418) into ArrayInitializer(449) at 2", "Insert CastExpression(424) into ArrayInitializer(449) at 3", "Insert CastExpression(430) into ArrayInitializer(449) at 4", "Insert CastExpression(436) into ArrayInitializer(449) at 5", "Insert CastExpression(442) into ArrayInitializer(449) at 6", "Insert CastExpression(448) into ArrayInitializer(449) at 7", "Insert ThisExpression(576) into FieldAccess(578) at 0", "Insert SimpleName: bytes(577) into FieldAccess(578) at 1", "Insert SimpleName: checkNotNull(579) into MethodInvocation(581) at 0", "Insert SimpleName: bytes(580) into MethodInvocation(581) at 1", "Insert QualifiedName: bytes.length(616) into InfixExpression: >=(618) at 0", "Insert NumberLiteral: 4(617) into InfixExpression: >=(618) at 1", "Insert InfixExpression: &(627) into ParenthesizedExpression(628) at 0", "Insert InfixExpression: <<(636) into ParenthesizedExpression(637) at 0", "Insert InfixExpression: <<(645) into ParenthesizedExpression(646) at 0", "Insert InfixExpression: <<(654) into ParenthesizedExpression(655) at 0", "Insert QualifiedName: bytes.length(666) into InfixExpression: >=(668) at 0", "Insert NumberLiteral: 8(667) into InfixExpression: >=(668) at 1", "Insert InfixExpression: &(689) into ParenthesizedExpression(690) at 0", "Insert SimpleName: i(694) into VariableDeclarationFragment(696) at 0", "Insert NumberLiteral: 1(695) into VariableDeclarationFragment(696) at 1", "Insert SimpleName: Math(699) into MethodInvocation(703) at 0", "Insert SimpleName: min(700) into MethodInvocation(703) at 1", "Insert QualifiedName: bytes.length(701) into MethodInvocation(703) at 2", "Insert NumberLiteral: 8(702) into MethodInvocation(703) at 3", "Insert Assignment: |=(719) into ExpressionStatement(720) at 0", "Insert MethodInvocation(736) into ReturnStatement(737) at 0", "Insert PrimitiveType: int(739) into VariableDeclarationStatement(748) at 0", "Insert VariableDeclarationFragment(747) into VariableDeclarationStatement(748) at 1", "Insert VariableDeclarationExpression(753) into ForStatement(779) at 0", "Insert InfixExpression: <(760) into ForStatement(779) at 1", "Insert PostfixExpression: ++(762) into ForStatement(779) at 2", "Insert Block(778) into ForStatement(779) at 3", "Insert SimpleName: val(780) into ReturnStatement(781) at 0", "Insert PrimitiveType: byte(268) into CastExpression(270) at 0", "Insert SimpleName: hash(269) into CastExpression(270) at 1", "Insert PrimitiveType: byte(271) into CastExpression(276) at 0", "Insert ParenthesizedExpression(275) into CastExpression(276) at 1", "Insert PrimitiveType: byte(277) into CastExpression(282) at 0", "Insert ParenthesizedExpression(281) into CastExpression(282) at 1", "Insert PrimitiveType: byte(283) into CastExpression(288) at 0", "Insert ParenthesizedExpression(287) into CastExpression(288) at 1", "Insert PrimitiveType: byte(404) into CastExpression(406) at 0", "Insert SimpleName: hash(405) into CastExpression(406) at 1", "Insert PrimitiveType: byte(407) into CastExpression(412) at 0", "Insert ParenthesizedExpression(411) into CastExpression(412) at 1", "Insert PrimitiveType: byte(413) into CastExpression(418) at 0", "Insert ParenthesizedExpression(417) into CastExpression(418) at 1", "Insert PrimitiveType: byte(419) into CastExpression(424) at 0", "Insert ParenthesizedExpression(423) into CastExpression(424) at 1", "Insert PrimitiveType: byte(425) into CastExpression(430) at 0", "Insert ParenthesizedExpression(429) into CastExpression(430) at 1", "Insert PrimitiveType: byte(431) into CastExpression(436) at 0", "Insert ParenthesizedExpression(435) into CastExpression(436) at 1", "Insert PrimitiveType: byte(437) into CastExpression(442) at 0", "Insert ParenthesizedExpression(441) into CastExpression(442) at 1", "Insert PrimitiveType: byte(443) into CastExpression(448) at 0", "Insert ParenthesizedExpression(447) into CastExpression(448) at 1", "Insert ArrayAccess(625) into InfixExpression: &(627) at 0", "Insert NumberLiteral: 0xFF(626) into InfixExpression: &(627) at 1", "Insert ParenthesizedExpression(634) into InfixExpression: <<(636) at 0", "Insert NumberLiteral: 8(635) into InfixExpression: <<(636) at 1", "Insert ParenthesizedExpression(643) into InfixExpression: <<(645) at 0", "Insert NumberLiteral: 16(644) into InfixExpression: <<(645) at 1", "Insert ParenthesizedExpression(652) into InfixExpression: <<(654) at 0", "Insert NumberLiteral: 24(653) into InfixExpression: <<(654) at 1", "Insert ArrayAccess(687) into InfixExpression: &(689) at 0", "Insert NumberLiteral: 0xFF(688) into InfixExpression: &(689) at 1", "Insert SimpleName: retVal(707) into Assignment: |=(719) at 0", "Insert InfixExpression: <<(718) into Assignment: |=(719) at 1", "Insert SimpleName: asInt(735) into MethodInvocation(736) at 0", "Insert SimpleName: val(740) into VariableDeclarationFragment(747) at 0", "Insert ParenthesizedExpression(746) into VariableDeclarationFragment(747) at 1", "Insert PrimitiveType: int(749) into VariableDeclarationExpression(753) at 0", "Insert VariableDeclarationFragment(752) into VariableDeclarationExpression(753) at 1", "Insert SimpleName: i(754) into InfixExpression: <(760) at 0", "Insert MethodInvocation(759) into InfixExpression: <(760) at 1", "Insert SimpleName: i(761) into PostfixExpression: ++(762) at 0", "Insert ExpressionStatement(777) into Block(778) at 0", "Insert InfixExpression: >>(274) into ParenthesizedExpression(275) at 0", "Insert InfixExpression: >>(280) into ParenthesizedExpression(281) at 0", "Insert InfixExpression: >>(286) into ParenthesizedExpression(287) at 0", "Insert InfixExpression: >>(410) into ParenthesizedExpression(411) at 0", "Insert InfixExpression: >>(416) into ParenthesizedExpression(417) at 0", "Insert InfixExpression: >>(422) into ParenthesizedExpression(423) at 0", "Insert InfixExpression: >>(428) into ParenthesizedExpression(429) at 0", "Insert InfixExpression: >>(434) into ParenthesizedExpression(435) at 0", "Insert InfixExpression: >>(440) into ParenthesizedExpression(441) at 0", "Insert InfixExpression: >>(446) into ParenthesizedExpression(447) at 0", "Insert SimpleName: bytes(623) into ArrayAccess(625) at 0", "Insert NumberLiteral: 0(624) into ArrayAccess(625) at 1", "Insert InfixExpression: &(633) into ParenthesizedExpression(634) at 0", "Insert InfixExpression: &(642) into ParenthesizedExpression(643) at 0", "Insert InfixExpression: &(651) into ParenthesizedExpression(652) at 0", "Insert SimpleName: bytes(685) into ArrayAccess(687) at 0", "Insert NumberLiteral: 0(686) into ArrayAccess(687) at 1", "Insert ParenthesizedExpression(713) into InfixExpression: <<(718) at 0", "Insert ParenthesizedExpression(717) into InfixExpression: <<(718) at 1", "Insert InfixExpression: &(745) into ParenthesizedExpression(746) at 0", "Insert SimpleName: i(750) into VariableDeclarationFragment(752) at 0", "Insert NumberLiteral: 1(751) into VariableDeclarationFragment(752) at 1", "Insert SimpleName: Math(755) into MethodInvocation(759) at 0", "Insert SimpleName: min(756) into MethodInvocation(759) at 1", "Insert QualifiedName: bytes.length(757) into MethodInvocation(759) at 2", "Insert NumberLiteral: 4(758) into MethodInvocation(759) at 3", "Insert Assignment: |=(776) into ExpressionStatement(777) at 0", "Insert SimpleName: hash(272) into InfixExpression: >>(274) at 0", "Insert NumberLiteral: 8(273) into InfixExpression: >>(274) at 1", "Insert SimpleName: hash(278) into InfixExpression: >>(280) at 0", "Insert NumberLiteral: 16(279) into InfixExpression: >>(280) at 1", "Insert SimpleName: hash(284) into InfixExpression: >>(286) at 0", "Insert NumberLiteral: 24(285) into InfixExpression: >>(286) at 1", "Insert SimpleName: hash(408) into InfixExpression: >>(410) at 0", "Insert NumberLiteral: 8(409) into InfixExpression: >>(410) at 1", "Insert SimpleName: hash(414) into InfixExpression: >>(416) at 0", "Insert NumberLiteral: 16(415) into InfixExpression: >>(416) at 1", "Insert SimpleName: hash(420) into InfixExpression: >>(422) at 0", "Insert NumberLiteral: 24(421) into InfixExpression: >>(422) at 1", "Insert SimpleName: hash(426) into InfixExpression: >>(428) at 0", "Insert NumberLiteral: 32(427) into InfixExpression: >>(428) at 1", "Insert SimpleName: hash(432) into InfixExpression: >>(434) at 0", "Insert NumberLiteral: 40(433) into InfixExpression: >>(434) at 1", "Insert SimpleName: hash(438) into InfixExpression: >>(440) at 0", "Insert NumberLiteral: 48(439) into InfixExpression: >>(440) at 1", "Insert SimpleName: hash(444) into InfixExpression: >>(446) at 0", "Insert NumberLiteral: 56(445) into InfixExpression: >>(446) at 1", "Insert ArrayAccess(631) into InfixExpression: &(633) at 0", "Insert NumberLiteral: 0xFF(632) into InfixExpression: &(633) at 1", "Insert ArrayAccess(640) into InfixExpression: &(642) at 0", "Insert NumberLiteral: 0xFF(641) into InfixExpression: &(642) at 1", "Insert ArrayAccess(649) into InfixExpression: &(651) at 0", "Insert NumberLiteral: 0xFF(650) into InfixExpression: &(651) at 1", "Insert InfixExpression: &(712) into ParenthesizedExpression(713) at 0", "Insert InfixExpression: *(716) into ParenthesizedExpression(717) at 0", "Insert ArrayAccess(743) into InfixExpression: &(745) at 0", "Insert NumberLiteral: 0xFF(744) into InfixExpression: &(745) at 1", "Insert SimpleName: val(763) into Assignment: |=(776) at 0", "Insert ParenthesizedExpression(775) into Assignment: |=(776) at 1", "Insert SimpleName: bytes(629) into ArrayAccess(631) at 0", "Insert NumberLiteral: 1(630) into ArrayAccess(631) at 1", "Insert SimpleName: bytes(638) into ArrayAccess(640) at 0", "Insert NumberLiteral: 2(639) into ArrayAccess(640) at 1", "Insert SimpleName: bytes(647) into ArrayAccess(649) at 0", "Insert NumberLiteral: 3(648) into ArrayAccess(649) at 1", "Insert ArrayAccess(710) into InfixExpression: &(712) at 0", "Insert NumberLiteral: 0xFFL(711) into InfixExpression: &(712) at 1", "Insert SimpleName: i(714) into InfixExpression: *(716) at 0", "Insert NumberLiteral: 8(715) into InfixExpression: *(716) at 1", "Insert SimpleName: bytes(741) into ArrayAccess(743) at 0", "Insert NumberLiteral: 0(742) into ArrayAccess(743) at 1", "Insert InfixExpression: <<(774) into ParenthesizedExpression(775) at 0", "Insert SimpleName: bytes(708) into ArrayAccess(710) at 0", "Insert SimpleName: i(709) into ArrayAccess(710) at 1", "Insert ParenthesizedExpression(769) into InfixExpression: <<(774) at 0", "Insert ParenthesizedExpression(773) into InfixExpression: <<(774) at 1", "Insert InfixExpression: &(768) into ParenthesizedExpression(769) at 0", "Insert InfixExpression: *(772) into ParenthesizedExpression(773) at 0", "Insert ArrayAccess(766) into InfixExpression: &(768) at 0", "Insert NumberLiteral: 0xFF(767) into InfixExpression: &(768) at 1", "Insert SimpleName: i(770) into InfixExpression: *(772) at 0", "Insert NumberLiteral: 8(771) into InfixExpression: *(772) at 1", "Insert SimpleName: bytes(764) into ArrayAccess(766) at 0", "Insert SimpleName: i(765) into ArrayAccess(766) at 1"]}}, {"HashCodes_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 6", "operations": ["INS TextElement:  instead. This method is scheduled to be removed in to TagElement: @deprecated at 2", "INS TextElement:  Use  to TagElement: @deprecated at 0", "INS SimpleName: HashCode to MemberRef at 0", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS MemberRef to TagElement: @link at 0", "INS TagElement: @deprecated to Javadoc at 1", "INS SimpleName: fromInt to MemberRef at 1", "INS TextElement: Guava 16.0. to TagElement: @deprecated at 3", "INS TagElement: @link to TagElement: @deprecated at 1", "INS Javadoc to MethodDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS MemberRef to TagElement: @link at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleName: fromLong to MemberRef at 1", "INS TextElement:  Use  to TagElement: @deprecated at 0", "INS SimpleName: HashCode to MemberRef at 0", "INS Javadoc to MethodDeclaration at 0", "INS TextElement: Guava 16.0. to TagElement: @deprecated at 3", "INS TagElement: @deprecated to Javadoc at 1", "INS TagElement: @link to TagElement: @deprecated at 1", "INS TextElement:  instead. This method is scheduled to be removed in to TagElement: @deprecated at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 8", "INS Modifier: static to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 2", "MOV MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "UPDATE from public to static", "operations": ["UPD Modifier: public from public to static", "UPD Modifier: public from public to static"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: HashCode to MethodDeclaration at 4"]}, {"root": "UPDATE from asInt to fromInt", "operations": ["UPD SimpleName: asInt from asInt to fromInt", "UPD SimpleName: toLong from toLong to fromInt"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: asInt to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 7"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 2", "MOV MarkerAnnotation to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 7", "MOV Modifier: public to MethodDeclaration at 3", "MOV SimpleName: asBytes to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: HashCode to MethodDeclaration at 4"]}, {"root": "UPDATE from asBytes to fromLong", "operations": ["UPD SimpleName: asBytes from asBytes to fromLong"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 7", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV Javadoc to MethodDeclaration at 0", "MOV SimpleName: fromBytes to MethodDeclaration at 5", "MOV SimpleType: HashCode to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 1", "MOV Modifier: public to MethodDeclaration at 2"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement to Javadoc at 0"]}, {"root": "UPDATE from Override to Deprecated", "operations": ["UPD SimpleName: Override from Override to Deprecated", "UPD SimpleName: Override from Override to Deprecated", "UPD SimpleName: Override from Override to Deprecated"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement to Javadoc at 0"]}, {"root": "INS TagElement: @deprecated to Javadoc at 1", "operations": ["INS TextElement:  Use  to TagElement: @deprecated at 0", "INS TagElement: @link to TagElement: @deprecated at 1", "INS MemberRef to TagElement: @link at 0", "INS TagElement: @deprecated to Javadoc at 1", "INS TextElement:  instead. This method is scheduled to be removed in to TagElement: @deprecated at 2", "INS TextElement: Guava 16.0. to TagElement: @deprecated at 3", "INS SimpleName: HashCode to MemberRef at 0", "INS SimpleName: fromBytes to MemberRef at 1"]}, {"root": "UPDATE from , of which the bytes will form the passed int, interpreted  to , of which the bytes will form the passed int, interpreted", "operations": ["UPD TextElement: , of which the bytes will form the passed int, interpreted  from , of which the bytes will form the passed int, interpreted  to , of which the bytes will form the passed int, interpreted"]}, {"root": "UPDATE from , of which the bytes will form the passed long, interpreted  to , of which the bytes will form the passed long, interpreted", "operations": ["UPD TextElement: , of which the bytes will form the passed long, interpreted  from , of which the bytes will form the passed long, interpreted  to , of which the bytes will form the passed long, interpreted"]}, {"root": "INS MethodInvocation to ReturnStatement at 0", "operations": ["INS SimpleName: HashCode to MethodInvocation at 0", "INS SimpleName: hash to MethodInvocation at 2", "INS SimpleName: fromLong to MethodInvocation at 1", "INS MethodInvocation to ReturnStatement at 0"]}, {"root": "UPDATE from UnsignedInts to HashCode", "operations": ["UPD SimpleName: UnsignedInts from UnsignedInts to HashCode"]}, {"root": "INS SimpleName: HashCode to MethodInvocation at 0", "operations": ["INS SimpleName: HashCode to MethodInvocation at 0"]}, {"root": "UPDATE from fromBytesNoCopy to fromBytes", "operations": ["UPD SimpleName: fromBytesNoCopy from fromBytesNoCopy to fromBytes"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: bytes to MethodInvocation at 2"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.base.Preconditions.checkArgument"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.base.Preconditions.checkNotNull", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.base.Preconditions.checkState"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.primitives.UnsignedInts", "DEL ImportDeclaration"]}, {"root": "DEL ArrayCreation", "operations": ["DEL InfixExpression: >>", "DEL ParenthesizedExpression", "DEL Dimension", "DEL PrimitiveType: byte", "DEL PrimitiveType: byte", "DEL InfixExpression: >>", "DEL NumberLiteral: 48", "DEL CastExpression", "DEL NumberLiteral: 56", "DEL SimpleName: hash", "DEL PrimitiveType: byte", "DEL InfixExpression: >>", "DEL ArrayCreation", "DEL SimpleName: hash", "DEL NumberLiteral: 8", "DEL NumberLiteral: 24", "DEL CastExpression", "DEL CastExpression", "DEL PrimitiveType: byte", "DEL InfixExpression: >>", "DEL CastExpression", "DEL NumberLiteral: 16", "DEL PrimitiveType: byte", "DEL NumberLiteral: 32", "DEL SimpleName: hash", "DEL InfixExpression: >>", "DEL ParenthesizedExpression", "DEL ArrayInitializer", "DEL CastExpression", "DEL SimpleName: hash", "DEL InfixExpression: >>", "DEL NumberLiteral: 40", "DEL ParenthesizedExpression", "DEL ParenthesizedExpression", "DEL InfixExpression: >>", "DEL SimpleName: hash", "DEL CastExpression", "DEL SimpleName: hash", "DEL ParenthesizedExpression", "DEL ParenthesizedExpression", "DEL ArrayType: byte[]", "DEL PrimitiveType: byte", "DEL SimpleName: hash", "DEL PrimitiveType: byte", "DEL PrimitiveType: byte", "DEL CastExpression", "DEL SimpleName: hash", "DEL ParenthesizedExpression", "DEL PrimitiveType: byte", "DEL CastExpression"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: checkArgument", "DEL StringLiteral: \"A HashCode must contain at least 1 byte.\"", "DEL NumberLiteral: 1", "DEL InfixExpression: >=", "DEL ExpressionStatement", "DEL QualifiedName: bytes.length", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: clone", "DEL MethodInvocation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL ReturnStatement", "DEL SimpleName: IntHashCode", "DEL MethodDeclaration", "DEL Modifier: static", "DEL ClassInstanceCreation", "DEL Javadoc", "DEL SimpleType: IntHashCode", "DEL SimpleName: HashCode", "DEL SimpleName: hash", "DEL SimpleType: HashCode", "DEL Block", "DEL SimpleName: fromInt"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL CastExpression", "DEL MethodDeclaration", "DEL ArrayType: byte[]", "DEL Modifier: final", "DEL Assignment: =", "DEL MarkerAnnotation", "DEL NumberLiteral: 8", "DEL SimpleType: IllegalStateException", "DEL PrimitiveType: int", "DEL Block", "DEL ArrayInitializer", "DEL Block", "DEL PrimitiveType: int", "DEL SimpleName: IntHashCode", "DEL SimpleName: bits", "DEL Dimension", "DEL Block", "DEL SimpleName: hash", "DEL PrimitiveType: int", "DEL NumberLiteral: 24", "DEL SimpleName: hash", "DEL MarkerAnnotation", "DEL MethodDeclaration", "DEL Block", "DEL PrimitiveType: byte", "DEL SimpleName: hash", "DEL FieldAccess", "DEL ArrayCreation", "DEL Modifier: public", "DEL ParenthesizedExpression", "DEL NumberLiteral: 0", "DEL SingleVariableDeclaration", "DEL SimpleName: hash", "DEL SimpleName: padToLong", "DEL CastExpression", "DEL TypeDeclaration: class", "DEL SimpleName: serialVersionUID", "DEL Modifier: private", "DEL InfixExpression: >>", "DEL PrimitiveType: byte", "DEL Modifier: public", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL PrimitiveType: long", "DEL ArrayType: byte[]", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL MarkerAnnotation", "DEL SimpleName: hash", "DEL SimpleName: IllegalStateException", "DEL CastExpression", "DEL SimpleName: Override", "DEL MarkerAnnotation", "DEL ParenthesizedExpression", "DEL Modifier: final", "DEL Modifier: private", "DEL SimpleName: hash", "DEL Block", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL SimpleName: Override", "DEL Modifier: final", "DEL MethodDeclaration", "DEL SimpleName: IntHashCode", "DEL SimpleName: Override", "DEL NumberLiteral: 16", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL ReturnStatement", "DEL ThrowStatement", "DEL ExpressionStatement", "DEL CastExpression", "DEL Dimension", "DEL MethodDeclaration", "DEL SimpleName: asBytes", "DEL NumberLiteral: 32", "DEL PrimitiveType: byte", "DEL ParenthesizedExpression", "DEL StringLiteral: \"this HashCode only has 32 bits; cannot create a long\"", "DEL Modifier: static", "DEL ClassInstanceCreation", "DEL InfixExpression: >>", "DEL ThisExpression", "DEL PrimitiveType: byte", "DEL FieldDeclaration", "DEL SimpleName: Override", "DEL SimpleType: Serializable", "DEL PrimitiveType: int", "DEL PrimitiveType: byte", "DEL InfixExpression: >>", "DEL SimpleName: Serializable", "DEL PrimitiveType: long", "DEL SimpleName: hash", "DEL PrimitiveType: long", "DEL SimpleName: asLong", "DEL SimpleName: hash", "DEL Modifier: static", "DEL PrimitiveType: byte", "DEL SimpleName: hash"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: LongHashCode", "DEL SimpleName: HashCode", "DEL ReturnStatement", "DEL Block", "DEL SimpleType: HashCode", "DEL Javadoc", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: LongHashCode", "DEL SimpleName: fromLong", "DEL ClassInstanceCreation", "DEL SimpleName: hash", "DEL Modifier: static"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: hash", "DEL SimpleName: asLong", "DEL PrimitiveType: byte", "DEL PrimitiveType: long", "DEL PrimitiveType: int", "DEL SimpleName: hash", "DEL ReturnStatement", "DEL FieldDeclaration", "DEL SimpleName: Override", "DEL FieldDeclaration", "DEL SimpleName: serialVersionUID", "DEL Modifier: private", "DEL NumberLiteral: 64", "DEL Block", "DEL PrimitiveType: int", "DEL SimpleName: LongHashCode", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL Block", "DEL Block", "DEL NumberLiteral: 0", "DEL MarkerAnnotation", "DEL Modifier: private", "DEL SimpleName: bits", "DEL SimpleName: hash", "DEL ThisExpression", "DEL SimpleName: Serializable", "DEL Modifier: public", "DEL MarkerAnnotation", "DEL CastExpression", "DEL PrimitiveType: long", "DEL PrimitiveType: int", "DEL Modifier: final", "DEL SimpleName: hash", "DEL SimpleName: LongHashCode", "DEL SimpleName: hash", "DEL Modifier: public", "DEL Block", "DEL SimpleType: Serializable", "DEL MethodDeclaration", "DEL SingleVariableDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: asInt", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL MethodDeclaration", "DEL Modifier: final", "DEL MarkerAnnotation", "DEL Modifier: final", "DEL FieldAccess", "DEL Modifier: static", "DEL MethodDeclaration", "DEL PrimitiveType: long", "DEL SimpleName: padToLong", "DEL Modifier: static", "DEL Assignment: =", "DEL ExpressionStatement", "DEL SimpleName: hash", "DEL Dimension", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: hash", "DEL PrimitiveType: long", "DEL SimpleName: Override", "DEL TypeDeclaration: class", "DEL MethodDeclaration", "DEL MethodDeclaration", "DEL SimpleName: Override", "DEL ArrayType: byte[]", "DEL PrimitiveType: long"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL Modifier: public", "DEL Modifier: static"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TextElement: Creates a ", "DEL SimpleType: HashCode", "DEL SingleVariableDeclaration", "DEL SimpleType: BytesHashCode", "DEL SimpleName: bytes", "DEL TextElement:  from a byte array. The array is <i>not</i> copied defensively, ", "DEL TagElement: @code", "DEL PrimitiveType: byte", "DEL ReturnStatement", "DEL SimpleName: BytesHashCode", "DEL TextElement:  HashCode", "DEL TagElement: @code", "DEL Dimension", "DEL SimpleName: HashCode", "DEL Javadoc", "DEL ArrayType: byte[]", "DEL SimpleName: fromBytesNoCopy", "DEL ClassInstanceCreation", "DEL TextElement: so it must be handed-off so as to preserve the immutability contract of ", "DEL Modifier: static", "DEL Block", "DEL MethodDeclaration", "DEL TextElement:  HashCode", "DEL TagElement", "DEL TextElement: .", "DEL SimpleName: bytes"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL PrimitiveType: byte", "DEL MethodInvocation", "DEL QualifiedName: bytes.length", "DEL PrimitiveType: int", "DEL SimpleName: bytes", "DEL ArrayAccess", "DEL ParenthesizedExpression", "DEL MethodDeclaration", "DEL SimpleName: Override", "DEL PrimitiveType: long", "DEL ArrayAccess", "DEL MarkerAnnotation", "DEL QualifiedName: bytes.length", "DEL NumberLiteral: 0", "DEL SimpleName: i", "DEL SimpleName: checkState", "DEL InfixExpression: >=", "DEL PostfixExpression: ++", "DEL QualifiedName: bytes.length", "DEL MarkerAnnotation", "DEL ReturnStatement", "DEL SimpleName: BytesHashCode", "DEL SimpleName: asInt", "DEL VariableDeclarationExpression", "DEL QualifiedName: bytes.length", "DEL SimpleName: Math", "DEL SimpleName: bytes", "DEL MethodInvocation", "DEL PrimitiveType: long", "DEL NumberLiteral: 3", "DEL SimpleName: val", "DEL FieldDeclaration", "DEL Block", "DEL Modifier: public", "DEL ReturnStatement", "DEL InfixExpression: &", "DEL NumberLiteral: 0xFF", "DEL MethodInvocation", "DEL StringLiteral: \"HashCode#asLong() requires >= 8 bytes (it only has %s bytes).\"", "DEL ParenthesizedExpression", "DEL Block", "DEL SimpleName: bytes", "DEL SimpleName: i", "DEL InfixExpression: <<", "DEL MethodDeclaration", "DEL NumberLiteral: 0xFF", "DEL NumberLiteral: 4", "DEL NumberLiteral: 0xFF", "DEL SimpleName: i", "DEL QualifiedName: bytes.length", "DEL IfStatement", "DEL Assignment: |=", "DEL MarkerAnnotation", "DEL SimpleName: asLong", "DEL InfixExpression: >=", "DEL SimpleName: i", "DEL SimpleName: bytes", "DEL Modifier: public", "DEL InfixExpression: <<", "DEL MethodDeclaration", "DEL MarkerAnnotation", "DEL InfixExpression: <<", "DEL ArrayType: byte[]", "DEL ParenthesizedExpression", "DEL NumberLiteral: 8", "DEL SimpleName: bytes", "DEL ExpressionStatement", "DEL NumberLiteral: 2", "DEL ThisExpression", "DEL SimpleType: Serializable", "DEL ForStatement", "DEL QualifiedName: bytes.length", "DEL ArrayType: byte[]", "DEL Block", "DEL NumberLiteral: 1", "DEL ParenthesizedExpression", "DEL PrimitiveType: int", "DEL VariableDeclarationFragment", "DEL SimpleName: Math", "DEL ReturnStatement", "DEL SimpleName: Override", "DEL SimpleName: retVal", "DEL VariableDeclarationStatement", "DEL FieldAccess", "DEL NumberLiteral: 8", "DEL SimpleName: bytes", "DEL MarkerAnnotation", "DEL NumberLiteral: 8", "DEL PrimitiveType: int", "DEL SimpleName: i", "DEL SimpleName: Override", "DEL InfixExpression: &", "DEL Modifier: static", "DEL SimpleName: min", "DEL Modifier: static", "DEL MethodInvocation", "DEL InfixExpression: >=", "DEL MethodDeclaration", "DEL QualifiedName: bytes.length", "DEL ArrayAccess", "DEL PrimitiveType: long", "DEL Dimension", "DEL FieldDeclaration", "DEL ReturnStatement", "DEL InfixExpression: *", "DEL InfixExpression: <", "DEL VariableDeclarationStatement", "DEL ParenthesizedExpression", "DEL ReturnStatement", "DEL NumberLiteral: 1", "DEL SimpleName: serialVersionUID", "DEL PrimitiveType: byte", "DEL ExpressionStatement", "DEL SimpleName: bytes", "DEL MethodInvocation", "DEL SimpleName: HashCode", "DEL SimpleName: Override", "DEL SimpleName: bytes", "DEL PrimitiveType: byte", "DEL SimpleName: Serializable", "DEL PostfixExpression: ++", "DEL Block", "DEL Modifier: public", "DEL PrimitiveType: int", "DEL SimpleName: padToLong", "DEL SimpleName: bytes", "DEL VariableDeclarationFragment", "DEL InfixExpression: <", "DEL ParenthesizedExpression", "DEL SimpleName: retVal", "DEL NumberLiteral: 0", "DEL ArrayAccess", "DEL NumberLiteral: 1", "DEL Modifier: final", "DEL ReturnStatement", "DEL ReturnStatement", "DEL InfixExpression: <<", "DEL NumberLiteral: 8", "DEL Modifier: final", "DEL NumberLiteral: 0xFF", "DEL PrimitiveType: int", "DEL Modifier: public", "DEL ParenthesizedExpression", "DEL Modifier: final", "DEL ExpressionStatement", "DEL SimpleName: bits", "DEL ArrayAccess", "DEL MethodDeclaration", "DEL NumberLiteral: 0xFF", "DEL InfixExpression: &", "DEL SimpleName: val", "DEL InfixExpression: &", "DEL QualifiedName: bytes.length", "DEL Block", "DEL VariableDeclarationFragment", "DEL InfixExpression: *", "DEL VariableDeclarationFragment", "DEL Assignment: =", "DEL Modifier: public", "DEL MethodDeclaration", "DEL StringLiteral: \"HashCode#asInt() requires >= 4 bytes (it only has %s bytes).\"", "DEL Modifier: private", "DEL SimpleName: BytesHashCode", "DEL PrimitiveType: long", "DEL NumberLiteral: 8", "DEL MethodInvocation", "DEL NumberLiteral: 0xFFL", "DEL VariableDeclarationFragment", "DEL SimpleName: Override", "DEL ParenthesizedExpression", "DEL InfixExpression: &", "DEL SimpleName: i", "DEL ForStatement", "DEL ExpressionStatement", "DEL NumberLiteral: 0xFF", "DEL SimpleName: min", "DEL NumberLiteral: 4", "DEL SimpleType: HashCode", "DEL ArrayAccess", "DEL TypeDeclaration: class", "DEL NumberLiteral: 24", "DEL VariableDeclarationExpression", "DEL SimpleName: bytes", "DEL SimpleName: hashCode", "DEL SimpleName: i", "DEL Assignment: |=", "DEL SimpleName: asInt", "DEL ParenthesizedExpression", "DEL InfixExpression: &", "DEL MethodDeclaration", "DEL SimpleName: val", "DEL Modifier: public", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL SimpleName: i", "DEL ArrayAccess", "DEL MarkerAnnotation", "DEL SimpleName: retVal", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleName: checkState", "DEL InfixExpression: |", "DEL Dimension", "DEL ParenthesizedExpression", "DEL SimpleName: Override", "DEL InfixExpression: &", "DEL NumberLiteral: 4", "DEL SimpleName: padToLong", "DEL SimpleName: clone", "DEL Block", "DEL InfixExpression: &", "DEL SimpleName: i", "DEL Modifier: private", "DEL SimpleName: checkNotNull", "DEL InfixExpression: <<", "DEL Block", "DEL NumberLiteral: 0", "DEL NumberLiteral: 0xFF", "DEL NumberLiteral: 8", "DEL SimpleName: bytes", "DEL SimpleName: asBytes", "DEL ParenthesizedExpression", "DEL Block", "DEL ParenthesizedExpression", "DEL ArrayAccess", "DEL NumberLiteral: 0", "DEL NumberLiteral: 16", "DEL ParenthesizedExpression", "DEL Block", "DEL SimpleName: bytes", "DEL MethodInvocation", "DEL SimpleName: bytes", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL InfixExpression: *", "DEL ArrayType: byte[]", "DEL Block", "DEL PrimitiveType: int", "DEL Dimension", "DEL ParenthesizedExpression"]}]}}, {"HashCodes_diff": {"operations": ["Insert MethodDeclaration(60) into TypeDeclaration: class(130) at 6", "Insert MethodDeclaration(92) into TypeDeclaration: class(130) at 7", "Insert MethodDeclaration(129) into TypeDeclaration: class(130) at 8", "Insert Javadoc(43) into MethodDeclaration(60) at 0", "Move MarkerAnnotation(85) into MethodDeclaration(60) at 1", "Move Modifier: public(86) into MethodDeclaration(60) at 2", "Update Modifier: public(95) to static", "Move Modifier: public(95) into MethodDeclaration(60) at 3", "Move SimpleType: HashCode(64) into MethodDeclaration(60) at 4", "Update SimpleName: asInt(133) to fromInt", "Move SimpleName: asInt(133) into MethodDeclaration(60) at 5", "Move SingleVariableDeclaration(51) into MethodDeclaration(60) at 6", "Move Block(160) into MethodDeclaration(60) at 7", "Insert Javadoc(75) into MethodDeclaration(92) at 0", "Move MarkerAnnotation(219) into MethodDeclaration(92) at 1", "Move Modifier: public(220) into MethodDeclaration(92) at 2", "Update Modifier: public(229) to static", "Move Modifier: public(229) into MethodDeclaration(92) at 3", "Move SimpleType: HashCode(198) into MethodDeclaration(92) at 4", "Update SimpleName: asBytes(233) to fromLong", "Move SimpleName: asBytes(233) into MethodDeclaration(92) at 5", "Move SingleVariableDeclaration(185) into MethodDeclaration(92) at 6", "Move Block(285) into MethodDeclaration(92) at 7", "Move Javadoc(334) into MethodDeclaration(129) at 0", "Move MarkerAnnotation(288) into MethodDeclaration(129) at 1", "Move Modifier: public(289) into MethodDeclaration(129) at 2", "Insert Modifier: static(114) into MethodDeclaration(129) at 3", "Move SimpleType: HashCode(338) into MethodDeclaration(129) at 4", "Move SimpleName: fromBytes(339) into MethodDeclaration(129) at 5", "Move SingleVariableDeclaration(344) into MethodDeclaration(129) at 6", "Move Block(358) into MethodDeclaration(129) at 7", "Move TagElement(42) into Javadoc(43) at 0", "Insert TagElement: @deprecated(42) into Javadoc(43) at 1", "Update SimpleName: Override(84) to Deprecated", "Move TagElement(176) into Javadoc(75) at 0", "Insert TagElement: @deprecated(74) into Javadoc(75) at 1", "Update SimpleName: Override(218) to Deprecated", "Insert TagElement: @deprecated(109) into Javadoc(110) at 1", "Update SimpleName: Override(287) to Deprecated", "Update TextElement: , of which the bytes will form the passed int, interpreted (40) to , of which the bytes will form the passed int, interpreted", "Insert TextElement:  Use (35) into TagElement: @deprecated(42) at 0", "Insert TagElement: @link(39) into TagElement: @deprecated(42) at 1", "Insert TextElement:  instead. This method is scheduled to be removed in(40) into TagElement: @deprecated(42) at 2", "Insert TextElement: Guava 16.0.(41) into TagElement: @deprecated(42) at 3", "Update TextElement: , of which the bytes will form the passed long, interpreted (174) to , of which the bytes will form the passed long, interpreted", "Insert TextElement:  Use (67) into TagElement: @deprecated(74) at 0", "Insert TagElement: @link(71) into TagElement: @deprecated(74) at 1", "Insert TextElement:  instead. This method is scheduled to be removed in(72) into TagElement: @deprecated(74) at 2", "Insert TextElement: Guava 16.0.(73) into TagElement: @deprecated(74) at 3", "Insert MethodInvocation(89) into ReturnStatement(90) at 0", "Insert TextElement:  Use (102) into TagElement: @deprecated(109) at 0", "Insert TagElement: @link(106) into TagElement: @deprecated(109) at 1", "Insert TextElement:  instead. This method is scheduled to be removed in(107) into TagElement: @deprecated(109) at 2", "Insert TextElement: Guava 16.0.(108) into TagElement: @deprecated(109) at 3", "Insert MemberRef(38) into TagElement: @link(39) at 0", "Update SimpleName: UnsignedInts(155) to HashCode", "Update SimpleName: toLong(156) to fromInt", "Insert MemberRef(70) into TagElement: @link(71) at 0", "Insert SimpleName: HashCode(86) into MethodInvocation(89) at 0", "Insert SimpleName: fromLong(87) into MethodInvocation(89) at 1", "Insert SimpleName: hash(88) into MethodInvocation(89) at 2", "Insert MemberRef(105) into TagElement: @link(106) at 0", "Insert SimpleName: HashCode(123) into MethodInvocation(126) at 0", "Update SimpleName: fromBytesNoCopy(352) to fromBytes", "Move SimpleName: bytes(353) into MethodInvocation(126) at 2", "Insert SimpleName: HashCode(36) into MemberRef(38) at 0", "Insert SimpleName: fromInt(37) into MemberRef(38) at 1", "Insert SimpleName: HashCode(68) into MemberRef(70) at 0", "Insert SimpleName: fromLong(69) into MemberRef(70) at 1", "Insert SimpleName: HashCode(103) into MemberRef(105) at 0", "Insert SimpleName: fromBytes(104) into MemberRef(105) at 1", "Delete QualifiedName: com.google.common.base.Preconditions.checkArgument(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: com.google.common.base.Preconditions.checkNotNull(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: com.google.common.base.Preconditions.checkState(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: com.google.common.primitives.UnsignedInts(10)", "Delete ImportDeclaration(11)", "Delete PrimitiveType: byte(234)", "Delete Dimension(235)", "Delete ArrayType: byte[](236)", "Delete PrimitiveType: byte(237)", "Delete SimpleName: hash(238)", "Delete CastExpression(239)", "Delete PrimitiveType: byte(240)", "Delete SimpleName: hash(241)", "Delete NumberLiteral: 8(242)", "Delete InfixExpression: >>(243)", "Delete ParenthesizedExpression(244)", "Delete CastExpression(245)", "Delete PrimitiveType: byte(246)", "Delete SimpleName: hash(247)", "Delete NumberLiteral: 16(248)", "Delete InfixExpression: >>(249)", "Delete ParenthesizedExpression(250)", "Delete CastExpression(251)", "Delete PrimitiveType: byte(252)", "Delete SimpleName: hash(253)", "Delete NumberLiteral: 24(254)", "Delete InfixExpression: >>(255)", "Delete ParenthesizedExpression(256)", "Delete CastExpression(257)", "Delete PrimitiveType: byte(258)", "Delete SimpleName: hash(259)", "Delete NumberLiteral: 32(260)", "Delete InfixExpression: >>(261)", "Delete ParenthesizedExpression(262)", "Delete CastExpression(263)", "Delete PrimitiveType: byte(264)", "Delete SimpleName: hash(265)", "Delete NumberLiteral: 40(266)", "Delete InfixExpression: >>(267)", "Delete ParenthesizedExpression(268)", "Delete CastExpression(269)", "Delete PrimitiveType: byte(270)", "Delete SimpleName: hash(271)", "Delete NumberLiteral: 48(272)", "Delete InfixExpression: >>(273)", "Delete ParenthesizedExpression(274)", "Delete CastExpression(275)", "Delete PrimitiveType: byte(276)", "Delete SimpleName: hash(277)", "Delete NumberLiteral: 56(278)", "Delete InfixExpression: >>(279)", "Delete ParenthesizedExpression(280)", "Delete CastExpression(281)", "Delete ArrayInitializer(282)", "Delete ArrayCreation(283)", "Delete SimpleName: checkArgument(345)", "Delete QualifiedName: bytes.length(346)", "Delete NumberLiteral: 1(347)", "Delete InfixExpression: >=(348)", "Delete StringLiteral: \"A HashCode must contain at least 1 byte.\"(349)", "Delete MethodInvocation(350)", "Delete ExpressionStatement(351)", "Delete SimpleName: clone(354)", "Delete MethodInvocation(355)", "Delete Javadoc(43)", "Delete Modifier: public(44)", "Delete Modifier: static(45)", "Delete SimpleName: HashCode(46)", "Delete SimpleType: HashCode(47)", "Delete SimpleName: fromInt(48)", "Delete SimpleName: IntHashCode(52)", "Delete SimpleType: IntHashCode(53)", "Delete SimpleName: hash(54)", "Delete ClassInstanceCreation(55)", "Delete ReturnStatement(56)", "Delete Block(57)", "Delete MethodDeclaration(58)", "Delete Modifier: private(59)", "Delete Modifier: static(60)", "Delete Modifier: final(61)", "Delete SimpleName: IntHashCode(62)", "Delete SimpleName: Serializable(65)", "Delete SimpleType: Serializable(66)", "Delete Modifier: final(67)", "Delete PrimitiveType: int(68)", "Delete SimpleName: hash(69)", "Delete VariableDeclarationFragment(70)", "Delete FieldDeclaration(71)", "Delete SimpleName: IntHashCode(72)", "Delete PrimitiveType: int(73)", "Delete SimpleName: hash(74)", "Delete SingleVariableDeclaration(75)", "Delete ThisExpression(76)", "Delete SimpleName: hash(77)", "Delete FieldAccess(78)", "Delete SimpleName: hash(79)", "Delete Assignment: =(80)", "Delete ExpressionStatement(81)", "Delete Block(82)", "Delete MethodDeclaration(83)", "Delete PrimitiveType: int(87)", "Delete SimpleName: bits(88)", "Delete NumberLiteral: 32(89)", "Delete ReturnStatement(90)", "Delete Block(91)", "Delete MethodDeclaration(92)", "Delete SimpleName: Override(93)", "Delete MarkerAnnotation(94)", "Delete PrimitiveType: byte(96)", "Delete Dimension(97)", "Delete ArrayType: byte[](98)", "Delete SimpleName: asBytes(99)", "Delete PrimitiveType: byte(100)", "Delete Dimension(101)", "Delete ArrayType: byte[](102)", "Delete PrimitiveType: byte(103)", "Delete SimpleName: hash(104)", "Delete CastExpression(105)", "Delete PrimitiveType: byte(106)", "Delete SimpleName: hash(107)", "Delete NumberLiteral: 8(108)", "Delete InfixExpression: >>(109)", "Delete ParenthesizedExpression(110)", "Delete CastExpression(111)", "Delete PrimitiveType: byte(112)", "Delete SimpleName: hash(113)", "Delete NumberLiteral: 16(114)", "Delete InfixExpression: >>(115)", "Delete ParenthesizedExpression(116)", "Delete CastExpression(117)", "Delete PrimitiveType: byte(118)", "Delete SimpleName: hash(119)", "Delete NumberLiteral: 24(120)", "Delete InfixExpression: >>(121)", "Delete ParenthesizedExpression(122)", "Delete CastExpression(123)", "Delete ArrayInitializer(124)", "Delete ArrayCreation(125)", "Delete ReturnStatement(126)", "Delete Block(127)", "Delete MethodDeclaration(128)", "Delete SimpleName: Override(129)", "Delete MarkerAnnotation(130)", "Delete Modifier: public(131)", "Delete PrimitiveType: int(132)", "Delete SimpleName: hash(134)", "Delete ReturnStatement(135)", "Delete Block(136)", "Delete MethodDeclaration(137)", "Delete SimpleName: Override(138)", "Delete MarkerAnnotation(139)", "Delete Modifier: public(140)", "Delete PrimitiveType: long(141)", "Delete SimpleName: asLong(142)", "Delete SimpleName: IllegalStateException(143)", "Delete SimpleType: IllegalStateException(144)", "Delete StringLiteral: \"this HashCode only has 32 bits; cannot create a long\"(145)", "Delete ClassInstanceCreation(146)", "Delete ThrowStatement(147)", "Delete Block(148)", "Delete MethodDeclaration(149)", "Delete SimpleName: Override(150)", "Delete MarkerAnnotation(151)", "Delete Modifier: public(152)", "Delete PrimitiveType: long(153)", "Delete SimpleName: padToLong(154)", "Delete MethodDeclaration(161)", "Delete Modifier: private(162)", "Delete Modifier: static(163)", "Delete Modifier: final(164)", "Delete PrimitiveType: long(165)", "Delete SimpleName: serialVersionUID(166)", "Delete NumberLiteral: 0(167)", "Delete VariableDeclarationFragment(168)", "Delete FieldDeclaration(169)", "Delete TypeDeclaration: class(170)", "Delete Javadoc(177)", "Delete Modifier: public(178)", "Delete Modifier: static(179)", "Delete SimpleName: HashCode(180)", "Delete SimpleType: HashCode(181)", "Delete SimpleName: fromLong(182)", "Delete SimpleName: LongHashCode(186)", "Delete SimpleType: LongHashCode(187)", "Delete SimpleName: hash(188)", "Delete ClassInstanceCreation(189)", "Delete ReturnStatement(190)", "Delete Block(191)", "Delete MethodDeclaration(192)", "Delete Modifier: private(193)", "Delete Modifier: static(194)", "Delete Modifier: final(195)", "Delete SimpleName: LongHashCode(196)", "Delete SimpleName: Serializable(199)", "Delete SimpleType: Serializable(200)", "Delete Modifier: final(201)", "Delete PrimitiveType: long(202)", "Delete SimpleName: hash(203)", "Delete VariableDeclarationFragment(204)", "Delete FieldDeclaration(205)", "Delete SimpleName: LongHashCode(206)", "Delete PrimitiveType: long(207)", "Delete SimpleName: hash(208)", "Delete SingleVariableDeclaration(209)", "Delete ThisExpression(210)", "Delete SimpleName: hash(211)", "Delete FieldAccess(212)", "Delete SimpleName: hash(213)", "Delete Assignment: =(214)", "Delete ExpressionStatement(215)", "Delete Block(216)", "Delete MethodDeclaration(217)", "Delete PrimitiveType: int(221)", "Delete SimpleName: bits(222)", "Delete NumberLiteral: 64(223)", "Delete ReturnStatement(224)", "Delete Block(225)", "Delete MethodDeclaration(226)", "Delete SimpleName: Override(227)", "Delete MarkerAnnotation(228)", "Delete PrimitiveType: byte(230)", "Delete Dimension(231)", "Delete ArrayType: byte[](232)", "Delete MethodDeclaration(286)", "Delete PrimitiveType: int(290)", "Delete SimpleName: asInt(291)", "Delete PrimitiveType: int(292)", "Delete SimpleName: hash(293)", "Delete CastExpression(294)", "Delete ReturnStatement(295)", "Delete Block(296)", "Delete MethodDeclaration(297)", "Delete SimpleName: Override(298)", "Delete MarkerAnnotation(299)", "Delete Modifier: public(300)", "Delete PrimitiveType: long(301)", "Delete SimpleName: asLong(302)", "Delete SimpleName: hash(303)", "Delete ReturnStatement(304)", "Delete Block(305)", "Delete MethodDeclaration(306)", "Delete SimpleName: Override(307)", "Delete MarkerAnnotation(308)", "Delete Modifier: public(309)", "Delete PrimitiveType: long(310)", "Delete SimpleName: padToLong(311)", "Delete SimpleName: hash(312)", "Delete ReturnStatement(313)", "Delete Block(314)", "Delete MethodDeclaration(315)", "Delete Modifier: private(316)", "Delete Modifier: static(317)", "Delete Modifier: final(318)", "Delete PrimitiveType: long(319)", "Delete SimpleName: serialVersionUID(320)", "Delete NumberLiteral: 0(321)", "Delete VariableDeclarationFragment(322)", "Delete FieldDeclaration(323)", "Delete TypeDeclaration: class(324)", "Delete Modifier: public(335)", "Delete Modifier: static(336)", "Delete MethodDeclaration(359)", "Delete TextElement: Creates a (360)", "Delete TextElement:  HashCode(361)", "Delete TagElement: @code(362)", "Delete TextElement:  from a byte array. The array is <i>not</i> copied defensively, (363)", "Delete TextElement: so it must be handed-off so as to preserve the immutability contract of (364)", "Delete TextElement:  HashCode(365)", "Delete TagElement: @code(366)", "Delete TextElement: .(367)", "Delete TagElement(368)", "Delete Javadoc(369)", "Delete Modifier: static(370)", "Delete SimpleName: HashCode(371)", "Delete SimpleType: HashCode(372)", "Delete SimpleName: fromBytesNoCopy(373)", "Delete PrimitiveType: byte(374)", "Delete Dimension(375)", "Delete ArrayType: byte[](376)", "Delete SimpleName: bytes(377)", "Delete SingleVariableDeclaration(378)", "Delete SimpleName: BytesHashCode(379)", "Delete SimpleType: BytesHashCode(380)", "Delete SimpleName: bytes(381)", "Delete ClassInstanceCreation(382)", "Delete ReturnStatement(383)", "Delete Block(384)", "Delete MethodDeclaration(385)", "Delete Modifier: private(386)", "Delete Modifier: static(387)", "Delete Modifier: final(388)", "Delete SimpleName: BytesHashCode(389)", "Delete SimpleName: HashCode(390)", "Delete SimpleType: HashCode(391)", "Delete SimpleName: Serializable(392)", "Delete SimpleType: Serializable(393)", "Delete Modifier: final(394)", "Delete PrimitiveType: byte(395)", "Delete Dimension(396)", "Delete ArrayType: byte[](397)", "Delete SimpleName: bytes(398)", "Delete VariableDeclarationFragment(399)", "Delete FieldDeclaration(400)", "Delete SimpleName: BytesHashCode(401)", "Delete PrimitiveType: byte(402)", "Delete Dimension(403)", "Delete ArrayType: byte[](404)", "Delete SimpleName: bytes(405)", "Delete SingleVariableDeclaration(406)", "Delete ThisExpression(407)", "Delete SimpleName: bytes(408)", "Delete FieldAccess(409)", "Delete SimpleName: checkNotNull(410)", "Delete SimpleName: bytes(411)", "Delete MethodInvocation(412)", "Delete Assignment: =(413)", "Delete ExpressionStatement(414)", "Delete Block(415)", "Delete MethodDeclaration(416)", "Delete SimpleName: Override(417)", "Delete MarkerAnnotation(418)", "Delete Modifier: public(419)", "Delete PrimitiveType: int(420)", "Delete SimpleName: bits(421)", "Delete QualifiedName: bytes.length(422)", "Delete NumberLiteral: 8(423)", "Delete InfixExpression: *(424)", "Delete ReturnStatement(425)", "Delete Block(426)", "Delete MethodDeclaration(427)", "Delete SimpleName: Override(428)", "Delete MarkerAnnotation(429)", "Delete Modifier: public(430)", "Delete PrimitiveType: byte(431)", "Delete Dimension(432)", "Delete ArrayType: byte[](433)", "Delete SimpleName: asBytes(434)", "Delete SimpleName: bytes(435)", "Delete SimpleName: clone(436)", "Delete MethodInvocation(437)", "Delete ReturnStatement(438)", "Delete Block(439)", "Delete MethodDeclaration(440)", "Delete SimpleName: Override(441)", "Delete MarkerAnnotation(442)", "Delete Modifier: public(443)", "Delete PrimitiveType: int(444)", "Delete SimpleName: asInt(445)", "Delete SimpleName: checkState(446)", "Delete QualifiedName: bytes.length(447)", "Delete NumberLiteral: 4(448)", "Delete InfixExpression: >=(449)", "Delete StringLiteral: \"HashCode#asInt() requires >= 4 bytes (it only has %s bytes).\"(450)", "Delete QualifiedName: bytes.length(451)", "Delete MethodInvocation(452)", "Delete ExpressionStatement(453)", "Delete SimpleName: bytes(454)", "Delete NumberLiteral: 0(455)", "Delete ArrayAccess(456)", "Delete NumberLiteral: 0xFF(457)", "Delete InfixExpression: &(458)", "Delete ParenthesizedExpression(459)", "Delete SimpleName: bytes(460)", "Delete NumberLiteral: 1(461)", "Delete ArrayAccess(462)", "Delete NumberLiteral: 0xFF(463)", "Delete InfixExpression: &(464)", "Delete ParenthesizedExpression(465)", "Delete NumberLiteral: 8(466)", "Delete InfixExpression: <<(467)", "Delete ParenthesizedExpression(468)", "Delete SimpleName: bytes(469)", "Delete NumberLiteral: 2(470)", "Delete ArrayAccess(471)", "Delete NumberLiteral: 0xFF(472)", "Delete InfixExpression: &(473)", "Delete ParenthesizedExpression(474)", "Delete NumberLiteral: 16(475)", "Delete InfixExpression: <<(476)", "Delete ParenthesizedExpression(477)", "Delete SimpleName: bytes(478)", "Delete NumberLiteral: 3(479)", "Delete ArrayAccess(480)", "Delete NumberLiteral: 0xFF(481)", "Delete InfixExpression: &(482)", "Delete ParenthesizedExpression(483)", "Delete NumberLiteral: 24(484)", "Delete InfixExpression: <<(485)", "Delete ParenthesizedExpression(486)", "Delete InfixExpression: |(487)", "Delete ReturnStatement(488)", "Delete Block(489)", "Delete MethodDeclaration(490)", "Delete SimpleName: Override(491)", "Delete MarkerAnnotation(492)", "Delete Modifier: public(493)", "Delete PrimitiveType: long(494)", "Delete SimpleName: asLong(495)", "Delete SimpleName: checkState(496)", "Delete QualifiedName: bytes.length(497)", "Delete NumberLiteral: 8(498)", "Delete InfixExpression: >=(499)", "Delete StringLiteral: \"HashCode#asLong() requires >= 8 bytes (it only has %s bytes).\"(500)", "Delete QualifiedName: bytes.length(501)", "Delete MethodInvocation(502)", "Delete ExpressionStatement(503)", "Delete SimpleName: padToLong(504)", "Delete MethodInvocation(505)", "Delete ReturnStatement(506)", "Delete Block(507)", "Delete MethodDeclaration(508)", "Delete SimpleName: Override(509)", "Delete MarkerAnnotation(510)", "Delete Modifier: public(511)", "Delete PrimitiveType: long(512)", "Delete SimpleName: padToLong(513)", "Delete PrimitiveType: long(514)", "Delete SimpleName: retVal(515)", "Delete SimpleName: bytes(516)", "Delete NumberLiteral: 0(517)", "Delete ArrayAccess(518)", "Delete NumberLiteral: 0xFF(519)", "Delete InfixExpression: &(520)", "Delete ParenthesizedExpression(521)", "Delete VariableDeclarationFragment(522)", "Delete VariableDeclarationStatement(523)", "Delete PrimitiveType: int(524)", "Delete SimpleName: i(525)", "Delete NumberLiteral: 1(526)", "Delete VariableDeclarationFragment(527)", "Delete VariableDeclarationExpression(528)", "Delete SimpleName: i(529)", "Delete SimpleName: Math(530)", "Delete SimpleName: min(531)", "Delete QualifiedName: bytes.length(532)", "Delete NumberLiteral: 8(533)", "Delete MethodInvocation(534)", "Delete InfixExpression: <(535)", "Delete SimpleName: i(536)", "Delete PostfixExpression: ++(537)", "Delete SimpleName: retVal(538)", "Delete SimpleName: bytes(539)", "Delete SimpleName: i(540)", "Delete ArrayAccess(541)", "Delete NumberLiteral: 0xFFL(542)", "Delete InfixExpression: &(543)", "Delete ParenthesizedExpression(544)", "Delete SimpleName: i(545)", "Delete NumberLiteral: 8(546)", "Delete InfixExpression: *(547)", "Delete ParenthesizedExpression(548)", "Delete InfixExpression: <<(549)", "Delete Assignment: |=(550)", "Delete ExpressionStatement(551)", "Delete Block(552)", "Delete ForStatement(553)", "Delete SimpleName: retVal(554)", "Delete ReturnStatement(555)", "Delete Block(556)", "Delete MethodDeclaration(557)", "Delete SimpleName: Override(558)", "Delete MarkerAnnotation(559)", "Delete Modifier: public(560)", "Delete PrimitiveType: int(561)", "Delete SimpleName: hashCode(562)", "Delete QualifiedName: bytes.length(563)", "Delete NumberLiteral: 4(564)", "Delete InfixExpression: >=(565)", "Delete SimpleName: asInt(566)", "Delete MethodInvocation(567)", "Delete ReturnStatement(568)", "Delete Block(569)", "Delete PrimitiveType: int(570)", "Delete SimpleName: val(571)", "Delete SimpleName: bytes(572)", "Delete NumberLiteral: 0(573)", "Delete ArrayAccess(574)", "Delete NumberLiteral: 0xFF(575)", "Delete InfixExpression: &(576)", "Delete ParenthesizedExpression(577)", "Delete VariableDeclarationFragment(578)", "Delete VariableDeclarationStatement(579)", "Delete PrimitiveType: int(580)", "Delete SimpleName: i(581)", "Delete NumberLiteral: 1(582)", "Delete VariableDeclarationFragment(583)", "Delete VariableDeclarationExpression(584)", "Delete SimpleName: i(585)", "Delete SimpleName: Math(586)", "Delete SimpleName: min(587)", "Delete QualifiedName: bytes.length(588)", "Delete NumberLiteral: 4(589)", "Delete MethodInvocation(590)", "Delete InfixExpression: <(591)", "Delete SimpleName: i(592)", "Delete PostfixExpression: ++(593)", "Delete SimpleName: val(594)", "Delete SimpleName: bytes(595)", "Delete SimpleName: i(596)", "Delete ArrayAccess(597)", "Delete NumberLiteral: 0xFF(598)", "Delete InfixExpression: &(599)", "Delete ParenthesizedExpression(600)", "Delete SimpleName: i(601)", "Delete NumberLiteral: 8(602)", "Delete InfixExpression: *(603)", "Delete ParenthesizedExpression(604)", "Delete InfixExpression: <<(605)", "Delete ParenthesizedExpression(606)", "Delete Assignment: |=(607)", "Delete ExpressionStatement(608)", "Delete Block(609)", "Delete ForStatement(610)", "Delete SimpleName: val(611)", "Delete ReturnStatement(612)", "Delete Block(613)", "Delete IfStatement(614)", "Delete Block(615)", "Delete MethodDeclaration(616)", "Delete Modifier: private(617)", "Delete Modifier: static(618)", "Delete Modifier: final(619)", "Delete PrimitiveType: long(620)", "Delete SimpleName: serialVersionUID(621)", "Delete NumberLiteral: 0(622)", "Delete VariableDeclarationFragment(623)", "Delete FieldDeclaration(624)", "Delete TypeDeclaration: class(625)"]}}, {"Hashing_cluster": {"actions": [{"root": "UPDATE from HashCodes to HashCode", "operations": ["UPD SimpleName: HashCodes from HashCodes to HashCode", "UPD SimpleName: HashCodes from HashCodes to HashCode", "UPD SimpleName: HashCodes from HashCodes to HashCode"]}]}}, {"Hashing_diff": {"operations": ["Update SimpleName: HashCodes(970) to HashCode", "Update SimpleName: HashCodes(1081) to HashCode", "Update SimpleName: HashCodes(1209) to HashCode"]}}, {"MessageDigestHashFunction_cluster": {"actions": [{"root": "UPDATE from HashCodes to HashCode", "operations": ["UPD SimpleName: HashCodes from HashCodes to HashCode", "UPD SimpleName: HashCodes from HashCodes to HashCode"]}]}}, {"MessageDigestHashFunction_diff": {"operations": ["Update SimpleName: HashCodes(514) to HashCode", "Update SimpleName: HashCodes(520) to HashCode"]}}, {"Murmur3_cluster": {"actions": [{"root": "UPDATE from hashString to hashUnencodedChars", "operations": ["UPD SimpleName: hashString from hashString to hashUnencodedChars"]}]}}, {"Murmur3_diff": {"operations": ["Update SimpleName: hashString(246) to hashUnencodedChars"]}}, {"Murmur3_cluster": {"actions": [{"root": "UPDATE from hashString to hashUnencodedChars", "operations": ["UPD SimpleName: hashString from hashString to hashUnencodedChars"]}]}}, {"Murmur3_diff": {"operations": ["Update SimpleName: hashString(246) to hashUnencodedChars"]}}, {"SipHashFunction_cluster": {"actions": [{"root": "UPDATE from HashCodes to HashCode", "operations": ["UPD SimpleName: HashCodes from HashCodes to HashCode"]}]}}, {"SipHashFunction_diff": {"operations": ["Update SimpleName: HashCodes(432) to HashCode"]}}], "commit_stats": [{"total_files": 17, "deleted_files": 1, "testing": "True", "maintenance": "False", "build": "False"}]}