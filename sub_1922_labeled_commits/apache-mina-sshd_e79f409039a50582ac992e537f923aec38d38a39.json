{"application": "apache-mina-sshd", "csha": "e79f409039a50582ac992e537f923aec38d38a39", "files": [{"Nio2Session_cluster": {"actions": [{"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: writeLen to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: writeLen to SingleVariableDeclaration at 1"]}, {"root": "INS Block to MethodDeclaration at 9", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: exc to MethodInvocation at 3", "INS SimpleName: isTraceEnabled to MethodInvocation at 1", "INS SimpleName: debug to MethodInvocation at 1", "INS SimpleName: getSimpleName to MethodInvocation at 1", "INS SimpleName: getClass to MethodInvocation at 1", "INS Block to MethodDeclaration at 9", "INS IfStatement to Block at 0", "INS SimpleName: trace to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 6", "INS StringLiteral: \" failure details\" to InfixExpression: + at 4", "INS MethodInvocation to IfStatement at 0", "INS StringLiteral: \") len=\" to InfixExpression: + at 2", "INS SimpleName: log to MethodInvocation at 0", "INS SimpleName: writeLen to InfixExpression: + at 3", "INS SimpleName: writeLen to MethodInvocation at 5", "INS SimpleName: log to MethodInvocation at 0", "INS SimpleName: exc to MethodInvocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: log to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \"handleWriteCycleFailure(\" to InfixExpression: + at 0", "INS SimpleName: log to MethodInvocation at 0", "INS IfStatement to Block at 1", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: getMessage to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 4", "INS StringLiteral: \"handleWriteCycleFailure({}) failed ({}) to write {} bytes: {}\" to MethodInvocation at 2", "INS ThisExpression to MethodInvocation at 3", "INS ThisExpression to InfixExpression: + at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: exc to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS VariableDeclarationStatement to Block at 0", "INS SimpleName: writeLen to VariableDeclarationFragment at 0", "INS SimpleName: buffer to MethodInvocation at 0", "INS Modifier: final to VariableDeclarationStatement at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: remaining to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4", "MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 1"]}, {"root": "UPDATE from \"handleCompletedWriteCycle({}) finished writing\" to \"handleCompletedWriteCycle({}) finished writing len={}\"", "operations": ["UPD StringLiteral: \"handleCompletedWriteCycle({}) finished writing\" from \"handleCompletedWriteCycle({}) finished writing\" to \"handleCompletedWriteCycle({}) finished writing len={}\""]}, {"root": "INS SimpleName: writeLen to MethodInvocation at 4", "operations": ["INS SimpleName: writeLen to MethodInvocation at 4"]}, {"root": "INS SimpleName: writeLen to MethodInvocation at 4", "operations": ["INS SimpleName: writeLen to MethodInvocation at 4"]}, {"root": "INS SimpleName: writeLen to MethodInvocation at 4", "operations": ["INS SimpleName: writeLen to MethodInvocation at 4"]}, {"root": "UPDATE from \") Exception caught while writing\" to \") Exception caught while writing \"", "operations": ["UPD StringLiteral: \") Exception caught while writing\" from \") Exception caught while writing\" to \") Exception caught while writing \""]}, {"root": "INS SimpleName: writeLen to InfixExpression: + at 3", "operations": ["INS SimpleName: writeLen to InfixExpression: + at 3"]}, {"root": "INS StringLiteral: \" bytes\" to InfixExpression: + at 4", "operations": ["INS StringLiteral: \" bytes\" to InfixExpression: + at 4"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"Nio2Session_diff": {"operations": ["Insert SingleVariableDeclaration(1432) into MethodDeclaration(1516) at 6", "Insert SingleVariableDeclaration(1534) into MethodDeclaration(1593) at 6", "Insert Block(1592) into MethodDeclaration(1593) at 9", "Insert VariableDeclarationStatement(1353) into Block(1413) at 0", "Insert PrimitiveType: int(1430) into SingleVariableDeclaration(1432) at 0", "Insert SimpleName: writeLen(1431) into SingleVariableDeclaration(1432) at 1", "Insert PrimitiveType: int(1532) into SingleVariableDeclaration(1534) at 0", "Insert SimpleName: writeLen(1533) into SingleVariableDeclaration(1534) at 1", "Insert IfStatement(1562) into Block(1592) at 0", "Insert IfStatement(1578) into Block(1592) at 1", "Move ExpressionStatement(1528) into Block(1592) at 2", "Move ExpressionStatement(1532) into Block(1592) at 3", "Move ExpressionStatement(1536) into Block(1592) at 4", "Insert Modifier: final(1346) into VariableDeclarationStatement(1353) at 0", "Insert PrimitiveType: int(1347) into VariableDeclarationStatement(1353) at 1", "Insert VariableDeclarationFragment(1352) into VariableDeclarationStatement(1353) at 2", "Insert MethodInvocation(1545) into IfStatement(1562) at 0", "Insert Block(1561) into IfStatement(1562) at 1", "Insert MethodInvocation(1565) into IfStatement(1578) at 0", "Insert Block(1577) into IfStatement(1578) at 1", "Insert SimpleName: writeLen(1348) into VariableDeclarationFragment(1352) at 0", "Insert MethodInvocation(1351) into VariableDeclarationFragment(1352) at 1", "Move ExpressionStatement(1469) into Block(1513) at 1", "Move ExpressionStatement(1473) into Block(1513) at 2", "Insert SimpleName: log(1543) into MethodInvocation(1545) at 0", "Insert SimpleName: isDebugEnabled(1544) into MethodInvocation(1545) at 1", "Insert ExpressionStatement(1560) into Block(1561) at 0", "Insert SimpleName: log(1563) into MethodInvocation(1565) at 0", "Insert SimpleName: isTraceEnabled(1564) into MethodInvocation(1565) at 1", "Insert ExpressionStatement(1576) into Block(1577) at 0", "Insert SimpleName: buffer(1349) into MethodInvocation(1351) at 0", "Insert SimpleName: remaining(1350) into MethodInvocation(1351) at 1", "Insert MethodInvocation(1559) into ExpressionStatement(1560) at 0", "Insert MethodInvocation(1575) into ExpressionStatement(1576) at 0", "Insert SimpleName: log(1546) into MethodInvocation(1559) at 0", "Insert SimpleName: debug(1547) into MethodInvocation(1559) at 1", "Insert StringLiteral: \"handleWriteCycleFailure({}) failed ({}) to write {} bytes: {}\"(1548) into MethodInvocation(1559) at 2", "Insert ThisExpression(1549) into MethodInvocation(1559) at 3", "Insert MethodInvocation(1554) into MethodInvocation(1559) at 4", "Insert SimpleName: writeLen(1555) into MethodInvocation(1559) at 5", "Insert MethodInvocation(1558) into MethodInvocation(1559) at 6", "Insert SimpleName: log(1566) into MethodInvocation(1575) at 0", "Insert SimpleName: trace(1567) into MethodInvocation(1575) at 1", "Insert InfixExpression: +(1573) into MethodInvocation(1575) at 2", "Insert SimpleName: exc(1574) into MethodInvocation(1575) at 3", "Move ExpressionStatement(1492) into Block(1489) at 1", "Move ExpressionStatement(1496) into Block(1489) at 2", "Insert MethodInvocation(1552) into MethodInvocation(1554) at 0", "Insert SimpleName: getSimpleName(1553) into MethodInvocation(1554) at 1", "Insert SimpleName: exc(1556) into MethodInvocation(1558) at 0", "Insert SimpleName: getMessage(1557) into MethodInvocation(1558) at 1", "Insert StringLiteral: \"handleWriteCycleFailure(\"(1568) into InfixExpression: +(1573) at 0", "Insert ThisExpression(1569) into InfixExpression: +(1573) at 1", "Insert StringLiteral: \") len=\"(1570) into InfixExpression: +(1573) at 2", "Insert SimpleName: writeLen(1571) into InfixExpression: +(1573) at 3", "Insert StringLiteral: \" failure details\"(1572) into InfixExpression: +(1573) at 4", "Update StringLiteral: \"handleCompletedWriteCycle({}) finished writing\"(1483) to \"handleCompletedWriteCycle({}) finished writing len={}\"", "Insert SimpleName: writeLen(1500) into MethodInvocation(1501) at 4", "Insert SimpleName: exc(1550) into MethodInvocation(1552) at 0", "Insert SimpleName: getClass(1551) into MethodInvocation(1552) at 1", "Insert SimpleName: writeLen(1378) into MethodInvocation(1382) at 4", "Insert SimpleName: writeLen(1403) into MethodInvocation(1406) at 4", "Update StringLiteral: \") Exception caught while writing\"(1459) to \") Exception caught while writing \"", "Insert SimpleName: writeLen(1473) into InfixExpression: +(1475) at 3", "Insert StringLiteral: \" bytes\"(1474) into InfixExpression: +(1475) at 4", "Delete Block(1537)"]}}], "commit_stats": [{"total_files": 1, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}