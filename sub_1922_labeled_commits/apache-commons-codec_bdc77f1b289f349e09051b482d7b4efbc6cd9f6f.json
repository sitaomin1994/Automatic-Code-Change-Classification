{"application": "apache-commons-codec", "csha": "bdc77f1b289f349e09051b482d7b4efbc6cd9f6f", "files": [{"QuotedPrintableCodec_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 8", "operations": ["INS Modifier: private to FieldDeclaration at 1", "INS SimpleName: strict to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS Modifier: final to FieldDeclaration at 2", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS TagElement to Javadoc at 0", "INS TextElement: Indicates whether soft line breaks shall be used during encoding (rule #3-5). to TagElement at 0", "INS Javadoc to FieldDeclaration at 0", "INS PrimitiveType: boolean to FieldDeclaration at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 13", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 13", "INS SimpleName: CR to VariableDeclarationFragment at 0", "INS NumberLiteral: 13 to VariableDeclarationFragment at 1", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS PrimitiveType: byte to FieldDeclaration at 3", "INS Modifier: final to FieldDeclaration at 2"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 14", "operations": ["INS Modifier: final to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 1", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS SimpleName: LF to VariableDeclarationFragment at 0", "INS FieldDeclaration to TypeDeclaration: class at 14", "INS PrimitiveType: byte to FieldDeclaration at 3", "INS NumberLiteral: 10 to VariableDeclarationFragment at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 15", "operations": ["INS TagElement to Javadoc at 0", "INS Modifier: static to FieldDeclaration at 2", "INS Modifier: private to FieldDeclaration at 1", "INS SimpleName: SAFE_LENGTH to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 3", "INS PrimitiveType: int to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 15", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS NumberLiteral: 73 to VariableDeclarationFragment at 1", "INS Javadoc to FieldDeclaration at 0", "INS TextElement: Safe line length for quoted printable encoded text. to TagElement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS ConstructorInvocation to Block at 0", "INS SimpleName: QuotedPrintableCodec to MethodDeclaration at 2", "INS Block to MethodDeclaration at 4", "INS SimpleName: charset to ConstructorInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS BooleanLiteral: false to ConstructorInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 19"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 20", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 20", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: QuotedPrintableCodec to MethodDeclaration at 2", "INS TagElement: @param to Javadoc at 2", "INS TextElement: the default string charset to use. to TagElement: @param at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleType: Charset to SingleVariableDeclaration at 1", "INS TextElement:  1.10 to TagElement: @since at 0", "INS TagElement: @since to Javadoc at 3", "INS SimpleName: charset to TagElement: @param at 0", "INS TextElement:  true to TagElement: @code at 0", "INS TextElement: Constructor which allows for the selection of a default charset and strict mode. to TagElement at 0", "INS TagElement: @code to TagElement: @param at 2", "INS TextElement: , soft line breaks will be used to TagElement: @param at 3", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Javadoc to MethodDeclaration at 0", "INS TagElement to Javadoc at 0", "INS TextElement: if  to TagElement: @param at 1", "INS SimpleName: strict to SingleVariableDeclaration at 2", "INS SimpleName: Charset to SimpleType: Charset at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: strict to TagElement: @param at 0", "INS SimpleName: charset to SingleVariableDeclaration at 2", "INS PrimitiveType: boolean to SingleVariableDeclaration at 1", "INS TagElement: @param to Javadoc at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 23", "operations": ["INS InfixExpression: + to Assignment: = at 1", "INS ReturnStatement to Block at 2", "INS NumberLiteral: 256 to InfixExpression: + at 0", "INS SimpleName: getUnsignedOctet to MethodDeclaration at 4", "INS TextElement:  the unsigned octet at position <code>index</code> from the array to TagElement: @return at 0", "INS Modifier: private to MethodDeclaration at 1", "INS SimpleName: bytes to SingleVariableDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: index to TagElement: @param at 0", "INS SimpleName: b to InfixExpression: + at 1", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS SimpleName: bytes to ArrayAccess at 0", "INS SimpleName: index to ArrayAccess at 1", "INS TextElement: the byte array to TagElement: @param at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS TagElement: @return to Javadoc at 3", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: b to VariableDeclarationFragment at 0", "INS TextElement: Return the byte at position <code>index</code> of the byte array and to TagElement at 0", "INS Block to IfStatement at 1", "INS SimpleName: bytes to TagElement: @param at 0", "INS PrimitiveType: int to MethodDeclaration at 3", "INS ArrayType: byte[] to SingleVariableDeclaration at 1", "INS IfStatement to Block at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: b to ReturnStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS TextElement: position in the array to TagElement: @param at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 1", "INS SimpleName: b to Assignment: = at 0", "INS TextElement: make sure it is unsigned. to TagElement at 1", "INS Block to MethodDeclaration at 7", "INS TagElement: @param to Javadoc at 2", "INS Modifier: static to MethodDeclaration at 2", "INS Dimension to ArrayType: byte[] at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS InfixExpression: < to IfStatement at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS ArrayAccess to VariableDeclarationFragment at 1", "INS NumberLiteral: 0 to InfixExpression: < at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: index to SingleVariableDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 23", "INS SimpleName: b to InfixExpression: < at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 24", "operations": ["INS NumberLiteral: 1 to ReturnStatement at 0", "INS TagElement: @param to Javadoc at 3", "INS SimpleName: encodeQuotedPrintable to MethodInvocation at 0", "INS SimpleName: b to TagElement: @param at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Modifier: private to MethodDeclaration at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 1", "INS TextElement:  the number of bytes that have been written to the buffer to TagElement: @return at 0", "INS SimpleName: buffer to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS TextElement: indicates whether the octet shall be encoded to TagElement: @param at 1", "INS SimpleName: write to MethodInvocation at 1", "INS SimpleName: encode to IfStatement at 0", "INS SimpleName: buffer to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 24", "INS PrimitiveType: int to MethodDeclaration at 3", "INS SimpleName: encode to SingleVariableDeclaration at 2", "INS SimpleName: buffer to TagElement: @param at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleType: ByteArrayOutputStream to SingleVariableDeclaration at 1", "INS SimpleName: b to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS Javadoc to MethodDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 0", "INS TagElement: @return to Javadoc at 4", "INS TextElement: Write a byte to the buffer. to TagElement at 0", "INS SimpleName: buffer to SingleVariableDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Modifier: final to SingleVariableDeclaration at 0", "INS ReturnStatement to Block at 0", "INS TagElement to Javadoc at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 2", "INS Block to MethodDeclaration at 8", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: b to SingleVariableDeclaration at 2", "INS TagElement: @param to Javadoc at 2", "INS ReturnStatement to Block at 1", "INS SimpleName: encode to TagElement: @param at 0", "INS SimpleName: ByteArrayOutputStream to SimpleType: ByteArrayOutputStream at 0", "INS TextElement: byte to write to TagElement: @param at 1", "INS SimpleName: b to MethodInvocation at 2", "INS TextElement: the buffer to write to to TagElement: @param at 1", "INS Block to IfStatement at 1", "INS Modifier: static to MethodDeclaration at 2", "INS SimpleName: encodeByte to MethodDeclaration at 4"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 25", "operations": ["INS PrimitiveType: boolean to MethodDeclaration at 3", "INS InfixExpression: || to ReturnStatement at 0", "INS TagElement: @param to Javadoc at 1", "INS TextElement:  <code>true</code> if the byte is either a space or tab character to TagElement: @return at 0", "INS MethodDeclaration to TypeDeclaration: class at 25", "INS SimpleName: SPACE to InfixExpression: == at 1", "INS InfixExpression: == to InfixExpression: || at 0", "INS TextElement: Checks whether the given byte is whitespace. to TagElement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: b to InfixExpression: == at 0", "INS Block to MethodDeclaration at 6", "INS TextElement: byte to be checked to TagElement: @param at 1", "INS SimpleName: TAB to InfixExpression: == at 1", "INS Modifier: private to MethodDeclaration at 1", "INS SimpleName: isWhitespace to MethodDeclaration at 4", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Modifier: final to SingleVariableDeclaration at 0", "INS InfixExpression: == to InfixExpression: || at 1", "INS SimpleName: b to SingleVariableDeclaration at 2", "INS TagElement: @return to Javadoc at 2", "INS Modifier: static to MethodDeclaration at 2", "INS SimpleName: b to TagElement: @param at 0", "INS Javadoc to MethodDeclaration at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 1", "INS SimpleName: b to InfixExpression: == at 0", "INS TagElement to Javadoc at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 27", "operations": ["INS NumberLiteral: 3 to InfixExpression: - at 1", "INS SimpleName: buffer to MethodInvocation at 3", "INS SimpleName: buffer to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: pos to Assignment: += at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS QualifiedName: bytes.length to InfixExpression: - at 0", "INS SimpleName: b to MethodInvocation at 2", "INS SimpleName: ESCAPE_CHAR to MethodInvocation at 2", "INS SimpleName: pos to InfixExpression: > at 0", "INS SimpleName: encodeByte to MethodInvocation at 0", "INS SimpleName: CR to MethodInvocation at 2", "INS SimpleName: pos to InfixExpression: > at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: printable to MethodInvocation at 0", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS TextElement:  array of bytes containing quoted-printable data to TagElement: @return at 0", "INS SimpleName: printable to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS IfStatement to Block at 5", "INS ParenthesizedExpression to InfixExpression: || at 1", "INS SimpleName: buffer to MethodInvocation at 0", "INS ForStatement to Block at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: get to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS TextElement:  1.10 to TagElement: @since at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS TextElement:  parameter, this function either implements the full ruleset to TagElement at 4", "INS InfixExpression: && to ParenthesizedExpression at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS TextElement: bitset of characters deemed quoted-printable to TagElement: @param at 1", "INS SimpleName: bytes to MethodInvocation at 2", "INS SimpleName: write to MethodInvocation at 1", "INS SimpleName: b to MethodInvocation at 2", "INS SimpleName: pos to Assignment: = at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: pos to InfixExpression: < at 0", "INS InfixExpression: || to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: && at 0", "INS QualifiedName: bytes.length to InfixExpression: < at 1", "INS SimpleName: buffer to MethodInvocation at 3", "INS ExpressionStatement to Block at 4", "INS SimpleName: b to VariableDeclarationFragment at 0", "INS SimpleName: printable to MethodInvocation at 0", "INS PrefixExpression: ! to InfixExpression: || at 0", "INS TextElement: or only a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in to TagElement at 5", "INS TextElement: Depending on the selection of the  to TagElement at 2", "INS Block to IfStatement at 2", "INS SimpleName: pos to Assignment: += at 0", "INS SimpleName: b to MethodInvocation at 1", "INS SimpleName: b to MethodInvocation at 1", "INS QualifiedName: bytes.length to InfixExpression: - at 0", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: i to InfixExpression: > at 0", "INS SimpleName: CR to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS PrefixExpression: ! to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS ParenthesizedExpression to InfixExpression: || at 1", "INS Javadoc to MethodDeclaration at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS NumberLiteral: 2 to InfixExpression: - at 1", "INS TextElement:  true to TagElement: @code at 0", "INS SimpleName: bytes to MethodInvocation at 2", "INS InfixExpression: > to InfixExpression: && at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to InfixExpression: || at 1", "INS SimpleName: i to InfixExpression: < at 0", "INS SimpleName: b to Assignment: = at 0", "INS IfStatement to Block at 1", "INS SimpleName: write to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 27", "INS TagElement: @since to Javadoc at 5", "INS SimpleName: write to MethodInvocation at 1", "INS InfixExpression: < to ForStatement at 1", "INS Assignment: += to ExpressionStatement at 0", "INS InfixExpression: || to VariableDeclarationFragment at 1", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: LF to MethodInvocation at 2", "INS SimpleName: encode to MethodInvocation at 2", "INS InfixExpression: && to ParenthesizedExpression at 0", "INS InfixExpression: - to VariableDeclarationFragment at 1", "INS SimpleName: pos to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 4", "INS PostfixExpression: ++ to ForStatement at 2", "INS SimpleName: encodeByte to MethodInvocation at 0", "INS SimpleName: bytes to TagElement: @param at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: buffer to MethodInvocation at 0", "INS IfStatement to Block at 3", "INS Block to IfStatement at 1", "INS Block to IfStatement at 1", "INS SimpleName: LF to MethodInvocation at 2", "INS Assignment: = to ExpressionStatement at 0", "INS InfixExpression: - to InfixExpression: > at 1", "INS NumberLiteral: 5 to InfixExpression: - at 1", "INS PostfixExpression: ++ to ForStatement at 2", "INS SimpleName: b to VariableDeclarationFragment at 0", "INS SimpleName: write to MethodInvocation at 1", "INS SimpleName: buffer to MethodInvocation at 0", "INS TextElement: if  to TagElement: @param at 1", "INS TextElement: <p> to TagElement at 1", "INS QualifiedName: bytes.length to InfixExpression: - at 0", "INS SimpleName: b to MethodInvocation at 2", "INS SimpleName: get to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS VariableDeclarationExpression to ForStatement at 0", "INS MethodInvocation to Assignment: += at 1", "INS NumberLiteral: 2 to InfixExpression: - at 1", "INS SimpleName: b to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: getUnsignedOctet to MethodInvocation at 0", "INS SimpleName: isWhitespace to MethodInvocation at 0", "INS SimpleName: write to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 3", "INS MethodInvocation to Assignment: += at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: - to InfixExpression: > at 1", "INS NumberLiteral: 3 to InfixExpression: - at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: bytes to MethodInvocation at 2", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS NumberLiteral: 1 to VariableDeclarationFragment at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: encodeQuotedPrintable to MethodDeclaration at 5", "INS SimpleName: i to MethodInvocation at 1", "INS SimpleName: buffer to MethodInvocation at 3", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: ESCAPE_CHAR to MethodInvocation at 2", "INS VariableDeclarationExpression to ForStatement at 0", "INS PrefixExpression: ! to InfixExpression: || at 0", "INS Modifier: final to MethodDeclaration at 3", "INS SimpleName: encodeByte to MethodInvocation at 0", "INS InfixExpression: - to InfixExpression: < at 1", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS TagElement: @code to TagElement: @param at 2", "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "INS SimpleName: encode to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: && at 1", "INS SimpleName: encode to Assignment: = at 0", "INS Block to ForStatement at 3", "INS SimpleName: i to InfixExpression: < at 0", "INS ExpressionStatement to Block at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: strict to SingleVariableDeclaration at 1", "INS TextElement: Encodes an array of bytes into an array of quoted-printable 7-bit characters. Unsafe characters are escaped. to TagElement at 0", "INS TextElement: RFC 1521 and is suitable for encoding binary data and unformatted text. to TagElement at 6", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: b to MethodInvocation at 1", "INS SimpleName: getUnsignedOctet to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: SAFE_LENGTH to InfixExpression: < at 1", "INS InfixExpression: - to MethodInvocation at 1", "INS QualifiedName: bytes.length to InfixExpression: - at 0", "INS SimpleName: get to MethodInvocation at 1", "INS TextElement:  strict to TagElement: @code at 0", "INS ExpressionStatement to Block at 2", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS InfixExpression: > to IfStatement at 0", "INS SimpleName: strict to IfStatement at 0", "INS TextElement: array of bytes to be encoded to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 3", "INS TagElement: @param to Javadoc at 1", "INS SimpleName: b to MethodInvocation at 1", "INS SimpleName: SAFE_LENGTH to InfixExpression: - at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: i to MethodInvocation at 1", "INS TextElement:  the full ruleset is used, otherwise only rule #1 and rule #2 to TagElement: @param at 3", "INS SimpleName: isWhitespace to MethodInvocation at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS SimpleName: strict to TagElement: @param at 0", "INS SimpleName: SAFE_LENGTH to InfixExpression: - at 0", "INS SimpleName: write to MethodInvocation at 1", "INS SimpleName: encodeByte to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: b to MethodInvocation at 1", "INS TagElement: @return to Javadoc at 4", "INS Block to IfStatement at 1", "INS InfixExpression: < to ForStatement at 1", "INS NumberLiteral: 1 to Assignment: = at 1", "INS Block to MethodDeclaration at 9", "INS VariableDeclarationStatement to Block at 2", "INS MethodInvocation to PrefixExpression: ! at 0", "INS ForStatement to Block at 6", "INS VariableDeclarationStatement to Block at 0", "INS PrefixExpression: ! to InfixExpression: || at 0", "INS SimpleName: getUnsignedOctet to MethodInvocation at 0", "INS SimpleName: b to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: printable to MethodInvocation at 0", "INS SimpleName: buffer to MethodInvocation at 0", "INS SimpleName: printable to TagElement: @param at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS Block to ForStatement at 3", "INS SimpleName: b to MethodInvocation at 2", "INS InfixExpression: || to Assignment: = at 1", "INS InfixExpression: < to IfStatement at 0", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: isWhitespace to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS InfixExpression: > to InfixExpression: && at 0", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: encode to VariableDeclarationFragment at 0", "INS SimpleName: buffer to MethodInvocation at 0", "INS Modifier: static to MethodDeclaration at 2", "INS Assignment: += to ExpressionStatement at 0", "INS TagElement: @code to TagElement at 3", "INS SimpleName: buffer to MethodInvocation at 3", "INS NumberLiteral: 2 to InfixExpression: - at 1", "INS InfixExpression: - to InfixExpression: > at 1"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TextElement:  1.10 to TagElement: @since at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: strict to TagElement: @param at 0", "INS TagElement to Javadoc at 0", "INS TextElement:  true to TagElement: @code at 0", "INS TextElement: Constructor which allows for the selection of the strict mode. to TagElement at 0", "INS TagElement: @since to Javadoc at 2", "INS TagElement: @code to TagElement: @param at 2", "INS TextElement: if  to TagElement: @param at 1", "INS TextElement: , soft line breaks will be used to TagElement: @param at 3", "INS TagElement: @param to Javadoc at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: boolean to SingleVariableDeclaration at 1", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: strict to SingleVariableDeclaration at 2"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS QualifiedName: Charsets.UTF_8 to ConstructorInvocation at 0", "INS SimpleName: strict to ConstructorInvocation at 1", "INS Block to MethodDeclaration at 5", "INS ConstructorInvocation to Block at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV Block to MethodDeclaration at 5", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "UPDATE from void to int", "operations": ["UPD PrimitiveType: void from void to int"]}, {"root": "INS ArrayType: byte[] to MethodDeclaration at 4", "operations": ["INS Dimension to ArrayType: byte[] at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS ArrayType: byte[] to MethodDeclaration at 4"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleName: BitSet to SimpleType: BitSet at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleType: BitSet to SingleVariableDeclaration at 0", "INS SimpleName: printable to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 8", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 8", "INS ArrayType: byte[] to SingleVariableDeclaration at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS SimpleName: bytes to SingleVariableDeclaration at 2", "INS Dimension to ArrayType: byte[] at 1"]}, {"root": "INS Block to MethodDeclaration at 9", "operations": ["INS MethodInvocation to ReturnStatement at 0", "INS BooleanLiteral: false to MethodInvocation at 3", "INS SimpleName: bytes to MethodInvocation at 2", "INS Block to MethodDeclaration at 9", "INS ReturnStatement to Block at 0", "INS SimpleName: encodeQuotedPrintable to MethodInvocation at 0", "INS SimpleName: printable to MethodInvocation at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 7", "MOV ArrayType: byte[] to MethodDeclaration at 4", "MOV SingleVariableDeclaration to MethodDeclaration at 6", "MOV Block to IfStatement at 2"]}, {"root": "INS TextElement: Depending on the selected  to TagElement at 11", "operations": ["INS TextElement: Depending on the selected  to TagElement at 11"]}, {"root": "INS TagElement: @code to TagElement at 12", "operations": ["INS TextElement:  strict to TagElement: @code at 0", "INS TagElement: @code to TagElement at 12"]}, {"root": "INS TextElement:  parameter, this class will implement a different set of rules of the to TagElement at 13", "operations": ["INS TextElement:  parameter, this class will implement a different set of rules of the to TagElement at 13"]}, {"root": "UPDATE from Rules #3, #4, and #5 of the quoted-printable spec are not implemented yet because the complete quoted-printable spec to quoted-printable spec:", "operations": ["UPD TextElement: Rules #3, #4, and #5 of the quoted-printable spec are not implemented yet because the complete quoted-printable spec from Rules #3, #4, and #5 of the quoted-printable spec are not implemented yet because the complete quoted-printable spec to quoted-printable spec:"]}, {"root": "INS TextElement: <ul> to TagElement at 15", "operations": ["INS TextElement: <ul> to TagElement at 15"]}, {"root": "INS TextElement: <li> to TagElement at 16", "operations": ["INS TextElement: <li> to TagElement at 16"]}, {"root": "INS TagElement: @code to TagElement at 17", "operations": ["INS TagElement: @code to TagElement at 17", "INS TextElement:  strict=false to TagElement: @code at 0"]}, {"root": "UPDATE from does not lend itself well into the byte[] oriented codec framework. Complete the codec once the streamable codec to : only rules #1 and #2 are implemented ", "operations": ["UPD TextElement: does not lend itself well into the byte[] oriented codec framework. Complete the codec once the streamable codec from does not lend itself well into the byte[] oriented codec framework. Complete the codec once the streamable codec to : only rules #1 and #2 are implemented "]}, {"root": "INS TextElement: <li> to TagElement at 19", "operations": ["INS TextElement: <li> to TagElement at 19"]}, {"root": "INS TagElement: @code to TagElement at 20", "operations": ["INS TagElement: @code to TagElement at 20", "INS TextElement:  strict=true to TagElement: @code at 0"]}, {"root": "INS TextElement: : all rules #1 through #5 are implemented to TagElement at 21", "operations": ["INS TextElement: : all rules #1 through #5 are implemented to TagElement at 21"]}, {"root": "INS TextElement: </ul> to TagElement at 22", "operations": ["INS TextElement: </ul> to TagElement at 22"]}, {"root": "UPDATE from framework is ready. The motivation behind providing the codec in a partial form is that it can already come in handy to Originally, this class only supported the non-strict mode, but the codec in this partial form could already be used", "operations": ["UPD TextElement: framework is ready. The motivation behind providing the codec in a partial form is that it can already come in handy from framework is ready. The motivation behind providing the codec in a partial form is that it can already come in handy to Originally, this class only supported the non-strict mode, but the codec in this partial form could already be used"]}, {"root": "UPDATE from for those applications that do not require quoted-printable line formatting (rules #3, #4, #5), for instance Q codec. to for certain applications that do not require quoted-printable line formatting (rules #3, #4, #5), for instance Q codec.", "operations": ["UPD TextElement: for those applications that do not require quoted-printable line formatting (rules #3, #4, #5), for instance Q codec. from for those applications that do not require quoted-printable line formatting (rules #3, #4, #5), for instance Q codec. to for certain applications that do not require quoted-printable line formatting (rules #3, #4, #5), for instance Q codec."]}, {"root": "INS TextElement: The strict mode has been added in 1.10. to TagElement at 25", "operations": ["INS TextElement: The strict mode has been added in 1.10. to TagElement at 25"]}, {"root": "UPDATE from  <a href=\"http://www.ietf.org/rfc/rfc1521.txt\"> RFC 1521 MIME (Multipurpose Internet Mail Extensions) Part One:\n *          Mechanisms for Specifying and Describing the Format of Internet Message Bodies </a> to  <a href=\"http://www.ietf.org/rfc/rfc1521.txt\">RFC 1521 MIME (Multipurpose Internet Mail Extensions) Part One:\n *          Mechanisms for Specifying and Describing the Format of Internet Message Bodies </a>", "operations": ["UPD TextElement:  <a href=\"http://www.ietf.org/rfc/rfc1521.txt\"> RFC 1521 MIME (Multipurpose Internet Mail Extensions) Part One:", " *          Mechanisms for Specifying and Describing the Format of Internet Message Bodies </a> from  <a href=\"http://www.ietf.org/rfc/rfc1521.txt\"> RFC 1521 MIME (Multipurpose Internet Mail Extensions) Part One:", " *          Mechanisms for Specifying and Describing the Format of Internet Message Bodies </a> to  <a href=\"http://www.ietf.org/rfc/rfc1521.txt\">RFC 1521 MIME (Multipurpose Internet Mail Extensions) Part One:", " *          Mechanisms for Specifying and Describing the Format of Internet Message Bodies </a>"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: strict to Assignment: = at 1", "INS ExpressionStatement to Block at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: strict to FieldAccess at 1", "INS Assignment: = to ExpressionStatement at 0", "INS FieldAccess to Assignment: = at 0"]}, {"root": "INS TagElement: @return to Javadoc at 3", "operations": ["INS TextElement:  The number of bytes written to the <code>buffer</code> to TagElement: @return at 0", "INS TagElement: @return to Javadoc at 3"]}, {"root": "INS ReturnStatement to Block at 5", "operations": ["INS ReturnStatement to Block at 5", "INS NumberLiteral: 3 to ReturnStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0", "MOV ReturnStatement to Block at 4", "MOV IfStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 2"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @param to Javadoc at 1", "MOV TagElement: @throws to Javadoc at 3", "MOV TagElement: @return to Javadoc at 2"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @return to Javadoc at 2", "MOV TagElement: @throws to Javadoc at 3", "MOV TagElement: @param to Javadoc at 1"]}, {"root": "INS BooleanLiteral: false to ConstructorInvocation at 1", "operations": ["INS BooleanLiteral: false to ConstructorInvocation at 1"]}, {"root": "INS BooleanLiteral: false to ConstructorInvocation at 1", "operations": ["INS BooleanLiteral: false to ConstructorInvocation at 1"]}, {"root": "UPDATE from This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in to This function fully implements the quoted-printable encoding specification (rule #1 through rule #5) as", "operations": ["UPD TextElement: This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in from This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in to This function fully implements the quoted-printable encoding specification (rule #1 through rule #5) as", "UPD TextElement: This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in from This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in to This function fully implements the quoted-printable encoding specification (rule #1 through rule #5) as"]}, {"root": "UPDATE from RFC 1521. to defined in RFC 1521.", "operations": ["UPD TextElement: RFC 1521. from RFC 1521. to defined in RFC 1521.", "UPD TextElement: RFC 1521. from RFC 1521. to defined in RFC 1521."]}, {"root": "INS TextElement: Depending on the selection of the  to TagElement at 2", "operations": ["INS TextElement: Depending on the selection of the  to TagElement at 2"]}, {"root": "INS TagElement: @code to TagElement at 3", "operations": ["INS TagElement: @code to TagElement at 3", "INS TextElement:  strict to TagElement: @code at 0"]}, {"root": "INS TextElement:  parameter, this function either implements the full ruleset to TagElement at 4", "operations": ["INS TextElement:  parameter, this function either implements the full ruleset to TagElement at 4"]}, {"root": "UPDATE from This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in to or only a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in", "operations": ["UPD TextElement: This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in from This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in to or only a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in", "UPD TextElement: This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in from This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in to or only a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in", "UPD TextElement: This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in from This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in to or only a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in", "UPD TextElement: This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in from This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in to or only a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in"]}, {"root": "INS TextElement: Depending on the selection of the  to TagElement at 2", "operations": ["INS TextElement: Depending on the selection of the  to TagElement at 2"]}, {"root": "INS TagElement: @code to TagElement at 3", "operations": ["INS TextElement:  strict to TagElement: @code at 0", "INS TagElement: @code to TagElement at 3"]}, {"root": "INS TextElement:  parameter, this function either implements the full ruleset to TagElement at 4", "operations": ["INS TextElement:  parameter, this function either implements the full ruleset to TagElement at 4"]}, {"root": "UPDATE from RFC 1521 and is suitable for encoding binary data. to RFC 1521 and is suitable for encoding binary data and unformatted text.", "operations": ["UPD TextElement: RFC 1521 and is suitable for encoding binary data. from RFC 1521 and is suitable for encoding binary data. to RFC 1521 and is suitable for encoding binary data and unformatted text."]}, {"root": "INS TextElement: Depending on the selection of the  to TagElement at 2", "operations": ["INS TextElement: Depending on the selection of the  to TagElement at 2"]}, {"root": "INS TagElement: @code to TagElement at 3", "operations": ["INS TagElement: @code to TagElement at 3", "INS TextElement:  strict to TagElement: @code at 0"]}, {"root": "INS TextElement:  parameter, this function either implements the full ruleset to TagElement at 4", "operations": ["INS TextElement:  parameter, this function either implements the full ruleset to TagElement at 4"]}, {"root": "INS TextElement: Depending on the selection of the  to TagElement at 2", "operations": ["INS TextElement: Depending on the selection of the  to TagElement at 2"]}, {"root": "INS TagElement: @code to TagElement at 3", "operations": ["INS TextElement:  strict to TagElement: @code at 0", "INS TagElement: @code to TagElement at 3"]}, {"root": "INS TextElement:  parameter, this function either implements the full ruleset to TagElement at 4", "operations": ["INS TextElement:  parameter, this function either implements the full ruleset to TagElement at 4"]}, {"root": "INS SimpleName: strict to MethodInvocation at 3", "operations": ["INS SimpleName: strict to MethodInvocation at 3"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS IfStatement to IfStatement at 2", "INS SimpleName: CR to InfixExpression: != at 1", "INS SimpleName: b to InfixExpression: != at 0", "INS InfixExpression: != to InfixExpression: && at 1", "INS SimpleName: LF to InfixExpression: != at 1", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: b to InfixExpression: != at 0", "INS InfixExpression: != to InfixExpression: && at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to Block at 0", "INS ContinueStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: CR to InfixExpression: == at 1", "INS InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from InfixExpression: ==", "operations": ["MOV ArrayAccess to InfixExpression: == at 0"]}, {"root": "INS ArrayAccess to MethodInvocation at 2", "operations": ["INS SimpleName: i to ArrayAccess at 1", "INS SimpleName: bytes to ArrayAccess at 0", "INS ArrayAccess to MethodInvocation at 2"]}]}}, {"QuotedPrintableCodec_diff": {"operations": [" *          Mechanisms for Specifying and Describing the Format of Internet Message Bodies </a>(48) to TextElement:  <a href=\"http://www.ietf.org/rfc/rfc1521.txt\">RFC 1521 MIME (Multipurpose Internet Mail Extensions) Part One:", " *          Mechanisms for Specifying and Describing the Format of Internet Message Bodies </a>(62)", "Insert FieldDeclaration(97) into TypeDeclaration: class(1598) at 8", "Insert FieldDeclaration(144) into TypeDeclaration: class(1598) at 13", "Insert FieldDeclaration(152) into TypeDeclaration: class(1598) at 14", "Insert FieldDeclaration(163) into TypeDeclaration: class(1598) at 15", "Insert MethodDeclaration(266) into TypeDeclaration: class(1598) at 19", "Insert MethodDeclaration(305) into TypeDeclaration: class(1598) at 20", "Insert MethodDeclaration(469) into TypeDeclaration: class(1598) at 23", "Insert MethodDeclaration(518) into TypeDeclaration: class(1598) at 24", "Insert MethodDeclaration(544) into TypeDeclaration: class(1598) at 25", "Insert MethodDeclaration(888) into TypeDeclaration: class(1598) at 27", "Insert Javadoc(91) into FieldDeclaration(97) at 0", "Insert Modifier: private(92) into FieldDeclaration(97) at 1", "Insert Modifier: final(93) into FieldDeclaration(97) at 2", "Insert PrimitiveType: boolean(94) into FieldDeclaration(97) at 3", "Insert VariableDeclarationFragment(96) into FieldDeclaration(97) at 4", "Insert Modifier: private(137) into FieldDeclaration(144) at 0", "Insert Modifier: static(138) into FieldDeclaration(144) at 1", "Insert Modifier: final(139) into FieldDeclaration(144) at 2", "Insert PrimitiveType: byte(140) into FieldDeclaration(144) at 3", "Insert VariableDeclarationFragment(143) into FieldDeclaration(144) at 4", "Insert Modifier: private(145) into FieldDeclaration(152) at 0", "Insert Modifier: static(146) into FieldDeclaration(152) at 1", "Insert Modifier: final(147) into FieldDeclaration(152) at 2", "Insert PrimitiveType: byte(148) into FieldDeclaration(152) at 3", "Insert VariableDeclarationFragment(151) into FieldDeclaration(152) at 4", "Insert Javadoc(155) into FieldDeclaration(163) at 0", "Insert Modifier: private(156) into FieldDeclaration(163) at 1", "Insert Modifier: static(157) into FieldDeclaration(163) at 2", "Insert Modifier: final(158) into FieldDeclaration(163) at 3", "Insert PrimitiveType: int(159) into FieldDeclaration(163) at 4", "Insert VariableDeclarationFragment(162) into FieldDeclaration(163) at 5", "Insert Javadoc(235) into MethodDeclaration(246) at 0", "Insert SingleVariableDeclaration(241) into MethodDeclaration(246) at 3", "Insert Block(245) into MethodDeclaration(246) at 4", "Move Javadoc(181) into MethodDeclaration(266) at 0", "Insert Modifier: public(255) into MethodDeclaration(266) at 1", "Insert SimpleName: QuotedPrintableCodec(256) into MethodDeclaration(266) at 2", "Move SingleVariableDeclaration(188) into MethodDeclaration(266) at 3", "Insert Block(265) into MethodDeclaration(266) at 4", "Insert Javadoc(280) into MethodDeclaration(305) at 0", "Insert Modifier: public(281) into MethodDeclaration(305) at 1", "Insert SimpleName: QuotedPrintableCodec(282) into MethodDeclaration(305) at 2", "Insert SingleVariableDeclaration(287) into MethodDeclaration(305) at 3", "Insert SingleVariableDeclaration(291) into MethodDeclaration(305) at 4", "Move Block(195) into MethodDeclaration(305) at 5", "Update PrimitiveType: void(247) to int", "Insert Javadoc(433) into MethodDeclaration(469) at 0", "Insert Modifier: private(434) into MethodDeclaration(469) at 1", "Insert Modifier: static(435) into MethodDeclaration(469) at 2", "Insert PrimitiveType: int(436) into MethodDeclaration(469) at 3", "Insert SimpleName: getUnsignedOctet(437) into MethodDeclaration(469) at 4", "Insert SingleVariableDeclaration(441) into MethodDeclaration(469) at 5", "Insert SingleVariableDeclaration(447) into MethodDeclaration(469) at 6", "Insert Block(468) into MethodDeclaration(469) at 7", "Insert Javadoc(483) into MethodDeclaration(518) at 0", "Insert Modifier: private(484) into MethodDeclaration(518) at 1", "Insert Modifier: static(485) into MethodDeclaration(518) at 2", "Insert PrimitiveType: int(486) into MethodDeclaration(518) at 3", "Insert SimpleName: encodeByte(487) into MethodDeclaration(518) at 4", "Insert SingleVariableDeclaration(491) into MethodDeclaration(518) at 5", "Insert SingleVariableDeclaration(495) into MethodDeclaration(518) at 6", "Insert SingleVariableDeclaration(500) into MethodDeclaration(518) at 7", "Insert Block(517) into MethodDeclaration(518) at 8", "Insert Javadoc(526) into MethodDeclaration(544) at 0", "Insert Modifier: private(527) into MethodDeclaration(544) at 1", "Insert Modifier: static(528) into MethodDeclaration(544) at 2", "Insert PrimitiveType: boolean(529) into MethodDeclaration(544) at 3", "Insert SimpleName: isWhitespace(530) into MethodDeclaration(544) at 4", "Insert SingleVariableDeclaration(534) into MethodDeclaration(544) at 5", "Insert Block(543) into MethodDeclaration(544) at 6", "Insert ArrayType: byte[](564) into MethodDeclaration(583) at 4", "Insert SingleVariableDeclaration(569) into MethodDeclaration(583) at 6", "Insert SingleVariableDeclaration(575) into MethodDeclaration(583) at 7", "Insert Block(582) into MethodDeclaration(583) at 8", "Insert Javadoc(609) into MethodDeclaration(888) at 0", "Insert Modifier: public(610) into MethodDeclaration(888) at 1", "Insert Modifier: static(611) into MethodDeclaration(888) at 2", "Insert Modifier: final(612) into MethodDeclaration(888) at 3", "Move ArrayType: byte[](327) into MethodDeclaration(888) at 4", "Insert SimpleName: encodeQuotedPrintable(616) into MethodDeclaration(888) at 5", "Move SingleVariableDeclaration(332) into MethodDeclaration(888) at 6", "Move SingleVariableDeclaration(338) into MethodDeclaration(888) at 7", "Insert SingleVariableDeclaration(629) into MethodDeclaration(888) at 8", "Insert Block(887) into MethodDeclaration(888) at 9", "Insert TextElement: Depending on the selected (41) into TagElement(61) at 11", "Insert TagElement: @code(43) into TagElement(61) at 12", "Insert TextElement:  parameter, this class will implement a different set of rules of the(44) into TagElement(61) at 13", "Update TextElement: Rules #3, #4, and #5 of the quoted-printable spec are not implemented yet because the complete quoted-printable spec(41) to quoted-printable spec:", "Insert TextElement: <ul>(46) into TagElement(61) at 15", "Insert TextElement: <li>(47) into TagElement(61) at 16", "Insert TagElement: @code(49) into TagElement(61) at 17", "Update TextElement: does not lend itself well into the byte[] oriented codec framework. Complete the codec once the streamable codec(42) to : only rules #1 and #2 are implemented ", "Insert TextElement: <li>(51) into TagElement(61) at 19", "Insert TagElement: @code(53) into TagElement(61) at 20", "Insert TextElement: : all rules #1 through #5 are implemented(54) into TagElement(61) at 21", "Insert TextElement: </ul>(55) into TagElement(61) at 22", "Update TextElement: framework is ready. The motivation behind providing the codec in a partial form is that it can already come in handy(43) to Originally, this class only supported the non-strict mode, but the codec in this partial form could already be used", "Update TextElement: for those applications that do not require quoted-printable line formatting (rules #3, #4, #5), for instance Q codec.(44) to for certain applications that do not require quoted-printable line formatting (rules #3, #4, #5), for instance Q codec.", "Insert TextElement: The strict mode has been added in 1.10.(58) into TagElement(61) at 25", "Update TextElement:  <a href=\"http://www.ietf.org/rfc/rfc1521.txt\"> RFC 1521 MIME (Multipurpose Internet Mail Extensions) Part One:", " *          Mechanisms for Specifying and Describing the Format of Internet Message Bodies </a>(48) to  <a href=\"http://www.ietf.org/rfc/rfc1521.txt\">RFC 1521 MIME (Multipurpose Internet Mail Extensions) Part One:", " *          Mechanisms for Specifying and Describing the Format of Internet Message Bodies </a>", "Insert TagElement(90) into Javadoc(91) at 0", "Insert SimpleName: strict(95) into VariableDeclarationFragment(96) at 0", "Insert SimpleName: CR(141) into VariableDeclarationFragment(143) at 0", "Insert NumberLiteral: 13(142) into VariableDeclarationFragment(143) at 1", "Insert SimpleName: LF(149) into VariableDeclarationFragment(151) at 0", "Insert NumberLiteral: 10(150) into VariableDeclarationFragment(151) at 1", "Insert TagElement(154) into Javadoc(155) at 0", "Insert SimpleName: SAFE_LENGTH(160) into VariableDeclarationFragment(162) at 0", "Insert NumberLiteral: 73(161) into VariableDeclarationFragment(162) at 1", "Insert TagElement(226) into Javadoc(235) at 0", "Insert TagElement: @param(232) into Javadoc(235) at 1", "Insert TagElement: @since(234) into Javadoc(235) at 2", "Insert Modifier: final(238) into SingleVariableDeclaration(241) at 0", "Insert PrimitiveType: boolean(239) into SingleVariableDeclaration(241) at 1", "Insert SimpleName: strict(240) into SingleVariableDeclaration(241) at 2", "Insert ConstructorInvocation(244) into Block(245) at 0", "Insert ConstructorInvocation(264) into Block(265) at 0", "Insert TagElement(268) into Javadoc(280) at 0", "Insert TagElement: @param(271) into Javadoc(280) at 1", "Insert TagElement: @param(277) into Javadoc(280) at 2", "Insert TagElement: @since(279) into Javadoc(280) at 3", "Insert Modifier: final(283) into SingleVariableDeclaration(287) at 0", "Insert SimpleType: Charset(285) into SingleVariableDeclaration(287) at 1", "Insert SimpleName: charset(286) into SingleVariableDeclaration(287) at 2", "Insert Modifier: final(288) into SingleVariableDeclaration(291) at 0", "Insert PrimitiveType: boolean(289) into SingleVariableDeclaration(291) at 1", "Insert SimpleName: strict(290) into SingleVariableDeclaration(291) at 2", "Insert ExpressionStatement(303) into Block(304) at 1", "Insert TagElement: @return(354) into Javadoc(355) at 3", "Insert ReturnStatement(419) into Block(420) at 5", "Insert TagElement(424) into Javadoc(433) at 0", "Insert TagElement: @param(427) into Javadoc(433) at 1", "Insert TagElement: @param(430) into Javadoc(433) at 2", "Insert TagElement: @return(432) into Javadoc(433) at 3", "Insert Modifier: final(438) into SingleVariableDeclaration(441) at 0", "Insert PrimitiveType: int(439) into SingleVariableDeclaration(441) at 1", "Insert SimpleName: index(440) into SingleVariableDeclaration(441) at 2", "Insert Modifier: final(442) into SingleVariableDeclaration(447) at 0", "Insert ArrayType: byte[](445) into SingleVariableDeclaration(447) at 1", "Insert SimpleName: bytes(446) into SingleVariableDeclaration(447) at 2", "Insert VariableDeclarationStatement(454) into Block(468) at 0", "Insert IfStatement(465) into Block(468) at 1", "Insert ReturnStatement(467) into Block(468) at 2", "Insert TagElement(471) into Javadoc(483) at 0", "Insert TagElement: @param(474) into Javadoc(483) at 1", "Insert TagElement: @param(477) into Javadoc(483) at 2", "Insert TagElement: @param(480) into Javadoc(483) at 3", "Insert TagElement: @return(482) into Javadoc(483) at 4", "Insert Modifier: final(488) into SingleVariableDeclaration(491) at 0", "Insert PrimitiveType: int(489) into SingleVariableDeclaration(491) at 1", "Insert SimpleName: b(490) into SingleVariableDeclaration(491) at 2", "Insert Modifier: final(492) into SingleVariableDeclaration(495) at 0", "Insert PrimitiveType: boolean(493) into SingleVariableDeclaration(495) at 1", "Insert SimpleName: encode(494) into SingleVariableDeclaration(495) at 2", "Insert Modifier: final(496) into SingleVariableDeclaration(500) at 0", "Insert SimpleType: ByteArrayOutputStream(498) into SingleVariableDeclaration(500) at 1", "Insert SimpleName: buffer(499) into SingleVariableDeclaration(500) at 2", "Insert IfStatement(516) into Block(517) at 0", "Insert TagElement(520) into Javadoc(526) at 0", "Insert TagElement: @param(523) into Javadoc(526) at 1", "Insert TagElement: @return(525) into Javadoc(526) at 2", "Insert Modifier: final(531) into SingleVariableDeclaration(534) at 0", "Insert PrimitiveType: int(532) into SingleVariableDeclaration(534) at 1", "Insert SimpleName: b(533) into SingleVariableDeclaration(534) at 2", "Insert ReturnStatement(542) into Block(543) at 0", "Insert PrimitiveType: byte(562) into ArrayType: byte[](564) at 0", "Insert Dimension(563) into ArrayType: byte[](564) at 1", "Insert SimpleType: BitSet(567) into SingleVariableDeclaration(569) at 0", "Insert SimpleName: printable(568) into SingleVariableDeclaration(569) at 1", "Insert Modifier: final(570) into SingleVariableDeclaration(575) at 0", "Insert ArrayType: byte[](573) into SingleVariableDeclaration(575) at 1", "Insert SimpleName: bytes(574) into SingleVariableDeclaration(575) at 2", "Insert ReturnStatement(581) into Block(582) at 0", "Insert TagElement(592) into Javadoc(609) at 0", "Insert TagElement: @param(595) into Javadoc(609) at 1", "Insert TagElement: @param(598) into Javadoc(609) at 2", "Insert TagElement: @param(604) into Javadoc(609) at 3", "Insert TagElement: @return(606) into Javadoc(609) at 4", "Insert TagElement: @since(608) into Javadoc(609) at 5", "Insert PrimitiveType: boolean(627) into SingleVariableDeclaration(629) at 0", "Insert SimpleName: strict(628) into SingleVariableDeclaration(629) at 1", "Move IfStatement(345) into Block(887) at 0", "Move IfStatement(354) into Block(887) at 1", "Move VariableDeclarationStatement(363) into Block(887) at 2", "Insert IfStatement(882) into Block(887) at 3", "Move ReturnStatement(407) into Block(887) at 4", "Move TagElement: @param(584) into Javadoc(903) at 1", "Move TagElement: @return(586) into Javadoc(903) at 2", "Move TagElement: @throws(589) into Javadoc(903) at 3", "Move TagElement: @param(418) into Javadoc(1090) at 1", "Move TagElement: @return(420) into Javadoc(1090) at 2", "Move TagElement: @throws(423) into Javadoc(1090) at 3", "Insert TextElement:  strict(42) into TagElement: @code(43) at 0", "Insert TextElement:  strict=false(48) into TagElement: @code(49) at 0", "Insert TextElement:  strict=true(52) into TagElement: @code(53) at 0", "Insert TextElement: Indicates whether soft line breaks shall be used during encoding (rule #3-5).(89) into TagElement(90) at 0", "Insert TextElement: Safe line length for quoted printable encoded text.(153) into TagElement(154) at 0", "Insert BooleanLiteral: false(221) into ConstructorInvocation(222) at 1", "Insert TextElement: Constructor which allows for the selection of the strict mode.(225) into TagElement(226) at 0", "Insert SimpleName: strict(227) into TagElement: @param(232) at 0", "Insert TextElement: if (228) into TagElement: @param(232) at 1", "Insert TagElement: @code(230) into TagElement: @param(232) at 2", "Insert TextElement: , soft line breaks will be used(231) into TagElement: @param(232) at 3", "Insert TextElement:  1.10(233) into TagElement: @since(234) at 0", "Insert QualifiedName: Charsets.UTF_8(242) into ConstructorInvocation(244) at 0", "Insert SimpleName: strict(243) into ConstructorInvocation(244) at 1", "Insert SimpleName: charset(262) into ConstructorInvocation(264) at 0", "Insert BooleanLiteral: false(263) into ConstructorInvocation(264) at 1", "Insert TextElement: Constructor which allows for the selection of a default charset and strict mode.(267) into TagElement(268) at 0", "Insert SimpleName: charset(269) into TagElement: @param(271) at 0", "Insert TextElement: the default string charset to use.(270) into TagElement: @param(271) at 1", "Insert SimpleName: strict(272) into TagElement: @param(277) at 0", "Insert TextElement: if (273) into TagElement: @param(277) at 1", "Insert TagElement: @code(275) into TagElement: @param(277) at 2", "Insert TextElement: , soft line breaks will be used(276) into TagElement: @param(277) at 3", "Insert TextElement:  1.10(278) into TagElement: @since(279) at 0", "Insert SimpleName: Charset(284) into SimpleType: Charset(285) at 0", "Insert Assignment: =(302) into ExpressionStatement(303) at 0", "Insert BooleanLiteral: false(341) into ConstructorInvocation(342) at 1", "Insert TextElement:  The number of bytes written to the <code>buffer</code>(353) into TagElement: @return(354) at 0", "Insert NumberLiteral: 3(418) into ReturnStatement(419) at 0", "Insert TextElement: Return the byte at position <code>index</code> of the byte array and(422) into TagElement(424) at 0", "Insert TextElement: make sure it is unsigned.(423) into TagElement(424) at 1", "Insert SimpleName: index(425) into TagElement: @param(427) at 0", "Insert TextElement: position in the array(426) into TagElement: @param(427) at 1", "Insert SimpleName: bytes(428) into TagElement: @param(430) at 0", "Insert TextElement: the byte array(429) into TagElement: @param(430) at 1", "Insert TextElement:  the unsigned octet at position <code>index</code> from the array(431) into TagElement: @return(432) at 0", "Insert PrimitiveType: byte(443) into ArrayType: byte[](445) at 0", "Insert Dimension(444) into ArrayType: byte[](445) at 1", "Insert PrimitiveType: int(448) into VariableDeclarationStatement(454) at 0", "Insert VariableDeclarationFragment(453) into VariableDeclarationStatement(454) at 1", "Insert InfixExpression: <(457) into IfStatement(465) at 0", "Insert Block(464) into IfStatement(465) at 1", "Insert SimpleName: b(466) into ReturnStatement(467) at 0", "Insert TextElement: Write a byte to the buffer.(470) into TagElement(471) at 0", "Insert SimpleName: b(472) into TagElement: @param(474) at 0", "Insert TextElement: byte to write(473) into TagElement: @param(474) at 1", "Insert SimpleName: encode(475) into TagElement: @param(477) at 0", "Insert TextElement: indicates whether the octet shall be encoded(476) into TagElement: @param(477) at 1", "Insert SimpleName: buffer(478) into TagElement: @param(480) at 0", "Insert TextElement: the buffer to write to(479) into TagElement: @param(480) at 1", "Insert TextElement:  the number of bytes that have been written to the buffer(481) into TagElement: @return(482) at 0", "Insert SimpleName: ByteArrayOutputStream(497) into SimpleType: ByteArrayOutputStream(498) at 0", "Insert SimpleName: encode(501) into IfStatement(516) at 0", "Insert Block(507) into IfStatement(516) at 1", "Insert Block(515) into IfStatement(516) at 2", "Insert TextElement: Checks whether the given byte is whitespace.(519) into TagElement(520) at 0", "Insert SimpleName: b(521) into TagElement: @param(523) at 0", "Insert TextElement: byte to be checked(522) into TagElement: @param(523) at 1", "Insert TextElement:  <code>true</code> if the byte is either a space or tab character(524) into TagElement: @return(525) at 0", "Insert InfixExpression: ||(541) into ReturnStatement(542) at 0", "Insert SimpleName: BitSet(566) into SimpleType: BitSet(567) at 0", "Insert PrimitiveType: byte(571) into ArrayType: byte[](573) at 0", "Insert Dimension(572) into ArrayType: byte[](573) at 1", "Insert MethodInvocation(580) into ReturnStatement(581) at 0", "Insert TextElement: Encodes an array of bytes into an array of quoted-printable 7-bit characters. Unsafe characters are escaped.(584) into TagElement(592) at 0", "Insert TextElement: <p>(585) into TagElement(592) at 1", "Insert TextElement: Depending on the selection of the (586) into TagElement(592) at 2", "Insert TagElement: @code(588) into TagElement(592) at 3", "Insert TextElement:  parameter, this function either implements the full ruleset(589) into TagElement(592) at 4", "Insert TextElement: or only a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in(590) into TagElement(592) at 5", "Insert TextElement: RFC 1521 and is suitable for encoding binary data and unformatted text.(591) into TagElement(592) at 6", "Insert SimpleName: printable(593) into TagElement: @param(595) at 0", "Insert TextElement: bitset of characters deemed quoted-printable(594) into TagElement: @param(595) at 1", "Insert SimpleName: bytes(596) into TagElement: @param(598) at 0", "Insert TextElement: array of bytes to be encoded(597) into TagElement: @param(598) at 1", "Insert SimpleName: strict(599) into TagElement: @param(604) at 0", "Insert TextElement: if (600) into TagElement: @param(604) at 1", "Insert TagElement: @code(602) into TagElement: @param(604) at 2", "Insert TextElement:  the full ruleset is used, otherwise only rule #1 and rule #2(603) into TagElement: @param(604) at 3", "Insert TextElement:  array of bytes containing quoted-printable data(605) into TagElement: @return(606) at 0", "Insert TextElement:  1.10(607) into TagElement: @since(608) at 0", "Insert SimpleName: strict(655) into IfStatement(882) at 0", "Insert Block(840) into IfStatement(882) at 1", "Move Block(408) into IfStatement(882) at 2", "Update TextElement: This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in(413) to This function fully implements the quoted-printable encoding specification (rule #1 through rule #5) as", "Update TextElement: RFC 1521.(414) to defined in RFC 1521.", "Insert TextElement: Depending on the selection of the (1042) into TagElement(1048) at 2", "Insert TagElement: @code(1044) into TagElement(1048) at 3", "Insert TextElement:  parameter, this function either implements the full ruleset(1045) into TagElement(1048) at 4", "Update TextElement: This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in(547) to or only a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in", "Update TextElement: This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in(579) to This function fully implements the quoted-printable encoding specification (rule #1 through rule #5) as", "Update TextElement: RFC 1521.(580) to defined in RFC 1521.", "Insert TextElement: Depending on the selection of the (1114) into TagElement(1120) at 2", "Insert TagElement: @code(1116) into TagElement(1120) at 3", "Insert TextElement:  parameter, this function either implements the full ruleset(1117) into TagElement(1120) at 4", "Update TextElement: This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in(614) to or only a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in", "Update TextElement: RFC 1521 and is suitable for encoding binary data.(615) to RFC 1521 and is suitable for encoding binary data and unformatted text.", "Insert TextElement: Depending on the selection of the (1490) into TagElement(1496) at 2", "Insert TagElement: @code(1492) into TagElement(1496) at 3", "Insert TextElement:  parameter, this function either implements the full ruleset(1493) into TagElement(1496) at 4", "Update TextElement: This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in(986) to or only a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in", "Insert TextElement: Depending on the selection of the (1544) into TagElement(1550) at 2", "Insert TagElement: @code(1546) into TagElement(1550) at 3", "Insert TextElement:  parameter, this function either implements the full ruleset(1547) into TagElement(1550) at 4", "Update TextElement: This function implements a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in(1036) to or only a subset of quoted-printable encoding specification (rule #1 and rule #2) as defined in", "Insert TextElement:  true(229) into TagElement: @code(230) at 0", "Insert TextElement:  true(274) into TagElement: @code(275) at 0", "Insert FieldAccess(300) into Assignment: =(302) at 0", "Insert SimpleName: strict(301) into Assignment: =(302) at 1", "Insert SimpleName: b(449) into VariableDeclarationFragment(453) at 0", "Insert ArrayAccess(452) into VariableDeclarationFragment(453) at 1", "Insert SimpleName: b(455) into InfixExpression: <(457) at 0", "Insert NumberLiteral: 0(456) into InfixExpression: <(457) at 1", "Insert ExpressionStatement(463) into Block(464) at 0", "Insert ReturnStatement(506) into Block(507) at 0", "Insert ExpressionStatement(512) into Block(515) at 0", "Insert ReturnStatement(514) into Block(515) at 1", "Insert InfixExpression: ==(537) into InfixExpression: ||(541) at 0", "Insert InfixExpression: ==(540) into InfixExpression: ||(541) at 1", "Insert SimpleName: encodeQuotedPrintable(576) into MethodInvocation(580) at 0", "Insert SimpleName: printable(577) into MethodInvocation(580) at 1", "Insert SimpleName: bytes(578) into MethodInvocation(580) at 2", "Insert BooleanLiteral: false(579) into MethodInvocation(580) at 3", "Insert TextElement:  strict(587) into TagElement: @code(588) at 0", "Insert TextElement:  true(601) into TagElement: @code(602) at 0", "Insert VariableDeclarationStatement(660) into Block(840) at 0", "Insert ForStatement(733) into Block(840) at 1", "Insert VariableDeclarationStatement(743) into Block(840) at 2", "Insert VariableDeclarationStatement(763) into Block(840) at 3", "Insert ExpressionStatement(771) into Block(840) at 4", "Insert IfStatement(793) into Block(840) at 5", "Insert ForStatement(839) into Block(840) at 6", "Insert TextElement:  strict(1043) into TagElement: @code(1044) at 0", "Insert SimpleName: strict(1071) into MethodInvocation(1072) at 3", "Insert TextElement:  strict(1115) into TagElement: @code(1116) at 0", "Insert TextElement:  strict(1491) into TagElement: @code(1492) at 0", "Insert TextElement:  strict(1545) into TagElement: @code(1546) at 0", "Insert ThisExpression(298) into FieldAccess(300) at 0", "Insert SimpleName: strict(299) into FieldAccess(300) at 1", "Insert SimpleName: bytes(450) into ArrayAccess(452) at 0", "Insert SimpleName: index(451) into ArrayAccess(452) at 1", "Insert Assignment: =(462) into ExpressionStatement(463) at 0", "Insert MethodInvocation(505) into ReturnStatement(506) at 0", "Insert MethodInvocation(511) into ExpressionStatement(512) at 0", "Insert NumberLiteral: 1(513) into ReturnStatement(514) at 0", "Insert SimpleName: b(535) into InfixExpression: ==(537) at 0", "Insert SimpleName: SPACE(536) into InfixExpression: ==(537) at 1", "Insert SimpleName: b(538) into InfixExpression: ==(540) at 0", "Insert SimpleName: TAB(539) into InfixExpression: ==(540) at 1", "Insert PrimitiveType: int(656) into VariableDeclarationStatement(660) at 0", "Insert VariableDeclarationFragment(659) into VariableDeclarationStatement(660) at 1", "Insert VariableDeclarationExpression(665) into ForStatement(733) at 0", "Insert InfixExpression: <(670) into ForStatement(733) at 1", "Insert PostfixExpression: ++(672) into ForStatement(733) at 2", "Insert Block(732) into ForStatement(733) at 3", "Insert PrimitiveType: int(734) into VariableDeclarationStatement(743) at 0", "Insert VariableDeclarationFragment(742) into VariableDeclarationStatement(743) at 1", "Insert PrimitiveType: boolean(744) into VariableDeclarationStatement(763) at 0", "Insert VariableDeclarationFragment(762) into VariableDeclarationStatement(763) at 1", "Insert Assignment: +=(770) into ExpressionStatement(771) at 0", "Insert InfixExpression: >(776) into IfStatement(793) at 0", "Insert Block(792) into IfStatement(793) at 1", "Insert VariableDeclarationExpression(800) into ForStatement(839) at 0", "Insert InfixExpression: <(803) into ForStatement(839) at 1", "Insert PostfixExpression: ++(805) into ForStatement(839) at 2", "Insert Block(838) into ForStatement(839) at 3", "Insert IfStatement(1030) into IfStatement(1031) at 2", "Insert SimpleName: b(458) into Assignment: =(462) at 0", "Insert InfixExpression: +(461) into Assignment: =(462) at 1", "Insert SimpleName: encodeQuotedPrintable(502) into MethodInvocation(505) at 0", "Insert SimpleName: b(503) into MethodInvocation(505) at 1", "Insert SimpleName: buffer(504) into MethodInvocation(505) at 2", "Insert SimpleName: buffer(508) into MethodInvocation(511) at 0", "Insert SimpleName: write(509) into MethodInvocation(511) at 1", "Insert SimpleName: b(510) into MethodInvocation(511) at 2", "Insert SimpleName: pos(657) into VariableDeclarationFragment(659) at 0", "Insert NumberLiteral: 1(658) into VariableDeclarationFragment(659) at 1", "Insert PrimitiveType: int(661) into VariableDeclarationExpression(665) at 0", "Insert VariableDeclarationFragment(664) into VariableDeclarationExpression(665) at 1", "Insert SimpleName: i(666) into InfixExpression: <(670) at 0", "Insert InfixExpression: -(669) into InfixExpression: <(670) at 1", "Insert SimpleName: i(671) into PostfixExpression: ++(672) at 0", "Insert VariableDeclarationStatement(680) into Block(732) at 0", "Insert IfStatement(731) into Block(732) at 1", "Insert SimpleName: b(735) into VariableDeclarationFragment(742) at 0", "Insert MethodInvocation(741) into VariableDeclarationFragment(742) at 1", "Insert SimpleName: encode(745) into VariableDeclarationFragment(762) at 0", "Insert InfixExpression: ||(761) into VariableDeclarationFragment(762) at 1", "Insert SimpleName: pos(764) into Assignment: +=(770) at 0", "Insert MethodInvocation(769) into Assignment: +=(770) at 1", "Insert SimpleName: pos(772) into InfixExpression: >(776) at 0", "Insert InfixExpression: -(775) into InfixExpression: >(776) at 1", "Insert ExpressionStatement(781) into Block(792) at 0", "Insert ExpressionStatement(786) into Block(792) at 1", "Insert ExpressionStatement(791) into Block(792) at 2", "Insert PrimitiveType: int(794) into VariableDeclarationExpression(800) at 0", "Insert VariableDeclarationFragment(799) into VariableDeclarationExpression(800) at 1", "Insert SimpleName: i(801) into InfixExpression: <(803) at 0", "Insert QualifiedName: bytes.length(802) into InfixExpression: <(803) at 1", "Insert SimpleName: i(804) into PostfixExpression: ++(805) at 0", "Insert ExpressionStatement(812) into Block(838) at 0", "Insert ExpressionStatement(831) into Block(838) at 1", "Insert ExpressionStatement(837) into Block(838) at 2", "Insert InfixExpression: &&(1023) into IfStatement(1030) at 0", "Move Block(535) into IfStatement(1030) at 1", "Insert NumberLiteral: 256(459) into InfixExpression: +(461) at 0", "Insert SimpleName: b(460) into InfixExpression: +(461) at 1", "Insert SimpleName: i(662) into VariableDeclarationFragment(664) at 0", "Insert NumberLiteral: 0(663) into VariableDeclarationFragment(664) at 1", "Insert QualifiedName: bytes.length(667) into InfixExpression: -(669) at 0", "Insert NumberLiteral: 3(668) into InfixExpression: -(669) at 1", "Insert PrimitiveType: int(673) into VariableDeclarationStatement(680) at 0", "Insert VariableDeclarationFragment(679) into VariableDeclarationStatement(680) at 1", "Insert InfixExpression: <(683) into IfStatement(731) at 0", "Insert Block(696) into IfStatement(731) at 1", "Insert Block(730) into IfStatement(731) at 2", "Insert SimpleName: getUnsignedOctet(736) into MethodInvocation(741) at 0", "Insert InfixExpression: -(739) into MethodInvocation(741) at 1", "Insert SimpleName: bytes(740) into MethodInvocation(741) at 2", "Insert PrefixExpression: !(750) into InfixExpression: ||(761) at 0", "Insert ParenthesizedExpression(760) into InfixExpression: ||(761) at 1", "Insert SimpleName: encodeByte(765) into MethodInvocation(769) at 0", "Insert SimpleName: b(766) into MethodInvocation(769) at 1", "Insert SimpleName: encode(767) into MethodInvocation(769) at 2", "Insert SimpleName: buffer(768) into MethodInvocation(769) at 3", "Insert SimpleName: SAFE_LENGTH(773) into InfixExpression: -(775) at 0", "Insert NumberLiteral: 2(774) into InfixExpression: -(775) at 1", "Insert MethodInvocation(780) into ExpressionStatement(781) at 0", "Insert MethodInvocation(785) into ExpressionStatement(786) at 0", "Insert MethodInvocation(790) into ExpressionStatement(791) at 0", "Insert SimpleName: i(795) into VariableDeclarationFragment(799) at 0", "Insert InfixExpression: -(798) into VariableDeclarationFragment(799) at 1", "Insert Assignment: =(811) into ExpressionStatement(812) at 0", "Insert Assignment: =(830) into ExpressionStatement(831) at 0", "Insert MethodInvocation(836) into ExpressionStatement(837) at 0", "Insert InfixExpression: !=(1019) into InfixExpression: &&(1023) at 0", "Insert InfixExpression: !=(1022) into InfixExpression: &&(1023) at 1", "Insert SimpleName: b(674) into VariableDeclarationFragment(679) at 0", "Insert MethodInvocation(678) into VariableDeclarationFragment(679) at 1", "Insert SimpleName: pos(681) into InfixExpression: <(683) at 0", "Insert SimpleName: SAFE_LENGTH(682) into InfixExpression: <(683) at 1", "Insert ExpressionStatement(695) into Block(696) at 0", "Insert ExpressionStatement(710) into Block(730) at 0", "Insert ExpressionStatement(715) into Block(730) at 1", "Insert ExpressionStatement(720) into Block(730) at 2", "Insert ExpressionStatement(725) into Block(730) at 3", "Insert ExpressionStatement(729) into Block(730) at 4", "Insert QualifiedName: bytes.length(737) into InfixExpression: -(739) at 0", "Insert NumberLiteral: 3(738) into InfixExpression: -(739) at 1", "Insert MethodInvocation(749) into PrefixExpression: !(750) at 0", "Insert InfixExpression: &&(759) into ParenthesizedExpression(760) at 0", "Insert SimpleName: buffer(777) into MethodInvocation(780) at 0", "Insert SimpleName: write(778) into MethodInvocation(780) at 1", "Insert SimpleName: ESCAPE_CHAR(779) into MethodInvocation(780) at 2", "Insert SimpleName: buffer(782) into MethodInvocation(785) at 0", "Insert SimpleName: write(783) into MethodInvocation(785) at 1", "Insert SimpleName: CR(784) into MethodInvocation(785) at 2", "Insert SimpleName: buffer(787) into MethodInvocation(790) at 0", "Insert SimpleName: write(788) into MethodInvocation(790) at 1", "Insert SimpleName: LF(789) into MethodInvocation(790) at 2", "Insert QualifiedName: bytes.length(796) into InfixExpression: -(798) at 0", "Insert NumberLiteral: 2(797) into InfixExpression: -(798) at 1", "Insert SimpleName: b(806) into Assignment: =(811) at 0", "Insert MethodInvocation(810) into Assignment: =(811) at 1", "Insert SimpleName: encode(813) into Assignment: =(830) at 0", "Insert InfixExpression: ||(829) into Assignment: =(830) at 1", "Insert SimpleName: encodeByte(832) into MethodInvocation(836) at 0", "Insert SimpleName: b(833) into MethodInvocation(836) at 1", "Insert SimpleName: encode(834) into MethodInvocation(836) at 2", "Insert SimpleName: buffer(835) into MethodInvocation(836) at 3", "Insert IfStatement(964) into Block(1001) at 0", "Insert SimpleName: b(1017) into InfixExpression: !=(1019) at 0", "Insert SimpleName: CR(1018) into InfixExpression: !=(1019) at 1", "Insert SimpleName: b(1020) into InfixExpression: !=(1022) at 0", "Insert SimpleName: LF(1021) into InfixExpression: !=(1022) at 1", "Insert SimpleName: getUnsignedOctet(675) into MethodInvocation(678) at 0", "Insert SimpleName: i(676) into MethodInvocation(678) at 1", "Insert SimpleName: bytes(677) into MethodInvocation(678) at 2", "Insert Assignment: +=(694) into ExpressionStatement(695) at 0", "Insert MethodInvocation(709) into ExpressionStatement(710) at 0", "Insert MethodInvocation(714) into ExpressionStatement(715) at 0", "Insert MethodInvocation(719) into ExpressionStatement(720) at 0", "Insert MethodInvocation(724) into ExpressionStatement(725) at 0", "Insert Assignment: =(728) into ExpressionStatement(729) at 0", "Insert SimpleName: printable(746) into MethodInvocation(749) at 0", "Insert SimpleName: get(747) into MethodInvocation(749) at 1", "Insert SimpleName: b(748) into MethodInvocation(749) at 2", "Insert MethodInvocation(753) into InfixExpression: &&(759) at 0", "Insert InfixExpression: >(758) into InfixExpression: &&(759) at 1", "Insert SimpleName: getUnsignedOctet(807) into MethodInvocation(810) at 0", "Insert SimpleName: i(808) into MethodInvocation(810) at 1", "Insert SimpleName: bytes(809) into MethodInvocation(810) at 2", "Insert PrefixExpression: !(818) into InfixExpression: ||(829) at 0", "Insert ParenthesizedExpression(828) into InfixExpression: ||(829) at 1", "Insert InfixExpression: ==(961) into IfStatement(964) at 0", "Insert Block(963) into IfStatement(964) at 1", "Insert SimpleName: pos(684) into Assignment: +=(694) at 0", "Insert MethodInvocation(693) into Assignment: +=(694) at 1", "Insert SimpleName: encodeByte(697) into MethodInvocation(709) at 0", "Insert SimpleName: b(698) into MethodInvocation(709) at 1", "Insert InfixExpression: ||(707) into MethodInvocation(709) at 2", "Insert SimpleName: buffer(708) into MethodInvocation(709) at 3", "Insert SimpleName: buffer(711) into MethodInvocation(714) at 0", "Insert SimpleName: write(712) into MethodInvocation(714) at 1", "Insert SimpleName: ESCAPE_CHAR(713) into MethodInvocation(714) at 2", "Insert SimpleName: buffer(716) into MethodInvocation(719) at 0", "Insert SimpleName: write(717) into MethodInvocation(719) at 1", "Insert SimpleName: CR(718) into MethodInvocation(719) at 2", "Insert SimpleName: buffer(721) into MethodInvocation(724) at 0", "Insert SimpleName: write(722) into MethodInvocation(724) at 1", "Insert SimpleName: LF(723) into MethodInvocation(724) at 2", "Insert SimpleName: pos(726) into Assignment: =(728) at 0", "Insert NumberLiteral: 1(727) into Assignment: =(728) at 1", "Insert SimpleName: isWhitespace(751) into MethodInvocation(753) at 0", "Insert SimpleName: b(752) into MethodInvocation(753) at 1", "Insert SimpleName: pos(754) into InfixExpression: >(758) at 0", "Insert InfixExpression: -(757) into InfixExpression: >(758) at 1", "Insert MethodInvocation(817) into PrefixExpression: !(818) at 0", "Insert InfixExpression: &&(827) into ParenthesizedExpression(828) at 0", "Move ArrayAccess(485) into InfixExpression: ==(961) at 0", "Insert SimpleName: CR(960) into InfixExpression: ==(961) at 1", "Insert ContinueStatement(962) into Block(963) at 0", "Insert SimpleName: encodeByte(685) into MethodInvocation(693) at 0", "Insert SimpleName: b(686) into MethodInvocation(693) at 1", "Insert PrefixExpression: !(691) into MethodInvocation(693) at 2", "Insert SimpleName: buffer(692) into MethodInvocation(693) at 3", "Insert PrefixExpression: !(703) into InfixExpression: ||(707) at 0", "Insert MethodInvocation(706) into InfixExpression: ||(707) at 1", "Insert SimpleName: SAFE_LENGTH(755) into InfixExpression: -(757) at 0", "Insert NumberLiteral: 5(756) into InfixExpression: -(757) at 1", "Insert SimpleName: printable(814) into MethodInvocation(817) at 0", "Insert SimpleName: get(815) into MethodInvocation(817) at 1", "Insert SimpleName: b(816) into MethodInvocation(817) at 2", "Insert InfixExpression: >(823) into InfixExpression: &&(827) at 0", "Insert MethodInvocation(826) into InfixExpression: &&(827) at 1", "Insert ArrayAccess(972) into MethodInvocation(973) at 2", "Insert MethodInvocation(690) into PrefixExpression: !(691) at 0", "Insert MethodInvocation(702) into PrefixExpression: !(703) at 0", "Insert SimpleName: isWhitespace(704) into MethodInvocation(706) at 0", "Insert SimpleName: b(705) into MethodInvocation(706) at 1", "Insert SimpleName: i(819) into InfixExpression: >(823) at 0", "Insert InfixExpression: -(822) into InfixExpression: >(823) at 1", "Insert SimpleName: isWhitespace(824) into MethodInvocation(826) at 0", "Insert SimpleName: b(825) into MethodInvocation(826) at 1", "Insert SimpleName: bytes(970) into ArrayAccess(972) at 0", "Insert SimpleName: i(971) into ArrayAccess(972) at 1", "Insert SimpleName: printable(687) into MethodInvocation(690) at 0", "Insert SimpleName: get(688) into MethodInvocation(690) at 1", "Insert SimpleName: b(689) into MethodInvocation(690) at 2", "Insert SimpleName: printable(699) into MethodInvocation(702) at 0", "Insert SimpleName: get(700) into MethodInvocation(702) at 1", "Insert SimpleName: b(701) into MethodInvocation(702) at 2", "Insert QualifiedName: bytes.length(820) into InfixExpression: -(822) at 0", "Insert NumberLiteral: 2(821) into InfixExpression: -(822) at 1"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}