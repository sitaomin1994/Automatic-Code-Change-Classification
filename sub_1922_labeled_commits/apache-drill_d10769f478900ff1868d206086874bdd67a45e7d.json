{"application": "apache-drill", "csha": "d10769f478900ff1868d206086874bdd67a45e7d", "files": [{"ParquetOutputRecordWriter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 5", "operations": ["INS QualifiedName: java.util.Arrays to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 5"]}, {"root": "INS TypeDeclaration: class to CompilationUnit at 31", "operations": ["INS SimpleName: IntervalUtility to TypeDeclaration: class at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS InfixExpression: < to ForStatement at 1", "INS NumberLiteral: 8 to Assignment: += at 1", "INS MethodDeclaration to TypeDeclaration: class at 3", "INS ArrayAccess to Assignment: = at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: output to SingleVariableDeclaration at 2", "INS Modifier: final to SingleVariableDeclaration at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: output to ArrayAccess at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS TypeDeclaration: class to CompilationUnit at 31", "INS PrimitiveType: byte to CastExpression at 0", "INS Modifier: static to TypeDeclaration: class at 1", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS ArrayType: byte[] to SingleVariableDeclaration at 1", "INS SimpleName: i to ArrayAccess at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 1", "INS Modifier: private to TypeDeclaration: class at 0", "INS NumberLiteral: 4 to InfixExpression: + at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: shiftOrder to Assignment: += at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS PrimitiveType: int to VariableDeclarationStatement at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 1", "INS ForStatement to Block at 1", "INS SimpleName: i to InfixExpression: < at 0", "INS SimpleName: shiftOrder to InfixExpression: >> at 1", "INS Block to MethodDeclaration at 7", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS VariableDeclarationStatement to Block at 0", "INS PostfixExpression: ++ to ForStatement at 2", "INS Dimension to ArrayType: byte[] at 1", "INS ParenthesizedExpression to CastExpression at 1", "INS SimpleName: value to SingleVariableDeclaration at 2", "INS CastExpression to Assignment: = at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: outputIndex to InfixExpression: + at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: intToLEByteArray to MethodDeclaration at 3", "INS Assignment: += to ExpressionStatement at 0", "INS SimpleName: shiftOrder to VariableDeclarationFragment at 0", "INS Modifier: final to SingleVariableDeclaration at 0", "INS InfixExpression: + to InfixExpression: < at 1", "INS Modifier: static to MethodDeclaration at 1", "INS SimpleName: outputIndex to SingleVariableDeclaration at 2", "INS SimpleName: outputIndex to VariableDeclarationFragment at 1", "INS InfixExpression: >> to ParenthesizedExpression at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Modifier: private to MethodDeclaration at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS SimpleName: value to InfixExpression: >> at 0", "INS Block to ForStatement at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 23", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS ArrayType: byte[] to ArrayCreation at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: output to VariableDeclarationFragment at 0", "INS ArrayType: byte[] to FieldDeclaration at 2", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS NumberLiteral: 12 to ArrayCreation at 1", "INS FieldDeclaration to TypeDeclaration: class at 23", "INS Dimension to ArrayType: byte[] at 1", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS Dimension to ArrayType: byte[] at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3"]}, {"root": "INS Initializer to TypeDeclaration: class at 24", "operations": ["INS Block to Initializer at 0", "INS Initializer to TypeDeclaration: class at 24"]}, {"root": "INS Initializer to TypeDeclaration: class at 25", "operations": ["INS Block to Initializer at 0", "INS Initializer to TypeDeclaration: class at 25"]}]}}, {"ParquetOutputRecordWriter_diff": {"operations": ["Insert ImportDeclaration(11) into CompilationUnit(300) at 5", "Insert TypeDeclaration: class(299) into CompilationUnit(300) at 31", "Insert QualifiedName: java.util.Arrays(10) into ImportDeclaration(11) at 0", "Insert FieldDeclaration(209) into TypeDeclaration: class(241) at 23", "Insert Initializer(211) into TypeDeclaration: class(241) at 24", "Insert Initializer(213) into TypeDeclaration: class(241) at 25", "Insert Modifier: private(242) into TypeDeclaration: class(299) at 0", "Insert Modifier: static(243) into TypeDeclaration: class(299) at 1", "Insert SimpleName: IntervalUtility(244) into TypeDeclaration: class(299) at 2", "Insert MethodDeclaration(298) into TypeDeclaration: class(299) at 3", "Insert Modifier: private(197) into FieldDeclaration(209) at 0", "Insert Modifier: final(198) into FieldDeclaration(209) at 1", "Insert ArrayType: byte[](201) into FieldDeclaration(209) at 2", "Insert VariableDeclarationFragment(208) into FieldDeclaration(209) at 3", "Insert Block(210) into Initializer(211) at 0", "Insert Block(212) into Initializer(213) at 0", "Insert Modifier: private(245) into MethodDeclaration(298) at 0", "Insert Modifier: static(246) into MethodDeclaration(298) at 1", "Insert PrimitiveType: void(247) into MethodDeclaration(298) at 2", "Insert SimpleName: intToLEByteArray(248) into MethodDeclaration(298) at 3", "Insert SingleVariableDeclaration(252) into MethodDeclaration(298) at 4", "Insert SingleVariableDeclaration(258) into MethodDeclaration(298) at 5", "Insert SingleVariableDeclaration(262) into MethodDeclaration(298) at 6", "Insert Block(297) into MethodDeclaration(298) at 7", "Insert PrimitiveType: byte(199) into ArrayType: byte[](201) at 0", "Insert Dimension(200) into ArrayType: byte[](201) at 1", "Insert SimpleName: output(202) into VariableDeclarationFragment(208) at 0", "Insert ArrayCreation(207) into VariableDeclarationFragment(208) at 1", "Insert Modifier: final(249) into SingleVariableDeclaration(252) at 0", "Insert PrimitiveType: int(250) into SingleVariableDeclaration(252) at 1", "Insert SimpleName: value(251) into SingleVariableDeclaration(252) at 2", "Insert Modifier: final(253) into SingleVariableDeclaration(258) at 0", "Insert ArrayType: byte[](256) into SingleVariableDeclaration(258) at 1", "Insert SimpleName: output(257) into SingleVariableDeclaration(258) at 2", "Insert Modifier: final(259) into SingleVariableDeclaration(262) at 0", "Insert PrimitiveType: int(260) into SingleVariableDeclaration(262) at 1", "Insert SimpleName: outputIndex(261) into SingleVariableDeclaration(262) at 2", "Insert VariableDeclarationStatement(267) into Block(297) at 0", "Insert ForStatement(296) into Block(297) at 1", "Insert ArrayType: byte[](205) into ArrayCreation(207) at 0", "Insert NumberLiteral: 12(206) into ArrayCreation(207) at 1", "Insert PrimitiveType: byte(254) into ArrayType: byte[](256) at 0", "Insert Dimension(255) into ArrayType: byte[](256) at 1", "Insert PrimitiveType: int(263) into VariableDeclarationStatement(267) at 0", "Insert VariableDeclarationFragment(266) into VariableDeclarationStatement(267) at 1", "Insert VariableDeclarationExpression(272) into ForStatement(296) at 0", "Insert InfixExpression: <(277) into ForStatement(296) at 1", "Insert PostfixExpression: ++(279) into ForStatement(296) at 2", "Insert Block(295) into ForStatement(296) at 3", "Insert PrimitiveType: byte(203) into ArrayType: byte[](205) at 0", "Insert Dimension(204) into ArrayType: byte[](205) at 1", "Insert SimpleName: shiftOrder(264) into VariableDeclarationFragment(266) at 0", "Insert NumberLiteral: 0(265) into VariableDeclarationFragment(266) at 1", "Insert PrimitiveType: int(268) into VariableDeclarationExpression(272) at 0", "Insert VariableDeclarationFragment(271) into VariableDeclarationExpression(272) at 1", "Insert SimpleName: i(273) into InfixExpression: <(277) at 0", "Insert InfixExpression: +(276) into InfixExpression: <(277) at 1", "Insert SimpleName: i(278) into PostfixExpression: ++(279) at 0", "Insert ExpressionStatement(290) into Block(295) at 0", "Insert ExpressionStatement(294) into Block(295) at 1", "Insert SimpleName: i(269) into VariableDeclarationFragment(271) at 0", "Insert SimpleName: outputIndex(270) into VariableDeclarationFragment(271) at 1", "Insert SimpleName: outputIndex(274) into InfixExpression: +(276) at 0", "Insert NumberLiteral: 4(275) into InfixExpression: +(276) at 1", "Insert Assignment: =(289) into ExpressionStatement(290) at 0", "Insert Assignment: +=(293) into ExpressionStatement(294) at 0", "Insert ArrayAccess(282) into Assignment: =(289) at 0", "Insert CastExpression(288) into Assignment: =(289) at 1", "Insert SimpleName: shiftOrder(291) into Assignment: +=(293) at 0", "Insert NumberLiteral: 8(292) into Assignment: +=(293) at 1", "Insert SimpleName: output(280) into ArrayAccess(282) at 0", "Insert SimpleName: i(281) into ArrayAccess(282) at 1", "Insert PrimitiveType: byte(283) into CastExpression(288) at 0", "Insert ParenthesizedExpression(287) into CastExpression(288) at 1", "Insert InfixExpression: >>(286) into ParenthesizedExpression(287) at 0", "Insert SimpleName: value(284) into InfixExpression: >>(286) at 0", "Insert SimpleName: shiftOrder(285) into InfixExpression: >>(286) at 1"]}}, {"DrillParquetGroupConverter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 20", "operations": ["INS ImportDeclaration to CompilationUnit at 20", "INS QualifiedName: org.apache.drill.exec.expr.holders.IntervalHolder to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 43", "operations": ["INS ImportDeclaration to CompilationUnit at 43", "INS QualifiedName: org.apache.drill.exec.vector.complex.writer.IntervalWriter to ImportDeclaration at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 27", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 3", "INS Modifier: public to TypeDeclaration: class at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS FieldAccess to Assignment: = at 0", "INS QualifiedName: holder.days to Assignment: = at 0", "INS QualifiedName: holder.months to Assignment: = at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS SimpleType: IntervalHolder to FieldDeclaration at 2", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 4", "INS SimpleName: writer to FieldAccess at 1", "INS SimpleName: input to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: getIntFromLEBytes to MethodInvocation at 1", "INS SimpleName: input to MethodInvocation at 2", "INS Dimension to ArrayType: byte[] at 1", "INS Modifier: private to FieldDeclaration at 1", "INS NumberLiteral: 8 to MethodInvocation at 3", "INS SimpleName: IntervalHolder to SimpleType: IntervalHolder at 0", "INS SimpleName: PrimitiveConverter to SimpleType: PrimitiveConverter at 0", "INS ThisExpression to FieldAccess at 0", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: ParquetReaderUtility to MethodInvocation at 0", "INS SimpleType: IntervalWriter to FieldDeclaration at 2", "INS SimpleName: addBinary to MethodDeclaration at 3", "INS TypeDeclaration: class to TypeDeclaration: class at 27", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS SimpleName: input to VariableDeclarationFragment at 0", "INS SimpleName: value to SingleVariableDeclaration at 1", "INS SimpleName: writer to SingleVariableDeclaration at 1", "INS SimpleName: Binary to SimpleType: Binary at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ArrayType: byte[] to VariableDeclarationStatement at 1", "INS SimpleType: Binary to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS Block to MethodDeclaration at 3", "INS Modifier: final to VariableDeclarationStatement at 0", "INS SimpleName: writer to MethodInvocation at 0", "INS Modifier: public to MethodDeclaration at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleType: IntervalHolder to ClassInstanceCreation at 0", "INS SimpleName: holder to MethodInvocation at 2", "INS SimpleName: value to MethodInvocation at 0", "INS SimpleType: PrimitiveConverter to TypeDeclaration: class at 3", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: writer to Assignment: = at 1", "INS SimpleName: getBytes to MethodInvocation at 1", "INS SimpleName: input to MethodInvocation at 2", "INS SimpleName: holder to VariableDeclarationFragment at 0", "INS SimpleType: IntervalWriter to SingleVariableDeclaration at 0", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS SimpleName: ParquetReaderUtility to MethodInvocation at 0", "INS NumberLiteral: 4 to MethodInvocation at 3", "INS SimpleName: getIntFromLEBytes to MethodInvocation at 1", "INS Block to MethodDeclaration at 5", "INS ExpressionStatement to Block at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS ExpressionStatement to Block at 3", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: IntervalWriter to SimpleType: IntervalWriter at 0", "INS ExpressionStatement to Block at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleName: ParquetReaderUtility to MethodInvocation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS VariableDeclarationStatement to Block at 0", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS QualifiedName: holder.milliseconds to Assignment: = at 0", "INS MethodInvocation to Assignment: = at 1", "INS Modifier: private to FieldDeclaration at 1", "INS SimpleName: writer to VariableDeclarationFragment at 0", "INS Assignment: = to ExpressionStatement at 0", "INS Modifier: static to TypeDeclaration: class at 1", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS Modifier: final to FieldDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: write to MethodInvocation at 1", "INS Modifier: final to FieldDeclaration at 0", "INS SimpleName: IntervalHolder to SimpleType: IntervalHolder at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: getIntFromLEBytes to MethodInvocation at 1", "INS SimpleName: DrillFixedLengthByteArrayToInterval to TypeDeclaration: class at 2", "INS SimpleName: DrillFixedLengthByteArrayToInterval to MethodDeclaration at 1", "INS SimpleName: IntervalWriter to SimpleType: IntervalWriter at 0"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS ConditionalExpression to VariableDeclarationFragment at 1", "INS SimpleName: writer to ClassInstanceCreation at 1", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: interval to MethodInvocation at 1", "INS SimpleName: getRepetition to MethodInvocation at 1", "INS SimpleName: type to MethodInvocation at 0", "INS SimpleName: writer to VariableDeclarationFragment at 0", "INS MethodInvocation to ConditionalExpression at 2", "INS QualifiedName: OriginalType.INTERVAL to InfixExpression: == at 1", "INS SimpleName: list to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: interval to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleType: IntervalWriter to VariableDeclarationStatement at 0", "INS SimpleName: getOriginalType to MethodInvocation at 1", "INS SimpleName: name to MethodInvocation at 2", "INS InfixExpression: == to ConditionalExpression at 0", "INS MethodInvocation to InfixExpression: == at 0", "INS SimpleName: type to MethodInvocation at 0", "INS IfStatement to IfStatement at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS InfixExpression: == to IfStatement at 0", "INS SimpleType: DrillFixedLengthByteArrayToInterval to ClassInstanceCreation at 0", "INS QualifiedName: Repetition.REPEATED to InfixExpression: == at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: DrillFixedLengthByteArrayToInterval to SimpleType: DrillFixedLengthByteArrayToInterval at 0", "INS SimpleName: mapWriter to MethodInvocation at 0", "INS SimpleName: name to MethodInvocation at 2", "INS SimpleName: mapWriter to MethodInvocation at 0", "INS ReturnStatement to Block at 1", "INS SimpleName: IntervalWriter to SimpleType: IntervalWriter at 0", "INS MethodInvocation to ConditionalExpression at 1", "INS MethodInvocation to InfixExpression: == at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 2"]}]}}, {"DrillParquetGroupConverter_diff": {"operations": ["Insert ImportDeclaration(56) into CompilationUnit(2392) at 20", "Insert ImportDeclaration(102) into CompilationUnit(2392) at 43", "Insert QualifiedName: org.apache.drill.exec.expr.holders.IntervalHolder(55) into ImportDeclaration(56) at 0", "Insert QualifiedName: org.apache.drill.exec.vector.complex.writer.IntervalWriter(101) into ImportDeclaration(102) at 0", "Insert TypeDeclaration: class(2390) into TypeDeclaration: class(2391) at 27", "Insert Modifier: public(2304) into TypeDeclaration: class(2390) at 0", "Insert Modifier: static(2305) into TypeDeclaration: class(2390) at 1", "Insert SimpleName: DrillFixedLengthByteArrayToInterval(2306) into TypeDeclaration: class(2390) at 2", "Insert SimpleType: PrimitiveConverter(2308) into TypeDeclaration: class(2390) at 3", "Insert FieldDeclaration(2315) into TypeDeclaration: class(2390) at 4", "Insert FieldDeclaration(2325) into TypeDeclaration: class(2390) at 5", "Insert MethodDeclaration(2339) into TypeDeclaration: class(2390) at 6", "Insert MethodDeclaration(2389) into TypeDeclaration: class(2390) at 7", "Insert SimpleName: PrimitiveConverter(2307) into SimpleType: PrimitiveConverter(2308) at 0", "Insert Modifier: final(2309) into FieldDeclaration(2315) at 0", "Insert Modifier: private(2310) into FieldDeclaration(2315) at 1", "Insert SimpleType: IntervalWriter(2312) into FieldDeclaration(2315) at 2", "Insert VariableDeclarationFragment(2314) into FieldDeclaration(2315) at 3", "Insert Modifier: final(2316) into FieldDeclaration(2325) at 0", "Insert Modifier: private(2317) into FieldDeclaration(2325) at 1", "Insert SimpleType: IntervalHolder(2319) into FieldDeclaration(2325) at 2", "Insert VariableDeclarationFragment(2324) into FieldDeclaration(2325) at 3", "Insert Modifier: public(2326) into MethodDeclaration(2339) at 0", "Insert SimpleName: DrillFixedLengthByteArrayToInterval(2327) into MethodDeclaration(2339) at 1", "Insert SingleVariableDeclaration(2331) into MethodDeclaration(2339) at 2", "Insert Block(2338) into MethodDeclaration(2339) at 3", "Insert MarkerAnnotation(2341) into MethodDeclaration(2389) at 0", "Insert Modifier: public(2342) into MethodDeclaration(2389) at 1", "Insert PrimitiveType: void(2343) into MethodDeclaration(2389) at 2", "Insert SimpleName: addBinary(2344) into MethodDeclaration(2389) at 3", "Insert SingleVariableDeclaration(2348) into MethodDeclaration(2389) at 4", "Insert Block(2388) into MethodDeclaration(2389) at 5", "Insert SimpleName: IntervalWriter(2311) into SimpleType: IntervalWriter(2312) at 0", "Insert SimpleName: writer(2313) into VariableDeclarationFragment(2314) at 0", "Insert SimpleName: IntervalHolder(2318) into SimpleType: IntervalHolder(2319) at 0", "Insert SimpleName: holder(2320) into VariableDeclarationFragment(2324) at 0", "Insert ClassInstanceCreation(2323) into VariableDeclarationFragment(2324) at 1", "Insert SimpleType: IntervalWriter(2329) into SingleVariableDeclaration(2331) at 0", "Insert SimpleName: writer(2330) into SingleVariableDeclaration(2331) at 1", "Insert ExpressionStatement(2337) into Block(2338) at 0", "Insert SimpleName: Override(2340) into MarkerAnnotation(2341) at 0", "Insert SimpleType: Binary(2346) into SingleVariableDeclaration(2348) at 0", "Insert SimpleName: value(2347) into SingleVariableDeclaration(2348) at 1", "Insert VariableDeclarationStatement(2358) into Block(2388) at 0", "Insert ExpressionStatement(2366) into Block(2388) at 1", "Insert ExpressionStatement(2374) into Block(2388) at 2", "Insert ExpressionStatement(2382) into Block(2388) at 3", "Insert ExpressionStatement(2387) into Block(2388) at 4", "Insert IfStatement(1241) into IfStatement(1242) at 2", "Insert SimpleType: IntervalHolder(2322) into ClassInstanceCreation(2323) at 0", "Insert SimpleName: IntervalWriter(2328) into SimpleType: IntervalWriter(2329) at 0", "Insert Assignment: =(2336) into ExpressionStatement(2337) at 0", "Insert SimpleName: Binary(2345) into SimpleType: Binary(2346) at 0", "Insert Modifier: final(2349) into VariableDeclarationStatement(2358) at 0", "Insert ArrayType: byte[](2352) into VariableDeclarationStatement(2358) at 1", "Insert VariableDeclarationFragment(2357) into VariableDeclarationStatement(2358) at 2", "Insert Assignment: =(2365) into ExpressionStatement(2366) at 0", "Insert Assignment: =(2373) into ExpressionStatement(2374) at 0", "Insert Assignment: =(2381) into ExpressionStatement(2382) at 0", "Insert MethodInvocation(2386) into ExpressionStatement(2387) at 0", "Insert InfixExpression: ==(1203) into IfStatement(1241) at 0", "Insert Block(1230) into IfStatement(1241) at 1", "Move Block(1204) into IfStatement(1241) at 2", "Insert SimpleName: IntervalHolder(2321) into SimpleType: IntervalHolder(2322) at 0", "Insert FieldAccess(2334) into Assignment: =(2336) at 0", "Insert SimpleName: writer(2335) into Assignment: =(2336) at 1", "Insert PrimitiveType: byte(2350) into ArrayType: byte[](2352) at 0", "Insert Dimension(2351) into ArrayType: byte[](2352) at 1", "Insert SimpleName: input(2353) into VariableDeclarationFragment(2357) at 0", "Insert MethodInvocation(2356) into VariableDeclarationFragment(2357) at 1", "Insert QualifiedName: holder.months(2359) into Assignment: =(2365) at 0", "Insert MethodInvocation(2364) into Assignment: =(2365) at 1", "Insert QualifiedName: holder.days(2367) into Assignment: =(2373) at 0", "Insert MethodInvocation(2372) into Assignment: =(2373) at 1", "Insert QualifiedName: holder.milliseconds(2375) into Assignment: =(2381) at 0", "Insert MethodInvocation(2380) into Assignment: =(2381) at 1", "Insert SimpleName: writer(2383) into MethodInvocation(2386) at 0", "Insert SimpleName: write(2384) into MethodInvocation(2386) at 1", "Insert SimpleName: holder(2385) into MethodInvocation(2386) at 2", "Insert MethodInvocation(1201) into InfixExpression: ==(1203) at 0", "Insert QualifiedName: OriginalType.INTERVAL(1202) into InfixExpression: ==(1203) at 1", "Insert VariableDeclarationStatement(1224) into Block(1230) at 0", "Insert ReturnStatement(1229) into Block(1230) at 1", "Insert ThisExpression(2332) into FieldAccess(2334) at 0", "Insert SimpleName: writer(2333) into FieldAccess(2334) at 1", "Insert SimpleName: value(2354) into MethodInvocation(2356) at 0", "Insert SimpleName: getBytes(2355) into MethodInvocation(2356) at 1", "Insert SimpleName: ParquetReaderUtility(2360) into MethodInvocation(2364) at 0", "Insert SimpleName: getIntFromLEBytes(2361) into MethodInvocation(2364) at 1", "Insert SimpleName: input(2362) into MethodInvocation(2364) at 2", "Insert NumberLiteral: 0(2363) into MethodInvocation(2364) at 3", "Insert SimpleName: ParquetReaderUtility(2368) into MethodInvocation(2372) at 0", "Insert SimpleName: getIntFromLEBytes(2369) into MethodInvocation(2372) at 1", "Insert SimpleName: input(2370) into MethodInvocation(2372) at 2", "Insert NumberLiteral: 4(2371) into MethodInvocation(2372) at 3", "Insert SimpleName: ParquetReaderUtility(2376) into MethodInvocation(2380) at 0", "Insert SimpleName: getIntFromLEBytes(2377) into MethodInvocation(2380) at 1", "Insert SimpleName: input(2378) into MethodInvocation(2380) at 2", "Insert NumberLiteral: 8(2379) into MethodInvocation(2380) at 3", "Insert SimpleName: type(1199) into MethodInvocation(1201) at 0", "Insert SimpleName: getOriginalType(1200) into MethodInvocation(1201) at 1", "Insert SimpleType: IntervalWriter(1205) into VariableDeclarationStatement(1224) at 0", "Insert VariableDeclarationFragment(1223) into VariableDeclarationStatement(1224) at 1", "Insert ClassInstanceCreation(1228) into ReturnStatement(1229) at 0", "Insert SimpleName: IntervalWriter(1204) into SimpleType: IntervalWriter(1205) at 0", "Insert SimpleName: writer(1206) into VariableDeclarationFragment(1223) at 0", "Insert ConditionalExpression(1222) into VariableDeclarationFragment(1223) at 1", "Insert SimpleType: DrillFixedLengthByteArrayToInterval(1226) into ClassInstanceCreation(1228) at 0", "Insert SimpleName: writer(1227) into ClassInstanceCreation(1228) at 1", "Insert InfixExpression: ==(1211) into ConditionalExpression(1222) at 0", "Insert MethodInvocation(1217) into ConditionalExpression(1222) at 1", "Insert MethodInvocation(1221) into ConditionalExpression(1222) at 2", "Insert SimpleName: DrillFixedLengthByteArrayToInterval(1225) into SimpleType: DrillFixedLengthByteArrayToInterval(1226) at 0", "Insert MethodInvocation(1209) into InfixExpression: ==(1211) at 0", "Insert QualifiedName: Repetition.REPEATED(1210) into InfixExpression: ==(1211) at 1", "Insert MethodInvocation(1215) into MethodInvocation(1217) at 0", "Insert SimpleName: interval(1216) into MethodInvocation(1217) at 1", "Insert SimpleName: mapWriter(1218) into MethodInvocation(1221) at 0", "Insert SimpleName: interval(1219) into MethodInvocation(1221) at 1", "Insert SimpleName: name(1220) into MethodInvocation(1221) at 2", "Insert SimpleName: type(1207) into MethodInvocation(1209) at 0", "Insert SimpleName: getRepetition(1208) into MethodInvocation(1209) at 1", "Insert SimpleName: mapWriter(1212) into MethodInvocation(1215) at 0", "Insert SimpleName: list(1213) into MethodInvocation(1215) at 1", "Insert SimpleName: name(1214) into MethodInvocation(1215) at 2"]}}, {"ColumnReaderFactory_cluster": {"actions": [{"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0", "MOV InfixExpression: == to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleType: NullableFixedByteAlignedReaders.NullableIntervalReader to ClassInstanceCreation at 0", "INS SimpleName: allocateSize to ClassInstanceCreation at 2", "INS Block to IfStatement at 1", "INS IfStatement to Block at 0", "INS SimpleName: recordReader to ClassInstanceCreation at 1", "INS SimpleName: columnChunkMetaData to ClassInstanceCreation at 4", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: descriptor to ClassInstanceCreation at 3", "INS SimpleName: schemaElement to ClassInstanceCreation at 7", "INS QualifiedName: NullableFixedByteAlignedReaders.NullableIntervalReader to SimpleType: NullableFixedByteAlignedReaders.NullableIntervalReader at 0", "INS IfStatement to IfStatement at 2", "INS Block to IfStatement at 1", "INS SimpleName: fixedLength to ClassInstanceCreation at 5", "INS SimpleName: v to ClassInstanceCreation at 6"]}, {"root": "INS IfStatement to IfStatement at 2", "operations": ["INS InfixExpression: == to IfStatement at 0", "INS QualifiedName: FixedByteAlignedReader.IntervalReader to SimpleType: FixedByteAlignedReader.IntervalReader at 0", "INS IfStatement to IfStatement at 2", "INS SimpleType: FixedByteAlignedReader.IntervalReader to ClassInstanceCreation at 0", "INS SimpleName: recordReader to ClassInstanceCreation at 1", "INS SimpleName: schemaElement to ClassInstanceCreation at 7", "INS ReturnStatement to Block at 0", "INS SimpleName: allocateSize to ClassInstanceCreation at 2", "INS Block to IfStatement at 1", "INS QualifiedName: ConvertedType.INTERVAL to InfixExpression: == at 1", "INS SimpleName: fixedLength to ClassInstanceCreation at 5", "INS SimpleName: convertedType to InfixExpression: == at 0", "INS SimpleName: descriptor to ClassInstanceCreation at 3", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: columnChunkMetaData to ClassInstanceCreation at 4", "INS SimpleName: v to ClassInstanceCreation at 6"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 2"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: && to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "UPDATE from && to ==", "operations": ["UPD InfixExpression: && from && to =="]}, {"root": "INS SimpleName: convertedType to InfixExpression: && at 0", "operations": ["INS SimpleName: convertedType to InfixExpression: && at 0"]}, {"root": "INS QualifiedName: ConvertedType.INTERVAL to InfixExpression: && at 1", "operations": ["INS QualifiedName: ConvertedType.INTERVAL to InfixExpression: && at 1"]}]}}, {"ColumnReaderFactory_diff": {"operations": ["Move InfixExpression: ==(494) into IfStatement(581) at 0", "Insert Block(569) into IfStatement(581) at 1", "Insert IfStatement(243) into IfStatement(244) at 2", "Insert IfStatement(568) into Block(569) at 0", "Insert InfixExpression: ==(216) into IfStatement(243) at 0", "Insert Block(228) into IfStatement(243) at 1", "Move Block(227) into IfStatement(243) at 2", "Move InfixExpression: ==(497) into IfStatement(568) at 0", "Move Block(536) into IfStatement(568) at 1", "Insert IfStatement(567) into IfStatement(568) at 2", "Insert SimpleName: convertedType(214) into InfixExpression: ==(216) at 0", "Insert QualifiedName: ConvertedType.INTERVAL(215) into InfixExpression: ==(216) at 1", "Insert ReturnStatement(227) into Block(228) at 0", "Update InfixExpression: &&(498) to ==", "Move InfixExpression: &&(498) into IfStatement(567) at 0", "Insert Block(566) into IfStatement(567) at 1", "Insert ClassInstanceCreation(226) into ReturnStatement(227) at 0", "Insert SimpleName: convertedType(552) into InfixExpression: ==(554) at 0", "Insert QualifiedName: ConvertedType.INTERVAL(553) into InfixExpression: ==(554) at 1", "Insert ReturnStatement(565) into Block(566) at 0", "Insert SimpleType: FixedByteAlignedReader.IntervalReader(218) into ClassInstanceCreation(226) at 0", "Insert SimpleName: recordReader(219) into ClassInstanceCreation(226) at 1", "Insert SimpleName: allocateSize(220) into ClassInstanceCreation(226) at 2", "Insert SimpleName: descriptor(221) into ClassInstanceCreation(226) at 3", "Insert SimpleName: columnChunkMetaData(222) into ClassInstanceCreation(226) at 4", "Insert SimpleName: fixedLength(223) into ClassInstanceCreation(226) at 5", "Insert SimpleName: v(224) into ClassInstanceCreation(226) at 6", "Insert SimpleName: schemaElement(225) into ClassInstanceCreation(226) at 7", "Insert ClassInstanceCreation(564) into ReturnStatement(565) at 0", "Insert QualifiedName: FixedByteAlignedReader.IntervalReader(217) into SimpleType: FixedByteAlignedReader.IntervalReader(218) at 0", "Insert SimpleType: NullableFixedByteAlignedReaders.NullableIntervalReader(556) into ClassInstanceCreation(564) at 0", "Insert SimpleName: recordReader(557) into ClassInstanceCreation(564) at 1", "Insert SimpleName: allocateSize(558) into ClassInstanceCreation(564) at 2", "Insert SimpleName: descriptor(559) into ClassInstanceCreation(564) at 3", "Insert SimpleName: columnChunkMetaData(560) into ClassInstanceCreation(564) at 4", "Insert SimpleName: fixedLength(561) into ClassInstanceCreation(564) at 5", "Insert SimpleName: v(562) into ClassInstanceCreation(564) at 6", "Insert SimpleName: schemaElement(563) into ClassInstanceCreation(564) at 7", "Insert QualifiedName: NullableFixedByteAlignedReaders.NullableIntervalReader(555) into SimpleType: NullableFixedByteAlignedReaders.NullableIntervalReader(556) at 0"]}}, {"FixedByteAlignedReader_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 6", "operations": ["INS QualifiedName: org.apache.drill.exec.expr.holders.IntervalHolder to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 6"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: org.apache.drill.exec.store.parquet.ParquetReaderUtility to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS QualifiedName: org.apache.drill.exec.vector.IntervalVector to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 13"]}, {"root": "INS ImportDeclaration to CompilationUnit at 20", "operations": ["INS QualifiedName: parquet.io.api.Binary to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 20"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 11", "operations": ["INS SimpleName: ColumnDescriptor to SimpleType: ColumnDescriptor at 0", "INS SimpleName: start to MethodInvocation at 2", "INS SimpleName: getInt to MethodInvocation at 1", "INS NumberLiteral: 4 to InfixExpression: + at 1", "INS SimpleName: getIntFromLEBytes to MethodInvocation at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS ExpressionStatement to Block at 1", "INS NumberLiteral: 12 to InfixExpression: * at 1", "INS NumberLiteral: 0 to MethodInvocation at 3", "INS SimpleName: IntervalVector to SimpleType: IntervalVector at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: usingDictionary to IfStatement at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS InfixExpression: * to MethodInvocation at 2", "INS Modifier: public to TypeDeclaration: class at 0", "INS SimpleName: descriptor to SingleVariableDeclaration at 1", "INS SimpleName: Override to MarkerAnnotation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS ExpressionStatement to Block at 1", "INS SimpleName: schemaElement to SuperConstructorInvocation at 6", "INS SuperConstructorInvocation to Block at 0", "INS SimpleName: getMutator to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleType: IntervalVector to FieldDeclaration at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: ColumnChunkMetaData to SimpleType: ColumnChunkMetaData at 0", "INS SimpleName: descriptor to SuperConstructorInvocation at 2", "INS SimpleType: IntervalVector to CastExpression at 0", "INS SimpleName: setSafe to MethodInvocation at 1", "INS SimpleName: setSafe to MethodInvocation at 1", "INS SimpleName: v to CastExpression at 1", "INS SimpleType: ConvertedReader to TypeDeclaration: class at 3", "INS SimpleType: SchemaElement to SingleVariableDeclaration at 0", "INS SimpleName: IntervalVector to SimpleType: IntervalVector at 0", "INS SimpleName: parentReader to SuperConstructorInvocation at 0", "INS Block to MethodDeclaration at 9", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SimpleName: readBytes to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: ValueVector to SimpleType: ValueVector at 0", "INS SimpleName: ParquetReaderUtility to MethodInvocation at 0", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS SimpleName: fixedLength to SingleVariableDeclaration at 1", "INS SimpleName: columnChunkMetaData to SuperConstructorInvocation at 3", "INS SimpleName: getMutator to MethodInvocation at 1", "INS SimpleName: ParquetReaderUtility to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: SchemaElement to SimpleType: SchemaElement at 0", "INS SimpleName: ParquetReaderUtility to MethodInvocation at 0", "INS SimpleName: index to InfixExpression: * at 0", "INS SimpleName: addNext to MethodDeclaration at 2", "INS SimpleName: intervalVector to VariableDeclarationFragment at 0", "INS SimpleName: getIntFromLEBytes to MethodInvocation at 1", "INS SimpleName: IntervalReader to TypeDeclaration: class at 2", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: bytebuf to MethodInvocation at 0", "INS SimpleName: getIntFromLEBytes to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: getInt to MethodInvocation at 1", "INS Modifier: static to TypeDeclaration: class at 1", "INS SimpleType: ExecutionSetupException to MethodDeclaration at 8", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS NumberLiteral: 8 to MethodInvocation at 3", "INS SingleVariableDeclaration to MethodDeclaration at 1", "INS SimpleName: input to VariableDeclarationFragment at 0", "INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: intervalVector to MethodInvocation at 0", "INS SimpleName: start to InfixExpression: + at 0", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SimpleType: ParquetRecordReader to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: getBytes to MethodInvocation at 1", "INS CastExpression to Assignment: = at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: ConvertedReader to SimpleType: ConvertedReader at 0", "INS SimpleName: ParquetRecordReader to SimpleType: ParquetRecordReader at 0", "INS SimpleType: ValueVector to SingleVariableDeclaration at 0", "INS SimpleName: start to SingleVariableDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS SimpleName: intervalVector to Assignment: = at 0", "INS SimpleName: getInt to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: allocateSize to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: schemaElement to SingleVariableDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: IntervalReader to MethodDeclaration at 0", "INS SimpleName: input to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS MethodInvocation to MethodInvocation at 4", "INS Block to IfStatement at 1", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS SimpleName: intervalVector to MethodInvocation at 0", "INS QualifiedName: pageReader.dictionaryValueReader to MethodInvocation at 0", "INS SimpleName: input to MethodInvocation at 2", "INS SimpleName: index to MethodInvocation at 2", "INS SimpleName: fixedLength to SuperConstructorInvocation at 4", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: ExecutionSetupException to SimpleType: ExecutionSetupException at 0", "INS VariableDeclarationStatement to Block at 0", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleType: ColumnDescriptor to SingleVariableDeclaration at 0", "INS SimpleName: parentReader to SingleVariableDeclaration at 1", "INS TypeDeclaration: class to TypeDeclaration: class at 11", "INS SimpleName: v to SingleVariableDeclaration at 1", "INS SimpleName: bytebuf to MethodInvocation at 0", "INS Dimension to ArrayType: byte[] at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS NumberLiteral: 8 to InfixExpression: + at 1", "INS SimpleName: index to SingleVariableDeclaration at 1", "INS SimpleName: start to InfixExpression: + at 0", "INS SimpleType: ColumnChunkMetaData to SingleVariableDeclaration at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS NumberLiteral: 4 to MethodInvocation at 3", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS MethodInvocation to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS SimpleName: input to MethodInvocation at 2", "INS SimpleName: bytebuf to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 5", "INS ExpressionStatement to Block at 1", "INS SimpleName: columnChunkMetaData to SingleVariableDeclaration at 1", "INS SimpleName: v to SuperConstructorInvocation at 5", "INS SimpleName: allocateSize to SuperConstructorInvocation at 1", "INS MethodInvocation to MethodInvocation at 5"]}]}}, {"FixedByteAlignedReader_diff": {"operations": ["Insert ImportDeclaration(28) into CompilationUnit(826) at 6", "Insert ImportDeclaration(32) into CompilationUnit(826) at 8", "Insert ImportDeclaration(42) into CompilationUnit(826) at 13", "Insert ImportDeclaration(56) into CompilationUnit(826) at 20", "Insert QualifiedName: org.apache.drill.exec.expr.holders.IntervalHolder(27) into ImportDeclaration(28) at 0", "Insert QualifiedName: org.apache.drill.exec.store.parquet.ParquetReaderUtility(31) into ImportDeclaration(32) at 0", "Insert QualifiedName: org.apache.drill.exec.vector.IntervalVector(41) into ImportDeclaration(42) at 0", "Insert QualifiedName: parquet.io.api.Binary(55) into ImportDeclaration(56) at 0", "Insert TypeDeclaration: class(824) into TypeDeclaration: class(825) at 11", "Insert Modifier: public(695) into TypeDeclaration: class(824) at 0", "Insert Modifier: static(696) into TypeDeclaration: class(824) at 1", "Insert SimpleName: IntervalReader(697) into TypeDeclaration: class(824) at 2", "Insert SimpleType: ConvertedReader(699) into TypeDeclaration: class(824) at 3", "Insert FieldDeclaration(704) into TypeDeclaration: class(824) at 4", "Insert MethodDeclaration(750) into TypeDeclaration: class(824) at 5", "Insert MethodDeclaration(823) into TypeDeclaration: class(824) at 6", "Insert SimpleName: ConvertedReader(698) into SimpleType: ConvertedReader(699) at 0", "Insert SimpleType: IntervalVector(701) into FieldDeclaration(704) at 0", "Insert VariableDeclarationFragment(703) into FieldDeclaration(704) at 1", "Insert SimpleName: IntervalReader(705) into MethodDeclaration(750) at 0", "Insert SingleVariableDeclaration(709) into MethodDeclaration(750) at 1", "Insert SingleVariableDeclaration(712) into MethodDeclaration(750) at 2", "Insert SingleVariableDeclaration(716) into MethodDeclaration(750) at 3", "Insert SingleVariableDeclaration(720) into MethodDeclaration(750) at 4", "Insert SingleVariableDeclaration(723) into MethodDeclaration(750) at 5", "Insert SingleVariableDeclaration(727) into MethodDeclaration(750) at 6", "Insert SingleVariableDeclaration(731) into MethodDeclaration(750) at 7", "Insert SimpleType: ExecutionSetupException(733) into MethodDeclaration(750) at 8", "Insert Block(749) into MethodDeclaration(750) at 9", "Insert MarkerAnnotation(752) into MethodDeclaration(823) at 0", "Insert PrimitiveType: void(753) into MethodDeclaration(823) at 1", "Insert SimpleName: addNext(754) into MethodDeclaration(823) at 2", "Insert SingleVariableDeclaration(757) into MethodDeclaration(823) at 3", "Insert SingleVariableDeclaration(760) into MethodDeclaration(823) at 4", "Insert Block(822) into MethodDeclaration(823) at 5", "Insert SimpleName: IntervalVector(700) into SimpleType: IntervalVector(701) at 0", "Insert SimpleName: intervalVector(702) into VariableDeclarationFragment(703) at 0", "Insert SimpleType: ParquetRecordReader(707) into SingleVariableDeclaration(709) at 0", "Insert SimpleName: parentReader(708) into SingleVariableDeclaration(709) at 1", "Insert PrimitiveType: int(710) into SingleVariableDeclaration(712) at 0", "Insert SimpleName: allocateSize(711) into SingleVariableDeclaration(712) at 1", "Insert SimpleType: ColumnDescriptor(714) into SingleVariableDeclaration(716) at 0", "Insert SimpleName: descriptor(715) into SingleVariableDeclaration(716) at 1", "Insert SimpleType: ColumnChunkMetaData(718) into SingleVariableDeclaration(720) at 0", "Insert SimpleName: columnChunkMetaData(719) into SingleVariableDeclaration(720) at 1", "Insert PrimitiveType: boolean(721) into SingleVariableDeclaration(723) at 0", "Insert SimpleName: fixedLength(722) into SingleVariableDeclaration(723) at 1", "Insert SimpleType: ValueVector(725) into SingleVariableDeclaration(727) at 0", "Insert SimpleName: v(726) into SingleVariableDeclaration(727) at 1", "Insert SimpleType: SchemaElement(729) into SingleVariableDeclaration(731) at 0", "Insert SimpleName: schemaElement(730) into SingleVariableDeclaration(731) at 1", "Insert SimpleName: ExecutionSetupException(732) into SimpleType: ExecutionSetupException(733) at 0", "Insert SuperConstructorInvocation(741) into Block(749) at 0", "Insert ExpressionStatement(748) into Block(749) at 1", "Insert SimpleName: Override(751) into MarkerAnnotation(752) at 0", "Insert PrimitiveType: int(755) into SingleVariableDeclaration(757) at 0", "Insert SimpleName: start(756) into SingleVariableDeclaration(757) at 1", "Insert PrimitiveType: int(758) into SingleVariableDeclaration(760) at 0", "Insert SimpleName: index(759) into SingleVariableDeclaration(760) at 1", "Insert IfStatement(798) into Block(822) at 0", "Insert ExpressionStatement(821) into Block(822) at 1", "Insert SimpleName: ParquetRecordReader(706) into SimpleType: ParquetRecordReader(707) at 0", "Insert SimpleName: ColumnDescriptor(713) into SimpleType: ColumnDescriptor(714) at 0", "Insert SimpleName: ColumnChunkMetaData(717) into SimpleType: ColumnChunkMetaData(718) at 0", "Insert SimpleName: ValueVector(724) into SimpleType: ValueVector(725) at 0", "Insert SimpleName: SchemaElement(728) into SimpleType: SchemaElement(729) at 0", "Insert SimpleName: parentReader(734) into SuperConstructorInvocation(741) at 0", "Insert SimpleName: allocateSize(735) into SuperConstructorInvocation(741) at 1", "Insert SimpleName: descriptor(736) into SuperConstructorInvocation(741) at 2", "Insert SimpleName: columnChunkMetaData(737) into SuperConstructorInvocation(741) at 3", "Insert SimpleName: fixedLength(738) into SuperConstructorInvocation(741) at 4", "Insert SimpleName: v(739) into SuperConstructorInvocation(741) at 5", "Insert SimpleName: schemaElement(740) into SuperConstructorInvocation(741) at 6", "Insert Assignment: =(747) into ExpressionStatement(748) at 0", "Insert SimpleName: usingDictionary(761) into IfStatement(798) at 0", "Insert Block(797) into IfStatement(798) at 1", "Insert MethodInvocation(820) into ExpressionStatement(821) at 0", "Insert SimpleName: intervalVector(742) into Assignment: =(747) at 0", "Insert CastExpression(746) into Assignment: =(747) at 1", "Insert VariableDeclarationStatement(772) into Block(797) at 0", "Insert ExpressionStatement(796) into Block(797) at 1", "Insert MethodInvocation(801) into MethodInvocation(820) at 0", "Insert SimpleName: setSafe(802) into MethodInvocation(820) at 1", "Insert SimpleName: index(803) into MethodInvocation(820) at 2", "Insert MethodInvocation(807) into MethodInvocation(820) at 3", "Insert MethodInvocation(813) into MethodInvocation(820) at 4", "Insert MethodInvocation(819) into MethodInvocation(820) at 5", "Insert SimpleType: IntervalVector(744) into CastExpression(746) at 0", "Insert SimpleName: v(745) into CastExpression(746) at 1", "Insert ArrayType: byte[](764) into VariableDeclarationStatement(772) at 0", "Insert VariableDeclarationFragment(771) into VariableDeclarationStatement(772) at 1", "Insert MethodInvocation(795) into ExpressionStatement(796) at 0", "Insert SimpleName: intervalVector(799) into MethodInvocation(801) at 0", "Insert SimpleName: getMutator(800) into MethodInvocation(801) at 1", "Insert SimpleName: bytebuf(804) into MethodInvocation(807) at 0", "Insert SimpleName: getInt(805) into MethodInvocation(807) at 1", "Insert SimpleName: start(806) into MethodInvocation(807) at 2", "Insert SimpleName: bytebuf(808) into MethodInvocation(813) at 0", "Insert SimpleName: getInt(809) into MethodInvocation(813) at 1", "Insert InfixExpression: +(812) into MethodInvocation(813) at 2", "Insert SimpleName: bytebuf(814) into MethodInvocation(819) at 0", "Insert SimpleName: getInt(815) into MethodInvocation(819) at 1", "Insert InfixExpression: +(818) into MethodInvocation(819) at 2", "Insert SimpleName: IntervalVector(743) into SimpleType: IntervalVector(744) at 0", "Insert PrimitiveType: byte(762) into ArrayType: byte[](764) at 0", "Insert Dimension(763) into ArrayType: byte[](764) at 1", "Insert SimpleName: input(765) into VariableDeclarationFragment(771) at 0", "Insert MethodInvocation(770) into VariableDeclarationFragment(771) at 1", "Insert MethodInvocation(775) into MethodInvocation(795) at 0", "Insert SimpleName: setSafe(776) into MethodInvocation(795) at 1", "Insert InfixExpression: *(779) into MethodInvocation(795) at 2", "Insert MethodInvocation(784) into MethodInvocation(795) at 3", "Insert MethodInvocation(789) into MethodInvocation(795) at 4", "Insert MethodInvocation(794) into MethodInvocation(795) at 5", "Insert SimpleName: start(810) into InfixExpression: +(812) at 0", "Insert NumberLiteral: 4(811) into InfixExpression: +(812) at 1", "Insert SimpleName: start(816) into InfixExpression: +(818) at 0", "Insert NumberLiteral: 8(817) into InfixExpression: +(818) at 1", "Insert MethodInvocation(768) into MethodInvocation(770) at 0", "Insert SimpleName: getBytes(769) into MethodInvocation(770) at 1", "Insert SimpleName: intervalVector(773) into MethodInvocation(775) at 0", "Insert SimpleName: getMutator(774) into MethodInvocation(775) at 1", "Insert SimpleName: index(777) into InfixExpression: *(779) at 0", "Insert NumberLiteral: 12(778) into InfixExpression: *(779) at 1", "Insert SimpleName: ParquetReaderUtility(780) into MethodInvocation(784) at 0", "Insert SimpleName: getIntFromLEBytes(781) into MethodInvocation(784) at 1", "Insert SimpleName: input(782) into MethodInvocation(784) at 2", "Insert NumberLiteral: 0(783) into MethodInvocation(784) at 3", "Insert SimpleName: ParquetReaderUtility(785) into MethodInvocation(789) at 0", "Insert SimpleName: getIntFromLEBytes(786) into MethodInvocation(789) at 1", "Insert SimpleName: input(787) into MethodInvocation(789) at 2", "Insert NumberLiteral: 4(788) into MethodInvocation(789) at 3", "Insert SimpleName: ParquetReaderUtility(790) into MethodInvocation(794) at 0", "Insert SimpleName: getIntFromLEBytes(791) into MethodInvocation(794) at 1", "Insert SimpleName: input(792) into MethodInvocation(794) at 2", "Insert NumberLiteral: 8(793) into MethodInvocation(794) at 3", "Insert QualifiedName: pageReader.dictionaryValueReader(766) into MethodInvocation(768) at 0", "Insert SimpleName: readBytes(767) into MethodInvocation(768) at 1"]}}, {"NullableFixedByteAlignedReaders_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 7", "operations": ["INS ImportDeclaration to CompilationUnit at 7", "INS QualifiedName: org.apache.drill.exec.store.parquet.ParquetReaderUtility to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS ImportDeclaration to CompilationUnit at 9", "INS QualifiedName: org.apache.drill.exec.vector.IntervalVector to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 19", "operations": ["INS ImportDeclaration to CompilationUnit at 19", "INS QualifiedName: org.apache.drill.exec.vector.NullableIntervalVector to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 27", "operations": ["INS QualifiedName: parquet.io.api.Binary to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 27"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 15", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: getMutator to MethodInvocation at 1", "INS Modifier: static to TypeDeclaration: class at 1", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS MethodInvocation to MethodInvocation at 4", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS SimpleName: schemaElement to SuperConstructorInvocation at 6", "INS SimpleName: NullableIntervalVector to SimpleType: NullableIntervalVector at 0", "INS NumberLiteral: 1 to MethodInvocation at 3", "INS CastExpression to Assignment: = at 1", "INS SimpleName: fixedLength to SuperConstructorInvocation at 4", "INS MethodInvocation to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS NumberLiteral: 4 to InfixExpression: + at 1", "INS SimpleName: ParquetRecordReader to SimpleType: ParquetRecordReader at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: bytebuf to MethodInvocation at 0", "INS SimpleName: input to MethodInvocation at 2", "INS ArrayType: byte[] to VariableDeclarationStatement at 0", "INS SimpleName: start to InfixExpression: + at 0", "INS SimpleName: ParquetReaderUtility to MethodInvocation at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 6", "INS SimpleName: addNext to MethodDeclaration at 2", "INS SimpleType: ColumnChunkMetaData to SingleVariableDeclaration at 0", "INS SimpleName: ColumnDescriptor to SimpleType: ColumnDescriptor at 0", "INS SuperConstructorInvocation to Block at 0", "INS SingleVariableDeclaration to MethodDeclaration at 1", "INS TypeDeclaration: class to TypeDeclaration: class at 15", "INS SimpleName: allocateSize to SingleVariableDeclaration at 1", "INS SimpleName: getInt to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 5", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: Override to MarkerAnnotation at 0", "INS SimpleName: bytebuf to MethodInvocation at 0", "INS SimpleName: getBytes to MethodInvocation at 1", "INS Dimension to ArrayType: byte[] at 1", "INS SimpleName: v to CastExpression at 1", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: parentReader to SingleVariableDeclaration at 1", "INS SimpleName: readBytes to MethodInvocation at 1", "INS SimpleName: ParquetReaderUtility to MethodInvocation at 0", "INS SimpleType: NullableIntervalVector to CastExpression at 0", "INS SimpleType: ExecutionSetupException to MethodDeclaration at 8", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: index to InfixExpression: * at 0", "INS SimpleName: fixedLength to SingleVariableDeclaration at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Block to MethodDeclaration at 9", "INS SimpleName: nullableIntervalVector to Assignment: = at 0", "INS SimpleName: start to InfixExpression: + at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleType: ValueVector to SingleVariableDeclaration at 0", "INS SimpleName: getMutator to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: input to VariableDeclarationFragment at 0", "INS SimpleName: nullableIntervalVector to MethodInvocation at 0", "INS SimpleName: ParquetReaderUtility to MethodInvocation at 0", "INS SimpleName: start to MethodInvocation at 2", "INS NumberLiteral: 8 to MethodInvocation at 3", "INS SimpleType: ColumnDescriptor to SingleVariableDeclaration at 0", "INS NumberLiteral: 1 to MethodInvocation at 3", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: NullableIntervalReader to TypeDeclaration: class at 2", "INS Block to IfStatement at 1", "INS SimpleName: columnChunkMetaData to SuperConstructorInvocation at 3", "INS SimpleName: NullableConvertedReader to SimpleType: NullableConvertedReader at 0", "INS SimpleName: allocateSize to SuperConstructorInvocation at 1", "INS MethodInvocation to MethodInvocation at 6", "INS SimpleName: getIntFromLEBytes to MethodInvocation at 1", "INS ExpressionStatement to Block at 1", "INS MethodInvocation to MethodInvocation at 5", "INS Modifier: public to TypeDeclaration: class at 0", "INS SimpleName: descriptor to SuperConstructorInvocation at 2", "INS PrimitiveType: byte to ArrayType: byte[] at 0", "INS InfixExpression: * to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS NumberLiteral: 12 to InfixExpression: * at 1", "INS SimpleName: index to MethodInvocation at 2", "INS InfixExpression: + to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: getIntFromLEBytes to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 6", "INS SimpleType: SchemaElement to SingleVariableDeclaration at 0", "INS SimpleName: bytebuf to MethodInvocation at 0", "INS SimpleName: v to SingleVariableDeclaration at 1", "INS SimpleName: NullableIntervalReader to MethodDeclaration at 0", "INS SimpleName: getInt to MethodInvocation at 1", "INS SimpleName: setSafe to MethodInvocation at 1", "INS QualifiedName: pageReader.dictionaryValueReader to MethodInvocation at 0", "INS SimpleType: NullableConvertedReader to TypeDeclaration: class at 3", "INS MethodInvocation to MethodInvocation at 4", "INS SimpleName: descriptor to SingleVariableDeclaration at 1", "INS SimpleName: input to MethodInvocation at 2", "INS SimpleName: ValueVector to SimpleType: ValueVector at 0", "INS SimpleName: getIntFromLEBytes to MethodInvocation at 1", "INS SimpleName: usingDictionary to IfStatement at 0", "INS SimpleName: nullableIntervalVector to VariableDeclarationFragment at 0", "INS IfStatement to Block at 0", "INS SimpleName: NullableIntervalVector to SimpleType: NullableIntervalVector at 0", "INS SimpleName: columnChunkMetaData to SingleVariableDeclaration at 1", "INS SimpleName: start to SingleVariableDeclaration at 1", "INS SimpleName: nullableIntervalVector to MethodInvocation at 0", "INS SimpleType: ParquetRecordReader to SingleVariableDeclaration at 0", "INS SimpleName: parentReader to SuperConstructorInvocation at 0", "INS SimpleName: index to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: v to SuperConstructorInvocation at 5", "INS NumberLiteral: 0 to MethodInvocation at 3", "INS NumberLiteral: 4 to MethodInvocation at 3", "INS SimpleName: getInt to MethodInvocation at 1", "INS SimpleName: set to MethodInvocation at 1", "INS SimpleName: schemaElement to SingleVariableDeclaration at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: NullableIntervalVector to FieldDeclaration at 0", "INS NumberLiteral: 8 to InfixExpression: + at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: ExecutionSetupException to SimpleType: ExecutionSetupException at 0", "INS SimpleName: ColumnChunkMetaData to SimpleType: ColumnChunkMetaData at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS MarkerAnnotation to MethodDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 1", "INS SimpleName: input to MethodInvocation at 2", "INS SimpleName: SchemaElement to SimpleType: SchemaElement at 0"]}]}}, {"NullableFixedByteAlignedReaders_diff": {"operations": ["Insert ImportDeclaration(30) into CompilationUnit(1583) at 7", "Insert ImportDeclaration(34) into CompilationUnit(1583) at 9", "Insert ImportDeclaration(54) into CompilationUnit(1583) at 19", "Insert ImportDeclaration(70) into CompilationUnit(1583) at 27", "Insert QualifiedName: org.apache.drill.exec.store.parquet.ParquetReaderUtility(29) into ImportDeclaration(30) at 0", "Insert QualifiedName: org.apache.drill.exec.vector.IntervalVector(33) into ImportDeclaration(34) at 0", "Insert QualifiedName: org.apache.drill.exec.vector.NullableIntervalVector(53) into ImportDeclaration(54) at 0", "Insert QualifiedName: parquet.io.api.Binary(69) into ImportDeclaration(70) at 0", "Insert TypeDeclaration: class(1581) into TypeDeclaration: class(1582) at 15", "Insert Modifier: public(1450) into TypeDeclaration: class(1581) at 0", "Insert Modifier: static(1451) into TypeDeclaration: class(1581) at 1", "Insert SimpleName: NullableIntervalReader(1452) into TypeDeclaration: class(1581) at 2", "Insert SimpleType: NullableConvertedReader(1454) into TypeDeclaration: class(1581) at 3", "Insert FieldDeclaration(1459) into TypeDeclaration: class(1581) at 4", "Insert MethodDeclaration(1505) into TypeDeclaration: class(1581) at 5", "Insert MethodDeclaration(1580) into TypeDeclaration: class(1581) at 6", "Insert SimpleName: NullableConvertedReader(1453) into SimpleType: NullableConvertedReader(1454) at 0", "Insert SimpleType: NullableIntervalVector(1456) into FieldDeclaration(1459) at 0", "Insert VariableDeclarationFragment(1458) into FieldDeclaration(1459) at 1", "Insert SimpleName: NullableIntervalReader(1460) into MethodDeclaration(1505) at 0", "Insert SingleVariableDeclaration(1464) into MethodDeclaration(1505) at 1", "Insert SingleVariableDeclaration(1467) into MethodDeclaration(1505) at 2", "Insert SingleVariableDeclaration(1471) into MethodDeclaration(1505) at 3", "Insert SingleVariableDeclaration(1475) into MethodDeclaration(1505) at 4", "Insert SingleVariableDeclaration(1478) into MethodDeclaration(1505) at 5", "Insert SingleVariableDeclaration(1482) into MethodDeclaration(1505) at 6", "Insert SingleVariableDeclaration(1486) into MethodDeclaration(1505) at 7", "Insert SimpleType: ExecutionSetupException(1488) into MethodDeclaration(1505) at 8", "Insert Block(1504) into MethodDeclaration(1505) at 9", "Insert MarkerAnnotation(1507) into MethodDeclaration(1580) at 0", "Insert PrimitiveType: void(1508) into MethodDeclaration(1580) at 1", "Insert SimpleName: addNext(1509) into MethodDeclaration(1580) at 2", "Insert SingleVariableDeclaration(1512) into MethodDeclaration(1580) at 3", "Insert SingleVariableDeclaration(1515) into MethodDeclaration(1580) at 4", "Insert Block(1579) into MethodDeclaration(1580) at 5", "Insert SimpleName: NullableIntervalVector(1455) into SimpleType: NullableIntervalVector(1456) at 0", "Insert SimpleName: nullableIntervalVector(1457) into VariableDeclarationFragment(1458) at 0", "Insert SimpleType: ParquetRecordReader(1462) into SingleVariableDeclaration(1464) at 0", "Insert SimpleName: parentReader(1463) into SingleVariableDeclaration(1464) at 1", "Insert PrimitiveType: int(1465) into SingleVariableDeclaration(1467) at 0", "Insert SimpleName: allocateSize(1466) into SingleVariableDeclaration(1467) at 1", "Insert SimpleType: ColumnDescriptor(1469) into SingleVariableDeclaration(1471) at 0", "Insert SimpleName: descriptor(1470) into SingleVariableDeclaration(1471) at 1", "Insert SimpleType: ColumnChunkMetaData(1473) into SingleVariableDeclaration(1475) at 0", "Insert SimpleName: columnChunkMetaData(1474) into SingleVariableDeclaration(1475) at 1", "Insert PrimitiveType: boolean(1476) into SingleVariableDeclaration(1478) at 0", "Insert SimpleName: fixedLength(1477) into SingleVariableDeclaration(1478) at 1", "Insert SimpleType: ValueVector(1480) into SingleVariableDeclaration(1482) at 0", "Insert SimpleName: v(1481) into SingleVariableDeclaration(1482) at 1", "Insert SimpleType: SchemaElement(1484) into SingleVariableDeclaration(1486) at 0", "Insert SimpleName: schemaElement(1485) into SingleVariableDeclaration(1486) at 1", "Insert SimpleName: ExecutionSetupException(1487) into SimpleType: ExecutionSetupException(1488) at 0", "Insert SuperConstructorInvocation(1496) into Block(1504) at 0", "Insert ExpressionStatement(1503) into Block(1504) at 1", "Insert SimpleName: Override(1506) into MarkerAnnotation(1507) at 0", "Insert PrimitiveType: int(1510) into SingleVariableDeclaration(1512) at 0", "Insert SimpleName: start(1511) into SingleVariableDeclaration(1512) at 1", "Insert PrimitiveType: int(1513) into SingleVariableDeclaration(1515) at 0", "Insert SimpleName: index(1514) into SingleVariableDeclaration(1515) at 1", "Insert IfStatement(1554) into Block(1579) at 0", "Insert ExpressionStatement(1578) into Block(1579) at 1", "Insert SimpleName: ParquetRecordReader(1461) into SimpleType: ParquetRecordReader(1462) at 0", "Insert SimpleName: ColumnDescriptor(1468) into SimpleType: ColumnDescriptor(1469) at 0", "Insert SimpleName: ColumnChunkMetaData(1472) into SimpleType: ColumnChunkMetaData(1473) at 0", "Insert SimpleName: ValueVector(1479) into SimpleType: ValueVector(1480) at 0", "Insert SimpleName: SchemaElement(1483) into SimpleType: SchemaElement(1484) at 0", "Insert SimpleName: parentReader(1489) into SuperConstructorInvocation(1496) at 0", "Insert SimpleName: allocateSize(1490) into SuperConstructorInvocation(1496) at 1", "Insert SimpleName: descriptor(1491) into SuperConstructorInvocation(1496) at 2", "Insert SimpleName: columnChunkMetaData(1492) into SuperConstructorInvocation(1496) at 3", "Insert SimpleName: fixedLength(1493) into SuperConstructorInvocation(1496) at 4", "Insert SimpleName: v(1494) into SuperConstructorInvocation(1496) at 5", "Insert SimpleName: schemaElement(1495) into SuperConstructorInvocation(1496) at 6", "Insert Assignment: =(1502) into ExpressionStatement(1503) at 0", "Insert SimpleName: usingDictionary(1516) into IfStatement(1554) at 0", "Insert Block(1553) into IfStatement(1554) at 1", "Insert MethodInvocation(1577) into ExpressionStatement(1578) at 0", "Insert SimpleName: nullableIntervalVector(1497) into Assignment: =(1502) at 0", "Insert CastExpression(1501) into Assignment: =(1502) at 1", "Insert VariableDeclarationStatement(1527) into Block(1553) at 0", "Insert ExpressionStatement(1552) into Block(1553) at 1", "Insert MethodInvocation(1557) into MethodInvocation(1577) at 0", "Insert SimpleName: set(1558) into MethodInvocation(1577) at 1", "Insert SimpleName: index(1559) into MethodInvocation(1577) at 2", "Insert NumberLiteral: 1(1560) into MethodInvocation(1577) at 3", "Insert MethodInvocation(1564) into MethodInvocation(1577) at 4", "Insert MethodInvocation(1570) into MethodInvocation(1577) at 5", "Insert MethodInvocation(1576) into MethodInvocation(1577) at 6", "Insert SimpleType: NullableIntervalVector(1499) into CastExpression(1501) at 0", "Insert SimpleName: v(1500) into CastExpression(1501) at 1", "Insert ArrayType: byte[](1519) into VariableDeclarationStatement(1527) at 0", "Insert VariableDeclarationFragment(1526) into VariableDeclarationStatement(1527) at 1", "Insert MethodInvocation(1551) into ExpressionStatement(1552) at 0", "Insert SimpleName: nullableIntervalVector(1555) into MethodInvocation(1557) at 0", "Insert SimpleName: getMutator(1556) into MethodInvocation(1557) at 1", "Insert SimpleName: bytebuf(1561) into MethodInvocation(1564) at 0", "Insert SimpleName: getInt(1562) into MethodInvocation(1564) at 1", "Insert SimpleName: start(1563) into MethodInvocation(1564) at 2", "Insert SimpleName: bytebuf(1565) into MethodInvocation(1570) at 0", "Insert SimpleName: getInt(1566) into MethodInvocation(1570) at 1", "Insert InfixExpression: +(1569) into MethodInvocation(1570) at 2", "Insert SimpleName: bytebuf(1571) into MethodInvocation(1576) at 0", "Insert SimpleName: getInt(1572) into MethodInvocation(1576) at 1", "Insert InfixExpression: +(1575) into MethodInvocation(1576) at 2", "Insert SimpleName: NullableIntervalVector(1498) into SimpleType: NullableIntervalVector(1499) at 0", "Insert PrimitiveType: byte(1517) into ArrayType: byte[](1519) at 0", "Insert Dimension(1518) into ArrayType: byte[](1519) at 1", "Insert SimpleName: input(1520) into VariableDeclarationFragment(1526) at 0", "Insert MethodInvocation(1525) into VariableDeclarationFragment(1526) at 1", "Insert MethodInvocation(1530) into MethodInvocation(1551) at 0", "Insert SimpleName: setSafe(1531) into MethodInvocation(1551) at 1", "Insert InfixExpression: *(1534) into MethodInvocation(1551) at 2", "Insert NumberLiteral: 1(1535) into MethodInvocation(1551) at 3", "Insert MethodInvocation(1540) into MethodInvocation(1551) at 4", "Insert MethodInvocation(1545) into MethodInvocation(1551) at 5", "Insert MethodInvocation(1550) into MethodInvocation(1551) at 6", "Insert SimpleName: start(1567) into InfixExpression: +(1569) at 0", "Insert NumberLiteral: 4(1568) into InfixExpression: +(1569) at 1", "Insert SimpleName: start(1573) into InfixExpression: +(1575) at 0", "Insert NumberLiteral: 8(1574) into InfixExpression: +(1575) at 1", "Insert MethodInvocation(1523) into MethodInvocation(1525) at 0", "Insert SimpleName: getBytes(1524) into MethodInvocation(1525) at 1", "Insert SimpleName: nullableIntervalVector(1528) into MethodInvocation(1530) at 0", "Insert SimpleName: getMutator(1529) into MethodInvocation(1530) at 1", "Insert SimpleName: index(1532) into InfixExpression: *(1534) at 0", "Insert NumberLiteral: 12(1533) into InfixExpression: *(1534) at 1", "Insert SimpleName: ParquetReaderUtility(1536) into MethodInvocation(1540) at 0", "Insert SimpleName: getIntFromLEBytes(1537) into MethodInvocation(1540) at 1", "Insert SimpleName: input(1538) into MethodInvocation(1540) at 2", "Insert NumberLiteral: 0(1539) into MethodInvocation(1540) at 3", "Insert SimpleName: ParquetReaderUtility(1541) into MethodInvocation(1545) at 0", "Insert SimpleName: getIntFromLEBytes(1542) into MethodInvocation(1545) at 1", "Insert SimpleName: input(1543) into MethodInvocation(1545) at 2", "Insert NumberLiteral: 4(1544) into MethodInvocation(1545) at 3", "Insert SimpleName: ParquetReaderUtility(1546) into MethodInvocation(1550) at 0", "Insert SimpleName: getIntFromLEBytes(1547) into MethodInvocation(1550) at 1", "Insert SimpleName: input(1548) into MethodInvocation(1550) at 2", "Insert NumberLiteral: 8(1549) into MethodInvocation(1550) at 3", "Insert QualifiedName: pageReader.dictionaryValueReader(1521) into MethodInvocation(1523) at 0", "Insert SimpleName: readBytes(1522) into MethodInvocation(1523) at 1"]}}, {"ParquetToDrillTypeConverter_cluster": {"actions": [{"root": "INS IfStatement to IfStatement at 2", "operations": ["INS SimpleName: convertedType to InfixExpression: == at 0", "INS ReturnStatement to Block at 0", "INS QualifiedName: TypeProtos.MinorType.INTERVAL to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS QualifiedName: ConvertedType.INTERVAL to InfixExpression: == at 1", "INS IfStatement to IfStatement at 2", "INS InfixExpression: == to IfStatement at 0"]}]}}, {"ParquetToDrillTypeConverter_diff": {"operations": ["Insert IfStatement(252) into IfStatement(253) at 2", "Insert InfixExpression: ==(248) into IfStatement(252) at 0", "Insert Block(251) into IfStatement(252) at 1", "Insert SimpleName: convertedType(246) into InfixExpression: ==(248) at 0", "Insert QualifiedName: ConvertedType.INTERVAL(247) into InfixExpression: ==(248) at 1", "Insert ReturnStatement(250) into Block(251) at 0", "Insert QualifiedName: TypeProtos.MinorType.INTERVAL(249) into ReturnStatement(250) at 0"]}}], "commit_stats": [{"total_files": 9, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}