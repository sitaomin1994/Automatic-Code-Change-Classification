{"application": "apache-nutch", "csha": "16b73c1b8be276d596f4f084804435bd93801dc9", "files": [{"NutchServer_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS ImportDeclaration to CompilationUnit at 2", "INS QualifiedName: java.util.Collection to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 24", "operations": ["INS ImportDeclaration to CompilationUnit at 24", "INS QualifiedName: org.apache.nutch.service.model.response.JobInfo to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 25", "operations": ["INS QualifiedName: org.apache.nutch.service.model.response.JobInfo.State to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 25"]}, {"root": "INS ImportDeclaration to CompilationUnit at 26", "operations": ["INS ImportDeclaration to CompilationUnit at 26", "INS QualifiedName: org.apache.nutch.service.resources.AdminResource to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 32", "operations": ["INS SimpleName: JobInfo to SimpleType: JobInfo at 0", "INS VariableDeclarationStatement to Block at 1", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: Collection to ParameterizedType: Collection<JobInfo> at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS IfStatement to Block at 0", "INS SimpleName: Collection to SimpleType: Collection at 0", "INS NullLiteral to MethodInvocation at 2", "INS SimpleName: force to SingleVariableDeclaration at 1", "INS ParameterizedType: Collection<JobInfo> to VariableDeclarationStatement at 0", "INS SimpleName: list to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 32", "INS BooleanLiteral: true to ReturnStatement at 0", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: canStop to MethodDeclaration at 2", "INS QualifiedName: State.RUNNING to MethodInvocation at 3", "INS ReturnStatement to Block at 2", "INS SimpleType: JobInfo to ParameterizedType: Collection<JobInfo> at 1", "INS Block to MethodDeclaration at 4", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: jobs to MethodInvocation at 0", "INS SimpleName: jobs to VariableDeclarationFragment at 0", "INS SimpleName: isEmpty to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS ReturnStatement to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: force to IfStatement at 0", "INS SimpleName: getJobManager to MethodInvocation at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 33", "operations": ["INS SimpleName: getPort to MethodDeclaration at 2", "INS PrimitiveType: int to MethodDeclaration at 1", "INS SimpleName: port to ReturnStatement at 0", "INS Modifier: public to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS Block to MethodDeclaration at 3", "INS MethodDeclaration to TypeDeclaration: class at 33"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 34", "operations": ["INS ExpressionStatement to Block at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: stop to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: System to MethodInvocation at 0", "INS SimpleName: exit to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 34", "INS Block to MethodDeclaration at 3"]}, {"root": "INS ExpressionStatement to Block at 4", "operations": ["INS TypeLiteral to MethodInvocation at 2", "INS ExpressionStatement to Block at 4", "INS SimpleType: AdminResource to TypeLiteral at 0", "INS SimpleName: add to MethodInvocation at 1", "INS SimpleName: resources to MethodInvocation at 0", "INS SimpleName: AdminResource to SimpleType: AdminResource at 0", "INS MethodInvocation to ExpressionStatement at 0"]}]}}, {"NutchServer_diff": {"operations": ["Insert ImportDeclaration(19) into CompilationUnit(766) at 2", "Insert ImportDeclaration(63) into CompilationUnit(766) at 24", "Insert ImportDeclaration(65) into CompilationUnit(766) at 25", "Insert ImportDeclaration(67) into CompilationUnit(766) at 26", "Insert QualifiedName: java.util.Collection(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: org.apache.nutch.service.model.response.JobInfo(62) into ImportDeclaration(63) at 0", "Insert QualifiedName: org.apache.nutch.service.model.response.JobInfo.State(64) into ImportDeclaration(65) at 0", "Insert QualifiedName: org.apache.nutch.service.resources.AdminResource(66) into ImportDeclaration(67) at 0", "Insert MethodDeclaration(747) into TypeDeclaration: class(765) at 32", "Insert MethodDeclaration(754) into TypeDeclaration: class(765) at 33", "Insert MethodDeclaration(764) into TypeDeclaration: class(765) at 34", "Insert Modifier: public(718) into MethodDeclaration(747) at 0", "Insert PrimitiveType: boolean(719) into MethodDeclaration(747) at 1", "Insert SimpleName: canStop(720) into MethodDeclaration(747) at 2", "Insert SingleVariableDeclaration(723) into MethodDeclaration(747) at 3", "Insert Block(746) into MethodDeclaration(747) at 4", "Insert Modifier: public(748) into MethodDeclaration(754) at 0", "Insert PrimitiveType: int(749) into MethodDeclaration(754) at 1", "Insert SimpleName: getPort(750) into MethodDeclaration(754) at 2", "Insert Block(753) into MethodDeclaration(754) at 3", "Insert Modifier: public(755) into MethodDeclaration(764) at 0", "Insert PrimitiveType: void(756) into MethodDeclaration(764) at 1", "Insert SimpleName: stop(757) into MethodDeclaration(764) at 2", "Insert Block(763) into MethodDeclaration(764) at 3", "Insert ExpressionStatement(474) into Block(477) at 4", "Insert PrimitiveType: boolean(721) into SingleVariableDeclaration(723) at 0", "Insert SimpleName: force(722) into SingleVariableDeclaration(723) at 1", "Insert IfStatement(727) into Block(746) at 0", "Insert VariableDeclarationStatement(741) into Block(746) at 1", "Insert ReturnStatement(745) into Block(746) at 2", "Insert ReturnStatement(752) into Block(753) at 0", "Insert ExpressionStatement(762) into Block(763) at 0", "Insert MethodInvocation(473) into ExpressionStatement(474) at 0", "Insert SimpleName: force(724) into IfStatement(727) at 0", "Insert ReturnStatement(726) into IfStatement(727) at 1", "Insert ParameterizedType: Collection<JobInfo>(732) into VariableDeclarationStatement(741) at 0", "Insert VariableDeclarationFragment(740) into VariableDeclarationStatement(741) at 1", "Insert MethodInvocation(744) into ReturnStatement(745) at 0", "Insert SimpleName: port(751) into ReturnStatement(752) at 0", "Insert MethodInvocation(761) into ExpressionStatement(762) at 0", "Insert SimpleName: resources(468) into MethodInvocation(473) at 0", "Insert SimpleName: add(469) into MethodInvocation(473) at 1", "Insert TypeLiteral(472) into MethodInvocation(473) at 2", "Insert BooleanLiteral: true(725) into ReturnStatement(726) at 0", "Insert SimpleType: Collection(729) into ParameterizedType: Collection<JobInfo>(732) at 0", "Insert SimpleType: JobInfo(731) into ParameterizedType: Collection<JobInfo>(732) at 1", "Insert SimpleName: jobs(733) into VariableDeclarationFragment(740) at 0", "Insert MethodInvocation(739) into VariableDeclarationFragment(740) at 1", "Insert SimpleName: jobs(742) into MethodInvocation(744) at 0", "Insert SimpleName: isEmpty(743) into MethodInvocation(744) at 1", "Insert SimpleName: System(758) into MethodInvocation(761) at 0", "Insert SimpleName: exit(759) into MethodInvocation(761) at 1", "Insert NumberLiteral: 0(760) into MethodInvocation(761) at 2", "Insert SimpleType: AdminResource(471) into TypeLiteral(472) at 0", "Insert SimpleName: Collection(728) into SimpleType: Collection(729) at 0", "Insert SimpleName: JobInfo(730) into SimpleType: JobInfo(731) at 0", "Insert MethodInvocation(735) into MethodInvocation(739) at 0", "Insert SimpleName: list(736) into MethodInvocation(739) at 1", "Insert NullLiteral(737) into MethodInvocation(739) at 2", "Insert QualifiedName: State.RUNNING(738) into MethodInvocation(739) at 3", "Insert SimpleName: AdminResource(470) into SimpleType: AdminResource(471) at 0", "Insert SimpleName: getJobManager(734) into MethodInvocation(735) at 0"]}}, {"AbstractResource_cluster": {"actions": [{"root": "INS FieldDeclaration to TypeDeclaration: class at 6", "operations": ["INS VariableDeclarationFragment to FieldDeclaration at 2", "INS SimpleName: server to VariableDeclarationFragment at 0", "INS SimpleType: NutchServer to FieldDeclaration at 1", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS Modifier: protected to FieldDeclaration at 0", "INS SimpleName: NutchServer to SimpleType: NutchServer at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: server to Assignment: = at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: NutchServer to MethodInvocation at 0", "INS SimpleName: getInstance to MethodInvocation at 1"]}]}}, {"AbstractResource_diff": {"operations": ["Insert FieldDeclaration(55) into TypeDeclaration: class(104) at 6", "Insert Modifier: protected(50) into FieldDeclaration(55) at 0", "Insert SimpleType: NutchServer(52) into FieldDeclaration(55) at 1", "Insert VariableDeclarationFragment(54) into FieldDeclaration(55) at 2", "Insert SimpleName: NutchServer(51) into SimpleType: NutchServer(52) at 0", "Insert SimpleName: server(53) into VariableDeclarationFragment(54) at 0", "Insert ExpressionStatement(63) into Block(80) at 0", "Insert Assignment: =(62) into ExpressionStatement(63) at 0", "Insert SimpleName: server(58) into Assignment: =(62) at 0", "Insert MethodInvocation(61) into Assignment: =(62) at 1", "Insert SimpleName: NutchServer(59) into MethodInvocation(61) at 0", "Insert SimpleName: getInstance(60) into MethodInvocation(61) at 1"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "False", "maintenance": "False", "build": "False"}]}