{"application": "apache-httpclient", "csha": "d550a62fe308789660dcebc774784468c558ca6c", "files": [{"EofSensorInputStream_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS PrimitiveType: boolean to MethodDeclaration at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: selfClosed to ReturnStatement at 0", "INS SimpleName: isSelfClosed to MethodDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS Block to MethodDeclaration at 2"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 11", "operations": ["INS ReturnStatement to Block at 0", "INS SimpleType: InputStream to MethodDeclaration at 0", "INS SimpleName: getWrappedStream to MethodDeclaration at 1", "INS SimpleName: wrappedStream to ReturnStatement at 0", "INS SimpleName: InputStream to SimpleType: InputStream at 0", "INS Block to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 11"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS NumberLiteral: 0 to MethodInvocation at 2", "INS MethodInvocation to ReturnStatement at 0", "INS QualifiedName: b.length to MethodInvocation at 3", "INS Block to MethodDeclaration at 6", "INS ReturnStatement to Block at 0"]}, {"root": "UPDATE from Primarily used to auto-release an underlying to Primarily used to auto-release an underlying managed connection when the response", "operations": ["UPD TextElement: Primarily used to auto-release an underlying from Primarily used to auto-release an underlying to Primarily used to auto-release an underlying managed connection when the response"]}, {"root": "UPDATE from when the response body is consumed or no longer needed. to body is consumed or no longer needed.", "operations": ["UPD TextElement: when the response body is consumed or no longer needed. from when the response body is consumed or no longer needed. to body is consumed or no longer needed."]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: b to MethodInvocation at 1", "MOV SimpleName: read to MethodInvocation at 0"]}, {"root": "UPDATE from \"Wrapped stream may not be null.\" to \"Wrapped stream may not be null\"", "operations": ["UPD StringLiteral: \"Wrapped stream may not be null.\" from \"Wrapped stream may not be null.\" to \"Wrapped stream may not be null\""]}, {"root": "DEL TagElement: @link", "operations": ["DEL SimpleName: ManagedClientConnection", "DEL TagElement: @link", "DEL TextElement:  connection"]}, {"root": "DEL TextElement: <p>", "operations": ["DEL TextElement: <p>"]}, {"root": "DEL TextElement: This class is based on <code>AutoCloseInputStream</code> in HttpClient 3.1,", "operations": ["DEL TextElement: This class is based on <code>AutoCloseInputStream</code> in HttpClient 3.1,"]}, {"root": "DEL TextElement: but has notable differences. It does not allow mark/reset, distinguishes", "operations": ["DEL TextElement: but has notable differences. It does not allow mark/reset, distinguishes"]}, {"root": "DEL TextElement: different kinds of event, and does not always close the underlying stream", "operations": ["DEL TextElement: different kinds of event, and does not always close the underlying stream"]}, {"root": "DEL TextElement: on EOF. That decision is left to the ", "operations": ["DEL TextElement: on EOF. That decision is left to the "]}, {"root": "DEL TagElement: @link", "operations": ["DEL TagElement: @link", "DEL TextElement:  watcher", "DEL SimpleName: EofSensorWatcher"]}, {"root": "DEL TextElement: .", "operations": ["DEL TextElement: ."]}, {"root": "DEL Block", "operations": ["DEL SimpleName: wrappedStream", "DEL SimpleName: l", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: ex", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Block", "DEL Block", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL NumberLiteral: 1", "DEL VariableDeclarationStatement", "DEL IfStatement", "DEL Block", "DEL SimpleName: l", "DEL TryStatement", "DEL CatchClause", "DEL SimpleName: l", "DEL MethodInvocation", "DEL Assignment: =", "DEL VariableDeclarationFragment", "DEL SimpleName: checkAbort", "DEL PrefixExpression: -", "DEL SimpleName: ex", "DEL SimpleName: IOException", "DEL ThrowStatement", "DEL SimpleName: isReadAllowed", "DEL ReturnStatement", "DEL PrimitiveType: int", "DEL SimpleName: checkEOF", "DEL SimpleName: l", "DEL SimpleType: IOException", "DEL MethodInvocation", "DEL MethodInvocation"]}]}}, {"EofSensorInputStream_diff": {"operations": ["Insert MethodDeclaration(136) into TypeDeclaration: class(587) at 10", "Insert MethodDeclaration(143) into TypeDeclaration: class(587) at 11", "Insert PrimitiveType: boolean(131) into MethodDeclaration(136) at 0", "Insert SimpleName: isSelfClosed(132) into MethodDeclaration(136) at 1", "Insert Block(135) into MethodDeclaration(136) at 2", "Insert SimpleType: InputStream(138) into MethodDeclaration(143) at 0", "Insert SimpleName: getWrappedStream(139) into MethodDeclaration(143) at 1", "Insert Block(142) into MethodDeclaration(143) at 2", "Insert Block(294) into MethodDeclaration(295) at 6", "Update TextElement: Primarily used to auto-release an underlying(14) to Primarily used to auto-release an underlying managed connection when the response", "Update TextElement: when the response body is consumed or no longer needed.(18) to body is consumed or no longer needed.", "Insert ReturnStatement(134) into Block(135) at 0", "Insert SimpleName: InputStream(137) into SimpleType: InputStream(138) at 0", "Insert ReturnStatement(141) into Block(142) at 0", "Insert ReturnStatement(293) into Block(294) at 0", "Insert SimpleName: selfClosed(133) into ReturnStatement(134) at 0", "Insert SimpleName: wrappedStream(140) into ReturnStatement(141) at 0", "Insert MethodInvocation(292) into ReturnStatement(293) at 0", "Move SimpleName: read(297) into MethodInvocation(292) at 0", "Move SimpleName: b(298) into MethodInvocation(292) at 1", "Insert NumberLiteral: 0(290) into MethodInvocation(292) at 2", "Insert QualifiedName: b.length(291) into MethodInvocation(292) at 3", "Update StringLiteral: \"Wrapped stream may not be null.\"(124) to \"Wrapped stream may not be null\"", "Delete SimpleName: ManagedClientConnection(15)", "Delete TextElement:  connection(16)", "Delete TagElement: @link(17)", "Delete TextElement: <p>(19)", "Delete TextElement: This class is based on <code>AutoCloseInputStream</code> in HttpClient 3.1,(20)", "Delete TextElement: but has notable differences. It does not allow mark/reset, distinguishes(21)", "Delete TextElement: different kinds of event, and does not always close the underlying stream(22)", "Delete TextElement: on EOF. That decision is left to the (23)", "Delete SimpleName: EofSensorWatcher(24)", "Delete TextElement:  watcher(25)", "Delete TagElement: @link(26)", "Delete TextElement: .(27)", "Delete PrimitiveType: int(287)", "Delete SimpleName: l(288)", "Delete NumberLiteral: 1(289)", "Delete PrefixExpression: -(290)", "Delete VariableDeclarationFragment(291)", "Delete VariableDeclarationStatement(292)", "Delete SimpleName: isReadAllowed(293)", "Delete MethodInvocation(294)", "Delete SimpleName: l(295)", "Delete SimpleName: wrappedStream(296)", "Delete MethodInvocation(299)", "Delete Assignment: =(300)", "Delete ExpressionStatement(301)", "Delete SimpleName: checkEOF(302)", "Delete SimpleName: l(303)", "Delete MethodInvocation(304)", "Delete ExpressionStatement(305)", "Delete Block(306)", "Delete SimpleName: IOException(307)", "Delete SimpleType: IOException(308)", "Delete SimpleName: ex(309)", "Delete SingleVariableDeclaration(310)", "Delete SimpleName: checkAbort(311)", "Delete MethodInvocation(312)", "Delete ExpressionStatement(313)", "Delete SimpleName: ex(314)", "Delete ThrowStatement(315)", "Delete Block(316)", "Delete CatchClause(317)", "Delete TryStatement(318)", "Delete Block(319)", "Delete IfStatement(320)", "Delete SimpleName: l(321)", "Delete ReturnStatement(322)", "Delete Block(323)"]}}, {"ConnectionReleaseTriggerImpl_cluster": {"actions": [{"root": "INS Block to SynchronizedStatement at 1", "operations": ["INS SimpleName: getMessage to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ex to MethodInvocation at 3", "INS SimpleName: isDebugEnabled to MethodInvocation at 1", "INS SimpleName: log to FieldAccess at 1", "INS ThisExpression to FieldAccess at 0", "INS ThisExpression to FieldAccess at 0", "INS CatchClause to TryStatement at 1", "INS MethodInvocation to IfStatement at 0", "INS ThisExpression to FieldAccess at 0", "INS FieldAccess to IfStatement at 0", "INS SimpleName: manager to FieldAccess at 1", "INS NullLiteral to MethodInvocation at 3", "INS SimpleName: IOException to SimpleType: IOException at 0", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: managedConn to FieldAccess at 1", "INS SimpleType: IOException to SingleVariableDeclaration at 0", "INS QualifiedName: TimeUnit.MILLISECONDS to MethodInvocation at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS TryStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS Block to TryStatement at 2", "INS StringLiteral: \"Connection discarded\" to MethodInvocation at 2", "INS SimpleName: releaseConnection to MethodInvocation at 1", "INS Block to CatchClause at 1", "INS SimpleName: managedConn to FieldAccess at 1", "INS SimpleName: close to MethodInvocation at 1", "INS SimpleName: log to FieldAccess at 1", "INS SimpleName: reusable to FieldAccess at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: debug to MethodInvocation at 1", "INS ThisExpression to FieldAccess at 0", "INS Block to SynchronizedStatement at 1", "INS IfStatement to Block at 2", "INS Block to IfStatement at 1", "INS Block to IfStatement at 2", "INS SingleVariableDeclaration to CatchClause at 0", "INS FieldAccess to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: ex to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 0 to MethodInvocation at 4", "INS ExpressionStatement to Block at 0", "INS FieldAccess to MethodInvocation at 0", "INS FieldAccess to MethodInvocation at 2", "INS SimpleName: log to MethodInvocation at 0", "INS IfStatement to Block at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: ex to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS ThisExpression to FieldAccess at 0", "INS Block to TryStatement at 0", "INS SimpleName: debug to MethodInvocation at 1", "INS FieldAccess to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}]}}, {"ConnectionReleaseTriggerImpl_diff": {"operations": ["Insert Block(293) into SynchronizedStatement(294) at 1", "Move IfStatement(213) into Block(293) at 0", "Move ExpressionStatement(219) into Block(293) at 1", "Insert IfStatement(292) into Block(293) at 2", "Insert FieldAccess(222) into IfStatement(292) at 0", "Move Block(238) into IfStatement(292) at 1", "Insert Block(291) into IfStatement(292) at 2", "Insert ThisExpression(220) into FieldAccess(222) at 0", "Insert SimpleName: reusable(221) into FieldAccess(222) at 1", "Insert TryStatement(290) into Block(291) at 0", "Insert Block(253) into TryStatement(290) at 0", "Insert CatchClause(276) into TryStatement(290) at 1", "Insert Block(289) into TryStatement(290) at 2", "Insert ExpressionStatement(247) into Block(253) at 0", "Insert ExpressionStatement(252) into Block(253) at 1", "Insert SingleVariableDeclaration(257) into CatchClause(276) at 0", "Insert Block(275) into CatchClause(276) at 1", "Insert ExpressionStatement(288) into Block(289) at 0", "Insert MethodInvocation(246) into ExpressionStatement(247) at 0", "Insert MethodInvocation(251) into ExpressionStatement(252) at 0", "Insert SimpleType: IOException(255) into SingleVariableDeclaration(257) at 0", "Insert SimpleName: ex(256) into SingleVariableDeclaration(257) at 1", "Insert IfStatement(274) into Block(275) at 0", "Insert MethodInvocation(287) into ExpressionStatement(288) at 0", "Insert FieldAccess(244) into MethodInvocation(246) at 0", "Insert SimpleName: close(245) into MethodInvocation(246) at 1", "Insert SimpleName: log(248) into MethodInvocation(251) at 0", "Insert SimpleName: debug(249) into MethodInvocation(251) at 1", "Insert StringLiteral: \"Connection discarded\"(250) into MethodInvocation(251) at 2", "Insert SimpleName: IOException(254) into SimpleType: IOException(255) at 0", "Insert MethodInvocation(262) into IfStatement(274) at 0", "Insert Block(273) into IfStatement(274) at 1", "Insert FieldAccess(279) into MethodInvocation(287) at 0", "Insert SimpleName: releaseConnection(280) into MethodInvocation(287) at 1", "Insert FieldAccess(283) into MethodInvocation(287) at 2", "Insert NullLiteral(284) into MethodInvocation(287) at 3", "Insert NumberLiteral: 0(285) into MethodInvocation(287) at 4", "Insert QualifiedName: TimeUnit.MILLISECONDS(286) into MethodInvocation(287) at 5", "Insert ThisExpression(242) into FieldAccess(244) at 0", "Insert SimpleName: managedConn(243) into FieldAccess(244) at 1", "Insert FieldAccess(260) into MethodInvocation(262) at 0", "Insert SimpleName: isDebugEnabled(261) into MethodInvocation(262) at 1", "Insert ExpressionStatement(272) into Block(273) at 0", "Insert ThisExpression(277) into FieldAccess(279) at 0", "Insert SimpleName: manager(278) into FieldAccess(279) at 1", "Insert ThisExpression(281) into FieldAccess(283) at 0", "Insert SimpleName: managedConn(282) into FieldAccess(283) at 1", "Insert ThisExpression(258) into FieldAccess(260) at 0", "Insert SimpleName: log(259) into FieldAccess(260) at 1", "Insert MethodInvocation(271) into ExpressionStatement(272) at 0", "Insert FieldAccess(265) into MethodInvocation(271) at 0", "Insert SimpleName: debug(266) into MethodInvocation(271) at 1", "Insert MethodInvocation(269) into MethodInvocation(271) at 2", "Insert SimpleName: ex(270) into MethodInvocation(271) at 3", "Insert ThisExpression(263) into FieldAccess(265) at 0", "Insert SimpleName: log(264) into FieldAccess(265) at 1", "Insert SimpleName: ex(267) into MethodInvocation(269) at 0", "Insert SimpleName: getMessage(268) into MethodInvocation(269) at 1"]}}, {"HttpRequestWrapper_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 10", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: HttpRequestWrapper to MethodDeclaration at 1", "INS IfStatement to Block at 2", "INS Block to MethodDeclaration at 3", "INS Block to IfStatement at 2", "INS Block to IfStatement at 1", "INS SuperConstructorInvocation to Block at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS SimpleName: version to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: method to VariableDeclarationFragment at 0", "INS Block to IfStatement at 1", "INS FieldAccess to MethodInvocation at 0", "INS SimpleName: getMethod to MethodInvocation at 1", "INS SimpleName: original to FieldAccess at 1", "INS MethodInvocation to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to MethodDeclaration at 3", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: getRequestLine to MethodInvocation at 1", "INS IfStatement to Block at 3", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS VariableDeclarationStatement to Block at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 2"]}, {"root": "UPDATE from private to public", "operations": ["UPD Modifier: private from private to public"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: ProtocolVersion to MethodDeclaration at 1"]}, {"root": "INS SimpleName: getProtocolVersion to MethodDeclaration at 2", "operations": ["INS SimpleName: getProtocolVersion to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleName: getProtocolVersion to MethodDeclaration at 2", "MOV Modifier: public to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: RequestLine to MethodDeclaration at 1"]}, {"root": "UPDATE from HttpProtocolParams to getRequestLine", "operations": ["UPD SimpleName: HttpProtocolParams from HttpProtocolParams to getRequestLine", "UPD SimpleName: getProtocolVersion from getProtocolVersion to getRequestLine", "UPD SimpleName: toASCIIString from toASCIIString to getRequestLine"]}, {"root": "INS Block to MethodDeclaration at 6", "operations": ["INS Block to MethodDeclaration at 6"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 4", "MOV ExpressionStatement to Block at 0", "MOV ExpressionStatement to Block at 1", "MOV ExpressionStatement to Block at 3"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS ReturnStatement to Block at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getProtocolVersion to MethodInvocation at 1", "INS FieldAccess to MethodInvocation at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 5", "MOV VariableDeclarationStatement to Block at 2", "MOV IfStatement to Block at 4"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0", "MOV IfStatement to Block at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InstanceofExpression to IfStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: ProtocolVersion to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: String to VariableDeclarationStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: != to IfStatement at 0", "MOV Block to IfStatement at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS SimpleName: method to ClassInstanceCreation at 1", "operations": ["INS SimpleName: method to ClassInstanceCreation at 1"]}, {"root": "INS SimpleName: version to ClassInstanceCreation at 4", "operations": ["INS SimpleName: version to ClassInstanceCreation at 4"]}, {"root": "INS MethodInvocation to InfixExpression: + at 0", "operations": ["INS SimpleName: getRequestLine to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 0"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV InfixExpression: || to ReturnStatement at 0"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV ThisExpression to FieldAccess at 0", "MOV SimpleName: method to FieldAccess at 1"]}, {"root": "UPDATE from method to original", "operations": ["UPD SimpleName: method from method to original", "UPD SimpleName: version from version to original"]}, {"root": "UPDATE from getVersion to getProtocolVersion", "operations": ["UPD SimpleName: getVersion from getVersion to getProtocolVersion"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getVersion to MethodInvocation at 1", "MOV SimpleName: HttpProtocolParams to MethodInvocation at 1"]}, {"root": "INS FieldAccess to Assignment: = at 0", "operations": ["INS FieldAccess to Assignment: = at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: uri to FieldAccess at 1"]}, {"root": "INS NullLiteral to Assignment: = at 1", "operations": ["INS NullLiteral to Assignment: = at 1"]}, {"root": "INS SimpleName: uritext to Assignment: = at 0", "operations": ["INS SimpleName: uritext to Assignment: = at 0"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS MethodInvocation to Assignment: = at 1", "INS SimpleName: toASCIIString to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: getUri to MethodInvocation at 1", "INS SimpleName: original to FieldAccess at 1", "INS FieldAccess to MethodInvocation at 0", "INS ThisExpression to FieldAccess at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from FieldAccess", "operations": ["MOV ThisExpression to FieldAccess at 0", "MOV SimpleName: version to FieldAccess at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0"]}, {"root": "UPDATE from EntityWrapper to RequestEntityWrapper", "operations": ["UPD SimpleType: EntityWrapper from EntityWrapper to RequestEntityWrapper", "UPD SimpleName: EntityWrapper from EntityWrapper to RequestEntityWrapper"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: toASCIIString to MethodInvocation at 1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.InputStream"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.OutputStream"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.net.URISyntaxException"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.http.entity.HttpEntityWrapper"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.http.params.HttpProtocolParams", "DEL ImportDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: String", "DEL SimpleName: method", "DEL FieldDeclaration", "DEL VariableDeclarationFragment", "DEL SimpleName: String", "DEL Modifier: private"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL SimpleName: ProtocolVersion", "DEL SimpleName: version", "DEL SimpleType: ProtocolVersion"]}, {"root": "DEL SimpleName: uri", "operations": ["DEL SimpleName: uri"]}, {"root": "DEL SimpleName: uri", "operations": ["DEL SimpleName: uri"]}, {"root": "DEL SimpleName: HttpRequestWrapper", "operations": ["DEL SimpleName: HttpRequestWrapper"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL SimpleName: version"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: uri", "DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL SimpleName: URI", "DEL SimpleType: URI"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: String", "DEL Modifier: final", "DEL SimpleType: String", "DEL SimpleName: method", "DEL SingleVariableDeclaration"]}, {"root": "DEL SuperConstructorInvocation", "operations": ["DEL SuperConstructorInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL ExpressionStatement", "DEL FieldAccess", "DEL SimpleName: method"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL FieldAccess", "DEL ExpressionStatement", "DEL SimpleName: version", "DEL Assignment: =", "DEL ThisExpression", "DEL SimpleName: version"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL SimpleName: getParams", "DEL InfixExpression: !=", "DEL ThisExpression", "DEL FieldAccess", "DEL Block", "DEL ReturnStatement", "DEL MethodDeclaration", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: ProtocolVersion", "DEL IfStatement", "DEL FieldAccess", "DEL MethodInvocation", "DEL SimpleName: version", "DEL ReturnStatement", "DEL SimpleType: ProtocolVersion", "DEL NullLiteral"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: setProtocolVersion", "DEL MethodDeclaration", "DEL SimpleName: version", "DEL SimpleName: ProtocolVersion", "DEL SimpleType: ProtocolVersion", "DEL Block", "DEL PrimitiveType: void", "DEL Modifier: public", "DEL Modifier: final", "DEL SingleVariableDeclaration"]}, {"root": "DEL FieldAccess", "operations": ["DEL FieldAccess", "DEL ThisExpression", "DEL SimpleName: version"]}, {"root": "DEL SimpleName: version", "operations": ["DEL SimpleName: version"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: uri"]}, {"root": "DEL FieldAccess", "operations": ["DEL SimpleName: method", "DEL ThisExpression", "DEL FieldAccess"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getProtocolVersion"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL SimpleName: getRequestLine", "DEL Block", "DEL IfStatement", "DEL MethodDeclaration"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: String", "DEL SimpleType: String", "DEL ThisExpression", "DEL SimpleName: getMethod", "DEL SimpleName: method", "DEL ReturnStatement", "DEL Modifier: public", "DEL MethodDeclaration", "DEL Block", "DEL FieldAccess"]}, {"root": "DEL FieldAccess", "operations": ["DEL SimpleName: method", "DEL FieldAccess", "DEL ThisExpression"]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL Modifier: private", "DEL SimpleName: consumed", "DEL VariableDeclarationFragment", "DEL PrimitiveType: boolean"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: ProtocolVersion", "DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL SimpleType: ProtocolVersion", "DEL SimpleName: version"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleType: URI", "DEL Modifier: final", "DEL SimpleName: uri", "DEL SimpleName: URI"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: String", "DEL SimpleName: String", "DEL SimpleName: method", "DEL SingleVariableDeclaration", "DEL Modifier: final"]}, {"root": "DEL SimpleName: version", "operations": ["DEL SimpleName: version"]}, {"root": "DEL SimpleName: uri", "operations": ["DEL SimpleName: uri"]}, {"root": "DEL SimpleName: method", "operations": ["DEL SimpleName: method"]}, {"root": "DEL InfixExpression: ||", "operations": ["DEL SimpleName: consumed", "DEL InfixExpression: ||", "DEL ThisExpression", "DEL FieldAccess", "DEL PrefixExpression: !"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL Modifier: public", "DEL SimpleName: IOException", "DEL SimpleName: HttpEntityWrapper", "DEL Block", "DEL SimpleName: InputStream", "DEL MethodDeclaration", "DEL Modifier: public", "DEL SimpleName: Override", "DEL SimpleType: IOException", "DEL PrimitiveType: void", "DEL SimpleName: consumeContent", "DEL Block", "DEL SimpleName: writeTo", "DEL BooleanLiteral: true", "DEL MarkerAnnotation", "DEL SuperMethodInvocation", "DEL SimpleType: IOException", "DEL SimpleName: HttpEntity", "DEL SuperConstructorInvocation", "DEL Block", "DEL BooleanLiteral: true", "DEL ExpressionStatement", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: IOException", "DEL Assignment: =", "DEL MarkerAnnotation", "DEL SimpleType: IOException", "DEL SimpleName: consumed", "DEL SimpleName: consumeContent", "DEL SimpleName: entity", "DEL SuperMethodInvocation", "DEL SimpleName: Deprecated", "DEL SimpleType: InputStream", "DEL SimpleName: getContent", "DEL PrimitiveType: void", "DEL SuperMethodInvocation", "DEL MarkerAnnotation", "DEL SimpleType: HttpEntity", "DEL SimpleName: consumed", "DEL TypeDeclaration: class", "DEL SimpleName: entity", "DEL SimpleType: OutputStream", "DEL SimpleName: EntityWrapper", "DEL SimpleName: outstream", "DEL SingleVariableDeclaration", "DEL ExpressionStatement", "DEL SimpleName: writeTo", "DEL SimpleType: HttpEntityWrapper", "DEL SimpleName: Override", "DEL SimpleName: IOException", "DEL SimpleName: OutputStream", "DEL SimpleName: EntityWrapper", "DEL Modifier: final", "DEL MethodDeclaration", "DEL MarkerAnnotation", "DEL MethodDeclaration", "DEL Assignment: =", "DEL MethodDeclaration", "DEL Modifier: final", "DEL SimpleName: outstream", "DEL SimpleName: Override", "DEL ExpressionStatement", "DEL SimpleName: getContent", "DEL Modifier: public"]}, {"root": "DEL SimpleName: version", "operations": ["DEL SimpleName: version"]}, {"root": "DEL SimpleName: uri", "operations": ["DEL SimpleName: uri"]}, {"root": "DEL SimpleName: method", "operations": ["DEL SimpleName: method"]}, {"root": "DEL SimpleName: version", "operations": ["DEL SimpleName: version"]}, {"root": "DEL SimpleName: uri", "operations": ["DEL SimpleName: uri"]}, {"root": "DEL SimpleName: method", "operations": ["DEL SimpleName: method"]}, {"root": "DEL Block", "operations": ["DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL ClassInstanceCreation", "DEL ParenthesizedExpression", "DEL SimpleName: getProtocolVersion", "DEL SimpleName: request", "DEL SimpleName: RequestLine", "DEL MethodInvocation", "DEL SimpleName: method", "DEL SimpleName: uri", "DEL SimpleName: request", "DEL SimpleName: requestLine", "DEL Block", "DEL Block", "DEL SimpleName: ProtocolException", "DEL SimpleName: URISyntaxException", "DEL ExpressionStatement", "DEL SimpleName: HttpUriRequest", "DEL Assignment: =", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: getMethod", "DEL Assignment: =", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: getRequestLine", "DEL TryStatement", "DEL MethodInvocation", "DEL SimpleType: ProtocolException", "DEL SimpleType: URI", "DEL Assignment: =", "DEL VariableDeclarationStatement", "DEL SimpleName: method", "DEL MethodInvocation", "DEL SimpleName: requestLine", "DEL VariableDeclarationStatement", "DEL SimpleName: getRequestLine", "DEL SimpleName: ex", "DEL SimpleName: requestLine", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL CatchClause", "DEL SimpleName: request", "DEL IfStatement", "DEL SimpleType: HttpUriRequest", "DEL InfixExpression: +", "DEL VariableDeclarationFragment", "DEL SimpleName: version", "DEL ExpressionStatement", "DEL SimpleName: version", "DEL SimpleName: version", "DEL SimpleName: uri", "DEL VariableDeclarationFragment", "DEL SimpleName: method", "DEL StringLiteral: \"Invalid request URI: \"", "DEL Block", "DEL SimpleName: request", "DEL SimpleType: URI", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL CastExpression", "DEL SimpleName: ex", "DEL SimpleName: HttpUriRequest", "DEL Block", "DEL SimpleType: URISyntaxException", "DEL SimpleName: request", "DEL MethodInvocation", "DEL SimpleName: getUri", "DEL CastExpression", "DEL SimpleName: URI", "DEL SimpleName: getMethod", "DEL Assignment: =", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL SimpleType: RequestLine", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: getUri", "DEL ThrowStatement", "DEL SimpleName: getProtocolVersion", "DEL SimpleType: HttpUriRequest", "DEL SimpleName: URI", "DEL MethodInvocation", "DEL SingleVariableDeclaration"]}]}}, {"HttpRequestWrapper_diff": {"operations": ["Insert MethodDeclaration(117) into TypeDeclaration: class(449) at 8", "Insert MethodDeclaration(239) into TypeDeclaration: class(449) at 12", "Insert Modifier: private(65) into MethodDeclaration(117) at 0", "Insert SimpleName: HttpRequestWrapper(66) into MethodDeclaration(117) at 1", "Move SingleVariableDeclaration(110) into MethodDeclaration(117) at 2", "Insert Block(116) into MethodDeclaration(117) at 3", "Update Modifier: private(89) to public", "Move SimpleType: ProtocolVersion(93) into MethodDeclaration(129) at 1", "Insert SimpleName: getProtocolVersion(121) into MethodDeclaration(129) at 2", "Move Modifier: public(150) into MethodDeclaration(239) at 0", "Move SimpleType: RequestLine(218) into MethodDeclaration(239) at 1", "Update SimpleName: getProtocolVersion(153) to getRequestLine", "Move SimpleName: getProtocolVersion(153) into MethodDeclaration(239) at 2", "Insert Block(238) into MethodDeclaration(239) at 3", "Insert Block(447) into MethodDeclaration(448) at 6", "Insert SuperConstructorInvocation(72) into Block(116) at 0", "Move ExpressionStatement(117) into Block(116) at 1", "Insert IfStatement(103) into Block(116) at 2", "Move ExpressionStatement(141) into Block(116) at 3", "Move ExpressionStatement(147) into Block(116) at 4", "Insert ReturnStatement(127) into Block(128) at 0", "Insert VariableDeclarationStatement(171) into Block(238) at 0", "Insert VariableDeclarationStatement(183) into Block(238) at 1", "Move VariableDeclarationStatement(225) into Block(238) at 2", "Insert IfStatement(215) into Block(238) at 3", "Move IfStatement(253) into Block(238) at 4", "Move ReturnStatement(263) into Block(238) at 5", "Move IfStatement(562) into Block(447) at 0", "Move IfStatement(689) into Block(447) at 1", "Move InstanceofExpression(581) into IfStatement(103) at 0", "Insert Block(95) into IfStatement(103) at 1", "Insert Block(102) into IfStatement(103) at 2", "Insert MethodInvocation(126) into ReturnStatement(127) at 0", "Move SimpleType: ProtocolVersion(564) into VariableDeclarationStatement(171) at 0", "Insert VariableDeclarationFragment(170) into VariableDeclarationStatement(171) at 1", "Move SimpleType: String(574) into VariableDeclarationStatement(183) at 0", "Insert VariableDeclarationFragment(182) into VariableDeclarationStatement(183) at 1", "Move InfixExpression: !=(230) into IfStatement(215) at 0", "Insert Block(203) into IfStatement(215) at 1", "Move Block(237) into IfStatement(215) at 2", "Move ExpressionStatement(601) into Block(95) at 0", "Move ExpressionStatement(123) into Block(102) at 0", "Insert FieldAccess(124) into MethodInvocation(126) at 0", "Insert SimpleName: getProtocolVersion(125) into MethodInvocation(126) at 1", "Insert SimpleName: version(162) into VariableDeclarationFragment(170) at 0", "Insert MethodInvocation(169) into VariableDeclarationFragment(170) at 1", "Insert SimpleName: method(174) into VariableDeclarationFragment(182) at 0", "Insert MethodInvocation(181) into VariableDeclarationFragment(182) at 1", "Move ExpressionStatement(187) into Block(203) at 0", "Insert SimpleName: method(233) into ClassInstanceCreation(236) at 1", "Insert SimpleName: version(235) into ClassInstanceCreation(236) at 3", "Insert MethodInvocation(290) into InfixExpression: +(295) at 0", "Move InfixExpression: ||(467) into ReturnStatement(404) at 0", "Move ThisExpression(124) into FieldAccess(124) at 0", "Update SimpleName: method(125) to original", "Move SimpleName: method(125) into FieldAccess(124) at 1", "Insert MethodInvocation(167) into MethodInvocation(169) at 0", "Update SimpleName: getVersion(165) to getProtocolVersion", "Move SimpleName: getVersion(165) into MethodInvocation(169) at 1", "Insert MethodInvocation(179) into MethodInvocation(181) at 0", "Insert SimpleName: getMethod(180) into MethodInvocation(181) at 1", "Insert SimpleName: getRequestLine(289) into MethodInvocation(290) at 0", "Insert FieldAccess(85) into Assignment: =(93) at 0", "Insert NullLiteral(99) into Assignment: =(100) at 1", "Insert FieldAccess(165) into MethodInvocation(167) at 0", "Update SimpleName: HttpProtocolParams(164) to getRequestLine", "Move SimpleName: HttpProtocolParams(164) into MethodInvocation(167) at 1", "Insert FieldAccess(177) into MethodInvocation(179) at 0", "Insert SimpleName: getRequestLine(178) into MethodInvocation(179) at 1", "Insert SimpleName: uritext(195) into Assignment: =(201) at 0", "Insert MethodInvocation(200) into Assignment: =(201) at 1", "Insert MethodInvocation(211) into Assignment: =(212) at 1", "Insert ThisExpression(83) into FieldAccess(85) at 0", "Insert SimpleName: uri(84) into FieldAccess(85) at 1", "Move ThisExpression(159) into FieldAccess(165) at 0", "Update SimpleName: version(160) to original", "Move SimpleName: version(160) into FieldAccess(165) at 1", "Insert ThisExpression(175) into FieldAccess(177) at 0", "Insert SimpleName: original(176) into FieldAccess(177) at 1", "Move FieldAccess(331) into MethodInvocation(200) at 0", "Insert SimpleName: toASCIIString(199) into MethodInvocation(200) at 1", "Insert MethodInvocation(209) into MethodInvocation(211) at 0", "Insert SimpleName: getUri(210) into MethodInvocation(211) at 1", "Update SimpleType: EntityWrapper(419) to RequestEntityWrapper", "Insert FieldAccess(207) into MethodInvocation(209) at 0", "Update SimpleName: toASCIIString(233) to getRequestLine", "Move SimpleName: toASCIIString(233) into MethodInvocation(209) at 1", "Update SimpleName: EntityWrapper(418) to RequestEntityWrapper", "Insert ThisExpression(205) into FieldAccess(207) at 0", "Insert SimpleName: original(206) into FieldAccess(207) at 1", "Delete QualifiedName: java.io.IOException(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: java.io.InputStream(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: java.io.OutputStream(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: java.net.URISyntaxException(10)", "Delete ImportDeclaration(11)", "Delete QualifiedName: org.apache.http.entity.HttpEntityWrapper(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: org.apache.http.params.HttpProtocolParams(38)", "Delete ImportDeclaration(39)", "Delete Modifier: private(71)", "Delete SimpleName: String(72)", "Delete SimpleType: String(73)", "Delete SimpleName: method(74)", "Delete VariableDeclarationFragment(75)", "Delete FieldDeclaration(76)", "Delete Modifier: private(77)", "Delete SimpleName: ProtocolVersion(78)", "Delete SimpleType: ProtocolVersion(79)", "Delete SimpleName: version(80)", "Delete VariableDeclarationFragment(81)", "Delete FieldDeclaration(82)", "Delete SimpleName: uri(592)", "Delete SimpleName: uri(121)", "Delete SimpleName: HttpRequestWrapper(90)", "Delete Modifier: final(91)", "Delete SimpleName: version(94)", "Delete SingleVariableDeclaration(95)", "Delete Modifier: final(96)", "Delete SimpleName: URI(97)", "Delete SimpleType: URI(98)", "Delete SimpleName: uri(99)", "Delete SingleVariableDeclaration(100)", "Delete Modifier: final(101)", "Delete SimpleName: String(102)", "Delete SimpleType: String(103)", "Delete SimpleName: method(104)", "Delete SingleVariableDeclaration(105)", "Delete SuperConstructorInvocation(111)", "Delete FieldAccess(126)", "Delete SimpleName: method(127)", "Delete Assignment: =(128)", "Delete ExpressionStatement(129)", "Delete ThisExpression(130)", "Delete SimpleName: version(131)", "Delete FieldAccess(132)", "Delete SimpleName: version(133)", "Delete Assignment: =(134)", "Delete ExpressionStatement(135)", "Delete SimpleName: ProtocolVersion(151)", "Delete SimpleType: ProtocolVersion(152)", "Delete ThisExpression(154)", "Delete SimpleName: version(155)", "Delete FieldAccess(156)", "Delete NullLiteral(157)", "Delete InfixExpression: !=(158)", "Delete FieldAccess(161)", "Delete ReturnStatement(162)", "Delete Block(163)", "Delete SimpleName: getParams(166)", "Delete MethodInvocation(167)", "Delete MethodInvocation(168)", "Delete ReturnStatement(169)", "Delete Block(170)", "Delete IfStatement(171)", "Delete Block(172)", "Delete MethodDeclaration(173)", "Delete Modifier: public(174)", "Delete PrimitiveType: void(175)", "Delete SimpleName: setProtocolVersion(176)", "Delete Modifier: final(177)", "Delete SimpleName: ProtocolVersion(178)", "Delete SimpleType: ProtocolVersion(179)", "Delete SimpleName: version(180)", "Delete SingleVariableDeclaration(181)", "Delete Block(188)", "Delete MethodDeclaration(189)", "Delete ThisExpression(182)", "Delete SimpleName: version(183)", "Delete FieldAccess(184)", "Delete SimpleName: version(185)", "Delete SimpleName: uri(232)", "Delete MethodInvocation(234)", "Delete ThisExpression(256)", "Delete SimpleName: method(257)", "Delete FieldAccess(258)", "Delete SimpleName: getProtocolVersion(260)", "Delete MethodInvocation(261)", "Delete Modifier: public(216)", "Delete SimpleName: getRequestLine(219)", "Delete IfStatement(238)", "Delete Block(264)", "Delete MethodDeclaration(265)", "Delete Modifier: public(266)", "Delete SimpleName: String(267)", "Delete SimpleType: String(268)", "Delete SimpleName: getMethod(269)", "Delete ThisExpression(270)", "Delete SimpleName: method(271)", "Delete FieldAccess(272)", "Delete ReturnStatement(273)", "Delete Block(274)", "Delete MethodDeclaration(275)", "Delete ThisExpression(325)", "Delete SimpleName: method(326)", "Delete FieldAccess(327)", "Delete StringLiteral: \" \"(332)", "Delete Modifier: private(352)", "Delete PrimitiveType: boolean(353)", "Delete SimpleName: consumed(354)", "Delete VariableDeclarationFragment(355)", "Delete FieldDeclaration(356)", "Delete Modifier: final(359)", "Delete SimpleName: ProtocolVersion(360)", "Delete SimpleType: ProtocolVersion(361)", "Delete SimpleName: version(362)", "Delete SingleVariableDeclaration(363)", "Delete Modifier: final(364)", "Delete SimpleName: URI(365)", "Delete SimpleType: URI(366)", "Delete SimpleName: uri(367)", "Delete SingleVariableDeclaration(368)", "Delete Modifier: final(369)", "Delete SimpleName: String(370)", "Delete SimpleType: String(371)", "Delete SimpleName: method(372)", "Delete SingleVariableDeclaration(373)", "Delete SimpleName: version(381)", "Delete SimpleName: uri(382)", "Delete SimpleName: method(383)", "Delete ThisExpression(468)", "Delete SimpleName: consumed(469)", "Delete FieldAccess(470)", "Delete PrefixExpression: !(471)", "Delete InfixExpression: ||(472)", "Delete SimpleName: EntityWrapper(476)", "Delete SimpleName: HttpEntityWrapper(477)", "Delete SimpleType: HttpEntityWrapper(478)", "Delete SimpleName: EntityWrapper(479)", "Delete Modifier: final(480)", "Delete SimpleName: HttpEntity(481)", "Delete SimpleType: HttpEntity(482)", "Delete SimpleName: entity(483)", "Delete SingleVariableDeclaration(484)", "Delete SimpleName: entity(485)", "Delete SuperConstructorInvocation(486)", "Delete Block(487)", "Delete MethodDeclaration(488)", "Delete SimpleName: Deprecated(489)", "Delete MarkerAnnotation(490)", "Delete SimpleName: Override(491)", "Delete MarkerAnnotation(492)", "Delete Modifier: public(493)", "Delete PrimitiveType: void(494)", "Delete SimpleName: consumeContent(495)", "Delete SimpleName: IOException(496)", "Delete SimpleType: IOException(497)", "Delete SimpleName: consumed(498)", "Delete BooleanLiteral: true(499)", "Delete Assignment: =(500)", "Delete ExpressionStatement(501)", "Delete SimpleName: consumeContent(502)", "Delete SuperMethodInvocation(503)", "Delete ExpressionStatement(504)", "Delete Block(505)", "Delete MethodDeclaration(506)", "Delete SimpleName: Override(507)", "Delete MarkerAnnotation(508)", "Delete Modifier: public(509)", "Delete SimpleName: InputStream(510)", "Delete SimpleType: InputStream(511)", "Delete SimpleName: getContent(512)", "Delete SimpleName: IOException(513)", "Delete SimpleType: IOException(514)", "Delete SimpleName: getContent(515)", "Delete SuperMethodInvocation(516)", "Delete ReturnStatement(517)", "Delete Block(518)", "Delete MethodDeclaration(519)", "Delete SimpleName: Override(520)", "Delete MarkerAnnotation(521)", "Delete Modifier: public(522)", "Delete PrimitiveType: void(523)", "Delete SimpleName: writeTo(524)", "Delete Modifier: final(525)", "Delete SimpleName: OutputStream(526)", "Delete SimpleType: OutputStream(527)", "Delete SimpleName: outstream(528)", "Delete SingleVariableDeclaration(529)", "Delete SimpleName: IOException(530)", "Delete SimpleType: IOException(531)", "Delete SimpleName: consumed(532)", "Delete BooleanLiteral: true(533)", "Delete Assignment: =(534)", "Delete ExpressionStatement(535)", "Delete SimpleName: writeTo(536)", "Delete SimpleName: outstream(537)", "Delete SuperMethodInvocation(538)", "Delete ExpressionStatement(539)", "Delete Block(540)", "Delete MethodDeclaration(541)", "Delete TypeDeclaration: class(542)", "Delete SimpleName: version(670)", "Delete SimpleName: uri(671)", "Delete SimpleName: method(672)", "Delete SimpleName: version(682)", "Delete SimpleName: uri(683)", "Delete SimpleName: method(684)", "Delete SimpleName: version(565)", "Delete VariableDeclarationFragment(566)", "Delete VariableDeclarationStatement(567)", "Delete SimpleName: URI(568)", "Delete SimpleType: URI(569)", "Delete SimpleName: uri(570)", "Delete VariableDeclarationFragment(571)", "Delete VariableDeclarationStatement(572)", "Delete SimpleName: method(575)", "Delete VariableDeclarationFragment(576)", "Delete VariableDeclarationStatement(577)", "Delete SimpleName: version(582)", "Delete SimpleName: HttpUriRequest(583)", "Delete SimpleType: HttpUriRequest(584)", "Delete SimpleName: request(585)", "Delete CastExpression(586)", "Delete ParenthesizedExpression(587)", "Delete SimpleName: getProtocolVersion(588)", "Delete MethodInvocation(589)", "Delete Assignment: =(590)", "Delete ExpressionStatement(591)", "Delete SimpleName: method(602)", "Delete SimpleName: HttpUriRequest(603)", "Delete SimpleType: HttpUriRequest(604)", "Delete SimpleName: request(605)", "Delete CastExpression(606)", "Delete ParenthesizedExpression(607)", "Delete SimpleName: getMethod(608)", "Delete MethodInvocation(609)", "Delete Assignment: =(610)", "Delete ExpressionStatement(611)", "Delete Block(612)", "Delete SimpleName: RequestLine(613)", "Delete SimpleType: RequestLine(614)", "Delete SimpleName: requestLine(615)", "Delete SimpleName: request(616)", "Delete SimpleName: getRequestLine(617)", "Delete MethodInvocation(618)", "Delete VariableDeclarationFragment(619)", "Delete VariableDeclarationStatement(620)", "Delete SimpleName: version(621)", "Delete SimpleName: request(622)", "Delete SimpleName: getProtocolVersion(623)", "Delete MethodInvocation(624)", "Delete Assignment: =(625)", "Delete ExpressionStatement(626)", "Delete SimpleName: uri(627)", "Delete SimpleName: URI(628)", "Delete SimpleType: URI(629)", "Delete SimpleName: requestLine(630)", "Delete SimpleName: getUri(631)", "Delete MethodInvocation(632)", "Delete ClassInstanceCreation(633)", "Delete Assignment: =(634)", "Delete ExpressionStatement(635)", "Delete Block(636)", "Delete SimpleName: URISyntaxException(637)", "Delete SimpleType: URISyntaxException(638)", "Delete SimpleName: ex(639)", "Delete SingleVariableDeclaration(640)", "Delete SimpleName: ProtocolException(641)", "Delete SimpleType: ProtocolException(642)", "Delete StringLiteral: \"Invalid request URI: \"(643)", "Delete SimpleName: requestLine(644)", "Delete SimpleName: getUri(645)", "Delete MethodInvocation(646)", "Delete InfixExpression: +(647)", "Delete SimpleName: ex(648)", "Delete ClassInstanceCreation(649)", "Delete ThrowStatement(650)", "Delete Block(651)", "Delete CatchClause(652)", "Delete TryStatement(653)", "Delete SimpleName: method(654)", "Delete SimpleName: request(655)", "Delete SimpleName: getRequestLine(656)", "Delete MethodInvocation(657)", "Delete SimpleName: getMethod(658)", "Delete MethodInvocation(659)", "Delete Assignment: =(660)", "Delete ExpressionStatement(661)", "Delete Block(662)", "Delete IfStatement(663)", "Delete Block(690)"]}}, {"ProtocolExec_cluster": {"actions": [{"root": "INS IfStatement to Block at 1", "operations": ["INS Block to IfStatement at 1", "INS SimpleName: uri to InfixExpression: != at 0", "INS InfixExpression: != to IfStatement at 0", "INS IfStatement to Block at 1", "INS NullLiteral to InfixExpression: != at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 0", "MOV ExpressionStatement to Block at 1"]}]}}, {"ProtocolExec_diff": {"operations": ["Insert IfStatement(219) into Block(220) at 1", "Insert InfixExpression: !=(147) into IfStatement(219) at 0", "Insert Block(218) into IfStatement(219) at 1", "Insert SimpleName: uri(145) into InfixExpression: !=(147) at 0", "Insert NullLiteral(146) into InfixExpression: !=(147) at 1", "Move IfStatement(209) into Block(218) at 0", "Move ExpressionStatement(214) into Block(218) at 1"]}}, {"ResponseEntityWrapper_cluster": {"actions": [{"root": "INS Block to MethodDeclaration at 6", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS TryStatement to Block at 0", "INS SimpleName: cleanup to MethodInvocation at 0", "INS ExpressionStatement to Block at 0", "INS Block to TryStatement at 1", "INS Block to MethodDeclaration at 6"]}, {"root": "UPDATE from  encloded in a response message. to  enclosed in a response message.", "operations": ["UPD TextElement:  encloded in a response message. from  encloded in a response message. to  enclosed in a response message."]}, {"root": "MOVE from TryStatement", "operations": ["MOV Block to TryStatement at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: org.apache.http.util.EntityUtils"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: consume", "DEL ExpressionStatement", "DEL SimpleName: EntityUtils", "DEL ThisExpression", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleName: wrappedEntity"]}]}}, {"ResponseEntityWrapper_diff": {"operations": ["Insert Block(188) into MethodDeclaration(189) at 6", "Update TextElement:  encloded in a response message.(25) to  enclosed in a response message.", "Insert TryStatement(187) into Block(188) at 0", "Move Block(191) into TryStatement(187) at 0", "Insert Block(186) into TryStatement(187) at 1", "Insert ExpressionStatement(185) into Block(186) at 0", "Insert MethodInvocation(184) into ExpressionStatement(185) at 0", "Insert SimpleName: cleanup(183) into MethodInvocation(184) at 0", "Delete QualifiedName: org.apache.http.util.EntityUtils(20)", "Delete ImportDeclaration(21)", "Delete SimpleName: EntityUtils(101)", "Delete SimpleName: consume(102)", "Delete ThisExpression(103)", "Delete SimpleName: wrappedEntity(104)", "Delete FieldAccess(105)", "Delete MethodInvocation(106)", "Delete ExpressionStatement(107)"]}}], "commit_stats": [{"total_files": 11, "deleted_files": 1, "testing": "True", "maintenance": "False", "build": "False"}]}