{"application": "apache-tiles", "csha": "433468921b445774419660e5c16957b3b0e29937", "files": [{"CachingLocaleUrlDefinitionDAO_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 14", "MOV ImportDeclaration to CompilationUnit at 14", "MOV ImportDeclaration to CompilationUnit at 16"]}, {"root": "UPDATE from java.util.Set to org.apache.tiles.definition.pattern.PatternDefinitionResolver", "operations": ["UPD QualifiedName: java.util.Set from java.util.Set to org.apache.tiles.definition.pattern.PatternDefinitionResolver"]}, {"root": "UPDATE from org.apache.tiles.Attribute to org.apache.tiles.definition.pattern.PatternDefinitionResolverAware", "operations": ["UPD QualifiedName: org.apache.tiles.Attribute from org.apache.tiles.Attribute to org.apache.tiles.definition.pattern.PatternDefinitionResolverAware"]}, {"root": "UPDATE from org.apache.tiles.util.WildcardHelper to org.apache.tiles.definition.pattern.WildcardPatternDefinitionResolver", "operations": ["UPD QualifiedName: org.apache.tiles.util.WildcardHelper from org.apache.tiles.util.WildcardHelper to org.apache.tiles.definition.pattern.WildcardPatternDefinitionResolver"]}, {"root": "INS ParameterizedType: PatternDefinitionResolverAware<Locale> to TypeDeclaration: class at 5", "operations": ["INS SimpleType: Locale to ParameterizedType: PatternDefinitionResolverAware<Locale> at 1", "INS ParameterizedType: PatternDefinitionResolverAware<Locale> to TypeDeclaration: class at 5", "INS SimpleType: PatternDefinitionResolverAware to ParameterizedType: PatternDefinitionResolverAware<Locale> at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 13", "operations": ["INS Block to MethodDeclaration at 5", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS SimpleName: setPatternDefinitionResolver to MethodDeclaration at 3"]}, {"root": "UPDATE from Map<Locale,List<WildcardMapping>> to PatternDefinitionResolver<Locale>", "operations": ["UPD ParameterizedType: Map<Locale,List<WildcardMapping>> from Map<Locale,List<WildcardMapping>> to PatternDefinitionResolver<Locale>", "UPD ParameterizedType: Map.Entry<String,Definition> from Map.Entry<String,Definition> to PatternDefinitionResolver<Locale>"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV Modifier: protected to MethodDeclaration at 1", "MOV PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "UPDATE from protected to public", "operations": ["UPD Modifier: protected from protected to public"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 5", "MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 3", "operations": ["INS PrimitiveType: void to MethodDeclaration at 3"]}, {"root": "INS SimpleName: postDefinitionLoadOperations to MethodDeclaration at 4", "operations": ["INS SimpleName: postDefinitionLoadOperations to MethodDeclaration at 4"]}, {"root": "UPDATE from WildcardHelper to PatternDefinitionResolverAware", "operations": ["UPD SimpleName: WildcardHelper from WildcardHelper to PatternDefinitionResolverAware"]}, {"root": "MOVE from SimpleType: PatternDefinitionResolverAware", "operations": ["MOV SimpleName: WildcardHelper to SimpleType: PatternDefinitionResolverAware at 0"]}, {"root": "UPDATE from Definition to Locale", "operations": ["UPD SimpleName: Definition from Definition to Locale", "UPD SimpleType: Definition from Definition to Locale", "UPD SimpleName: WildcardHelper from WildcardHelper to Locale"]}, {"root": "MOVE from SimpleType: Locale", "operations": ["MOV SimpleName: WildcardHelper to SimpleType: Locale at 0"]}, {"root": "UPDATE from String to PatternDefinitionResolver", "operations": ["UPD SimpleName: String from String to PatternDefinitionResolver", "UPD SimpleType: Map from Map to PatternDefinitionResolver", "UPD SimpleName: Map from Map to PatternDefinitionResolver", "UPD SimpleType: String from String to PatternDefinitionResolver"]}, {"root": "UPDATE from nudef to definitionResolver", "operations": ["UPD SimpleName: nudef from nudef to definitionResolver", "UPD SimpleName: de from de to definitionResolver", "UPD SimpleName: resolveWildcardDefinition from resolveWildcardDefinition to definitionResolver", "UPD SimpleName: localePatternPaths from localePatternPaths to definitionResolver"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS ClassInstanceCreation to Assignment: = at 1", "INS ParameterizedType: WildcardPatternDefinitionResolver<Locale> to ClassInstanceCreation at 0", "INS SimpleType: WildcardPatternDefinitionResolver to ParameterizedType: WildcardPatternDefinitionResolver<Locale> at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: WildcardPatternDefinitionResolver to SimpleType: WildcardPatternDefinitionResolver at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: definitionResolver to Assignment: = at 0"]}, {"root": "INS TagElement to Javadoc at 0", "operations": ["INS TagElement to Javadoc at 0", "INS TagElement: @inheritDoc to TagElement at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleName: de to SingleVariableDeclaration at 1", "MOV ParameterizedType: Map.Entry<String,Definition> to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "UPDATE from Stores patterns depending on the locale they refer to. to Resolves definitions using patterns.", "operations": ["UPD TextElement: Stores patterns depending on the locale they refer to. from Stores patterns depending on the locale they refer to. to Resolves definitions using patterns."]}, {"root": "UPDATE from  2.1.0 to  2.2.0", "operations": ["UPD TextElement:  2.1.0 from  2.1.0 to  2.2.0"]}, {"root": "UPDATE from  2.1.0 to  ", "operations": ["UPD TextElement:  2.1.0 from  2.1.0 to  "]}, {"root": "MOVE from TagElement", "operations": ["MOV TextElement:  2.1.0 to TagElement at 1"]}, {"root": "INS FieldAccess to Assignment: = at 0", "operations": ["INS ThisExpression to FieldAccess at 0", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: definitionResolver to FieldAccess at 1"]}, {"root": "INS SimpleName: definitionResolver to Assignment: = at 1", "operations": ["INS SimpleName: definitionResolver to Assignment: = at 1"]}, {"root": "UPDATE from setExtends to storeDefinitionPatterns", "operations": ["UPD SimpleName: setExtends from setExtends to storeDefinitionPatterns"]}, {"root": "UPDATE from replace to localeDefsMap", "operations": ["UPD SimpleName: replace from replace to localeDefsMap"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: replace to MethodInvocation at 2"]}, {"root": "UPDATE from d to customizationKey", "operations": ["UPD SimpleName: d from d to customizationKey"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: d to MethodInvocation at 3"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0"]}, {"root": "MOVE from ParameterizedType: WildcardPatternDefinitionResolver<Locale>", "operations": ["MOV SimpleType: Locale to ParameterizedType: WildcardPatternDefinitionResolver<Locale> at 1"]}, {"root": "UPDATE from localePatternPaths to resolveDefinition", "operations": ["UPD SimpleName: localePatternPaths from localePatternPaths to resolveDefinition"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: get to MethodInvocation at 2", "MOV SimpleName: localePatternPaths to MethodInvocation at 1", "MOV SimpleName: customizationKey to MethodInvocation at 3"]}, {"root": "UPDATE from get to name", "operations": ["UPD SimpleName: get from get to name"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.ArrayList"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.util.List"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL FieldDeclaration", "DEL TextElement: An object that helps in resolving definitions with wildcards.", "DEL Modifier: protected", "DEL SimpleType: WildcardHelper", "DEL ClassInstanceCreation", "DEL SimpleName: wildcardHelper", "DEL SimpleType: WildcardHelper", "DEL TextElement:  2.1.0", "DEL TagElement", "DEL Javadoc", "DEL TagElement: @since", "DEL VariableDeclarationFragment"]}, {"root": "DEL ParameterizedType: List<WildcardMapping>", "operations": ["DEL SimpleName: List", "DEL SimpleType: WildcardMapping", "DEL SimpleName: WildcardMapping", "DEL SimpleType: List", "DEL ParameterizedType: List<WildcardMapping>"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: WildcardMapping", "DEL SimpleName: WildcardMapping", "DEL ParameterizedType: HashMap<Locale,List<WildcardMapping>>", "DEL ClassInstanceCreation", "DEL ParameterizedType: List<WildcardMapping>", "DEL SimpleName: HashMap", "DEL SimpleType: List", "DEL SimpleType: HashMap", "DEL SimpleName: List"]}, {"root": "DEL TagElement", "operations": ["DEL TextElement: Adds wildcard paths that are stored inside a normal definition map.", "DEL TagElement"]}, {"root": "DEL TagElement: @param", "operations": ["DEL TagElement: @param", "DEL SimpleName: paths", "DEL TextElement:  The list containing the currently stored paths."]}, {"root": "DEL TagElement: @param", "operations": ["DEL TagElement: @param", "DEL TextElement:  The definition map to parse.", "DEL SimpleName: defsMap"]}, {"root": "DEL TagElement: @since", "operations": ["DEL TagElement: @since"]}, {"root": "DEL SimpleType: Map.Entry", "operations": ["DEL QualifiedName: Map.Entry", "DEL SimpleType: Map.Entry"]}, {"root": "DEL SimpleName: d", "operations": ["DEL SimpleName: d"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: wm", "DEL SimpleName: replaceDefinition", "DEL MethodInvocation", "DEL SimpleName: getDefinition", "DEL MethodInvocation", "DEL SimpleName: vars", "DEL SimpleName: name"]}, {"root": "DEL InfixExpression: &&", "operations": ["DEL SimpleName: customizationKey", "DEL MethodInvocation", "DEL SimpleName: containsKey", "DEL InfixExpression: &&", "DEL SimpleName: localePatternPaths"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL SimpleName: name", "operations": ["DEL SimpleName: name"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: lpaths", "DEL SimpleName: put", "DEL ParameterizedType: ArrayList<WildcardMapping>", "DEL ExpressionStatement", "DEL SimpleName: postDefinitionLoadOperations", "DEL ClassInstanceCreation", "DEL SimpleName: customizationKey", "DEL SimpleType: List", "DEL VariableDeclarationStatement", "DEL SimpleName: lpaths", "DEL SimpleType: WildcardMapping", "DEL Block", "DEL InfixExpression: ==", "DEL ExpressionStatement", "DEL SimpleName: WildcardMapping", "DEL VariableDeclarationFragment", "DEL SimpleName: localePatternPaths", "DEL SimpleName: addWildcardPaths", "DEL Assignment: =", "DEL ParameterizedType: List<WildcardMapping>", "DEL SimpleName: get", "DEL SimpleType: WildcardMapping", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: customizationKey", "DEL SimpleName: lpaths", "DEL SimpleName: ArrayList", "DEL SimpleType: ArrayList", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: lpaths", "DEL MethodInvocation", "DEL SimpleName: List", "DEL Block", "DEL PrimitiveType: void", "DEL SimpleName: lpaths", "DEL SimpleName: localeDefsMap", "DEL Modifier: protected", "DEL SimpleName: WildcardMapping", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: localePatternPaths"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: List", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: defsMap", "DEL SimpleName: getKey", "DEL SimpleName: paths", "DEL SimpleName: indexOf", "DEL SingleVariableDeclaration", "DEL SimpleType: Map", "DEL SimpleType: WildcardMapping", "DEL SimpleType: List", "DEL SimpleName: de", "DEL Block", "DEL SimpleName: WildcardMapping", "DEL SimpleName: Definition", "DEL MethodDeclaration", "DEL PrefixExpression: -", "DEL ParameterizedType: Map<String,Definition>", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL SimpleName: paths", "DEL SimpleType: String", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: entrySet", "DEL SimpleName: addWildcardPaths", "DEL SimpleName: de", "DEL Block", "DEL NumberLiteral: 1", "DEL IfStatement", "DEL InfixExpression: !=", "DEL ClassInstanceCreation", "DEL SimpleName: WildcardMapping", "DEL MethodInvocation", "DEL MethodInvocation", "DEL ParameterizedType: List<WildcardMapping>", "DEL SimpleType: Definition", "DEL SimpleName: de", "DEL SimpleName: add", "DEL Block", "DEL SimpleType: WildcardMapping", "DEL SimpleName: Map", "DEL SimpleName: String", "DEL SimpleName: defsMap", "DEL SimpleName: getKey", "DEL CharacterLiteral: '*'", "DEL SimpleName: getValue", "DEL MethodInvocation"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TagElement", "DEL TextElement:  The list containing the currently stored paths.", "DEL SimpleName: String", "DEL SimpleName: Integer", "DEL SimpleType: String", "DEL Block", "DEL NullLiteral", "DEL SimpleName: WildcardMapping", "DEL SingleVariableDeclaration", "DEL SimpleName: Integer", "DEL VariableDeclarationFragment", "DEL BreakStatement", "DEL EnhancedForStatement", "DEL Block", "DEL SimpleType: WildcardMapping", "DEL SimpleType: HashMap", "DEL IfStatement", "DEL SingleVariableDeclaration", "DEL ParameterizedType: Map<Integer,String>", "DEL TagElement: @param", "DEL SimpleType: String", "DEL SimpleName: match", "DEL SimpleName: wm", "DEL SimpleName: getPattern", "DEL SimpleType: String", "DEL TagElement: @since", "DEL TextElement:  The name of the definition to resolve.", "DEL SimpleType: Definition", "DEL SimpleName: wildcardHelper", "DEL SimpleName: Definition", "DEL ParameterizedType: HashMap<Integer,String>", "DEL SimpleType: List", "DEL SimpleType: Map", "DEL SimpleType: Integer", "DEL VariableDeclarationStatement", "DEL Modifier: protected", "DEL Block", "DEL SingleVariableDeclaration", "DEL ClassInstanceCreation", "DEL TextElement:  A definition, if found, or <code>null</code> if not.", "DEL SimpleName: HashMap", "DEL SimpleType: WildcardMapping", "DEL SimpleName: name", "DEL SimpleName: name", "DEL SimpleName: Definition", "DEL MethodDeclaration", "DEL SimpleName: vars", "DEL SimpleName: WildcardMapping", "DEL SimpleName: name", "DEL SimpleName: wm", "DEL SimpleName: String", "DEL SimpleName: Map", "DEL TagElement: @param", "DEL ParameterizedType: List<WildcardMapping>", "DEL VariableDeclarationFragment", "DEL SimpleName: List", "DEL SimpleName: d", "DEL TagElement: @return", "DEL MethodInvocation", "DEL Javadoc", "DEL SimpleName: paths", "DEL MethodInvocation", "DEL TextElement:  2.1.0", "DEL SimpleType: Integer", "DEL ReturnStatement", "DEL SimpleName: paths", "DEL SimpleName: String", "DEL TextElement: Try to resolve a wildcard definition.", "DEL SimpleName: resolveWildcardDefinition", "DEL SimpleName: paths", "DEL SimpleName: vars", "DEL SimpleType: Definition", "DEL VariableDeclarationStatement", "DEL SimpleName: d"]}, {"root": "DEL Javadoc", "operations": ["DEL SimpleName: d", "DEL SimpleName: name", "DEL TextElement:  The variables to be substituted.", "DEL Javadoc", "DEL TextElement:  The definition to replace.", "DEL TextElement:  The definition that can be rendered.", "DEL TextElement:  2.1.0", "DEL TagElement", "DEL TextElement: Creates a definition given its representation with wildcards.", "DEL TagElement: @param", "DEL SimpleName: vars", "DEL TagElement: @param", "DEL TagElement: @since", "DEL TagElement: @return", "DEL TextElement:  The name of the definition to be created.", "DEL TagElement: @param"]}, {"root": "DEL SimpleType: Definition", "operations": ["DEL SimpleType: Definition", "DEL SimpleName: Definition"]}, {"root": "DEL SimpleName: replaceDefinition", "operations": ["DEL SimpleName: replaceDefinition"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: d", "DEL SimpleType: Definition", "DEL SimpleName: Definition", "DEL SingleVariableDeclaration"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: String", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL SimpleName: name"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: Map", "DEL SimpleName: Map", "DEL ParameterizedType: Map<Integer,String>", "DEL SimpleName: String", "DEL SimpleType: String", "DEL SimpleName: Integer", "DEL SimpleName: vars", "DEL SingleVariableDeclaration", "DEL SimpleType: Integer"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: Definition", "DEL SimpleName: nudef", "DEL SimpleType: Definition", "DEL SimpleType: Definition", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: Definition", "DEL ClassInstanceCreation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: getExtends", "DEL SimpleName: vars", "DEL MethodInvocation", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: nudef", "DEL SimpleName: name", "DEL SimpleName: setName", "DEL ExpressionStatement", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: getPreparer", "DEL MethodInvocation", "DEL SimpleName: replace", "DEL SimpleName: nudef", "DEL SimpleName: d", "DEL ExpressionStatement", "DEL SimpleName: setPreparer", "DEL SimpleName: vars"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: nudef", "DEL MethodInvocation", "DEL SimpleName: setTemplateAttribute", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: replaceVarsInAttribute", "DEL SimpleName: d", "DEL SimpleName: getTemplateAttribute", "DEL ExpressionStatement", "DEL SimpleName: vars"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL SimpleName: String", "DEL MethodInvocation", "DEL ParameterizedType: Set<String>", "DEL SimpleName: d", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: localAttributeNames", "DEL SimpleType: String", "DEL SimpleName: Set", "DEL SimpleType: Set", "DEL SimpleName: getLocalAttributeNames"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: vars", "DEL EnhancedForStatement", "DEL InfixExpression: &&", "DEL VariableDeclarationFragment", "DEL SimpleName: attr", "DEL NullLiteral", "DEL Block", "DEL SimpleType: String", "DEL SimpleName: attributeName", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: attr", "DEL SimpleName: localAttributeNames", "DEL SimpleName: getLocalAttribute", "DEL IfStatement", "DEL SimpleName: vars", "DEL SimpleName: Attribute", "DEL MethodInvocation", "DEL SimpleName: isEmpty", "DEL SimpleType: Attribute", "DEL MethodInvocation", "DEL PrefixExpression: !", "DEL VariableDeclarationFragment", "DEL InfixExpression: !=", "DEL SimpleName: d", "DEL MethodInvocation", "DEL SimpleName: nuattr", "DEL SimpleName: localAttributeNames", "DEL Block", "DEL SimpleName: Attribute", "DEL SimpleName: replaceVarsInAttribute", "DEL SimpleName: String", "DEL SimpleName: nudef", "DEL SimpleName: attributeName", "DEL SimpleType: Attribute", "DEL ExpressionStatement", "DEL SimpleName: nuattr", "DEL SimpleName: localAttributeNames", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: putAttribute", "DEL SimpleName: replace", "DEL SimpleName: attributeName"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: nudef", "DEL ReturnStatement"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL VariableDeclarationStatement", "DEL SimpleName: value", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Block", "DEL SimpleName: nuattr", "DEL SingleVariableDeclaration", "DEL SimpleType: Attribute", "DEL SimpleName: setRole", "DEL VariableDeclarationFragment", "DEL SimpleName: value", "DEL SimpleName: getRenderer", "DEL SimpleName: vars", "DEL TagElement: @param", "DEL TagElement: @param", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleName: nuattr", "DEL MethodInvocation", "DEL SimpleName: nuattr", "DEL SimpleName: setValue", "DEL SimpleType: String", "DEL Block", "DEL SimpleName: replace", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: Attribute", "DEL SimpleName: String", "DEL MethodInvocation", "DEL SimpleType: String", "DEL SimpleType: String", "DEL Modifier: private", "DEL MethodInvocation", "DEL SimpleType: Map", "DEL SimpleName: value", "DEL SimpleType: Attribute", "DEL SimpleName: Integer", "DEL SimpleName: String", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: getExpression", "DEL MethodInvocation", "DEL TextElement:  A new instance of an attribute, whose properties have been", "DEL SimpleName: vars", "DEL SimpleName: Object", "DEL SimpleName: getValue", "DEL Javadoc", "DEL SimpleName: attr", "DEL MethodInvocation", "DEL SimpleName: replace", "DEL SimpleName: nuattr", "DEL SimpleName: value", "DEL CastExpression", "DEL ExpressionStatement", "DEL SimpleName: vars", "DEL SimpleName: attr", "DEL TextElement: Replaces variables into an attribute.", "DEL SimpleName: String", "DEL SimpleName: setRenderer", "DEL SimpleType: Attribute", "DEL ReturnStatement", "DEL SimpleType: Attribute", "DEL SimpleName: nuattr", "DEL SimpleName: attr", "DEL SimpleName: vars", "DEL SimpleType: Integer", "DEL TextElement:  The variables to replace.", "DEL SimpleName: getRole", "DEL SimpleName: Attribute", "DEL Assignment: =", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: attr", "DEL InstanceofExpression", "DEL TagElement: @return", "DEL SimpleName: Map", "DEL SimpleName: attr", "DEL TextElement: for variables.", "DEL ParameterizedType: Map<Integer,String>", "DEL SimpleName: nuattr", "DEL TagElement", "DEL SingleVariableDeclaration", "DEL SimpleName: Attribute", "DEL TextElement: replaced with variables' values.", "DEL VariableDeclarationStatement", "DEL TextElement:  The attribute to be used as a basis, containing placeholders", "DEL SimpleName: attr", "DEL SimpleName: Attribute", "DEL SimpleName: value", "DEL SimpleType: Object", "DEL SimpleName: setExpression", "DEL VariableDeclarationFragment", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: replaceVarsInAttribute"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: st", "DEL SimpleName: Map", "DEL MethodDeclaration", "DEL SimpleType: Integer", "DEL SimpleName: String", "DEL SimpleName: vars", "DEL Block", "DEL SimpleType: String", "DEL TagElement: @param", "DEL ReturnStatement", "DEL SimpleName: Integer", "DEL TagElement: @since", "DEL SimpleName: vars", "DEL SingleVariableDeclaration", "DEL Modifier: protected", "DEL TagElement", "DEL SimpleName: vars", "DEL TagElement: @param", "DEL SimpleName: st", "DEL TextElement:  The variables.", "DEL ParameterizedType: Map<Integer,String>", "DEL SimpleType: String", "DEL SimpleName: convertParam", "DEL TagElement: @return", "DEL SimpleName: st", "DEL TextElement:  2.1.0", "DEL SimpleName: String", "DEL QualifiedName: org.apache.tiles.util.WildcardHelper", "DEL SimpleType: Map", "DEL SimpleName: String", "DEL SingleVariableDeclaration", "DEL TextElement:  The replaced string.", "DEL SimpleName: replace", "DEL SimpleType: String", "DEL TextElement:  The string to replace.", "DEL MethodInvocation", "DEL TextElement: Replaces a string with placeholders using values of a variable map.", "DEL Javadoc"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL TagElement", "DEL SimpleName: definition", "DEL SimpleType: Definition", "DEL PrimitiveType: int", "DEL TextElement: The compiled pattern.", "DEL MethodDeclaration", "DEL Javadoc", "DEL VariableDeclarationFragment", "DEL TextElement: Returns the definition.", "DEL Javadoc", "DEL SimpleName: pattern", "DEL ReturnStatement", "DEL TextElement:  2.1.0", "DEL Javadoc", "DEL TextElement: Returns the compiled pattern.", "DEL SimpleName: getPattern", "DEL SimpleName: Definition", "DEL FieldAccess", "DEL SimpleName: definition", "DEL SimpleName: definition", "DEL TextElement: The definition that matches the pattern.", "DEL TextElement:  The pattern.", "DEL SimpleType: Definition", "DEL MethodDeclaration", "DEL SimpleName: wildcardHelper", "DEL TextElement:  The compiled pattern.", "DEL SimpleName: pattern", "DEL TagElement: @since", "DEL TagElement", "DEL Dimension", "DEL TagElement", "DEL MethodDeclaration", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: definition", "DEL TagElement", "DEL VariableDeclarationFragment", "DEL SimpleName: pattern", "DEL TextElement:  A definition that matches the pattern.", "DEL Assignment: =", "DEL TextElement:  The definition.", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL SimpleName: String", "DEL SimpleName: Definition", "DEL TextElement:  2.1.0", "DEL SingleVariableDeclaration", "DEL TextElement: Constructor.", "DEL SimpleName: WildcardMapping", "DEL TextElement:  2.1.0", "DEL ReturnStatement", "DEL ThisExpression", "DEL SimpleName: Definition", "DEL Modifier: private", "DEL TagElement: @param", "DEL Javadoc", "DEL SimpleType: Definition", "DEL SimpleName: WildcardMapping", "DEL TextElement: Maps a pattern with a definition in cache.", "DEL Modifier: public", "DEL Modifier: protected", "DEL SimpleName: definition", "DEL TagElement: @param", "DEL TagElement", "DEL SimpleName: pattern", "DEL SimpleName: definition", "DEL ArrayType: int[]", "DEL Dimension", "DEL TypeDeclaration: class", "DEL TagElement: @return", "DEL MethodInvocation", "DEL FieldDeclaration", "DEL ArrayType: int[]", "DEL TagElement: @return", "DEL Modifier: public", "DEL ExpressionStatement", "DEL FieldAccess", "DEL TextElement:  2.1.0", "DEL TagElement: @since", "DEL SimpleName: getDefinition", "DEL ThisExpression", "DEL Block", "DEL SimpleName: compilePattern", "DEL FieldDeclaration", "DEL SimpleName: pattern", "DEL TagElement", "DEL PrimitiveType: int", "DEL SimpleName: pattern", "DEL Block", "DEL Assignment: =", "DEL SimpleType: String", "DEL Modifier: public", "DEL Javadoc", "DEL Modifier: private", "DEL TagElement: @since", "DEL TagElement: @since"]}]}}, {"CachingLocaleUrlDefinitionDAO_diff": {"operations": ["Move ImportDeclaration(17) into CompilationUnit(793) at 14", "Move ImportDeclaration(19) into CompilationUnit(793) at 14", "Move ImportDeclaration(29) into CompilationUnit(793) at 16", "Update QualifiedName: java.util.Set(16) to org.apache.tiles.definition.pattern.PatternDefinitionResolver", "Update QualifiedName: org.apache.tiles.Attribute(18) to org.apache.tiles.definition.pattern.PatternDefinitionResolverAware", "Update QualifiedName: org.apache.tiles.util.WildcardHelper(30) to org.apache.tiles.definition.pattern.WildcardPatternDefinitionResolver", "Insert ParameterizedType: PatternDefinitionResolverAware<Locale>(52) into TypeDeclaration: class(792) at 5", "Insert MethodDeclaration(210) into TypeDeclaration: class(792) at 12", "Insert SimpleType: PatternDefinitionResolverAware(49) into ParameterizedType: PatternDefinitionResolverAware<Locale>(52) at 0", "Insert SimpleType: Locale(51) into ParameterizedType: PatternDefinitionResolverAware<Locale>(52) at 1", "Update ParameterizedType: Map<Locale,List<WildcardMapping>>(129) to PatternDefinitionResolver<Locale>", "Move Javadoc(838) into MethodDeclaration(210) at 0", "Update Modifier: protected(839) to public", "Move Modifier: protected(839) into MethodDeclaration(210) at 1", "Move PrimitiveType: void(840) into MethodDeclaration(210) at 2", "Insert SimpleName: setPatternDefinitionResolver(195) into MethodDeclaration(210) at 3", "Insert SingleVariableDeclaration(202) into MethodDeclaration(210) at 4", "Insert Block(209) into MethodDeclaration(210) at 5", "Move Javadoc(772) into MethodDeclaration(791) at 0", "Insert PrimitiveType: void(769) into MethodDeclaration(791) at 2", "Insert SimpleName: postDefinitionLoadOperations(770) into MethodDeclaration(791) at 3", "Move SingleVariableDeclaration(784) into MethodDeclaration(791) at 5", "Move SingleVariableDeclaration(788) into MethodDeclaration(791) at 6", "Update SimpleName: WildcardHelper(106) to PatternDefinitionResolverAware", "Move SimpleName: WildcardHelper(106) into SimpleType: PatternDefinitionResolverAware(49) at 0", "Update SimpleName: WildcardHelper(109) to Locale", "Move SimpleName: WildcardHelper(109) into SimpleType: Locale(51) at 0", "Update SimpleType: Map(121) to PatternDefinitionResolver", "Update SimpleName: localePatternPaths(130) to definitionResolver", "Insert ExpressionStatement(186) into Block(187) at 3", "Insert TagElement(191) into Javadoc(192) at 0", "Update ParameterizedType: Map.Entry<String,Definition>(864) to PatternDefinitionResolver<Locale>", "Move ParameterizedType: Map.Entry<String,Definition>(864) into SingleVariableDeclaration(202) at 0", "Update SimpleName: de(865) to definitionResolver", "Move SimpleName: de(865) into SingleVariableDeclaration(202) at 1", "Move ExpressionStatement(972) into Block(209) at 0", "Update TextElement: Stores patterns depending on the locale they refer to.(114) to Resolves definitions using patterns.", "Update TextElement:  2.1.0(116) to  2.2.0", "Update SimpleName: Map(120) to PatternDefinitionResolver", "Insert Assignment: =(185) into ExpressionStatement(186) at 0", "Insert TagElement: @inheritDoc(189) into TagElement(191) at 0", "Update TextElement:  2.1.0(836) to  ", "Move TextElement:  2.1.0(836) into TagElement(191) at 1", "Update SimpleType: String(861) to PatternDefinitionResolver", "Update SimpleType: Definition(863) to Locale", "Insert SimpleName: definitionResolver(178) into Assignment: =(185) at 0", "Insert ClassInstanceCreation(184) into Assignment: =(185) at 1", "Update SimpleName: String(860) to PatternDefinitionResolver", "Update SimpleName: Definition(862) to Locale", "Insert FieldAccess(205) into Assignment: =(207) at 0", "Insert SimpleName: definitionResolver(206) into Assignment: =(207) at 1", "Update SimpleName: nudef(1027) to definitionResolver", "Update SimpleName: setExtends(1028) to storeDefinitionPatterns", "Update SimpleName: replace(1029) to localeDefsMap", "Move SimpleName: replace(1029) into MethodInvocation(788) at 2", "Update SimpleName: d(1030) to customizationKey", "Move SimpleName: d(1030) into MethodInvocation(788) at 3", "Insert ParameterizedType: WildcardPatternDefinitionResolver<Locale>(183) into ClassInstanceCreation(184) at 0", "Insert ThisExpression(203) into FieldAccess(205) at 0", "Insert SimpleName: definitionResolver(204) into FieldAccess(205) at 1", "Move InfixExpression: ==(265) into IfStatement(305) at 0", "Insert SimpleType: WildcardPatternDefinitionResolver(180) into ParameterizedType: WildcardPatternDefinitionResolver<Locale>(183) at 0", "Move SimpleType: Locale(134) into ParameterizedType: WildcardPatternDefinitionResolver<Locale>(183) at 1", "Insert SimpleName: WildcardPatternDefinitionResolver(179) into SimpleType: WildcardPatternDefinitionResolver(180) at 0", "Update SimpleName: resolveWildcardDefinition(272) to definitionResolver", "Update SimpleName: localePatternPaths(273) to resolveDefinition", "Move SimpleName: localePatternPaths(273) into MethodInvocation(273) at 1", "Update SimpleName: get(274) to name", "Move SimpleName: get(274) into MethodInvocation(273) at 2", "Move SimpleName: customizationKey(275) into MethodInvocation(273) at 3", "Delete QualifiedName: java.util.ArrayList(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: java.util.List(10)", "Delete ImportDeclaration(11)", "Delete TextElement: An object that helps in resolving definitions with wildcards.(100)", "Delete TagElement(101)", "Delete TextElement:  2.1.0(102)", "Delete TagElement: @since(103)", "Delete Javadoc(104)", "Delete Modifier: protected(105)", "Delete SimpleType: WildcardHelper(107)", "Delete SimpleName: wildcardHelper(108)", "Delete SimpleType: WildcardHelper(110)", "Delete ClassInstanceCreation(111)", "Delete VariableDeclarationFragment(112)", "Delete FieldDeclaration(113)", "Delete SimpleName: List(124)", "Delete SimpleType: List(125)", "Delete SimpleName: WildcardMapping(126)", "Delete SimpleType: WildcardMapping(127)", "Delete ParameterizedType: List<WildcardMapping>(128)", "Delete SimpleName: HashMap(131)", "Delete SimpleType: HashMap(132)", "Delete SimpleName: List(135)", "Delete SimpleType: List(136)", "Delete SimpleName: WildcardMapping(137)", "Delete SimpleType: WildcardMapping(138)", "Delete ParameterizedType: List<WildcardMapping>(139)", "Delete ParameterizedType: HashMap<Locale,List<WildcardMapping>>(140)", "Delete ClassInstanceCreation(141)", "Delete TextElement: Adds wildcard paths that are stored inside a normal definition map.(828)", "Delete TagElement(829)", "Delete SimpleName: paths(830)", "Delete TextElement:  The list containing the currently stored paths.(831)", "Delete TagElement: @param(832)", "Delete SimpleName: defsMap(833)", "Delete TextElement:  The definition map to parse.(834)", "Delete TagElement: @param(835)", "Delete TagElement: @since(837)", "Delete QualifiedName: Map.Entry(858)", "Delete SimpleType: Map.Entry(859)", "Delete SimpleName: d(963)", "Delete SimpleName: replaceDefinition(964)", "Delete SimpleName: wm(965)", "Delete SimpleName: getDefinition(966)", "Delete MethodInvocation(967)", "Delete SimpleName: name(968)", "Delete SimpleName: vars(969)", "Delete MethodInvocation(970)", "Delete SimpleName: localePatternPaths(266)", "Delete SimpleName: containsKey(267)", "Delete SimpleName: customizationKey(268)", "Delete MethodInvocation(269)", "Delete InfixExpression: &&(270)", "Delete MethodInvocation(276)", "Delete SimpleName: name(277)", "Delete Modifier: protected(773)", "Delete PrimitiveType: void(774)", "Delete SimpleName: postDefinitionLoadOperations(775)", "Delete SimpleName: List(789)", "Delete SimpleType: List(790)", "Delete SimpleName: WildcardMapping(791)", "Delete SimpleType: WildcardMapping(792)", "Delete ParameterizedType: List<WildcardMapping>(793)", "Delete SimpleName: lpaths(794)", "Delete SimpleName: localePatternPaths(795)", "Delete SimpleName: get(796)", "Delete SimpleName: customizationKey(797)", "Delete MethodInvocation(798)", "Delete VariableDeclarationFragment(799)", "Delete VariableDeclarationStatement(800)", "Delete SimpleName: lpaths(801)", "Delete NullLiteral(802)", "Delete InfixExpression: ==(803)", "Delete SimpleName: lpaths(804)", "Delete SimpleName: ArrayList(805)", "Delete SimpleType: ArrayList(806)", "Delete SimpleName: WildcardMapping(807)", "Delete SimpleType: WildcardMapping(808)", "Delete ParameterizedType: ArrayList<WildcardMapping>(809)", "Delete ClassInstanceCreation(810)", "Delete Assignment: =(811)", "Delete ExpressionStatement(812)", "Delete SimpleName: localePatternPaths(813)", "Delete SimpleName: put(814)", "Delete SimpleName: customizationKey(815)", "Delete SimpleName: lpaths(816)", "Delete MethodInvocation(817)", "Delete ExpressionStatement(818)", "Delete Block(819)", "Delete IfStatement(820)", "Delete SimpleName: addWildcardPaths(821)", "Delete SimpleName: lpaths(822)", "Delete SimpleName: localeDefsMap(823)", "Delete MethodInvocation(824)", "Delete ExpressionStatement(825)", "Delete Block(826)", "Delete MethodDeclaration(827)", "Delete SimpleName: addWildcardPaths(841)", "Delete SimpleName: List(842)", "Delete SimpleType: List(843)", "Delete SimpleName: WildcardMapping(844)", "Delete SimpleType: WildcardMapping(845)", "Delete ParameterizedType: List<WildcardMapping>(846)", "Delete SimpleName: paths(847)", "Delete SingleVariableDeclaration(848)", "Delete SimpleName: Map(849)", "Delete SimpleType: Map(850)", "Delete SimpleName: String(851)", "Delete SimpleType: String(852)", "Delete SimpleName: Definition(853)", "Delete SimpleType: Definition(854)", "Delete ParameterizedType: Map<String,Definition>(855)", "Delete SimpleName: defsMap(856)", "Delete SingleVariableDeclaration(857)", "Delete SingleVariableDeclaration(866)", "Delete SimpleName: defsMap(867)", "Delete SimpleName: entrySet(868)", "Delete MethodInvocation(869)", "Delete SimpleName: de(870)", "Delete SimpleName: getKey(871)", "Delete MethodInvocation(872)", "Delete SimpleName: indexOf(873)", "Delete CharacterLiteral: '*'(874)", "Delete MethodInvocation(875)", "Delete NumberLiteral: 1(876)", "Delete PrefixExpression: -(877)", "Delete InfixExpression: !=(878)", "Delete SimpleName: paths(879)", "Delete SimpleName: add(880)", "Delete SimpleName: WildcardMapping(881)", "Delete SimpleType: WildcardMapping(882)", "Delete SimpleName: de(883)", "Delete SimpleName: getKey(884)", "Delete MethodInvocation(885)", "Delete SimpleName: de(886)", "Delete SimpleName: getValue(887)", "Delete MethodInvocation(888)", "Delete ClassInstanceCreation(889)", "Delete MethodInvocation(890)", "Delete ExpressionStatement(891)", "Delete Block(892)", "Delete IfStatement(893)", "Delete Block(894)", "Delete EnhancedForStatement(895)", "Delete Block(896)", "Delete MethodDeclaration(897)", "Delete TextElement: Try to resolve a wildcard definition.(898)", "Delete TagElement(899)", "Delete SimpleName: paths(900)", "Delete TextElement:  The list containing the currently stored paths.(901)", "Delete TagElement: @param(902)", "Delete SimpleName: name(903)", "Delete TextElement:  The name of the definition to resolve.(904)", "Delete TagElement: @param(905)", "Delete TextElement:  A definition, if found, or <code>null</code> if not.(906)", "Delete TagElement: @return(907)", "Delete TextElement:  2.1.0(908)", "Delete TagElement: @since(909)", "Delete Javadoc(910)", "Delete Modifier: protected(911)", "Delete SimpleName: Definition(912)", "Delete SimpleType: Definition(913)", "Delete SimpleName: resolveWildcardDefinition(914)", "Delete SimpleName: List(915)", "Delete SimpleType: List(916)", "Delete SimpleName: WildcardMapping(917)", "Delete SimpleType: WildcardMapping(918)", "Delete ParameterizedType: List<WildcardMapping>(919)", "Delete SimpleName: paths(920)", "Delete SingleVariableDeclaration(921)", "Delete SimpleName: String(922)", "Delete SimpleType: String(923)", "Delete SimpleName: name(924)", "Delete SingleVariableDeclaration(925)", "Delete SimpleName: Map(926)", "Delete SimpleType: Map(927)", "Delete SimpleName: Integer(928)", "Delete SimpleType: Integer(929)", "Delete SimpleName: String(930)", "Delete SimpleType: String(931)", "Delete ParameterizedType: Map<Integer,String>(932)", "Delete SimpleName: vars(933)", "Delete SimpleName: HashMap(934)", "Delete SimpleType: HashMap(935)", "Delete SimpleName: Integer(936)", "Delete SimpleType: Integer(937)", "Delete SimpleName: String(938)", "Delete SimpleType: String(939)", "Delete ParameterizedType: HashMap<Integer,String>(940)", "Delete ClassInstanceCreation(941)", "Delete VariableDeclarationFragment(942)", "Delete VariableDeclarationStatement(943)", "Delete SimpleName: Definition(944)", "Delete SimpleType: Definition(945)", "Delete SimpleName: d(946)", "Delete NullLiteral(947)", "Delete VariableDeclarationFragment(948)", "Delete VariableDeclarationStatement(949)", "Delete SimpleName: WildcardMapping(950)", "Delete SimpleType: WildcardMapping(951)", "Delete SimpleName: wm(952)", "Delete SingleVariableDeclaration(953)", "Delete SimpleName: paths(954)", "Delete SimpleName: wildcardHelper(955)", "Delete SimpleName: match(956)", "Delete SimpleName: vars(957)", "Delete SimpleName: name(958)", "Delete SimpleName: wm(959)", "Delete SimpleName: getPattern(960)", "Delete MethodInvocation(961)", "Delete MethodInvocation(962)", "Delete BreakStatement(973)", "Delete Block(974)", "Delete IfStatement(975)", "Delete Block(976)", "Delete EnhancedForStatement(977)", "Delete SimpleName: d(978)", "Delete ReturnStatement(979)", "Delete Block(980)", "Delete MethodDeclaration(981)", "Delete TextElement: Creates a definition given its representation with wildcards.(982)", "Delete TagElement(983)", "Delete SimpleName: d(984)", "Delete TextElement:  The definition to replace.(985)", "Delete TagElement: @param(986)", "Delete SimpleName: name(987)", "Delete TextElement:  The name of the definition to be created.(988)", "Delete TagElement: @param(989)", "Delete SimpleName: vars(990)", "Delete TextElement:  The variables to be substituted.(991)", "Delete TagElement: @param(992)", "Delete TextElement:  The definition that can be rendered.(993)", "Delete TagElement: @return(994)", "Delete TextElement:  2.1.0(995)", "Delete TagElement: @since(996)", "Delete Javadoc(997)", "Delete SimpleName: Definition(999)", "Delete SimpleType: Definition(1000)", "Delete SimpleName: replaceDefinition(1001)", "Delete SimpleName: Definition(1002)", "Delete SimpleType: Definition(1003)", "Delete SimpleName: d(1004)", "Delete SingleVariableDeclaration(1005)", "Delete SimpleName: String(1006)", "Delete SimpleType: String(1007)", "Delete SimpleName: name(1008)", "Delete SingleVariableDeclaration(1009)", "Delete SimpleName: Map(1010)", "Delete SimpleType: Map(1011)", "Delete SimpleName: Integer(1012)", "Delete SimpleType: Integer(1013)", "Delete SimpleName: String(1014)", "Delete SimpleType: String(1015)", "Delete ParameterizedType: Map<Integer,String>(1016)", "Delete SimpleName: vars(1017)", "Delete SingleVariableDeclaration(1018)", "Delete SimpleName: Definition(1019)", "Delete SimpleType: Definition(1020)", "Delete SimpleName: nudef(1021)", "Delete SimpleName: Definition(1022)", "Delete SimpleType: Definition(1023)", "Delete ClassInstanceCreation(1024)", "Delete VariableDeclarationFragment(1025)", "Delete VariableDeclarationStatement(1026)", "Delete SimpleName: getExtends(1031)", "Delete MethodInvocation(1032)", "Delete SimpleName: vars(1033)", "Delete MethodInvocation(1034)", "Delete SimpleName: nudef(1037)", "Delete SimpleName: setName(1038)", "Delete SimpleName: name(1039)", "Delete MethodInvocation(1040)", "Delete ExpressionStatement(1041)", "Delete SimpleName: nudef(1042)", "Delete SimpleName: setPreparer(1043)", "Delete SimpleName: replace(1044)", "Delete SimpleName: d(1045)", "Delete SimpleName: getPreparer(1046)", "Delete MethodInvocation(1047)", "Delete SimpleName: vars(1048)", "Delete MethodInvocation(1049)", "Delete MethodInvocation(1050)", "Delete ExpressionStatement(1051)", "Delete SimpleName: nudef(1052)", "Delete SimpleName: setTemplateAttribute(1053)", "Delete SimpleName: replaceVarsInAttribute(1054)", "Delete SimpleName: d(1055)", "Delete SimpleName: getTemplateAttribute(1056)", "Delete MethodInvocation(1057)", "Delete SimpleName: vars(1058)", "Delete MethodInvocation(1059)", "Delete MethodInvocation(1060)", "Delete ExpressionStatement(1061)", "Delete SimpleName: Set(1062)", "Delete SimpleType: Set(1063)", "Delete SimpleName: String(1064)", "Delete SimpleType: String(1065)", "Delete ParameterizedType: Set<String>(1066)", "Delete SimpleName: localAttributeNames(1067)", "Delete SimpleName: d(1068)", "Delete SimpleName: getLocalAttributeNames(1069)", "Delete MethodInvocation(1070)", "Delete VariableDeclarationFragment(1071)", "Delete VariableDeclarationStatement(1072)", "Delete SimpleName: localAttributeNames(1073)", "Delete NullLiteral(1074)", "Delete InfixExpression: !=(1075)", "Delete SimpleName: localAttributeNames(1076)", "Delete SimpleName: isEmpty(1077)", "Delete MethodInvocation(1078)", "Delete PrefixExpression: !(1079)", "Delete InfixExpression: &&(1080)", "Delete SimpleName: String(1081)", "Delete SimpleType: String(1082)", "Delete SimpleName: attributeName(1083)", "Delete SingleVariableDeclaration(1084)", "Delete SimpleName: localAttributeNames(1085)", "Delete SimpleName: Attribute(1086)", "Delete SimpleType: Attribute(1087)", "Delete SimpleName: attr(1088)", "Delete SimpleName: d(1089)", "Delete SimpleName: getLocalAttribute(1090)", "Delete SimpleName: attributeName(1091)", "Delete MethodInvocation(1092)", "Delete VariableDeclarationFragment(1093)", "Delete VariableDeclarationStatement(1094)", "Delete SimpleName: Attribute(1095)", "Delete SimpleType: Attribute(1096)", "Delete SimpleName: nuattr(1097)", "Delete SimpleName: replaceVarsInAttribute(1098)", "Delete SimpleName: attr(1099)", "Delete SimpleName: vars(1100)", "Delete MethodInvocation(1101)", "Delete VariableDeclarationFragment(1102)", "Delete VariableDeclarationStatement(1103)", "Delete SimpleName: nudef(1104)", "Delete SimpleName: putAttribute(1105)", "Delete SimpleName: replace(1106)", "Delete SimpleName: attributeName(1107)", "Delete SimpleName: vars(1108)", "Delete MethodInvocation(1109)", "Delete SimpleName: nuattr(1110)", "Delete MethodInvocation(1111)", "Delete ExpressionStatement(1112)", "Delete Block(1113)", "Delete EnhancedForStatement(1114)", "Delete Block(1115)", "Delete IfStatement(1116)", "Delete SimpleName: nudef(1117)", "Delete ReturnStatement(1118)", "Delete TextElement: Replaces variables into an attribute.(1121)", "Delete TagElement(1122)", "Delete SimpleName: attr(1123)", "Delete TextElement:  The attribute to be used as a basis, containing placeholders(1124)", "Delete TextElement: for variables.(1125)", "Delete TagElement: @param(1126)", "Delete SimpleName: vars(1127)", "Delete TextElement:  The variables to replace.(1128)", "Delete TagElement: @param(1129)", "Delete TextElement:  A new instance of an attribute, whose properties have been(1130)", "Delete TextElement: replaced with variables' values.(1131)", "Delete TagElement: @return(1132)", "Delete Javadoc(1133)", "Delete Modifier: private(1134)", "Delete SimpleName: Attribute(1135)", "Delete SimpleType: Attribute(1136)", "Delete SimpleName: replaceVarsInAttribute(1137)", "Delete SimpleName: Attribute(1138)", "Delete SimpleType: Attribute(1139)", "Delete SimpleName: attr(1140)", "Delete SingleVariableDeclaration(1141)", "Delete SimpleName: Map(1142)", "Delete SimpleType: Map(1143)", "Delete SimpleName: Integer(1144)", "Delete SimpleType: Integer(1145)", "Delete SimpleName: String(1146)", "Delete SimpleType: String(1147)", "Delete ParameterizedType: Map<Integer,String>(1148)", "Delete SimpleName: vars(1149)", "Delete SingleVariableDeclaration(1150)", "Delete SimpleName: Attribute(1151)", "Delete SimpleType: Attribute(1152)", "Delete SimpleName: nuattr(1153)", "Delete SimpleName: Attribute(1154)", "Delete SimpleType: Attribute(1155)", "Delete ClassInstanceCreation(1156)", "Delete VariableDeclarationFragment(1157)", "Delete VariableDeclarationStatement(1158)", "Delete SimpleName: nuattr(1159)", "Delete SimpleName: setRole(1160)", "Delete SimpleName: replace(1161)", "Delete SimpleName: attr(1162)", "Delete SimpleName: getRole(1163)", "Delete MethodInvocation(1164)", "Delete SimpleName: vars(1165)", "Delete MethodInvocation(1166)", "Delete MethodInvocation(1167)", "Delete ExpressionStatement(1168)", "Delete SimpleName: nuattr(1169)", "Delete SimpleName: setRenderer(1170)", "Delete SimpleName: attr(1171)", "Delete SimpleName: getRenderer(1172)", "Delete MethodInvocation(1173)", "Delete MethodInvocation(1174)", "Delete ExpressionStatement(1175)", "Delete SimpleName: nuattr(1176)", "Delete SimpleName: setExpression(1177)", "Delete SimpleName: attr(1178)", "Delete SimpleName: getExpression(1179)", "Delete MethodInvocation(1180)", "Delete MethodInvocation(1181)", "Delete ExpressionStatement(1182)", "Delete SimpleName: Object(1183)", "Delete SimpleType: Object(1184)", "Delete SimpleName: value(1185)", "Delete SimpleName: attr(1186)", "Delete SimpleName: getValue(1187)", "Delete MethodInvocation(1188)", "Delete VariableDeclarationFragment(1189)", "Delete VariableDeclarationStatement(1190)", "Delete SimpleName: value(1191)", "Delete SimpleName: String(1192)", "Delete SimpleType: String(1193)", "Delete InstanceofExpression(1194)", "Delete SimpleName: value(1195)", "Delete SimpleName: replace(1196)", "Delete SimpleName: String(1197)", "Delete SimpleType: String(1198)", "Delete SimpleName: value(1199)", "Delete CastExpression(1200)", "Delete SimpleName: vars(1201)", "Delete MethodInvocation(1202)", "Delete Assignment: =(1203)", "Delete ExpressionStatement(1204)", "Delete Block(1205)", "Delete IfStatement(1206)", "Delete SimpleName: nuattr(1207)", "Delete SimpleName: setValue(1208)", "Delete SimpleName: value(1209)", "Delete MethodInvocation(1210)", "Delete ExpressionStatement(1211)", "Delete SimpleName: nuattr(1212)", "Delete ReturnStatement(1213)", "Delete Block(1214)", "Delete MethodDeclaration(1215)", "Delete TextElement: Replaces a string with placeholders using values of a variable map.(1216)", "Delete TagElement(1217)", "Delete SimpleName: st(1218)", "Delete TextElement:  The string to replace.(1219)", "Delete TagElement: @param(1220)", "Delete SimpleName: vars(1221)", "Delete TextElement:  The variables.(1222)", "Delete TagElement: @param(1223)", "Delete TextElement:  The replaced string.(1224)", "Delete TagElement: @return(1225)", "Delete TextElement:  2.1.0(1226)", "Delete TagElement: @since(1227)", "Delete Javadoc(1228)", "Delete Modifier: protected(1229)", "Delete SimpleName: String(1230)", "Delete SimpleType: String(1231)", "Delete SimpleName: replace(1232)", "Delete SimpleName: String(1233)", "Delete SimpleType: String(1234)", "Delete SimpleName: st(1235)", "Delete SingleVariableDeclaration(1236)", "Delete SimpleName: Map(1237)", "Delete SimpleType: Map(1238)", "Delete SimpleName: Integer(1239)", "Delete SimpleType: Integer(1240)", "Delete SimpleName: String(1241)", "Delete SimpleType: String(1242)", "Delete ParameterizedType: Map<Integer,String>(1243)", "Delete SimpleName: vars(1244)", "Delete SingleVariableDeclaration(1245)", "Delete QualifiedName: org.apache.tiles.util.WildcardHelper(1246)", "Delete SimpleName: convertParam(1247)", "Delete SimpleName: st(1248)", "Delete SimpleName: vars(1249)", "Delete MethodInvocation(1250)", "Delete ReturnStatement(1251)", "Delete Block(1252)", "Delete MethodDeclaration(1253)", "Delete TextElement: Maps a pattern with a definition in cache.(1254)", "Delete TagElement(1255)", "Delete TextElement:  2.1.0(1256)", "Delete TagElement: @since(1257)", "Delete Javadoc(1258)", "Delete Modifier: protected(1259)", "Delete SimpleName: WildcardMapping(1260)", "Delete TextElement: The compiled pattern.(1261)", "Delete TagElement(1262)", "Delete Javadoc(1263)", "Delete Modifier: private(1264)", "Delete PrimitiveType: int(1265)", "Delete Dimension(1266)", "Delete ArrayType: int[](1267)", "Delete SimpleName: pattern(1268)", "Delete VariableDeclarationFragment(1269)", "Delete FieldDeclaration(1270)", "Delete TextElement: The definition that matches the pattern.(1271)", "Delete TagElement(1272)", "Delete Javadoc(1273)", "Delete Modifier: private(1274)", "Delete SimpleName: Definition(1275)", "Delete SimpleType: Definition(1276)", "Delete SimpleName: definition(1277)", "Delete VariableDeclarationFragment(1278)", "Delete FieldDeclaration(1279)", "Delete TextElement: Constructor.(1280)", "Delete TagElement(1281)", "Delete SimpleName: pattern(1282)", "Delete TextElement:  The compiled pattern.(1283)", "Delete TagElement: @param(1284)", "Delete SimpleName: definition(1285)", "Delete TextElement:  A definition that matches the pattern.(1286)", "Delete TagElement: @param(1287)", "Delete TextElement:  2.1.0(1288)", "Delete TagElement: @since(1289)", "Delete Javadoc(1290)", "Delete Modifier: public(1291)", "Delete SimpleName: WildcardMapping(1292)", "Delete SimpleName: String(1293)", "Delete SimpleType: String(1294)", "Delete SimpleName: pattern(1295)", "Delete SingleVariableDeclaration(1296)", "Delete SimpleName: Definition(1297)", "Delete SimpleType: Definition(1298)", "Delete SimpleName: definition(1299)", "Delete SingleVariableDeclaration(1300)", "Delete ThisExpression(1301)", "Delete SimpleName: pattern(1302)", "Delete FieldAccess(1303)", "Delete SimpleName: wildcardHelper(1304)", "Delete SimpleName: compilePattern(1305)", "Delete SimpleName: pattern(1306)", "Delete MethodInvocation(1307)", "Delete Assignment: =(1308)", "Delete ExpressionStatement(1309)", "Delete ThisExpression(1310)", "Delete SimpleName: definition(1311)", "Delete FieldAccess(1312)", "Delete SimpleName: definition(1313)", "Delete Assignment: =(1314)", "Delete ExpressionStatement(1315)", "Delete Block(1316)", "Delete MethodDeclaration(1317)", "Delete TextElement: Returns the definition.(1318)", "Delete TagElement(1319)", "Delete TextElement:  The definition.(1320)", "Delete TagElement: @return(1321)", "Delete TextElement:  2.1.0(1322)", "Delete TagElement: @since(1323)", "Delete Javadoc(1324)", "Delete Modifier: public(1325)", "Delete SimpleName: Definition(1326)", "Delete SimpleType: Definition(1327)", "Delete SimpleName: getDefinition(1328)", "Delete SimpleName: definition(1329)", "Delete ReturnStatement(1330)", "Delete Block(1331)", "Delete MethodDeclaration(1332)", "Delete TextElement: Returns the compiled pattern.(1333)", "Delete TagElement(1334)", "Delete TextElement:  The pattern.(1335)", "Delete TagElement: @return(1336)", "Delete TextElement:  2.1.0(1337)", "Delete TagElement: @since(1338)", "Delete Javadoc(1339)", "Delete Modifier: public(1340)", "Delete PrimitiveType: int(1341)", "Delete Dimension(1342)", "Delete ArrayType: int[](1343)", "Delete SimpleName: getPattern(1344)", "Delete SimpleName: pattern(1345)", "Delete ReturnStatement(1346)", "Delete Block(1347)", "Delete MethodDeclaration(1348)", "Delete TypeDeclaration: class(1349)"]}}], "commit_stats": [{"total_files": 7, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}