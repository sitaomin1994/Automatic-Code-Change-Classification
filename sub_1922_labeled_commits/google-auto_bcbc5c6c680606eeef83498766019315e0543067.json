{"application": "google-auto", "csha": "bcbc5c6c680606eeef83498766019315e0543067", "files": [{"Reformatter_cluster": {"actions": [{"root": "UPDATE from Tokenizer to JavaScanner", "operations": ["UPD SimpleName: Tokenizer from Tokenizer to JavaScanner", "UPD SimpleName: Tokenizer from Tokenizer to JavaScanner", "UPD SimpleType: Tokenizer from Tokenizer to JavaScanner", "UPD SimpleType: Tokenizer from Tokenizer to JavaScanner"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL CharacterLiteral: '\\n'", "DEL SimpleName: charAt", "DEL ReturnStatement", "DEL NumberLiteral: 1", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL SimpleName: quote", "DEL Block", "DEL SimpleName: s", "DEL Modifier: final", "DEL InfixExpression: >=", "DEL SimpleName: indexOf", "DEL SimpleName: i", "DEL SimpleName: start", "DEL MethodInvocation", "DEL SimpleName: quoteEnd", "DEL VariableDeclarationFragment", "DEL VariableDeclarationStatement", "DEL SimpleName: start", "DEL InfixExpression: +", "DEL PostfixExpression: ++", "DEL InfixExpression: +", "DEL Assignment: =", "DEL SimpleName: i", "DEL SimpleName: start", "DEL Assignment: +=", "DEL SimpleName: start", "DEL SimpleName: s", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: quote", "DEL SimpleName: end", "DEL SimpleName: s", "DEL SingleVariableDeclaration", "DEL SimpleName: Tokenizer", "DEL SimpleName: start", "DEL SimpleName: s", "DEL SimpleName: start", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL NumberLiteral: 0", "DEL MethodInvocation", "DEL SimpleName: charAt", "DEL SimpleName: start", "DEL MethodInvocation", "DEL PrimitiveType: int", "DEL CharacterLiteral: '\\n'", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL SimpleName: s", "DEL SimpleName: quoteEnd", "DEL SimpleName: blockCommentEnd", "DEL PrimitiveType: int", "DEL SingleVariableDeclaration", "DEL SimpleName: i", "DEL SimpleName: i", "DEL ReturnStatement", "DEL InfixExpression: ==", "DEL SingleVariableDeclaration", "DEL ReturnStatement", "DEL SimpleName: s", "DEL InfixExpression: +", "DEL SimpleName: start", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL StringLiteral: \"\\n\"", "DEL InfixExpression: +", "DEL SimpleName: i", "DEL SimpleName: i", "DEL IfStatement", "DEL Block", "DEL Block", "DEL SwitchCase", "DEL NumberLiteral: 1", "DEL CharacterLiteral: '/'", "DEL CharacterLiteral: ' '", "DEL Modifier: private", "DEL SimpleName: Tokenizer", "DEL ForStatement", "DEL NumberLiteral: 1", "DEL Block", "DEL SimpleName: s", "DEL Block", "DEL SimpleName: start", "DEL InfixExpression: +", "DEL SimpleName: charAt", "DEL SimpleName: length", "DEL SwitchStatement", "DEL SimpleName: start", "DEL MethodInvocation", "DEL IfStatement", "DEL MethodDeclaration", "DEL SimpleName: charAt", "DEL InfixExpression: &&", "DEL PrimitiveType: int", "DEL AssertStatement", "DEL SimpleName: charAt", "DEL InfixExpression: +", "DEL PrimitiveType: int", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL SimpleName: spaceEnd", "DEL InfixExpression: +", "DEL PostfixExpression: ++", "DEL ReturnStatement", "DEL InfixExpression: +", "DEL SimpleName: s", "DEL MethodInvocation", "DEL NumberLiteral: 1", "DEL AssertStatement", "DEL AssertStatement", "DEL InfixExpression: !=", "DEL SimpleName: start", "DEL SimpleName: s", "DEL SimpleName: lineCommentEnd", "DEL SimpleName: s", "DEL SimpleName: charAt", "DEL SimpleName: s", "DEL SimpleName: start", "DEL SimpleName: start", "DEL SingleVariableDeclaration", "DEL InfixExpression: +", "DEL NumberLiteral: 1", "DEL PostfixExpression: ++", "DEL InfixExpression: +", "DEL SingleVariableDeclaration", "DEL SimpleName: i", "DEL Block", "DEL CharacterLiteral: '\\\\'", "DEL PrimitiveType: int", "DEL IfStatement", "DEL IfStatement", "DEL ExpressionStatement", "DEL Block", "DEL Block", "DEL SimpleName: charAt", "DEL SimpleName: start", "DEL CharacterLiteral: '/'", "DEL SimpleName: i", "DEL SimpleName: start", "DEL SimpleName: start", "DEL SimpleName: s", "DEL SimpleName: i", "DEL MethodInvocation", "DEL SwitchCase", "DEL PrimitiveType: int", "DEL SimpleName: String", "DEL SimpleName: i", "DEL MethodDeclaration", "DEL NumberLiteral: 1", "DEL SimpleName: s", "DEL InfixExpression: ==", "DEL PrimitiveType: char", "DEL SimpleName: charAt", "DEL Modifier: private", "DEL MethodInvocation", "DEL SimpleName: s", "DEL SimpleName: spaceEnd", "DEL CharacterLiteral: '/'", "DEL VariableDeclarationFragment", "DEL InfixExpression: ==", "DEL MethodInvocation", "DEL CharacterLiteral: '/'", "DEL SimpleName: s", "DEL AssertStatement", "DEL PrimitiveType: int", "DEL ReturnStatement", "DEL Block", "DEL SimpleName: charAt", "DEL SimpleName: start", "DEL SimpleName: i", "DEL PrimitiveType: int", "DEL SimpleName: i", "DEL InfixExpression: &&", "DEL InfixExpression: ==", "DEL FieldAccess", "DEL MethodInvocation", "DEL SimpleName: i", "DEL SimpleName: s", "DEL FieldDeclaration", "DEL ReturnStatement", "DEL CharacterLiteral: '*'", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL InfixExpression: ||", "DEL SimpleName: start", "DEL MethodInvocation", "DEL SimpleName: charAt", "DEL SimpleName: start", "DEL SimpleType: String", "DEL Block", "DEL MethodInvocation", "DEL InfixExpression: ||", "DEL SimpleName: s", "DEL SimpleName: length", "DEL SimpleName: charAt", "DEL ThisExpression", "DEL VariableDeclarationStatement", "DEL VariableDeclarationStatement", "DEL InfixExpression: +", "DEL SwitchCase", "DEL MethodInvocation", "DEL SimpleName: s", "DEL NumberLiteral: 1", "DEL SimpleName: start", "DEL ReturnStatement", "DEL SimpleName: start", "DEL PrimitiveType: int", "DEL PrimitiveType: int", "DEL InfixExpression: ==", "DEL SimpleName: quote", "DEL SimpleName: endsWith", "DEL SingleVariableDeclaration", "DEL SwitchCase", "DEL InfixExpression: ==", "DEL Block", "DEL MethodInvocation", "DEL InfixExpression: &&", "DEL SimpleName: charAt", "DEL Assignment: =", "DEL SimpleName: charAt", "DEL SimpleName: charAt", "DEL InfixExpression: !=", "DEL SimpleName: start", "DEL SimpleName: start", "DEL ForStatement", "DEL PrefixExpression: !", "DEL SimpleName: start", "DEL NumberLiteral: 1", "DEL CharacterLiteral: '\\n'", "DEL SwitchCase", "DEL CharacterLiteral: '\"'", "DEL SwitchCase", "DEL CharacterLiteral: '\"'", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL InfixExpression: <", "DEL VariableDeclarationFragment", "DEL IfStatement", "DEL CharacterLiteral: '/'", "DEL SimpleName: s", "DEL SimpleName: blockCommentEnd", "DEL NumberLiteral: 2", "DEL CharacterLiteral: '*'", "DEL Modifier: static", "DEL CharacterLiteral: '\\''", "DEL CharacterLiteral: '*'", "DEL SimpleName: s", "DEL PrimitiveType: int", "DEL TypeDeclaration: class", "DEL InfixExpression: ||", "DEL SimpleName: length", "DEL SimpleName: end", "DEL Block", "DEL VariableDeclarationStatement", "DEL SimpleType: String", "DEL InfixExpression: ==", "DEL Block", "DEL InfixExpression: ==", "DEL ExpressionStatement", "DEL InfixExpression: >", "DEL SimpleName: i", "DEL CharacterLiteral: ' '", "DEL CharacterLiteral: '/'", "DEL CharacterLiteral: '\\''", "DEL SimpleName: tokenEnd", "DEL SimpleName: quote", "DEL Block", "DEL PrimitiveType: int", "DEL SimpleName: i", "DEL SimpleName: start", "DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL ReturnStatement", "DEL ReturnStatement", "DEL SimpleName: i", "DEL PrimitiveType: int", "DEL SimpleName: start", "DEL MethodDeclaration", "DEL Assignment: =", "DEL SimpleName: lineCommentEnd", "DEL ExpressionStatement", "DEL Block", "DEL MethodDeclaration", "DEL ReturnStatement", "DEL InfixExpression: ==", "DEL SimpleName: s", "DEL SimpleName: end", "DEL SimpleName: i", "DEL Assignment: =", "DEL SimpleName: String", "DEL SimpleName: s", "DEL VariableDeclarationStatement", "DEL PrimitiveType: int", "DEL StringLiteral: \"\\n\"", "DEL SimpleName: s", "DEL SimpleName: s", "DEL MethodInvocation", "DEL SimpleName: s", "DEL SimpleName: charAt", "DEL CharacterLiteral: ' '", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 1", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL ForStatement", "DEL SimpleName: i", "DEL MethodInvocation", "DEL AssertStatement", "DEL PostfixExpression: ++"]}]}}, {"Reformatter_diff": {"operations": ["Update SimpleType: Tokenizer(303) to JavaScanner", "Update SimpleName: Tokenizer(302) to JavaScanner", "Update SimpleType: Tokenizer(306) to JavaScanner", "Update SimpleName: Tokenizer(305) to JavaScanner", "Delete Modifier: private(401)", "Delete Modifier: static(402)", "Delete SimpleName: Tokenizer(403)", "Delete Modifier: private(404)", "Delete Modifier: final(405)", "Delete SimpleName: String(406)", "Delete SimpleType: String(407)", "Delete SimpleName: s(408)", "Delete VariableDeclarationFragment(409)", "Delete FieldDeclaration(410)", "Delete SimpleName: Tokenizer(411)", "Delete SimpleName: String(412)", "Delete SimpleType: String(413)", "Delete SimpleName: s(414)", "Delete SingleVariableDeclaration(415)", "Delete SimpleName: s(416)", "Delete SimpleName: endsWith(417)", "Delete StringLiteral: \"\\n\"(418)", "Delete MethodInvocation(419)", "Delete PrefixExpression: !(420)", "Delete SimpleName: s(421)", "Delete StringLiteral: \"\\n\"(422)", "Delete Assignment: +=(423)", "Delete ExpressionStatement(424)", "Delete Block(425)", "Delete IfStatement(426)", "Delete ThisExpression(427)", "Delete SimpleName: s(428)", "Delete FieldAccess(429)", "Delete SimpleName: s(430)", "Delete Assignment: =(431)", "Delete ExpressionStatement(432)", "Delete Block(433)", "Delete MethodDeclaration(434)", "Delete PrimitiveType: int(435)", "Delete SimpleName: tokenEnd(436)", "Delete PrimitiveType: int(437)", "Delete SimpleName: start(438)", "Delete SingleVariableDeclaration(439)", "Delete SimpleName: start(440)", "Delete SimpleName: s(441)", "Delete SimpleName: length(442)", "Delete MethodInvocation(443)", "Delete InfixExpression: >=(444)", "Delete SimpleName: s(445)", "Delete SimpleName: length(446)", "Delete MethodInvocation(447)", "Delete ReturnStatement(448)", "Delete Block(449)", "Delete IfStatement(450)", "Delete SimpleName: s(451)", "Delete SimpleName: charAt(452)", "Delete SimpleName: start(453)", "Delete MethodInvocation(454)", "Delete CharacterLiteral: ' '(455)", "Delete SwitchCase(456)", "Delete CharacterLiteral: '\\n'(457)", "Delete SwitchCase(458)", "Delete SimpleName: spaceEnd(459)", "Delete SimpleName: start(460)", "Delete MethodInvocation(461)", "Delete ReturnStatement(462)", "Delete CharacterLiteral: '/'(463)", "Delete SwitchCase(464)", "Delete SimpleName: s(465)", "Delete SimpleName: charAt(466)", "Delete SimpleName: start(467)", "Delete NumberLiteral: 1(468)", "Delete InfixExpression: +(469)", "Delete MethodInvocation(470)", "Delete CharacterLiteral: '*'(471)", "Delete InfixExpression: ==(472)", "Delete SimpleName: blockCommentEnd(473)", "Delete SimpleName: start(474)", "Delete MethodInvocation(475)", "Delete ReturnStatement(476)", "Delete Block(477)", "Delete SimpleName: s(478)", "Delete SimpleName: charAt(479)", "Delete SimpleName: start(480)", "Delete NumberLiteral: 1(481)", "Delete InfixExpression: +(482)", "Delete MethodInvocation(483)", "Delete CharacterLiteral: '/'(484)", "Delete InfixExpression: ==(485)", "Delete SimpleName: lineCommentEnd(486)", "Delete SimpleName: start(487)", "Delete MethodInvocation(488)", "Delete ReturnStatement(489)", "Delete Block(490)", "Delete SimpleName: start(491)", "Delete NumberLiteral: 1(492)", "Delete InfixExpression: +(493)", "Delete ReturnStatement(494)", "Delete Block(495)", "Delete IfStatement(496)", "Delete IfStatement(497)", "Delete CharacterLiteral: '\\''(498)", "Delete SwitchCase(499)", "Delete CharacterLiteral: '\"'(500)", "Delete SwitchCase(501)", "Delete SimpleName: quoteEnd(502)", "Delete SimpleName: start(503)", "Delete MethodInvocation(504)", "Delete ReturnStatement(505)", "Delete SwitchCase(506)", "Delete SimpleName: start(507)", "Delete NumberLiteral: 1(508)", "Delete InfixExpression: +(509)", "Delete ReturnStatement(510)", "Delete SwitchStatement(511)", "Delete Block(512)", "Delete MethodDeclaration(513)", "Delete PrimitiveType: int(514)", "Delete SimpleName: spaceEnd(515)", "Delete PrimitiveType: int(516)", "Delete SimpleName: start(517)", "Delete SingleVariableDeclaration(518)", "Delete SimpleName: s(519)", "Delete SimpleName: charAt(520)", "Delete SimpleName: start(521)", "Delete MethodInvocation(522)", "Delete CharacterLiteral: ' '(523)", "Delete InfixExpression: ==(524)", "Delete SimpleName: s(525)", "Delete SimpleName: charAt(526)", "Delete SimpleName: start(527)", "Delete MethodInvocation(528)", "Delete CharacterLiteral: '\\n'(529)", "Delete InfixExpression: ==(530)", "Delete InfixExpression: ||(531)", "Delete AssertStatement(532)", "Delete PrimitiveType: int(533)", "Delete SimpleName: i(534)", "Delete VariableDeclarationFragment(535)", "Delete VariableDeclarationStatement(536)", "Delete SimpleName: i(537)", "Delete SimpleName: start(538)", "Delete NumberLiteral: 1(539)", "Delete InfixExpression: +(540)", "Delete Assignment: =(541)", "Delete SimpleName: i(542)", "Delete SimpleName: s(543)", "Delete SimpleName: length(544)", "Delete MethodInvocation(545)", "Delete InfixExpression: <(546)", "Delete SimpleName: s(547)", "Delete SimpleName: charAt(548)", "Delete SimpleName: i(549)", "Delete MethodInvocation(550)", "Delete CharacterLiteral: ' '(551)", "Delete InfixExpression: ==(552)", "Delete InfixExpression: &&(553)", "Delete SimpleName: i(554)", "Delete PostfixExpression: ++(555)", "Delete Block(556)", "Delete ForStatement(557)", "Delete SimpleName: i(558)", "Delete ReturnStatement(559)", "Delete Block(560)", "Delete MethodDeclaration(561)", "Delete PrimitiveType: int(562)", "Delete SimpleName: blockCommentEnd(563)", "Delete PrimitiveType: int(564)", "Delete SimpleName: start(565)", "Delete SingleVariableDeclaration(566)", "Delete SimpleName: s(567)", "Delete SimpleName: charAt(568)", "Delete SimpleName: start(569)", "Delete MethodInvocation(570)", "Delete CharacterLiteral: '/'(571)", "Delete InfixExpression: ==(572)", "Delete SimpleName: s(573)", "Delete SimpleName: charAt(574)", "Delete SimpleName: start(575)", "Delete NumberLiteral: 1(576)", "Delete InfixExpression: +(577)", "Delete MethodInvocation(578)", "Delete CharacterLiteral: '*'(579)", "Delete InfixExpression: ==(580)", "Delete InfixExpression: &&(581)", "Delete AssertStatement(582)", "Delete PrimitiveType: int(583)", "Delete SimpleName: i(584)", "Delete VariableDeclarationFragment(585)", "Delete VariableDeclarationStatement(586)", "Delete SimpleName: i(587)", "Delete SimpleName: start(588)", "Delete NumberLiteral: 1(589)", "Delete InfixExpression: +(590)", "Delete Assignment: =(591)", "Delete SimpleName: s(592)", "Delete SimpleName: charAt(593)", "Delete SimpleName: i(594)", "Delete MethodInvocation(595)", "Delete CharacterLiteral: '*'(596)", "Delete InfixExpression: !=(597)", "Delete SimpleName: s(598)", "Delete SimpleName: charAt(599)", "Delete SimpleName: i(600)", "Delete NumberLiteral: 1(601)", "Delete InfixExpression: +(602)", "Delete MethodInvocation(603)", "Delete CharacterLiteral: '/'(604)", "Delete InfixExpression: !=(605)", "Delete InfixExpression: ||(606)", "Delete SimpleName: i(607)", "Delete PostfixExpression: ++(608)", "Delete Block(609)", "Delete ForStatement(610)", "Delete SimpleName: i(611)", "Delete ReturnStatement(612)", "Delete Block(613)", "Delete MethodDeclaration(614)", "Delete PrimitiveType: int(615)", "Delete SimpleName: lineCommentEnd(616)", "Delete PrimitiveType: int(617)", "Delete SimpleName: start(618)", "Delete SingleVariableDeclaration(619)", "Delete SimpleName: s(620)", "Delete SimpleName: charAt(621)", "Delete SimpleName: start(622)", "Delete MethodInvocation(623)", "Delete CharacterLiteral: '/'(624)", "Delete InfixExpression: ==(625)", "Delete SimpleName: s(626)", "Delete SimpleName: charAt(627)", "Delete SimpleName: start(628)", "Delete NumberLiteral: 1(629)", "Delete InfixExpression: +(630)", "Delete MethodInvocation(631)", "Delete CharacterLiteral: '/'(632)", "Delete InfixExpression: ==(633)", "Delete InfixExpression: &&(634)", "Delete AssertStatement(635)", "Delete PrimitiveType: int(636)", "Delete SimpleName: end(637)", "Delete SimpleName: s(638)", "Delete SimpleName: indexOf(639)", "Delete CharacterLiteral: '\\n'(640)", "Delete SimpleName: start(641)", "Delete NumberLiteral: 2(642)", "Delete InfixExpression: +(643)", "Delete MethodInvocation(644)", "Delete VariableDeclarationFragment(645)", "Delete VariableDeclarationStatement(646)", "Delete SimpleName: end(647)", "Delete NumberLiteral: 0(648)", "Delete InfixExpression: >(649)", "Delete AssertStatement(650)", "Delete SimpleName: end(651)", "Delete ReturnStatement(652)", "Delete Block(653)", "Delete MethodDeclaration(654)", "Delete PrimitiveType: int(655)", "Delete SimpleName: quoteEnd(656)", "Delete PrimitiveType: int(657)", "Delete SimpleName: start(658)", "Delete SingleVariableDeclaration(659)", "Delete PrimitiveType: char(660)", "Delete SimpleName: quote(661)", "Delete SimpleName: s(662)", "Delete SimpleName: charAt(663)", "Delete SimpleName: start(664)", "Delete MethodInvocation(665)", "Delete VariableDeclarationFragment(666)", "Delete VariableDeclarationStatement(667)", "Delete SimpleName: quote(668)", "Delete CharacterLiteral: '\\''(669)", "Delete InfixExpression: ==(670)", "Delete SimpleName: quote(671)", "Delete CharacterLiteral: '\"'(672)", "Delete InfixExpression: ==(673)", "Delete InfixExpression: ||(674)", "Delete AssertStatement(675)", "Delete PrimitiveType: int(676)", "Delete SimpleName: i(677)", "Delete VariableDeclarationFragment(678)", "Delete VariableDeclarationStatement(679)", "Delete SimpleName: i(680)", "Delete SimpleName: start(681)", "Delete NumberLiteral: 1(682)", "Delete InfixExpression: +(683)", "Delete Assignment: =(684)", "Delete SimpleName: s(685)", "Delete SimpleName: charAt(686)", "Delete SimpleName: i(687)", "Delete MethodInvocation(688)", "Delete SimpleName: quote(689)", "Delete InfixExpression: !=(690)", "Delete SimpleName: i(691)", "Delete PostfixExpression: ++(692)", "Delete SimpleName: s(693)", "Delete SimpleName: charAt(694)", "Delete SimpleName: i(695)", "Delete MethodInvocation(696)", "Delete CharacterLiteral: '\\\\'(697)", "Delete InfixExpression: ==(698)", "Delete SimpleName: i(699)", "Delete PostfixExpression: ++(700)", "Delete ExpressionStatement(701)", "Delete Block(702)", "Delete IfStatement(703)", "Delete Block(704)", "Delete ForStatement(705)", "Delete SimpleName: i(706)", "Delete NumberLiteral: 1(707)", "Delete InfixExpression: +(708)", "Delete ReturnStatement(709)", "Delete Block(710)", "Delete MethodDeclaration(711)", "Delete TypeDeclaration: class(712)"]}}], "commit_stats": [{"total_files": 3, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}