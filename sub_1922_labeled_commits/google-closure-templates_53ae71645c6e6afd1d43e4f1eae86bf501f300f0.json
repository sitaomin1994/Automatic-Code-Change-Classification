{"application": "google-closure-templates", "csha": "53ae71645c6e6afd1d43e4f1eae86bf501f300f0", "files": [{"ErrorNodes_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.collect.ImmutableList"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.template.soy.soytree.LetContentNode", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.template.soy.soytree.LetValueNode"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.template.soy.soytree.MsgHtmlTagNode"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.template.soy.soytree.RawTextNode"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.template.soy.soytree.SoyNode.StandaloneNode", "DEL ImportDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleType: RawTextNode", "DEL NumberLiteral: 1", "DEL SimpleName: ImmutableList", "DEL StringLiteral: \"<body/>\"", "DEL SimpleType: MsgHtmlTagNode", "DEL MethodInvocation", "DEL SimpleName: MsgHtmlTagNode", "DEL FieldDeclaration", "DEL ClassInstanceCreation", "DEL Modifier: final", "DEL PrefixExpression: -", "DEL SimpleName: MSG_HTML_TAG_NODE", "DEL PrefixExpression: -", "DEL VariableDeclarationFragment", "DEL SimpleName: of", "DEL Modifier: static", "DEL SimpleType: MsgHtmlTagNode", "DEL NumberLiteral: 1", "DEL SimpleType: StandaloneNode", "DEL SimpleName: RawTextNode", "DEL ClassInstanceCreation", "DEL SimpleName: MsgHtmlTagNode", "DEL SimpleName: StandaloneNode"]}]}}, {"ErrorNodes_diff": {"operations": ["Delete QualifiedName: com.google.common.collect.ImmutableList(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: com.google.template.soy.soytree.LetContentNode(4)", "Delete ImportDeclaration(5)", "Delete QualifiedName: com.google.template.soy.soytree.LetValueNode(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: com.google.template.soy.soytree.MsgHtmlTagNode(8)", "Delete ImportDeclaration(9)", "Delete QualifiedName: com.google.template.soy.soytree.RawTextNode(12)", "Delete ImportDeclaration(13)", "Delete QualifiedName: com.google.template.soy.soytree.SoyNode.StandaloneNode(14)", "Delete ImportDeclaration(15)", "Delete Modifier: static(42)", "Delete Modifier: final(43)", "Delete SimpleName: MsgHtmlTagNode(44)", "Delete SimpleType: MsgHtmlTagNode(45)", "Delete SimpleName: MSG_HTML_TAG_NODE(46)", "Delete SimpleName: MsgHtmlTagNode(47)", "Delete SimpleType: MsgHtmlTagNode(48)", "Delete NumberLiteral: 1(49)", "Delete PrefixExpression: -(50)", "Delete SimpleName: ImmutableList(51)", "Delete SimpleName: StandaloneNode(52)", "Delete SimpleType: StandaloneNode(53)", "Delete SimpleName: of(54)", "Delete SimpleName: RawTextNode(55)", "Delete SimpleType: RawTextNode(56)", "Delete NumberLiteral: 1(57)", "Delete PrefixExpression: -(58)", "Delete StringLiteral: \"<body/>\"(59)", "Delete ClassInstanceCreation(60)", "Delete MethodInvocation(61)", "Delete ClassInstanceCreation(62)", "Delete VariableDeclarationFragment(63)", "Delete FieldDeclaration(64)"]}}, {"MsgHtmlTagNode_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 1", "operations": ["INS QualifiedName: com.google.common.collect.ImmutableList to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 1"]}, {"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: com.google.common.collect.Iterables to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: com.google.template.soy.base.SourceLocation to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 8", "operations": ["INS ImportDeclaration to CompilationUnit at 8", "INS QualifiedName: com.google.template.soy.soyparse.ErrorReporter to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 9", "operations": ["INS QualifiedName: com.google.template.soy.soyparse.ErrorReporter.Checkpoint to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 9"]}, {"root": "INS ImportDeclaration to CompilationUnit at 10", "operations": ["INS QualifiedName: com.google.template.soy.soyparse.TransitionalThrowingErrorReporter to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 10"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: java.util.ArrayList to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS Modifier: final to TypeDeclaration: class at 2", "operations": ["INS Modifier: final to TypeDeclaration: class at 2"]}, {"root": "MOVE from FieldDeclaration", "operations": ["MOV MarkerAnnotation to FieldDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 14", "operations": ["INS SimpleName: MsgHtmlTagNode to MethodDeclaration at 1", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: addChildren to MethodInvocation at 0", "INS ExpressionStatement to Block at 6", "INS SimpleName: userSuppliedPlaceholderName to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: lcTagName to SingleVariableDeclaration at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: children to MethodInvocation at 1", "INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to Block at 3", "INS SimpleName: fullTagText to Assignment: = at 1", "INS SimpleName: isSelfEnding to Assignment: = at 1", "INS Modifier: private to MethodDeclaration at 0", "INS Assignment: = to ExpressionStatement at 0", "INS SimpleName: lcTagName to Assignment: = at 1", "INS ExpressionStatement to Block at 5", "INS SimpleName: isSelfEnding to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 2", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: fullTagText to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS Block to MethodDeclaration at 9", "INS SimpleName: isOnlyRawText to Assignment: = at 1", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: isOnlyRawText to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS Assignment: = to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS TypeDeclaration: class to TypeDeclaration: class at 26", "operations": ["INS ParameterizedType: List<String> to VariableDeclarationStatement at 0", "INS SimpleType: ErrorReporter to SingleVariableDeclaration at 0", "INS ParameterizedType: ArrayList<> to ClassInstanceCreation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to IfStatement at 0", "INS SimpleName: List to SimpleType: List at 0", "INS Block to EnhancedForStatement at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: MsgHtmlTagNode to MethodDeclaration at 1", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: id to VariableDeclarationFragment at 0", "INS SimpleName: checkpoint to MethodInvocation at 2", "INS Modifier: private to FieldDeclaration at 0", "INS Block to MethodDeclaration at 5", "INS SimpleName: node to SingleVariableDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS ReturnStatement to Block at 6", "INS SimpleName: String to SimpleType: String at 0", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS Block to MethodDeclaration at 3", "INS SimpleName: computeFullTagText to MethodInvocation at 0", "INS SimpleName: replacementText to ClassInstanceCreation at 2", "INS PrefixExpression: - to ClassInstanceCreation at 1", "INS SimpleName: Builder to TypeDeclaration: class at 4", "INS TagElement: @link to TagElement at 1", "INS SimpleName: errorReporter to MethodInvocation at 1", "INS QualifiedName: ImmutableList.Builder to SimpleType: ImmutableList.Builder at 0", "INS SimpleType: ImmutableList to ParameterizedType: ImmutableList<StandaloneNode> at 0", "INS IfStatement to Block at 2", "INS SimpleType: TransitionalThrowingErrorReporter to ClassInstanceCreation at 0", "INS SimpleName: children to VariableDeclarationFragment at 0", "INS SimpleName: node to ReturnStatement at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: StandaloneNode to SimpleType: StandaloneNode at 0", "INS Assignment: = to ExpressionStatement at 0", "INS VariableDeclarationStatement to Block at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleType: ImmutableList.Builder to ParameterizedType: ImmutableList.Builder<> at 0", "INS SimpleName: report to MethodInvocation at 1", "INS SimpleType: MsgHtmlTagNode to FieldDeclaration at 3", "INS SimpleName: ErrorReporter to SimpleType: ErrorReporter at 0", "INS ParameterizedType: ImmutableList<StandaloneNode> to SingleVariableDeclaration at 0", "INS SimpleName: Builder to MethodDeclaration at 2", "INS ExpressionStatement to Block at 0", "INS FieldDeclaration to TypeDeclaration: class at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: fullTagText to ClassInstanceCreation at 6", "INS ClassInstanceCreation to ReturnStatement at 0", "INS SimpleName: names to SingleVariableDeclaration at 1", "INS SimpleName: transformedChildren to MethodInvocation at 0", "INS Block to MethodDeclaration at 5", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: fullTagText to ReturnStatement at 0", "INS EnhancedForStatement to Block at 4", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: List to SimpleType: List at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS EnhancedForStatement to Block at 2", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to FieldDeclaration at 4", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: names to MethodInvocation at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: children to EnhancedForStatement at 1", "INS SimpleName: StringBuilder to SimpleType: StringBuilder at 0", "INS ClassInstanceCreation to MethodInvocation at 0", "INS SimpleName: StandaloneNode to SimpleType: StandaloneNode at 0", "INS MethodInvocation to ClassInstanceCreation at 2", "INS SimpleName: computePlaceholderName to MethodDeclaration at 3", "INS TextElement:  built from the builder's state. If the builder's state to TagElement at 2", "INS Modifier: private to MethodDeclaration at 1", "INS MethodInvocation to InfixExpression: > at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to DoStatement at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: ErrorReporter to SimpleType: ErrorReporter at 0", "INS SimpleName: sourceLocation to SingleVariableDeclaration at 1", "INS SimpleName: errorReporter to MethodInvocation at 1", "INS SimpleName: errorReporter to SingleVariableDeclaration at 1", "INS CastExpression to ParenthesizedExpression at 0", "INS VariableDeclarationStatement to Block at 0", "INS SimpleType: StandaloneNode to ParameterizedType: ImmutableList<StandaloneNode> at 1", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: sourceLocation to VariableDeclarationFragment at 0", "INS SimpleType: ArrayList to ParameterizedType: ArrayList<> at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: node to VariableDeclarationFragment at 0", "INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS QualifiedName: SourceLocation.UNKNOWN to ClassInstanceCreation at 3", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: ImmutableList.Builder to ParameterizedType: ImmutableList.Builder<StandaloneNode> at 0", "INS SimpleName: sourceLocation to FieldAccess at 1", "INS MethodDeclaration to TypeDeclaration: class at 15", "INS SimpleName: sb to MethodInvocation at 2", "INS ReturnStatement to Block at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: StandaloneNode to SimpleType: StandaloneNode at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ERROR to ReturnStatement at 0", "INS SimpleName: size to MethodInvocation at 1", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS SimpleName: replacementText to VariableDeclarationFragment at 0", "INS SimpleName: extractPlaceholderName to MethodInvocation at 0", "INS SimpleType: ErrorReporter to SingleVariableDeclaration at 0", "INS SimpleType: TransitionalThrowingErrorReporter to VariableDeclarationStatement at 0", "INS PrefixExpression: - to ClassInstanceCreation at 1", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS SimpleType: StringBuilder to VariableDeclarationStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: buildAndThrowIfInvalid to MethodInvocation at 1", "INS TextElement: . to TagElement at 2", "INS SimpleName: names to MethodInvocation at 0", "INS Modifier: public to FieldDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: names to EnhancedForStatement at 1", "INS SimpleName: userSuppliedPlaceholderName to ClassInstanceCreation at 2", "INS IfStatement to Block at 3", "INS SimpleName: id to Assignment: = at 1", "INS SimpleName: StandaloneNode to SimpleType: StandaloneNode at 0", "INS SimpleName: errorReporter to VariableDeclarationFragment at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodDeclaration to TypeDeclaration: class at 14", "INS VariableDeclarationStatement to Block at 5", "INS ReturnStatement to Block at 0", "INS SimpleName: MsgHtmlTagNode to SimpleType: MsgHtmlTagNode at 0", "INS Modifier: private to FieldDeclaration at 0", "INS TextElement:  errorManager to TagElement: @code at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: toString to MethodInvocation at 1", "INS SimpleName: isSelfEnding to MethodDeclaration at 2", "INS ReturnStatement to Block at 3", "INS MethodInvocation to MethodInvocation at 2", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS Modifier: static to MethodDeclaration at 1", "INS IfStatement to Block at 5", "INS SimpleName: children to FieldAccess at 1", "INS Modifier: static to FieldDeclaration at 1", "INS SimpleName: child to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: transformedChildren to VariableDeclarationFragment at 0", "INS SimpleName: build to MethodDeclaration at 3", "INS SimpleName: MsgHtmlTagNode to SimpleType: MsgHtmlTagNode at 0", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS SimpleName: names to MethodInvocation at 2", "INS SimpleName: lcTagName to ClassInstanceCreation at 3", "INS SimpleName: of to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to MethodDeclaration at 1", "INS SimpleName: names to VariableDeclarationFragment at 0", "INS Modifier: final to FieldDeclaration at 2", "INS SimpleType: ErrorReporter to SingleVariableDeclaration at 0", "INS SimpleType: StandaloneNode to ParameterizedType: ImmutableList<StandaloneNode> at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: fullTagText to VariableDeclarationFragment at 0", "INS SimpleName: SoySyntaxException to MethodInvocation at 0", "INS SimpleType: StandaloneNode to MethodDeclaration at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Builder to ClassInstanceCreation at 0", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: computeFullTagText to MethodDeclaration at 2", "INS SimpleType: ImmutableList to ParameterizedType: ImmutableList<StandaloneNode> at 0", "INS SimpleName: MsgHtmlTagNode to SimpleType: MsgHtmlTagNode at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: id to FieldAccess at 1", "INS InfixExpression: > to IfStatement at 0", "INS ReturnStatement to Block at 3", "INS Modifier: private to FieldDeclaration at 0", "INS VariableDeclarationFragment to FieldDeclaration at 2", "INS ParameterizedType: ImmutableList<StandaloneNode> to FieldDeclaration at 1", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SimpleName: userSuppliedPlaceholderName to VariableDeclarationFragment at 0", "INS SimpleName: id to ClassInstanceCreation at 1", "INS SimpleName: String to SimpleType: String at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: MsgHtmlTagNode to ClassInstanceCreation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleType: SourceLocation to FieldDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: Nullable to MarkerAnnotation at 0", "INS ThisExpression to FieldAccess at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: Builder to SimpleType: Builder at 0", "INS SimpleName: find to MethodInvocation at 1", "INS FieldDeclaration to TypeDeclaration: class at 8", "INS SimpleName: MsgHtmlTagNode to SimpleType: MsgHtmlTagNode at 0", "INS SimpleName: ErrorReporter to SimpleType: ErrorReporter at 0", "INS SimpleName: selfEnding to ClassInstanceCreation at 4", "INS SimpleName: computePlaceholderName to MethodInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS Block to IfStatement at 1", "INS FieldAccess to Assignment: = at 0", "INS PrimitiveType: int to FieldDeclaration at 2", "INS VariableDeclarationStatement to Block at 0", "INS Block to DoStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: computeLcTagName to MethodDeclaration at 2", "INS SimpleName: fullTagText to VariableDeclarationFragment at 0", "INS SimpleType: StandaloneNode to SingleVariableDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0", "INS DoStatement to Block at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: StandaloneNode to SimpleType: StandaloneNode at 0", "INS VariableDeclarationStatement to Block at 0", "INS ParameterizedType: List<String> to SingleVariableDeclaration at 0", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleType: String to MethodDeclaration at 1", "INS Modifier: final to FieldDeclaration at 1", "INS SimpleName: isOnlyRawText to ClassInstanceCreation at 5", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: node to ReturnStatement at 0", "INS ParenthesizedExpression to MethodInvocation at 0", "INS SimpleName: node to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to MethodDeclaration at 2", "INS SimpleName: ImmutableList to SimpleType: ImmutableList at 0", "INS SimpleName: rawText to VariableDeclarationFragment at 0", "INS SimpleType: StandaloneNode to MethodInvocation at 1", "INS SimpleName: MsgHtmlTagNode to SimpleType: MsgHtmlTagNode at 0", "INS SimpleName: StringBuilder to SimpleType: StringBuilder at 0", "INS SimpleType: StandaloneNode to ParameterizedType: ImmutableList.Builder<StandaloneNode> at 1", "INS Block to MethodDeclaration at 3", "INS SimpleName: TransitionalThrowingErrorReporter to SimpleType: TransitionalThrowingErrorReporter at 0", "INS ReturnStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: child to SingleVariableDeclaration at 1", "INS ParameterizedType: ImmutableList.Builder<StandaloneNode> to VariableDeclarationStatement at 0", "INS SimpleName: add to MethodInvocation at 1", "INS FieldDeclaration to TypeDeclaration: class at 6", "INS SimpleName: String to SimpleType: String at 0", "INS TagElement to Javadoc at 0", "INS ReturnStatement to Block at 4", "INS SimpleName: sourceLocation to MethodInvocation at 2", "INS ReturnStatement to Block at 9", "INS NumberLiteral: 1 to InfixExpression: > at 1", "INS TextElement: is invalid, errors are reported to the  to TagElement at 3", "INS SimpleName: setSourceLocation to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 2", "INS TagElement: @code to TagElement at 4", "INS Block to MethodDeclaration at 6", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: userSuppliedPlaceholderName to VariableDeclarationFragment at 0", "INS TextElement: Returns a new  to TagElement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: buildAndThrowIfInvalid to MethodDeclaration at 2", "INS Assignment: = to ExpressionStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: MsgHtmlTagNode to TagElement: @link at 0", "INS StringLiteral: \"<body/>\" to ClassInstanceCreation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: TransitionalThrowingErrorReporter to SimpleType: TransitionalThrowingErrorReporter at 0", "INS FieldDeclaration to TypeDeclaration: class at 7", "INS FieldAccess to Assignment: = at 0", "INS SimpleName: build to MethodInvocation at 0", "INS ExpressionStatement to Block at 8", "INS SimpleName: ImmutableList to MethodInvocation at 0", "INS Modifier: final to TypeDeclaration: class at 3", "INS SimpleName: node to CastExpression at 1", "INS Block to MethodDeclaration at 4", "INS TextElement: Builder for  to TagElement at 0", "INS SimpleName: ImmutableList to SimpleType: ImmutableList at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS Block to EnhancedForStatement at 2", "INS Block to MethodDeclaration at 6", "INS Block to IfStatement at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: name to SingleVariableDeclaration at 1", "INS ClassInstanceCreation to MethodInvocation at 3", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS ParameterizedType: ImmutableList.Builder<> to ClassInstanceCreation at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleType: StringBuilder to ClassInstanceCreation at 0", "INS SimpleName: errorReporter to MethodInvocation at 0", "INS TypeDeclaration: class to TypeDeclaration: class at 26", "INS SimpleName: MsgHtmlTagNode to TagElement: @link at 0", "INS SimpleName: sourceLocation to MethodInvocation at 3", "INS SimpleName: node to VariableDeclarationFragment at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: createWithMetaInfo to MethodInvocation at 1", "INS TextElement:  and {Builder#ERROR} is returned. to TagElement at 5", "INS VariableDeclarationStatement to Block at 7", "INS StringLiteral: \"Multiple 'phname' attributes in HTML tag.\" to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: node to ReturnStatement at 0", "INS SimpleName: extractPlaceholderName to MethodDeclaration at 3", "INS SimpleName: errorsSince to MethodInvocation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: errorReporter to SingleVariableDeclaration at 1", "INS QualifiedName: ImmutableList.Builder to SimpleType: ImmutableList.Builder at 0", "INS MethodDeclaration to TypeDeclaration: class at 13", "INS ExpressionStatement to Block at 1", "INS VariableDeclarationStatement to Block at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: sourceLocation to Assignment: = at 1", "INS SimpleType: String to ParameterizedType: List<String> at 1", "INS NullLiteral to MethodInvocation at 3", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS VariableDeclarationStatement to Block at 0", "INS Block to MethodDeclaration at 3", "INS IfStatement to Block at 6", "INS SimpleName: matcher to MethodInvocation at 0", "INS Javadoc to TypeDeclaration: class at 0", "INS Javadoc to MethodDeclaration at 0", "INS ReturnStatement to Block at 3", "INS MethodDeclaration to TypeDeclaration: class at 12", "INS SimpleName: errorReporter to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Modifier: static to TypeDeclaration: class at 2", "INS TagElement to Javadoc at 0", "INS SimpleName: String to SimpleType: String at 0", "INS PrimitiveType: boolean to MethodDeclaration at 1", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS SimpleName: children to Assignment: = at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS ExpressionStatement to Block at 2", "INS SimpleName: id to SingleVariableDeclaration at 1", "INS Modifier: public to TypeDeclaration: class at 1", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleType: SourceLocation to SingleVariableDeclaration at 0", "INS SimpleName: sb to VariableDeclarationFragment at 0", "INS SimpleName: ERROR to VariableDeclarationFragment at 0", "INS SimpleName: children to ClassInstanceCreation at 7", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Modifier: private to MethodDeclaration at 0", "INS TagElement: @link to TagElement at 1", "INS SimpleType: MsgHtmlTagNode to VariableDeclarationStatement at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: children to SingleVariableDeclaration at 1", "INS MethodDeclaration to TypeDeclaration: class at 11", "INS SimpleType: List to ParameterizedType: List<String> at 0", "INS SimpleName: SourceLocation to SimpleType: SourceLocation at 0", "INS Block to IfStatement at 1", "INS SimpleName: errorReporter to SingleVariableDeclaration at 1", "INS SimpleName: StandaloneNode to SimpleType: StandaloneNode at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleType: MsgHtmlTagNode to VariableDeclarationStatement at 0", "INS ThisExpression to FieldAccess at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: SoySyntaxException to MethodDeclaration at 2", "MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 2", "MOV Modifier: public to MethodDeclaration at 1", "MOV SingleVariableDeclaration to MethodDeclaration at 8"]}, {"root": "UPDATE from Node representing an HTML tag within a 'msg' statement/block. to Node representing an HTML tag within a ", "operations": ["UPD TextElement: Node representing an HTML tag within a 'msg' statement/block. from Node representing an HTML tag within a 'msg' statement/block. to Node representing an HTML tag within a "]}, {"root": "INS TagElement: @code to TagElement at 1", "operations": ["INS TextElement:  msg to TagElement: @code at 0", "INS TagElement: @code to TagElement at 1"]}, {"root": "INS TextElement:  statement/block. to TagElement at 2", "operations": ["INS TextElement:  statement/block. to TagElement at 2"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV ExpressionStatement to Block at 1", "MOV IfStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 1", "MOV SuperConstructorInvocation to Block at 0", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 0"]}, {"root": "UPDATE from SoySyntaxException to MsgHtmlTagNode", "operations": ["UPD SimpleType: SoySyntaxException from SoySyntaxException to MsgHtmlTagNode", "UPD SimpleName: SoySyntaxException from SoySyntaxException to MsgHtmlTagNode"]}, {"root": "UPDATE from @throws to @param", "operations": ["UPD TagElement: @throws from @throws to @param"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 2", "MOV IfStatement to Block at 0", "MOV VariableDeclarationStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 4", "MOV VariableDeclarationStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 2", "MOV IfStatement to Block at 0", "MOV ExpressionStatement to Block at 3", "MOV ExpressionStatement to Block at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0", "MOV MethodInvocation to ReturnStatement at 0"]}, {"root": "MOVE from ReturnStatement", "operations": ["MOV MethodInvocation to ReturnStatement at 0", "MOV FieldAccess to Assignment: = at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV FieldAccess to Assignment: = at 0"]}, {"root": "UPDATE from  The id for this node. to  The node's id.", "operations": ["UPD TextElement:  The id for this node. from  The id for this node. to  The node's id."]}, {"root": "UPDATE from  The children nodes representing the content of this HTML tag. The first and to  The node's children.", "operations": ["UPD TextElement:  The children nodes representing the content of this HTML tag. The first and from  The children nodes representing the content of this HTML tag. The first and to  The node's children."]}, {"root": "UPDATE from SoySyntaxException to sourceLocation", "operations": ["UPD SimpleName: SoySyntaxException from SoySyntaxException to sourceLocation"]}, {"root": "UPDATE from  If a syntax error is found. to  The node's source location.", "operations": ["UPD TextElement:  If a syntax error is found. from  If a syntax error is found. to  The node's source location."]}, {"root": "INS SimpleType: Checkpoint to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: Checkpoint to VariableDeclarationStatement at 0", "INS SimpleName: Checkpoint to SimpleType: Checkpoint at 0"]}, {"root": "INS SimpleType: String to VariableDeclarationStatement at 0", "operations": ["INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS PrimitiveType: boolean to VariableDeclarationStatement at 0", "operations": ["INS PrimitiveType: boolean to VariableDeclarationStatement at 0"]}, {"root": "INS InfixExpression: == to IfStatement at 0", "operations": ["INS MethodInvocation to InfixExpression: == at 0", "INS SimpleName: size to MethodInvocation at 1", "INS NumberLiteral: 1 to InfixExpression: == at 1", "INS InfixExpression: == to IfStatement at 0", "INS SimpleName: children to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV PrefixExpression: ! to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "UPDATE from userSuppliedPlaceholderName to checkpoint", "operations": ["UPD SimpleName: userSuppliedPlaceholderName from userSuppliedPlaceholderName to checkpoint"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: errorReporter to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: checkpoint to MethodInvocation at 1"]}, {"root": "UPDATE from child to lcTagName", "operations": ["UPD SimpleName: child from child to lcTagName"]}, {"root": "UPDATE from didReplaceChild to selfEnding", "operations": ["UPD SimpleName: didReplaceChild from didReplaceChild to selfEnding"]}, {"root": "INS MethodInvocation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: isSelfEnding to MethodInvocation at 0"]}, {"root": "UPDATE from rawText to isOnlyRawText", "operations": ["UPD SimpleName: rawText from rawText to isOnlyRawText"]}, {"root": "INS InfixExpression: == to VariableDeclarationFragment at 1", "operations": ["INS NumberLiteral: 1 to InfixExpression: == at 1", "INS SimpleName: children to MethodInvocation at 0", "INS InfixExpression: == to VariableDeclarationFragment at 1", "INS MethodInvocation to InfixExpression: == at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS SimpleName: report to MethodInvocation at 1", "INS IfStatement to Block at 0", "INS SimpleName: sourceLocation to MethodInvocation at 3", "INS SimpleName: sourceLocation to MethodInvocation at 3", "INS ExpressionStatement to Block at 0", "INS SimpleName: SoySyntaxException to MethodInvocation at 0", "INS SimpleName: createWithMetaInfo to MethodInvocation at 1", "INS SimpleName: errorReporter to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS Block to IfStatement at 2", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: StandaloneNode to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from userSuppliedPlaceholderName to children", "operations": ["UPD SimpleName: userSuppliedPlaceholderName from userSuppliedPlaceholderName to children"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: transformedChildren to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: build to MethodInvocation at 1"]}, {"root": "UPDATE from child to Iterables", "operations": ["UPD SimpleName: child from child to Iterables"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getId to MethodInvocation at 1", "MOV SimpleName: child to MethodInvocation at 0"]}, {"root": "UPDATE from getId to getFirst", "operations": ["UPD SimpleName: getId from getId to getFirst"]}, {"root": "INS ReturnStatement to Block at 0", "operations": ["INS SimpleName: node to ReturnStatement at 0", "INS ReturnStatement to Block at 0"]}, {"root": "UPDATE from addChildren to errorReporter", "operations": ["UPD SimpleName: addChildren from addChildren to errorReporter", "UPD SimpleName: matcher from matcher to errorReporter", "UPD SimpleName: get from get to errorReporter"]}, {"root": "UPDATE from children to throwIfErrorsPresent", "operations": ["UPD SimpleName: children from children to throwIfErrorsPresent"]}, {"root": "UPDATE from children to computeLcTagName", "operations": ["UPD SimpleName: children from children to computeLcTagName"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "UPDATE from replaceFirst to getRawText", "operations": ["UPD SimpleName: replaceFirst from replaceFirst to getRawText"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: replaceFirst to MethodInvocation at 1"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: RawTextNode to ClassInstanceCreation at 0"]}, {"root": "UPDATE from getRawText to size", "operations": ["UPD SimpleName: getRawText from getRawText to size"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getRawText to MethodInvocation at 1"]}, {"root": "INS SimpleName: fullTagText to Assignment: = at 0", "operations": ["INS SimpleName: fullTagText to Assignment: = at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS SimpleName: report to MethodInvocation at 1", "INS SimpleName: sourceLocation to MethodInvocation at 3", "INS StringLiteral: \"'phname' attribute is not a valid identifier\" to MethodInvocation at 2", "INS SimpleName: errorReporter to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from child to node", "operations": ["UPD SimpleName: child from child to node", "UPD SimpleName: SoySyntaxException from SoySyntaxException to node"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: RawTextNode to ClassInstanceCreation at 0"]}, {"root": "UPDATE from userSuppliedPlaceholderName to name", "operations": ["UPD SimpleName: userSuppliedPlaceholderName from userSuppliedPlaceholderName to name"]}, {"root": "MOVE from CastExpression", "operations": ["MOV SimpleType: RawTextNode to CastExpression at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: matcher to MethodInvocation at 0", "INS SimpleName: appendReplacement to MethodInvocation at 1", "INS SimpleName: sb to MethodInvocation at 2", "INS StringLiteral: \"\" to MethodInvocation at 3"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: + to MethodInvocation at 2", "MOV SimpleName: createWithoutMetaInfo to MethodInvocation at 1", "MOV SimpleName: SoySyntaxException to MethodInvocation at 0"]}, {"root": "UPDATE from createWithoutMetaInfo to getId", "operations": ["UPD SimpleName: createWithoutMetaInfo from createWithoutMetaInfo to getId"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: matcher to MethodInvocation at 0", "MOV SimpleName: group to MethodInvocation at 1"]}, {"root": "UPDATE from group to report", "operations": ["UPD SimpleName: group from group to report"]}, {"root": "UPDATE from matcher to rawText", "operations": ["UPD SimpleName: matcher from matcher to rawText"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: matcher to MethodInvocation at 0", "MOV SimpleName: group to MethodInvocation at 1"]}, {"root": "UPDATE from group to length", "operations": ["UPD SimpleName: group from group to length"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "UPDATE from children to names", "operations": ["UPD SimpleName: children from children to names"]}, {"root": "UPDATE from set to add", "operations": ["UPD SimpleName: set from set to add"]}, {"root": "UPDATE from replacementChild to userSuppliedPlaceholderName", "operations": ["UPD SimpleName: replacementChild from replacementChild to userSuppliedPlaceholderName"]}, {"root": "UPDATE from SoySyntaxException to matcher", "operations": ["UPD SimpleName: SoySyntaxException from SoySyntaxException to matcher"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: createWithoutMetaInfo to MethodInvocation at 1", "MOV SimpleName: SoySyntaxException to MethodInvocation at 0", "MOV InfixExpression: + to MethodInvocation at 2"]}, {"root": "UPDATE from createWithoutMetaInfo to appendTail", "operations": ["UPD SimpleName: createWithoutMetaInfo from createWithoutMetaInfo to appendTail"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: SoySyntaxException to MethodInvocation at 0", "MOV SimpleName: createWithoutMetaInfo to MethodInvocation at 1"]}, {"root": "UPDATE from createWithoutMetaInfo to createWithMetaInfo", "operations": ["UPD SimpleName: createWithoutMetaInfo from createWithoutMetaInfo to createWithMetaInfo", "UPD SimpleName: createWithoutMetaInfo from createWithoutMetaInfo to createWithMetaInfo"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: createWithoutMetaInfo to MethodInvocation at 1", "MOV SimpleName: SoySyntaxException to MethodInvocation at 0"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Assignment: =", "DEL SimpleName: didReplaceChild", "DEL ExpressionStatement", "DEL Block", "DEL Block", "DEL Block", "DEL ThrowStatement", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: didReplaceChild", "DEL InfixExpression: ==", "DEL ExpressionStatement", "DEL ForStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: numChildren", "DEL InfixExpression: !=", "DEL MethodInvocation", "DEL ThrowStatement", "DEL SimpleName: userSuppliedPlaceholderName", "DEL IfStatement", "DEL Block", "DEL StringLiteral: \"\"", "DEL Block", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: replacementChild", "DEL SimpleName: rawText", "DEL Assignment: =", "DEL NumberLiteral: 1", "DEL SimpleName: i", "DEL SimpleName: didReplaceChild", "DEL VariableDeclarationFragment", "DEL SimpleName: i", "DEL IfStatement", "DEL SimpleName: MsgHtmlTagNode", "DEL MethodDeclaration", "DEL Block", "DEL VariableDeclarationExpression", "DEL MethodInvocation", "DEL NullLiteral", "DEL PostfixExpression: ++", "DEL IfStatement", "DEL SimpleName: numChildren", "DEL NumberLiteral: 0", "DEL BooleanLiteral: false", "DEL IfStatement", "DEL Assignment: =", "DEL InfixExpression: <", "DEL ExpressionStatement", "DEL BooleanLiteral: true", "DEL ExpressionStatement", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: i", "DEL ClassInstanceCreation", "DEL PrimitiveType: int", "DEL DoStatement", "DEL Assignment: ="]}, {"root": "DEL TextElement: last children must be RawTextNodes (can be the same node if there's only one child). If", "operations": ["DEL TextElement: last children must be RawTextNodes (can be the same node if there's only one child). If"]}, {"root": "DEL TextElement: there is any 'phname' attribute, it should not have been stripped out yet (this constructor", "operations": ["DEL TextElement: there is any 'phname' attribute, it should not have been stripped out yet (this constructor"]}, {"root": "DEL TextElement: will handle parsing and stripping any 'phname' attribute).", "operations": ["DEL TextElement: will handle parsing and stripping any 'phname' attribute)."]}, {"root": "DEL NullLiteral", "operations": ["DEL NullLiteral"]}, {"root": "DEL SimpleName: i", "operations": ["DEL SimpleName: i"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: child", "DEL MethodInvocation", "DEL CastExpression", "DEL ParenthesizedExpression"]}, {"root": "DEL FieldAccess", "operations": ["DEL ThisExpression", "DEL FieldAccess", "DEL SimpleName: isOnlyRawText"]}, {"root": "DEL Block", "operations": ["DEL NullLiteral", "DEL ExpressionStatement", "DEL FieldAccess", "DEL Block", "DEL ThisExpression", "DEL SimpleName: fullTagText", "DEL Assignment: ="]}, {"root": "DEL ThrowStatement", "operations": ["DEL StringLiteral: \"\\\").\"", "DEL ThrowStatement", "DEL StringLiteral: \"\\\" and phname=\\\"\"", "DEL SimpleName: userSuppliedPlaceholderName", "DEL StringLiteral: \"Found multiple 'phname' attributes in HTML tag (phname=\\\"\"", "DEL MethodInvocation", "DEL MethodInvocation", "DEL InfixExpression: +", "DEL NumberLiteral: 1"]}, {"root": "DEL ThrowStatement", "operations": ["DEL StringLiteral: \"Found 'phname' attribute in HTML tag that is not a valid identifier (phname=\\\"\"", "DEL ThrowStatement", "DEL InfixExpression: +", "DEL MethodInvocation", "DEL SimpleName: userSuppliedPlaceholderName", "DEL StringLiteral: \"\\\").\""]}, {"root": "DEL ContinueStatement", "operations": ["DEL ContinueStatement"]}, {"root": "DEL SimpleName: i", "operations": ["DEL SimpleName: i"]}, {"root": "DEL Assignment: =", "operations": ["DEL Assignment: =", "DEL SimpleName: replacementChild", "DEL SimpleName: child"]}, {"root": "DEL ThisExpression", "operations": ["DEL ThisExpression"]}]}}, {"MsgHtmlTagNode_diff": {"operations": ["Insert ImportDeclaration(3) into CompilationUnit(1192) at 1", "Insert ImportDeclaration(7) into CompilationUnit(1192) at 3", "Insert ImportDeclaration(9) into CompilationUnit(1192) at 4", "Insert ImportDeclaration(17) into CompilationUnit(1192) at 8", "Insert ImportDeclaration(19) into CompilationUnit(1192) at 9", "Insert ImportDeclaration(21) into CompilationUnit(1192) at 10", "Insert ImportDeclaration(25) into CompilationUnit(1192) at 12", "Insert QualifiedName: com.google.common.collect.ImmutableList(2) into ImportDeclaration(3) at 0", "Insert QualifiedName: com.google.common.collect.Iterables(6) into ImportDeclaration(7) at 0", "Insert QualifiedName: com.google.template.soy.base.SourceLocation(8) into ImportDeclaration(9) at 0", "Insert QualifiedName: com.google.template.soy.soyparse.ErrorReporter(16) into ImportDeclaration(17) at 0", "Insert QualifiedName: com.google.template.soy.soyparse.ErrorReporter.Checkpoint(18) into ImportDeclaration(19) at 0", "Insert QualifiedName: com.google.template.soy.soyparse.TransitionalThrowingErrorReporter(20) into ImportDeclaration(21) at 0", "Insert QualifiedName: java.util.ArrayList(24) into ImportDeclaration(25) at 0", "Insert Modifier: final(46) into TypeDeclaration: class(1191) at 2", "Move MarkerAnnotation(166) into FieldDeclaration(189) at 1", "Insert MethodDeclaration(269) into TypeDeclaration: class(1191) at 14", "Insert TypeDeclaration: class(1190) into TypeDeclaration: class(1191) at 25", "Insert Modifier: private(202) into MethodDeclaration(269) at 0", "Insert SimpleName: MsgHtmlTagNode(203) into MethodDeclaration(269) at 1", "Move SingleVariableDeclaration(201) into MethodDeclaration(269) at 2", "Insert SingleVariableDeclaration(210) into MethodDeclaration(269) at 3", "Insert SingleVariableDeclaration(214) into MethodDeclaration(269) at 4", "Insert SingleVariableDeclaration(217) into MethodDeclaration(269) at 5", "Insert SingleVariableDeclaration(220) into MethodDeclaration(269) at 6", "Insert SingleVariableDeclaration(224) into MethodDeclaration(269) at 7", "Move SingleVariableDeclaration(208) into MethodDeclaration(269) at 8", "Insert Block(268) into MethodDeclaration(269) at 9", "Insert Javadoc(594) into TypeDeclaration: class(1190) at 0", "Insert Modifier: public(595) into TypeDeclaration: class(1190) at 1", "Insert Modifier: static(596) into TypeDeclaration: class(1190) at 2", "Insert Modifier: final(597) into TypeDeclaration: class(1190) at 3", "Insert SimpleName: Builder(598) into TypeDeclaration: class(1190) at 4", "Insert FieldDeclaration(625) into TypeDeclaration: class(1190) at 5", "Insert FieldDeclaration(631) into TypeDeclaration: class(1190) at 6", "Insert FieldDeclaration(640) into TypeDeclaration: class(1190) at 7", "Insert FieldDeclaration(647) into TypeDeclaration: class(1190) at 8", "Insert MethodDeclaration(693) into TypeDeclaration: class(1190) at 9", "Insert MethodDeclaration(789) into TypeDeclaration: class(1190) at 10", "Insert MethodDeclaration(823) into TypeDeclaration: class(1190) at 11", "Insert MethodDeclaration(872) into TypeDeclaration: class(1190) at 12", "Insert MethodDeclaration(948) into TypeDeclaration: class(1190) at 13", "Insert MethodDeclaration(1050) into TypeDeclaration: class(1190) at 14", "Insert MethodDeclaration(1161) into TypeDeclaration: class(1190) at 15", "Insert MethodDeclaration(1189) into TypeDeclaration: class(1190) at 16", "Update TextElement: Node representing an HTML tag within a 'msg' statement/block.(24) to Node representing an HTML tag within a ", "Insert TagElement: @code(40) into TagElement(43) at 1", "Insert TextElement:  statement/block.(41) into TagElement(43) at 2", "Insert SimpleType: String(208) into SingleVariableDeclaration(210) at 0", "Insert SimpleName: userSuppliedPlaceholderName(209) into SingleVariableDeclaration(210) at 1", "Move SimpleType: String(259) into SingleVariableDeclaration(214) at 0", "Insert SimpleName: lcTagName(213) into SingleVariableDeclaration(214) at 1", "Insert PrimitiveType: boolean(215) into SingleVariableDeclaration(217) at 0", "Insert SimpleName: isSelfEnding(216) into SingleVariableDeclaration(217) at 1", "Insert PrimitiveType: boolean(218) into SingleVariableDeclaration(220) at 0", "Insert SimpleName: isOnlyRawText(219) into SingleVariableDeclaration(220) at 1", "Move SimpleType: String(221) into SingleVariableDeclaration(224) at 0", "Insert SimpleName: fullTagText(223) into SingleVariableDeclaration(224) at 1", "Move SuperConstructorInvocation(212) into Block(268) at 0", "Move ExpressionStatement(371) into Block(268) at 1", "Insert ExpressionStatement(245) into Block(268) at 2", "Insert ExpressionStatement(251) into Block(268) at 3", "Insert ExpressionStatement(257) into Block(268) at 4", "Insert ExpressionStatement(263) into Block(268) at 5", "Insert ExpressionStatement(267) into Block(268) at 6", "Insert TagElement(593) into Javadoc(594) at 0", "Insert Modifier: public(599) into FieldDeclaration(625) at 0", "Insert Modifier: static(600) into FieldDeclaration(625) at 1", "Insert Modifier: final(601) into FieldDeclaration(625) at 2", "Insert SimpleType: MsgHtmlTagNode(603) into FieldDeclaration(625) at 3", "Insert VariableDeclarationFragment(624) into FieldDeclaration(625) at 4", "Insert Modifier: private(626) into FieldDeclaration(631) at 0", "Insert Modifier: final(627) into FieldDeclaration(631) at 1", "Insert PrimitiveType: int(628) into FieldDeclaration(631) at 2", "Insert VariableDeclarationFragment(630) into FieldDeclaration(631) at 3", "Insert Modifier: private(632) into FieldDeclaration(640) at 0", "Insert ParameterizedType: ImmutableList<StandaloneNode>(637) into FieldDeclaration(640) at 1", "Insert VariableDeclarationFragment(639) into FieldDeclaration(640) at 2", "Insert Modifier: private(641) into FieldDeclaration(647) at 0", "Insert Modifier: final(642) into FieldDeclaration(647) at 1", "Insert SimpleType: SourceLocation(644) into FieldDeclaration(647) at 2", "Insert VariableDeclarationFragment(646) into FieldDeclaration(647) at 3", "Move Javadoc(196) into MethodDeclaration(693) at 0", "Move Modifier: public(197) into MethodDeclaration(693) at 1", "Insert SimpleName: Builder(659) into MethodDeclaration(693) at 2", "Insert SingleVariableDeclaration(662) into MethodDeclaration(693) at 3", "Insert SingleVariableDeclaration(669) into MethodDeclaration(693) at 4", "Insert SingleVariableDeclaration(673) into MethodDeclaration(693) at 5", "Insert Block(692) into MethodDeclaration(693) at 6", "Insert Javadoc(703) into MethodDeclaration(789) at 0", "Insert Modifier: public(704) into MethodDeclaration(789) at 1", "Update SimpleType: SoySyntaxException(210) to MsgHtmlTagNode", "Move SimpleType: SoySyntaxException(210) into MethodDeclaration(789) at 2", "Insert SimpleName: build(707) into MethodDeclaration(789) at 3", "Insert SingleVariableDeclaration(711) into MethodDeclaration(789) at 4", "Insert Block(788) into MethodDeclaration(789) at 5", "Insert Modifier: private(790) into MethodDeclaration(823) at 0", "Insert PrimitiveType: boolean(791) into MethodDeclaration(823) at 1", "Insert SimpleName: isSelfEnding(792) into MethodDeclaration(823) at 2", "Insert Block(822) into MethodDeclaration(823) at 3", "Insert Modifier: private(824) into MethodDeclaration(872) at 0", "Insert SimpleType: String(826) into MethodDeclaration(872) at 1", "Insert SimpleName: computeFullTagText(827) into MethodDeclaration(872) at 2", "Insert Block(871) into MethodDeclaration(872) at 3", "Insert Modifier: private(873) into MethodDeclaration(948) at 0", "Insert SimpleType: String(875) into MethodDeclaration(948) at 1", "Insert SimpleName: computeLcTagName(876) into MethodDeclaration(948) at 2", "Insert SingleVariableDeclaration(880) into MethodDeclaration(948) at 3", "Insert Block(947) into MethodDeclaration(948) at 4", "Insert MarkerAnnotation(950) into MethodDeclaration(1050) at 0", "Insert Modifier: private(951) into MethodDeclaration(1050) at 1", "Insert SimpleType: String(953) into MethodDeclaration(1050) at 2", "Insert SimpleName: computePlaceholderName(954) into MethodDeclaration(1050) at 3", "Insert SingleVariableDeclaration(958) into MethodDeclaration(1050) at 4", "Insert Block(1049) into MethodDeclaration(1050) at 5", "Insert Modifier: private(1051) into MethodDeclaration(1161) at 0", "Insert Modifier: static(1052) into MethodDeclaration(1161) at 1", "Insert SimpleType: StandaloneNode(1054) into MethodDeclaration(1161) at 2", "Insert SimpleName: extractPlaceholderName(1055) into MethodDeclaration(1161) at 3", "Insert SingleVariableDeclaration(1059) into MethodDeclaration(1161) at 4", "Insert SingleVariableDeclaration(1066) into MethodDeclaration(1161) at 5", "Insert Block(1160) into MethodDeclaration(1161) at 6", "Insert Modifier: private(1162) into MethodDeclaration(1189) at 0", "Insert SimpleType: MsgHtmlTagNode(1164) into MethodDeclaration(1189) at 1", "Insert SimpleName: buildAndThrowIfInvalid(1165) into MethodDeclaration(1189) at 2", "Insert Block(1188) into MethodDeclaration(1189) at 3", "Insert TextElement:  msg(39) into TagElement: @code(40) at 0", "Insert SimpleName: String(207) into SimpleType: String(208) at 0", "Insert Assignment: =(244) into ExpressionStatement(245) at 0", "Insert Assignment: =(250) into ExpressionStatement(251) at 0", "Insert Assignment: =(256) into ExpressionStatement(257) at 0", "Insert Assignment: =(262) into ExpressionStatement(263) at 0", "Insert MethodInvocation(266) into ExpressionStatement(267) at 0", "Insert TextElement: Builder for (589) into TagElement(593) at 0", "Insert TagElement: @link(591) into TagElement(593) at 1", "Insert TextElement: .(592) into TagElement(593) at 2", "Insert SimpleName: MsgHtmlTagNode(602) into SimpleType: MsgHtmlTagNode(603) at 0", "Insert SimpleName: ERROR(604) into VariableDeclarationFragment(624) at 0", "Insert MethodInvocation(623) into VariableDeclarationFragment(624) at 1", "Insert SimpleName: id(629) into VariableDeclarationFragment(630) at 0", "Insert SimpleType: ImmutableList(634) into ParameterizedType: ImmutableList<StandaloneNode>(637) at 0", "Insert SimpleType: StandaloneNode(636) into ParameterizedType: ImmutableList<StandaloneNode>(637) at 1", "Insert SimpleName: children(638) into VariableDeclarationFragment(639) at 0", "Insert SimpleName: SourceLocation(643) into SimpleType: SourceLocation(644) at 0", "Insert SimpleName: sourceLocation(645) into VariableDeclarationFragment(646) at 0", "Update TagElement: @throws(195) to @param", "Insert PrimitiveType: int(660) into SingleVariableDeclaration(662) at 0", "Insert SimpleName: id(661) into SingleVariableDeclaration(662) at 1", "Insert ParameterizedType: ImmutableList<StandaloneNode>(667) into SingleVariableDeclaration(669) at 0", "Insert SimpleName: children(668) into SingleVariableDeclaration(669) at 1", "Insert SimpleType: SourceLocation(671) into SingleVariableDeclaration(673) at 0", "Insert SimpleName: sourceLocation(672) into SingleVariableDeclaration(673) at 1", "Insert ExpressionStatement(679) into Block(692) at 0", "Insert ExpressionStatement(685) into Block(692) at 1", "Insert ExpressionStatement(691) into Block(692) at 2", "Insert TagElement(702) into Javadoc(703) at 0", "Update SimpleName: SoySyntaxException(209) to MsgHtmlTagNode", "Insert SimpleType: ErrorReporter(709) into SingleVariableDeclaration(711) at 0", "Insert SimpleName: errorReporter(710) into SingleVariableDeclaration(711) at 1", "Move VariableDeclarationStatement(225) into Block(788) at 0", "Insert VariableDeclarationStatement(727) into Block(788) at 1", "Move VariableDeclarationStatement(244) into Block(788) at 2", "Move VariableDeclarationStatement(257) into Block(788) at 3", "Move VariableDeclarationStatement(269) into Block(788) at 4", "Insert VariableDeclarationStatement(757) into Block(788) at 5", "Insert IfStatement(765) into Block(788) at 6", "Insert VariableDeclarationStatement(780) into Block(788) at 7", "Insert ExpressionStatement(785) into Block(788) at 8", "Insert ReturnStatement(787) into Block(788) at 9", "Move VariableDeclarationStatement(219) into Block(822) at 0", "Move VariableDeclarationStatement(450) into Block(822) at 1", "Insert ReturnStatement(821) into Block(822) at 2", "Insert SimpleName: String(825) into SimpleType: String(826) at 0", "Insert VariableDeclarationStatement(833) into Block(871) at 0", "Move IfStatement(509) into Block(871) at 1", "Insert ReturnStatement(870) into Block(871) at 2", "Insert SimpleName: String(874) into SimpleType: String(875) at 0", "Insert SimpleType: ErrorReporter(878) into SingleVariableDeclaration(880) at 0", "Insert SimpleName: errorReporter(879) into SingleVariableDeclaration(880) at 1", "Move VariableDeclarationStatement(386) into Block(947) at 0", "Move VariableDeclarationStatement(395) into Block(947) at 1", "Insert IfStatement(939) into Block(947) at 2", "Insert ReturnStatement(946) into Block(947) at 3", "Insert SimpleName: Nullable(949) into MarkerAnnotation(950) at 0", "Insert SimpleName: String(952) into SimpleType: String(953) at 0", "Insert SimpleType: ErrorReporter(956) into SingleVariableDeclaration(958) at 0", "Insert SimpleName: errorReporter(957) into SingleVariableDeclaration(958) at 1", "Insert VariableDeclarationStatement(970) into Block(1049) at 0", "Insert VariableDeclarationStatement(982) into Block(1049) at 1", "Insert EnhancedForStatement(997) into Block(1049) at 2", "Move ExpressionStatement(306) into Block(1049) at 3", "Insert EnhancedForStatement(1026) into Block(1049) at 4", "Insert IfStatement(1042) into Block(1049) at 5", "Insert ReturnStatement(1048) into Block(1049) at 6", "Insert SimpleName: StandaloneNode(1053) into SimpleType: StandaloneNode(1054) at 0", "Insert SimpleType: StandaloneNode(1057) into SingleVariableDeclaration(1059) at 0", "Insert SimpleName: node(1058) into SingleVariableDeclaration(1059) at 1", "Insert ParameterizedType: List<String>(1064) into SingleVariableDeclaration(1066) at 0", "Insert SimpleName: names(1065) into SingleVariableDeclaration(1066) at 1", "Move IfStatement(253) into Block(1160) at 0", "Insert VariableDeclarationStatement(1088) into Block(1160) at 1", "Move VariableDeclarationStatement(278) into Block(1160) at 2", "Insert IfStatement(1157) into Block(1160) at 3", "Insert ReturnStatement(1159) into Block(1160) at 4", "Insert SimpleName: MsgHtmlTagNode(1163) into SimpleType: MsgHtmlTagNode(1164) at 0", "Insert VariableDeclarationStatement(1173) into Block(1188) at 0", "Insert VariableDeclarationStatement(1181) into Block(1188) at 1", "Move ExpressionStatement(514) into Block(1188) at 2", "Insert ReturnStatement(1187) into Block(1188) at 3", "Move FieldAccess(425) into Assignment: =(244) at 0", "Insert SimpleName: lcTagName(243) into Assignment: =(244) at 1", "Move FieldAccess(453) into Assignment: =(250) at 0", "Insert SimpleName: isSelfEnding(249) into Assignment: =(250) at 1", "Move FieldAccess(462) into Assignment: =(256) at 0", "Insert SimpleName: isOnlyRawText(255) into Assignment: =(256) at 1", "Move FieldAccess(495) into Assignment: =(262) at 0", "Insert SimpleName: fullTagText(261) into Assignment: =(262) at 1", "Insert SimpleName: addChildren(264) into MethodInvocation(266) at 0", "Insert SimpleName: children(265) into MethodInvocation(266) at 1", "Insert SimpleName: MsgHtmlTagNode(590) into TagElement: @link(591) at 0", "Insert ClassInstanceCreation(621) into MethodInvocation(623) at 0", "Insert SimpleName: buildAndThrowIfInvalid(622) into MethodInvocation(623) at 1", "Insert SimpleName: ImmutableList(633) into SimpleType: ImmutableList(634) at 0", "Insert SimpleName: StandaloneNode(635) into SimpleType: StandaloneNode(636) at 0", "Update TextElement:  The id for this node.(185) to  The node's id.", "Update TextElement:  The children nodes representing the content of this HTML tag. The first and(188) to  The node's children.", "Update SimpleName: SoySyntaxException(193) to sourceLocation", "Update TextElement:  If a syntax error is found.(194) to  The node's source location.", "Insert SimpleType: ImmutableList(664) into ParameterizedType: ImmutableList<StandaloneNode>(667) at 0", "Insert SimpleType: StandaloneNode(666) into ParameterizedType: ImmutableList<StandaloneNode>(667) at 1", "Insert SimpleName: SourceLocation(670) into SimpleType: SourceLocation(671) at 0", "Insert Assignment: =(678) into ExpressionStatement(679) at 0", "Insert Assignment: =(684) into ExpressionStatement(685) at 0", "Insert Assignment: =(690) into ExpressionStatement(691) at 0", "Insert TextElement: Returns a new (694) into TagElement(702) at 0", "Insert TagElement: @link(696) into TagElement(702) at 1", "Insert TextElement:  built from the builder's state. If the builder's state(697) into TagElement(702) at 2", "Insert TextElement: is invalid, errors are reported to the (698) into TagElement(702) at 3", "Insert TagElement: @code(700) into TagElement(702) at 4", "Insert TextElement:  and {Builder#ERROR} is returned.(701) into TagElement(702) at 5", "Insert SimpleName: ErrorReporter(708) into SimpleType: ErrorReporter(709) at 0", "Insert SimpleType: Checkpoint(713) into VariableDeclarationStatement(719) at 0", "Insert SimpleType: String(721) into VariableDeclarationStatement(727) at 0", "Insert VariableDeclarationFragment(726) into VariableDeclarationStatement(727) at 1", "Insert SimpleType: String(729) into VariableDeclarationStatement(735) at 0", "Insert PrimitiveType: boolean(742) into VariableDeclarationStatement(750) at 0", "Insert SimpleType: String(752) into VariableDeclarationStatement(757) at 0", "Insert VariableDeclarationFragment(756) into VariableDeclarationStatement(757) at 1", "Insert MethodInvocation(761) into IfStatement(765) at 0", "Insert Block(764) into IfStatement(765) at 1", "Insert SimpleType: MsgHtmlTagNode(767) into VariableDeclarationStatement(780) at 0", "Insert VariableDeclarationFragment(779) into VariableDeclarationStatement(780) at 1", "Insert MethodInvocation(784) into ExpressionStatement(785) at 0", "Insert SimpleName: node(786) into ReturnStatement(787) at 0", "Move MethodInvocation(457) into ReturnStatement(821) at 0", "Insert SimpleType: String(829) into VariableDeclarationStatement(833) at 0", "Insert VariableDeclarationFragment(832) into VariableDeclarationStatement(833) at 1", "Insert InfixExpression: ==(838) into IfStatement(868) at 0", "Insert SimpleName: fullTagText(869) into ReturnStatement(870) at 0", "Insert SimpleName: ErrorReporter(877) into SimpleType: ErrorReporter(878) at 0", "Move PrefixExpression: !(399) into IfStatement(939) at 0", "Move Block(298) into IfStatement(939) at 1", "Move MethodInvocation(431) into ReturnStatement(946) at 0", "Insert SimpleName: ErrorReporter(955) into SimpleType: ErrorReporter(956) at 0", "Insert ParameterizedType: List<String>(963) into VariableDeclarationStatement(970) at 0", "Insert VariableDeclarationFragment(969) into VariableDeclarationStatement(970) at 1", "Insert ParameterizedType: ImmutableList.Builder<StandaloneNode>(975) into VariableDeclarationStatement(982) at 0", "Insert VariableDeclarationFragment(981) into VariableDeclarationStatement(982) at 1", "Insert SingleVariableDeclaration(986) into EnhancedForStatement(997) at 0", "Insert SimpleName: children(987) into EnhancedForStatement(997) at 1", "Insert Block(996) into EnhancedForStatement(997) at 2", "Insert SingleVariableDeclaration(1007) into EnhancedForStatement(1026) at 0", "Insert SimpleName: names(1008) into EnhancedForStatement(1026) at 1", "Insert Block(1025) into EnhancedForStatement(1026) at 2", "Insert InfixExpression: >(1031) into IfStatement(1042) at 0", "Insert Block(1041) into IfStatement(1042) at 1", "Insert MethodInvocation(1047) into ReturnStatement(1048) at 0", "Insert SimpleName: StandaloneNode(1056) into SimpleType: StandaloneNode(1057) at 0", "Insert SimpleType: List(1061) into ParameterizedType: List<String>(1064) at 0", "Insert SimpleType: String(1063) into ParameterizedType: List<String>(1064) at 1", "Insert SimpleType: String(1078) into VariableDeclarationStatement(1088) at 0", "Insert VariableDeclarationFragment(1087) into VariableDeclarationStatement(1088) at 1", "Move MethodInvocation(281) into IfStatement(1157) at 0", "Insert Block(1156) into IfStatement(1157) at 1", "Insert SimpleName: node(1158) into ReturnStatement(1159) at 0", "Insert SimpleType: TransitionalThrowingErrorReporter(1167) into VariableDeclarationStatement(1173) at 0", "Insert VariableDeclarationFragment(1172) into VariableDeclarationStatement(1173) at 1", "Insert SimpleType: MsgHtmlTagNode(1175) into VariableDeclarationStatement(1181) at 0", "Insert VariableDeclarationFragment(1180) into VariableDeclarationStatement(1181) at 1", "Insert SimpleName: node(1186) into ReturnStatement(1187) at 0", "Insert SimpleType: Builder(606) into ClassInstanceCreation(621) at 0", "Insert PrefixExpression: -(608) into ClassInstanceCreation(621) at 1", "Insert MethodInvocation(619) into ClassInstanceCreation(621) at 2", "Insert QualifiedName: SourceLocation.UNKNOWN(620) into ClassInstanceCreation(621) at 3", "Insert SimpleName: ImmutableList(663) into SimpleType: ImmutableList(664) at 0", "Insert SimpleName: StandaloneNode(665) into SimpleType: StandaloneNode(666) at 0", "Insert FieldAccess(676) into Assignment: =(678) at 0", "Insert SimpleName: id(677) into Assignment: =(678) at 1", "Insert FieldAccess(682) into Assignment: =(684) at 0", "Insert SimpleName: children(683) into Assignment: =(684) at 1", "Insert FieldAccess(688) into Assignment: =(690) at 0", "Insert SimpleName: sourceLocation(689) into Assignment: =(690) at 1", "Insert SimpleName: MsgHtmlTagNode(695) into TagElement: @link(696) at 0", "Insert TextElement:  errorManager(699) into TagElement: @code(700) at 0", "Insert SimpleName: Checkpoint(712) into SimpleType: Checkpoint(713) at 0", "Update SimpleName: userSuppliedPlaceholderName(222) to checkpoint", "Insert MethodInvocation(717) into VariableDeclarationFragment(718) at 1", "Insert SimpleName: String(720) into SimpleType: String(721) at 0", "Insert SimpleName: userSuppliedPlaceholderName(722) into VariableDeclarationFragment(726) at 0", "Insert MethodInvocation(725) into VariableDeclarationFragment(726) at 1", "Insert SimpleName: String(728) into SimpleType: String(729) at 0", "Update SimpleName: child(238) to lcTagName", "Update SimpleName: didReplaceChild(255) to selfEnding", "Insert MethodInvocation(739) into VariableDeclarationFragment(740) at 1", "Update SimpleName: rawText(260) to isOnlyRawText", "Insert InfixExpression: ==(748) into VariableDeclarationFragment(749) at 1", "Insert SimpleName: String(751) into SimpleType: String(752) at 0", "Insert SimpleName: fullTagText(753) into VariableDeclarationFragment(756) at 0", "Insert MethodInvocation(755) into VariableDeclarationFragment(756) at 1", "Insert SimpleName: errorReporter(758) into MethodInvocation(761) at 0", "Insert SimpleName: errorsSince(759) into MethodInvocation(761) at 1", "Insert SimpleName: checkpoint(760) into MethodInvocation(761) at 2", "Insert ReturnStatement(763) into Block(764) at 0", "Insert SimpleName: MsgHtmlTagNode(766) into SimpleType: MsgHtmlTagNode(767) at 0", "Insert SimpleName: node(768) into VariableDeclarationFragment(779) at 0", "Insert ClassInstanceCreation(778) into VariableDeclarationFragment(779) at 1", "Insert SimpleName: node(781) into MethodInvocation(784) at 0", "Insert SimpleName: setSourceLocation(782) into MethodInvocation(784) at 1", "Insert SimpleName: sourceLocation(783) into MethodInvocation(784) at 2", "Insert SimpleName: String(828) into SimpleType: String(829) at 0", "Insert SimpleName: fullTagText(830) into VariableDeclarationFragment(832) at 0", "Insert NullLiteral(831) into VariableDeclarationFragment(832) at 1", "Insert MethodInvocation(836) into InfixExpression: ==(838) at 0", "Insert NumberLiteral: 1(837) into InfixExpression: ==(838) at 1", "Insert IfStatement(937) into Block(938) at 0", "Insert SimpleType: List(960) into ParameterizedType: List<String>(963) at 0", "Insert SimpleType: String(962) into ParameterizedType: List<String>(963) at 1", "Insert SimpleName: names(964) into VariableDeclarationFragment(969) at 0", "Insert ClassInstanceCreation(968) into VariableDeclarationFragment(969) at 1", "Insert SimpleType: ImmutableList.Builder(972) into ParameterizedType: ImmutableList.Builder<StandaloneNode>(975) at 0", "Insert SimpleType: StandaloneNode(974) into ParameterizedType: ImmutableList.Builder<StandaloneNode>(975) at 1", "Insert SimpleName: transformedChildren(976) into VariableDeclarationFragment(981) at 0", "Insert ClassInstanceCreation(980) into VariableDeclarationFragment(981) at 1", "Move SimpleType: StandaloneNode(237) into SingleVariableDeclaration(986) at 0", "Insert SimpleName: child(985) into SingleVariableDeclaration(986) at 1", "Insert ExpressionStatement(995) into Block(996) at 0", "Update SimpleName: userSuppliedPlaceholderName(300) to children", "Insert MethodInvocation(1001) into Assignment: =(1002) at 1", "Insert SimpleType: String(1005) into SingleVariableDeclaration(1007) at 0", "Insert SimpleName: name(1006) into SingleVariableDeclaration(1007) at 1", "Move IfStatement(321) into Block(1025) at 0", "Insert MethodInvocation(1029) into InfixExpression: >(1031) at 0", "Insert NumberLiteral: 1(1030) into InfixExpression: >(1031) at 1", "Insert ExpressionStatement(1040) into Block(1041) at 0", "Update SimpleName: child(327) to Iterables", "Move SimpleName: child(327) into MethodInvocation(1047) at 0", "Update SimpleName: getId(328) to getFirst", "Move SimpleName: getId(328) into MethodInvocation(1047) at 1", "Insert SimpleName: names(1045) into MethodInvocation(1047) at 2", "Insert NullLiteral(1046) into MethodInvocation(1047) at 3", "Insert SimpleName: List(1060) into SimpleType: List(1061) at 0", "Insert SimpleName: String(1062) into SimpleType: String(1063) at 0", "Insert ReturnStatement(1074) into Block(1075) at 0", "Insert SimpleName: String(1077) into SimpleType: String(1078) at 0", "Insert SimpleName: rawText(1079) into VariableDeclarationFragment(1087) at 0", "Insert MethodInvocation(1086) into VariableDeclarationFragment(1087) at 1", "Insert VariableDeclarationStatement(1111) into Block(1156) at 0", "Insert DoStatement(1136) into Block(1156) at 1", "Insert VariableDeclarationStatement(1147) into Block(1156) at 2", "Insert ReturnStatement(1155) into Block(1156) at 3", "Insert SimpleName: TransitionalThrowingErrorReporter(1166) into SimpleType: TransitionalThrowingErrorReporter(1167) at 0", "Insert SimpleName: errorReporter(1168) into VariableDeclarationFragment(1172) at 0", "Insert ClassInstanceCreation(1171) into VariableDeclarationFragment(1172) at 1", "Insert SimpleName: MsgHtmlTagNode(1174) into SimpleType: MsgHtmlTagNode(1175) at 0", "Insert SimpleName: node(1176) into VariableDeclarationFragment(1180) at 0", "Insert MethodInvocation(1179) into VariableDeclarationFragment(1180) at 1", "Update SimpleName: addChildren(511) to errorReporter", "Update SimpleName: children(512) to throwIfErrorsPresent", "Insert SimpleName: Builder(605) into SimpleType: Builder(606) at 0", "Insert NumberLiteral: 1(607) into PrefixExpression: -(608) at 0", "Insert SimpleName: ImmutableList(609) into MethodInvocation(619) at 0", "Insert SimpleType: StandaloneNode(611) into MethodInvocation(619) at 1", "Insert SimpleName: of(612) into MethodInvocation(619) at 2", "Insert ClassInstanceCreation(618) into MethodInvocation(619) at 3", "Insert ThisExpression(674) into FieldAccess(676) at 0", "Insert SimpleName: id(675) into FieldAccess(676) at 1", "Insert ThisExpression(680) into FieldAccess(682) at 0", "Insert SimpleName: children(681) into FieldAccess(682) at 1", "Insert ThisExpression(686) into FieldAccess(688) at 0", "Insert SimpleName: sourceLocation(687) into FieldAccess(688) at 1", "Insert SimpleName: errorReporter(715) into MethodInvocation(717) at 0", "Insert SimpleName: checkpoint(716) into MethodInvocation(717) at 1", "Insert SimpleName: computePlaceholderName(723) into MethodInvocation(725) at 0", "Insert SimpleName: errorReporter(724) into MethodInvocation(725) at 1", "Update SimpleName: children(239) to computeLcTagName", "Update SimpleName: get(240) to errorReporter", "Insert SimpleName: isSelfEnding(738) into MethodInvocation(739) at 0", "Insert MethodInvocation(746) into InfixExpression: ==(748) at 0", "Insert NumberLiteral: 1(747) into InfixExpression: ==(748) at 1", "Insert SimpleName: computeFullTagText(754) into MethodInvocation(755) at 0", "Insert SimpleName: ERROR(762) into ReturnStatement(763) at 0", "Insert SimpleType: MsgHtmlTagNode(770) into ClassInstanceCreation(778) at 0", "Insert SimpleName: id(771) into ClassInstanceCreation(778) at 1", "Insert SimpleName: userSuppliedPlaceholderName(772) into ClassInstanceCreation(778) at 2", "Insert SimpleName: lcTagName(773) into ClassInstanceCreation(778) at 3", "Insert SimpleName: selfEnding(774) into ClassInstanceCreation(778) at 4", "Insert SimpleName: isOnlyRawText(775) into ClassInstanceCreation(778) at 5", "Insert SimpleName: fullTagText(776) into ClassInstanceCreation(778) at 6", "Insert SimpleName: children(777) into ClassInstanceCreation(778) at 7", "Insert SimpleName: children(834) into MethodInvocation(836) at 0", "Insert SimpleName: size(835) into MethodInvocation(836) at 1", "Move MethodInvocation(403) into IfStatement(937) at 0", "Insert Block(924) into IfStatement(937) at 1", "Insert Block(936) into IfStatement(937) at 2", "Insert SimpleName: List(959) into SimpleType: List(960) at 0", "Insert SimpleName: String(961) into SimpleType: String(962) at 0", "Insert ParameterizedType: ArrayList<>(967) into ClassInstanceCreation(968) at 0", "Insert QualifiedName: ImmutableList.Builder(971) into SimpleType: ImmutableList.Builder(972) at 0", "Insert SimpleName: StandaloneNode(973) into SimpleType: StandaloneNode(974) at 0", "Insert ParameterizedType: ImmutableList.Builder<>(979) into ClassInstanceCreation(980) at 0", "Insert MethodInvocation(994) into ExpressionStatement(995) at 0", "Insert SimpleName: transformedChildren(999) into MethodInvocation(1001) at 0", "Insert SimpleName: build(1000) into MethodInvocation(1001) at 1", "Insert SimpleName: String(1004) into SimpleType: String(1005) at 0", "Insert SimpleName: names(1027) into MethodInvocation(1029) at 0", "Insert SimpleName: size(1028) into MethodInvocation(1029) at 1", "Insert MethodInvocation(1039) into ExpressionStatement(1040) at 0", "Insert SimpleName: node(1073) into ReturnStatement(1074) at 0", "Insert ParenthesizedExpression(1084) into MethodInvocation(1086) at 0", "Update SimpleName: replaceFirst(331) to getRawText", "Move SimpleName: replaceFirst(331) into MethodInvocation(1086) at 1", "Insert SimpleType: StringBuilder(1102) into VariableDeclarationStatement(1111) at 0", "Insert VariableDeclarationFragment(1110) into VariableDeclarationStatement(1111) at 1", "Insert Block(1132) into DoStatement(1136) at 0", "Insert MethodInvocation(1135) into DoStatement(1136) at 1", "Insert SimpleType: String(1138) into VariableDeclarationStatement(1147) at 0", "Insert VariableDeclarationFragment(1146) into VariableDeclarationStatement(1147) at 1", "Insert ClassInstanceCreation(1154) into ReturnStatement(1155) at 0", "Insert SimpleType: TransitionalThrowingErrorReporter(1170) into ClassInstanceCreation(1171) at 0", "Insert SimpleName: build(1177) into MethodInvocation(1179) at 0", "Insert SimpleName: errorReporter(1178) into MethodInvocation(1179) at 1", "Insert SimpleName: StandaloneNode(610) into SimpleType: StandaloneNode(611) at 0", "Move SimpleType: RawTextNode(326) into ClassInstanceCreation(618) at 0", "Insert PrefixExpression: -(616) into ClassInstanceCreation(618) at 1", "Insert StringLiteral: \"<body/>\"(617) into ClassInstanceCreation(618) at 2", "Insert SimpleName: children(744) into MethodInvocation(746) at 0", "Update SimpleName: getRawText(266) to size", "Move SimpleName: getRawText(266) into MethodInvocation(746) at 1", "Insert SimpleName: MsgHtmlTagNode(769) into SimpleType: MsgHtmlTagNode(770) at 0", "Insert SimpleName: fullTagText(861) into Assignment: =(865) at 0", "Insert ExpressionStatement(923) into Block(924) at 0", "Insert ExpressionStatement(935) into Block(936) at 0", "Insert SimpleType: ArrayList(966) into ParameterizedType: ArrayList<>(967) at 0", "Insert SimpleType: ImmutableList.Builder(978) into ParameterizedType: ImmutableList.Builder<>(979) at 0", "Insert SimpleName: transformedChildren(988) into MethodInvocation(994) at 0", "Insert SimpleName: add(989) into MethodInvocation(994) at 1", "Insert MethodInvocation(993) into MethodInvocation(994) at 2", "Insert ExpressionStatement(1022) into Block(1023) at 0", "Insert SimpleName: errorReporter(1032) into MethodInvocation(1039) at 0", "Insert SimpleName: report(1033) into MethodInvocation(1039) at 1", "Insert MethodInvocation(1038) into MethodInvocation(1039) at 2", "Update SimpleName: child(245) to node", "Insert CastExpression(1083) into ParenthesizedExpression(1084) at 0", "Insert SimpleName: StringBuilder(1101) into SimpleType: StringBuilder(1102) at 0", "Insert SimpleName: sb(1103) into VariableDeclarationFragment(1110) at 0", "Insert ClassInstanceCreation(1109) into VariableDeclarationFragment(1110) at 1", "Insert VariableDeclarationStatement(1120) into Block(1132) at 0", "Move ExpressionStatement(345) into Block(1132) at 1", "Move ExpressionStatement(349) into Block(1132) at 2", "Insert SimpleName: matcher(1133) into MethodInvocation(1135) at 0", "Insert SimpleName: find(1134) into MethodInvocation(1135) at 1", "Insert SimpleName: String(1137) into SimpleType: String(1138) at 0", "Insert SimpleName: replacementText(1139) into VariableDeclarationFragment(1146) at 0", "Insert MethodInvocation(1145) into VariableDeclarationFragment(1146) at 1", "Move SimpleType: RawTextNode(262) into ClassInstanceCreation(1154) at 0", "Insert MethodInvocation(1152) into ClassInstanceCreation(1154) at 1", "Insert SimpleName: replacementText(1153) into ClassInstanceCreation(1154) at 2", "Insert SimpleName: TransitionalThrowingErrorReporter(1169) into SimpleType: TransitionalThrowingErrorReporter(1170) at 0", "Insert NumberLiteral: 1(615) into PrefixExpression: -(616) at 0", "Insert MethodInvocation(922) into ExpressionStatement(923) at 0", "Insert MethodInvocation(934) into ExpressionStatement(935) at 0", "Insert SimpleName: ArrayList(965) into SimpleType: ArrayList(966) at 0", "Insert QualifiedName: ImmutableList.Builder(977) into SimpleType: ImmutableList.Builder(978) at 0", "Insert SimpleName: extractPlaceholderName(990) into MethodInvocation(993) at 0", "Insert SimpleName: child(991) into MethodInvocation(993) at 1", "Insert SimpleName: names(992) into MethodInvocation(993) at 2", "Update SimpleName: userSuppliedPlaceholderName(309) to name", "Insert MethodInvocation(1021) into ExpressionStatement(1022) at 0", "Insert SimpleName: SoySyntaxException(1034) into MethodInvocation(1038) at 0", "Insert SimpleName: createWithMetaInfo(1035) into MethodInvocation(1038) at 1", "Insert StringLiteral: \"Multiple 'phname' attributes in HTML tag.\"(1036) into MethodInvocation(1038) at 2", "Insert SimpleName: sourceLocation(1037) into MethodInvocation(1038) at 3", "Move SimpleType: RawTextNode(323) into CastExpression(1083) at 0", "Insert SimpleName: node(1082) into CastExpression(1083) at 1", "Insert SimpleType: StringBuilder(1105) into ClassInstanceCreation(1109) at 0", "Insert MethodInvocation(1108) into ClassInstanceCreation(1109) at 1", "Insert SimpleType: String(1113) into VariableDeclarationStatement(1120) at 0", "Insert VariableDeclarationFragment(1119) into VariableDeclarationStatement(1120) at 1", "Insert MethodInvocation(1130) into ExpressionStatement(1131) at 0", "Insert MethodInvocation(1143) into MethodInvocation(1145) at 0", "Insert SimpleName: toString(1144) into MethodInvocation(1145) at 1", "Update SimpleName: SoySyntaxException(412) to node", "Move SimpleName: SoySyntaxException(412) into MethodInvocation(1152) at 0", "Update SimpleName: createWithoutMetaInfo(413) to getId", "Move SimpleName: createWithoutMetaInfo(413) into MethodInvocation(1152) at 1", "Insert SimpleName: errorReporter(913) into MethodInvocation(922) at 0", "Insert SimpleName: report(914) into MethodInvocation(922) at 1", "Insert MethodInvocation(921) into MethodInvocation(922) at 2", "Update SimpleName: matcher(290) to errorReporter", "Move SimpleName: matcher(290) into MethodInvocation(934) at 0", "Update SimpleName: group(291) to report", "Move SimpleName: group(291) into MethodInvocation(934) at 1", "Insert MethodInvocation(933) into MethodInvocation(934) at 2", "Insert SimpleName: errorReporter(1014) into MethodInvocation(1021) at 0", "Insert SimpleName: report(1015) into MethodInvocation(1021) at 1", "Insert MethodInvocation(1020) into MethodInvocation(1021) at 2", "Insert SimpleName: StringBuilder(1104) into SimpleType: StringBuilder(1105) at 0", "Update SimpleName: matcher(332) to rawText", "Move SimpleName: matcher(332) into MethodInvocation(1108) at 0", "Update SimpleName: group(333) to length", "Move SimpleName: group(333) into MethodInvocation(1108) at 1", "Insert SimpleName: String(1112) into SimpleType: String(1113) at 0", "Insert SimpleName: userSuppliedPlaceholderName(1114) into VariableDeclarationFragment(1119) at 0", "Move MethodInvocation(304) into VariableDeclarationFragment(1119) at 1", "Update SimpleName: children(340) to names", "Update SimpleName: set(341) to add", "Update SimpleName: replacementChild(343) to userSuppliedPlaceholderName", "Insert SimpleName: matcher(1126) into MethodInvocation(1130) at 0", "Insert SimpleName: appendReplacement(1127) into MethodInvocation(1130) at 1", "Insert SimpleName: sb(1128) into MethodInvocation(1130) at 2", "Insert StringLiteral: \"\"(1129) into MethodInvocation(1130) at 3", "Update SimpleName: SoySyntaxException(404) to matcher", "Move SimpleName: SoySyntaxException(404) into MethodInvocation(1143) at 0", "Update SimpleName: createWithoutMetaInfo(405) to appendTail", "Move SimpleName: createWithoutMetaInfo(405) into MethodInvocation(1143) at 1", "Insert SimpleName: sb(1142) into MethodInvocation(1143) at 2", "Move SimpleName: SoySyntaxException(285) into MethodInvocation(921) at 0", "Update SimpleName: createWithoutMetaInfo(286) to createWithMetaInfo", "Move SimpleName: createWithoutMetaInfo(286) into MethodInvocation(921) at 1", "Move InfixExpression: +(408) into MethodInvocation(921) at 2", "Insert SimpleName: sourceLocation(920) into MethodInvocation(921) at 3", "Insert SimpleName: SoySyntaxException(927) into MethodInvocation(933) at 0", "Insert SimpleName: createWithMetaInfo(928) into MethodInvocation(933) at 1", "Move InfixExpression: +(416) into MethodInvocation(933) at 2", "Insert SimpleName: sourceLocation(932) into MethodInvocation(933) at 3", "Move SimpleName: SoySyntaxException(312) into MethodInvocation(1020) at 0", "Update SimpleName: createWithoutMetaInfo(313) to createWithMetaInfo", "Move SimpleName: createWithoutMetaInfo(313) into MethodInvocation(1020) at 1", "Insert StringLiteral: \"'phname' attribute is not a valid identifier\"(1018) into MethodInvocation(1020) at 2", "Insert SimpleName: sourceLocation(1019) into MethodInvocation(1020) at 3", "Delete SimpleName: MsgHtmlTagNode(198)", "Delete PrimitiveType: int(226)", "Delete SimpleName: i(227)", "Delete NumberLiteral: 0(228)", "Delete VariableDeclarationFragment(229)", "Delete VariableDeclarationExpression(230)", "Delete SimpleName: i(231)", "Delete SimpleName: numChildren(232)", "Delete InfixExpression: <(233)", "Delete SimpleName: i(234)", "Delete PostfixExpression: ++(235)", "Delete SimpleName: userSuppliedPlaceholderName(282)", "Delete NullLiteral(283)", "Delete InfixExpression: !=(284)", "Delete IfStatement(299)", "Delete SimpleName: replacementChild(324)", "Delete MethodInvocation(329)", "Delete SimpleName: rawText(330)", "Delete MethodInvocation(334)", "Delete StringLiteral: \"\"(335)", "Delete MethodInvocation(336)", "Delete ClassInstanceCreation(337)", "Delete VariableDeclarationFragment(338)", "Delete VariableDeclarationStatement(339)", "Delete SimpleName: didReplaceChild(350)", "Delete BooleanLiteral: true(351)", "Delete Assignment: =(352)", "Delete ExpressionStatement(353)", "Delete Block(354)", "Delete SimpleName: didReplaceChild(355)", "Delete BooleanLiteral: false(356)", "Delete Assignment: =(357)", "Delete ExpressionStatement(358)", "Delete Block(359)", "Delete IfStatement(360)", "Delete Block(361)", "Delete SimpleName: didReplaceChild(362)", "Delete DoStatement(363)", "Delete Block(364)", "Delete ForStatement(365)", "Delete MethodInvocation(409)", "Delete ThrowStatement(410)", "Delete Block(411)", "Delete MethodInvocation(417)", "Delete ThrowStatement(418)", "Delete Block(419)", "Delete IfStatement(420)", "Delete Block(421)", "Delete IfStatement(422)", "Delete Assignment: =(432)", "Delete ExpressionStatement(433)", "Delete Assignment: =(458)", "Delete ExpressionStatement(459)", "Delete SimpleName: numChildren(463)", "Delete NumberLiteral: 1(464)", "Delete InfixExpression: ==(465)", "Delete Assignment: =(466)", "Delete ExpressionStatement(467)", "Delete Block(515)", "Delete MethodDeclaration(516)", "Delete TextElement: last children must be RawTextNodes (can be the same node if there's only one child). If(189)", "Delete TextElement: there is any 'phname' attribute, it should not have been stripped out yet (this constructor(190)", "Delete TextElement: will handle parsing and stripping any 'phname' attribute).(191)", "Delete NullLiteral(223)", "Delete SimpleName: i(241)", "Delete SimpleName: child(263)", "Delete CastExpression(264)", "Delete ParenthesizedExpression(265)", "Delete MethodInvocation(267)", "Delete ThisExpression(468)", "Delete SimpleName: isOnlyRawText(469)", "Delete FieldAccess(470)", "Delete ThisExpression(502)", "Delete SimpleName: fullTagText(503)", "Delete FieldAccess(504)", "Delete NullLiteral(505)", "Delete Assignment: =(506)", "Delete ExpressionStatement(507)", "Delete Block(508)", "Delete StringLiteral: \"Found multiple 'phname' attributes in HTML tag (phname=\\\"\"(287)", "Delete SimpleName: userSuppliedPlaceholderName(288)", "Delete StringLiteral: \"\\\" and phname=\\\"\"(289)", "Delete NumberLiteral: 1(292)", "Delete MethodInvocation(293)", "Delete StringLiteral: \"\\\").\"(294)", "Delete InfixExpression: +(295)", "Delete MethodInvocation(296)", "Delete ThrowStatement(297)", "Delete StringLiteral: \"Found 'phname' attribute in HTML tag that is not a valid identifier (phname=\\\"\"(314)", "Delete SimpleName: userSuppliedPlaceholderName(315)", "Delete StringLiteral: \"\\\").\"(316)", "Delete InfixExpression: +(317)", "Delete MethodInvocation(318)", "Delete ThrowStatement(319)", "Delete ContinueStatement(251)", "Delete SimpleName: i(342)", "Delete SimpleName: child(346)", "Delete SimpleName: replacementChild(347)", "Delete Assignment: =(348)", "Delete ThisExpression(510)"]}}], "commit_stats": [{"total_files": 6, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}