{"application": "apache-cxf-fediz", "csha": "b06255a0b13e8de27a87bfdaaedabf6fa9c5663a", "files": [{"EHCacheTokenReplayCache_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TagElement", "DEL TextElement: or more contributor license agreements. See the NOTICE file", "DEL TextElement: \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY", "DEL PackageDeclaration", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL Javadoc", "DEL TextElement: with the License. You may obtain a copy of the License at", "DEL TextElement: regarding copyright ownership. The ASF licenses this file", "DEL TextElement: software distributed under the License is distributed on an", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: under the License.", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: Unless required by applicable law or agreed to in writing,", "DEL TextElement: KIND, either express or implied. See the License for the", "DEL QualifiedName: org.apache.cxf.fediz.core", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: specific language governing permissions and limitations", "DEL TextElement: distributed with this work for additional information"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.net.URL", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: net.sf.ehcache.Cache"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: net.sf.ehcache.CacheManager", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: net.sf.ehcache.Ehcache", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: net.sf.ehcache.Element"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: net.sf.ehcache.config.CacheConfiguration", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: net.sf.ehcache.config.Configuration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: net.sf.ehcache.config.ConfigurationFactory", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: org.apache.wss4j.common.util.Loader", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: getCacheConfiguration", "DEL Block", "DEL SimpleName: CacheConfiguration", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL SimpleName: newCache", "DEL MethodInvocation", "DEL IfStatement", "DEL InfixExpression: ==", "DEL Modifier: public", "DEL ExpressionStatement", "DEL TextElement:  The length of time to cache the Identifier in seconds", "DEL SimpleName: getObjectValue", "DEL InfixExpression: !=", "DEL SimpleName: create", "DEL SimpleName: setTTL", "DEL ExpressionStatement", "DEL SimpleName: getResource", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: timeToLive", "DEL SimpleName: String", "DEL PrimitiveType: long", "DEL Block", "DEL Modifier: final", "DEL MethodInvocation", "DEL SimpleName: conf", "DEL SingleVariableDeclaration", "DEL InfixExpression: !=", "DEL ExpressionStatement", "DEL SimpleName: DEFAULT_TTL", "DEL SimpleType: Ehcache", "DEL VariableDeclarationStatement", "DEL MethodInvocation", "DEL TextElement:  the (default) TTL value in seconds", "DEL IfStatement", "DEL Block", "DEL SimpleName: id", "DEL SimpleName: parsedTTL", "DEL Modifier: private", "DEL SimpleType: URL", "DEL SimpleName: parsedTTL", "DEL SimpleName: String", "DEL NumberLiteral: 3600L", "DEL Modifier: public", "DEL FieldDeclaration", "DEL MethodDeclaration", "DEL SimpleName: String", "DEL MethodInvocation", "DEL PrimitiveType: long", "DEL VariableDeclarationFragment", "DEL SimpleName: configFileURL", "DEL SimpleType: Configuration", "DEL PrimitiveType: int", "DEL SimpleName: createCache", "DEL InfixExpression: ||", "DEL TextElement:  a new (default) TTL value in seconds", "DEL PrimitiveType: void", "DEL SimpleName: String", "DEL SimpleName: Override", "DEL PrimitiveType: int", "DEL TextElement: Add the given identifier to the cache.", "DEL Block", "DEL SimpleName: ttl", "DEL SimpleName: EHCacheUtil", "DEL SimpleName: getId", "DEL SimpleName: String", "DEL BooleanLiteral: false", "DEL SimpleName: parsedTTL", "DEL SimpleName: id", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL PrimitiveType: int", "DEL SimpleName: URL", "DEL TextElement: Return the given identifier if it is contained in the cache, otherwise null.", "DEL Modifier: public", "DEL SingleVariableDeclaration", "DEL Modifier: static", "DEL TagElement: @return", "DEL SimpleType: IOException", "DEL SimpleName: cc", "DEL SimpleName: newTtl", "DEL Assignment: =", "DEL Assignment: =", "DEL TextElement: Add the given identifier to the cache. It will be cached for a default amount of time.", "DEL SimpleName: cc", "DEL SimpleName: cc", "DEL SimpleType: String", "DEL CastExpression", "DEL SimpleType: Ehcache", "DEL SimpleName: String", "DEL SimpleType: Element", "DEL ReturnStatement", "DEL TextElement: An in-memory EHCache implementation of the TokenReplayCache interface. ", "DEL SimpleName: newTtl", "DEL SimpleName: resetAccessStatistics", "DEL InfixExpression: <", "DEL FieldDeclaration", "DEL SimpleName: id", "DEL FieldDeclaration", "DEL TextElement:  The identifier to be added", "DEL Block", "DEL SimpleName: MAX_TTL", "DEL Modifier: private", "DEL PrimitiveType: void", "DEL ParameterizedType: TokenReplayCache<String>", "DEL SimpleName: DEFAULT_TTL", "DEL ExpressionStatement", "DEL SimpleType: String", "DEL SimpleName: id", "DEL IfStatement", "DEL SimpleName: EHCacheTokenReplayCache", "DEL Modifier: public", "DEL SimpleType: Element", "DEL Modifier: public", "DEL ExpressionStatement", "DEL SimpleName: configFileURL", "DEL SimpleName: cache", "DEL SimpleType: URL", "DEL SimpleName: parseConfiguration", "DEL SimpleName: defaultConfigFile", "DEL SimpleName: cache", "DEL Block", "DEL SimpleName: getTimeToLiveSeconds", "DEL SimpleName: Element", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: id", "DEL SimpleName: Ehcache", "DEL SingleVariableDeclaration", "DEL SimpleName: parsedTTL", "DEL ReturnStatement", "DEL SimpleName: String", "DEL SimpleName: CacheManager", "DEL SimpleName: cacheElement", "DEL IfStatement", "DEL MethodDeclaration", "DEL Javadoc", "DEL SimpleName: cacheManager", "DEL TagElement: @param", "DEL SimpleName: newCache", "DEL MethodDeclaration", "DEL CastExpression", "DEL SimpleName: Ehcache", "DEL Assignment: =", "DEL Modifier: final", "DEL VariableDeclarationFragment", "DEL TextElement:  The identifier to check", "DEL VariableDeclarationFragment", "DEL NumberLiteral: 12L", "DEL IfStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: EHCacheTokenReplayCache", "DEL SimpleName: remove", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: equals", "DEL Assignment: =", "DEL SimpleName: cacheElement", "DEL SimpleName: parsedTTL", "DEL SimpleType: URL", "DEL SimpleName: ttl", "DEL MethodDeclaration", "DEL ExpressionStatement", "DEL SimpleType: String", "DEL SimpleName: key", "DEL SimpleType: String", "DEL SimpleName: EHCacheTokenReplayCache", "DEL SingleVariableDeclaration", "DEL SimpleName: timeToLive", "DEL PrimitiveType: long", "DEL TextElement:  The identifier to be added", "DEL ReturnStatement", "DEL SimpleName: cacheElement", "DEL Block", "DEL SimpleName: key", "DEL SimpleName: get", "DEL SimpleName: TokenReplayCache", "DEL SimpleName: key", "DEL SimpleName: ttl", "DEL SimpleName: ttl", "DEL MarkerAnnotation", "DEL SimpleName: ttl", "DEL TagElement", "DEL MethodDeclaration", "DEL Modifier: public", "DEL StringLiteral: \"fediz-ehcache.xml\"", "DEL SimpleName: CacheManager", "DEL VariableDeclarationFragment", "DEL SimpleName: Configuration", "DEL Modifier: private", "DEL SimpleName: IOException", "DEL NullLiteral", "DEL Javadoc", "DEL SimpleName: key", "DEL ExpressionStatement", "DEL Block", "DEL MethodInvocation", "DEL VariableDeclarationFragment", "DEL SimpleName: MAX_TTL", "DEL SimpleName: configFileURL", "DEL ExpressionStatement", "DEL SimpleName: newTtl", "DEL NullLiteral", "DEL SimpleName: cacheManager", "DEL SimpleName: putId", "DEL Javadoc", "DEL VariableDeclarationStatement", "DEL SimpleName: cache", "DEL Block", "DEL SimpleName: String", "DEL ClassInstanceCreation", "DEL Block", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL InfixExpression: !=", "DEL SimpleName: cacheManager", "DEL SimpleName: DEFAULT_TTL", "DEL VariableDeclarationFragment", "DEL IfStatement", "DEL TagElement: @param", "DEL ExpressionStatement", "DEL NullLiteral", "DEL Block", "DEL SimpleName: parsedTTL", "DEL NullLiteral", "DEL SimpleName: cacheManager", "DEL Modifier: public", "DEL PrimitiveType: long", "DEL SimpleName: cacheManager", "DEL SingleVariableDeclaration", "DEL PrimitiveType: long", "DEL VariableDeclarationStatement", "DEL PrimitiveType: long", "DEL TypeDeclaration: class", "DEL SimpleName: String", "DEL IfStatement", "DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: ttl", "DEL SingleVariableDeclaration", "DEL SimpleType: String", "DEL TagElement: @param", "DEL MethodInvocation", "DEL SimpleType: Cache", "DEL Block", "DEL NumberLiteral: 3600", "DEL SimpleName: key", "DEL SimpleName: timeToLive", "DEL TagElement", "DEL SimpleType: String", "DEL Block", "DEL Modifier: public", "DEL SimpleName: element", "DEL VariableDeclarationFragment", "DEL SimpleName: Cache", "DEL PrimitiveType: void", "DEL SimpleName: String", "DEL SimpleName: conf", "DEL InfixExpression: ||", "DEL ExpressionStatement", "DEL SimpleName: cache", "DEL SimpleName: CacheManager", "DEL PrimitiveType: void", "DEL SimpleName: id", "DEL Assignment: =", "DEL TextElement: The default TTL is 60 minutes and the max TTL is 12 hours.", "DEL VariableDeclarationFragment", "DEL Block", "DEL SimpleName: id", "DEL SimpleType: Element", "DEL NumberLiteral: 0", "DEL InfixExpression: ==", "DEL Javadoc", "DEL VariableDeclarationStatement", "DEL ExpressionStatement", "DEL SimpleName: cacheManager", "DEL PrimitiveType: long", "DEL Block", "DEL TextElement: Get the (default) TTL value in seconds", "DEL MarkerAnnotation", "DEL SimpleName: shutdown", "DEL SimpleName: addCacheIfAbsent", "DEL InfixExpression: ||", "DEL SimpleName: id", "DEL InfixExpression: !=", "DEL SimpleName: element", "DEL ReturnStatement", "DEL SimpleName: cacheManager", "DEL NullLiteral", "DEL SimpleName: id", "DEL SimpleName: configFileURL", "DEL SimpleName: configFileURL", "DEL SimpleName: putId", "DEL TextElement: Set a new (default) TTL value in seconds", "DEL StringLiteral: \"\"", "DEL SimpleType: CacheConfiguration", "DEL SimpleName: createCache", "DEL PrimitiveType: long", "DEL SimpleName: Element", "DEL Modifier: public", "DEL TagElement", "DEL SimpleName: parsedTTL", "DEL Javadoc", "DEL MethodDeclaration", "DEL Modifier: static", "DEL CastExpression", "DEL SimpleName: ttl", "DEL PrimitiveType: void", "DEL SimpleName: cache", "DEL SimpleName: id", "DEL VariableDeclarationStatement", "DEL SimpleName: getTTL", "DEL SimpleName: isExpired", "DEL CastExpression", "DEL SimpleName: URL", "DEL ClassInstanceCreation", "DEL Block", "DEL SimpleName: URL", "DEL InfixExpression: >", "DEL NullLiteral", "DEL SimpleName: id", "DEL SimpleType: String", "DEL SimpleType: CacheManager", "DEL SimpleName: parsedTTL", "DEL SimpleName: timeToLive", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: id", "DEL Assignment: =", "DEL VariableDeclarationStatement", "DEL SimpleName: ConfigurationFactory", "DEL NullLiteral", "DEL SimpleType: TokenReplayCache", "DEL SimpleName: configFileURL", "DEL ExpressionStatement", "DEL VariableDeclarationStatement", "DEL SimpleName: put", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: Override", "DEL SimpleName: element", "DEL SingleVariableDeclaration", "DEL TagElement", "DEL TagElement", "DEL MethodDeclaration", "DEL FieldDeclaration", "DEL MethodInvocation", "DEL SimpleType: String", "DEL CastExpression", "DEL Assignment: =", "DEL TagElement: @param", "DEL Javadoc", "DEL SimpleName: defaultConfigFile", "DEL SimpleName: parsedTTL", "DEL SimpleName: cacheManager", "DEL Modifier: public", "DEL SimpleName: Loader", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: cache", "DEL SimpleName: id", "DEL SimpleName: Element", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL ExpressionStatement", "DEL SimpleType: String", "DEL MethodInvocation", "DEL NullLiteral", "DEL SimpleName: element", "DEL MethodDeclaration", "DEL SimpleName: cache", "DEL TagElement: @param", "DEL SimpleName: configFileURL", "DEL FieldDeclaration", "DEL InfixExpression: *", "DEL SimpleName: putId", "DEL SimpleName: createCache", "DEL SimpleName: create", "DEL MethodDeclaration", "DEL SimpleName: close", "DEL SimpleType: String", "DEL TagElement", "DEL Modifier: private", "DEL Modifier: public", "DEL SimpleName: key"]}]}}, {"EHCacheTokenReplayCache_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements. See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership. The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License. You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing,(8)", "Delete TextElement: software distributed under the License is distributed on an(9)", "Delete TextElement: \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY(10)", "Delete TextElement: KIND, either express or implied. See the License for the(11)", "Delete TextElement: specific language governing permissions and limitations(12)", "Delete TextElement: under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.cxf.fediz.core(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.IOException(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.net.URL(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: net.sf.ehcache.Cache(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: net.sf.ehcache.CacheManager(24)", "Delete ImportDeclaration(25)", "Delete QualifiedName: net.sf.ehcache.Ehcache(26)", "Delete ImportDeclaration(27)", "Delete QualifiedName: net.sf.ehcache.Element(28)", "Delete ImportDeclaration(29)", "Delete QualifiedName: net.sf.ehcache.config.CacheConfiguration(30)", "Delete ImportDeclaration(31)", "Delete QualifiedName: net.sf.ehcache.config.Configuration(32)", "Delete ImportDeclaration(33)", "Delete QualifiedName: net.sf.ehcache.config.ConfigurationFactory(34)", "Delete ImportDeclaration(35)", "Delete QualifiedName: org.apache.wss4j.common.util.Loader(36)", "Delete ImportDeclaration(37)", "Delete TextElement: An in-memory EHCache implementation of the TokenReplayCache interface. (38)", "Delete TextElement: The default TTL is 60 minutes and the max TTL is 12 hours.(39)", "Delete TagElement(40)", "Delete Javadoc(41)", "Delete Modifier: public(42)", "Delete SimpleName: EHCacheTokenReplayCache(43)", "Delete SimpleName: TokenReplayCache(44)", "Delete SimpleType: TokenReplayCache(45)", "Delete SimpleName: String(46)", "Delete SimpleType: String(47)", "Delete ParameterizedType: TokenReplayCache<String>(48)", "Delete Modifier: public(49)", "Delete Modifier: static(50)", "Delete Modifier: final(51)", "Delete PrimitiveType: long(52)", "Delete SimpleName: DEFAULT_TTL(53)", "Delete NumberLiteral: 3600L(54)", "Delete VariableDeclarationFragment(55)", "Delete FieldDeclaration(56)", "Delete Modifier: public(57)", "Delete Modifier: static(58)", "Delete Modifier: final(59)", "Delete PrimitiveType: long(60)", "Delete SimpleName: MAX_TTL(61)", "Delete SimpleName: DEFAULT_TTL(62)", "Delete NumberLiteral: 12L(63)", "Delete InfixExpression: *(64)", "Delete VariableDeclarationFragment(65)", "Delete FieldDeclaration(66)", "Delete Modifier: private(67)", "Delete SimpleName: Ehcache(68)", "Delete SimpleType: Ehcache(69)", "Delete SimpleName: cache(70)", "Delete VariableDeclarationFragment(71)", "Delete FieldDeclaration(72)", "Delete Modifier: private(73)", "Delete SimpleName: CacheManager(74)", "Delete SimpleType: CacheManager(75)", "Delete SimpleName: cacheManager(76)", "Delete VariableDeclarationFragment(77)", "Delete FieldDeclaration(78)", "Delete Modifier: private(79)", "Delete PrimitiveType: long(80)", "Delete SimpleName: ttl(81)", "Delete SimpleName: DEFAULT_TTL(82)", "Delete VariableDeclarationFragment(83)", "Delete FieldDeclaration(84)", "Delete Modifier: public(85)", "Delete SimpleName: EHCacheTokenReplayCache(86)", "Delete SimpleName: String(87)", "Delete SimpleType: String(88)", "Delete SimpleName: key(89)", "Delete SingleVariableDeclaration(90)", "Delete SimpleName: String(91)", "Delete SimpleType: String(92)", "Delete SimpleName: defaultConfigFile(93)", "Delete StringLiteral: \"fediz-ehcache.xml\"(94)", "Delete VariableDeclarationFragment(95)", "Delete VariableDeclarationStatement(96)", "Delete SimpleName: URL(97)", "Delete SimpleType: URL(98)", "Delete SimpleName: configFileURL(99)", "Delete SimpleName: Loader(100)", "Delete SimpleName: getResource(101)", "Delete SimpleName: defaultConfigFile(102)", "Delete MethodInvocation(103)", "Delete VariableDeclarationFragment(104)", "Delete VariableDeclarationStatement(105)", "Delete SimpleName: createCache(106)", "Delete SimpleName: key(107)", "Delete SimpleName: configFileURL(108)", "Delete MethodInvocation(109)", "Delete ExpressionStatement(110)", "Delete Block(111)", "Delete MethodDeclaration(112)", "Delete Modifier: public(113)", "Delete SimpleName: EHCacheTokenReplayCache(114)", "Delete SimpleName: String(115)", "Delete SimpleType: String(116)", "Delete SimpleName: key(117)", "Delete SingleVariableDeclaration(118)", "Delete SimpleName: URL(119)", "Delete SimpleType: URL(120)", "Delete SimpleName: configFileURL(121)", "Delete SingleVariableDeclaration(122)", "Delete SimpleName: createCache(123)", "Delete SimpleName: key(124)", "Delete SimpleName: configFileURL(125)", "Delete MethodInvocation(126)", "Delete ExpressionStatement(127)", "Delete Block(128)", "Delete MethodDeclaration(129)", "Delete Modifier: private(130)", "Delete PrimitiveType: void(131)", "Delete SimpleName: createCache(132)", "Delete SimpleName: String(133)", "Delete SimpleType: String(134)", "Delete SimpleName: key(135)", "Delete SingleVariableDeclaration(136)", "Delete SimpleName: URL(137)", "Delete SimpleType: URL(138)", "Delete SimpleName: configFileURL(139)", "Delete SingleVariableDeclaration(140)", "Delete SimpleName: configFileURL(141)", "Delete NullLiteral(142)", "Delete InfixExpression: ==(143)", "Delete SimpleName: cacheManager(144)", "Delete SimpleName: CacheManager(145)", "Delete SimpleName: create(146)", "Delete MethodInvocation(147)", "Delete Assignment: =(148)", "Delete ExpressionStatement(149)", "Delete Block(150)", "Delete SimpleName: Configuration(151)", "Delete SimpleType: Configuration(152)", "Delete SimpleName: conf(153)", "Delete SimpleName: ConfigurationFactory(154)", "Delete SimpleName: parseConfiguration(155)", "Delete SimpleName: configFileURL(156)", "Delete MethodInvocation(157)", "Delete VariableDeclarationFragment(158)", "Delete VariableDeclarationStatement(159)", "Delete SimpleName: cacheManager(160)", "Delete SimpleName: CacheManager(161)", "Delete SimpleName: create(162)", "Delete SimpleName: conf(163)", "Delete MethodInvocation(164)", "Delete Assignment: =(165)", "Delete ExpressionStatement(166)", "Delete Block(167)", "Delete IfStatement(168)", "Delete SimpleName: CacheConfiguration(169)", "Delete SimpleType: CacheConfiguration(170)", "Delete SimpleName: cc(171)", "Delete SimpleName: EHCacheUtil(172)", "Delete SimpleName: getCacheConfiguration(173)", "Delete SimpleName: key(174)", "Delete SimpleName: cacheManager(175)", "Delete MethodInvocation(176)", "Delete VariableDeclarationFragment(177)", "Delete VariableDeclarationStatement(178)", "Delete SimpleName: Ehcache(179)", "Delete SimpleType: Ehcache(180)", "Delete SimpleName: newCache(181)", "Delete SimpleName: Cache(182)", "Delete SimpleType: Cache(183)", "Delete SimpleName: cc(184)", "Delete ClassInstanceCreation(185)", "Delete VariableDeclarationFragment(186)", "Delete VariableDeclarationStatement(187)", "Delete SimpleName: cache(188)", "Delete SimpleName: cacheManager(189)", "Delete SimpleName: addCacheIfAbsent(190)", "Delete SimpleName: newCache(191)", "Delete MethodInvocation(192)", "Delete Assignment: =(193)", "Delete ExpressionStatement(194)", "Delete SimpleName: ttl(195)", "Delete SimpleName: cc(196)", "Delete SimpleName: getTimeToLiveSeconds(197)", "Delete MethodInvocation(198)", "Delete Assignment: =(199)", "Delete ExpressionStatement(200)", "Delete Block(201)", "Delete MethodDeclaration(202)", "Delete TextElement: Set a new (default) TTL value in seconds(203)", "Delete TagElement(204)", "Delete SimpleName: newTtl(205)", "Delete TextElement:  a new (default) TTL value in seconds(206)", "Delete TagElement: @param(207)", "Delete Javadoc(208)", "Delete Modifier: public(209)", "Delete PrimitiveType: void(210)", "Delete SimpleName: setTTL(211)", "Delete PrimitiveType: long(212)", "Delete SimpleName: newTtl(213)", "Delete SingleVariableDeclaration(214)", "Delete SimpleName: ttl(215)", "Delete SimpleName: newTtl(216)", "Delete Assignment: =(217)", "Delete ExpressionStatement(218)", "Delete Block(219)", "Delete MethodDeclaration(220)", "Delete TextElement: Get the (default) TTL value in seconds(221)", "Delete TagElement(222)", "Delete TextElement:  the (default) TTL value in seconds(223)", "Delete TagElement: @return(224)", "Delete Javadoc(225)", "Delete Modifier: public(226)", "Delete PrimitiveType: long(227)", "Delete SimpleName: getTTL(228)", "Delete SimpleName: ttl(229)", "Delete ReturnStatement(230)", "Delete Block(231)", "Delete MethodDeclaration(232)", "Delete TextElement: Add the given identifier to the cache. It will be cached for a default amount of time.(233)", "Delete TagElement(234)", "Delete SimpleName: id(235)", "Delete TextElement:  The identifier to be added(236)", "Delete TagElement: @param(237)", "Delete Javadoc(238)", "Delete SimpleName: Override(239)", "Delete MarkerAnnotation(240)", "Delete Modifier: public(241)", "Delete PrimitiveType: void(242)", "Delete SimpleName: putId(243)", "Delete SimpleName: String(244)", "Delete SimpleType: String(245)", "Delete SimpleName: id(246)", "Delete SingleVariableDeclaration(247)", "Delete SimpleName: putId(248)", "Delete SimpleName: id(249)", "Delete SimpleName: ttl(250)", "Delete MethodInvocation(251)", "Delete ExpressionStatement(252)", "Delete Block(253)", "Delete MethodDeclaration(254)", "Delete TextElement: Add the given identifier to the cache.(255)", "Delete TagElement(256)", "Delete SimpleName: id(257)", "Delete TextElement:  The identifier to be added(258)", "Delete TagElement: @param(259)", "Delete SimpleName: timeToLive(260)", "Delete TextElement:  The length of time to cache the Identifier in seconds(261)", "Delete TagElement: @param(262)", "Delete Javadoc(263)", "Delete SimpleName: Override(264)", "Delete MarkerAnnotation(265)", "Delete Modifier: public(266)", "Delete PrimitiveType: void(267)", "Delete SimpleName: putId(268)", "Delete SimpleName: String(269)", "Delete SimpleType: String(270)", "Delete SimpleName: id(271)", "Delete SingleVariableDeclaration(272)", "Delete PrimitiveType: long(273)", "Delete SimpleName: timeToLive(274)", "Delete SingleVariableDeclaration(275)", "Delete SimpleName: id(276)", "Delete NullLiteral(277)", "Delete InfixExpression: ==(278)", "Delete StringLiteral: \"\"(279)", "Delete SimpleName: equals(280)", "Delete SimpleName: id(281)", "Delete MethodInvocation(282)", "Delete InfixExpression: ||(283)", "Delete ReturnStatement(284)", "Delete Block(285)", "Delete IfStatement(286)", "Delete PrimitiveType: int(287)", "Delete SimpleName: parsedTTL(288)", "Delete PrimitiveType: int(289)", "Delete SimpleName: timeToLive(290)", "Delete CastExpression(291)", "Delete VariableDeclarationFragment(292)", "Delete VariableDeclarationStatement(293)", "Delete SimpleName: timeToLive(294)", "Delete PrimitiveType: long(295)", "Delete SimpleName: parsedTTL(296)", "Delete CastExpression(297)", "Delete InfixExpression: !=(298)", "Delete SimpleName: parsedTTL(299)", "Delete NumberLiteral: 0(300)", "Delete InfixExpression: <(301)", "Delete InfixExpression: ||(302)", "Delete SimpleName: parsedTTL(303)", "Delete SimpleName: MAX_TTL(304)", "Delete InfixExpression: >(305)", "Delete InfixExpression: ||(306)", "Delete SimpleName: parsedTTL(307)", "Delete PrimitiveType: int(308)", "Delete SimpleName: ttl(309)", "Delete CastExpression(310)", "Delete Assignment: =(311)", "Delete ExpressionStatement(312)", "Delete SimpleName: ttl(313)", "Delete PrimitiveType: long(314)", "Delete SimpleName: parsedTTL(315)", "Delete CastExpression(316)", "Delete InfixExpression: !=(317)", "Delete SimpleName: parsedTTL(318)", "Delete NumberLiteral: 3600(319)", "Delete Assignment: =(320)", "Delete ExpressionStatement(321)", "Delete Block(322)", "Delete IfStatement(323)", "Delete Block(324)", "Delete IfStatement(325)", "Delete SimpleName: Element(326)", "Delete SimpleType: Element(327)", "Delete SimpleName: cacheElement(328)", "Delete SimpleName: Element(329)", "Delete SimpleType: Element(330)", "Delete SimpleName: id(331)", "Delete SimpleName: id(332)", "Delete BooleanLiteral: false(333)", "Delete SimpleName: parsedTTL(334)", "Delete SimpleName: parsedTTL(335)", "Delete ClassInstanceCreation(336)", "Delete VariableDeclarationFragment(337)", "Delete VariableDeclarationStatement(338)", "Delete SimpleName: cacheElement(339)", "Delete SimpleName: resetAccessStatistics(340)", "Delete MethodInvocation(341)", "Delete ExpressionStatement(342)", "Delete SimpleName: cache(343)", "Delete SimpleName: put(344)", "Delete SimpleName: cacheElement(345)", "Delete MethodInvocation(346)", "Delete ExpressionStatement(347)", "Delete Block(348)", "Delete MethodDeclaration(349)", "Delete TextElement: Return the given identifier if it is contained in the cache, otherwise null.(350)", "Delete TagElement(351)", "Delete SimpleName: id(352)", "Delete TextElement:  The identifier to check(353)", "Delete TagElement: @param(354)", "Delete Javadoc(355)", "Delete Modifier: public(356)", "Delete SimpleName: String(357)", "Delete SimpleType: String(358)", "Delete SimpleName: getId(359)", "Delete SimpleName: String(360)", "Delete SimpleType: String(361)", "Delete SimpleName: id(362)", "Delete SingleVariableDeclaration(363)", "Delete SimpleName: Element(364)", "Delete SimpleType: Element(365)", "Delete SimpleName: element(366)", "Delete SimpleName: cache(367)", "Delete SimpleName: get(368)", "Delete SimpleName: id(369)", "Delete MethodInvocation(370)", "Delete VariableDeclarationFragment(371)", "Delete VariableDeclarationStatement(372)", "Delete SimpleName: element(373)", "Delete NullLiteral(374)", "Delete InfixExpression: !=(375)", "Delete SimpleName: cache(376)", "Delete SimpleName: isExpired(377)", "Delete SimpleName: element(378)", "Delete MethodInvocation(379)", "Delete SimpleName: cache(380)", "Delete SimpleName: remove(381)", "Delete SimpleName: id(382)", "Delete MethodInvocation(383)", "Delete ExpressionStatement(384)", "Delete NullLiteral(385)", "Delete ReturnStatement(386)", "Delete Block(387)", "Delete IfStatement(388)", "Delete SimpleName: String(389)", "Delete SimpleType: String(390)", "Delete SimpleName: element(391)", "Delete SimpleName: getObjectValue(392)", "Delete MethodInvocation(393)", "Delete CastExpression(394)", "Delete ReturnStatement(395)", "Delete Block(396)", "Delete IfStatement(397)", "Delete NullLiteral(398)", "Delete ReturnStatement(399)", "Delete Block(400)", "Delete MethodDeclaration(401)", "Delete Modifier: public(402)", "Delete PrimitiveType: void(403)", "Delete SimpleName: close(404)", "Delete SimpleName: IOException(405)", "Delete SimpleType: IOException(406)", "Delete SimpleName: cacheManager(407)", "Delete NullLiteral(408)", "Delete InfixExpression: !=(409)", "Delete SimpleName: cacheManager(410)", "Delete SimpleName: shutdown(411)", "Delete MethodInvocation(412)", "Delete ExpressionStatement(413)", "Delete SimpleName: cacheManager(414)", "Delete NullLiteral(415)", "Delete Assignment: =(416)", "Delete ExpressionStatement(417)", "Delete SimpleName: cache(418)", "Delete NullLiteral(419)", "Delete Assignment: =(420)", "Delete ExpressionStatement(421)", "Delete Block(422)", "Delete IfStatement(423)", "Delete Block(424)", "Delete MethodDeclaration(425)", "Delete TypeDeclaration: class(426)"]}}, {"FederationProcessorImpl_cluster": {"actions": [{"root": "INS PrefixExpression: ! to IfStatement at 0", "operations": ["INS PrefixExpression: ! to IfStatement at 0"]}, {"root": "MOVE from PrefixExpression: !", "operations": ["MOV MethodInvocation to PrefixExpression: ! at 0"]}, {"root": "UPDATE from getId to contains", "operations": ["UPD SimpleName: getId from getId to contains"]}, {"root": "UPDATE from putId to add", "operations": ["UPD SimpleName: putId from putId to add", "UPD SimpleName: putId from putId to add"]}, {"root": "DEL InfixExpression: ==", "operations": ["DEL InfixExpression: ==", "DEL NullLiteral"]}]}}, {"FederationProcessorImpl_diff": {"operations": ["Insert PrefixExpression: !(777) into IfStatement(875) at 0", "Move MethodInvocation(776) into PrefixExpression: !(777) at 0", "Update SimpleName: getId(772) to contains", "Update SimpleName: putId(834) to add", "Update SimpleName: putId(847) to add", "Delete NullLiteral(777)", "Delete InfixExpression: ==(778)"]}}, {"InMemoryTokenReplayCache_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: KIND, either express or implied. See the License for the", "DEL TextElement: specific language governing permissions and limitations", "DEL Javadoc", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL QualifiedName: org.apache.cxf.fediz.core", "DEL TextElement: \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY", "DEL TextElement: or more contributor license agreements. See the NOTICE file", "DEL TextElement: software distributed under the License is distributed on an", "DEL PackageDeclaration", "DEL TextElement: regarding copyright ownership. The ASF licenses this file", "DEL TagElement", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: Unless required by applicable law or agreed to in writing,", "DEL TextElement: under the License.", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: with the License. You may obtain a copy of the License at"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.io.IOException", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.ArrayList", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.Collections", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: java.util.List", "DEL ImportDeclaration"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Block", "DEL NumberLiteral: 1", "DEL SimpleName: index", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL Block", "DEL ExpressionStatement", "DEL VariableDeclarationFragment", "DEL MethodInvocation", "DEL SimpleName: cache", "DEL SingleVariableDeclaration", "DEL Modifier: public", "DEL SimpleName: timeToLive", "DEL InfixExpression: !=", "DEL ReturnStatement", "DEL TypeParameter", "DEL SimpleName: putId", "DEL Modifier: private", "DEL Modifier: public", "DEL SimpleName: T", "DEL SimpleName: add", "DEL SimpleName: get", "DEL SimpleName: id", "DEL MethodDeclaration", "DEL SimpleName: cache", "DEL Modifier: public", "DEL SimpleName: T", "DEL NullLiteral", "DEL MethodInvocation", "DEL SimpleName: clear", "DEL SimpleName: cache", "DEL SimpleName: index", "DEL SimpleName: List", "DEL Assignment: =", "DEL SimpleName: T", "DEL SimpleName: close", "DEL PrimitiveType: void", "DEL MarkerAnnotation", "DEL SimpleType: TokenReplayCache", "DEL SimpleType: ArrayList", "DEL SimpleName: cache", "DEL Block", "DEL SimpleName: Override", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL SimpleType: T", "DEL SimpleName: ArrayList", "DEL SingleVariableDeclaration", "DEL SimpleName: InMemoryTokenReplayCache", "DEL SimpleType: T", "DEL Assignment: =", "DEL SimpleType: T", "DEL SimpleName: cache", "DEL Block", "DEL SimpleName: T", "DEL SimpleName: indexOf", "DEL SimpleName: id", "DEL NullLiteral", "DEL SimpleName: Collections", "DEL VariableDeclarationFragment", "DEL SimpleName: cache", "DEL ExpressionStatement", "DEL Block", "DEL Modifier: public", "DEL SimpleType: List", "DEL SimpleName: synchronizedList", "DEL PrefixExpression: -", "DEL ClassInstanceCreation", "DEL SimpleName: id", "DEL MethodDeclaration", "DEL Modifier: public", "DEL TypeDeclaration: class", "DEL SimpleType: IOException", "DEL ExpressionStatement", "DEL PrimitiveType: void", "DEL Block", "DEL PrimitiveType: void", "DEL SimpleType: T", "DEL MethodInvocation", "DEL SimpleName: id", "DEL Modifier: final", "DEL SimpleName: T", "DEL ReturnStatement", "DEL SimpleName: Override", "DEL SimpleName: add", "DEL SimpleName: cache", "DEL SingleVariableDeclaration", "DEL Block", "DEL ParameterizedType: ArrayList<T>", "DEL ParameterizedType: List<T>", "DEL SimpleName: InMemoryTokenReplayCache", "DEL MarkerAnnotation", "DEL SimpleName: T", "DEL PrimitiveType: long", "DEL SimpleName: cache", "DEL SimpleType: T", "DEL IfStatement", "DEL IfStatement", "DEL MethodInvocation", "DEL SimpleName: putId", "DEL SimpleName: TokenReplayCache", "DEL SimpleName: T", "DEL SimpleName: id", "DEL SimpleName: id", "DEL Block", "DEL SingleVariableDeclaration", "DEL VariableDeclarationStatement", "DEL MethodDeclaration", "DEL ParameterizedType: TokenReplayCache<T>", "DEL SimpleName: IOException", "DEL Modifier: public", "DEL SimpleName: cache", "DEL InfixExpression: ==", "DEL ExpressionStatement", "DEL FieldDeclaration", "DEL SimpleName: getId", "DEL MarkerAnnotation", "DEL SimpleName: Override", "DEL SimpleName: T", "DEL SimpleType: T", "DEL NullLiteral", "DEL SimpleName: index", "DEL MethodDeclaration", "DEL PrimitiveType: int", "DEL ExpressionStatement", "DEL SimpleType: T", "DEL MarkerAnnotation"]}]}}, {"InMemoryTokenReplayCache_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements. See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership. The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License. You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing,(8)", "Delete TextElement: software distributed under the License is distributed on an(9)", "Delete TextElement: \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY(10)", "Delete TextElement: KIND, either express or implied. See the License for the(11)", "Delete TextElement: specific language governing permissions and limitations(12)", "Delete TextElement: under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.cxf.fediz.core(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.IOException(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.util.ArrayList(20)", "Delete ImportDeclaration(21)", "Delete QualifiedName: java.util.Collections(22)", "Delete ImportDeclaration(23)", "Delete QualifiedName: java.util.List(24)", "Delete ImportDeclaration(25)", "Delete Modifier: public(26)", "Delete Modifier: final(27)", "Delete SimpleName: InMemoryTokenReplayCache(28)", "Delete SimpleName: T(29)", "Delete TypeParameter(30)", "Delete SimpleName: TokenReplayCache(31)", "Delete SimpleType: TokenReplayCache(32)", "Delete SimpleName: T(33)", "Delete SimpleType: T(34)", "Delete ParameterizedType: TokenReplayCache<T>(35)", "Delete Modifier: private(36)", "Delete SimpleName: List(37)", "Delete SimpleType: List(38)", "Delete SimpleName: T(39)", "Delete SimpleType: T(40)", "Delete ParameterizedType: List<T>(41)", "Delete SimpleName: cache(42)", "Delete VariableDeclarationFragment(43)", "Delete FieldDeclaration(44)", "Delete Modifier: public(45)", "Delete SimpleName: InMemoryTokenReplayCache(46)", "Delete SimpleName: cache(47)", "Delete SimpleName: Collections(48)", "Delete SimpleName: synchronizedList(49)", "Delete SimpleName: ArrayList(50)", "Delete SimpleType: ArrayList(51)", "Delete SimpleName: T(52)", "Delete SimpleType: T(53)", "Delete ParameterizedType: ArrayList<T>(54)", "Delete ClassInstanceCreation(55)", "Delete MethodInvocation(56)", "Delete Assignment: =(57)", "Delete ExpressionStatement(58)", "Delete Block(59)", "Delete MethodDeclaration(60)", "Delete SimpleName: Override(61)", "Delete MarkerAnnotation(62)", "Delete Modifier: public(63)", "Delete SimpleName: T(64)", "Delete SimpleType: T(65)", "Delete SimpleName: getId(66)", "Delete SimpleName: T(67)", "Delete SimpleType: T(68)", "Delete SimpleName: id(69)", "Delete SingleVariableDeclaration(70)", "Delete PrimitiveType: int(71)", "Delete SimpleName: index(72)", "Delete SimpleName: cache(73)", "Delete SimpleName: indexOf(74)", "Delete SimpleName: id(75)", "Delete MethodInvocation(76)", "Delete VariableDeclarationFragment(77)", "Delete VariableDeclarationStatement(78)", "Delete SimpleName: index(79)", "Delete NumberLiteral: 1(80)", "Delete PrefixExpression: -(81)", "Delete InfixExpression: ==(82)", "Delete NullLiteral(83)", "Delete ReturnStatement(84)", "Delete Block(85)", "Delete SimpleName: cache(86)", "Delete SimpleName: get(87)", "Delete SimpleName: index(88)", "Delete MethodInvocation(89)", "Delete ReturnStatement(90)", "Delete Block(91)", "Delete IfStatement(92)", "Delete Block(93)", "Delete MethodDeclaration(94)", "Delete SimpleName: Override(95)", "Delete MarkerAnnotation(96)", "Delete Modifier: public(97)", "Delete PrimitiveType: void(98)", "Delete SimpleName: putId(99)", "Delete SimpleName: T(100)", "Delete SimpleType: T(101)", "Delete SimpleName: id(102)", "Delete SingleVariableDeclaration(103)", "Delete SimpleName: cache(104)", "Delete SimpleName: add(105)", "Delete SimpleName: id(106)", "Delete MethodInvocation(107)", "Delete ExpressionStatement(108)", "Delete Block(109)", "Delete MethodDeclaration(110)", "Delete SimpleName: Override(111)", "Delete MarkerAnnotation(112)", "Delete Modifier: public(113)", "Delete PrimitiveType: void(114)", "Delete SimpleName: putId(115)", "Delete SimpleName: T(116)", "Delete SimpleType: T(117)", "Delete SimpleName: id(118)", "Delete SingleVariableDeclaration(119)", "Delete PrimitiveType: long(120)", "Delete SimpleName: timeToLive(121)", "Delete SingleVariableDeclaration(122)", "Delete SimpleName: cache(123)", "Delete SimpleName: add(124)", "Delete SimpleName: id(125)", "Delete MethodInvocation(126)", "Delete ExpressionStatement(127)", "Delete Block(128)", "Delete MethodDeclaration(129)", "Delete SimpleName: Override(130)", "Delete MarkerAnnotation(131)", "Delete Modifier: public(132)", "Delete PrimitiveType: void(133)", "Delete SimpleName: close(134)", "Delete SimpleName: IOException(135)", "Delete SimpleType: IOException(136)", "Delete SimpleName: cache(137)", "Delete NullLiteral(138)", "Delete InfixExpression: !=(139)", "Delete SimpleName: cache(140)", "Delete SimpleName: clear(141)", "Delete MethodInvocation(142)", "Delete ExpressionStatement(143)", "Delete SimpleName: cache(144)", "Delete NullLiteral(145)", "Delete Assignment: =(146)", "Delete ExpressionStatement(147)", "Delete Block(148)", "Delete IfStatement(149)", "Delete Block(150)", "Delete MethodDeclaration(151)", "Delete TypeDeclaration: class(152)"]}}, {"TokenReplayCache_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL TextElement: regarding copyright ownership. The ASF licenses this file", "DEL TextElement: Unless required by applicable law or agreed to in writing,", "DEL TextElement: software distributed under the License is distributed on an", "DEL QualifiedName: org.apache.cxf.fediz.core", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL PackageDeclaration", "DEL TextElement: or more contributor license agreements. See the NOTICE file", "DEL TextElement: with the License. You may obtain a copy of the License at", "DEL TagElement", "DEL TextElement: \"License\"); you may not use this file except in compliance", "DEL TextElement: Licensed to the Apache Software Foundation (ASF) under one", "DEL TextElement: \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY", "DEL TextElement: specific language governing permissions and limitations", "DEL Javadoc", "DEL TextElement: to you under the Apache License, Version 2.0 (the", "DEL TextElement: KIND, either express or implied. See the License for the", "DEL TextElement: distributed with this work for additional information", "DEL TextElement: under the License."]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.Closeable"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: java.io.IOException"]}, {"root": "DEL TypeDeclaration: interface", "operations": ["DEL SimpleType: T", "DEL SimpleName: T", "DEL SimpleType: Closeable", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL TypeParameter", "DEL SimpleName: T", "DEL PrimitiveType: void", "DEL TypeDeclaration: interface", "DEL SimpleName: timeToLive", "DEL SimpleType: T", "DEL SimpleName: IOException", "DEL MethodDeclaration", "DEL PrimitiveType: long", "DEL SimpleType: T", "DEL SimpleName: id", "DEL SimpleName: close", "DEL SimpleName: id", "DEL Modifier: public", "DEL SimpleName: getId", "DEL SimpleName: id", "DEL SimpleType: T", "DEL SimpleName: T", "DEL SingleVariableDeclaration", "DEL SimpleName: T", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL SimpleName: TokenReplayCache", "DEL SimpleType: IOException", "DEL SimpleName: putId", "DEL SingleVariableDeclaration", "DEL SimpleName: putId", "DEL PrimitiveType: void", "DEL SimpleName: Closeable", "DEL SimpleName: T", "DEL MethodDeclaration", "DEL PrimitiveType: void"]}]}}, {"TokenReplayCache_diff": {"operations": ["Delete TextElement: Licensed to the Apache Software Foundation (ASF) under one(0)", "Delete TextElement: or more contributor license agreements. See the NOTICE file(1)", "Delete TextElement: distributed with this work for additional information(2)", "Delete TextElement: regarding copyright ownership. The ASF licenses this file(3)", "Delete TextElement: to you under the Apache License, Version 2.0 (the(4)", "Delete TextElement: \"License\"); you may not use this file except in compliance(5)", "Delete TextElement: with the License. You may obtain a copy of the License at(6)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(7)", "Delete TextElement: Unless required by applicable law or agreed to in writing,(8)", "Delete TextElement: software distributed under the License is distributed on an(9)", "Delete TextElement: \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY(10)", "Delete TextElement: KIND, either express or implied. See the License for the(11)", "Delete TextElement: specific language governing permissions and limitations(12)", "Delete TextElement: under the License.(13)", "Delete TagElement(14)", "Delete Javadoc(15)", "Delete QualifiedName: org.apache.cxf.fediz.core(16)", "Delete PackageDeclaration(17)", "Delete QualifiedName: java.io.Closeable(18)", "Delete ImportDeclaration(19)", "Delete QualifiedName: java.io.IOException(20)", "Delete ImportDeclaration(21)", "Delete Modifier: public(22)", "Delete SimpleName: TokenReplayCache(23)", "Delete SimpleName: T(24)", "Delete TypeParameter(25)", "Delete SimpleName: Closeable(26)", "Delete SimpleType: Closeable(27)", "Delete SimpleName: T(28)", "Delete SimpleType: T(29)", "Delete SimpleName: getId(30)", "Delete SimpleName: T(31)", "Delete SimpleType: T(32)", "Delete SimpleName: id(33)", "Delete SingleVariableDeclaration(34)", "Delete MethodDeclaration(35)", "Delete PrimitiveType: void(36)", "Delete SimpleName: putId(37)", "Delete SimpleName: T(38)", "Delete SimpleType: T(39)", "Delete SimpleName: id(40)", "Delete SingleVariableDeclaration(41)", "Delete MethodDeclaration(42)", "Delete PrimitiveType: void(43)", "Delete SimpleName: putId(44)", "Delete SimpleName: T(45)", "Delete SimpleType: T(46)", "Delete SimpleName: id(47)", "Delete SingleVariableDeclaration(48)", "Delete PrimitiveType: long(49)", "Delete SimpleName: timeToLive(50)", "Delete SingleVariableDeclaration(51)", "Delete MethodDeclaration(52)", "Delete PrimitiveType: void(53)", "Delete SimpleName: close(54)", "Delete SimpleName: IOException(55)", "Delete SimpleType: IOException(56)", "Delete MethodDeclaration(57)", "Delete TypeDeclaration: interface(58)"]}}, {"FederationContext_cluster": {"actions": [{"root": "MOVE from CompilationUnit", "operations": ["MOV ImportDeclaration to CompilationUnit at 25", "MOV ImportDeclaration to CompilationUnit at 25"]}, {"root": "UPDATE from org.apache.cxf.fediz.core.EHCacheTokenReplayCache to org.apache.wss4j.common.cache.ReplayCache", "operations": ["UPD QualifiedName: org.apache.cxf.fediz.core.EHCacheTokenReplayCache from org.apache.cxf.fediz.core.EHCacheTokenReplayCache to org.apache.wss4j.common.cache.ReplayCache"]}, {"root": "UPDATE from org.apache.cxf.fediz.core.TokenReplayCache to org.apache.wss4j.common.cache.ReplayCacheFactory", "operations": ["UPD QualifiedName: org.apache.cxf.fediz.core.TokenReplayCache from org.apache.cxf.fediz.core.TokenReplayCache to org.apache.wss4j.common.cache.ReplayCacheFactory"]}, {"root": "INS SimpleType: ReplayCache to FieldDeclaration at 1", "operations": ["INS SimpleType: ReplayCache to FieldDeclaration at 1"]}, {"root": "INS SimpleType: ReplayCache to MethodDeclaration at 2", "operations": ["INS SimpleType: ReplayCache to MethodDeclaration at 2"]}, {"root": "INS SimpleName: getTokenReplayCache to MethodDeclaration at 3", "operations": ["INS SimpleName: getTokenReplayCache to MethodDeclaration at 3"]}, {"root": "INS Block to MethodDeclaration at 4", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS Block to MethodDeclaration at 4", "INS SimpleName: newInstance to MethodInvocation at 1", "INS SimpleType: ReplayCacheFactory to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: replayCacheFactory to VariableDeclarationFragment at 0", "INS SimpleName: ReplayCacheFactory to MethodInvocation at 0"]}, {"root": "UPDATE from TokenReplayCache to ReplayCache", "operations": ["UPD SimpleName: TokenReplayCache from TokenReplayCache to ReplayCache", "UPD SimpleName: TokenReplayCache from TokenReplayCache to ReplayCache", "UPD SimpleName: TokenReplayCache from TokenReplayCache to ReplayCache"]}, {"root": "MOVE from SimpleType: ReplayCache", "operations": ["MOV SimpleName: TokenReplayCache to SimpleType: ReplayCache at 0"]}, {"root": "MOVE from SimpleType: ReplayCache", "operations": ["MOV SimpleName: TokenReplayCache to SimpleType: ReplayCache at 0"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 4", "MOV ReturnStatement to Block at 5", "MOV VariableDeclarationStatement to Block at 1", "MOV VariableDeclarationStatement to Block at 2", "MOV IfStatement to Block at 0"]}, {"root": "UPDATE from String to ReplayCacheFactory", "operations": ["UPD SimpleName: String from String to ReplayCacheFactory"]}, {"root": "MOVE from SimpleType: ReplayCacheFactory", "operations": ["MOV SimpleName: String to SimpleType: ReplayCacheFactory at 0"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: replayCacheFactory to MethodInvocation at 0", "INS StringLiteral: \"fediz-ehcache.xml\" to MethodInvocation at 3", "INS SimpleName: cacheKey to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: newReplayCache to MethodInvocation at 1"]}, {"root": "INS SimpleType: ReplayCache to CastExpression at 0", "operations": ["INS SimpleType: ReplayCache to CastExpression at 0"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: newReplayCache to MethodInvocation at 1", "INS SimpleName: cacheKey to MethodInvocation at 2", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: replayCacheFactory to MethodInvocation at 0", "INS StringLiteral: \"fediz-ehcache.xml\" to MethodInvocation at 3"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: newReplayCache to MethodInvocation at 1", "INS SimpleName: cacheKey to MethodInvocation at 2", "INS StringLiteral: \"fediz-ehcache.xml\" to MethodInvocation at 3", "INS SimpleName: replayCacheFactory to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1"]}, {"root": "INS MethodInvocation to Assignment: = at 1", "operations": ["INS SimpleName: cacheKey to MethodInvocation at 2", "INS SimpleName: replayCacheFactory to MethodInvocation at 0", "INS MethodInvocation to Assignment: = at 1", "INS SimpleName: newReplayCache to MethodInvocation at 1", "INS StringLiteral: \"fediz-ehcache.xml\" to MethodInvocation at 3"]}, {"root": "MOVE from SimpleType: ReplayCache", "operations": ["MOV SimpleName: TokenReplayCache to SimpleType: ReplayCache at 0"]}, {"root": "DEL ParameterizedType: TokenReplayCache<String>", "operations": ["DEL SimpleName: String", "DEL SimpleType: TokenReplayCache", "DEL ParameterizedType: TokenReplayCache<String>", "DEL SimpleType: String"]}, {"root": "DEL SingleMemberAnnotation", "operations": ["DEL SingleMemberAnnotation", "DEL StringLiteral: \"unchecked\"", "DEL SimpleName: SuppressWarnings"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: EHCacheTokenReplayCache", "DEL SimpleName: cacheKey", "DEL SimpleType: EHCacheTokenReplayCache", "DEL ClassInstanceCreation"]}, {"root": "DEL ParameterizedType: TokenReplayCache<String>", "operations": ["DEL SimpleType: String", "DEL ParameterizedType: TokenReplayCache<String>", "DEL SimpleName: String", "DEL SimpleType: TokenReplayCache"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: EHCacheTokenReplayCache", "DEL SimpleType: EHCacheTokenReplayCache", "DEL SimpleName: cacheKey", "DEL ClassInstanceCreation"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleType: EHCacheTokenReplayCache", "DEL ClassInstanceCreation", "DEL SimpleName: cacheKey", "DEL SimpleName: EHCacheTokenReplayCache"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL SimpleName: cacheKey", "DEL ClassInstanceCreation", "DEL SimpleType: EHCacheTokenReplayCache", "DEL SimpleName: EHCacheTokenReplayCache"]}, {"root": "DEL ParameterizedType: TokenReplayCache<String>", "operations": ["DEL SimpleType: String", "DEL SimpleType: TokenReplayCache", "DEL ParameterizedType: TokenReplayCache<String>"]}, {"root": "DEL SimpleName: getTokenReplayCache", "operations": ["DEL SimpleName: getTokenReplayCache"]}, {"root": "DEL Block", "operations": ["DEL Block"]}]}}, {"FederationContext_diff": {"operations": ["Move ImportDeclaration(43) into CompilationUnit(1453) at 25", "Move ImportDeclaration(45) into CompilationUnit(1453) at 25", "Update QualifiedName: org.apache.cxf.fediz.core.EHCacheTokenReplayCache(42) to org.apache.wss4j.common.cache.ReplayCache", "Update QualifiedName: org.apache.cxf.fediz.core.TokenReplayCache(44) to org.apache.wss4j.common.cache.ReplayCacheFactory", "Insert SimpleType: ReplayCache(135) into FieldDeclaration(138) at 1", "Insert SimpleType: ReplayCache(680) into MethodDeclaration(802) at 1", "Insert SimpleName: getTokenReplayCache(681) into MethodDeclaration(802) at 2", "Insert Block(801) into MethodDeclaration(802) at 3", "Update SimpleName: TokenReplayCache(134) to ReplayCache", "Move SimpleName: TokenReplayCache(134) into SimpleType: ReplayCache(135) at 0", "Update SimpleName: TokenReplayCache(685) to ReplayCache", "Move SimpleName: TokenReplayCache(685) into SimpleType: ReplayCache(680) at 0", "Move IfStatement(697) into Block(801) at 0", "Move VariableDeclarationStatement(705) into Block(801) at 1", "Move VariableDeclarationStatement(716) into Block(801) at 2", "Insert VariableDeclarationStatement(715) into Block(801) at 3", "Move IfStatement(798) into Block(801) at 4", "Move ReturnStatement(800) into Block(801) at 5", "Insert SimpleType: ReplayCacheFactory(709) into VariableDeclarationStatement(715) at 0", "Insert VariableDeclarationFragment(714) into VariableDeclarationStatement(715) at 1", "Update SimpleName: String(687) to ReplayCacheFactory", "Move SimpleName: String(687) into SimpleType: ReplayCacheFactory(709) at 0", "Insert SimpleName: replayCacheFactory(710) into VariableDeclarationFragment(714) at 0", "Insert MethodInvocation(713) into VariableDeclarationFragment(714) at 1", "Insert SimpleName: ReplayCacheFactory(711) into MethodInvocation(713) at 0", "Insert SimpleName: newInstance(712) into MethodInvocation(713) at 1", "Insert MethodInvocation(729) into Assignment: =(730) at 1", "Insert SimpleName: replayCacheFactory(725) into MethodInvocation(729) at 0", "Insert SimpleName: newReplayCache(726) into MethodInvocation(729) at 1", "Insert SimpleName: cacheKey(727) into MethodInvocation(729) at 2", "Insert StringLiteral: \"fediz-ehcache.xml\"(728) into MethodInvocation(729) at 3", "Insert SimpleType: ReplayCache(746) into CastExpression(750) at 0", "Insert MethodInvocation(763) into Assignment: =(764) at 1", "Insert MethodInvocation(777) into Assignment: =(778) at 1", "Insert MethodInvocation(791) into Assignment: =(792) at 1", "Update SimpleName: TokenReplayCache(745) to ReplayCache", "Move SimpleName: TokenReplayCache(745) into SimpleType: ReplayCache(746) at 0", "Insert SimpleName: replayCacheFactory(759) into MethodInvocation(763) at 0", "Insert SimpleName: newReplayCache(760) into MethodInvocation(763) at 1", "Insert SimpleName: cacheKey(761) into MethodInvocation(763) at 2", "Insert StringLiteral: \"fediz-ehcache.xml\"(762) into MethodInvocation(763) at 3", "Insert SimpleName: replayCacheFactory(773) into MethodInvocation(777) at 0", "Insert SimpleName: newReplayCache(774) into MethodInvocation(777) at 1", "Insert SimpleName: cacheKey(775) into MethodInvocation(777) at 2", "Insert StringLiteral: \"fediz-ehcache.xml\"(776) into MethodInvocation(777) at 3", "Insert SimpleName: replayCacheFactory(787) into MethodInvocation(791) at 0", "Insert SimpleName: newReplayCache(788) into MethodInvocation(791) at 1", "Insert SimpleName: cacheKey(789) into MethodInvocation(791) at 2", "Insert StringLiteral: \"fediz-ehcache.xml\"(790) into MethodInvocation(791) at 3", "Delete SimpleType: TokenReplayCache(135)", "Delete SimpleName: String(136)", "Delete SimpleType: String(137)", "Delete ParameterizedType: TokenReplayCache<String>(138)", "Delete SimpleName: SuppressWarnings(681)", "Delete StringLiteral: \"unchecked\"(682)", "Delete SingleMemberAnnotation(683)", "Delete SimpleName: EHCacheTokenReplayCache(726)", "Delete SimpleType: EHCacheTokenReplayCache(727)", "Delete SimpleName: cacheKey(728)", "Delete ClassInstanceCreation(729)", "Delete SimpleType: TokenReplayCache(746)", "Delete SimpleName: String(747)", "Delete SimpleType: String(748)", "Delete ParameterizedType: TokenReplayCache<String>(749)", "Delete SimpleName: EHCacheTokenReplayCache(762)", "Delete SimpleType: EHCacheTokenReplayCache(763)", "Delete SimpleName: cacheKey(764)", "Delete ClassInstanceCreation(765)", "Delete SimpleName: EHCacheTokenReplayCache(775)", "Delete SimpleType: EHCacheTokenReplayCache(776)", "Delete SimpleName: cacheKey(777)", "Delete ClassInstanceCreation(778)", "Delete SimpleName: EHCacheTokenReplayCache(788)", "Delete SimpleType: EHCacheTokenReplayCache(789)", "Delete SimpleName: cacheKey(790)", "Delete ClassInstanceCreation(791)", "Delete SimpleType: TokenReplayCache(686)", "Delete SimpleType: String(688)", "Delete ParameterizedType: TokenReplayCache<String>(689)", "Delete SimpleName: getTokenReplayCache(690)", "Delete Block(801)"]}}], "commit_stats": [{"total_files": 7, "deleted_files": 4, "testing": "True", "maintenance": "True", "build": "False"}]}