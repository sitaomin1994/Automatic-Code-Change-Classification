{"application": "Netflix-spectator", "csha": "eaf3c6a45aa42c93b22fa95d1135efc8ddb8d910", "files": [{"AbstractRegistry_cluster": {"actions": [{"root": "DEL FieldDeclaration", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleType: ConcurrentHashMap", "DEL Modifier: private", "DEL SimpleName: listeners", "DEL SimpleName: ConcurrentHashMap", "DEL SimpleName: RegistryListener", "DEL FieldDeclaration", "DEL Modifier: final", "DEL SimpleType: RegistryListener", "DEL ParameterizedType: ConcurrentHashMap<RegistryListener,RegistryListener>", "DEL SimpleName: RegistryListener", "DEL SimpleType: RegistryListener"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ClassInstanceCreation", "DEL ParameterizedType: ConcurrentHashMap<>", "DEL ExpressionStatement", "DEL SimpleType: ConcurrentHashMap", "DEL SimpleName: listeners", "DEL Assignment: =", "DEL SimpleName: ConcurrentHashMap"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: notifyOfAdd", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: meter"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: notifyOfAdd", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: m"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: notifyOfAdd", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: m"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: notifyOfAdd", "DEL SimpleName: m"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: listeners", "DEL PrimitiveType: void", "DEL ExpressionStatement", "DEL MarkerAnnotation", "DEL Block", "DEL SimpleName: put", "DEL SimpleName: listener", "DEL SimpleName: RegistryListener", "DEL SingleVariableDeclaration", "DEL MethodInvocation", "DEL SimpleName: Override", "DEL SimpleName: addListener", "DEL SimpleName: listener", "DEL MethodDeclaration", "DEL SimpleType: RegistryListener", "DEL Modifier: public", "DEL Modifier: final", "DEL SimpleName: listener"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: RegistryListener", "DEL MethodDeclaration", "DEL SimpleName: remove", "DEL SimpleName: Override", "DEL PrimitiveType: void", "DEL SimpleName: listeners", "DEL MarkerAnnotation", "DEL MethodInvocation", "DEL SimpleName: RegistryListener", "DEL SingleVariableDeclaration", "DEL Block", "DEL Modifier: final", "DEL SimpleName: listener", "DEL Modifier: public", "DEL SimpleName: listener", "DEL ExpressionStatement", "DEL SimpleName: removeListener"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL Modifier: private", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL Block", "DEL SimpleName: notifyOfAdd", "DEL MethodInvocation", "DEL SimpleName: Meter", "DEL SingleVariableDeclaration", "DEL SimpleName: listeners", "DEL ExpressionStatement", "DEL SimpleName: listener", "DEL SimpleName: meter", "DEL SimpleType: RegistryListener", "DEL SimpleName: values", "DEL SimpleName: listener", "DEL SimpleName: onAdd", "DEL SimpleType: Meter", "DEL SimpleName: RegistryListener", "DEL PrimitiveType: void", "DEL EnhancedForStatement", "DEL SimpleName: meter"]}]}}, {"AbstractRegistry_diff": {"operations": ["Delete Modifier: private(34)", "Delete Modifier: final(35)", "Delete SimpleName: ConcurrentHashMap(36)", "Delete SimpleType: ConcurrentHashMap(37)", "Delete SimpleName: RegistryListener(38)", "Delete SimpleType: RegistryListener(39)", "Delete SimpleName: RegistryListener(40)", "Delete SimpleType: RegistryListener(41)", "Delete ParameterizedType: ConcurrentHashMap<RegistryListener,RegistryListener>(42)", "Delete SimpleName: listeners(43)", "Delete VariableDeclarationFragment(44)", "Delete FieldDeclaration(45)", "Delete SimpleName: listeners(76)", "Delete SimpleName: ConcurrentHashMap(77)", "Delete SimpleType: ConcurrentHashMap(78)", "Delete ParameterizedType: ConcurrentHashMap<>(79)", "Delete ClassInstanceCreation(80)", "Delete Assignment: =(81)", "Delete ExpressionStatement(82)", "Delete SimpleName: notifyOfAdd(419)", "Delete SimpleName: meter(420)", "Delete MethodInvocation(421)", "Delete ExpressionStatement(422)", "Delete SimpleName: notifyOfAdd(471)", "Delete SimpleName: m(472)", "Delete MethodInvocation(473)", "Delete ExpressionStatement(474)", "Delete SimpleName: notifyOfAdd(554)", "Delete SimpleName: m(555)", "Delete MethodInvocation(556)", "Delete ExpressionStatement(557)", "Delete SimpleName: notifyOfAdd(637)", "Delete SimpleName: m(638)", "Delete MethodInvocation(639)", "Delete ExpressionStatement(640)", "Delete SimpleName: Override(710)", "Delete MarkerAnnotation(711)", "Delete Modifier: public(712)", "Delete Modifier: final(713)", "Delete PrimitiveType: void(714)", "Delete SimpleName: addListener(715)", "Delete SimpleName: RegistryListener(716)", "Delete SimpleType: RegistryListener(717)", "Delete SimpleName: listener(718)", "Delete SingleVariableDeclaration(719)", "Delete SimpleName: listeners(720)", "Delete SimpleName: put(721)", "Delete SimpleName: listener(722)", "Delete SimpleName: listener(723)", "Delete MethodInvocation(724)", "Delete ExpressionStatement(725)", "Delete Block(726)", "Delete MethodDeclaration(727)", "Delete SimpleName: Override(728)", "Delete MarkerAnnotation(729)", "Delete Modifier: public(730)", "Delete Modifier: final(731)", "Delete PrimitiveType: void(732)", "Delete SimpleName: removeListener(733)", "Delete SimpleName: RegistryListener(734)", "Delete SimpleType: RegistryListener(735)", "Delete SimpleName: listener(736)", "Delete SingleVariableDeclaration(737)", "Delete SimpleName: listeners(738)", "Delete SimpleName: remove(739)", "Delete SimpleName: listener(740)", "Delete MethodInvocation(741)", "Delete ExpressionStatement(742)", "Delete Block(743)", "Delete MethodDeclaration(744)", "Delete Modifier: private(745)", "Delete PrimitiveType: void(746)", "Delete SimpleName: notifyOfAdd(747)", "Delete SimpleName: Meter(748)", "Delete SimpleType: Meter(749)", "Delete SimpleName: meter(750)", "Delete SingleVariableDeclaration(751)", "Delete SimpleName: RegistryListener(752)", "Delete SimpleType: RegistryListener(753)", "Delete SimpleName: listener(754)", "Delete SingleVariableDeclaration(755)", "Delete SimpleName: listeners(756)", "Delete SimpleName: values(757)", "Delete MethodInvocation(758)", "Delete SimpleName: listener(759)", "Delete SimpleName: onAdd(760)", "Delete SimpleName: meter(761)", "Delete MethodInvocation(762)", "Delete ExpressionStatement(763)", "Delete Block(764)", "Delete EnhancedForStatement(765)", "Delete Block(766)", "Delete MethodDeclaration(767)"]}}, {"CompositeRegistry_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL MarkerAnnotation", "DEL SimpleName: addListener", "DEL PrimitiveType: void", "DEL Block", "DEL SingleVariableDeclaration", "DEL SimpleType: RegistryListener", "DEL SimpleName: RegistryListener", "DEL Modifier: public", "DEL MethodDeclaration", "DEL SimpleName: listener", "DEL SimpleName: Override"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: RegistryListener", "DEL MethodDeclaration", "DEL SimpleName: listener", "DEL Block", "DEL MarkerAnnotation", "DEL PrimitiveType: void", "DEL SingleVariableDeclaration", "DEL SimpleType: RegistryListener", "DEL SimpleName: Override", "DEL Modifier: public", "DEL SimpleName: removeListener"]}]}}, {"CompositeRegistry_diff": {"operations": ["Delete SimpleName: Override(598)", "Delete MarkerAnnotation(599)", "Delete Modifier: public(600)", "Delete PrimitiveType: void(601)", "Delete SimpleName: addListener(602)", "Delete SimpleName: RegistryListener(603)", "Delete SimpleType: RegistryListener(604)", "Delete SimpleName: listener(605)", "Delete SingleVariableDeclaration(606)", "Delete Block(607)", "Delete MethodDeclaration(608)", "Delete SimpleName: Override(609)", "Delete MarkerAnnotation(610)", "Delete Modifier: public(611)", "Delete PrimitiveType: void(612)", "Delete SimpleName: removeListener(613)", "Delete SimpleName: RegistryListener(614)", "Delete SimpleType: RegistryListener(615)", "Delete SimpleName: listener(616)", "Delete SingleVariableDeclaration(617)", "Delete Block(618)", "Delete MethodDeclaration(619)"]}}, {"ExtendedRegistry_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: addListener", "DEL SimpleName: listener", "DEL Block", "DEL SimpleName: addListener", "DEL SingleVariableDeclaration", "DEL MarkerAnnotation", "DEL SimpleName: Override", "DEL ExpressionStatement", "DEL Modifier: public", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL SimpleName: listener", "DEL SimpleName: impl", "DEL PrimitiveType: void", "DEL SimpleType: RegistryListener", "DEL SimpleName: RegistryListener"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: impl", "DEL Modifier: public", "DEL ExpressionStatement", "DEL SimpleName: Override", "DEL SimpleName: listener", "DEL SingleVariableDeclaration", "DEL SimpleType: RegistryListener", "DEL Block", "DEL MarkerAnnotation", "DEL SimpleName: listener", "DEL MethodDeclaration", "DEL SimpleName: removeListener", "DEL PrimitiveType: void", "DEL MethodInvocation", "DEL SimpleName: removeListener", "DEL SimpleName: RegistryListener"]}]}}, {"ExtendedRegistry_diff": {"operations": ["Delete SimpleName: Override(242)", "Delete MarkerAnnotation(243)", "Delete Modifier: public(244)", "Delete PrimitiveType: void(245)", "Delete SimpleName: addListener(246)", "Delete SimpleName: RegistryListener(247)", "Delete SimpleType: RegistryListener(248)", "Delete SimpleName: listener(249)", "Delete SingleVariableDeclaration(250)", "Delete SimpleName: impl(251)", "Delete SimpleName: addListener(252)", "Delete SimpleName: listener(253)", "Delete MethodInvocation(254)", "Delete ExpressionStatement(255)", "Delete Block(256)", "Delete MethodDeclaration(257)", "Delete SimpleName: Override(258)", "Delete MarkerAnnotation(259)", "Delete Modifier: public(260)", "Delete PrimitiveType: void(261)", "Delete SimpleName: removeListener(262)", "Delete SimpleName: RegistryListener(263)", "Delete SimpleType: RegistryListener(264)", "Delete SimpleName: listener(265)", "Delete SingleVariableDeclaration(266)", "Delete SimpleName: impl(267)", "Delete SimpleName: removeListener(268)", "Delete SimpleName: listener(269)", "Delete MethodInvocation(270)", "Delete ExpressionStatement(271)", "Delete Block(272)", "Delete MethodDeclaration(273)"]}}, {"NoopRegistry_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL SimpleName: RegistryListener", "DEL MarkerAnnotation", "DEL SimpleName: listener", "DEL Modifier: public", "DEL SimpleName: addListener", "DEL SimpleName: Override", "DEL MethodDeclaration", "DEL PrimitiveType: void", "DEL SingleVariableDeclaration", "DEL SimpleType: RegistryListener", "DEL Block"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL SimpleName: listener", "DEL Modifier: public", "DEL SimpleType: RegistryListener", "DEL PrimitiveType: void", "DEL SimpleName: removeListener", "DEL Block", "DEL SimpleName: Override", "DEL SingleVariableDeclaration", "DEL MarkerAnnotation", "DEL SimpleName: RegistryListener"]}]}}, {"NoopRegistry_diff": {"operations": ["Delete SimpleName: Override(159)", "Delete MarkerAnnotation(160)", "Delete Modifier: public(161)", "Delete PrimitiveType: void(162)", "Delete SimpleName: addListener(163)", "Delete SimpleName: RegistryListener(164)", "Delete SimpleType: RegistryListener(165)", "Delete SimpleName: listener(166)", "Delete SingleVariableDeclaration(167)", "Delete Block(168)", "Delete MethodDeclaration(169)", "Delete SimpleName: Override(170)", "Delete MarkerAnnotation(171)", "Delete Modifier: public(172)", "Delete PrimitiveType: void(173)", "Delete SimpleName: removeListener(174)", "Delete SimpleName: RegistryListener(175)", "Delete SimpleType: RegistryListener(176)", "Delete SimpleName: listener(177)", "Delete SingleVariableDeclaration(178)", "Delete Block(179)", "Delete MethodDeclaration(180)"]}}, {"Registry_cluster": {"actions": [{"root": "DEL MethodDeclaration", "operations": ["DEL Javadoc", "DEL SingleVariableDeclaration", "DEL TextElement: Add a listener that will get notified whenever a meter is added into the registry. ", "DEL SimpleName: addListener", "DEL SimpleType: RegistryListener", "DEL MethodDeclaration", "DEL SimpleName: RegistryListener", "DEL TagElement", "DEL PrimitiveType: void", "DEL SimpleName: listener"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TagElement", "DEL SimpleName: listener", "DEL SimpleName: RegistryListener", "DEL SingleVariableDeclaration", "DEL TextElement: Remove a listener from the registry. ", "DEL SimpleName: removeListener", "DEL SimpleType: RegistryListener", "DEL MethodDeclaration", "DEL Javadoc", "DEL PrimitiveType: void"]}]}}, {"Registry_diff": {"operations": ["Delete TextElement: Add a listener that will get notified whenever a meter is added into the registry. (162)", "Delete TagElement(163)", "Delete Javadoc(164)", "Delete PrimitiveType: void(165)", "Delete SimpleName: addListener(166)", "Delete SimpleName: RegistryListener(167)", "Delete SimpleType: RegistryListener(168)", "Delete SimpleName: listener(169)", "Delete SingleVariableDeclaration(170)", "Delete MethodDeclaration(171)", "Delete TextElement: Remove a listener from the registry. (172)", "Delete TagElement(173)", "Delete Javadoc(174)", "Delete PrimitiveType: void(175)", "Delete SimpleName: removeListener(176)", "Delete SimpleName: RegistryListener(177)", "Delete SimpleType: RegistryListener(178)", "Delete SimpleName: listener(179)", "Delete SingleVariableDeclaration(180)", "Delete MethodDeclaration(181)"]}}, {"RegistryListener_cluster": {"actions": [{"root": "DEL PackageDeclaration", "operations": ["DEL PackageDeclaration", "DEL TextElement: Licensed under the Apache License, Version 2.0 (the \"License\");", "DEL TagElement", "DEL TextElement: http://www.apache.org/licenses/LICENSE-2.0", "DEL TextElement: Unless required by applicable law or agreed to in writing, software", "DEL Javadoc", "DEL TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "DEL TextElement: See the License for the specific language governing permissions and", "DEL TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,", "DEL TextElement: you may not use this file except in compliance with the License.", "DEL TextElement: limitations under the License.", "DEL TextElement: You may obtain a copy of the License at", "DEL TextElement: Copyright 2014 Netflix, Inc.", "DEL QualifiedName: com.netflix.spectator.api"]}, {"root": "DEL TypeDeclaration: interface", "operations": ["DEL SimpleName: RegistryListener", "DEL Javadoc", "DEL Javadoc", "DEL SimpleName: Meter", "DEL PrimitiveType: void", "DEL SimpleType: Meter", "DEL TextElement: Invoked when a meter is added to the registry. ", "DEL TagElement", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL SimpleName: meter", "DEL TextElement: Callback interface to receive notifications when meters are added to the registry.", "DEL SimpleName: onAdd", "DEL TagElement", "DEL TypeDeclaration: interface", "DEL Modifier: public"]}]}}, {"RegistryListener_diff": {"operations": ["Delete TextElement: Copyright 2014 Netflix, Inc.(0)", "Delete TextElement: Licensed under the Apache License, Version 2.0 (the \"License\");(1)", "Delete TextElement: you may not use this file except in compliance with the License.(2)", "Delete TextElement: You may obtain a copy of the License at(3)", "Delete TextElement: http://www.apache.org/licenses/LICENSE-2.0(4)", "Delete TextElement: Unless required by applicable law or agreed to in writing, software(5)", "Delete TextElement: distributed under the License is distributed on an \"AS IS\" BASIS,(6)", "Delete TextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.(7)", "Delete TextElement: See the License for the specific language governing permissions and(8)", "Delete TextElement: limitations under the License.(9)", "Delete TagElement(10)", "Delete Javadoc(11)", "Delete QualifiedName: com.netflix.spectator.api(12)", "Delete PackageDeclaration(13)", "Delete TextElement: Callback interface to receive notifications when meters are added to the registry.(14)", "Delete TagElement(15)", "Delete Javadoc(16)", "Delete Modifier: public(17)", "Delete SimpleName: RegistryListener(18)", "Delete TextElement: Invoked when a meter is added to the registry. (19)", "Delete TagElement(20)", "Delete Javadoc(21)", "Delete PrimitiveType: void(22)", "Delete SimpleName: onAdd(23)", "Delete SimpleName: Meter(24)", "Delete SimpleType: Meter(25)", "Delete SimpleName: meter(26)", "Delete SingleVariableDeclaration(27)", "Delete MethodDeclaration(28)", "Delete TypeDeclaration: interface(29)"]}}], "commit_stats": [{"total_files": 8, "deleted_files": 1, "testing": "True", "maintenance": "False", "build": "False"}]}