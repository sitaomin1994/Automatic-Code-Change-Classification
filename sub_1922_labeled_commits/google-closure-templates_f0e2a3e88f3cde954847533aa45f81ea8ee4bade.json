{"application": "google-closure-templates", "csha": "f0e2a3e88f3cde954847533aa45f81ea8ee4bade", "files": [{"SoyFileSet_cluster": {"actions": [{"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 15", "MOV IfStatement to Block at 8"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS SimpleName: cache to InfixExpression: == at 0", "INS InfixExpression: == to IfStatement at 0", "INS NullLiteral to InfixExpression: == at 1", "INS Block to IfStatement at 1", "INS IfStatement to Block at 5"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS InfixExpression: != to MethodInvocation at 3", "operations": ["INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: cache to InfixExpression: != at 0", "INS InfixExpression: != to MethodInvocation at 3"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: errorReporter", "DEL SimpleName: exec", "DEL BooleanLiteral: true", "DEL SimpleName: generalOptions", "DEL ClassInstanceCreation", "DEL ExpressionStatement", "DEL SimpleName: getCompileTimeGlobals", "DEL MethodInvocation", "DEL SimpleName: typeRegistry", "DEL SimpleName: SubstituteGlobalsVisitor", "DEL SimpleName: soyTree", "DEL SimpleType: SubstituteGlobalsVisitor", "DEL MethodInvocation"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: checkpoint", "DEL SimpleName: errorReporter", "DEL SimpleName: checkpoint"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL Assignment: =", "DEL SimpleName: checkpoint", "DEL ExpressionStatement", "DEL SimpleName: errorReporter", "DEL SimpleName: checkpoint"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: exec", "DEL SimpleName: generalOptions", "DEL SimpleName: errorReporter", "DEL SimpleName: typeRegistry", "DEL SimpleName: SubstituteGlobalsVisitor", "DEL ClassInstanceCreation", "DEL SimpleType: SubstituteGlobalsVisitor", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: soyTree", "DEL MethodInvocation", "DEL BooleanLiteral: true", "DEL SimpleName: getCompileTimeGlobals"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: checkpoint", "DEL ExpressionStatement", "DEL SimpleName: checkpoint", "DEL SimpleName: errorReporter", "DEL Assignment: =", "DEL MethodInvocation"]}]}}, {"SoyFileSet_diff": {"operations": ["Move IfStatement(2478) into Block(2506) at 15", "Move IfStatement(2521) into Block(2506) at 8", "Insert IfStatement(2306) into Block(2324) at 5", "Insert InfixExpression: ==(2296) into IfStatement(2306) at 0", "Insert Block(2305) into IfStatement(2306) at 1", "Insert SimpleName: cache(2294) into InfixExpression: ==(2296) at 0", "Insert NullLiteral(2295) into InfixExpression: ==(2296) at 1", "Move ExpressionStatement(2314) into Block(2305) at 0", "Insert InfixExpression: !=(2467) into MethodInvocation(2469) at 3", "Insert SimpleName: cache(2465) into InfixExpression: !=(2467) at 0", "Insert NullLiteral(2466) into InfixExpression: !=(2467) at 1", "Delete SimpleName: SubstituteGlobalsVisitor(2294)", "Delete SimpleType: SubstituteGlobalsVisitor(2295)", "Delete SimpleName: generalOptions(2296)", "Delete SimpleName: getCompileTimeGlobals(2297)", "Delete MethodInvocation(2298)", "Delete SimpleName: typeRegistry(2299)", "Delete BooleanLiteral: true(2300)", "Delete SimpleName: errorReporter(2301)", "Delete ClassInstanceCreation(2302)", "Delete SimpleName: exec(2303)", "Delete SimpleName: soyTree(2304)", "Delete MethodInvocation(2305)", "Delete ExpressionStatement(2306)", "Delete SimpleName: checkpoint(2413)", "Delete SimpleName: errorReporter(2414)", "Delete SimpleName: checkpoint(2415)", "Delete MethodInvocation(2416)", "Delete Assignment: =(2417)", "Delete ExpressionStatement(2418)", "Delete SimpleName: checkpoint(2446)", "Delete SimpleName: errorReporter(2447)", "Delete SimpleName: checkpoint(2448)", "Delete MethodInvocation(2449)", "Delete Assignment: =(2450)", "Delete ExpressionStatement(2451)", "Delete SimpleName: SubstituteGlobalsVisitor(2452)", "Delete SimpleType: SubstituteGlobalsVisitor(2453)", "Delete SimpleName: generalOptions(2454)", "Delete SimpleName: getCompileTimeGlobals(2455)", "Delete MethodInvocation(2456)", "Delete SimpleName: typeRegistry(2457)", "Delete BooleanLiteral: true(2458)", "Delete SimpleName: errorReporter(2459)", "Delete ClassInstanceCreation(2460)", "Delete SimpleName: exec(2461)", "Delete SimpleName: soyTree(2462)", "Delete MethodInvocation(2463)", "Delete ExpressionStatement(2464)", "Delete SimpleName: checkpoint(2479)", "Delete SimpleName: errorReporter(2480)", "Delete SimpleName: checkpoint(2481)", "Delete MethodInvocation(2482)", "Delete Assignment: =(2483)", "Delete ExpressionStatement(2484)"]}}, {"BytecodeCompiler_cluster": {"actions": [{"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 6", "INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SimpleName: developmentMode to SingleVariableDeclaration at 1"]}, {"root": "INS TagElement: @param to Javadoc at 1", "operations": ["INS SimpleName: registry to TagElement: @param at 0", "INS TextElement:  All the templates to compile to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 1"]}, {"root": "INS TagElement: @param to Javadoc at 2", "operations": ["INS TextElement: compile classes lazily to TagElement: @param at 2", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: developmentMode to TagElement: @param at 0", "INS TextElement:  Whether or not we are in development mode.  In development mode we  to TagElement: @param at 1"]}, {"root": "INS TagElement: @param to Javadoc at 3", "operations": ["INS TagElement: @param to Javadoc at 3", "INS SimpleName: reporter to TagElement: @param at 0", "INS TextElement:  The error reporter to TagElement: @param at 1"]}, {"root": "INS IfStatement to Block at 5", "operations": ["INS MethodInvocation to ClassInstanceCreation at 1", "INS SimpleName: compilerRegistry to ClassInstanceCreation at 1", "INS SimpleName: CompiledTemplates to SimpleType: CompiledTemplates at 0", "INS Block to IfStatement at 1", "INS SimpleType: CompiledTemplates to ClassInstanceCreation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS IfStatement to Block at 5", "INS SimpleType: CompiledTemplates to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS ReturnStatement to Block at 1", "INS ClassInstanceCreation to ClassInstanceCreation at 2", "INS SimpleType: CompilingClassLoader to ClassInstanceCreation at 0", "INS SimpleName: developmentMode to IfStatement at 0", "INS SimpleName: CompiledTemplates to SimpleType: CompiledTemplates at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: of to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 8"]}, {"root": "INS EnhancedForStatement to Block at 11", "operations": ["INS MethodInvocation to EnhancedForStatement at 1", "INS Block to EnhancedForStatement at 2", "INS EnhancedForStatement to Block at 11", "INS SimpleName: template to SingleVariableDeclaration at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0"]}, {"root": "INS SimpleType: CompiledTemplates to VariableDeclarationStatement at 0", "operations": ["INS SimpleName: CompiledTemplates to SimpleType: CompiledTemplates at 0", "INS SimpleType: CompiledTemplates to VariableDeclarationStatement at 0"]}, {"root": "UPDATE from factories to templates", "operations": ["UPD SimpleName: factories from factories to templates", "UPD SimpleName: factories from factories to templates", "UPD SimpleName: getAllTemplates from getAllTemplates to templates", "UPD SimpleName: compilerRegistry from compilerRegistry to templates", "UPD SimpleName: name from name to templates"]}, {"root": "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to ClassInstanceCreation at 1", "INS ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleType: String to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from node to compilerRegistry", "operations": ["UPD SimpleName: node from node to compilerRegistry", "UPD SimpleName: ImmutableMap from ImmutableMap to compilerRegistry", "UPD SimpleName: put from put to compilerRegistry"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: put to MethodInvocation at 0", "MOV SimpleName: name to MethodInvocation at 1"]}, {"root": "UPDATE from getTemplateName to getTemplateNames", "operations": ["UPD SimpleName: getTemplateName from getTemplateName to getTemplateNames", "UPD SimpleName: builder from builder to getTemplateNames", "UPD SimpleName: name from name to getTemplateNames"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: factories to MethodInvocation at 2"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: CompiledTemplates to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV MethodInvocation to ClassInstanceCreation at 2"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: factories to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from registry to Optional", "operations": ["UPD SimpleName: registry from registry to Optional"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: registry to MethodInvocation at 0", "MOV SimpleName: getAllTemplates to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getTemplateName to MethodInvocation at 1", "MOV SimpleName: node to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: compilerRegistry to MethodInvocation at 0", "MOV SimpleName: getTemplateInfo to MethodInvocation at 1", "MOV SimpleName: name to MethodInvocation at 2"]}, {"root": "UPDATE from getTemplateInfo to getTemplateFactory", "operations": ["UPD SimpleName: getTemplateInfo from getTemplateInfo to getTemplateFactory"]}, {"root": "UPDATE from name to template", "operations": ["UPD SimpleName: name from name to template"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: TemplateCompiler to VariableDeclarationStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: builder to MethodInvocation at 1", "MOV SimpleName: ImmutableMap to MethodInvocation at 0"]}, {"root": "UPDATE from TemplateNode to CompilingClassLoader", "operations": ["UPD SimpleName: TemplateNode from TemplateNode to CompilingClassLoader"]}, {"root": "MOVE from SimpleType: CompilingClassLoader", "operations": ["MOV SimpleName: TemplateNode to SimpleType: CompilingClassLoader at 0"]}, {"root": "UPDATE from getTemplateInfo to getTemplateInfoByTemplateName", "operations": ["UPD SimpleName: getTemplateInfo from getTemplateInfo to getTemplateInfoByTemplateName"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: TemplateCompiler to ClassInstanceCreation at 0"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.template.soy.jbcsrc.StandardNames.FACTORY_CLASS"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.annotations.VisibleForTesting", "DEL ImportDeclaration"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.common.collect.ImmutableMap"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.template.soy.jbcsrc.shared.CompiledTemplate"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL QualifiedName: ImmutableMap.Builder", "DEL SimpleName: String", "DEL SimpleType: ImmutableMap.Builder", "DEL SimpleType: CompiledTemplate.Factory", "DEL VariableDeclarationFragment", "DEL ParameterizedType: ImmutableMap.Builder<String,CompiledTemplate.Factory>", "DEL VariableDeclarationStatement", "DEL SimpleType: String", "DEL MethodInvocation", "DEL QualifiedName: CompiledTemplate.Factory"]}, {"root": "DEL EnhancedForStatement", "operations": ["DEL MethodInvocation", "DEL MethodInvocation", "DEL SingleVariableDeclaration", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: factories", "DEL SimpleType: TemplateNode", "DEL MethodInvocation", "DEL EnhancedForStatement", "DEL ExpressionStatement", "DEL SimpleName: loadFactory", "DEL SimpleName: node"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL SimpleName: build"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL SimpleType: CompiledTemplateMetadata", "DEL SimpleName: forName", "DEL SimpleName: Class", "DEL SimpleName: String", "DEL SimpleName: VisibleForTesting", "DEL SimpleType: Class", "DEL SimpleName: className", "DEL SimpleType: ClassNotFoundException", "DEL SimpleName: asSubclass", "DEL QualifiedName: CompiledTemplate.Factory", "DEL SimpleName: newInstance", "DEL ReturnStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: innerClass", "DEL SimpleName: ClassNotFoundException", "DEL SimpleType: CompiledTemplate.Factory", "DEL Assignment: =", "DEL MethodInvocation", "DEL SimpleName: e", "DEL SimpleName: Class", "DEL ParameterizedType: Class<? extends CompiledTemplate.Factory>", "DEL SimpleType: CompiledTemplate.Factory", "DEL SingleVariableDeclaration", "DEL SimpleName: factoryName", "DEL SimpleName: templateInfo", "DEL MethodInvocation", "DEL Block", "DEL SimpleName: ClassLoader", "DEL WildcardType: ? extends CompiledTemplate.Factory", "DEL SimpleName: typeInfo", "DEL SingleVariableDeclaration", "DEL SingleVariableDeclaration", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: templateInfo", "DEL VariableDeclarationStatement", "DEL ClassInstanceCreation", "DEL SimpleName: FACTORY_CLASS", "DEL SimpleName: loader", "DEL QualifiedName: CompiledTemplate.Factory", "DEL SimpleType: CompiledTemplate.Factory", "DEL QualifiedName: CompiledTemplate.Factory", "DEL SimpleName: IllegalAccessException", "DEL SimpleType: CompiledTemplate.Factory", "DEL CatchClause", "DEL SimpleName: loadFactory", "DEL SimpleName: factoryName", "DEL UnionType: InstantiationException|IllegalAccessException|ClassNotFoundException", "DEL SimpleType: AssertionError", "DEL Block", "DEL SimpleName: CompiledTemplateMetadata", "DEL VariableDeclarationFragment", "DEL Modifier: static", "DEL ThrowStatement", "DEL SimpleType: InstantiationException", "DEL SimpleName: factory", "DEL MethodInvocation", "DEL SimpleName: InstantiationException", "DEL MarkerAnnotation", "DEL SimpleName: loader", "DEL SimpleName: factory", "DEL MethodInvocation", "DEL SimpleName: factoryClass", "DEL Block", "DEL SimpleName: AssertionError", "DEL TypeLiteral", "DEL TryStatement", "DEL BooleanLiteral: true", "DEL VariableDeclarationStatement", "DEL SimpleType: ClassLoader", "DEL ExpressionStatement", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL QualifiedName: CompiledTemplate.Factory", "DEL VariableDeclarationStatement", "DEL VariableDeclarationFragment", "DEL SimpleName: e", "DEL SimpleType: IllegalAccessException", "DEL SimpleName: factoryClass", "DEL SimpleName: factory"]}, {"root": "DEL SimpleName: errorReporter", "operations": ["DEL SimpleName: errorReporter"]}]}}, {"BytecodeCompiler_diff": {"operations": ["Insert SingleVariableDeclaration(82) into MethodDeclaration(253) at 6", "Insert TagElement: @param(53) into Javadoc(67) at 1", "Insert TagElement: @param(57) into Javadoc(67) at 2", "Insert TagElement: @param(60) into Javadoc(67) at 3", "Insert PrimitiveType: boolean(80) into SingleVariableDeclaration(82) at 0", "Insert SimpleName: developmentMode(81) into SingleVariableDeclaration(82) at 1", "Insert IfStatement(149) into Block(252) at 5", "Move VariableDeclarationStatement(211) into Block(252) at 8", "Insert EnhancedForStatement(239) into Block(252) at 11", "Insert SimpleName: registry(51) into TagElement: @param(53) at 0", "Insert TextElement:  All the templates to compile(52) into TagElement: @param(53) at 1", "Insert SimpleName: developmentMode(54) into TagElement: @param(57) at 0", "Insert TextElement:  Whether or not we are in development mode.  In development mode we (55) into TagElement: @param(57) at 1", "Insert TextElement: compile classes lazily(56) into TagElement: @param(57) at 2", "Insert SimpleName: reporter(58) into TagElement: @param(60) at 0", "Insert TextElement:  The error reporter(59) into TagElement: @param(60) at 1", "Insert SimpleName: developmentMode(127) into IfStatement(149) at 0", "Insert Block(148) into IfStatement(149) at 1", "Insert SimpleType: CompiledTemplates(171) into VariableDeclarationStatement(183) at 0", "Insert SingleVariableDeclaration(229) into EnhancedForStatement(239) at 0", "Insert MethodInvocation(232) into EnhancedForStatement(239) at 1", "Insert Block(238) into EnhancedForStatement(239) at 2", "Insert VariableDeclarationStatement(142) into Block(148) at 0", "Insert ReturnStatement(147) into Block(148) at 1", "Insert SimpleName: CompiledTemplates(170) into SimpleType: CompiledTemplates(171) at 0", "Update SimpleName: name(206) to templates", "Insert ClassInstanceCreation(181) into VariableDeclarationFragment(182) at 1", "Move SimpleType: String(205) into SingleVariableDeclaration(229) at 0", "Insert SimpleName: template(228) into SingleVariableDeclaration(229) at 1", "Update SimpleName: put(213) to compilerRegistry", "Move SimpleName: put(213) into MethodInvocation(232) at 0", "Update SimpleName: name(214) to getTemplateNames", "Move SimpleName: name(214) into MethodInvocation(232) at 1", "Insert ExpressionStatement(237) into Block(238) at 0", "Update SimpleName: factories(239) to templates", "Move SimpleName: factories(239) into MethodInvocation(250) at 2", "Insert SimpleType: CompiledTemplates(129) into VariableDeclarationStatement(142) at 0", "Insert VariableDeclarationFragment(141) into VariableDeclarationStatement(142) at 1", "Insert MethodInvocation(146) into ReturnStatement(147) at 0", "Move SimpleType: CompiledTemplates(238) into ClassInstanceCreation(181) at 0", "Insert MethodInvocation(177) into ClassInstanceCreation(181) at 1", "Move MethodInvocation(222) into ClassInstanceCreation(181) at 2", "Insert MethodInvocation(236) into ExpressionStatement(237) at 0", "Insert SimpleName: CompiledTemplates(128) into SimpleType: CompiledTemplates(129) at 0", "Update SimpleName: factories(191) to templates", "Move SimpleName: factories(191) into VariableDeclarationFragment(141) at 0", "Insert ClassInstanceCreation(140) into VariableDeclarationFragment(141) at 1", "Update SimpleName: registry(201) to Optional", "Move SimpleName: registry(201) into MethodInvocation(146) at 0", "Insert SimpleName: of(144) into MethodInvocation(146) at 1", "Update SimpleName: getAllTemplates(202) to templates", "Move SimpleName: getAllTemplates(202) into MethodInvocation(146) at 2", "Update SimpleName: node(207) to compilerRegistry", "Move SimpleName: node(207) into MethodInvocation(177) at 0", "Update SimpleName: getTemplateName(208) to getTemplateNames", "Move SimpleName: getTemplateName(208) into MethodInvocation(177) at 1", "Update SimpleName: compilerRegistry(216) to templates", "Move SimpleName: compilerRegistry(216) into MethodInvocation(236) at 0", "Update SimpleName: getTemplateInfo(217) to getTemplateFactory", "Move SimpleName: getTemplateInfo(217) into MethodInvocation(236) at 1", "Update SimpleName: name(218) to template", "Move SimpleName: name(218) into MethodInvocation(236) at 2", "Insert SimpleType: CompiledTemplates(132) into ClassInstanceCreation(140) at 0", "Insert MethodInvocation(135) into ClassInstanceCreation(140) at 1", "Insert ClassInstanceCreation(139) into ClassInstanceCreation(140) at 2", "Move SimpleType: TemplateCompiler(488) into VariableDeclarationStatement(420) at 0", "Insert SimpleName: CompiledTemplates(131) into SimpleType: CompiledTemplates(132) at 0", "Update SimpleName: ImmutableMap(192) to compilerRegistry", "Move SimpleName: ImmutableMap(192) into MethodInvocation(135) at 0", "Update SimpleName: builder(193) to getTemplateNames", "Move SimpleName: builder(193) into MethodInvocation(135) at 1", "Insert SimpleType: CompilingClassLoader(137) into ClassInstanceCreation(139) at 0", "Insert SimpleName: compilerRegistry(138) into ClassInstanceCreation(139) at 1", "Update SimpleName: TemplateNode(197) to CompilingClassLoader", "Move SimpleName: TemplateNode(197) into SimpleType: CompilingClassLoader(137) at 0", "Update SimpleName: getTemplateInfo(479) to getTemplateInfoByTemplateName", "Move SimpleType: TemplateCompiler(485) into ClassInstanceCreation(418) at 0", "Delete QualifiedName: com.google.template.soy.jbcsrc.StandardNames.FACTORY_CLASS(2)", "Delete ImportDeclaration(3)", "Delete QualifiedName: com.google.common.annotations.VisibleForTesting(6)", "Delete ImportDeclaration(7)", "Delete QualifiedName: com.google.common.collect.ImmutableMap(14)", "Delete ImportDeclaration(15)", "Delete QualifiedName: com.google.template.soy.jbcsrc.shared.CompiledTemplate(20)", "Delete ImportDeclaration(21)", "Delete MethodInvocation(209)", "Delete QualifiedName: ImmutableMap.Builder(184)", "Delete SimpleType: ImmutableMap.Builder(185)", "Delete SimpleName: String(186)", "Delete SimpleType: String(187)", "Delete QualifiedName: CompiledTemplate.Factory(188)", "Delete SimpleType: CompiledTemplate.Factory(189)", "Delete ParameterizedType: ImmutableMap.Builder<String,CompiledTemplate.Factory>(190)", "Delete MethodInvocation(194)", "Delete VariableDeclarationFragment(195)", "Delete VariableDeclarationStatement(196)", "Delete SimpleType: TemplateNode(198)", "Delete SimpleName: node(199)", "Delete SingleVariableDeclaration(200)", "Delete MethodInvocation(203)", "Delete SimpleName: factories(212)", "Delete SimpleName: loadFactory(215)", "Delete MethodInvocation(219)", "Delete MethodInvocation(223)", "Delete MethodInvocation(224)", "Delete ExpressionStatement(225)", "Delete Block(226)", "Delete EnhancedForStatement(227)", "Delete SimpleName: build(240)", "Delete MethodInvocation(241)", "Delete ClassInstanceCreation(242)", "Delete SimpleName: VisibleForTesting(284)", "Delete MarkerAnnotation(285)", "Delete Modifier: static(286)", "Delete QualifiedName: CompiledTemplate.Factory(287)", "Delete SimpleType: CompiledTemplate.Factory(288)", "Delete SimpleName: loadFactory(289)", "Delete SimpleName: CompiledTemplateMetadata(290)", "Delete SimpleType: CompiledTemplateMetadata(291)", "Delete SimpleName: templateInfo(292)", "Delete SingleVariableDeclaration(293)", "Delete SimpleName: ClassLoader(294)", "Delete SimpleType: ClassLoader(295)", "Delete SimpleName: loader(296)", "Delete SingleVariableDeclaration(297)", "Delete QualifiedName: CompiledTemplate.Factory(298)", "Delete SimpleType: CompiledTemplate.Factory(299)", "Delete SimpleName: factory(300)", "Delete VariableDeclarationFragment(301)", "Delete VariableDeclarationStatement(302)", "Delete SimpleName: String(303)", "Delete SimpleType: String(304)", "Delete SimpleName: factoryName(305)", "Delete SimpleName: templateInfo(306)", "Delete SimpleName: typeInfo(307)", "Delete MethodInvocation(308)", "Delete SimpleName: innerClass(309)", "Delete SimpleName: FACTORY_CLASS(310)", "Delete MethodInvocation(311)", "Delete SimpleName: className(312)", "Delete MethodInvocation(313)", "Delete VariableDeclarationFragment(314)", "Delete VariableDeclarationStatement(315)", "Delete SimpleName: Class(316)", "Delete SimpleType: Class(317)", "Delete QualifiedName: CompiledTemplate.Factory(318)", "Delete SimpleType: CompiledTemplate.Factory(319)", "Delete WildcardType: ? extends CompiledTemplate.Factory(320)", "Delete ParameterizedType: Class<? extends CompiledTemplate.Factory>(321)", "Delete SimpleName: factoryClass(322)", "Delete SimpleName: Class(323)", "Delete SimpleName: forName(324)", "Delete SimpleName: factoryName(325)", "Delete BooleanLiteral: true(326)", "Delete SimpleName: loader(327)", "Delete MethodInvocation(328)", "Delete SimpleName: asSubclass(329)", "Delete QualifiedName: CompiledTemplate.Factory(330)", "Delete SimpleType: CompiledTemplate.Factory(331)", "Delete TypeLiteral(332)", "Delete MethodInvocation(333)", "Delete VariableDeclarationFragment(334)", "Delete VariableDeclarationStatement(335)", "Delete SimpleName: factory(336)", "Delete SimpleName: factoryClass(337)", "Delete SimpleName: newInstance(338)", "Delete MethodInvocation(339)", "Delete Assignment: =(340)", "Delete ExpressionStatement(341)", "Delete Block(342)", "Delete SimpleName: InstantiationException(343)", "Delete SimpleType: InstantiationException(344)", "Delete SimpleName: IllegalAccessException(345)", "Delete SimpleType: IllegalAccessException(346)", "Delete SimpleName: ClassNotFoundException(347)", "Delete SimpleType: ClassNotFoundException(348)", "Delete UnionType: InstantiationException|IllegalAccessException|ClassNotFoundException(349)", "Delete SimpleName: e(350)", "Delete SingleVariableDeclaration(351)", "Delete SimpleName: AssertionError(352)", "Delete SimpleType: AssertionError(353)", "Delete SimpleName: e(354)", "Delete ClassInstanceCreation(355)", "Delete ThrowStatement(356)", "Delete Block(357)", "Delete CatchClause(358)", "Delete TryStatement(359)", "Delete SimpleName: factory(360)", "Delete ReturnStatement(361)", "Delete Block(362)", "Delete MethodDeclaration(363)", "Delete SimpleName: errorReporter(491)"]}}, {"CompiledTemplateRegistry_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 3", "operations": ["INS QualifiedName: com.google.common.collect.ImmutableSet to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 4", "operations": ["INS Modifier: final to FieldDeclaration at 1", "INS SimpleType: String to ParameterizedType: ImmutableBiMap<String,CompiledTemplateMetadata> at 1", "INS VariableDeclarationFragment to FieldDeclaration at 3", "INS SimpleType: ImmutableBiMap to ParameterizedType: ImmutableBiMap<String,CompiledTemplateMetadata> at 0", "INS SimpleName: classNameToMetadata to VariableDeclarationFragment at 0", "INS SimpleType: CompiledTemplateMetadata to ParameterizedType: ImmutableBiMap<String,CompiledTemplateMetadata> at 2", "INS FieldDeclaration to TypeDeclaration: class at 4", "INS SimpleName: CompiledTemplateMetadata to SimpleType: CompiledTemplateMetadata at 0", "INS ParameterizedType: ImmutableBiMap<String,CompiledTemplateMetadata> to FieldDeclaration at 2", "INS SimpleName: ImmutableBiMap to SimpleType: ImmutableBiMap at 0", "INS Modifier: private to FieldDeclaration at 0", "INS SimpleName: String to SimpleType: String at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 7", "operations": ["INS Block to MethodDeclaration at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleType: String to ParameterizedType: ImmutableSet<String> at 1", "INS MethodDeclaration to TypeDeclaration: class at 7", "INS ReturnStatement to Block at 0", "INS SimpleName: keySet to MethodInvocation at 1", "INS SimpleName: ImmutableSet to SimpleType: ImmutableSet at 0", "INS SimpleName: templateNameToMetadata to MethodInvocation at 0", "INS ParameterizedType: ImmutableSet<String> to MethodDeclaration at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: getTemplateNames to MethodDeclaration at 1", "INS SimpleType: ImmutableSet to ParameterizedType: ImmutableSet<String> at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 9", "operations": ["INS SimpleType: CompiledTemplateMetadata to MethodDeclaration at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: getTemplateInfoByClassName to MethodDeclaration at 2", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: String to SimpleType: String at 0", "INS Block to MethodDeclaration at 4", "INS ReturnStatement to Block at 0", "INS SimpleName: CompiledTemplateMetadata to SimpleType: CompiledTemplateMetadata at 0", "INS SimpleName: templateName to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 9", "INS SimpleName: classNameToMetadata to MethodInvocation at 0", "INS TagElement to Javadoc at 0", "INS TextElement: Returns information about the generated class for the given fully qualified template name. to TagElement at 0", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: templateName to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from getTemplateInfo to getTemplateInfoByTemplateName", "operations": ["UPD SimpleName: getTemplateInfo from getTemplateInfo to getTemplateInfoByTemplateName"]}, {"root": "UPDATE from templateNameToGeneratedClassName to templateNameToMetadata", "operations": ["UPD SimpleName: templateNameToGeneratedClassName from templateNameToGeneratedClassName to templateNameToMetadata", "UPD SimpleName: templateNameToGeneratedClassName from templateNameToGeneratedClassName to templateNameToMetadata", "UPD SimpleName: templateNameToGeneratedClassName from templateNameToGeneratedClassName to templateNameToMetadata"]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS SimpleType: ImmutableBiMap.Builder to ParameterizedType: ImmutableBiMap.Builder<String,CompiledTemplateMetadata> at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: builder to MethodInvocation at 1", "INS SimpleType: String to ParameterizedType: ImmutableBiMap.Builder<String,CompiledTemplateMetadata> at 1", "INS SimpleType: CompiledTemplateMetadata to ParameterizedType: ImmutableBiMap.Builder<String,CompiledTemplateMetadata> at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: classToMetadata to VariableDeclarationFragment at 0", "INS QualifiedName: ImmutableBiMap.Builder to SimpleType: ImmutableBiMap.Builder at 0", "INS SimpleName: ImmutableBiMap to MethodInvocation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS ParameterizedType: ImmutableBiMap.Builder<String,CompiledTemplateMetadata> to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: CompiledTemplateMetadata to SimpleType: CompiledTemplateMetadata at 0"]}, {"root": "INS ExpressionStatement to Block at 5", "operations": ["INS SimpleName: classToMetadata to MethodInvocation at 0", "INS Assignment: = to ExpressionStatement at 0", "INS MethodInvocation to Assignment: = at 1", "INS FieldAccess to Assignment: = at 0", "INS ExpressionStatement to Block at 5", "INS ThisExpression to FieldAccess at 0", "INS SimpleName: classNameToMetadata to FieldAccess at 1", "INS SimpleName: build to MethodInvocation at 1"]}, {"root": "UPDATE from builder to templateToMetadata", "operations": ["UPD SimpleName: builder from builder to templateToMetadata", "UPD SimpleName: builder from builder to templateToMetadata", "UPD SimpleName: builder from builder to templateToMetadata"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: CompiledTemplateMetadata to SimpleType: CompiledTemplateMetadata at 0", "INS SimpleName: metadata to VariableDeclarationFragment at 0", "INS SimpleType: CompiledTemplateMetadata to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 2", "operations": ["INS SimpleName: put to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: className to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: classToMetadata to MethodInvocation at 0", "INS SimpleName: metadata to MethodInvocation at 3", "INS SimpleName: metadata to MethodInvocation at 0", "INS SimpleName: typeInfo to MethodInvocation at 1", "INS ExpressionStatement to Block at 2"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS SimpleName: metadata to MethodInvocation at 3", "operations": ["INS SimpleName: metadata to MethodInvocation at 3"]}]}}, {"CompiledTemplateRegistry_diff": {"operations": ["Insert ImportDeclaration(7) into CompilationUnit(269) at 3", "Insert QualifiedName: com.google.common.collect.ImmutableSet(6) into ImportDeclaration(7) at 0", "Insert FieldDeclaration(50) into TypeDeclaration: class(268) at 4", "Insert MethodDeclaration(211) into TypeDeclaration: class(268) at 7", "Insert MethodDeclaration(245) into TypeDeclaration: class(268) at 9", "Insert Modifier: private(39) into FieldDeclaration(50) at 0", "Insert Modifier: final(40) into FieldDeclaration(50) at 1", "Insert ParameterizedType: ImmutableBiMap<String,CompiledTemplateMetadata>(47) into FieldDeclaration(50) at 2", "Insert VariableDeclarationFragment(49) into FieldDeclaration(50) at 3", "Insert ParameterizedType: ImmutableSet<String>(204) into MethodDeclaration(211) at 0", "Insert SimpleName: getTemplateNames(205) into MethodDeclaration(211) at 1", "Insert Block(210) into MethodDeclaration(211) at 2", "Update SimpleName: getTemplateInfo(154) to getTemplateInfoByTemplateName", "Insert Javadoc(231) into MethodDeclaration(245) at 0", "Insert SimpleType: CompiledTemplateMetadata(233) into MethodDeclaration(245) at 1", "Insert SimpleName: getTemplateInfoByClassName(234) into MethodDeclaration(245) at 2", "Insert SingleVariableDeclaration(238) into MethodDeclaration(245) at 3", "Insert Block(244) into MethodDeclaration(245) at 4", "Update SimpleName: templateNameToGeneratedClassName(34) to templateNameToMetadata", "Insert SimpleType: ImmutableBiMap(42) into ParameterizedType: ImmutableBiMap<String,CompiledTemplateMetadata>(47) at 0", "Insert SimpleType: String(44) into ParameterizedType: ImmutableBiMap<String,CompiledTemplateMetadata>(47) at 1", "Insert SimpleType: CompiledTemplateMetadata(46) into ParameterizedType: ImmutableBiMap<String,CompiledTemplateMetadata>(47) at 2", "Insert SimpleName: classNameToMetadata(48) into VariableDeclarationFragment(49) at 0", "Insert VariableDeclarationStatement(107) into Block(198) at 2", "Insert ExpressionStatement(188) into Block(198) at 5", "Insert SimpleType: ImmutableSet(201) into ParameterizedType: ImmutableSet<String>(204) at 0", "Insert SimpleType: String(203) into ParameterizedType: ImmutableSet<String>(204) at 1", "Insert ReturnStatement(209) into Block(210) at 0", "Insert TagElement(230) into Javadoc(231) at 0", "Insert SimpleName: CompiledTemplateMetadata(232) into SimpleType: CompiledTemplateMetadata(233) at 0", "Insert SimpleType: String(236) into SingleVariableDeclaration(238) at 0", "Insert SimpleName: templateName(237) into SingleVariableDeclaration(238) at 1", "Insert ReturnStatement(243) into Block(244) at 0", "Insert SimpleName: ImmutableBiMap(41) into SimpleType: ImmutableBiMap(42) at 0", "Insert SimpleName: String(43) into SimpleType: String(44) at 0", "Insert SimpleName: CompiledTemplateMetadata(45) into SimpleType: CompiledTemplateMetadata(46) at 0", "Insert ParameterizedType: ImmutableBiMap.Builder<String,CompiledTemplateMetadata>(101) into VariableDeclarationStatement(107) at 0", "Insert VariableDeclarationFragment(106) into VariableDeclarationStatement(107) at 1", "Insert Assignment: =(187) into ExpressionStatement(188) at 0", "Insert SimpleName: ImmutableSet(200) into SimpleType: ImmutableSet(201) at 0", "Insert SimpleName: String(202) into SimpleType: String(203) at 0", "Insert MethodInvocation(208) into ReturnStatement(209) at 0", "Insert TextElement: Returns information about the generated class for the given fully qualified template name.(229) into TagElement(230) at 0", "Insert SimpleName: String(235) into SimpleType: String(236) at 0", "Insert MethodInvocation(242) into ReturnStatement(243) at 0", "Update SimpleName: builder(75) to templateToMetadata", "Insert SimpleType: ImmutableBiMap.Builder(96) into ParameterizedType: ImmutableBiMap.Builder<String,CompiledTemplateMetadata>(101) at 0", "Insert SimpleType: String(98) into ParameterizedType: ImmutableBiMap.Builder<String,CompiledTemplateMetadata>(101) at 1", "Insert SimpleType: CompiledTemplateMetadata(100) into ParameterizedType: ImmutableBiMap.Builder<String,CompiledTemplateMetadata>(101) at 2", "Insert SimpleName: classToMetadata(102) into VariableDeclarationFragment(106) at 0", "Insert MethodInvocation(105) into VariableDeclarationFragment(106) at 1", "Insert VariableDeclarationStatement(126) into Block(171) at 0", "Insert ExpressionStatement(144) into Block(171) at 2", "Insert FieldAccess(183) into Assignment: =(187) at 0", "Insert MethodInvocation(186) into Assignment: =(187) at 1", "Insert SimpleName: templateNameToMetadata(206) into MethodInvocation(208) at 0", "Insert SimpleName: keySet(207) into MethodInvocation(208) at 1", "Update SimpleName: templateNameToGeneratedClassName(159) to templateNameToMetadata", "Insert SimpleName: classNameToMetadata(239) into MethodInvocation(242) at 0", "Insert SimpleName: get(240) into MethodInvocation(242) at 1", "Insert SimpleName: templateName(241) into MethodInvocation(242) at 2", "Insert QualifiedName: ImmutableBiMap.Builder(95) into SimpleType: ImmutableBiMap.Builder(96) at 0", "Insert SimpleName: String(97) into SimpleType: String(98) at 0", "Insert SimpleName: CompiledTemplateMetadata(99) into SimpleType: CompiledTemplateMetadata(100) at 0", "Insert SimpleName: ImmutableBiMap(103) into MethodInvocation(105) at 0", "Insert SimpleName: builder(104) into MethodInvocation(105) at 1", "Insert SimpleType: CompiledTemplateMetadata(116) into VariableDeclarationStatement(126) at 0", "Insert VariableDeclarationFragment(125) into VariableDeclarationStatement(126) at 1", "Insert MethodInvocation(143) into ExpressionStatement(144) at 0", "Update SimpleName: templateNameToGeneratedClassName(131) to templateNameToMetadata", "Update SimpleName: builder(133) to templateToMetadata", "Insert ThisExpression(181) into FieldAccess(183) at 0", "Insert SimpleName: classNameToMetadata(182) into FieldAccess(183) at 1", "Insert SimpleName: classToMetadata(184) into MethodInvocation(186) at 0", "Insert SimpleName: build(185) into MethodInvocation(186) at 1", "Insert SimpleName: CompiledTemplateMetadata(115) into SimpleType: CompiledTemplateMetadata(116) at 0", "Insert SimpleName: metadata(117) into VariableDeclarationFragment(125) at 0", "Move MethodInvocation(99) into VariableDeclarationFragment(125) at 1", "Update SimpleName: builder(88) to templateToMetadata", "Insert SimpleName: metadata(132) into MethodInvocation(133) at 3", "Insert SimpleName: classToMetadata(135) into MethodInvocation(143) at 0", "Insert SimpleName: put(136) into MethodInvocation(143) at 1", "Insert MethodInvocation(141) into MethodInvocation(143) at 2", "Insert SimpleName: metadata(142) into MethodInvocation(143) at 3", "Insert MethodInvocation(139) into MethodInvocation(141) at 0", "Insert SimpleName: className(140) into MethodInvocation(141) at 1", "Insert SimpleName: metadata(137) into MethodInvocation(139) at 0", "Insert SimpleName: typeInfo(138) into MethodInvocation(139) at 1"]}}, {"ExpressionCompiler_cluster": {"actions": [{"root": "INS MethodInvocation to SuperConstructorInvocation at 0", "operations": ["INS SimpleName: ExplodingErrorReporter to MethodInvocation at 0", "INS MethodInvocation to SuperConstructorInvocation at 0", "INS SimpleName: get to MethodInvocation at 1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.template.soy.error.ErrorReporter", "DEL ImportDeclaration"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleType: ErrorReporter", "DEL SimpleName: ErrorReporter", "DEL SimpleName: errorReporter"]}, {"root": "DEL SimpleName: errorReporter", "operations": ["DEL SimpleName: errorReporter"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: ErrorReporter", "DEL SingleVariableDeclaration", "DEL SimpleName: errorReporter", "DEL SimpleType: ErrorReporter"]}, {"root": "DEL SimpleName: errorReporter", "operations": ["DEL SimpleName: errorReporter"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: ErrorReporter", "DEL SimpleType: ErrorReporter", "DEL SimpleName: reporter", "DEL SingleVariableDeclaration"]}, {"root": "DEL SimpleName: reporter", "operations": ["DEL SimpleName: reporter"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL SimpleName: ErrorReporter", "DEL Modifier: final", "DEL Modifier: private", "DEL FieldDeclaration", "DEL SimpleType: ErrorReporter", "DEL VariableDeclarationFragment", "DEL SimpleName: reporter"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: ErrorReporter", "DEL SimpleType: ErrorReporter", "DEL SimpleName: errorReporter"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: reporter", "DEL SimpleName: errorReporter", "DEL Assignment: =", "DEL ExpressionStatement", "DEL ThisExpression", "DEL FieldAccess"]}, {"root": "DEL SimpleName: reporter", "operations": ["DEL SimpleName: reporter"]}, {"root": "DEL SimpleName: reporter", "operations": ["DEL SimpleName: reporter"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: ErrorReporter", "DEL SimpleName: ErrorReporter", "DEL SimpleName: errorReporter", "DEL SingleVariableDeclaration"]}, {"root": "DEL SimpleName: errorReporter", "operations": ["DEL SimpleName: errorReporter"]}]}}, {"ExpressionCompiler_diff": {"operations": ["Insert MethodInvocation(602) into SuperConstructorInvocation(603) at 0", "Insert SimpleName: ExplodingErrorReporter(600) into MethodInvocation(602) at 0", "Insert SimpleName: get(601) into MethodInvocation(602) at 1", "Delete QualifiedName: com.google.template.soy.error.ErrorReporter(30)", "Delete ImportDeclaration(31)", "Delete SimpleName: ErrorReporter(157)", "Delete SimpleType: ErrorReporter(158)", "Delete SimpleName: errorReporter(159)", "Delete SingleVariableDeclaration(160)", "Delete SimpleName: errorReporter(166)", "Delete SimpleName: ErrorReporter(283)", "Delete SimpleType: ErrorReporter(284)", "Delete SimpleName: errorReporter(285)", "Delete SingleVariableDeclaration(286)", "Delete SimpleName: errorReporter(291)", "Delete SimpleName: ErrorReporter(315)", "Delete SimpleType: ErrorReporter(316)", "Delete SimpleName: reporter(317)", "Delete SingleVariableDeclaration(318)", "Delete SimpleName: reporter(322)", "Delete Modifier: private(334)", "Delete Modifier: final(335)", "Delete SimpleName: ErrorReporter(336)", "Delete SimpleType: ErrorReporter(337)", "Delete SimpleName: reporter(338)", "Delete VariableDeclarationFragment(339)", "Delete FieldDeclaration(340)", "Delete SimpleName: ErrorReporter(358)", "Delete SimpleType: ErrorReporter(359)", "Delete SimpleName: errorReporter(360)", "Delete SingleVariableDeclaration(361)", "Delete ThisExpression(368)", "Delete SimpleName: reporter(369)", "Delete FieldAccess(370)", "Delete SimpleName: errorReporter(371)", "Delete Assignment: =(372)", "Delete ExpressionStatement(373)", "Delete SimpleName: reporter(476)", "Delete SimpleName: reporter(510)", "Delete SimpleName: ErrorReporter(620)", "Delete SimpleType: ErrorReporter(621)", "Delete SimpleName: errorReporter(622)", "Delete SingleVariableDeclaration(623)", "Delete SimpleName: errorReporter(640)"]}}, {"ExpressionToSoyValueProviderCompiler_cluster": {"actions": [{"root": "UPDATE from com.google.template.soy.error.ErrorReporter to com.google.template.soy.error.ExplodingErrorReporter", "operations": ["UPD QualifiedName: com.google.template.soy.error.ErrorReporter from com.google.template.soy.error.ErrorReporter to com.google.template.soy.error.ExplodingErrorReporter"]}, {"root": "INS MethodInvocation to SuperConstructorInvocation at 0", "operations": ["INS SimpleName: get to MethodInvocation at 1", "INS MethodInvocation to SuperConstructorInvocation at 0", "INS SimpleName: ExplodingErrorReporter to MethodInvocation at 0"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: ErrorReporter", "DEL SimpleType: ErrorReporter", "DEL SimpleName: errorReporter", "DEL SingleVariableDeclaration"]}, {"root": "DEL SimpleName: errorReporter", "operations": ["DEL SimpleName: errorReporter"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL FieldDeclaration", "DEL SimpleType: ErrorReporter", "DEL SimpleName: ErrorReporter", "DEL SimpleName: reporter", "DEL VariableDeclarationFragment", "DEL Modifier: final"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: ErrorReporter", "DEL SimpleName: errorReporter", "DEL SimpleType: ErrorReporter"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL Assignment: =", "DEL SimpleName: errorReporter", "DEL ThisExpression", "DEL SimpleName: reporter", "DEL ExpressionStatement", "DEL FieldAccess"]}, {"root": "DEL SimpleName: reporter", "operations": ["DEL SimpleName: reporter"]}, {"root": "DEL SimpleName: reporter", "operations": ["DEL SimpleName: reporter"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: ErrorReporter", "DEL SimpleName: ErrorReporter", "DEL SimpleName: errorReporter", "DEL SingleVariableDeclaration"]}, {"root": "DEL SimpleName: errorReporter", "operations": ["DEL SimpleName: errorReporter"]}]}}, {"ExpressionToSoyValueProviderCompiler_diff": {"operations": ["Update QualifiedName: com.google.template.soy.error.ErrorReporter(12) to com.google.template.soy.error.ExplodingErrorReporter", "Insert MethodInvocation(313) into SuperConstructorInvocation(314) at 0", "Insert SimpleName: ExplodingErrorReporter(311) into MethodInvocation(313) at 0", "Insert SimpleName: get(312) into MethodInvocation(313) at 1", "Delete SimpleName: ErrorReporter(130)", "Delete SimpleType: ErrorReporter(131)", "Delete SimpleName: errorReporter(132)", "Delete SingleVariableDeclaration(133)", "Delete SimpleName: errorReporter(138)", "Delete Modifier: private(150)", "Delete Modifier: final(151)", "Delete SimpleName: ErrorReporter(152)", "Delete SimpleType: ErrorReporter(153)", "Delete SimpleName: reporter(154)", "Delete VariableDeclarationFragment(155)", "Delete FieldDeclaration(156)", "Delete SimpleName: ErrorReporter(174)", "Delete SimpleType: ErrorReporter(175)", "Delete SimpleName: errorReporter(176)", "Delete SingleVariableDeclaration(177)", "Delete ThisExpression(184)", "Delete SimpleName: reporter(185)", "Delete FieldAccess(186)", "Delete SimpleName: errorReporter(187)", "Delete Assignment: =(188)", "Delete ExpressionStatement(189)", "Delete SimpleName: reporter(237)", "Delete SimpleName: reporter(277)", "Delete SimpleName: ErrorReporter(323)", "Delete SimpleType: ErrorReporter(324)", "Delete SimpleName: errorReporter(325)", "Delete SingleVariableDeclaration(326)", "Delete SimpleName: errorReporter(339)"]}}, {"LazyClosureCompiler_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL ImportDeclaration", "DEL QualifiedName: com.google.template.soy.error.ErrorReporter"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL FieldDeclaration", "DEL SimpleType: ErrorReporter", "DEL SimpleName: errorReporter", "DEL SimpleName: ErrorReporter", "DEL VariableDeclarationFragment", "DEL Modifier: final"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: ErrorReporter", "DEL SimpleName: ErrorReporter", "DEL SingleVariableDeclaration", "DEL SimpleName: errorReporter"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ThisExpression", "DEL FieldAccess", "DEL Assignment: =", "DEL ExpressionStatement", "DEL SimpleName: errorReporter", "DEL SimpleName: errorReporter"]}, {"root": "DEL SimpleName: errorReporter", "operations": ["DEL SimpleName: errorReporter"]}, {"root": "DEL SimpleName: errorReporter", "operations": ["DEL SimpleName: errorReporter"]}]}}, {"LazyClosureCompiler_diff": {"operations": ["Delete QualifiedName: com.google.template.soy.error.ErrorReporter(56)", "Delete ImportDeclaration(57)", "Delete Modifier: private(361)", "Delete Modifier: final(362)", "Delete SimpleName: ErrorReporter(363)", "Delete SimpleType: ErrorReporter(364)", "Delete SimpleName: errorReporter(365)", "Delete VariableDeclarationFragment(366)", "Delete FieldDeclaration(367)", "Delete SimpleName: ErrorReporter(388)", "Delete SimpleType: ErrorReporter(389)", "Delete SimpleName: errorReporter(390)", "Delete SingleVariableDeclaration(391)", "Delete ThisExpression(414)", "Delete SimpleName: errorReporter(415)", "Delete FieldAccess(416)", "Delete SimpleName: errorReporter(417)", "Delete Assignment: =(418)", "Delete ExpressionStatement(419)", "Delete SimpleName: errorReporter(929)", "Delete SimpleName: errorReporter(1179)"]}}, {"MemoryClassLoader_cluster": {"actions": [{"root": "INS IfStatement to Block at 1", "operations": ["INS IfStatement to Block at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InfixExpression: == to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.common.primitives.Longs", "DEL ImportDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL SimpleName: Longs", "DEL MethodInvocation", "DEL SimpleName: create", "DEL SimpleName: toByteArray", "DEL SimpleName: create", "DEL NumberLiteral: 0", "DEL Modifier: final", "DEL StringLiteral: \"not.a.real.Class\"", "DEL Modifier: static", "DEL SimpleType: ClassData", "DEL SimpleName: ClassData", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: TOMBSTONE", "DEL NumberLiteral: 0", "DEL NumberLiteral: 0xdeadbeef", "DEL SimpleName: TypeInfo", "DEL FieldDeclaration", "DEL SimpleName: ClassData", "DEL VariableDeclarationFragment"]}, {"root": "DEL MethodInvocation", "operations": ["DEL SimpleName: TOMBSTONE", "DEL MethodInvocation", "DEL SimpleName: classesByName", "DEL SimpleName: name", "DEL SimpleName: put"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement"]}, {"root": "DEL IfStatement", "operations": ["DEL SimpleName: TOMBSTONE", "DEL SimpleType: IllegalStateException", "DEL IfStatement", "DEL InfixExpression: ==", "DEL SimpleName: classDef", "DEL ThrowStatement", "DEL SimpleName: IllegalStateException", "DEL ClassInstanceCreation", "DEL SimpleName: name", "DEL IfStatement", "DEL InfixExpression: +", "DEL StringLiteral: \"class already defined: \"", "DEL Block"]}]}}, {"MemoryClassLoader_diff": {"operations": ["Insert IfStatement(208) into Block(253) at 1", "Move InfixExpression: ==(225) into IfStatement(208) at 0", "Move Block(236) into IfStatement(208) at 1", "Move MethodInvocation(229) into VariableDeclarationFragment(197) at 1", "Delete QualifiedName: com.google.common.primitives.Longs(4)", "Delete ImportDeclaration(5)", "Delete Modifier: private(27)", "Delete Modifier: static(28)", "Delete Modifier: final(29)", "Delete SimpleName: ClassData(30)", "Delete SimpleType: ClassData(31)", "Delete SimpleName: TOMBSTONE(32)", "Delete SimpleName: ClassData(33)", "Delete SimpleName: create(34)", "Delete SimpleName: TypeInfo(35)", "Delete SimpleName: create(36)", "Delete StringLiteral: \"not.a.real.Class\"(37)", "Delete MethodInvocation(38)", "Delete SimpleName: Longs(39)", "Delete SimpleName: toByteArray(40)", "Delete NumberLiteral: 0xdeadbeef(41)", "Delete MethodInvocation(42)", "Delete NumberLiteral: 0(43)", "Delete NumberLiteral: 0(44)", "Delete MethodInvocation(45)", "Delete VariableDeclarationFragment(46)", "Delete FieldDeclaration(47)", "Delete SimpleName: classesByName(216)", "Delete SimpleName: put(217)", "Delete SimpleName: name(218)", "Delete SimpleName: TOMBSTONE(219)", "Delete MethodInvocation(220)", "Delete ExpressionStatement(230)", "Delete SimpleName: classDef(237)", "Delete SimpleName: TOMBSTONE(238)", "Delete InfixExpression: ==(239)", "Delete SimpleName: IllegalStateException(240)", "Delete SimpleType: IllegalStateException(241)", "Delete StringLiteral: \"class already defined: \"(242)", "Delete SimpleName: name(243)", "Delete InfixExpression: +(244)", "Delete ClassInstanceCreation(245)", "Delete ThrowStatement(246)", "Delete Block(247)", "Delete IfStatement(248)", "Delete IfStatement(249)"]}}, {"SoyNodeCompiler_cluster": {"actions": [{"root": "UPDATE from com.google.template.soy.error.ErrorReporter to com.google.template.soy.error.ExplodingErrorReporter", "operations": ["UPD QualifiedName: com.google.template.soy.error.ErrorReporter from com.google.template.soy.error.ErrorReporter to com.google.template.soy.error.ExplodingErrorReporter"]}, {"root": "INS MethodInvocation to SuperConstructorInvocation at 0", "operations": ["INS MethodInvocation to SuperConstructorInvocation at 0", "INS SimpleName: get to MethodInvocation at 1", "INS SimpleName: ExplodingErrorReporter to MethodInvocation at 0"]}, {"root": "UPDATE from getTemplateInfo to getTemplateInfoByTemplateName", "operations": ["UPD SimpleName: getTemplateInfo from getTemplateInfo to getTemplateInfoByTemplateName"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleType: ErrorReporter", "DEL SingleVariableDeclaration", "DEL SimpleName: errorReporter", "DEL SimpleName: ErrorReporter"]}, {"root": "DEL SimpleName: errorReporter", "operations": ["DEL SimpleName: errorReporter"]}, {"root": "DEL SimpleName: errorReporter", "operations": ["DEL SimpleName: errorReporter"]}, {"root": "DEL SimpleName: errorReporter", "operations": ["DEL SimpleName: errorReporter"]}, {"root": "DEL SimpleName: errorReporter", "operations": ["DEL SimpleName: errorReporter"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SingleVariableDeclaration", "DEL SimpleName: errorReporter", "DEL SimpleType: ErrorReporter", "DEL SimpleName: ErrorReporter"]}, {"root": "DEL SimpleName: errorReporter", "operations": ["DEL SimpleName: errorReporter"]}, {"root": "DEL SimpleName: errorReporter", "operations": ["DEL SimpleName: errorReporter"]}]}}, {"SoyNodeCompiler_diff": {"operations": ["Update QualifiedName: com.google.template.soy.error.ErrorReporter(36) to com.google.template.soy.error.ExplodingErrorReporter", "Insert MethodInvocation(379) into SuperConstructorInvocation(380) at 0", "Insert SimpleName: ExplodingErrorReporter(377) into MethodInvocation(379) at 0", "Insert SimpleName: get(378) into MethodInvocation(379) at 1", "Update SimpleName: getTemplateInfo(2623) to getTemplateInfoByTemplateName", "Delete SimpleName: ErrorReporter(219)", "Delete SimpleType: ErrorReporter(220)", "Delete SimpleName: errorReporter(221)", "Delete SingleVariableDeclaration(222)", "Delete SimpleName: errorReporter(241)", "Delete SimpleName: errorReporter(252)", "Delete SimpleName: errorReporter(271)", "Delete SimpleName: errorReporter(274)", "Delete SimpleName: ErrorReporter(385)", "Delete SimpleType: ErrorReporter(386)", "Delete SimpleName: errorReporter(387)", "Delete SingleVariableDeclaration(388)", "Delete SimpleName: errorReporter(389)", "Delete SimpleName: errorReporter(3369)"]}}, {"TemplateCompiler_cluster": {"actions": [{"root": "DEL ImportDeclaration", "operations": ["DEL QualifiedName: com.google.template.soy.error.ErrorReporter", "DEL ImportDeclaration"]}, {"root": "DEL FieldDeclaration", "operations": ["DEL Modifier: private", "DEL FieldDeclaration", "DEL Modifier: final", "DEL SimpleName: errorReporter", "DEL SimpleType: ErrorReporter", "DEL VariableDeclarationFragment", "DEL SimpleName: ErrorReporter"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL SimpleName: ErrorReporter", "DEL SimpleType: ErrorReporter", "DEL SimpleName: errorReporter", "DEL SingleVariableDeclaration"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL FieldAccess", "DEL ThisExpression", "DEL SimpleName: errorReporter", "DEL ExpressionStatement", "DEL Assignment: =", "DEL SimpleName: errorReporter"]}, {"root": "DEL SimpleName: errorReporter", "operations": ["DEL SimpleName: errorReporter"]}]}}, {"TemplateCompiler_diff": {"operations": ["Delete QualifiedName: com.google.template.soy.error.ErrorReporter(32)", "Delete ImportDeclaration(33)", "Delete Modifier: private(167)", "Delete Modifier: final(168)", "Delete SimpleName: ErrorReporter(169)", "Delete SimpleType: ErrorReporter(170)", "Delete SimpleName: errorReporter(171)", "Delete VariableDeclarationFragment(172)", "Delete FieldDeclaration(173)", "Delete SimpleName: ErrorReporter(189)", "Delete SimpleType: ErrorReporter(190)", "Delete SimpleName: errorReporter(191)", "Delete SingleVariableDeclaration(192)", "Delete ThisExpression(205)", "Delete SimpleName: errorReporter(206)", "Delete FieldAccess(207)", "Delete SimpleName: errorReporter(208)", "Delete Assignment: =(209)", "Delete ExpressionStatement(210)", "Delete SimpleName: errorReporter(671)"]}}], "commit_stats": [{"total_files": 14, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}