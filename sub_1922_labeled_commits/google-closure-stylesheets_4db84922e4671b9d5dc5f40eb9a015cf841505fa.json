{"application": "google-closure-stylesheets", "csha": "4db84922e4671b9d5dc5f40eb9a015cf841505fa", "files": [{"ChunkCompactPrinter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: javax.annotation.Nullable to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: chunk to ConstructorInvocation at 1", "INS SimpleName: ChunkCompactPrinter to MethodDeclaration at 2", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS SimpleName: tree to ConstructorInvocation at 0", "INS ConstructorInvocation to Block at 0", "INS Block to MethodDeclaration at 5", "INS Modifier: public to MethodDeclaration at 1", "INS NullLiteral to ConstructorInvocation at 2"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS TagElement to Javadoc at 0", "INS SimpleName: chunk to TagElement: @param at 0", "INS TextElement:   to TagElement: @param at 1", "INS TagElement: @link to TagElement: @param at 2", "INS TagElement: @param to Javadoc at 3", "INS TextElement:  to use in the printer to TagElement: @param at 3", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: buffer to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 1", "INS TextElement:  CSS AST to be printed (with regard to a selected chunk) to TagElement: @param at 1", "INS TextElement:  the chunk selected for printing to TagElement: @param at 1", "INS TextElement: Create a chunk printer for a given chunk. to TagElement at 0", "INS SimpleName: tree to TagElement: @param at 0", "INS TagElement: @param to Javadoc at 2", "INS SimpleName: CodeBuffer to TagElement: @link at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleName: CssTree to SimpleType: CssTree at 0", "INS SimpleType: CssTree to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: tree to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: chunk to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: T to SimpleType: T at 0", "INS SimpleType: T to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleName: CodeBuffer to SimpleType: CodeBuffer at 0", "INS MarkerAnnotation to SingleVariableDeclaration at 0", "INS SimpleName: buffer to SingleVariableDeclaration at 2", "INS SimpleType: CodeBuffer to SingleVariableDeclaration at 1", "INS SimpleName: Nullable to MarkerAnnotation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS SimpleName: buffer to SuperConstructorInvocation at 1", "operations": ["INS SimpleName: buffer to SuperConstructorInvocation at 1"]}]}}, {"ChunkCompactPrinter_diff": {"operations": ["Insert ImportDeclaration(27) into CompilationUnit(598) at 13", "Insert QualifiedName: javax.annotation.Nullable(26) into ImportDeclaration(27) at 0", "Insert MethodDeclaration(143) into TypeDeclaration: class(597) at 8", "Insert Javadoc(91) into MethodDeclaration(118) at 0", "Insert SingleVariableDeclaration(97) into MethodDeclaration(118) at 3", "Insert SingleVariableDeclaration(101) into MethodDeclaration(118) at 4", "Insert SingleVariableDeclaration(107) into MethodDeclaration(118) at 5", "Move Javadoc(83) into MethodDeclaration(143) at 0", "Insert Modifier: public(128) into MethodDeclaration(143) at 1", "Insert SimpleName: ChunkCompactPrinter(129) into MethodDeclaration(143) at 2", "Move SingleVariableDeclaration(89) into MethodDeclaration(143) at 3", "Move SingleVariableDeclaration(93) into MethodDeclaration(143) at 4", "Insert Block(142) into MethodDeclaration(143) at 5", "Insert TagElement(78) into Javadoc(91) at 0", "Insert TagElement: @param(81) into Javadoc(91) at 1", "Insert TagElement: @param(84) into Javadoc(91) at 2", "Insert TagElement: @param(90) into Javadoc(91) at 3", "Insert SimpleType: CssTree(95) into SingleVariableDeclaration(97) at 0", "Insert SimpleName: tree(96) into SingleVariableDeclaration(97) at 1", "Insert SimpleType: T(99) into SingleVariableDeclaration(101) at 0", "Insert SimpleName: chunk(100) into SingleVariableDeclaration(101) at 1", "Insert MarkerAnnotation(103) into SingleVariableDeclaration(107) at 0", "Insert SimpleType: CodeBuffer(105) into SingleVariableDeclaration(107) at 1", "Insert SimpleName: buffer(106) into SingleVariableDeclaration(107) at 2", "Insert ConstructorInvocation(141) into Block(142) at 0", "Insert TextElement: Create a chunk printer for a given chunk.(77) into TagElement(78) at 0", "Insert SimpleName: tree(79) into TagElement: @param(81) at 0", "Insert TextElement:  CSS AST to be printed (with regard to a selected chunk)(80) into TagElement: @param(81) at 1", "Insert SimpleName: chunk(82) into TagElement: @param(84) at 0", "Insert TextElement:  the chunk selected for printing(83) into TagElement: @param(84) at 1", "Insert SimpleName: buffer(85) into TagElement: @param(90) at 0", "Insert TextElement:  (86) into TagElement: @param(90) at 1", "Insert TagElement: @link(88) into TagElement: @param(90) at 2", "Insert TextElement:  to use in the printer(89) into TagElement: @param(90) at 3", "Insert SimpleName: CssTree(94) into SimpleType: CssTree(95) at 0", "Insert SimpleName: T(98) into SimpleType: T(99) at 0", "Insert SimpleName: Nullable(102) into MarkerAnnotation(103) at 0", "Insert SimpleName: CodeBuffer(104) into SimpleType: CodeBuffer(105) at 0", "Insert SimpleName: buffer(109) into SuperConstructorInvocation(110) at 1", "Insert SimpleName: tree(138) into ConstructorInvocation(141) at 0", "Insert SimpleName: chunk(139) into ConstructorInvocation(141) at 1", "Insert NullLiteral(140) into ConstructorInvocation(141) at 2", "Insert SimpleName: CodeBuffer(87) into TagElement: @link(88) at 0"]}}, {"CodePrinter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS ImportDeclaration to CompilationUnit at 4", "INS QualifiedName: javax.annotation.Nullable to ImportDeclaration at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 11", "MOV MethodDeclaration to TypeDeclaration: class at 12"]}, {"root": "UPDATE from private to protected", "operations": ["UPD Modifier: private from private to protected"]}, {"root": "UPDATE from StringBuilder to CodeBuffer", "operations": ["UPD SimpleName: StringBuilder from StringBuilder to CodeBuffer", "UPD SimpleType: StringBuilder from StringBuilder to CodeBuffer", "UPD SimpleName: StringBuilder from StringBuilder to CodeBuffer", "UPD SimpleType: StringBuilder from StringBuilder to CodeBuffer"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleType: CodeBuffer to SingleVariableDeclaration at 1", "INS SimpleName: CodeBuffer to SimpleType: CodeBuffer at 0", "INS SimpleName: buffer to SingleVariableDeclaration at 2", "INS MarkerAnnotation to SingleVariableDeclaration at 0", "INS SimpleName: Nullable to MarkerAnnotation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS SimpleName: CodePrinter to MethodDeclaration at 2", "operations": ["INS SimpleName: CodePrinter to MethodDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleType: CodeBuffer to SingleVariableDeclaration at 1", "INS SimpleName: buffer to SingleVariableDeclaration at 2", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MarkerAnnotation to SingleVariableDeclaration at 0", "INS SimpleName: CodeBuffer to SimpleType: CodeBuffer at 0", "INS SimpleName: Nullable to MarkerAnnotation at 0"]}, {"root": "INS SimpleName: CodePrinter to MethodDeclaration at 2", "operations": ["INS SimpleName: CodePrinter to MethodDeclaration at 2"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleType: CssNode to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS MarkerAnnotation to SingleVariableDeclaration at 0", "INS SimpleName: CodeBuffer to SimpleType: CodeBuffer at 0", "INS SimpleName: Nullable to MarkerAnnotation at 0", "INS SimpleName: buffer to SingleVariableDeclaration at 2", "INS SimpleType: CodeBuffer to SingleVariableDeclaration at 1"]}, {"root": "INS SimpleName: CodePrinter to MethodDeclaration at 2", "operations": ["INS SimpleName: CodePrinter to MethodDeclaration at 2"]}, {"root": "INS PrimitiveType: void to MethodDeclaration at 2", "operations": ["INS PrimitiveType: void to MethodDeclaration at 2"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SimpleType: String to MethodDeclaration at 2"]}, {"root": "UPDATE from sb to buffer", "operations": ["UPD SimpleName: sb from sb to buffer", "UPD SimpleName: sb from sb to buffer", "UPD SimpleName: sb from sb to buffer", "UPD SimpleName: sb from sb to buffer"]}, {"root": "UPDATE from CharSequence to VisitController", "operations": ["UPD SimpleType: CharSequence from CharSequence to VisitController", "UPD SimpleName: CharSequence from CharSequence to VisitController"]}, {"root": "UPDATE from str to visitController", "operations": ["UPD SimpleName: str from str to visitController"]}, {"root": "INS ConstructorInvocation to Block at 0", "operations": ["INS NullLiteral to ConstructorInvocation at 1", "INS ConstructorInvocation to Block at 0", "INS SimpleName: visitController to ConstructorInvocation at 0"]}, {"root": "UPDATE from c to subtree", "operations": ["UPD SimpleName: c from c to subtree"]}, {"root": "MOVE from SingleVariableDeclaration", "operations": ["MOV SimpleName: c to SingleVariableDeclaration at 1"]}, {"root": "INS ConstructorInvocation to Block at 0", "operations": ["INS NullLiteral to ConstructorInvocation at 1", "INS SimpleName: subtree to ConstructorInvocation at 0", "INS ConstructorInvocation to Block at 0"]}, {"root": "UPDATE from Object to CssTree", "operations": ["UPD SimpleName: Object from Object to CssTree", "UPD SimpleType: Object from Object to CssTree"]}, {"root": "UPDATE from o to tree", "operations": ["UPD SimpleName: o from o to tree"]}, {"root": "INS ConstructorInvocation to Block at 0", "operations": ["INS ConstructorInvocation to Block at 0", "INS SimpleName: tree to ConstructorInvocation at 0", "INS NullLiteral to ConstructorInvocation at 1"]}, {"root": "UPDATE from may only access this buffer through the defined API. to CodeBuffer used in this CodePrinter.", "operations": ["UPD TextElement: may only access this buffer through the defined API. from may only access this buffer through the defined API. to CodeBuffer used in this CodePrinter."]}, {"root": "UPDATE from @code to @link", "operations": ["UPD TagElement: @code from @code to @link"]}, {"root": "INS TextElement: , could optionally to TagElement at 2", "operations": ["INS TextElement: , could optionally to TagElement at 2"]}, {"root": "INS TextElement: accept  to TagElement at 3", "operations": ["INS TextElement: accept  to TagElement at 3"]}, {"root": "INS TagElement: @link to TagElement at 4", "operations": ["INS SimpleName: CodeBuffer to TagElement: @link at 0", "INS TagElement: @link to TagElement at 4"]}, {"root": "UPDATE from . to  to use.", "operations": ["UPD TextElement: . from . to  to use."]}, {"root": "INS SimpleName: buffer to ConstructorInvocation at 1", "operations": ["INS SimpleName: buffer to ConstructorInvocation at 1"]}, {"root": "INS SimpleName: buffer to ConstructorInvocation at 1", "operations": ["INS SimpleName: buffer to ConstructorInvocation at 1"]}, {"root": "INS SimpleName: VisitController to TagElement: @code at 0", "operations": ["INS SimpleName: VisitController to TagElement: @code at 0"]}, {"root": "INS ConditionalExpression to Assignment: = at 1", "operations": ["INS ClassInstanceCreation to ConditionalExpression at 2", "INS InfixExpression: != to ConditionalExpression at 0", "INS SimpleName: buffer to ConditionalExpression at 1", "INS NullLiteral to InfixExpression: != at 1", "INS SimpleName: buffer to InfixExpression: != at 0", "INS ConditionalExpression to Assignment: = at 1"]}, {"root": "UPDATE from setLength to reset", "operations": ["UPD SimpleName: setLength from setLength to reset"]}, {"root": "UPDATE from toString to getOutput", "operations": ["UPD SimpleName: toString from toString to getOutput"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: StringBuilder to ClassInstanceCreation at 0"]}, {"root": "DEL TextElement: The string builder used to keep the printout in progress while the tree is visited. Subclasses", "operations": ["DEL TextElement: The string builder used to keep the printout in progress while the tree is visited. Subclasses"]}, {"root": "DEL TextElement:  visitController", "operations": ["DEL TextElement:  visitController"]}, {"root": "DEL ClassInstanceCreation", "operations": ["DEL ClassInstanceCreation"]}, {"root": "DEL Javadoc", "operations": ["DEL TagElement", "DEL TagElement: @code", "DEL TextElement:  to the buffer. ", "DEL TextElement: Appends ", "DEL Javadoc", "DEL TextElement:  str"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL SimpleType: CodePrinter", "operations": ["DEL SimpleName: CodePrinter", "DEL SimpleType: CodePrinter"]}, {"root": "DEL SimpleName: append", "operations": ["DEL SimpleName: append"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: sb", "DEL ExpressionStatement", "DEL SimpleName: str", "DEL MethodInvocation", "DEL SimpleName: append"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ThisExpression", "DEL ReturnStatement"]}, {"root": "DEL Javadoc", "operations": ["DEL Javadoc", "DEL TextElement:  to the buffer. ", "DEL TextElement: Append ", "DEL TextElement:  c", "DEL TagElement", "DEL TagElement: @code"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL SimpleType: CodePrinter", "operations": ["DEL SimpleName: CodePrinter", "DEL SimpleType: CodePrinter"]}, {"root": "DEL SimpleName: append", "operations": ["DEL SimpleName: append"]}, {"root": "DEL SingleVariableDeclaration", "operations": ["DEL PrimitiveType: char", "DEL SingleVariableDeclaration"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: c", "DEL SimpleName: sb", "DEL MethodInvocation", "DEL SimpleName: append"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL ThisExpression"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement:  to the buffer. ", "DEL TagElement: @code", "DEL Javadoc", "DEL TextElement: Appends the ", "DEL TagElement: @code", "DEL TextElement:  o", "DEL TextElement:  toString", "DEL TagElement", "DEL TextElement:  representation of "]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL SimpleType: CodePrinter", "operations": ["DEL SimpleType: CodePrinter", "DEL SimpleName: CodePrinter"]}, {"root": "DEL SimpleName: append", "operations": ["DEL SimpleName: append"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: sb", "DEL SimpleName: o", "DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: append"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ThisExpression", "DEL ReturnStatement"]}, {"root": "DEL Javadoc", "operations": ["DEL TagElement", "DEL Javadoc", "DEL TextElement: Clears the contents of the buffer. "]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL SimpleType: CodePrinter", "operations": ["DEL SimpleName: CodePrinter", "DEL SimpleType: CodePrinter"]}, {"root": "DEL NumberLiteral: 0", "operations": ["DEL NumberLiteral: 0"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL SimpleName: trimToSize", "DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: sb"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ThisExpression", "DEL ReturnStatement"]}, {"root": "DEL Javadoc", "operations": ["DEL TextElement: Returns a new ", "DEL TextElement:  representation of the buffer contents. ", "DEL TextElement:  String", "DEL Javadoc", "DEL TagElement: @code", "DEL TagElement"]}, {"root": "DEL Modifier: final", "operations": ["DEL Modifier: final"]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleType: String", "DEL SimpleName: String"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: final", "DEL SimpleName: index", "DEL TagElement", "DEL ExpressionStatement", "DEL SimpleName: index", "DEL MethodDeclaration", "DEL Modifier: protected", "DEL SimpleType: CodePrinter", "DEL SingleVariableDeclaration", "DEL SimpleName: deleteCharAt", "DEL ReturnStatement", "DEL SimpleName: deleteBufferCharAt", "DEL TextElement: Deletes the character at a particular index in the buffer. ", "DEL SimpleName: sb", "DEL SimpleName: CodePrinter", "DEL ThisExpression", "DEL MethodInvocation", "DEL Javadoc", "DEL PrimitiveType: int", "DEL Block"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: final", "DEL TagElement", "DEL PrimitiveType: int", "DEL SimpleName: sb", "DEL SimpleName: getCurrentBufferLength", "DEL Javadoc", "DEL MethodDeclaration", "DEL TextElement: Returns the current length of the buffer. ", "DEL MethodInvocation", "DEL SimpleName: length", "DEL Modifier: protected", "DEL ReturnStatement", "DEL Block"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodDeclaration", "DEL MethodInvocation", "DEL MethodInvocation", "DEL Javadoc", "DEL Modifier: protected", "DEL NumberLiteral: 1", "DEL TagElement", "DEL PrimitiveType: char", "DEL SimpleName: sb", "DEL SimpleName: length", "DEL SimpleName: getLastCharInBuffer", "DEL TextElement: Returns the last character in the buffer. ", "DEL Modifier: final", "DEL SimpleName: charAt", "DEL ReturnStatement", "DEL SimpleName: sb", "DEL Block", "DEL InfixExpression: -"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL MethodInvocation", "DEL SimpleName: getCurrentBufferLength", "DEL SimpleName: ch", "DEL ReturnStatement", "DEL PrimitiveType: char", "DEL ExpressionStatement", "DEL Javadoc", "DEL SimpleName: deleteBufferCharAt", "DEL MethodInvocation", "DEL TagElement", "DEL Block", "DEL InfixExpression: ==", "DEL Block", "DEL NumberLiteral: 0", "DEL TextElement: delimiters.", "DEL SimpleName: getLastCharInBuffer", "DEL MethodInvocation", "DEL SimpleName: ch", "DEL SingleVariableDeclaration", "DEL SimpleName: ch", "DEL TagElement: @param", "DEL Modifier: protected", "DEL SimpleName: deleteLastCharIfCharIs", "DEL NumberLiteral: 1", "DEL TextElement: Deletes the last character from the string builder if the character is as given.", "DEL MethodDeclaration", "DEL InfixExpression: -", "DEL InfixExpression: ==", "DEL IfStatement", "DEL MethodInvocation", "DEL TextElement: <p>Subclasses can modify this method in order to delete more in cases where they've added extra", "DEL SimpleName: getCurrentBufferLength", "DEL TextElement:  the character to delete", "DEL IfStatement", "DEL Block", "DEL PrimitiveType: void"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL InfixExpression: -", "DEL SimpleName: s", "DEL TextElement: . ", "DEL Block", "DEL SimpleName: s", "DEL SimpleName: sb", "DEL SimpleName: sb", "DEL SimpleName: delete", "DEL PrimitiveType: void", "DEL Javadoc", "DEL MethodInvocation", "DEL SimpleName: length", "DEL MethodInvocation", "DEL SimpleName: subSequence", "DEL MethodInvocation", "DEL IfStatement", "DEL InfixExpression: -", "DEL Modifier: protected", "DEL SimpleName: sb", "DEL MethodInvocation", "DEL SimpleName: deleteEndingIfEndingIs", "DEL MethodInvocation", "DEL SimpleName: sb", "DEL SimpleName: s", "DEL Block", "DEL SimpleName: length", "DEL MethodInvocation", "DEL SimpleName: length", "DEL SimpleName: length", "DEL SimpleName: sb", "DEL SimpleName: s", "DEL SimpleName: length", "DEL ExpressionStatement", "DEL TagElement", "DEL MethodDeclaration", "DEL TagElement: @code", "DEL SimpleName: equals", "DEL SingleVariableDeclaration", "DEL TextElement: Deletes the end of the buffer if it exactly equals ", "DEL MethodInvocation", "DEL MethodInvocation", "DEL MethodInvocation", "DEL SimpleName: sb", "DEL SimpleName: length", "DEL TextElement:  s"]}]}}, {"CodePrinter_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(183) at 4", "Move MethodDeclaration(84) into TypeDeclaration: class(182) at 11", "Move MethodDeclaration(99) into TypeDeclaration: class(182) at 12", "Insert QualifiedName: javax.annotation.Nullable(8) into ImportDeclaration(9) at 0", "Update Modifier: private(34) to protected", "Update SimpleType: StringBuilder(37) to CodeBuffer", "Insert SingleVariableDeclaration(63) into MethodDeclaration(84) at 4", "Insert SimpleName: CodePrinter(86) into MethodDeclaration(95) at 1", "Insert SingleVariableDeclaration(111) into MethodDeclaration(118) at 4", "Insert SimpleName: CodePrinter(120) into MethodDeclaration(129) at 1", "Insert SingleVariableDeclaration(124) into MethodDeclaration(129) at 2", "Insert SingleVariableDeclaration(144) into MethodDeclaration(151) at 4", "Insert SimpleName: CodePrinter(153) into MethodDeclaration(162) at 1", "Insert PrimitiveType: void(164) into MethodDeclaration(171) at 1", "Move SimpleType: String(309) into MethodDeclaration(181) at 2", "Update SimpleName: StringBuilder(36) to CodeBuffer", "Update SimpleName: sb(38) to buffer", "Insert MarkerAnnotation(59) into SingleVariableDeclaration(63) at 0", "Insert SimpleType: CodeBuffer(61) into SingleVariableDeclaration(63) at 1", "Insert SimpleName: buffer(62) into SingleVariableDeclaration(63) at 2", "Update SimpleType: CharSequence(112) to VisitController", "Update SimpleName: str(113) to visitController", "Insert ConstructorInvocation(93) into Block(94) at 0", "Insert MarkerAnnotation(107) into SingleVariableDeclaration(111) at 0", "Insert SimpleType: CodeBuffer(109) into SingleVariableDeclaration(111) at 1", "Insert SimpleName: buffer(110) into SingleVariableDeclaration(111) at 2", "Insert SimpleType: CssNode(122) into SingleVariableDeclaration(124) at 0", "Update SimpleName: c(136) to subtree", "Move SimpleName: c(136) into SingleVariableDeclaration(124) at 1", "Insert ConstructorInvocation(127) into Block(128) at 0", "Insert MarkerAnnotation(140) into SingleVariableDeclaration(144) at 0", "Insert SimpleType: CodeBuffer(142) into SingleVariableDeclaration(144) at 1", "Insert SimpleName: buffer(143) into SingleVariableDeclaration(144) at 2", "Update SimpleType: Object(162) to CssTree", "Update SimpleName: o(163) to tree", "Insert ConstructorInvocation(160) into Block(161) at 0", "Update TextElement: may only access this buffer through the defined API.(31) to CodeBuffer used in this CodePrinter.", "Update TagElement: @code(43) to @link", "Insert TextElement: , could optionally(45) into TagElement(50) at 2", "Insert TextElement: accept (46) into TagElement(50) at 3", "Insert TagElement: @link(48) into TagElement(50) at 4", "Update TextElement: .(44) to  to use.", "Insert SimpleName: Nullable(58) into MarkerAnnotation(59) at 0", "Insert SimpleName: CodeBuffer(60) into SimpleType: CodeBuffer(61) at 0", "Update SimpleName: CharSequence(111) to VisitController", "Insert SimpleName: visitController(91) into ConstructorInvocation(93) at 0", "Insert NullLiteral(92) into ConstructorInvocation(93) at 1", "Insert SimpleName: Nullable(106) into MarkerAnnotation(107) at 0", "Insert SimpleName: CodeBuffer(108) into SimpleType: CodeBuffer(109) at 0", "Insert SimpleName: buffer(115) into ConstructorInvocation(116) at 1", "Insert SimpleName: CssNode(121) into SimpleType: CssNode(122) at 0", "Insert SimpleName: subtree(125) into ConstructorInvocation(127) at 0", "Insert NullLiteral(126) into ConstructorInvocation(127) at 1", "Insert SimpleName: Nullable(139) into MarkerAnnotation(140) at 0", "Insert SimpleName: CodeBuffer(141) into SimpleType: CodeBuffer(142) at 0", "Insert SimpleName: buffer(148) into ConstructorInvocation(149) at 1", "Update SimpleName: Object(161) to CssTree", "Insert SimpleName: tree(158) into ConstructorInvocation(160) at 0", "Insert NullLiteral(159) into ConstructorInvocation(160) at 1", "Insert SimpleName: VisitController(43) into TagElement: @link(44) at 0", "Insert SimpleName: CodeBuffer(47) into TagElement: @link(48) at 0", "Insert ConditionalExpression(80) into Assignment: =(81) at 1", "Update SimpleName: sb(182) to buffer", "Update SimpleName: setLength(183) to reset", "Update SimpleName: sb(206) to buffer", "Update SimpleName: toString(207) to getOutput", "Update SimpleName: sb(60) to buffer", "Insert InfixExpression: !=(75) into ConditionalExpression(80) at 0", "Insert SimpleName: buffer(76) into ConditionalExpression(80) at 1", "Insert ClassInstanceCreation(79) into ConditionalExpression(80) at 2", "Insert SimpleName: buffer(73) into InfixExpression: !=(75) at 0", "Insert NullLiteral(74) into InfixExpression: !=(75) at 1", "Update SimpleType: StringBuilder(63) to CodeBuffer", "Move SimpleType: StringBuilder(63) into ClassInstanceCreation(79) at 0", "Update SimpleName: StringBuilder(62) to CodeBuffer", "Delete TextElement: The string builder used to keep the printout in progress while the tree is visited. Subclasses(30)", "Delete TextElement:  visitController(42)", "Delete ClassInstanceCreation(64)", "Delete TextElement: Appends (100)", "Delete TextElement:  str(101)", "Delete TagElement: @code(102)", "Delete TextElement:  to the buffer. (103)", "Delete TagElement(104)", "Delete Javadoc(105)", "Delete Modifier: final(107)", "Delete SimpleName: CodePrinter(108)", "Delete SimpleType: CodePrinter(109)", "Delete SimpleName: append(110)", "Delete SimpleName: sb(115)", "Delete SimpleName: append(116)", "Delete SimpleName: str(117)", "Delete MethodInvocation(118)", "Delete ExpressionStatement(119)", "Delete ThisExpression(120)", "Delete ReturnStatement(121)", "Delete TextElement: Append (124)", "Delete TextElement:  c(125)", "Delete TagElement: @code(126)", "Delete TextElement:  to the buffer. (127)", "Delete TagElement(128)", "Delete Javadoc(129)", "Delete Modifier: final(131)", "Delete SimpleName: CodePrinter(132)", "Delete SimpleType: CodePrinter(133)", "Delete SimpleName: append(134)", "Delete PrimitiveType: char(135)", "Delete SingleVariableDeclaration(137)", "Delete SimpleName: sb(138)", "Delete SimpleName: append(139)", "Delete SimpleName: c(140)", "Delete MethodInvocation(141)", "Delete ExpressionStatement(142)", "Delete ThisExpression(143)", "Delete ReturnStatement(144)", "Delete TextElement: Appends the (147)", "Delete TextElement:  toString(148)", "Delete TagElement: @code(149)", "Delete TextElement:  representation of (150)", "Delete TextElement:  o(151)", "Delete TagElement: @code(152)", "Delete TextElement:  to the buffer. (153)", "Delete TagElement(154)", "Delete Javadoc(155)", "Delete Modifier: final(157)", "Delete SimpleName: CodePrinter(158)", "Delete SimpleType: CodePrinter(159)", "Delete SimpleName: append(160)", "Delete SimpleName: sb(165)", "Delete SimpleName: append(166)", "Delete SimpleName: o(167)", "Delete MethodInvocation(168)", "Delete ExpressionStatement(169)", "Delete ThisExpression(170)", "Delete ReturnStatement(171)", "Delete TextElement: Clears the contents of the buffer. (174)", "Delete TagElement(175)", "Delete Javadoc(176)", "Delete Modifier: final(178)", "Delete SimpleName: CodePrinter(179)", "Delete SimpleType: CodePrinter(180)", "Delete NumberLiteral: 0(184)", "Delete SimpleName: sb(187)", "Delete SimpleName: trimToSize(188)", "Delete MethodInvocation(189)", "Delete ExpressionStatement(190)", "Delete ThisExpression(191)", "Delete ReturnStatement(192)", "Delete TextElement: Returns a new (195)", "Delete TextElement:  String(196)", "Delete TagElement: @code(197)", "Delete TextElement:  representation of the buffer contents. (198)", "Delete TagElement(199)", "Delete Javadoc(200)", "Delete Modifier: final(202)", "Delete SimpleName: String(203)", "Delete SimpleType: String(204)", "Delete TextElement: Deletes the character at a particular index in the buffer. (212)", "Delete TagElement(213)", "Delete Javadoc(214)", "Delete Modifier: protected(215)", "Delete Modifier: final(216)", "Delete SimpleName: CodePrinter(217)", "Delete SimpleType: CodePrinter(218)", "Delete SimpleName: deleteBufferCharAt(219)", "Delete PrimitiveType: int(220)", "Delete SimpleName: index(221)", "Delete SingleVariableDeclaration(222)", "Delete SimpleName: sb(223)", "Delete SimpleName: deleteCharAt(224)", "Delete SimpleName: index(225)", "Delete MethodInvocation(226)", "Delete ExpressionStatement(227)", "Delete ThisExpression(228)", "Delete ReturnStatement(229)", "Delete Block(230)", "Delete MethodDeclaration(231)", "Delete TextElement: Returns the current length of the buffer. (232)", "Delete TagElement(233)", "Delete Javadoc(234)", "Delete Modifier: protected(235)", "Delete Modifier: final(236)", "Delete PrimitiveType: int(237)", "Delete SimpleName: getCurrentBufferLength(238)", "Delete SimpleName: sb(239)", "Delete SimpleName: length(240)", "Delete MethodInvocation(241)", "Delete ReturnStatement(242)", "Delete Block(243)", "Delete MethodDeclaration(244)", "Delete TextElement: Returns the last character in the buffer. (245)", "Delete TagElement(246)", "Delete Javadoc(247)", "Delete Modifier: protected(248)", "Delete Modifier: final(249)", "Delete PrimitiveType: char(250)", "Delete SimpleName: getLastCharInBuffer(251)", "Delete SimpleName: sb(252)", "Delete SimpleName: charAt(253)", "Delete SimpleName: sb(254)", "Delete SimpleName: length(255)", "Delete MethodInvocation(256)", "Delete NumberLiteral: 1(257)", "Delete InfixExpression: -(258)", "Delete MethodInvocation(259)", "Delete ReturnStatement(260)", "Delete Block(261)", "Delete MethodDeclaration(262)", "Delete TextElement: Deletes the last character from the string builder if the character is as given.(263)", "Delete TextElement: <p>Subclasses can modify this method in order to delete more in cases where they've added extra(264)", "Delete TextElement: delimiters.(265)", "Delete TagElement(266)", "Delete SimpleName: ch(267)", "Delete TextElement:  the character to delete(268)", "Delete TagElement: @param(269)", "Delete Javadoc(270)", "Delete Modifier: protected(271)", "Delete PrimitiveType: void(272)", "Delete SimpleName: deleteLastCharIfCharIs(273)", "Delete PrimitiveType: char(274)", "Delete SimpleName: ch(275)", "Delete SingleVariableDeclaration(276)", "Delete SimpleName: getCurrentBufferLength(277)", "Delete MethodInvocation(278)", "Delete NumberLiteral: 0(279)", "Delete InfixExpression: ==(280)", "Delete ReturnStatement(281)", "Delete Block(282)", "Delete IfStatement(283)", "Delete SimpleName: getLastCharInBuffer(284)", "Delete MethodInvocation(285)", "Delete SimpleName: ch(286)", "Delete InfixExpression: ==(287)", "Delete SimpleName: deleteBufferCharAt(288)", "Delete SimpleName: getCurrentBufferLength(289)", "Delete MethodInvocation(290)", "Delete NumberLiteral: 1(291)", "Delete InfixExpression: -(292)", "Delete MethodInvocation(293)", "Delete ExpressionStatement(294)", "Delete Block(295)", "Delete IfStatement(296)", "Delete Block(297)", "Delete MethodDeclaration(298)", "Delete TextElement: Deletes the end of the buffer if it exactly equals (299)", "Delete TextElement:  s(300)", "Delete TagElement: @code(301)", "Delete TextElement: . (302)", "Delete TagElement(303)", "Delete Javadoc(304)", "Delete Modifier: protected(305)", "Delete PrimitiveType: void(306)", "Delete SimpleName: deleteEndingIfEndingIs(307)", "Delete SimpleName: s(310)", "Delete SingleVariableDeclaration(311)", "Delete SimpleName: sb(312)", "Delete SimpleName: subSequence(313)", "Delete SimpleName: sb(314)", "Delete SimpleName: length(315)", "Delete MethodInvocation(316)", "Delete SimpleName: s(317)", "Delete SimpleName: length(318)", "Delete MethodInvocation(319)", "Delete InfixExpression: -(320)", "Delete SimpleName: sb(321)", "Delete SimpleName: length(322)", "Delete MethodInvocation(323)", "Delete MethodInvocation(324)", "Delete SimpleName: equals(325)", "Delete SimpleName: s(326)", "Delete MethodInvocation(327)", "Delete SimpleName: sb(328)", "Delete SimpleName: delete(329)", "Delete SimpleName: sb(330)", "Delete SimpleName: length(331)", "Delete MethodInvocation(332)", "Delete SimpleName: s(333)", "Delete SimpleName: length(334)", "Delete MethodInvocation(335)", "Delete InfixExpression: -(336)", "Delete SimpleName: sb(337)", "Delete SimpleName: length(338)", "Delete MethodInvocation(339)", "Delete MethodInvocation(340)", "Delete ExpressionStatement(341)", "Delete Block(342)", "Delete IfStatement(343)", "Delete Block(344)", "Delete MethodDeclaration(345)"]}}, {"CompactPrinter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 39", "operations": ["INS ImportDeclaration to CompilationUnit at 39", "INS QualifiedName: javax.annotation.Nullable to ImportDeclaration at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 8", "operations": ["INS SimpleName: subtree to SingleVariableDeclaration at 1", "INS SimpleName: CssNode to SimpleType: CssNode at 0", "INS MethodDeclaration to TypeDeclaration: class at 8", "INS Modifier: public to MethodDeclaration at 0", "INS Block to MethodDeclaration at 3", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS ConstructorInvocation to Block at 0", "INS SimpleType: CssNode to SingleVariableDeclaration at 0", "INS SimpleName: subtree to ConstructorInvocation at 0", "INS NullLiteral to ConstructorInvocation at 1", "INS SimpleName: CompactPrinter to MethodDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 10", "operations": ["INS SimpleType: CssTree to SingleVariableDeclaration at 0", "INS ConstructorInvocation to Block at 0", "INS NullLiteral to ConstructorInvocation at 1", "INS SimpleName: CssTree to SimpleType: CssTree at 0", "INS SingleVariableDeclaration to MethodDeclaration at 2", "INS SimpleName: CompactPrinter to MethodDeclaration at 1", "INS Block to MethodDeclaration at 3", "INS SimpleName: tree to ConstructorInvocation at 0", "INS MethodDeclaration to TypeDeclaration: class at 10", "INS Modifier: public to MethodDeclaration at 0", "INS SimpleName: tree to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS SimpleType: CodeBuffer to SingleVariableDeclaration at 1", "INS SimpleName: buffer to SingleVariableDeclaration at 2", "INS SimpleName: Nullable to MarkerAnnotation at 0", "INS SimpleName: CodeBuffer to SimpleType: CodeBuffer at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS MarkerAnnotation to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 3", "operations": ["INS MarkerAnnotation to SingleVariableDeclaration at 0", "INS SimpleName: Nullable to MarkerAnnotation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS SimpleName: buffer to SingleVariableDeclaration at 2", "INS SimpleType: CodeBuffer to SingleVariableDeclaration at 1", "INS SimpleName: CodeBuffer to SimpleType: CodeBuffer at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Block to MethodDeclaration at 5"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS Block to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: append to MethodInvocation at 1", "INS ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ReturnStatement to Block at 4", "MOV EnhancedForStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS SimpleName: buffer to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 1", "INS CharacterLiteral: ' ' to MethodInvocation at 2", "INS SimpleName: append to MethodInvocation at 1"]}, {"root": "INS ExpressionStatement to Block at 3", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2", "INS ExpressionStatement to Block at 3", "INS SimpleName: buffer to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: deleteLastCharIfCharIs to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS SimpleName: buffer to SuperConstructorInvocation at 1", "operations": ["INS SimpleName: buffer to SuperConstructorInvocation at 1"]}, {"root": "INS SimpleName: buffer to SuperConstructorInvocation at 1", "operations": ["INS SimpleName: buffer to SuperConstructorInvocation at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InstanceofExpression to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV InstanceofExpression to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: '(' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: '(' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ')' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ')' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS ExpressionStatement to Block at 0", "operations": ["INS ExpressionStatement to Block at 0", "INS CharacterLiteral: ' ' to MethodInvocation at 2", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: buffer to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ')' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ')' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ')' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ')' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: '@' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: '@' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ')' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ')' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: '{' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: '{' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: append", "DEL MethodInvocation"]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL StringLiteral: \"(\"", "operations": ["DEL StringLiteral: \"(\""]}, {"root": "DEL StringLiteral: \")\"", "operations": ["DEL StringLiteral: \")\""]}, {"root": "DEL ExpressionStatement", "operations": ["DEL ExpressionStatement", "DEL SimpleName: append", "DEL MethodInvocation", "DEL CharacterLiteral: ' '"]}, {"root": "DEL Block", "operations": ["DEL ExpressionStatement", "DEL MethodInvocation", "DEL SimpleName: append", "DEL SimpleName: deleteLastCharIfCharIs", "DEL CharacterLiteral: ' '", "DEL MethodInvocation", "DEL Block", "DEL ExpressionStatement", "DEL CharacterLiteral: ' '"]}, {"root": "DEL StringLiteral: \")\"", "operations": ["DEL StringLiteral: \")\""]}, {"root": "DEL StringLiteral: \")\"", "operations": ["DEL StringLiteral: \")\""]}, {"root": "DEL StringLiteral: \")\"", "operations": ["DEL StringLiteral: \")\""]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: append"]}, {"root": "DEL StringLiteral: \"{\"", "operations": ["DEL StringLiteral: \"{\""]}, {"root": "DEL StringLiteral: \"@\"", "operations": ["DEL StringLiteral: \"@\""]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}]}}, {"CompactPrinter_diff": {"operations": ["Insert ImportDeclaration(79) into CompilationUnit(1593) at 39", "Insert QualifiedName: javax.annotation.Nullable(78) into ImportDeclaration(79) at 0", "Insert MethodDeclaration(148) into TypeDeclaration: class(1592) at 8", "Insert MethodDeclaration(176) into TypeDeclaration: class(1592) at 10", "Insert SingleVariableDeclaration(132) into MethodDeclaration(137) at 3", "Insert Modifier: public(138) into MethodDeclaration(148) at 0", "Insert SimpleName: CompactPrinter(139) into MethodDeclaration(148) at 1", "Insert SingleVariableDeclaration(143) into MethodDeclaration(148) at 2", "Insert Block(147) into MethodDeclaration(148) at 3", "Insert SingleVariableDeclaration(160) into MethodDeclaration(165) at 3", "Insert Modifier: public(166) into MethodDeclaration(176) at 0", "Insert SimpleName: CompactPrinter(167) into MethodDeclaration(176) at 1", "Insert SingleVariableDeclaration(171) into MethodDeclaration(176) at 2", "Insert Block(175) into MethodDeclaration(176) at 3", "Move MarkerAnnotation(221) into MethodDeclaration(262) at 0", "Move MarkerAnnotation(285) into MethodDeclaration(298) at 0", "Move SingleVariableDeclaration(292) into MethodDeclaration(298) at 4", "Move MarkerAnnotation(206) into MethodDeclaration(347) at 0", "Move SingleVariableDeclaration(228) into MethodDeclaration(347) at 4", "Move Block(381) into MethodDeclaration(395) at 5", "Insert Block(437) into MethodDeclaration(438) at 5", "Move MarkerAnnotation(727) into MethodDeclaration(769) at 0", "Move SingleVariableDeclaration(734) into MethodDeclaration(803) at 4", "Move MarkerAnnotation(812) into MethodDeclaration(824) at 0", "Move SingleVariableDeclaration(717) into MethodDeclaration(824) at 4", "Move MarkerAnnotation(885) into MethodDeclaration(915) at 0", "Move MarkerAnnotation(956) into MethodDeclaration(996) at 0", "Move MarkerAnnotation(1065) into MethodDeclaration(1069) at 0", "Move MarkerAnnotation(1160) into MethodDeclaration(1199) at 0", "Move MarkerAnnotation(1214) into MethodDeclaration(1318) at 0", "Move SingleVariableDeclaration(1221) into MethodDeclaration(1318) at 4", "Move MarkerAnnotation(680) into MethodDeclaration(1347) at 0", "Move SingleVariableDeclaration(1167) into MethodDeclaration(1347) at 4", "Insert MarkerAnnotation(128) into SingleVariableDeclaration(132) at 0", "Insert SimpleType: CodeBuffer(130) into SingleVariableDeclaration(132) at 1", "Insert SimpleName: buffer(131) into SingleVariableDeclaration(132) at 2", "Insert SimpleType: CssNode(141) into SingleVariableDeclaration(143) at 0", "Insert SimpleName: subtree(142) into SingleVariableDeclaration(143) at 1", "Insert ConstructorInvocation(146) into Block(147) at 0", "Insert MarkerAnnotation(156) into SingleVariableDeclaration(160) at 0", "Insert SimpleType: CodeBuffer(158) into SingleVariableDeclaration(160) at 1", "Insert SimpleName: buffer(159) into SingleVariableDeclaration(160) at 2", "Insert SimpleType: CssTree(169) into SingleVariableDeclaration(171) at 0", "Insert SimpleName: tree(170) into SingleVariableDeclaration(171) at 1", "Insert ConstructorInvocation(174) into Block(175) at 0", "Insert ExpressionStatement(207) into Block(245) at 0", "Move ExpressionStatement(315) into Block(297) at 0", "Insert ExpressionStatement(370) into Block(394) at 1", "Insert ExpressionStatement(391) into Block(394) at 3", "Move ReturnStatement(340) into Block(394) at 4", "Move ExpressionStatement(399) into Block(437) at 0", "Move EnhancedForStatement(334) into Block(437) at 1", "Move ReturnStatement(380) into Block(437) at 2", "Move ExpressionStatement(168) into Block(459) at 0", "Move ExpressionStatement(599) into Block(605) at 0", "Insert ExpressionStatement(667) into Block(698) at 0", "Move ExpressionStatement(497) into Block(725) at 0", "Insert SimpleName: Nullable(127) into MarkerAnnotation(128) at 0", "Insert SimpleName: CodeBuffer(129) into SimpleType: CodeBuffer(130) at 0", "Insert SimpleName: buffer(134) into SuperConstructorInvocation(135) at 1", "Insert SimpleName: CssNode(140) into SimpleType: CssNode(141) at 0", "Insert SimpleName: subtree(144) into ConstructorInvocation(146) at 0", "Insert NullLiteral(145) into ConstructorInvocation(146) at 1", "Insert SimpleName: Nullable(155) into MarkerAnnotation(156) at 0", "Insert SimpleName: CodeBuffer(157) into SimpleType: CodeBuffer(158) at 0", "Insert SimpleName: buffer(162) into SuperConstructorInvocation(163) at 1", "Insert SimpleName: CssTree(168) into SimpleType: CssTree(169) at 0", "Insert SimpleName: tree(172) into ConstructorInvocation(174) at 0", "Insert NullLiteral(173) into ConstructorInvocation(174) at 1", "Insert MethodInvocation(206) into ExpressionStatement(207) at 0", "Insert MethodInvocation(369) into ExpressionStatement(370) at 0", "Insert MethodInvocation(390) into ExpressionStatement(391) at 0", "Insert MethodInvocation(666) into ExpressionStatement(667) at 0", "Move InstanceofExpression(898) into IfStatement(942) at 0", "Move InstanceofExpression(848) into IfStatement(994) at 0", "Move MethodInvocation(1226) into IfStatement(1314) at 0", "Move MethodInvocation(1202) into IfStatement(1345) at 0", "Insert SimpleName: buffer(199) into MethodInvocation(206) at 0", "Insert SimpleName: append(200) into MethodInvocation(206) at 1", "Move MethodInvocation(234) into MethodInvocation(206) at 2", "Insert SimpleName: buffer(256) into MethodInvocation(259) at 0", "Insert SimpleName: buffer(272) into MethodInvocation(279) at 0", "Insert SimpleName: buffer(313) into MethodInvocation(316) at 0", "Insert CharacterLiteral: '('(315) into MethodInvocation(316) at 2", "Insert SimpleName: buffer(318) into MethodInvocation(323) at 0", "Insert SimpleName: buffer(325) into MethodInvocation(328) at 0", "Insert CharacterLiteral: ')'(327) into MethodInvocation(328) at 2", "Insert SimpleName: buffer(341) into MethodInvocation(344) at 0", "Insert SimpleName: buffer(357) into MethodInvocation(364) at 0", "Insert SimpleName: buffer(366) into MethodInvocation(369) at 0", "Insert SimpleName: append(367) into MethodInvocation(369) at 1", "Insert CharacterLiteral: ' '(368) into MethodInvocation(369) at 2", "Insert SimpleName: buffer(387) into MethodInvocation(390) at 0", "Insert SimpleName: deleteLastCharIfCharIs(388) into MethodInvocation(390) at 1", "Insert CharacterLiteral: ' '(389) into MethodInvocation(390) at 2", "Insert SimpleName: buffer(405) into MethodInvocation(412) at 0", "Insert ExpressionStatement(425) into Block(433) at 0", "Insert SimpleName: buffer(448) into MethodInvocation(455) at 0", "Insert SimpleName: buffer(501) into MethodInvocation(504) at 0", "Insert SimpleName: buffer(551) into MethodInvocation(556) at 0", "Insert SimpleName: buffer(558) into MethodInvocation(563) at 0", "Insert SimpleName: buffer(661) into MethodInvocation(666) at 0", "Insert SimpleName: append(662) into MethodInvocation(666) at 1", "Move MethodInvocation(642) into MethodInvocation(666) at 2", "Insert SimpleName: buffer(668) into MethodInvocation(673) at 0", "Insert SimpleName: buffer(675) into MethodInvocation(680) at 0", "Insert SimpleName: buffer(682) into MethodInvocation(687) at 0", "Insert SimpleName: buffer(689) into MethodInvocation(694) at 0", "Insert SimpleName: buffer(711) into MethodInvocation(716) at 0", "Insert SimpleName: buffer(718) into MethodInvocation(723) at 0", "Insert SimpleName: buffer(763) into MethodInvocation(766) at 0", "Insert SimpleName: buffer(779) into MethodInvocation(782) at 0", "Insert SimpleName: buffer(795) into MethodInvocation(798) at 0", "Insert SimpleName: buffer(813) into MethodInvocation(816) at 0", "Insert SimpleName: buffer(818) into MethodInvocation(821) at 0", "Insert SimpleName: buffer(877) into MethodInvocation(884) at 0", "Insert SimpleName: buffer(886) into MethodInvocation(889) at 0", "Insert SimpleName: buffer(904) into MethodInvocation(907) at 0", "Insert SimpleName: buffer(909) into MethodInvocation(912) at 0", "Insert SimpleName: buffer(925) into MethodInvocation(928) at 0", "Insert SimpleName: buffer(1006) into MethodInvocation(1009) at 0", "Insert SimpleName: buffer(1011) into MethodInvocation(1018) at 0", "Insert SimpleName: buffer(1033) into MethodInvocation(1038) at 0", "Insert SimpleName: buffer(1040) into MethodInvocation(1043) at 0", "Insert SimpleName: buffer(1058) into MethodInvocation(1061) at 0", "Insert SimpleName: buffer(1063) into MethodInvocation(1066) at 0", "Move MethodInvocation(1176) into MethodInvocation(1180) at 2", "Insert SimpleName: buffer(1213) into MethodInvocation(1216) at 0", "Move MethodInvocation(1081) into MethodInvocation(1280) at 2", "Insert SimpleName: buffer(1388) into MethodInvocation(1391) at 0", "Insert SimpleName: buffer(1404) into MethodInvocation(1407) at 0", "Insert SimpleName: buffer(1536) into MethodInvocation(1541) at 0", "Insert MethodInvocation(424) into ExpressionStatement(425) at 0", "Insert SimpleName: buffer(570) into MethodInvocation(579) at 0", "Insert SimpleName: buffer(581) into MethodInvocation(584) at 0", "Insert CharacterLiteral: ')'(583) into MethodInvocation(584) at 2", "Insert SimpleName: buffer(589) into MethodInvocation(594) at 0", "Insert SimpleName: buffer(596) into MethodInvocation(599) at 0", "Insert CharacterLiteral: ')'(598) into MethodInvocation(599) at 2", "Insert SimpleName: buffer(1170) into MethodInvocation(1173) at 0", "Insert CharacterLiteral: '@'(1172) into MethodInvocation(1173) at 2", "Insert SimpleName: buffer(1270) into MethodInvocation(1273) at 0", "Insert SimpleName: buffer(215) into MethodInvocation(218) at 0", "Insert SimpleName: buffer(288) into MethodInvocation(291) at 0", "Insert CharacterLiteral: ' '(290) into MethodInvocation(291) at 2", "Insert SimpleName: buffer(378) into MethodInvocation(383) at 0", "Insert SimpleName: buffer(421) into MethodInvocation(424) at 0", "Insert SimpleName: append(422) into MethodInvocation(424) at 1", "Insert CharacterLiteral: ' '(423) into MethodInvocation(424) at 2", "Insert SimpleName: buffer(426) into MethodInvocation(431) at 0", "Insert SimpleName: buffer(481) into MethodInvocation(484) at 0", "Insert SimpleName: buffer(621) into MethodInvocation(624) at 0", "Insert SimpleName: buffer(626) into MethodInvocation(629) at 0", "Insert CharacterLiteral: ')'(628) into MethodInvocation(629) at 2", "Insert SimpleName: buffer(739) into MethodInvocation(746) at 0", "Insert SimpleName: buffer(847) into MethodInvocation(850) at 0", "Insert CharacterLiteral: '{'(849) into MethodInvocation(850) at 2", "Insert SimpleName: buffer(870) into MethodInvocation(873) at 0", "Insert SimpleName: buffer(936) into MethodInvocation(939) at 0", "Insert SimpleName: buffer(958) into MethodInvocation(961) at 0", "Insert SimpleName: buffer(988) into MethodInvocation(991) at 0", "Insert SimpleName: buffer(1102) into MethodInvocation(1105) at 0", "Insert SimpleName: buffer(1189) into MethodInvocation(1192) at 0", "Insert CharacterLiteral: ' '(1191) into MethodInvocation(1192) at 2", "Insert SimpleName: buffer(1252) into MethodInvocation(1255) at 0", "Insert SimpleName: buffer(1289) into MethodInvocation(1292) at 0", "Insert SimpleName: buffer(1294) into MethodInvocation(1299) at 0", "Insert SimpleName: buffer(1308) into MethodInvocation(1311) at 0", "Insert SimpleName: buffer(1333) into MethodInvocation(1336) at 0", "Insert SimpleName: buffer(1339) into MethodInvocation(1342) at 0", "Insert SimpleName: buffer(1368) into MethodInvocation(1371) at 0", "Insert SimpleName: buffer(1495) into MethodInvocation(1501) at 0", "Insert SimpleName: buffer(1519) into MethodInvocation(1524) at 0", "Insert SimpleName: buffer(1526) into MethodInvocation(1531) at 0", "Insert SimpleName: buffer(224) into MethodInvocation(229) at 0", "Insert SimpleName: buffer(232) into MethodInvocation(237) at 0", "Insert SimpleName: buffer(1244) into MethodInvocation(1247) at 0", "Delete SimpleName: append(229)", "Delete MethodInvocation(235)", "Delete ExpressionStatement(236)", "Delete StringLiteral: \" \"(245)", "Delete StringLiteral: \"(\"(269)", "Delete StringLiteral: \")\"(279)", "Delete SimpleName: append(367)", "Delete CharacterLiteral: ' '(368)", "Delete MethodInvocation(369)", "Delete ExpressionStatement(370)", "Delete SimpleName: append(316)", "Delete CharacterLiteral: ' '(317)", "Delete MethodInvocation(318)", "Delete ExpressionStatement(319)", "Delete SimpleName: deleteLastCharIfCharIs(335)", "Delete CharacterLiteral: ' '(336)", "Delete MethodInvocation(337)", "Delete ExpressionStatement(338)", "Delete Block(341)", "Delete StringLiteral: \")\"(520)", "Delete StringLiteral: \")\"(533)", "Delete StringLiteral: \")\"(561)", "Delete SimpleName: append(639)", "Delete MethodInvocation(643)", "Delete ExpressionStatement(644)", "Delete StringLiteral: \"{\"(768)", "Delete StringLiteral: \"@\"(1074)", "Delete StringLiteral: \" \"(1092)"]}}, {"DefinitionPrinter_cluster": {"actions": [{"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: startNewLine to MethodInvocation at 1", "INS SimpleName: buffer to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "UPDATE from deleteBufferCharAt to buffer", "operations": ["UPD SimpleName: deleteBufferCharAt from deleteBufferCharAt to buffer"]}, {"root": "UPDATE from getCurrentBufferLength to deleteLastChar", "operations": ["UPD SimpleName: getCurrentBufferLength from getCurrentBufferLength to deleteLastChar"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getCurrentBufferLength to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \";\\n\" to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "UPDATE from \";\\n\" to \";\"", "operations": ["UPD StringLiteral: \";\\n\" from \";\\n\" to \";\""]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL InfixExpression: -", "operations": ["DEL InfixExpression: -", "DEL NumberLiteral: 1", "DEL MethodInvocation"]}]}}, {"DefinitionPrinter_diff": {"operations": ["Insert SimpleName: buffer(197) into MethodInvocation(200) at 0", "Insert SimpleName: buffer(220) into MethodInvocation(223) at 0", "Insert SimpleName: buffer(242) into MethodInvocation(247) at 0", "Insert SimpleName: buffer(249) into MethodInvocation(252) at 0", "Insert SimpleName: buffer(272) into MethodInvocation(275) at 0", "Insert SimpleName: buffer(294) into MethodInvocation(297) at 0", "Insert SimpleName: buffer(299) into MethodInvocation(302) at 0", "Insert MethodInvocation(162) into ExpressionStatement(163) at 0", "Insert MethodInvocation(160) into MethodInvocation(162) at 0", "Insert SimpleName: startNewLine(161) into MethodInvocation(162) at 1", "Update SimpleName: deleteBufferCharAt(187) to buffer", "Update SimpleName: getCurrentBufferLength(188) to deleteLastChar", "Move SimpleName: getCurrentBufferLength(188) into MethodInvocation(193) at 1", "Insert SimpleName: buffer(157) into MethodInvocation(160) at 0", "Move SimpleName: append(156) into MethodInvocation(160) at 1", "Update StringLiteral: \";\\n\"(157) to \";\"", "Move StringLiteral: \";\\n\"(157) into MethodInvocation(160) at 2", "Insert SimpleName: buffer(128) into MethodInvocation(131) at 0", "Delete MethodInvocation(158)", "Delete MethodInvocation(189)", "Delete NumberLiteral: 1(190)", "Delete InfixExpression: -(191)"]}}, {"PrettyPrinter_cluster": {"actions": [{"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 5"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ReturnStatement to Block at 3"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0", "MOV ReturnStatement to Block at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: buffer to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: startNewLine to MethodInvocation at 1", "INS SimpleName: buffer to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS CharacterLiteral: ';' to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0", "INS SimpleName: startNewLine to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS CharacterLiteral: ';' to MethodInvocation at 2"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: startNewLine to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: buffer to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS CharacterLiteral: '}' to MethodInvocation at 2", "INS SimpleName: startNewLine to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS CharacterLiteral: ';' to MethodInvocation at 2", "INS SimpleName: buffer to MethodInvocation at 0", "INS SimpleName: startNewLine to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0", "INS SimpleName: startNewLine to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "UPDATE from deleteEndingIfEndingIs to deleteLastCharIfCharIs", "operations": ["UPD SimpleName: deleteEndingIfEndingIs from deleteEndingIfEndingIs to deleteLastCharIfCharIs", "UPD SimpleName: deleteEndingIfEndingIs from deleteEndingIfEndingIs to deleteLastCharIfCharIs", "UPD SimpleName: deleteEndingIfEndingIs from deleteEndingIfEndingIs to deleteLastCharIfCharIs", "UPD SimpleName: deleteEndingIfEndingIs from deleteEndingIfEndingIs to deleteLastCharIfCharIs", "UPD SimpleName: deleteEndingIfEndingIs from deleteEndingIfEndingIs to deleteLastCharIfCharIs"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: '(' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: '(' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "UPDATE from append to buffer", "operations": ["UPD SimpleName: append from append to buffer", "UPD SimpleName: append from append to buffer"]}, {"root": "INS SimpleName: startNewLine to MethodInvocation at 1", "operations": ["INS SimpleName: startNewLine to MethodInvocation at 1"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: '}' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: '}' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV MethodInvocation to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \" {\\n\" to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "UPDATE from \" {\\n\" to \" {\"", "operations": ["UPD StringLiteral: \" {\\n\" from \" {\\n\" to \" {\"", "UPD StringLiteral: \" {\\n\" from \" {\\n\" to \" {\"", "UPD StringLiteral: \" {\\n\" from \" {\\n\" to \" {\""]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS CharacterLiteral: '{' to MethodInvocation at 2", "INS SimpleName: buffer to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: startNewLine to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS CharacterLiteral: '}' to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: startNewLine to MethodInvocation at 1", "INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ')' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ')' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ')' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ')' to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV StringLiteral: \" {\\n\" to MethodInvocation at 2", "MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: startNewLine to MethodInvocation at 1", "INS SimpleName: buffer to MethodInvocation at 0", "INS CharacterLiteral: ';' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: startNewLine to MethodInvocation at 1", "INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS CharacterLiteral: '}' to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: startNewLine to MethodInvocation at 1", "INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: buffer to MethodInvocation at 0", "INS SimpleName: startNewLine to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0", "INS CharacterLiteral: ';' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ')' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ')' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to ExpressionStatement at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: startNewLine to MethodInvocation at 1", "INS CharacterLiteral: '}' to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1", "MOV StringLiteral: \" {\\n\" to MethodInvocation at 2"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: startNewLine to MethodInvocation at 1", "operations": ["INS SimpleName: startNewLine to MethodInvocation at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: append to MethodInvocation at 1"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ' ' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ' ' to MethodInvocation at 2"]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL MethodInvocation", "operations": ["DEL StringLiteral: \";\\n\"", "DEL MethodInvocation"]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL MethodInvocation", "operations": ["DEL StringLiteral: \";\\n\"", "DEL MethodInvocation"]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL StringLiteral: \"}\\n\""]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL StringLiteral: \"{\\n\""]}, {"root": "DEL MethodInvocation", "operations": ["DEL StringLiteral: \"}\\n\"", "DEL MethodInvocation"]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL StringLiteral: \";\\n\""]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL StringLiteral: \"(\"", "operations": ["DEL StringLiteral: \"(\""]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL StringLiteral: \")\"", "operations": ["DEL StringLiteral: \")\""]}, {"root": "DEL StringLiteral: \")\"", "operations": ["DEL StringLiteral: \")\""]}, {"root": "DEL StringLiteral: \")\"", "operations": ["DEL StringLiteral: \")\""]}, {"root": "DEL ExpressionStatement", "operations": ["DEL MethodInvocation", "DEL ExpressionStatement", "DEL SimpleName: append"]}, {"root": "DEL StringLiteral: \"\\n\"", "operations": ["DEL StringLiteral: \"\\n\""]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL StringLiteral: \"}\"", "operations": ["DEL StringLiteral: \"}\""]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL MethodInvocation", "operations": ["DEL StringLiteral: \"}\\n\"", "DEL MethodInvocation"]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL MethodInvocation", "operations": ["DEL StringLiteral: \";\\n\"", "DEL MethodInvocation"]}, {"root": "DEL StringLiteral: \" \"", "operations": ["DEL StringLiteral: \" \""]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL StringLiteral: \"}\\n\"", "DEL MethodInvocation"]}, {"root": "DEL MethodInvocation", "operations": ["DEL StringLiteral: \";\\n\"", "DEL MethodInvocation"]}, {"root": "DEL StringLiteral: \"\\n\"", "operations": ["DEL StringLiteral: \"\\n\""]}]}}, {"PrettyPrinter_diff": {"operations": ["Move MarkerAnnotation(589) into MethodDeclaration(619) at 0", "Move SingleVariableDeclaration(596) into MethodDeclaration(619) at 5", "Move MarkerAnnotation(560) into MethodDeclaration(654) at 0", "Move SingleVariableDeclaration(567) into MethodDeclaration(654) at 4", "Move MarkerAnnotation(1405) into MethodDeclaration(1361) at 0", "Move MarkerAnnotation(1436) into MethodDeclaration(1524) at 0", "Move MarkerAnnotation(1551) into MethodDeclaration(1585) at 0", "Move MarkerAnnotation(1617) into MethodDeclaration(1723) at 0", "Move SingleVariableDeclaration(1624) into MethodDeclaration(1723) at 4", "Move MarkerAnnotation(1694) into MethodDeclaration(1773) at 0", "Move SingleVariableDeclaration(1558) into MethodDeclaration(1773) at 4", "Move MarkerAnnotation(1270) into MethodDeclaration(1824) at 0", "Move ExpressionStatement(550) into Block(563) at 0", "Move ReturnStatement(556) into Block(563) at 3", "Move ExpressionStatement(529) into Block(585) at 0", "Move ReturnStatement(535) into Block(585) at 2", "Move ExpressionStatement(1185) into Block(1185) at 1", "Insert ExpressionStatement(1255) into Block(1286) at 1", "Move ExpressionStatement(1075) into Block(1313) at 0", "Move ExpressionStatement(1526) into Block(1523) at 0", "Move ExpressionStatement(1562) into Block(1584) at 0", "Move ExpressionStatement(1447) into Block(1722) at 0", "Insert MethodInvocation(274) into ExpressionStatement(275) at 0", "Insert MethodInvocation(539) into ExpressionStatement(540) at 0", "Insert MethodInvocation(610) into ExpressionStatement(611) at 0", "Insert MethodInvocation(651) into ExpressionStatement(652) at 0", "Insert MethodInvocation(801) into ExpressionStatement(802) at 0", "Insert MethodInvocation(1254) into ExpressionStatement(1255) at 0", "Insert MethodInvocation(1482) into ExpressionStatement(1483) at 0", "Move MethodInvocation(1629) into IfStatement(1719) at 0", "Move MethodInvocation(1601) into IfStatement(1771) at 0", "Insert SimpleName: buffer(202) into MethodInvocation(209) at 0", "Insert MethodInvocation(272) into MethodInvocation(274) at 0", "Insert SimpleName: startNewLine(273) into MethodInvocation(274) at 1", "Insert SimpleName: buffer(291) into MethodInvocation(298) at 0", "Insert SimpleName: buffer(355) into MethodInvocation(362) at 0", "Insert SimpleName: buffer(364) into MethodInvocation(367) at 0", "Insert SimpleName: buffer(414) into MethodInvocation(421) at 0", "Insert SimpleName: buffer(461) into MethodInvocation(468) at 0", "Insert SimpleName: buffer(487) into MethodInvocation(490) at 0", "Insert SimpleName: buffer(492) into MethodInvocation(497) at 0", "Insert SimpleName: buffer(499) into MethodInvocation(502) at 0", "Insert CharacterLiteral: ' '(501) into MethodInvocation(502) at 2", "Insert SimpleName: buffer(504) into MethodInvocation(509) at 0", "Insert SimpleName: buffer(511) into MethodInvocation(514) at 0", "Insert CharacterLiteral: ' '(513) into MethodInvocation(514) at 2", "Insert SimpleName: buffer(529) into MethodInvocation(532) at 0", "Update SimpleName: deleteEndingIfEndingIs(507) to deleteLastCharIfCharIs", "Insert CharacterLiteral: ' '(531) into MethodInvocation(532) at 2", "Insert MethodInvocation(537) into MethodInvocation(539) at 0", "Insert SimpleName: startNewLine(538) into MethodInvocation(539) at 1", "Insert SimpleName: buffer(556) into MethodInvocation(559) at 0", "Insert SimpleName: buffer(578) into MethodInvocation(581) at 0", "Insert SimpleName: buffer(600) into MethodInvocation(603) at 0", "Update SimpleName: deleteEndingIfEndingIs(572) to deleteLastCharIfCharIs", "Insert CharacterLiteral: ' '(602) into MethodInvocation(603) at 2", "Insert MethodInvocation(608) into MethodInvocation(610) at 0", "Insert SimpleName: startNewLine(609) into MethodInvocation(610) at 1", "Insert SimpleName: buffer(641) into MethodInvocation(644) at 0", "Insert MethodInvocation(649) into MethodInvocation(651) at 0", "Insert SimpleName: startNewLine(650) into MethodInvocation(651) at 1", "Insert SimpleName: buffer(749) into MethodInvocation(752) at 0", "Insert SimpleName: buffer(764) into MethodInvocation(771) at 0", "Insert SimpleName: buffer(773) into MethodInvocation(776) at 0", "Insert SimpleName: buffer(791) into MethodInvocation(794) at 0", "Update SimpleName: deleteEndingIfEndingIs(745) to deleteLastCharIfCharIs", "Insert CharacterLiteral: ' '(793) into MethodInvocation(794) at 2", "Insert MethodInvocation(799) into MethodInvocation(801) at 0", "Insert SimpleName: startNewLine(800) into MethodInvocation(801) at 1", "Insert SimpleName: buffer(851) into MethodInvocation(854) at 0", "Insert SimpleName: buffer(884) into MethodInvocation(891) at 0", "Insert SimpleName: buffer(921) into MethodInvocation(926) at 0", "Insert SimpleName: buffer(928) into MethodInvocation(931) at 0", "Insert CharacterLiteral: '('(930) into MethodInvocation(931) at 2", "Insert SimpleName: buffer(946) into MethodInvocation(949) at 0", "Update SimpleName: deleteEndingIfEndingIs(890) to deleteLastCharIfCharIs", "Insert CharacterLiteral: ' '(948) into MethodInvocation(949) at 2", "Insert SimpleName: buffer(951) into MethodInvocation(954) at 0", "Insert SimpleName: buffer(1011) into MethodInvocation(1014) at 0", "Insert SimpleName: buffer(1069) into MethodInvocation(1072) at 0", "Insert SimpleName: buffer(1131) into MethodInvocation(1136) at 0", "Insert SimpleName: buffer(1138) into MethodInvocation(1143) at 0", "Insert SimpleName: buffer(1249) into MethodInvocation(1254) at 0", "Insert SimpleName: append(1250) into MethodInvocation(1254) at 1", "Move MethodInvocation(1228) into MethodInvocation(1254) at 2", "Insert SimpleName: buffer(1256) into MethodInvocation(1261) at 0", "Insert SimpleName: buffer(1263) into MethodInvocation(1268) at 0", "Insert SimpleName: buffer(1270) into MethodInvocation(1275) at 0", "Insert SimpleName: buffer(1277) into MethodInvocation(1282) at 0", "Insert SimpleName: buffer(1299) into MethodInvocation(1304) at 0", "Insert SimpleName: buffer(1306) into MethodInvocation(1311) at 0", "Insert SimpleName: buffer(1355) into MethodInvocation(1358) at 0", "Insert SimpleName: buffer(1371) into MethodInvocation(1374) at 0", "Update SimpleName: append(1308) to buffer", "Insert SimpleName: startNewLine(1388) into MethodInvocation(1389) at 1", "Insert SimpleName: buffer(1424) into MethodInvocation(1429) at 0", "Insert MethodInvocation(1480) into MethodInvocation(1482) at 0", "Insert SimpleName: startNewLine(1481) into MethodInvocation(1482) at 1", "Insert SimpleName: buffer(1513) into MethodInvocation(1516) at 0", "Insert SimpleName: buffer(1518) into MethodInvocation(1521) at 0", "Insert CharacterLiteral: '}'(1520) into MethodInvocation(1521) at 2", "Insert SimpleName: buffer(1538) into MethodInvocation(1541) at 0", "Move MethodInvocation(1575) into MethodInvocation(1553) at 2", "Insert SimpleName: buffer(1664) into MethodInvocation(1667) at 0", "Move MethodInvocation(1460) into MethodInvocation(1679) at 2", "Move ExpressionStatement(1424) into Block(1762) at 0", "Insert SimpleName: buffer(1818) into MethodInvocation(1821) at 0", "Insert SimpleName: buffer(1834) into MethodInvocation(1837) at 0", "Insert SimpleName: buffer(269) into MethodInvocation(272) at 0", "Move SimpleName: append(265) into MethodInvocation(272) at 1", "Insert CharacterLiteral: ';'(271) into MethodInvocation(272) at 2", "Insert SimpleName: buffer(534) into MethodInvocation(537) at 0", "Move SimpleName: append(511) into MethodInvocation(537) at 1", "Insert CharacterLiteral: ';'(536) into MethodInvocation(537) at 2", "Insert SimpleName: buffer(605) into MethodInvocation(608) at 0", "Move SimpleName: append(576) into MethodInvocation(608) at 1", "Update StringLiteral: \" {\\n\"(577) to \" {\"", "Move StringLiteral: \" {\\n\"(577) into MethodInvocation(608) at 2", "Insert SimpleName: buffer(646) into MethodInvocation(649) at 0", "Move SimpleName: append(613) into MethodInvocation(649) at 1", "Insert CharacterLiteral: '}'(648) into MethodInvocation(649) at 2", "Insert MethodInvocation(686) into ExpressionStatement(687) at 0", "Insert MethodInvocation(718) into ExpressionStatement(719) at 0", "Insert SimpleName: buffer(796) into MethodInvocation(799) at 0", "Move SimpleName: append(749) into MethodInvocation(799) at 1", "Insert CharacterLiteral: ';'(798) into MethodInvocation(799) at 2", "Insert SimpleName: buffer(1150) into MethodInvocation(1159) at 0", "Insert SimpleName: buffer(1161) into MethodInvocation(1164) at 0", "Insert CharacterLiteral: ')'(1163) into MethodInvocation(1164) at 2", "Insert SimpleName: buffer(1169) into MethodInvocation(1174) at 0", "Insert SimpleName: buffer(1176) into MethodInvocation(1179) at 0", "Insert CharacterLiteral: ')'(1178) into MethodInvocation(1179) at 2", "Insert SimpleName: buffer(1477) into MethodInvocation(1480) at 0", "Move SimpleName: append(1392) into MethodInvocation(1480) at 1", "Update StringLiteral: \" {\\n\"(1393) to \" {\"", "Move StringLiteral: \" {\\n\"(1393) into MethodInvocation(1480) at 2", "Insert SimpleName: buffer(1543) into MethodInvocation(1546) at 0", "Insert MethodInvocation(1645) into ExpressionStatement(1646) at 0", "Insert SimpleName: buffer(1669) into MethodInvocation(1672) at 0", "Insert MethodInvocation(1712) into ExpressionStatement(1713) at 0", "Insert MethodInvocation(1760) into ExpressionStatement(1761) at 0", "Insert MethodInvocation(1768) into ExpressionStatement(1769) at 0", "Insert SimpleName: buffer(218) into MethodInvocation(221) at 0", "Insert CharacterLiteral: ' '(220) into MethodInvocation(221) at 2", "Insert SimpleName: buffer(320) into MethodInvocation(323) at 0", "Insert CharacterLiteral: ' '(322) into MethodInvocation(323) at 2", "Insert SimpleName: buffer(376) into MethodInvocation(381) at 0", "Insert SimpleName: buffer(390) into MethodInvocation(393) at 0", "Insert SimpleName: buffer(430) into MethodInvocation(433) at 0", "Insert CharacterLiteral: ' '(432) into MethodInvocation(433) at 2", "Insert SimpleName: buffer(435) into MethodInvocation(440) at 0", "Insert MethodInvocation(684) into MethodInvocation(686) at 0", "Insert SimpleName: startNewLine(685) into MethodInvocation(686) at 1", "Insert MethodInvocation(716) into MethodInvocation(718) at 0", "Insert SimpleName: startNewLine(717) into MethodInvocation(718) at 1", "Insert SimpleName: buffer(757) into MethodInvocation(760) at 0", "Insert SimpleName: buffer(860) into MethodInvocation(863) at 0", "Insert CharacterLiteral: ' '(862) into MethodInvocation(863) at 2", "Insert SimpleName: buffer(897) into MethodInvocation(900) at 0", "Insert CharacterLiteral: ' '(899) into MethodInvocation(900) at 2", "Insert SimpleName: buffer(1049) into MethodInvocation(1052) at 0", "Insert SimpleName: buffer(1201) into MethodInvocation(1204) at 0", "Insert SimpleName: buffer(1206) into MethodInvocation(1209) at 0", "Insert CharacterLiteral: ')'(1208) into MethodInvocation(1209) at 2", "Insert SimpleName: buffer(1331) into MethodInvocation(1338) at 0", "Insert SimpleName: buffer(1411) into MethodInvocation(1414) at 0", "Insert CharacterLiteral: ' '(1413) into MethodInvocation(1414) at 2", "Insert SimpleName: buffer(1417) into MethodInvocation(1420) at 0", "Insert SimpleName: buffer(1436) into MethodInvocation(1439) at 0", "Insert CharacterLiteral: ' '(1438) into MethodInvocation(1439) at 2", "Insert SimpleName: buffer(1575) into MethodInvocation(1578) at 0", "Insert CharacterLiteral: ' '(1577) into MethodInvocation(1578) at 2", "Move ExpressionStatement(1641) into Block(1632) at 0", "Insert SimpleName: buffer(1635) into MethodInvocation(1638) at 0", "Update SimpleName: deleteEndingIfEndingIs(1538) to deleteLastCharIfCharIs", "Insert CharacterLiteral: ' '(1637) into MethodInvocation(1638) at 2", "Insert MethodInvocation(1643) into MethodInvocation(1645) at 0", "Insert SimpleName: startNewLine(1644) into MethodInvocation(1645) at 1", "Insert SimpleName: buffer(1688) into MethodInvocation(1691) at 0", "Insert CharacterLiteral: ' '(1690) into MethodInvocation(1691) at 2", "Insert SimpleName: buffer(1693) into MethodInvocation(1698) at 0", "Insert MethodInvocation(1710) into MethodInvocation(1712) at 0", "Insert SimpleName: startNewLine(1711) into MethodInvocation(1712) at 1", "Insert SimpleName: buffer(1750) into MethodInvocation(1753) at 0", "Insert MethodInvocation(1758) into MethodInvocation(1760) at 0", "Insert SimpleName: startNewLine(1759) into MethodInvocation(1760) at 1", "Insert MethodInvocation(1766) into MethodInvocation(1768) at 0", "Insert SimpleName: startNewLine(1767) into MethodInvocation(1768) at 1", "Insert SimpleName: buffer(1798) into MethodInvocation(1801) at 0", "Insert SimpleName: buffer(681) into MethodInvocation(684) at 0", "Move SimpleName: append(645) into MethodInvocation(684) at 1", "Insert CharacterLiteral: '{'(683) into MethodInvocation(684) at 2", "Insert SimpleName: buffer(713) into MethodInvocation(716) at 0", "Move SimpleName: append(674) into MethodInvocation(716) at 1", "Insert CharacterLiteral: '}'(715) into MethodInvocation(716) at 2", "Insert MethodInvocation(1630) into ExpressionStatement(1631) at 0", "Insert SimpleName: buffer(1640) into MethodInvocation(1643) at 0", "Move SimpleName: append(1542) into MethodInvocation(1643) at 1", "Insert CharacterLiteral: ';'(1642) into MethodInvocation(1643) at 2", "Insert SimpleName: buffer(1707) into MethodInvocation(1710) at 0", "Move SimpleName: append(1602) into MethodInvocation(1710) at 1", "Update StringLiteral: \" {\\n\"(1603) to \" {\"", "Move StringLiteral: \" {\\n\"(1603) into MethodInvocation(1710) at 2", "Insert SimpleName: buffer(1755) into MethodInvocation(1758) at 0", "Move SimpleName: append(1646) into MethodInvocation(1758) at 1", "Insert CharacterLiteral: '}'(1757) into MethodInvocation(1758) at 2", "Insert SimpleName: buffer(1763) into MethodInvocation(1766) at 0", "Move SimpleName: append(1651) into MethodInvocation(1766) at 1", "Insert CharacterLiteral: ';'(1765) into MethodInvocation(1766) at 2", "Insert SimpleName: buffer(236) into MethodInvocation(242) at 0", "Insert SimpleName: buffer(245) into MethodInvocation(250) at 0", "Insert SimpleName: buffer(1466) into MethodInvocation(1471) at 0", "Insert SimpleName: buffer(1620) into MethodInvocation(1623) at 0", "Insert MethodInvocation(1628) into MethodInvocation(1630) at 0", "Insert SimpleName: startNewLine(1629) into MethodInvocation(1630) at 1", "Insert SimpleName: buffer(2016) into MethodInvocation(2019) at 0", "Insert SimpleName: buffer(2021) into MethodInvocation(2026) at 0", "Update SimpleName: append(1908) to buffer", "Insert SimpleName: startNewLine(2029) into MethodInvocation(2030) at 1", "Insert SimpleName: buffer(1625) into MethodInvocation(1628) at 0", "Move SimpleName: append(1531) into MethodInvocation(1628) at 1", "Insert CharacterLiteral: '}'(1627) into MethodInvocation(1628) at 2", "Insert SimpleName: buffer(1455) into MethodInvocation(1458) at 0", "Insert CharacterLiteral: ' '(1457) into MethodInvocation(1458) at 2", "Delete StringLiteral: \" \"(218)", "Delete StringLiteral: \";\\n\"(266)", "Delete MethodInvocation(267)", "Delete StringLiteral: \" \"(313)", "Delete StringLiteral: \" \"(417)", "Delete StringLiteral: \" \"(481)", "Delete StringLiteral: \" \"(491)", "Delete StringLiteral: \" \"(508)", "Delete StringLiteral: \";\\n\"(512)", "Delete MethodInvocation(513)", "Delete StringLiteral: \" \"(573)", "Delete MethodInvocation(578)", "Delete StringLiteral: \"}\\n\"(614)", "Delete MethodInvocation(615)", "Delete StringLiteral: \"{\\n\"(646)", "Delete MethodInvocation(647)", "Delete StringLiteral: \"}\\n\"(675)", "Delete MethodInvocation(676)", "Delete StringLiteral: \" \"(746)", "Delete StringLiteral: \";\\n\"(750)", "Delete MethodInvocation(751)", "Delete StringLiteral: \" \"(810)", "Delete StringLiteral: \" \"(845)", "Delete StringLiteral: \"(\"(874)", "Delete StringLiteral: \" \"(891)", "Delete StringLiteral: \")\"(1098)", "Delete StringLiteral: \")\"(1111)", "Delete StringLiteral: \")\"(1139)", "Delete SimpleName: append(1225)", "Delete MethodInvocation(1229)", "Delete ExpressionStatement(1230)", "Delete StringLiteral: \"\\n\"(1309)", "Delete StringLiteral: \" \"(1333)", "Delete StringLiteral: \" \"(1355)", "Delete StringLiteral: \" \"(1373)", "Delete MethodInvocation(1394)", "Delete StringLiteral: \"}\"(1430)", "Delete StringLiteral: \" \"(1484)", "Delete StringLiteral: \"}\\n\"(1532)", "Delete MethodInvocation(1533)", "Delete StringLiteral: \" \"(1539)", "Delete StringLiteral: \";\\n\"(1543)", "Delete MethodInvocation(1544)", "Delete StringLiteral: \" \"(1586)", "Delete MethodInvocation(1604)", "Delete StringLiteral: \"}\\n\"(1647)", "Delete MethodInvocation(1648)", "Delete StringLiteral: \";\\n\"(1652)", "Delete MethodInvocation(1653)", "Delete StringLiteral: \"\\n\"(1909)"]}}, {"SExprPrinter_cluster": {"actions": [{"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ')' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ')' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ')' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ')' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS CharacterLiteral: ')' to MethodInvocation at 2", "operations": ["INS CharacterLiteral: ')' to MethodInvocation at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "DEL StringLiteral: \")\"", "operations": ["DEL StringLiteral: \")\""]}, {"root": "DEL StringLiteral: \")\"", "operations": ["DEL StringLiteral: \")\""]}, {"root": "DEL StringLiteral: \")\"", "operations": ["DEL StringLiteral: \")\""]}]}}, {"SExprPrinter_diff": {"operations": ["Insert SimpleName: buffer(231) into MethodInvocation(234) at 0", "Insert SimpleName: buffer(236) into MethodInvocation(239) at 0", "Insert CharacterLiteral: ')'(238) into MethodInvocation(239) at 2", "Insert SimpleName: buffer(263) into MethodInvocation(266) at 0", "Insert SimpleName: buffer(288) into MethodInvocation(291) at 0", "Insert CharacterLiteral: ')'(290) into MethodInvocation(291) at 2", "Insert SimpleName: buffer(318) into MethodInvocation(321) at 0", "Insert SimpleName: buffer(323) into MethodInvocation(330) at 0", "Insert SimpleName: buffer(351) into MethodInvocation(354) at 0", "Insert CharacterLiteral: ')'(353) into MethodInvocation(354) at 2", "Insert SimpleName: buffer(375) into MethodInvocation(380) at 0", "Insert SimpleName: buffer(155) into MethodInvocation(169) at 0", "Insert SimpleName: buffer(172) into MethodInvocation(183) at 0", "Insert SimpleName: buffer(207) into MethodInvocation(216) at 0", "Delete StringLiteral: \")\"(233)", "Delete StringLiteral: \")\"(283)", "Delete StringLiteral: \")\"(343)"]}}, {"TemplateCompactPrinter_cluster": {"actions": [{"root": "INS TypeDeclaration: class to TypeDeclaration: class at 13", "operations": ["INS MethodInvocation to InfixExpression: == at 0", "INS Modifier: private to TypeDeclaration: class at 0", "INS Block to IfStatement at 1", "INS Modifier: final to TypeDeclaration: class at 2", "INS MethodDeclaration to TypeDeclaration: class at 5", "INS SimpleName: deleteLastChars to MethodInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS Modifier: public to MethodDeclaration at 1", "INS InfixExpression: == to InfixExpression: && at 1", "INS NumberLiteral: 2 to MethodInvocation at 1", "INS Modifier: static to TypeDeclaration: class at 1", "INS SimpleName: CodeBuffer to SimpleType: CodeBuffer at 0", "INS ExpressionStatement to Block at 0", "INS SimpleName: CodeBufferForTemplate to TypeDeclaration: class at 3", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: DECLARATION_END to InfixExpression: == at 1", "INS TypeDeclaration: class to TypeDeclaration: class at 13", "INS SimpleName: getLastChar to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS IfStatement to Block at 0", "INS SimpleName: deleteLastCharIfCharIs to MethodDeclaration at 3", "INS Block to MethodDeclaration at 5", "INS SimpleType: CodeBuffer to TypeDeclaration: class at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4", "MOV MarkerAnnotation to MethodDeclaration at 0"]}, {"root": "INS ExpressionStatement to Block at 1", "operations": ["INS ExpressionStatement to Block at 1", "INS SimpleName: buffer to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: append to MethodInvocation at 1", "INS SimpleName: DECLARATION_END to MethodInvocation at 2"]}, {"root": "INS ClassInstanceCreation to SuperConstructorInvocation at 2", "operations": ["INS SimpleType: CodeBufferForTemplate to ClassInstanceCreation at 0", "INS ClassInstanceCreation to SuperConstructorInvocation at 2", "INS SimpleName: CodeBufferForTemplate to SimpleType: CodeBufferForTemplate at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 2"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "MOVE from InfixExpression: &&", "operations": ["MOV InfixExpression: == to InfixExpression: && at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 1"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "INS SimpleName: buffer to MethodInvocation at 0", "operations": ["INS SimpleName: buffer to MethodInvocation at 0"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL ExpressionStatement", "DEL NumberLiteral: 2", "DEL InfixExpression: -", "DEL SimpleName: deleteLastCharIfCharIs", "DEL SimpleName: getCurrentBufferLength", "DEL MethodInvocation", "DEL MethodDeclaration", "DEL MethodInvocation", "DEL SimpleName: DECLARATION_END", "DEL SimpleName: getLastCharInBuffer", "DEL InfixExpression: &&", "DEL PrimitiveType: void", "DEL Block", "DEL Modifier: protected", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: deleteBufferCharAt", "DEL InfixExpression: ==", "DEL IfStatement"]}]}}, {"TemplateCompactPrinter_diff": {"operations": ["Insert TypeDeclaration: class(149) into TypeDeclaration: class(625) at 13", "Insert Modifier: private(110) into TypeDeclaration: class(149) at 0", "Insert Modifier: static(111) into TypeDeclaration: class(149) at 1", "Insert Modifier: final(112) into TypeDeclaration: class(149) at 2", "Insert SimpleName: CodeBufferForTemplate(113) into TypeDeclaration: class(149) at 3", "Insert SimpleType: CodeBuffer(115) into TypeDeclaration: class(149) at 4", "Insert MethodDeclaration(148) into TypeDeclaration: class(149) at 5", "Insert SimpleName: CodeBuffer(114) into SimpleType: CodeBuffer(115) at 0", "Move MarkerAnnotation(559) into MethodDeclaration(148) at 0", "Insert Modifier: public(118) into MethodDeclaration(148) at 1", "Insert PrimitiveType: void(119) into MethodDeclaration(148) at 2", "Insert SimpleName: deleteLastCharIfCharIs(120) into MethodDeclaration(148) at 3", "Move SingleVariableDeclaration(565) into MethodDeclaration(148) at 4", "Insert Block(147) into MethodDeclaration(148) at 5", "Insert ExpressionStatement(250) into Block(251) at 1", "Insert IfStatement(146) into Block(147) at 0", "Insert ClassInstanceCreation(173) into SuperConstructorInvocation(174) at 2", "Insert MethodInvocation(249) into ExpressionStatement(250) at 0", "Insert InfixExpression: &&(131) into IfStatement(146) at 0", "Insert Block(140) into IfStatement(146) at 1", "Move Block(586) into IfStatement(146) at 2", "Insert SimpleType: CodeBufferForTemplate(172) into ClassInstanceCreation(173) at 0", "Insert SimpleName: buffer(222) into MethodInvocation(225) at 0", "Insert SimpleName: buffer(246) into MethodInvocation(249) at 0", "Insert SimpleName: append(247) into MethodInvocation(249) at 1", "Insert SimpleName: DECLARATION_END(248) into MethodInvocation(249) at 2", "Insert SimpleName: buffer(290) into MethodInvocation(293) at 0", "Insert SimpleName: buffer(310) into MethodInvocation(313) at 0", "Insert SimpleName: buffer(348) into MethodInvocation(351) at 0", "Insert SimpleName: buffer(364) into MethodInvocation(367) at 0", "Insert SimpleName: buffer(402) into MethodInvocation(405) at 0", "Insert SimpleName: buffer(418) into MethodInvocation(421) at 0", "Insert SimpleName: buffer(456) into MethodInvocation(459) at 0", "Insert SimpleName: buffer(472) into MethodInvocation(475) at 0", "Insert SimpleName: buffer(510) into MethodInvocation(513) at 0", "Insert SimpleName: buffer(526) into MethodInvocation(529) at 0", "Insert SimpleName: buffer(564) into MethodInvocation(567) at 0", "Insert SimpleName: buffer(580) into MethodInvocation(583) at 0", "Insert SimpleName: buffer(618) into MethodInvocation(621) at 0", "Move InfixExpression: ==(568) into InfixExpression: &&(131) at 0", "Insert InfixExpression: ==(130) into InfixExpression: &&(131) at 1", "Insert ExpressionStatement(135) into Block(140) at 0", "Move ExpressionStatement(203) into Block(140) at 1", "Insert SimpleName: CodeBufferForTemplate(171) into SimpleType: CodeBufferForTemplate(172) at 0", "Insert MethodInvocation(128) into InfixExpression: ==(130) at 0", "Insert SimpleName: DECLARATION_END(129) into InfixExpression: ==(130) at 1", "Insert MethodInvocation(134) into ExpressionStatement(135) at 0", "Insert SimpleName: buffer(190) into MethodInvocation(193) at 0", "Insert SimpleName: buffer(199) into MethodInvocation(202) at 0", "Insert SimpleName: buffer(270) into MethodInvocation(273) at 0", "Insert SimpleName: buffer(324) into MethodInvocation(327) at 0", "Insert SimpleName: buffer(378) into MethodInvocation(381) at 0", "Insert SimpleName: buffer(432) into MethodInvocation(435) at 0", "Insert SimpleName: buffer(486) into MethodInvocation(489) at 0", "Insert SimpleName: buffer(540) into MethodInvocation(543) at 0", "Insert SimpleName: buffer(594) into MethodInvocation(597) at 0", "Insert SimpleName: getLastChar(127) into MethodInvocation(128) at 0", "Insert SimpleName: deleteLastChars(132) into MethodInvocation(134) at 0", "Insert NumberLiteral: 2(133) into MethodInvocation(134) at 1", "Delete Modifier: protected(560)", "Delete PrimitiveType: void(561)", "Delete SimpleName: deleteLastCharIfCharIs(562)", "Delete SimpleName: getLastCharInBuffer(569)", "Delete MethodInvocation(570)", "Delete SimpleName: DECLARATION_END(571)", "Delete InfixExpression: ==(572)", "Delete InfixExpression: &&(573)", "Delete SimpleName: deleteBufferCharAt(574)", "Delete SimpleName: getCurrentBufferLength(575)", "Delete MethodInvocation(576)", "Delete NumberLiteral: 2(577)", "Delete InfixExpression: -(578)", "Delete MethodInvocation(579)", "Delete ExpressionStatement(580)", "Delete Block(581)", "Delete IfStatement(587)", "Delete Block(588)", "Delete MethodDeclaration(589)"]}}], "commit_stats": [{"total_files": 10, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}