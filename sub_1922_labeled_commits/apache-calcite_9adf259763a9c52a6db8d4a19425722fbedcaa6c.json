{"application": "apache-calcite", "csha": "9adf259763a9c52a6db8d4a19425722fbedcaa6c", "files": [{"RexBuilder_cluster": {"actions": [{"root": "INS MethodDeclaration to TypeDeclaration: class at 29", "operations": ["INS MethodDeclaration to TypeDeclaration: class at 29", "INS SimpleName: type to MethodInvocation at 1", "INS SimpleName: makeCast to MethodDeclaration at 3", "INS SimpleName: exp to SingleVariableDeclaration at 1", "INS SimpleName: type to SingleVariableDeclaration at 1", "INS SimpleType: RexNode to MethodDeclaration at 2", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: RexNode to SimpleType: RexNode at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: makeCast to MethodInvocation at 0", "INS MethodInvocation to ReturnStatement at 0", "INS SimpleName: RelDataType to SimpleType: RelDataType at 0", "INS SimpleName: exp to MethodInvocation at 2", "INS SimpleType: RexNode to SingleVariableDeclaration at 0", "INS BooleanLiteral: false to MethodInvocation at 3", "INS Block to MethodDeclaration at 6", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleType: RelDataType to SingleVariableDeclaration at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0"]}, {"root": "INS Javadoc to MethodDeclaration at 0", "operations": ["INS SimpleName: type to TagElement: @param at 0", "INS TextElement:   Expression being cast to TagElement: @param at 1", "INS TagElement: @link to TagElement at 6", "INS TextElement: nullability as  to TagElement: @param at 2", "INS TextElement: also preserving nullability. to TagElement at 1", "INS TagElement: @code to TagElement: @param at 3", "INS TextElement: . to TagElement at 7", "INS SimpleName: matchNullability to TagElement: @param at 0", "INS TextElement:  Type to cast to to TagElement: @param at 1", "INS Javadoc to MethodDeclaration at 0", "INS SimpleName: exp to TagElement: @param at 0", "INS TextElement:  Call to CAST operator to TagElement: @return at 0", "INS SimpleName: RexLiteral to TagElement: @link at 0", "INS TagElement: @return to Javadoc at 4", "INS TextElement:  type to TagElement: @code at 0", "INS TextElement: Creates a call to the CAST operator, expanding if possible, and optionally to TagElement at 0", "INS TagElement to Javadoc at 0", "INS TextElement:  Whether to ensure the result has the same to TagElement: @param at 1", "INS TagElement: @param to Javadoc at 3", "INS TextElement: other than a  to TagElement at 3", "INS TagElement: @param to Javadoc at 2", "INS TextElement: <p>Tries to expand the cast, and therefore the result may be something to TagElement at 2", "INS TagElement: @link to TagElement at 4", "INS SimpleName: RexCall to TagElement: @link at 0", "INS TagElement: @param to Javadoc at 1", "INS TextElement:  to the CAST operator, such as a to TagElement at 5"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS PrimitiveType: boolean to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: matchNullability to SingleVariableDeclaration at 1"]}, {"root": "UPDATE from Creates a call to the CAST operator, expanding if possible. to Creates a call to the CAST operator.", "operations": ["UPD TextElement: Creates a call to the CAST operator, expanding if possible. from Creates a call to the CAST operator, expanding if possible. to Creates a call to the CAST operator."]}, {"root": "INS VariableDeclarationStatement to Block at 2", "operations": ["INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: typeName to VariableDeclarationFragment at 0"]}, {"root": "UPDATE from ArrayList<Integer> to ArrayList<>", "operations": ["UPD ParameterizedType: ArrayList<Integer> from ArrayList<Integer> to ArrayList<>"]}, {"root": "MOVE from VariableDeclarationStatement", "operations": ["MOV SimpleType: SqlTypeName to VariableDeclarationStatement at 0"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV MethodInvocation to VariableDeclarationFragment at 1"]}, {"root": "INS VariableDeclarationStatement to Block at 1", "operations": ["INS Modifier: final to VariableDeclarationStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 2", "INS SimpleName: literal2 to VariableDeclarationFragment at 0", "INS SimpleType: RexLiteral to VariableDeclarationStatement at 1", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: RexLiteral to SimpleType: RexLiteral at 0", "INS SimpleName: typeName to MethodInvocation at 3", "INS VariableDeclarationStatement to Block at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS SimpleName: makeAbstractCast to MethodInvocation at 0", "INS SimpleName: literal2 to MethodInvocation at 2", "INS MethodInvocation to InfixExpression: && at 0", "INS SimpleName: matchNullability to InfixExpression: && at 2", "INS IfStatement to Block at 2", "INS InfixExpression: && to IfStatement at 0", "INS SimpleName: type to MethodInvocation at 0", "INS SimpleName: type to MethodInvocation at 1", "INS PrefixExpression: ! to InfixExpression: && at 1", "INS SimpleName: isNullable to MethodInvocation at 1", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleName: isNullable to MethodInvocation at 1", "INS ReturnStatement to Block at 0", "INS MethodInvocation to ReturnStatement at 0", "INS Block to IfStatement at 1"]}, {"root": "INS ReturnStatement to Block at 3", "operations": ["INS ReturnStatement to Block at 3", "INS SimpleName: literal2 to ReturnStatement at 0"]}, {"root": "INS SimpleName: typeName to SwitchStatement at 0", "operations": ["INS SimpleName: typeName to SwitchStatement at 0"]}, {"root": "INS AssertStatement to SwitchStatement at 7", "operations": ["INS AssertStatement to SwitchStatement at 7", "INS InstanceofExpression to AssertStatement at 0", "INS SimpleType: Calendar to InstanceofExpression at 1", "INS SimpleName: value to InstanceofExpression at 0", "INS SimpleName: Calendar to SimpleType: Calendar at 0"]}, {"root": "INS AssertStatement to SwitchStatement at 14", "operations": ["INS SimpleType: BigDecimal to InstanceofExpression at 1", "INS AssertStatement to SwitchStatement at 14", "INS InstanceofExpression to AssertStatement at 0", "INS SimpleName: BigDecimal to SimpleType: BigDecimal at 0", "INS SimpleName: value to InstanceofExpression at 0"]}, {"root": "INS ExpressionStatement to SwitchStatement at 17", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to SwitchStatement at 17", "INS SimpleName: typeName to Assignment: = at 0"]}, {"root": "INS ExpressionStatement to SwitchStatement at 20", "operations": ["INS Assignment: = to ExpressionStatement at 0", "INS ExpressionStatement to SwitchStatement at 20", "INS SimpleName: value to Assignment: = at 0"]}, {"root": "INS SimpleName: typeName to InfixExpression: == at 1", "operations": ["INS SimpleName: typeName to InfixExpression: == at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from Assignment: =", "operations": ["MOV MethodInvocation to Assignment: = at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: type to MethodInvocation at 2", "MOV MethodInvocation to MethodInvocation at 0", "MOV SimpleName: value to MethodInvocation at 1", "MOV SimpleName: makeLiteral to MethodInvocation at 0"]}, {"root": "UPDATE from getTypeName to typeName", "operations": ["UPD SimpleName: getTypeName from getTypeName to typeName"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: getTypeName to MethodInvocation at 2"]}, {"root": "UPDATE from literal to literal2", "operations": ["UPD SimpleName: literal from literal to literal2"]}, {"root": "UPDATE from getTypeName to getType", "operations": ["UPD SimpleName: getTypeName from getTypeName to getType"]}, {"root": "DEL SimpleType: Integer", "operations": ["DEL SimpleType: Integer", "DEL SimpleName: Integer"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: literal"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: getTypeName", "DEL SimpleName: literal"]}, {"root": "DEL VariableDeclarationStatement", "operations": ["DEL VariableDeclarationFragment", "DEL SimpleName: typeName", "DEL VariableDeclarationStatement"]}, {"root": "DEL ReturnStatement", "operations": ["DEL SimpleName: makeLiteral", "DEL MethodInvocation", "DEL ReturnStatement", "DEL SimpleName: type", "DEL SimpleName: typeName"]}, {"root": "DEL ReturnStatement", "operations": ["DEL ReturnStatement", "DEL MethodInvocation"]}]}}, {"RexBuilder_diff": {"operations": ["Insert MethodDeclaration(1339) into TypeDeclaration: class(4491) at 29", "Move Javadoc(1321) into MethodDeclaration(1339) at 0", "Insert Modifier: public(1320) into MethodDeclaration(1339) at 1", "Insert SimpleType: RexNode(1322) into MethodDeclaration(1339) at 2", "Insert SimpleName: makeCast(1323) into MethodDeclaration(1339) at 3", "Insert SingleVariableDeclaration(1327) into MethodDeclaration(1339) at 4", "Insert SingleVariableDeclaration(1331) into MethodDeclaration(1339) at 5", "Insert Block(1338) into MethodDeclaration(1339) at 6", "Insert Javadoc(1365) into MethodDeclaration(1725) at 0", "Insert SingleVariableDeclaration(1380) into MethodDeclaration(1725) at 6", "Insert SimpleName: RexNode(1321) into SimpleType: RexNode(1322) at 0", "Insert SimpleType: RelDataType(1325) into SingleVariableDeclaration(1327) at 0", "Insert SimpleName: type(1326) into SingleVariableDeclaration(1327) at 1", "Insert SimpleType: RexNode(1329) into SingleVariableDeclaration(1331) at 0", "Insert SimpleName: exp(1330) into SingleVariableDeclaration(1331) at 1", "Insert ReturnStatement(1337) into Block(1338) at 0", "Insert TagElement(1350) into Javadoc(1365) at 0", "Insert TagElement: @param(1353) into Javadoc(1365) at 1", "Insert TagElement: @param(1356) into Javadoc(1365) at 2", "Insert TagElement: @param(1362) into Javadoc(1365) at 3", "Insert TagElement: @return(1364) into Javadoc(1365) at 4", "Insert PrimitiveType: boolean(1378) into SingleVariableDeclaration(1380) at 0", "Insert SimpleName: matchNullability(1379) into SingleVariableDeclaration(1380) at 1", "Update TextElement: Creates a call to the CAST operator, expanding if possible.(1311) to Creates a call to the CAST operator.", "Insert SimpleName: RelDataType(1324) into SimpleType: RelDataType(1325) at 0", "Insert SimpleName: RexNode(1328) into SimpleType: RexNode(1329) at 0", "Insert MethodInvocation(1336) into ReturnStatement(1337) at 0", "Insert TextElement: Creates a call to the CAST operator, expanding if possible, and optionally(1340) into TagElement(1350) at 0", "Insert TextElement: also preserving nullability.(1341) into TagElement(1350) at 1", "Insert TextElement: <p>Tries to expand the cast, and therefore the result may be something(1342) into TagElement(1350) at 2", "Insert TextElement: other than a (1343) into TagElement(1350) at 3", "Insert TagElement: @link(1345) into TagElement(1350) at 4", "Insert TextElement:  to the CAST operator, such as a(1346) into TagElement(1350) at 5", "Insert TagElement: @link(1348) into TagElement(1350) at 6", "Insert TextElement: .(1349) into TagElement(1350) at 7", "Insert SimpleName: type(1351) into TagElement: @param(1353) at 0", "Insert TextElement:  Type to cast to(1352) into TagElement: @param(1353) at 1", "Insert SimpleName: exp(1354) into TagElement: @param(1356) at 0", "Insert TextElement:   Expression being cast(1355) into TagElement: @param(1356) at 1", "Insert SimpleName: matchNullability(1357) into TagElement: @param(1362) at 0", "Insert TextElement:  Whether to ensure the result has the same(1358) into TagElement: @param(1362) at 1", "Insert TextElement: nullability as (1359) into TagElement: @param(1362) at 2", "Insert TagElement: @code(1361) into TagElement: @param(1362) at 3", "Insert TextElement:  Call to CAST operator(1363) into TagElement: @return(1364) at 0", "Insert SimpleName: makeCast(1332) into MethodInvocation(1336) at 0", "Insert SimpleName: type(1333) into MethodInvocation(1336) at 1", "Insert SimpleName: exp(1334) into MethodInvocation(1336) at 2", "Insert BooleanLiteral: false(1335) into MethodInvocation(1336) at 3", "Insert SimpleName: RexCall(1344) into TagElement: @link(1345) at 0", "Insert SimpleName: RexLiteral(1347) into TagElement: @link(1348) at 0", "Insert TextElement:  type(1360) into TagElement: @code(1361) at 0", "Insert VariableDeclarationStatement(1418) into Block(1645) at 2", "Update ParameterizedType: ArrayList<Integer>(928) to ArrayList<>", "Move SimpleType: SqlTypeName(1527) into VariableDeclarationStatement(1418) at 0", "Insert VariableDeclarationFragment(1417) into VariableDeclarationStatement(1418) at 1", "Insert SimpleName: typeName(1413) into VariableDeclarationFragment(1417) at 0", "Move MethodInvocation(1375) into VariableDeclarationFragment(1417) at 1", "Insert VariableDeclarationStatement(1622) into Block(1643) at 1", "Insert IfStatement(1640) into Block(1643) at 2", "Insert ReturnStatement(1642) into Block(1643) at 3", "Insert SimpleName: typeName(1482) into SwitchStatement(1611) at 0", "Insert AssertStatement(1510) into SwitchStatement(1611) at 6", "Insert AssertStatement(1561) into SwitchStatement(1611) at 13", "Insert ExpressionStatement(1590) into SwitchStatement(1611) at 16", "Insert ExpressionStatement(1610) into SwitchStatement(1611) at 18", "Insert Modifier: final(1612) into VariableDeclarationStatement(1622) at 0", "Insert SimpleType: RexLiteral(1614) into VariableDeclarationStatement(1622) at 1", "Insert VariableDeclarationFragment(1621) into VariableDeclarationStatement(1622) at 2", "Insert InfixExpression: &&(1633) into IfStatement(1640) at 0", "Insert Block(1639) into IfStatement(1640) at 1", "Insert SimpleName: literal2(1641) into ReturnStatement(1642) at 0", "Insert InstanceofExpression(1509) into AssertStatement(1510) at 0", "Insert InstanceofExpression(1560) into AssertStatement(1561) at 0", "Insert Assignment: =(1589) into ExpressionStatement(1590) at 0", "Insert Assignment: =(1609) into ExpressionStatement(1610) at 0", "Insert SimpleName: RexLiteral(1613) into SimpleType: RexLiteral(1614) at 0", "Insert SimpleName: literal2(1615) into VariableDeclarationFragment(1621) at 0", "Insert MethodInvocation(1620) into VariableDeclarationFragment(1621) at 1", "Insert MethodInvocation(1625) into InfixExpression: &&(1633) at 0", "Insert PrefixExpression: !(1631) into InfixExpression: &&(1633) at 1", "Insert SimpleName: matchNullability(1632) into InfixExpression: &&(1633) at 2", "Insert ReturnStatement(1638) into Block(1639) at 0", "Insert SimpleName: typeName(1428) into InfixExpression: ==(1429) at 1", "Insert SimpleName: value(1506) into InstanceofExpression(1509) at 0", "Insert SimpleType: Calendar(1508) into InstanceofExpression(1509) at 1", "Insert SimpleName: value(1557) into InstanceofExpression(1560) at 0", "Insert SimpleType: BigDecimal(1559) into InstanceofExpression(1560) at 1", "Insert SimpleName: typeName(1585) into Assignment: =(1589) at 0", "Move MethodInvocation(1531) into Assignment: =(1589) at 1", "Insert SimpleName: value(1599) into Assignment: =(1609) at 0", "Move MethodInvocation(1551) into Assignment: =(1609) at 1", "Move SimpleName: makeLiteral(1557) into MethodInvocation(1620) at 0", "Move SimpleName: value(1558) into MethodInvocation(1620) at 1", "Move SimpleName: type(1559) into MethodInvocation(1620) at 2", "Insert SimpleName: typeName(1619) into MethodInvocation(1620) at 3", "Insert SimpleName: type(1623) into MethodInvocation(1625) at 0", "Insert SimpleName: isNullable(1624) into MethodInvocation(1625) at 1", "Insert MethodInvocation(1630) into PrefixExpression: !(1631) at 0", "Insert MethodInvocation(1637) into ReturnStatement(1638) at 0", "Update SimpleName: getTypeName(1382) to typeName", "Move SimpleName: getTypeName(1382) into MethodInvocation(1435) at 2", "Insert SimpleName: Calendar(1507) into SimpleType: Calendar(1508) at 0", "Insert SimpleName: BigDecimal(1558) into SimpleType: BigDecimal(1559) at 0", "Move MethodInvocation(1562) into MethodInvocation(1630) at 0", "Insert SimpleName: isNullable(1629) into MethodInvocation(1630) at 1", "Insert SimpleName: makeAbstractCast(1634) into MethodInvocation(1637) at 0", "Insert SimpleName: type(1635) into MethodInvocation(1637) at 1", "Insert SimpleName: literal2(1636) into MethodInvocation(1637) at 2", "Update SimpleName: literal(1560) to literal2", "Update SimpleName: getTypeName(1561) to getType", "Delete SimpleName: Integer(926)", "Delete SimpleType: Integer(927)", "Delete SimpleName: literal(1381)", "Delete MethodInvocation(1383)", "Delete SimpleName: literal(1431)", "Delete SimpleName: getTypeName(1432)", "Delete MethodInvocation(1433)", "Delete SimpleName: typeName(1528)", "Delete VariableDeclarationFragment(1532)", "Delete VariableDeclarationStatement(1533)", "Delete SimpleName: makeLiteral(1542)", "Delete SimpleName: type(1552)", "Delete SimpleName: typeName(1553)", "Delete MethodInvocation(1554)", "Delete ReturnStatement(1555)", "Delete MethodInvocation(1563)", "Delete ReturnStatement(1564)"]}}, {"ReduceExpressionsRule_cluster": {"actions": [{"root": "INS BooleanLiteral: true to MethodInvocation at 4", "operations": ["INS BooleanLiteral: true to MethodInvocation at 4"]}]}}, {"ReduceExpressionsRule_diff": {"operations": ["Insert BooleanLiteral: true(2068) into MethodInvocation(2069) at 4"]}}], "commit_stats": [{"total_files": 4, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}