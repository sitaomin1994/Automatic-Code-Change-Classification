{"application": "apache-phoenix", "csha": "5330c0794e143014f5bd67114e3fc87c53015789", "files": [{"SortOrderIT_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 2", "operations": ["INS QualifiedName: org.junit.Assert.assertEquals to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 2"]}, {"root": "INS ImportDeclaration to CompilationUnit at 12", "operations": ["INS QualifiedName: java.sql.SQLException to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 12"]}, {"root": "INS ImportDeclaration to CompilationUnit at 13", "operations": ["INS ImportDeclaration to CompilationUnit at 13", "INS QualifiedName: java.util.ArrayList to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS ImportDeclaration to CompilationUnit at 15", "INS QualifiedName: java.util.Collections to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 20", "operations": ["INS ImportDeclaration to CompilationUnit at 20", "INS QualifiedName: org.apache.phoenix.schema.SortOrder to ImportDeclaration at 0"]}, {"root": "INS ImportDeclaration to CompilationUnit at 21", "operations": ["INS QualifiedName: org.apache.phoenix.schema.types.PDataType to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 21"]}, {"root": "INS ImportDeclaration to CompilationUnit at 22", "operations": ["INS QualifiedName: org.apache.phoenix.schema.types.PDecimal to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 22"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 41", "operations": ["INS StringLiteral: \"k2\" to MethodInvocation at 2", "INS SimpleName: ddl to VariableDeclarationFragment at 0", "INS SimpleName: select to MethodInvocation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: insertedRows to MethodInvocation at 4", "INS ArrayInitializer to ArrayCreation at 1", "INS VariableDeclarationStatement to Block at 2", "INS MethodInvocation to MethodInvocation at 3", "INS ArrayInitializer to ArrayInitializer at 1", "INS Dimension to ArrayType: Object[][] at 2", "INS SimpleName: insertedRows to VariableDeclarationFragment at 0", "INS StringLiteral: \"k1\" to MethodInvocation at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS ClassInstanceCreation to MethodInvocation at 6", "INS StringLiteral: \"baa\" to ArrayInitializer at 1", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Dimension to ArrayType: Object[][] at 1", "INS ArrayInitializer to ArrayInitializer at 5", "INS SimpleName: descVarLengthAscPKGT to MethodDeclaration at 3", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ArrayInitializer to ArrayCreation at 1", "INS NumberLiteral: 3 to ArrayInitializer at 0", "INS ExpressionStatement to Block at 3", "INS NumberLiteral: 2 to ArrayInitializer at 0", "INS StringLiteral: \"k1\" to MethodInvocation at 1", "INS NumberLiteral: 4 to ArrayInitializer at 0", "INS ArrayType: Object[][] to VariableDeclarationStatement at 0", "INS NumberLiteral: 3 to ArrayInitializer at 0", "INS Dimension to ArrayType: Object[][] at 2", "INS StringLiteral: \"a\" to ArrayInitializer at 1", "INS NumberLiteral: 6 to ArrayInitializer at 0", "INS StringLiteral: \" (k1 INTEGER NOT NULL, k2 VARCHAR, CONSTRAINT pk PRIMARY KEY (k1, k2))\" to InfixExpression: + at 2", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: WhereCondition to SimpleType: WhereCondition at 0", "INS NullLiteral to MethodInvocation at 8", "INS SimpleName: Object to SimpleType: Object at 0", "INS ArrayType: Object[][] to ArrayCreation at 0", "INS ArrayInitializer to ArrayInitializer at 6", "INS ArrayInitializer to ArrayInitializer at 0", "INS Dimension to ArrayType: Object[][] at 1", "INS NumberLiteral: 0 to ArrayInitializer at 0", "INS StringLiteral: \"CREATE TABLE \" to InfixExpression: + at 0", "INS NullLiteral to ArrayInitializer at 1", "INS NumberLiteral: 6 to ArrayInitializer at 0", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS SimpleName: String to SimpleType: String at 0", "INS StringLiteral: \"c\" to ArrayInitializer at 1", "INS SimpleName: Test to MarkerAnnotation at 0", "INS SimpleName: ddl to MethodInvocation at 1", "INS SimpleName: upsert to MethodInvocation at 0", "INS NumberLiteral: 4 to ArrayInitializer at 0", "INS Dimension to ArrayType: Object[][] at 2", "INS NullLiteral to MethodInvocation at 7", "INS ArrayInitializer to ArrayInitializer at 2", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS StringLiteral: \"b\" to ArrayInitializer at 1", "INS NumberLiteral: 1 to ArrayInitializer at 0", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: runQueryTest to MethodInvocation at 0", "INS SimpleType: WhereCondition to ClassInstanceCreation at 0", "INS StringLiteral: \">\" to ClassInstanceCreation at 2", "INS ArrayInitializer to ArrayInitializer at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS StringLiteral: \"ba\" to ArrayInitializer at 1", "INS SimpleType: Exception to MethodDeclaration at 4", "INS SimpleName: Object to SimpleType: Object at 0", "INS ArrayInitializer to ArrayInitializer at 3", "INS ArrayInitializer to ArrayInitializer at 4", "INS Modifier: public to MethodDeclaration at 1", "INS Block to MethodDeclaration at 5", "INS MethodDeclaration to TypeDeclaration: class at 41", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS StringLiteral: \"k2\" to ClassInstanceCreation at 1", "INS SimpleName: expectedRows to VariableDeclarationFragment at 0", "INS StringLiteral: \"'b'\" to ClassInstanceCreation at 3", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS SimpleName: TABLE to InfixExpression: + at 1", "INS NumberLiteral: 5 to ArrayInitializer at 0", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS Dimension to ArrayType: Object[][] at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS ArrayType: Object[][] to VariableDeclarationStatement at 0", "INS VariableDeclarationStatement to Block at 0", "INS ArrayInitializer to ArrayInitializer at 3", "INS ArrayInitializer to ArrayInitializer at 0", "INS NumberLiteral: 5 to ArrayInitializer at 0", "INS Dimension to ArrayType: Object[][] at 2", "INS ArrayInitializer to ArrayInitializer at 2", "INS SimpleName: Object to SimpleType: Object at 0", "INS StringLiteral: \"d\" to ArrayInitializer at 1", "INS ArrayType: Object[][] to ArrayCreation at 0", "INS SimpleName: expectedRows to MethodInvocation at 5", "INS Dimension to ArrayType: Object[][] at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 42", "operations": ["INS ArrayInitializer to ArrayInitializer at 0", "INS SimpleName: Test to MarkerAnnotation at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS ExpressionStatement to Block at 3", "INS NumberLiteral: 6 to ArrayInitializer at 0", "INS ArrayInitializer to ArrayInitializer at 1", "INS Dimension to ArrayType: Object[][] at 1", "INS ClassInstanceCreation to MethodInvocation at 6", "INS ArrayInitializer to ArrayInitializer at 0", "INS ArrayType: Object[][] to ArrayCreation at 0", "INS SimpleName: WhereCondition to SimpleType: WhereCondition at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS NumberLiteral: 2 to ArrayInitializer at 0", "INS ArrayInitializer to ArrayInitializer at 2", "INS NumberLiteral: 0 to ArrayInitializer at 0", "INS SimpleName: insertedRows to VariableDeclarationFragment at 0", "INS Dimension to ArrayType: Object[][] at 1", "INS StringLiteral: \"c\" to ArrayInitializer at 1", "INS StringLiteral: \"ba\" to ArrayInitializer at 1", "INS StringLiteral: \"baa\" to ArrayInitializer at 1", "INS Block to MethodDeclaration at 5", "INS NumberLiteral: 4 to ArrayInitializer at 0", "INS SimpleName: expectedRows to VariableDeclarationFragment at 0", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS Dimension to ArrayType: Object[][] at 1", "INS StringLiteral: \"d\" to ArrayInitializer at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS StringLiteral: \"'b'\" to ClassInstanceCreation at 3", "INS NumberLiteral: 3 to ArrayInitializer at 0", "INS VariableDeclarationStatement to Block at 0", "INS NumberLiteral: 1 to ArrayInitializer at 0", "INS Dimension to ArrayType: Object[][] at 2", "INS Dimension to ArrayType: Object[][] at 2", "INS Dimension to ArrayType: Object[][] at 2", "INS ArrayInitializer to ArrayInitializer at 3", "INS MethodInvocation to MethodInvocation at 3", "INS ArrayInitializer to ArrayInitializer at 5", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS MethodDeclaration to TypeDeclaration: class at 42", "INS ArrayInitializer to ArrayInitializer at 1", "INS StringLiteral: \"k2\" to ClassInstanceCreation at 1", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS ArrayInitializer to ArrayInitializer at 6", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS StringLiteral: \"k1\" to MethodInvocation at 1", "INS SimpleType: WhereCondition to ClassInstanceCreation at 0", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS SimpleName: ddl to VariableDeclarationFragment at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Dimension to ArrayType: Object[][] at 2", "INS NumberLiteral: 3 to ArrayInitializer at 0", "INS StringLiteral: \" (k1 INTEGER NOT NULL, k2 VARCHAR, CONSTRAINT pk PRIMARY KEY (k1, k2 desc))\" to InfixExpression: + at 2", "INS ArrayType: Object[][] to VariableDeclarationStatement at 0", "INS NullLiteral to MethodInvocation at 7", "INS NumberLiteral: 4 to ArrayInitializer at 0", "INS VariableDeclarationStatement to Block at 2", "INS StringLiteral: \"k1\" to MethodInvocation at 1", "INS SimpleName: descVarLengthDescPKGT to MethodDeclaration at 3", "INS SimpleName: ddl to MethodInvocation at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS ArrayType: Object[][] to VariableDeclarationStatement at 0", "INS NumberLiteral: 6 to ArrayInitializer at 0", "INS SimpleName: upsert to MethodInvocation at 0", "INS ArrayInitializer to ArrayCreation at 1", "INS NumberLiteral: 5 to ArrayInitializer at 0", "INS ArrayInitializer to ArrayInitializer at 4", "INS ArrayInitializer to ArrayInitializer at 3", "INS SimpleName: runQueryTest to MethodInvocation at 0", "INS SimpleName: select to MethodInvocation at 0", "INS StringLiteral: \"k2\" to MethodInvocation at 2", "INS Modifier: public to MethodDeclaration at 1", "INS NullLiteral to ArrayInitializer at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS NumberLiteral: 5 to ArrayInitializer at 0", "INS StringLiteral: \"CREATE TABLE \" to InfixExpression: + at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS StringLiteral: \">\" to ClassInstanceCreation at 2", "INS StringLiteral: \"a\" to ArrayInitializer at 1", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleName: TABLE to InfixExpression: + at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS Dimension to ArrayType: Object[][] at 1", "INS SimpleName: insertedRows to MethodInvocation at 4", "INS ArrayInitializer to ArrayInitializer at 2", "INS ArrayType: Object[][] to ArrayCreation at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: expectedRows to MethodInvocation at 5", "INS NullLiteral to MethodInvocation at 8", "INS ArrayInitializer to ArrayCreation at 1", "INS StringLiteral: \"b\" to ArrayInitializer at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 43", "operations": ["INS SimpleName: expectedRows to MethodInvocation at 5", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS ArrayInitializer to ArrayInitializer at 5", "INS ArrayInitializer to ArrayInitializer at 3", "INS Dimension to ArrayType: Object[][] at 1", "INS ArrayInitializer to ArrayInitializer at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS StringLiteral: \"'bb'\" to ClassInstanceCreation at 3", "INS Dimension to ArrayType: Object[][] at 2", "INS Block to MethodDeclaration at 5", "INS Dimension to ArrayType: Object[][] at 2", "INS SimpleName: descVarLengthDescPKLTE to MethodDeclaration at 3", "INS NumberLiteral: 1 to ArrayInitializer at 0", "INS SimpleName: runQueryTest to MethodInvocation at 0", "INS Dimension to ArrayType: Object[][] at 2", "INS SimpleName: Object to SimpleType: Object at 0", "INS Modifier: public to MethodDeclaration at 1", "INS StringLiteral: \"bb\" to ArrayInitializer at 1", "INS Dimension to ArrayType: Object[][] at 2", "INS NumberLiteral: 4 to ArrayInitializer at 0", "INS StringLiteral: \"bc\" to ArrayInitializer at 1", "INS SimpleType: Exception to MethodDeclaration at 4", "INS StringLiteral: \"bba\" to ArrayInitializer at 1", "INS MethodInvocation to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: insertedRows to MethodInvocation at 4", "INS SimpleName: Object to SimpleType: Object at 0", "INS ArrayInitializer to ArrayInitializer at 1", "INS NumberLiteral: 1 to ArrayInitializer at 0", "INS SimpleName: ddl to MethodInvocation at 1", "INS ArrayInitializer to ArrayInitializer at 0", "INS Dimension to ArrayType: Object[][] at 1", "INS ArrayInitializer to ArrayInitializer at 0", "INS ArrayType: Object[][] to VariableDeclarationStatement at 0", "INS SimpleName: insertedRows to VariableDeclarationFragment at 0", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS NumberLiteral: 6 to ArrayInitializer at 0", "INS MethodDeclaration to TypeDeclaration: class at 43", "INS ArrayInitializer to ArrayCreation at 1", "INS StringLiteral: \"k2\" to ClassInstanceCreation at 1", "INS ArrayInitializer to ArrayInitializer at 2", "INS VariableDeclarationStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Test to MarkerAnnotation at 0", "INS StringLiteral: \" (k1 INTEGER NOT NULL, k2 VARCHAR, CONSTRAINT pk PRIMARY KEY (k1, k2 desc))\" to InfixExpression: + at 2", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS StringLiteral: \"CREATE TABLE \" to InfixExpression: + at 0", "INS ArrayType: Object[][] to ArrayCreation at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS StringLiteral: \"k2\" to MethodInvocation at 2", "INS SimpleName: Object to SimpleType: Object at 0", "INS NullLiteral to MethodInvocation at 7", "INS ArrayInitializer to ArrayInitializer at 2", "INS NumberLiteral: 2 to ArrayInitializer at 0", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS ArrayType: Object[][] to ArrayCreation at 0", "INS ArrayInitializer to ArrayInitializer at 3", "INS ArrayInitializer to ArrayCreation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ClassInstanceCreation to MethodInvocation at 6", "INS NumberLiteral: 5 to ArrayInitializer at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: select to MethodInvocation at 0", "INS NumberLiteral: 3 to ArrayInitializer at 0", "INS ArrayType: Object[][] to VariableDeclarationStatement at 0", "INS SimpleName: ddl to VariableDeclarationFragment at 0", "INS SimpleName: upsert to MethodInvocation at 0", "INS SimpleName: WhereCondition to SimpleType: WhereCondition at 0", "INS MethodInvocation to MethodInvocation at 3", "INS NullLiteral to MethodInvocation at 8", "INS SimpleType: WhereCondition to ClassInstanceCreation at 0", "INS StringLiteral: \"<=\" to ClassInstanceCreation at 2", "INS VariableDeclarationStatement to Block at 2", "INS StringLiteral: \"k1\" to MethodInvocation at 1", "INS StringLiteral: \"b\" to ArrayInitializer at 1", "INS StringLiteral: \"ba\" to ArrayInitializer at 1", "INS StringLiteral: \"a\" to ArrayInitializer at 1", "INS NumberLiteral: 3 to ArrayInitializer at 0", "INS NumberLiteral: 4 to ArrayInitializer at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS StringLiteral: \"c\" to ArrayInitializer at 1", "INS ArrayInitializer to ArrayInitializer at 4", "INS NumberLiteral: 2 to ArrayInitializer at 0", "INS Dimension to ArrayType: Object[][] at 1", "INS Dimension to ArrayType: Object[][] at 1", "INS ArrayInitializer to ArrayInitializer at 7", "INS NumberLiteral: 7 to ArrayInitializer at 0", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS NumberLiteral: 0 to ArrayInitializer at 0", "INS SimpleName: TABLE to InfixExpression: + at 1", "INS ArrayInitializer to ArrayInitializer at 6", "INS PrimitiveType: void to MethodDeclaration at 2", "INS NullLiteral to ArrayInitializer at 1", "INS ExpressionStatement to Block at 3", "INS StringLiteral: \"k1\" to MethodInvocation at 1", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS SimpleName: expectedRows to VariableDeclarationFragment at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 44", "operations": ["INS Modifier: public to MethodDeclaration at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS VariableDeclarationStatement to Block at 2", "INS SimpleName: descVarLengthAscPKLTE to MethodDeclaration at 3", "INS SimpleName: WhereCondition to SimpleType: WhereCondition at 0", "INS ArrayType: Object[][] to VariableDeclarationStatement at 0", "INS SimpleName: expectedRows to MethodInvocation at 5", "INS VariableDeclarationStatement to Block at 1", "INS NullLiteral to MethodInvocation at 8", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS NumberLiteral: 4 to ArrayInitializer at 0", "INS ArrayType: Object[][] to ArrayCreation at 0", "INS StringLiteral: \"k1\" to MethodInvocation at 1", "INS StringLiteral: \"k1\" to MethodInvocation at 1", "INS ArrayInitializer to ArrayInitializer at 7", "INS ArrayInitializer to ArrayInitializer at 2", "INS NumberLiteral: 2 to ArrayInitializer at 0", "INS Dimension to ArrayType: Object[][] at 2", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS Dimension to ArrayType: Object[][] at 1", "INS ArrayInitializer to ArrayInitializer at 1", "INS SimpleName: ddl to VariableDeclarationFragment at 0", "INS ArrayInitializer to ArrayInitializer at 0", "INS SimpleName: Test to MarkerAnnotation at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS ArrayInitializer to ArrayInitializer at 3", "INS SimpleName: TABLE to InfixExpression: + at 1", "INS Dimension to ArrayType: Object[][] at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS ExpressionStatement to Block at 3", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS VariableDeclarationStatement to Block at 0", "INS NumberLiteral: 1 to ArrayInitializer at 0", "INS SimpleName: expectedRows to VariableDeclarationFragment at 0", "INS Dimension to ArrayType: Object[][] at 1", "INS NullLiteral to ArrayInitializer at 1", "INS MethodDeclaration to TypeDeclaration: class at 44", "INS NumberLiteral: 1 to ArrayInitializer at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS StringLiteral: \"k2\" to ClassInstanceCreation at 1", "INS SimpleName: runQueryTest to MethodInvocation at 0", "INS StringLiteral: \"<=\" to ClassInstanceCreation at 2", "INS SimpleName: Object to SimpleType: Object at 0", "INS ArrayType: Object[][] to VariableDeclarationStatement at 0", "INS Dimension to ArrayType: Object[][] at 2", "INS ArrayInitializer to ArrayInitializer at 2", "INS NumberLiteral: 4 to ArrayInitializer at 0", "INS NullLiteral to MethodInvocation at 7", "INS ArrayInitializer to ArrayCreation at 1", "INS ClassInstanceCreation to MethodInvocation at 6", "INS SimpleName: select to MethodInvocation at 0", "INS Dimension to ArrayType: Object[][] at 2", "INS StringLiteral: \"bb\" to ArrayInitializer at 1", "INS StringLiteral: \"ba\" to ArrayInitializer at 1", "INS SimpleType: WhereCondition to ClassInstanceCreation at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS PrimitiveType: void to MethodDeclaration at 2", "INS StringLiteral: \"'bb'\" to ClassInstanceCreation at 3", "INS SimpleName: insertedRows to VariableDeclarationFragment at 0", "INS Dimension to ArrayType: Object[][] at 2", "INS NumberLiteral: 0 to ArrayInitializer at 0", "INS StringLiteral: \"bba\" to ArrayInitializer at 1", "INS ArrayInitializer to ArrayInitializer at 3", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS StringLiteral: \"bc\" to ArrayInitializer at 1", "INS SimpleName: Object to SimpleType: Object at 0", "INS StringLiteral: \" (k1 INTEGER NOT NULL, k2 VARCHAR, CONSTRAINT pk PRIMARY KEY (k1, k2))\" to InfixExpression: + at 2", "INS SimpleType: Object to ArrayType: Object[][] at 0", "INS NumberLiteral: 2 to ArrayInitializer at 0", "INS NumberLiteral: 6 to ArrayInitializer at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: Object to SimpleType: Object at 0", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS StringLiteral: \"b\" to ArrayInitializer at 1", "INS ArrayInitializer to ArrayInitializer at 1", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to MethodInvocation at 2", "INS ArrayInitializer to ArrayInitializer at 5", "INS MethodInvocation to ExpressionStatement at 0", "INS Dimension to ArrayType: Object[][] at 1", "INS StringLiteral: \"c\" to ArrayInitializer at 1", "INS SimpleName: ddl to MethodInvocation at 1", "INS NumberLiteral: 3 to ArrayInitializer at 0", "INS StringLiteral: \"a\" to ArrayInitializer at 1", "INS ArrayInitializer to ArrayInitializer at 6", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS ArrayInitializer to ArrayCreation at 1", "INS NumberLiteral: 5 to ArrayInitializer at 0", "INS SimpleName: String to SimpleType: String at 0", "INS NumberLiteral: 7 to ArrayInitializer at 0", "INS ArrayInitializer to ArrayInitializer at 4", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: upsert to MethodInvocation at 0", "INS SimpleName: insertedRows to MethodInvocation at 4", "INS StringLiteral: \"k2\" to MethodInvocation at 2", "INS ArrayType: Object[][] to ArrayCreation at 0", "INS NumberLiteral: 3 to ArrayInitializer at 0", "INS ArrayInitializer to ArrayInitializer at 0", "INS StringLiteral: \"CREATE TABLE \" to InfixExpression: + at 0", "INS ArrayCreation to VariableDeclarationFragment at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 45", "operations": ["INS NumberLiteral: 3 to ArrayInitializer at 1", "INS EnhancedForStatement to Block at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS SimpleName: expectedResults to VariableDeclarationFragment at 0", "INS ArrayInitializer to ArrayCreation at 1", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: dataType to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS ArrayType: Integer[] to ArrayCreation at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleType: PDataType to ArrayType: PDataType[] at 0", "INS SimpleName: expectedResults to MethodInvocation at 5", "INS StringLiteral: \"\" to MethodInvocation at 6", "INS ParameterizedType: List<Integer> to VariableDeclarationStatement at 0", "INS SimpleName: dataTypes to EnhancedForStatement at 1", "INS SimpleName: testCompareCompositeKey to MethodInvocation at 0", "INS Dimension to ArrayType: PDataType[] at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS MethodDeclaration to TypeDeclaration: class at 45", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: SortOrder to SingleVariableDeclaration at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS ArrayType: PDataType[] to ArrayCreation at 0", "INS Block to EnhancedForStatement at 2", "INS NumberLiteral: 2 to MethodInvocation at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: Lists to MethodInvocation at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS Dimension to ArrayType: PDataType[] at 1", "INS Block to EnhancedForStatement at 2", "INS Modifier: public to MethodDeclaration at 1", "INS SimpleName: PDataType to SimpleType: PDataType at 0", "INS SimpleName: values to MethodInvocation at 1", "INS NumberLiteral: 3 to MethodInvocation at 3", "INS Dimension to ArrayType: Integer[] at 1", "INS SimpleType: List to ParameterizedType: List<Integer> at 0", "INS ArrayInitializer to ArrayCreation at 1", "INS ArrayType: Integer[] to VariableDeclarationStatement at 0", "INS EnhancedForStatement to Block at 3", "INS SimpleName: saltBuckets to EnhancedForStatement at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleName: sortOrder to SingleVariableDeclaration at 1", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS SimpleType: PDataType to ArrayType: PDataType[] at 0", "INS SimpleType: PDataType to SingleVariableDeclaration at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS Block to MethodDeclaration at 5", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS ArrayType: PDataType[] to VariableDeclarationStatement at 0", "INS SimpleName: PDataType to SimpleType: PDataType at 0", "INS SimpleName: testNonPKCompare to MethodDeclaration at 3", "INS StringLiteral: \"\" to MethodInvocation at 4", "INS ExpressionStatement to Block at 0", "INS SimpleName: sortOrder to MethodInvocation at 3", "INS SimpleName: dataType to MethodInvocation at 2", "INS SimpleType: Integer to ArrayType: Integer[] at 0", "INS NullLiteral to ArrayInitializer at 0", "INS MethodInvocation to EnhancedForStatement at 1", "INS SimpleType: Integer to ArrayType: Integer[] at 0", "INS SimpleName: dataTypes to VariableDeclarationFragment at 0", "INS SimpleName: PDataType to SimpleType: PDataType at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: Integer to ParameterizedType: List<Integer> at 1", "INS EnhancedForStatement to Block at 0", "INS SimpleName: SortOrder to MethodInvocation at 0", "INS Dimension to ArrayType: Integer[] at 1", "INS SimpleName: List to SimpleType: List at 0", "INS SimpleName: SortOrder to SimpleType: SortOrder at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS NumberLiteral: 4 to MethodInvocation at 4", "INS SimpleName: saltBuckets to VariableDeclarationFragment at 0", "INS SimpleName: saltBucket to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 2", "INS QualifiedName: PDecimal.INSTANCE to ArrayInitializer at 0", "INS SimpleName: Test to MarkerAnnotation at 0", "INS SimpleName: saltBucket to SingleVariableDeclaration at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 46", "operations": ["INS SimpleType: ArrayList to ParameterizedType: ArrayList<> at 0", "INS NumberLiteral: 3 to ArrayInitializer at 1", "INS StringLiteral: \"k1 in (2,4)\" to MethodInvocation at 4", "INS SimpleName: SortOrder to MethodInvocation at 0", "INS ArrayInitializer to ArrayCreation at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS StringLiteral: \"\" to MethodInvocation at 6", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: Test to MarkerAnnotation at 0", "INS ParameterizedType: List<Integer> to VariableDeclarationStatement at 0", "INS Block to MethodDeclaration at 5", "INS QualifiedName: PDecimal.INSTANCE to ArrayInitializer at 0", "INS SimpleName: List to SimpleType: List at 0", "INS StringLiteral: \"ORDER BY k1 DESC\" to MethodInvocation at 6", "INS SimpleType: PDataType to ArrayType: PDataType[] at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: expectedResults to VariableDeclarationFragment at 0", "INS Dimension to ArrayType: PDataType[] at 1", "INS SimpleName: sortOrder to MethodInvocation at 3", "INS SimpleType: Integer to ArrayType: Integer[] at 0", "INS SimpleName: values to MethodInvocation at 1", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: ArrayList to SimpleType: ArrayList at 0", "INS SimpleName: newArrayList to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to EnhancedForStatement at 2", "INS SimpleName: dataType to MethodInvocation at 2", "INS SimpleName: rExpectedResults to VariableDeclarationFragment at 0", "INS SimpleName: saltBucket to MethodInvocation at 1", "INS MethodInvocation to EnhancedForStatement at 1", "INS NumberLiteral: 4 to MethodInvocation at 3", "INS SimpleType: Integer to ArrayType: Integer[] at 0", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: saltBucket to SingleVariableDeclaration at 1", "INS SimpleType: PDataType to SingleVariableDeclaration at 0", "INS SimpleName: dataTypes to VariableDeclarationFragment at 0", "INS SimpleType: Exception to MethodDeclaration at 4", "INS ExpressionStatement to Block at 2", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Dimension to ArrayType: PDataType[] at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS EnhancedForStatement to Block at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS MethodDeclaration to TypeDeclaration: class at 46", "INS Block to EnhancedForStatement at 2", "INS SimpleName: testSkipScanCompare to MethodDeclaration at 3", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: Lists to MethodInvocation at 0", "INS StringLiteral: \"k1 in (2,4)\" to MethodInvocation at 4", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS Modifier: public to MethodDeclaration at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleType: PDataType to ArrayType: PDataType[] at 0", "INS SimpleName: PDataType to SimpleType: PDataType at 0", "INS SimpleName: saltBuckets to VariableDeclarationFragment at 0", "INS ArrayType: PDataType[] to VariableDeclarationStatement at 0", "INS ArrayCreation to VariableDeclarationFragment at 1", "INS SimpleName: testCompareCompositeKey to MethodInvocation at 0", "INS SimpleName: dataType to SingleVariableDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: dataType to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 4", "INS SimpleName: Collections to MethodInvocation at 0", "INS SimpleName: PDataType to SimpleType: PDataType at 0", "INS ParameterizedType: List<Integer> to VariableDeclarationStatement at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleType: Integer to ParameterizedType: List<Integer> at 1", "INS SimpleType: List to ParameterizedType: List<Integer> at 0", "INS ArrayType: Integer[] to VariableDeclarationStatement at 0", "INS EnhancedForStatement to Block at 0", "INS SimpleType: Integer to ParameterizedType: List<Integer> at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: dataTypes to EnhancedForStatement at 1", "INS ArrayType: PDataType[] to ArrayCreation at 0", "INS NullLiteral to ArrayInitializer at 0", "INS SimpleName: Exception to SimpleType: Exception at 0", "INS VariableDeclarationStatement to Block at 1", "INS MarkerAnnotation to MethodDeclaration at 0", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: PDataType to SimpleType: PDataType at 0", "INS SimpleName: sortOrder to MethodInvocation at 3", "INS ParameterizedType: ArrayList<> to ClassInstanceCreation at 0", "INS NumberLiteral: 2 to MethodInvocation at 2", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS Dimension to ArrayType: Integer[] at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: sortOrder to SingleVariableDeclaration at 1", "INS EnhancedForStatement to Block at 5", "INS ArrayType: Integer[] to ArrayCreation at 0", "INS SimpleName: reverse to MethodInvocation at 1", "INS SimpleName: rExpectedResults to MethodInvocation at 2", "INS SimpleType: SortOrder to SingleVariableDeclaration at 0", "INS PrimitiveType: void to MethodDeclaration at 2", "INS ExpressionStatement to Block at 1", "INS SimpleName: testCompareCompositeKey to MethodInvocation at 0", "INS ArrayInitializer to ArrayCreation at 1", "INS SimpleName: List to SimpleType: List at 0", "INS Block to EnhancedForStatement at 2", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS VariableDeclarationStatement to Block at 3", "INS SimpleName: saltBucket to MethodInvocation at 1", "INS SimpleName: expectedResults to MethodInvocation at 5", "INS SimpleName: saltBuckets to EnhancedForStatement at 1", "INS SimpleName: rExpectedResults to MethodInvocation at 5", "INS SimpleName: SortOrder to SimpleType: SortOrder at 0", "INS Dimension to ArrayType: Integer[] at 1", "INS SimpleType: List to ParameterizedType: List<Integer> at 0", "INS SimpleName: expectedResults to ClassInstanceCreation at 1"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 47", "operations": ["INS StringLiteral: \"upsert into \" to InfixExpression: + at 0", "INS SimpleName: rs to MethodInvocation at 0", "INS StringLiteral: \" values (4, 1.001)\" to InfixExpression: + at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: SQLException to SimpleType: SQLException at 0", "INS SimpleName: createStatement to MethodInvocation at 1", "INS SimpleName: tableName to InfixExpression: + at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: createStatement to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: saltBuckets to InfixExpression: + at 1", "INS SimpleName: length to MethodInvocation at 1", "INS SimpleName: query to VariableDeclarationFragment at 0", "INS SimpleName: PDataType to SimpleType: PDataType at 0", "INS SimpleName: conn to VariableDeclarationFragment at 0", "INS SimpleName: rs to MethodInvocation at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS ExpressionStatement to Block at 0", "INS SimpleName: executeQuery to MethodInvocation at 1", "INS SimpleName: ddl to MethodInvocation at 2", "INS SimpleName: tableName to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \" where \" to InfixExpression: + at 2", "INS StringLiteral: \"upsert into \" to InfixExpression: + at 0", "INS StringLiteral: \"upsert into \" to InfixExpression: + at 0", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS InfixExpression: + to ParenthesizedExpression at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \" AND \" to InfixExpression: + at 1", "INS ConditionalExpression to ParenthesizedExpression at 0", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: next to MethodInvocation at 1", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS SimpleName: execute to MethodInvocation at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: assertTrue to MethodInvocation at 0", "INS ExpressionStatement to Block at 6", "INS SimpleName: expectedResults to EnhancedForStatement at 1", "INS SimpleName: whereClause to SingleVariableDeclaration at 1", "INS SimpleType: SQLException to MethodDeclaration at 9", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: SortOrder to SimpleType: SortOrder at 0", "INS SimpleName: execute to MethodInvocation at 1", "INS SimpleName: orderBy to MethodInvocation at 0", "INS SimpleName: conn to MethodInvocation at 0", "INS StringLiteral: \"\" to ConditionalExpression at 2", "INS StringLiteral: \", constraint pk primary key (k1,k2 \" to InfixExpression: + at 5", "INS SimpleName: String to SimpleType: String at 0", "INS MethodInvocation to InfixExpression: > at 0", "INS SimpleName: saltBuckets to InfixExpression: + at 1", "INS StringLiteral: \"\" to ConditionalExpression at 1", "INS SimpleName: conn to MethodInvocation at 0", "INS ParenthesizedExpression to InfixExpression: + at 3", "INS SimpleName: TEST_PROPERTIES to MethodInvocation at 2", "INS SimpleName: createStatement to MethodInvocation at 1", "INS ExpressionStatement to Block at 2", "INS MethodInvocation to MethodInvocation at 2", "INS StringLiteral: \"_\" to InfixExpression: + at 2", "INS SimpleName: ResultSet to SimpleType: ResultSet at 0", "INS Block to TryStatement at 0", "INS SimpleName: PropertiesUtil to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS MethodInvocation to MethodInvocation at 0", "INS PrimitiveType: void to MethodDeclaration at 1", "INS SimpleName: sortOrder to InfixExpression: + at 5", "INS NumberLiteral: 1 to MethodInvocation at 2", "INS ParenthesizedExpression to InfixExpression: + at 4", "INS MethodInvocation to PrefixExpression: ! at 0", "INS SimpleType: Integer to ParameterizedType: List<Integer> at 1", "INS SimpleName: conn to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: tableName to MethodInvocation at 1", "INS SingleVariableDeclaration to MethodDeclaration at 3", "INS InfixExpression: + to MethodInvocation at 2", "INS NumberLiteral: 0 to InfixExpression: > at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: ddl to VariableDeclarationFragment at 0", "INS StringLiteral: \"select k1 from \" to InfixExpression: + at 0", "INS StringLiteral: \"\" to ConditionalExpression at 2", "INS ParenthesizedExpression to ConditionalExpression at 1", "INS SimpleType: PDataType to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 7", "INS StringLiteral: \" (k1 bigint not null, k2 \" to InfixExpression: + at 2", "INS MethodInvocation to MethodInvocation at 0", "INS StringLiteral: \" k2>1.0 \" to InfixExpression: + at 4", "INS MethodInvocation to ExpressionStatement at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS VariableDeclarationStatement to Block at 0", "INS StringLiteral: \"))\" to InfixExpression: + at 7", "INS Block to TryStatement at 1", "INS SimpleName: getInt to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: whereClause to MethodInvocation at 0", "INS PrimitiveType: int to SingleVariableDeclaration at 0", "INS ParenthesizedExpression to ConditionalExpression at 2", "INS SimpleName: assertEquals to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: Integer to SingleVariableDeclaration at 0", "INS SimpleName: execute to MethodInvocation at 1", "INS SimpleName: conn to MethodInvocation at 0", "INS MethodInvocation to ExpressionStatement at 0", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleName: k to SingleVariableDeclaration at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS StringLiteral: \"\" to ConditionalExpression at 1", "INS VariableDeclarationStatement to Block at 0", "INS ConditionalExpression to ParenthesizedExpression at 0", "INS SimpleName: rs to MethodInvocation at 0", "INS SimpleName: createStatement to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 47", "INS SimpleName: String to SimpleType: String at 0", "INS EnhancedForStatement to Block at 1", "INS SimpleName: DriverManager to MethodInvocation at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleName: rs to VariableDeclarationFragment at 0", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS SimpleName: whereClause to InfixExpression: + at 0", "INS SimpleName: getUrl to MethodInvocation at 0", "INS SimpleName: tableName to InfixExpression: + at 1", "INS SimpleName: dataType to MethodInvocation at 0", "INS SimpleName: commit to MethodInvocation at 1", "INS SimpleName: dataType to MethodInvocation at 0", "INS SimpleName: conn to MethodInvocation at 0", "INS SimpleName: dataType to InfixExpression: + at 3", "INS VariableDeclarationStatement to Block at 2", "INS ExpressionStatement to Block at 5", "INS ExpressionStatement to Block at 8", "INS MethodInvocation to ExpressionStatement at 0", "INS StringLiteral: \" values (2, 1.01)\" to InfixExpression: + at 2", "INS SimpleName: saltBuckets to SingleVariableDeclaration at 1", "INS InfixExpression: == to ConditionalExpression at 0", "INS MethodInvocation to MethodInvocation at 0", "INS MethodInvocation to InfixExpression: + at 3", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS StringLiteral: \" values (3, 2.0)\" to InfixExpression: + at 2", "INS InfixExpression: + to ParenthesizedExpression at 0", "INS SimpleName: String to SimpleType: String at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS Block to MethodDeclaration at 10", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS StringLiteral: \"t_\" to InfixExpression: + at 0", "INS SimpleName: tableName to InfixExpression: + at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: sortOrder to SingleVariableDeclaration at 1", "INS SimpleName: isFixedWidth to MethodInvocation at 1", "INS InfixExpression: == to ConditionalExpression at 0", "INS SimpleName: execute to MethodInvocation at 1", "INS StringLiteral: \"_\" to InfixExpression: + at 4", "INS StringLiteral: \"upsert into \" to InfixExpression: + at 0", "INS SimpleName: List to SimpleType: List at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to MethodInvocation at 0", "INS InfixExpression: + to MethodInvocation at 2", "INS SimpleName: tableName to MethodInvocation at 1", "INS MethodInvocation to InfixExpression: == at 0", "INS SimpleName: conn to MethodInvocation at 0", "INS SimpleName: dataType to MethodInvocation at 0", "INS SimpleName: orderBy to ConditionalExpression at 2", "INS SimpleName: dataType to SingleVariableDeclaration at 1", "INS SimpleName: close to MethodInvocation at 1", "INS InfixExpression: + to MethodInvocation at 2", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: conn to MethodInvocation at 0", "INS NullLiteral to InfixExpression: == at 1", "INS ConditionalExpression to ParenthesizedExpression at 0", "INS ConditionalExpression to ParenthesizedExpression at 0", "INS ParameterizedType: List<Integer> to SingleVariableDeclaration at 0", "INS ParenthesizedExpression to InfixExpression: + at 8", "INS VariableDeclarationStatement to Block at 10", "INS StringLiteral: \"create table if not exists \" to InfixExpression: + at 0", "INS SimpleName: tableName to InfixExpression: + at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: execute to MethodInvocation at 1", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS SimpleName: getConnection to MethodInvocation at 1", "INS StringLiteral: \" values (1, 0.99)\" to InfixExpression: + at 2", "INS SimpleName: createStatement to MethodInvocation at 1", "INS SimpleType: SortOrder to SingleVariableDeclaration at 0", "INS ExpressionStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: assertFalse to MethodInvocation at 0", "INS SimpleName: Connection to SimpleType: Connection at 0", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: tableName to InfixExpression: + at 1", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS ExpressionStatement to Block at 3", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS StringLiteral: \"upsert into \" to InfixExpression: + at 0", "INS SimpleType: String to SingleVariableDeclaration at 0", "INS SimpleType: ResultSet to VariableDeclarationStatement at 0", "INS SimpleName: testCompareCompositeKey to MethodDeclaration at 2", "INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: createStatement to MethodInvocation at 1", "INS SimpleName: k to MethodInvocation at 2", "INS PrefixExpression: ! to IfStatement at 0", "INS SimpleName: Integer to SimpleType: Integer at 0", "INS VariableDeclarationStatement to Block at 1", "INS SimpleType: String to VariableDeclarationStatement at 0", "INS SimpleName: deepCopy to MethodInvocation at 1", "INS SimpleType: Connection to VariableDeclarationStatement at 0", "INS SimpleName: tableName to InfixExpression: + at 1", "INS ExpressionStatement to Block at 9", "INS SimpleName: execute to MethodInvocation at 1", "INS InfixExpression: + to VariableDeclarationFragment at 1", "INS StringLiteral: \" not null\" to ConditionalExpression at 1", "INS SimpleName: length to MethodInvocation at 1", "INS SingleVariableDeclaration to EnhancedForStatement at 0", "INS SimpleName: orderBy to SingleVariableDeclaration at 1", "INS SimpleName: isFixedWidth to MethodInvocation at 1", "INS SimpleName: conn to MethodInvocation at 0", "INS SimpleName: conn to MethodInvocation at 0", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: String to SimpleType: String at 0", "INS SimpleName: tableName to VariableDeclarationFragment at 0", "INS InfixExpression: > to ConditionalExpression at 0", "INS IfStatement to Block at 4", "INS SimpleName: expectedResults to SingleVariableDeclaration at 1", "INS StringLiteral: \" values (0, null)\" to InfixExpression: + at 2", "INS Modifier: private to MethodDeclaration at 0", "INS SimpleName: sortOrder to InfixExpression: + at 6", "INS TryStatement to Block at 11", "INS ExpressionStatement to Block at 0", "INS SimpleName: next to MethodInvocation at 1", "INS ParenthesizedExpression to InfixExpression: + at 5", "INS SimpleName: saltBuckets to InfixExpression: == at 0", "INS SimpleName: query to MethodInvocation at 2", "INS Block to EnhancedForStatement at 2", "INS StringLiteral: \" SALT_BUCKETS= \" to InfixExpression: + at 0", "INS SimpleName: createStatement to MethodInvocation at 1", "INS SimpleType: List to ParameterizedType: List<Integer> at 0", "INS SimpleName: tableName to InfixExpression: + at 1", "INS MethodInvocation to ConditionalExpression at 0", "INS SimpleName: getSqlTypeName to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 0"]}, {"root": "INS IfStatement to Block at 0", "operations": ["INS IfStatement to IfStatement at 2", "INS IfStatement to Block at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: operator to MethodInvocation at 0", "INS StringLiteral: \">=\" to MethodInvocation at 2", "INS StringLiteral: \"<=\" to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: equals to MethodInvocation at 1", "INS IfStatement to IfStatement at 2", "INS MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0", "MOV IfStatement to IfStatement at 2", "MOV Block to IfStatement at 1"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0", "MOV Block to IfStatement at 1"]}, {"root": "INS MethodInvocation to IfStatement at 0", "operations": ["INS MethodInvocation to IfStatement at 0", "INS StringLiteral: \"<=\" to MethodInvocation at 2", "INS SimpleName: operator to MethodInvocation at 0", "INS SimpleName: equals to MethodInvocation at 1"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1", "INS ReturnStatement to Block at 0", "INS StringLiteral: \">=\" to ReturnStatement at 0"]}, {"root": "INS Block to IfStatement at 2", "operations": ["INS Block to IfStatement at 2"]}, {"root": "MOVE from Block", "operations": ["MOV ReturnStatement to Block at 0"]}, {"root": "DEL IfStatement", "operations": ["DEL IfStatement"]}]}}, {"SortOrderIT_diff": {"operations": ["Insert ImportDeclaration(5) into CompilationUnit(5182) at 2", "Insert ImportDeclaration(25) into CompilationUnit(5182) at 12", "Insert ImportDeclaration(27) into CompilationUnit(5182) at 13", "Insert ImportDeclaration(31) into CompilationUnit(5182) at 15", "Insert ImportDeclaration(41) into CompilationUnit(5182) at 20", "Insert ImportDeclaration(43) into CompilationUnit(5182) at 21", "Insert ImportDeclaration(45) into CompilationUnit(5182) at 22", "Insert QualifiedName: org.junit.Assert.assertEquals(4) into ImportDeclaration(5) at 0", "Insert QualifiedName: java.sql.SQLException(24) into ImportDeclaration(25) at 0", "Insert QualifiedName: java.util.ArrayList(26) into ImportDeclaration(27) at 0", "Insert QualifiedName: java.util.Collections(30) into ImportDeclaration(31) at 0", "Insert QualifiedName: org.apache.phoenix.schema.SortOrder(40) into ImportDeclaration(41) at 0", "Insert QualifiedName: org.apache.phoenix.schema.types.PDataType(42) into ImportDeclaration(43) at 0", "Insert QualifiedName: org.apache.phoenix.schema.types.PDecimal(44) into ImportDeclaration(45) at 0", "Insert MethodDeclaration(3069) into TypeDeclaration: class(5181) at 41", "Insert MethodDeclaration(3167) into TypeDeclaration: class(5181) at 42", "Insert MethodDeclaration(3268) into TypeDeclaration: class(5181) at 43", "Insert MethodDeclaration(3369) into TypeDeclaration: class(5181) at 44", "Insert MethodDeclaration(3453) into TypeDeclaration: class(5181) at 45", "Insert MethodDeclaration(3563) into TypeDeclaration: class(5181) at 46", "Insert MethodDeclaration(3800) into TypeDeclaration: class(5181) at 47", "Insert MarkerAnnotation(2973) into MethodDeclaration(3069) at 0", "Insert Modifier: public(2974) into MethodDeclaration(3069) at 1", "Insert PrimitiveType: void(2975) into MethodDeclaration(3069) at 2", "Insert SimpleName: descVarLengthAscPKGT(2976) into MethodDeclaration(3069) at 3", "Insert SimpleType: Exception(2978) into MethodDeclaration(3069) at 4", "Insert Block(3068) into MethodDeclaration(3069) at 5", "Insert MarkerAnnotation(3071) into MethodDeclaration(3167) at 0", "Insert Modifier: public(3072) into MethodDeclaration(3167) at 1", "Insert PrimitiveType: void(3073) into MethodDeclaration(3167) at 2", "Insert SimpleName: descVarLengthDescPKGT(3074) into MethodDeclaration(3167) at 3", "Insert SimpleType: Exception(3076) into MethodDeclaration(3167) at 4", "Insert Block(3166) into MethodDeclaration(3167) at 5", "Insert MarkerAnnotation(3169) into MethodDeclaration(3268) at 0", "Insert Modifier: public(3170) into MethodDeclaration(3268) at 1", "Insert PrimitiveType: void(3171) into MethodDeclaration(3268) at 2", "Insert SimpleName: descVarLengthDescPKLTE(3172) into MethodDeclaration(3268) at 3", "Insert SimpleType: Exception(3174) into MethodDeclaration(3268) at 4", "Insert Block(3267) into MethodDeclaration(3268) at 5", "Insert MarkerAnnotation(3270) into MethodDeclaration(3369) at 0", "Insert Modifier: public(3271) into MethodDeclaration(3369) at 1", "Insert PrimitiveType: void(3272) into MethodDeclaration(3369) at 2", "Insert SimpleName: descVarLengthAscPKLTE(3273) into MethodDeclaration(3369) at 3", "Insert SimpleType: Exception(3275) into MethodDeclaration(3369) at 4", "Insert Block(3368) into MethodDeclaration(3369) at 5", "Insert MarkerAnnotation(3371) into MethodDeclaration(3453) at 0", "Insert Modifier: public(3372) into MethodDeclaration(3453) at 1", "Insert PrimitiveType: void(3373) into MethodDeclaration(3453) at 2", "Insert SimpleName: testNonPKCompare(3374) into MethodDeclaration(3453) at 3", "Insert SimpleType: Exception(3376) into MethodDeclaration(3453) at 4", "Insert Block(3452) into MethodDeclaration(3453) at 5", "Insert MarkerAnnotation(3455) into MethodDeclaration(3563) at 0", "Insert Modifier: public(3456) into MethodDeclaration(3563) at 1", "Insert PrimitiveType: void(3457) into MethodDeclaration(3563) at 2", "Insert SimpleName: testSkipScanCompare(3458) into MethodDeclaration(3563) at 3", "Insert SimpleType: Exception(3460) into MethodDeclaration(3563) at 4", "Insert Block(3562) into MethodDeclaration(3563) at 5", "Insert Modifier: private(3564) into MethodDeclaration(3800) at 0", "Insert PrimitiveType: void(3565) into MethodDeclaration(3800) at 1", "Insert SimpleName: testCompareCompositeKey(3566) into MethodDeclaration(3800) at 2", "Insert SingleVariableDeclaration(3570) into MethodDeclaration(3800) at 3", "Insert SingleVariableDeclaration(3574) into MethodDeclaration(3800) at 4", "Insert SingleVariableDeclaration(3578) into MethodDeclaration(3800) at 5", "Insert SingleVariableDeclaration(3582) into MethodDeclaration(3800) at 6", "Insert SingleVariableDeclaration(3589) into MethodDeclaration(3800) at 7", "Insert SingleVariableDeclaration(3593) into MethodDeclaration(3800) at 8", "Insert SimpleType: SQLException(3595) into MethodDeclaration(3800) at 9", "Insert Block(3799) into MethodDeclaration(3800) at 10", "Insert SimpleName: Test(2972) into MarkerAnnotation(2973) at 0", "Insert SimpleName: Exception(2977) into SimpleType: Exception(2978) at 0", "Insert VariableDeclarationStatement(2987) into Block(3068) at 0", "Insert VariableDeclarationStatement(3023) into Block(3068) at 1", "Insert VariableDeclarationStatement(3046) into Block(3068) at 2", "Insert ExpressionStatement(3067) into Block(3068) at 3", "Insert SimpleName: Test(3070) into MarkerAnnotation(3071) at 0", "Insert SimpleName: Exception(3075) into SimpleType: Exception(3076) at 0", "Insert VariableDeclarationStatement(3085) into Block(3166) at 0", "Insert VariableDeclarationStatement(3121) into Block(3166) at 1", "Insert VariableDeclarationStatement(3144) into Block(3166) at 2", "Insert ExpressionStatement(3165) into Block(3166) at 3", "Insert SimpleName: Test(3168) into MarkerAnnotation(3169) at 0", "Insert SimpleName: Exception(3173) into SimpleType: Exception(3174) at 0", "Insert VariableDeclarationStatement(3183) into Block(3267) at 0", "Insert VariableDeclarationStatement(3222) into Block(3267) at 1", "Insert VariableDeclarationStatement(3245) into Block(3267) at 2", "Insert ExpressionStatement(3266) into Block(3267) at 3", "Insert SimpleName: Test(3269) into MarkerAnnotation(3270) at 0", "Insert SimpleName: Exception(3274) into SimpleType: Exception(3275) at 0", "Insert VariableDeclarationStatement(3284) into Block(3368) at 0", "Insert VariableDeclarationStatement(3323) into Block(3368) at 1", "Insert VariableDeclarationStatement(3346) into Block(3368) at 2", "Insert ExpressionStatement(3367) into Block(3368) at 3", "Insert SimpleName: Test(3370) into MarkerAnnotation(3371) at 0", "Insert SimpleName: Exception(3375) into SimpleType: Exception(3376) at 0", "Insert VariableDeclarationStatement(3390) into Block(3452) at 0", "Insert VariableDeclarationStatement(3405) into Block(3452) at 1", "Insert VariableDeclarationStatement(3419) into Block(3452) at 2", "Insert EnhancedForStatement(3451) into Block(3452) at 3", "Insert SimpleName: Test(3454) into MarkerAnnotation(3455) at 0", "Insert SimpleName: Exception(3459) into SimpleType: Exception(3460) at 0", "Insert VariableDeclarationStatement(3473) into Block(3562) at 0", "Insert VariableDeclarationStatement(3486) into Block(3562) at 1", "Insert ExpressionStatement(3491) into Block(3562) at 2", "Insert VariableDeclarationStatement(3506) into Block(3562) at 3", "Insert VariableDeclarationStatement(3520) into Block(3562) at 4", "Insert EnhancedForStatement(3561) into Block(3562) at 5", "Insert SimpleType: Integer(3568) into SingleVariableDeclaration(3570) at 0", "Insert SimpleName: saltBuckets(3569) into SingleVariableDeclaration(3570) at 1", "Insert SimpleType: PDataType(3572) into SingleVariableDeclaration(3574) at 0", "Insert SimpleName: dataType(3573) into SingleVariableDeclaration(3574) at 1", "Insert SimpleType: SortOrder(3576) into SingleVariableDeclaration(3578) at 0", "Insert SimpleName: sortOrder(3577) into SingleVariableDeclaration(3578) at 1", "Insert SimpleType: String(3580) into SingleVariableDeclaration(3582) at 0", "Insert SimpleName: whereClause(3581) into SingleVariableDeclaration(3582) at 1", "Insert ParameterizedType: List<Integer>(3587) into SingleVariableDeclaration(3589) at 0", "Insert SimpleName: expectedResults(3588) into SingleVariableDeclaration(3589) at 1", "Insert SimpleType: String(3591) into SingleVariableDeclaration(3593) at 0", "Insert SimpleName: orderBy(3592) into SingleVariableDeclaration(3593) at 1", "Insert SimpleName: SQLException(3594) into SimpleType: SQLException(3595) at 0", "Insert VariableDeclarationStatement(3607) into Block(3799) at 0", "Insert VariableDeclarationStatement(3639) into Block(3799) at 1", "Insert VariableDeclarationStatement(3653) into Block(3799) at 2", "Insert ExpressionStatement(3660) into Block(3799) at 3", "Insert IfStatement(3676) into Block(3799) at 4", "Insert ExpressionStatement(3686) into Block(3799) at 5", "Insert ExpressionStatement(3696) into Block(3799) at 6", "Insert ExpressionStatement(3706) into Block(3799) at 7", "Insert ExpressionStatement(3716) into Block(3799) at 8", "Insert ExpressionStatement(3720) into Block(3799) at 9", "Insert VariableDeclarationStatement(3751) into Block(3799) at 10", "Insert TryStatement(3798) into Block(3799) at 11", "Insert SimpleType: String(2980) into VariableDeclarationStatement(2987) at 0", "Insert VariableDeclarationFragment(2986) into VariableDeclarationStatement(2987) at 1", "Insert ArrayType: Object[][](2992) into VariableDeclarationStatement(3023) at 0", "Insert VariableDeclarationFragment(3022) into VariableDeclarationStatement(3023) at 1", "Insert ArrayType: Object[][](3028) into VariableDeclarationStatement(3046) at 0", "Insert VariableDeclarationFragment(3045) into VariableDeclarationStatement(3046) at 1", "Insert MethodInvocation(3066) into ExpressionStatement(3067) at 0", "Insert SimpleType: String(3078) into VariableDeclarationStatement(3085) at 0", "Insert VariableDeclarationFragment(3084) into VariableDeclarationStatement(3085) at 1", "Insert ArrayType: Object[][](3090) into VariableDeclarationStatement(3121) at 0", "Insert VariableDeclarationFragment(3120) into VariableDeclarationStatement(3121) at 1", "Insert ArrayType: Object[][](3126) into VariableDeclarationStatement(3144) at 0", "Insert VariableDeclarationFragment(3143) into VariableDeclarationStatement(3144) at 1", "Insert MethodInvocation(3164) into ExpressionStatement(3165) at 0", "Insert SimpleType: String(3176) into VariableDeclarationStatement(3183) at 0", "Insert VariableDeclarationFragment(3182) into VariableDeclarationStatement(3183) at 1", "Insert ArrayType: Object[][](3188) into VariableDeclarationStatement(3222) at 0", "Insert VariableDeclarationFragment(3221) into VariableDeclarationStatement(3222) at 1", "Insert ArrayType: Object[][](3227) into VariableDeclarationStatement(3245) at 0", "Insert VariableDeclarationFragment(3244) into VariableDeclarationStatement(3245) at 1", "Insert MethodInvocation(3265) into ExpressionStatement(3266) at 0", "Insert SimpleType: String(3277) into VariableDeclarationStatement(3284) at 0", "Insert VariableDeclarationFragment(3283) into VariableDeclarationStatement(3284) at 1", "Insert ArrayType: Object[][](3289) into VariableDeclarationStatement(3323) at 0", "Insert VariableDeclarationFragment(3322) into VariableDeclarationStatement(3323) at 1", "Insert ArrayType: Object[][](3328) into VariableDeclarationStatement(3346) at 0", "Insert VariableDeclarationFragment(3345) into VariableDeclarationStatement(3346) at 1", "Insert MethodInvocation(3366) into ExpressionStatement(3367) at 0", "Insert ParameterizedType: List<Integer>(3381) into VariableDeclarationStatement(3390) at 0", "Insert VariableDeclarationFragment(3389) into VariableDeclarationStatement(3390) at 1", "Insert ArrayType: Integer[](3394) into VariableDeclarationStatement(3405) at 0", "Insert VariableDeclarationFragment(3404) into VariableDeclarationStatement(3405) at 1", "Insert ArrayType: PDataType[](3409) into VariableDeclarationStatement(3419) at 0", "Insert VariableDeclarationFragment(3418) into VariableDeclarationStatement(3419) at 1", "Insert SingleVariableDeclaration(3423) into EnhancedForStatement(3451) at 0", "Insert SimpleName: saltBuckets(3424) into EnhancedForStatement(3451) at 1", "Insert Block(3450) into EnhancedForStatement(3451) at 2", "Insert ParameterizedType: List<Integer>(3465) into VariableDeclarationStatement(3473) at 0", "Insert VariableDeclarationFragment(3472) into VariableDeclarationStatement(3473) at 1", "Insert ParameterizedType: List<Integer>(3478) into VariableDeclarationStatement(3486) at 0", "Insert VariableDeclarationFragment(3485) into VariableDeclarationStatement(3486) at 1", "Insert MethodInvocation(3490) into ExpressionStatement(3491) at 0", "Insert ArrayType: Integer[](3495) into VariableDeclarationStatement(3506) at 0", "Insert VariableDeclarationFragment(3505) into VariableDeclarationStatement(3506) at 1", "Insert ArrayType: PDataType[](3510) into VariableDeclarationStatement(3520) at 0", "Insert VariableDeclarationFragment(3519) into VariableDeclarationStatement(3520) at 1", "Insert SingleVariableDeclaration(3524) into EnhancedForStatement(3561) at 0", "Insert SimpleName: saltBuckets(3525) into EnhancedForStatement(3561) at 1", "Insert Block(3560) into EnhancedForStatement(3561) at 2", "Insert SimpleName: Integer(3567) into SimpleType: Integer(3568) at 0", "Insert SimpleName: PDataType(3571) into SimpleType: PDataType(3572) at 0", "Insert SimpleName: SortOrder(3575) into SimpleType: SortOrder(3576) at 0", "Insert SimpleName: String(3579) into SimpleType: String(3580) at 0", "Insert SimpleType: List(3584) into ParameterizedType: List<Integer>(3587) at 0", "Insert SimpleType: Integer(3586) into ParameterizedType: List<Integer>(3587) at 1", "Insert SimpleName: String(3590) into SimpleType: String(3591) at 0", "Insert SimpleType: String(3597) into VariableDeclarationStatement(3607) at 0", "Insert VariableDeclarationFragment(3606) into VariableDeclarationStatement(3607) at 1", "Insert SimpleType: String(3609) into VariableDeclarationStatement(3639) at 0", "Insert VariableDeclarationFragment(3638) into VariableDeclarationStatement(3639) at 1", "Insert SimpleType: Connection(3641) into VariableDeclarationStatement(3653) at 0", "Insert VariableDeclarationFragment(3652) into VariableDeclarationStatement(3653) at 1", "Insert MethodInvocation(3659) into ExpressionStatement(3660) at 0", "Insert PrefixExpression: !(3664) into IfStatement(3676) at 0", "Insert Block(3675) into IfStatement(3676) at 1", "Insert MethodInvocation(3685) into ExpressionStatement(3686) at 0", "Insert MethodInvocation(3695) into ExpressionStatement(3696) at 0", "Insert MethodInvocation(3705) into ExpressionStatement(3706) at 0", "Insert MethodInvocation(3715) into ExpressionStatement(3716) at 0", "Insert MethodInvocation(3719) into ExpressionStatement(3720) at 0", "Insert SimpleType: String(3722) into VariableDeclarationStatement(3751) at 0", "Insert VariableDeclarationFragment(3750) into VariableDeclarationStatement(3751) at 1", "Insert Block(3792) into TryStatement(3798) at 0", "Insert Block(3797) into TryStatement(3798) at 1", "Insert IfStatement(4895) into Block(4896) at 0", "Insert SimpleName: String(2979) into SimpleType: String(2980) at 0", "Insert SimpleName: ddl(2981) into VariableDeclarationFragment(2986) at 0", "Insert InfixExpression: +(2985) into VariableDeclarationFragment(2986) at 1", "Insert SimpleType: Object(2989) into ArrayType: Object[][](2992) at 0", "Insert Dimension(2990) into ArrayType: Object[][](2992) at 1", "Insert Dimension(2991) into ArrayType: Object[][](2992) at 2", "Insert SimpleName: insertedRows(2993) into VariableDeclarationFragment(3022) at 0", "Insert ArrayCreation(3021) into VariableDeclarationFragment(3022) at 1", "Insert SimpleType: Object(3025) into ArrayType: Object[][](3028) at 0", "Insert Dimension(3026) into ArrayType: Object[][](3028) at 1", "Insert Dimension(3027) into ArrayType: Object[][](3028) at 2", "Insert SimpleName: expectedRows(3029) into VariableDeclarationFragment(3045) at 0", "Insert ArrayCreation(3044) into VariableDeclarationFragment(3045) at 1", "Insert SimpleName: runQueryTest(3047) into MethodInvocation(3066) at 0", "Insert SimpleName: ddl(3048) into MethodInvocation(3066) at 1", "Insert MethodInvocation(3052) into MethodInvocation(3066) at 2", "Insert MethodInvocation(3055) into MethodInvocation(3066) at 3", "Insert SimpleName: insertedRows(3056) into MethodInvocation(3066) at 4", "Insert SimpleName: expectedRows(3057) into MethodInvocation(3066) at 5", "Insert ClassInstanceCreation(3063) into MethodInvocation(3066) at 6", "Insert NullLiteral(3064) into MethodInvocation(3066) at 7", "Insert NullLiteral(3065) into MethodInvocation(3066) at 8", "Insert SimpleName: String(3077) into SimpleType: String(3078) at 0", "Insert SimpleName: ddl(3079) into VariableDeclarationFragment(3084) at 0", "Insert InfixExpression: +(3083) into VariableDeclarationFragment(3084) at 1", "Insert SimpleType: Object(3087) into ArrayType: Object[][](3090) at 0", "Insert Dimension(3088) into ArrayType: Object[][](3090) at 1", "Insert Dimension(3089) into ArrayType: Object[][](3090) at 2", "Insert SimpleName: insertedRows(3091) into VariableDeclarationFragment(3120) at 0", "Insert ArrayCreation(3119) into VariableDeclarationFragment(3120) at 1", "Insert SimpleType: Object(3123) into ArrayType: Object[][](3126) at 0", "Insert Dimension(3124) into ArrayType: Object[][](3126) at 1", "Insert Dimension(3125) into ArrayType: Object[][](3126) at 2", "Insert SimpleName: expectedRows(3127) into VariableDeclarationFragment(3143) at 0", "Insert ArrayCreation(3142) into VariableDeclarationFragment(3143) at 1", "Insert SimpleName: runQueryTest(3145) into MethodInvocation(3164) at 0", "Insert SimpleName: ddl(3146) into MethodInvocation(3164) at 1", "Insert MethodInvocation(3150) into MethodInvocation(3164) at 2", "Insert MethodInvocation(3153) into MethodInvocation(3164) at 3", "Insert SimpleName: insertedRows(3154) into MethodInvocation(3164) at 4", "Insert SimpleName: expectedRows(3155) into MethodInvocation(3164) at 5", "Insert ClassInstanceCreation(3161) into MethodInvocation(3164) at 6", "Insert NullLiteral(3162) into MethodInvocation(3164) at 7", "Insert NullLiteral(3163) into MethodInvocation(3164) at 8", "Insert SimpleName: String(3175) into SimpleType: String(3176) at 0", "Insert SimpleName: ddl(3177) into VariableDeclarationFragment(3182) at 0", "Insert InfixExpression: +(3181) into VariableDeclarationFragment(3182) at 1", "Insert SimpleType: Object(3185) into ArrayType: Object[][](3188) at 0", "Insert Dimension(3186) into ArrayType: Object[][](3188) at 1", "Insert Dimension(3187) into ArrayType: Object[][](3188) at 2", "Insert SimpleName: insertedRows(3189) into VariableDeclarationFragment(3221) at 0", "Insert ArrayCreation(3220) into VariableDeclarationFragment(3221) at 1", "Insert SimpleType: Object(3224) into ArrayType: Object[][](3227) at 0", "Insert Dimension(3225) into ArrayType: Object[][](3227) at 1", "Insert Dimension(3226) into ArrayType: Object[][](3227) at 2", "Insert SimpleName: expectedRows(3228) into VariableDeclarationFragment(3244) at 0", "Insert ArrayCreation(3243) into VariableDeclarationFragment(3244) at 1", "Insert SimpleName: runQueryTest(3246) into MethodInvocation(3265) at 0", "Insert SimpleName: ddl(3247) into MethodInvocation(3265) at 1", "Insert MethodInvocation(3251) into MethodInvocation(3265) at 2", "Insert MethodInvocation(3254) into MethodInvocation(3265) at 3", "Insert SimpleName: insertedRows(3255) into MethodInvocation(3265) at 4", "Insert SimpleName: expectedRows(3256) into MethodInvocation(3265) at 5", "Insert ClassInstanceCreation(3262) into MethodInvocation(3265) at 6", "Insert NullLiteral(3263) into MethodInvocation(3265) at 7", "Insert NullLiteral(3264) into MethodInvocation(3265) at 8", "Insert SimpleName: String(3276) into SimpleType: String(3277) at 0", "Insert SimpleName: ddl(3278) into VariableDeclarationFragment(3283) at 0", "Insert InfixExpression: +(3282) into VariableDeclarationFragment(3283) at 1", "Insert SimpleType: Object(3286) into ArrayType: Object[][](3289) at 0", "Insert Dimension(3287) into ArrayType: Object[][](3289) at 1", "Insert Dimension(3288) into ArrayType: Object[][](3289) at 2", "Insert SimpleName: insertedRows(3290) into VariableDeclarationFragment(3322) at 0", "Insert ArrayCreation(3321) into VariableDeclarationFragment(3322) at 1", "Insert SimpleType: Object(3325) into ArrayType: Object[][](3328) at 0", "Insert Dimension(3326) into ArrayType: Object[][](3328) at 1", "Insert Dimension(3327) into ArrayType: Object[][](3328) at 2", "Insert SimpleName: expectedRows(3329) into VariableDeclarationFragment(3345) at 0", "Insert ArrayCreation(3344) into VariableDeclarationFragment(3345) at 1", "Insert SimpleName: runQueryTest(3347) into MethodInvocation(3366) at 0", "Insert SimpleName: ddl(3348) into MethodInvocation(3366) at 1", "Insert MethodInvocation(3352) into MethodInvocation(3366) at 2", "Insert MethodInvocation(3355) into MethodInvocation(3366) at 3", "Insert SimpleName: insertedRows(3356) into MethodInvocation(3366) at 4", "Insert SimpleName: expectedRows(3357) into MethodInvocation(3366) at 5", "Insert ClassInstanceCreation(3363) into MethodInvocation(3366) at 6", "Insert NullLiteral(3364) into MethodInvocation(3366) at 7", "Insert NullLiteral(3365) into MethodInvocation(3366) at 8", "Insert SimpleType: List(3378) into ParameterizedType: List<Integer>(3381) at 0", "Insert SimpleType: Integer(3380) into ParameterizedType: List<Integer>(3381) at 1", "Insert SimpleName: expectedResults(3382) into VariableDeclarationFragment(3389) at 0", "Insert MethodInvocation(3388) into VariableDeclarationFragment(3389) at 1", "Insert SimpleType: Integer(3392) into ArrayType: Integer[](3394) at 0", "Insert Dimension(3393) into ArrayType: Integer[](3394) at 1", "Insert SimpleName: saltBuckets(3395) into VariableDeclarationFragment(3404) at 0", "Insert ArrayCreation(3403) into VariableDeclarationFragment(3404) at 1", "Insert SimpleType: PDataType(3407) into ArrayType: PDataType[](3409) at 0", "Insert Dimension(3408) into ArrayType: PDataType[](3409) at 1", "Insert SimpleName: dataTypes(3410) into VariableDeclarationFragment(3418) at 0", "Insert ArrayCreation(3417) into VariableDeclarationFragment(3418) at 1", "Insert SimpleType: Integer(3421) into SingleVariableDeclaration(3423) at 0", "Insert SimpleName: saltBucket(3422) into SingleVariableDeclaration(3423) at 1", "Insert EnhancedForStatement(3449) into Block(3450) at 0", "Insert SimpleType: List(3462) into ParameterizedType: List<Integer>(3465) at 0", "Insert SimpleType: Integer(3464) into ParameterizedType: List<Integer>(3465) at 1", "Insert SimpleName: expectedResults(3466) into VariableDeclarationFragment(3472) at 0", "Insert MethodInvocation(3471) into VariableDeclarationFragment(3472) at 1", "Insert SimpleType: List(3475) into ParameterizedType: List<Integer>(3478) at 0", "Insert SimpleType: Integer(3477) into ParameterizedType: List<Integer>(3478) at 1", "Insert SimpleName: rExpectedResults(3479) into VariableDeclarationFragment(3485) at 0", "Insert ClassInstanceCreation(3484) into VariableDeclarationFragment(3485) at 1", "Insert SimpleName: Collections(3487) into MethodInvocation(3490) at 0", "Insert SimpleName: reverse(3488) into MethodInvocation(3490) at 1", "Insert SimpleName: rExpectedResults(3489) into MethodInvocation(3490) at 2", "Insert SimpleType: Integer(3493) into ArrayType: Integer[](3495) at 0", "Insert Dimension(3494) into ArrayType: Integer[](3495) at 1", "Insert SimpleName: saltBuckets(3496) into VariableDeclarationFragment(3505) at 0", "Insert ArrayCreation(3504) into VariableDeclarationFragment(3505) at 1", "Insert SimpleType: PDataType(3508) into ArrayType: PDataType[](3510) at 0", "Insert Dimension(3509) into ArrayType: PDataType[](3510) at 1", "Insert SimpleName: dataTypes(3511) into VariableDeclarationFragment(3519) at 0", "Insert ArrayCreation(3518) into VariableDeclarationFragment(3519) at 1", "Insert SimpleType: Integer(3522) into SingleVariableDeclaration(3524) at 0", "Insert SimpleName: saltBucket(3523) into SingleVariableDeclaration(3524) at 1", "Insert EnhancedForStatement(3559) into Block(3560) at 0", "Insert SimpleName: List(3583) into SimpleType: List(3584) at 0", "Insert SimpleName: Integer(3585) into SimpleType: Integer(3586) at 0", "Insert SimpleName: String(3596) into SimpleType: String(3597) at 0", "Insert SimpleName: tableName(3598) into VariableDeclarationFragment(3606) at 0", "Insert InfixExpression: +(3605) into VariableDeclarationFragment(3606) at 1", "Insert SimpleName: String(3608) into SimpleType: String(3609) at 0", "Insert SimpleName: ddl(3610) into VariableDeclarationFragment(3638) at 0", "Insert InfixExpression: +(3637) into VariableDeclarationFragment(3638) at 1", "Insert SimpleName: Connection(3640) into SimpleType: Connection(3641) at 0", "Insert SimpleName: conn(3642) into VariableDeclarationFragment(3652) at 0", "Insert MethodInvocation(3651) into VariableDeclarationFragment(3652) at 1", "Insert MethodInvocation(3656) into MethodInvocation(3659) at 0", "Insert SimpleName: execute(3657) into MethodInvocation(3659) at 1", "Insert SimpleName: ddl(3658) into MethodInvocation(3659) at 2", "Insert MethodInvocation(3663) into PrefixExpression: !(3664) at 0", "Insert ExpressionStatement(3674) into Block(3675) at 0", "Insert MethodInvocation(3679) into MethodInvocation(3685) at 0", "Insert SimpleName: execute(3680) into MethodInvocation(3685) at 1", "Insert InfixExpression: +(3684) into MethodInvocation(3685) at 2", "Insert MethodInvocation(3689) into MethodInvocation(3695) at 0", "Insert SimpleName: execute(3690) into MethodInvocation(3695) at 1", "Insert InfixExpression: +(3694) into MethodInvocation(3695) at 2", "Insert MethodInvocation(3699) into MethodInvocation(3705) at 0", "Insert SimpleName: execute(3700) into MethodInvocation(3705) at 1", "Insert InfixExpression: +(3704) into MethodInvocation(3705) at 2", "Insert MethodInvocation(3709) into MethodInvocation(3715) at 0", "Insert SimpleName: execute(3710) into MethodInvocation(3715) at 1", "Insert InfixExpression: +(3714) into MethodInvocation(3715) at 2", "Insert SimpleName: conn(3717) into MethodInvocation(3719) at 0", "Insert SimpleName: commit(3718) into MethodInvocation(3719) at 1", "Insert SimpleName: String(3721) into SimpleType: String(3722) at 0", "Insert SimpleName: query(3723) into VariableDeclarationFragment(3750) at 0", "Insert InfixExpression: +(3749) into VariableDeclarationFragment(3750) at 1", "Insert VariableDeclarationStatement(3762) into Block(3792) at 0", "Insert EnhancedForStatement(3784) into Block(3792) at 1", "Insert ExpressionStatement(3791) into Block(3792) at 2", "Insert ExpressionStatement(3796) into Block(3797) at 0", "Move MethodInvocation(4021) into IfStatement(4895) at 0", "Move Block(4024) into IfStatement(4895) at 1", "Insert IfStatement(4894) into IfStatement(4895) at 2", "Insert StringLiteral: \"CREATE TABLE \"(2982) into InfixExpression: +(2985) at 0", "Insert SimpleName: TABLE(2983) into InfixExpression: +(2985) at 1", "Insert StringLiteral: \" (k1 INTEGER NOT NULL, k2 VARCHAR, CONSTRAINT pk PRIMARY KEY (k1, k2))\"(2984) into InfixExpression: +(2985) at 2", "Insert SimpleName: Object(2988) into SimpleType: Object(2989) at 0", "Insert ArrayType: Object[][](2998) into ArrayCreation(3021) at 0", "Insert ArrayInitializer(3020) into ArrayCreation(3021) at 1", "Insert SimpleName: Object(3024) into SimpleType: Object(3025) at 0", "Insert ArrayType: Object[][](3034) into ArrayCreation(3044) at 0", "Insert ArrayInitializer(3043) into ArrayCreation(3044) at 1", "Insert SimpleName: upsert(3049) into MethodInvocation(3052) at 0", "Insert StringLiteral: \"k1\"(3050) into MethodInvocation(3052) at 1", "Insert StringLiteral: \"k2\"(3051) into MethodInvocation(3052) at 2", "Insert SimpleName: select(3053) into MethodInvocation(3055) at 0", "Insert StringLiteral: \"k1\"(3054) into MethodInvocation(3055) at 1", "Insert SimpleType: WhereCondition(3059) into ClassInstanceCreation(3063) at 0", "Insert StringLiteral: \"k2\"(3060) into ClassInstanceCreation(3063) at 1", "Insert StringLiteral: \">\"(3061) into ClassInstanceCreation(3063) at 2", "Insert StringLiteral: \"'b'\"(3062) into ClassInstanceCreation(3063) at 3", "Insert StringLiteral: \"CREATE TABLE \"(3080) into InfixExpression: +(3083) at 0", "Insert SimpleName: TABLE(3081) into InfixExpression: +(3083) at 1", "Insert StringLiteral: \" (k1 INTEGER NOT NULL, k2 VARCHAR, CONSTRAINT pk PRIMARY KEY (k1, k2 desc))\"(3082) into InfixExpression: +(3083) at 2", "Insert SimpleName: Object(3086) into SimpleType: Object(3087) at 0", "Insert ArrayType: Object[][](3096) into ArrayCreation(3119) at 0", "Insert ArrayInitializer(3118) into ArrayCreation(3119) at 1", "Insert SimpleName: Object(3122) into SimpleType: Object(3123) at 0", "Insert ArrayType: Object[][](3132) into ArrayCreation(3142) at 0", "Insert ArrayInitializer(3141) into ArrayCreation(3142) at 1", "Insert SimpleName: upsert(3147) into MethodInvocation(3150) at 0", "Insert StringLiteral: \"k1\"(3148) into MethodInvocation(3150) at 1", "Insert StringLiteral: \"k2\"(3149) into MethodInvocation(3150) at 2", "Insert SimpleName: select(3151) into MethodInvocation(3153) at 0", "Insert StringLiteral: \"k1\"(3152) into MethodInvocation(3153) at 1", "Insert SimpleType: WhereCondition(3157) into ClassInstanceCreation(3161) at 0", "Insert StringLiteral: \"k2\"(3158) into ClassInstanceCreation(3161) at 1", "Insert StringLiteral: \">\"(3159) into ClassInstanceCreation(3161) at 2", "Insert StringLiteral: \"'b'\"(3160) into ClassInstanceCreation(3161) at 3", "Insert StringLiteral: \"CREATE TABLE \"(3178) into InfixExpression: +(3181) at 0", "Insert SimpleName: TABLE(3179) into InfixExpression: +(3181) at 1", "Insert StringLiteral: \" (k1 INTEGER NOT NULL, k2 VARCHAR, CONSTRAINT pk PRIMARY KEY (k1, k2 desc))\"(3180) into InfixExpression: +(3181) at 2", "Insert SimpleName: Object(3184) into SimpleType: Object(3185) at 0", "Insert ArrayType: Object[][](3194) into ArrayCreation(3220) at 0", "Insert ArrayInitializer(3219) into ArrayCreation(3220) at 1", "Insert SimpleName: Object(3223) into SimpleType: Object(3224) at 0", "Insert ArrayType: Object[][](3233) into ArrayCreation(3243) at 0", "Insert ArrayInitializer(3242) into ArrayCreation(3243) at 1", "Insert SimpleName: upsert(3248) into MethodInvocation(3251) at 0", "Insert StringLiteral: \"k1\"(3249) into MethodInvocation(3251) at 1", "Insert StringLiteral: \"k2\"(3250) into MethodInvocation(3251) at 2", "Insert SimpleName: select(3252) into MethodInvocation(3254) at 0", "Insert StringLiteral: \"k1\"(3253) into MethodInvocation(3254) at 1", "Insert SimpleType: WhereCondition(3258) into ClassInstanceCreation(3262) at 0", "Insert StringLiteral: \"k2\"(3259) into ClassInstanceCreation(3262) at 1", "Insert StringLiteral: \"<=\"(3260) into ClassInstanceCreation(3262) at 2", "Insert StringLiteral: \"'bb'\"(3261) into ClassInstanceCreation(3262) at 3", "Insert StringLiteral: \"CREATE TABLE \"(3279) into InfixExpression: +(3282) at 0", "Insert SimpleName: TABLE(3280) into InfixExpression: +(3282) at 1", "Insert StringLiteral: \" (k1 INTEGER NOT NULL, k2 VARCHAR, CONSTRAINT pk PRIMARY KEY (k1, k2))\"(3281) into InfixExpression: +(3282) at 2", "Insert SimpleName: Object(3285) into SimpleType: Object(3286) at 0", "Insert ArrayType: Object[][](3295) into ArrayCreation(3321) at 0", "Insert ArrayInitializer(3320) into ArrayCreation(3321) at 1", "Insert SimpleName: Object(3324) into SimpleType: Object(3325) at 0", "Insert ArrayType: Object[][](3334) into ArrayCreation(3344) at 0", "Insert ArrayInitializer(3343) into ArrayCreation(3344) at 1", "Insert SimpleName: upsert(3349) into MethodInvocation(3352) at 0", "Insert StringLiteral: \"k1\"(3350) into MethodInvocation(3352) at 1", "Insert StringLiteral: \"k2\"(3351) into MethodInvocation(3352) at 2", "Insert SimpleName: select(3353) into MethodInvocation(3355) at 0", "Insert StringLiteral: \"k1\"(3354) into MethodInvocation(3355) at 1", "Insert SimpleType: WhereCondition(3359) into ClassInstanceCreation(3363) at 0", "Insert StringLiteral: \"k2\"(3360) into ClassInstanceCreation(3363) at 1", "Insert StringLiteral: \"<=\"(3361) into ClassInstanceCreation(3363) at 2", "Insert StringLiteral: \"'bb'\"(3362) into ClassInstanceCreation(3363) at 3", "Insert SimpleName: List(3377) into SimpleType: List(3378) at 0", "Insert SimpleName: Integer(3379) into SimpleType: Integer(3380) at 0", "Insert SimpleName: Lists(3383) into MethodInvocation(3388) at 0", "Insert SimpleName: newArrayList(3384) into MethodInvocation(3388) at 1", "Insert NumberLiteral: 2(3385) into MethodInvocation(3388) at 2", "Insert NumberLiteral: 3(3386) into MethodInvocation(3388) at 3", "Insert NumberLiteral: 4(3387) into MethodInvocation(3388) at 4", "Insert SimpleName: Integer(3391) into SimpleType: Integer(3392) at 0", "Insert ArrayType: Integer[](3399) into ArrayCreation(3403) at 0", "Insert ArrayInitializer(3402) into ArrayCreation(3403) at 1", "Insert SimpleName: PDataType(3406) into SimpleType: PDataType(3407) at 0", "Insert ArrayType: PDataType[](3414) into ArrayCreation(3417) at 0", "Insert ArrayInitializer(3416) into ArrayCreation(3417) at 1", "Insert SimpleName: Integer(3420) into SimpleType: Integer(3421) at 0", "Insert SingleVariableDeclaration(3428) into EnhancedForStatement(3449) at 0", "Insert SimpleName: dataTypes(3429) into EnhancedForStatement(3449) at 1", "Insert Block(3448) into EnhancedForStatement(3449) at 2", "Insert SimpleName: List(3461) into SimpleType: List(3462) at 0", "Insert SimpleName: Integer(3463) into SimpleType: Integer(3464) at 0", "Insert SimpleName: Lists(3467) into MethodInvocation(3471) at 0", "Insert SimpleName: newArrayList(3468) into MethodInvocation(3471) at 1", "Insert NumberLiteral: 2(3469) into MethodInvocation(3471) at 2", "Insert NumberLiteral: 4(3470) into MethodInvocation(3471) at 3", "Insert SimpleName: List(3474) into SimpleType: List(3475) at 0", "Insert SimpleName: Integer(3476) into SimpleType: Integer(3477) at 0", "Insert ParameterizedType: ArrayList<>(3482) into ClassInstanceCreation(3484) at 0", "Insert SimpleName: expectedResults(3483) into ClassInstanceCreation(3484) at 1", "Insert SimpleName: Integer(3492) into SimpleType: Integer(3493) at 0", "Insert ArrayType: Integer[](3500) into ArrayCreation(3504) at 0", "Insert ArrayInitializer(3503) into ArrayCreation(3504) at 1", "Insert SimpleName: PDataType(3507) into SimpleType: PDataType(3508) at 0", "Insert ArrayType: PDataType[](3515) into ArrayCreation(3518) at 0", "Insert ArrayInitializer(3517) into ArrayCreation(3518) at 1", "Insert SimpleName: Integer(3521) into SimpleType: Integer(3522) at 0", "Insert SingleVariableDeclaration(3529) into EnhancedForStatement(3559) at 0", "Insert SimpleName: dataTypes(3530) into EnhancedForStatement(3559) at 1", "Insert Block(3558) into EnhancedForStatement(3559) at 2", "Insert StringLiteral: \"t_\"(3599) into InfixExpression: +(3605) at 0", "Insert SimpleName: saltBuckets(3600) into InfixExpression: +(3605) at 1", "Insert StringLiteral: \"_\"(3601) into InfixExpression: +(3605) at 2", "Insert SimpleName: dataType(3602) into InfixExpression: +(3605) at 3", "Insert StringLiteral: \"_\"(3603) into InfixExpression: +(3605) at 4", "Insert SimpleName: sortOrder(3604) into InfixExpression: +(3605) at 5", "Insert StringLiteral: \"create table if not exists \"(3611) into InfixExpression: +(3637) at 0", "Insert SimpleName: tableName(3612) into InfixExpression: +(3637) at 1", "Insert StringLiteral: \" (k1 bigint not null, k2 \"(3613) into InfixExpression: +(3637) at 2", "Insert MethodInvocation(3616) into InfixExpression: +(3637) at 3", "Insert ParenthesizedExpression(3623) into InfixExpression: +(3637) at 4", "Insert StringLiteral: \", constraint pk primary key (k1,k2 \"(3624) into InfixExpression: +(3637) at 5", "Insert SimpleName: sortOrder(3625) into InfixExpression: +(3637) at 6", "Insert StringLiteral: \"))\"(3626) into InfixExpression: +(3637) at 7", "Insert ParenthesizedExpression(3636) into InfixExpression: +(3637) at 8", "Insert SimpleName: DriverManager(3643) into MethodInvocation(3651) at 0", "Insert SimpleName: getConnection(3644) into MethodInvocation(3651) at 1", "Insert MethodInvocation(3646) into MethodInvocation(3651) at 2", "Insert MethodInvocation(3650) into MethodInvocation(3651) at 3", "Insert SimpleName: conn(3654) into MethodInvocation(3656) at 0", "Insert SimpleName: createStatement(3655) into MethodInvocation(3656) at 1", "Insert SimpleName: dataType(3661) into MethodInvocation(3663) at 0", "Insert SimpleName: isFixedWidth(3662) into MethodInvocation(3663) at 1", "Insert MethodInvocation(3673) into ExpressionStatement(3674) at 0", "Insert SimpleName: conn(3677) into MethodInvocation(3679) at 0", "Insert SimpleName: createStatement(3678) into MethodInvocation(3679) at 1", "Insert StringLiteral: \"upsert into \"(3681) into InfixExpression: +(3684) at 0", "Insert SimpleName: tableName(3682) into InfixExpression: +(3684) at 1", "Insert StringLiteral: \" values (1, 0.99)\"(3683) into InfixExpression: +(3684) at 2", "Insert SimpleName: conn(3687) into MethodInvocation(3689) at 0", "Insert SimpleName: createStatement(3688) into MethodInvocation(3689) at 1", "Insert StringLiteral: \"upsert into \"(3691) into InfixExpression: +(3694) at 0", "Insert SimpleName: tableName(3692) into InfixExpression: +(3694) at 1", "Insert StringLiteral: \" values (2, 1.01)\"(3693) into InfixExpression: +(3694) at 2", "Insert SimpleName: conn(3697) into MethodInvocation(3699) at 0", "Insert SimpleName: createStatement(3698) into MethodInvocation(3699) at 1", "Insert StringLiteral: \"upsert into \"(3701) into InfixExpression: +(3704) at 0", "Insert SimpleName: tableName(3702) into InfixExpression: +(3704) at 1", "Insert StringLiteral: \" values (3, 2.0)\"(3703) into InfixExpression: +(3704) at 2", "Insert SimpleName: conn(3707) into MethodInvocation(3709) at 0", "Insert SimpleName: createStatement(3708) into MethodInvocation(3709) at 1", "Insert StringLiteral: \"upsert into \"(3711) into InfixExpression: +(3714) at 0", "Insert SimpleName: tableName(3712) into InfixExpression: +(3714) at 1", "Insert StringLiteral: \" values (4, 1.001)\"(3713) into InfixExpression: +(3714) at 2", "Insert StringLiteral: \"select k1 from \"(3724) into InfixExpression: +(3749) at 0", "Insert SimpleName: tableName(3725) into InfixExpression: +(3749) at 1", "Insert StringLiteral: \" where \"(3726) into InfixExpression: +(3749) at 2", "Insert ParenthesizedExpression(3738) into InfixExpression: +(3749) at 3", "Insert StringLiteral: \" k2>1.0 \"(3739) into InfixExpression: +(3749) at 4", "Insert ParenthesizedExpression(3748) into InfixExpression: +(3749) at 5", "Insert SimpleType: ResultSet(3753) into VariableDeclarationStatement(3762) at 0", "Insert VariableDeclarationFragment(3761) into VariableDeclarationStatement(3762) at 1", "Insert SingleVariableDeclaration(3765) into EnhancedForStatement(3784) at 0", "Insert SimpleName: expectedResults(3766) into EnhancedForStatement(3784) at 1", "Insert Block(3783) into EnhancedForStatement(3784) at 2", "Insert MethodInvocation(3790) into ExpressionStatement(3791) at 0", "Insert MethodInvocation(3795) into ExpressionStatement(3796) at 0", "Move MethodInvocation(4028) into IfStatement(4894) at 0", "Move Block(4031) into IfStatement(4894) at 1", "Insert IfStatement(4893) into IfStatement(4894) at 2", "Insert SimpleType: Object(2995) into ArrayType: Object[][](2998) at 0", "Insert Dimension(2996) into ArrayType: Object[][](2998) at 1", "Insert Dimension(2997) into ArrayType: Object[][](2998) at 2", "Insert ArrayInitializer(3001) into ArrayInitializer(3020) at 0", "Insert ArrayInitializer(3004) into ArrayInitializer(3020) at 1", "Insert ArrayInitializer(3007) into ArrayInitializer(3020) at 2", "Insert ArrayInitializer(3010) into ArrayInitializer(3020) at 3", "Insert ArrayInitializer(3013) into ArrayInitializer(3020) at 4", "Insert ArrayInitializer(3016) into ArrayInitializer(3020) at 5", "Insert ArrayInitializer(3019) into ArrayInitializer(3020) at 6", "Insert SimpleType: Object(3031) into ArrayType: Object[][](3034) at 0", "Insert Dimension(3032) into ArrayType: Object[][](3034) at 1", "Insert Dimension(3033) into ArrayType: Object[][](3034) at 2", "Insert ArrayInitializer(3036) into ArrayInitializer(3043) at 0", "Insert ArrayInitializer(3038) into ArrayInitializer(3043) at 1", "Insert ArrayInitializer(3040) into ArrayInitializer(3043) at 2", "Insert ArrayInitializer(3042) into ArrayInitializer(3043) at 3", "Insert SimpleName: WhereCondition(3058) into SimpleType: WhereCondition(3059) at 0", "Insert SimpleType: Object(3093) into ArrayType: Object[][](3096) at 0", "Insert Dimension(3094) into ArrayType: Object[][](3096) at 1", "Insert Dimension(3095) into ArrayType: Object[][](3096) at 2", "Insert ArrayInitializer(3099) into ArrayInitializer(3118) at 0", "Insert ArrayInitializer(3102) into ArrayInitializer(3118) at 1", "Insert ArrayInitializer(3105) into ArrayInitializer(3118) at 2", "Insert ArrayInitializer(3108) into ArrayInitializer(3118) at 3", "Insert ArrayInitializer(3111) into ArrayInitializer(3118) at 4", "Insert ArrayInitializer(3114) into ArrayInitializer(3118) at 5", "Insert ArrayInitializer(3117) into ArrayInitializer(3118) at 6", "Insert SimpleType: Object(3129) into ArrayType: Object[][](3132) at 0", "Insert Dimension(3130) into ArrayType: Object[][](3132) at 1", "Insert Dimension(3131) into ArrayType: Object[][](3132) at 2", "Insert ArrayInitializer(3134) into ArrayInitializer(3141) at 0", "Insert ArrayInitializer(3136) into ArrayInitializer(3141) at 1", "Insert ArrayInitializer(3138) into ArrayInitializer(3141) at 2", "Insert ArrayInitializer(3140) into ArrayInitializer(3141) at 3", "Insert SimpleName: WhereCondition(3156) into SimpleType: WhereCondition(3157) at 0", "Insert SimpleType: Object(3191) into ArrayType: Object[][](3194) at 0", "Insert Dimension(3192) into ArrayType: Object[][](3194) at 1", "Insert Dimension(3193) into ArrayType: Object[][](3194) at 2", "Insert ArrayInitializer(3197) into ArrayInitializer(3219) at 0", "Insert ArrayInitializer(3200) into ArrayInitializer(3219) at 1", "Insert ArrayInitializer(3203) into ArrayInitializer(3219) at 2", "Insert ArrayInitializer(3206) into ArrayInitializer(3219) at 3", "Insert ArrayInitializer(3209) into ArrayInitializer(3219) at 4", "Insert ArrayInitializer(3212) into ArrayInitializer(3219) at 5", "Insert ArrayInitializer(3215) into ArrayInitializer(3219) at 6", "Insert ArrayInitializer(3218) into ArrayInitializer(3219) at 7", "Insert SimpleType: Object(3230) into ArrayType: Object[][](3233) at 0", "Insert Dimension(3231) into ArrayType: Object[][](3233) at 1", "Insert Dimension(3232) into ArrayType: Object[][](3233) at 2", "Insert ArrayInitializer(3235) into ArrayInitializer(3242) at 0", "Insert ArrayInitializer(3237) into ArrayInitializer(3242) at 1", "Insert ArrayInitializer(3239) into ArrayInitializer(3242) at 2", "Insert ArrayInitializer(3241) into ArrayInitializer(3242) at 3", "Insert SimpleName: WhereCondition(3257) into SimpleType: WhereCondition(3258) at 0", "Insert SimpleType: Object(3292) into ArrayType: Object[][](3295) at 0", "Insert Dimension(3293) into ArrayType: Object[][](3295) at 1", "Insert Dimension(3294) into ArrayType: Object[][](3295) at 2", "Insert ArrayInitializer(3298) into ArrayInitializer(3320) at 0", "Insert ArrayInitializer(3301) into ArrayInitializer(3320) at 1", "Insert ArrayInitializer(3304) into ArrayInitializer(3320) at 2", "Insert ArrayInitializer(3307) into ArrayInitializer(3320) at 3", "Insert ArrayInitializer(3310) into ArrayInitializer(3320) at 4", "Insert ArrayInitializer(3313) into ArrayInitializer(3320) at 5", "Insert ArrayInitializer(3316) into ArrayInitializer(3320) at 6", "Insert ArrayInitializer(3319) into ArrayInitializer(3320) at 7", "Insert SimpleType: Object(3331) into ArrayType: Object[][](3334) at 0", "Insert Dimension(3332) into ArrayType: Object[][](3334) at 1", "Insert Dimension(3333) into ArrayType: Object[][](3334) at 2", "Insert ArrayInitializer(3336) into ArrayInitializer(3343) at 0", "Insert ArrayInitializer(3338) into ArrayInitializer(3343) at 1", "Insert ArrayInitializer(3340) into ArrayInitializer(3343) at 2", "Insert ArrayInitializer(3342) into ArrayInitializer(3343) at 3", "Insert SimpleName: WhereCondition(3358) into SimpleType: WhereCondition(3359) at 0", "Insert SimpleType: Integer(3397) into ArrayType: Integer[](3399) at 0", "Insert Dimension(3398) into ArrayType: Integer[](3399) at 1", "Insert NullLiteral(3400) into ArrayInitializer(3402) at 0", "Insert NumberLiteral: 3(3401) into ArrayInitializer(3402) at 1", "Insert SimpleType: PDataType(3412) into ArrayType: PDataType[](3414) at 0", "Insert Dimension(3413) into ArrayType: PDataType[](3414) at 1", "Insert QualifiedName: PDecimal.INSTANCE(3415) into ArrayInitializer(3416) at 0", "Insert SimpleType: PDataType(3426) into SingleVariableDeclaration(3428) at 0", "Insert SimpleName: dataType(3427) into SingleVariableDeclaration(3428) at 1", "Insert EnhancedForStatement(3447) into Block(3448) at 0", "Insert SimpleType: ArrayList(3481) into ParameterizedType: ArrayList<>(3482) at 0", "Insert SimpleType: Integer(3498) into ArrayType: Integer[](3500) at 0", "Insert Dimension(3499) into ArrayType: Integer[](3500) at 1", "Insert NullLiteral(3501) into ArrayInitializer(3503) at 0", "Insert NumberLiteral: 3(3502) into ArrayInitializer(3503) at 1", "Insert SimpleType: PDataType(3513) into ArrayType: PDataType[](3515) at 0", "Insert Dimension(3514) into ArrayType: PDataType[](3515) at 1", "Insert QualifiedName: PDecimal.INSTANCE(3516) into ArrayInitializer(3517) at 0", "Insert SimpleType: PDataType(3527) into SingleVariableDeclaration(3529) at 0", "Insert SimpleName: dataType(3528) into SingleVariableDeclaration(3529) at 1", "Insert EnhancedForStatement(3557) into Block(3558) at 0", "Insert SimpleName: dataType(3614) into MethodInvocation(3616) at 0", "Insert SimpleName: getSqlTypeName(3615) into MethodInvocation(3616) at 1", "Insert ConditionalExpression(3622) into ParenthesizedExpression(3623) at 0", "Insert ConditionalExpression(3635) into ParenthesizedExpression(3636) at 0", "Insert SimpleName: getUrl(3645) into MethodInvocation(3646) at 0", "Insert SimpleName: PropertiesUtil(3647) into MethodInvocation(3650) at 0", "Insert SimpleName: deepCopy(3648) into MethodInvocation(3650) at 1", "Insert SimpleName: TEST_PROPERTIES(3649) into MethodInvocation(3650) at 2", "Insert MethodInvocation(3667) into MethodInvocation(3673) at 0", "Insert SimpleName: execute(3668) into MethodInvocation(3673) at 1", "Insert InfixExpression: +(3672) into MethodInvocation(3673) at 2", "Insert ConditionalExpression(3737) into ParenthesizedExpression(3738) at 0", "Insert ConditionalExpression(3747) into ParenthesizedExpression(3748) at 0", "Insert SimpleName: ResultSet(3752) into SimpleType: ResultSet(3753) at 0", "Insert SimpleName: rs(3754) into VariableDeclarationFragment(3761) at 0", "Insert MethodInvocation(3760) into VariableDeclarationFragment(3761) at 1", "Insert PrimitiveType: int(3763) into SingleVariableDeclaration(3765) at 0", "Insert SimpleName: k(3764) into SingleVariableDeclaration(3765) at 1", "Insert ExpressionStatement(3773) into Block(3783) at 0", "Insert ExpressionStatement(3782) into Block(3783) at 1", "Insert SimpleName: assertFalse(3785) into MethodInvocation(3790) at 0", "Insert SimpleName: tableName(3786) into MethodInvocation(3790) at 1", "Insert MethodInvocation(3789) into MethodInvocation(3790) at 2", "Insert SimpleName: conn(3793) into MethodInvocation(3795) at 0", "Insert SimpleName: close(3794) into MethodInvocation(3795) at 1", "Insert MethodInvocation(4878) into IfStatement(4893) at 0", "Insert Block(4881) into IfStatement(4893) at 1", "Move IfStatement(4032) into IfStatement(4893) at 2", "Insert SimpleName: Object(2994) into SimpleType: Object(2995) at 0", "Insert NumberLiteral: 0(2999) into ArrayInitializer(3001) at 0", "Insert NullLiteral(3000) into ArrayInitializer(3001) at 1", "Insert NumberLiteral: 1(3002) into ArrayInitializer(3004) at 0", "Insert StringLiteral: \"a\"(3003) into ArrayInitializer(3004) at 1", "Insert NumberLiteral: 2(3005) into ArrayInitializer(3007) at 0", "Insert StringLiteral: \"b\"(3006) into ArrayInitializer(3007) at 1", "Insert NumberLiteral: 3(3008) into ArrayInitializer(3010) at 0", "Insert StringLiteral: \"ba\"(3009) into ArrayInitializer(3010) at 1", "Insert NumberLiteral: 4(3011) into ArrayInitializer(3013) at 0", "Insert StringLiteral: \"baa\"(3012) into ArrayInitializer(3013) at 1", "Insert NumberLiteral: 5(3014) into ArrayInitializer(3016) at 0", "Insert StringLiteral: \"c\"(3015) into ArrayInitializer(3016) at 1", "Insert NumberLiteral: 6(3017) into ArrayInitializer(3019) at 0", "Insert StringLiteral: \"d\"(3018) into ArrayInitializer(3019) at 1", "Insert SimpleName: Object(3030) into SimpleType: Object(3031) at 0", "Insert NumberLiteral: 3(3035) into ArrayInitializer(3036) at 0", "Insert NumberLiteral: 4(3037) into ArrayInitializer(3038) at 0", "Insert NumberLiteral: 5(3039) into ArrayInitializer(3040) at 0", "Insert NumberLiteral: 6(3041) into ArrayInitializer(3042) at 0", "Insert SimpleName: Object(3092) into SimpleType: Object(3093) at 0", "Insert NumberLiteral: 0(3097) into ArrayInitializer(3099) at 0", "Insert NullLiteral(3098) into ArrayInitializer(3099) at 1", "Insert NumberLiteral: 1(3100) into ArrayInitializer(3102) at 0", "Insert StringLiteral: \"a\"(3101) into ArrayInitializer(3102) at 1", "Insert NumberLiteral: 2(3103) into ArrayInitializer(3105) at 0", "Insert StringLiteral: \"b\"(3104) into ArrayInitializer(3105) at 1", "Insert NumberLiteral: 3(3106) into ArrayInitializer(3108) at 0", "Insert StringLiteral: \"ba\"(3107) into ArrayInitializer(3108) at 1", "Insert NumberLiteral: 4(3109) into ArrayInitializer(3111) at 0", "Insert StringLiteral: \"baa\"(3110) into ArrayInitializer(3111) at 1", "Insert NumberLiteral: 5(3112) into ArrayInitializer(3114) at 0", "Insert StringLiteral: \"c\"(3113) into ArrayInitializer(3114) at 1", "Insert NumberLiteral: 6(3115) into ArrayInitializer(3117) at 0", "Insert StringLiteral: \"d\"(3116) into ArrayInitializer(3117) at 1", "Insert SimpleName: Object(3128) into SimpleType: Object(3129) at 0", "Insert NumberLiteral: 3(3133) into ArrayInitializer(3134) at 0", "Insert NumberLiteral: 4(3135) into ArrayInitializer(3136) at 0", "Insert NumberLiteral: 5(3137) into ArrayInitializer(3138) at 0", "Insert NumberLiteral: 6(3139) into ArrayInitializer(3140) at 0", "Insert SimpleName: Object(3190) into SimpleType: Object(3191) at 0", "Insert NumberLiteral: 0(3195) into ArrayInitializer(3197) at 0", "Insert NullLiteral(3196) into ArrayInitializer(3197) at 1", "Insert NumberLiteral: 1(3198) into ArrayInitializer(3200) at 0", "Insert StringLiteral: \"a\"(3199) into ArrayInitializer(3200) at 1", "Insert NumberLiteral: 2(3201) into ArrayInitializer(3203) at 0", "Insert StringLiteral: \"b\"(3202) into ArrayInitializer(3203) at 1", "Insert NumberLiteral: 3(3204) into ArrayInitializer(3206) at 0", "Insert StringLiteral: \"ba\"(3205) into ArrayInitializer(3206) at 1", "Insert NumberLiteral: 4(3207) into ArrayInitializer(3209) at 0", "Insert StringLiteral: \"bb\"(3208) into ArrayInitializer(3209) at 1", "Insert NumberLiteral: 5(3210) into ArrayInitializer(3212) at 0", "Insert StringLiteral: \"bc\"(3211) into ArrayInitializer(3212) at 1", "Insert NumberLiteral: 6(3213) into ArrayInitializer(3215) at 0", "Insert StringLiteral: \"bba\"(3214) into ArrayInitializer(3215) at 1", "Insert NumberLiteral: 7(3216) into ArrayInitializer(3218) at 0", "Insert StringLiteral: \"c\"(3217) into ArrayInitializer(3218) at 1", "Insert SimpleName: Object(3229) into SimpleType: Object(3230) at 0", "Insert NumberLiteral: 1(3234) into ArrayInitializer(3235) at 0", "Insert NumberLiteral: 2(3236) into ArrayInitializer(3237) at 0", "Insert NumberLiteral: 3(3238) into ArrayInitializer(3239) at 0", "Insert NumberLiteral: 4(3240) into ArrayInitializer(3241) at 0", "Insert SimpleName: Object(3291) into SimpleType: Object(3292) at 0", "Insert NumberLiteral: 0(3296) into ArrayInitializer(3298) at 0", "Insert NullLiteral(3297) into ArrayInitializer(3298) at 1", "Insert NumberLiteral: 1(3299) into ArrayInitializer(3301) at 0", "Insert StringLiteral: \"a\"(3300) into ArrayInitializer(3301) at 1", "Insert NumberLiteral: 2(3302) into ArrayInitializer(3304) at 0", "Insert StringLiteral: \"b\"(3303) into ArrayInitializer(3304) at 1", "Insert NumberLiteral: 3(3305) into ArrayInitializer(3307) at 0", "Insert StringLiteral: \"ba\"(3306) into ArrayInitializer(3307) at 1", "Insert NumberLiteral: 4(3308) into ArrayInitializer(3310) at 0", "Insert StringLiteral: \"bb\"(3309) into ArrayInitializer(3310) at 1", "Insert NumberLiteral: 5(3311) into ArrayInitializer(3313) at 0", "Insert StringLiteral: \"bc\"(3312) into ArrayInitializer(3313) at 1", "Insert NumberLiteral: 6(3314) into ArrayInitializer(3316) at 0", "Insert StringLiteral: \"bba\"(3315) into ArrayInitializer(3316) at 1", "Insert NumberLiteral: 7(3317) into ArrayInitializer(3319) at 0", "Insert StringLiteral: \"c\"(3318) into ArrayInitializer(3319) at 1", "Insert SimpleName: Object(3330) into SimpleType: Object(3331) at 0", "Insert NumberLiteral: 1(3335) into ArrayInitializer(3336) at 0", "Insert NumberLiteral: 2(3337) into ArrayInitializer(3338) at 0", "Insert NumberLiteral: 3(3339) into ArrayInitializer(3340) at 0", "Insert NumberLiteral: 4(3341) into ArrayInitializer(3342) at 0", "Insert SimpleName: Integer(3396) into SimpleType: Integer(3397) at 0", "Insert SimpleName: PDataType(3411) into SimpleType: PDataType(3412) at 0", "Insert SimpleName: PDataType(3425) into SimpleType: PDataType(3426) at 0", "Insert SingleVariableDeclaration(3433) into EnhancedForStatement(3447) at 0", "Insert MethodInvocation(3436) into EnhancedForStatement(3447) at 1", "Insert Block(3446) into EnhancedForStatement(3447) at 2", "Insert SimpleName: ArrayList(3480) into SimpleType: ArrayList(3481) at 0", "Insert SimpleName: Integer(3497) into SimpleType: Integer(3498) at 0", "Insert SimpleName: PDataType(3512) into SimpleType: PDataType(3513) at 0", "Insert SimpleName: PDataType(3526) into SimpleType: PDataType(3527) at 0", "Insert SingleVariableDeclaration(3534) into EnhancedForStatement(3557) at 0", "Insert MethodInvocation(3537) into EnhancedForStatement(3557) at 1", "Insert Block(3556) into EnhancedForStatement(3557) at 2", "Insert MethodInvocation(3619) into ConditionalExpression(3622) at 0", "Insert StringLiteral: \" not null\"(3620) into ConditionalExpression(3622) at 1", "Insert StringLiteral: \"\"(3621) into ConditionalExpression(3622) at 2", "Insert InfixExpression: ==(3629) into ConditionalExpression(3635) at 0", "Insert StringLiteral: \"\"(3630) into ConditionalExpression(3635) at 1", "Insert ParenthesizedExpression(3634) into ConditionalExpression(3635) at 2", "Insert SimpleName: conn(3665) into MethodInvocation(3667) at 0", "Insert SimpleName: createStatement(3666) into MethodInvocation(3667) at 1", "Insert StringLiteral: \"upsert into \"(3669) into InfixExpression: +(3672) at 0", "Insert SimpleName: tableName(3670) into InfixExpression: +(3672) at 1", "Insert StringLiteral: \" values (0, null)\"(3671) into InfixExpression: +(3672) at 2", "Insert InfixExpression: >(3731) into ConditionalExpression(3737) at 0", "Insert ParenthesizedExpression(3735) into ConditionalExpression(3737) at 1", "Insert StringLiteral: \"\"(3736) into ConditionalExpression(3737) at 2", "Insert InfixExpression: ==(3744) into ConditionalExpression(3747) at 0", "Insert StringLiteral: \"\"(3745) into ConditionalExpression(3747) at 1", "Insert SimpleName: orderBy(3746) into ConditionalExpression(3747) at 2", "Insert MethodInvocation(3757) into MethodInvocation(3760) at 0", "Insert SimpleName: executeQuery(3758) into MethodInvocation(3760) at 1", "Insert SimpleName: query(3759) into MethodInvocation(3760) at 2", "Insert MethodInvocation(3772) into ExpressionStatement(3773) at 0", "Insert MethodInvocation(3781) into ExpressionStatement(3782) at 0", "Insert SimpleName: rs(3787) into MethodInvocation(3789) at 0", "Insert SimpleName: next(3788) into MethodInvocation(3789) at 1", "Insert SimpleName: operator(4875) into MethodInvocation(4878) at 0", "Insert SimpleName: equals(4876) into MethodInvocation(4878) at 1", "Insert StringLiteral: \">=\"(4877) into MethodInvocation(4878) at 2", "Insert ReturnStatement(4880) into Block(4881) at 0", "Insert MethodInvocation(4885) into IfStatement(4892) at 0", "Insert Block(4888) into IfStatement(4892) at 1", "Insert Block(4891) into IfStatement(4892) at 2", "Insert SimpleType: SortOrder(3431) into SingleVariableDeclaration(3433) at 0", "Insert SimpleName: sortOrder(3432) into SingleVariableDeclaration(3433) at 1", "Insert SimpleName: SortOrder(3434) into MethodInvocation(3436) at 0", "Insert SimpleName: values(3435) into MethodInvocation(3436) at 1", "Insert ExpressionStatement(3445) into Block(3446) at 0", "Insert SimpleType: SortOrder(3532) into SingleVariableDeclaration(3534) at 0", "Insert SimpleName: sortOrder(3533) into SingleVariableDeclaration(3534) at 1", "Insert SimpleName: SortOrder(3535) into MethodInvocation(3537) at 0", "Insert SimpleName: values(3536) into MethodInvocation(3537) at 1", "Insert ExpressionStatement(3546) into Block(3556) at 0", "Insert ExpressionStatement(3555) into Block(3556) at 1", "Insert SimpleName: dataType(3617) into MethodInvocation(3619) at 0", "Insert SimpleName: isFixedWidth(3618) into MethodInvocation(3619) at 1", "Insert SimpleName: saltBuckets(3627) into InfixExpression: ==(3629) at 0", "Insert NullLiteral(3628) into InfixExpression: ==(3629) at 1", "Insert InfixExpression: +(3633) into ParenthesizedExpression(3634) at 0", "Insert MethodInvocation(3729) into InfixExpression: >(3731) at 0", "Insert NumberLiteral: 0(3730) into InfixExpression: >(3731) at 1", "Insert InfixExpression: +(3734) into ParenthesizedExpression(3735) at 0", "Insert MethodInvocation(3742) into InfixExpression: ==(3744) at 0", "Insert NumberLiteral: 0(3743) into InfixExpression: ==(3744) at 1", "Insert SimpleName: conn(3755) into MethodInvocation(3757) at 0", "Insert SimpleName: createStatement(3756) into MethodInvocation(3757) at 1", "Insert SimpleName: assertTrue(3767) into MethodInvocation(3772) at 0", "Insert SimpleName: tableName(3768) into MethodInvocation(3772) at 1", "Insert MethodInvocation(3771) into MethodInvocation(3772) at 2", "Insert SimpleName: assertEquals(3774) into MethodInvocation(3781) at 0", "Insert SimpleName: tableName(3775) into MethodInvocation(3781) at 1", "Insert SimpleName: k(3776) into MethodInvocation(3781) at 2", "Insert MethodInvocation(3780) into MethodInvocation(3781) at 3", "Insert StringLiteral: \"<=\"(4879) into ReturnStatement(4880) at 0", "Insert SimpleName: operator(4882) into MethodInvocation(4885) at 0", "Insert SimpleName: equals(4883) into MethodInvocation(4885) at 1", "Insert StringLiteral: \"<=\"(4884) into MethodInvocation(4885) at 2", "Insert ReturnStatement(4887) into Block(4888) at 0", "Move ReturnStatement(4035) into Block(4891) at 0", "Insert SimpleName: SortOrder(3430) into SimpleType: SortOrder(3431) at 0", "Insert MethodInvocation(3444) into ExpressionStatement(3445) at 0", "Insert SimpleName: SortOrder(3531) into SimpleType: SortOrder(3532) at 0", "Insert MethodInvocation(3545) into ExpressionStatement(3546) at 0", "Insert MethodInvocation(3554) into ExpressionStatement(3555) at 0", "Insert StringLiteral: \" SALT_BUCKETS= \"(3631) into InfixExpression: +(3633) at 0", "Insert SimpleName: saltBuckets(3632) into InfixExpression: +(3633) at 1", "Insert SimpleName: whereClause(3727) into MethodInvocation(3729) at 0", "Insert SimpleName: length(3728) into MethodInvocation(3729) at 1", "Insert SimpleName: whereClause(3732) into InfixExpression: +(3734) at 0", "Insert StringLiteral: \" AND \"(3733) into InfixExpression: +(3734) at 1", "Insert SimpleName: orderBy(3740) into MethodInvocation(3742) at 0", "Insert SimpleName: length(3741) into MethodInvocation(3742) at 1", "Insert SimpleName: rs(3769) into MethodInvocation(3771) at 0", "Insert SimpleName: next(3770) into MethodInvocation(3771) at 1", "Insert SimpleName: rs(3777) into MethodInvocation(3780) at 0", "Insert SimpleName: getInt(3778) into MethodInvocation(3780) at 1", "Insert NumberLiteral: 1(3779) into MethodInvocation(3780) at 2", "Insert StringLiteral: \">=\"(4886) into ReturnStatement(4887) at 0", "Insert SimpleName: testCompareCompositeKey(3437) into MethodInvocation(3444) at 0", "Insert SimpleName: saltBucket(3438) into MethodInvocation(3444) at 1", "Insert SimpleName: dataType(3439) into MethodInvocation(3444) at 2", "Insert SimpleName: sortOrder(3440) into MethodInvocation(3444) at 3", "Insert StringLiteral: \"\"(3441) into MethodInvocation(3444) at 4", "Insert SimpleName: expectedResults(3442) into MethodInvocation(3444) at 5", "Insert StringLiteral: \"\"(3443) into MethodInvocation(3444) at 6", "Insert SimpleName: testCompareCompositeKey(3538) into MethodInvocation(3545) at 0", "Insert SimpleName: saltBucket(3539) into MethodInvocation(3545) at 1", "Insert SimpleName: dataType(3540) into MethodInvocation(3545) at 2", "Insert SimpleName: sortOrder(3541) into MethodInvocation(3545) at 3", "Insert StringLiteral: \"k1 in (2,4)\"(3542) into MethodInvocation(3545) at 4", "Insert SimpleName: expectedResults(3543) into MethodInvocation(3545) at 5", "Insert StringLiteral: \"\"(3544) into MethodInvocation(3545) at 6", "Insert SimpleName: testCompareCompositeKey(3547) into MethodInvocation(3554) at 0", "Insert SimpleName: saltBucket(3548) into MethodInvocation(3554) at 1", "Insert SimpleName: dataType(3549) into MethodInvocation(3554) at 2", "Insert SimpleName: sortOrder(3550) into MethodInvocation(3554) at 3", "Insert StringLiteral: \"k1 in (2,4)\"(3551) into MethodInvocation(3554) at 4", "Insert SimpleName: rExpectedResults(3552) into MethodInvocation(3554) at 5", "Insert StringLiteral: \"ORDER BY k1 DESC\"(3553) into MethodInvocation(3554) at 6", "Delete IfStatement(4033)"]}}, {"ScanRanges_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 19", "operations": ["INS ImportDeclaration to CompilationUnit at 19", "INS QualifiedName: org.apache.phoenix.util.ScanUtil.BytesComparator to ImportDeclaration at 0"]}, {"root": "INS VariableDeclarationStatement to Block at 4", "operations": ["INS VariableDeclarationStatement to Block at 4", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: getField to MethodInvocation at 1", "INS SimpleType: BytesComparator to VariableDeclarationStatement at 0", "INS SimpleName: ScanUtil to MethodInvocation at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: getComparator to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleName: comparator to VariableDeclarationFragment at 0", "INS SimpleName: BytesComparator to SimpleType: BytesComparator at 0", "INS QualifiedName: SchemaUtil.VAR_BINARY_SCHEMA to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: - to MethodInvocation at 4"]}, {"root": "INS SimpleName: comparator to MethodInvocation at 7", "operations": ["INS SimpleName: comparator to MethodInvocation at 7"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV InfixExpression: - to MethodInvocation at 4"]}, {"root": "INS SimpleName: comparator to MethodInvocation at 6", "operations": ["INS SimpleName: comparator to MethodInvocation at 6"]}]}}, {"ScanRanges_diff": {"operations": ["Insert ImportDeclaration(39) into CompilationUnit(2401) at 19", "Insert QualifiedName: org.apache.phoenix.util.ScanUtil.BytesComparator(38) into ImportDeclaration(39) at 0", "Insert VariableDeclarationStatement(371) into Block(465) at 4", "Insert SimpleType: BytesComparator(361) into VariableDeclarationStatement(371) at 0", "Insert VariableDeclarationFragment(370) into VariableDeclarationStatement(371) at 1", "Insert SimpleName: BytesComparator(360) into SimpleType: BytesComparator(361) at 0", "Insert SimpleName: comparator(362) into VariableDeclarationFragment(370) at 0", "Insert MethodInvocation(369) into VariableDeclarationFragment(370) at 1", "Insert SimpleName: ScanUtil(363) into MethodInvocation(369) at 0", "Insert SimpleName: getComparator(364) into MethodInvocation(369) at 1", "Insert MethodInvocation(368) into MethodInvocation(369) at 2", "Insert QualifiedName: SchemaUtil.VAR_BINARY_SCHEMA(365) into MethodInvocation(368) at 0", "Insert SimpleName: getField(366) into MethodInvocation(368) at 1", "Insert NumberLiteral: 0(367) into MethodInvocation(368) at 2", "Move InfixExpression: -(381) into MethodInvocation(387) at 4", "Insert SimpleName: comparator(386) into MethodInvocation(387) at 6", "Move InfixExpression: -(370) into MethodInvocation(399) at 4", "Insert SimpleName: comparator(398) into MethodInvocation(399) at 6"]}}, {"DescVarLengthFastByteComparisons_cluster": {"actions": [{"root": "INS IfStatement to Block at 1", "operations": ["INS NumberLiteral: 0 to InfixExpression: == at 1", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS NumberLiteral: 0 to InfixExpression: != at 1", "INS InfixExpression: != to InfixExpression: && at 1", "INS PrefixExpression: - to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS InfixExpression: && to IfStatement at 0", "INS IfStatement to Block at 1", "INS InfixExpression: == to InfixExpression: && at 0", "INS SimpleName: length2 to InfixExpression: != at 0", "INS SimpleName: length1 to InfixExpression: == at 0", "INS ReturnStatement to Block at 0"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS IfStatement to Block at 2", "INS InfixExpression: != to InfixExpression: && at 1", "INS InfixExpression: && to IfStatement at 0", "INS NumberLiteral: 0 to InfixExpression: != at 1", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: length2 to InfixExpression: == at 0", "INS NumberLiteral: 1 to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS SimpleName: length1 to InfixExpression: != at 0", "INS InfixExpression: == to InfixExpression: && at 0"]}, {"root": "INS IfStatement to Block at 1", "operations": ["INS InfixExpression: && to IfStatement at 0", "INS SimpleName: length1 to InfixExpression: == at 0", "INS NumberLiteral: 0 to InfixExpression: != at 1", "INS InfixExpression: == to InfixExpression: && at 0", "INS ReturnStatement to Block at 0", "INS PrefixExpression: - to ReturnStatement at 0", "INS NumberLiteral: 0 to InfixExpression: == at 1", "INS NumberLiteral: 1 to PrefixExpression: - at 0", "INS IfStatement to Block at 1", "INS SimpleName: length2 to InfixExpression: != at 0", "INS InfixExpression: != to InfixExpression: && at 1", "INS Block to IfStatement at 1"]}, {"root": "INS IfStatement to Block at 2", "operations": ["INS NumberLiteral: 0 to InfixExpression: == at 1", "INS SimpleName: length1 to InfixExpression: != at 0", "INS IfStatement to Block at 2", "INS InfixExpression: == to InfixExpression: && at 0", "INS NumberLiteral: 1 to ReturnStatement at 0", "INS Block to IfStatement at 1", "INS NumberLiteral: 0 to InfixExpression: != at 1", "INS InfixExpression: && to IfStatement at 0", "INS InfixExpression: != to InfixExpression: && at 1", "INS ReturnStatement to Block at 0", "INS SimpleName: length2 to InfixExpression: == at 0"]}]}}, {"DescVarLengthFastByteComparisons_diff": {"operations": ["Insert IfStatement(300) into Block(380) at 1", "Insert IfStatement(311) into Block(380) at 2", "Insert IfStatement(619) into Block(857) at 1", "Insert IfStatement(630) into Block(857) at 2", "Insert InfixExpression: &&(295) into IfStatement(300) at 0", "Insert Block(299) into IfStatement(300) at 1", "Insert InfixExpression: &&(307) into IfStatement(311) at 0", "Insert Block(310) into IfStatement(311) at 1", "Insert InfixExpression: &&(614) into IfStatement(619) at 0", "Insert Block(618) into IfStatement(619) at 1", "Insert InfixExpression: &&(626) into IfStatement(630) at 0", "Insert Block(629) into IfStatement(630) at 1", "Insert InfixExpression: ==(291) into InfixExpression: &&(295) at 0", "Insert InfixExpression: !=(294) into InfixExpression: &&(295) at 1", "Insert ReturnStatement(298) into Block(299) at 0", "Insert InfixExpression: ==(303) into InfixExpression: &&(307) at 0", "Insert InfixExpression: !=(306) into InfixExpression: &&(307) at 1", "Insert ReturnStatement(309) into Block(310) at 0", "Insert InfixExpression: ==(610) into InfixExpression: &&(614) at 0", "Insert InfixExpression: !=(613) into InfixExpression: &&(614) at 1", "Insert ReturnStatement(617) into Block(618) at 0", "Insert InfixExpression: ==(622) into InfixExpression: &&(626) at 0", "Insert InfixExpression: !=(625) into InfixExpression: &&(626) at 1", "Insert ReturnStatement(628) into Block(629) at 0", "Insert SimpleName: length1(289) into InfixExpression: ==(291) at 0", "Insert NumberLiteral: 0(290) into InfixExpression: ==(291) at 1", "Insert SimpleName: length2(292) into InfixExpression: !=(294) at 0", "Insert NumberLiteral: 0(293) into InfixExpression: !=(294) at 1", "Insert PrefixExpression: -(297) into ReturnStatement(298) at 0", "Insert SimpleName: length2(301) into InfixExpression: ==(303) at 0", "Insert NumberLiteral: 0(302) into InfixExpression: ==(303) at 1", "Insert SimpleName: length1(304) into InfixExpression: !=(306) at 0", "Insert NumberLiteral: 0(305) into InfixExpression: !=(306) at 1", "Insert NumberLiteral: 1(308) into ReturnStatement(309) at 0", "Insert SimpleName: length1(608) into InfixExpression: ==(610) at 0", "Insert NumberLiteral: 0(609) into InfixExpression: ==(610) at 1", "Insert SimpleName: length2(611) into InfixExpression: !=(613) at 0", "Insert NumberLiteral: 0(612) into InfixExpression: !=(613) at 1", "Insert PrefixExpression: -(616) into ReturnStatement(617) at 0", "Insert SimpleName: length2(620) into InfixExpression: ==(622) at 0", "Insert NumberLiteral: 0(621) into InfixExpression: ==(622) at 1", "Insert SimpleName: length1(623) into InfixExpression: !=(625) at 0", "Insert NumberLiteral: 0(624) into InfixExpression: !=(625) at 1", "Insert NumberLiteral: 1(627) into ReturnStatement(628) at 0", "Insert NumberLiteral: 1(296) into PrefixExpression: -(297) at 0", "Insert NumberLiteral: 1(615) into PrefixExpression: -(616) at 0"]}}, {"SkipScanFilter_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 23", "operations": ["INS QualifiedName: org.apache.phoenix.util.ScanUtil.BytesComparator to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 23"]}, {"root": "INS VariableDeclarationStatement to Block at 0", "operations": ["INS SimpleName: schema to MethodInvocation at 0", "INS SimpleName: getField to MethodInvocation at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: i to MethodInvocation at 3", "INS SimpleName: getRowKeyPosition to MethodInvocation at 1", "INS SimpleName: BytesComparator to SimpleType: BytesComparator at 0", "INS SimpleName: slotSpan to MethodInvocation at 2", "INS VariableDeclarationStatement to Block at 0", "INS SimpleName: getComparator to MethodInvocation at 1", "INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS MethodInvocation to MethodInvocation at 2", "INS SimpleType: BytesComparator to VariableDeclarationStatement at 0", "INS SimpleName: ScanUtil to MethodInvocation at 0", "INS SimpleName: ScanUtil to MethodInvocation at 0", "INS SimpleName: comparator to VariableDeclarationFragment at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 5", "operations": ["INS MethodInvocation to MethodInvocation at 5", "INS SimpleName: getField to MethodInvocation at 1", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: schema to MethodInvocation at 0"]}, {"root": "INS MethodInvocation to MethodInvocation at 5", "operations": ["INS SimpleName: schema to MethodInvocation at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 5", "INS SimpleName: getField to MethodInvocation at 1"]}, {"root": "INS MethodInvocation to MethodInvocation at 3", "operations": ["INS MethodInvocation to MethodInvocation at 2", "INS MethodInvocation to MethodInvocation at 3", "INS SimpleName: schema to MethodInvocation at 0", "INS NumberLiteral: 0 to MethodInvocation at 2", "INS SimpleName: ScanUtil to MethodInvocation at 0", "INS SimpleName: getComparator to MethodInvocation at 1", "INS SimpleName: getField to MethodInvocation at 1"]}, {"root": "INS SimpleName: comparator to MethodInvocation at 3", "operations": ["INS SimpleName: comparator to MethodInvocation at 3"]}, {"root": "INS SimpleName: comparator to MethodInvocation at 3", "operations": ["INS SimpleName: comparator to MethodInvocation at 3"]}]}}, {"SkipScanFilter_diff": {"operations": ["Insert ImportDeclaration(47) into CompilationUnit(2830) at 23", "Insert QualifiedName: org.apache.phoenix.util.ScanUtil.BytesComparator(46) into ImportDeclaration(47) at 0", "Insert VariableDeclarationStatement(1615) into Block(1937) at 0", "Insert SimpleType: BytesComparator(1601) into VariableDeclarationStatement(1615) at 0", "Insert VariableDeclarationFragment(1614) into VariableDeclarationStatement(1615) at 1", "Insert SimpleName: BytesComparator(1600) into SimpleType: BytesComparator(1601) at 0", "Insert SimpleName: comparator(1602) into VariableDeclarationFragment(1614) at 0", "Insert MethodInvocation(1613) into VariableDeclarationFragment(1614) at 1", "Insert MethodInvocation(830) into MethodInvocation(831) at 5", "Insert MethodInvocation(896) into MethodInvocation(897) at 5", "Insert SimpleName: ScanUtil(1603) into MethodInvocation(1613) at 0", "Insert SimpleName: getComparator(1604) into MethodInvocation(1613) at 1", "Insert MethodInvocation(1612) into MethodInvocation(1613) at 2", "Insert SimpleName: schema(827) into MethodInvocation(830) at 0", "Insert SimpleName: getField(828) into MethodInvocation(830) at 1", "Insert NumberLiteral: 0(829) into MethodInvocation(830) at 2", "Insert SimpleName: schema(893) into MethodInvocation(896) at 0", "Insert SimpleName: getField(894) into MethodInvocation(896) at 1", "Insert NumberLiteral: 0(895) into MethodInvocation(896) at 2", "Insert MethodInvocation(939) into MethodInvocation(940) at 3", "Insert SimpleName: schema(1605) into MethodInvocation(1612) at 0", "Insert SimpleName: getField(1606) into MethodInvocation(1612) at 1", "Insert MethodInvocation(1611) into MethodInvocation(1612) at 2", "Insert SimpleName: comparator(1637) into MethodInvocation(1638) at 3", "Insert SimpleName: comparator(1855) into MethodInvocation(1856) at 3", "Insert SimpleName: ScanUtil(933) into MethodInvocation(939) at 0", "Insert SimpleName: getComparator(934) into MethodInvocation(939) at 1", "Insert MethodInvocation(938) into MethodInvocation(939) at 2", "Insert SimpleName: ScanUtil(1607) into MethodInvocation(1611) at 0", "Insert SimpleName: getRowKeyPosition(1608) into MethodInvocation(1611) at 1", "Insert SimpleName: slotSpan(1609) into MethodInvocation(1611) at 2", "Insert SimpleName: i(1610) into MethodInvocation(1611) at 3", "Insert SimpleName: schema(935) into MethodInvocation(938) at 0", "Insert SimpleName: getField(936) into MethodInvocation(938) at 1", "Insert NumberLiteral: 0(937) into MethodInvocation(938) at 2"]}}, {"KeyRange_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 15", "operations": ["INS ImportDeclaration to CompilationUnit at 15", "INS QualifiedName: org.apache.phoenix.util.ScanUtil.BytesComparator to ImportDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: comparator to SingleVariableDeclaration at 1", "INS SimpleName: BytesComparator to SimpleType: BytesComparator at 0", "INS SimpleType: BytesComparator to SingleVariableDeclaration at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: comparator to SingleVariableDeclaration at 1", "INS SimpleType: BytesComparator to SingleVariableDeclaration at 0", "INS SimpleName: BytesComparator to SimpleType: BytesComparator at 0"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 5", "operations": ["INS SimpleName: BytesComparator to SimpleType: BytesComparator at 0", "INS SimpleType: BytesComparator to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 5", "INS SimpleName: comparator to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleType: BytesComparator to SingleVariableDeclaration at 0", "INS SimpleName: BytesComparator to SimpleType: BytesComparator at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4", "INS SimpleName: comparator to SingleVariableDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SimpleType: BytesComparator to SingleVariableDeclaration at 0", "INS SimpleName: comparator to SingleVariableDeclaration at 1", "INS SimpleName: BytesComparator to SimpleType: BytesComparator at 0", "INS SingleVariableDeclaration to MethodDeclaration at 7"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleType: BytesComparator to SingleVariableDeclaration at 0", "INS SimpleName: comparator to SingleVariableDeclaration at 1", "INS SimpleName: BytesComparator to SimpleType: BytesComparator at 0", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 8", "operations": ["INS SimpleName: comparator to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 8", "INS SimpleType: BytesComparator to SingleVariableDeclaration at 0", "INS SimpleName: BytesComparator to SimpleType: BytesComparator at 0"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 4", "operations": ["INS SimpleType: BytesComparator to SingleVariableDeclaration at 0", "INS SimpleName: BytesComparator to SimpleType: BytesComparator at 0", "INS SimpleName: comparator to SingleVariableDeclaration at 1", "INS SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 6", "operations": ["INS SimpleType: BytesComparator to SingleVariableDeclaration at 0", "INS SingleVariableDeclaration to MethodDeclaration at 6", "INS SimpleName: BytesComparator to SimpleType: BytesComparator at 0", "INS SimpleName: comparator to SingleVariableDeclaration at 1"]}, {"root": "INS SingleVariableDeclaration to MethodDeclaration at 7", "operations": ["INS SingleVariableDeclaration to MethodDeclaration at 7", "INS SimpleType: BytesComparator to SingleVariableDeclaration at 0", "INS SimpleName: BytesComparator to SimpleType: BytesComparator at 0", "INS SimpleName: comparator to SingleVariableDeclaration at 1"]}, {"root": "INS TagElement: @param to Javadoc at 5", "operations": ["INS TagElement: @param to Javadoc at 5", "INS SimpleName: comparator to TagElement: @param at 0", "INS TextElement:  comparator used to do compare the byte array using offset and length to TagElement: @param at 1"]}, {"root": "INS SimpleName: comparator to MethodInvocation at 5", "operations": ["INS SimpleName: comparator to MethodInvocation at 5"]}, {"root": "INS SimpleName: comparator to MethodInvocation at 3", "operations": ["INS SimpleName: comparator to MethodInvocation at 3"]}, {"root": "INS SimpleName: comparator to MethodInvocation at 5", "operations": ["INS SimpleName: comparator to MethodInvocation at 5"]}, {"root": "INS SimpleName: comparator to MethodInvocation at 3", "operations": ["INS SimpleName: comparator to MethodInvocation at 3"]}, {"root": "INS SimpleName: comparator to MethodInvocation at 5", "operations": ["INS SimpleName: comparator to MethodInvocation at 5"]}, {"root": "INS SimpleName: comparator to MethodInvocation at 4", "operations": ["INS SimpleName: comparator to MethodInvocation at 4"]}, {"root": "INS SimpleName: comparator to MethodInvocation at 4", "operations": ["INS SimpleName: comparator to MethodInvocation at 4"]}, {"root": "INS SimpleName: comparator to MethodInvocation at 5", "operations": ["INS SimpleName: comparator to MethodInvocation at 5"]}, {"root": "UPDATE from Bytes to comparator", "operations": ["UPD SimpleName: Bytes from Bytes to comparator", "UPD SimpleName: Bytes from Bytes to comparator"]}, {"root": "UPDATE from compareTo to compare", "operations": ["UPD SimpleName: compareTo from compareTo to compare", "UPD SimpleName: compareTo from compareTo to compare"]}]}}, {"KeyRange_diff": {"operations": ["Insert ImportDeclaration(31) into CompilationUnit(2655) at 15", "Insert QualifiedName: org.apache.phoenix.util.ScanUtil.BytesComparator(30) into ImportDeclaration(31) at 0", "Insert SingleVariableDeclaration(704) into MethodDeclaration(720) at 5", "Insert SingleVariableDeclaration(731) into MethodDeclaration(739) at 4", "Insert SingleVariableDeclaration(753) into MethodDeclaration(769) at 5", "Insert SingleVariableDeclaration(780) into MethodDeclaration(788) at 4", "Move SingleVariableDeclaration(797) into MethodDeclaration(816) at 3", "Insert SingleVariableDeclaration(806) into MethodDeclaration(816) at 6", "Move SingleVariableDeclaration(774) into MethodDeclaration(837) at 3", "Insert SingleVariableDeclaration(828) into MethodDeclaration(837) at 4", "Insert SingleVariableDeclaration(880) into MethodDeclaration(930) at 8", "Move SingleVariableDeclaration(915) into MethodDeclaration(951) at 3", "Insert SingleVariableDeclaration(942) into MethodDeclaration(951) at 4", "Move SingleVariableDeclaration(899) into MethodDeclaration(979) at 3", "Insert SingleVariableDeclaration(969) into MethodDeclaration(979) at 6", "Insert SingleVariableDeclaration(1000) into MethodDeclaration(1050) at 7", "Insert SimpleType: BytesComparator(702) into SingleVariableDeclaration(704) at 0", "Insert SimpleName: comparator(703) into SingleVariableDeclaration(704) at 1", "Insert SimpleType: BytesComparator(729) into SingleVariableDeclaration(731) at 0", "Insert SimpleName: comparator(730) into SingleVariableDeclaration(731) at 1", "Insert SimpleType: BytesComparator(751) into SingleVariableDeclaration(753) at 0", "Insert SimpleName: comparator(752) into SingleVariableDeclaration(753) at 1", "Insert SimpleType: BytesComparator(778) into SingleVariableDeclaration(780) at 0", "Insert SimpleName: comparator(779) into SingleVariableDeclaration(780) at 1", "Insert SimpleType: BytesComparator(804) into SingleVariableDeclaration(806) at 0", "Insert SimpleName: comparator(805) into SingleVariableDeclaration(806) at 1", "Insert SimpleType: BytesComparator(826) into SingleVariableDeclaration(828) at 0", "Insert SimpleName: comparator(827) into SingleVariableDeclaration(828) at 1", "Insert TagElement: @param(854) into Javadoc(859) at 5", "Insert SimpleType: BytesComparator(878) into SingleVariableDeclaration(880) at 0", "Insert SimpleName: comparator(879) into SingleVariableDeclaration(880) at 1", "Insert SimpleType: BytesComparator(940) into SingleVariableDeclaration(942) at 0", "Insert SimpleName: comparator(941) into SingleVariableDeclaration(942) at 1", "Insert SimpleType: BytesComparator(967) into SingleVariableDeclaration(969) at 0", "Insert SimpleName: comparator(968) into SingleVariableDeclaration(969) at 1", "Insert SimpleType: BytesComparator(998) into SingleVariableDeclaration(1000) at 0", "Insert SimpleName: comparator(999) into SingleVariableDeclaration(1000) at 1", "Insert SimpleName: BytesComparator(701) into SimpleType: BytesComparator(702) at 0", "Insert SimpleName: BytesComparator(728) into SimpleType: BytesComparator(729) at 0", "Insert SimpleName: BytesComparator(750) into SimpleType: BytesComparator(751) at 0", "Insert SimpleName: BytesComparator(777) into SimpleType: BytesComparator(778) at 0", "Insert SimpleName: BytesComparator(803) into SimpleType: BytesComparator(804) at 0", "Insert SimpleName: BytesComparator(825) into SimpleType: BytesComparator(826) at 0", "Insert SimpleName: comparator(852) into TagElement: @param(854) at 0", "Insert TextElement:  comparator used to do compare the byte array using offset and length(853) into TagElement: @param(854) at 1", "Insert SimpleName: BytesComparator(877) into SimpleType: BytesComparator(878) at 0", "Insert SimpleName: BytesComparator(939) into SimpleType: BytesComparator(940) at 0", "Insert SimpleName: BytesComparator(966) into SimpleType: BytesComparator(967) at 0", "Insert SimpleName: BytesComparator(997) into SimpleType: BytesComparator(998) at 0", "Insert SimpleName: comparator(716) into MethodInvocation(717) at 5", "Insert SimpleName: comparator(735) into MethodInvocation(736) at 3", "Insert SimpleName: comparator(765) into MethodInvocation(766) at 5", "Insert SimpleName: comparator(784) into MethodInvocation(785) at 3", "Insert SimpleName: comparator(812) into MethodInvocation(813) at 5", "Insert SimpleName: comparator(833) into MethodInvocation(834) at 4", "Insert SimpleName: comparator(947) into MethodInvocation(948) at 4", "Insert SimpleName: comparator(975) into MethodInvocation(976) at 5", "Update SimpleName: Bytes(855) to comparator", "Update SimpleName: compareTo(856) to compare", "Update SimpleName: Bytes(960) to comparator", "Update SimpleName: compareTo(961) to compare"]}}, {"PDataType_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 19", "operations": ["INS ImportDeclaration to CompilationUnit at 19", "INS QualifiedName: org.apache.phoenix.util.ScanUtil to ImportDeclaration at 0"]}, {"root": "MOVE from InfixExpression: *", "operations": ["MOV MethodInvocation to InfixExpression: * at 2"]}, {"root": "INS MethodInvocation to MethodInvocation at 0", "operations": ["INS MethodInvocation to MethodInvocation at 0", "INS SimpleName: length2 to InfixExpression: == at 1", "INS SimpleName: getComparator to MethodInvocation at 1", "INS SimpleName: so1 to MethodInvocation at 3", "INS SimpleName: length1 to InfixExpression: == at 0", "INS InfixExpression: == to MethodInvocation at 2"]}, {"root": "UPDATE from compareTo to compare", "operations": ["UPD SimpleName: compareTo from compareTo to compare"]}, {"root": "UPDATE from Bytes to ScanUtil", "operations": ["UPD SimpleName: Bytes from Bytes to ScanUtil"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: Bytes to MethodInvocation at 0"]}]}}, {"PDataType_diff": {"operations": ["Insert ImportDeclaration(39) into CompilationUnit(5627) at 19", "Insert QualifiedName: org.apache.phoenix.util.ScanUtil(38) into ImportDeclaration(39) at 0", "Move MethodInvocation(3747) into InfixExpression: *(3764) at 2", "Insert MethodInvocation(3755) into MethodInvocation(3763) at 0", "Update SimpleName: compareTo(3740) to compare", "Update SimpleName: Bytes(3739) to ScanUtil", "Move SimpleName: Bytes(3739) into MethodInvocation(3755) at 0", "Insert SimpleName: getComparator(3750) into MethodInvocation(3755) at 1", "Insert InfixExpression: ==(3753) into MethodInvocation(3755) at 2", "Insert SimpleName: so1(3754) into MethodInvocation(3755) at 3", "Insert SimpleName: length1(3751) into InfixExpression: ==(3753) at 0", "Insert SimpleName: length2(3752) into InfixExpression: ==(3753) at 1"]}}], "commit_stats": [{"total_files": 11, "deleted_files": 0, "testing": "True", "maintenance": "True", "build": "False"}]}