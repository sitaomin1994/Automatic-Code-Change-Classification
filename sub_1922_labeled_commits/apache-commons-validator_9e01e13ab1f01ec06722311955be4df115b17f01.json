{"application": "apache-commons-validator", "csha": "9e01e13ab1f01ec06722311955be4df115b17f01", "files": [{"CreditCardValidator_cluster": {"actions": [{"root": "INS ImportDeclaration to CompilationUnit at 4", "operations": ["INS QualifiedName: java.io.Serializable to ImportDeclaration at 0", "INS ImportDeclaration to CompilationUnit at 4"]}, {"root": "INS SimpleType: Serializable to TypeDeclaration: class at 3", "operations": ["INS SimpleName: Serializable to SimpleType: Serializable at 0", "INS SimpleType: Serializable to TypeDeclaration: class at 3"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 11", "operations": ["INS SimpleType: CodeValidator to FieldDeclaration at 4", "INS Javadoc to FieldDeclaration at 0", "INS FieldDeclaration to TypeDeclaration: class at 11", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS TagElement to Javadoc at 0", "INS StringLiteral: \"^(3[47]\\\\d{13})$\" to ClassInstanceCreation at 1", "INS Modifier: static to FieldDeclaration at 2", "INS TextElement: American Express (Amex) Card Validator  to TagElement at 0", "INS SimpleName: LUHN_VALIDATOR to ClassInstanceCreation at 2", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS Modifier: public to FieldDeclaration at 1", "INS Modifier: final to FieldDeclaration at 3", "INS SimpleName: AMEX_VALIDATOR to VariableDeclarationFragment at 0"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 12", "operations": ["INS Modifier: final to FieldDeclaration at 3", "INS SimpleName: LUHN_VALIDATOR to ClassInstanceCreation at 2", "INS Javadoc to FieldDeclaration at 0", "INS Modifier: static to FieldDeclaration at 2", "INS StringLiteral: \"^(6011\\\\d{12})$\" to ClassInstanceCreation at 1", "INS FieldDeclaration to TypeDeclaration: class at 12", "INS Modifier: public to FieldDeclaration at 1", "INS TagElement to Javadoc at 0", "INS SimpleType: CodeValidator to FieldDeclaration at 4", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS TextElement: Discover Card Validator  to TagElement at 0", "INS SimpleName: DISCOVER_VALIDATOR to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 13", "operations": ["INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS SimpleName: CodeValidator to SimpleType: CodeValidator at 0", "INS SimpleType: CodeValidator to ClassInstanceCreation at 0", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS Modifier: final to FieldDeclaration at 3", "INS Modifier: static to FieldDeclaration at 2", "INS TagElement to Javadoc at 0", "INS SimpleName: CodeValidator to SimpleType: CodeValidator at 0", "INS SimpleName: MASTERCARD_VALIDATOR to VariableDeclarationFragment at 0", "INS SimpleType: CodeValidator to FieldDeclaration at 4", "INS FieldDeclaration to TypeDeclaration: class at 13", "INS SimpleName: LUHN_VALIDATOR to ClassInstanceCreation at 2", "INS Modifier: public to FieldDeclaration at 1", "INS TextElement: Mastercard Card Validator  to TagElement at 0", "INS Javadoc to FieldDeclaration at 0", "INS StringLiteral: \"^(5[1-5]\\\\d{14})$\" to ClassInstanceCreation at 1"]}, {"root": "INS FieldDeclaration to TypeDeclaration: class at 14", "operations": ["INS FieldDeclaration to TypeDeclaration: class at 14", "INS SimpleType: CodeValidator to FieldDeclaration at 4", "INS StringLiteral: \"^(4)(\\\\d{12}|\\\\d{15})$\" to ClassInstanceCreation at 1", "INS SimpleName: LUHN_VALIDATOR to ClassInstanceCreation at 2", "INS Modifier: public to FieldDeclaration at 1", "INS SimpleType: CodeValidator to ClassInstanceCreation at 0", "INS TextElement: Visa Card Validator  to TagElement at 0", "INS SimpleName: CodeValidator to SimpleType: CodeValidator at 0", "INS VariableDeclarationFragment to FieldDeclaration at 5", "INS Modifier: static to FieldDeclaration at 2", "INS Modifier: final to FieldDeclaration at 3", "INS SimpleName: VISA_VALIDATOR to VariableDeclarationFragment at 0", "INS ClassInstanceCreation to VariableDeclarationFragment at 1", "INS Javadoc to FieldDeclaration at 0", "INS TagElement to Javadoc at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 16", "operations": ["INS ExpressionStatement to Block at 0", "INS SuperConstructorInvocation to Block at 0", "INS SimpleName: AMEX_VALIDATOR to MethodInvocation at 2", "INS SimpleName: CreditCardValidator to MethodDeclaration at 2", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0", "INS SimpleName: add to MethodInvocation at 1", "INS IfStatement to Block at 4", "INS IfStatement to Block at 5", "INS SimpleName: add to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS SimpleName: MASTERCARD_VALIDATOR to MethodInvocation at 2", "INS MethodDeclaration to TypeDeclaration: class at 16", "INS Block to MethodDeclaration at 4", "INS IfStatement to Block at 3", "INS Modifier: public to MethodDeclaration at 1", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 17", "operations": ["INS StringLiteral: \"Card validators are missing\" to ClassInstanceCreation at 1", "INS InfixExpression: < to ForStatement at 1", "INS SimpleName: CreditCardValidator to MethodDeclaration at 2", "INS Block to ForStatement at 3", "INS IfStatement to Block at 0", "INS PostfixExpression: ++ to ForStatement at 2", "INS ForStatement to Block at 1", "INS InfixExpression: == to IfStatement at 0", "INS ArrayAccess to MethodInvocation at 2", "INS Modifier: public to MethodDeclaration at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: creditCardValidators to InfixExpression: == at 0", "INS SimpleName: i to VariableDeclarationFragment at 0", "INS ThrowStatement to Block at 0", "INS Javadoc to MethodDeclaration at 0", "INS VariableDeclarationFragment to VariableDeclarationExpression at 1", "INS SimpleName: creditCardValidators to ArrayAccess at 0", "INS QualifiedName: creditCardValidators.length to InfixExpression: < at 1", "INS SimpleName: i to InfixExpression: < at 0", "INS ClassInstanceCreation to ThrowStatement at 0", "INS SimpleName: i to PostfixExpression: ++ at 0", "INS ExpressionStatement to Block at 0", "INS Block to IfStatement at 1", "INS SimpleName: i to ArrayAccess at 1", "INS MethodDeclaration to TypeDeclaration: class at 17", "INS SimpleType: IllegalArgumentException to ClassInstanceCreation at 0", "INS Block to MethodDeclaration at 4", "INS PrimitiveType: int to VariableDeclarationExpression at 0", "INS VariableDeclarationExpression to ForStatement at 0", "INS NumberLiteral: 0 to VariableDeclarationFragment at 1", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from TypeDeclaration: class", "operations": ["MOV MethodDeclaration to TypeDeclaration: class at 18"]}, {"root": "INS MethodDeclaration to TypeDeclaration: class at 19", "operations": ["INS ThisExpression to FieldAccess at 0", "INS WhileStatement to Block at 3", "INS NullLiteral to InfixExpression: != at 1", "INS MethodInvocation to Assignment: = at 1", "INS TextElement: if invalid. to TagElement: @return at 1", "INS Block to WhileStatement at 1", "INS TextElement:  The card number if valid or <code>null</code> to TagElement: @return at 0", "INS InfixExpression: || to IfStatement at 0", "INS NullLiteral to ReturnStatement at 0", "INS TagElement: @return to Javadoc at 2", "INS Block to MethodDeclaration at 5", "INS SimpleName: iterator to MethodInvocation at 1", "INS Block to IfStatement at 1", "INS NullLiteral to InfixExpression: == at 1", "INS SimpleName: result to VariableDeclarationFragment at 0", "INS VariableDeclarationStatement to Block at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS SimpleName: result to ReturnStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: Object to SimpleType: Object at 0", "INS MethodInvocation to WhileStatement at 0", "INS NullLiteral to VariableDeclarationFragment at 1", "INS SimpleName: result to Assignment: = at 0", "INS TextElement: Checks if the field is a valid credit card number. to TagElement at 0", "INS TagElement to Javadoc at 0", "INS SimpleName: hasNext to MethodInvocation at 1", "INS MethodDeclaration to TypeDeclaration: class at 19", "INS SimpleType: Object to VariableDeclarationStatement at 0", "INS NullLiteral to ReturnStatement at 0", "INS Javadoc to MethodDeclaration at 0", "INS MethodInvocation to VariableDeclarationFragment at 1", "INS SimpleName: result to InfixExpression: != at 0", "INS TagElement: @param to Javadoc at 1", "INS ReturnStatement to Block at 4", "INS SimpleName: validate to MethodDeclaration at 3", "INS InfixExpression: != to IfStatement at 0", "INS SimpleType: Object to MethodDeclaration at 2", "INS TextElement:  The card number to validate. to TagElement: @param at 1", "INS VariableDeclarationFragment to VariableDeclarationStatement at 1", "INS Block to IfStatement at 1", "INS SimpleName: types to MethodInvocation at 0", "INS SimpleType: Iterator to VariableDeclarationStatement at 0", "INS IfStatement to Block at 2", "INS SimpleName: card to TagElement: @param at 0", "INS Assignment: = to ExpressionStatement at 0", "INS ReturnStatement to Block at 0", "INS SimpleName: card to InfixExpression: == at 0", "INS VariableDeclarationStatement to Block at 2", "INS InfixExpression: == to InfixExpression: || at 0", "INS IfStatement to Block at 0", "INS FieldAccess to MethodInvocation at 0", "INS ExpressionStatement to Block at 1", "INS SimpleName: cardTypes to FieldAccess at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 3"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Javadoc to MethodDeclaration at 0", "MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "UPDATE from indexOf to isValid", "operations": ["UPD SimpleName: indexOf from indexOf to isValid", "UPD SimpleName: matches from matches to isValid"]}, {"root": "INS Block to MethodDeclaration at 5", "operations": ["INS WhileStatement to Block at 2", "INS Block to WhileStatement at 1", "INS IfStatement to Block at 0", "INS InfixExpression: || to IfStatement at 0", "INS Block to MethodDeclaration at 5", "INS MethodInvocation to IfStatement at 0", "INS IfStatement to Block at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV Modifier: public to MethodDeclaration at 1"]}, {"root": "MOVE from MethodDeclaration", "operations": ["MOV SingleVariableDeclaration to MethodDeclaration at 4"]}, {"root": "UPDATE from CreditCardType to CodeValidator", "operations": ["UPD SimpleName: CreditCardType from CreditCardType to CodeValidator", "UPD SimpleName: Mastercard from Mastercard to CodeValidator", "UPD SimpleType: Discover from Discover to CodeValidator", "UPD SimpleType: String from String to CodeValidator", "UPD SimpleName: Visa from Visa to CodeValidator", "UPD SimpleType: Amex from Amex to CodeValidator", "UPD SimpleName: Discover from Discover to CodeValidator", "UPD SimpleType: String from String to CodeValidator", "UPD SimpleName: String from String to CodeValidator", "UPD SimpleName: String from String to CodeValidator", "UPD SimpleName: String from String to CodeValidator", "UPD SimpleName: Amex from Amex to CodeValidator"]}, {"root": "MOVE from SimpleType: CodeValidator", "operations": ["MOV SimpleName: Visa to SimpleType: CodeValidator at 0"]}, {"root": "MOVE from SimpleType: CodeValidator", "operations": ["MOV SimpleName: Mastercard to SimpleType: CodeValidator at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1"]}, {"root": "MOVE from Block", "operations": ["MOV IfStatement to Block at 2"]}, {"root": "MOVE from Javadoc", "operations": ["MOV TagElement: @since to Javadoc at 1", "MOV TagElement to Javadoc at 0"]}, {"root": "UPDATE from @since to @param", "operations": ["UPD TagElement: @since from @since to @param"]}, {"root": "INS ArrayType: CodeValidator[] to SingleVariableDeclaration at 0", "operations": ["INS Dimension to ArrayType: CodeValidator[] at 1", "INS SimpleType: CodeValidator to ArrayType: CodeValidator[] at 0", "INS ArrayType: CodeValidator[] to SingleVariableDeclaration at 0"]}, {"root": "UPDATE from card to creditCardValidators", "operations": ["UPD SimpleName: card from card to creditCardValidators"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 1", "MOV ReturnStatement to Block at 3"]}, {"root": "UPDATE from String to Object", "operations": ["UPD SimpleName: String from String to Object"]}, {"root": "MOVE from SimpleType: Object", "operations": ["MOV SimpleName: String to SimpleType: Object at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Amex to ClassInstanceCreation at 0"]}, {"root": "MOVE from ClassInstanceCreation", "operations": ["MOV SimpleType: Discover to ClassInstanceCreation at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "INS Block to IfStatement at 1", "operations": ["INS Block to IfStatement at 1", "INS ExpressionStatement to Block at 0", "INS MethodInvocation to ExpressionStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV MethodInvocation to IfStatement at 0"]}, {"root": "UPDATE from CreditCardType implementations define how validation is performed to Create a new CreditCardValidator with the specified ", "operations": ["UPD TextElement: CreditCardType implementations define how validation is performed from CreditCardType implementations define how validation is performed to Create a new CreditCardValidator with the specified "]}, {"root": "INS TagElement: @link to TagElement at 1", "operations": ["INS TagElement: @link to TagElement at 1", "INS SimpleName: CodeValidator to TagElement: @link at 0"]}, {"root": "UPDATE from for one type/brand of credit card. to s.", "operations": ["UPD TextElement: for one type/brand of credit card. from for one type/brand of credit card. to s."]}, {"root": "INS SimpleName: creditCardValidators to TagElement: @since at 0", "operations": ["INS SimpleName: creditCardValidators to TagElement: @since at 0"]}, {"root": "UPDATE from  Validator 1.1.2 to  Set of valid code validators", "operations": ["UPD TextElement:  Validator 1.1.2 from  Validator 1.1.2 to  Set of valid code validators"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from WhileStatement", "operations": ["MOV MethodInvocation to WhileStatement at 0"]}, {"root": "MOVE from SimpleType: CodeValidator", "operations": ["MOV SimpleName: CreditCardType to SimpleType: CodeValidator at 0"]}, {"root": "MOVE from Block", "operations": ["MOV ExpressionStatement to Block at 0"]}, {"root": "MOVE from SimpleType: CodeValidator", "operations": ["MOV SimpleName: String to SimpleType: CodeValidator at 0"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: == to InfixExpression: || at 0"]}, {"root": "MOVE from InfixExpression: ||", "operations": ["MOV InfixExpression: == to InfixExpression: || at 1", "MOV InfixExpression: == to InfixExpression: || at 1"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "UPDATE from String to Iterator", "operations": ["UPD SimpleName: String from String to Iterator"]}, {"root": "MOVE from SimpleType: Iterator", "operations": ["MOV SimpleName: String to SimpleType: Iterator at 0"]}, {"root": "UPDATE from card to types", "operations": ["UPD SimpleName: card from card to types", "UPD SimpleName: PREFIX from PREFIX to types"]}, {"root": "MOVE from VariableDeclarationFragment", "operations": ["MOV SimpleName: PREFIX to VariableDeclarationFragment at 0"]}, {"root": "MOVE from Block", "operations": ["MOV VariableDeclarationStatement to Block at 0"]}, {"root": "UPDATE from 13 to 0", "operations": ["UPD NumberLiteral: 13 from 13 to 0", "UPD NumberLiteral: 16 from 16 to 0"]}, {"root": "MOVE from IfStatement", "operations": ["MOV Block to IfStatement at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0"]}, {"root": "UPDATE from substring to add", "operations": ["UPD SimpleName: substring from substring to add", "UPD SimpleName: type from type to add"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: matches to MethodInvocation at 2", "MOV SimpleName: type to MethodInvocation at 1"]}, {"root": "UPDATE from matches to VISA_VALIDATOR", "operations": ["UPD SimpleName: matches from matches to VISA_VALIDATOR"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV FieldAccess to MethodInvocation at 0"]}, {"root": "UPDATE from type to DISCOVER_VALIDATOR", "operations": ["UPD SimpleName: type from type to DISCOVER_VALIDATOR"]}, {"root": "UPDATE from card to cardTypes", "operations": ["UPD SimpleName: card from card to cardTypes"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: substring to MethodInvocation at 1", "MOV SimpleName: card to MethodInvocation at 0"]}, {"root": "UPDATE from PREFIX to type", "operations": ["UPD SimpleName: PREFIX from PREFIX to type", "UPD SimpleName: prefix2 from prefix2 to type", "UPD SimpleName: prefix2 from prefix2 to type", "UPD SimpleName: PREFIX from PREFIX to type"]}, {"root": "INS CastExpression to VariableDeclarationFragment at 1", "operations": ["INS SimpleName: CodeValidator to SimpleType: CodeValidator at 0", "INS SimpleType: CodeValidator to CastExpression at 0", "INS CastExpression to VariableDeclarationFragment at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: indexOf to MethodInvocation at 1", "MOV SimpleName: prefix2 to MethodInvocation at 2", "MOV SimpleName: PREFIX to MethodInvocation at 0"]}, {"root": "UPDATE from prefix2 to card", "operations": ["UPD SimpleName: prefix2 from prefix2 to card", "UPD SimpleName: prefix2 from prefix2 to card"]}, {"root": "INS CastExpression to VariableDeclarationFragment at 1", "operations": ["INS MethodInvocation to CastExpression at 1", "INS CastExpression to VariableDeclarationFragment at 1", "INS SimpleName: CodeValidator to SimpleType: CodeValidator at 0", "INS SimpleType: CodeValidator to CastExpression at 0"]}, {"root": "UPDATE from String to IllegalArgumentException", "operations": ["UPD SimpleName: String from String to IllegalArgumentException"]}, {"root": "MOVE from SimpleType: IllegalArgumentException", "operations": ["MOV SimpleName: String to SimpleType: IllegalArgumentException at 0"]}, {"root": "MOVE from CastExpression", "operations": ["MOV MethodInvocation to CastExpression at 1"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: indexOf to MethodInvocation at 1", "MOV SimpleName: PREFIX to MethodInvocation at 0", "MOV SimpleName: prefix2 to MethodInvocation at 2"]}, {"root": "UPDATE from indexOf to validate", "operations": ["UPD SimpleName: indexOf from indexOf to validate"]}, {"root": "MOVE from MethodInvocation", "operations": ["MOV SimpleName: card to MethodInvocation at 0", "MOV SimpleName: substring to MethodInvocation at 1"]}, {"root": "UPDATE from substring to next", "operations": ["UPD SimpleName: substring from substring to next"]}, {"root": "DEL MethodInvocation", "operations": ["DEL MethodInvocation", "DEL SimpleName: card"]}, {"root": "DEL SimpleType: String", "operations": ["DEL SimpleType: String"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL InfixExpression: +", "DEL StringLiteral: \",\"", "DEL SimpleName: substring", "DEL SimpleName: card", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL NumberLiteral: 2"]}, {"root": "DEL Block", "operations": ["DEL PrefixExpression: -", "DEL Block", "DEL SimpleName: length", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL InfixExpression: &&", "DEL SimpleName: card", "DEL MethodInvocation", "DEL InfixExpression: ==", "DEL NumberLiteral: 15", "DEL ParenthesizedExpression", "DEL ParenthesizedExpression", "DEL NumberLiteral: 1", "DEL InfixExpression: !=", "DEL ReturnStatement"]}, {"root": "DEL InfixExpression: +", "operations": ["DEL MethodInvocation", "DEL StringLiteral: \",\"", "DEL NumberLiteral: 0", "DEL InfixExpression: +", "DEL NumberLiteral: 2"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Modifier: public", "DEL IfStatement", "DEL ClassInstanceCreation", "DEL Block", "DEL SimpleName: add", "DEL SimpleName: CreditCardValidator", "DEL Block", "DEL ExpressionStatement", "DEL Block", "DEL ExpressionStatement", "DEL SimpleName: add", "DEL ExpressionStatement", "DEL Block", "DEL MethodInvocation", "DEL SimpleName: add", "DEL MethodInvocation", "DEL FieldAccess", "DEL SimpleName: add", "DEL IfStatement", "DEL IfStatement", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL ClassInstanceCreation", "DEL MethodInvocation", "DEL Block", "DEL ClassInstanceCreation", "DEL SimpleName: cardTypes", "DEL IfStatement", "DEL SimpleType: Visa", "DEL MethodDeclaration", "DEL SuperConstructorInvocation", "DEL ThisExpression", "DEL ExpressionStatement", "DEL SimpleType: Mastercard"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL Block", "DEL InfixExpression: <", "DEL SimpleName: length", "DEL SimpleName: CreditCardType", "DEL SimpleName: isValid", "DEL NumberLiteral: 13", "DEL ParenthesizedExpression", "DEL PrefixExpression: !", "DEL SimpleName: card", "DEL InfixExpression: >", "DEL ParenthesizedExpression", "DEL MethodDeclaration", "DEL SimpleName: LUHN_VALIDATOR", "DEL SimpleName: card", "DEL SimpleName: type", "DEL SimpleType: CreditCardType", "DEL WhileStatement", "DEL Modifier: public", "DEL Block", "DEL SimpleName: length", "DEL IfStatement", "DEL IfStatement", "DEL SimpleType: CreditCardType", "DEL InfixExpression: ||", "DEL SimpleName: card", "DEL MethodInvocation", "DEL Block", "DEL VariableDeclarationFragment", "DEL SimpleName: isValid", "DEL BooleanLiteral: false", "DEL ReturnStatement", "DEL NumberLiteral: 19", "DEL VariableDeclarationStatement", "DEL PrimitiveType: boolean", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL MethodInvocation", "DEL CastExpression"]}, {"root": "DEL MethodDeclaration", "operations": ["DEL TagElement: @since", "DEL MethodDeclaration", "DEL TextElement: validation algorithm.", "DEL TextElement:  The type that is now allowed to pass validation.", "DEL SingleVariableDeclaration", "DEL Javadoc", "DEL Block", "DEL SimpleName: CreditCardType", "DEL TextElement: Add an allowed CreditCardType that participates in the card ", "DEL TagElement: @param", "DEL TextElement:  Validator 1.1.2", "DEL SimpleName: type", "DEL PrimitiveType: void", "DEL SimpleType: CreditCardType", "DEL SimpleName: addAllowedCardType", "DEL SimpleName: type", "DEL TagElement", "DEL Modifier: public"]}, {"root": "DEL TypeDeclaration: interface", "operations": ["DEL SimpleName: card", "DEL MethodDeclaration", "DEL TextElement: card.  Note that this method is <strong>not</strong> responsible", "DEL TextElement: calling this method.  It is generally only required to valid the", "DEL Javadoc", "DEL TagElement", "DEL TextElement:  The card number, never null.", "DEL PrimitiveType: boolean", "DEL TextElement: type. ", "DEL SimpleName: matches", "DEL TagElement: @return", "DEL TextElement:  true if the number matches.", "DEL Javadoc", "DEL TypeDeclaration: interface", "DEL TextElement: Returns true if the card number matches this type of credit", "DEL Modifier: public", "DEL TagElement: @param", "DEL TextElement: for analyzing the general form of the card number because ", "DEL TextElement: <code>CreditCardValidator</code> performs those checks before ", "DEL TextElement: length and prefix of the number to determine if it's the correct ", "DEL SimpleName: CreditCardType"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL MethodInvocation", "DEL InfixExpression: &&", "DEL SimpleName: equals", "DEL NumberLiteral: 0", "DEL SimpleName: CreditCardType", "DEL Modifier: final", "DEL SimpleName: String", "DEL NumberLiteral: 1", "DEL SimpleName: PREFIX", "DEL TypeDeclaration: class", "DEL SimpleName: Visa", "DEL Modifier: private", "DEL Modifier: public", "DEL SimpleName: matches", "DEL Block", "DEL MethodDeclaration", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL ReturnStatement", "DEL TextElement: Change to support Visa Carte Blue used in France", "DEL SingleVariableDeclaration", "DEL StringLiteral: \"4\"", "DEL ParenthesizedExpression", "DEL TagElement", "DEL FieldDeclaration", "DEL SimpleType: String", "DEL TextElement: has been removed - see Bug 35926", "DEL SimpleName: PREFIX", "DEL VariableDeclarationFragment", "DEL Modifier: private", "DEL SimpleName: card", "DEL SimpleType: String", "DEL Modifier: static", "DEL PrimitiveType: boolean", "DEL Javadoc", "DEL InfixExpression: ||", "DEL SimpleType: CreditCardType"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL Modifier: private", "DEL SimpleName: CreditCardType", "DEL VariableDeclarationFragment", "DEL FieldDeclaration", "DEL Modifier: private", "DEL SimpleType: String", "DEL Modifier: static", "DEL SimpleName: PREFIX", "DEL TypeDeclaration: class", "DEL Modifier: final", "DEL SimpleName: Amex", "DEL SimpleType: CreditCardType", "DEL SimpleName: String", "DEL StringLiteral: \"34,37,\""]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL SimpleName: Discover", "DEL SimpleName: matches", "DEL InfixExpression: ==", "DEL Modifier: private", "DEL Modifier: static", "DEL SimpleName: PREFIX", "DEL MethodInvocation", "DEL SimpleName: equals", "DEL SimpleName: card", "DEL ParenthesizedExpression", "DEL FieldDeclaration", "DEL Modifier: private", "DEL SingleVariableDeclaration", "DEL MethodDeclaration", "DEL NumberLiteral: 4", "DEL SimpleType: CreditCardType", "DEL SimpleName: card", "DEL InfixExpression: &&", "DEL PrimitiveType: boolean", "DEL ReturnStatement", "DEL TypeDeclaration: class", "DEL SimpleName: PREFIX", "DEL SimpleType: String", "DEL StringLiteral: \"6011\"", "DEL SimpleName: card", "DEL SimpleName: length", "DEL SimpleType: String", "DEL MethodInvocation", "DEL SimpleName: substring", "DEL Modifier: final", "DEL SimpleName: String", "DEL ParenthesizedExpression", "DEL MethodInvocation", "DEL NumberLiteral: 0", "DEL VariableDeclarationFragment", "DEL Block", "DEL NumberLiteral: 16", "DEL SimpleName: CreditCardType"]}, {"root": "DEL TypeDeclaration: class", "operations": ["DEL NumberLiteral: 16", "DEL Modifier: private", "DEL SimpleName: card", "DEL SimpleType: String", "DEL Modifier: final", "DEL SingleVariableDeclaration", "DEL SimpleName: String", "DEL NumberLiteral: 1", "DEL PrefixExpression: -", "DEL Modifier: static", "DEL VariableDeclarationFragment", "DEL TypeDeclaration: class", "DEL ParenthesizedExpression", "DEL Modifier: public", "DEL Modifier: private", "DEL Block", "DEL InfixExpression: &&", "DEL MethodInvocation", "DEL ReturnStatement", "DEL MethodInvocation", "DEL SimpleName: length", "DEL SimpleType: CreditCardType", "DEL SimpleName: Mastercard", "DEL FieldDeclaration", "DEL ParenthesizedExpression", "DEL InfixExpression: ==", "DEL SimpleType: String", "DEL PrimitiveType: boolean", "DEL ParenthesizedExpression", "DEL InfixExpression: !=", "DEL SimpleName: card", "DEL SimpleName: matches", "DEL SimpleName: CreditCardType", "DEL StringLiteral: \"51,52,53,54,55,\"", "DEL MethodDeclaration"]}]}}, {"CreditCardValidator_diff": {"operations": ["Insert ImportDeclaration(9) into CompilationUnit(484) at 4", "Insert QualifiedName: java.io.Serializable(8) into ImportDeclaration(9) at 0", "Insert SimpleType: Serializable(39) into TypeDeclaration: class(483) at 3", "Insert FieldDeclaration(150) into TypeDeclaration: class(483) at 11", "Insert FieldDeclaration(166) into TypeDeclaration: class(483) at 12", "Insert FieldDeclaration(182) into TypeDeclaration: class(483) at 13", "Insert FieldDeclaration(198) into TypeDeclaration: class(483) at 14", "Insert MethodDeclaration(288) into TypeDeclaration: class(483) at 16", "Insert MethodDeclaration(336) into TypeDeclaration: class(483) at 17", "Move MethodDeclaration(467) into TypeDeclaration: class(483) at 18", "Insert MethodDeclaration(482) into TypeDeclaration: class(483) at 19", "Insert SimpleName: Serializable(38) into SimpleType: Serializable(39) at 0", "Insert Javadoc(137) into FieldDeclaration(150) at 0", "Insert Modifier: public(138) into FieldDeclaration(150) at 1", "Insert Modifier: static(139) into FieldDeclaration(150) at 2", "Insert Modifier: final(140) into FieldDeclaration(150) at 3", "Insert SimpleType: CodeValidator(142) into FieldDeclaration(150) at 4", "Insert VariableDeclarationFragment(149) into FieldDeclaration(150) at 5", "Insert Javadoc(153) into FieldDeclaration(166) at 0", "Insert Modifier: public(154) into FieldDeclaration(166) at 1", "Insert Modifier: static(155) into FieldDeclaration(166) at 2", "Insert Modifier: final(156) into FieldDeclaration(166) at 3", "Insert SimpleType: CodeValidator(158) into FieldDeclaration(166) at 4", "Insert VariableDeclarationFragment(165) into FieldDeclaration(166) at 5", "Insert Javadoc(169) into FieldDeclaration(182) at 0", "Insert Modifier: public(170) into FieldDeclaration(182) at 1", "Insert Modifier: static(171) into FieldDeclaration(182) at 2", "Insert Modifier: final(172) into FieldDeclaration(182) at 3", "Insert SimpleType: CodeValidator(174) into FieldDeclaration(182) at 4", "Insert VariableDeclarationFragment(181) into FieldDeclaration(182) at 5", "Insert Javadoc(185) into FieldDeclaration(198) at 0", "Insert Modifier: public(186) into FieldDeclaration(198) at 1", "Insert Modifier: static(187) into FieldDeclaration(198) at 2", "Insert Modifier: final(188) into FieldDeclaration(198) at 3", "Insert SimpleType: CodeValidator(190) into FieldDeclaration(198) at 4", "Insert VariableDeclarationFragment(197) into FieldDeclaration(198) at 5", "Move Javadoc(151) into MethodDeclaration(288) at 0", "Insert Modifier: public(220) into MethodDeclaration(288) at 1", "Insert SimpleName: CreditCardValidator(221) into MethodDeclaration(288) at 2", "Move SingleVariableDeclaration(156) into MethodDeclaration(288) at 3", "Insert Block(287) into MethodDeclaration(288) at 4", "Insert Javadoc(297) into MethodDeclaration(336) at 0", "Insert Modifier: public(298) into MethodDeclaration(336) at 1", "Insert SimpleName: CreditCardValidator(299) into MethodDeclaration(336) at 2", "Move SingleVariableDeclaration(364) into MethodDeclaration(336) at 3", "Insert Block(335) into MethodDeclaration(336) at 4", "Move Javadoc(236) into MethodDeclaration(402) at 0", "Update SimpleName: matches(432) to isValid", "Move SingleVariableDeclaration(243) into MethodDeclaration(402) at 4", "Insert Block(401) into MethodDeclaration(402) at 5", "Insert Javadoc(411) into MethodDeclaration(482) at 0", "Move Modifier: public(482) into MethodDeclaration(482) at 1", "Insert SimpleType: Object(414) into MethodDeclaration(482) at 2", "Insert SimpleName: validate(415) into MethodDeclaration(482) at 3", "Move SingleVariableDeclaration(436) into MethodDeclaration(482) at 4", "Insert Block(481) into MethodDeclaration(482) at 5", "Insert TagElement(136) into Javadoc(137) at 0", "Update SimpleName: Visa(175) to CodeValidator", "Move SimpleName: Visa(175) into SimpleType: CodeValidator(142) at 0", "Insert SimpleName: AMEX_VALIDATOR(143) into VariableDeclarationFragment(149) at 0", "Insert ClassInstanceCreation(148) into VariableDeclarationFragment(149) at 1", "Insert TagElement(152) into Javadoc(153) at 0", "Update SimpleName: Mastercard(205) to CodeValidator", "Move SimpleName: Mastercard(205) into SimpleType: CodeValidator(158) at 0", "Insert SimpleName: DISCOVER_VALIDATOR(159) into VariableDeclarationFragment(165) at 0", "Insert ClassInstanceCreation(164) into VariableDeclarationFragment(165) at 1", "Insert TagElement(168) into Javadoc(169) at 0", "Insert SimpleName: CodeValidator(173) into SimpleType: CodeValidator(174) at 0", "Insert SimpleName: MASTERCARD_VALIDATOR(175) into VariableDeclarationFragment(181) at 0", "Insert ClassInstanceCreation(180) into VariableDeclarationFragment(181) at 1", "Insert TagElement(184) into Javadoc(185) at 0", "Insert SimpleName: CodeValidator(189) into SimpleType: CodeValidator(190) at 0", "Insert SimpleName: VISA_VALIDATOR(191) into VariableDeclarationFragment(197) at 0", "Insert ClassInstanceCreation(196) into VariableDeclarationFragment(197) at 1", "Insert SuperConstructorInvocation(225) into Block(287) at 0", "Move VariableDeclarationStatement(166) into Block(287) at 1", "Move IfStatement(305) into Block(287) at 2", "Insert IfStatement(260) into Block(287) at 3", "Insert IfStatement(273) into Block(287) at 4", "Insert IfStatement(286) into Block(287) at 5", "Move TagElement(339) into Javadoc(297) at 0", "Update TagElement: @since(341) to @param", "Move TagElement: @since(341) into Javadoc(297) at 1", "Insert ArrayType: CodeValidator[](303) into SingleVariableDeclaration(305) at 0", "Update SimpleName: card(363) to creditCardValidators", "Insert IfStatement(315) into Block(335) at 0", "Insert ForStatement(334) into Block(335) at 1", "Insert IfStatement(364) into Block(401) at 0", "Move VariableDeclarationStatement(283) into Block(401) at 1", "Insert WhileStatement(398) into Block(401) at 2", "Move ReturnStatement(309) into Block(401) at 3", "Insert TagElement(404) into Javadoc(411) at 0", "Insert TagElement: @param(407) into Javadoc(411) at 1", "Insert TagElement: @return(410) into Javadoc(411) at 2", "Update SimpleName: String(485) to Object", "Move SimpleName: String(485) into SimpleType: Object(414) at 0", "Insert IfStatement(432) into Block(481) at 0", "Insert VariableDeclarationStatement(438) into Block(481) at 1", "Insert VariableDeclarationStatement(448) into Block(481) at 2", "Insert WhileStatement(478) into Block(481) at 3", "Insert ReturnStatement(480) into Block(481) at 4", "Insert TextElement: American Express (Amex) Card Validator (135) into TagElement(136) at 0", "Update SimpleType: Amex(191) to CodeValidator", "Move SimpleType: Amex(191) into ClassInstanceCreation(148) at 0", "Insert StringLiteral: \"^(3[47]\\\\d{13})$\"(146) into ClassInstanceCreation(148) at 1", "Insert SimpleName: LUHN_VALIDATOR(147) into ClassInstanceCreation(148) at 2", "Insert TextElement: Discover Card Validator (151) into TagElement(152) at 0", "Update SimpleType: Discover(221) to CodeValidator", "Move SimpleType: Discover(221) into ClassInstanceCreation(164) at 0", "Insert StringLiteral: \"^(6011\\\\d{12})$\"(162) into ClassInstanceCreation(164) at 1", "Insert SimpleName: LUHN_VALIDATOR(163) into ClassInstanceCreation(164) at 2", "Insert TextElement: Mastercard Card Validator (167) into TagElement(168) at 0", "Insert SimpleType: CodeValidator(177) into ClassInstanceCreation(180) at 0", "Insert StringLiteral: \"^(5[1-5]\\\\d{14})$\"(178) into ClassInstanceCreation(180) at 1", "Insert SimpleName: LUHN_VALIDATOR(179) into ClassInstanceCreation(180) at 2", "Insert TextElement: Visa Card Validator (183) into TagElement(184) at 0", "Insert SimpleType: CodeValidator(193) into ClassInstanceCreation(196) at 0", "Insert StringLiteral: \"^(4)(\\\\d{12}|\\\\d{15})$\"(194) into ClassInstanceCreation(196) at 1", "Insert SimpleName: LUHN_VALIDATOR(195) into ClassInstanceCreation(196) at 2", "Move MethodInvocation(170) into IfStatement(247) at 0", "Insert Block(246) into IfStatement(247) at 1", "Move MethodInvocation(185) into IfStatement(260) at 0", "Insert Block(259) into IfStatement(260) at 1", "Move MethodInvocation(200) into IfStatement(273) at 0", "Insert Block(272) into IfStatement(273) at 1", "Move MethodInvocation(215) into IfStatement(286) at 0", "Insert Block(285) into IfStatement(286) at 1", "Update TextElement: CreditCardType implementations define how validation is performed(337) to Create a new CreditCardValidator with the specified ", "Insert TagElement: @link(291) into TagElement(293) at 1", "Update TextElement: for one type/brand of credit card.(338) to s.", "Insert SimpleName: creditCardValidators(294) into TagElement: @param(296) at 0", "Update TextElement:  Validator 1.1.2(340) to  Set of valid code validators", "Insert SimpleType: CodeValidator(301) into ArrayType: CodeValidator[](303) at 0", "Insert Dimension(302) into ArrayType: CodeValidator[](303) at 1", "Insert InfixExpression: ==(308) into IfStatement(315) at 0", "Insert Block(314) into IfStatement(315) at 1", "Insert VariableDeclarationExpression(320) into ForStatement(334) at 0", "Insert InfixExpression: <(323) into ForStatement(334) at 1", "Insert PostfixExpression: ++(325) into ForStatement(334) at 2", "Insert Block(333) into ForStatement(334) at 3", "Insert InfixExpression: ||(360) into IfStatement(364) at 0", "Move Block(272) into IfStatement(364) at 1", "Move MethodInvocation(286) into WhileStatement(398) at 0", "Insert Block(397) into WhileStatement(398) at 1", "Insert TextElement: Checks if the field is a valid credit card number.(403) into TagElement(404) at 0", "Insert SimpleName: card(405) into TagElement: @param(407) at 0", "Insert TextElement:  The card number to validate.(406) into TagElement: @param(407) at 1", "Insert TextElement:  The card number if valid or <code>null</code>(408) into TagElement: @return(410) at 0", "Insert TextElement: if invalid.(409) into TagElement: @return(410) at 1", "Insert InfixExpression: ||(428) into IfStatement(432) at 0", "Insert Block(431) into IfStatement(432) at 1", "Insert SimpleType: Object(434) into VariableDeclarationStatement(438) at 0", "Insert VariableDeclarationFragment(437) into VariableDeclarationStatement(438) at 1", "Insert SimpleType: Iterator(440) into VariableDeclarationStatement(448) at 0", "Insert VariableDeclarationFragment(447) into VariableDeclarationStatement(448) at 1", "Insert MethodInvocation(451) into WhileStatement(478) at 0", "Insert Block(477) into WhileStatement(478) at 1", "Insert NullLiteral(479) into ReturnStatement(480) at 0", "Update SimpleName: Amex(190) to CodeValidator", "Update SimpleName: Discover(220) to CodeValidator", "Insert SimpleName: CodeValidator(176) into SimpleType: CodeValidator(177) at 0", "Update SimpleName: CreditCardType(287) to CodeValidator", "Move SimpleName: CreditCardType(287) into SimpleType: CodeValidator(193) at 0", "Insert ExpressionStatement(245) into Block(246) at 0", "Insert ExpressionStatement(258) into Block(259) at 0", "Insert ExpressionStatement(271) into Block(272) at 0", "Move ExpressionStatement(334) into Block(285) at 0", "Insert SimpleName: CodeValidator(290) into TagElement: @link(291) at 0", "Update SimpleName: String(361) to CodeValidator", "Move SimpleName: String(361) into SimpleType: CodeValidator(301) at 0", "Insert SimpleName: creditCardValidators(306) into InfixExpression: ==(308) at 0", "Insert NullLiteral(307) into InfixExpression: ==(308) at 1", "Insert ThrowStatement(313) into Block(314) at 0", "Insert PrimitiveType: int(316) into VariableDeclarationExpression(320) at 0", "Insert VariableDeclarationFragment(319) into VariableDeclarationExpression(320) at 1", "Insert SimpleName: i(321) into InfixExpression: <(323) at 0", "Insert QualifiedName: creditCardValidators.length(322) into InfixExpression: <(323) at 1", "Insert SimpleName: i(324) into PostfixExpression: ++(325) at 0", "Insert ExpressionStatement(332) into Block(333) at 0", "Move InfixExpression: ==(246) into InfixExpression: ||(360) at 0", "Move InfixExpression: ==(403) into InfixExpression: ||(360) at 1", "Move VariableDeclarationStatement(448) into Block(397) at 0", "Insert IfStatement(396) into Block(397) at 1", "Insert InfixExpression: ==(422) into InfixExpression: ||(428) at 0", "Move InfixExpression: ==(408) into InfixExpression: ||(428) at 1", "Insert ReturnStatement(430) into Block(431) at 0", "Insert SimpleName: Object(433) into SimpleType: Object(434) at 0", "Insert SimpleName: result(435) into VariableDeclarationFragment(437) at 0", "Insert NullLiteral(436) into VariableDeclarationFragment(437) at 1", "Update SimpleName: String(516) to Iterator", "Move SimpleName: String(516) into SimpleType: Iterator(440) at 0", "Update SimpleName: PREFIX(518) to types", "Move SimpleName: PREFIX(518) into VariableDeclarationFragment(447) at 0", "Insert MethodInvocation(446) into VariableDeclarationFragment(447) at 1", "Insert SimpleName: types(449) into MethodInvocation(451) at 0", "Insert SimpleName: hasNext(450) into MethodInvocation(451) at 1", "Move VariableDeclarationStatement(540) into Block(477) at 0", "Insert ExpressionStatement(469) into Block(477) at 1", "Insert IfStatement(476) into Block(477) at 2", "Insert MethodInvocation(244) into ExpressionStatement(245) at 0", "Insert MethodInvocation(257) into ExpressionStatement(258) at 0", "Insert MethodInvocation(270) into ExpressionStatement(271) at 0", "Insert ClassInstanceCreation(312) into ThrowStatement(313) at 0", "Insert SimpleName: i(317) into VariableDeclarationFragment(319) at 0", "Insert NumberLiteral: 0(318) into VariableDeclarationFragment(319) at 1", "Insert MethodInvocation(331) into ExpressionStatement(332) at 0", "Update NumberLiteral: 13(402) to 0", "Update SimpleType: String(438) to CodeValidator", "Insert MethodInvocation(392) into IfStatement(396) at 0", "Move Block(304) into IfStatement(396) at 1", "Insert SimpleName: card(420) into InfixExpression: ==(422) at 0", "Insert NullLiteral(421) into InfixExpression: ==(422) at 1", "Update NumberLiteral: 16(407) to 0", "Insert NullLiteral(429) into ReturnStatement(430) at 0", "Insert FieldAccess(444) into MethodInvocation(446) at 0", "Insert SimpleName: iterator(445) into MethodInvocation(446) at 1", "Update SimpleType: String(530) to CodeValidator", "Insert Assignment: =(468) into ExpressionStatement(469) at 0", "Insert InfixExpression: !=(472) into IfStatement(476) at 0", "Insert Block(475) into IfStatement(476) at 1", "Move FieldAccess(218) into MethodInvocation(244) at 0", "Update SimpleName: type(298) to add", "Move SimpleName: type(298) into MethodInvocation(244) at 1", "Update SimpleName: matches(299) to VISA_VALIDATOR", "Move SimpleName: matches(299) into MethodInvocation(244) at 2", "Move FieldAccess(203) into MethodInvocation(257) at 0", "Insert SimpleName: add(255) into MethodInvocation(257) at 1", "Insert SimpleName: AMEX_VALIDATOR(256) into MethodInvocation(257) at 2", "Move FieldAccess(188) into MethodInvocation(270) at 0", "Insert SimpleName: add(268) into MethodInvocation(270) at 1", "Insert SimpleName: MASTERCARD_VALIDATOR(269) into MethodInvocation(270) at 2", "Update SimpleName: type(332) to DISCOVER_VALIDATOR", "Insert SimpleType: IllegalArgumentException(310) into ClassInstanceCreation(312) at 0", "Insert StringLiteral: \"Card validators are missing\"(311) into ClassInstanceCreation(312) at 1", "Update SimpleName: card(391) to cardTypes", "Move SimpleName: card(391) into MethodInvocation(331) at 0", "Update SimpleName: substring(392) to add", "Move SimpleName: substring(392) into MethodInvocation(331) at 1", "Insert ArrayAccess(330) into MethodInvocation(331) at 2", "Update SimpleName: String(437) to CodeValidator", "Update SimpleName: prefix2(439) to type", "Insert CastExpression(386) into VariableDeclarationFragment(387) at 1", "Update SimpleName: PREFIX(449) to type", "Move SimpleName: PREFIX(449) into MethodInvocation(392) at 0", "Update SimpleName: indexOf(450) to isValid", "Move SimpleName: indexOf(450) into MethodInvocation(392) at 1", "Update SimpleName: prefix2(451) to card", "Move SimpleName: prefix2(451) into MethodInvocation(392) at 2", "Insert ThisExpression(442) into FieldAccess(444) at 0", "Insert SimpleName: cardTypes(443) into FieldAccess(444) at 1", "Update SimpleName: String(529) to CodeValidator", "Update SimpleName: prefix2(531) to type", "Insert CastExpression(460) into VariableDeclarationFragment(461) at 1", "Insert SimpleName: result(463) into Assignment: =(468) at 0", "Insert MethodInvocation(467) into Assignment: =(468) at 1", "Insert SimpleName: result(470) into InfixExpression: !=(472) at 0", "Insert NullLiteral(471) into InfixExpression: !=(472) at 1", "Insert ReturnStatement(474) into Block(475) at 0", "Update SimpleName: String(378) to IllegalArgumentException", "Move SimpleName: String(378) into SimpleType: IllegalArgumentException(310) at 0", "Insert SimpleName: creditCardValidators(328) into ArrayAccess(330) at 0", "Insert SimpleName: i(329) into ArrayAccess(330) at 1", "Insert SimpleType: CodeValidator(382) into CastExpression(386) at 0", "Move MethodInvocation(294) into CastExpression(386) at 1", "Insert SimpleType: CodeValidator(456) into CastExpression(460) at 0", "Insert MethodInvocation(459) into CastExpression(460) at 1", "Update SimpleName: PREFIX(541) to type", "Move SimpleName: PREFIX(541) into MethodInvocation(467) at 0", "Update SimpleName: indexOf(542) to validate", "Move SimpleName: indexOf(542) into MethodInvocation(467) at 1", "Update SimpleName: prefix2(543) to card", "Move SimpleName: prefix2(543) into MethodInvocation(467) at 2", "Insert SimpleName: result(473) into ReturnStatement(474) at 0", "Insert SimpleName: CodeValidator(381) into SimpleType: CodeValidator(382) at 0", "Insert SimpleName: CodeValidator(455) into SimpleType: CodeValidator(456) at 0", "Update SimpleName: card(532) to types", "Move SimpleName: card(532) into MethodInvocation(459) at 0", "Update SimpleName: substring(533) to next", "Move SimpleName: substring(533) into MethodInvocation(459) at 1", "Delete SimpleName: card(300)", "Delete MethodInvocation(301)", "Delete SimpleType: String(362)", "Delete SimpleName: card(440)", "Delete SimpleName: substring(441)", "Delete NumberLiteral: 0(442)", "Delete NumberLiteral: 2(443)", "Delete MethodInvocation(444)", "Delete StringLiteral: \",\"(445)", "Delete InfixExpression: +(446)", "Delete MethodInvocation(452)", "Delete NumberLiteral: 1(453)", "Delete PrefixExpression: -(454)", "Delete InfixExpression: !=(455)", "Delete ParenthesizedExpression(456)", "Delete SimpleName: card(457)", "Delete SimpleName: length(458)", "Delete MethodInvocation(459)", "Delete NumberLiteral: 15(460)", "Delete InfixExpression: ==(461)", "Delete ParenthesizedExpression(462)", "Delete InfixExpression: &&(463)", "Delete ParenthesizedExpression(464)", "Delete ReturnStatement(465)", "Delete Block(466)", "Delete NumberLiteral: 0(534)", "Delete NumberLiteral: 2(535)", "Delete MethodInvocation(536)", "Delete StringLiteral: \",\"(537)", "Delete InfixExpression: +(538)", "Delete Modifier: public(152)", "Delete SimpleName: CreditCardValidator(153)", "Delete SuperConstructorInvocation(157)", "Delete ThisExpression(171)", "Delete SimpleName: cardTypes(172)", "Delete FieldAccess(173)", "Delete SimpleName: add(174)", "Delete SimpleType: Visa(176)", "Delete ClassInstanceCreation(177)", "Delete MethodInvocation(178)", "Delete ExpressionStatement(179)", "Delete Block(180)", "Delete IfStatement(181)", "Delete SimpleName: add(189)", "Delete ClassInstanceCreation(192)", "Delete MethodInvocation(193)", "Delete ExpressionStatement(194)", "Delete Block(195)", "Delete IfStatement(196)", "Delete SimpleName: add(204)", "Delete SimpleType: Mastercard(206)", "Delete ClassInstanceCreation(207)", "Delete MethodInvocation(208)", "Delete ExpressionStatement(209)", "Delete Block(210)", "Delete IfStatement(211)", "Delete SimpleName: add(219)", "Delete ClassInstanceCreation(222)", "Delete MethodInvocation(223)", "Delete ExpressionStatement(224)", "Delete Block(225)", "Delete IfStatement(226)", "Delete Block(227)", "Delete MethodDeclaration(228)", "Delete Modifier: public(237)", "Delete PrimitiveType: boolean(238)", "Delete SimpleName: isValid(239)", "Delete ParenthesizedExpression(247)", "Delete SimpleName: card(248)", "Delete SimpleName: length(249)", "Delete MethodInvocation(250)", "Delete NumberLiteral: 13(251)", "Delete InfixExpression: <(252)", "Delete ParenthesizedExpression(253)", "Delete SimpleName: card(254)", "Delete SimpleName: length(255)", "Delete MethodInvocation(256)", "Delete NumberLiteral: 19(257)", "Delete InfixExpression: >(258)", "Delete ParenthesizedExpression(259)", "Delete InfixExpression: ||(260)", "Delete BooleanLiteral: false(261)", "Delete ReturnStatement(262)", "Delete Block(263)", "Delete IfStatement(264)", "Delete SimpleName: LUHN_VALIDATOR(265)", "Delete SimpleName: isValid(266)", "Delete SimpleName: card(267)", "Delete MethodInvocation(268)", "Delete PrefixExpression: !(269)", "Delete IfStatement(273)", "Delete SimpleType: CreditCardType(288)", "Delete SimpleName: type(289)", "Delete SimpleName: CreditCardType(290)", "Delete SimpleType: CreditCardType(291)", "Delete CastExpression(295)", "Delete VariableDeclarationFragment(296)", "Delete VariableDeclarationStatement(297)", "Delete Block(306)", "Delete WhileStatement(307)", "Delete Block(310)", "Delete MethodDeclaration(311)", "Delete TextElement: Add an allowed CreditCardType that participates in the card (312)", "Delete TextElement: validation algorithm.(313)", "Delete TagElement(314)", "Delete SimpleName: type(315)", "Delete TextElement:  The type that is now allowed to pass validation.(316)", "Delete TagElement: @param(317)", "Delete TextElement:  Validator 1.1.2(318)", "Delete TagElement: @since(319)", "Delete Javadoc(320)", "Delete Modifier: public(321)", "Delete PrimitiveType: void(322)", "Delete SimpleName: addAllowedCardType(323)", "Delete SimpleName: CreditCardType(324)", "Delete SimpleType: CreditCardType(325)", "Delete SimpleName: type(326)", "Delete SingleVariableDeclaration(327)", "Delete Block(335)", "Delete MethodDeclaration(336)", "Delete Javadoc(342)", "Delete Modifier: public(343)", "Delete SimpleName: CreditCardType(344)", "Delete TextElement: Returns true if the card number matches this type of credit(345)", "Delete TextElement: card.  Note that this method is <strong>not</strong> responsible(346)", "Delete TextElement: for analyzing the general form of the card number because (347)", "Delete TextElement: <code>CreditCardValidator</code> performs those checks before (348)", "Delete TextElement: calling this method.  It is generally only required to valid the(349)", "Delete TextElement: length and prefix of the number to determine if it's the correct (350)", "Delete TextElement: type. (351)", "Delete TagElement(352)", "Delete SimpleName: card(353)", "Delete TextElement:  The card number, never null.(354)", "Delete TagElement: @param(355)", "Delete TextElement:  true if the number matches.(356)", "Delete TagElement: @return(357)", "Delete Javadoc(358)", "Delete PrimitiveType: boolean(359)", "Delete SimpleName: matches(360)", "Delete MethodDeclaration(365)", "Delete TypeDeclaration: interface(366)", "Delete TextElement: Change to support Visa Carte Blue used in France(367)", "Delete TextElement: has been removed - see Bug 35926(368)", "Delete TagElement(369)", "Delete Javadoc(370)", "Delete Modifier: private(371)", "Delete SimpleName: Visa(372)", "Delete SimpleName: CreditCardType(373)", "Delete SimpleType: CreditCardType(374)", "Delete Modifier: private(375)", "Delete Modifier: static(376)", "Delete Modifier: final(377)", "Delete SimpleType: String(379)", "Delete SimpleName: PREFIX(380)", "Delete StringLiteral: \"4\"(381)", "Delete VariableDeclarationFragment(382)", "Delete FieldDeclaration(383)", "Delete Modifier: public(384)", "Delete PrimitiveType: boolean(385)", "Delete SimpleName: matches(386)", "Delete SimpleName: String(387)", "Delete SimpleType: String(388)", "Delete SimpleName: card(389)", "Delete SingleVariableDeclaration(390)", "Delete NumberLiteral: 0(393)", "Delete NumberLiteral: 1(394)", "Delete MethodInvocation(395)", "Delete SimpleName: equals(396)", "Delete SimpleName: PREFIX(397)", "Delete MethodInvocation(398)", "Delete InfixExpression: ||(409)", "Delete ParenthesizedExpression(410)", "Delete InfixExpression: &&(411)", "Delete ParenthesizedExpression(412)", "Delete ReturnStatement(413)", "Delete Block(414)", "Delete MethodDeclaration(415)", "Delete TypeDeclaration: class(416)", "Delete Modifier: private(417)", "Delete SimpleName: Amex(418)", "Delete SimpleName: CreditCardType(419)", "Delete SimpleType: CreditCardType(420)", "Delete Modifier: private(421)", "Delete Modifier: static(422)", "Delete Modifier: final(423)", "Delete SimpleName: String(424)", "Delete SimpleType: String(425)", "Delete SimpleName: PREFIX(426)", "Delete StringLiteral: \"34,37,\"(427)", "Delete VariableDeclarationFragment(428)", "Delete FieldDeclaration(429)", "Delete TypeDeclaration: class(468)", "Delete Modifier: private(469)", "Delete SimpleName: Discover(470)", "Delete SimpleName: CreditCardType(471)", "Delete SimpleType: CreditCardType(472)", "Delete Modifier: private(473)", "Delete Modifier: static(474)", "Delete Modifier: final(475)", "Delete SimpleName: String(476)", "Delete SimpleType: String(477)", "Delete SimpleName: PREFIX(478)", "Delete StringLiteral: \"6011\"(479)", "Delete VariableDeclarationFragment(480)", "Delete FieldDeclaration(481)", "Delete PrimitiveType: boolean(483)", "Delete SimpleName: matches(484)", "Delete SimpleType: String(486)", "Delete SimpleName: card(487)", "Delete SingleVariableDeclaration(488)", "Delete SimpleName: card(489)", "Delete SimpleName: substring(490)", "Delete NumberLiteral: 0(491)", "Delete NumberLiteral: 4(492)", "Delete MethodInvocation(493)", "Delete SimpleName: equals(494)", "Delete SimpleName: PREFIX(495)", "Delete MethodInvocation(496)", "Delete SimpleName: card(497)", "Delete SimpleName: length(498)", "Delete MethodInvocation(499)", "Delete NumberLiteral: 16(500)", "Delete InfixExpression: ==(501)", "Delete ParenthesizedExpression(502)", "Delete InfixExpression: &&(503)", "Delete ParenthesizedExpression(504)", "Delete ReturnStatement(505)", "Delete Block(506)", "Delete MethodDeclaration(507)", "Delete TypeDeclaration: class(508)", "Delete Modifier: private(509)", "Delete SimpleName: Mastercard(510)", "Delete SimpleName: CreditCardType(511)", "Delete SimpleType: CreditCardType(512)", "Delete Modifier: private(513)", "Delete Modifier: static(514)", "Delete Modifier: final(515)", "Delete SimpleType: String(517)", "Delete StringLiteral: \"51,52,53,54,55,\"(519)", "Delete VariableDeclarationFragment(520)", "Delete FieldDeclaration(521)", "Delete Modifier: public(522)", "Delete PrimitiveType: boolean(523)", "Delete SimpleName: matches(524)", "Delete SimpleName: String(525)", "Delete SimpleType: String(526)", "Delete SimpleName: card(527)", "Delete SingleVariableDeclaration(528)", "Delete MethodInvocation(544)", "Delete NumberLiteral: 1(545)", "Delete PrefixExpression: -(546)", "Delete InfixExpression: !=(547)", "Delete ParenthesizedExpression(548)", "Delete SimpleName: card(549)", "Delete SimpleName: length(550)", "Delete MethodInvocation(551)", "Delete NumberLiteral: 16(552)", "Delete InfixExpression: ==(553)", "Delete ParenthesizedExpression(554)", "Delete InfixExpression: &&(555)", "Delete ParenthesizedExpression(556)", "Delete ReturnStatement(557)", "Delete Block(558)", "Delete MethodDeclaration(559)", "Delete TypeDeclaration: class(560)"]}}], "commit_stats": [{"total_files": 2, "deleted_files": 0, "testing": "True", "maintenance": "False", "build": "False"}]}